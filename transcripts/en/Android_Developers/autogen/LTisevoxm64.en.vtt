WEBVTT
Kind: captions
Language: en

00:00:07.580 --> 00:00:10.820 align:start position:0%
 
hi<00:00:08.580><c> I'm</c><00:00:09.210><c> Peter</c><00:00:09.510><c> Brinkman</c><00:00:09.929><c> an</c><00:00:10.080><c> engineer</c><00:00:10.530><c> on</c><00:00:10.559><c> the</c>

00:00:10.820 --> 00:00:10.830 align:start position:0%
hi I'm Peter Brinkman an engineer on the
 

00:00:10.830 --> 00:00:12.530 align:start position:0%
hi I'm Peter Brinkman an engineer on the
speech<00:00:11.130><c> infrastructure</c><00:00:11.849><c> team</c><00:00:12.000><c> in</c><00:00:12.210><c> New</c><00:00:12.300><c> York</c>

00:00:12.530 --> 00:00:12.540 align:start position:0%
speech infrastructure team in New York
 

00:00:12.540 --> 00:00:14.660 align:start position:0%
speech infrastructure team in New York
and<00:00:12.719><c> today</c><00:00:13.590><c> I'd</c><00:00:13.740><c> like</c><00:00:13.769><c> to</c><00:00:13.950><c> tell</c><00:00:14.190><c> you</c><00:00:14.340><c> about</c><00:00:14.370><c> my</c>

00:00:14.660 --> 00:00:14.670 align:start position:0%
and today I'd like to tell you about my
 

00:00:14.670 --> 00:00:16.550 align:start position:0%
and today I'd like to tell you about my
twenty<00:00:14.969><c> percent</c><00:00:15.269><c> project</c><00:00:15.780><c> the</c><00:00:15.990><c> patch</c><00:00:16.260><c> field</c>

00:00:16.550 --> 00:00:16.560 align:start position:0%
twenty percent project the patch field
 

00:00:16.560 --> 00:00:18.920 align:start position:0%
twenty percent project the patch field
audio<00:00:16.890><c> architecture</c><00:00:17.490><c> for</c><00:00:17.640><c> Android</c><00:00:18.029><c> in</c><00:00:18.810><c> a</c>

00:00:18.920 --> 00:00:18.930 align:start position:0%
audio architecture for Android in a
 

00:00:18.930 --> 00:00:20.900 align:start position:0%
audio architecture for Android in a
nutshell<00:00:19.109><c> the</c><00:00:19.529><c> idea</c><00:00:19.830><c> is</c><00:00:20.100><c> to</c><00:00:20.430><c> allow</c><00:00:20.609><c> you</c><00:00:20.670><c> to</c>

00:00:20.900 --> 00:00:20.910 align:start position:0%
nutshell the idea is to allow you to
 

00:00:20.910 --> 00:00:22.670 align:start position:0%
nutshell the idea is to allow you to
implement<00:00:21.119><c> audio</c><00:00:21.660><c> functionality</c><00:00:22.350><c> such</c><00:00:22.619><c> as</c>

00:00:22.670 --> 00:00:22.680 align:start position:0%
implement audio functionality such as
 

00:00:22.680 --> 00:00:25.250 align:start position:0%
implement audio functionality such as
synthesizers<00:00:23.550><c> and</c><00:00:23.580><c> effects</c><00:00:24.269><c> with</c><00:00:24.930><c> minimum</c>

00:00:25.250 --> 00:00:25.260 align:start position:0%
synthesizers and effects with minimum
 

00:00:25.260 --> 00:00:27.679 align:start position:0%
synthesizers and effects with minimum
fuss<00:00:25.320><c> and</c><00:00:25.769><c> to</c><00:00:26.340><c> patch</c><00:00:26.550><c> them</c><00:00:26.730><c> together</c><00:00:27.119><c> in</c><00:00:27.480><c> a</c>

00:00:27.679 --> 00:00:27.689 align:start position:0%
fuss and to patch them together in a
 

00:00:27.689 --> 00:00:30.320 align:start position:0%
fuss and to patch them together in a
patch<00:00:28.560><c> field</c><00:00:28.949><c> as</c><00:00:29.160><c> you</c><00:00:29.220><c> would</c><00:00:29.699><c> in</c><00:00:29.849><c> a</c><00:00:29.939><c> recording</c>

00:00:30.320 --> 00:00:30.330 align:start position:0%
patch field as you would in a recording
 

00:00:30.330 --> 00:00:33.080 align:start position:0%
patch field as you would in a recording
studio<00:00:30.920><c> the</c><00:00:31.920><c> core</c><00:00:32.189><c> of</c><00:00:32.219><c> patch</c><00:00:32.579><c> field</c><00:00:32.910><c> is</c><00:00:33.059><c> a</c>

00:00:33.080 --> 00:00:33.090 align:start position:0%
studio the core of patch field is a
 

00:00:33.090 --> 00:00:34.610 align:start position:0%
studio the core of patch field is a
service<00:00:33.390><c> that</c><00:00:33.540><c> manages</c><00:00:34.140><c> the</c><00:00:34.320><c> signal</c>

00:00:34.610 --> 00:00:34.620 align:start position:0%
service that manages the signal
 

00:00:34.620 --> 00:00:36.950 align:start position:0%
service that manages the signal
processing<00:00:35.010><c> graph</c><00:00:35.340><c> and</c><00:00:35.610><c> it</c><00:00:36.210><c> also</c><00:00:36.390><c> acts</c><00:00:36.690><c> as</c><00:00:36.899><c> a</c>

00:00:36.950 --> 00:00:36.960 align:start position:0%
processing graph and it also acts as a
 

00:00:36.960 --> 00:00:39.830 align:start position:0%
processing graph and it also acts as a
central<00:00:37.320><c> hub</c><00:00:37.440><c> for</c><00:00:37.620><c> audio</c><00:00:38.190><c> so</c><00:00:38.610><c> the</c><00:00:39.480><c> service</c>

00:00:39.830 --> 00:00:39.840 align:start position:0%
central hub for audio so the service
 

00:00:39.840 --> 00:00:41.720 align:start position:0%
central hub for audio so the service
managers<00:00:40.410><c> all</c><00:00:40.620><c> your</c><00:00:40.800><c> audio</c><00:00:40.950><c> units</c><00:00:41.489><c> such</c><00:00:41.700><c> as</c>

00:00:41.720 --> 00:00:41.730 align:start position:0%
managers all your audio units such as
 

00:00:41.730 --> 00:00:45.860 align:start position:0%
managers all your audio units such as
synthesizers<00:00:42.660><c> or</c><00:00:43.140><c> effects</c><00:00:43.649><c> and</c><00:00:44.480><c> it</c><00:00:45.480><c> provides</c>

00:00:45.860 --> 00:00:45.870 align:start position:0%
synthesizers or effects and it provides
 

00:00:45.870 --> 00:00:47.750 align:start position:0%
synthesizers or effects and it provides
all<00:00:46.050><c> kinds</c><00:00:46.079><c> of</c><00:00:46.350><c> functionality</c><00:00:47.010><c> for</c><00:00:47.340><c> and</c><00:00:47.520><c> for</c>

00:00:47.750 --> 00:00:47.760 align:start position:0%
all kinds of functionality for and for
 

00:00:47.760 --> 00:00:50.029 align:start position:0%
all kinds of functionality for and for
connecting<00:00:48.180><c> them</c><00:00:48.390><c> now</c><00:00:49.379><c> you</c><00:00:49.440><c> can</c><00:00:49.739><c> run</c><00:00:49.920><c> the</c>

00:00:50.029 --> 00:00:50.039 align:start position:0%
connecting them now you can run the
 

00:00:50.039 --> 00:00:53.380 align:start position:0%
connecting them now you can run the
service<00:00:50.280><c> locally</c><00:00:50.910><c> in</c><00:00:51.120><c> your</c><00:00:51.420><c> app</c><00:00:51.570><c> or</c><00:00:51.840><c> remotely</c>

00:00:53.380 --> 00:00:53.390 align:start position:0%
service locally in your app or remotely
 

00:00:53.390 --> 00:00:55.910 align:start position:0%
service locally in your app or remotely
when<00:00:54.390><c> it's</c><00:00:54.539><c> running</c><00:00:54.629><c> locally</c><00:00:55.199><c> then</c>

00:00:55.910 --> 00:00:55.920 align:start position:0%
when it's running locally then
 

00:00:55.920 --> 00:00:57.439 align:start position:0%
when it's running locally then
essentially<00:00:56.370><c> it</c><00:00:56.579><c> gives</c><00:00:56.730><c> you</c><00:00:56.850><c> a</c><00:00:56.879><c> powerful</c><00:00:57.329><c> way</c>

00:00:57.439 --> 00:00:57.449 align:start position:0%
essentially it gives you a powerful way
 

00:00:57.449 --> 00:00:59.270 align:start position:0%
essentially it gives you a powerful way
of<00:00:57.480><c> organ</c><00:00:57.960><c> organizing</c><00:00:58.530><c> audio</c><00:00:58.829><c> within</c><00:00:59.129><c> your</c>

00:00:59.270 --> 00:00:59.280 align:start position:0%
of organ organizing audio within your
 

00:00:59.280 --> 00:01:02.119 align:start position:0%
of organ organizing audio within your
app<00:00:59.460><c> and</c><00:01:00.140><c> it</c><00:01:01.140><c> gives</c><00:01:01.350><c> you</c><00:01:01.469><c> also</c><00:01:01.710><c> a</c><00:01:01.739><c> couple</c><00:01:01.949><c> of</c>

00:01:02.119 --> 00:01:02.129 align:start position:0%
app and it gives you also a couple of
 

00:01:02.129 --> 00:01:04.729 align:start position:0%
app and it gives you also a couple of
other<00:01:02.280><c> nice</c><00:01:02.489><c> features</c><00:01:02.969><c> such</c><00:01:03.239><c> as</c><00:01:03.710><c> support</c><00:01:04.710><c> for</c>

00:01:04.729 --> 00:01:04.739 align:start position:0%
other nice features such as support for
 

00:01:04.739 --> 00:01:07.460 align:start position:0%
other nice features such as support for
metaphor<00:01:05.280><c> multiprocessors</c><00:01:06.350><c> when</c><00:01:07.350><c> it's</c>

00:01:07.460 --> 00:01:07.470 align:start position:0%
metaphor multiprocessors when it's
 

00:01:07.470 --> 00:01:09.530 align:start position:0%
metaphor multiprocessors when it's
running<00:01:07.590><c> remotely</c><00:01:08.250><c> you</c><00:01:08.909><c> get</c><00:01:09.060><c> an</c><00:01:09.240><c> added</c>

00:01:09.530 --> 00:01:09.540 align:start position:0%
running remotely you get an added
 

00:01:09.540 --> 00:01:12.289 align:start position:0%
running remotely you get an added
feature<00:01:09.570><c> namely</c><00:01:10.200><c> you</c><00:01:11.010><c> get</c><00:01:11.189><c> support</c><00:01:11.580><c> for</c><00:01:11.970><c> inter</c>

00:01:12.289 --> 00:01:12.299 align:start position:0%
feature namely you get support for inter
 

00:01:12.299 --> 00:01:14.630 align:start position:0%
feature namely you get support for inter
app<00:01:12.450><c> audio</c><00:01:12.840><c> routing</c><00:01:12.990><c> meaning</c><00:01:13.860><c> that</c><00:01:14.100><c> say</c><00:01:14.580><c> you</c>

00:01:14.630 --> 00:01:14.640 align:start position:0%
app audio routing meaning that say you
 

00:01:14.640 --> 00:01:16.550 align:start position:0%
app audio routing meaning that say you
might<00:01:14.909><c> have</c><00:01:15.090><c> one</c><00:01:15.299><c> app</c><00:01:15.540><c> that</c><00:01:15.840><c> just</c><00:01:15.869><c> acts</c><00:01:16.320><c> as</c><00:01:16.530><c> a</c>

00:01:16.550 --> 00:01:16.560 align:start position:0%
might have one app that just acts as a
 

00:01:16.560 --> 00:01:18.710 align:start position:0%
might have one app that just acts as a
synthesizer<00:01:17.159><c> you</c><00:01:17.880><c> may</c><00:01:18.030><c> have</c><00:01:18.210><c> another</c><00:01:18.450><c> app</c>

00:01:18.710 --> 00:01:18.720 align:start position:0%
synthesizer you may have another app
 

00:01:18.720 --> 00:01:20.719 align:start position:0%
synthesizer you may have another app
that<00:01:19.229><c> acts</c><00:01:19.470><c> as</c><00:01:19.710><c> an</c><00:01:19.860><c> effects</c><00:01:20.280><c> rack</c><00:01:20.490><c> you</c><00:01:20.700><c> can</c>

00:01:20.719 --> 00:01:20.729 align:start position:0%
that acts as an effects rack you can
 

00:01:20.729 --> 00:01:23.240 align:start position:0%
that acts as an effects rack you can
connect<00:01:21.210><c> them</c><00:01:21.450><c> and</c><00:01:21.630><c> then</c><00:01:22.290><c> all</c><00:01:22.619><c> your</c><00:01:22.860><c> signals</c>

00:01:23.240 --> 00:01:23.250 align:start position:0%
connect them and then all your signals
 

00:01:23.250 --> 00:01:26.710 align:start position:0%
connect them and then all your signals
will<00:01:23.400><c> flow</c><00:01:23.970><c> from</c><00:01:24.000><c> one</c><00:01:24.360><c> app</c><00:01:24.570><c> to</c><00:01:24.810><c> another</c><00:01:24.840><c> and</c>

00:01:26.710 --> 00:01:26.720 align:start position:0%
will flow from one app to another and
 

00:01:26.720 --> 00:01:29.200 align:start position:0%
will flow from one app to another and
you<00:01:27.720><c> get</c><00:01:27.869><c> a</c><00:01:27.900><c> lot</c><00:01:28.080><c> of</c><00:01:28.110><c> flexibility</c><00:01:28.710><c> that</c><00:01:28.950><c> way</c>

00:01:29.200 --> 00:01:29.210 align:start position:0%
you get a lot of flexibility that way
 

00:01:29.210 --> 00:01:32.719 align:start position:0%
you get a lot of flexibility that way
now<00:01:30.210><c> in</c><00:01:30.570><c> terms</c><00:01:30.810><c> of</c><00:01:30.960><c> AP</c><00:01:31.290><c> is</c><00:01:31.470><c> there</c><00:01:31.920><c> are</c><00:01:32.040><c> two</c><00:01:32.280><c> AP</c>

00:01:32.719 --> 00:01:32.729 align:start position:0%
now in terms of AP is there are two AP
 

00:01:32.729 --> 00:01:34.969 align:start position:0%
now in terms of AP is there are two AP
is<00:01:32.880><c> for</c><00:01:33.240><c> you</c><00:01:33.329><c> to</c><00:01:33.360><c> work</c><00:01:33.659><c> with</c><00:01:33.890><c> there's</c><00:01:34.890><c> a</c>

00:01:34.969 --> 00:01:34.979 align:start position:0%
is for you to work with there's a
 

00:01:34.979 --> 00:01:37.399 align:start position:0%
is for you to work with there's a
gunshot<00:01:35.310><c> there's</c><00:01:35.640><c> a</c><00:01:35.700><c> client</c><00:01:36.060><c> API</c><00:01:36.390><c> in</c><00:01:36.750><c> Java</c><00:01:37.020><c> and</c>

00:01:37.399 --> 00:01:37.409 align:start position:0%
gunshot there's a client API in Java and
 

00:01:37.409 --> 00:01:40.850 align:start position:0%
gunshot there's a client API in Java and
the<00:01:38.100><c> purpose</c><00:01:38.340><c> of</c><00:01:38.549><c> that</c><00:01:38.790><c> Java</c><00:01:39.180><c> API</c><00:01:39.600><c> is</c><00:01:39.960><c> to</c><00:01:40.710><c> let</c>

00:01:40.850 --> 00:01:40.860 align:start position:0%
the purpose of that Java API is to let
 

00:01:40.860 --> 00:01:42.980 align:start position:0%
the purpose of that Java API is to let
you<00:01:41.040><c> query</c><00:01:41.460><c> and</c><00:01:41.790><c> manipulate</c><00:01:42.509><c> the</c><00:01:42.659><c> signal</c>

00:01:42.980 --> 00:01:42.990 align:start position:0%
you query and manipulate the signal
 

00:01:42.990 --> 00:01:45.410 align:start position:0%
you query and manipulate the signal
processing<00:01:43.380><c> graph</c><00:01:43.740><c> so</c><00:01:44.009><c> you</c><00:01:44.070><c> can</c><00:01:44.340><c> get</c><00:01:44.490><c> a</c><00:01:44.729><c> list</c>

00:01:45.410 --> 00:01:45.420 align:start position:0%
processing graph so you can get a list
 

00:01:45.420 --> 00:01:47.780 align:start position:0%
processing graph so you can get a list
of<00:01:45.630><c> the</c><00:01:46.259><c> audio</c><00:01:46.770><c> modules</c><00:01:47.159><c> that</c><00:01:47.250><c> are</c><00:01:47.369><c> currently</c>

00:01:47.780 --> 00:01:47.790 align:start position:0%
of the audio modules that are currently
 

00:01:47.790 --> 00:01:49.819 align:start position:0%
of the audio modules that are currently
available<00:01:48.030><c> you</c><00:01:48.810><c> can</c><00:01:49.020><c> connect</c><00:01:49.590><c> all</c><00:01:49.799><c> your</c>

00:01:49.819 --> 00:01:49.829 align:start position:0%
available you can connect all your
 

00:01:49.829 --> 00:01:52.190 align:start position:0%
available you can connect all your
modules<00:01:50.399><c> you</c><00:01:50.700><c> can</c><00:01:50.729><c> disconnect</c><00:01:51.360><c> them</c><00:01:51.659><c> you</c><00:01:51.960><c> can</c>

00:01:52.190 --> 00:01:52.200 align:start position:0%
modules you can disconnect them you can
 

00:01:52.200 --> 00:01:55.609 align:start position:0%
modules you can disconnect them you can
enable<00:01:52.619><c> or</c><00:01:52.979><c> disable</c><00:01:53.159><c> them</c><00:01:53.729><c> and</c><00:01:54.259><c> you</c><00:01:55.259><c> can</c><00:01:55.470><c> do</c><00:01:55.590><c> a</c>

00:01:55.609 --> 00:01:55.619 align:start position:0%
enable or disable them and you can do a
 

00:01:55.619 --> 00:01:59.630 align:start position:0%
enable or disable them and you can do a
number<00:01:55.920><c> of</c><00:01:56.070><c> other</c><00:01:56.280><c> things</c><00:01:56.369><c> as</c><00:01:56.790><c> well</c><00:01:57.409><c> and</c><00:01:58.640><c> the</c>

00:01:59.630 --> 00:01:59.640 align:start position:0%
number of other things as well and the
 

00:01:59.640 --> 00:02:02.300 align:start position:0%
number of other things as well and the
second<00:01:59.969><c> API</c><00:02:00.270><c> is</c><00:02:00.659><c> the</c><00:02:01.020><c> audio</c><00:02:01.439><c> app</c><00:02:01.619><c> module</c><00:02:01.950><c> API</c>

00:02:02.300 --> 00:02:02.310 align:start position:0%
second API is the audio app module API
 

00:02:02.310 --> 00:02:04.850 align:start position:0%
second API is the audio app module API
itself<00:02:02.460><c> that</c><00:02:03.360><c> one</c><00:02:03.570><c> works</c><00:02:03.869><c> with</c><00:02:04.110><c> Java</c><00:02:04.409><c> as</c><00:02:04.680><c> well</c>

00:02:04.850 --> 00:02:04.860 align:start position:0%
itself that one works with Java as well
 

00:02:04.860 --> 00:02:07.249 align:start position:0%
itself that one works with Java as well
as<00:02:05.009><c> C</c><00:02:05.250><c> and</c><00:02:05.750><c> that's</c><00:02:06.750><c> what</c><00:02:06.930><c> you</c><00:02:07.049><c> use</c><00:02:07.229><c> for</c>

00:02:07.249 --> 00:02:07.259 align:start position:0%
as C and that's what you use for
 

00:02:07.259 --> 00:02:09.350 align:start position:0%
as C and that's what you use for
implementing<00:02:07.920><c> new</c><00:02:08.069><c> audio</c><00:02:08.610><c> functionalities</c>

00:02:09.350 --> 00:02:09.360 align:start position:0%
implementing new audio functionalities
 

00:02:09.360 --> 00:02:11.610 align:start position:0%
implementing new audio functionalities
such<00:02:09.390><c> as</c><00:02:09.959><c> well</c><00:02:10.379><c> synthesizers</c><00:02:11.190><c> and</c>

00:02:11.610 --> 00:02:11.620 align:start position:0%
such as well synthesizers and
 

00:02:11.620 --> 00:02:14.220 align:start position:0%
such as well synthesizers and
effects<00:02:12.569><c> all</c><00:02:13.569><c> right</c><00:02:13.720><c> let's</c><00:02:13.900><c> bring</c><00:02:14.080><c> up</c><00:02:14.170><c> a</c>

00:02:14.220 --> 00:02:14.230 align:start position:0%
effects all right let's bring up a
 

00:02:14.230 --> 00:02:17.250 align:start position:0%
effects all right let's bring up a
little<00:02:14.530><c> control</c><00:02:14.950><c> app</c><00:02:15.159><c> for</c><00:02:15.459><c> patch</c><00:02:15.640><c> field</c><00:02:16.260><c> so</c>

00:02:17.250 --> 00:02:17.260 align:start position:0%
little control app for patch field so
 

00:02:17.260 --> 00:02:19.380 align:start position:0%
little control app for patch field so
right<00:02:17.440><c> now</c><00:02:17.470><c> you</c><00:02:17.680><c> see</c><00:02:18.099><c> we</c><00:02:18.730><c> have</c><00:02:18.879><c> an</c><00:02:19.030><c> on/off</c>

00:02:19.380 --> 00:02:19.390 align:start position:0%
right now you see we have an on/off
 

00:02:19.390 --> 00:02:21.660 align:start position:0%
right now you see we have an on/off
button<00:02:19.780><c> for</c><00:02:20.019><c> enabling</c><00:02:20.319><c> or</c><00:02:20.769><c> disabling</c><00:02:20.799><c> audio</c>

00:02:21.660 --> 00:02:21.670 align:start position:0%
button for enabling or disabling audio
 

00:02:21.670 --> 00:02:24.270 align:start position:0%
button for enabling or disabling audio
processing<00:02:22.090><c> and</c><00:02:22.440><c> right</c><00:02:23.440><c> off</c><00:02:23.590><c> the</c><00:02:23.739><c> bat</c><00:02:23.920><c> we</c><00:02:23.950><c> get</c>

00:02:24.270 --> 00:02:24.280 align:start position:0%
processing and right off the bat we get
 

00:02:24.280 --> 00:02:27.449 align:start position:0%
processing and right off the bat we get
to<00:02:24.519><c> audio</c><00:02:24.879><c> modules</c><00:02:25.330><c> we</c><00:02:25.690><c> get</c><00:02:25.900><c> one</c><00:02:26.200><c> for</c><00:02:27.069><c> the</c>

00:02:27.449 --> 00:02:27.459 align:start position:0%
to audio modules we get one for the
 

00:02:27.459 --> 00:02:31.710 align:start position:0%
to audio modules we get one for the
microphones<00:02:28.090><c> of</c><00:02:28.329><c> the</c><00:02:28.450><c> device</c><00:02:28.750><c> so</c><00:02:29.200><c> we</c><00:02:29.409><c> see</c><00:02:30.720><c> 11</c>

00:02:31.710 --> 00:02:31.720 align:start position:0%
microphones of the device so we see 11
 

00:02:31.720 --> 00:02:33.930 align:start position:0%
microphones of the device so we see 11
audio<00:02:32.049><c> module</c><00:02:32.379><c> that</c><00:02:32.560><c> has</c><00:02:32.739><c> two</c><00:02:33.010><c> outputs</c><00:02:33.489><c> one</c>

00:02:33.930 --> 00:02:33.940 align:start position:0%
audio module that has two outputs one
 

00:02:33.940 --> 00:02:35.369 align:start position:0%
audio module that has two outputs one
for<00:02:34.180><c> one</c><00:02:34.510><c> for</c><00:02:34.690><c> each</c><00:02:34.780><c> of</c><00:02:34.959><c> the</c><00:02:35.079><c> built-in</c>

00:02:35.369 --> 00:02:35.379 align:start position:0%
for one for each of the built-in
 

00:02:35.379 --> 00:02:38.250 align:start position:0%
for one for each of the built-in
microphones<00:02:35.890><c> and</c><00:02:36.360><c> we</c><00:02:37.360><c> see</c><00:02:37.599><c> another</c><00:02:37.930><c> audio</c>

00:02:38.250 --> 00:02:38.260 align:start position:0%
microphones and we see another audio
 

00:02:38.260 --> 00:02:41.580 align:start position:0%
microphones and we see another audio
module<00:02:38.620><c> with</c><00:02:38.799><c> two</c><00:02:38.980><c> inputs</c><00:02:39.400><c> and</c><00:02:40.349><c> those</c><00:02:41.349><c> are</c><00:02:41.530><c> the</c>

00:02:41.580 --> 00:02:41.590 align:start position:0%
module with two inputs and those are the
 

00:02:41.590 --> 00:02:43.470 align:start position:0%
module with two inputs and those are the
inputs<00:02:41.769><c> for</c><00:02:42.159><c> the</c><00:02:42.310><c> left</c><00:02:42.489><c> speaker</c><00:02:42.640><c> and</c><00:02:43.150><c> for</c><00:02:43.390><c> the</c>

00:02:43.470 --> 00:02:43.480 align:start position:0%
inputs for the left speaker and for the
 

00:02:43.480 --> 00:02:45.680 align:start position:0%
inputs for the left speaker and for the
right<00:02:43.629><c> speaker</c><00:02:43.959><c> and</c><00:02:44.230><c> for</c><00:02:44.859><c> example</c><00:02:45.310><c> I</c><00:02:45.519><c> might</c>

00:02:45.680 --> 00:02:45.690 align:start position:0%
right speaker and for example I might
 

00:02:45.690 --> 00:02:49.410 align:start position:0%
right speaker and for example I might
say<00:02:46.690><c> connect</c><00:02:47.280><c> one</c><00:02:48.280><c> of</c><00:02:48.370><c> the</c><00:02:48.489><c> microphones</c><00:02:49.060><c> to</c>

00:02:49.410 --> 00:02:49.420 align:start position:0%
say connect one of the microphones to
 

00:02:49.420 --> 00:02:51.930 align:start position:0%
say connect one of the microphones to
one<00:02:49.569><c> of</c><00:02:49.720><c> the</c><00:02:49.840><c> speakers</c><00:02:50.260><c> and</c><00:02:50.470><c> if</c><00:02:51.370><c> I</c><00:02:51.489><c> were</c><00:02:51.700><c> to</c>

00:02:51.930 --> 00:02:51.940 align:start position:0%
one of the speakers and if I were to
 

00:02:51.940 --> 00:02:54.030 align:start position:0%
one of the speakers and if I were to
turn<00:02:52.120><c> audio</c><00:02:52.780><c> processing</c><00:02:53.230><c> on</c><00:02:53.500><c> right</c><00:02:53.769><c> now</c><00:02:53.799><c> we</c>

00:02:54.030 --> 00:02:54.040 align:start position:0%
turn audio processing on right now we
 

00:02:54.040 --> 00:02:56.130 align:start position:0%
turn audio processing on right now we
would<00:02:54.310><c> get</c><00:02:54.459><c> horrible</c><00:02:54.819><c> feedback</c><00:02:55.239><c> so</c><00:02:55.540><c> let's</c><00:02:55.959><c> not</c>

00:02:56.130 --> 00:02:56.140 align:start position:0%
would get horrible feedback so let's not
 

00:02:56.140 --> 00:03:00.589 align:start position:0%
would get horrible feedback so let's not
do<00:02:56.290><c> that</c><00:02:56.579><c> instead</c><00:02:58.470><c> let's</c><00:02:59.470><c> launch</c><00:02:59.709><c> another</c><00:02:59.980><c> app</c>

00:03:00.589 --> 00:03:00.599 align:start position:0%
do that instead let's launch another app
 

00:03:00.599 --> 00:03:04.410 align:start position:0%
do that instead let's launch another app
so<00:03:01.799><c> this</c><00:03:02.799><c> one</c><00:03:02.980><c> is</c><00:03:03.129><c> a</c><00:03:03.159><c> very</c><00:03:03.430><c> simple</c><00:03:03.640><c> app</c><00:03:03.970><c> that</c>

00:03:04.410 --> 00:03:04.420 align:start position:0%
so this one is a very simple app that
 

00:03:04.420 --> 00:03:06.390 align:start position:0%
so this one is a very simple app that
just<00:03:04.450><c> loads</c><00:03:04.930><c> a</c><00:03:05.200><c> WAV</c><00:03:05.409><c> file</c><00:03:05.680><c> and</c><00:03:05.859><c> gets</c><00:03:06.010><c> ready</c><00:03:06.159><c> to</c>

00:03:06.390 --> 00:03:06.400 align:start position:0%
just loads a WAV file and gets ready to
 

00:03:06.400 --> 00:03:08.759 align:start position:0%
just loads a WAV file and gets ready to
play<00:03:06.609><c> it</c><00:03:06.640><c> and</c><00:03:06.909><c> when</c><00:03:07.510><c> we</c><00:03:07.629><c> go</c><00:03:07.750><c> back</c><00:03:07.989><c> to</c><00:03:08.230><c> our</c>

00:03:08.759 --> 00:03:08.769 align:start position:0%
play it and when we go back to our
 

00:03:08.769 --> 00:03:13.050 align:start position:0%
play it and when we go back to our
control<00:03:09.489><c> app</c><00:03:09.700><c> we</c><00:03:10.569><c> see</c><00:03:10.810><c> that</c><00:03:11.140><c> a</c><00:03:11.409><c> new</c><00:03:12.060><c> audio</c>

00:03:13.050 --> 00:03:13.060 align:start position:0%
control app we see that a new audio
 

00:03:13.060 --> 00:03:14.520 align:start position:0%
control app we see that a new audio
module<00:03:13.390><c> has</c><00:03:13.569><c> appeared</c><00:03:13.930><c> and</c><00:03:14.200><c> so</c><00:03:14.349><c> now</c><00:03:14.470><c> we</c>

00:03:14.520 --> 00:03:14.530 align:start position:0%
module has appeared and so now we
 

00:03:14.530 --> 00:03:17.250 align:start position:0%
module has appeared and so now we
haven't<00:03:14.829><c> have</c><00:03:15.220><c> an</c><00:03:15.340><c> audio</c><00:03:15.609><c> module</c><00:03:15.940><c> for</c><00:03:16.720><c> our</c><00:03:16.959><c> wav</c>

00:03:17.250 --> 00:03:17.260 align:start position:0%
haven't have an audio module for our wav
 

00:03:17.260 --> 00:03:20.670 align:start position:0%
haven't have an audio module for our wav
file<00:03:17.560><c> and</c><00:03:18.310><c> let's</c><00:03:19.209><c> bring</c><00:03:19.480><c> up</c><00:03:19.630><c> yet</c><00:03:20.380><c> another</c>

00:03:20.670 --> 00:03:20.680 align:start position:0%
file and let's bring up yet another
 

00:03:20.680 --> 00:03:24.809 align:start position:0%
file and let's bring up yet another
little<00:03:21.250><c> app</c><00:03:21.430><c> so</c><00:03:22.299><c> here</c><00:03:22.569><c> this</c><00:03:23.410><c> app</c><00:03:23.709><c> provides</c><00:03:24.340><c> a</c>

00:03:24.809 --> 00:03:24.819 align:start position:0%
little app so here this app provides a
 

00:03:24.819 --> 00:03:29.220 align:start position:0%
little app so here this app provides a
low-pass<00:03:25.299><c> filter</c><00:03:25.750><c> and</c><00:03:27.480><c> once</c><00:03:28.480><c> again</c><00:03:28.660><c> if</c><00:03:28.959><c> I</c><00:03:29.079><c> go</c>

00:03:29.220 --> 00:03:29.230 align:start position:0%
low-pass filter and once again if I go
 

00:03:29.230 --> 00:03:33.089 align:start position:0%
low-pass filter and once again if I go
back<00:03:29.410><c> to</c><00:03:29.650><c> the</c><00:03:30.549><c> control</c><00:03:30.940><c> app</c><00:03:31.530><c> doesn't</c><00:03:32.530><c> there's</c>

00:03:33.089 --> 00:03:33.099 align:start position:0%
back to the control app doesn't there's
 

00:03:33.099 --> 00:03:34.440 align:start position:0%
back to the control app doesn't there's
a<00:03:33.160><c> new</c><00:03:33.340><c> module</c><00:03:33.549><c> right</c><00:03:33.879><c> here</c><00:03:34.120><c> that</c><00:03:34.299><c> represents</c>

00:03:34.440 --> 00:03:34.450 align:start position:0%
a new module right here that represents
 

00:03:34.450 --> 00:03:37.050 align:start position:0%
a new module right here that represents
our<00:03:34.959><c> low</c><00:03:35.169><c> pass</c><00:03:35.410><c> filter</c><00:03:35.799><c> and</c><00:03:36.340><c> now</c><00:03:36.760><c> we</c><00:03:36.819><c> can</c>

00:03:37.050 --> 00:03:37.060 align:start position:0%
our low pass filter and now we can
 

00:03:37.060 --> 00:03:40.979 align:start position:0%
our low pass filter and now we can
connect<00:03:37.359><c> them</c><00:03:37.569><c> say</c><00:03:37.989><c> I</c><00:03:38.019><c> I</c><00:03:38.709><c> send</c><00:03:39.519><c> the</c><00:03:39.700><c> audio</c><00:03:39.989><c> from</c>

00:03:40.979 --> 00:03:40.989 align:start position:0%
connect them say I I send the audio from
 

00:03:40.989 --> 00:03:43.020 align:start position:0%
connect them say I I send the audio from
the<00:03:41.049><c> wave</c><00:03:41.410><c> file</c><00:03:41.709><c> into</c><00:03:42.129><c> the</c><00:03:42.250><c> low</c><00:03:42.370><c> pass</c><00:03:42.549><c> filter</c>

00:03:43.020 --> 00:03:43.030 align:start position:0%
the wave file into the low pass filter
 

00:03:43.030 --> 00:03:46.050 align:start position:0%
the wave file into the low pass filter
and<00:03:43.440><c> i</c><00:03:44.440><c> sent</c><00:03:44.739><c> the</c><00:03:44.859><c> output</c><00:03:45.310><c> of</c><00:03:45.489><c> the</c><00:03:45.549><c> low</c><00:03:45.849><c> pass</c>

00:03:46.050 --> 00:03:46.060 align:start position:0%
and i sent the output of the low pass
 

00:03:46.060 --> 00:03:49.289 align:start position:0%
and i sent the output of the low pass
filter<00:03:46.510><c> to</c><00:03:46.780><c> the</c><00:03:46.900><c> speakers</c><00:03:47.349><c> and</c><00:03:47.760><c> now</c><00:03:48.760><c> if</c><00:03:49.060><c> i</c><00:03:49.239><c> turn</c>

00:03:49.289 --> 00:03:49.299 align:start position:0%
filter to the speakers and now if i turn
 

00:03:49.299 --> 00:03:53.430 align:start position:0%
filter to the speakers and now if i turn
on<00:03:49.510><c> all</c><00:03:49.930><c> your</c><00:03:50.049><c> processing</c><00:03:51.870><c> we</c><00:03:52.870><c> hear</c><00:03:53.079><c> the</c><00:03:53.290><c> wave</c>

00:03:53.430 --> 00:03:53.440 align:start position:0%
on all your processing we hear the wave
 

00:03:53.440 --> 00:03:56.699 align:start position:0%
on all your processing we hear the wave
fun

00:03:56.699 --> 00:03:56.709 align:start position:0%
 
 

00:03:56.709 --> 00:04:00.160 align:start position:0%
 
now<00:03:57.709><c> we</c><00:03:57.769><c> can</c><00:03:58.040><c> go</c><00:03:58.250><c> to</c><00:03:58.909><c> our</c><00:03:58.939><c> low</c><00:03:59.269><c> pass</c><00:03:59.480><c> filter</c><00:03:59.930><c> and</c>

00:04:00.160 --> 00:04:00.170 align:start position:0%
now we can go to our low pass filter and
 

00:04:00.170 --> 00:04:04.809 align:start position:0%
now we can go to our low pass filter and
if<00:04:01.069><c> we</c><00:04:01.189><c> play</c><00:04:01.400><c> with</c><00:04:01.640><c> the</c><00:04:01.760><c> cutoff</c><00:04:02.060><c> frequency</c><00:04:03.819><c> you</c>

00:04:04.809 --> 00:04:04.819 align:start position:0%
if we play with the cutoff frequency you
 

00:04:04.819 --> 00:04:06.759 align:start position:0%
if we play with the cutoff frequency you
can<00:04:05.000><c> tell</c><00:04:05.299><c> that</c><00:04:05.329><c> the</c><00:04:05.750><c> higher</c><00:04:05.900><c> frequencies</c><00:04:06.140><c> go</c>

00:04:06.759 --> 00:04:06.769 align:start position:0%
can tell that the higher frequencies go
 

00:04:06.769 --> 00:04:09.850 align:start position:0%
can tell that the higher frequencies go
away<00:04:07.069><c> some</c><00:04:07.400><c> of</c><00:04:07.760><c> the</c><00:04:08.030><c> low</c><00:04:08.150><c> pass</c><00:04:08.360><c> filter</c><00:04:08.810><c> acts</c><00:04:09.470><c> as</c>

00:04:09.850 --> 00:04:09.860 align:start position:0%
away some of the low pass filter acts as
 

00:04:09.860 --> 00:04:15.890 align:start position:0%
away some of the low pass filter acts as
expected

00:04:15.890 --> 00:04:15.900 align:start position:0%
 
 

00:04:15.900 --> 00:04:19.020 align:start position:0%
 
okay<00:04:16.900><c> so</c><00:04:17.530><c> so</c><00:04:18.430><c> that</c><00:04:18.580><c> was</c><00:04:18.700><c> the</c><00:04:18.850><c> core</c>

00:04:19.020 --> 00:04:19.030 align:start position:0%
okay so so that was the core
 

00:04:19.030 --> 00:04:20.850 align:start position:0%
okay so so that was the core
functionality<00:04:19.690><c> of</c><00:04:19.720><c> patch</c><00:04:20.200><c> field</c><00:04:20.560><c> in</c><00:04:20.770><c> a</c>

00:04:20.850 --> 00:04:20.860 align:start position:0%
functionality of patch field in a
 

00:04:20.860 --> 00:04:23.880 align:start position:0%
functionality of patch field in a
nutshell<00:04:21.990><c> all</c><00:04:22.990><c> right</c><00:04:23.230><c> let's</c><00:04:23.440><c> take</c><00:04:23.590><c> a</c><00:04:23.620><c> look</c><00:04:23.800><c> at</c>

00:04:23.880 --> 00:04:23.890 align:start position:0%
nutshell all right let's take a look at
 

00:04:23.890 --> 00:04:26.180 align:start position:0%
nutshell all right let's take a look at
the<00:04:24.010><c> code</c><00:04:24.190><c> the</c><00:04:25.060><c> patch</c><00:04:25.330><c> field</c><00:04:25.660><c> service</c>

00:04:26.180 --> 00:04:26.190 align:start position:0%
the code the patch field service
 

00:04:26.190 --> 00:04:29.220 align:start position:0%
the code the patch field service
implements<00:04:27.190><c> an</c><00:04:27.400><c> interface</c><00:04:27.790><c> called</c><00:04:28.600><c> eyepatch</c>

00:04:29.220 --> 00:04:29.230 align:start position:0%
implements an interface called eyepatch
 

00:04:29.230 --> 00:04:32.160 align:start position:0%
implements an interface called eyepatch
field<00:04:29.590><c> service</c><00:04:30.040><c> and</c><00:04:30.690><c> this</c><00:04:31.690><c> interface</c>

00:04:32.160 --> 00:04:32.170 align:start position:0%
field service and this interface
 

00:04:32.170 --> 00:04:34.230 align:start position:0%
field service and this interface
consists<00:04:32.890><c> of</c><00:04:32.980><c> three</c><00:04:33.250><c> types</c><00:04:33.490><c> of</c><00:04:33.640><c> methods</c><00:04:33.850><c> you</c>

00:04:34.230 --> 00:04:34.240 align:start position:0%
consists of three types of methods you
 

00:04:34.240 --> 00:04:37.080 align:start position:0%
consists of three types of methods you
have<00:04:34.360><c> methods</c><00:04:34.720><c> for</c><00:04:35.190><c> manipulating</c><00:04:36.190><c> the</c><00:04:36.820><c> state</c>

00:04:37.080 --> 00:04:37.090 align:start position:0%
have methods for manipulating the state
 

00:04:37.090 --> 00:04:39.410 align:start position:0%
have methods for manipulating the state
of<00:04:37.120><c> the</c><00:04:37.420><c> patch</c><00:04:37.630><c> field</c><00:04:37.990><c> service</c><00:04:38.500><c> you</c><00:04:39.220><c> have</c>

00:04:39.410 --> 00:04:39.420 align:start position:0%
of the patch field service you have
 

00:04:39.420 --> 00:04:42.000 align:start position:0%
of the patch field service you have
methods<00:04:40.420><c> for</c><00:04:40.750><c> querying</c><00:04:41.050><c> the</c><00:04:41.320><c> state</c><00:04:41.680><c> of</c><00:04:41.710><c> the</c>

00:04:42.000 --> 00:04:42.010 align:start position:0%
methods for querying the state of the
 

00:04:42.010 --> 00:04:44.370 align:start position:0%
methods for querying the state of the
service<00:04:42.400><c> and</c><00:04:42.610><c> you</c><00:04:43.570><c> have</c><00:04:43.750><c> methods</c><00:04:44.140><c> for</c>

00:04:44.370 --> 00:04:44.380 align:start position:0%
service and you have methods for
 

00:04:44.380 --> 00:04:47.220 align:start position:0%
service and you have methods for
internal<00:04:44.860><c> use</c><00:04:45.060><c> so</c><00:04:46.060><c> so</c><00:04:46.960><c> when</c><00:04:47.110><c> you're</c>

00:04:47.220 --> 00:04:47.230 align:start position:0%
internal use so so when you're
 

00:04:47.230 --> 00:04:48.870 align:start position:0%
internal use so so when you're
manipulating<00:04:47.860><c> the</c><00:04:47.950><c> state</c><00:04:48.160><c> of</c><00:04:48.190><c> the</c><00:04:48.460><c> service</c>

00:04:48.870 --> 00:04:48.880 align:start position:0%
manipulating the state of the service
 

00:04:48.880 --> 00:04:51.660 align:start position:0%
manipulating the state of the service
you<00:04:49.210><c> can</c><00:04:49.320><c> for</c><00:04:50.320><c> instance</c><00:04:50.410><c> you</c><00:04:50.710><c> can</c><00:04:50.890><c> turn</c><00:04:51.280><c> on</c><00:04:51.490><c> or</c>

00:04:51.660 --> 00:04:51.670 align:start position:0%
you can for instance you can turn on or
 

00:04:51.670 --> 00:04:55.110 align:start position:0%
you can for instance you can turn on or
off<00:04:51.760><c> all</c><00:04:52.450><c> your</c><00:04:52.660><c> processing</c><00:04:53.760><c> that's</c><00:04:54.760><c> what</c><00:04:54.970><c> the</c>

00:04:55.110 --> 00:04:55.120 align:start position:0%
off all your processing that's what the
 

00:04:55.120 --> 00:04:58.230 align:start position:0%
off all your processing that's what the
on/off<00:04:55.480><c> button</c><00:04:55.900><c> in</c><00:04:56.080><c> the</c><00:04:56.230><c> control</c><00:04:56.740><c> app</c><00:04:57.490><c> was</c><00:04:57.940><c> for</c>

00:04:58.230 --> 00:04:58.240 align:start position:0%
on/off button in the control app was for
 

00:04:58.240 --> 00:05:01.350 align:start position:0%
on/off button in the control app was for
that<00:04:58.390><c> we</c><00:04:58.540><c> saw</c><00:04:58.690><c> a</c><00:04:58.720><c> minute</c><00:04:59.020><c> ago</c><00:05:00.150><c> you</c><00:05:01.150><c> can</c>

00:05:01.350 --> 00:05:01.360 align:start position:0%
that we saw a minute ago you can
 

00:05:01.360 --> 00:05:05.520 align:start position:0%
that we saw a minute ago you can
activate<00:05:01.840><c> and</c><00:05:02.080><c> deactivate</c><00:05:02.200><c> modules</c><00:05:04.500><c> you</c><00:05:05.500><c> can</c>

00:05:05.520 --> 00:05:05.530 align:start position:0%
activate and deactivate modules you can
 

00:05:05.530 --> 00:05:08.160 align:start position:0%
activate and deactivate modules you can
connect<00:05:06.190><c> ports</c><00:05:06.670><c> of</c><00:05:06.940><c> modules</c><00:05:07.450><c> or</c><00:05:07.780><c> you</c><00:05:07.960><c> can</c>

00:05:08.160 --> 00:05:08.170 align:start position:0%
connect ports of modules or you can
 

00:05:08.170 --> 00:05:10.770 align:start position:0%
connect ports of modules or you can
disconnect<00:05:08.620><c> ports</c><00:05:09.100><c> so</c><00:05:09.820><c> essentially</c><00:05:10.300><c> you</c><00:05:10.750><c> can</c>

00:05:10.770 --> 00:05:10.780 align:start position:0%
disconnect ports so essentially you can
 

00:05:10.780 --> 00:05:12.480 align:start position:0%
disconnect ports so essentially you can
you<00:05:11.170><c> can</c><00:05:11.350><c> make</c><00:05:11.500><c> the</c><00:05:11.650><c> changes</c><00:05:12.040><c> that</c><00:05:12.100><c> you</c><00:05:12.340><c> would</c>

00:05:12.480 --> 00:05:12.490 align:start position:0%
you can make the changes that you would
 

00:05:12.490 --> 00:05:15.720 align:start position:0%
you can make the changes that you would
expect<00:05:12.820><c> and</c><00:05:13.680><c> then</c><00:05:14.680><c> you</c><00:05:14.830><c> have</c><00:05:14.980><c> matching</c>

00:05:15.720 --> 00:05:15.730 align:start position:0%
expect and then you have matching
 

00:05:15.730 --> 00:05:18.710 align:start position:0%
expect and then you have matching
methods<00:05:16.120><c> that</c><00:05:16.390><c> tell</c><00:05:16.720><c> you</c><00:05:17.400><c> for</c><00:05:18.400><c> instance</c>

00:05:18.710 --> 00:05:18.720 align:start position:0%
methods that tell you for instance
 

00:05:18.720 --> 00:05:22.200 align:start position:0%
methods that tell you for instance
whether<00:05:19.720><c> two</c><00:05:19.960><c> ports</c><00:05:20.320><c> are</c><00:05:20.470><c> connected</c><00:05:21.030><c> you</c><00:05:22.030><c> can</c>

00:05:22.200 --> 00:05:22.210 align:start position:0%
whether two ports are connected you can
 

00:05:22.210 --> 00:05:24.300 align:start position:0%
whether two ports are connected you can
get<00:05:22.420><c> a</c><00:05:22.450><c> list</c><00:05:22.750><c> of</c><00:05:22.960><c> the</c><00:05:23.410><c> audio</c><00:05:23.710><c> modules</c><00:05:24.070><c> that</c><00:05:24.190><c> are</c>

00:05:24.300 --> 00:05:24.310 align:start position:0%
get a list of the audio modules that are
 

00:05:24.310 --> 00:05:27.090 align:start position:0%
get a list of the audio modules that are
currently<00:05:24.700><c> installed</c><00:05:25.240><c> and</c><00:05:25.920><c> you</c><00:05:26.920><c> have</c><00:05:27.040><c> a</c>

00:05:27.090 --> 00:05:27.100 align:start position:0%
currently installed and you have a
 

00:05:27.100 --> 00:05:30.420 align:start position:0%
currently installed and you have a
number<00:05:27.370><c> of</c><00:05:27.460><c> other</c><00:05:27.640><c> methods</c><00:05:28.030><c> as</c><00:05:28.180><c> well</c><00:05:28.650><c> so</c><00:05:29.650><c> now</c>

00:05:30.420 --> 00:05:30.430 align:start position:0%
number of other methods as well so now
 

00:05:30.430 --> 00:05:33.720 align:start position:0%
number of other methods as well so now
if<00:05:30.730><c> you're</c><00:05:30.880><c> implementing</c><00:05:31.330><c> a</c><00:05:32.010><c> pageview</c><00:05:33.010><c> client</c>

00:05:33.720 --> 00:05:33.730 align:start position:0%
if you're implementing a pageview client
 

00:05:33.730 --> 00:05:36.470 align:start position:0%
if you're implementing a pageview client
and<00:05:33.940><c> you</c><00:05:34.540><c> would</c><00:05:34.690><c> like</c><00:05:34.870><c> to</c><00:05:35.050><c> keep</c><00:05:35.410><c> up</c><00:05:35.680><c> to</c><00:05:35.860><c> date</c><00:05:35.890><c> on</c>

00:05:36.470 --> 00:05:36.480 align:start position:0%
and you would like to keep up to date on
 

00:05:36.480 --> 00:05:39.330 align:start position:0%
and you would like to keep up to date on
changes<00:05:37.480><c> in</c><00:05:37.720><c> the</c><00:05:37.930><c> state</c><00:05:38.170><c> of</c><00:05:38.440><c> the</c><00:05:38.860><c> patch</c><00:05:39.040><c> viewed</c>

00:05:39.330 --> 00:05:39.340 align:start position:0%
changes in the state of the patch viewed
 

00:05:39.340 --> 00:05:41.670 align:start position:0%
changes in the state of the patch viewed
service<00:05:39.760><c> then</c><00:05:40.480><c> you</c><00:05:40.840><c> can</c><00:05:41.020><c> implement</c><00:05:41.350><c> this</c>

00:05:41.670 --> 00:05:41.680 align:start position:0%
service then you can implement this
 

00:05:41.680 --> 00:05:44.520 align:start position:0%
service then you can implement this
eyepatch<00:05:42.250><c> view</c><00:05:42.520><c> client</c><00:05:42.910><c> interface</c><00:05:43.390><c> and</c><00:05:43.630><c> now</c>

00:05:44.520 --> 00:05:44.530 align:start position:0%
eyepatch view client interface and now
 

00:05:44.530 --> 00:05:46.470 align:start position:0%
eyepatch view client interface and now
if<00:05:44.800><c> you</c><00:05:44.920><c> register</c><00:05:45.430><c> now</c><00:05:45.760><c> if</c><00:05:45.910><c> you</c><00:05:46.000><c> register</c>

00:05:46.470 --> 00:05:46.480 align:start position:0%
if you register now if you register
 

00:05:46.480 --> 00:05:48.690 align:start position:0%
if you register now if you register
yourself<00:05:46.600><c> with</c><00:05:47.560><c> the</c><00:05:47.770><c> patch</c><00:05:47.980><c> field</c><00:05:48.280><c> service</c>

00:05:48.690 --> 00:05:48.700 align:start position:0%
yourself with the patch field service
 

00:05:48.700 --> 00:05:50.310 align:start position:0%
yourself with the patch field service
you<00:05:49.000><c> will</c><00:05:49.150><c> get</c><00:05:49.270><c> callbacks</c><00:05:49.570><c> whenever</c>

00:05:50.310 --> 00:05:50.320 align:start position:0%
you will get callbacks whenever
 

00:05:50.320 --> 00:05:52.050 align:start position:0%
you will get callbacks whenever
something<00:05:50.890><c> happens</c><00:05:51.070><c> so</c><00:05:51.610><c> you</c><00:05:51.730><c> might</c><00:05:51.880><c> get</c><00:05:52.030><c> a</c>

00:05:52.050 --> 00:05:52.060 align:start position:0%
something happens so you might get a
 

00:05:52.060 --> 00:05:54.120 align:start position:0%
something happens so you might get a
call<00:05:52.150><c> back</c><00:05:52.360><c> when</c><00:05:52.540><c> a</c><00:05:52.780><c> module</c><00:05:53.140><c> is</c><00:05:53.260><c> created</c><00:05:53.860><c> or</c>

00:05:54.120 --> 00:05:54.130 align:start position:0%
call back when a module is created or
 

00:05:54.130 --> 00:05:56.610 align:start position:0%
call back when a module is created or
when<00:05:54.280><c> a</c><00:05:54.310><c> module</c><00:05:54.670><c> is</c><00:05:54.820><c> deleted</c><00:05:55.360><c> when</c><00:05:56.140><c> ports</c><00:05:56.470><c> are</c>

00:05:56.610 --> 00:05:56.620 align:start position:0%
when a module is deleted when ports are
 

00:05:56.620 --> 00:06:01.020 align:start position:0%
when a module is deleted when ports are
connected<00:05:57.100><c> or</c><00:05:57.340><c> disconnected</c><00:05:57.460><c> and</c><00:05:58.210><c> so</c><00:05:58.900><c> on</c>

00:06:01.020 --> 00:06:01.030 align:start position:0%
connected or disconnected and so on
 

00:06:01.030 --> 00:06:03.570 align:start position:0%
connected or disconnected and so on
so<00:06:01.660><c> this</c><00:06:01.810><c> was</c><00:06:01.990><c> essentially</c><00:06:02.440><c> bookkeeping</c><00:06:02.980><c> the</c>

00:06:03.570 --> 00:06:03.580 align:start position:0%
so this was essentially bookkeeping the
 

00:06:03.580 --> 00:06:05.430 align:start position:0%
so this was essentially bookkeeping the
interesting<00:06:04.120><c> part</c><00:06:04.360><c> really</c><00:06:04.660><c> is</c><00:06:04.750><c> the</c><00:06:05.140><c> audio</c>

00:06:05.430 --> 00:06:05.440 align:start position:0%
interesting part really is the audio
 

00:06:05.440 --> 00:06:07.230 align:start position:0%
interesting part really is the audio
module<00:06:05.770><c> API</c><00:06:06.130><c> because</c><00:06:06.580><c> that's</c><00:06:06.880><c> where</c><00:06:07.150><c> you</c>

00:06:07.230 --> 00:06:07.240 align:start position:0%
module API because that's where you
 

00:06:07.240 --> 00:06:11.970 align:start position:0%
module API because that's where you
implement<00:06:07.720><c> audio</c><00:06:08.410><c> functionality</c><00:06:09.480><c> so</c><00:06:10.980><c> the</c>

00:06:11.970 --> 00:06:11.980 align:start position:0%
implement audio functionality so the
 

00:06:11.980 --> 00:06:15.180 align:start position:0%
implement audio functionality so the
foundation<00:06:12.520><c> of</c><00:06:12.610><c> it</c><00:06:12.790><c> is</c><00:06:13.000><c> a</c><00:06:13.060><c> class</c><00:06:13.750><c> called</c><00:06:14.190><c> audio</c>

00:06:15.180 --> 00:06:15.190 align:start position:0%
foundation of it is a class called audio
 

00:06:15.190 --> 00:06:18.240 align:start position:0%
foundation of it is a class called audio
module<00:06:15.610><c> and</c><00:06:16.170><c> it's</c><00:06:17.170><c> an</c><00:06:17.290><c> abstract</c><00:06:17.710><c> test</c><00:06:17.950><c> that</c>

00:06:18.240 --> 00:06:18.250 align:start position:0%
module and it's an abstract test that
 

00:06:18.250 --> 00:06:20.820 align:start position:0%
module and it's an abstract test that
has<00:06:18.400><c> four</c><00:06:18.880><c> methods</c><00:06:19.840><c> that</c><00:06:20.290><c> you</c><00:06:20.470><c> will</c><00:06:20.650><c> need</c><00:06:20.770><c> to</c>

00:06:20.820 --> 00:06:20.830 align:start position:0%
has four methods that you will need to
 

00:06:20.830 --> 00:06:23.310 align:start position:0%
has four methods that you will need to
implement<00:06:21.220><c> the</c><00:06:21.630><c> most</c><00:06:22.630><c> important</c><00:06:23.080><c> of</c><00:06:23.140><c> those</c>

00:06:23.310 --> 00:06:23.320 align:start position:0%
implement the most important of those
 

00:06:23.320 --> 00:06:27.540 align:start position:0%
implement the most important of those
methods<00:06:23.590><c> is</c><00:06:24.040><c> one</c><00:06:24.730><c> called</c><00:06:25.530><c> configure</c><00:06:26.530><c> where</c><00:06:27.400><c> is</c>

00:06:27.540 --> 00:06:27.550 align:start position:0%
methods is one called configure where is
 

00:06:27.550 --> 00:06:31.890 align:start position:0%
methods is one called configure where is
it<00:06:27.730><c> here</c><00:06:28.710><c> and</c><00:06:29.850><c> the</c><00:06:30.850><c> purpose</c><00:06:31.180><c> of</c><00:06:31.300><c> the</c><00:06:31.450><c> configure</c>

00:06:31.890 --> 00:06:31.900 align:start position:0%
it here and the purpose of the configure
 

00:06:31.900 --> 00:06:35.220 align:start position:0%
it here and the purpose of the configure
method<00:06:32.260><c> is</c><00:06:32.380><c> to</c><00:06:33.220><c> connect</c><00:06:33.580><c> your</c><00:06:34.360><c> audio</c><00:06:34.870><c> module</c>

00:06:35.220 --> 00:06:35.230 align:start position:0%
method is to connect your audio module
 

00:06:35.230 --> 00:06:37.440 align:start position:0%
method is to connect your audio module
object<00:06:35.650><c> to</c><00:06:36.280><c> the</c><00:06:36.640><c> corresponding</c><00:06:37.330><c> data</c>

00:06:37.440 --> 00:06:37.450 align:start position:0%
object to the corresponding data
 

00:06:37.450 --> 00:06:39.390 align:start position:0%
object to the corresponding data
structures<00:06:38.080><c> in</c><00:06:38.320><c> the</c><00:06:38.350><c> patch</c><00:06:38.650><c> field</c><00:06:38.980><c> service</c>

00:06:39.390 --> 00:06:39.400 align:start position:0%
structures in the patch field service
 

00:06:39.400 --> 00:06:42.620 align:start position:0%
structures in the patch field service
and<00:06:40.410><c> let's</c><00:06:41.410><c> see</c><00:06:41.560><c> how</c><00:06:41.680><c> this</c><00:06:41.830><c> works</c><00:06:42.040><c> in</c><00:06:42.190><c> practice</c>

00:06:42.620 --> 00:06:42.630 align:start position:0%
and let's see how this works in practice
 

00:06:42.630 --> 00:06:45.570 align:start position:0%
and let's see how this works in practice
so<00:06:43.630><c> let's</c><00:06:43.900><c> look</c><00:06:44.020><c> at</c><00:06:44.200><c> the</c><00:06:44.380><c> Lopez</c><00:06:44.950><c> module</c><00:06:45.370><c> that</c>

00:06:45.570 --> 00:06:45.580 align:start position:0%
so let's look at the Lopez module that
 

00:06:45.580 --> 00:06:49.080 align:start position:0%
so let's look at the Lopez module that
we<00:06:45.730><c> saw</c><00:06:45.940><c> in</c><00:06:46.240><c> action</c><00:06:46.720><c> in</c><00:06:46.870><c> our</c><00:06:47.350><c> little</c><00:06:47.560><c> demo</c><00:06:48.090><c> so</c>

00:06:49.080 --> 00:06:49.090 align:start position:0%
we saw in action in our little demo so
 

00:06:49.090 --> 00:06:51.620 align:start position:0%
we saw in action in our little demo so
here's<00:06:49.420><c> a</c><00:06:49.600><c> module</c><00:06:50.080><c> called</c><00:06:50.110><c> Lopez</c><00:06:50.560><c> module</c><00:06:51.250><c> and</c>

00:06:51.620 --> 00:06:51.630 align:start position:0%
here's a module called Lopez module and
 

00:06:51.630 --> 00:06:54.750 align:start position:0%
here's a module called Lopez module and
it<00:06:52.630><c> extends</c><00:06:53.140><c> the</c><00:06:53.680><c> audio</c><00:06:53.980><c> module</c><00:06:54.250><c> class</c><00:06:54.520><c> that</c>

00:06:54.750 --> 00:06:54.760 align:start position:0%
it extends the audio module class that
 

00:06:54.760 --> 00:06:58.640 align:start position:0%
it extends the audio module class that
we<00:06:54.880><c> just</c><00:06:55.060><c> saw</c><00:06:55.360><c> and</c><00:06:56.820><c> sure</c><00:06:57.820><c> enough</c><00:06:57.880><c> it</c>

00:06:58.640 --> 00:06:58.650 align:start position:0%
we just saw and sure enough it
 

00:06:58.650 --> 00:07:01.350 align:start position:0%
we just saw and sure enough it
implements<00:06:59.650><c> the</c><00:06:59.830><c> configure</c><00:07:00.460><c> method</c><00:07:01.060><c> that</c><00:07:01.180><c> I'm</c>

00:07:01.350 --> 00:07:01.360 align:start position:0%
implements the configure method that I'm
 

00:07:01.360 --> 00:07:04.320 align:start position:0%
implements the configure method that I'm
that<00:07:01.720><c> I</c><00:07:01.750><c> just</c><00:07:02.020><c> mentioned</c><00:07:02.340><c> so</c><00:07:03.340><c> now</c><00:07:03.550><c> this</c>

00:07:04.320 --> 00:07:04.330 align:start position:0%
that I just mentioned so now this
 

00:07:04.330 --> 00:07:07.170 align:start position:0%
that I just mentioned so now this
configure<00:07:04.810><c> method</c><00:07:05.310><c> internally</c><00:07:06.310><c> just</c><00:07:06.880><c> takes</c>

00:07:07.170 --> 00:07:07.180 align:start position:0%
configure method internally just takes
 

00:07:07.180 --> 00:07:12.500 align:start position:0%
configure method internally just takes
the<00:07:08.400><c> handle</c><00:07:09.400><c> that</c><00:07:09.640><c> it</c><00:07:09.790><c> received</c><00:07:10.210><c> before</c><00:07:10.510><c> and</c>

00:07:12.500 --> 00:07:12.510 align:start position:0%
the handle that it received before and
 

00:07:12.510 --> 00:07:15.230 align:start position:0%
the handle that it received before and
the<00:07:13.510><c> number</c><00:07:13.750><c> of</c><00:07:13.870><c> channels</c><00:07:14.140><c> that</c><00:07:14.410><c> it</c><00:07:14.560><c> wants</c><00:07:14.860><c> and</c>

00:07:15.230 --> 00:07:15.240 align:start position:0%
the number of channels that it wants and
 

00:07:15.240 --> 00:07:20.220 align:start position:0%
the number of channels that it wants and
sends<00:07:16.240><c> it</c><00:07:16.330><c> to</c><00:07:16.750><c> the</c><00:07:18.270><c> two</c><00:07:19.270><c> I</c><00:07:19.300><c> native</c><00:07:19.810><c> method</c>

00:07:20.220 --> 00:07:20.230 align:start position:0%
sends it to the two I native method
 

00:07:20.230 --> 00:07:23.010 align:start position:0%
sends it to the two I native method
called<00:07:20.890><c> configure</c><00:07:21.400><c> native</c><00:07:21.700><c> components</c><00:07:22.300><c> so</c>

00:07:23.010 --> 00:07:23.020 align:start position:0%
called configure native components so
 

00:07:23.020 --> 00:07:24.330 align:start position:0%
called configure native components so
let's<00:07:23.200><c> look</c><00:07:23.320><c> at</c><00:07:23.470><c> the</c><00:07:23.560><c> implementation</c><00:07:24.190><c> of</c><00:07:24.310><c> that</c>

00:07:24.330 --> 00:07:24.340 align:start position:0%
let's look at the implementation of that
 

00:07:24.340 --> 00:07:26.670 align:start position:0%
let's look at the implementation of that
native<00:07:24.880><c> method</c><00:07:25.240><c> that's</c><00:07:26.080><c> in</c><00:07:26.230><c> a</c><00:07:26.290><c> file</c><00:07:26.470><c> called</c>

00:07:26.670 --> 00:07:26.680 align:start position:0%
native method that's in a file called
 

00:07:26.680 --> 00:07:33.810 align:start position:0%
native method that's in a file called
low-pass<00:07:27.190><c> see</c><00:07:29.370><c> it's</c><00:07:30.370><c> right</c><00:07:30.730><c> here</c><00:07:31.000><c> and</c><00:07:32.820><c> this</c>

00:07:33.810 --> 00:07:33.820 align:start position:0%
low-pass see it's right here and this
 

00:07:33.820 --> 00:07:37.800 align:start position:0%
low-pass see it's right here and this
method<00:07:35.760><c> allocates</c><00:07:36.760><c> space</c><00:07:36.880><c> for</c><00:07:37.480><c> a</c><00:07:37.510><c> data</c>

00:07:37.800 --> 00:07:37.810 align:start position:0%
method allocates space for a data
 

00:07:37.810 --> 00:07:39.360 align:start position:0%
method allocates space for a data
structure<00:07:38.200><c> that</c><00:07:38.350><c> will</c><00:07:38.620><c> hold</c><00:07:38.860><c> all</c><00:07:39.100><c> the</c>

00:07:39.360 --> 00:07:39.370 align:start position:0%
structure that will hold all the
 

00:07:39.370 --> 00:07:41.280 align:start position:0%
structure that will hold all the
information<00:07:39.910><c> that</c><00:07:39.940><c> characterizes</c><00:07:40.840><c> our</c><00:07:41.020><c> low</c>

00:07:41.280 --> 00:07:41.290 align:start position:0%
information that characterizes our low
 

00:07:41.290 --> 00:07:43.710 align:start position:0%
information that characterizes our low
pass<00:07:41.500><c> filters</c><00:07:41.920><c> such</c><00:07:42.160><c> as</c><00:07:42.220><c> update</c><00:07:42.970><c> coefficients</c>

00:07:43.710 --> 00:07:43.720 align:start position:0%
pass filters such as update coefficients
 

00:07:43.720 --> 00:07:46.290 align:start position:0%
pass filters such as update coefficients
and<00:07:43.870><c> filter</c><00:07:44.260><c> values</c><00:07:44.410><c> and</c><00:07:44.860><c> then</c><00:07:45.850><c> it</c><00:07:45.970><c> goes</c><00:07:46.090><c> ahead</c>

00:07:46.290 --> 00:07:46.300 align:start position:0%
and filter values and then it goes ahead
 

00:07:46.300 --> 00:07:48.770 align:start position:0%
and filter values and then it goes ahead
and<00:07:46.660><c> initializes</c><00:07:47.560><c> the</c><00:07:47.560><c> data</c><00:07:47.860><c> structure</c><00:07:48.370><c> and</c>

00:07:48.770 --> 00:07:48.780 align:start position:0%
and initializes the data structure and
 

00:07:48.780 --> 00:07:51.680 align:start position:0%
and initializes the data structure and
now<00:07:49.780><c> from</c><00:07:50.140><c> the</c><00:07:50.260><c> point</c><00:07:50.410><c> of</c><00:07:50.560><c> view</c><00:07:50.650><c> of</c><00:07:50.770><c> the</c><00:07:51.010><c> API</c>

00:07:51.680 --> 00:07:51.690 align:start position:0%
now from the point of view of the API
 

00:07:51.690 --> 00:07:54.240 align:start position:0%
now from the point of view of the API
the<00:07:52.690><c> most</c><00:07:52.960><c> important</c><00:07:53.440><c> call</c><00:07:53.650><c> is</c><00:07:53.860><c> this</c><00:07:54.040><c> one</c>

00:07:54.240 --> 00:07:54.250 align:start position:0%
the most important call is this one
 

00:07:54.250 --> 00:07:55.860 align:start position:0%
the most important call is this one
right<00:07:54.460><c> here</c><00:07:54.520><c> there's</c><00:07:55.030><c> a</c><00:07:55.150><c> there's</c><00:07:55.630><c> a</c><00:07:55.690><c> function</c>

00:07:55.860 --> 00:07:55.870 align:start position:0%
right here there's a there's a function
 

00:07:55.870 --> 00:07:58.530 align:start position:0%
right here there's a there's a function
called<00:07:56.080><c> am</c><00:07:56.590><c> configure</c><00:07:57.130><c> and</c><00:07:57.370><c> that</c><00:07:58.330><c> one</c>

00:07:58.530 --> 00:07:58.540 align:start position:0%
called am configure and that one
 

00:07:58.540 --> 00:08:00.270 align:start position:0%
called am configure and that one
establishes<00:07:59.290><c> learn</c><00:07:59.620><c> the</c><00:07:59.830><c> connection</c><00:08:00.250><c> between</c>

00:08:00.270 --> 00:08:00.280 align:start position:0%
establishes learn the connection between
 

00:08:00.280 --> 00:08:03.210 align:start position:0%
establishes learn the connection between
your<00:08:01.180><c> audio</c><00:08:01.600><c> module</c><00:08:01.990><c> and</c><00:08:02.230><c> the</c><00:08:02.710><c> patch</c><00:08:02.920><c> field</c>

00:08:03.210 --> 00:08:03.220 align:start position:0%
your audio module and the patch field
 

00:08:03.220 --> 00:08:05.610 align:start position:0%
your audio module and the patch field
service<00:08:03.640><c> so</c><00:08:04.480><c> this</c><00:08:04.660><c> configure</c><00:08:05.080><c> method</c><00:08:05.410><c> takes</c>

00:08:05.610 --> 00:08:05.620 align:start position:0%
service so this configure method takes
 

00:08:05.620 --> 00:08:08.310 align:start position:0%
service so this configure method takes
the<00:08:05.830><c> handle</c><00:08:06.220><c> that</c><00:08:06.910><c> you</c><00:08:07.030><c> received</c><00:08:07.390><c> earlier</c><00:08:07.810><c> so</c>

00:08:08.310 --> 00:08:08.320 align:start position:0%
the handle that you received earlier so
 

00:08:08.320 --> 00:08:10.830 align:start position:0%
the handle that you received earlier so
you<00:08:08.380><c> just</c><00:08:08.440><c> so</c><00:08:09.340><c> you</c><00:08:09.400><c> receive</c><00:08:09.790><c> the</c><00:08:09.940><c> handle</c><00:08:10.300><c> in</c>

00:08:10.830 --> 00:08:10.840 align:start position:0%
you just so you receive the handle in
 

00:08:10.840 --> 00:08:12.600 align:start position:0%
you just so you receive the handle in
in<00:08:11.230><c> the</c><00:08:11.380><c> configure</c><00:08:11.800><c> method</c><00:08:12.160><c> and</c><00:08:12.280><c> you</c><00:08:12.370><c> just</c>

00:08:12.600 --> 00:08:12.610 align:start position:0%
in the configure method and you just
 

00:08:12.610 --> 00:08:14.610 align:start position:0%
in the configure method and you just
hand<00:08:12.850><c> it</c><00:08:12.970><c> over</c><00:08:13.120><c> to</c><00:08:13.480><c> this</c><00:08:13.900><c> function</c><00:08:14.169><c> call</c><00:08:14.530><c> it</c>

00:08:14.610 --> 00:08:14.620 align:start position:0%
hand it over to this function call it
 

00:08:14.620 --> 00:08:19.110 align:start position:0%
hand it over to this function call it
right<00:08:14.770><c> here</c><00:08:15.040><c> then</c><00:08:16.000><c> it</c><00:08:16.150><c> takes</c><00:08:16.360><c> a</c><00:08:18.120><c> process</c>

00:08:19.110 --> 00:08:19.120 align:start position:0%
right here then it takes a process
 

00:08:19.120 --> 00:08:21.330 align:start position:0%
right here then it takes a process
function<00:08:19.570><c> that</c><00:08:19.780><c> you</c><00:08:19.960><c> implement</c><00:08:20.440><c> in</c><00:08:20.680><c> and</c><00:08:20.949><c> that</c>

00:08:21.330 --> 00:08:21.340 align:start position:0%
function that you implement in and that
 

00:08:21.340 --> 00:08:23.460 align:start position:0%
function that you implement in and that
provides<00:08:21.790><c> the</c><00:08:22.030><c> audio</c><00:08:22.360><c> processing</c><00:08:22.780><c> capability</c>

00:08:23.460 --> 00:08:23.470 align:start position:0%
provides the audio processing capability
 

00:08:23.470 --> 00:08:25.950 align:start position:0%
provides the audio processing capability
that<00:08:23.650><c> you</c><00:08:23.800><c> want</c><00:08:23.979><c> and</c><00:08:24.190><c> then</c><00:08:24.220><c> you</c><00:08:24.850><c> give</c><00:08:24.970><c> it</c><00:08:25.270><c> the</c>

00:08:25.950 --> 00:08:25.960 align:start position:0%
that you want and then you give it the
 

00:08:25.960 --> 00:08:29.820 align:start position:0%
that you want and then you give it the
data<00:08:26.680><c> structure</c><00:08:27.190><c> that</c><00:08:27.370><c> we</c><00:08:27.669><c> just</c><00:08:27.850><c> created</c><00:08:28.830><c> okay</c>

00:08:29.820 --> 00:08:29.830 align:start position:0%
data structure that we just created okay
 

00:08:29.830 --> 00:08:32.070 align:start position:0%
data structure that we just created okay
let's<00:08:30.280><c> take</c><00:08:30.460><c> a</c><00:08:30.520><c> look</c><00:08:30.699><c> at</c><00:08:30.940><c> our</c><00:08:31.479><c> audio</c>

00:08:32.070 --> 00:08:32.080 align:start position:0%
let's take a look at our audio
 

00:08:32.080 --> 00:08:37.310 align:start position:0%
let's take a look at our audio
processing<00:08:32.500><c> function</c><00:08:33.010><c> it's</c><00:08:33.339><c> right</c><00:08:33.580><c> here</c><00:08:35.550><c> so</c>

00:08:37.310 --> 00:08:37.320 align:start position:0%
processing function it's right here so
 

00:08:37.320 --> 00:08:40.649 align:start position:0%
processing function it's right here so
so<00:08:38.320><c> this</c><00:08:38.469><c> one</c><00:08:38.650><c> initially</c><00:08:39.039><c> just</c><00:08:39.490><c> retrieves</c><00:08:40.150><c> the</c>

00:08:40.649 --> 00:08:40.659 align:start position:0%
so this one initially just retrieves the
 

00:08:40.659 --> 00:08:42.719 align:start position:0%
so this one initially just retrieves the
data<00:08:40.870><c> structure</c><00:08:41.589><c> that</c><00:08:41.740><c> we</c><00:08:41.919><c> allocated</c><00:08:42.370><c> earlier</c>

00:08:42.719 --> 00:08:42.729 align:start position:0%
data structure that we allocated earlier
 

00:08:42.729 --> 00:08:47.670 align:start position:0%
data structure that we allocated earlier
and<00:08:42.969><c> then</c><00:08:43.960><c> it</c><00:08:44.260><c> it</c><00:08:44.589><c> extracts</c><00:08:45.279><c> the</c><00:08:46.680><c> filter</c>

00:08:47.670 --> 00:08:47.680 align:start position:0%
and then it it extracts the filter
 

00:08:47.680 --> 00:08:50.670 align:start position:0%
and then it it extracts the filter
update<00:08:48.010><c> coefficient</c><00:08:48.670><c> from</c><00:08:49.320><c> from</c><00:08:50.320><c> this</c><00:08:50.440><c> data</c>

00:08:50.670 --> 00:08:50.680 align:start position:0%
update coefficient from from this data
 

00:08:50.680 --> 00:08:53.070 align:start position:0%
update coefficient from from this data
structure<00:08:51.040><c> and</c><00:08:51.370><c> there's</c><00:08:52.270><c> one</c><00:08:52.450><c> crucial</c><00:08:52.660><c> point</c>

00:08:53.070 --> 00:08:53.080 align:start position:0%
structure and there's one crucial point
 

00:08:53.080 --> 00:08:56.370 align:start position:0%
structure and there's one crucial point
in<00:08:53.230><c> here</c><00:08:53.529><c> mainly</c><00:08:54.190><c> it</c><00:08:54.760><c> retrieves</c><00:08:55.390><c> this</c><00:08:55.990><c> update</c>

00:08:56.370 --> 00:08:56.380 align:start position:0%
in here mainly it retrieves this update
 

00:08:56.380 --> 00:08:59.790 align:start position:0%
in here mainly it retrieves this update
coefficient<00:08:57.040><c> using</c><00:08:57.130><c> a</c><00:08:57.700><c> a</c><00:08:58.390><c> GCC</c><00:08:59.110><c> built-in</c>

00:08:59.790 --> 00:08:59.800 align:start position:0%
coefficient using a a GCC built-in
 

00:08:59.800 --> 00:09:03.030 align:start position:0%
coefficient using a a GCC built-in
called<00:09:00.550><c> sync</c><00:09:01.120><c> fetch</c><00:09:01.450><c> and</c><00:09:01.720><c> or</c><00:09:01.930><c> and</c><00:09:02.140><c> the</c><00:09:02.770><c> point</c>

00:09:03.030 --> 00:09:03.040 align:start position:0%
called sync fetch and or and the point
 

00:09:03.040 --> 00:09:07.079 align:start position:0%
called sync fetch and or and the point
here<00:09:03.370><c> is</c><00:09:03.490><c> to</c><00:09:04.200><c> access</c><00:09:05.200><c> this</c><00:09:06.160><c> coefficient</c><00:09:06.820><c> in</c><00:09:06.970><c> an</c>

00:09:07.079 --> 00:09:07.089 align:start position:0%
here is to access this coefficient in an
 

00:09:07.089 --> 00:09:10.290 align:start position:0%
here is to access this coefficient in an
anatomic<00:09:07.900><c> way</c><00:09:08.430><c> because</c><00:09:09.430><c> we</c><00:09:09.880><c> need</c><00:09:10.029><c> to</c><00:09:10.120><c> worry</c>

00:09:10.290 --> 00:09:10.300 align:start position:0%
anatomic way because we need to worry
 

00:09:10.300 --> 00:09:11.610 align:start position:0%
anatomic way because we need to worry
about<00:09:10.420><c> thread</c><00:09:10.810><c> safety</c><00:09:11.080><c> here</c><00:09:11.440><c> this</c>

00:09:11.610 --> 00:09:11.620 align:start position:0%
about thread safety here this
 

00:09:11.620 --> 00:09:13.290 align:start position:0%
about thread safety here this
coefficient<00:09:12.190><c> may</c><00:09:12.370><c> be</c><00:09:12.430><c> changed</c><00:09:13.089><c> by</c><00:09:13.270><c> a</c>

00:09:13.290 --> 00:09:13.300 align:start position:0%
coefficient may be changed by a
 

00:09:13.300 --> 00:09:15.329 align:start position:0%
coefficient may be changed by a
different<00:09:13.720><c> thread</c><00:09:13.990><c> when</c><00:09:14.320><c> when</c><00:09:14.980><c> you</c><00:09:15.010><c> change</c>

00:09:15.329 --> 00:09:15.339 align:start position:0%
different thread when when you change
 

00:09:15.339 --> 00:09:17.670 align:start position:0%
different thread when when you change
when<00:09:15.580><c> you</c><00:09:15.640><c> move</c><00:09:15.880><c> the</c><00:09:16.060><c> slider</c><00:09:16.330><c> in</c><00:09:16.600><c> the</c><00:09:16.750><c> UI</c><00:09:16.870><c> then</c>

00:09:17.670 --> 00:09:17.680 align:start position:0%
when you move the slider in the UI then
 

00:09:17.680 --> 00:09:19.710 align:start position:0%
when you move the slider in the UI then
the<00:09:18.220><c> UI</c><00:09:18.370><c> thread</c><00:09:18.520><c> will</c><00:09:19.209><c> change</c><00:09:19.510><c> this</c>

00:09:19.710 --> 00:09:19.720 align:start position:0%
the UI thread will change this
 

00:09:19.720 --> 00:09:22.019 align:start position:0%
the UI thread will change this
coefficient<00:09:20.350><c> but</c><00:09:21.070><c> we're</c><00:09:21.490><c> in</c><00:09:21.610><c> the</c><00:09:21.700><c> audio</c>

00:09:22.019 --> 00:09:22.029 align:start position:0%
coefficient but we're in the audio
 

00:09:22.029 --> 00:09:23.910 align:start position:0%
coefficient but we're in the audio
thread<00:09:22.360><c> here</c><00:09:22.600><c> and</c><00:09:22.810><c> so</c><00:09:23.110><c> we</c><00:09:23.230><c> might</c><00:09:23.410><c> mean</c><00:09:23.589><c> we</c><00:09:23.800><c> need</c>

00:09:23.910 --> 00:09:23.920 align:start position:0%
thread here and so we might mean we need
 

00:09:23.920 --> 00:09:25.019 align:start position:0%
thread here and so we might mean we need
to<00:09:24.010><c> make</c><00:09:24.190><c> sure</c><00:09:24.220><c> we're</c><00:09:24.490><c> properly</c><00:09:24.670><c> synchronized</c>

00:09:25.019 --> 00:09:25.029 align:start position:0%
to make sure we're properly synchronized
 

00:09:25.029 --> 00:09:28.710 align:start position:0%
to make sure we're properly synchronized
and<00:09:25.690><c> this</c><00:09:26.260><c> this</c><00:09:26.910><c> GCC</c><00:09:27.910><c> build</c><00:09:28.180><c> and</c><00:09:28.390><c> takes</c><00:09:28.630><c> care</c>

00:09:28.710 --> 00:09:28.720 align:start position:0%
and this this GCC build and takes care
 

00:09:28.720 --> 00:09:32.340 align:start position:0%
and this this GCC build and takes care
of<00:09:28.930><c> that</c><00:09:29.550><c> okay</c><00:09:30.550><c> so</c><00:09:31.180><c> now</c><00:09:31.360><c> once</c><00:09:31.810><c> we've</c><00:09:31.990><c> retrieved</c>

00:09:32.340 --> 00:09:32.350 align:start position:0%
of that okay so now once we've retrieved
 

00:09:32.350 --> 00:09:34.380 align:start position:0%
of that okay so now once we've retrieved
outfit<00:09:32.770><c> filter</c><00:09:33.190><c> update</c><00:09:33.490><c> coefficient</c><00:09:34.060><c> in</c><00:09:34.270><c> a</c>

00:09:34.380 --> 00:09:34.390 align:start position:0%
outfit filter update coefficient in a
 

00:09:34.390 --> 00:09:36.540 align:start position:0%
outfit filter update coefficient in a
thread-safe<00:09:34.779><c> fashion</c><00:09:35.380><c> we</c><00:09:35.890><c> can</c><00:09:36.040><c> do</c><00:09:36.190><c> the</c><00:09:36.310><c> actual</c>

00:09:36.540 --> 00:09:36.550 align:start position:0%
thread-safe fashion we can do the actual
 

00:09:36.550 --> 00:09:39.000 align:start position:0%
thread-safe fashion we can do the actual
signal<00:09:36.940><c> processing</c><00:09:37.360><c> and</c><00:09:37.660><c> that's</c><00:09:38.560><c> happening</c>

00:09:39.000 --> 00:09:39.010 align:start position:0%
signal processing and that's happening
 

00:09:39.010 --> 00:09:42.150 align:start position:0%
signal processing and that's happening
right<00:09:39.160><c> here</c><00:09:39.330><c> so</c><00:09:40.330><c> we</c><00:09:40.990><c> iterate</c><00:09:41.410><c> over</c><00:09:41.860><c> our</c>

00:09:42.150 --> 00:09:42.160 align:start position:0%
right here so we iterate over our
 

00:09:42.160 --> 00:09:45.300 align:start position:0%
right here so we iterate over our
buffers<00:09:42.670><c> we</c><00:09:43.089><c> read</c><00:09:43.300><c> our</c><00:09:43.480><c> input</c><00:09:44.140><c> samples</c><00:09:44.320><c> we</c>

00:09:45.300 --> 00:09:45.310 align:start position:0%
buffers we read our input samples we
 

00:09:45.310 --> 00:09:47.490 align:start position:0%
buffers we read our input samples we
perform<00:09:45.910><c> our</c><00:09:46.029><c> signal</c><00:09:46.450><c> processing</c><00:09:46.810><c> magic</c><00:09:47.320><c> and</c>

00:09:47.490 --> 00:09:47.500 align:start position:0%
perform our signal processing magic and
 

00:09:47.500 --> 00:09:51.480 align:start position:0%
perform our signal processing magic and
we<00:09:48.310><c> write</c><00:09:48.550><c> our</c><00:09:48.930><c> output</c><00:09:49.930><c> buffers</c><00:09:50.370><c> so</c><00:09:51.370><c> in</c>

00:09:51.480 --> 00:09:51.490 align:start position:0%
we write our output buffers so in
 

00:09:51.490 --> 00:09:53.220 align:start position:0%
we write our output buffers so in
particular<00:09:51.760><c> if</c><00:09:51.820><c> you've</c><00:09:52.570><c> studied</c><00:09:52.779><c> signal</c>

00:09:53.220 --> 00:09:53.230 align:start position:0%
particular if you've studied signal
 

00:09:53.230 --> 00:09:55.650 align:start position:0%
particular if you've studied signal
processing<00:09:53.589><c> then</c><00:09:54.430><c> you</c><00:09:54.820><c> will</c><00:09:54.970><c> recognize</c><00:09:55.420><c> this</c>

00:09:55.650 --> 00:09:55.660 align:start position:0%
processing then you will recognize this
 

00:09:55.660 --> 00:09:58.230 align:start position:0%
processing then you will recognize this
line<00:09:55.930><c> right</c><00:09:56.140><c> here</c><00:09:56.220><c> this</c><00:09:57.220><c> is</c><00:09:57.339><c> just</c><00:09:57.550><c> the</c><00:09:57.850><c> update</c>

00:09:58.230 --> 00:09:58.240 align:start position:0%
line right here this is just the update
 

00:09:58.240 --> 00:10:01.920 align:start position:0%
line right here this is just the update
formula<00:09:58.600><c> of</c><00:09:58.959><c> a</c><00:09:59.400><c> simple</c><00:10:00.400><c> RC</c><00:10:00.610><c> low-pass</c><00:10:01.480><c> filter</c>

00:10:01.920 --> 00:10:01.930 align:start position:0%
formula of a simple RC low-pass filter
 

00:10:01.930 --> 00:10:04.050 align:start position:0%
formula of a simple RC low-pass filter
and<00:10:02.140><c> that's</c><00:10:02.950><c> it</c><00:10:03.160><c> as</c><00:10:03.310><c> far</c><00:10:03.339><c> as</c><00:10:03.610><c> the</c><00:10:03.730><c> code</c><00:10:03.880><c> is</c>

00:10:04.050 --> 00:10:04.060 align:start position:0%
and that's it as far as the code is
 

00:10:04.060 --> 00:10:06.690 align:start position:0%
and that's it as far as the code is
concerned<00:10:04.860><c> alright</c><00:10:05.860><c> so</c><00:10:06.040><c> that's</c><00:10:06.220><c> it</c><00:10:06.370><c> for</c><00:10:06.400><c> now</c>

00:10:06.690 --> 00:10:06.700 align:start position:0%
concerned alright so that's it for now
 

00:10:06.700 --> 00:10:08.579 align:start position:0%
concerned alright so that's it for now
you<00:10:07.089><c> can</c><00:10:07.270><c> find</c><00:10:07.540><c> the</c><00:10:07.720><c> source</c><00:10:07.990><c> code</c><00:10:08.200><c> at</c><00:10:08.380><c> github</c>

00:10:08.579 --> 00:10:08.589 align:start position:0%
you can find the source code at github
 

00:10:08.589 --> 00:10:12.199 align:start position:0%
you can find the source code at github
and<00:10:09.060><c> there's</c><00:10:10.060><c> a</c><00:10:10.150><c> forum</c><00:10:10.570><c> at</c><00:10:11.140><c> Google</c><00:10:11.500><c> Groups</c><00:10:11.770><c> and</c>

00:10:12.199 --> 00:10:12.209 align:start position:0%
and there's a forum at Google Groups and
 

00:10:12.209 --> 00:10:15.060 align:start position:0%
and there's a forum at Google Groups and
don't<00:10:13.209><c> hesitate</c><00:10:13.360><c> to</c><00:10:13.660><c> to</c><00:10:14.290><c> get</c><00:10:14.440><c> in</c><00:10:14.560><c> touch</c><00:10:14.740><c> if</c><00:10:14.770><c> you</c>

00:10:15.060 --> 00:10:15.070 align:start position:0%
don't hesitate to to get in touch if you
 

00:10:15.070 --> 00:10:16.530 align:start position:0%
don't hesitate to to get in touch if you
have<00:10:15.190><c> any</c><00:10:15.339><c> questions</c><00:10:15.820><c> or</c><00:10:16.000><c> comments</c>

00:10:16.530 --> 00:10:16.540 align:start position:0%
have any questions or comments
 

00:10:16.540 --> 00:10:19.350 align:start position:0%
have any questions or comments
happy<00:10:17.200><c> hacking</c>

