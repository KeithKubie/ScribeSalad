WEBVTT
Kind: captions
Language: en

00:00:00.330 --> 00:00:03.130
&gt;&gt; All right. Now, you might get a misleading impression

00:00:03.130 --> 00:00:05.460
from what I just presented there, because I did this

00:00:05.460 --> 00:00:10.010
sort of odd trick that's not really very kosher. Specifically,

00:00:10.010 --> 00:00:12.520
when I gave the example of a teacher asking questions

00:00:12.520 --> 00:00:16.270
to to lead the learner to a particular hypothesis, I

00:00:16.270 --> 00:00:19.310
allowed the teacher to ask any possible question in the

00:00:19.310 --> 00:00:22.570
universe of possible questions. Right, so the teacher could construct

00:00:22.570 --> 00:00:25.790
a question, and in this particular case, that, that specifically

00:00:25.790 --> 00:00:28.700
had a yes answer for the target hypothesis. And a no

00:00:28.700 --> 00:00:31.790
answer everywhere else. And that just simply doesn't happen in any

00:00:31.790 --> 00:00:35.130
realistic learning questions. So we need to think a little bit

00:00:35.130 --> 00:00:37.810
more about the question of what happens when the teacher is

00:00:37.810 --> 00:00:40.250
constrained with respect to the kinds of queries that it can

00:00:40.250 --> 00:00:44.310
suggest. So I'm going to, I'm going to set up classic computational learning

00:00:44.310 --> 00:00:47.560
theory hypothesis class, and we'll go through some examples about what

00:00:47.560 --> 00:00:50.830
happens when the teacher's constrained in this way. So let's imagine that

00:00:50.830 --> 00:00:53.760
our input space is basically k-bit inputs,

00:00:53.760 --> 00:00:58.685
so x1 through xk, and the hypothesis class

00:00:58.685 --> 00:01:02.900
[INAUDIBLE] and literals or their negation. So here's

00:01:02.900 --> 00:01:05.690
a, here's a concrete example. Here's a hypothesis

00:01:05.690 --> 00:01:11.460
that is in this set. X1 and x3 and not x5. We're going to connect together

00:01:11.460 --> 00:01:13.200
some of these variables, not necessarily all of

00:01:13.200 --> 00:01:15.830
them. And some of them can be negated.

00:01:15.830 --> 00:01:19.920
And, it's all the connectors have to be ands. All right, so Charles, let's make

00:01:19.920 --> 00:01:21.430
sure that that you understand this. So

00:01:21.430 --> 00:01:24.340
let's let's look at, some inputs. Alright. So

00:01:24.340 --> 00:01:28.670
let's say our input is this. X1 is 0. x2 is 1. x3 is 0.

00:01:28.670 --> 00:01:34.240
x4 is 1. x5 is 1. What is this formula going to evaluate in this case?

00:01:34.240 --> 00:01:36.960
&gt;&gt; Okay so, a 0 is false and 1 is true I assume, because,

00:01:36.960 --> 00:01:40.910
that's what we do in these things. X2 and x4 don't matter. I just

00:01:40.910 --> 00:01:44.200
have to look at x1, x3, and x5. So, x1 had

00:01:44.200 --> 00:01:47.260
better be true, and it isn't, so I already know the answer.

00:01:47.260 --> 00:01:52.880
&gt;&gt; It's false. Very good. All right, let's let's try a couple more of these.

00:01:52.880 --> 00:01:56.130
&gt;&gt; Okay. So, I would do the same thing I did

00:01:56.130 --> 00:01:58.450
before. I would look at x1, x3, and x5. So in

00:01:58.450 --> 00:02:02.900
this case, x1, cleverly, I've noticed this 1 so, that doesn't

00:02:02.900 --> 00:02:05.760
give me the answer right away because you're an evil teacher.

00:02:05.760 --> 00:02:09.190
x3 is also 1 but x5 is 1, and according to

00:02:09.190 --> 00:02:11.930
the hypothesis it has to be 0 for this to be true,

00:02:11.930 --> 00:02:15.300
so 0. I can do the same kind of thing for the

00:02:15.300 --> 00:02:18.050
third line, so x1 is true like it needs to be, but

00:02:18.050 --> 00:02:21.470
x3 is false instead of being true so also 0. And

00:02:21.470 --> 00:02:24.170
then in the bottom, let's see. X1 is true, which it needs

00:02:24.170 --> 00:02:26.510
to be. X3 is true, which it needs to be, and X5

00:02:26.510 --> 00:02:30.420
is false, which it needs to be, so the output is 1.

00:02:30.420 --> 00:02:31.940
&gt;&gt; Very good.

00:02:31.940 --> 00:02:32.690
&gt;&gt; All right. I got it.

