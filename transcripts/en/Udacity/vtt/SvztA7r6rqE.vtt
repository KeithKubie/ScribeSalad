WEBVTT
Kind: captions
Language: en

00:00:00.640 --> 00:00:04.750
To drill down for a minute into this question of data transport ability.

00:00:04.750 --> 00:00:10.090
This is sometimes called serialization in Java, or marshaling, or even pickling.

00:00:10.090 --> 00:00:14.590
Some of the differences that might arrive have to do with bit order. Yes,

00:00:14.590 --> 00:00:19.170
some machines order the bits from high order to low order in different orders.

00:00:19.170 --> 00:00:24.390
Byte orders within a word. Different character sets that are used. Alignment,

00:00:24.390 --> 00:00:28.850
that is, whether, particular pieces of data are aligned on word boundaries or

00:00:28.850 --> 00:00:34.080
byte boundaries. Okay? And then the whole question of word length. Now we have,

00:00:34.080 --> 00:00:37.740
of course, 64-bit, words, but other machines are only 32-bits. And,

00:00:37.740 --> 00:00:44.590
of course there are, uses, of, data storage in which we wish to use

00:00:44.590 --> 00:00:49.740
less than a full word. Even after these, differences are resolved there's still

00:00:49.740 --> 00:00:54.010
the question of how the various pieces of some complex data are,

00:00:54.010 --> 00:00:59.080
are, are organized. Okay? Must they be kept in a certain order? Can they be,

00:00:59.080 --> 00:01:04.560
can they be shuffled around in order to compact them? These days,

00:01:04.560 --> 00:01:09.763
many, approaches to data representation include self-definition. That is,

00:01:09.763 --> 00:01:11.781
not only are you communicating with data, but

00:01:11.781 --> 00:01:14.732
you're communicating at a description of the data. That,

00:01:14.732 --> 00:01:19.950
can then be decoded at the other end. Fortunately, various, standards have,

00:01:19.950 --> 00:01:25.180
arisen to address these kinds of questions. Internet standard x680 is one, and

00:01:25.180 --> 00:01:30.660
then on the commercial side Google has developed the idea of protocol buffers.

00:01:30.660 --> 00:01:32.590
Which are descriptions of data.

00:01:32.590 --> 00:01:37.400
Which then can be incorporated into your applications for

00:01:37.400 --> 00:01:41.160
communication among the pieces and interpretation at either end by an API.

