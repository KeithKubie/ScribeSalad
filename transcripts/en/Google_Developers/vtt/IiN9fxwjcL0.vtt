WEBVTT
Kind: captions
Language: en

00:00:01.267 --> 00:00:02.200
Wilson: Hi. I'm Brett,
if you don't know me.

00:00:02.200 --> 00:00:05.634
Okay, so I'm gonna be
talking about...

00:00:05.634 --> 00:00:09.267
Not working. Okay.

00:00:09.267 --> 00:00:11.968
Okay. I'm gonna be talking
about the layers of our program.

00:00:11.968 --> 00:00:14.434
Chrome is like an onion
or a parfait,

00:00:14.434 --> 00:00:17.367
where there's many layers
that go deeper and deeper.

00:00:17.367 --> 00:00:18.934
[laughs]

00:00:18.934 --> 00:00:20.234
Onion parfait.

00:00:20.234 --> 00:00:21.634
So first I'm gonna show you

00:00:21.634 --> 00:00:23.667
how to get to the information
that I'm gonna tell you

00:00:23.667 --> 00:00:26.434
so you can look it up later when
you aren't watching the talk.

00:00:26.434 --> 00:00:29.133
So this is the Chromium
developer site

00:00:29.133 --> 00:00:30.767
on dev.chromium.org.

00:00:30.767 --> 00:00:32.868
And what you do is you first
click on For Developers,

00:00:32.868 --> 00:00:34.367
'cause you're a developer.

00:00:34.367 --> 00:00:37.968
And...the things
I'm gonna be discussing

00:00:37.968 --> 00:00:40.934
are under the engineering
design docs here at the bottom.

00:00:40.934 --> 00:00:43.901
So if you go to the engineering
design docs...

00:00:43.901 --> 00:00:46.667
these first two things are
probably the most important.

00:00:46.667 --> 00:00:48.467
So there's the Multi-process
Architecture

00:00:48.467 --> 00:00:49.767
which Darin talked about,

00:00:49.767 --> 00:00:52.901
and here it's got an overview
of everything.

00:00:52.901 --> 00:00:54.701
If you're confused
about what Darin said,

00:00:54.701 --> 00:00:56.300
this is a good place to start.

00:00:56.300 --> 00:01:00.133
Um...the other thing
to look at is...

00:01:00.133 --> 00:01:02.467
how Chromium displays
web pages,

00:01:02.467 --> 00:01:04.801
which is what I'm gonna
be talking about today.

00:01:04.801 --> 00:01:07.000
So it's got a discussion
of everything.

00:01:07.000 --> 00:01:09.634
You have diagrams
and stuff like that.

00:01:09.634 --> 00:01:13.033
So this is one of the diagrams
from that page

00:01:13.033 --> 00:01:15.000
that I'm gonna be discussing
a lot.

00:01:15.000 --> 00:01:17.300
So Dimitri just talked
about WebKit,

00:01:17.300 --> 00:01:18.734
which is at the bottom.

00:01:18.734 --> 00:01:20.801
That's kind of our low level
library that we use

00:01:20.801 --> 00:01:22.634
for rendering web pages.

00:01:22.634 --> 00:01:25.234
As he said,
that lives on webkit.org,

00:01:25.234 --> 00:01:27.801
and if we change it,
you have to change it on WebKit,

00:01:27.801 --> 00:01:30.467
and then we pull it
to our tree.

00:01:30.467 --> 00:01:34.234
So historically we also
had a WebKit port,

00:01:34.234 --> 00:01:37.267
and the WebKit port
provides integration

00:01:37.267 --> 00:01:40.601
with the graphics layer
like Skia, system fonts,

00:01:40.601 --> 00:01:42.601
the network.

00:01:42.601 --> 00:01:43.901
And we've got our own
implementation

00:01:43.901 --> 00:01:46.067
of all those things--
that's called our port.

00:01:46.067 --> 00:01:47.701
And we've recently moved
our WebKit port

00:01:47.701 --> 00:01:49.200
into the WebKit tree.

00:01:49.200 --> 00:01:52.100
So that means anytime
you need to change something

00:01:52.100 --> 00:01:53.734
with fonts or graphics,

00:01:53.734 --> 00:01:55.534
you're gonna have to also
make it a patch to WebKit,

00:01:55.534 --> 00:01:57.734
even though it only really
affects us right now.

00:01:57.734 --> 00:02:00.734
So these two things,
both of them on WebKit,

00:02:00.734 --> 00:02:03.634
and they cannot depend
on any other parts of Chrome.

00:02:03.634 --> 00:02:05.334
Because they live
in WebKit's tree,

00:02:05.334 --> 00:02:08.767
they should be able
to compile by themselves.

00:02:08.767 --> 00:02:10.100
[clears throat]

00:02:10.100 --> 00:02:13.100
So the next layer is
the WebKit glue

00:02:13.100 --> 00:02:16.534
which we have in
our WebKit directory/glue.

00:02:16.534 --> 00:02:18.634
And that kinda provides
a wrapper around WebKit

00:02:18.634 --> 00:02:20.601
that we use to access it.

00:02:20.601 --> 00:02:22.267
And so it does several things.

00:02:22.267 --> 00:02:25.868
It provides, uh...
type independence.

00:02:25.868 --> 00:02:28.067
So WebKit uses
its own string types,

00:02:28.067 --> 00:02:29.968
its own URL types.

00:02:29.968 --> 00:02:32.400
It has lots of dependencies
all over the place.

00:02:32.400 --> 00:02:34.667
And we don't wanna have Chrome
inherit all that stuff,

00:02:34.667 --> 00:02:36.667
'cause we're gonna be confused
with, you know,

00:02:36.667 --> 00:02:39.133
ten different string types
and, uh, you know,

00:02:39.133 --> 00:02:41.100
two URL classes.

00:02:41.100 --> 00:02:43.868
So the WebKit glue's job
is to translate types

00:02:43.868 --> 00:02:48.400
between, for example,
a GURL and a KURL...

00:02:48.400 --> 00:02:53.367
Um...or a WebCore string
to a standard string.

00:02:53.367 --> 00:02:57.133
And so it kind of provides
all the, uh...

00:02:57.133 --> 00:02:58.901
an implementation
of all the interfaces

00:02:58.901 --> 00:03:00.467
that WebKit uses.

00:03:00.467 --> 00:03:04.734
So there might be a frame loader
client callback thing.

00:03:04.734 --> 00:03:06.501
It will implement its own,

00:03:06.501 --> 00:03:08.434
convert it to Google types,

00:03:08.434 --> 00:03:11.100
and then it will have
its own callback interface

00:03:11.100 --> 00:03:12.567
that you'll have to implement.

00:03:12.567 --> 00:03:16.000
So there's kind of a hop
as you go across this boundary.

00:03:16.000 --> 00:03:18.501
And so if you do need
to get something...

00:03:18.501 --> 00:03:20.267
if you're in our WebKit port

00:03:20.267 --> 00:03:22.834
and you need to
get something from the browser,

00:03:22.834 --> 00:03:24.634
like the browser process
or something higher level,

00:03:24.634 --> 00:03:27.634
you actually have to go through
this delegate interface.

00:03:27.634 --> 00:03:29.467
That hops through
to the WebKit glue,

00:03:29.467 --> 00:03:32.400
and then that's implemented
at a higher level.

00:03:32.400 --> 00:03:34.300
So the WebKit glue

00:03:34.300 --> 00:03:36.868
shouldn't depend on
any other parts of Chrome.

00:03:36.868 --> 00:03:38.501
It's basically
our embedding layer,

00:03:38.501 --> 00:03:40.200
so you should be able
to write a new browser

00:03:40.200 --> 00:03:43.434
using our WebKit glue,
totally different in every way.

00:03:43.434 --> 00:03:45.934
And we have such a browser
called TestShell

00:03:45.934 --> 00:03:49.934
which is a separate browser
that just uses our WebKit glue,

00:03:49.934 --> 00:03:52.400
has its own simple front end,
and that's it.

00:03:52.400 --> 00:03:55.167
So TestShell can't depend on
any other parts of Chrome

00:03:55.167 --> 00:03:57.601
other than base.

00:03:57.601 --> 00:04:00.000
So, um, here's our directory.

00:04:00.000 --> 00:04:03.033
So base here at the top
is kind of used by everything

00:04:03.033 --> 00:04:05.501
except the WebCore code,
which obviously isn't ours.

00:04:05.501 --> 00:04:08.701
So WebKit glue depends on this.

00:04:08.701 --> 00:04:11.267
We've got our network library
that depends on this.

00:04:11.267 --> 00:04:15.067
You know, we've got our sandbox
that depends on this.

00:04:15.067 --> 00:04:17.267
But basically nothing else here
except Chrome

00:04:17.267 --> 00:04:19.434
depends on anything but base.

00:04:19.434 --> 00:04:22.300
So for example,
Net doesn't depend on

00:04:22.300 --> 00:04:25.667
you know, Media or ICP
or Gears or Chrome.

00:04:25.667 --> 00:04:28.133
And then Chrome kind of brings
all these things together

00:04:28.133 --> 00:04:29.701
into the final product.

00:04:29.701 --> 00:04:31.601
So hopefully, this makes it
easy for projects

00:04:31.601 --> 00:04:33.667
to pick up
our different components

00:04:33.667 --> 00:04:35.601
from these top level
directories.

00:04:35.601 --> 00:04:39.334
They just have to take base
and the sandbox or whatever.

00:04:39.334 --> 00:04:42.801
So um...

00:04:42.801 --> 00:04:46.801
Okay, so WebKit glue depends
on base, and that's it.

00:04:46.801 --> 00:04:49.767
So you can write
a new browser, um...

00:04:49.767 --> 00:04:52.133
that's single process.

00:04:52.133 --> 00:04:54.901
Or you can use our multi-process
embedding layer,

00:04:54.901 --> 00:04:56.934
which is,
as Darin talked about,

00:04:56.934 --> 00:05:00.267
it's got the RenderProcess
and, uh--

00:05:00.267 --> 00:05:02.934
okay, let me talk about that.
[laughs]

00:05:02.934 --> 00:05:05.567
So the RenderProcess

00:05:05.567 --> 00:05:08.701
is kind of implemented
in this render project

00:05:08.701 --> 00:05:10.868
which is in Chrome/renderer.

00:05:10.868 --> 00:05:13.300
So these are things like
RenderView and RenderWidget.

00:05:13.300 --> 00:05:16.067
They're called Render.
Everything starts with Render.

00:05:16.067 --> 00:05:19.801
And that talks to the
corresponding interfaces

00:05:19.801 --> 00:05:21.567
on the browser side.

00:05:21.567 --> 00:05:24.300
So each interface in Render
has a host

00:05:24.300 --> 00:05:25.901
in the RenderHostDirectory

00:05:25.901 --> 00:05:28.000
called RenderViewHost
or RenderWidgetHost.

00:05:28.000 --> 00:05:29.634
So these two things
kinda go together.

00:05:29.634 --> 00:05:31.400
They're both sides
of the pipe.

00:05:31.400 --> 00:05:33.300
And if you wanna write
a multi-process browser,

00:05:33.300 --> 00:05:35.000
you use this Renderer
host layer,

00:05:35.000 --> 00:05:37.834
which is in
chrome browser/render_host.

00:05:37.834 --> 00:05:40.000
And just like with glue,

00:05:40.000 --> 00:05:42.434
it shouldn't depend
on other parts of Chrome.

00:05:42.434 --> 00:05:45.133
So it shouldn't know anything
about our browser

00:05:45.133 --> 00:05:47.467
or the fact that we have tabs
or anything like that.

00:05:47.467 --> 00:05:49.033
And if you wanna write
a multi-process browser,

00:05:49.033 --> 00:05:51.167
you should be able
to grab this layer

00:05:51.167 --> 00:05:52.934
and you're, you know,
ready to go,

00:05:52.934 --> 00:05:54.767
writing everything else
different.

00:05:54.767 --> 00:05:58.434
Um...so we aren't
perfect in this respect.

00:05:58.434 --> 00:06:01.267
Sometimes it has
some bad dependencies.

00:06:01.267 --> 00:06:03.834
But please don't add more.

00:06:03.834 --> 00:06:06.000
So one way to think
about this is, you know,

00:06:06.000 --> 00:06:07.567
say you're writing
a dialogue box

00:06:07.567 --> 00:06:08.934
that has a web page in it,

00:06:08.934 --> 00:06:10.801
but it looks kinda like
a dialogue box.

00:06:10.801 --> 00:06:13.267
You should be able to embed
this Render host,

00:06:13.267 --> 00:06:15.901
like a RenderViewHost,
in that

00:06:15.901 --> 00:06:17.601
and just kind of get
a web page.

00:06:17.601 --> 00:06:20.067
It shouldn't have all these
things like a password manager

00:06:20.067 --> 00:06:22.467
or history or anything
like that.

00:06:22.467 --> 00:06:24.467
So if you're wondering
where to put stuff,

00:06:24.467 --> 00:06:26.634
if you need it
in a dialogue box

00:06:26.634 --> 00:06:28.667
or something very simple
like that, put it there.

00:06:28.667 --> 00:06:30.400
If it depends
on other parts of Chrome,

00:06:30.400 --> 00:06:33.100
put it in a higher level.

00:06:33.100 --> 00:06:36.167
So the Renderer host
has a delegate interface

00:06:36.167 --> 00:06:39.067
which is how it talks
with the higher levels.

00:06:39.067 --> 00:06:41.267
So that's implemented
of our tab contents layer.

00:06:41.267 --> 00:06:43.267
And that's kind of the layer
that really integrates

00:06:43.267 --> 00:06:45.300
with the rest
of the browser services.

00:06:45.300 --> 00:06:47.467
So for example,
it talks to history,

00:06:47.467 --> 00:06:51.467
it talks to, you know,
the password manager,

00:06:51.467 --> 00:06:53.567
the navigation list
for back/forward

00:06:53.567 --> 00:06:54.868
and all that stuff.

00:06:54.868 --> 00:06:56.868
So tab contents kinda brings
everything together.

00:06:56.868 --> 00:07:01.267
And, uh, above the tab contents
is the browser window.

00:07:01.267 --> 00:07:04.033
So you shouldn't ever be
talking up directly,

00:07:04.033 --> 00:07:06.367
so tab contents
has a tab contents delegate

00:07:06.367 --> 00:07:08.234
that browser window implements.

00:07:08.234 --> 00:07:10.501
And in fact,
other parts of our system

00:07:10.501 --> 00:07:14.067
actually use tab contentses that
aren't their browser window.

00:07:14.067 --> 00:07:16.534
So you shouldn't ever
depend on, you know,

00:07:16.534 --> 00:07:18.100
being in a browser window.

00:07:18.100 --> 00:07:19.901
So you talk up
through your delegate

00:07:19.901 --> 00:07:21.667
to talk to the browser
window.

00:07:21.667 --> 00:07:23.167
The browser window
has the tab strip,

00:07:23.167 --> 00:07:26.033
manages tab switching,
stuff like that.

00:07:26.033 --> 00:07:28.300
So obviously,
it's easy to talk down.

00:07:28.300 --> 00:07:30.334
The browser window
can talk to any of its tabs.

00:07:30.334 --> 00:07:32.834
The tab contents
can talk to the Renderer host.

00:07:32.834 --> 00:07:35.267
These talk to glue,
and glue talks to WebKit.

00:07:35.267 --> 00:07:40.200
And one of the things
we have on the buildbot is...

00:07:40.200 --> 00:07:43.300
this check deps...
which is not here.

00:07:45.400 --> 00:07:46.968
It was on the old build.

00:07:46.968 --> 00:07:48.901
How do we get to the old build?
Does anybody know?

00:07:48.901 --> 00:07:52.100
Oh, the old buildbot?

00:07:52.100 --> 00:07:55.033
Okay, anyway, so there's
one step with the build.

00:07:55.033 --> 00:07:56.734
This has check deps.

00:07:56.734 --> 00:08:01.968
Man: Waterfall...[indistinct]

00:08:01.968 --> 00:08:04.200
Wilson: Um...so this
check deps

00:08:04.200 --> 00:08:06.467
tries to enforce
that you don't include

00:08:06.467 --> 00:08:08.300
files from other parts
of the project

00:08:08.300 --> 00:08:09.767
that you're not supposed to.

00:08:09.767 --> 00:08:12.434
So...let's see.

00:08:18.834 --> 00:08:21.801
Okay, so here, one of the first
steps on the main buildbot,

00:08:21.801 --> 00:08:24.133
it updates and then it runs
through this check deps program.

00:08:24.133 --> 00:08:25.934
So if you ever see
check deps go red,

00:08:25.934 --> 00:08:28.734
that means that your change,
you know, for example,

00:08:28.734 --> 00:08:31.501
included something
that it wasn't supposed to

00:08:31.501 --> 00:08:34.133
like made a dependency
from the network library

00:08:34.133 --> 00:08:35.834
to Chrome.

00:08:35.834 --> 00:08:39.033
So if this ever goes red,
you need to back out your change

00:08:39.033 --> 00:08:40.934
or fix it really fast.

00:08:40.934 --> 00:08:44.033
Uh...not...not just make it
so that

00:08:44.033 --> 00:08:46.067
inclusion doesn't break
the build.

00:08:46.067 --> 00:08:49.100
'Cause that is telling you that
you're not supposed to do that.

00:08:49.100 --> 00:08:51.000
To try to kinda
keep us honest.

00:08:51.000 --> 00:08:52.334
And it's got a--

00:08:52.334 --> 00:08:54.601
if you have any questions,
you can ask me about that.

00:08:54.601 --> 00:08:57.968
It's got files in each
directory that kinda show...

00:08:57.968 --> 00:09:00.067
oh, files in this directory
are allowed to

00:09:00.067 --> 00:09:02.434
include base and net
but nothing else.

00:09:02.434 --> 00:09:04.734
So there's kind of a set
of hierarchical rules

00:09:04.734 --> 00:09:07.434
that it uses.

00:09:07.434 --> 00:09:09.400
And...
that's my whole talk.

00:09:09.400 --> 00:09:12.834
Anybody have any questions?

00:09:12.834 --> 00:09:16.801
Peter: How does Darin's
rewritten Chromium port

00:09:16.801 --> 00:09:18.334
affect all this stuff?

00:09:18.334 --> 00:09:19.667
Wilson: I'm--I don't know.

00:09:19.667 --> 00:09:21.601
Uh, Peter's asking

00:09:21.601 --> 00:09:25.868
how Darin's rewritten Chromium
port in WebKit affects this.

00:09:25.868 --> 00:09:29.601
I think it will go kind of
in-between glue and WebKit.

00:09:29.601 --> 00:09:31.834
It's kind of--it will be using
WebKit type,

00:09:31.834 --> 00:09:34.367
so we'll still need a glue layer
to convert types.

00:09:34.367 --> 00:09:36.033
But it would be a more
stable API,

00:09:36.033 --> 00:09:37.534
because right now WebKit glue

00:09:37.534 --> 00:09:40.067
kinda talks to these
crazy WebKit classes

00:09:40.067 --> 00:09:42.968
that change every day
and causes such problems.

00:09:42.968 --> 00:09:47.234
But I haven't seen it.
[laughs]

00:09:47.234 --> 00:09:49.601
Peter: Is it feasible
someday to pull out

00:09:49.601 --> 00:09:53.334
like the Renderer host
into source/rendererhost

00:09:53.334 --> 00:09:56.033
or something above Chrome
if it's supposed to be

00:09:56.033 --> 00:09:58.767
kind of like a usable
embedding layer?

00:09:58.767 --> 00:10:00.267
Wilson: Peter asked if he
could pull Renderer host

00:10:00.267 --> 00:10:02.868
out of the Chrome browser
directory.

00:10:02.868 --> 00:10:04.834
Maybe we haven't had
a need for that.

00:10:04.834 --> 00:10:06.534
But it would be nice
if we were able to

00:10:06.534 --> 00:10:08.200
and it had like
no dependencies.

00:10:08.200 --> 00:10:10.100
But it does.

00:10:10.100 --> 00:10:11.734
Um...yeah.

00:10:11.734 --> 00:10:14.901
I can't think of any reason
why it shouldn't be possible.

00:10:14.901 --> 00:10:18.300
Peter: Then you have--
you could rename WebKit glue

00:10:18.300 --> 00:10:19.601
to be like, you know,

00:10:19.601 --> 00:10:22.033
single process embedding layer
as a thing,

00:10:22.033 --> 00:10:24.467
and then this would be
multi-process if anything.

00:10:24.467 --> 00:10:26.901
Wilson: Okay, Peter has
some crazy naming ideas.

00:10:26.901 --> 00:10:29.434
[laughter]
Peter: Thank you.

00:10:29.434 --> 00:10:31.968
Wilson: [laughing]

00:10:31.968 --> 00:10:35.300
Any other questions?

00:10:35.300 --> 00:10:39.501
Okay.

00:10:39.501 --> 00:10:41.434
[applause]

