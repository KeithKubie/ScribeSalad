WEBVTT
Kind: captions
Language: en

00:00:03.154 --> 00:00:04.820
PROFESSOR: Today we're
going to continue

00:00:04.820 --> 00:00:06.480
our theme of linkage
folding, but we're

00:00:06.480 --> 00:00:08.540
going to generalize
our notion of linkage.

00:00:08.540 --> 00:00:11.470
And so we want to go
beyond folding just

00:00:11.470 --> 00:00:15.632
one-dimensional structures
in two dimensions, which

00:00:15.632 --> 00:00:17.840
is what we've been talking
about the last two classes

00:00:17.840 --> 00:00:18.590
for the most part.

00:00:18.590 --> 00:00:20.370
We did a little bit in 3-D.

00:00:20.370 --> 00:00:23.774
But Carpenter's Rule theorem is
about unfolding these things.

00:00:23.774 --> 00:00:25.190
We talked about
locked trees, when

00:00:25.190 --> 00:00:28.080
you add degree
three vertices here.

00:00:28.080 --> 00:00:30.590
I want to make things a
little harder and more

00:00:30.590 --> 00:00:39.740
interesting by adding fat
objects to those edges.

00:00:39.740 --> 00:00:42.690
So these are solid regions.

00:00:42.690 --> 00:00:44.770
You could think of
them as polygons,

00:00:44.770 --> 00:00:52.570
but they could also be smooth--
whatever, lines, circles,

00:00:52.570 --> 00:00:54.570
whatever you want.

00:00:54.570 --> 00:00:56.800
They're still hinged at
points, and they still

00:00:56.800 --> 00:00:59.610
fold like this
underlying linkage.

00:00:59.610 --> 00:01:01.989
But now the collision
constraint is even worse.

00:01:01.989 --> 00:01:03.780
Not only are the bars
not allowed to touch,

00:01:03.780 --> 00:01:05.810
but these blobs that
are attached to the bars

00:01:05.810 --> 00:01:07.440
are not allowed to
cross each other.

00:01:07.440 --> 00:01:08.050
Question?

00:01:08.050 --> 00:01:13.800
AUDIENCE: Isn't it kind of
like a rigid sub-linkage?

00:01:13.800 --> 00:01:15.580
PROFESSOR: Yeah
it's kind of like,

00:01:15.580 --> 00:01:18.870
say this was a polygon
because everything's almost

00:01:18.870 --> 00:01:21.260
a polygon-- everything's
linear to the first order.

00:01:21.260 --> 00:01:23.730
So you could just
triangulate this guy

00:01:23.730 --> 00:01:27.010
and say, yeah that's just like
a more complicated linkage.

00:01:27.010 --> 00:01:29.270
Now this moves as
a rigid object,

00:01:29.270 --> 00:01:32.220
and it can't collide
with anything else.

00:01:32.220 --> 00:01:34.910
You can even over-brace it if
you want-- add lots of bars--

00:01:34.910 --> 00:01:36.361
but it will move the same.

00:01:36.361 --> 00:01:37.860
Of course, then you
have collisions,

00:01:37.860 --> 00:01:39.080
so that's kind of cheating.

00:01:39.080 --> 00:01:42.705
But if you triangulate, you
will get the same behavior

00:01:42.705 --> 00:01:45.530
as these rigid objects, yeah.

00:01:45.530 --> 00:01:47.540
Now, we know that
as soon as you go--

00:01:47.540 --> 00:01:49.930
as soon as you have a vertex
of degree more than two,

00:01:49.930 --> 00:01:50.870
things can lock.

00:01:50.870 --> 00:01:52.850
So it's no surprise that
these things can lock.

00:01:52.850 --> 00:01:55.640
What's surprising is that you
can prove interesting things

00:01:55.640 --> 00:01:57.700
about them not locking.

00:01:57.700 --> 00:02:01.210
Let's start with some simple
examples of them locking.

00:02:01.210 --> 00:02:03.670
So these are triangles
hinged together

00:02:03.670 --> 00:02:05.800
at points that are locked.

00:02:05.800 --> 00:02:08.830
And this field
began back in '98.

00:02:08.830 --> 00:02:11.150
This is when we were
working on locked trees.

00:02:11.150 --> 00:02:15.310
Marty, our cameraman, was
working on locked triangles,

00:02:15.310 --> 00:02:18.360
and after a day he came
up with these examples.

00:02:18.360 --> 00:02:20.360
They're not too hard to find.

00:02:20.360 --> 00:02:23.280
This is probably the
most compelling one.

00:02:23.280 --> 00:02:27.400
You have on the top
those obtuse triangles.

00:02:27.400 --> 00:02:29.820
And because they share
an edge like that,

00:02:29.820 --> 00:02:31.850
they can really
only hinge one way.

00:02:31.850 --> 00:02:35.380
They can only close this angle.

00:02:35.380 --> 00:02:38.380
They can't open it, and
so this guy's stuck.

00:02:38.380 --> 00:02:41.720
It can't get out.

00:02:41.720 --> 00:02:45.020
This is a little
trickier, but what's

00:02:45.020 --> 00:02:46.590
interesting about
this example is

00:02:46.590 --> 00:02:48.337
all the triangles
are equilateral.

00:02:48.337 --> 00:02:49.170
It's pretty special.

00:02:49.170 --> 00:02:50.890
If you were hoping for
some good results here,

00:02:50.890 --> 00:02:52.431
you think, well
equilateral triangle.

00:02:52.431 --> 00:02:55.100
Those are the simplest,
nice shapes I know.

00:02:55.100 --> 00:02:55.917
So maybe they work.

00:02:55.917 --> 00:02:56.750
But they don't work.

00:02:56.750 --> 00:02:58.400
They can lock.

00:02:58.400 --> 00:03:00.180
This may be a
little less obvious

00:03:00.180 --> 00:03:04.000
because this guy's
reaching around on the top,

00:03:04.000 --> 00:03:08.520
can't unwind if this is
drawn sufficiently tight.

00:03:08.520 --> 00:03:11.320
And in fact, it's pretty
obvious because we

00:03:11.320 --> 00:03:13.690
could apply rule one right here.

00:03:13.690 --> 00:03:16.580
It's an edge spanned
by two acute angles,

00:03:16.580 --> 00:03:18.220
so that glues in there.

00:03:18.220 --> 00:03:23.080
Then you have a rigid triangle
here, so that stays co-linear

00:03:23.080 --> 00:03:24.595
and then you're screwed.

00:03:24.595 --> 00:03:26.970
Then the only thing that could
move is that top triangle,

00:03:26.970 --> 00:03:29.210
and it can't get out.

00:03:29.210 --> 00:03:34.220
So the self-touching
version is rigid,

00:03:34.220 --> 00:03:38.420
and therefore any perturbation
is strongly locked.

00:03:38.420 --> 00:03:42.060
So we can use the same tools we
did-- because you could ignore

00:03:42.060 --> 00:03:43.670
the fact that these
are solid things.

00:03:43.670 --> 00:03:45.680
So just think of them as
triangles, as linkages.

00:03:45.680 --> 00:03:47.740
And we could still use
rules one, and two,

00:03:47.740 --> 00:03:50.040
and rigidity, and
strongly locked, and all

00:03:50.040 --> 00:03:54.250
those good things, and prove
that these things are locked.

00:03:54.250 --> 00:03:57.000
And we'll do that some later.

00:03:57.000 --> 00:04:01.700
But I claim it's useful to
think about rigid shapes being

00:04:01.700 --> 00:04:04.760
attached to bars.

00:04:04.760 --> 00:04:09.440
Because in particular, we know
how to unfold things like this.

00:04:09.440 --> 00:04:11.824
So maybe there are
certain kinds of shapes

00:04:11.824 --> 00:04:12.740
that you could attach.

00:04:12.740 --> 00:04:15.490
Maybe if I just thickened
it a little bit,

00:04:15.490 --> 00:04:19.089
maybe that wouldn't
matter too much.

00:04:19.089 --> 00:04:21.820
We know that if you add
equilateral triangles,

00:04:21.820 --> 00:04:22.750
that can lock.

00:04:22.750 --> 00:04:26.610
But what if I add some
very small, thin triangles

00:04:26.610 --> 00:04:28.550
to these edges?

00:04:28.550 --> 00:04:30.600
Well then it turns
out you can't lock

00:04:30.600 --> 00:04:33.700
for the appropriate
definition of thin.

00:04:33.700 --> 00:04:42.300
So this is the idea of
an adorned chain, where

00:04:42.300 --> 00:04:49.680
you have rigid shapes
attached to bars.

00:04:53.220 --> 00:04:55.580
So the bars guide the motion.

00:04:55.580 --> 00:04:59.970
We're going to think
about the underlying

00:04:59.970 --> 00:05:01.569
linkage, the
underlying chain here,

00:05:01.569 --> 00:05:03.860
and then there are these
rigid shapes attached to them.

00:05:03.860 --> 00:05:06.260
They come along for the ride.

00:05:06.260 --> 00:05:12.250
And in particular-- blah,
blah, blah, all right

00:05:12.250 --> 00:05:14.490
we have some terminology.

00:05:19.010 --> 00:05:26.622
An adornment in general
looks something like this.

00:05:26.622 --> 00:05:32.620
This is rigid region,
but it has this segment

00:05:32.620 --> 00:05:36.400
marked on it called the base.

00:05:36.400 --> 00:05:38.180
The rest is the shape.

00:05:41.700 --> 00:05:46.100
So as the bar moves,
you just rigidly move

00:05:46.100 --> 00:05:48.570
the shape so that the base
lines up with the bar.

00:05:48.570 --> 00:05:51.050
And that's how
they follow along.

00:05:53.940 --> 00:05:58.680
And now we can define
the notion of thin,

00:05:58.680 --> 00:06:00.738
except we call it slender.

00:06:00.738 --> 00:06:04.050
A little nicer.

00:06:04.050 --> 00:06:06.105
The best thing
about mathematics is

00:06:06.105 --> 00:06:07.495
you get to make up terminology.

00:06:10.069 --> 00:06:11.610
Not the best thing,
but a cool thing.

00:06:14.340 --> 00:06:18.010
At some point, my dad was
having dinner with a group

00:06:18.010 --> 00:06:19.260
and saying, yeah that's great.

00:06:19.260 --> 00:06:20.634
We've made up all
these fun words

00:06:20.634 --> 00:06:22.440
like slender on
un-unfoldable which

00:06:22.440 --> 00:06:23.690
is something we'll talk about.

00:06:23.690 --> 00:06:26.467
And it's like what words
have you guys made up?

00:06:26.467 --> 00:06:28.550
And one guy raised his
hand an said, oh, Ethernet.

00:06:32.630 --> 00:06:34.680
We're not that cool.

00:06:34.680 --> 00:06:37.450
All right, so what does
slender adornment mean?

00:06:46.460 --> 00:06:50.430
It's going to be shapes
more like these thin things.

00:06:50.430 --> 00:06:53.500
Maybe even these, I think,
but not so much this.

00:06:53.500 --> 00:06:56.741
That doesn't look
so slender to me.

00:06:56.741 --> 00:06:58.240
What we're going
to do is walk along

00:06:58.240 --> 00:07:06.210
the boundary from one base
endpoint to the other.

00:07:08.820 --> 00:07:12.800
So let me draw an example here.

00:07:12.800 --> 00:07:13.925
I think that'll be slender.

00:07:17.870 --> 00:07:22.130
So we start here, we walk
along in this direction.

00:07:22.130 --> 00:07:25.930
And what we want is that this
motion, as you walk along

00:07:25.930 --> 00:07:40.340
there you monatonically increase
your distance to the endpoint

00:07:40.340 --> 00:07:45.450
you started at, the
former endpoint.

00:07:45.450 --> 00:07:50.897
And also, sort of equivalently,
you decrease the distance

00:07:50.897 --> 00:07:52.980
to the other endpoint, the
one you're approaching.

00:07:55.560 --> 00:07:59.360
And this should be true no
matter how you get there.

00:07:59.360 --> 00:08:03.920
So I'm walking in this
along this outer boundary,

00:08:03.920 --> 00:08:04.680
and I'm looking.

00:08:04.680 --> 00:08:08.890
What is the distance
to this end point?

00:08:08.890 --> 00:08:12.130
I can just draw a whole
bunch of concentric circles

00:08:12.130 --> 00:08:13.530
around that point.

00:08:13.530 --> 00:08:17.070
As long as these circles only
hit my curve once, I'm happy.

00:08:17.070 --> 00:08:20.980
That means this distance is
increasing monotonically.

00:08:20.980 --> 00:08:23.580
But you should also draw
them from the other side.

00:08:27.540 --> 00:08:31.950
It's like offset curves, good
old straight skeleton stuff.

00:08:31.950 --> 00:08:33.850
And lo and behold,
you monatonically

00:08:33.850 --> 00:08:37.289
move outward from here if you
went this direction, outward

00:08:37.289 --> 00:08:38.840
from here if you
went that direction.

00:08:38.840 --> 00:08:42.374
And this should be true for
both sides of the curve.

00:08:42.374 --> 00:08:43.675
This one looks like, yeah.

00:08:43.675 --> 00:08:45.370
It monotonically
increases distance

00:08:45.370 --> 00:08:49.450
from here, decreases from there
as you move right to left.

00:08:49.450 --> 00:08:50.990
That's slender.

00:08:50.990 --> 00:08:53.710
Pretty simple definition.

00:08:53.710 --> 00:08:58.640
The biggest slender shape you
could hope for-- the biggest

00:08:58.640 --> 00:09:05.740
one that you can do-- is if you
draw one giant circle centered

00:09:05.740 --> 00:09:09.650
at each of the
points, and passing

00:09:09.650 --> 00:09:10.970
through the other endpoint.

00:09:17.400 --> 00:09:18.230
That's slender.

00:09:18.230 --> 00:09:20.640
I know it looks pretty fat.

00:09:20.640 --> 00:09:23.020
This is like a
Reuleaux triangle,

00:09:23.020 --> 00:09:24.244
but that's still slender.

00:09:24.244 --> 00:09:26.160
And if you go outside
that, you're in trouble.

00:09:26.160 --> 00:09:27.735
Then you won't be monatonic.

00:09:27.735 --> 00:09:31.880
If I went here and came back,
I'm getting farther away,

00:09:31.880 --> 00:09:33.880
but then I'm getting
closer again to this point.

00:09:33.880 --> 00:09:34.965
So that's not allowed.

00:09:38.150 --> 00:09:40.810
Cool, so that's
slender adornments.

00:09:40.810 --> 00:09:43.210
There's actually a couple of
different ways to define it.

00:09:43.210 --> 00:09:44.659
And-- yeah, question?

00:09:44.659 --> 00:09:46.533
AUDIENCE: Can you fit
an equilateral triangle

00:09:46.533 --> 00:09:48.460
within that?

00:09:48.460 --> 00:09:49.650
PROFESSOR: Yes.

00:09:49.650 --> 00:09:52.710
So I don't mean to say that
if you take any-- you can fit

00:09:52.710 --> 00:09:54.840
an equilateral triangle
in there, I think.

00:09:54.840 --> 00:09:56.915
Well, like this.

00:09:56.915 --> 00:09:58.860
An equilateral triangle
is not slender.

00:09:58.860 --> 00:10:00.690
We can check that.

00:10:00.690 --> 00:10:01.830
I know it's weird.

00:10:01.830 --> 00:10:03.130
It's not a monoton definition.

00:10:03.130 --> 00:10:06.270
If you take a subset
of your slender shape,

00:10:06.270 --> 00:10:08.620
the result will not
necessarily be slender.

00:10:08.620 --> 00:10:16.280
So if we do equilateral,
if you draw a circle--

00:10:16.280 --> 00:10:20.360
there's a circle here that's
going to kiss this edge.

00:10:20.360 --> 00:10:25.110
It's centered here and it kisses
this edge of the triangle.

00:10:25.110 --> 00:10:27.840
So that means you're going
out and then coming back,

00:10:27.840 --> 00:10:29.266
getting closer again.

00:10:29.266 --> 00:10:30.890
So equilateral triangle
is not slender.

00:10:30.890 --> 00:10:33.650
That's good, because we know
equilateral triangles can lock.

00:10:33.650 --> 00:10:36.210
So it better not be slender,
because I'm going to say that

00:10:36.210 --> 00:10:38.716
slender chains cannot lock.

00:10:38.716 --> 00:10:40.930
That's what we're
going to prove.

00:10:40.930 --> 00:10:41.430
I

00:10:41.430 --> 00:10:42.888
Let me give you
another definition.

00:10:42.888 --> 00:10:45.040
It's a little bit
easier to work with

00:10:45.040 --> 00:10:46.880
and also gives some
intuition about why

00:10:46.880 --> 00:10:48.440
slender things are good.

00:10:51.531 --> 00:10:53.655
Well, it will give some
intuition, not immediately.

00:10:56.610 --> 00:11:01.970
If you look at inward
normals from the shape,

00:11:01.970 --> 00:11:03.000
then they hit the base.

00:11:14.020 --> 00:11:16.350
This is assuming that my
shape is somewhat smooth,

00:11:16.350 --> 00:11:18.290
but it's not a big deal.

00:11:18.290 --> 00:11:23.020
So let me take a
nice shape again.

00:11:23.020 --> 00:11:26.190
If I look, here's a tangent,
here's an inward normal.

00:11:26.190 --> 00:11:29.460
I extend it, it hits the base.

00:11:29.460 --> 00:11:33.430
All of these inward
normals hit the base.

00:11:33.430 --> 00:11:35.680
That's good.

00:11:35.680 --> 00:11:38.276
In this case, I could
take an inward normal from

00:11:38.276 --> 00:11:40.734
here-- say, if you don't want
to do the corner because it's

00:11:40.734 --> 00:11:42.010
a little confusing.

00:11:42.010 --> 00:11:45.940
And you will go-- here
you don't hit the base.

00:11:45.940 --> 00:11:48.830
You hit this line of course.

00:11:48.830 --> 00:11:51.500
Unless you happen to be
parallel, you'll hit the line.

00:11:51.500 --> 00:11:54.220
But I want it to actually
hit the line segment that

00:11:54.220 --> 00:11:56.650
is the base of the shape.

00:11:56.650 --> 00:12:03.990
And maybe go back up here,
the Reuleaux triangle,

00:12:03.990 --> 00:12:05.845
you take one of the
inward normals here,

00:12:05.845 --> 00:12:08.752
it will actually just
barely hit the base.

00:12:08.752 --> 00:12:09.710
It hits it at a vertex.

00:12:09.710 --> 00:12:12.009
That's, OK because
this is slender.

00:12:12.009 --> 00:12:14.050
That's why if you went a
little bit outside, then

00:12:14.050 --> 00:12:17.312
you'd have an inward normal
that doesn't hit the base.

00:12:17.312 --> 00:12:18.770
So it's pretty
easy, given a shape,

00:12:18.770 --> 00:12:21.050
to tell whether it is slender.

00:12:21.050 --> 00:12:25.570
Just draw a bunch of inward
normals and it either works

00:12:25.570 --> 00:12:27.584
or it doesn't.

00:12:27.584 --> 00:12:28.500
AUDIENCE: [INAUDIBLE].

00:12:34.310 --> 00:12:36.640
PROFESSOR: If you make some
complex thing like that,

00:12:36.640 --> 00:12:38.410
that's not going to be slender.

00:12:38.410 --> 00:12:40.410
Now, you could take
something called the slender

00:12:40.410 --> 00:12:43.930
hull-- I'll define
that in a moment.

00:12:43.930 --> 00:12:46.650
Here's another definition.

00:12:46.650 --> 00:12:51.130
It's a union of half-lenses.

00:12:55.250 --> 00:12:57.870
Half-lenses I want to define
sort of like this Reuleaux

00:12:57.870 --> 00:12:59.080
triangle example.

00:13:02.930 --> 00:13:06.260
But I don't necessarily take
these vertices as the center.

00:13:06.260 --> 00:13:09.802
I take some vertex
here as the center.

00:13:09.802 --> 00:13:12.240
Let's say I take
two of them and I

00:13:12.240 --> 00:13:14.700
draw a circle centered
here passing through here--

00:13:14.700 --> 00:13:16.890
so that's like this--
a circle centered here

00:13:16.890 --> 00:13:19.040
passing through here--
that's like this.

00:13:19.040 --> 00:13:21.320
I'm getting better
at drawing circles.

00:13:21.320 --> 00:13:24.840
That's my half-lens.

00:13:24.840 --> 00:13:27.770
If I drew the whole thing,
that would be a lens.

00:13:27.770 --> 00:13:28.780
So you get a choice.

00:13:28.780 --> 00:13:31.400
Now I could maybe choose
this point and this point

00:13:31.400 --> 00:13:35.210
and draw a circle here and here.

00:13:35.210 --> 00:13:36.750
And then there's
another half-lens.

00:13:36.750 --> 00:13:39.910
If you take a whole bunch of
those, union them together,

00:13:39.910 --> 00:13:41.360
that will always be slender.

00:13:41.360 --> 00:13:43.570
That's kind of
obvious, because you

00:13:43.570 --> 00:13:45.220
look at any of these
inward normals,

00:13:45.220 --> 00:13:46.595
they're going to
hit one of these

00:13:46.595 --> 00:13:48.027
x's that you drew on the line.

00:13:48.027 --> 00:13:50.360
What's a little less obvious
is that every slender shape

00:13:50.360 --> 00:13:53.060
can be made by a
bunch of these things.

00:13:53.060 --> 00:13:56.380
Now admittedly, possibly
infinitely many of them.

00:13:56.380 --> 00:14:01.030
If my shape-- one of my
favorite slender shapes

00:14:01.030 --> 00:14:01.890
is a right triangle.

00:14:04.490 --> 00:14:08.760
And you can check all the
inward normals hit the base.

00:14:08.760 --> 00:14:12.870
Here they just
barely hit the base.

00:14:12.870 --> 00:14:15.520
Obviously you need an infinite--
all of these half-lenses

00:14:15.520 --> 00:14:16.810
are curved.

00:14:16.810 --> 00:14:20.300
But if you take an appropriate
infinite number of them, namely

00:14:20.300 --> 00:14:25.240
all the points here, there
is a lens that covers it.

00:14:25.240 --> 00:14:28.440
You just take all of those--
I'm not drawing them perfectly,

00:14:28.440 --> 00:14:30.372
but they'll look
something like that.

00:14:30.372 --> 00:14:31.830
You take the union
of all of those,

00:14:31.830 --> 00:14:33.290
that'll give you the triangle.

00:14:33.290 --> 00:14:37.160
So in fact, any shape
you want to make slender

00:14:37.160 --> 00:14:38.980
you take the lens
that hits every point.

00:14:38.980 --> 00:14:40.605
So this is the slender hull.

00:14:44.370 --> 00:14:46.120
If you have some shape
that's not slender,

00:14:46.120 --> 00:14:49.750
this is really ugly, they're
inward normals that go up.

00:14:49.750 --> 00:14:52.240
But I can fill it
in, I don't know

00:14:52.240 --> 00:14:54.650
exactly what this
will look like.

00:14:54.650 --> 00:14:56.800
But for example, this
point is kind of bad.

00:14:56.800 --> 00:14:58.430
It's got an inward
normal going up.

00:14:58.430 --> 00:15:00.895
So I'll take the slender hull.

00:15:00.895 --> 00:15:06.930
I'll take some-- did I lie?

00:15:10.340 --> 00:15:12.330
I think it's even simpler.

00:15:12.330 --> 00:15:14.110
Let me check.

00:15:14.110 --> 00:15:15.930
Yeah, I was more
complicated than I

00:15:15.930 --> 00:15:17.950
have to be for half-lenses.

00:15:17.950 --> 00:15:20.220
This does work, it'll
still be slander.

00:15:20.220 --> 00:15:22.910
But you can be-- in
fact, because you

00:15:22.910 --> 00:15:25.250
need to be monotonic the
whole way around, you

00:15:25.250 --> 00:15:28.290
might as well always use
these two points as centers.

00:15:28.290 --> 00:15:30.320
It's been a while since
I've seen this stuff.

00:15:30.320 --> 00:15:33.150
So if I had some
point like this,

00:15:33.150 --> 00:15:35.730
it'd be a little bit nicer if
I took circle centered here,

00:15:35.730 --> 00:15:39.190
and a circle centered way over
there so it's almost vertical.

00:15:39.190 --> 00:15:40.560
That's also half-lens.

00:15:40.560 --> 00:15:41.480
That will be smaller.

00:15:41.480 --> 00:15:44.146
I can, of course,
add more stuff later,

00:15:44.146 --> 00:15:45.770
but that's the minimum
you can get away

00:15:45.770 --> 00:15:47.330
with is that half-lens.

00:15:47.330 --> 00:15:49.130
If I want to add
this point, it's

00:15:49.130 --> 00:15:51.000
going to be something like that.

00:15:51.000 --> 00:15:56.076
Circle centered here and
here, and that's my half-lens.

00:15:56.076 --> 00:15:57.450
So that actually
uniquely defines

00:15:57.450 --> 00:15:59.991
what you want to do here, which
is you take a circle centered

00:15:59.991 --> 00:16:03.240
at this point, you take a
circle centered at this point,

00:16:03.240 --> 00:16:05.830
and you add that to your shape.

00:16:05.830 --> 00:16:08.120
And so in general,
in this example

00:16:08.120 --> 00:16:11.050
it's going to fill in
something like that.

00:16:11.050 --> 00:16:13.020
This might be OK.

00:16:13.020 --> 00:16:15.500
It might fill in
a little bit here.

00:16:15.500 --> 00:16:18.410
It's going to fill in something.

00:16:18.410 --> 00:16:21.235
So then this shape
will be slender.

00:16:21.235 --> 00:16:23.860
So if you have some shape
that's not quite slender,

00:16:23.860 --> 00:16:26.970
and it's messy and ugly, you
could fill it in like this.

00:16:26.970 --> 00:16:28.950
And as long as that
fill-in doesn't intersect

00:16:28.950 --> 00:16:31.170
with any other shapes,
you're still OK.

00:16:31.170 --> 00:16:34.110
So if you have some crazy
collection of shapes,

00:16:34.110 --> 00:16:35.804
you fill them in with
the slender hull,

00:16:35.804 --> 00:16:37.470
and they're still not
self-intersecting,

00:16:37.470 --> 00:16:39.303
then you know that thing
will not be locked.

00:16:39.303 --> 00:16:41.402
Of course, if the fill-in
doesn't intersect,

00:16:41.402 --> 00:16:43.110
and you can move it
without intersection,

00:16:43.110 --> 00:16:44.970
then the original
thing won't intersect.

00:16:44.970 --> 00:16:45.740
So that's good.

00:16:45.740 --> 00:16:48.904
Now of course, if you have
crazy interlocked shapes,

00:16:48.904 --> 00:16:50.320
well those are
going to be locked.

00:16:50.320 --> 00:16:53.670
So you're in trouble.

00:16:53.670 --> 00:16:55.074
Something like this.

00:16:55.074 --> 00:16:57.240
And then when you take the
slender hull, you'll see,

00:16:57.240 --> 00:17:01.632
oh they're overlapped so I don't
know what's going to happen.

00:17:01.632 --> 00:17:03.840
Of course, we're not going
to be able to characterize

00:17:03.840 --> 00:17:08.434
every collection of shapes
that lock, slender gives you

00:17:08.434 --> 00:17:11.760
a pretty good idea
of when they do,

00:17:11.760 --> 00:17:15.810
when you're guaranteed safe.

00:17:15.810 --> 00:17:17.800
Oh, I think I even
have to a figure

00:17:17.800 --> 00:17:19.940
of a whole bunch
of slender things.

00:17:19.940 --> 00:17:26.774
On the top we have mostly
half-lenses-- actually

00:17:26.774 --> 00:17:27.690
they're all symmetric.

00:17:27.690 --> 00:17:29.590
In this case, I took
lenses, not half-lenses,

00:17:29.590 --> 00:17:32.750
but you could just take the
upper half or the bottom half.

00:17:32.750 --> 00:17:36.700
You can take regular Kgons,
circles, half circles,

00:17:36.700 --> 00:17:40.610
Reuleaux triangles, various
combinations thereof.

00:17:40.610 --> 00:17:42.470
Lots of shapes are slender.

00:17:42.470 --> 00:17:44.310
You can take this
on one side and this

00:17:44.310 --> 00:17:46.900
on the other side of the
edge, whatever you want.

00:17:46.900 --> 00:17:48.770
Or just put an
adornment on one side.

00:17:51.510 --> 00:17:52.525
Many things are slender.

00:17:58.950 --> 00:18:05.220
So we want to prove, if
you have a slender chain,

00:18:05.220 --> 00:18:06.020
you are not locked.

00:18:10.380 --> 00:18:14.544
That's the theorem
from 2006 originally.

00:18:14.544 --> 00:18:15.960
The journal version
just appeared.

00:18:19.740 --> 00:18:22.250
And the way we're going to prove
that-- as you might guess--

00:18:22.250 --> 00:18:23.833
is using the Carpenter's
Rule theorem.

00:18:23.833 --> 00:18:27.110
We have this underlying chain,
we know how to unfold that.

00:18:27.110 --> 00:18:29.940
Maybe if we're lucky,
slender adornments

00:18:29.940 --> 00:18:32.710
won't mess up the
Carpenter's Rule of motion.

00:18:32.710 --> 00:18:39.890
And in general, if you take an
arbitrary unfolding of a chain,

00:18:39.890 --> 00:18:41.850
you have no idea
what's going to happen.

00:18:41.850 --> 00:18:45.690
Maybe the shapes will
intersect each other.

00:18:45.690 --> 00:18:46.940
Your motion could be annoying.

00:18:46.940 --> 00:18:48.430
But the Carpenter's
Rule theorem tells

00:18:48.430 --> 00:18:49.721
us, not only is there a motion.

00:18:49.721 --> 00:18:52.140
There's a nice motion
that's expansive.

00:18:52.140 --> 00:19:03.755
And it turns out, as long as
you have an expensive motion

00:19:03.755 --> 00:19:23.150
of what I call the underlying
chain, then that motion will

00:19:23.150 --> 00:19:25.830
not cause any of the
pieces to intersect.

00:19:25.830 --> 00:19:27.810
Assuming they don't
initially, then

00:19:27.810 --> 00:19:30.930
that nonintersection will
be preserved, provided

00:19:30.930 --> 00:19:32.340
your adornments are slender.

00:19:40.420 --> 00:19:43.620
So that means, if we have
some slender chain, slenderly

00:19:43.620 --> 00:19:49.720
adorned chain, say open chain,
then via an expensive motion

00:19:49.720 --> 00:19:52.370
which we know exists
you'll be able to unfold

00:19:52.370 --> 00:19:53.960
the chain straight.

00:19:53.960 --> 00:19:55.710
And then if you want
to go somewhere else,

00:19:55.710 --> 00:19:58.510
you can unfold that somewhere
else straight, and then glue

00:19:58.510 --> 00:20:03.680
those motions together, and you
get your motion from a to b.

00:20:06.600 --> 00:20:09.070
Let me start with
an intuitive proof.

00:20:15.610 --> 00:20:34.720
Suppose you have two slender
shapes that are touching.

00:20:34.720 --> 00:20:36.780
Suppose you're moving around.

00:20:36.780 --> 00:20:39.590
If they're going to cross,
first they have to touch.

00:20:39.590 --> 00:20:42.090
So consider the moment
at which they touch.

00:20:42.090 --> 00:20:44.540
I claim they can't
cross from there.

00:20:44.540 --> 00:20:46.290
And the intuition
is the following,

00:20:46.290 --> 00:20:51.810
take an inward normal from--
when they touch like this,

00:20:51.810 --> 00:20:54.310
they have a common tangent.

00:20:54.310 --> 00:20:56.810
And so if you take the
inward normal on both sides,

00:20:56.810 --> 00:21:00.140
those inward normals
are co-linear.

00:21:00.140 --> 00:21:02.537
And you know from the
second definition--

00:21:02.537 --> 00:21:04.120
I didn't prove they're
all equivalent,

00:21:04.120 --> 00:21:09.190
but they are-- that we will
get some points on the bars,

00:21:09.190 --> 00:21:10.315
on the edges, on the bases.

00:21:13.260 --> 00:21:14.100
So what?

00:21:14.100 --> 00:21:20.700
Well, if I take
two bars-- and I'm

00:21:20.700 --> 00:21:23.430
computing expansive motions,
meaning I know this distance

00:21:23.430 --> 00:21:26.340
increases, this
instance increases,

00:21:26.340 --> 00:21:29.550
this distance increases,
and this distance increases.

00:21:29.550 --> 00:21:31.240
Those are the struts
that we added.

00:21:31.240 --> 00:21:33.510
It turns out-- I've
actually used this

00:21:33.510 --> 00:21:35.620
once before, I
think-- that in effect

00:21:35.620 --> 00:21:38.210
if you take any two
points on the bars,

00:21:38.210 --> 00:21:39.770
that distance also
has to increase.

00:21:42.310 --> 00:21:45.430
It's pretty obvious, because
these are straight things.

00:21:45.430 --> 00:21:47.910
If any point here was going
to approach any point here,

00:21:47.910 --> 00:21:51.290
you would need to either
move this point closer

00:21:51.290 --> 00:21:55.301
to the this edge or this
point closer to this edge.

00:21:55.301 --> 00:21:57.050
And if you move a point
closer to an edge,

00:21:57.050 --> 00:21:59.980
one of these two edges will get
shorter and that's now allowed.

00:21:59.980 --> 00:22:03.610
So if all four of
those cross distances

00:22:03.610 --> 00:22:05.580
increase, then in
fact the distance

00:22:05.580 --> 00:22:08.040
between any two
points on the segment

00:22:08.040 --> 00:22:09.410
increase or stay the same.

00:22:09.410 --> 00:22:12.930
Remember, in general
we're expansive.

00:22:12.930 --> 00:22:15.770
There's some pairs that you
cannot strictly increase

00:22:15.770 --> 00:22:19.350
the distances of, although
most of them we can.

00:22:19.350 --> 00:22:21.580
And so that's good news.

00:22:21.580 --> 00:22:23.940
If this distance increases,
it's pretty hard for them

00:22:23.940 --> 00:22:25.160
to start intersecting there.

00:22:28.150 --> 00:22:30.620
This is an intuition,
not quite a proof.

00:22:30.620 --> 00:22:33.060
You can make this into a
formal proof, it's just messy.

00:22:33.060 --> 00:22:35.010
The trouble is, for
example, if the distance

00:22:35.010 --> 00:22:38.730
stays the same you can kind
of spin around that point.

00:22:38.730 --> 00:22:41.290
You can move first
order left or right.

00:22:41.290 --> 00:22:44.060
Maybe it's not actually
this point from this guy

00:22:44.060 --> 00:22:47.400
and this point from this guy who
are going to start penetrating,

00:22:47.400 --> 00:22:49.660
because as you move maybe
it's some point nearby

00:22:49.660 --> 00:22:50.770
that falls inside.

00:22:50.770 --> 00:22:53.870
It's a little tricky to see
who exactly can intersect what.

00:22:53.870 --> 00:22:54.680
It looks good.

00:22:54.680 --> 00:22:56.650
And in particular, if
this distance is strictly

00:22:56.650 --> 00:22:59.330
increasing, then it pretty
much has to move away.

00:22:59.330 --> 00:23:01.330
But there's a lot
of subtle details,

00:23:01.330 --> 00:23:02.910
and it's kind of a mess.

00:23:02.910 --> 00:23:04.309
We did it once.

00:23:04.309 --> 00:23:05.850
But in fact, we
found a simpler proof

00:23:05.850 --> 00:23:07.308
that does not have
to rely on this.

00:23:07.308 --> 00:23:10.730
But I still like this from
an intuitive standpoint.

00:23:10.730 --> 00:23:16.260
It's kind of clear why that
inward normal property is good.

00:23:16.260 --> 00:23:18.270
If the inward normals
hit outside the bar, then

00:23:18.270 --> 00:23:20.760
you have no idea whether
that distance expands.

00:23:20.760 --> 00:23:22.900
As long as it hits
inside, you're golden.

00:23:39.160 --> 00:23:42.540
Let's start with a special case
that's really easy to prove.

00:23:42.540 --> 00:23:48.540
It's easy to prove by
appealing to fancy mathematics.

00:23:48.540 --> 00:23:52.110
They're actually pretty
old mathematics from 1934.

00:23:52.110 --> 00:23:57.460
There wasn't a lot of math then,
and yet some great results.

00:23:57.460 --> 00:24:01.750
So let's start with a symmetric
case, where you have your base,

00:24:01.750 --> 00:24:04.130
you have some slender
adornment, and you

00:24:04.130 --> 00:24:07.800
have exactly the reflection
of the slender adornment

00:24:07.800 --> 00:24:08.920
drawn below it.

00:24:08.920 --> 00:24:12.570
So it's reflectionally
symmetric about that line.

00:24:12.570 --> 00:24:14.470
That's nice, because
instead of having

00:24:14.470 --> 00:24:19.796
to worry about half-lenses I
can worry about entire lenses.

00:24:19.796 --> 00:24:21.410
Like a special
case, every time I

00:24:21.410 --> 00:24:27.400
have some lens like this one--
it should look like that,

00:24:27.400 --> 00:24:29.950
a circle centered here,
circle centered here,

00:24:29.950 --> 00:24:32.520
that would be the half-lens--
I have in fact the entire lens.

00:24:37.030 --> 00:24:43.509
So really if this shape is going
to intersect some other shape,

00:24:43.509 --> 00:24:45.550
then there's got to be
some lens over here that's

00:24:45.550 --> 00:24:47.008
going to intersect
some other lens.

00:24:47.008 --> 00:24:49.990
So really I can just
think of a single lens,

00:24:49.990 --> 00:24:55.320
pretty much, worry about
one lens hitting another.

00:24:55.320 --> 00:25:02.590
In the symmetric case, it turns
out-- what do I want to say?

00:25:05.210 --> 00:25:06.960
This preserves not in
[INAUDIBLE] section.

00:25:18.340 --> 00:25:20.770
It turns out, not only is
nonintersection preserved

00:25:20.770 --> 00:25:24.640
under continuous motions,
which is what we care about,

00:25:24.640 --> 00:25:29.020
it's preserved for what I'll
call instantaneous motions.

00:25:35.040 --> 00:25:37.880
In the origami context, we
would call these folded states.

00:25:37.880 --> 00:25:40.310
We don't worry about how
you got there, you just

00:25:40.310 --> 00:25:43.290
draw it again differently.

00:25:43.290 --> 00:25:46.890
It's like you instantaneously
jumped to that point.

00:25:46.890 --> 00:25:48.490
So in terms of
configuration spaces,

00:25:48.490 --> 00:25:50.920
we have some big
configuration space.

00:25:50.920 --> 00:25:54.070
And we say, well ideally
I go somewhere by motion,

00:25:54.070 --> 00:25:56.800
but maybe I just jump
over to another point.

00:25:56.800 --> 00:26:01.080
I just redraw these
symmetric slender adornments.

00:26:01.080 --> 00:26:03.110
And I should say, the
motion should still

00:26:03.110 --> 00:26:08.340
be expansive in the
sense that if you measure

00:26:08.340 --> 00:26:10.900
the distance between two
vertices in the original

00:26:10.900 --> 00:26:13.380
and you measure the
distance between them

00:26:13.380 --> 00:26:17.100
in the new resulting
configuration,

00:26:17.100 --> 00:26:18.330
the distance only goes up.

00:26:18.330 --> 00:26:20.400
It could stay the same
or strictly increase.

00:26:24.509 --> 00:26:25.550
So this is kind of crazy.

00:26:25.550 --> 00:26:29.300
You don't even need
continuity for this the hold

00:26:29.300 --> 00:26:30.390
in the symmetric case.

00:26:42.610 --> 00:26:49.840
So in general we're
worried about some lens.

00:26:56.517 --> 00:26:58.600
The lens is going to be
symmetric about this line,

00:26:58.600 --> 00:27:01.760
but not necessarily
about this line.

00:27:01.760 --> 00:27:03.860
We're worried about
it intersecting

00:27:03.860 --> 00:27:09.300
some other lens
when that happens.

00:27:13.760 --> 00:27:17.860
Well, here's a cool theorem.

00:27:17.860 --> 00:27:21.225
And this theorem has come into
fashion in the last few years.

00:27:28.400 --> 00:27:32.500
Actually, let me tell
you a bigger result

00:27:32.500 --> 00:27:34.760
called the Kneser
Poulsen Conjecture.

00:27:34.760 --> 00:27:36.870
It's a conjecture I don't
know how many years ago.

00:27:36.870 --> 00:27:38.800
It's also called,
pushing disks together.

00:27:38.800 --> 00:27:41.150
I have a bunch of
disks in the plane.

00:27:41.150 --> 00:27:42.690
Suppose they overlap,
who knows what

00:27:42.690 --> 00:27:44.780
happens, but a bunch of disks.

00:27:44.780 --> 00:27:48.450
And then I push
them all together,

00:27:48.450 --> 00:27:51.120
meaning the opposite
of expansion.

00:27:51.120 --> 00:27:54.860
All the centers of the disks
get closer to each other.

00:27:54.860 --> 00:27:59.990
Is it the case that the area of
the union, or the intersection,

00:27:59.990 --> 00:28:01.450
all these things should go down.

00:28:01.450 --> 00:28:04.710
It seems intuitive
enough, but was

00:28:04.710 --> 00:28:09.386
unsolved until 2002,
someone recent.

00:28:09.386 --> 00:28:11.860
A special case of that
turns out to be all we need.

00:28:11.860 --> 00:28:13.640
There's obviously disks
lying around here.

00:28:13.640 --> 00:28:18.110
This is the intersection of
two disks, so it seems useful.

00:28:18.110 --> 00:28:19.870
Overall, there's four
disks involved here.

00:28:19.870 --> 00:28:25.580
There's one here, one here,
one here, and one here.

00:28:25.580 --> 00:28:28.040
What we really care about
are four-way intersections

00:28:28.040 --> 00:28:29.400
between all four of those disks.

00:28:29.400 --> 00:28:30.150
That would be bad.

00:28:30.150 --> 00:28:34.230
That would be the two
lenses hitting each other.

00:28:34.230 --> 00:28:37.160
Remember, really there's
a bigger edge here.

00:28:37.160 --> 00:28:41.710
But if they're going to hit,
some two lenses have to hit.

00:28:41.710 --> 00:28:51.540
And that special case
is much older, 1934.

00:28:51.540 --> 00:28:59.040
And it says, if
we instantaneously

00:28:59.040 --> 00:29:01.610
translate-- you can't
really rotate disks,

00:29:01.610 --> 00:29:03.360
it doesn't change much.

00:29:03.360 --> 00:29:07.720
Let's say we have n disks,
and we instantaneously

00:29:07.720 --> 00:29:09.580
just move them around.

00:29:09.580 --> 00:29:13.490
And I'm going to state
it in the expansive form.

00:29:13.490 --> 00:29:18.970
And suppose initially
they have no intersection,

00:29:18.970 --> 00:29:24.715
meaning they have an
empty n-way intersection.

00:29:36.020 --> 00:29:52.166
And we instantaneously
translate to an expansive motion

00:29:52.166 --> 00:30:02.110
on the centers, then
we'll still have

00:30:02.110 --> 00:30:05.456
an empty n-way intersection.

00:30:11.930 --> 00:30:15.680
Now, in our case we
care about n equals 4.

00:30:15.680 --> 00:30:17.830
We have four disks
we care about,

00:30:17.830 --> 00:30:21.100
we somehow move
them so the centers

00:30:21.100 --> 00:30:23.315
are the vertices of my chain.

00:30:23.315 --> 00:30:26.140
We don't even need that
[INAUDIBLE] about other points.

00:30:26.140 --> 00:30:29.800
I know the centers of my
lenses are my endpoints.

00:30:29.800 --> 00:30:32.905
I know all those distances
are increasing somehow.

00:30:32.905 --> 00:30:35.200
And now I'm even thinking
about the instantaneous case.

00:30:35.200 --> 00:30:37.500
So I just pick up all those
points, drop them down so

00:30:37.500 --> 00:30:39.341
all the distances
increase, then the theorem

00:30:39.341 --> 00:30:41.340
is, if those four disks
didn't intersect before,

00:30:41.340 --> 00:30:43.200
they still won't intersect.

00:30:43.200 --> 00:30:46.970
Therefore, the lenses
don't hit each other ever,

00:30:46.970 --> 00:30:50.750
even when you can pick things
up and drop them back down.

00:30:50.750 --> 00:30:52.300
Done.

00:30:52.300 --> 00:30:53.490
That covers what we need.

00:30:53.490 --> 00:30:55.670
Now, I didn't
prove this theorem.

00:30:55.670 --> 00:30:57.645
I don't think it's
too hard, but it's not

00:30:57.645 --> 00:30:59.895
folding related so I'm just
going to take it as given.

00:31:06.690 --> 00:31:08.940
But that was just
one special case.

00:31:08.940 --> 00:31:11.405
That's when we had lenses
instead of half-lenses.

00:31:11.405 --> 00:31:14.990
In reality we have
half-lenses so there's

00:31:14.990 --> 00:31:16.210
a little bit more work to do.

00:31:52.140 --> 00:31:58.400
Well, if the slender chain
is going to intersect itself

00:31:58.400 --> 00:32:02.100
by some expansive motion--- oh,
by the way, the general case,

00:32:02.100 --> 00:32:04.170
you need a continuous motion.

00:32:04.170 --> 00:32:07.410
It doesn't work anymore when
you do it instantaneously.

00:32:07.410 --> 00:32:12.170
I have a nasty example here,
sort of an annoying example.

00:32:12.170 --> 00:32:14.830
Suppose you take a bar, and
you take the Reuleaux triangle

00:32:14.830 --> 00:32:20.230
or just something really big,
and you have another bar here

00:32:20.230 --> 00:32:22.180
with no adornment.

00:32:22.180 --> 00:32:25.600
And now I instantaneously
move it to the configuration

00:32:25.600 --> 00:32:28.900
where I have the same--
this guy didn't move.

00:32:28.900 --> 00:32:33.570
I just put this guy
here or something.

00:32:33.570 --> 00:32:37.340
So if I measure this
distance, it increased

00:32:37.340 --> 00:32:39.657
but it's now self-intersecting.

00:32:39.657 --> 00:32:41.490
So if you pick things
up and drop them down,

00:32:41.490 --> 00:32:42.990
it doesn't work in
the general case.

00:32:42.990 --> 00:32:45.000
That's because this
wasn't symmetric.

00:32:45.000 --> 00:32:48.497
If it was symmetric, then this
guy was already intersecting.

00:32:48.497 --> 00:32:50.830
But we can nonetheless prove
for the case we care about,

00:32:50.830 --> 00:32:53.350
which is continuous
motion-- because we

00:32:53.350 --> 00:32:56.530
know there's a continuous
expensive motion-- we can still

00:32:56.530 --> 00:33:00.730
prove that no two
half-lenses will intersect.

00:33:00.730 --> 00:33:02.930
So now I worry about two
half-lenses intersecting.

00:33:02.930 --> 00:33:10.430
A half-lens looks
something like this.

00:33:10.430 --> 00:33:11.713
Sorry, that's a lens.

00:33:11.713 --> 00:33:14.890
A half-lens looks like that.

00:33:14.890 --> 00:33:18.410
It has three sides, in general.

00:33:18.410 --> 00:33:20.180
This one's bounded
by a disk, this one's

00:33:20.180 --> 00:33:25.950
bounded by a disk, this one's
bounded by a base segment.

00:33:25.950 --> 00:33:28.640
So there's basically a bunch
of cases you could worry about.

00:33:28.640 --> 00:33:34.350
You could worry about
two of these guys hitting

00:33:34.350 --> 00:33:38.120
in the curvy parts,
so that's case one.

00:33:41.900 --> 00:33:44.890
That we get-- what
did I call them?

00:33:44.890 --> 00:33:46.935
The base.

00:33:49.512 --> 00:33:50.970
I'm going to rename
this, because I

00:33:50.970 --> 00:33:53.290
don't like the terminology
I'm using here.

00:33:53.290 --> 00:33:58.420
Curvy, curvy.

00:33:58.420 --> 00:34:01.810
There's the two straight sides,
and there's the two of each,

00:34:01.810 --> 00:34:03.640
and there's the
four curvy sides.

00:34:03.640 --> 00:34:09.790
Suppose they hit on
a curvy side of both?

00:34:09.790 --> 00:34:11.780
Well, if they hit on
the curvy side of both,

00:34:11.780 --> 00:34:14.040
this is a convex region.

00:34:14.040 --> 00:34:18.120
I could actually just put back
the rest of the half-lens here

00:34:18.120 --> 00:34:20.060
and the rest and
a half-lens here.

00:34:20.060 --> 00:34:23.090
They still won't intersect,
because the bases are pointing

00:34:23.090 --> 00:34:26.040
away from the intersection.

00:34:26.040 --> 00:34:30.199
So this is actually covered
by the case we just did.

00:34:30.199 --> 00:34:33.330
We know that if we can complete
it to a lens and still not have

00:34:33.330 --> 00:34:35.520
intersection-- maybe it
intersects other parts,

00:34:35.520 --> 00:34:38.960
but we know these guys
cannot intersect each other

00:34:38.960 --> 00:34:43.170
because these entire lenses
couldn't intersect each other.

00:34:43.170 --> 00:34:46.409
So case one's done.

00:34:46.409 --> 00:34:49.920
Case two is about is easy.

00:34:49.920 --> 00:34:53.995
It could be we have curvy
part meeting a base.

00:34:56.690 --> 00:35:02.740
So we have this example
again, but now we

00:35:02.740 --> 00:35:07.020
try to intersect with the
base of some other half-lens.

00:35:09.830 --> 00:35:11.125
What should I do here?

00:35:20.140 --> 00:35:21.460
Anything useful I can do?

00:35:21.460 --> 00:35:21.960
Yeah?

00:35:21.960 --> 00:35:23.932
AUDIENCE: Think about
the points on that line

00:35:23.932 --> 00:35:28.370
as they should be expansive.

00:35:28.370 --> 00:35:32.458
PROFESSOR: Yeah, these points
are expansive from here.

00:35:32.458 --> 00:35:34.350
AUDIENCE: Tiny, tiny lenses.

00:35:34.350 --> 00:35:36.490
PROFESSOR: Tiny
lenses, good, good.

00:35:36.490 --> 00:35:37.470
Screw this lens.

00:35:40.030 --> 00:35:42.540
Yeah I mean, that
lens really does not

00:35:42.540 --> 00:35:44.410
participate in this
intersection, right?

00:35:44.410 --> 00:35:46.900
Think of this as if there
is no adornment there,

00:35:46.900 --> 00:35:49.540
which is like you have lots
of tiny half-lenses there,

00:35:49.540 --> 00:35:51.600
but there's just none.

00:35:51.600 --> 00:35:53.310
It's an empty union of lenses.

00:35:53.310 --> 00:35:55.560
This is obviously a
slender adornment.

00:35:55.560 --> 00:35:57.680
There's no adornment.

00:35:57.680 --> 00:35:59.640
If the original is
going to intersect,

00:35:59.640 --> 00:36:01.420
this should also intersect.

00:36:01.420 --> 00:36:04.942
And this one I can
actually extend and make it

00:36:04.942 --> 00:36:07.150
a full lens, because I'm
intersecting on the top side

00:36:07.150 --> 00:36:07.650
here.

00:36:07.650 --> 00:36:11.140
These can't hit each
other by convexity.

00:36:11.140 --> 00:36:16.130
Great, so this is a symmetric
lens, this is a lens,

00:36:16.130 --> 00:36:20.280
this is a lens, symmetric case.

00:36:20.280 --> 00:36:24.560
So we already know those guys
can't intersect each other.

00:36:24.560 --> 00:36:28.450
We have in some a-- there
is a tiny lens here,

00:36:28.450 --> 00:36:31.590
which is from that
circle and that circle.

00:36:31.590 --> 00:36:34.580
And the point is, the four
circles defining those two

00:36:34.580 --> 00:36:36.780
lenses cannot intersect.

00:36:36.780 --> 00:36:38.740
So again, we're done
by the symmetric case.

00:36:41.330 --> 00:36:45.560
The last case is actually,
I guess, the easiest one,

00:36:45.560 --> 00:36:46.150
base to base.

00:36:48.690 --> 00:36:52.220
Base to base is like this.

00:36:52.220 --> 00:36:55.000
And yeah, there's
some adornments,

00:36:55.000 --> 00:36:57.480
but the adornments don't
really play a role.

00:36:57.480 --> 00:36:59.230
So you could imagine
erasing them and just

00:36:59.230 --> 00:37:00.989
talking about the
tiny things again.

00:37:00.989 --> 00:37:03.030
But really, this follows
just because the linkage

00:37:03.030 --> 00:37:03.740
is expansive.

00:37:03.740 --> 00:37:06.840
We already know that the linkage
will not self-intersect itself.

00:37:06.840 --> 00:37:08.660
Particularly, this
distance is increasing

00:37:08.660 --> 00:37:10.380
and this distance is increasing.

00:37:10.380 --> 00:37:13.219
It's got to move away,
so that can't happen.

00:37:13.219 --> 00:37:15.260
It could actually never
get to the touching point

00:37:15.260 --> 00:37:16.385
if it started non-touching.

00:37:18.830 --> 00:37:20.330
Done.

00:37:20.330 --> 00:37:23.570
This proves that if you have
a slender adorned chain,

00:37:23.570 --> 00:37:25.440
you take an
expansive motion, you

00:37:25.440 --> 00:37:26.731
preserve non-self-intersection.

00:37:32.760 --> 00:37:36.580
If you have an open chain
of slender adornments,

00:37:36.580 --> 00:37:39.020
this is great because you can
straighten out your chain--

00:37:39.020 --> 00:37:40.630
why don't I draw the picture.

00:37:49.800 --> 00:37:51.810
If you want to
get from one shape

00:37:51.810 --> 00:37:55.930
to some other drawing
of that same polyline,

00:37:55.930 --> 00:37:57.680
pretend the links are
the same and pretend

00:37:57.680 --> 00:37:59.971
there's all these slender
adornments that are the same,

00:37:59.971 --> 00:38:06.190
you can straighten out
each one and then just play

00:38:06.190 --> 00:38:08.790
this motion backwards,
and take this motion

00:38:08.790 --> 00:38:10.096
to here, this motion to here.

00:38:10.096 --> 00:38:11.970
This is something I call
the FedEx algorithm,

00:38:11.970 --> 00:38:13.890
we were talking about
in the problem session,

00:38:13.890 --> 00:38:15.306
because the original
idea of FedEx

00:38:15.306 --> 00:38:17.960
is you send all packages to
one central FedEx location

00:38:17.960 --> 00:38:19.820
then send them out to
where you want to go.

00:38:19.820 --> 00:38:23.202
Crazy idea, but it
worked for quite awhile.

00:38:23.202 --> 00:38:24.660
It's a little more
complicated now,

00:38:24.660 --> 00:38:26.780
but still that spirit is there.

00:38:26.780 --> 00:38:30.200
And someone was asking
in the problem session,

00:38:30.200 --> 00:38:32.700
well what if you send a package
from one point in California

00:38:32.700 --> 00:38:34.110
the your neighbor?

00:38:34.110 --> 00:38:37.970
I was like, well yeah, then it
goes far away and comes back.

00:38:37.970 --> 00:38:42.580
But for math, it's no
problem, no energy issue.

00:38:42.580 --> 00:38:44.300
So this is great
for open chains.

00:38:44.300 --> 00:38:47.630
It does not work for closed
chains, because closed chains,

00:38:47.630 --> 00:38:49.672
there's more than one
convex configuration.

00:38:49.672 --> 00:38:52.005
I could take that, I could
take something more squashed.

00:38:54.600 --> 00:38:55.990
Now normally this is fine.

00:38:55.990 --> 00:39:00.581
We haven't proved it, but
for regular closed chains,

00:39:00.581 --> 00:39:02.830
you could actually get from
every convex configuration

00:39:02.830 --> 00:39:03.700
to every other.

00:39:03.700 --> 00:39:05.658
Maybe we'll prove that
in the polyhedra section

00:39:05.658 --> 00:39:08.430
because it's easy
to prove there.

00:39:08.430 --> 00:39:10.120
Believe that, but
once you start adding

00:39:10.120 --> 00:39:12.670
adornments it ain't possible.

00:39:12.670 --> 00:39:14.720
So for example, if
I take this thing

00:39:14.720 --> 00:39:20.020
and I add some adornments to
just fill in all the space,

00:39:20.020 --> 00:39:21.200
this is not so slender.

00:39:21.200 --> 00:39:23.380
But you can even draw it
with it being slender.

00:39:23.380 --> 00:39:26.024
There's no way I can
go from here to here.

00:39:26.024 --> 00:39:28.190
That's not very convincing,
because there isn't even

00:39:28.190 --> 00:39:29.790
a configuration like that.

00:39:29.790 --> 00:39:31.240
Here's a more convincing one.

00:39:31.240 --> 00:39:33.720
Suppose you have
a parallelogram,

00:39:33.720 --> 00:39:38.170
and you have a right triangle,
and a right triangle.

00:39:38.170 --> 00:39:44.336
And now I want to go to here.

00:39:44.336 --> 00:39:45.960
If I was allotted
instantaneous motion,

00:39:45.960 --> 00:39:49.454
this would be fine,
even be expansive.

00:39:49.454 --> 00:39:50.620
Well, no it's not expansive.

00:39:50.620 --> 00:39:52.720
This distance
increases, and that's

00:39:52.720 --> 00:39:55.170
why this theorem doesn't apply.

00:39:55.170 --> 00:39:56.970
But these are two
complex configurations.

00:39:56.970 --> 00:39:59.400
I can't get from
one to the other.

00:39:59.400 --> 00:40:01.101
So for closed chains,
this doesn't quite

00:40:01.101 --> 00:40:02.850
prove the configuration
space is connected

00:40:02.850 --> 00:40:04.933
and you have to worry about
the convex situations.

00:40:04.933 --> 00:40:08.480
For open chains, it does.

00:40:08.480 --> 00:40:12.270
Open problem, are there
any other adornments

00:40:12.270 --> 00:40:13.546
like slender ones?

00:40:13.546 --> 00:40:14.920
Or are slender
the most you could

00:40:14.920 --> 00:40:17.270
hope for a general result?

00:40:17.270 --> 00:40:20.900
Is there some shape that is not
slender, such that no matter

00:40:20.900 --> 00:40:25.390
how you add them to
a chain you'd still

00:40:25.390 --> 00:40:29.920
have a theorem like this
that they never lock?

00:40:29.920 --> 00:40:32.230
I would guess slender's the
most you could hope for,

00:40:32.230 --> 00:40:35.120
but I'm not sure.

00:40:35.120 --> 00:40:37.570
One special case
we can understand

00:40:37.570 --> 00:40:41.070
is the case of triangles.

00:40:41.070 --> 00:40:43.400
We know equilateral
triangles are bad.

00:40:43.400 --> 00:40:46.080
We know right
triangles are good.

00:40:46.080 --> 00:40:49.560
We know obtuse
triangles are good,

00:40:49.560 --> 00:40:51.850
because these are slender.

00:40:51.850 --> 00:40:57.080
What if I take a triangle
that's slightly more than 90,

00:40:57.080 --> 00:40:59.570
slightly less than 90 here?

00:40:59.570 --> 00:41:02.150
I know if I go all the
way to 60, it's bad,

00:41:02.150 --> 00:41:03.990
but what about
slightly less than 90?

00:41:06.910 --> 00:41:09.910
Also bad.

00:41:09.910 --> 00:41:11.110
That's not convincing yet.

00:41:11.110 --> 00:41:12.500
This is equilateral triangles.

00:41:12.500 --> 00:41:14.790
I've made it more
complicated example

00:41:14.790 --> 00:41:17.730
here in order to get a couple
of properties, but one of them

00:41:17.730 --> 00:41:21.030
is that all of the equilateral
triangles are the same size.

00:41:21.030 --> 00:41:22.176
It's a little bit cooler.

00:41:22.176 --> 00:41:23.800
You have to imagine
where the bars are.

00:41:23.800 --> 00:41:29.260
There's a bar here, and
a bar here, and so on.

00:41:29.260 --> 00:41:32.480
This is what it looks like
when it's self-touching.

00:41:32.480 --> 00:41:34.620
And the reason I'm looking
at that is I think,

00:41:34.620 --> 00:41:36.910
what if I shear
this whole picture

00:41:36.910 --> 00:41:39.620
or scale it non-uniformly in y?

00:41:39.620 --> 00:41:42.320
So make it taller.

00:41:42.320 --> 00:41:42.900
Taller?

00:41:42.900 --> 00:41:43.540
Shorter.

00:41:43.540 --> 00:41:45.350
I make it shorter
first in this picture.

00:41:45.350 --> 00:41:47.450
I'm going to make it
taller in a second.

00:41:47.450 --> 00:41:52.580
I've got to correct things,
but all of these triangles now,

00:41:52.580 --> 00:41:54.490
the base is along here.

00:41:54.490 --> 00:41:55.890
This is the apex angle.

00:41:55.890 --> 00:41:59.729
So here I made the apex
even smaller than 60,

00:41:59.729 --> 00:42:01.270
just not the direction
I cared about.

00:42:01.270 --> 00:42:02.960
But the point is,
this thing will

00:42:02.960 --> 00:42:05.155
stay locked no matter
how you shear it.

00:42:05.155 --> 00:42:06.780
And so here I have
a bunch of triangles

00:42:06.780 --> 00:42:09.850
where the apex angles, you can
make them arbitrarily small.

00:42:09.850 --> 00:42:11.770
So even if I-- no surprise.

00:42:11.770 --> 00:42:14.710
If I have a super
pointy triangle,

00:42:14.710 --> 00:42:17.570
you're going to be able
to lock them like this.

00:42:17.570 --> 00:42:20.030
But also if you go
the other way and you

00:42:20.030 --> 00:42:26.220
make this a kind of
more than 60 angle,

00:42:26.220 --> 00:42:30.410
as long as it's less than
90 this will stay locked.

00:42:30.410 --> 00:42:33.900
And to give you some
intuition, if it's less than 90

00:42:33.900 --> 00:42:37.830
I can apply rule one here.

00:42:40.460 --> 00:42:45.450
But as soon as that
angle reaches 90,

00:42:45.450 --> 00:42:47.910
this apex will be 90,
and so then rule one

00:42:47.910 --> 00:42:50.050
does not apply here.

00:42:50.050 --> 00:42:52.520
I think it'll still
apply on the other side,

00:42:52.520 --> 00:42:53.790
but it doesn't matter.

00:42:53.790 --> 00:42:57.951
You really need both sides to
be acute for rule one to apply.

00:42:57.951 --> 00:42:59.450
This example's
actually a little bit

00:42:59.450 --> 00:43:01.520
messy to prove that it's locked.

00:43:01.520 --> 00:43:04.400
You can apply the
rules down to here,

00:43:04.400 --> 00:43:07.240
but then you're not able
to apply rules anymore.

00:43:07.240 --> 00:43:09.600
Actually, you can't even do
it in the last one, I think.

00:43:09.600 --> 00:43:12.090
Just up to here, so here
I have a nice acute angle,

00:43:12.090 --> 00:43:13.465
here I don't have
an acute angle.

00:43:13.465 --> 00:43:14.832
It's kind of annoying.

00:43:14.832 --> 00:43:17.290
The best way that I know to
prove that this thing is locked

00:43:17.290 --> 00:43:20.940
is to compute an
equilibrium stress that's

00:43:20.940 --> 00:43:25.020
positive or negative
on all of the struts.

00:43:25.020 --> 00:43:26.520
Remember, there's
little struts here

00:43:26.520 --> 00:43:29.574
saying that this guy has to
move away from this corner.

00:43:29.574 --> 00:43:30.990
Or if could slide
along the edges,

00:43:30.990 --> 00:43:33.270
but it can't go
on the other side.

00:43:33.270 --> 00:43:35.080
So you could do that,
it's kind of messy.

00:43:35.080 --> 00:43:39.114
I will prove to you
a simpler example.

00:43:39.114 --> 00:43:40.780
We already did the
first one, but here's

00:43:40.780 --> 00:43:42.760
another equilateral
triangle example.

00:43:42.760 --> 00:43:45.815
Even fewer triangles,
and also locked.

00:43:48.420 --> 00:43:50.220
This one you can't
scale quite as nicely.

00:43:58.800 --> 00:44:00.300
Actually, I could
give you a choice.

00:44:00.300 --> 00:44:01.716
Which proof would
you like to see,

00:44:01.716 --> 00:44:04.190
the easy one or the hard one?

00:44:04.190 --> 00:44:06.150
Easy?

00:44:06.150 --> 00:44:08.110
Hard?

00:44:08.110 --> 00:44:10.790
One person for hard,
thanks Harrison.

00:44:15.470 --> 00:44:17.010
I like easy proofs.

00:44:17.010 --> 00:44:18.470
They're more exciting.

00:44:18.470 --> 00:44:20.960
OK, first the hard part is
I have to draw the example.

00:44:36.144 --> 00:44:37.560
If you want to see
the hard proof,

00:44:37.560 --> 00:44:38.643
it's in the lecture notes.

00:44:38.643 --> 00:44:41.580
I kept it in there.

00:44:41.580 --> 00:44:45.320
This should be the same
as that, more or less.

00:44:45.320 --> 00:44:46.549
Imagine self-touching.

00:44:46.549 --> 00:44:48.090
We're going to prove
that it's rigid,

00:44:48.090 --> 00:44:51.390
therefore any perturbation
is strongly locked.

00:44:51.390 --> 00:44:54.048
What should I do?

00:44:54.048 --> 00:44:55.540
AUDIENCE: Apply rules.

00:44:55.540 --> 00:44:57.070
PROFESSOR: Apply rules, yes.

00:44:57.070 --> 00:44:59.000
I like the rules.

00:44:59.000 --> 00:45:00.040
I live by the rules.

00:45:02.840 --> 00:45:05.700
The first rule of the rules
is don't talk about the rules.

00:45:05.700 --> 00:45:07.920
No, we have rule one here.

00:45:07.920 --> 00:45:10.480
The first rule of the
rules is apply the rules.

00:45:10.480 --> 00:45:14.610
So we can apply rule one because
this is acute, this is acute.

00:45:14.610 --> 00:45:16.140
OK, now I have to redraw.

00:45:25.630 --> 00:45:30.240
I should really have one of
these in the problem set.

00:45:30.240 --> 00:45:31.580
Applying rules is so much fun.

00:45:31.580 --> 00:45:33.500
It's also easy to make mistakes.

00:45:33.500 --> 00:45:36.080
That's a good
problem set question.

00:45:36.080 --> 00:45:38.095
All right, these
are not touching.

00:45:40.425 --> 00:45:42.300
I mean, I don't really
have to fill these in.

00:45:42.300 --> 00:45:44.910
They're triangles, of
course they're rigid.

00:45:44.910 --> 00:45:46.605
But now these are
fused together.

00:45:46.605 --> 00:45:48.010
Can I apply any more rules?

00:45:52.730 --> 00:45:53.720
I think so.

00:45:53.720 --> 00:45:56.250
I've got to try
not to cheat here.

00:45:56.250 --> 00:45:59.140
This looks like a
rule too, right?

00:45:59.140 --> 00:46:02.770
This is an acute angle,
so this fused together.

00:46:02.770 --> 00:46:04.150
I'm just going to redraw that.

00:46:04.150 --> 00:46:05.870
This fused together.

00:46:05.870 --> 00:46:06.380
Any others?

00:46:15.572 --> 00:46:18.426
I guess that's it.

00:46:18.426 --> 00:46:21.090
Now I've got to do something
other than rules, darn it.

00:46:23.670 --> 00:46:24.790
Life is not so easy.

00:46:32.340 --> 00:46:35.330
I'm going to look at-- this
is divine inspiration here.

00:46:35.330 --> 00:46:40.400
Well, co-author
inspiration, I suppose.

00:46:40.400 --> 00:46:47.400
I'm going to look at that
convex-- 1-2-3-4-5-- pentagon.

00:46:47.400 --> 00:46:48.882
It's convex.

00:46:48.882 --> 00:46:49.590
OK, not strictly.

00:46:49.590 --> 00:46:56.170
There's a corner of angle 180.

00:46:56.170 --> 00:46:59.210
Actually, there's a couple
of ways to prove this.

00:46:59.210 --> 00:47:03.440
Just look at this
convex arm, open chain

00:47:03.440 --> 00:47:04.925
on the edges of
the convex polygon.

00:47:09.357 --> 00:47:10.690
What's the right way to do this?

00:47:13.438 --> 00:47:15.500
I have a better argument.

00:47:15.500 --> 00:47:25.810
It turns out, if you take a
motion of a convex polygon--

00:47:25.810 --> 00:47:32.770
any motion must decrease
at least two angles.

00:47:38.890 --> 00:47:40.470
And that's really
hard to do here.

00:47:40.470 --> 00:47:43.210
You can't decrease this angle,
or this angle, or this angle,

00:47:43.210 --> 00:47:46.869
of this angle, because you've
got this stuff in the way.

00:47:46.869 --> 00:47:49.410
There's only one angle you could
maybe decrease, but actually

00:47:49.410 --> 00:47:51.940
even that one's probably
not going to work.

00:47:51.940 --> 00:47:54.380
And I have to decrease two
of them, contradiction.

00:47:54.380 --> 00:47:56.870
So there's no motion
of this thing.

00:47:56.870 --> 00:47:59.710
It's like those tightly
packed convex configurations.

00:47:59.710 --> 00:48:01.580
You can't move from
here, just looking

00:48:01.580 --> 00:48:04.120
at the inside of this thing.

00:48:04.120 --> 00:48:06.206
The rest is all been rigidified.

00:48:06.206 --> 00:48:10.617
Well, I guess there's one vertex
here, but once this is rigid,

00:48:10.617 --> 00:48:12.200
then this triangle
is rigidly attached

00:48:12.200 --> 00:48:13.580
to these three triangles.

00:48:13.580 --> 00:48:19.220
So the whole thing is rigid,
and therefore from last lecture

00:48:19.220 --> 00:48:20.380
it's strongly locked.

00:48:25.650 --> 00:48:28.439
AUDIENCE: The lecture
notes say one angle?

00:48:28.439 --> 00:48:30.230
PROFESSOR: The lecture
notes say one angle.

00:48:30.230 --> 00:48:32.250
I should change it
to two, because I'm

00:48:32.250 --> 00:48:33.440
more worried about this one.

00:48:33.440 --> 00:48:35.720
But two is also true.

00:48:35.720 --> 00:48:38.880
It also decreases
at least one angle,

00:48:38.880 --> 00:48:43.360
but in particular
decreases two of them.

00:48:43.360 --> 00:48:45.125
Where's the lecture notes?

00:48:53.310 --> 00:48:55.090
So it turns out--
and this is something

00:48:55.090 --> 00:49:01.994
we'll prove later, this is
theorem by Koshy, like 1800s.

00:49:01.994 --> 00:49:04.285
If you have a convex polygon,
you move it, at least two

00:49:04.285 --> 00:49:06.701
of the angles must decrease
and at least two of the angles

00:49:06.701 --> 00:49:08.489
must increase.

00:49:08.489 --> 00:49:11.030
In fact, well there's all sorts
of cool things you can prove,

00:49:11.030 --> 00:49:14.010
but that's slated
for another lecture.

00:49:14.010 --> 00:49:16.500
We'll see that in the future.

00:49:16.500 --> 00:49:20.450
I want to move on to a
different cool topic, which

00:49:20.450 --> 00:49:22.500
is hinge dissections.

00:49:22.500 --> 00:49:27.120
Any questions about locked,
slender, or nonslender

00:49:27.120 --> 00:49:28.950
adornments?

00:49:28.950 --> 00:49:30.910
So for triangles, we
have a tight answer.

00:49:30.910 --> 00:49:33.860
You need to be right or obtuse.

00:49:33.860 --> 00:49:35.460
In general, slender works.

00:49:35.460 --> 00:49:38.160
I don't know if other
things work, but guess not.

00:49:47.000 --> 00:49:49.970
Oh, another open
question, locked squares.

00:49:52.880 --> 00:49:59.342
Now, if you have squares
that are properly aligned--

00:49:59.342 --> 00:50:04.645
I don't draw them very well--
so if the base of the square

00:50:04.645 --> 00:50:07.170
is through the diagonal
of the square, that's

00:50:07.170 --> 00:50:09.410
slender so those can't lock.

00:50:09.410 --> 00:50:12.390
But if you allow
the base edge to be

00:50:12.390 --> 00:50:14.250
along the side of
a square like this,

00:50:14.250 --> 00:50:16.480
I take unit squares
in the plane.

00:50:16.480 --> 00:50:19.670
Open question, are these locked?

00:50:19.670 --> 00:50:21.629
It's probably
really easy, we just

00:50:21.629 --> 00:50:23.170
haven't worked hard
enough in proving

00:50:23.170 --> 00:50:25.310
that these things are locked.

00:50:25.310 --> 00:50:27.810
So that's something we could
work on in the problem session.

00:50:27.810 --> 00:50:29.750
These are examples
in this paper.

00:50:29.750 --> 00:50:31.660
So, we conjecture
these are locked.

00:50:31.660 --> 00:50:33.616
So there's some work to do.

00:50:33.616 --> 00:50:37.922
It's a fun, fun toy question.

00:50:37.922 --> 00:50:39.130
All right, hinge dissections.

00:50:41.860 --> 00:50:46.730
The idea here is, if you look
at one of these adorned chains

00:50:46.730 --> 00:50:49.630
we've been thinking about where
you have solid blocks hinged

00:50:49.630 --> 00:50:52.119
together points, and you
think about them moving--

00:50:52.119 --> 00:50:53.660
we've been thinking
about them moving

00:50:53.660 --> 00:50:55.220
and when you can
move from shape a

00:50:55.220 --> 00:50:58.100
to shape b or configuration
a to configuration b.

00:50:58.100 --> 00:51:01.950
But in particular configurations
where they're touching,

00:51:01.950 --> 00:51:04.490
you could imagine
erasing those cuts.

00:51:04.490 --> 00:51:07.030
On the top I get a square,
and the bottom here I

00:51:07.030 --> 00:51:08.480
get an equilateral triangle.

00:51:08.480 --> 00:51:09.960
So we call this a
hinge dissection

00:51:09.960 --> 00:51:13.020
from an equilateral
triangle to a square.

00:51:13.020 --> 00:51:16.250
This one goes back
over a century

00:51:16.250 --> 00:51:20.100
by this puzzle guy,
Henry Ernest Dudeney.

00:51:20.100 --> 00:51:21.930
A natural question
is, can you do

00:51:21.930 --> 00:51:26.100
this for any two polygons
of the same area?

00:51:26.100 --> 00:51:29.690
You have to preserve area,
because unerasing-- fusing cuts

00:51:29.690 --> 00:51:33.120
does not change the area.

00:51:33.120 --> 00:51:36.700
Natural question,
we've been working

00:51:36.700 --> 00:51:41.545
on this question
for about 10 years.

00:51:41.545 --> 00:51:45.950
We started in 1999, and
the first thing we proved

00:51:45.950 --> 00:51:47.420
is that you couldn't
do everything,

00:51:47.420 --> 00:51:51.880
but if you pixelate
shapes it works.

00:51:51.880 --> 00:51:53.770
So in this case,
we're not pixelating.

00:51:53.770 --> 00:51:56.520
We're dividing our
shape into half squares.

00:51:56.520 --> 00:51:59.000
It turns out, if you
take every-- so here I

00:51:59.000 --> 00:52:02.650
have 32 half squares.

00:52:02.650 --> 00:52:05.200
In the letter A, I also
have 32 half squares.

00:52:05.200 --> 00:52:08.045
So I want to go from
the square to an A.

00:52:08.045 --> 00:52:10.660
It turns out, if you take
each of these half squares

00:52:10.660 --> 00:52:16.530
and replace it by four
smaller half squares,

00:52:16.530 --> 00:52:20.390
and I hinge the half squares
in this particular pattern--

00:52:20.390 --> 00:52:21.110
you can check it.

00:52:21.110 --> 00:52:23.920
It alternates in a
very regular pattern.

00:52:23.920 --> 00:52:25.615
It will work that
way in the square,

00:52:25.615 --> 00:52:27.323
it'll also work that
way in the letter A.

00:52:27.323 --> 00:52:29.250
I don't actually know
for sure whether there's

00:52:29.250 --> 00:52:31.260
a continuous motion
between these two

00:52:31.260 --> 00:52:33.340
without self-intersection,
because these are not

00:52:33.340 --> 00:52:36.300
slender adornments the
way I've drawn them.

00:52:36.300 --> 00:52:39.010
But this is a hinge
dissection that

00:52:39.010 --> 00:52:45.750
exists in all of these states,
the whole alphabet and numbers.

00:52:45.750 --> 00:52:47.730
And it's just 128 pieces.

00:52:47.730 --> 00:52:49.730
So that would actually
be really fun to animate.

00:52:49.730 --> 00:52:53.880
I haven't tried to do that yet.

00:52:53.880 --> 00:52:56.130
You can generalize that
to three dimensions.

00:52:56.130 --> 00:52:58.390
I think I showed
this in lecture one.

00:52:58.390 --> 00:53:00.600
Here we have solid blocks.

00:53:00.600 --> 00:53:03.860
So this is like pixelating,
but it's just stretched.

00:53:03.860 --> 00:53:08.040
And we have piano hinges,
about 1,000 blocks here,

00:53:08.040 --> 00:53:10.620
and you can pick up your
gloves and reconfigure

00:53:10.620 --> 00:53:12.990
the sculpture into
whatever shape you want.

00:53:12.990 --> 00:53:16.120
The theorem is, you can make
it into any polycube, any shape

00:53:16.120 --> 00:53:22.640
made out of-- not 1,000,
but 250 for 125, I guess.

00:53:22.640 --> 00:53:28.800
You divide by 8 to make a 2 by 2
by 2 larger square, or a larger

00:53:28.800 --> 00:53:29.770
cube.

00:53:29.770 --> 00:53:32.210
It's a stretched
cube, but same thing.

00:53:32.210 --> 00:53:36.332
And then you can make any
shape made out of those shapes.

00:53:36.332 --> 00:53:37.290
That was the beginning.

00:53:37.290 --> 00:53:38.914
This is not everything,
it's everything

00:53:38.914 --> 00:53:42.790
up to some resolution, but we
would really like everything.

00:53:46.269 --> 00:53:49.552
And in this class
three years ago,

00:53:49.552 --> 00:53:51.010
we proved to you
can make anything.

00:54:11.369 --> 00:54:13.660
I think I posed this question
in the very first problem

00:54:13.660 --> 00:54:18.020
session three years
ago, thinking maybe we

00:54:18.020 --> 00:54:20.300
can prove some special
cases, something interesting.

00:54:20.300 --> 00:54:22.790
And then two or three
problem sessions

00:54:22.790 --> 00:54:29.110
later, it started
to collapse and get

00:54:29.110 --> 00:54:33.072
solved, which is super
exciting given that we've

00:54:33.072 --> 00:54:34.655
been thinking about
this for 10 years.

00:55:17.700 --> 00:55:21.100
So this is going to be a little
more general than two polygons.

00:55:21.100 --> 00:55:24.420
And suggested by the
alphabet, there's

00:55:24.420 --> 00:55:26.010
one hinge dissection
that can fold

00:55:26.010 --> 00:55:28.430
into many different
shapes, not just two.

00:55:28.430 --> 00:55:33.910
So you take any finite set
of polygons of the same area,

00:55:33.910 --> 00:55:36.740
then there's one chain of
polygons hinged together

00:55:36.740 --> 00:55:40.110
at points that can continuously
fold into all of those things

00:55:40.110 --> 00:55:42.895
without self-intersection.

00:55:42.895 --> 00:55:44.270
Now, how do you
think we're going

00:55:44.270 --> 00:55:46.650
to avoid self-intersection?

00:55:46.650 --> 00:55:47.830
Slender.

00:55:47.830 --> 00:55:49.870
We've got this
great tool lined up

00:55:49.870 --> 00:55:53.410
for proving the continuously
part of this theorem.

00:55:53.410 --> 00:55:56.220
The other part requires
totally new ideas,

00:55:56.220 --> 00:56:00.510
but continuously is
going to be easy,

00:56:00.510 --> 00:56:01.950
because the name
of the game here

00:56:01.950 --> 00:56:05.090
is we're given polygons
we want to make,

00:56:05.090 --> 00:56:06.820
but we can make
them out of a chain

00:56:06.820 --> 00:56:09.320
of arbitrarily many pieces.

00:56:09.320 --> 00:56:12.010
So if we have some
change that is working

00:56:12.010 --> 00:56:14.250
without the continuity,
we can cut those pieces

00:56:14.250 --> 00:56:16.090
into smaller parts
until they're slender.

00:56:16.090 --> 00:56:18.310
It turns out that's
going to be easy.

00:56:22.120 --> 00:56:23.230
I'll come back to that.

00:56:35.410 --> 00:56:38.550
The hard part is to do this
with ignoring continuous motion.

00:56:42.140 --> 00:56:43.870
So there's this crazy idea.

00:56:43.870 --> 00:56:47.122
It comes from Zack Abel who
is attending the problem

00:56:47.122 --> 00:56:49.080
sessions this year, so
a bunch of you know him.

00:56:59.030 --> 00:57:00.920
I guess number two
is the crazy idea.

00:57:10.190 --> 00:57:11.850
Hinge dissections
are actually named

00:57:11.850 --> 00:57:14.746
after something else
called dissections.

00:57:14.746 --> 00:57:17.120
With dissections, you don't
care about hinging the pieces

00:57:17.120 --> 00:57:17.860
together.

00:57:17.860 --> 00:57:19.880
I take one shape,
I cut it into a lot

00:57:19.880 --> 00:57:21.730
of parts-- that's
the dissecting.

00:57:21.730 --> 00:57:25.210
I rearrange the parts however
I want-- rigid motions--

00:57:25.210 --> 00:57:29.020
and then fuse together the
edges and I get another shape.

00:57:29.020 --> 00:57:31.540
So there's no hinging
here, there's no folding.

00:57:31.540 --> 00:57:34.250
And it's well known
since the 1800s

00:57:34.250 --> 00:57:35.500
that dissections always exist.

00:57:38.320 --> 00:57:40.760
I can give you a quick
idea of how that's proved.

00:57:40.760 --> 00:57:44.800
You take some polygon and some
other polygon of equal area.

00:57:49.050 --> 00:57:51.387
Just triangulate
both the polygons

00:57:51.387 --> 00:57:52.970
because that always
makes life easier.

00:57:57.770 --> 00:58:01.480
Still nothing's really
matching between these two.

00:58:01.480 --> 00:58:04.950
If you take a
triangle, if you just

00:58:04.950 --> 00:58:10.900
cut halfway up from the
base and then cut here,

00:58:10.900 --> 00:58:12.460
you can even do this hinged.

00:58:12.460 --> 00:58:17.900
You flip this around,
and flip this around,

00:58:17.900 --> 00:58:21.960
you get a rectangle of half
the height of the triangle.

00:58:21.960 --> 00:58:24.530
This is how you compute the
area of a triangle, right?

00:58:24.530 --> 00:58:25.426
Very easy.

00:58:25.426 --> 00:58:27.050
So do that for each
of these triangles.

00:58:27.050 --> 00:58:30.020
Just cut them so
they make rectangles.

00:58:32.990 --> 00:58:35.090
Do that here, do that here.

00:58:35.090 --> 00:58:37.599
What you'll be left with is a
whole bunch of rectangles here

00:58:37.599 --> 00:58:39.140
and a whole bunch
of rectangles here.

00:58:39.140 --> 00:58:41.150
Still kind of a mess.

00:58:41.150 --> 00:58:42.620
But there's this
crazy dissection--

00:58:42.620 --> 00:58:44.232
which I won't be
able to draw, and I

00:58:44.232 --> 00:58:49.330
didn't bring a picture of
it-- that you can basically

00:58:49.330 --> 00:58:52.090
take a rectangle of
some height and make

00:58:52.090 --> 00:58:54.840
it a rectangle of
some other height.

00:58:54.840 --> 00:58:59.264
It's got to preserve area, so
maybe look something like that.

00:58:59.264 --> 00:59:00.930
There is a dissection
from here to here.

00:59:00.930 --> 00:59:02.750
It's not hinged,
but you can do it.

00:59:08.260 --> 00:59:13.280
Believe me, this goes back
three centuries, or something.

00:59:13.280 --> 00:59:16.270
Once you can do that, you can
take your pile of rectangles

00:59:16.270 --> 00:59:19.330
here and just change them
all to have the same height.

00:59:19.330 --> 00:59:22.990
It's got to be smaller, maybe,
than your original height.

00:59:22.990 --> 00:59:25.760
But you just pick some
epsilon and make a whole bunch

00:59:25.760 --> 00:59:28.070
of rectangles of epsilon height.

00:59:28.070 --> 00:59:30.300
If you turn this into a
rectangle of height epsilon,

00:59:30.300 --> 00:59:31.920
this into a rectangle
of height epsilon, each

00:59:31.920 --> 00:59:33.550
of these into a rectangle
of height epsilon,

00:59:33.550 --> 00:59:35.120
and then string
them together, you

00:59:35.120 --> 00:59:39.500
get a super long rectangle
of height epsilon.

00:59:39.500 --> 00:59:42.000
If you do the same
thing over here,

00:59:42.000 --> 00:59:44.140
you will also get a
super long rectangle

00:59:44.140 --> 00:59:46.260
of height epsilon
of the same length,

00:59:46.260 --> 00:59:48.850
because they have the
same area overall.

00:59:48.850 --> 00:59:51.030
So I can dissect this
into the rectangle,

00:59:51.030 --> 00:59:54.390
I can dissect this into the
rectangle, now I just FedEx it.

00:59:54.390 --> 00:59:57.346
Except here FedExing means
I take the cut pattern here,

00:59:57.346 --> 00:59:58.720
I overlay it with
the cut pattern

00:59:58.720 --> 01:00:01.190
on the other which could
square the number of pieces.

01:00:01.190 --> 01:00:04.550
Tons of pieces in this
thing, but it works.

01:00:04.550 --> 01:00:06.600
And you can get from any
polygon to any polygon

01:00:06.600 --> 01:00:07.900
using those gadgets.

01:00:10.900 --> 01:00:14.350
What I want to focus
on is the hinging.

01:00:14.350 --> 01:00:20.330
Hinging is where the
action is for us folders.

01:00:20.330 --> 01:00:25.630
And this was the open
problem for a long time.

01:00:25.630 --> 01:00:28.810
The crazy idea is,
hinge arbitrarily.

01:00:35.101 --> 01:00:36.100
Oh, that was two shapes.

01:00:36.100 --> 01:00:38.230
If you want k shapes,
you just overlay

01:00:38.230 --> 01:00:40.001
k of those cut patterns.

01:00:40.001 --> 01:00:41.500
You'll get some
collection of pieces

01:00:41.500 --> 01:00:45.740
that can be reassembled
into your desired polygons,

01:00:45.740 --> 01:00:48.030
your target polygons here.

01:00:48.030 --> 01:00:51.870
Of course, not by hinging,
and definitely not

01:00:51.870 --> 01:00:53.270
by hinging arbitrarily.

01:00:53.270 --> 01:00:56.120
Like you pick a piece, you hinge
it to any other piece you want.

01:00:56.120 --> 01:00:57.536
I don't care which
piece, you just

01:00:57.536 --> 01:00:59.490
keep hinging all
these pieces together.

01:00:59.490 --> 01:01:00.300
It's insane.

01:01:00.300 --> 01:01:02.050
How could this possibly work?

01:01:02.050 --> 01:01:04.930
Well, by steps three and four.

01:01:04.930 --> 01:01:07.930
Only two steps to go.

01:01:07.930 --> 01:01:09.200
This is the crazy idea.

01:01:09.200 --> 01:01:11.280
For a long time we tried
to mimic this proof

01:01:11.280 --> 01:01:13.180
but make all the
steps hingeable.

01:01:13.180 --> 01:01:16.210
What's hard about that is,
even if one step is hingeable,

01:01:16.210 --> 01:01:18.280
like the triangle
to a rectangle,

01:01:18.280 --> 01:01:20.290
you can't really
combine two hingeings.

01:01:20.290 --> 01:01:21.441
You can't FedEx.

01:01:21.441 --> 01:01:23.190
You can't do one thing
and then the other.

01:01:23.190 --> 01:01:25.750
You don't have transitivity,
because one hinging may not

01:01:25.750 --> 01:01:28.680
be compatible with
the next hinging.

01:01:28.680 --> 01:01:32.940
So instead of trying to make
it all work hinged all the way,

01:01:32.940 --> 01:01:37.770
we just let it not
work and then fix it.

01:01:37.770 --> 01:01:40.220
Great idea.

01:01:40.220 --> 01:01:42.280
The way we're going to
fix it is by subdividing

01:01:42.280 --> 01:01:46.935
the pieces, which will mean
we have to add more hinges.

01:01:54.350 --> 01:01:58.140
And step three is, do
this to make it work.

01:02:01.780 --> 01:02:05.420
So in some sense we know how
we want to assemble the pieces.

01:02:05.420 --> 01:02:06.990
That's what the
dissection tells us,

01:02:06.990 --> 01:02:08.240
that's what step one tells us.

01:02:08.240 --> 01:02:10.070
That if you arrange
the pieces like this,

01:02:10.070 --> 01:02:12.940
it'll give you the
polygon you want.

01:02:12.940 --> 01:02:16.022
Somehow I want to make each
of those assemblies valid.

01:02:16.022 --> 01:02:17.480
I'm going to do
that one at a time.

01:02:17.480 --> 01:02:18.896
I'm going to enable
the first one,

01:02:18.896 --> 01:02:20.794
then enable the
second one, and so on.

01:02:20.794 --> 01:02:22.210
I could actually
get one for free.

01:02:22.210 --> 01:02:23.640
Instead of hinging
arbitrarily, I

01:02:23.640 --> 01:02:26.770
could hinge to make
the first one right.

01:02:26.770 --> 01:02:29.520
I just draw it as they are, and
then just somehow add hinges

01:02:29.520 --> 01:02:30.804
to connect it all together.

01:02:30.804 --> 01:02:32.220
But I won't even
worry about that.

01:02:32.220 --> 01:02:33.645
I'll just make it
work for the first one

01:02:33.645 --> 01:02:34.590
and make it work
for the second one.

01:02:34.590 --> 01:02:36.006
This is not going
to be efficient,

01:02:36.006 --> 01:02:38.140
I should mention that.

01:02:38.140 --> 01:02:41.530
Not particularly efficient.

01:02:41.530 --> 01:02:44.000
The fourth step is,
make it slender.

01:02:44.000 --> 01:02:47.590
And we're going to use the
same trick of subdividing,

01:02:47.590 --> 01:02:51.426
and that will solve that.

01:02:51.426 --> 01:02:53.130
I haven't said much yet.

01:02:57.270 --> 01:02:58.300
Just now we have a plan.

01:03:02.700 --> 01:03:07.490
We need some gadgets, and
here's where I get way

01:03:07.490 --> 01:03:09.786
beyond the pictures I
could draw on the board.

01:03:09.786 --> 01:03:12.160
This I could draw on the board,
but the picture to come I

01:03:12.160 --> 01:03:13.500
could not.

01:03:13.500 --> 01:03:15.920
So here's a general picture.

01:03:15.920 --> 01:03:19.750
Let's say we have some
hinging in some arrangement.

01:03:19.750 --> 01:03:21.980
We really want it
to be different,

01:03:21.980 --> 01:03:24.279
so we're committed to
having a hinge here

01:03:24.279 --> 01:03:25.820
and committed to
having a hinge here.

01:03:25.820 --> 01:03:27.370
We can never remove
hinges, otherwise

01:03:27.370 --> 01:03:29.440
we'll break previous
constructions.

01:03:29.440 --> 01:03:32.900
But what I can do is cut up
the pieces and add more hinges.

01:03:32.900 --> 01:03:34.600
As long as it can
still fold this way,

01:03:34.600 --> 01:03:37.270
I can still make everything
I could make before.

01:03:37.270 --> 01:03:39.554
I just also want it to be
able to fold into this.

01:03:39.554 --> 01:03:40.970
This does not look
like a folding.

01:03:40.970 --> 01:03:45.690
Here I'm detaching
the green thing from B

01:03:45.690 --> 01:03:47.490
and reattaching it to
B prime on the top.

01:03:47.490 --> 01:03:49.115
So I just shifted
the orange thing down

01:03:49.115 --> 01:03:52.420
and reattached the green
at B prime instead of B,

01:03:52.420 --> 01:03:57.280
at the same vertex A.
This is not everything

01:03:57.280 --> 01:03:58.960
I need, but this will
be really useful.

01:03:58.960 --> 01:04:01.600
If I could do this, I'll
be able to do everything

01:04:01.600 --> 01:04:03.140
in a couple steps.

01:04:03.140 --> 01:04:04.845
So let me show you
how to do this.

01:04:04.845 --> 01:04:05.345
Watch.

01:04:08.790 --> 01:04:12.250
So this is dissection.

01:04:12.250 --> 01:04:18.600
We're going to cut out a lot
of little isosceles triangles

01:04:18.600 --> 01:04:20.750
in pairs here.

01:04:20.750 --> 01:04:23.560
It's basically
slicing up this angle.

01:04:23.560 --> 01:04:27.140
So here, two pairs are
still in, and two pairs

01:04:27.140 --> 01:04:29.380
have just been folded out.

01:04:29.380 --> 01:04:31.860
And then we're
also-- so remember we

01:04:31.860 --> 01:04:34.810
want it to go from
here to up there.

01:04:34.810 --> 01:04:38.450
So we're also going to cut
matching little triangles

01:04:38.450 --> 01:04:43.400
along the edges, along some
path that goes from this vertex

01:04:43.400 --> 01:04:44.490
to that vertex.

01:04:44.490 --> 01:04:47.680
There's always some
outside path I can follow,

01:04:47.680 --> 01:04:49.510
and so I'm going to cut.

01:04:49.510 --> 01:04:56.390
Now, the way we do it, we're
making very shallow triangles

01:04:56.390 --> 01:04:58.400
here.

01:04:58.400 --> 01:05:00.712
I want to make them match
the triangles that I'm

01:05:00.712 --> 01:05:01.920
going to be cutting out here.

01:05:01.920 --> 01:05:03.740
So it's got to be
an even number.

01:05:03.740 --> 01:05:06.450
I just want to
divide up that edge

01:05:06.450 --> 01:05:09.150
into an even number
of tiny pieces.

01:05:09.150 --> 01:05:11.640
And then these two match the
size of those two pieces,

01:05:11.640 --> 01:05:13.670
and these two match
the size of those two,

01:05:13.670 --> 01:05:17.440
so that in particular I could
not touch anything, leave it

01:05:17.440 --> 01:05:22.700
the way it used to be, and I
have exactly the old picture.

01:05:22.700 --> 01:05:25.630
But alternatively-- and
so it hinges all the ways

01:05:25.630 --> 01:05:27.460
it used to be able to hinge.

01:05:27.460 --> 01:05:31.060
But alternatively, I can
take these pieces out

01:05:31.060 --> 01:05:33.964
and rearrange them like this.

01:05:33.964 --> 01:05:35.380
So the pieces are
colored the same

01:05:35.380 --> 01:05:37.770
as they were before, except
now instead of putting

01:05:37.770 --> 01:05:39.950
these green pieces
in here, I put

01:05:39.950 --> 01:05:44.620
the green pieces along
the boundary here.

01:05:44.620 --> 01:05:46.820
And we designed them
to fit perfectly.

01:05:46.820 --> 01:05:49.460
So these two came from here.

01:05:49.460 --> 01:05:52.410
These two came from here,
these two came from there,

01:05:52.410 --> 01:05:54.820
these two came from there.

01:05:54.820 --> 01:05:57.750
And if you think about
it, then the green piece

01:05:57.750 --> 01:06:01.740
has reached around and
can now touch there.

01:06:01.740 --> 01:06:03.214
We still have these
orange pieces.

01:06:03.214 --> 01:06:05.130
They don't have their
holes to go into before,

01:06:05.130 --> 01:06:07.575
but conveniently there
are holes right there.

01:06:07.575 --> 01:06:09.700
And that orange chain is
attached right at the top,

01:06:09.700 --> 01:06:12.946
right where it needs to be,
so you just stuff them in.

01:06:12.946 --> 01:06:14.320
Never mind how
you stuff them in.

01:06:14.320 --> 01:06:16.760
We don't have to worry
about continuous motion yet,

01:06:16.760 --> 01:06:19.470
that will come later.

01:06:19.470 --> 01:06:22.210
And there you go.

01:06:22.210 --> 01:06:25.410
So we've moved this
green piece up to there,

01:06:25.410 --> 01:06:29.730
and it had to attach it the
same vertex of the green piece.

01:06:29.730 --> 01:06:32.490
Now, that's not
quite what I want.

01:06:32.490 --> 01:06:35.360
What I'd really like to be
able to do is take a piece

01:06:35.360 --> 01:06:39.530
and move it anywhere I want, and
attach it at a different vertex

01:06:39.530 --> 01:06:40.465
than from before.

01:06:40.465 --> 01:06:41.840
Because in general,
I've just got

01:06:41.840 --> 01:06:43.280
to put that green
piece somewhere.

01:06:43.280 --> 01:06:44.960
And it's touching
somebody, because I

01:06:44.960 --> 01:06:47.390
want to make a
connected polygon.

01:06:47.390 --> 01:06:50.790
But it might not want to
attach it at the same vertex.

01:06:50.790 --> 01:06:52.830
I might need to turn
it around and attach it

01:06:52.830 --> 01:06:53.750
to some other vertex.

01:06:53.750 --> 01:07:00.170
It turns out, you just do this
twice and you can fix that.

01:07:00.170 --> 01:07:03.470
So this is the
elaboration on step three,

01:07:03.470 --> 01:07:08.250
and in general we're
going to maintain

01:07:08.250 --> 01:07:12.820
at all times the pieces are
connected together in a tree.

01:07:12.820 --> 01:07:19.090
Ultimately, I want an open
chain of hinged polygons.

01:07:19.090 --> 01:07:22.060
But I'll worry about
that at the end.

01:07:22.060 --> 01:07:24.840
For now, let's take
it to be a tree.

01:07:24.840 --> 01:07:27.090
So far it looks like
a chain, but easier

01:07:27.090 --> 01:07:30.130
to think about a tree.

01:07:30.130 --> 01:07:33.970
And then the key thing
that we are able to do,

01:07:33.970 --> 01:07:36.080
what this picture
almost proves--

01:07:36.080 --> 01:07:39.200
there's another issue
which I'll get to--

01:07:39.200 --> 01:07:52.220
is the ability to effectively
move a rooted subtree

01:07:52.220 --> 01:07:59.605
to attach at another
hinge at any other vertex.

01:08:06.230 --> 01:08:08.220
What I've drawn here is
we're moving one piece.

01:08:08.220 --> 01:08:10.219
But of course, if there
are more pieces attached

01:08:10.219 --> 01:08:11.990
to the green thing,
they could come along

01:08:11.990 --> 01:08:14.032
for the ride, no problem.

01:08:14.032 --> 01:08:16.240
So in computer science we
call that a rooted subtree.

01:08:16.240 --> 01:08:18.359
So you have some
collection of pieces,

01:08:18.359 --> 01:08:22.109
you have some tree of
pieces hanging off.

01:08:22.109 --> 01:08:24.188
Basically if we deleted
this vertex in a tree,

01:08:24.188 --> 01:08:25.479
it would detach into two parts.

01:08:25.479 --> 01:08:28.920
So here's part A,
here's part B. And maybe

01:08:28.920 --> 01:08:30.729
I should actually
give these names.

01:08:30.729 --> 01:08:36.185
So here, this is A, this
is B. Here is little a,

01:08:36.185 --> 01:08:38.620
and here's little b.

01:08:38.620 --> 01:08:41.696
And what I can do is pick
some other point, A prime.

01:08:41.696 --> 01:08:43.029
This is a whole bunch of pieces.

01:08:43.029 --> 01:08:45.850
I can pick any vertex
of any piece in A,

01:08:45.850 --> 01:08:48.050
and I can move B over to there.

01:08:48.050 --> 01:08:49.420
I'll just redraw it here.

01:08:52.040 --> 01:08:54.189
Here's the old vertex, little a.

01:08:54.189 --> 01:08:57.970
Here's the new vertex,
little a prime.

01:08:57.970 --> 01:09:01.380
And I can attach the
triangle to be there,

01:09:01.380 --> 01:09:05.970
but it still had to attach
at the same root, little b.

01:09:05.970 --> 01:09:08.000
What I'd really
like to do, suppose

01:09:08.000 --> 01:09:11.160
I have some other
vertex here, B prime,

01:09:11.160 --> 01:09:14.525
I'd really like to make B
prime attach to A prime.

01:09:18.029 --> 01:09:20.319
This is step one.

01:09:20.319 --> 01:09:24.770
Step two is to do
the same thing,

01:09:24.770 --> 01:09:26.769
but with the roles
of A and B reversed.

01:09:26.769 --> 01:09:27.810
This is a rooted subtree.

01:09:27.810 --> 01:09:30.174
It's everything at
this root and below.

01:09:30.174 --> 01:09:31.590
But this is also
a rooted subtree.

01:09:31.590 --> 01:09:34.410
It's everything at
this root and above.

01:09:34.410 --> 01:09:36.122
So I'm going to take
this thing, think

01:09:36.122 --> 01:09:37.580
of it as a rooted
subtree, and say,

01:09:37.580 --> 01:09:39.540
well I'd like to move
this rooted subtree

01:09:39.540 --> 01:09:42.130
to attach at B prime
instead of B. It's exactly

01:09:42.130 --> 01:09:44.899
the same operation,
just reversing roles.

01:09:44.899 --> 01:09:50.550
Then I will have B
with vertex little b,

01:09:50.550 --> 01:09:52.810
vertex little b prime.

01:09:52.810 --> 01:09:58.990
And I have my blob A,
where this is A prime

01:09:58.990 --> 01:10:10.550
and this is little a,
just rotating pieces.

01:10:10.550 --> 01:10:16.280
So look, I've now accomplished
these two chunks of pieces

01:10:16.280 --> 01:10:22.640
I've been able to move
subtree b instead of attaching

01:10:22.640 --> 01:10:27.950
at little a to little b, it now
attaches at A prime B prime.

01:10:27.950 --> 01:10:30.200
This really means I can
take any piece I want--

01:10:30.200 --> 01:10:33.470
you can think of B as just
being a single piece, in fact,

01:10:33.470 --> 01:10:35.476
but I need this operation
to work for subtrees.

01:10:35.476 --> 01:10:37.100
I take a single piece,
I say, well it's

01:10:37.100 --> 01:10:39.970
currently attached at this
vertex to this vertex,

01:10:39.970 --> 01:10:42.060
but I really want
something else.

01:10:42.060 --> 01:10:44.290
I want some other
vertex of B to attach

01:10:44.290 --> 01:10:47.430
to some other vertex
of any other piece.

01:10:47.430 --> 01:10:49.320
And this will let me do that.

01:10:49.320 --> 01:10:51.445
I pick the vertex I
want to attach to,

01:10:51.445 --> 01:10:53.680
I pick the vertex I
want to attach from.

01:10:53.680 --> 01:10:57.050
I do two of these rooted
subtree moves-- these things--

01:10:57.050 --> 01:11:01.540
and then I achieve moving
this piece to anywhere I want.

01:11:01.540 --> 01:11:02.489
Question?

01:11:02.489 --> 01:11:04.239
AUDIENCE: So it seems
like you're using up

01:11:04.239 --> 01:11:06.970
perimeter when you
do each one of these.

01:11:06.970 --> 01:11:07.595
PROFESSOR: Yeah

01:11:07.595 --> 01:11:09.136
AUDIENCE: So what
happens if you need

01:11:09.136 --> 01:11:11.270
to use the same [INAUDIBLE].

01:11:11.270 --> 01:11:14.250
PROFESSOR: So the question
is, I'm using up perimeter.

01:11:14.250 --> 01:11:15.500
What if I had to use it again?

01:11:15.500 --> 01:11:18.220
Because I'm following
one of these long paths,

01:11:18.220 --> 01:11:21.797
slicing up pieces like
crazy, and now there

01:11:21.797 --> 01:11:23.880
may be some other piece
that was attached to green

01:11:23.880 --> 01:11:25.070
and I want to move
it somewhere else.

01:11:25.070 --> 01:11:27.210
It might have to follow
along this path again.

01:11:27.210 --> 01:11:30.157
And indeed, I will.

01:11:30.157 --> 01:11:31.990
You can be smart about
it, or you could say,

01:11:31.990 --> 01:11:34.210
well it'll kind of work.

01:11:34.210 --> 01:11:38.820
It's just now-- just
think about this picture

01:11:38.820 --> 01:11:41.010
and you follow some path.

01:11:41.010 --> 01:11:43.150
There's now just more
pieces you visit.

01:11:43.150 --> 01:11:45.652
So there's still an outer
boundary to these pieces.

01:11:45.652 --> 01:11:47.860
I'm going to think of them
still being in this state,

01:11:47.860 --> 01:11:48.830
not in this state.

01:11:48.830 --> 01:11:50.654
I can fix it to be
whatever I want.

01:11:50.654 --> 01:11:53.070
So I'm going to end up cutting
this into little triangles,

01:11:53.070 --> 01:11:55.286
and little triangles,
little triangles.

01:11:55.286 --> 01:11:57.160
It's going to get really
messy, really quick.

01:11:57.160 --> 01:11:59.240
Every time I do one
of these operations,

01:11:59.240 --> 01:12:02.940
I potentially double the
number of pieces or worse.

01:12:02.940 --> 01:12:05.500
So this going to be an
exponential number of pieces

01:12:05.500 --> 01:12:06.630
if I'm not careful.

01:12:06.630 --> 01:12:08.960
You can be careful and
do a little bit better,

01:12:08.960 --> 01:12:12.870
but you cannot hope for
a bound in terms of n--

01:12:12.870 --> 01:12:15.860
like I would hope for n to
some polynomial in n number

01:12:15.860 --> 01:12:16.650
of pieces.

01:12:16.650 --> 01:12:19.350
That's not possible,
even for dissections.

01:12:19.350 --> 01:12:23.360
If I have a nice, fat
rectangle and I just say,

01:12:23.360 --> 01:12:29.060
I want to make it into a
super narrow, skinny rectangle

01:12:29.060 --> 01:12:31.980
of the same size,
same area, that's

01:12:31.980 --> 01:12:36.390
going to require a lot of
cuts even though n is 4.

01:12:36.390 --> 01:12:38.210
So I can't hope for
a polynomial bound.

01:12:38.210 --> 01:12:40.140
You can actually get a
pseudo polynomial bound

01:12:40.140 --> 01:12:43.710
in a certain sense, but I
don't want to get into that,.

01:12:43.710 --> 01:12:47.180
Let's go for existence.

01:12:47.180 --> 01:12:48.640
So that was a good question.

01:12:48.640 --> 01:12:50.850
We're going to use this
perimeter over and over.

01:12:50.850 --> 01:12:53.308
There's unfortunately another
issue with this construction.

01:12:53.308 --> 01:13:00.980
This is not enough, because
here I basically assumed

01:13:00.980 --> 01:13:04.490
that this green piece was
one solid piece attached

01:13:04.490 --> 01:13:07.820
at one point to the orange.

01:13:07.820 --> 01:13:09.790
As soon as I do this
operation, there's

01:13:09.790 --> 01:13:15.950
now a whole bunch of
pieces here at this vertex.

01:13:15.950 --> 01:13:18.630
have to do a more general thing.

01:13:18.630 --> 01:13:20.060
This is where it get's messy.

01:13:20.060 --> 01:13:20.530
AUDIENCE: [WHISTLES]

01:13:20.530 --> 01:13:21.321
PROFESSOR: Exactly.

01:13:23.540 --> 01:13:27.450
In general, I might
have several hinges

01:13:27.450 --> 01:13:29.040
connecting several
pieces over here

01:13:29.040 --> 01:13:30.390
to several pieces over there.

01:13:30.390 --> 01:13:32.765
Pieces that don't have hinges
I don't care so much about,

01:13:32.765 --> 01:13:36.830
but I have to worry about
this in the general case.

01:13:36.830 --> 01:13:38.890
It is messier.

01:13:38.890 --> 01:13:40.310
So this is the input.

01:13:40.310 --> 01:13:43.810
Our goal is to attach these
three pieces, because this

01:13:43.810 --> 01:13:45.850
is like a rooted subtree here.

01:13:45.850 --> 01:13:48.190
Initially, this may have
just been one piece,

01:13:48.190 --> 01:13:50.416
but it's going to get
cut up pretty quickly.

01:13:50.416 --> 01:13:51.790
So I've got to
deal with the case

01:13:51.790 --> 01:13:53.540
that there are these three
pieces simulating one.

01:13:53.540 --> 01:13:55.123
Maybe there's other
stuff hanging off,

01:13:55.123 --> 01:13:56.095
that's not a big deal.

01:13:56.095 --> 01:14:00.780
And I need to move this entire
bulk hinge somewhere else.

01:14:00.780 --> 01:14:01.860
Where are we going?

01:14:01.860 --> 01:14:03.740
It looks like the top.

01:14:03.740 --> 01:14:05.420
Yeah, little b prime.

01:14:05.420 --> 01:14:09.560
So here we're attached to B,
we want to attach to b prime.

01:14:09.560 --> 01:14:12.690
It can be done.

01:14:12.690 --> 01:14:15.820
It's a little trickier, because
more things have to match up.

01:14:15.820 --> 01:14:17.770
So again, we're
going to slice out

01:14:17.770 --> 01:14:20.910
from the corner of green,
the corner of purple,

01:14:20.910 --> 01:14:22.540
the corner of yellow.

01:14:22.540 --> 01:14:25.650
But our pieces are going
to look a little different.

01:14:25.650 --> 01:14:28.140
So for green, the
first piece will still

01:14:28.140 --> 01:14:29.320
make just skinny triangles.

01:14:29.320 --> 01:14:31.910
You can barely see them,
but they are triangles.

01:14:31.910 --> 01:14:35.580
And they're again trying to
match the edge lengths over

01:14:35.580 --> 01:14:36.380
here.

01:14:36.380 --> 01:14:39.886
So we're walking along the
path, same path as before.

01:14:39.886 --> 01:14:41.760
So we just cut up a
bunch of skinny triangles

01:14:41.760 --> 01:14:43.290
to make that work.

01:14:43.290 --> 01:14:47.200
But purple one, it's
not going to work

01:14:47.200 --> 01:14:48.700
if we just did that
for all of them.

01:14:48.700 --> 01:14:50.759
There just aren't enough
slots to put things,

01:14:50.759 --> 01:14:53.050
because really you want to
traverse that boundary three

01:14:53.050 --> 01:14:54.147
times.

01:14:54.147 --> 01:14:55.980
And here you can't just
do it one at a time.

01:14:55.980 --> 01:14:59.830
I won't work, you'll
get an infinite loop.

01:14:59.830 --> 01:15:02.570
So what we do is, each of
the little triangles that

01:15:02.570 --> 01:15:05.520
would have come out of here we
actually split into two parts.

01:15:05.520 --> 01:15:07.520
It may be easiest to
see on the yellow.

01:15:07.520 --> 01:15:09.320
There's a triangle,
and then there's

01:15:09.320 --> 01:15:13.300
this non-convex
quadrilateral, a little kite.

01:15:13.300 --> 01:15:15.490
It just fits on top
of the triangle.

01:15:15.490 --> 01:15:18.390
If you glue them together,
you get a regular old triangle

01:15:18.390 --> 01:15:21.370
and it fits in here
just like before.

01:15:21.370 --> 01:15:23.950
But I take that triangle,
I cut it into two parts.

01:15:23.950 --> 01:15:27.100
I do that for both
purple and yellow.

01:15:27.100 --> 01:15:29.240
But notice, this
yellow triangle is

01:15:29.240 --> 01:15:34.230
bigger than this purple
triangle a little bit.

01:15:34.230 --> 01:15:35.890
How much bigger?

01:15:35.890 --> 01:15:39.530
Well, it's designed so
that this yellow triangle

01:15:39.530 --> 01:15:43.364
is the same size as these
two pieces put together.

01:15:43.364 --> 01:15:44.780
And this triangle
is the same size

01:15:44.780 --> 01:15:47.690
as this piece put
together with itself.

01:15:47.690 --> 01:15:50.080
In general, the triangle
at the next level

01:15:50.080 --> 01:15:52.850
up will be the same
size as the two

01:15:52.850 --> 01:15:58.090
pieces from the previous level,
except here there's only one.

01:15:58.090 --> 01:15:59.100
Why?

01:15:59.100 --> 01:16:03.350
Because we want to do
this so that they all fit.

01:16:03.350 --> 01:16:07.460
If you take just the quad parts
of everybody and the triangle

01:16:07.460 --> 01:16:10.310
of the last guy, then that
triangle will fit into the quad

01:16:10.310 --> 01:16:12.893
of the next one , which will fit
into the quad of the next one

01:16:12.893 --> 01:16:14.020
perfectly.

01:16:14.020 --> 01:16:17.240
Because as far as this
yellow quad is concerned,

01:16:17.240 --> 01:16:22.200
that purple plus
green is the same size

01:16:22.200 --> 01:16:24.825
as purple plus purple, which
was a regular triangle.

01:16:24.825 --> 01:16:26.700
This triangle is supposed
to be the same size

01:16:26.700 --> 01:16:28.130
as that yellow triangle.

01:16:28.130 --> 01:16:30.650
So from the viewpoint
of this yellow quad,

01:16:30.650 --> 01:16:33.227
it's just wants
a mate like this,

01:16:33.227 --> 01:16:35.060
which is the same as a
mate like this, which

01:16:35.060 --> 01:16:37.760
is the same as a mate like this.

01:16:37.760 --> 01:16:41.040
And so those stack in, and
they perfectly fit along.

01:16:41.040 --> 01:16:45.050
So the triangles we end up
cutting out of the perimeter

01:16:45.050 --> 01:16:48.630
here are the biggest size.

01:16:48.630 --> 01:16:50.460
And then you can squeeze
them all together

01:16:50.460 --> 01:16:58.200
like this, and boom, you get
your alternate dissection.

01:16:58.200 --> 01:17:00.180
Then the other fun part,
what you're left with

01:17:00.180 --> 01:17:04.500
is just the triangles from each
of the colors except the green.

01:17:04.500 --> 01:17:13.300
And conveniently, it just works.

01:17:13.300 --> 01:17:14.750
There's a little
more work to do,

01:17:14.750 --> 01:17:16.666
because you see there's
also these red pieces.

01:17:16.666 --> 01:17:18.100
Where did those come from?

01:17:18.100 --> 01:17:19.670
Just more stuff.

01:17:19.670 --> 01:17:22.455
I see where they came
from, up there at C3.

01:17:22.455 --> 01:17:24.050
A little corner got cut out.

01:17:24.050 --> 01:17:27.350
Oh, it's such a mess.

01:17:27.350 --> 01:17:30.454
But the idea is, well,
the purple triangles

01:17:30.454 --> 01:17:32.120
are the same size as
the green triangle.

01:17:32.120 --> 01:17:36.710
So they can fit in the green
piece and fill in these holes.

01:17:36.710 --> 01:17:39.120
And then well, the
yellow triangles

01:17:39.120 --> 01:17:43.130
are the same size as the
purple triangles when

01:17:43.130 --> 01:17:46.230
you add them together-- that's
what we cut out of here--

01:17:46.230 --> 01:17:49.680
and so the yellow just fits in
there and fills in this space.

01:17:49.680 --> 01:17:52.230
And so we just shifted by one.

01:17:52.230 --> 01:17:55.490
The trouble is, the yellow guys
we don't quite have enough.

01:17:55.490 --> 01:17:58.810
And for that we cut out
some corner up there just

01:17:58.810 --> 01:18:00.950
to fill them back in.

01:18:00.950 --> 01:18:03.170
So you could just stick
the red thing back

01:18:03.170 --> 01:18:04.770
into the red vertex,
nothing changes.

01:18:04.770 --> 01:18:07.440
Or you can take the
red guys, stick them

01:18:07.440 --> 01:18:10.400
into the yellow
triangle, and in the end

01:18:10.400 --> 01:18:13.600
we successfully move
a rooted subtree

01:18:13.600 --> 01:18:16.830
from anywhere to anywhere.

01:18:16.830 --> 01:18:20.280
Lots of things to check
here, but if you stare at it

01:18:20.280 --> 01:18:23.030
enough it works.

01:18:23.030 --> 01:18:25.200
And it works for
any value of three.

01:18:25.200 --> 01:18:28.490
Here we were talking about
three pieces, three hinges,

01:18:28.490 --> 01:18:30.295
but you can do it for any count.

01:18:32.900 --> 01:18:34.640
That's the gadget.

01:18:34.640 --> 01:18:40.950
And good, we've just enough time
to talk about slenderifying.

01:18:40.950 --> 01:18:45.710
So if we do this over
and over, move each piece

01:18:45.710 --> 01:18:48.269
to wherever you want, move all
the pieces to where you want

01:18:48.269 --> 01:18:50.560
for target shape, then do it
for the next target shape,

01:18:50.560 --> 01:18:52.101
then do it for the
next, you'll still

01:18:52.101 --> 01:18:53.720
be able to go to
all the old foldings

01:18:53.720 --> 01:18:55.720
but you can also
go to the new ones.

01:18:55.720 --> 01:18:58.270
The last step is
how do we subdivide

01:18:58.270 --> 01:19:01.340
to make our thing slender?

01:19:01.340 --> 01:19:03.262
And so we have
some tree hinging.

01:19:03.262 --> 01:19:03.970
It's not a chain.

01:19:03.970 --> 01:19:06.509
We want to also make it a
chain and make it slender,

01:19:06.509 --> 01:19:08.800
because slender only works
if it's a chain, not a tree.

01:19:08.800 --> 01:19:10.300
So we have some
tree pieces here.

01:19:10.300 --> 01:19:12.872
I've drawn two pieces to
make it a little simpler,

01:19:12.872 --> 01:19:14.330
but this really
works for anything.

01:19:14.330 --> 01:19:15.230
It's super simple.

01:19:15.230 --> 01:19:18.130
Triangulate the pieces,
just because triangles

01:19:18.130 --> 01:19:19.700
are easier to think about.

01:19:19.700 --> 01:19:24.970
Then for each triangle,
cut to its centroid,

01:19:24.970 --> 01:19:27.580
where you can fit
the largest disk.

01:19:27.580 --> 01:19:31.220
If you do that, each of these
three angles will be obtuse.

01:19:31.220 --> 01:19:33.380
So as long as that's
the apex of the triangle

01:19:33.380 --> 01:19:37.150
and this is the base--
those are the base edges--

01:19:37.150 --> 01:19:40.100
it will be slender
because it's obtuse.

01:19:40.100 --> 01:19:42.570
Or if might be 90
degrees, maybe.

01:19:42.570 --> 01:19:45.200
Maybe not even that.

01:19:45.200 --> 01:19:47.030
I think it's always
strictly obtuse.

01:19:47.030 --> 01:19:49.490
So you do that for
each of the triangles,

01:19:49.490 --> 01:19:52.887
and then you just walk
around the outside boundary

01:19:52.887 --> 01:19:55.220
and say, well, just hinge
things together in that order.

01:19:55.220 --> 01:19:57.460
So I'm going to have this
triangle hinge to this one,

01:19:57.460 --> 01:19:59.570
hinge up there around.

01:19:59.570 --> 01:20:01.620
So I just walked around
the outside boundary.

01:20:01.620 --> 01:20:04.370
Now, the key thing to
check is that every hinge

01:20:04.370 --> 01:20:06.680
that was here still exists here.

01:20:06.680 --> 01:20:09.100
It's still possible
to fold there.

01:20:09.100 --> 01:20:11.160
And we just got more
hinges, no big deal.

01:20:11.160 --> 01:20:13.755
Just like before,
the constructions

01:20:13.755 --> 01:20:15.880
we've been doing, we've
been cutting up the pieces,

01:20:15.880 --> 01:20:18.566
adding hinges, but preserving
all the old hinges.

01:20:18.566 --> 01:20:20.190
Therefore, any motion
that was possible

01:20:20.190 --> 01:20:22.140
before is still possible.

01:20:22.140 --> 01:20:27.690
And furthermore, this is now a
slenderly adorned open chain,

01:20:27.690 --> 01:20:29.770
we know its configuration
space is connected,

01:20:29.770 --> 01:20:31.440
so all those things
that we knew could

01:20:31.440 --> 01:20:34.070
exist-- it could be like this
or it could instantaneously

01:20:34.070 --> 01:20:35.870
move to here-- now we
know there's actually

01:20:35.870 --> 01:20:38.830
continuous motion from
everywhere everywhere.

01:20:38.830 --> 01:20:40.430
And this kind of
a fun culmination

01:20:40.430 --> 01:20:42.810
of all this linkage stuff,
with Carpenter's Rule,

01:20:42.810 --> 01:20:45.570
with slender adornments,
all these powerful tools,

01:20:45.570 --> 01:20:48.490
we build up universal hinge
dissections, basically

01:20:48.490 --> 01:20:51.800
transformers that can
fold from in this case 2D

01:20:51.800 --> 01:20:53.540
shape to any other
collection of 2D

01:20:53.540 --> 01:20:55.700
shapes you want of equal area.

01:20:55.700 --> 01:20:59.900
And again, you can generalize it
to 3D, although this will work.

01:20:59.900 --> 01:21:03.670
Any section you have in
3D will be hingeable,

01:21:03.670 --> 01:21:06.241
but dissections get
a little bit harder.

01:21:06.241 --> 01:21:08.240
You need not just that
the volumes are the same,

01:21:08.240 --> 01:21:10.190
but something else
called the [INAUDIBLE]

01:21:10.190 --> 01:21:14.050
is the same, which I
don't want to get into.

01:21:14.050 --> 01:21:15.300
That's hinges and dissections.

01:21:15.300 --> 01:21:17.586
Any questions?

01:21:17.586 --> 01:21:22.080
All right, turn in
your problem set.

