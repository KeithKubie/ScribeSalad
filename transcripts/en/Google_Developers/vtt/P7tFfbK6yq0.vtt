WEBVTT
Kind: captions
Language: en

00:00:09.067 --> 00:00:09.650
PENG YING: Hi.

00:00:09.650 --> 00:00:11.980
And welcome to Google
Developers Live.

00:00:11.980 --> 00:00:13.080
My name is Peng Ying.

00:00:13.080 --> 00:00:15.400
And with me today is
my colleague Mihai.

00:00:15.400 --> 00:00:16.624
MIHAI IONESCU: Hi.

00:00:16.624 --> 00:00:18.790
PENG YING: Today we're
talking about Wallet Objects.

00:00:18.790 --> 00:00:20.950
Specifically, we're talking
about the Quick Starts

00:00:20.950 --> 00:00:22.180
from Walllet Objects.

00:00:22.180 --> 00:00:26.220
What we'll be doing is walking
through getting C Sharp Quick

00:00:26.220 --> 00:00:27.584
Start up and running.

00:00:27.584 --> 00:00:29.000
We have a variety
of Quick Starts,

00:00:29.000 --> 00:00:31.330
but today we're
talking specifically

00:00:31.330 --> 00:00:33.550
about the C Sharp one.

00:00:33.550 --> 00:00:36.590
The Quick Starts are designed to
provide sample code to give you

00:00:36.590 --> 00:00:40.200
an understanding of how the
Wallet Objects API works.

00:00:40.200 --> 00:00:43.270
Within it, we
cover a few topics:

00:00:43.270 --> 00:00:47.680
one is authorizing access;
inserting a new Wallet Objects

00:00:47.680 --> 00:00:51.180
class; using the Save to Wallet
button, or Save to Wallet

00:00:51.180 --> 00:00:54.260
JavaScript, to insert
objects; and lastly,

00:00:54.260 --> 00:00:57.110
enabling the web service
API and discoverables,

00:00:57.110 --> 00:00:59.640
so users can discover
your loyalty program

00:00:59.640 --> 00:01:02.890
and join from within
the Google Wallet app.

00:01:02.890 --> 00:01:06.640
You find documentation about
the API on our developers site

00:01:06.640 --> 00:01:11.590
at
 developers.google.com/wallet/objects.

00:01:11.590 --> 00:01:14.410
And to show you how to get this
Wallet Objects Quick Start up

00:01:14.410 --> 00:01:16.470
and running, here's Mihai.

00:01:16.470 --> 00:01:18.030
MIHAI IONESCU: Thank you, Peng.

00:01:18.030 --> 00:01:22.520
The easiest way to get started
with a sample, a C Sharp

00:01:22.520 --> 00:01:26.320
sample, is to go to our
developer documentation

00:01:26.320 --> 00:01:31.430
and follow the easy
step-by-step instructions on how

00:01:31.430 --> 00:01:34.950
to get set up, download
the code, run the code,

00:01:34.950 --> 00:01:37.660
and test it modified.

00:01:37.660 --> 00:01:40.830
The URL, I have it right
here on the screen,

00:01:40.830 --> 00:01:47.030
is
 developers.google.com/wallet/objects/quickstart-csharp.

00:01:47.030 --> 00:01:50.770
And you can also easily
get to the sample using

00:01:50.770 --> 00:01:54.720
the left side
navigation controls.

00:01:54.720 --> 00:01:56.700
We see here we have a few steps.

00:01:56.700 --> 00:01:59.680
The first one is
get credentials,

00:01:59.680 --> 00:02:05.340
and we have covered that in
a different Developers Live

00:02:05.340 --> 00:02:06.280
video.

00:02:06.280 --> 00:02:09.400
You can find that
on Developers Live,

00:02:09.400 --> 00:02:12.760
and the easiest way
to search for it is go

00:02:12.760 --> 00:02:16.250
to
 developers.google.com/live/wallet,

00:02:16.250 --> 00:02:22.070
and and look for a video
called Account Set-up.

00:02:22.070 --> 00:02:24.410
And it should look
something like this.

00:02:24.410 --> 00:02:29.710
And that will tell you how
to get your Wallet Objects

00:02:29.710 --> 00:02:32.380
developer account
set-up, including

00:02:32.380 --> 00:02:34.940
all the credentials
mentioned here.

00:02:34.940 --> 00:02:40.500
So we won't cover
that in this video.

00:02:40.500 --> 00:02:44.730
We will move right
to step two, which

00:02:44.730 --> 00:02:47.560
is download the
Quick Start project.

00:02:47.560 --> 00:02:51.210
We are hosting all our
samples, and demos on GitHub.

00:02:51.210 --> 00:02:52.510
They're all open source.

00:02:52.510 --> 00:02:56.150
You can download
them, modify them.

00:02:56.150 --> 00:03:04.000
And in this case, the code is
hosted under the Google Wallet

00:03:04.000 --> 00:03:06.970
repo, and I already
have it in here.

00:03:06.970 --> 00:03:10.210
If you go to
github.com/googlewallet,

00:03:10.210 --> 00:03:12.890
you'll find all
our Quick Starts,

00:03:12.890 --> 00:03:18.660
and WalletObjectsCSharp
is what you want to look

00:03:18.660 --> 00:03:21.350
for, and it's right there.

00:03:21.350 --> 00:03:26.540
And the easiest way probably
to download the sample

00:03:26.540 --> 00:03:28.810
is to clone it.

00:03:28.810 --> 00:03:31.130
You can either download
the zip, unzip it,

00:03:31.130 --> 00:03:36.870
and put the code in a
location of you're choosing,

00:03:36.870 --> 00:03:38.830
or clone it to desktop.

00:03:38.830 --> 00:03:41.830
And the cloning is
easily done if you're

00:03:41.830 --> 00:03:43.060
running on a Windows machine.

00:03:43.060 --> 00:03:44.518
In this case, you're
doing C Sharp,

00:03:44.518 --> 00:03:47.310
so most likely you're
using a Windows machine.

00:03:47.310 --> 00:03:49.330
You can use GitHub for Windows.

00:03:49.330 --> 00:03:54.530
It's a very nice utility, and I
already have it on the screen.

00:03:54.530 --> 00:03:58.210
In this case, it lists all
the repositories on the Google

00:03:58.210 --> 00:04:04.990
Wallet, and I have already
downloaded the Wallet Objects

00:04:04.990 --> 00:04:07.250
Quick Start sample.

00:04:07.250 --> 00:04:11.950
In your case, the first time you
will see a clone button, just

00:04:11.950 --> 00:04:14.570
click on it and then it'll
clone it on your machine,

00:04:14.570 --> 00:04:17.640
and you can start from there.

00:04:17.640 --> 00:04:23.700
So, going back to our tutorial,
once you have downloaded

00:04:23.700 --> 00:04:28.300
the sample, make a
note of the directory

00:04:28.300 --> 00:04:29.560
where it downloaded it.

00:04:29.560 --> 00:04:31.870
And then, we move
to the next step,

00:04:31.870 --> 00:04:36.350
which is configuring, and
finally building the C Sharp

00:04:36.350 --> 00:04:37.650
project.

00:04:37.650 --> 00:04:39.960
The best way to run
C Sharp on Windows

00:04:39.960 --> 00:04:43.040
is to use Visual Studio Express.

00:04:43.040 --> 00:04:47.370
You can download it for
free from Microsoft.

00:04:47.370 --> 00:04:51.080
And once you have Visual
Studio up and running,

00:04:51.080 --> 00:04:59.360
you can simply load the Quick
Start C Sharp project solution

00:04:59.360 --> 00:05:01.510
into Visual Studio.

00:05:01.510 --> 00:05:04.120
And I have Visual
Studio running here.

00:05:04.120 --> 00:05:08.610
And if you look on the right
side under Solution Explorer,

00:05:08.610 --> 00:05:14.500
this is how your
solution will look like.

00:05:14.500 --> 00:05:19.760
And I will go through each
one of those one-by-one.

00:05:22.650 --> 00:05:25.750
So first, let's
look what else we

00:05:25.750 --> 00:05:30.000
need to have the project
correctly set up.

00:05:30.000 --> 00:05:32.970
First of all, there
is a web.config file,

00:05:32.970 --> 00:05:38.720
and in there we will need to
update quite a few fields.

00:05:38.720 --> 00:05:41.010
So remember in the
beginning, I mentioned

00:05:41.010 --> 00:05:44.490
that you need to have your
Wallet Objects account properly

00:05:44.490 --> 00:05:47.880
set up, and after
you do that there

00:05:47.880 --> 00:05:52.870
are a few variables that
you need to make note of,

00:05:52.870 --> 00:05:56.780
and you will need to use those
when you update your web.config

00:05:56.780 --> 00:05:58.040
file.

00:05:58.040 --> 00:06:00.460
So let's start here
in this app setting

00:06:00.460 --> 00:06:04.020
section in the
web.config file and we

00:06:04.020 --> 00:06:06.220
have a few important fields.

00:06:06.220 --> 00:06:08.790
The first one is the
service account ID,

00:06:08.790 --> 00:06:15.000
which is your developer
email that links your service

00:06:15.000 --> 00:06:17.310
accounts with your
Wallet Objects account.

00:06:20.195 --> 00:06:21.990
It look something
like this: a number

00:06:21.990 --> 00:06:23.281
@developer.gserviceaccount.com.

00:06:26.680 --> 00:06:28.290
Just quickly I'm
going to show you,

00:06:28.290 --> 00:06:35.200
you can find that in
your Cloud Console.

00:06:35.200 --> 00:06:38.500
More details, as I mentioned,
are in the account set up

00:06:38.500 --> 00:06:43.850
a tutorial, but
the service account

00:06:43.850 --> 00:06:47.380
is something like
this over here.

00:06:47.380 --> 00:06:49.730
All of those, you should
have them available

00:06:49.730 --> 00:06:52.580
by the time you get to
the web.config file.

00:06:52.580 --> 00:06:56.440
The next one is your
private key file.

00:06:56.440 --> 00:07:01.310
That one you would also download
it from your Cloud Console

00:07:01.310 --> 00:07:05.130
and rename it to something
that suits you, in this case

00:07:05.130 --> 00:07:07.340
I just called it key.p12.

00:07:07.340 --> 00:07:12.890
And you copy that in
the instruction for you

00:07:12.890 --> 00:07:16.760
to copy it in the
WalletObjectCSharp directory,

00:07:16.760 --> 00:07:19.090
and you can see
it in the Solution

00:07:19.090 --> 00:07:22.360
Explorer is right here.

00:07:22.360 --> 00:07:27.260
Next we have the IssuerID,
which is your Wallet Objects

00:07:27.260 --> 00:07:28.880
developer ID.

00:07:28.880 --> 00:07:32.640
You'll have to the
correct value in here.

00:07:32.640 --> 00:07:34.709
Next, the application
name, that's

00:07:34.709 --> 00:07:36.000
something all of your choosing.

00:07:39.140 --> 00:07:43.190
Next we have origins, where
you can have a list of URLs.

00:07:43.190 --> 00:07:46.070
Those are basically
domains where

00:07:46.070 --> 00:07:47.950
you would run your
application on,

00:07:47.950 --> 00:07:50.880
and the reason you
need to list them here

00:07:50.880 --> 00:07:57.300
is that, in order to use the
Save to Wallet functionality,

00:07:57.300 --> 00:08:00.550
the Save to Wallet button would
need to have this information

00:08:00.550 --> 00:08:03.610
and post this information to
Google to uniquely identify

00:08:03.610 --> 00:08:05.220
your application.

00:08:05.220 --> 00:08:08.050
So list in here
all the URLS where

00:08:08.050 --> 00:08:11.400
you would host your application.

00:08:11.400 --> 00:08:17.840
And finally we have some
IDs, loyalty class ID,

00:08:17.840 --> 00:08:19.380
loyalty object ID.

00:08:19.380 --> 00:08:23.430
These are usually
used for debugging.

00:08:26.760 --> 00:08:30.760
I do a lot of debugging and
you see here I have 02 in front

00:08:30.760 --> 00:08:34.940
of it, so I change this a lot
so I can see which classes

00:08:34.940 --> 00:08:37.530
I'm modifying and which
objects I modifying.

00:08:37.530 --> 00:08:40.429
So these, you can leave them
as they are, or give them

00:08:40.429 --> 00:08:44.660
whatever names you
prefer, and then they

00:08:44.660 --> 00:08:48.810
would be listed in your
merchant dashboard.

00:08:48.810 --> 00:08:51.660
I will get to that
a little bit later.

00:08:51.660 --> 00:08:57.700
Once we have added and modified
all the values in here,

00:08:57.700 --> 00:09:03.150
and everything is
correctly set up,

00:09:03.150 --> 00:09:08.440
then we can go to
the next step, which

00:09:08.440 --> 00:09:12.590
is loading the sample in
Visual Studio and running it.

00:09:12.590 --> 00:09:15.970
So, I'll switch back
to the Visual Studio,

00:09:15.970 --> 00:09:19.850
and in this case, it looks like
we're ready to run the sample.

00:09:19.850 --> 00:09:26.680
One more thing that you should
pay attention to the first time

00:09:26.680 --> 00:09:31.320
you are reloading the
Quick Start sample,

00:09:31.320 --> 00:09:34.340
you may not have all the
assembly, all the library

00:09:34.340 --> 00:09:37.320
references, set up correctly.

00:09:37.320 --> 00:09:40.276
So in that case, so you would
go to Tools/Library Package

00:09:40.276 --> 00:09:48.810
Manager/Manage NuGet
Packages for Solution package

00:09:48.810 --> 00:09:51.600
In my case, probably,
it's all set up correctly,

00:09:51.600 --> 00:09:53.670
and I don't have to do anything.

00:09:53.670 --> 00:09:57.070
In case you need to
update the packages,

00:09:57.070 --> 00:10:00.440
you'll get a dialogue, which
says you have some missing

00:10:00.440 --> 00:10:06.950
packages, click Restore button
or something else to everything

00:10:06.950 --> 00:10:08.322
up to date.

00:10:08.322 --> 00:10:09.863
In this case, it
looks like I'm fine.

00:10:15.990 --> 00:10:16.800
I think I built it.

00:10:16.800 --> 00:10:17.780
It's all built up.

00:10:17.780 --> 00:10:20.950
Let's try to run the app.

00:10:20.950 --> 00:10:24.990
To run it you go to a Debug,
either Start Debugging or Start

00:10:24.990 --> 00:10:25.880
Without Debugging.

00:10:25.880 --> 00:10:26.885
Let's start debugging.

00:10:31.210 --> 00:10:37.800
And as a webserver we're using
the local asp.net development

00:10:37.800 --> 00:10:41.270
server, which runs
on local host,

00:10:41.270 --> 00:10:44.030
and this is a port number.

00:10:44.030 --> 00:10:46.580
So this is the
sample looks like.

00:10:46.580 --> 00:10:48.190
We have two steps.

00:10:48.190 --> 00:10:51.220
One, we provide two
buttons to insert

00:10:51.220 --> 00:10:53.640
the loyalty class
or an offer class.

00:10:53.640 --> 00:10:55.740
These are mostly for
debugging purposes.

00:10:55.740 --> 00:10:58.360
You will not have
them on your website.

00:10:58.360 --> 00:11:03.930
But are very good to
try to insert and test

00:11:03.930 --> 00:11:05.130
different classes.

00:11:05.130 --> 00:11:09.220
So, let's click on the first
one, insert the loyalty class.

00:11:09.220 --> 00:11:11.620
And as I mentioned
earlier, what this does,

00:11:11.620 --> 00:11:19.010
it will create a class into
you Google Wallet account,

00:11:19.010 --> 00:11:23.580
and then you can verify that
that class has been created,

00:11:23.580 --> 00:11:27.730
that how it looks like, if you
go to you merchant dashboard.

00:11:27.730 --> 00:11:31.566
So let's switch back to
the merchant dashboard,

00:11:31.566 --> 00:11:35.310
which I believe is here.

00:11:35.310 --> 00:11:37.810
And you can see the
loyalty class here,

00:11:37.810 --> 00:11:41.840
and you remember I mentioned
that I put a digit in front

00:11:41.840 --> 00:11:44.740
of the class so that it always
pops up at the top of the list.

00:11:44.740 --> 00:11:48.140
I have a lot of classes I've
been using for testing here.

00:11:48.140 --> 00:11:51.700
And this is the class
we just inserted.

00:11:51.700 --> 00:11:53.700
And if you click on
the preview button,

00:11:53.700 --> 00:11:55.500
you can also get
a lot of details

00:11:55.500 --> 00:12:02.365
about the various
objects inside here.

00:12:06.530 --> 00:12:09.530
So the same if we
insert a offer class,

00:12:09.530 --> 00:12:13.430
you can go back and verify
that this has been added,

00:12:13.430 --> 00:12:19.070
and then you can
quickly preview it.

00:12:19.070 --> 00:12:25.110
Now, step two is where
things get more interesting.

00:12:25.110 --> 00:12:30.430
If I hover over this Save
Card to Google button,

00:12:30.430 --> 00:12:32.510
you'll see that
it shows that I'm

00:12:32.510 --> 00:12:37.010
signed in as a demo
account called John Smith.

00:12:37.010 --> 00:12:42.640
And when I click
the button, your app

00:12:42.640 --> 00:12:47.670
will send you some
information back to Google,

00:12:47.670 --> 00:12:54.750
which add this loyalty card
to your Wallet account.

00:12:54.750 --> 00:12:57.210
So let's do that.

00:12:57.210 --> 00:12:58.260
That's quick.

00:12:58.260 --> 00:13:00.370
So now your loyalty
card has been saved,

00:13:00.370 --> 00:13:03.100
and you will have it
in your Wallet account,

00:13:03.100 --> 00:13:07.640
and we'll see it later on
when we continue the demo.

00:13:07.640 --> 00:13:09.480
Same thing with an offer.

00:13:09.480 --> 00:13:10.600
I like an offer.

00:13:10.600 --> 00:13:16.750
I want to get an the offer, so
we have this Get Coupon button.

00:13:16.750 --> 00:13:19.710
I click on it,
and now the coupon

00:13:19.710 --> 00:13:22.000
has been saved to my
Wallet, so wherever

00:13:22.000 --> 00:13:28.030
I go I can just look at the
phone, go to my saved coupons,

00:13:28.030 --> 00:13:28.680
and use it.

00:13:28.680 --> 00:13:30.600
Same with the loyalty cards.

00:13:30.600 --> 00:13:33.650
If I need to use
my loyalty points,

00:13:33.650 --> 00:13:36.700
or just the loyalty ID
when I make a purchase,

00:13:36.700 --> 00:13:38.940
I go to my phone and
I find it's all there.

00:13:42.300 --> 00:13:49.310
This concludes the step one
and step two parts of the demo.

00:13:49.310 --> 00:13:53.070
We learned how to create
and insert loyalty and offer

00:13:53.070 --> 00:13:57.910
classes and how to create
objects of that particular type

00:13:57.910 --> 00:14:00.430
and save them to your Wallet.

00:14:00.430 --> 00:14:04.500
Next, we will learn how
to create discoverables.

00:14:04.500 --> 00:14:06.400
So what are discoverables?

00:14:06.400 --> 00:14:09.100
Discoverables are
a way for consumers

00:14:09.100 --> 00:14:12.800
to find your program from
within the Google Wallet app.

00:14:12.800 --> 00:14:15.300
The Wallet app has a
very wide distribution,

00:14:15.300 --> 00:14:17.990
and this is a great
way for you to get

00:14:17.990 --> 00:14:21.180
in front of millions
of consumers.

00:14:21.180 --> 00:14:23.170
How do you create
a discoverable?

00:14:23.170 --> 00:14:26.730
I will switch back to your
Wallet Objects merchant

00:14:26.730 --> 00:14:33.750
dashboard, and on the left side
click on the Discoverable link.

00:14:33.750 --> 00:14:41.300
And in here you'll see
a list of variables

00:14:41.300 --> 00:14:43.770
that you have to
fill in that describe

00:14:43.770 --> 00:14:47.140
your particular program,
everything from name,

00:14:47.140 --> 00:14:50.890
URL, description, to
all kinds of logos,

00:14:50.890 --> 00:14:54.900
banners, to make sure
your program very

00:14:54.900 --> 00:14:58.370
descriptive and
appealing to consumers.

00:14:58.370 --> 00:15:02.440
Once all that information
is correctly entered,

00:15:02.440 --> 00:15:09.260
I will scroll down to the
end of the page, where

00:15:09.260 --> 00:15:12.150
you see Merchant
Callback Configuration.

00:15:12.150 --> 00:15:16.920
This is the actual website
where your web service

00:15:16.920 --> 00:15:19.280
API will be used.

00:15:19.280 --> 00:15:24.670
And in here you specify
the host, an HTTPS service,

00:15:24.670 --> 00:15:27.950
with one off HTTPS port.

00:15:27.950 --> 00:15:33.190
And inside the sample
you will fine the code

00:15:33.190 --> 00:15:36.730
that allows you to
use the service.

00:15:36.730 --> 00:15:40.420
This is the place where you
specify the URI endpoints where

00:15:40.420 --> 00:15:43.960
Google will send a sign-up
and linking information

00:15:43.960 --> 00:15:44.780
for new customers.

00:15:47.470 --> 00:15:51.200
And with that said, let's
continue doing some demo.

00:15:51.200 --> 00:15:54.585
So I'll pass on to
my colleague, Peng,

00:15:54.585 --> 00:15:58.464
who will show you how it
all appears on the phone.

00:15:58.464 --> 00:15:59.130
PENG YING: Cool.

00:15:59.130 --> 00:16:05.380
Alright, so let's take a look
at the latest Wallet app.

00:16:05.380 --> 00:16:10.400
I bring it up and I'm
actually on a loyalty already.

00:16:10.400 --> 00:16:12.720
It's also logged in
with G Wallet demo,

00:16:12.720 --> 00:16:18.320
on the same user that
Mihai was using in Chrome.

00:16:18.320 --> 00:16:21.170
I jump to the loyalty
page, and I already

00:16:21.170 --> 00:16:24.535
see the loyalty object
that was previously saved.

00:16:24.535 --> 00:16:27.820
I can also see the Offers
page to see the offer as well.

00:16:27.820 --> 00:16:29.650
In this case, it's
our demo offer,

00:16:29.650 --> 00:16:32.100
which is Baconrista Coffee.

00:16:32.100 --> 00:16:33.490
So, cool.

00:16:33.490 --> 00:16:36.640
If you take a little closer look
at what was saved, all the --

00:16:36.640 --> 00:16:38.500
man, that thing is colorful.

00:16:38.500 --> 00:16:42.970
So now, let's take a look at
how the discoverable works.

00:16:42.970 --> 00:16:44.370
I deleted my loyalty object.

00:16:44.370 --> 00:16:45.960
I'm gonna add a new program.

00:16:45.960 --> 00:16:49.950
In this case, because
currently the discoverable

00:16:49.950 --> 00:16:52.250
is in draft mode,
we can't find it

00:16:52.250 --> 00:16:53.934
in the list of
featured programs.

00:16:53.934 --> 00:16:55.850
So the way that we'll
have to find it is we'll

00:16:55.850 --> 00:16:57.558
have to click into
Add a Loyalty Program,

00:16:57.558 --> 00:16:59.430
and enter our merchant name.

00:16:59.430 --> 00:17:02.850
In this case, it's
Baconrista GDL.

00:17:02.850 --> 00:17:05.099
You see it comes up directly.

00:17:05.099 --> 00:17:08.308
So I can join as a new member.

00:17:08.308 --> 00:17:10.349
This account doesn't have
the phone number saved,

00:17:10.349 --> 00:17:12.265
but typically it would
be saved, so I wouldn't

00:17:12.265 --> 00:17:16.050
have to enter it
in again, 555-5555.

00:17:16.050 --> 00:17:18.680
Then I can just
check these boxes

00:17:18.680 --> 00:17:21.670
and create a new
loyalty account.

00:17:21.670 --> 00:17:25.510
So what's happening now
is that Google is sending

00:17:25.510 --> 00:17:28.490
a message with my
information to the endpoint

00:17:28.490 --> 00:17:31.520
that Mihai specified
and then what

00:17:31.520 --> 00:17:36.250
that endpoint does is
it reads that message,

00:17:36.250 --> 00:17:38.825
creates an object, and
then sends that object back

00:17:38.825 --> 00:17:39.325
to Google.

00:17:39.325 --> 00:17:42.610
Once Google gets that,
it then pushes the object

00:17:42.610 --> 00:17:44.890
to my mobile device,
associated with my account,

00:17:44.890 --> 00:17:50.161
so I can take a look at the
Baconrista rewards right here.

00:17:50.161 --> 00:17:50.660
Cool.

00:17:50.660 --> 00:17:52.260
So, that was a quick demo.

00:17:52.260 --> 00:17:53.990
And to go over how
everything works,

00:17:53.990 --> 00:17:57.530
and how all of the different
classes and things work,

00:17:57.530 --> 00:18:00.280
here's Mihai again to talk
a little bit more in-depth

00:18:00.280 --> 00:18:02.630
about the technical
details of the Quick Start.

00:18:02.630 --> 00:18:04.090
MIHAI IONESCU: Thank you, Peng.

00:18:04.090 --> 00:18:07.080
So now, let's look at some
of the most important files

00:18:07.080 --> 00:18:09.980
or the ones you
may need to modify.

00:18:09.980 --> 00:18:12.270
Looking at the
Solution Explorer,

00:18:12.270 --> 00:18:17.570
we will focus on the handlers
directory, the utils directory,

00:18:17.570 --> 00:18:25.350
the verticals directory, and
your app web page under app.js.

00:18:25.350 --> 00:18:27.710
Let's look at app.js.

00:18:27.710 --> 00:18:32.560
This is the JavaScript used to
generate your landing web page.

00:18:32.560 --> 00:18:34.650
And at the top,
we see that we'll

00:18:34.650 --> 00:18:39.385
use two handlers in here, the
insert handler and the JWT

00:18:39.385 --> 00:18:40.970
handler.

00:18:40.970 --> 00:18:46.030
The insert handler is
used to insert the loyalty

00:18:46.030 --> 00:18:47.450
class or the object class.

00:18:47.450 --> 00:18:51.810
When we click on the Insert
buttons, that's what happens.

00:18:51.810 --> 00:18:56.580
And the handler is implemented
under the handlers directory

00:18:56.580 --> 00:18:59.160
in the wobinserthandler file.

00:19:03.240 --> 00:19:12.530
The JWT handler is mapped
to the wobgenerateJWThandler

00:19:12.530 --> 00:19:16.080
under the handlers
directory, and it's

00:19:16.080 --> 00:19:19.755
used to generate the Save to
button, save to Wallet JWT.

00:19:23.050 --> 00:19:29.230
The javascript dynamically
inserts the JWT into the page.

00:19:32.940 --> 00:19:39.050
Next let's look at what
wobservicehandler, which

00:19:39.050 --> 00:19:44.240
is over here.

00:19:44.240 --> 00:19:50.260
And the wobservicehandler
receives API requests

00:19:50.260 --> 00:19:53.491
and responds with an approved
status and the object

00:19:53.491 --> 00:19:53.990
to insert.

00:19:56.580 --> 00:19:59.070
Next we have a utils
directory where

00:19:59.070 --> 00:20:02.260
we provide a lot
of helper functions

00:20:02.260 --> 00:20:05.190
to simplify your coding
and among those we

00:20:05.190 --> 00:20:08.960
have tools for generating
JSON web tokens.

00:20:08.960 --> 00:20:12.720
So it's a very handy
set of functions

00:20:12.720 --> 00:20:18.630
that you can use over and
over to simplify your work.

00:20:18.630 --> 00:20:21.300
And finally, the
verticals directory

00:20:21.300 --> 00:20:26.330
contains descriptions for
your loyalty or offer objects

00:20:26.330 --> 00:20:26.981
and classes.

00:20:26.981 --> 00:20:28.480
And let's have a
look at loyalty.cs.

00:20:31.840 --> 00:20:36.210
And in here we have the generate
loyalty object function,

00:20:36.210 --> 00:20:38.690
and you look at
this file and then

00:20:38.690 --> 00:20:41.030
look at the template
in our documentation

00:20:41.030 --> 00:20:45.090
and see which fields
you need to modify.

00:20:45.090 --> 00:20:51.600
For example, we have various
modules, text module data

00:20:51.600 --> 00:20:55.400
that I'm highlighting in here.

00:20:55.400 --> 00:20:58.220
Then down below
we have the links

00:20:58.220 --> 00:21:06.190
module data, which contains
membership and member data,

00:21:06.190 --> 00:21:07.840
and info module data.

00:21:07.840 --> 00:21:10.860
So, for all of these
modules, so you

00:21:10.860 --> 00:21:14.790
can look at the
online documentation

00:21:14.790 --> 00:21:17.300
to find out more about them.

00:21:17.300 --> 00:21:21.520
So now that you know
how everything works,

00:21:21.520 --> 00:21:25.241
go ahead and download the
demo, play with it, and let us

00:21:25.241 --> 00:21:25.990
know how it works.

00:21:25.990 --> 00:21:30.110
PENG YING: That concludes
the C Sharp Quick Start GDL.

00:21:30.110 --> 00:21:31.860
We hope you found
this video useful.

00:21:31.860 --> 00:21:34.290
It's just one and many
in a series of videos

00:21:34.290 --> 00:21:35.790
that we're doing
to help developers

00:21:35.790 --> 00:21:39.170
like yourself get started
with the Wallet Objects API.

00:21:39.170 --> 00:21:41.530
Be sure to check our GDL Page
at developers.google.com/

00:21:41.530 --> 00:21:42.030
live/wallet.

00:21:44.949 --> 00:21:45.990
And follow us on Google+.

00:21:45.990 --> 00:21:47.650
We're Google Wallet.

00:21:47.650 --> 00:21:50.025
And on Twitter,
@googlecommercedev.

00:21:50.025 --> 00:21:52.025
Thanks for joining us for
another week of Google

00:21:52.025 --> 00:21:54.740
Developers Live, and
see you next time.

