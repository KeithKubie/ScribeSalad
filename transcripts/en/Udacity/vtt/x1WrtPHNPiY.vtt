WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.000
Here is my solution.

00:00:02.000 --> 00:00:09.000
First need to calculate t and s such that n equals 2&lt;b&gt;t  s + 1.&lt;/b&gt;

00:00:09.000 --> 00:00:15.000
I've written a helper function to calculate t which factors out 2s

00:00:15.000 --> 00:00:17.000
to calculate the appropriate value of t.

00:00:17.000 --> 00:00:20.000
Then to calculate s we divide.

00:00:20.000 --> 00:00:24.000
N&lt;u&gt;tests is the number of tests needed to get the desired probability&lt;/u&gt;

00:00:24.000 --> 00:00:29.000
then in this loop I randomly pick an a between one and n

00:00:29.000 --> 00:00:31.000
and see if I've tried it before.

00:00:31.000 --> 00:00:36.000
If I haven't, I break out of the loop and add it to the side of things that I've tried.

00:00:36.000 --> 00:00:43.000
Then we run our first tests, which is to raise a to the power of s, mod in, and see if it's equal to 1.

00:00:43.000 --> 00:00:47.000
If that's true, we found an a and can continue to search.

00:00:47.000 --> 00:00:54.000
If it fails the first test, we try the second test, which is raising a to the power of 2^(j&lt;i&gt;s)&lt;/i&gt;

00:00:54.000 --> 00:00:57.000
for all j's between 0 and t.

00:00:57.000 --> 00:01:02.000
If it passes both tests for all randomly chosen values of a,

00:01:02.000 --> 99:59:59.000
we return True.

