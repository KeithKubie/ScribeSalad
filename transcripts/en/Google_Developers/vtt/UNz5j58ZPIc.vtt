WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:00.040
 

00:00:00.040 --> 00:00:01.290
Alexis Moussine-Pouchkine: Hello, everyone.

00:00:01.290 --> 00:00:06.594
We're here at Devoxx 2014, and
I'm here with Chet and-- wait,

00:00:06.594 --> 00:00:07.343
you're not Romain.

00:00:07.343 --> 00:00:08.670
CHET HAASE: Nick.

00:00:08.670 --> 00:00:09.970
NICK BUTCHER: Pourquoi?

00:00:09.970 --> 00:00:11.500
MALE SPEAKER: Oh, good, good.

00:00:11.500 --> 00:00:12.520
CHET HAASE: Croissant?

00:00:12.520 --> 00:00:17.040
MALE SPEAKER: And with Nick,
and you guys came out recently

00:00:17.040 --> 00:00:20.916
of the keynote that you did and
this was about material design.

00:00:20.916 --> 00:00:22.290
So people might
have heard of it,

00:00:22.290 --> 00:00:25.380
but why don't you tell us how
we got to material design, what

00:00:25.380 --> 00:00:29.107
problem is it trying to solve,
and why do developers even

00:00:29.107 --> 00:00:30.365
need to care about this?

00:00:30.365 --> 00:00:32.614
NICK BUTCHER: Well, let me
take a swing at this first.

00:00:32.614 --> 00:00:32.930
CHET HAASE: Yep.

00:00:32.930 --> 00:00:33.590
NICK BUTCHER: Yeah.

00:00:33.590 --> 00:00:34.820
Let's take it from the top.

00:00:34.820 --> 00:00:35.820
What is material design?

00:00:35.820 --> 00:00:40.680
So material design is Google's
attempt at providing a design

00:00:40.680 --> 00:00:43.710
language, I guess you could
call it, like a holistic design

00:00:43.710 --> 00:00:48.089
thing, to solve designing
for the range of platforms

00:00:48.089 --> 00:00:48.880
that are out there.

00:00:48.880 --> 00:00:50.910
So everyone is trying
to access your services

00:00:50.910 --> 00:00:53.920
from little tiny screens like
your watches, phones, tablets,

00:00:53.920 --> 00:00:57.430
TVs, cars, and whatever
else they end up

00:00:57.430 --> 00:01:01.680
putting some smarts into,
so we needed some way

00:01:01.680 --> 00:01:04.430
to make those experiences
kind of consistent

00:01:04.430 --> 00:01:06.540
so you can learn how to
use them on one screen

00:01:06.540 --> 00:01:07.980
and use it elsewhere.

00:01:07.980 --> 00:01:09.309
And that's material design.

00:01:09.309 --> 00:01:11.350
MALE SPEAKER: And that's
not just Android, right?

00:01:11.350 --> 00:01:13.334
This is trying to--

00:01:13.334 --> 00:01:14.375
NICK BUTCHER: Absolutely.

00:01:14.375 --> 00:01:15.084
Yeah, yeah.

00:01:15.084 --> 00:01:17.250
So not just a variety of
form factors, but different

00:01:17.250 --> 00:01:18.085
platforms as well.

00:01:18.085 --> 00:01:20.085
MALE SPEAKER: So Android
and the web, basically?

00:01:20.085 --> 00:01:20.470
NICK BUTCHER: Yeah.

00:01:20.470 --> 00:01:22.595
MALE SPEAKER: And Polymer
would be the project that

00:01:22.595 --> 00:01:24.560
addresses that in terms
of the implementation?

00:01:24.560 --> 00:01:24.820
CHET HAASE: Right.

00:01:24.820 --> 00:01:26.470
So in the keynote
today we were talking

00:01:26.470 --> 00:01:28.230
about both of those
platforms and saying

00:01:28.230 --> 00:01:31.390
what material design
is overall, what

00:01:31.390 --> 00:01:34.160
are the design factors
going into it and the things

00:01:34.160 --> 00:01:36.035
that we're going
for with the design,

00:01:36.035 --> 00:01:38.160
and then talking about the
specific implementations

00:01:38.160 --> 00:01:39.650
on both Polymer and Android.

00:01:39.650 --> 00:01:42.880
MALE SPEAKER: So before we get
to why developers should care

00:01:42.880 --> 00:01:46.890
about this and what it means
to them, how did we get there?

00:01:46.890 --> 00:01:49.832
I mean, you mentioned
it's not the first time

00:01:49.832 --> 00:01:50.790
we talked about themes.

00:01:50.790 --> 00:01:52.880
We were actually talking
about something similar

00:01:52.880 --> 00:01:54.300
in previous years here.

00:01:54.300 --> 00:01:57.470
So how does this
change, and talk to us

00:01:57.470 --> 00:01:59.449
about maybe Holo or
maybe about Kennedy on--

00:01:59.449 --> 00:02:00.490
NICK BUTCHER: Yeah, yeah.

00:02:00.490 --> 00:02:03.912
MALE SPEAKER: I mean, this
is a multi-year effort and--

00:02:03.912 --> 00:02:05.370
NICK BUTCHER: Yeah
this didn't just

00:02:05.370 --> 00:02:07.060
come down from the
mountain on a tablet

00:02:07.060 --> 00:02:08.370
saying here is material design.

00:02:08.370 --> 00:02:11.964
This has been an ongoing
kind of evaluation, I guess.

00:02:11.964 --> 00:02:14.630
So I guess if you kind of rewind
a couple of years, four or five

00:02:14.630 --> 00:02:17.500
years maybe, a lot of
products in Google,

00:02:17.500 --> 00:02:20.060
and other companies I think,
kind of evolved on their own.

00:02:20.060 --> 00:02:22.590
So you might have a team who
are building your Android app

00:02:22.590 --> 00:02:23.950
and a team who are
building the web app

00:02:23.950 --> 00:02:25.060
and a team who are
building whatever

00:02:25.060 --> 00:02:26.250
your iOS app [INAUDIBLE].

00:02:26.250 --> 00:02:29.250
And they always were kind of
like existing in isolation

00:02:29.250 --> 00:02:32.860
so we just evolved to this point
where all these experiences

00:02:32.860 --> 00:02:34.710
were their own things,
and they kind of

00:02:34.710 --> 00:02:37.780
weren't really coherent.

00:02:37.780 --> 00:02:39.930
So that was, you know,
across platforms.

00:02:39.930 --> 00:02:42.610
And the same between apps
even from one company.

00:02:42.610 --> 00:02:44.962
So even from Google, if you
use something like YouTube

00:02:44.962 --> 00:02:46.420
and then something
else like Gmail,

00:02:46.420 --> 00:02:48.000
it might not look
and feel the same.

00:02:48.000 --> 00:02:51.140
They have their own kind
of foibles and interaction

00:02:51.140 --> 00:02:53.520
patterns and so on so
you couldn't learn on one

00:02:53.520 --> 00:02:55.539
and then apply it to another.

00:02:55.539 --> 00:02:56.580
So you mentioned Kennedy.

00:02:56.580 --> 00:03:00.020
That was an initiative we
had, I think back in 2011,

00:03:00.020 --> 00:03:02.442
where Larry Page kind of
like set a mandate saying,

00:03:02.442 --> 00:03:03.400
hey, this is a problem.

00:03:03.400 --> 00:03:06.730
We need to kind of make our
properties more consistent.

00:03:06.730 --> 00:03:10.810
So we set about a
big kind of redesign,

00:03:10.810 --> 00:03:12.767
I guess, of updating all
of our web properties

00:03:12.767 --> 00:03:13.850
to look and feel the same.

00:03:13.850 --> 00:03:16.400
So that's when you got the
kind of lots more white space

00:03:16.400 --> 00:03:18.350
and big red buttons
saying Compose and so on.

00:03:18.350 --> 00:03:20.760
That was the Kennedy
look and feel,

00:03:20.760 --> 00:03:23.410
but that mostly applied
to the web properties.

00:03:23.410 --> 00:03:26.410
It didn't really apply to
some of the other things.

00:03:26.410 --> 00:03:30.000
Like at the same time, Android
was evolving its own Holo

00:03:30.000 --> 00:03:32.274
design language
so they're kind of

00:03:32.274 --> 00:03:33.690
like going in their
own direction.

00:03:33.690 --> 00:03:36.190
So I think material design
is like an evolution

00:03:36.190 --> 00:03:40.120
of that kind of Kennedy effort
to grow up and try and provide

00:03:40.120 --> 00:03:41.850
a kind of complete
design language

00:03:41.850 --> 00:03:43.760
for all the different platforms.

00:03:43.760 --> 00:03:47.660
MALE SPEAKER: So is
material design done?

00:03:47.660 --> 00:03:50.077
I mean, are we working just
on the implementation details?

00:03:50.077 --> 00:03:51.868
NICK BUTCHER: You guys
are done now, right?

00:03:51.868 --> 00:03:54.080
It's done-- let's say
the framework's finished?

00:03:54.080 --> 00:03:55.610
CHET HAASE: We're done for now.

00:03:55.610 --> 00:03:58.070
Is design ever complete?

00:03:58.070 --> 00:03:59.800
No, I think a lot
of the fundamentals

00:03:59.800 --> 00:04:02.350
are there in terms of
the design aspects,

00:04:02.350 --> 00:04:05.400
like what the consistent
approach that they have

00:04:05.400 --> 00:04:08.010
to these things are,
the fundamentals of we

00:04:08.010 --> 00:04:09.870
have the ideas of
paper and ink and how

00:04:09.870 --> 00:04:11.440
things interact with the user.

00:04:11.440 --> 00:04:14.630
And then the implementation,
sort of the V1 implementation

00:04:14.630 --> 00:04:16.810
of that and the
Lollipop, envisioning

00:04:16.810 --> 00:04:18.890
a lot of the
fundamentals, the plumbing

00:04:18.890 --> 00:04:20.899
layer of actually
making this stuff work.

00:04:20.899 --> 00:04:23.820
I think we can continue
to iterate over it,

00:04:23.820 --> 00:04:27.580
but those I would see is being
refinements on top of material

00:04:27.580 --> 00:04:30.629
design as opposed to
implementing other core pieces.

00:04:30.629 --> 00:04:32.670
MALE SPEAKER: So you've
been trying very hard not

00:04:32.670 --> 00:04:36.562
to use gibberish
from designer world.

00:04:36.562 --> 00:04:37.770
NICK BUTCHER: Designer speak.

00:04:37.770 --> 00:04:38.978
MALE SPEAKER: Designer speak.

00:04:38.978 --> 00:04:42.119
Maybe you can give us an
example of what that would be?

00:04:42.119 --> 00:04:42.910
NICK BUTCHER: Yeah.

00:04:42.910 --> 00:04:46.800
I think, if you look at
the spec, as we call it,

00:04:46.800 --> 00:04:50.480
if you go to
google.com/design/spec,

00:04:50.480 --> 00:04:54.200
there's this whole big
document detailing these rules

00:04:54.200 --> 00:04:57.069
of material design, these
organizing principles.

00:04:57.069 --> 00:04:58.610
And it uses quite
a lot of designer--

00:04:58.610 --> 00:05:00.026
I think it's focused
at designers.

00:05:00.026 --> 00:05:03.690
It says things like, "a
coherent design system,"

00:05:03.690 --> 00:05:07.417
and uses things like,
"rational uses of space."

00:05:07.417 --> 00:05:09.250
What was the one you
pulled me up on before?

00:05:09.250 --> 00:05:09.660
Using?

00:05:09.660 --> 00:05:10.250
CHET HAASE: Visual rhythm?

00:05:10.250 --> 00:05:11.670
NICK BUTCHER: Visual
rhythm, I think, yeah.

00:05:11.670 --> 00:05:12.710
So words like that.

00:05:12.710 --> 00:05:13.612
MALE SPEAKER: Right.

00:05:13.612 --> 00:05:14.695
So do I need to read that?

00:05:14.695 --> 00:05:16.310
I'm a developer.

00:05:16.310 --> 00:05:19.290
Don't get me wrong, I want to
have engaging apps and people

00:05:19.290 --> 00:05:21.110
to understand what
the app's supposed

00:05:21.110 --> 00:05:23.466
to do and not look around.

00:05:23.466 --> 00:05:24.840
I understand design
is important,

00:05:24.840 --> 00:05:26.674
but do I really need
to go through all that?

00:05:26.674 --> 00:05:28.798
NICK BUTCHER: We might have
different answers here.

00:05:28.798 --> 00:05:29.834
I say yes.

00:05:29.834 --> 00:05:31.000
CHET HAASE: I would say yes.

00:05:31.000 --> 00:05:32.376
NICK BUTCHER: I
think you're touching

00:05:32.376 --> 00:05:33.542
on a really important point.

00:05:33.542 --> 00:05:37.010
I think you get a much
better product when

00:05:37.010 --> 00:05:39.309
you have designers and
developers working close

00:05:39.309 --> 00:05:41.350
together and you have
these tight feedback loops.

00:05:41.350 --> 00:05:43.892
It shouldn't just be
like design happens here

00:05:43.892 --> 00:05:46.100
and it gets thrown over the
wall and then development

00:05:46.100 --> 00:05:47.490
tries to work out
what it actually means

00:05:47.490 --> 00:05:48.210
and develop something.

00:05:48.210 --> 00:05:50.876
I think you get a better product
when you work closely together,

00:05:50.876 --> 00:05:52.637
and I think working
closely together

00:05:52.637 --> 00:05:54.470
needs a shared vocabulary
so you're actually

00:05:54.470 --> 00:05:55.780
talking about the same thing.

00:05:55.780 --> 00:05:57.654
So, yes, it's
important to read it.

00:05:57.654 --> 00:05:59.070
You can laugh at
the kind of terms

00:05:59.070 --> 00:06:01.140
and the touchy-feely
concepts sometimes,

00:06:01.140 --> 00:06:03.120
but getting some
of the vocabulary

00:06:03.120 --> 00:06:05.094
to say, hey, what do
you mean by this thing?

00:06:05.094 --> 00:06:06.760
What are you trying
to actually do here?

00:06:06.760 --> 00:06:08.302
MALE SPEAKER: Well,
vocabulary's key.

00:06:08.302 --> 00:06:10.176
NICK BUTCHER: Yeah, I
think it helps in that.

00:06:10.176 --> 00:06:11.580
And I think vice versa.

00:06:11.580 --> 00:06:14.554
I think designers should peruse
the developer documentation

00:06:14.554 --> 00:06:16.970
and then try and understand
the limitations of what people

00:06:16.970 --> 00:06:18.845
are trying to build so
they know when to push

00:06:18.845 --> 00:06:20.800
and what's just not
possible and so on.

00:06:20.800 --> 00:06:22.860
I think it's got to
be a conversation.

00:06:22.860 --> 00:06:24.744
MALE SPEAKER: So maybe
let's get into some

00:06:24.744 --> 00:06:26.160
of the details for
the developers.

00:06:26.160 --> 00:06:28.270
So do you maybe want
to talk about Android

00:06:28.270 --> 00:06:30.310
and how some of
the main principles

00:06:30.310 --> 00:06:34.120
actually are implemented and
things that are changing?

00:06:34.120 --> 00:06:37.300
Is it just an evolution,
like, brand new APIs?

00:06:37.300 --> 00:06:41.560
This is the new material design
package and the backup APIs?

00:06:41.560 --> 00:06:42.380
How does that work?

00:06:42.380 --> 00:06:44.430
CHET HAASE: It's not
fundamentally new stuff.

00:06:44.430 --> 00:06:45.930
It's still standard
Android program.

00:06:45.930 --> 00:06:48.080
What we did was add
capabilities to the platform

00:06:48.080 --> 00:06:50.050
to handle things like
real time shadows.

00:06:50.050 --> 00:06:54.350
API is to handle opting
into those capabilities

00:06:54.350 --> 00:06:56.550
so if you want to actually
boost a view in [? Z ?]

00:06:56.550 --> 00:06:59.790
to give it real time shadows, we
added APIs for you to do that.

00:06:59.790 --> 00:07:02.390
 

00:07:02.390 --> 00:07:05.380
The way that I envision what
we did in the Toolkit team

00:07:05.380 --> 00:07:08.439
in this release was that we
looked at the design team

00:07:08.439 --> 00:07:10.730
sort of waving their hands
and saying, material design.

00:07:10.730 --> 00:07:13.620
We want all these sort of
general grand capabilities

00:07:13.620 --> 00:07:16.210
and this consistent design
language, blah, blah, blah.

00:07:16.210 --> 00:07:18.127
And then we would go in
and tease out the bits

00:07:18.127 --> 00:07:19.501
that that meant
for the platform.

00:07:19.501 --> 00:07:22.100
OK, when they're talking about
this, what they really mean is

00:07:22.100 --> 00:07:23.600
they need the
rendering system to be

00:07:23.600 --> 00:07:26.150
able to handle real time
shadows at 60 frames a second.

00:07:26.150 --> 00:07:28.108
When they're talking
about this, what they mean

00:07:28.108 --> 00:07:30.660
is they need the theming system
to be able to dynamically

00:07:30.660 --> 00:07:33.780
colorize assets so that
we can brand applications.

00:07:33.780 --> 00:07:35.660
And so then our
job in the release

00:07:35.660 --> 00:07:37.760
was to then implement
those capabilities

00:07:37.760 --> 00:07:39.960
and add those APIs
for a developer

00:07:39.960 --> 00:07:41.960
to then opt into
those capabilities

00:07:41.960 --> 00:07:44.380
in their applications.

00:07:44.380 --> 00:07:46.856
I think that was all I
was doing with that one.

00:07:46.856 --> 00:07:48.980
NICK BUTCHER: And I think
one of my favorite things

00:07:48.980 --> 00:07:51.560
about it is that I
think we've enabled

00:07:51.560 --> 00:07:54.510
a lot of backwards
compatibility behavior as well.

00:07:54.510 --> 00:07:55.593
MALE SPEAKER: Oh, exactly.

00:07:55.593 --> 00:07:57.160
I wanted to get to that.

00:07:57.160 --> 00:07:58.750
NICK BUTCHER: So there's some
awesome, awesome, awesome, new

00:07:58.750 --> 00:08:01.125
work in the framework to do
things like real time shadows

00:08:01.125 --> 00:08:03.910
and so on, but you can still
do a lot of the material

00:08:03.910 --> 00:08:06.886
stuff on all the
platforms as well.

00:08:06.886 --> 00:08:08.260
So I think we put
a lot of effort

00:08:08.260 --> 00:08:11.150
into things like-- the app
compat library, in particular,

00:08:11.150 --> 00:08:13.230
I think did a really
good job for helping

00:08:13.230 --> 00:08:14.712
you to build material UIs.

00:08:14.712 --> 00:08:17.045
So you can get this kind of
graceful degradation, right?

00:08:17.045 --> 00:08:18.375
You can then only
have a single design,

00:08:18.375 --> 00:08:20.833
because you don't want to have
to maintain two designs, two

00:08:20.833 --> 00:08:23.200
code paths, and
just have it kind

00:08:23.200 --> 00:08:25.970
of like do one thing on
a newer platform which

00:08:25.970 --> 00:08:27.930
might do fancier shadows.

00:08:27.930 --> 00:08:31.820
And it might fall back to
using a baked in background

00:08:31.820 --> 00:08:33.860
or using something
like card view,

00:08:33.860 --> 00:08:36.360
also in the support
library, which will give you

00:08:36.360 --> 00:08:39.001
the real shadow implementation
on a new Lollipop device.

00:08:39.001 --> 00:08:41.084
But then it'll give you a
reasonable approximation

00:08:41.084 --> 00:08:42.549
on an older device.

00:08:42.549 --> 00:08:44.636
So I really like the
way that that kind

00:08:44.636 --> 00:08:46.240
of backless
compatibility is being

00:08:46.240 --> 00:08:48.049
thought about when
making the new APIs.

00:08:48.049 --> 00:08:49.590
MALE SPEAKER: So as
part of Lollipop,

00:08:49.590 --> 00:08:53.490
a number of applications that
come with the system actually

00:08:53.490 --> 00:08:57.112
were rewritten, or upgraded,
to material design.

00:08:57.112 --> 00:08:58.195
NICK BUTCHER: All of them?

00:08:58.195 --> 00:08:58.910
All of them, I think.

00:08:58.910 --> 00:09:00.701
MALE SPEAKER: Any one
you want to point out

00:09:00.701 --> 00:09:02.680
or are these good
examples of things

00:09:02.680 --> 00:09:06.862
that should serve as
inspiration for developers?

00:09:06.862 --> 00:09:08.070
NICK BUTCHER: OK.

00:09:08.070 --> 00:09:10.450
So I think one of my favorites,
it's not an app, per se,

00:09:10.450 --> 00:09:11.810
but I think the system UI.

00:09:11.810 --> 00:09:14.590
I think the way that
Notifications work, especially

00:09:14.590 --> 00:09:16.679
on the Lock Screen,
I think is brilliant.

00:09:16.679 --> 00:09:18.845
I find it really fun where
you see the notifications

00:09:18.845 --> 00:09:20.210
on the lock screen,
and you can instantly

00:09:20.210 --> 00:09:22.139
expand them and get them
into different states

00:09:22.139 --> 00:09:23.930
and interact with the
action straight away.

00:09:23.930 --> 00:09:25.230
CHET HAASE: There's a lot
of subtle things, too,

00:09:25.230 --> 00:09:26.063
in your interaction.

00:09:26.063 --> 00:09:28.136
As you move the
shade up and down,

00:09:28.136 --> 00:09:30.510
you're seeing things sort of
subtly fade and move around.

00:09:30.510 --> 00:09:32.343
If you look really
closely, you can actually

00:09:32.343 --> 00:09:35.390
see the shadows
reacting in real time,

00:09:35.390 --> 00:09:37.649
because as you move things
around on the screen,

00:09:37.649 --> 00:09:40.190
they're changing their position
relative to the light source,

00:09:40.190 --> 00:09:42.360
the virtual light source
that's casting the shadows.

00:09:42.360 --> 00:09:45.210
But you see other subtle
things like animated icons

00:09:45.210 --> 00:09:48.340
actually moving around as you're
moving the shade up and down.

00:09:48.340 --> 00:09:51.080
Just a lot more rich interaction
of the user about what's

00:09:51.080 --> 00:09:53.179
actually going on in the system.

00:09:53.179 --> 00:09:53.970
NICK BUTCHER: Yeah.

00:09:53.970 --> 00:09:57.880
Also, I think the new
Play Newsstand application

00:09:57.880 --> 00:10:00.354
did some really,
really nice animations.

00:10:00.354 --> 00:10:01.270
Chet's favorite topic.

00:10:01.270 --> 00:10:01.978
CHET HAASE: Yeah.

00:10:01.978 --> 00:10:03.070
Activity transition stuff.

00:10:03.070 --> 00:10:04.445
MALE SPEAKER: Do
you want to talk

00:10:04.445 --> 00:10:05.850
about animations in general?

00:10:05.850 --> 00:10:07.010
CHET HAASE: I always want
to talk about animations.

00:10:07.010 --> 00:10:08.885
MALE SPEAKER: Yeah, I
know you do, but just--

00:10:08.885 --> 00:10:10.831
NICK BUTCHER: How
long do we have?

00:10:10.831 --> 00:10:13.565
MALE SPEAKER: You have 30
seconds, that's about it.

00:10:13.565 --> 00:10:17.010
But, no, seriously, again,
why should you have them?

00:10:17.010 --> 00:10:18.870
And why should you not
abuse them probably?

00:10:18.870 --> 00:10:22.280
CHET HAASE: So I
like animations,

00:10:22.280 --> 00:10:24.642
but mostly targeted towards
a specific reason, which

00:10:24.642 --> 00:10:26.600
is helping the user
understand what's going on.

00:10:26.600 --> 00:10:28.880
I think there's two
main uses of that.

00:10:28.880 --> 00:10:32.079
One is to highlight something
to the user of information

00:10:32.079 --> 00:10:33.120
they need to be aware of.

00:10:33.120 --> 00:10:35.415
So like a pulsating
button on the screen

00:10:35.415 --> 00:10:37.540
when they need to be aware
that this is the default

00:10:37.540 --> 00:10:39.710
action that's going
to take place.

00:10:39.710 --> 00:10:42.600
The thing that you're going
to see more of in this release

00:10:42.600 --> 00:10:44.490
is transitioning the users.

00:10:44.490 --> 00:10:46.980
So helping them
understand a flow

00:10:46.980 --> 00:10:49.971
through an otherwise very
complicated system of UIs,

00:10:49.971 --> 00:10:50.470
right?

00:10:50.470 --> 00:10:52.636
So as they go from window
to window or from activity

00:10:52.636 --> 00:10:55.790
to activity or fragment to
fragment in their application,

00:10:55.790 --> 00:10:59.550
you can be exposing them to
seriously complicated user

00:10:59.550 --> 00:11:00.090
interfaces.

00:11:00.090 --> 00:11:02.414
How can you help them
understand how they got here,

00:11:02.414 --> 00:11:03.830
where they came
from, what they're

00:11:03.830 --> 00:11:04.996
supposed to do about it now.

00:11:04.996 --> 00:11:07.570
And one of those ways
is by using animations

00:11:07.570 --> 00:11:08.800
to transition them.

00:11:08.800 --> 00:11:11.410
Not just pop that old UI
out and pop the new one

00:11:11.410 --> 00:11:13.890
in, but actually share
elements between the UIs

00:11:13.890 --> 00:11:16.440
so they understand what
their shared elements are

00:11:16.440 --> 00:11:18.925
and what happened to the
elements that no longer are

00:11:18.925 --> 00:11:21.702
there, what happened to the new
elements that just faded in.

00:11:21.702 --> 00:11:24.160
So that, I think, is the really
powerful use of animations.

00:11:24.160 --> 00:11:27.120
Not just to make things
look blingy on the screen,

00:11:27.120 --> 00:11:29.196
but to actually help the
user be more connected

00:11:29.196 --> 00:11:30.445
to the application experience.

00:11:30.445 --> 00:11:33.310
MALE SPEAKER: And how does that
fit into Lollipop specifically

00:11:33.310 --> 00:11:34.090
and the APIs and--

00:11:34.090 --> 00:11:36.290
CHET HAASE: So one
of the big new API

00:11:36.290 --> 00:11:38.560
areas that we enabled
was Activity Transitions.

00:11:38.560 --> 00:11:42.050
The idea in material design
of being able specifically

00:11:42.050 --> 00:11:45.020
to do these transitions so
that-- let's take an example.

00:11:45.020 --> 00:11:47.600
You're in a music application,
you have a list of albums,

00:11:47.600 --> 00:11:49.350
and you want to click
on one of the albums

00:11:49.350 --> 00:11:51.480
and then see the songs
associated with the album.

00:11:51.480 --> 00:11:53.104
Obviously you're
probably going to have

00:11:53.104 --> 00:11:55.810
similar artwork for the album
in both of those pages there,

00:11:55.810 --> 00:11:57.560
in both of those
activity windows,

00:11:57.560 --> 00:11:59.290
so as you click on
the album, maybe we

00:11:59.290 --> 00:12:01.540
can actually share that
element between them,

00:12:01.540 --> 00:12:03.710
and we can share
some text, as well.

00:12:03.710 --> 00:12:06.530
Whatever the shared elements are
between those two UIs and then

00:12:06.530 --> 00:12:10.070
fade in and out the other
elements that go away

00:12:10.070 --> 00:12:11.330
or come into being.

00:12:11.330 --> 00:12:14.670
The Activity Transitions API
builds on the Transitions API

00:12:14.670 --> 00:12:16.830
that we had in
KitKat, but makes it

00:12:16.830 --> 00:12:18.675
available for
overall activities.

00:12:18.675 --> 00:12:21.569
So now you can say, OK, when I
watch the following activity,

00:12:21.569 --> 00:12:23.360
here's the animation
that I want you to run

00:12:23.360 --> 00:12:25.193
and here are the shared
elements that you're

00:12:25.193 --> 00:12:27.830
going to automatically
animate into place for me.

00:12:27.830 --> 00:12:30.869
MALE SPEAKER: Do you wan
to talk about the theming?

00:12:30.869 --> 00:12:31.660
NICK BUTCHER: Yeah.

00:12:31.660 --> 00:12:33.960
MALE SPEAKER: I think I
love the idea of having

00:12:33.960 --> 00:12:35.932
all of that being
handled by a [INAUDIBLE].

00:12:35.932 --> 00:12:38.140
Do you want to tell us real
quick about how it works?

00:12:38.140 --> 00:12:38.790
NICK BUTCHER: The coloring zone?

00:12:38.790 --> 00:12:39.790
MALE SPEAKER: Yes, the coloring.

00:12:39.790 --> 00:12:40.080
NICK BUTCHER: Yeah.

00:12:40.080 --> 00:12:40.240
Yeah.

00:12:40.240 --> 00:12:40.450
Yeah.

00:12:40.450 --> 00:12:42.250
So for a long time
we've been talking

00:12:42.250 --> 00:12:45.110
about how you can use
color to have a branding

00:12:45.110 --> 00:12:47.732
and have your
identity, personality,

00:12:47.732 --> 00:12:49.190
in the application,
but it was kind

00:12:49.190 --> 00:12:50.730
of a pain in the
ass to implement.

00:12:50.730 --> 00:12:52.560
You kind of had to go to
these websites and input

00:12:52.560 --> 00:12:54.643
this in My Colors and
download a couple of hundred

00:12:54.643 --> 00:12:57.161
assets and XML files and dump
them into your app and so on.

00:12:57.161 --> 00:12:58.660
And if you wanted
a couple of colors

00:12:58.660 --> 00:13:00.070
and different looks
of the screen,

00:13:00.070 --> 00:13:01.153
you'd have to repeat that.

00:13:01.153 --> 00:13:04.202
So it was kind of a lot
of work for developers.

00:13:04.202 --> 00:13:06.660
So, yeah, the framework team
has done a huge amount of work

00:13:06.660 --> 00:13:09.590
to basically take grayscale
assets in the system,

00:13:09.590 --> 00:13:12.327
bake them into the system, and
then at run time tint them.

00:13:12.327 --> 00:13:14.160
So you just provide the
coloring information

00:13:14.160 --> 00:13:16.830
as simple attributes
in your theme,

00:13:16.830 --> 00:13:19.080
and we'll take care of doing
all the coloring for you,

00:13:19.080 --> 00:13:20.681
which is really, really cool.

00:13:20.681 --> 00:13:22.180
CHET HAASE: And
then, similarly, you

00:13:22.180 --> 00:13:23.941
can also tint
things at run time.

00:13:23.941 --> 00:13:25.440
So you can bake
them into your theme

00:13:25.440 --> 00:13:27.925
and say, here's what I want
my overall theme to look like.

00:13:27.925 --> 00:13:29.300
Here's the colors
that you should

00:13:29.300 --> 00:13:30.850
use for my overall application.

00:13:30.850 --> 00:13:32.825
But let's say you go
into some subactivity

00:13:32.825 --> 00:13:34.420
in your application,
and you want

00:13:34.420 --> 00:13:36.100
this screen to be
colorized according

00:13:36.100 --> 00:13:38.090
to the information
that's in that bitmap,

00:13:38.090 --> 00:13:40.506
then you'd go to something
like the Palette Library that's

00:13:40.506 --> 00:13:42.420
now in Support
Library in Lollipop,

00:13:42.420 --> 00:13:44.690
and you'd extract
information from bitmap

00:13:44.690 --> 00:13:46.610
to get certain dominate
colors, and then

00:13:46.610 --> 00:13:48.800
you can dynamically tint
the assets along the way.

00:13:48.800 --> 00:13:51.020
So not in your theme,
because this is at runtime,

00:13:51.020 --> 00:13:53.280
but dynamically
actually call Set Tint

00:13:53.280 --> 00:13:55.655
and say, use this color for
the current background color.

00:13:55.655 --> 00:13:57.154
NICK BUTCHER: A
good example of that

00:13:57.154 --> 00:13:59.860
is I think the Contacts app on
Lollipop where I think we just

00:13:59.860 --> 00:14:04.480
launched the new SMS messaging
app for other devices as well,

00:14:04.480 --> 00:14:06.757
and that's kind of
like a utility app.

00:14:06.757 --> 00:14:08.340
It doesn't really
have a strong brand,

00:14:08.340 --> 00:14:10.112
so it kind of gets
itself out of the way

00:14:10.112 --> 00:14:11.778
and just picks a color
from the contact.

00:14:11.778 --> 00:14:14.680
So your contact, their photo, it
will pick out a distinct color,

00:14:14.680 --> 00:14:17.040
and it will colorize
all the icons and so on.

00:14:17.040 --> 00:14:19.470
So you get this kind of like
immersive kind of rich feel.

00:14:19.470 --> 00:14:20.949
Like each contact
feels different.

00:14:20.949 --> 00:14:22.740
By glancing at it, you
get a different kind

00:14:22.740 --> 00:14:25.090
of feeling, which is
really, really a rich UI.

00:14:25.090 --> 00:14:26.024
I like it.

00:14:26.024 --> 00:14:26.960
MALE SPEAKER: Great.

00:14:26.960 --> 00:14:30.940
So as Lollipop is being
shipped to a number of devices

00:14:30.940 --> 00:14:33.740
as we speak, what should
developers do now?

00:14:33.740 --> 00:14:36.170
I mean, should they be
worried that their app's going

00:14:36.170 --> 00:14:40.402
to be obsolete and it will
show real soon because there's

00:14:40.402 --> 00:14:41.110
a big difference?

00:14:41.110 --> 00:14:43.660
Or should they
gradually upgrade,

00:14:43.660 --> 00:14:46.152
and then what resources
should they be looking at?

00:14:46.152 --> 00:14:48.110
NICK BUTCHER: Yeah, this
is an interesting one,

00:14:48.110 --> 00:14:50.400
because it's an
evaluation of Holo.

00:14:50.400 --> 00:14:51.900
But it looks quite
different to Holo

00:14:51.900 --> 00:14:53.566
so it's going to be
quite hard, I think,

00:14:53.566 --> 00:14:55.949
to implement half
your app in material

00:14:55.949 --> 00:14:57.490
and half your app
in an older design.

00:14:57.490 --> 00:14:59.000
So I think it's going
to be a kind of thing

00:14:59.000 --> 00:15:01.330
where you take your time
and sit back and work out

00:15:01.330 --> 00:15:02.026
the major wins.

00:15:02.026 --> 00:15:03.400
Like how do we
adopt the visuals,

00:15:03.400 --> 00:15:06.250
and then how do we use
the idea of services

00:15:06.250 --> 00:15:08.407
in our UI to get the
right shadows and so on.

00:15:08.407 --> 00:15:10.490
CHET HAASE: And then
implementing more animations.

00:15:10.490 --> 00:15:13.470
But I think there is a
sliding scale of activity

00:15:13.470 --> 00:15:16.420
that they could do
in their activities.

00:15:16.420 --> 00:15:19.559
In terms of, OK, so first thing
is you opt into the theme.

00:15:19.559 --> 00:15:22.100
If you're only running on L,
you opt into the material theme,

00:15:22.100 --> 00:15:23.500
and you get a bunch
of stuff for free.

00:15:23.500 --> 00:15:25.000
If you're using the
Support Library,

00:15:25.000 --> 00:15:26.970
you opt into the
app compat theme.

00:15:26.970 --> 00:15:28.600
And, again, when
you're running on L,

00:15:28.600 --> 00:15:31.620
then you would get all the
material theme stuff for free,

00:15:31.620 --> 00:15:34.310
and that's going to give you
the standard widgets and colors,

00:15:34.310 --> 00:15:35.790
and then you can build
on that from there.

00:15:35.790 --> 00:15:37.430
You can say, well,
which of my assets

00:15:37.430 --> 00:15:39.324
looks slightly out of
place in the new world?

00:15:39.324 --> 00:15:40.990
What do I want to do
about those assets?

00:15:40.990 --> 00:15:42.880
What animations can
I use so I no longer

00:15:42.880 --> 00:15:46.779
have jump cut experiences
in the user flow?

00:15:46.779 --> 00:15:47.570
NICK BUTCHER: Yeah.

00:15:47.570 --> 00:15:49.320
So I'd say now is the
right time to start

00:15:49.320 --> 00:15:51.390
working on your material
app, because I guess

00:15:51.390 --> 00:15:52.660
there's going to be
an expectation bar.

00:15:52.660 --> 00:15:54.284
When users get Lollipop
on their device

00:15:54.284 --> 00:15:57.453
and they start seeing the smooth
animations and the subtle use

00:15:57.453 --> 00:15:59.870
of the shadows, it's going to
raise their expectation bar.

00:15:59.870 --> 00:16:02.036
Like, this is what an app
should look and feel like.

00:16:02.036 --> 00:16:04.250
So I say definitely developers
should get on it now.

00:16:04.250 --> 00:16:08.370
MALE SPEAKER: And with compat
libraries and frameworks

00:16:08.370 --> 00:16:11.590
that existed before, if
you're not targeting L,

00:16:11.590 --> 00:16:13.620
you can still pretty
much do almost all of it.

00:16:13.620 --> 00:16:16.710
It's probably harder,
but it's not impossible

00:16:16.710 --> 00:16:18.860
if you really want to
get to that look at feel.

00:16:18.860 --> 00:16:20.340
NICK BUTCHER: You can get
a lot of the way there.

00:16:20.340 --> 00:16:20.660
MALE SPEAKER: OK.

00:16:20.660 --> 00:16:22.550
NICK BUTCHER: As for resources,
as to where they should go.

00:16:22.550 --> 00:16:23.341
MALE SPEAKER: Yeah.

00:16:23.341 --> 00:16:27.007
NICK BUTCHER: Yeah, on our
develop site, so d.android.com,

00:16:27.007 --> 00:16:28.090
click through to the blog.

00:16:28.090 --> 00:16:30.250
There's been a series of
posts about implementing

00:16:30.250 --> 00:16:31.480
material assign of late.

00:16:31.480 --> 00:16:33.240
And also under the
training section

00:16:33.240 --> 00:16:36.680
there's a section on
implementing material design

00:16:36.680 --> 00:16:37.470
and so on.

00:16:37.470 --> 00:16:38.178
MALE SPEAKER: OK.

00:16:38.178 --> 00:16:41.770
So all developers should
learn, probably, about it.

00:16:41.770 --> 00:16:42.370
Read this.

00:16:42.370 --> 00:16:45.900
I haven't read it, I'll
be honest, but I will.

00:16:45.900 --> 00:16:49.610
And everybody should just
probably try Lollipop as a user

00:16:49.610 --> 00:16:52.049
and get inspired and
start building for it.

00:16:52.049 --> 00:16:53.590
CHET HAASE: Enter
the material world.

00:16:53.590 --> 00:16:55.215
MALE SPEAKER: Enter
the material world?

00:16:55.215 --> 00:16:56.240
Oh, got it.

00:16:56.240 --> 00:16:57.790
Cheers, everyone.

00:16:57.790 --> 00:17:01.746
 

