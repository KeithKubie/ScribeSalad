WEBVTT
Kind: captions
Language: en

00:00:00.340 --> 00:00:00.580
MARC COHEN: OK.

00:00:00.580 --> 00:00:02.570
Why don't we get started?

00:00:02.570 --> 00:00:03.390
Welcome.

00:00:03.390 --> 00:00:07.990
This is a session about
Google Cloud Storage.

00:00:07.990 --> 00:00:10.500
We're going to try to
make this a regular

00:00:10.500 --> 00:00:11.660
Office Hours session.

00:00:11.660 --> 00:00:15.680
And so the idea here will be
to share a quick tech talk,

00:00:15.680 --> 00:00:19.020
which I'll present in a moment,
and to give you guys a

00:00:19.020 --> 00:00:21.890
chance to ask any questions
you might have.

00:00:21.890 --> 00:00:25.970
We've got a Moderator, a list of
questions that people have

00:00:25.970 --> 00:00:28.720
already submitted things to.

00:00:28.720 --> 00:00:32.280
And we also have a Chat
window in the Hangout.

00:00:32.280 --> 00:00:38.950
So if you see that little Chat
button, you can open that up

00:00:38.950 --> 00:00:40.730
to submit your questions
as well.

00:00:40.730 --> 00:00:43.335
I want to introduce
Ville Aikas.

00:00:43.335 --> 00:00:44.810
He's on the Hangout with us.

00:00:44.810 --> 00:00:48.260
Ville is the technical lead
for the Cloud Storage

00:00:48.260 --> 00:00:49.180
Engineering Team.

00:00:49.180 --> 00:00:50.569
VILLE AIKAS: Hi, guys.

00:00:50.569 --> 00:00:51.819
Welcome.

00:00:53.810 --> 00:00:55.420
MARC COHEN: If you have
questions and you want to send

00:00:55.420 --> 00:00:58.340
them in the Chat window, Ville
will be taking a look at that

00:00:58.340 --> 00:01:01.788
as well as helping me out with
any live questions you have.

00:01:04.970 --> 00:01:05.310
OK.

00:01:05.310 --> 00:01:05.960
Let's start.

00:01:05.960 --> 00:01:09.825
Let me share my screen here.

00:01:18.550 --> 00:01:22.580
OK, is everyone seeing the slide
that I have here that

00:01:22.580 --> 00:01:24.560
says Google Cloud Storage,
a title slide?

00:01:28.980 --> 00:01:30.540
OK.

00:01:30.540 --> 00:01:35.370
So as I said, the agenda is 30
minutes on quick tech talk and

00:01:35.370 --> 00:01:41.000
then Q&amp;A. The tech talk topic
will be CNAME Redirection and

00:01:41.000 --> 00:01:42.190
Website Configuration.

00:01:42.190 --> 00:01:45.070
Those are really two different
sub-features, but they go

00:01:45.070 --> 00:01:47.010
together nicely.

00:01:47.010 --> 00:01:49.280
So we'll try to cover
both of those.

00:01:49.280 --> 00:01:50.700
Start with a little bit
of terminology.

00:01:50.700 --> 00:01:54.690
So Google Cloud Storage is
Google's way of making our

00:01:54.690 --> 00:01:57.050
internal storage infrastructure
available for

00:01:57.050 --> 00:01:58.970
application developers.

00:01:58.970 --> 00:02:02.130
A lot of people often confuse it
with Google Drive, which is

00:02:02.130 --> 00:02:04.720
more of a consumer cloud
storage capability.

00:02:04.720 --> 00:02:05.980
So there are two different
products.

00:02:05.980 --> 00:02:07.590
And we're not talking about
Google Drive today.

00:02:07.590 --> 00:02:10.789
We're talking about Google
Cloud Storage.

00:02:10.789 --> 00:02:13.230
Within Google Cloud Storage,
we divide up the world into

00:02:13.230 --> 00:02:14.260
buckets and objects.

00:02:14.260 --> 00:02:15.960
So buckets are object
containers.

00:02:15.960 --> 00:02:18.570
They're essentially somewhat
like folders or directories,

00:02:18.570 --> 00:02:21.970
if you're familiar with
those concepts.

00:02:21.970 --> 00:02:24.630
And objects themselves
are the contents.

00:02:24.630 --> 00:02:26.880
So they're kind of like files
in a file system.

00:02:26.880 --> 00:02:31.710
And the URLs shown here are
depicting the syntax you would

00:02:31.710 --> 00:02:34.620
use to specify a bucket
or an object,

00:02:34.620 --> 00:02:36.910
respectively, using a URL.

00:02:36.910 --> 00:02:40.410
And one of the nice features of
Cloud Storage is that when

00:02:40.410 --> 00:02:42.920
you create these resources,
you can programmatically

00:02:42.920 --> 00:02:43.590
access them.

00:02:43.590 --> 00:02:47.400
But you can also access them
with HTTP by pasting a URL

00:02:47.400 --> 00:02:49.970
into your standard
web browser.

00:02:49.970 --> 00:02:52.830
And this is giving an example
of what the URLs would look

00:02:52.830 --> 00:02:56.630
like for a bucket
and an object.

00:02:56.630 --> 00:02:58.160
I have this notion
of directories.

00:02:58.160 --> 00:03:01.630
And it's a little bit tricky
because, technically, the

00:03:01.630 --> 00:03:04.510
storage subsystem is a two-level
level hierarchy,

00:03:04.510 --> 00:03:06.470
simply buckets and objects.

00:03:06.470 --> 00:03:08.620
And the notion of a
directory in this

00:03:08.620 --> 00:03:10.370
context is purely abstract.

00:03:10.370 --> 00:03:15.060
So there's not an actual formal
directory or folder in

00:03:15.060 --> 00:03:15.590
the system.

00:03:15.590 --> 00:03:18.860
But rather, if you created an
object with a slash-delimited

00:03:18.860 --> 00:03:23.790
name, sometimes we think of
those intermediate nodes in

00:03:23.790 --> 00:03:27.890
the name as directories because
they look like file

00:03:27.890 --> 00:03:28.730
system directories.

00:03:28.730 --> 00:03:29.670
They're technically not.

00:03:29.670 --> 00:03:33.790
So if you look at the second
URL there, the

00:03:33.790 --> 00:03:38.080
storage.googleap
is.com/bucket/directory/object,

00:03:38.080 --> 00:03:43.450
that's actually the name of
an object whose name is

00:03:43.450 --> 00:03:44.830
directory/object.

00:03:44.830 --> 00:03:47.380
That compound name is the
object's name, and then bucket

00:03:47.380 --> 00:03:48.630
is the container.

00:03:51.170 --> 00:03:55.330
Next we have the CNAMEs.

00:03:55.330 --> 00:03:58.710
And so CNAMEs are a
special type of

00:03:58.710 --> 00:04:01.410
record in the DNS system.

00:04:01.410 --> 00:04:04.780
And CNAMEs are used to alias
one name to another.

00:04:04.780 --> 00:04:10.010
So when you do DNS lookup, if
the name you're looking up has

00:04:10.010 --> 00:04:12.390
an alias, you'll get back,
depending on the

00:04:12.390 --> 00:04:14.460
configuration, the
CNAME alias.

00:04:14.460 --> 00:04:18.970
And then you can resolve the
alias name to find the actual

00:04:18.970 --> 00:04:19.529
destination.

00:04:19.529 --> 00:04:21.180
So it's basically a
way of redirecting

00:04:21.180 --> 00:04:22.810
from one name to another.

00:04:22.810 --> 00:04:24.760
We'll talk about why you might
want to do that in a second.

00:04:24.760 --> 00:04:28.940
The last definition here
is static websites.

00:04:28.940 --> 00:04:31.480
And these are websites
that have no

00:04:31.480 --> 00:04:33.550
active server-side logic.

00:04:33.550 --> 00:04:38.780
So if you're used to thinking
about PHP or Python or Pearl

00:04:38.780 --> 00:04:43.820
or Java probably more likely
doing the active runtime logic

00:04:43.820 --> 00:04:47.120
of templatizing or doing
database lookups, or something

00:04:47.120 --> 00:04:51.150
active when you're fetching
pages, static web pages are

00:04:51.150 --> 00:04:53.660
those that don't actually do
anything on the server side.

00:04:53.660 --> 00:04:56.470
It doesn't mean that they're
totally static in the sense

00:04:56.470 --> 00:04:58.690
that they're not really
doing anything.

00:04:58.690 --> 00:05:04.120
A lot of websites can do
client-side dynamic things

00:05:04.120 --> 00:05:05.230
that are quite elaborate.

00:05:05.230 --> 00:05:10.480
And we'll see an example of a
page like that or really a

00:05:10.480 --> 00:05:12.365
site like that in
a few minutes.

00:05:15.670 --> 00:05:19.400
So CNAME redirection, why would
you want to do that?

00:05:19.400 --> 00:05:23.730
It enables you to associate
names with your storage

00:05:23.730 --> 00:05:27.180
objects that are more natural
and more meaningful.

00:05:27.180 --> 00:05:31.040
So by default, you can create
resources in Google Cloud

00:05:31.040 --> 00:05:35.780
Storage which are accessible
through this URI--

00:05:35.780 --> 00:05:38.320
storage.googleapis.com.

00:05:38.320 --> 00:05:41.960
And so you can qualify your
bucket to be meaningful to

00:05:41.960 --> 00:05:46.440
your particular company or your
application, or however

00:05:46.440 --> 00:05:48.020
you want to name the bucket.

00:05:48.020 --> 00:05:50.160
But at the end of the day, you
would end up giving out these

00:05:50.160 --> 00:05:53.420
URLs that are vectored off of
storage.googleapis.com.

00:05:53.420 --> 00:05:56.820
And you might prefer to have
the resources be named with

00:05:56.820 --> 00:05:58.900
your own company's
domain name.

00:05:58.900 --> 00:06:02.770
And that's exactly what CNAME
redirection lets you do,

00:06:02.770 --> 00:06:06.560
create your URL like the first
example there, like

00:06:06.560 --> 00:06:10.610
my.company.com, slash, whatever
resource, instead of

00:06:10.610 --> 00:06:14.210
having to use the Google API's
dot-com domain as the

00:06:14.210 --> 00:06:17.515
root of your path.

00:06:17.515 --> 00:06:20.990
And by the way, if anybody has
questions as we're going

00:06:20.990 --> 00:06:23.350
along, feel free to
just jump in.

00:06:23.350 --> 00:06:25.160
And we have a small enough
group here that

00:06:25.160 --> 00:06:27.740
that should be fine.

00:06:27.740 --> 00:06:30.900
In a nutshell, the procedure
for using this CNAME

00:06:30.900 --> 00:06:34.370
redirection feature is to obtain
a domain name if you

00:06:34.370 --> 00:06:36.580
don't already have one.

00:06:36.580 --> 00:06:39.530
You need to go through a few
steps to verify ownership of

00:06:39.530 --> 00:06:40.290
the domain.

00:06:40.290 --> 00:06:44.690
So that basically entails
proving to Google that you

00:06:44.690 --> 00:06:47.710
actually have the rights
to that domain name.

00:06:47.710 --> 00:06:53.140
And the reason there is,
obviously we can't let anybody

00:06:53.140 --> 00:06:57.260
have ownership of buckets in
the name space of somebody

00:06:57.260 --> 00:06:59.170
else who might actually
be the rightful owner

00:06:59.170 --> 00:07:00.500
of that domain name.

00:07:00.500 --> 00:07:01.760
And so there are
three different

00:07:01.760 --> 00:07:02.670
ways you can do that.

00:07:02.670 --> 00:07:03.970
I won't go into the
details here.

00:07:03.970 --> 00:07:12.230
But the easiest one entails
serving a file with a

00:07:12.230 --> 00:07:15.350
particular value on the website
associated with the

00:07:15.350 --> 00:07:17.230
domain name in question.

00:07:17.230 --> 00:07:19.690
And that proves that you
actually have ownership,

00:07:19.690 --> 00:07:24.810
because you were able to save
that file at that URL.

00:07:24.810 --> 00:07:28.760
And then after you verify
ownership of the domain name,

00:07:28.760 --> 00:07:33.410
you would configure the DNS
directory system to actually

00:07:33.410 --> 00:07:38.690
have the CNAME record, which is
aliasing your domain name

00:07:38.690 --> 00:07:42.590
to this pattern, this
c.storage.googleapis.com.

00:07:45.290 --> 00:07:49.900
So that's a special URL that
gets routed into Google that's

00:07:49.900 --> 00:07:53.241
specifically there to do the
right thing with mapping the

00:07:53.241 --> 00:07:58.720
CNAME into the resource
relative to

00:07:58.720 --> 00:07:59.970
Google's name space.

00:08:03.020 --> 00:08:06.640
With that, users can then use
your company names, like I

00:08:06.640 --> 00:08:07.480
mentioned earlier.

00:08:07.480 --> 00:08:11.590
And you can advertise your
resources in a way that's

00:08:11.590 --> 00:08:12.300
really natural.

00:08:12.300 --> 00:08:15.200
It looks like it's in your own
website rather than in

00:08:15.200 --> 00:08:18.560
Google's website space.

00:08:18.560 --> 00:08:22.080
One caveat to know about is
that CNAME redirection is

00:08:22.080 --> 00:08:25.400
supported only for
HTTP, not HTTPS.

00:08:25.400 --> 00:08:30.210
So question?

00:08:33.230 --> 00:08:35.730
We're up to 16 viewers,
which is great.

00:08:35.730 --> 00:08:36.600
I'll just repeat.

00:08:36.600 --> 00:08:45.660
If anybody on the call wants to
add questions, feel free to

00:08:45.660 --> 00:08:46.590
in the Chat window.

00:08:46.590 --> 00:08:49.210
And also if you're live
streaming via

00:08:49.210 --> 00:08:52.550
YouTube, there is a--

00:08:52.550 --> 00:08:54.340
actually, one thing I didn't
mention, if you look at the

00:08:54.340 --> 00:08:57.020
very first slide, these slides
are available right now

00:08:57.020 --> 00:09:02.230
through
tinyurl..com/gcs-office-hours.

00:09:02.230 --> 00:09:05.410
So if you'd like to follow along
with the slides, you're

00:09:05.410 --> 00:09:08.170
welcome to.

00:09:08.170 --> 00:09:17.570
And we also have a moderated
question queue,

00:09:17.570 --> 00:09:18.340
which is down here.

00:09:18.340 --> 00:09:22.170
So the page that you came in on,
either to livestream the

00:09:22.170 --> 00:09:25.370
video or to join the Hangout,
if you scroll down to the

00:09:25.370 --> 00:09:28.180
bottom, you'll see a moderated
set of questions.

00:09:28.180 --> 00:09:29.730
So feel free to post
there as well.

00:09:29.730 --> 00:09:33.600
And we'll try to get to as many
of those as we can in the

00:09:33.600 --> 00:09:36.440
second half of the talk.

00:09:36.440 --> 00:09:38.870
Any questions before
I pick up again?

00:09:45.270 --> 00:09:46.090
Let's zip ahead here.

00:09:46.090 --> 00:09:48.100
So we covered CNAME
redirection.

00:09:48.100 --> 00:09:49.420
And I'm actually going
to show you an

00:09:49.420 --> 00:09:51.430
example of that shortly.

00:09:51.430 --> 00:09:54.260
But now I would like to switch
gears to website

00:09:54.260 --> 00:09:55.590
configuration.

00:09:55.590 --> 00:09:58.020
And so what website
configuration?

00:09:58.020 --> 00:10:00.730
It's basically a feature that
we've added recently that

00:10:00.730 --> 00:10:03.680
gives you the ability to serve
an entire website directly

00:10:03.680 --> 00:10:05.600
from Google Cloud Storage.

00:10:05.600 --> 00:10:07.260
Why is this useful?

00:10:07.260 --> 00:10:09.230
Why would you care about this?

00:10:09.230 --> 00:10:10.040
There are few reasons.

00:10:10.040 --> 00:10:14.210
One is that dynamic logic
in web applications is

00:10:14.210 --> 00:10:17.040
increasingly client-side
based.

00:10:17.040 --> 00:10:20.010
And so you can do some very
cool things purely in

00:10:20.010 --> 00:10:24.340
JavaScript without having to
do much work at all, having

00:10:24.340 --> 00:10:26.920
essentially a static server-side
component.

00:10:26.920 --> 00:10:29.720
And in fact, it's a nice pattern
for building your web

00:10:29.720 --> 00:10:33.240
applications because it scales
very well, because you're

00:10:33.240 --> 00:10:38.260
harnessing the computing
capacity of the clients rather

00:10:38.260 --> 00:10:42.090
than having to multiply capacity
to serve a number of

00:10:42.090 --> 00:10:45.410
users on a small
set of servers.

00:10:45.410 --> 00:10:47.980
Some websites just happen
to be very simple.

00:10:47.980 --> 00:10:50.300
If you're an App Engine user,
for example, and you've ever

00:10:50.300 --> 00:10:54.250
wanted to build a small app
that just serves up some

00:10:54.250 --> 00:10:57.820
relatively simple content and
you wondered why do I have to

00:10:57.820 --> 00:11:00.760
build a whole application
just to do this?

00:11:00.760 --> 00:11:01.970
Well, you don't have
to anymore.

00:11:01.970 --> 00:11:05.400
And this feature I'm talking
about is a perfect alternative

00:11:05.400 --> 00:11:07.300
for that type of task.

00:11:07.300 --> 00:11:10.070
It's ideal for caching of
read-mostly websites.

00:11:10.070 --> 00:11:13.320
So if you have something like a
blog where you might post an

00:11:13.320 --> 00:11:16.770
article once a day or something
once a few hours or

00:11:16.770 --> 00:11:20.050
something on that order,
this is a great way

00:11:20.050 --> 00:11:21.200
to cache that site.

00:11:21.200 --> 00:11:24.870
So anytime the content changes,
you can post a copy

00:11:24.870 --> 00:11:27.970
of the entire blog or the
website or just the changed

00:11:27.970 --> 00:11:32.530
components to Google Cloud
Storage and then serve that up

00:11:32.530 --> 00:11:34.630
really nicely without having--

00:11:34.630 --> 00:11:37.900
I'll explain what I mean by why
it's great to serve that

00:11:37.900 --> 00:11:40.200
up so well in the next bullet.

00:11:40.200 --> 00:11:42.840
But before I move to that, I
just want to mention that

00:11:42.840 --> 00:11:46.810
there are WordPress plug-ins out
there which make this sort

00:11:46.810 --> 00:11:53.660
of thing easy for caching
blogs to offsite readers

00:11:53.660 --> 00:11:57.620
basically or offsite
storage servers.

00:11:57.620 --> 00:12:00.280
And if anyone out there is
interested, I think this would

00:12:00.280 --> 00:12:03.120
be a great project for building
an app on top of

00:12:03.120 --> 00:12:06.770
Google Cloud Storage to extend
one of those plug-ins or to

00:12:06.770 --> 00:12:12.030
create a new one to push
WordPress content over to

00:12:12.030 --> 00:12:13.390
Google Cloud Storage.

00:12:13.390 --> 00:12:16.020
And the reason why it's useful
to push your content, your

00:12:16.020 --> 00:12:19.630
blog content-- you might be
wondering, if I have a blog

00:12:19.630 --> 00:12:22.050
and it's serving up content
every day, why do I care?

00:12:22.050 --> 00:12:23.920
Why would I want to
push cached copies

00:12:23.920 --> 00:12:25.090
of it on Cloud Storage?

00:12:25.090 --> 00:12:27.620
And the reason is scalability.

00:12:27.620 --> 00:12:32.650
If your blog is successful, if
you ever get slash-dotted or

00:12:32.650 --> 00:12:35.680
post something that attracts a
lot of interest, your usage is

00:12:35.680 --> 00:12:38.640
going to spike, probably
very suddenly.

00:12:38.640 --> 00:12:42.000
And what typically happens is
people who deploy blogs on

00:12:42.000 --> 00:12:45.870
relatively small footprints
where you might be paying per

00:12:45.870 --> 00:12:50.430
server or per virtual server,
you can't tolerate the spike

00:12:50.430 --> 00:12:52.020
in traffic sometimes.

00:12:52.020 --> 00:12:55.280
And that's really bad because
when you most need the

00:12:55.280 --> 00:12:58.250
capacity, at the point in time
when your blog is suddenly the

00:12:58.250 --> 00:13:03.250
most popular it's ever been, it
falls over and it fails to

00:13:03.250 --> 00:13:04.280
respond appropriately.

00:13:04.280 --> 00:13:07.470
And so it's really nice to be
able to just dynamically

00:13:07.470 --> 00:13:10.720
absorb all that traffic and
perform equally well under

00:13:10.720 --> 00:13:15.490
very high load as well
as the norm.

00:13:15.490 --> 00:13:18.800
And that's what you get with
deploying not just a blog but

00:13:18.800 --> 00:13:22.220
any static website on Google
Cloud Storage.

00:13:22.220 --> 00:13:23.670
You get virtually unlimited
scaling.

00:13:23.670 --> 00:13:25.760
You get incredibly
high performance.

00:13:25.760 --> 00:13:29.200
And you get a global footprint
where people can read this

00:13:29.200 --> 00:13:33.690
content, access your website all
around the world thanks to

00:13:33.690 --> 00:13:37.540
the fact that Google Cloud
Storage is deployed on

00:13:37.540 --> 00:13:40.250
Google's global worldwide
network.

00:13:40.250 --> 00:13:43.430
So you get all these benefits
that you wouldn't have if you

00:13:43.430 --> 00:13:47.440
were in a more constrained
web-hosting or blog-serving

00:13:47.440 --> 00:13:48.690
type environment.

00:13:52.200 --> 00:13:53.810
So a few words--

00:13:53.810 --> 00:13:55.060
is there a question?

00:13:57.584 --> 00:14:01.590
A little bit about how website
configuration works.

00:14:01.590 --> 00:14:05.450
So we've added two new
metadata properties.

00:14:05.450 --> 00:14:08.140
And these are applied on
a per-bucket basis.

00:14:08.140 --> 00:14:10.990
So you'll typically define a
bucket, and that will be the

00:14:10.990 --> 00:14:12.990
root of your website.

00:14:12.990 --> 00:14:17.280
And you'll associate with that
bucket a MainPageSuffix and a

00:14:17.280 --> 00:14:21.440
NotFoundPage property.

00:14:21.440 --> 00:14:24.370
When you've set those, if
someone does a GET Object

00:14:24.370 --> 00:14:30.100
either on the bucket itself or
on what we refer to as a

00:14:30.100 --> 00:14:32.490
directory, kind of a virtual
directory underneath that

00:14:32.490 --> 00:14:39.560
bucket, we will look for an
object underneath that path

00:14:39.560 --> 00:14:43.210
with the specified name that
you've set for MainPageSuffix.

00:14:43.210 --> 00:14:46.490
And if it exists, we'll deliver
it up automatically.

00:14:46.490 --> 00:14:48.810
So the nice thing about this is
you don't have to actually

00:14:48.810 --> 00:14:55.010
distribute your URLs with the
form pathname/index.html or

00:14:55.010 --> 00:14:58.440
whatever the name is of the file
that contains the home

00:14:58.440 --> 00:15:00.300
page or the default page.

00:15:00.300 --> 00:15:03.420
It works kind of naturally if
you're used to Apache or any

00:15:03.420 --> 00:15:05.070
other popular web server.

00:15:05.070 --> 00:15:08.730
You get a default page that gets
served up automatically.

00:15:08.730 --> 00:15:10.790
And you can specify which
page it is as well.

00:15:10.790 --> 00:15:12.790
So it doesn't have
to be index.html.

00:15:12.790 --> 00:15:14.640
It can be any name you like.

00:15:14.640 --> 00:15:17.720
And equivalently, you can do
the same thing with this

00:15:17.720 --> 00:15:20.170
NotFoundPage metadata.

00:15:20.170 --> 00:15:22.930
And that, as you might guess
from the name, is giving you

00:15:22.930 --> 00:15:30.680
the ability to serve up a page
that is providing a response

00:15:30.680 --> 00:15:34.120
whenever a resource that's
requested is not available,

00:15:34.120 --> 00:15:36.510
essentially the 404
capability.

00:15:40.790 --> 00:15:41.500
Let's see.

00:15:41.500 --> 00:15:48.380
The other thing is this metadata
defines names.

00:15:48.380 --> 00:15:49.810
But it doesn't define content.

00:15:49.810 --> 00:15:56.270
So you actually upload objects
into those names in order to

00:15:56.270 --> 00:15:57.700
have the content of the
page delivered.

00:15:57.700 --> 00:16:00.680
And I'll show you how that
all works in a second.

00:16:00.680 --> 00:16:04.020
So the procedure for doing this
is to upload content into

00:16:04.020 --> 00:16:07.410
a bucket, you have to make
sure the ACLs are set

00:16:07.410 --> 00:16:10.100
according to your intended
access permission.

00:16:10.100 --> 00:16:12.580
So if you're, for example,
doing, again, a blog where you

00:16:12.580 --> 00:16:15.630
want everybody in the world to
be able to access the content,

00:16:15.630 --> 00:16:20.020
you'd set the public read
access control so that

00:16:20.020 --> 00:16:23.810
everybody can see your
content anywhere.

00:16:23.810 --> 00:16:27.950
You want to create and upload
default pages for the bucket

00:16:27.950 --> 00:16:30.940
and optionally for any
directories you care about And

00:16:30.940 --> 00:16:36.800
then you may, in addition, want
to create a custom 404

00:16:36.800 --> 00:16:38.840
page as well if you're
interested in that.

00:16:38.840 --> 00:16:41.360
And then you'll set
one or both of the

00:16:41.360 --> 00:16:42.670
following metadata values.

00:16:42.670 --> 00:16:44.020
And I already covered that.

00:16:44.020 --> 00:16:46.870
You can do that either
via the XML API or

00:16:46.870 --> 00:16:48.090
with the gsutil tool.

00:16:48.090 --> 00:16:50.410
The gsutil tool makes
it very easy.

00:16:50.410 --> 00:16:53.860
And I'll show how that
works, in a minute.

00:16:53.860 --> 00:16:57.170
This is a pictorial diagram of
the logic that's happening

00:16:57.170 --> 00:16:59.830
behind the scenes when you
actually submit a request.

00:16:59.830 --> 00:17:01.830
And I'm not going to
walk through this.

00:17:01.830 --> 00:17:04.079
We can if people want to
drill down into it.

00:17:04.079 --> 00:17:07.349
But this picture comes from
our online documentation.

00:17:07.349 --> 00:17:09.660
And you'll see at the end of the
talk a list of resources

00:17:09.660 --> 00:17:12.980
you can use to read more
about this future.

00:17:12.980 --> 00:17:16.069
But I'd like to jump into the
demo because I think it's a

00:17:16.069 --> 00:17:20.349
little bit easier to explain
something interactively.

00:17:20.349 --> 00:17:24.240
So let me switch over here.

00:17:26.990 --> 00:17:29.620
Are you guys still
seeing my screen?

00:17:29.620 --> 00:17:31.645
You should be seeing
a shell window.

00:17:31.645 --> 00:17:33.040
AUDIENCE: It's delayed.

00:17:33.040 --> 00:17:34.290
MARC COHEN: OK.

00:17:36.320 --> 00:17:43.630
So as part of this talk, I
created a new domain name.

00:17:43.630 --> 00:17:47.160
And it's called "Cloud and
Clear." I thought that would

00:17:47.160 --> 00:17:51.060
be a cute name for a
blog at some point.

00:17:51.060 --> 00:17:54.170
So I just created this domain
name a couple of days ago.

00:17:56.980 --> 00:18:00.630
And as you can see, I was able
to create a bucket for it.

00:18:00.630 --> 00:18:03.065
So I named the bucket after
the domain name.

00:18:03.065 --> 00:18:04.665
It's cloud-and-clear.com.

00:18:04.665 --> 00:18:06.280
I'm using gsutil.

00:18:06.280 --> 00:18:08.510
For those who haven't seen it,
it's a command-line utility

00:18:08.510 --> 00:18:12.250
that lets me do all
sorts of things.

00:18:12.250 --> 00:18:14.625
If I do Help, it'll show you
all the kinds of things you

00:18:14.625 --> 00:18:15.210
can do here.

00:18:15.210 --> 00:18:19.990
But it makes it very easy to
upload, download, list,

00:18:19.990 --> 00:18:22.780
modify, set access permissions,
et cetera, on my

00:18:22.780 --> 00:18:25.360
Google Cloud Storage
resources.

00:18:25.360 --> 00:18:30.840
So what I've done is I have
created this bucket.

00:18:30.840 --> 00:18:34.550
And in order to create this
bucket, I had to prove that I

00:18:34.550 --> 00:18:38.690
owned the domain name.

00:18:38.690 --> 00:18:43.850
So I went through the procedure
doing that, and

00:18:43.850 --> 00:18:48.320
we'll do minus b here.

00:18:48.320 --> 00:18:49.800
There's information
about the bucket.

00:18:49.800 --> 00:18:52.130
So I went through the process of
registering a domain name,

00:18:52.130 --> 00:18:53.800
proving that I owned it.

00:18:53.800 --> 00:18:55.440
And then I created
the domain name.

00:18:55.440 --> 00:18:57.130
But it's virtually
empty right now.

00:18:57.130 --> 00:19:01.160
And so if I go to a web browser
and I enter that

00:19:01.160 --> 00:19:04.650
name-- oh, and I did set
the CNAME in the

00:19:04.650 --> 00:19:05.860
DNS system as well.

00:19:05.860 --> 00:19:10.620
So when you enter
cloud-and-clear.com, it's

00:19:10.620 --> 00:19:15.410
being redirected automatically
to Google Cloud Storage.

00:19:15.410 --> 00:19:21.170
But the problem is there's
nothing in that directory.

00:19:21.170 --> 00:19:22.460
And one more thing.

00:19:22.460 --> 00:19:30.190
If I show you the way that you
GET and SET the metadata for

00:19:30.190 --> 00:19:33.420
website configuration can be
done through a special command

00:19:33.420 --> 00:19:37.592
in gsutil called getwebcfg.

00:19:37.592 --> 00:19:43.660
So if I enter that command,
cloud-and-clear.com, here's

00:19:43.660 --> 00:19:47.770
the configuration I've
set on this bucket.

00:19:47.770 --> 00:19:51.110
So by default, I want the
MainPageSuffix to be

00:19:51.110 --> 00:19:52.250
index.html.

00:19:52.250 --> 00:19:56.680
So if there's an object
index.html, I want that served

00:19:56.680 --> 00:19:59.650
up any time someone does
a GET on the bucket.

00:19:59.650 --> 00:20:07.040
And if you can't find the
requested object underneath

00:20:07.040 --> 00:20:10.360
that bucket, I want Google Cloud
Storage to serve up the

00:20:10.360 --> 00:20:13.420
contents of 404.html.

00:20:13.420 --> 00:20:16.950
Now, the problem is neither
of those objects have been

00:20:16.950 --> 00:20:18.490
uploaded to this bucket.

00:20:18.490 --> 00:20:22.120
And so when I access the bucket
right now, I've got the

00:20:22.120 --> 00:20:25.940
configuration set that says by
default if you don't specify a

00:20:25.940 --> 00:20:28.910
particular object, serve
up index.html.

00:20:28.910 --> 00:20:30.550
There is no index.html.

00:20:30.550 --> 00:20:32.860
There's no such key
in that bucket.

00:20:32.860 --> 00:20:34.070
And so I'm getting
an error message.

00:20:34.070 --> 00:20:36.610
So what I'm going to do now
is I'm going to upload

00:20:36.610 --> 00:20:37.690
index.html.

00:20:37.690 --> 00:20:40.630
And it should make my
problem go away.

00:20:40.630 --> 00:20:42.530
Now, the way I'm going to upload
it is I have something

00:20:42.530 --> 00:20:45.060
called upload_home,
I call it, which

00:20:45.060 --> 00:20:46.880
uploads really two files.

00:20:46.880 --> 00:20:49.950
Since I showed you the
configuration is enabling both

00:20:49.950 --> 00:20:53.280
the MainPageSuffix and the
NotFoundPage, I'm going to

00:20:53.280 --> 00:20:54.680
upload both in one shot.

00:20:54.680 --> 00:21:02.190
So this script is copying
home.html and 404.html, home

00:21:02.190 --> 00:21:04.580
to index, and 404 to 404.

00:21:04.580 --> 00:21:07.207
And then it sets the ACLs
on both to public read.

00:21:07.207 --> 00:21:13.350
So if I run upload_home, it's
kind of my home environment.

00:21:13.350 --> 00:21:15.860
It's setting both index.html
and 404.

00:21:15.860 --> 00:21:19.910
So now, if I refresh,
I get the contents.

00:21:19.910 --> 00:21:23.610
I should've shown you what the
contents of that file was.

00:21:23.610 --> 00:21:32.370
So index.html is a very simple
page with a header and one

00:21:32.370 --> 00:21:37.840
link to a sub-domain, /pool.

00:21:37.840 --> 00:21:40.310
So as you see, it's now
serving that up.

00:21:40.310 --> 00:21:41.830
And I didn't have to say,
cloud-and-clear/index.html.

00:21:44.360 --> 00:21:45.230
I could have done that.

00:21:45.230 --> 00:21:47.880
But I didn't need to because
it picked up the default

00:21:47.880 --> 00:21:49.860
setting here.

00:21:49.860 --> 00:21:54.200
If I instead ask for something
that doesn't

00:21:54.200 --> 00:22:00.000
exist, I get a 404 page.

00:22:00.000 --> 00:22:01.780
That's my 404 page, actually.

00:22:01.780 --> 00:22:03.190
That's not Google's.

00:22:03.190 --> 00:22:07.040
And if I show you the 404,
it looks like this.

00:22:07.040 --> 00:22:10.830
I copied this from Google's
Broken Robot page that some of

00:22:10.830 --> 00:22:11.560
you have seen before.

00:22:11.560 --> 00:22:14.210
But I actually crafted
this myself,

00:22:14.210 --> 00:22:16.520
uploaded it into 404.html.

00:22:16.520 --> 00:22:19.710
And that's what I'm getting when
I request something that

00:22:19.710 --> 00:22:22.300
doesn't exist, like foo.

00:22:22.300 --> 00:22:24.300
So let's go back to the top.

00:22:24.300 --> 00:22:29.580
And I have this link on the
index.html page to Pool Demo.

00:22:29.580 --> 00:22:32.610
And if I hover over that,
hopefully you can see at the

00:22:32.610 --> 00:22:34.990
bottom of the window-- let me
raise it a little bit, just in

00:22:34.990 --> 00:22:37.240
case it's cutting off.

00:22:37.240 --> 00:22:39.520
If I hover on that, you see at
the bottom of the window it's

00:22:39.520 --> 00:22:41.290
showing you the link
underneath there is

00:22:41.290 --> 00:22:43.290
cloud-and-clear.com/pool.

00:22:43.290 --> 00:22:45.390
Now, I didn't upload Pool.

00:22:45.390 --> 00:22:48.740
So if I do that, I'm getting my
error page that I already

00:22:48.740 --> 00:22:49.660
showed you.

00:22:49.660 --> 00:22:52.190
So what I'd like to do now
is upload Pool, which is

00:22:52.190 --> 00:22:54.770
essentially a static website.

00:22:54.770 --> 00:22:59.340
So I've got a script
called upload_pool.

00:22:59.340 --> 00:23:03.760
And all that does is it uses
gsutil to copy, "-r" means

00:23:03.760 --> 00:23:06.660
recursively, from the
current directory to

00:23:06.660 --> 00:23:09.130
cloud-and-clear.com/pool.

00:23:09.130 --> 00:23:12.040
So it's creating a subdirectory
with the

00:23:12.040 --> 00:23:16.080
recursive contents of this
website that you'll see what

00:23:16.080 --> 00:23:17.540
it does in a minute.

00:23:17.540 --> 00:23:20.640
And then it sets the ACL again
to public read, because I want

00:23:20.640 --> 00:23:22.350
everybody in the world to
be able to access this.

00:23:22.350 --> 00:23:25.270
So I'm going to run
upload/pool.

00:23:25.270 --> 00:23:29.290
And it's a significant-sized
website.

00:23:29.290 --> 00:23:30.940
But the interesting thing
about this website, it's

00:23:30.940 --> 00:23:32.790
completely static on
the server side.

00:23:32.790 --> 00:23:34.130
There's no server-side logic.

00:23:34.130 --> 00:23:37.060
But you see it's quite dynamic
in terms of their client.

00:23:37.060 --> 00:23:39.540
So now that I've set this,
I should be able to

00:23:39.540 --> 00:23:41.320
click on Pool Demo.

00:23:41.320 --> 00:23:44.740
And I probably need to
refresh the page.

00:23:44.740 --> 00:23:47.600
The previous result
was cached.

00:23:47.600 --> 00:23:48.570
And that's what I get.

00:23:48.570 --> 00:23:50.010
And I'll show you there's
more to that.

00:23:50.010 --> 00:23:53.740
But let me go back to the
main URL and show

00:23:53.740 --> 00:23:56.145
that that just works.

00:23:56.145 --> 00:23:59.020
Now, I can either click on that
link and get to the Pool

00:23:59.020 --> 00:24:03.940
thing or I can specify
Pool explicitly

00:24:03.940 --> 00:24:05.386
myself and get to it.

00:24:05.386 --> 00:24:11.150
Now, what's happening is that
Pool is a subdir, it's a

00:24:11.150 --> 00:24:15.690
subdirectory underneath the
cloud-and-clear.com bucket.

00:24:15.690 --> 00:24:20.270
And in that subdir is
an index.html file.

00:24:20.270 --> 00:24:24.590
If that didn't exist, then when
I went to the /pool URL,

00:24:24.590 --> 00:24:28.200
I would be getting
the 404 NotFound.

00:24:28.200 --> 00:24:32.220
And I can just show you that
very quickly by displaying the

00:24:32.220 --> 00:24:33.942
contents of cloud-and-clear.
com/pool/index.html.

00:24:39.635 --> 00:24:40.890
And there it is.

00:24:40.890 --> 00:24:44.640
So what this site is actually
doing is downloading an app

00:24:44.640 --> 00:24:48.590
that's got some pretty
JavaScript with audio and

00:24:48.590 --> 00:24:50.014
visual stuff to it.

00:24:50.014 --> 00:24:55.430
I can click the Spacebar, and
I approach the pool ball.

00:24:55.430 --> 00:24:57.110
And then I can hold
down the Spacebar.

00:24:57.110 --> 00:25:00.500
And it actually has audio files
attached to it, so it

00:25:00.500 --> 00:25:05.450
sort of simulates the sound
effects of the pool.

00:25:05.450 --> 00:25:08.530
If I click on Space, it brings
me to the cue ball.

00:25:08.530 --> 00:25:11.690
I can rearrange the table
to my liking.

00:25:11.690 --> 00:25:13.326
I'm not a very good pool
player, so I won't

00:25:13.326 --> 00:25:14.140
do this very well.

00:25:14.140 --> 00:25:16.660
But then I can do the same
thing, hold down the Spacebar

00:25:16.660 --> 00:25:19.030
and blast away.

00:25:19.030 --> 00:25:21.890
And it would be nice if I
actually got a ball into a

00:25:21.890 --> 00:25:24.040
pocket here, because it makes
it makes a cool sound.

00:25:24.040 --> 00:25:28.600
But I'm probably not a good
enough pool player to do that.

00:25:28.600 --> 00:25:32.340
I'll give it one more try,
and then we'll move on.

00:25:32.340 --> 00:25:33.770
People are probably
laughing at--

00:25:33.770 --> 00:25:37.120
pool players right now are
laughing at me, I'm sure.

00:25:37.120 --> 00:25:37.604
Yay!

00:25:37.604 --> 00:25:39.130
OK.

00:25:39.130 --> 00:25:41.410
Anyway, you're welcome
to try that.

00:25:41.410 --> 00:25:43.510
And one cute thing about
these slides--

00:25:43.510 --> 00:25:47.600
let me go back to the start
presentation thing.

00:25:47.600 --> 00:25:49.720
I'm sorry, it keeps bringing
me back to the beginning.

00:25:49.720 --> 00:25:51.450
But one cute thing about
this slide is

00:25:51.450 --> 00:25:53.110
that this is clickable.

00:25:53.110 --> 00:25:54.650
This image on the slide
is clickable.

00:25:54.650 --> 00:25:57.810
So if you're watching at home,
walking through this

00:25:57.810 --> 00:25:59.886
presentation right now, you can
click on the image of the

00:25:59.886 --> 00:26:00.370
pool table.

00:26:00.370 --> 00:26:02.710
And it should take you
right to the demo.

00:26:02.710 --> 00:26:03.750
And you can try it
out for yourself.

00:26:03.750 --> 00:26:05.810
It's kind of fun.

00:26:05.810 --> 00:26:07.050
So that was it.

00:26:07.050 --> 00:26:10.190
Let's just kind of recap what we
did there, because we did a

00:26:10.190 --> 00:26:11.380
lot of things.

00:26:11.380 --> 00:26:17.600
We set up CNAME redirection so
that this cloud-and-clear.com

00:26:17.600 --> 00:26:22.880
imaginary domain name property
that I created was serving

00:26:22.880 --> 00:26:25.940
resources directly from Google
Cloud Storage with the names I

00:26:25.940 --> 00:26:29.820
like instead of something
that was forced on me.

00:26:29.820 --> 00:26:34.990
Then I configured the website
settings for the bucket that I

00:26:34.990 --> 00:26:39.360
created, modeling
the domain name.

00:26:39.360 --> 00:26:41.110
And then I uploaded content.

00:26:41.110 --> 00:26:44.630
And I'm now able to serve
websites directly from that

00:26:44.630 --> 00:26:47.373
bucket as well as subdirectories
like that /pool

00:26:47.373 --> 00:26:49.590
path from that bucket.

00:26:49.590 --> 00:26:53.160
So I effectively have a little
website distribution system

00:26:53.160 --> 00:26:56.400
here that's pretty much
infinitely scalable and high

00:26:56.400 --> 00:27:01.460
performance and global, and
all that good stuff.

00:27:01.460 --> 00:27:03.820
A quick list of resources
here for people who

00:27:03.820 --> 00:27:04.430
want to read more.

00:27:04.430 --> 00:27:06.720
There's a link here
for the console.

00:27:06.720 --> 00:27:09.660
The Developers Console is the
entry point for all of our

00:27:09.660 --> 00:27:10.420
cloud products.

00:27:10.420 --> 00:27:14.880
So if you want to get access
to Cloud Storage as well as

00:27:14.880 --> 00:27:15.650
anything else--

00:27:15.650 --> 00:27:18.420
App Engine, Compute Engine, all
our different products--

00:27:18.420 --> 00:27:20.670
that's kind of the entry point
as well as where you

00:27:20.670 --> 00:27:23.780
administer and set
up your projects.

00:27:23.780 --> 00:27:25.540
There's a Product Description
site.

00:27:25.540 --> 00:27:27.230
And our documentation
is quite good.

00:27:27.230 --> 00:27:29.715
So I'd recommend that third
link there if you want to

00:27:29.715 --> 00:27:33.090
learn more specifically
about Cloud Storage.

00:27:33.090 --> 00:27:37.040
The feature I've covered today
is on this link here, Website

00:27:37.040 --> 00:27:37.760
Configuration.

00:27:37.760 --> 00:27:40.580
And lastly, you see a link to
the demo that you can use

00:27:40.580 --> 00:27:41.830
again to try yourself.

00:27:44.270 --> 00:27:46.460
That's pretty much it, right
on the half-hour.

00:27:46.460 --> 00:27:49.160
So what I wanted to do
next is just to open

00:27:49.160 --> 00:27:50.140
things up to your questions.

00:27:50.140 --> 00:27:52.980
Either we can take questions
from the moderated list or the

00:27:52.980 --> 00:27:53.620
Chat window.

00:27:53.620 --> 00:27:57.450
Or ideally, maybe we'll first
give people a crack who are in

00:27:57.450 --> 00:27:59.310
the Hangout right now.

00:27:59.310 --> 00:28:03.025
So let me undo the screensharing
here.

00:28:03.025 --> 00:28:05.960
And by the way, we're open and
actually quite interested in

00:28:05.960 --> 00:28:10.160
not just questions, but if you
have feedback, if something's

00:28:10.160 --> 00:28:12.560
not working right for you, you
think we should be doing

00:28:12.560 --> 00:28:15.220
something differently,
please let us know.

00:28:15.220 --> 00:28:17.360
We're interested in that stuff
quite a bit as well.

00:28:19.920 --> 00:28:23.875
So yeah, why don't I open it
up to the Hangout first.

00:28:26.520 --> 00:28:29.420
And don't all jump
at once, please.

00:28:35.360 --> 00:28:37.300
Anything from the Hangout?

00:28:37.300 --> 00:28:38.550
Going once.

00:28:40.810 --> 00:28:41.560
OK.

00:28:41.560 --> 00:28:46.220
If you guys get interested
later, just jump right in at

00:28:46.220 --> 00:28:47.010
any time, please.

00:28:47.010 --> 00:28:50.040
I'm going to switch to
the Moderator queue.

00:28:54.810 --> 00:28:58.230
The top rated one, I think,
is a question about--

00:28:58.230 --> 00:28:58.620
well, no.

00:28:58.620 --> 00:29:01.580
Actually it's fair. "Is there
a way to back up Google Docs

00:29:01.580 --> 00:29:06.850
to Google Storage directly?"

00:29:06.850 --> 00:29:10.190
There's no direct way in the
sense of having a button to

00:29:10.190 --> 00:29:12.910
press kind of thing.

00:29:12.910 --> 00:29:17.360
The way to do this would
probably be to write an

00:29:17.360 --> 00:29:20.020
application to do it.

00:29:20.020 --> 00:29:25.040
We had a request on the
discussion group for Cloud

00:29:25.040 --> 00:29:26.870
Storage recently.

00:29:26.870 --> 00:29:32.980
That was in the space of how
to move data from a Google

00:29:32.980 --> 00:29:36.010
Drive spreadsheet into
Google Cloud Storage.

00:29:36.010 --> 00:29:38.330
And in answering that
question I learned

00:29:38.330 --> 00:29:41.280
about some Apps Script.

00:29:41.280 --> 00:29:43.730
If you're familiar with that
capability, it's a way to

00:29:43.730 --> 00:29:46.040
write JavaScript-like code that

00:29:46.040 --> 00:29:49.560
manipulates Google Docs content.

00:29:49.560 --> 00:29:53.030
So there's a way to use
Apps Script to move

00:29:53.030 --> 00:29:55.040
data between the two.

00:29:55.040 --> 00:29:57.610
But it still boils down to
writing an app to do that.

00:29:57.610 --> 00:30:01.850
There's no direct pass-through
type capability

00:30:01.850 --> 00:30:03.100
that I'm aware of.

00:30:05.310 --> 00:30:06.630
Let's keep going.

00:30:06.630 --> 00:30:10.600
"Can there be a multistep
verification process enforced

00:30:10.600 --> 00:30:13.300
on Google Storage before
allowing files

00:30:13.300 --> 00:30:14.880
on GCS to be removed?

00:30:19.190 --> 00:30:20.860
Ville, want to take
a crack at that?

00:30:24.417 --> 00:30:27.580
You can say no.

00:30:27.580 --> 00:30:27.950
VILLE AIKAS: Sorry.

00:30:27.950 --> 00:30:30.050
I just had to get
unmuted there.

00:30:30.050 --> 00:30:33.270
So yeah, right now there
is no way to do this.

00:30:33.270 --> 00:30:36.450
But we're always looking at
ways of improving that.

00:30:36.450 --> 00:30:39.980
I assume it would be some
kind of a two-factor

00:30:39.980 --> 00:30:41.230
authentication.

00:30:43.000 --> 00:30:45.510
Maybe the person is not here.

00:30:45.510 --> 00:30:48.300
But I assume that's
what they mean.

00:30:48.300 --> 00:30:51.770
So we have to go ahead and see
how much interest there is.

00:30:51.770 --> 00:30:54.540
And hopefully in the
future, we can

00:30:54.540 --> 00:30:56.885
investigate adding that option.

00:30:56.885 --> 00:30:58.990
But right now, there's not.

00:30:58.990 --> 00:31:00.505
MARC COHEN: Right.

00:31:00.505 --> 00:31:03.400
And there's a group that people
can join if you're

00:31:03.400 --> 00:31:08.710
interested in getting more
detail on what you envision

00:31:08.710 --> 00:31:09.390
this to look like.

00:31:09.390 --> 00:31:11.860
I guess the other thing you
could do is just add to this.

00:31:11.860 --> 00:31:12.730
Whoever posted this--

00:31:12.730 --> 00:31:15.110
Brandon from Sacramento--

00:31:15.110 --> 00:31:18.340
if you'd care to just add to
this question with a little

00:31:18.340 --> 00:31:21.330
bit more information about how
you saw this working, that

00:31:21.330 --> 00:31:26.340
would help us figure out how it
might look, how it might be

00:31:26.340 --> 00:31:28.080
implemented.

00:31:28.080 --> 00:31:31.340
"What are some tools you would
recommend non-developers use

00:31:31.340 --> 00:31:35.050
to interact with GCS?"

00:31:35.050 --> 00:31:39.156
So the first comment I would
make is that Google Cloud

00:31:39.156 --> 00:31:44.600
Storage is primarily focusing
on application developers.

00:31:44.600 --> 00:31:49.370
So that's really the
target audience

00:31:49.370 --> 00:31:51.590
for the product initially.

00:31:51.590 --> 00:31:56.000
But there are some ways to
interact with it without

00:31:56.000 --> 00:31:57.710
having to write code,
for example.

00:31:57.710 --> 00:32:01.180
And the two tools that I would
mention are one is the one

00:32:01.180 --> 00:32:05.020
I've already shown you guys
with the gsutil command.

00:32:05.020 --> 00:32:06.730
And the other one would be that

00:32:06.730 --> 00:32:10.970
there's a web user interface.

00:32:10.970 --> 00:32:15.380
The name of the tool is the
Google Cloud Storage Manager.

00:32:15.380 --> 00:32:18.910
And you can find it in the
documentation page

00:32:18.910 --> 00:32:19.640
I pointed you to.

00:32:19.640 --> 00:32:21.660
So that gives you the ability
to do things like drag and

00:32:21.660 --> 00:32:27.860
drop files from your desktop
to Cloud Storage, and list

00:32:27.860 --> 00:32:30.120
buckets and objects,
and so on.

00:32:34.550 --> 00:32:35.800
Let's see.

00:32:37.920 --> 00:32:39.170
Comment?

00:32:41.300 --> 00:32:41.630
OK.

00:32:41.630 --> 00:32:43.680
"How experimental is logging?

00:32:43.680 --> 00:32:45.370
What are some best practices.

00:32:45.370 --> 00:32:52.240
And could you recommend some
third-party services?"

00:32:52.240 --> 00:32:55.620
I think logging is pretty well
established at this point.

00:32:55.620 --> 00:33:01.240
I presume Dan is referring
to our logging feature.

00:33:01.240 --> 00:33:04.770
And so just to explain for
anybody who's not aware of it,

00:33:04.770 --> 00:33:08.570
we have a feature called Access
Logs, which give you

00:33:08.570 --> 00:33:13.050
the ability to get information
about who's--

00:33:13.050 --> 00:33:16.920
kind of low-level tracking
information about every access

00:33:16.920 --> 00:33:20.030
to your buckets and
your objects.

00:33:20.030 --> 00:33:22.500
And that information gets
posted periodically to a

00:33:22.500 --> 00:33:23.800
separate bucket that
you define.

00:33:23.800 --> 00:33:31.480
And it gives you fine-grain
ability to monitor what the

00:33:31.480 --> 00:33:34.920
activity is on your resources.

00:33:34.920 --> 00:33:38.030
I'm not sure about the
experimental status, where

00:33:38.030 --> 00:33:40.550
that is and when that's supposed
to be changing.

00:33:40.550 --> 00:33:41.974
Do you know anything
about that, Ville?

00:33:44.880 --> 00:33:45.310
VILLE AIKAS: I'm sorry.

00:33:45.310 --> 00:33:48.170
I was actually chatting with
Hal there about their logs.

00:33:48.170 --> 00:33:49.360
I was spacing for a second.

00:33:49.360 --> 00:33:51.175
Can you just read
the question?

00:33:51.175 --> 00:33:55.440
MARC COHEN: How experimental
is logging?

00:33:55.440 --> 00:33:57.960
VILLE AIKAS: It should be
pretty well established.

00:33:57.960 --> 00:33:59.760
We are always taking
feature requests.

00:33:59.760 --> 00:34:05.090
But we feel like it's pretty
well in there.

00:34:05.090 --> 00:34:07.030
Once again, it would be nice
to know if there are some

00:34:07.030 --> 00:34:10.460
particular issues or feature
enhancements that people are

00:34:10.460 --> 00:34:12.420
looking for.

00:34:12.420 --> 00:34:14.540
MARC COHEN: Right.

00:34:14.540 --> 00:34:16.889
And then, I don't have any
particular recommendations for

00:34:16.889 --> 00:34:19.290
third-party services in
the logging space.

00:34:19.290 --> 00:34:22.670
But as Ville mentioned, if you
would care to share a little

00:34:22.670 --> 00:34:25.449
bit more information about what
you're trying to do with

00:34:25.449 --> 00:34:28.690
the logging feature, we
can definitely try to

00:34:28.690 --> 00:34:31.300
explain that better.

00:34:31.300 --> 00:34:35.770
"How to start Cloud Storage
use in Google App Engine."

00:34:35.770 --> 00:34:39.880
So there is actually an API in
App Engine, integrated right

00:34:39.880 --> 00:34:42.090
into App Engine for
interacting with

00:34:42.090 --> 00:34:44.170
Google Cloud Storage.

00:34:44.170 --> 00:34:47.920
And I think if you search on
Google Cloud Storage App

00:34:47.920 --> 00:34:50.366
Engine, you'll very likely
find it in one of the

00:34:50.366 --> 00:34:53.150
top-returned hits.

00:34:53.150 --> 00:34:56.280
That's probably the best way to
interact with Google Cloud

00:34:56.280 --> 00:35:01.290
Storage that's supported in
both Java and Python.

00:35:01.290 --> 00:35:04.700
You may find cases where you
need to do something that is

00:35:04.700 --> 00:35:07.490
outside of the scope of what's
supported by that API.

00:35:07.490 --> 00:35:14.122
And there are ways to work
around the API or circumvent

00:35:14.122 --> 00:35:17.990
it and go directly to
programming interface we have

00:35:17.990 --> 00:35:19.385
supported for Cloud Storage.

00:35:22.860 --> 00:35:24.630
Without knowing more about what
you're trying to do, the

00:35:24.630 --> 00:35:27.960
best way to start would be to
look at the published API

00:35:27.960 --> 00:35:30.790
that's built right into App
Engine and see if that does

00:35:30.790 --> 00:35:32.040
what you need.

00:35:36.030 --> 00:35:38.370
The next one is a Google
Drive question.

00:35:38.370 --> 00:35:40.350
Someone's asking when there
will be a Linux version of

00:35:40.350 --> 00:35:41.000
Google Drive.

00:35:41.000 --> 00:35:43.650
And as I mentioned earlier,
that's outside the

00:35:43.650 --> 00:35:44.550
scope of this talk.

00:35:44.550 --> 00:35:47.230
So unfortunately for Adita,
I'm going to have

00:35:47.230 --> 00:35:48.070
to skip that one.

00:35:48.070 --> 00:35:50.720
Sorry.

00:35:50.720 --> 00:35:56.850
"Is CNAME redirection with
HTTPS on the roadmap?"

00:35:56.850 --> 00:35:59.640
That's a pretty relevant
question to what I've been

00:35:59.640 --> 00:36:03.640
talking about, and I don't
know the answer to that.

00:36:03.640 --> 00:36:07.650
In general, we don't reveal
future plans.

00:36:07.650 --> 00:36:10.160
We're not allowed to talk about
what we're going to do

00:36:10.160 --> 00:36:10.760
down the road.

00:36:10.760 --> 00:36:16.410
But we've heard of
this before.

00:36:16.410 --> 00:36:18.430
We're aware that this is an
important capability.

00:36:18.430 --> 00:36:23.100
So we're taking it into
consideration

00:36:23.100 --> 00:36:24.930
for our future planning.

00:36:24.930 --> 00:36:26.833
Is there anything else you want
to say on that, Ville?

00:36:30.697 --> 00:36:31.180
VILLE AIKAS: Nope.

00:36:31.180 --> 00:36:33.730
That's pretty much.

00:36:33.730 --> 00:36:35.180
MARC COHEN: So it's
a good point.

00:36:35.180 --> 00:36:36.420
And we agree.

00:36:36.420 --> 00:36:40.240
It seems like a very useful
thing to be able to do.

00:36:40.240 --> 00:36:44.070
"Do Google Cloud Storage domain
name CNAMES need to be

00:36:44.070 --> 00:36:47.960
associated with a Google
App account?"

00:36:47.960 --> 00:36:50.025
MARC COHEN: I think the
answer to that is no.

00:36:54.270 --> 00:36:57.860
I'm not sure, I guess, what Adam
means exactly by a Google

00:36:57.860 --> 00:37:01.920
App account, whether you mean
like a Google App for Domains

00:37:01.920 --> 00:37:05.015
type account or just a Gmail
account, a Google account.

00:37:10.140 --> 00:37:13.055
I guess I'm going to assume it's
a Google account proper,

00:37:13.055 --> 00:37:17.300
like a Gmail ID or something
like that.

00:37:17.300 --> 00:37:21.340
The CNAME capability is
independent of the Gmail or

00:37:21.340 --> 00:37:23.730
the Google IDs.

00:37:23.730 --> 00:37:26.500
Basically, You'll create
a domain name.

00:37:26.500 --> 00:37:28.280
And you'll have to prove
ownership of that.

00:37:30.780 --> 00:37:32.370
I'm trying to think if
you need a Google

00:37:32.370 --> 00:37:33.750
account in order to--

00:37:33.750 --> 00:37:35.820
you might need a Google account
in order to actually

00:37:35.820 --> 00:37:38.120
do the verification steps.

00:37:38.120 --> 00:37:39.940
Because the way that
works is you go to

00:37:39.940 --> 00:37:42.720
Google Webmaster Tools.

00:37:42.720 --> 00:37:45.520
And you go through an
interactive wizard on that web

00:37:45.520 --> 00:37:49.080
page that steps you through the
different ways to verify

00:37:49.080 --> 00:37:49.710
your domain.

00:37:49.710 --> 00:37:51.490
So that might be one
place where you

00:37:51.490 --> 00:37:54.190
need a Google account.

00:37:54.190 --> 00:37:55.770
Like some of these other
questions, if there's

00:37:55.770 --> 00:37:59.070
something you're trying to do
that makes this a problem, let

00:37:59.070 --> 00:38:01.450
us know and we'll try to see
if there's a workaround.

00:38:04.200 --> 00:38:05.190
Let's see.

00:38:05.190 --> 00:38:09.050
Any questions on the Hangout
before I keep going here?

00:38:11.690 --> 00:38:14.880
And I see lots of activity
in the Chat window.

00:38:14.880 --> 00:38:16.400
I won't try to recap that.

00:38:16.400 --> 00:38:20.191
But thanks, Ville, for helping
out over there.

00:38:20.191 --> 00:38:24.760
"Are there any plans to allow
any edge-cached copies of GCS

00:38:24.760 --> 00:38:28.290
objects to be cleared
programmatically, overriding

00:38:28.290 --> 00:38:35.720
the original cache
control header?"

00:38:35.720 --> 00:38:36.970
Not that I'm aware of.

00:38:40.960 --> 00:38:44.780
I think your only option
at the moment is to use

00:38:44.780 --> 00:38:50.500
conservative values in terms of
the life of the object and

00:38:50.500 --> 00:38:51.750
wait for it to time out.

00:38:56.400 --> 00:38:59.290
I guess I'm curious to know
whether there's a problem

00:38:59.290 --> 00:39:02.370
there or what the application
need is that

00:39:02.370 --> 00:39:03.420
would motivate that.

00:39:03.420 --> 00:39:04.960
But as of now, the
edge caching--

00:39:04.960 --> 00:39:06.650
AUDIENCE: That was
my question.

00:39:06.650 --> 00:39:11.740
And the problem is when
people make mistakes.

00:39:11.740 --> 00:39:14.320
So if you have some content
that's supposed to be served

00:39:14.320 --> 00:39:17.540
up with a long lifetime, and you
like the edge caching and

00:39:17.540 --> 00:39:20.600
everything, but then you
realize, oops, that was wrong,

00:39:20.600 --> 00:39:23.820
and you're not using strongly
named objects or something,

00:39:23.820 --> 00:39:25.220
then it would be nice.

00:39:25.220 --> 00:39:26.610
It's not a must-have feature.

00:39:26.610 --> 00:39:27.610
We can make do without it.

00:39:27.610 --> 00:39:29.950
But it would be nice to be able
to say, actually, guys,

00:39:29.950 --> 00:39:30.710
we didn't mean that.

00:39:30.710 --> 00:39:33.810
Can you clear the edge cache
so we can serve up the new

00:39:33.810 --> 00:39:37.430
thing under that name that we
meant in the first place?

00:39:37.430 --> 00:39:37.840
VILLE AIKAS: Right.

00:39:37.840 --> 00:39:39.960
Right.

00:39:39.960 --> 00:39:41.560
So yeah, so right now it's
a little difficult.

00:39:41.560 --> 00:39:43.987
With the caching obviously,
especially when it's just

00:39:43.987 --> 00:39:45.700
really caching over
the internet,

00:39:45.700 --> 00:39:47.140
it's very, very difficult.

00:39:47.140 --> 00:39:49.320
We could certainly go
ahead and maybe do a

00:39:49.320 --> 00:39:50.320
little bit on our end.

00:39:50.320 --> 00:39:55.100
But even then, you would
have any intermediary

00:39:55.100 --> 00:39:56.645
caches along the way.

00:39:56.645 --> 00:39:57.590
AUDIENCE: Yeah, understood.

00:39:57.590 --> 00:40:00.480
I mean, even if it were best
effort, it would still be a

00:40:00.480 --> 00:40:01.394
useful feature for us.

00:40:01.394 --> 00:40:01.798
VILLE AIKAS: Yep.

00:40:01.798 --> 00:40:03.200
Yep, yep, yep.

00:40:03.200 --> 00:40:05.370
AUDIENCE: But I do understand
that it's hard.

00:40:05.370 --> 00:40:11.770
MARC COHEN: Is there a way to
modify the cache by changing

00:40:11.770 --> 00:40:15.570
the lifetime to a very small
number, the header that

00:40:15.570 --> 00:40:18.960
dictates how long the cache
element should be retained?

00:40:18.960 --> 00:40:21.260
AUDIENCE: Once you've set it to
a big number and it's been

00:40:21.260 --> 00:40:24.710
cached, the problem is that that
cache then knows its age.

00:40:24.710 --> 00:40:28.440
It doesn't need to check back
with the actual economical

00:40:28.440 --> 00:40:29.650
storage of the object.

00:40:29.650 --> 00:40:32.020
MARC COHEN: That make sense.

00:40:32.020 --> 00:40:33.880
VILLE AIKAS: It's the same
problem as with the DNS--

00:40:33.880 --> 00:40:34.180
oops!

00:40:34.180 --> 00:40:35.090
MARC COHEN: Right.

00:40:35.090 --> 00:40:36.760
AUDIENCE: Yeah.

00:40:36.760 --> 00:40:39.345
And we've made that
mistake, too.

00:40:39.345 --> 00:40:40.260
MARC COHEN: I didn't
mention that.

00:40:40.260 --> 00:40:41.470
That's actually a good point.

00:40:41.470 --> 00:40:43.760
I meant to point that out.

00:40:43.760 --> 00:40:47.550
One of the biggest gotchas
that people run into--

00:40:47.550 --> 00:40:52.920
I was talking through the CNAME
redirection business

00:40:52.920 --> 00:40:55.930
early on in the tech talk
portion of this Hangout.

00:40:55.930 --> 00:41:02.810
And I wanted to mention that
when you're doing that, be

00:41:02.810 --> 00:41:05.460
liberal about how much time you
wait for things to change,

00:41:05.460 --> 00:41:07.340
for the world to reconfigure.

00:41:07.340 --> 00:41:08.790
What will happen
is typically--

00:41:08.790 --> 00:41:12.370
especially, for example, setting
up the CNAME record in

00:41:12.370 --> 00:41:16.700
DNS, you'll go to your name
registrar and make that change

00:41:16.700 --> 00:41:19.300
administratively, administrative
that text

00:41:19.300 --> 00:41:22.320
record, for example, or
the CNAME record.

00:41:22.320 --> 00:41:23.910
And then you'll go try it,
and it won't work.

00:41:23.910 --> 00:41:26.390
And it's just because of
the nature of DNS.

00:41:26.390 --> 00:41:27.980
It takes a while for things
to propagate.

00:41:27.980 --> 00:41:33.100
So use liberal test intervals
when you're doing that stuff.

00:41:36.070 --> 00:41:36.850
OK.

00:41:36.850 --> 00:41:38.190
Let's see what else
we have here.

00:41:38.190 --> 00:41:42.290
Any other questions
from the Hangout?

00:41:42.290 --> 00:41:43.730
AUDIENCE: I joined
the Hangout late.

00:41:43.730 --> 00:41:44.800
I was watching the video.

00:41:44.800 --> 00:41:46.370
So you might have said
this already.

00:41:46.370 --> 00:41:49.225
But I think you handled a
question from the Moderator

00:41:49.225 --> 00:41:54.570
earlier about an extra step of
verification when you're

00:41:54.570 --> 00:41:55.930
deleting objects
through the web

00:41:55.930 --> 00:41:57.690
interface for cloud storage.

00:41:57.690 --> 00:42:00.270
And I think what the person
was getting at was just an

00:42:00.270 --> 00:42:00.700
"Are you sure?

00:42:00.700 --> 00:42:03.050
Yes or no," if you click the
Delete button on the web

00:42:03.050 --> 00:42:05.150
interface rather than anything
to do with two-step

00:42:05.150 --> 00:42:07.770
verification, which is what I
think you might have thought.

00:42:07.770 --> 00:42:07.970
MARC COHEN: OK.

00:42:07.970 --> 00:42:08.480
Yeah.

00:42:08.480 --> 00:42:09.830
Thank you for correcting that.

00:42:09.830 --> 00:42:11.090
I think you're right.

00:42:11.090 --> 00:42:13.390
AUDIENCE: Because also I would
like that feature.

00:42:13.390 --> 00:42:14.890
It sounds like a really
small thing.

00:42:14.890 --> 00:42:16.930
But the web interface is
really convenient.

00:42:16.930 --> 00:42:19.230
But at the moment, I sometimes
daren't use it because I'm

00:42:19.230 --> 00:42:20.990
worried about hitting
that button with no

00:42:20.990 --> 00:42:22.270
"Are you sure?" step.

00:42:22.270 --> 00:42:24.800
VILLE AIKAS: Ah, OK, OK.

00:42:24.800 --> 00:42:26.670
AUDIENCE: I'm even thinking of
writing a Chrome extension

00:42:26.670 --> 00:42:28.646
just to give me an "Are
you Sure?" button.

00:42:28.646 --> 00:42:28.990
MARC COHEN: Yeah.

00:42:28.990 --> 00:42:29.350
Yeah.

00:42:29.350 --> 00:42:35.420
And I think that as the scope
of deletion increases, that

00:42:35.420 --> 00:42:37.480
becomes even more critical.

00:42:37.480 --> 00:42:41.150
And then you can take that idea
even further and imagine

00:42:41.150 --> 00:42:44.860
a trash-can type model, where
the stuff that you delete

00:42:44.860 --> 00:42:45.680
doesn't actually get deleted.

00:42:45.680 --> 00:42:49.540
It goes somewhere else outside
of your normal view.

00:42:49.540 --> 00:42:51.490
And then later on, if you decide
you made a mistake, you

00:42:51.490 --> 00:42:53.210
can restore it.

00:42:53.210 --> 00:42:54.860
I think those are
all good ideas.

00:42:54.860 --> 00:42:59.250
And I personally would love
to see more of that.

00:42:59.250 --> 00:43:02.090
So like I said earlier, I can't
give any specifics.

00:43:02.090 --> 00:43:04.010
But that's a great point.

00:43:04.010 --> 00:43:05.960
And thank you for clarifying
that question.

00:43:05.960 --> 00:43:07.730
I think it was misinterpreted.

00:43:07.730 --> 00:43:09.390
VILLE AIKAS: And just to extend
a little bit, we did

00:43:09.390 --> 00:43:12.280
talk about the I/O, that they're
going have versioning

00:43:12.280 --> 00:43:13.300
coming very, very soon.

00:43:13.300 --> 00:43:15.740
So you can basically go instead
of buckets, go and

00:43:15.740 --> 00:43:17.020
have versions.

00:43:17.020 --> 00:43:20.310
So we keep copies for you.

00:43:20.310 --> 00:43:20.760
AUDIENCE: Yeah.

00:43:20.760 --> 00:43:23.630
That sounds useful.

00:43:23.630 --> 00:43:27.500
VILLE AIKAS: So if you're
interested in being a

00:43:27.500 --> 00:43:29.720
participant when it becomes
available, just go and send a

00:43:29.720 --> 00:43:33.590
note to the gs-team@google.com,
and we can

00:43:33.590 --> 00:43:35.830
go ahead and put you on
to it when it becomes

00:43:35.830 --> 00:43:39.110
available to show.

00:43:39.110 --> 00:43:40.910
MARC COHEN: Thanks, Ville.

00:43:40.910 --> 00:43:44.830
Next question is "has anyone
worked on porting the OAuth 2

00:43:44.830 --> 00:43:48.220
Boto plug-in to Boto itself?

00:43:48.220 --> 00:43:52.590
And how would you pass in the
access token during runtime in

00:43:52.590 --> 00:43:57.890
non-Google App Engine projects,
for example, a

00:43:57.890 --> 00:44:00.530
vanilla Django project?"

00:44:00.530 --> 00:44:03.850
MARC COHEN: So the second part
of the question, how would you

00:44:03.850 --> 00:44:08.040
pass the access token
during runtime?

00:44:08.040 --> 00:44:09.760
There are ways to get--

00:44:09.760 --> 00:44:12.310
I assume this is a Python
programmer, because I see the

00:44:12.310 --> 00:44:14.470
references to Boto.

00:44:14.470 --> 00:44:18.110
There are ways to get access to
the inner OAuth goodies--

00:44:18.110 --> 00:44:19.820
AUDIENCE: OAuth 2.

00:44:19.820 --> 00:44:21.070
MARC COHEN: Sorry?

00:44:23.950 --> 00:44:27.220
I thought maybe we got lucky
again and had the questioner

00:44:27.220 --> 00:44:29.260
in the Hangout.

00:44:29.260 --> 00:44:32.140
So there are ways to get access
to the refresh token

00:44:32.140 --> 00:44:39.750
and the access token and extract
it from the underlying

00:44:39.750 --> 00:44:44.450
library wrappers that make the
OAuth 2 stuff easier to use,

00:44:44.450 --> 00:44:50.060
both in Boto and also
using the Google

00:44:50.060 --> 00:44:54.230
Python Client Library.

00:44:54.230 --> 00:44:59.250
As far as porting the OAuth 2
Boto plug-in to Boto itself,

00:44:59.250 --> 00:45:02.290
what that's about in case
anybody's wondering what

00:45:02.290 --> 00:45:05.710
that's talking about is the
tool that I showed you

00:45:05.710 --> 00:45:08.320
earlier, gsutil, is a Python
application that we've

00:45:08.320 --> 00:45:09.760
open-sourced.

00:45:09.760 --> 00:45:12.740
And it's layered on top of
Boto, which is a popular

00:45:12.740 --> 00:45:18.190
third-party, also open-source
Python programming library.

00:45:18.190 --> 00:45:24.960
The purpose of Boto is to make
it easy to develop cloud

00:45:24.960 --> 00:45:27.290
computing apps using Python.

00:45:27.290 --> 00:45:31.080
And it supports Amazon stuff
as well as Google Cloud

00:45:31.080 --> 00:45:33.240
Storage and a few
other things.

00:45:33.240 --> 00:45:39.130
And gsutil, the tool I was
using earlier, uses Boto.

00:45:39.130 --> 00:45:41.850
In order to make it work with
Google Cloud Storage, we did

00:45:41.850 --> 00:45:45.850
some work in Boto-- and other
people did, as well-- to make

00:45:45.850 --> 00:45:48.190
Boto understand how
to interact with

00:45:48.190 --> 00:45:49.680
Google Cloud Storage.

00:45:49.680 --> 00:45:52.620
One of the things that we had
to sort of teach Boto how to

00:45:52.620 --> 00:45:55.330
do was to get OAuth
2 credentials.

00:45:55.330 --> 00:45:58.080
And that part of the puzzle
was done in the

00:45:58.080 --> 00:45:59.830
gsutil command itself.

00:45:59.830 --> 00:46:02.285
It's not baked into the
lower-level Boto library.

00:46:02.285 --> 00:46:06.390
And the person's asking, has
any work been done to move

00:46:06.390 --> 00:46:08.600
that functionality
down into Boto?

00:46:08.600 --> 00:46:10.460
And it's been something
we've thought about.

00:46:10.460 --> 00:46:13.090
And also it makes sense to us.

00:46:13.090 --> 00:46:16.590
But we haven't actually
worked on that.

00:46:16.590 --> 00:46:21.490
And Boto and gsutil both being
open-source projects, we would

00:46:21.490 --> 00:46:27.350
totally be happy to invite and
review any work that anybody

00:46:27.350 --> 00:46:30.340
wanted to do in that space if
you are enthusiastic about

00:46:30.340 --> 00:46:32.422
helping in that area.

00:46:32.422 --> 00:46:35.130
It doesn't mean we won't do it
or somebody else won't do it.

00:46:35.130 --> 00:46:38.500
It's just we haven't gotten
to it up to this point.

00:46:41.320 --> 00:46:42.680
Let's see.

00:46:42.680 --> 00:46:44.400
Down to two more
questions here.

00:46:44.400 --> 00:46:49.820
"Integration with PageSpeed,
can't get it to work."

00:46:49.820 --> 00:46:56.086
So PageSpeed is a Google service
that speeds up--

00:46:56.086 --> 00:46:58.090
I guess I don't know
too much about it.

00:46:58.090 --> 00:47:02.860
But my understanding is it
analyzes your website content

00:47:02.860 --> 00:47:08.240
and helps you optimize the
download speed by doing things

00:47:08.240 --> 00:47:16.610
like minimizing JavaScript
syntax and other techniques.

00:47:16.610 --> 00:47:18.340
Maybe somebody on the
Hangout knows more.

00:47:18.340 --> 00:47:21.000
Feel free to jump
in if you do.

00:47:21.000 --> 00:47:22.580
I assume this person's--

00:47:22.580 --> 00:47:25.430
go ahead.

00:47:25.430 --> 00:47:27.690
It sounded like we had
a comment there.

00:47:30.516 --> 00:47:30.990
No?

00:47:30.990 --> 00:47:33.600
Sorry if I'm interrupting
anybody.

00:47:33.600 --> 00:47:37.430
I think there's a bit of
delay on this line.

00:47:37.430 --> 00:47:42.370
I assume the questioner is
saying specifically PageSpeed

00:47:42.370 --> 00:47:46.575
with respect to the website
configuration feature I've

00:47:46.575 --> 00:47:47.160
been talking about.

00:47:47.160 --> 00:47:52.270
So I'd like to know more about
what didn't work for you.

00:47:52.270 --> 00:47:55.520
But I will reach out to the
questioner after the call and

00:47:55.520 --> 00:47:58.230
try to find out about that
because it sounds like an

00:47:58.230 --> 00:48:01.540
interesting area that I
haven't tried myself.

00:48:01.540 --> 00:48:05.370
"Has client software of Windows
been launched?"

00:48:05.370 --> 00:48:07.150
JEFF SILVERMAN: I've got
an answer for that one.

00:48:07.150 --> 00:48:08.440
MARC COHEN: OK.

00:48:08.440 --> 00:48:10.965
Let me get you on camera here.

00:48:14.360 --> 00:48:14.600
JEFF SILVERMAN: Hi.

00:48:14.600 --> 00:48:15.540
I'm Jeff Silverman.

00:48:15.540 --> 00:48:17.830
I'm a development support
specialist.

00:48:17.830 --> 00:48:21.480
And I got the gsutil utility
working quite nicely under

00:48:21.480 --> 00:48:22.890
Windows and Cygwin.

00:48:26.350 --> 00:48:27.030
MARC COHEN: Thanks, Jeff.

00:48:27.030 --> 00:48:29.020
So that's another
option you have.

00:48:29.020 --> 00:48:32.320
gsutil, the tool I was using
earlier, can be run

00:48:32.320 --> 00:48:33.620
on Windows as well.

00:48:33.620 --> 00:48:35.510
In fact, it can be run
without Cygwin.

00:48:35.510 --> 00:48:38.140
But I think it's a little
bit easier--

00:48:38.140 --> 00:48:39.780
JEFF SILVERMAN: It works a
lot better with Cygwin.

00:48:39.780 --> 00:48:41.030
MARC COHEN: With Cygwin.

00:48:42.760 --> 00:48:45.590
That's the end of the
question list.

00:48:45.590 --> 00:48:47.990
I'm just checking to see if a
couple more might have popped

00:48:47.990 --> 00:48:49.240
up in the meantime.

00:48:58.210 --> 00:49:00.540
"Any alternatives to Google
Storage Manager?"

00:49:00.540 --> 00:49:03.010
So that's the web
user interface.

00:49:03.010 --> 00:49:08.490
And there are commercial
products that are available

00:49:08.490 --> 00:49:11.130
and support Google
Cloud Storage.

00:49:11.130 --> 00:49:14.070
So there are few third-party
alternatives out there.

00:49:14.070 --> 00:49:19.970
And if you Google Cloud Storage,
Google Cloud Storage,

00:49:19.970 --> 00:49:22.950
web UI, something along those
lines, you should be able to

00:49:22.950 --> 00:49:26.000
find a few.

00:49:26.000 --> 00:49:28.850
But there's no alternative
that's officially supported as

00:49:28.850 --> 00:49:30.310
of now by Google.

00:49:34.530 --> 00:49:35.580
And let's see.

00:49:35.580 --> 00:49:38.090
I think that pretty much covers

00:49:38.090 --> 00:49:39.180
the Moderator questions.

00:49:39.180 --> 00:49:42.330
So we're coming up towards
the end of the hour.

00:49:42.330 --> 00:49:44.380
We have about five
minutes left.

00:49:44.380 --> 00:49:46.550
I'll just open it up one
more time for any

00:49:46.550 --> 00:49:47.590
questions in the Hangout.

00:49:47.590 --> 00:49:49.590
And then I think we'll
close up shop here.

00:49:49.590 --> 00:49:50.840
Any other questions live?

00:49:55.760 --> 00:49:56.310
OK.

00:49:56.310 --> 00:50:00.060
Well, thank you guys all
for joining us today.

00:50:00.060 --> 00:50:02.540
Hope you got something
out of it.

00:50:02.540 --> 00:50:05.230
And we'll try to do more
these in the future.

00:50:05.230 --> 00:50:06.080
VILLE AIKAS: Thanks, guys.

00:50:06.080 --> 00:50:07.330
MARC COHEN: Thank you.

