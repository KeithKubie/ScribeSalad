WEBVTT
Kind: captions
Language: en

00:00:00.260 --> 00:00:01.343
MALE SPEAKER: Don't worry.

00:00:05.482 --> 00:00:07.360
We're good?

00:00:07.360 --> 00:00:07.970
Great.

00:00:07.970 --> 00:00:09.590
Welcome back to Devoxx.

00:00:09.590 --> 00:00:11.634
And we're here this time
to talk about, well, I

00:00:11.634 --> 00:00:12.550
think, Android, right?

00:00:12.550 --> 00:00:13.120
ROMAIN GUY: Yes.

00:00:13.120 --> 00:00:14.328
MALE SPEAKER: This is Romain.

00:00:14.328 --> 00:00:14.970
This is Chet.

00:00:14.970 --> 00:00:16.540
Or is it the other way around?

00:00:16.540 --> 00:00:17.530
ROMAIN GUY: We're
not sure anymore.

00:00:17.530 --> 00:00:18.335
MALE SPEAKER: Yeah.

00:00:18.335 --> 00:00:19.510
I'm not sure either.

00:00:19.510 --> 00:00:21.220
So welcome guys,
welcome back to Devoxx.

00:00:21.220 --> 00:00:22.440
You've been here many years.

00:00:22.440 --> 00:00:24.648
And this is the second time
in a row that you're here

00:00:24.648 --> 00:00:26.970
announcing, almost, the
release of something,

00:00:26.970 --> 00:00:28.140
following the release.

00:00:28.140 --> 00:00:28.890
CHET HAASE: Maybe.

00:00:28.890 --> 00:00:31.657
Maybe we try to time the
platform releases with Devoxx.

00:00:31.657 --> 00:00:32.990
Maybe more positive coincidence.

00:00:32.990 --> 00:00:34.989
MALE SPEAKER: So it's
Devoxx-driven development.

00:00:34.989 --> 00:00:35.830
ROMAIN GUY: Yes.

00:00:35.830 --> 00:00:36.190
That's a new process.

00:00:36.190 --> 00:00:37.787
I think you're going
to talk about it.

00:00:37.787 --> 00:00:38.620
It's a new patterns.

00:00:38.620 --> 00:00:40.720
CHET HAASE: There is a
process talk tomorrow.

00:00:40.720 --> 00:00:41.235
So maybe.

00:00:41.235 --> 00:00:42.610
MALE SPEAKER:
Yeah, make sure you

00:00:42.610 --> 00:00:43.910
don't miss that one on Parlays.

00:00:43.910 --> 00:00:45.220
It'll be on Parlays, right?

00:00:45.220 --> 00:00:46.136
CHET HAASE: I hope so.

00:00:46.136 --> 00:00:48.260
MALE SPEAKER: If
it's good, only.

00:00:48.260 --> 00:00:49.290
So it should be there.

00:00:49.290 --> 00:00:51.984
So we're here to talk
about Android 4.4.

00:00:51.984 --> 00:00:53.400
That's KitKat, the
KitKat release.

00:00:53.400 --> 00:00:57.600
So we announced two things,
obviously, the software, 4.4,

00:00:57.600 --> 00:00:58.804
and some hardware, I think.

00:00:58.804 --> 00:01:01.470
CHET HAASE: I think there's some
new hardware-- oh wait, there's

00:01:01.470 --> 00:01:02.620
some in my hand.

00:01:02.620 --> 00:01:03.098
ROMAIN GUY: You
happen to have it.

00:01:03.098 --> 00:01:03.230
What a coincidence.

00:01:03.230 --> 00:01:05.271
CHET HAASE: So this is an
example of the Nexus 5.

00:01:05.271 --> 00:01:08.090
This is the white
model, white on black,

00:01:08.090 --> 00:01:09.880
as well as the black on black.

00:01:09.880 --> 00:01:10.382
Both colors.

00:01:10.382 --> 00:01:11.340
MALE SPEAKER: OK, good.

00:01:11.340 --> 00:01:14.870
Two colors available in a number
of countries from day one?

00:01:14.870 --> 00:01:15.650
ROMAIN GUY: Yes.

00:01:15.650 --> 00:01:16.840
I don't remember which ones.

00:01:16.840 --> 00:01:17.969
Many countries, not enough.

00:01:17.969 --> 00:01:19.010
MALE SPEAKER: Not enough.

00:01:19.010 --> 00:01:19.610
It's never enough.

00:01:19.610 --> 00:01:21.526
CHET HAASE: I think the
US, and the other ones

00:01:21.526 --> 00:01:23.270
are a little more vague tome.

00:01:23.270 --> 00:01:23.880
MALE SPEAKER: So
there are a number

00:01:23.880 --> 00:01:25.700
of European countries
for those watching us

00:01:25.700 --> 00:01:27.242
in Europe, certainly.

00:01:27.242 --> 00:01:29.200
Anything you want to
point out about the device

00:01:29.200 --> 00:01:30.630
other than the fact
that it runs KitKat

00:01:30.630 --> 00:01:31.570
which we'll talk
about in a second.

00:01:31.570 --> 00:01:32.819
ROMAIN GUY: I love the screen.

00:01:32.819 --> 00:01:34.030
The screen's amazing.

00:01:34.030 --> 00:01:37.265
CHET HAASE: High resolution,
fast, smooth, nice.

00:01:37.265 --> 00:01:39.140
ROMAIN GUY: Yeah, the
colors are really good.

00:01:39.140 --> 00:01:40.520
And it's super fast, the device.

00:01:40.520 --> 00:01:42.020
CHET HAASE: You
just like the screen

00:01:42.020 --> 00:01:45.980
because it has your
wallpaper on it.

00:01:45.980 --> 00:01:50.380
MALE SPEAKER: Great, so
let's talk about KitKat 4.4.

00:01:50.380 --> 00:01:51.910
Does the numbering,
first of all,

00:01:51.910 --> 00:01:56.380
mean anything in terms
of how much features

00:01:56.380 --> 00:01:57.390
went into this one?

00:01:57.390 --> 00:01:59.770
CHET HAASE: It's actually
exactly 0.1 better

00:01:59.770 --> 00:02:00.980
than the previous release.

00:02:00.980 --> 00:02:01.110
MALE SPEAKER: OK.

00:02:01.110 --> 00:02:02.120
That's a good start.

00:02:02.120 --> 00:02:03.745
CHET HAASE: I would
say the distinction

00:02:03.745 --> 00:02:06.799
on the dot releases, correct
me if I'm wrong is, API bump.

00:02:06.799 --> 00:02:09.340
So there could be some new APIs
that you could take advantage

00:02:09.340 --> 00:02:09.849
of.

00:02:09.849 --> 00:02:12.974
If we're not changing the APIs,
generally, we wouldn't do that.

00:02:12.974 --> 00:02:14.890
It wouldn't be more like
a maintenance release

00:02:14.890 --> 00:02:16.370
on what we've previously done.

00:02:16.370 --> 00:02:17.940
ROMAIN GUY: It's a question
for marketing engineers.

00:02:17.940 --> 00:02:19.615
We don't decide the
version numbers.

00:02:19.615 --> 00:02:19.950
MALE SPEAKER: All right.

00:02:19.950 --> 00:02:20.700
Next question.

00:02:20.700 --> 00:02:22.070
ROMAIN GUY: We just come up
with features, and we fix bugs.

00:02:22.070 --> 00:02:22.460
MALE SPEAKER: Good enough.

00:02:22.460 --> 00:02:22.960
Good enough.

00:02:22.960 --> 00:02:24.690
OK, fine, fair enough.

00:02:24.690 --> 00:02:26.580
Animation framework.

00:02:26.580 --> 00:02:28.990
Is that something new?

00:02:28.990 --> 00:02:31.970
Now why even have
something like that?

00:02:31.970 --> 00:02:34.210
CHET HAASE: Users
demand animations.

00:02:34.210 --> 00:02:38.250
So it's been my personal goal
to make animations almost

00:02:38.250 --> 00:02:41.040
automatic, as far
as they can be.

00:02:41.040 --> 00:02:44.280
So I realize everybody likes
to think about animations as

00:02:44.280 --> 00:02:46.960
much as I do, but they probably
don't have the time to.

00:02:46.960 --> 00:02:49.340
So the more that we can do
to make it easy for them,

00:02:49.340 --> 00:02:50.540
I think the better
the animations are

00:02:50.540 --> 00:02:51.820
going to be in the applications.

00:02:51.820 --> 00:02:53.528
So the main thing that
we did this time--

00:02:53.528 --> 00:02:55.400
we have all kinds of
animation capabilities

00:02:55.400 --> 00:02:57.566
already, but you have to
write a fair amount of code

00:02:57.566 --> 00:02:59.750
to get really good animations.

00:02:59.750 --> 00:03:02.190
We made it easier to do
transitional animations.

00:03:02.190 --> 00:03:05.010
And in fact, the feature
is called transitions.

00:03:05.010 --> 00:03:08.730
And you can, basically,
say start a transition now,

00:03:08.730 --> 00:03:10.930
change your UI by
inflating new layouts

00:03:10.930 --> 00:03:13.200
or modifying the
views that are there.

00:03:13.200 --> 00:03:15.410
And, on the next frame,
it will automatically

00:03:15.410 --> 00:03:17.010
detect what the
changes are in the UI

00:03:17.010 --> 00:03:18.590
and run some sort
of automatic image.

00:03:18.590 --> 00:03:20.840
MALE SPEAKER: And that's an
API, or is it declarative?

00:03:20.840 --> 00:03:22.750
CHET HAASE: It's both.

00:03:22.750 --> 00:03:26.120
You can declare
resources where you

00:03:26.120 --> 00:03:28.390
state this information
ahead of time,

00:03:28.390 --> 00:03:30.060
in addition to layout files.

00:03:30.060 --> 00:03:33.540
Or you can, in your code,
simply say, OK, change the UI

00:03:33.540 --> 00:03:36.159
accordingly, call this method
on the transition's interface.

00:03:36.159 --> 00:03:37.700
So this is in the
transition package.

00:03:37.700 --> 00:03:40.940
ROMAIN GUY: You've basically
programmed itself out

00:03:40.940 --> 00:03:42.121
of your job.

00:03:42.121 --> 00:03:43.620
CHET HAASE: It
wasn't the intention,

00:03:43.620 --> 00:03:45.980
but I'll have to see whether
my badge works when I go home.

00:03:45.980 --> 00:03:47.896
ROMAIN GUY: You should
go talk to your manager

00:03:47.896 --> 00:03:49.240
as well when you come back.

00:03:49.240 --> 00:03:51.582
MALE SPEAKER: There was one
neat feature that I found,

00:03:51.582 --> 00:03:53.290
which is full screen,
or there's probably

00:03:53.290 --> 00:03:53.863
a better name for that.

00:03:53.863 --> 00:03:54.810
ROMAIN GUY: The immersive mode.

00:03:54.810 --> 00:03:55.230
MALE SPEAKER: Immersive mode.

00:03:55.230 --> 00:03:55.730
OK.

00:03:55.730 --> 00:03:56.480
ROMAIN GUY: So.

00:03:56.480 --> 00:03:58.050
It's something
that we had before.

00:03:58.050 --> 00:04:00.480
So it's the ability to get
rid of the system UI, the nav

00:04:00.480 --> 00:04:01.750
bar, and the status bar.

00:04:01.750 --> 00:04:03.890
So some apps, we're able
to do it, video playback,

00:04:03.890 --> 00:04:04.530
for instance.

00:04:04.530 --> 00:04:06.364
But now it's open
to all applications.

00:04:06.364 --> 00:04:08.030
We're going to talk
about it in details.

00:04:08.030 --> 00:04:09.260
And I'll talk what's
new in Android.

00:04:09.260 --> 00:04:10.635
There's going to be some code.

00:04:10.635 --> 00:04:12.580
It's very easy to use
and makes a lot of sense

00:04:12.580 --> 00:04:16.282
for games or immersive
content like books, magazines,

00:04:16.282 --> 00:04:16.990
things like that.

00:04:16.990 --> 00:04:17.600
MALE SPEAKER: OK, great.

00:04:17.600 --> 00:04:18.899
CHET HAASE: You can
think of the main change

00:04:18.899 --> 00:04:21.290
being that you can have a
full screen application where

00:04:21.290 --> 00:04:23.415
the user can actually
interact with the application

00:04:23.415 --> 00:04:25.269
while remaining full
screen, as opposed to,

00:04:25.269 --> 00:04:27.060
as soon as they tap,
the bars come back in,

00:04:27.060 --> 00:04:28.180
which was the previous behavior.

00:04:28.180 --> 00:04:30.075
MALE SPEAKER: So how
do I exit that mode?

00:04:30.075 --> 00:04:31.470
ROMAIN GUY: You can swipe
from the top or swipe

00:04:31.470 --> 00:04:33.200
from the bottom, and
you get the bars back.

00:04:33.200 --> 00:04:34.616
MALE SPEAKER: Can
my kids do that?

00:04:34.616 --> 00:04:35.594
I hope they can't.

00:04:35.594 --> 00:04:37.760
ROMAIN GUY: They can, but
if they learn the gesture.

00:04:37.760 --> 00:04:39.444
CHET HAASE: How
smart are your kids?

00:04:39.444 --> 00:04:40.860
MALE SPEAKER: Let's
not get there.

00:04:43.560 --> 00:04:45.602
Another thing I
like, and we'll try

00:04:45.602 --> 00:04:47.060
not to go through
all the features.

00:04:47.060 --> 00:04:48.268
And there'll be a great talk.

00:04:48.268 --> 00:04:51.680
I'm sure you guys will
deliver available on Parlays.

00:04:51.680 --> 00:04:54.750
Another interesting feature
is screen recording.

00:04:54.750 --> 00:04:55.640
CHET HAASE: Yes.

00:04:55.640 --> 00:04:56.300
Awesome for developers.

00:04:56.300 --> 00:04:57.770
MALE SPEAKER: Because, I
mean, it's great for you guys.

00:04:57.770 --> 00:04:59.390
Probably, it's
great for developers

00:04:59.390 --> 00:05:02.560
for showcasing their
apps on the store.

00:05:02.560 --> 00:05:03.880
How does it work?

00:05:03.880 --> 00:05:05.622
ROMAIN GUY: For
the developer, it's

00:05:05.622 --> 00:05:08.080
great both because they can
showcase their app on websites.

00:05:08.080 --> 00:05:11.660
They don't have to use the
shaky cam version of recording.

00:05:11.660 --> 00:05:13.554
It's also really
useful for debugging.

00:05:13.554 --> 00:05:15.220
You can go frame by
frame in your video.

00:05:15.220 --> 00:05:17.685
And you can see if there's a
glitch, or performance issue,

00:05:17.685 --> 00:05:18.000
you can see that.

00:05:18.000 --> 00:05:19.930
That's actually how
we did most of that.

00:05:19.930 --> 00:05:22.700
So right now, there's a
command line tool with ADB.

00:05:22.700 --> 00:05:25.140
You type ADB shell
screen record.

00:05:25.140 --> 00:05:26.910
And you get to an MPEG-4.

00:05:26.910 --> 00:05:28.825
Or from Android Studio,
there's a new button.

00:05:28.825 --> 00:05:31.620
In one click, you
can record a video.

00:05:31.620 --> 00:05:33.810
The only limitation right
now is that you can only

00:05:33.810 --> 00:05:36.552
record up to three minutes.

00:05:36.552 --> 00:05:37.270
That's it.

00:05:37.270 --> 00:05:38.042
MALE SPEAKER: OK.

00:05:38.042 --> 00:05:38.430
Good.

00:05:38.430 --> 00:05:40.721
But there's no triggering
those directly from the phone

00:05:40.721 --> 00:05:42.370
like you can take a screen shot?

00:05:42.370 --> 00:05:42.690
ROMAIN GUY: Not at the moment.

00:05:42.690 --> 00:05:43.606
MALE SPEAKER: Not yet.

00:05:43.606 --> 00:05:44.450
OK, good.

00:05:44.450 --> 00:05:45.164
Project Svelte?

00:05:45.164 --> 00:05:45.830
CHET HAASE: Yes.

00:05:45.830 --> 00:05:48.930
MALE SPEAKER: So you guys
talked about Butter last year.

00:05:48.930 --> 00:05:52.090
Butter was not good after all,
and we need to go on a diet.

00:05:52.090 --> 00:05:53.515
What's the deal there?

00:05:53.515 --> 00:05:56.210
CHET HAASE: You know, all
diets are in cycles anyway.

00:05:56.210 --> 00:05:58.900
So a little too much Butter,
a little more diet needed.

00:05:58.900 --> 00:06:01.305
MALE SPEAKER: So this
is about running on--

00:06:01.305 --> 00:06:02.680
CHET HAASE: On
lower end devices.

00:06:02.680 --> 00:06:03.763
MALE SPEAKER: End devices.

00:06:03.763 --> 00:06:05.550
So how do you define this?

00:06:05.550 --> 00:06:07.520
CHET HAASE: 512 megabytes
is what we aimed at

00:06:07.520 --> 00:06:09.607
to run reasonably well on.

00:06:09.607 --> 00:06:11.690
It turns out that there's
still a bunch of devices

00:06:11.690 --> 00:06:14.930
still coming out in the market
new with older releases.

00:06:14.930 --> 00:06:17.310
And the reason is because
the newer releases simply

00:06:17.310 --> 00:06:20.410
had too much memory footprint
for them to run comfortably.

00:06:20.410 --> 00:06:23.410
Not enough applications
could run simultaneously.

00:06:23.410 --> 00:06:26.350
So what we've done is slim
down the entire platform

00:06:26.350 --> 00:06:29.274
to make it easier to run more
applications in only Svelte.

00:06:29.274 --> 00:06:31.190
MALE SPEAKER: So how did
you actually do that?

00:06:31.190 --> 00:06:33.519
Is that at the OS
level, at the app level,

00:06:33.519 --> 00:06:34.810
everywhere you could shave off?

00:06:34.810 --> 00:06:36.393
ROMAIN GUY: Everywhere
it's new tools,

00:06:36.393 --> 00:06:38.900
new APIs, lots of
work in the OS itself.

00:06:38.900 --> 00:06:40.330
So new kernel features.

00:06:40.330 --> 00:06:41.750
A lot of changes
in the framework.

00:06:41.750 --> 00:06:43.940
We've also analyzed
all the apps.

00:06:43.940 --> 00:06:47.250
And the app developers
worked great in optimizing

00:06:47.250 --> 00:06:48.300
the applications.

00:06:48.300 --> 00:06:50.290
So today, we gave a
bunch of tips and tricks

00:06:50.290 --> 00:06:52.623
on what you can do, what tools
can you use in your apps,

00:06:52.623 --> 00:06:54.760
and what you can do to
use less memory yourself.

00:06:54.760 --> 00:06:57.010
And it's very important
because there are lot of users

00:06:57.010 --> 00:06:59.020
out there with phones
with-- it's still

00:06:59.020 --> 00:07:01.440
a lot of memory,
512 megs of RAM.

00:07:01.440 --> 00:07:02.840
You want as many
apps as possible

00:07:02.840 --> 00:07:03.840
to run at the same time.

00:07:03.840 --> 00:07:05.215
MALE SPEAKER: Do
you want to talk

00:07:05.215 --> 00:07:07.656
about prog stats, enhancements?

00:07:07.656 --> 00:07:09.370
And performance
tools in general?

00:07:09.370 --> 00:07:11.290
ROMAIN GUY: Yeah, so,
I mean, we come up

00:07:11.290 --> 00:07:13.550
with new tools in
every release to help

00:07:13.550 --> 00:07:16.044
the team itself
optimize the platform.

00:07:16.044 --> 00:07:17.460
And we make those
tools available.

00:07:17.460 --> 00:07:20.052
So everything we've used on
Project Svelte and Project

00:07:20.052 --> 00:07:21.510
Butter before that,
those are tools

00:07:21.510 --> 00:07:24.187
made available to
developers in KitKat.

00:07:24.187 --> 00:07:26.020
CHET HAASE: In fact,
the tips that we talked

00:07:26.020 --> 00:07:30.340
about in the session that
we had earlier today,

00:07:30.340 --> 00:07:31.900
it was tips for
Android developers.

00:07:31.900 --> 00:07:33.450
But they really came
from our own experience.

00:07:33.450 --> 00:07:35.920
It's the approaches that we
use, the tools that we use,

00:07:35.920 --> 00:07:37.850
and the optimizations
that we implement

00:07:37.850 --> 00:07:39.369
to make the platform smaller.

00:07:39.369 --> 00:07:41.535
And maybe developers can
think about the same things

00:07:41.535 --> 00:07:43.600
to make their applications
smaller as well.

00:07:43.600 --> 00:07:44.550
MALE SPEAKER: Great.

00:07:44.550 --> 00:07:47.656
Another new feature
is printing support?

00:07:47.656 --> 00:07:48.780
CHET HAASE: Yes, excellent.

00:07:48.780 --> 00:07:50.030
MALE SPEAKER: Based on PDF.

00:07:50.030 --> 00:07:51.279
So it's not just for printing.

00:07:51.279 --> 00:07:52.865
It's also for generating PDFs.

00:07:52.865 --> 00:07:54.055
ROMAIN GUY: That's
actually the side effect

00:07:54.055 --> 00:07:55.346
of adding support for printing.

00:07:55.346 --> 00:07:56.350
You can generate PDFs.

00:07:56.350 --> 00:07:56.855
MALE SPEAKER: Right.

00:07:56.855 --> 00:07:58.771
Well, you can look at
it both ways, I suppose.

00:07:58.771 --> 00:08:00.047
ROMAIN GUY: Yeah.

00:08:00.047 --> 00:08:01.380
But they are pretty independent.

00:08:01.380 --> 00:08:02.879
So if your applications,
if you want

00:08:02.879 --> 00:08:05.600
to be able to export PDFs to
just email them, or store them

00:08:05.600 --> 00:08:08.990
somewhere else, you don't
have to use the printing APIs.

00:08:08.990 --> 00:08:11.734
MALE SPEAKER: So speaking
of physical printers,

00:08:11.734 --> 00:08:12.900
which ones can you print to?

00:08:12.900 --> 00:08:14.108
What's the protocols you use?

00:08:14.108 --> 00:08:16.449
ROMAIN GUY: So any Cloud
Print enabled device.

00:08:16.449 --> 00:08:18.240
So if you have Cloud
Print on your desktop,

00:08:18.240 --> 00:08:19.515
it's going to work with
pretty much any printer.

00:08:19.515 --> 00:08:21.265
If you have a Cloud
Print enabled printer,

00:08:21.265 --> 00:08:22.530
it works directly.

00:08:22.530 --> 00:08:24.320
And you can also
install plug-ins.

00:08:24.320 --> 00:08:27.530
So on the Nexus 5, we
ship with the HP plug-in.

00:08:27.530 --> 00:08:32.319
So any HP printer or recent
HP printer will work.

00:08:32.319 --> 00:08:35.518
And I'm sure there'll be more
plug-ins on the Play Store

00:08:35.518 --> 00:08:36.047
very soon.

00:08:36.047 --> 00:08:36.880
MALE SPEAKER: Right.

00:08:36.880 --> 00:08:38.980
Awesome.

00:08:38.980 --> 00:08:40.904
Storage Access Framework?

00:08:40.904 --> 00:08:44.580
CHET HAASE: Yes, it's a
concept of documents and sort

00:08:44.580 --> 00:08:47.915
of unified access to
different places where

00:08:47.915 --> 00:08:48.790
you can store things.

00:08:48.790 --> 00:08:50.790
So your application
no longer needs

00:08:50.790 --> 00:08:53.580
to figure out how do I access
the area in SD card, where

00:08:53.580 --> 00:08:55.850
I want to put it,
or on the cloud.

00:08:55.850 --> 00:08:58.740
Or if you're a service
that provides storage,

00:08:58.740 --> 00:09:01.330
like a Dropbox or
whatever, out in the cloud,

00:09:01.330 --> 00:09:04.160
you don't need to figure out
how to expose that to users.

00:09:04.160 --> 00:09:08.040
Instead, there's a unified way
to both publish your storage

00:09:08.040 --> 00:09:09.780
mechanism as well
as for the user

00:09:09.780 --> 00:09:11.572
to access the published
storage mechanisms.

00:09:11.572 --> 00:09:12.488
MALE SPEAKER: So yeah.

00:09:12.488 --> 00:09:14.330
So it's good for providers
as well as users.

00:09:14.330 --> 00:09:20.860
It's like a modern version
of an open dialogue and file

00:09:20.860 --> 00:09:22.365
chooser, that type of thing?

00:09:22.365 --> 00:09:22.750
ROMAIN GUY: That's exactly it.

00:09:22.750 --> 00:09:23.270
MALE SPEAKER: OK cool.

00:09:23.270 --> 00:09:23.760
ROMAIN GUY: It's
document-oriented.

00:09:23.760 --> 00:09:24.965
It's not file-oriented.

00:09:24.965 --> 00:09:26.506
MALE SPEAKER: It's
document-oriented.

00:09:26.506 --> 00:09:29.420
OK, that works.

00:09:29.420 --> 00:09:30.830
OK, the WebView.

00:09:30.830 --> 00:09:32.630
The WebView is based
on Chromium now.

00:09:32.630 --> 00:09:33.880
ROMAIN GUY: Yeah, so big news.

00:09:33.880 --> 00:09:34.710
Based on Chromium.

00:09:34.710 --> 00:09:37.684
So brand new
implementation, same APIs.

00:09:37.684 --> 00:09:39.100
Some of them have
been deprecated,

00:09:39.100 --> 00:09:40.470
but it's a drop-in replacement.

00:09:40.470 --> 00:09:41.680
Nothing to do in your apps.

00:09:41.680 --> 00:09:42.551
It runs on Chromium.

00:09:42.551 --> 00:09:44.800
MALE SPEAKER: You don't
actually have a choice, right?

00:09:44.800 --> 00:09:46.466
ROMAIN GUY: No, you
don't have a choice.

00:09:46.466 --> 00:09:48.930
Which is good because it
does better HTML5 support.

00:09:48.930 --> 00:09:53.580
The Chromium team is constantly
working on improving things.

00:09:53.580 --> 00:09:55.080
You also get remote debugging.

00:09:55.080 --> 00:09:57.830
So for USB, you can
use Chrome to remove

00:09:57.830 --> 00:10:00.850
debug on the phone,
which is really useful.

00:10:00.850 --> 00:10:01.970
MALE SPEAKER: Cool.

00:10:01.970 --> 00:10:04.830
So we had a lot of people
trying it out and then having

00:10:04.830 --> 00:10:09.370
some features, finding out new
things they can do with it.

00:10:09.370 --> 00:10:12.130
Because with Chromium
comes support

00:10:12.130 --> 00:10:16.150
for a set of new
features around HTML5,

00:10:16.150 --> 00:10:19.060
and they're all new
apps that you can build.

00:10:19.060 --> 00:10:21.640
ROMAIN GUY: So I haven't seen
new apps taking advantage

00:10:21.640 --> 00:10:24.690
of HTML5 yet, but I'm sure we'll
see that coming very shortly.

00:10:24.690 --> 00:10:28.050
MALE SPEAKER: Right, because
this is where support for HTML5

00:10:28.050 --> 00:10:31.850
will come, and in the
browser and Android.

00:10:31.850 --> 00:10:32.750
Let's see.

00:10:32.750 --> 00:10:37.350
One more thing I had
was SMS Provider.

00:10:37.350 --> 00:10:38.800
ROMAIN GUY: So we've had an API.

00:10:38.800 --> 00:10:41.970
It was a hidden API that a
lot of people were using.

00:10:41.970 --> 00:10:43.530
It was not enough show API.

00:10:43.530 --> 00:10:45.909
So now we have enough show
API to access the SMSs

00:10:45.909 --> 00:10:46.450
on the phone.

00:10:46.450 --> 00:10:49.560
And we have the concept of
the default SMS application.

00:10:49.560 --> 00:10:52.430
So only the default
SMS application

00:10:52.430 --> 00:10:55.610
as chosen by the user will
be able to write to the SMS

00:10:55.610 --> 00:10:56.950
database.

00:10:56.950 --> 00:10:59.005
But now, at least we have
show support for that.

00:10:59.005 --> 00:11:01.520
But we let the user in control.

00:11:01.520 --> 00:11:02.370
MALE SPEAKER: Great.

00:11:02.370 --> 00:11:05.530
Two more things I want to
cover before we close this.

00:11:05.530 --> 00:11:06.390
One is tooling.

00:11:06.390 --> 00:11:08.210
Can you say few words
on Android Studio?

00:11:08.210 --> 00:11:10.455
There's a lot of work
going on on this.

00:11:10.455 --> 00:11:13.075
And [INAUDIBLE] or Xavier
are not here with us

00:11:13.075 --> 00:11:13.866
at this conference.

00:11:13.866 --> 00:11:15.270
CHET HAASE: Yeah,
so on their behalf,

00:11:15.270 --> 00:11:16.978
I'll talk about all
the work that they've

00:11:16.978 --> 00:11:18.850
done that I'm not aware of.

00:11:18.850 --> 00:11:21.651
There's obviously work going
on on the tools all the time

00:11:21.651 --> 00:11:22.150
anyway.

00:11:22.150 --> 00:11:24.920
But there's been a huge
effort behind Android Studio.

00:11:24.920 --> 00:11:27.010
It's still early
release, beta release,

00:11:27.010 --> 00:11:28.790
I forget what the
official terminology is.

00:11:28.790 --> 00:11:31.590
ROMAIN GUY: It's the
Google I/O preview.

00:11:31.590 --> 00:11:35.760
CHET HAASE: Strangely, 0.3.4
just came out this week.

00:11:35.760 --> 00:11:38.014
And it provides
one of the changes

00:11:38.014 --> 00:11:39.680
is, there's some
language level changes.

00:11:39.680 --> 00:11:42.290
So you can now take advantage of
things like strings and switch

00:11:42.290 --> 00:11:42.680
statements--

00:11:42.680 --> 00:11:44.930
MALE SPEAKER: I want to get
to that, absolutely, yeah.

00:11:44.930 --> 00:11:49.580
CHET HAASE: Diamond operators,
the multi exception catch,

00:11:49.580 --> 00:11:50.890
and the resource closing.

00:11:50.890 --> 00:11:51.519
I forget.

00:11:51.519 --> 00:11:53.310
ROMAIN GUY: To measure
resource management.

00:11:53.310 --> 00:11:55.768
CHET HAASE: So the cool thing
about these language features

00:11:55.768 --> 00:11:58.170
is that all of them,
except the last one,

00:11:58.170 --> 00:12:01.650
the resource management is they
are available on any platform

00:12:01.650 --> 00:12:04.370
release because the [INAUDIBLE]
Compiler basically will just

00:12:04.370 --> 00:12:06.350
compile it to whatever
it needs to be.

00:12:06.350 --> 00:12:08.450
It's kind of syntactic
sugar, right?

00:12:08.450 --> 00:12:13.220
The resource management
is capability

00:12:13.220 --> 00:12:15.110
of the platform you
need to do target SDK.

00:12:15.110 --> 00:12:16.540
MALE SPEAKER: Because
there's an interface

00:12:16.540 --> 00:12:17.456
you need to implement.

00:12:17.456 --> 00:12:18.920
ROMAIN GUY: There's
an interface.

00:12:18.920 --> 00:12:20.170
MALE SPEAKER: So that was
the, actually, last point

00:12:20.170 --> 00:12:22.295
I want to get to is that
you get all those language

00:12:22.295 --> 00:12:24.550
evolution which,
actually, a lot of them

00:12:24.550 --> 00:12:26.480
do make sense for
Android developers.

00:12:26.480 --> 00:12:28.373
So there's multi-catch--

00:12:28.373 --> 00:12:30.460
ROMAIN GUY: I'm pretty
excited for those features.

00:12:30.460 --> 00:12:32.390
MALE SPEAKER: Auto-closable is
a pretty important one as well.

00:12:32.390 --> 00:12:33.931
ROMAIN GUY: And
download the features

00:12:33.931 --> 00:12:36.670
too, divided support
for drawable previews.

00:12:36.670 --> 00:12:38.540
The integrated
[INAUDIBLE] better.

00:12:38.540 --> 00:12:40.820
So you can start screen
recording from Android Studio

00:12:40.820 --> 00:12:41.980
directly.

00:12:41.980 --> 00:12:43.810
There's a new trace
view UI that's

00:12:43.810 --> 00:12:47.050
very similar to sys
trace, [INAUDIBLE] to use.

00:12:47.050 --> 00:12:50.290
I mean, they're coming out
with new releases all the time.

00:12:50.290 --> 00:12:52.665
And every time they do
a pretty amazing job

00:12:52.665 --> 00:12:54.760
at coming up with new features.

00:12:54.760 --> 00:12:55.460
So yeah.

00:12:55.460 --> 00:12:55.950
MALE SPEAKER: OK, great.

00:12:55.950 --> 00:12:56.850
ROMAIN GUY: It's exciting.

00:12:56.850 --> 00:12:57.830
MALE SPEAKER:
Well, I guess guys,

00:12:57.830 --> 00:12:59.288
that's all the time
we have for it.

00:12:59.288 --> 00:13:02.960
Thanks for showing up
with our friend here.

00:13:02.960 --> 00:13:08.080
And I think go get there,
and then use those APIs,

00:13:08.080 --> 00:13:09.790
and then provide feedback.

00:13:09.790 --> 00:13:11.239
That's our call to action here.

00:13:11.239 --> 00:13:12.030
ROMAIN GUY: Thanks.

00:13:12.030 --> 00:13:13.363
CHET HAASE: Sounds good, thanks.

00:13:13.363 --> 00:13:14.610
MALE SPEAKER: Thank you.

