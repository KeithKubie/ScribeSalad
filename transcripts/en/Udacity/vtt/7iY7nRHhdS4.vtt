WEBVTT
Kind: captions
Language: en

00:00:00.580 --> 00:00:04.100
Okay, so
back to activity content transitions.

00:00:04.100 --> 00:00:07.860
These transitions allow you to animate
the views within an activity when they

00:00:07.860 --> 00:00:09.650
enter or leave it.

00:00:09.650 --> 00:00:12.780
Say you have two activities, A and B.

00:00:12.780 --> 00:00:17.980
&gt;From activity A, we can launch
activity B by going startActivity and

00:00:17.980 --> 00:00:20.710
return by hitting the back button.

00:00:20.710 --> 00:00:23.810
When A calls startActivity
to launch activity B,

00:00:23.810 --> 00:00:27.960
we have the opportunity to run two
sets of transition animations.

00:00:27.960 --> 00:00:32.350
Firstly we can run an exit transition
on the views in activity A.

00:00:32.350 --> 00:00:36.710
And secondly, we can run an enter
transition on the views in activity B.

00:00:36.710 --> 00:00:40.724
We can define these transitions either
in code, or declare them in XML and

00:00:40.724 --> 00:00:43.460
then set them on the activities feed.

00:00:43.460 --> 00:00:46.570
Let's take a look at
examples of both approaches.

00:00:46.570 --> 00:00:51.090
Let's, for example, add animations to
this app, which shows a grid of images.

00:00:51.090 --> 00:00:55.230
Clicking on an individual image
takes you to a detail screen.

00:00:55.230 --> 00:00:58.420
So here's what it looks like before
we add any content transitions,

00:00:58.420 --> 00:01:00.349
we just see the standard
window animations.

00:01:01.690 --> 00:01:06.050
Let's add an exit transition
to the first grid screen.

00:01:06.050 --> 00:01:11.120
We'll use an explode transition,
which moves all of the views outwards.

00:01:11.120 --> 00:01:12.160
Let's do this declaratively.

00:01:13.270 --> 00:01:17.611
First, we create a new file
in res/transition, and

00:01:17.611 --> 00:01:20.440
we're going to call it grid_exit.

00:01:20.440 --> 00:01:24.310
You may have to create this transition
folder if it doesn't already exist.

00:01:24.310 --> 00:01:28.480
Now, the transition itself uses
the exact same syntax as we saw earlier.

00:01:28.480 --> 00:01:32.470
To use the built-in explode transition,
all we need is this explode tag.

00:01:33.520 --> 00:01:36.420
Now, to assign the exit
transition to the activity,

00:01:36.420 --> 00:01:40.670
we'll open the activities theme and
add an entry for

00:01:40.670 --> 00:01:46.340
windowExitTransition which points
to the transition we just defined.

00:01:46.340 --> 00:01:50.020
Lastly, there are a couple of things we
need to do to enable activity content

00:01:50.020 --> 00:01:51.230
transitions.

00:01:51.230 --> 00:01:55.280
First we'll need to alter our
call to start activity to use

00:01:55.280 --> 00:01:58.490
this variant which takes a bundle.

00:01:58.490 --> 00:02:01.360
We'll go into this bundle a bit shortly.

00:02:01.360 --> 00:02:06.090
Next we might need to set
the windowContentTransitions flag

00:02:06.090 --> 00:02:09.220
to true on your applications theme.

00:02:09.220 --> 00:02:12.010
If you're already inheriting
from a material theme or

00:02:12.010 --> 00:02:15.800
AppCompat then this will
automatically be set for you.

00:02:15.800 --> 00:02:18.670
Okay, so now that we've done that,
here's how it looks.

00:02:18.670 --> 00:02:19.320
Not too bad.

00:02:19.320 --> 00:02:24.350
We see that the views move outwards
as we move on to the detail screen.

00:02:24.350 --> 00:02:27.390
Let's add another transition to
the content on the detail screen

00:02:27.390 --> 00:02:28.670
as it comes in.

00:02:28.670 --> 00:02:31.900
Let's slide the text into
place from the bottom.

00:02:31.900 --> 00:02:34.630
This time we'll create
the transition from code.

00:02:34.630 --> 00:02:40.180
In the DetailActivity we instantiate
a new slide transition object.

00:02:40.180 --> 00:02:44.160
And we here, in the constructor,
tell it to enter from the bottom edge.

00:02:44.160 --> 00:02:47.179
We then set which views
it's acting on using this,

00:02:47.179 --> 00:02:49.860
addTarget call passing
in the id of the view.

00:02:49.860 --> 00:02:51.696
We'll also set the duration and

00:02:51.696 --> 00:02:54.990
interpolator to quickly
ease the view into place.

00:02:54.990 --> 00:02:56.800
More on these concepts soon.

00:02:56.800 --> 00:03:00.210
Finally, we call
setEnterTransition on the window.

00:03:00.210 --> 00:03:00.880
Here's the result.

00:03:01.890 --> 00:03:07.710
Well, the title and description slide
in nicely, but the image just appears.

00:03:07.710 --> 00:03:11.550
This is because by opting in to
use activity content transitions,

00:03:11.550 --> 00:03:15.220
we're implicitly turning off
the window animation feature.

00:03:15.220 --> 00:03:19.670
As our transition doesn't target
the image specifically, it just appears.

00:03:19.670 --> 00:03:21.160
We'll fix that shortly.

00:03:21.160 --> 00:03:24.190
Let's take a second to consider
these two different approaches for

00:03:24.190 --> 00:03:27.200
creating transitions in code and XML.

00:03:27.200 --> 00:03:29.670
Now, the code approach
might involve less steps,

00:03:29.670 --> 00:03:31.890
but there are some
trade-offs to consider.

00:03:31.890 --> 00:03:35.890
Firstly, it's harder to reuse
the transition in other places.

00:03:35.890 --> 00:03:38.520
Also, this example was
relatively simple.

00:03:38.520 --> 00:03:41.290
But as you create more
complicated transitions,

00:03:41.290 --> 00:03:43.690
then this can get a bit more complex.

00:03:43.690 --> 00:03:46.900
It can be nice to keep this
contained in a single XML file for

00:03:46.900 --> 00:03:50.600
good separation of concerns and
to keep your activities clean.

00:03:50.600 --> 00:03:54.630
Lastly, as we mentioned,
this feature was introduced in API 21.

00:03:54.630 --> 00:03:58.360
So we should guard our code to not
attempt to use APIs that don't exist on

00:03:58.360 --> 00:03:59.900
earlier versions.

00:03:59.900 --> 00:04:06.150
In the code approach you can use an API
check like this or declaratively,

00:04:06.150 --> 00:04:11.288
you can use a resource qualifier
such as transition-v21 and

00:04:11.288 --> 00:04:15.520
values-v21 to only use it
on the newer platforms.

00:04:15.520 --> 00:04:18.970
As you might have guessed, I'm quite
a fan of the declarative approach, but

00:04:18.970 --> 00:04:22.250
pick the one that makes the most
sense for your use case.

00:04:22.250 --> 00:04:23.412
You can even mix and

00:04:23.412 --> 00:04:28.620
match by using a transition inflator
to load the XML transition in code.

00:04:28.620 --> 00:04:32.790
Now you may have noticed that when we
hit the back button to return from

00:04:32.790 --> 00:04:36.520
the details page to the grid,
our explode transition reversed,

00:04:36.520 --> 00:04:38.380
or imploded, I guess.

00:04:38.380 --> 00:04:39.922
Now, this is a default behavior,

00:04:39.922 --> 00:04:43.730
to reverse any transitions
that you set on the way back.

00:04:43.730 --> 00:04:46.840
But you can, of course,
hook into this and set your own.

00:04:46.840 --> 00:04:50.730
So in addition to the enter and
exit transitions we've looked at,

00:04:50.730 --> 00:04:54.460
you're also able to specify return and
re-enter transitions.

00:04:55.650 --> 00:04:58.930
So going from activity A to B,
and back again,

00:04:58.930 --> 00:05:03.440
the sequence would be first,
an exit transition on activity A,

00:05:03.440 --> 00:05:06.920
followed by the enter transition on
activity B we've already looked at.

00:05:06.920 --> 00:05:07.880
Then when you hit back,

00:05:07.880 --> 00:05:13.280
you have the opportunity to run a return
transition on the views in activity B,

00:05:13.280 --> 00:05:16.990
followed by a re-enter transition
on the views in activity A.

00:05:18.010 --> 00:05:22.090
Let's hook into the re-enter event to
customize the behavior when returning

00:05:22.090 --> 00:05:24.100
from the details page to the grid.

00:05:24.100 --> 00:05:27.820
Let's make the items slide
in from the top like this.

00:05:27.820 --> 00:05:33.160
This is as easy as simply specifying
a new transition in the theme like so.

00:05:33.160 --> 00:05:37.100
So here the windowReenterTransition
pointing to one of the default platform

00:05:37.100 --> 00:05:37.760
transitions.

