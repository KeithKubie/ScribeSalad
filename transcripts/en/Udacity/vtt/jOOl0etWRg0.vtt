WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.000
[Norvig] And the answer is simple.

00:00:02.000 --> 00:00:10.000
We take the maximum out of all the hands, with the key equal to the hand_rank.

00:00:10.000 --> 00:00:12.000
I like this definition because it's so simple--

00:00:12.000 --> 00:00:14.000
the whole body is just 1 line--

00:00:14.000 --> 00:00:19.000
and also because it corresponds so closely to the problem specification.

00:00:19.000 --> 00:00:23.000
The specification says, return the highest ranking hand.

00:00:23.000 --> 00:00:28.000
The function definition says, return the max of the hands according to the hand_rank,

00:00:28.000 --> 00:00:30.000
which is basically the same thing.

00:00:30.000 --> 00:00:33.000
It's easy to see that the implementation matches the specification.

00:00:33.000 --> 00:00:37.000
Now, if we can just make the hand_rank function clear and correct,

00:00:37.000 --> 00:00:39.000
we'll be in great shape.

00:00:39.000 --> 00:00:43.000
But before moving on to defining hand_rank, which will be the most complex function

00:00:43.000 --> 00:00:46.000
that we will write, it's a good idea to think about how the functions will be used

00:00:46.000 --> 00:00:49.000
and to write down some test cases.

00:00:49.000 --> 00:00:53.000
There are several ways to write tests in Python, and here's the simplest way I know.

00:00:53.000 --> 00:00:58.000
That is, we define and then call a function.

00:00:58.000 --> 00:01:04.000
I'm calling the function here test, and test consists of some setup of some variables

00:01:04.000 --> 00:01:09.000
and then some tests that I'm writing with the assert statement.

00:01:09.000 --> 00:01:12.000
An assert statement in Python, if you haven't seen that before, says,

00:01:12.000 --> 00:01:15.000
I'm asserting that the following thing must be true.

00:01:15.000 --> 00:01:20.000
And if it's not true, then the program will stop and print an error message.

00:01:20.000 --> 00:01:26.000
If it is true, it'll just move on, and if the tests pass--here I have only 1 test--

00:01:26.000 --> 09:59:59.000
if that test passed, then we'll return tests pass and print that.

