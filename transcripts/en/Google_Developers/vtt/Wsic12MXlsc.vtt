WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.778
[MUSIC PLAYING]

00:00:05.057 --> 00:00:05.890
WAYNE PIEKARSKI: Hi.

00:00:05.890 --> 00:00:07.960
I'm Wayne Piekarski,
and today I'm

00:00:07.960 --> 00:00:11.080
going to show you how you can
take the Google Assistant SDK

00:00:11.080 --> 00:00:13.060
and build it into your
existing projects,

00:00:13.060 --> 00:00:15.100
from adding smarts
to a toy robot

00:00:15.100 --> 00:00:18.880
to having your electronic
potted plant talk back to you.

00:00:18.880 --> 00:00:22.540
So what exactly can the Google
Assistant SDK help you with?

00:00:22.540 --> 00:00:26.050
With the SDK, your device
can provide the full Google

00:00:26.050 --> 00:00:27.910
Assistant experience,
which allows

00:00:27.910 --> 00:00:31.900
you to talk to Google to ask
questions and get things done.

00:00:31.900 --> 00:00:33.760
With Actions on
Google, you can also

00:00:33.760 --> 00:00:36.770
extend the Google Assistant
with your own commands.

00:00:36.770 --> 00:00:38.770
For example, you
could build an action

00:00:38.770 --> 00:00:40.870
to change the state
of the local device,

00:00:40.870 --> 00:00:44.230
such as turning on an LED
light or moving a robot.

00:00:44.230 --> 00:00:47.560
In addition, you can use
either the OK Google hot word

00:00:47.560 --> 00:00:50.620
or a button that you provide to
start talking with the Google

00:00:50.620 --> 00:00:52.260
Assistant.

00:00:52.260 --> 00:00:54.870
Finally, you also get to
see the transcribed text

00:00:54.870 --> 00:00:56.130
of what the user says.

00:00:56.130 --> 00:00:57.570
You can use this
text to implement

00:00:57.570 --> 00:00:59.760
additional local
device functionality

00:00:59.760 --> 00:01:01.350
based on the conversation.

00:01:01.350 --> 00:01:04.950
For example, you could scan for
certain happy or sad keywords

00:01:04.950 --> 00:01:07.520
and change the mood
lighting of a device.

00:01:07.520 --> 00:01:09.620
The Google Assistant
SDK is designed

00:01:09.620 --> 00:01:11.840
to make all this easy
and straightforward,

00:01:11.840 --> 00:01:15.270
helping you get from 0 to
prototype very quickly.

00:01:15.270 --> 00:01:18.140
For example, you can use
the SDK's Python library

00:01:18.140 --> 00:01:20.870
and run it on your own
Raspberry Pi 3 device.

00:01:20.870 --> 00:01:23.670
And it also works with
most Linux distributions.

00:01:23.670 --> 00:01:27.440
Best of all, the implementation
uses public GRPC bindings

00:01:27.440 --> 00:01:30.170
and can be used to generate an
implementation for any language

00:01:30.170 --> 00:01:31.310
that you want.

00:01:31.310 --> 00:01:33.950
If this sounds like fun, the
best way to get started is

00:01:33.950 --> 00:01:36.955
to check out the documentation
at developers.googl

00:01:36.955 --> 00:01:39.380
e.com/assistant/sdk.

00:01:39.380 --> 00:01:42.190
And also try out some of
the samples we've provided.

00:01:42.190 --> 00:01:44.120
There are step-by-step
instructions

00:01:44.120 --> 00:01:46.370
on how to get something
working on your device.

00:01:46.370 --> 00:01:50.070
And then you can go from there
with building your own ideas.

00:01:50.070 --> 00:01:52.040
We also have a developer
community on Google+

00:01:52.040 --> 00:01:53.990
specifically for this SDK.

00:01:53.990 --> 00:01:56.870
So you can ask questions,
share your ideas with everyone,

00:01:56.870 --> 00:01:59.600
and help keep up to date
with the latest news.

00:01:59.600 --> 00:02:01.280
We look forward to
seeing what you build

00:02:01.280 --> 00:02:03.050
with the Google Assistant SDK.

00:02:03.050 --> 00:02:05.300
I'm Wayne Piekarski, and
I'll see you next time.

00:02:05.300 --> 00:02:08.350
[MUSIC PLAYING]

