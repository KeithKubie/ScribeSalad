WEBVTT
Kind: captions
Language: en

00:00:06.660 --> 00:00:09.880
PETER: Tony wrote
the book on WebGL.

00:00:09.880 --> 00:00:11.740
Literally.

00:00:11.740 --> 00:00:16.079
"WebGL: Up and Running,"
and another one coming soon.

00:00:16.079 --> 00:00:18.472
He will actually be raffling
off a couple of those books,

00:00:18.472 --> 00:00:20.430
and you can get them
signed by the man himself.

00:00:20.430 --> 00:00:23.852
So, big round of
applause for Tony.

00:00:23.852 --> 00:00:31.329
[APPLAUSE]

00:00:31.329 --> 00:00:32.870
TONY PARISI: Great,
thank you, Peter.

00:00:32.870 --> 00:00:35.310
Thank you, Vanessa,
for organizing.

00:00:35.310 --> 00:00:39.650
Many thanks to our hosts,
Google, and all the sponsors.

00:00:39.650 --> 00:00:43.696
As Peter said, I'm Tony Parisi,
I run the SF WebGL meet-up.

00:00:43.696 --> 00:00:46.070
A quick little bit about me,
you don't have to feverishly

00:00:46.070 --> 00:00:48.830
write this down, these
slides will be on SlideShare.

00:00:48.830 --> 00:00:51.150
And we'll post the link later.

00:00:51.150 --> 00:00:54.170
So I've been doing 3D
visualization for the web

00:00:54.170 --> 00:00:55.890
kind of as long as
that's been around.

00:00:55.890 --> 00:00:58.300
It's coming on 20 years
now, I have to say.

00:00:58.300 --> 00:01:01.790
Originally, working on a
technology called VRML.

00:01:01.790 --> 00:01:04.410
Which many of you might
have heard of, some of you

00:01:04.410 --> 00:01:06.800
might have played with in
middle school, a few of you

00:01:06.800 --> 00:01:09.380
might have even
built something in.

00:01:09.380 --> 00:01:11.780
And on and off for the last,
coming on, two decades,

00:01:11.780 --> 00:01:14.202
I have been building
experiences in 3D

00:01:14.202 --> 00:01:15.660
on the web with
whatever technology

00:01:15.660 --> 00:01:17.090
was available at the time.

00:01:17.090 --> 00:01:20.040
So I got very
excited around 2009

00:01:20.040 --> 00:01:22.350
when I heard this thing,
WebGL, was coming out.

00:01:22.350 --> 00:01:25.970
And after about a year of
trepidation and not wanting

00:01:25.970 --> 00:01:29.690
to get to deep into it,
I finally jumped into it.

00:01:29.690 --> 00:01:31.840
Year after that, I wrote
a book for O'Reilly,

00:01:31.840 --> 00:01:33.360
"WebGL: Up and Running."

00:01:33.360 --> 00:01:35.322
I've actually written
a second book,

00:01:35.322 --> 00:01:37.530
which is an intermediate
level book-- the first one's

00:01:37.530 --> 00:01:39.196
introductory-- it's
called, "Programming

00:01:39.196 --> 00:01:41.584
3D Applications in
HTML5 and WebGL."

00:01:41.584 --> 00:01:43.500
That's going to be out
in another month or so.

00:01:43.500 --> 00:01:45.900
Right now you can get
the pre-release online,

00:01:45.900 --> 00:01:48.780
Safari Online, through
Amazon, et cetera.

00:01:48.780 --> 00:01:49.580
Enough of a plug.

00:01:49.580 --> 00:01:51.070
And I do all this
stuff, and I consult,

00:01:51.070 --> 00:01:53.060
and I have a little
start-up in the city that's

00:01:53.060 --> 00:01:55.802
building 3D technology
on top of WebGL.

00:01:55.802 --> 00:01:56.830
And so with that.

00:01:59.700 --> 00:02:01.510
We live in a 3D world.

00:02:01.510 --> 00:02:03.280
People move, and
they think, and they

00:02:03.280 --> 00:02:07.390
experience in three dimensions.

00:02:07.390 --> 00:02:11.570
These days, a lot of
our media is 3D as well.

00:02:11.570 --> 00:02:14.310
Though, most of the time, we
experience it on a flat screen,

00:02:14.310 --> 00:02:15.140
right?

00:02:15.140 --> 00:02:17.990
But, the games we
play, the movies

00:02:17.990 --> 00:02:21.790
we watch-- even if you
remember back to 2008 election,

00:02:21.790 --> 00:02:24.340
the broadcast media we see
with Wolf Blitzer stumbling

00:02:24.340 --> 00:02:26.110
around a virtual set awkwardly.

00:02:26.110 --> 00:02:29.850
This has become a staple
of broadcast media now.

00:02:29.850 --> 00:02:33.040
This is all done
with 3D graphics.

00:02:33.040 --> 00:02:36.300
Which has been done on computers
for many, many decades.

00:02:36.300 --> 00:02:41.360
Historically, it's been with
high-end, dedicated hardware

00:02:41.360 --> 00:02:43.770
and very expensive
proprietary software.

00:02:43.770 --> 00:02:47.620
Well, not anymore.

00:02:47.620 --> 00:02:53.830
Now, the hardware you use to
render 3D runs on this phone,

00:02:53.830 --> 00:02:57.270
it runs on this desktop, it
runs on this Kindle Fire HDX.

00:02:57.270 --> 00:02:58.350
It runs everywhere.

00:02:58.350 --> 00:03:01.200
3D accelerated hardware
is everywhere and powers

00:03:01.200 --> 00:03:02.800
these real-time 3D
experiences we're

00:03:02.800 --> 00:03:04.940
going to talk about today.

00:03:04.940 --> 00:03:07.840
More importantly, the software
to create and experience

00:03:07.840 --> 00:03:10.970
this stuff is not only
accessible everywhere,

00:03:10.970 --> 00:03:11.957
it's free.

00:03:11.957 --> 00:03:13.040
It's called a web browser.

00:03:24.907 --> 00:03:25.990
Let's see if I have audio.

00:03:25.990 --> 00:03:27.740
Do I have audio on the
presentation, here?

00:03:27.740 --> 00:03:29.250
There we go.

00:03:29.250 --> 00:03:32.890
OK, so this is "100,000 Stars."

00:03:32.890 --> 00:03:35.140
This was a piece that was
developed by the Google Data

00:03:35.140 --> 00:03:37.090
Arts team last year.

00:03:37.090 --> 00:03:39.770
It's been around for
close to a year, now.

00:03:39.770 --> 00:03:42.620
But to me, it illustrates
the strength of HTML5

00:03:42.620 --> 00:03:44.765
as a platform, and
WebGL, which is

00:03:44.765 --> 00:03:46.390
what we're going to
talk about tonight.

00:03:46.390 --> 00:03:49.240
Now if you look at
this, you'll see

00:03:49.240 --> 00:03:51.240
that I'm interacting
in real-time with a 3D

00:03:51.240 --> 00:03:54.470
presentation that is running
in my Chrome browser.

00:03:54.470 --> 00:03:56.566
And I can click on
a link, and it's

00:03:56.566 --> 00:03:57.815
going to zoom me into the sun.

00:03:57.815 --> 00:04:00.140
I don't know what's going on
with this little rectangle,

00:04:00.140 --> 00:04:00.460
here.

00:04:00.460 --> 00:04:01.501
We're going to ignore it.

00:04:03.640 --> 00:04:04.733
That is craziness.

00:04:04.733 --> 00:04:07.215
What's going on, here?

00:04:07.215 --> 00:04:08.605
Is that my AV?

00:04:08.605 --> 00:04:11.216
I'm going to try that again.

00:04:11.216 --> 00:04:14.460
There we go.

00:04:14.460 --> 00:04:16.230
All right, so you
see this virtual fly

00:04:16.230 --> 00:04:18.550
through of our Milky Way Galaxy.

00:04:18.550 --> 00:04:21.769
So imagine trying to
build this five years ago.

00:04:21.769 --> 00:04:24.500
You would build this title,
you would distribute it

00:04:24.500 --> 00:04:27.100
on a CD-ROM or DVD.

00:04:27.100 --> 00:04:27.780
Right?

00:04:27.780 --> 00:04:33.660
And people would maybe go into
Best Buy or order it on Amazon.

00:04:33.660 --> 00:04:36.400
And if you built
this, the data for it

00:04:36.400 --> 00:04:37.856
would have to be licensed.

00:04:37.856 --> 00:04:39.397
See, I don't know
what that title is.

00:04:39.397 --> 00:04:42.410
We're going to skip this.

00:04:42.410 --> 00:04:44.076
Data for that would
have to be licensed.

00:04:46.830 --> 00:04:48.960
And if you wanted
to update it, you'd

00:04:48.960 --> 00:04:50.764
have to go get another CD.

00:04:50.764 --> 00:04:52.180
We're just going
to let this play.

00:04:52.180 --> 00:04:54.850
I'm sick of looking
at that title.

00:04:54.850 --> 00:04:56.351
But now, it's running
a web browser.

00:04:56.351 --> 00:04:58.058
And I don't know if
you noticed, but when

00:04:58.058 --> 00:04:59.510
I clicked on one
of those links--

00:04:59.510 --> 00:05:04.740
I'm going to try one more time
because I'm brave, there we go.

00:05:07.870 --> 00:05:10.831
That's scraped from Wikipedia.

00:05:10.831 --> 00:05:13.080
So we didn't have to go get
that stuff from Britannica

00:05:13.080 --> 00:05:13.930
or anything like that.

00:05:13.930 --> 00:05:15.304
So the world is
our encyclopedia.

00:05:15.304 --> 00:05:17.670
This Encyclopedia
Galactica that's been built

00:05:17.670 --> 00:05:20.330
was all built on HTML5.

00:05:20.330 --> 00:05:22.031
This is now a rich
media platform,

00:05:22.031 --> 00:05:24.030
and that's what we're
going to talk about today.

00:05:31.400 --> 00:05:34.720
Back to our PowerPoint.

00:05:34.720 --> 00:05:37.610
And so, who's seen this?

00:05:37.610 --> 00:05:40.270
So that was a nice
visualization application,

00:05:40.270 --> 00:05:41.940
but what we're
going to see here--

00:05:41.940 --> 00:05:43.430
I'm going to bring up
Firefox for this one,

00:05:43.430 --> 00:05:45.013
because it runs this
screamingly fast.

00:05:50.040 --> 00:05:52.340
And hopefully, in
the browser cache.

00:05:52.340 --> 00:05:54.050
Kind of big content.

00:05:54.050 --> 00:05:58.950
This is an Epic Games Unreal
game that was converted from

00:05:58.950 --> 00:06:00.370
their C++ code base.

00:06:00.370 --> 00:06:02.170
Including an embedded
programming language

00:06:02.170 --> 00:06:03.210
interpreter.

00:06:03.210 --> 00:06:06.080
It was actually cross compiled
using a technology called

00:06:06.080 --> 00:06:09.970
emscripten, compiled
to JavaScript,

00:06:09.970 --> 00:06:12.480
and running in your web browser.

00:06:12.480 --> 00:06:14.670
We are now live with
a full Unreal game

00:06:14.670 --> 00:06:19.210
level in JavaScript,
rendered in WebGL.

00:06:19.210 --> 00:06:20.210
Let's go to full screen.

00:06:23.605 --> 00:06:27.506
I'll WASD around a little bit,
use the keyboard to navigate.

00:06:27.506 --> 00:06:30.776
Use the arrow keys to
change the camera control.

00:06:30.776 --> 00:06:32.150
I'll just go into
autopilot here,

00:06:32.150 --> 00:06:34.600
so if you don't see me
driving and futzing around.

00:06:34.600 --> 00:06:38.839
But look at this, benchmarking,
we're getting 30 FPS.

00:06:38.839 --> 00:06:40.380
We can get higher
than that, I think.

00:06:40.380 --> 00:06:42.921
That's probably because of the
display syncing and everything

00:06:42.921 --> 00:06:43.470
else.

00:06:43.470 --> 00:06:46.370
But, you know, fast machine,
you get 60 frames a second.

00:06:46.370 --> 00:06:48.500
Running in your
browser, it's probably

00:06:48.500 --> 00:06:51.210
about 20 megs of content coming
in to download that level.

00:06:51.210 --> 00:06:54.090
That was a full Epic level.

00:06:54.090 --> 00:06:56.815
We're talking AAA game stuff
running in our browser now.

00:07:13.210 --> 00:07:15.790
And that is all
because we have WebGL.

00:07:15.790 --> 00:07:16.450
What is WebGL?

00:07:16.450 --> 00:07:19.820
It's the 3D API
standard for the web.

00:07:19.820 --> 00:07:21.170
It's OpenGL ES.

00:07:21.170 --> 00:07:22.696
Do people know what that is?

00:07:22.696 --> 00:07:26.350
That is the software API
that runs on this phone.

00:07:26.350 --> 00:07:28.180
And it runs on embedded systems.

00:07:28.180 --> 00:07:29.080
Small devices.

00:07:29.080 --> 00:07:32.270
That's what the ES stands
for, Embedded Systems.

00:07:32.270 --> 00:07:35.220
You program to it
using JavaScript.

00:07:35.220 --> 00:07:37.330
It's shipped pretty
much everywhere.

00:07:37.330 --> 00:07:39.190
After initial
reluctance by Microsoft,

00:07:39.190 --> 00:07:41.970
they've included it
in Internet Explorer.

00:07:41.970 --> 00:07:45.470
It runs on the Kindle
Fire HDX like a bandit.

00:07:45.470 --> 00:07:47.420
I can show you this stuff later.

00:07:47.420 --> 00:07:51.630
Beautiful device, seven
inches of pure happiness

00:07:51.630 --> 00:07:53.340
running 60 frames a second 3D.

00:07:53.340 --> 00:07:54.770
I love this thing.

00:07:54.770 --> 00:07:58.020
And supported everywhere
except mobile Safari,

00:07:58.020 --> 00:07:59.180
but there are solutions.

00:07:59.180 --> 00:08:01.890
We're actually building
HTML5 WebGL applications--

00:08:01.890 --> 00:08:04.370
I'll talk about them
shortly-- for iOS.

00:08:04.370 --> 00:08:06.160
But on Android, you
can use a browser,

00:08:06.160 --> 00:08:07.610
or you can build a web app.

00:08:07.610 --> 00:08:10.070
Kindle, web app, and on
and on the list goes on.

00:08:10.070 --> 00:08:12.940
And in fact, it's coming
soon to a Bang and Olufsen

00:08:12.940 --> 00:08:14.150
TV powered by Opera.

00:08:14.150 --> 00:08:15.520
How about that?

00:08:15.520 --> 00:08:16.950
On your TV, too.

00:08:16.950 --> 00:08:18.340
So how does it work?

00:08:18.340 --> 00:08:19.370
It's an API.

00:08:19.370 --> 00:08:21.820
It is not a tag
set, it's not CSS.

00:08:21.820 --> 00:08:24.550
You don't put a
little angle bracket

00:08:24.550 --> 00:08:26.450
and say, cube, and see
a cube on the screen.

00:08:26.450 --> 00:08:29.430
That'd be nice, maybe
that will happen someday.

00:08:29.430 --> 00:08:31.490
So it's sort of
like Canvas drawing.

00:08:31.490 --> 00:08:33.529
Has everyone done 2D
Canvas API drawing?

00:08:33.529 --> 00:08:34.820
Are you quite familiar with it?

00:08:34.820 --> 00:08:36.690
It's like that, but
different at the same time.

00:08:36.690 --> 00:08:37.659
It's a low level
thing we're going

00:08:37.659 --> 00:08:38.742
to talk about in a minute.

00:08:38.742 --> 00:08:41.704
So no DOM, you've got to deal
with that stuff yourself.

00:08:41.704 --> 00:08:44.120
Just like with Canvas, when
you want to deal with picking,

00:08:44.120 --> 00:08:46.161
you have to kind of make
that stuff up as you go,

00:08:46.161 --> 00:08:49.030
or use some tools, and I'm
going to show you those.

00:08:49.030 --> 00:08:52.630
And there's no file
format built in.

00:08:52.630 --> 00:08:55.090
I've seen so many people
ask questions online about,

00:08:55.090 --> 00:08:58.870
how do I see my OBJ files or
my other 3D models in WebGL?

00:08:58.870 --> 00:09:02.164
It's a bit of a modeling
error, because WebGL itself

00:09:02.164 --> 00:09:03.080
doesn't support those.

00:09:03.080 --> 00:09:06.120
The browser doesn't know how
to load a 3D file natively

00:09:06.120 --> 00:09:07.190
and just show it to you.

00:09:07.190 --> 00:09:08.400
You have to write code.

00:09:08.400 --> 00:09:09.400
But thankfully, you can.

00:09:09.400 --> 00:09:13.080
And thankfully, you can do it
in JavaScript, and it runs fast.

00:09:13.080 --> 00:09:15.080
So we're going to quickly
go through the anatomy

00:09:15.080 --> 00:09:16.514
of a simple WebGL program.

00:09:16.514 --> 00:09:17.930
Breeze through it,
because there's

00:09:17.930 --> 00:09:20.420
a lot of details to it
we don't have time for.

00:09:20.420 --> 00:09:22.580
But the basic idea is, you
create a canvas element

00:09:22.580 --> 00:09:25.040
on your page just like
you would for 2D drawing,

00:09:25.040 --> 00:09:26.980
but then you get a
3D drawing context.

00:09:26.980 --> 00:09:29.697
Where you'd get that 2D
context, you get a 3D context.

00:09:29.697 --> 00:09:31.280
You create a viewport,
which basically

00:09:31.280 --> 00:09:33.950
says the size of the
rectangle to draw into.

00:09:33.950 --> 00:09:36.280
And then from there it
gets a little weird,

00:09:36.280 --> 00:09:37.889
and we're going
to go through it.

00:09:37.889 --> 00:09:39.430
All right, so this
is a kind of code,

00:09:39.430 --> 00:09:41.322
if you're familiar with it.

00:09:41.322 --> 00:09:42.780
You get a canvas
element somewhere,

00:09:42.780 --> 00:09:45.250
we pass that into this function,
and it calls get context.

00:09:45.250 --> 00:09:47.080
And it says, can I
have a WebGL context?

00:09:47.080 --> 00:09:49.750
Older browsers, you have
to say experimental-WebGL,

00:09:49.750 --> 00:09:52.950
but generally this is
supported now, WebGL.

00:09:52.950 --> 00:09:55.960
If you don't succeed
at that, you probably

00:09:55.960 --> 00:09:57.180
don't have WebGL support.

00:09:57.180 --> 00:09:59.638
And you put up some kind of
friendly message for your user,

00:09:59.638 --> 00:10:01.450
or do something
else to fall back.

00:10:01.450 --> 00:10:03.760
And then, you
initialize the viewport.

00:10:03.760 --> 00:10:05.300
In this case, what
I'm doing is I'm

00:10:05.300 --> 00:10:06.716
going to draw to
the whole window.

00:10:09.370 --> 00:10:11.940
Then you have to
create buffers of data

00:10:11.940 --> 00:10:13.710
to represent your 3D objects.

00:10:13.710 --> 00:10:17.730
Arrays of numbers in
JavaScript that you then

00:10:17.730 --> 00:10:20.290
turn into this special new
thing called the typed array,

00:10:20.290 --> 00:10:22.060
which you may have
heard of at this point.

00:10:22.060 --> 00:10:24.550
This is binary data
that's very compact.

00:10:24.550 --> 00:10:25.970
Runs very fast.

00:10:25.970 --> 00:10:29.200
It was introduced into browsers
a few years ago largely because

00:10:29.200 --> 00:10:30.430
of WebGL.

00:10:30.430 --> 00:10:32.830
And that means that your 3D
data, which can be very rich,

00:10:32.830 --> 00:10:36.749
is stored very compactly, and
you can operate on it quickly.

00:10:36.749 --> 00:10:38.290
The other thing you
have to do, which

00:10:38.290 --> 00:10:40.420
is a little new if
you're a web programmer,

00:10:40.420 --> 00:10:43.470
is you have to create things
call programmable shaders.

00:10:43.470 --> 00:10:47.070
If you know OpenGL ES already,
you're familiar with this.

00:10:47.070 --> 00:10:50.550
You have to write code in
another programming language,

00:10:50.550 --> 00:10:55.180
called OpenGL SL, which
is for Shader Language.

00:10:55.180 --> 00:10:56.590
And it looks like C, sort of.

00:10:56.590 --> 00:10:59.240
So for a C programmer, you'll
be kind of familiar with it.

00:10:59.240 --> 00:11:02.200
And then there are some
built-ins if you look here.

00:11:02.200 --> 00:11:04.801
It knows about matrices
and vectors and 3D thingies

00:11:04.801 --> 00:11:05.300
already.

00:11:05.300 --> 00:11:07.885
Because what happens is
that language gets compiled,

00:11:07.885 --> 00:11:11.290
and these compiled
instructions actually

00:11:11.290 --> 00:11:13.040
get sent to the graphics
card, and they're

00:11:13.040 --> 00:11:15.550
executed on every vertex
that's rendered on the screen.

00:11:15.550 --> 00:11:17.300
Every pixel that's
rendered on the screen.

00:11:17.300 --> 00:11:19.370
And the hardware just
does it super fast.

00:11:19.370 --> 00:11:22.430
This kind of technology came
out of Pixar, back in the day.

00:11:22.430 --> 00:11:25.371
High-end renderings now brought
to every machine on the planet.

00:11:25.371 --> 00:11:26.620
That's a little weird, though.

00:11:26.620 --> 00:11:28.230
A little strange to
deal with, but we're

00:11:28.230 --> 00:11:29.980
going to talk about
how we can avoid that.

00:11:29.980 --> 00:11:31.530
And then we get
into some real weeds

00:11:31.530 --> 00:11:33.980
here, which is you've got to
do a lot of low-level stuff.

00:11:33.980 --> 00:11:36.970
GL itself, the API, is
kind of a state machine.

00:11:36.970 --> 00:11:39.227
So you say, OK, that
buffer I created earlier,

00:11:39.227 --> 00:11:41.560
I'm going to set it, and then
I'm going to draw with it.

00:11:41.560 --> 00:11:43.259
And so we go through
and we do that.

00:11:43.259 --> 00:11:44.550
We clear-- this is every frame.

00:11:44.550 --> 00:11:46.260
You're doing a
RequestAnimationFrame kind

00:11:46.260 --> 00:11:46.884
of draw a loop.

00:11:46.884 --> 00:11:47.740
We clear the canvas.

00:11:47.740 --> 00:11:49.810
We set up a shader.

00:11:49.810 --> 00:11:52.610
Those buffers we created
before, we set them up.

00:11:52.610 --> 00:11:55.600
We have to pass matrices in
to move our objects around.

00:11:55.600 --> 00:11:58.660
All of this sort of
complicated stuff, right?

00:11:58.660 --> 00:12:01.120
So you may be wondering
at this point,

00:12:01.120 --> 00:12:05.260
how am I going to do this?

00:12:05.260 --> 00:12:06.750
Really?

00:12:06.750 --> 00:12:07.790
Seriously?

00:12:07.790 --> 00:12:10.490
Well if you are a
game programmer,

00:12:10.490 --> 00:12:11.990
you're a graphics
programmer, you're

00:12:11.990 --> 00:12:15.790
probably familiar with how to
do that level of OpenGL coding.

00:12:15.790 --> 00:12:16.634
You're good to go.

00:12:16.634 --> 00:12:18.550
What you'll do is you'll
build your own engine

00:12:18.550 --> 00:12:20.230
for your project.

00:12:20.230 --> 00:12:21.982
Most people, though,
won't do that.

00:12:21.982 --> 00:12:23.440
And the good news
is you don't have

00:12:23.440 --> 00:12:26.140
to, because WebGL's
an open standard.

00:12:26.140 --> 00:12:28.620
Because JavaScript
is fast enough,

00:12:28.620 --> 00:12:31.180
people have written a whole
bunch of libraries, now, that

00:12:31.180 --> 00:12:34.140
can actually talk to WebGL and
make things easier for you.

00:12:34.140 --> 00:12:35.710
And we're going to see some
of those libraries in action

00:12:35.710 --> 00:12:36.210
in a second.

00:12:36.210 --> 00:12:38.499
For me, one of the
presenters tonight, Goo,

00:12:38.499 --> 00:12:40.540
has actually got a great
engine with the creation

00:12:40.540 --> 00:12:41.625
tool that comes along with it.

00:12:41.625 --> 00:12:44.041
So you not only have an engine,
but you can build with it.

00:12:44.041 --> 00:12:45.090
But there's a long list.

00:12:45.090 --> 00:12:47.530
And you go online and you can
get these resources from me,

00:12:47.530 --> 00:12:51.770
or other people, about where to
start in your creation process.

00:12:51.770 --> 00:12:53.545
Unless you're a
glutton for punishment,

00:12:53.545 --> 00:12:55.670
or you really, really want
to get to the low level,

00:12:55.670 --> 00:12:57.270
you're probably not going
to do the stuff I showed you

00:12:57.270 --> 00:12:58.169
a second ago.

00:12:58.169 --> 00:13:00.460
You're going to use one of
these engines and tool kits.

00:13:00.460 --> 00:13:02.709
And one of the ones I'm going
to talk to you about now

00:13:02.709 --> 00:13:03.840
is called three.js.

00:13:03.840 --> 00:13:04.910
Who's heard of three.js?

00:13:04.910 --> 00:13:06.064
Use it every day.

00:13:06.064 --> 00:13:06.730
Good, everybody.

00:13:06.730 --> 00:13:07.690
That's great.

00:13:07.690 --> 00:13:11.430
So all that funk we saw before--
the five, eight pages of code,

00:13:11.430 --> 00:13:13.290
it was about 300
lines if I counted--

00:13:13.290 --> 00:13:15.170
we get it onto a page, now.

00:13:15.170 --> 00:13:17.030
And we're now
working with objects

00:13:17.030 --> 00:13:19.900
that if you've got any
familiarity with 3D graphics,

00:13:19.900 --> 00:13:22.210
or you can kind of get up
the learning curve fast,

00:13:22.210 --> 00:13:24.126
they're the kind of
objects you'd think about.

00:13:24.126 --> 00:13:24.856
It's a cube.

00:13:24.856 --> 00:13:27.470
It's a camera that's
got a position in space.

00:13:27.470 --> 00:13:29.945
It's a light that's going
to cast on to the object,

00:13:29.945 --> 00:13:31.980
and you see some
shading here, right?

00:13:31.980 --> 00:13:34.010
So that's the kind of
stuff you're probably

00:13:34.010 --> 00:13:35.520
going to-- the level you're
probably going to work at,

00:13:35.520 --> 00:13:36.200
and the kind of
stuff you're going

00:13:36.200 --> 00:13:37.671
to be doing most days, right?

00:13:37.671 --> 00:13:39.420
Three.js is really
cool, too, because it's

00:13:39.420 --> 00:13:42.770
got a canvas renderer, an SVG
renderer, a CSS3 renderer.

00:13:42.770 --> 00:13:44.080
It is a great engine.

00:13:44.080 --> 00:13:45.822
I personally use
it for my projects,

00:13:45.822 --> 00:13:47.530
and then I built a
framework on top of it

00:13:47.530 --> 00:13:49.360
to make that
development even easier.

00:13:49.360 --> 00:13:52.270
Because what three.js doesn't do
is a lot of high-level behavior

00:13:52.270 --> 00:13:53.809
stuff, picking and other things.

00:13:53.809 --> 00:13:55.100
You have to do some grunt-work.

00:13:55.100 --> 00:13:57.651
So I've got a layer, but
this one is pretty great.

00:13:57.651 --> 00:14:00.150
And some amazing things have
been built with it in the past.

00:14:00.150 --> 00:14:01.440
I'll quickly show you.

00:14:01.440 --> 00:14:05.950
This one right here, which
is the 360 Car Visualizer,

00:14:05.950 --> 00:14:06.520
it's called.

00:14:09.642 --> 00:14:12.566
Here we go.

00:14:12.566 --> 00:14:13.940
So this stuff's
in browser cache.

00:14:13.940 --> 00:14:15.600
Ought to load pretty fast.

00:14:15.600 --> 00:14:18.310
But even with a clear cache,
it loads pretty quickly.

00:14:18.310 --> 00:14:23.275
And we have a beautiful
interactive model

00:14:23.275 --> 00:14:27.189
with a real-time shadow.

00:14:27.189 --> 00:14:28.730
And this is great,
I mean, wonderful.

00:14:28.730 --> 00:14:29.900
I've got a 3D model here.

00:14:29.900 --> 00:14:30.720
I could spin it around.

00:14:30.720 --> 00:14:31.428
That's excellent.

00:14:31.428 --> 00:14:32.970
But what's most
excellent about this,

00:14:32.970 --> 00:14:34.511
is I can really
configure this thing.

00:14:34.511 --> 00:14:36.030
This is an interactive
application.

00:14:36.030 --> 00:14:38.060
I'm going to switch
to another model.

00:14:38.060 --> 00:14:39.770
I'm going to change
colors, right?

00:14:39.770 --> 00:14:42.200
What online car
configurator would

00:14:42.200 --> 00:14:47.240
be complete without being able
to select your colors, right?

00:14:47.240 --> 00:14:48.347
Amazing.

00:14:48.347 --> 00:14:50.555
There's a lot of polygon
detail on this thing, right?

00:14:50.555 --> 00:14:51.834
A lot of beautiful shadows.

00:14:51.834 --> 00:14:53.500
And the lights are
baked into the scene.

00:14:53.500 --> 00:14:55.260
This stuff, here.

00:14:55.260 --> 00:14:58.160
So that's part of the texture
map, the bitmap on the floor.

00:14:58.160 --> 00:14:59.990
But everything
else is being done

00:14:59.990 --> 00:15:01.490
in real-time,
including the shadows.

00:15:05.130 --> 00:15:06.900
Oh yes, let's go back to Canary.

00:15:06.900 --> 00:15:10.000
I'm going to show one more demo
of something fairly amazing.

00:15:10.000 --> 00:15:12.550
This one was also done by the
Google Arts team, Data Arts

00:15:12.550 --> 00:15:14.410
team.

00:15:14.410 --> 00:15:16.610
Completely different from--
that was prosaic, right?

00:15:16.610 --> 00:15:19.750
We had a real world physical
object we were showing.

00:15:19.750 --> 00:15:21.170
This one's about data.

00:15:21.170 --> 00:15:23.940
This is about looking
at the small arms

00:15:23.940 --> 00:15:28.156
trade around the globe
for the last two decades.

00:15:28.156 --> 00:15:29.780
Now, that's kind of
a sobering thought,

00:15:29.780 --> 00:15:31.410
but it's very interesting.

00:15:31.410 --> 00:15:33.110
So I can actually
slide these sliders

00:15:33.110 --> 00:15:35.030
and go to different
periods of time

00:15:35.030 --> 00:15:37.030
and look at the progression
of the arms trade.

00:15:37.030 --> 00:15:39.710
I can look at just
imports or just exports.

00:15:39.710 --> 00:15:42.590
I can actually zoom into
detail on a certain country,

00:15:42.590 --> 00:15:44.960
like the Russian
Federation, and see

00:15:44.960 --> 00:15:47.250
how they've been dealing
the last few decades.

00:15:47.250 --> 00:15:49.990
And this was all built on
an open source Google globe

00:15:49.990 --> 00:15:50.890
project, as well.

00:15:50.890 --> 00:15:52.720
So you could go take
the data from this,

00:15:52.720 --> 00:15:54.590
or the code from
this presentation,

00:15:54.590 --> 00:15:55.820
put your own data in.

00:15:55.820 --> 00:15:59.150
Let's say you wanted to look at
the epidemiology of, help me,

00:15:59.150 --> 00:16:00.650
what's that virus
going around right

00:16:00.650 --> 00:16:02.950
now everyone's
freaking out about?

00:16:02.950 --> 00:16:04.700
H1N1, thank you.

00:16:04.700 --> 00:16:08.340
We could see epidemiology
around the planet of that.

00:16:08.340 --> 00:16:10.670
So this is the
kind of experience

00:16:10.670 --> 00:16:12.655
we're talking about WebGL
being able to power.

00:16:16.850 --> 00:16:19.744
But it goes beyond just
creating the models.

00:16:19.744 --> 00:16:21.410
There's all this
amazing animation stuff

00:16:21.410 --> 00:16:22.410
you can do with it, too.

00:16:22.410 --> 00:16:26.372
You could do morphs and
skins, real-time characters.

00:16:26.372 --> 00:16:27.330
And how do you do that?

00:16:27.330 --> 00:16:29.970
That's a good question
I asked myself.

00:16:29.970 --> 00:16:31.490
How do I make content for this?

00:16:31.490 --> 00:16:34.660
The state of the art
right now is a little bit

00:16:34.660 --> 00:16:38.180
like we've moved from the
stone tools age of creation

00:16:38.180 --> 00:16:39.520
to the bronze age.

00:16:39.520 --> 00:16:41.270
We're getting there,
the tools are coming.

00:16:41.270 --> 00:16:42.894
You're going to see
Goo Create tonight.

00:16:42.894 --> 00:16:44.526
That's a step in
the right direction.

00:16:44.526 --> 00:16:46.400
What people are doing
today in these projects

00:16:46.400 --> 00:16:49.060
I showed you, are, they're
exporting a single model.

00:16:49.060 --> 00:16:51.740
An OBJ file or an
STL file or one

00:16:51.740 --> 00:16:54.320
of these 3D formats that's
been around for a long time.

00:16:54.320 --> 00:16:56.810
And then they're
hand animating it.

00:16:56.810 --> 00:16:58.010
They're hand laying it out.

00:16:58.010 --> 00:16:59.770
They're putting the lights in.

00:16:59.770 --> 00:17:02.381
You basically-- your
modeler sitting in one room,

00:17:02.381 --> 00:17:04.630
and he's like, Steve, yeah,
I put the light over here.

00:17:04.630 --> 00:17:05.650
And he's talking
to the programmer,

00:17:05.650 --> 00:17:07.920
and he's typing the things
in in a text editor again.

00:17:07.920 --> 00:17:09.724
Well, that's changing.

00:17:09.724 --> 00:17:10.390
That's changing.

00:17:10.390 --> 00:17:13.746
There is a format that was
pretty rich and popular

00:17:13.746 --> 00:17:15.829
for while, called COLLADA,
that took all the data.

00:17:15.829 --> 00:17:18.450
The animations, the scenes,
the lights, the full hierarchy,

00:17:18.450 --> 00:17:21.566
all this stuff, and got into
these big fat XML files.

00:17:21.566 --> 00:17:22.940
And we've been
using that to show

00:17:22.940 --> 00:17:24.795
some really sophisticated
WebGL lately.

00:17:24.795 --> 00:17:26.670
But the problem is
they're big fat XML files.

00:17:26.670 --> 00:17:29.832
They don't load fast, and
they're not tuned up for WebGL.

00:17:29.832 --> 00:17:31.540
So there's this other
cool thing coming--

00:17:31.540 --> 00:17:32.720
which I'm involved
in personally,

00:17:32.720 --> 00:17:34.720
and we're going to see a
lightning talk from one

00:17:34.720 --> 00:17:36.910
of the creators of, later--
which is called glTF.

00:17:36.910 --> 00:17:38.620
The gl Transmission Format.

00:17:38.620 --> 00:17:40.910
So imagine that
same rich data being

00:17:40.910 --> 00:17:43.010
able to fully get into
your browser real quick.

00:17:43.010 --> 00:17:46.370
Because all the vertex
datas and typed arrays,

00:17:46.370 --> 00:17:48.140
only the stuff that
makes sense to have

00:17:48.140 --> 00:17:51.730
in JSON, high-level
data, is in there.

00:17:51.730 --> 00:17:53.930
And let's see if I got a
link to this puppy, here.

00:17:53.930 --> 00:17:57.220
Love to show you this real
quick, it's my last demo.

00:17:57.220 --> 00:17:59.060
Yes.

00:17:59.060 --> 00:18:03.110
So on the load screen,
this six megabyte model

00:18:03.110 --> 00:18:05.430
loaded in about 0.4 seconds.

00:18:05.430 --> 00:18:06.430
Now that's what we need.

00:18:06.430 --> 00:18:08.638
If any of you all are into
the web performance stuff,

00:18:08.638 --> 00:18:12.190
and you go to Steve Souders'
talks, what do we know?

00:18:12.190 --> 00:18:14.880
We know a web page has to load
in less than two seconds end

00:18:14.880 --> 00:18:15.710
to end.

00:18:15.710 --> 00:18:17.370
And that's a long time.

00:18:17.370 --> 00:18:19.250
And you need to see
stuff on the screen a lot

00:18:19.250 --> 00:18:20.480
more quickly than that.

00:18:20.480 --> 00:18:22.559
Well, with these kind of
formats, we can do it.

00:18:22.559 --> 00:18:24.100
And this is, of
course, just a movie.

00:18:24.100 --> 00:18:25.570
I can switch the cameras, here.

00:18:29.140 --> 00:18:32.080
And this came from
3D Studio Max.

00:18:32.080 --> 00:18:34.137
It was converted to COLLADA.

00:18:34.137 --> 00:18:34.970
Exported to COLLADA.

00:18:34.970 --> 00:18:36.480
And then we ran a
converter on it--

00:18:36.480 --> 00:18:38.170
that Fabrice is
going to speak later,

00:18:38.170 --> 00:18:40.480
has written-- which takes the
COLLADA and turns it into glTF.

00:18:40.480 --> 00:18:41.230
Nice and compact.

00:18:41.230 --> 00:18:43.530
So that pipeline is
starting to come.

00:18:43.530 --> 00:18:46.560
So all the professional tools,
3-D Studio Max, Maya, Blender,

00:18:46.560 --> 00:18:48.970
SketchUp, they will
be able to support

00:18:48.970 --> 00:18:50.589
this kind of experience.

00:18:50.589 --> 00:18:52.630
Let's see if I can just
go out to the free camera

00:18:52.630 --> 00:18:54.182
for a second, here.

00:18:54.182 --> 00:18:57.910
We can see our little virtual
city in its full glory.

00:18:57.910 --> 00:18:59.420
So there we go.

00:18:59.420 --> 00:19:01.260
So, help's coming
on the pipeline.

00:19:08.040 --> 00:19:11.230
Well, we talked about this
earlier, where does it run?

00:19:11.230 --> 00:19:13.190
Well, it runs pretty
much everywhere.

00:19:13.190 --> 00:19:16.330
I did mention that little
bump in the road with iOS.

00:19:16.330 --> 00:19:18.650
For whatever reason,
Apple has not

00:19:18.650 --> 00:19:23.160
turned on WebGL support
inside mobile Safari.

00:19:23.160 --> 00:19:25.695
However, they do have it
running in a limited fashion

00:19:25.695 --> 00:19:27.580
in their iADs platform.

00:19:27.580 --> 00:19:29.120
So if you make an
iAD to be inserted

00:19:29.120 --> 00:19:31.050
into someone's freemium
game, or whatever,

00:19:31.050 --> 00:19:34.420
you've got full HTML5 that
you can use to build the iAD,

00:19:34.420 --> 00:19:35.890
and includes WebGL.

00:19:35.890 --> 00:19:37.460
But that's kind of limited.

00:19:37.460 --> 00:19:39.530
It'd be really nice if
you could hit any website

00:19:39.530 --> 00:19:41.571
with mobile Safari and
the WebGL would just work.

00:19:41.571 --> 00:19:44.170
And it's a little frustrating
that it hasn't happened yet.

00:19:44.170 --> 00:19:46.890
Tim Cook, if you're
listening, let's talk.

00:19:46.890 --> 00:19:48.880
I'll even come
down to Cupertino.

00:19:48.880 --> 00:19:50.594
I don't mind driving down there.

00:19:50.594 --> 00:19:52.510
So hopefully that will
be fixed at some point.

00:19:52.510 --> 00:19:53.051
It's not yet.

00:19:53.051 --> 00:19:55.940
But the good news is
there are solutions today

00:19:55.940 --> 00:19:58.680
that will let you take your
HTML5 app-- because I know

00:19:58.680 --> 00:20:00.870
people here, in this
group especially, are

00:20:00.870 --> 00:20:03.880
interested in building
their stuff once in HTML5

00:20:03.880 --> 00:20:05.770
and then getting it
to run everywhere.

00:20:05.770 --> 00:20:09.580
You can take your HTML5
app and, a la PhoneGap,

00:20:09.580 --> 00:20:12.330
there are adapter technologies
for making the whole thing

00:20:12.330 --> 00:20:15.820
run inside Android
and iOS platforms

00:20:15.820 --> 00:20:17.060
that don't support WebGL yet.

00:20:17.060 --> 00:20:19.790
Android, less of an issue now,
because most of the Android

00:20:19.790 --> 00:20:21.760
devices actually do it.

00:20:21.760 --> 00:20:24.440
And one I'm talking
about here is CocoonJS.

00:20:24.440 --> 00:20:26.100
The Cocoon folks in
the room somewhere?

00:20:26.100 --> 00:20:27.950
I know they're kicking around.

00:20:27.950 --> 00:20:29.560
It's a company called Ludei.

00:20:29.560 --> 00:20:31.330
They are in San
Francisco, and they

00:20:31.330 --> 00:20:33.910
make a technology that
basically implements the WebGL

00:20:33.910 --> 00:20:38.020
API and a couple of other APIs
that aren't built into iOS

00:20:38.020 --> 00:20:39.120
or easy to use in iOS.

00:20:39.120 --> 00:20:41.370
And they give you some tools
for making that all easy.

00:20:41.370 --> 00:20:44.290
And basically, with very
little change to your code,

00:20:44.290 --> 00:20:46.684
you can adapt that and bring
it into iOS and make an app.

00:20:46.684 --> 00:20:48.100
They'll even make
the app for you.

00:20:48.100 --> 00:20:49.532
Hey, you're not an iOS coder?

00:20:49.532 --> 00:20:50.240
They'll build it.

00:20:50.240 --> 00:20:51.990
They got a cloud service
doing it for you,

00:20:51.990 --> 00:20:54.400
all you have to do is sign
it with your developer ID

00:20:54.400 --> 00:20:55.580
and submit it to the store.

00:20:55.580 --> 00:20:57.205
So that's really
great, and I encourage

00:20:57.205 --> 00:20:59.340
you to go look at that.

00:20:59.340 --> 00:21:00.640
Getting really close, here.

00:21:00.640 --> 00:21:03.290
So, my opinion.

00:21:03.290 --> 00:21:05.290
And this is why I'm so
happy we're here tonight.

00:21:05.290 --> 00:21:06.460
And Peter, thank you, again.

00:21:06.460 --> 00:21:08.890
And Don Olmstead, thank you
for suggesting I come here

00:21:08.890 --> 00:21:10.780
and talk tonight.

00:21:10.780 --> 00:21:13.000
I think we're getting
to a tipping point.

00:21:13.000 --> 00:21:15.400
A year ago Microsoft,
WebGL, I don't know.

00:21:15.400 --> 00:21:16.060
Security?

00:21:16.060 --> 00:21:16.920
Whatever, blah, blah, blah.

00:21:16.920 --> 00:21:18.919
Well they changed their
tune, and they're really

00:21:18.919 --> 00:21:20.210
supporting WebGL pretty well.

00:21:20.210 --> 00:21:26.690
I went into Best Buy, I went up
to a laptop, I hit a URL I knew

00:21:26.690 --> 00:21:28.640
was a WebGL URL with
Internet Explorer--

00:21:28.640 --> 00:21:30.850
I didn't go sneakily download
Chrome like I usually

00:21:30.850 --> 00:21:33.230
do on every machine
I go to at Best Buy--

00:21:33.230 --> 00:21:35.111
I just went and hit
it, and it worked.

00:21:35.111 --> 00:21:37.610
I hit that "100,000 Stars," I
hit that Car, all those things

00:21:37.610 --> 00:21:39.330
I showed you, they
all just worked.

00:21:39.330 --> 00:21:40.610
So that's great.

00:21:40.610 --> 00:21:42.457
I mentioned the Kindle Fire HDX.

00:21:42.457 --> 00:21:44.540
I don't know if we're going
to get this on camera,

00:21:44.540 --> 00:21:51.960
but, let's see here, come on.

00:21:51.960 --> 00:21:52.950
Yeah, here we go.

00:21:52.950 --> 00:21:55.380
So here's a little interactive
piece I built for my book.

00:21:55.380 --> 00:21:57.260
I don't know if you
can see it from here.

00:21:57.260 --> 00:21:58.780
Car spinning around.

00:21:58.780 --> 00:22:02.820
I took this untouched-- It
just worked-- out of the box.

00:22:02.820 --> 00:22:04.460
This thing I built
in HTML5 in WebGL.

00:22:04.460 --> 00:22:08.330
And then I added touch events
so I can zoom and touch

00:22:08.330 --> 00:22:09.860
on different pieces
of the model.

00:22:09.860 --> 00:22:12.570
That took me half a day
to add the touch support.

00:22:12.570 --> 00:22:13.980
Good to go.

00:22:13.980 --> 00:22:16.530
Running at 60 frames a
second, this thing streams.

00:22:16.530 --> 00:22:17.030
Amazing.

00:22:19.540 --> 00:22:21.300
Seven inch, great deal.

00:22:21.300 --> 00:22:22.829
Go get one.

00:22:22.829 --> 00:22:25.120
And then we have another
speaker tonight, Don Olmstead,

00:22:25.120 --> 00:22:26.299
who I just mentioned.

00:22:26.299 --> 00:22:28.090
He works at Sony, and
you know what he did?

00:22:28.090 --> 00:22:31.925
He built the entire
PS4 interface in WebGL.

00:22:31.925 --> 00:22:32.550
So there we go.

00:22:32.550 --> 00:22:36.100
Four plus million seats in
one whack, WebGL powered.

00:22:36.100 --> 00:22:38.050
God bless you.

00:22:38.050 --> 00:22:42.460
The people who track browser
stats-- this is a good one.

00:22:42.460 --> 00:22:44.820
You know that NORAD
website that tracks

00:22:44.820 --> 00:22:47.082
Santa's progress around
the globe every year?

00:22:47.082 --> 00:22:49.540
So, they've had a WebGL thing
for the last couple of years,

00:22:49.540 --> 00:22:53.180
and we saw 146%
increase in people

00:22:53.180 --> 00:22:54.516
who got into the 3D experience.

00:22:54.516 --> 00:22:56.640
Which meant their browser
actually supported WebGL,

00:22:56.640 --> 00:22:59.190
mostly was the issue.

00:22:59.190 --> 00:23:03.250
I mentioned this, Opera is now
powering a Bang and Olufsen TV

00:23:03.250 --> 00:23:04.480
with their devices, SDK.

00:23:04.480 --> 00:23:07.510
So we have smart TVs
with full HTML5 in them.

00:23:07.510 --> 00:23:11.140
And tonight's event, I think we
broke all the records, right?

00:23:11.140 --> 00:23:13.982
So WebGL definitely
about to tip the scales,

00:23:13.982 --> 00:23:15.440
and I'm personally
delighted, and I

00:23:15.440 --> 00:23:16.740
think this is really exciting.

00:23:16.740 --> 00:23:19.360
People's enthusiasm for this
has been just incredible,

00:23:19.360 --> 00:23:20.420
this event tonight.

00:23:20.420 --> 00:23:21.920
So I encourage you
to stay in touch.

00:23:21.920 --> 00:23:23.500
All my particulars are here.

00:23:23.500 --> 00:23:26.230
Like I said, the slide show is
going to be up on SlideShare

00:23:26.230 --> 00:23:27.170
for you.

00:23:27.170 --> 00:23:28.624
So all the URLs will be there.

00:23:28.624 --> 00:23:30.040
And I was just
talking to Vanessa,

00:23:30.040 --> 00:23:32.040
and I think what I'm going
to do is ask O'Reilly

00:23:32.040 --> 00:23:33.680
to get me a promo
code so anybody

00:23:33.680 --> 00:23:35.430
from this meet-up
tonight can get

00:23:35.430 --> 00:23:37.990
a free version of the
new book as an eBook.

00:23:37.990 --> 00:23:39.490
The print one you've
got to pay for.

00:23:39.490 --> 00:23:41.480
And I'll sign it, I promise.

00:23:41.480 --> 00:23:43.527
So we'll make sure that
we get you the new book.

00:23:43.527 --> 00:23:45.360
But if you go on Amazon,
search for my name,

00:23:45.360 --> 00:23:47.520
you'll see these
two titles up there.

00:23:47.520 --> 00:23:50.320
And with that, thank
you again, Peter.

00:23:50.320 --> 00:23:51.240
And go forth.

00:23:51.240 --> 00:24:00.541
[APPLAUSE]

