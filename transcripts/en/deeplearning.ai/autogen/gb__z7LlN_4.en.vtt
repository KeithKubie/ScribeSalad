WEBVTT
Kind: captions
Language: en

00:00:00.210 --> 00:00:02.840
in the last video you saw the basic beam

00:00:02.840 --> 00:00:02.850
in the last video you saw the basic beam
 

00:00:02.850 --> 00:00:05.480
in the last video you saw the basic beam
search algorithm in this video you learn

00:00:05.480 --> 00:00:05.490
search algorithm in this video you learn
 

00:00:05.490 --> 00:00:07.789
search algorithm in this video you learn
some little changes that make it work

00:00:07.789 --> 00:00:07.799
some little changes that make it work
 

00:00:07.799 --> 00:00:11.720
some little changes that make it work
even better length normalization is a

00:00:11.720 --> 00:00:11.730
even better length normalization is a
 

00:00:11.730 --> 00:00:13.190
even better length normalization is a
small change to the beam search

00:00:13.190 --> 00:00:13.200
small change to the beam search
 

00:00:13.200 --> 00:00:15.079
small change to the beam search
algorithm that can help you get much

00:00:15.079 --> 00:00:15.089
algorithm that can help you get much
 

00:00:15.089 --> 00:00:17.990
algorithm that can help you get much
better results here's what it is we

00:00:17.990 --> 00:00:18.000
better results here's what it is we
 

00:00:18.000 --> 00:00:20.660
better results here's what it is we
talked about beam search as maximizing

00:00:20.660 --> 00:00:20.670
talked about beam search as maximizing
 

00:00:20.670 --> 00:00:24.200
talked about beam search as maximizing
this probability and this product here

00:00:24.200 --> 00:00:24.210
this probability and this product here
 

00:00:24.210 --> 00:00:26.810
this probability and this product here
is just expressing the observation that

00:00:26.810 --> 00:00:26.820
is just expressing the observation that
 

00:00:26.820 --> 00:00:33.110
is just expressing the observation that
P of y1 up to Y T Y given X can be

00:00:33.110 --> 00:00:33.120
P of y1 up to Y T Y given X can be
 

00:00:33.120 --> 00:00:38.470
P of y1 up to Y T Y given X can be
expressed as P of y 1 given X times P of

00:00:38.470 --> 00:00:38.480
expressed as P of y 1 given X times P of
 

00:00:38.480 --> 00:00:46.220
expressed as P of y 1 given X times P of
Y 2 given X and y1 x dot dot up to I

00:00:46.220 --> 00:00:46.230
Y 2 given X and y1 x dot dot up to I
 

00:00:46.230 --> 00:00:54.110
Y 2 given X and y1 x dot dot up to I
guess p r y py given X and y1 up to Y T

00:00:54.110 --> 00:00:54.120
guess p r y py given X and y1 up to Y T
 

00:00:54.120 --> 00:00:57.830
guess p r y py given X and y1 up to Y T
y -1 but then maybe this notation is a

00:00:57.830 --> 00:00:57.840
y -1 but then maybe this notation is a
 

00:00:57.840 --> 00:01:00.319
y -1 but then maybe this notation is a
bit more scary and more intimidating

00:01:00.319 --> 00:01:00.329
bit more scary and more intimidating
 

00:01:00.329 --> 00:01:01.939
bit more scary and more intimidating
than it needs to be but this is that

00:01:01.939 --> 00:01:01.949
than it needs to be but this is that
 

00:01:01.949 --> 00:01:04.549
than it needs to be but this is that
probability proper the probabilities

00:01:04.549 --> 00:01:04.559
probability proper the probabilities
 

00:01:04.559 --> 00:01:07.850
probability proper the probabilities
that you've seen previously now if

00:01:07.850 --> 00:01:07.860
that you've seen previously now if
 

00:01:07.860 --> 00:01:09.800
that you've seen previously now if
you're implementing these these

00:01:09.800 --> 00:01:09.810
you're implementing these these
 

00:01:09.810 --> 00:01:12.980
you're implementing these these
probabilities are all numbers less than

00:01:12.980 --> 00:01:12.990
probabilities are all numbers less than
 

00:01:12.990 --> 00:01:15.080
probabilities are all numbers less than
1 in fact often they are much less than

00:01:15.080 --> 00:01:15.090
1 in fact often they are much less than
 

00:01:15.090 --> 00:01:18.170
1 in fact often they are much less than
1 and multiplying a lot of numbers less

00:01:18.170 --> 00:01:18.180
1 and multiplying a lot of numbers less
 

00:01:18.180 --> 00:01:20.530
1 and multiplying a lot of numbers less
than 1 result in a tiny tiny tiny number

00:01:20.530 --> 00:01:20.540
than 1 result in a tiny tiny tiny number
 

00:01:20.540 --> 00:01:23.990
than 1 result in a tiny tiny tiny number
which can result in numerical underflow

00:01:23.990 --> 00:01:24.000
which can result in numerical underflow
 

00:01:24.000 --> 00:01:26.210
which can result in numerical underflow
meaning that is too small for the

00:01:26.210 --> 00:01:26.220
meaning that is too small for the
 

00:01:26.220 --> 00:01:27.800
meaning that is too small for the
floating-point representation in your

00:01:27.800 --> 00:01:27.810
floating-point representation in your
 

00:01:27.810 --> 00:01:32.090
floating-point representation in your
computer to store accurately so in

00:01:32.090 --> 00:01:32.100
computer to store accurately so in
 

00:01:32.100 --> 00:01:34.850
computer to store accurately so in
practice instead of maximizing this

00:01:34.850 --> 00:01:34.860
practice instead of maximizing this
 

00:01:34.860 --> 00:01:40.910
practice instead of maximizing this
product we will take logs and if you

00:01:40.910 --> 00:01:40.920
product we will take logs and if you
 

00:01:40.920 --> 00:01:43.280
product we will take logs and if you
insert a lot there then the log of a

00:01:43.280 --> 00:01:43.290
insert a lot there then the log of a
 

00:01:43.290 --> 00:01:46.090
insert a lot there then the log of a
product becomes a sum of a log and

00:01:46.090 --> 00:01:46.100
product becomes a sum of a log and
 

00:01:46.100 --> 00:01:48.469
product becomes a sum of a log and
maximizing this sum of long

00:01:48.469 --> 00:01:48.479
maximizing this sum of long
 

00:01:48.479 --> 00:01:50.690
maximizing this sum of long
probabilities should give you the same

00:01:50.690 --> 00:01:50.700
probabilities should give you the same
 

00:01:50.700 --> 00:01:53.210
probabilities should give you the same
result in terms of selecting the most

00:01:53.210 --> 00:01:53.220
result in terms of selecting the most
 

00:01:53.220 --> 00:01:56.990
result in terms of selecting the most
likely sentence Y so by taking logs you

00:01:56.990 --> 00:01:57.000
likely sentence Y so by taking logs you
 

00:01:57.000 --> 00:01:59.889
likely sentence Y so by taking logs you
end up with a more numerically stable

00:01:59.889 --> 00:01:59.899
end up with a more numerically stable
 

00:01:59.899 --> 00:02:04.850
end up with a more numerically stable
algorithm that is less prone to rounding

00:02:04.850 --> 00:02:04.860
algorithm that is less prone to rounding
 

00:02:04.860 --> 00:02:07.550
algorithm that is less prone to rounding
errors numerical rounding errors or to

00:02:07.550 --> 00:02:07.560
errors numerical rounding errors or to
 

00:02:07.560 --> 00:02:09.930
errors numerical rounding errors or to
really numerical underflow and

00:02:09.930 --> 00:02:09.940
really numerical underflow and
 

00:02:09.940 --> 00:02:12.150
really numerical underflow and
because the log function that's the

00:02:12.150 --> 00:02:12.160
because the log function that's the
 

00:02:12.160 --> 00:02:13.830
because the log function that's the
logarithmic function there's a strictly

00:02:13.830 --> 00:02:13.840
logarithmic function there's a strictly
 

00:02:13.840 --> 00:02:16.040
logarithmic function there's a strictly
monotonically increasing function

00:02:16.040 --> 00:02:16.050
monotonically increasing function
 

00:02:16.050 --> 00:02:20.850
monotonically increasing function
maximizing P of Y and because the

00:02:20.850 --> 00:02:20.860
maximizing P of Y and because the
 

00:02:20.860 --> 00:02:22.620
maximizing P of Y and because the
logarithmic function here's the log

00:02:22.620 --> 00:02:22.630
logarithmic function here's the log
 

00:02:22.630 --> 00:02:25.380
logarithmic function here's the log
function is a strictly monotonically

00:02:25.380 --> 00:02:25.390
function is a strictly monotonically
 

00:02:25.390 --> 00:02:27.710
function is a strictly monotonically
increasing function we know that

00:02:27.710 --> 00:02:27.720
increasing function we know that
 

00:02:27.720 --> 00:02:31.800
increasing function we know that
maximizing log P of Y given X should

00:02:31.800 --> 00:02:31.810
maximizing log P of Y given X should
 

00:02:31.810 --> 00:02:34.620
maximizing log P of Y given X should
give you the same result as maximizing P

00:02:34.620 --> 00:02:34.630
give you the same result as maximizing P
 

00:02:34.630 --> 00:02:38.700
give you the same result as maximizing P
of Y given X as in the same value of y

00:02:38.700 --> 00:02:38.710
of Y given X as in the same value of y
 

00:02:38.710 --> 00:02:42.180
of Y given X as in the same value of y
that maximizes this should also maximize

00:02:42.180 --> 00:02:42.190
that maximizes this should also maximize
 

00:02:42.190 --> 00:02:45.120
that maximizes this should also maximize
that so in most implementations you keep

00:02:45.120 --> 00:02:45.130
that so in most implementations you keep
 

00:02:45.130 --> 00:02:47.880
that so in most implementations you keep
track of the sum of logs of the

00:02:47.880 --> 00:02:47.890
track of the sum of logs of the
 

00:02:47.890 --> 00:02:50.040
track of the sum of logs of the
probabilities rather than the product of

00:02:50.040 --> 00:02:50.050
probabilities rather than the product of
 

00:02:50.050 --> 00:02:52.830
probabilities rather than the product of
the problem what sees now there's one

00:02:52.830 --> 00:02:52.840
the problem what sees now there's one
 

00:02:52.840 --> 00:02:55.880
the problem what sees now there's one
other change to this objective function

00:02:55.880 --> 00:02:55.890
other change to this objective function
 

00:02:55.890 --> 00:02:58.770
other change to this objective function
that makes the machine translation

00:02:58.770 --> 00:02:58.780
that makes the machine translation
 

00:02:58.780 --> 00:03:04.460
that makes the machine translation
algorithm work even better which is that

00:03:04.460 --> 00:03:04.470
algorithm work even better which is that
 

00:03:04.470 --> 00:03:07.560
algorithm work even better which is that
if you refer to this original objective

00:03:07.560 --> 00:03:07.570
if you refer to this original objective
 

00:03:07.570 --> 00:03:10.770
if you refer to this original objective
up here if you have a very long sentence

00:03:10.770 --> 00:03:10.780
up here if you have a very long sentence
 

00:03:10.780 --> 00:03:13.320
up here if you have a very long sentence
the probability that sentence is going

00:03:13.320 --> 00:03:13.330
the probability that sentence is going
 

00:03:13.330 --> 00:03:15.300
the probability that sentence is going
to be low because you're multiplying as

00:03:15.300 --> 00:03:15.310
to be low because you're multiplying as
 

00:03:15.310 --> 00:03:18.630
to be low because you're multiplying as
many terms here lots of numbers are less

00:03:18.630 --> 00:03:18.640
many terms here lots of numbers are less
 

00:03:18.640 --> 00:03:21.210
many terms here lots of numbers are less
than 1 to estimate the probability of

00:03:21.210 --> 00:03:21.220
than 1 to estimate the probability of
 

00:03:21.220 --> 00:03:23.250
than 1 to estimate the probability of
that sentence and so if you multiply law

00:03:23.250 --> 00:03:23.260
that sentence and so if you multiply law
 

00:03:23.260 --> 00:03:25.140
that sentence and so if you multiply law
the numbers are less than 1 together you

00:03:25.140 --> 00:03:25.150
the numbers are less than 1 together you
 

00:03:25.150 --> 00:03:27.420
the numbers are less than 1 together you
just tend to end up with a smaller

00:03:27.420 --> 00:03:27.430
just tend to end up with a smaller
 

00:03:27.430 --> 00:03:32.340
just tend to end up with a smaller
probability and so this objective

00:03:32.340 --> 00:03:32.350
probability and so this objective
 

00:03:32.350 --> 00:03:35.040
probability and so this objective
function has a undesirable effect that

00:03:35.040 --> 00:03:35.050
function has a undesirable effect that
 

00:03:35.050 --> 00:03:37.470
function has a undesirable effect that
it may be unnaturally tends to prefer

00:03:37.470 --> 00:03:37.480
it may be unnaturally tends to prefer
 

00:03:37.480 --> 00:03:40.560
it may be unnaturally tends to prefer
very short translations tests prefer

00:03:40.560 --> 00:03:40.570
very short translations tests prefer
 

00:03:40.570 --> 00:03:44.190
very short translations tests prefer
very short outputs because the

00:03:44.190 --> 00:03:44.200
very short outputs because the
 

00:03:44.200 --> 00:03:45.960
very short outputs because the
probability of a short sentence is

00:03:45.960 --> 00:03:45.970
probability of a short sentence is
 

00:03:45.970 --> 00:03:48.780
probability of a short sentence is
determined just by multiplying fewer of

00:03:48.780 --> 00:03:48.790
determined just by multiplying fewer of
 

00:03:48.790 --> 00:03:53.160
determined just by multiplying fewer of
these numbers are less than 1 and so the

00:03:53.160 --> 00:03:53.170
these numbers are less than 1 and so the
 

00:03:53.170 --> 00:03:55.920
these numbers are less than 1 and so the
product will just be not quite as small

00:03:55.920 --> 00:03:55.930
product will just be not quite as small
 

00:03:55.930 --> 00:03:58.710
product will just be not quite as small
and by the way the same thing is true

00:03:58.710 --> 00:03:58.720
and by the way the same thing is true
 

00:03:58.720 --> 00:04:01.110
and by the way the same thing is true
for this the log of a probability is

00:04:01.110 --> 00:04:01.120
for this the log of a probability is
 

00:04:01.120 --> 00:04:05.640
for this the log of a probability is
always less than or equal to 1 you're

00:04:05.640 --> 00:04:05.650
always less than or equal to 1 you're
 

00:04:05.650 --> 00:04:07.890
always less than or equal to 1 you're
actually in this range of the log so the

00:04:07.890 --> 00:04:07.900
actually in this range of the log so the
 

00:04:07.900 --> 00:04:09.990
actually in this range of the log so the
more terms you have together the more

00:04:09.990 --> 00:04:10.000
more terms you have together the more
 

00:04:10.000 --> 00:04:15.720
more terms you have together the more
negative this thing becomes so there's

00:04:15.720 --> 00:04:15.730
negative this thing becomes so there's
 

00:04:15.730 --> 00:04:17.430
negative this thing becomes so there's
one other change the algorithm that

00:04:17.430 --> 00:04:17.440
one other change the algorithm that
 

00:04:17.440 --> 00:04:19.950
one other change the algorithm that
makes it work better which is instead of

00:04:19.950 --> 00:04:19.960
makes it work better which is instead of
 

00:04:19.960 --> 00:04:23.190
makes it work better which is instead of
using this as the objective you're

00:04:23.190 --> 00:04:23.200
using this as the objective you're
 

00:04:23.200 --> 00:04:23.840
using this as the objective you're
trying to

00:04:23.840 --> 00:04:23.850
trying to
 

00:04:23.850 --> 00:04:26.750
trying to
maximize one thing you could do is

00:04:26.750 --> 00:04:26.760
maximize one thing you could do is
 

00:04:26.760 --> 00:04:29.480
maximize one thing you could do is
normalize this by the number of words in

00:04:29.480 --> 00:04:29.490
normalize this by the number of words in
 

00:04:29.490 --> 00:04:33.260
normalize this by the number of words in
your translation and so this takes the

00:04:33.260 --> 00:04:33.270
your translation and so this takes the
 

00:04:33.270 --> 00:04:35.720
your translation and so this takes the
average of the log of the probability of

00:04:35.720 --> 00:04:35.730
average of the log of the probability of
 

00:04:35.730 --> 00:04:39.800
average of the log of the probability of
each word now and this and this

00:04:39.800 --> 00:04:39.810
each word now and this and this
 

00:04:39.810 --> 00:04:42.410
each word now and this and this
significantly reduces the penalty for

00:04:42.410 --> 00:04:42.420
significantly reduces the penalty for
 

00:04:42.420 --> 00:04:45.110
significantly reduces the penalty for
outputting longer translations and in

00:04:45.110 --> 00:04:45.120
outputting longer translations and in
 

00:04:45.120 --> 00:04:48.260
outputting longer translations and in
practice as a heuristic instead of

00:04:48.260 --> 00:04:48.270
practice as a heuristic instead of
 

00:04:48.270 --> 00:04:50.330
practice as a heuristic instead of
dividing by T why but the number of

00:04:50.330 --> 00:04:50.340
dividing by T why but the number of
 

00:04:50.340 --> 00:04:52.850
dividing by T why but the number of
words in the output sentence sometimes

00:04:52.850 --> 00:04:52.860
words in the output sentence sometimes
 

00:04:52.860 --> 00:04:54.770
words in the output sentence sometimes
you used a softer approach where you

00:04:54.770 --> 00:04:54.780
you used a softer approach where you
 

00:04:54.780 --> 00:04:57.260
you used a softer approach where you
have T Y to the power of alpha where

00:04:57.260 --> 00:04:57.270
have T Y to the power of alpha where
 

00:04:57.270 --> 00:05:01.220
have T Y to the power of alpha where
maybe alpha is equal to 0.7 so if alpha

00:05:01.220 --> 00:05:01.230
maybe alpha is equal to 0.7 so if alpha
 

00:05:01.230 --> 00:05:03.440
maybe alpha is equal to 0.7 so if alpha
was equal to 1 then Y a completely

00:05:03.440 --> 00:05:03.450
was equal to 1 then Y a completely
 

00:05:03.450 --> 00:05:05.990
was equal to 1 then Y a completely
normalizing by length if alpha was equal

00:05:05.990 --> 00:05:06.000
normalizing by length if alpha was equal
 

00:05:06.000 --> 00:05:09.980
normalizing by length if alpha was equal
to zero then well T Y to the 0 would be

00:05:09.980 --> 00:05:09.990
to zero then well T Y to the 0 would be
 

00:05:09.990 --> 00:05:11.960
to zero then well T Y to the 0 would be
1 then you're just not normalizing at

00:05:11.960 --> 00:05:11.970
1 then you're just not normalizing at
 

00:05:11.970 --> 00:05:14.660
1 then you're just not normalizing at
all and this is somewhere in between for

00:05:14.660 --> 00:05:14.670
all and this is somewhere in between for
 

00:05:14.670 --> 00:05:17.560
all and this is somewhere in between for
normalization and no normalization and

00:05:17.560 --> 00:05:17.570
normalization and no normalization and
 

00:05:17.570 --> 00:05:20.930
normalization and no normalization and
alpha is another parameter or hyper form

00:05:20.930 --> 00:05:20.940
alpha is another parameter or hyper form
 

00:05:20.940 --> 00:05:22.940
alpha is another parameter or hyper form
to the algorithm that you can tuned to

00:05:22.940 --> 00:05:22.950
to the algorithm that you can tuned to
 

00:05:22.950 --> 00:05:27.020
to the algorithm that you can tuned to
try to get the best results and have

00:05:27.020 --> 00:05:27.030
try to get the best results and have
 

00:05:27.030 --> 00:05:29.090
try to get the best results and have
them it using alpha this way this is a

00:05:29.090 --> 00:05:29.100
them it using alpha this way this is a
 

00:05:29.100 --> 00:05:32.090
them it using alpha this way this is a
heuristic or this is a hack there isn't

00:05:32.090 --> 00:05:32.100
heuristic or this is a hack there isn't
 

00:05:32.100 --> 00:05:34.220
heuristic or this is a hack there isn't
a great theoretical justification for it

00:05:34.220 --> 00:05:34.230
a great theoretical justification for it
 

00:05:34.230 --> 00:05:37.700
a great theoretical justification for it
but people found this works well people

00:05:37.700 --> 00:05:37.710
but people found this works well people
 

00:05:37.710 --> 00:05:39.380
but people found this works well people
found that works well in practice so

00:05:39.380 --> 00:05:39.390
found that works well in practice so
 

00:05:39.390 --> 00:05:41.990
found that works well in practice so
many groups will do this and you can try

00:05:41.990 --> 00:05:42.000
many groups will do this and you can try
 

00:05:42.000 --> 00:05:45.080
many groups will do this and you can try
out different values of how fair until

00:05:45.080 --> 00:05:45.090
out different values of how fair until
 

00:05:45.090 --> 00:05:46.820
out different values of how fair until
and then see which one gives you the

00:05:46.820 --> 00:05:46.830
and then see which one gives you the
 

00:05:46.830 --> 00:05:50.450
and then see which one gives you the
best result so just to wrap up how you

00:05:50.450 --> 00:05:50.460
best result so just to wrap up how you
 

00:05:50.460 --> 00:05:52.970
best result so just to wrap up how you
run beam search as you run beam search

00:05:52.970 --> 00:05:52.980
run beam search as you run beam search
 

00:05:52.980 --> 00:05:55.820
run beam search as you run beam search
you see a lot of sentences with length

00:05:55.820 --> 00:05:55.830
you see a lot of sentences with length
 

00:05:55.830 --> 00:05:59.240
you see a lot of sentences with length
equal 1 long sentences of length equal

00:05:59.240 --> 00:05:59.250
equal 1 long sentences of length equal
 

00:05:59.250 --> 00:06:02.650
equal 1 long sentences of length equal
to law sentence of thank you goes 3 and

00:06:02.650 --> 00:06:02.660
to law sentence of thank you goes 3 and
 

00:06:02.660 --> 00:06:05.720
to law sentence of thank you goes 3 and
so on and maybe you run beam search for

00:06:05.720 --> 00:06:05.730
so on and maybe you run beam search for
 

00:06:05.730 --> 00:06:08.270
so on and maybe you run beam search for
30 steps you'll consider I'll put

00:06:08.270 --> 00:06:08.280
30 steps you'll consider I'll put
 

00:06:08.280 --> 00:06:11.780
30 steps you'll consider I'll put
sentences up to length 30 let's say and

00:06:11.780 --> 00:06:11.790
sentences up to length 30 let's say and
 

00:06:11.790 --> 00:06:15.320
sentences up to length 30 let's say and
so would beam with a 3 you were keeping

00:06:15.320 --> 00:06:15.330
so would beam with a 3 you were keeping
 

00:06:15.330 --> 00:06:17.960
so would beam with a 3 you were keeping
you would be keeping track of the top 3

00:06:17.960 --> 00:06:17.970
you would be keeping track of the top 3
 

00:06:17.970 --> 00:06:20.240
you would be keeping track of the top 3
possibilities for each of these possible

00:06:20.240 --> 00:06:20.250
possibilities for each of these possible
 

00:06:20.250 --> 00:06:23.240
possibilities for each of these possible
sentence lengths 1 2 3 4 and so on up to

00:06:23.240 --> 00:06:23.250
sentence lengths 1 2 3 4 and so on up to
 

00:06:23.250 --> 00:06:30.740
sentence lengths 1 2 3 4 and so on up to
30 then you would look at all the output

00:06:30.740 --> 00:06:30.750
30 then you would look at all the output
 

00:06:30.750 --> 00:06:32.950
30 then you would look at all the output
sentences and

00:06:32.950 --> 00:06:32.960
sentences and
 

00:06:32.960 --> 00:06:38.140
sentences and
Skol them against this score and so you

00:06:38.140 --> 00:06:38.150
Skol them against this score and so you
 

00:06:38.150 --> 00:06:41.499
Skol them against this score and so you
can take your top sentences and just

00:06:41.499 --> 00:06:41.509
can take your top sentences and just
 

00:06:41.509 --> 00:06:44.529
can take your top sentences and just
compute this objective function on the

00:06:44.529 --> 00:06:44.539
compute this objective function on the
 

00:06:44.539 --> 00:06:47.409
compute this objective function on the
sentences that you have seen through the

00:06:47.409 --> 00:06:47.419
sentences that you have seen through the
 

00:06:47.419 --> 00:06:51.700
sentences that you have seen through the
beam search process and then finally of

00:06:51.700 --> 00:06:51.710
beam search process and then finally of
 

00:06:51.710 --> 00:06:53.439
beam search process and then finally of
all these sentences that you evaluate

00:06:53.439 --> 00:06:53.449
all these sentences that you evaluate
 

00:06:53.449 --> 00:06:55.300
all these sentences that you evaluate
this way you'll pick the one that

00:06:55.300 --> 00:06:55.310
this way you'll pick the one that
 

00:06:55.310 --> 00:06:57.659
this way you'll pick the one that
achieves the highest value on this sum

00:06:57.659 --> 00:06:57.669
achieves the highest value on this sum
 

00:06:57.669 --> 00:07:00.610
achieves the highest value on this sum
normalize law probability objective

00:07:00.610 --> 00:07:00.620
normalize law probability objective
 

00:07:00.620 --> 00:07:02.379
normalize law probability objective
sometimes it's called a normalize log

00:07:02.379 --> 00:07:02.389
sometimes it's called a normalize log
 

00:07:02.389 --> 00:07:04.749
sometimes it's called a normalize log
likelihood objective and then that would

00:07:04.749 --> 00:07:04.759
likelihood objective and then that would
 

00:07:04.759 --> 00:07:08.589
likelihood objective and then that would
be the final translation your output so

00:07:08.589 --> 00:07:08.599
be the final translation your output so
 

00:07:08.599 --> 00:07:10.779
be the final translation your output so
that's how you implement beam search and

00:07:10.779 --> 00:07:10.789
that's how you implement beam search and
 

00:07:10.789 --> 00:07:12.909
that's how you implement beam search and
you get to play this yourself in this

00:07:12.909 --> 00:07:12.919
you get to play this yourself in this
 

00:07:12.919 --> 00:07:15.520
you get to play this yourself in this
week's programming exercise finally a

00:07:15.520 --> 00:07:15.530
week's programming exercise finally a
 

00:07:15.530 --> 00:07:18.670
week's programming exercise finally a
few implementational details how do you

00:07:18.670 --> 00:07:18.680
few implementational details how do you
 

00:07:18.680 --> 00:07:22.060
few implementational details how do you
choose the beam with be the larger B is

00:07:22.060 --> 00:07:22.070
choose the beam with be the larger B is
 

00:07:22.070 --> 00:07:24.580
choose the beam with be the larger B is
the more possibilities are considering

00:07:24.580 --> 00:07:24.590
the more possibilities are considering
 

00:07:24.590 --> 00:07:26.560
the more possibilities are considering
and does the better the sentence you

00:07:26.560 --> 00:07:26.570
and does the better the sentence you
 

00:07:26.570 --> 00:07:29.800
and does the better the sentence you
probably find but the larger beers the

00:07:29.800 --> 00:07:29.810
probably find but the larger beers the
 

00:07:29.810 --> 00:07:31.719
probably find but the larger beers the
more computationally expensive your

00:07:31.719 --> 00:07:31.729
more computationally expensive your
 

00:07:31.729 --> 00:07:33.490
more computationally expensive your
algorithm is because you're also keeping

00:07:33.490 --> 00:07:33.500
algorithm is because you're also keeping
 

00:07:33.500 --> 00:07:36.520
algorithm is because you're also keeping
a lot more possibilities around so

00:07:36.520 --> 00:07:36.530
a lot more possibilities around so
 

00:07:36.530 --> 00:07:39.670
a lot more possibilities around so
finally let's just wrap up with some

00:07:39.670 --> 00:07:39.680
finally let's just wrap up with some
 

00:07:39.680 --> 00:07:41.980
finally let's just wrap up with some
thoughts on how to choose the beam with

00:07:41.980 --> 00:07:41.990
thoughts on how to choose the beam with
 

00:07:41.990 --> 00:07:45.159
thoughts on how to choose the beam with
B so here are the pros and cons of

00:07:45.159 --> 00:07:45.169
B so here are the pros and cons of
 

00:07:45.169 --> 00:07:47.980
B so here are the pros and cons of
setting B to be very large versus very

00:07:47.980 --> 00:07:47.990
setting B to be very large versus very
 

00:07:47.990 --> 00:07:51.670
setting B to be very large versus very
small if the beam wave is very large

00:07:51.670 --> 00:07:51.680
small if the beam wave is very large
 

00:07:51.680 --> 00:07:54.640
small if the beam wave is very large
then you consider a lot of possibilities

00:07:54.640 --> 00:07:54.650
then you consider a lot of possibilities
 

00:07:54.650 --> 00:07:57.570
then you consider a lot of possibilities
and so you tend to get a better result

00:07:57.570 --> 00:07:57.580
and so you tend to get a better result
 

00:07:57.580 --> 00:07:59.770
and so you tend to get a better result
because you're concerned a lot of

00:07:59.770 --> 00:07:59.780
because you're concerned a lot of
 

00:07:59.780 --> 00:08:02.680
because you're concerned a lot of
different options but it will be slower

00:08:02.680 --> 00:08:02.690
different options but it will be slower
 

00:08:02.690 --> 00:08:04.779
different options but it will be slower
and the memory requirements will also

00:08:04.779 --> 00:08:04.789
and the memory requirements will also
 

00:08:04.789 --> 00:08:06.610
and the memory requirements will also
grow it'll also be computationally

00:08:06.610 --> 00:08:06.620
grow it'll also be computationally
 

00:08:06.620 --> 00:08:09.790
grow it'll also be computationally
slower whereas if you use a very small

00:08:09.790 --> 00:08:09.800
slower whereas if you use a very small
 

00:08:09.800 --> 00:08:12.370
slower whereas if you use a very small
beam width then you get the worst result

00:08:12.370 --> 00:08:12.380
beam width then you get the worst result
 

00:08:12.380 --> 00:08:14.350
beam width then you get the worst result
because you're just keeping less

00:08:14.350 --> 00:08:14.360
because you're just keeping less
 

00:08:14.360 --> 00:08:17.499
because you're just keeping less
possibilities in mind as the algorithm

00:08:17.499 --> 00:08:17.509
possibilities in mind as the algorithm
 

00:08:17.509 --> 00:08:20.709
possibilities in mind as the algorithm
is running but you get a result faster

00:08:20.709 --> 00:08:20.719
is running but you get a result faster
 

00:08:20.719 --> 00:08:22.930
is running but you get a result faster
and the memory requirements will also be

00:08:22.930 --> 00:08:22.940
and the memory requirements will also be
 

00:08:22.940 --> 00:08:27.010
and the memory requirements will also be
lower so in the previous video we use in

00:08:27.010 --> 00:08:27.020
lower so in the previous video we use in
 

00:08:27.020 --> 00:08:29.529
lower so in the previous video we use in
our running example of beam width of 3

00:08:29.529 --> 00:08:29.539
our running example of beam width of 3
 

00:08:29.539 --> 00:08:31.659
our running example of beam width of 3
so we're keeping three possibilities in

00:08:31.659 --> 00:08:31.669
so we're keeping three possibilities in
 

00:08:31.669 --> 00:08:34.329
so we're keeping three possibilities in
mind in practice that is on the small

00:08:34.329 --> 00:08:34.339
mind in practice that is on the small
 

00:08:34.339 --> 00:08:36.699
mind in practice that is on the small
side in production systems it's not

00:08:36.699 --> 00:08:36.709
side in production systems it's not
 

00:08:36.709 --> 00:08:38.560
side in production systems it's not
uncommon to see it being with maybe

00:08:38.560 --> 00:08:38.570
uncommon to see it being with maybe
 

00:08:38.570 --> 00:08:39.610
uncommon to see it being with maybe
around 10

00:08:39.610 --> 00:08:39.620
around 10
 

00:08:39.620 --> 00:08:42.920
around 10
and I think being worth of a hundred we

00:08:42.920 --> 00:08:42.930
and I think being worth of a hundred we
 

00:08:42.930 --> 00:08:45.620
and I think being worth of a hundred we
consider very large for a production

00:08:45.620 --> 00:08:45.630
consider very large for a production
 

00:08:45.630 --> 00:08:48.980
consider very large for a production
system depending on the application but

00:08:48.980 --> 00:08:48.990
system depending on the application but
 

00:08:48.990 --> 00:08:50.990
system depending on the application but
for research systems where people want

00:08:50.990 --> 00:08:51.000
for research systems where people want
 

00:08:51.000 --> 00:08:52.880
for research systems where people want
to squeeze out every last drop in

00:08:52.880 --> 00:08:52.890
to squeeze out every last drop in
 

00:08:52.890 --> 00:08:54.560
to squeeze out every last drop in
performance in order to publish a paper

00:08:54.560 --> 00:08:54.570
performance in order to publish a paper
 

00:08:54.570 --> 00:08:56.390
performance in order to publish a paper
in the best possible result it's not

00:08:56.390 --> 00:08:56.400
in the best possible result it's not
 

00:08:56.400 --> 00:08:59.180
in the best possible result it's not
uncommon to see people use B oneself or

00:08:59.180 --> 00:08:59.190
uncommon to see people use B oneself or
 

00:08:59.190 --> 00:09:01.850
uncommon to see people use B oneself or
a thousand or three thousand but this is

00:09:01.850 --> 00:09:01.860
a thousand or three thousand but this is
 

00:09:01.860 --> 00:09:05.300
a thousand or three thousand but this is
very application as well as domain

00:09:05.300 --> 00:09:05.310
very application as well as domain
 

00:09:05.310 --> 00:09:08.300
very application as well as domain
dependent so I would say try out a

00:09:08.300 --> 00:09:08.310
dependent so I would say try out a
 

00:09:08.310 --> 00:09:11.060
dependent so I would say try out a
variety of values of B and see what

00:09:11.060 --> 00:09:11.070
variety of values of B and see what
 

00:09:11.070 --> 00:09:13.850
variety of values of B and see what
works for your application but when B

00:09:13.850 --> 00:09:13.860
works for your application but when B
 

00:09:13.860 --> 00:09:16.040
works for your application but when B
gets very large there is often

00:09:16.040 --> 00:09:16.050
gets very large there is often
 

00:09:16.050 --> 00:09:19.880
gets very large there is often
diminishing returns so for many

00:09:19.880 --> 00:09:19.890
diminishing returns so for many
 

00:09:19.890 --> 00:09:22.250
diminishing returns so for many
applications I would expect to see a

00:09:22.250 --> 00:09:22.260
applications I would expect to see a
 

00:09:22.260 --> 00:09:24.800
applications I would expect to see a
huge gain as you go from being off of

00:09:24.800 --> 00:09:24.810
huge gain as you go from being off of
 

00:09:24.810 --> 00:09:26.690
huge gain as you go from being off of
one which may seem greedy search to

00:09:26.690 --> 00:09:26.700
one which may seem greedy search to
 

00:09:26.700 --> 00:09:29.510
one which may seem greedy search to
three to maybe ten but the gains as you

00:09:29.510 --> 00:09:29.520
three to maybe ten but the gains as you
 

00:09:29.520 --> 00:09:31.700
three to maybe ten but the gains as you
go from a thousand to three thousand and

00:09:31.700 --> 00:09:31.710
go from a thousand to three thousand and
 

00:09:31.710 --> 00:09:35.600
go from a thousand to three thousand and
be with might not be as big and for

00:09:35.600 --> 00:09:35.610
be with might not be as big and for
 

00:09:35.610 --> 00:09:39.080
be with might not be as big and for
those of you that have taken maybe a lot

00:09:39.080 --> 00:09:39.090
those of you that have taken maybe a lot
 

00:09:39.090 --> 00:09:41.870
those of you that have taken maybe a lot
of computer science courses before if

00:09:41.870 --> 00:09:41.880
of computer science courses before if
 

00:09:41.880 --> 00:09:43.940
of computer science courses before if
you're familiar with computer science

00:09:43.940 --> 00:09:43.950
you're familiar with computer science
 

00:09:43.950 --> 00:09:46.280
you're familiar with computer science
search algorithms like BFS breadth-first

00:09:46.280 --> 00:09:46.290
search algorithms like BFS breadth-first
 

00:09:46.290 --> 00:09:49.640
search algorithms like BFS breadth-first
search or DFS deficit the way to think

00:09:49.640 --> 00:09:49.650
search or DFS deficit the way to think
 

00:09:49.650 --> 00:09:51.590
search or DFS deficit the way to think
about beam search is that unlike those

00:09:51.590 --> 00:09:51.600
about beam search is that unlike those
 

00:09:51.600 --> 00:09:53.300
about beam search is that unlike those
other algorithms which you may have

00:09:53.300 --> 00:09:53.310
other algorithms which you may have
 

00:09:53.310 --> 00:09:55.130
other algorithms which you may have
learned about in computer science

00:09:55.130 --> 00:09:55.140
learned about in computer science
 

00:09:55.140 --> 00:09:56.960
learned about in computer science
algorithms course and don't worry about

00:09:56.960 --> 00:09:56.970
algorithms course and don't worry about
 

00:09:56.970 --> 00:09:58.190
algorithms course and don't worry about
it if you've not heard of these

00:09:58.190 --> 00:09:58.200
it if you've not heard of these
 

00:09:58.200 --> 00:09:59.870
it if you've not heard of these
algorithms but if you've heard of

00:09:59.870 --> 00:09:59.880
algorithms but if you've heard of
 

00:09:59.880 --> 00:10:01.520
algorithms but if you've heard of
professor to therefore search then

00:10:01.520 --> 00:10:01.530
professor to therefore search then
 

00:10:01.530 --> 00:10:04.280
professor to therefore search then
unlike those algorithms which are exact

00:10:04.280 --> 00:10:04.290
unlike those algorithms which are exact
 

00:10:04.290 --> 00:10:06.980
unlike those algorithms which are exact
search algorithms beam so she runs much

00:10:06.980 --> 00:10:06.990
search algorithms beam so she runs much
 

00:10:06.990 --> 00:10:09.860
search algorithms beam so she runs much
faster but does not guarantee to find

00:10:09.860 --> 00:10:09.870
faster but does not guarantee to find
 

00:10:09.870 --> 00:10:12.710
faster but does not guarantee to find
the exact maximum for this automatically

00:10:12.710 --> 00:10:12.720
the exact maximum for this automatically
 

00:10:12.720 --> 00:10:15.710
the exact maximum for this automatically
you like to find if you haven't heard a

00:10:15.710 --> 00:10:15.720
you like to find if you haven't heard a
 

00:10:15.720 --> 00:10:16.670
you like to find if you haven't heard a
breadth-first search your deck for

00:10:16.670 --> 00:10:16.680
breadth-first search your deck for
 

00:10:16.680 --> 00:10:18.350
breadth-first search your deck for
search don't worry about it it's not

00:10:18.350 --> 00:10:18.360
search don't worry about it it's not
 

00:10:18.360 --> 00:10:20.720
search don't worry about it it's not
important for our purposes but if you

00:10:20.720 --> 00:10:20.730
important for our purposes but if you
 

00:10:20.730 --> 00:10:23.150
important for our purposes but if you
have this is how beam search relates to

00:10:23.150 --> 00:10:23.160
have this is how beam search relates to
 

00:10:23.160 --> 00:10:26.450
have this is how beam search relates to
those algorithms so that's it the beam

00:10:26.450 --> 00:10:26.460
those algorithms so that's it the beam
 

00:10:26.460 --> 00:10:28.550
those algorithms so that's it the beam
search which is a widely used algorithm

00:10:28.550 --> 00:10:28.560
search which is a widely used algorithm
 

00:10:28.560 --> 00:10:30.710
search which is a widely used algorithm
in many production systems there are

00:10:30.710 --> 00:10:30.720
in many production systems there are
 

00:10:30.720 --> 00:10:34.640
in many production systems there are
many commercial systems now in the third

00:10:34.640 --> 00:10:34.650
many commercial systems now in the third
 

00:10:34.650 --> 00:10:36.590
many commercial systems now in the third
course in this sequence of courses on

00:10:36.590 --> 00:10:36.600
course in this sequence of courses on
 

00:10:36.600 --> 00:10:38.770
course in this sequence of courses on
deep learning we talk a lot about error

00:10:38.770 --> 00:10:38.780
deep learning we talk a lot about error
 

00:10:38.780 --> 00:10:41.450
deep learning we talk a lot about error
analysis it turns out one of the most

00:10:41.450 --> 00:10:41.460
analysis it turns out one of the most
 

00:10:41.460 --> 00:10:43.820
analysis it turns out one of the most
useful tools I've found is similar to

00:10:43.820 --> 00:10:43.830
useful tools I've found is similar to
 

00:10:43.830 --> 00:10:46.280
useful tools I've found is similar to
error analysis on beam search so you

00:10:46.280 --> 00:10:46.290
error analysis on beam search so you
 

00:10:46.290 --> 00:10:47.960
error analysis on beam search so you
sometimes wonder should I increase my

00:10:47.960 --> 00:10:47.970
sometimes wonder should I increase my
 

00:10:47.970 --> 00:10:50.000
sometimes wonder should I increase my
beam width is my beam working well

00:10:50.000 --> 00:10:50.010
beam width is my beam working well
 

00:10:50.010 --> 00:10:52.370
beam width is my beam working well
enough and there's some simple things

00:10:52.370 --> 00:10:52.380
enough and there's some simple things
 

00:10:52.380 --> 00:10:52.889
enough and there's some simple things
you can

00:10:52.889 --> 00:10:52.899
you can
 

00:10:52.899 --> 00:10:54.840
you can
to give you guidance on whether you need

00:10:54.840 --> 00:10:54.850
to give you guidance on whether you need
 

00:10:54.850 --> 00:10:56.910
to give you guidance on whether you need
to work on improving your search

00:10:56.910 --> 00:10:56.920
to work on improving your search
 

00:10:56.920 --> 00:10:59.429
to work on improving your search
algorithm let's talk about that in the

00:10:59.429 --> 00:10:59.439
algorithm let's talk about that in the
 

00:10:59.439 --> 00:11:01.829
algorithm let's talk about that in the
next video

