WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:51.601
[MUSIC PLAYING]

00:00:59.086 --> 00:01:00.380
ALI AFSHAR: Hi, everyone.

00:01:00.380 --> 00:01:03.370
Welcome to Google Developers
Live with Google Drive.

00:01:03.370 --> 00:01:06.770
My name's Ali, and I'm joined
here today with JunYoung, and

00:01:06.770 --> 00:01:09.150
we're going to talk to you about
an exciting feature we

00:01:09.150 --> 00:01:12.550
launched last week, and that's
Push Notifications.

00:01:12.550 --> 00:01:15.440
So JunYoung, if you could start
by explaining, what is a

00:01:15.440 --> 00:01:16.680
push notification?

00:01:16.680 --> 00:01:17.380
What is it?

00:01:17.380 --> 00:01:21.850
JUNYOUNG GWAG: Yes, so Push
Notification is a feature that

00:01:21.850 --> 00:01:26.180
sends push notification for
any changes in the API

00:01:26.180 --> 00:01:27.950
resources that user made.

00:01:27.950 --> 00:01:31.960
So for example, if you want to
monitor any changes to a file,

00:01:31.960 --> 00:01:35.690
then you can tell Google to
send notification for any

00:01:35.690 --> 00:01:38.020
changes in a specific file
you want to monitor.

00:01:38.020 --> 00:01:41.290
And then, if the user makes any
changes to that file, then

00:01:41.290 --> 00:01:42.600
Google will send you
notification

00:01:42.600 --> 00:01:44.200
right away in real-time.

00:01:44.200 --> 00:01:45.360
Yes, it's a great feature.

00:01:45.360 --> 00:01:46.240
ALI AFSHAR: So that's
really cool.

00:01:46.240 --> 00:01:49.670
So, before we had push
notifications, what would an

00:01:49.670 --> 00:01:52.380
application have to do to
realize that a file in their

00:01:52.380 --> 00:01:53.520
Drive has changed?

00:01:53.520 --> 00:01:56.650
JUNYOUNG GWAG: So, people used
to poll let's say, every 15

00:01:56.650 --> 00:02:00.260
minutes or so, and it takes
up a lot of resources.

00:02:00.260 --> 00:02:02.180
And also, it is not
really real-time.

00:02:02.180 --> 00:02:05.000
So in the worst case, it will
take 15 minutes to show up the

00:02:05.000 --> 00:02:06.100
updates, right?

00:02:06.100 --> 00:02:12.500
And with this Push Notification,
applications

00:02:12.500 --> 00:02:15.870
don't have to query any files or
other things that they want

00:02:15.870 --> 00:02:17.290
to monitor every time--

00:02:17.290 --> 00:02:18.500
like 15 minutes or so.

00:02:18.500 --> 00:02:22.000
And they will get the
updates right away,

00:02:22.000 --> 00:02:23.430
which is really efficient.

00:02:23.430 --> 00:02:24.300
ALI AFSHAR: How awesome.

00:02:24.300 --> 00:02:29.190
So, what kind of things in
Google Drive can a user-- can

00:02:29.190 --> 00:02:30.500
a developer subscribe to?

00:02:30.500 --> 00:02:32.470
What is available to them?

00:02:32.470 --> 00:02:34.820
JUNYOUNG GWAG: So originally,
this Push Notification was

00:02:34.820 --> 00:02:39.080
designed to monitor all API
resources, but for now it

00:02:39.080 --> 00:02:41.820
supports File and Changes.

00:02:41.820 --> 00:02:46.310
So for File, you can monitor any
specific file and changes,

00:02:46.310 --> 00:02:49.650
or just delete it or something
like that.

00:02:49.650 --> 00:02:54.540
And also for Changes, it
basically just monitors any

00:02:54.540 --> 00:02:57.980
changes that users made
to the folder.

00:02:57.980 --> 00:02:58.630
ALI AFSHAR: That's fantastic.

00:02:58.630 --> 00:03:02.070
So, I can just make a single
request, subscribe, and then

00:03:02.070 --> 00:03:03.990
I'll get notifications
when that changes.

00:03:03.990 --> 00:03:04.720
JUNYOUNG GWAG: Exactly, yes.

00:03:04.720 --> 00:03:06.090
ALI AFSHAR: OK, great.

00:03:06.090 --> 00:03:10.390
So, I see as part of our launch,
JunYoung, you wrote an

00:03:10.390 --> 00:03:14.010
application that takes you
through and shows you-- it's

00:03:14.010 --> 00:03:14.870
more like a Playground--

00:03:14.870 --> 00:03:18.450
that shows you how to do these
push notifications.

00:03:18.450 --> 00:03:22.600
Can you show that to us, but
first, maybe show us what

00:03:22.600 --> 00:03:24.820
extra steps or anything you
need to do to set up your

00:03:24.820 --> 00:03:25.620
application?

00:03:25.620 --> 00:03:26.760
JUNYOUNG GWAG: Sure.

00:03:26.760 --> 00:03:31.740
Since Push Notification sends a
lot of sensitive data about

00:03:31.740 --> 00:03:37.630
users, it just sends any user
activity and Drive, it has a

00:03:37.630 --> 00:03:40.460
lot of concerns about security,
and there are

00:03:40.460 --> 00:03:43.250
additional verification steps
you need to take before using

00:03:43.250 --> 00:03:44.810
this feature.

00:03:44.810 --> 00:03:49.510
So first let's go to Push
Notifications documentation--

00:03:49.510 --> 00:03:50.760
it's devlopers.google
.com/drive/push--

00:03:52.950 --> 00:03:57.350
and you'll see that you need to
register your domain first.

00:03:57.350 --> 00:04:01.720
So first what you need to do is
to go to Webmasters Tools

00:04:01.720 --> 00:04:05.330
and verify your website, verify
that you are the owner

00:04:05.330 --> 00:04:07.470
of this website through
this tool.

00:04:07.470 --> 00:04:12.260
You can basically add a site and
do some verification stuff

00:04:12.260 --> 00:04:15.150
and your website will
show up like this.

00:04:15.150 --> 00:04:18.070
And then, when you're done with
the verification step,

00:04:18.070 --> 00:04:20.279
you need to go to
APIs console.

00:04:20.279 --> 00:04:23.660
And also, [INAUDIBLE] any other
things that you have to

00:04:23.660 --> 00:04:27.830
do to drive APIs, you need to
do some special verification

00:04:27.830 --> 00:04:31.160
step called Notification
Endpoints.

00:04:31.160 --> 00:04:36.010
It will be on the bottom
of the API Access menu.

00:04:36.010 --> 00:04:39.650
If you click Edit on it, you
can see a text box that you

00:04:39.650 --> 00:04:41.870
can put your domain into.

00:04:41.870 --> 00:04:47.300
So, I want to verify that I am
the owner of this URL, and I

00:04:47.300 --> 00:04:50.330
want Push Notifications to
be sent to this URL.

00:04:50.330 --> 00:04:53.600
And I'll have to put this into
the text box and update.

00:04:53.600 --> 00:04:56.010
And from now on I can send push

00:04:56.010 --> 00:04:58.110
notifications to this URL.

00:04:58.110 --> 00:05:03.840
And also, it is very important
that you use HTTP SSL, because

00:05:03.840 --> 00:05:05.410
it should be encrypted, right?

00:05:05.410 --> 00:05:07.880
ALI AFSHAR: So let's just say
that again one more time, it's

00:05:07.880 --> 00:05:08.450
very important--

00:05:08.450 --> 00:05:10.680
JUNYOUNG GWAG: Yes, you
should use SSL.

00:05:10.680 --> 00:05:13.820
ALI AFSHAR: OK, do we even
support sending notifications

00:05:13.820 --> 00:05:15.330
to non-SSL endpoints?

00:05:15.330 --> 00:05:19.760
JUNYOUNG GWAG: No, if you even
try that, you'll get 400, no,

00:05:19.760 --> 00:05:21.350
you're not using HTTPS.

00:05:21.350 --> 00:05:23.350
ALI AFSHAR: So normally we don't
try and do that, and

00:05:23.350 --> 00:05:24.780
force you to do something
because we think

00:05:24.780 --> 00:05:25.490
it's best for you.

00:05:25.490 --> 00:05:28.080
But in this case, like
with all our APIs,

00:05:28.080 --> 00:05:29.500
you must use SSL.

00:05:29.500 --> 00:05:32.270
JUNYOUNG GWAG: Yes, it is really
important that users

00:05:32.270 --> 00:05:35.210
feel comfortable with
their privacy.

00:05:35.210 --> 00:05:40.920
And then, now that you're set up
with all the configuration

00:05:40.920 --> 00:05:46.040
of domains, then you'll
have to go to

00:05:46.040 --> 00:05:48.610
register your channels.

00:05:48.610 --> 00:05:54.670
You can do it by appending,
/watch to the resource you

00:05:54.670 --> 00:05:55.220
want to monitor.

00:05:55.220 --> 00:05:57.420
So if it is a File, then it
can be, file/fileID/watch.

00:06:00.150 --> 00:06:04.520
Or, if you want to watch the
Changes, then it will be,

00:06:04.520 --> 00:06:07.140
changes/watch.

00:06:07.140 --> 00:06:08.800
ALI AFSHAR: Or if you're using
our client libraries, of

00:06:08.800 --> 00:06:10.980
course, those methods
are built in, so

00:06:10.980 --> 00:06:12.050
you just select them.

00:06:12.050 --> 00:06:14.210
They're part of our generated
client libraries.

00:06:14.210 --> 00:06:18.110
So it's a regular API method
with a regular token, and you

00:06:18.110 --> 00:06:20.190
use that and the subscription
is active.

00:06:20.190 --> 00:06:20.570
JUNYOUNG GWAG: It is.

00:06:20.570 --> 00:06:22.480
ALI AFSHAR: So what does
the request look like?

00:06:22.480 --> 00:06:26.530
JUNYOUNG GWAG: So there are
three mandatory fields for

00:06:26.530 --> 00:06:27.840
this request.

00:06:27.840 --> 00:06:29.270
First is ID.

00:06:29.270 --> 00:06:32.920
This is the ID that you provide
to Google Drive, and

00:06:32.920 --> 00:06:33.780
it should be unique.

00:06:33.780 --> 00:06:37.350
So you can use things like
UUID, or anything that's

00:06:37.350 --> 00:06:39.385
unique that you feel comfortable
with, like maybe a

00:06:39.385 --> 00:06:40.706
database key.

00:06:43.280 --> 00:06:47.790
ALI AFSHAR: Wow, you've got a
perfectly consecutive UUID.

00:06:47.790 --> 00:06:49.850
That's amazing.

00:06:49.850 --> 00:06:52.840
JUNYOUNG GWAG: Yes, what a
coincidence, isn't it?

00:06:52.840 --> 00:06:56.390
And also, there's a type.

00:06:56.390 --> 00:06:59.930
For now we only support Webhook,
so we're just sending

00:06:59.930 --> 00:07:02.470
notification to your URL.

00:07:02.470 --> 00:07:06.805
And there might be some
additional support for other

00:07:06.805 --> 00:07:10.060
types, but for now, anyway you
should send Webhook for type.

00:07:10.060 --> 00:07:14.400
And also, address is the
endpoint of your notification.

00:07:14.400 --> 00:07:17.740
So we'll be sending notification
to this address,

00:07:17.740 --> 00:07:22.760
which is again, verified,
and again, HTTPS.

00:07:22.760 --> 00:07:26.140
Now, I'll answer these three
mandatory parts.

00:07:26.140 --> 00:07:30.910
You can send token,
which basically--

00:07:30.910 --> 00:07:33.460
whenever Google sends you a
notification, they'll just

00:07:33.460 --> 00:07:35.020
echo your token.

00:07:35.020 --> 00:07:39.490
So you can just save any
temporary values that you need

00:07:39.490 --> 00:07:44.060
for this token, but you should
make sure that this doesn't

00:07:44.060 --> 00:07:49.840
contain any sensitive data,
such as OAuth token.

00:07:49.840 --> 00:07:52.590
Or, if you really need to do
that, you should make sure you

00:07:52.590 --> 00:07:54.460
encrypt it.

00:07:54.460 --> 00:07:59.775
And also, there's a parameter
that you can set to set the

00:07:59.775 --> 00:08:00.720
expression date.

00:08:00.720 --> 00:08:03.440
By default, I'm not really sure
about that, but it is

00:08:03.440 --> 00:08:05.300
like, two hours or something.

00:08:05.300 --> 00:08:08.470
And I heard it will be
two weeks or so.

00:08:08.470 --> 00:08:10.950
ALI AFSHAR: So we're working
on trying to increase the

00:08:10.950 --> 00:08:12.420
default length of time.

00:08:12.420 --> 00:08:12.735
JUNYOUNG GWAG: Yes.

00:08:12.735 --> 00:08:19.180
So you might want to increase
the time to live, or so that

00:08:19.180 --> 00:08:20.820
you can [INAUDIBLE]

00:08:20.820 --> 00:08:22.440
the notification.

00:08:22.440 --> 00:08:28.310
And also, there is no means of
automatically resubscribing,

00:08:28.310 --> 00:08:31.780
so you should always keep track
of the expiration time,

00:08:31.780 --> 00:08:37.080
and make another request with
another unique ID to keep

00:08:37.080 --> 00:08:40.650
getting notification of
whatever you want.

00:08:40.650 --> 00:08:42.159
ALI AFSHAR: So in that case--

00:08:42.159 --> 00:08:44.350
just to sidetrack you--

00:08:44.350 --> 00:08:47.030
in that case, how, if you've got
two notifications for the

00:08:47.030 --> 00:08:49.490
same results, how would
you disambiguate them?

00:08:49.490 --> 00:08:51.360
How would you make sure?

00:08:51.360 --> 00:08:54.150
JUNYOUNG GWAG: Sorry, why would
I get two notifications?

00:08:54.150 --> 00:08:58.410
ALI AFSHAR: So, say you
subscribe to a new one before

00:08:58.410 --> 00:09:01.600
you unsubscribe from
the old one.

00:09:01.600 --> 00:09:05.090
JUNYOUNG GWAG: Actually, in my
sample lab I had those cases,

00:09:05.090 --> 00:09:07.420
and that is where I use token.

00:09:07.420 --> 00:09:14.160
Yes, so I saved some unique ID
off the pages for each request

00:09:14.160 --> 00:09:16.750
users made, and a token,
and saved into token.

00:09:16.750 --> 00:09:21.350
And because token echoes that
value exactly, I can

00:09:21.350 --> 00:09:24.870
distinguish if it is from
this user, or that user.

00:09:24.870 --> 00:09:29.760
And yes, you don't have to
be confused with that.

00:09:29.760 --> 00:09:39.140
OK, so once you make the
request, then you will get the

00:09:39.140 --> 00:09:40.530
response right away.

00:09:40.530 --> 00:09:45.580
So the responses for the request
will be 200 if you're

00:09:45.580 --> 00:09:48.610
successful, and 400 or anything
else otherwise.

00:09:51.250 --> 00:09:53.720
One thing that you really want
to take note from this

00:09:53.720 --> 00:09:55.850
response is resource ID.

00:09:55.850 --> 00:10:00.070
So everything else in the
response is basically echoing

00:10:00.070 --> 00:10:03.600
what you have provided,
but your resource ID

00:10:03.600 --> 00:10:05.350
and resource URL.

00:10:05.350 --> 00:10:11.400
So, this resource ID is the ID
of the resource that is being

00:10:11.400 --> 00:10:15.650
watched, and it has totally
no meaning for you.

00:10:15.650 --> 00:10:21.460
But you need this ID to unwatch
from the channel.

00:10:21.460 --> 00:10:24.720
So you need to take note
of this resource ID.

00:10:24.720 --> 00:10:28.320
And from now on, whenever you
get any notifications, you

00:10:28.320 --> 00:10:30.770
will get resource ID anyways.

00:10:30.770 --> 00:10:32.955
So just keep track of it,
you make sure you

00:10:32.955 --> 00:10:34.200
keep track of it.

00:10:34.200 --> 00:10:40.655
And then, as soon as you set the
watch request and know it

00:10:40.655 --> 00:10:43.920
was successful, you'll
get a sync message.

00:10:43.920 --> 00:10:49.090
So, sync message is the message
from the API saying

00:10:49.090 --> 00:10:54.210
that, hey, your notification is
successfully initialized,

00:10:54.210 --> 00:10:56.770
and now we're going to
send notification.

00:10:56.770 --> 00:10:59.580
ALI AFSHAR: So we send the
sync notification to the

00:10:59.580 --> 00:11:01.330
actual-- to your notification
endpoint?

00:11:01.330 --> 00:11:01.730
JUNYOUNG GWAG: Yes.

00:11:01.730 --> 00:11:03.410
ALI AFSHAR: It's like
a mini-notification.

00:11:03.410 --> 00:11:05.890
JUNYOUNG GWAG: Yes, it's a
notification that says

00:11:05.890 --> 00:11:07.390
notification started.

00:11:07.390 --> 00:11:11.890
But it is not recommended that
you use this sync message,

00:11:11.890 --> 00:11:15.760
because for many unknown
issues such as network

00:11:15.760 --> 00:11:19.730
latency, or anything like that,
there might be cases

00:11:19.730 --> 00:11:24.260
that actual messages are sent
before the sync message.

00:11:24.260 --> 00:11:29.640
So it's not a good idea to rely
on the sync message to

00:11:29.640 --> 00:11:32.580
say that the synchronizing
just started.

00:11:32.580 --> 00:11:36.520
You should just assume that
notification started as soon

00:11:36.520 --> 00:11:40.910
as you got the successful
message from the request, and

00:11:40.910 --> 00:11:43.980
it's better to just ignore
the sync message.

00:11:43.980 --> 00:11:47.670
While still you can make use of
it if you really need it.

00:11:47.670 --> 00:11:53.810
And then, since you get a sync
message, you'll receive your

00:11:53.810 --> 00:11:56.500
actual notification to the
notification endpoint that you

00:11:56.500 --> 00:11:59.200
specified from the request.

00:11:59.200 --> 00:12:03.730
Now, there is much information
that this notification

00:12:03.730 --> 00:12:08.390
provides, and depending on
which notification you

00:12:08.390 --> 00:12:12.750
requested, such as maybe Changes
or Files, the response

00:12:12.750 --> 00:12:14.660
might change a little bit.

00:12:14.660 --> 00:12:17.790
So let's talk about
Changes first.

00:12:17.790 --> 00:12:22.980
So if you make a request for
push notification to Changes,

00:12:22.980 --> 00:12:26.170
it will send notification
whenever a user makes any

00:12:26.170 --> 00:12:28.420
change to any files.

00:12:28.420 --> 00:12:33.910
So there is a Changes
resource in API.

00:12:33.910 --> 00:12:37.950
And users, before there was push
notification, actually

00:12:37.950 --> 00:12:43.060
many applications keep sending
changes in list method to keep

00:12:43.060 --> 00:12:45.270
track of what kind of
changes were made.

00:12:45.270 --> 00:12:49.790
And it kept updating
their local copy.

00:12:49.790 --> 00:12:54.600
And from now on, with this Push
Notification, Google will

00:12:54.600 --> 00:12:57.780
send you, whenever there are
changes in the Change

00:12:57.780 --> 00:13:02.820
resource, will send the Change
resource ID and self link so

00:13:02.820 --> 00:13:05.390
you can visit it right away.

00:13:05.390 --> 00:13:09.450
And as a response body,
you'll actually

00:13:09.450 --> 00:13:13.580
get the Change resource.

00:13:13.580 --> 00:13:17.202
And you can parse it just as how
you have parsed the list

00:13:17.202 --> 00:13:23.100
of changes it gets and you can
see what kind of changes have

00:13:23.100 --> 00:13:28.580
been made to this Drive by
using Changes docket.

00:13:28.580 --> 00:13:31.420
It's the same as how you've
interacted with Changes.

00:13:31.420 --> 00:13:33.620
ALI AFSHAR: But you don't have
to pull a server anymore.

00:13:33.620 --> 00:13:36.450
That's really exciting, that's
really good for me.

00:13:36.450 --> 00:13:37.060
OK, great.

00:13:37.060 --> 00:13:40.220
So that's how it works,
but there's more.

00:13:40.220 --> 00:13:41.650
JUNYOUNG GWAG: There's
more, yes.

00:13:41.650 --> 00:13:46.010
So we need to talk about how
Filed resources works.

00:13:46.010 --> 00:13:50.050
So whenever there's a
notification about changes in

00:13:50.050 --> 00:13:53.730
File resources, there
will be a simple

00:13:53.730 --> 00:13:55.620
notification without body.

00:13:55.620 --> 00:14:01.560
So there will be no body or any
contents of the file, but

00:14:01.560 --> 00:14:05.430
it will tell you what happened
to the file with resource

00:14:05.430 --> 00:14:09.870
states and changed
header parameter.

00:14:09.870 --> 00:14:14.300
So for example, if the file was
trashed, in the resource

00:14:14.300 --> 00:14:16.430
state it will tell you,
it is trashed, or

00:14:16.430 --> 00:14:18.170
untrashed, or deleted.

00:14:18.170 --> 00:14:20.540
And, there might be
the case that the

00:14:20.540 --> 00:14:22.650
research state is changed.

00:14:22.650 --> 00:14:26.520
So that is the case when
contents or parents or any

00:14:26.520 --> 00:14:29.050
actual metadata of the file
has been changed.

00:14:29.050 --> 00:14:34.250
And then you'll get additional
parameter, X-Goog-Changed,

00:14:34.250 --> 00:14:36.230
which is another header
parameter.

00:14:36.230 --> 00:14:41.760
And it will have contents or
properties specifying which

00:14:41.760 --> 00:14:44.180
part the file metadata
has been changed.

00:14:44.180 --> 00:14:48.800
So the way you parse the Changed
push notification and

00:14:48.800 --> 00:14:51.650
File push notification
is quite different.

00:14:51.650 --> 00:14:55.880
And you can see what kind of
resource state and Change

00:14:55.880 --> 00:14:58.760
types there are in
the documentation

00:14:58.760 --> 00:15:00.960
right away like this.

00:15:00.960 --> 00:15:07.180
And yes, that's pretty much how
you're going to deal with

00:15:07.180 --> 00:15:08.450
Push Notifications.

00:15:08.450 --> 00:15:09.440
ALI AFSHAR: OK.

00:15:09.440 --> 00:15:12.440
So you spent a while writing
an application just

00:15:12.440 --> 00:15:14.400
to show this off.

00:15:14.400 --> 00:15:16.470
So, can we have a look at it?

00:15:16.470 --> 00:15:17.770
JUNYOUNG GWAG: Yes, sure.

00:15:17.770 --> 00:15:22.750
So you can actually try all of
these from Push Notification

00:15:22.750 --> 00:15:23.880
Playgrounds.

00:15:23.880 --> 00:15:32.190
It is pushnotification
playground.appspot.com, and

00:15:32.190 --> 00:15:34.860
you'll come to this website
right away.

00:15:34.860 --> 00:15:37.680
All you have to do
is to log in, and

00:15:37.680 --> 00:15:40.740
authorize with OAuth too.

00:15:40.740 --> 00:15:46.540
And you'll be brought to the
notification field, and now we

00:15:46.540 --> 00:15:48.600
can actually see the
notifications

00:15:48.600 --> 00:15:49.970
going in and out.

00:15:49.970 --> 00:15:54.470
So, let's say we want to
subscribe to all Changes in

00:15:54.470 --> 00:15:57.060
Drive, and we are
now subscribed.

00:15:57.060 --> 00:16:05.920
Then if you, let's say, create
a file in this folder, and it

00:16:05.920 --> 00:16:11.680
is successfully saved
in this folder--

00:16:11.680 --> 00:16:14.690
wait, maybe I did
it too quickly--

00:16:14.690 --> 00:16:17.800
yes, well, as you see, you can
see a lot of notifications

00:16:17.800 --> 00:16:20.920
that came to this application.

00:16:20.920 --> 00:16:25.130
And not only for all changes
in the folder, you can also

00:16:25.130 --> 00:16:28.880
specify the file you want to
monitor, and you'll also see

00:16:28.880 --> 00:16:33.930
all of those resource states or
changed header parameters,

00:16:33.930 --> 00:16:36.130
and see how this Push
Notification

00:16:36.130 --> 00:16:37.590
works in real time.

00:16:37.590 --> 00:16:38.490
ALI AFSHAR: Can we have a
look at some of those

00:16:38.490 --> 00:16:39.140
notifications?

00:16:39.140 --> 00:16:40.390
JUNYOUNG GWAG: Yes, sure.

00:16:44.970 --> 00:16:48.610
I subscribed to--

00:16:53.720 --> 00:16:56.110
ALI AFSHAR: Do you want to
monitor all the changes then?

00:16:56.110 --> 00:16:57.360
JUNYOUNG GWAG: Here it
is, here's the file.

00:17:01.520 --> 00:17:02.660
ALI AFSHAR: So we're
just subscribing to

00:17:02.660 --> 00:17:04.109
a single file here.

00:17:04.109 --> 00:17:06.000
JUNYOUNG GWAG: We are
subscribing to this file we

00:17:06.000 --> 00:17:07.460
just created.

00:17:07.460 --> 00:17:12.490
And we want to change content,
which will show up as changed

00:17:12.490 --> 00:17:14.480
contents, and we can
also change the

00:17:14.480 --> 00:17:17.390
title, which is metadata.

00:17:17.390 --> 00:17:22.440
And then you'll see from here
a lot of notifications.

00:17:22.440 --> 00:17:23.129
ALI AFSHAR: Right, let's just
look at one or two.

00:17:23.129 --> 00:17:24.589
Can you zoom in on this?

00:17:24.589 --> 00:17:27.140
JUNYOUNG GWAG: I think
so, yes, you can.

00:17:27.140 --> 00:17:29.260
Now you can see--

00:17:29.260 --> 00:17:31.140
ALI AFSHAR:: So let's
just pick one, OK?

00:17:31.140 --> 00:17:36.250
JUNYOUNG GWAG: So here you can
see that research state is

00:17:36.250 --> 00:17:39.410
update, and changed parameters
is properties.

00:17:39.410 --> 00:17:42.440
This is probably because I
changed the title which is the

00:17:42.440 --> 00:17:43.900
metadata of the file.

00:17:43.900 --> 00:17:51.130
And also you can see here, it
says update, and the change

00:17:51.130 --> 00:17:55.090
parameter has content, because
we apparently changed the

00:17:55.090 --> 00:17:56.650
content of this file.

00:17:56.650 --> 00:18:01.150
And also let's say if you want
to actually trash this file,

00:18:01.150 --> 00:18:03.620
then we'll get--

00:18:03.620 --> 00:18:04.990
right away here--

00:18:04.990 --> 00:18:06.680
resource state has
been trashed.

00:18:06.680 --> 00:18:09.470
So you can trash, untrash,
delete, or anything you want,

00:18:09.470 --> 00:18:13.940
and you'll get any notifications
just right away.

00:18:13.940 --> 00:18:15.070
ALI AFSHAR: That's
really cool.

00:18:15.070 --> 00:18:16.520
JUNYOUNG GWAG: It is.

00:18:16.520 --> 00:18:20.830
Yes, so we talked about how
you can subscribe to the

00:18:20.830 --> 00:18:24.230
flight Files and Changes
until now.

00:18:24.230 --> 00:18:30.180
And, so now that we subscribed
to it, we want to

00:18:30.180 --> 00:18:32.160
unsubscribe to it too.

00:18:32.160 --> 00:18:34.790
So, basically there are two
ways to unsubscribe.

00:18:34.790 --> 00:18:38.380
First is to automatically
unsubscribe by reaching the

00:18:38.380 --> 00:18:41.690
deadline of the notification
expiration time.

00:18:41.690 --> 00:18:45.320
Or, you can also manually
unsubscribe from the

00:18:45.320 --> 00:18:46.510
notification.

00:18:46.510 --> 00:18:51.310
So it is simple, no matter where
you subscribe to, Files

00:18:51.310 --> 00:18:56.440
or Changes, you'll come to this
one channel stop method.

00:18:56.440 --> 00:19:00.590
And as I said, you should
keep note of this

00:19:00.590 --> 00:19:02.100
resource ID, right?

00:19:02.100 --> 00:19:08.590
And with the ID that you
provided, let's say the UUID,

00:19:08.590 --> 00:19:14.180
and the resource ID provided
from the API request response,

00:19:14.180 --> 00:19:17.260
if you send these two parameters
to channel stop

00:19:17.260 --> 00:19:22.570
method, then it will manually
unsubscribe from the channel.

00:19:22.570 --> 00:19:23.910
That's pretty much it.

00:19:23.910 --> 00:19:24.790
ALI AFSHAR: OK, so awesome.

00:19:24.790 --> 00:19:26.040
So thank you very
much, JunYoung.

00:19:26.040 --> 00:19:27.170
So what have we seen today?

00:19:27.170 --> 00:19:31.100
Well, we've got a new way in
which your app can be notified

00:19:31.100 --> 00:19:33.750
of changes to stuff happening
in a users Drive.

00:19:33.750 --> 00:19:37.910
No longer do you need to pull
the Changes feed regularly to

00:19:37.910 --> 00:19:40.330
see what's changed, and then
finish the resources.

00:19:40.330 --> 00:19:41.900
We will tell you now.

00:19:41.900 --> 00:19:43.690
So why would this
matter to you?

00:19:43.690 --> 00:19:46.570
Well, you're saving a huge
amount of resources, really.

00:19:46.570 --> 00:19:48.650
You don't have to make these
regular requests, you're

00:19:48.650 --> 00:19:50.760
saving resources for yourself,
and of course, you're saving

00:19:50.760 --> 00:19:52.300
resources for us as well.

00:19:52.300 --> 00:19:54.580
And that's always a good thing
because it's going to improve

00:19:54.580 --> 00:19:56.340
your latency.

00:19:56.340 --> 00:20:00.500
So saving resources, and it's
a much more real-time

00:20:00.500 --> 00:20:03.500
notification system, so you
will be notified much more

00:20:03.500 --> 00:20:06.930
quickly of things that
are changing.

00:20:06.930 --> 00:20:10.010
If you're polling, of course,
as we always say, Drive is a

00:20:10.010 --> 00:20:13.340
massively distributed system,
so part of it could change,

00:20:13.340 --> 00:20:16.150
and then the effect of that
change would filter down

00:20:16.150 --> 00:20:16.820
eventually.

00:20:16.820 --> 00:20:18.950
It might take a while, it might
take 10 seconds, it

00:20:18.950 --> 00:20:20.700
might take a few minutes.

00:20:20.700 --> 00:20:22.740
But this is going to be much
quicker and it's going to be

00:20:22.740 --> 00:20:24.040
much more accurate.

00:20:24.040 --> 00:20:25.300
How do you register for these?

00:20:25.300 --> 00:20:27.680
Well, we send you a web request
to a server that

00:20:27.680 --> 00:20:30.040
you've registered, you've
verified that you own the

00:20:30.040 --> 00:20:36.490
server, and it's listening
on an HTTPS socket.

00:20:36.490 --> 00:20:39.220
We'll send you that request, you
look at what's in there,

00:20:39.220 --> 00:20:42.420
and you can decide however you
want to behave after that.

00:20:42.420 --> 00:20:45.230
We don't send sensitive
information as such in there,

00:20:45.230 --> 00:20:47.900
but you will still need the
users token to fetch this

00:20:47.900 --> 00:20:48.680
information.

00:20:48.680 --> 00:20:52.110
But still, best to secure it
as well as possible and we

00:20:52.110 --> 00:20:54.170
need to verify that we're
sending them to the right

00:20:54.170 --> 00:20:56.000
place, we can't just
send them anywhere.

00:20:56.000 --> 00:20:58.430
So that's Push Notifications,
it's a feature we've been

00:20:58.430 --> 00:21:00.730
working on for a long time.

00:21:00.730 --> 00:21:03.990
We actually announced it at I/O
this year and Google I/O

00:21:03.990 --> 00:21:05.920
the previous year that we
were working on it,

00:21:05.920 --> 00:21:07.000
but it's here now.

00:21:07.000 --> 00:21:10.110
Please use it, we'd love your
feedback on it, we'd love to

00:21:10.110 --> 00:21:13.180
know what could be improved.

00:21:13.180 --> 00:21:16.720
And if you're using it, and
you're having a good time with

00:21:16.720 --> 00:21:17.880
it, well, that's useful too.

00:21:17.880 --> 00:21:20.590
But mostly, any sticking points
you have, any failure

00:21:20.590 --> 00:21:24.820
points, we're really keen right
now to know what you're

00:21:24.820 --> 00:21:25.710
doing with it.

00:21:25.710 --> 00:21:27.440
OK, so thank you very much.

00:21:27.440 --> 00:21:28.300
Thanks for joining us.

00:21:28.300 --> 00:21:30.750
Thank you, JunYoung for taking
us through and showing you're

00:21:30.750 --> 00:21:31.940
awesome application.

00:21:31.940 --> 00:21:35.490
I see you've learned
some CSS recently.

00:21:35.490 --> 00:21:37.540
JUNYOUNG GWAG: Just
Twitter Bootstrap.

00:21:37.540 --> 00:21:38.650
ALI AFSHAR: Just Twitter
Bootstrap.

00:21:38.650 --> 00:21:42.500
OK, well, have a good
day everyone.

00:21:42.500 --> 00:21:43.340
Thanks for joining us.

00:21:43.340 --> 00:21:43.760
Bye-bye.

00:21:43.760 --> 00:21:45.010
JUNYOUNG GWAG: Thank you.

00:21:55.524 --> 00:29:58.687
[MUSIC PLAYING]

