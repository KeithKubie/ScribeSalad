WEBVTT
Kind: captions
Language: en

00:00:00.269 --> 00:00:05.710
I can't imagine doing e-mail without GMail.
I can't imagine collaborating on a presentation

00:00:05.710 --> 00:00:10.690
or on a design document by mailing around
versions of content back and forth between

00:00:10.690 --> 00:00:13.420
people and saying, "Who's got the latest one,
who's got what edit?"

00:00:13.420 --> 00:00:18.120
And I can't imagine being tethered to one
particular physical device to find my data

00:00:18.120 --> 00:00:22.460
and my application.
It would make no sense anymore.

00:00:22.460 --> 00:00:24.200
We all know that.
Companies know that.

00:00:24.200 --> 00:00:28.830
Every company we talk to is trying to figure
out how can I shift my weight to the cloud?

00:00:28.830 --> 00:00:33.720
How can I use the Web more heavily with the
applications that I use and the applications

00:00:33.720 --> 00:00:38.350
that I build at work?
The problem is, it's still hard to do that.

00:00:38.350 --> 00:00:40.830
It's still too hard to take advantage of the
Web at work.

00:00:40.830 --> 00:00:44.920
It's hard for a few reasons.
First, it's hard because it takes too long.

00:00:44.920 --> 00:00:49.239
From the time you have a great idea or your
boss has a great idea or the VP of marketing

00:00:49.239 --> 00:00:53.060
has a great request, from the time you have
the great idea and you want to create a great

00:00:53.060 --> 00:00:59.760
application, new technology, new tools, takes
too long to turn that idea into reality.

00:00:59.760 --> 00:01:03.989
The second thing that's hard is, we don't
stand in one place anymore.

00:01:03.989 --> 00:01:07.141
That application that you're running, you
might need to access it from the back of a

00:01:07.141 --> 00:01:09.840
taxicab.
Some of your users need to access it from

00:01:09.840 --> 00:01:14.280
an airport or from the lobby of their hotel.
Because people are working everywhere, they're

00:01:14.280 --> 00:01:19.259
working all the time, the applications that
you build for them need to run on all the

00:01:19.259 --> 00:01:25.369
devices that people are using.
The third thing that's hard today is, architectures

00:01:25.369 --> 00:01:30.960
tend to trap people so that the choice you
make in what tool stack do I use, how am I

00:01:30.960 --> 00:01:37.139
building my application, that choice you make
today locks you in to a deployment model for

00:01:37.139 --> 00:01:41.219
tomorrow that you may not be ready to lock
yourself into.

00:01:41.219 --> 00:01:45.630
And then, finally, if any of you have the
job that this guy has, you look at this slide

00:01:45.630 --> 00:01:50.659
and probably say, he's only got a half dozen
applications he's taking care of for his company.

00:01:50.659 --> 00:01:54.619
The CIOs that we talk to tell us that they
usually have on the order of a thousand applications

00:01:54.619 --> 00:01:56.539
that they're trying to manage to run their
business.

00:01:56.539 --> 00:02:01.549
And they need better tools to be able to manage
all those applications.

00:02:01.549 --> 00:02:06.149
Over the next 40 minutes, we're going to show
you what we've done, working with other people,

00:02:06.149 --> 00:02:11.330
to enable fast and familiar development using
tools and languages you already know to crank

00:02:11.330 --> 00:02:15.320
out great Web applications.
We're going to show you how to make those

00:02:15.320 --> 00:02:21.020
applications mobile-ready so they can run
and reach your users wherever your users are.

00:02:21.020 --> 00:02:25.440
We're going to show you an architecture used
 -- based on open standards that give you

00:02:25.440 --> 00:02:29.380
flexible deployment so you have portability.
You can choose how you want to build your

00:02:29.380 --> 00:02:33.040
apps and you can choose where you want to
deploy your apps separately.

00:02:33.040 --> 00:02:36.940
And, finally, we'll show you some new tools
that give you the ability to manage the hundreds

00:02:36.940 --> 00:02:42.310
and thousands of apps that are being built
to run businesses in the cloud.

00:02:42.310 --> 00:02:46.250
Now, as we set out to do this, it was very
important that we did this staying true to

00:02:46.250 --> 00:02:50.100
the principles and values of the Web.
The principles and values that you've heard

00:02:50.100 --> 00:02:54.900
all morning about how open standards lead
to interoperability and portability, which

00:02:54.900 --> 00:02:59.340
leads to choice, and choice is what drives
innovation.

00:02:59.340 --> 00:03:03.910
We looked for who can we work with, who can
we collaborate with that shares those values,

00:03:03.910 --> 00:03:09.400
that understands the importance of standards
enabling innovation, and that has spent years

00:03:09.400 --> 00:03:14.320
understanding how to help enterprise developers
build great apps at work.

00:03:14.320 --> 00:03:18.620
And I'm very happy to announce that we've
been working closely with VMWare to enable

00:03:18.620 --> 00:03:23.740
exactly that, building on our complementary
strengths to enable open standards to lead

00:03:23.740 --> 00:03:29.380
to great innovation in the enterprise.
I'd like to welcome to the Google I/O stage

00:03:29.380 --> 00:03:33.490
Paul Maritz, the president and CEO of VMWare,
to tell you a little bit about what we've

00:03:33.490 --> 00:03:38.500
been doing together.
[ Applause ]

00:03:38.500 --> 00:03:45.370
&gt;&gt;Paul Maritz: Good morning.
It's a great pleasure to be with you here

00:03:45.370 --> 00:03:50.600
today.
Most of you will know VMWare in terms of the

00:03:50.600 --> 00:03:59.000
work that we've been doing in allowing existing
applications to be iterated forward and take

00:03:59.000 --> 00:04:02.930
advantage of a cloud-oriented way of doing
computing.

00:04:02.930 --> 00:04:09.170
Customers have huge investments in large bodies
of existing applications that they can't walk

00:04:09.170 --> 00:04:15.319
away from, and just about the only hope for
these applications is through virtualization,

00:04:15.319 --> 00:04:20.539
which allows you to kind of encapsulate these
applications, jack them up, put them in a

00:04:20.539 --> 00:04:26.800
black box, slide new functionality underneath
them and eventually start sliding the applications

00:04:26.800 --> 00:04:29.840
themselves around.
So we've been doing a lot of work in this

00:04:29.840 --> 00:04:35.560
world of existing applications, allowing customers
and companies to become more cloud-like in

00:04:35.560 --> 00:04:43.099
their internal operations and actually allow
them to start extending their data centers

00:04:43.099 --> 00:04:49.969
outside of their own physical premises, into
infrastructure that they can rent from external

00:04:49.969 --> 00:04:53.529
service providers.
And this is all well and good.

00:04:53.529 --> 00:04:58.999
It's very important work to be doing.
But the question really becomes, what about

00:04:58.999 --> 00:05:03.300
new applications?
And it's clear that there are going to be

00:05:03.300 --> 00:05:06.689
many clouds out there.
Customers are going to build their clouds

00:05:06.689 --> 00:05:10.539
internally.
Service providers are going to build clouds,

00:05:10.539 --> 00:05:13.990
very large companies like Google are going
to build clouds.

00:05:13.990 --> 00:05:20.039
And wouldn't it be great if we could have
a way of writing applications that on the

00:05:20.039 --> 00:05:25.889
one hand can take full advantage of a particular
cloud, but also be portable across clouds.

00:05:25.889 --> 00:05:31.930
If you think of these infrastructure-level
clouds as kind of the new hardware, what is

00:05:31.930 --> 00:05:37.029
the new operating system for the cloud?
What is that layer of abstraction that's going

00:05:37.029 --> 00:05:43.090
to allow us to write applications that can
look great on a variety of clouds?

00:05:43.090 --> 00:05:50.199
And it's our premise, as it is Google's, that
the new operating system is these extended

00:05:50.199 --> 00:05:54.830
frameworks.
And as you well know, developers over the

00:05:54.830 --> 00:05:59.860
last several years have by and large voted
with their feet, and traditionally -- and

00:05:59.860 --> 00:06:04.949
now work within frameworks that give them
much higher levels of productivity.

00:06:04.949 --> 00:06:10.800
And that's the reason last year we at VMWare
acquired what we think is one of the best

00:06:10.800 --> 00:06:15.610
of breed new-generation frameworks, the Spring
framework.

00:06:15.610 --> 00:06:22.110
This comes from work that was started 2002
by Rod Johnson and others, who founded Spring,

00:06:22.110 --> 00:06:26.969
who had been working in the Java world and
had come to the conclusion it was just too

00:06:26.969 --> 00:06:34.639
hard to write Java in EJB applications.
And they evolved the Spring framework, which

00:06:34.639 --> 00:06:43.089
is oriented around a very simple, lightweight,
but extremely powerful object model.

00:06:43.089 --> 00:06:50.119
What the result is is that more than half
of the lines of new Java code being written

00:06:50.119 --> 00:06:53.680
today are written in the context of the Spring
framework.

00:06:53.680 --> 00:06:59.740
They started that effort based on open source.
And they have continued in the open and open

00:06:59.740 --> 00:07:03.990
source tradition.
And we're committed to continuing that.

00:07:03.990 --> 00:07:10.330
And so late last year, we started in-depth
conversations with Google and said, wouldn't

00:07:10.330 --> 00:07:16.979
it be great to give the world's largest body
of developers, the Java community, a way of

00:07:16.979 --> 00:07:22.180
writing really efficient, great cloud-based
applications?

00:07:22.180 --> 00:07:29.659
And as a result, we have been working with
Google to bring to bear what we know about

00:07:29.659 --> 00:07:36.370
writing the back-end of great, high-performance,
portable applications, with what Google has

00:07:36.370 --> 00:07:41.620
developed around the front-end.
A perfect marriage is to bring these two technologies

00:07:41.620 --> 00:07:50.639
together and give the industry an open and
open source layer to cloak the clouds, to

00:07:50.639 --> 00:07:54.619
allow you to get the fullest benefit from
your investments.

00:07:54.619 --> 00:07:59.050
The one thing I have learned over the years
is, the more choice you give developers, the

00:07:59.050 --> 00:08:02.889
more promise you give to developers, that
they're going to be able to get a return on

00:08:02.889 --> 00:08:07.310
their investment by having the widest possible
number of places that they can deploy this

00:08:07.310 --> 00:08:13.020
technology, the greater the motivation, the
greater the applications that result.

00:08:13.020 --> 00:08:19.949
So we have had our two teams working together
to really integrate the Spring framework and

00:08:19.949 --> 00:08:27.020
the Google Web Toolkit, and now give a complete
answer as to how to write an end-to-end application,

00:08:27.020 --> 00:08:32.890
the back-end and the front-end, in a way that
you can deliver really great, exciting apps

00:08:32.890 --> 00:08:39.880
that work across clouds, across devices, with
a deep commitment to doing this in an open

00:08:39.880 --> 00:08:45.830
and open source fashion.
So with that, I'm very happy to let you see

00:08:45.830 --> 00:08:52.810
some of the results of this work.
&gt;&gt;David Glazer: Thanks.

00:08:52.810 --> 00:08:58.850
[ Applause ]
&gt;&gt;David Glazer: Thank you, Paul.

00:08:58.850 --> 00:09:04.060
I've been very excited to work with Paul.
I've been even more excited to have our engineers

00:09:04.060 --> 00:09:08.700
and Paul's engineers working together to deliver
on exactly what he said.

00:09:08.700 --> 00:09:12.080
The first of the promises that we made is
that over the next 40 minutes, we're going

00:09:12.080 --> 00:09:16.450
to show you how we can use familiar tools
to enable fast development.

00:09:16.450 --> 00:09:22.350
And the way we've done that is, we have -- exactly
as Paul said -- integrated the Spring back-end

00:09:22.350 --> 00:09:27.120
development tools, which let Java developers
build great back-ends to their apps, with

00:09:27.120 --> 00:09:31.850
the Google Toolkit front-end.
So you get the power of HTML5 in a complete

00:09:31.850 --> 00:09:35.760
Java stack, back-end and front-end, integrated
together.

00:09:35.760 --> 00:09:40.510
To show you how that works, I'd like to bring
up Ben Alex, who's the lead engineer for Spring

00:09:40.510 --> 00:09:45.080
Roo, and Bruce Johnson, who is the lead of
the Google web Toolkit team to give you a

00:09:45.080 --> 00:09:49.630
demo of how do these tools work together,
which you will be able to try yourself after

00:09:49.630 --> 00:10:02.720
the keynote.
[ Applause ]

00:10:02.720 --> 00:10:06.260
&gt;&gt;&gt; Thank you, David.
If you've used Google Web Toolkit before,

00:10:06.260 --> 00:10:10.940
you know GWT makes it easy to build rich Web
applications completely in Java.

00:10:10.940 --> 00:10:14.570
Not only the server-side code, which you have
always been able to right in Java, but also

00:10:14.570 --> 00:10:17.639
the client side, the Ajax code that runs in
the browser.

