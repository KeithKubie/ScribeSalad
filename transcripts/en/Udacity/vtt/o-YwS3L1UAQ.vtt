WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.000
And now we already know that we can solve vertex cover using a search tree.

00:00:04.000 --> 00:00:06.000
So we started with the original graph,

00:00:06.000 --> 00:00:10.000
and I'm now going to use again the search tree where we

00:00:10.000 --> 00:00:13.000
branch into only 3 different possibilities.

00:00:13.000 --> 00:00:16.000
We know it's not the best possible one, but it will be easier to understand the

00:00:16.000 --> 00:00:19.000
rest this way, but it also works for the more complicated search trees.

00:00:19.000 --> 00:00:22.000
So then on the next level, we again branched into

00:00:22.000 --> 00:00:26.000
3 different possibilities on each level and so on.

00:00:26.000 --> 00:00:31.000
And we said that the search tree had a size of N half

00:00:31.000 --> 00:00:34.000
and the total number of solutions that we looked at in the search tree

00:00:34.000 --> 00:00:37.000
was 3 to the power of N half,

00:00:37.000 --> 00:00:42.000
which as you remember was about 1.734 to the power of N.

00:00:42.000 --> 00:00:45.000
Now I would like you to quickly think about the following:

00:00:45.000 --> 00:00:48.000
So as you'll remember, at each level of the search tree,

00:00:48.000 --> 00:00:53.000
we're looking at an edge where the 2 end points have not yet had an assignment,

00:00:53.000 --> 00:00:56.000
and we're branching into 3 cases,

00:00:56.000 --> 00:00:59.000
this one, this one, and this one.

00:00:59.000 --> 00:01:01.000
So now it's a very easy quiz actually.

00:01:01.000 --> 00:01:03.000
So how many vertices are added each time

00:01:03.000 --> 00:01:05.000
we go one level deeper into the tree?

00:01:05.000 --> 00:01:10.000
At least 1, at least 2, exactly 1, exactly 2,

00:01:10.000 --> 99:59:59.000
or is this something that actually depends on the structure of the input graph?

