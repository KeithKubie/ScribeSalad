WEBVTT
Kind: captions
Language: en

00:00:02.704 --> 00:00:03.620
RETO MEIER: All right.

00:00:03.620 --> 00:00:05.600
Good afternoon, everyone.

00:00:05.600 --> 00:00:09.150
Welcome to this year's
Android Fireside Chat.

00:00:09.150 --> 00:00:10.790
My name is Reto Meier.

00:00:10.790 --> 00:00:13.540
I'm part of the developer
relations team at Google

00:00:13.540 --> 00:00:16.309
and I'm joined by some of
the most important people

00:00:16.309 --> 00:00:20.126
on the Android Engineering,
Design and Product teams.

00:00:20.126 --> 00:00:22.000
The purpose of the
fireside chat is basically

00:00:22.000 --> 00:00:24.539
to let you guys ask questions
from these people, all

00:00:24.539 --> 00:00:26.580
of the stuff that you want
to know about Android,

00:00:26.580 --> 00:00:28.471
where it is, what
we've announced today,

00:00:28.471 --> 00:00:30.720
how things have been done,
how some of those decisions

00:00:30.720 --> 00:00:32.770
have been made, all of
those sorts of things.

00:00:32.770 --> 00:00:34.450
So it is a Q&amp;A session.

00:00:34.450 --> 00:00:37.170
We have mics at the front
and middle of the room.

00:00:37.170 --> 00:00:39.940
If you have a question,
please line up, ask.

00:00:39.940 --> 00:00:43.500
If there are no questions,
it'll be a really short session.

00:00:43.500 --> 00:00:45.694
We do have a few
from online which

00:00:45.694 --> 00:00:47.360
we've collected in
the weeks leading up.

00:00:47.360 --> 00:00:49.182
So I'm going to ask
some of those as well.

00:00:49.182 --> 00:00:51.640
While you guys are getting
ready to ask questions yourself,

00:00:51.640 --> 00:00:54.356
I'll ask the panel to
introduce themselves,

00:00:54.356 --> 00:00:55.730
just who you are
and a little bit

00:00:55.730 --> 00:00:58.100
about what you do at Google.

00:00:58.100 --> 00:00:59.875
Maybe start with you, Gabe.

00:00:59.875 --> 00:01:01.000
GABE COHEN: I'm Gabe Cohen.

00:01:01.000 --> 00:01:03.085
I'm a product manager
on the Android OS.

00:01:03.085 --> 00:01:04.580
I also work on
Google Play services

00:01:04.580 --> 00:01:05.538
and a few other things.

00:01:07.267 --> 00:01:09.100
XAVIER DUCROHET: Hello,
I'm Xavier Ducrohet.

00:01:09.100 --> 00:01:13.075
I'm the lead for the
Developer Tool and the SDK.

00:01:13.075 --> 00:01:14.450
ADAM POWELL: I am
Adam Powell I'm

00:01:14.450 --> 00:01:17.534
a framework engineer
on the UI Toolkit.

00:01:17.534 --> 00:01:18.200
RACHEL GARB: Hi.

00:01:18.200 --> 00:01:20.520
I'm Rachel Garb and I'm
an interaction designer

00:01:20.520 --> 00:01:22.842
on the Android OS.

00:01:22.842 --> 00:01:23.550
JHILMIL JAIN: Hi.

00:01:23.550 --> 00:01:27.702
My name is Jhilmil Jain and I
lead user research for Android.

00:01:27.702 --> 00:01:28.940
CHET HAUSE: I'm Chet Hause.

00:01:28.940 --> 00:01:31.937
I'm an engineer on
the UI Toolkit team.

00:01:31.937 --> 00:01:33.520
DIANNE HACKBORN: I
am Dianne Hackborn.

00:01:33.520 --> 00:01:37.062
I'm an engineer on the
Android Core Framework team.

00:01:37.062 --> 00:01:38.020
DAVE BURKE: Dave Burke.

00:01:38.020 --> 00:01:38.850
Engineering Director.

00:01:38.850 --> 00:01:40.558
I work on the Platform
and Nexus devices.

00:01:42.212 --> 00:01:43.670
FICUS KIRKPATRICK:
I'm Kirkpatrick.

00:01:43.670 --> 00:01:47.172
I work on the Play Store
apps and games and hardware.

00:01:47.172 --> 00:01:49.380
MILES BAR: I'm Miles Bar,
I'm the engineering manager

00:01:49.380 --> 00:01:52.164
for the apps part
of Google Play.

00:01:52.164 --> 00:01:53.330
RETO MEIER: Thanks everyone.

00:01:53.330 --> 00:01:53.881
All right.

00:01:53.881 --> 00:01:54.630
Let's get started.

00:01:54.630 --> 00:01:55.980
We've got a line at the back.

00:01:55.980 --> 00:01:59.270
So, why don't we
start with you, sir.

00:01:59.270 --> 00:02:02.480
AUDIENCE: My question
is about Java 8.

00:02:02.480 --> 00:02:03.940
Will it be coming to Android?

00:02:03.940 --> 00:02:05.360
And if so, when?

00:02:05.360 --> 00:02:08.300
And will it be supported on
all the versions as well?

00:02:13.426 --> 00:02:16.630
RETO MEIER: It's like
a hot potato question.

00:02:16.630 --> 00:02:18.400
Oh, the mic's going to Xav.

00:02:18.400 --> 00:02:21.540
CHET HAUSE: Usually any question
that has the word will in it,

00:02:21.540 --> 00:02:22.950
you might want to
think about it.

00:02:22.950 --> 00:02:25.491
Because I'm not sure the answer
is going to be what you want.

00:02:25.491 --> 00:02:28.540
In general, can we say the
general policy, which is,

00:02:28.540 --> 00:02:32.000
we don't really talk about stuff
that we will do in the future.

00:02:32.000 --> 00:02:32.770
Just so you know.

00:02:32.770 --> 00:02:35.360
Let's just lay the
groundwork out there.

00:02:35.360 --> 00:02:36.219
Xav, go.

00:02:36.219 --> 00:02:37.760
RETO MEIER: Now,
answer the question,

00:02:37.760 --> 00:02:39.051
Xav, What will happen and when?

00:02:39.051 --> 00:02:40.837
[LAUGHTER]

00:02:40.837 --> 00:02:42.295
XAVIER DUCROHET:
I have no comment.

00:02:42.295 --> 00:02:52.787
[LAUGHTER]

00:02:52.787 --> 00:02:53.620
RETO MEIER: Perfect.

00:02:53.620 --> 00:02:54.050
All right.

00:02:54.050 --> 00:02:55.400
Now you can all see me as well.

00:02:55.400 --> 00:02:55.900
All right.

00:02:55.900 --> 00:02:57.240
Let's try another question.

00:02:57.240 --> 00:02:59.610
Hopefully one which we
can actually answer.

00:02:59.610 --> 00:03:00.510
AUDIENCE: Hi.

00:03:00.510 --> 00:03:02.410
This is for Dianne.

00:03:02.410 --> 00:03:05.320
First off, I really
appreciate all

00:03:05.320 --> 00:03:07.220
of the work you've
done on Binder.

00:03:07.220 --> 00:03:10.240
And I know that it sits at
the heart of everything that

00:03:10.240 --> 00:03:12.110
is Android at all.

00:03:12.110 --> 00:03:16.020
And I just wanted
to ask you, you've

00:03:16.020 --> 00:03:18.210
been involved in
Binder development

00:03:18.210 --> 00:03:20.910
even before Android was Android.

00:03:20.910 --> 00:03:23.670
Can you talk a little bit
about the history of Binder

00:03:23.670 --> 00:03:27.657
and your work with it?

00:03:27.657 --> 00:03:28.490
DIANNE HACKBORN: OK.

00:03:28.490 --> 00:03:31.540
Well, thank you.

00:03:31.540 --> 00:03:38.400
Oh, well I, So Binder
started out in BOS

00:03:38.400 --> 00:03:41.200
and has been
something that I was--

00:03:41.200 --> 00:03:43.020
I was not main person
who did Binder.

00:03:43.020 --> 00:03:46.210
I worked on it as an engineer
at BE, then at Palm Source.

00:03:46.210 --> 00:03:49.500
And then we kind of adopted
it just for IPC in Android.

00:03:49.500 --> 00:03:52.890
But actually, I don't even
think it's the core of Android.

00:03:52.890 --> 00:03:54.930
It's a convenient way to
do IPC on the Android.

00:03:54.930 --> 00:03:57.430
Previous versions of the Binder
were actually much more core

00:03:57.430 --> 00:03:59.360
to the platform design.

00:03:59.360 --> 00:04:03.050
So today it's a really nice
way to do capability based IPC.

00:04:06.040 --> 00:04:08.040
RETO MEIER: Fair enough.

00:04:08.040 --> 00:04:08.841
Thank you.

00:04:08.841 --> 00:04:11.340
All right, I'm going to ask one
of the questions we received

00:04:11.340 --> 00:04:12.700
online earlier.

00:04:12.700 --> 00:04:15.561
I think material design is one
of the most interesting things

00:04:15.561 --> 00:04:17.269
that I saw come out
of the keynote today.

00:04:17.269 --> 00:04:19.959
So I was wondering,
what sort of research

00:04:19.959 --> 00:04:23.185
did we do to be able to come
up with some of those ideas?

00:04:23.185 --> 00:04:24.060
JHILMIL JAIN: Thanks.

00:04:26.650 --> 00:04:28.370
I think for the
first time at Google,

00:04:28.370 --> 00:04:31.250
the researchers came
together across the company

00:04:31.250 --> 00:04:32.800
to work on medieval design.

00:04:32.800 --> 00:04:35.740
So we had researchers
from 15 different groups

00:04:35.740 --> 00:04:37.985
and four different Google
offices come together

00:04:37.985 --> 00:04:38.610
to do research.

00:04:38.610 --> 00:04:41.490
And we conducted research
on four main areas.

00:04:41.490 --> 00:04:44.709
The first was components, which
is containers and elements,

00:04:44.709 --> 00:04:47.000
patterns and layouts, which
is like the floating action

00:04:47.000 --> 00:04:50.120
button, motion
and accessibility.

00:04:50.120 --> 00:04:51.980
So some examples of
the types of research

00:04:51.980 --> 00:04:56.210
that we did, was first,
we explored and validated

00:04:56.210 --> 00:04:59.280
key design principles,
such as really figuring out

00:04:59.280 --> 00:05:01.130
the motion curve and speed.

00:05:01.130 --> 00:05:04.940
Second was that we highlighted
key usability issues

00:05:04.940 --> 00:05:06.890
that designers
should be mindful of.

00:05:06.890 --> 00:05:10.942
For example, when picking the
color of the floating action

00:05:10.942 --> 00:05:12.400
button, making sure
that it doesn't

00:05:12.400 --> 00:05:15.660
blend into the background
like it was in some mocks

00:05:15.660 --> 00:05:17.010
that we exploded earlier.

00:05:17.010 --> 00:05:20.550
Or making sure that the
fabs, the size of the fab

00:05:20.550 --> 00:05:22.100
wasn't, or floating
action button

00:05:22.100 --> 00:05:23.750
wasn't like varying
within the app

00:05:23.750 --> 00:05:25.750
because that would
confuse users.

00:05:25.750 --> 00:05:27.820
And third is that we
conducted a whole bunch

00:05:27.820 --> 00:05:29.410
of accessibility
studies that led

00:05:29.410 --> 00:05:31.150
to a number of design changes.

00:05:31.150 --> 00:05:33.070
And one such design
change is that we

00:05:33.070 --> 00:05:36.320
have now a much improved
color palette, which

00:05:36.320 --> 00:05:40.320
takes into account the
color contrast that

00:05:40.320 --> 00:05:43.140
is required between
type and the background.

00:05:43.140 --> 00:05:46.100
So now our low,
vision impaired users

00:05:46.100 --> 00:05:49.420
can actually read the
text a lot better.

00:05:49.420 --> 00:05:51.670
DAVE BURKE: If you're wondering
what a floating action

00:05:51.670 --> 00:05:54.434
button is, because I didn't know
what it was until a week ago,

00:05:54.434 --> 00:05:55.600
it's actually an image view.

00:05:55.600 --> 00:05:58.990
It's where someone's called
set elevation on the view.

00:05:58.990 --> 00:06:01.280
Just thought you should know.

00:06:01.280 --> 00:06:02.030
But it looks cool.

00:06:02.030 --> 00:06:02.990
And it's round.

00:06:02.990 --> 00:06:03.580
Does it have to be round?

00:06:03.580 --> 00:06:05.538
So the dialer one's the
floating action button.

00:06:07.947 --> 00:06:10.030
We need a translation
between you and engineering.

00:06:13.570 --> 00:06:15.710
RETO MEIER: Question
for Xav, I think.

00:06:15.710 --> 00:06:17.110
I will quote it out to you.

00:06:17.110 --> 00:06:20.700
Considering its performance,
why not offer Genymotion

00:06:20.700 --> 00:06:22.784
as the official
emulator for Android?

00:06:22.784 --> 00:06:31.287
[LAUGHTER AND CHEERS]

00:06:31.287 --> 00:06:32.870
XAVIER DUCROHET:
It's a good question.

00:06:32.870 --> 00:06:34.661
First of all, I think
it's a great product.

00:06:34.661 --> 00:06:36.770
I think they are not
quite free, though.

00:06:36.770 --> 00:06:39.570
So there is a demo version.

00:06:39.570 --> 00:06:41.470
I don't know exactly
what the demo is.

00:06:41.470 --> 00:06:43.178
But I think that's
what I sense, that you

00:06:43.178 --> 00:06:44.760
have to pay for to
get some things.

00:06:44.760 --> 00:06:46.760
So we can't quite
distribute that.

00:06:46.760 --> 00:06:49.730
The other thing is
that, obviously, we

00:06:49.730 --> 00:06:52.390
need to improve a
lot, the story there.

00:06:52.390 --> 00:06:54.630
We have, one other thing
that we really want to do

00:06:54.630 --> 00:06:58.120
is a low eliminating
already, all the ecosystem.

00:06:58.120 --> 00:07:01.450
And that means
also AUM and MEEPS.

00:07:01.450 --> 00:07:04.160
And they go mostly with
x86 for performance reasons

00:07:04.160 --> 00:07:05.970
which totally makes sense.

00:07:05.970 --> 00:07:08.100
But we have to sleep on that.

00:07:08.100 --> 00:07:12.890
And we do want to support a lot
more hardware in the long term,

00:07:12.890 --> 00:07:15.150
like Bluetooth, multi-touch,
and things like that.

00:07:15.150 --> 00:07:16.920
And it's a lot
better, if we control

00:07:16.920 --> 00:07:19.770
the own stack, the
whole stack for that.

00:07:19.770 --> 00:07:22.409
And so we want to keep
all technology to do that.

00:07:22.409 --> 00:07:23.450
But it's a great product.

00:07:23.450 --> 00:07:26.110
You should definitely
try it out and use it

00:07:26.110 --> 00:07:27.920
if it fits your needs.

00:07:27.920 --> 00:07:28.910
RETO MEIER: Thanks.

00:07:28.910 --> 00:07:31.310
Let's take another question
from the crowd, at the back.

00:07:31.310 --> 00:07:31.935
AUDIENCE: Sure.

00:07:31.935 --> 00:07:33.970
Just curious in
Android L, what's

00:07:33.970 --> 00:07:36.930
new with adaptive bit rate
video and HLS support?

00:07:40.560 --> 00:07:41.210
DAVE BURKE: OK.

00:07:41.210 --> 00:07:43.285
So, let's see.

00:07:43.285 --> 00:07:44.910
The most interesting
thing we're doing.

00:07:44.910 --> 00:07:46.430
And I'm not sure if
it's launched yet

00:07:46.430 --> 00:07:47.200
but it's imminent
is, we're going

00:07:47.200 --> 00:07:49.570
to open source something
we call XO Player.

00:07:49.570 --> 00:07:52.970
This is the player that's in
YouTube and in Play Movies

00:07:52.970 --> 00:07:53.530
and TV.

00:07:53.530 --> 00:07:58.040
And it's built on MediaCodec,
MediaDRM, and MediaExtractor,

00:07:58.040 --> 00:07:59.170
MediaCrypto.

00:07:59.170 --> 00:08:02.640
It's a really good
adaptive bit rate player.

00:08:02.640 --> 00:08:04.334
It uses Dash.

00:08:04.334 --> 00:08:05.500
So that's one thing to know.

00:08:05.500 --> 00:08:08.860
And then I'm pretty sure we've
updated to the latest internet

00:08:08.860 --> 00:08:14.260
draft of HLS in
L. And that's all

00:08:14.260 --> 00:08:17.517
I can remember that
we've done so far.

00:08:17.517 --> 00:08:18.350
AUDIENCE: Thank you.

00:08:18.350 --> 00:08:20.230
RETO MEIER: From the front.

00:08:20.230 --> 00:08:20.970
AUDIENCE: Hello.

00:08:20.970 --> 00:08:24.870
I've seen the new
UI and UX you have

00:08:24.870 --> 00:08:27.410
prepared for the L release.

00:08:27.410 --> 00:08:30.750
I was wondering, I've seen
that in the action bar, where

00:08:30.750 --> 00:08:34.590
we used to have the up
navigation affordments, now

00:08:34.590 --> 00:08:37.460
we have what looks
like a back button.

00:08:37.460 --> 00:08:39.080
What's going on there?

00:08:39.080 --> 00:08:40.059
Is it changing?

00:08:40.059 --> 00:08:43.380
Are we giving up on
the app navigation?

00:08:43.380 --> 00:08:45.159
So what's going to happen?

00:08:45.159 --> 00:08:47.700
ADAM POWELL: So the short answer
is that structurally nothing

00:08:47.700 --> 00:08:50.400
is changing in that navigation.

00:08:50.400 --> 00:08:52.470
Some of the stuff
that was shown,

00:08:52.470 --> 00:08:55.440
I think during
the keynote, there

00:08:55.440 --> 00:08:58.160
was a demo of multiple
Chrome tabs opening

00:08:58.160 --> 00:09:01.860
in different documents
within recents as well.

00:09:01.860 --> 00:09:05.870
So some of that is going
to subtly change just

00:09:05.870 --> 00:09:07.800
as a result of that new feature.

00:09:07.800 --> 00:09:10.340
In terms of the
iconography, unfortunately I

00:09:10.340 --> 00:09:11.990
don't think we have
a representative

00:09:11.990 --> 00:09:13.520
from our visual
design team here,

00:09:13.520 --> 00:09:17.790
but Rachel do you
want to talk to that?

00:09:17.790 --> 00:09:20.950
RACHEL GARB: Yeah, I believe
it's just that an arrow really

00:09:20.950 --> 00:09:25.240
clearly says for most people,
this is what I wanted to do.

00:09:25.240 --> 00:09:27.790
want do what I was doing before.

00:09:27.790 --> 00:09:29.770
Whether it's hierarchical
or historical.

00:09:29.770 --> 00:09:32.190
AUDIENCE: Don't we have
the back button for that?

00:09:32.190 --> 00:09:33.106
ADAM POWELL: There is.

00:09:33.106 --> 00:09:36.225
And what, Go ahead Feel free.

00:09:38.740 --> 00:09:42.762
So what we found is that,
and again, even just

00:09:42.762 --> 00:09:45.220
in terms of some of the research
that we've done with this,

00:09:45.220 --> 00:09:48.250
users tend to really
think either in terms

00:09:48.250 --> 00:09:50.670
of the system or the app
at a given point in time.

00:09:50.670 --> 00:09:53.730
And having that extra
affordance be sitting there

00:09:53.730 --> 00:09:56.340
in the app, very clearly
in the app in the bar,

00:09:56.340 --> 00:09:58.840
is something that they
much more closely tie to,

00:09:58.840 --> 00:10:01.730
I'm going to continue acting
within the context of this app.

00:10:01.730 --> 00:10:04.290
Whereas the Back
button in the system

00:10:04.290 --> 00:10:07.840
is really seen as more
of kind of meta action

00:10:07.840 --> 00:10:09.406
that can act between apps.

00:10:09.406 --> 00:10:10.780
Even though a lot
of users aren't

00:10:10.780 --> 00:10:13.590
able to clearly articulate the
difference between these two,

00:10:13.590 --> 00:10:16.560
and even though the iconography
is very similar, what we found

00:10:16.560 --> 00:10:19.180
is a lot of users tend to
develop this really intuitive

00:10:19.180 --> 00:10:22.390
understanding of what to expect
when they press either one.

00:10:22.390 --> 00:10:24.890
Now, of course for developers,
this is really interesting

00:10:24.890 --> 00:10:27.580
because it means that there's
a lot of subtlety to really get

00:10:27.580 --> 00:10:28.370
this right.

00:10:28.370 --> 00:10:32.670
And we're really hoping that
some of the new functionality

00:10:32.670 --> 00:10:37.850
that we've exposed to open
documents in more recents tabs

00:10:37.850 --> 00:10:41.940
will really help iron out
some of the rougher cases that

00:10:41.940 --> 00:10:43.810
have come up along with this.

00:10:43.810 --> 00:10:46.280
So definitely stay tuned
for more of the published

00:10:46.280 --> 00:10:48.220
guidelines around how
to use that effectively.

00:10:48.220 --> 00:10:48.761
AUDIENCE: OK.

00:10:48.761 --> 00:10:49.380
Thank you.

00:10:49.380 --> 00:10:50.171
RETO MEIER: Thanks.

00:10:50.171 --> 00:10:51.950
So I think seeing the
keynote this morning

00:10:51.950 --> 00:10:54.260
and all of the awesome
changes from material design

00:10:54.260 --> 00:10:55.720
and how good that
makes apps look,

00:10:55.720 --> 00:10:57.230
I think one of the
questions that I have,

00:10:57.230 --> 00:10:58.670
and I think, some
other developers,

00:10:58.670 --> 00:11:00.044
how much work is
it going to take

00:11:00.044 --> 00:11:02.650
to get an existing app
which already looks good,

00:11:02.650 --> 00:11:04.350
follows the Android
design guidelines,

00:11:04.350 --> 00:11:05.380
and turn it into
something that's

00:11:05.380 --> 00:11:07.546
a great example of a material
design implementation?

00:11:13.100 --> 00:11:15.030
CHET HAUSE: A bit.

00:11:15.030 --> 00:11:16.869
RETO MEIER: Thank you, Chet.

00:11:16.869 --> 00:11:18.410
GABE COHEN: I think
you were supposed

00:11:18.410 --> 00:11:20.860
to plug the talk for tomorrow.

00:11:20.860 --> 00:11:22.920
CHET HAUSE: Right, so,
Go see the talk tomorrow.

00:11:22.920 --> 00:11:24.020
Answer over.

00:11:24.020 --> 00:11:28.750
So, in fact, there's two
talks on material design,

00:11:28.750 --> 00:11:31.169
sort of the engineering side
of that one with Adam at 11.

00:11:31.169 --> 00:11:33.710
So you can go there if you want
a little bit more information

00:11:33.710 --> 00:11:35.793
about there, where we talk
about things like this.

00:11:35.793 --> 00:11:38.860
So there's sort of a
gradient of how much work

00:11:38.860 --> 00:11:42.420
you want to take on to get
toward the vision of what

00:11:42.420 --> 00:11:45.120
your material
design app will be.

00:11:45.120 --> 00:11:47.090
The first step is not that bad.

00:11:47.090 --> 00:11:50.650
Which is basically enable
the material theme.

00:11:50.650 --> 00:11:54.510
then, if you're using
custom apps, custom views,

00:11:54.510 --> 00:11:57.400
in your system, then you may
need to fix up some of those.

00:11:57.400 --> 00:11:58.950
If you have assets
that were created

00:11:58.950 --> 00:12:00.649
with other themes
in mind, maybe they

00:12:00.649 --> 00:12:01.940
look a little bit out of place.

00:12:01.940 --> 00:12:04.860
So we basically see it
as enable the theme, spot

00:12:04.860 --> 00:12:06.210
fix as necessary.

00:12:06.210 --> 00:12:09.596
And that's kind of the minimum
bar to be a material app.

00:12:09.596 --> 00:12:11.220
And then after that,
you can say, well,

00:12:11.220 --> 00:12:13.140
what is the material
design actually going

00:12:13.140 --> 00:12:15.400
to be for this app,
with different padding,

00:12:15.400 --> 00:12:18.670
different lay out, and then what
does that necessitate in terms

00:12:18.670 --> 00:12:21.310
of the functionality that
I need to change in my app.

00:12:21.310 --> 00:12:24.000
And then, you can figure
out how far down that road

00:12:24.000 --> 00:12:25.215
you want to go.

00:12:25.215 --> 00:12:27.340
And I should also point
out that a lot of that work

00:12:27.340 --> 00:12:29.300
is actually just using
APIs that already exist.

00:12:29.300 --> 00:12:31.800
They're not new APIs
in L. So it's not

00:12:31.800 --> 00:12:35.520
like we expose this huge new
surface area of APIs in L

00:12:35.520 --> 00:12:37.590
that you have to use
to be a quantum app.

00:12:37.590 --> 00:12:39.620
It's more that we
have new capabilities

00:12:39.620 --> 00:12:41.710
to do things like
Real-Time Shadows

00:12:41.710 --> 00:12:44.400
that we use internally to
get elevation for views

00:12:44.400 --> 00:12:45.540
when appropriate.

00:12:45.540 --> 00:12:46.970
You can access
those if you want,

00:12:46.970 --> 00:12:48.380
if it's appropriate
for your application.

00:12:48.380 --> 00:12:50.040
But most of what
we're talking about

00:12:50.040 --> 00:12:52.150
is simply new design
along the paradigm

00:12:52.150 --> 00:12:54.000
that we talked about
with material design.

00:12:54.000 --> 00:12:57.380
And then the work that you need
to do, just traditional Android

00:12:57.380 --> 00:13:00.280
development work for layouts
and padding and assets

00:13:00.280 --> 00:13:01.860
to realize that design.

00:13:01.860 --> 00:13:03.609
ADAM POWELL: The nice
thing a lot of this,

00:13:03.609 --> 00:13:06.690
as well, is that if you
followed some of the design

00:13:06.690 --> 00:13:09.270
evolution of a lot
of big Android apps

00:13:09.270 --> 00:13:11.770
in the last few years, you'll
notice that a lot of them

00:13:11.770 --> 00:13:14.145
have been moving in this sort
of direction to begin with.

00:13:14.145 --> 00:13:16.930
You'll see that a lot of things
are contained on surfaces.

00:13:16.930 --> 00:13:20.770
You have drawers that slide out
over scrolling areas of cards.

00:13:20.770 --> 00:13:23.600
You have a lot of these
very similar patterns that

00:13:23.600 --> 00:13:26.340
have really been kind of
kicked up for material design

00:13:26.340 --> 00:13:27.280
and refined.

00:13:27.280 --> 00:13:29.500
So if you've been sort
of following along

00:13:29.500 --> 00:13:33.380
in a lot of the footsteps that
have been blazed before this,

00:13:33.380 --> 00:13:36.750
then I think you'll find that
the workload to really go

00:13:36.750 --> 00:13:39.170
that extra step isn't
quite as much as it

00:13:39.170 --> 00:13:42.856
looks like in the first glance.

00:13:42.856 --> 00:13:44.980
GABE COHEN: I should also
say material design's one

00:13:44.980 --> 00:13:47.310
of the big drivers behind
us doing the L Developer

00:13:47.310 --> 00:13:48.560
Preview this year.

00:13:48.560 --> 00:13:50.810
I definitely recognize that
it's going to take, quote,

00:13:50.810 --> 00:13:54.834
a bit of effort for people
to adapt their apps.

00:13:54.834 --> 00:13:57.500
We wanted to give people time to
do that in advance of consumers

00:13:57.500 --> 00:14:00.384
getting the full sweep of apps
from Google in that theme.

00:14:00.384 --> 00:14:02.050
But we also want to
give people a chance

00:14:02.050 --> 00:14:04.008
to give us feedback on
where it works for them.

00:14:04.008 --> 00:14:04.780
Where it doesn't.

00:14:04.780 --> 00:14:06.580
What sort of patterns
they want to express

00:14:06.580 --> 00:14:08.120
in this design language.

00:14:08.120 --> 00:14:10.000
And hopefully hear
back from people about

00:14:10.000 --> 00:14:13.850
how it fits with their
design ethos in their brain.

00:14:13.850 --> 00:14:15.310
Looking forward to that.

00:14:15.310 --> 00:14:16.320
RETO MEIER: And that's
a really important thing

00:14:16.320 --> 00:14:18.945
as well, like one of the big key
things about doing a Developer

00:14:18.945 --> 00:14:21.250
Preview like this is that we
want to hear from you guys

00:14:21.250 --> 00:14:24.937
as to what works, what
doesn't work, what you love,

00:14:24.937 --> 00:14:26.270
start to see some of that stuff.

00:14:26.270 --> 00:14:28.692
So tell us.

00:14:28.692 --> 00:14:30.842
Let's see, from the front.

00:14:30.842 --> 00:14:32.800
AUDIENCE: First off, I
want to thank all of you

00:14:32.800 --> 00:14:34.900
seriously for your
work on the platform

00:14:34.900 --> 00:14:36.690
and on developer relations.

00:14:36.690 --> 00:14:37.960
You make my life a lot better.

00:14:37.960 --> 00:14:38.460
So, thanks.

00:14:38.460 --> 00:14:43.510
[APPLAUSE]

00:14:43.510 --> 00:14:45.170
So my question.

00:14:45.170 --> 00:14:47.840
I've noticed a lot of
differing perspectives

00:14:47.840 --> 00:14:49.429
from different developers.

00:14:49.429 --> 00:14:51.470
And some developers who
just throw up their hands

00:14:51.470 --> 00:14:53.720
and say, I'm confused
about when it's

00:14:53.720 --> 00:14:56.750
appropriate to use
an activity with one

00:14:56.750 --> 00:15:00.600
fragment or an activity
with a bunch of fragments,

00:15:00.600 --> 00:15:03.860
like a dozen or an activity
with two different fragments

00:15:03.860 --> 00:15:06.600
or maybe, is it ever
appropriate these days

00:15:06.600 --> 00:15:09.050
to use an activity
with no fragments?

00:15:09.050 --> 00:15:12.644
And I know that's
nuanced, but I'd really

00:15:12.644 --> 00:15:14.810
appreciate if we could talk
through it a little bit.

00:15:17.044 --> 00:15:18.210
DIANNE HACKBORN: I'll start.

00:15:20.960 --> 00:15:23.810
One of the basic
things is that you're

00:15:23.810 --> 00:15:25.400
going to have at
least one activity.

00:15:25.400 --> 00:15:26.900
And you'll probably have
multiple activities.

00:15:26.900 --> 00:15:28.490
So you should
think of activities

00:15:28.490 --> 00:15:31.780
as being the entry points
into your application.

00:15:31.780 --> 00:15:33.740
Android doesn't have like
one main entry point.

00:15:33.740 --> 00:15:36.260
It has more than one.

00:15:36.260 --> 00:15:38.562
And so activities
are the top things,

00:15:38.562 --> 00:15:40.770
that if someone is going to
go into your application,

00:15:40.770 --> 00:15:42.740
that's how they get into it.

00:15:42.740 --> 00:15:45.550
And then once you're inside
the activity, the right way

00:15:45.550 --> 00:15:48.210
to do things is,
from my perspective,

00:15:48.210 --> 00:15:51.330
now, Adam add to this,
but from my perspective,

00:15:51.330 --> 00:15:53.819
as far as the system
management, that's really

00:15:53.819 --> 00:15:54.610
up the application.

00:15:54.610 --> 00:15:56.510
Now, the application
has the freedom to say,

00:15:56.510 --> 00:15:58.680
if it makes sense now to
have multiple fragments,

00:15:58.680 --> 00:16:00.870
to have one fragment, to
have no fragments, however

00:16:00.870 --> 00:16:07.100
it wants organize it, there's
not concrete rules on that.

00:16:07.100 --> 00:16:09.410
ADAM POWELL: So I would
say that one of the rules

00:16:09.410 --> 00:16:11.225
to follow with that is,

00:16:11.225 --> 00:16:11.725
[LAUGHTER]

00:16:11.725 --> 00:16:12.933
DIANNE HACKBORN: Nonconcrete.

00:16:12.933 --> 00:16:15.790
ADAM POWELL: Not
a concrete rule.

00:16:15.790 --> 00:16:18.870
Rule of thumb, maybe,
is just kind of look

00:16:18.870 --> 00:16:19.900
to the name of the API.

00:16:19.900 --> 00:16:21.390
It's a fragment, it's a piece.

00:16:21.390 --> 00:16:23.064
It is a piece of an
activity if you're

00:16:23.064 --> 00:16:24.480
finding that your
activity is just

00:16:24.480 --> 00:16:26.410
getting too big and
unwieldy and too much

00:16:26.410 --> 00:16:30.067
code to think about
in one go, then

00:16:30.067 --> 00:16:31.650
maybe it's worth
breaking some of that

00:16:31.650 --> 00:16:34.180
up into some more
logical fragments.

00:16:34.180 --> 00:16:36.900
I mean, keep in mind that
both activities and fragments

00:16:36.900 --> 00:16:39.320
fulfill the role of being
a controller in sort

00:16:39.320 --> 00:16:41.120
of your whole model
view controller

00:16:41.120 --> 00:16:43.030
setup of your application.

00:16:43.030 --> 00:16:45.210
So as long as it makes
sense to break that

00:16:45.210 --> 00:16:47.470
down into smaller more
understandable pieces, then

00:16:47.470 --> 00:16:49.094
maybe it makes sense
to break that down

00:16:49.094 --> 00:16:50.274
into some more fragments.

00:16:50.274 --> 00:16:51.690
DIANNE HACKBORN:
I would also add,

00:16:51.690 --> 00:16:53.870
I think a very
reasonable approach

00:16:53.870 --> 00:16:57.170
is to say, just implement
everything as fragments.

00:16:57.170 --> 00:16:58.940
So all your UI
elements are fragments

00:16:58.940 --> 00:17:01.545
and then you put
those into activities

00:17:01.545 --> 00:17:02.420
where it makes sense.

00:17:02.420 --> 00:17:02.610
Right?

00:17:02.610 --> 00:17:04.500
Because fragments are
the more flexible way

00:17:04.500 --> 00:17:06.510
to organize your application.

00:17:06.510 --> 00:17:09.505
And so if you find, like, I have
this UI element here and now

00:17:09.505 --> 00:17:11.130
in the future I need
it somewhere else,

00:17:11.130 --> 00:17:12.940
it's really nice that, instead
of having implemented it

00:17:12.940 --> 00:17:15.150
as an activity, you have
it there as a fragment

00:17:15.150 --> 00:17:17.839
and it can be fairly reasonable
to other parts of the UI.

00:17:17.839 --> 00:17:20.339
ADAM POWELL: Just think of it
as another unit of abstraction

00:17:20.339 --> 00:17:21.406
that's available to you.

00:17:21.406 --> 00:17:22.460
AUDIENCE: Thank you.

00:17:22.460 --> 00:17:24.839
RETO MEIER: From the back.

00:17:24.839 --> 00:17:25.859
AUDIENCE: Yes.

00:17:25.859 --> 00:17:30.690
I would like to understand
what your experience is

00:17:30.690 --> 00:17:35.930
with your own usage of
permissions in Android,

00:17:35.930 --> 00:17:37.520
as a user of Android.

00:17:37.520 --> 00:17:41.330
And what user research
you might have

00:17:41.330 --> 00:17:44.970
and I wanted to give you
some feedback from the Wild

00:17:44.970 --> 00:17:54.210
West of developing, which is
our users may not have a Google

00:17:54.210 --> 00:17:56.860
approved version of Android.

00:17:56.860 --> 00:17:59.880
So anywhere in my
code that I'm calling

00:17:59.880 --> 00:18:04.240
for system resources or
assistant managers of any kind,

00:18:04.240 --> 00:18:05.210
I need to protect that.

00:18:05.210 --> 00:18:10.740
I need to be prepared for,
although I got the permission,

00:18:10.740 --> 00:18:13.870
because they installed
it, it might not be there.

00:18:13.870 --> 00:18:17.140
And where I'm
going with this is,

00:18:17.140 --> 00:18:20.640
I like the way you've
simplified, recently,

00:18:20.640 --> 00:18:23.510
the presentation
when you install.

00:18:23.510 --> 00:18:28.420
But where can we go
with dynamic permissions

00:18:28.420 --> 00:18:31.110
because I think that
helps users to understand

00:18:31.110 --> 00:18:34.580
the context with which
a permission is used.

00:18:34.580 --> 00:18:38.590
So what can you tell me about
the research that's going on

00:18:38.590 --> 00:18:40.520
and what you use.

00:18:40.520 --> 00:18:43.130
Do you just hold your
nose and install?

00:18:43.130 --> 00:18:46.990
I mean that seems like a
normal thing to do to me.

00:18:48.910 --> 00:18:49.910
JHILMIL JAIN: All right.

00:18:49.910 --> 00:18:51.782
So I'll talk from a
research perspective

00:18:51.782 --> 00:18:53.240
and then Dave or
somebody else will

00:18:53.240 --> 00:18:55.980
talk from a framework
perspective.

00:18:55.980 --> 00:18:57.600
So from a research
perspective I do

00:18:57.600 --> 00:19:02.395
realize that we can do a lot
more to provide transparency

00:19:02.395 --> 00:19:03.270
with the permissions.

00:19:03.270 --> 00:19:06.270
I know one thing is that, OK, I
have accepted these permissions

00:19:06.270 --> 00:19:07.610
to install an app.

00:19:07.610 --> 00:19:09.950
How was this data being showed?

00:19:09.950 --> 00:19:12.720
Shared with other
third party maybe.

00:19:12.720 --> 00:19:15.047
Or is there was
one place where I

00:19:15.047 --> 00:19:16.880
can go to sort of manage
all my permissions.

00:19:16.880 --> 00:19:19.100
So these are things
that we are aware of.

00:19:19.100 --> 00:19:21.360
And we are deeply
thinking about this.

00:19:21.360 --> 00:19:22.160
So stay tuned.

00:19:24.780 --> 00:19:25.780
FICUS KIRKPATRICK: Yeah.

00:19:25.780 --> 00:19:28.646
I just wanted to comment on a
couple things you mentioned.

00:19:28.646 --> 00:19:30.770
I think there was a lot to
unpack in that question.

00:19:30.770 --> 00:19:34.590
But around, I guess,
having to code defensively

00:19:34.590 --> 00:19:39.840
around incompatible versions
of Android and so on.

00:19:39.840 --> 00:19:41.970
I'd be curious if
you tell me afterward

00:19:41.970 --> 00:19:45.300
what particularly that is
because we work on the Play

00:19:45.300 --> 00:19:48.950
Store and you may
have heard of it.

00:19:48.950 --> 00:19:51.610
It runs on a lot of devices
and it's just not something

00:19:51.610 --> 00:19:55.120
that we've run into of
seeing this inconsistent

00:19:55.120 --> 00:19:58.960
availability of permissions,
whether they're granted or not.

00:19:58.960 --> 00:20:00.710
RETO MEIER: I suspect
you may be referring

00:20:00.710 --> 00:20:04.150
to some of the problems which
have come out which allow users

00:20:04.150 --> 00:20:06.800
to optionally disable some of
the permissions which you may

00:20:06.800 --> 00:20:09.027
have been granted
through installation.

00:20:09.027 --> 00:20:09.610
AUDIENCE: Yes.

00:20:09.610 --> 00:20:10.109
Thank you.

00:20:16.830 --> 00:20:19.182
FICUS KIRKPATRICK: I
think that, thank you

00:20:19.182 --> 00:20:21.900
for the feedback on the way
we display permissions now.

00:20:21.900 --> 00:20:24.530
I think the big
insight there was

00:20:24.530 --> 00:20:27.610
we had tied the developers idea
for the permission and the user

00:20:27.610 --> 00:20:30.050
idea for the permission
together for a long time.

00:20:30.050 --> 00:20:32.840
I think what the users
care about is the data.

00:20:32.840 --> 00:20:39.890
So I think that we're just
getting started on figuring out

00:20:39.890 --> 00:20:43.390
how people think about what
data they're getting access to.

00:20:43.390 --> 00:20:45.990
You saw some of the stuff in
the keynote today about data

00:20:45.990 --> 00:20:47.390
control is something users want.

00:20:51.610 --> 00:20:53.310
I think you're seeing
the first step.

00:20:53.310 --> 00:20:58.800
And the research is going
to, the research we've done

00:20:58.800 --> 00:21:02.790
is going to inform where the
platform goes going forward.

00:21:02.790 --> 00:21:06.530
Gabe do you want to, do you
want to talk about app ops.

00:21:09.627 --> 00:21:11.460
GABE COHEN: Also, thank
you for the feedback

00:21:11.460 --> 00:21:12.390
on the simplification.

00:21:12.390 --> 00:21:16.640
Actually you ask for personal
anecdotes or experience.

00:21:16.640 --> 00:21:19.640
I think I'm similar to
many users in that there's

00:21:19.640 --> 00:21:21.030
a service I want.

00:21:21.030 --> 00:21:22.830
And there's a certain
number of things

00:21:22.830 --> 00:21:24.559
I'm willing to bear to get it.

00:21:24.559 --> 00:21:26.600
And sometimes I just want
that service and that's

00:21:26.600 --> 00:21:29.580
kind of the end of
the conversation.

00:21:29.580 --> 00:21:33.582
And for users who may be looking
for more commodity experience,

00:21:33.582 --> 00:21:35.665
I think the difference in
permissions between apps

00:21:35.665 --> 00:21:37.910
will actually make a
difference in what they choose.

00:21:37.910 --> 00:21:39.480
We hope the new
UI makes it clear

00:21:39.480 --> 00:21:42.310
what those differences
are between apps.

00:21:42.310 --> 00:21:46.560
And then anecdotally, what I've
heard from friends and family

00:21:46.560 --> 00:21:49.840
after we did the roll out,
they're like, what is this?

00:21:49.840 --> 00:21:51.930
Is that generally they're
noticing them more.

00:21:51.930 --> 00:21:56.596
I think our goal is to give a
more gestalt impression, using

00:21:56.596 --> 00:21:57.970
iconography and
things like that.

00:21:57.970 --> 00:21:58.660
And that's having an effect.

00:21:58.660 --> 00:22:00.670
People are like, wow, this
application can do this stuff.

00:22:00.670 --> 00:22:02.295
Actually it could
always do that stuff,

00:22:02.295 --> 00:22:04.264
you couldn't tell
because it was buried

00:22:04.264 --> 00:22:05.305
in a mess of information.

00:22:05.305 --> 00:22:08.600
We really uplifted
the signal there.

00:22:08.600 --> 00:22:12.870
And I guess for your question
about context and run time.

00:22:12.870 --> 00:22:14.870
I think we would all
agree that context

00:22:14.870 --> 00:22:16.831
helps users make decisions.

00:22:16.831 --> 00:22:18.580
We just haven't come
up with the right way

00:22:18.580 --> 00:22:20.413
to incorporate that
into the experience yet.

00:22:20.413 --> 00:22:23.480
But like Jhilmil said, we're
still thinking about this.

00:22:23.480 --> 00:22:26.666
I think we have a
long way to go still.

00:22:26.666 --> 00:22:29.040
ADAM POWELL: And just to your
point about your experience

00:22:29.040 --> 00:22:31.170
as a developer, I think that's a
great example of the experience

00:22:31.170 --> 00:22:32.050
that we don't want.

00:22:32.050 --> 00:22:36.050
And users are our developers
as engineers on the platform.

00:22:36.050 --> 00:22:38.920
So I think that as we continue
thinking about this problem,

00:22:38.920 --> 00:22:40.860
we're really going
to try and find

00:22:40.860 --> 00:22:44.130
where that balance is between
user's needs and developer's

00:22:44.130 --> 00:22:46.270
needs and make sure that
everybody can kind of come

00:22:46.270 --> 00:22:48.890
to some agreements.

00:22:48.890 --> 00:22:50.940
AUDIENCE: Thanks guys.

00:22:50.940 --> 00:22:53.910
RETO MEIER: So another
question from online.

00:22:53.910 --> 00:22:56.850
Asks, are there any plans to
improve the Android activity

00:22:56.850 --> 00:22:57.960
life cycle stack.

00:22:57.960 --> 00:23:00.619
In particular making it
less complex for developers

00:23:00.619 --> 00:23:01.160
to deal with.

00:23:06.240 --> 00:23:08.570
DIANNE HACKBORN:
Well, less complex.

00:23:08.570 --> 00:23:10.520
Well since this question
did not say anything

00:23:10.520 --> 00:23:13.190
about exactly what was wrong,
I'm going to make that up.

00:23:13.190 --> 00:23:16.710
[LAUGHTER]

00:23:16.710 --> 00:23:19.620
So one perspective on
this is that Android

00:23:19.620 --> 00:23:22.830
took a quite different approach
from a traditional operating

00:23:22.830 --> 00:23:25.775
system to what an
application is,

00:23:25.775 --> 00:23:28.025
in that normally an operating
system in an application

00:23:28.025 --> 00:23:29.350
is basically a main.

00:23:29.350 --> 00:23:31.710
And the platform just
says, OK, the user

00:23:31.710 --> 00:23:34.054
wants to run this
application main go.

00:23:34.054 --> 00:23:35.470
And at that point,
the application

00:23:35.470 --> 00:23:38.080
is all in control of what's
going on inside of it.

00:23:38.080 --> 00:23:42.700
And the platform doesn't really
have any control over it.

00:23:42.700 --> 00:23:45.262
So when we did Android,
one of the basic things

00:23:45.262 --> 00:23:46.720
we wanted to do
is, we say we don't

00:23:46.720 --> 00:23:48.261
want to have just
a main entry point.

00:23:48.261 --> 00:23:51.060
Because we want to have
a lot more interesting

00:23:51.060 --> 00:23:52.590
interactions across
applications.

00:23:52.590 --> 00:23:54.510
And so we have this
activity component model.

00:23:54.510 --> 00:23:56.470
This activity is
services, receivers,

00:23:56.470 --> 00:23:59.150
and stuff that make
up all the entry

00:23:59.150 --> 00:24:01.480
points into the application.

00:24:01.480 --> 00:24:03.420
So once you do that,
you kind of can't

00:24:03.420 --> 00:24:06.720
have just this main black
box application that is just

00:24:06.720 --> 00:24:08.720
this box, you make it run
and it does its thing.

00:24:08.720 --> 00:24:10.261
Because the operating
system actually

00:24:10.261 --> 00:24:13.680
needs to have a lot
more interaction

00:24:13.680 --> 00:24:16.390
with the application about,
oh, it's made this activity.

00:24:16.390 --> 00:24:18.050
But now someone wants to share.

00:24:18.050 --> 00:24:20.550
And so now we need to
make another activity.

00:24:20.550 --> 00:24:22.510
And we have to tell the
application to do that.

00:24:22.510 --> 00:24:24.520
And the application has
to always be in a state

00:24:24.520 --> 00:24:25.353
that it can do that.

00:24:25.353 --> 00:24:28.860
Because it can't know when
this is going to happen.

00:24:28.860 --> 00:24:32.510
So that's where a lot of
that complexity comes in.

00:24:32.510 --> 00:24:35.420
And it's really, I
think, about-- it's

00:24:35.420 --> 00:24:38.480
this change from the
app developer being

00:24:38.480 --> 00:24:41.410
in control of its
box to needing to do

00:24:41.410 --> 00:24:43.810
some coordination
with the platform.

00:24:43.810 --> 00:24:46.670
And it may be some complexity.

00:24:46.670 --> 00:24:50.314
I think there's it's
maybe more learning curve.

00:24:50.314 --> 00:24:51.980
I really think that
once you get through

00:24:51.980 --> 00:24:53.797
that, there's a lot
of advantages to us,

00:24:53.797 --> 00:24:55.380
certainly for
developing the platform,

00:24:55.380 --> 00:24:56.890
it's given us a lot
of opportunities

00:24:56.890 --> 00:24:58.870
to do new features
in the platform

00:24:58.870 --> 00:25:01.040
with existing applications
and ways we never

00:25:01.040 --> 00:25:02.750
could have without this.

00:25:02.750 --> 00:25:04.610
And one example in
L that I love is

00:25:04.610 --> 00:25:07.110
that we introduced
this whole recents

00:25:07.110 --> 00:25:09.040
with this document
oriented recents

00:25:09.040 --> 00:25:11.134
that applications have
multiple recent entries.

00:25:11.134 --> 00:25:13.550
And if you run the developer
preview, you're going to see,

00:25:13.550 --> 00:25:15.750
we're actually doing this
to existing applications.

00:25:15.750 --> 00:25:18.630
So if you do a share, and you
go through the standard share

00:25:18.630 --> 00:25:20.867
dialogue, when you end
up in the share target,

00:25:20.867 --> 00:25:22.450
this becomes another
entry on recents.

00:25:22.450 --> 00:25:23.710
And now you can
switch back and forth

00:25:23.710 --> 00:25:25.626
between the original
application and the thing

00:25:25.626 --> 00:25:26.690
you're sharing to.

00:25:26.690 --> 00:25:29.927
And we can do this
because we made this break

00:25:29.927 --> 00:25:31.760
between the application
being this black box

00:25:31.760 --> 00:25:34.270
and the something that the
platform coordinates with more.

00:25:34.270 --> 00:25:36.960
So, if that's the
kind of complexity

00:25:36.960 --> 00:25:38.740
you're talking about,
I think that, yes,

00:25:38.740 --> 00:25:40.340
there is a learning curve on it.

00:25:40.340 --> 00:25:43.040
It's a little more complex, but
I think it actually gives us

00:25:43.040 --> 00:25:44.332
a lot of benefit going forward.

00:25:44.332 --> 00:25:46.623
DAVE BURKE: I don't know if
you guys just noticed that.

00:25:46.623 --> 00:25:49.710
I see this about every month
where Dianne goes, yeah,

00:25:49.710 --> 00:25:51.450
we designed this
thing four years ago

00:25:51.450 --> 00:25:52.920
because we knew
that tomorrow we're

00:25:52.920 --> 00:25:54.350
going to want to work this way.

00:25:54.350 --> 00:25:55.980
So she's this always happens.

00:25:55.980 --> 00:25:58.540
Great.

00:25:58.540 --> 00:25:59.770
RETO MEIER: Thanks, Dianne.

00:25:59.770 --> 00:26:01.250
From the front of the room.

00:26:01.250 --> 00:26:03.799
AUDIENCE: So I was wondering
if you guys, at any point,

00:26:03.799 --> 00:26:05.590
consider the support,
the official support,

00:26:05.590 --> 00:26:07.269
of the Scala
programming language.

00:26:07.269 --> 00:26:08.810
I'm asking this
question, especially,

00:26:08.810 --> 00:26:11.100
I know that we also
that Apple already

00:26:11.100 --> 00:26:13.840
has Swift after
four years of work.

00:26:13.840 --> 00:26:17.770
And I think that Swift does
all those things for us

00:26:17.770 --> 00:26:20.370
as developers that
we can't do in Java.

00:26:20.370 --> 00:26:23.220
And with the Android SDK.

00:26:23.220 --> 00:26:25.810
So my question was, have
you ever thought about it,

00:26:25.810 --> 00:26:27.220
before the release of Swift?

00:26:27.220 --> 00:26:29.370
Have you thought
about it after that?

00:26:29.370 --> 00:26:30.950
And is there any plan?

00:26:30.950 --> 00:26:34.670
DAVE BURKE: Well,
so I like Cocoa,

00:26:34.670 --> 00:26:38.470
but Objective-C is based
on C which is 40 years old.

00:26:38.470 --> 00:26:40.760
So I think Apple sort of
had to update it a bit.

00:26:43.950 --> 00:26:44.807
I don't know.

00:26:44.807 --> 00:26:45.640
Scala, I don't know.

00:26:45.640 --> 00:26:49.171
Anyone want to take that?

00:26:49.171 --> 00:26:50.004
DIANNE HACKBORN: No.

00:26:50.004 --> 00:26:56.420
[LAUGHTER[

00:26:56.420 --> 00:27:01.279
Seriously, Java is the
programming language

00:27:01.279 --> 00:27:02.820
for Android, you
know, I don't really

00:27:02.820 --> 00:27:06.760
think there's a lot benefit to--
The entire framework is built

00:27:06.760 --> 00:27:08.870
around the Java
programming language.

00:27:08.870 --> 00:27:12.950
And I don't think there's
much benefit for us

00:27:12.950 --> 00:27:18.060
to try to support another
whole other different language.

00:27:18.060 --> 00:27:21.330
AUDIENCE: What about Swift?

00:27:21.330 --> 00:27:23.030
DIANNE HACKBORN:
I'll think about it.

00:27:23.030 --> 00:27:24.738
DAVE BURKE: It's not
optional semicolons.

00:27:26.644 --> 00:27:28.060
DIANNE HACKBORN:
You have the NDK.

00:27:28.060 --> 00:27:29.851
So if you want to throw
something in there.

00:27:29.851 --> 00:27:32.680
But the NDK, it doesn't have
access to the framework.

00:27:32.680 --> 00:27:33.180
Right?

00:27:33.180 --> 00:27:35.025
And that's kind of
the challenge is

00:27:35.025 --> 00:27:36.650
if you want to do a
different language,

00:27:36.650 --> 00:27:38.960
if you want to have it as
a first class language,

00:27:38.960 --> 00:27:41.620
equivalent to the
current framework,

00:27:41.620 --> 00:27:43.787
you've got to have either
a whole new framework

00:27:43.787 --> 00:27:45.370
or some bindings to
it, which is going

00:27:45.370 --> 00:27:46.786
to make it a really
bad experience

00:27:46.786 --> 00:27:49.027
because it's going to be
Java in this other language.

00:27:49.027 --> 00:27:50.610
AUDIENCE: I'm in a
country that always

00:27:50.610 --> 00:27:53.810
to work with Scala because Scala
is compared to the JVM, right?

00:27:53.810 --> 00:27:55.580
So it cannot run on Android.

00:27:55.580 --> 00:27:58.210
So there can't be ways to
do that, to work with Scala,

00:27:58.210 --> 00:28:01.350
but it's using
third-parties libraries.

00:28:01.350 --> 00:28:05.990
So you have classes that were
made by people to word the Java

00:28:05.990 --> 00:28:10.350
classes but then it becomes
tricky to integrate that

00:28:10.350 --> 00:28:13.270
cleanly with that Android Studio
that the [INAUDIBLE] quickly.

00:28:13.270 --> 00:28:16.740
So I'm not sure it's as
complicated as creating

00:28:16.740 --> 00:28:21.970
a whole new language like Apple
did, but I think, I don't know,

00:28:21.970 --> 00:28:25.710
my question was just if you
guys were considering and uh--

00:28:25.710 --> 00:28:28.750
XAVIER DUCROHET: I think from
the tool perspective, probably

00:28:28.750 --> 00:28:30.587
later this year,
or early next year,

00:28:30.587 --> 00:28:32.420
there are some changes
going on inside Grata

00:28:32.420 --> 00:28:34.700
right now that will make
things easier to you

00:28:34.700 --> 00:28:38.190
to just have a module that's
originally written in Scala

00:28:38.190 --> 00:28:39.770
and then complied
down to byte code

00:28:39.770 --> 00:28:41.970
and then we can just
text that and package

00:28:41.970 --> 00:28:43.180
that with your application.

00:28:43.180 --> 00:28:45.960
But it's not going to help you
access like the activity API

00:28:45.960 --> 00:28:46.850
through Scala code.

00:28:46.850 --> 00:28:47.349
Right?

00:28:47.349 --> 00:28:49.967
It would be if you have some
code that your Business Logic

00:28:49.967 --> 00:28:52.300
or whatever that you want to
write in Scala because it's

00:28:52.300 --> 00:28:54.820
easier for you, you
should be able to do that.

00:28:54.820 --> 00:28:56.840
Because, as you said,
it's compatible in just

00:28:56.840 --> 00:28:59.580
regular byte code and
then just texting it.

00:28:59.580 --> 00:29:01.180
But that's very
different from saying

00:29:01.180 --> 00:29:02.890
you can could code
Android in Java

00:29:02.890 --> 00:29:06.227
where you have access to
all the framework API.

00:29:06.227 --> 00:29:07.060
AUDIENCE: Thank you.

00:29:07.060 --> 00:29:09.009
RETO MEIER: Thanks From
the back of the room.

00:29:09.009 --> 00:29:09.550
AUDIENCE: Hi.

00:29:09.550 --> 00:29:10.450
Yeah.

00:29:10.450 --> 00:29:12.730
I was wondering some
of the newer features

00:29:12.730 --> 00:29:15.480
in Android L, for example, like
the notifications on the home

00:29:15.480 --> 00:29:15.980
screen.

00:29:15.980 --> 00:29:19.030
How much control will
the user have over that?

00:29:19.030 --> 00:29:22.125
And I mean, I went to the What's
New In Android session earlier

00:29:22.125 --> 00:29:24.470
and they talked about
how, as the app developer

00:29:24.470 --> 00:29:27.517
I will have the option of
setting privacy levels.

00:29:27.517 --> 00:29:29.100
But let's imagine
for a second, that I

00:29:29.100 --> 00:29:32.080
don't think that a third
party developer knows

00:29:32.080 --> 00:29:34.880
what I think is appropriate for
displaying on my home screen.

00:29:34.880 --> 00:29:38.210
Will I be able to, say,
turn those off entirely?

00:29:38.210 --> 00:29:40.941
GABE COHEN: Yes.

00:29:40.941 --> 00:29:42.440
AUDIENCE: Oh, and
just my two cents,

00:29:42.440 --> 00:29:46.100
I think the new app ops of
the Play Store permissions

00:29:46.100 --> 00:29:48.487
are kind of confusing,
actually, and they kind of

00:29:48.487 --> 00:29:50.320
obfuscate a lot of
things that I don't think

00:29:50.320 --> 00:29:51.195
should be obfuscated.

00:29:51.195 --> 00:29:55.195
[APPLAUSE]

00:29:55.195 --> 00:29:57.320
RETO MEIER: Thank you for
that feedback and to Chet

00:29:57.320 --> 00:29:59.570
for not explaining the
notification things well enough

00:29:59.570 --> 00:30:02.110
in the earlier session.

00:30:02.110 --> 00:30:03.860
Front of the room.

00:30:03.860 --> 00:30:05.510
AUDIENCE: Hey.

00:30:05.510 --> 00:30:11.450
So Kit Kat did an exceptional
job of making Android svelte,

00:30:11.450 --> 00:30:14.150
I guess.

00:30:14.150 --> 00:30:20.290
And with L's new focus on lush
animation and 3-D rendered

00:30:20.290 --> 00:30:22.090
shadows and everything
that's beautiful,

00:30:22.090 --> 00:30:25.850
I was wondering how
like emerging market

00:30:25.850 --> 00:30:30.450
devices and older devices
will fare with it?

00:30:30.450 --> 00:30:31.460
Yeah.

00:30:31.460 --> 00:30:32.750
ADAM POWELL: So when
some of the engineers who

00:30:32.750 --> 00:30:34.583
are working on some of
the flashier features

00:30:34.583 --> 00:30:37.097
that you've been seeing
in here first started,

00:30:37.097 --> 00:30:39.430
this was something that we
thought was really important.

00:30:39.430 --> 00:30:41.680
We didn't want to make a
move like this in KitKat,

00:30:41.680 --> 00:30:44.120
only to just kind of toss
it out as soon as we found

00:30:44.120 --> 00:30:46.160
some new, flashy effects
we wanted to implement.

00:30:46.160 --> 00:30:50.050
So they'd actually found
the absolute oldest devices

00:30:50.050 --> 00:30:51.560
they could, sitting
around in a desk

00:30:51.560 --> 00:30:53.250
that we still had drivers for.

00:30:53.250 --> 00:30:55.870
And they actually
started on those devices

00:30:55.870 --> 00:30:57.420
to implement these effects.

00:30:57.420 --> 00:31:00.190
So this is the sort of thing
where performance on low end

00:31:00.190 --> 00:31:03.300
devices is something
that was really

00:31:03.300 --> 00:31:06.090
intrinsic to the initial
design of the implementation.

00:31:06.090 --> 00:31:08.830
So there's definitely a few
cases, a bunch of you're

00:31:08.830 --> 00:31:11.660
going to get the L preview
and go run some of it.

00:31:11.660 --> 00:31:14.179
You'll probably run into some
cases where you say, oh, wait,

00:31:14.179 --> 00:31:15.970
this is a little bit
slower than I thought.

00:31:15.970 --> 00:31:17.170
We know about them already.

00:31:17.170 --> 00:31:18.830
We're working on them.

00:31:18.830 --> 00:31:20.380
Many of them
actually have already

00:31:20.380 --> 00:31:23.960
been addressed internally as
we've continued along this.

00:31:23.960 --> 00:31:26.620
So performance is something that
we think is really important.

00:31:26.620 --> 00:31:30.010
We can't really accomplish
the goal of material design

00:31:30.010 --> 00:31:32.300
if everything is just
janking across the screen

00:31:32.300 --> 00:31:33.002
the whole time.

00:31:33.002 --> 00:31:33.710
DAVE BURKE: Yeah.

00:31:33.710 --> 00:31:36.010
I'd just add that
we still literally

00:31:36.010 --> 00:31:38.239
have a weekly meeting
on Svelte, so kind

00:31:38.239 --> 00:31:39.280
of monitoring the memory.

00:31:39.280 --> 00:31:41.360
We don't want to go backward.

00:31:41.360 --> 00:31:43.860
And then Art, the
runtime is actually

00:31:43.860 --> 00:31:45.927
more memory efficient
than Dalvik.

00:31:45.927 --> 00:31:48.010
Well we have different
types of garbage collectors

00:31:48.010 --> 00:31:49.660
but there's a moving
collector that's

00:31:49.660 --> 00:31:51.520
used when your app
goes in the background.

00:31:51.520 --> 00:31:52.125
It's slower.

00:31:52.125 --> 00:31:54.000
So you don't want to do
it in the foreground.

00:31:54.000 --> 00:31:57.392
But it will save like
hundreds of kilobytes easily.

00:31:57.392 --> 00:31:58.350
So it's helping us too.

00:32:01.990 --> 00:32:03.660
AUDIENCE: Thank you.

00:32:03.660 --> 00:32:04.590
Related question.

00:32:04.590 --> 00:32:06.960
We had a project
about a Svelte folder.

00:32:06.960 --> 00:32:09.979
What comes first,
the name or the idea?

00:32:09.979 --> 00:32:10.770
DAVE BURKE: Genuis.

00:32:15.260 --> 00:32:16.984
The idea.

00:32:16.984 --> 00:32:18.900
ADAM POWELL: There was
that one where you just

00:32:18.900 --> 00:32:22.055
had to come up with a
project for the name though.

00:32:22.055 --> 00:32:23.741
DAVE BURKE: Project Project.

00:32:23.741 --> 00:32:25.900
[LAUGHTER]

00:32:25.900 --> 00:32:27.500
RETO MEIER: From the
back of the room.

00:32:27.500 --> 00:32:31.370
AUDIENCE: I have a question
about Google Play services.

00:32:31.370 --> 00:32:36.180
We want to use services like
Google Analytics, Drive, AdMob,

00:32:36.180 --> 00:32:38.350
across all Android
devices including

00:32:38.350 --> 00:32:40.200
those without Google Play.

00:32:40.200 --> 00:32:42.870
These services used
to be individual jars.

00:32:42.870 --> 00:32:45.510
But now are part of
Google Play services.

00:32:45.510 --> 00:32:48.465
How do you propose we use these
services across all Android

00:32:48.465 --> 00:32:48.965
devices?

00:32:48.965 --> 00:32:55.797
[APPLAUSE]

00:32:55.797 --> 00:32:58.130
GABE COHEN: Did you ask this
question in the Google Play

00:32:58.130 --> 00:32:59.124
Services rocks?

00:32:59.124 --> 00:33:00.790
AUDIENCE: I didn't
but someone else did.

00:33:00.790 --> 00:33:00.980
GABE COHEN: Someone else did.

00:33:00.980 --> 00:33:01.640
OK.

00:33:01.640 --> 00:33:03.140
I heard the same question.

00:33:03.140 --> 00:33:05.260
I'm afraid I don't have
much to add to the answer.

00:33:05.260 --> 00:33:10.040
So all of us here work in the
compatible device ecosystem

00:33:10.040 --> 00:33:11.150
devices with Google Play.

00:33:11.150 --> 00:33:14.280
So our primary concern
is how this platform

00:33:14.280 --> 00:33:16.040
is expressed on those devices.

00:33:16.040 --> 00:33:18.570
We actually don't
really have any opinion

00:33:18.570 --> 00:33:21.100
on what other
organizations in Google

00:33:21.100 --> 00:33:24.930
do with devices outside
of our ecosystem.

00:33:24.930 --> 00:33:27.990
So it's kind of a question,
I think, for somebody

00:33:27.990 --> 00:33:30.600
from the analytics
and the AdMob team.

00:33:30.600 --> 00:33:32.230
I don't think I can answer that.

00:33:32.230 --> 00:33:32.730
Sorry.

00:33:35.360 --> 00:33:37.092
RETO MEIER: From the
front of the room.

00:33:37.092 --> 00:33:37.633
AUDIENCE: Hi.

00:33:37.633 --> 00:33:40.280
Ever since Cupcake, or
versions before that.

00:33:40.280 --> 00:33:42.170
I'm not that old anyway.

00:33:42.170 --> 00:33:44.430
I've been using
BroadcastReceiver

00:33:44.430 --> 00:33:47.130
to do fun things with
getting SMS messages.

00:33:47.130 --> 00:33:51.060
But these days everyone uses
Hangouts, which is awesome.

00:33:51.060 --> 00:33:52.790
But should I just
give up on trying

00:33:52.790 --> 00:33:56.670
to have an application interact
with Hangout's messages

00:33:56.670 --> 00:33:58.950
or-- Could someone
comment on what

00:33:58.950 --> 00:34:01.034
I should do in that regard?

00:34:01.034 --> 00:34:02.450
DIANNE HACKBORN:
I think if you're

00:34:02.450 --> 00:34:06.310
talking about what happened in
KitKat with the change in how

00:34:06.310 --> 00:34:08.630
the messaging is, so you
have a preferred messaging

00:34:08.630 --> 00:34:09.323
application?

00:34:09.323 --> 00:34:10.239
AUDIENCE: Not so much.

00:34:10.239 --> 00:34:11.810
More on just a sense
of like the fact

00:34:11.810 --> 00:34:15.320
that Hangout's messages don't
trigger an SMS broadcast out

00:34:15.320 --> 00:34:18.580
to other applications.

00:34:18.580 --> 00:34:21.960
DIANNE HACKBORN: People
are not using SMS.

00:34:21.960 --> 00:34:23.710
Yeah if they're
not using SMS then

00:34:23.710 --> 00:34:25.969
the platform won't
know about it and--

00:34:25.969 --> 00:34:28.489
AUDIENCE: OK With
Hangout, people,

00:34:28.489 --> 00:34:32.380
apps can't respond to
messages as they come in

00:34:32.380 --> 00:34:33.384
through the API?

00:34:33.384 --> 00:34:35.050
RETO MEIER: I think
that's unfortunately

00:34:35.050 --> 00:34:37.690
more of a question for
someone on the Hangout team

00:34:37.690 --> 00:34:40.760
rather than Android
framework team.

00:34:40.760 --> 00:34:41.670
So,

00:34:41.670 --> 00:34:42.370
ADAM POWELL: From
the perspective

00:34:42.370 --> 00:34:43.940
of the framework though,
this is the sort of thing

00:34:43.940 --> 00:34:46.130
where, if an application
was implementing

00:34:46.130 --> 00:34:49.139
messaging that moves
over its own protocols

00:34:49.139 --> 00:34:51.239
over the internet,
then that application

00:34:51.239 --> 00:34:53.969
would be totally free to publish
their own broadcast if they so

00:34:53.969 --> 00:34:55.249
chose.

00:34:55.249 --> 00:34:55.790
AUDIENCE: OK.

00:34:55.790 --> 00:34:56.777
Thanks.

00:34:56.777 --> 00:34:58.360
RETO MEIER: From the
back of the room.

00:34:58.360 --> 00:34:58.901
AUDIENCE: Hi.

00:34:58.901 --> 00:35:01.560
So I wanted to ask you
guys, what's the status,

00:35:01.560 --> 00:35:05.980
and if you do, for the Wi-Fi
peer to peer tools for Android?

00:35:05.980 --> 00:35:08.850
Because as a developer
that has worked with them,

00:35:08.850 --> 00:35:12.100
I know that the technology has
a great potential but right now

00:35:12.100 --> 00:35:15.120
these tools seem very
incomplete and very buggy.

00:35:15.120 --> 00:35:18.660
So I wanted to know if there are
plans to replicate or continue

00:35:18.660 --> 00:35:22.247
developing whatever.

00:35:22.247 --> 00:35:24.455
DAVE BURKE: Oh, Yeah they
are a little bit but buggy.

00:35:24.455 --> 00:35:25.180
I agree.

00:35:25.180 --> 00:35:27.076
We're actually scaling
that team so we've

00:35:27.076 --> 00:35:28.200
been hiring lots of people.

00:35:28.200 --> 00:35:29.240
Wireless in general.

00:35:29.240 --> 00:35:31.450
Actually so like trying
to really invest a lot

00:35:31.450 --> 00:35:34.950
more in Bluetooth and Wi-Fi
and cellular and Volke

00:35:34.950 --> 00:35:37.430
and all of stuff.

00:35:37.430 --> 00:35:40.290
So no plan to duplicate
peer to peer Wi-Fi.

00:35:40.290 --> 00:35:43.712
There's some new
Wi-Fi features coming.

00:35:43.712 --> 00:35:46.170
I mean you can see some of the
standards in Wi-Fi Alliance,

00:35:46.170 --> 00:35:48.075
like Network Neighborhood,
things like that.

00:35:48.075 --> 00:35:52.670
I'm trying to think what else
we're doing in that space.

00:35:52.670 --> 00:35:54.980
We're actually doing a lot
of refactoring internally

00:35:54.980 --> 00:35:55.500
on Wi-Fi.

00:35:55.500 --> 00:35:58.980
So previously in
releases to Supplicant,

00:35:58.980 --> 00:36:00.757
the WPA Supplicant had
a lot of the logic.

00:36:00.757 --> 00:36:02.340
We've actually sort
of taken the logic

00:36:02.340 --> 00:36:04.380
and moved it up and rewritten
the parts of the Wi-Fi state

00:36:04.380 --> 00:36:06.370
machine and then we've
introduced a new Wi-Fi

00:36:06.370 --> 00:36:09.650
How to abstract
out Wi-Fi features.

00:36:09.650 --> 00:36:12.459
Like, for example, Devices
Scan for Locations.

00:36:12.459 --> 00:36:14.750
Today they scan all the
channels now with the new Wi-Fi

00:36:14.750 --> 00:36:15.959
How, we can selectively scan.

00:36:15.959 --> 00:36:17.708
Anyway, the point I'm
making is that we're

00:36:17.708 --> 00:36:20.190
investing in that area and so
we're trying to improve it.

00:36:20.190 --> 00:36:20.819
AUDIENCE: OK.

00:36:20.819 --> 00:36:21.860
RETO MEIER: Thanks, Dave.

00:36:21.860 --> 00:36:23.230
A question here from online.

00:36:23.230 --> 00:36:24.674
Which is the most
important thing

00:36:24.674 --> 00:36:26.590
to focus on when you're
first creating an app.

00:36:26.590 --> 00:36:28.620
Should it be the
engineering or the design?

00:36:32.159 --> 00:36:34.450
JHILMIL JAIN: You're thinking
about this the wrong way.

00:36:34.450 --> 00:36:36.983
You should really be
focusing on the user.

00:36:36.983 --> 00:36:37.691
RETO MEIER: Nice.

00:36:37.691 --> 00:36:40.835
I see what you did there.

00:36:40.835 --> 00:36:41.835
DAVE BURKE: User design.

00:36:45.060 --> 00:36:47.074
JHILMIL JAIN: Sure.

00:36:47.074 --> 00:36:47.990
RETO MEIER: Moving on.

00:36:47.990 --> 00:36:49.406
Someone from the
back of the room.

00:36:49.406 --> 00:36:52.120
JHILMIL JAIN: I think like
even for a number of products

00:36:52.120 --> 00:36:54.960
that we talked about today,
where automotive, TV,

00:36:54.960 --> 00:36:57.820
it didn't really start just
with the design or whatever.

00:36:57.820 --> 00:37:00.390
Coding really started
with really looking

00:37:00.390 --> 00:37:03.030
at some fundamental issues
that are currently the wrong,

00:37:03.030 --> 00:37:05.580
our products are not meeting
when users are concerned

00:37:05.580 --> 00:37:07.830
and really trying to be
really clever about how can we

00:37:07.830 --> 00:37:11.480
build a product that really
solves those issues for users.

00:37:17.139 --> 00:37:19.680
AUDIENCE: Thank you so much for
thinking so much about design

00:37:19.680 --> 00:37:21.340
with the new release.

00:37:21.340 --> 00:37:23.424
It's very exciting.

00:37:23.424 --> 00:37:25.590
I think that I probably
speak for a number of people

00:37:25.590 --> 00:37:27.990
though when we go and
talk to our design teams

00:37:27.990 --> 00:37:34.320
about the new looks and the
new ways of doing things.

00:37:34.320 --> 00:37:36.780
They will pull out a
Galaxy S4 and they'll

00:37:36.780 --> 00:37:40.010
show us the text messaging
app and they'll say,

00:37:40.010 --> 00:37:42.940
you think Android has a
consistent design language.

00:37:42.940 --> 00:37:45.190
And yet this is my
text messaging app.

00:37:45.190 --> 00:37:48.950
We're going to design it the
way we want to design it.

00:37:48.950 --> 00:37:51.490
What steps are you
taking or thinking

00:37:51.490 --> 00:37:57.390
of taking to address the kind
of crazy design ecosystem that

00:37:57.390 --> 00:37:59.530
exists in the Android world?

00:37:59.530 --> 00:38:05.680
[APPLAUSE]

00:38:05.680 --> 00:38:08.390
RACHEL GARB: One step that we
can take that will help this,

00:38:08.390 --> 00:38:13.090
I think, is to do a better
job with our own applications.

00:38:13.090 --> 00:38:15.675
Following our own
design guidelines.

00:38:15.675 --> 00:38:19.430
[APPLAUSE]

00:38:19.430 --> 00:38:21.902
That's something that we've
been working on for a while.

00:38:21.902 --> 00:38:23.110
You know we're a big company.

00:38:23.110 --> 00:38:25.514
We've got close to
100 teams that we're

00:38:25.514 --> 00:38:27.180
working with that are
developing Android

00:38:27.180 --> 00:38:28.652
apps all across the company.

00:38:28.652 --> 00:38:30.610
And they're all on
different release schedules.

00:38:30.610 --> 00:38:31.860
So it's a bit of a challenge.

00:38:31.860 --> 00:38:35.520
Plus as you can see, we're also
evolving our design guidelines

00:38:35.520 --> 00:38:36.020
too.

00:38:36.020 --> 00:38:38.607
And that happens
usually internally first

00:38:38.607 --> 00:38:39.440
and then externally.

00:38:39.440 --> 00:38:42.330
But one of things about that
strategy of starting internally

00:38:42.330 --> 00:38:45.770
is it means that by the time
the guidelines are rolled out

00:38:45.770 --> 00:38:47.670
you have some concrete
examples to work with,

00:38:47.670 --> 00:38:50.964
which we know is
really important.

00:38:50.964 --> 00:38:51.880
RETO MEIER: Thank you.

00:38:51.880 --> 00:38:53.884
In the front.

00:38:53.884 --> 00:38:56.050
AUDIENCE: First thank you
all for all your hard work

00:38:56.050 --> 00:38:57.790
building a platform
that so many of us

00:38:57.790 --> 00:39:00.500
can create a career around.

00:39:00.500 --> 00:39:04.100
My question is as a developer,
I personally experience

00:39:04.100 --> 00:39:06.170
a lot of pain points
and hear about a lot

00:39:06.170 --> 00:39:08.740
of pain around testing,
particularly unit testing

00:39:08.740 --> 00:39:09.620
in Android.

00:39:09.620 --> 00:39:11.510
I feel like solutions
like Robilectric

00:39:11.510 --> 00:39:15.554
feel more like a bandaid
than a proper solution

00:39:15.554 --> 00:39:16.220
for the problem.

00:39:16.220 --> 00:39:18.900
Can you speak to maybe
anything in the L preview

00:39:18.900 --> 00:39:22.290
or just a general idea around
testing, particularly unit

00:39:22.290 --> 00:39:23.092
testing in Android.

00:39:23.092 --> 00:39:34.569
[APPLAUSE]

00:39:34.569 --> 00:39:36.110
XAVIER DUCROHET: So
first, we do want

00:39:36.110 --> 00:39:39.100
to help Robilectric
to integrate better

00:39:39.100 --> 00:39:40.430
with our current set of tools.

00:39:40.430 --> 00:39:41.960
We know it's
definitely a bandaid,

00:39:41.960 --> 00:39:44.120
that it's not a
perfect solution.

00:39:44.120 --> 00:39:46.700
But like a lot of teams
currently rely on it,

00:39:46.700 --> 00:39:49.290
so we want to improve the
solutions there so for people

00:39:49.290 --> 00:39:51.320
who want to use it, they
can actually use it.

00:39:54.090 --> 00:39:58.010
For the rest, anything that
doesn't run on an Android

00:39:58.010 --> 00:40:01.740
device is going to be a bandaid.

00:40:01.740 --> 00:40:05.687
I mean, if you have some code
that's purely non-Android

00:40:05.687 --> 00:40:07.270
and can run on the
VM, then you should

00:40:07.270 --> 00:40:10.260
be able to create a Java module
and test your logic there.

00:40:10.260 --> 00:40:12.010
For the thing that
access the Android API,

00:40:12.010 --> 00:40:13.820
you should run it on a device.

00:40:13.820 --> 00:40:16.530
Now the problem is that
it is slow to deploy

00:40:16.530 --> 00:40:18.090
It is slow to build.

00:40:18.090 --> 00:40:20.650
And to run the test.

00:40:20.650 --> 00:40:24.270
On the build and deploy, on
the build, at least part,

00:40:24.270 --> 00:40:26.030
we are trying to
improve the situation

00:40:26.030 --> 00:40:27.850
to build faster with
greater [INAUDIBLE].

00:40:27.850 --> 00:40:30.090
There's some work
going on in there.

00:40:30.090 --> 00:40:34.480
That will get better some time.

00:40:34.480 --> 00:40:36.531
The deploy part is
more complicated.

00:40:36.531 --> 00:40:38.280
And it's something
that we want to tackle,

00:40:38.280 --> 00:40:40.890
but it's like we need
to work with the runtime

00:40:40.890 --> 00:40:42.790
to be able to do that.

00:40:42.790 --> 00:40:46.130
So it does nothing in L
that would help with that.

00:40:46.130 --> 00:40:49.650
But in your existing Android
API, there is no other way.

00:40:49.650 --> 00:40:52.750
You need to run on a device to
make sure that it is actually

00:40:52.750 --> 00:40:55.340
reliable, as far as
the test results.

00:40:57.564 --> 00:40:58.480
RETO MEIER: Thank you.

00:40:58.480 --> 00:41:01.690
From the back of the room.

00:41:01.690 --> 00:41:03.360
AUDIENCE: Like
many apps displays,

00:41:03.360 --> 00:41:07.180
text and images for which we
employ text views, and image

00:41:07.180 --> 00:41:11.870
views, and layouts, we were not
aware of a general purpose way

00:41:11.870 --> 00:41:14.280
to wrap text around images.

00:41:14.280 --> 00:41:17.150
And we're not satisfied
with third party libraries

00:41:17.150 --> 00:41:18.910
that we researched at the time.

00:41:18.910 --> 00:41:22.590
So about a year ago, we
developed our own overriding

00:41:22.590 --> 00:41:23.820
canvas.

00:41:23.820 --> 00:41:25.310
It was complicated.

00:41:25.310 --> 00:41:27.860
It was difficult to test.

00:41:27.860 --> 00:41:29.740
And lately we're
revisiting the code

00:41:29.740 --> 00:41:33.830
and wishing that our app didn't
have to do all this work.

00:41:33.830 --> 00:41:38.280
Is the Android team
looking at this problem?

00:41:38.280 --> 00:41:40.750
ADAM POWELL: So the
short answer is yes.

00:41:40.750 --> 00:41:42.910
I think that it's something
that we've definitely

00:41:42.910 --> 00:41:45.270
seen as a pain point in
a number of apps that

00:41:45.270 --> 00:41:47.970
have come to us asking questions
about how to do exactly

00:41:47.970 --> 00:41:50.706
the sorts of things
that you've described.

00:41:50.706 --> 00:41:53.080
And for all the reasons that
I'm sure that you've already

00:41:53.080 --> 00:41:55.650
run into you've
realized that it's

00:41:55.650 --> 00:41:57.580
a fairly complicated
problem space.

00:41:57.580 --> 00:42:00.340
Now a lot of that just
comes from the way

00:42:00.340 --> 00:42:04.020
that text views interaction
with canvas and the way

00:42:04.020 --> 00:42:06.830
that it deals with text and
fonts and so on and so forth

00:42:06.830 --> 00:42:10.180
is complicated,
to say the least.

00:42:10.180 --> 00:42:12.170
But it's also very
tightly coupled right now.

00:42:12.170 --> 00:42:14.792
And in the future we'd
really like to work on that

00:42:14.792 --> 00:42:17.250
and see if there's anything
that we can do to sort of tease

00:42:17.250 --> 00:42:19.666
that apart into some modules
that can be used a little bit

00:42:19.666 --> 00:42:22.390
more naturally to accomplish
the types of things

00:42:22.390 --> 00:42:23.840
you're talking about.

00:42:23.840 --> 00:42:26.120
AUDIENCE: Thanks.

00:42:26.120 --> 00:42:27.620
RETO MEIER: One of
questions online.

00:42:27.620 --> 00:42:32.690
It's colorfully asked, so I'll
try to rephrase it slightly.

00:42:32.690 --> 00:42:36.760
Dan is wondering, do
you see a possibility

00:42:36.760 --> 00:42:40.550
of having the ability to do a
full build and test environment

00:42:40.550 --> 00:42:42.145
within the Chrome OS 400?

00:42:42.145 --> 00:42:49.794
[APPLAUSE]

00:42:49.794 --> 00:42:50.960
DAVE BURKE: So I don't know.

00:42:50.960 --> 00:42:55.540
I think that means an
ID within Chromo S.

00:42:55.540 --> 00:42:57.500
FICUS KIRKPATRICK:
The ethos of Chrome OS

00:42:57.500 --> 00:42:59.420
is that the ID would
be like in the cloud

00:42:59.420 --> 00:43:03.420
somewhere, right I don't
know if there's anything that

00:43:03.420 --> 00:43:05.574
makes sense to say we've
made an ID for Chrome OS

00:43:05.574 --> 00:43:07.240
that they couldn't
use from any browser.

00:43:13.176 --> 00:43:14.800
RETO MEIER: Question
to the cloud team.

00:43:14.800 --> 00:43:19.500
We saw a little stuff from them
on like IDEs for cloud apps.

00:43:19.500 --> 00:43:21.410
I don't see building
Android apps

00:43:21.410 --> 00:43:24.365
in the cloud happening soon.

00:43:24.365 --> 00:43:25.740
XAVIER DUCROHET:
I mean, you also

00:43:25.740 --> 00:43:29.070
have to look at deployment.

00:43:29.070 --> 00:43:31.090
I would guess that
a lot of developers

00:43:31.090 --> 00:43:32.860
right now mostly
use devices to test.

00:43:32.860 --> 00:43:36.650
If you're bringing in the cloud,
and your application is not

00:43:36.650 --> 00:43:38.170
a small, Hello
World, application

00:43:38.170 --> 00:43:39.628
you're going to
have to be download

00:43:39.628 --> 00:43:43.240
that APK on your local
device every time you build.

00:43:43.240 --> 00:43:44.980
And if your app
is 10 megs and you

00:43:44.980 --> 00:43:46.560
don't have a crazy
connection, that's

00:43:46.560 --> 00:43:49.320
just not going to work at all.

00:43:49.320 --> 00:43:51.270
So I don't see that happening.

00:43:51.270 --> 00:43:57.270
The current state of web ID
is just the beginning of it.

00:43:57.270 --> 00:44:01.460
If you compare that to a really
good Java ID like IntelliJ

00:44:01.460 --> 00:44:03.530
it just doesn't compare.

00:44:03.530 --> 00:44:07.934
So I think that test of IDs are
still the way to go for now.

00:44:07.934 --> 00:44:08.850
RETO MEIER: Thank you.

00:44:08.850 --> 00:44:09.350
Let's see.

00:44:09.350 --> 00:44:11.162
From the front.

00:44:11.162 --> 00:44:13.120
AUDIENCE: Like most of
the people in this room,

00:44:13.120 --> 00:44:16.310
I'm really excited to see
that there's an L preview

00:44:16.310 --> 00:44:19.430
release this time around.

00:44:19.430 --> 00:44:23.300
And by the fact that it's coming
out as factory images only,

00:44:23.300 --> 00:44:25.150
it's pretty clear
that it's only meant

00:44:25.150 --> 00:44:28.320
for developers and
extreme enthusiasts, who

00:44:28.320 --> 00:44:30.740
want to get a real jump on it.

00:44:30.740 --> 00:44:33.660
Is this a pattern
that we can expect

00:44:33.660 --> 00:44:36.040
to see in the future,
more preview releases?

00:44:36.040 --> 00:44:41.460
Because I've seen a lot of
complaints from more normal,

00:44:41.460 --> 00:44:44.920
average users who are
running into problems

00:44:44.920 --> 00:44:48.170
with the early versions
of each major release.

00:44:48.170 --> 00:44:50.220
DAVE BURKE: Yeah
I think it's funny

00:44:50.220 --> 00:44:53.290
that this idea everybody
claims to be their idea

00:44:53.290 --> 00:44:54.284
and pushed for it.

00:44:54.284 --> 00:44:56.450
So I'm going to claim was
my idea and pushed for it.

00:44:56.450 --> 00:44:57.824
But it wasn't as
everyone's idea.

00:44:57.824 --> 00:45:00.040
I think one of the
observations I had was just

00:45:00.040 --> 00:45:01.970
that the platforms,
it's getting so big.

00:45:01.970 --> 00:45:02.150
Right?

00:45:02.150 --> 00:45:03.566
That the surface
area is so large.

00:45:03.566 --> 00:45:05.300
We do, we've got
a great QA team.

00:45:05.300 --> 00:45:09.430
And we do, we test the top 1,000
apps and all this good stuff.

00:45:09.430 --> 00:45:11.999
Got a CTS tasks but this
is the long tale of apps.

00:45:11.999 --> 00:45:13.290
You just can't test everything.

00:45:13.290 --> 00:45:15.665
And so what ends up happening
is you would make a release

00:45:15.665 --> 00:45:16.790
and you break something.

00:45:16.790 --> 00:45:20.080
And it's just, I remember
triaging the bugs post

00:45:20.080 --> 00:45:21.420
JBMR2 for KitKat.

00:45:21.420 --> 00:45:22.770
And it was just embarrassing.

00:45:22.770 --> 00:45:25.190
It was like, you
should've caught this.

00:45:25.190 --> 00:45:28.169
It was clear to me that we had
to move to this model, where

00:45:28.169 --> 00:45:30.460
we put out the developer
preview, where people can test

00:45:30.460 --> 00:45:32.980
their apps, submit bugs,
and when we fix things.

00:45:32.980 --> 00:45:35.640
So, I think, obviously
I can't make promises

00:45:35.640 --> 00:45:38.510
but I think the
reason we've done

00:45:38.510 --> 00:45:42.380
it is a very rational reason,
and entropy, increases

00:45:42.380 --> 00:45:43.080
not decreases.

00:45:43.080 --> 00:45:46.920
So I think we shall continue
doing it most likely, possibly

00:45:46.920 --> 00:45:47.950
not promising, but yes.

00:45:47.950 --> 00:45:50.640
[LAUGHTER]

00:45:50.640 --> 00:45:54.250
AUDIENCE: And to that I
say, thank you so much.

00:45:54.250 --> 00:45:55.112
Thank you.

00:45:55.112 --> 00:45:56.570
RETO MEIER: What
do you guys think?

00:45:56.570 --> 00:45:58.236
Do you like having
the preview releases?

00:46:02.245 --> 00:46:04.120
DAVE BURKE: And the
other thing I hope to see

00:46:04.120 --> 00:46:08.780
is actually to get OEM as
a jump in building devices.

00:46:08.780 --> 00:46:10.530
Because once we make
the preview available

00:46:10.530 --> 00:46:11.630
we don't have to
be so secretive.

00:46:11.630 --> 00:46:12.630
We can share our builds.

00:46:12.630 --> 00:46:13.906
We can share more source.

00:46:13.906 --> 00:46:15.280
We can look at
vendors and stuff.

00:46:15.280 --> 00:46:17.900
So my hope is that when L comes
out officially in the fall,

00:46:17.900 --> 00:46:21.210
that a bunch of
devices pass follow.

00:46:21.210 --> 00:46:23.207
So we'll see how that
pounds out this year.

00:46:23.207 --> 00:46:25.040
XAVIER DUCROHET: I just
to point out quickly

00:46:25.040 --> 00:46:26.780
that there will be
a [INAUDIBLE] system

00:46:26.780 --> 00:46:28.720
images of available as well.

00:46:28.720 --> 00:46:31.150
So if you can use
that if needed.

00:46:33.287 --> 00:46:34.870
RETO MEIER: From the
back of the room.

00:46:34.870 --> 00:46:36.550
AUDIENCE: Hi.

00:46:36.550 --> 00:46:38.967
I really like the new
Grata Build System.

00:46:38.967 --> 00:46:39.800
It's really awesome.

00:46:39.800 --> 00:46:42.020
You can do really
awesome things with it.

00:46:42.020 --> 00:46:44.940
But I'm not really an
intelligent user nor will

00:46:44.940 --> 00:46:46.800
I see myself being
one in the future.

00:46:49.480 --> 00:46:53.050
Is Eclipse going to become the
redheaded stepchild of Android

00:46:53.050 --> 00:46:57.017
or is there going to be support
for it continuing forward?

00:46:57.017 --> 00:46:58.850
XAVIER DUCROHET: Did
you see the time, Reto?

00:46:58.850 --> 00:47:00.224
[LAUGHTER]

00:47:00.224 --> 00:47:01.390
RETO MEIER: Thanks everyone.

00:47:01.390 --> 00:47:03.885
We don't even have time to
open a Java form on Eclipse.

00:47:03.885 --> 00:47:09.345
[LAUGHTER AND GROANS]

00:47:09.345 --> 00:47:10.970
AUDIENCE: Yeah, but
you don't have time

00:47:10.970 --> 00:47:15.450
to build an Android app
in IntelliJ in this time.

00:47:15.450 --> 00:47:16.420
AUDIENCE: No, I get it.

00:47:16.420 --> 00:47:17.980
DAVE BURKE: Think it's tricky.

00:47:17.980 --> 00:47:19.850
An ideal world will
support all IDs.

00:47:19.850 --> 00:47:23.304
But we sort of have to
pick one to double down on.

00:47:23.304 --> 00:47:25.470
And I think we're starting
to pull down on IntelliJ.

00:47:25.470 --> 00:47:27.400
So.

00:47:27.400 --> 00:47:28.690
Yeah.

00:47:28.690 --> 00:47:30.065
XAVIER DUCROHET:
There's actually

00:47:30.065 --> 00:47:31.870
some work going on
with Grata on Eclipse

00:47:31.870 --> 00:47:35.840
to try to improve to
the integration there.

00:47:35.840 --> 00:47:38.212
I mean separate from Android.

00:47:38.212 --> 00:47:39.920
Also there's some work
happening in Grata

00:47:39.920 --> 00:47:41.910
itself to improve
their internal model

00:47:41.910 --> 00:47:44.050
so that's our
model can be closer

00:47:44.050 --> 00:47:46.870
or more compatible with theirs.

00:47:46.870 --> 00:47:49.770
And so if both of
those things happen,

00:47:49.770 --> 00:47:51.590
then you could
potentially at least,

00:47:51.590 --> 00:47:54.690
open and Android Grata
base project inside Eclipse

00:47:54.690 --> 00:47:57.070
and do at least
basic job editing

00:47:57.070 --> 00:47:58.730
with all of the
dependencies working

00:47:58.730 --> 00:48:00.116
and possibly just build out.

00:48:00.116 --> 00:48:03.130
You wouldn't have any Android
specific feature tied to Grata

00:48:03.130 --> 00:48:06.080
but it might actually work.

00:48:06.080 --> 00:48:09.950
But as they've said, it would
be nice to support every ID,

00:48:09.950 --> 00:48:12.480
but right now we're
focusing on Studio.

00:48:12.480 --> 00:48:14.330
AUDIENCE: Thank you
for everything you do.

00:48:14.330 --> 00:48:15.121
RETO MEIER: Thanks.

00:48:15.121 --> 00:48:16.440
We are completely out of time.

00:48:16.440 --> 00:48:19.310
So thank you, everyone
for your great questions.

00:48:19.310 --> 00:48:24.090
[APPLAUSE]

00:48:24.090 --> 00:48:26.900
And thank everyone on stage
for joining us and answering

00:48:26.900 --> 00:48:28.320
everything so open.

00:48:28.320 --> 00:48:30.300
So thank you.

