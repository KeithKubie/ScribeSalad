WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.380
SASCHA PRUETER: So, just for
people who queued up in a line,

00:00:05.380 --> 00:00:07.380
not knowing what session
this is, and have never

00:00:07.380 --> 00:00:10.990
heard about live channels
or Android TV at all, so,

00:00:10.990 --> 00:00:13.230
what is Android TV?

00:00:13.230 --> 00:00:17.250
It's basically a
global TV platform

00:00:17.250 --> 00:00:18.630
running on pure Android.

00:00:18.630 --> 00:00:20.700
Actually, let me clarify
that a little bit.

00:00:20.700 --> 00:00:22.810
It actually, it is just Android.

00:00:22.810 --> 00:00:24.330
We extended the
Android framework

00:00:24.330 --> 00:00:26.990
to support TV to be a
first class citizen.

00:00:26.990 --> 00:00:31.060
This is not a bolt-on on top
of Android, or some hacky stuff

00:00:31.060 --> 00:00:32.880
to make it work
on the big screen.

00:00:32.880 --> 00:00:36.330
The core Android framework team
extended Android to make TV

00:00:36.330 --> 00:00:37.450
a first class citizen.

00:00:37.450 --> 00:00:39.810
That's important, because
all the Android developer

00:00:39.810 --> 00:00:42.130
tools you know from
developing mobile apps,

00:00:42.130 --> 00:00:45.770
developing tablet apps, maybe
developing where apps, they all

00:00:45.770 --> 00:00:47.410
apply to Android TV as well.

00:00:47.410 --> 00:00:50.230
It's the same SDK, it's the
same development environment,

00:00:50.230 --> 00:00:51.300
it's all the same.

00:00:51.300 --> 00:00:53.750
It's just Android.

00:00:53.750 --> 00:00:57.540
And then, if you build
an app on Android TV,

00:00:57.540 --> 00:01:00.560
you will have it on smart TVs.

00:01:00.560 --> 00:01:02.480
You can see in our
sandbox, for example, there

00:01:02.480 --> 00:01:05.190
are Sony smart TVs with
Android TV built in,

00:01:05.190 --> 00:01:09.110
and we announced on Wednesday
a bunch of other partners.

00:01:09.110 --> 00:01:11.427
These apps run on
pay TV set-top boxes.

00:01:11.427 --> 00:01:13.260
We have a bunch of
partners internationally,

00:01:13.260 --> 00:01:16.260
pay TV operators,
cable, satellite,

00:01:16.260 --> 00:01:20.490
who run their set-top
box on Android TV.

00:01:20.490 --> 00:01:22.900
But also, streaming
boxes, gaming

00:01:22.900 --> 00:01:25.840
consoles, for example,
the NVIDIA Shield,

00:01:25.840 --> 00:01:29.230
very popular device--
you build your app once

00:01:29.230 --> 00:01:32.040
and it will run on
all of these devices.

00:01:34.800 --> 00:01:36.600
And what does it actually mean?

00:01:36.600 --> 00:01:39.910
Why should you even
interact with that?

00:01:39.910 --> 00:01:45.012
When we launched Android
TV one and 1/2 years ago,

00:01:45.012 --> 00:01:47.220
we introduced something
called the TV input framework

00:01:47.220 --> 00:01:49.120
as part of the Android SDK.

00:01:49.120 --> 00:01:52.750
And the TV Input
Framework, or short TIF,

00:01:52.750 --> 00:01:54.930
brings traditional
TV functionality

00:01:54.930 --> 00:01:56.940
to the Android TV platform.

00:01:56.940 --> 00:02:02.890
So it allows you to interact
with things like HDMI inputs,

00:02:02.890 --> 00:02:04.400
if your device has them.

00:02:04.400 --> 00:02:08.530
It allows you to deal with stuff
like over-the-air channels,

00:02:08.530 --> 00:02:12.000
channels in general, building a
program guide out of metadata,

00:02:12.000 --> 00:02:15.720
reporting, all these things you
know from any traditional TV

00:02:15.720 --> 00:02:20.220
device or your DVR,
they are in a framework

00:02:20.220 --> 00:02:22.710
that you can use as
an app developer.

00:02:22.710 --> 00:02:26.120
And to show you a little
bit how that looks like,

00:02:26.120 --> 00:02:30.210
because it sounds very
abstract, we do a quick demo.

00:02:33.360 --> 00:02:42.654
[DEMO PLAYING] So, once the
remote control-- So we're

00:02:42.654 --> 00:02:43.570
actually running this.

00:02:43.570 --> 00:02:45.800
This is a standard
retail Android TV device.

00:02:45.800 --> 00:02:48.730
This is actually
a NVIDIA Shield.

00:02:48.730 --> 00:02:56.385
And, you can see here, this
is just regular live TV

00:02:56.385 --> 00:02:57.260
as you would know it.

00:02:57.260 --> 00:03:00.630
It's program guides
with metadata, posters,

00:03:00.630 --> 00:03:05.320
you see typical TV
content playing.

00:03:05.320 --> 00:03:07.340
But the content
actually, in this case,

00:03:07.340 --> 00:03:08.790
comes from applications.

00:03:08.790 --> 00:03:12.080
So apps are actually
providing these live feeds.

00:03:12.080 --> 00:03:14.890
You see, play movies as
a trailer channel now,

00:03:14.890 --> 00:03:18.850
where you can watch the latest
trailers in an endless channel

00:03:18.850 --> 00:03:22.860
and jump if you think
its interesting.

00:03:22.860 --> 00:03:25.720
You can jump into the Play
Movies app to rent the movie.

00:03:25.720 --> 00:03:26.940
There are examples here.

00:03:26.940 --> 00:03:29.510
Bloomberg, The Weather
Channel, bringing

00:03:29.510 --> 00:03:34.530
content in a nice linear
format to your device.

00:03:34.530 --> 00:03:36.500
And it doesn't
matter which device,

00:03:36.500 --> 00:03:41.000
if it's an ODT device like
this, if it's a Smart TV,

00:03:41.000 --> 00:03:42.900
it works everywhere.

00:03:42.900 --> 00:03:46.120
But what if you actually have
these channels and think,

00:03:46.120 --> 00:03:48.890
well, I like this
thing with channels,

00:03:48.890 --> 00:03:50.570
and just doing channel
up, channel down,

00:03:50.570 --> 00:03:53.740
the traditional EPD guide,
the program guide, where

00:03:53.740 --> 00:03:57.250
all my content is, but I would
like to have more content.

00:03:57.250 --> 00:04:01.840
It's just the ones I
have, that's not enough.

00:04:01.840 --> 00:04:03.340
Let's see what else there is.

00:04:03.340 --> 00:04:05.760
And so, within the
TV application,

00:04:05.760 --> 00:04:09.490
you can [DEMO STOPS PLAYING]
select Get More Channels,

00:04:09.490 --> 00:04:13.330
and you see a selection of
apps that provide channels

00:04:13.330 --> 00:04:16.730
into your TV Guide.

00:04:16.730 --> 00:04:19.295
And so I just select, oh
wait, I know Haystack.

00:04:19.295 --> 00:04:21.170
They provide a bunch of
interesting channels.

00:04:21.170 --> 00:04:27.920
So let's see what they
are providing here.

00:04:27.920 --> 00:04:31.670
So I just, very easy, like I
would do with any application,

00:04:31.670 --> 00:04:37.057
I can select the
app and install it.

00:04:37.057 --> 00:04:37.640
[DEMO PLAYING]

00:04:37.640 --> 00:04:43.520
And if I'm back in the TV app,
the TV app already notifies me,

00:04:43.520 --> 00:04:45.800
hey there's a new
content for us.

00:04:45.800 --> 00:04:47.770
Do you want to add that?

00:04:47.770 --> 00:04:51.560
And here you see all the
sources, and in this demo page,

00:04:51.560 --> 00:04:53.550
it's just applications,
but that could also

00:04:53.550 --> 00:04:58.400
be a built-in antenna or
cable tuner in the TV set.

00:04:58.400 --> 00:05:02.170
Or it could be any
kind of ODT provider.

00:05:02.170 --> 00:05:05.760
Here we see the application
we have just installed,

00:05:05.760 --> 00:05:08.540
and we see, oh wow, ten
new channels I added.

00:05:11.550 --> 00:05:16.500
And so, you see all these
channels showing up here,

00:05:16.500 --> 00:05:18.780
and you can tune
to them, and it's

00:05:18.780 --> 00:05:22.030
the experience is still very
much like a traditional TV

00:05:22.030 --> 00:05:25.760
experience but merged together
with the new opportunities

00:05:25.760 --> 00:05:28.160
we have with app
applications, and downloads,

00:05:28.160 --> 00:05:31.410
and the play store.

00:05:31.410 --> 00:05:36.050
So, I just wanted to show
that, so this abstract concept

00:05:36.050 --> 00:05:39.467
actually gets a little bit
of a [INAUDIBLE] picture.

00:05:39.467 --> 00:05:40.300
[DEMO STOPS PLAYING]

00:05:40.300 --> 00:05:41.965
Going back to the slides.

00:05:44.496 --> 00:05:45.870
One thing I wanted
to clarify is,

00:05:45.870 --> 00:05:48.550
we talk a lot about live
content or linear content when

00:05:48.550 --> 00:05:49.720
we talk about a channel.

00:05:49.720 --> 00:05:53.130
That does not necessarily mean
that this content is actually

00:05:53.130 --> 00:05:53.740
live.

00:05:53.740 --> 00:05:56.960
As you saw some of the
examples that I just showed,

00:05:56.960 --> 00:05:59.510
it might actually be, if
you have content as an app

00:05:59.510 --> 00:06:01.340
developer, as a
content provider, that

00:06:01.340 --> 00:06:03.400
is on-demand content,
but you think

00:06:03.400 --> 00:06:07.550
it might actually make sense
to curate that into a channel.

00:06:07.550 --> 00:06:10.850
For example, you have
a lot of music videos,

00:06:10.850 --> 00:06:14.570
and you want to create
the country music

00:06:14.570 --> 00:06:17.100
channel, or something like
that, for whatever reason

00:06:17.100 --> 00:06:21.670
you would do that, you just,
you can curate that and provide

00:06:21.670 --> 00:06:27.050
that as a channel from
your app into the TV Guide.

00:06:27.050 --> 00:06:30.030
And so, live content can
live, but it can also

00:06:30.030 --> 00:06:33.580
be curated content just put
together into a linear stream.

00:06:33.580 --> 00:06:36.465
Both of these concepts are
interesting for consumers.

00:06:39.860 --> 00:06:42.150
So, who can benefit from that?

00:06:42.150 --> 00:06:44.190
On the one hand, I
already mentioned

00:06:44.190 --> 00:06:47.155
the TV input framework and
the concept of live channels

00:06:47.155 --> 00:06:52.430
is very, very much designed
for hardware manufacturers.

00:06:52.430 --> 00:06:56.330
So OEMs can actually
integrate physical tuners

00:06:56.330 --> 00:06:57.980
like satellite
tuners, cable tuners.

00:06:57.980 --> 00:07:00.510
We have partners who actually
ship TV sets with a satellite

00:07:00.510 --> 00:07:01.600
tuner built in.

00:07:01.600 --> 00:07:03.950
And so, with the
TV input framework,

00:07:03.950 --> 00:07:07.040
they can integrate
these hardware tuners

00:07:07.040 --> 00:07:10.770
with a standard
API, and no matter

00:07:10.770 --> 00:07:13.170
what they change underneath,
the application layer

00:07:13.170 --> 00:07:14.170
always stays the same.

00:07:14.170 --> 00:07:16.009
Their TV app always
stays the same.

00:07:16.009 --> 00:07:17.300
They don't have to modify that.

00:07:17.300 --> 00:07:19.360
They just change
the hardware layer,

00:07:19.360 --> 00:07:22.520
the tuner layer underneath it.

00:07:22.520 --> 00:07:24.610
For consumers, this
is really interesting

00:07:24.610 --> 00:07:29.250
because a lot of consumers, I
know we here especially at I/O,

00:07:29.250 --> 00:07:32.860
we love apps, we love
to download apps and use

00:07:32.860 --> 00:07:34.030
a lot of them.

00:07:34.030 --> 00:07:37.410
But a lot of users really like
just to sit down on the sofa,

00:07:37.410 --> 00:07:41.370
flip through the program guide,
use channel up, channel down.

00:07:41.370 --> 00:07:43.980
They don't want to jump
through five different apps

00:07:43.980 --> 00:07:46.920
to get to the one
content they want.

00:07:46.920 --> 00:07:50.480
They actually really like that
the concept of navigation,

00:07:50.480 --> 00:07:52.950
of approaching content,
is exactly the same

00:07:52.950 --> 00:07:57.100
with every channel, no matter
where the channel comes from.

00:07:57.100 --> 00:08:00.110
So we see lots of
good feedback on that.

00:08:00.110 --> 00:08:04.020
And also then in the end
for you, for app developers,

00:08:04.020 --> 00:08:08.094
it provides an additional new
entry point to your content,

00:08:08.094 --> 00:08:10.260
like I mentioned with the
Play Movie trailer channel

00:08:10.260 --> 00:08:11.600
as an example.

00:08:11.600 --> 00:08:14.460
This is a live channel exposed
by the play movies app.

00:08:14.460 --> 00:08:18.345
So it just shows trailers,
but with our concept of app

00:08:18.345 --> 00:08:19.930
linking, they have
an entry point.

00:08:19.930 --> 00:08:23.090
The user can click, oh, I
now want to jump into the app

00:08:23.090 --> 00:08:25.390
and rent that content.

00:08:25.390 --> 00:08:29.140
So that gives you users who
are traditionally maybe not

00:08:29.140 --> 00:08:32.690
app users, who would not launch
a lot of apps, that are just,

00:08:32.690 --> 00:08:35.890
the majority of time,
sitting in the program guide,

00:08:35.890 --> 00:08:37.710
using channel up,
channel down, and that's

00:08:37.710 --> 00:08:38.980
how they approach content.

00:08:38.980 --> 00:08:41.159
So for these kind
of users, this is

00:08:41.159 --> 00:08:45.360
a new way you can bring your
app, your content, to them.

00:08:45.360 --> 00:08:49.635
And actually, we work
with a bunch of partners.

00:08:49.635 --> 00:08:53.550
I was just talking last
week with the developers

00:08:53.550 --> 00:08:55.280
from the app I just
showed, Haystack.

00:08:58.690 --> 00:09:02.780
With their last app update,
they exposed live channels.

00:09:02.780 --> 00:09:06.900
And they said that, within
the first month of them adding

00:09:06.900 --> 00:09:11.220
the live channel functionality,
it's already driving over

00:09:11.220 --> 00:09:17.220
10% of watch time across all
users they have on Android

00:09:17.220 --> 00:09:20.570
TV, and 16% for new users.

00:09:20.570 --> 00:09:26.030
So it is definitely a great
new entry point for consumers

00:09:26.030 --> 00:09:27.310
to consume that content.

00:09:30.400 --> 00:09:35.320
Also, because I get asked a lot
of times, well, live channels,

00:09:35.320 --> 00:09:38.870
is Google really doing
something about that or not?

00:09:38.870 --> 00:09:41.530
So, we are
continuously investing

00:09:41.530 --> 00:09:43.880
into the TV input framework
and the live channels app.

00:09:43.880 --> 00:09:46.900
We originally started
with Android Lollipop

00:09:46.900 --> 00:09:50.150
when we introduced
the TV input framework

00:09:50.150 --> 00:09:51.920
in its very basic form.

00:09:51.920 --> 00:09:55.450
With Marshmallow, we got a
lot of feedback from partners

00:09:55.450 --> 00:10:00.010
and addressed a lot of small
issues, under the cover polish.

00:10:00.010 --> 00:10:01.770
We introduced time-shifting API.

00:10:01.770 --> 00:10:05.210
It's already back in Android
M. And now, with the upcoming

00:10:05.210 --> 00:10:07.490
Android N, we're adding more
features to the TV input

00:10:07.490 --> 00:10:10.370
framework, like the
recording functionality,

00:10:10.370 --> 00:10:13.440
that where application
developers can use TV input

00:10:13.440 --> 00:10:15.785
framework, APIs, to
manage their recordings.

00:10:19.040 --> 00:10:22.050
And so, also to come back,
because a lot of people

00:10:22.050 --> 00:10:25.170
ask, well, especially
application developers who

00:10:25.170 --> 00:10:28.960
come from mobile,
is live TV watching,

00:10:28.960 --> 00:10:31.140
is this program
guide, these channels,

00:10:31.140 --> 00:10:32.510
that's an old thing, right?

00:10:32.510 --> 00:10:34.830
Like, who does that anymore?

00:10:34.830 --> 00:10:39.110
So this is from the
last Nielsen report,

00:10:39.110 --> 00:10:41.460
their total audience
report they do once a year,

00:10:41.460 --> 00:10:43.150
this is from 2015.

00:10:43.150 --> 00:10:49.440
And it shows, even in
households with connected TVs,

00:10:49.440 --> 00:10:52.410
or TVs that have devices
connected to the internet

00:10:52.410 --> 00:10:56.890
so they can watch OTT content
from the internet, the majority

00:10:56.890 --> 00:11:00.770
of watch time, like really
a lot of the watch time,

00:11:00.770 --> 00:11:02.540
is still traditional live TV.

00:11:02.540 --> 00:11:05.660
So this is a big
audience, and we think you

00:11:05.660 --> 00:11:09.100
as application developer really
should capture that audience.

00:11:09.100 --> 00:11:12.300
And that's what we provide
the TV input framework.

00:11:12.300 --> 00:11:15.150
And also, the examples I
showed earlier in the demo

00:11:15.150 --> 00:11:20.220
are from the US, and these are
single channels and interest

00:11:20.220 --> 00:11:22.990
channels exported
by certain apps.

00:11:22.990 --> 00:11:24.580
We also have some
great examples.

00:11:24.580 --> 00:11:27.620
For example, in Europe, we
have a partner there, Zattoo,

00:11:27.620 --> 00:11:33.700
who, they offer a whole
cable channel lineup over

00:11:33.700 --> 00:11:35.490
as OTT channels.

00:11:35.490 --> 00:11:37.290
And they have the app
around for a while,

00:11:37.290 --> 00:11:39.950
they brought it to Android
TV and other TV platforms,

00:11:39.950 --> 00:11:42.040
and they integrate with
the TV input framework.

00:11:42.040 --> 00:11:44.940
So, basically, you install that,
and with your subscription,

00:11:44.940 --> 00:11:48.760
you have all your cable channels
on your Android TV device

00:11:48.760 --> 00:11:51.740
in the live channels app.

00:11:51.740 --> 00:11:53.890
And as I mentioned before,
what's really great

00:11:53.890 --> 00:11:59.860
is it gives you also the ability
to drive users from the live TV

00:11:59.860 --> 00:12:02.030
experience, from the
live channels experience,

00:12:02.030 --> 00:12:02.800
into your app.

00:12:02.800 --> 00:12:06.150
You see on the lower side
here, the Zattoo icon, this

00:12:06.150 --> 00:12:10.330
is our app-linking functionality
in the live channels app,

00:12:10.330 --> 00:12:13.210
where the user easily
can jump into the app

00:12:13.210 --> 00:12:15.040
and get more
content-- for example,

00:12:15.040 --> 00:12:17.640
on-demand archives that
your app is providing,

00:12:17.640 --> 00:12:20.150
or additional functionality
that is not exposed

00:12:20.150 --> 00:12:23.210
by the live channels app.

00:12:23.210 --> 00:12:26.790
But to talk a little bit more
about the actual real stuff,

00:12:26.790 --> 00:12:28.770
the developer stuff,
that happens underneath,

00:12:28.770 --> 00:12:30.920
handing over to Jae.

00:12:30.920 --> 00:12:32.580
JAE SEO: Hi, I'm Jae.

00:12:32.580 --> 00:12:34.680
So, you just heard
a lot of good things

00:12:34.680 --> 00:12:36.500
about the TV input framework.

00:12:36.500 --> 00:12:40.090
Now, you might wonder, what
exactly is the TV input

00:12:40.090 --> 00:12:41.440
framework?

00:12:41.440 --> 00:12:45.090
OK, that's what I'm
going to explain to you.

00:12:45.090 --> 00:12:48.210
First, let me briefly talk
about the overall architecture

00:12:48.210 --> 00:12:50.600
of the TV input framework to
help you better understand

00:12:50.600 --> 00:12:52.220
the rest of this talk.

00:12:52.220 --> 00:12:54.860
Let's just start
with the data path.

00:12:54.860 --> 00:12:57.770
When we say data,
in the TV framework,

00:12:57.770 --> 00:13:01.280
we're talking about channel
and program metadata that

00:13:01.280 --> 00:13:04.710
describe TV channels and
programs, such as channel

00:13:04.710 --> 00:13:09.190
numbers, cosigns, channel
logos, program titles, start

00:13:09.190 --> 00:13:12.012
and end times of each
program, and so on.

00:13:12.012 --> 00:13:15.970
On the top left of the
diagram is the app called

00:13:15.970 --> 00:13:19.050
Live Channels, which is an
Android app that people use

00:13:19.050 --> 00:13:21.750
every day for watching live TV.

00:13:21.750 --> 00:13:26.390
We sometimes call it a TV player
app, just like media player,

00:13:26.390 --> 00:13:31.170
because it plays whatever
TV content the user wants.

00:13:31.170 --> 00:13:33.950
One thing to note here
is that the Live Channels

00:13:33.950 --> 00:13:38.070
app is Google's reference
implementation of a TV player,

00:13:38.070 --> 00:13:40.440
and TV OEMs have
freedom to choose

00:13:40.440 --> 00:13:44.960
their own implementation, just
like the dial apps on phones.

00:13:44.960 --> 00:13:48.570
So, the Live Channels app
doesn't have any actual TV

00:13:48.570 --> 00:13:49.510
content.

00:13:49.510 --> 00:13:51.770
Where do they come from?

00:13:51.770 --> 00:13:56.560
They come from the channel
apps on the top right.

00:13:56.560 --> 00:13:58.360
Then how is the data path?

00:13:58.360 --> 00:14:00.940
How does the Live Channel
stream know all the channel

00:14:00.940 --> 00:14:03.130
and program information?

00:14:03.130 --> 00:14:04.150
It's easy.

00:14:04.150 --> 00:14:07.770
Channel apps put their own
channel and program data

00:14:07.770 --> 00:14:10.870
into the system database,
and the Live Channels app

00:14:10.870 --> 00:14:13.600
reads them from there.

00:14:13.600 --> 00:14:17.260
Next, let's talk about
the control path.

00:14:17.260 --> 00:14:20.705
When the user choose the channel
through the Live Channels app,

00:14:20.705 --> 00:14:22.800
and it happens to be
one of the channels

00:14:22.800 --> 00:14:27.300
that your channel app provides,
we call you and say, please

00:14:27.300 --> 00:14:29.750
play channel XYZ.

00:14:29.750 --> 00:14:32.990
And we expect you to start
playback of the live content

00:14:32.990 --> 00:14:34.860
on that channel.

00:14:34.860 --> 00:14:38.430
Technically, we give you an
Android surface object on which

00:14:38.430 --> 00:14:40.710
you can render your video.

00:14:40.710 --> 00:14:45.010
Once you tell us the video
is ready, we take the surface

00:14:45.010 --> 00:14:47.010
and we draw some
overlays, if necessary,

00:14:47.010 --> 00:14:50.380
such as channel banner,
and we show it to the user.

00:14:50.380 --> 00:14:53.236
That's it, simple.

00:14:53.236 --> 00:14:58.550
You can find the actual APIs
included in the live TV input

00:14:58.550 --> 00:15:02.900
framework under the package
name Android.media.tv.

00:15:02.900 --> 00:15:05.200
There are many classes,
a bunch of methods,

00:15:05.200 --> 00:15:07.680
callbacks, constants, and so on.

00:15:07.680 --> 00:15:10.360
But what you should remember
as a channel app developer

00:15:10.360 --> 00:15:14.225
are just two Java classes,
TvContract, and TvInputService.

00:15:17.240 --> 00:15:20.840
TvContract is the class that
defines channel and program

00:15:20.840 --> 00:15:23.590
columns for the system database.

00:15:23.590 --> 00:15:25.540
And the TvInputService
is the class

00:15:25.540 --> 00:15:27.990
that you need to implement
in order to provide

00:15:27.990 --> 00:15:32.000
TV channels on Android TV.

00:15:32.000 --> 00:15:34.160
Before we talk about
how you can start

00:15:34.160 --> 00:15:37.420
integrating your app
with the TV framework,

00:15:37.420 --> 00:15:39.840
let me clarify one thing.

00:15:39.840 --> 00:15:43.680
When you look at the TV input
framework APIs in more detail,

00:15:43.680 --> 00:15:47.380
you'll be surprised to see
they are just Java interfaces,

00:15:47.380 --> 00:15:51.040
and the business logic
is not actually there.

00:15:51.040 --> 00:15:55.030
Let me tell you, we're launching
the new TV recording APIs

00:15:55.030 --> 00:15:57.070
in the TV input
framework this year.

00:15:57.070 --> 00:15:58.580
And the most
questions we get are

00:15:58.580 --> 00:16:01.620
like, where is the actual
recording happening?

00:16:01.620 --> 00:16:03.620
Where do you
schedule recordings?

00:16:03.620 --> 00:16:05.460
Where do you handle
resource conflicts?

00:16:05.460 --> 00:16:07.230
Something like that.

00:16:07.230 --> 00:16:09.490
The answer to all
of those questions

00:16:09.490 --> 00:16:11.850
is that it's in
either Live Channels

00:16:11.850 --> 00:16:14.890
or individual TvInputServices.

00:16:14.890 --> 00:16:15.730
Why is that?

00:16:15.730 --> 00:16:18.600
Why did we make such a decision?

00:16:18.600 --> 00:16:21.920
That's because when we first
designed the framework,

00:16:21.920 --> 00:16:24.140
we really wanted to
be flexible in terms

00:16:24.140 --> 00:16:26.650
of updating our offering.

00:16:26.650 --> 00:16:31.140
It's easy for app developers
to update things themselves

00:16:31.140 --> 00:16:34.940
instead of relying
on the system update.

00:16:34.940 --> 00:16:38.370
By our bundling the business
logic from the Android platform

00:16:38.370 --> 00:16:40.600
and putting it
into live channels

00:16:40.600 --> 00:16:43.200
or delegating to
TvInputServices,

00:16:43.200 --> 00:16:47.130
we are able to push any
new update at any time.

00:16:50.290 --> 00:16:54.150
OK, let's talk about how you can
start integrating with the TV

00:16:54.150 --> 00:16:56.100
input framework.

00:16:56.100 --> 00:16:58.595
The first thing you
should do is take a look

00:16:58.595 --> 00:17:01.170
at the code samples, of course.

00:17:01.170 --> 00:17:04.319
We highly recommend that
you use Android Studio.

00:17:04.319 --> 00:17:07.089
When you run Android studio,
in the very first screen,

00:17:07.089 --> 00:17:09.242
you can import samples.

00:17:09.242 --> 00:17:12.520
You just type TV, and
you see two samples

00:17:12.520 --> 00:17:15.160
we provide under Android TV.

00:17:15.160 --> 00:17:18.160
And the one with the title
Sample TV Channel App

00:17:18.160 --> 00:17:21.130
using TV input framework,
that's the one you need.

00:17:21.130 --> 00:17:25.220
You put that sample,
and you're ready to go.

00:17:25.220 --> 00:17:28.140
This is the optimal
development flow, we think.

00:17:28.140 --> 00:17:30.180
Once you have the
code sample, you

00:17:30.180 --> 00:17:35.070
can start changing resources
such as XML files, streams,

00:17:35.070 --> 00:17:38.270
and images, in addition
to the package name.

00:17:38.270 --> 00:17:40.400
Just don't forget to
change the package name.

00:17:40.400 --> 00:17:42.524
You can't be working for
the company named Example.

00:17:44.910 --> 00:17:47.190
Once you're done
with the resources,

00:17:47.190 --> 00:17:50.480
then you can build a sample
and [? plant ?] in yours.

00:17:50.480 --> 00:17:52.830
That's it.

00:17:52.830 --> 00:17:55.970
Of course, you need to
provide detailed descriptions

00:17:55.970 --> 00:17:58.920
of your channels,
programs, including

00:17:58.920 --> 00:18:01.980
the URIs for your live
videos, but you're not even

00:18:01.980 --> 00:18:02.860
touching the code.

00:18:02.860 --> 00:18:05.070
Is that simple.

00:18:05.070 --> 00:18:07.180
But maybe, there might
be some other reasons

00:18:07.180 --> 00:18:09.280
that you must modify the code.

00:18:09.280 --> 00:18:13.150
For example, if you just can't
use AXL player in the sample

00:18:13.150 --> 00:18:16.290
for video playback, then
you should replace it with

00:18:16.290 --> 00:18:20.000
your in-house media player by
[? n-Stream. ?] Or maybe you

00:18:20.000 --> 00:18:22.310
just had a code and
want to re-write it,

00:18:22.310 --> 00:18:25.830
which is totally normal, then
please go ahead and modify

00:18:25.830 --> 00:18:28.010
the code.

00:18:28.010 --> 00:18:31.565
Lastly, if you already
have your Android TV app,

00:18:31.565 --> 00:18:36.940
then you can simply add the
TvInputService sample here

00:18:36.940 --> 00:18:40.530
to your existing app by
simply declaring the service

00:18:40.530 --> 00:18:42.490
in your Android manifest file.

00:18:42.490 --> 00:18:43.455
And you're all set.

00:18:46.190 --> 00:18:49.750
So, we have just skimmed through
the very basics of the TV input

00:18:49.750 --> 00:18:50.870
framework.

00:18:50.870 --> 00:18:53.950
I'll hand over to Ibrahim
for more technical details

00:18:53.950 --> 00:18:55.202
and our best features.

00:18:55.202 --> 00:18:56.410
IBRAHIM KARAHAN: Thanks, Jae.

00:18:59.660 --> 00:19:01.730
So far, we covered the
background and history

00:19:01.730 --> 00:19:05.070
of Android TV, live TV,
live channels and TV input

00:19:05.070 --> 00:19:07.950
framework, Sascha
gave the motivations

00:19:07.950 --> 00:19:11.595
of building such applications,
from the user developers

00:19:11.595 --> 00:19:14.850
and hardware developers,
hardware OEM,

00:19:14.850 --> 00:19:18.740
the original equipment
manufacturers' perspectives.

00:19:18.740 --> 00:19:20.960
And Jae gave a
technical overview

00:19:20.960 --> 00:19:22.830
of the TV input framework.

00:19:22.830 --> 00:19:24.840
So now it's time
actually looking

00:19:24.840 --> 00:19:27.350
at how we implement
this live channel.

00:19:30.510 --> 00:19:33.630
It's really important then
you start with the sample.

00:19:33.630 --> 00:19:35.420
It's an actual full application.

00:19:35.420 --> 00:19:38.740
It actually builds and you
can install it on your device,

00:19:38.740 --> 00:19:41.640
and will start running
the moment you actually

00:19:41.640 --> 00:19:44.080
click on the Live
Channels application.

00:19:44.080 --> 00:19:52.260
That happens because you
define in your application,

00:19:52.260 --> 00:19:54.170
you define your manifest.

00:19:54.170 --> 00:19:58.840
You say that I had
this service, and it's

00:19:58.840 --> 00:20:01.320
going to be read by the
Live Channels application

00:20:01.320 --> 00:20:03.210
to show up this page.

00:20:03.210 --> 00:20:08.030
Here, the first time you
launch the live application,

00:20:08.030 --> 00:20:12.960
you'll see the available
sources in your device.

00:20:12.960 --> 00:20:16.312
By default, most of
the Nexus devices

00:20:16.312 --> 00:20:17.770
come up with the
Google Play Movies

00:20:17.770 --> 00:20:20.680
and TV application
live channel source.

00:20:20.680 --> 00:20:24.350
The second one is our Rich
Input, which is our sample.

00:20:24.350 --> 00:20:26.210
Once you click on
one of them, it

00:20:26.210 --> 00:20:29.670
runs a special
activity that sets up

00:20:29.670 --> 00:20:33.170
the necessary metadata that's
read by TV input framework.

00:20:33.170 --> 00:20:37.040
And then your channel is ready,
and you will start to get up

00:20:37.040 --> 00:20:39.500
and running.

00:20:39.500 --> 00:20:42.360
So this is the manifest
part that you need

00:20:42.360 --> 00:20:44.580
to add into your application.

00:20:44.580 --> 00:20:47.760
The important thing is, you
need to create a service that

00:20:47.760 --> 00:20:50.630
extends from TvInputService.

00:20:50.630 --> 00:20:53.310
You need to add an
intent filter called

00:20:53.310 --> 00:20:54.643
Android.media.tv.TvInputService.

00:20:57.480 --> 00:20:59.710
The other information
that you need to provide

00:20:59.710 --> 00:21:02.210
is this metadata called
Android.media.tv.input.

00:21:04.780 --> 00:21:08.580
It's an XML file, and in
it, you have to tell us,

00:21:08.580 --> 00:21:11.670
you have to tell the
input framework which

00:21:11.670 --> 00:21:17.690
activity to run when the user
tries to set up a source.

00:21:17.690 --> 00:21:21.890
If you look at this sample
application, the sample

00:21:21.890 --> 00:21:24.480
activity here, this
is really simple.

00:21:24.480 --> 00:21:25.950
There's no UI involved.

00:21:25.950 --> 00:21:28.570
The only thing that you
have is, basically, you just

00:21:28.570 --> 00:21:31.300
need to set up the sources.

00:21:31.300 --> 00:21:33.310
The thing that you
need to know here

00:21:33.310 --> 00:21:38.880
is TV input framework exposes
all its metadata, channel data,

00:21:38.880 --> 00:21:40.800
with a content provider.

00:21:40.800 --> 00:21:44.170
And as Jae mentioned
before, TV contract

00:21:44.170 --> 00:21:47.770
is a basic database that
contains everything.

00:21:47.770 --> 00:21:51.260
Like poster data, channel
information, the program

00:21:51.260 --> 00:21:55.360
information that you fill in,
and basically once you populate

00:21:55.360 --> 00:21:57.490
those information, you
just need to put it

00:21:57.490 --> 00:22:01.510
into the content provider.

00:22:01.510 --> 00:22:05.700
So if you look at this file,
what we do is basically

00:22:05.700 --> 00:22:09.310
create a content values object.

00:22:09.310 --> 00:22:12.330
And then, at the
input ID, the name

00:22:12.330 --> 00:22:15.380
of your channel,
the Display Number,

00:22:15.380 --> 00:22:18.180
then just get the
content resolver

00:22:18.180 --> 00:22:20.780
and then just push it in.

00:22:20.780 --> 00:22:23.990
Another thing is, you don't have
to have separate applications

00:22:23.990 --> 00:22:25.630
if you have multiple channels.

00:22:25.630 --> 00:22:29.260
Just like we saw in
the Haystack example,

00:22:29.260 --> 00:22:33.020
once you click and create
this activity, when it runs,

00:22:33.020 --> 00:22:36.040
you can just repeat
this thing a few times,

00:22:36.040 --> 00:22:38.730
how many channels you
have, and then all of them

00:22:38.730 --> 00:22:41.800
will be available for
viewing for the users.

00:22:41.800 --> 00:22:45.510
Of course, this example
does not contain any UI,

00:22:45.510 --> 00:22:48.670
but if you think that you're
doing a lot of processing

00:22:48.670 --> 00:22:53.150
in this file, you can
show a nice logo screen,

00:22:53.150 --> 00:22:56.590
and then let your users know
that you are doing something

00:22:56.590 --> 00:23:00.840
while the channels
are being set up.

00:23:00.840 --> 00:23:04.930
The next thing is the life
cycle of the TV input service

00:23:04.930 --> 00:23:06.800
that you're implementing.

00:23:06.800 --> 00:23:08.680
Everything starts
with the launch

00:23:08.680 --> 00:23:10.280
of live channels application.

00:23:10.280 --> 00:23:14.790
So the main activities,
onCreate method is run,

00:23:14.790 --> 00:23:18.720
and at some point the
onset surface method

00:23:18.720 --> 00:23:21.170
is called, which sets the
surface that your media

00:23:21.170 --> 00:23:26.450
player is going to use
for showing the video.

00:23:26.450 --> 00:23:30.620
At some point, if there are
already some sources set up,

00:23:30.620 --> 00:23:34.930
it's going to try to tune
to one of those channels.

00:23:34.930 --> 00:23:36.880
Those light blue
boxes are the things

00:23:36.880 --> 00:23:39.100
that you are responsible for.

00:23:39.100 --> 00:23:41.520
The first one is
the onTune method.

00:23:41.520 --> 00:23:44.500
The onTune method
is where you get

00:23:44.500 --> 00:23:47.110
the channel URI that
you need to tune to,

00:23:47.110 --> 00:23:49.970
and then you need to get
the channel information.

00:23:49.970 --> 00:23:50.740
It's just the URI.

00:23:50.740 --> 00:23:53.730
Then you need to get
where the video is

00:23:53.730 --> 00:23:56.870
going to be played from, if
you have any captions, what

00:23:56.870 --> 00:23:59.120
is the title of the channel.

00:23:59.120 --> 00:24:02.250
You're going to get it from
this database that you're using.

00:24:02.250 --> 00:24:05.140
Can be content provider, it
can be some other database,

00:24:05.140 --> 00:24:09.510
or you can just get
it from the web.

00:24:09.510 --> 00:24:12.760
Now, you need to check if your
program is still available.

00:24:12.760 --> 00:24:16.740
By available, I mean if it's
still available for viewing,

00:24:16.740 --> 00:24:20.750
if the media is available,
or it can be blocked.

00:24:20.750 --> 00:24:24.050
So you may have some
age-restricted content.

00:24:24.050 --> 00:24:28.630
So it is possible that the media
controls, parental controls

00:24:28.630 --> 00:24:33.820
are set up, and it's not really
suitable for the user to view.

00:24:33.820 --> 00:24:35.610
If everything is
good, then you need

00:24:35.610 --> 00:24:37.740
to create your
media player object.

00:24:37.740 --> 00:24:41.040
You set it up with the
video link, the captions,

00:24:41.040 --> 00:24:43.740
and tell the media player that
this is the surface that you

00:24:43.740 --> 00:24:46.030
need to show the video to.

00:24:46.030 --> 00:24:50.070
And the onTune method
will be almost done.

00:24:50.070 --> 00:24:52.950
The next thing is, since
your responsibility is over,

00:24:52.950 --> 00:24:56.010
you need to tell the
system what to do next.

00:24:56.010 --> 00:24:59.070
So we provide, in
TV input framework,

00:24:59.070 --> 00:25:03.060
some methods that
start with notify.

00:25:03.060 --> 00:25:07.580
So some examples are notify
video available, for example.

00:25:07.580 --> 00:25:10.764
This, you need to call this,
when everything is good.

00:25:10.764 --> 00:25:12.680
So you have the program,
everything's running,

00:25:12.680 --> 00:25:16.200
your media player is running,
and you've prepared everything.

00:25:16.200 --> 00:25:19.120
The next thing is just telling
the TV input framework, OK, I'm

00:25:19.120 --> 00:25:19.620
ready.

00:25:19.620 --> 00:25:22.120
Just show it to the user.

00:25:22.120 --> 00:25:26.790
Other stuff, like age-restricted
content, was another example.

00:25:26.790 --> 00:25:28.650
You can't show this to the user.

00:25:28.650 --> 00:25:33.820
So you need to tell the system
that, hey, my content is

00:25:33.820 --> 00:25:34.320
blocked.

00:25:34.320 --> 00:25:36.010
I can't show it to the user.

00:25:36.010 --> 00:25:37.740
Please handle it.

00:25:37.740 --> 00:25:40.170
And you say, notify
content blocked.

00:25:40.170 --> 00:25:44.090
TV input framework
takes this comment

00:25:44.090 --> 00:25:48.820
and shows the parental
controls dialogue, the lock so

00:25:48.820 --> 00:25:51.030
that the user can
either unlock the screen

00:25:51.030 --> 00:25:53.300
or switch to another channel.

00:25:53.300 --> 00:25:56.930
And this is the life cycle
of the live channels.

00:25:56.930 --> 00:26:00.400
Of course, there's one more
thing, the onRelease method.

00:26:00.400 --> 00:26:03.330
That's where you need
to be a good citizen

00:26:03.330 --> 00:26:08.460
and clear out any resources
that you may be using.

00:26:08.460 --> 00:26:12.840
So this is a sample
TvInputService implementation.

00:26:12.840 --> 00:26:14.810
As I told you, it's
the onTune method

00:26:14.810 --> 00:26:16.630
that you need to override.

00:26:16.630 --> 00:26:20.240
You get the channel URI,
get your source, somehow,

00:26:20.240 --> 00:26:24.140
from content provider
database, and then the rest

00:26:24.140 --> 00:26:27.780
is basically media
player-specific.

00:26:27.780 --> 00:26:31.790
This sample code that we
provide comes with AXL player.

00:26:31.790 --> 00:26:34.630
Everything is already set
up, you can just use this.

00:26:34.630 --> 00:26:38.260
You may choose to use
other sources, depending

00:26:38.260 --> 00:26:39.560
on your content.

00:26:39.560 --> 00:26:43.100
You may actually ship
your own media player.

00:26:43.100 --> 00:26:45.510
Then you need to
change this place,

00:26:45.510 --> 00:26:46.930
and set it up appropriately.

00:26:46.930 --> 00:26:48.790
And once everything
is done, you need

00:26:48.790 --> 00:26:51.410
to call one of
the notify methods

00:26:51.410 --> 00:26:53.590
so that TV input
framework takes over.

00:26:56.920 --> 00:26:57.820
This is it.

00:26:57.820 --> 00:27:01.530
This is the basic things that
you need to get a channel up

00:27:01.530 --> 00:27:02.570
and running.

00:27:02.570 --> 00:27:04.020
We actually have more than that.

00:27:04.020 --> 00:27:11.300
We have advanced features,
such as the [? only ?] view,

00:27:11.300 --> 00:27:15.290
and the app-linking card, and
the now playing card actually.

00:27:15.290 --> 00:27:22.980
[DEMO PLAYING] You want to
make a demo with the-- Sorry.

00:27:22.980 --> 00:27:27.460
You're gonna make a demo of
the Google Play Movies and TV

00:27:27.460 --> 00:27:29.180
channel.

00:27:29.180 --> 00:27:33.970
So basically, this live
channel is an endless stream

00:27:33.970 --> 00:27:40.050
of trailers that you can rent
or buy from Google Play Movies.

00:27:40.050 --> 00:27:42.510
So we have lots
of trailers here.

00:27:42.510 --> 00:27:44.890
This is "The Last Witch Hunter."

00:27:44.890 --> 00:27:47.780
And also, these videos are
available in other sources

00:27:47.780 --> 00:27:48.980
like YouTube, right?

00:27:48.980 --> 00:27:55.250
What we show here is the name of
the movie, the year, the length

00:27:55.250 --> 00:27:59.430
of the content, the current
ranking of the movie,

00:27:59.430 --> 00:28:02.780
and the current price to rent
it from Google Play Movies.

00:28:02.780 --> 00:28:06.372
You can achieve the same thing
by embedding the information

00:28:06.372 --> 00:28:08.202
right into the video, right?

00:28:08.202 --> 00:28:10.492
And that will make
the same effect.

00:28:10.492 --> 00:28:13.950
But the thing here is, this
is actually dynamic content,

00:28:13.950 --> 00:28:14.450
right?

00:28:14.450 --> 00:28:18.930
So your users will
watch this movie,

00:28:18.930 --> 00:28:22.510
they may add their ranking,
make it go up or go down.

00:28:22.510 --> 00:28:24.510
Or, you may have a discount.

00:28:24.510 --> 00:28:26.450
Tomorrow, it could
be $2.99, right?

00:28:26.450 --> 00:28:29.489
If you do embed this
into the video, that's

00:28:29.489 --> 00:28:30.780
going to create another hassle.

00:28:30.780 --> 00:28:33.520
It means that you have
to reprocess this video,

00:28:33.520 --> 00:28:38.476
change the source, and do it
again and again as it changes.

00:28:38.476 --> 00:28:41.657
What [? this ?]
[? whole idea ?] is an overlay.

00:28:41.657 --> 00:28:45.080
So you can use this tool to
overlay any kind of information

00:28:45.080 --> 00:28:47.620
on top of the video.

00:28:47.620 --> 00:28:51.860
One of our partners,
actually, is really clever,

00:28:51.860 --> 00:28:53.700
that they work
with the providers.

00:28:53.700 --> 00:28:56.990
They use this screen to show
the local weather information

00:28:56.990 --> 00:28:58.500
for user's location.

00:28:58.500 --> 00:29:05.360
They get the location
information from Android,

00:29:05.360 --> 00:29:11.550
and then put the next
three days' weather

00:29:11.550 --> 00:29:14.240
information, no matter what
they're showing currently

00:29:14.240 --> 00:29:16.480
on screen.

00:29:16.480 --> 00:29:18.340
The other thing
is, this actually

00:29:18.340 --> 00:29:20.610
happens if I just click
on the center button,

00:29:20.610 --> 00:29:23.010
so I should have
talked about this,

00:29:23.010 --> 00:29:25.040
this is the app-linking card.

00:29:25.040 --> 00:29:28.290
It is the most
powerful thing that you

00:29:28.290 --> 00:29:31.230
can do to add interactivity
to your live channels.

00:29:31.230 --> 00:29:33.720
So it basically
gives you a chance

00:29:33.720 --> 00:29:37.390
to run any Android
intent upon click.

00:29:37.390 --> 00:29:39.890
And you can also customize
this badge, right?

00:29:39.890 --> 00:29:43.350
You can change, so it
changed actually, we

00:29:43.350 --> 00:29:47.100
moved to another server here,
so now it's showing "Zoolander."

00:29:47.100 --> 00:29:53.370
It changed the icon, it
changed the poster image,

00:29:53.370 --> 00:29:58.295
and it actually shows
the price information

00:29:58.295 --> 00:30:00.900
to buy this from Google Play.

00:30:00.900 --> 00:30:04.160
And with one click, it's
going to [DEMO STOPS PLAYING]

00:30:04.160 --> 00:30:06.850
just take you to the
companion application.

00:30:06.850 --> 00:30:08.340
And if I liked
this movie, I said

00:30:08.340 --> 00:30:11.380
OK, I want to look
at more information.

00:30:11.380 --> 00:30:12.890
I want to see what
this is about,

00:30:12.890 --> 00:30:17.800
and I can just here buy or rent,
and start watching right away.

00:30:17.800 --> 00:30:20.590
So it's a great place
to add interactivity

00:30:20.590 --> 00:30:23.910
to your live
channels application.

00:30:23.910 --> 00:30:27.820
And finally, [DEMO PLAYING]
we, upon click

00:30:27.820 --> 00:30:30.770
with the Home button, you
can go to home screen.

00:30:30.770 --> 00:30:33.920
Sometimes you need to do
something else with your TV.

00:30:33.920 --> 00:30:37.440
By default, live channels come
with now playing card data.

00:30:37.440 --> 00:30:39.067
And you can change
the logo, you can

00:30:39.067 --> 00:30:42.600
change the title of
this now playing card,

00:30:42.600 --> 00:30:46.008
and a click takes you
back to the live channel.

00:30:52.230 --> 00:30:54.300
Now let's talk about the
implementation of these.

00:30:54.300 --> 00:30:58.665
[DEMO STOPS PLAYING] Editing
overlay view is quite simple.

00:31:01.059 --> 00:31:03.100
The first thing that you
need to do is basically,

00:31:03.100 --> 00:31:07.530
in onCreateSession, you need
to tell TV input framework

00:31:07.530 --> 00:31:14.250
that your session has an overlay
view with setOverlayViewEnabled

00:31:14.250 --> 00:31:18.430
(true), and then
you need to override

00:31:18.430 --> 00:31:21.510
the onCreateOverlayView.

00:31:21.510 --> 00:31:24.950
You inflate a view here,
and just return it.

00:31:24.950 --> 00:31:27.770
If you keep a
handle to the view,

00:31:27.770 --> 00:31:30.620
you can just use this
in the later stages

00:31:30.620 --> 00:31:33.910
throughout the life
cycle of your service,

00:31:33.910 --> 00:31:35.970
and dynamically
change the information

00:31:35.970 --> 00:31:37.370
that's shown on the overlay.

00:31:39.900 --> 00:31:44.090
The other one is the
app-linking badge.

00:31:44.090 --> 00:31:45.425
It's completely in your control.

00:31:45.425 --> 00:31:46.800
You can change
the color, you can

00:31:46.800 --> 00:31:55.480
change the poster, the texts,
the card color, and your icon.

00:31:55.480 --> 00:31:56.570
And this is really simple.

00:31:56.570 --> 00:32:01.820
You just need to fill in the
app underscore link columns when

00:32:01.820 --> 00:32:05.610
you're populating, when you're
setting up your channel,

00:32:05.610 --> 00:32:09.200
and it will automatically
show this app badge

00:32:09.200 --> 00:32:12.610
with this information.

00:32:12.610 --> 00:32:14.630
And I told you
earlier, now playing

00:32:14.630 --> 00:32:16.990
card is completely automatic.

00:32:16.990 --> 00:32:19.850
Before I finish, I
want to talk about how

00:32:19.850 --> 00:32:22.590
to reach your TV audience.

00:32:22.590 --> 00:32:24.390
There are two ways
of achieving this.

00:32:24.390 --> 00:32:27.660
The first one is, basically,
using the Google Play Store.

00:32:27.660 --> 00:32:31.390
It's the default way of
getting more channels,

00:32:31.390 --> 00:32:34.140
more applications for
your Android devices

00:32:34.140 --> 00:32:37.130
and your Android TV.

00:32:37.130 --> 00:32:39.490
Basically, if you
have an application,

00:32:39.490 --> 00:32:42.040
already have an application,
just, as Jae said,

00:32:42.040 --> 00:32:45.160
just add this service into
your existing applications

00:32:45.160 --> 00:32:47.210
and update your APK,
and that's going

00:32:47.210 --> 00:32:50.380
to be available in the
live channels application

00:32:50.380 --> 00:32:51.730
to be download.

00:32:51.730 --> 00:32:54.410
Or if you don't have
one, create a new listing

00:32:54.410 --> 00:32:56.610
and upload your APK,
and that's going

00:32:56.610 --> 00:32:59.820
to be available for
your users to use.

00:32:59.820 --> 00:33:02.470
Oh, the other way
is-- we've seen this

00:33:02.470 --> 00:33:04.850
with lots of our partners.

00:33:04.850 --> 00:33:08.930
They work together with OEMs,
the hardware manufacturers,

00:33:08.930 --> 00:33:15.560
like TV manufacturers, the
player manufacturers, setup box

00:33:15.560 --> 00:33:20.690
manufacturers, and they
bundle their application

00:33:20.690 --> 00:33:22.430
with the device itself.

00:33:22.430 --> 00:33:28.750
So it creates an out-of-box
experience for those devices.

00:33:28.750 --> 00:33:31.770
Like, you may be the
default weather provider

00:33:31.770 --> 00:33:34.080
for this TV set, for example.

00:33:37.190 --> 00:33:39.770
Thank you for listening to us.

00:33:39.770 --> 00:33:41.320
Our talk is over.

00:33:41.320 --> 00:33:44.760
Please, visit our
sandbox in Zone A.

00:33:44.760 --> 00:33:46.870
We want to talk to
you RPM [INAUDIBLE]

00:33:46.870 --> 00:33:49.320
and our engineers
want to talk to you

00:33:49.320 --> 00:33:52.050
and get your opinion
about Android TV

00:33:52.050 --> 00:33:55.220
and want to learn
about your use cases.

00:33:55.220 --> 00:33:57.750
We also have
resources on the web.

00:33:57.750 --> 00:34:02.500
We have the G+ community at
g.co/AndroidTvDev where you can

00:34:02.500 --> 00:34:05.850
ask and answer questions,
and join the community.

00:34:05.850 --> 00:34:09.449
We have training in
developer.android.com/training

00:34:09.449 --> 00:34:12.270
for building TV
channels, and finally,

00:34:12.270 --> 00:34:14.819
our sample application
is hosted at GitHub.

00:34:14.819 --> 00:34:16.369
[MUSIC PLAYING]

