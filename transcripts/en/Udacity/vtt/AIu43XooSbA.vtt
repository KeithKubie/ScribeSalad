WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.000
Okay, so if we passed this test case, then obviously, yes, we've learned at least that much.

00:00:05.000 --> 00:00:07.000
It isn't completely useless.

00:00:07.000 --> 00:00:11.000
Does our code pass any test case where we replaced 7 with a different integer?

00:00:11.000 --> 00:00:17.000
Well, maybe not--if you replace 7 with a gigantic integer--

00:00:17.000 --> 00:00:20.000
something you can't even store on your computer it's so big--

00:00:20.000 --> 00:00:23.000
then you're probably not going to get the same behavior

00:00:23.000 --> 00:00:26.000
out of these test cases with something simple like 7.

00:00:26.000 --> 00:00:30.000
We can't necessarily say this. I would say that as well.

00:00:30.000 --> 00:00:35.000
Now, our code passes many test cases where we replaced 7 with a different integer. This is true.

00:00:35.000 --> 00:00:41.000
If we were to replace 7 with say 20 and replaced it down here as well,

00:00:41.000 --> 00:00:44.000
then yes--this should behave essentially the same.

00:00:44.000 --> 00:00:48.000
And it should behave essentially the same for many, many integers.

00:00:48.000 --> 00:00:53.000
Certainly not integers that have very large stored space requirements,

00:00:53.000 --> 00:00:59.000
or maybe it doesn't store integers past a certain static typing.

00:00:59.000 --> 00:01:07.000
For example, if you're storing a type in your queue that is only able to store very small integers,

00:01:07.000 --> 00:01:11.000
let's say, shorts which are typically much smaller, then yes, this won't work.

00:01:11.000 --> 00:01:15.000
So the question is--what exactly do we learn,

00:01:15.000 --> 00:01:22.000
and how do we make test cases that represent large a number of other potential test cases

00:01:22.000 --> 00:01:28.000
so we don't have to write a whole lot of very small simple test cases?

