WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.680
I think we've done fairly well actually
on Turing, Enigma - all this kind of

00:00:04.680 --> 00:00:08.820
thing. We've raced around Bletchley Park-
saw the Colossus machine - which was for

00:00:08.820 --> 00:00:13.230
the Tunny, or Lorenz, cipher. There is
a bit missing in the middle:

00:00:13.230 --> 00:00:23.720
"Why was Colossus necessary why did they
need a computer?" 

00:00:23.720 --> 00:00:27.119
What was the nature of that traffic that Colossus 
could help with? In one of our previous videos we've

00:00:27.119 --> 00:00:30.900
actually shown a picture of this weird
trace that they were getting off the

00:00:30.900 --> 00:00:35.579
airwaves. They showed it to the experts
at Bletchley Park and they said: "That's

00:00:35.579 --> 00:00:40.440
broadcast teleprinter traffic!" And we've
got to remind ourselves [that] they may not have had

00:00:40.440 --> 00:00:45.539
electronic computers back in the 1940s,
early on, but they certainly did have

00:00:45.539 --> 00:00:50.340
teleprinter machines. They were very
common - used in stock exchanges; used for

00:00:50.340 --> 00:00:54.449
foreign telegrams all sorts.
It looks a bit like a keyboard. As you

00:00:54.449 --> 00:00:58.140
press the keys there was a very
comforting 'splash splash splash' sound of

00:00:58.140 --> 00:01:02.699
the electromechanical things. Because, as
well as sending five-, or maybe even seven-hole,

00:01:02.699 --> 00:01:08.820
pulses over the land-line, it was
also printing out, as you went, what it

00:01:08.820 --> 00:01:14.220
was you were typing. So, that technology
was just phenomenally well known. The

00:01:14.220 --> 00:01:20.369
staff at Bletchley Park were comforted, in
a way, that it was teleprinter traffic,

00:01:20.369 --> 00:01:27.750
but puzzled as to its precise nature.
However, they'd all been on cryptography

00:01:27.750 --> 00:01:33.390
training courses - or even
been instructors on cryptography

00:01:33.390 --> 00:01:41.009
training courses - and one of the stories
was:  "Don't forget the Vernam Cipher!" So,

00:01:41.009 --> 00:01:44.579
again, in a previous video, there's more
details about this but a guy called Vernam,

00:01:44.579 --> 00:01:52.320
who worked for Bell Labs, AT&amp;T, in the
late '20s / early 30s, had this idea of

00:01:52.320 --> 00:01:59.460
taking 5-hole teleprinter codes and
exclusive-ORing them with an arbitrary

00:01:59.460 --> 00:02:05.700
letter, which was like a cipher key, and
coming out with a different letter. I'll

00:02:05.700 --> 00:02:09.600
just do one for you just to remind you
of the sort of principles 

00:02:09.600 --> 00:02:13.440
that went on.[Looks at open booklet front page]  
Probably available somewhere online: "Code-breaking with the

00:02:13.440 --> 00:02:22.500
Colossus Computer". In the teleprinter code
the letter H is represented by 0 0 1 0 1

00:02:22.500 --> 00:02:34.980
Now if you take the letter F, that is 1 0 1 1 0 
and from numerous videos we've

00:02:34.980 --> 00:02:39.810
done about the nature of bitwise
exclusive-OR it's now dead easy. Exclusive-OR

00:02:39.810 --> 00:02:45.270
says you do it bitwise. It is like an
addition but what happens is the result

00:02:45.270 --> 00:02:51.540
is 1 if and only if the two bits differ.
If they're the same then the answer is 0

00:02:51.540 --> 00:02:57.090
So 0 exclusive-ORd with  1 ?
They're different that's a 1.
 0 with 0 ?

00:02:57.090 --> 00:03:04.980
they're the same [so] it's a 0
1 with 1 ? 
They're the same; it's answer is a 0 

00:03:04.980 --> 00:03:12.090
0 with 1 is 1.   1 with 0 is 1 
The result, then, of exclusive ORing F with H 
is to give you

00:03:12.090 --> 00:03:17.970
a cipher result of 1 0 0 1 1. You'd have
known this off by heart if you were at

00:03:17.970 --> 00:03:22.950
Bletchley Park in the middle '40s, but I
*don't* know it off by heart(!) But the answer

00:03:22.950 --> 00:03:27.960
is that it's the letter B. 
Vernam said: "That's a great idea! if I provide

00:03:27.960 --> 00:03:34.290
a paper tape with a key on it, that's
random, I'll just, y'know, randomize them

00:03:34.290 --> 00:03:39.600
myself. I'll type in a great long random
key stream. If you exclusive-OR these 

00:03:39.600 --> 00:03:44.520
5-bit patterns with each other, and the
other tape is the plaintext, top secret

00:03:44.520 --> 00:03:49.050
message, you want to send, then fine! That's a
superb way of encrypting it, you see".

00:03:49.050 --> 00:03:54.090
Believe it or not, Vernam and Bell Labs
actually patented this. But there's one

00:03:54.090 --> 00:03:59.070
huge problem in getting it to work,
because their idea was you have a 5 hole

00:03:59.070 --> 00:04:04.320
paper tape full of your plaintext - your
secret text you want to send - you have a

00:04:04.320 --> 00:04:12.510
Gilbert-Vernam-produced equivalent tape
with lots of random [key] and you just want to

00:04:12.510 --> 00:04:17.190
run them side-by-side through some
machine that reads that one; reads that

00:04:17.190 --> 00:04:22.260
one, exclusive-ORs them and prints out
the encrypted result. And what's the

00:04:22.260 --> 00:04:25.690
problem if you
literally use two paper tapes?
Keeping them in sync!

00:04:25.690 --> 00:04:30.820
They had huge difficulties with
differential slippage. So you either

00:04:30.820 --> 00:04:35.590
ended up with them not in line and not
working at all, or the wrong pattern being

00:04:35.590 --> 00:04:40.840
XORd with the wrong pattern. So
in the end the feeling, I think was, among

00:04:40.840 --> 00:04:45.610
the cryptographic community: "This is a
promising technique but there's no way

00:04:45.610 --> 00:04:49.780
you want to be trying to synchronize two
stretchy bits of tape!" One bit of tape - fine.

00:04:49.780 --> 00:04:56.260
You can even keep track.
So there was a knowledge in the cipher

00:04:56.260 --> 00:05:00.910
world that sooner or later somebody
would produce the key stream, not on

00:05:00.910 --> 00:05:06.940
another tape, but automatically, as part
of the teleprinter process. You could

00:05:06.940 --> 00:05:13.240
have a bolt-on accessory to a
teleprinter that provided the 5-bit key

00:05:13.240 --> 00:05:17.860
stream automatically, either
electronically or electromechanically.

00:05:17.860 --> 00:05:25.390
And so this one that has become so
famous, which the Allies at Bletchley called

00:05:25.390 --> 00:05:31.480
"Tunny" -  part of these 'Fishy Ciphers'. They
didn't know what machine was producing

00:05:31.480 --> 00:05:35.950
it. And our colleague Jack Copeland,
historian and who's on top of all these

00:05:35.950 --> 00:05:40.720
things says: "Every time you mention
this you must mention that at Bletchley

00:05:40.720 --> 00:05:45.820
Park, if you called it 'Lorenz' in 1941
they wouldn't have known what you were

00:05:45.820 --> 00:05:50.740
talking about!" The company that made the
machine - that did this traffic - was a

00:05:50.740 --> 00:05:54.820
mystery to them. They just called it
Tunny. It wasn't just the mystery Tunny

00:05:54.820 --> 00:05:58.300
machine there were other machines around.
I have to emphasize this. There was a

00:05:58.300 --> 00:06:05.500
Hagelin cipher machine in Sweden,
there was a Siemens cipher machine.

00:06:05.500 --> 00:06:11.520
A lot of people were investigating this idea
of providing the keystream

00:06:11.520 --> 00:06:17.320
electromechanically and not on a
separate tape. So the overall picture,

00:06:17.320 --> 00:06:24.100
then, of exclusive-ORing teletype
characters - the plaintext one with a

00:06:24.100 --> 00:06:28.840
key character and doing it character by
character by character by character.

00:06:28.840 --> 00:06:33.780
You could summarize it by saying that the
ciphertext

00:06:33.780 --> 00:06:42.450
that you prepare is a result of taking a
plaintext - and remember the + in a

00:06:42.450 --> 00:06:47.550
circle means exclusive-OR. So that's
your basic equation: cipher text (C) is plain

00:06:47.550 --> 00:06:53.639
text (P) exclusive-ORd, character-by-
character, with the key stream (K) like that.

00:06:53.639 --> 00:06:58.380
Now we did a thing called "ZigZag
Decryption", which you can look up and you

00:06:58.380 --> 00:07:02.550
can see the details of that. To cut a long
story short the Allies were very lucky

00:07:02.550 --> 00:07:08.760
in that, by using this special ZigZag decryption, 
on a rather weak [and duplicated] message. They

00:07:08.760 --> 00:07:13.260
got a whole bunch of Key out of it and
this was like gold dust. In the so-called

00:07:13.260 --> 00:07:19.400
Research Section at Bletchley
- headed up by a guy called Gerry Morgan -

00:07:19.400 --> 00:07:24.090
[they] picked on a new recruit called Bill
Tutte. He was from Cambridge, just like

00:07:24.090 --> 00:07:28.530
Turing. But I empathize with Bill Tutte
because he started off doing chemistry!

00:07:28.530 --> 00:07:32.669
And had it been today he'd [possibly!] have moved
into computer science. But as it was then

00:07:32.669 --> 00:07:37.530
he gradually turned himself into a
mathematician. He loved doing puzzles; he

00:07:37.530 --> 00:07:42.479
went through his Bletchley pre-training
learnt all about Vernam's - and whatever.

00:07:42.479 --> 00:07:47.669
And they put him working on another cog
machine called the Hagelin machine which

00:07:47.669 --> 00:07:52.080
was used for Italian ciphers. It turned
out to be rather simpler than Tunny

00:07:52.080 --> 00:07:56.490
and it was good training for him. They'd
got tons of stuff from this mystery [Lorenz]

00:07:56.490 --> 00:08:03.630
machine which was defying analysis. Bill
Tutte was given the chance to make a name

00:08:03.630 --> 00:08:12.270
for himself by having a go at it. The
only extra information that Gerry Morgan

00:08:12.270 --> 00:08:16.680
gave him was the following. He said: Do
you know the Germans - just like we

00:08:16.680 --> 00:08:21.539
encountered on the Enigma in the very
early days - are actually sending us the

00:08:21.539 --> 00:08:27.660
initial [cog-wheel] settings. Before we got these
4000 characters the Germans sent out

00:08:27.660 --> 00:08:32.630
what we are calling 'the Indicator' "
And it's passed into fame and infamy - the Indicator

00:08:32.630 --> 00:08:40.650
[Looks at HQIBPEXEZMUG indicator from the Tiltman Break]
I always pronounce it to myself as "H quib pexxy zeemug"

00:08:40.650 --> 00:08:43.650
What you'll find in the literature is people
don't want to say it!

00:08:43.650 --> 00:08:46.950
It's called "Zedmug", or "Zeemug", whichever
side of the Atlantic

00:08:46.950 --> 00:08:51.630
you're on  and with my mid-Atlantic persona
please forgive me for switching from one

00:08:51.630 --> 00:08:57.630
to the other - just like that. So "Zeemug" / "Zedmug"
was the indicator setting at which

00:08:57.630 --> 00:09:02.760
they had this lucky [Tiltman] break and could get
the key. Morgan said to Bill Tutte, he said:

00:09:02.760 --> 00:09:06.960
"You know, the weird thing is we've looked
at these settings, they're always alphabetic

00:09:06.960 --> 00:09:11.610
and if we're assuming that it's a bit
like the Hagelin, and if  there's lots of teeth on

00:09:11.610 --> 00:09:13.880
there and all this kind of stuff,

00:09:13.880 --> 00:09:19.980
they're only ever using [in the Indicator] 
25 letters. Except in one of these positions

00:09:19.980 --> 00:09:24.260
[DFB: I can't remember which it was now, I think it's
the fifth one along] In that position

00:09:24.260 --> 00:09:29.640
there's only ever 23 alphabetic letters!
We've saved up all the indicators we've

00:09:29.640 --> 00:09:36.660
ever had, and on that position they only
use 23 letters out of 26" So, with his

00:09:36.660 --> 00:09:41.870
training in mind, Bill Tutte said: "23 is a
prime number.

00:09:41.870 --> 00:09:49.580
Interesting! I wonder if - a bit like the
Hagelin machine - this thing is actually

00:09:49.580 --> 00:09:57.900
using cog wheels on each of the
bitstreams? Five parallel bitstreams of

00:09:57.900 --> 00:10:03.330
a five-bit character. Perhaps it's using
different wheels on different streams

00:10:03.330 --> 00:10:10.080
and messing about, that way, with the
patterns of 1s and 0s that gets

00:10:10.080 --> 00:10:14.130
exclusive-ORd, you know, as part of the
key generation exclusive-OR thing?

00:10:14.130 --> 00:10:21.540
I wonder if this is a cogs machine? If there's a 
23-toothed wheel somewhere? But then the rest are

00:10:21.540 --> 00:10:32.520
25, right? 23 times 25 is 575. Yeah! let's
start investigating. Now I think, at this

00:10:32.520 --> 00:10:37.190
stage, before we get stuck into what
Bill Tutte did, we need to talk about

00:10:37.190 --> 00:10:42.240
possibilities of repetitions, depending
on the number of cog wheels you've got.

00:10:42.240 --> 00:10:48.450
Let me put it to you like this. Suppose
you have two very simple cog wheels indeed.

00:10:48.450 --> 00:10:54.390
So simple they'd never ever be
used in cryptography - but in some sense

00:10:54.390 --> 00:10:58.740
these things are on a common spindle,

00:10:58.740 --> 00:11:04.589
like that, and every time that [i.e. a cog] rotates it
moves on one position. In fact I'll use a

00:11:04.589 --> 00:11:09.450
red pen. I'm saying that this first wheel
has only got two possible positions it

00:11:09.450 --> 00:11:15.240
can either be there, or it can be there.
There's a rod, if you like, flipping from

00:11:15.240 --> 00:11:20.550
being upright there to upright down
there. Thi one - the fact that it looks

00:11:20.550 --> 00:11:25.740
like a Mercedes Benz logo is purely
coincidental - this one has got three

00:11:25.740 --> 00:11:31.529
possible positions. Let's call these two
positions, on the two-toothed wheel, a and b

00:11:31.529 --> 00:11:36.750
those are the two possible positions.
On the car logo - whatever that brand is -

00:11:36.750 --> 00:11:43.320
I don't know - let's just call it 1, 2 and 3.
The start position we can characterize

00:11:43.320 --> 00:11:49.110
as being a 1. Then we click the spindle
and it moves on to the next stop

00:11:49.110 --> 00:11:55.140
position. a will turn into pointing
downwards and being b The 1 on the

00:11:55.140 --> 00:12:01.459
other hand, on the other one, will just
go to 2. So you get a1, b2. One more click.

00:12:01.459 --> 00:12:08.339
b will go back to a but 2 will go to 3 - [hence] a3. 
One more click - you'll go from a to b

00:12:08.339 --> 00:12:13.890
again, but the 3 will go back to 1. b will
go back to a again. 1 will go to 2.

00:12:13.890 --> 00:12:22.589
a will go back to b again. 2 will go to
3 and finally back to a1.

00:12:22.589 --> 00:12:28.230
It may not look relevant, but it is. This is looking
for repeats. When does a pattern repeat?

00:12:28.230 --> 00:12:32.820
And it depends on the number of teeth on
the wheel. So one looks at this and you

00:12:32.820 --> 00:12:39.390
think, all right, a1. How long before it
comes back to being a1? [Counting patterns]  1 2 3 4 5 6

00:12:39.390 --> 00:12:44.010
Oh! what a coincidence! We've got a
two-position wheel we've got a three-position

00:12:44.010 --> 00:12:49.079
wheel. 3 times 2 is 6. It's easy! Instant
mathematics! It's obviously the case

00:12:49.079 --> 00:12:53.370
that all you do is multiply the number
of teeth together? Nope?! Even Sean

00:12:53.370 --> 00:12:56.670
is shaking his head - not quite. 
&gt;&gt; Sean: causation and correlation ?
&gt;&gt; DFB: causation and correlation, yes.

00:12:56.670 --> 00:13:01.740
Those of you who are Numberphile
fans this is trivial stuff. You'll know it

00:13:01.740 --> 00:13:06.180
off backwards but for those who are less
familiar let's just now develop it one

00:13:06.180 --> 00:13:10.700
stage further and be the devil's
advocate. But this time we'll turn

00:13:10.700 --> 00:13:19.010
the "motorized" logo into being a cross
shape. It's a four-position cog here and

00:13:19.010 --> 00:13:26.060
I'll number it 1, 2, 3, 4.
Now, since I've done this earlier I'll write

00:13:26.060 --> 00:13:32.810
out the sequence for you, as to what
happens here. It goes a1 b2 on to a3 on to

00:13:32.810 --> 00:13:38.660
b4 and back to a1. So, what's the repeat
length? Fouur. But look - there's 4 on that there's

00:13:38.660 --> 00:13:44.840
2 on that, it ought to be 8. Why isn't
it 8? Why is it only 4? And the

00:13:44.840 --> 00:13:51.830
answer is there are factors in common:
This [wheel] is 2 that [wheel] is 4. 
Four is not a prime number.

00:13:51.830 --> 00:13:57.410
It's 2 times 2 so the factor of 2
is -- it's a common base, like doing Lowest

00:13:57.410 --> 00:14:02.360
Common Denominators [Least Common Multiples], 
y'know, when you're combining fractions you try and

00:14:02.360 --> 00:14:06.230
find out what's the thing on the bottom [line]
that's got everything in it, but is as

00:14:06.230 --> 00:14:11.090
small as possible. And that is what is
happening here. You don't want cog-wheels

00:14:11.090 --> 00:14:15.680
with factors in common because otherwise
your repeat length will be a lot shorter

00:14:15.680 --> 00:14:21.080
than you ever imagined. Finally, I'll just
draw out the possibility for you. We'll do

00:14:21.080 --> 00:14:32.450
a 3 with a 4. And they now got a b c 1 2
3 4. What is the overall length of the

00:14:32.450 --> 00:14:40.250
repeat cycle? And the answer is it's 12
and you say 4 times 3 is 12. But 4 isn't

00:14:40.250 --> 00:14:47.540
a prime number! So why is it working out
OK again that you do just multiply them?

00:14:47.540 --> 00:14:55.490
The answer is that 3 and 4 are what's
called 'relatively prime'. Although 4 isn't

00:14:55.490 --> 00:15:01.190
a prime number it doesn't have any
factors in common with 3. So therefore

00:15:01.190 --> 00:15:06.320
relatively prime - sometimes called
co-prime. The story will go, then, on the

00:15:06.320 --> 00:15:11.090
numbers of teeth on these wheels, we
think, in this machine, they'll either be

00:15:11.090 --> 00:15:16.250
a prime number, or if they ran out of
prime numbers and the prime

00:15:16.250 --> 00:15:21.500
number of teeth was getting a bit big, the
next best thing - because it is safe - is to

00:15:21.500 --> 00:15:27.300
use relatively prime numbers.
And in the long run we will find

00:15:27.300 --> 00:15:32.430
in this [Lorenz] thing we're going to talk about,
that one of the cogs has got 26 teeth on it,

00:15:32.430 --> 00:15:39.420
which is not prime but it's 2 times
13. So - so long as that has no factors in

00:15:39.420 --> 00:15:47.069
common with anything else that's equally
safe. So this, then, was the backdrop of

00:15:47.069 --> 00:15:51.120
what they were expecting - what Bill Tutte
was expecting - it was that there would be

00:15:51.120 --> 00:15:56.339
a machine probably with several cogs in
it of some sort and the prime numbers of

00:15:56.339 --> 00:16:01.110
teeth would probably be involved. So,
remembering what Gerry Morgan had said

00:16:01.110 --> 00:16:05.939
to him about this - that one of these
positions had only got 23

00:16:05.939 --> 00:16:14.550
possible alphabetic characters all the
rest had 25 - he said OK what about the

00:16:14.550 --> 00:16:20.910
product of 23 by 25? There aren't any
factors in common, you see, 23 is prime.

00:16:20.910 --> 00:16:25.410
"Tell you what I'll do", he said "rather than
worrying about the whole character let me

00:16:25.410 --> 00:16:31.230
just look at the leftmost stream of
bits in all these characters". Now, I would

00:16:31.230 --> 00:16:35.819
call that bitstream 1. What they did at
Bletchley Park was they called it 'impulse 1'.

00:16:35.819 --> 00:16:42.569
What I'm talking about is the stream
of bits from all of the characters, like

00:16:42.569 --> 00:16:46.680
y'know, the bit that's in the number one
position over all characters in the

00:16:46.680 --> 00:16:51.180
message, from one to five, left to right.
He started off with what he regarded as

00:16:51.180 --> 00:16:56.730
bitstream 1, the leftmost one.
He said: "remembering my training which

00:16:56.730 --> 00:17:03.360
said if you think there's going to be
repeats have a look for them?" And he said:

00:17:03.360 --> 00:17:08.209
"Well, why not do two at once? If I do 23
times 25 I might be able to spot

00:17:08.209 --> 00:17:16.409
vertical runs happening every 23, if I
write them out in a block. I might see

00:17:16.409 --> 00:17:22.620
them at 25 because they're not going to
interfere, they're relatively prime. So, on an

00:17:22.620 --> 00:17:28.530
enormous sheet of paper and it doesn't matter 
whether it's Turing, Bill Tutte  or a host of

00:17:28.530 --> 00:17:33.510
other workers at Bletchley Park, they
used acres of big sheets of paper,

00:17:33.510 --> 00:17:36.500
divided up into squares, to make notes on. 
And he said:

00:17:36.500 --> 00:17:44.750
"I wrote it out along a great long strip;
575 bits then another 575 then another 575.

00:17:44.750 --> 00:17:49.730
And, don't forget. this intercept was 4000 characters.

00:17:49.730 --> 00:17:58.370
So, he ended up with six and a half huge
long rows - all on this combined period of 575.

00:17:58.370 --> 00:18:02.840
And he said I was expecting to
look down vertically and find every

00:18:02.840 --> 00:18:06.230
23 there was a bunch of 1s
or something like this, or every 25.

00:18:06.230 --> 00:18:13.910
He didn't see that looked at it
carefully and "... to my amazement" he said [as

00:18:13.910 --> 00:18:20.600
you look at it] I saw, going down these
five rows, a clear diagonal sequence of

00:18:20.600 --> 00:18:25.520
1s, going like that but down the
diagonal! What did that tell me? I'd got

00:18:25.520 --> 00:18:28.610
the wrong period it wasn't 575, it was 574".

00:18:28.610 --> 00:18:36.380
41 is a [prime] factor of 574.
So, as he says in his paper, if people say

00:18:36.380 --> 00:18:39.920
this genius Bill Tutte was straight on
to spotting 23 and 25

00:18:39.920 --> 00:18:46.090
and it was the first thing he found ... No, he
didn't! He went off down the wrong trail

00:18:46.090 --> 00:18:52.850
temporarily but accidentally, with sheer
pure luck, found that the number 1 stream

00:18:52.850 --> 00:18:59.090
was having its 1s and 0s
that were added to it [and] was generated by a

00:18:59.090 --> 00:19:05.900
wheel, probably, with a periodicity of 41.
But the Germans wouldn't be daft enough

00:19:05.900 --> 00:19:10.310
to make sure there's a blindingly
obvious repeat every 41. There'll

00:19:10.310 --> 00:19:15.980
be 'messing about' going on behind the
scenes. It will be 41 but it will

00:19:15.980 --> 00:19:20.870
perhaps be disguised. But maybe they
didn't totally succeed in disguising it enough.

00:19:20.870 --> 00:19:27.530
Armed with 41 what he then did
[he] said right I'm gonna write down all of

00:19:27.530 --> 00:19:35.000
these sequences now, not on a 575
grid but on a grid of 41. So he

00:19:35.000 --> 00:19:40.130
writes out this impulse stream of 1s
and 0s but the tradition at Bletchley

00:19:40.130 --> 00:19:45.360
was to use '.' for 0 and 'x' for 1. 
Tutte says he can't understand why they did this.

00:19:45.360 --> 00:19:49.200
Other people say " ...  it's all very
well, Bill, for you mathematicians, wanting

00:19:49.200 --> 00:19:54.030
1s and 0s but I find patterns
easier to spot with dots and crosses".

00:19:54.030 --> 00:20:00.120
I think I agree, actually. And when he put
out all these impulses - all 4,000 [per stream] of them -

00:20:00.120 --> 00:20:07.620
on a grid 41 across, you suddenly find
that - not on every row but on quite a few

00:20:07.620 --> 00:20:13.500
of them - there are certain patterns that
repeat. So the message from that is 'Yes,

00:20:13.500 --> 00:20:19.320
there is a wheel with 41 teeth involved 
but there's almost certainly

00:20:19.320 --> 00:20:24.690
some extra stage where it's trying to
disguise what's going on. That might be

00:20:24.690 --> 00:20:28.980
another wheel with different teeth or
something's going on. It's not pure and

00:20:28.980 --> 00:20:33.840
simple. It wouldn't be - because it'd be
dead easy to decrypt if it was. But there

00:20:33.840 --> 00:20:41.520
is a sneaky suspicion 41 was involved.
So, Bill Tutte tells the rest of the

00:20:41.520 --> 00:20:45.840
Research Section who piled in and helped. Because
what he points out - the next obvious thing to

00:20:45.840 --> 00:20:49.049
do is look at the number 2 stream, look
at the number 3 stream look at

00:20:49.049 --> 00:20:52.799
number 4 stream, look at the number five
stream. And when we've worked out what

00:20:52.799 --> 00:20:57.330
the initial wheels - how many teeth
they've got on - then we can take that

00:20:57.330 --> 00:21:03.059
away and start looking to see if we can
figure out how the excess stuff, that's

00:21:03.059 --> 00:21:07.980
trying to distort it, gets generated. And
to cut a very long story very short,

00:21:07.980 --> 00:21:15.390
after a few weeks work of probably 10
or 11 people, what they finally came

00:21:15.390 --> 00:21:21.210
up with was in this diagram here. They
decided that initially your stream from

00:21:21.210 --> 00:21:27.240
your teleprinter was put through 5
distinct cogs, one for each bitstream or 'impulse'.

00:21:27.240 --> 00:21:33.150
The numbers of teeth were 41, 31, 29, 26, 23

00:21:33.150 --> 00:21:39.120
So, as Tutte says, " ... eventually
if I'd not discovered the 41, I

00:21:39.120 --> 00:21:43.230
would have proved what a genius I was
because 23 *is* there. It's just that it's

00:21:43.230 --> 00:21:47.820
on stream 5, not stream 1. But it is
there, right! And then they managed to

00:21:47.820 --> 00:21:53.070
discover that the obscuring mechanism
was another set of wheels which

00:21:53.070 --> 00:21:55.919
sometimes turned on by one place and
sometimes didn't.

00:21:55.919 --> 00:22:04.740
And these have got 43 47 51 53 and 59
teeth. And the eagle-eyed among you who

00:22:04.740 --> 00:22:09.570
watch every single morsel of Numberphile
will immediately jump on our necks and

00:22:09.570 --> 00:22:15.299
say 26 isn't prime. No - it isn't. It's 2
times 13 but it's relatively prime to

00:22:15.299 --> 00:22:22.470
everything else. Equally 51 isn't prime,
it's 3 times 17. Fine. So, if you use other

00:22:22.470 --> 00:22:27.299
"relative prime-nesses" you can't have
2s or 3s involved in their factors

00:22:27.299 --> 00:22:31.200
because they're taken up now. But that
was it. These two extra wheels at the

00:22:31.200 --> 00:22:36.500
bottom? There was another thing: they
could sort of understand why 10 wheels -

00:22:36.500 --> 00:22:43.620
two sets of of 5. Well what do the
other two do? The other two - in a very

00:22:43.620 --> 00:22:48.630
complicated way - determine whether this
second set of wheels moves or stays

00:22:48.630 --> 00:22:53.010
still. And I think the Germans were
hoping that by that mechanism they would

00:22:53.010 --> 00:22:57.210
confuse the Allied decryption effort
even more. Because the first set always

00:22:57.210 --> 00:23:01.049
move. You do a character-worth it'll click 
and they [the cogs] all move on. But they've

00:23:01.049 --> 00:23:05.610
got different numbers of teeth on them.
[The] second set sometimes moves, sometimes

00:23:05.610 --> 00:23:10.289
doesn't. By the end of the war the
feeling was from people like Jack Good

00:23:10.289 --> 00:23:15.149
and Donald Michie, who had a look at this
statistically. They said: you know by the

00:23:15.149 --> 00:23:20.039
time you got used to looking for whether
the wheels were moving - a 'stutter' we call

00:23:20.039 --> 00:23:25.679
it - you got to be able to 'spot the
stutter' and it was such a landmark, once

00:23:25.679 --> 00:23:30.600
you were really familiar with it, that
the Germans actually did themselves a

00:23:30.600 --> 00:23:36.299
disfavour. They'd have been better off not
to put it in. They managed to get all of

00:23:36.299 --> 00:23:42.330
that structure out of it. What they
realized was their next big task was to

00:23:42.330 --> 00:23:50.010
say: OK - we know the number of teeth on
each wheel but what we don't know is the

00:23:50.010 --> 00:23:55.890
patterns on the wheels of 1s and
0s that they are contributing to the

00:23:55.890 --> 00:24:03.990
exclusive-OR key characters. So, that was
another great long journey because they

00:24:03.990 --> 00:24:08.800
knew that, on the Hagelin machine, so
it's probably similar on the

00:24:08.800 --> 00:24:13.930
Tunny machine, that on every cog there
was a little slider which could set up

00:24:13.930 --> 00:24:18.520
or down. And in one position it
contributed a 0, but if you put it

00:24:18.520 --> 00:24:24.940
down it always contributed a 1. So, can
you imagine going ... the task of

00:24:24.940 --> 00:24:30.940
setting this wretched thing up! You've
got all of these cogs with all these

00:24:30.940 --> 00:24:34.960
teeth and if you add up the total number of
teeth of several hundred. And every one

00:24:34.960 --> 00:24:39.390
of these positions has got to be set up
with a 1 or a 0, according to this

00:24:39.390 --> 00:24:43.780
instruction manual. Do you think they
changed them every day? Not a chance!

00:24:43.780 --> 00:24:48.070
They [initially] only changed the wheel patterns
once a month.

00:24:48.070 --> 00:24:51.940
You've got the Indicator that tells you what the 
[initial] wheel settings are. You can work

00:24:51.940 --> 00:24:55.240
for a whole month on trying to work out
what the wheel patterns are. Once you've

00:24:55.240 --> 00:24:59.950
got it you can decrypt like mad. What
would happen if they ever stopped [started] saying:

00:24:59.950 --> 00:25:04.930
Let's not put the indicator out. It only
helps them. [Actually] it doesn't help them, it's

00:25:04.930 --> 00:25:09.100
totally secure. But it's pointless to put
it out. Just like on Enigma. So, in the

00:25:09.100 --> 00:25:14.290
middle of - early to middle of - 1942 they
stopped putting out the Indicator.

00:25:14.290 --> 00:25:21.460
Oh dear! Calamity.

