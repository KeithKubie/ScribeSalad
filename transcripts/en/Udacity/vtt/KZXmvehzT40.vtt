WEBVTT
Kind: captions
Language: en

00:00:00.180 --> 00:00:01.370
Alright Michael.

00:00:01.370 --> 00:00:01.980
&gt;&gt; So.

00:00:01.980 --> 00:00:02.810
&gt;&gt; You think you got an answer?

00:00:02.810 --> 00:00:04.560
&gt;&gt; Yeah. It's interesting. So I guess it

00:00:04.560 --> 00:00:06.300
really does make some intuitive sense that the

00:00:06.300 --> 00:00:09.090
line is really, really nailed down by the

00:00:09.090 --> 00:00:11.270
points close to it. And the points that are

00:00:11.270 --> 00:00:12.980
far away from it, really don't have any

00:00:12.980 --> 00:00:15.870
influence. So I would put non zero, sorry, I

00:00:15.870 --> 00:00:18.590
would put zero alphas on the lower left

00:00:18.590 --> 00:00:22.800
hand minus and the, one of the upper pluses.

00:00:22.800 --> 00:00:25.990
&gt;&gt; Yes, and, you know, I haven't actually worked out the answer here.

00:00:25.990 --> 00:00:28.630
But, both of these pluses probably don't matter.

00:00:28.630 --> 00:00:31.740
Certainly, this one doesn't. certainly, this minus doesn't

00:00:31.740 --> 00:00:34.372
matter. Maybe this one doesn't matter, either. But

00:00:34.372 --> 00:00:36.910
the point that she raises, is exactly right. The,

00:00:36.910 --> 00:00:38.640
the points that are far away from the

00:00:38.640 --> 00:00:41.980
decision boundary, and can't be used to define

00:00:41.980 --> 00:00:45.190
the contours of that decision boundary. Don't matter,

00:00:45.190 --> 00:00:47.620
whether they're plus or minus. Does that make sense?

00:00:47.620 --> 00:00:48.380
&gt;&gt; Yeah, cool.

00:00:48.380 --> 00:00:50.310
&gt;&gt; Does this remind you of anything?

00:00:50.310 --> 00:00:51.960
&gt;&gt; Nearest neighbors?

00:00:51.960 --> 00:00:53.390
&gt;&gt; That's almost always the answer. Why

00:00:53.390 --> 00:00:55.165
does it remind you of nearest neighbors?

00:00:55.165 --> 00:00:56.860
&gt;&gt; because only the local points matter?

00:00:56.860 --> 00:00:58.130
&gt;&gt; Oh, that's a good answer. I was going to

00:00:58.130 --> 00:00:59.420
have a different answer. Know what my answer was?

00:00:59.420 --> 00:00:59.850
&gt;&gt; What?

00:00:59.850 --> 00:01:02.690
&gt;&gt; It's like KNN except that you already

00:01:02.690 --> 00:01:04.750
done the work of figuring out which points actually

00:01:04.750 --> 00:01:08.210
matter. So you don't have to keep all of them. You can throw away some of them.

00:01:08.210 --> 00:01:10.450
&gt;&gt; Oh, I see. So it doesn't just take the nearest ones, it actually

00:01:10.450 --> 00:01:13.380
does this complicated quadratic program to figure

00:01:13.380 --> 00:01:14.980
out which ones are actually going to contribute.

00:01:14.980 --> 00:01:17.230
&gt;&gt; Right, so it's just another way of thinking

00:01:17.230 --> 00:01:20.180
about instance-based learning, except that rather than

00:01:20.180 --> 00:01:21.940
being completely lazy, you put a lot,

00:01:21.940 --> 00:01:24.360
some energy into figuring out which points

00:01:24.360 --> 00:01:27.590
you could actually stand to throw away.

00:01:27.590 --> 00:01:27.920
&gt;&gt; Interesting.

00:01:27.920 --> 00:01:30.350
&gt;&gt; Okay. Yeah, I think that's kind of interesting. I think it's kind of

00:01:30.350 --> 00:01:33.420
cool. So good. So you got that. Well let me show you one more thing,

00:01:33.420 --> 00:01:38.110
Michael. Alright, so you got this notion of there being very few of the, the

00:01:38.110 --> 00:01:40.460
support vectors that you need, but I

00:01:40.460 --> 00:01:43.030
want to point out something very important about

00:01:43.030 --> 00:01:44.740
some of the parameters in this equation. So

00:01:44.740 --> 00:01:46.310
we just got through talking about the alphas,

00:01:46.310 --> 00:01:50.006
right? Basically the alphas say, pay attention to

00:01:50.006 --> 00:01:52.240
this data point or not. But if you look

00:01:52.240 --> 00:01:56.930
carefully at this equation, the only place where the xs come into play with one

00:01:56.930 --> 00:02:02.034
another is here. So Michael, generally speaking,

00:02:02.034 --> 00:02:08.120
given a couple of vectors, what does xi transpose xj actually mean?

00:02:08.120 --> 00:02:09.710
&gt;&gt; It's the dot product.

00:02:09.710 --> 00:02:11.200
&gt;&gt; Right, and what is the dot product?

00:02:11.200 --> 00:02:14.570
&gt;&gt; It's like the projection of one of those onto the other right?

00:02:14.570 --> 00:02:16.270
&gt;&gt; Yeah, and that ends up giving you what?

00:02:16.270 --> 00:02:17.160
&gt;&gt; A number.

00:02:17.160 --> 00:02:20.630
&gt;&gt; Yes. Does that number kind of represent anything? And if you

00:02:20.630 --> 00:02:23.210
say the dot product, I will climb through the screen and kill you.

00:02:23.210 --> 00:02:25.560
&gt;&gt; What about the length of the projection.

00:02:25.560 --> 00:02:28.276
&gt;&gt; Right, and what does that kind of represent for you?

00:02:29.430 --> 00:02:33.470
&gt;&gt; Well, I guess in particular if the x's are,

00:02:33.470 --> 00:02:34.640
well if there are five going to each

00:02:34.640 --> 00:02:36.600
other than it's going to be zero. But if they

00:02:36.600 --> 00:02:39.160
kind of point in the same direction, they're going to be,

00:02:39.160 --> 00:02:40.790
it's going to be a large value, and if they

00:02:40.790 --> 00:02:44.380
put in opposite directions it's going to be a negative

00:02:44.380 --> 00:02:46.960
value. So it's sort of kind of indicating how

00:02:46.960 --> 00:02:49.300
much they're pointing in the same direction. So, I

00:02:49.300 --> 00:02:51.615
guess it could be a measure of their similarity.

00:02:51.615 --> 00:02:54.520
&gt;&gt; Rightl, I think that is, that is exactly right. This is the kind of

00:02:54.520 --> 00:02:59.630
a notion of similarity. So if you look at this equation, what it basically says.

00:02:59.630 --> 00:03:02.860
Find all pairs of points. Figure out which ones matter

00:03:02.860 --> 00:03:07.970
for, for defining your decision boundry. And then think about how

00:03:07.970 --> 00:03:10.920
they relate to one another in terms of their output

00:03:10.920 --> 00:03:14.320
labels. With respect to how similar they are to one another.

