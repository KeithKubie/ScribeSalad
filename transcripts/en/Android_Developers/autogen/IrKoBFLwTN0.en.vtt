WEBVTT
Kind: captions
Language: en

00:00:02.880 --> 00:00:06.190
[Music]

00:00:06.190 --> 00:00:06.200
[Music]
 

00:00:06.200 --> 00:00:09.680
[Music]
hi everyone my name is Samir Kataria and

00:00:09.680 --> 00:00:09.690
hi everyone my name is Samir Kataria and
 

00:00:09.690 --> 00:00:11.650
hi everyone my name is Samir Kataria and
I'm an engineer on the Android team I

00:00:11.650 --> 00:00:11.660
I'm an engineer on the Android team I
 

00:00:11.660 --> 00:00:14.060
I'm an engineer on the Android team I
work on architecture components and

00:00:14.060 --> 00:00:14.070
work on architecture components and
 

00:00:14.070 --> 00:00:15.350
work on architecture components and
today I want to talk to you about a new

00:00:15.350 --> 00:00:15.360
today I want to talk to you about a new
 

00:00:15.360 --> 00:00:17.510
today I want to talk to you about a new
library we have called work manager and

00:00:17.510 --> 00:00:17.520
library we have called work manager and
 

00:00:17.520 --> 00:00:19.670
library we have called work manager and
background processing in general on

00:00:19.670 --> 00:00:19.680
background processing in general on
 

00:00:19.680 --> 00:00:23.840
background processing in general on
Android so let's talk about background

00:00:23.840 --> 00:00:23.850
Android so let's talk about background
 

00:00:23.850 --> 00:00:28.609
Android so let's talk about background
processing in 2018 what are we trying to

00:00:28.609 --> 00:00:28.619
processing in 2018 what are we trying to
 

00:00:28.619 --> 00:00:30.650
processing in 2018 what are we trying to
do these days just this morning I was

00:00:30.650 --> 00:00:30.660
do these days just this morning I was
 

00:00:30.660 --> 00:00:32.030
do these days just this morning I was
trying to send a picture of my lovely

00:00:32.030 --> 00:00:32.040
trying to send a picture of my lovely
 

00:00:32.040 --> 00:00:33.860
trying to send a picture of my lovely
wife and my beautiful son to the rest of

00:00:33.860 --> 00:00:33.870
wife and my beautiful son to the rest of
 

00:00:33.870 --> 00:00:36.380
wife and my beautiful son to the rest of
my family so that's an example of

00:00:36.380 --> 00:00:36.390
my family so that's an example of
 

00:00:36.390 --> 00:00:38.240
my family so that's an example of
background processing we're also sending

00:00:38.240 --> 00:00:38.250
background processing we're also sending
 

00:00:38.250 --> 00:00:40.880
background processing we're also sending
logs syncing data processing that data

00:00:40.880 --> 00:00:40.890
logs syncing data processing that data
 

00:00:40.890 --> 00:00:42.920
logs syncing data processing that data
all of this work is being done in the

00:00:42.920 --> 00:00:42.930
all of this work is being done in the
 

00:00:42.930 --> 00:00:47.000
all of this work is being done in the
background and on Android there's a lot

00:00:47.000 --> 00:00:47.010
background and on Android there's a lot
 

00:00:47.010 --> 00:00:49.180
background and on Android there's a lot
of different ways you can do this work

00:00:49.180 --> 00:00:49.190
of different ways you can do this work
 

00:00:49.190 --> 00:00:51.590
of different ways you can do this work
here's a lot of them you can do things

00:00:51.590 --> 00:00:51.600
here's a lot of them you can do things
 

00:00:51.600 --> 00:00:53.900
here's a lot of them you can do things
on threats and executors using job

00:00:53.900 --> 00:00:53.910
on threats and executors using job
 

00:00:53.910 --> 00:00:55.490
on threats and executors using job
scheduler alarmmanager

00:00:55.490 --> 00:00:55.500
scheduler alarmmanager
 

00:00:55.500 --> 00:00:59.000
scheduler alarmmanager
async tasks etc which one should you use

00:00:59.000 --> 00:00:59.010
async tasks etc which one should you use
 

00:00:59.010 --> 00:01:03.170
async tasks etc which one should you use
and when should you use it meanwhile

00:01:03.170 --> 00:01:03.180
and when should you use it meanwhile
 

00:01:03.180 --> 00:01:04.850
and when should you use it meanwhile
Android also has a lot of battery

00:01:04.850 --> 00:01:04.860
Android also has a lot of battery
 

00:01:04.860 --> 00:01:06.679
Android also has a lot of battery
optimizations that we've introduced over

00:01:06.679 --> 00:01:06.689
optimizations that we've introduced over
 

00:01:06.689 --> 00:01:07.730
optimizations that we've introduced over
the last few years

00:01:07.730 --> 00:01:07.740
the last few years
 

00:01:07.740 --> 00:01:09.710
the last few years
for example the introduced doze mode in

00:01:09.710 --> 00:01:09.720
for example the introduced doze mode in
 

00:01:09.720 --> 00:01:11.690
for example the introduced doze mode in
marshmallow if you've been following

00:01:11.690 --> 00:01:11.700
marshmallow if you've been following
 

00:01:11.700 --> 00:01:14.780
marshmallow if you've been following
Android P we've had app standby buckets

00:01:14.780 --> 00:01:14.790
Android P we've had app standby buckets
 

00:01:14.790 --> 00:01:16.969
Android P we've had app standby buckets
in Oreo we restricted background apps

00:01:16.969 --> 00:01:16.979
in Oreo we restricted background apps
 

00:01:16.979 --> 00:01:20.240
in Oreo we restricted background apps
background services so all of these

00:01:20.240 --> 00:01:20.250
background services so all of these
 

00:01:20.250 --> 00:01:22.460
background services so all of these
things have to be taken care of as a

00:01:22.460 --> 00:01:22.470
things have to be taken care of as a
 

00:01:22.470 --> 00:01:26.179
things have to be taken care of as a
developer and finally we always have to

00:01:26.179 --> 00:01:26.189
developer and finally we always have to
 

00:01:26.189 --> 00:01:28.160
developer and finally we always have to
worry about backwards compatibility so

00:01:28.160 --> 00:01:28.170
worry about backwards compatibility so
 

00:01:28.170 --> 00:01:30.649
worry about backwards compatibility so
if you want to reach 90% of Android

00:01:30.649 --> 00:01:30.659
if you want to reach 90% of Android
 

00:01:30.659 --> 00:01:33.230
if you want to reach 90% of Android
devices you want to at least have a min

00:01:33.230 --> 00:01:33.240
devices you want to at least have a min
 

00:01:33.240 --> 00:01:39.140
devices you want to at least have a min
SDK of KitKat so given all of this what

00:01:39.140 --> 00:01:39.150
SDK of KitKat so given all of this what
 

00:01:39.150 --> 00:01:40.969
SDK of KitKat so given all of this what
tools you use and when do you use them

00:01:40.969 --> 00:01:40.979
tools you use and when do you use them
 

00:01:40.979 --> 00:01:43.910
tools you use and when do you use them
and the trick behind this is that you

00:01:43.910 --> 00:01:43.920
and the trick behind this is that you
 

00:01:43.920 --> 00:01:45.530
and the trick behind this is that you
have to look at the types of background

00:01:45.530 --> 00:01:45.540
have to look at the types of background
 

00:01:45.540 --> 00:01:48.200
have to look at the types of background
work that you're doing I like to split

00:01:48.200 --> 00:01:48.210
work that you're doing I like to split
 

00:01:48.210 --> 00:01:51.109
work that you're doing I like to split
this up into two axes the vertical axis

00:01:51.109 --> 00:01:51.119
this up into two axes the vertical axis
 

00:01:51.119 --> 00:01:54.830
this up into two axes the vertical axis
here is the timing of the work does the

00:01:54.830 --> 00:01:54.840
here is the timing of the work does the
 

00:01:54.840 --> 00:01:56.749
here is the timing of the work does the
work need to be done right when it's

00:01:56.749 --> 00:01:56.759
work need to be done right when it's
 

00:01:56.759 --> 00:01:58.730
work need to be done right when it's
specified or can it wait for a little

00:01:58.730 --> 00:01:58.740
specified or can it wait for a little
 

00:01:58.740 --> 00:02:02.389
specified or can it wait for a little
bit so that if your app and your device

00:02:02.389 --> 00:02:02.399
bit so that if your app and your device
 

00:02:02.399 --> 00:02:04.730
bit so that if your app and your device
enters doze mode you can still do it

00:02:04.730 --> 00:02:04.740
enters doze mode you can still do it
 

00:02:04.740 --> 00:02:08.180
enters doze mode you can still do it
after that also on the horizontal axis

00:02:08.180 --> 00:02:08.190
after that also on the horizontal axis
 

00:02:08.190 --> 00:02:10.940
after that also on the horizontal axis
here how important is the work does the

00:02:10.940 --> 00:02:10.950
here how important is the work does the
 

00:02:10.950 --> 00:02:13.640
here how important is the work does the
work only need to be done while your

00:02:13.640 --> 00:02:13.650
work only need to be done while your
 

00:02:13.650 --> 00:02:15.860
work only need to be done while your
in the foreground or does it absolutely

00:02:15.860 --> 00:02:15.870
in the foreground or does it absolutely
 

00:02:15.870 --> 00:02:18.410
in the foreground or does it absolutely
need to be done at some point so for

00:02:18.410 --> 00:02:18.420
need to be done at some point so for
 

00:02:18.420 --> 00:02:21.770
need to be done at some point so for
example if you're taking a bitmap and

00:02:21.770 --> 00:02:21.780
example if you're taking a bitmap and
 

00:02:21.780 --> 00:02:23.479
example if you're taking a bitmap and
you decide that you want to extract a

00:02:23.479 --> 00:02:23.489
you decide that you want to extract a
 

00:02:23.489 --> 00:02:25.670
you decide that you want to extract a
color from it and update your UI with it

00:02:25.670 --> 00:02:25.680
color from it and update your UI with it
 

00:02:25.680 --> 00:02:27.830
color from it and update your UI with it
that's an example of foreground only

00:02:27.830 --> 00:02:27.840
that's an example of foreground only
 

00:02:27.840 --> 00:02:30.140
that's an example of foreground only
work you don't care about it once the

00:02:30.140 --> 00:02:30.150
work you don't care about it once the
 

00:02:30.150 --> 00:02:32.690
work you don't care about it once the
user hits home or back that work is

00:02:32.690 --> 00:02:32.700
user hits home or back that work is
 

00:02:32.700 --> 00:02:34.849
user hits home or back that work is
irrelevant meanwhile if you're sending

00:02:34.849 --> 00:02:34.859
irrelevant meanwhile if you're sending
 

00:02:34.859 --> 00:02:36.830
irrelevant meanwhile if you're sending
logs you always want that to happen

00:02:36.830 --> 00:02:36.840
logs you always want that to happen
 

00:02:36.840 --> 00:02:38.300
logs you always want that to happen
that's an example of guaranteed

00:02:38.300 --> 00:02:38.310
that's an example of guaranteed
 

00:02:38.310 --> 00:02:42.050
that's an example of guaranteed
execution so for things that are best

00:02:42.050 --> 00:02:42.060
execution so for things that are best
 

00:02:42.060 --> 00:02:44.179
execution so for things that are best
effort you really want to use things

00:02:44.179 --> 00:02:44.189
effort you really want to use things
 

00:02:44.189 --> 00:02:47.830
effort you really want to use things
like thread pools rxjava or coroutines

00:02:47.830 --> 00:02:47.840
like thread pools rxjava or coroutines
 

00:02:47.840 --> 00:02:51.080
like thread pools rxjava or coroutines
for things that require exact timing and

00:02:51.080 --> 00:02:51.090
for things that require exact timing and
 

00:02:51.090 --> 00:02:53.660
for things that require exact timing and
guaranteed execution you want to use a

00:02:53.660 --> 00:02:53.670
guaranteed execution you want to use a
 

00:02:53.670 --> 00:02:55.369
guaranteed execution you want to use a
foreground service so an example of this

00:02:55.369 --> 00:02:55.379
foreground service so an example of this
 

00:02:55.379 --> 00:02:57.410
foreground service so an example of this
would be that you're the user hits a

00:02:57.410 --> 00:02:57.420
would be that you're the user hits a
 

00:02:57.420 --> 00:02:59.720
would be that you're the user hits a
button and you want to process a

00:02:59.720 --> 00:02:59.730
button and you want to process a
 

00:02:59.730 --> 00:03:02.599
button and you want to process a
transaction and update the UI and the

00:03:02.599 --> 00:03:02.609
transaction and update the UI and the
 

00:03:02.609 --> 00:03:04.789
transaction and update the UI and the
state of the app based on that that

00:03:04.789 --> 00:03:04.799
state of the app based on that that
 

00:03:04.799 --> 00:03:06.229
state of the app based on that that
really needs a foreground service that

00:03:06.229 --> 00:03:06.239
really needs a foreground service that
 

00:03:06.239 --> 00:03:07.670
really needs a foreground service that
needs to happen right then your app

00:03:07.670 --> 00:03:07.680
needs to happen right then your app
 

00:03:07.680 --> 00:03:09.589
needs to happen right then your app
cannot be killed by the system while

00:03:09.589 --> 00:03:09.599
cannot be killed by the system while
 

00:03:09.599 --> 00:03:12.979
cannot be killed by the system while
that's happening this fourth category is

00:03:12.979 --> 00:03:12.989
that's happening this fourth category is
 

00:03:12.989 --> 00:03:15.440
that's happening this fourth category is
very interesting so you want guaranteed

00:03:15.440 --> 00:03:15.450
very interesting so you want guaranteed
 

00:03:15.450 --> 00:03:17.569
very interesting so you want guaranteed
execution but you're okay if it happens

00:03:17.569 --> 00:03:17.579
execution but you're okay if it happens
 

00:03:17.579 --> 00:03:19.369
execution but you're okay if it happens
later or doze mode can kick in and

00:03:19.369 --> 00:03:19.379
later or doze mode can kick in and
 

00:03:19.379 --> 00:03:21.830
later or doze mode can kick in and
there's a variety of ways to solve it on

00:03:21.830 --> 00:03:21.840
there's a variety of ways to solve it on
 

00:03:21.840 --> 00:03:25.789
there's a variety of ways to solve it on
your API as you'll use job scheduler if

00:03:25.789 --> 00:03:25.799
your API as you'll use job scheduler if
 

00:03:25.799 --> 00:03:27.439
your API as you'll use job scheduler if
you want to go a little further back you

00:03:27.439 --> 00:03:27.449
you want to go a little further back you
 

00:03:27.449 --> 00:03:29.210
you want to go a little further back you
can use firebase job dispatcher to do

00:03:29.210 --> 00:03:29.220
can use firebase job dispatcher to do
 

00:03:29.220 --> 00:03:31.939
can use firebase job dispatcher to do
that and if you don't have Google Play

00:03:31.939 --> 00:03:31.949
that and if you don't have Google Play
 

00:03:31.949 --> 00:03:33.619
that and if you don't have Google Play
services you'll probably end up using

00:03:33.619 --> 00:03:33.629
services you'll probably end up using
 

00:03:33.629 --> 00:03:35.479
services you'll probably end up using
alarm manager and broadcast receivers

00:03:35.479 --> 00:03:35.489
alarm manager and broadcast receivers
 

00:03:35.489 --> 00:03:38.240
alarm manager and broadcast receivers
and if you want to do target all of

00:03:38.240 --> 00:03:38.250
and if you want to do target all of
 

00:03:38.250 --> 00:03:40.309
and if you want to do target all of
those things well you'll use some mix of

00:03:40.309 --> 00:03:40.319
those things well you'll use some mix of
 

00:03:40.319 --> 00:03:42.140
those things well you'll use some mix of
these four things and that's a lot of

00:03:42.140 --> 00:03:42.150
these four things and that's a lot of
 

00:03:42.150 --> 00:03:45.740
these four things and that's a lot of
API is a lot of work to be done work

00:03:45.740 --> 00:03:45.750
API is a lot of work to be done work
 

00:03:45.750 --> 00:03:48.619
API is a lot of work to be done work
manager falls here it's guaranteed

00:03:48.619 --> 00:03:48.629
manager falls here it's guaranteed
 

00:03:48.629 --> 00:03:53.449
manager falls here it's guaranteed
execution that's deferral it's a work

00:03:53.449 --> 00:03:53.459
execution that's deferral it's a work
 

00:03:53.459 --> 00:03:54.800
execution that's deferral it's a work
manager let's talk a little bit about

00:03:54.800 --> 00:03:54.810
manager let's talk a little bit about
 

00:03:54.810 --> 00:03:56.930
manager let's talk a little bit about
its features I just mentioned guarantee

00:03:56.930 --> 00:03:56.940
its features I just mentioned guarantee
 

00:03:56.940 --> 00:03:59.719
its features I just mentioned guarantee
execution is also constrained aware so

00:03:59.719 --> 00:03:59.729
execution is also constrained aware so
 

00:03:59.729 --> 00:04:01.580
execution is also constrained aware so
if I want to upload that photo that I

00:04:01.580 --> 00:04:01.590
if I want to upload that photo that I
 

00:04:01.590 --> 00:04:03.949
if I want to upload that photo that I
talked about I only want to do it when I

00:04:03.949 --> 00:04:03.959
talked about I only want to do it when I
 

00:04:03.959 --> 00:04:06.399
talked about I only want to do it when I
have a network that's the constraint

00:04:06.399 --> 00:04:06.409
have a network that's the constraint
 

00:04:06.409 --> 00:04:08.869
have a network that's the constraint
it's also respectful of the system

00:04:08.869 --> 00:04:08.879
it's also respectful of the system
 

00:04:08.879 --> 00:04:10.729
it's also respectful of the system
background restrictions so if your app

00:04:10.729 --> 00:04:10.739
background restrictions so if your app
 

00:04:10.739 --> 00:04:13.339
background restrictions so if your app
is in doze mode it won't execute it

00:04:13.339 --> 00:04:13.349
is in doze mode it won't execute it
 

00:04:13.349 --> 00:04:15.229
is in doze mode it won't execute it
won't wake up your phone just to do this

00:04:15.229 --> 00:04:15.239
won't wake up your phone just to do this
 

00:04:15.239 --> 00:04:18.800
won't wake up your phone just to do this
work it's backwards compatible with or

00:04:18.800 --> 00:04:18.810
work it's backwards compatible with or
 

00:04:18.810 --> 00:04:21.769
work it's backwards compatible with or
without Google Play services the API is

00:04:21.769 --> 00:04:21.779
without Google Play services the API is
 

00:04:21.779 --> 00:04:24.379
without Google Play services the API is
variable so if you have in cute some

00:04:24.379 --> 00:04:24.389
variable so if you have in cute some
 

00:04:24.389 --> 00:04:26.420
variable so if you have in cute some
work you can actually check what is it

00:04:26.420 --> 00:04:26.430
work you can actually check what is it
 

00:04:26.430 --> 00:04:27.470
work you can actually check what is it
state is it running

00:04:27.470 --> 00:04:27.480
state is it running
 

00:04:27.480 --> 00:04:29.990
state is it running
now it has it succeeded or failed these

00:04:29.990 --> 00:04:30.000
now it has it succeeded or failed these
 

00:04:30.000 --> 00:04:31.520
now it has it succeeded or failed these
are things that you can find out with

00:04:31.520 --> 00:04:31.530
are things that you can find out with
 

00:04:31.530 --> 00:04:34.940
are things that you can find out with
work manager it's also chainable so you

00:04:34.940 --> 00:04:34.950
work manager it's also chainable so you
 

00:04:34.950 --> 00:04:37.460
work manager it's also chainable so you
can create drafts of work so you can

00:04:37.460 --> 00:04:37.470
can create drafts of work so you can
 

00:04:37.470 --> 00:04:39.650
can create drafts of work so you can
have work a depending on work B and C

00:04:39.650 --> 00:04:39.660
have work a depending on work B and C
 

00:04:39.660 --> 00:04:43.190
have work a depending on work B and C
which in turn depends on work D also

00:04:43.190 --> 00:04:43.200
which in turn depends on work D also
 

00:04:43.200 --> 00:04:45.590
which in turn depends on work D also
work managers optimistic so this means

00:04:45.590 --> 00:04:45.600
work managers optimistic so this means
 

00:04:45.600 --> 00:04:47.840
work managers optimistic so this means
that we will try to execute that work in

00:04:47.840 --> 00:04:47.850
that we will try to execute that work in
 

00:04:47.850 --> 00:04:49.790
that we will try to execute that work in
your process as soon as the constraints

00:04:49.790 --> 00:04:49.800
your process as soon as the constraints
 

00:04:49.800 --> 00:04:52.070
your process as soon as the constraints
are met without actually needing job

00:04:52.070 --> 00:04:52.080
are met without actually needing job
 

00:04:52.080 --> 00:04:54.290
are met without actually needing job
scheduler to intervene or call you out

00:04:54.290 --> 00:04:54.300
scheduler to intervene or call you out
 

00:04:54.300 --> 00:04:55.100
scheduler to intervene or call you out
and wake you up

00:04:55.100 --> 00:04:55.110
and wake you up
 

00:04:55.110 --> 00:04:56.840
and wake you up
it doesn't wait for job scheduler to

00:04:56.840 --> 00:04:56.850
it doesn't wait for job scheduler to
 

00:04:56.850 --> 00:04:58.610
it doesn't wait for job scheduler to
batch at work if your process is up and

00:04:58.610 --> 00:04:58.620
batch at work if your process is up and
 

00:04:58.620 --> 00:05:02.600
batch at work if your process is up and
running already so let's talk about a

00:05:02.600 --> 00:05:02.610
running already so let's talk about a
 

00:05:02.610 --> 00:05:03.740
running already so let's talk about a
little bit of the basics and talk

00:05:03.740 --> 00:05:03.750
little bit of the basics and talk
 

00:05:03.750 --> 00:05:08.030
little bit of the basics and talk
through the code so I just described the

00:05:08.030 --> 00:05:08.040
through the code so I just described the
 

00:05:08.040 --> 00:05:09.860
through the code so I just described the
example I want to upload that photo so

00:05:09.860 --> 00:05:09.870
example I want to upload that photo so
 

00:05:09.870 --> 00:05:12.140
example I want to upload that photo so
how would I do that using work manager

00:05:12.140 --> 00:05:12.150
how would I do that using work manager
 

00:05:12.150 --> 00:05:14.030
how would I do that using work manager
let's talk about the core classes

00:05:14.030 --> 00:05:14.040
let's talk about the core classes
 

00:05:14.040 --> 00:05:16.160
let's talk about the core classes
there's the worker class this is the

00:05:16.160 --> 00:05:16.170
there's the worker class this is the
 

00:05:16.170 --> 00:05:18.260
there's the worker class this is the
class that does the work this is where

00:05:18.260 --> 00:05:18.270
class that does the work this is where
 

00:05:18.270 --> 00:05:19.610
class that does the work this is where
you will write most of your business

00:05:19.610 --> 00:05:19.620
you will write most of your business
 

00:05:19.620 --> 00:05:22.250
you will write most of your business
logic and there's a work request class

00:05:22.250 --> 00:05:22.260
logic and there's a work request class
 

00:05:22.260 --> 00:05:25.010
logic and there's a work request class
which comes in two flavors one type work

00:05:25.010 --> 00:05:25.020
which comes in two flavors one type work
 

00:05:25.020 --> 00:05:26.750
which comes in two flavors one type work
requests or things that just need to be

00:05:26.750 --> 00:05:26.760
requests or things that just need to be
 

00:05:26.760 --> 00:05:28.670
requests or things that just need to be
done once in periodic work requests for

00:05:28.670 --> 00:05:28.680
done once in periodic work requests for
 

00:05:28.680 --> 00:05:31.790
done once in periodic work requests for
recurring work and these will both take

00:05:31.790 --> 00:05:31.800
recurring work and these will both take
 

00:05:31.800 --> 00:05:34.910
recurring work and these will both take
a worker I'll show you just now so

00:05:34.910 --> 00:05:34.920
a worker I'll show you just now so
 

00:05:34.920 --> 00:05:37.130
a worker I'll show you just now so
here's my upload photo worker it extends

00:05:37.130 --> 00:05:37.140
here's my upload photo worker it extends
 

00:05:37.140 --> 00:05:39.590
here's my upload photo worker it extends
the worker class and it overrides the do

00:05:39.590 --> 00:05:39.600
the worker class and it overrides the do
 

00:05:39.600 --> 00:05:42.050
the worker class and it overrides the do
work method this is the method that will

00:05:42.050 --> 00:05:42.060
work method this is the method that will
 

00:05:42.060 --> 00:05:43.760
work method this is the method that will
run in the background will take care of

00:05:43.760 --> 00:05:43.770
run in the background will take care of
 

00:05:43.770 --> 00:05:46.010
run in the background will take care of
that on the background thread you don't

00:05:46.010 --> 00:05:46.020
that on the background thread you don't
 

00:05:46.020 --> 00:05:49.040
that on the background thread you don't
need to put it in a background thread so

00:05:49.040 --> 00:05:49.050
need to put it in a background thread so
 

00:05:49.050 --> 00:05:51.230
need to put it in a background thread so
you simply do your work so in this case

00:05:51.230 --> 00:05:51.240
you simply do your work so in this case
 

00:05:51.240 --> 00:05:52.490
you simply do your work so in this case
we're off with the photo synchronously

00:05:52.490 --> 00:05:52.500
we're off with the photo synchronously
 

00:05:52.500 --> 00:05:54.890
we're off with the photo synchronously
and we return our results so in this

00:05:54.890 --> 00:05:54.900
and we return our results so in this
 

00:05:54.900 --> 00:05:58.070
and we return our results so in this
case let's say we succeeded and the

00:05:58.070 --> 00:05:58.080
case let's say we succeeded and the
 

00:05:58.080 --> 00:06:00.050
case let's say we succeeded and the
worker resulting I'm here has three

00:06:00.050 --> 00:06:00.060
worker resulting I'm here has three
 

00:06:00.060 --> 00:06:01.730
worker resulting I'm here has three
values success and failure which are

00:06:01.730 --> 00:06:01.740
values success and failure which are
 

00:06:01.740 --> 00:06:04.460
values success and failure which are
fairly obvious and retry which says I

00:06:04.460 --> 00:06:04.470
fairly obvious and retry which says I
 

00:06:04.470 --> 00:06:06.140
fairly obvious and retry which says I
encountered a transient error let's say

00:06:06.140 --> 00:06:06.150
encountered a transient error let's say
 

00:06:06.150 --> 00:06:08.900
encountered a transient error let's say
that the device lost network connection

00:06:08.900 --> 00:06:08.910
that the device lost network connection
 

00:06:08.910 --> 00:06:10.970
that the device lost network connection
in the middle so retry me after a little

00:06:10.970 --> 00:06:10.980
in the middle so retry me after a little
 

00:06:10.980 --> 00:06:14.900
in the middle so retry me after a little
bit with some back off so now that I

00:06:14.900 --> 00:06:14.910
bit with some back off so now that I
 

00:06:14.910 --> 00:06:17.840
bit with some back off so now that I
have this I can create a one-time work

00:06:17.840 --> 00:06:17.850
have this I can create a one-time work
 

00:06:17.850 --> 00:06:19.730
have this I can create a one-time work
request using the upload photo worker

00:06:19.730 --> 00:06:19.740
request using the upload photo worker
 

00:06:19.740 --> 00:06:22.550
request using the upload photo worker
and then I can in queue it using work

00:06:22.550 --> 00:06:22.560
and then I can in queue it using work
 

00:06:22.560 --> 00:06:25.940
and then I can in queue it using work
manager get instance in queue so soon

00:06:25.940 --> 00:06:25.950
manager get instance in queue so soon
 

00:06:25.950 --> 00:06:27.350
manager get instance in queue so soon
after this isn't cute it'll start

00:06:27.350 --> 00:06:27.360
after this isn't cute it'll start
 

00:06:27.360 --> 00:06:31.460
after this isn't cute it'll start
running you'll upload your photo but I

00:06:31.460 --> 00:06:31.470
running you'll upload your photo but I
 

00:06:31.470 --> 00:06:32.990
running you'll upload your photo but I
just talked about this what if you lose

00:06:32.990 --> 00:06:33.000
just talked about this what if you lose
 

00:06:33.000 --> 00:06:34.400
just talked about this what if you lose
connectivity in the middle of this or

00:06:34.400 --> 00:06:34.410
connectivity in the middle of this or
 

00:06:34.410 --> 00:06:36.050
connectivity in the middle of this or
even before it is what if you never had

00:06:36.050 --> 00:06:36.060
even before it is what if you never had
 

00:06:36.060 --> 00:06:38.390
even before it is what if you never had
connectivity you actually want to use

00:06:38.390 --> 00:06:38.400
connectivity you actually want to use
 

00:06:38.400 --> 00:06:39.730
connectivity you actually want to use
constraints in this case

00:06:39.730 --> 00:06:39.740
constraints in this case
 

00:06:39.740 --> 00:06:42.130
constraints in this case
so an example of the constraint here you

00:06:42.130 --> 00:06:42.140
so an example of the constraint here you
 

00:06:42.140 --> 00:06:44.050
so an example of the constraint here you
want to use is you make a constraints

00:06:44.050 --> 00:06:44.060
want to use is you make a constraints
 

00:06:44.060 --> 00:06:46.900
want to use is you make a constraints
builder and you say set required network

00:06:46.900 --> 00:06:46.910
builder and you say set required network
 

00:06:46.910 --> 00:06:48.520
builder and you say set required network
pipe to be connected so you need a

00:06:48.520 --> 00:06:48.530
pipe to be connected so you need a
 

00:06:48.530 --> 00:06:50.830
pipe to be connected so you need a
connected network connection you built

00:06:50.830 --> 00:06:50.840
connected network connection you built
 

00:06:50.840 --> 00:06:54.520
connected network connection you built
it and you also set the constraints on

00:06:54.520 --> 00:06:54.530
it and you also set the constraints on
 

00:06:54.530 --> 00:06:56.470
it and you also set the constraints on
the request that you just built so by

00:06:56.470 --> 00:06:56.480
the request that you just built so by
 

00:06:56.480 --> 00:06:58.090
the request that you just built so by
simply doing this and then in queueing

00:06:58.090 --> 00:06:58.100
simply doing this and then in queueing
 

00:06:58.100 --> 00:07:00.040
simply doing this and then in queueing
it you make sure that this work only

00:07:00.040 --> 00:07:00.050
it you make sure that this work only
 

00:07:00.050 --> 00:07:04.930
it you make sure that this work only
runs when your network is connected so

00:07:04.930 --> 00:07:04.940
runs when your network is connected so
 

00:07:04.940 --> 00:07:06.220
runs when your network is connected so
let's say we want to observe this work

00:07:06.220 --> 00:07:06.230
let's say we want to observe this work
 

00:07:06.230 --> 00:07:07.720
let's say we want to observe this work
now that we've done it so I want to show

00:07:07.720 --> 00:07:07.730
now that we've done it so I want to show
 

00:07:07.730 --> 00:07:12.490
now that we've done it so I want to show
a spinner while this work is executing

00:07:12.490 --> 00:07:12.500
a spinner while this work is executing
 

00:07:12.500 --> 00:07:13.750
a spinner while this work is executing
and then I want to hide the spinner when

00:07:13.750 --> 00:07:13.760
and then I want to hide the spinner when
 

00:07:13.760 --> 00:07:16.050
and then I want to hide the spinner when
it's done how would I do that

00:07:16.050 --> 00:07:16.060
it's done how would I do that
 

00:07:16.060 --> 00:07:19.000
it's done how would I do that
so as I said I'll in queue this request

00:07:19.000 --> 00:07:19.010
so as I said I'll in queue this request
 

00:07:19.010 --> 00:07:23.260
so as I said I'll in queue this request
and then I can say gets satisfy ID on

00:07:23.260 --> 00:07:23.270
and then I can say gets satisfy ID on
 

00:07:23.270 --> 00:07:25.930
and then I can say gets satisfy ID on
work manager using the request ID so

00:07:25.930 --> 00:07:25.940
work manager using the request ID so
 

00:07:25.940 --> 00:07:28.480
work manager using the request ID so
each request has an ID and this returns

00:07:28.480 --> 00:07:28.490
each request has an ID and this returns
 

00:07:28.490 --> 00:07:30.760
each request has an ID and this returns
a live data out the work status if you

00:07:30.760 --> 00:07:30.770
a live data out the work status if you
 

00:07:30.770 --> 00:07:32.590
a live data out the work status if you
guys remember architecture components

00:07:32.590 --> 00:07:32.600
guys remember architecture components
 

00:07:32.600 --> 00:07:34.630
guys remember architecture components
live data is a life cycle aware

00:07:34.630 --> 00:07:34.640
live data is a life cycle aware
 

00:07:34.640 --> 00:07:39.010
live data is a life cycle aware
observable so now you can just hook it

00:07:39.010 --> 00:07:39.020
observable so now you can just hook it
 

00:07:39.020 --> 00:07:41.320
observable so now you can just hook it
to that observable and you can say when

00:07:41.320 --> 00:07:41.330
to that observable and you can say when
 

00:07:41.330 --> 00:07:43.990
to that observable and you can say when
that work is finished hide that progress

00:07:43.990 --> 00:07:44.000
that work is finished hide that progress
 

00:07:44.000 --> 00:07:49.030
that work is finished hide that progress
bar so what is this work status object

00:07:49.030 --> 00:07:49.040
bar so what is this work status object
 

00:07:49.040 --> 00:07:50.140
bar so what is this work status object
that you were looking at at the live

00:07:50.140 --> 00:07:50.150
that you were looking at at the live
 

00:07:50.150 --> 00:07:53.290
that you were looking at at the live
data it has an ID this is the same ID as

00:07:53.290 --> 00:07:53.300
data it has an ID this is the same ID as
 

00:07:53.300 --> 00:07:56.620
data it has an ID this is the same ID as
a request and it has a state the state

00:07:56.620 --> 00:07:56.630
a request and it has a state the state
 

00:07:56.630 --> 00:07:59.520
a request and it has a state the state
is this the current state of execution

00:07:59.520 --> 00:07:59.530
is this the current state of execution
 

00:07:59.530 --> 00:08:02.290
is this the current state of execution
there's six values here in cute running

00:08:02.290 --> 00:08:02.300
there's six values here in cute running
 

00:08:02.300 --> 00:08:04.930
there's six values here in cute running
succeeded or failed blocked and canceled

00:08:04.930 --> 00:08:04.940
succeeded or failed blocked and canceled
 

00:08:04.940 --> 00:08:06.820
succeeded or failed blocked and canceled
and we'll talk about their last two

00:08:06.820 --> 00:08:06.830
and we'll talk about their last two
 

00:08:06.830 --> 00:08:12.490
and we'll talk about their last two
later so let's move a step up in concept

00:08:12.490 --> 00:08:12.500
later so let's move a step up in concept
 

00:08:12.500 --> 00:08:14.170
later so let's move a step up in concept
here let's talk about chaining work so I

00:08:14.170 --> 00:08:14.180
here let's talk about chaining work so I
 

00:08:14.180 --> 00:08:15.840
here let's talk about chaining work so I
promised that you can actually make

00:08:15.840 --> 00:08:15.850
promised that you can actually make
 

00:08:15.850 --> 00:08:18.520
promised that you can actually make
directed acyclic graphs of work how

00:08:18.520 --> 00:08:18.530
directed acyclic graphs of work how
 

00:08:18.530 --> 00:08:19.590
directed acyclic graphs of work how
would you do that

00:08:19.590 --> 00:08:19.600
would you do that
 

00:08:19.600 --> 00:08:21.850
would you do that
let's say this is my problem now I'm

00:08:21.850 --> 00:08:21.860
let's say this is my problem now I'm
 

00:08:21.860 --> 00:08:24.280
let's say this is my problem now I'm
uploading a video it's a huge video I

00:08:24.280 --> 00:08:24.290
uploading a video it's a huge video I
 

00:08:24.290 --> 00:08:26.200
uploading a video it's a huge video I
want to compress it first then upload it

00:08:26.200 --> 00:08:26.210
want to compress it first then upload it
 

00:08:26.210 --> 00:08:28.570
want to compress it first then upload it
so these are both eligible for

00:08:28.570 --> 00:08:28.580
so these are both eligible for
 

00:08:28.580 --> 00:08:30.210
so these are both eligible for
background work because they're time

00:08:30.210 --> 00:08:30.220
background work because they're time
 

00:08:30.220 --> 00:08:34.840
background work because they're time
intensive things so let's say I have two

00:08:34.840 --> 00:08:34.850
intensive things so let's say I have two
 

00:08:34.850 --> 00:08:36.520
intensive things so let's say I have two
workers compressed photo worker and

00:08:36.520 --> 00:08:36.530
workers compressed photo worker and
 

00:08:36.530 --> 00:08:38.470
workers compressed photo worker and
upload photo worker they're both defined

00:08:38.470 --> 00:08:38.480
upload photo worker they're both defined
 

00:08:38.480 --> 00:08:40.930
upload photo worker they're both defined
to do the things that I just said so you

00:08:40.930 --> 00:08:40.940
to do the things that I just said so you
 

00:08:40.940 --> 00:08:43.510
to do the things that I just said so you
can make work request from them and you

00:08:43.510 --> 00:08:43.520
can make work request from them and you
 

00:08:43.520 --> 00:08:45.250
can make work request from them and you
can say work manager begin with

00:08:45.250 --> 00:08:45.260
can say work manager begin with
 

00:08:45.260 --> 00:08:47.830
can say work manager begin with
compressed work then upload work and in

00:08:47.830 --> 00:08:47.840
compressed work then upload work and in
 

00:08:47.840 --> 00:08:50.020
compressed work then upload work and in
queue it so this ensures that compressed

00:08:50.020 --> 00:08:50.030
queue it so this ensures that compressed
 

00:08:50.030 --> 00:08:52.120
queue it so this ensures that compressed
work executes first and once it's

00:08:52.120 --> 00:08:52.130
work executes first and once it's
 

00:08:52.130 --> 00:08:53.160
work executes first and once it's
successful

00:08:53.160 --> 00:08:53.170
successful
 

00:08:53.170 --> 00:08:58.319
successful
then upload work goes and if you were to

00:08:58.319 --> 00:08:58.329
then upload work goes and if you were to
 

00:08:58.329 --> 00:08:59.879
then upload work goes and if you were to
write this out because that was a very

00:08:59.879 --> 00:08:59.889
write this out because that was a very
 

00:08:59.889 --> 00:09:01.740
write this out because that was a very
fluent way of writing it what happens

00:09:01.740 --> 00:09:01.750
fluent way of writing it what happens
 

00:09:01.750 --> 00:09:04.500
fluent way of writing it what happens
behind the scenes here is that begin

00:09:04.500 --> 00:09:04.510
behind the scenes here is that begin
 

00:09:04.510 --> 00:09:06.900
behind the scenes here is that begin
with returns of work continuation and a

00:09:06.900 --> 00:09:06.910
with returns of work continuation and a
 

00:09:06.910 --> 00:09:08.400
with returns of work continuation and a
work continuation has a method called

00:09:08.400 --> 00:09:08.410
work continuation has a method called
 

00:09:08.410 --> 00:09:10.439
work continuation has a method called
then that also returns of or

00:09:10.439 --> 00:09:10.449
then that also returns of or
 

00:09:10.449 --> 00:09:13.560
then that also returns of or
continuation a different one so you're

00:09:13.560 --> 00:09:13.570
continuation a different one so you're
 

00:09:13.570 --> 00:09:16.110
continuation a different one so you're
using that to create that's fluent API

00:09:16.110 --> 00:09:16.120
using that to create that's fluent API
 

00:09:16.120 --> 00:09:17.550
using that to create that's fluent API
so you can actually use these work

00:09:17.550 --> 00:09:17.560
so you can actually use these work
 

00:09:17.560 --> 00:09:19.379
so you can actually use these work
continuations and pass them around if

00:09:19.379 --> 00:09:19.389
continuations and pass them around if
 

00:09:19.389 --> 00:09:19.980
continuations and pass them around if
you want

00:09:19.980 --> 00:09:19.990
you want
 

00:09:19.990 --> 00:09:23.819
you want
etc so let's say that I'm uploading

00:09:23.819 --> 00:09:23.829
etc so let's say that I'm uploading
 

00:09:23.829 --> 00:09:25.800
etc so let's say that I'm uploading
multiple photos I take lots of photos no

00:09:25.800 --> 00:09:25.810
multiple photos I take lots of photos no
 

00:09:25.810 --> 00:09:27.329
multiple photos I take lots of photos no
one takes only just one photo of their

00:09:27.329 --> 00:09:27.339
one takes only just one photo of their
 

00:09:27.339 --> 00:09:30.120
one takes only just one photo of their
child so how would I upload all of these

00:09:30.120 --> 00:09:30.130
child so how would I upload all of these
 

00:09:30.130 --> 00:09:33.870
child so how would I upload all of these
in parallel well so let's say I've got

00:09:33.870 --> 00:09:33.880
in parallel well so let's say I've got
 

00:09:33.880 --> 00:09:36.389
in parallel well so let's say I've got
work requests for all of them I can

00:09:36.389 --> 00:09:36.399
work requests for all of them I can
 

00:09:36.399 --> 00:09:39.180
work requests for all of them I can
literally just say dot and queue and put

00:09:39.180 --> 00:09:39.190
literally just say dot and queue and put
 

00:09:39.190 --> 00:09:40.949
literally just say dot and queue and put
all of them there is a more arc so you

00:09:40.949 --> 00:09:40.959
all of them there is a more arc so you
 

00:09:40.959 --> 00:09:42.600
all of them there is a more arc so you
can pass more than one thing there and

00:09:42.600 --> 00:09:42.610
can pass more than one thing there and
 

00:09:42.610 --> 00:09:44.699
can pass more than one thing there and
these are all at you eligible for

00:09:44.699 --> 00:09:44.709
these are all at you eligible for
 

00:09:44.709 --> 00:09:46.740
these are all at you eligible for
running in parallel they may not

00:09:46.740 --> 00:09:46.750
running in parallel they may not
 

00:09:46.750 --> 00:09:48.420
running in parallel they may not
actually run in parallel depending on

00:09:48.420 --> 00:09:48.430
actually run in parallel depending on
 

00:09:48.430 --> 00:09:50.160
actually run in parallel depending on
your device and the executor being used

00:09:50.160 --> 00:09:50.170
your device and the executor being used
 

00:09:50.170 --> 00:09:54.930
your device and the executor being used
in all of that but they could be so

00:09:54.930 --> 00:09:54.940
in all of that but they could be so
 

00:09:54.940 --> 00:09:57.269
in all of that but they could be so
let's choose an even more complex

00:09:57.269 --> 00:09:57.279
let's choose an even more complex
 

00:09:57.279 --> 00:09:59.130
let's choose an even more complex
example now you want to filter your

00:09:59.130 --> 00:09:59.140
example now you want to filter your
 

00:09:59.140 --> 00:10:00.900
example now you want to filter your
photos so you want to apply some kind of

00:10:00.900 --> 00:10:00.910
photos so you want to apply some kind of
 

00:10:00.910 --> 00:10:03.360
photos so you want to apply some kind of
I don't know grayscale filter or sepia

00:10:03.360 --> 00:10:03.370
I don't know grayscale filter or sepia
 

00:10:03.370 --> 00:10:04.949
I don't know grayscale filter or sepia
filter to them then you want to compress

00:10:04.949 --> 00:10:04.959
filter to them then you want to compress
 

00:10:04.959 --> 00:10:07.230
filter to them then you want to compress
them then you want to upload them how

00:10:07.230 --> 00:10:07.240
them then you want to upload them how
 

00:10:07.240 --> 00:10:09.509
them then you want to upload them how
would you do this work manager makes it

00:10:09.509 --> 00:10:09.519
would you do this work manager makes it
 

00:10:09.519 --> 00:10:12.120
would you do this work manager makes it
very simple so first you say begin wit

00:10:12.120 --> 00:10:12.130
very simple so first you say begin wit
 

00:10:12.130 --> 00:10:14.090
very simple so first you say begin wit
you do all the filter works in parallel

00:10:14.090 --> 00:10:14.100
you do all the filter works in parallel
 

00:10:14.100 --> 00:10:16.230
you do all the filter works in parallel
after those have all completed

00:10:16.230 --> 00:10:16.240
after those have all completed
 

00:10:16.240 --> 00:10:17.550
after those have all completed
successfully then you do your

00:10:17.550 --> 00:10:17.560
successfully then you do your
 

00:10:17.560 --> 00:10:20.220
successfully then you do your
compression work and after those have

00:10:20.220 --> 00:10:20.230
compression work and after those have
 

00:10:20.230 --> 00:10:21.840
compression work and after those have
completed that is completed successfully

00:10:21.840 --> 00:10:21.850
completed that is completed successfully
 

00:10:21.850 --> 00:10:25.019
completed that is completed successfully
then you do your upload work and don't

00:10:25.019 --> 00:10:25.029
then you do your upload work and don't
 

00:10:25.029 --> 00:10:29.880
then you do your upload work and don't
forget to in to you at the end so we've

00:10:29.880 --> 00:10:29.890
forget to in to you at the end so we've
 

00:10:29.890 --> 00:10:31.860
forget to in to you at the end so we've
talked about all of that but there's the

00:10:31.860 --> 00:10:31.870
talked about all of that but there's the
 

00:10:31.870 --> 00:10:33.449
talked about all of that but there's the
key concept that I want to cover that's

00:10:33.449 --> 00:10:33.459
key concept that I want to cover that's
 

00:10:33.459 --> 00:10:35.430
key concept that I want to cover that's
very much related to chaining this is

00:10:35.430 --> 00:10:35.440
very much related to chaining this is
 

00:10:35.440 --> 00:10:40.259
very much related to chaining this is
inputs and outputs so let's talk about

00:10:40.259 --> 00:10:40.269
inputs and outputs so let's talk about
 

00:10:40.269 --> 00:10:42.720
inputs and outputs so let's talk about
this problem that I have here it's a

00:10:42.720 --> 00:10:42.730
this problem that I have here it's a
 

00:10:42.730 --> 00:10:46.230
this problem that I have here it's a
MapReduce and it's really a good way of

00:10:46.230 --> 00:10:46.240
MapReduce and it's really a good way of
 

00:10:46.240 --> 00:10:47.759
MapReduce and it's really a good way of
explaining on MapReduce is to give an

00:10:47.759 --> 00:10:47.769
explaining on MapReduce is to give an
 

00:10:47.769 --> 00:10:48.360
explaining on MapReduce is to give an
example

00:10:48.360 --> 00:10:48.370
example
 

00:10:48.370 --> 00:10:50.340
example
I love reading I've loved reading

00:10:50.340 --> 00:10:50.350
I love reading I've loved reading
 

00:10:50.350 --> 00:10:51.990
I love reading I've loved reading
Sherlock Holmes novels since I was a kid

00:10:51.990 --> 00:10:52.000
Sherlock Holmes novels since I was a kid
 

00:10:52.000 --> 00:10:54.809
Sherlock Holmes novels since I was a kid
and the other day I was thinking well

00:10:54.809 --> 00:10:54.819
and the other day I was thinking well
 

00:10:54.819 --> 00:10:57.000
and the other day I was thinking well
Arthur Conan Doyle has a very specific

00:10:57.000 --> 00:10:57.010
Arthur Conan Doyle has a very specific
 

00:10:57.010 --> 00:10:59.370
Arthur Conan Doyle has a very specific
way of writing what are the top ten

00:10:59.370 --> 00:10:59.380
way of writing what are the top ten
 

00:10:59.380 --> 00:11:03.000
way of writing what are the top ten
words he uses in his books well how

00:11:03.000 --> 00:11:03.010
words he uses in his books well how
 

00:11:03.010 --> 00:11:04.199
words he uses in his books well how
would I figure that out I would go

00:11:04.199 --> 00:11:04.209
would I figure that out I would go
 

00:11:04.209 --> 00:11:05.550
would I figure that out I would go
through each book I would count the

00:11:05.550 --> 00:11:05.560
through each book I would count the
 

00:11:05.560 --> 00:11:06.390
through each book I would count the
occurrence of each

00:11:06.390 --> 00:11:06.400
occurrence of each
 

00:11:06.400 --> 00:11:08.580
occurrence of each
word and then I would combine all of

00:11:08.580 --> 00:11:08.590
word and then I would combine all of
 

00:11:08.590 --> 00:11:10.740
word and then I would combine all of
that data and sort sorted so that I

00:11:10.740 --> 00:11:10.750
that data and sort sorted so that I
 

00:11:10.750 --> 00:11:13.680
that data and sort sorted so that I
would find the top 10 of those this is a

00:11:13.680 --> 00:11:13.690
would find the top 10 of those this is a
 

00:11:13.690 --> 00:11:15.690
would find the top 10 of those this is a
distributed problem that we could call a

00:11:15.690 --> 00:11:15.700
distributed problem that we could call a
 

00:11:15.700 --> 00:11:22.380
distributed problem that we could call a
MapReduce and for inputs and outputs the

00:11:22.380 --> 00:11:22.390
MapReduce and for inputs and outputs the
 

00:11:22.390 --> 00:11:25.010
MapReduce and for inputs and outputs the
common unit of operation here is a data

00:11:25.010 --> 00:11:25.020
common unit of operation here is a data
 

00:11:25.020 --> 00:11:27.930
common unit of operation here is a data
the data is a simple class that's a key

00:11:27.930 --> 00:11:27.940
the data is a simple class that's a key
 

00:11:27.940 --> 00:11:30.510
the data is a simple class that's a key
value map under the hood the keys are

00:11:30.510 --> 00:11:30.520
value map under the hood the keys are
 

00:11:30.520 --> 00:11:32.250
value map under the hood the keys are
strings the values are primitives and

00:11:32.250 --> 00:11:32.260
strings the values are primitives and
 

00:11:32.260 --> 00:11:34.320
strings the values are primitives and
strings and the array versions of each

00:11:34.320 --> 00:11:34.330
strings and the array versions of each
 

00:11:34.330 --> 00:11:36.180
strings and the array versions of each
so this is kind of like a bundle or a

00:11:36.180 --> 00:11:36.190
so this is kind of like a bundle or a
 

00:11:36.190 --> 00:11:38.280
so this is kind of like a bundle or a
parcel ball but it's it's own thing

00:11:38.280 --> 00:11:38.290
parcel ball but it's it's own thing
 

00:11:38.290 --> 00:11:41.760
parcel ball but it's it's own thing
it's serializable by work manager and we

00:11:41.760 --> 00:11:41.770
it's serializable by work manager and we
 

00:11:41.770 --> 00:11:43.680
it's serializable by work manager and we
limited to 10 kilobytes in size and I'll

00:11:43.680 --> 00:11:43.690
limited to 10 kilobytes in size and I'll
 

00:11:43.690 --> 00:11:48.960
limited to 10 kilobytes in size and I'll
go more more into that part later so how

00:11:48.960 --> 00:11:48.970
go more more into that part later so how
 

00:11:48.970 --> 00:11:50.850
go more more into that part later so how
do we create a data so in Kotlin you can

00:11:50.850 --> 00:11:50.860
do we create a data so in Kotlin you can
 

00:11:50.860 --> 00:11:53.250
do we create a data so in Kotlin you can
make a map very easily so in this case

00:11:53.250 --> 00:11:53.260
make a map very easily so in this case
 

00:11:53.260 --> 00:11:55.890
make a map very easily so in this case
we're mapping the key file name to the

00:11:55.890 --> 00:11:55.900
we're mapping the key file name to the
 

00:11:55.900 --> 00:11:59.130
we're mapping the key file name to the
value a study in scarlet text that's the

00:11:59.130 --> 00:11:59.140
value a study in scarlet text that's the
 

00:11:59.140 --> 00:12:01.020
value a study in scarlet text that's the
novel that I'm gonna look at and I'll

00:12:01.020 --> 00:12:01.030
novel that I'm gonna look at and I'll
 

00:12:01.030 --> 00:12:02.790
novel that I'm gonna look at and I'll
convert it to a work data so this is a

00:12:02.790 --> 00:12:02.800
convert it to a work data so this is a
 

00:12:02.800 --> 00:12:07.590
convert it to a work data so this is a
data object and once I create my work

00:12:07.590 --> 00:12:07.600
data object and once I create my work
 

00:12:07.600 --> 00:12:10.140
data object and once I create my work
request builder I can set the input data

00:12:10.140 --> 00:12:10.150
request builder I can set the input data
 

00:12:10.150 --> 00:12:12.690
request builder I can set the input data
on it so this is the input data of that

00:12:12.690 --> 00:12:12.700
on it so this is the input data of that
 

00:12:12.700 --> 00:12:16.800
on it so this is the input data of that
map and I pass it along so inside my

00:12:16.800 --> 00:12:16.810
map and I pass it along so inside my
 

00:12:16.810 --> 00:12:18.750
map and I pass it along so inside my
worker I can actually retrieve this

00:12:18.750 --> 00:12:18.760
worker I can actually retrieve this
 

00:12:18.760 --> 00:12:20.370
worker I can actually retrieve this
input data by just calling the get input

00:12:20.370 --> 00:12:20.380
input data by just calling the get input
 

00:12:20.380 --> 00:12:23.280
input data by just calling the get input
data method and from that I can get the

00:12:23.280 --> 00:12:23.290
data method and from that I can get the
 

00:12:23.290 --> 00:12:25.080
data method and from that I can get the
string for the file names and now I have

00:12:25.080 --> 00:12:25.090
string for the file names and now I have
 

00:12:25.090 --> 00:12:28.320
string for the file names and now I have
the file name and I can say count all

00:12:28.320 --> 00:12:28.330
the file name and I can say count all
 

00:12:28.330 --> 00:12:30.150
the file name and I can say count all
the world occurrences in this file name

00:12:30.150 --> 00:12:30.160
the world occurrences in this file name
 

00:12:30.160 --> 00:12:31.470
the world occurrences in this file name
that's some method that I've written

00:12:31.470 --> 00:12:31.480
that's some method that I've written
 

00:12:31.480 --> 00:12:33.000
that's some method that I've written
somewhere else and I can return my

00:12:33.000 --> 00:12:33.010
somewhere else and I can return my
 

00:12:33.010 --> 00:12:37.380
somewhere else and I can return my
success but you don't want to do just

00:12:37.380 --> 00:12:37.390
success but you don't want to do just
 

00:12:37.390 --> 00:12:39.420
success but you don't want to do just
that you actually want to also have

00:12:39.420 --> 00:12:39.430
that you actually want to also have
 

00:12:39.430 --> 00:12:41.040
that you actually want to also have
outputs right now you've done all this

00:12:41.040 --> 00:12:41.050
outputs right now you've done all this
 

00:12:41.050 --> 00:12:43.530
outputs right now you've done all this
work it should do something there should

00:12:43.530 --> 00:12:43.540
work it should do something there should
 

00:12:43.540 --> 00:12:45.570
work it should do something there should
be an output for it so let's say that

00:12:45.570 --> 00:12:45.580
be an output for it so let's say that
 

00:12:45.580 --> 00:12:48.630
be an output for it so let's say that
method that we have returns a map of

00:12:48.630 --> 00:12:48.640
method that we have returns a map of
 

00:12:48.640 --> 00:12:51.840
method that we have returns a map of
words to their occurrences we can

00:12:51.840 --> 00:12:51.850
words to their occurrences we can
 

00:12:51.850 --> 00:12:54.780
words to their occurrences we can
convert that map to a work data and we

00:12:54.780 --> 00:12:54.790
convert that map to a work data and we
 

00:12:54.790 --> 00:12:56.940
convert that map to a work data and we
can call a method call set output data

00:12:56.940 --> 00:12:56.950
can call a method call set output data
 

00:12:56.950 --> 00:12:59.910
can call a method call set output data
that sets this data so get input data

00:12:59.910 --> 00:12:59.920
that sets this data so get input data
 

00:12:59.920 --> 00:13:05.100
that sets this data so get input data
set out the data so the key observation

00:13:05.100 --> 00:13:05.110
set out the data so the key observation
 

00:13:05.110 --> 00:13:07.440
set out the data so the key observation
that you need to know here is that a

00:13:07.440 --> 00:13:07.450
that you need to know here is that a
 

00:13:07.450 --> 00:13:09.780
that you need to know here is that a
workers outputs become the inputs for

00:13:09.780 --> 00:13:09.790
workers outputs become the inputs for
 

00:13:09.790 --> 00:13:14.700
workers outputs become the inputs for
its children so what happens it's the

00:13:14.700 --> 00:13:14.710
its children so what happens it's the
 

00:13:14.710 --> 00:13:16.710
its children so what happens it's the
fine top ten words worker which goes

00:13:16.710 --> 00:13:16.720
fine top ten words worker which goes
 

00:13:16.720 --> 00:13:17.890
fine top ten words worker which goes
next

00:13:17.890 --> 00:13:17.900
next
 

00:13:17.900 --> 00:13:19.720
next
it's input data is coming from the

00:13:19.720 --> 00:13:19.730
it's input data is coming from the
 

00:13:19.730 --> 00:13:23.200
it's input data is coming from the
previous worker so in this case you can

00:13:23.200 --> 00:13:23.210
previous worker so in this case you can
 

00:13:23.210 --> 00:13:26.620
previous worker so in this case you can
pass the data all the way through find

00:13:26.620 --> 00:13:26.630
pass the data all the way through find
 

00:13:26.630 --> 00:13:29.380
pass the data all the way through find
the top ten words and return out so the

00:13:29.380 --> 00:13:29.390
the top ten words and return out so the
 

00:13:29.390 --> 00:13:31.000
the top ten words and return out so the
data flow for one book becomes like this

00:13:31.000 --> 00:13:31.010
data flow for one book becomes like this
 

00:13:31.010 --> 00:13:32.740
data flow for one book becomes like this
I'll count all the world occurrences in

00:13:32.740 --> 00:13:32.750
I'll count all the world occurrences in
 

00:13:32.750 --> 00:13:35.500
I'll count all the world occurrences in
that book I'll pass it to define top ten

00:13:35.500 --> 00:13:35.510
that book I'll pass it to define top ten
 

00:13:35.510 --> 00:13:36.370
that book I'll pass it to define top ten
words worker

00:13:36.370 --> 00:13:36.380
words worker
 

00:13:36.380 --> 00:13:38.560
words worker
it'll its input data will be whatever I

00:13:38.560 --> 00:13:38.570
it'll its input data will be whatever I
 

00:13:38.570 --> 00:13:41.140
it'll its input data will be whatever I
pass through and it'll do the sorting or

00:13:41.140 --> 00:13:41.150
pass through and it'll do the sorting or
 

00:13:41.150 --> 00:13:44.560
pass through and it'll do the sorting or
whatever it needs to do but here's a

00:13:44.560 --> 00:13:44.570
whatever it needs to do but here's a
 

00:13:44.570 --> 00:13:46.630
whatever it needs to do but here's a
really tricky thing what happens when

00:13:46.630 --> 00:13:46.640
really tricky thing what happens when
 

00:13:46.640 --> 00:13:48.850
really tricky thing what happens when
you have multiple books what's the input

00:13:48.850 --> 00:13:48.860
you have multiple books what's the input
 

00:13:48.860 --> 00:13:51.580
you have multiple books what's the input
for the fine top ten words worker you're

00:13:51.580 --> 00:13:51.590
for the fine top ten words worker you're
 

00:13:51.590 --> 00:13:54.580
for the fine top ten words worker you're
passing multiple pieces of data but I've

00:13:54.580 --> 00:13:54.590
passing multiple pieces of data but I've
 

00:13:54.590 --> 00:13:56.820
passing multiple pieces of data but I've
only been able to get one input data

00:13:56.820 --> 00:13:56.830
only been able to get one input data
 

00:13:56.830 --> 00:13:59.200
only been able to get one input data
what happens to the rest of them or how

00:13:59.200 --> 00:13:59.210
what happens to the rest of them or how
 

00:13:59.210 --> 00:14:03.580
what happens to the rest of them or how
do they combine for this you want to

00:14:03.580 --> 00:14:03.590
do they combine for this you want to
 

00:14:03.590 --> 00:14:05.890
do they combine for this you want to
look at input mergers so an input merger

00:14:05.890 --> 00:14:05.900
look at input mergers so an input merger
 

00:14:05.900 --> 00:14:07.960
look at input mergers so an input merger
is a class that combines data from

00:14:07.960 --> 00:14:07.970
is a class that combines data from
 

00:14:07.970 --> 00:14:10.300
is a class that combines data from
multiple sources into one data object

00:14:10.300 --> 00:14:10.310
multiple sources into one data object
 

00:14:10.310 --> 00:14:12.790
multiple sources into one data object
and we provide two implementations out

00:14:12.790 --> 00:14:12.800
and we provide two implementations out
 

00:14:12.800 --> 00:14:15.910
and we provide two implementations out
of the box overriding input merger which

00:14:15.910 --> 00:14:15.920
of the box overriding input merger which
 

00:14:15.920 --> 00:14:17.710
of the box overriding input merger which
is the default and array creating input

00:14:17.710 --> 00:14:17.720
is the default and array creating input
 

00:14:17.720 --> 00:14:20.140
is the default and array creating input
merger you can also create your own but

00:14:20.140 --> 00:14:20.150
merger you can also create your own but
 

00:14:20.150 --> 00:14:23.980
merger you can also create your own but
let's talk about these two first or

00:14:23.980 --> 00:14:23.990
let's talk about these two first or
 

00:14:23.990 --> 00:14:26.140
let's talk about these two first or
writing input mergers so we have two

00:14:26.140 --> 00:14:26.150
writing input mergers so we have two
 

00:14:26.150 --> 00:14:28.090
writing input mergers so we have two
data objects here each with their own

00:14:28.090 --> 00:14:28.100
data objects here each with their own
 

00:14:28.100 --> 00:14:29.220
data objects here each with their own
keys and values

00:14:29.220 --> 00:14:29.230
keys and values
 

00:14:29.230 --> 00:14:32.830
keys and values
what does overwriting input merger do it

00:14:32.830 --> 00:14:32.840
what does overwriting input merger do it
 

00:14:32.840 --> 00:14:34.720
what does overwriting input merger do it
first takes the first piece of data and

00:14:34.720 --> 00:14:34.730
first takes the first piece of data and
 

00:14:34.730 --> 00:14:37.270
first takes the first piece of data and
it just puts everything in a new data

00:14:37.270 --> 00:14:37.280
it just puts everything in a new data
 

00:14:37.280 --> 00:14:39.480
it just puts everything in a new data
object so it's an exact copy of this

00:14:39.480 --> 00:14:39.490
object so it's an exact copy of this
 

00:14:39.490 --> 00:14:42.790
object so it's an exact copy of this
then it takes a second piece of data and

00:14:42.790 --> 00:14:42.800
then it takes a second piece of data and
 

00:14:42.800 --> 00:14:44.860
then it takes a second piece of data and
it copies it over so overwriting

00:14:44.860 --> 00:14:44.870
it copies it over so overwriting
 

00:14:44.870 --> 00:14:47.770
it copies it over so overwriting
anything that's the same key so in this

00:14:47.770 --> 00:14:47.780
anything that's the same key so in this
 

00:14:47.780 --> 00:14:51.190
anything that's the same key so in this
case the name Alice becomes Bob and the

00:14:51.190 --> 00:14:51.200
case the name Alice becomes Bob and the
 

00:14:51.200 --> 00:14:55.300
case the name Alice becomes Bob and the
age of 30 becomes three days note that

00:14:55.300 --> 00:14:55.310
age of 30 becomes three days note that
 

00:14:55.310 --> 00:14:57.250
age of 30 becomes three days note that
I'd change type so a number became a

00:14:57.250 --> 00:14:57.260
I'd change type so a number became a
 

00:14:57.260 --> 00:15:01.510
I'd change type so a number became a
string here the scores key was new so I

00:15:01.510 --> 00:15:01.520
string here the scores key was new so I
 

00:15:01.520 --> 00:15:04.210
string here the scores key was new so I
just got added note that if we did this

00:15:04.210 --> 00:15:04.220
just got added note that if we did this
 

00:15:04.220 --> 00:15:07.060
just got added note that if we did this
in Reverse instead of Bob you wouldn't

00:15:07.060 --> 00:15:07.070
in Reverse instead of Bob you wouldn't
 

00:15:07.070 --> 00:15:09.310
in Reverse instead of Bob you wouldn't
have Alice as the final output so this

00:15:09.310 --> 00:15:09.320
have Alice as the final output so this
 

00:15:09.320 --> 00:15:11.050
have Alice as the final output so this
is something a little tricky you want to

00:15:11.050 --> 00:15:11.060
is something a little tricky you want to
 

00:15:11.060 --> 00:15:12.730
is something a little tricky you want to
make sure that overriding input merger

00:15:12.730 --> 00:15:12.740
make sure that overriding input merger
 

00:15:12.740 --> 00:15:14.800
make sure that overriding input merger
is the right tool for the job but it is

00:15:14.800 --> 00:15:14.810
is the right tool for the job but it is
 

00:15:14.810 --> 00:15:15.810
is the right tool for the job but it is
very simple

00:15:15.810 --> 00:15:15.820
very simple
 

00:15:15.820 --> 00:15:18.220
very simple
what about array creating input merger

00:15:18.220 --> 00:15:18.230
what about array creating input merger
 

00:15:18.230 --> 00:15:20.200
what about array creating input merger
this is the one that actually takes care

00:15:20.200 --> 00:15:20.210
this is the one that actually takes care
 

00:15:20.210 --> 00:15:23.680
this is the one that actually takes care
of those collision case so in this case

00:15:23.680 --> 00:15:23.690
of those collision case so in this case
 

00:15:23.690 --> 00:15:25.570
of those collision case so in this case
let's go just keep I keep the name

00:15:25.570 --> 00:15:25.580
let's go just keep I keep the name
 

00:15:25.580 --> 00:15:29.890
let's go just keep I keep the name
becomes an array of Alice and Bob color

00:15:29.890 --> 00:15:29.900
becomes an array of Alice and Bob color
 

00:15:29.900 --> 00:15:32.110
becomes an array of Alice and Bob color
becomes a singleton array of blue

00:15:32.110 --> 00:15:32.120
becomes a singleton array of blue
 

00:15:32.120 --> 00:15:36.360
becomes a singleton array of blue
it's only defined in one of them scores

00:15:36.360 --> 00:15:36.370
it's only defined in one of them scores
 

00:15:36.370 --> 00:15:39.249
it's only defined in one of them scores
notice that there's one integer and one

00:15:39.249 --> 00:15:39.259
notice that there's one integer and one
 

00:15:39.259 --> 00:15:41.049
notice that there's one integer and one
array of integers these combined and

00:15:41.049 --> 00:15:41.059
array of integers these combined and
 

00:15:41.059 --> 00:15:42.759
array of integers these combined and
they just concatenate together order is

00:15:42.759 --> 00:15:42.769
they just concatenate together order is
 

00:15:42.769 --> 00:15:44.559
they just concatenate together order is
not specified but all the values come

00:15:44.559 --> 00:15:44.569
not specified but all the values come
 

00:15:44.569 --> 00:15:47.470
not specified but all the values come
through what happens for age so if

00:15:47.470 --> 00:15:47.480
through what happens for age so if
 

00:15:47.480 --> 00:15:50.199
through what happens for age so if
there's an in an integer and there's a

00:15:50.199 --> 00:15:50.209
there's an in an integer and there's a
 

00:15:50.209 --> 00:15:53.110
there's an in an integer and there's a
string this is an exception we do accept

00:15:53.110 --> 00:15:53.120
string this is an exception we do accept
 

00:15:53.120 --> 00:15:55.420
string this is an exception we do accept
expect it to be the same basic value

00:15:55.420 --> 00:15:55.430
expect it to be the same basic value
 

00:15:55.430 --> 00:16:00.519
expect it to be the same basic value
type so let's go back to that example I

00:16:00.519 --> 00:16:00.529
type so let's go back to that example I
 

00:16:00.529 --> 00:16:02.460
type so let's go back to that example I
was telling you about Sherlock Holmes

00:16:02.460 --> 00:16:02.470
was telling you about Sherlock Holmes
 

00:16:02.470 --> 00:16:04.889
was telling you about Sherlock Holmes
implicitly there's an input merger

00:16:04.889 --> 00:16:04.899
implicitly there's an input merger
 

00:16:04.899 --> 00:16:08.259
implicitly there's an input merger
before the stage so we combine all of

00:16:08.259 --> 00:16:08.269
before the stage so we combine all of
 

00:16:08.269 --> 00:16:10.179
before the stage so we combine all of
that data and which input merger do we

00:16:10.179 --> 00:16:10.189
that data and which input merger do we
 

00:16:10.189 --> 00:16:11.980
that data and which input merger do we
want to use so we want to we don't want

00:16:11.980 --> 00:16:11.990
want to use so we want to we don't want
 

00:16:11.990 --> 00:16:13.660
want to use so we want to we don't want
to throw away any of this calculation

00:16:13.660 --> 00:16:13.670
to throw away any of this calculation
 

00:16:13.670 --> 00:16:15.189
to throw away any of this calculation
that we've done so we actually want to

00:16:15.189 --> 00:16:15.199
that we've done so we actually want to
 

00:16:15.199 --> 00:16:16.780
that we've done so we actually want to
use an array creating a quick merchant

00:16:16.780 --> 00:16:16.790
use an array creating a quick merchant
 

00:16:16.790 --> 00:16:19.179
use an array creating a quick merchant
which preserves all of the data and gets

00:16:19.179 --> 00:16:19.189
which preserves all of the data and gets
 

00:16:19.189 --> 00:16:22.689
which preserves all of the data and gets
it through so how do we do that well we

00:16:22.689 --> 00:16:22.699
it through so how do we do that well we
 

00:16:22.699 --> 00:16:24.970
it through so how do we do that well we
just say set input merger on the request

00:16:24.970 --> 00:16:24.980
just say set input merger on the request
 

00:16:24.980 --> 00:16:27.160
just say set input merger on the request
builder of the pine top ten words so it

00:16:27.160 --> 00:16:27.170
builder of the pine top ten words so it
 

00:16:27.170 --> 00:16:28.929
builder of the pine top ten words so it
merges they die using an array creating

00:16:28.929 --> 00:16:28.939
merges they die using an array creating
 

00:16:28.939 --> 00:16:32.379
merges they die using an array creating
input merger so you say begin with the

00:16:32.379 --> 00:16:32.389
input merger so you say begin with the
 

00:16:32.389 --> 00:16:34.660
input merger so you say begin with the
count words Workers then do the pine top

00:16:34.660 --> 00:16:34.670
count words Workers then do the pine top
 

00:16:34.670 --> 00:16:39.429
count words Workers then do the pine top
ten words worker and then thank you so

00:16:39.429 --> 00:16:39.439
ten words worker and then thank you so
 

00:16:39.439 --> 00:16:42.309
ten words worker and then thank you so
for example if the first book had ten

00:16:42.309 --> 00:16:42.319
for example if the first book had ten
 

00:16:42.319 --> 00:16:44.980
for example if the first book had ten
instances of the word Sherlock five of

00:16:44.980 --> 00:16:44.990
instances of the word Sherlock five of
 

00:16:44.990 --> 00:16:46.780
instances of the word Sherlock five of
Watson and thirty of elementary and the

00:16:46.780 --> 00:16:46.790
Watson and thirty of elementary and the
 

00:16:46.790 --> 00:16:49.210
Watson and thirty of elementary and the
second one had 12 15 and five you would

00:16:49.210 --> 00:16:49.220
second one had 12 15 and five you would
 

00:16:49.220 --> 00:16:51.340
second one had 12 15 and five you would
get arrays like this Sherlock would be

00:16:51.340 --> 00:16:51.350
get arrays like this Sherlock would be
 

00:16:51.350 --> 00:16:54.669
get arrays like this Sherlock would be
1012 Watson would be 515 Elementary

00:16:54.669 --> 00:16:54.679
1012 Watson would be 515 Elementary
 

00:16:54.679 --> 00:16:57.460
1012 Watson would be 515 Elementary
would be 35 so in your five top ten

00:16:57.460 --> 00:16:57.470
would be 35 so in your five top ten
 

00:16:57.470 --> 00:16:59.049
would be 35 so in your five top ten
words worker you would sum all of that

00:16:59.049 --> 00:16:59.059
words worker you would sum all of that
 

00:16:59.059 --> 00:17:01.749
words worker you would sum all of that
up sort them find the top ten and that's

00:17:01.749 --> 00:17:01.759
up sort them find the top ten and that's
 

00:17:01.759 --> 00:17:05.919
up sort them find the top ten and that's
your output and I just said that's our

00:17:05.919 --> 00:17:05.929
your output and I just said that's our
 

00:17:05.929 --> 00:17:07.990
your output and I just said that's our
outlet right so you can actually observe

00:17:07.990 --> 00:17:08.000
outlet right so you can actually observe
 

00:17:08.000 --> 00:17:10.029
outlet right so you can actually observe
the output in your work status using

00:17:10.029 --> 00:17:10.039
the output in your work status using
 

00:17:10.039 --> 00:17:11.649
the output in your work status using
that live data so you can actually get

00:17:11.649 --> 00:17:11.659
that live data so you can actually get
 

00:17:11.659 --> 00:17:14.110
that live data so you can actually get
that output data so that's super useful

00:17:14.110 --> 00:17:14.120
that output data so that's super useful
 

00:17:14.120 --> 00:17:18.240
that output data so that's super useful
because you can display it in your UI

00:17:18.240 --> 00:17:18.250
 

00:17:18.250 --> 00:17:21.699
how do you cancel work so I just decided

00:17:21.699 --> 00:17:21.709
how do you cancel work so I just decided
 

00:17:21.709 --> 00:17:23.620
how do you cancel work so I just decided
to send up a picture but I'm like wait a

00:17:23.620 --> 00:17:23.630
to send up a picture but I'm like wait a
 

00:17:23.630 --> 00:17:25.000
to send up a picture but I'm like wait a
sec this is not the picture I meant to

00:17:25.000 --> 00:17:25.010
sec this is not the picture I meant to
 

00:17:25.010 --> 00:17:30.090
sec this is not the picture I meant to
send up how do you cancel that upload

00:17:30.090 --> 00:17:30.100
 

00:17:30.100 --> 00:17:32.649
very simple you just say cancel work by

00:17:32.649 --> 00:17:32.659
very simple you just say cancel work by
 

00:17:32.659 --> 00:17:35.710
very simple you just say cancel work by
ID but do note that cancellation is

00:17:35.710 --> 00:17:35.720
ID but do note that cancellation is
 

00:17:35.720 --> 00:17:37.990
ID but do note that cancellation is
best-effort so the work may have already

00:17:37.990 --> 00:17:38.000
best-effort so the work may have already
 

00:17:38.000 --> 00:17:39.519
best-effort so the work may have already
finished these are all asynchronous

00:17:39.519 --> 00:17:39.529
finished these are all asynchronous
 

00:17:39.529 --> 00:17:41.529
finished these are all asynchronous
things they may be happening in the

00:17:41.529 --> 00:17:41.539
things they may be happening in the
 

00:17:41.539 --> 00:17:44.120
things they may be happening in the
background before you've had a chance to

00:17:44.120 --> 00:17:44.130
background before you've had a chance to
 

00:17:44.130 --> 00:17:45.470
background before you've had a chance to
that canceled work it may already be

00:17:45.470 --> 00:17:45.480
that canceled work it may already be
 

00:17:45.480 --> 00:17:50.320
that canceled work it may already be
running or finished so it's best effort

00:17:50.320 --> 00:17:50.330
running or finished so it's best effort
 

00:17:50.330 --> 00:17:53.420
running or finished so it's best effort
okay so let's talk a little bit more

00:17:53.420 --> 00:17:53.430
okay so let's talk a little bit more
 

00:17:53.430 --> 00:17:58.490
okay so let's talk a little bit more
about tags and tags are solving this

00:17:58.490 --> 00:17:58.500
about tags and tags are solving this
 

00:17:58.500 --> 00:18:00.920
about tags and tags are solving this
problem IDs that I just told you about

00:18:00.920 --> 00:18:00.930
problem IDs that I just told you about
 

00:18:00.930 --> 00:18:03.320
problem IDs that I just told you about
are Auto generated they're not human

00:18:03.320 --> 00:18:03.330
are Auto generated they're not human
 

00:18:03.330 --> 00:18:05.210
are Auto generated they're not human
readable so there are actually uu IDs

00:18:05.210 --> 00:18:05.220
readable so there are actually uu IDs
 

00:18:05.220 --> 00:18:07.640
readable so there are actually uu IDs
under the hood and you can't really

00:18:07.640 --> 00:18:07.650
under the hood and you can't really
 

00:18:07.650 --> 00:18:09.560
under the hood and you can't really
understand them they're not useful for

00:18:09.560 --> 00:18:09.570
understand them they're not useful for
 

00:18:09.570 --> 00:18:11.270
understand them they're not useful for
debugging if you log them they're not

00:18:11.270 --> 00:18:11.280
debugging if you log them they're not
 

00:18:11.280 --> 00:18:13.250
debugging if you log them they're not
gonna make sense what kind of work was

00:18:13.250 --> 00:18:13.260
gonna make sense what kind of work was
 

00:18:13.260 --> 00:18:14.720
gonna make sense what kind of work was
running I don't know it's just some big

00:18:14.720 --> 00:18:14.730
running I don't know it's just some big
 

00:18:14.730 --> 00:18:17.930
running I don't know it's just some big
number I don't know what that is tags

00:18:17.930 --> 00:18:17.940
number I don't know what that is tags
 

00:18:17.940 --> 00:18:20.930
number I don't know what that is tags
solve this issue tags are a readable way

00:18:20.930 --> 00:18:20.940
solve this issue tags are a readable way
 

00:18:20.940 --> 00:18:23.720
solve this issue tags are a readable way
to identify your work so tags are

00:18:23.720 --> 00:18:23.730
to identify your work so tags are
 

00:18:23.730 --> 00:18:25.910
to identify your work so tags are
developer specified strings by you and

00:18:25.910 --> 00:18:25.920
developer specified strings by you and
 

00:18:25.920 --> 00:18:28.640
developer specified strings by you and
each work requests can have zero or more

00:18:28.640 --> 00:18:28.650
each work requests can have zero or more
 

00:18:28.650 --> 00:18:31.820
each work requests can have zero or more
tags you can query and cancel work by

00:18:31.820 --> 00:18:31.830
tags you can query and cancel work by
 

00:18:31.830 --> 00:18:36.110
tags you can query and cancel work by
tag let's look at an example so I used

00:18:36.110 --> 00:18:36.120
tag let's look at an example so I used
 

00:18:36.120 --> 00:18:38.810
tag let's look at an example so I used
to work on the G+ team here and the G+

00:18:38.810 --> 00:18:38.820
to work on the G+ team here and the G+
 

00:18:38.820 --> 00:18:40.820
to work on the G+ team here and the G+
app supports multi login so you can have

00:18:40.820 --> 00:18:40.830
app supports multi login so you can have
 

00:18:40.830 --> 00:18:42.350
app supports multi login so you can have
multiple users logged in at the same

00:18:42.350 --> 00:18:42.360
multiple users logged in at the same
 

00:18:42.360 --> 00:18:45.170
multiple users logged in at the same
time and each of those users could be

00:18:45.170 --> 00:18:45.180
time and each of those users could be
 

00:18:45.180 --> 00:18:47.240
time and each of those users could be
doing several kinds of background work

00:18:47.240 --> 00:18:47.250
doing several kinds of background work
 

00:18:47.250 --> 00:18:48.590
doing several kinds of background work
you could be getting favorites you could

00:18:48.590 --> 00:18:48.600
you could be getting favorites you could
 

00:18:48.600 --> 00:18:50.090
you could be getting favorites you could
be getting preferences so if you have

00:18:50.090 --> 00:18:50.100
be getting preferences so if you have
 

00:18:50.100 --> 00:18:52.520
be getting preferences so if you have
three users logged in on your phone and

00:18:52.520 --> 00:18:52.530
three users logged in on your phone and
 

00:18:52.530 --> 00:18:54.800
three users logged in on your phone and
they're doing two kinds of work you have

00:18:54.800 --> 00:18:54.810
they're doing two kinds of work you have
 

00:18:54.810 --> 00:18:57.050
they're doing two kinds of work you have
six things happening how do you identify

00:18:57.050 --> 00:18:57.060
six things happening how do you identify
 

00:18:57.060 --> 00:18:58.910
six things happening how do you identify
what you're looking at it at any given

00:18:58.910 --> 00:18:58.920
what you're looking at it at any given
 

00:18:58.920 --> 00:19:03.530
what you're looking at it at any given
time well you can use tags so for

00:19:03.530 --> 00:19:03.540
time well you can use tags so for
 

00:19:03.540 --> 00:19:07.160
time well you can use tags so for
example in this work request builder you

00:19:07.160 --> 00:19:07.170
example in this work request builder you
 

00:19:07.170 --> 00:19:09.200
example in this work request builder you
can add tags to say this is user one and

00:19:09.200 --> 00:19:09.210
can add tags to say this is user one and
 

00:19:09.210 --> 00:19:12.020
can add tags to say this is user one and
this is the get favorites operation so

00:19:12.020 --> 00:19:12.030
this is the get favorites operation so
 

00:19:12.030 --> 00:19:14.120
this is the get favorites operation so
now you can actually identify that work

00:19:14.120 --> 00:19:14.130
now you can actually identify that work
 

00:19:14.130 --> 00:19:16.670
now you can actually identify that work
and if you wanted to look at the

00:19:16.670 --> 00:19:16.680
and if you wanted to look at the
 

00:19:16.680 --> 00:19:18.260
and if you wanted to look at the
statuses you could say give me all of

00:19:18.260 --> 00:19:18.270
statuses you could say give me all of
 

00:19:18.270 --> 00:19:20.210
statuses you could say give me all of
the work for use in one and this will

00:19:20.210 --> 00:19:20.220
the work for use in one and this will
 

00:19:20.220 --> 00:19:22.880
the work for use in one and this will
return a list of work statuses as a live

00:19:22.880 --> 00:19:22.890
return a list of work statuses as a live
 

00:19:22.890 --> 00:19:25.610
return a list of work statuses as a live
data because each tag can correspond to

00:19:25.610 --> 00:19:25.620
data because each tag can correspond to
 

00:19:25.620 --> 00:19:27.800
data because each tag can correspond to
more than one work request so this is a

00:19:27.800 --> 00:19:27.810
more than one work request so this is a
 

00:19:27.810 --> 00:19:31.160
more than one work request so this is a
list of work statuses similarly you can

00:19:31.160 --> 00:19:31.170
list of work statuses similarly you can
 

00:19:31.170 --> 00:19:33.920
list of work statuses similarly you can
also cancel all work by tag cancellation

00:19:33.920 --> 00:19:33.930
also cancel all work by tag cancellation
 

00:19:33.930 --> 00:19:36.140
also cancel all work by tag cancellation
is best-effort again but you can cancel

00:19:36.140 --> 00:19:36.150
is best-effort again but you can cancel
 

00:19:36.150 --> 00:19:38.180
is best-effort again but you can cancel
all of one particular kind of work in

00:19:38.180 --> 00:19:38.190
all of one particular kind of work in
 

00:19:38.190 --> 00:19:43.520
all of one particular kind of work in
this case tags are also useful for a

00:19:43.520 --> 00:19:43.530
this case tags are also useful for a
 

00:19:43.530 --> 00:19:46.490
this case tags are also useful for a
couple of other reasons tags namespace

00:19:46.490 --> 00:19:46.500
couple of other reasons tags namespace
 

00:19:46.500 --> 00:19:47.930
couple of other reasons tags namespace
your type of work as I just told you

00:19:47.930 --> 00:19:47.940
your type of work as I just told you
 

00:19:47.940 --> 00:19:50.990
your type of work as I just told you
like you can have tags for the kinds of

00:19:50.990 --> 00:19:51.000
like you can have tags for the kinds of
 

00:19:51.000 --> 00:19:52.430
like you can have tags for the kinds of
operations you're doing get favorites

00:19:52.430 --> 00:19:52.440
operations you're doing get favorites
 

00:19:52.440 --> 00:19:53.700
operations you're doing get favorites
get

00:19:53.700 --> 00:19:53.710
get
 

00:19:53.710 --> 00:19:57.130
get
preferences etc but they also namespace

00:19:57.130 --> 00:19:57.140
preferences etc but they also namespace
 

00:19:57.140 --> 00:19:59.260
preferences etc but they also namespace
libraries and modules so here a library

00:19:59.260 --> 00:19:59.270
libraries and modules so here a library
 

00:19:59.270 --> 00:20:01.870
libraries and modules so here a library
owner or a module owner you should

00:20:01.870 --> 00:20:01.880
owner or a module owner you should
 

00:20:01.880 --> 00:20:03.940
owner or a module owner you should
always tag your work so you can get it

00:20:03.940 --> 00:20:03.950
always tag your work so you can get it
 

00:20:03.950 --> 00:20:06.190
always tag your work so you can get it
later let's say that you have a library

00:20:06.190 --> 00:20:06.200
later let's say that you have a library
 

00:20:06.200 --> 00:20:07.870
later let's say that you have a library
and you move to a new version of that

00:20:07.870 --> 00:20:07.880
and you move to a new version of that
 

00:20:07.880 --> 00:20:09.730
and you move to a new version of that
library in your app maybe you want to

00:20:09.730 --> 00:20:09.740
library in your app maybe you want to
 

00:20:09.740 --> 00:20:11.080
library in your app maybe you want to
cancel all the work you had you can

00:20:11.080 --> 00:20:11.090
cancel all the work you had you can
 

00:20:11.090 --> 00:20:14.080
cancel all the work you had you can
cancel all work by your tag so always

00:20:14.080 --> 00:20:14.090
cancel all work by your tag so always
 

00:20:14.090 --> 00:20:16.120
cancel all work by your tag so always
use tags when you are using a library

00:20:16.120 --> 00:20:16.130
use tags when you are using a library
 

00:20:16.130 --> 00:20:20.560
use tags when you are using a library
and work status also has tags available

00:20:20.560 --> 00:20:20.570
and work status also has tags available
 

00:20:20.570 --> 00:20:21.790
and work status also has tags available
in it so if you're ever looking at a

00:20:21.790 --> 00:20:21.800
in it so if you're ever looking at a
 

00:20:21.800 --> 00:20:23.350
in it so if you're ever looking at a
work status you can get the tags for

00:20:23.350 --> 00:20:23.360
work status you can get the tags for
 

00:20:23.360 --> 00:20:26.260
work status you can get the tags for
that work and see what what you yourself

00:20:26.260 --> 00:20:26.270
that work and see what what you yourself
 

00:20:26.270 --> 00:20:28.960
that work and see what what you yourself
called it in the past when you include

00:20:28.960 --> 00:20:28.970
called it in the past when you include
 

00:20:28.970 --> 00:20:32.770
called it in the past when you include
it one more thing I wanted to talk about

00:20:32.770 --> 00:20:32.780
it one more thing I wanted to talk about
 

00:20:32.780 --> 00:20:35.830
it one more thing I wanted to talk about
is unique work so unique work solves a

00:20:35.830 --> 00:20:35.840
is unique work so unique work solves a
 

00:20:35.840 --> 00:20:38.500
is unique work so unique work solves a
few different problems but one of the

00:20:38.500 --> 00:20:38.510
few different problems but one of the
 

00:20:38.510 --> 00:20:40.930
few different problems but one of the
common ones that almost every app has is

00:20:40.930 --> 00:20:40.940
common ones that almost every app has is
 

00:20:40.940 --> 00:20:43.690
common ones that almost every app has is
syncing you want to sync when you first

00:20:43.690 --> 00:20:43.700
syncing you want to sync when you first
 

00:20:43.700 --> 00:20:45.640
syncing you want to sync when you first
launch the app you want to sync maybe

00:20:45.640 --> 00:20:45.650
launch the app you want to sync maybe
 

00:20:45.650 --> 00:20:47.890
launch the app you want to sync maybe
every 12 to 24 hours to get the freshest

00:20:47.890 --> 00:20:47.900
every 12 to 24 hours to get the freshest
 

00:20:47.900 --> 00:20:50.350
every 12 to 24 hours to get the freshest
data and you may also want to sync when

00:20:50.350 --> 00:20:50.360
data and you may also want to sync when
 

00:20:50.360 --> 00:20:52.540
data and you may also want to sync when
your language changes maybe you have a

00:20:52.540 --> 00:20:52.550
your language changes maybe you have a
 

00:20:52.550 --> 00:20:55.510
your language changes maybe you have a
version of your data in a different

00:20:55.510 --> 00:20:55.520
version of your data in a different
 

00:20:55.520 --> 00:20:57.280
version of your data in a different
language so you want to sync at that

00:20:57.280 --> 00:20:57.290
language so you want to sync at that
 

00:20:57.290 --> 00:20:59.830
language so you want to sync at that
point too so you're doing all this

00:20:59.830 --> 00:20:59.840
point too so you're doing all this
 

00:20:59.840 --> 00:21:01.990
point too so you're doing all this
thinking but you really only want one

00:21:01.990 --> 00:21:02.000
thinking but you really only want one
 

00:21:02.000 --> 00:21:03.550
thinking but you really only want one
sync active at a time you don't want

00:21:03.550 --> 00:21:03.560
sync active at a time you don't want
 

00:21:03.560 --> 00:21:05.890
sync active at a time you don't want
four sync operations running which one's

00:21:05.890 --> 00:21:05.900
four sync operations running which one's
 

00:21:05.900 --> 00:21:07.480
four sync operations running which one's
the right one which one wins you don't

00:21:07.480 --> 00:21:07.490
the right one which one wins you don't
 

00:21:07.490 --> 00:21:12.100
the right one which one wins you don't
know you just want one unique word can

00:21:12.100 --> 00:21:12.110
know you just want one unique word can
 

00:21:12.110 --> 00:21:14.710
know you just want one unique word can
solve this so it is each a chain of work

00:21:14.710 --> 00:21:14.720
solve this so it is each a chain of work
 

00:21:14.720 --> 00:21:17.800
solve this so it is each a chain of work
can be given a unique name you can in

00:21:17.800 --> 00:21:17.810
can be given a unique name you can in
 

00:21:17.810 --> 00:21:20.770
can be given a unique name you can in
cue query and cancel using that name and

00:21:20.770 --> 00:21:20.780
cue query and cancel using that name and
 

00:21:20.780 --> 00:21:23.170
cue query and cancel using that name and
there can only be one chain of work with

00:21:23.170 --> 00:21:23.180
there can only be one chain of work with
 

00:21:23.180 --> 00:21:26.320
there can only be one chain of work with
that name let's take a look at that sync

00:21:26.320 --> 00:21:26.330
that name let's take a look at that sync
 

00:21:26.330 --> 00:21:31.110
that name let's take a look at that sync
example so if I say begin unique work

00:21:31.110 --> 00:21:31.120
example so if I say begin unique work
 

00:21:31.120 --> 00:21:33.820
example so if I say begin unique work
with my name let's say sync in this case

00:21:33.820 --> 00:21:33.830
with my name let's say sync in this case
 

00:21:33.830 --> 00:21:38.620
with my name let's say sync in this case
and the next argument is the what I call

00:21:38.620 --> 00:21:38.630
and the next argument is the what I call
 

00:21:38.630 --> 00:21:41.080
and the next argument is the what I call
the existing work policy so if there is

00:21:41.080 --> 00:21:41.090
the existing work policy so if there is
 

00:21:41.090 --> 00:21:44.530
the existing work policy so if there is
work with this name sync what should I

00:21:44.530 --> 00:21:44.540
work with this name sync what should I
 

00:21:44.540 --> 00:21:47.020
work with this name sync what should I
do with it in this case I say keeping I

00:21:47.020 --> 00:21:47.030
do with it in this case I say keeping I
 

00:21:47.030 --> 00:21:49.510
do with it in this case I say keeping I
want to keep the existing work ignore

00:21:49.510 --> 00:21:49.520
want to keep the existing work ignore
 

00:21:49.520 --> 00:21:51.550
want to keep the existing work ignore
what I'm doing right now the next

00:21:51.550 --> 00:21:51.560
what I'm doing right now the next
 

00:21:51.560 --> 00:21:54.070
what I'm doing right now the next
argument is actually your work requests

00:21:54.070 --> 00:21:54.080
argument is actually your work requests
 

00:21:54.080 --> 00:21:55.630
argument is actually your work requests
in this case of sync request when you

00:21:55.630 --> 00:21:55.640
in this case of sync request when you
 

00:21:55.640 --> 00:21:59.230
in this case of sync request when you
into it so if there's work with the name

00:21:59.230 --> 00:21:59.240
into it so if there's work with the name
 

00:21:59.240 --> 00:22:01.930
into it so if there's work with the name
think already in flight it will keep

00:22:01.930 --> 00:22:01.940
think already in flight it will keep
 

00:22:01.940 --> 00:22:04.360
think already in flight it will keep
that if there isn't it will link you

00:22:04.360 --> 00:22:04.370
that if there isn't it will link you
 

00:22:04.370 --> 00:22:06.310
that if there isn't it will link you
this and exit

00:22:06.310 --> 00:22:06.320
this and exit
 

00:22:06.320 --> 00:22:09.889
this and exit
so this is how you do dupe your sinks so

00:22:09.889 --> 00:22:09.899
so this is how you do dupe your sinks so
 

00:22:09.899 --> 00:22:12.700
so this is how you do dupe your sinks so
here at Google we love chat apps and

00:22:12.700 --> 00:22:12.710
here at Google we love chat apps and
 

00:22:12.710 --> 00:22:15.049
here at Google we love chat apps and
maybe you're updating your chat status

00:22:15.049 --> 00:22:15.059
maybe you're updating your chat status
 

00:22:15.059 --> 00:22:18.440
maybe you're updating your chat status
so you want to say I'm bored and then 10

00:22:18.440 --> 00:22:18.450
so you want to say I'm bored and then 10
 

00:22:18.450 --> 00:22:20.419
so you want to say I'm bored and then 10
seconds later I'm watching TV then I'm

00:22:20.419 --> 00:22:20.429
seconds later I'm watching TV then I'm
 

00:22:20.429 --> 00:22:23.060
seconds later I'm watching TV then I'm
bored again okay I'm going to sleep and

00:22:23.060 --> 00:22:23.070
bored again okay I'm going to sleep and
 

00:22:23.070 --> 00:22:25.340
bored again okay I'm going to sleep and
you're in a bad network connection state

00:22:25.340 --> 00:22:25.350
you're in a bad network connection state
 

00:22:25.350 --> 00:22:27.950
you're in a bad network connection state
you have bad Wi-Fi and maybe the first

00:22:27.950 --> 00:22:27.960
you have bad Wi-Fi and maybe the first
 

00:22:27.960 --> 00:22:29.419
you have bad Wi-Fi and maybe the first
thing hasn't gone through when you type

00:22:29.419 --> 00:22:29.429
thing hasn't gone through when you type
 

00:22:29.429 --> 00:22:31.149
thing hasn't gone through when you type
your second chat status update and

00:22:31.149 --> 00:22:31.159
your second chat status update and
 

00:22:31.159 --> 00:22:33.590
your second chat status update and
really the second one should win and the

00:22:33.590 --> 00:22:33.600
really the second one should win and the
 

00:22:33.600 --> 00:22:35.360
really the second one should win and the
third one should win over that so you

00:22:35.360 --> 00:22:35.370
third one should win over that so you
 

00:22:35.370 --> 00:22:36.919
third one should win over that so you
want to make sure that the last one wins

00:22:36.919 --> 00:22:36.929
want to make sure that the last one wins
 

00:22:36.929 --> 00:22:41.180
want to make sure that the last one wins
how would you solve this here's a simple

00:22:41.180 --> 00:22:41.190
how would you solve this here's a simple
 

00:22:41.190 --> 00:22:42.499
how would you solve this here's a simple
function you don't even you need to read

00:22:42.499 --> 00:22:42.509
function you don't even you need to read
 

00:22:42.509 --> 00:22:43.999
function you don't even you need to read
the rest of it it's the last line that I

00:22:43.999 --> 00:22:44.009
the rest of it it's the last line that I
 

00:22:44.009 --> 00:22:45.560
the rest of it it's the last line that I
want you to care about which is begin

00:22:45.560 --> 00:22:45.570
want you to care about which is begin
 

00:22:45.570 --> 00:22:49.039
want you to care about which is begin
unique work it's your name is update

00:22:49.039 --> 00:22:49.049
unique work it's your name is update
 

00:22:49.049 --> 00:22:51.289
unique work it's your name is update
status and you choose a replace option

00:22:51.289 --> 00:22:51.299
status and you choose a replace option
 

00:22:51.299 --> 00:22:54.470
status and you choose a replace option
replace cancels and deletes any existing

00:22:54.470 --> 00:22:54.480
replace cancels and deletes any existing
 

00:22:54.480 --> 00:22:57.200
replace cancels and deletes any existing
in flight operations off that name so

00:22:57.200 --> 00:22:57.210
in flight operations off that name so
 

00:22:57.210 --> 00:22:59.299
in flight operations off that name so
the last one always does want in this

00:22:59.299 --> 00:22:59.309
the last one always does want in this
 

00:22:59.309 --> 00:23:02.210
the last one always does want in this
case if you have to update chat status

00:23:02.210 --> 00:23:02.220
case if you have to update chat status
 

00:23:02.220 --> 00:23:07.399
case if you have to update chat status
calls the last one will win and finally

00:23:07.399 --> 00:23:07.409
calls the last one will win and finally
 

00:23:07.409 --> 00:23:10.279
calls the last one will win and finally
I love music I love the Foo Fighters I

00:23:10.279 --> 00:23:10.289
I love music I love the Foo Fighters I
 

00:23:10.289 --> 00:23:11.629
I love music I love the Foo Fighters I
was building a playlist the other day

00:23:11.629 --> 00:23:11.639
was building a playlist the other day
 

00:23:11.639 --> 00:23:13.190
was building a playlist the other day
with all their songs there's a lot of

00:23:13.190 --> 00:23:13.200
with all their songs there's a lot of
 

00:23:13.200 --> 00:23:16.190
with all their songs there's a lot of
songs there's like 150 or 200 songs and

00:23:16.190 --> 00:23:16.200
songs there's like 150 or 200 songs and
 

00:23:16.200 --> 00:23:19.369
songs there's like 150 or 200 songs and
I was doing all of this I was adding a

00:23:19.369 --> 00:23:19.379
I was doing all of this I was adding a
 

00:23:19.379 --> 00:23:21.950
I was doing all of this I was adding a
song I was shuffling two songs around I

00:23:21.950 --> 00:23:21.960
song I was shuffling two songs around I
 

00:23:21.960 --> 00:23:23.210
song I was shuffling two songs around I
was moving something to the bottom of

00:23:23.210 --> 00:23:23.220
was moving something to the bottom of
 

00:23:23.220 --> 00:23:24.859
was moving something to the bottom of
the list I was deleting a song because I

00:23:24.859 --> 00:23:24.869
the list I was deleting a song because I
 

00:23:24.869 --> 00:23:27.230
the list I was deleting a song because I
had it already somewhere else these are

00:23:27.230 --> 00:23:27.240
had it already somewhere else these are
 

00:23:27.240 --> 00:23:29.629
had it already somewhere else these are
all things that I want to do using work

00:23:29.629 --> 00:23:29.639
all things that I want to do using work
 

00:23:29.639 --> 00:23:31.789
all things that I want to do using work
manager but how would I do that these

00:23:31.789 --> 00:23:31.799
manager but how would I do that these
 

00:23:31.799 --> 00:23:34.419
manager but how would I do that these
things all have to execute in order and

00:23:34.419 --> 00:23:34.429
things all have to execute in order and
 

00:23:34.429 --> 00:23:37.879
things all have to execute in order and
so since the order is important we

00:23:37.879 --> 00:23:37.889
so since the order is important we
 

00:23:37.889 --> 00:23:40.519
so since the order is important we
provide the ability to use the append

00:23:40.519 --> 00:23:40.529
provide the ability to use the append
 

00:23:40.529 --> 00:23:43.940
provide the ability to use the append
existing work policy that says do this

00:23:43.940 --> 00:23:43.950
existing work policy that says do this
 

00:23:43.950 --> 00:23:48.049
existing work policy that says do this
work at the end of the list of update

00:23:48.049 --> 00:23:48.059
work at the end of the list of update
 

00:23:48.059 --> 00:23:50.840
work at the end of the list of update
playlist operations so just append this

00:23:50.840 --> 00:23:50.850
playlist operations so just append this
 

00:23:50.850 --> 00:23:53.060
playlist operations so just append this
to the end of this thing so everything

00:23:53.060 --> 00:23:53.070
to the end of this thing so everything
 

00:23:53.070 --> 00:23:55.009
to the end of this thing so everything
else must successfully execute before

00:23:55.009 --> 00:23:55.019
else must successfully execute before
 

00:23:55.019 --> 00:23:58.070
else must successfully execute before
this execute so you can add operations

00:23:58.070 --> 00:23:58.080
this execute so you can add operations
 

00:23:58.080 --> 00:24:02.779
this execute so you can add operations
to the end so existing work policy as a

00:24:02.779 --> 00:24:02.789
to the end so existing work policy as a
 

00:24:02.789 --> 00:24:05.539
to the end so existing work policy as a
summary there's three types keep replace

00:24:05.539 --> 00:24:05.549
summary there's three types keep replace
 

00:24:05.549 --> 00:24:10.460
summary there's three types keep replace
and append a few notes about periodic

00:24:10.460 --> 00:24:10.470
and append a few notes about periodic
 

00:24:10.470 --> 00:24:12.200
and append a few notes about periodic
work it works very similarly to

00:24:12.200 --> 00:24:12.210
work it works very similarly to
 

00:24:12.210 --> 00:24:14.180
work it works very similarly to
everything you've seen so far just a

00:24:14.180 --> 00:24:14.190
everything you've seen so far just a
 

00:24:14.190 --> 00:24:16.759
everything you've seen so far just a
couple notes on it so the minimum period

00:24:16.759 --> 00:24:16.769
couple notes on it so the minimum period
 

00:24:16.769 --> 00:24:18.680
couple notes on it so the minimum period
length is the same as job scheduler it

00:24:18.680 --> 00:24:18.690
length is the same as job scheduler it
 

00:24:18.690 --> 00:24:19.039
length is the same as job scheduler it
is four

00:24:19.039 --> 00:24:19.049
is four
 

00:24:19.049 --> 00:24:21.259
is four
fifteen minutes it is still subject to

00:24:21.259 --> 00:24:21.269
fifteen minutes it is still subject to
 

00:24:21.269 --> 00:24:23.210
fifteen minutes it is still subject to
doze mode and OS background restrictions

00:24:23.210 --> 00:24:23.220
doze mode and OS background restrictions
 

00:24:23.220 --> 00:24:24.649
doze mode and OS background restrictions
just like any of the other work we've

00:24:24.649 --> 00:24:24.659
just like any of the other work we've
 

00:24:24.659 --> 00:24:27.109
just like any of the other work we've
talked about it can't be chained and it

00:24:27.109 --> 00:24:27.119
talked about it can't be chained and it
 

00:24:27.119 --> 00:24:29.690
talked about it can't be chained and it
can't have initial delays and we think

00:24:29.690 --> 00:24:29.700
can't have initial delays and we think
 

00:24:29.700 --> 00:24:31.580
can't have initial delays and we think
that that just sort of makes good API

00:24:31.580 --> 00:24:31.590
that that just sort of makes good API
 

00:24:31.590 --> 00:24:35.330
that that just sort of makes good API
sense that it's much more reasonable to

00:24:35.330 --> 00:24:35.340
sense that it's much more reasonable to
 

00:24:35.340 --> 00:24:39.649
sense that it's much more reasonable to
think of it in those terms all right so

00:24:39.649 --> 00:24:39.659
think of it in those terms all right so
 

00:24:39.659 --> 00:24:41.180
think of it in those terms all right so
we've talked a lot about code let's uh

00:24:41.180 --> 00:24:41.190
we've talked a lot about code let's uh
 

00:24:41.190 --> 00:24:43.519
we've talked a lot about code let's uh
let's talk about how it all works under

00:24:43.519 --> 00:24:43.529
let's talk about how it all works under
 

00:24:43.529 --> 00:24:48.139
let's talk about how it all works under
the hood so you've got at work you in

00:24:48.139 --> 00:24:48.149
the hood so you've got at work you in
 

00:24:48.149 --> 00:24:50.259
the hood so you've got at work you in
queue it we store it in our database

00:24:50.259 --> 00:24:50.269
queue it we store it in our database
 

00:24:50.269 --> 00:24:54.109
queue it we store it in our database
what happens after that well if the work

00:24:54.109 --> 00:24:54.119
what happens after that well if the work
 

00:24:54.119 --> 00:24:56.029
what happens after that well if the work
is eligible for execution we just send

00:24:56.029 --> 00:24:56.039
is eligible for execution we just send
 

00:24:56.039 --> 00:24:57.950
is eligible for execution we just send
it to the executor right away by the way

00:24:57.950 --> 00:24:57.960
it to the executor right away by the way
 

00:24:57.960 --> 00:24:59.899
it to the executor right away by the way
this executor you can actually specify

00:24:59.899 --> 00:24:59.909
this executor you can actually specify
 

00:24:59.909 --> 00:25:03.249
this executor you can actually specify
it but we do provide one that's default

00:25:03.249 --> 00:25:03.259
it but we do provide one that's default
 

00:25:03.259 --> 00:25:05.749
it but we do provide one that's default
but let's say that your process gets

00:25:05.749 --> 00:25:05.759
but let's say that your process gets
 

00:25:05.759 --> 00:25:07.849
but let's say that your process gets
killed well what happens then how does

00:25:07.849 --> 00:25:07.859
killed well what happens then how does
 

00:25:07.859 --> 00:25:09.590
killed well what happens then how does
it get woken up and how does this work

00:25:09.590 --> 00:25:09.600
it get woken up and how does this work
 

00:25:09.600 --> 00:25:14.359
it get woken up and how does this work
run again so if you're on API 23 plus we

00:25:14.359 --> 00:25:14.369
run again so if you're on API 23 plus we
 

00:25:14.369 --> 00:25:16.639
run again so if you're on API 23 plus we
send it to job scheduler as well and job

00:25:16.639 --> 00:25:16.649
send it to job scheduler as well and job
 

00:25:16.649 --> 00:25:19.009
send it to job scheduler as well and job
scheduler invokes an IPC wakes up your

00:25:19.009 --> 00:25:19.019
scheduler invokes an IPC wakes up your
 

00:25:19.019 --> 00:25:21.200
scheduler invokes an IPC wakes up your
process it goes to the same executor and

00:25:21.200 --> 00:25:21.210
process it goes to the same executor and
 

00:25:21.210 --> 00:25:24.499
process it goes to the same executor and
that's where it runs if it's an older

00:25:24.499 --> 00:25:24.509
that's where it runs if it's an older
 

00:25:24.509 --> 00:25:27.560
that's where it runs if it's an older
device and you use firebase job

00:25:27.560 --> 00:25:27.570
device and you use firebase job
 

00:25:27.570 --> 00:25:29.779
device and you use firebase job
dispatcher and user optional dependency

00:25:29.779 --> 00:25:29.789
dispatcher and user optional dependency
 

00:25:29.789 --> 00:25:31.249
dispatcher and user optional dependency
we can send it to firebase job

00:25:31.249 --> 00:25:31.259
we can send it to firebase job
 

00:25:31.259 --> 00:25:33.950
we can send it to firebase job
dispatcher same thing invokes an IPC

00:25:33.950 --> 00:25:33.960
dispatcher same thing invokes an IPC
 

00:25:33.960 --> 00:25:36.379
dispatcher same thing invokes an IPC
runs it on that executor what if you

00:25:36.379 --> 00:25:36.389
runs it on that executor what if you
 

00:25:36.389 --> 00:25:37.940
runs it on that executor what if you
don't have that or you're not using a

00:25:37.940 --> 00:25:37.950
don't have that or you're not using a
 

00:25:37.950 --> 00:25:39.710
don't have that or you're not using a
Google Play services device so you're

00:25:39.710 --> 00:25:39.720
Google Play services device so you're
 

00:25:39.720 --> 00:25:42.320
Google Play services device so you're
using something else we have an

00:25:42.320 --> 00:25:42.330
using something else we have an
 

00:25:42.330 --> 00:25:43.940
using something else we have an
accustomed alarm manager and broadcast

00:25:43.940 --> 00:25:43.950
accustomed alarm manager and broadcast
 

00:25:43.950 --> 00:25:45.979
accustomed alarm manager and broadcast
receiver implementation and the same

00:25:45.979 --> 00:25:45.989
receiver implementation and the same
 

00:25:45.989 --> 00:25:49.340
receiver implementation and the same
thing uses an IPC wakes up your app when

00:25:49.340 --> 00:25:49.350
thing uses an IPC wakes up your app when
 

00:25:49.350 --> 00:25:53.109
thing uses an IPC wakes up your app when
the time is right and runs the job a

00:25:53.109 --> 00:25:53.119
 

00:25:53.119 --> 00:25:55.849
couple implementation details so job

00:25:55.849 --> 00:25:55.859
couple implementation details so job
 

00:25:55.859 --> 00:25:57.739
couple implementation details so job
scheduler and firebase job dispatcher

00:25:57.739 --> 00:25:57.749
scheduler and firebase job dispatcher
 

00:25:57.749 --> 00:25:59.659
scheduler and firebase job dispatcher
through Google Play services they prove

00:25:59.659 --> 00:25:59.669
through Google Play services they prove
 

00:25:59.669 --> 00:26:01.820
through Google Play services they prove
they provide central load balancing

00:26:01.820 --> 00:26:01.830
they provide central load balancing
 

00:26:01.830 --> 00:26:05.479
they provide central load balancing
mechanism for executions so if every app

00:26:05.479 --> 00:26:05.489
mechanism for executions so if every app
 

00:26:05.489 --> 00:26:07.729
mechanism for executions so if every app
on your device is trying to run jobs

00:26:07.729 --> 00:26:07.739
on your device is trying to run jobs
 

00:26:07.739 --> 00:26:09.409
on your device is trying to run jobs
their load balance them they'll make

00:26:09.409 --> 00:26:09.419
their load balance them they'll make
 

00:26:09.419 --> 00:26:11.419
their load balance them they'll make
sure that like you're not running too

00:26:11.419 --> 00:26:11.429
sure that like you're not running too
 

00:26:11.429 --> 00:26:13.070
sure that like you're not running too
much work on your device and burning up

00:26:13.070 --> 00:26:13.080
much work on your device and burning up
 

00:26:13.080 --> 00:26:14.889
much work on your device and burning up
your battery the alarmmanager

00:26:14.889 --> 00:26:14.899
your battery the alarmmanager
 

00:26:14.899 --> 00:26:16.310
your battery the alarmmanager
implementation that we have

00:26:16.310 --> 00:26:16.320
implementation that we have
 

00:26:16.320 --> 00:26:18.109
implementation that we have
unfortunately can't do that because it's

00:26:18.109 --> 00:26:18.119
unfortunately can't do that because it's
 

00:26:18.119 --> 00:26:21.950
unfortunately can't do that because it's
only aware of your own app of course

00:26:21.950 --> 00:26:21.960
only aware of your own app of course
 

00:26:21.960 --> 00:26:24.529
only aware of your own app of course
your concepts like content URI triggers

00:26:24.529 --> 00:26:24.539
your concepts like content URI triggers
 

00:26:24.539 --> 00:26:27.169
your concepts like content URI triggers
idle doze mode etc are only available at

00:26:27.169 --> 00:26:27.179
idle doze mode etc are only available at
 

00:26:27.179 --> 00:26:28.350
idle doze mode etc are only available at
the API level

00:26:28.350 --> 00:26:28.360
the API level
 

00:26:28.360 --> 00:26:30.690
the API level
introduce that so those methods will be

00:26:30.690 --> 00:26:30.700
introduce that so those methods will be
 

00:26:30.700 --> 00:26:33.720
introduce that so those methods will be
marked with requires API the appropriate

00:26:33.720 --> 00:26:33.730
marked with requires API the appropriate
 

00:26:33.730 --> 00:26:36.570
marked with requires API the appropriate
API level we take care of obtaining

00:26:36.570 --> 00:26:36.580
API level we take care of obtaining
 

00:26:36.580 --> 00:26:39.000
API level we take care of obtaining
wakelocks when necessary so especially

00:26:39.000 --> 00:26:39.010
wakelocks when necessary so especially
 

00:26:39.010 --> 00:26:40.320
wakelocks when necessary so especially
this is true for the alarmmanager

00:26:40.320 --> 00:26:40.330
this is true for the alarmmanager
 

00:26:40.330 --> 00:26:43.169
this is true for the alarmmanager
implementation don't take wakelocks in

00:26:43.169 --> 00:26:43.179
implementation don't take wakelocks in
 

00:26:43.179 --> 00:26:45.810
implementation don't take wakelocks in
your workers you don't need to do that

00:26:45.810 --> 00:26:45.820
your workers you don't need to do that
 

00:26:45.820 --> 00:26:50.490
your workers you don't need to do that
we take care of it for you finally let's

00:26:50.490 --> 00:26:50.500
we take care of it for you finally let's
 

00:26:50.500 --> 00:26:52.200
we take care of it for you finally let's
talk a little bit about testing you want

00:26:52.200 --> 00:26:52.210
talk a little bit about testing you want
 

00:26:52.210 --> 00:26:55.380
talk a little bit about testing you want
to test this app we provide a testing

00:26:55.380 --> 00:26:55.390
to test this app we provide a testing
 

00:26:55.390 --> 00:26:57.710
to test this app we provide a testing
library it has a synchronous executor

00:26:57.710 --> 00:26:57.720
library it has a synchronous executor
 

00:26:57.720 --> 00:27:00.480
library it has a synchronous executor
use work manager as normal to in queue

00:27:00.480 --> 00:27:00.490
use work manager as normal to in queue
 

00:27:00.490 --> 00:27:02.759
use work manager as normal to in queue
your request and we provide a class

00:27:02.759 --> 00:27:02.769
your request and we provide a class
 

00:27:02.769 --> 00:27:05.789
your request and we provide a class
called test driver which executes sync

00:27:05.789 --> 00:27:05.799
called test driver which executes sync
 

00:27:05.799 --> 00:27:07.500
called test driver which executes sync
you'd work that has constraints so we

00:27:07.500 --> 00:27:07.510
you'd work that has constraints so we
 

00:27:07.510 --> 00:27:08.789
you'd work that has constraints so we
can just pretend that the constraints

00:27:08.789 --> 00:27:08.799
can just pretend that the constraints
 

00:27:08.799 --> 00:27:11.700
can just pretend that the constraints
been met periodic and initial delay

00:27:11.700 --> 00:27:11.710
been met periodic and initial delay
 

00:27:11.710 --> 00:27:13.350
been met periodic and initial delay
triggers are coming soon we don't have

00:27:13.350 --> 00:27:13.360
triggers are coming soon we don't have
 

00:27:13.360 --> 00:27:16.049
triggers are coming soon we don't have
them yet so if you wanted to look at the

00:27:16.049 --> 00:27:16.059
them yet so if you wanted to look at the
 

00:27:16.059 --> 00:27:16.860
them yet so if you wanted to look at the
code for it

00:27:16.860 --> 00:27:16.870
code for it
 

00:27:16.870 --> 00:27:19.519
code for it
you can initialize the test work manager

00:27:19.519 --> 00:27:19.529
you can initialize the test work manager
 

00:27:19.529 --> 00:27:23.759
you can initialize the test work manager
you can get the test driver create and

00:27:23.759 --> 00:27:23.769
you can get the test driver create and
 

00:27:23.769 --> 00:27:25.379
you can get the test driver create and
in queue your work as you normally would

00:27:25.379 --> 00:27:25.389
in queue your work as you normally would
 

00:27:25.389 --> 00:27:27.629
in queue your work as you normally would
with a constraint in this case and we

00:27:27.629 --> 00:27:27.639
with a constraint in this case and we
 

00:27:27.639 --> 00:27:29.310
with a constraint in this case and we
can tell the test driver hey all

00:27:29.310 --> 00:27:29.320
can tell the test driver hey all
 

00:27:29.320 --> 00:27:32.549
can tell the test driver hey all
constraints are met for this work your

00:27:32.549 --> 00:27:32.559
constraints are met for this work your
 

00:27:32.559 --> 00:27:33.720
constraints are met for this work your
work executes at that point

00:27:33.720 --> 00:27:33.730
work executes at that point
 

00:27:33.730 --> 00:27:35.129
work executes at that point
synchronously and you can verify the

00:27:35.129 --> 00:27:35.139
synchronously and you can verify the
 

00:27:35.139 --> 00:27:36.480
synchronously and you can verify the
state of your app and make sure that

00:27:36.480 --> 00:27:36.490
state of your app and make sure that
 

00:27:36.490 --> 00:27:41.549
state of your app and make sure that
everything's right I also want to talk a

00:27:41.549 --> 00:27:41.559
everything's right I also want to talk a
 

00:27:41.559 --> 00:27:43.169
everything's right I also want to talk a
little bit about best practices before I

00:27:43.169 --> 00:27:43.179
little bit about best practices before I
 

00:27:43.179 --> 00:27:47.220
little bit about best practices before I
end here it's very important to know

00:27:47.220 --> 00:27:47.230
end here it's very important to know
 

00:27:47.230 --> 00:27:50.129
end here it's very important to know
when to use work manager work manager is

00:27:50.129 --> 00:27:50.139
when to use work manager work manager is
 

00:27:50.139 --> 00:27:52.409
when to use work manager work manager is
for tasks that can survive process debts

00:27:52.409 --> 00:27:52.419
for tasks that can survive process debts
 

00:27:52.419 --> 00:27:54.750
for tasks that can survive process debts
it can even wake up your app and your

00:27:54.750 --> 00:27:54.760
it can even wake up your app and your
 

00:27:54.760 --> 00:27:58.560
it can even wake up your app and your
apps process to do the work so for

00:27:58.560 --> 00:27:58.570
apps process to do the work so for
 

00:27:58.570 --> 00:28:00.750
apps process to do the work so for
example it's ok when you want to use it

00:28:00.750 --> 00:28:00.760
example it's ok when you want to use it
 

00:28:00.760 --> 00:28:03.720
example it's ok when you want to use it
to upload media to a server it's also ok

00:28:03.720 --> 00:28:03.730
to upload media to a server it's also ok
 

00:28:03.730 --> 00:28:05.250
to upload media to a server it's also ok
when you part-1 a parse data and store

00:28:05.250 --> 00:28:05.260
when you part-1 a parse data and store
 

00:28:05.260 --> 00:28:08.399
when you part-1 a parse data and store
it in your database it's not ok for that

00:28:08.399 --> 00:28:08.409
it in your database it's not ok for that
 

00:28:08.409 --> 00:28:10.919
it in your database it's not ok for that
example I gave earlier you're extracting

00:28:10.919 --> 00:28:10.929
example I gave earlier you're extracting
 

00:28:10.929 --> 00:28:12.539
example I gave earlier you're extracting
the palette color from an image and

00:28:12.539 --> 00:28:12.549
the palette color from an image and
 

00:28:12.549 --> 00:28:14.789
the palette color from an image and
updating an image view with it because

00:28:14.789 --> 00:28:14.799
updating an image view with it because
 

00:28:14.799 --> 00:28:17.070
updating an image view with it because
that's for gran only work it's also not

00:28:17.070 --> 00:28:17.080
that's for gran only work it's also not
 

00:28:17.080 --> 00:28:18.600
that's for gran only work it's also not
okay when you're parsing data and just

00:28:18.600 --> 00:28:18.610
okay when you're parsing data and just
 

00:28:18.610 --> 00:28:20.190
okay when you're parsing data and just
updating the contents of a view because

00:28:20.190 --> 00:28:20.200
updating the contents of a view because
 

00:28:20.200 --> 00:28:21.690
updating the contents of a view because
you could switch screens you could go in

00:28:21.690 --> 00:28:21.700
you could switch screens you could go in
 

00:28:21.700 --> 00:28:24.480
you could switch screens you could go in
the background it's not work that needs

00:28:24.480 --> 00:28:24.490
the background it's not work that needs
 

00:28:24.490 --> 00:28:26.580
the background it's not work that needs
to use work manager it doesn't need to

00:28:26.580 --> 00:28:26.590
to use work manager it doesn't need to
 

00:28:26.590 --> 00:28:29.370
to use work manager it doesn't need to
survive processed at all so it's not ok

00:28:29.370 --> 00:28:29.380
survive processed at all so it's not ok
 

00:28:29.380 --> 00:28:31.320
survive processed at all so it's not ok
to process payment transactions in it if

00:28:31.320 --> 00:28:31.330
to process payment transactions in it if
 

00:28:31.330 --> 00:28:33.870
to process payment transactions in it if
they care about timing right then so if

00:28:33.870 --> 00:28:33.880
they care about timing right then so if
 

00:28:33.880 --> 00:28:36.950
they care about timing right then so if
you click buy and you want to update the

00:28:36.950 --> 00:28:36.960
you click buy and you want to update the
 

00:28:36.960 --> 00:28:39.750
you click buy and you want to update the
state of the app that really needs

00:28:39.750 --> 00:28:39.760
state of the app that really needs
 

00:28:39.760 --> 00:28:41.610
state of the app that really needs
something else so that last one needs a

00:28:41.610 --> 00:28:41.620
something else so that last one needs a
 

00:28:41.620 --> 00:28:41.870
something else so that last one needs a
four

00:28:41.870 --> 00:28:41.880
four
 

00:28:41.880 --> 00:28:43.940
four
and service the other two may just use

00:28:43.940 --> 00:28:43.950
and service the other two may just use
 

00:28:43.950 --> 00:28:51.890
and service the other two may just use
thread pools or rx also work manager is

00:28:51.890 --> 00:28:51.900
thread pools or rx also work manager is
 

00:28:51.900 --> 00:28:54.560
thread pools or rx also work manager is
not your data store instances of data

00:28:54.560 --> 00:28:54.570
not your data store instances of data
 

00:28:54.570 --> 00:28:56.510
not your data store instances of data
are limited to 10 kilobytes each when

00:28:56.510 --> 00:28:56.520
are limited to 10 kilobytes each when
 

00:28:56.520 --> 00:28:59.090
are limited to 10 kilobytes each when
serialized so data is really meant for

00:28:59.090 --> 00:28:59.100
serialized so data is really meant for
 

00:28:59.100 --> 00:29:01.700
serialized so data is really meant for
like intermediate transportation of

00:29:01.700 --> 00:29:01.710
like intermediate transportation of
 

00:29:01.710 --> 00:29:04.430
like intermediate transportation of
information you can put file your eyes

00:29:04.430 --> 00:29:04.440
information you can put file your eyes
 

00:29:04.440 --> 00:29:06.710
information you can put file your eyes
or keys to other databases in there if

00:29:06.710 --> 00:29:06.720
or keys to other databases in there if
 

00:29:06.720 --> 00:29:09.080
or keys to other databases in there if
you want you can put simple information

00:29:09.080 --> 00:29:09.090
you want you can put simple information
 

00:29:09.090 --> 00:29:11.990
you want you can put simple information
to update your UI if you want to use a

00:29:11.990 --> 00:29:12.000
to update your UI if you want to use a
 

00:29:12.000 --> 00:29:14.300
to update your UI if you want to use a
full data store I would recommend using

00:29:14.300 --> 00:29:14.310
full data store I would recommend using
 

00:29:14.310 --> 00:29:16.430
full data store I would recommend using
room it would be very happy that I'm

00:29:16.430 --> 00:29:16.440
room it would be very happy that I'm
 

00:29:16.440 --> 00:29:20.110
room it would be very happy that I'm
saying this it's an awesome database

00:29:20.110 --> 00:29:20.120
saying this it's an awesome database
 

00:29:20.120 --> 00:29:22.670
saying this it's an awesome database
finally be opportunistic with your work

00:29:22.670 --> 00:29:22.680
finally be opportunistic with your work
 

00:29:22.680 --> 00:29:25.370
finally be opportunistic with your work
so here's a filter compress upload

00:29:25.370 --> 00:29:25.380
so here's a filter compress upload
 

00:29:25.380 --> 00:29:28.940
so here's a filter compress upload
example again the reason that these are

00:29:28.940 --> 00:29:28.950
example again the reason that these are
 

00:29:28.950 --> 00:29:31.370
example again the reason that these are
not just one big job is because they all

00:29:31.370 --> 00:29:31.380
not just one big job is because they all
 

00:29:31.380 --> 00:29:33.800
not just one big job is because they all
have just different constraints so they

00:29:33.800 --> 00:29:33.810
have just different constraints so they
 

00:29:33.810 --> 00:29:35.630
have just different constraints so they
can execute at different times let's say

00:29:35.630 --> 00:29:35.640
can execute at different times let's say
 

00:29:35.640 --> 00:29:37.130
can execute at different times let's say
I'm getting on an airplane and I'm

00:29:37.130 --> 00:29:37.140
I'm getting on an airplane and I'm
 

00:29:37.140 --> 00:29:39.710
I'm getting on an airplane and I'm
uploading a bunch of images and and

00:29:39.710 --> 00:29:39.720
uploading a bunch of images and and
 

00:29:39.720 --> 00:29:41.780
uploading a bunch of images and and
running this chain of work while I go

00:29:41.780 --> 00:29:41.790
running this chain of work while I go
 

00:29:41.790 --> 00:29:43.340
running this chain of work while I go
into airplane mode maybe I don't have

00:29:43.340 --> 00:29:43.350
into airplane mode maybe I don't have
 

00:29:43.350 --> 00:29:45.050
into airplane mode maybe I don't have
network for the next 12 hours because

00:29:45.050 --> 00:29:45.060
network for the next 12 hours because
 

00:29:45.060 --> 00:29:47.000
network for the next 12 hours because
I'm flying across the world well the

00:29:47.000 --> 00:29:47.010
I'm flying across the world well the
 

00:29:47.010 --> 00:29:49.340
I'm flying across the world well the
other work can still execute and it

00:29:49.340 --> 00:29:49.350
other work can still execute and it
 

00:29:49.350 --> 00:29:52.760
other work can still execute and it
should so if you architect like this you

00:29:52.760 --> 00:29:52.770
should so if you architect like this you
 

00:29:52.770 --> 00:29:54.500
should so if you architect like this you
can't do that this also by the way it

00:29:54.500 --> 00:29:54.510
can't do that this also by the way it
 

00:29:54.510 --> 00:29:55.610
can't do that this also by the way it
makes their code a little bit more

00:29:55.610 --> 00:29:55.620
makes their code a little bit more
 

00:29:55.620 --> 00:29:57.410
makes their code a little bit more
testable because you can write a test

00:29:57.410 --> 00:29:57.420
testable because you can write a test
 

00:29:57.420 --> 00:30:00.200
testable because you can write a test
for filtering that isn't conflated with

00:30:00.200 --> 00:30:00.210
for filtering that isn't conflated with
 

00:30:00.210 --> 00:30:04.850
for filtering that isn't conflated with
compression and upload alright and I

00:30:04.850 --> 00:30:04.860
compression and upload alright and I
 

00:30:04.860 --> 00:30:06.710
compression and upload alright and I
want to talk about a few next steps for

00:30:06.710 --> 00:30:06.720
want to talk about a few next steps for
 

00:30:06.720 --> 00:30:09.830
want to talk about a few next steps for
you if you need to reach us and talk to

00:30:09.830 --> 00:30:09.840
you if you need to reach us and talk to
 

00:30:09.840 --> 00:30:12.050
you if you need to reach us and talk to
us about work manager we are in the

00:30:12.050 --> 00:30:12.060
us about work manager we are in the
 

00:30:12.060 --> 00:30:14.420
us about work manager we are in the
Android sandbox just behind us I think

00:30:14.420 --> 00:30:14.430
Android sandbox just behind us I think
 

00:30:14.430 --> 00:30:19.130
Android sandbox just behind us I think
over here diandra comm / arch / work

00:30:19.130 --> 00:30:19.140
over here diandra comm / arch / work
 

00:30:19.140 --> 00:30:21.860
over here diandra comm / arch / work
that's more information on the official

00:30:21.860 --> 00:30:21.870
that's more information on the official
 

00:30:21.870 --> 00:30:24.400
that's more information on the official
developer website about work manager

00:30:24.400 --> 00:30:24.410
developer website about work manager
 

00:30:24.410 --> 00:30:26.570
developer website about work manager
these are all the Gradle dependencies

00:30:26.570 --> 00:30:26.580
these are all the Gradle dependencies
 

00:30:26.580 --> 00:30:28.430
these are all the Gradle dependencies
the first ones are required one the

00:30:28.430 --> 00:30:28.440
the first ones are required one the
 

00:30:28.440 --> 00:30:30.560
the first ones are required one the
second one is if you use firebase job

00:30:30.560 --> 00:30:30.570
second one is if you use firebase job
 

00:30:30.570 --> 00:30:32.960
second one is if you use firebase job
dispatcher also include that there's a

00:30:32.960 --> 00:30:32.970
dispatcher also include that there's a
 

00:30:32.970 --> 00:30:34.460
dispatcher also include that there's a
testing library and of course we have

00:30:34.460 --> 00:30:34.470
testing library and of course we have
 

00:30:34.470 --> 00:30:38.960
testing library and of course we have
Goblin extensions as well work manager

00:30:38.960 --> 00:30:38.970
Goblin extensions as well work manager
 

00:30:38.970 --> 00:30:41.060
Goblin extensions as well work manager
is part of the architecture components

00:30:41.060 --> 00:30:41.070
is part of the architecture components
 

00:30:41.070 --> 00:30:43.940
is part of the architecture components
in Android jetpack and we have a bunch

00:30:43.940 --> 00:30:43.950
in Android jetpack and we have a bunch
 

00:30:43.950 --> 00:30:46.670
in Android jetpack and we have a bunch
of talks here tomorrow navigation

00:30:46.670 --> 00:30:46.680
of talks here tomorrow navigation
 

00:30:46.680 --> 00:30:49.580
of talks here tomorrow navigation
controller 8:30 a.m. hope you guys make

00:30:49.580 --> 00:30:49.590
controller 8:30 a.m. hope you guys make
 

00:30:49.590 --> 00:30:51.299
controller 8:30 a.m. hope you guys make
it there

00:30:51.299 --> 00:30:51.309
it there
 

00:30:51.309 --> 00:30:54.539
it there
and thanks for being part of this talk

00:30:54.539 --> 00:30:54.549
and thanks for being part of this talk
 

00:30:54.549 --> 00:30:56.220
and thanks for being part of this talk
we look forward to hearing back from you

00:30:56.220 --> 00:30:56.230
we look forward to hearing back from you
 

00:30:56.230 --> 00:30:58.250
we look forward to hearing back from you
soon thank you

00:30:58.250 --> 00:30:58.260
soon thank you
 

00:30:58.260 --> 00:31:19.559
soon thank you
[Music]

