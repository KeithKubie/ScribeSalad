WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.994
[MUSIC PLAYING]

00:13:21.893 --> 00:13:24.240
[VIDEO PLAYBACK]

00:13:24.240 --> 00:13:27.210
-Developing a successful
app isn't easy.

00:13:27.210 --> 00:13:28.640
To reach a broad
audience, you'll

00:13:28.640 --> 00:13:32.476
need to consider your iOS,
Android, and mobile web users.

00:13:32.476 --> 00:13:33.850
And to build for
these platforms,

00:13:33.850 --> 00:13:35.600
you'll need a backend
server to store data

00:13:35.600 --> 00:13:37.160
and support the apps.

00:13:37.160 --> 00:13:39.670
Of course, you'll want to
get your users logged in,

00:13:39.670 --> 00:13:42.090
hopefully lots of users,
which means your backend

00:13:42.090 --> 00:13:43.350
will have to scale.

00:13:43.350 --> 00:13:45.430
Then after you've solved
your scaling problems,

00:13:45.430 --> 00:13:47.450
you'll have to find more
ways to spread the word

00:13:47.450 --> 00:13:48.290
to get new users.

00:13:48.290 --> 00:13:50.680
And have you found a way to
measure all this activity?

00:13:50.680 --> 00:13:52.607
And oh no, your app is
crashing and causing

00:13:52.607 --> 00:13:55.065
service to melt down, and you
haven't even made a dime yet.

00:13:58.040 --> 00:13:59.780
Don't you wish this
could be easier?

00:13:59.780 --> 00:14:01.400
This is why we built Firebase.

00:14:01.400 --> 00:14:04.090
It has all the tools you need
to build a successful app.

00:14:04.090 --> 00:14:06.580
It helps you reach new
users, keep them engaged,

00:14:06.580 --> 00:14:10.060
scale up to meet that demand,
in addition to getting paid.

00:14:10.060 --> 00:14:11.790
From the beginning,
with Firebase,

00:14:11.790 --> 00:14:13.910
you'll have Test Lab
and Crash Reporting

00:14:13.910 --> 00:14:16.840
to prevent and diagnose
errors in your app.

00:14:16.840 --> 00:14:18.340
Your backend
infrastructure problems

00:14:18.340 --> 00:14:21.390
are solved with our real
time database, file storage,

00:14:21.390 --> 00:14:23.320
and hosting solutions.

00:14:23.320 --> 00:14:26.730
Acquiring new users is
easy with invites, AdWords,

00:14:26.730 --> 00:14:28.170
and dynamic likes.

00:14:28.170 --> 00:14:30.020
And using the
authentication component,

00:14:30.020 --> 00:14:33.210
you can get those users logged
in with minimal friction.

00:14:33.210 --> 00:14:35.180
Once installed, you
can keep your users

00:14:35.180 --> 00:14:38.200
engaged with notifications,
cloud messaging, and app

00:14:38.200 --> 00:14:39.350
indexing.

00:14:39.350 --> 00:14:41.750
Then, with remote config,
you'll have the freedom

00:14:41.750 --> 00:14:44.250
to experiment with new
features and optimize the user

00:14:44.250 --> 00:14:46.260
experience in real time.

00:14:46.260 --> 00:14:47.890
And of course,
you can earn money

00:14:47.890 --> 00:14:49.910
with the same AdMob
component that's been

00:14:49.910 --> 00:14:52.590
monetized great apps for years.

00:14:52.590 --> 00:14:56.000
Last, but certainly not
least, our all new analytics

00:14:56.000 --> 00:14:58.530
component, designed
uniquely for Firebase,

00:14:58.530 --> 00:15:00.750
brings insight into how
well these components are

00:15:00.750 --> 00:15:03.200
working for you and your users.

00:15:03.200 --> 00:15:06.120
With Firebase analytics,
you can measure and optimize

00:15:06.120 --> 00:15:08.330
your advertising
campaigns, discover

00:15:08.330 --> 00:15:10.030
who are your most
valuable users,

00:15:10.030 --> 00:15:13.700
and understand exactly how
they are using your app.

00:15:13.700 --> 00:15:15.989
Now all these components
work great on their own

00:15:15.989 --> 00:15:17.405
and provide a solid
infrastructure

00:15:17.405 --> 00:15:20.340
to build out your app,
but they work even better

00:15:20.340 --> 00:15:22.830
when combined in creative ways.

00:15:22.830 --> 00:15:25.390
So let Firebase handle
the details of your app's

00:15:25.390 --> 00:15:28.840
backend infrastructure, user
engagement, and monetization,

00:15:28.840 --> 00:15:30.580
while you spend
more time building

00:15:30.580 --> 00:15:33.040
the apps your users will love.

00:15:33.040 --> 00:15:34.860
To get started right
now with Firebase

00:15:34.860 --> 00:15:38.050
on Android, iOS, or the
web, follow these links

00:15:38.050 --> 00:15:39.570
for more information.

00:15:39.570 --> 00:15:42.770
Then, to manage and monitor
your apps connected to Firebase,

00:15:42.770 --> 00:15:44.420
there's a web console
to view crashes,

00:15:44.420 --> 00:15:47.010
set up experiments, track
analytics, and a whole lot

00:15:47.010 --> 00:15:47.950
more.

00:15:47.950 --> 00:15:50.620
And to learn more about Firebase
and all of its components,

00:15:50.620 --> 00:15:52.910
you can read the
documentation right here.

00:15:52.910 --> 00:15:54.570
We can't wait to
see what you build.

00:15:54.570 --> 00:15:55.200
[END PLAYBACK]

00:15:55.200 --> 00:15:59.700
MARTIN OMANDER: Welcome to this
"Ask Firebase" live Hangout.

00:15:59.700 --> 00:16:03.170
Last year after Google's
Developer Conference I/O,

00:16:03.170 --> 00:16:07.130
we ran a live Hangout
about Android Marshmallow,

00:16:07.130 --> 00:16:11.790
which was one of the big
announcements at I/O 2015.

00:16:11.790 --> 00:16:15.380
Last week, Google ran I/O 2016.

00:16:15.380 --> 00:16:17.060
And one of the
biggest announcements

00:16:17.060 --> 00:16:20.100
there was Firebase.

00:16:20.100 --> 00:16:23.490
Firebase is a set of
tools and infrastructure

00:16:23.490 --> 00:16:27.510
that you as a developer can
use to improve your apps

00:16:27.510 --> 00:16:29.460
and build your business.

00:16:29.460 --> 00:16:31.360
As a matter of fact,
I've used it quite a bit

00:16:31.360 --> 00:16:34.220
already to become a better dad.

00:16:34.220 --> 00:16:38.040
I'm working together with my
son on a game that is using

00:16:38.040 --> 00:16:39.920
a lot of Firebase services.

00:16:39.920 --> 00:16:44.620
And it's been a great
father-son bonding experience.

00:16:44.620 --> 00:16:46.388
But enough about me.

00:16:46.388 --> 00:16:47.263
Let's talk about you.

00:16:47.263 --> 00:16:50.880
You are one of about
4,000 developers

00:16:50.880 --> 00:16:54.790
that is tuning in from
68 different countries

00:16:54.790 --> 00:16:56.450
to watch today.

00:16:56.450 --> 00:16:59.020
Thank you for joining us.

00:16:59.020 --> 00:17:01.190
So with such an
excellent audience,

00:17:01.190 --> 00:17:05.150
we made sure to get
you an excellent panel.

00:17:05.150 --> 00:17:09.780
So on the panel here today to
answer your Firebase questions,

00:17:09.780 --> 00:17:14.480
we have, on my left, Ian Barber,
a developer programs engineer

00:17:14.480 --> 00:17:16.569
working on Firebase
here at Google.

00:17:16.569 --> 00:17:17.099
Welcome Ian.

00:17:17.099 --> 00:17:18.074
IAN BARBER: Thank you.

00:17:18.074 --> 00:17:20.240
MARTIN OMANDER: Next to Ian
we have Magnus Hyttsten,

00:17:20.240 --> 00:17:23.981
a Google Developer advocate
also working on Firebase.

00:17:23.981 --> 00:17:24.480
Welcome.

00:17:24.480 --> 00:17:25.930
MAGNUS HYTTSTEN:
Thank you so much.

00:17:25.930 --> 00:17:27.346
MARTIN OMANDER:
And next to Magnus

00:17:27.346 --> 00:17:31.880
we have James Tamplin, a
Firebase cofounder and now

00:17:31.880 --> 00:17:35.020
a Firebase product
lead at Google.

00:17:35.020 --> 00:17:35.900
Welcome James.

00:17:35.900 --> 00:17:36.850
JAMES TAMPLIN:
Thank you, Martin.

00:17:36.850 --> 00:17:38.308
MARTIN OMANDER:
Can you believe it?

00:17:38.308 --> 00:17:39.345
68 countries?

00:17:39.345 --> 00:17:40.928
JAMES TAMPLIN: It's
pretty incredible.

00:17:40.928 --> 00:17:43.580
MARTIN OMANDER:
Pretty incredible.

00:17:43.580 --> 00:17:47.080
But, the key participant
in this event

00:17:47.080 --> 00:17:51.920
is you, because the panel here
is here to answer your Firebase

00:17:51.920 --> 00:17:53.460
questions.

00:17:53.460 --> 00:17:58.030
And the way to ask those
questions is to tweet or make

00:17:58.030 --> 00:18:04.120
a Google+ post and use the
hashtag #AskFirebaseLive and we

00:18:04.120 --> 00:18:05.400
will see it.

00:18:05.400 --> 00:18:09.090
We'll try to answer as many of
your questions as we can today.

00:18:09.090 --> 00:18:10.920
And we may not get
through all of them.

00:18:10.920 --> 00:18:13.810
And the ones we're not
able to get through we'll

00:18:13.810 --> 00:18:17.430
see if we can answer
later on social media.

00:18:17.430 --> 00:18:19.430
Before we get into
the questions though--

00:18:19.430 --> 00:18:22.120
and I've looked at the list, and
there's a really good questions

00:18:22.120 --> 00:18:26.120
in there-- we are going to
hear a short introduction

00:18:26.120 --> 00:18:31.240
about what Firebase is and how
it can help you as a developer.

00:18:31.240 --> 00:18:34.270
And James is going to
start us off on that.

00:18:34.270 --> 00:18:35.599
Over to you James.

00:18:35.599 --> 00:18:36.890
JAMES TAMPLIN: Firebase Martin.

00:18:36.890 --> 00:18:39.920
So for those of you who
watched Google I/O and some

00:18:39.920 --> 00:18:41.670
of the live streams,
this is going

00:18:41.670 --> 00:18:45.140
to be a significantly abridged
version of my overview

00:18:45.140 --> 00:18:47.060
of Firebase presentation.

00:18:47.060 --> 00:18:50.340
And the idea is to get those
of you who haven't seen that

00:18:50.340 --> 00:18:53.010
or haven't got a good
understanding of what Firebase

00:18:53.010 --> 00:18:54.510
is a brief overview.

00:18:54.510 --> 00:18:55.530
So let's get started.

00:18:58.330 --> 00:19:01.130
So here at Google we think
that creating a successful app

00:19:01.130 --> 00:19:03.100
is still too hard.

00:19:03.100 --> 00:19:06.020
Developers like you are time
and resourced constrained.

00:19:06.020 --> 00:19:07.990
And having you
spend time managing

00:19:07.990 --> 00:19:11.470
a dozen different services or
building infrastructure that

00:19:11.470 --> 00:19:15.320
isn't in your core competency
is a big distraction.

00:19:15.320 --> 00:19:18.690
And so we think this
needs to be much simpler.

00:19:18.690 --> 00:19:20.220
So as Martin
mentioned, I cofounded

00:19:20.220 --> 00:19:24.170
a startup called Firebase, which
was a backend as a service.

00:19:24.170 --> 00:19:26.070
It helped power
your app's backend

00:19:26.070 --> 00:19:29.410
with three different features--
a real time database,

00:19:29.410 --> 00:19:33.117
user authentication,
and hosting.

00:19:33.117 --> 00:19:34.700
About 18 months ago,
it joined Google.

00:19:34.700 --> 00:19:38.400
And we had 110,000
developers using Firebase.

00:19:38.400 --> 00:19:42.110
It's since grown to
over 470,000 developers.

00:19:42.110 --> 00:19:44.130
And over the past
18 months, we've

00:19:44.130 --> 00:19:46.520
been working hard to turn
it from more than just

00:19:46.520 --> 00:19:49.070
a backend as a
service into Google's

00:19:49.070 --> 00:19:52.090
unified mobile platform.

00:19:52.090 --> 00:19:54.300
And so a week or eight
days ago at Google I/O,

00:19:54.300 --> 00:19:58.800
we announced a huge
expansion to Firebase.

00:19:58.800 --> 00:20:01.590
So we moved from the
existing backend services

00:20:01.590 --> 00:20:06.360
and we added tools to help you
improve your app's quality.

00:20:06.360 --> 00:20:08.440
We added tools to help
you grow your app,

00:20:08.440 --> 00:20:12.170
including acquiring
and engaging users.

00:20:12.170 --> 00:20:14.940
And we added tools to
help you earn money.

00:20:14.940 --> 00:20:20.780
By tying all this together, we
added a full analytics product.

00:20:20.780 --> 00:20:23.160
So we went from these
original three features,

00:20:23.160 --> 00:20:28.920
and now Firebase contains 15
features and integrations.

00:20:28.920 --> 00:20:30.550
But we doing all of
this while trying

00:20:30.550 --> 00:20:35.070
to stay true to the original
principles that Firebase had.

00:20:35.070 --> 00:20:38.520
Firebase was known for its great
developer experience, intuitive

00:20:38.520 --> 00:20:42.750
APIs, great documentation,
and fantastic support.

00:20:42.750 --> 00:20:45.346
And we're continuing
all of that.

00:20:45.346 --> 00:20:46.470
Firebase is cross-platform.

00:20:46.470 --> 00:20:48.820
It's not just a
tool for Android.

00:20:48.820 --> 00:20:51.620
Whether you're building
iOS, web, or Android apps,

00:20:51.620 --> 00:20:53.280
we'll help you.

00:20:53.280 --> 00:20:57.000
And finally, Firebase is an
integrated suite of products.

00:20:57.000 --> 00:20:58.380
So we have one SDK.

00:20:58.380 --> 00:20:59.670
We have one console.

00:20:59.670 --> 00:21:01.370
We have one set of docs.

00:21:01.370 --> 00:21:03.140
And where it makes
sense, data actually

00:21:03.140 --> 00:21:07.470
flows between our products
to help you do more faster.

00:21:07.470 --> 00:21:09.250
So let's dive in.

00:21:09.250 --> 00:21:12.030
First we'll talk about
analytics, which really ties

00:21:12.030 --> 00:21:14.490
the whole platform together.

00:21:14.490 --> 00:21:16.770
So we've taken the
decade plus of knowledge

00:21:16.770 --> 00:21:19.110
that Google has here
on Google Analytics,

00:21:19.110 --> 00:21:21.640
and we've built Firebase
Analytics from the ground up.

00:21:21.640 --> 00:21:23.770
And it's designed for apps.

00:21:23.770 --> 00:21:25.890
Instead of page
views and sessions,

00:21:25.890 --> 00:21:28.540
we're event and user centric.

00:21:28.540 --> 00:21:30.480
And there's a feature
called Audience,

00:21:30.480 --> 00:21:32.650
which you can think of
like user segments, that

00:21:32.650 --> 00:21:34.740
helps connect the different
Firebase features.

00:21:34.740 --> 00:21:37.420
And I'll touch on
those as we go through.

00:21:37.420 --> 00:21:40.050
And best of all, it's
free and unlimited.

00:21:40.050 --> 00:21:42.290
So you can send an
unlimited number of events

00:21:42.290 --> 00:21:46.160
to Firebase Analytics,
completely free.

00:21:46.160 --> 00:21:49.540
So let's jump into the services
that Firebase has to help you

00:21:49.540 --> 00:21:51.830
power your app's backend.

00:21:51.830 --> 00:21:54.940
So every app typically wants
to have an understanding

00:21:54.940 --> 00:21:57.470
of who a user is so that they
can provide a personalized

00:21:57.470 --> 00:21:58.230
experience.

00:21:58.230 --> 00:22:01.550
And so that's exactly
what Firebase auth does.

00:22:01.550 --> 00:22:03.410
We provide support
for authentication

00:22:03.410 --> 00:22:06.770
with email and password social
provided like Facebook, Twitter

00:22:06.770 --> 00:22:09.890
and Facebook and
Google, and also

00:22:09.890 --> 00:22:14.016
tie into your existing auth
system for maximum flexibility.

00:22:14.016 --> 00:22:15.640
And best of all, last
week we announced

00:22:15.640 --> 00:22:19.130
that we have a brand new,
count of the box UI repo

00:22:19.130 --> 00:22:21.080
that you can grab from GitHub.

00:22:21.080 --> 00:22:23.600
And you can take it
and use it so that you

00:22:23.600 --> 00:22:25.400
get years of
experience from Google

00:22:25.400 --> 00:22:29.580
and you don't have to
reinvent the login flow.

00:22:29.580 --> 00:22:32.380
Auth also ties into
our real time database.

00:22:32.380 --> 00:22:34.152
Now if you used Firebase
before last week,

00:22:34.152 --> 00:22:35.610
this is the feature
you're probably

00:22:35.610 --> 00:22:40.920
most used to, the cloud
hosted, NoSQL JSON database.

00:22:40.920 --> 00:22:43.060
So you store the data as JSON.

00:22:43.060 --> 00:22:45.460
And when you write
to Firebase database,

00:22:45.460 --> 00:22:47.930
it synchronizes it out
to every other client

00:22:47.930 --> 00:22:50.120
who cares in milliseconds.

00:22:50.120 --> 00:22:52.965
And this lets you build rich,
collaborative applications

00:22:52.965 --> 00:22:57.170
that your end users are
really coming to expect.

00:22:57.170 --> 00:22:59.910
It's super easy to
get started with.

00:22:59.910 --> 00:23:03.860
But oftentimes you don't want
to store just structured JSON

00:23:03.860 --> 00:23:04.900
data.

00:23:04.900 --> 00:23:06.830
You want to store
more than this.

00:23:06.830 --> 00:23:09.530
And this is actually one of
our largest feature requests.

00:23:09.530 --> 00:23:10.590
And we heard you.

00:23:10.590 --> 00:23:13.770
And so we're announcing
Firebase Storage.

00:23:13.770 --> 00:23:17.870
Now Firebase Storage lets
you store images, videos,

00:23:17.870 --> 00:23:19.990
audio files, really easily.

00:23:19.990 --> 00:23:23.120
It also gracefully handles
poor internet connectivity.

00:23:23.120 --> 00:23:25.430
And it's backed by
Google Cloud Storage.

00:23:25.430 --> 00:23:28.010
So you can store
massively large files,

00:23:28.010 --> 00:23:32.560
and you can also integrate
directly with the GCS APIs.

00:23:32.560 --> 00:23:35.740
The final way to store
file data in Firebase

00:23:35.740 --> 00:23:37.300
is Firebase Hosting.

00:23:37.300 --> 00:23:39.180
So it lets you
serve static assets

00:23:39.180 --> 00:23:42.530
if you're building a web or
a mobile web application.

00:23:42.530 --> 00:23:44.780
It's SSL by default.
And last week we

00:23:44.780 --> 00:23:46.850
announced that you can
now bring your own custom

00:23:46.850 --> 00:23:51.320
domain to Firebase Hosting
completely for free.

00:23:51.320 --> 00:23:53.660
So the last backend service
product I want to talk about

00:23:53.660 --> 00:23:55.270
is Remote Config.

00:23:55.270 --> 00:23:57.900
Now Remote Config gives
you service side variables

00:23:57.900 --> 00:24:00.470
that you can modify and
that push down to your app

00:24:00.470 --> 00:24:03.540
instantly so you can change
its behavior without having

00:24:03.540 --> 00:24:07.280
to do a completely new deploy to
an app store or the Play Store.

00:24:07.280 --> 00:24:10.070
So this lets you do things
like tweak your checkout flow

00:24:10.070 --> 00:24:11.485
or provide a
different experience

00:24:11.485 --> 00:24:18.550
to your users in India or who
are on a Samsung Galaxy S6.

00:24:18.550 --> 00:24:20.870
And so this is a really,
really powerful feature

00:24:20.870 --> 00:24:23.934
and we're really excited
what you do with it.

00:24:23.934 --> 00:24:25.850
So we've taken a look
at the backend services.

00:24:25.850 --> 00:24:28.860
Now let's take a
look at app quality.

00:24:28.860 --> 00:24:31.380
So when your app crashes, it
really hurts your business

00:24:31.380 --> 00:24:33.500
and it gives your users
a poor experience.

00:24:33.500 --> 00:24:35.850
And so we've got two
features to help you.

00:24:35.850 --> 00:24:38.140
First is Test Lab.

00:24:38.140 --> 00:24:42.506
And we announced it at Google
I/O 2015 as Cloud Test Lab.

00:24:42.506 --> 00:24:43.880
And we're moving
it into Firebase

00:24:43.880 --> 00:24:46.009
as Test Lab for Android.

00:24:46.009 --> 00:24:47.550
And so what it lets
you do is it lets

00:24:47.550 --> 00:24:50.520
you run your application
on the most popular devices

00:24:50.520 --> 00:24:53.380
before you push app
out into the wild.

00:24:53.380 --> 00:24:55.820
And so it gives your
users the best experience

00:24:55.820 --> 00:24:58.860
since we let you catch
bugs before they ship.

00:24:58.860 --> 00:25:01.210
It will give you reports,
will give you screenshots,

00:25:01.210 --> 00:25:03.470
and will let you run robo
tests if you haven't written

00:25:03.470 --> 00:25:05.070
your own custom test suite.

00:25:05.070 --> 00:25:08.590
And if you have, we'll
let you do that too.

00:25:08.590 --> 00:25:11.630
But if you haven't caught
a bug before it ships,

00:25:11.630 --> 00:25:13.956
we have Firebase
Crash Reporting.

00:25:13.956 --> 00:25:15.330
Firebase Crash
Reporting lets you

00:25:15.330 --> 00:25:17.110
see crashes and their impact.

00:25:17.110 --> 00:25:20.720
We prioritize ones by
frequency and severity.

00:25:20.720 --> 00:25:26.130
We let you drill down by
device, by OS, by API version.

00:25:26.130 --> 00:25:28.750
And it's also integrating
with Firebase Analytics.

00:25:28.750 --> 00:25:30.420
So you can tell if
a specific cohort

00:25:30.420 --> 00:25:32.730
like those on a
particular device

00:25:32.730 --> 00:25:34.440
or those in a
particular geography

00:25:34.440 --> 00:25:37.460
are crashing more than others.

00:25:37.460 --> 00:25:40.270
Finally, I want to talk about
how Firebase is integrated

00:25:40.270 --> 00:25:43.470
not just with features
within Firebase,

00:25:43.470 --> 00:25:45.210
but with broader Google.

00:25:45.210 --> 00:25:47.650
So we've deeply integrated
with Google Play

00:25:47.650 --> 00:25:49.950
and we've done things
like pass crash data

00:25:49.950 --> 00:25:52.720
like ANRs or application
not responding through

00:25:52.720 --> 00:25:54.470
to Firebase Crash Reporting.

00:25:54.470 --> 00:25:56.240
And we're passing
in app purchase data

00:25:56.240 --> 00:25:57.800
through to Firebase Analytics.

00:25:57.800 --> 00:26:01.400
So you get a view of your
app all in one place.

00:26:01.400 --> 00:26:04.300
Second, we integrated
with Google Cloud.

00:26:04.300 --> 00:26:06.760
Underneath the hood, Firebase
accounts and Google Cloud

00:26:06.760 --> 00:26:08.610
accounts are one and the same.

00:26:08.610 --> 00:26:12.055
And that means you can easily
attach Google Cloud products

00:26:12.055 --> 00:26:14.510
to your Firebase
app so that when

00:26:14.510 --> 00:26:16.840
you need the full breadth
of the Cloud Platform,

00:26:16.840 --> 00:26:19.340
it's right there
at your fingertips.

00:26:19.340 --> 00:26:21.530
So I've covered how
you build your app.

00:26:21.530 --> 00:26:24.624
Let's turn it over to Magnus
to see how you can grow an app.

00:26:24.624 --> 00:26:26.080
MAGNUS HYTTSTEN:
Thank you James.

00:26:26.080 --> 00:26:29.240
Yes, so building an
app is just one part

00:26:29.240 --> 00:26:30.890
of the entire development cycle.

00:26:30.890 --> 00:26:33.666
You also want to be able to
grow a business from the app

00:26:33.666 --> 00:26:34.980
that you develop.

00:26:34.980 --> 00:26:36.810
And in order to do
that, we have the Grow

00:26:36.810 --> 00:26:39.080
and the Earn
subsections of Firebase

00:26:39.080 --> 00:26:42.760
where Grow contains the
user acquisition process

00:26:42.760 --> 00:26:47.750
and reengaging users
that are using your apps.

00:26:47.750 --> 00:26:49.380
And then Earn,
obviously you want

00:26:49.380 --> 00:26:53.530
to monetize and be able to build
a business around your app.

00:26:53.530 --> 00:26:57.110
So let's talk about looking
at the Grow part of this.

00:26:57.110 --> 00:27:00.450
So one important activity
when you create an app

00:27:00.450 --> 00:27:04.400
is to be able to share content
of your app with other people.

00:27:04.400 --> 00:27:06.060
So you may want to
add the capability

00:27:06.060 --> 00:27:09.120
to send a link to that
others can click on

00:27:09.120 --> 00:27:11.300
and they get
engaged and they get

00:27:11.300 --> 00:27:13.710
into a particular
piece of your app.

00:27:13.710 --> 00:27:16.720
So in this case, for example
engaging into Bingo Blast.

00:27:16.720 --> 00:27:19.340
The way that this
traditionally has worked

00:27:19.340 --> 00:27:23.790
is that that link will bring
you over to an app introduction

00:27:23.790 --> 00:27:27.120
page where you can select the
App Store or the Google Play

00:27:27.120 --> 00:27:29.260
Store in order to
install the app.

00:27:29.260 --> 00:27:31.410
The user clicks on one of
these, and then they're

00:27:31.410 --> 00:27:33.120
being brought to
the installation

00:27:33.120 --> 00:27:34.660
page for their app.

00:27:34.660 --> 00:27:36.500
And once they've
installed app, they're

00:27:36.500 --> 00:27:39.030
being brought into the
main page of the app.

00:27:39.030 --> 00:27:42.080
This is a very bad
user experience.

00:27:42.080 --> 00:27:43.990
So therefore we
introduced a capability

00:27:43.990 --> 00:27:45.530
called dynamic links.

00:27:45.530 --> 00:27:48.360
So dynamically links
enables you to create a link

00:27:48.360 --> 00:27:51.340
that when a user clicks
on it, dynamic links will

00:27:51.340 --> 00:27:54.830
check whether the app is
installed already or not.

00:27:54.830 --> 00:27:57.460
If the app is not
installed, dynamic links

00:27:57.460 --> 00:28:01.020
will reroute you to the
appropriate App Store or Google

00:28:01.020 --> 00:28:04.310
Play property in order
to install the app.

00:28:04.310 --> 00:28:07.570
And once the user opens up
the app for the first time,

00:28:07.570 --> 00:28:11.230
the user will be brought to
a specific piece of content

00:28:11.230 --> 00:28:13.340
that you have
indicated in your app.

00:28:13.340 --> 00:28:15.580
And more than this,
you can actually

00:28:15.580 --> 00:28:20.400
specify a specific state in
the URL, the dynamic link URL.

00:28:20.400 --> 00:28:24.940
And that state can then
create a very personalized

00:28:24.940 --> 00:28:28.470
context when they're being
brought into the app.

00:28:28.470 --> 00:28:31.780
All right, so dynamic
links is a single URL

00:28:31.780 --> 00:28:34.310
that brings the user
through this entire flow

00:28:34.310 --> 00:28:36.680
to bring you to this
particular content.

00:28:36.680 --> 00:28:37.930
It works across platforms.

00:28:37.930 --> 00:28:40.580
It works on iOS as
well as Android.

00:28:40.580 --> 00:28:45.130
And it preserves the URL state
through the entire process.

00:28:45.130 --> 00:28:47.020
And of course it's
completely integrated

00:28:47.020 --> 00:28:48.530
with Firebase Analytics.

00:28:48.530 --> 00:28:51.270
So you can get lots of
data around the engagement

00:28:51.270 --> 00:28:52.780
around these links.

00:28:52.780 --> 00:28:54.730
So moving over to
Firebase Invites.

00:28:54.730 --> 00:28:58.370
So Firebase Invites
allows users of your app

00:28:58.370 --> 00:29:02.020
to invite their friends to
also engage with your app.

00:29:02.020 --> 00:29:06.020
So in this example, if they
click on Send for example,

00:29:06.020 --> 00:29:09.710
a list of their contacts
will be displayed.

00:29:09.710 --> 00:29:11.740
They can select their
friends that they want

00:29:11.740 --> 00:29:13.670
to invite to engage in the app.

00:29:13.670 --> 00:29:18.960
And a link can be sent
out to these friends

00:29:18.960 --> 00:29:21.580
so that they can
engage with the app.

00:29:21.580 --> 00:29:25.490
Firebase Invites contains a drop
in widget for the app sharing

00:29:25.490 --> 00:29:26.280
process.

00:29:26.280 --> 00:29:32.670
It supports both SMS as well
as email invite messages

00:29:32.670 --> 00:29:35.430
to the people that want
to engage with your app.

00:29:35.430 --> 00:29:37.230
And it's built on dynamic links.

00:29:37.230 --> 00:29:39.610
So should their friends
not have the app installed,

00:29:39.610 --> 00:29:42.430
it will automatically bring them
through the app installation

00:29:42.430 --> 00:29:44.070
process.

00:29:44.070 --> 00:29:46.550
Another important component
of user acquisition

00:29:46.550 --> 00:29:50.120
is the Google AdWords
piece we have in Firebase.

00:29:50.120 --> 00:29:52.700
So Google AdWords is
integrated in Firebase

00:29:52.700 --> 00:29:55.400
using the universal
app campaigns.

00:29:55.400 --> 00:29:57.940
And what this is a
technology that allows

00:29:57.940 --> 00:30:00.480
you to create ads for your app.

00:30:00.480 --> 00:30:02.130
And these ads can
then be displayed

00:30:02.130 --> 00:30:04.450
on many different Google
properties such as Google

00:30:04.450 --> 00:30:08.750
Search, Google Play, YouTube,
as well as the Google Display

00:30:08.750 --> 00:30:09.250
Network.

00:30:09.250 --> 00:30:13.290
And this allows you to reach
billions of potential users

00:30:13.290 --> 00:30:17.500
and display your app
in front of them.

00:30:17.500 --> 00:30:20.680
There is also relevant
audience targeting.

00:30:20.680 --> 00:30:23.050
So using the Google
data, we will

00:30:23.050 --> 00:30:26.820
find the users that makes
the most sense to be

00:30:26.820 --> 00:30:29.434
able to display your app.

00:30:29.434 --> 00:30:31.225
And of course it
integrates with Analytics,

00:30:31.225 --> 00:30:34.410
so you will get full conversion
data and optimization

00:30:34.410 --> 00:30:36.720
data as part of this.

00:30:36.720 --> 00:30:39.200
And what about reengaging users?

00:30:39.200 --> 00:30:41.880
Well, we have a couple of
technologies in this area.

00:30:41.880 --> 00:30:43.930
And one of them is
Firebase App Indexing.

00:30:43.930 --> 00:30:47.180
Firebase App
Indexing lets Google

00:30:47.180 --> 00:30:50.510
Search crawl your
app for content,

00:30:50.510 --> 00:30:56.380
and then be able to display your
app as part of a result page

00:30:56.380 --> 00:30:58.540
where users are
using Google Search.

00:30:58.540 --> 00:31:01.360
So you can see here for example,
on the left hand side we have

00:31:01.360 --> 00:31:03.250
a user searching for Kokkari.

00:31:03.250 --> 00:31:08.810
And you can see TripAdvisor
actually showing up as a result

00:31:08.810 --> 00:31:11.570
to that query because
TripAdvisor apparently

00:31:11.570 --> 00:31:13.731
has data related to Kokkari.

00:31:13.731 --> 00:31:15.730
And on the right hand
side, you can see somebody

00:31:15.730 --> 00:31:18.260
searching for hotels in Tokyo.

00:31:18.260 --> 00:31:22.060
And you can see the Expedia app
as well as the Booking.com app

00:31:22.060 --> 00:31:25.180
showing up because they have
relevant information related

00:31:25.180 --> 00:31:27.940
to hotels in Tokyo.

00:31:27.940 --> 00:31:29.630
If you've been
developing apps, you

00:31:29.630 --> 00:31:31.990
may be aware of Google
Cloud Messaging.

00:31:31.990 --> 00:31:35.010
In this part of Firebase, we're
creating the next generation

00:31:35.010 --> 00:31:37.240
version of Google
Cloud Messaging,

00:31:37.240 --> 00:31:40.180
and it's called Firebase
Cloud Messaging.

00:31:40.180 --> 00:31:41.780
In this part of
Firebase, we're also

00:31:41.780 --> 00:31:44.240
introducing one more
notification feature,

00:31:44.240 --> 00:31:46.430
Firebase Notifications.

00:31:46.430 --> 00:31:49.930
Firebase Notifications is
a simple user interface

00:31:49.930 --> 00:31:54.090
that lets you, in
a Firebase console,

00:31:54.090 --> 00:31:56.870
enter notification
information that you

00:31:56.870 --> 00:31:58.460
want to send to your users.

00:31:58.460 --> 00:32:02.540
You can send this to any
kind of audience, an audience

00:32:02.540 --> 00:32:07.510
based on a topic, based on
analytics data, et cetera.

00:32:07.510 --> 00:32:10.510
And you will later
get information

00:32:10.510 --> 00:32:13.940
about how your users engaged
with these notifications--

00:32:13.940 --> 00:32:16.595
if they opened it, how
many actually clicked on

00:32:16.595 --> 00:32:18.095
the information in
the notification,

00:32:18.095 --> 00:32:22.396
et cetera, So a great way
to engage with your users.

00:32:22.396 --> 00:32:24.270
As you can see here,
this is an example where

00:32:24.270 --> 00:32:27.970
we have 3,874 notifications.

00:32:27.970 --> 00:32:32.060
And 1,325 of these
notifications were opened.

00:32:32.060 --> 00:32:38.420
And 637 of these notifications
were actually an engagement

00:32:38.420 --> 00:32:40.300
that the user did,
actually engaging

00:32:40.300 --> 00:32:42.120
with that notification.

00:32:42.120 --> 00:32:45.260
So let's look at the Earn
part of Firebase that we have.

00:32:45.260 --> 00:32:48.400
So for earning and
monetization of your ads,

00:32:48.400 --> 00:32:51.450
we have Firebase
AdMob by Google.

00:32:51.450 --> 00:32:56.520
Firebase AdMob allows you
to show ads in your app.

00:32:56.520 --> 00:32:59.870
And these ads can take any
number of different formats.

00:32:59.870 --> 00:33:03.670
For example, video ads, they
can be interstitial ads, showing

00:33:03.670 --> 00:33:06.840
an ad across the entire screen,
or even native ads where

00:33:06.840 --> 00:33:09.810
you have the ability to
format the ad in a way

00:33:09.810 --> 00:33:12.064
that you think is
good for your app.

00:33:12.064 --> 00:33:13.980
And there are lots of
apps already using this,

00:33:13.980 --> 00:33:17.680
more than 1 million apps
is using AdMod already.

00:33:17.680 --> 00:33:21.020
And it's completely integrated
into the Firebase SDK.

00:33:21.020 --> 00:33:25.180
So it's easy to use right
there, available right now.

00:33:25.180 --> 00:33:28.140
All right, so that was
growing and the earn part.

00:33:28.140 --> 00:33:31.330
So I'll hand it over to
James to wrap this up.

00:33:31.330 --> 00:33:34.202
JAMES TAMPLIN: Thanks Magnus.

00:33:34.202 --> 00:33:36.160
So as you've seen, we've
walked briefly through

00:33:36.160 --> 00:33:38.060
how you can develop
your app with Firebase.

00:33:38.060 --> 00:33:41.700
So we have backend services
and those services that help

00:33:41.700 --> 00:33:43.540
you improve your app's quality.

00:33:43.540 --> 00:33:45.820
We have tools to help
you grow your user base,

00:33:45.820 --> 00:33:48.880
including acquiring
and engaging users.

00:33:48.880 --> 00:33:50.670
And finally we've
integrated with AdMob

00:33:50.670 --> 00:33:52.930
to help you monetize your app.

00:33:52.930 --> 00:33:55.410
And that's all tied together
with Firebase Analytics,

00:33:55.410 --> 00:33:59.660
our free and unlimited
new analytics product.

00:33:59.660 --> 00:34:01.880
So we are extremely
excited about this.

00:34:01.880 --> 00:34:03.630
We've been working for
18 months and we've

00:34:03.630 --> 00:34:05.740
pulled the best
of Google together

00:34:05.740 --> 00:34:09.429
to help you succeed on mobile.

00:34:09.429 --> 00:34:11.560
And we're excited to
take your questions.

00:34:11.560 --> 00:34:13.489
So we're looking
forward to hearing them.

00:34:13.489 --> 00:34:15.820
And don't forget
to check us out,

00:34:15.820 --> 00:34:19.634
firebase.google.com, as I'm
sure you probably already have.

00:34:19.634 --> 00:34:20.550
MARTIN OMANDER: Great.

00:34:20.550 --> 00:34:22.870
Thank you Magnus, James.

00:34:22.870 --> 00:34:25.440
So we're starting to see
some photos coming in

00:34:25.440 --> 00:34:28.040
from of viewing parties.

00:34:28.040 --> 00:34:29.985
Let's see, we have
one in New York,

00:34:29.985 --> 00:34:31.989
I think I'm seeing
on the screen there.

00:34:31.989 --> 00:34:34.370
That looks like the
New York office.

00:34:34.370 --> 00:34:37.310
What more do we have?

00:34:37.310 --> 00:34:39.989
That is Mountain View I think.

00:34:39.989 --> 00:34:42.999
And is that also
Mountain View perhaps?

00:34:42.999 --> 00:34:45.040
JAMES TAMPLIN: That's some
on brand chairs there.

00:34:45.040 --> 00:34:46.498
MARTIN OMANDER:
Yeah, that's right.

00:34:46.498 --> 00:34:49.280
We also have viewing parties
in the Google San Francisco

00:34:49.280 --> 00:34:50.440
office.

00:34:50.440 --> 00:34:52.170
I saw one in Vietnam.

00:34:52.170 --> 00:34:54.989
I don't even know
what time it is there,

00:34:54.989 --> 00:34:56.940
but thank you for
staying with us guys.

00:34:56.940 --> 00:35:00.520
We really appreciate it.

00:35:00.520 --> 00:35:03.290
So if you are at
a viewing party,

00:35:03.290 --> 00:35:06.510
then please also send
us your pictures.

00:35:06.510 --> 00:35:08.890
Put them on Twitter
or on Google+ with

00:35:08.890 --> 00:35:11.930
the #AskFirebaseLive hashtag.

00:35:11.930 --> 00:35:16.380
And we'll see them and
maybe show them here.

00:35:16.380 --> 00:35:20.500
So let's dig into
questions guys.

00:35:20.500 --> 00:35:21.520
Ready?

00:35:21.520 --> 00:35:23.250
All right, good stuff.

00:35:23.250 --> 00:35:27.780
So first off, we have had
three video questions actually.

00:35:27.780 --> 00:35:33.150
The very first one is from
Dan Scott in Sudbury, Canada.

00:35:33.150 --> 00:35:35.635
Dan, let's roll the video.

00:35:35.635 --> 00:35:37.010
DAN SCOTT: Hey,
this is Dan Scott

00:35:37.010 --> 00:35:38.680
from GDG Sudbury in Canada.

00:35:38.680 --> 00:35:40.910
Big shout out to Francis
Ma for using Canadians

00:35:40.910 --> 00:35:44.750
in his examples in the I/O
Firebase overview session.

00:35:44.750 --> 00:35:48.020
So I build applications on
relational databases typically,

00:35:48.020 --> 00:35:51.140
and I love the rich data
analysis over complex data

00:35:51.140 --> 00:35:54.950
sets that you can perform
with ad hoc queries like joins

00:35:54.950 --> 00:35:59.236
and scalar aggregate functions,
views, and that sort of thing.

00:35:59.236 --> 00:36:01.110
But I also understand
and have been impressed

00:36:01.110 --> 00:36:03.802
by the performance and
real time synchronization

00:36:03.802 --> 00:36:08.050
that the Firebase datastore
offers for applications.

00:36:08.050 --> 00:36:11.260
So on that note, it seems like
there must be some sort of path

00:36:11.260 --> 00:36:13.410
to the best of both worlds.

00:36:13.410 --> 00:36:15.340
Can you suggest
some best practices

00:36:15.340 --> 00:36:18.510
for, say, synchronizing a
subset of a relational database,

00:36:18.510 --> 00:36:22.100
like Postgres or BigQuery
with the Firebase datastore

00:36:22.100 --> 00:36:25.770
so that we can still have
those complex data analysis

00:36:25.770 --> 00:36:29.565
features over a rich data set
with the real time benefits

00:36:29.565 --> 00:36:31.770
of the Firebase datastore?

00:36:31.770 --> 00:36:32.640
Thanks so much.

00:36:32.640 --> 00:36:36.480
Appreciate it, and looking
forward to your answer.

00:36:36.480 --> 00:36:38.720
MARTIN OMANDER: Oh, so
synchronizing relational

00:36:38.720 --> 00:36:39.950
databases and Firebase.

00:36:39.950 --> 00:36:42.040
And this is actually
something that I've

00:36:42.040 --> 00:36:44.030
been looking at as well.

00:36:44.030 --> 00:36:46.070
Is there a way to do that James?

00:36:46.070 --> 00:36:48.740
JAMES TAMPLIN: So if you want
to perform complex relational

00:36:48.740 --> 00:36:52.160
carries queries on data that you
have in the Firebase database

00:36:52.160 --> 00:36:54.210
what we recommend
doing is taking

00:36:54.210 --> 00:36:57.590
the subset of the Firebase
database that you care about

00:36:57.590 --> 00:37:00.370
and synchronizing that
out to what we've seen--

00:37:00.370 --> 00:37:04.400
Elastic Search and Solr and
other datastores that are

00:37:04.400 --> 00:37:06.570
optimized for rich querying.

00:37:06.570 --> 00:37:11.160
And then you can run your
queries on those datastores.

00:37:11.160 --> 00:37:15.757
And so typically you want
to just write a one sync

00:37:15.757 --> 00:37:16.590
to those datastores.

00:37:16.590 --> 00:37:19.195
MARTIN OMANDER: A one
way sync out, all right.

00:37:19.195 --> 00:37:21.000
Did you have
anything to add Ian?

00:37:21.000 --> 00:37:22.720
IAN BARBER: There's
a few options

00:37:22.720 --> 00:37:24.832
you can take depending
on the kind of problem

00:37:24.832 --> 00:37:25.790
you're trying to solve.

00:37:25.790 --> 00:37:29.610
One of the ways that I've seen
people do things successfully

00:37:29.610 --> 00:37:32.184
is actually to write
in to the real time

00:37:32.184 --> 00:37:34.600
database for those real time
features to distribute things

00:37:34.600 --> 00:37:36.500
out, and then
actually have a client

00:37:36.500 --> 00:37:38.940
of that database that can
consume that information

00:37:38.940 --> 00:37:40.780
and write it into
a relational store.

00:37:40.780 --> 00:37:44.200
Often you'll want to do
reporting type queries which

00:37:44.200 --> 00:37:46.740
can be heavily joined
and might want to go over

00:37:46.740 --> 00:37:48.260
a long period of time.

00:37:48.260 --> 00:37:52.470
But the part you using real
time is actually much smaller.

00:37:52.470 --> 00:37:54.550
So by having a kind
of server instance,

00:37:54.550 --> 00:37:56.220
you can connect as
a client, and you

00:37:56.220 --> 00:37:58.402
can get those updates as
they come and write them

00:37:58.402 --> 00:38:00.217
into your relational DB.

00:38:00.217 --> 00:38:01.800
MARTIN OMANDER: All
right, good stuff.

00:38:01.800 --> 00:38:06.000
I remember at the talk where
I spoke about Firebase,

00:38:06.000 --> 00:38:10.100
somebody came up afterwards and
said, they're using Firebase,

00:38:10.100 --> 00:38:13.180
not because it's
real time, but just

00:38:13.180 --> 00:38:15.270
because it's so
easy to write code

00:38:15.270 --> 00:38:17.210
to put things in the database.

00:38:17.210 --> 00:38:19.860
And then they were asking
about, can I then move it

00:38:19.860 --> 00:38:20.960
onto another database?

00:38:20.960 --> 00:38:24.290
But I guess that's
what they should do.

00:38:24.290 --> 00:38:24.910
Good stuff.

00:38:24.910 --> 00:38:26.140
Thank you.

00:38:26.140 --> 00:38:31.526
Our next video question is
from James Cha in [VIDEO OUT]

00:38:34.454 --> 00:38:36.410
JAMES CHA: Hey,
James, hey Magnus.

00:38:36.410 --> 00:38:40.350
So with apps, we like
our content fresh.

00:38:40.350 --> 00:38:44.960
So using something like
Firebase to do that

00:38:44.960 --> 00:38:46.180
makes it really easy.

00:38:46.180 --> 00:38:50.660
But there must be some use case
where Firebase isn't the best

00:38:50.660 --> 00:38:51.540
tool to use.

00:38:51.540 --> 00:38:54.070
Can you describe one
of those situations?

00:38:54.070 --> 00:38:55.980
JAMES TAMPLIN:
Haven't read it yet.

00:38:55.980 --> 00:38:58.870
MARTIN OMANDER: All
right, up to date data.

00:38:58.870 --> 00:39:02.097
James, is this something
you want to take on?

00:39:02.097 --> 00:39:04.430
JAMES TAMPLIN: I'm just
catching up on the question now.

00:39:06.876 --> 00:39:08.500
Oh, having up to date
data is something

00:39:08.500 --> 00:39:10.350
that's important to many
if not all applications.

00:39:10.350 --> 00:39:11.860
So is there is a use where the
Firebase real time database

00:39:11.860 --> 00:39:13.370
wouldn't be the answer?

00:39:13.370 --> 00:39:17.380
So typically, use cases
where the Firebase real time

00:39:17.380 --> 00:39:19.600
data wouldn't be the
answer is where you

00:39:19.600 --> 00:39:23.710
want to have complex querying.

00:39:23.710 --> 00:39:25.420
So we've optimized
the Firebase database,

00:39:25.420 --> 00:39:27.900
as Martin was mentioning,
for ease of use

00:39:27.900 --> 00:39:29.860
and for those real time updates.

00:39:29.860 --> 00:39:33.900
When we started, it had a
minimal set of querying.

00:39:33.900 --> 00:39:36.049
We've met adding
to that over time.

00:39:36.049 --> 00:39:38.090
As I mentioned in my
announcement post last week,

00:39:38.090 --> 00:39:40.860
we're continuing to work hard
on improving the querying set

00:39:40.860 --> 00:39:42.050
with the real time database.

00:39:42.050 --> 00:39:44.810
But if you really need
to do complex joins

00:39:44.810 --> 00:39:48.770
between multiple
tables, then that

00:39:48.770 --> 00:39:50.550
is not a great use
for the real time

00:39:50.550 --> 00:39:53.084
database at this point in time.

00:39:53.084 --> 00:39:54.000
MARTIN OMANDER: Great.

00:39:54.000 --> 00:39:54.890
Thank you James.

00:39:54.890 --> 00:39:56.950
Magnus?

00:39:56.950 --> 00:39:59.350
MAGNUS HYTTSTEN: So
sometimes I even think,

00:39:59.350 --> 00:40:02.880
I mean looking at a database
and what to store in a database,

00:40:02.880 --> 00:40:04.680
I almost feel
sometimes that it s

00:40:04.680 --> 00:40:07.590
accurate to describe
the Firebase real time

00:40:07.590 --> 00:40:09.270
database as a database.

00:40:09.270 --> 00:40:13.670
To a large extent, it's a
sharing and collaboration tool

00:40:13.670 --> 00:40:16.250
across devices, which
typically does not

00:40:16.250 --> 00:40:17.990
exist in a classical database.

00:40:17.990 --> 00:40:21.520
So it really extends beyond
the classical database

00:40:21.520 --> 00:40:23.840
concept I think.

00:40:23.840 --> 00:40:29.757
DAN SCOTT: Yeah, so you have
a spectrum of datastores

00:40:29.757 --> 00:40:31.965
all the way from sort of
like a Redis key-value store

00:40:31.965 --> 00:40:34.860
all the way to your
traditional MySQL.

00:40:34.860 --> 00:40:39.260
And Firebase, the
real time database

00:40:39.260 --> 00:40:42.430
is a little bit more powerful
than a key-value store,

00:40:42.430 --> 00:40:46.840
but certainly is not
a relational database.

00:40:46.840 --> 00:40:49.180
And it has all of
these fantastic

00:40:49.180 --> 00:40:52.990
notion of shared
state, which lets

00:40:52.990 --> 00:40:56.650
you do things like create Google
Docs without a team of Google

00:40:56.650 --> 00:41:01.310
engineers, or lets you power
the notifications widget

00:41:01.310 --> 00:41:06.640
on Facebook without writing a
distributed real time system.

00:41:06.640 --> 00:41:07.680
MARTIN OMANDER: Right.

00:41:07.680 --> 00:41:10.680
When I talk to people out there
in the developer community

00:41:10.680 --> 00:41:13.300
of what Firebase is,
I often have to say,

00:41:13.300 --> 00:41:14.886
forget what you know
about databases.

00:41:14.886 --> 00:41:16.510
Now we're going to
talk about Firebase.

00:41:16.510 --> 00:41:18.320
It's a slightly
different animal.

00:41:18.320 --> 00:41:19.760
And it does all
these cool things

00:41:19.760 --> 00:41:22.920
that you didn't know
a database could do.

00:41:22.920 --> 00:41:23.450
Cool.

00:41:23.450 --> 00:41:25.040
All right, thank you guys.

00:41:25.040 --> 00:41:27.330
We have one more video question.

00:41:27.330 --> 00:41:31.010
And this one is from
Sheldon McGee in Arizona.

00:41:31.010 --> 00:41:33.860
Could we roll Sheldon's
question please?

00:41:33.860 --> 00:41:35.950
SHELDON MCGEE: I was
looking at the pricing page.

00:41:35.950 --> 00:41:39.100
And before it said,
full cloud integration

00:41:39.100 --> 00:41:43.820
was one of the standard features
for the highest priced tier.

00:41:43.820 --> 00:41:46.550
It looks like it was recently
renamed to the Google Cloud

00:41:46.550 --> 00:41:50.196
Platform, and they take out
that language altogether.

00:41:50.196 --> 00:41:51.570
But what does that
mean actually?

00:41:51.570 --> 00:41:53.920
What does it mean to be
integrated with the platform

00:41:53.920 --> 00:41:55.440
that it all runs on?

00:41:55.440 --> 00:41:56.940
Do you think that
would be something

00:41:56.940 --> 00:42:01.000
that was standard across
all different price points?

00:42:01.000 --> 00:42:02.960
MARTIN OMANDER: Oh,
so a pricing question.

00:42:02.960 --> 00:42:04.400
Interesting.

00:42:04.400 --> 00:42:06.162
James, do you want
to take this one?

00:42:06.162 --> 00:42:08.120
JAMES TAMPLIN: Yeah, so
as I mentioned earlier,

00:42:08.120 --> 00:42:10.340
we're working hard to
really deeply integrate

00:42:10.340 --> 00:42:12.340
Firebase in Google Cloud.

00:42:12.340 --> 00:42:15.540
For those of you who have
used Google Cloud previously,

00:42:15.540 --> 00:42:20.530
you'll know that there is no
sort of perpetual free tier,

00:42:20.530 --> 00:42:22.760
whereas Firebase there is.

00:42:22.760 --> 00:42:26.550
And so the reason that full
Google Cloud integration

00:42:26.550 --> 00:42:30.910
isn't available on anything
except our Blaze Plan is so

00:42:30.910 --> 00:42:33.910
that we can align those models.

00:42:33.910 --> 00:42:36.800
We really think the Google Cloud
integration is super powerful.

00:42:36.800 --> 00:42:38.940
As I mentioned, you have
a full cloud platform.

00:42:38.940 --> 00:42:40.940
If you've followed any
of the Google Cloud stuff

00:42:40.940 --> 00:42:43.450
that's been going on in
the last field few months,

00:42:43.450 --> 00:42:46.282
you'll have heard about all
the amazing stuff they're

00:42:46.282 --> 00:42:48.490
doing, especially around
things like machine learning

00:42:48.490 --> 00:42:50.140
and vision.

00:42:50.140 --> 00:42:52.910
And so getting access to those
and pairing with your Firebase

00:42:52.910 --> 00:42:56.004
app is really, really powerful.

00:42:56.004 --> 00:42:56.920
MARTIN OMANDER: Right.

00:42:56.920 --> 00:42:58.952
You get the best of both
worlds there, right?

00:42:58.952 --> 00:42:59.910
JAMES TAMPLIN: Exactly.

00:42:59.910 --> 00:43:02.370
And we want to support
you across your lifecycle.

00:43:02.370 --> 00:43:06.270
So whether you're getting
started on Firebase

00:43:06.270 --> 00:43:09.620
and needing to grow into
all the toolset on Cloud,

00:43:09.620 --> 00:43:11.820
or if you're using
Cloud and want

00:43:11.820 --> 00:43:13.930
to add a mobile
application, we want

00:43:13.930 --> 00:43:16.154
to make those
transitions really easy.

00:43:16.154 --> 00:43:17.070
MARTIN OMANDER: Right.

00:43:17.070 --> 00:43:18.460
Good stuff, good stuff.

00:43:18.460 --> 00:43:20.260
Thank you James.

00:43:20.260 --> 00:43:24.470
So now we are on to our
Twitter and Google+ questions.

00:43:24.470 --> 00:43:26.840
And the first one
we have is actually,

00:43:26.840 --> 00:43:30.270
speaking about
machine learning, does

00:43:30.270 --> 00:43:33.820
Firebase have any functionality
useful for developers looking

00:43:33.820 --> 00:43:35.340
to implement machine learning?

00:43:37.930 --> 00:43:38.700
Who's taking--

00:43:38.700 --> 00:43:41.116
JAMES TAMPLIN: So I think that
dovetails really nicely out

00:43:41.116 --> 00:43:42.370
of the last question.

00:43:42.370 --> 00:43:45.480
So there's a couple of things.

00:43:45.480 --> 00:43:50.830
One is Cloud ML, Cloud Machine
Learning, our of Google Cloud.

00:43:50.830 --> 00:43:52.640
And then obviously
Google released

00:43:52.640 --> 00:43:56.890
TensorFlow as an open source
project, which is pretty great.

00:43:56.890 --> 00:44:00.140
Nothing sort of directly
integrated into the core suite,

00:44:00.140 --> 00:44:04.720
but you can pick up some
great offerings from Google

00:44:04.720 --> 00:44:05.320
and use them.

00:44:05.320 --> 00:44:07.770
I'm not sure exactly
what you're doing Matt,

00:44:07.770 --> 00:44:10.930
but check those out.

00:44:10.930 --> 00:44:13.320
MARTIN OMANDER: Machine learning
is a big area, isn't it?

00:44:13.320 --> 00:44:14.170
Ian?

00:44:14.170 --> 00:44:18.570
IAN BARBER: You can put your
TensorFlow models in storage.

00:44:18.570 --> 00:44:20.137
You can do that.

00:44:20.137 --> 00:44:21.220
MAGNUS HYTTSTEN: For sure.

00:44:21.220 --> 00:44:23.000
MARTIN OMANDER:
[INAUDIBLE] in real time.

00:44:23.000 --> 00:44:24.624
MAGNUS HYTTSTEN: But
it's also the case

00:44:24.624 --> 00:44:27.860
that there's a lot of power
that comes from the cloud.

00:44:27.860 --> 00:44:32.080
And with Firebase being a very
simple way of developing apps,

00:44:32.080 --> 00:44:34.020
it's kind of helping
to integrate these two

00:44:34.020 --> 00:44:36.300
worlds together.

00:44:36.300 --> 00:44:40.180
With Firebase now launched, I
see the app development process

00:44:40.180 --> 00:44:41.760
is so much simpler.

00:44:41.760 --> 00:44:45.910
And that also allows you to more
effectively use the services

00:44:45.910 --> 00:44:49.490
that the cloud can
offer from your device

00:44:49.490 --> 00:44:51.140
when you're a developer.

00:44:51.140 --> 00:44:56.110
JAMES TAMPLIN: I need to
prognosticate slightly,

00:44:56.110 --> 00:45:00.980
we don't think of certain tasks,
for example like synchronizing

00:45:00.980 --> 00:45:05.280
data across clients,
as difficult anymore,

00:45:05.280 --> 00:45:09.041
because you have services like
Firebase real time database. .

00:45:09.041 --> 00:45:10.540
And looking forward
into the future,

00:45:10.540 --> 00:45:18.350
I think it will be commonplace
that-- take a vision example.

00:45:18.350 --> 00:45:21.480
I point my camera at an object,
and I can take a picture

00:45:21.480 --> 00:45:23.100
and the app knows what that is.

00:45:23.100 --> 00:45:24.710
And so I think some
of these services

00:45:24.710 --> 00:45:28.950
will get built into a large
number of our applications

00:45:28.950 --> 00:45:30.630
that we as consumers
use, and they'll

00:45:30.630 --> 00:45:36.060
be powered by services like
Cloud ML and Cloud Vision

00:45:36.060 --> 00:45:37.104
and things like that.

00:45:37.104 --> 00:45:38.020
MARTIN OMANDER: Right.

00:45:38.020 --> 00:45:40.410
Yeah, and even in
my hobby project,

00:45:40.410 --> 00:45:43.400
I've seen that pairing
with the rest of the cloud

00:45:43.400 --> 00:45:44.630
is very powerful.

00:45:44.630 --> 00:45:47.820
I use, for example,
App Engine to just do

00:45:47.820 --> 00:45:50.930
deep linking and rewriting
of URLs as such that

00:45:50.930 --> 00:45:54.020
that is hard to do in Angular,
and then together with Angular

00:45:54.020 --> 00:45:55.360
and Firebase and App Engine.

00:45:55.360 --> 00:45:59.530
And they all just works
beautifully together.

00:45:59.530 --> 00:46:00.620
All right, thank you.

00:46:00.620 --> 00:46:04.710
We have another question
from social media.

00:46:04.710 --> 00:46:07.140
If I use-- this is
Matt Thompson who's

00:46:07.140 --> 00:46:10.620
asking-- if I use analytics
or have users create

00:46:10.620 --> 00:46:13.070
an account with
some personal info,

00:46:13.070 --> 00:46:15.420
do I need a privacy
policy on my app?

00:46:17.754 --> 00:46:19.420
JAMES TAMPLIN: I think
the simple answer

00:46:19.420 --> 00:46:21.210
there is if you're collecting
personal information

00:46:21.210 --> 00:46:23.530
about a user, you should
have a privacy policy that

00:46:23.530 --> 00:46:25.930
states what you're collecting.

00:46:25.930 --> 00:46:27.300
IAN BARBER: Yeah, absolutely.

00:46:27.300 --> 00:46:31.740
And you always want to
consult with a local counsel

00:46:31.740 --> 00:46:32.860
on those kind of things.

00:46:32.860 --> 00:46:37.411
The laws on what you need
to say in those policies

00:46:37.411 --> 00:46:39.160
are going to vary
depending on the region.

00:46:39.160 --> 00:46:42.530
So it's always best to find
out from an expert what

00:46:42.530 --> 00:46:44.360
you should be saying.

00:46:44.360 --> 00:46:45.570
MARTIN OMANDER: That's right.

00:46:45.570 --> 00:46:47.070
Yeah, it seems like
a privacy policy

00:46:47.070 --> 00:46:50.080
seems like the right thing
to do with regards to laws

00:46:50.080 --> 00:46:53.280
too, right?

00:46:53.280 --> 00:46:55.620
All right, so the
next question is

00:46:55.620 --> 00:47:01.590
from Mohammad Kamran who
is asking, Node.js SDK,

00:47:01.590 --> 00:47:07.080
the Node.js SDK now supports
only create token and verify.

00:47:07.080 --> 00:47:09.890
So how do we do other
stuff like access

00:47:09.890 --> 00:47:13.110
and update database,
or create user?

00:47:13.110 --> 00:47:15.760
IAN BARBER: So I think what
happened here is actually

00:47:15.760 --> 00:47:18.350
we kind of split
things up a little bit

00:47:18.350 --> 00:47:19.990
when we're pushing
the new release out.

00:47:19.990 --> 00:47:24.350
So the Node.js SDK supports
all of the database.

00:47:24.350 --> 00:47:26.600
We have a separate
chunk of the SDK

00:47:26.600 --> 00:47:29.870
which is focused on
creating custom tokens

00:47:29.870 --> 00:47:31.550
and verifying Firebase tokens.

00:47:31.550 --> 00:47:36.759
So that's like new as
those features have

00:47:36.759 --> 00:47:38.050
been developed in this release.

00:47:38.050 --> 00:47:39.710
But the database
SDK is right there.

00:47:39.710 --> 00:47:43.560
So you can, once you've
got an authenticated user,

00:47:43.560 --> 00:47:45.699
you can go off and you
can query the database.

00:47:45.699 --> 00:47:47.740
You can update it, do all
that same kind of stuff

00:47:47.740 --> 00:47:49.344
you do before.

00:47:49.344 --> 00:47:50.260
MARTIN OMANDER: I see.

00:47:50.260 --> 00:47:52.230
Got it.

00:47:52.230 --> 00:47:56.490
All right, the next one we
have is from Michael Prentice

00:47:56.490 --> 00:47:58.340
in Florida.

00:47:58.340 --> 00:48:02.510
Michael is asking, is there an
up to date guide or blog post

00:48:02.510 --> 00:48:06.830
for migrating a MEAN
or Node.js/MongoDB app

00:48:06.830 --> 00:48:08.090
to Firebase?

00:48:08.090 --> 00:48:10.600
Are there are tools for this?

00:48:10.600 --> 00:48:12.910
People often ask me
this question as well.

00:48:12.910 --> 00:48:14.730
What's the official answer?

00:48:14.730 --> 00:48:17.490
IAN BARBER: So well I mean,
Angular works super well.

00:48:17.490 --> 00:48:19.452
Angular's been one
of the big things

00:48:19.452 --> 00:48:20.910
with Firebase for
a very long time,

00:48:20.910 --> 00:48:23.500
and it's still something--
we've got people on the team

00:48:23.500 --> 00:48:26.680
very involved with the Angular
core team and vice versa.

00:48:26.680 --> 00:48:30.400
So Angular and Firebase
are a really good fit.

00:48:30.400 --> 00:48:32.340
And then the migration
is really you're

00:48:32.340 --> 00:48:34.480
dropping aspects of that.

00:48:34.480 --> 00:48:39.260
You don't need the MongoDB
and you don't need expressive

00:48:39.260 --> 00:48:40.470
if you've got these apps.

00:48:40.470 --> 00:48:43.420
You've got Firebase hosting
and you've got Angular.

00:48:43.420 --> 00:48:47.767
So I think the migrations should
be fairly straightforward.

00:48:47.767 --> 00:48:49.100
JAMES TAMPLIN: Delete some code?

00:48:49.100 --> 00:48:51.005
IAN BARBER: Yeah, hopefully.

00:48:51.005 --> 00:48:53.380
MARTIN OMANDER: Best kind of
refactoring there is, right?

00:48:56.310 --> 00:48:59.340
Angular and Firebase
just seem like they're

00:48:59.340 --> 00:49:01.980
made for each other, right?

00:49:01.980 --> 00:49:04.120
Write one or two lines
of code and update

00:49:04.120 --> 00:49:06.210
what is shown in
the browser, what

00:49:06.210 --> 00:49:09.490
is in the JavaScript model,
and what is in the database.

00:49:09.490 --> 00:49:10.520
That's pretty much it.

00:49:10.520 --> 00:49:12.020
IAN BARBER: The
whole thing is we've

00:49:12.020 --> 00:49:16.260
got the same kind of concept
listening or binding.

00:49:16.260 --> 00:49:18.630
It's really the
same set of ideas.

00:49:18.630 --> 00:49:22.165
And it just lets you flow all
the way back to the cloud.

00:49:22.165 --> 00:49:24.040
JAMES TAMPLIN: We actually
coined the phrase.

00:49:24.040 --> 00:49:26.610
So Angular had two way
binding between the DOM

00:49:26.610 --> 00:49:28.650
and your JavaScript models.

00:49:28.650 --> 00:49:32.470
And so we went to ng-conf I
guess 2 and 1/2 years ago now,

00:49:32.470 --> 00:49:34.660
introduced three
way binding which

00:49:34.660 --> 00:49:38.140
bound it to a model in the
cloud, which was the real time

00:49:38.140 --> 00:49:38.640
database.

00:49:38.640 --> 00:49:40.830
So when you updated
the DOM, it obviously

00:49:40.830 --> 00:49:42.510
synced across all clients.

00:49:42.510 --> 00:49:44.760
And so Firebase and Angular
have been working together

00:49:44.760 --> 00:49:45.530
for a long time.

00:49:45.530 --> 00:49:49.600
And we're hard at work
building and improving

00:49:49.600 --> 00:49:54.920
integrations for Angular 2
and the new Firebase 3.x SDKs.

00:49:54.920 --> 00:49:57.040
MARTIN OMANDER:
Actually on that James,

00:49:57.040 --> 00:50:02.820
so with the new SDK,
the new Firebase SDK,

00:50:02.820 --> 00:50:08.180
that works with Angular 1.x.

00:50:08.180 --> 00:50:10.744
Or how is it with Angular 2?

00:50:10.744 --> 00:50:12.410
IAN BARBER: There's
a matrix of options.

00:50:15.190 --> 00:50:17.090
You've got Angular.

00:50:17.090 --> 00:50:19.830
So you have Angular
1 and 2, which

00:50:19.830 --> 00:50:21.370
are both ongoing projects.

00:50:21.370 --> 00:50:25.600
Angular 2 is recently launched,
ng-conf, and is going well.

00:50:25.600 --> 00:50:28.680
We have AngularFire
1 and AngularFire 2

00:50:28.680 --> 00:50:29.660
to support those two.

00:50:29.660 --> 00:50:33.205
Both of those at the moment
go against the 2.x SDK.

00:50:33.205 --> 00:50:34.330
So that's where they come--

00:50:34.330 --> 00:50:35.371
MARTIN OMANDER: The 2.x--

00:50:35.371 --> 00:50:37.660
IAN BARBER: Firebase.

00:50:37.660 --> 00:50:38.660
So those currently work.

00:50:38.660 --> 00:50:41.270
And if you have an app
using them, you're good.

00:50:41.270 --> 00:50:43.140
Nothing's going to
happen to that app.

00:50:43.140 --> 00:50:44.110
You can keep using it.

00:50:44.110 --> 00:50:45.860
We're working at the
moment to update them

00:50:45.860 --> 00:50:48.576
to the 3 SDK for Firebase.

00:50:48.576 --> 00:50:50.200
So that's the new
features we launched.

00:50:50.200 --> 00:50:51.940
And you can follow along.

00:50:51.940 --> 00:50:53.520
These are open source projects.

00:50:53.520 --> 00:50:55.920
You can see the pull
requests coming in.

00:50:55.920 --> 00:50:58.270
And feel free to
send some as well.

00:50:58.270 --> 00:50:59.280
MARTIN OMANDER: Oh cool.

00:50:59.280 --> 00:51:00.551
This is the AngularFire--

00:51:00.551 --> 00:51:01.800
IAN BARBER: AngularFire, yeah.

00:51:01.800 --> 00:51:03.870
MARTIN OMANDER: Great,
an amazing library.

00:51:03.870 --> 00:51:06.760
I use it all the time.

00:51:06.760 --> 00:51:08.630
All right, good stuff.

00:51:08.630 --> 00:51:12.010
Another question from
Michael Prentice in Florida

00:51:12.010 --> 00:51:17.030
is how can I define
the REST API URI

00:51:17.030 --> 00:51:23.390
format of just taking the
Firebase database default URIs?

00:51:23.390 --> 00:51:26.070
JAMES TAMPLIN: So the
quick answer is you-- well

00:51:26.070 --> 00:51:32.110
I think what you want to do is
CNAME them to your own domain.

00:51:32.110 --> 00:51:33.810
If that is the
question you're asking,

00:51:33.810 --> 00:51:36.100
then unfortunately
you can't do that.

00:51:36.100 --> 00:51:42.190
So it's firebaseio.com is
the base of the URI path.

00:51:42.190 --> 00:51:46.000
IAN BARBER: But you can bring
your own domain to the hosting.

00:51:46.000 --> 00:51:49.690
So if you're
deploying a web app,

00:51:49.690 --> 00:51:53.950
you don't have to have that
app on name.firebaseapp.com.

00:51:53.950 --> 00:51:56.791
You can bring your own domain
and have your web app living

00:51:56.791 --> 00:51:57.290
on there.

00:51:57.290 --> 00:51:58.730
And then under the
hood it's going

00:51:58.730 --> 00:52:00.400
to connect to these REST URLs.

00:52:00.400 --> 00:52:04.140
But yeah, those URLs,
you can't change those.

00:52:04.140 --> 00:52:06.520
MARTIN OMANDER: So I think
that's a very important

00:52:06.520 --> 00:52:08.060
distinction brought
up there Ian.

00:52:08.060 --> 00:52:11.880
So the URL that the
user sees in the browser

00:52:11.880 --> 00:52:14.990
is whatever they want
it to be, their domain.

00:52:14.990 --> 00:52:17.865
And then under the hood the
traffic goes to a Firebase URL.

00:52:17.865 --> 00:52:18.906
IAN BARBER: Exactly yeah.

00:52:18.906 --> 00:52:20.710
MARTIN OMANDER: Got it, OK.

00:52:20.710 --> 00:52:22.890
Very good.

00:52:22.890 --> 00:52:26.000
The next question we have
is from Trish Whetzel

00:52:26.000 --> 00:52:28.050
in Silicon Valley.

00:52:28.050 --> 00:52:32.740
And she's saying legacy
Firebase lists third party REST

00:52:32.740 --> 00:52:35.080
wrappers at a URL.

00:52:35.080 --> 00:52:38.240
Will Firebase bring these
in-house and maintain?

00:52:41.170 --> 00:52:46.150
JAMES TAMPLIN: So quick point
of contention I have with this,

00:52:46.150 --> 00:52:47.740
there is no legacy Firebase.

00:52:47.740 --> 00:52:51.006
There's just one Firebase.

00:52:51.006 --> 00:52:54.785
And we have obviously
upgraded a bunch of pieces

00:52:54.785 --> 00:52:57.680
and give it a new website.

00:52:57.680 --> 00:53:01.100
The third party REST
wrapper, those were always

00:53:01.100 --> 00:53:03.580
written by the community.

00:53:03.580 --> 00:53:07.660
And we've been engaged
there and really tried

00:53:07.660 --> 00:53:11.310
to help and facilitate,
make those really great,

00:53:11.310 --> 00:53:18.120
but sort of never taken them
on as official libraries.

00:53:18.120 --> 00:53:21.370
I don't for sure if we
will or not in the future.

00:53:21.370 --> 00:53:23.960
But interesting suggestion,
something we can look in.

00:53:23.960 --> 00:53:26.410
IAN BARBER: Yeah, I
think one of things

00:53:26.410 --> 00:53:29.500
is-- we've had this discussion
quite a lot at Google

00:53:29.500 --> 00:53:32.080
in general on the
open source projects

00:53:32.080 --> 00:53:34.710
that are using services
that maybe we work on.

00:53:34.710 --> 00:53:36.640
Sometimes it makes
sense for those

00:53:36.640 --> 00:53:39.890
to be maintained in-house.

00:53:39.890 --> 00:53:42.650
My preferred situation is
actually when we can contribute

00:53:42.650 --> 00:53:44.750
and we can go and work
on an open source project

00:53:44.750 --> 00:53:46.454
and actually contribute
our changes just

00:53:46.454 --> 00:53:48.870
to whatever you guys are doing,
because there's a lot more

00:53:48.870 --> 00:53:50.310
of you than there are of us.

00:53:50.310 --> 00:53:54.230
And in some cases it
really wouldn't make sense

00:53:54.230 --> 00:53:55.860
to bring them
in-house, because we

00:53:55.860 --> 00:53:58.480
have a certain set of expertise
and a certain set of languages

00:53:58.480 --> 00:53:59.330
we work in.

00:53:59.330 --> 00:54:01.740
And the community
is like an explosion

00:54:01.740 --> 00:54:03.930
of different languages,
different systems.

00:54:03.930 --> 00:54:07.370
And someone that's bringing
a lot of idiomatic knowledge

00:54:07.370 --> 00:54:09.760
in that language is going
to be able to do a better

00:54:09.760 --> 00:54:13.460
job of building a
client around an API

00:54:13.460 --> 00:54:15.240
than we are much of the time.

00:54:15.240 --> 00:54:18.140
And so our kind of
focus has often been,

00:54:18.140 --> 00:54:21.800
let's get the APIs standardized
and clear and reliable

00:54:21.800 --> 00:54:25.380
so that we can put that out
that and we can document that.

00:54:25.380 --> 00:54:27.830
And then if the community
wants to build on top of it,

00:54:27.830 --> 00:54:31.622
then we can support
them wherever we can.

00:54:31.622 --> 00:54:33.080
MARTIN OMANDER: I
really like that,

00:54:33.080 --> 00:54:37.280
especially as someone who's
written client code for Google

00:54:37.280 --> 00:54:43.380
APIs, I can say that I did an
OK job of writing a .NET library

00:54:43.380 --> 00:54:44.940
for a Google API.

00:54:44.940 --> 00:54:47.110
But once the community
took it over,

00:54:47.110 --> 00:54:50.210
they made it sort
of .NET idiomatic.

00:54:50.210 --> 00:54:54.900
And it sort of worked for .NET
developers far better than

00:54:54.900 --> 00:54:57.690
my initial version.

00:54:57.690 --> 00:55:00.696
Who is writing the
AngularFire library?

00:55:00.696 --> 00:55:02.320
IAN BARBER: There's
still a few people.

00:55:05.260 --> 00:55:08.230
Gosh, Jeff Cross, David East.

00:55:08.230 --> 00:55:10.154
I'm forgetting people.

00:55:10.154 --> 00:55:11.510
Apologies to all those people.

00:55:11.510 --> 00:55:12.040
JAMES TAMPLIN: I
think it's like 50.

00:55:12.040 --> 00:55:14.189
IAN BARBER: There's
a big community.

00:55:14.189 --> 00:55:15.230
Look at the contributors.

00:55:15.230 --> 00:55:19.557
It's
github.com/angular/angularfire2.

00:55:19.557 --> 00:55:20.640
Click on the contributors.

00:55:20.640 --> 00:55:22.681
There's a ton of people
that have worked on that.

00:55:22.681 --> 00:55:24.619
And thank you to all of them.

00:55:24.619 --> 00:55:26.660
MARTIN OMANDER: Thank you
as someone who uses it.

00:55:26.660 --> 00:55:29.465
I mean for me, it's just magic.

00:55:29.465 --> 00:55:32.060
I include AngularFire, and wow.

00:55:32.060 --> 00:55:34.640
I didn't even realize there
were that many people.

00:55:34.640 --> 00:55:36.830
But I guess that
is needed if you're

00:55:36.830 --> 00:55:39.490
going to get this three
way magic binding?

00:55:39.490 --> 00:55:42.650
IAN BARBER: Well the
actual core of these things

00:55:42.650 --> 00:55:44.590
is not actually that hard.

00:55:44.590 --> 00:55:48.720
It's the edge cases and
all the details that

00:55:48.720 --> 00:55:50.840
go into a library that like.

00:55:50.840 --> 00:55:52.950
The 80% cases are usually
pretty straightforward,

00:55:52.950 --> 00:55:54.040
especially when you're
dealing with something

00:55:54.040 --> 00:55:56.180
like-- the Firebase
database is not--

00:55:56.180 --> 00:55:57.560
if you ever look
at the REST API,

00:55:57.560 --> 00:56:00.020
it's not super complicated.

00:56:00.020 --> 00:56:03.800
If you look at the SDKs,
they're not super complicated.

00:56:03.800 --> 00:56:05.546
Like the majority
of cases are, I'm

00:56:05.546 --> 00:56:07.850
going to listen for
values coming in.

00:56:07.850 --> 00:56:10.467
I'm going to push something
in or I'm going to update.

00:56:10.467 --> 00:56:12.800
These are where you're going
to spend most of your time.

00:56:12.800 --> 00:56:16.400
But once you start getting into
the querying or the filtering,

00:56:16.400 --> 00:56:19.220
you start having
to do more work.

00:56:19.220 --> 00:56:21.370
So to get something
working is actually--

00:56:21.370 --> 00:56:22.870
if you're looking
at a language that

00:56:22.870 --> 00:56:25.700
doesn't have a binding to it,
to get something working that

00:56:25.700 --> 00:56:30.010
likely solves your problem is
not a big investment of time.

00:56:30.010 --> 00:56:31.950
If you want to wrap
every single feature,

00:56:31.950 --> 00:56:34.030
it starts becoming
more effort, which

00:56:34.030 --> 00:56:39.390
is why the team on AngularFire
2 and the other bindings

00:56:39.390 --> 00:56:41.660
can grow as they're
catching these edge cases

00:56:41.660 --> 00:56:43.890
and building out all these
features that the database

00:56:43.890 --> 00:56:44.472
sorts.

00:56:44.472 --> 00:56:45.680
MARTIN OMANDER: Right, right.

00:56:45.680 --> 00:56:50.160
Yeah, the edge cases,
they'll get you every time.

00:56:50.160 --> 00:56:52.580
All right, good stuff.

00:56:52.580 --> 00:56:55.200
We have another question
from Sheldon McGee-- wow,

00:56:55.200 --> 00:56:56.470
lots of questions.

00:56:56.470 --> 00:56:57.570
Thanks Sheldon.

00:56:57.570 --> 00:56:59.850
Another question from
Sheldon in Arizona,

00:56:59.850 --> 00:57:03.160
which is, are Firebase
Analytics and Firebase

00:57:03.160 --> 00:57:06.350
Messaging all new products,
or are they renamed

00:57:06.350 --> 00:57:09.040
and updated versions
of previous projects?

00:57:09.040 --> 00:57:12.820
MAGNUS HYTTSTEN: So it's a mix.

00:57:12.820 --> 00:57:16.680
Firebase Analytics is built
completely from scratch just

00:57:16.680 --> 00:57:21.870
to be a great mobile analytics
solution for developers.

00:57:21.870 --> 00:57:23.380
But then there are
other APIs that

00:57:23.380 --> 00:57:27.370
have existed for some time
in Google Play services

00:57:27.370 --> 00:57:28.410
for example.

00:57:28.410 --> 00:57:30.230
App Invites for
example, is one of them.

00:57:30.230 --> 00:57:33.860
App Indexing probably
people have heard of.

00:57:33.860 --> 00:57:37.140
So those APIs, as they
make a lot of sense

00:57:37.140 --> 00:57:43.200
for every developer developing
an app to engage users,

00:57:43.200 --> 00:57:45.939
they are an inherent,
important piece of Firebase.

00:57:45.939 --> 00:57:47.980
So that's why they've been
brought in as features

00:57:47.980 --> 00:57:50.554
of this entire product.

00:57:50.554 --> 00:57:52.720
MARTIN OMANDER: And we were
talking about for these,

00:57:52.720 --> 00:57:56.870
you described Magnus, it's
not simply a rebranding.

00:57:56.870 --> 00:57:58.599
They're actually integrated.

00:57:58.599 --> 00:57:59.640
MAGNUS HYTTSTEN: Exactly.

00:57:59.640 --> 00:58:01.810
They're tightly integrated.

00:58:01.810 --> 00:58:04.110
All of these APIs--
I think all is

00:58:04.110 --> 00:58:06.790
accurate-- they integrate
with Analytics so you

00:58:06.790 --> 00:58:08.740
can get analytics data from it.

00:58:08.740 --> 00:58:11.750
So that's really what
Firebase is all about.

00:58:11.750 --> 00:58:14.080
Rather than having to
deal with individual API,

00:58:14.080 --> 00:58:17.720
look at this from a
holistic perspective,

00:58:17.720 --> 00:58:21.270
a coherent set of features
that make sense and are

00:58:21.270 --> 00:58:26.000
well integrated when you
develop apps so the work

00:58:26.000 --> 00:58:28.750
as a developer is as
painless as Possible

00:58:28.750 --> 00:58:31.250
MARTIN OMANDER: And when we're
talking about developer pain,

00:58:31.250 --> 00:58:34.614
some of these fit nicely into
Android Studio too, right?

00:58:34.614 --> 00:58:35.530
MAGNUS HYTTSTEN: Sure.

00:58:35.530 --> 00:58:38.500
I mean, there are plug-ins
now in Android Studio

00:58:38.500 --> 00:58:41.150
to help with
Firebase development.

00:58:41.150 --> 00:58:46.710
And this just the initial
relieves after the initial

00:58:46.710 --> 00:58:49.160
features that existed
as part of Firebase.

00:58:49.160 --> 00:58:53.900
So right now it's grown up to
14 or 15 I think we have there.

00:58:53.900 --> 00:58:59.180
And now we really have
time to focus and improve

00:58:59.180 --> 00:59:02.610
and incrementally get
this product a lot better.

00:59:02.610 --> 00:59:04.160
So those integrations,
all of them,

00:59:04.160 --> 00:59:07.500
they will become
better as time goes by.

00:59:07.500 --> 00:59:10.430
JAMES TAMPLIN: I think Firebase
Messaging or Firebase Cloud

00:59:10.430 --> 00:59:11.850
Messaging that was
in the question

00:59:11.850 --> 00:59:14.460
is a specific one to highlight.

00:59:14.460 --> 00:59:17.510
So this is Google Cloud
Messaging that many of you

00:59:17.510 --> 00:59:20.540
know and love and sends
billion of messages a day,

00:59:20.540 --> 00:59:24.900
and was rebranded
and integrated,

00:59:24.900 --> 00:59:26.760
as Magnus mentioned,
because Firebase

00:59:26.760 --> 00:59:30.940
is this integrated suite of
tools for mobile developers.

00:59:30.940 --> 00:59:34.180
But second, to really highlight
its cross platform nature.

00:59:34.180 --> 00:59:38.762
It's not just a push
messaging tool for Android.

00:59:38.762 --> 00:59:42.350
You can send to iOS
as well and we're

00:59:42.350 --> 00:59:46.690
working with browser vendors
to make sure it can send it

00:59:46.690 --> 00:59:49.174
down to the web as well.

00:59:49.174 --> 00:59:50.840
MARTIN OMANDER: Down
to the web as well?

00:59:50.840 --> 00:59:52.760
That's really useful, yeah.

00:59:52.760 --> 00:59:54.240
Good stuff.

00:59:54.240 --> 00:59:56.660
And I guess it makes
sense with Analytics

00:59:56.660 --> 00:59:59.380
being completely
a brand new thing,

00:59:59.380 --> 01:00:03.410
because app analytics on
your phone is quite a bit

01:00:03.410 --> 01:00:05.954
different than web analytics.

01:00:05.954 --> 01:00:07.870
IAN BARBER: It's that
the needs are different.

01:00:07.870 --> 01:00:10.060
I think this is the
thing with analytics

01:00:10.060 --> 01:00:13.970
is you're coming from a world
where we have a lot of people

01:00:13.970 --> 01:00:16.840
who are very good at
working with Google

01:00:16.840 --> 01:00:19.750
Analytics and products with
it, for understanding how

01:00:19.750 --> 01:00:23.630
web content is consumed and used
and optimized based on that.

01:00:23.630 --> 01:00:26.840
And GA is an amazing
tool for doing that.

01:00:26.840 --> 01:00:30.980
Firebase Analytics just
changed that initial model,

01:00:30.980 --> 01:00:34.800
that initial model of going from
pages to just going to events,

01:00:34.800 --> 01:00:38.460
and thinking of it more
as a flow where we have

01:00:38.460 --> 01:00:40.080
all of those events captured.

01:00:40.080 --> 01:00:41.830
And you can actually
really start drilling

01:00:41.830 --> 01:00:43.610
into the details of them.

01:00:43.610 --> 01:00:48.380
I think that that
distinction is relatively

01:00:48.380 --> 01:00:51.676
small at the actual
implementation level, SDK

01:00:51.676 --> 01:00:52.550
implementation level.

01:00:52.550 --> 01:00:56.190
If you go and swap out
an existing items package

01:00:56.190 --> 01:00:57.900
or add in Firebase
Analytics, it's

01:00:57.900 --> 01:00:59.709
not going to be that much code.

01:00:59.709 --> 01:01:01.000
This is pretty straightforward.

01:01:01.000 --> 01:01:04.910
But the implementation of the
backend and the processing

01:01:04.910 --> 01:01:07.850
and the reporting that goes on
in that is pretty substantial.

01:01:07.850 --> 01:01:11.027
So it was a big effort
to launch that product.

01:01:11.027 --> 01:01:12.360
MARTIN OMANDER: All right, yeah.

01:01:12.360 --> 01:01:14.930
And I've seen some
of these companies.

01:01:14.930 --> 01:01:18.070
If you have a company
that has an app that

01:01:18.070 --> 01:01:20.370
has a substantial
number of installs,

01:01:20.370 --> 01:01:21.999
you have a lot of
data, because you're

01:01:21.999 --> 01:01:23.290
tracking every click basically.

01:01:23.290 --> 01:01:25.706
MAGNUS HYTTSTEN: And that was
one thing that was important

01:01:25.706 --> 01:01:28.850
with Firebase Analytics was
free and unlimited, to be

01:01:28.850 --> 01:01:32.700
able to provide mobile
developers with that.

01:01:32.700 --> 01:01:36.090
So if you haven't looked
at Firebase Analytics,

01:01:36.090 --> 01:01:40.930
I strongly urge the developers
out there to take a look.

01:01:40.930 --> 01:01:44.489
IAN BARBER: It's like you
can get started with no code.

01:01:44.489 --> 01:01:46.280
You can started just
adding the dependency.

01:01:46.280 --> 01:01:50.980
If you add the Firebase core
dependency on Android or iOS,

01:01:50.980 --> 01:01:56.140
it will just start tracking
some basic metrics, app installs

01:01:56.140 --> 01:01:57.682
and sessions and
things like that.

01:01:57.682 --> 01:02:00.140
So you don't have to go and
change you app to give it a try

01:02:00.140 --> 01:02:02.223
and start seeing whether
the data in the dashboard

01:02:02.223 --> 01:02:02.800
is useful.

01:02:02.800 --> 01:02:05.410
MARTIN OMANDER: Oh, I like
that, no code integration.

01:02:05.410 --> 01:02:07.410
MAGNUS HYTTSTEN: You're
getting us started here.

01:02:07.410 --> 01:02:08.784
But there's so
many capabilities.

01:02:11.480 --> 01:02:14.170
Just the fact that you can
use analytics data to build

01:02:14.170 --> 01:02:18.250
audiences, segment groups,
and all of these things ties

01:02:18.250 --> 01:02:19.250
into other products.

01:02:19.250 --> 01:02:21.530
James talked about Config.

01:02:21.530 --> 01:02:23.550
Using Analytics data,
you can build audiences.

01:02:23.550 --> 01:02:28.360
And that can then feed into
Config, and you can use Config.

01:02:28.360 --> 01:02:30.790
Using audiences, you
can send notifications

01:02:30.790 --> 01:02:33.500
to just those people that
are matching that criteria.

01:02:33.500 --> 01:02:36.065
So there's a lot of
integration there

01:02:36.065 --> 01:02:39.140
that would be
extremely difficult

01:02:39.140 --> 01:02:41.750
and a lot of work to do if
you had to do it from scratch.

01:02:41.750 --> 01:02:44.890
All of that you get for
free when you use Firebase,

01:02:44.890 --> 01:02:47.920
because all of that stuff
is integrated right there.

01:02:47.920 --> 01:02:52.700
IAN BARBER: And there's some
cool edge case integrations

01:02:52.700 --> 01:02:53.990
and things on that.

01:02:53.990 --> 01:02:56.630
If you want to say, you want
to keep Google Analytics

01:02:56.630 --> 01:02:58.230
for-- if you're using
Google Analytics on the web

01:02:58.230 --> 01:02:59.896
and you want to have
Firebase Analytics.

01:02:59.896 --> 01:03:02.952
You can use Tag Manager to
repeat events over to GA.

01:03:02.952 --> 01:03:04.950
So you can set it
up so that you have

01:03:04.950 --> 01:03:06.390
Firebase Analytics in your app.

01:03:06.390 --> 01:03:08.880
And that's automatically
feeding into Tag Manager.

01:03:08.880 --> 01:03:10.010
Tag Manager is going
to go out and fire

01:03:10.010 --> 01:03:11.051
those events [INAUDIBLE].

01:03:11.051 --> 01:03:12.849
JAMES TAMPLIN: But Ian,
what's Tag Manager?

01:03:12.849 --> 01:03:15.559
[LAUGHTER]

01:03:15.559 --> 01:03:16.350
IAN BARBER: Smooth.

01:03:16.350 --> 01:03:18.980
[LAUGHTER]

01:03:18.980 --> 01:03:20.860
If anyone hasn't
encountered Tag Manager,

01:03:20.860 --> 01:03:26.750
Tag Manager is a technology that
sort of came from the web world

01:03:26.750 --> 01:03:28.970
where you often ended
up wanting to have

01:03:28.970 --> 01:03:33.150
multiple different analytics
trackers or combustion trackers

01:03:33.150 --> 01:03:34.280
for different services.

01:03:34.280 --> 01:03:37.230
And it lets you effectively
just route events.

01:03:37.230 --> 01:03:38.820
So you're coming and
saying, someone's

01:03:38.820 --> 01:03:40.278
come through and
converted on this.

01:03:40.278 --> 01:03:42.790
You can go and send that
to the appropriate trackers

01:03:42.790 --> 01:03:43.595
on the server side.

01:03:43.595 --> 01:03:45.710
So you get a really
flexible system

01:03:45.710 --> 01:03:48.438
that you can control even
once your app is out there

01:03:48.438 --> 01:03:49.752
and has been deployed.

01:03:49.752 --> 01:03:51.690
MARTIN OMANDER: And I
think about Tag Manager.

01:03:51.690 --> 01:03:54.675
Whenever I hear that, I think
about Dan Baran in Chicago,

01:03:54.675 --> 01:03:56.440
who I think is watching us now.

01:03:56.440 --> 01:03:58.450
Hi Dan.

01:03:58.450 --> 01:04:01.710
When Dan and I show up at
events, he always gives a talk.

01:04:01.710 --> 01:04:05.490
He's not a Googler, but he
gives a talk on Tag Manager.

01:04:05.490 --> 01:04:09.120
And then I ask, Dan,
what is Tag Manager?

01:04:09.120 --> 01:04:12.075
And he said, you know,
every Googler asks me that.

01:04:12.075 --> 01:04:15.222
But it's the greatest
hidden Google feature

01:04:15.222 --> 01:04:16.430
that people don't know about.

01:04:16.430 --> 01:04:17.980
And they should all use it.

01:04:17.980 --> 01:04:19.210
So Tag Manager, use it.

01:04:22.460 --> 01:04:27.270
All right, so our next
question is about,

01:04:27.270 --> 01:04:29.720
is feeding Firebase
Analytics data

01:04:29.720 --> 01:04:36.034
to BigQuery only possible on
the highest pricing tier, Blaze?

01:04:36.034 --> 01:04:37.450
MAGNUS HYTTSTEN:
That's true, yes.

01:04:37.450 --> 01:04:41.320
And this is one of the--
Blaze has the full cloud

01:04:41.320 --> 01:04:42.440
integration as part of it.

01:04:42.440 --> 01:04:45.970
And BigQuery is one of
those products in Cloud

01:04:45.970 --> 01:04:47.260
that actually costs money.

01:04:47.260 --> 01:04:50.920
So it makes a lot of sense to
have it together with Blaze.

01:04:50.920 --> 01:04:52.710
MARTIN OMANDER: And
BigQuery, for those

01:04:52.710 --> 01:04:54.500
who haven't heard
about what BigQuery is,

01:04:54.500 --> 01:04:55.810
it's a pretty amazing product.

01:04:55.810 --> 01:04:58.268
MAGNUS HYTTSTEN: That's one of
the coolest Google products.

01:04:58.268 --> 01:04:59.930
IAN BARBER: Can you
do BigQuery though?

01:04:59.930 --> 01:05:05.940
MAGNUS HYTTSTEN: No, BigQuery
is a database product

01:05:05.940 --> 01:05:09.460
which allows you to
do SQL like statements

01:05:09.460 --> 01:05:11.330
on petabytes of data.

01:05:11.330 --> 01:05:16.250
So you can take huge
data sets and analyze

01:05:16.250 --> 01:05:21.590
them using BigQuery in a very
rapid and performant way.

01:05:21.590 --> 01:05:24.560
So it's really
for data analytics

01:05:24.560 --> 01:05:26.830
and looking at big data
and all of these things,

01:05:26.830 --> 01:05:29.100
it is a very unique solution.

01:05:29.100 --> 01:05:31.400
And Analytics,
Firebase Analytics,

01:05:31.400 --> 01:05:33.800
in order to provide more
flexibility on analyzing

01:05:33.800 --> 01:05:36.950
your data, Firebase
Analytics has this capability

01:05:36.950 --> 01:05:39.950
to also provide that
data down to BigQuery

01:05:39.950 --> 01:05:43.770
so you can write these
big custom queries.

01:05:43.770 --> 01:05:47.030
And that's also a feed that
can come from Google Analytics.

01:05:47.030 --> 01:05:49.720
So you can actually bring
in Google Analytics data

01:05:49.720 --> 01:05:52.810
to BigQuery as well as
Firebase Analytics data.

01:05:52.810 --> 01:05:54.911
And then you can
cross correlate them--

01:05:54.911 --> 01:05:56.660
IAN BARBER: And a lot
of our data sources.

01:05:56.660 --> 01:05:59.076
MAGNUS HYTTSTEN: And a lot of
other data sources, exactly,

01:05:59.076 --> 01:06:02.940
because BigQuery can
get data feeds from,

01:06:02.940 --> 01:06:04.670
I guess, most of the
cloud products like,

01:06:04.670 --> 01:06:07.147
Cloud Storage and other
data sources as well.

01:06:07.147 --> 01:06:08.730
IAN BARBER: And a
lot of third parties

01:06:08.730 --> 01:06:10.540
you can integrate
with pretty easily.

01:06:10.540 --> 01:06:13.100
And you just start putting
data sources in, pulling them

01:06:13.100 --> 01:06:14.850
together, doing queries.

01:06:14.850 --> 01:06:17.860
And then you can
plug that into what

01:06:17.860 --> 01:06:19.552
you're kind of BI tools is.

01:06:19.552 --> 01:06:21.510
If you're using Tableau
or something like that,

01:06:21.510 --> 01:06:23.745
that can talk to BigQuery
and you can do all that.

01:06:23.745 --> 01:06:25.120
MAGNUS HYTTSTEN:
That is amazing.

01:06:25.120 --> 01:06:29.570
I mean, I remember just
10 years ago in projects

01:06:29.570 --> 01:06:33.670
that I was using, 100 million
rows in a database table, that

01:06:33.670 --> 01:06:37.750
was very prohibitive
and we were very scared

01:06:37.750 --> 01:06:39.960
of implementing a
solution like that.

01:06:39.960 --> 01:06:42.480
With these next generation
tools and distribution

01:06:42.480 --> 01:06:46.400
and the scale of Google,
100 million rows suddenly

01:06:46.400 --> 01:06:48.450
isn't much data at all.

01:06:48.450 --> 01:06:51.220
I mean, we're talking
terabytes and even up

01:06:51.220 --> 01:06:54.810
to petabytes in terms of data
sets that can be analyzed.

01:06:54.810 --> 01:06:57.314
This was not possible
10 years ago.

01:06:57.314 --> 01:06:58.855
MARTIN OMANDER: It
is pretty amazing.

01:07:01.410 --> 01:07:09.010
And let's see, what is it,
mega, giga, tera, peta.

01:07:09.010 --> 01:07:10.310
OK, it's big.

01:07:10.310 --> 01:07:11.540
It's big.

01:07:11.540 --> 01:07:12.440
MAGNUS HYTTSTEN: Exa.

01:07:12.440 --> 01:07:13.898
MARTIN OMANDER:
Exa comes after it.

01:07:13.898 --> 01:07:16.690
Yes, very good.

01:07:16.690 --> 01:07:18.770
Good stuff.

01:07:18.770 --> 01:07:24.650
All right, so our next question
is from Roberto Martin.

01:07:24.650 --> 01:07:29.840
He's asking, my apps uses
GCM, Google Cloud Messaging.

01:07:29.840 --> 01:07:31.490
I would like to
update to Firebase

01:07:31.490 --> 01:07:33.540
to use the other services.

01:07:33.540 --> 01:07:37.900
Is Firebase Cloud
Message production ready.

01:07:37.900 --> 01:07:39.950
IAN BARBER: I've got this one.

01:07:39.950 --> 01:07:41.124
Yes.

01:07:41.124 --> 01:07:45.760
[APPLAUSE]

01:07:45.760 --> 01:07:48.380
It is a great service.

01:07:48.380 --> 01:07:53.280
FCM is built by the
team that did GCM.

01:07:53.280 --> 01:07:57.900
This is a new version
that they've put together.

01:07:57.900 --> 01:08:01.250
This is bringing out really
just a lot of improvements.

01:08:01.250 --> 01:08:04.920
But the base layer is still
that code that already worked.

01:08:04.920 --> 01:08:08.520
MARTIN OMANDER: Oh, so if the
previous one worked for you,

01:08:08.520 --> 01:08:09.920
the new one will.

01:08:09.920 --> 01:08:13.330
JAMES TAMPLIN: Yeah, it send
170 billion messages a day.

01:08:13.330 --> 01:08:16.254
It's very production ready.

01:08:16.254 --> 01:08:18.170
MARTIN OMANDER: You
forced all of my question.

01:08:18.170 --> 01:08:20.210
I was going to ask,
is anybody using it?

01:08:20.210 --> 01:08:23.229
But 170 billion messages,
I guess somebody is.

01:08:23.229 --> 01:08:25.260
IAN BARBER: One or two.

01:08:25.260 --> 01:08:28.930
MAGNUS HYTTSTEN: And as part
of the launch of FCM also,

01:08:28.930 --> 01:08:32.073
we've heard a lot of good
feedback on simplification,

01:08:32.073 --> 01:08:35.361
the API improvements as well.

01:08:35.361 --> 01:08:36.569
IAN BARBER: Yeah, absolutely.

01:08:36.569 --> 01:08:39.050
The API got a lot easier to use.

01:08:39.050 --> 01:08:40.790
There's a lot less,
particular if get

01:08:40.790 --> 01:08:43.206
started-- I think in this case
if you're coming from a GCM

01:08:43.206 --> 01:08:46.550
integration, if you
were using the GCM v3,

01:08:46.550 --> 01:08:48.590
then coming out to this
is a very easy move.

01:08:48.590 --> 01:08:50.919
But if you're starting from
scratch, it's even easier.

01:08:50.919 --> 01:08:53.210
Like if you're starting from
scratch, it's really just,

01:08:53.210 --> 01:08:54.418
you can get this stuff going.

01:08:54.418 --> 01:08:57.640
I think actually again, if
you're sending notifications

01:08:57.640 --> 01:08:59.680
from the Firebase
Notifications Console,

01:08:59.680 --> 01:09:02.059
you can get some of that
working with, again, no code.

01:09:02.059 --> 01:09:04.100
It's just the dependency
is going to go in there,

01:09:04.100 --> 01:09:06.391
and that's going to take care
of a lot of that for you.

01:09:06.391 --> 01:09:07.529
So that's cool.

01:09:07.529 --> 01:09:10.750
And it's not that
we expect everyone

01:09:10.750 --> 01:09:12.946
who is deploying this stuff
to do so with no code.

01:09:12.946 --> 01:09:14.529
Of course you're
going to want to have

01:09:14.529 --> 01:09:17.300
notification handling of your
own and do things with it.

01:09:17.300 --> 01:09:19.840
But we want you to spend
time writing that code,

01:09:19.840 --> 01:09:22.790
not to writing kind of
boilerplate and things

01:09:22.790 --> 01:09:26.764
for just receiving those
messages in the first place.

01:09:26.764 --> 01:09:27.680
MARTIN OMANDER: Right.

01:09:27.680 --> 01:09:30.029
I think that bears repeating
and emphasizing, right?

01:09:30.029 --> 01:09:33.430
The Messaging Console, you
can go in there on a web page.

01:09:33.430 --> 01:09:37.890
And a nontechnical person
could put a message in there

01:09:37.890 --> 01:09:41.010
and send it out to a
subset of your users,

01:09:41.010 --> 01:09:43.020
and can pick which segment even.

01:09:43.020 --> 01:09:45.609
MAGNUS HYTTSTEN: So it says
notification on the left hand

01:09:45.609 --> 01:09:47.122
side of the console.

01:09:47.122 --> 01:09:48.580
That's Firebase
Notifications where

01:09:48.580 --> 01:09:50.859
you can do all of these things.

01:09:50.859 --> 01:09:52.900
And again, it integrates
with Firebase Analytics,

01:09:52.900 --> 01:09:55.950
so you can build audiences
based on your analytics data,

01:09:55.950 --> 01:09:59.360
and then use that audience
to target your messages.

01:09:59.360 --> 01:10:03.190
IAN BARBER: And you can schedule
and all that kind of stuff.

01:10:03.190 --> 01:10:07.800
There was one of the partners
at-- we had a kind of Firebase

01:10:07.800 --> 01:10:10.179
in the real world session
at I/O, which is on YouTube.

01:10:10.179 --> 01:10:11.720
One of the partners
there was talking

01:10:11.720 --> 01:10:15.730
about how they wanted to
do a bunch of campaign type

01:10:15.730 --> 01:10:16.950
messages.

01:10:16.950 --> 01:10:18.710
And they didn't want to stay up.

01:10:18.710 --> 01:10:20.240
And so they can
just schedule them.

01:10:20.240 --> 01:10:21.070
MARTIN OMANDER: Oh,
stay up in the--

01:10:21.070 --> 01:10:22.630
IAN BARBER: Yeah,
because they want

01:10:22.630 --> 01:10:24.990
them to come at a sensible
time for each time zone,

01:10:24.990 --> 01:10:27.460
not at the time they
happen to be up.

01:10:27.460 --> 01:10:30.910
So if they're in Korea and
their audience was in the US,

01:10:30.910 --> 01:10:33.410
then they want to have that go
at a sensible time in the US.

01:10:33.410 --> 01:10:36.876
So little things
like that, you just

01:10:36.876 --> 01:10:38.500
don't have to do that
yourself anymore.

01:10:38.500 --> 01:10:40.090
You can take advantage of this.

01:10:40.090 --> 01:10:40.460
MARTIN OMANDER: Right.

01:10:40.460 --> 01:10:42.150
Because I've talked
to app developers,

01:10:42.150 --> 01:10:44.690
successful app developers,
who wanted to do all this.

01:10:44.690 --> 01:10:47.960
But they had to
build it themselves.

01:10:47.960 --> 01:10:50.600
And like you were
saying, you end up

01:10:50.600 --> 01:10:52.010
having to build
a lot of plumbing

01:10:52.010 --> 01:10:54.140
when you're not
a plumber, right?

01:10:54.140 --> 01:10:57.062
You're a game developer
or enterprise developer.

01:10:57.062 --> 01:10:58.520
MAGNUS HYTTSTEN:
And that's really,

01:10:58.520 --> 01:11:03.430
I mean-- that's really
a huge value, building

01:11:03.430 --> 01:11:07.606
this next level-- in the
stack or app development,

01:11:07.606 --> 01:11:11.500
this is all of these
things ready to use.

01:11:11.500 --> 01:11:15.370
I often say, with Firebase I
could sit down after lunch,

01:11:15.370 --> 01:11:19.370
and by 5 o'clock,
I would understand

01:11:19.370 --> 01:11:21.090
a lot of the
components, see a lot

01:11:21.090 --> 01:11:23.340
of the component in Firebase
that I would use in order

01:11:23.340 --> 01:11:24.640
to build an effective app.

01:11:24.640 --> 01:11:26.370
If I didn't have
Firebase, I would

01:11:26.370 --> 01:11:29.740
have to go out and search
and look for solutions.

01:11:29.740 --> 01:11:31.710
And they wouldn't be
integrated at all,

01:11:31.710 --> 01:11:33.880
would take a lot more
time and be a lot more

01:11:33.880 --> 01:11:39.110
complex than using Firebase.

01:11:39.110 --> 01:11:43.290
MARTIN OMANDER: Wasn't it
one of the computing greats

01:11:43.290 --> 01:11:45.110
like Dijkstra or
somebody like that

01:11:45.110 --> 01:11:48.760
who said that the only advance
we've ever had in computing

01:11:48.760 --> 01:11:50.810
is successive abstraction.

01:11:50.810 --> 01:11:52.994
Everything else is details.

01:11:52.994 --> 01:11:54.410
Sounds like this
is bringing that.

01:11:56.980 --> 01:12:00.410
All right, I think our
last question before we go

01:12:00.410 --> 01:12:05.960
to a break/ So this is from
Brandon M. Hunter who's asking,

01:12:05.960 --> 01:12:10.630
can you share production
apps that uses Firebase?

01:12:10.630 --> 01:12:12.785
Do we have some
things we can mention?

01:12:12.785 --> 01:12:14.160
IAN BARBER: There's
a whole bunch

01:12:14.160 --> 01:12:19.792
on firebase.google.com/customers
that are there.

01:12:19.792 --> 01:12:21.500
If you're watching
some of the I/O talks,

01:12:21.500 --> 01:12:26.699
you might have seen
apps like IS, Shazam.

01:12:26.699 --> 01:12:27.740
Who else did we have in--

01:12:27.740 --> 01:12:29.140
MAGNUS HYTTSTEN: NPR.

01:12:29.140 --> 01:12:30.060
IAN BARBER: NPR, yeah.

01:12:30.060 --> 01:12:35.624
JAMES TAMPLIN: SeatGeek is
using us, Viber, TuneIn.

01:12:35.624 --> 01:12:36.540
There's a whole bunch.

01:12:36.540 --> 01:12:38.760
And then these are the partners.

01:12:38.760 --> 01:12:40.664
We're listing
partners and customers

01:12:40.664 --> 01:12:43.080
that we've been working with
in the last six months who've

01:12:43.080 --> 01:12:45.840
been giving us feedback on
all of the great features.

01:12:45.840 --> 01:12:50.850
But there's
thousands-- as you saw,

01:12:50.850 --> 01:12:56.740
470,000 developers who were
using prior to last Wednesday.

01:12:56.740 --> 01:13:00.430
Citrix uses us to power
parts of GoToMeeting.

01:13:00.430 --> 01:13:03.747
CBS uses us to power parts of
the social experience for some

01:13:03.747 --> 01:13:04.830
of their television shows.

01:13:04.830 --> 01:13:07.940
Instacart uses us
for a whole variety

01:13:07.940 --> 01:13:10.930
of things, social, shopping.

01:13:10.930 --> 01:13:14.390
So yeah, lots and lots and
lots of people are using it.

01:13:14.390 --> 01:13:18.100
MARTIN OMANDER: And I
think that's a good point.

01:13:18.100 --> 01:13:21.750
So you said, James, that we
have hundreds of thousands

01:13:21.750 --> 01:13:25.620
of, as we saw in the graph,
using the database component.

01:13:25.620 --> 01:13:26.300
We know that.

01:13:26.300 --> 01:13:27.740
JAMES TAMPLIN: And
authentication and hosting.

01:13:27.740 --> 01:13:29.560
MARTIN OMANDER: And
authentication and hosting.

01:13:29.560 --> 01:13:31.440
And some of these partners
you mentioned here

01:13:31.440 --> 01:13:36.380
are ones who have been in
the sort of prepublic beta

01:13:36.380 --> 01:13:38.560
using these new features
we're talking about today,

01:13:38.560 --> 01:13:40.360
messaging and so on.

01:13:40.360 --> 01:13:44.560
So they are not brand new,
raw, and experimental.

01:13:44.560 --> 01:13:46.692
People are using those features.

01:13:46.692 --> 01:13:47.650
JAMES TAMPLIN: Exactly.

01:13:47.650 --> 01:13:52.950
So we've been working
on this for-- Firebase

01:13:52.950 --> 01:13:54.280
has been at Google.

01:13:54.280 --> 01:13:56.560
The acquired company has
been at Google for 18 months

01:13:56.560 --> 01:13:58.040
and have been working hard.

01:13:58.040 --> 01:14:00.690
And there's been an extensive
what we call early access

01:14:00.690 --> 01:14:05.670
program where we go out to
trusted partners and trusted

01:14:05.670 --> 01:14:08.070
customers and say hey,
what do you think of this?

01:14:08.070 --> 01:14:09.640
And it's always
been core to sort

01:14:09.640 --> 01:14:13.420
of the Firebase philosophy
of test and iterate

01:14:13.420 --> 01:14:15.600
and check out this
version of the API.

01:14:15.600 --> 01:14:16.350
What do you think?

01:14:16.350 --> 01:14:17.720
How could we improve?

01:14:17.720 --> 01:14:20.410
And rapidly iterating and
getting product managers

01:14:20.410 --> 01:14:25.024
and engineers, in addition to
our developer relations folks,

01:14:25.024 --> 01:14:27.440
really engaging and interacting
and understanding the pain

01:14:27.440 --> 01:14:29.650
points of our customers.

01:14:29.650 --> 01:14:32.890
And ultimately that's
going to ensure

01:14:32.890 --> 01:14:36.024
that we're delivering the best
platform and the best products.

01:14:36.024 --> 01:14:37.690
MAGNUS HYTTSTEN: And
the feedback so far

01:14:37.690 --> 01:14:39.600
has been fantastic
since we launched

01:14:39.600 --> 01:14:45.650
at Google I/O. It was
really so nice to get

01:14:45.650 --> 01:14:46.630
the initial feedback.

01:14:46.630 --> 01:14:49.560
And it was really
great feedback.

01:14:49.560 --> 01:14:52.580
And it was very well
received I think.

01:14:52.580 --> 01:14:54.250
IAN BARBER: And
there's definitely

01:14:54.250 --> 01:14:56.820
some credit to those partner
companies we worked with.

01:14:56.820 --> 01:14:59.100
So if any of them are
watching, thank you.

01:14:59.100 --> 01:15:01.520
It was really good to be
able to put this stuff out

01:15:01.520 --> 01:15:04.120
there and get feedback and
have people try it, and then

01:15:04.120 --> 01:15:06.370
actually get the confidence
to launch it in production

01:15:06.370 --> 01:15:08.550
and be saying yes, this
stuff is working for us.

01:15:08.550 --> 01:15:10.070
It's making a difference.

01:15:10.070 --> 01:15:12.445
MARTIN OMANDER: And I guess
if some of these integrations

01:15:12.445 --> 01:15:15.350
are no code integrations,
some people have integrated

01:15:15.350 --> 01:15:16.719
since last Wednesday already.

01:15:16.719 --> 01:15:17.594
IAN BARBER: Probably.

01:15:20.490 --> 01:15:22.330
MARTIN OMANDER: All
right, good stuff.

01:15:22.330 --> 01:15:27.510
So it is 4 o'clock here
in the Pacific time zone.

01:15:27.510 --> 01:15:30.510
So this means it's time
for us all to take a break.

01:15:30.510 --> 01:15:32.560
We may need some bio break.

01:15:32.560 --> 01:15:35.140
Also, this is your chance
to take a bio break.

01:15:35.140 --> 01:15:39.010
This is your chance to keep
posting photos of your viewing

01:15:39.010 --> 01:15:43.770
party at #AskFirebaseLive,
or to post

01:15:43.770 --> 01:15:45.640
more questions for our panel.

01:15:45.640 --> 01:15:48.444
And we will be back
in five minutes.

01:15:48.444 --> 01:15:49.110
See you in five.

01:15:52.374 --> 01:16:06.346
[MUSIC PLAYING]

01:23:29.500 --> 01:23:30.990
MARTIN OMANDER:
Hey, welcome back.

01:23:30.990 --> 01:23:31.714
We are back here.

01:23:31.714 --> 01:23:33.380
It took a little more
than five minutes,

01:23:33.380 --> 01:23:35.530
but I've been drinking
a lot of tea today.

01:23:38.510 --> 01:23:39.340
So we're here.

01:23:39.340 --> 01:23:41.000
Everybody's back,
feeling rested.

01:23:41.000 --> 01:23:42.700
Moved around a bit, yeah?

01:23:42.700 --> 01:23:43.300
Good stuff.

01:23:43.300 --> 01:23:45.400
Ready for some more
questions guys?

01:23:45.400 --> 01:23:47.230
Yeah, good stuff.

01:23:47.230 --> 01:23:53.210
So here is a question that
I get every single time

01:23:53.210 --> 01:23:54.700
I speak about Firebase.

01:23:54.700 --> 01:23:57.420
So I'm really glad
it came up and I

01:23:57.420 --> 01:23:59.280
didn't have to put my
name on this question.

01:23:59.280 --> 01:24:01.220
And I actually don't
know the answer.

01:24:01.220 --> 01:24:02.980
And Matt Wilson doesn't either.

01:24:02.980 --> 01:24:05.100
So please let me and Matt know.

01:24:05.100 --> 01:24:07.430
How are synchronization
conflicts

01:24:07.430 --> 01:24:11.420
dealt with in the Realtime
Database, and particularly

01:24:11.420 --> 01:24:13.290
when devices go offline?

01:24:13.290 --> 01:24:14.580
This is tricky, right?

01:24:14.580 --> 01:24:16.405
If you try to write
code yourself for this,

01:24:16.405 --> 01:24:17.030
this is tricky.

01:24:17.030 --> 01:24:18.910
How does Firebase do it?

01:24:18.910 --> 01:24:20.590
JAMES TAMPLIN:
Yeah, it is tricky.

01:24:20.590 --> 01:24:23.430
So Firebase Realtime
Database has

01:24:23.430 --> 01:24:26.900
two main ways of dealing with
synchronization conflicts.

01:24:26.900 --> 01:24:31.070
And there's two ways to write
into the Firebase database.

01:24:31.070 --> 01:24:33.210
One is the last write wins.

01:24:33.210 --> 01:24:37.890
And so this is the set
method or the update method.

01:24:37.890 --> 01:24:40.180
And you can call update
on a complex object

01:24:40.180 --> 01:24:42.785
and it will just update
the individual values

01:24:42.785 --> 01:24:43.950
that have changed.

01:24:43.950 --> 01:24:45.710
And so if you have
multiple clients,

01:24:45.710 --> 01:24:49.740
whoever gets to the server
last, that's the truth.

01:24:49.740 --> 01:24:51.890
The second way of doing
conflict resolution

01:24:51.890 --> 01:24:54.400
is through a transaction.

01:24:54.400 --> 01:24:58.010
And so it's a version of
optimistic concurrency.

01:24:58.010 --> 01:24:59.880
And so what you
have on the client

01:24:59.880 --> 01:25:02.170
is you have a mutator function.

01:25:02.170 --> 01:25:03.990
And so what it
does is it you pass

01:25:03.990 --> 01:25:07.770
into that mutator function
the current state of the data

01:25:07.770 --> 01:25:09.554
and want you want
to transform into.

01:25:09.554 --> 01:25:11.720
And then what it does is
it does the transformation,

01:25:11.720 --> 01:25:15.700
and it sends it up to the
server with a hash of the data

01:25:15.700 --> 01:25:17.230
that it thinks the server has.

01:25:17.230 --> 01:25:20.230
And if the hash is matched,
it commits and tells

01:25:20.230 --> 01:25:22.320
the client like hey, you won.

01:25:22.320 --> 01:25:23.820
This is the true value.

01:25:23.820 --> 01:25:24.920
Congratulations.

01:25:24.920 --> 01:25:28.080
If the hash doesn't match, it
will take the server value.

01:25:28.080 --> 01:25:30.240
It'll send it back
to the client.

01:25:30.240 --> 01:25:33.570
And it'll rerun the mutator
function with that new state

01:25:33.570 --> 01:25:35.200
that it's got from the server.

01:25:35.200 --> 01:25:37.480
And it will keep
trying and keep trying.

01:25:37.480 --> 01:25:40.850
So if you have, say, you're
incrementing a counter

01:25:40.850 --> 01:25:43.810
from one to 10 and there are
two people trying to do it,

01:25:43.810 --> 01:25:46.850
and it says hey,
add one to three.

01:25:46.850 --> 01:25:47.600
It should be four.

01:25:47.600 --> 01:25:51.190
And the server says no, actually
the old value isn't three,

01:25:51.190 --> 01:25:53.850
the new value is four.

01:25:53.850 --> 01:25:56.600
It'll send it back down,
increment, and then keep going.

01:25:56.600 --> 01:26:01.000
So that's kind of
how the two versions

01:26:01.000 --> 01:26:03.400
of writing to the
Firebase database.

01:26:03.400 --> 01:26:07.300
And the mutator
function gives you

01:26:07.300 --> 01:26:09.790
kind of a lot of
flexibility, because you

01:26:09.790 --> 01:26:14.860
can put your own custom logic
in there to handle whatever

01:26:14.860 --> 01:26:17.004
edge cases you may need to.

01:26:17.004 --> 01:26:19.420
MARTIN OMANDER: Oh, so I can
actually have a counter then,

01:26:19.420 --> 01:26:22.280
like number of people logged
in or something like that,

01:26:22.280 --> 01:26:26.510
and it deals with it so
that two people won't try

01:26:26.510 --> 01:26:28.410
to update it at the same time?

01:26:28.410 --> 01:26:29.619
JAMES TAMPLIN: Yep, exactly.

01:26:29.619 --> 01:26:31.910
MARTIN OMANDER: And then so
let's say I'm writing code.

01:26:31.910 --> 01:26:32.480
I'm a developer.

01:26:32.480 --> 01:26:33.590
I'm writing code for this.

01:26:33.590 --> 01:26:36.880
I want to do increase the
number of logged in users.

01:26:36.880 --> 01:26:39.300
I want to increment it by one.

01:26:39.300 --> 01:26:42.570
And if two people were doing
it at the same time, what

01:26:42.570 --> 01:26:44.450
does it look like for
me as a programmer?

01:26:44.450 --> 01:26:47.700
Is there like an
exceptional on my client?

01:26:47.700 --> 01:26:50.440
How do I handle it on
my client side code?

01:26:50.440 --> 01:26:53.460
JAMES TAMPLIN: So you
don't have to do anything.

01:26:53.460 --> 01:26:57.140
It will keep trying
until it succeeds.

01:26:57.140 --> 01:27:00.850
So it'll just automatically run
the function until it commits.

01:27:00.850 --> 01:27:02.200
MARTIN OMANDER: Oh, very nice.

01:27:02.200 --> 01:27:02.700
Very nice.

01:27:02.700 --> 01:27:05.410
All right, I didn't know that.

01:27:05.410 --> 01:27:08.190
Now I know what to answer when
people ask me the question.

01:27:08.190 --> 01:27:10.670
Thank you.

01:27:10.670 --> 01:27:16.100
All right, another question
we had from techwithchance.

01:27:16.100 --> 01:27:18.810
Nice tag, nice handle.

01:27:18.810 --> 01:27:21.160
Would you give us a
couple of examples of how

01:27:21.160 --> 01:27:23.400
one could use Remote Config?

01:27:23.400 --> 01:27:28.660
Yeah, Remote Config
sounds a little abstract.

01:27:28.660 --> 01:27:31.460
Could you give us some
more concrete example?

01:27:33.990 --> 01:27:35.750
MAGNUS HYTTSTEN: One
example is simply

01:27:35.750 --> 01:27:39.100
to store, rather than
having constants in your app

01:27:39.100 --> 01:27:43.630
and coding them into class
or resource files for Android

01:27:43.630 --> 01:27:49.510
or iOS, you can
have those retrieved

01:27:49.510 --> 01:27:52.310
from the app towards
Remote Config

01:27:52.310 --> 01:27:55.140
so you get those
values from the cloud.

01:27:55.140 --> 01:27:58.440
So if you have data that
you may want to change

01:27:58.440 --> 01:28:05.080
or if you want to try different
values of those things--

01:28:05.080 --> 01:28:07.200
for example, user interface,
colors, et cetera,

01:28:07.200 --> 01:28:11.759
et cetera-- all of those things
can be configured in the cloud.

01:28:11.759 --> 01:28:13.300
And you can change
them in the cloud,

01:28:13.300 --> 01:28:16.800
and they will have effect
in the app as well.

01:28:16.800 --> 01:28:19.800
This allows you to try
different areas to tie-in

01:28:19.800 --> 01:28:22.030
with Analytics audiences again.

01:28:22.030 --> 01:28:26.570
This allows you to try different
values for different people.

01:28:26.570 --> 01:28:30.600
So you can see how
the app is being used

01:28:30.600 --> 01:28:32.880
by different sets of people.

01:28:32.880 --> 01:28:36.580
So you can try new things
out in a dynamic fashion--

01:28:36.580 --> 01:28:41.960
this is called A/B testing--
to see the optimum layout

01:28:41.960 --> 01:28:44.190
or solution for
your app in terms

01:28:44.190 --> 01:28:46.530
of these configurable values.

01:28:46.530 --> 01:28:50.200
MARTIN OMANDER: Oh, so I can
say that today my app has

01:28:50.200 --> 01:28:52.150
a red background,
and then I change

01:28:52.150 --> 01:28:53.384
and tomorrow it will be blue.

01:28:53.384 --> 01:28:55.300
And I don't have to
recompile and send it out.

01:28:55.300 --> 01:28:57.675
MAGNUS HYTTSTEN: No, no need
to recompile or redistribute

01:28:57.675 --> 01:28:58.650
in any way.

01:28:58.650 --> 01:29:00.050
MARTIN OMANDER: You're smiling.

01:29:00.050 --> 01:29:03.490
IAN BARBER: It's one
of those-- the thing

01:29:03.490 --> 01:29:07.550
to think about with Remote
Conflict is stuff like that,

01:29:07.550 --> 01:29:09.974
you don't really do.

01:29:09.974 --> 01:29:11.390
You don't really
end up going, I'm

01:29:11.390 --> 01:29:14.360
going to change the
background color of my app.

01:29:14.360 --> 01:29:18.480
You do effectively
control features

01:29:18.480 --> 01:29:21.120
or you override
specific information.

01:29:21.120 --> 01:29:23.080
So there's roughly
the two cases.

01:29:23.080 --> 01:29:24.970
And I'll give you an example.

01:29:24.970 --> 01:29:28.430
You might have a set
of strings in your app

01:29:28.430 --> 01:29:30.420
that are used to
display certain things.

01:29:30.420 --> 01:29:32.540
You might have like
a welcome message.

01:29:32.540 --> 01:29:35.000
And you might want
to A/B test, does

01:29:35.000 --> 01:29:37.170
changing the welcome
message make sense?

01:29:37.170 --> 01:29:38.830
So you would have
a welcome message

01:29:38.830 --> 01:29:40.467
as a default in your
app, and then you

01:29:40.467 --> 01:29:42.050
can run, exactly as
Magnus was saying,

01:29:42.050 --> 01:29:43.995
an A/B test where
you say, give some

01:29:43.995 --> 01:29:45.580
of the user's that
welcome message,

01:29:45.580 --> 01:29:47.860
give other uses this
welcome message.

01:29:47.860 --> 01:29:50.450
So that allows you to
just override a parameter

01:29:50.450 --> 01:29:52.400
that you've got in your app.

01:29:52.400 --> 01:29:54.149
The other kind of
use is really about--

01:29:54.149 --> 01:29:55.940
MARTIN OMANDER: Sorry
for interrupting you,

01:29:55.940 --> 01:29:58.390
and I just want to make
sure I understand here.

01:29:58.390 --> 01:30:03.020
So I could say, have half my
audiences see happy holidays

01:30:03.020 --> 01:30:04.970
and half of them
see merry Christmas.

01:30:04.970 --> 01:30:09.970
And then I could actually
get analytics broken down

01:30:09.970 --> 01:30:12.225
by those audiences and
see which one works best?

01:30:12.225 --> 01:30:13.850
IAN BARBER: So you
would use Analytics.

01:30:13.850 --> 01:30:15.470
You would use a
property to do that.

01:30:15.470 --> 01:30:19.000
So the way we kind of suggest
is you'd say, yeah, holiday

01:30:19.000 --> 01:30:21.300
greeting, a user property.

01:30:21.300 --> 01:30:25.270
And then base on what the
value was from Config,

01:30:25.270 --> 01:30:27.560
you would set the value
of that user property.

01:30:27.560 --> 01:30:30.670
So you might say cohort
A, cohort B, and so on.

01:30:30.670 --> 01:30:32.630
Then you could go
into Analytics.

01:30:32.630 --> 01:30:34.590
You could filter against
that user property.

01:30:34.590 --> 01:30:36.089
And you could see,
oh yeah, I've got

01:30:36.089 --> 01:30:38.030
a higher uplift in
retention for users

01:30:38.030 --> 01:30:39.980
that got this than got that.

01:30:39.980 --> 01:30:43.270
And you can have
multiple variables.

01:30:43.270 --> 01:30:46.030
You don't have to have
just one A/B group.

01:30:46.030 --> 01:30:48.220
You can have as many
groups as you need.

01:30:48.220 --> 01:30:50.240
And you don't have to
just have one thing.

01:30:50.240 --> 01:30:52.490
If you're testing a
collection of changes,

01:30:52.490 --> 01:30:54.800
you can go and put those out.

01:30:54.800 --> 01:30:57.920
I think that usage
also flips into kind

01:30:57.920 --> 01:31:00.540
of the main thing people
are using Remote Config for,

01:31:00.540 --> 01:31:02.320
which is control of features.

01:31:02.320 --> 01:31:06.870
So you are in a situation where
maybe you've added something

01:31:06.870 --> 01:31:09.250
to your app, like
maybe you've got a game

01:31:09.250 --> 01:31:12.240
and you've added a real time
multiplayer feature that

01:31:12.240 --> 01:31:15.755
is very intensive
on your backend--

01:31:15.755 --> 01:31:17.630
you're doing a lot of
processing or something

01:31:17.630 --> 01:31:21.750
like that-- that is
not an easy feature.

01:31:21.750 --> 01:31:23.570
You think you're
good, but you don't

01:31:23.570 --> 01:31:26.340
want to just turn this
on and then suddenly see

01:31:26.340 --> 01:31:27.740
all your stuff fall over.

01:31:27.740 --> 01:31:29.420
So you could
control that feature

01:31:29.420 --> 01:31:31.830
with a variable, which
defaults to false.

01:31:31.830 --> 01:31:33.610
And it's configured
in Remote Config.

01:31:33.610 --> 01:31:34.940
Then you could ramp it.

01:31:34.940 --> 01:31:39.630
So you say OK, 2% of users
have this, 5%, 50%, whatever.

01:31:39.630 --> 01:31:41.320
And you can also turn it off.

01:31:41.320 --> 01:31:43.690
So if like, oh
your game suddenly

01:31:43.690 --> 01:31:46.850
gets featured in something and
is getting absolutely hammered,

01:31:46.850 --> 01:31:50.440
and that is just causing
a very bad experience,

01:31:50.440 --> 01:31:52.110
you can just disable that.

01:31:52.110 --> 01:31:55.320
And maybe you can even then send
a notification to those people

01:31:55.320 --> 01:31:57.710
from the Notification
Console saying hey,

01:31:57.710 --> 01:31:59.400
the multiplayer
will come back soon.

01:31:59.400 --> 01:32:01.970
So at least they
understand what's going on.

01:32:01.970 --> 01:32:03.355
So those are really
the two areas

01:32:03.355 --> 01:32:06.116
that people use
remote config for.

01:32:06.116 --> 01:32:08.550
MARTIN OMANDER: So
this sounds like stuff

01:32:08.550 --> 01:32:10.640
that people have been
doing on the web.

01:32:10.640 --> 01:32:12.320
And I've heard
developers say this,

01:32:12.320 --> 01:32:13.861
they've been doing
this sort of thing

01:32:13.861 --> 01:32:18.520
on the web for some years,
but what they've found it,

01:32:18.520 --> 01:32:22.460
until now I guess, very hard to
do it in the mobile app world.

01:32:22.460 --> 01:32:25.140
But now they can and test
which picture converts

01:32:25.140 --> 01:32:28.180
the best, which message.

01:32:28.180 --> 01:32:32.930
Should I try-- it's
free shipping, $50,

01:32:32.930 --> 01:32:34.610
if the order's $50 or more.

01:32:34.610 --> 01:32:38.460
No, I changed my
mind, $40 instead.

01:32:38.460 --> 01:32:39.845
Pretty cool stuff.

01:32:39.845 --> 01:32:42.220
MAGNUS HYTTSTEN: And you can
have default values as well.

01:32:42.220 --> 01:32:45.540
So in case you have
a network disruption,

01:32:45.540 --> 01:32:48.840
you can't connect to the
cloud, Remote Config API,

01:32:48.840 --> 01:32:51.330
the client side API can
return default values.

01:32:51.330 --> 01:32:54.110
So you can ensure that the
app is working at all times.

01:32:54.110 --> 01:32:55.840
IAN BARBER: Yeah,
and realistically,

01:32:55.840 --> 01:32:57.256
if you're looking
at implementing,

01:32:57.256 --> 01:32:59.440
implement it with defaults.

01:32:59.440 --> 01:33:02.150
So it can be tempting to
think of Remote Config

01:33:02.150 --> 01:33:05.020
as like oh, I'll go in and
put every single variable

01:33:05.020 --> 01:33:06.710
into the console.

01:33:06.710 --> 01:33:09.110
But what you probably want is
to actually launch your app

01:33:09.110 --> 01:33:11.150
with nothing in the console.

01:33:11.150 --> 01:33:14.380
You have everything at launch
time is in the defaults.

01:33:14.380 --> 01:33:17.070
And only when you want to
override one of those variables

01:33:17.070 --> 01:33:19.230
for all or some subset
of your audience

01:33:19.230 --> 01:33:22.590
do you actually go and set up
an entry in the console for it.

01:33:22.590 --> 01:33:25.960
So it's slightly different
than you might expect.

01:33:25.960 --> 01:33:28.300
If you do have a situation
where you're like oh,

01:33:28.300 --> 01:33:31.030
but I actually want all this
data only to live in the cloud,

01:33:31.030 --> 01:33:33.420
you probably want
to use the database,

01:33:33.420 --> 01:33:34.940
because the information's there.

01:33:34.940 --> 01:33:37.640
It's going to be
synced to real time.

01:33:37.640 --> 01:33:39.180
That's probably
the right choice.

01:33:39.180 --> 01:33:40.710
If you're looking
to do overrides,

01:33:40.710 --> 01:33:43.120
Remote Conflict gives you
that flexibility there.

01:33:43.120 --> 01:33:44.578
MARTIN OMANDER:
Are there concerns,

01:33:44.578 --> 01:33:51.620
or should I think about
performance with Remote Config?

01:33:51.620 --> 01:33:54.600
It's OK to put it in some places
in my app but not in others,

01:33:54.600 --> 01:33:55.100
say, or?

01:33:55.100 --> 01:33:56.558
IAN BARBER: I mean,
Remote Config's

01:33:56.558 --> 01:33:58.730
actually pretty much always
going to run locally.

01:33:58.730 --> 01:34:01.889
So there's a local
cache on the device

01:34:01.889 --> 01:34:03.430
is where the values
will be run from.

01:34:03.430 --> 01:34:04.971
It's going to go
into an asynchronous

01:34:04.971 --> 01:34:07.600
fetch for that data.

01:34:07.600 --> 01:34:11.345
So you're never going to be
stuck waiting for this thing

01:34:11.345 --> 01:34:14.360
to happen, other than from
that very initial file read

01:34:14.360 --> 01:34:15.571
of local device.

01:34:15.571 --> 01:34:16.820
MARTIN OMANDER: Oh really, OK.

01:34:16.820 --> 01:34:18.278
JAMES TAMPLIN: And
it uses Firebase

01:34:18.278 --> 01:34:20.530
cloud messaging to actually
do the transport, which

01:34:20.530 --> 01:34:24.770
has been optimized for battery
efficiency and reliability.

01:34:24.770 --> 01:34:26.440
MARTIN OMANDER: Oh nice, nice.

01:34:26.440 --> 01:34:28.130
IAN BARBER: That's a good point.

01:34:28.130 --> 01:34:29.330
MARTIN OMANDER: Good stuff.

01:34:29.330 --> 01:34:32.420
All right, next we
have Allen Firstenberg

01:34:32.420 --> 01:34:37.210
from New York who is asking,
can Firebase notifications

01:34:37.210 --> 01:34:40.910
be sent via an API or
just via the console?

01:34:40.910 --> 01:34:45.120
We talked about the console
before and how easy it was.

01:34:45.120 --> 01:34:49.062
And also is there an API
for most console operations?

01:34:49.062 --> 01:34:51.520
IAN BARBER: I'm sure Allen
asked me this question in person

01:34:51.520 --> 01:34:52.020
as well.

01:34:52.020 --> 01:34:52.874
[LAUGHTER]

01:34:52.874 --> 01:34:54.620
MARTIN OMANDER: Has
the answer changed?

01:34:54.620 --> 01:34:56.130
IAN BARBER: No it doesn't.

01:34:56.130 --> 01:34:59.490
So Firebase
notifications is really

01:34:59.490 --> 01:35:04.130
what we're thinking is for
the UI and the console,

01:35:04.130 --> 01:35:07.380
so the ability to go in and
schedule messages and send

01:35:07.380 --> 01:35:07.880
them.

01:35:07.880 --> 01:35:10.690
The Firebase Cloud
Messaging has an API.

01:35:10.690 --> 01:35:12.250
So you can do those things.

01:35:12.250 --> 01:35:14.250
You can go in and send messages.

01:35:14.250 --> 01:35:16.270
You can send to topics.

01:35:16.270 --> 01:35:19.610
You can do that, that same
functionality via an API.

01:35:19.610 --> 01:35:23.720
But in our sort of minds, that's
part of the Firebase Cloud

01:35:23.720 --> 01:35:25.720
Messaging thing.

01:35:25.720 --> 01:35:28.820
In terms of the APIs, it
depends with the product.

01:35:28.820 --> 01:35:34.480
Like obviously Database has
a very complete RESTful API.

01:35:34.480 --> 01:35:36.440
And you can use that.

01:35:36.440 --> 01:35:37.890
Not everything
does at the moment.

01:35:37.890 --> 01:35:39.640
And it's something
that we're looking at

01:35:39.640 --> 01:35:41.440
based on where people
are going and where

01:35:41.440 --> 01:35:43.860
the demand is for each product.

01:35:43.860 --> 01:35:45.970
MARTIN OMANDER: So with
the Cloud Messaging,

01:35:45.970 --> 01:35:51.050
would most developers
use the console

01:35:51.050 --> 01:35:52.810
to enter their messages there?

01:35:52.810 --> 01:35:55.790
Would most write an app
or local code for it?

01:35:55.790 --> 01:35:56.540
What do you think?

01:35:56.540 --> 01:35:59.040
MAGNUS HYTTSTEN: It all depends
on-- I mean, if you actually

01:35:59.040 --> 01:36:03.250
have a message and know that
a human will decide and write

01:36:03.250 --> 01:36:06.390
this message, then the
console makes a lot of sense

01:36:06.390 --> 01:36:08.960
because you can go in
as a human and do that.

01:36:08.960 --> 01:36:11.912
Let's say you have data
in a backend database

01:36:11.912 --> 01:36:15.100
and that backend data drives
whether a message should

01:36:15.100 --> 01:36:16.290
be sent or not.

01:36:16.290 --> 01:36:17.882
That's more an
automated process.

01:36:17.882 --> 01:36:19.590
And in that case, it
makes a lot of sense

01:36:19.590 --> 01:36:22.250
to program that
using FCM instead.

01:36:22.250 --> 01:36:25.230
MARTIN OMANDER: Oh right, like
your account is about to expire

01:36:25.230 --> 01:36:26.250
or something like that.

01:36:26.250 --> 01:36:27.420
MAGNUS HYTTSTEN:
Correct, exactly.

01:36:27.420 --> 01:36:28.836
MARTIN OMANDER:
Yeah then you need

01:36:28.836 --> 01:36:32.600
to send it very surgically
to one person at a time.

01:36:32.600 --> 01:36:36.040
IAN BARBER: I think the
FCM team referred to

01:36:36.040 --> 01:36:38.950
as like transactional
notifications, which

01:36:38.950 --> 01:36:41.270
a thing has happened,
so do this thing,

01:36:41.270 --> 01:36:43.737
versus an engagement
notification, which

01:36:43.737 --> 01:36:45.820
is like hey, do you want
to know about this thing?

01:36:45.820 --> 01:36:49.204
So you might want to send
out manually a message

01:36:49.204 --> 01:36:50.870
to tell people oh,
there's a new sticker

01:36:50.870 --> 01:36:52.450
pack available in your app.

01:36:52.450 --> 01:36:55.420
That's reasonable, and you
want to choose when to do that,

01:36:55.420 --> 01:36:57.870
because you're doing
it about the audience.

01:36:57.870 --> 01:37:00.732
Everyone in this country gets a
sticker pack at the same time.

01:37:00.732 --> 01:37:02.190
I want to send it
at a time they're

01:37:02.190 --> 01:37:04.660
awake and using their phones.

01:37:04.660 --> 01:37:06.594
But the transactional
notification,

01:37:06.594 --> 01:37:09.010
I might want to send it right
away if it's like oh, you've

01:37:09.010 --> 01:37:10.456
received a new message.

01:37:10.456 --> 01:37:11.580
I can send that right away.

01:37:11.580 --> 01:37:14.094
So for those kind of things,
you'll have to use the API.

01:37:14.094 --> 01:37:16.510
JAMES TAMPLIN: And really the
split between Firebase Cloud

01:37:16.510 --> 01:37:18.320
Messaging and
Firebase Notifications

01:37:18.320 --> 01:37:22.125
is, as Ian described,
transactional verses marketing

01:37:22.125 --> 01:37:24.310
or campaigns.

01:37:24.310 --> 01:37:26.710
We really thought
about in terms of,

01:37:26.710 --> 01:37:29.080
who is the persona
within your organization?

01:37:29.080 --> 01:37:30.280
Who will be sending these?

01:37:30.280 --> 01:37:32.510
And typically a developer
would be wiring up

01:37:32.510 --> 01:37:34.560
transactional push
notifications, which

01:37:34.560 --> 01:37:37.300
will be done through an API.

01:37:37.300 --> 01:37:40.605
And your marketing or
your growth hackers

01:37:40.605 --> 01:37:43.570
or whoever you have who
are saying hey, this user's

01:37:43.570 --> 01:37:45.080
about to churn.

01:37:45.080 --> 01:37:46.250
Haven't seen him in 30 days.

01:37:46.250 --> 01:37:50.590
Let's send a notification
to that audience.

01:37:50.590 --> 01:37:53.070
And that will really be
done through the console.

01:37:53.070 --> 01:37:55.050
MARTIN OMANDER: Oh I
see, different personas.

01:37:55.050 --> 01:37:57.810
Yep, that's a good way
of thinking about it.

01:37:57.810 --> 01:37:59.840
All right, good stuff.

01:37:59.840 --> 01:38:03.330
Our next question is from
Josh Wilson, who is asking,

01:38:03.330 --> 01:38:07.780
how long did you guys spend
putting together the Firebase

01:38:07.780 --> 01:38:08.640
puzzle?

01:38:08.640 --> 01:38:10.100
That was a lot of fun.

01:38:10.100 --> 01:38:12.080
I have actually heard
many developers tell me

01:38:12.080 --> 01:38:14.680
that this was a lot
of-- not very easy,

01:38:14.680 --> 01:38:17.280
but a lot of fun,
this Firebase puzzle.

01:38:17.280 --> 01:38:24.240
[LAUGHTER]

01:38:24.240 --> 01:38:26.001
Everyone's looking at you guys.

01:38:26.001 --> 01:38:28.890
JAMES TAMPLIN: I
will take that one.

01:38:28.890 --> 01:38:31.050
It took us a while.

01:38:31.050 --> 01:38:37.120
We did have some help
from outside of Google.

01:38:37.120 --> 01:38:39.270
We knew it was something
we wanted to do.

01:38:39.270 --> 01:38:41.190
But as you can
imagine, it was a bit

01:38:41.190 --> 01:38:42.855
of a crunch coming up to I/O.

01:38:42.855 --> 01:38:44.290
MARTIN OMANDER: To I/O, yes.

01:38:44.290 --> 01:38:46.373
JAMES TAMPLIN: So that was
there as many of us who

01:38:46.373 --> 01:38:49.410
sat down and tested it and
gave feedback and guidance

01:38:49.410 --> 01:38:52.260
and really helped tweak.

01:38:52.260 --> 01:38:53.910
And if you don't
know what this is,

01:38:53.910 --> 01:38:56.490
you should go to firebase.foo.

01:38:56.490 --> 01:38:59.840
So what we have, for those
of you who don't know,

01:38:59.840 --> 01:39:03.560
there's a rogue
fish on the loose.

01:39:03.560 --> 01:39:08.820
And it's disrupting one of
the Firebase developer's apps.

01:39:08.820 --> 01:39:11.950
And so if you catch the
fish through solving

01:39:11.950 --> 01:39:17.800
a series of puzzles, you get a
free ticket to Google I/O 2017.

01:39:17.800 --> 01:39:20.870
So that's a pretty big--
those are like gold dust.

01:39:20.870 --> 01:39:22.420
So there's a hundred of them.

01:39:22.420 --> 01:39:27.770
I think people yesterday
started solving it.

01:39:27.770 --> 01:39:31.920
But I still think there's a
lot of I/O 2017 tickets left.

01:39:31.920 --> 01:39:35.720
So go to firebase.foo and
see if you can solve it.

01:39:35.720 --> 01:39:38.330
MARTIN OMANDER: All right,
good stuff, good stuff.

01:39:38.330 --> 01:39:41.190
Yeah, a developer I had
lunch with just the other day

01:39:41.190 --> 01:39:43.610
said, that damn puzzle.

01:39:43.610 --> 01:39:47.950
One more day I didn't get any
work done one my regular job.

01:39:47.950 --> 01:39:49.247
But it was so much fun.

01:39:49.247 --> 01:39:51.080
JAMES TAMPLIN: There's
a lot of that threads

01:39:51.080 --> 01:39:52.660
on Reddit about it.

01:39:52.660 --> 01:39:54.666
It's been really cool
to see the reaction.

01:39:54.666 --> 01:39:55.540
MARTIN OMANDER: Cool.

01:39:55.540 --> 01:39:59.350
So again James, sorry,
the URL was Firebase--

01:39:59.350 --> 01:40:00.690
JAMES TAMPLIN: Firebase.foo.

01:40:00.690 --> 01:40:01.898
MARTIN OMANDER: Firebase.foo.

01:40:01.898 --> 01:40:02.790
JAMES TAMPLIN: F-O-O.

01:40:02.790 --> 01:40:04.690
MARTIN OMANDER:
OK, firebase.foo.

01:40:04.690 --> 01:40:07.650
Still tickets and
prizes out there.

01:40:07.650 --> 01:40:09.720
Cool.

01:40:09.720 --> 01:40:14.430
All right, this is
an interesting one.

01:40:14.430 --> 01:40:17.710
All my data-- question
from social media--

01:40:17.710 --> 01:40:19.930
all my data must be
stored, hosted in

01:40:19.930 --> 01:40:24.030
my country, which is not the US.

01:40:24.030 --> 01:40:26.560
We hear a lot about this
from European developers.

01:40:26.560 --> 01:40:28.390
Therefore I cannot use Firebase.

01:40:28.390 --> 01:40:31.270
Is there any way to
solve this problem?

01:40:31.270 --> 01:40:34.720
JAMES TAMPLIN: So the Firebase
Realtime Database and Firebase

01:40:34.720 --> 01:40:38.430
Storage currently are--
and Firebase Hosting

01:40:38.430 --> 01:40:44.020
as well-- the servers,
ultimately where the data is

01:40:44.020 --> 01:40:47.470
located is in the United
States, as the person asking

01:40:47.470 --> 01:40:50.240
the question points out.

01:40:50.240 --> 01:40:53.830
This is something we
are working quickly on.

01:40:53.830 --> 01:40:59.909
So hang tight, and we will
have an answer to this.

01:40:59.909 --> 01:41:00.950
MARTIN OMANDER: Oh, cool.

01:41:00.950 --> 01:41:03.310
Sounds like we may
have to have you guys

01:41:03.310 --> 01:41:06.710
and we'll pick this
question up again.

01:41:06.710 --> 01:41:10.540
All right, we have another
social media question.

01:41:10.540 --> 01:41:18.150
JWAM, J-W-A-M is asking, what is
a sane strategy when deploying

01:41:18.150 --> 01:41:23.520
a new app version requiring new
random Firebase data formats,

01:41:23.520 --> 01:41:26.390
but evidently having
multiple app versions active

01:41:26.390 --> 01:41:27.210
in the wild?

01:41:27.210 --> 01:41:29.800
Right, so I've seen
this with my game also.

01:41:29.800 --> 01:41:31.230
It's only a little
hobby project,

01:41:31.230 --> 01:41:33.320
but I'm deploying a new
version of the game.

01:41:33.320 --> 01:41:36.630
And all of a sudden
I have my score

01:41:36.630 --> 01:41:40.220
is in a different place
in the object hierarchy,

01:41:40.220 --> 01:41:43.960
or my score is now called
something different.

01:41:43.960 --> 01:41:47.880
And now I have multiple
versions of the app.

01:41:47.880 --> 01:41:50.670
Some assume the
sort of old schema,

01:41:50.670 --> 01:41:52.560
some assume the new schema.

01:41:52.560 --> 01:41:55.930
How do you deal with that?

01:41:55.930 --> 01:42:00.080
IAN BARBER: So there's a lot of
different techniques depended

01:42:00.080 --> 01:42:02.240
on the exact problem.

01:42:02.240 --> 01:42:04.460
One of the actual
changes I think

01:42:04.460 --> 01:42:07.120
we made in this SDK release
was for the database

01:42:07.120 --> 01:42:11.010
for example, if you're doing
the marshaling into objects,

01:42:11.010 --> 01:42:13.710
we actually will ignore
extra parameters by default.

01:42:13.710 --> 01:42:16.254
So if you add a
parameter, that is safe.

01:42:16.254 --> 01:42:17.420
That's a configurable thing.

01:42:17.420 --> 01:42:21.130
You can go and change it with
an annotation on the class.

01:42:21.130 --> 01:42:25.280
But that will then
be a safe addition.

01:42:25.280 --> 01:42:29.710
The real answer is to define
that strategy kind of up front.

01:42:29.710 --> 01:42:31.350
You have to choose,
how am I going

01:42:31.350 --> 01:42:33.690
to deal with changes
to this data structure?

01:42:33.690 --> 01:42:36.275
Because some of the stuff,
if you remove a field which

01:42:36.275 --> 01:42:38.820
a version of the
app is depending on,

01:42:38.820 --> 01:42:43.170
that's very difficult.
There's very few ways

01:42:43.170 --> 01:42:46.380
you can deal with that if
you haven't kind of allowed

01:42:46.380 --> 01:42:48.160
for the possibility
ahead of time.

01:42:48.160 --> 01:42:51.080
So some of the things you
can do are, try and add

01:42:51.080 --> 01:42:53.460
fields instead of anything else.

01:42:53.460 --> 01:42:57.080
Try and tag your data
structures with versions

01:42:57.080 --> 01:42:58.874
if you think they
are likely to turn.

01:42:58.874 --> 01:43:00.540
And then you can
actually check for that

01:43:00.540 --> 01:43:03.810
and maybe choose to, oh, this
is a newer data structure.

01:43:03.810 --> 01:43:06.980
Just say hey, sorry, please
go and get the new version

01:43:06.980 --> 01:43:10.330
of the app if that's something
where you just can't handle it,

01:43:10.330 --> 01:43:11.730
your app's too old.

01:43:11.730 --> 01:43:15.050
Again, you can take advantage
of these other tools

01:43:15.050 --> 01:43:16.560
that we've got in Firebase.

01:43:16.560 --> 01:43:19.740
So you can go and send
a notification to users

01:43:19.740 --> 01:43:22.650
on the older version, try
and prompt them to upgrade,

01:43:22.650 --> 01:43:24.642
maybe offer them some
kind of an incentive.

01:43:24.642 --> 01:43:26.850
You can offer them some
in-game currency or something

01:43:26.850 --> 01:43:27.350
like that.

01:43:27.350 --> 01:43:29.370
Hey, get the latest version.

01:43:29.370 --> 01:43:31.930
And you can use Remote
Config to disable features.

01:43:31.930 --> 01:43:34.790
So one of the things
I would really

01:43:34.790 --> 01:43:39.680
suggest doing with Remote Config
is for big blocks of feature,

01:43:39.680 --> 01:43:42.180
see if you can put it in
Remote Config in a way

01:43:42.180 --> 01:43:43.840
that you can turn it off.

01:43:43.840 --> 01:43:46.020
Because that then gives
you the flexibility of oh,

01:43:46.020 --> 01:43:47.880
I'm now three versions later.

01:43:47.880 --> 01:43:51.830
I want to do an upgrade here
actually on this old version.

01:43:51.830 --> 01:43:53.570
There's just no
way to support it.

01:43:53.570 --> 01:43:57.020
I can actually feature flag
that off for that version,

01:43:57.020 --> 01:44:00.241
and I know the users
are going-- yeah,

01:44:00.241 --> 01:44:01.490
they won't see anything there.

01:44:01.490 --> 01:44:03.980
They'll see that
feature isn't available,

01:44:03.980 --> 01:44:05.800
and hopefully come
through and upgrade.

01:44:05.800 --> 01:44:07.341
But they're not
going to get crashes.

01:44:07.341 --> 01:44:11.200
I'm not going to get people
having a really bad experience

01:44:11.200 --> 01:44:12.795
with inconsistent data.

01:44:12.795 --> 01:44:13.920
Do either of you have any--

01:44:13.920 --> 01:44:15.253
JAMES TAMPLIN: No, that's great.

01:44:15.253 --> 01:44:21.150
I think schema migration,
it's a problem--

01:44:21.150 --> 01:44:24.000
an issue that you have
with many, many databases,

01:44:24.000 --> 01:44:25.195
for all databases.

01:44:25.195 --> 01:44:26.070
IAN BARBER: All data.

01:44:26.070 --> 01:44:28.640
JAMES TAMPLIN: I think
there's a lot of literature

01:44:28.640 --> 01:44:32.310
out there on how you do to
schema migrations as well.

01:44:32.310 --> 01:44:34.240
MARTIN OMANDER: Right, right.

01:44:34.240 --> 01:44:36.430
All right, good stuff.

01:44:36.430 --> 01:44:39.850
Our next question is
from Aawaz Gyavali.

01:44:39.850 --> 01:44:43.110
Sorry if I didn't get
the pronunciation right.

01:44:43.110 --> 01:44:47.010
What is the difference in core
library and analytics library

01:44:47.010 --> 01:44:48.814
in Android?

01:44:48.814 --> 01:44:49.730
IAN BARBER: Not a lot.

01:44:52.830 --> 01:44:57.270
The core library is actually
almost a virtual target.

01:44:57.270 --> 01:45:01.157
So it depends on the
analytics library.

01:45:01.157 --> 01:45:03.490
Also there's kind of a lot
of dependencies that come in.

01:45:03.490 --> 01:45:07.510
Like there's the Firebase
common and Play Services base

01:45:07.510 --> 01:45:12.600
just some other utility library
that you don't use directly

01:45:12.600 --> 01:45:13.790
in your application code.

01:45:13.790 --> 01:45:18.410
So at the moment core and
analytics are the same thing.

01:45:18.410 --> 01:45:22.950
We wanted core because
as we move forward,

01:45:22.950 --> 01:45:25.590
we want to be able to have
a place that you can know

01:45:25.590 --> 01:45:27.870
is reliably going to give
you the core experience

01:45:27.870 --> 01:45:31.570
of Firebase, which is at its
heart right now, analytics.

01:45:31.570 --> 01:45:34.460
But it is kind of confusing
for people who are looking

01:45:34.460 --> 01:45:36.414
for an analytics dependency.

01:45:36.414 --> 01:45:37.830
So all of the
actual code for that

01:45:37.830 --> 01:45:39.322
lives in the
Analytics [INAUDIBLE].

01:45:39.322 --> 01:45:41.030
So it doesn't add any
weight to your app.

01:45:41.030 --> 01:45:42.720
You can choose
either one of them.

01:45:42.720 --> 01:45:45.446
We recommend core so
that it's kind of you

01:45:45.446 --> 01:45:49.320
know you're getting the
base Firebase experience.

01:45:49.320 --> 01:45:50.450
And the same's true in iOS.

01:45:50.450 --> 01:45:51.908
If you go and look
at that, there's

01:45:51.908 --> 01:45:55.784
a subspec Firebase core, which
depends on Firebase analytics.

01:45:55.784 --> 01:45:56.950
MARTIN OMANDER: So use core.

01:45:56.950 --> 01:45:57.630
IAN BARBER: Use core.

01:45:57.630 --> 01:45:58.010
MARTIN OMANDER: Use core.

01:45:58.010 --> 01:45:59.010
IAN BARBER: That's
what we'll go with.

01:45:59.010 --> 01:46:00.330
MARTIN OMANDER: All right.

01:46:00.330 --> 01:46:02.630
Good stuff.

01:46:02.630 --> 01:46:05.715
We'll go with that.

01:46:05.715 --> 01:46:11.300
The next question is from Thiago
Junior Alves who's asking,

01:46:11.300 --> 01:46:14.670
are the defaults for Remote
Config updated from the server

01:46:14.670 --> 01:46:18.275
when the app is offline, or does
it revert back to the defaults?

01:46:21.930 --> 01:46:25.230
IAN BARBER: So it
updates locally a cache.

01:46:25.230 --> 01:46:29.530
So the app ships with defaults.

01:46:29.530 --> 01:46:32.270
And then when it fetches
new ones from the server,

01:46:32.270 --> 01:46:35.290
those are going to live
there until they expire.

01:46:35.290 --> 01:46:37.390
So when you can do a
fetch, you can actually

01:46:37.390 --> 01:46:38.420
give it an expiry time.

01:46:38.420 --> 01:46:41.207
And once it expires, if there's
no new ones from the server,

01:46:41.207 --> 01:46:42.540
it will go back to the defaults.

01:46:42.540 --> 01:46:46.050
So it's kind of largely
in your control how

01:46:46.050 --> 01:46:49.670
you deal with the
state of where you've

01:46:49.670 --> 01:46:51.039
got Config data that's old.

01:46:51.039 --> 01:46:52.580
For some things you
might want to go,

01:46:52.580 --> 01:46:56.050
really, this should be a long
lived bit of configuration.

01:46:56.050 --> 01:46:59.325
For other things you go
hey, if I haven't fetched

01:46:59.325 --> 01:47:01.782
and updated value in a while,
just revert to the default.

01:47:01.782 --> 01:47:04.240
MARTIN OMANDER: Oh, so you can
set the expiration yourself.

01:47:04.240 --> 01:47:04.710
IAN BARBER: You can set
the expiration, yeah.

01:47:04.710 --> 01:47:06.195
MARTIN OMANDER: Oh, that's nice.

01:47:06.195 --> 01:47:10.190
All right, good stuff.

01:47:10.190 --> 01:47:17.890
All right, Dren is asking,
is the new Firebase

01:47:17.890 --> 01:47:21.450
console not allow project name--
oh, doesn't the new Firebase

01:47:21.450 --> 01:47:24.520
console allow project names
shorter than four characters

01:47:24.520 --> 01:47:27.540
and not allow to
customize a prefix domain

01:47:27.540 --> 01:47:28.980
name like abcd.firebaseapp.com.

01:47:31.745 --> 01:47:33.370
IAN BARBER: I believe
this was directly

01:47:33.370 --> 01:47:37.082
implemented to prevent me from
having ian.firebaseapp.com.

01:47:37.082 --> 01:47:38.510
JAMES TAMPLIN: I'm sorry Ian.

01:47:38.510 --> 01:47:40.450
I apologize.

01:47:40.450 --> 01:47:43.730
No, that is one of the
constraints we have.

01:47:43.730 --> 01:47:47.670
And yes, the project
you choose assumes

01:47:47.670 --> 01:47:49.680
or parlays into the
subdomain that you

01:47:49.680 --> 01:47:53.040
have for Firebase hosting.

01:47:53.040 --> 01:47:55.870
So that's the
short answer there.

01:47:55.870 --> 01:47:57.580
There are some reserve prefixes.

01:47:57.580 --> 01:47:59.630
For example, you
can't have something

01:47:59.630 --> 01:48:02.505
that begins with Firebase.

01:48:02.505 --> 01:48:04.130
There are also some
illegal characters.

01:48:06.870 --> 01:48:12.200
I won't name them all now
because I can't remember them.

01:48:12.200 --> 01:48:16.060
I think like the dollar sign
and the period or full stop

01:48:16.060 --> 01:48:19.740
if you're in a non-US country.

01:48:19.740 --> 01:48:22.840
MARTIN OMANDER: I run into most
of those when bugs in my code

01:48:22.840 --> 01:48:25.600
try to create-- or
keys with those.

01:48:25.600 --> 01:48:29.424
And yeah, it's not happy there.

01:48:29.424 --> 01:48:30.330
All right.

01:48:30.330 --> 01:48:32.870
Oh, so here's a question
that I actually have.

01:48:32.870 --> 01:48:35.400
Well, to be honest,
I didn't realize

01:48:35.400 --> 01:48:37.580
I had this question
until I read it on here.

01:48:37.580 --> 01:48:41.210
I realize that
like [INAUDIBLE], I

01:48:41.210 --> 01:48:46.420
am not separating my
production Analytics

01:48:46.420 --> 01:48:50.470
data from my sort of QA builds
and my developer versions

01:48:50.470 --> 01:48:53.810
and my various other
sort of in-house builds.

01:48:53.810 --> 01:48:58.210
So in my Analytics, all data
from all the test versions,

01:48:58.210 --> 01:49:01.340
the production, everything feeds
into that one place, which I

01:49:01.340 --> 01:49:03.200
now realize is not very smart.

01:49:03.200 --> 01:49:09.000
And so [INAUDIBLE] is asking
how to separate the QA builds,

01:49:09.000 --> 01:49:12.440
the Analytics data
coming from QA builds.

01:49:12.440 --> 01:49:14.170
MAGNUS HYTTSTEN:
Different projects.

01:49:14.170 --> 01:49:15.410
IAN BARBER: Yeah, I
mean that's one option.

01:49:15.410 --> 01:49:16.330
That's legitimate.

01:49:16.330 --> 01:49:19.580
You can create another
project and just associate

01:49:19.580 --> 01:49:21.530
that with your QA options.

01:49:21.530 --> 01:49:23.500
You can do it in one though.

01:49:23.500 --> 01:49:27.550
If you want, the way
to differentiate stuff

01:49:27.550 --> 01:49:30.080
in Analytics is with
a user property.

01:49:30.080 --> 01:49:33.420
And so you could have
a mode user property

01:49:33.420 --> 01:49:34.400
and set it to a value.

01:49:34.400 --> 01:49:37.640
But you're limited to
only 25 user properties.

01:49:37.640 --> 01:49:39.350
But version is one
of these properties

01:49:39.350 --> 01:49:40.910
you get magically for free.

01:49:40.910 --> 01:49:44.440
So if you can-- what I've
kind of seen people do is have

01:49:44.440 --> 01:49:49.030
version x.x-dev, x.x-QA.

01:49:49.030 --> 01:49:51.480
And then you can start
filtering on that.

01:49:51.480 --> 01:49:52.820
MARTIN OMANDER: Good stuff.

01:49:52.820 --> 01:49:55.650
And as a follow up
to that, when I'm

01:49:55.650 --> 01:49:58.040
writing my new version
of the app that

01:49:58.040 --> 01:50:01.520
has a slightly different
schema then, and I'm testing it

01:50:01.520 --> 01:50:03.870
and so on before
I rolled it out,

01:50:03.870 --> 01:50:10.340
do I use the Remote Config to
point to a different Firebase

01:50:10.340 --> 01:50:12.150
database?

01:50:12.150 --> 01:50:16.720
How do I end up not putting QA
data in my production Firebase

01:50:16.720 --> 01:50:17.280
database?

01:50:17.280 --> 01:50:18.446
IAN BARBER: Yeah, you could.

01:50:18.446 --> 01:50:21.580
Again, that's one of those
questions where a lot of it's

01:50:21.580 --> 01:50:25.360
up to your specific needs.

01:50:25.360 --> 01:50:27.510
You can have another
database, another project

01:50:27.510 --> 01:50:29.190
and use that one for QA.

01:50:29.190 --> 01:50:30.440
That works.

01:50:30.440 --> 01:50:33.495
You could also
structure your database

01:50:33.495 --> 01:50:35.810
so that there is
separate kind of roots

01:50:35.810 --> 01:50:37.790
for different environments
so that you write

01:50:37.790 --> 01:50:39.844
into a different one of
those and just change out

01:50:39.844 --> 01:50:41.010
where you get your root ref.

01:50:41.010 --> 01:50:42.385
Instead of having
it as root, you

01:50:42.385 --> 01:50:45.910
have root slash prod or root
slash version or however

01:50:45.910 --> 01:50:48.390
you want to structure
that kind of stuff.

01:50:48.390 --> 01:50:51.075
But yeah, multiple projects
is a fairly reasonable choice.

01:50:51.075 --> 01:50:52.450
MAGNUS HYTTSTEN:
Because then you

01:50:52.450 --> 01:50:54.320
have an absolute
clear separation.

01:50:54.320 --> 01:50:56.370
There is no question whatsoever.

01:50:56.370 --> 01:50:58.650
Otherwise your QAing your
app and you're sitting there

01:50:58.650 --> 01:51:02.685
in Remote Config and you're
configuring key-value things,

01:51:02.685 --> 01:51:04.060
and the last thing
you want to do

01:51:04.060 --> 01:51:06.580
is effect all your production
users while you really

01:51:06.580 --> 01:51:11.090
want to test your Remote Config
for the QA version of your app.

01:51:11.090 --> 01:51:15.404
So you always have to juggle
around with all of these things

01:51:15.404 --> 01:51:17.320
if you have the same
project for these things.

01:51:17.320 --> 01:51:20.730
So really to get a clear demarc
between test environments

01:51:20.730 --> 01:51:23.370
and production environments,
using different projects is

01:51:23.370 --> 01:51:24.995
the best thing.

01:51:24.995 --> 01:51:27.337
JAMES TAMPLIN: And just for
some background knowledge

01:51:27.337 --> 01:51:28.920
for those of you who
might be curious,

01:51:28.920 --> 01:51:33.190
a project is a container that
can house multiple applications

01:51:33.190 --> 01:51:34.780
and has a set of
shared resources.

01:51:34.780 --> 01:51:38.050
So here we're talking
about the database.

01:51:38.050 --> 01:51:41.190
But we within a project,
you can have, say,

01:51:41.190 --> 01:51:44.060
your Android app and your
iOS app and your web app.

01:51:44.060 --> 01:51:46.740
And there are specific
characteristics,

01:51:46.740 --> 01:51:49.650
say crash reporting, that
you don't want shared.

01:51:49.650 --> 01:51:53.420
You just want to know about
specific crashes on my iOS app.

01:51:53.420 --> 01:51:56.680
And so that's specific
to the app level

01:51:56.680 --> 01:52:00.635
as opposed to the project
level, just as some background.

01:52:00.635 --> 01:52:02.010
MARTIN OMANDER:
But you're saying

01:52:02.010 --> 01:52:04.450
James, my Android
app and my iOS app

01:52:04.450 --> 01:52:08.080
might, for example, write
to the same database.

01:52:08.080 --> 01:52:10.490
JAMES TAMPLIN: So every
project has a shared database.

01:52:10.490 --> 01:52:11.940
MARTIN OMANDER: Every project
has a shared database.

01:52:11.940 --> 01:52:14.148
IAN BARBER: Yeah, you want
those in the same project.

01:52:14.148 --> 01:52:16.750
You'd only want your apps
all in the same project.

01:52:16.750 --> 01:52:19.757
If you're splitting out your
QA from your dev versions,

01:52:19.757 --> 01:52:21.590
you might have three
projects, each of which

01:52:21.590 --> 01:52:25.102
has your Android app and your
iOS app and your web app in it.

01:52:25.102 --> 01:52:27.060
MAGNUS HYTTSTEN: And same
thing with Analytics.

01:52:27.060 --> 01:52:30.860
You want to share Analytics data
across Android and iOS and web

01:52:30.860 --> 01:52:31.720
as well.

01:52:31.720 --> 01:52:33.220
MARTIN OMANDER: Oh
right, so you can

01:52:33.220 --> 01:52:34.707
see all the clicks in the app.

01:52:34.707 --> 01:52:36.290
MAGNUS HYTTSTEN: So
you see regardless

01:52:36.290 --> 01:52:38.370
of whether it's an
Android app or iOS app,

01:52:38.370 --> 01:52:42.830
you share the same Analytics
store for that project.

01:52:42.830 --> 01:52:45.420
IAN BARBER: You get
different views of it.

01:52:45.420 --> 01:52:46.332
MAGNUS HYTTSTEN: Yes.

01:52:46.332 --> 01:52:48.123
MARTIN OMANDER: So you
get different views.

01:52:48.123 --> 01:52:52.980
IAN BARBER: Yeah, so when you go
down on the-- we have a slide,

01:52:52.980 --> 01:52:53.480
don't we?

01:52:53.480 --> 01:52:54.740
Shall we use the slide?

01:52:54.740 --> 01:52:56.260
MARTIN OMANDER: Oh
yeah, could we--

01:52:56.260 --> 01:52:58.150
IAN BARBER: Yeah, can
we get to the slides?

01:52:58.150 --> 01:52:59.650
Can you go back to
the previous one?

01:52:59.650 --> 01:53:03.600
MARTIN OMANDER: Show the slide
from Magnus's laptop please.

01:53:03.600 --> 01:53:06.430
IAN BARBER: So this screen is
like what you get when you've

01:53:06.430 --> 01:53:07.920
got a few apps connected.

01:53:07.920 --> 01:53:09.860
This is from a real game.

01:53:09.860 --> 01:53:12.470
And you can see there's little
Android icons because there's

01:53:12.470 --> 01:53:14.120
a couple of Android variants.

01:53:14.120 --> 01:53:15.590
There's little iOS icons.

01:53:15.590 --> 01:53:17.450
Now those are
grouped effectively

01:53:17.450 --> 01:53:19.280
by package name or bundle ID.

01:53:19.280 --> 01:53:21.380
But they could
represent-- you could

01:53:21.380 --> 01:53:26.852
have com.redhotlabs.bingo
dev and QA or whatever

01:53:26.852 --> 01:53:27.560
versions of that.

01:53:27.560 --> 01:53:28.720
That's entirely up to you.

01:53:28.720 --> 01:53:32.830
And then if you go to the
next slide, once you click in,

01:53:32.830 --> 01:53:36.015
you see up in the
top right there

01:53:36.015 --> 01:53:39.710
it says iOS
com.redhotlabs.bingo.

01:53:39.710 --> 01:53:42.220
That is for this
app, its analytics.

01:53:42.220 --> 01:53:44.247
So we're in the project.

01:53:44.247 --> 01:53:45.580
They all share the same project.

01:53:45.580 --> 01:53:48.870
But we're looking at a view of
just the analytics for the iOS

01:53:48.870 --> 01:53:49.410
app.

01:53:49.410 --> 01:53:52.415
And you can go and see all your
active users and engagement

01:53:52.415 --> 01:53:56.030
and all that kind of good stuff.

01:53:56.030 --> 01:53:58.420
MARTIN OMANDER: Really
good stuff, yeah.

01:53:58.420 --> 01:54:01.969
So this is on the project level?

01:54:01.969 --> 01:54:04.260
IAN BARBER: Yeah, so the
Analytics, the whole dashboard

01:54:04.260 --> 01:54:06.850
is on the project level,
the whole console.

01:54:06.850 --> 01:54:09.890
And then within that you get a
drop down for each of the apps

01:54:09.890 --> 01:54:11.940
so you can see the
analytics for that.

01:54:11.940 --> 01:54:13.510
MARTIN OMANDER: Right, got it.

01:54:13.510 --> 01:54:14.830
OK, great.

01:54:14.830 --> 01:54:17.720
Thank you for showing us Magnus.

01:54:17.720 --> 01:54:21.120
All right, so next
question we have

01:54:21.120 --> 01:54:25.770
is Timur Calmatui
who is asking, what

01:54:25.770 --> 01:54:27.770
is the best approach
to move from a SQL

01:54:27.770 --> 01:54:32.480
based database and RESTful
API to the Firebase real time

01:54:32.480 --> 01:54:33.800
database?

01:54:33.800 --> 01:54:36.340
Any tips?

01:54:36.340 --> 01:54:37.990
I struggled a bit with this too.

01:54:37.990 --> 01:54:40.940
It's a different way of thinking
with the Realtime Database,

01:54:40.940 --> 01:54:41.890
right?

01:54:41.890 --> 01:54:44.056
JAMES TAMPLIN: So it is a
different way of thinking.

01:54:44.056 --> 01:54:46.220
There's two major differences.

01:54:46.220 --> 01:54:49.190
First of all is the
request-response nature.

01:54:49.190 --> 01:54:53.880
Typically people think
about writing to a database

01:54:53.880 --> 01:54:56.470
and then reading from it.

01:54:56.470 --> 01:54:59.370
And second is the
client-server notion.

01:54:59.370 --> 01:55:00.990
So let's take those one by one.

01:55:00.990 --> 01:55:05.030
So the request-response,
Firebase has instead of

01:55:05.030 --> 01:55:09.390
read and write, it has a
write and listen for changes.

01:55:09.390 --> 01:55:10.940
So the Firebase
Realtime Database

01:55:10.940 --> 01:55:14.810
notifies you when data changed,
and so you have a callback

01:55:14.810 --> 01:55:19.090
and you subscribe to a
location within the database.

01:55:19.090 --> 01:55:23.710
So a little bit of a
different mindset there.

01:55:23.710 --> 01:55:29.210
And then second is we have
very thick client libraries.

01:55:29.210 --> 01:55:33.320
And so one of the beautiful
things about Firebase Realtime

01:55:33.320 --> 01:55:35.390
Database is you
don't need a server.

01:55:35.390 --> 01:55:37.980
You can certainly access
the database from our--

01:55:37.980 --> 01:55:41.552
we have a few, we have a Java
library and a Node library

01:55:41.552 --> 01:55:44.010
and obviously a REST API so
you can get at it from wherever

01:55:44.010 --> 01:55:45.722
you do HTTP.

01:55:45.722 --> 01:55:47.680
But that's not the
recommended way of doing it.

01:55:47.680 --> 01:55:51.980
If you use the clients'
libraries for iOS, Android,

01:55:51.980 --> 01:55:54.875
and the web, you get
things like offline mode

01:55:54.875 --> 01:55:56.250
where your app
remains responsive

01:55:56.250 --> 01:55:59.430
when you don't have an
internet connection.

01:55:59.430 --> 01:56:01.466
You get things like
transactions that we

01:56:01.466 --> 01:56:02.590
were talking about earlier.

01:56:02.590 --> 01:56:07.650
Those don't come
over the REST API.

01:56:07.650 --> 01:56:12.230
And so we definitely recommend
that you use those libraries.

01:56:12.230 --> 01:56:13.680
And then third is
the data model.

01:56:13.680 --> 01:56:17.220
So in a SQL database,
you have tables

01:56:17.220 --> 01:56:20.910
and you have primary
keys and foreign keys.

01:56:20.910 --> 01:56:23.400
And the Firebase
Realtime Database

01:56:23.400 --> 01:56:25.660
is just a large documents.

01:56:25.660 --> 01:56:29.410
It's a large JSON object
of pretty much arbitrary

01:56:29.410 --> 01:56:32.040
granularity.

01:56:32.040 --> 01:56:39.140
And so the transition between
the two, the migration story

01:56:39.140 --> 01:56:43.520
is, really think about how your
data structure needs to change.

01:56:43.520 --> 01:56:47.520
And it will require a
pretty massive code change.

01:56:47.520 --> 01:56:51.510
So I recommend going to
firebase.google.com/docs

01:56:51.510 --> 01:56:54.549
and checking out the
documentation for the database.

01:56:54.549 --> 01:56:55.590
MAGNUS HYTTSTEN: Exactly.

01:56:55.590 --> 01:57:00.260
So it's not possible to find the
one-one automatic translation

01:57:00.260 --> 01:57:02.590
script between these
two environments.

01:57:02.590 --> 01:57:05.380
My personal suggestion
is really start

01:57:05.380 --> 01:57:07.240
to play around with
the Firebase database

01:57:07.240 --> 01:57:08.940
to get familiarized
with it, because it

01:57:08.940 --> 01:57:11.340
takes a little bit
of time before you

01:57:11.340 --> 01:57:14.042
get a feel for what the
structure's like, et cetera.

01:57:14.042 --> 01:57:15.750
And it's a lot of fun
as well because you

01:57:15.750 --> 01:57:18.300
get started so quickly.

01:57:18.300 --> 01:57:21.020
And then once you've
done that, you

01:57:21.020 --> 01:57:25.920
start to get the feel for how
to map your traditional SQL

01:57:25.920 --> 01:57:29.540
environment over to this
kind of methodology instead.

01:57:29.540 --> 01:57:32.220
There's also a
document of Firebase

01:57:32.220 --> 01:57:36.070
in the documentation called
structuring data or something,

01:57:36.070 --> 01:57:39.750
which is a great introduction
to how data is structured,

01:57:39.750 --> 01:57:41.500
the preferred way of
doing it in Firebase.

01:57:44.434 --> 01:57:46.850
MARTIN OMANDER: I did exactly
what you were saying Magnus.

01:57:46.850 --> 01:57:48.224
I started playing
around with it.

01:57:48.224 --> 01:57:51.110
And the first two days I was
playing with it, I was like,

01:57:51.110 --> 01:57:54.900
OK, now I need to check if
this name is already taken,

01:57:54.900 --> 01:57:56.560
OK, I'm going to
hit the database

01:57:56.560 --> 01:57:58.920
and see if this--
no wait a minute.

01:57:58.920 --> 01:57:59.920
That's not how it works.

01:57:59.920 --> 01:58:03.080
I already have all the names.

01:58:03.080 --> 01:58:06.760
If any new name is added, I will
have gotten the update already.

01:58:06.760 --> 01:58:08.945
So I have it locally, boom.

01:58:08.945 --> 01:58:11.737
So it was much easier, but
it took a bit of a change.

01:58:11.737 --> 01:58:13.320
MAGNUS HYTTSTEN: But
when you actually

01:58:13.320 --> 01:58:15.325
start to think about
all of the things that

01:58:15.325 --> 01:58:16.950
are going on in the
background-- that's

01:58:16.950 --> 01:58:19.440
why I was coming
to this database--

01:58:19.440 --> 01:58:27.100
it's really like a real time
multinode event collaboration

01:58:27.100 --> 01:58:28.280
technology.

01:58:28.280 --> 01:58:29.980
There is the
database piece to it,

01:58:29.980 --> 01:58:35.720
but the additional value that's
being created by Firebase

01:58:35.720 --> 01:58:39.600
is to be able to create
these multinode apps that

01:58:39.600 --> 01:58:41.746
can collaborate and
share data in real time.

01:58:41.746 --> 01:58:42.870
It's quite amazing I think.

01:58:42.870 --> 01:58:45.520
That was the thing that
hit me at the beginning.

01:58:45.520 --> 01:58:50.160
I come very much from
a SQL background.

01:58:50.160 --> 01:58:52.560
And all of this, I need
to poll the database,

01:58:52.560 --> 01:58:54.290
I need to see if
something changes,

01:58:54.290 --> 01:58:56.950
or I need to build a network
layer on top of the database,

01:58:56.950 --> 01:59:00.450
so I need to have a trigger that
fires off this and then sends

01:59:00.450 --> 01:59:04.000
some request to my server
that can up-- I mean,

01:59:04.000 --> 01:59:07.360
the amount of logic that you
explicit;y program to create

01:59:07.360 --> 01:59:11.910
these environments if you didn't
have the Firebase database is

01:59:11.910 --> 01:59:14.170
so big and so complex.

01:59:14.170 --> 01:59:20.230
And Firebase, you don't
even host the actual system

01:59:20.230 --> 01:59:21.400
that keeps the data.

01:59:21.400 --> 01:59:24.770
You just refer to it by URL, and
it's all automatically hosted.

01:59:24.770 --> 01:59:26.010
And it's just working.

01:59:26.010 --> 01:59:27.224
It's amazing I think.

01:59:27.224 --> 01:59:28.890
JAMES TAMPLIN: Most
applications is just

01:59:28.890 --> 01:59:30.240
a series of state changes.

01:59:30.240 --> 01:59:31.820
And the Firebase
Realtime Database

01:59:31.820 --> 01:59:34.280
provides you with
those state changes.

01:59:34.280 --> 01:59:36.430
MARTIN OMANDER:
Yeah, that's right.

01:59:36.430 --> 01:59:39.530
MAGNUS HYTTSTEN: Perhaps I'm
being a bit enthusiastic here,

01:59:39.530 --> 01:59:43.850
but I'm really speaking
from my heart of using it.

01:59:43.850 --> 01:59:47.470
I'm not trying to
sell this to people.

01:59:47.470 --> 01:59:50.890
For me, it was a big eye opener
to start to use this API.

01:59:50.890 --> 01:59:52.390
MARTIN OMANDER: Yeah, I agree.

01:59:52.390 --> 01:59:54.730
And I think I started to
break out in a bit of a rash

01:59:54.730 --> 01:59:56.500
here when you mentioned
database triggers.

01:59:56.500 --> 01:59:58.310
And I'm feeling very
uncomfortable now.

01:59:58.310 --> 02:00:00.860
Let's not talk about
triggers anymore, OK?

02:00:00.860 --> 02:00:04.330
I've seen so many bugs
caused by database triggers.

02:00:04.330 --> 02:00:09.420
It's good when state changes are
handled for you automatically.

02:00:09.420 --> 02:00:12.130
All right, next
question we have is

02:00:12.130 --> 02:00:15.610
from Joseph who's asking
how to do email verification

02:00:15.610 --> 02:00:17.210
with authentication on Android.

02:00:17.210 --> 02:00:18.884
I'm concerned about imposters.

02:00:23.100 --> 02:00:26.090
JAMES TAMPLIN:
I'll take that one.

02:00:26.090 --> 02:00:31.910
So one of the exciting new
features in the announcement

02:00:31.910 --> 02:00:35.010
last week is email verification.

02:00:35.010 --> 02:00:40.266
So before, Firebase
Auth had password reset.

02:00:40.266 --> 02:00:42.060
And we've added
email verification

02:00:42.060 --> 02:00:44.150
as of last Wednesday.

02:00:44.150 --> 02:00:47.700
So it's in the Firebase
Console under the Auth tab.

02:00:47.700 --> 02:00:53.970
And if you under the Auth
tab, the last top tab

02:00:53.970 --> 02:00:56.110
has all of your email
templates in there.

02:00:56.110 --> 02:00:59.725
So there's password resets and
there's email verification.

02:00:59.725 --> 02:01:02.950
And I think there's one
or two others actually.

02:01:02.950 --> 02:01:06.580
And so you can go in there
and you can customize it

02:01:06.580 --> 02:01:08.130
to your heart's
content, whatever

02:01:08.130 --> 02:01:10.210
text you want to put in there.

02:01:10.210 --> 02:01:16.140
And we'll provide a URL
that users can click and can

02:01:16.140 --> 02:01:19.470
hit and verify their email.

02:01:19.470 --> 02:01:22.300
MARTIN OMANDER: And just
to back up and explain

02:01:22.300 --> 02:01:24.460
what this feature is, this
is the feature where--

02:01:24.460 --> 02:01:28.600
or maybe James you could just
describe the user experience

02:01:28.600 --> 02:01:30.290
as they go through the flow?

02:01:30.290 --> 02:01:35.080
JAMES TAMPLIN: Yeah, so this is,
if you've ever signed up for,

02:01:35.080 --> 02:01:40.380
pick your SaaS provider here,
what it'll say is great.

02:01:40.380 --> 02:01:41.210
You've signed up.

02:01:41.210 --> 02:01:45.770
Please go and check your
email and verify your email.

02:01:45.770 --> 02:01:49.310
And you'll go over to
your email provider,

02:01:49.310 --> 02:01:51.530
and it'll say thank
you for signing up.

02:01:51.530 --> 02:01:54.090
Please click this
link to confirm.

02:01:54.090 --> 02:01:58.880
And there's a bunch of security
benefits to doing this.

02:01:58.880 --> 02:02:01.780
One, ensuring that
if you're actually

02:02:01.780 --> 02:02:03.570
using your email
for your username,

02:02:03.570 --> 02:02:09.280
that that is actually your
username or your email.

02:02:09.280 --> 02:02:12.650
And so you'll click that
link and it'll say verified.

02:02:12.650 --> 02:02:16.030
And then it'll let you go
ahead and use the application.

02:02:16.030 --> 02:02:18.390
MARTIN OMANDER: So
this is a piece of code

02:02:18.390 --> 02:02:20.130
that I've written
many, many times,

02:02:20.130 --> 02:02:22.470
I think once for ever app.

02:02:22.470 --> 02:02:26.090
So I don't need to
write code to have this

02:02:26.090 --> 02:02:27.310
in my Firebase [INAUDIBLE].

02:02:27.310 --> 02:02:28.880
JAMES TAMPLIN: Correct,
this is all out the box.

02:02:28.880 --> 02:02:29.755
MARTIN OMANDER: Nice.

02:02:29.755 --> 02:02:32.260
I didn't know that.

02:02:32.260 --> 02:02:34.952
Cool, thank you, James.

02:02:34.952 --> 02:02:36.660
IAN BARBER: I was
going to say, because I

02:02:36.660 --> 02:02:37.950
see the giant hook coming out.

02:02:40.950 --> 02:02:42.570
we've got no more
questions coming up.

02:02:42.570 --> 02:02:45.010
But there was one that
came out on Twitter

02:02:45.010 --> 02:02:48.690
just at the end which was
what's the best way for people

02:02:48.690 --> 02:02:51.510
to stay up to date other than
just staying on the Hangout

02:02:51.510 --> 02:02:53.980
with us for the rest of time,
which I think is probably--

02:02:53.980 --> 02:02:55.475
MARTIN OMANDER: Which
would be pretty awesome.

02:02:55.475 --> 02:02:55.980
IAN BARBER: It's
not going to scale.

02:02:55.980 --> 02:02:58.620
MARTIN OMANDER: Yeah,
it's not going to scale.

02:02:58.620 --> 02:03:00.714
IAN BARBER: James, what's
your preferred choice?

02:03:00.714 --> 02:03:02.130
JAMES TAMPLIN: My
preferred choice

02:03:02.130 --> 02:03:04.290
of how to stay in touch
with us, so there's

02:03:04.290 --> 02:03:05.730
a few channels you have.

02:03:05.730 --> 02:03:07.740
First of all, I'd
recommend Twitter.

02:03:07.740 --> 02:03:11.480
So we're just
@Firebase on Twitter.

02:03:11.480 --> 02:03:13.850
Super active there
and you'll get links

02:03:13.850 --> 02:03:17.405
to the latest releases
and blog posts

02:03:17.405 --> 02:03:20.122
that we put off and events
that we'll be attending.

02:03:20.122 --> 02:03:21.330
So that's a really great one.

02:03:21.330 --> 02:03:23.550
If you're looking for
something more interactive

02:03:23.550 --> 02:03:26.950
and you want to chat with the
team, we have our mailing list.

02:03:26.950 --> 02:03:31.760
So it's
groups.google.com/firebase-dash.

02:03:31.760 --> 02:03:33.260
And you can go in
there and if you

02:03:33.260 --> 02:03:35.010
want to share with the
community something

02:03:35.010 --> 02:03:38.040
that you've built using
Firebase or if you're

02:03:38.040 --> 02:03:42.900
looking for some feedback
or something like that,

02:03:42.900 --> 02:03:44.750
you're more than
welcome to join.

02:03:44.750 --> 02:03:46.400
We've built a really
robust community

02:03:46.400 --> 02:03:47.840
and a passionate
community there,

02:03:47.840 --> 02:03:50.660
and we'd love to have
you be a part of that.

02:03:50.660 --> 02:03:53.397
The third way, if you
have a technical question,

02:03:53.397 --> 02:03:55.730
so if you have a question on
implementation or something

02:03:55.730 --> 02:03:57.320
that involves code,
Stack Overflow

02:03:57.320 --> 02:03:59.270
is the place you want to go.

02:03:59.270 --> 02:04:01.770
So we've got a lot of the team
members who are active there.

02:04:01.770 --> 02:04:04.186
And again, we have a
fantastic community.

02:04:04.186 --> 02:04:06.060
So if you want to up
your Stack Overflow rep,

02:04:06.060 --> 02:04:08.710
please help out there as well.

02:04:08.710 --> 02:04:09.720
That would fantastic.

02:04:09.720 --> 02:04:12.060
As Ian mentioned, some
things don't scale.

02:04:12.060 --> 02:04:15.940
So do love your
help where possible.

02:04:15.940 --> 02:04:18.160
You're welcome to
participate on GitHub.

02:04:18.160 --> 02:04:20.850
We've got a lot of open source
projects-- AngularFire 2,

02:04:20.850 --> 02:04:23.000
and we've got one
called GeoFire to help

02:04:23.000 --> 02:04:26.160
you deal with geolocation
in your applications.

02:04:26.160 --> 02:04:27.190
IAN BARBER: FirebaseUI.

02:04:27.190 --> 02:04:28.690
JAMES TAMPLIN: We've
got FirebaseUI,

02:04:28.690 --> 02:04:30.341
so we've got FirebaseUI is--

02:04:30.341 --> 02:04:32.340
IAN BARBER: New job
dispatcher, that's in there.

02:04:32.340 --> 02:04:34.030
That's pretty bad ass.

02:04:34.030 --> 02:04:35.950
JAMES TAMPLIN:
Lots of good stuff.

02:04:35.950 --> 02:04:36.450
And then--

02:04:36.450 --> 02:04:37.619
IAN BARBER: Blog.

02:04:37.619 --> 02:04:39.910
JAMES TAMPLIN: And then the
final way's the blog, yeah.

02:04:39.910 --> 02:04:42.076
MARTIN OMANDER: The blog--
where does the blog live?

02:04:42.076 --> 02:04:44.680
JAMES TAMPLIN: So
firebase.google.com/blog

02:04:44.680 --> 02:04:48.870
or-- yeah, that's the quickest
way, firebase.google.com/blog.

02:04:48.870 --> 02:04:50.670
MARTIN OMANDER: Good stuff.

02:04:50.670 --> 02:04:53.080
Lots of resources, good stuff.

02:04:53.080 --> 02:04:55.880
Magnus, Ian, are either
of you responding

02:04:55.880 --> 02:04:57.804
to questions on Stack Overflow?

02:04:57.804 --> 02:04:58.470
IAN BARBER: Yep.

02:04:58.470 --> 02:05:00.987
MARTIN OMANDER: I think I
remember reading one of your--

02:05:00.987 --> 02:05:01.820
[INTERPOSING VOICES]

02:05:01.820 --> 02:05:03.820
IAN BARBER: You'll
see a lot of the team.

02:05:03.820 --> 02:05:09.070
You'll see names like puf
and Abe and Kato, myself.

02:05:09.070 --> 02:05:11.190
There's a whole bunch of
the Firebase dev rel team

02:05:11.190 --> 02:05:12.880
that are on there.

02:05:12.880 --> 02:05:14.586
CodingDoug, he's on
there quite a bit.

02:05:14.586 --> 02:05:16.780
You're going to give a
lot of people on there.

02:05:16.780 --> 02:05:18.919
And we're always happy
to answer questions,

02:05:18.919 --> 02:05:20.710
but yeah, as James
said, we're even happier

02:05:20.710 --> 02:05:23.296
to upvote your answers.

02:05:23.296 --> 02:05:24.260
We like that.

02:05:24.260 --> 02:05:26.593
JAMES TAMPLIN: And really
interacting with the community

02:05:26.593 --> 02:05:29.910
is one of the things that is
sort of imbued in the culture.

02:05:29.910 --> 02:05:33.390
And as we talked about
earlier, this test and iterate,

02:05:33.390 --> 02:05:36.390
we are going to build a
better product by getting

02:05:36.390 --> 02:05:38.630
your input and your feedback.

02:05:38.630 --> 02:05:40.720
And it's been
fantastic to hear some

02:05:40.720 --> 02:05:42.730
of the questions and
feature requests come

02:05:42.730 --> 02:05:44.740
through here today.

02:05:44.740 --> 02:05:46.660
But we'd love more of those.

02:05:46.660 --> 02:05:49.580
So if you actually go
to firebase.google.com

02:05:49.580 --> 02:05:52.670
and you click Support
up on the top,

02:05:52.670 --> 02:05:54.910
you can actually submit
feature requests there.

02:05:54.910 --> 02:05:57.540
And as we go through the
product roadmapping process,

02:05:57.540 --> 02:05:58.760
those get taken into account.

02:05:58.760 --> 02:06:00.540
And we'd love to
hear your thoughts,

02:06:00.540 --> 02:06:04.920
and obviously participate
in the different channels.

02:06:04.920 --> 02:06:08.170
And we're excited to
hear what you've built.

02:06:08.170 --> 02:06:11.560
IAN BARBER: Yeah, that
support place is really worth

02:06:11.560 --> 02:06:12.730
knowing about that.

02:06:12.730 --> 02:06:14.660
You can send feature
requests and bugs there,

02:06:14.660 --> 02:06:16.685
and you can also get
troubleshooting support.

02:06:16.685 --> 02:06:18.310
And that's not going
into a black hole.

02:06:18.310 --> 02:06:20.140
We have a team, some here.

02:06:20.140 --> 02:06:21.230
We have a team in Manila.

02:06:21.230 --> 02:06:24.346
And they are responding
to it all through the day.

02:06:24.346 --> 02:06:25.720
And they've done
a fantastic job.

02:06:25.720 --> 02:06:28.500
So if you have a
problem, they're

02:06:28.500 --> 02:06:29.930
going to be a great place to go.

02:06:29.930 --> 02:06:30.900
MAGNUS HYTTSTEN:
And in that place,

02:06:30.900 --> 02:06:33.233
you can also see the other
reference like Stack Overflow

02:06:33.233 --> 02:06:36.010
and other groups, et cetera.

02:06:36.010 --> 02:06:39.130
MARTIN OMANDER: Oh, OK,
so the one stop shop is

02:06:39.130 --> 02:06:41.519
firebase.google.com/support.

02:06:41.519 --> 02:06:43.310
MAGNUS HYTTSTEN: There
you'll see all the--

02:06:43.310 --> 02:06:44.640
MARTIN OMANDER: And there's
your-- ah, very good.

02:06:44.640 --> 02:06:46.140
IAN BARBER: That's
the quick answer.

02:06:46.140 --> 02:06:50.560
[LAUGHTER]

02:06:51.342 --> 02:06:52.550
MARTIN OMANDER: This is good.

02:06:52.550 --> 02:06:53.140
This is good.

02:06:53.140 --> 02:06:55.640
And I'm happy you guys told me
about all these new features,

02:06:55.640 --> 02:06:58.210
or I would have been in their
clicking on support asking you,

02:06:58.210 --> 02:07:00.200
the email notification?

02:07:00.200 --> 02:07:01.740
Oh, it's already in there.

02:07:01.740 --> 02:07:03.930
I've learned a lot here guys.

02:07:03.930 --> 02:07:07.540
Thank you very much
Ian, Magnus, James.

02:07:07.540 --> 02:07:11.710
A lot of cool features that I'm
going to implement in my game.

02:07:11.710 --> 02:07:13.910
And it'll be great fun.

02:07:13.910 --> 02:07:16.840
And thank you very
much for posting

02:07:16.840 --> 02:07:18.790
all your great questions to us.

02:07:18.790 --> 02:07:22.840
We really enjoyed doing
this interactively with you.

02:07:22.840 --> 02:07:25.680
And so these new Firebase
tools, as we heard,

02:07:25.680 --> 02:07:27.560
are available as of last week.

02:07:27.560 --> 02:07:30.720
And you can get a head
start on your competition

02:07:30.720 --> 02:07:33.600
by going to
firebase.google.com and start

02:07:33.600 --> 02:07:35.930
using the tools today.

02:07:35.930 --> 02:07:41.670
Also be on the lookout this
fall for local Firebase events

02:07:41.670 --> 02:07:45.970
in your local community run
by Google Developer groups.

02:07:45.970 --> 02:07:47.610
In the summer and
in the fall, they

02:07:47.610 --> 02:07:51.540
will run Firebase themed events.

02:07:51.540 --> 02:07:53.260
Thank you for joining us.

02:07:53.260 --> 02:07:59.050
And remember, you developers
are building the future.

02:07:59.050 --> 02:08:02.190
That is an awesome
responsibility.

02:08:02.190 --> 02:08:05.110
And we can't wait to
see what you build.

02:08:05.110 --> 02:08:06.610
Thank you.

02:08:06.610 --> 02:08:10.260
[MUSIC PLAYING]

