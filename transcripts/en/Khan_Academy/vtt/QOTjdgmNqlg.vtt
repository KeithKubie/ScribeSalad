WEBVTT
Kind: captions
Language: en

00:00:00.710 --> 00:00:03.090
Say I've got a subspace V.

00:00:03.090 --> 00:00:13.710
So V is some subspace,
maybe of Rn.

00:00:13.710 --> 00:00:18.180
I'm going to define the
orthogonal complement of V,

00:00:18.180 --> 00:00:23.040
let me write that
down, orthogonal

00:00:23.040 --> 00:00:29.370
complement of V is the set.

00:00:29.370 --> 00:00:31.905
And, this is shorthand notation
right here, would be

00:00:31.905 --> 00:00:34.780
the orthogonal complement
of V.

00:00:34.780 --> 00:00:37.360
So we write this little
orthogonal notation as a

00:00:37.360 --> 00:00:38.440
superscript on V.

00:00:38.440 --> 00:00:42.200
And you can pronounce this
as 'V perp', not for

00:00:42.200 --> 00:00:44.770
'perpetrator' but for
'perpendicular.'

00:00:44.770 --> 00:00:55.200
So V perp is equal to the set of
all x's, all the vectors x

00:00:55.200 --> 00:01:06.440
that are a member of our Rn,
such that x dot V is equal to

00:01:06.440 --> 00:01:17.230
0 for every vector V that is
a member of our subspace.

00:01:17.230 --> 00:01:20.100
So we're essentially saying,
look, you have some subspace,

00:01:20.100 --> 00:01:21.760
it's got a bunch of
vectors in it.

00:01:21.760 --> 00:01:26.240
Now if I can find some other
set of vectors where every

00:01:26.240 --> 00:01:29.670
member of that set is orthogonal
to every member of

00:01:29.670 --> 00:01:34.000
the subspace in question, then
the set of those vectors is

00:01:34.000 --> 00:01:39.480
called the orthogonal
complement of V.

00:01:39.480 --> 00:01:42.520
And you write it this way,
V perp, right there.

00:01:42.520 --> 00:01:45.670
So the first thing that we just
tend to do when we are

00:01:45.670 --> 00:01:49.930
defining a space or defining
some set is to see, hey, is

00:01:49.930 --> 00:01:51.950
this a subspace?

00:01:51.950 --> 00:01:55.530
Is V perp, or the orthogonal
complement of

00:01:55.530 --> 00:01:57.040
V, is this a subspace?

00:02:00.730 --> 00:02:03.450
Well, you might remember from
many, many videos ago, that we

00:02:03.450 --> 00:02:07.040
had just a couple of conditions
for a subspace.

00:02:07.040 --> 00:02:13.600
That if-- let's say that a and b
are both a member of V perp,

00:02:13.600 --> 00:02:16.620
then we have to wonder
whether a plus b is

00:02:16.620 --> 00:02:18.750
a member of V perp.

00:02:18.750 --> 00:02:19.710
That's our first condition.

00:02:19.710 --> 00:02:23.470
It needs to be closed under
addition in order for this to

00:02:23.470 --> 00:02:24.490
be a subspace.

00:02:24.490 --> 00:02:27.390
And the next condition as well,
if a is a member of V

00:02:27.390 --> 00:02:36.570
perp, is some scalar multiple of
a also a member of V perp?

00:02:36.570 --> 00:02:38.920
And the last one, it has to
contain the zero vector.

00:02:38.920 --> 00:02:40.780
Which is a little bit redundant
with this, because

00:02:40.780 --> 00:02:45.810
if any scalar multiple of a is
a member of our orthogonal

00:02:45.810 --> 00:02:48.610
complement of V, you could
just multiply it by 0.

00:02:48.610 --> 00:02:53.950
So it would imply that the zero
vector is a member of V.

00:02:53.950 --> 00:02:56.740
So what does this imply?

00:02:56.740 --> 00:03:00.670
What is the fact that a and
b are members of V perp?

00:03:00.670 --> 00:03:07.170
That means that a dot V, where
this V is any member of our

00:03:07.170 --> 00:03:14.360
original subspace V, is equal
to 0 for any V that is a

00:03:14.360 --> 00:03:16.650
member of our subspace V.

00:03:16.650 --> 00:03:20.122
And it also means that b, since
b is also a member of V

00:03:20.122 --> 00:03:24.790
perp, that V dot any member of
our subspace is also going to

00:03:24.790 --> 00:03:32.130
be 0, or any b that
is a member of V.

00:03:32.130 --> 00:03:36.170
So what happens if we
take a plus b dot V?

00:03:36.170 --> 00:03:37.330
Let's do that.

00:03:37.330 --> 00:03:42.300
So if I do a plus b dot
V, what is this

00:03:42.300 --> 00:03:43.100
going to be equal to?

00:03:43.100 --> 00:03:49.860
This is going to be equal
to a dot V plus b dot V.

00:03:49.860 --> 00:03:53.290
And we just said, the fact that
both a and b are members

00:03:53.290 --> 00:03:56.210
of our orthogonal complement
means that both of these

00:03:56.210 --> 00:03:57.970
quantities are going
to be equal to 0.

00:03:57.970 --> 00:04:01.250
So this is going to be
equal to 0 plus 0

00:04:01.250 --> 00:04:02.910
which is equal to 0.

00:04:02.910 --> 00:04:06.860
So a plus b is definitely a
member of our orthogonal

00:04:06.860 --> 00:04:07.440
complement.

00:04:07.440 --> 00:04:10.620
So we got our check box right
there I'll do it in a

00:04:10.620 --> 00:04:12.430
different color than
the question mark.

00:04:12.430 --> 00:04:13.690
Check, for the first

00:04:13.690 --> 00:04:16.950
condition, for being a subspace.

00:04:16.950 --> 00:04:19.870
Now is ca a member of V perp?

00:04:19.870 --> 00:04:21.959
Well let's just take c.

00:04:21.959 --> 00:04:25.900
If we take ca and dot it with
any member of our original

00:04:25.900 --> 00:04:33.740
subspace this is the same thing
as c times a dot V.

00:04:33.740 --> 00:04:34.850
And what is this equal to?

00:04:34.850 --> 00:04:38.000
By definition a was a member of
our orthogonal complement,

00:04:38.000 --> 00:04:39.230
so this is going to
be equal to 0.

00:04:39.230 --> 00:04:43.750
So this is going to be c times
0, which is equal to 0.

00:04:43.750 --> 00:04:47.830
So this is also a member
of our orthogonal

00:04:47.830 --> 00:04:49.470
complement to V.

00:04:49.470 --> 00:04:52.730
And of course, I can multiply
c times 0 and I

00:04:52.730 --> 00:04:53.810
would get to 0.

00:04:53.810 --> 00:04:56.250
Or you could just say, look, 0
is orthogonal to everything.

00:04:56.250 --> 00:04:58.350
You take the zero vector, dot
it with anything, you're

00:04:58.350 --> 00:04:59.270
going to get 0.

00:04:59.270 --> 00:05:02.040
So the zero vector is always
going to be a member of any

00:05:02.040 --> 00:05:05.250
orthogonal complement, because
it obviously is always going

00:05:05.250 --> 00:05:07.570
to be true for this condition
right here.

00:05:07.570 --> 00:05:16.920
So we know that V perp, or the
orthogonal complement of V, is

00:05:16.920 --> 00:05:18.170
a subspace.

00:05:21.000 --> 00:05:24.040
Which is nice because now we
can apply to it all of the

00:05:24.040 --> 00:05:27.280
properties that we know
of subspaces.

00:05:27.280 --> 00:05:29.670
Now the next question, and I
touched on this in the last

00:05:29.670 --> 00:05:40.260
video, I said that if I have
some matrix A, and lets just

00:05:40.260 --> 00:05:42.820
say it's an m by n matrix.

00:05:42.820 --> 00:05:53.540
In the last video I said that
the row space of A is -- well,

00:05:53.540 --> 00:05:54.960
let me write this way.

00:05:54.960 --> 00:06:03.510
I wrote that the null space of
A is equal to the orthogonal

00:06:03.510 --> 00:06:25.570
complement of the
row space of A.

00:06:25.570 --> 00:06:28.290
And the way that we can write
the row space of A, this thing

00:06:28.290 --> 00:06:31.590
right here, the row space of
A, is the same thing as the

00:06:31.590 --> 00:06:35.510
column space of A transpose.

00:06:35.510 --> 00:06:39.180
So one way you can rewrite this
sentence right here, is

00:06:39.180 --> 00:06:44.710
that the null space of A is the
orthogonal complement of

00:06:44.710 --> 00:06:45.440
the row space.

00:06:45.440 --> 00:06:49.830
The row space is the column
space of the transpose matrix.

00:06:49.830 --> 00:06:52.810
And the claim, which I have
not proven to you, is that

00:06:52.810 --> 00:06:54.580
this is the orthogonal
complement of this.

00:06:54.580 --> 00:06:59.170
This is equal to that, the
little perpendicular

00:06:59.170 --> 00:07:00.450
superscript.

00:07:00.450 --> 00:07:03.770
That's the claim, and at least
in the particular example that

00:07:03.770 --> 00:07:06.160
I did in the last two videos
this was the case, where I

00:07:06.160 --> 00:07:08.580
actually showed you that
2 by 3 matrix.

00:07:08.580 --> 00:07:10.436
But let's see if this
applies generally.

00:07:13.780 --> 00:07:17.160
So let me write my matrix
A like this.

00:07:17.160 --> 00:07:19.270
So my matrix A, I can
write it as just a

00:07:19.270 --> 00:07:21.870
bunch of row vectors.

00:07:21.870 --> 00:07:26.260
But just to be consistent with
our notation, with vectors we

00:07:26.260 --> 00:07:31.240
tend to associate as column
vectors, so to represent the

00:07:31.240 --> 00:07:33.060
row vectors here I'm just
going to write them as

00:07:33.060 --> 00:07:34.530
transpose vectors.

00:07:34.530 --> 00:07:37.630
Because in our reality, vectors
will always be column

00:07:37.630 --> 00:07:40.520
vectors, and row vectors are
just transposes of those.

00:07:40.520 --> 00:07:46.720
r1 transpose, r2 transpose and
you go all the way down.

00:07:46.720 --> 00:07:47.830
We have m rows.

00:07:47.830 --> 00:07:52.300
So you're going to
get rm transpose.

00:07:52.300 --> 00:07:55.530
Don't let the transpose
part confuse you.

00:07:55.530 --> 00:07:58.690
I'm just saying that these
are row vectors.

00:07:58.690 --> 00:08:02.310
I'm writing transposes there
just to say that, look these

00:08:02.310 --> 00:08:04.710
are the transposes of
column vectors that

00:08:04.710 --> 00:08:06.230
represent these rows.

00:08:06.230 --> 00:08:09.530
But if it's helpful for you to
imagine them, just imagine

00:08:09.530 --> 00:08:13.050
this is the first row of the
matrix, this is the second row

00:08:13.050 --> 00:08:15.830
of that matrix, so
on and so forth.

00:08:15.830 --> 00:08:18.750
Now, what is the null
space of A?

00:08:18.750 --> 00:08:22.690
Well that's all of
the vectors here.

00:08:22.690 --> 00:08:24.350
Let me do it like this.

00:08:24.350 --> 00:08:31.660
The null space of A is all of
the vectors x that satisfy the

00:08:31.660 --> 00:08:36.230
equation that this is going to
be equal to the zero vector.

00:08:36.230 --> 00:08:38.610
Now to solve this equation,
what can we do?

00:08:38.610 --> 00:08:39.980
We've seen this multiple
times.

00:08:39.980 --> 00:08:44.340
This matrix-vector product is
essentially the same thing as

00:08:44.340 --> 00:08:50.710
saying-- let me write it like
this-- it's going to be equal

00:08:50.710 --> 00:08:52.970
to the zero vector in rm.

00:08:52.970 --> 00:08:57.980
You're going to have m 0's all
the way down to the m'th 0.

00:08:57.980 --> 00:09:00.640
So another way to write this
equation, you've seen it

00:09:00.640 --> 00:09:05.540
before, is when you take the
matrix-vector product, you

00:09:05.540 --> 00:09:07.550
essentially are taking
the dot product.

00:09:07.550 --> 00:09:12.100
So to get to this entry right
here, this entry right here is

00:09:12.100 --> 00:09:15.426
going to be this row dotted
with my vector x.

00:09:15.426 --> 00:09:21.320
So this is r1, we're calling
this row vector r1 transpose.

00:09:21.320 --> 00:09:23.640
This is the transpose of some
column vector that can

00:09:23.640 --> 00:09:25.040
represent that row.

00:09:25.040 --> 00:09:31.770
But that dot, dot my vector x,
this vector x is going to be

00:09:31.770 --> 00:09:33.730
equal to that 0.

00:09:33.730 --> 00:09:35.980
Now, if I take this guy-- let
me do it in a different

00:09:35.980 --> 00:09:40.190
color-- if I take this guy and
I dot him with vector x, it's

00:09:40.190 --> 00:09:42.190
going to be equal to that 0.

00:09:42.190 --> 00:09:49.060
So r2 transpose dot x is
going to be equal to

00:09:49.060 --> 00:09:50.440
that 0 right there.

00:09:53.960 --> 00:10:05.470
So, another way to write this
equation is that r1 transpose

00:10:05.470 --> 00:10:13.490
dot x is equal to 0, r2
transpose dot x is equal to 0,

00:10:13.490 --> 00:10:19.950
all the way down to rn transpose
dot x is equal to 0.

00:10:19.950 --> 00:10:28.070
And by definition the null space
of A is equal to all of

00:10:28.070 --> 00:10:33.710
the x's that are members of--
well in this case it's an m by

00:10:33.710 --> 00:10:36.250
n matrix, you're going to have
n columns-- so it's all the

00:10:36.250 --> 00:10:41.730
x's that are members of rn, such
that Ax is equal to 0.

00:10:41.730 --> 00:10:44.930
Or, you could alternately write
it this way: that if you

00:10:44.930 --> 00:10:47.720
were to dot each of the rows
with x, you're going to be

00:10:47.720 --> 00:10:49.830
equal to 0.

00:10:49.830 --> 00:10:53.150
So you could write it
this way, such that

00:10:53.150 --> 00:10:55.470
Ax is equal to 0.

00:10:55.470 --> 00:10:57.190
That's an easier way
to write it.

00:10:57.190 --> 00:10:59.220
So let's think about it.

00:10:59.220 --> 00:11:03.110
If someone is a member, if
by definition I give

00:11:03.110 --> 00:11:04.450
you some vector V.

00:11:08.950 --> 00:11:15.590
If I were to tell you that
V is a member of the

00:11:15.590 --> 00:11:18.280
null space of A.

00:11:18.280 --> 00:11:19.370
Let's call it V1.

00:11:19.370 --> 00:11:21.630
V1 is a member of
null space of A.

00:11:21.630 --> 00:11:24.800
That means it satisfies this
equation right here.

00:11:24.800 --> 00:11:27.410
That means A times
V is equal to 0.

00:11:27.410 --> 00:11:30.610
A times V is equal to 0 means
that when you dot each of

00:11:30.610 --> 00:11:34.070
these rows with V, you
get equal to 0.

00:11:34.070 --> 00:11:42.740
Or another way of saying that
is that V1 is orthogonal to

00:11:42.740 --> 00:11:47.060
all of these rows, to r1
transpose-- that's just the

00:11:47.060 --> 00:11:55.100
first row-- r2 transpose, all
the way to rm transpose.

00:11:55.100 --> 00:11:58.670
So this is orthogonal to all of
these guys, by definition,

00:11:58.670 --> 00:12:00.530
any member of the null space.

00:12:00.530 --> 00:12:04.880
Well, if you're orthogonal to
all of these members, all of

00:12:04.880 --> 00:12:08.110
these rows in your matrix,
you're also orthogonal to any

00:12:08.110 --> 00:12:09.630
linear combination of them.

00:12:25.340 --> 00:12:29.000
You can imagine, let's say that
we have some vector that

00:12:29.000 --> 00:12:31.830
is a linear combination of
these guys right here.

00:12:31.830 --> 00:12:49.480
So let's say vector w is equal
to some linear combination of

00:12:49.480 --> 00:12:51.280
these vectors right here.

00:12:51.280 --> 00:12:52.590
I wrote them as transposes,
just

00:12:52.590 --> 00:12:53.360
because they're row vectors.

00:12:53.360 --> 00:12:55.885
But I can just write them as
regular column vectors, just

00:12:55.885 --> 00:12:59.030
to show that w could be just
a regular column vector.

00:12:59.030 --> 00:13:07.210
So let's say w is equal to c1
times r1, plus c2 times r2,

00:13:07.210 --> 00:13:12.290
all the way to cm times rm.

00:13:12.290 --> 00:13:13.800
That's what w is equal to.

00:13:13.800 --> 00:13:16.383
So what happens when you take
V, which is a member of our

00:13:16.383 --> 00:13:19.400
null space, and you
dot it with w?

00:13:19.400 --> 00:13:24.750
So if you take V, and dot it
with w, it's going to be V

00:13:24.750 --> 00:13:28.060
dotted with each of these guys,
because our dot product

00:13:28.060 --> 00:13:29.370
has the distributive property.

00:13:29.370 --> 00:13:31.630
So if you dot V with each of
these guys, it's going to be

00:13:31.630 --> 00:13:35.750
equal to c1-- I'm just going
to take the scalar out-- c1

00:13:35.750 --> 00:13:47.100
times V dot r1, plus c2 times V
dot r2-- this is an r right

00:13:47.100 --> 00:13:51.130
here, not a V-- plus,
all the way to, plus

00:13:51.130 --> 00:13:56.030
cm times V dot rm.

00:13:56.030 --> 00:13:59.640
And we know, we already just
said, that V dot each of these

00:13:59.640 --> 00:14:01.435
r's are going to
be equal to 0.

00:14:01.435 --> 00:14:04.020
So all of these are going
to be equal to 0.

00:14:04.020 --> 00:14:06.700
So this whole expression is
going to be equal to 0.

00:14:06.700 --> 00:14:09.530
So if you have any vector that's
a linear combination of

00:14:09.530 --> 00:14:12.700
these row vectors, if you dot
it with any member of your

00:14:12.700 --> 00:14:15.590
null space, you're
going to get 0.

00:14:15.590 --> 00:14:19.840
So let me write this way, what
is any vector that's any

00:14:19.840 --> 00:14:21.630
linear combination
of these guys?

00:14:21.630 --> 00:14:24.150
Well, that's the span
of these guys.

00:14:24.150 --> 00:14:28.170
Or you could say that the row
space, that's the row space.

00:14:28.170 --> 00:14:33.360
So if w is a member of the row
space, which you can just

00:14:33.360 --> 00:14:39.920
represent as a column space of A
transpose, then we know that

00:14:39.920 --> 00:14:44.250
V is a member of
our null space.

00:14:44.250 --> 00:14:49.930
We know that V dot w is going
to be equal to 0, I just

00:14:49.930 --> 00:14:51.490
showed that to you
right there.

00:14:51.490 --> 00:14:56.390
So every member of our null
space is definitely orthogonal

00:14:56.390 --> 00:14:59.210
to every member of
our row space.

00:14:59.210 --> 00:15:01.240
So that's what we know so far.

00:15:01.240 --> 00:15:17.030
Every member of null space of
A is orthogonal to every

00:15:17.030 --> 00:15:27.970
member of the row space of A.

00:15:27.970 --> 00:15:29.390
Now, that only gets
us halfway.

00:15:29.390 --> 00:15:33.010
That still doesn't tell us that
this is equivalent to the

00:15:33.010 --> 00:15:35.530
orthogonal complement
of the null space.

00:15:35.530 --> 00:15:38.510
For example, there might be
members of our orthogonal

00:15:38.510 --> 00:15:43.820
complement of the row space that
aren't a member of our

00:15:43.820 --> 00:15:44.690
null space.

00:15:44.690 --> 00:15:51.710
So let's say that I have
some other vector u.

00:15:51.710 --> 00:16:01.160
Let's say that u is a member of
the orthogonal complement

00:16:01.160 --> 00:16:03.170
of our row space.

00:16:03.170 --> 00:16:05.110
I know the notation is a little
convoluted, maybe I

00:16:05.110 --> 00:16:06.080
should write an r there.

00:16:06.080 --> 00:16:09.470
But I want to really get set
into your mind that the row

00:16:09.470 --> 00:16:12.770
space is just the column
space of the transpose.

00:16:12.770 --> 00:16:16.090
Let's say that u is some member
of our orthogonal

00:16:16.090 --> 00:16:16.860
complement.

00:16:16.860 --> 00:16:18.990
What I want to do is show
you that u has to be

00:16:18.990 --> 00:16:19.750
in your null space.

00:16:19.750 --> 00:16:21.990
And when I show you that,
then we know.

00:16:21.990 --> 00:16:24.230
So far we just said that, OK
then, everything in the null

00:16:24.230 --> 00:16:27.810
space is orthogonal to the row
space, but we don't know that

00:16:27.810 --> 00:16:29.910
everything that's orthogonal
to the row space, which is

00:16:29.910 --> 00:16:32.230
represented by this set,
is also going to be

00:16:32.230 --> 00:16:32.970
in your null space.

00:16:32.970 --> 00:16:35.235
That's what we have to show, in
order for those two sets to

00:16:35.235 --> 00:16:37.230
be equivalent, in order
for the null space

00:16:37.230 --> 00:16:39.520
to be equal to this.

00:16:39.520 --> 00:16:49.990
So if we know this is true, then
this means that u dot w,

00:16:49.990 --> 00:16:58.670
where w is a member of our
row space, is going

00:16:58.670 --> 00:16:59.920
to be equal to 0.

00:17:02.950 --> 00:17:06.700
Let me write this down right
here, that is going to be

00:17:06.700 --> 00:17:08.030
equal to 0.

00:17:08.030 --> 00:17:09.329
And what does that mean?

00:17:09.329 --> 00:17:15.920
That means that u is
also orthogonal.

00:17:15.920 --> 00:17:24.440
So this implies that u dot--
well, r, j, any of the row

00:17:24.440 --> 00:17:32.330
vectors-- is also equal to 0,
where j is equal to 1, through

00:17:32.330 --> 00:17:33.890
all the way through m.

00:17:33.890 --> 00:17:35.090
How do I know that?

00:17:35.090 --> 00:17:38.090
Well, I'm saying that look, you
take u as a member of the

00:17:38.090 --> 00:17:41.850
orthogonal complement of the row
space, so that means u is

00:17:41.850 --> 00:17:44.170
orthogonal to any member
of your row space.

00:17:44.170 --> 00:17:46.960
So in particular the basis
vectors of your row space-- we

00:17:46.960 --> 00:17:50.810
don't know whether all of these
guys are basis vectors--

00:17:50.810 --> 00:17:53.380
these guys are definitely all
members of the row space.

00:17:53.380 --> 00:17:55.990
Some of them are actually the
basis for the row space.

00:17:55.990 --> 00:17:58.765
So that means if you take u dot
any of these guys, it's

00:17:58.765 --> 00:18:00.910
going to be equal to 0.

00:18:00.910 --> 00:18:06.240
So if u dot any of these guys is
equal to 0, that means that

00:18:06.240 --> 00:18:20.240
u dot r1 is 0, u dot r2 is equal
to 0, all the way to u

00:18:20.240 --> 00:18:23.460
dot rm is equal to 0.

00:18:23.460 --> 00:18:28.990
Well, if all of this is true,
that means that A times the

00:18:28.990 --> 00:18:31.280
vector u is equal to 0.

00:18:31.280 --> 00:18:32.860
That implies this, right?

00:18:32.860 --> 00:18:34.740
You stick u there, you take
all the dot products, it's

00:18:34.740 --> 00:18:36.410
going to satisfy
this equation.

00:18:36.410 --> 00:18:40.460
Which implies that u is a member
of our null space.

00:18:40.460 --> 00:18:42.750
So we've just shown you that
every member of your null

00:18:42.750 --> 00:18:46.020
space is definitely a member of
the orthogonal complement.

00:18:46.020 --> 00:18:47.760
And now we've said that every
member of our orthogonal

00:18:47.760 --> 00:18:49.900
complement is a member
of our null space.

00:18:52.590 --> 00:18:53.955
And actually I just noticed
that I made a

00:18:53.955 --> 00:18:54.785
slight error here.

00:18:54.785 --> 00:18:57.260
This dot product, I don't have
to write the transpose here,

00:18:57.260 --> 00:19:00.880
because we've defined our dot
product as the dot product of

00:19:00.880 --> 00:19:01.630
column vectors.

00:19:01.630 --> 00:19:03.680
So this is the transpose
of some column vectors.

00:19:03.680 --> 00:19:06.390
So you can un-transpose
it here and just

00:19:06.390 --> 00:19:07.250
take the dot product.

00:19:07.250 --> 00:19:08.540
Anyway, minor error there.

00:19:08.540 --> 00:19:12.130
But that diverts me from my main
takeaway, my punch line,

00:19:12.130 --> 00:19:13.230
the big picture.

00:19:13.230 --> 00:19:17.530
We now showed you, any member of
our null space is a member

00:19:17.530 --> 00:19:19.740
of the orthogonal complement.

00:19:19.740 --> 00:19:22.280
So we just showed you, this
first statement here is

00:19:22.280 --> 00:19:25.710
another way of saying, any
member of the null space-- or

00:19:25.710 --> 00:19:28.950
that the null space is a subset
of the orthogonal

00:19:28.950 --> 00:19:31.310
complement of the row space.

00:19:31.310 --> 00:19:33.570
So that's our row space, and
that's the orthogonal

00:19:33.570 --> 00:19:35.140
complement of our row space.

00:19:35.140 --> 00:19:42.360
And here we just showed that any
member of the orthogonal

00:19:42.360 --> 00:19:46.040
complement of our row space
is also a member

00:19:46.040 --> 00:19:47.900
of your null space.

00:19:47.900 --> 00:19:50.390
Well, if these two guys are
subsets of each other, they

00:19:50.390 --> 00:19:52.470
must be equal to each other.

00:19:52.470 --> 00:19:59.060
So we now know that the null
space of A is equal to the

00:19:59.060 --> 00:20:03.310
orthogonal complement of the row
space of A or the column

00:20:03.310 --> 00:20:05.270
space of A transpose.

00:20:05.270 --> 00:20:09.720
Now, I related the null space
with the row space.

00:20:09.720 --> 00:20:13.000
I could just as easily make a
bit of a substitution here.

00:20:13.000 --> 00:20:19.380
Let's say that A is
equal to some

00:20:19.380 --> 00:20:21.900
other matrix, B transpose.

00:20:21.900 --> 00:20:22.190
Right?

00:20:22.190 --> 00:20:24.190
It's going to be the transpose
of some matrix, you could

00:20:24.190 --> 00:20:25.620
transpose either way.

00:20:25.620 --> 00:20:27.010
So if I just make that
substitution

00:20:27.010 --> 00:20:28.220
here, what do we get?

00:20:28.220 --> 00:20:34.200
We get, the null space of B
transpose is equal to the

00:20:34.200 --> 00:20:39.380
column space of B transpose,
right?

00:20:39.380 --> 00:20:41.560
A transpose is B transpose
transposed.

00:20:41.560 --> 00:20:44.420
Let me get my parentheses
right.

00:20:44.420 --> 00:20:47.400
And then that thing's orthogonal
complement.

00:20:47.400 --> 00:20:49.510
So what is this equal to?

00:20:49.510 --> 00:20:52.280
The transpose of the transpose
is just equal to B.

00:20:52.280 --> 00:20:57.730
So I can write it as, the null
space of B transpose is equal

00:20:57.730 --> 00:21:02.190
to the orthogonal complement
of the column space of B.

00:21:06.150 --> 00:21:10.540
So just like this, we just show
that the left-- B and A

00:21:10.540 --> 00:21:12.470
are just arbitrary matrices.

00:21:12.470 --> 00:21:17.790
So this showed us that the null
space, sometimes it's

00:21:17.790 --> 00:21:24.150
nice to write in words,
is the orthogonal

00:21:24.150 --> 00:21:32.290
complement of row space.

00:21:32.290 --> 00:21:42.260
And this right here is showing
us, that the left null space

00:21:42.260 --> 00:21:45.090
which is just the same thing as
a null space of a transpose

00:21:45.090 --> 00:21:50.840
matrix, is equal to,
orthogonal-- I'll just

00:21:50.840 --> 00:21:58.610
shorthand it-- complement
of the column space.

00:21:58.610 --> 00:22:00.460
Which are two pretty
neat takeaways.

00:22:00.460 --> 00:22:03.310
We saw a particular example of
it a couple of videos ago, and

00:22:03.310 --> 00:22:05.460
now you see that it's true
for all matrices.

