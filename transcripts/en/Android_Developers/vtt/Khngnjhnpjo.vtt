WEBVTT
Kind: captions
Language: en

00:00:01.470 --> 00:00:08.537
[MUSIC PLAYING]

00:00:08.537 --> 00:00:10.120
TODD KERPELMAN: Hello
game developers,

00:00:10.120 --> 00:00:13.060
and welcome to yet another
exciting episode of "Game On!"

00:00:13.060 --> 00:00:14.230
I am Todd Kerpelman.

00:00:14.230 --> 00:00:17.220
I'm a developer advocate here
on the Google Play Games Team.

00:00:17.220 --> 00:00:19.630
And here with me
today is Wolff Dobson,

00:00:19.630 --> 00:00:23.150
developer programs engineer,
also on the Play Games Team.

00:00:23.150 --> 00:00:25.780
And he is here to talk about
one of my most favorite things

00:00:25.780 --> 00:00:28.420
in the whole wide world and
that is physics engines.

00:00:28.420 --> 00:00:30.250
So Wolff, why don't
you take it away?

00:00:30.250 --> 00:00:30.760
WOLFF DOBSON: Alright.

00:00:30.760 --> 00:00:32.740
So today we're going to
talk about Liquid Fun.

00:00:32.740 --> 00:00:35.140
This is our brand new open
source physics engine that

00:00:35.140 --> 00:00:37.880
we've just released
cross platform in C++.

00:00:37.880 --> 00:00:39.130
TODD KERPELMAN: Very exciting.

00:00:39.130 --> 00:00:40.010
WOLFF DOBSON: Mmhmm.

00:00:40.010 --> 00:00:43.434
So first thing we should talk
about is, where do you get it?

00:00:43.434 --> 00:00:45.100
And our producers
here have added a link

00:00:45.100 --> 00:00:46.410
that you can click
on that'll take you

00:00:46.410 --> 00:00:47.576
straight to our GitHub page.

00:00:50.660 --> 00:00:54.179
And in this little chat here
we're going to do an overview.

00:00:54.179 --> 00:00:55.970
We're going to do some
demos and we'll even

00:00:55.970 --> 00:00:59.060
talk about a little code.

00:00:59.060 --> 00:01:01.334
So, first, let's talk
about physics engines.

00:01:01.334 --> 00:01:03.250
TODD KERPELMAN: What's
a physics engine Wolff?

00:01:03.250 --> 00:01:04.560
WOLFF DOBSON: It's your
favorite thing in the world.

00:01:04.560 --> 00:01:05.700
TODD KERPELMAN:
Oh, that's right.

00:01:05.700 --> 00:01:06.460
WOLFF DOBSON: So,
a physics engine

00:01:06.460 --> 00:01:08.020
is the mathematical
simulation that

00:01:08.020 --> 00:01:10.390
helps you create procedural
animations filled

00:01:10.390 --> 00:01:11.950
with physical bodies.

00:01:11.950 --> 00:01:14.340
So in a game, you're
simulating per frame.

00:01:14.340 --> 00:01:17.980
And the system divides times
into little slices and updates

00:01:17.980 --> 00:01:20.720
on all the objects
each frame based

00:01:20.720 --> 00:01:22.530
on their positions
and velocities.

00:01:22.530 --> 00:01:24.540
So there are conflicts,
like collisions,

00:01:24.540 --> 00:01:26.700
then the system
resolves those safely.

00:01:26.700 --> 00:01:28.790
The most basic physics
simulation you can think of

00:01:28.790 --> 00:01:30.000
is actually "Pong."

00:01:30.000 --> 00:01:31.460
A single body,
it's moving around,

00:01:31.460 --> 00:01:33.100
bouncing off
against two paddles.

00:01:33.100 --> 00:01:33.670
TODD KERPELMAN: I
guess that's true.

00:01:33.670 --> 00:01:36.290
WOLFF DOBSON: This is obviously
a little bit more complicated.

00:01:36.290 --> 00:01:38.020
Liquid Fun, that
we're providing,

00:01:38.020 --> 00:01:39.770
is just a numerical simulation.

00:01:39.770 --> 00:01:42.250
We have a little simple
visualization, but in your game

00:01:42.250 --> 00:01:44.910
you're going to want to add art,
and sound, and story, and all

00:01:44.910 --> 00:01:45.580
the rest of that stuff.

00:01:45.580 --> 00:01:47.038
This is just the
mathematical part.

00:01:47.038 --> 00:01:49.610
TODD KERPELMAN: So like
in a model view controller

00:01:49.610 --> 00:01:51.440
kind of analogy, this
would be the model.

00:01:51.440 --> 00:01:53.895
This is telling you where
everything is in my game,

00:01:53.895 --> 00:01:56.520
but it would be up to my game to
actually take that information

00:01:56.520 --> 00:01:58.664
and turn that into
something on-screen

00:01:58.664 --> 00:02:00.080
that I would present
to my player.

00:02:00.080 --> 00:02:00.996
WOLFF DOBSON: Exactly.

00:02:00.996 --> 00:02:03.140
TODD KERPELMAN: Alright.

00:02:03.140 --> 00:02:06.317
WOLFF DOBSON: So, this
is a superset of Box2D.

00:02:06.317 --> 00:02:07.650
Box2D, I'm sure you've heard of.

00:02:07.650 --> 00:02:08.775
TODD KERPELMAN: Box2D, yes.

00:02:08.775 --> 00:02:15.460
It's a very popular 2D physics
engine developed by Erin Catto,

00:02:15.460 --> 00:02:17.634
I believe, and it's used
in just about any game

00:02:17.634 --> 00:02:18.800
out there that uses physics.

00:02:18.800 --> 00:02:20.000
I know "Angry Birds" uses it.

00:02:20.000 --> 00:02:21.850
WOLFF DOBSON: Anything with
2D physics has Box2D in it.

00:02:21.850 --> 00:02:22.940
TODD KERPELMAN: There's
a pretty good chance

00:02:22.940 --> 00:02:23.860
that it's using Box2D.

00:02:23.860 --> 00:02:25.510
WOLFF DOBSON: If
your game uses Box2D,

00:02:25.510 --> 00:02:27.590
you should be able to
drop this engine in

00:02:27.590 --> 00:02:29.450
and it will just work.

00:02:29.450 --> 00:02:34.880
So just as a view,
this is the typical--

00:02:34.880 --> 00:02:40.220
this is our typical
[? system ?] demo here

00:02:40.220 --> 00:02:42.809
that shows just rigid bodies
interacting with each other.

00:02:42.809 --> 00:02:44.350
TODD KERPELMAN: This
is demonstrating

00:02:44.350 --> 00:02:45.808
a lot of interesting
things, right.

00:02:45.808 --> 00:02:48.020
It's sort of demonstrating
first, gravity,

00:02:48.020 --> 00:02:50.510
and also momentum,
and I guess you'd

00:02:50.510 --> 00:02:52.350
see angular momentum if that--

00:02:52.350 --> 00:02:54.850
WOLFF DOBSON: Joints too
on the thing and motors

00:02:54.850 --> 00:02:55.600
turning the thing.

00:02:55.600 --> 00:02:57.760
But this is all very
standard Box2D stuff.

00:02:57.760 --> 00:03:01.310
The sort of special sauce
we're adding with Liquid Fun

00:03:01.310 --> 00:03:04.000
is, obviously, Particles.

00:03:04.000 --> 00:03:04.920
TODD KERPELMAN: Oooh.

00:03:04.920 --> 00:03:05.800
WOLFF DOBSON: Yes.

00:03:05.800 --> 00:03:08.900
So let's look at
some particle demos.

00:03:08.900 --> 00:03:10.320
This is a whole
bunch of particles

00:03:10.320 --> 00:03:12.897
and a giant rigid body slamming
into all those particles.

00:03:12.897 --> 00:03:13.730
TODD KERPELMAN: Wow.

00:03:13.730 --> 00:03:15.460
WOLFF DOBSON: Yeah,
that's a lot of particles.

00:03:15.460 --> 00:03:17.876
That's thousands and thousands
of particles running around

00:03:17.876 --> 00:03:18.550
inside there.

00:03:18.550 --> 00:03:20.320
And this is an
active simulation.

00:03:20.320 --> 00:03:24.030
So if I grab hold of this, I
can kind of swim through this

00:03:24.030 --> 00:03:26.020
and push these guys
out of the way.

00:03:26.020 --> 00:03:29.985
I can touch groups of particles
and throw them around.

00:03:29.985 --> 00:03:30.980
It's pretty cool.

00:03:30.980 --> 00:03:31.855
TODD KERPELMAN: Yeah.

00:03:31.855 --> 00:03:33.704
Because normally when
I think of particles,

00:03:33.704 --> 00:03:35.120
I think of them
used for, sort of,

00:03:35.120 --> 00:03:37.090
visual only effects,
like fire and smoke.

00:03:37.090 --> 00:03:39.430
But I guess what you're
saying is particles could also

00:03:39.430 --> 00:03:41.674
be used for generating
things that look like water.

00:03:41.674 --> 00:03:42.840
WOLFF DOBSON: Yeah, exactly.

00:03:42.840 --> 00:03:44.940
And these particles
are actually--

00:03:44.940 --> 00:03:47.460
and these particles can
interact with the entire rest

00:03:47.460 --> 00:03:48.744
of your physical system.

00:03:48.744 --> 00:03:50.160
This is your typical
wave machine.

00:03:50.160 --> 00:03:52.810
You can actually
see wave physics

00:03:52.810 --> 00:03:55.792
going back and forth
as it swims around.

00:03:55.792 --> 00:03:56.750
TODD KERPELMAN: Gotcha.

00:03:56.750 --> 00:03:59.490
And so, basically this
engine is simulating

00:03:59.490 --> 00:04:01.630
each of these thousands
of particles individually,

00:04:01.630 --> 00:04:06.210
and sort of, by grouping all
these behaviors together,

00:04:06.210 --> 00:04:08.250
you get something that
suddenly creates waves.

00:04:08.250 --> 00:04:09.180
WOLFF DOBSON: Yeah,
it looks like water.

00:04:09.180 --> 00:04:09.810
It's pretty neat.

00:04:09.810 --> 00:04:11.226
TODD KERPELMAN:
Yeah, that's cool.

00:04:13.800 --> 00:04:16.079
WOLFF DOBSON: So, as I
mentioned before, the engine is

00:04:16.079 --> 00:04:16.890
cross platform.

00:04:16.890 --> 00:04:18.680
It's written in C++.

00:04:18.680 --> 00:04:22.200
And we provided builds out
of the box for Android NDK,

00:04:22.200 --> 00:04:22.980
obviously.

00:04:22.980 --> 00:04:25.600
We also have Linux,
OSX, Windows,

00:04:25.600 --> 00:04:27.440
and people can feel
free to contribute

00:04:27.440 --> 00:04:30.030
to whatever other
platforms they want to add.

00:04:30.030 --> 00:04:30.260
TODD KERPELMAN: Gotcha.

00:04:30.260 --> 00:04:31.700
So there's a pretty good
chance I could add this

00:04:31.700 --> 00:04:32.897
to any mobile game I wanted.

00:04:32.897 --> 00:04:33.730
WOLFF DOBSON: Mmhmm.

00:04:33.730 --> 00:04:36.350
TODD KERPELMAN: Alright.

00:04:36.350 --> 00:04:38.632
WOLFF DOBSON: So, this is
kind of way out of scope,

00:04:38.632 --> 00:04:41.090
but we'll talk a little bit
about how physics engines work.

00:04:41.090 --> 00:04:45.740
So in a physics engine, you
basically create a world.

00:04:45.740 --> 00:04:48.390
You add some rigid bodies to it.

00:04:48.390 --> 00:04:49.990
So here, a circle
and a triangle.

00:04:49.990 --> 00:04:52.020
You might add some
joints to connect them.

00:04:52.020 --> 00:04:54.244
And then you step the
simulation forward.

00:04:54.244 --> 00:04:56.660
In this case, since there's
nothing supporting those guys,

00:04:56.660 --> 00:04:58.720
there's just going to fall.

00:04:58.720 --> 00:05:01.580
But again, the secret
sauce with Liquid Fun

00:05:01.580 --> 00:05:05.430
is that we're adding very
large numbers of particles that

00:05:05.430 --> 00:05:07.279
can interact with
these rigid bodies.

00:05:07.279 --> 00:05:08.070
TODD KERPELMAN: OK.

00:05:08.070 --> 00:05:11.410
So what makes a particle
different than a rigid body?

00:05:11.410 --> 00:05:16.830
WOLFF DOBSON: So particles are
the smallest unit of matter

00:05:16.830 --> 00:05:18.320
that can interact with things.

00:05:18.320 --> 00:05:21.920
They act like rigid bodies,
but they don't have rotation.

00:05:21.920 --> 00:05:24.180
So we consider them
uniform circles.

00:05:24.180 --> 00:05:29.790
And they are, sort of, packed
intelligently in the system

00:05:29.790 --> 00:05:32.440
so that they can be rendered
and simulated very quickly.

00:05:32.440 --> 00:05:33.360
TODD KERPELMAN: OK.

00:05:33.360 --> 00:05:34.500
WOLFF DOBSON: Rigid
bodies, basically,

00:05:34.500 --> 00:05:35.590
are going to be
slow and expensive,

00:05:35.590 --> 00:05:36.915
and particles are
small and cheap.

00:05:36.915 --> 00:05:37.706
TODD KERPELMAN: OK.

00:05:37.706 --> 00:05:40.210
So by basically placing a few
limitations on these things,

00:05:40.210 --> 00:05:41.610
the engine is then
able to render

00:05:41.610 --> 00:05:43.480
hundreds or thousands
of them at once.

00:05:43.480 --> 00:05:44.050
WOLFF DOBSON:
Thousands, definitely.

00:05:44.050 --> 00:05:45.261
TODD KERPELMAN: OK.

00:05:45.261 --> 00:05:46.760
WOLFF DOBSON: So
particles come with

00:05:46.760 --> 00:05:50.240
basic physical characteristics
like color, size, position,

00:05:50.240 --> 00:05:52.260
velocity.

00:05:52.260 --> 00:05:55.250
Color is for your reference
when you're rendering them.

00:05:55.250 --> 00:05:57.024
It doesn't actually
have any effect

00:05:57.024 --> 00:05:58.190
on the numerical simulation.

00:05:58.190 --> 00:05:58.540
TODD KERPELMAN: Gotcha.

00:05:58.540 --> 00:06:00.700
I can ping the model and
say, hey, what's this?

00:06:00.700 --> 00:06:02.910
WOLFF DOBSON: What
color is this?

00:06:02.910 --> 00:06:04.380
And then also, strength.

00:06:04.380 --> 00:06:07.492
So if you have particles that
are sort of stuck together,

00:06:07.492 --> 00:06:08.950
like viscous
particles, you can say

00:06:08.950 --> 00:06:11.620
how strong you want
that viscosity to be.

00:06:11.620 --> 00:06:13.492
TODD KERPELMAN: OK.

00:06:13.492 --> 00:06:14.950
WOLFF DOBSON: And
as noted, there's

00:06:14.950 --> 00:06:16.450
no rotation for particles.

00:06:16.450 --> 00:06:18.910
So if you rendered them
as little top hats,

00:06:18.910 --> 00:06:20.620
the top hats would
always be facing up

00:06:20.620 --> 00:06:22.619
even though
thousands of them are

00:06:22.619 --> 00:06:23.785
smacking against each other.

00:06:23.785 --> 00:06:24.150
TODD KERPELMAN: Gotcha.

00:06:24.150 --> 00:06:25.566
So as a general
rule, you probably

00:06:25.566 --> 00:06:27.590
don't want to render
them as something

00:06:27.590 --> 00:06:30.424
that-- where you would
notice it doesn't rotate.

00:06:30.424 --> 00:06:31.590
WOLFF DOBSON: Yeah, exactly.

00:06:31.590 --> 00:06:33.090
TODD KERPELMAN: In
fact, most likely

00:06:33.090 --> 00:06:35.480
I might apply some
sort of filter

00:06:35.480 --> 00:06:38.630
to not show the individual
particles, but kind of group

00:06:38.630 --> 00:06:41.030
them together so I might
see a big wave or something.

00:06:41.030 --> 00:06:43.470
WOLFF DOBSON: No, actually,
in these simulations,

00:06:43.470 --> 00:06:45.345
we're just sort of
rendering a gaussian spot.

00:06:45.345 --> 00:06:46.136
TODD KERPELMAN: OK.

00:06:46.136 --> 00:06:47.900
WOLFF DOBSON: And
as lots of them

00:06:47.900 --> 00:06:50.570
are-- as they sort of-- the
spot is a little bit bigger

00:06:50.570 --> 00:06:52.800
than the body, and as
they overlap each other,

00:06:52.800 --> 00:06:55.180
you get the sort of the areas
that look kind of solid.

00:06:55.180 --> 00:06:55.971
TODD KERPELMAN: OK.

00:06:58.155 --> 00:07:00.530
WOLFF DOBSON: So here's the
code for creating a particle.

00:07:00.530 --> 00:07:02.160
If you've used
Box2D before, this

00:07:02.160 --> 00:07:03.630
should seem really familiar.

00:07:03.630 --> 00:07:05.170
You create a particle Def.

00:07:05.170 --> 00:07:06.860
You can set some flags on it.

00:07:06.860 --> 00:07:10.050
And you can also set its
position and its velocity,

00:07:10.050 --> 00:07:11.760
but not its rotation.

00:07:11.760 --> 00:07:13.799
And then you tell
the world I'd like

00:07:13.799 --> 00:07:15.590
to create a particle
using this definition.

00:07:15.590 --> 00:07:17.520
TODD KERPELMAN: What does
elasticParticle there mean?

00:07:17.520 --> 00:07:18.936
WOLFF DOBSON: So
elastic particles

00:07:18.936 --> 00:07:20.180
are springy particles.

00:07:20.180 --> 00:07:22.560
They're particles that
are connected together

00:07:22.560 --> 00:07:23.239
like a jelly.

00:07:23.239 --> 00:07:24.530
We'll see one in just a minute.

00:07:24.530 --> 00:07:25.220
TODD KERPELMAN: Alright.

00:07:25.220 --> 00:07:27.303
WOLFF DOBSON: We'll see a
lot of elastic particles

00:07:27.303 --> 00:07:28.455
in just a minute.

00:07:28.455 --> 00:07:31.830
A particle group is created by
instancing sets of particles

00:07:31.830 --> 00:07:34.410
together in a shape.

00:07:34.410 --> 00:07:37.180
They're ways for you to create
and destroy lots of particles

00:07:37.180 --> 00:07:39.690
at the same time.

00:07:39.690 --> 00:07:41.680
So you can set all
the regular properties

00:07:41.680 --> 00:07:43.690
like velocity and position.

00:07:43.690 --> 00:07:46.890
But you can also add
the rotational angle

00:07:46.890 --> 00:07:48.890
if you have one
of these jellies.

00:07:48.890 --> 00:07:52.340
You can also set-- sorry,
you can rotate the shape

00:07:52.340 --> 00:07:54.210
and then you can set
the rotational velocity

00:07:54.210 --> 00:07:56.029
as well if you have
one of these jellies.

00:07:56.029 --> 00:07:58.070
TODD KERPELMAN: So particles
don't have rotation,

00:07:58.070 --> 00:08:00.860
but a particle group
does have a rotation.

00:08:00.860 --> 00:08:02.955
WOLFF DOBSON: If it's
an elastic one, yeah.

00:08:02.955 --> 00:08:04.131
TODD KERPELMAN: OK.

00:08:04.131 --> 00:08:04.630
I think.

00:08:04.630 --> 00:08:06.240
I think you're going to
need to show me a demo.

00:08:06.240 --> 00:08:07.680
WOLFF DOBSON: I think
we're going to show a demo.

00:08:07.680 --> 00:08:09.160
TODD KERPELMAN: Alright.

00:08:09.160 --> 00:08:12.880
WOLFF DOBSON: So creating
particle groups is,

00:08:12.880 --> 00:08:16.610
again, should feel pretty
familiar to Box2D people.

00:08:16.610 --> 00:08:19.050
You create a shape, You create
a particle group definition

00:08:19.050 --> 00:08:21.270
object, and then you
instance the group with that.

00:08:21.270 --> 00:08:21.770
So--

00:08:21.770 --> 00:08:23.686
TODD KERPELMAN: What
does the shape here mean?

00:08:23.686 --> 00:08:25.760
WOLFF DOBSON: A shape
is a Box2D primitive.

00:08:25.760 --> 00:08:27.409
So it's going to be a polygon.

00:08:27.409 --> 00:08:28.450
So you can make a circle.

00:08:28.450 --> 00:08:29.749
You can make a giant square.

00:08:29.749 --> 00:08:30.790
You can make it L-shaped.

00:08:30.790 --> 00:08:31.550
You can do whatever you want.

00:08:31.550 --> 00:08:32.789
TODD KERPELMAN: And is the
idea these particles have

00:08:32.789 --> 00:08:33.870
to fit into that shape?

00:08:36.456 --> 00:08:38.039
WOLFF DOBSON: It
will create particles

00:08:38.039 --> 00:08:41.500
with the density in the
shape that you specify.

00:08:41.500 --> 00:08:43.512
TODD KERPELMAN: Hmmm-- OK.

00:08:43.512 --> 00:08:45.130
I'm a little confused.

00:08:45.130 --> 00:08:46.935
Maybe you can go
through this code

00:08:46.935 --> 00:08:49.160
and let me know what you mean.

00:08:49.160 --> 00:08:51.400
WOLFF DOBSON: Right.

00:08:51.400 --> 00:08:53.350
So you can see here we
have the particle group

00:08:53.350 --> 00:08:55.030
definition and a shape.

00:08:55.030 --> 00:08:57.420
The shape is just a box.

00:08:57.420 --> 00:09:03.410
And then on the particle
group definition we're saying,

00:09:03.410 --> 00:09:05.000
look at this shape.

00:09:05.000 --> 00:09:07.500
We're setting some flags
on it-- its initial angle,

00:09:07.500 --> 00:09:09.940
its initial angular
velocity-- and that's

00:09:09.940 --> 00:09:13.510
the angle of the entire
shape that we're setting.

00:09:13.510 --> 00:09:18.347
And then we're instancing five
groups of these all at once.

00:09:18.347 --> 00:09:20.180
TODD KERPELMAN: So
you're creating-- I see--

00:09:20.180 --> 00:09:22.780
you're creating five groups of--

00:09:22.780 --> 00:09:25.811
WOLFF DOBSON: Of square
shaped particles.

00:09:25.811 --> 00:09:27.560
TODD KERPELMAN: But
then within these, you

00:09:27.560 --> 00:09:29.350
do need to, then,
create the particles

00:09:29.350 --> 00:09:31.222
that are attached
to these shapes?

00:09:31.222 --> 00:09:31.930
WOLFF DOBSON: No.

00:09:31.930 --> 00:09:34.250
When you say create particle
group, you just [whoomp],

00:09:34.250 --> 00:09:36.459
you instance all of these
particles at the same time.

00:09:36.459 --> 00:09:37.416
TODD KERPELMAN: Oh, OK.

00:09:37.416 --> 00:09:39.730
And so that's where the
shape definition comes in,

00:09:39.730 --> 00:09:41.950
is it's creating these
groups that-- these groups

00:09:41.950 --> 00:09:44.140
of particles that
essentially fill this shape.

00:09:44.140 --> 00:09:44.640
WOLFF DOBSON: Yeah.

00:09:44.640 --> 00:09:45.598
TODD KERPELMAN: Gotcha.

00:09:45.598 --> 00:09:48.420
And the density of
particles within that shape,

00:09:48.420 --> 00:09:50.447
is that something
that I would specify?

00:09:50.447 --> 00:09:52.530
WOLFF DOBSON: Yeah, you
can set the particle size.

00:09:52.530 --> 00:09:54.870
TODD KERPELMAN: OK.

00:09:54.870 --> 00:09:56.500
So I don't need to
have four nested--

00:09:56.500 --> 00:09:59.000
{four} {loops} that create all
these thousands of particles.

00:09:59.000 --> 00:10:00.208
WOLFF DOBSON: No, no, no, no.

00:10:00.208 --> 00:10:03.260
You just make a shape and it
will fill it with particles.

00:10:03.260 --> 00:10:04.810
TODD KERPELMAN: Well that
makes a whole lot more sense.

00:10:04.810 --> 00:10:05.310
Alright.

00:10:07.710 --> 00:10:10.850
WOLFF DOBSON: So if you want to
destroy particles as a group,

00:10:10.850 --> 00:10:11.770
it's pretty easy.

00:10:11.770 --> 00:10:15.702
This code example here
walks the entire list

00:10:15.702 --> 00:10:17.910
of groups in the world and
just destroys all of them.

00:10:17.910 --> 00:10:20.020
This would be like a
simulation shutdown step.

00:10:24.610 --> 00:10:27.590
The particles in the groups
can interact with each other,

00:10:27.590 --> 00:10:31.314
but then you can kill
the groups en masse.

00:10:31.314 --> 00:10:33.480
TODD KERPELMAN: So let's
say I have two groups here,

00:10:33.480 --> 00:10:37.072
and I mix them all together,
and they form this giant mess,

00:10:37.072 --> 00:10:39.530
I could then say kill group A
and, like, half my water will

00:10:39.530 --> 00:10:40.321
suddenly disappear.

00:10:40.321 --> 00:10:41.240
WOLFF DOBSON: Exactly.

00:10:41.240 --> 00:10:42.270
TODD KERPELMAN: Huh.

00:10:42.270 --> 00:10:43.700
So I guess you've got to
be careful about using

00:10:43.700 --> 00:10:46.110
that to make sure that that's
actually the side effect

00:10:46.110 --> 00:10:46.694
that you want.

00:10:46.694 --> 00:10:47.610
WOLFF DOBSON: Exactly.

00:10:47.610 --> 00:10:48.510
TODD KERPELMAN: OK.

00:10:48.510 --> 00:10:50.800
WOLFF DOBSON: Once you start
pouring liquids together,

00:10:50.800 --> 00:10:51.800
they become intermeshed.

00:10:51.800 --> 00:10:52.634
TODD KERPELMAN: Yes.

00:10:52.634 --> 00:10:55.049
WOLFF DOBSON: Particles have
a lot of different behaviors.

00:10:55.049 --> 00:10:56.982
By default, they operate
as a simple liquid,

00:10:56.982 --> 00:10:59.190
but you can add these new
particles, like elasticity,

00:10:59.190 --> 00:11:01.260
with flags.

00:11:01.260 --> 00:11:03.900
So let's share some demos here.

00:11:03.900 --> 00:11:04.870
TODD KERPELMAN: OK.

00:11:04.870 --> 00:11:07.580
WOLFF DOBSON: So first
I'm going to show you

00:11:07.580 --> 00:11:12.530
a set of particles
that are elastic.

00:11:12.530 --> 00:11:16.080
So here you can see they're
kind of acting like jelly.

00:11:16.080 --> 00:11:18.720
And if I grab any small
collection of particles

00:11:18.720 --> 00:11:21.380
and move them, the whole
body moves at the same time.

00:11:21.380 --> 00:11:21.740
TODD KERPELMAN: Gotcha.

00:11:21.740 --> 00:11:23.656
And I can see they're
trying to keep, sort of,

00:11:23.656 --> 00:11:24.722
their original shape.

00:11:24.722 --> 00:11:26.180
WOLFF DOBSON: But
they can still be

00:11:26.180 --> 00:11:28.110
deformed if I drop
objects on them.

00:11:28.110 --> 00:11:31.225
They're going to, sort
of, deform to accept that.

00:11:31.225 --> 00:11:32.600
TODD KERPELMAN:
And so these were

00:11:32.600 --> 00:11:34.080
created by particle groups.

00:11:34.080 --> 00:11:34.740
WOLFF DOBSON: Mmhmm, yeah.

00:11:34.740 --> 00:11:36.190
TODD KERPELMAN: One has
the shape that's a circle,

00:11:36.190 --> 00:11:37.898
the other has a shape
that's a rectangle.

00:11:37.898 --> 00:11:39.157
You've given them elasticity--

00:11:39.157 --> 00:11:39.990
WOLFF DOBSON: Right.

00:11:39.990 --> 00:11:42.800
TODD KERPELMAN: --Which means
that they are springy and they

00:11:42.800 --> 00:11:43.759
cannot be broken apart.

00:11:43.759 --> 00:11:44.591
WOLFF DOBSON: Right.

00:11:44.591 --> 00:11:45.460
TODD KERPELMAN: OK.

00:11:45.460 --> 00:11:46.835
So that would be
useful for like,

00:11:46.835 --> 00:11:49.650
if I wanted to create
bouncy balls or just fun

00:11:49.650 --> 00:11:51.290
looking jelly types of things.

00:11:51.290 --> 00:11:51.880
WOLFF DOBSON: Like this.

00:11:51.880 --> 00:11:52.170
TODD KERPELMAN: Yes.

00:11:52.170 --> 00:11:53.290
WOLFF DOBSON: Because
it's such a cool jelly.

00:11:53.290 --> 00:11:54.710
TODD KERPELMAN: And somehow
it's important for my game

00:11:54.710 --> 00:11:57.240
to make sure that this is still
one solid object, it doesn't

00:11:57.240 --> 00:11:58.220
get broken apart.

00:11:58.220 --> 00:11:58.590
WOLFF DOBSON: Right.

00:11:58.590 --> 00:11:59.210
TODD KERPELMAN: OK.

00:11:59.210 --> 00:12:00.626
WOLFF DOBSON: So
here's an example

00:12:00.626 --> 00:12:02.590
of particles that can color mix.

00:12:02.590 --> 00:12:07.530
So this is a regular fluid,
but as the particles brush

00:12:07.530 --> 00:12:11.780
against each other, it averages
their color as they rub.

00:12:11.780 --> 00:12:14.222
So you can see the
red and green turned

00:12:14.222 --> 00:12:15.430
into this yellow on the left.

00:12:15.430 --> 00:12:20.495
And If I kind of
mix these-- woops,

00:12:20.495 --> 00:12:23.380
I kind of spilled--
if I mix these,

00:12:23.380 --> 00:12:26.170
I can kind of bring
the green into the blue

00:12:26.170 --> 00:12:28.102
and get kind of a
uniform light blue.

00:12:28.102 --> 00:12:29.060
TODD KERPELMAN: Gotcha.

00:12:29.060 --> 00:12:30.940
And so these colors
basically mix just

00:12:30.940 --> 00:12:33.129
based on when they touch?

00:12:33.129 --> 00:12:33.920
WOLFF DOBSON: Yeah.

00:12:33.920 --> 00:12:35.760
TODD KERPELMAN: So
I could-- let's say,

00:12:35.760 --> 00:12:37.135
as a developer--
I could use this

00:12:37.135 --> 00:12:40.090
if I wanted to measure some
hot water and some cold water

00:12:40.090 --> 00:12:41.240
or something.

00:12:41.240 --> 00:12:42.970
I would just sort
of ping the color

00:12:42.970 --> 00:12:45.569
as a way to represent how
hot or cold these things are.

00:12:45.569 --> 00:12:46.360
WOLFF DOBSON: Sure.

00:12:46.360 --> 00:12:47.900
TODD KERPELMAN: OK.

00:12:47.900 --> 00:12:49.950
And so, I noticed these
break apart very easily.

00:12:49.950 --> 00:12:51.240
So these are not
elastic particles.

00:12:51.240 --> 00:12:52.115
WOLFF DOBSON: No, no.

00:12:52.115 --> 00:12:53.210
These are regular fluids.

00:12:53.210 --> 00:12:54.600
TODD KERPELMAN: OK.

00:12:54.600 --> 00:12:57.750
WOLFF DOBSON: And lastly, here
are some viscous fluids flowing

00:12:57.750 --> 00:13:01.070
through a maze, and then we
have a couple little pumps that

00:13:01.070 --> 00:13:03.185
are moving it back and forth.

00:13:03.185 --> 00:13:05.060
And you can see I'm
getting this sort of blob

00:13:05.060 --> 00:13:06.780
down here in the lower left.

00:13:06.780 --> 00:13:08.300
TODD KERPELMAN: Mmhmm.

00:13:08.300 --> 00:13:10.690
WOLFF DOBSON: And, also, if
you look up at the right,

00:13:10.690 --> 00:13:13.590
you can see I'm applying a
constant force to this pump,

00:13:13.590 --> 00:13:17.870
and it can't compress
this viscous fluid enough,

00:13:17.870 --> 00:13:19.159
so it bounces off of it.

00:13:19.159 --> 00:13:21.200
TODD KERPELMAN: Sort of
like real water, I guess.

00:13:21.200 --> 00:13:21.820
WOLFF DOBSON: Exactly.

00:13:21.820 --> 00:13:22.040
TODD KERPELMAN: Right.

00:13:22.040 --> 00:13:24.040
WOLFF DOBSON: And then
down here at bottom-- oh,

00:13:24.040 --> 00:13:27.180
there it fell by itself-- I can
use this to sort of pump water

00:13:27.180 --> 00:13:29.490
uphill.

00:13:29.490 --> 00:13:35.000
And knock this other
rigid body into the drain.

00:13:35.000 --> 00:13:36.560
TODD KERPELMAN:
And so, by saying

00:13:36.560 --> 00:13:38.520
these are viscous, what you're
basically saying is, like,

00:13:38.520 --> 00:13:40.320
these have some amount
of surface tension?

00:13:40.320 --> 00:13:40.840
WOLFF DOBSON: Mmhmm, yeah.

00:13:40.840 --> 00:13:41.340
[INTERPOSING VOICES]

00:13:41.340 --> 00:13:42.770
WOLFF DOBSON: [INAUDIBLE]
want to stick together.

00:13:42.770 --> 00:13:44.603
TODD KERPELMAN: This
gives me more realistic

00:13:44.603 --> 00:13:46.180
looking water than
if they were not.

00:13:46.180 --> 00:13:47.721
Like it would probably
look like sand

00:13:47.721 --> 00:13:49.610
if you did not have this
viscosity turned on?

00:13:49.610 --> 00:13:51.050
WOLFF DOBSON: Yeah.

00:13:51.050 --> 00:13:55.350
It would look more-- it
wouldn't go here as much.

00:13:55.350 --> 00:13:58.282
You would end up with as many
of these sort of big blobs.

00:13:58.282 --> 00:13:59.240
TODD KERPELMAN: Gotcha.

00:13:59.240 --> 00:14:01.411
And the more and more
viscous, the more and more you

00:14:01.411 --> 00:14:03.410
go from water to, like,
toothpaste or something.

00:14:03.410 --> 00:14:04.170
WOLFF DOBSON: Yeah, exactly.

00:14:04.170 --> 00:14:05.300
TODD KERPELMAN: Alright.

00:14:05.300 --> 00:14:07.415
Maybe maple syrup.

00:14:07.415 --> 00:14:09.540
I'm trying to think of
fluids with high viscosity--

00:14:09.540 --> 00:14:10.000
WOLFF DOBSON: Slime.

00:14:10.000 --> 00:14:10.260
TODD KERPELMAN: Yes.

00:14:10.260 --> 00:14:10.930
WOLFF DOBSON:
Something like that.

00:14:10.930 --> 00:14:12.290
TODD KERPELMAN: OK.

00:14:12.290 --> 00:14:14.530
WOLFF DOBSON: And we have
more particle behaviors

00:14:14.530 --> 00:14:18.900
besides even these, like
powder, and tensile, and wall,

00:14:18.900 --> 00:14:19.790
and things like that.

00:14:19.790 --> 00:14:20.895
TODD KERPELMAN:
What do those mean?

00:14:20.895 --> 00:14:21.880
What does powder mean?

00:14:21.880 --> 00:14:24.737
WOLFF DOBSON: So powder would
be something like smoke.

00:14:24.737 --> 00:14:27.070
It would be things-- it doesn't
stick to walls very well

00:14:27.070 --> 00:14:29.250
and it doesn't want to stick
to itself very much at all.

00:14:29.250 --> 00:14:30.010
So that's powder.

00:14:30.010 --> 00:14:33.030
You can read more about all
of these in the user manual

00:14:33.030 --> 00:14:34.970
that we have.

00:14:34.970 --> 00:14:38.910
And speaking of our user manual,
come on by to our GitHub page.

00:14:38.910 --> 00:14:39.510
Join us.

00:14:39.510 --> 00:14:40.860
We have a discussion group.

00:14:40.860 --> 00:14:43.220
And we have a
programmers manual,

00:14:43.220 --> 00:14:46.475
and we have an API reference,
and have all the source

00:14:46.475 --> 00:14:47.350
TODD KERPELMAN: Cool.

00:14:47.350 --> 00:14:49.180
So what's the license on this?

00:14:49.180 --> 00:14:50.400
You said it's open source?

00:14:50.400 --> 00:14:51.040
WOLFF DOBSON: It's open source.

00:14:51.040 --> 00:14:53.430
You can pull it into your game
right now, and publish it,

00:14:53.430 --> 00:14:54.430
and that would be great.

00:14:54.430 --> 00:14:55.430
TODD KERPELMAN: Awesome.

00:14:55.430 --> 00:14:57.720
Well that sounds like
a very useful thing.

00:14:57.720 --> 00:14:59.130
WOLFF DOBSON: Mmhmm.

00:14:59.130 --> 00:15:00.713
TODD KERPELMAN: Why
are we giving this

00:15:00.713 --> 00:15:02.000
to the world, Wolff?

00:15:02.000 --> 00:15:03.170
WOLFF DOBSON: Because we
want to make games better.

00:15:03.170 --> 00:15:03.930
TODD KERPELMAN: Oh.

00:15:03.930 --> 00:15:04.510
Well, that's a good idea.

00:15:04.510 --> 00:15:07.042
WOLFF DOBSON: We want to
make people's games awesome.

00:15:07.042 --> 00:15:09.500
TODD KERPELMAN: Alright, well
this seems like a good start.

00:15:09.500 --> 00:15:11.841
As someone who is a big
fan of physics games,

00:15:11.841 --> 00:15:13.590
I encourage you all
to take a look at this

00:15:13.590 --> 00:15:16.520
and start adding crazy-looking
jelly things to your game.

00:15:16.520 --> 00:15:19.661
There's probably a
whole world of water

00:15:19.661 --> 00:15:20.910
and jelly games that we just--

00:15:20.910 --> 00:15:22.390
WOLFF DOBSON: There's
a genre of jelly games.

00:15:22.390 --> 00:15:24.390
TODD KERPELMAN: --just
waiting to be discovered.

00:15:24.390 --> 00:15:27.272
And so maybe that will be you.

00:15:27.272 --> 00:15:28.480
Yeah, seriously check it out.

00:15:28.480 --> 00:15:31.210
I think physics engine I always
just find really interesting,

00:15:31.210 --> 00:15:35.330
because it's like a very
complicated system where you

00:15:35.330 --> 00:15:38.840
can have a lot of rich behavior
and create a lot of really

00:15:38.840 --> 00:15:41.430
interesting, rich puzzles,
but at the same time,

00:15:41.430 --> 00:15:43.195
a three-year-old
intuitively understands

00:15:43.195 --> 00:15:45.140
how everything in the
world is going to react.

00:15:45.140 --> 00:15:45.870
[INTERPOSING VOICES]

00:15:45.870 --> 00:15:47.420
TODD KERPELMAN: So I think it
makes for a really good game

00:15:47.420 --> 00:15:47.510
design.

00:15:47.510 --> 00:15:49.710
That's, I think, why there's
so many good physics-based game

00:15:49.710 --> 00:15:50.460
designs out there.

00:15:50.460 --> 00:15:53.519
WOLFF DOBSON: It's really a
sandbox for emergent gameplay.

00:15:53.519 --> 00:15:55.810
Unexpected things happen when
you put physics together,

00:15:55.810 --> 00:15:57.929
and that makes it
surprising and fun.

00:15:57.929 --> 00:16:00.220
TODD KERPELMAN: Or you could
really just make this wave

00:16:00.220 --> 00:16:02.150
machine, and I'd watch
that for several hours.

00:16:02.150 --> 00:16:04.071
WOLFF DOBSON: Yeah,
you get hooked just

00:16:04.071 --> 00:16:05.070
looking at these things.

00:16:05.070 --> 00:16:06.170
TODD KERPELMAN: So you said OSX.

00:16:06.170 --> 00:16:08.000
Can I make a screensaver
using this stuff?

00:16:08.000 --> 00:16:08.680
WOLFF DOBSON: If you want to.

00:16:08.680 --> 00:16:09.680
TODD KERPELMAN: Awesome.

00:16:09.680 --> 00:16:12.560
Alright, well I know what I'm
doing over the winter break.

00:16:12.560 --> 00:16:14.990
Alright, well thank you
everyone for joining us.

00:16:14.990 --> 00:16:17.281
Take a look at what we've
got at our GitHub page.

00:16:17.281 --> 00:16:18.780
I think it'll be
pretty interesting.

00:16:18.780 --> 00:16:23.130
And we will see you
all in a week or two.

00:16:23.130 --> 00:16:23.630
Bye.

00:16:23.630 --> 00:16:25.180
WOLFF DOBSON: Bye.

