WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:06.550
 
[Music]

00:00:06.550 --> 00:00:06.560
 
 

00:00:06.560 --> 00:00:08.839
 
let's get started

00:00:08.839 --> 00:00:08.849
let's get started
 

00:00:08.849 --> 00:00:10.730
let's get started
my name is Matthew I'm actually on the

00:00:10.730 --> 00:00:10.740
my name is Matthew I'm actually on the
 

00:00:10.740 --> 00:00:12.350
my name is Matthew I'm actually on the
Android studio platform team that means

00:00:12.350 --> 00:00:12.360
Android studio platform team that means
 

00:00:12.360 --> 00:00:14.030
Android studio platform team that means
I work on things like product stability

00:00:14.030 --> 00:00:14.040
I work on things like product stability
 

00:00:14.040 --> 00:00:18.019
I work on things like product stability
call integration and one of the most

00:00:18.019 --> 00:00:18.029
call integration and one of the most
 

00:00:18.029 --> 00:00:18.980
call integration and one of the most
exciting things that gets worked on

00:00:18.980 --> 00:00:18.990
exciting things that gets worked on
 

00:00:18.990 --> 00:00:20.750
exciting things that gets worked on
besides park stability is something

00:00:20.750 --> 00:00:20.760
besides park stability is something
 

00:00:20.760 --> 00:00:21.710
besides park stability is something
called androids and just knots what I'm

00:00:21.710 --> 00:00:21.720
called androids and just knots what I'm
 

00:00:21.720 --> 00:00:23.679
called androids and just knots what I'm
here to talk about you with you today so

00:00:23.679 --> 00:00:23.689
here to talk about you with you today so
 

00:00:23.689 --> 00:00:25.700
here to talk about you with you today so
Android lint is actually a very powerful

00:00:25.700 --> 00:00:25.710
Android lint is actually a very powerful
 

00:00:25.710 --> 00:00:27.019
Android lint is actually a very powerful
tool I think a lot of you already know

00:00:27.019 --> 00:00:27.029
tool I think a lot of you already know
 

00:00:27.029 --> 00:00:29.029
tool I think a lot of you already know
about it but you might not know all the

00:00:29.029 --> 00:00:29.039
about it but you might not know all the
 

00:00:29.039 --> 00:00:33.049
about it but you might not know all the
cool things I can do so despite the name

00:00:33.049 --> 00:00:33.059
cool things I can do so despite the name
 

00:00:33.059 --> 00:00:34.340
cool things I can do so despite the name
it's not just a linting tool it's

00:00:34.340 --> 00:00:34.350
it's not just a linting tool it's
 

00:00:34.350 --> 00:00:35.780
it's not just a linting tool it's
actually like a full-fledged static

00:00:35.780 --> 00:00:35.790
actually like a full-fledged static
 

00:00:35.790 --> 00:00:37.459
actually like a full-fledged static
analysis framework and it's really

00:00:37.459 --> 00:00:37.469
analysis framework and it's really
 

00:00:37.469 --> 00:00:38.540
analysis framework and it's really
powerful you can write your own checks

00:00:38.540 --> 00:00:38.550
powerful you can write your own checks
 

00:00:38.550 --> 00:00:39.590
powerful you can write your own checks
and I'm going to talk about that today

00:00:39.590 --> 00:00:39.600
and I'm going to talk about that today
 

00:00:39.600 --> 00:00:42.319
and I'm going to talk about that today
this talk is really for anyone kind of

00:00:42.319 --> 00:00:42.329
this talk is really for anyone kind of
 

00:00:42.329 --> 00:00:43.250
this talk is really for anyone kind of
really interested in programming

00:00:43.250 --> 00:00:43.260
really interested in programming
 

00:00:43.260 --> 00:00:46.549
really interested in programming
languages compilers static analysis it's

00:00:46.549 --> 00:00:46.559
languages compilers static analysis it's
 

00:00:46.559 --> 00:00:48.350
languages compilers static analysis it's
also for anyone who has had to deal with

00:00:48.350 --> 00:00:48.360
also for anyone who has had to deal with
 

00:00:48.360 --> 00:00:49.760
also for anyone who has had to deal with
bugs in the project so I think that

00:00:49.760 --> 00:00:49.770
bugs in the project so I think that
 

00:00:49.770 --> 00:00:51.500
bugs in the project so I think that
covers the rest of you oh yeah one last

00:00:51.500 --> 00:00:51.510
covers the rest of you oh yeah one last
 

00:00:51.510 --> 00:00:53.660
covers the rest of you oh yeah one last
thing I only have 20 minutes but there's

00:00:53.660 --> 00:00:53.670
thing I only have 20 minutes but there's
 

00:00:53.670 --> 00:00:55.100
thing I only have 20 minutes but there's
a lot of material so I'm gonna go kind

00:00:55.100 --> 00:00:55.110
a lot of material so I'm gonna go kind
 

00:00:55.110 --> 00:00:57.200
a lot of material so I'm gonna go kind
of fastest on these slides try to keep

00:00:57.200 --> 00:00:57.210
of fastest on these slides try to keep
 

00:00:57.210 --> 00:00:59.150
of fastest on these slides try to keep
up the good news is that at the end of

00:00:59.150 --> 00:00:59.160
up the good news is that at the end of
 

00:00:59.160 --> 00:01:00.260
up the good news is that at the end of
the day you can go home you can watch on

00:01:00.260 --> 00:01:00.270
the day you can go home you can watch on
 

00:01:00.270 --> 00:01:01.729
the day you can go home you can watch on
the house speed on YouTube and you

00:01:01.729 --> 00:01:01.739
the house speed on YouTube and you
 

00:01:01.739 --> 00:01:02.599
the house speed on YouTube and you
should build on Stan's phone with it

00:01:02.599 --> 00:01:02.609
should build on Stan's phone with it
 

00:01:02.609 --> 00:01:05.780
should build on Stan's phone with it
then all right let's get started

00:01:05.780 --> 00:01:05.790
then all right let's get started
 

00:01:05.790 --> 00:01:07.399
then all right let's get started
I'm gonna go actually fast now so let's

00:01:07.399 --> 00:01:07.409
I'm gonna go actually fast now so let's
 

00:01:07.409 --> 00:01:10.310
I'm gonna go actually fast now so let's
keep up all right so what are the

00:01:10.310 --> 00:01:10.320
keep up all right so what are the
 

00:01:10.320 --> 00:01:12.289
keep up all right so what are the
entrants like I said are you a lot of

00:01:12.289 --> 00:01:12.299
entrants like I said are you a lot of
 

00:01:12.299 --> 00:01:14.030
entrants like I said are you a lot of
you party already know even if you don't

00:01:14.030 --> 00:01:14.040
you party already know even if you don't
 

00:01:14.040 --> 00:01:15.800
you party already know even if you don't
know the name you actually do know what

00:01:15.800 --> 00:01:15.810
know the name you actually do know what
 

00:01:15.810 --> 00:01:16.910
know the name you actually do know what
enter lint is because it's the thing

00:01:16.910 --> 00:01:16.920
enter lint is because it's the thing
 

00:01:16.920 --> 00:01:18.560
enter lint is because it's the thing
that shows up warning messages in your

00:01:18.560 --> 00:01:18.570
that shows up warning messages in your
 

00:01:18.570 --> 00:01:19.760
that shows up warning messages in your
ID is saying hey you're doing something

00:01:19.760 --> 00:01:19.770
ID is saying hey you're doing something
 

00:01:19.770 --> 00:01:22.789
ID is saying hey you're doing something
wrong and so in some cases this is like

00:01:22.789 --> 00:01:22.799
wrong and so in some cases this is like
 

00:01:22.799 --> 00:01:24.170
wrong and so in some cases this is like
telling you hey Gradle might be out of

00:01:24.170 --> 00:01:24.180
telling you hey Gradle might be out of
 

00:01:24.180 --> 00:01:26.060
telling you hey Gradle might be out of
date you want to update it

00:01:26.060 --> 00:01:26.070
date you want to update it
 

00:01:26.070 --> 00:01:28.280
date you want to update it
or maybe you're not calling a super

00:01:28.280 --> 00:01:28.290
or maybe you're not calling a super
 

00:01:28.290 --> 00:01:29.600
or maybe you're not calling a super
method and a method that expects you to

00:01:29.600 --> 00:01:29.610
method and a method that expects you to
 

00:01:29.610 --> 00:01:31.730
method and a method that expects you to
do so and right in Android studio and

00:01:31.730 --> 00:01:31.740
do so and right in Android studio and
 

00:01:31.740 --> 00:01:33.319
do so and right in Android studio and
the ID it'll say hey there's some Co

00:01:33.319 --> 00:01:33.329
the ID it'll say hey there's some Co
 

00:01:33.329 --> 00:01:34.760
the ID it'll say hey there's some Co
here look suspicious maybe you want to

00:01:34.760 --> 00:01:34.770
here look suspicious maybe you want to
 

00:01:34.770 --> 00:01:36.890
here look suspicious maybe you want to
take a look and sometimes it's morning

00:01:36.890 --> 00:01:36.900
take a look and sometimes it's morning
 

00:01:36.900 --> 00:01:38.120
take a look and sometimes it's morning
sometimes it's errors that will actually

00:01:38.120 --> 00:01:38.130
sometimes it's errors that will actually
 

00:01:38.130 --> 00:01:43.789
sometimes it's errors that will actually
fail the build so some of you might not

00:01:43.789 --> 00:01:43.799
fail the build so some of you might not
 

00:01:43.799 --> 00:01:44.539
fail the build so some of you might not
know but it's actually a lot of

00:01:44.539 --> 00:01:44.549
know but it's actually a lot of
 

00:01:44.549 --> 00:01:46.700
know but it's actually a lot of
different ways to use enter Lintz first

00:01:46.700 --> 00:01:46.710
different ways to use enter Lintz first
 

00:01:46.710 --> 00:01:47.990
different ways to use enter Lintz first
one is on the fly which is what I just

00:01:47.990 --> 00:01:48.000
one is on the fly which is what I just
 

00:01:48.000 --> 00:01:49.310
one is on the fly which is what I just
mentioned where it's kind of in the ID

00:01:49.310 --> 00:01:49.320
mentioned where it's kind of in the ID
 

00:01:49.320 --> 00:01:50.899
mentioned where it's kind of in the ID
as its type being it shows error

00:01:50.899 --> 00:01:50.909
as its type being it shows error
 

00:01:50.909 --> 00:01:53.060
as its type being it shows error
messages right away you can also use

00:01:53.060 --> 00:01:53.070
messages right away you can also use
 

00:01:53.070 --> 00:01:54.289
messages right away you can also use
something called an inspector code this

00:01:54.289 --> 00:01:54.299
something called an inspector code this
 

00:01:54.299 --> 00:01:56.030
something called an inspector code this
is an action in Android studio where you

00:01:56.030 --> 00:01:56.040
is an action in Android studio where you
 

00:01:56.040 --> 00:01:57.649
is an action in Android studio where you
can run a batch analysis of your entire

00:01:57.649 --> 00:01:57.659
can run a batch analysis of your entire
 

00:01:57.659 --> 00:01:59.660
can run a batch analysis of your entire
project it's a really great way to kind

00:01:59.660 --> 00:01:59.670
project it's a really great way to kind
 

00:01:59.670 --> 00:02:01.819
project it's a really great way to kind
of audit your project for common common

00:02:01.819 --> 00:02:01.829
of audit your project for common common
 

00:02:01.829 --> 00:02:04.160
of audit your project for common common
errors and a related action called one

00:02:04.160 --> 00:02:04.170
errors and a related action called one
 

00:02:04.170 --> 00:02:05.600
errors and a related action called one
inspection by name so if you have a

00:02:05.600 --> 00:02:05.610
inspection by name so if you have a
 

00:02:05.610 --> 00:02:09.229
inspection by name so if you have a
particular bug in mind say you want to

00:02:09.229 --> 00:02:09.239
particular bug in mind say you want to
 

00:02:09.239 --> 00:02:11.210
particular bug in mind say you want to
find a lot of like thread annotation

00:02:11.210 --> 00:02:11.220
find a lot of like thread annotation
 

00:02:11.220 --> 00:02:12.540
find a lot of like thread annotation
violations

00:02:12.540 --> 00:02:12.550
violations
 

00:02:12.550 --> 00:02:14.430
violations
you can run that inspection by name kind

00:02:14.430 --> 00:02:14.440
you can run that inspection by name kind
 

00:02:14.440 --> 00:02:16.170
you can run that inspection by name kind
of audit your entire projects in one

00:02:16.170 --> 00:02:16.180
of audit your entire projects in one
 

00:02:16.180 --> 00:02:18.860
of audit your entire projects in one
batch analysis and look this one by one

00:02:18.860 --> 00:02:18.870
batch analysis and look this one by one
 

00:02:18.870 --> 00:02:20.850
batch analysis and look this one by one
some of you might not know actually

00:02:20.850 --> 00:02:20.860
some of you might not know actually
 

00:02:20.860 --> 00:02:22.200
some of you might not know actually
though that you can also run lint at the

00:02:22.200 --> 00:02:22.210
though that you can also run lint at the
 

00:02:22.210 --> 00:02:23.970
though that you can also run lint at the
command line for with Gradle so you just

00:02:23.970 --> 00:02:23.980
command line for with Gradle so you just
 

00:02:23.980 --> 00:02:25.890
command line for with Gradle so you just
something like Gradle lint debug that's

00:02:25.890 --> 00:02:25.900
something like Gradle lint debug that's
 

00:02:25.900 --> 00:02:28.230
something like Gradle lint debug that's
one of the tasks that we have it's kind

00:02:28.230 --> 00:02:28.240
one of the tasks that we have it's kind
 

00:02:28.240 --> 00:02:29.400
one of the tasks that we have it's kind
of the same thing it'll just do a batch

00:02:29.400 --> 00:02:29.410
of the same thing it'll just do a batch
 

00:02:29.410 --> 00:02:31.350
of the same thing it'll just do a batch
analysis for your entire project and the

00:02:31.350 --> 00:02:31.360
analysis for your entire project and the
 

00:02:31.360 --> 00:02:32.550
analysis for your entire project and the
really great thing about that is it'll

00:02:32.550 --> 00:02:32.560
really great thing about that is it'll
 

00:02:32.560 --> 00:02:35.430
really great thing about that is it'll
make a HTML and XML report so you can

00:02:35.430 --> 00:02:35.440
make a HTML and XML report so you can
 

00:02:35.440 --> 00:02:36.870
make a HTML and XML report so you can
parse the XML report if you want to do

00:02:36.870 --> 00:02:36.880
parse the XML report if you want to do
 

00:02:36.880 --> 00:02:38.550
parse the XML report if you want to do
something fancy with the results or you

00:02:38.550 --> 00:02:38.560
something fancy with the results or you
 

00:02:38.560 --> 00:02:39.870
something fancy with the results or you
can just take a look at the HTML report

00:02:39.870 --> 00:02:39.880
can just take a look at the HTML report
 

00:02:39.880 --> 00:02:44.880
can just take a look at the HTML report
and go through your you know warnings so

00:02:44.880 --> 00:02:44.890
and go through your you know warnings so
 

00:02:44.890 --> 00:02:46.980
and go through your you know warnings so
even if you know what any lint is I

00:02:46.980 --> 00:02:46.990
even if you know what any lint is I
 

00:02:46.990 --> 00:02:48.690
even if you know what any lint is I
really want to do a deep dive into kind

00:02:48.690 --> 00:02:48.700
really want to do a deep dive into kind
 

00:02:48.700 --> 00:02:50.310
really want to do a deep dive into kind
of the advanced use cases for four lanes

00:02:50.310 --> 00:02:50.320
of the advanced use cases for four lanes
 

00:02:50.320 --> 00:02:52.200
of the advanced use cases for four lanes
because it's a very powerful tool so

00:02:52.200 --> 00:02:52.210
because it's a very powerful tool so
 

00:02:52.210 --> 00:02:53.280
because it's a very powerful tool so
first I'm just gonna talk about

00:02:53.280 --> 00:02:53.290
first I'm just gonna talk about
 

00:02:53.290 --> 00:02:55.050
first I'm just gonna talk about
configuration kind of sounds boring but

00:02:55.050 --> 00:02:55.060
configuration kind of sounds boring but
 

00:02:55.060 --> 00:02:56.340
configuration kind of sounds boring but
it's actually really important for big

00:02:56.340 --> 00:02:56.350
it's actually really important for big
 

00:02:56.350 --> 00:02:57.540
it's actually really important for big
projects you want to make sure Android

00:02:57.540 --> 00:02:57.550
projects you want to make sure Android
 

00:02:57.550 --> 00:02:59.760
projects you want to make sure Android
lint is working for your project and for

00:02:59.760 --> 00:02:59.770
lint is working for your project and for
 

00:02:59.770 --> 00:03:01.800
lint is working for your project and for
your needs also going to talk about

00:03:01.800 --> 00:03:01.810
your needs also going to talk about
 

00:03:01.810 --> 00:03:03.840
your needs also going to talk about
annotations it's a really powerful way

00:03:03.840 --> 00:03:03.850
annotations it's a really powerful way
 

00:03:03.850 --> 00:03:06.090
annotations it's a really powerful way
to kind of markup your code to help lint

00:03:06.090 --> 00:03:06.100
to kind of markup your code to help lint
 

00:03:06.100 --> 00:03:08.370
to kind of markup your code to help lint
help you even more so kind of lint

00:03:08.370 --> 00:03:08.380
help you even more so kind of lint
 

00:03:08.380 --> 00:03:10.050
help you even more so kind of lint
automatically does as much as it can but

00:03:10.050 --> 00:03:10.060
automatically does as much as it can but
 

00:03:10.060 --> 00:03:12.120
automatically does as much as it can but
sometimes you need to tell it hey you

00:03:12.120 --> 00:03:12.130
sometimes you need to tell it hey you
 

00:03:12.130 --> 00:03:13.500
sometimes you need to tell it hey you
need to give it hints to help you even

00:03:13.500 --> 00:03:13.510
need to give it hints to help you even
 

00:03:13.510 --> 00:03:15.600
need to give it hints to help you even
more also gonna talk about lint

00:03:15.600 --> 00:03:15.610
more also gonna talk about lint
 

00:03:15.610 --> 00:03:16.770
more also gonna talk about lint
internals I'm really excited for this

00:03:16.770 --> 00:03:16.780
internals I'm really excited for this
 

00:03:16.780 --> 00:03:17.940
internals I'm really excited for this
part because I really want to give you a

00:03:17.940 --> 00:03:17.950
part because I really want to give you a
 

00:03:17.950 --> 00:03:20.040
part because I really want to give you a
good mental model for how work lint

00:03:20.040 --> 00:03:20.050
good mental model for how work lint
 

00:03:20.050 --> 00:03:22.110
good mental model for how work lint
works under the hood this will get you

00:03:22.110 --> 00:03:22.120
works under the hood this will get you
 

00:03:22.120 --> 00:03:24.810
works under the hood this will get you
set up for kind of realizing how

00:03:24.810 --> 00:03:24.820
set up for kind of realizing how
 

00:03:24.820 --> 00:03:26.760
set up for kind of realizing how
powerful of a tool it is and also for

00:03:26.760 --> 00:03:26.770
powerful of a tool it is and also for
 

00:03:26.770 --> 00:03:28.200
powerful of a tool it is and also for
writing your own custom in checks which

00:03:28.200 --> 00:03:28.210
writing your own custom in checks which
 

00:03:28.210 --> 00:03:29.430
writing your own custom in checks which
is actually the last step and that's

00:03:29.430 --> 00:03:29.440
is actually the last step and that's
 

00:03:29.440 --> 00:03:32.550
is actually the last step and that's
kind of the fun demo part all right so

00:03:32.550 --> 00:03:32.560
kind of the fun demo part all right so
 

00:03:32.560 --> 00:03:35.730
kind of the fun demo part all right so
let's talk about configuration the

00:03:35.730 --> 00:03:35.740
let's talk about configuration the
 

00:03:35.740 --> 00:03:37.530
let's talk about configuration the
easiest way to kind of see what lint is

00:03:37.530 --> 00:03:37.540
easiest way to kind of see what lint is
 

00:03:37.540 --> 00:03:39.240
easiest way to kind of see what lint is
capable of is to go in see you and your

00:03:39.240 --> 00:03:39.250
capable of is to go in see you and your
 

00:03:39.250 --> 00:03:41.820
capable of is to go in see you and your
studio open up preferences go to the

00:03:41.820 --> 00:03:41.830
studio open up preferences go to the
 

00:03:41.830 --> 00:03:44.370
studio open up preferences go to the
inspections window you'll kind of find a

00:03:44.370 --> 00:03:44.380
inspections window you'll kind of find a
 

00:03:44.380 --> 00:03:45.780
inspections window you'll kind of find a
heading that says lint and under there

00:03:45.780 --> 00:03:45.790
heading that says lint and under there
 

00:03:45.790 --> 00:03:47.580
heading that says lint and under there
you can see all of the inspections that

00:03:47.580 --> 00:03:47.590
you can see all of the inspections that
 

00:03:47.590 --> 00:03:50.370
you can see all of the inspections that
lint has there's actually hundreds and

00:03:50.370 --> 00:03:50.380
lint has there's actually hundreds and
 

00:03:50.380 --> 00:03:52.830
lint has there's actually hundreds and
most of them are enabled by default but

00:03:52.830 --> 00:03:52.840
most of them are enabled by default but
 

00:03:52.840 --> 00:03:53.790
most of them are enabled by default but
there's actually some that are not

00:03:53.790 --> 00:03:53.800
there's actually some that are not
 

00:03:53.800 --> 00:03:55.410
there's actually some that are not
checked by default and I encourage you

00:03:55.410 --> 00:03:55.420
checked by default and I encourage you
 

00:03:55.420 --> 00:03:56.760
checked by default and I encourage you
to kind of just explore these take a

00:03:56.760 --> 00:03:56.770
to kind of just explore these take a
 

00:03:56.770 --> 00:03:58.350
to kind of just explore these take a
look at them because some of these might

00:03:58.350 --> 00:03:58.360
look at them because some of these might
 

00:03:58.360 --> 00:03:59.730
look at them because some of these might
actually apply to your project even

00:03:59.730 --> 00:03:59.740
actually apply to your project even
 

00:03:59.740 --> 00:04:00.900
actually apply to your project even
though we don't enable button by default

00:04:00.900 --> 00:04:00.910
though we don't enable button by default
 

00:04:00.910 --> 00:04:02.880
though we don't enable button by default
a really good example of this is

00:04:02.880 --> 00:04:02.890
a really good example of this is
 

00:04:02.890 --> 00:04:03.840
a really good example of this is
something called call an

00:04:03.840 --> 00:04:03.850
something called call an
 

00:04:03.850 --> 00:04:05.970
something called call an
interoperability this is just a set of

00:04:05.970 --> 00:04:05.980
interoperability this is just a set of
 

00:04:05.980 --> 00:04:09.500
interoperability this is just a set of
checks that we created so that you can

00:04:09.500 --> 00:04:09.510
checks that we created so that you can
 

00:04:09.510 --> 00:04:12.000
checks that we created so that you can
call Java code from calling code and

00:04:12.000 --> 00:04:12.010
call Java code from calling code and
 

00:04:12.010 --> 00:04:12.600
call Java code from calling code and
vice versa

00:04:12.600 --> 00:04:12.610
vice versa
 

00:04:12.610 --> 00:04:14.250
vice versa
and if you do things that makes that

00:04:14.250 --> 00:04:14.260
and if you do things that makes that
 

00:04:14.260 --> 00:04:16.200
and if you do things that makes that
difficult then lint will actually warn

00:04:16.200 --> 00:04:16.210
difficult then lint will actually warn
 

00:04:16.210 --> 00:04:17.580
difficult then lint will actually warn
you right in the IDE like hey you might

00:04:17.580 --> 00:04:17.590
you right in the IDE like hey you might
 

00:04:17.590 --> 00:04:19.620
you right in the IDE like hey you might
wanna rename this function so that it's

00:04:19.620 --> 00:04:19.630
wanna rename this function so that it's
 

00:04:19.630 --> 00:04:22.820
wanna rename this function so that it's
easier to call from the other language

00:04:22.820 --> 00:04:22.830
easier to call from the other language
 

00:04:22.830 --> 00:04:24.360
easier to call from the other language
there's actually another way to

00:04:24.360 --> 00:04:24.370
there's actually another way to
 

00:04:24.370 --> 00:04:25.980
there's actually another way to
configure lint which is with

00:04:25.980 --> 00:04:25.990
configure lint which is with
 

00:04:25.990 --> 00:04:28.409
configure lint which is with
gradle so if you go and see your

00:04:28.409 --> 00:04:28.419
gradle so if you go and see your
 

00:04:28.419 --> 00:04:31.110
gradle so if you go and see your
build.gradle file you have this Android

00:04:31.110 --> 00:04:31.120
build.gradle file you have this Android
 

00:04:31.120 --> 00:04:33.990
build.gradle file you have this Android
block as you know but you can also add a

00:04:33.990 --> 00:04:34.000
block as you know but you can also add a
 

00:04:34.000 --> 00:04:36.390
block as you know but you can also add a
lint options block and there's some

00:04:36.390 --> 00:04:36.400
lint options block and there's some
 

00:04:36.400 --> 00:04:40.770
lint options block and there's some
really powerful options here so this

00:04:40.770 --> 00:04:40.780
really powerful options here so this
 

00:04:40.780 --> 00:04:41.850
really powerful options here so this
first option I'm going to go through a

00:04:41.850 --> 00:04:41.860
first option I'm going to go through a
 

00:04:41.860 --> 00:04:43.650
first option I'm going to go through a
few examples this first option here is a

00:04:43.650 --> 00:04:43.660
few examples this first option here is a
 

00:04:43.660 --> 00:04:46.050
few examples this first option here is a
really powerful tool anyone with a

00:04:46.050 --> 00:04:46.060
really powerful tool anyone with a
 

00:04:46.060 --> 00:04:47.969
really powerful tool anyone with a
really big project you really want to

00:04:47.969 --> 00:04:47.979
really big project you really want to
 

00:04:47.979 --> 00:04:49.560
really big project you really want to
pay attention to this so Allen's

00:04:49.560 --> 00:04:49.570
pay attention to this so Allen's
 

00:04:49.570 --> 00:04:52.740
pay attention to this so Allen's
baseline is just kind of like when you

00:04:52.740 --> 00:04:52.750
baseline is just kind of like when you
 

00:04:52.750 --> 00:04:55.050
baseline is just kind of like when you
add this to your options Lynch will take

00:04:55.050 --> 00:04:55.060
add this to your options Lynch will take
 

00:04:55.060 --> 00:04:56.670
add this to your options Lynch will take
a snapshot of all of the warnings and

00:04:56.670 --> 00:04:56.680
a snapshot of all of the warnings and
 

00:04:56.680 --> 00:04:57.810
a snapshot of all of the warnings and
errors you currently have in your

00:04:57.810 --> 00:04:57.820
errors you currently have in your
 

00:04:57.820 --> 00:04:59.760
errors you currently have in your
project and what this will do is they'll

00:04:59.760 --> 00:04:59.770
project and what this will do is they'll
 

00:04:59.770 --> 00:05:01.710
project and what this will do is they'll
give you a clean slate so you'll say

00:05:01.710 --> 00:05:01.720
give you a clean slate so you'll say
 

00:05:01.720 --> 00:05:03.029
give you a clean slate so you'll say
like hey I want to take a baseline at

00:05:03.029 --> 00:05:03.039
like hey I want to take a baseline at
 

00:05:03.039 --> 00:05:05.760
like hey I want to take a baseline at
this point of the project and forget

00:05:05.760 --> 00:05:05.770
this point of the project and forget
 

00:05:05.770 --> 00:05:07.589
this point of the project and forget
about all of the thousands of learnings

00:05:07.589 --> 00:05:07.599
about all of the thousands of learnings
 

00:05:07.599 --> 00:05:09.960
about all of the thousands of learnings
that I already have and then I only want

00:05:09.960 --> 00:05:09.970
that I already have and then I only want
 

00:05:09.970 --> 00:05:11.249
that I already have and then I only want
to look at new warnings and errors

00:05:11.249 --> 00:05:11.259
to look at new warnings and errors
 

00:05:11.259 --> 00:05:13.290
to look at new warnings and errors
coming in in new code that my team

00:05:13.290 --> 00:05:13.300
coming in in new code that my team
 

00:05:13.300 --> 00:05:15.300
coming in in new code that my team
checks in and this is kind of helps you

00:05:15.300 --> 00:05:15.310
checks in and this is kind of helps you
 

00:05:15.310 --> 00:05:17.040
checks in and this is kind of helps you
get a handle on like the massive amount

00:05:17.040 --> 00:05:17.050
get a handle on like the massive amount
 

00:05:17.050 --> 00:05:18.719
get a handle on like the massive amount
of code that you have and still be able

00:05:18.719 --> 00:05:18.729
of code that you have and still be able
 

00:05:18.729 --> 00:05:20.640
of code that you have and still be able
to have clean code going forward and

00:05:20.640 --> 00:05:20.650
to have clean code going forward and
 

00:05:20.650 --> 00:05:22.620
to have clean code going forward and
then when you have more time free time

00:05:22.620 --> 00:05:22.630
then when you have more time free time
 

00:05:22.630 --> 00:05:23.999
then when you have more time free time
you can go back and look at all the

00:05:23.999 --> 00:05:24.009
you can go back and look at all the
 

00:05:24.009 --> 00:05:26.790
you can go back and look at all the
baseline issues that lint has stashed

00:05:26.790 --> 00:05:26.800
baseline issues that lint has stashed
 

00:05:26.800 --> 00:05:30.750
baseline issues that lint has stashed
away once you do that so once you have a

00:05:30.750 --> 00:05:30.760
away once you do that so once you have a
 

00:05:30.760 --> 00:05:33.149
away once you do that so once you have a
clean slate either to a lint baseline or

00:05:33.149 --> 00:05:33.159
clean slate either to a lint baseline or
 

00:05:33.159 --> 00:05:34.379
clean slate either to a lint baseline or
because you have a new project and you

00:05:34.379 --> 00:05:34.389
because you have a new project and you
 

00:05:34.389 --> 00:05:36.390
because you have a new project and you
just want to say hey I want to have

00:05:36.390 --> 00:05:36.400
just want to say hey I want to have
 

00:05:36.400 --> 00:05:39.360
just want to say hey I want to have
clean code forever starting now you can

00:05:39.360 --> 00:05:39.370
clean code forever starting now you can
 

00:05:39.370 --> 00:05:41.040
clean code forever starting now you can
turn on warnings as errors I really

00:05:41.040 --> 00:05:41.050
turn on warnings as errors I really
 

00:05:41.050 --> 00:05:42.779
turn on warnings as errors I really
encourage you to try this out it might

00:05:42.779 --> 00:05:42.789
encourage you to try this out it might
 

00:05:42.789 --> 00:05:44.219
encourage you to try this out it might
not be for everyone but you kind of up

00:05:44.219 --> 00:05:44.229
not be for everyone but you kind of up
 

00:05:44.229 --> 00:05:46.439
not be for everyone but you kind of up
clean code definitely try to try to get

00:05:46.439 --> 00:05:46.449
clean code definitely try to try to get
 

00:05:46.449 --> 00:05:49.740
clean code definitely try to try to get
this to work for you and then like in

00:05:49.740 --> 00:05:49.750
this to work for you and then like in
 

00:05:49.750 --> 00:05:51.719
this to work for you and then like in
the last slide you can able specific

00:05:51.719 --> 00:05:51.729
the last slide you can able specific
 

00:05:51.729 --> 00:05:54.180
the last slide you can able specific
checks that are not on by default like

00:05:54.180 --> 00:05:54.190
checks that are not on by default like
 

00:05:54.190 --> 00:05:57.360
checks that are not on by default like
interoperability so some of you already

00:05:57.360 --> 00:05:57.370
interoperability so some of you already
 

00:05:57.370 --> 00:06:02.300
interoperability so some of you already
have this lens options block set up and

00:06:02.300 --> 00:06:02.310
have this lens options block set up and
 

00:06:02.310 --> 00:06:04.260
have this lens options block set up and
some more advanced things I want to talk

00:06:04.260 --> 00:06:04.270
some more advanced things I want to talk
 

00:06:04.270 --> 00:06:06.899
some more advanced things I want to talk
about is performance issues so one of

00:06:06.899 --> 00:06:06.909
about is performance issues so one of
 

00:06:06.909 --> 00:06:09.149
about is performance issues so one of
the reasons we have this lens options

00:06:09.149 --> 00:06:09.159
the reasons we have this lens options
 

00:06:09.159 --> 00:06:10.499
the reasons we have this lens options
block in Gradle is because a lot of

00:06:10.499 --> 00:06:10.509
block in Gradle is because a lot of
 

00:06:10.509 --> 00:06:12.360
block in Gradle is because a lot of
people run lint on their continuous

00:06:12.360 --> 00:06:12.370
people run lint on their continuous
 

00:06:12.370 --> 00:06:14.249
people run lint on their continuous
integration server and so they're

00:06:14.249 --> 00:06:14.259
integration server and so they're
 

00:06:14.259 --> 00:06:15.420
integration server and so they're
constantly checking their entire

00:06:15.420 --> 00:06:15.430
constantly checking their entire
 

00:06:15.430 --> 00:06:16.950
constantly checking their entire
application for lint warnings lint

00:06:16.950 --> 00:06:16.960
application for lint warnings lint
 

00:06:16.960 --> 00:06:18.689
application for lint warnings lint
there's maybe they even block presubmit

00:06:18.689 --> 00:06:18.699
there's maybe they even block presubmit
 

00:06:18.699 --> 00:06:20.879
there's maybe they even block presubmit
if you have a new warning that someone

00:06:20.879 --> 00:06:20.889
if you have a new warning that someone
 

00:06:20.889 --> 00:06:23.129
if you have a new warning that someone
just checked in but some people are kind

00:06:23.129 --> 00:06:23.139
just checked in but some people are kind
 

00:06:23.139 --> 00:06:25.439
just checked in but some people are kind
of concerned about performance so just a

00:06:25.439 --> 00:06:25.449
of concerned about performance so just a
 

00:06:25.449 --> 00:06:28.170
of concerned about performance so just a
few tips here real quick try to avoid

00:06:28.170 --> 00:06:28.180
few tips here real quick try to avoid
 

00:06:28.180 --> 00:06:30.749
few tips here real quick try to avoid
the checkout warnings option I know it's

00:06:30.749 --> 00:06:30.759
the checkout warnings option I know it's
 

00:06:30.759 --> 00:06:32.010
the checkout warnings option I know it's
really tempting I just told you how to

00:06:32.010 --> 00:06:32.020
really tempting I just told you how to
 

00:06:32.020 --> 00:06:35.190
really tempting I just told you how to
enable more checks but actually some of

00:06:35.190 --> 00:06:35.200
enable more checks but actually some of
 

00:06:35.200 --> 00:06:36.659
enable more checks but actually some of
the checks are off by defaults for

00:06:36.659 --> 00:06:36.669
the checks are off by defaults for
 

00:06:36.669 --> 00:06:38.650
the checks are off by defaults for
performance reasons for example so

00:06:38.650 --> 00:06:38.660
performance reasons for example so
 

00:06:38.660 --> 00:06:39.940
performance reasons for example so
if you took all warning it's like

00:06:39.940 --> 00:06:39.950
if you took all warning it's like
 

00:06:39.950 --> 00:06:42.190
if you took all warning it's like
because I oh man my my time to check the

00:06:42.190 --> 00:06:42.200
because I oh man my my time to check the
 

00:06:42.200 --> 00:06:44.410
because I oh man my my time to check the
project is doubled but be a little bit

00:06:44.410 --> 00:06:44.420
project is doubled but be a little bit
 

00:06:44.420 --> 00:06:45.550
project is doubled but be a little bit
more selective in the checks that you

00:06:45.550 --> 00:06:45.560
more selective in the checks that you
 

00:06:45.560 --> 00:06:51.070
more selective in the checks that you
turn on also try to avoid the Gradle

00:06:51.070 --> 00:06:51.080
turn on also try to avoid the Gradle
 

00:06:51.080 --> 00:06:53.410
turn on also try to avoid the Gradle
lint tasks there's it's actually a

00:06:53.410 --> 00:06:53.420
lint tasks there's it's actually a
 

00:06:53.420 --> 00:06:55.900
lint tasks there's it's actually a
parent task of multiple sub tasks one of

00:06:55.900 --> 00:06:55.910
parent task of multiple sub tasks one of
 

00:06:55.910 --> 00:06:57.490
parent task of multiple sub tasks one of
which is like lint debug or lint release

00:06:57.490 --> 00:06:57.500
which is like lint debug or lint release
 

00:06:57.500 --> 00:06:59.710
which is like lint debug or lint release
the the parent lint task will actually

00:06:59.710 --> 00:06:59.720
the the parent lint task will actually
 

00:06:59.720 --> 00:07:01.870
the the parent lint task will actually
run Lintz multiple times on our project

00:07:01.870 --> 00:07:01.880
run Lintz multiple times on our project
 

00:07:01.880 --> 00:07:03.700
run Lintz multiple times on our project
for each build variance and so that's

00:07:03.700 --> 00:07:03.710
for each build variance and so that's
 

00:07:03.710 --> 00:07:04.900
for each build variance and so that's
just a really simple gotchu that you

00:07:04.900 --> 00:07:04.910
just a really simple gotchu that you
 

00:07:04.910 --> 00:07:09.640
just a really simple gotchu that you
should try to avoid also if you can use

00:07:09.640 --> 00:07:09.650
should try to avoid also if you can use
 

00:07:09.650 --> 00:07:12.160
should try to avoid also if you can use
the ignore test sources option so by

00:07:12.160 --> 00:07:12.170
the ignore test sources option so by
 

00:07:12.170 --> 00:07:14.110
the ignore test sources option so by
default we already don't look at your

00:07:14.110 --> 00:07:14.120
default we already don't look at your
 

00:07:14.120 --> 00:07:17.890
default we already don't look at your
test sources for warnings there's the

00:07:17.890 --> 00:07:17.900
test sources for warnings there's the
 

00:07:17.900 --> 00:07:19.120
test sources for warnings there's the
theory being that you don't really care

00:07:19.120 --> 00:07:19.130
theory being that you don't really care
 

00:07:19.130 --> 00:07:23.470
theory being that you don't really care
about how clean your tests are but this

00:07:23.470 --> 00:07:23.480
about how clean your tests are but this
 

00:07:23.480 --> 00:07:24.700
about how clean your tests are but this
option will actually make us we don't

00:07:24.700 --> 00:07:24.710
option will actually make us we don't
 

00:07:24.710 --> 00:07:26.800
option will actually make us we don't
even parse your your test sources at all

00:07:26.800 --> 00:07:26.810
even parse your your test sources at all
 

00:07:26.810 --> 00:07:29.290
even parse your your test sources at all
and so presumably all of you have really

00:07:29.290 --> 00:07:29.300
and so presumably all of you have really
 

00:07:29.300 --> 00:07:32.200
and so presumably all of you have really
really well tested code so this option

00:07:32.200 --> 00:07:32.210
really well tested code so this option
 

00:07:32.210 --> 00:07:33.670
really well tested code so this option
will help with that and make things go

00:07:33.670 --> 00:07:33.680
will help with that and make things go
 

00:07:33.680 --> 00:07:35.430
will help with that and make things go
faster

00:07:35.430 --> 00:07:35.440
faster
 

00:07:35.440 --> 00:07:37.240
faster
all right let's switch gears a bit I

00:07:37.240 --> 00:07:37.250
all right let's switch gears a bit I
 

00:07:37.250 --> 00:07:38.880
all right let's switch gears a bit I
want to talk about annotations

00:07:38.880 --> 00:07:38.890
want to talk about annotations
 

00:07:38.890 --> 00:07:41.440
want to talk about annotations
annotations are a really powerful way to

00:07:41.440 --> 00:07:41.450
annotations are a really powerful way to
 

00:07:41.450 --> 00:07:46.450
annotations are a really powerful way to
just give lint hints for specific issues

00:07:46.450 --> 00:07:46.460
just give lint hints for specific issues
 

00:07:46.460 --> 00:07:49.120
just give lint hints for specific issues
that you want to look for so I'm just

00:07:49.120 --> 00:07:49.130
that you want to look for so I'm just
 

00:07:49.130 --> 00:07:50.830
that you want to look for so I'm just
gonna go for a few examples a lot of you

00:07:50.830 --> 00:07:50.840
gonna go for a few examples a lot of you
 

00:07:50.840 --> 00:07:51.910
gonna go for a few examples a lot of you
already know about the null ability

00:07:51.910 --> 00:07:51.920
already know about the null ability
 

00:07:51.920 --> 00:07:53.260
already know about the null ability
annotations hopefully to use this a lot

00:07:53.260 --> 00:07:53.270
annotations hopefully to use this a lot
 

00:07:53.270 --> 00:07:55.930
annotations hopefully to use this a lot
in Java and Colleen you don't need them

00:07:55.930 --> 00:07:55.940
in Java and Colleen you don't need them
 

00:07:55.940 --> 00:07:56.920
in Java and Colleen you don't need them
because it's kind of built into the

00:07:56.920 --> 00:07:56.930
because it's kind of built into the
 

00:07:56.930 --> 00:08:01.030
because it's kind of built into the
language but we also have really Android

00:08:01.030 --> 00:08:01.040
language but we also have really Android
 

00:08:01.040 --> 00:08:02.560
language but we also have really Android
specific annotations which you should

00:08:02.560 --> 00:08:02.570
specific annotations which you should
 

00:08:02.570 --> 00:08:04.270
specific annotations which you should
check out so there's one call the

00:08:04.270 --> 00:08:04.280
check out so there's one call the
 

00:08:04.280 --> 00:08:05.680
check out so there's one call the
requires permission you probably know

00:08:05.680 --> 00:08:05.690
requires permission you probably know
 

00:08:05.690 --> 00:08:06.730
requires permission you probably know
about this one too but it's just an

00:08:06.730 --> 00:08:06.740
about this one too but it's just an
 

00:08:06.740 --> 00:08:09.970
about this one too but it's just an
example where we kind of annotate

00:08:09.970 --> 00:08:09.980
example where we kind of annotate
 

00:08:09.980 --> 00:08:11.890
example where we kind of annotate
certain eight Android API is with

00:08:11.890 --> 00:08:11.900
certain eight Android API is with
 

00:08:11.900 --> 00:08:13.780
certain eight Android API is with
requires permission maybe you like to

00:08:13.780 --> 00:08:13.790
requires permission maybe you like to
 

00:08:13.790 --> 00:08:15.910
requires permission maybe you like to
set wallpaper permission and then lint

00:08:15.910 --> 00:08:15.920
set wallpaper permission and then lint
 

00:08:15.920 --> 00:08:17.830
set wallpaper permission and then lint
will actually kind of do some analysis

00:08:17.830 --> 00:08:17.840
will actually kind of do some analysis
 

00:08:17.840 --> 00:08:20.290
will actually kind of do some analysis
on the code that calls into this API and

00:08:20.290 --> 00:08:20.300
on the code that calls into this API and
 

00:08:20.300 --> 00:08:21.790
on the code that calls into this API and
say hey is the programmer actually

00:08:21.790 --> 00:08:21.800
say hey is the programmer actually
 

00:08:21.800 --> 00:08:23.160
say hey is the programmer actually
checking that they have this permission

00:08:23.160 --> 00:08:23.170
checking that they have this permission
 

00:08:23.170 --> 00:08:25.330
checking that they have this permission
if they don't then we can warn you like

00:08:25.330 --> 00:08:25.340
if they don't then we can warn you like
 

00:08:25.340 --> 00:08:27.280
if they don't then we can warn you like
hey it looks like you haven't checked

00:08:27.280 --> 00:08:27.290
hey it looks like you haven't checked
 

00:08:27.290 --> 00:08:28.660
hey it looks like you haven't checked
that you have this permission this might

00:08:28.660 --> 00:08:28.670
that you have this permission this might
 

00:08:28.670 --> 00:08:31.360
that you have this permission this might
crash at runtime and this this this

00:08:31.360 --> 00:08:31.370
crash at runtime and this this this
 

00:08:31.370 --> 00:08:35.430
crash at runtime and this this this
impacts users quite a bit there's also

00:08:35.430 --> 00:08:35.440
impacts users quite a bit there's also
 

00:08:35.440 --> 00:08:37.450
impacts users quite a bit there's also
one of my favorites

00:08:37.450 --> 00:08:37.460
one of my favorites
 

00:08:37.460 --> 00:08:39.730
one of my favorites
kind of annotations which is UI thread

00:08:39.730 --> 00:08:39.740
kind of annotations which is UI thread
 

00:08:39.740 --> 00:08:41.409
kind of annotations which is UI thread
and worker thread annotations I think

00:08:41.409 --> 00:08:41.419
and worker thread annotations I think
 

00:08:41.419 --> 00:08:43.000
and worker thread annotations I think
there is called thread annotations in

00:08:43.000 --> 00:08:43.010
there is called thread annotations in
 

00:08:43.010 --> 00:08:45.760
there is called thread annotations in
general these are really important

00:08:45.760 --> 00:08:45.770
general these are really important
 

00:08:45.770 --> 00:08:49.600
general these are really important
actually so a lot a big problem with

00:08:49.600 --> 00:08:49.610
actually so a lot a big problem with
 

00:08:49.610 --> 00:08:52.300
actually so a lot a big problem with
application development is you know a

00:08:52.300 --> 00:08:52.310
application development is you know a
 

00:08:52.310 --> 00:08:53.079
application development is you know a
lot of you

00:08:53.079 --> 00:08:53.089
lot of you
 

00:08:53.089 --> 00:08:54.879
lot of you
frameworks require that you only update

00:08:54.879 --> 00:08:54.889
frameworks require that you only update
 

00:08:54.889 --> 00:08:56.679
frameworks require that you only update
the UI on a single thread called the UI

00:08:56.679 --> 00:08:56.689
the UI on a single thread called the UI
 

00:08:56.689 --> 00:08:58.119
the UI on a single thread called the UI
thread and everything else has to be

00:08:58.119 --> 00:08:58.129
thread and everything else has to be
 

00:08:58.129 --> 00:08:59.230
thread and everything else has to be
done the background debts if you do

00:08:59.230 --> 00:08:59.240
done the background debts if you do
 

00:08:59.240 --> 00:09:01.329
done the background debts if you do
network requests if you're on background

00:09:01.329 --> 00:09:01.339
network requests if you're on background
 

00:09:01.339 --> 00:09:02.619
network requests if you're on background
thread because if you do it on the UI

00:09:02.619 --> 00:09:02.629
thread because if you do it on the UI
 

00:09:02.629 --> 00:09:04.569
thread because if you do it on the UI
thread you know the network requests

00:09:04.569 --> 00:09:04.579
thread you know the network requests
 

00:09:04.579 --> 00:09:06.699
thread you know the network requests
might block you'll freeze UI user will

00:09:06.699 --> 00:09:06.709
might block you'll freeze UI user will
 

00:09:06.709 --> 00:09:08.379
might block you'll freeze UI user will
be frustrated you might not even see a

00:09:08.379 --> 00:09:08.389
be frustrated you might not even see a
 

00:09:08.389 --> 00:09:11.290
be frustrated you might not even see a
crash report and it's really hard to

00:09:11.290 --> 00:09:11.300
crash report and it's really hard to
 

00:09:11.300 --> 00:09:12.549
crash report and it's really hard to
track down those issues so we have these

00:09:12.549 --> 00:09:12.559
track down those issues so we have these
 

00:09:12.559 --> 00:09:13.989
track down those issues so we have these
thread annotations where you can say hey

00:09:13.989 --> 00:09:13.999
thread annotations where you can say hey
 

00:09:13.999 --> 00:09:17.739
thread annotations where you can say hey
this method should only be called on the

00:09:17.739 --> 00:09:17.749
this method should only be called on the
 

00:09:17.749 --> 00:09:19.389
this method should only be called on the
UI thread or should only be called on a

00:09:19.389 --> 00:09:19.399
UI thread or should only be called on a
 

00:09:19.399 --> 00:09:22.299
UI thread or should only be called on a
worker thread and we have some analyses

00:09:22.299 --> 00:09:22.309
worker thread and we have some analyses
 

00:09:22.309 --> 00:09:24.910
worker thread and we have some analyses
to to track that down so I'm actually I

00:09:24.910 --> 00:09:24.920
to to track that down so I'm actually I
 

00:09:24.920 --> 00:09:27.579
to to track that down so I'm actually I
do a demo of these analyses

00:09:27.579 --> 00:09:27.589
do a demo of these analyses
 

00:09:27.589 --> 00:09:35.819
do a demo of these analyses
hopefully that's set up so switch over

00:09:35.819 --> 00:09:35.829
 
 

00:09:35.829 --> 00:09:38.079
 
we switch over to the demo perfect

00:09:38.079 --> 00:09:38.089
we switch over to the demo perfect
 

00:09:38.089 --> 00:09:38.679
we switch over to the demo perfect
awesome

00:09:38.679 --> 00:09:38.689
awesome
 

00:09:38.689 --> 00:09:42.699
awesome
so you should imagine I should have it

00:09:42.699 --> 00:09:42.709
so you should imagine I should have it
 

00:09:42.709 --> 00:09:44.160
so you should imagine I should have it
here I'm going to go through an example

00:09:44.160 --> 00:09:44.170
here I'm going to go through an example
 

00:09:44.170 --> 00:09:47.199
here I'm going to go through an example
this is just calling let's say we have a

00:09:47.199 --> 00:09:47.209
this is just calling let's say we have a
 

00:09:47.209 --> 00:09:48.009
this is just calling let's say we have a
function

00:09:48.009 --> 00:09:48.019
function
 

00:09:48.019 --> 00:09:53.069
function
oh it's screen is black you're right

00:09:53.069 --> 00:09:53.079
oh it's screen is black you're right
 

00:09:53.079 --> 00:09:54.220
oh it's screen is black you're right
awesome

00:09:54.220 --> 00:09:54.230
awesome
 

00:09:54.230 --> 00:09:56.350
awesome
let's good started so let's say wave

00:09:56.350 --> 00:09:56.360
let's good started so let's say wave
 

00:09:56.360 --> 00:09:59.079
let's good started so let's say wave
function called update UI obviously

00:09:59.079 --> 00:09:59.089
function called update UI obviously
 

00:09:59.089 --> 00:10:00.369
function called update UI obviously
expect this to be run on the UI thread

00:10:00.369 --> 00:10:00.379
expect this to be run on the UI thread
 

00:10:00.379 --> 00:10:01.629
expect this to be run on the UI thread
so maybe this is updating the user

00:10:01.629 --> 00:10:01.639
so maybe this is updating the user
 

00:10:01.639 --> 00:10:03.819
so maybe this is updating the user
interface whatever you want and then

00:10:03.819 --> 00:10:03.829
interface whatever you want and then
 

00:10:03.829 --> 00:10:05.079
interface whatever you want and then
let's say we also a function called

00:10:05.079 --> 00:10:05.089
let's say we also a function called
 

00:10:05.089 --> 00:10:06.579
let's say we also a function called
Network requests oh it's a really

00:10:06.579 --> 00:10:06.589
Network requests oh it's a really
 

00:10:06.589 --> 00:10:13.449
Network requests oh it's a really
contrived example and you know this does

00:10:13.449 --> 00:10:13.459
contrived example and you know this does
 

00:10:13.459 --> 00:10:15.939
contrived example and you know this does
some stuff all right

00:10:15.939 --> 00:10:15.949
some stuff all right
 

00:10:15.949 --> 00:10:21.819
some stuff all right
and unfortunately someone decided to

00:10:21.819 --> 00:10:21.829
and unfortunately someone decided to
 

00:10:21.829 --> 00:10:23.199
and unfortunately someone decided to
call a network request from the update

00:10:23.199 --> 00:10:23.209
call a network request from the update
 

00:10:23.209 --> 00:10:25.480
call a network request from the update
UI method so this is a problem right as

00:10:25.480 --> 00:10:25.490
UI method so this is a problem right as
 

00:10:25.490 --> 00:10:27.519
UI method so this is a problem right as
you can see there's no errors of warning

00:10:27.519 --> 00:10:27.529
you can see there's no errors of warning
 

00:10:27.529 --> 00:10:28.660
you can see there's no errors of warning
and starting issues like this is

00:10:28.660 --> 00:10:28.670
and starting issues like this is
 

00:10:28.670 --> 00:10:29.829
and starting issues like this is
actually really hard to track down in

00:10:29.829 --> 00:10:29.839
actually really hard to track down in
 

00:10:29.839 --> 00:10:32.199
actually really hard to track down in
general but if you know about these

00:10:32.199 --> 00:10:32.209
general but if you know about these
 

00:10:32.209 --> 00:10:34.210
general but if you know about these
thread annotations you can add the UI

00:10:34.210 --> 00:10:34.220
thread annotations you can add the UI
 

00:10:34.220 --> 00:10:36.220
thread annotations you can add the UI
thread here you can add to work with

00:10:36.220 --> 00:10:36.230
thread here you can add to work with
 

00:10:36.230 --> 00:10:38.110
thread here you can add to work with
thread annotation here and instantly

00:10:38.110 --> 00:10:38.120
thread annotation here and instantly
 

00:10:38.120 --> 00:10:40.329
thread annotation here and instantly
lint will say hey you're trying to make

00:10:40.329 --> 00:10:40.339
lint will say hey you're trying to make
 

00:10:40.339 --> 00:10:41.829
lint will say hey you're trying to make
a network request on a UI thread that

00:10:41.829 --> 00:10:41.839
a network request on a UI thread that
 

00:10:41.839 --> 00:10:44.189
a network request on a UI thread that
can freeze DUI you don't want to do that

00:10:44.189 --> 00:10:44.199
can freeze DUI you don't want to do that
 

00:10:44.199 --> 00:10:46.269
can freeze DUI you don't want to do that
so that's really really powerful I

00:10:46.269 --> 00:10:46.279
so that's really really powerful I
 

00:10:46.279 --> 00:10:48.879
so that's really really powerful I
really encourage you to use these now

00:10:48.879 --> 00:10:48.889
really encourage you to use these now
 

00:10:48.889 --> 00:10:50.139
really encourage you to use these now
you might be thinking hey like this is a

00:10:50.139 --> 00:10:50.149
you might be thinking hey like this is a
 

00:10:50.149 --> 00:10:51.429
you might be thinking hey like this is a
really contrived example this is too

00:10:51.429 --> 00:10:51.439
really contrived example this is too
 

00:10:51.439 --> 00:10:53.290
really contrived example this is too
simple actually what we have in our

00:10:53.290 --> 00:10:53.300
simple actually what we have in our
 

00:10:53.300 --> 00:10:56.079
simple actually what we have in our
application is the CY method that calls

00:10:56.079 --> 00:10:56.089
application is the CY method that calls
 

00:10:56.089 --> 00:10:59.259
application is the CY method that calls
the function foo maybe and then that

00:10:59.259 --> 00:10:59.269
the function foo maybe and then that
 

00:10:59.269 --> 00:11:01.329
the function foo maybe and then that
function calls something called bar and

00:11:01.329 --> 00:11:01.339
function calls something called bar and
 

00:11:01.339 --> 00:11:03.789
function calls something called bar and
then that bar function calls for network

00:11:03.789 --> 00:11:03.799
then that bar function calls for network
 

00:11:03.799 --> 00:11:05.949
then that bar function calls for network
requests there's just like multiple

00:11:05.949 --> 00:11:05.959
requests there's just like multiple
 

00:11:05.959 --> 00:11:06.790
requests there's just like multiple
layers of indirection

00:11:06.790 --> 00:11:06.800
layers of indirection
 

00:11:06.800 --> 00:11:08.290
layers of indirection
you're thinking oh like Linds can't help

00:11:08.290 --> 00:11:08.300
you're thinking oh like Linds can't help
 

00:11:08.300 --> 00:11:10.389
you're thinking oh like Linds can't help
us here right and as you can see it

00:11:10.389 --> 00:11:10.399
us here right and as you can see it
 

00:11:10.399 --> 00:11:12.309
us here right and as you can see it
cants right right it defaults because

00:11:12.309 --> 00:11:12.319
cants right right it defaults because
 

00:11:12.319 --> 00:11:14.319
cants right right it defaults because
for performance reasons we don't try to

00:11:14.319 --> 00:11:14.329
for performance reasons we don't try to
 

00:11:14.329 --> 00:11:16.509
for performance reasons we don't try to
do these advanced analyses but actually

00:11:16.509 --> 00:11:16.519
do these advanced analyses but actually
 

00:11:16.519 --> 00:11:19.059
do these advanced analyses but actually
we do have an analysis for this so I'm

00:11:19.059 --> 00:11:19.069
we do have an analysis for this so I'm
 

00:11:19.069 --> 00:11:23.199
we do have an analysis for this so I'm
going to show you an example of that you

00:11:23.199 --> 00:11:23.209
going to show you an example of that you
 

00:11:23.209 --> 00:11:25.780
going to show you an example of that you
can do run inspection by name

00:11:25.780 --> 00:11:25.790
can do run inspection by name
 

00:11:25.790 --> 00:11:27.879
can do run inspection by name
the the name of the instruction is

00:11:27.879 --> 00:11:27.889
the the name of the instruction is
 

00:11:27.889 --> 00:11:28.900
the the name of the instruction is
called the wrong thread and then

00:11:28.900 --> 00:11:28.910
called the wrong thread and then
 

00:11:28.910 --> 00:11:31.749
called the wrong thread and then
interpret interprocedural if you select

00:11:31.749 --> 00:11:31.759
interpret interprocedural if you select
 

00:11:31.759 --> 00:11:33.340
interpret interprocedural if you select
that it's like the scope will just say

00:11:33.340 --> 00:11:33.350
that it's like the scope will just say
 

00:11:33.350 --> 00:11:37.720
that it's like the scope will just say
module scope and bam it'll find the call

00:11:37.720 --> 00:11:37.730
module scope and bam it'll find the call
 

00:11:37.730 --> 00:11:41.739
module scope and bam it'll find the call
path from from foo - to barter network

00:11:41.739 --> 00:11:41.749
path from from foo - to barter network
 

00:11:41.749 --> 00:11:43.600
path from from foo - to barter network
request I know you can't see this every

00:11:43.600 --> 00:11:43.610
request I know you can't see this every
 

00:11:43.610 --> 00:11:44.889
request I know you can't see this every
message on here so let me copy it for

00:11:44.889 --> 00:11:44.899
message on here so let me copy it for
 

00:11:44.899 --> 00:11:50.410
message on here so let me copy it for
you and I'll remove the class names and

00:11:50.410 --> 00:11:50.420
you and I'll remove the class names and
 

00:11:50.420 --> 00:11:51.609
you and I'll remove the class names and
so you can see the error message shows

00:11:51.609 --> 00:11:51.619
so you can see the error message shows
 

00:11:51.619 --> 00:11:53.739
so you can see the error message shows
you hey you're starting update UI you're

00:11:53.739 --> 00:11:53.749
you hey you're starting update UI you're
 

00:11:53.749 --> 00:11:55.329
you hey you're starting update UI you're
going to fool your going to bar and then

00:11:55.329 --> 00:11:55.339
going to fool your going to bar and then
 

00:11:55.339 --> 00:11:56.829
going to fool your going to bar and then
they go into network request and that's

00:11:56.829 --> 00:11:56.839
they go into network request and that's
 

00:11:56.839 --> 00:11:58.869
they go into network request and that's
annotated with raka thread and that's an

00:11:58.869 --> 00:11:58.879
annotated with raka thread and that's an
 

00:11:58.879 --> 00:12:01.629
annotated with raka thread and that's an
issue all right let's go back to the

00:12:01.629 --> 00:12:01.639
issue all right let's go back to the
 

00:12:01.639 --> 00:12:05.350
issue all right let's go back to the
slides so please check those out that

00:12:05.350 --> 00:12:05.360
slides so please check those out that
 

00:12:05.360 --> 00:12:08.470
slides so please check those out that
analysis is off by default for the main

00:12:08.470 --> 00:12:08.480
analysis is off by default for the main
 

00:12:08.480 --> 00:12:09.999
analysis is off by default for the main
reason being performance it's trying to

00:12:09.999 --> 00:12:10.009
reason being performance it's trying to
 

00:12:10.009 --> 00:12:11.619
reason being performance it's trying to
do a whole program analysis it's a

00:12:11.619 --> 00:12:11.629
do a whole program analysis it's a
 

00:12:11.629 --> 00:12:13.449
do a whole program analysis it's a
pretty expensive so just you know use it

00:12:13.449 --> 00:12:13.459
pretty expensive so just you know use it
 

00:12:13.459 --> 00:12:15.309
pretty expensive so just you know use it
when you can just try it out and see if

00:12:15.309 --> 00:12:15.319
when you can just try it out and see if
 

00:12:15.319 --> 00:12:20.489
when you can just try it out and see if
it finds any bugs in application alright

00:12:20.489 --> 00:12:20.499
it finds any bugs in application alright
 

00:12:20.499 --> 00:12:24.030
it finds any bugs in application alright
so next time I talk about lint internals

00:12:24.030 --> 00:12:24.040
so next time I talk about lint internals
 

00:12:24.040 --> 00:12:29.379
so next time I talk about lint internals
this parts really cool so the way the

00:12:29.379 --> 00:12:29.389
this parts really cool so the way the
 

00:12:29.389 --> 00:12:32.199
this parts really cool so the way the
way lint works is it starts out with

00:12:32.199 --> 00:12:32.209
way lint works is it starts out with
 

00:12:32.209 --> 00:12:33.699
way lint works is it starts out with
parsing your source files so maybe have

00:12:33.699 --> 00:12:33.709
parsing your source files so maybe have
 

00:12:33.709 --> 00:12:36.579
parsing your source files so maybe have
some Java Cartland lying around kind of

00:12:36.579 --> 00:12:36.589
some Java Cartland lying around kind of
 

00:12:36.589 --> 00:12:38.769
some Java Cartland lying around kind of
bills the abstract syntax tree and the

00:12:38.769 --> 00:12:38.779
bills the abstract syntax tree and the
 

00:12:38.779 --> 00:12:39.699
bills the abstract syntax tree and the
first thing we do with that is we

00:12:39.699 --> 00:12:39.709
first thing we do with that is we
 

00:12:39.709 --> 00:12:41.650
first thing we do with that is we
actually wrap it in something called u

00:12:41.650 --> 00:12:41.660
actually wrap it in something called u
 

00:12:41.660 --> 00:12:43.600
actually wrap it in something called u
ast just stands for universal abstract

00:12:43.600 --> 00:12:43.610
ast just stands for universal abstract
 

00:12:43.610 --> 00:12:45.549
ast just stands for universal abstract
insect syntax tree if you've dealt with

00:12:45.549 --> 00:12:45.559
insect syntax tree if you've dealt with
 

00:12:45.559 --> 00:12:46.720
insect syntax tree if you've dealt with
these kind of things before that might

00:12:46.720 --> 00:12:46.730
these kind of things before that might
 

00:12:46.730 --> 00:12:50.769
these kind of things before that might
sound I'm pretty familiar but this step

00:12:50.769 --> 00:12:50.779
sound I'm pretty familiar but this step
 

00:12:50.779 --> 00:12:53.019
sound I'm pretty familiar but this step
is really important because it means

00:12:53.019 --> 00:12:53.029
is really important because it means
 

00:12:53.029 --> 00:12:55.150
is really important because it means
that when you write a check you don't

00:12:55.150 --> 00:12:55.160
that when you write a check you don't
 

00:12:55.160 --> 00:12:56.350
that when you write a check you don't
have to read it once and it works on

00:12:56.350 --> 00:12:56.360
have to read it once and it works on
 

00:12:56.360 --> 00:12:58.960
have to read it once and it works on
both Java and Collin and that's that's

00:12:58.960 --> 00:12:58.970
both Java and Collin and that's that's
 

00:12:58.970 --> 00:13:01.600
both Java and Collin and that's that's
really convenient actually and then when

00:13:01.600 --> 00:13:01.610
really convenient actually and then when
 

00:13:01.610 --> 00:13:03.220
really convenient actually and then when
you write a lint analysis you're

00:13:03.220 --> 00:13:03.230
you write a lint analysis you're
 

00:13:03.230 --> 00:13:04.479
you write a lint analysis you're
actually just operating directly on you

00:13:04.479 --> 00:13:04.489
actually just operating directly on you
 

00:13:04.489 --> 00:13:07.269
actually just operating directly on you
ast so when you write a yet Lynch check

00:13:07.269 --> 00:13:07.279
ast so when you write a yet Lynch check
 

00:13:07.279 --> 00:13:09.879
ast so when you write a yet Lynch check
you're just kind of scanning the you ast

00:13:09.879 --> 00:13:09.889
you're just kind of scanning the you ast
 

00:13:09.889 --> 00:13:11.499
you're just kind of scanning the you ast
for your source code you're looking for

00:13:11.499 --> 00:13:11.509
for your source code you're looking for
 

00:13:11.509 --> 00:13:12.789
for your source code you're looking for
method calls that you're interested in

00:13:12.789 --> 00:13:12.799
method calls that you're interested in
 

00:13:12.799 --> 00:13:14.019
method calls that you're interested in
you're looking in expressions that

00:13:14.019 --> 00:13:14.029
you're looking in expressions that
 

00:13:14.029 --> 00:13:15.909
you're looking in expressions that
you're interested in and that's how it

00:13:15.909 --> 00:13:15.919
you're interested in and that's how it
 

00:13:15.919 --> 00:13:17.799
you're interested in and that's how it
works it's also important to point out

00:13:17.799 --> 00:13:17.809
works it's also important to point out
 

00:13:17.809 --> 00:13:20.260
works it's also important to point out
lint actually works also on all

00:13:20.260 --> 00:13:20.270
lint actually works also on all
 

00:13:20.270 --> 00:13:21.880
lint actually works also on all
types of files so you can you can look

00:13:21.880 --> 00:13:21.890
types of files so you can you can look
 

00:13:21.890 --> 00:13:23.620
types of files so you can you can look
at Gradle files you can look at XML

00:13:23.620 --> 00:13:23.630
at Gradle files you can look at XML
 

00:13:23.630 --> 00:13:25.930
at Gradle files you can look at XML
files and resources this is actually

00:13:25.930 --> 00:13:25.940
files and resources this is actually
 

00:13:25.940 --> 00:13:27.160
files and resources this is actually
really powerful because it kind of gives

00:13:27.160 --> 00:13:27.170
really powerful because it kind of gives
 

00:13:27.170 --> 00:13:28.570
really powerful because it kind of gives
us a holistic view of your entire

00:13:28.570 --> 00:13:28.580
us a holistic view of your entire
 

00:13:28.580 --> 00:13:30.340
us a holistic view of your entire
application and we can provide a lot

00:13:30.340 --> 00:13:30.350
application and we can provide a lot
 

00:13:30.350 --> 00:13:32.050
application and we can provide a lot
more helpful of warning messages with

00:13:32.050 --> 00:13:32.060
more helpful of warning messages with
 

00:13:32.060 --> 00:13:36.040
more helpful of warning messages with
that a couple more points here so type

00:13:36.040 --> 00:13:36.050
that a couple more points here so type
 

00:13:36.050 --> 00:13:38.320
that a couple more points here so type
information is available it's not just

00:13:38.320 --> 00:13:38.330
information is available it's not just
 

00:13:38.330 --> 00:13:39.430
information is available it's not just
you're not just looking at text you

00:13:39.430 --> 00:13:39.440
you're not just looking at text you
 

00:13:39.440 --> 00:13:41.230
you're not just looking at text you
actually have the whole ast with type

00:13:41.230 --> 00:13:41.240
actually have the whole ast with type
 

00:13:41.240 --> 00:13:42.970
actually have the whole ast with type
information you do things like method

00:13:42.970 --> 00:13:42.980
information you do things like method
 

00:13:42.980 --> 00:13:44.370
information you do things like method
resolution you can do things like

00:13:44.370 --> 00:13:44.380
resolution you can do things like
 

00:13:44.380 --> 00:13:48.010
resolution you can do things like
examining the class hierarchy of the of

00:13:48.010 --> 00:13:48.020
examining the class hierarchy of the of
 

00:13:48.020 --> 00:13:49.870
examining the class hierarchy of the of
the class you're looking at that's

00:13:49.870 --> 00:13:49.880
the class you're looking at that's
 

00:13:49.880 --> 00:13:51.370
the class you're looking at that's
really important for preventing false

00:13:51.370 --> 00:13:51.380
really important for preventing false
 

00:13:51.380 --> 00:13:52.330
really important for preventing false
positives and just having really

00:13:52.330 --> 00:13:52.340
positives and just having really
 

00:13:52.340 --> 00:13:53.920
positives and just having really
powerful link checks that's kind of what

00:13:53.920 --> 00:13:53.930
powerful link checks that's kind of what
 

00:13:53.930 --> 00:13:57.580
powerful link checks that's kind of what
makes Lyn so so useful we also have

00:13:57.580 --> 00:13:57.590
makes Lyn so so useful we also have
 

00:13:57.590 --> 00:13:59.320
makes Lyn so so useful we also have
really tight integration with the IDE so

00:13:59.320 --> 00:13:59.330
really tight integration with the IDE so
 

00:13:59.330 --> 00:14:01.360
really tight integration with the IDE so
one of my favorite parts about lint is

00:14:01.360 --> 00:14:01.370
one of my favorite parts about lint is
 

00:14:01.370 --> 00:14:03.040
one of my favorite parts about lint is
that you know it actually does show you

00:14:03.040 --> 00:14:03.050
that you know it actually does show you
 

00:14:03.050 --> 00:14:05.110
that you know it actually does show you
the warning messages right in the IDE I

00:14:05.110 --> 00:14:05.120
the warning messages right in the IDE I
 

00:14:05.120 --> 00:14:06.520
the warning messages right in the IDE I
think that's critical because if you

00:14:06.520 --> 00:14:06.530
think that's critical because if you
 

00:14:06.530 --> 00:14:07.690
think that's critical because if you
don't have that then a lot of your

00:14:07.690 --> 00:14:07.700
don't have that then a lot of your
 

00:14:07.700 --> 00:14:09.250
don't have that then a lot of your
morning messages would just be lost in

00:14:09.250 --> 00:14:09.260
morning messages would just be lost in
 

00:14:09.260 --> 00:14:11.020
morning messages would just be lost in
some build up but somewhere and it

00:14:11.020 --> 00:14:11.030
some build up but somewhere and it
 

00:14:11.030 --> 00:14:14.620
some build up but somewhere and it
wouldn't be useful to most people so

00:14:14.620 --> 00:14:14.630
wouldn't be useful to most people so
 

00:14:14.630 --> 00:14:15.880
wouldn't be useful to most people so
with that we're gonna move into writing

00:14:15.880 --> 00:14:15.890
with that we're gonna move into writing
 

00:14:15.890 --> 00:14:17.380
with that we're gonna move into writing
custom lint checks and what this means

00:14:17.380 --> 00:14:17.390
custom lint checks and what this means
 

00:14:17.390 --> 00:14:19.330
custom lint checks and what this means
is that you know Android lint is

00:14:19.330 --> 00:14:19.340
is that you know Android lint is
 

00:14:19.340 --> 00:14:20.830
is that you know Android lint is
actually a framework you can write your

00:14:20.830 --> 00:14:20.840
actually a framework you can write your
 

00:14:20.840 --> 00:14:22.510
actually a framework you can write your
own lint checks if you're something that

00:14:22.510 --> 00:14:22.520
own lint checks if you're something that
 

00:14:22.520 --> 00:14:26.200
own lint checks if you're something that
annoys you like either a common bug that

00:14:26.200 --> 00:14:26.210
annoys you like either a common bug that
 

00:14:26.210 --> 00:14:28.600
annoys you like either a common bug that
you run into you and your team or just

00:14:28.600 --> 00:14:28.610
you run into you and your team or just
 

00:14:28.610 --> 00:14:29.860
you run into you and your team or just
something that you want your colleagues

00:14:29.860 --> 00:14:29.870
something that you want your colleagues
 

00:14:29.870 --> 00:14:30.970
something that you want your colleagues
to watch out for you can write your own

00:14:30.970 --> 00:14:30.980
to watch out for you can write your own
 

00:14:30.980 --> 00:14:32.410
to watch out for you can write your own
Lin check you can upload it to your

00:14:32.410 --> 00:14:32.420
Lin check you can upload it to your
 

00:14:32.420 --> 00:14:34.300
Lin check you can upload it to your
codebase and all your colleagues will

00:14:34.300 --> 00:14:34.310
codebase and all your colleagues will
 

00:14:34.310 --> 00:14:37.960
codebase and all your colleagues will
see it any ID things highlighted quick

00:14:37.960 --> 00:14:37.970
see it any ID things highlighted quick
 

00:14:37.970 --> 00:14:39.490
see it any ID things highlighted quick
note here lint actually has an unstable

00:14:39.490 --> 00:14:39.500
note here lint actually has an unstable
 

00:14:39.500 --> 00:14:42.730
note here lint actually has an unstable
API all this means is that we don't

00:14:42.730 --> 00:14:42.740
API all this means is that we don't
 

00:14:42.740 --> 00:14:45.280
API all this means is that we don't
promise that we keep it the same from

00:14:45.280 --> 00:14:45.290
promise that we keep it the same from
 

00:14:45.290 --> 00:14:48.220
promise that we keep it the same from
release to release the good news is that

00:14:48.220 --> 00:14:48.230
release to release the good news is that
 

00:14:48.230 --> 00:14:50.200
release to release the good news is that
it's not changing too often but no

00:14:50.200 --> 00:14:50.210
it's not changing too often but no
 

00:14:50.210 --> 00:14:52.180
it's not changing too often but no
promises the other good news is that

00:14:52.180 --> 00:14:52.190
promises the other good news is that
 

00:14:52.190 --> 00:14:53.710
promises the other good news is that
unstable API is not really fun to play

00:14:53.710 --> 00:14:53.720
unstable API is not really fun to play
 

00:14:53.720 --> 00:14:57.130
unstable API is not really fun to play
with so all right and with that we're

00:14:57.130 --> 00:14:57.140
with so all right and with that we're
 

00:14:57.140 --> 00:14:59.860
with so all right and with that we're
gonna move into the demo so let's switch

00:14:59.860 --> 00:14:59.870
gonna move into the demo so let's switch
 

00:14:59.870 --> 00:15:00.940
gonna move into the demo so let's switch
over awesome

00:15:00.940 --> 00:15:00.950
over awesome
 

00:15:00.950 --> 00:15:05.650
over awesome
much faster this time all right so don't

00:15:05.650 --> 00:15:05.660
much faster this time all right so don't
 

00:15:05.660 --> 00:15:08.620
much faster this time all right so don't
bother reading code too much the example

00:15:08.620 --> 00:15:08.630
bother reading code too much the example
 

00:15:08.630 --> 00:15:11.200
bother reading code too much the example
I want to set up here is that you see

00:15:11.200 --> 00:15:11.210
I want to set up here is that you see
 

00:15:11.210 --> 00:15:12.460
I want to set up here is that you see
that your colleagues are maybe calling

00:15:12.460 --> 00:15:12.470
that your colleagues are maybe calling
 

00:15:12.470 --> 00:15:15.040
that your colleagues are maybe calling
thread yields pretty often and if you

00:15:15.040 --> 00:15:15.050
thread yields pretty often and if you
 

00:15:15.050 --> 00:15:16.120
thread yields pretty often and if you
look at the documentation for the thread

00:15:16.120 --> 00:15:16.130
look at the documentation for the thread
 

00:15:16.130 --> 00:15:18.250
look at the documentation for the thread
yield it's actually not a very useful

00:15:18.250 --> 00:15:18.260
yield it's actually not a very useful
 

00:15:18.260 --> 00:15:19.390
yield it's actually not a very useful
method I mean you know if you're writing

00:15:19.390 --> 00:15:19.400
method I mean you know if you're writing
 

00:15:19.400 --> 00:15:20.890
method I mean you know if you're writing
very advanced concurrent data structures

00:15:20.890 --> 00:15:20.900
very advanced concurrent data structures
 

00:15:20.900 --> 00:15:23.110
very advanced concurrent data structures
maybe it's useful but in other cases you

00:15:23.110 --> 00:15:23.120
maybe it's useful but in other cases you
 

00:15:23.120 --> 00:15:24.550
maybe it's useful but in other cases you
really want to avoid it usually doesn't

00:15:24.550 --> 00:15:24.560
really want to avoid it usually doesn't
 

00:15:24.560 --> 00:15:27.040
really want to avoid it usually doesn't
do what you think it does so let's say

00:15:27.040 --> 00:15:27.050
do what you think it does so let's say
 

00:15:27.050 --> 00:15:28.450
do what you think it does so let's say
we want to write our own Lin check that

00:15:28.450 --> 00:15:28.460
we want to write our own Lin check that
 

00:15:28.460 --> 00:15:31.120
we want to write our own Lin check that
actually catches calls to threads out

00:15:31.120 --> 00:15:31.130
actually catches calls to threads out
 

00:15:31.130 --> 00:15:32.620
actually catches calls to threads out
yields and once people that they're

00:15:32.620 --> 00:15:32.630
yields and once people that they're
 

00:15:32.630 --> 00:15:34.210
yields and once people that they're
doing that

00:15:34.210 --> 00:15:34.220
doing that
 

00:15:34.220 --> 00:15:35.350
doing that
so right now it's not highlighted

00:15:35.350 --> 00:15:35.360
so right now it's not highlighted
 

00:15:35.360 --> 00:15:38.440
so right now it's not highlighted
there's no Lin checks yet I want to show

00:15:38.440 --> 00:15:38.450
there's no Lin checks yet I want to show
 

00:15:38.450 --> 00:15:41.410
there's no Lin checks yet I want to show
you how I have this set up so you

00:15:41.410 --> 00:15:41.420
you how I have this set up so you
 

00:15:41.420 --> 00:15:42.610
you how I have this set up so you
already have some kind of a droid

00:15:42.610 --> 00:15:42.620
already have some kind of a droid
 

00:15:42.620 --> 00:15:44.470
already have some kind of a droid
application module here here it's just

00:15:44.470 --> 00:15:44.480
application module here here it's just
 

00:15:44.480 --> 00:15:46.420
application module here here it's just
called app the way you're going to write

00:15:46.420 --> 00:15:46.430
called app the way you're going to write
 

00:15:46.430 --> 00:15:47.530
called app the way you're going to write
your own Lin checks is all you're going

00:15:47.530 --> 00:15:47.540
your own Lin checks is all you're going
 

00:15:47.540 --> 00:15:48.460
your own Lin checks is all you're going
to do is you're going to make a Java

00:15:48.460 --> 00:15:48.470
to do is you're going to make a Java
 

00:15:48.470 --> 00:15:50.350
to do is you're going to make a Java
module may be called checks for example

00:15:50.350 --> 00:15:50.360
module may be called checks for example
 

00:15:50.360 --> 00:15:56.110
module may be called checks for example
and you're going to add a dependency

00:15:56.110 --> 00:15:56.120
and you're going to add a dependency
 

00:15:56.120 --> 00:16:01.060
and you're going to add a dependency
from your Android application to the the

00:16:01.060 --> 00:16:01.070
from your Android application to the the
 

00:16:01.070 --> 00:16:03.190
from your Android application to the the
checks module and we have this nice lint

00:16:03.190 --> 00:16:03.200
checks module and we have this nice lint
 

00:16:03.200 --> 00:16:04.750
checks module and we have this nice lint
checks block here which will make it

00:16:04.750 --> 00:16:04.760
checks block here which will make it
 

00:16:04.760 --> 00:16:07.120
checks block here which will make it
really easy to do that once you have

00:16:07.120 --> 00:16:07.130
really easy to do that once you have
 

00:16:07.130 --> 00:16:09.160
really easy to do that once you have
that set up and I know I'm going to skip

00:16:09.160 --> 00:16:09.170
that set up and I know I'm going to skip
 

00:16:09.170 --> 00:16:10.420
that set up and I know I'm going to skip
I'm skipping over some of the details

00:16:10.420 --> 00:16:10.430
I'm skipping over some of the details
 

00:16:10.430 --> 00:16:13.990
I'm skipping over some of the details
here but I'm gonna have some links at

00:16:13.990 --> 00:16:14.000
here but I'm gonna have some links at
 

00:16:14.000 --> 00:16:16.720
here but I'm gonna have some links at
the end I can look at sample projects so

00:16:16.720 --> 00:16:16.730
the end I can look at sample projects so
 

00:16:16.730 --> 00:16:17.680
the end I can look at sample projects so
once you have that set up we can

00:16:17.680 --> 00:16:17.690
once you have that set up we can
 

00:16:17.690 --> 00:16:19.150
once you have that set up we can
actually go right to the lint check

00:16:19.150 --> 00:16:19.160
actually go right to the lint check
 

00:16:19.160 --> 00:16:21.490
actually go right to the lint check
itself so here of a class called yield

00:16:21.490 --> 00:16:21.500
itself so here of a class called yield
 

00:16:21.500 --> 00:16:23.170
itself so here of a class called yield
detector as you can imagine this is a

00:16:23.170 --> 00:16:23.180
detector as you can imagine this is a
 

00:16:23.180 --> 00:16:25.680
detector as you can imagine this is a
detector for calls to thread yields

00:16:25.680 --> 00:16:25.690
detector for calls to thread yields
 

00:16:25.690 --> 00:16:28.120
detector for calls to thread yields
extends some classes in the lint

00:16:28.120 --> 00:16:28.130
extends some classes in the lint
 

00:16:28.130 --> 00:16:29.830
extends some classes in the lint
framework and I already have typed up

00:16:29.830 --> 00:16:29.840
framework and I already have typed up
 

00:16:29.840 --> 00:16:32.200
framework and I already have typed up
some some of the metadata for this check

00:16:32.200 --> 00:16:32.210
some some of the metadata for this check
 

00:16:32.210 --> 00:16:33.970
some some of the metadata for this check
that we then we want to have so there's

00:16:33.970 --> 00:16:33.980
that we then we want to have so there's
 

00:16:33.980 --> 00:16:35.650
that we then we want to have so there's
a name there's a brief description and

00:16:35.650 --> 00:16:35.660
a name there's a brief description and
 

00:16:35.660 --> 00:16:37.720
a name there's a brief description and
there's an explanation for like how to

00:16:37.720 --> 00:16:37.730
there's an explanation for like how to
 

00:16:37.730 --> 00:16:38.470
there's an explanation for like how to
fix the issue

00:16:38.470 --> 00:16:38.480
fix the issue
 

00:16:38.480 --> 00:16:40.720
fix the issue
maybe there's a severity you know

00:16:40.720 --> 00:16:40.730
maybe there's a severity you know
 

00:16:40.730 --> 00:16:44.980
maybe there's a severity you know
whether it breaks the build etcetera so

00:16:44.980 --> 00:16:44.990
whether it breaks the build etcetera so
 

00:16:44.990 --> 00:16:46.780
whether it breaks the build etcetera so
once we have that metadata I'm actually

00:16:46.780 --> 00:16:46.790
once we have that metadata I'm actually
 

00:16:46.790 --> 00:16:52.300
once we have that metadata I'm actually
going to start typing some code here so

00:16:52.300 --> 00:16:52.310
going to start typing some code here so
 

00:16:52.310 --> 00:16:54.280
going to start typing some code here so
one one method to be aware of is called

00:16:54.280 --> 00:16:54.290
one one method to be aware of is called
 

00:16:54.290 --> 00:16:59.560
one one method to be aware of is called
get applicable method names so the way

00:16:59.560 --> 00:16:59.570
get applicable method names so the way
 

00:16:59.570 --> 00:17:02.560
get applicable method names so the way
lint works is you know there's a couple

00:17:02.560 --> 00:17:02.570
lint works is you know there's a couple
 

00:17:02.570 --> 00:17:05.230
lint works is you know there's a couple
options you can either make your own ast

00:17:05.230 --> 00:17:05.240
options you can either make your own ast
 

00:17:05.240 --> 00:17:06.880
options you can either make your own ast
scanner which kind of like just give you

00:17:06.880 --> 00:17:06.890
scanner which kind of like just give you
 

00:17:06.890 --> 00:17:08.680
scanner which kind of like just give you
total control you can scan the entire

00:17:08.680 --> 00:17:08.690
total control you can scan the entire
 

00:17:08.690 --> 00:17:10.150
total control you can scan the entire
source file look at what for whatever

00:17:10.150 --> 00:17:10.160
source file look at what for whatever
 

00:17:10.160 --> 00:17:12.490
source file look at what for whatever
you wants for performance reasons we

00:17:12.490 --> 00:17:12.500
you wants for performance reasons we
 

00:17:12.500 --> 00:17:13.720
you wants for performance reasons we
have these hooks where you can register

00:17:13.720 --> 00:17:13.730
have these hooks where you can register
 

00:17:13.730 --> 00:17:15.850
have these hooks where you can register
with lint like hey I'm only interested

00:17:15.850 --> 00:17:15.860
with lint like hey I'm only interested
 

00:17:15.860 --> 00:17:17.950
with lint like hey I'm only interested
in method calls I have this particularly

00:17:17.950 --> 00:17:17.960
in method calls I have this particularly
 

00:17:17.960 --> 00:17:20.230
in method calls I have this particularly
name and so here we're actually only

00:17:20.230 --> 00:17:20.240
name and so here we're actually only
 

00:17:20.240 --> 00:17:21.960
name and so here we're actually only
interested in method calls with named

00:17:21.960 --> 00:17:21.970
interested in method calls with named
 

00:17:21.970 --> 00:17:26.530
interested in method calls with named
yield and if I have any type of it's not

00:17:26.530 --> 00:17:26.540
yield and if I have any type of it's not
 

00:17:26.540 --> 00:17:29.700
yield and if I have any type of it's not
going to work so you know let me know

00:17:29.700 --> 00:17:29.710
going to work so you know let me know
 

00:17:29.710 --> 00:17:32.260
going to work so you know let me know
once you have that hook in place we have

00:17:32.260 --> 00:17:32.270
once you have that hook in place we have
 

00:17:32.270 --> 00:17:34.690
once you have that hook in place we have
to write the hook itself so here we can

00:17:34.690 --> 00:17:34.700
to write the hook itself so here we can
 

00:17:34.700 --> 00:17:41.230
to write the hook itself so here we can
say visit method and make sure that's

00:17:41.230 --> 00:17:41.240
say visit method and make sure that's
 

00:17:41.240 --> 00:17:44.700
say visit method and make sure that's
readable for all of you

00:17:44.700 --> 00:17:44.710
 
 

00:17:44.710 --> 00:17:46.500
 
so this method should really only be

00:17:46.500 --> 00:17:46.510
so this method should really only be
 

00:17:46.510 --> 00:17:49.710
so this method should really only be
called when we come across a yields

00:17:49.710 --> 00:17:49.720
called when we come across a yields
 

00:17:49.720 --> 00:17:51.360
called when we come across a yields
function call in the source code so we

00:17:51.360 --> 00:17:51.370
function call in the source code so we
 

00:17:51.370 --> 00:17:52.980
function call in the source code so we
can say like okay let's assert that the

00:17:52.980 --> 00:17:52.990
can say like okay let's assert that the
 

00:17:52.990 --> 00:17:55.440
can say like okay let's assert that the
method name we're looking at is actually

00:17:55.440 --> 00:17:55.450
method name we're looking at is actually
 

00:17:55.450 --> 00:17:57.860
method name we're looking at is actually
yield so this should always be the case

00:17:57.860 --> 00:17:57.870
yield so this should always be the case
 

00:17:57.870 --> 00:18:00.330
yield so this should always be the case
and then because we have type

00:18:00.330 --> 00:18:00.340
and then because we have type
 

00:18:00.340 --> 00:18:03.930
and then because we have type
information we can do due diligence and

00:18:03.930 --> 00:18:03.940
information we can do due diligence and
 

00:18:03.940 --> 00:18:04.800
information we can do due diligence and
make sure that we don't have a false

00:18:04.800 --> 00:18:04.810
make sure that we don't have a false
 

00:18:04.810 --> 00:18:05.880
make sure that we don't have a false
positive here because maybe there's a

00:18:05.880 --> 00:18:05.890
positive here because maybe there's a
 

00:18:05.890 --> 00:18:07.470
positive here because maybe there's a
another class with the function called

00:18:07.470 --> 00:18:07.480
another class with the function called
 

00:18:07.480 --> 00:18:08.820
another class with the function called
yields and we want to make sure that

00:18:08.820 --> 00:18:08.830
yields and we want to make sure that
 

00:18:08.830 --> 00:18:10.140
yields and we want to make sure that
it's actually the you know Java laying

00:18:10.140 --> 00:18:10.150
it's actually the you know Java laying
 

00:18:10.150 --> 00:18:12.750
it's actually the you know Java laying
thread dot yield so here we're going to

00:18:12.750 --> 00:18:12.760
thread dot yield so here we're going to
 

00:18:12.760 --> 00:18:15.930
thread dot yield so here we're going to
check we've some helper methods I'll

00:18:15.930 --> 00:18:15.940
check we've some helper methods I'll
 

00:18:15.940 --> 00:18:18.420
check we've some helper methods I'll
type it out if you look at the evaluator

00:18:18.420 --> 00:18:18.430
type it out if you look at the evaluator
 

00:18:18.430 --> 00:18:21.150
type it out if you look at the evaluator
you can say is member in class we're

00:18:21.150 --> 00:18:21.160
you can say is member in class we're
 

00:18:21.160 --> 00:18:23.460
you can say is member in class we're
gonna pass it the resolve method node

00:18:23.460 --> 00:18:23.470
gonna pass it the resolve method node
 

00:18:23.470 --> 00:18:25.050
gonna pass it the resolve method node
and then we're going to give the class

00:18:25.050 --> 00:18:25.060
and then we're going to give the class
 

00:18:25.060 --> 00:18:29.910
and then we're going to give the class
name so Java outlaying dot thread this

00:18:29.910 --> 00:18:29.920
name so Java outlaying dot thread this
 

00:18:29.920 --> 00:18:32.040
name so Java outlaying dot thread this
just means you know if this method that

00:18:32.040 --> 00:18:32.050
just means you know if this method that
 

00:18:32.050 --> 00:18:33.990
just means you know if this method that
they're calling is actually part of this

00:18:33.990 --> 00:18:34.000
they're calling is actually part of this
 

00:18:34.000 --> 00:18:36.510
they're calling is actually part of this
exact class then we can report the error

00:18:36.510 --> 00:18:36.520
exact class then we can report the error
 

00:18:36.520 --> 00:18:38.840
exact class then we can report the error
and then I'll say contacts that report

00:18:38.840 --> 00:18:38.850
and then I'll say contacts that report
 

00:18:38.850 --> 00:18:41.850
and then I'll say contacts that report
I'll give it the issue that we holds the

00:18:41.850 --> 00:18:41.860
I'll give it the issue that we holds the
 

00:18:41.860 --> 00:18:44.070
I'll give it the issue that we holds the
metadata we have above I'll give it the

00:18:44.070 --> 00:18:44.080
metadata we have above I'll give it the
 

00:18:44.080 --> 00:18:48.660
metadata we have above I'll give it the
node I'll give it the location so we're

00:18:48.660 --> 00:18:48.670
node I'll give it the location so we're
 

00:18:48.670 --> 00:18:50.100
node I'll give it the location so we're
telling Lintz like hey here's where the

00:18:50.100 --> 00:18:50.110
telling Lintz like hey here's where the
 

00:18:50.110 --> 00:18:51.120
telling Lintz like hey here's where the
error is this is what you should

00:18:51.120 --> 00:18:51.130
error is this is what you should
 

00:18:51.130 --> 00:18:54.840
error is this is what you should
highlight and I think I have to give it

00:18:54.840 --> 00:18:54.850
highlight and I think I have to give it
 

00:18:54.850 --> 00:18:58.950
highlight and I think I have to give it
the message so let's say please don't

00:18:58.950 --> 00:18:58.960
the message so let's say please don't
 

00:18:58.960 --> 00:19:01.590
the message so let's say please don't
use this obviously you should use some

00:19:01.590 --> 00:19:01.600
use this obviously you should use some
 

00:19:01.600 --> 00:19:04.520
use this obviously you should use some
more helpful error message all right

00:19:04.520 --> 00:19:04.530
more helpful error message all right
 

00:19:04.530 --> 00:19:07.920
more helpful error message all right
that's all it takes if I have no typos

00:19:07.920 --> 00:19:07.930
that's all it takes if I have no typos
 

00:19:07.930 --> 00:19:15.900
that's all it takes if I have no typos
I'm going to make make the projects

00:19:15.900 --> 00:19:15.910
 
 

00:19:15.910 --> 00:19:18.630
 
it's done and if I go back to our

00:19:18.630 --> 00:19:18.640
it's done and if I go back to our
 

00:19:18.640 --> 00:19:21.990
it's done and if I go back to our
application BAM Lynch has already

00:19:21.990 --> 00:19:22.000
application BAM Lynch has already
 

00:19:22.000 --> 00:19:23.490
application BAM Lynch has already
scanned your source code it's already

00:19:23.490 --> 00:19:23.500
scanned your source code it's already
 

00:19:23.500 --> 00:19:25.080
scanned your source code it's already
picked up a lint check writing the ID

00:19:25.080 --> 00:19:25.090
picked up a lint check writing the ID
 

00:19:25.090 --> 00:19:27.450
picked up a lint check writing the ID
says please don't use this and that's

00:19:27.450 --> 00:19:27.460
says please don't use this and that's
 

00:19:27.460 --> 00:19:29.160
says please don't use this and that's
really powerful you can make this pop up

00:19:29.160 --> 00:19:29.170
really powerful you can make this pop up
 

00:19:29.170 --> 00:19:30.590
really powerful you can make this pop up
for your colleagues and everything so

00:19:30.590 --> 00:19:30.600
for your colleagues and everything so
 

00:19:30.600 --> 00:19:38.910
for your colleagues and everything so
awesome let's go back to the slides all

00:19:38.910 --> 00:19:38.920
awesome let's go back to the slides all
 

00:19:38.920 --> 00:19:40.920
awesome let's go back to the slides all
right 50 seconds left I'm pretty happy

00:19:40.920 --> 00:19:40.930
right 50 seconds left I'm pretty happy
 

00:19:40.930 --> 00:19:44.100
right 50 seconds left I'm pretty happy
with the timing here here's some links I

00:19:44.100 --> 00:19:44.110
with the timing here here's some links I
 

00:19:44.110 --> 00:19:45.810
with the timing here here's some links I
really want you to check these out so if

00:19:45.810 --> 00:19:45.820
really want you to check these out so if
 

00:19:45.820 --> 00:19:47.310
really want you to check these out so if
you've never read like the lint overview

00:19:47.310 --> 00:19:47.320
you've never read like the lint overview
 

00:19:47.320 --> 00:19:49.530
you've never read like the lint overview
on our developer page please go there

00:19:49.530 --> 00:19:49.540
on our developer page please go there
 

00:19:49.540 --> 00:19:51.120
on our developer page please go there
it's got a lot of information both from

00:19:51.120 --> 00:19:51.130
it's got a lot of information both from
 

00:19:51.130 --> 00:19:54.750
it's got a lot of information both from
this talk and a little bit more please

00:19:54.750 --> 00:19:54.760
this talk and a little bit more please
 

00:19:54.760 --> 00:19:56.430
this talk and a little bit more please
check out the annotations page I just

00:19:56.430 --> 00:19:56.440
check out the annotations page I just
 

00:19:56.440 --> 00:19:58.140
check out the annotations page I just
touched on like three random examples

00:19:58.140 --> 00:19:58.150
touched on like three random examples
 

00:19:58.150 --> 00:19:59.730
touched on like three random examples
but there's so many useful annotations

00:19:59.730 --> 00:19:59.740
but there's so many useful annotations
 

00:19:59.740 --> 00:20:01.590
but there's so many useful annotations
that can really prevent a lot of bugs

00:20:01.590 --> 00:20:01.600
that can really prevent a lot of bugs
 

00:20:01.600 --> 00:20:03.180
that can really prevent a lot of bugs
ahead of time before you users ever see

00:20:03.180 --> 00:20:03.190
ahead of time before you users ever see
 

00:20:03.190 --> 00:20:07.590
ahead of time before you users ever see
them if you are really excited about

00:20:07.590 --> 00:20:07.600
them if you are really excited about
 

00:20:07.600 --> 00:20:09.210
them if you are really excited about
this demo I just gave at the end here

00:20:09.210 --> 00:20:09.220
this demo I just gave at the end here
 

00:20:09.220 --> 00:20:11.370
this demo I just gave at the end here
check out the sample project we have on

00:20:11.370 --> 00:20:11.380
check out the sample project we have on
 

00:20:11.380 --> 00:20:13.680
check out the sample project we have on
github where you can actually write your

00:20:13.680 --> 00:20:13.690
github where you can actually write your
 

00:20:13.690 --> 00:20:15.210
github where you can actually write your
own custom lint checks and I'll kind of

00:20:15.210 --> 00:20:15.220
own custom lint checks and I'll kind of
 

00:20:15.220 --> 00:20:17.490
own custom lint checks and I'll kind of
get you up to speed and finally if you

00:20:17.490 --> 00:20:17.500
get you up to speed and finally if you
 

00:20:17.500 --> 00:20:18.690
get you up to speed and finally if you
run into any issues we have a Lynch

00:20:18.690 --> 00:20:18.700
run into any issues we have a Lynch
 

00:20:18.700 --> 00:20:20.100
run into any issues we have a Lynch
mailing list where you can go to for

00:20:20.100 --> 00:20:20.110
mailing list where you can go to for
 

00:20:20.110 --> 00:20:22.140
mailing list where you can go to for
help many of you might note or he's

00:20:22.140 --> 00:20:22.150
help many of you might note or he's
 

00:20:22.150 --> 00:20:23.520
help many of you might note or he's
pretty active on the mailing list I'm

00:20:23.520 --> 00:20:23.530
pretty active on the mailing list I'm
 

00:20:23.530 --> 00:20:24.660
pretty active on the mailing list I'm
pretty active on the mailing list you

00:20:24.660 --> 00:20:24.670
pretty active on the mailing list you
 

00:20:24.670 --> 00:20:26.310
pretty active on the mailing list you
kind of answered all the questions that

00:20:26.310 --> 00:20:26.320
kind of answered all the questions that
 

00:20:26.320 --> 00:20:29.430
kind of answered all the questions that
that get asked there all right and with

00:20:29.430 --> 00:20:29.440
that get asked there all right and with
 

00:20:29.440 --> 00:20:31.380
that get asked there all right and with
that thank you so much if you have any

00:20:31.380 --> 00:20:31.390
that thank you so much if you have any
 

00:20:31.390 --> 00:20:33.600
that thank you so much if you have any
questions I don't ask them now but I'll

00:20:33.600 --> 00:20:33.610
questions I don't ask them now but I'll
 

00:20:33.610 --> 00:20:35.730
questions I don't ask them now but I'll
be out in the sandbox area afterward and

00:20:35.730 --> 00:20:35.740
be out in the sandbox area afterward and
 

00:20:35.740 --> 00:20:37.410
be out in the sandbox area afterward and
I'll be happy to answer any questions so

00:20:37.410 --> 00:20:37.420
I'll be happy to answer any questions so
 

00:20:37.420 --> 00:20:41.050
I'll be happy to answer any questions so
please check out Testament checks thanks

00:20:41.050 --> 00:20:41.060
please check out Testament checks thanks
 

00:20:41.060 --> 00:20:43.710
please check out Testament checks thanks
[Applause]

00:20:43.710 --> 00:20:43.720
[Applause]
 

00:20:43.720 --> 00:20:52.070
[Applause]
[Music]

00:20:52.070 --> 00:20:52.080
 
 

00:20:52.080 --> 00:20:58.519
 
[Music]

