WEBVTT
Kind: captions
Language: en

00:00:00.190 --> 00:00:03.110
Back to our regularly scheduled program.

00:00:03.110 --> 00:00:03.890
Let's see where you are.

00:00:04.939 --> 00:00:07.040
You want an upper bound on time.

00:00:07.040 --> 00:00:10.970
You took the DAG and
you broke it up into a bunch of phases.

00:00:10.970 --> 00:00:14.780
And each phase k does w k units of work.

00:00:14.780 --> 00:00:18.030
And the time to execute each phase
is the ceiling of w k over p,

00:00:18.030 --> 00:00:21.640
and it's these pesky ceilings
that we want to get rid of.

00:00:21.640 --> 00:00:22.730
Let me help you.

00:00:22.730 --> 00:00:25.410
I don't want you to be
angry like this little guy.

00:00:25.410 --> 00:00:25.910
Grr.

00:00:26.920 --> 00:00:28.010
Here's a fact.

00:00:28.010 --> 00:00:31.670
I can take a ceiling of a quotient and
turn it into a floor.

00:00:32.740 --> 00:00:34.040
Plug that in and see what you get.

00:00:35.330 --> 00:00:36.898
Now I know what you're thinking.

00:00:36.898 --> 00:00:40.830
Curse you that gets rid of the ceiling
but the floor seems just as bad.

00:00:41.900 --> 00:00:44.390
Remember our original question
was to get an upper bound.

00:00:45.440 --> 00:00:47.460
So can we get an upper
bound on the summand?

00:00:48.670 --> 00:00:52.890
Now the floor of something is always
less than or equal to that something.

00:00:52.890 --> 00:00:54.790
Aha.
That gives an upper bound and

00:00:54.790 --> 00:00:56.260
eliminates the floor.

00:00:56.260 --> 00:00:57.970
Oh no, I'm falling into a pit!

00:00:59.400 --> 00:01:01.810
Okay, this looks a lot cleaner.

00:01:01.810 --> 00:01:03.610
Now you just need a little algebra and

00:01:03.610 --> 00:01:07.600
the fact that summing all
these Wks will give you W.

00:01:07.600 --> 00:01:10.680
And putting that all together,
you get your first interesting result.

00:01:10.680 --> 00:01:11.790
Congratulations.

00:01:11.790 --> 00:01:13.760
This is Brent's theorem.

00:01:13.760 --> 00:01:16.350
And what you've done is very
interpretative to interpret to

00:01:17.440 --> 00:01:21.120
Brent's Theorem says that the time
to execute the DAG is no more than

00:01:21.120 --> 00:01:23.630
the time to execute the critical path,

00:01:23.630 --> 00:01:29.250
plus the time to execute off of the
critical path using the P processors.

00:01:29.250 --> 00:01:33.180
This result also sets a goal for
any scheduler.

00:01:33.180 --> 00:01:37.460
So let's say someone is trying to sell
you his or her scheduling algorithm,

00:01:37.460 --> 00:01:41.320
you can look at him or her and you can
say, now wait just a unit of time there.

00:01:41.320 --> 00:01:45.280
Can you scheduler execute any
DAG within Brent's time bound?

00:01:45.280 --> 00:01:48.460
You will look so smart and
sophisticated, if you do that.

00:01:48.460 --> 00:01:51.720
Let me close by emphasizing
one final point.

00:01:51.720 --> 00:01:54.580
What you just derived is an upper bound.

00:01:54.580 --> 00:01:59.260
That is, given a DAG,
Brent predicts the upper limit on time.

00:01:59.260 --> 00:02:01.690
But you also had these lower bounds.

00:02:01.690 --> 00:02:04.250
Now an interesting factoid
is that this upper limit and

00:02:04.250 --> 00:02:07.830
this lower limit are both within
a factor of two of one another.

00:02:10.000 --> 00:02:10.780
Can you see why?

00:02:11.910 --> 00:02:16.670
In any case, what this means is that you
may be able to execute the DAG in a time

00:02:16.670 --> 00:02:19.730
that is less than what Brent predicts.

00:02:19.730 --> 00:02:23.040
Though of course you can never go
any faster than the lower bound,

00:02:23.040 --> 00:02:24.360
at least in theory.

00:02:24.360 --> 00:02:25.500
Let's see how this works.

