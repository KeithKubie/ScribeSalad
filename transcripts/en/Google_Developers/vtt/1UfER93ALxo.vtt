WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:01:43.150
[MUSIC PLAYING]

00:01:43.150 --> 00:01:44.020
PETE FRISELLA: --tech
lead for the API.

00:01:44.020 --> 00:01:46.110
He is the guy who actually
builds this thing and makes

00:01:46.110 --> 00:01:48.580
this great API that a
lot of people use.

00:01:48.580 --> 00:01:51.500
And I'm really excited
to have here today

00:01:51.500 --> 00:01:52.670
to talk about some--

00:01:52.670 --> 00:01:53.220
JEETENDRA SONEJA: Happy
to be here.

00:01:53.220 --> 00:01:54.330
PETE FRISELLA: --issues about
quotas and things like that.

00:01:54.330 --> 00:01:55.090
So, this is great.

00:01:55.090 --> 00:01:56.150
JEETENDRA SONEJA: Great.

00:01:56.150 --> 00:01:57.930
PETE FRISELLA: So we're going
to start off from agenda

00:01:57.930 --> 00:02:00.490
perspective, talk a little bit
why we have quotas, like

00:02:00.490 --> 00:02:01.880
what's the point of quotas.

00:02:01.880 --> 00:02:04.380
A couple things about best
practices, and then how you

00:02:04.380 --> 00:02:06.210
can plan for growth.

00:02:06.210 --> 00:02:08.680
And also some of the common
errors that people experience

00:02:08.680 --> 00:02:11.640
and issues they might have.

00:02:11.640 --> 00:02:12.870
So we'll start off
with quotas.

00:02:12.870 --> 00:02:13.690
Why do we have quotas?

00:02:13.690 --> 00:02:14.750
Like what's the point
of quotas?

00:02:14.750 --> 00:02:17.130
And what are the quotas
that we actually have?

00:02:17.130 --> 00:02:20.550
And which ones are the ones that
you might come up against

00:02:20.550 --> 00:02:22.912
during your daily usage
of the API?

00:02:22.912 --> 00:02:24.180
JEETENDRA SONEJA: Right.

00:02:24.180 --> 00:02:26.370
So let's talk about why
do we have quotas.

00:02:26.370 --> 00:02:31.300
So a lot of the APIs within
Google and outside of Google,

00:02:31.300 --> 00:02:35.600
we have some standard quotas and
some API-specific quotas.

00:02:35.600 --> 00:02:38.940
So the main purpose for the
quotas is to manage resources.

00:02:38.940 --> 00:02:41.270
At Google they have limited
servers, limited resources,

00:02:41.270 --> 00:02:44.180
and we need to make sure that
everybody, all developers, out

00:02:44.180 --> 00:02:46.730
there are getting equitable
access and sharing their

00:02:46.730 --> 00:02:48.400
resources in a fair manner.

00:02:48.400 --> 00:02:49.610
So that's one main purpose.

00:02:49.610 --> 00:02:53.570
And the other is protecting our
systems from abuse, maybe

00:02:53.570 --> 00:02:55.630
intentional or unintentional.

00:02:55.630 --> 00:02:58.700
That could be some buggy program
that may just go into

00:02:58.700 --> 00:03:01.160
an infinite loop and just
overload our servers.

00:03:01.160 --> 00:03:04.540
And that could affect other
developers who are actually

00:03:04.540 --> 00:03:05.130
doing the right thing.

00:03:05.130 --> 00:03:07.430
So we need to have this
production in place to make

00:03:07.430 --> 00:03:09.720
sure that we are serving
our users right.

00:03:09.720 --> 00:03:15.870
And at the end of the day, it's
for both, for developers,

00:03:15.870 --> 00:03:18.450
as well as us that we have
these quotas in place.

00:03:18.450 --> 00:03:21.210
PETE FRISELLA: Sure, yeah.

00:03:21.210 --> 00:03:22.420
JEETENDRA SONEJA: Quotas
is what is

00:03:22.420 --> 00:03:23.350
the type of the request.

00:03:23.350 --> 00:03:26.500
So if you think about it, we
have different features, and

00:03:26.500 --> 00:03:27.700
hence different types
of requests.

00:03:27.700 --> 00:03:30.470
So, for example, a Get request,
or Read Only request,

00:03:30.470 --> 00:03:33.090
is very different from an Upload
request, which can

00:03:33.090 --> 00:03:38.070
actually incur some rights to
additional CPU processing.

00:03:38.070 --> 00:03:40.990
So we need to consider that
when we come up with these

00:03:40.990 --> 00:03:41.890
different quota policies.

00:03:41.890 --> 00:03:45.840
And remember, the underlying
theme is you're trying to all

00:03:45.840 --> 00:03:48.370
the quota numbers that we have
are an arbitrary number.

00:03:48.370 --> 00:03:53.310
So we just look at all the use
cases, make sure we are not

00:03:53.310 --> 00:03:54.700
restricting any use case,--

00:03:54.700 --> 00:03:54.960
PETE FRISELLA: Sure.

00:03:54.960 --> 00:03:56.500
JEETENDRA SONEJA: --enabling all
the things that developers

00:03:56.500 --> 00:03:59.000
want to do, all the great
apps they want to build.

00:03:59.000 --> 00:04:01.060
And at the same time,
product our system.

00:04:01.060 --> 00:04:03.210
PETE FRISELLA: Yeah.

00:04:03.210 --> 00:04:05.810
JEETENDRA SONEJA: And, finally,
all of these quotas

00:04:05.810 --> 00:04:07.910
are associated with some
kind of entity.

00:04:07.910 --> 00:04:10.810
All of our quotas are
per-product quotas, so this

00:04:10.810 --> 00:04:16.680
could be like QPS per project or
a number of-- like the one

00:04:16.680 --> 00:04:19.920
that we have, the most common is
daily request per project,

00:04:19.920 --> 00:04:20.870
which is 50,000.

00:04:20.870 --> 00:04:21.589
PETE FRISELLA: Yeah.

00:04:21.589 --> 00:04:22.800
JEETENDRA SONEJA: And
then there are some

00:04:22.800 --> 00:04:23.720
entity-specific--

00:04:23.720 --> 00:04:25.220
per-profile or per-property
quotas.

00:04:25.220 --> 00:04:26.390
PETE FRISELLA: OK.

00:04:26.390 --> 00:04:28.020
Great.

00:04:28.020 --> 00:04:30.780
So let's take a look around the
quotas that we actually

00:04:30.780 --> 00:04:32.800
have that most people
come up against.

00:04:32.800 --> 00:04:34.950
So we have other quotas, and
we'll provide resources later.

00:04:34.950 --> 00:04:36.940
And we can go in and read
documentation that explains

00:04:36.940 --> 00:04:38.470
all the different quotas
that we might have.

00:04:38.470 --> 00:04:40.670
So we just want to cover some
of the main ones, the big

00:04:40.670 --> 00:04:44.160
ones, that people are often
requesting or asking for more

00:04:44.160 --> 00:04:45.330
information about.

00:04:45.330 --> 00:04:48.230
The first one is going back to
Jeentendra when he was talking

00:04:48.230 --> 00:04:51.540
about around the general quotas
that we have that apply

00:04:51.540 --> 00:04:52.930
to all APIs.

00:04:52.930 --> 00:04:54.910
The biggest one is that
we have is the 50,000

00:04:54.910 --> 00:04:55.670
requests per day.

00:04:55.670 --> 00:04:57.270
So this is the currency
limit that we give

00:04:57.270 --> 00:04:59.080
you in terms of quota.

00:04:59.080 --> 00:05:00.130
JEETENDRA SONEJA: It's
a good distinction.

00:05:00.130 --> 00:05:03.730
So we have quotas that some are
based on user entities or

00:05:03.730 --> 00:05:04.560
user-level quotas.

00:05:04.560 --> 00:05:08.400
So this one is an example of
user-level quotas, since a

00:05:08.400 --> 00:05:09.590
profile belongs to a user.

00:05:09.590 --> 00:05:09.960
PETE FRISELLA: Yes.

00:05:09.960 --> 00:05:11.680
JEETENDRA SONEJA: And then
the per-project ones are

00:05:11.680 --> 00:05:13.340
developer- or app-specific
quotas.

00:05:13.340 --> 00:05:14.590
PETE FRISELLA: Exactly.

00:05:16.420 --> 00:05:18.290
And then, finally, we have the
10 concurrent requests per

00:05:18.290 --> 00:05:20.170
second on a per-profile basis.

00:05:20.170 --> 00:05:22.290
And this is tied to the
IP address, right?

00:05:22.290 --> 00:05:22.677
JEETENDRA SONEJA: Right.

00:05:22.677 --> 00:05:23.840
PETE FRISELLA: Yeah.

00:05:23.840 --> 00:05:26.650
JEETENDRA SONEJA: So this is
actually per profile, so if

00:05:26.650 --> 00:05:29.170
you have, let's say long-running
requests, you

00:05:29.170 --> 00:05:31.360
need to wait for those requests
for that profile--

00:05:31.360 --> 00:05:32.580
for single profile--
to finish.

00:05:32.580 --> 00:05:36.490
Again, if you're sending us 10
long-running requests, it's

00:05:36.490 --> 00:05:39.480
probably better to wait for the
response from some of them

00:05:39.480 --> 00:05:40.880
before you send additional
requests.

00:05:40.880 --> 00:05:41.970
PETE FRISELLA: Yeah.

00:05:41.970 --> 00:05:43.790
Also, in terms of what can be
increased, neither one of

00:05:43.790 --> 00:05:45.270
these can actually be
increased, right?

00:05:45.270 --> 00:05:45.570
JEETENDRA SONEJA: Right.

00:05:45.570 --> 00:05:46.950
PETE FRISELLA: But this goes
back to what Jeetendra had

00:05:46.950 --> 00:05:50.280
talked about, how we look at--
we look at usage history, we

00:05:50.280 --> 00:05:52.630
look at how people are
using the API.

00:05:52.630 --> 00:05:55.840
I think these quotas cover like
99% of use cases, right?

00:05:55.840 --> 00:05:56.190
JEETENDRA SONEJA: Right.

00:05:56.190 --> 00:05:58.660
PETE FRISELLA: So for most
users this is actually--

00:05:58.660 --> 00:05:59.860
JEETENDRA SONEJA: Yeah, if you
look at the numbers, like

00:05:59.860 --> 00:06:02.910
10,000 requests per profile,
that seems pretty generous.

00:06:02.910 --> 00:06:06.095
If you think about the use
cases, because 10,000 seems

00:06:06.095 --> 00:06:07.970
like a lot of requests for a
profile for a single day.

00:06:07.970 --> 00:06:08.590
PETE FRISELLA: Sure.

00:06:08.590 --> 00:06:10.460
JEETENDRA SONEJA: Even though
you might have a lot of data,

00:06:10.460 --> 00:06:11.550
that's a lot of requests.

00:06:11.550 --> 00:06:12.655
PETE FRISELLA: For sure.

00:06:12.655 --> 00:06:14.410
Yes, so let's talk a little
bit about best practices.

00:06:14.410 --> 00:06:17.410
How you get the most out of the
quota that you're given

00:06:17.410 --> 00:06:20.130
from the courtesy perspective.

00:06:20.130 --> 00:06:22.290
So what's really important
is the API's console.

00:06:22.290 --> 00:06:25.072
So this is your starting point
for a lot of things that have

00:06:25.072 --> 00:06:26.980
to do with quota and
managing your usage

00:06:26.980 --> 00:06:29.250
around analytics APIs.

00:06:29.250 --> 00:06:31.210
To make sure you're really
getting all the full quota

00:06:31.210 --> 00:06:34.610
that you're given from a
starting point, from a default

00:06:34.610 --> 00:06:37.200
standpoint, you want to make
sure that you've got an API's

00:06:37.200 --> 00:06:37.840
console front.

00:06:37.840 --> 00:06:38.510
So some people--

00:06:38.510 --> 00:06:39.340
JEETENDRA SONEJA: [INAUDIBLE].

00:06:39.340 --> 00:06:39.830
PETE FRISELLA: Yeah.

00:06:39.830 --> 00:06:41.680
So you can set it from
anywhere from--

00:06:41.680 --> 00:06:43.550
I think you can even do it less
than one and use in this

00:06:43.550 --> 00:06:44.480
case, I think.

00:06:44.480 --> 00:06:46.490
But there's no point in setting
it higher than 10

00:06:46.490 --> 00:06:47.870
queries per second.

00:06:47.870 --> 00:06:49.650
And if you're an individual
developer that's working on

00:06:49.650 --> 00:06:52.370
your only single profile, then
you might as well just set it

00:06:52.370 --> 00:06:54.100
to 10, if you want, because
you're not really trying to

00:06:54.100 --> 00:06:55.330
rate-limit anybody, right?

00:06:55.330 --> 00:06:56.050
JEETENDRA SONEJA: Right, yeah.

00:06:56.050 --> 00:06:57.170
That could be your
default value.

00:06:57.170 --> 00:06:58.460
PETE FRISELLA: Yeah, and the
reason you might want to do

00:06:58.460 --> 00:07:00.980
that is that you don't want a
single user out of all your

00:07:00.980 --> 00:07:03.370
users eating up most of your
quota, because they may be

00:07:03.370 --> 00:07:04.200
making more requests
[INAUDIBLE].

00:07:04.200 --> 00:07:05.410
JEETENDRA SONEJA: Right,
right, this is a useful

00:07:05.410 --> 00:07:07.270
utility that you should make
use of, depending on the

00:07:07.270 --> 00:07:07.910
nature of your app.

00:07:07.910 --> 00:07:10.360
PETE FRISELLA: Sure, yeah.

00:07:10.360 --> 00:07:12.250
And then finally, there's this
reports pane, that I'm not

00:07:12.250 --> 00:07:14.340
sure if everybody's aware of
this, but it's really great,

00:07:14.340 --> 00:07:16.900
because you can come in
to the API's console.

00:07:16.900 --> 00:07:18.040
And there's a couple things
you can do with this.

00:07:18.040 --> 00:07:20.510
One is just see how much you are
using in terms of requests

00:07:20.510 --> 00:07:22.910
on a daily basis, but also
give you some information

00:07:22.910 --> 00:07:25.120
around where people are coming
from that are making requests,

00:07:25.120 --> 00:07:26.020
like where they're located.

00:07:26.020 --> 00:07:28.400
And then there's stuff you
can do for diagnostics.

00:07:28.400 --> 00:07:29.920
There's error rates in here.

00:07:29.920 --> 00:07:31.960
And you can see of all the
requests you're making, what's

00:07:31.960 --> 00:07:33.930
the error rate that you might
have, because you want to keep

00:07:33.930 --> 00:07:36.220
that low and make sure you
don't want to be spending

00:07:36.220 --> 00:07:37.220
quota on error rates, right?

00:07:37.220 --> 00:07:37.630
JEETENDRA SONEJA: Right.

00:07:37.630 --> 00:07:39.800
PETE FRISELLA: So this is a
great way to check out how

00:07:39.800 --> 00:07:40.660
things are working.

00:07:40.660 --> 00:07:43.250
Also, if you see zero in here,
that means you haven't

00:07:43.250 --> 00:07:46.740
properly associated your
request with your API's

00:07:46.740 --> 00:07:47.430
console project.

00:07:47.430 --> 00:07:50.020
So you should see some
usage in your--

00:07:50.020 --> 00:07:51.100
JEETENDRA SONEJA: It's
a very handy utility.

00:07:51.100 --> 00:07:53.050
I think you should totally
make use of it.

00:07:53.050 --> 00:07:55.690
It gives you a lot of insights
into are you

00:07:55.690 --> 00:07:56.500
doing the right things.

00:07:56.500 --> 00:07:58.310
What your growth pattern
looks like, and so on.

00:07:58.310 --> 00:08:00.860
PETE FRISELLA: Sure.

00:08:00.860 --> 00:08:02.270
JEETENDRA SONEJA: So let's talk
about handling different

00:08:02.270 --> 00:08:03.140
kinds of errors.

00:08:03.140 --> 00:08:07.370
So, like we talked about, there
are some short-term

00:08:07.370 --> 00:08:08.700
quotas a and long-term quotas.

00:08:08.700 --> 00:08:09.180
PETE FRISELLA: Yeah.

00:08:09.180 --> 00:08:11.600
JEETENDRA SONEJA: So for the
short-term ones, like QPS base

00:08:11.600 --> 00:08:15.760
limits, you should probably
handle those by implementing

00:08:15.760 --> 00:08:17.270
some kind of rate limiting.

00:08:17.270 --> 00:08:19.810
So what we mean by rate limiting
is so, if you think

00:08:19.810 --> 00:08:24.210
about it, 10 requests per
second, again, seems like

00:08:24.210 --> 00:08:26.060
quite a few requests
per second.

00:08:26.060 --> 00:08:29.210
So if you are trying to make
requests too fast, you will

00:08:29.210 --> 00:08:30.430
see these errors, rate-limiting
errors.

00:08:30.430 --> 00:08:30.710
PETE FRISELLA: Sure.

00:08:30.710 --> 00:08:32.640
JEETENDRA SONEJA: And what you
need to is basically slow down

00:08:32.640 --> 00:08:35.580
a bit, implement some
kind of technique.

00:08:35.580 --> 00:08:39.820
One of such techniques is
exponential backoff, where you

00:08:39.820 --> 00:08:44.590
actually, basically, slow down
by using some kind of delay.

00:08:44.590 --> 00:08:48.900
And the way you do it is you
start with some default value

00:08:48.900 --> 00:08:53.070
and then you basically start
increasing that exponentially,

00:08:53.070 --> 00:08:55.400
until you stop seeing
those errors.

00:08:55.400 --> 00:08:58.470
So it's one of the techniques,
again, you could have whatever

00:08:58.470 --> 00:09:01.040
technique you may want to use,
that suits your app.

00:09:01.040 --> 00:09:03.480
But the idea is to slow
down deficiency in

00:09:03.480 --> 00:09:05.222
your short-term errors.

00:09:05.222 --> 00:09:08.550
Another example of short-terms
errors is concurrent quota,

00:09:08.550 --> 00:09:10.920
where you may be making a lot
of requests per profile.

00:09:10.920 --> 00:09:14.210
So in that case, again, you
should just wait for some of

00:09:14.210 --> 00:09:16.490
those requests to finish,
before you send next

00:09:16.490 --> 00:09:17.160
[? server ?] request.

00:09:17.160 --> 00:09:17.543
PETE FRISELLA: Yeah?

00:09:17.543 --> 00:09:18.310
OK.

00:09:18.310 --> 00:09:18.690
JEETENDRA SONEJA: And--

00:09:18.690 --> 00:09:20.820
PETE FRISELLA: Error rate,
what's typical for an error

00:09:20.820 --> 00:09:21.980
rate that we want to see?

00:09:21.980 --> 00:09:25.410
JEETENDRA SONEJA: Right, so on
the error rate, I think like

00:09:25.410 --> 00:09:27.890
Pete just mentioned, in the
API's console you see all the

00:09:27.890 --> 00:09:29.960
different statistics, one
of those is error rates.

00:09:29.960 --> 00:09:33.530
So you should keep an eye on
that on a regular basis to

00:09:33.530 --> 00:09:35.130
make sure that the
error rate--

00:09:35.130 --> 00:09:36.720
typically we recommend
your error rate

00:09:36.720 --> 00:09:38.800
should be below 1-3%.

00:09:38.800 --> 00:09:41.270
If it's anywhere above that,
you should probably look at

00:09:41.270 --> 00:09:43.430
your app, see what you're doing,
what you could be doing

00:09:43.430 --> 00:09:46.415
different to bring down
that error rate.

00:09:46.415 --> 00:09:46.710
PETE FRISELLA: Yeah.

00:09:46.710 --> 00:09:48.640
JEETENDRA SONEJA: And lastly,
I would mention is that

00:09:48.640 --> 00:09:50.020
handling errors is essential.

00:09:50.020 --> 00:09:52.990
Like quota errors, you should
be programming for those,

00:09:52.990 --> 00:09:57.520
because that leads to a better
user experience, rather than

00:09:57.520 --> 00:09:59.500
user seeing some weird error.

00:09:59.500 --> 00:10:02.680
You can actually be more
transparent and let them know

00:10:02.680 --> 00:10:05.080
what's going on.

00:10:05.080 --> 00:10:07.500
So one of the other things that
you could do, again, with

00:10:07.500 --> 00:10:10.010
the help of the API's console
is plan for growth.

00:10:10.010 --> 00:10:13.510
This is one of the techniques
that you can use to deal with

00:10:13.510 --> 00:10:16.660
both short-term as well
as long-term quotas.

00:10:16.660 --> 00:10:19.670
So for example, you can keep an
eye on the number of users

00:10:19.670 --> 00:10:20.930
that you have, what your growth

00:10:20.930 --> 00:10:22.100
pattern is looking like.

00:10:22.100 --> 00:10:24.850
You can look at your 30-day
window to see what's your max,

00:10:24.850 --> 00:10:26.680
what's your minimum number
of daily number of

00:10:26.680 --> 00:10:27.510
requests that you have.

00:10:27.510 --> 00:10:28.640
PETE FRISELLA: Sure.

00:10:28.640 --> 00:10:31.570
JEETENDRA SONEJA: And you
could use some of the

00:10:31.570 --> 00:10:32.590
optimizing techniques.

00:10:32.590 --> 00:10:35.110
So for example, are you making
too many requests?

00:10:35.110 --> 00:10:36.900
Just use the same data, so--

00:10:36.900 --> 00:10:39.700
In a couple of slides, we'll
actually give an example of

00:10:39.700 --> 00:10:43.290
this, where you could actually
optimize requests to request

00:10:43.290 --> 00:10:44.840
the same amount of data
in a fewer requests.

00:10:44.840 --> 00:10:46.520
So you could save on the
number of requests.

00:10:46.520 --> 00:10:48.850
PETE FRISELLA: Yeah, caching
is a huge one.

00:10:48.850 --> 00:10:50.260
I think a lot of people don't
take advantage of

00:10:50.260 --> 00:10:52.120
caching on their end.

00:10:52.120 --> 00:10:55.060
So I look at user requests for
quota increases, I see that

00:10:55.060 --> 00:10:57.210
people make the same request
over and over--

00:10:57.210 --> 00:10:58.850
And I know they're trying to
refresh data, which is what--

00:10:58.850 --> 00:10:59.280
JEETENDRA SONEJA: Right.

00:10:59.280 --> 00:10:59.710
PETE FRISELLA: --

00:10:59.710 --> 00:10:59.840
[INAUDIBLE].

00:10:59.840 --> 00:11:01.520
Yeah, caching can definitely
save you a lot of quota.

00:11:01.520 --> 00:11:03.120
JEETENDRA SONEJA: Right, that's
a very good one too.

00:11:03.120 --> 00:11:06.830
So caching, especially for data
that doesn't change that

00:11:06.830 --> 00:11:07.320
often, like--

00:11:07.320 --> 00:11:08.120
PETE FRISELLA: Management
API [INAUDIBLE].

00:11:08.120 --> 00:11:08.560
JEETENDRA SONEJA:
Yeah, exactly.

00:11:08.560 --> 00:11:10.470
Management API configuration
data.

00:11:10.470 --> 00:11:13.160
How often do people update their
accounts or profiles?

00:11:13.160 --> 00:11:14.250
Maybe once in a while?

00:11:14.250 --> 00:11:17.520
So you can cache it for a few
hours, for four day or so,

00:11:17.520 --> 00:11:18.990
again, depending on the
nature of your app.

00:11:18.990 --> 00:11:19.250
PETE FRISELLA: Sure.

00:11:19.250 --> 00:11:20.940
JEETENDRA SONEJA: But you should
definitely use some

00:11:20.940 --> 00:11:23.183
form of caching to, again,
get the maximum of

00:11:23.183 --> 00:11:23.976
your existing quotas.

00:11:23.976 --> 00:11:25.226
PETE FRISELLA: Yeah, great.

00:11:27.390 --> 00:11:28.850
So how do you actually make
a quota increase?

00:11:28.850 --> 00:11:31.260
Now we understand, obviously,
that we provide courtesy

00:11:31.260 --> 00:11:34.780
limits that work really well
for most developers.

00:11:34.780 --> 00:11:37.300
But, of course, at some point,
you might grow your user base

00:11:37.300 --> 00:11:38.460
and you want some more quota.

00:11:38.460 --> 00:11:40.670
So how do you actually
go about doing that?

00:11:40.670 --> 00:11:43.100
So, again, start back at
the API's console.

00:11:43.100 --> 00:11:45.480
If you go to the quotas pane,
you'll see that there's a link

00:11:45.480 --> 00:11:47.130
that says "request more".

00:11:47.130 --> 00:11:49.735
And that'll kick off the whole
process, where you're filling

00:11:49.735 --> 00:11:51.580
in some information on what
you're looking for in terms of

00:11:51.580 --> 00:11:54.350
quota, how does your app work.

00:11:54.350 --> 00:11:56.670
But some of the things you
probably want to look at and

00:11:56.670 --> 00:11:59.940
start off with thinking about
before you make your quota

00:11:59.940 --> 00:12:02.640
request is you want to make
sure you review the quota

00:12:02.640 --> 00:12:04.270
documentation that we have.

00:12:04.270 --> 00:12:06.670
So when you click that link,
you'll get some other links

00:12:06.670 --> 00:12:08.910
that will send you some docs
that you can review what the

00:12:08.910 --> 00:12:11.780
quota limits are, understand
things about like setting

00:12:11.780 --> 00:12:13.200
per-user limits.

00:12:13.200 --> 00:12:15.160
So these are important things
that before you make the

00:12:15.160 --> 00:12:18.650
request, you might be able to
resolve the request before

00:12:18.650 --> 00:12:19.450
actually making the request.

00:12:19.450 --> 00:12:22.300
So it's good to check
that documentation.

00:12:22.300 --> 00:12:25.130
Another thing is make sure
you've optimized your request.

00:12:25.130 --> 00:12:28.850
And this just goes back
to can you maybe

00:12:28.850 --> 00:12:31.300
consolidate a couple requests?

00:12:31.300 --> 00:12:33.140
Can you save on quota before
you're actually requesting

00:12:33.140 --> 00:12:33.986
more, right?

00:12:33.986 --> 00:12:34.940
JEETENDRA SONEJA: Right.

00:12:34.940 --> 00:12:37.930
PETE FRISELLA: This will help
you for long-term planning.

00:12:37.930 --> 00:12:40.780
We want to see a
low error rate.

00:12:40.780 --> 00:12:44.100
We said 1-3%, that seems like
a pretty reasonable error

00:12:44.100 --> 00:12:46.390
rate, if you're doing proper
error handling.

00:12:46.390 --> 00:12:48.510
And the reason we want to see
low error rate is we don't

00:12:48.510 --> 00:12:51.670
really want to scale up your
error rate as you go along.

00:12:51.670 --> 00:12:54.920
So if it's 20%, and we give
you from 50 to a million

00:12:54.920 --> 00:12:57.030
requests per day, or 100,000
requests per day, you're just

00:12:57.030 --> 00:12:59.100
scaling those errors up
with that request.

00:12:59.100 --> 00:13:01.780
So we want to see that error
rate [INAUDIBLE]

00:13:01.780 --> 00:13:03.240
JEETENDRA SONEJA: Yeah, but make
sure you're making the

00:13:03.240 --> 00:13:04.830
max out of what you
have before you

00:13:04.830 --> 00:13:05.780
ask for more quota--

00:13:05.780 --> 00:13:06.430
PETE FRISELLA: Exactly, yeah.

00:13:06.430 --> 00:13:07.910
JEETENDRA SONEJA: And also,
remember, a lot of these

00:13:07.910 --> 00:13:09.820
errors are counting towards
your daily quota.

00:13:09.820 --> 00:13:13.740
So it's better for the app to
actually nor do too many

00:13:13.740 --> 00:13:15.800
errors, because at the end of
the day they would get counted

00:13:15.800 --> 00:13:16.890
against your daily quota.

00:13:16.890 --> 00:13:17.190
PETE FRISELLA: Exactly, yeah.

00:13:17.190 --> 00:13:20.630
And I've seen requests come in
where 50% of the quota is

00:13:20.630 --> 00:13:22.505
being used for just errors.

00:13:22.505 --> 00:13:24.470
They're not handled proper rate
limiting [INAUDIBLE].

00:13:24.470 --> 00:13:26.922
So that's a pretty
important one.

00:13:26.922 --> 00:13:30.310
And use the API's console to
check those values, right?

00:13:30.310 --> 00:13:32.323
And then, when you do make the
request, that's just helpful

00:13:32.323 --> 00:13:34.830
if you explain the growth
estimates and where you're

00:13:34.830 --> 00:13:35.610
coming from.

00:13:35.610 --> 00:13:37.190
If it's a new app, we
understand, you might haven't

00:13:37.190 --> 00:13:39.980
had any usage yet, but you're
planning for maybe a launch or

00:13:39.980 --> 00:13:40.770
something like that.

00:13:40.770 --> 00:13:41.520
That's fine.

00:13:41.520 --> 00:13:45.290
Just send us a note through
the forum, let us know how

00:13:45.290 --> 00:13:46.810
many users you're planning,
how many requests you're

00:13:46.810 --> 00:13:48.240
making per users on average.

00:13:48.240 --> 00:13:49.940
And just give us some kind of
general guideline on what you

00:13:49.940 --> 00:13:52.290
think usage might look like.

00:13:52.290 --> 00:13:53.730
And then we can always
ramp that up.

00:13:53.730 --> 00:13:56.590
So I typically will suggest,
give us a reasonable amount of

00:13:56.590 --> 00:13:58.730
quota, let's launch, and
see where we're at.

00:13:58.730 --> 00:14:00.030
And then we can grow
from there.

00:14:00.030 --> 00:14:00.725
That's not a problem.

00:14:00.725 --> 00:14:02.010
JEETENDRA SONEJA: Right, right,
the more information

00:14:02.010 --> 00:14:03.645
you give us, the more
transparent you are, the

00:14:03.645 --> 00:14:06.290
easier it is for us to review
the whole thing and get back

00:14:06.290 --> 00:14:07.180
to as soon as possible.

00:14:07.180 --> 00:14:07.630
PETE FRISELLA: Exactly.

00:14:07.630 --> 00:14:09.810
And then if you have an existing
app, we would like to

00:14:09.810 --> 00:14:12.580
see that you are actually
currently using a good chunk

00:14:12.580 --> 00:14:14.310
of your quota.

00:14:14.310 --> 00:14:16.150
And this goes back to planning
your growth.

00:14:16.150 --> 00:14:17.115
You don't want to come
in at the last minute

00:14:17.115 --> 00:14:17.870
and make the request.

00:14:17.870 --> 00:14:20.140
You want to look and say, OK,
we're at 80% of usage of our

00:14:20.140 --> 00:14:23.910
quota, we should probably make
a quota request today.

00:14:23.910 --> 00:14:27.670
And 80% is kind of a loose
number, but I think that's

00:14:27.670 --> 00:14:28.620
pretty reasonable.

00:14:28.620 --> 00:14:30.050
You should be using at
least 80% before

00:14:30.050 --> 00:14:30.730
you make the request.

00:14:30.730 --> 00:14:33.368
JEETENDRA SONEJA: That's
[INAUDIBLE].

00:14:33.368 --> 00:14:34.830
PETE FRISELLA: All right, so
let's take a look at errors

00:14:34.830 --> 00:14:37.000
and common problems that people
might have that we see

00:14:37.000 --> 00:14:39.070
quite often when they make
requests, and maybe not

00:14:39.070 --> 00:14:40.760
handling 403s properly.

00:14:40.760 --> 00:14:42.700
And also with the error
messages [INAUDIBLE]

00:14:42.700 --> 00:14:43.880
that they would see
probably, right,

00:14:43.880 --> 00:14:44.760
when they make requests?

00:14:44.760 --> 00:14:45.630
JEETENDRA SONEJA: Exactly.

00:14:45.630 --> 00:14:48.890
So, yeah, like I said before, if
you get errors, you should

00:14:48.890 --> 00:14:52.710
probably program for those and
handle them gracefully.

00:14:52.710 --> 00:14:54.990
So let's talk about the
different kinds of errors that

00:14:54.990 --> 00:14:56.510
you get as quota errors.

00:14:56.510 --> 00:14:57.260
PETE FRISELLA: Sure.

00:14:57.260 --> 00:14:59.220
JEETENDRA SONEJA: 403 is the
response code that you get for

00:14:59.220 --> 00:15:01.460
all for all HTTP response code
for all the different types of

00:15:01.460 --> 00:15:02.300
quota errors.

00:15:02.300 --> 00:15:06.880
And then you see a reason or a
code that will tell you what

00:15:06.880 --> 00:15:09.530
kind of quota error
you're getting.

00:15:09.530 --> 00:15:11.530
So one of the examples is
dailyLimitExceeded.

00:15:11.530 --> 00:15:13.190
As the name suggests, you
are exceeding some

00:15:13.190 --> 00:15:14.140
kind of daily limit.

00:15:14.140 --> 00:15:14.500
PETE FRISELLA: Yeah.

00:15:14.500 --> 00:15:17.320
JEETENDRA SONEJA: So ideally, if
you did your planning right

00:15:17.320 --> 00:15:20.750
like what Pete was mentioning,
if you looked at your numbers

00:15:20.750 --> 00:15:24.830
and you are not close to your
daily limit, you should

00:15:24.830 --> 00:15:26.140
probably never see this error.

00:15:26.140 --> 00:15:30.110
So if you're estimating your
traffic, tracking your growth

00:15:30.110 --> 00:15:31.940
pattern, hopefully this
should not happen.

00:15:31.940 --> 00:15:32.770
But if--

00:15:32.770 --> 00:15:33.280
PETE FRISELLA: It does happen.

00:15:33.280 --> 00:15:34.140
JEETENDRA SONEJA:
It does happen.

00:15:34.140 --> 00:15:35.460
PETE FRISELLA: You get
surges of users.

00:15:35.460 --> 00:15:37.090
It does happen, but, yeah,
definitely planning

00:15:37.090 --> 00:15:37.740
beforehand.

00:15:37.740 --> 00:15:38.430
JEETENDRA SONEJA: Right.

00:15:38.430 --> 00:15:38.570
[INAUDIBLE].

00:15:38.570 --> 00:15:40.340
PETE FRISELLA: You might as well
send us an email, even if

00:15:40.340 --> 00:15:42.020
you're maybe a month out, you
might want to send an email

00:15:42.020 --> 00:15:44.810
saying, look, I think the way
we're grown right now, we're

00:15:44.810 --> 00:15:47.040
not 80%, but we're going to
be in a month from now.

00:15:47.040 --> 00:15:50.210
Can I just pin you, and when
we hit this limit, so I can

00:15:50.210 --> 00:15:50.950
get something--

00:15:50.950 --> 00:15:52.800
We can at least know
what's going on

00:15:52.800 --> 00:15:54.300
with the app forehead.

00:15:54.300 --> 00:15:54.760
JEETENDRA SONEJA: Exactly.

00:15:54.760 --> 00:15:58.190
So if this does happen, our
recommendation is you should

00:15:58.190 --> 00:16:00.410
probably just stop making--
because [? retraining ?] is

00:16:00.410 --> 00:16:01.220
not going to happen.

00:16:01.220 --> 00:16:01.570
PETE FRISELLA: [INAUDIBLE].

00:16:01.570 --> 00:16:02.770
JEETENDRA SONEJA: When you
finish your daily quota, you

00:16:02.770 --> 00:16:06.780
need to wait for the next
24-hour period to take in in

00:16:06.780 --> 00:16:08.250
order to get the new
round of quotas.

00:16:08.250 --> 00:16:12.700
And that happens at Pacific
midnight, night time.

00:16:12.700 --> 00:16:14.925
So you need to wait till
that before you get

00:16:14.925 --> 00:16:16.290
new round of quota.

00:16:16.290 --> 00:16:19.130
The other kind of quota errors
are around wait limiting.

00:16:19.130 --> 00:16:21.740
Like if you are hitting
the service too

00:16:21.740 --> 00:16:22.790
hard you would see--

00:16:22.790 --> 00:16:24.850
Like if you're exiting the 10
QPS limit, you would see

00:16:24.850 --> 00:16:26.410
userRateLimitExceeded.

00:16:26.410 --> 00:16:28.475
Again, like I mentioned before,
just implement some

00:16:28.475 --> 00:16:32.630
kind of throttling or just slow
down, implement, maybe

00:16:32.630 --> 00:16:34.950
make use of some kind of
[? exponential ?] backoff.

00:16:34.950 --> 00:16:37.280
And those should go away.

00:16:37.280 --> 00:16:39.880
Those are the kinds of errors
that you can actually deal

00:16:39.880 --> 00:16:42.340
with in an automated fashion,
like the slow down, and it

00:16:42.340 --> 00:16:43.020
should go up.

00:16:43.020 --> 00:16:45.220
Whereas daily, you just have
to stop making the request.

00:16:45.220 --> 00:16:46.820
PETE FRISELLA: And
what's Unreg?

00:16:46.820 --> 00:16:48.820
I think it says Unreg
versus this other

00:16:48.820 --> 00:16:49.720
one that's over here?

00:16:49.720 --> 00:16:53.520
JEETENDRA SONEJA: Right, so
that one is, since it says

00:16:53.520 --> 00:16:55.480
Unreg, it's about
registration.

00:16:55.480 --> 00:16:58.710
So this means that either you
haven't registered and sending

00:16:58.710 --> 00:17:00.370
us unregistered traffic.

00:17:00.370 --> 00:17:02.660
So you need to go sign up
in the API's console.

00:17:02.660 --> 00:17:05.200
The other thing could be maybe
you have registered, but for

00:17:05.200 --> 00:17:07.990
some reason your set up is
incorrect, and you're not

00:17:07.990 --> 00:17:10.950
propagating the project
ID in your request.

00:17:10.950 --> 00:17:14.099
So you either need to set up
OAuth2, which we strongly

00:17:14.099 --> 00:17:15.265
recommend that you do that.

00:17:15.265 --> 00:17:16.900
That way, you don't have
to worry about this.

00:17:16.900 --> 00:17:19.450
You would never see this
if you're using OAuth2.

00:17:19.450 --> 00:17:22.880
But for some reason, if you
cannot use OAuth2, you could

00:17:22.880 --> 00:17:27.930
use the key parameter to
pass your API key.

00:17:27.930 --> 00:17:28.630
PETE FRISELLA: Sure, OK.

00:17:28.630 --> 00:17:30.810
JEETENDRA SONEJA: And lastly,
there are other quota errors,

00:17:30.810 --> 00:17:33.240
like concurredQuotaExceeded,
or quotaExceeded is

00:17:33.240 --> 00:17:35.140
the code for that.

00:17:35.140 --> 00:17:38.260
Again, the idea there is to just
slow down first round of

00:17:38.260 --> 00:17:39.090
request to finish.

00:17:39.090 --> 00:17:41.006
And then you should be good.

00:17:41.006 --> 00:17:43.210
PETE FRISELLA: Sure,
OK, great.

00:17:43.210 --> 00:17:46.990
So the 10,000 requests per
profile, this is a common

00:17:46.990 --> 00:17:49.960
request we get for
increases here.

00:17:49.960 --> 00:17:54.370
And so typically the quoted
meets the needs of actually

00:17:54.370 --> 00:17:57.780
probably about 100% people on
the 10,000 requests, I'd say.

00:17:57.780 --> 00:18:00.820
But we do see a common case
for this in terms of why

00:18:00.820 --> 00:18:01.880
they're getting this limit.

00:18:01.880 --> 00:18:03.040
So I've got two examples here.

00:18:03.040 --> 00:18:05.850
We're just go through quickly,
explain probably what's

00:18:05.850 --> 00:18:06.410
usually happened.

00:18:06.410 --> 00:18:09.240
So often when I see that people
are hitting this limit,

00:18:09.240 --> 00:18:12.190
what they're doing is, for
example, they're making one

00:18:12.190 --> 00:18:13.070
request per day.

00:18:13.070 --> 00:18:16.650
So they want to see over time
on a daily basis maybe

00:18:16.650 --> 00:18:17.900
something like visits.

00:18:17.900 --> 00:18:20.760
And they'll actually make a
request for visits for the

00:18:20.760 --> 00:18:22.500
June 6th, they'll make a
request for June 7th.

00:18:22.500 --> 00:18:23.360
And, basically, every
day they're

00:18:23.360 --> 00:18:24.160
making a single request.

00:18:24.160 --> 00:18:24.840
JEETENDRA SONEJA: Right.

00:18:24.840 --> 00:18:26.210
PETE FRISELLA: So you're making
n requests for the

00:18:26.210 --> 00:18:28.450
amount of days that you
want data for, right?

00:18:28.450 --> 00:18:30.230
So when you're doing a query
like this, what you want to

00:18:30.230 --> 00:18:32.520
look is possibly can you
add a dimension?

00:18:32.520 --> 00:18:34.690
In this case, you would want
to add a date dimension.

00:18:34.690 --> 00:18:35.450
JEETENDRA SONEJA: Right.

00:18:35.450 --> 00:18:36.210
PETE FRISELLA: And
then re-query

00:18:36.210 --> 00:18:37.330
for the entire period.

00:18:37.330 --> 00:18:40.110
And that would break out your
results by date, and you could

00:18:40.110 --> 00:18:42.690
parse it out on your
end to actually the

00:18:42.690 --> 00:18:43.170
day that you want.

00:18:43.170 --> 00:18:46.900
So this actually happens quite a
bit that we see this type of

00:18:46.900 --> 00:18:47.990
request be made.

00:18:47.990 --> 00:18:51.730
Another one we see quite often
is, for example, you might

00:18:51.730 --> 00:18:54.010
want to have something like,
what are my visits for every

00:18:54.010 --> 00:18:55.570
page on my site?

00:18:55.570 --> 00:18:58.570
And you want to actually do it
for each URL on your site.

00:18:58.570 --> 00:19:01.360
So when people will make a
request for visits, use a

00:19:01.360 --> 00:19:04.490
filter, and use something like
pagePath, for example.

00:19:04.490 --> 00:19:06.720
And they'll set pagePath equal
to the pagePath that they're

00:19:06.720 --> 00:19:09.210
interested in for visits, and
they'll get one result back.

00:19:09.210 --> 00:19:11.320
So for every page you
want data for,

00:19:11.320 --> 00:19:12.230
you to make a request.

00:19:12.230 --> 00:19:15.260
If you have 10,000 pages on your
site-- which some sites

00:19:15.260 --> 00:19:17.840
isn't a lot, some
sites it is--

00:19:17.840 --> 00:19:19.700
you basically eat up all your
quota getting that data.

00:19:19.700 --> 00:19:22.640
So you can only make one request
for all your sites or

00:19:22.640 --> 00:19:23.930
all your pages in one day.

00:19:23.930 --> 00:19:25.390
JEETENDRA SONEJA: Just one
type of data, yeah.

00:19:25.390 --> 00:19:26.820
PETE FRISELLA: And if you want
to refresh [INAUDIBLE], you

00:19:26.820 --> 00:19:27.780
can, right?

00:19:27.780 --> 00:19:31.240
So the solution for that really
is that, again, you

00:19:31.240 --> 00:19:34.190
should remove the filter and
add a pagePath dimension.

00:19:34.190 --> 00:19:37.790
With the API you can create up
to 10,000 results in one

00:19:37.790 --> 00:19:38.960
request, right?

00:19:38.960 --> 00:19:42.800
So you could get all those
10,000 results in one shot.

00:19:42.800 --> 00:19:43.400
JEETENDRA SONEJA: [INAUDIBLE].

00:19:43.400 --> 00:19:45.150
PETE FRISELLA: So you went from
10,000 requests to one

00:19:45.150 --> 00:19:47.020
request, and you get
the same data.

00:19:47.020 --> 00:19:48.930
And then you parse it, again,
you parse it on your end to

00:19:48.930 --> 00:19:51.050
get the actual visits
[INAUDIBLE], is that right?

00:19:51.050 --> 00:19:51.290
JEETENDRA SONEJA: Right.

00:19:51.290 --> 00:19:53.530
And for both these requests and
in general what you are

00:19:53.530 --> 00:19:55.970
seeing for when users say, OK,
we are hitting this quota,

00:19:55.970 --> 00:19:56.840
what do we do now?

00:19:56.840 --> 00:19:57.320
PETE FRISELLA: Yeah.

00:19:57.320 --> 00:19:59.210
JEETENDRA SONEJA: Like Pete gave
in both these examples,

00:19:59.210 --> 00:20:01.200
if you notice there's generally
a pattern for these

00:20:01.200 --> 00:20:04.370
kinds of requests that they're
trying to make smaller, really

00:20:04.370 --> 00:20:08.870
small requests, and they're to
fetch data in smaller chunks,

00:20:08.870 --> 00:20:11.200
and then stitch it on
the client side.

00:20:11.200 --> 00:20:12.180
So what you could do--

00:20:12.180 --> 00:20:13.790
that's such a [INAUDIBLE]
pattern that we see when

00:20:13.790 --> 00:20:14.650
people hit this limit.

00:20:14.650 --> 00:20:19.750
So like we said, the way you
can solve it is make one

00:20:19.750 --> 00:20:22.490
comprehensive request, or one
overarching request that gets

00:20:22.490 --> 00:20:23.030
all that data--

00:20:23.030 --> 00:20:23.730
PETE FRISELLA: All data.

00:20:23.730 --> 00:20:24.920
JEETENDRA SONEJA: --in
a single request.

00:20:24.920 --> 00:20:27.090
And then, in fact, that will
save you all the stitching

00:20:27.090 --> 00:20:29.660
that you're doing on the
client side, so.

00:20:29.660 --> 00:20:31.400
PETE FRISELLA: This is actually,
I would say 99% of

00:20:31.400 --> 00:20:34.300
the time when we get this
10,000-request quota increase

00:20:34.300 --> 00:20:36.700
that people are trying to get
increases, this solves their

00:20:36.700 --> 00:20:37.813
problem actually.

00:20:37.813 --> 00:20:39.063
JEETENDRA SONEJA: Yeah.

00:20:40.990 --> 00:20:42.240
PETE FRISELLA: Another thing
is rate limit errors.

00:20:42.240 --> 00:20:43.710
So a lot of people get
rate-limit errors, even though

00:20:43.710 --> 00:20:47.400
we obviously recommend that
you implement some kind of

00:20:47.400 --> 00:20:49.910
either exponential backoff or
some other mechanism to back

00:20:49.910 --> 00:20:50.730
off on these errors that you're

00:20:50.730 --> 00:20:53.070
getting for rate limiting.

00:20:53.070 --> 00:20:56.060
But aside from that, if there's
another use case that,

00:20:56.060 --> 00:20:58.880
for example, if you are a
developer that has thousands

00:20:58.880 --> 00:21:02.290
of users, you're actually
servicing and providing

00:21:02.290 --> 00:21:04.120
analytics through your
application for a whole bunch

00:21:04.120 --> 00:21:08.220
of users, if you go back to
the 10-requests-per-second

00:21:08.220 --> 00:21:11.560
quota that we have, that's based
on IP address, right?

00:21:11.560 --> 00:21:13.280
So if you think about it, if
you're a developer that's

00:21:13.280 --> 00:21:15.250
doing this for a lot of users,
all your request are coming

00:21:15.250 --> 00:21:16.230
from a single IP.

00:21:16.230 --> 00:21:16.550
JEETENDRA SONEJA: Right.

00:21:16.550 --> 00:21:18.450
PETE FRISELLA: So from our end
it looks like there's one user

00:21:18.450 --> 00:21:21.530
from an IP perspective, but
you're actually doing this for

00:21:21.530 --> 00:21:21.980
a lot of users.

00:21:21.980 --> 00:21:23.970
So what you want to use in those
cases to make sure that

00:21:23.970 --> 00:21:26.890
all of your users are getting
that 10 queries per second is

00:21:26.890 --> 00:21:30.280
to use either the user IP or
quota-user parameters with

00:21:30.280 --> 00:21:31.350
your requests.

00:21:31.350 --> 00:21:33.970
And what that ends up doing
is for each request you're

00:21:33.970 --> 00:21:35.820
making, you're basically
saying, I'm making this

00:21:35.820 --> 00:21:37.100
request, but it's
for this user.

00:21:37.100 --> 00:21:37.660
JEETENDRA SONEJA: Right.

00:21:37.660 --> 00:21:39.140
PETE FRISELLA: And then we'll
give that full quota for that

00:21:39.140 --> 00:21:39.750
particular user.

00:21:39.750 --> 00:21:40.890
JEETENDRA SONEJA: Right,
that their each user

00:21:40.890 --> 00:21:42.010
gets like 10 QPS.

00:21:42.010 --> 00:21:45.280
PETE FRISELLA: Gets their 10
QPS, or whatever you set in

00:21:45.280 --> 00:21:47.660
the API console, the separate
user limit will

00:21:47.660 --> 00:21:49.510
be affected by this.

00:21:49.510 --> 00:21:51.620
And a lot of people don't know
this exists and they're making

00:21:51.620 --> 00:21:55.670
requests on behalf of a lot of
users, and they're hitting

00:21:55.670 --> 00:21:58.330
that 10 QPS, even though they're
doing this for a lot

00:21:58.330 --> 00:21:58.850
of users, right?

00:21:58.850 --> 00:22:02.410
So this is really important
actually.

00:22:02.410 --> 00:22:05.120
JEETENDRA SONEJA: So one of the
other problems could be

00:22:05.120 --> 00:22:07.660
like when you look at the
API console, you see

00:22:07.660 --> 00:22:08.730
zero requests there.

00:22:08.730 --> 00:22:10.640
So you may be wondering,
OK, what's going on?

00:22:10.640 --> 00:22:13.910
I'm making all these requests,
but I'm not seeing that being

00:22:13.910 --> 00:22:15.270
reflected in the console.

00:22:15.270 --> 00:22:18.050
So they could be one
of the two issues.

00:22:21.630 --> 00:22:23.610
Either you're not
using OAuth 2.

00:22:23.610 --> 00:22:25.190
If you use OAuth 2,
like I said--

00:22:25.190 --> 00:22:25.900
PETE FRISELLA: Shouldn't
have this problem.

00:22:25.900 --> 00:22:27.140
JEETENDRA SONEJA: Yeah, it
shouldn't have this problem.

00:22:27.140 --> 00:22:31.410
As part of OAuth2 token, the
product ID gets propagated as

00:22:31.410 --> 00:22:32.570
part of the request.

00:22:32.570 --> 00:22:36.050
But if you cannot use OAuth2 for
whatever reason, there is

00:22:36.050 --> 00:22:38.200
this IPA key that you
can find for each

00:22:38.200 --> 00:22:40.000
project in the console.

00:22:40.000 --> 00:22:43.910
You should use that key in the
key param with your each

00:22:43.910 --> 00:22:47.460
request, so that all the quota
that's assigned to that

00:22:47.460 --> 00:22:49.780
project, and you get
the full quotas.

00:22:49.780 --> 00:22:51.842
PETE FRISELLA: Yeah, this
happens quite a bit actually.

00:22:51.842 --> 00:22:53.228
JEETENDRA SONEJA: Yeah.

00:22:53.228 --> 00:22:55.430
PETE FRISELLA: All right, so I
think we have a few questions.

00:22:55.430 --> 00:22:58.440
But before we get to that, we
do have some resources.

00:22:58.440 --> 00:23:03.265
We'll try these links below the
video, but they're also

00:23:03.265 --> 00:23:05.715
all available on our developer
site at developers.googl

00:23:05.715 --> 00:23:08.600
e.com/analytics.

00:23:08.600 --> 00:23:10.710
So all this is available
for you guys.

00:23:10.710 --> 00:23:12.600
And we do have a few
questions here.

00:23:12.600 --> 00:23:14.740
JEETENDRA SONEJA: Yeah, we have
one question, actually,

00:23:14.740 --> 00:23:15.680
from one of our users.

00:23:15.680 --> 00:23:17.685
And he's talking about
upload operations.

00:23:17.685 --> 00:23:17.950
PETE FRISELLA: OK.

00:23:17.950 --> 00:23:20.810
JEETENDRA SONEJA: So they've
been running into 500 upload

00:23:20.810 --> 00:23:22.840
operations per project
[INAUDIBLE] quota when

00:23:22.840 --> 00:23:23.820
performing [INAUDIBLE].

00:23:23.820 --> 00:23:25.770
And this typically happens with
them when they're trying

00:23:25.770 --> 00:23:28.010
to backfill data for users.

00:23:28.010 --> 00:23:30.350
And that's a common use case
for the upload API, right?

00:23:30.350 --> 00:23:32.700
It's a new API, and you have
your users that have been

00:23:32.700 --> 00:23:35.500
using these different platforms
for past couple of

00:23:35.500 --> 00:23:37.450
years, and then you upload
all that data.

00:23:37.450 --> 00:23:39.480
So Peter is actually--

00:23:39.480 --> 00:23:41.570
PETE FRISELLA: Fortunately, yes,
this is one of the quotas

00:23:41.570 --> 00:23:43.810
you can request to
have increased.

00:23:43.810 --> 00:23:46.630
So if you go through they API's
console, go to Request

00:23:46.630 --> 00:23:50.100
More, make the request.

00:23:50.100 --> 00:23:52.040
And just make sure that you've
provided the project ID that

00:23:52.040 --> 00:23:54.540
you're using, and we can
definitely take a look at

00:23:54.540 --> 00:23:56.200
whether it makes sense to give
you a quota increase.

00:23:56.200 --> 00:23:58.493
And we just look at the same
thing-- make sure your error

00:23:58.493 --> 00:24:01.390
late is low, you're using a
good percentage of it--

00:24:01.390 --> 00:24:02.650
obviously, if you're hitting
it, you're using a good

00:24:02.650 --> 00:24:03.570
percentage of your quota.

00:24:03.570 --> 00:24:04.950
So, yeah, that one
can be increased.

00:24:04.950 --> 00:24:05.210
JEETENDRA SONEJA: Right.

00:24:05.210 --> 00:24:06.810
Actually, we do have more
questions, yes.

00:24:06.810 --> 00:24:09.830
PETE FRISELLA: OK, is there a
way to increase a 10,000 per

00:24:09.830 --> 00:24:10.370
profile quota?

00:24:10.370 --> 00:24:12.490
So we covered this earlier
in the presentation.

00:24:12.490 --> 00:24:15.160
That is one of the
quotas that's

00:24:15.160 --> 00:24:16.520
not able to be increased.

00:24:16.520 --> 00:24:17.280
JEETENDRA SONEJA: Right.

00:24:17.280 --> 00:24:18.910
PETE FRISELLA: I would look at
the usage and see if you can

00:24:18.910 --> 00:24:22.900
optimize based on what we just
described here around the

00:24:22.900 --> 00:24:24.370
common scenarios.

00:24:24.370 --> 00:24:27.390
JEETENDRA SONEJA: Try to
consolidate requests and try

00:24:27.390 --> 00:24:29.580
to see what kind of
requests pattern.

00:24:29.580 --> 00:24:30.890
What data are you
trying to fetch.

00:24:30.890 --> 00:24:32.840
Can you use additional
dimensions--

00:24:32.840 --> 00:24:33.190
PETE FRISELLA: [INAUDIBLE].

00:24:33.190 --> 00:24:34.750
JEETENDRA SONEJA: Exactly,
additional dimensions in the

00:24:34.750 --> 00:24:37.070
same request additional metrics,
try to combine

00:24:37.070 --> 00:24:37.435
multiple requests.

00:24:37.435 --> 00:24:38.220
PETE FRISELLA: Exactly.

00:24:38.220 --> 00:24:39.670
JEETENDRA SONEJA: Yeah,
hopefully--

00:24:39.670 --> 00:24:41.600
PETE FRISELLA: You can get
10,000 rows per request, so I

00:24:41.600 --> 00:24:44.800
would definitely look and see,
are you just requesting one

00:24:44.800 --> 00:24:45.430
row of data?

00:24:45.430 --> 00:24:47.920
And if are, then maybe there's
a way, maybe that's a sign

00:24:47.920 --> 00:24:49.360
that there's something that you
could probably do a little

00:24:49.360 --> 00:24:50.040
bit better.

00:24:50.040 --> 00:24:51.723
JEETENDRA SONEJA: And if you
still have that problem, talk

00:24:51.723 --> 00:24:54.720
to us and we can work it through
to get it resolved.

00:24:54.720 --> 00:24:56.290
PETE FRISELLA: Sure.

00:24:56.290 --> 00:25:01.790
So we have another one-- oh,
that's the 500 uploads.

00:25:01.790 --> 00:25:03.040
JEETENDRA SONEJA:
So [INAUDIBLE]--

00:25:06.000 --> 00:25:06.630
PETE FRISELLA: I don't think
that one's really

00:25:06.630 --> 00:25:09.076
[INAUDIBLE], so.

00:25:09.076 --> 00:25:10.730
JEETENDRA SONEJA: Yeah, I think
that's all we have.

00:25:10.730 --> 00:25:10.940
PETE FRISELLA: That's
all have.

00:25:10.940 --> 00:25:13.920
OK, so, again, I encourage
you go to the website.

00:25:13.920 --> 00:25:17.880
We have most of this is covered
in documentation.

00:25:17.880 --> 00:25:19.440
We're going to embed this
video as part of our

00:25:19.440 --> 00:25:21.310
documentation, so you
guys can review and

00:25:21.310 --> 00:25:23.530
reference this at any time.

00:25:23.530 --> 00:25:25.890
And I'd like to thank you, guys,
for joining us today.

00:25:25.890 --> 00:25:27.290
We're planning on having a few
more of these in the next

00:25:27.290 --> 00:25:29.930
couple weeks, so please,
definitely check on our blog

00:25:29.930 --> 00:25:34.500
and part of our G+ profile to
make sure you have the date on

00:25:34.500 --> 00:25:36.500
what's coming out in terms
of Analytics Live.

00:25:36.500 --> 00:25:37.600
So thanks very much
for joining us,

00:25:37.600 --> 00:25:38.190
and have a good day.

00:25:38.190 --> 00:25:38.870
JEETENDRA SONEJA:
Thank you all.

00:25:38.870 --> 00:25:39.175
Bye-bye.

00:25:39.175 --> 00:25:40.425
PETE FRISELLA: Bye.

00:25:50.194 --> 00:26:42.640
[MUSIC PLAYING]

