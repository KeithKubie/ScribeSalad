WEBVTT
Kind: captions
Language: en

00:00:01.723 --> 00:00:05.030
Although most developers
don't focus on it,

00:00:05.030 --> 00:00:08.330
font is often the most
critical component

00:00:08.330 --> 00:00:11.120
of your application or website.

00:00:11.120 --> 00:00:14.650
If you don't have the right
font for the right language,

00:00:14.650 --> 00:00:18.320
all your build for design
can quickly be destroyed.

00:00:18.320 --> 00:00:22.070
Hi, my name is Xiangye
Xiao, and today I

00:00:22.070 --> 00:00:26.120
will talk about Google's
international font Noto.

00:00:26.120 --> 00:00:28.600
Let's look at a few examples.

00:00:28.600 --> 00:00:32.580
On the left image,
characters for Meetei Mayek

00:00:32.580 --> 00:00:34.550
are displayed as Tofu.

00:00:34.550 --> 00:00:39.090
Effectively, the characters
are displayed as little boxes

00:00:39.090 --> 00:00:42.540
to indicate your device
doesn't have a font

00:00:42.540 --> 00:00:44.190
to display the text.

00:00:44.190 --> 00:00:46.550
The image on the
right highlights

00:00:46.550 --> 00:00:49.100
another difficult situation.

00:00:49.100 --> 00:00:52.810
The text is there,
but ugly because it's

00:00:52.810 --> 00:00:58.150
displayed using fonts of
mismatched styles and weights.

00:00:58.150 --> 00:01:02.580
Developers constantly have
to address both issues.

00:01:02.580 --> 00:01:06.790
But sadly, solutions
aren't always ideal.

00:01:06.790 --> 00:01:12.060
For example, the Daily Express
Urdu, a Pakistani news website,

00:01:12.060 --> 00:01:15.815
runs into the problem that
the Urdu Nastaleeq font

00:01:15.815 --> 00:01:19.030
style, preferred by
Pakistani people,

00:01:19.030 --> 00:01:22.570
isn't available for the
majority of devices.

00:01:22.570 --> 00:01:26.270
So they had to
pre-process every web page

00:01:26.270 --> 00:01:28.920
to present images instead.

00:01:28.920 --> 00:01:33.250
While that works, it pulls
a tremendous amount of time

00:01:33.250 --> 00:01:36.730
in preprocessing as well as
bandwidth for the servers

00:01:36.730 --> 00:01:42.880
and load time for the users,
which isn't really ideal.

00:01:42.880 --> 00:01:45.660
With the goal of
supporting all languages

00:01:45.660 --> 00:01:48.820
with a harmonious
look and feel, Google

00:01:48.820 --> 00:01:52.990
has been developing a
font family called Noto.

00:01:52.990 --> 00:01:56.290
Noto is Google's answer to Tofu.

00:01:56.290 --> 00:02:01.290
The name Noto is to convey
the idea that Google's goal is

00:02:01.290 --> 00:02:05.030
to see no more Tofu.

00:02:05.030 --> 00:02:09.759
To date, Noto has supported
over 300 languages,

00:02:09.759 --> 00:02:15.400
using more than 90 scripts,
covering 110,000 characters.

00:02:15.400 --> 00:02:18.550
It has covered all
major living languages,

00:02:18.550 --> 00:02:24.420
such as English, Vietnamese,
Greek, Russian, Thai, Arabic,

00:02:24.420 --> 00:02:29.080
Hebrew, Chinese, Japanese,
Korean, Hindi, Urdu,

00:02:29.080 --> 00:02:30.520
and way beyond.

00:02:30.520 --> 00:02:33.290
It also supports
smaller languages,

00:02:33.290 --> 00:02:36.950
like Meetei Mayek and
even ancient languages,

00:02:36.950 --> 00:02:40.480
like Egyptian hieroglyphics.

00:02:40.480 --> 00:02:41.330
Look at this image.

00:02:41.330 --> 00:02:45.860
It includes a sample of Noto
for a subset of languages

00:02:45.860 --> 00:02:47.730
supported by this font.

00:02:47.730 --> 00:02:50.510
I bet only a small
number of people

00:02:50.510 --> 00:02:55.250
could find Cherokee and
cuneiform in the image.

00:02:55.250 --> 00:02:58.660
As a developer, supporting
different languages

00:02:58.660 --> 00:03:02.780
comes with a bit of overhead
that you have to design for.

00:03:02.780 --> 00:03:09.000
In addition to eliminating Tofu,
another important goal of Noto

00:03:09.000 --> 00:03:13.980
is to provide harmonious look
and feel across languages.

00:03:13.980 --> 00:03:17.820
To achieve harmony is
not as simple as setting

00:03:17.820 --> 00:03:20.740
the same height
for all languages.

00:03:20.740 --> 00:03:25.680
For example, tall languages,
like Tibetan in this image,

00:03:25.680 --> 00:03:28.810
will look really
squeezed and much harder

00:03:28.810 --> 00:03:32.910
to read than English, although
the same height for English

00:03:32.910 --> 00:03:36.520
and Tibetan is actually set.

00:03:36.520 --> 00:03:41.220
Different baselines and vertical
metrics of different languages

00:03:41.220 --> 00:03:45.070
need to be considered
to achieve harmony.

00:03:45.070 --> 00:03:48.590
But with Noto this
isn't a problem.

00:03:48.590 --> 00:03:52.370
On the right image, you can
see how two popular English

00:03:52.370 --> 00:03:57.520
and Thai fonts make the text
difficult to read and messy.

00:03:57.520 --> 00:03:59.673
Look at the different
sizes, spacing,

00:03:59.673 --> 00:04:02.030
and the letter kerning.

00:04:02.030 --> 00:04:05.180
But with Noto on the
left, these values

00:04:05.180 --> 00:04:10.140
are nicely normalized,
so each language is just

00:04:10.140 --> 00:04:13.970
as easy to read as the next.

00:04:13.970 --> 00:04:15.430
But don't worry.

00:04:15.430 --> 00:04:19.260
All of this support doesn't
come at the cost of the design

00:04:19.260 --> 00:04:24.230
choices that so many beautiful
applications require.

00:04:24.230 --> 00:04:27.170
Noto provides
sans-serif and the serif

00:04:27.170 --> 00:04:29.680
styles for many languages.

00:04:29.680 --> 00:04:33.170
It supports seven
weights for CJK

00:04:33.170 --> 00:04:37.100
and two weights for
many other languages.

00:04:37.100 --> 00:04:41.040
In some cases, Noto
represents the frontier

00:04:41.040 --> 00:04:43.010
of font development.

00:04:43.010 --> 00:04:49.020
For example, Noto Sans CJK is
the very first pan-CJK font

00:04:49.020 --> 00:04:51.060
family in the world.

00:04:51.060 --> 00:04:53.940
It supports
ideographic characters

00:04:53.940 --> 00:04:57.200
following different
regional writing conventions

00:04:57.200 --> 00:05:01.560
for simplified Chinese,
traditional Chinese, Japanese,

00:05:01.560 --> 00:05:04.100
and the Korean users.

00:05:04.100 --> 00:05:08.550
So in the past, quite of
few Taiwanese Android users

00:05:08.550 --> 00:05:12.380
were upset because a lot of
traditional Chinese characters

00:05:12.380 --> 00:05:15.370
were displayed in a wrong way.

00:05:15.370 --> 00:05:18.680
Look at the highlighted
text in the screenshot.

00:05:18.680 --> 00:05:21.160
Three out of eight
characters are

00:05:21.160 --> 00:05:24.510
wrong with the old
font on Android.

00:05:24.510 --> 00:05:28.160
Now with Noto, Taiwanese
users can finally

00:05:28.160 --> 00:05:32.520
see their language displayed
in the right way on Android

00:05:32.520 --> 00:05:34.120
since Lollipop.

00:05:34.120 --> 00:05:39.520
What's best, Noto is open source
and free for anybody to use,

00:05:39.520 --> 00:05:44.750
such as bundled with your
app or used as a web font.

00:05:44.750 --> 00:05:48.360
Noto has been used by
Android and Chrome OS

00:05:48.360 --> 00:05:50.720
as the default system fonts.

00:05:50.720 --> 00:05:54.860
Many Noto fonts are also onboard
on Google Web Fonts Early

00:05:54.860 --> 00:06:00.280
Access and was broadly picked
up by popular Linux distros.

00:06:00.280 --> 00:06:05.010
To date, 1 billion users are
benefitting from Noto fonts

00:06:05.010 --> 00:06:10.510
on their phones, tablets,
desktops, and even wearables.

00:06:10.510 --> 00:06:15.810
As developers start looking
towards international success,

00:06:15.810 --> 00:06:19.680
getting the font right
is the first big problem

00:06:19.680 --> 00:06:24.760
you have to tackle, and with
Noto it's not a problem at all.

00:06:24.760 --> 00:06:28.350
So download the Noto
packages and start

00:06:28.350 --> 00:06:31.220
thinking globally today.

00:06:31.220 --> 00:06:33.080
Thank you.

