WEBVTT
Kind: captions
Language: en

00:00:00.090 --> 00:00:02.550
So before we go into how predication works

00:00:02.550 --> 00:00:05.945
in hardware, let's first look at the technique called

00:00:05.945 --> 00:00:08.600
if-conversion, which is how the compiler creates the

00:00:08.600 --> 00:00:12.430
code that will be executed along both paths. So

00:00:12.430 --> 00:00:15.805
let's say we have a relatively small if-then-else

00:00:15.805 --> 00:00:19.330
here, where depending on the condition, x gets either

00:00:19.330 --> 00:00:21.505
the value from array of i, or array

00:00:21.505 --> 00:00:25.950
from j, and y gets either incremented or decremented.

00:00:25.950 --> 00:00:30.039
If-conversion, transforms this code into the work of

00:00:30.039 --> 00:00:33.780
both paths, followed by a selection of some sort,

00:00:33.780 --> 00:00:37.670
between the results of the two paths. But there

00:00:37.670 --> 00:00:39.290
is still a question of how do we do

00:00:39.290 --> 00:00:42.245
this. If we convert this into some sort

00:00:42.245 --> 00:00:45.845
of a conditional expression that still branches based on

00:00:45.845 --> 00:00:48.470
the condition and then does the move of x2

00:00:48.470 --> 00:00:51.170
into x, otherwise, does the move of x into

00:00:51.170 --> 00:00:54.380
x1, then we really haven't done much. Because we

00:00:54.380 --> 00:00:59.040
converted one branch into another branch and now we

00:00:59.040 --> 00:01:01.208
have this branch twice. So unless we have some

00:01:01.208 --> 00:01:04.135
sort of a correlating predictor like, for example, the

00:01:04.135 --> 00:01:07.247
global history predictor, we will possibly have two missed

00:01:07.247 --> 00:01:09.750
predictions here. Instead of the one we might have

00:01:09.750 --> 00:01:12.037
had. So if this is all you can do,

00:01:12.037 --> 00:01:17.165
then you don't do if-conversion. What we need for if-conversion

00:01:17.165 --> 00:01:21.575
to work is some sort of a move instruction that will

00:01:21.575 --> 00:01:26.280
do something like move x1 into x, if a flag is true.

