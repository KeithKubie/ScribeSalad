WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.000
The answer is that the attacker would expect to need

00:00:03.000 --> 00:00:05.000
N/2 times as much.

00:00:05.000 --> 00:00:07.000
The reason for this is because of this step.

00:00:07.000 --> 00:00:11.000
Bob randomly picks one of the puzzles and solves just that puzzle.

00:00:11.000 --> 00:00:15.000
Once Bob has solved it, he sends back the number of the puzzle that he solved,

00:00:15.000 --> 00:00:17.000
which was part of the puzzle to Alice,

00:00:17.000 --> 00:00:19.000
and that establishes the shared key.

00:00:19.000 --> 00:00:22.000
An attacker can hear that number but doesn't know which

00:00:22.000 --> 00:00:25.000
of the encrypted messages corresponds to that.

00:00:25.000 --> 00:00:28.000
The attacker would need to try and break all of the encrypted messages

00:00:28.000 --> 00:00:32.000
and would be expected to find the one that matches the one that Bob picked

00:00:32.000 --> 00:00:34.000
after trying about half of them.

00:00:34.000 --> 00:00:36.000
This is a neat idea.

00:00:36.000 --> 00:00:38.000
That N/2 advantage is really not enough.

00:00:38.000 --> 00:00:42.000
For that to be significant, we would have to have a really large number of puzzles.

00:00:42.000 --> 00:00:44.000
That involves a lot of work for Alice.

00:00:44.000 --> 00:00:47.000
Alice still needs to create all those puzzles.

00:00:47.000 --> 00:00:49.000
And it requires a lot of bandwidth.

00:00:49.000 --> 00:00:52.000
We'd have to send all those puzzles across the network,

00:00:52.000 --> 00:00:54.000
so a very impractical idea.

