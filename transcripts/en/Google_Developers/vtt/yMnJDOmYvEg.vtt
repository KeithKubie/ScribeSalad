WEBVTT
Kind: captions
Language: en

00:00:01.460 --> 00:00:02.200
SEAN WOHLTMAN: Hi, I'm
Sean Wohltman.

00:00:02.200 --> 00:00:05.450
I'm a geospatial scientist on
the Enterprise Team at Google.

00:00:05.450 --> 00:00:05.840
JOSH LIVNI: Hi.

00:00:05.840 --> 00:00:07.050
My name is Josh Livni.

00:00:07.050 --> 00:00:09.960
I'm on the Developer Relations
Team for Maps.

00:00:09.960 --> 00:00:12.070
So welcome, thank
you for coming.

00:00:12.070 --> 00:00:14.490
This is Design Patterns for
Maps, Architecture.

00:00:14.490 --> 00:00:18.470
If you guys are interested in UX
patterns, how to make your

00:00:18.470 --> 00:00:20.840
map look amazing and beautiful
for the end user, you're in

00:00:20.840 --> 00:00:21.850
the wrong session.

00:00:21.850 --> 00:00:24.030
That would be the next session
coming up right after this,

00:00:24.030 --> 00:00:25.360
Design Principles Maps.

00:00:25.360 --> 00:00:27.700
So, here we're going to be
focusing on what happens

00:00:27.700 --> 00:00:30.840
behind the scenes as you build
your application, some common

00:00:30.840 --> 00:00:34.610
patterns we see developers come
across on all different

00:00:34.610 --> 00:00:38.460
kinds of applications, and
best practices there.

00:00:38.460 --> 00:00:40.810
SEAN WOHLTMAN: So last year,
when Hurricane Sandy made

00:00:40.810 --> 00:00:43.540
landfall on the Eastern coast
of the United States, there

00:00:43.540 --> 00:00:45.880
was a pretty interesting
application that was built.

00:00:45.880 --> 00:00:46.810
It was called MapMill.

00:00:46.810 --> 00:00:50.400
It was built by Schuyler Erle,
some crisis mappers, John

00:00:50.400 --> 00:00:52.580
Crowley, Kate Chapman.

00:00:52.580 --> 00:00:56.090
And the site was fairly
simple in it's design.

00:00:56.090 --> 00:00:57.300
It showed images.

00:00:57.300 --> 00:00:59.910
These images were collected,
over 35,000 of them, by the

00:00:59.910 --> 00:01:02.070
Civil Air Patrol in
various states.

00:01:02.070 --> 00:01:04.120
These are guys hanging out
inside of Blackhawks or

00:01:04.120 --> 00:01:06.755
outside fixed wing airplanes,
taking pictures of what they

00:01:06.755 --> 00:01:08.000
saw on the ground.

00:01:08.000 --> 00:01:10.120
And they do that because these
are the first eyes on the

00:01:10.120 --> 00:01:11.330
destruction there.

00:01:11.330 --> 00:01:13.470
So they have all these thousands
of images, and what

00:01:13.470 --> 00:01:16.790
they asked was the public to
come in, whether you were a

00:01:16.790 --> 00:01:21.370
seasoned photo mode scientist,
or if you were a novice that

00:01:21.370 --> 00:01:23.610
was just interested in
trying to help out.

00:01:23.610 --> 00:01:26.530
And it was very simple, look
at the photo and rate it.

00:01:26.530 --> 00:01:28.615
Is it light damage, moderate
damage, or would you say that

00:01:28.615 --> 00:01:29.350
this is heavy damage?

00:01:29.350 --> 00:01:31.910
And here this picture of
Seaside, New Jersey,

00:01:31.910 --> 00:01:34.080
obviously, would be
heavy damage.

00:01:34.080 --> 00:01:36.670
And the cool thing about it was
they took the aggregate of

00:01:36.670 --> 00:01:38.730
all those votes and
created a grid.

00:01:38.730 --> 00:01:41.200
And as soon as we saw this, we
saw an immense potential.

00:01:41.200 --> 00:01:43.380
This was information that was
going to be really helpful for

00:01:43.380 --> 00:01:46.980
first responders, and for
decision makers where to go

00:01:46.980 --> 00:01:48.650
and deploy assets.

00:01:48.650 --> 00:01:51.170
So we took this grid and we
deployed it to the Google

00:01:51.170 --> 00:01:52.460
Crisis Map.

00:01:52.460 --> 00:01:56.890
And in so doing, we almost
started to impact our server.

00:01:56.890 --> 00:02:01.240
Because Schuyler was putting
out a geoJSON feed of this

00:02:01.240 --> 00:02:05.930
entire grid and we, basically,
were going and scraping it to

00:02:05.930 --> 00:02:09.070
put it into our servers,
on an update cycle.

00:02:09.070 --> 00:02:11.580
And we handled all the caching
once it got our servers, but

00:02:11.580 --> 00:02:13.760
that direct request, every
single time I was going to do

00:02:13.760 --> 00:02:15.830
an update, was starting
to impact the main

00:02:15.830 --> 00:02:17.120
purpose of that site.

00:02:17.120 --> 00:02:18.940
So because Schuyler knows
what he's doing.

00:02:18.940 --> 00:02:20.820
He's been doing GIS for
a long time and web

00:02:20.820 --> 00:02:21.710
development for a long time.

00:02:21.710 --> 00:02:23.530
He said, this is a
simple solution.

00:02:23.530 --> 00:02:26.000
Let me dump this out as a cache,
periodically, and then

00:02:26.000 --> 00:02:29.080
you can hit that cache and
not take down our site.

00:02:29.080 --> 00:02:32.210
It's a good thing he did it
because the site, not just

00:02:32.210 --> 00:02:34.290
through Crisis Maps but through
lots of other press

00:02:34.290 --> 00:02:36.710
releases, became very popular.

00:02:36.710 --> 00:02:38.960
A lot of people got involved
in this activity.

00:02:38.960 --> 00:02:42.455
In fact, we said traffic
records, on the Crisis Map,

00:02:42.455 --> 00:02:44.590
for the amount of traffic coming
in, with people in the

00:02:44.590 --> 00:02:47.170
Northeast wondering what was
going on, how were their

00:02:47.170 --> 00:02:48.800
homes, were homes gone?

00:02:48.800 --> 00:02:51.713
And so, it's a good thing, that
simple little change, of

00:02:51.713 --> 00:02:53.530
rather than having a dynamic
request for millions of

00:02:53.530 --> 00:02:56.200
people, to having a simple
cache, that we then cached for

00:02:56.200 --> 00:02:59.340
them made all the difference.

00:02:59.340 --> 00:03:01.790
JOSH LIVNI: Yeah, so why would
you care about this?

00:03:01.790 --> 00:03:03.670
You might be thinking your
application is not going to

00:03:03.670 --> 00:03:06.590
necessarily be front page of
reddit, hopefully it is, or on

00:03:06.590 --> 00:03:08.400
our Crisis Map feature there.

00:03:08.400 --> 00:03:10.180
There's all kinds of
applications though that the

00:03:10.180 --> 00:03:12.410
same set of principles
applies.

00:03:12.410 --> 00:03:13.760
SEAN WOHLTMAN: That's right, I
mean what if you were building

00:03:13.760 --> 00:03:16.030
a really important local crime
map and you wanted to get that

00:03:16.030 --> 00:03:17.930
information out there because
it's important to people in

00:03:17.930 --> 00:03:19.180
your community.

00:03:19.180 --> 00:03:21.380
JOSH LIVNI: Yeah, or a totally
different real estate site.

00:03:21.380 --> 00:03:22.940
We talked about some
of these last year.

00:03:22.940 --> 00:03:25.280
Where you've got lots of dynamic
data updating, to tons

00:03:25.280 --> 00:03:27.590
of people visiting on lots
of different platforms.

00:03:27.590 --> 00:03:29.360
SEAN WOHLTMAN: Or what if you
have an incredibly popular

00:03:29.360 --> 00:03:31.290
game like "Ingress." And you've
got millions of spatial

00:03:31.290 --> 00:03:33.160
points of interest that you're
trying to keep track of, and

00:03:33.160 --> 00:03:34.880
how people interact with them.

00:03:34.880 --> 00:03:37.410
JOSH LIVNI: Yup, or perhaps,
you're a local municipality

00:03:37.410 --> 00:03:39.600
trying to put out some
spatial data.

00:03:39.600 --> 00:03:42.020
It's relatively static, to a
relatively small number of

00:03:42.020 --> 00:03:44.120
people but you need to make sure
it's interactive in the

00:03:44.120 --> 00:03:45.480
appropriate way.

00:03:45.480 --> 00:03:47.320
SEAN WOHLTMAN: Or you're relying
on a very dynamic

00:03:47.320 --> 00:03:48.770
feed, like an earthquake feed.

00:03:48.770 --> 00:03:50.640
And you have different
visualizations that people can

00:03:50.640 --> 00:03:52.650
come and customize, to try to
make a map that makes the most

00:03:52.650 --> 00:03:53.650
sense to them.

00:03:53.650 --> 00:03:55.620
JOSH LIVNI: Or a super immersive
application, where

00:03:55.620 --> 00:03:57.580
you're really taking advantage
of some of the data, and

00:03:57.580 --> 00:03:59.930
imagery, and terrain matches
that we have, to really get

00:03:59.930 --> 00:04:03.400
people in and add a little bit
of your own magic on top.

00:04:03.400 --> 00:04:04.680
SEAN WOHLTMAN: So there's
various tools that you might

00:04:04.680 --> 00:04:05.120
do for this.

00:04:05.120 --> 00:04:07.220
And there's various options here
at Google that you can

00:04:07.220 --> 00:04:08.920
use to make these applications
work.

00:04:08.920 --> 00:04:11.720
You can use the Google Maps API
and just push data into

00:04:11.720 --> 00:04:12.830
the client.

00:04:12.830 --> 00:04:14.620
JOSH LIVNI: Yup, so a little
bit of JavaScript there or

00:04:14.620 --> 00:04:15.650
perhaps some KML?

00:04:15.650 --> 00:04:17.589
Maybe you're writing
your own KML?

00:04:17.589 --> 00:04:20.100
Maybe you're using it as it
transport across different

00:04:20.100 --> 00:04:22.149
types of interoperable
GeoServers.

00:04:22.149 --> 00:04:23.740
SEAN WOHLTMAN: Or maybe you have
a little application that

00:04:23.740 --> 00:04:25.700
you're hosting on Drive that
spits out geoJSON.

00:04:25.700 --> 00:04:28.510
Or you're pulling geoJSON feeds,
like we were, from an

00:04:28.510 --> 00:04:30.360
external site.

00:04:30.360 --> 00:04:33.940
JOSH LIVNI: So, we have a ton of
different ways and services

00:04:33.940 --> 00:04:36.020
that help you build mapping
applications.

00:04:36.020 --> 00:04:38.360
And we see developers,
oftentimes, pick and choose a

00:04:38.360 --> 00:04:41.620
few different tools and run
into similar problems.

00:04:41.620 --> 00:04:45.140
And what we want to do is show
you, through a few different

00:04:45.140 --> 00:04:47.540
stories we'll get to in a
minute, some common patterns

00:04:47.540 --> 00:04:50.120
we've seen that might help you
think about, in advance, what

00:04:50.120 --> 00:04:53.360
might affect your application
as it grows.

00:04:53.360 --> 00:04:55.600
So before we get into that
though, I wanted to highlight

00:04:55.600 --> 00:04:58.050
something that Brian mentioned
on stage earlier today, which

00:04:58.050 --> 00:05:00.070
is our Maps Engine platform.

00:05:00.070 --> 00:05:00.880
So this is pretty cool.

00:05:00.880 --> 00:05:02.690
I'm not sure if all of
you have the chance

00:05:02.690 --> 00:05:03.820
to play with it.

00:05:03.820 --> 00:05:07.460
What we have here is the Maps
Engine layer in Maps API.

00:05:07.460 --> 00:05:09.010
Just loading some different
layers.

00:05:09.010 --> 00:05:11.160
I loaded parcels from
San Francisco and

00:05:11.160 --> 00:05:12.790
trees from San Francisco.

00:05:12.790 --> 00:05:14.290
And you can go ahead
and scroll around

00:05:14.290 --> 00:05:15.470
and click on them.

00:05:15.470 --> 00:05:17.620
And the thing I want to mention,
just upfront--

00:05:17.620 --> 00:05:19.650
we'll talk about some more
of the stuff later--

00:05:19.650 --> 00:05:22.550
is that all of you are welcome,
now to go ahead and

00:05:22.550 --> 00:05:24.280
get an account on Maps Engine.

00:05:24.280 --> 00:05:26.330
You can head over to the
Sandbox, the Google Maps

00:05:26.330 --> 00:05:28.080
Sandbox right after
this. talk.

00:05:28.080 --> 00:05:30.850
Give us your email and you'll
within a few minutes be signed

00:05:30.850 --> 00:05:33.650
up to a test account, where you
can play around with this.

00:05:33.650 --> 00:05:35.320
So throughout this session we
are referring to some of the

00:05:35.320 --> 00:05:37.230
things that, hopefully, you
guys will be playing

00:05:37.230 --> 00:05:38.600
with in a few hours.

00:05:38.600 --> 00:05:39.820
SEAN WOHLTMAN: And if you want
to know more about it, there's

00:05:39.820 --> 00:05:42.710
also a session tomorrow called
"Our Maps Your Business." And

00:05:42.710 --> 00:05:45.230
so if you want to get a more
in-depth look into Google Maps

00:05:45.230 --> 00:05:46.920
Engine than we're going to do
today, I highly suggest

00:05:46.920 --> 00:05:48.550
attending that session.

00:05:48.550 --> 00:05:49.710
JOSH LIVNI: Yeah.

00:05:49.710 --> 00:05:51.790
OK, so as we mentioned,
there's a

00:05:51.790 --> 00:05:52.960
lot of common patterns.

00:05:52.960 --> 00:05:55.440
You look at all different
kinds of applications--

00:05:55.440 --> 00:05:57.480
and we just showed a small
subset of the kind you might

00:05:57.480 --> 00:05:59.970
be building on the previous
animation--

00:05:59.970 --> 00:06:01.190
and we see very similar
patterns.

00:06:01.190 --> 00:06:02.790
So we're going to go ahead
and start out with some

00:06:02.790 --> 00:06:06.450
crowdsourcing example to
show you what we mean.

00:06:06.450 --> 00:06:08.290
SEAN WOHLTMAN: So also during
Hurricane Sandy, we had

00:06:08.290 --> 00:06:10.410
another very popular layer that
made its way onto the

00:06:10.410 --> 00:06:11.710
Crisis Map.

00:06:11.710 --> 00:06:14.120
Because of the extent of damage
to trees and power

00:06:14.120 --> 00:06:17.450
lines that were down, a lot of
the residents had no power for

00:06:17.450 --> 00:06:19.200
days and weeks on end.

00:06:19.200 --> 00:06:22.330
So a lot of folks actually did
prepare, did have generators.

00:06:22.330 --> 00:06:25.140
And there was, all of a sudden,
a 1970s gas shortage

00:06:25.140 --> 00:06:27.400
inside of a New Jersey
and New York.

00:06:27.400 --> 00:06:30.560
So, some enterprising young
students decided, hey, why

00:06:30.560 --> 00:06:32.900
don't we get people, feet on the
ground, to try to make a

00:06:32.900 --> 00:06:33.840
map of this.

00:06:33.840 --> 00:06:35.620
So, let's define
a problem here.

00:06:35.620 --> 00:06:38.360
All right, we need to map which
gas stations have gas.

00:06:38.360 --> 00:06:39.900
That's a fairly simple
problem statement.

00:06:39.900 --> 00:06:41.830
How do you go about
approaching that?

00:06:41.830 --> 00:06:43.050
So you might think, well,
let's go ahead

00:06:43.050 --> 00:06:44.210
and create a forum.

00:06:44.210 --> 00:06:45.650
We'll get a forum out there.

00:06:45.650 --> 00:06:46.820
What's the name of
the gas station?

00:06:46.820 --> 00:06:47.770
What's the address?

00:06:47.770 --> 00:06:48.890
Is there gas available?

00:06:48.890 --> 00:06:50.820
And you're probably going to
host that forum somewhere on

00:06:50.820 --> 00:06:51.600
the internet.

00:06:51.600 --> 00:06:53.740
And then the idea is that you're
going to make this as

00:06:53.740 --> 00:06:54.980
viral as possible.

00:06:54.980 --> 00:06:56.420
Hopefully get some
press behind it.

00:06:56.420 --> 00:06:58.620
And people are going to come
in and submit that type of

00:06:58.620 --> 00:06:59.390
information.

00:06:59.390 --> 00:07:01.710
But you can't really
trust everybody.

00:07:01.710 --> 00:07:02.890
There's most of the times
people try to

00:07:02.890 --> 00:07:03.750
do good during crisis.

00:07:03.750 --> 00:07:04.980
But there's always going to
somebody that's going to come

00:07:04.980 --> 00:07:05.630
in there and troll.

00:07:05.630 --> 00:07:07.660
So, you're going to have some
sort of moderation capability

00:07:07.660 --> 00:07:08.570
in there as well.

00:07:08.570 --> 00:07:10.110
Somebody that can be able
to approve things.

00:07:10.110 --> 00:07:13.800
Somebody you trust, that's been
working on the project

00:07:13.800 --> 00:07:16.110
for a while and you trust
their opinion.

00:07:16.110 --> 00:07:18.720
And then you have to be able
to make this spatial.

00:07:18.720 --> 00:07:20.500
So you're going to want to
export that to some sort of

00:07:20.500 --> 00:07:23.075
format, whether it's KML, or
geoJSON, or whatever the

00:07:23.075 --> 00:07:26.320
geo-flavor du jour is.

00:07:26.320 --> 00:07:28.400
And then, like we saw with
Schuyler, you really want to

00:07:28.400 --> 00:07:31.050
make sure that if you have a
database or if you have some

00:07:31.050 --> 00:07:33.610
service that's generating
these feeds, that you're

00:07:33.610 --> 00:07:34.890
caching out the results,
right?

00:07:34.890 --> 00:07:36.950
You don't want people hitting
your live service.

00:07:36.950 --> 00:07:39.070
And then, and only then, once
you're up and set up and

00:07:39.070 --> 00:07:42.860
running, that's when you want
to put this data on a map.

00:07:42.860 --> 00:07:43.240
JOSH LIVNI: Right.

00:07:43.240 --> 00:07:46.180
So, we'll make a brief segue
here into something we see

00:07:46.180 --> 00:07:48.025
happen a lot, when people start
collecting information

00:07:48.025 --> 00:07:49.430
that's spatially related.

00:07:49.430 --> 00:07:51.910
You come up with this type of
forum we mentioned earlier.

00:07:51.910 --> 00:07:53.920
You've got all the information
you think you need; the

00:07:53.920 --> 00:07:55.815
address; even the latitude,
longitude.

00:07:55.815 --> 00:07:58.160
I've seen forms out there, just
like this in the wild.

00:07:58.160 --> 00:08:00.760
And I just want to say that this
is not a very good form.

00:08:00.760 --> 00:08:03.570
So part of best practices for
your architecture, is taking

00:08:03.570 --> 00:08:05.740
advantage of other people's
architecture.

00:08:05.740 --> 00:08:08.570
So this took me two or three
minutes to modify this form,

00:08:08.570 --> 00:08:11.060
that I created in Google
Spreadsheets under the form,

00:08:11.060 --> 00:08:14.780
and added an interactive map
and a little drop down.

00:08:14.780 --> 00:08:19.070
So if I'm looking for a gas
station, say Exxon and it'll

00:08:19.070 --> 00:08:20.030
pop it right up.

00:08:20.030 --> 00:08:22.410
And this is just cut and paste
code, directly from our

00:08:22.410 --> 00:08:24.200
example, super easy.

00:08:24.200 --> 00:08:26.740
And if I happen to know the
gas station's there, I can

00:08:26.740 --> 00:08:28.270
kind of drag it over and update

00:08:28.270 --> 00:08:29.150
the latitude, longitude.

00:08:29.150 --> 00:08:30.240
Those fields should be hidden.

00:08:30.240 --> 00:08:32.140
Users should never
know about that.

00:08:32.140 --> 00:08:33.289
Anyway, you go ahead.

00:08:33.289 --> 00:08:34.220
You say there's gas there.

00:08:34.220 --> 00:08:37.429
You submit the form.

00:08:37.429 --> 00:08:40.450
And what you should see, there
it is, is the crowdsourced

00:08:40.450 --> 00:08:42.590
information coming into
your spreadsheet.

00:08:42.590 --> 00:08:45.050
And we've got an extra column
for confirmed, where a smaller

00:08:45.050 --> 00:08:47.350
select group of people
can modify that.

00:08:47.350 --> 00:08:48.460
Now, once you're at this
stage you have a

00:08:48.460 --> 00:08:49.330
whole bunch of data.

00:08:49.330 --> 00:08:50.840
We want to get it out
onto the map.

00:08:50.840 --> 00:08:51.550
This is pretty easy.

00:08:51.550 --> 00:08:53.690
The form took just a few
minutes to create.

00:08:53.690 --> 00:08:56.680
I could go here to tools
and use Apps Script.

00:08:56.680 --> 00:08:58.980
Now, if you're interested in
creating really amazing forms

00:08:58.980 --> 00:09:01.556
with really powerful Apps Script
integration, you just

00:09:01.556 --> 00:09:02.570
missed a talk about that.

00:09:02.570 --> 00:09:03.660
But you can catch it on video.

00:09:03.660 --> 00:09:05.460
I think they're all going live
in the next day or two.

00:09:05.460 --> 00:09:10.400
So the talk for that is called
Forms, Use Apps Script to

00:09:10.400 --> 00:09:11.250
Create Dynamic Forms.

00:09:11.250 --> 00:09:13.840
So, pretty cool talk where they
go over the power of Apps

00:09:13.840 --> 00:09:15.750
Script, and all the kinds
of things you could do.

00:09:15.750 --> 00:09:18.210
For example, if something new
comes in, you could send that

00:09:18.210 --> 00:09:21.110
data to a different API or
service that you have to run

00:09:21.110 --> 00:09:22.280
some computations in it.

00:09:22.280 --> 00:09:24.170
And all kinds of dynamic
interaction you can do with

00:09:24.170 --> 00:09:24.960
Apps Script.

00:09:24.960 --> 00:09:26.990
The easiest way to go
from here is just a

00:09:26.990 --> 00:09:28.520
File, Publish to Web.

00:09:28.520 --> 00:09:31.490
And then you get the power
of the spreadsheets API.

00:09:31.490 --> 00:09:32.450
The data comes out.

00:09:32.450 --> 00:09:34.445
A RESTful request that
you can make.

00:09:34.445 --> 00:09:35.510
Make it public.

00:09:35.510 --> 00:09:36.990
People can hit that feed.

00:09:36.990 --> 00:09:38.170
It scales reasonably well.

00:09:38.170 --> 00:09:40.960
There's a little extra work
though involved in sort of

00:09:40.960 --> 00:09:46.560
transforming that data feed in
XML or JSON to something more

00:09:46.560 --> 00:09:47.400
map friendly.

00:09:47.400 --> 00:09:50.060
Because this will not
necessarily have that in mind.

00:09:50.060 --> 00:09:51.710
So keep in mind those tradeoffs,
if you're just

00:09:51.710 --> 00:09:53.300
going this really simple way.

00:09:53.300 --> 00:09:55.580
And also keep in mind the
tradeoff of, this is not

00:09:55.580 --> 00:09:57.790
designed for tens of thousands
of points.

00:09:57.790 --> 00:09:59.700
Of course, spreadsheets
can handle that.

00:09:59.700 --> 00:10:01.560
It's too much data to send over
the wire to the client,

00:10:01.560 --> 00:10:03.370
on all these dynamic requests.

00:10:03.370 --> 00:10:05.950
So, a super simple way to
get up and running.

00:10:05.950 --> 00:10:07.800
Just think about the way you're
bring the data in and

00:10:07.800 --> 00:10:10.680
how you want to publish
it out.

00:10:10.680 --> 00:10:13.630
Oh yeah, and then a lot of
people, when we mention

00:10:13.630 --> 00:10:15.890
scalability, they think
immediately QPS.

00:10:15.890 --> 00:10:17.730
What is the queries
per second.

00:10:17.730 --> 00:10:19.400
I don't know how many of you
have noticed the little

00:10:19.400 --> 00:10:21.420
sensors we have around
Google I/0.

00:10:21.420 --> 00:10:22.430
Hopefully, you guys
have seen that.

00:10:22.430 --> 00:10:23.240
We have hundreds of those.

00:10:23.240 --> 00:10:26.620
There's one right on stage,
tracking me as I talk.

00:10:26.620 --> 00:10:27.930
And tracking you, if
you walk by it.

00:10:27.930 --> 00:10:31.290
And tracking five or six other
different things, including

00:10:31.290 --> 00:10:33.480
temperature and all
kinds of readings.

00:10:33.480 --> 00:10:35.930
There's a great talk on that,
the Data Sensing Labs,

00:10:35.930 --> 00:10:36.390
tomorrow evening.

00:10:36.390 --> 00:10:37.860
Check out the architecture
there.

00:10:37.860 --> 00:10:40.190
My point is here, we have
a whole bunch of data.

00:10:40.190 --> 00:10:41.800
This is also crowdsourcing.

00:10:41.800 --> 00:10:44.690
The issue here isn't tons of
people hitting the site, but

00:10:44.690 --> 00:10:45.920
rather tons of data.

00:10:45.920 --> 00:10:48.530
Every few seconds they are
sending a variety of different

00:10:48.530 --> 00:10:50.770
signals back to a server.

00:10:50.770 --> 00:10:52.520
With upwards of the thousands
of these sensors, you're

00:10:52.520 --> 00:10:55.820
talking tens, hundreds of
millions of data points, over

00:10:55.820 --> 00:10:57.180
the course of days or weeks.

00:10:57.180 --> 00:10:58.650
So that's a lot of data
and it's more

00:10:58.650 --> 00:10:59.730
than most people have.

00:10:59.730 --> 00:11:01.860
It kind of gets in the
realm of big data.

00:11:01.860 --> 00:11:04.120
And so, think about that.

00:11:04.120 --> 00:11:06.210
If you're going to have a big
data set, that maybe the

00:11:06.210 --> 00:11:08.590
standard tools that you're using
for crowdsourcing, or

00:11:08.590 --> 00:11:10.660
even maps, aren't
going to apply.

00:11:10.660 --> 00:11:13.400
Now, luckily, it turns out
almost nobody has big data.

00:11:13.400 --> 00:11:16.560
Everyone wishes they did and big
data conferences are fun,

00:11:16.560 --> 00:11:19.260
but when it comes to mapping
and GIS, most people have

00:11:19.260 --> 00:11:20.280
medium-sized data.

00:11:20.280 --> 00:11:22.380
SEAN WOHLTMAN: So what do we
mean by medium-sized data?

00:11:22.380 --> 00:11:24.350
This is a class of data, like
Josh said, that most people

00:11:24.350 --> 00:11:25.360
actually have.

00:11:25.360 --> 00:11:27.670
This is the data that's too big
to send the browser, but

00:11:27.670 --> 00:11:28.510
not quite big data.

00:11:28.510 --> 00:11:30.950
We're talking greater than 5
megs, probably up to a couple

00:11:30.950 --> 00:11:32.510
million rows at max.

00:11:32.510 --> 00:11:34.350
So what are the strategies and
what are the patterns are you

00:11:34.350 --> 00:11:35.740
want to employ when you're
dealing with

00:11:35.740 --> 00:11:36.730
this type of data?

00:11:36.730 --> 00:11:39.650
This is important since it
is what most of you have.

00:11:39.650 --> 00:11:42.910
So, if you have a small area
in San Francisco, you could

00:11:42.910 --> 00:11:45.970
probably get away with pushing
all the geometries in the

00:11:45.970 --> 00:11:48.420
Google Maps API and actually
drawing them

00:11:48.420 --> 00:11:49.930
as an overlay here.

00:11:49.930 --> 00:11:52.380
But what if you wanted to take
that layer and push it out to

00:11:52.380 --> 00:11:53.920
all of San Francisco?

00:11:53.920 --> 00:11:55.880
We're now talking about a couple
hundred megabyte file

00:11:55.880 --> 00:11:57.930
that you have to be able to try
to push into the client.

00:11:57.930 --> 00:12:00.620
And that's not going to be a
happy day for anybody, right?

00:12:00.620 --> 00:12:01.510
Because you want to
keep that density.

00:12:01.510 --> 00:12:03.450
You want to make that map
interactive and have all the

00:12:03.450 --> 00:12:04.260
data there.

00:12:04.260 --> 00:12:06.010
So what's the easiest
strategy?

00:12:06.010 --> 00:12:07.260
Well, it's nothing
really novel.

00:12:07.260 --> 00:12:10.240
What you really want to employ
is take that data and then you

00:12:10.240 --> 00:12:12.690
want to break it up
into a server-side

00:12:12.690 --> 00:12:14.060
rendering of that data.

00:12:14.060 --> 00:12:16.660
You want to be able to just make
a simple overlay of 256

00:12:16.660 --> 00:12:18.420
by 256 pixels.

00:12:18.420 --> 00:12:20.590
But it's not just a
rasterization process.

00:12:20.590 --> 00:12:23.280
Because people are going to
expect that these parcels are

00:12:23.280 --> 00:12:24.240
interactive.

00:12:24.240 --> 00:12:26.450
So you have to have a strategy
for being able to do some sort

00:12:26.450 --> 00:12:27.390
of interaction.

00:12:27.390 --> 00:12:29.265
Whether that means you're using
some sort of an UTF grid

00:12:29.265 --> 00:12:31.040
or using some other technology,
that you're making

00:12:31.040 --> 00:12:35.330
that click actually respond
and get data back.

00:12:35.330 --> 00:12:37.580
So if we take a look at the
diagram from the architecture

00:12:37.580 --> 00:12:39.130
standpoint, it's not too
different from the

00:12:39.130 --> 00:12:39.780
crowdsource.

00:12:39.780 --> 00:12:42.080
You've got one or maybe a couple
people collaborating on

00:12:42.080 --> 00:12:43.560
uploading a big data set.

00:12:43.560 --> 00:12:45.390
You probably still have
some moderation piece.

00:12:45.390 --> 00:12:48.010
If you're a county and you're
doing a tax assessment, and

00:12:48.010 --> 00:12:50.250
you're going out and you're
changing polygons, you need to

00:12:50.250 --> 00:12:51.880
have some sort of moderation
piece.

00:12:51.880 --> 00:12:53.980
But then you need to have the
server-side rendering piece

00:12:53.980 --> 00:12:57.020
that's going to take that vector
data, rasterize it and

00:12:57.020 --> 00:12:59.570
also keep track of the
[? action ?] data for you.

00:12:59.570 --> 00:13:00.870
Again, you're going to
want to have a cache.

00:13:00.870 --> 00:13:02.930
The nice thing about having
static tiles is there's kind

00:13:02.930 --> 00:13:05.480
of cache built into that,
in the sense that the

00:13:05.480 --> 00:13:06.320
tiles are the cache.

00:13:06.320 --> 00:13:07.580
But you also want to make
sure that it's load

00:13:07.580 --> 00:13:08.580
balanced, of course.

00:13:08.580 --> 00:13:10.980
If this becomes a very popular
site, where your map goes

00:13:10.980 --> 00:13:12.720
viral, you're going to want to
make sure that you could

00:13:12.720 --> 00:13:14.360
handle the traffic
load for it.

00:13:14.360 --> 00:13:17.380
And then you publish
it out to the map.

00:13:17.380 --> 00:13:20.590
JOSH LIVNI: Yeah, so I saw this
really innovative site

00:13:20.590 --> 00:13:22.140
and it's almost sad that
it's innovative.

00:13:22.140 --> 00:13:24.430
It's a GIS portal for the
City of Palo Alto.

00:13:24.430 --> 00:13:26.500
I think they launched about
a month or two ago.

00:13:26.500 --> 00:13:28.930
And it kind of stood out to me
because I go to a lot of GIS

00:13:28.930 --> 00:13:29.580
data portals.

00:13:29.580 --> 00:13:32.400
And it's usually, after going
through some click-agreement,

00:13:32.400 --> 00:13:34.470
just a list of downloads.

00:13:34.470 --> 00:13:37.040
Hopefully, in a format that
your standard GIS

00:13:37.040 --> 00:13:37.850
software can read.

00:13:37.850 --> 00:13:38.670
Often not.

00:13:38.670 --> 00:13:40.765
And so you have no idea what the
data is until you download

00:13:40.765 --> 00:13:43.130
it and put it into some
sort of GIS system.

00:13:43.130 --> 00:13:45.580
What I liked about the site, in
particular, is you can kind

00:13:45.580 --> 00:13:47.340
of scroll down, play
with the map.

00:13:47.340 --> 00:13:50.390
Click on things actually
directly.

00:13:50.390 --> 00:13:52.400
See that you can have some
fairly complex data.

00:13:52.400 --> 00:13:54.450
Here's some land use
data, for example.

00:13:54.450 --> 00:13:55.330
It looks pretty good.

00:13:55.330 --> 00:13:56.980
You have an immediate
idea of what it is,

00:13:56.980 --> 00:13:58.170
before you jump in.

00:13:58.170 --> 00:14:00.450
And then potentially choose to
download or otherwise play

00:14:00.450 --> 00:14:01.490
with the data.

00:14:01.490 --> 00:14:02.570
Pretty cool.

00:14:02.570 --> 00:14:05.830
So, let's go ahead and see how
you might go about building

00:14:05.830 --> 00:14:09.210
that type of application, and
just a simple way to do it.

00:14:09.210 --> 00:14:11.490
So, just as we walked you
through it in the crowdsource

00:14:11.490 --> 00:14:13.945
example using Google
Spreadsheets.

00:14:13.945 --> 00:14:16.710
We'll talk about our Maps
Engine platform here.

00:14:16.710 --> 00:14:19.350
So again, you guys can get some
test accounts by going

00:14:19.350 --> 00:14:21.450
the Sandbox, if you haven't
signed up already.

00:14:21.450 --> 00:14:22.470
Let's go ahead and dive in.

00:14:22.470 --> 00:14:24.390
So the first thing you're going
to do is you're going to

00:14:24.390 --> 00:14:25.370
have some data, hopefully.

00:14:25.370 --> 00:14:25.940
It could be a KML.

00:14:25.940 --> 00:14:27.640
It could be a shape
file, a variety of

00:14:27.640 --> 00:14:29.710
other formats are supported.

00:14:29.710 --> 00:14:31.480
You can upload those
files individually.

00:14:31.480 --> 00:14:33.790
Or what I like to do is click
the Upload button

00:14:33.790 --> 00:14:34.590
and choose a folder.

00:14:34.590 --> 00:14:36.700
And that folder could just
be full of all different

00:14:36.700 --> 00:14:37.820
kinds of GIS data.

00:14:37.820 --> 00:14:40.620
And then you just batch upload
it all with one click.

00:14:40.620 --> 00:14:42.880
So you've uploaded what
we call data sources.

00:14:42.880 --> 00:14:44.200
Now you want to make a map.

00:14:44.200 --> 00:14:46.510
And we do that by creating
what we call a layer.

00:14:46.510 --> 00:14:48.110
And that is, basically,
some styles

00:14:48.110 --> 00:14:49.550
associated with your data.

00:14:49.550 --> 00:14:51.780
So we have some pretty
nice styling

00:14:51.780 --> 00:14:52.730
widgets here on the left.

00:14:52.730 --> 00:14:54.930
You can go ahead and set
filters, based on zoom level

00:14:54.930 --> 00:14:56.080
or attributes.

00:14:56.080 --> 00:14:58.010
So if I want to style all the
parcels that are on a certain

00:14:58.010 --> 00:14:59.490
type of street, [INAUDIBLE]

00:14:59.490 --> 00:15:01.900
will drop down auto-populated
based on your data.

00:15:01.900 --> 00:15:03.780
We won't go into
that too much.

00:15:03.780 --> 00:15:07.320
The next point here is you can
also upload custom icons.

00:15:07.320 --> 00:15:10.320
So, I brought in some trees
earlier, as an example.

00:15:10.320 --> 00:15:12.370
We have a whole bunch
of nice icons.

00:15:12.370 --> 00:15:16.560
But if you don't like them, you
can upload your own icons

00:15:16.560 --> 00:15:19.170
according to your brand or
whatever icons you like, and

00:15:19.170 --> 00:15:20.900
style with those.

00:15:20.900 --> 00:15:23.820
And then the other key piece
here that it adds is really

00:15:23.820 --> 00:15:26.340
robust and simple ways to
share the data out.

00:15:26.340 --> 00:15:28.650
So it uses the exact same
sharing dialogue you might be

00:15:28.650 --> 00:15:30.560
familiar with from
Google Docs, and

00:15:30.560 --> 00:15:31.830
Spreadsheets, and so forth.

00:15:31.830 --> 00:15:33.960
Where you just select the people
that have access to the

00:15:33.960 --> 00:15:36.890
data, access to the published
or unpublished versions.

00:15:36.890 --> 00:15:38.990
And I won't get into that
too much now either.

00:15:38.990 --> 00:15:40.680
But it's a kind of
a key principle.

00:15:40.680 --> 00:15:42.560
It's kind of that
moderation flow.

00:15:42.560 --> 00:15:44.340
You can have a public person
that everyone sees.

00:15:44.340 --> 00:15:47.350
And then some along the stages
of creating layers maps.

00:15:47.350 --> 00:15:49.810
Versions that only people that
you trust or within your

00:15:49.810 --> 00:15:52.680
organization can play with.

00:15:52.680 --> 00:15:55.000
So, the most exciting thing that
I want to talk about is

00:15:55.000 --> 00:15:58.450
our relatively new API, which we
made public just last week.

00:15:58.450 --> 00:16:01.170
So I'm not sure many of you have
had a chance to check out

00:16:01.170 --> 00:16:02.270
the documentation.

00:16:02.270 --> 00:16:03.600
We'll point out a
couple things.

00:16:03.600 --> 00:16:06.080
Those of you who are familiar
with geoJSON

00:16:06.080 --> 00:16:07.440
might recognize it.

00:16:07.440 --> 00:16:10.500
That's the format that we spit
out by default, if you make a

00:16:10.500 --> 00:16:13.350
query for features
in your data set.

00:16:13.350 --> 00:16:14.230
So that's kind of nice.

00:16:14.230 --> 00:16:17.610
It's an interoperable standard
with lots of other software.

00:16:17.610 --> 00:16:18.650
And then what can you
do with that?

00:16:18.650 --> 00:16:20.400
So let's take a look at
some of the other

00:16:20.400 --> 00:16:22.190
end points the API.

00:16:22.190 --> 00:16:24.850
To walk you through some of the
things that the API offers

00:16:24.850 --> 00:16:28.170
I put together this pretty
straightforward application.

00:16:28.170 --> 00:16:30.910
If you could see the URL, and
I'm sure you can't, the URL is

00:16:30.910 --> 00:16:32.870
googlemaps.github.io.

00:16:32.870 --> 00:16:34.580
So, if you go to GitHub and
look at our Google Maps

00:16:34.580 --> 00:16:37.280
account, you'll see a project
under there called Galley.

00:16:37.280 --> 00:16:38.820
This is the Galley
application.

00:16:38.820 --> 00:16:42.480
It basically is a proof of
concept for working with the

00:16:42.480 --> 00:16:44.370
Maps Engine API.

00:16:44.370 --> 00:16:45.660
So I'm going to go ahead
and authorize it.

00:16:45.660 --> 00:16:48.275
What's nice about this, it's
using the GitHub pages, is

00:16:48.275 --> 00:16:49.500
there's no server in
the background.

00:16:49.500 --> 00:16:52.450
I use the JavaScript OAuth
library to authenticate in.

00:16:52.450 --> 00:16:53.140
So that's kind of nice.

00:16:53.140 --> 00:16:55.320
You can build just a straight
web app, use OAuth,

00:16:55.320 --> 00:16:57.870
authenticate in securely, and
you have access to all the

00:16:57.870 --> 00:17:00.470
stuff that users should
have access to.

00:17:00.470 --> 00:17:02.880
In this case, I have access to
two projects; signed up for

00:17:02.880 --> 00:17:05.624
one of those test accounts, so
I have access to that; and I

00:17:05.624 --> 00:17:07.839
have access to my Josh
Livni account.

00:17:07.839 --> 00:17:10.020
We have access to all of the
data and end points.

00:17:10.020 --> 00:17:11.410
Some of the things I mentioned
before are

00:17:11.410 --> 00:17:13.380
the maps, the layers.

00:17:13.380 --> 00:17:15.560
I can render the layers if I
click, for example, on the

00:17:15.560 --> 00:17:19.197
trees and zoom in.

00:17:19.197 --> 00:17:22.250
You should be able to see all of
the trees that we rendered

00:17:22.250 --> 00:17:25.349
according to the styles
that we have.

00:17:25.349 --> 00:17:27.440
We also have access
to the tables.

00:17:27.440 --> 00:17:29.350
This is kind of your
data sources.

00:17:29.350 --> 00:17:31.100
Just going to give an example
of how we can

00:17:31.100 --> 00:17:32.080
interact with those.

00:17:32.080 --> 00:17:36.230
So I downloaded the parks from
City of West Sacramento.

00:17:36.230 --> 00:17:39.520
And I'm going to go ahead and
zoom-in to some parks here.

00:17:39.520 --> 00:17:43.080
Click on this park and I can
just go ahead and edit things.

00:17:43.080 --> 00:17:44.390
And the way this
is doing this--

00:17:44.390 --> 00:17:46.180
I'll get rid of that exclamation
mark I added

00:17:46.180 --> 00:17:48.420
earlier, send it back
to the server.

00:17:48.420 --> 00:17:50.820
And it makes a POST, a
RESTful interface.

00:17:50.820 --> 00:17:52.240
And now that data is live.

00:17:52.240 --> 00:17:54.190
So the next people who view the
published maps are going

00:17:54.190 --> 00:17:57.280
to be able to see my updates.

00:17:57.280 --> 00:17:57.610
Oh, yeah.

00:17:57.610 --> 00:17:59.590
Let's see some satellite data.

00:17:59.590 --> 00:18:02.760
And I can also go ahead and
edit the geometries.

00:18:02.760 --> 00:18:04.440
It's a very simple tool.

00:18:04.440 --> 00:18:07.930
Just using the Maps API geometry
editing, I can go

00:18:07.930 --> 00:18:10.730
ahead and drag this around.

00:18:10.730 --> 00:18:12.520
Add a little park space.

00:18:12.520 --> 00:18:13.700
It's probably not legal.

00:18:13.700 --> 00:18:14.620
Hit Save.

00:18:14.620 --> 00:18:15.430
And there we go.

00:18:15.430 --> 00:18:16.640
Again, posted back.

00:18:16.640 --> 00:18:19.400
So this is a simple way to play
with the application.

00:18:19.400 --> 00:18:21.060
Feel free to check out
the code on GitHub.

00:18:21.060 --> 00:18:22.320
I tried to document it nicely.

00:18:22.320 --> 00:18:24.620
So you get an idea of how we're
interacting with the

00:18:24.620 --> 00:18:26.950
API, how you can build
similar applications.

00:18:26.950 --> 00:18:28.900
You could imagine, for example,
that crowdsourcing

00:18:28.900 --> 00:18:30.880
app, it starts to need
a little bit more

00:18:30.880 --> 00:18:32.050
robustness to it.

00:18:32.050 --> 00:18:34.910
You could go ahead use Apps
Script to push the data to

00:18:34.910 --> 00:18:37.890
Maps Engine on certain things
occurring in the database,

00:18:37.890 --> 00:18:39.500
like things got confirmed.

00:18:39.500 --> 00:18:41.750
And now you can render those
out, again, like Brian

00:18:41.750 --> 00:18:44.690
mentioned earlier, using the
same power that we have behind

00:18:44.690 --> 00:18:45.520
Google Maps itself.

00:18:45.520 --> 00:18:48.980
So all of this data is sent out
to all of our data center

00:18:48.980 --> 00:18:50.340
super duper fast.

00:18:50.340 --> 00:18:52.365
Rendering using the same
technology we use to render

00:18:52.365 --> 00:18:52.910
the base map.

00:18:52.910 --> 00:18:55.260
So there's a great way
to publish your apps.

00:18:55.260 --> 00:18:56.840
SEAN WOHLTMAN: How many lines
of code, is that?

00:18:56.840 --> 00:18:58.710
JOSH LIVNI: The grand total?

00:18:58.710 --> 00:19:02.080
It's about 600 lines of code,
I think, including the

00:19:02.080 --> 00:19:02.690
documentations.

00:19:02.690 --> 00:19:03.740
It's a super simple app.

00:19:03.740 --> 00:19:05.810
I think Twitter Bootstrap helped
me out a little bit.

00:19:05.810 --> 00:19:08.670
As did, obviously, the OOP
JavaScript library.

00:19:08.670 --> 00:19:11.605
I didn't have to pay attention
to UI or authentication.

00:19:11.605 --> 00:19:13.120
But it's really, really
simple to build an

00:19:13.120 --> 00:19:14.140
application like this.

00:19:14.140 --> 00:19:15.770
So, if you need a map editing
tool, feel free to

00:19:15.770 --> 00:19:17.140
fork it and have fun.

00:19:17.140 --> 00:19:17.860
Oh yes, thank you Sean.

00:19:17.860 --> 00:19:19.190
So, we also have assets.

00:19:19.190 --> 00:19:21.190
Assets are what we call
all the stuff you

00:19:21.190 --> 00:19:22.400
put into Maps Engine.

00:19:22.400 --> 00:19:23.370
So it includes--

00:19:23.370 --> 00:19:25.260
if you scroll down the
left hand panel--

00:19:25.260 --> 00:19:28.150
all of our tables, and
maps, and so forth.

00:19:28.150 --> 00:19:29.690
But also a whole bunch
of other stuff

00:19:29.690 --> 00:19:31.990
over on the East Coast.

00:19:31.990 --> 00:19:33.830
Maybe, Sean, you could tell us
a little bit more about what

00:19:33.830 --> 00:19:34.520
those things are.

00:19:34.520 --> 00:19:35.830
SEAN WOHLTMAN: Yeah, so the nice
thing about Maps Engine

00:19:35.830 --> 00:19:37.700
is it's not just about vector
data that we've

00:19:37.700 --> 00:19:38.550
been talking about.

00:19:38.550 --> 00:19:40.575
And that's where we're going to
pick up our story with the

00:19:40.575 --> 00:19:42.380
next type of data that you might
be coming across, which

00:19:42.380 --> 00:19:44.260
would be imagery.

00:19:44.260 --> 00:19:46.350
So imagery, we're probably
familiar with it.

00:19:46.350 --> 00:19:48.657
Here's a shot of us here in the
Moscone Center, nice 15

00:19:48.657 --> 00:19:50.230
centimeter resolution imagery.

00:19:50.230 --> 00:19:52.280
But it's not just photographs.

00:19:52.280 --> 00:19:53.220
It can also be charts.

00:19:53.220 --> 00:19:57.360
You might have charting data,
like this NOAA RNC of Oahu.

00:19:57.360 --> 00:20:00.470
And the same strategy applies
that we talked about with the

00:20:00.470 --> 00:20:01.630
medium-sized data.

00:20:01.630 --> 00:20:04.160
This is where Google Maps got
its start, like Brian

00:20:04.160 --> 00:20:06.570
mentioned, is actually doing
the tiling and creating a

00:20:06.570 --> 00:20:07.650
static tile cache.

00:20:07.650 --> 00:20:09.510
So the same principle applies.

00:20:09.510 --> 00:20:11.340
You need to have some server in
place that's going to take

00:20:11.340 --> 00:20:16.780
that image, chop it up into 256
by 256 pixel images, and

00:20:16.780 --> 00:20:18.140
then serve them out.

00:20:18.140 --> 00:20:20.600
Now, it's really simple once
you have those tiles, to

00:20:20.600 --> 00:20:22.530
overlay them with the
Google Maps API.

00:20:22.530 --> 00:20:27.110
So if I have a Maps API site, I
can just make sure that the

00:20:27.110 --> 00:20:29.570
tiles are exported into the
web Mercator, which is a

00:20:29.570 --> 00:20:31.340
standard for all slippy maps.

00:20:31.340 --> 00:20:34.120
This got a EPSG code of 3785.

00:20:34.120 --> 00:20:37.150
And then if I want to play with
the 3D, I want to make

00:20:37.150 --> 00:20:39.050
sure that I also want to
put out tiles in the

00:20:39.050 --> 00:20:41.100
plaque array or 4356.

00:20:41.100 --> 00:20:43.360
In this case, this is really
nice because I've got the

00:20:43.360 --> 00:20:45.390
bathymetry from Google Earth.

00:20:45.390 --> 00:20:46.780
And I'm overlaying this
nautical chart

00:20:46.780 --> 00:20:47.370
with all these soundings.

00:20:47.370 --> 00:20:51.380
And the soundings are lining
up under water.

00:20:51.380 --> 00:20:52.550
So this is an option.

00:20:52.550 --> 00:20:55.190
If you're going to serve a 3D
application, you want to make

00:20:55.190 --> 00:20:57.870
sure that you have tiles
in that format as well.

00:20:57.870 --> 00:21:00.330
So, just to review you've
got your image.

00:21:00.330 --> 00:21:03.320
You've got some sort of server
running a tile rendering.

00:21:03.320 --> 00:21:06.160
Once again, your cache is kind
of already built for you

00:21:06.160 --> 00:21:07.980
because it is static tiles.

00:21:07.980 --> 00:21:10.000
But you do have to think about
if you're going to put it out

00:21:10.000 --> 00:21:13.480
to two different projections.

00:21:13.480 --> 00:21:16.340
There are a couple of
categories, I would say, and

00:21:16.340 --> 00:21:19.380
different patterns that evolve
when you're taking a look at

00:21:19.380 --> 00:21:21.180
what the use case of
the imagery is.

00:21:21.180 --> 00:21:22.920
And the first one that I want to
talk about is what I would

00:21:22.920 --> 00:21:24.830
call fast response imagery.

00:21:24.830 --> 00:21:27.250
This could be-- if you followed
Public Laboratory and

00:21:27.250 --> 00:21:28.280
funded this Kickstarter--

00:21:28.280 --> 00:21:31.540
a great project where you take a
cellphone or camera, a point

00:21:31.540 --> 00:21:33.940
and shoot camera, and tie it
from a weather balloon.

00:21:33.940 --> 00:21:37.010
Or you go and follow DIY Drones
and build your own

00:21:37.010 --> 00:21:38.970
drone and put and Android
phone there.

00:21:38.970 --> 00:21:40.790
And a little Arduino
to pilot it.

00:21:40.790 --> 00:21:44.500
Or it could be actually formal
imagery, such as NOAA.

00:21:44.500 --> 00:21:46.270
NOAA goes those out and
collects imagery after

00:21:46.270 --> 00:21:47.150
hurricanes.

00:21:47.150 --> 00:21:49.410
And they actually fly with
really nice commercial cameras

00:21:49.410 --> 00:21:51.230
in real planes.

00:21:51.230 --> 00:21:53.740
But the key here is if it's
fast response imagery, it

00:21:53.740 --> 00:21:54.740
needs to be fast, right?

00:21:54.740 --> 00:21:56.530
Time is of the essence.

00:21:56.530 --> 00:21:59.110
Here's an example from
Hurricane Sandy.

00:21:59.110 --> 00:22:00.730
This is Mantoloking,
New Jersey.

00:22:00.730 --> 00:22:04.210
This is the first eyes on
that we had of the area.

00:22:04.210 --> 00:22:06.100
And it's pretty dramatic if
you take a look at what

00:22:06.100 --> 00:22:07.590
Mantoloking looked
like before.

00:22:07.590 --> 00:22:10.140
See the bridge coming into
these beautiful homes,

00:22:10.140 --> 00:22:11.750
beautiful little beach town.

00:22:11.750 --> 00:22:14.610
And then after Sandy
rolled through, the

00:22:14.610 --> 00:22:15.540
dramatic change there.

00:22:15.540 --> 00:22:19.580
We have all of a sudden, a new
natural-made inlet and houses

00:22:19.580 --> 00:22:22.440
have been wiped out.

00:22:22.440 --> 00:22:24.500
Josh is going to tell us a
little bit about one strategy

00:22:24.500 --> 00:22:26.780
that we could use to
get that imagery

00:22:26.780 --> 00:22:27.810
out as fast as possible.

00:22:27.810 --> 00:22:29.950
JOSH LIVNI: Yeah, again, so
we'll take this super simple

00:22:29.950 --> 00:22:30.660
case first.

00:22:30.660 --> 00:22:31.750
You have a little
bit of imagery.

00:22:31.750 --> 00:22:34.150
You want to get it out to people
as quickly as possible.

00:22:34.150 --> 00:22:36.620
There's tons are proprietary
and open source tools and

00:22:36.620 --> 00:22:38.280
workflows available for this.

00:22:38.280 --> 00:22:41.340
I'm going to show you one
example using the GDAL Library

00:22:41.340 --> 00:22:42.770
and Google Compute Engine.

00:22:42.770 --> 00:22:45.550
Now, I'm not sure if you noticed
any of the talks from

00:22:45.550 --> 00:22:48.110
the cloud track this morning,
but Google Compute Engine, I

00:22:48.110 --> 00:22:49.800
believe, is available
to everyone tonight.

00:22:49.800 --> 00:22:52.140
And also they've announced a
bunch of other great stuff,

00:22:52.140 --> 00:22:54.450
like [? sub-hour ?] billing,
and you can boot up lost

00:22:54.450 --> 00:22:57.320
instances, and turn it down
as needed, and so forth.

00:22:57.320 --> 00:22:58.890
So the way to get access to
this is you go to the

00:22:58.890 --> 00:23:01.150
Developer console, which is the
same place you might, for

00:23:01.150 --> 00:23:03.970
example, get an API key
for Google Maps.

00:23:03.970 --> 00:23:05.800
You go to your Services
tab and just enable

00:23:05.800 --> 00:23:07.120
Google Compute Engine.

00:23:07.120 --> 00:23:08.830
So once you've done that, you'll
see a Google Compute

00:23:08.830 --> 00:23:09.650
Engine logo.

00:23:09.650 --> 00:23:11.130
You can go ahead and
click on that.

00:23:11.130 --> 00:23:12.690
Go to the Instances tab.

00:23:12.690 --> 00:23:14.520
And then there's a variety
of options.

00:23:14.520 --> 00:23:17.340
I like to just choose a standard
Ubuntu instance.

00:23:17.340 --> 00:23:19.800
Don't worry too much about the
other parameters, booted up.

00:23:19.800 --> 00:23:21.480
We're going to show you
how easy this is.

00:23:21.480 --> 00:23:22.880
So you boot up the server.

00:23:22.880 --> 00:23:25.760
You SSH into this this
virtual server that

00:23:25.760 --> 00:23:27.310
runs in our data centers.

00:23:27.310 --> 00:23:29.670
And then you just run two
command lines to get up going

00:23:29.670 --> 00:23:31.580
with GIS in our server.

00:23:31.580 --> 00:23:35.100
Install Apache2, so that I can
have web requests coming in.

00:23:35.100 --> 00:23:36.890
We're going to serve
out some tiles.

00:23:36.890 --> 00:23:39.050
And then go ahead and install
UbuntuGIS, which installs a

00:23:39.050 --> 00:23:42.420
whole bunch of software,
including this GDAL Library.

00:23:42.420 --> 00:23:46.140
After we've run those we're
going to go ahead and download

00:23:46.140 --> 00:23:46.970
some imagery data.

00:23:46.970 --> 00:23:49.910
And then we're going to use
that GDAL tiles library.

00:23:49.910 --> 00:23:51.940
Which is a little Python script,
basically, that will

00:23:51.940 --> 00:23:53.640
mosaic that data together.

00:23:53.640 --> 00:23:56.560
And create all of the
appropriate tiles in all the

00:23:56.560 --> 00:23:58.420
appropriate projections
for you.

00:23:58.420 --> 00:24:01.840
So, it took about two minutes,
I think, for the data we

00:24:01.840 --> 00:24:02.730
downloaded.

00:24:02.730 --> 00:24:05.990
And rather than waiting two
minutes, we made a video.

00:24:05.990 --> 00:24:07.330
I think it just finished.

00:24:07.330 --> 00:24:08.080
So that was it.

00:24:08.080 --> 00:24:09.800
Download the data, created
some tiles, done.

00:24:09.800 --> 00:24:12.480
Now we have the tiles in a
folder, and let's take a look

00:24:12.480 --> 00:24:13.920
at the results.

00:24:13.920 --> 00:24:15.670
SEAN WOHLTMAN: Great, so
the results of that.

00:24:15.670 --> 00:24:19.720
We have a nice little embedded
Google Maps V3 API site here.

00:24:19.720 --> 00:24:23.420
And I can zoom-in to that area
that looked really damaged.

00:24:23.420 --> 00:24:25.840
And I have a nice little custom
overlay here, so I can

00:24:25.840 --> 00:24:28.150
do a little transparency
slider.

00:24:28.150 --> 00:24:31.720
And you can just really start to
see the total destruction.

00:24:31.720 --> 00:24:33.470
Now getting this out to people,
especially people

00:24:33.470 --> 00:24:36.510
whose homes those were, first
responders and rescue folks

00:24:36.510 --> 00:24:38.470
coming into the area,
is critical.

00:24:38.470 --> 00:24:42.110
So this is a perfectly fine way
to address a small area,

00:24:42.110 --> 00:24:43.940
get that data out there
as quick as possible

00:24:43.940 --> 00:24:45.270
with minimum friction.

00:24:45.270 --> 00:24:47.550
As long as you understand a
little bit about the GIS tools

00:24:47.550 --> 00:24:49.320
behind the scenes.

00:24:49.320 --> 00:24:51.720
But, what if it's not
a small area?

00:24:51.720 --> 00:24:53.350
What if it's a really
big area.

00:24:53.350 --> 00:24:55.865
America, the United States
is a pretty big area.

00:24:55.865 --> 00:24:59.610
It's about eight million square
kilometers and what if

00:24:59.610 --> 00:25:02.130
you wanted to do imagery
on that scale?

00:25:02.130 --> 00:25:04.700
And what if it was fairly
high resolution?

00:25:04.700 --> 00:25:06.330
I'm not talking high resolution
like we showed

00:25:06.330 --> 00:25:07.920
earlier, 15 centimeters.

00:25:07.920 --> 00:25:11.810
But the USDA NAIP program, every
three years basically,

00:25:11.810 --> 00:25:14.370
recovers the United States
in one meter imagery.

00:25:14.370 --> 00:25:16.150
So you can take a look at
the Moscone Center here.

00:25:16.150 --> 00:25:18.190
Obviously, it's not going
to be totally

00:25:18.190 --> 00:25:19.510
exciting in urban areas.

00:25:19.510 --> 00:25:20.880
But it's not really designed
for urban areas.

00:25:20.880 --> 00:25:23.450
It's really designed to go out
and survey agriculture.

00:25:23.450 --> 00:25:25.620
They fly it in four bands,
so they can also do some

00:25:25.620 --> 00:25:28.020
photogrammetery telling
the different crops

00:25:28.020 --> 00:25:29.350
that are being grown.

00:25:29.350 --> 00:25:32.780
So, this imagery, if you had
it for the entire United

00:25:32.780 --> 00:25:35.620
States, which we do, for the
past three years would be

00:25:35.620 --> 00:25:37.720
about 80 terabytes of imagery.

00:25:37.720 --> 00:25:40.120
So my first problem is now I
need to upload 80 terabytes of

00:25:40.120 --> 00:25:41.880
imagery somewhere.

00:25:41.880 --> 00:25:44.330
And then, it's not just
that imagery.

00:25:44.330 --> 00:25:46.240
Now, I actually we need
to make tiles with it.

00:25:46.240 --> 00:25:48.530
So take that same three
years of data, I'm

00:25:48.530 --> 00:25:49.675
going to tile it out.

00:25:49.675 --> 00:25:52.130
It comes to about 1.3
billion tiles that I

00:25:52.130 --> 00:25:53.640
need to write to disk.

00:25:53.640 --> 00:25:56.540
And that in itself is about
another 30 terabytes.

00:25:56.540 --> 00:25:59.770
So, now I've got to worry about
how many disks I need,

00:25:59.770 --> 00:26:03.100
how much CPU and RAM I need to
spin up, how long this is

00:26:03.100 --> 00:26:03.880
going to take.

00:26:03.880 --> 00:26:06.200
And there are a lot of really
smart people working on how to

00:26:06.200 --> 00:26:08.640
do this with big map
reduce processes.

00:26:08.640 --> 00:26:10.780
My recommendation being not
try to reinvent the wheel.

00:26:10.780 --> 00:26:14.470
So we took all this and put it
into Google Maps Engine.

00:26:14.470 --> 00:26:17.050
And we blended and served
redundantly over thousands of

00:26:17.050 --> 00:26:18.860
cores in a few hours.

00:26:18.860 --> 00:26:21.490
And when I say we served it
redundantly, we're writing

00:26:21.490 --> 00:26:23.860
this to multiple data centers
at once, for you with Google

00:26:23.860 --> 00:26:24.810
Maps Engine.

00:26:24.810 --> 00:26:26.820
So we're actually taking
all that data.

00:26:26.820 --> 00:26:31.310
We only tile it out to not
just one data center, but

00:26:31.310 --> 00:26:32.840
across multiple data centers.

00:26:32.840 --> 00:26:34.750
And it's ready in a few hours.

00:26:34.750 --> 00:26:37.210
So take a look at a quick
preview of this.

00:26:37.210 --> 00:26:40.960
Here we have a 2D map.

00:26:40.960 --> 00:26:42.700
And this is the default map that
you would get with Google

00:26:42.700 --> 00:26:43.180
Maps Engine.

00:26:43.180 --> 00:26:44.240
This is built for you.

00:26:44.240 --> 00:26:46.660
This is the Google Maps view.

00:26:46.660 --> 00:26:49.070
And you can come in and see it's
just as performing as the

00:26:49.070 --> 00:26:52.050
underlying tiles
that are there.

00:26:52.050 --> 00:26:55.720
The one meter can go back
and forth, on and off.

00:26:55.720 --> 00:26:58.070
And the nice thing about Google
Maps Engine, if you

00:26:58.070 --> 00:26:59.790
remember I brought up before
that I wanted to

00:26:59.790 --> 00:27:01.430
serve both 2D and 3D.

00:27:01.430 --> 00:27:04.580
Google Maps Engine doesn't
charging the overhead for also

00:27:04.580 --> 00:27:06.270
doing that in 3d as well.

00:27:06.270 --> 00:27:09.360
So you get a lot of bang for
your buck, running on the same

00:27:09.360 --> 00:27:11.120
servers that are running the
rest of Google properties.

00:27:14.180 --> 00:27:17.490
And there's another thing that
we should talk about as well.

00:27:17.490 --> 00:27:18.610
There's a security piece here.

00:27:18.610 --> 00:27:19.560
I could share that map.

00:27:19.560 --> 00:27:20.370
I can make it private.

00:27:20.370 --> 00:27:21.250
Maybe it's licensed data.

00:27:21.250 --> 00:27:23.390
Maybe I can't put it out
to the entire public.

00:27:23.390 --> 00:27:25.090
So I have the security
things that we

00:27:25.090 --> 00:27:26.490
talked about with Josh.

00:27:26.490 --> 00:27:28.640
But we've only talked about,
so far, about putting this

00:27:28.640 --> 00:27:30.770
data out onto Google properties,
Google Maps and

00:27:30.770 --> 00:27:31.640
Google Earth.

00:27:31.640 --> 00:27:33.400
And if you work with
anybody the GIS

00:27:33.400 --> 00:27:34.880
community, they loved it.

00:27:34.880 --> 00:27:37.750
It's nice, but they also want to
be able to use it in their

00:27:37.750 --> 00:27:39.170
analytic applications.

00:27:39.170 --> 00:27:41.250
So if you were going to do this
yourself you now have to

00:27:41.250 --> 00:27:42.480
think about how am I
going to implement

00:27:42.480 --> 00:27:44.050
things like OGC standards.

00:27:44.050 --> 00:27:45.670
How am I going to put
out a WMS feed?

00:27:45.670 --> 00:27:48.290
Am I going to have to
have the overhead of

00:27:48.290 --> 00:27:49.920
returning WMS requests?

00:27:49.920 --> 00:27:52.320
Google Maps Engine does take
care of that for you.

00:27:52.320 --> 00:27:55.010
And so you can put it out into
OGC compliant feeds that can

00:27:55.010 --> 00:27:56.660
work with other applications,
outside

00:27:56.660 --> 00:27:59.740
of the Google framework.

00:27:59.740 --> 00:28:00.290
JOSH LIVNI: Thanks, John.

00:28:00.290 --> 00:28:04.120
Yes, so hopefully you can
see that even from a

00:28:04.120 --> 00:28:05.050
little bit of data--

00:28:05.050 --> 00:28:07.230
maybe it's vector data you're
crowdsourcing, maybe it's a

00:28:07.230 --> 00:28:09.650
little bit of imagery, many of
the same things apply-- if you

00:28:09.650 --> 00:28:12.570
just have to serve it up a few
people, it's static, you're

00:28:12.570 --> 00:28:15.370
not worried about a huge influx
of data or dynamic

00:28:15.370 --> 00:28:18.400
requests taking you down, then
there's a ton of tools and

00:28:18.400 --> 00:28:19.240
options out there.

00:28:19.240 --> 00:28:20.820
As people start adding
complexity--

00:28:20.820 --> 00:28:23.530
and this is inevitable for most
popular applications--

00:28:23.530 --> 00:28:25.690
and they need to think about
things like the moderation

00:28:25.690 --> 00:28:29.030
piece, the simple sharing piece,
the permissions, and so

00:28:29.030 --> 00:28:30.840
forth, the different
projections, the OGC

00:28:30.840 --> 00:28:33.820
standards, make sure that you're
using a framework and

00:28:33.820 --> 00:28:35.210
thinking about that
in advance.

00:28:35.210 --> 00:28:37.170
So when you do get popular one
day and someone starts

00:28:37.170 --> 00:28:38.980
slamming you, you have
a cache ready.

00:28:38.980 --> 00:28:41.830
When someone says, we need to
take care some moderation

00:28:41.830 --> 00:28:44.400
issues, you have a method
in place to do that.

00:28:44.400 --> 00:28:47.540
So, hopefully, we showed you
through some different stories

00:28:47.540 --> 00:28:50.250
that many of the same
pattern arise.

00:28:50.250 --> 00:28:52.390
We tried really hard to put out
some software that makes

00:28:52.390 --> 00:28:54.250
this as easy as possible
for you guys.

00:28:54.250 --> 00:28:56.140
Hopefully, you go out and try
some of that software,

00:28:56.140 --> 00:28:57.460
including Google Maps Engine.

00:28:57.460 --> 00:28:58.790
Let us know you think.

00:28:58.790 --> 00:29:02.050
And also let us know if you
have any questions.

00:29:02.050 --> 00:29:04.460
I think we have about
10 minutes.

00:29:04.460 --> 00:29:05.710
Yeah, thank you very much.

00:29:08.000 --> 00:29:11.150
If you do have questions, please
come up to the mics.

00:29:11.150 --> 00:29:14.476
And speak into the mics
and we'll do our best.

00:29:14.476 --> 00:29:16.368
AUDIENCE: Hello,
my name's Pat.

00:29:16.368 --> 00:29:18.775
I work for a high tech
agriculture firm based in Des

00:29:18.775 --> 00:29:19.920
Moines, Iowa.

00:29:19.920 --> 00:29:21.560
And I know that was
interesting.

00:29:21.560 --> 00:29:23.230
SEAN WOHLTMAN: Not a plant.

00:29:23.230 --> 00:29:24.600
AUDIENCE: We have a problem.

00:29:24.600 --> 00:29:26.570
And that is that a lot of people
in the agricultural

00:29:26.570 --> 00:29:29.060
industry live and work in areas
where they don't have

00:29:29.060 --> 00:29:31.140
good access to the internet.

00:29:31.140 --> 00:29:33.090
And so, I'm curious if you
have any suggestions for

00:29:33.090 --> 00:29:35.470
patterns and practices that
would help people when they're

00:29:35.470 --> 00:29:37.980
wanting to look at map data,
and they do not have an

00:29:37.980 --> 00:29:38.900
internet connection?

00:29:38.900 --> 00:29:41.710
SEAN WOHLTMAN: Yes, in fact we
have a session tomorrow.

00:29:41.710 --> 00:29:42.050
[? Sean Maday ?]

00:29:42.050 --> 00:29:42.740
and [? Harsh Bhatnagar ?]

00:29:42.740 --> 00:29:45.570
are doing, basically, what
happens when you have to go

00:29:45.570 --> 00:29:46.400
off the grid.

00:29:46.400 --> 00:29:48.420
I'd highly recommend taking
a look at that.

00:29:48.420 --> 00:29:49.940
There's commercial applications,
but there's also

00:29:49.940 --> 00:29:52.870
grants that we do that,
basically, allow cutting from

00:29:52.870 --> 00:29:54.230
the Google Maps Engine
platforms.

00:29:54.230 --> 00:29:55.620
And you can actually take
portables of the

00:29:55.620 --> 00:29:56.740
maps that you create.

00:29:56.740 --> 00:29:59.130
And take them with you in a
portable cache that you could

00:29:59.130 --> 00:30:04.030
run on a PC, Mac,
or Linux server.

00:30:04.030 --> 00:30:07.940
AUDIENCE: I want to question
using Google Maps data.

00:30:07.940 --> 00:30:10.340
Can you take the different
scenarios

00:30:10.340 --> 00:30:11.380
for the Bermuda Triangle.

00:30:11.380 --> 00:30:13.344
Because people who go there,
they don't come back, I heard.

00:30:13.344 --> 00:30:14.170
Right?

00:30:14.170 --> 00:30:15.740
So Bermuda triangle.

00:30:15.740 --> 00:30:17.030
SEAN WOHLTMAN: I'm sorry.

00:30:17.030 --> 00:30:19.430
AUDIENCE: There's something
called Bermuda triangle,

00:30:19.430 --> 00:30:20.630
JOSH LIVNI: Oh the
Ber-- yeah, sure.

00:30:20.630 --> 00:30:22.710
AUDIENCE: So, where if a ship
goes, it doesn't come back.

00:30:22.710 --> 00:30:24.600
Or if people going, they
won't come back.

00:30:24.600 --> 00:30:27.110
So maybe using this Maps data
you can find out what is the

00:30:27.110 --> 00:30:30.380
geographical forces, which is
making it so dangerous.

00:30:30.380 --> 00:30:32.120
And get some conclusion.

00:30:32.120 --> 00:30:32.810
That's an interesting idea.

00:30:32.810 --> 00:30:34.710
I'm, actually, surprised
somebody hasn't made some cool

00:30:34.710 --> 00:30:35.250
mashups of--

00:30:35.250 --> 00:30:37.670
I'm sure the satellites
have lots of imagery.

00:30:37.670 --> 00:30:41.275
SEAN WOHLTMAN: But actually
there's a talk tomorrow.

00:30:41.275 --> 00:30:41.710
The AIS talk--

00:30:41.710 --> 00:30:42.980
JOSH LIVNI: Setting
us up, too.

00:30:42.980 --> 00:30:43.690
SEAN WOHLTMAN: --about
tracking all the

00:30:43.690 --> 00:30:44.410
ships in the world.

00:30:44.410 --> 00:30:47.290
And using bit query and Google
Maps on doing that.

00:30:47.290 --> 00:30:48.160
JOSH LIVNI: Good call.

00:30:48.160 --> 00:30:50.323
Yeah, in fact we have a few--

00:30:50.323 --> 00:30:52.320
AUDIENCE: Find out what
is happening there.

00:30:52.320 --> 00:30:54.120
There is much energy,
wind energy.

00:30:54.120 --> 00:30:56.460
So they can also use that wind
energy for this Google

00:30:56.460 --> 00:30:57.150
[INAUDIBLE]

00:30:57.150 --> 00:30:58.145
and then you can put a [?

00:30:58.145 --> 00:31:00.150
Cart ?] there and see
what is happening.

00:31:00.150 --> 00:31:01.140
JOSH LIVNI: It's a
good question.

00:31:01.140 --> 00:31:03.020
Yeah, I'm certainly no
expert on ship data.

00:31:03.020 --> 00:31:05.320
But we happen to have some
experts on ship data giving

00:31:05.320 --> 00:31:07.240
talks at different tracks.

00:31:07.240 --> 00:31:08.550
So check out the descriptions.

00:31:08.550 --> 00:31:10.210
I think we have like
two or three talks.

00:31:10.210 --> 00:31:12.810
And these guys really know about
ships and where they go.

00:31:12.810 --> 00:31:15.970
And we're going to be showing
that, so that's a better

00:31:15.970 --> 00:31:16.840
question for someone there.

00:31:16.840 --> 00:31:18.940
AUDIENCE: -- there is so much
of energy there, wind energy

00:31:18.940 --> 00:31:19.980
there, you know.

00:31:19.980 --> 00:31:21.670
So all that energy you
could use it for

00:31:21.670 --> 00:31:23.530
something else right?

00:31:23.530 --> 00:31:25.970
maybe using those analytics and
the data of Google Maps

00:31:25.970 --> 00:31:27.580
you could use
[? it for something. ?]

00:31:27.580 --> 00:31:28.760
SEAN WOHLTMAN: Very possibly.

00:31:28.760 --> 00:31:30.010
Thank you.

00:31:32.390 --> 00:31:35.600
AUDIENCE: Hi, you kind of
wowed me with the forms

00:31:35.600 --> 00:31:37.500
example and the map
to the side.

00:31:37.500 --> 00:31:39.420
You said that it was pretty
easy produce, but my

00:31:39.420 --> 00:31:41.930
experience with forms is
it's quite limiting.

00:31:41.930 --> 00:31:43.580
And I was just curious if you
go into a little bit of the

00:31:43.580 --> 00:31:44.350
details on that?

00:31:44.350 --> 00:31:46.170
I mean, did you to create a
sidebar with the map and

00:31:46.170 --> 00:31:49.550
that's how you got it to record
lat, longs in the form?

00:31:49.550 --> 00:31:52.560
JOSH LIVNI: Sure, the way that
I made that form was what I'd

00:31:52.560 --> 00:31:54.350
call the old school way,
that I don't recommend.

00:31:54.350 --> 00:31:55.970
But what I did is I
created the form

00:31:55.970 --> 00:31:57.110
using the forms widget.

00:31:57.110 --> 00:31:59.270
You hit forms and
spreadsheets.

00:31:59.270 --> 00:32:01.160
And now of course, you could
create easily your own form.

00:32:01.160 --> 00:32:03.610
If you have an open source, CMS,
Django based or something

00:32:03.610 --> 00:32:04.610
to create a web form.

00:32:04.610 --> 00:32:05.370
It's just a web form.

00:32:05.370 --> 00:32:06.570
You're trying to get
it somewhere.

00:32:06.570 --> 00:32:09.050
But in any case, what I did
is I modified the Google

00:32:09.050 --> 00:32:12.280
Spreadsheets form to have
all the fields I needed.

00:32:12.280 --> 00:32:13.640
Then I downloaded it.

00:32:13.640 --> 00:32:16.010
And then I opened up the HTML
and I added a tiny bit of

00:32:16.010 --> 00:32:17.600
JavaScript to attach
the fields.

00:32:17.600 --> 00:32:18.910
Took me about five minutes.

00:32:18.910 --> 00:32:21.560
Went into our examples for auto
complete, and I just cut

00:32:21.560 --> 00:32:23.920
and pasted some code, changed
the input field.

00:32:23.920 --> 00:32:24.830
It's done.

00:32:24.830 --> 00:32:26.690
So it was pretty easy.

00:32:26.690 --> 00:32:30.380
But, as I mentioned, there was a
talk that was, I think, just

00:32:30.380 --> 00:32:33.120
last session, where they go over
how to do that correctly.

00:32:33.120 --> 00:32:35.700
So Apps Script is super powerful
and you can do all

00:32:35.700 --> 00:32:37.840
kinds of dynamic things
with the forms now.

00:32:37.840 --> 00:32:40.840
And so, that talk will be on
video and that would be a

00:32:40.840 --> 00:32:42.250
better way to approach
the problem.

00:32:42.250 --> 00:32:44.610
SEAN WOHLTMAN: But we will also
have this entire talk

00:32:44.610 --> 00:32:46.660
posted, so you'll have the
slides to go in and take a

00:32:46.660 --> 00:32:47.520
look at the source, as well.

00:32:47.520 --> 00:32:48.310
JOSH LIVNI: Yep.

00:32:48.310 --> 00:32:51.525
I'm scared now.

00:32:51.525 --> 00:32:52.650
AUDIENCE: Hi, I'm Andy.

00:32:52.650 --> 00:32:55.200
I work for a company that
provides solutions that

00:32:55.200 --> 00:32:57.880
overlay map data on top
of Google Maps.

00:32:57.880 --> 00:33:01.410
And one question I had was,
in your best practices

00:33:01.410 --> 00:33:03.990
recommended, you talked about
meshing up large imagery in

00:33:03.990 --> 00:33:06.060
tiles and serving that out.

00:33:06.060 --> 00:33:09.310
But I also heard, in the keynote
this morning, about

00:33:09.310 --> 00:33:12.060
the vector maps and how that's
the way of the future.

00:33:12.060 --> 00:33:14.180
So what do you recommend
best practices on

00:33:14.180 --> 00:33:16.900
serving up vector maps?

00:33:16.900 --> 00:33:18.870
SEAN WOHLTMAN: So, I mean, one
thing to say is that when you

00:33:18.870 --> 00:33:21.140
have imagery, unless somebody
has a really amazing

00:33:21.140 --> 00:33:22.350
algorithm, that that's
not going to get

00:33:22.350 --> 00:33:23.380
vectorized any time soon.

00:33:23.380 --> 00:33:24.710
I think we're still going
to be in that

00:33:24.710 --> 00:33:25.600
world for a long time.

00:33:25.600 --> 00:33:27.410
But yeah, do you want
to take the vector--

00:33:27.410 --> 00:33:28.140
JOSH LIVNI: Sure, yeah.

00:33:28.140 --> 00:33:32.420
So, today we try to serve out
the tiles in the most

00:33:32.420 --> 00:33:33.530
appropriate format.

00:33:33.530 --> 00:33:36.420
So, the hope is you upload
your data vector, in this

00:33:36.420 --> 00:33:38.020
case, to Google Maps Engine.

00:33:38.020 --> 00:33:40.190
And we'll serve it out
appropriately.

00:33:40.190 --> 00:33:42.610
If one day it turns out that the
appropriate way to serve

00:33:42.610 --> 00:33:44.710
that data is in vectors,
that's the way

00:33:44.710 --> 00:33:45.770
it'll be served out.

00:33:45.770 --> 00:33:49.110
So, the idea is you don't have
to concern yourself with that.

00:33:49.110 --> 00:33:51.820
Now, there are some talks, I
think [? Brandon Candy ?]

00:33:51.820 --> 00:33:54.530
is giving a talk on some amazing
things you can do with

00:33:54.530 --> 00:33:56.860
WebGL in creating your own
vector data that gets

00:33:56.860 --> 00:33:57.890
displayed on the clients.

00:33:57.890 --> 00:33:59.610
And that's a good
talk to go to.

00:33:59.610 --> 00:34:03.500
I think it's called HTMl
5 A Love Affair

00:34:03.500 --> 00:34:04.800
and Maps a Love Affair.

00:34:04.800 --> 00:34:07.650
And there's a bunch of ways
you can do it yourself.

00:34:07.650 --> 00:34:10.670
But yeah, obviously we have
a lot of technology and we

00:34:10.670 --> 00:34:13.780
believe that is a really
great way to go.

00:34:13.780 --> 00:34:17.050
And we'll make sure that your
data is served up when it

00:34:17.050 --> 00:34:18.994
makes sense, in the right way.

00:34:18.994 --> 00:34:19.760
AUDIENCE: Thank you.

00:34:19.760 --> 00:34:21.659
JOSH LIVNI: No problem.

00:34:21.659 --> 00:34:24.010
AUDIENCE: Good day, I
have one question.

00:34:24.010 --> 00:34:28.010
Please tell me, I want
to keep a road graph.

00:34:28.010 --> 00:34:32.460
Can I keep a road graph by
tools, by storage if I have

00:34:32.460 --> 00:34:39.620
maybe 10,000 or 100,000 vertices
is in my graph.

00:34:39.620 --> 00:34:42.870
And I need in calculation maybe,
brought in compilation

00:34:42.870 --> 00:34:47.840
maybe by the extra algorithm
or another.

00:34:47.840 --> 00:34:52.000
Or I must keep it separate.

00:34:52.000 --> 00:34:56.630
Mainly vertices on my server
for calculation and some

00:34:56.630 --> 00:35:00.490
vertices for visualization
by your Maps Engine.

00:35:00.490 --> 00:35:01.860
So what about performance?

00:35:01.860 --> 00:35:04.110
SEAN WOHLTMAN: Yes, so right now
doing Dijkstra or A-Star

00:35:04.110 --> 00:35:06.850
or anything like that over
a vector network is not

00:35:06.850 --> 00:35:08.810
something that Maps
Engine does.

00:35:08.810 --> 00:35:11.100
But when we talked about Compute
Engine, you should

00:35:11.100 --> 00:35:12.640
think about that as
a possibility.

00:35:12.640 --> 00:35:16.300
To be able to run the
traditional PostGIS or

00:35:16.300 --> 00:35:18.770
pgRouting types of applications
in the database

00:35:18.770 --> 00:35:21.630
in appropriate form, until we
can offer that as a direct

00:35:21.630 --> 00:35:23.310
offering in Google
Maps Engine.

00:35:23.310 --> 00:35:27.430
AUDIENCE: But if people create
some vertices of raw graph by

00:35:27.430 --> 00:35:33.220
themselves then we have a
[INAUDIBLE] or an other site.

00:35:33.220 --> 00:35:38.100
Can we use your storage as a
local cache, as front end

00:35:38.100 --> 00:35:43.500
server for our backends, in
order to send it backend?

00:35:43.500 --> 00:35:46.380
JOSH LIVNI: Yeah, so the general
pattern there is, if

00:35:46.380 --> 00:35:50.410
you would like us to render
it out, we have the API.

00:35:50.410 --> 00:35:52.850
So I showed a really simple
example of editing some

00:35:52.850 --> 00:35:55.360
geometries, but, of course,
you can batch post a whole

00:35:55.360 --> 00:35:58.140
bunch of features into an
existing table, modify, or

00:35:58.140 --> 00:35:58.960
delete them.

00:35:58.960 --> 00:36:01.110
So, if you need to do some type
of synchronization or

00:36:01.110 --> 00:36:04.100
adding new things to data that's
in Google Maps Engine,

00:36:04.100 --> 00:36:05.900
you can do that using the API.

00:36:05.900 --> 00:36:09.670
AUDIENCE: Sorry, do we need an
Engine server for balancing

00:36:09.670 --> 00:36:13.696
between my backend
and your storage?

00:36:13.696 --> 00:36:15.640
JOSH LIVNI: I'm not
sure I understood.

00:36:15.640 --> 00:36:17.250
SEAN WOHLTMAN: You're asking
how to connect between your

00:36:17.250 --> 00:36:21.160
backend database, to what
it would be in ours.

00:36:21.160 --> 00:36:29.270
AUDIENCE: I don't know about
average number of requests to

00:36:29.270 --> 00:36:30.470
your storage?

00:36:30.470 --> 00:36:32.250
What about it?

00:36:32.250 --> 00:36:33.780
JOSH LIVNI: You mean if you're
doing like a whole bunch of

00:36:33.780 --> 00:36:37.570
requests, very frequently,
what are our limits?

00:36:37.570 --> 00:36:41.780
So, we have a few different
limits.

00:36:41.780 --> 00:36:44.400
I think right now, if you
purchase Google Maps Engine--

00:36:44.400 --> 00:36:47.620
I'm not sure exactly offhand
what the queries per second is

00:36:47.620 --> 00:36:49.796
that you can post and get.

00:36:49.796 --> 00:36:54.260
It's pretty high and I think
you can, as many of our

00:36:54.260 --> 00:36:57.210
offerings, purchase more
quota as you need.

00:36:57.210 --> 00:36:59.540
I'm not sure what it is
offhand, by default.

00:36:59.540 --> 00:37:00.650
But it should be plenty.

00:37:00.650 --> 00:37:03.300
I mean it's many a second.

00:37:03.300 --> 00:37:06.240
And you can batch post a large
number of features that once.

00:37:06.240 --> 00:37:08.700
So I think it should suffice.

00:37:08.700 --> 00:37:10.636
SEAN WOHLTMAN: If there is a
use case you really want to

00:37:10.636 --> 00:37:11.990
dig down into, please
come by the Sandbox.

00:37:11.990 --> 00:37:13.380
JOSH LIVNI: Yeah, we can talk
a little more detail,

00:37:13.380 --> 00:37:14.630
something specific.

00:37:17.100 --> 00:37:19.410
AUDIENCE: Quick question, in
your imagery example, how was

00:37:19.410 --> 00:37:22.220
that 30 terabytes of
data delivered?

00:37:22.220 --> 00:37:23.400
SEAN WOHLTMAN: How
is it delivered?

00:37:23.400 --> 00:37:25.540
As tiles.

00:37:25.540 --> 00:37:28.700
AUDIENCE: I'm sorry, delivered
to the Google App Engine.

00:37:28.700 --> 00:37:30.770
SEAN WOHLTMAN: Oh, how do
we upload the initial?

00:37:30.770 --> 00:37:31.150
AUDIENCE: How do the--

00:37:31.150 --> 00:37:31.450
Yeah.

00:37:31.450 --> 00:37:34.200
SEAN WOHLTMAN: OK, so there's
a technology that Google has

00:37:34.200 --> 00:37:35.220
called Xenon.

00:37:35.220 --> 00:37:38.145
Which, like Josh said, there's
one way in which you could sit

00:37:38.145 --> 00:37:40.700
there and try to bulk
upload of all that.

00:37:40.700 --> 00:37:42.160
For the 80 terabyte source,
you probably

00:37:42.160 --> 00:37:43.680
don't want to do that.

00:37:43.680 --> 00:37:46.620
Xenon is a technology that
Google uses to monitor remote

00:37:46.620 --> 00:37:50.710
web servers, where we have a lot
of partners, such as VEVO

00:37:50.710 --> 00:37:52.490
that puts out a lot
of music videos.

00:37:52.490 --> 00:37:56.700
And we monitor either a http or
a ftp site, where we will

00:37:56.700 --> 00:38:00.090
actually pull that data across
data center to data center.

00:38:00.090 --> 00:38:03.370
And we can ingest that for you
into a particular account.

00:38:03.370 --> 00:38:05.420
So, it needs to be on
a server somewhere.

00:38:05.420 --> 00:38:07.775
Or, if it's a really big
delivery like that, we can

00:38:07.775 --> 00:38:09.850
actually have customer
agreements through some of our

00:38:09.850 --> 00:38:12.070
partners that will help get
that data online for you.

00:38:12.070 --> 00:38:14.650
Because, yes, getting a large
amount of data into the cloud

00:38:14.650 --> 00:38:16.430
is a barrier to entry.

00:38:20.050 --> 00:38:22.010
JOSH LIVNI: OK, well thank you
guys very much for coming.

00:38:22.010 --> 00:38:24.670
Sean and I will be in the Google
Maps Sandbox for the

00:38:24.670 --> 00:38:26.240
next hour or so.

00:38:26.240 --> 00:38:28.060
Look forward to chatting
with you guys.

00:38:28.060 --> 00:38:29.310
SEAN WOHLTMAN: Thank you.

