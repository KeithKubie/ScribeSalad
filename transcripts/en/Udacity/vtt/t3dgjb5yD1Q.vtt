WEBVTT
Kind: captions
Language: en

00:00:00.340 --> 00:00:03.700
Of course it would be unfair of me to kind of just show-and-go,

00:00:03.700 --> 00:00:07.800
leave this topic of noise, without looking at images with noise.

00:00:07.800 --> 00:00:10.350
Take my example of the zebra image here.

00:00:10.350 --> 00:00:12.770
If I was to compute the gradient of the zebra image,

00:00:12.770 --> 00:00:15.000
I would get something like this.

00:00:15.000 --> 00:00:18.970
Really well-defined ridges as we have looked at before.

00:00:18.970 --> 00:00:23.040
Something that'll let me kind of figure out exactly the details I need.

00:00:23.040 --> 00:00:25.070
However, let's add some noise.

00:00:25.070 --> 00:00:27.520
Here you notice the graininess has shown up.

00:00:27.520 --> 00:00:31.580
And while there is still well defined edges and you can see them,

00:00:31.580 --> 00:00:34.980
let's see what happens when we do that variant gradient computation on it.

00:00:34.980 --> 00:00:37.450
And here, I'm basically showing you the gradient magnitudes.

00:00:38.900 --> 00:00:41.970
More noise has started showing up here and

00:00:41.970 --> 00:00:44.910
the lines here are not as well defined.

00:00:44.910 --> 00:00:46.670
Even more noise has been added.

00:00:46.670 --> 00:00:50.090
It's really getting hard to connect these lines up anymore, and

00:00:50.090 --> 00:00:53.560
in fact more of the image is starting to have the kind of flavor that we

00:00:53.560 --> 00:00:55.990
saw on the 1D example previously.

00:00:55.990 --> 00:00:57.900
Even more noise has been added.

00:00:57.900 --> 00:00:59.370
Human perception is very good.

00:00:59.370 --> 00:01:01.220
You might still be able to see the ridges and

00:01:01.220 --> 00:01:04.010
stuff like that, but purely looking at the signal.

00:01:04.010 --> 00:01:07.170
You see absolutely no information here anymore.

00:01:07.170 --> 00:01:11.460
So as we go from no noise to a lot of noise, we basically,

00:01:11.460 --> 00:01:16.230
the gradient magnitude here now seems to not be able to kind of

00:01:16.230 --> 00:01:22.020
showcase how we would actually be able to locate the gradient changes.

00:01:22.020 --> 00:01:26.420
The rapid or not rapid changes that, where perhaps an edge might be.

00:01:27.758 --> 00:01:30.870
So any guesses what we would have to do to help us still

00:01:30.870 --> 00:01:35.690
compute gradients that would be used for doing things like edge calculations?

00:01:35.690 --> 00:01:38.370
. Well, simple answer is we should be

00:01:38.370 --> 00:01:42.560
doing smoothing to an image before applying any kind of gradient operations.

00:01:42.560 --> 00:01:46.020
So take this original image, and if you run it through some sort of a filter,

00:01:46.020 --> 00:01:49.640
remember all the blur convolutions and Gaussian convolutions and

00:01:49.640 --> 00:01:50.930
stuff like that we've looked at.

00:01:50.930 --> 00:01:55.550
If we'd apply it before, we should be able to have, remove some of the noise,

00:01:55.550 --> 00:01:59.050
and then use that to compute our edges or

00:01:59.050 --> 00:02:02.150
gradients that could be used for other things, including computing edges.

