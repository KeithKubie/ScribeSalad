WEBVTT
Kind: captions
Language: en

00:00:07.856 --> 00:00:09.220
ALI AFSHAR: Hi everyone.

00:00:09.220 --> 00:00:11.460
Welcome to Google
Developers Live.

00:00:11.460 --> 00:00:12.045
My name's Ali.

00:00:12.045 --> 00:00:16.379
I'm joined here today with
Carrie, and a special guest

00:00:16.379 --> 00:00:19.320
from our engineering office in
Boulder, Brian Cairns, the

00:00:19.320 --> 00:00:21.580
lead engineer for the
Realtime API.

00:00:21.580 --> 00:00:23.930
As you can see, I'm extremely
excited to have

00:00:23.930 --> 00:00:25.520
him here with us.

00:00:25.520 --> 00:00:29.240
We're going to talk a bit about
the Realtime API, and

00:00:29.240 --> 00:00:31.520
then some features we've
launched recently that will

00:00:31.520 --> 00:00:33.370
help you use it.

00:00:33.370 --> 00:00:35.180
So diving straight in--

00:00:35.180 --> 00:00:37.920
Hi, Brian.

00:00:37.920 --> 00:00:38.852
How you doing?

00:00:38.852 --> 00:00:40.560
BRIAN CAIRNS: I'm doing
excellent, actually.

00:00:40.560 --> 00:00:42.160
ALI AFSHAR: Awesome.

00:00:42.160 --> 00:00:43.610
Thanks again for joining us.

00:00:43.610 --> 00:00:46.810
So could you tell us a bit
about the Realtime API?

00:00:46.810 --> 00:00:47.530
What is it?

00:00:47.530 --> 00:00:50.470
What problem does it solve
for developers?

00:00:50.470 --> 00:00:54.270
BRIAN CAIRNS: So the Realtime
API is a way that you can add

00:00:54.270 --> 00:00:58.910
real time data storage or
collaboration to your app that

00:00:58.910 --> 00:01:00.830
works with Google products.

00:01:00.830 --> 00:01:04.060
So basically, you put a small
piece of JavaScript

00:01:04.060 --> 00:01:05.810
code on your page.

00:01:05.810 --> 00:01:10.060
And we let you basically read
and write from a data model

00:01:10.060 --> 00:01:12.990
that looks very similar to a
local data model that you

00:01:12.990 --> 00:01:16.360
might use in JavaScript And
then all of that data gets

00:01:16.360 --> 00:01:17.370
automatically synchronized.

00:01:17.370 --> 00:01:21.220
It gets stored in Drive and sent
to any collaborator that

00:01:21.220 --> 00:01:24.110
may be on the document
in real time.

00:01:24.110 --> 00:01:25.540
ALI AFSHAR: Cool.

00:01:25.540 --> 00:01:28.286
So what kind of apps
would use this?

00:01:28.286 --> 00:01:32.540
BRIAN CAIRNS: So you can think
of more traditional

00:01:32.540 --> 00:01:33.420
editor-type apps.

00:01:33.420 --> 00:01:39.300
So if you're writing code editor
or word processor or a

00:01:39.300 --> 00:01:44.830
project planning tool, this
is a really great API for

00:01:44.830 --> 00:01:45.260
productivity apps.

00:01:45.260 --> 00:01:48.430
Because you can have real time
collaboration that works just

00:01:48.430 --> 00:01:52.320
like it does in Google Docs
sheets and slides.

00:01:52.320 --> 00:01:55.560
But there's also a lot of
unconventional kind of users.

00:01:55.560 --> 00:01:57.570
We've had people do games.

00:01:57.570 --> 00:02:00.160
We've had people use it just
because they want to store

00:02:00.160 --> 00:02:04.125
user preferences, or they want
to store some sort of state

00:02:04.125 --> 00:02:07.310
that gets synchronized across
multiple devices.

00:02:07.310 --> 00:02:09.520
So there's really a lot of
different use cases.

00:02:09.520 --> 00:02:09.889
And any

00:02:09.889 --> 00:02:13.630
And any app that can benefit
from real time data storage,

00:02:13.630 --> 00:02:17.390
where you're sending only the
changes as they're made.

00:02:17.390 --> 00:02:20.150
And any app that can benefit
from synchronization or

00:02:20.150 --> 00:02:22.350
collaboration is a prime
candidate for

00:02:22.350 --> 00:02:23.065
the Realtime API.

00:02:23.065 --> 00:02:25.420
ALI AFSHAR: OK that's awesome.

00:02:25.420 --> 00:02:28.520
What specifically about
this excites you?

00:02:28.520 --> 00:02:34.010
Why did you get up one day and
think let's do a Realtime API?

00:02:34.010 --> 00:02:35.570
BRIAN CAIRNS: We actually
started on a

00:02:35.570 --> 00:02:38.290
Realtime API a ways back.

00:02:38.290 --> 00:02:40.810
I don't know if you recall,
but we first announced the

00:02:40.810 --> 00:02:45.390
Google I/O in 2012.

00:02:45.390 --> 00:02:48.890
And the genesis of this idea was
we had all this real time

00:02:48.890 --> 00:02:51.940
technology for doc sheets
and slides that was

00:02:51.940 --> 00:02:52.930
really, really cool.

00:02:52.930 --> 00:02:56.710
From a theoretical standpoint,
there's a lot of work that

00:02:56.710 --> 00:02:59.380
goes into making sure that all
the conflicts get resolved

00:02:59.380 --> 00:03:02.670
properly, and everyone ends
up in the right state.

00:03:02.670 --> 00:03:06.070
And the idea was well, we have
this great technology.

00:03:06.070 --> 00:03:08.545
But we're only using it
for these three apps.

00:03:08.545 --> 00:03:14.050
And of course, at Google we want
to have really great apps

00:03:14.050 --> 00:03:15.070
that we can get to end users.

00:03:15.070 --> 00:03:17.610
But we also want developers
to [? be ?] successful.

00:03:17.610 --> 00:03:21.840
So the thought was why don't we
expose this technology to

00:03:21.840 --> 00:03:24.164
third-party developers, and see
what sort of apps they'll

00:03:24.164 --> 00:03:25.406
build with it?

00:03:25.406 --> 00:03:26.470
ALI AFSHAR: OK.

00:03:26.470 --> 00:03:27.290
Awesome.

00:03:27.290 --> 00:03:29.620
Thank you.

00:03:29.620 --> 00:03:32.550
So can you tell me a bit about
the feature we've recently

00:03:32.550 --> 00:03:34.660
launched and why that's
a useful feature?

00:03:34.660 --> 00:03:35.950
BRIAN CAIRNS: Yes.

00:03:35.950 --> 00:03:39.960
A new feature that we actually
announced at I/O and just

00:03:39.960 --> 00:03:42.440
recently launched,
import/export--

00:03:42.440 --> 00:03:46.730
So we've heard from a lot of
developers that they like the

00:03:46.730 --> 00:03:47.710
Realtime API.

00:03:47.710 --> 00:03:52.480
But they're a little bit
concerned that it's not

00:03:52.480 --> 00:03:54.360
necessarily the easiest
thing to get their

00:03:54.360 --> 00:03:56.210
data in or out of.

00:03:56.210 --> 00:03:59.785
And we want to be very, very
clear that it's not Google's

00:03:59.785 --> 00:04:00.850
data, it's users' data.

00:04:00.850 --> 00:04:03.270
And that developers should be
able to get it out in whatever

00:04:03.270 --> 00:04:04.665
format they need.

00:04:04.665 --> 00:04:10.030
So this import/export API just
lets you get a very clear JSON

00:04:10.030 --> 00:04:14.060
representation of the data
model of a real time data

00:04:14.060 --> 00:04:17.620
model and export that
to your app.

00:04:17.620 --> 00:04:18.750
And it's very simple to use.

00:04:18.750 --> 00:04:22.250
You make a Rest call to the
server and you provide us with

00:04:22.250 --> 00:04:23.550
an oAuth token.

00:04:23.550 --> 00:04:26.740
And it's actually integrated
directly with Drive API.

00:04:26.740 --> 00:04:31.430
So if you use any of the drive
API plant libraries already,

00:04:31.430 --> 00:04:33.160
you'll get this automatically.

00:04:33.160 --> 00:04:35.570
In some cases, you may have to
download it from the library

00:04:35.570 --> 00:04:37.560
and recompile.

00:04:37.560 --> 00:04:42.210
But the fantastic thing about
this is the format's stable.

00:04:42.210 --> 00:04:43.990
It's human readable.

00:04:43.990 --> 00:04:46.920
So you can go through and just
look at what the document is.

00:04:46.920 --> 00:04:49.935
It's easy to process if you have
any sort of application

00:04:49.935 --> 00:04:52.460
that can deal with JSON.

00:04:52.460 --> 00:04:54.470
And it works both ways.

00:04:54.470 --> 00:04:57.400
You can export and then modify
the document and then

00:04:57.400 --> 00:04:58.410
re-upload it.

00:04:58.410 --> 00:05:02.035
And people will see those
changes in real time.

00:05:02.035 --> 00:05:04.460
ALI AFSHAR: So just to get that
right, I can change the

00:05:04.460 --> 00:05:07.270
model outside the
Realtime API.

00:05:07.270 --> 00:05:09.750
And I put it back in
using your import.

00:05:09.750 --> 00:05:12.040
And everything will just
magically work

00:05:12.040 --> 00:05:14.372
across all the users.

00:05:14.372 --> 00:05:16.790
BRIAN CAIRNS: So what we
actually do is when you upload

00:05:16.790 --> 00:05:20.890
the model, we look at what
is already on the server.

00:05:20.890 --> 00:05:24.150
And that could be the same thing
when you downloaded it,

00:05:24.150 --> 00:05:29.280
or it could have been that,
plus a series of changes.

00:05:29.280 --> 00:05:32.040
But regardless, we look at the
state of the model on the

00:05:32.040 --> 00:05:33.830
server and the state which
you upload it and we

00:05:33.830 --> 00:05:34.990
take a gif of that.

00:05:34.990 --> 00:05:40.066
And we generate the mutations
that are necessary to turn the

00:05:40.066 --> 00:05:43.700
current state on the server in
the state that you upload it,

00:05:43.700 --> 00:05:45.930
save all the changes, and then
we broadcast to all the

00:05:45.930 --> 00:05:47.840
collaborators.

00:05:47.840 --> 00:05:51.160
And if you want more details on
exactly how mutations work

00:05:51.160 --> 00:05:56.090
and all of the technical details
there, the Drive

00:05:56.090 --> 00:06:01.000
Realtime API secrets talk that
we gave at Google I/O--

00:06:01.000 --> 00:06:04.540
myself and another engineer,
Cheryl Simon, is a really

00:06:04.540 --> 00:06:05.080
excellent talk.

00:06:05.080 --> 00:06:08.690
It goes really on a technical
level of how it works.

00:06:08.690 --> 00:06:14.520
But the cool thing about this
gif approach is we preserve

00:06:14.520 --> 00:06:18.450
all the real time nature of
the system, even if you're

00:06:18.450 --> 00:06:20.380
uploading this JSON
[INAUDIBLE].

00:06:20.380 --> 00:06:24.530
So if you upload a new version
in JSON and you have

00:06:24.530 --> 00:06:27.030
collaborators on the document,
those collaborators can see

00:06:27.030 --> 00:06:27.520
those changes immediately.

00:06:27.520 --> 00:06:30.750
They don't have to reload
or anything like that.

00:06:30.750 --> 00:06:33.490
And perhaps even cooler than
that, we can actually gif

00:06:33.490 --> 00:06:36.890
against any revision
that you want.

00:06:36.890 --> 00:06:41.780
So let's say you downloaded
revision 15, and then you're

00:06:41.780 --> 00:06:44.760
modifying it offline
in your app.

00:06:44.760 --> 00:06:47.885
If there are other changes
that are going on in the

00:06:47.885 --> 00:06:50.870
interim, when you upload it, you
can say OK, don't gif this

00:06:50.870 --> 00:06:52.280
against the most
recent version.

00:06:52.280 --> 00:06:54.810
Gif this against version 15.

00:06:54.810 --> 00:06:59.340
And then apply only what change
needs to be version 15

00:06:59.340 --> 00:07:01.400
and what I uploaded.

00:07:01.400 --> 00:07:04.050
And what we end up doing is we
take this disk and we get

00:07:04.050 --> 00:07:04.780
these set changes.

00:07:04.780 --> 00:07:08.960
And then those get merged in
with the changes that were

00:07:08.960 --> 00:07:09.920
made in the interim.

00:07:09.920 --> 00:07:13.700
And you end up with a document
that incorporates both the

00:07:13.700 --> 00:07:17.520
changes you made offline and
any changes that any other

00:07:17.520 --> 00:07:19.990
collaborator may have
made in the interim.

00:07:19.990 --> 00:07:23.570
This is a really fantastic way
to do offline, if that's

00:07:23.570 --> 00:07:26.041
something that you're
interested in.

00:07:26.041 --> 00:07:29.920
ALI AFSHAR: So that all sounds
extremely crazy and insane how

00:07:29.920 --> 00:07:31.760
you managed to do that,
but very cool.

00:07:31.760 --> 00:07:35.550
And I guess that's why you use
the Realtime API rather than

00:07:35.550 --> 00:07:36.960
try and roll this
thing yourself.

00:07:36.960 --> 00:07:40.270
Because that's a very, very
hard problem to solve.

00:07:40.270 --> 00:07:41.400
Would you say?

00:07:41.400 --> 00:07:41.910
BRIAN CAIRNS: Yeah.

00:07:41.910 --> 00:07:46.130
I mean there's a lot of work
that goes into decomposing

00:07:46.130 --> 00:07:48.400
everything you can
do on the data

00:07:48.400 --> 00:07:50.060
model into these mutations.

00:07:50.060 --> 00:07:52.360
So any change you make to
a real time document is

00:07:52.360 --> 00:07:54.750
represented as one of
these mutations.

00:07:54.750 --> 00:07:57.640
And then to handle conflicts,
we have to do this thing

00:07:57.640 --> 00:07:59.410
called transformation.

00:07:59.410 --> 00:08:05.010
And transformation basically
adjusts mutations so that they

00:08:05.010 --> 00:08:08.215
take into account the effects
of other mutations that may

00:08:08.215 --> 00:08:10.720
have occurred previously.

00:08:10.720 --> 00:08:14.670
And the thing is the really
hard part is for every

00:08:14.670 --> 00:08:16.765
different mutation type, you
have to potentially transform

00:08:16.765 --> 00:08:19.770
it [? against ?] every
other mutation.

00:08:19.770 --> 00:08:24.610
So you end up writing n
squared transformation

00:08:24.610 --> 00:08:27.330
functions f for your
n mutations.

00:08:27.330 --> 00:08:30.300
So as you add more and more
features to the system, the

00:08:30.300 --> 00:08:33.460
complexity explodes.

00:08:33.460 --> 00:08:36.225
The great news with the Realtime
API is we've already

00:08:36.225 --> 00:08:37.820
written all these transformation
functions.

00:08:37.820 --> 00:08:41.000
And it's all done and packed.

00:08:41.000 --> 00:08:43.822
You don't have to worry
about transformation.

00:08:43.822 --> 00:08:46.690
You don't have to worry about
these mutations even.

00:08:46.690 --> 00:08:50.440
You just read and write from the
data model like it were a

00:08:50.440 --> 00:08:55.330
local application, or a local
in-memory data structure.

00:08:55.330 --> 00:08:56.996
And we handle all the rest.

00:08:56.996 --> 00:08:58.460
ALI AFSHAR: OK, thank you.

00:08:58.460 --> 00:08:59.810
Thanks for explaining that.

00:08:59.810 --> 00:09:03.760
So we launched the Realtime
API a few months ago, and

00:09:03.760 --> 00:09:05.450
people have been using it.

00:09:05.450 --> 00:09:08.860
What kind of problems have you
had that you didn't really

00:09:08.860 --> 00:09:09.810
anticipate?

00:09:09.810 --> 00:09:14.940
Has there been any issues of
scaling or anything crazy

00:09:14.940 --> 00:09:16.810
you've had to do to
make it all work?

00:09:16.810 --> 00:09:17.810
BRIAN CAIRNS: So scale
actually is

00:09:17.810 --> 00:09:19.556
not really an issue.

00:09:19.556 --> 00:09:22.190
This is one of the benefits of
being built on some of the

00:09:22.190 --> 00:09:24.270
same technology as
Google Docs.

00:09:24.270 --> 00:09:27.020
There's been a lot of work there
to make sure that you

00:09:27.020 --> 00:09:30.740
can handle any scale
that's necessary.

00:09:30.740 --> 00:09:34.900
We had some issues early on
where people were storing much

00:09:34.900 --> 00:09:37.390
more data than we anticipated.

00:09:37.390 --> 00:09:41.796
We anticipated that people would
keep documents in the

00:09:41.796 --> 00:09:43.820
few megabyte range.

00:09:43.820 --> 00:09:47.417
And there were some developers
who saw the API and really

00:09:47.417 --> 00:09:50.360
loved the API and decided
to store 100 or 500

00:09:50.360 --> 00:09:52.640
megabytes of data.

00:09:52.640 --> 00:09:54.090
And that's something we
didn't anticipate.

00:09:54.090 --> 00:09:58.520
We had some performance issues
with load performance not

00:09:58.520 --> 00:10:00.540
being very good.

00:10:00.540 --> 00:10:03.915
And we did a lot of work to
really optimize performance.

00:10:03.915 --> 00:10:06.850
It can now handle much
bigger documents.

00:10:06.850 --> 00:10:11.870
In fact, we have a limit
now of 10 megabytes

00:10:11.870 --> 00:10:14.440
of data in the document.

00:10:14.440 --> 00:10:17.480
And that's done just to make
sure the performance stays

00:10:17.480 --> 00:10:18.970
reasonable.

00:10:18.970 --> 00:10:23.930
But we do have plans to work
on improving that.

00:10:23.930 --> 00:10:27.960
And our goal is basically
whatever scale or whatever

00:10:27.960 --> 00:10:30.360
size you need we want
to provide.

00:10:30.360 --> 00:10:33.210
Now I'm not saying that we're
a great choice of storing

00:10:33.210 --> 00:10:34.130
binary files.

00:10:34.130 --> 00:10:36.082
If you want to store binary
files, there's the

00:10:36.082 --> 00:10:38.735
Drive API for that.

00:10:38.735 --> 00:10:41.755
But if you have some sort of
structured data that's large,

00:10:41.755 --> 00:10:44.222
that's certainly something
that's a good candidate for

00:10:44.222 --> 00:10:45.360
the real-time API.

00:10:45.360 --> 00:10:47.570
ALI AFSHAR: OK, great.

00:10:47.570 --> 00:10:49.110
You mentioned the binary case.

00:10:49.110 --> 00:10:49.696
That reminds me.

00:10:49.696 --> 00:10:52.110
I was actually talking to
the CEO of Facebook who

00:10:52.110 --> 00:10:55.170
specifically asked me, when can
I store binary files in

00:10:55.170 --> 00:10:57.050
the Realtime API?

00:10:57.050 --> 00:10:59.000
So I gave him the same
answer as you.

00:10:59.000 --> 00:11:00.290
But anything you want
to tell him?

00:11:00.290 --> 00:11:00.880
BRIAN CAIRNS: Yes.

00:11:00.880 --> 00:11:04.260
So the best way to deal with
binary files in the Realtime

00:11:04.260 --> 00:11:08.310
API is to actually upload your
binary file to Drive.

00:11:08.310 --> 00:11:10.870
And there's a lot of different
places you can store it.

00:11:10.870 --> 00:11:12.940
You can store it [INAUDIBLE]

00:11:12.940 --> 00:11:13.200
drive.

00:11:13.200 --> 00:11:15.770
Or if you wanted it to be
application-specific, we have

00:11:15.770 --> 00:11:20.790
application data folders that
you can store data just for

00:11:20.790 --> 00:11:21.330
your application.

00:11:21.330 --> 00:11:25.050
And it doesn't [INAUDIBLE] users
drive lots and lots of

00:11:25.050 --> 00:11:26.910
[INAUDIBLE].

00:11:26.910 --> 00:11:31.700
But once you've uploaded it into
Drive, then you get the

00:11:31.700 --> 00:11:32.870
file ID back.

00:11:32.870 --> 00:11:35.170
And that file ID is universally
unique.

00:11:35.170 --> 00:11:39.600
So you could put that just in
the data model as a reference.

00:11:39.600 --> 00:11:43.700
And then when you're displaying
the real time

00:11:43.700 --> 00:11:50.200
document, you would go and
retrieve that file ID and

00:11:50.200 --> 00:11:52.560
display the data however it's
appropriate for your app.

00:11:52.560 --> 00:11:55.400
So this is really good if you
have an app that you want to

00:11:55.400 --> 00:11:59.480
embed videos, or you want to
be able to embed photos, or

00:11:59.480 --> 00:12:01.000
any kind of media.

00:12:01.000 --> 00:12:04.700
If you actually want to
collaborate on binary data,

00:12:04.700 --> 00:12:08.220
then we have a solution
for this.

00:12:08.220 --> 00:12:11.110
Unfortunately, there's not any
technology we're aware of that

00:12:11.110 --> 00:12:13.690
actually lets you collaborate
directly

00:12:13.690 --> 00:12:15.270
on binary data itself.

00:12:15.270 --> 00:12:19.830
But what we do offer is if you
initialize the Realtime API,

00:12:19.830 --> 00:12:26.430
when you call the load function
to load a document,

00:12:26.430 --> 00:12:29.000
you give us a file ID to load.

00:12:29.000 --> 00:12:33.080
You give us a binary file ID,
and we create this sort of

00:12:33.080 --> 00:12:38.580
hidden proxy document that you
can do your collaboration on.

00:12:38.580 --> 00:12:41.570
And then when you're done with
collaboration, either

00:12:41.570 --> 00:12:45.790
periodically or when the user
goes to save, you save those

00:12:45.790 --> 00:12:47.375
changes back to binary file.

00:12:47.375 --> 00:12:50.470
And what this does is it
basically lets you have

00:12:50.470 --> 00:12:52.330
collaboration on a binary file.

00:12:52.330 --> 00:12:52.950
The user--

00:12:52.950 --> 00:12:57.260
what they see is they open a
file, and they get this sort

00:12:57.260 --> 00:12:58.400
of real time file.

00:12:58.400 --> 00:13:00.350
They don't know that there's
this separate real time model.

00:13:00.350 --> 00:13:03.356
They just know that they're
working on this file.

00:13:03.356 --> 00:13:05.430
And then when they save,
they can save

00:13:05.430 --> 00:13:06.990
right back to the file.

00:13:06.990 --> 00:13:09.810
And in fact, if you have
different editor applications,

00:13:09.810 --> 00:13:11.000
we handle that too.

00:13:11.000 --> 00:13:13.260
We handle all the edge cases.

00:13:13.260 --> 00:13:14.570
And the documentation
will walk you

00:13:14.570 --> 00:13:16.200
through how to do that.

00:13:16.200 --> 00:13:19.960
But you can get a really solid
editor experience on binary

00:13:19.960 --> 00:13:21.390
files that's collaborative.

00:13:21.390 --> 00:13:26.640
And a lot of third-party apps
use Realtime API users like

00:13:26.640 --> 00:13:26.980
[? Neutron ?]

00:13:26.980 --> 00:13:30.682
Drive, for example, does it with
an assortment of files.

00:13:30.682 --> 00:13:31.390
ALI AFSHAR: OK.

00:13:31.390 --> 00:13:32.570
Thank you.

00:13:32.570 --> 00:13:37.220
So while we've got you here,
tell us any kind of secret

00:13:37.220 --> 00:13:38.100
plans for the future?

00:13:38.100 --> 00:13:39.500
Anything you can tell us?

00:13:39.500 --> 00:13:41.356
What are you working
on at the moment?

00:13:41.356 --> 00:13:45.910
BRIAN CAIRNS: So the first
priority is to get a native

00:13:45.910 --> 00:13:48.070
Java API out.

00:13:48.070 --> 00:13:52.322
So right now, we know that there
are a lot of developers

00:13:52.322 --> 00:13:54.230
who love the Realtime API, but
they're developing for

00:13:54.230 --> 00:13:58.470
Android, or they maybe want to
manipulate the data model on

00:13:58.470 --> 00:13:59.920
their own server.

00:13:59.920 --> 00:14:03.020
And the first step towards that
was the import/export.

00:14:03.020 --> 00:14:05.830
So If you want to build a mobile
app now, or something

00:14:05.830 --> 00:14:08.460
like that, import/export
API is a pretty

00:14:08.460 --> 00:14:09.500
good way to do that.

00:14:09.500 --> 00:14:13.240
You can get the data out, modify
it, then save it back.

00:14:13.240 --> 00:14:15.610
But if you want the real-time
collaborative experience on

00:14:15.610 --> 00:14:19.020
mobile, right now you have to
use the JavaScript API and do

00:14:19.020 --> 00:14:20.800
something else like that.

00:14:20.800 --> 00:14:23.000
We've actually had some
developers who have worked

00:14:23.000 --> 00:14:25.570
with JaveScript API on mobile.

00:14:25.570 --> 00:14:29.900
But clearly, what developers
really want is a native

00:14:29.900 --> 00:14:33.810
client, something that's not
going to be this wrapped up

00:14:33.810 --> 00:14:33.890
[INAUDIBLE].

00:14:33.890 --> 00:14:37.250
So we're working on a native
Jave-based client that would

00:14:37.250 --> 00:14:40.980
work great on Android, that
would be very proficient

00:14:40.980 --> 00:14:42.230
[INAUDIBLE]

00:14:42.230 --> 00:14:44.690
and it will also work on any
other Java platform.

00:14:44.690 --> 00:14:48.170
You can use it on desktop, if
you have a desktop Java app,

00:14:48.170 --> 00:14:51.920
use it on the server, if you
wanted something there.

00:14:51.920 --> 00:14:54.400
And there's lots and lots
of options with that.

00:14:54.400 --> 00:14:55.410
ALI AFSHAR: OK, fantastic.

00:14:55.410 --> 00:14:58.500
So you heard that here straight
from Brian that we're

00:14:58.500 --> 00:15:01.890
working on a way to allow you
to do this on Java desktop

00:15:01.890 --> 00:15:03.725
server and [INAUDIBLE]
of course.

00:15:03.725 --> 00:15:04.470
All right.

00:15:04.470 --> 00:15:06.150
Thanks, Brian.

00:15:06.150 --> 00:15:07.400
That's really great.

00:15:07.400 --> 00:15:08.910
And thank you so much
for joining us.

00:15:08.910 --> 00:15:10.430
That's really nice.

00:15:10.430 --> 00:15:12.980
I'm sure people will ask
a lot of questions.

00:15:12.980 --> 00:15:14.590
They can send them
to me or you.

00:15:14.590 --> 00:15:16.740
And we can follow up.

00:15:16.740 --> 00:15:20.210
If you want more information
about the Realtime API, we

00:15:20.210 --> 00:15:21.760
have our documentation.

00:15:21.760 --> 00:15:23.510
We have a quick start sample.

00:15:23.510 --> 00:15:27.450
And I think the most important
thing we have is a mini client

00:15:27.450 --> 00:15:32.020
library that abstracts out,
things like authorization that

00:15:32.020 --> 00:15:32.490
you should use.

00:15:32.490 --> 00:15:34.435
It's the Realtime
client dot js.

00:15:34.435 --> 00:15:36.345
And that's our link for
more documentation.

00:15:36.345 --> 00:15:37.330
So go and check it out.

00:15:37.330 --> 00:15:39.310
If you have any questions,
get back to me,

00:15:39.310 --> 00:15:41.485
Brian, or on Stack Overflow.

00:15:41.485 --> 00:15:42.130
All right.

00:15:42.130 --> 00:15:46.910
So now we have Carrie, who's
going to take you through the

00:15:46.910 --> 00:15:47.620
app of the week.

00:15:47.620 --> 00:15:50.840
MUSICAL INTERLUDE

00:15:50.840 --> 00:15:52.090
SPEAKER: App of the week.

00:15:56.950 --> 00:15:57.690
CARRIE ROWE: Hi, everybody.

00:15:57.690 --> 00:15:58.290
I'm Carrie.

00:15:58.290 --> 00:16:01.620
Today we are demoing pixel
editor, which is a really

00:16:01.620 --> 00:16:05.000
great photo web app to edit all
of your photos that you

00:16:05.000 --> 00:16:06.450
have stored in Drive.

00:16:06.450 --> 00:16:09.520
So I've already gone to the app
store and installed this.

00:16:09.520 --> 00:16:12.400
And so if I'm browsing through
my photos, I've come across

00:16:12.400 --> 00:16:14.440
one of my favorite dog, Zoe.

00:16:14.440 --> 00:16:17.700
And if I want to edit it, I can
open it directly with the

00:16:17.700 --> 00:16:18.380
pixel editor.

00:16:18.380 --> 00:16:21.250
So you can see that they've
integrated with one of our

00:16:21.250 --> 00:16:22.950
access points here.

00:16:22.950 --> 00:16:25.540
So I will select pixel editor.

00:16:25.540 --> 00:16:32.570
And so as this is loading,
what's really great about

00:16:32.570 --> 00:16:36.390
pixel editor, we
have so many--

00:16:36.390 --> 00:16:38.785
one of the main use cases for
Drive is people store all of

00:16:38.785 --> 00:16:39.630
their photos in there.

00:16:39.630 --> 00:16:42.070
And we really want people to be
able to interact with their

00:16:42.070 --> 00:16:42.720
photos in Drive.

00:16:42.720 --> 00:16:46.070
So this is a great app to
allow you to do that.

00:16:46.070 --> 00:16:48.170
So you can see it's now
loaded in my browser.

00:16:48.170 --> 00:16:51.430
And I have all of these tools
available for me, a very

00:16:51.430 --> 00:16:56.700
similar set of tools that you
would see in a web or a photo

00:16:56.700 --> 00:16:58.430
software tool.

00:16:58.430 --> 00:16:59.280
So let's see.

00:16:59.280 --> 00:17:02.660
I want to play around with the
brightness and contrast.

00:17:02.660 --> 00:17:05.190
So I can go right here
and it's too bright.

00:17:05.190 --> 00:17:07.180
Let's make it-- it's too dark.

00:17:07.180 --> 00:17:10.569
Let's make it a little bit
bright and let's saturate the

00:17:10.569 --> 00:17:13.000
colors a little bit more.

00:17:13.000 --> 00:17:15.390
And then there are a whole
bunch of other things

00:17:15.390 --> 00:17:16.030
you can play with.

00:17:16.030 --> 00:17:19.276
I can do a color balance.

00:17:19.276 --> 00:17:26.180
If I want more reds, greens, and
blues, I can add that too.

00:17:26.180 --> 00:17:30.300
And then if I wanted to crop my
photo before I save it, I

00:17:30.300 --> 00:17:31.960
can do that as well.

00:17:31.960 --> 00:17:35.420
And if you know more about photo
editing, there are lots

00:17:35.420 --> 00:17:37.020
of other great features
here that you can

00:17:37.020 --> 00:17:38.270
play around with too.

00:17:42.230 --> 00:17:46.160
So I'm going to apply these
changes, and then the great

00:17:46.160 --> 00:17:49.190
thing about this tool
too is I can save it

00:17:49.190 --> 00:17:50.400
directly back to my Drive.

00:17:50.400 --> 00:17:53.150
So you can see here they have
all these integration points.

00:17:53.150 --> 00:17:57.420
I'm going to save it to Drive
and call it Zoe dog enhanced.

00:18:00.250 --> 00:18:05.750
And then when I go back to my
Google Drive, I should see

00:18:05.750 --> 00:18:09.220
this new photo that
I just created.

00:18:09.220 --> 00:18:10.510
So that's pixel editor.

00:18:10.510 --> 00:18:13.880
We love to see apps that
you guys are building.

00:18:13.880 --> 00:18:16.160
And that's all we
have for today.

00:18:16.160 --> 00:18:19.080
So I wanted to thank Brian
for joining us.

00:18:19.080 --> 00:18:19.790
Thank you so much, Brian.

00:18:19.790 --> 00:18:20.730
I know you're really busy.

00:18:20.730 --> 00:18:24.120
It's great to have the eng team
on our calls to hear more

00:18:24.120 --> 00:18:25.280
about what you guys
are working on.

00:18:25.280 --> 00:18:28.390
And thanks, Ali, for
joining as well.

00:18:28.390 --> 00:18:30.010
And that's all we have
for GDL today.

00:18:30.010 --> 00:18:31.260
But join us next week.

