WEBVTT
Kind: captions
Language: en

00:00:00.170 --> 00:00:03.890
'Kay. And then they know I catch any exception because we know

00:00:03.890 --> 00:00:06.470
that every time I, well, I'll just do it, okay?

00:00:06.470 --> 00:00:08.304
&gt;&gt; Do we mentioned that line 34 prints the wrong?

00:00:08.304 --> 00:00:08.804
&gt;&gt; Yeah. &gt;&gt; It prints that. [CROSSTALK] Prints next to the [INAUDIBLE]. &gt;&gt; Yeah.

00:00:08.804 --> 00:00:14.425
&gt;&gt; Yeah. &gt;&gt; Sorry. &gt;&gt; You need to make a note of that, though.

00:00:14.425 --> 00:00:15.246
&gt;&gt; Can we put? &gt;&gt; Who's checking the the recorder?

00:00:15.246 --> 00:00:17.254
&gt;&gt; [CROSSTALK] Crazy Bob.

00:00:17.254 --> 00:00:18.320
[INAUDIBLE] here?

00:00:20.150 --> 00:00:24.190
Major, major, our majors are what we had the not equal to sentinel.

00:00:24.190 --> 00:00:25.090
That needs to change.

00:00:25.090 --> 00:00:29.040
&gt;&gt; Right. &gt;&gt; We're not checking for a period or have the exception.

00:00:29.040 --> 00:00:31.880
&gt;&gt; We're printing every character on new line as an int.

00:00:31.880 --> 00:00:32.878
&gt;&gt; Okay, that's pretty good.

00:00:32.878 --> 00:00:36.936
&gt;&gt; There's questions about whether the loop even terminates in

00:00:36.936 --> 00:00:39.680
the network between the wrong variable.

00:00:39.680 --> 00:00:43.310
&gt;&gt; Okay. I shouldn't catch, can, are we going to, you know,

00:00:43.310 --> 00:00:48.110
catch beyond its own line or catch comes after, you know, on, on line 36 there.

00:00:48.110 --> 00:00:54.850
Should, should we, is there, do we want to talk about a standard for that?

00:00:54.850 --> 00:00:55.960
&gt;&gt; I personally like this style.

00:00:55.960 --> 00:00:59.100
I mean, the, I think this is the, the new style or whatever.

00:00:59.100 --> 00:00:59.910
I like this line.

00:00:59.910 --> 00:01:02.890
This where the, the opening curly brace is on the same line and

00:01:02.890 --> 00:01:04.644
then the close curly brace on [INAUDIBLE].

00:01:04.644 --> 00:01:07.000
&gt;&gt; Actually, Crazy Bob and I talked about that a lot and

00:01:07.000 --> 00:01:09.830
we thought that, that was a, a nice way to put the code.

00:01:09.830 --> 00:01:12.725
And again, we wanted to define the standards as different we can do

00:01:12.725 --> 00:01:13.469
it in [INAUDIBLE].

00:01:13.469 --> 00:01:15.726
&gt;&gt; Guess that mix-up coding were discussed between the two of you.

00:01:15.726 --> 00:01:16.601
&gt;&gt; Just [INAUDIBLE].

00:01:16.601 --> 00:01:18.476
&gt;&gt; That's interesting.

00:01:18.476 --> 00:01:19.304
Well, we named-

00:01:19.304 --> 00:01:20.433
&gt;&gt; We were talking about how ADA,

00:01:20.433 --> 00:01:22.393
you know, ADA doesn't even use these curly braces.

00:01:22.393 --> 00:01:24.657
I mean, you, we could begins and ends and

00:01:24.657 --> 00:01:28.948
then it's really clear exactly where these blocks are beginning and ending.

00:01:28.948 --> 00:01:31.878
We wouldn't having all these crazy Java problems that we've got.

00:01:31.878 --> 00:01:34.768
&gt;&gt; Which you know Crazy Bob.

00:01:34.768 --> 00:01:37.120
It's from pre-Civil War era.

00:01:37.120 --> 00:01:37.790
So.

00:01:37.790 --> 00:01:40.270
&gt;&gt; Yeah. &gt;&gt; We, you, you need, need to be careful when you listen to him.

00:01:40.270 --> 00:01:42.590
You know, one thing that's bothering me.

00:01:42.590 --> 00:01:47.349
I keep looking at this thing, is that here's a piece of code,

00:01:47.349 --> 00:01:50.107
you're claiming that you read it.

00:01:50.107 --> 00:01:54.364
But there's no header in this code that says, you know,

00:01:54.364 --> 00:01:59.410
this is a Doctor Bug's code, the revision of the code.

00:01:59.410 --> 00:02:01.938
Any of that kind of information, which is typical in,

00:02:01.938 --> 00:02:07.115
in software engineering, and we know who's it is, how it's revised.

00:02:07.115 --> 00:02:10.655
If other people been making new versions of it, we know who they are,

00:02:10.655 --> 00:02:15.980
what the dates of, of, of each revision, original development art, et cetera.

00:02:15.980 --> 00:02:18.580
None of that is in here.

00:02:18.580 --> 00:02:20.688
&gt;&gt; So that ten years from now the maintainers can call you up in the middle of

00:02:20.688 --> 00:02:22.216
the night and, and ask you what you were thinking?

00:02:22.216 --> 00:02:25.833
&gt;&gt; Could the number of bugs in this code is clear-

00:02:25.833 --> 00:02:27.817
[CROSSTALK]. &gt;&gt; Right, no Java down here.

00:02:27.817 --> 00:02:30.020
&gt;&gt; In this case it might be appropriate if you also put the sources

00:02:31.300 --> 00:02:33.420
of the different places you visited [INAUDIBLE] copy and pasted code.

00:02:33.420 --> 00:02:33.920
That might be.

00:02:34.940 --> 00:02:35.960
&gt;&gt; Okay, that was just a minor.

00:02:35.960 --> 00:02:38.306
I mean I really copy a coupled of things, not too much.

00:02:38.306 --> 00:02:39.108
&gt;&gt; [CROSSTALK] Oh. Okay.

00:02:39.108 --> 00:02:40.013
&gt;&gt; But that's sure.

00:02:40.013 --> 00:02:40.621
I mean I, I-

00:02:40.621 --> 00:02:43.235
&gt;&gt; Like the while statement that's incorrect.

00:02:43.235 --> 00:02:43.830
&gt;&gt; Mm-hm.

00:02:43.830 --> 00:02:46.870
Yeah. &gt;&gt; Yeah. &gt;&gt; Well, I think I told you before that the while statement is

00:02:46.870 --> 00:02:47.415
actually my mistake.

00:02:47.415 --> 00:02:47.945
[CROSSTALK].

00:02:47.945 --> 00:02:49.810
&gt;&gt; The point has been made, very good to talk about continuity.

00:02:51.490 --> 00:02:52.040
&gt;&gt; Okay.

00:02:52.040 --> 00:02:54.231
So, at this point yeah.

00:02:54.231 --> 00:02:55.364
That the cases.

00:02:55.364 --> 00:02:56.592
&gt;&gt; We're going back to line 36,

00:02:56.592 --> 00:02:58.965
I believe it's improper to catch just a generic conception.

00:02:58.965 --> 00:03:02.581
You're supposed to catch the most specific catch you're actually expecting.

00:03:02.581 --> 00:03:03.467
&gt;&gt; Generic catching,

00:03:03.467 --> 00:03:06.601
catching generic conceptions is just catching generic conceptions.

00:03:06.601 --> 00:03:09.245
That's just to cover your behind kind of thing.

00:03:09.245 --> 00:03:09.902
&gt;&gt; Yeah.

00:03:09.902 --> 00:03:12.440
&gt;&gt; [CROSSTALK] Actually trying to catch IO exceptions.

00:03:12.440 --> 00:03:15.200
I believe there should be IO exception to the rule.

00:03:15.200 --> 00:03:19.100
[COUGH]. &gt;&gt; Yeah I was just trying to be comprehensive, because you know,

00:03:19.100 --> 00:03:22.030
this way an exception that happens will be caught.

00:03:22.030 --> 00:03:23.570
&gt;&gt; Sure. &gt;&gt; We need an exit-able system without printing anything is

00:03:23.570 --> 00:03:24.090
also really bad.

00:03:26.630 --> 00:03:29.400
I mean, we should be writing to the logger.

00:03:29.400 --> 00:03:30.750
&gt;&gt; In the case of where the exception was raised.

00:03:30.750 --> 00:03:32.380
&gt;&gt; Yeah, in the case where the exception was raised.

00:03:32.380 --> 00:03:36.129
I'd call that, definitely, a major.

00:03:36.129 --> 00:03:38.027
Both of them.

00:03:38.027 --> 00:03:40.030
I don't know if my colleagues agree with that or not.

00:03:41.390 --> 00:03:45.990
&gt;&gt; So, we need to catch specific, and then have a generic catch that follows?

00:03:45.990 --> 00:03:46.620
Is that what we're saying?

00:03:48.090 --> 00:03:50.180
&gt;&gt; We just catch the ones we were actually expecting.

00:03:51.380 --> 00:03:54.503
&gt;&gt; What about the ones that we don't expect?

00:03:54.503 --> 00:03:58.752
We're not, we won't get any information about those will we?

00:03:58.752 --> 00:04:01.884
&gt;&gt; Well you know if we were using eta they have a catch all at the end that we

00:04:01.884 --> 00:04:02.590
could always.

00:04:02.590 --> 00:04:03.901
[CROSSTALK]. &gt;&gt; There. &gt;&gt; Well enough with this eta stuff.

00:04:03.901 --> 00:04:08.400
&gt;&gt; [LAUGH]. &gt;&gt; I think we are using Java and so we'll have to deal with that.

00:04:08.400 --> 00:04:12.199
Again I think we should make that also part of the quoting standards.

