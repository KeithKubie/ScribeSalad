WEBVTT
Kind: captions
Language: en

00:00:07.830 --> 00:00:13.150
 the staff are navy grandson developed 

00:00:10.600 --> 00:00:15.130
 hopper bolkiak leaves google and that 

00:00:13.150 --> 00:00:16.840
 today you can talk about a really cool resource 

00:00:15.130 --> 00:00:19.210
 for those who like fitness or who gives 

00:00:16.840 --> 00:00:21.820
 more precise details about the 

00:00:19.210 --> 00:00:24.970
 daily information of your users 

00:00:21.820 --> 00:00:26.020
 and are the peace sensors or step sensors 

00:00:24.970 --> 00:00:28.689
 in English 

00:00:26.020 --> 00:00:31.840
 they are added after 19 on android 

00:00:28.689 --> 00:00:33.880
 4.4 Kitkat they are based on 

00:00:31.840 --> 00:00:35.710
 accelerometers the device is sound 

00:00:33.880 --> 00:00:37.510
 radar sensors and with that were 

00:00:35.710 --> 00:00:39.160
 designed by it to have a low consumption 

00:00:37.510 --> 00:00:40.750
 battery because you're going to do 

00:00:39.160 --> 00:00:41.949
 application does not end up with the 

00:00:40.750 --> 00:00:44.679
 your user since this is not what you 

00:00:41.949 --> 00:00:46.839
 in fact, and it's also smart to 

00:00:44.679 --> 00:00:49.210
 sufficient to detect when it is peace 

00:00:46.839 --> 00:00:52.120
 true or when the sun is in a car 

00:00:49.210 --> 00:00:53.920
 or are you on a bicycle bus workout? 

00:00:52.120 --> 00:00:57.550
 something that is not in fact 

00:00:53.920 --> 00:01:00.339
 truck first time let's talk here is 

00:00:57.550 --> 00:01:03.100
 the rock step detector is activated 

00:01:00.339 --> 00:01:06.340
 when a step is detected informing the 

00:01:03.100 --> 00:01:08.649
 value of return of this sensor is because 

00:01:06.340 --> 00:01:12.399
 an event happens on the part of the deputy 

00:01:08.649 --> 00:01:14.439
 and you in your code can listen to this 

00:01:12.399 --> 00:01:16.960
 two-way sensor continuously 

00:01:14.439 --> 00:01:19.149
 or a block in clash 

00:01:16.960 --> 00:01:21.430
 the first would be when 

00:01:19.149 --> 00:01:23.380
 continuous way by putting the garbage in 

00:01:21.430 --> 00:01:24.130
 looking for elly with max of law equal to 

00:01:23.380 --> 00:01:26.740
 zero 

00:01:24.130 --> 00:01:29.140
 this way once a detected step 

00:01:26.740 --> 00:01:31.840
 your code already notified you must 

00:01:29.140 --> 00:01:33.399
 make the logics or the schedules that 

00:01:31.840 --> 00:01:35.590
 are necessary because you have the 

00:01:33.399 --> 00:01:37.299
 expected result but if you do not 

00:01:35.590 --> 00:01:39.939
 need information exactly at the moment 

00:01:37.299 --> 00:01:42.850
 where it happens you can use the 

00:01:39.939 --> 00:01:45.159
 shape is ibet or in block 

00:01:42.850 --> 00:01:47.140
 for this just put the max of law 

00:01:45.159 --> 00:01:49.090
 such as five seconds 

00:01:47.140 --> 00:01:51.820
 then the maximum time of five seconds 

00:01:49.090 --> 00:01:54.039
 after that step you will be 

00:01:51.820 --> 00:01:56.380
 notified of the steps that have taken place 

00:01:54.039 --> 00:01:59.079
 but of course it remains a 

00:01:56.380 --> 00:02:01.359
 event for Easter so be a good 

00:01:59.079 --> 00:02:03.130
 Android player and just ask for an event on 

00:02:01.359 --> 00:02:05.380
 You really need this. 

00:02:03.130 --> 00:02:06.850
 way it will save even more 

00:02:05.380 --> 00:02:09.280
 user battery 

00:02:06.850 --> 00:02:11.980
 o other sensor is the step counter 

00:02:09.280 --> 00:02:13.990
 it works much like the detector at 

00:02:11.980 --> 00:02:16.060
 difference that he accumulates the steps 

00:02:13.990 --> 00:02:16.390
 Ever since you started listening to the trash 

00:02:16.060 --> 00:02:18.400
 huh 

00:02:16.390 --> 00:02:19.420
 Okay, so he has a little more 

00:02:18.400 --> 00:02:22.000
 latent because he has this 

00:02:19.420 --> 00:02:23.230
 positioning but it produces less 

00:02:22.000 --> 00:02:25.600
 false positives 

00:02:23.230 --> 00:02:28.390
 and can also be listened to by two 

00:02:25.600 --> 00:02:31.209
 ways continued in block or the mother 

00:02:28.390 --> 00:02:32.770
 had seen in previous ones and you want 

00:02:31.209 --> 00:02:35.860
 start using sensors the first 

00:02:32.770 --> 00:02:38.560
 step is to put depends on the version 

00:02:35.860 --> 00:02:41.770
 it's 19 at the beginning of the cave as I said 

00:02:38.560 --> 00:02:43.780
 you say it was taken on android 4.4 and 

00:02:41.770 --> 00:02:45.100
 also put the following already thing that 

00:02:43.780 --> 00:02:49.300
 you will use it 

00:02:45.100 --> 00:02:50.530
 the steppe yesterday the system detects but I will 

00:02:49.300 --> 00:02:52.540
 think you do not have it like 

00:02:50.530 --> 00:02:54.580
 main fitch has come down from your app 

00:02:52.540 --> 00:02:57.040
 so let's put it in the manifesto 

00:02:54.580 --> 00:03:00.010
 you can do this and the pec of energy 

00:02:57.040 --> 00:03:01.660
 this way you will prevent the 

00:03:00.010 --> 00:03:04.030
 user does not download the application if he 

00:03:01.660 --> 00:03:05.709
 does not have this sensor but can give a 

00:03:04.030 --> 00:03:07.709
 Well, it was a nice fit for the person who already 

00:03:05.709 --> 00:03:10.930
 sensor available on your device 

00:03:07.709 --> 00:03:12.459
 good customer use personal sensor has 

00:03:10.930 --> 00:03:14.080
 what to do the right way 

00:03:12.459 --> 00:03:17.110
 you can decide two ways to 

00:03:14.080 --> 00:03:19.900
 first is to receive the events only 

00:03:17.110 --> 00:03:22.480
 while ep is running ok 

00:03:19.900 --> 00:03:25.000
 In this case you will need to take care of yourself. 

00:03:22.480 --> 00:03:27.190
 even the life cycle then recording 

00:03:25.000 --> 00:03:29.519
 edis registering your list according to 

00:03:27.190 --> 00:03:32.650
 with the active rotation re-creation 

00:03:29.519 --> 00:03:34.959
 device is suspended or disabled. 

00:03:32.650 --> 00:03:37.360
 something like that there in case you 

00:03:34.959 --> 00:03:39.400
 to listen to the police is even when the cpu 

00:03:37.360 --> 00:03:42.250
 suspended in the background 

00:03:39.400 --> 00:03:44.049
 It's also possible to just remember to treat 

00:03:42.250 --> 00:03:45.790
 queue of events other than this 

00:03:44.049 --> 00:03:47.739
 do not overflow 

00:03:45.790 --> 00:03:49.180
 an overload of this queue as it goes 

00:03:47.739 --> 00:03:51.610
 accumulate events directly 

00:03:49.180 --> 00:03:54.060
 it is up to you to avoid 

00:03:51.610 --> 00:03:57.190
 chatted and laughed for your app 

00:03:54.060 --> 00:03:59.260
 How does this example come from? 

00:03:57.190 --> 00:04:01.840
 of steps where I received the notification 

00:03:59.260 --> 00:04:03.549
 a sensor dye so that a step 

00:04:01.840 --> 00:04:06.130
 it is in this example that we are 

00:04:03.549 --> 00:04:08.950
 seeing that I am accumulating the steps of 

00:04:06.130 --> 00:04:10.630
 according to an event and the vÃ©lez of that face 

00:04:08.950 --> 00:04:12.130
 Why then only one year 

00:04:10.630 --> 00:04:15.280
 you can make another code yourself 

00:04:12.130 --> 00:04:16.810
 find it necessary in your application or I 

00:04:15.280 --> 00:04:19.390
 I can also do the step counter 

00:04:16.810 --> 00:04:21.850
 remembering that you are accumulating value and I 

00:04:19.390 --> 00:04:25.030
 I can do this through value in 

00:04:21.850 --> 00:04:28.210
 position 0 of the event 

00:04:25.030 --> 00:04:29.740
 Good people, that way, you? 

00:04:28.210 --> 00:04:30.190
 can get information about the 

00:04:29.740 --> 00:04:31.660
 activity 

00:04:30.190 --> 00:04:34.030
 the users on how much it he 

00:04:31.660 --> 00:04:36.400
 walked what else he did with his 

00:04:34.030 --> 00:04:38.860
 application and device 

00:04:36.400 --> 00:04:41.640
 So enjoy and good walk from 

00:04:38.860 --> 00:04:41.640
 next staff 

