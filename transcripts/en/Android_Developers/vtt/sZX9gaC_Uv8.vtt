WEBVTT
Kind: captions
Language: en

00:00:05.210 --> 00:00:08.930
SPARKY RHODE: Once again, it's
Wednesday afternoon in lovely,

00:00:08.930 --> 00:00:10.045
sunny Europe.

00:00:10.045 --> 00:00:11.230
I'm Sparky in Munich, Germany.

00:00:11.230 --> 00:00:14.130
I'm joined by Matt and
Nick in London, UK.

00:00:14.130 --> 00:00:14.560
NICK: Hello.

00:00:14.560 --> 00:00:15.940
MATT: Hi.

00:00:15.940 --> 00:00:17.310
SPARKY RHODE: It's 3:00
here in Munich.

00:00:17.310 --> 00:00:18.510
It's 2:00 in London.

00:00:18.510 --> 00:00:22.010
And we're here to talk about
Android app development.

00:00:22.010 --> 00:00:24.860
So with that, I see that we've
got Andrew Kelly in the

00:00:24.860 --> 00:00:28.530
Hangout, and he's also had a
question prepared for us.

00:00:28.530 --> 00:00:30.240
I don't know if I have the
answer, but let's hear it.

00:00:32.990 --> 00:00:35.030
ANDREW KELLY: I had two
questions today, actually.

00:00:35.030 --> 00:00:40.630
One was to do the action bar and
the overflow menu items.

00:00:40.630 --> 00:00:43.940
On things like Gingerbread,
whenever I use the Menu key,

00:00:43.940 --> 00:00:47.100
sort of the hard Menu key on a
device, I can see a little

00:00:47.100 --> 00:00:51.056
icon next to each of the
items in the menu.

00:00:51.056 --> 00:00:55.020
But on Gingerbread, and sorry--
on Ice Cream Sandwich

00:00:55.020 --> 00:00:57.680
and Jelly Bean, those icons
seemed to disappear.

00:00:57.680 --> 00:01:00.470
I was just wondering if
that's intentional

00:01:00.470 --> 00:01:02.140
or a bug in my code.

00:01:02.140 --> 00:01:04.544
NICK: No, that's working
as intended.

00:01:04.544 --> 00:01:06.520
ANDREW KELLY: OK, cool.

00:01:06.520 --> 00:01:10.146
Is there any reason why they
decided to get rid of those?

00:01:10.146 --> 00:01:11.720
NICK: I don't know.

00:01:11.720 --> 00:01:13.100
It's probably a question
for the UX team.

00:01:13.100 --> 00:01:15.260
But they decided that
the Overflow menu

00:01:15.260 --> 00:01:16.910
would just be textual.

00:01:16.910 --> 00:01:19.290
ANDREW KELLY: OK.

00:01:19.290 --> 00:01:21.020
That was a simple answer.

00:01:21.020 --> 00:01:22.830
NICK: Yeah.

00:01:22.830 --> 00:01:24.960
SPARKY RHODE: If you look in the
Moderator, I believe that

00:01:24.960 --> 00:01:28.010
I hit upon the correct answer
right away, which was to say

00:01:28.010 --> 00:01:29.130
I'll let Nick answer this.

00:01:29.130 --> 00:01:31.330
[CHUCKLES]

00:01:31.330 --> 00:01:32.950
NICK: And there it was.

00:01:32.950 --> 00:01:33.870
MATT: Designed very nice.

00:01:33.870 --> 00:01:35.200
NICK: Yeah you can--

00:01:35.200 --> 00:01:38.170
I've seen other applications
override it and do more

00:01:38.170 --> 00:01:38.790
interesting menus.

00:01:38.790 --> 00:01:41.180
I think Chrome, for example,
does some stuff where it puts

00:01:41.180 --> 00:01:44.320
the first overflow items
is actually--

00:01:44.320 --> 00:01:46.820
it's the forward, back, and
star buttons, I think.

00:01:46.820 --> 00:01:48.220
So it tends to make it a little
bit more creative with

00:01:48.220 --> 00:01:49.470
iconography.

00:01:49.470 --> 00:01:51.240
So it's possible to kind of
override the implementation

00:01:51.240 --> 00:01:53.380
and do something with
iconography if that's super

00:01:53.380 --> 00:01:53.990
important to you.

00:01:53.990 --> 00:01:56.743
But I would probably stick to
the platform default unless

00:01:56.743 --> 00:01:59.080
you have good reasons
to deviate.

00:01:59.080 --> 00:02:00.460
ANDREW KELLY: I just wanted to
make sure it wasn't a bug,

00:02:00.460 --> 00:02:01.240
that's all.

00:02:01.240 --> 00:02:03.910
Cool.

00:02:03.910 --> 00:02:07.350
SPARKY RHODE: I have to say,
reserving the icons for the

00:02:07.350 --> 00:02:10.039
action bar gives you, I think,
maybe a little more incentive

00:02:10.039 --> 00:02:13.680
to put your colorful and
interesting actions out there

00:02:13.680 --> 00:02:15.125
and not hide them
in the overflow.

00:02:18.040 --> 00:02:19.590
NICK: Well I don't know.

00:02:19.590 --> 00:02:19.910
Yeah.

00:02:19.910 --> 00:02:22.720
It's also quite important to
provide text and icons for

00:02:22.720 --> 00:02:24.900
everything because of the way
the action bar works with the

00:02:24.900 --> 00:02:26.520
ifRoom and so on.

00:02:26.520 --> 00:02:29.370
You can't guarantee
deterministically how many

00:02:29.370 --> 00:02:31.990
icons are going to be showing
depending on the device and

00:02:31.990 --> 00:02:34.610
platform changes and all
this good stuff.

00:02:34.610 --> 00:02:39.010
So, yeah, it's super important
to provide a title even if you

00:02:39.010 --> 00:02:42.020
just have an icon, and you
say always show this.

00:02:42.020 --> 00:02:45.020
Because that same title text
will be used for the long

00:02:45.020 --> 00:02:46.310
press tool tip.

00:02:46.310 --> 00:02:48.910
So it's just really important
to provide both really.

00:02:55.090 --> 00:02:56.530
SPARKY RHODE: You've got
the floor, Andrew.

00:02:56.530 --> 00:02:59.470
Do you want to ask your
other question?

00:02:59.470 --> 00:03:02.175
ANDREW KELLY: As long as I'm
here, I might as well.

00:03:02.175 --> 00:03:04.640
I was just trying to work out
if there's a way of doing

00:03:04.640 --> 00:03:10.105
animated launcher icons or icons
that can change on maybe

00:03:10.105 --> 00:03:10.730
a given date.

00:03:10.730 --> 00:03:14.460
Like a calendar app might have
an icon that would say, the

00:03:14.460 --> 00:03:16.060
third, the second.

00:03:16.060 --> 00:03:19.310
The actual date would be part
of the launcher icon.

00:03:19.310 --> 00:03:21.830
I'm just trying to work out if
there's a clever way of either

00:03:21.830 --> 00:03:26.380
animating launcher icons or
having them change over time.

00:03:26.380 --> 00:03:28.750
NICK: So there's no built-in
support for this.

00:03:28.750 --> 00:03:30.430
There's no API for this.

00:03:30.430 --> 00:03:35.570
But you could probably do
something clever slash evil by

00:03:35.570 --> 00:03:40.020
using package manager dot enable
set component enabled.

00:03:40.020 --> 00:03:44.970
So if you think about it, your
application is just--

00:03:44.970 --> 00:03:49.360
the icon in the launcher is just
an intent receiver as for

00:03:49.360 --> 00:03:52.630
the home-main, intent
filters, right?

00:03:52.630 --> 00:03:56.310
So I guess you could create 31
of those, each of which points

00:03:56.310 --> 00:03:59.450
to the same activity that has
a different icon defined.

00:03:59.450 --> 00:04:02.920
And then have some kind of
alarm which uses Package

00:04:02.920 --> 00:04:04.170
Manager to enable disable.

00:04:07.120 --> 00:04:10.520
I caution you, because it sounds
like a hack, and it's

00:04:10.520 --> 00:04:11.680
probably going to
break things.

00:04:11.680 --> 00:04:13.500
Like if you try and
put a shortcut--

00:04:13.500 --> 00:04:14.990
well not probably, it
will break things.

00:04:14.990 --> 00:04:16.680
If you try to put a shortcut
on your home screen, for

00:04:16.680 --> 00:04:20.540
example, disabling the
component, which usually drop

00:04:20.540 --> 00:04:22.620
from the home screen, enabling
another one which looks

00:04:22.620 --> 00:04:25.320
similar is going to break it.

00:04:25.320 --> 00:04:29.020
It's probably going to break it
in all kinds of other ways.

00:04:29.020 --> 00:04:30.570
There's ways you could do
it, but probably not.

00:04:30.570 --> 00:04:33.230
I would probably would
say, think about

00:04:33.230 --> 00:04:35.030
maybe having a widget.

00:04:35.030 --> 00:04:38.600
So obviously it won't change
in the launcher in

00:04:38.600 --> 00:04:39.840
the all apps tray.

00:04:39.840 --> 00:04:42.010
But on the home screen, you
could have an icon which

00:04:42.010 --> 00:04:47.350
changed daily and get
close enough.

00:04:47.350 --> 00:04:50.000
ANDREW KELLY: I don't know if
there's a way I could extend

00:04:50.000 --> 00:04:53.900
the animated drawable or to have
it automatically call the

00:04:53.900 --> 00:04:58.160
start method on the animation
and just point to that in my

00:04:58.160 --> 00:04:59.870
manifest XML file
or something.

00:04:59.870 --> 00:05:02.250
But I was unsuccessful
trying to get that

00:05:02.250 --> 00:05:03.450
kind of thing to work.

00:05:03.450 --> 00:05:03.614
NICK: Yeah.

00:05:03.614 --> 00:05:04.440
I'm not surprised.

00:05:04.440 --> 00:05:05.390
I don't think that is
a supported use

00:05:05.390 --> 00:05:08.600
case for the launcher.

00:05:08.600 --> 00:05:10.230
SPARKY RHODE: I'd be curious
to find out if some of the

00:05:10.230 --> 00:05:12.875
third party launcher
replacements do that, or if

00:05:12.875 --> 00:05:14.125
they support that capability.

00:05:16.255 --> 00:05:18.590
I am fuzzing up today.

00:05:18.590 --> 00:05:20.505
We're having camera hunting
problems here.

00:05:24.470 --> 00:05:25.860
NICK: Who else have
we got joined us?

00:05:25.860 --> 00:05:26.480
Is that Paul?

00:05:26.480 --> 00:05:28.520
SPARKY RHODE: Paul Hanson
is in the hang out.

00:05:28.520 --> 00:05:29.220
Welcome Paul.

00:05:29.220 --> 00:05:31.192
What's up?

00:05:31.192 --> 00:05:32.100
PAUL HANSON: Hello?

00:05:32.100 --> 00:05:34.060
Can you hear me OK?

00:05:34.060 --> 00:05:36.415
I can never tell if this is
working, because I haven't got

00:05:36.415 --> 00:05:38.410
the video feed.

00:05:38.410 --> 00:05:38.690
NICK: No worries.

00:05:38.690 --> 00:05:39.710
PAUL HANSON: Things are good?

00:05:39.710 --> 00:05:43.370
Thank you for getting back to
me, Nick, the other day.

00:05:43.370 --> 00:05:45.845
I've just been spending quite
a while trying to get AVM up

00:05:45.845 --> 00:05:47.420
and running with the codes.

00:05:47.420 --> 00:05:50.400
So it's taking me a while trying
to get proper VM done.

00:05:50.400 --> 00:05:54.140
So I'm going to implement
that quite soon.

00:05:54.140 --> 00:05:57.280
Otherwise, I've got a few things
to ask, but they're not

00:05:57.280 --> 00:06:00.350
in a very easy-to-ask format.

00:06:00.350 --> 00:06:03.650
So I might hang on until
later in the show.

00:06:03.650 --> 00:06:04.630
NICK: OK.

00:06:04.630 --> 00:06:08.890
PAUL HANSON: And I see you're
doing a talk, Nick, at the

00:06:08.890 --> 00:06:11.660
developer conference
next week.

00:06:11.660 --> 00:06:13.040
NICK: Which one?

00:06:13.040 --> 00:06:14.490
PAUL HANSON: The Droidcon.

00:06:14.490 --> 00:06:16.800
Is there another
one in London?

00:06:16.800 --> 00:06:16.990
NICK: No.

00:06:16.990 --> 00:06:18.730
Next week I'm going
to be there.

00:06:18.730 --> 00:06:20.310
I'm just an attendee
at Droidcon.

00:06:20.310 --> 00:06:21.110
I won't be speaking.

00:06:21.110 --> 00:06:22.490
Matt here will be talking.

00:06:22.490 --> 00:06:22.620
MATT: Yup.

00:06:22.620 --> 00:06:24.720
I'll be talking about
Google TV.

00:06:24.720 --> 00:06:27.410
PAUL HANSON: What's the topic?

00:06:27.410 --> 00:06:28.580
MATT: Some [INAUDIBLE]

00:06:28.580 --> 00:06:29.140
Google TV.

00:06:29.140 --> 00:06:31.720
And at the moment, I'm probably
going to be doing

00:06:31.720 --> 00:06:34.860
some stuff on the [INAUDIBLE]
protocol and some of the cool

00:06:34.860 --> 00:06:37.210
stuff you can do with that.

00:06:37.210 --> 00:06:38.700
PAUL HANSON: I'm looking forward
to meeting everybody

00:06:38.700 --> 00:06:43.850
and meeting up with some Google
types down there.

00:06:43.850 --> 00:06:44.036
NICK: Cool, awesome.

00:06:44.036 --> 00:06:46.543
I'll just be hanging out,
meeting you guys, talking

00:06:46.543 --> 00:06:47.902
Android stuff, I guess.

00:06:47.902 --> 00:06:49.740
PAUL HANSON: Oh brilliant.

00:06:49.740 --> 00:06:49.992
NICK: Yeah.

00:06:49.992 --> 00:06:50.500
It should be good.

00:06:50.500 --> 00:06:51.730
Come say hi.

00:06:51.730 --> 00:06:54.880
PAUL HANSON: I definitely
will.

00:06:54.880 --> 00:06:57.075
I've got a few more
things at NFC.

00:06:57.075 --> 00:06:59.780
I might send you a message
before the conference, because

00:06:59.780 --> 00:07:03.550
I know you've got your contact
that knows all these things.

00:07:03.550 --> 00:07:05.270
NICK: Yes.

00:07:05.270 --> 00:07:05.670
Sure.

00:07:05.670 --> 00:07:06.440
Why not?

00:07:06.440 --> 00:07:06.670
PAUL HANSON: Cheers.

00:07:06.670 --> 00:07:07.920
I'll definitely see
you next week.

00:07:10.230 --> 00:07:11.640
NICK: Feel free if you do
want to ask questions.

00:07:11.640 --> 00:07:14.100
I would much rather take live
questions from a person who

00:07:14.100 --> 00:07:17.170
can clarify and respond and make
sure we're on the right

00:07:17.170 --> 00:07:20.380
track than go through
[INAUDIBLE] ones.

00:07:20.380 --> 00:07:22.800
PAUL HANSON: I've
got one thing.

00:07:22.800 --> 00:07:25.870
I've not got it fully prepared
this time, because I was on

00:07:25.870 --> 00:07:28.730
holiday last week.

00:07:28.730 --> 00:07:33.780
One question I do have generally
is if Google or

00:07:33.780 --> 00:07:37.240
Android's been preparing
for Trusted Execution

00:07:37.240 --> 00:07:38.230
environments.

00:07:38.230 --> 00:07:39.480
Does that ring any bells
with anybody?

00:07:42.240 --> 00:07:43.710
NICK: Are you talking
about ARM TrustZone

00:07:43.710 --> 00:07:44.990
and things like this?

00:07:44.990 --> 00:07:45.140
PAUL HANSON: Yeah.

00:07:45.140 --> 00:07:47.290
I've got some specs I've
got to read, because

00:07:47.290 --> 00:07:48.060
I do a lot of research.

00:07:48.060 --> 00:07:51.200
And I can see this is
an important area.

00:07:51.200 --> 00:07:55.140
It looks like it's still
defining the actual specs at

00:07:55.140 --> 00:07:58.480
the moment, but I presume
Android are getting fully

00:07:58.480 --> 00:08:01.400
behind it, sort of thing.

00:08:01.400 --> 00:08:03.940
NICK: Do you know anything
about it, Sparky?

00:08:03.940 --> 00:08:07.530
SPARKY RHODE: Not
any specifics.

00:08:07.530 --> 00:08:14.540
My general read on that is that
that kind of thing is not

00:08:14.540 --> 00:08:15.350
very Googly.

00:08:15.350 --> 00:08:20.260
But if you are going to be doing
media codecs and playing

00:08:20.260 --> 00:08:24.490
back licensed content from
people who own media titles,

00:08:24.490 --> 00:08:25.880
you're going to have
to go there.

00:08:28.600 --> 00:08:31.140
NICK: So at the moment, my take
on it, it's not a subject

00:08:31.140 --> 00:08:32.140
I know a ton about.

00:08:32.140 --> 00:08:34.720
But I believe there are some
devices already supported,

00:08:34.720 --> 00:08:38.070
like in the Silicon already in
the market, like the Galaxy S3

00:08:38.070 --> 00:08:38.830
and so forth.

00:08:38.830 --> 00:08:41.860
And I think in some cases, we
even take advantage of it, I

00:08:41.860 --> 00:08:43.980
think, maybe in some
of our DRM stuff.

00:08:43.980 --> 00:08:45.890
I'm not entirely sure.

00:08:45.890 --> 00:08:48.890
But I don't think there are
any platform APIs yet.

00:08:48.890 --> 00:08:51.313
I think it's all quite device
specific at the moment.

00:08:51.313 --> 00:08:52.970
where we're going to
be invoking native

00:08:52.970 --> 00:08:54.700
libraries and so on.

00:08:54.700 --> 00:08:56.055
PAUL HANSON: So you mentioned
the Galaxy S3.

00:08:58.840 --> 00:09:00.880
What was in relation to the
Galaxy S3 you just mentioned?

00:09:00.880 --> 00:09:02.702
Sorry, I missed that bit.

00:09:02.702 --> 00:09:03.070
NICK: Sorry.

00:09:03.070 --> 00:09:05.480
I think they support the ARM
TrustZone somehow, although

00:09:05.480 --> 00:09:08.690
I'm not entirely sure.

00:09:08.690 --> 00:09:11.430
I think I just heard
that anecdotally.

00:09:11.430 --> 00:09:11.550
PAUL HANSON: OK.

00:09:11.550 --> 00:09:12.800
No problem.

00:09:14.870 --> 00:09:17.290
NICK: So it's not something I
know a ton about, I'm afraid.

00:09:17.290 --> 00:09:19.410
PAUL HANSON: I might have some
stuff I'll write and message

00:09:19.410 --> 00:09:21.030
over before the conference.

00:09:21.030 --> 00:09:23.520
Or is there someone at the
conference who might be more

00:09:23.520 --> 00:09:27.240
NFC, more security kind
of person down there?

00:09:27.240 --> 00:09:28.130
NICK: Not from Google, no.

00:09:28.130 --> 00:09:29.380
PAUL HANSON: OK.

00:09:34.440 --> 00:09:35.290
NICK: Cool.

00:09:35.290 --> 00:09:36.380
Any more live questions?

00:09:36.380 --> 00:09:39.600
Or are we going to take a dive
into the Moderator queue?

00:09:42.250 --> 00:09:44.470
SPARKY RHODE: Since you brought
it up before, maybe

00:09:44.470 --> 00:09:47.790
you would like to take a minute
to tell us what you did

00:09:47.790 --> 00:09:48.340
last weekend.

00:09:48.340 --> 00:09:51.070
And what is that thing on
the wall behind you?

00:09:51.070 --> 00:09:51.320
NICK: Yeah.

00:09:51.320 --> 00:09:53.540
Absolutely.

00:09:53.540 --> 00:09:57.280
I was visiting friends in Berlin
this weekend who were

00:09:57.280 --> 00:09:59.220
holding a DevFest event.

00:09:59.220 --> 00:10:02.250
A really nice little event
which was a DevFest.

00:10:02.250 --> 00:10:05.960
Lots of talks about Google
technologies coupled with an

00:10:05.960 --> 00:10:07.480
Android V Hack event as well.

00:10:07.480 --> 00:10:10.420
So this is celebrating Android's
fifth birthday.

00:10:10.420 --> 00:10:14.300
There's a bunch of Hackathons
going on culminating in a

00:10:14.300 --> 00:10:18.480
final Hackathon in London
after Droidcon.

00:10:18.480 --> 00:10:21.500
And one of the cool extra
things around Android's

00:10:21.500 --> 00:10:24.760
birthday is, Marie Schweiz,
the awesome

00:10:24.760 --> 00:10:27.120
designer, has painted--

00:10:27.120 --> 00:10:29.790
you might be able to make
out over my shoulder--

00:10:29.790 --> 00:10:32.960
a game board-- a Snakes and
Ladders style game where you

00:10:32.960 --> 00:10:34.700
move around from
start to end--

00:10:34.700 --> 00:10:36.010
depicting the life of Android.

00:10:36.010 --> 00:10:39.610
So you've got Cupcakes and
Gingerbread men and Eclairs

00:10:39.610 --> 00:10:40.510
and all this good
stuff in there.

00:10:40.510 --> 00:10:44.930
So you can move around and slide
back down the Honeycomb

00:10:44.930 --> 00:10:45.720
trail and so on.

00:10:45.720 --> 00:10:46.960
It's beautiful.

00:10:46.960 --> 00:10:49.720
I know she's trying
to get this turned

00:10:49.720 --> 00:10:51.120
into a game, right?

00:10:51.120 --> 00:10:51.840
MATT: Yep.

00:10:51.840 --> 00:10:55.420
NICK: So if you go to
github.com/c-base--

00:10:55.420 --> 00:10:59.530
C-B-A-S-E, or maybe C hyphen
B-A-S-E, I'm not sure--

00:10:59.530 --> 00:11:02.990
there's an open source project
where they're, I think

00:11:02.990 --> 00:11:05.950
AndEngine to turn this into a
playable game on your tablet

00:11:05.950 --> 00:11:08.950
so you can have people
playing this game.

00:11:08.950 --> 00:11:12.440
So if you have any spare time or
you're going to a Hackathon

00:11:12.440 --> 00:11:14.840
and don't know what hack to work
on, then perhaps you can

00:11:14.840 --> 00:11:15.240
contribute.

00:11:15.240 --> 00:11:16.400
That would be an
awesome present

00:11:16.400 --> 00:11:17.650
to the Android community.

00:11:22.570 --> 00:11:24.970
MATT: It goes to all the
platforms, which will be

00:11:24.970 --> 00:11:27.180
interesting.

00:11:27.180 --> 00:11:30.540
SPARKY RHODE: It is
github.com/c-base.

00:11:30.540 --> 00:11:32.320
NICK: Cool.

00:11:32.320 --> 00:11:33.640
And it's called what,
birthday?

00:11:33.640 --> 00:11:34.070
Fifth Android birthday?

00:11:34.070 --> 00:11:35.285
Something--

00:11:35.285 --> 00:11:36.710
SPARKY RHODE: Haven't
got that far yet.

00:11:36.710 --> 00:11:40.380
MATT: I think it's like "Happy
fifth birthday."

00:11:40.380 --> 00:11:44.370
NICK: But Yeah, I'm sure
all patches welcome.

00:11:44.370 --> 00:11:46.780
MATT: I think Marie just
wants to see that

00:11:46.780 --> 00:11:48.030
app boy go out really.

00:11:50.760 --> 00:11:52.680
But yeah, if you need assets,
I think if you ping her,

00:11:52.680 --> 00:11:55.975
you'll probably get response
pretty quick.

00:11:55.975 --> 00:11:59.100
Yeah, it's looking good.

00:11:59.100 --> 00:12:00.780
SPARKY RHODE: Well, thanks
for that update.

00:12:00.780 --> 00:12:03.050
Should we take a Moderator
question then?

00:12:03.050 --> 00:12:04.356
NICK: Let's do it.

00:12:04.356 --> 00:12:06.325
Someone posted the link.

00:12:06.325 --> 00:12:07.575
Github.com/c-bas
e/happy-fifth-birthday-android.

00:12:12.030 --> 00:12:14.700
SPARKY RHODE: How nice.

00:12:14.700 --> 00:12:16.060
NICK: Go for it, Sparky.

00:12:16.060 --> 00:12:16.420
SPARKY RHODE: OK.

00:12:16.420 --> 00:12:20.305
So first unanswered question
on the Moderator--

00:12:20.305 --> 00:12:22.690
activity hosting multiple
fragments.

00:12:22.690 --> 00:12:25.010
Each fragment uses data
from the same

00:12:25.010 --> 00:12:26.530
table of a local database.

00:12:26.530 --> 00:12:29.105
Would it be better to load table
data into a singleton

00:12:29.105 --> 00:12:32.650
POJO in activity rather than
loaders in each fragment?

00:12:32.650 --> 00:12:37.090
How can activity broadcast
fragments on load complete?

00:12:37.090 --> 00:12:38.000
This is Martin S.

00:12:38.000 --> 00:12:41.820
He goes on to say, I know how
to use interface methods to

00:12:41.820 --> 00:12:43.610
access data in activity
from the fragment.

00:12:43.610 --> 00:12:46.070
I just don't know how the
activity can tell the fragment

00:12:46.070 --> 00:12:48.510
it's loaded the data so that
the fragment can hide the

00:12:48.510 --> 00:12:51.270
indeterminate progress
and paint the data.

00:12:51.270 --> 00:12:53.880
Maybe loaders not that
much of a problem.

00:12:53.880 --> 00:12:56.100
When each fragment needs the
data from web service, then it

00:12:56.100 --> 00:12:57.390
makes sense for the
activity to do a

00:12:57.390 --> 00:12:59.250
single web service call.

00:12:59.250 --> 00:13:02.810
So this sounds like a familiar
design pattern to me.

00:13:02.810 --> 00:13:04.900
You've got a data store.

00:13:04.900 --> 00:13:08.110
You want to show it in possibly
multiple places, each

00:13:08.110 --> 00:13:09.200
in a fragment.

00:13:09.200 --> 00:13:13.920
And you've got this very long,
slow, method of getting the

00:13:13.920 --> 00:13:15.910
data from the web, which
could take an

00:13:15.910 --> 00:13:17.210
indeterminately long time.

00:13:17.210 --> 00:13:19.310
It could take seconds or even
minutes to fetch the data.

00:13:21.940 --> 00:13:26.260
This follows, I think, in the
pattern of like the RSS reader

00:13:26.260 --> 00:13:28.320
app that I wrote earlier
this year.

00:13:28.320 --> 00:13:31.510
And what I did to solve the
problem in that case was I

00:13:31.510 --> 00:13:35.080
used a SQL database to host
the data locally.

00:13:35.080 --> 00:13:38.660
I used a content provider to
publish it and then loaders so

00:13:38.660 --> 00:13:41.380
that the loaders and the content
provider worked out

00:13:41.380 --> 00:13:44.240
between themselves when the data
needed to be refreshed.

00:13:44.240 --> 00:13:47.160
In that case, my fragments
really didn't have

00:13:47.160 --> 00:13:48.210
to do a whole lot.

00:13:48.210 --> 00:13:53.970
Now it is true that I did not
put any code into my detail

00:13:53.970 --> 00:13:57.790
fragment to look for a change
in the data, because I was

00:13:57.790 --> 00:13:59.530
expecting the data to
be quite static.

00:13:59.530 --> 00:14:02.490
But the list view definitely
updated dynamically as the

00:14:02.490 --> 00:14:05.440
database changed.

00:14:05.440 --> 00:14:07.370
I did not do an indeterminate
progress.

00:14:07.370 --> 00:14:09.640
Instead, basically, I just
fetched everything, more or

00:14:09.640 --> 00:14:13.005
less, invisibly and just let the
new data magically appear

00:14:13.005 --> 00:14:15.150
in the list view.

00:14:15.150 --> 00:14:17.250
What I did for fetching the data
was not to put it in the

00:14:17.250 --> 00:14:20.530
activity, but I put it
in an IntentService.

00:14:20.530 --> 00:14:27.520
And then either a timer kicked
off by alarm manager or a user

00:14:27.520 --> 00:14:30.750
interface button on the action
bar would cause an intent to

00:14:30.750 --> 00:14:33.630
be sent to the IntentService
to go out to the web data

00:14:33.630 --> 00:14:36.500
store and fetch new
data for me.

00:14:36.500 --> 00:14:41.200
So my answer then was
IntentService for the web,

00:14:41.200 --> 00:14:43.940
kicked off by intents from the
activity or from alarm

00:14:43.940 --> 00:14:50.190
manager, SQL database to hold
the data, content provider to

00:14:50.190 --> 00:14:54.070
front it, loader to keep it
fresh, and then one fragment

00:14:54.070 --> 00:14:56.180
per to actually show the data.

00:15:00.150 --> 00:15:02.540
MATT: Sounds good.

00:15:02.540 --> 00:15:04.560
SPARKY RHODE: Rather a long
winded explanation, but I

00:15:04.560 --> 00:15:05.965
don't see a lot of other
people vying for

00:15:05.965 --> 00:15:08.900
our attention here.

00:15:08.900 --> 00:15:10.630
NICK: Just speaking about the
general question he said about

00:15:10.630 --> 00:15:14.110
how would you have the activity
talk to a fragment.

00:15:14.110 --> 00:15:17.450
He says he understands that
you can use an interface

00:15:17.450 --> 00:15:20.050
method that the activity
implements so that when the

00:15:20.050 --> 00:15:22.610
fragment gets the unattached
message, it holds the

00:15:22.610 --> 00:15:25.200
reference and casts the activity
to the interface.

00:15:25.200 --> 00:15:26.995
So he understands
talking from the

00:15:26.995 --> 00:15:28.020
fragment up to the activity.

00:15:28.020 --> 00:15:31.660
But quite simply, the answer's
really simple really.

00:15:31.660 --> 00:15:34.910
I think it's fine for the
activity to know concrete

00:15:34.910 --> 00:15:36.520
details about the fragment.

00:15:36.520 --> 00:15:38.600
It's just not OK for the
fragment to know concrete

00:15:38.600 --> 00:15:40.520
details about the activity
as it were.

00:15:40.520 --> 00:15:42.550
Because that destroys idea of
me having to lay out the

00:15:42.550 --> 00:15:43.690
fragments differently.

00:15:43.690 --> 00:15:48.420
But because activities own the
fragments within them, it's OK

00:15:48.420 --> 00:15:50.480
to directly implement
call method.

00:15:50.480 --> 00:15:51.780
So you can just--

00:15:51.780 --> 00:15:54.270
when you create the fragment
and add it to the page in a

00:15:54.270 --> 00:15:56.790
transaction, you just hold a
reference set fragment and

00:15:56.790 --> 00:15:58.940
just invoke methods upon it.

00:15:58.940 --> 00:16:02.390
So if you did decide to try
the loader held by the

00:16:02.390 --> 00:16:07.280
activity rather than a loader
per fragment, you could just

00:16:07.280 --> 00:16:09.180
invoke methods directly on
the fragment itself.

00:16:12.060 --> 00:16:13.310
SPARKY RHODE: Sounds
good to me.

00:16:15.960 --> 00:16:18.940
Shall we move on to the next
Moderator question?

00:16:18.940 --> 00:16:23.110
The next one is this question
from Andrew Kelly about the

00:16:23.110 --> 00:16:23.880
action bar.

00:16:23.880 --> 00:16:26.510
I think we've heard
that one already.

00:16:26.510 --> 00:16:27.740
OK.

00:16:27.740 --> 00:16:30.910
Here's kind of a tempting one.

00:16:30.910 --> 00:16:35.490
HTC just announced a five inch
phone with a 1920 by 1080

00:16:35.490 --> 00:16:37.010
pixel resolution screen--

00:16:37.010 --> 00:16:42.470
so 1080 P. This leads to
440 dots per inch.

00:16:42.470 --> 00:16:43.760
How can this work?

00:16:43.760 --> 00:16:47.370
And how can developers provide
drawables for this resolution?

00:16:47.370 --> 00:16:51.790
XHDP is 320 and this
is 120 DPI more.

00:16:51.790 --> 00:16:54.140
How big is the screen size
in DIPs for this phone?

00:16:56.700 --> 00:17:02.280
So my first response to this
question was, oh my God.

00:17:02.280 --> 00:17:05.599
I want this phone.

00:17:05.599 --> 00:17:09.284
I provided a link
to it in the--

00:17:09.284 --> 00:17:12.280
I provided a link to HTC's
product description.

00:17:12.280 --> 00:17:15.950
And it is a very, very nice
looking phone, I have to say.

00:17:15.950 --> 00:17:17.040
NICK: I'm opening that link.

00:17:17.040 --> 00:17:21.840
[LAUGHTER]

00:17:21.840 --> 00:17:23.700
Oh, hello.

00:17:23.700 --> 00:17:23.960
SPARKY RHODE: Right.

00:17:23.960 --> 00:17:29.540
So first off, you know that DIPs
basically translate to

00:17:29.540 --> 00:17:30.790
real world units.

00:17:30.790 --> 00:17:34.870
It's sort of a shorthand for
approximately inches or some

00:17:34.870 --> 00:17:40.430
fraction thereof and that 160
dots per inch is the natural

00:17:40.430 --> 00:17:41.770
standard for a DIP.

00:17:41.770 --> 00:17:47.400
So at 160 DPI, you're
one DIP per pixel.

00:17:47.400 --> 00:17:50.520
Generally speaking, phone
devices fall into the normal

00:17:50.520 --> 00:17:53.290
sized bucket.

00:17:53.290 --> 00:17:56.050
There is a bit of overlap in
our bucket sizes so that a

00:17:56.050 --> 00:18:01.740
large phone and a small tablet
could be either normal sized

00:18:01.740 --> 00:18:02.680
or large sized.

00:18:02.680 --> 00:18:04.955
Generally speaking, you want
your small tablets to be in

00:18:04.955 --> 00:18:07.300
the large sized bucket, and you
want your big phones to

00:18:07.300 --> 00:18:09.260
still be in the normal sized
bucket, I think.

00:18:09.260 --> 00:18:14.980
So I don't have any direct
information on this one at all

00:18:14.980 --> 00:18:18.050
other than just looking at
HTC's press release.

00:18:18.050 --> 00:18:22.090
But I would guess that
at this pixel count--

00:18:22.090 --> 00:18:23.820
this 1920 by 1080--

00:18:23.820 --> 00:18:28.300
you're looking at approximately
speaking 360

00:18:28.300 --> 00:18:30.630
DIPs by 640 DIPs.

00:18:30.630 --> 00:18:35.280
And it'll probably fall into
the XXHDPI density bucket,

00:18:35.280 --> 00:18:39.590
which is something that was
added to the Android SDK for

00:18:39.590 --> 00:18:41.670
SDK Level 16.

00:18:41.670 --> 00:18:41.920
NICK: Wait.

00:18:41.920 --> 00:18:42.680
Hang on.

00:18:42.680 --> 00:18:46.020
But XX is what, for 480 DPI?

00:18:46.020 --> 00:18:47.270
SPARKY RHODE: Yes.

00:18:49.425 --> 00:18:52.070
XXHDPI is 480 dots per inch.

00:18:52.070 --> 00:18:54.850
NICK: So we probably wouldn't
get the XX drawables, because

00:18:54.850 --> 00:18:56.170
it's not high enough.

00:18:56.170 --> 00:18:59.830
The 440 would fall back to
XHDPI drawables, right?

00:18:59.830 --> 00:19:00.930
SPARKY RHODE: These things
are always a little

00:19:00.930 --> 00:19:01.960
bit flexible, right?

00:19:01.960 --> 00:19:07.780
I mean it's not precisely, but
it's the closest density

00:19:07.780 --> 00:19:11.010
bucket that matches the actual
density of the screen.

00:19:11.010 --> 00:19:15.670
I think that 480 is a lot closer
to 440 than is 320,

00:19:15.670 --> 00:19:17.475
which is the next
available size.

00:19:17.475 --> 00:19:18.725
NICK: Huh.

00:19:20.793 --> 00:19:21.196
OK.

00:19:21.196 --> 00:19:25.820
SPARKY RHODE: So that's
kind of my take on it.

00:19:25.820 --> 00:19:27.500
NICK: I thought it would
never round up.

00:19:27.500 --> 00:19:30.020
I thought it would only
ever round down.

00:19:30.020 --> 00:19:31.170
MATT: I'm with Sparky
on this one.

00:19:31.170 --> 00:19:34.240
I think the documentation always
suggested it's roughly

00:19:34.240 --> 00:19:35.390
around that.

00:19:35.390 --> 00:19:36.020
NICK: OK.

00:19:36.020 --> 00:19:37.950
I'm going to have to go and look
at their source code to

00:19:37.950 --> 00:19:39.580
display manager.

00:19:39.580 --> 00:19:39.990
SPARKY RHODE: Yes.

00:19:39.990 --> 00:19:40.770
Yes.

00:19:40.770 --> 00:19:42.290
Definitely.

00:19:42.290 --> 00:19:44.470
Another thing that I
noted is that it's

00:19:44.470 --> 00:19:48.820
approximately twice--

00:19:48.820 --> 00:19:51.440
so at 440 DPI, it's
approximately twice the

00:19:51.440 --> 00:19:53.760
density of TV DPI.

00:19:53.760 --> 00:19:56.850
So if you have TV DPI assets,
they could just about be

00:19:56.850 --> 00:19:58.710
doubled, and it would
just about fit.

00:19:58.710 --> 00:20:00.950
NICK: The idea of scaling
any asset up scares the

00:20:00.950 --> 00:20:03.350
bejesus out of me.

00:20:03.350 --> 00:20:05.700
SPARKY RHODE: Yes.

00:20:05.700 --> 00:20:10.230
But that said, I mean if you
don't provide assets at the

00:20:10.230 --> 00:20:10.920
right density--

00:20:10.920 --> 00:20:11.660
NICK: It only scale down.

00:20:11.660 --> 00:20:12.230
It would never scale up.

00:20:12.230 --> 00:20:13.110
That's what I'm thinking of.

00:20:13.110 --> 00:20:13.700
Yeah, you're right.

00:20:13.700 --> 00:20:17.890
It would take the 480 asset
and scale them down.

00:20:17.890 --> 00:20:20.230
SPARKY RHODE: Right.

00:20:20.230 --> 00:20:25.820
So you write an app that's
targeted at say medium DPI and

00:20:25.820 --> 00:20:30.250
you run it on your Galaxy Nexus,
it's going to have to

00:20:30.250 --> 00:20:31.985
take that low res asset
and display it

00:20:31.985 --> 00:20:32.810
on a high res display.

00:20:32.810 --> 00:20:35.880
So it's going to have
to do some doubling.

00:20:35.880 --> 00:20:41.980
And my general take on this is,
if I'm going to have to be

00:20:41.980 --> 00:20:45.020
scaling up an icon or something,
I would rather

00:20:45.020 --> 00:20:47.940
double it than multiply by 1.5,
because I think you're

00:20:47.940 --> 00:20:50.140
going to have fewer banding
and artifacts

00:20:50.140 --> 00:20:51.390
and things like that.

00:20:53.570 --> 00:20:55.430
NICK: The other thing that's
worth noting as well is that

00:20:55.430 --> 00:21:00.000
the density buckets are
basically just aliases.

00:21:00.000 --> 00:21:02.940
So I think at runtime AAPT
will just turn them into

00:21:02.940 --> 00:21:03.660
numbers, right?

00:21:03.660 --> 00:21:07.650
So when you have drawable dash
HDPI, it actually turns that

00:21:07.650 --> 00:21:10.680
at runtime into drawable
dash 240 DPI.

00:21:10.680 --> 00:21:13.280
So you can actually provide
numeric qualifiers.

00:21:13.280 --> 00:21:17.350
So if supporting a device with
440 DPI is super important to

00:21:17.350 --> 00:21:20.702
you, and your load DryIcon has
to look amazingly crisp on

00:21:20.702 --> 00:21:25.580
that device, create a version
at the native resolution and

00:21:25.580 --> 00:21:31.598
put it in the drawable
dash 440 DPI folder.

00:21:31.598 --> 00:21:32.450
MATT: I did not know that.

00:21:32.450 --> 00:21:33.130
Nice.

00:21:33.130 --> 00:21:37.076
SPARKY RHODE: That is a
brilliant suggestion.

00:21:37.076 --> 00:21:39.000
NICK: Why thank you.

00:21:39.000 --> 00:21:43.890
But generally I would say you
only want to be scaling down.

00:21:43.890 --> 00:21:48.210
So if you know what you're
doing, you can get pretty good

00:21:48.210 --> 00:21:52.430
effects by just providing, say,
XHDPI graphics and have

00:21:52.430 --> 00:21:59.180
that scaled down to HDPI and
MDPI devices by sticking to

00:21:59.180 --> 00:22:03.420
like a 4 pixel major grid and
not having very small

00:22:03.420 --> 00:22:06.050
elements, so that they
can be halved or

00:22:06.050 --> 00:22:08.040
quartered relatively smoothly.

00:22:08.040 --> 00:22:09.810
It can help you get
a lot of the way.

00:22:09.810 --> 00:22:13.770
But there's no substitute for
actually producing the right

00:22:13.770 --> 00:22:16.230
assets in different densities
and eye-balling them and

00:22:16.230 --> 00:22:18.850
checking that they're correct,
and especially being careful

00:22:18.850 --> 00:22:20.160
on 9-patches.

00:22:20.160 --> 00:22:23.080
Because if you provide a 9-patch
in just one high

00:22:23.080 --> 00:22:26.696
resolution and it gets scaled
down by the system to run on

00:22:26.696 --> 00:22:27.520
say an [? LDVI ?]

00:22:27.520 --> 00:22:29.350
device, you've got to
be real careful with

00:22:29.350 --> 00:22:30.340
your stretchable regions.

00:22:30.340 --> 00:22:34.180
If you only use one or two
pixels for your stretchable

00:22:34.180 --> 00:22:37.180
region, that might get down
sampled and rounded down to

00:22:37.180 --> 00:22:38.440
zero pixels, for example.

00:22:38.440 --> 00:22:40.280
And all of a sudden, your
9-patch doesn't stretch.

00:22:40.280 --> 00:22:42.380
So you want to make sure
your stretchable

00:22:42.380 --> 00:22:44.070
areas are two or four--

00:22:44.070 --> 00:22:46.800
I think four pixels would be
the safest, pretty much.

00:22:46.800 --> 00:22:48.330
That's [? steep ?], but there's
no substitute for

00:22:48.330 --> 00:22:51.320
producing proper densities,
especially for critical assets

00:22:51.320 --> 00:22:53.100
like load DryIcons.

00:22:53.100 --> 00:22:53.540
SPARKY RHODE: Right.

00:22:53.540 --> 00:22:58.300
And it's been my general
observation that photographs

00:22:58.300 --> 00:23:01.230
scale up and down through
densities really, really well.

00:23:01.230 --> 00:23:04.380
But finely hand drawn line art,
like what you typically

00:23:04.380 --> 00:23:07.770
get in icons, doesn't
scale so well.

00:23:07.770 --> 00:23:12.510
So for these little visual
assets like icons and widgets,

00:23:12.510 --> 00:23:16.100
just go ahead and make them in
the right pixel sizes in the

00:23:16.100 --> 00:23:18.850
first place.

00:23:18.850 --> 00:23:23.370
Then of course, now that we've
potentially got-- what, five?

00:23:23.370 --> 00:23:24.680
Wait, let's see.

00:23:24.680 --> 00:23:29.460
Low, medium, high, extra high,
TV and double X. So we have

00:23:29.460 --> 00:23:33.743
six potential density buckets.

00:23:33.743 --> 00:23:36.055
Can't we just have scalable
vector graphics please?

00:23:39.480 --> 00:23:39.790
No.

00:23:39.790 --> 00:23:42.180
I've actually put
this question to

00:23:42.180 --> 00:23:43.150
the framework engineers.

00:23:43.150 --> 00:23:47.030
Why can't we just have SVG as
a first class drawable?

00:23:47.030 --> 00:23:50.660
And it's just not that simple.

00:23:50.660 --> 00:23:53.950
It would be really nice, but
it's not that simple.

00:23:53.950 --> 00:23:55.690
NICK: There's a rudimentary spot
in that library, right?

00:23:55.690 --> 00:24:01.830
The Android SVG project, which
I think was created for the

00:24:01.830 --> 00:24:02.940
Androidify application.

00:24:02.940 --> 00:24:05.680
I think those guys created
it and open sourced it,

00:24:05.680 --> 00:24:06.740
which is very cool.

00:24:06.740 --> 00:24:10.773
So that actually turns an SVG
into a native drawable, right?

00:24:10.773 --> 00:24:11.520
SPARKY RHODE: Right.

00:24:11.520 --> 00:24:15.270
And if I understand correctly,
that implements only part of

00:24:15.270 --> 00:24:16.690
the SVG spec.

00:24:16.690 --> 00:24:18.970
But if it's the right
part, I'll take it.

00:24:23.920 --> 00:24:24.192
NICK: Wow.

00:24:24.192 --> 00:24:27.590
I think we thoroughly answered
that question.

00:24:27.590 --> 00:24:28.840
SPARKY RHODE: I hope so.

00:24:32.440 --> 00:24:36.370
Jan Sosen, Brazil, who was in
our Hangout last week if I

00:24:36.370 --> 00:24:40.090
recall, said, how can I launch
turn by turn navigation from

00:24:40.090 --> 00:24:43.440
my application using intents?

00:24:43.440 --> 00:24:44.860
It can be done.

00:24:44.860 --> 00:24:49.460
It's not a publicly documented
API, especially with regards

00:24:49.460 --> 00:24:50.760
to Google Maps Navigation.

00:24:50.760 --> 00:24:52.380
That's definitely not public.

00:24:52.380 --> 00:24:55.150
So we can't really
talk about it.

00:24:55.150 --> 00:24:58.340
But we can at least observe that
other people say it can

00:24:58.340 --> 00:25:00.510
be done, and stack overflow
is your friend.

00:25:04.070 --> 00:25:05.884
NICK: Very, very nicely
done, Sparky.

00:25:05.884 --> 00:25:08.990
[LAUGHTER]

00:25:08.990 --> 00:25:10.240
SPARKY RHODE: Weasel, weasel.

00:25:13.540 --> 00:25:14.090
What can I say?

00:25:14.090 --> 00:25:15.960
I used to be a weasel keeper.

00:25:15.960 --> 00:25:19.490
Weasel words are my specialty.

00:25:19.490 --> 00:25:24.270
NICK: The other thing you can
do is launch to Maps, to the

00:25:24.270 --> 00:25:26.770
destination where you are trying
to navigate to, because

00:25:26.770 --> 00:25:28.070
that is a documented API.

00:25:28.070 --> 00:25:30.290
That is on our developer site.

00:25:30.290 --> 00:25:32.800
And then let the user hit the
Navigate to this Place button

00:25:32.800 --> 00:25:36.540
themselves as an alternative.

00:25:36.540 --> 00:25:38.850
SPARKY RHODE: I think that's
a very nice alternative.

00:25:38.850 --> 00:25:41.420
Anything that has documented
API as part of

00:25:41.420 --> 00:25:43.520
it is a good answer.

00:25:43.520 --> 00:25:44.870
NICK: I love stuff which
links me out to Maps.

00:25:44.870 --> 00:25:46.500
Anything talking about places.

00:25:46.500 --> 00:25:48.370
I really love stuff that
links me out to--

00:25:48.370 --> 00:25:50.920
well not just Maps, but using
the Geo intent, because then

00:25:50.920 --> 00:25:53.110
other applications can
converge on that.

00:25:53.110 --> 00:25:55.490
Like Google Earth, for example,
also offers to

00:25:55.490 --> 00:25:57.700
satisfy those similar intents.

00:25:57.700 --> 00:26:00.740
But it just means that every
time Maps gets better, then

00:26:00.740 --> 00:26:01.800
your app gets better
kind of thing.

00:26:01.800 --> 00:26:04.900
I love it.

00:26:04.900 --> 00:26:07.780
SPARKY RHODE: That's
pretty cool.

00:26:07.780 --> 00:26:09.140
Let's see.

00:26:09.140 --> 00:26:13.900
Next question in the Moderator
is Andrew's question about the

00:26:13.900 --> 00:26:15.550
animated launcher icon, which
we covered at the

00:26:15.550 --> 00:26:16.800
beginning of the show.

00:26:19.060 --> 00:26:23.300
MATT: There's an interesting
one in the Google+ stream.

00:26:23.300 --> 00:26:23.840
SPARKY RHODE: Oh.

00:26:23.840 --> 00:26:25.590
Please, do tell.

00:26:25.590 --> 00:26:28.510
MATT: I have a question
regarding Nexus 7 from Faren

00:26:28.510 --> 00:26:29.760
Garigerole.

00:26:31.410 --> 00:26:32.440
Sorry if I pronounced
that wrong,

00:26:32.440 --> 00:26:33.970
because I probably have.

00:26:33.970 --> 00:26:37.090
My objective is that from the
native contacts, when I click

00:26:37.090 --> 00:26:40.990
the call button on a contact
with the telephone number, my

00:26:40.990 --> 00:26:43.010
application should pop
up as an option for

00:26:43.010 --> 00:26:44.220
processing the call.

00:26:44.220 --> 00:26:46.510
This is working on all phones
except the Nexus 7, which

00:26:46.510 --> 00:26:49.250
doesn't receive the event.

00:26:49.250 --> 00:26:54.040
Is there something that I need
to do special for Nexus 7?

00:26:54.040 --> 00:26:55.980
NICK: Now that's an
interesting one.

00:26:55.980 --> 00:26:58.610
SPARKY RHODE: This would
be a SIT phone I guess.

00:26:58.610 --> 00:26:59.860
NICK: Yes.

00:27:01.850 --> 00:27:03.620
MATT: Nick's trying it
out as we speak.

00:27:03.620 --> 00:27:04.870
NICK: Skype's used to do it.

00:27:07.365 --> 00:27:09.736
MATT: So they've included the
intent fields that they've got

00:27:09.736 --> 00:27:13.980
and they're catching call
privileged, and they're trying

00:27:13.980 --> 00:27:18.220
to catch the data scheme tel.

00:27:18.220 --> 00:27:20.400
NICK: So it seems
to be possible.

00:27:20.400 --> 00:27:23.240
I just tried it on my device,
and Skype popped up and

00:27:23.240 --> 00:27:25.630
offered to execute
the call for me.

00:27:25.630 --> 00:27:29.960
So it makes me think that
there's another end filter

00:27:29.960 --> 00:27:31.990
you're not handling.

00:27:31.990 --> 00:27:34.660
MATT: What I would recommend
doing is there's an Nexus

00:27:34.660 --> 00:27:37.170
application called Sipdroid.

00:27:37.170 --> 00:27:38.830
Try it out on the Nexus 7.

00:27:38.830 --> 00:27:40.070
See if that catches it.

00:27:40.070 --> 00:27:41.630
If it does, then perhaps
you can see what

00:27:41.630 --> 00:27:43.280
filters they're using.

00:27:43.280 --> 00:27:45.870
That's what I used when I'd see
something similar to this,

00:27:45.870 --> 00:27:48.740
because there are quite
a few that they use.

00:27:48.740 --> 00:27:51.010
So I can't remember
which ones.

00:27:51.010 --> 00:27:52.820
But yeah, this will
make it specific.

00:27:52.820 --> 00:27:55.850
NICK: Although I haven't
actually used kind of ugly app

00:27:55.850 --> 00:27:58.850
on a device called Intent Hunt
or Intent something where you

00:27:58.850 --> 00:28:01.970
could install it on you device,
and it will tell you

00:28:01.970 --> 00:28:04.240
which intent filters your
applications you have

00:28:04.240 --> 00:28:06.260
installed satisfy.

00:28:06.260 --> 00:28:07.100
So you might be able to
use something like

00:28:07.100 --> 00:28:08.790
this to look at Skype.

00:28:08.790 --> 00:28:10.460
Because essentially it's
their public API.

00:28:10.460 --> 00:28:13.620
So I don't know off hand, but
there's some pointers that

00:28:13.620 --> 00:28:14.870
might get you going.

00:28:17.020 --> 00:28:18.950
SPARKY RHODE: That's
a good idea.

00:28:18.950 --> 00:28:22.275
We've just been joined in
the Hangout by Richard.

00:28:25.690 --> 00:28:27.170
I can't read your last
name, I'm sorry.

00:28:27.170 --> 00:28:29.320
Richard, welcome
to the Hangout.

00:28:29.320 --> 00:28:30.890
Do you have a question about
Android development?

00:28:30.890 --> 00:28:33.210
RICHARD: Can you hear me?

00:28:33.210 --> 00:28:33.960
SPARKY RHODE: We can hear you.

00:28:33.960 --> 00:28:34.720
RICHARD: Perfect.

00:28:34.720 --> 00:28:37.080
First, I'm from Zambia.

00:28:37.080 --> 00:28:38.310
It's an African country.

00:28:38.310 --> 00:28:42.480
And I just got into Android.

00:28:42.480 --> 00:28:45.600
I like the way it's so
structured, because these days

00:28:45.600 --> 00:28:47.880
we have software which is
not really structured.

00:28:47.880 --> 00:28:54.150
You just have people building it
with no sense of structure

00:28:54.150 --> 00:28:55.110
that's there.

00:28:55.110 --> 00:28:56.850
And I like the way Android
does it, because when

00:28:56.850 --> 00:29:01.070
somebody's developing in
Android, they are forced to

00:29:01.070 --> 00:29:01.940
have structure.

00:29:01.940 --> 00:29:04.515
So that's what I wanted
to say for now.

00:29:07.830 --> 00:29:10.110
SPARKY RHODE: Just out of
curiosity, would you like to

00:29:10.110 --> 00:29:13.170
share with us what you're
working on?

00:29:13.170 --> 00:29:17.880
RICHARD: I am working on a
social networking application

00:29:17.880 --> 00:29:26.120
using NFC, because I like the
idea of I could be able to

00:29:26.120 --> 00:29:30.080
share something on your wall
just by touching your phone.

00:29:30.080 --> 00:29:34.674
I would like to try
that out actually.

00:29:34.674 --> 00:29:35.520
NICK: Pretty cool.

00:29:35.520 --> 00:29:36.960
SPARKY RHODE: That
is a cool idea.

00:29:36.960 --> 00:29:40.750
Are using the Android
Beam API for that?

00:29:40.750 --> 00:29:42.830
RICHARD: Yes.

00:29:42.830 --> 00:29:46.120
I am going to use Android
Beam API.

00:29:46.120 --> 00:29:50.830
But I'm just mapping it out to
get the requirements first.

00:29:50.830 --> 00:29:54.500
Then I'll dive deep into it.

00:29:54.500 --> 00:29:56.540
SPARKY RHODE: Well let us
introduce you to Paul Hanson

00:29:56.540 --> 00:29:59.590
who is right next to you in the
icon bar at the bottom of

00:29:59.590 --> 00:30:03.500
my screen who is an NFC
fellow traveler.

00:30:03.500 --> 00:30:04.240
PAUL HANSON: Hello.

00:30:04.240 --> 00:30:05.100
RICHARD: Hello.

00:30:05.100 --> 00:30:06.270
How's it going?

00:30:06.270 --> 00:30:08.560
PAUL HANSON: Good, thank you.

00:30:08.560 --> 00:30:12.260
It sounds quite interesting,
your project, with the NFC.

00:30:12.260 --> 00:30:17.300
Have you actually implemented
much NFC before?

00:30:17.300 --> 00:30:18.840
RICHARD: No, actually.

00:30:18.840 --> 00:30:20.040
It will be my first
experience.

00:30:20.040 --> 00:30:21.530
It will be also like a
learning experience.

00:30:24.450 --> 00:30:26.890
PAUL HANSON: Did you hear
me OK for that, sorry.

00:30:26.890 --> 00:30:29.406
RICHARD: Yes I did, actually.

00:30:29.406 --> 00:30:32.750
PAUL HANSON: Yes, I'm still
learning about the limitations

00:30:32.750 --> 00:30:35.065
and restrictions of how
far we can go with

00:30:35.065 --> 00:30:37.050
it for future projects.

00:30:37.050 --> 00:30:40.750
So it's interesting your
angle on it as well.

00:30:40.750 --> 00:30:41.450
RICHARD: Oh yes, actually.

00:30:41.450 --> 00:30:44.042
PAUL HANSON: I was listening
in before, sorry.

00:30:44.042 --> 00:30:45.910
RICHARD: No, that's OK.

00:30:45.910 --> 00:30:49.660
I feel like it's a growing
technology, because I think

00:30:49.660 --> 00:30:52.180
it's going to be used in so many
places, especially with

00:30:52.180 --> 00:30:53.270
the Google Wallet.

00:30:53.270 --> 00:30:58.630
And the ideas that you can
come up with are just

00:30:58.630 --> 00:31:00.440
phenomenal.

00:31:00.440 --> 00:31:01.256
NICK: Yeah.

00:31:01.256 --> 00:31:05.220
I'm with you guys from
a UX point of view.

00:31:05.220 --> 00:31:07.760
I really love the way that
Android Beam is implemented

00:31:07.760 --> 00:31:09.970
and that there's no on-screen
affordance.

00:31:09.970 --> 00:31:12.700
You literally just touch and
then it will send whatever is

00:31:12.700 --> 00:31:13.390
in the foreground.

00:31:13.390 --> 00:31:16.370
I love that simplicity.

00:31:16.370 --> 00:31:19.510
Basically using such a close
location as a really strong

00:31:19.510 --> 00:31:23.400
signal that you don't have to
have lots of guides and

00:31:23.400 --> 00:31:25.420
buttons and things
to hinder it.

00:31:25.420 --> 00:31:28.900
That's one of the things I'm
really excited about.

00:31:28.900 --> 00:31:32.660
PAUL HANSON: I've actually been
asked about that element

00:31:32.660 --> 00:31:36.100
of the Beam where you have to
touch on the interface.

00:31:36.100 --> 00:31:39.250
I've been asked is there a way
of transferring via NFC

00:31:39.250 --> 00:31:40.070
without the touch.

00:31:40.070 --> 00:31:44.600
Obviously the Beam will force
you to make the person touch.

00:31:44.600 --> 00:31:47.580
But there are some circumstances
where you might

00:31:47.580 --> 00:31:51.070
want to do a back and forth
conversation, and you may not

00:31:51.070 --> 00:31:53.530
want to touch each time.

00:31:53.530 --> 00:31:55.820
But I think the Beam
forces each time.

00:31:55.820 --> 00:31:56.160
NICK: Yes.

00:31:56.160 --> 00:31:58.860
If you're using Beam, the Beam
is like a convenience API on

00:31:58.860 --> 00:32:00.700
top of NFC.

00:32:00.700 --> 00:32:02.940
So yeah, if you wanted
to use Beam, then the

00:32:02.940 --> 00:32:04.650
touch is part of that.

00:32:04.650 --> 00:32:07.510
But you can obviously build
that kind of transceiving

00:32:07.510 --> 00:32:11.530
behavior using the lower
level NFC tech.

00:32:11.530 --> 00:32:11.950
PAUL HANSON: Yes.

00:32:11.950 --> 00:32:13.820
That's what I was looking
at, because that was

00:32:13.820 --> 00:32:15.320
the only to do that.

00:32:15.320 --> 00:32:15.660
Yes.

00:32:15.660 --> 00:32:16.960
Thank you.

00:32:16.960 --> 00:32:18.210
NICK: No worries.

00:32:21.390 --> 00:32:22.130
PAUL HANSON: I've
got a question

00:32:22.130 --> 00:32:25.060
for Richard in Zambia.

00:32:25.060 --> 00:32:27.620
I just wondered how many phones
actually have the NFC

00:32:27.620 --> 00:32:30.620
chip in your country
at the moment?

00:32:30.620 --> 00:32:33.870
Or do you know what
the take up is?

00:32:33.870 --> 00:32:35.810
RICHARD: I am actually
doing school in

00:32:35.810 --> 00:32:38.220
Canada at the moment.

00:32:38.220 --> 00:32:40.690
So I wouldn't be too
sure about it.

00:32:40.690 --> 00:32:42.920
But I could find out.

00:32:42.920 --> 00:32:43.800
PAUL HANSON: OK.

00:32:43.800 --> 00:32:46.460
Well actually, in Canada,
what percentage--

00:32:46.460 --> 00:32:50.360
is the take up very high on the
phones with the NFC chips

00:32:50.360 --> 00:32:52.320
in at the moment, I guess?

00:32:52.320 --> 00:32:56.250
RICHARD: It should be pretty
high, because in the place

00:32:56.250 --> 00:32:58.490
that I'm living in, it's a small
town called Kamloops .

00:32:58.490 --> 00:33:01.920
It's like everybody wants to
have the newest phone.

00:33:01.920 --> 00:33:06.240
It's like almost everybody's
mesmerized by that Galaxy

00:33:06.240 --> 00:33:06.850
commercial.

00:33:06.850 --> 00:33:08.000
Like, oh my god, they're
touching phones.

00:33:08.000 --> 00:33:09.620
That is really, really cool.

00:33:09.620 --> 00:33:12.240
So I think a large percentage
should have that .

00:33:15.660 --> 00:33:17.476
NICK: Good news is, it seems to
be getting built into most

00:33:17.476 --> 00:33:19.200
of these systems on
a chip set up.

00:33:19.200 --> 00:33:21.810
So most phones these days, or
at least the high end ones

00:33:21.810 --> 00:33:24.840
seem to be coming with it.

00:33:24.840 --> 00:33:26.090
SPARKY RHODE: Yeah.

00:33:28.080 --> 00:33:30.880
I'm sort of going out on a limb
a little bit here, but I

00:33:30.880 --> 00:33:35.190
suspect a lot of it is just
a matter of economies of

00:33:35.190 --> 00:33:38.530
manufacture where you're going
to want to concentrate your

00:33:38.530 --> 00:33:41.240
analog electronics all into one
place, which means you're

00:33:41.240 --> 00:33:43.400
going to want to have all your
different radio processors on

00:33:43.400 --> 00:33:43.950
the same chip.

00:33:43.950 --> 00:33:46.020
And once you're doing that,
you've got your

00:33:46.020 --> 00:33:48.475
telephone-based band and your
Wi-Fi and your Bluetooth all

00:33:48.475 --> 00:33:49.980
on the same chip.

00:33:49.980 --> 00:33:52.120
Might as well throw in the NFC
too and just be done with it.

00:33:55.120 --> 00:33:55.780
MATT: The one thing that I
haven't spent much time

00:33:55.780 --> 00:33:59.620
playing around with is the
new NFC cards, which they

00:33:59.620 --> 00:34:00.010
announced a little while ago.

00:34:00.010 --> 00:34:01.630
I managed to grab
a small batch of

00:34:01.630 --> 00:34:03.172
those from those guys.

00:34:03.172 --> 00:34:04.770
And they were quite fun.

00:34:04.770 --> 00:34:07.410
Wandering around I think I got
Paul [INAUDIBLE] quite

00:34:07.410 --> 00:34:08.130
interested with the
[? Cake Droid. ?]

00:34:08.130 --> 00:34:10.960
I think he wanted
a set for them.

00:34:10.960 --> 00:34:12.840
But yeah, there seems to be a
lot of people playing around

00:34:12.840 --> 00:34:16.070
with NFC and seeing what
they can do with it.

00:34:16.070 --> 00:34:17.929
PAUL HANSON: Can you tell me
a bit about those cards?

00:34:17.929 --> 00:34:20.300
What are they exactly
called please?

00:34:20.300 --> 00:34:22.980
MATT: There's a company called
Moo, which is in the US as

00:34:22.980 --> 00:34:25.345
well as the UK.

00:34:25.345 --> 00:34:26.560
SPARKY RHODE: Which Moo
as in cow, right?

00:34:26.560 --> 00:34:27.485
Moooo.

00:34:27.485 --> 00:34:27.900
NICK: Yeah.

00:34:27.900 --> 00:34:28.639
Moo.com.

00:34:28.639 --> 00:34:30.230
Moo.

00:34:30.230 --> 00:34:32.560
MATT: And they do customized
business cards.

00:34:32.560 --> 00:34:35.080
The cool thing with them is that
you can print a different

00:34:35.080 --> 00:34:37.620
image on the front
of each card.

00:34:37.620 --> 00:34:39.739
They're playing around
with NFC.

00:34:39.739 --> 00:34:41.280
I don't think it's
released yet.

00:34:41.280 --> 00:34:42.510
NICK: I think it's on sale.

00:34:42.510 --> 00:34:42.790
MATT: Oh really.

00:34:42.790 --> 00:34:43.449
Cool.

00:34:43.449 --> 00:34:44.170
I wasn't sure if they've
released it.

00:34:44.170 --> 00:34:46.120
But yeah.

00:34:46.120 --> 00:34:47.145
Go check them out.

00:34:47.145 --> 00:34:49.139
They seem like a pretty
cool kind of product.

00:34:49.139 --> 00:34:50.933
NICK: I think that--

00:34:50.933 --> 00:34:52.370
I can't remember which
standard they are.

00:34:52.370 --> 00:34:53.010
They're one of the standard--

00:34:53.010 --> 00:34:54.260
I think they might be MIFARE.

00:34:54.260 --> 00:34:56.030
Although I'm probably wrong.

00:34:56.030 --> 00:34:56.830
Can't remember.

00:34:56.830 --> 00:34:58.330
But there's a super
standard card.

00:34:58.330 --> 00:34:59.540
And they're not locked.

00:34:59.540 --> 00:35:00.620
They're read-writable.

00:35:00.620 --> 00:35:04.800
So you can use NXP tag writer
app, for example, just to push

00:35:04.800 --> 00:35:05.650
different stuff.

00:35:05.650 --> 00:35:06.980
And one of the coolest things
about Moo with their

00:35:06.980 --> 00:35:09.790
manufacturing processes is that
they can put different

00:35:09.790 --> 00:35:13.140
tags in different cards as well,
which is kind of cool.

00:35:13.140 --> 00:35:15.470
So you can get like five
different designs.

00:35:15.470 --> 00:35:17.840
Like this one has my
contact details on.

00:35:17.840 --> 00:35:21.780
This one has a Google Maps link
to get you to my office.

00:35:21.780 --> 00:35:25.550
And this one has a YouTube
play list, URL, whatever.

00:35:25.550 --> 00:35:27.080
Pretty cool.

00:35:27.080 --> 00:35:27.780
SPARKY RHODE: Nice.

00:35:27.780 --> 00:35:30.510
So I've pasted the URL for
them in the sidebar here.

00:35:30.510 --> 00:35:36.690
It's us.moo.com/nfc.

00:35:36.690 --> 00:35:37.940
NICK: Good British company.

00:35:42.250 --> 00:35:43.970
MATT: So, Moderator question?

00:35:46.770 --> 00:35:47.820
SPARKY RHODE: We're getting
down there.

00:35:47.820 --> 00:35:49.070
There's not a whole lot left.

00:35:51.740 --> 00:35:52.990
Let's see.

00:35:54.970 --> 00:35:55.780
I think this is the new one.

00:35:55.780 --> 00:35:58.580
This was submitted since
the Hangout started.

00:35:58.580 --> 00:36:00.750
So I didn't answer it.

00:36:00.750 --> 00:36:04.020
In list view, I have custom rows
with progress bars and

00:36:04.020 --> 00:36:05.530
buttons on each.

00:36:05.530 --> 00:36:09.030
How can I get info from the row
the button was pressed to

00:36:09.030 --> 00:36:10.530
start some calculations
and update

00:36:10.530 --> 00:36:11.780
progress bar in this row?

00:36:14.590 --> 00:36:17.120
Similar behavior like
Google Play app.

00:36:17.120 --> 00:36:19.750
We get this kind of a lot.

00:36:19.750 --> 00:36:24.110
I see a lot of questions in
stack overflow that are all

00:36:24.110 --> 00:36:27.850
talking about wanting to put
buttons into their list views.

00:36:27.850 --> 00:36:31.660
So it's a pretty popular
pattern.

00:36:31.660 --> 00:36:31.740
I don't know.

00:36:31.740 --> 00:36:34.160
My first response is, why
would you do that?

00:36:34.160 --> 00:36:39.710
I mean why would you replicate
a control over and over and

00:36:39.710 --> 00:36:41.130
over again like that when
you could just make

00:36:41.130 --> 00:36:43.870
the list view clickable?

00:36:43.870 --> 00:36:51.255
But I guess the answer is just
a custom layout, right?

00:36:51.255 --> 00:36:53.330
NICK: He's already doing that I
think, by the sounds of it.

00:36:53.330 --> 00:36:56.520
MATT: I think he wants to know
how he knows what the index is

00:36:56.520 --> 00:36:57.800
once the button's
been clicked.

00:37:01.680 --> 00:37:05.820
I think my default behavior to
solve this is if you're using

00:37:05.820 --> 00:37:10.900
the ViewHolder pattern, stash
the index in a ViewHolder and

00:37:10.900 --> 00:37:15.000
then when the button is clicked,
catch the click in

00:37:15.000 --> 00:37:17.830
the ViewHolder and then have a
separate listener which parses

00:37:17.830 --> 00:37:20.350
out saying, this is the index
of what I am, and I've just

00:37:20.350 --> 00:37:22.420
been clicked.

00:37:22.420 --> 00:37:24.410
But, yeah, I'm kind of
with you, Sparky.

00:37:24.410 --> 00:37:27.100
It's not a good thing to do.

00:37:27.100 --> 00:37:28.400
NICK: Now I don' t
know about this.

00:37:28.400 --> 00:37:30.550
I think there's definite ways
you would want to put a button

00:37:30.550 --> 00:37:31.810
in there of different
clickable regions.

00:37:31.810 --> 00:37:34.810
Think about in the People
app, for example.

00:37:34.810 --> 00:37:37.320
You have a list item which
is partly phone numbers.

00:37:37.320 --> 00:37:40.260
So tapping [INAUDIBLE], it
will call them, and then

00:37:40.260 --> 00:37:41.080
there's a little divider.

00:37:41.080 --> 00:37:42.930
And then like the SMS phone.

00:37:42.930 --> 00:37:44.320
I think this is a common
pattern where you have

00:37:44.320 --> 00:37:45.940
multiple actions per row.

00:37:45.940 --> 00:37:48.070
I think it's perfectly valid.

00:37:48.070 --> 00:37:52.090
So yeah, you basically want
it to respond to a click.

00:37:52.090 --> 00:37:54.990
I think if you're using a
list-activity, for example,

00:37:54.990 --> 00:37:58.070
then you get the un-item
selected callback, which will

00:37:58.070 --> 00:38:00.280
actually give you the
position as well.

00:38:00.280 --> 00:38:05.330
So that's the index
into your adapter.

00:38:05.330 --> 00:38:07.955
MATT: But I guess that applies
to the whole row, doesn't it?

00:38:07.955 --> 00:38:09.200
Or am I--

00:38:09.200 --> 00:38:12.540
NICK: Yeah, but you also get a
view of those taps as well.

00:38:12.540 --> 00:38:13.790
MATT: Good point.

00:38:15.900 --> 00:38:19.120
SPARKY RHODE: Sounds like
a good answer to me.

00:38:19.120 --> 00:38:21.590
For my own part, it's one of
those, why would I want to

00:38:21.590 --> 00:38:22.230
know how to do that?

00:38:22.230 --> 00:38:24.460
I wouldn't want to do that.

00:38:24.460 --> 00:38:27.200
NICK: If I recall correctly as
well, Mr. Cyril Mottier of

00:38:27.200 --> 00:38:31.360
Green Droid fame, did a series
of really, really great blog

00:38:31.360 --> 00:38:33.850
posts about tips and tricks
on list views.

00:38:33.850 --> 00:38:36.360
And I think this is one of the
topics he covered about how to

00:38:36.360 --> 00:38:39.690
have differentially, separately
clickable areas

00:38:39.690 --> 00:38:40.950
within a list row.

00:38:40.950 --> 00:38:45.210
And so I will either search
for Cyril Mottier, Android

00:38:45.210 --> 00:38:47.350
blog, list view perhaps.

00:38:47.350 --> 00:38:49.690
Or we can try and put out
that link as well.

00:38:49.690 --> 00:38:50.550
SPARKY RHODE: Sure.

00:38:50.550 --> 00:38:52.525
Actually I found
it right here.

00:38:52.525 --> 00:38:53.060
NICK: Wow.

00:38:53.060 --> 00:38:55.300
That was quick.

00:38:55.300 --> 00:38:55.760
SPARKY RHODE: Yeah.

00:38:55.760 --> 00:39:00.330
It's Cyril Mottier Tips and
Tricks #4, add several

00:39:00.330 --> 00:39:01.730
clickable areas.

00:39:01.730 --> 00:39:03.250
That sounds pretty
close to me.

00:39:03.250 --> 00:39:07.040
So here is the URL.

00:39:07.040 --> 00:39:08.027
NICK: Do you want to
pop that in the

00:39:08.027 --> 00:39:09.900
Moderator as well in case?

00:39:09.900 --> 00:39:11.150
Who is it who asked?

00:39:14.465 --> 00:39:14.810
Yeah.

00:39:14.810 --> 00:39:19.410
In case Martin from Poland isn't
watching, we should pop

00:39:19.410 --> 00:39:20.660
that in the Moderator as well.

00:39:22.870 --> 00:39:25.670
Thank you Cyril, for writing
out that great info.

00:39:25.670 --> 00:39:27.060
SPARKY RHODE: Awesome.

00:39:27.060 --> 00:39:29.732
MATT: It's a pretty cool
trick, I must admit.

00:39:29.732 --> 00:39:30.130
NICK: Yep.

00:39:30.130 --> 00:39:31.980
Use it responsibly.

00:39:31.980 --> 00:39:36.080
Like Sparky says, many times a
better solution is to have the

00:39:36.080 --> 00:39:37.660
whole list item clickable.

00:39:37.660 --> 00:39:41.110
But if there are separately two
actions you want to have

00:39:41.110 --> 00:39:44.280
in the list item then--

00:39:44.280 --> 00:39:47.700
I don't know exactly which list
you are referring to in

00:39:47.700 --> 00:39:48.890
Google Play client.

00:39:48.890 --> 00:39:51.490
There are a few.

00:39:51.490 --> 00:39:52.790
Perhaps it's the
new behaviors.

00:39:52.790 --> 00:39:53.910
I haven't got that.

00:39:53.910 --> 00:39:55.080
When you look at your list of
all installed apps, you can

00:39:55.080 --> 00:39:57.250
now get rid of stuff
from that.

00:39:57.250 --> 00:39:59.280
So all those apps which you
were just trying out--

00:39:59.280 --> 00:40:03.575
honestly, you don't use the
Taylor Swift app or whatever--

00:40:03.575 --> 00:40:07.406
you can now get it out of
your install history.

00:40:07.406 --> 00:40:09.890
Maybe that will be an example of
where you have a list item

00:40:09.890 --> 00:40:11.710
which is mostly clickable, and
then a section at the end

00:40:11.710 --> 00:40:13.270
which does a secondary action.

00:40:17.810 --> 00:40:18.420
Cool.

00:40:18.420 --> 00:40:21.860
So unless we have any questions,
what do we do?

00:40:21.860 --> 00:40:23.030
Wrap up early?

00:40:23.030 --> 00:40:25.110
Give everyone some time back?

00:40:25.110 --> 00:40:26.690
Shoot the breeze?

00:40:26.690 --> 00:40:28.590
Any more questions?

00:40:28.590 --> 00:40:30.986
SPARKY RHODE: Just one little
final thought in response to

00:40:30.986 --> 00:40:36.400
what you were just saying about
the secondary actions.

00:40:36.400 --> 00:40:39.730
I just can't let that go without
suggesting also that

00:40:39.730 --> 00:40:43.800
there's also perhaps a fair
argument to be made for going

00:40:43.800 --> 00:40:45.640
with a long press rather
than having

00:40:45.640 --> 00:40:46.890
multiple clickable regions.

00:40:50.500 --> 00:40:52.296
Other than that, yeah.

00:40:52.296 --> 00:40:53.960
MATT: I guess it comes down to
how [? discoverable ?] you

00:40:53.960 --> 00:40:54.820
want the action to be.

00:40:54.820 --> 00:40:59.000
If you think it's not a common
enough use case to warrant

00:40:59.000 --> 00:41:02.595
actually taking up some space,
then long press is probably a

00:41:02.595 --> 00:41:04.600
nicer solution to it.

00:41:04.600 --> 00:41:06.445
I must admit, I hadn't
even considered the

00:41:06.445 --> 00:41:06.770
context that way.

00:41:06.770 --> 00:41:08.830
Yes, it's perfectly--

00:41:08.830 --> 00:41:11.990
SPARKY RHODE: That or you can
make it a checkable list item,

00:41:11.990 --> 00:41:14.380
and then you can check
it and have an action

00:41:14.380 --> 00:41:15.820
on the action bar.

00:41:15.820 --> 00:41:17.190
NICK: Well long press to launch
the [? contacts ?]

00:41:17.190 --> 00:41:18.910
[? action ?] bar is pretty
standard as well.

00:41:18.910 --> 00:41:22.370
I quite like just long press.

00:41:22.370 --> 00:41:24.140
Especially because it
lets you do multiple

00:41:24.140 --> 00:41:25.630
selections, which I love.

00:41:25.630 --> 00:41:27.412
And we talked about that quite
a lot yesterday on Design in

00:41:27.412 --> 00:41:31.270
Action, in case you missed it.

00:41:31.270 --> 00:41:32.470
Cool.

00:41:32.470 --> 00:41:32.970
All right.

00:41:32.970 --> 00:41:35.430
Well everyone gets 15 minutes
of their day back.

00:41:35.430 --> 00:41:38.130
How about that?

00:41:38.130 --> 00:41:40.030
SPARKY RHODE: Well thanks,
everyone, for tuning in.

00:41:40.030 --> 00:41:42.510
It's been our pleasure to talk
Android development with you,

00:41:42.510 --> 00:41:46.660
and we look forward to seeing
you again at the next Hangout.

00:41:46.660 --> 00:41:47.250
NICK: Thanks everyone.

00:41:47.250 --> 00:41:47.610
Thanks for the good questions.

00:41:47.610 --> 00:41:47.850
See you next week.

00:41:47.850 --> 00:41:48.105
MATT: Cheers.

00:41:48.105 --> 00:41:49.355
NICK: See you next week.

