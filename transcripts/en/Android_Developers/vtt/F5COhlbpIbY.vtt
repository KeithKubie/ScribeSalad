WEBVTT
Kind: captions
Language: en

00:05:43.120 --> 00:05:44.320
ROMAN NURIK: Hello, and welcome,
once again, to

00:05:44.320 --> 00:05:45.400
Android Design in Action.

00:05:45.400 --> 00:05:48.240
We have a very special episode
for you today about Navigation

00:05:48.240 --> 00:05:51.930
Drawers, the new pattern
introduced at Google I/O 2013.

00:05:51.930 --> 00:05:54.370
We have some very awesome
members of the

00:05:54.370 --> 00:05:55.720
Android design team.

00:05:55.720 --> 00:05:56.820
They'll introduce themselves
in a moment.

00:05:56.820 --> 00:05:59.250
They're here to talk to you
about the pattern, so that's

00:05:59.250 --> 00:06:02.240
going to go on for about
20, 30 minutes or so.

00:06:02.240 --> 00:06:04.285
And then we're going to into a
couple of questions that Nick

00:06:04.285 --> 00:06:06.350
and I have prepared
for the team about

00:06:06.350 --> 00:06:07.500
this awesome new pattern.

00:06:07.500 --> 00:06:09.760
So just to quickly introduce
ourselves, my

00:06:09.760 --> 00:06:11.620
name is Roman Nurik.

00:06:11.620 --> 00:06:12.640
NICK BUTCHER: And, hi,
my name is Nick

00:06:12.640 --> 00:06:15.200
Butcher, here from London.

00:06:15.200 --> 00:06:17.490
JENS NAGEL: Hi, my name is Jens
Nagel, interaction design

00:06:17.490 --> 00:06:19.342
on the Android design team.

00:06:19.342 --> 00:06:21.330
RICH FULCHER: And I'm Rich
Fulcher, interaction designer

00:06:21.330 --> 00:06:22.640
on the Android design team.

00:06:22.640 --> 00:06:25.420
And we're both here
in Mountain View.

00:06:25.420 --> 00:06:28.200
ROMAN NURIK: Actually, this is
one of my favorite episodes, I

00:06:28.200 --> 00:06:31.270
think, so far because we have
folks from Mountain View, New

00:06:31.270 --> 00:06:34.510
York and London in the
same video hanging

00:06:34.510 --> 00:06:35.660
out at the same time.

00:06:35.660 --> 00:06:38.276
So anyway, without further ado,
Rich, Jens, would you

00:06:38.276 --> 00:06:39.470
like to take it away?

00:06:39.470 --> 00:06:42.400
RICH FULCHER: Sounds great.

00:06:42.400 --> 00:06:44.420
I thought we could start by
maybe going through the

00:06:44.420 --> 00:06:49.650
history of how the Navigation
Drawer emerged as a pattern.

00:06:49.650 --> 00:06:52.760
And kind of going back, I think
kind of the first app

00:06:52.760 --> 00:06:55.260
that a lot of people experienced
the Navigation

00:06:55.260 --> 00:06:57.770
Drawer in on Android, and
certainly the first Google app

00:06:57.770 --> 00:07:00.560
they would have seen
it, was YouTube.

00:07:00.560 --> 00:07:04.480
Now that drawer that we saw at
that time is different in a

00:07:04.480 --> 00:07:06.930
lot of key ways from the
drawer pattern that we

00:07:06.930 --> 00:07:10.170
discussed last month at I/O.

00:07:10.170 --> 00:07:14.280
But it still had a lot of the
same original objectives.

00:07:14.280 --> 00:07:18.220
To bring content to the
forefront, to get navigation

00:07:18.220 --> 00:07:21.250
out of the way and have it only
use screen real estate

00:07:21.250 --> 00:07:22.960
when the user was
kind of actively

00:07:22.960 --> 00:07:25.980
trying to change locations.

00:07:25.980 --> 00:07:30.990
So when we, on the design team,
see a need like that, we

00:07:30.990 --> 00:07:34.445
kind of have this natural
instinct to want to turn it

00:07:34.445 --> 00:07:37.130
into a pattern that other
applications can make use of.

00:07:37.130 --> 00:07:40.880
Because we often see that that
need is not specific to a

00:07:40.880 --> 00:07:44.730
given application or service,
but it's something that would

00:07:44.730 --> 00:07:47.300
be a benefit to a
larger audience.

00:07:47.300 --> 00:07:50.070
So the first step that we do is
we look at a pattern like

00:07:50.070 --> 00:07:54.660
that, particularly on Android,
is we like to think about how

00:07:54.660 --> 00:07:58.500
that works from a navigation
standpoint.

00:07:58.500 --> 00:08:02.710
Android, as you know, is special
in its use of both the

00:08:02.710 --> 00:08:06.080
Back button and in Up affordance
in the very

00:08:06.080 --> 00:08:08.560
commonly used action
bar pattern.

00:08:08.560 --> 00:08:12.810
And as we were looking at the
Navigation Drawer, there were

00:08:12.810 --> 00:08:15.620
a lot of different ways we could
have elected to have it

00:08:15.620 --> 00:08:17.270
behave in terms of
its interaction

00:08:17.270 --> 00:08:18.850
with those two controls.

00:08:18.850 --> 00:08:22.200
It could have been that the
drawer always presented itself

00:08:22.200 --> 00:08:25.040
the minute you launched an
application, and was kind of,

00:08:25.040 --> 00:08:28.900
logically, a screen sitting
above the other screens.

00:08:28.900 --> 00:08:31.500
Or it could have been something
that was invoked by

00:08:31.500 --> 00:08:33.750
one of the affordances
but not the other.

00:08:33.750 --> 00:08:36.900
That Up would trigger
it but not Back.

00:08:36.900 --> 00:08:39.659
Or you could even have other
interactions with Back where

00:08:39.659 --> 00:08:42.559
making multiple selections or
sequential selections from the

00:08:42.559 --> 00:08:46.310
drawer could build up a
continuous back state.

00:08:46.310 --> 00:08:48.800
In the end, we went with kind
of a pretty straightforward

00:08:48.800 --> 00:08:51.890
model, that the drawer was
invoked off the action bar's

00:08:51.890 --> 00:08:55.500
Up affordance in an altered
form, and doesn't relate to

00:08:55.500 --> 00:08:57.960
the Back button except
for closing it.

00:08:57.960 --> 00:09:00.420
But we like to start with these
broad explorations.

00:09:00.420 --> 00:09:03.330
So what you're seeing on the
screen here are some of really

00:09:03.330 --> 00:09:07.100
the earliest wire framing work
we did around this drawer

00:09:07.100 --> 00:09:09.320
pattern and defining it.

00:09:09.320 --> 00:09:12.940
After we considered the
interaction, we like to look

00:09:12.940 --> 00:09:17.560
at what the visual storytelling
we're going to do

00:09:17.560 --> 00:09:19.630
with these elements could be.

00:09:19.630 --> 00:09:21.910
And with the Drawer we had a lot
of different options, even

00:09:21.910 --> 00:09:26.560
just thinking about what that
trigger mechanism would look

00:09:26.560 --> 00:09:30.160
like to let the user know that
there was a drawer there.

00:09:30.160 --> 00:09:32.860
When YouTube first introduced
it, they didn't have any kind

00:09:32.860 --> 00:09:33.830
of distinct graphic.

00:09:33.830 --> 00:09:36.475
They just relied on the
existing left arrow.

00:09:36.475 --> 00:09:39.300
But we thought about, well, what
if we did a special icon

00:09:39.300 --> 00:09:43.410
or a glyph to decorate the
application icon that would

00:09:43.410 --> 00:09:44.660
denote there's a drawer?

00:09:44.660 --> 00:09:47.470
Something like the three
vertical lines that we've come

00:09:47.470 --> 00:09:51.600
to affectionately know as the
hamburger internally here.

00:09:51.600 --> 00:09:52.650
But there are other options.

00:09:52.650 --> 00:09:55.620
It could've been that we used a
right arrow to indicate that

00:09:55.620 --> 00:09:58.030
something was emerging
from the side--

00:09:58.030 --> 00:10:01.130
from the left side moving
to the right.

00:10:01.130 --> 00:10:04.460
Or it could have been a less
special treatment that, when

00:10:04.460 --> 00:10:08.280
triggered, used the contextual
action bar flavor so that it

00:10:08.280 --> 00:10:12.020
could dismiss it in the same way
that you would dismiss a

00:10:12.020 --> 00:10:13.990
selection state.

00:10:13.990 --> 00:10:16.420
Again, we try to look at
a range of options.

00:10:16.420 --> 00:10:20.710
We always try to think about
many contexts of use, not just

00:10:20.710 --> 00:10:22.540
one particular application.

00:10:22.540 --> 00:10:27.560
And we try to look for ways to
produce synergy with other

00:10:27.560 --> 00:10:31.000
patterns that are already in
use, both for developers and

00:10:31.000 --> 00:10:33.440
for us, most importantly, for
users who have certain

00:10:33.440 --> 00:10:34.890
expectations based
on what they've

00:10:34.890 --> 00:10:36.205
already seen in the platform.

00:10:39.820 --> 00:10:43.650
Where we ultimately ended
up was what you've seen.

00:10:43.650 --> 00:10:46.630
There's a distinct icon in the
Action Bar and I can touch it

00:10:46.630 --> 00:10:48.040
to open it.

00:10:48.040 --> 00:10:50.550
But we also put a lot of thought
into what the gestural

00:10:50.550 --> 00:10:53.720
mechanisms that could be used
to open this should be.

00:10:53.720 --> 00:10:56.600
So we have the edge
swipe available.

00:10:56.600 --> 00:10:59.880
It's really a short cut
at the top level.

00:10:59.880 --> 00:11:02.480
It does the exact same action
that hitting the

00:11:02.480 --> 00:11:04.180
Action Bar would do.

00:11:04.180 --> 00:11:06.930
But it really comes into its
own on lower levels of the

00:11:06.930 --> 00:11:10.820
application where that Action
Bar space is being used for

00:11:10.820 --> 00:11:14.540
hierarchical up, and then the
edge swipe can be an immediate

00:11:14.540 --> 00:11:17.110
way to access that control
from deeper within the

00:11:17.110 --> 00:11:19.150
application.

00:11:19.150 --> 00:11:20.400
JENS NAGEL: All right.

00:11:23.300 --> 00:11:31.380
The Navigation Drawer is really
a new way of switching

00:11:31.380 --> 00:11:34.116
top levels inside of your app.

00:11:34.116 --> 00:11:36.870
There have been, already,
established patterns in

00:11:36.870 --> 00:11:40.930
Android such as the six pack,
for example, the spinner or

00:11:40.930 --> 00:11:43.560
the fix tabs that you as
developers are probably very

00:11:43.560 --> 00:11:45.530
familiar with.

00:11:45.530 --> 00:11:48.590
That serve a similar purpose.

00:11:48.590 --> 00:11:50.500
Let's look at that real quick.

00:11:50.500 --> 00:11:54.700
Basically what they do is they
allow you to switch between

00:11:54.700 --> 00:11:55.480
the top level.

00:11:55.480 --> 00:12:01.020
So if you look at a really
boiled down diagram of an app,

00:12:01.020 --> 00:12:05.940
the top level is basically the
screens that represent the

00:12:05.940 --> 00:12:09.970
different facets of your app,
and sort of have the function

00:12:09.970 --> 00:12:14.460
to represent the major use cases
of your app and sort of

00:12:14.460 --> 00:12:20.450
guide you down through the
connecting screens down to the

00:12:20.450 --> 00:12:23.650
consumption level.

00:12:23.650 --> 00:12:29.210
What you can see is that what
those patterns have in common

00:12:29.210 --> 00:12:32.240
is that they only represent
themselves at the top level.

00:12:32.240 --> 00:12:40.080
So be it the six-pack or be it
the tabs, they all rely on a

00:12:40.080 --> 00:12:43.820
piece of user interface or a
piece of Chrome, that lives in

00:12:43.820 --> 00:12:45.290
particular at the top level.

00:12:45.290 --> 00:12:49.640
Once you navigate away from
that, that switching

00:12:49.640 --> 00:12:51.530
opportunity goes
away from you.

00:12:51.530 --> 00:12:54.980
And if you want to switch back
to a different facet, you

00:12:54.980 --> 00:12:58.270
actually have to navigate
up to the top level.

00:12:58.270 --> 00:13:02.430
And that is actually one of
the key differences to the

00:13:02.430 --> 00:13:04.470
Navigation Drawer.

00:13:04.470 --> 00:13:08.080
So if you were here, for
example, the Navigation Drawer

00:13:08.080 --> 00:13:12.440
does include all the top level
stuff, at the very minimum.

00:13:12.440 --> 00:13:17.740
But it now also can include
screens at the lower levels.

00:13:17.740 --> 00:13:19.560
So basically, we're thinking
about those

00:13:19.560 --> 00:13:20.940
as navigation hubs.

00:13:20.940 --> 00:13:27.760
Basically places that users will
want to frequently visit

00:13:27.760 --> 00:13:32.710
often or use as a jump off point
to other places in the

00:13:32.710 --> 00:13:33.960
application.

00:13:36.900 --> 00:13:42.590
So if you wanted to look at
when to use the Navigation

00:13:42.590 --> 00:13:45.850
Drawer, as opposed to the other
patterns that we talked

00:13:45.850 --> 00:13:51.710
about earlier, here are some
helpful statements, or helpful

00:13:51.710 --> 00:13:55.990
guides that can help you
make this decision.

00:13:55.990 --> 00:13:59.730
One of those could be more
than three top levels.

00:13:59.730 --> 00:14:03.310
So the Navigation Drawer is
particularly good at showing

00:14:03.310 --> 00:14:08.170
more content, exposing more
content, than the other top

00:14:08.170 --> 00:14:09.420
level switching mechanisms.

00:14:12.250 --> 00:14:15.740
If you have more than three top
levels, Navigation Drawer

00:14:15.740 --> 00:14:19.160
becomes a possible choice.

00:14:19.160 --> 00:14:22.010
If you have less than
[INAUDIBLE] you can also look

00:14:22.010 --> 00:14:25.190
at other top level switching
mechanisms, such as taps, for

00:14:25.190 --> 00:14:30.810
example, that are very good at
exposing the different facets

00:14:30.810 --> 00:14:34.170
of your app within one view.

00:14:34.170 --> 00:14:37.840
Also, if you have deep
navigation hierarchies, the

00:14:37.840 --> 00:14:39.920
Navigation Drawer is
a good choice.

00:14:39.920 --> 00:14:42.300
And here's the reason why.

00:14:42.300 --> 00:14:45.930
We've seen that, as you navigate
away from the top

00:14:45.930 --> 00:14:50.410
level, usually in an app that
uses the traditional top level

00:14:50.410 --> 00:14:53.440
switching mechanisms, you
would have to do some

00:14:53.440 --> 00:14:57.280
considerable navigation effort
to get back to the top level,

00:14:57.280 --> 00:15:02.140
and then switch over to a
different facet of your app.

00:15:02.140 --> 00:15:06.020
The Navigation Drawer helps
you here in that it is

00:15:06.020 --> 00:15:09.160
available from anywhere in the
app, and you can just, through

00:15:09.160 --> 00:15:14.490
a site swiping gesture, bring
it on screen and navigate

00:15:14.490 --> 00:15:18.240
freely to pretty much
anywhere in the app.

00:15:18.240 --> 00:15:24.880
Also, if your navigation hubs
are at deeper levels, the

00:15:24.880 --> 00:15:27.360
Navigation Drawer is
a good choice.

00:15:27.360 --> 00:15:31.840
So for example, if one of your
facets, basically, has

00:15:31.840 --> 00:15:36.470
navigation hubs at different
levels, it makes sense to

00:15:36.470 --> 00:15:40.520
include them in the Navigation
Drawer in order to jump

00:15:40.520 --> 00:15:44.530
quickly into those
deeper levels.

00:15:44.530 --> 00:15:48.580
If you have a need for cross
navigation, meaning that you

00:15:48.580 --> 00:15:51.690
want to quickly jump from one
facet, maybe at a deeper

00:15:51.690 --> 00:15:55.900
level, to another facet that
also has a deeper level,

00:15:55.900 --> 00:15:59.540
Navigation Drawer allows you to
do that by including those

00:15:59.540 --> 00:16:04.600
deeper navigation targets
inside of the drawer.

00:16:04.600 --> 00:16:11.330
Since your Navigation Drawer
has more content, the

00:16:11.330 --> 00:16:15.390
Navigation Drawer gives you also
options to structure your

00:16:15.390 --> 00:16:17.540
content better.

00:16:17.540 --> 00:16:21.590
So you can, for example, as you
can see here, you can add

00:16:21.590 --> 00:16:26.450
headers, dividers, and icons
in order to group certain

00:16:26.450 --> 00:16:29.910
areas of functionality better.

00:16:29.910 --> 00:16:33.160
We also introduced collapsible
items.

00:16:33.160 --> 00:16:38.630
So those are another means of
structuring your content by

00:16:38.630 --> 00:16:46.400
adding subordinate items,
typically content items, to

00:16:46.400 --> 00:16:47.650
top level items.

00:16:52.100 --> 00:16:57.950
Maybe a couple of notes to
some interaction details.

00:16:57.950 --> 00:17:02.780
One other thing about the
Navigation Drawer is that it

00:17:02.780 --> 00:17:07.069
does not have a lot of
representation on the screen.

00:17:07.069 --> 00:17:11.569
So if you look at an app that
has a Navigation Drawer, the

00:17:11.569 --> 00:17:15.079
defining characteristic is
really the Navigation Drawer

00:17:15.079 --> 00:17:17.960
icon in the top left.

00:17:17.960 --> 00:17:21.660
So in order for people to
understand how navigation

00:17:21.660 --> 00:17:25.089
works in that particular app,
and that Navigation Drawer is

00:17:25.089 --> 00:17:30.780
actually present, we wanted to
make sure that as people

00:17:30.780 --> 00:17:35.580
launch an application for the
first time, that they are sort

00:17:35.580 --> 00:17:38.600
of confronted with the
Navigation Drawer and sort of

00:17:38.600 --> 00:17:42.700
see what options they have,
what sort of the top level

00:17:42.700 --> 00:17:48.650
activities are that they can
take advantage of in your app.

00:17:48.650 --> 00:17:52.340
So upon first launch, open
the Navigation Drawer.

00:17:52.340 --> 00:17:56.060
People then can navigate freely
from there in your app,

00:17:56.060 --> 00:18:00.340
or just simply dismiss the
Navigation Drawer and get to

00:18:00.340 --> 00:18:02.830
the main content that way.

00:18:02.830 --> 00:18:06.220
Once they're beyond that point,
once they have actually

00:18:06.220 --> 00:18:09.530
opened the Navigation Drawer
manually for the first time,

00:18:09.530 --> 00:18:13.320
on subsequent launches then,
don't show the Navigation

00:18:13.320 --> 00:18:15.400
Drawer on launch anymore.

00:18:15.400 --> 00:18:19.320
So that way you make sure that
people know that there's a

00:18:19.320 --> 00:18:23.146
Navigation Drawer, how
to interact with it.

00:18:23.146 --> 00:18:24.730
ROMAN NURIK: One of my favorite
things I wanted to

00:18:24.730 --> 00:18:29.130
point out about that was that,
basically, you get the ability

00:18:29.130 --> 00:18:32.330
to tell the user about the
gesture, and about the

00:18:32.330 --> 00:18:33.970
physical space within which the

00:18:33.970 --> 00:18:35.310
Navigation Drawer interacts.

00:18:35.310 --> 00:18:35.780
Right?

00:18:35.780 --> 00:18:39.300
So if you initially show the
Navigation Drawer, and then

00:18:39.300 --> 00:18:40.200
you kind of--

00:18:40.200 --> 00:18:42.890
they hide it by either touching
outside the content

00:18:42.890 --> 00:18:45.140
area, or touching the upper
coordinates or anything like

00:18:45.140 --> 00:18:47.530
that, they basically--

00:18:47.530 --> 00:18:49.300
the Navigation Drawer
immediately slides to the

00:18:49.300 --> 00:18:52.860
left, and it kind of hints that
if you pull out from the

00:18:52.860 --> 00:18:54.440
left, you'll actually
see it again.

00:18:54.440 --> 00:18:57.930
So it almost hints at the
gestures involved with that

00:18:57.930 --> 00:18:59.946
kind of initial impression
that you get.

00:18:59.946 --> 00:19:00.350
JENS NAGEL: Yeah.

00:19:00.350 --> 00:19:04.550
In that sense it's a really
important learning step, to

00:19:04.550 --> 00:19:08.510
get you familiar with what the
app is really all about.

00:19:08.510 --> 00:19:10.700
And, also, how the
Navigation Drawer

00:19:10.700 --> 00:19:14.060
actually works and functions.

00:19:14.060 --> 00:19:18.770
Then the second thing I wanted
to point out is to give the

00:19:18.770 --> 00:19:19.640
user a peak.

00:19:19.640 --> 00:19:22.680
And that is really to make the
Navigation Drawer more

00:19:22.680 --> 00:19:25.660
detectable and also
more tangible.

00:19:25.660 --> 00:19:30.750
If you use the library that we
provide for implementing the

00:19:30.750 --> 00:19:33.540
Navigation Drawer, you don't
really need to worry about

00:19:33.540 --> 00:19:36.990
this because that's already
automatically taken care of.

00:19:36.990 --> 00:19:39.020
And you get this for free.

00:19:39.020 --> 00:19:44.970
But what it really does is, as
users explore applications

00:19:44.970 --> 00:19:48.910
with their fingers, and then
maybe accidentally touch on

00:19:48.910 --> 00:19:52.730
the left edge of the screen,
then your Drawer peeks in a

00:19:52.730 --> 00:19:57.180
little bit and sort of gives
you a good affordance, good

00:19:57.180 --> 00:20:02.080
feedback, that you can drag the
Navigation Drawer out from

00:20:02.080 --> 00:20:04.660
the left onto the rest
of the screen.

00:20:07.250 --> 00:20:10.320
Finally, we often get the
question, well, if I use the

00:20:10.320 --> 00:20:15.070
Navigation Drawer, should I
have his Navigation Drawer

00:20:15.070 --> 00:20:17.810
icon at all levels off my app?

00:20:17.810 --> 00:20:21.060
Should it be represented
on all screens?

00:20:21.060 --> 00:20:22.540
And the answer is really no.

00:20:22.540 --> 00:20:26.560
Only those screens that are
represented in the Navigation

00:20:26.560 --> 00:20:30.100
Drawer should actually have
a Navigation Drawer image.

00:20:30.100 --> 00:20:34.130
All other screens have the
traditional up caret.

00:20:34.130 --> 00:20:39.260
And the reason for that is
really, as we were developing

00:20:39.260 --> 00:20:43.630
this, we sort of entertained the
idea of having access to

00:20:43.630 --> 00:20:48.060
the Navigation Drawer via the
application icon throughout.

00:20:48.060 --> 00:20:55.060
But it really felt like it
creates a separate brand of

00:20:55.060 --> 00:20:58.410
applications with a different
navigation model that is not

00:20:58.410 --> 00:21:03.900
consistent with other Android
applications that sit side by

00:21:03.900 --> 00:21:07.350
side with Navigation Drawer
applications.

00:21:07.350 --> 00:21:14.400
So in that sense, we for screens
that are not typical

00:21:14.400 --> 00:21:20.890
jump off points, or are not high
value navigation targets,

00:21:20.890 --> 00:21:27.720
we keep the up affordance
there intact.

00:21:27.720 --> 00:21:30.300
NICK BUTCHER: So just to
interject there, so on those

00:21:30.300 --> 00:21:31.860
other screens where you have the
up affordance, it's still

00:21:31.860 --> 00:21:34.180
accessible via this
kind of the bezel

00:21:34.180 --> 00:21:34.960
swipe, the edge swipe.

00:21:34.960 --> 00:21:35.250
Right?

00:21:35.250 --> 00:21:35.540
JENS NAGEL: Oh, yeah.

00:21:35.540 --> 00:21:36.060
Absolutely.

00:21:36.060 --> 00:21:37.570
NICK BUTCHER: So in that way
it's kind of like an

00:21:37.570 --> 00:21:39.100
accelerator, like a
keyboard shortcut.

00:21:39.100 --> 00:21:42.440
So the power users who know
about it, you have this method

00:21:42.440 --> 00:21:44.980
of easily pulling up the
navigation from anywhere if

00:21:44.980 --> 00:21:47.920
you want, while still retaining
the familiar

00:21:47.920 --> 00:21:49.300
navigation, kind
of hierarchical

00:21:49.300 --> 00:21:51.000
navigation of the up, right?

00:21:51.000 --> 00:21:51.790
JENS NAGEL: Exactly.

00:21:51.790 --> 00:21:53.250
It's good that you
mentioned that.

00:21:53.250 --> 00:21:56.700
So the Navigation Drawer is
accessible at-- or should be

00:21:56.700 --> 00:21:59.770
accessible from all levels.

00:21:59.770 --> 00:22:04.190
And the Navigation Drawer image
is really sort of this

00:22:04.190 --> 00:22:10.510
short little reminder that
the Navigation Drawer--

00:22:10.510 --> 00:22:15.440
or that you're at a place where
navigating away with the

00:22:15.440 --> 00:22:19.650
Navigation Drawer is
a likely option.

00:22:19.650 --> 00:22:19.830
RICH FULCHER: Yeah.

00:22:19.830 --> 00:22:24.610
It's also kind of-- if you had
a application that just used

00:22:24.610 --> 00:22:28.480
the up affordance, at that
topmost screen that left

00:22:28.480 --> 00:22:30.010
pointing carrot would go away.

00:22:30.010 --> 00:22:32.340
And that was kind of an
indication to the user that

00:22:32.340 --> 00:22:34.880
you are at a special place,
you're at the kind of logical

00:22:34.880 --> 00:22:36.650
top of the application.

00:22:36.650 --> 00:22:40.790
The presence of the three line
drawer indicator does much the

00:22:40.790 --> 00:22:41.420
same thing now.

00:22:41.420 --> 00:22:43.880
You're getting a slightly
different look at what the

00:22:43.880 --> 00:22:44.610
action bar is.

00:22:44.610 --> 00:22:47.490
And again, it's just kind of
reinforcing, you're at the

00:22:47.490 --> 00:22:48.400
home of the app.

00:22:48.400 --> 00:22:51.380
You're at this logical place
from which you can go to lots

00:22:51.380 --> 00:22:53.340
of different destinations, and
you can use the drawer to

00:22:53.340 --> 00:22:56.480
accomplish that.

00:22:56.480 --> 00:22:58.980
So now I'd just like to run
through a few examples and we

00:22:58.980 --> 00:23:01.560
can talk about some of the
different uses of the Drawer.

00:23:01.560 --> 00:23:03.640
And I thought I would just go
through a number of the Google

00:23:03.640 --> 00:23:05.390
Apps that have been recently
released that

00:23:05.390 --> 00:23:07.350
make use of the Drawer.

00:23:07.350 --> 00:23:11.640
The first one is Gmail, which
probably many people are well

00:23:11.640 --> 00:23:13.100
acquainted with.

00:23:13.100 --> 00:23:15.250
In the latest version
of Gmail, we've

00:23:15.250 --> 00:23:16.260
introduced the Drawer.

00:23:16.260 --> 00:23:20.710
And the Drawer is used for two
different capabilities.

00:23:20.710 --> 00:23:25.280
The most expected one is that
it's used to move between my

00:23:25.280 --> 00:23:28.250
inbox and other supporting
labels.

00:23:28.250 --> 00:23:31.440
So doing the same kind of
navigation that was previously

00:23:31.440 --> 00:23:35.290
available from a spinner in
the primary action bar.

00:23:35.290 --> 00:23:37.610
It's also accommodating
the ability to

00:23:37.610 --> 00:23:39.560
switch between accounts.

00:23:39.560 --> 00:23:42.980
So at the top of the Drawer, you
see the radio button for

00:23:42.980 --> 00:23:45.330
the currently active account.

00:23:45.330 --> 00:23:48.030
And we would just introduce
more and more of those if

00:23:48.030 --> 00:23:50.540
there were more accounts
present.

00:23:50.540 --> 00:23:53.890
Using the Drawer as an account
switching mechanism is

00:23:53.890 --> 00:23:56.740
something that's used by a
couple of the Google apps.

00:23:56.740 --> 00:23:59.710
You'll notice in Google Drive,
for instance, they also

00:23:59.710 --> 00:24:00.790
support this.

00:24:00.790 --> 00:24:05.380
They use a spinner within the
Drawer in that case, because

00:24:05.380 --> 00:24:08.290
the perception is that account
switching is a less frequently

00:24:08.290 --> 00:24:10.910
require task for Drive users.

00:24:10.910 --> 00:24:13.810
Whereas for Gmail, we have this
stronger presumption of,

00:24:13.810 --> 00:24:16.660
if you have these two Google
accounts, you're likely

00:24:16.660 --> 00:24:18.610
checking mail in both
of those accounts.

00:24:18.610 --> 00:24:21.390
So rather than having a two
touch operation of touch on

00:24:21.390 --> 00:24:25.160
spinner to open, touch on
account to transition, we want

00:24:25.160 --> 00:24:27.120
to expand those account options

00:24:27.120 --> 00:24:28.240
directly into the Drawer.

00:24:28.240 --> 00:24:30.910
So we use the radio button
approach there.

00:24:30.910 --> 00:24:34.050
The Drawer also makes
use of additional

00:24:34.050 --> 00:24:35.140
content for the items.

00:24:35.140 --> 00:24:37.940
You're seeing counts of unread
items for each of

00:24:37.940 --> 00:24:39.550
the selected labels.

00:24:39.550 --> 00:24:43.570
Again, more kind of metadata
that helps guide a user to

00:24:43.570 --> 00:24:46.200
which destination they
may wish to go to.

00:24:46.200 --> 00:24:48.910
The other thing that's good to
note about the way that Gmail

00:24:48.910 --> 00:24:52.250
uses the Drawer, is the way
that the action transforms

00:24:52.250 --> 00:24:53.750
when the Drawer is open.

00:24:53.750 --> 00:24:56.590
So in it's kind of natural
state, when you're looking at

00:24:56.590 --> 00:25:00.480
the Inbox, you have actions
for Compose or for Search.

00:25:00.480 --> 00:25:03.410
And those are operations that
relate specifically to that

00:25:03.410 --> 00:25:05.250
account that you have present.

00:25:05.250 --> 00:25:08.000
You're going to be generating a
new email from that account,

00:25:08.000 --> 00:25:10.510
you'll be searching the content
of that account.

00:25:10.510 --> 00:25:13.050
Because the Drawer covers
content that could be from

00:25:13.050 --> 00:25:15.860
multiple accounts, when we open
that, those actions are

00:25:15.860 --> 00:25:18.790
suppressed and they just
disappear from the action bar.

00:25:18.790 --> 00:25:21.470
We always want the actions
that you show within the

00:25:21.470 --> 00:25:24.780
action bar when the Drawer is
open, to relate to the entire

00:25:24.780 --> 00:25:25.950
application context.

00:25:25.950 --> 00:25:28.350
So we just kind of remove those
that have a tighter

00:25:28.350 --> 00:25:31.070
focus or tighter scope.

00:25:31.070 --> 00:25:33.410
ROMAN NURIK: So I had one
quick question, I guess.

00:25:33.410 --> 00:25:37.110
So here in Gmail we see the use
of standard hollow list

00:25:37.110 --> 00:25:40.030
headers to indicate different
segments or

00:25:40.030 --> 00:25:42.030
different sections of labels.

00:25:42.030 --> 00:25:45.250
And above that you, obviously,
have the account types, or the

00:25:45.250 --> 00:25:46.530
accounts to choose from.

00:25:46.530 --> 00:25:50.680
Whereas you guys also talked
about the options that have

00:25:50.680 --> 00:25:51.820
collapsible items.

00:25:51.820 --> 00:25:53.885
Can you talk a little bit about
the difference when you

00:25:53.885 --> 00:25:55.310
would use one versus
the other?

00:25:55.310 --> 00:25:55.830
RICH FULCHER: Sure.

00:25:55.830 --> 00:25:56.450
Sure.

00:25:56.450 --> 00:26:00.870
So for Gmail we just kind of
expand all of those items and

00:26:00.870 --> 00:26:02.670
don't use a collapse.

00:26:02.670 --> 00:26:05.800
Largely because the relative
ordering of the items within

00:26:05.800 --> 00:26:09.870
there kind of naturally supports
the most frequently

00:26:09.870 --> 00:26:12.680
used destinations appearing
at the top, and then just

00:26:12.680 --> 00:26:15.230
supporting a continuous
scroll, with a very

00:26:15.230 --> 00:26:17.490
predictable order to it.

00:26:17.490 --> 00:26:21.330
Once I get kind of past my
recent or system level labels,

00:26:21.330 --> 00:26:24.930
I'm just in an A to Z listing
of all the labels that I've

00:26:24.930 --> 00:26:27.830
created, or that I manage.

00:26:27.830 --> 00:26:31.660
So there's not a lot of need, in
that case, to, since it is

00:26:31.660 --> 00:26:35.980
really just one collection that
you're opening, to have

00:26:35.980 --> 00:26:38.730
more fine grain controls
over that presentation.

00:26:38.730 --> 00:26:42.460
If, however, you had a number
of such categories, you

00:26:42.460 --> 00:26:45.060
wouldn't want the user to have
to scroll through the full

00:26:45.060 --> 00:26:47.410
contents of the second and third
category to get to the

00:26:47.410 --> 00:26:48.560
fourth one.

00:26:48.560 --> 00:26:51.910
And so in those types of
situations, compacting makes a

00:26:51.910 --> 00:26:53.780
lot of sense.

00:26:53.780 --> 00:26:59.500
You're using the option to
compact or expand those items

00:26:59.500 --> 00:27:03.040
as a way to accelerate the user
getting to the sub items

00:27:03.040 --> 00:27:05.290
that they need to reach.

00:27:05.290 --> 00:27:05.860
ROMAN NURIK: Makes sense.

00:27:05.860 --> 00:27:06.430
Thanks.

00:27:06.430 --> 00:27:07.500
RICH FULCHER: Sure.

00:27:07.500 --> 00:27:10.580
NICK BUTCHER: While we're
talking about having different

00:27:10.580 --> 00:27:13.630
groups of content, and also the
expanding and collapsing

00:27:13.630 --> 00:27:15.960
pattern, do you have any
recommendations about the

00:27:15.960 --> 00:27:16.770
maximum size?

00:27:16.770 --> 00:27:20.490
I mean, you probably wouldn't
want some unbounded list in a

00:27:20.490 --> 00:27:21.660
Navigation Drawer, right?

00:27:21.660 --> 00:27:26.640
Do you have any guidelines about
where we might stop?

00:27:26.640 --> 00:27:27.190
RICH FULCHER: Yeah.

00:27:27.190 --> 00:27:29.610
I think the strongest guideline
is that you don't

00:27:29.610 --> 00:27:34.555
want to try to replicate all
the data that your app is

00:27:34.555 --> 00:27:36.800
trying to express inside
of the Drawer.

00:27:36.800 --> 00:27:40.330
Now, if you find that you have a
lot of targets but they have

00:27:40.330 --> 00:27:44.500
a very predictable ordering to
them-- so you may have a user

00:27:44.500 --> 00:27:49.260
who uses dozens of
labels in Gmail--

00:27:49.260 --> 00:27:52.290
that's still a fairly suitable
usage because, again, it's

00:27:52.290 --> 00:27:54.050
highly predictable, you
know exactly what

00:27:54.050 --> 00:27:54.980
you're going to get.

00:27:54.980 --> 00:27:58.960
And the content that you're
trying to express for each is,

00:27:58.960 --> 00:28:00.330
kind of, pretty tight.

00:28:00.330 --> 00:28:02.490
It's really just a label
and account.

00:28:05.090 --> 00:28:07.930
For other situations where you
have more content, where it's

00:28:07.930 --> 00:28:13.410
dynamic, where that's changing
on a more regular basis, those

00:28:13.410 --> 00:28:16.490
are the kind of things that
I think work less well as

00:28:16.490 --> 00:28:18.290
navigation.

00:28:18.290 --> 00:28:21.230
And it might just be that you
kind of need to pull those out

00:28:21.230 --> 00:28:25.780
and express them in the full
context of your app, rather

00:28:25.780 --> 00:28:27.120
than just trying to accommodate

00:28:27.120 --> 00:28:28.380
them into the Drawer.

00:28:28.380 --> 00:28:31.640
And I would say, in general,
if you don't fit into this

00:28:31.640 --> 00:28:35.430
notion of having categories or
well ordered sets of content,

00:28:35.430 --> 00:28:38.740
and you're finding that you
have a lot of distinct

00:28:38.740 --> 00:28:43.140
navigation destinations within
the Drawer, it might be taking

00:28:43.140 --> 00:28:44.260
a little bit--

00:28:44.260 --> 00:28:46.840
it might be worth taking a
little step back and kind of

00:28:46.840 --> 00:28:49.450
thinking about how you're
structuring your application.

00:28:49.450 --> 00:28:52.480
It may, simply, just
be too broad.

00:28:52.480 --> 00:28:56.370
There might be ways that you
could, in a sense, lose a

00:28:56.370 --> 00:29:00.170
little bit of speed of accessing
this wide breadth of

00:29:00.170 --> 00:29:03.550
options, by adding a little
bit more depth to your

00:29:03.550 --> 00:29:04.760
application.

00:29:04.760 --> 00:29:08.720
And as a result, making it just
more naturally and easily

00:29:08.720 --> 00:29:11.790
understood by the user, and
taking advantage of the

00:29:11.790 --> 00:29:16.540
relationship between distinct
but related destinations that

00:29:16.540 --> 00:29:21.270
maybe want to get presented in a
more combined format further

00:29:21.270 --> 00:29:22.910
down the apps hierarchy.

00:29:22.910 --> 00:29:25.590
ROMAN NURIK: We've definitely
given folks the feedback in

00:29:25.590 --> 00:29:28.220
the past that, hey, your
app is doing too much.

00:29:28.220 --> 00:29:31.260
Focus on the couple of things
you can do really well and do

00:29:31.260 --> 00:29:35.000
those, and, obviously then
your list of different

00:29:35.000 --> 00:29:37.790
sections in the app gets trimmed
down to something

00:29:37.790 --> 00:29:39.740
smaller and more manageable.

00:29:39.740 --> 00:29:41.500
But we've definitely given the
feedback that maybe this is

00:29:41.500 --> 00:29:44.400
multiple apps, or maybe you
should trim out some of the

00:29:44.400 --> 00:29:47.430
functionality that
you don't need.

00:29:47.430 --> 00:29:53.410
JENS NAGEL: And I think on the
lower end we talked about

00:29:53.410 --> 00:29:57.790
three top levels as a
starting point of--

00:29:57.790 --> 00:30:02.150
four top levels, I should say,
as the starting point for

00:30:02.150 --> 00:30:06.510
using the Navigation Drawer.

00:30:06.510 --> 00:30:08.970
You want to make sure that
the Navigation Drawer

00:30:08.970 --> 00:30:11.460
is not under populated.

00:30:11.460 --> 00:30:16.050
So if you, for example, imagine
Navigation Drawer only

00:30:16.050 --> 00:30:21.570
having two items, three items,
it feels too much white space.

00:30:21.570 --> 00:30:25.390
It feels too under populated,
and there are other top level

00:30:25.390 --> 00:30:29.470
switching mechanisms that could
be a better choice.

00:30:29.470 --> 00:30:31.150
RICH FULCHER: That's actually
a great lead into the next

00:30:31.150 --> 00:30:34.540
example I wanted to cover, which
is the way that the Play

00:30:34.540 --> 00:30:36.880
apps make use of the
Navigation Drawer.

00:30:36.880 --> 00:30:39.480
So what you're seeing here are
the Play Music and the Play

00:30:39.480 --> 00:30:40.920
Books path.

00:30:40.920 --> 00:30:45.520
At the left, Play Music opens
up and it has five different

00:30:45.520 --> 00:30:47.050
navigation options.

00:30:47.050 --> 00:30:48.330
And could add more.

00:30:48.330 --> 00:30:51.560
It's scalable, so as there are
more ways of consuming your

00:30:51.560 --> 00:30:55.020
music, we can naturally
suit that in.

00:30:55.020 --> 00:30:56.240
That's also, I think,
something that

00:30:56.240 --> 00:30:58.770
goes into that decision.

00:30:58.770 --> 00:31:02.190
Not just kind of where you are
immediately in your app, but

00:31:02.190 --> 00:31:04.900
what you see the road map for
the next version or the

00:31:04.900 --> 00:31:06.700
version after that.

00:31:06.700 --> 00:31:10.450
So kind of planning ahead for
more significant navigation

00:31:10.450 --> 00:31:13.430
needs might also be a good
reason to adopt the Drawer

00:31:13.430 --> 00:31:14.940
slightly early.

00:31:14.940 --> 00:31:21.450
But in this particular case,
we've got somewhat symmetric

00:31:21.450 --> 00:31:24.550
ordering of the options between
these two different

00:31:24.550 --> 00:31:27.240
apps, the focus on different
types of media.

00:31:27.240 --> 00:31:30.420
They both start with kind of
this now oriented context,

00:31:30.420 --> 00:31:33.400
either Listen Now for Music
or Read Now for Books.

00:31:33.400 --> 00:31:35.540
They then go into kind of
looking at the way your

00:31:35.540 --> 00:31:38.540
library is structured and
ways you can consume it.

00:31:38.540 --> 00:31:41.020
Music has more options in that
regard, because it also

00:31:41.020 --> 00:31:44.500
supports playlists and
instant mixes.

00:31:44.500 --> 00:31:47.630
But it's, still, those
are versions of how

00:31:47.630 --> 00:31:49.170
is the content organized?

00:31:49.170 --> 00:31:52.110
And both of these Navigation
Drawers then terminate with a

00:31:52.110 --> 00:31:54.850
Shop option, which is actually
not even an internal

00:31:54.850 --> 00:31:55.540
navigation.

00:31:55.540 --> 00:31:58.750
It's a hand off to
the Play store.

00:31:58.750 --> 00:32:02.530
By presenting those similar
structures and similar orders

00:32:02.530 --> 00:32:05.440
between these different but
related applications, you're

00:32:05.440 --> 00:32:07.700
helping the user build up a good
mental model of what they

00:32:07.700 --> 00:32:11.600
expect a Play app to feel like,
and how they can quickly

00:32:11.600 --> 00:32:14.370
learn ways to navigate them and
apply what they learn in

00:32:14.370 --> 00:32:16.810
one context to another.

00:32:16.810 --> 00:32:19.180
ROMAN NURIK: One of the nice
side effects, I guess, of

00:32:19.180 --> 00:32:22.890
having Shop open up the Play
store, is that, actually, the

00:32:22.890 --> 00:32:26.520
Play store also uses the
branded, single accent color

00:32:26.520 --> 00:32:27.950
action bar.

00:32:27.950 --> 00:32:31.920
Once you jump into the shop for
books area, you actually

00:32:31.920 --> 00:32:35.130
get a blue action bar with
the books icon and so on.

00:32:35.130 --> 00:32:36.930
Actually, no, it's the Play
icon at the top left.

00:32:36.930 --> 00:32:39.880
But there is some kind of
persistence of state.

00:32:39.880 --> 00:32:42.100
You're not jumping into
a completely separate

00:32:42.100 --> 00:32:43.170
experience.

00:32:43.170 --> 00:32:45.610
It's still kind of part of the
same family of products.

00:32:45.610 --> 00:32:46.560
RICH FULCHER: Yes, definitely.

00:32:46.560 --> 00:32:49.590
And then you're kind of back
navigation away has some

00:32:49.590 --> 00:32:50.930
interesting effects
there as well.

00:32:50.930 --> 00:32:53.450
ROMAN NURIK: Right.

00:32:53.450 --> 00:32:56.890
RICH FULCHER: The next example I
wanted to look at was Google

00:32:56.890 --> 00:33:00.870
Earth, which has some slightly
nontraditional usage of the

00:33:00.870 --> 00:33:03.760
Navigation Drawer, but I just
wanted to talk about this a

00:33:03.760 --> 00:33:05.940
little bit because I think
it's interesting.

00:33:05.940 --> 00:33:09.820
The first thing I'll point out
is that Earth doesn't use a

00:33:09.820 --> 00:33:12.220
proper action bar.

00:33:12.220 --> 00:33:16.370
Because it's a very search
focused activity, it uses that

00:33:16.370 --> 00:33:18.560
real estate that you would
expect an action bar to use at

00:33:18.560 --> 00:33:21.910
the top, to present a field
where the user can always

00:33:21.910 --> 00:33:25.550
touch to put in a destination
that they'd like to refocus

00:33:25.550 --> 00:33:27.170
that view upon.

00:33:27.170 --> 00:33:32.070
And it doesn't have the standard
actions or overflow

00:33:32.070 --> 00:33:34.120
at the right hand side
that a normal

00:33:34.120 --> 00:33:35.500
action bar would present.

00:33:35.500 --> 00:33:38.820
But it still can present the app
icon, and it can present

00:33:38.820 --> 00:33:41.440
the glyph indicating the
presence of the Drawer.

00:33:41.440 --> 00:33:45.080
And then touching that
effectively leaves the action

00:33:45.080 --> 00:33:45.840
bar in place.

00:33:45.840 --> 00:33:49.690
Again, it's not an action bar,
but it's giving it that same

00:33:49.690 --> 00:33:52.310
kind of stability that the
Drawer would expect, and just

00:33:52.310 --> 00:33:55.780
kind of sliding the content
of the Drawer in, sitting

00:33:55.780 --> 00:34:00.330
properly beneath that
pseudo action bar.

00:34:00.330 --> 00:34:03.540
Earth uses the Navigation
Drawer, not so much for

00:34:03.540 --> 00:34:05.630
navigation, although it does
have elements of that.

00:34:05.630 --> 00:34:08.060
In fact, Earth Gallery Target
at the bottom is a proper

00:34:08.060 --> 00:34:09.989
navigation link.

00:34:09.989 --> 00:34:14.040
But it's using it to, in effect,
filter the view or set

00:34:14.040 --> 00:34:17.600
preferences about the level of
detail that you want to see in

00:34:17.600 --> 00:34:20.360
the primary view.

00:34:20.360 --> 00:34:24.139
Another option for this would
have been to continue to use

00:34:24.139 --> 00:34:25.980
the Drawer pattern,
but to rely on a

00:34:25.980 --> 00:34:27.710
right hand side Drawer.

00:34:27.710 --> 00:34:32.520
Instead of kind of trying to
present it in the traditional

00:34:32.520 --> 00:34:33.639
navigation space.

00:34:33.639 --> 00:34:35.880
You could present it
at right and make

00:34:35.880 --> 00:34:37.540
it more about filtering.

00:34:37.540 --> 00:34:40.420
But there are trade offs
involved in that, as well, in

00:34:40.420 --> 00:34:43.889
terms of how you indicate the
presence of that Drawer and

00:34:43.889 --> 00:34:45.690
how that would affect the
action bar and even the

00:34:45.690 --> 00:34:47.900
branding that comes
with having the

00:34:47.900 --> 00:34:51.030
app icon at the top.

00:34:51.030 --> 00:34:56.719
Relatedly, if you look at the
Google One Today application,

00:34:56.719 --> 00:34:59.630
this is an application that's
focused on charitable giving

00:34:59.630 --> 00:35:03.420
and encourages users through
a notification, to make $1

00:35:03.420 --> 00:35:08.600
donation every day to various
organizations and efforts.

00:35:08.600 --> 00:35:10.880
It uses both a left and
a right Drawer.

00:35:10.880 --> 00:35:13.170
And I think it does a really
excellent job.

00:35:13.170 --> 00:35:16.115
The left Drawer is standard
navigation.

00:35:16.115 --> 00:35:18.910
You open it up and you can move
between either looking at

00:35:18.910 --> 00:35:21.980
the current offer or other
things like looking at your

00:35:21.980 --> 00:35:24.270
profile, your giving history.

00:35:24.270 --> 00:35:27.200
The right hand side Drawer is
focused on notifications.

00:35:27.200 --> 00:35:30.180
And its invoked either by a
right edge swipe-- a right to

00:35:30.180 --> 00:35:31.400
left edge swipe--

00:35:31.400 --> 00:35:36.110
or by touching on the
Notification Count action in

00:35:36.110 --> 00:35:37.100
the action bar.

00:35:37.100 --> 00:35:38.750
And touching there does
the exact same

00:35:38.750 --> 00:35:39.760
animation you would see.

00:35:39.760 --> 00:35:43.140
So you'd see it kind of slide
in from the side.

00:35:43.140 --> 00:35:45.930
Teaching you again that you
can probably perform this

00:35:45.930 --> 00:35:49.170
gesture to invoke it, using
the animation to tell that

00:35:49.170 --> 00:35:53.480
story to the user about how
that Drawer performs.

00:35:53.480 --> 00:35:55.980
And these Drawers actually can
move directly from one to the

00:35:55.980 --> 00:35:57.230
other, as well.

00:35:57.230 --> 00:35:57.980
Which is--

00:35:57.980 --> 00:36:01.540
you're going to play with it
to see the effect, but it's

00:36:01.540 --> 00:36:02.330
really neatly done.

00:36:02.330 --> 00:36:05.840
They kind of chase each other
at proper speed, and the

00:36:05.840 --> 00:36:07.880
animations well implemented.

00:36:10.820 --> 00:36:11.390
ROMAN NURIK: Awesome.

00:36:11.390 --> 00:36:14.200
So I think that's
all content--

00:36:14.200 --> 00:36:15.630
the pre-canned content--
you guys had

00:36:15.630 --> 00:36:16.560
about Navigation Drawers.

00:36:16.560 --> 00:36:19.500
And obviously, for folks that
are looking to implement this,

00:36:19.500 --> 00:36:20.570
couple of quick points.

00:36:20.570 --> 00:36:22.436
All the design guidelines are
available on developer.androi

00:36:22.436 --> 00:36:23.686
d.com/design/pat
terns/navigation-drawer.

00:36:28.000 --> 00:36:28.640
Something like that.

00:36:28.640 --> 00:36:30.870
Just go to the design site
and you'll see it there.

00:36:30.870 --> 00:36:32.610
And the second thing is, if
you're a developer looking to

00:36:32.610 --> 00:36:36.290
implement this, Nick and
I actually did an I/O

00:36:36.290 --> 00:36:39.010
presentation on Navigation
Drawers.

00:36:39.010 --> 00:36:42.005
Actually, we talked about other
things as well, but the

00:36:42.005 --> 00:36:45.170
Android Designed for UI
Developers presentation has

00:36:45.170 --> 00:36:46.560
implementation tips.

00:36:46.560 --> 00:36:51.150
And also, Rich and Jens, you
guys did a presentation at I/O

00:36:51.150 --> 00:36:53.730
about structure and
app design, right.

00:36:53.730 --> 00:36:55.760
So this is also well
covered there.

00:36:55.760 --> 00:36:59.030
So lots of good resources
outside of this video if

00:36:59.030 --> 00:37:00.250
you're looking to implement.

00:37:00.250 --> 00:37:03.280
So I think we have about
a few minutes left.

00:37:03.280 --> 00:37:05.700
We should probably go through
a couple questions.

00:37:05.700 --> 00:37:07.690
I know there's some burning
hot questions from the

00:37:07.690 --> 00:37:10.000
community that I wanted
to ask you guys.

00:37:10.000 --> 00:37:13.370
We probably have time
for three or four.

00:37:13.370 --> 00:37:16.120
Let's start with one of
the popular ones.

00:37:16.120 --> 00:37:20.550
So a lot of the community
implementations of Navigation

00:37:20.550 --> 00:37:23.450
Drawers out there, actually,
rather than overlaying

00:37:23.450 --> 00:37:26.060
content, they slide it out of
the way-- or I guess, they

00:37:26.060 --> 00:37:28.440
kind of push it to the side.

00:37:28.440 --> 00:37:31.100
Some push the action
bar, some don't.

00:37:31.100 --> 00:37:33.650
But our pattern, our
implementation actually

00:37:33.650 --> 00:37:34.650
overlays the content.

00:37:34.650 --> 00:37:37.830
Can you guys talk a little bit
about the reasoning and the

00:37:37.830 --> 00:37:40.890
decision making process
for that?

00:37:40.890 --> 00:37:42.210
RICH FULCHER: Sure.

00:37:42.210 --> 00:37:44.440
Let me break it into two parts,
because I think there's

00:37:44.440 --> 00:37:47.190
kind of two interesting things
that we're looking at pretty

00:37:47.190 --> 00:37:49.570
extensively during our
exploration of this.

00:37:49.570 --> 00:37:51.150
The first is the question
of keeping the

00:37:51.150 --> 00:37:52.800
action bar in place.

00:37:52.800 --> 00:37:54.500
And that was a decision
we were able to

00:37:54.500 --> 00:37:56.450
come to fairly quickly.

00:37:56.450 --> 00:37:58.580
We thought there was a lot
of value to kind of--

00:37:58.580 --> 00:38:02.230
even as that Drawer component
comes in, keeping a stable

00:38:02.230 --> 00:38:05.230
element that just really speaks
to the identity and the

00:38:05.230 --> 00:38:08.030
context that you're currently
within, within the

00:38:08.030 --> 00:38:09.180
application.

00:38:09.180 --> 00:38:12.500
It gave us the ability to
transform the action set to

00:38:12.500 --> 00:38:15.930
open up and show actions that
maybe weren't in the immediate

00:38:15.930 --> 00:38:19.230
context, but had global
relevance to the app and could

00:38:19.230 --> 00:38:23.000
be convenient accelerators for
things you would want to do

00:38:23.000 --> 00:38:25.050
from any context.

00:38:25.050 --> 00:38:28.340
So we very early on latched onto
the idea that we'd want

00:38:28.340 --> 00:38:30.660
to keep the action
bar present.

00:38:30.660 --> 00:38:33.880
We definitely looked a lot at,
should we push the content, or

00:38:33.880 --> 00:38:36.400
should we slide the
panel over?

00:38:36.400 --> 00:38:40.630
I think we had a gut instinct
that we thought slide was

00:38:40.630 --> 00:38:43.890
going to be interesting because
of the desire to--

00:38:43.890 --> 00:38:45.480
as Jens talked about before--

00:38:45.480 --> 00:38:47.800
of bringing the Drawer
in from deeper

00:38:47.800 --> 00:38:49.490
levels of the hierarchy.

00:38:49.490 --> 00:38:51.470
That even when the affordance
wasn't there, you'd want to be

00:38:51.470 --> 00:38:52.740
able to bring the Drawer in.

00:38:52.740 --> 00:38:57.110
And it felt more natural to us
to think of it sliding over as

00:38:57.110 --> 00:39:00.740
opposed to existing to the left
of all of these different

00:39:00.740 --> 00:39:03.250
spaces of hierarchy.

00:39:03.250 --> 00:39:07.770
And more thinking and more
experimentation with that let

00:39:07.770 --> 00:39:10.210
us to just, as we were playing
with these different

00:39:10.210 --> 00:39:11.550
prototypes--

00:39:11.550 --> 00:39:14.270
we always put a strong focus
on the importance of direct

00:39:14.270 --> 00:39:15.760
manipulation to the user.

00:39:15.760 --> 00:39:18.870
That we want them to feel like,
when their finger goes

00:39:18.870 --> 00:39:21.490
down on a device and they start
moving it, that the

00:39:21.490 --> 00:39:24.530
content is really strongly
anchored to that, and

00:39:24.530 --> 00:39:27.190
responding directly.

00:39:27.190 --> 00:39:30.390
If we were to do the push,
there are some conditions

00:39:30.390 --> 00:39:32.010
where that wouldn't
feel that way.

00:39:32.010 --> 00:39:35.590
So if it's that I have my main
screen and then beside the

00:39:35.590 --> 00:39:38.890
Drawer sits and it's just kind
of slightly off screen, well,

00:39:38.890 --> 00:39:40.750
if those two are really married
together in that way,

00:39:40.750 --> 00:39:44.460
then you would expect that a
drag, a kind of a poll on that

00:39:44.460 --> 00:39:47.640
main surface, would bring
the Drawer in naturally.

00:39:47.640 --> 00:39:50.200
If we were to do that, then you
wouldn't be able to do the

00:39:50.200 --> 00:39:53.270
swipe to do any other action
within that main view.

00:39:53.270 --> 00:39:56.060
You couldn't use a view
pager, you couldn't

00:39:56.060 --> 00:39:58.560
use swipe to dismiss.

00:39:58.560 --> 00:40:02.450
In the Earth example you
couldn't even pan within the

00:40:02.450 --> 00:40:05.670
view of the globe that
you're seeing there.

00:40:05.670 --> 00:40:08.830
ROMAN NURIK: That would
be a non starter.

00:40:08.830 --> 00:40:13.990
RICH FULCHER: Yeah, so we didn't
want to set up this

00:40:13.990 --> 00:40:17.310
relationship that didn't feel
authentic, and feel true for

00:40:17.310 --> 00:40:18.840
all of these manipulation.

00:40:18.840 --> 00:40:22.260
So by saying no, it's an edge
swipe, and that's pulling it,

00:40:22.260 --> 00:40:25.470
and it's just pulling this
surface and not affecting the

00:40:25.470 --> 00:40:29.010
one that you're not touching,
we felt like that gave the

00:40:29.010 --> 00:40:30.700
most direct feedback.

00:40:30.700 --> 00:40:34.350
And just simply felt the
best to users as we

00:40:34.350 --> 00:40:36.511
experimented with it.

00:40:36.511 --> 00:40:36.970
ROMAN NURIK: Awesome.

00:40:36.970 --> 00:40:41.420
JENS NAGEL: And I also think
that it somewhat has a more

00:40:41.420 --> 00:40:46.990
non-modal feel to it in that
if you like a little

00:40:46.990 --> 00:40:52.790
navigation helper that you can
pull on screen that does not

00:40:52.790 --> 00:40:58.120
give you the impression that
this level that you're pushing

00:40:58.120 --> 00:41:02.220
out of the way is directly
linked to the content that

00:41:02.220 --> 00:41:03.850
you're pulling onto
the screen.

00:41:03.850 --> 00:41:09.160
So the two only have an
indirect hierarchical

00:41:09.160 --> 00:41:10.650
relationship.

00:41:10.650 --> 00:41:15.350
Whereas, if you push the content
all the way they sort

00:41:15.350 --> 00:41:19.220
of feel like they're stuck
together, and one is directly

00:41:19.220 --> 00:41:21.640
subordinate to the other.

00:41:21.640 --> 00:41:25.690
And that sort of would not work
if you pull in something

00:41:25.690 --> 00:41:28.080
from the lower levels
of the screen, as

00:41:28.080 --> 00:41:31.115
Richard pointed out earlier.

00:41:31.115 --> 00:41:33.860
ROMAN NURIK: Makes sense.

00:41:33.860 --> 00:41:36.110
Nick, did you have
any questions?

00:41:36.110 --> 00:41:36.370
NICK BUTCHER: Yeah.

00:41:36.370 --> 00:41:39.260
I wanted to ask a little bit
more about right hand Drawers.

00:41:39.260 --> 00:41:41.582
You touched on it a little
bit in the talking about

00:41:41.582 --> 00:41:43.820
Earth and One Today.

00:41:43.820 --> 00:41:46.790
But it's not saying we
particularly documented in the

00:41:46.790 --> 00:41:48.130
design guidelines.

00:41:48.130 --> 00:41:51.740
So the way I see it is we're
kind of sticking to the

00:41:51.740 --> 00:41:54.050
general arrangement with
the action bars.

00:41:54.050 --> 00:41:57.010
So Navigation is always on the
left, and Actions tend to be

00:41:57.010 --> 00:41:58.130
on the right hand side.

00:41:58.130 --> 00:42:01.100
So that's the way you see a
break down so it's perfectly

00:42:01.100 --> 00:42:03.120
legitimate to use a left hand
Drawer and a right hand

00:42:03.120 --> 00:42:06.150
Drawer, or one or the other.

00:42:06.150 --> 00:42:08.530
JENS NAGEL: Yeah.

00:42:08.530 --> 00:42:09.410
So, definitely.

00:42:09.410 --> 00:42:14.690
As we've seen in the example
with Google Earth, one option

00:42:14.690 --> 00:42:18.600
could have been to take all
the settings content--

00:42:18.600 --> 00:42:21.160
which is not directly
navigation content--

00:42:21.160 --> 00:42:23.090
move it over to the right.

00:42:23.090 --> 00:42:28.490
But for me, I sometimes break
it down as things on the

00:42:28.490 --> 00:42:33.360
right, the actions or settings
that usually are in the

00:42:33.360 --> 00:42:38.050
overflow, they're contextual
to the view.

00:42:38.050 --> 00:42:42.450
So if I pull in something from
the right, invoke an action,

00:42:42.450 --> 00:42:48.720
or do customizations of a view,
they're all directly

00:42:48.720 --> 00:42:50.890
related to the view that I'm
currently looking at.

00:42:50.890 --> 00:42:55.550
Whereas Navigation is more
at the meta level.

00:42:55.550 --> 00:42:59.610
It helps me to reach the
different destinations inside

00:42:59.610 --> 00:43:04.200
of my app, whereas the right
hand stuff manipulates the

00:43:04.200 --> 00:43:05.910
stuff that I'm currently
looking at.

00:43:08.930 --> 00:43:09.390
ROMAN NURIK: Cool.

00:43:09.390 --> 00:43:11.320
So I had two more questions.

00:43:11.320 --> 00:43:13.910
I'll ask the first one
first I guess.

00:43:13.910 --> 00:43:17.300
So Google Hangouts is another
application that was released

00:43:17.300 --> 00:43:20.830
recently, and it actually uses
something that is similar,

00:43:20.830 --> 00:43:22.250
somewhat similar to
the Navigation

00:43:22.250 --> 00:43:23.930
Drawer, but it's different.

00:43:23.930 --> 00:43:26.390
So for developers out there it's
really the differences

00:43:26.390 --> 00:43:29.350
between Drawer layout and
Sliding Pane layout.

00:43:29.350 --> 00:43:31.410
So can you guys talk a little
bit about the difference

00:43:31.410 --> 00:43:33.930
between something like a
Navigation Drawer and

00:43:33.930 --> 00:43:37.240
something like what Google
Hangouts uses to kind of have

00:43:37.240 --> 00:43:39.500
list of stuff on the left and
details on the right?

00:43:39.500 --> 00:43:39.920
RICH FULCHER: Sure.

00:43:39.920 --> 00:43:40.330
Sure.

00:43:40.330 --> 00:43:43.880
I mean, I think the easiest
way to think about that

00:43:43.880 --> 00:43:47.440
difference is to kind of take
a slight step back and think

00:43:47.440 --> 00:43:48.790
about how--

00:43:48.790 --> 00:43:51.830
what function the different
elements are trying to perform

00:43:51.830 --> 00:43:53.740
within each of those contexts.

00:43:53.740 --> 00:43:58.110
So the traditional Navigation
Drawer is, in a sense it's, I

00:43:58.110 --> 00:44:01.260
want to get away from the
current context and I want to

00:44:01.260 --> 00:44:02.180
go somewhere else.

00:44:02.180 --> 00:44:04.760
What's currently here isn't
interesting me anymore, so I

00:44:04.760 --> 00:44:07.130
want to go elsewhere.

00:44:07.130 --> 00:44:09.410
For Hangouts, it's a
slightly different

00:44:09.410 --> 00:44:11.910
case, for a few reasons.

00:44:11.910 --> 00:44:14.900
One is that, the two panes
that are interacting, for

00:44:14.900 --> 00:44:18.430
those who haven't used it, it's
kind of a list of all the

00:44:18.430 --> 00:44:20.740
conversations that
I have ongoing.

00:44:20.740 --> 00:44:24.800
And then that intersects with
a detailed view of the given

00:44:24.800 --> 00:44:28.330
conversation, which appears to
slide in front of it but leave

00:44:28.330 --> 00:44:31.310
a slight edge of the
conversation view--

00:44:31.310 --> 00:44:33.990
conversation lists
still in place.

00:44:33.990 --> 00:44:37.690
That list of conversations is
not as simple as a set of data

00:44:37.690 --> 00:44:41.180
objects as a normal Navigation
Drawer would use.

00:44:41.180 --> 00:44:44.140
It's not just a label
and perhaps a count.

00:44:44.140 --> 00:44:47.910
It's who is in this
conversation, it's an icon

00:44:47.910 --> 00:44:50.310
that might be an aggregate
of up to four different

00:44:50.310 --> 00:44:54.880
participants, it may have a
snippet what the last message

00:44:54.880 --> 00:44:56.460
was and who said it.

00:44:56.460 --> 00:44:59.020
If it's an image, it could be
a preview of the image.

00:44:59.020 --> 00:45:01.580
If there's a ongoing video
Hangout that's there that may

00:45:01.580 --> 00:45:02.380
be indicated.

00:45:02.380 --> 00:45:03.850
It may be time stamped.

00:45:03.850 --> 00:45:06.350
It has kind of a read,
unread status.

00:45:06.350 --> 00:45:10.430
So there's actually a lot of
data that every item in that

00:45:10.430 --> 00:45:13.870
conversation list is
communicating.

00:45:13.870 --> 00:45:15.590
And it's completely dynamic.

00:45:15.590 --> 00:45:19.180
You can swipe it away, you can
archive conversations, new

00:45:19.180 --> 00:45:22.610
conversations can come in,
conversations can reorder.

00:45:22.610 --> 00:45:25.940
And all of those things make
it kind of significantly

00:45:25.940 --> 00:45:27.975
distinct from what we would
traditionally use a Navigation

00:45:27.975 --> 00:45:29.880
Drawer for.

00:45:29.880 --> 00:45:33.630
So because of those reasons, we
wanted to still have that

00:45:33.630 --> 00:45:36.720
sense of the relationship
between the panel and the

00:45:36.720 --> 00:45:39.870
notion of, even when I'm within
the detailed view of

00:45:39.870 --> 00:45:44.810
one particular Hangout, I can
still see what's going on in

00:45:44.810 --> 00:45:45.930
those other Hangouts.

00:45:45.930 --> 00:45:48.810
Especially on tablets and
larger form factors.

00:45:48.810 --> 00:45:51.680
I can get the sense of, oh,
there's a new message here

00:45:51.680 --> 00:45:53.010
because that moved up.

00:45:53.010 --> 00:45:55.410
And there's a new person talking
there, perhaps, and

00:45:55.410 --> 00:45:57.640
these other ones are just
decaying and they're not

00:45:57.640 --> 00:46:00.900
having anything interesting
happen to them.

00:46:00.900 --> 00:46:05.370
So it had those properties of
more information, dynamic

00:46:05.370 --> 00:46:09.580
content and just the ability to
kind of peek, even without

00:46:09.580 --> 00:46:16.310
having to pull the Drawer in on
some devices, that made it,

00:46:16.310 --> 00:46:19.500
in our estimation, best to use
as a variation in a sense of

00:46:19.500 --> 00:46:20.390
that pattern.

00:46:20.390 --> 00:46:23.060
Rather than just going ahead and
just using the Drawer, or

00:46:23.060 --> 00:46:27.070
just using a simple hierarchic
list where there's no distinct

00:46:27.070 --> 00:46:28.010
relationship.

00:46:28.010 --> 00:46:30.490
We want to create a relationship
between those two

00:46:30.490 --> 00:46:34.920
spaces, but not quite as
strong as the Drawer.

00:46:34.920 --> 00:46:35.650
ROMAN NURIK: OK.

00:46:35.650 --> 00:46:39.100
That actually folds very nicely
into my last question

00:46:39.100 --> 00:46:40.250
that I had.

00:46:40.250 --> 00:46:44.970
So some people, some folks,
may need, or may find

00:46:44.970 --> 00:46:48.430
themselves in cases where
they need some

00:46:48.430 --> 00:46:50.270
sort of dynamic items.

00:46:50.270 --> 00:46:55.960
So for example, let's say I have
three major items like

00:46:55.960 --> 00:46:58.640
Home, Explorer and
Shop, right.

00:46:58.640 --> 00:47:02.140
And then let's say that you
allow the user to Favorite

00:47:02.140 --> 00:47:04.640
certain items throughout the--

00:47:04.640 --> 00:47:06.400
maybe even Favorite
certain sections.

00:47:06.400 --> 00:47:09.840
Like let's say your sports app,
maybe you're Favoriting

00:47:09.840 --> 00:47:12.192
certain leagues or certain
teams, even.

00:47:12.192 --> 00:47:15.030
What do you guys see as--

00:47:15.030 --> 00:47:19.420
or is it appropriate to use,
or to show, these types of

00:47:19.420 --> 00:47:21.770
items in Navigation Drawer?

00:47:21.770 --> 00:47:25.010
JENS NAGEL: I think it's totally
appropriate, and I

00:47:25.010 --> 00:47:29.480
think those collapsible items
are a good way of structuring

00:47:29.480 --> 00:47:30.730
this content.

00:47:32.840 --> 00:47:39.550
If you think, for example,
about an app like Google

00:47:39.550 --> 00:47:43.300
Drive, for example, where you
have certain folders that you

00:47:43.300 --> 00:47:45.170
visit regularly.

00:47:45.170 --> 00:47:48.640
You could employ something like
a frequency, a recency

00:47:48.640 --> 00:47:54.430
scheme, or even an explicit
favorites scheme by starring a

00:47:54.430 --> 00:47:58.690
particular folder, in order
to represent this in the

00:47:58.690 --> 00:48:02.800
Navigation Drawer to make it
quickly accessible once I get

00:48:02.800 --> 00:48:04.290
back to the app.

00:48:04.290 --> 00:48:11.290
So I think those dynamic items
are a nice way of making

00:48:11.290 --> 00:48:15.238
frequently needed content
more accessible.

00:48:15.238 --> 00:48:16.990
ROMAN NURIK: Awesome.

00:48:16.990 --> 00:48:19.410
JENS NAGEL: And on top,
the fact that they are

00:48:19.410 --> 00:48:21.220
collapsible--

00:48:21.220 --> 00:48:24.430
if I can add that--

00:48:24.430 --> 00:48:28.270
sort of helps to keep the
entire layout clean.

00:48:28.270 --> 00:48:32.975
So if I don't want to look at
those options, I can hide them

00:48:32.975 --> 00:48:37.150
and sort of focus on
the pure top level

00:48:37.150 --> 00:48:39.472
navigation, for example.

00:48:39.472 --> 00:48:41.760
ROMAN NURIK: That makes
perfect sense.

00:48:41.760 --> 00:48:44.165
Nick, do you have anything you
want to add real quick before

00:48:44.165 --> 00:48:45.280
we sign off?

00:48:45.280 --> 00:48:45.990
Or any--

00:48:45.990 --> 00:48:48.200
NICK BUTCHER: I wanted to just
pick up on one thing that--

00:48:48.200 --> 00:48:51.300
one of my favorite lines in
the pattern in the design

00:48:51.300 --> 00:48:55.560
guidelines, says that the
Navigation Drawer isn't a good

00:48:55.560 --> 00:48:57.446
fit for every single app out
there and I just wanted you to

00:48:57.446 --> 00:48:58.620
talk about that a little bit.

00:48:58.620 --> 00:49:01.160
I mean, it's kind of like the
hot new thing, right?

00:49:01.160 --> 00:49:04.170
And so lots of cool and
interesting apps are picking

00:49:04.170 --> 00:49:05.555
up on this pattern.

00:49:05.555 --> 00:49:07.680
I can see lots of people
running towards it just

00:49:07.680 --> 00:49:08.960
because it's interesting.

00:49:08.960 --> 00:49:11.500
So I think it's really important
to bear in mind some

00:49:11.500 --> 00:49:13.950
of the guidelines that Jens
pointed out, like when to use

00:49:13.950 --> 00:49:15.295
it [INAUDIBLE].

00:49:15.295 --> 00:49:20.860
And also, I would say, don't
be lazy, as well.

00:49:20.860 --> 00:49:23.430
If you have this extra space in
Navigation Drawer, you can

00:49:23.430 --> 00:49:25.650
see some people might run
towards it and end up just

00:49:25.650 --> 00:49:28.450
chucking the kitchen sink in
there because they have the

00:49:28.450 --> 00:49:33.020
space to play with, much like
your navigation talk from

00:49:33.020 --> 00:49:37.035
Google I/O where you go through
using use cases and

00:49:37.035 --> 00:49:40.140
other modeling tools to really
kind of look at your content

00:49:40.140 --> 00:49:42.790
to work out what the
major barriers are.

00:49:42.790 --> 00:49:45.812
I think that's super important
when deciding what goes in the

00:49:45.812 --> 00:49:47.150
Drawer and what shouldn't.

00:49:47.150 --> 00:49:49.215
You need to really think
about content.

00:49:49.215 --> 00:49:53.490
So I just wanted to say, yeah,
it's an awesome pattern and it

00:49:53.490 --> 00:49:55.580
has some really great use
cases, but it's not for

00:49:55.580 --> 00:49:58.110
everyone, right?

00:49:58.110 --> 00:49:59.010
JENS NAGEL: Exactly.

00:49:59.010 --> 00:50:02.390
As you start to structure your
app you really should spend

00:50:02.390 --> 00:50:06.310
some time on deciding what
your top level navigation

00:50:06.310 --> 00:50:07.440
scheme should be.

00:50:07.440 --> 00:50:10.850
And it really should serve
the purpose of your app.

00:50:10.850 --> 00:50:14.910
So if your top level navigation
is all about spur

00:50:14.910 --> 00:50:18.620
of the moment switching, quick
switching between different

00:50:18.620 --> 00:50:24.540
facets, the fixed tabs are the
best way of doing that.

00:50:24.540 --> 00:50:30.250
Of course, as you have more top
levels, you're running out

00:50:30.250 --> 00:50:34.410
of space there, then you might
have to do something

00:50:34.410 --> 00:50:40.080
different, but even in those
cases, if you think about the

00:50:40.080 --> 00:50:45.880
Google I/O app from this year,
for example, you can think

00:50:45.880 --> 00:50:52.460
about combining certain facets
into one view in order to

00:50:52.460 --> 00:50:55.740
still only have three options
in your fixed tabs.

00:50:55.740 --> 00:51:01.800
So for example, the Google I/O
app used Explore as one tab

00:51:01.800 --> 00:51:08.170
that included maps and, I think,
the different tracks

00:51:08.170 --> 00:51:10.320
for the conference.

00:51:10.320 --> 00:51:16.510
So here we've sort of took the
maps facet and the tracks

00:51:16.510 --> 00:51:21.090
facet and we combined it
into an explore facet.

00:51:21.090 --> 00:51:25.970
And the switching between the
facets using the tap control

00:51:25.970 --> 00:51:31.084
was still super fast
and accessible.

00:51:31.084 --> 00:51:31.740
ROMAN NURIK: Cool.

00:51:31.740 --> 00:51:35.550
And Rich, anything you want
to add before we sign off?

00:51:35.550 --> 00:51:35.750
RICH FULCHER: No.

00:51:35.750 --> 00:51:36.980
I mean, I'll just echo.

00:51:36.980 --> 00:51:39.650
Just don't go with the fad
for the fad's sake.

00:51:39.650 --> 00:51:41.240
Be thoughtful.

00:51:41.240 --> 00:51:43.950
Something we had a lot of fun
doing for the I/O talk was

00:51:43.950 --> 00:51:46.960
just taking the Google apps and
just kind of considering,

00:51:46.960 --> 00:51:49.510
well, what if the app you know
and love used a completely

00:51:49.510 --> 00:51:50.820
different navigation
structure?

00:51:50.820 --> 00:51:52.370
Would that work, what would
that look like,

00:51:52.370 --> 00:51:53.710
would that be suitable?

00:51:53.710 --> 00:51:56.700
That's an exercise that anybody
can do pretty quickly

00:51:56.700 --> 00:52:00.390
just even to pencil sketch it
out, and that, even if you

00:52:00.390 --> 00:52:03.270
don't want to think about it
from this very philosophical

00:52:03.270 --> 00:52:06.140
viewpoint of how navigation
should work, just drawing it

00:52:06.140 --> 00:52:11.450
out and getting a gut sense of
it is pretty significant.

00:52:11.450 --> 00:52:12.220
ROMAN NURIK: Awesome.

00:52:12.220 --> 00:52:14.760
Well I think we've run way over
time, but this is great

00:52:14.760 --> 00:52:17.210
because there's a lot
of good content, a

00:52:17.210 --> 00:52:18.660
lot of new good content.

00:52:18.660 --> 00:52:21.590
A lot of things that weren't
in the guidelines that we

00:52:21.590 --> 00:52:24.140
probably should put in the
guidelines at some point, but

00:52:24.140 --> 00:52:26.820
really, really glad to get you
guys take on the Navigation

00:52:26.820 --> 00:52:29.430
Drawer and all different
aspects of it.

00:52:29.430 --> 00:52:32.670
So with that, thanks everybody
for tuning into a very long

00:52:32.670 --> 00:52:35.060
episode of Android
Design in Action.

00:52:35.060 --> 00:52:37.410
Tune in, I think, next week or
the week after, for some

00:52:37.410 --> 00:52:41.590
pretty interesting more stuff
around Google Play.

00:52:41.590 --> 00:52:43.470
I think, yeah, that's
it for this episode.

00:52:43.470 --> 00:52:44.420
So thanks.

00:52:44.420 --> 00:52:44.860
RICH FULCHER: Great.

00:52:44.860 --> 00:52:45.740
JENS NAGEL: Thanks
for having us.

00:52:45.740 --> 00:52:46.990
RICH FULCHER: Yeah, thanks.

