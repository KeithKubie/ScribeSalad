WEBVTT
Kind: captions
Language: en

00:00:00.670 --> 00:00:03.100
DR. JAMES GRIME: So I've got a
very big number to show you

00:00:03.100 --> 00:00:07.530
today used by NatWest Bank so
that you can send them your

00:00:07.530 --> 00:00:09.020
secret bank details.

00:00:09.020 --> 00:00:16.350
It starts 2 3 4 5
3 6 7 6 2 8--

00:00:16.350 --> 00:00:16.480
[MULTIPLE CLIPS OF
NUMBERS BEING

00:00:16.480 --> 00:00:17.730
COUNTED AT THE SAME TIME]

00:00:28.420 --> 00:00:29.620
--7.

00:00:29.620 --> 00:00:31.650
Did you get that, or do you
want me to repeat it?

00:00:34.760 --> 00:00:37.410
So this number that
we are reading out

00:00:37.410 --> 00:00:41.230
is 617 digits long.

00:00:41.230 --> 00:00:44.000
All banks have similar numbers
when you want to send them

00:00:44.000 --> 00:00:45.550
your credit card details.

00:00:45.550 --> 00:00:47.450
This is not a secret number.

00:00:47.450 --> 00:00:50.820
In fact, your computer will
download this number when it

00:00:50.820 --> 00:00:53.280
wants to send your credit
card details.

00:00:53.280 --> 00:00:54.440
It's there to find.

00:00:54.440 --> 00:00:55.410
This is public.

00:00:55.410 --> 00:00:59.450
So this code that they use on
the internet is called RSA.

00:00:59.450 --> 00:01:02.980
It's named after the three
people who came up with it,

00:01:02.980 --> 00:01:05.284
who were Rivest, Shamir,
Adleman.

00:01:05.284 --> 00:01:07.070
Should I show you
how it works?

00:01:07.070 --> 00:01:07.483
BRADY HARAN: Please.

00:01:07.483 --> 00:01:08.310
DR. JAMES GRIME: All right.

00:01:08.310 --> 00:01:10.670
Imagine if you had a secret
that you wanted

00:01:10.670 --> 00:01:12.710
to send to the bank.

00:01:12.710 --> 00:01:15.820
So the bank provides you with
a box, and it provides you

00:01:15.820 --> 00:01:17.570
with a key to lock the box.

00:01:17.570 --> 00:01:20.310
So you can put your secret
inside and you can lock it,

00:01:20.310 --> 00:01:22.280
and then you can send the
secret to the bank.

00:01:22.280 --> 00:01:23.820
That's good, isn't it?

00:01:23.820 --> 00:01:27.620
But the problem is that the bank
is giving everyone one of

00:01:27.620 --> 00:01:31.390
these boxes and a key that goes
with it, and that means

00:01:31.390 --> 00:01:36.490
that, well, one person could
steal someone else's box and

00:01:36.490 --> 00:01:40.090
use the key to unlock it
and read their secrets.

00:01:40.090 --> 00:01:40.930
That would be terrible.

00:01:40.930 --> 00:01:42.280
We can't do that.

00:01:42.280 --> 00:01:45.610
So what the banks do, same sort
of idea but instead of

00:01:45.610 --> 00:01:48.560
giving out keys, they
give out padlocks.

00:01:48.560 --> 00:01:50.790
So they give everyone a box.

00:01:50.790 --> 00:01:51.470
You've got a secret.

00:01:51.470 --> 00:01:53.140
Put it inside the box.

00:01:53.140 --> 00:01:55.620
Lock it not with a key
but with a padlock.

00:01:55.620 --> 00:01:56.740
It goes click.

00:01:56.740 --> 00:01:58.380
It's snapped shut.

00:01:58.380 --> 00:02:01.640
Once it's locked and snapped
shut, you don't have the

00:02:01.640 --> 00:02:04.060
padlock key, so you
can't reverse it.

00:02:04.060 --> 00:02:05.720
You can't open it up.

00:02:05.720 --> 00:02:08.090
So if someone steals your
box, they don't

00:02:08.090 --> 00:02:09.270
have the key either.

00:02:09.270 --> 00:02:11.500
They've got padlock, but
they don't have the

00:02:11.500 --> 00:02:13.180
key to open the padlock.

00:02:13.180 --> 00:02:16.490
The only person that does
is the bank themselves.

00:02:16.490 --> 00:02:19.280
And it's a way to send secret
messages without having to

00:02:19.280 --> 00:02:20.490
send out the keys.

00:02:20.490 --> 00:02:23.620
It's easy to lock the
code, but it's hard

00:02:23.620 --> 00:02:25.275
to unlock the code.

00:02:25.275 --> 00:02:27.670
First of all, I have to explain
this with the smallest

00:02:27.670 --> 00:02:30.020
example I can, and then I'll
show you why we use that

00:02:30.020 --> 00:02:30.940
massive number.

00:02:30.940 --> 00:02:34.250
Let's say you're the bank and
you give out two numbers.

00:02:34.250 --> 00:02:36.250
They're public, so everyone
can know them.

00:02:36.250 --> 00:02:37.230
They're not secret numbers.

00:02:37.230 --> 00:02:40.360
I'm going to choose the number
3 and the number 10.

00:02:40.360 --> 00:02:42.950
The bank also has
a secret number.

00:02:42.950 --> 00:02:46.020
The bank secret number,
for now, you don't

00:02:46.020 --> 00:02:46.510
know what it is.

00:02:46.510 --> 00:02:47.380
No one knows what it is.

00:02:47.380 --> 00:02:49.560
Only the bank knows what
that secret number is.

00:02:49.560 --> 00:02:51.670
I had a very bad breakfast this
morning, so I'm going to

00:02:51.670 --> 00:02:53.850
send the message BAD CHEF.

00:02:53.850 --> 00:02:56.760
The first thing you do if you
have a message like that is to

00:02:56.760 --> 00:02:58.635
turn the letters into numbers.

00:02:58.635 --> 00:02:59.730
That's quite simple.

00:02:59.730 --> 00:03:02.580
A is 1, B is 2, and Z is 26.

00:03:02.580 --> 00:03:03.250
Simple stuff.

00:03:03.250 --> 00:03:05.660
C is 3, D is 4.

00:03:05.660 --> 00:03:08.300
Now I'm going to turn it into
a code, and I'm going to use

00:03:08.300 --> 00:03:09.900
the number 3.

00:03:09.900 --> 00:03:14.150
Now there are some codes that
would just add 3, or there are

00:03:14.150 --> 00:03:16.310
some codes that would
multiply by 3.

00:03:16.310 --> 00:03:18.850
What we're going to do is raise
to the power 3, so we're

00:03:18.850 --> 00:03:20.870
going to cube these
numbers here.

00:03:20.870 --> 00:03:21.440
Let's do that.

00:03:21.440 --> 00:03:24.360
So I get 2 cubed, which is 8.

00:03:24.360 --> 00:03:26.080
1 cubed, which is 1.

00:03:26.080 --> 00:03:28.890
5 cubed is 125.

00:03:28.890 --> 00:03:32.510
And 6 cubed, 216.

00:03:32.510 --> 00:03:36.840
The final step is to use the
second number, the number 10.

00:03:36.840 --> 00:03:39.310
I'm going to divide by
10, and I'm going

00:03:39.310 --> 00:03:40.630
to look at the remainder.

00:03:40.630 --> 00:03:46.380
So if I take something like 512,
when I divide by 10, it

00:03:46.380 --> 00:03:50.045
would be 51 10's
and 2 leftover.

00:03:50.045 --> 00:03:51.100
So that's just 2.

00:03:51.100 --> 00:03:53.680
5 here, 1 and 4.

00:03:53.680 --> 00:03:54.690
And that's your code.

00:03:54.690 --> 00:03:56.070
And that's what you
would send.

00:03:56.070 --> 00:03:59.550
The bank, or the person who is
going to decode this message,

00:03:59.550 --> 00:04:01.430
has a secret number.

00:04:01.430 --> 00:04:08.180
Now the secret number in this
example is going to be 3.

00:04:08.180 --> 00:04:10.320
There's a formula to work
out the secret number.

00:04:10.320 --> 00:04:12.590
I'm going to gloss over that for
a second, but I'm going to

00:04:12.590 --> 00:04:14.820
show you what to do next
to decode the message.

00:04:14.820 --> 00:04:15.590
This is my code.

00:04:15.590 --> 00:04:16.709
I'll write it out again.

00:04:16.709 --> 00:04:18.959
I'm going to do the same
thing I did before.

00:04:18.959 --> 00:04:21.510
This time I'm going to
use my secret number.

00:04:21.510 --> 00:04:24.180
It doesn't have to be the same
as 3, but it just happens to

00:04:24.180 --> 00:04:26.360
be the same as the
3 we used before.

00:04:26.360 --> 00:04:28.290
But nevermind, it doesn't
have to be.

00:04:28.290 --> 00:04:30.650
But I'm going to cube again.

00:04:30.650 --> 00:04:32.280
So I cube these numbers.

00:04:32.280 --> 00:04:33.940
We do like we did before.

00:04:33.940 --> 00:04:37.090
We divide by 10, and
find the remainder.

00:04:37.090 --> 00:04:41.200
And then the decoder will turn
that into letters, which is B,

00:04:41.200 --> 00:04:44.150
and he gets the message
back again, BAD CHEF.

00:04:44.150 --> 00:04:46.350
Now that's just a taste
of how it works.

00:04:46.350 --> 00:04:49.290
That's the process that your
computer does every time you

00:04:49.290 --> 00:04:51.870
buy something on
Amazon or eBay.

00:04:51.870 --> 00:04:55.640
One of the important numbers
in this code was this 10.

00:04:55.640 --> 00:04:58.720
Now this 10 was made
by multiplying two

00:04:58.720 --> 00:04:59.900
prime numbers together--

00:04:59.900 --> 00:05:02.770
2 times 5 are prime numbers.

00:05:02.770 --> 00:05:05.390
Multiply them together
and you get 10.

00:05:05.390 --> 00:05:08.700
Now that massive number that I
showed you that NatWest uses

00:05:08.700 --> 00:05:09.960
is the same idea.

00:05:09.960 --> 00:05:14.350
It's two massive prime numbers
multiplied together.

00:05:14.350 --> 00:05:15.540
That's what it is.

00:05:15.540 --> 00:05:19.220
If you want work out the decode
key, the secret key,

00:05:19.220 --> 00:05:22.220
you need to know the original
prime numbers.

00:05:22.220 --> 00:05:25.340
Now the only way a spy, someone
who wants to break the

00:05:25.340 --> 00:05:28.720
code, could work out the
original prime numbers is to

00:05:28.720 --> 00:05:32.770
take that massive number and
factorize it-- turn it back,

00:05:32.770 --> 00:05:36.170
break it up into the original
two prime numbers.

00:05:36.170 --> 00:05:37.960
This is really hard.

00:05:37.960 --> 00:05:40.990
So hard that it's impractical
to break with modern

00:05:40.990 --> 00:05:41.660
technology.

00:05:41.660 --> 00:05:50.030
The massive number I showed you
was a 2,048-bit number.

00:05:50.030 --> 00:05:55.260
That means it's about 2
to the power 2,048.

00:05:55.260 --> 00:05:59.110
Now about a decade ago,
we did manage to

00:05:59.110 --> 00:06:02.940
break 512-bit numbers.

00:06:02.940 --> 00:06:05.420
We were able to take that number
and factorize it into

00:06:05.420 --> 00:06:07.520
its original primes.

00:06:07.520 --> 00:06:10.540
A few years ago, a team of
academics managed to break the

00:06:10.540 --> 00:06:14.130
768-bit number.

00:06:14.130 --> 00:06:16.960
It took this team of academics
with all their resources two

00:06:16.960 --> 00:06:21.470
years to break at 768-bit key.

00:06:21.470 --> 00:06:26.690
And they said that to break
what we use now, which is

00:06:26.690 --> 00:06:31.690
about 1,024, would take
thousands of times longer.

00:06:31.690 --> 00:06:36.620
But given the speed of
technology, they reckon that

00:06:36.620 --> 00:06:42.450
this sort of code, 1,024-bit,
could be broken within a few

00:06:42.450 --> 00:06:43.920
years, they said.

00:06:43.920 --> 00:06:46.310
They said that a
few years ago.

00:06:46.310 --> 00:06:50.020
So this should now start
to be replaced.

00:06:50.020 --> 00:06:54.300
Gmail still uses this, but
this should be replaced.

00:06:54.300 --> 00:06:56.260
And as you can see, NatWest
have done that.

00:06:56.260 --> 00:06:57.690
All the banks have done that.

00:06:57.690 --> 00:07:02.460
They are now using 2,048-bit
number, which again would take

00:07:02.460 --> 00:07:03.635
computers--

00:07:03.635 --> 00:07:07.570
and I mean even with
a proper attack--

00:07:07.570 --> 00:07:11.090
big computers, it would still
take them thousands of years

00:07:11.090 --> 00:07:14.800
to factorize that number into
its original prime number.

00:07:14.800 --> 00:07:19.090
Now hidden in the details for
this code is a mathematical

00:07:19.090 --> 00:07:22.180
fact that was worked out
in the 17th century

00:07:22.180 --> 00:07:24.240
by Pierre de Fermat.

00:07:24.240 --> 00:07:26.540
He's famous for Fermat's
Last Theorem.

00:07:26.540 --> 00:07:28.700
Well, this was Fermat's
Little Theorem.

00:07:28.700 --> 00:07:31.070
If I take a number,
a whole number, an

00:07:31.070 --> 00:07:32.710
integer, any number--

00:07:32.710 --> 00:07:34.210
call it x.

00:07:34.210 --> 00:07:36.050
I'm going to raise
it to a power.

00:07:36.050 --> 00:07:39.245
And it's going to be a prime
number, so p for prime.

00:07:39.245 --> 00:07:41.600
I'm going to raise it to a
power, and I'm going to

00:07:41.600 --> 00:07:43.450
takeaway x.

00:07:43.450 --> 00:07:49.410
This is a multiple of
p, the prime number.

00:07:49.410 --> 00:07:50.780
Let me do an example.

00:07:50.780 --> 00:07:54.580
What I mean is if you took a
number like 4, and then I took

00:07:54.580 --> 00:07:59.370
a prime number like 5, and then
I takeaway 4, I would get

00:07:59.370 --> 00:08:03.690
4 to the power 5,
which is 1,024,

00:08:03.690 --> 00:08:07.840
takeaway 4, which is 1,020.

00:08:07.840 --> 00:08:11.550
And that is a multiple of 5, but
that would be guaranteed.

00:08:11.550 --> 00:08:13.610
You're guaranteed to have
a multiple of 5.

00:08:13.610 --> 00:08:17.090
Now you can imagine that in the
17th century when Fermat

00:08:17.090 --> 00:08:19.620
came up with this factor, people
said, well, very nice

00:08:19.620 --> 00:08:22.320
mathematical fact, but that's
pretty useless.

00:08:22.320 --> 00:08:24.340
What use are you going
to have for that?

00:08:24.340 --> 00:08:27.090
And then suddenly the internet
comes along, and it's

00:08:27.090 --> 00:08:28.660
massively useful.

00:08:28.660 --> 00:08:34.549
In fact, our whole modern world
depends on this fact.

00:08:34.549 --> 00:08:37.890
So to use this code, the public
key has two numbers.

00:08:37.890 --> 00:08:41.649
I've shown you the massively
long one that NatWest uses.

00:08:41.649 --> 00:08:45.380
The other number that we need,
which is the power that you

00:08:45.380 --> 00:08:48.240
have to raise, that
is not as big.

00:08:48.240 --> 00:08:52.660
That is 65,537.

00:08:52.660 --> 00:08:53.550
Quite a big number.

00:08:53.550 --> 00:08:59.690
When you compare it to the
second number, it's small.

00:08:59.690 --> 00:09:01.640
BRADY HARAN: If you're in the
mood for even more about banks

00:09:01.640 --> 00:09:05.020
and really big numbers, then
check out my latest video from

00:09:05.020 --> 00:09:08.160
the Chemistry Channel Periodic
Videos, where we've been

00:09:08.160 --> 00:09:11.440
inside the Bank of England gold
bullion vault, where they

00:09:11.440 --> 00:09:14.360
have a couple hundred
billion pounds worth

00:09:14.360 --> 00:09:15.760
of gold lying around.

00:09:15.760 --> 00:09:18.230
That's not something
you see every day.

00:09:18.230 --> 00:09:20.790
The link is here on the screen
and below the video.

