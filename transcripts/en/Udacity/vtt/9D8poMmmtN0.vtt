WEBVTT
Kind: captions
Language: en

00:00:00.430 --> 00:00:02.880
This method is also cleaned up a bit got rid

00:00:02.880 --> 00:00:04.550
of some of the variable that we don't really need

00:00:04.550 --> 00:00:07.770
anymore. So the first thing we do is if the

00:00:07.770 --> 00:00:11.280
user is null we throw an unauthorized exception. The next

00:00:11.280 --> 00:00:13.680
thing to do is to get the main email as

00:00:13.680 --> 00:00:16.840
the user's email and get the user ID. Then we

00:00:16.840 --> 00:00:20.085
get the display name sent by the request and the

00:00:20.085 --> 00:00:25.526
TeeShirtSize, sent by the request. Then, this is new. We load

00:00:25.526 --> 00:00:28.180
the profile. Might not be there, but we go ahead

00:00:28.180 --> 00:00:30.460
and load it anyway. Then we need to check, that it

00:00:30.460 --> 00:00:33.600
actually existed. So, check if it's now, then if it

00:00:33.600 --> 00:00:37.050
is now, that means it didn't already exist. We need to

00:00:37.050 --> 00:00:39.770
set the display name, either to the value passed in

00:00:39.770 --> 00:00:44.300
the profile form or otherwise if the display name wasn't parsed,

00:00:44.300 --> 00:00:48.360
get the default name. And again, similarly with the tee shirt,

00:00:48.360 --> 00:00:51.270
get the value passed by the form. And it fits null,

00:00:51.270 --> 00:00:53.460
set it to default which is not specified.

00:00:53.460 --> 00:00:56.930
In this case, not specified. And then we

00:00:56.930 --> 00:00:58.900
need to create, actually create the profile. So

00:00:58.900 --> 00:01:00.830
this was our call, it's our call to

00:01:00.830 --> 00:01:06.063
create the new profile. However, the profile already exists. Just call,

00:01:06.063 --> 00:01:12.270
update method, parsing the displayName, and the teeShirtSize.

00:01:12.270 --> 00:01:16.300
Which remember, one or either of these could in fact be null. And then

00:01:16.300 --> 00:01:20.540
we save it in the data store as we did before. Here the code has been made more

00:01:20.540 --> 00:01:24.290
concise, and we return the profile. Now let's take

00:01:24.290 --> 00:01:27.180
a look at profile.java to look at the update

00:01:27.180 --> 00:01:31.340
method, which is pretty simple. Takes a displayName and

00:01:31.340 --> 00:01:36.260
the TeeShirtSize, checks each one if they're null. If

00:01:36.260 --> 00:01:38.620
they are null, doesn't do anything with that property.

00:01:38.620 --> 00:01:41.480
If they're not null, that means the user updated

00:01:41.480 --> 00:01:45.750
that value. So, update the appropriate property, that's

00:01:45.750 --> 00:01:48.685
all it does. This doesn't do the saving,

00:01:48.685 --> 00:01:51.560
because remember, we do the saving back here

00:01:52.670 --> 00:01:56.350
in save profile. All right, let's see if

00:01:56.350 --> 00:02:01.870
it actually works. So I deployed to local host and came over to the, our old

00:02:01.870 --> 00:02:05.100
friend API's explorer. We have some profiles, so

00:02:05.100 --> 00:02:06.960
let's see what they are. So get existing

00:02:06.960 --> 00:02:13.300
profile, and you see that the name is Apple Turnover, and the tee shirt size is

00:02:13.300 --> 00:02:20.460
XS. So remember that, Apple Turnover, XS. Now let's save the profile. And we're

00:02:20.460 --> 00:02:22.290
just going to update one of the properties.

00:02:22.290 --> 00:02:27.640
Let's change the display name to Icecream Cake.

00:02:27.640 --> 00:02:29.850
So we'll save that, and the exist, remember

00:02:29.850 --> 00:02:31.950
that the existing tee shirt size is XS,

00:02:31.950 --> 00:02:36.710
so let's see what happens. Okay, good. So the display

00:02:36.710 --> 00:02:40.830
name was set to Icecream name, but the tee shirt size

00:02:40.830 --> 00:02:43.520
was left as XS. So now we know that we

00:02:43.520 --> 00:02:46.650
didn't get a new profile, we just updated the existing profile.

