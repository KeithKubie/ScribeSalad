WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.090
CHRIS MESSINA: So my
name is Chris Messina.

00:00:02.640 --> 00:00:04.830
I work in developer
relations at Google.

00:00:05.840 --> 00:00:07.960
I work on the social web team.

00:00:07.960 --> 00:00:12.759
And I do a lot of work on web
technologies working on

00:00:12.759 --> 00:00:16.089
protocols, formats, and other
things that hopefully are

00:00:16.089 --> 00:00:21.849
opening up the web to more and
more interesting applications

00:00:21.849 --> 00:00:23.230
and experiences.

00:00:23.230 --> 00:00:26.899
The title of my talk today
is the open and social web.

00:00:26.899 --> 00:00:29.509
And I'm going to tell you a
little bit of a story that

00:00:29.509 --> 00:00:33.260
paints a picture of where
we are with things, and

00:00:33.260 --> 00:00:36.680
maybe where we're going.

00:00:36.680 --> 00:00:38.725
Before I began, I want
to provide you with a

00:00:38.725 --> 00:00:40.940
little bit of context.

00:00:40.940 --> 00:00:45.300
First, about me: you can
find me on the web at

00:00:45.300 --> 00:00:45.900
buzz.google.com/chrismessina.

00:00:49.140 --> 00:00:52.270
And I'm also on Twitter
as Chris Messina.

00:00:52.270 --> 00:00:55.420
I tried to trick you with
those usernames, I know.

00:00:55.420 --> 00:00:57.470
But I hope we can
figure that out.

00:00:57.470 --> 00:01:01.180
Today's hashtag for this
session is #googlesocial.

00:01:03.850 --> 00:01:08.450
I also invite you to join us on
Google Wave to discuss this

00:01:08.450 --> 00:01:09.250
and other sessions today.

00:01:09.250 --> 00:01:11.060
But specifically for
the conversation in

00:01:11.060 --> 00:01:14.210
the back channel for this talk
visit j.mp/io-googlesocial.

00:01:19.720 --> 00:01:23.520
And one more thing.

00:01:23.520 --> 00:01:25.920
Because this is a developer
conference, I know that you

00:01:25.920 --> 00:01:27.910
have certain expectations--
very high expectations--

00:01:27.910 --> 00:01:30.100
of your speakers.

00:01:30.100 --> 00:01:32.479
And I don't want you to be
disappointed when we get to

00:01:32.479 --> 00:01:34.800
the end of this talk that
there wasn't enough code.

00:01:34.800 --> 00:01:37.870
So I'm presenting you
with fair warning.

00:01:37.870 --> 00:01:41.620
If you're looking for a lot of
code, you want to attend my

00:01:41.620 --> 00:01:44.050
buddy Joseph Smarr's talk--
who's in the audience here

00:01:44.050 --> 00:01:46.180
today-- and John Panzer's talk
this afternoon from 3:00 to

00:01:46.180 --> 00:01:50.659
4:00 pm called Bridging the
Islands: Building fluid social

00:01:50.659 --> 00:01:51.439
experiences across websites.

00:01:52.310 --> 00:01:54.910
That's where you're going
to see all the code.

00:01:54.910 --> 00:01:58.320
Now because this is Google I/O,
and because code is an

00:01:58.320 --> 00:02:00.220
essential aspect of everything
that we're talking about, I did

00:02:00.220 --> 00:02:03.290
want to provide you with a
moment of zen before

00:02:03.290 --> 00:02:06.060
we get started.

00:02:06.060 --> 00:02:09.869
Without further ado,
please enjoy this moment.

00:02:09.869 --> 00:02:14.229
This has to last you for
the next 30, 35 minutes.

00:02:14.229 --> 00:02:18.679
And that's about it.

00:02:18.679 --> 00:02:18.879
All right.

00:02:18.879 --> 00:02:20.279
Enough of that introduction.

00:02:20.279 --> 00:02:27.249
I'd like to get actually into
the meat of today's discussion.

00:02:27.249 --> 00:02:31.769
Starting off with a little bit
of a prologue to set the scene.

00:02:31.769 --> 00:02:37.409
There are going to be a couple
of characters in today's story.

00:02:37.409 --> 00:02:40.269
These are our open
web technologists.

00:02:40.269 --> 00:02:44.069
And so they reappear throughout
the story, and play a

00:02:44.069 --> 00:02:46.559
very, very important role.

00:02:46.559 --> 00:02:50.499
In Chapter 1 they introduce
a technology called OpenID

00:02:50.499 --> 00:02:54.589
which is a profile and
identity technology.

00:02:54.589 --> 00:02:58.879
In Chapter 2, they introduce
something called WebFinger,

00:02:58.879 --> 00:03:01.569
which is the technology for
discovering information

00:03:01.569 --> 00:03:04.089
about email addresses.

00:03:04.089 --> 00:03:08.689
In Chapter 3, we learn about a
whole bunch of new technologies

00:03:08.689 --> 00:03:13.509
called PubSubHubbub,
ActivityStreams, and Salmon.

00:03:13.509 --> 00:03:17.760
And these technologies are put
together for rich activity and

00:03:17.760 --> 00:03:22.239
messaging capabilities
across the open web.

00:03:22.239 --> 00:03:26.799
Now these three chapters only
begin to tell the story of

00:03:26.799 --> 00:03:31.159
the open and social web
that is emerging today.

00:03:31.159 --> 00:03:34.449
The technology that I'm going
to tell you about form the very

00:03:34.449 --> 00:03:37.590
early stages of what I hope
will become the foundation of a

00:03:37.590 --> 00:03:41.530
much broader, much richer, much
larger social web in

00:03:41.530 --> 00:03:44.579
the coming years.

00:03:44.579 --> 00:03:52.959
And so we begin.

00:03:52.959 --> 00:03:59.159
Once upon a time there was
a character named Kate and

00:03:59.159 --> 00:04:04.709
a character named Jack.

00:04:04.709 --> 00:04:08.369
Of course Jack lived
on this island.

00:04:08.369 --> 00:04:11.449
Kate lived on this
other island.

00:04:11.449 --> 00:04:15.139
And one day Jack and Kate,
completely independent of

00:04:15.139 --> 00:04:20.859
one another, decided
to go on vacation.

00:04:20.859 --> 00:04:24.849
They went from one island to
another and happened as it

00:04:24.849 --> 00:04:31.979
was, to meet up at the same
island strangely enough.

00:04:31.979 --> 00:04:33.330
This was a much larger
island of course.

00:04:33.330 --> 00:04:36.839
But once they arrived, a
curious thing happened.

00:04:36.839 --> 00:04:39.060
They ended up meeting one
another and liking each

00:04:39.060 --> 00:04:40.070
other considerably.

00:04:41.149 --> 00:04:45.659
In fact, they like each other
so much that they fell in love.

00:04:45.659 --> 00:04:46.439
Isn't that sweet?

00:04:46.439 --> 00:04:49.700
Well not just that, but
they also decided to

00:04:49.700 --> 00:04:51.110
yes, get married.

00:04:51.349 --> 00:04:53.769
Things move quickly on
this island apparently.

00:04:53.769 --> 00:04:56.809
Now there was a problem
as there always is in

00:04:56.809 --> 00:04:58.590
such stories as this.

00:04:58.590 --> 00:05:01.090
The problem was that their
family and friends couldn't

00:05:01.090 --> 00:05:04.099
join them for their wedding.

00:05:04.099 --> 00:05:07.819
And this of course made
them very, very sad.

00:05:07.819 --> 00:05:12.639
As it happens, when Jack and
Kate were on this island, they

00:05:12.639 --> 00:05:16.080
had to leave their family and
friends behind on the islands

00:05:16.080 --> 00:05:18.360
where they originally
came from.

00:05:18.360 --> 00:05:20.639
Why was this?

00:05:20.639 --> 00:05:24.399
As it turned out travel had
gotten increasingly difficult

00:05:24.399 --> 00:05:25.339
after Jack and Kate had left.

00:05:25.339 --> 00:05:28.730
In fact every time people
visited a new island they were

00:05:28.730 --> 00:05:34.159
stopped at the border and
they were turned away.

00:05:34.159 --> 00:05:37.349
Or when they arrived they had
to go through a series of steps

00:05:37.349 --> 00:05:39.490
that were really frustrating.

00:05:39.490 --> 00:05:42.699
Specifically they had to
fill out forms like this.

00:05:42.699 --> 00:05:47.229
In fact, every island that they
visited presented them with a

00:05:47.229 --> 00:05:51.270
new form to fill out-- some
form of arcane nonsense about

00:05:51.270 --> 00:05:57.069
usernames, and maiden names,
and all this nonsense.

00:05:57.069 --> 00:06:00.969
It wasn't just that
immigration was really hard.

00:06:00.969 --> 00:06:03.410
Every new island that they
visited required them to learn

00:06:03.410 --> 00:06:08.819
a secret chant so you can
come back at some later date

00:06:08.819 --> 00:06:10.740
and revisit without going
through all these steps.

00:06:10.740 --> 00:06:13.240
Well as it turned out of
course, the more islands you

00:06:13.240 --> 00:06:16.800
visited, the more of these
secret chants you had to learn.

00:06:16.800 --> 00:06:19.050
And there was very little
upside for you to actually keep

00:06:19.050 --> 00:06:21.149
track of all this information.

00:06:21.149 --> 00:06:25.240
It just became this completely
overwhelming situation where

00:06:25.240 --> 00:06:29.070
people couldn't manage all of
these pieces of information in

00:06:29.070 --> 00:06:31.189
order to go from one
place to another.

00:06:31.189 --> 00:06:33.990
In fact this caused so much
stress that people just

00:06:33.990 --> 00:06:41.830
stopped traveling.

00:06:41.830 --> 00:06:45.199
However, some of the fat cats
on some of the islands decided

00:06:45.199 --> 00:06:48.479
that this was a very
interesting opportunity to

00:06:48.479 --> 00:06:50.779
create some business.

00:06:50.779 --> 00:06:53.600
So the fat cats got together
and decided that they would

00:06:53.600 --> 00:06:57.610
make it possible for their
inhabitants of their islands,

00:06:57.610 --> 00:07:01.930
to travel freely from
one island to another.

00:07:01.930 --> 00:07:04.470
And this was all well and
fine for the bigger islands.

00:07:04.470 --> 00:07:07.550
But of course as you saw on the
map earlier, we're dealing

00:07:07.550 --> 00:07:09.960
with an archipelago.

00:07:09.960 --> 00:07:11.909
I think that's how
you say that word.

00:07:11.909 --> 00:07:14.659
Which of course pissed off
all the little people

00:07:14.659 --> 00:07:16.559
on the islands.

00:07:16.559 --> 00:07:19.300
They didn't like it
one bit at all.

00:07:19.300 --> 00:07:22.460
So they resorted to asking
their friends-- the open web

00:07:22.460 --> 00:07:25.649
technologists-- if they
could do anything about it.

00:07:25.649 --> 00:07:28.749
Well of course, they were able
to come up with a solution.

00:07:28.749 --> 00:07:30.389
And that solution
is called OpenID.

00:07:31.849 --> 00:07:33.189
How many of you are
familiar with OpenID?

00:07:33.189 --> 00:07:38.840
How many of you use
OpenID on a daily basis?

00:07:38.840 --> 00:07:39.000
OK.

00:07:39.000 --> 00:07:40.819
There's probably actually
more of you, but that's OK.

00:07:40.819 --> 00:07:44.009
For those of you who don't know
what OpenID is, you can kind of

00:07:44.009 --> 00:07:47.054
think of it as a skeleton key
for a number of accounts that

00:07:47.054 --> 00:07:48.939
you have across the web.

00:07:48.939 --> 00:07:53.359
That is you can sign up for an
account on one website, and use

00:07:53.359 --> 00:07:55.819
it to sign in our sign
up on another website.

00:07:56.729 --> 00:07:59.620
It's actually very convenient.

00:07:59.620 --> 00:08:01.294
Now from an adoption
perspective, we're actually

00:08:01.294 --> 00:08:02.280
seeing some promising figures.

00:08:02.280 --> 00:08:06.669
In fact, as of last summer--
these numbers are a little

00:08:06.669 --> 00:08:08.309
bit dated, but I imagine
they've actually improved

00:08:08.309 --> 00:08:09.859
considerably since then.

00:08:09.859 --> 00:08:14.029
We've seen from next to no
OpenID relying parties-- that

00:08:14.029 --> 00:08:20.409
is the websites that consume
OpenID-- to over 50,000 today.

00:08:20.409 --> 00:08:22.610
So we've seen a nice growth
curve there in terms of

00:08:22.610 --> 00:08:25.079
adoption of this technology.

00:08:25.079 --> 00:08:26.789
Another thing that's very
important to understand about

00:08:26.789 --> 00:08:32.740
OpenID in the wild, is that the
usage trends themselves reflect

00:08:32.740 --> 00:08:35.440
a very interesting and
important aspect of

00:08:35.440 --> 00:08:39.110
a decentralized
identity technology.

00:08:39.110 --> 00:08:42.920
Namely that people prefer
to use different accounts

00:08:42.920 --> 00:08:43.980
in different contexts.

00:08:43.980 --> 00:08:47.339
That is, if they have more than
one profile on the web, they

00:08:47.339 --> 00:08:52.010
will choose to use a specific
profile in certain contexts.

00:08:52.010 --> 00:08:55.260
So one profile provider
may not be sufficient.

00:08:55.260 --> 00:09:00.170
For example, on a site called
UserVoice, we see that people

00:09:00.170 --> 00:09:03.930
make use of their Google
accounts 34% of time and their

00:09:03.930 --> 00:09:05.980
Facebook accounts
33% of the time.

00:09:05.980 --> 00:09:08.919
And from there we see other
accounts like Twitter

00:09:08.919 --> 00:09:13.310
and Yahoo as well.

00:09:13.310 --> 00:09:16.780
On Interscope Records-- which
of course is the home for Lady

00:09:16.780 --> 00:09:19.980
Gaga, and Eminem, Lenny
Kravitz, and so on-- we see a

00:09:19.980 --> 00:09:24.280
very different type of
statistic where a full 43%,

00:09:24.280 --> 00:09:28.250
what is it, 52% of people
choose to use their Facebook

00:09:28.250 --> 00:09:30.860
accounts to sign in.

00:09:30.860 --> 00:09:33.610
Meanwhile we see a number of
other providers that people

00:09:33.610 --> 00:09:36.490
choose to use in this context.

00:09:36.490 --> 00:09:38.290
Now most of the Interscope
sites actually promote

00:09:38.290 --> 00:09:40.580
heavily the use of Facebook
of Twitter connect.

00:09:40.580 --> 00:09:42.920
And yet people still are
choosing to use their other

00:09:42.920 --> 00:09:47.209
profiles even despite the user
experience that's been designed

00:09:47.209 --> 00:09:50.160
to promote those two providers.

00:09:50.160 --> 00:09:52.980
Finally we see something
really different when we

00:09:52.980 --> 00:09:54.770
look internationally.

00:09:54.770 --> 00:09:57.230
So if you go to a site that
serves essentially as the

00:09:57.230 --> 00:09:59.540
eBay of the Philippines.

00:09:59.540 --> 00:10:03.640
In this case 64% of their users
are using Yahoo accounts

00:10:03.640 --> 00:10:06.160
as their third-party
authentication provider.

00:10:06.160 --> 00:10:10.900
So if this site chose to only
support one third-party profile

00:10:10.900 --> 00:10:15.170
provider, they would be cutting
off a large number of

00:10:15.170 --> 00:10:15.900
their other users.

00:10:15.900 --> 00:10:18.920
Which of course would be
very bad for business.

00:10:18.920 --> 00:10:24.210
And finally, JanRain, which is
a company that provides a

00:10:24.210 --> 00:10:28.400
plugin called RPX that makes it
possible to incorporate

00:10:28.400 --> 00:10:32.570
third-party authentication into
websites, sees very interesting

00:10:32.570 --> 00:10:36.150
statistics in aggregate across
all that different websites

00:10:36.150 --> 00:10:38.230
that use their products.

00:10:38.230 --> 00:10:43.200
Specifically 38%, 39% of sites
actually see the usage of

00:10:43.200 --> 00:10:46.850
Google profiles and Google
accounts to sign in, second

00:10:46.850 --> 00:10:50.970
by Facebook, Yahoo,
Twitter and others.

00:10:50.970 --> 00:10:52.850
I think this paints a very
important picture that must

00:10:52.850 --> 00:10:56.910
be remembered especially in
the context of the island

00:10:56.910 --> 00:11:00.770
nation of the internet.

00:11:00.770 --> 00:11:02.440
To learn more about this
technology I invite you

00:11:02.440 --> 00:11:03.120
to visit openid.net.

00:11:05.540 --> 00:11:09.610
So once again, these open web
technologists had produced this

00:11:09.610 --> 00:11:11.769
technology that solved a very
important problem

00:11:11.769 --> 00:11:12.490
for islanders.

00:11:12.490 --> 00:11:15.230
It made it possible for them to
have a sort of passport that

00:11:15.230 --> 00:11:17.130
they could bring with them
wherever they went to these

00:11:17.130 --> 00:11:20.260
other islands, which made it
possible for them to visit with

00:11:20.260 --> 00:11:21.720
their friends, and their
family, and the people that

00:11:21.720 --> 00:11:25.930
were important to them, and yet
still live someplace else.

00:11:25.930 --> 00:11:28.630
This of course made both the
fat cats and the island

00:11:28.630 --> 00:11:32.490
inhabitants very happy.

00:11:32.490 --> 00:11:35.970
Which brings us to Chapter 2.

00:11:35.970 --> 00:11:40.490
Once people of course were able
to move freely between islands,

00:11:40.490 --> 00:11:42.200
it turned out that they did.

00:11:42.200 --> 00:11:44.430
And they decided to relocate.

00:11:44.430 --> 00:11:47.380
So you remember
before we have Kate.

00:11:47.380 --> 00:11:51.970
And Kate lives on this island.

00:11:51.970 --> 00:11:56.660
We have Jack who lives on
this island-- two completely

00:11:56.660 --> 00:11:57.850
different islands.

00:11:57.850 --> 00:12:00.780
Now what's interesting is that
Kate and Jack's friends used to

00:12:00.780 --> 00:12:04.330
be able to send messages or
make phone calls to Kate or

00:12:04.330 --> 00:12:07.160
Jack provided they were
on the same island.

00:12:07.160 --> 00:12:13.539
Once Kate and Jack left to go
to the new island, it became

00:12:13.539 --> 00:12:15.169
increasingly challenging for
their friends and family

00:12:15.169 --> 00:12:17.450
to stay in touch.

00:12:17.450 --> 00:12:19.350
Because now they couldn't
just say, oh pick up the

00:12:19.350 --> 00:12:20.640
phone and call Kate.

00:12:20.640 --> 00:12:25.180
Because now they had to specify
Kate at a certain island.

00:12:25.180 --> 00:12:28.990
Of course you can imagine how
this solution came about.

00:12:28.990 --> 00:12:31.370
Once again our friends the open
web technologists got together

00:12:31.370 --> 00:12:35.660
in a room-- probably an open
mailing list of course-- and

00:12:35.660 --> 00:12:39.010
decided to develop a new
protocol called WebFinger.

00:12:39.010 --> 00:12:46.210
WebFinger is a technology built
on what's called the Hammer

00:12:46.210 --> 00:12:50.840
Stack-- named after the creator
of sorts Aaron Hammer-- which

00:12:50.840 --> 00:12:52.959
has a bunch of different pieces
of information that allows you

00:12:52.959 --> 00:12:56.530
to discover information
about web resources.

00:12:56.530 --> 00:13:00.200
So let's take a look
at how that looks.

00:13:00.200 --> 00:13:03.360
So imagine you go to a form on
some website, and you want

00:13:03.360 --> 00:13:05.840
to find out information
about an email address.

00:13:05.840 --> 00:13:09.870
We type the email address into
the box, we click look up.

00:13:09.870 --> 00:13:13.020
And what happens is that web
server basically takes the

00:13:13.020 --> 00:13:17.020
domain from an email address
and looks in what's called

00:13:17.020 --> 00:13:19.450
a well-known location.

00:13:19.450 --> 00:13:20.870
So you can see what they've
done is they've taken

00:13:20.870 --> 00:13:24.050
that Gmail address, they
split off the username.

00:13:24.050 --> 00:13:26.870
They take gmail.com and look
in this specific place:

00:13:26.870 --> 00:13:27.079
.well-known/host-meta.

00:13:29.530 --> 00:13:34.710
The file that is returned
looks like this.

00:13:34.710 --> 00:13:37.460
This provides a way to look up
information about this email

00:13:37.460 --> 00:13:40.209
address by looking for
what's called [? the rel ?]

00:13:40.209 --> 00:13:41.210
LRDD.

00:13:41.210 --> 00:13:44.410
It's essentially a link
resource descriptor.

00:13:44.410 --> 00:13:48.020
You now take the email address.

00:13:48.020 --> 00:13:50.780
You prepend acct to
turn this into what's

00:13:50.780 --> 00:13:51.650
called an account URI.

00:13:51.650 --> 00:13:56.500
And you plug that into
this URI template.

00:13:57.750 --> 00:13:59.709
OK hopefully this is kind
of making sense so far.

00:13:59.709 --> 00:14:02.420
This is essentially how
you find out information

00:14:02.420 --> 00:14:03.010
about this email address.

00:14:03.970 --> 00:14:06.920
So now we're going to take that
URL that we've constructed,

00:14:06.920 --> 00:14:07.660
and we're going to [? curl ?]

00:14:07.660 --> 00:14:09.310
against it to find out
what kind of information

00:14:09.310 --> 00:14:12.460
the server has.

00:14:12.460 --> 00:14:15.200
And you'll note too, that
the WebFinger location is

00:14:15.200 --> 00:14:16.569
actually not on gmail.com.

00:14:17.569 --> 00:14:19.169
In this case it's
actually on google.com.

00:14:19.840 --> 00:14:22.270
So the email provider could
actually point to somebody

00:14:22.270 --> 00:14:24.699
else as being the authority
for information about

00:14:24.699 --> 00:14:25.199
this email address.

00:14:26.600 --> 00:14:31.130
So let's pull that document
back and take a look at it.

00:14:31.130 --> 00:14:35.029
What you see here in the
LRDD profile for this

00:14:35.029 --> 00:14:38.640
email address, which has a
number of services listed.

00:14:38.640 --> 00:14:42.420
Now what this means is that
if I want to perform OpenID

00:14:42.420 --> 00:14:45.760
authentication against this
email address, all I

00:14:45.760 --> 00:14:48.820
need to do, sorry.

00:14:48.820 --> 00:14:52.900
All I need to do is look for
the specific OpenID service

00:14:52.900 --> 00:14:58.210
in this discovery document,
which happens to be here.

00:14:58.210 --> 00:15:02.370
So if we put this all together
to use WebFinger with OpenID

00:15:02.370 --> 00:15:06.110
authentication, this is how the
user experience would work.

00:15:06.110 --> 00:15:12.390
We switch from this lookup
activity to a connect activity.

00:15:12.470 --> 00:15:16.110
I type my email address
in as I would before.

00:15:16.110 --> 00:15:20.540
And this time what happens is
that I'm brought directly to

00:15:20.540 --> 00:15:22.880
Google to perform
authentication.

00:15:22.880 --> 00:15:25.090
Because in the background the
server has performed WebFinger

00:15:25.090 --> 00:15:28.720
lookup, has received that
document with my OpenID service

00:15:28.720 --> 00:15:31.640
listed in it, and is now
forwarding me over to

00:15:31.640 --> 00:15:32.560
Google to authenticate.

00:15:34.000 --> 00:15:36.310
Once I click sign in, I'm
returned back to the place

00:15:36.310 --> 00:15:39.590
where I started from, sign
in as Chris Messina.

00:15:39.590 --> 00:15:43.129
So in this way, we've actually
used the WebFinger protocol to

00:15:43.129 --> 00:15:46.340
discover information about
email addresses in a

00:15:46.340 --> 00:15:48.000
distributed, decentralized way.

00:15:48.000 --> 00:15:50.240
That in this case, makes
OpenID much easier for

00:15:50.240 --> 00:15:51.670
many, many people to use.

00:15:51.670 --> 00:15:54.939
We no longer have to rely
on URLs as the primary

00:15:54.939 --> 00:15:56.980
key for users.

00:15:56.980 --> 00:15:59.963
To learn more about WebFinger,
I invite you to visit this

00:15:59.963 --> 00:16:00.977
site: webfinger.info.

00:16:05.540 --> 00:16:08.440
So once again, now that the
open web technologists had

00:16:08.440 --> 00:16:11.259
developed this technology,
islanders can now keep in touch

00:16:11.259 --> 00:16:14.620
with each other regardless
of where they chose to live.

00:16:14.620 --> 00:16:18.640
And so they can move about
freely and stay in touch,

00:16:18.640 --> 00:16:21.880
because this WebFinger service
provided a sort of fowarding

00:16:21.880 --> 00:16:24.364
service to look up information
about their friends and family

00:16:24.364 --> 00:16:26.650
who might have moved
to a new place.

00:16:26.650 --> 00:16:29.090
Which once again led people
to be very, very happy.

00:16:29.090 --> 00:16:33.010
And so they partied all night.

00:16:33.010 --> 00:16:36.990
Chapter 3: chapter 3 contains
a lot of information about a

00:16:36.990 --> 00:16:39.740
number of emerging
technologies.

00:16:39.740 --> 00:16:42.569
In this case, we want to talk
about how people were able to

00:16:42.569 --> 00:16:45.660
keep in touch and share with
one another now that they

00:16:45.660 --> 00:16:47.704
had moved to new islands.

00:16:54.760 --> 00:17:00.320
So in this case, what was very
difficult with all these

00:17:00.320 --> 00:17:02.940
islands being distributed, was
that when people wanted to send

00:17:02.940 --> 00:17:05.150
messages back and forth to once
another, they essentially had

00:17:05.150 --> 00:17:10.240
to go from one place to
another-- back and forth--

00:17:10.240 --> 00:17:12.810
constantly checking,
pulling for new messages.

00:17:12.810 --> 00:17:13.540
Got anything new?

00:17:13.540 --> 00:17:15.590
Anything new for me yet?

00:17:15.590 --> 00:17:16.040
How about now?

00:17:16.040 --> 00:17:16.750
No, nothing?

00:17:16.750 --> 00:17:17.060
OK.

00:17:17.589 --> 00:17:19.119
And eventually people got
very frustrated with

00:17:19.119 --> 00:17:20.490
this whole process.

00:17:20.490 --> 00:17:24.169
It was slow, cumbersome, it was
annoying, it was inefficient.

00:17:25.560 --> 00:17:28.810
There were all these
problems with this model.

00:17:28.810 --> 00:17:31.380
Furthermore, people started
to actually do more

00:17:31.380 --> 00:17:32.169
interesting things.

00:17:32.169 --> 00:17:34.980
And they wanted to share richer
and richer media that was no

00:17:34.980 --> 00:17:38.960
longer possible to send
over these more minimal

00:17:38.960 --> 00:17:40.590
communication channels.

00:17:40.590 --> 00:17:42.750
They also wanted to let other
people know about their

00:17:42.750 --> 00:17:46.100
activities they were doing all
across all these different

00:17:46.100 --> 00:17:46.976
islands as they

00:17:46.976 --> 00:17:49.940
explored their new worlds.

00:17:49.940 --> 00:17:52.440
And once again, when people
want to share this richer and

00:17:52.440 --> 00:17:55.200
richer information, the formats
that they had really just

00:17:55.200 --> 00:17:57.810
didn't express the stuff in a
very rich way-- in a way that

00:17:57.810 --> 00:18:00.499
also allowed them to send these
messages back to the place

00:18:00.499 --> 00:18:04.070
where they needed to go.

00:18:04.070 --> 00:18:07.540
So our web technologists
decided to get together and

00:18:07.540 --> 00:18:09.670
come up with a series of
technologies that all worked

00:18:09.670 --> 00:18:12.710
together to solve these
problems to make it possible to

00:18:12.710 --> 00:18:17.159
share rich activity information
with their friends, regardless

00:18:17.159 --> 00:18:21.680
of where they lived or what
island they have to be on.

00:18:21.680 --> 00:18:23.740
The first of those technologies
is what's called PubSubHubbub.

00:18:25.220 --> 00:18:28.340
Which on the one hand may be
an unfortunate name, but the

00:18:28.340 --> 00:18:29.660
islanders were very creative
and so that's what

00:18:29.660 --> 00:18:31.150
they came up with.

00:18:31.150 --> 00:18:32.950
You have a few Mai Tais
too many, whatever.

00:18:32.950 --> 00:18:34.750
It all works out.

00:18:34.750 --> 00:18:37.720
In this case, the architecture
of PubSubHubbub is

00:18:37.720 --> 00:18:39.780
what's interesting.

00:18:39.780 --> 00:18:43.450
So in the previous model, you
remember that Kate had to go

00:18:43.450 --> 00:18:46.530
back and forth checking for
new messages from Walt.

00:18:46.530 --> 00:18:49.970
Well what if Walt could just
post a message and have it

00:18:49.970 --> 00:18:52.470
arrive, in real time
essentially, wherever

00:18:52.470 --> 00:18:53.180
Kate happened to be.

00:18:53.180 --> 00:18:56.970
Well, the solution they came
up with was to involve a

00:18:56.970 --> 00:19:00.230
hub in a series of tubes.

00:19:00.230 --> 00:19:02.845
So by posting this message
through the series of tubes to

00:19:02.845 --> 00:19:05.850
the hub, the hub was able to
deliver this message in real

00:19:05.850 --> 00:19:09.670
time to Kate, wherever
she happened to be.

00:19:09.670 --> 00:19:13.080
What was also very interesting
about this model is that

00:19:13.080 --> 00:19:14.150
it scaled pretty well.

00:19:14.150 --> 00:19:17.210
So you could actually have a
number of different subscribers

00:19:17.210 --> 00:19:18.640
receiving information
in real time.

00:19:18.640 --> 00:19:20.250
Now we've slowed this
down a lot so you can

00:19:20.250 --> 00:19:20.970
see how it happens.

00:19:20.970 --> 00:19:24.370
But basically the idea is that
the message goes in one, and

00:19:24.370 --> 00:19:26.929
then goes through the hub, and
is posted in real time

00:19:26.929 --> 00:19:30.270
to the subscribers.

00:19:30.270 --> 00:19:31.824
And that's actually all I'm
going to say about that

00:19:31.824 --> 00:19:33.307
because it's amazing.

00:19:34.790 --> 00:19:37.830
Of course it's one thing to
be able to post messages in

00:19:37.830 --> 00:19:41.220
real time from one place to
another using basic formats.

00:19:41.220 --> 00:19:44.620
Well, once people started to
do more and more interesting

00:19:44.620 --> 00:19:47.169
things on these islands, they
needed a richer way of

00:19:47.169 --> 00:19:48.919
expressing information
to their friends.

00:19:48.919 --> 00:19:50.789
Their friends could get the
information that was most

00:19:50.789 --> 00:19:54.990
valuable to them wherever they
happen to be, in a way that

00:19:54.990 --> 00:19:58.740
captured the fidelity
of those activities.

00:19:58.740 --> 00:20:00.880
The story of ActivityStreams
actually starts

00:20:00.880 --> 00:20:04.270
centuries ago in 1999.

00:20:06.290 --> 00:20:11.730
Back in 1999 the world was
a very different place.

00:20:11.730 --> 00:20:16.080
People posted information to
websites but were very careful

00:20:16.080 --> 00:20:18.380
about other people actually
having access to that

00:20:18.380 --> 00:20:20.180
information, or being able to
take it from their websites

00:20:20.180 --> 00:20:22.430
because they cared about
something called stickiness.

00:20:24.090 --> 00:20:26.420
Stickiness was a concept that
was very important during the

00:20:26.420 --> 00:20:29.000
portal era of the web, where
information would be posted

00:20:29.000 --> 00:20:31.590
from one place to another
in minimal form.

00:20:31.590 --> 00:20:34.450
So for example, you would take
an article like this posted to

00:20:34.450 --> 00:20:38.789
let's say the New York Times,
and get this information

00:20:38.789 --> 00:20:43.570
into a portal that looks
something like this.

00:20:43.570 --> 00:20:46.040
Now the format that expressed
this information was very, very

00:20:46.040 --> 00:20:49.410
primitive, very basic-- kind of
like stick figures on rocks.

00:20:49.410 --> 00:20:54.390
Essentially the RSS format
specified a very minimal number

00:20:54.390 --> 00:20:57.599
of things, of attributes, to
make it possible to take that

00:20:57.599 --> 00:20:59.019
information from one
place to another.

00:20:59.019 --> 00:21:02.220
Specifically it only really
called for providing a link,

00:21:02.220 --> 00:21:05.140
a title, and a description.

00:21:05.140 --> 00:21:08.290
Which given a portal model,
was sufficient at that time.

00:21:08.290 --> 00:21:10.710
And given how people were
somewhat concerned about their

00:21:10.710 --> 00:21:12.640
information leaking from one
place to another, and that

00:21:12.640 --> 00:21:15.850
whole stickiness phenomenon,
this is about what people

00:21:15.850 --> 00:21:17.830
were able to come up with.

00:21:17.830 --> 00:21:20.830
Well let's fast forward
six years to 2005.

00:21:22.080 --> 00:21:27.460
In 2005 a new format was
produced called Atom.

00:21:27.460 --> 00:21:30.200
Now Atom was a slight
rearticulation of the

00:21:30.200 --> 00:21:31.429
ideas expressed in RSS.

00:21:32.670 --> 00:21:35.380
And they added some additional
critical attributes.

00:21:35.380 --> 00:21:38.890
Specifically an author-- of
course who wrote the piece is

00:21:38.890 --> 00:21:42.110
very important-- a unique ID so
that you could identify the

00:21:42.110 --> 00:21:45.970
story if it came from multiple
sources, and when it was last

00:21:45.970 --> 00:21:48.320
updated, a sort of timestamp so
that you could actually

00:21:48.320 --> 00:21:50.380
differentiate between what the
most recent version

00:21:50.380 --> 00:21:53.220
of the story was.

00:21:53.220 --> 00:21:56.080
But this format was
still predicated on the

00:21:56.080 --> 00:21:59.350
notion of providing
information to portals.

00:21:59.350 --> 00:22:01.399
Essentially bringing this
information in a very

00:22:01.399 --> 00:22:04.810
stripped-down, minimal way to
these places that people would

00:22:04.810 --> 00:22:05.910
use as, I guess,
their homepages.

00:22:07.870 --> 00:22:09.770
Let's fast forward
to today in 2010.

00:22:12.260 --> 00:22:15.090
And we still see this type of
information being produced

00:22:15.090 --> 00:22:17.049
largely in this format.

00:22:17.049 --> 00:22:19.430
Which makes a whole
lot of sense.

00:22:19.430 --> 00:22:23.980
However in the last decade, the
best experience that we have in

00:22:23.980 --> 00:22:26.530
today's modern browsers for
consuming that information,

00:22:26.530 --> 00:22:28.690
looks something like this.

00:22:28.690 --> 00:22:30.870
And if you think about the
portals used to look, versus

00:22:30.870 --> 00:22:33.470
how modern browsers present
this information, not a

00:22:33.470 --> 00:22:35.320
whole lot has changed.

00:22:35.320 --> 00:22:39.410
And so as the social web has
evolved, we're still relying

00:22:39.410 --> 00:22:42.540
on the same basic format for
expressing this information

00:22:42.540 --> 00:22:46.100
and syndicating it from
one place to another.

00:22:47.790 --> 00:22:51.279
When it comes to machines
helping us to filter this

00:22:51.279 --> 00:22:55.340
information and figure out what
the most relevant bits are, how

00:22:55.340 --> 00:22:57.440
are they supposed to
differentiate if all

00:22:57.440 --> 00:22:59.020
of it looks the same?

00:22:59.020 --> 00:23:01.889
And yet we know that people are
actually engaging in richer

00:23:01.889 --> 00:23:04.570
and richer and more diverse
activities across the web--

00:23:04.570 --> 00:23:07.640
even across the same websites.

00:23:08.290 --> 00:23:11.030
They're doing different
types of activities.

00:23:11.030 --> 00:23:16.309
Well all this is the back story
for the ActivityStreams format.

00:23:16.309 --> 00:23:20.300
What we've essentially done is
we've taken that basic format

00:23:20.300 --> 00:23:24.960
for RSS and Atom of author,
title, and link, as the sort of

00:23:24.960 --> 00:23:27.750
primitive structures for this
information, and we've changed

00:23:27.750 --> 00:23:32.750
it just slightly to express
information in an author, verb,

00:23:32.750 --> 00:23:36.070
object archetype, with
an optional target.

00:23:36.070 --> 00:23:38.679
For example, when you're
posting photos to a

00:23:38.679 --> 00:23:43.850
photo album or posting
something to a wish list.

00:23:43.850 --> 00:23:45.880
The other thing that we've done
is we've taken the Atom

00:23:45.880 --> 00:23:52.450
format-- which again only
specifies these six attributes

00:23:52.450 --> 00:23:58.340
as being very important-- and
we've layered in a verb, an

00:23:58.340 --> 00:24:00.410
object-type, and
again a target.

00:24:00.410 --> 00:24:04.700
We've actually reused the
author element as the actor.

00:24:04.700 --> 00:24:07.210
So what's nice is that if
you're already producing an

00:24:07.210 --> 00:24:12.799
Atom feed of content on your
website, upgrading to produce

00:24:12.799 --> 00:24:17.790
the AcitivityStreams format
is actually rather simple.

00:24:17.790 --> 00:24:21.710
In fact, this is an example
of Atom and ActivityStreams

00:24:21.710 --> 00:24:23.240
woven together.

00:24:23.240 --> 00:24:30.049
The important pieces here
to notice are these.

00:24:30.049 --> 00:24:35.250
This basic additional
information allows a consumer

00:24:35.250 --> 00:24:41.470
of ActivityStreams to identify
a person that posted a note.

00:24:41.470 --> 00:24:43.350
Now that seems very simple
and very primitive.

00:24:43.350 --> 00:24:44.990
I mean, this is the same
essential information

00:24:44.990 --> 00:24:46.280
that we had before.

00:24:46.280 --> 00:24:48.970
Except that we can use that
structure and those three

00:24:48.970 --> 00:24:52.030
pieces of information to
encompass a whole lot of

00:24:52.030 --> 00:24:53.480
different types of activities.

00:24:53.480 --> 00:24:59.410
For example, if a person
shared a link, or if somebody

00:24:59.410 --> 00:25:03.620
started following somebody
else-- maybe even you.

00:25:03.620 --> 00:25:05.710
But this need not be
just about people.

00:25:05.710 --> 00:25:08.130
It can also be used for
services, for example,

00:25:08.130 --> 00:25:10.710
to update their status.

00:25:10.710 --> 00:25:14.320
So these primitive structures
can actually do a whole lot

00:25:14.320 --> 00:25:17.480
to help people find out
what's going on across the

00:25:17.480 --> 00:25:19.600
distributed social web.

00:25:19.600 --> 00:25:21.600
Now there's another nice
feature here which I think is

00:25:21.600 --> 00:25:24.290
very important to point out.

00:25:24.290 --> 00:25:27.879
In the earlier days of
RSS and Atom, and

00:25:27.879 --> 00:25:30.470
increasingly now as all this
information and all our friends

00:25:30.470 --> 00:25:33.080
are starting to produce more
and more information, we're

00:25:33.080 --> 00:25:35.950
left with kind of an
information glut.

00:25:35.950 --> 00:25:38.860
On the one hand, people call
this information overload.

00:25:38.860 --> 00:25:41.450
But I would call it
information abundance.

00:25:41.450 --> 00:25:43.840
It's as though we have
this massive coal.

00:25:43.840 --> 00:25:46.610
And yet we haven't figured out
how to actually refine it yet

00:25:46.610 --> 00:25:48.500
to do more interesting things.

00:25:48.500 --> 00:25:50.539
And so of course on the one
hand, this information

00:25:50.539 --> 00:25:53.210
abundance comes in and pummels
us over the head to the point

00:25:53.210 --> 00:25:56.050
where you know we just can't
deal with it anymore.

00:25:56.050 --> 00:25:59.130
And this is the whole idea
of information overload.

00:25:59.130 --> 00:25:59.789
It's just stressful.

00:25:59.789 --> 00:26:03.090
What are we supposed to do
with all of this information?

00:26:03.090 --> 00:26:06.440
ActivityStreams, in contrast,
makes it possible to actually

00:26:06.440 --> 00:26:10.835
filter this information based
on that actor, verb, object

00:26:10.835 --> 00:26:14.460
model so that we're getting the
information that we need, when

00:26:14.460 --> 00:26:19.350
we need it, from the people
that we most care about.

00:26:19.350 --> 00:26:21.180
The third technology that
I want to talk to you

00:26:21.180 --> 00:26:24.130
about is bleeding edge.

00:26:24.130 --> 00:26:25.590
It's not even final yet.

00:26:25.590 --> 00:26:27.610
In fact, you'll hear more about
it this afternoon from John

00:26:27.610 --> 00:26:29.070
Panzer and Joseph Smarr.

00:26:29.070 --> 00:26:31.880
And it's a technology
called Salmon.

00:26:31.880 --> 00:26:36.580
Now when I talked to you about
PubSubHubbub previously, one of

00:26:36.580 --> 00:26:39.350
the interesting aspects of this
model was that the information

00:26:39.350 --> 00:26:42.380
flowed from one place-- in this
case Walt to Kate-- in

00:26:42.380 --> 00:26:43.490
a unidirectional way.

00:26:43.490 --> 00:26:46.330
That is it flowed from one
place to another without

00:26:46.330 --> 00:26:49.290
necessarily providing a
way to respond back.

00:26:49.290 --> 00:26:53.580
So if Kate wanted to actually
respond, it's not clear

00:26:53.580 --> 00:26:55.159
how she would do that.

00:26:55.159 --> 00:26:59.039
So Salmon provides a mechanism
to actually respond to these

00:26:59.039 --> 00:27:02.604
activities in real time using a
push mechanism that looks

00:27:02.604 --> 00:27:04.820
a little bit like this.

00:27:04.820 --> 00:27:08.045
So essentially she writes
something, a little

00:27:08.045 --> 00:27:09.160
Salmon comes along.

00:27:09.160 --> 00:27:11.390
And because Salmon have
actually very good senses of

00:27:11.390 --> 00:27:14.420
smell, they're able to find
their way back to the original

00:27:14.420 --> 00:27:19.580
poster source in a way that's
actually secure and fast.

00:27:19.580 --> 00:27:25.050
The other nice feature of
Salmon is that it works for

00:27:25.050 --> 00:27:27.190
mentioning people across
different islands.

00:27:27.190 --> 00:27:31.020
So in this case, let's say that
Kate posts a message that

00:27:31.020 --> 00:27:32.179
she wants to share
with her friends.

00:27:32.179 --> 00:27:36.910
But her friends happen to
be on different islands.

00:27:37.800 --> 00:27:39.820
The messages arrive at
the proper place because

00:27:39.820 --> 00:27:43.020
they've been addressed
to people elsewhere.

00:27:43.020 --> 00:27:46.586
So in this case, this
goes back to Jack on the

00:27:46.586 --> 00:27:46.860
island of clickset.com.

00:27:49.970 --> 00:27:54.580
And in this case, John receives
the message on the island

00:27:54.580 --> 00:27:55.890
of the [? Atolia. ?]

00:27:55.890 --> 00:27:59.050
So by posting these messages in
a certain way using

00:27:59.050 --> 00:28:01.710
WebFinger-based identifiers--
again essentially email

00:28:01.710 --> 00:28:05.570
addresses-- we're able to send
these messages back without

00:28:05.570 --> 00:28:07.330
relying on the email
infrastructure.

00:28:07.330 --> 00:28:10.520
So this works over HTTP by
just posting information

00:28:10.520 --> 00:28:11.520
back to Salmon endpoints.

00:28:11.520 --> 00:28:14.859
I'm not going to tell you more
about this now because Joseph

00:28:14.859 --> 00:28:17.070
and John have to have something
to talk about this afternoon.

00:28:17.070 --> 00:28:20.710
But I do invite you to learn
more about these technologies

00:28:20.710 --> 00:28:25.770
at j.mp/pubsubhubbub,
activitystea.ms, and

00:28:25.770 --> 00:28:25.860
salmon-protocol.org.

00:28:31.539 --> 00:28:35.300
Combining these technologies,
the open web technologists

00:28:35.300 --> 00:28:37.360
essentially were able to
provide a mechanism for people

00:28:37.360 --> 00:28:39.600
distributed across all these
different islands to stay in

00:28:39.600 --> 00:28:43.560
touch in a rich way, and to
communicate in real time, and

00:28:43.560 --> 00:28:47.350
to respond back regardless of
where they happened to live.

00:28:47.350 --> 00:28:49.680
Which of course, once again,
made everybody extremely

00:28:49.680 --> 00:28:52.180
happy this time.

00:28:52.180 --> 00:28:55.810
And so they all lived,
at least in this case,

00:28:55.810 --> 00:29:00.020
happily ever after.

00:29:00.020 --> 00:29:02.350
Now, no story is complete
without an epic-log.

00:29:04.350 --> 00:29:11.870
And so in chapter 1 we learned
about OpenID and identity and

00:29:11.870 --> 00:29:15.270
profile technology which is
currently actually being revved

00:29:15.270 --> 00:29:18.450
in a very important way.

00:29:18.450 --> 00:29:21.290
But this technology allowed
for islanders to essentially

00:29:21.290 --> 00:29:25.179
identify each other as they
traversed the known waters of

00:29:25.179 --> 00:29:28.210
the island of space,
or something.

00:29:28.210 --> 00:29:32.010
In chapter 2, we learned about
WebFinger-- a way for learning

00:29:32.010 --> 00:29:34.460
more about email addresses
which are more familiar to

00:29:34.460 --> 00:29:38.900
people as a way of representing
who they are as they

00:29:38.900 --> 00:29:41.260
communicate with one another.

00:29:41.260 --> 00:29:44.230
And as we just heard about in
chapter 3, ActivityStreams,

00:29:44.230 --> 00:29:48.230
Salmon, and PubSubHubbub
provide the mechanism for

00:29:48.230 --> 00:29:54.710
people to stay in touch
regardless of where they went.

00:29:54.710 --> 00:29:58.876
Now all of this provides a
useful backdrop for Google and

00:29:58.876 --> 00:30:01.440
the social web, and where
Google wants to see

00:30:01.440 --> 00:30:05.770
the social web go.

00:30:05.770 --> 00:30:09.590
Of course I'm using this island
metaphor to illustrate where we

00:30:09.590 --> 00:30:14.559
are with the web today, and
where I think the web should

00:30:14.559 --> 00:30:17.360
move to to enable cross-site
social networking

00:30:17.360 --> 00:30:20.750
activities to occur.

00:30:20.750 --> 00:30:24.690
By leveraging a number of
emerging technologies, we're

00:30:24.690 --> 00:30:28.639
starting to see the emergence
of a social web that is

00:30:28.639 --> 00:30:33.970
actually the entire scale and
scope of the web itself, as

00:30:33.970 --> 00:30:38.409
opposed to being restricted to
any one particular island.

00:30:38.409 --> 00:30:42.349
And for us that ability to have
choice among which islands you

00:30:42.349 --> 00:30:46.519
tend to spend your time
in is fundamental.

00:30:46.519 --> 00:30:49.710
In fact these technologies
are forming the foundation

00:30:49.710 --> 00:30:54.480
for the Buzz platform.

00:30:54.480 --> 00:30:57.660
DeWitt Clinton, who is one of
my co-workers, actually wrote

00:30:57.660 --> 00:31:03.050
in a Buzz that the idea behind
Buzz is that some day any host

00:31:03.050 --> 00:31:05.390
on the web should be able to
implement these open protocols

00:31:05.390 --> 00:31:11.549
and technologies without any
one company in the middle.

00:31:11.549 --> 00:31:15.750
And that specifically, Google
Buzz itself, would just be

00:31:15.750 --> 00:31:19.650
another node, a very good one
we hope of course,

00:31:19.650 --> 00:31:22.520
among many peers.

00:31:22.520 --> 00:31:26.430
And by stringing all these
things together and promoting

00:31:26.430 --> 00:31:30.150
the technologies that power and
open in social web, we hope to

00:31:30.150 --> 00:31:34.230
make the entire web experience
much better for many, many more

00:31:34.230 --> 00:31:38.169
people for years and
decades to come.

00:31:38.169 --> 00:31:42.380
So with that I'd
like to conclude.

00:31:42.380 --> 00:31:45.790
Of course I'd also like to
thank Jack and Kate for their

00:31:45.790 --> 00:31:47.250
participation in this talk.

00:31:47.250 --> 00:31:52.210
And I'd also like to remind you
to check out the back channel

00:31:52.210 --> 00:31:54.090
discussion on Google Wave:
j.mp/io-googlesocial.

00:31:57.150 --> 00:32:00.770
And-- a couple more
advertisements for you: I'd

00:32:00.770 --> 00:32:03.560
like to invite you to check
out What's the hubbub

00:32:03.560 --> 00:32:04.570
about Google Buzz APIs?

00:32:05.840 --> 00:32:10.529
presented at 1:45, next in
room 8 by Chris Chabot.

00:32:10.529 --> 00:32:13.570
Later on again this afternoon
from 3:00 to 4:00 pm: Bridging

00:32:13.570 --> 00:32:16.450
the Islands which will be the
code-centric version of this

00:32:16.450 --> 00:32:21.090
talk, I hope, presented
by Joseph and John.

00:32:21.090 --> 00:32:24.660
And finally tomorrow-- this is
not today, this is tomorrow-- a

00:32:24.660 --> 00:32:27.549
fireside chat with the social
web team from Google from

00:32:27.549 --> 00:32:31.060
2:15 to 3:15 in the
Fireside Chat Room.

00:32:31.060 --> 00:32:31.970
And so that's all I have.

00:32:31.970 --> 00:32:36.539
And so I open the floor for
questions and answers.

00:32:36.539 --> 00:32:39.860
One request that I have-- well
let's make it two-- is that if

00:32:39.860 --> 00:32:43.950
you do have a question, you
come up to the mic, and that

00:32:43.950 --> 00:32:47.299
your question begins with a
capital letter and ends

00:32:47.299 --> 00:32:49.650
in a question mark.

00:32:49.650 --> 00:32:50.630
Otherwise we're good.

00:32:50.630 --> 00:32:52.582
All right thank you very
much your attention.

00:32:53.075 --> 00:33:00.470
[APPLAUSE]

00:33:00.470 --> 00:33:04.250
CHRIS MESSINA: Questions, yes?

00:33:04.250 --> 00:33:04.970
AUDIENCE: Thanks.

00:33:05.370 --> 00:33:11.250
Have you given much thought to
like long-term data retention

00:33:11.250 --> 00:33:13.370
for all of this social
media activity?

00:33:13.980 --> 00:33:16.105
So one thing that comes to mind
for me is the Library of

00:33:16.105 --> 00:33:17.350
Congress deal with Twitter.

00:33:17.350 --> 00:33:18.970
It's going to live forever.

00:33:18.970 --> 00:33:20.860
Have you thought about maybe
a time [UNINTELLIGIBLE]

00:33:20.860 --> 00:33:25.590
expirations on any of this data
so it's not out there forever?

00:33:25.590 --> 00:33:28.150
CHRIS MESSINA: So the question
is about data retention.

00:33:28.150 --> 00:33:30.980
And of course, data retention
has a lot of different

00:33:30.980 --> 00:33:32.800
ramifications to it.

00:33:32.800 --> 00:33:36.669
What I would say, is that the
thing that I'm most interested

00:33:36.669 --> 00:33:38.850
in with a lot of these
technologies and protocols, is

00:33:38.850 --> 00:33:41.330
first of all making it possible
for this data to flow

00:33:41.330 --> 00:33:43.330
between different places.

00:33:43.330 --> 00:33:45.420
When it comes to the retention
of this information I feel like

00:33:45.420 --> 00:33:49.980
that's both a provider specific
implementation point, as well

00:33:49.980 --> 00:33:54.710
as an individual choice
aspect of this.

00:33:54.710 --> 00:33:57.289
So whether you'd prefer for
your data to be captured, and

00:33:57.289 --> 00:34:01.040
sequestered, and stored, for
eons or for five minutes, it

00:34:01.040 --> 00:34:04.700
should be possible using
these technologies.

00:34:04.700 --> 00:34:06.909
So the technologies themselves
and these protocols don't

00:34:06.909 --> 00:34:10.039
necessarily need to I think,
provide a policy for that.

00:34:10.039 --> 00:34:12.469
But I do hope that the choice,
increasing the number of

00:34:12.469 --> 00:34:14.890
choices on the social web would
enable people to have the

00:34:14.890 --> 00:34:18.449
ability to pick a provider
that meets their needs.

00:34:18.449 --> 00:34:22.609
Does that make sense?

00:34:22.609 --> 00:34:23.009
OK?

00:34:23.009 --> 00:34:23.517
Other questions?

00:34:26.565 --> 00:34:27.074
No?

00:34:31.139 --> 00:34:33.589
All right well, you guys
are free to go then.

00:34:33.589 --> 00:34:33.779
Thank you very much.

00:34:33.779 --> 00:34:35.769
Oh, sorry one more question.

00:34:35.769 --> 00:34:39.579
AUDIENCE: In the story that you
told, there are two people.

00:34:41.469 --> 00:34:43.979
As a person, I have
multiple personalities.

00:34:45.789 --> 00:34:48.019
I'm walking out of my place
and I'm a member of some

00:34:48.019 --> 00:34:49.119
sort of social club.

00:34:49.119 --> 00:34:51.299
And I have multiple ideas.

00:34:54.539 --> 00:35:00.240
Sometime I'd like to connect
multiple things to different

00:35:00.240 --> 00:35:01.390
ideas so you can choose one.

00:35:01.390 --> 00:35:03.749
CHRIS MESSINA: So you're
talking about personas.

00:35:03.749 --> 00:35:06.474
So one thing that's very
important to me, and I think to

00:35:06.474 --> 00:35:08.569
a lot of people who work on
these protocols and

00:35:08.569 --> 00:35:11.984
technologies, doesn't on the
one hand go back to the ability

00:35:11.984 --> 00:35:14.239
to have choice in the
providers that you use.

00:35:14.239 --> 00:35:17.149
The second piece, which I think
answers your question in some

00:35:17.149 --> 00:35:21.409
ways, is that identity in
particular is a very

00:35:21.409 --> 00:35:23.669
complex issues.

00:35:23.669 --> 00:35:26.979
So providing people with the
means to express different

00:35:26.979 --> 00:35:30.689
facets of their identity in
different contexts, I think

00:35:30.689 --> 00:35:33.809
is extremely important.

00:35:33.809 --> 00:35:35.609
However one of the challenges
that we have with a lot of

00:35:35.609 --> 00:35:38.270
the emerging social web
technologies, is first of all

00:35:38.270 --> 00:35:41.359
to make it easy enough for many
more people to implement and

00:35:41.359 --> 00:35:43.589
adopt these technologies that
first allow for federated

00:35:43.589 --> 00:35:45.410
identity to work on the web.

00:35:45.410 --> 00:35:49.130
And then secondly, to provide
for these more expressive

00:35:49.130 --> 00:35:51.390
mechanisms that allow you
to actually segment your

00:35:51.390 --> 00:35:52.080
profile if you choose to.

00:35:52.080 --> 00:35:54.269
AUDIENCE: Or if I have
multiple profiles?

00:35:54.269 --> 00:35:58.279
CHRIS MESSINA: Or if you have
multiple profiles, precisely.

00:35:58.279 --> 00:36:01.164
Because we don't have that
basic fundamental layer yet

00:36:01.164 --> 00:36:05.009
expressed either in the web
itself or in web browsers, it's

00:36:05.009 --> 00:36:07.339
very hard to even approximate
the type of feature that

00:36:07.339 --> 00:36:09.299
you are requesting.

00:36:09.299 --> 00:36:13.049
However once again, nothing in
these technologies prohibits

00:36:13.049 --> 00:36:16.420
or inhibits that possibility
from existing in the future.

00:36:16.420 --> 00:36:19.180
So ideally with getting more
people involved in these things

00:36:19.180 --> 00:36:22.380
we can actually see those type
of use cases developed more

00:36:22.380 --> 00:36:24.469
and played out more fully.

00:36:24.469 --> 00:36:25.609
OK another question?

00:36:25.609 --> 00:36:26.599
SPEAKER: Chris you
have a bit more time.

00:36:26.599 --> 00:36:29.219
There are a lot of questions
in Wave in the moderator.

00:36:29.219 --> 00:36:33.681
I don't know if you're able
to pull that up up there.

00:36:33.681 --> 00:36:34.039
You should be able to.

00:36:34.039 --> 00:36:35.759
CHRIS MESSINA: I don't know.

00:36:35.759 --> 00:36:39.420
I turned off the internet
on my computer.

00:36:39.420 --> 00:36:41.278
Does somebody want to tell me
the questions on moderator?

00:36:41.787 --> 00:36:42.297
Please.

00:36:48.919 --> 00:36:49.429
OK.

00:36:49.429 --> 00:36:52.550
So the question is about who
owns the contents that gets

00:36:52.550 --> 00:36:55.040
aggregated and syndicated
I suppose, into all

00:36:55.040 --> 00:36:56.999
these applications.

00:36:56.999 --> 00:36:58.929
And that also is a
very tricky question.

00:36:58.929 --> 00:37:01.839
And one that I don't know that
we have either the policy or

00:37:01.839 --> 00:37:05.059
the technological means
to address completely.

00:37:05.319 --> 00:37:09.299
Part of it is because social
data itself is inherently a new

00:37:09.299 --> 00:37:14.359
type of intellectual asset
that I don't quite know how

00:37:14.359 --> 00:37:15.209
it's going to play out.

00:37:15.209 --> 00:37:19.649
So for example, if I post a
photo on the social web and you

00:37:19.649 --> 00:37:22.219
download that photo to your
hard drive, should I have the

00:37:22.219 --> 00:37:24.930
right to delete that photo
off of your hard drive.

00:37:24.930 --> 00:37:28.660
Well this is an expectation
that some people actually have.

00:37:28.660 --> 00:37:30.619
On the other hand, the
person that downloaded that

00:37:30.619 --> 00:37:32.739
photo would think very
differently about it.

00:37:32.739 --> 00:37:35.619
Now we've adapted our
expectations, for

00:37:35.619 --> 00:37:37.199
example, of email.

00:37:37.199 --> 00:37:39.620
Such that when we send and
email to somebody else, we

00:37:39.620 --> 00:37:42.619
don't necessarily expect to
be able to take it back,

00:37:42.619 --> 00:37:44.279
especially if that
information goes from one

00:37:44.279 --> 00:37:45.979
server to another.

00:37:45.979 --> 00:37:48.429
We might be able to even
develop the technical means

00:37:48.429 --> 00:37:50.259
to make it possible to
retract those emails.

00:37:50.710 --> 00:37:53.109
But that creates a different
type of social expectation and

00:37:53.109 --> 00:37:55.959
a different type of social
contract then people

00:37:55.959 --> 00:37:57.529
currently expect.

00:37:57.529 --> 00:38:00.739
And so while we can do
many, many things from a

00:38:00.739 --> 00:38:02.739
technological perspective,
there's still a lot of

00:38:02.739 --> 00:38:05.159
behavioral things that need to
be worked out between people

00:38:05.159 --> 00:38:07.349
and between what their
expectations are to answer

00:38:07.349 --> 00:38:10.039
those questions fully.

00:38:10.039 --> 00:38:12.470
Unfortunately or fortunately,
we're spending a lot more time

00:38:12.470 --> 00:38:14.650
again just making it possible
for the data to flow in the

00:38:14.650 --> 00:38:18.864
first place, and then hope that
people will be able to work out

00:38:18.864 --> 00:38:21.849
the different policy mechanisms
that'll be enforced through

00:38:21.849 --> 00:38:26.649
other means once the
technology is there.

00:38:26.649 --> 00:38:31.269
Other questions?

00:38:31.269 --> 00:38:33.482
SPEAKER: I can read the top few
off moderator if you want.

00:38:33.482 --> 00:38:34.514
CHRIS MESSINA: Mhmm.

00:38:37.609 --> 00:38:38.819
SPEAKER: How do you see
Buzz competing with

00:38:38.819 --> 00:38:42.140
Facebook or Twitter?

00:38:42.140 --> 00:38:45.219
CHRIS MESSINA:
Very well I hope.

00:38:45.219 --> 00:38:47.579
Yeah I think you know, one of
the goals again with Buzz, is

00:38:47.579 --> 00:38:51.229
for there to be a much broader
set of people supporting

00:38:51.229 --> 00:38:52.150
these technologies.

00:38:52.150 --> 00:38:57.189
And in fact, we've been working
through the communities Twitter

00:38:57.189 --> 00:39:00.359
and Facebook to make it
possible for whether it's

00:39:00.359 --> 00:39:03.670
ActivityStreams, or
authentication information,

00:39:03.670 --> 00:39:05.989
profiles, to be able to become
much more interoperable.

00:39:06.789 --> 00:39:09.024
We're at the very, very early
stage in the development

00:39:09.024 --> 00:39:10.150
of social web.

00:39:10.150 --> 00:39:12.749
And I think hopefully this
competition will actually force

00:39:12.749 --> 00:39:16.849
everybody to focus on the user,
and provide better experiences

00:39:16.849 --> 00:39:22.909
through these emerging
technologies.

00:39:22.909 --> 00:39:27.019
SPEAKER: So social streams
looks like the syntax, or

00:39:27.019 --> 00:39:27.419
those kinds of interchanges.

00:39:27.419 --> 00:39:29.884
How are people thinking about
managing the semantics, like

00:39:29.884 --> 00:39:32.979
what types of messages,
activities, etc.?

00:39:32.979 --> 00:39:33.130
CHRIS MESSINA: Right.

00:39:33.130 --> 00:39:36.969
So when it comes to developing
ActivityStreams, and

00:39:36.969 --> 00:39:41.759
specifically the schema I'll
say, what we've done so far

00:39:41.759 --> 00:39:44.219
through the community, is we've
actually done a great deal of

00:39:44.219 --> 00:39:47.359
research borrowing from my
microformats process.

00:39:47.359 --> 00:39:49.929
Namely we've gone out across
the social web and we've looked

00:39:49.929 --> 00:39:52.690
for existing examples of
activities that are being

00:39:52.690 --> 00:39:55.189
produced by social websites
and we've extracted

00:39:55.189 --> 00:39:56.759
common patterns.

00:39:56.759 --> 00:40:00.129
From those common patterns,
we've come up with a list of 40

00:40:00.129 --> 00:40:03.779
verbs and object types that
Buzz currently supports as a

00:40:03.779 --> 00:40:05.810
subset, but that we hope to see
many more providers

00:40:05.810 --> 00:40:07.279
start to produce.

00:40:07.279 --> 00:40:11.309
Over time, because we've
made it possible for the

00:40:11.309 --> 00:40:12.709
extensibility model of
ActivityStreams to

00:40:12.709 --> 00:40:15.060
support URI-based verbs
and object-types.

00:40:16.029 --> 00:40:18.879
You could essentially develop
your own set of verbs and

00:40:18.879 --> 00:40:20.980
object-types that you use
to interoperate with

00:40:20.980 --> 00:40:24.279
different providers.

00:40:24.279 --> 00:40:27.319
So I think this creates a very
good foundation for people to

00:40:27.319 --> 00:40:28.869
do interop between
different places.

00:40:28.869 --> 00:40:31.320
But we're starting by looking
at what's already in the wild

00:40:31.320 --> 00:40:34.402
as opposed to inventing things
that don't already exist.

00:40:34.819 --> 00:40:36.320
Does that answer you question?

00:40:36.320 --> 00:40:37.815
SPEAKER 1: Yes.

00:40:37.815 --> 00:40:38.812
Thank you.

00:40:39.809 --> 00:40:42.069
AUDIENCE: User facing privacy
controls have seemed to

00:40:42.069 --> 00:40:43.170
be very challenging.

00:40:43.170 --> 00:40:45.349
On the one hand you have
Facebook which has this

00:40:45.349 --> 00:40:46.190
incredibly complex tree.

00:40:46.190 --> 00:40:48.680
On the other hand Buzz faced
some challenges early on.

00:40:48.680 --> 00:40:52.149
Now you have locked down almost
completely, which is good.

00:40:52.149 --> 00:40:55.349
Are you working on a better
version for simplified user

00:40:55.349 --> 00:41:00.289
facing privacy controls
that are also effective?

00:41:00.289 --> 00:41:02.600
CHRIS MESSINA: This is one of
the questions that keeps me up

00:41:02.600 --> 00:41:04.440
at night in a lot of respects.

00:41:05.049 --> 00:41:07.920
As you notice, there's not
a lot of code in his talk.

00:41:07.920 --> 00:41:10.999
That's because my background is
actually as a designer and as

00:41:10.999 --> 00:41:12.569
a user experience creator.

00:41:12.569 --> 00:41:16.619
And as a result of that, I've
been watching very carefully

00:41:16.619 --> 00:41:20.240
not only all the privacy
interfaces that of course are

00:41:20.240 --> 00:41:23.599
being developed, but also
trying to understand how to

00:41:23.599 --> 00:41:26.119
communicate to people different
social contexts and

00:41:26.119 --> 00:41:28.989
environments, and who was able
to see the things that they

00:41:28.989 --> 00:41:32.199
publish and produce, and what
their expectations are.

00:41:32.199 --> 00:41:36.219
This is an extremely
large challenge.

00:41:36.219 --> 00:41:38.269
Because from interface
perspective you want to

00:41:38.269 --> 00:41:40.559
of course, get out of
the way of the user.

00:41:40.559 --> 00:41:43.439
But from a user perspective, if
things don't work out the way

00:41:43.439 --> 00:41:46.159
you expect them to, then
your trust gets erroded.

00:41:47.019 --> 00:41:50.140
And so we haven't quite found
the right balance between

00:41:50.140 --> 00:41:53.280
making it very easy for people
to express their privacy and

00:41:53.280 --> 00:41:56.660
publicity desires with an
interface that get

00:41:56.660 --> 00:41:58.089
out of their way.

00:41:58.089 --> 00:42:01.469
That said, we've done a lot
of research and I think are

00:42:01.469 --> 00:42:04.709
developing a number of new
interfaces and interactions

00:42:04.709 --> 00:42:06.509
to help with that.

00:42:06.509 --> 00:42:08.569
I personally have been
doing work through the

00:42:08.569 --> 00:42:10.129
OpenID foundation.

00:42:10.129 --> 00:42:12.819
And I'll be doing much more of
that this summer to develop a

00:42:12.819 --> 00:42:15.749
series of user interaction
guidelines that might

00:42:15.749 --> 00:42:17.179
help with that respect.

00:42:17.179 --> 00:42:22.749
But we don't have a great
story necessarily today.

00:42:22.749 --> 00:42:25.149
AUDIENCE: Do you know of any
good examples of things that

00:42:25.149 --> 00:42:29.279
you think might be-- for
example, good examples

00:42:29.279 --> 00:42:32.640
of sites that do this
really, really well?

00:42:32.640 --> 00:42:34.381
CHRIS MESSINA: So the question
is about whether or not there

00:42:34.381 --> 00:42:38.249
are examples of sites that do
this type of thing very well.

00:42:39.150 --> 00:42:41.660
One of the things that I do is
I take a lot of screenshots

00:42:41.660 --> 00:42:42.499
of web interfaces.

00:42:43.109 --> 00:42:48.319
I invite you to check out
flickr.com/factoryjoe to see

00:42:48.319 --> 00:42:48.909
some of these interfaces.

00:42:48.909 --> 00:42:51.410
But I do think that for
example, a service called

00:42:51.410 --> 00:42:53.969
brightkite does a pretty good
job of some of these things.

00:42:53.969 --> 00:42:58.069
I think that the Buzz interface
is actually not a bad start.

00:42:58.069 --> 00:43:00.539
I think that even some of the
things that Facebook does are

00:43:00.539 --> 00:43:02.279
very innovative and
very interesting.

00:43:02.279 --> 00:43:06.259
Though of course, trying to
work to create perhaps more of

00:43:06.259 --> 00:43:08.699
an industry standard for
expressing this information to

00:43:08.699 --> 00:43:10.839
people is something that
still needs to be done.

00:43:11.759 --> 00:43:17.539
So other than that, I don't
have great examples yet.

00:43:17.539 --> 00:43:19.759
SPEAKER 1: So the next one is
an adoption question around

00:43:19.759 --> 00:43:21.009
federation, like some of the
stuff you talked about.

00:43:21.009 --> 00:43:24.400
What will it take for data
replication to stop, and a

00:43:24.400 --> 00:43:27.749
peer to peer distributed
singular data set as

00:43:27.749 --> 00:43:29.269
the social framework?

00:43:29.269 --> 00:43:32.079
CHRIS MESSINA: Can
you repeat that?

00:43:32.079 --> 00:43:33.729
SPEAKER 1: What is it going to
take to make the federation

00:43:33.729 --> 00:43:36.529
actually happen, is
the spirit of it.

00:43:37.349 --> 00:43:38.149
CHRIS MESSINA: One of the
things that I'll tell you about

00:43:38.149 --> 00:43:41.109
that I think is actually very
interesting and very exciting,

00:43:41.109 --> 00:43:43.239
just came out this past Friday.

00:43:43.239 --> 00:43:46.009
David Recordon, one of the
original architects and authors

00:43:46.009 --> 00:43:50.770
of OpenID, wrote a proposal
that pulls together a number of

00:43:50.770 --> 00:43:52.875
different ideas and concepts
that have been floating around

00:43:52.875 --> 00:43:55.400
the community for some time,
and put it into a proposal

00:43:55.400 --> 00:43:55.999
called OpenID Connect.

00:43:57.069 --> 00:43:59.619
So if you visit
openidconnect.com you can

00:43:59.619 --> 00:44:02.969
find out information
about this emerging idea.

00:44:02.969 --> 00:44:05.499
Essentially to answer your
question, one of things that

00:44:05.499 --> 00:44:08.170
we've run into as a challenge
in terms of getting these

00:44:08.170 --> 00:44:11.099
technologies adopted, is
providing the right level of

00:44:11.099 --> 00:44:14.539
benefit to publishers
as well as to users.

00:44:14.539 --> 00:44:17.169
So OpenID is a technology
that largely came out of a

00:44:17.169 --> 00:44:21.779
security and privacy centric
community of people.

00:44:21.779 --> 00:44:23.959
And then the challenge that
we've seen in the last several

00:44:23.959 --> 00:44:28.189
years, with the development of
other connect style APIs, is

00:44:28.189 --> 00:44:31.619
that single sign on alone, is
not sufficient to provide

00:44:31.619 --> 00:44:33.189
publisher value.

00:44:33.189 --> 00:44:36.359
So we're re-working parts of
OpenID to make it possible to

00:44:36.359 --> 00:44:39.619
not only identify someone who
chooses to log in with a

00:44:39.619 --> 00:44:42.610
certain profile, but also to
get access to the data that

00:44:42.610 --> 00:44:44.329
they choose to share.

00:44:44.329 --> 00:44:48.489
So combining OAuth 2.0 and
OpenID together, the hope is

00:44:48.489 --> 00:44:52.439
that we can actually provide
enough publisher value while

00:44:52.439 --> 00:44:56.419
still preserving the original,
both decentralization and

00:44:56.419 --> 00:44:59.294
privacy centric aspects of
OpenID to get wider

00:44:59.294 --> 00:45:01.219
spread adoption.

00:45:01.219 --> 00:45:04.830
So a number of things from the
user experience to publisher

00:45:04.830 --> 00:45:07.559
value to the complexity of the
technology, and they we're

00:45:07.559 --> 00:45:09.329
finally going back to the
drawing board in some of these

00:45:09.329 --> 00:45:13.240
things and making some solid
progress actually to get better

00:45:13.240 --> 00:45:16.429
adoption of these technologies

00:45:16.429 --> 00:45:17.109
AUDIENCE: Thanks for the talk.

00:45:17.109 --> 00:45:18.529
I have two questions.

00:45:18.529 --> 00:45:22.170
One, I was wondering if you
could comment on the current

00:45:22.170 --> 00:45:24.739
speed with which tweets are
being brought into Buzz.

00:45:24.739 --> 00:45:26.390
Because I know they happen
really quickly on a Google

00:45:26.390 --> 00:45:28.179
search but on Buzz sometimes
it's hours and hours.

00:45:28.720 --> 00:45:32.299
And the second, I was wondering
if you could give me your

00:45:32.299 --> 00:45:36.289
opinion on the current Facebook
privacy issues in context of

00:45:36.289 --> 00:45:39.879
the Buzz launch and sort of the
hubbub that happened there.

00:45:39.879 --> 00:45:41.439
CHRIS MESSINA: Those
are tough questions.

00:45:41.789 --> 00:45:44.269
The first question is about
speed in which tweets are

00:45:44.269 --> 00:45:45.889
being brought into Buzz.

00:45:45.889 --> 00:45:48.379
And unfortunately I'm not
the authority for that.

00:45:48.379 --> 00:45:49.879
So I can't speak to that.

00:45:50.329 --> 00:45:54.339
The second question is about
Facebook, and privacy, and

00:45:54.339 --> 00:45:57.499
the Buzz launch, and so on.

00:45:57.499 --> 00:45:58.640
The thing that I would say
about that is that first

00:45:58.640 --> 00:46:01.279
of all, there's a lot of
improvements that have been

00:46:01.279 --> 00:46:03.029
made to Buzz since it launched.

00:46:03.029 --> 00:46:06.700
I think that we've learned a
great deal in that process.

00:46:06.700 --> 00:46:08.959
I'm not specifically on
the Buzz product team.

00:46:08.959 --> 00:46:11.309
Though I know that there are
countless conversations and

00:46:11.309 --> 00:46:13.480
debates that have gone on to
improve the product, and to

00:46:13.480 --> 00:46:15.989
make it more responsive to
peoples' expectations.

00:46:15.989 --> 00:46:18.440
As I said in my previous
answer, this is a

00:46:18.440 --> 00:46:20.859
very wide open area.

00:46:20.859 --> 00:46:23.789
And one that deserves not only
a great deal of study, but also

00:46:23.789 --> 00:46:27.679
I think the involvement of
a lot more disciplines to

00:46:27.679 --> 00:46:30.979
understand what's going on.

00:46:30.979 --> 00:46:33.450
So i'm personally watching all
these things very closely,

00:46:33.450 --> 00:46:36.519
both as a designer and
as a technologist.

00:46:36.519 --> 00:46:38.209
And I think we're going to
start seeing a lot more of

00:46:38.209 --> 00:46:40.900
these ideas actually being
built into the Buzz

00:46:40.900 --> 00:46:42.089
platform itself.

00:46:42.089 --> 00:46:44.390
From a technology perspective
though, we're trying to make

00:46:44.390 --> 00:46:48.060
sure that we can be generative
and expressive in how people

00:46:48.060 --> 00:46:50.490
manifest these things so that
these technologies work in both

00:46:50.490 --> 00:46:53.210
very public environments as
well as places where people

00:46:53.210 --> 00:46:56.729
have greater expectations
of privacy or control.

00:46:56.729 --> 00:46:58.449
So I can't provide a more
specific answer than that,

00:46:58.449 --> 00:47:01.839
but that's how I would
address that question.

00:47:01.839 --> 00:47:05.579
Any other questions
or comments?

00:47:05.579 --> 00:47:06.369
All right well you've
been a great audience.

00:47:06.369 --> 00:47:11.369
Thanks very much.

