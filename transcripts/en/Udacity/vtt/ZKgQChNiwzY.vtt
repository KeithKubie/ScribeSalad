WEBVTT
Kind: captions
Language: en

00:00:00.300 --> 00:00:03.460
So, the ANTS toolkit, ANTS stands for

00:00:03.460 --> 00:00:06.510
Active Node Transfer System, took a different

00:00:06.510 --> 00:00:09.110
approach to show the utility of the

00:00:09.110 --> 00:00:13.140
vision. Since modifying the protocol stack is nontrivial,

00:00:13.140 --> 00:00:15.845
instead, the ANTS toolkit is really an

00:00:15.845 --> 00:00:20.230
application-level package. And this toolkit is available for

00:00:20.230 --> 00:00:22.810
the application programmer to say, here is

00:00:22.810 --> 00:00:26.710
my pay load and quality of service constraints.

00:00:26.710 --> 00:00:30.680
And what the ANTS toolkit does is to create

00:00:30.680 --> 00:00:34.300
an ANTS header to this payload. So, the new payload

00:00:34.300 --> 00:00:35.720
looks like this. And this is what is called a

00:00:35.720 --> 00:00:39.870
capsule. And a capsule consists of an ANTS header and

00:00:39.870 --> 00:00:42.520
the actual payload. And this is what is given

00:00:42.520 --> 00:00:45.570
to a normal operation system protocol stack. And so, this

00:00:45.570 --> 00:00:49.280
normal operating system protocol stack looks at this as the

00:00:49.280 --> 00:00:52.130
payload that has been given to it and it knows

00:00:52.130 --> 00:00:55.710
the destination address, where this has to go sticks on

00:00:55.710 --> 00:00:58.670
the IP header for it. So, the new packet that

00:00:58.670 --> 00:01:01.550
is generated by the protocol stack, looks like this. It

00:01:01.550 --> 00:01:04.700
has the IP header, and the rest is payload so

00:01:04.700 --> 00:01:08.300
long as This protocol stack is concerned, but we know

00:01:08.300 --> 00:01:11.220
this payload consists of two parts. One is the normal

00:01:11.220 --> 00:01:14.850
payload that the application generated, and in addition to that

00:01:14.850 --> 00:01:17.370
there is the ANTS header that have been slapped on by

00:01:17.370 --> 00:01:20.010
the ANTS tool kit and this is what traverses the

00:01:20.010 --> 00:01:23.620
network and when it traverses the network if a node in

00:01:23.620 --> 00:01:26.870
the network is a normal node, meaning it is not a

00:01:26.870 --> 00:01:30.520
smart node, but it is a normal IP router. Then it

00:01:30.520 --> 00:01:33.670
simply uses the IP header to say, well, here is

00:01:33.670 --> 00:01:36.140
what I have to do in terms of sending the packet

00:01:36.140 --> 00:01:39.520
to the next hop, towards the destination. On the other hand,

00:01:39.520 --> 00:01:43.550
if a node that receives this packet is an active node.

00:01:43.550 --> 00:01:46.110
Then, it can actually process this ANTS header, and

00:01:46.110 --> 00:01:50.270
say, oh, this particular packet needs to be. Demuliplexed, and

00:01:50.270 --> 00:01:52.950
sent to two different routes. And it might take that

00:01:52.950 --> 00:01:57.360
intelligent routing decision based on the nature of that node.

00:01:57.360 --> 00:02:00.070
So that's the idea, that we can push one

00:02:00.070 --> 00:02:02.770
of the paint points out of the operating system, into

00:02:02.770 --> 00:02:05.290
an enhanced toolkit that lives above the operating system. So

00:02:05.290 --> 00:02:09.199
that's sort of the ANTS toolkit vision. That's one part.

00:02:09.199 --> 00:02:11.450
Now, the second part, and of course the fact

00:02:11.450 --> 00:02:14.640
that the internet may not be open to opening

00:02:14.640 --> 00:02:18.790
up all of the routers to to be processing

00:02:18.790 --> 00:02:22.390
the specialized code that comes in the capsule. So, what

00:02:22.390 --> 00:02:25.660
we do is we keep the active nodes only

00:02:25.660 --> 00:02:28.280
at the edge of the network. In other words,

00:02:28.280 --> 00:02:31.160
the core IP network is unchanged, and all of

00:02:31.160 --> 00:02:34.330
the magic happens only at the edge of the network.

00:02:34.330 --> 00:02:36.550
So, once again, if I go back to my

00:02:36.550 --> 00:02:40.570
example of sending greetings to my siblings, then only the

00:02:40.570 --> 00:02:42.840
edge nodes have to do the magic in order to

00:02:42.840 --> 00:02:46.790
take my original message and process the code to deliver

00:02:46.790 --> 00:02:50.080
it to multiple destinations. So the rest of the network

00:02:50.080 --> 00:02:52.350
can remain unchanged. So the core of the IP network

00:02:52.350 --> 00:02:55.930
can, can be unchanged, and intelligence can be at the

00:02:55.930 --> 00:02:59.194
edge of the network. So this is, sort of, allowing,

00:02:59.194 --> 00:03:02.158
sort of, matting this active network vision

00:03:02.158 --> 00:03:04.984
with the core IP network being unchanged.

