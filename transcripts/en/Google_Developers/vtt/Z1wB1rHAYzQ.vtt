WEBVTT
Kind: captions
Language: en

00:00:02.510 --> 00:00:04.940
Building functions in R is a key
skill that I'll cover in

00:00:04.940 --> 00:00:06.866
this section of videos.

00:00:06.866 --> 00:00:09.560
In this first video, the basic
structure of a function will

00:00:09.560 --> 00:00:12.040
be introduced in the context of
reporting both the mean and

00:00:12.040 --> 00:00:14.710
the standard error
of a data set.

00:00:14.710 --> 00:00:18.340
I'm going to start by creating
a test data set called d.

00:00:18.340 --> 00:00:21.100
Here, d is a sample of 25
observations from a Poisson

00:00:21.100 --> 00:00:23.870
distribution of eight
degrees of freedom.

00:00:23.870 --> 00:00:27.030
Next, I'd like to ensure that my
test data set is stable, so

00:00:27.030 --> 00:00:30.430
if I rerun my code, I'll get
the same kind of results.

00:00:30.430 --> 00:00:34.630
I'm going to do this using
the set seed function.

00:00:34.630 --> 00:00:37.390
Now if I regenerate my data
multiple times, I get the same

00:00:37.390 --> 00:00:38.640
test data set.

00:00:41.960 --> 00:00:44.590
Now onto the general structure
of a function.

00:00:44.590 --> 00:00:47.220
I'll start by carefully choosing
a function name.

00:00:47.220 --> 00:00:49.390
Here I've thought about
this ahead of time.

00:00:49.390 --> 00:00:50.670
I'm going to call
it GetMeanAndSE.

00:00:54.080 --> 00:00:57.450
Next, I'll assign a function
object to this name using the

00:00:57.450 --> 00:00:59.860
function declaration.

00:00:59.860 --> 00:01:02.680
I've provided a generic argument
x to represent the

00:01:02.680 --> 00:01:04.989
data, and I'll use braces to
contain the code to be

00:01:04.989 --> 00:01:08.172
executed using the arguments.

00:01:08.172 --> 00:01:12.200
I'll compute the mean, the
length of the data set, and

00:01:12.200 --> 00:01:16.140
the standard error of the mean
inside of these braces.

00:01:16.140 --> 00:01:18.610
Presently, the function
identifies the mean and the

00:01:18.610 --> 00:01:19.960
standard error.

00:01:19.960 --> 00:01:24.700
However, the variables m and SE
only exist in the scope of

00:01:24.700 --> 00:01:27.370
the function, so when I run the
function I don't actually

00:01:27.370 --> 00:01:29.300
get any results.

00:01:29.300 --> 00:01:32.280
What I need to do is add
a return statement.

00:01:32.280 --> 00:01:34.670
Now when I rerun the function,
the mean and the standard

00:01:34.670 --> 00:01:37.070
error will be returned.

00:01:37.070 --> 00:01:38.270
This new function
can be helpful.

00:01:38.270 --> 00:01:41.880
However, its present output
isn't actually ideal.

00:01:41.880 --> 00:01:43.870
It would be nice to make
explicitly clear what each of

00:01:43.870 --> 00:01:46.660
the outputs is from
the function.

00:01:46.660 --> 00:01:49.020
In the next video, I'll expand
the function to take a look at

00:01:49.020 --> 00:01:50.270
this challenge.

