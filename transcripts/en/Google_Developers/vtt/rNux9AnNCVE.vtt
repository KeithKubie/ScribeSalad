WEBVTT
Kind: captions
Language: en

00:00:08.430 --> 00:00:10.560
MICHEAL O FOGHLU:
Good morning, Krakow.

00:00:10.560 --> 00:00:11.970
My name's is Micheal.

00:00:11.970 --> 00:00:14.790
I'm Irish, but I'm working
in the Munich office.

00:00:14.790 --> 00:00:18.450
And I'm here to tell you about
Google engineering in Europe.

00:00:18.450 --> 00:00:20.040
Google's a fun
place for engineers

00:00:20.040 --> 00:00:23.430
to work and help to
create products that

00:00:23.430 --> 00:00:27.030
have a really global impact.

00:00:27.030 --> 00:00:29.070
But before I get
into the talk, I just

00:00:29.070 --> 00:00:33.990
want you to think a bit about
what end users of Google

00:00:33.990 --> 00:00:36.660
products think about Google.

00:00:36.660 --> 00:00:38.820
Probably the first
thing they think about

00:00:38.820 --> 00:00:42.000
is Google's search engine.

00:00:42.000 --> 00:00:44.790
And then I want you to think
about what sort of company

00:00:44.790 --> 00:00:46.350
is Google.

00:00:46.350 --> 00:00:48.594
What are we?

00:00:48.594 --> 00:00:50.010
We're one of the
biggest companies

00:00:50.010 --> 00:00:53.370
in the world in terms of
revenues and market cap

00:00:53.370 --> 00:00:55.055
and so on.

00:00:55.055 --> 00:00:57.180
But if you think about what
sort of company we are,

00:00:57.180 --> 00:00:59.220
we started out as
a search company,

00:00:59.220 --> 00:01:01.350
but now we're much more
than a search company.

00:01:01.350 --> 00:01:03.720
And people in this
audience probably

00:01:03.720 --> 00:01:06.010
have a good idea of what we are.

00:01:06.010 --> 00:01:09.680
We're a company that
produces a lot of products.

00:01:09.680 --> 00:01:13.380
And all of these products
are this strange new thing

00:01:13.380 --> 00:01:18.180
that didn't exist 100 years ago,
software products, strangely

00:01:18.180 --> 00:01:21.030
ephemeral, based on
layers of abstraction that

00:01:21.030 --> 00:01:23.940
keep changing every five
years, or every two months

00:01:23.940 --> 00:01:25.020
if you're in JavaScript.

00:01:25.020 --> 00:01:26.490
[LAUGHTER]

00:01:26.490 --> 00:01:32.460
Now, if you think about what it
takes to build these products,

00:01:32.460 --> 00:01:37.200
essentially this means that
we're a software company.

00:01:37.200 --> 00:01:39.460
And so we know about software.

00:01:39.460 --> 00:01:43.860
And we love our own developers,
and we love you, our developer

00:01:43.860 --> 00:01:47.370
community.

00:01:47.370 --> 00:01:50.900
So this means that our products
are more than just products.

00:01:50.900 --> 00:01:54.080
They're things that
people use to help

00:01:54.080 --> 00:01:56.750
create real impact globally.

00:01:56.750 --> 00:01:59.810
And every one of our
hundreds of products

00:01:59.810 --> 00:02:02.870
has potentially billions
of success stories

00:02:02.870 --> 00:02:07.730
of people using them to
really change their lives.

00:02:07.730 --> 00:02:10.820
And very importantly, in
terms of Google's philosophy,

00:02:10.820 --> 00:02:14.090
even though we started as an
American company in Silicon

00:02:14.090 --> 00:02:18.350
Valley, like many other software
companies, from the get go,

00:02:18.350 --> 00:02:21.500
our vision has been
a global vision.

00:02:21.500 --> 00:02:25.190
And our vision has been that
the internet and the services

00:02:25.190 --> 00:02:29.210
and products that we provide
are for absolutely everyone

00:02:29.210 --> 00:02:33.240
on the planet, not just
for English speakers,

00:02:33.240 --> 00:02:36.740
not just for North Americans,
not just for Europeans,

00:02:36.740 --> 00:02:38.510
but globally.

00:02:38.510 --> 00:02:44.540
And we've put a huge amount of
investment of time and effort

00:02:44.540 --> 00:02:48.640
and energy into trying
to make this vision real,

00:02:48.640 --> 00:02:51.500
and we certainly have
got a long way there.

00:02:51.500 --> 00:02:54.110
If you look at
the globe, we have

00:02:54.110 --> 00:02:57.230
users in all corners
of the globe using

00:02:57.230 --> 00:02:59.647
all of our products.

00:02:59.647 --> 00:03:01.730
Now I'm going to focus in
on what we're doing here

00:03:01.730 --> 00:03:03.350
in Europe in terms
of engineering,

00:03:03.350 --> 00:03:07.160
because you may think that our
engineering products are all

00:03:07.160 --> 00:03:08.240
developed in America.

00:03:08.240 --> 00:03:11.406
But in fact, we're
a global company,

00:03:11.406 --> 00:03:13.280
and we have a very, very
significant presence

00:03:13.280 --> 00:03:13.905
here in Europe.

00:03:13.905 --> 00:03:16.880
These dots represent
our engineering offices,

00:03:16.880 --> 00:03:21.410
not all of our offices, in
EMEA, Europe, the Middle East,

00:03:21.410 --> 00:03:22.880
and Africa.

00:03:22.880 --> 00:03:27.740
This includes Zurich, Dublin,
London, Munich, Paris, Aarhus,

00:03:27.740 --> 00:03:31.400
Stockholm, and Warsaw,
and Tel Aviv in Israel.

00:03:34.300 --> 00:03:38.650
Famously, Google
has seven products

00:03:38.650 --> 00:03:40.990
that have more than a billion
users, and some of them

00:03:40.990 --> 00:03:43.750
with more than
two billion users.

00:03:43.750 --> 00:03:47.080
And every one of these products
has a significant engineering

00:03:47.080 --> 00:03:49.750
effort here in Europe.

00:03:49.750 --> 00:03:52.980
At its simplest,
there's two main types

00:03:52.980 --> 00:03:55.170
of engineers in Google.

00:03:55.170 --> 00:03:59.790
There are what we call
SWEs, Software Engineers.

00:03:59.790 --> 00:04:04.920
And there are what we call SREs,
Site Reliability Engineers.

00:04:04.920 --> 00:04:10.560
Because so many of our products
are hosted internet services,

00:04:10.560 --> 00:04:12.390
we need to place
just as much emphasis

00:04:12.390 --> 00:04:14.580
on keeping things up
and running and keeping

00:04:14.580 --> 00:04:17.250
latencies low and so on
and so forth, as we do

00:04:17.250 --> 00:04:19.649
on actually developing and
building the software itself.

00:04:19.649 --> 00:04:21.959
And it takes both
types of engineers

00:04:21.959 --> 00:04:23.382
to make products work.

00:04:23.382 --> 00:04:24.840
And of course,
there's a whole slew

00:04:24.840 --> 00:04:26.580
of other supporting engineers.

00:04:26.580 --> 00:04:28.570
I don't mean to
miss anybody out,

00:04:28.570 --> 00:04:31.830
but it includes UX and design
and all sorts of other types--

00:04:31.830 --> 00:04:34.140
and security and
all sorts of things.

00:04:34.140 --> 00:04:37.140
But principally, Google
thinks about these engineers

00:04:37.140 --> 00:04:40.710
as falling into
these two categories.

00:04:40.710 --> 00:04:43.410
If you think about where some
of this activity takes place,

00:04:43.410 --> 00:04:47.430
just to call out three,
Android has a huge base

00:04:47.430 --> 00:04:49.530
in London and Aarghus.

00:04:49.530 --> 00:04:53.010
Chrome has a huge base
in Munich and Paris.

00:04:53.010 --> 00:04:56.370
And Google Play Store has a big
base in London and in Zurich.

00:05:00.570 --> 00:05:05.530
Now, as well as creating
products for consumers,

00:05:05.530 --> 00:05:08.190
we also create products
for developers.

00:05:08.190 --> 00:05:10.390
And there's a number of
different types of products

00:05:10.390 --> 00:05:12.380
that we create for developers.

00:05:12.380 --> 00:05:14.936
So probably the
most obvious one,

00:05:14.936 --> 00:05:16.810
which has a huge presence
here at this event,

00:05:16.810 --> 00:05:18.480
is the Google Cloud Platform.

00:05:18.480 --> 00:05:23.120
And much of that effort
takes place here in Poland,

00:05:23.120 --> 00:05:24.700
in Warsaw.

00:05:24.700 --> 00:05:26.770
And the next speaker,
Ewa, will be giving you

00:05:26.770 --> 00:05:28.780
some details about
what's actually

00:05:28.780 --> 00:05:32.590
going on there in that office.

00:05:32.590 --> 00:05:35.410
As well as that, we
have sort of APIs

00:05:35.410 --> 00:05:38.650
that can be reused by developers
that are part of Google Cloud

00:05:38.650 --> 00:05:41.500
Platform but almost come from
a separate engineering effort.

00:05:41.500 --> 00:05:45.640
And in Europe, a lot of that
effort is focused in Zurich.

00:05:45.640 --> 00:05:47.830
For our next talk
after Ewa, we have

00:05:47.830 --> 00:05:51.190
Behshad, who'll be telling you
all about Google Assistant.

00:05:51.190 --> 00:05:53.800
And you'll be able
to engage then

00:05:53.800 --> 00:05:56.980
here in the conference
in code labs and so on

00:05:56.980 --> 00:06:01.390
and using AI in
your own services.

00:06:01.390 --> 00:06:03.940
We also have a set of
external developer tools

00:06:03.940 --> 00:06:06.450
that we link to the
Google Cloud Platform.

00:06:06.450 --> 00:06:08.410
And because we ourselves
are full of developers

00:06:08.410 --> 00:06:10.270
and we need to
support them, we've

00:06:10.270 --> 00:06:12.280
a set of internal
developer tools.

00:06:12.280 --> 00:06:16.870
And a lot of that effort goes
on in my home office in Munich.

00:06:16.870 --> 00:06:19.360
And then we have,
like any company does,

00:06:19.360 --> 00:06:21.800
corporate applications
that are for all users,

00:06:21.800 --> 00:06:23.750
not just for developers.

00:06:23.750 --> 00:06:28.050
And a lot of that effort
happens in Munich and London.

00:06:28.050 --> 00:06:29.480
And why do we do all this?

00:06:29.480 --> 00:06:32.710
So that you have the tools
to build cool products

00:06:32.710 --> 00:06:37.030
and services for your own users.

00:06:37.030 --> 00:06:39.790
Now, as this is mainly
a developer audience,

00:06:39.790 --> 00:06:42.880
I just want to give you a
bit of a feel about the scale

00:06:42.880 --> 00:06:49.200
that we operate in in our
own software inside Google.

00:06:49.200 --> 00:06:54.410
For comparison, let's just
look at the Linux 4.2 codebase

00:06:54.410 --> 00:06:57.690
at roughly 20
million lines of code

00:06:57.690 --> 00:07:03.240
and 50,000 files,
quite a big codebase.

00:07:03.240 --> 00:07:09.090
We change that amount of code
in our codebase in Google

00:07:09.090 --> 00:07:10.650
every week.

00:07:10.650 --> 00:07:13.530
In fact, more than
that number of files

00:07:13.530 --> 00:07:15.900
gets changed every week.

00:07:15.900 --> 00:07:18.390
If you look at the bigger
stats, internally we

00:07:18.390 --> 00:07:21.180
have more than 40,000
developers working

00:07:21.180 --> 00:07:25.560
on a single integrated
mono repo codebase that's

00:07:25.560 --> 00:07:30.630
made up of a billion files
and nine million source files

00:07:30.630 --> 00:07:32.710
and two billion lines of code.

00:07:32.710 --> 00:07:36.510
And we're working furiously
at this every day.

00:07:36.510 --> 00:07:40.030
And code review is a critical
part of Google's code culture,

00:07:40.030 --> 00:07:43.930
so we have over 20,000 code
reviews happening per workday.

00:07:43.930 --> 00:07:46.800
Nobody's allowed to check
stuff into the master repo

00:07:46.800 --> 00:07:49.425
without it being reviewed on
a number of different vectors.

00:07:52.260 --> 00:07:55.530
And this leads to thousands
of commits per week.

00:07:55.530 --> 00:07:58.830
And interestingly,
over time, we've

00:07:58.830 --> 00:08:01.710
invested so much in
our internal tooling,

00:08:01.710 --> 00:08:03.150
that there's a
much higher growth

00:08:03.150 --> 00:08:06.450
rate of automated
changes to our codebase

00:08:06.450 --> 00:08:08.880
than human-based changes.

00:08:08.880 --> 00:08:11.790
But also quite interestingly,
these automated changes

00:08:11.790 --> 00:08:14.550
also seem to have breaks
in the holidays, right?

00:08:14.550 --> 00:08:17.050
So the robots take holidays too.

00:08:17.050 --> 00:08:25.590
And our tooling is vast, and
we've invested very, very

00:08:25.590 --> 00:08:26.740
heavily in it.

00:08:26.740 --> 00:08:30.000
And the tooling group
that I worked for

00:08:30.000 --> 00:08:33.030
is called DevTAS, Developer
Tools and Signals.

00:08:33.030 --> 00:08:35.130
And we're in charge of
this internal tooling

00:08:35.130 --> 00:08:38.250
for internal codebase
that we call Google 3.

00:08:38.250 --> 00:08:43.130
And there's a set of
probably 20 to 50 tools

00:08:43.130 --> 00:08:47.640
in these various categories
that help build our software

00:08:47.640 --> 00:08:51.570
and keep it current
and keep it regular.

00:08:51.570 --> 00:08:53.520
I want to call out
just one of these tools

00:08:53.520 --> 00:08:56.290
that we've externalized
as open source.

00:08:56.290 --> 00:08:57.965
It's a tool called Bazel.

00:08:57.965 --> 00:09:00.090
It'll be particularly
interesting to any of you who

00:09:00.090 --> 00:09:02.490
are working on very
large codebases

00:09:02.490 --> 00:09:05.430
and you want to try and
optimize build times,

00:09:05.430 --> 00:09:08.910
because it allows you to store
a graph of all the builds

00:09:08.910 --> 00:09:11.100
that anyone in the
company has done.

00:09:11.100 --> 00:09:13.500
And if you can cache those
builds, when the builds are

00:09:13.500 --> 00:09:16.470
then done again, only the
stuff that hasn't already

00:09:16.470 --> 00:09:18.720
been compiled needs
to be recompiled.

00:09:18.720 --> 00:09:20.880
And you can reuse the
binaries from anywhere

00:09:20.880 --> 00:09:22.620
in the organization.

00:09:22.620 --> 00:09:24.930
And we use a version of
this internally in Google

00:09:24.930 --> 00:09:29.010
called Blaze, and it's one of
the core productivity tools

00:09:29.010 --> 00:09:30.400
that we have.

00:09:30.400 --> 00:09:36.090
Now, Bazel is open source, and
it's not yet at version 1.0.

00:09:36.090 --> 00:09:40.110
But already it's being used by
companies like Dropbox, Huawei,

00:09:40.110 --> 00:09:42.670
and Stripe.

00:09:42.670 --> 00:09:44.977
So especially if you're
working on large codebases,

00:09:44.977 --> 00:09:46.560
you might be very
interested in Bazel.

00:09:49.420 --> 00:09:51.220
In terms of our
philosophy then, we

00:09:51.220 --> 00:09:53.590
have a slightly unique way
of doing things in Google,

00:09:53.590 --> 00:09:55.930
using our single mono repo.

00:09:55.930 --> 00:09:59.660
And it's actually our
own tool called Piper.

00:09:59.660 --> 00:10:02.410
Again, one of my
teams works on that.

00:10:02.410 --> 00:10:04.610
And we started off
using Perforce,

00:10:04.610 --> 00:10:06.970
and we outgrew it in
terms of our scale.

00:10:06.970 --> 00:10:09.880
So we needed to build our
own replacement for it.

00:10:09.880 --> 00:10:13.810
Mandatory code reviews, fast
builds from source at head

00:10:13.810 --> 00:10:17.290
using Blaze,
ruthless refactoring

00:10:17.290 --> 00:10:22.750
and identifying breaking
changes with automated testing,

00:10:22.750 --> 00:10:25.030
maintaining a green build
and frequent releases--

00:10:25.030 --> 00:10:28.300
in fact, anything running in
our own internal cloud that's

00:10:28.300 --> 00:10:31.140
running for more than six
months without an update

00:10:31.140 --> 00:10:33.760
is a red flag, and people
have to revisit it.

00:10:33.760 --> 00:10:36.310
And this is to make sure that
we're constantly recompiling

00:10:36.310 --> 00:10:38.860
all of our services with
the latest libraries

00:10:38.860 --> 00:10:43.870
to make sure that we're not
opening any vulnerabilities.

00:10:43.870 --> 00:10:47.380
If you look at the news today,
anyone who develops in Java,

00:10:47.380 --> 00:10:49.210
check out the
Struts vulnerability

00:10:49.210 --> 00:10:50.320
that was just announced.

00:10:50.320 --> 00:10:52.840
It's quite scary.

00:10:52.840 --> 00:10:56.500
You may be recompiling
some code tonight.

00:10:56.500 --> 00:11:03.010
So to take it all
back then, we are

00:11:03.010 --> 00:11:06.400
trying to invest in software.

00:11:06.400 --> 00:11:08.380
We have an internal
community, and we

00:11:08.380 --> 00:11:09.970
have an external
community, and we're

00:11:09.970 --> 00:11:13.300
trying to take as much knowledge
from our internal community

00:11:13.300 --> 00:11:16.360
to share with the external
community in terms of tools,

00:11:16.360 --> 00:11:18.235
services, and products.

00:11:18.235 --> 00:11:20.800
And now we've
realized that we need

00:11:20.800 --> 00:11:25.090
to also invest in communication
and events like this.

00:11:25.090 --> 00:11:27.550
And this event is
one example of this,

00:11:27.550 --> 00:11:31.090
trying to host more events
here in Europe, where,

00:11:31.090 --> 00:11:34.390
as was mentioned in the
opening keynote on day one,

00:11:34.390 --> 00:11:36.700
we know that there are
more software developers

00:11:36.700 --> 00:11:39.580
than in the North America--

00:11:39.580 --> 00:11:42.280
the US and Canada combined.

00:11:42.280 --> 00:11:45.790
Last month, for example,
we had the Polymer Summit

00:11:45.790 --> 00:11:48.160
in Copenhagen and Denmark.

00:11:48.160 --> 00:11:52.270
And next month, we have the
Firebase Summit in Amsterdam

00:11:52.270 --> 00:11:53.500
in the Netherlands.

00:11:53.500 --> 00:11:55.810
And it's particularly
cool how you can hook up

00:11:55.810 --> 00:12:00.880
Firebase with Cloud Functions
from the Google Cloud Platform

00:12:00.880 --> 00:12:04.800
to create a very lightweight
serverless backend

00:12:04.800 --> 00:12:07.044
to very complex applications.

00:12:07.044 --> 00:12:08.710
And any of you who
are working in mobile

00:12:08.710 --> 00:12:09.876
might be interested in that.

00:12:12.300 --> 00:12:14.780
So I'm now going to
pass you over to someone

00:12:14.780 --> 00:12:17.760
who will do a deeper dive
into the Google Cloud Platform

00:12:17.760 --> 00:12:20.360
and who works here
in Europe, Ewa, who

00:12:20.360 --> 00:12:21.930
works in our Warsaw office.

00:12:21.930 --> 00:12:23.826
Thank you.

00:12:23.826 --> 00:12:26.286
[APPLAUSE]

00:12:31.698 --> 00:12:33.680
EWA MACIAS: Thank you.

00:12:33.680 --> 00:12:34.670
Hello.

00:12:34.670 --> 00:12:37.010
My name is Ewa Macias,
and I'm leading

00:12:37.010 --> 00:12:40.640
Cloud Frontend team,
one of the engineering

00:12:40.640 --> 00:12:43.550
teams we have in Poland.

00:12:43.550 --> 00:12:46.130
I'm very happy to be
here today in Krakow.

00:12:46.130 --> 00:12:52.290
I counted, and I spent about
43% of my entire life in Krakow

00:12:52.290 --> 00:12:56.480
and about 88% of my adult life.

00:12:56.480 --> 00:13:01.280
I was studying here and then
spent the first eight years

00:13:01.280 --> 00:13:03.330
at Google here.

00:13:03.330 --> 00:13:06.950
It's really good to be back.

00:13:06.950 --> 00:13:11.160
And I'm proud that I'm
representing our Google Poland

00:13:11.160 --> 00:13:14.570
office here today and to tell
you a little bit about what

00:13:14.570 --> 00:13:15.860
we are focusing on.

00:13:19.030 --> 00:13:21.550
Over the last
decade, Google Poland

00:13:21.550 --> 00:13:25.780
has focused its effort on
technical infrastructure.

00:13:25.780 --> 00:13:28.390
We build products
and systems that

00:13:28.390 --> 00:13:31.450
are part of the Google
internet platform, where

00:13:31.450 --> 00:13:37.570
all services, like Search and
YouTube and Gmail are running.

00:13:37.570 --> 00:13:40.690
We build software
throughout multiple layers,

00:13:40.690 --> 00:13:44.320
from an agent running on every
single machine in Google data

00:13:44.320 --> 00:13:50.710
centers, through a massive data
collection and the processing,

00:13:50.710 --> 00:13:54.550
to web user interface.

00:13:54.550 --> 00:13:57.290
A major theme for
us over the years

00:13:57.290 --> 00:14:01.190
has been automation and
improving user interaction

00:14:01.190 --> 00:14:06.740
with the infrastructure so that
the internal teams can spend

00:14:06.740 --> 00:14:11.090
less time doing operations
work and more time

00:14:11.090 --> 00:14:14.500
developing actual
business logic.

00:14:14.500 --> 00:14:18.730
Here's one example of
our automation focus.

00:14:18.730 --> 00:14:22.000
We build a system
that, for a service,

00:14:22.000 --> 00:14:25.270
automatically chooses a
data center to run on based

00:14:25.270 --> 00:14:27.620
on the service requirements.

00:14:27.620 --> 00:14:30.640
It also decides
how many resources

00:14:30.640 --> 00:14:35.980
to allocate for a service
and decides how many copies

00:14:35.980 --> 00:14:37.300
of the service to run.

00:14:40.210 --> 00:14:44.470
When we got started here in
Poland over 10 years ago,

00:14:44.470 --> 00:14:48.550
the industry was running
mostly on private data centers,

00:14:48.550 --> 00:14:52.930
maintaining large
specialized servers.

00:14:52.930 --> 00:14:55.090
These days, almost
everyone is looking

00:14:55.090 --> 00:14:58.750
at how to move the cloud,
because it's expensive

00:14:58.750 --> 00:15:01.690
and time consuming to
maintain infrastructure.

00:15:01.690 --> 00:15:05.590
And it also takes you away
from your core business.

00:15:05.590 --> 00:15:09.280
So for the last four years
we focused our efforts

00:15:09.280 --> 00:15:12.310
on exposing the
internal infrastructure

00:15:12.310 --> 00:15:14.560
to our external users.

00:15:14.560 --> 00:15:16.520
And the resulting
product is known today

00:15:16.520 --> 00:15:18.265
as Google Cloud Platform.

00:15:21.940 --> 00:15:25.320
Why developers choose use Cloud?

00:15:25.320 --> 00:15:27.660
Because it's built on
the same infrastructure

00:15:27.660 --> 00:15:35.190
as all other services at Google,
and it offers security, scale,

00:15:35.190 --> 00:15:40.420
and cost efficiency,
access to a global network,

00:15:40.420 --> 00:15:44.080
best-in-class data
processing tools,

00:15:44.080 --> 00:15:48.940
access to services like machine
learning, and most importantly,

00:15:48.940 --> 00:15:51.760
velocity.

00:15:51.760 --> 00:15:54.040
You can see here on the
slide some quotes directly

00:15:54.040 --> 00:15:57.840
from our customers.

00:15:57.840 --> 00:16:01.180
I could stand here probably
for all day telling you

00:16:01.180 --> 00:16:03.010
a lot of details about GCP.

00:16:03.010 --> 00:16:05.890
But since we don't have that
much time, the rest of my talk

00:16:05.890 --> 00:16:09.370
will focus on the product
known as Cloud Compute,

00:16:09.370 --> 00:16:14.740
because this is what our
team in Poland is working on.

00:16:14.740 --> 00:16:19.450
In Cloud Compute, our
mission is to help

00:16:19.450 --> 00:16:23.650
you find a perfect engine
for your workloads.

00:16:23.650 --> 00:16:28.750
&gt;From serverless environments to
containers to virtual machines,

00:16:28.750 --> 00:16:31.510
we are working to
provide a scalable range

00:16:31.510 --> 00:16:35.080
of compute options
to match your needs.

00:16:35.080 --> 00:16:39.240
Specifically, Cloud
Compute offers four places

00:16:39.240 --> 00:16:41.560
[? where ?] you can
run your software--

00:16:41.560 --> 00:16:47.540
Compute Engine, Container
Engine, App Engine,

00:16:47.540 --> 00:16:50.454
and Cloud Functions.

00:16:50.454 --> 00:16:52.620
Now when I look at this
slide, maybe Cloud Functions

00:16:52.620 --> 00:16:54.870
should be renamed
to Functions Engine.

00:16:54.870 --> 00:16:57.780
My slides would look
much better then.

00:17:00.750 --> 00:17:04.470
Look at the slide as a spectrum.

00:17:04.470 --> 00:17:08.339
The lower in the stack, the
more flexibility and control

00:17:08.339 --> 00:17:09.660
you have.

00:17:09.660 --> 00:17:11.608
The higher in the
stack, the more

00:17:11.608 --> 00:17:15.300
automation Google provides.

00:17:15.300 --> 00:17:17.670
In other words, in
the lower layer,

00:17:17.670 --> 00:17:20.880
you get almost [? no ?]
infrastructure.

00:17:20.880 --> 00:17:23.280
In the highest layer,
you just bring your code,

00:17:23.280 --> 00:17:29.010
your business logic, and Google
will do the rest for you.

00:17:29.010 --> 00:17:31.280
I'm going to walk you
through the four platforms

00:17:31.280 --> 00:17:33.500
to give you an understanding
of what they are

00:17:33.500 --> 00:17:35.960
and how you might
want to use them.

00:17:35.960 --> 00:17:38.960
And I will also point
out some specific things

00:17:38.960 --> 00:17:42.990
that we are working
on here in Poland.

00:17:42.990 --> 00:17:48.890
So let's start from the
bottom, Compute Engine.

00:17:48.890 --> 00:17:53.300
Compute Engine offers
virtual machines.

00:17:53.300 --> 00:17:56.300
Think about virtual machines
as your personal computer,

00:17:56.300 --> 00:18:00.710
only that it's not on your
desk, but it's remote.

00:18:00.710 --> 00:18:02.720
It's in the Google data center.

00:18:02.720 --> 00:18:07.260
And you can access it remotely.

00:18:07.260 --> 00:18:12.122
So let me now show you
how to get a server on GC

00:18:12.122 --> 00:18:12.830
in a few seconds.

00:18:16.060 --> 00:18:18.700
I will do a live demo,
so fingers crossed.

00:18:25.890 --> 00:18:28.200
So this is Cloud Console.

00:18:28.200 --> 00:18:32.000
It's a web interface where
you can create and manage

00:18:32.000 --> 00:18:34.130
your GCP resources.

00:18:34.130 --> 00:18:39.230
It's a really good place to
start exploring the platform.

00:18:39.230 --> 00:18:42.930
See here are the four
platforms I'm presenting today.

00:18:42.930 --> 00:18:44.735
But you can get
access to many more,

00:18:44.735 --> 00:18:49.040
like storage and networking and
machine learning, everything.

00:18:49.040 --> 00:18:55.540
So let's go to the Compute
Engine and create an instance.

00:18:55.540 --> 00:19:00.400
When you create an instance,
you can decide how big it is.

00:19:00.400 --> 00:19:03.820
You can get anything from
one core to 64 cores,

00:19:03.820 --> 00:19:10.680
and you can get up to
416 gigabytes of memory.

00:19:10.680 --> 00:19:15.180
We have a wide range
of pre-cooked images,

00:19:15.180 --> 00:19:18.360
Linux distributions,
and Windows Server.

00:19:18.360 --> 00:19:22.220
You can also bring
your own image.

00:19:22.220 --> 00:19:24.320
If you want this instance
to run web traffic,

00:19:24.320 --> 00:19:28.610
you want to probably
enable HTTP, HTTPS.

00:19:28.610 --> 00:19:32.480
By default, all the VMs
are protected by firewalls

00:19:32.480 --> 00:19:34.790
from the traffic from internet.

00:19:34.790 --> 00:19:36.965
Before I go ahead
and create this VM,

00:19:36.965 --> 00:19:40.280
I want to show you
one cool thing.

00:19:40.280 --> 00:19:43.820
Many users, when they get
more familiar with the GCP,

00:19:43.820 --> 00:19:47.940
they tend to prefer
come online over the UI

00:19:47.940 --> 00:19:49.460
and its natural process.

00:19:49.460 --> 00:19:52.160
But this web UI
is a very good way

00:19:52.160 --> 00:19:55.220
to learn command line
too, and transition

00:19:55.220 --> 00:19:56.810
to command line later.

00:19:56.810 --> 00:19:58.910
For almost everything that
you can do in this UI,

00:19:58.910 --> 00:20:02.700
you can get [? a ?]
valid command line.

00:20:02.700 --> 00:20:04.710
So this is the command
line for the VM.

00:20:04.710 --> 00:20:07.020
And the cool thing is that
you can run it directly

00:20:07.020 --> 00:20:09.420
from the browser.

00:20:09.420 --> 00:20:12.070
Whoops.

00:20:12.070 --> 00:20:14.950
So you don't have to install
G Cloud or configure anything

00:20:14.950 --> 00:20:15.839
on your computer.

00:20:15.839 --> 00:20:17.005
All you need is the browser.

00:20:19.630 --> 00:20:22.110
So let's go ahead
and create a VM.

00:20:22.110 --> 00:20:24.030
Booting the VM and
programming the network

00:20:24.030 --> 00:20:26.960
takes like 20, 30 seconds.

00:20:26.960 --> 00:20:29.980
And so there's one more
cool thing I want to show.

00:20:29.980 --> 00:20:33.270
So when you have the
server up and running,

00:20:33.270 --> 00:20:37.080
you want to SSH
to it, and you can

00:20:37.080 --> 00:20:39.570
start installing
basically any software

00:20:39.570 --> 00:20:41.610
you like on the server.

00:20:41.610 --> 00:20:47.730
And you can also SSH
directly from the UI.

00:20:47.730 --> 00:20:48.630
Let's go.

00:20:48.630 --> 00:20:50.520
We are in this inside
of the VM, and you

00:20:50.520 --> 00:20:54.540
can start browsing as in
the normal virtual machine.

00:20:54.540 --> 00:20:56.370
I really also wanted
to do this demo

00:20:56.370 --> 00:20:58.530
because this Frontend
for Cloud Compute

00:20:58.530 --> 00:21:01.107
is being built in Warsaw.

00:21:01.107 --> 00:21:02.598
[APPLAUSE]

00:21:02.598 --> 00:21:05.014
Woo-hoo.

00:21:05.014 --> 00:21:06.680
One thing that I would
like to point out

00:21:06.680 --> 00:21:09.950
is that sometimes it
can be hard to decide

00:21:09.950 --> 00:21:13.070
upfront what is the
right size of the machine

00:21:13.070 --> 00:21:14.660
for your service.

00:21:14.660 --> 00:21:17.900
To help with that,
GCP will observe

00:21:17.900 --> 00:21:20.060
the load of the
VM and the traffic

00:21:20.060 --> 00:21:22.460
and will recommend
you the best size,

00:21:22.460 --> 00:21:25.100
either decrease it
to save you money,

00:21:25.100 --> 00:21:29.130
or increase it for a
better performance.

00:21:29.130 --> 00:21:33.198
This recommendation engine is
being built in Poland as well.

00:21:33.198 --> 00:21:35.693
[APPLAUSE]

00:21:40.190 --> 00:21:45.320
Together with the VMs and
access to a global network,

00:21:45.320 --> 00:21:52.110
you also get a set of tools that
help you manage the service.

00:21:52.110 --> 00:21:56.220
One of them is autoscaling
groups of instances.

00:21:56.220 --> 00:21:58.280
You can configure
it so it always

00:21:58.280 --> 00:22:02.930
keeps a certain amount of
instances up and running.

00:22:02.930 --> 00:22:05.540
The system does it by
observing the health

00:22:05.540 --> 00:22:10.460
and recreating the VM
if they go unhealthy.

00:22:10.460 --> 00:22:13.280
You can also attach
an autoscaler

00:22:13.280 --> 00:22:19.310
that will observe the CPU
load and add or remove

00:22:19.310 --> 00:22:23.360
the servers based on your
metric or on the traffic going

00:22:23.360 --> 00:22:25.610
on the CPU load.

00:22:25.610 --> 00:22:28.250
So you still have a
full control over what

00:22:28.250 --> 00:22:29.900
is running on that VM.

00:22:29.900 --> 00:22:33.410
But you apply an
automation that helps

00:22:33.410 --> 00:22:38.840
you run the service in a
cost-efficient and reliable

00:22:38.840 --> 00:22:41.390
way.

00:22:41.390 --> 00:22:43.960
And autoscaler and
many other tools

00:22:43.960 --> 00:22:46.270
that help you
manage GC instances

00:22:46.270 --> 00:22:49.798
are also being built in Poland.

00:22:49.798 --> 00:22:52.278
[APPLAUSE]

00:22:55.260 --> 00:22:59.770
All right, let's go one
level up to Container Engine.

00:22:59.770 --> 00:23:03.230
Container Engine is our
hosted Kubernetes environment.

00:23:03.230 --> 00:23:05.280
And as you might
guess from its name,

00:23:05.280 --> 00:23:10.948
it's a platform for running
a large number of containers.

00:23:10.948 --> 00:23:12.406
It handles a lot
of infrastructure,

00:23:12.406 --> 00:23:16.660
which is for you like virtual
machines and networking.

00:23:16.660 --> 00:23:19.120
And by using the open
source Kubernetes,

00:23:19.120 --> 00:23:25.560
it also manages the containers
for you automatically.

00:23:25.560 --> 00:23:27.570
What are containers?

00:23:27.570 --> 00:23:30.000
I like thinking about
containers as a lighter

00:23:30.000 --> 00:23:31.920
version of virtual machines.

00:23:31.920 --> 00:23:33.810
They are software
packaging units

00:23:33.810 --> 00:23:36.810
that only take your
code and libraries

00:23:36.810 --> 00:23:39.630
and make them independent
from the operating system

00:23:39.630 --> 00:23:42.840
so that you can run
multiple containers on one

00:23:42.840 --> 00:23:47.140
VM in isolation.

00:23:47.140 --> 00:23:50.980
Unlike virtual machines, they
do not contain operating system,

00:23:50.980 --> 00:23:53.920
so they are much
smaller in bytes

00:23:53.920 --> 00:23:55.730
and they start much faster.

00:23:58.680 --> 00:24:01.000
What are Kubernetes?

00:24:01.000 --> 00:24:03.790
Usually you put just one
thing into a container,

00:24:03.790 --> 00:24:07.100
like web server or
database, for example.

00:24:07.100 --> 00:24:09.550
So when you want to start
building a system out

00:24:09.550 --> 00:24:13.750
of your containers, you usually
end up having a lot of them.

00:24:13.750 --> 00:24:16.940
And maintaining a lot of
containers can be challenging.

00:24:16.940 --> 00:24:20.510
So let me give you one example.

00:24:20.510 --> 00:24:24.130
Let's say I want to have
a three-layer application,

00:24:24.130 --> 00:24:26.830
database, backend, and frontend.

00:24:26.830 --> 00:24:29.770
So I package them
into three containers.

00:24:29.770 --> 00:24:34.990
For redundancy, I want to have
a couple of instances of each.

00:24:34.990 --> 00:24:37.390
I want to have the frontend
accessible via public IP

00:24:37.390 --> 00:24:42.130
address and two upper
layers autoscaled.

00:24:42.130 --> 00:24:46.900
such a relatively simple service
can be challenging to maintain.

00:24:46.900 --> 00:24:50.620
So here's where
Kubernetes comes in.

00:24:50.620 --> 00:24:55.240
They will start that up for
you and make sure it stays up

00:24:55.240 --> 00:24:55.780
and running.

00:24:59.320 --> 00:25:02.810
Some of you may have heard or
played the game "Pokemon Go."

00:25:05.980 --> 00:25:08.170
This slide will show
how fast the game

00:25:08.170 --> 00:25:12.450
was growing in the first
days of its popularity.

00:25:12.450 --> 00:25:16.690
So this line shows
the estimates traffic.

00:25:16.690 --> 00:25:19.580
The green line is the
[INAUDIBLE] disaster scenario.

00:25:22.140 --> 00:25:25.960
And the blue line
is the real traffic.

00:25:25.960 --> 00:25:28.660
So it was a huge
success of the game.

00:25:28.660 --> 00:25:33.010
And it was also a huge success
of the Google Container Engine,

00:25:33.010 --> 00:25:37.930
because the platform actually
managed to scale for the game.

00:25:37.930 --> 00:25:42.460
And I'm very proud to say that
Google Poland is contributing

00:25:42.460 --> 00:25:46.930
to both Kubernetes and
GKE, and specifically, they

00:25:46.930 --> 00:25:50.195
are working on the
scalability of the platform.

00:25:54.320 --> 00:25:58.920
Now let's go another
layer up to App Engine.

00:25:58.920 --> 00:26:05.020
App Engine is optimized to run
your web code extremely well.

00:26:05.020 --> 00:26:07.500
The motto of App Engine
is bring your code,

00:26:07.500 --> 00:26:10.080
and we'll do the rest for you.

00:26:10.080 --> 00:26:12.570
So you don't have to think
about operating system

00:26:12.570 --> 00:26:16.410
or virtual machines or any
other piece of infrastructure

00:26:16.410 --> 00:26:19.020
when you use App Engine.

00:26:19.020 --> 00:26:23.250
This is called
serverless environment.

00:26:23.250 --> 00:26:26.400
It doesn't mean that the
server doesn't exist.

00:26:26.400 --> 00:26:30.870
It only means that from the
perspective of a developer,

00:26:30.870 --> 00:26:33.470
the server is invisible.

00:26:33.470 --> 00:26:37.560
All you see when you implement
and manage and deploy your app

00:26:37.560 --> 00:26:42.280
are application-level
constructs.

00:26:42.280 --> 00:26:46.310
App Engine also
offers a very rich set

00:26:46.310 --> 00:26:49.640
of tools crafted for
web applications,

00:26:49.640 --> 00:26:52.940
like traffic splitting,
security scanner, versioning,

00:26:52.940 --> 00:26:54.710
and incredibly rapid scaling.

00:26:57.620 --> 00:27:02.150
The last piece of our
spectrums is Cloud Functions.

00:27:02.150 --> 00:27:04.740
It also is a
serverless environment.

00:27:04.740 --> 00:27:07.470
But from the perspective
of a developer,

00:27:07.470 --> 00:27:10.090
it's even simpler
than App Engine.

00:27:10.090 --> 00:27:18.270
And it can be seen as glue that
enables you to very easily use

00:27:18.270 --> 00:27:23.210
many Google services, like
Speech Recognition API

00:27:23.210 --> 00:27:28.710
and Vision API or listen
to changes in a database.

00:27:28.710 --> 00:27:31.690
With Cloud Functions,
you can almost

00:27:31.690 --> 00:27:34.780
forget about the concept
of an application.

00:27:34.780 --> 00:27:37.690
All you see or all
you think about when

00:27:37.690 --> 00:27:41.410
you use Cloud Functions is
your code, your function,

00:27:41.410 --> 00:27:46.310
and an event on which the
function should be executed.

00:27:46.310 --> 00:27:49.700
So let me show
you how you do it.

00:27:49.700 --> 00:27:57.400
A classical example
is sending an email

00:27:57.400 --> 00:28:00.740
to a user when they upload
an image to a database.

00:28:03.530 --> 00:28:05.241
So let's go to Cloud Functions.

00:28:09.390 --> 00:28:12.420
I will create a function,
upload an image to a storage,

00:28:12.420 --> 00:28:14.887
and observe that the
function was executed.

00:28:17.690 --> 00:28:21.530
So I chose a trigger,
cloud storage bucket.

00:28:21.530 --> 00:28:26.710
I specify the bucket that
will be observed for changes.

00:28:26.710 --> 00:28:28.710
And here's my code.

00:28:28.710 --> 00:28:30.600
I will not be sending
email in this demo.

00:28:30.600 --> 00:28:32.152
We don't have that much time.

00:28:32.152 --> 00:28:32.985
I will just pretend.

00:28:38.700 --> 00:28:41.120
And one small detail--

00:28:41.120 --> 00:28:43.680
I need to specify a bucket
where my source code will

00:28:43.680 --> 00:28:47.090
be stored, and create.

00:28:53.580 --> 00:28:57.350
Now I will go to the storage.

00:28:57.350 --> 00:29:00.090
Let's see the trigger.

00:29:00.090 --> 00:29:02.960
We are in the storage UI.

00:29:02.960 --> 00:29:06.300
And I'm uploading a file.

00:29:06.300 --> 00:29:10.710
Let's say a dog image.

00:29:10.710 --> 00:29:11.485
Please upload.

00:29:14.240 --> 00:29:15.620
Oh, woo-hoo!

00:29:15.620 --> 00:29:17.460
Yes, the file is there.

00:29:17.460 --> 00:29:20.170
[APPLAUSE]

00:29:20.170 --> 00:29:22.100
Success.

00:29:22.100 --> 00:29:31.310
So now let's go and see whether
the function was executed.

00:29:31.310 --> 00:29:33.070
I go to Logs.

00:29:33.070 --> 00:29:35.620
Since we are in
the source code, we

00:29:35.620 --> 00:29:39.640
are logging the fact that the
function has been executed.

00:29:39.640 --> 00:29:46.320
And all right, the logs is
not there, not there yet.

00:29:46.320 --> 00:29:48.840
All right, we have something.

00:29:48.840 --> 00:29:50.560
Do we have a dog?

00:29:50.560 --> 00:29:51.220
We have a cat.

00:29:51.220 --> 00:29:55.180
We have a dog,
and we have a cat.

00:29:55.180 --> 00:29:58.510
So let's go back to
the presentation.

00:29:58.510 --> 00:30:01.310
So you see, that was easy.

00:30:01.310 --> 00:30:04.390
That was like a couple of
clicks and lines of code.

00:30:04.390 --> 00:30:10.350
And all the glue between
your code and the storage,

00:30:10.350 --> 00:30:12.700
in particular,
listening to the changes

00:30:12.700 --> 00:30:15.520
and making sure that
your function really gets

00:30:15.520 --> 00:30:19.780
executed at least once,
all that is handled

00:30:19.780 --> 00:30:21.040
for you by the platform.

00:30:23.890 --> 00:30:25.930
As some of you may
heard yesterday,

00:30:25.930 --> 00:30:29.020
Cloud functions also can
be used with Firebase.

00:30:29.020 --> 00:30:33.700
And it's very powerful way
for the mobile developers

00:30:33.700 --> 00:30:37.360
to build server side
extensions without having

00:30:37.360 --> 00:30:42.940
to learn, or manage,
or understand, or deal

00:30:42.940 --> 00:30:43.695
with any servers.

00:30:46.970 --> 00:30:51.761
And Cloud Functions are 100%
designed and built in Warsaw.

00:30:51.761 --> 00:30:54.707
[APPLAUSE]

00:31:00.110 --> 00:31:03.200
All right, so a quick
recap of the presentation.

00:31:03.200 --> 00:31:06.230
When you use Compute Engine, you
think about virtual machines,

00:31:06.230 --> 00:31:10.430
operating system, and
network, basically virtual

00:31:10.430 --> 00:31:12.260
infrastructure.

00:31:12.260 --> 00:31:15.650
Containers take you from the
world of virtual machines

00:31:15.650 --> 00:31:19.880
to microservices,
containers, and applications.

00:31:19.880 --> 00:31:23.000
When you use App Engine,
you choose to abstract away

00:31:23.000 --> 00:31:24.490
from the infrastructure.

00:31:24.490 --> 00:31:31.900
And all you see or care about is
application and HTTP requests.

00:31:31.900 --> 00:31:35.690
And finally, when you
use Cloud Functions,

00:31:35.690 --> 00:31:39.890
you solely operate on a
piece of code, your function,

00:31:39.890 --> 00:31:40.490
and events.

00:31:43.210 --> 00:31:46.090
So now when I highlighted the
differences between the four

00:31:46.090 --> 00:31:48.400
platforms, you might
be asking yourself,

00:31:48.400 --> 00:31:51.370
so which one I should be using?

00:31:51.370 --> 00:31:54.970
My recommendation is
that you go from the top.

00:31:54.970 --> 00:31:57.790
Check whether the
platforms work for you

00:31:57.790 --> 00:32:00.520
and whether it's not
constraining you too much.

00:32:00.520 --> 00:32:03.880
And if it's not, just take it.

00:32:03.880 --> 00:32:05.680
If it is constraining
you too much,

00:32:05.680 --> 00:32:09.340
it means that you need more
flexibility and control, so

00:32:09.340 --> 00:32:11.200
go one level down.

00:32:15.460 --> 00:32:19.090
Google Cloud Platform
has really a lot to offer

00:32:19.090 --> 00:32:22.150
and we are very excited
about its future.

00:32:22.150 --> 00:32:24.940
So if you are interested
in learning more about it,

00:32:24.940 --> 00:32:28.990
I encourage you to go
to the Cloud console

00:32:28.990 --> 00:32:33.520
or to cloud.google.com
and start exploring.

00:32:33.520 --> 00:32:36.220
I also will be around
here today if you

00:32:36.220 --> 00:32:37.600
want to ask me any questions.

00:32:42.500 --> 00:32:49.430
So now I would like to introduce
my colleague, Behshad Bezhadi,

00:32:49.430 --> 00:32:51.530
from Zurich office.

00:32:51.530 --> 00:32:53.900
He's a senior
engineering director

00:32:53.900 --> 00:32:57.890
and he's leading a team
of over 100 engineers

00:32:57.890 --> 00:33:00.510
building Google Assistant.

00:33:00.510 --> 00:33:02.615
Welcome Behshad on stage.

00:33:02.615 --> 00:33:05.040
[APPLAUSE]

00:33:12.195 --> 00:33:13.570
BEHSHAD BEZHADI:
Hello everybody.

00:33:13.570 --> 00:33:15.778
My name is Behshad and I
work on the Google Assistant

00:33:15.778 --> 00:33:18.410
team in Zurich office.

00:33:18.410 --> 00:33:22.650
Yesterday, Tilke talked
about the different ways

00:33:22.650 --> 00:33:25.050
that you can bring the
power of Google Assistant

00:33:25.050 --> 00:33:28.210
into your own applications
through the actions on Google

00:33:28.210 --> 00:33:29.040
Platform.

00:33:29.040 --> 00:33:33.780
Today I want to talk about
what we in Google are

00:33:33.780 --> 00:33:36.850
doing to improve the Google
Assistant across devices.

00:33:36.850 --> 00:33:40.980
So in Google I/O, Sundar
sent this key message,

00:33:40.980 --> 00:33:44.730
which is the next 10 years is
going to be an AI-first world.

00:33:44.730 --> 00:33:46.800
And I'm personally very
excited about that,

00:33:46.800 --> 00:33:48.900
because I consider
Google Assistant

00:33:48.900 --> 00:33:50.940
and building an
assistant is actually

00:33:50.940 --> 00:33:55.750
one of the core implementations
of such a AI world.

00:33:55.750 --> 00:33:58.260
So in some way, we
feel that we are

00:33:58.260 --> 00:34:00.591
part of building
this next revolution.

00:34:00.591 --> 00:34:03.090
But before going and talking
more about the Google Assistant

00:34:03.090 --> 00:34:08.670
itself, I want to talk a little
bit about this AI revolution.

00:34:08.670 --> 00:34:10.860
The AI revolution
is in some ways

00:34:10.860 --> 00:34:13.260
similar to some of the bigger
revolutions which happened

00:34:13.260 --> 00:34:15.630
through the past 100 years.

00:34:15.630 --> 00:34:19.800
These were revolutions where
they changed the life of lots

00:34:19.800 --> 00:34:23.940
of people, they made lots
of companies to disappear,

00:34:23.940 --> 00:34:26.610
lots of new companies appeared,
and they're actually saving

00:34:26.610 --> 00:34:27.840
lots of time from people.

00:34:27.840 --> 00:34:32.159
If you think about phone,
car, plane, and transistor.

00:34:32.159 --> 00:34:34.170
For example, just
consider the plane.

00:34:34.170 --> 00:34:35.699
Before that, 100
years ago, if you

00:34:35.699 --> 00:34:38.909
wanted to go from Europe to US,
you needed a month on a ship,

00:34:38.909 --> 00:34:40.650
and only some people
could do that.

00:34:40.650 --> 00:34:43.080
Today you do it in one
day or less than one day,

00:34:43.080 --> 00:34:46.030
it's 10 hours, and that's
basically about saving time.

00:34:46.030 --> 00:34:48.000
Life of people is changing.

00:34:48.000 --> 00:34:51.000
Now, if we move fast
forward towards newer types

00:34:51.000 --> 00:34:56.310
of revolutions which
happened around 20 years ago

00:34:56.310 --> 00:34:58.560
is about PC and internet.

00:34:58.560 --> 00:35:00.570
So all of a sudden
at home we got

00:35:00.570 --> 00:35:02.140
connected to the information.

00:35:02.140 --> 00:35:04.260
So we didn't need
to go to the library

00:35:04.260 --> 00:35:08.110
if you wanted to find how tall
is the Empire State Building.

00:35:08.110 --> 00:35:10.990
And it really, if you
think about 20 years ago,

00:35:10.990 --> 00:35:14.530
that was the only way to find
the answers to such questions.

00:35:14.530 --> 00:35:17.490
So this is a big change,
again, into people's life.

00:35:17.490 --> 00:35:19.320
You don't need to go
to a bank to check

00:35:19.320 --> 00:35:21.360
what's your bank account.

00:35:21.360 --> 00:35:22.860
You can buy things from home.

00:35:22.860 --> 00:35:25.470
And you don't need to wait
for the next news on TV

00:35:25.470 --> 00:35:27.840
to know what's the weather
going to be tomorrow.

00:35:27.840 --> 00:35:30.050
You can just ask it.

00:35:30.050 --> 00:35:33.900
But the next revolution happened
soon after, less than 10 years,

00:35:33.900 --> 00:35:35.580
and that's the
mobile revolution,

00:35:35.580 --> 00:35:37.560
which was even bigger
than the previous one.

00:35:37.560 --> 00:35:41.580
Because the huge PC which was
in the corner of your home

00:35:41.580 --> 00:35:43.890
before now is replaced
by these mobile phones,

00:35:43.890 --> 00:35:45.780
which is smaller and
is in your pocket.

00:35:45.780 --> 00:35:47.822
And you can bring it everywhere.

00:35:47.822 --> 00:35:49.530
It's actually, in some
way, more powerful

00:35:49.530 --> 00:35:51.870
because it has a camera,
it has a microphone,

00:35:51.870 --> 00:35:53.850
and it's more personal.

00:35:53.850 --> 00:35:56.930
You can take pictures, share,
and communicate, and more.

00:35:56.930 --> 00:36:01.180
Mobile made our thinking at
Google about product different.

00:36:01.180 --> 00:36:03.870
So we became really a
mobile-first company

00:36:03.870 --> 00:36:06.180
from those moments.

00:36:06.180 --> 00:36:09.240
However, the mobile
revolution is still ongoing.

00:36:09.240 --> 00:36:11.430
And we kind of predict
that by 2020, there

00:36:11.430 --> 00:36:16.440
is going to be 5 billion mobile
users on this planet, which

00:36:16.440 --> 00:36:21.420
means that really, the scale is
bigger than the PC and the web

00:36:21.420 --> 00:36:23.220
revolution which was
happening before.

00:36:23.220 --> 00:36:26.460
This is because of cost and
bringing this to emerging

00:36:26.460 --> 00:36:29.130
market is much easier.

00:36:29.130 --> 00:36:31.565
This revolution is ongoing,
but the next revolution

00:36:31.565 --> 00:36:33.690
is happening now, and it's
bringing this revolution

00:36:33.690 --> 00:36:34.870
to the next level.

00:36:34.870 --> 00:36:36.600
And that's the AI revolution.

00:36:36.600 --> 00:36:39.150
This is where, for example,
in the case of mobiles,

00:36:39.150 --> 00:36:41.580
we are trying to make the
interactions with mobile

00:36:41.580 --> 00:36:44.530
to be conversational,
much more natural.

00:36:44.530 --> 00:36:47.640
Make the smartphones
smart, and then

00:36:47.640 --> 00:36:51.690
make them to understand
intent, understand context,

00:36:51.690 --> 00:36:56.580
and answer things based on what
they hear and what they see.

00:36:56.580 --> 00:37:01.680
When we have these experiences
through a conversation

00:37:01.680 --> 00:37:04.440
with mobiles, we can expand that
to all types of other devices

00:37:04.440 --> 00:37:05.070
too.

00:37:05.070 --> 00:37:08.350
So if you're at car,
at your watch, at home,

00:37:08.350 --> 00:37:10.920
you can use the same
conversational experience

00:37:10.920 --> 00:37:14.310
and try to add that intelligence
in a very consistent way

00:37:14.310 --> 00:37:19.170
through all your devices
in different places.

00:37:19.170 --> 00:37:22.970
And now, I repeatedly say
conversation, conversation,

00:37:22.970 --> 00:37:24.660
and this is really
the core of what

00:37:24.660 --> 00:37:27.540
we think about Google Assistant,
because we kind of think

00:37:27.540 --> 00:37:31.140
that conversation is
the most used interface

00:37:31.140 --> 00:37:32.570
human beings have--

00:37:32.570 --> 00:37:35.250
the most used interface
human beings have used.

00:37:35.250 --> 00:37:37.095
We all know how to
talk from when we

00:37:37.095 --> 00:37:39.330
are a kid to when we are old.

00:37:39.330 --> 00:37:41.700
Old is not tall necessarily.

00:37:41.700 --> 00:37:44.360
But from different
race, different ages,

00:37:44.360 --> 00:37:46.860
people know how to interact
with each other through talking.

00:37:46.860 --> 00:37:49.735
So if we solve that problem of
conversational understanding,

00:37:49.735 --> 00:37:52.110
we have solved a big problem,
and then we can expand that

00:37:52.110 --> 00:37:53.830
to many use cases.

00:37:53.830 --> 00:37:55.954
So I think the best
would be now to--

00:37:55.954 --> 00:37:57.870
I mean, I want to show
you a Google Assistant.

00:37:57.870 --> 00:38:00.390
And I would like to invite
the camera man to come,

00:38:00.390 --> 00:38:03.750
and I will to go to my
live demos, which is

00:38:03.750 --> 00:38:05.340
going to be quite risky for me.

00:38:05.340 --> 00:38:06.840
These are all live demos.

00:38:06.840 --> 00:38:11.450
And you will have fun seeing
me being scared, I guess.

00:38:11.450 --> 00:38:13.250
So here on my phone
I'm going to show you

00:38:13.250 --> 00:38:17.390
lots of demos of showing
where we are today

00:38:17.390 --> 00:38:20.150
with Google
Assistant development

00:38:20.150 --> 00:38:23.730
and on different aspects
of what Assistant is doing.

00:38:23.730 --> 00:38:27.500
So the first thing
I will show is

00:38:27.500 --> 00:38:32.360
about how Google Assistant
is answering things today.

00:38:32.360 --> 00:38:38.584
Let's start with hi,
Google, how are you doing?

00:38:38.584 --> 00:38:40.750
AUTOMATED VOICE: I'm doing
great, thanks for asking.

00:38:40.750 --> 00:38:41.945
Anything I can help with?

00:38:41.945 --> 00:38:43.570
BEHSHAD BEZHADI: Can
you please tell me

00:38:43.570 --> 00:38:45.653
how is the weather going
to be tomorrow in Krakow?

00:38:53.560 --> 00:38:55.045
Always needs a--

00:38:55.045 --> 00:38:58.015
[APPLAUSE]

00:38:59.530 --> 00:39:01.832
I don't think if you
upload it will work.

00:39:01.832 --> 00:39:03.790
Can you please tell me
how is the weather going

00:39:03.790 --> 00:39:06.877
to be tomorrow in Krakow?

00:39:06.877 --> 00:39:09.210
AUTOMATED VOICE: It will be
partly cloudy there tomorrow

00:39:09.210 --> 00:39:12.930
in Krakow with a high of 18 and
a low of 10 degrees Celsius.

00:39:12.930 --> 00:39:14.740
[APPLAUSE]

00:39:14.740 --> 00:39:16.240
BEHSHAD BEZHADI:
So as you see, this

00:39:16.240 --> 00:39:18.790
is a rather more
natural language,

00:39:18.790 --> 00:39:20.910
longer types of
questions, as opposed

00:39:20.910 --> 00:39:23.820
to when you type on a machine
you say, weather, Krakow,

00:39:23.820 --> 00:39:24.620
tomorrow.

00:39:24.620 --> 00:39:28.410
Here I use a rather long
sentence in a conversation way.

00:39:28.410 --> 00:39:30.127
So we're trying to
understand then--

00:39:30.127 --> 00:39:31.710
there is machine
learning behind which

00:39:31.710 --> 00:39:35.310
understands that that sentence
is the same thing as weather

00:39:35.310 --> 00:39:36.540
Krakow tomorrow.

00:39:36.540 --> 00:39:38.610
So let's do more questions.

00:39:38.610 --> 00:39:40.250
Show me tourist
attractions in Krakow.

00:39:42.917 --> 00:39:44.500
AUTOMATED VOICE:
Attractions in Krakow

00:39:44.500 --> 00:39:47.770
include Wieliczka Salt Mine,
Wawel Castle, Ojcow National

00:39:47.770 --> 00:39:49.576
Park, and others.

00:39:49.576 --> 00:39:51.950
BEHSHAD BEZHADI: OK, so these
are more popular questions,

00:39:51.950 --> 00:39:54.670
about weather or attractions.

00:39:54.670 --> 00:39:57.460
But now I want to show
you how we actually

00:39:57.460 --> 00:40:01.330
try to expand its answering
capabilities to really more

00:40:01.330 --> 00:40:04.400
specific and long tail
type of questions.

00:40:04.400 --> 00:40:07.450
For example, show me a list
of rides in Europa Park.

00:40:10.750 --> 00:40:12.250
AUTOMATED VOICE:
Europa Park's rides

00:40:12.250 --> 00:40:16.360
include Blue Fire, Silver
Star, Wodan Timburcoaster,

00:40:16.360 --> 00:40:17.180
and others.

00:40:17.180 --> 00:40:18.430
BEHSHAD BEZHADI: So we
even know about the rides

00:40:18.430 --> 00:40:19.682
in an attraction park.

00:40:19.682 --> 00:40:22.015
Now I'm going to ask questions
about one particular ride

00:40:22.015 --> 00:40:23.626
there.

00:40:23.626 --> 00:40:25.500
What is the height
restriction for Blue Fire?

00:40:28.340 --> 00:40:30.470
AUTOMATED VOICE: You must
be at least 1.31 meters

00:40:30.470 --> 00:40:32.642
tall to ride Blue Fire.

00:40:32.642 --> 00:40:36.009
[APPLAUSE]

00:40:36.971 --> 00:40:38.820
BEHSHAD BEZHADI: Thanks.

00:40:38.820 --> 00:40:40.820
So what I'm trying to
show here is that, I mean,

00:40:40.820 --> 00:40:42.840
the range of examples I
can share is really big.

00:40:42.840 --> 00:40:45.620
But we really are
trying to expand

00:40:45.620 --> 00:40:49.040
to a long, wide
range of questions,

00:40:49.040 --> 00:40:51.680
and that's what you expect
from an ultimate assistant.

00:40:51.680 --> 00:40:53.360
Now, the next example
I'm showing you

00:40:53.360 --> 00:40:56.210
and actually across
my demos, it's

00:40:56.210 --> 00:40:58.730
a mixture of things which
is live and launched,

00:40:58.730 --> 00:41:01.070
and some of the things
which is not yet launched,

00:41:01.070 --> 00:41:04.480
but is our internal
prototypes that we have.

00:41:04.480 --> 00:41:07.110
And they're going to launch
either in the next few months,

00:41:07.110 --> 00:41:09.000
and in some cases next year.

00:41:09.000 --> 00:41:11.420
So the next one is
one of them, which

00:41:11.420 --> 00:41:14.490
we're trying to handle more
complex natural language,

00:41:14.490 --> 00:41:17.060
understanding.

00:41:17.060 --> 00:41:20.120
What is the name of the movie
where Tom Cruise acts in it,

00:41:20.120 --> 00:41:23.830
and he plays pool, and while
he plays pool he dances?

00:41:27.232 --> 00:41:28.940
AUTOMATED VOICE: Here
is some information

00:41:28.940 --> 00:41:30.110
about "The Color of Money."

00:41:30.110 --> 00:41:31.940
Former pool hustler
Felson decides

00:41:31.940 --> 00:41:33.419
he wants to return to the game--

00:41:33.419 --> 00:41:36.353
[APPLAUSE]

00:41:39.780 --> 00:41:43.820
BEHSHAD BEZHADI: So this
is possible through merging

00:41:43.820 --> 00:41:46.464
the power of search, the signals
coming from Google Search,

00:41:46.464 --> 00:41:47.380
with machine learning.

00:41:47.380 --> 00:41:49.460
It's a really combined
system which is

00:41:49.460 --> 00:41:51.270
capable of doing these things.

00:41:51.270 --> 00:41:54.042
We can see the
cast, for example.

00:41:54.042 --> 00:41:56.000
AUTOMATED VOICE: Its cast
includes Paul Newman,

00:41:56.000 --> 00:41:58.486
Tom Cruise, and 47 others.

00:41:58.486 --> 00:42:00.110
BEHSHAD BEZHADI: So
now let me show you

00:42:00.110 --> 00:42:02.630
how this voice
interface could be

00:42:02.630 --> 00:42:05.930
used for connecting
to other services,

00:42:05.930 --> 00:42:10.130
from first party Google or
type of others outside Google.

00:42:10.130 --> 00:42:13.250
So first I will show
an example of how

00:42:13.250 --> 00:42:15.170
the integration with
Translate could look

00:42:15.170 --> 00:42:17.710
like in this Assistant world.

00:42:17.710 --> 00:42:19.700
Be my Vietnamese translator.

00:42:21.824 --> 00:42:22.990
AUTOMATED VOICE: Understood.

00:42:22.990 --> 00:42:25.000
I will translate all
your following messages

00:42:25.000 --> 00:42:26.280
to Vietnamese.

00:42:26.280 --> 00:42:29.965
To stop just say,
stop translation.

00:42:29.965 --> 00:42:31.590
BEHSHAD BEZHADI: Hey,
I have a problem.

00:42:31.590 --> 00:42:32.290
Can you help me?

00:42:35.030 --> 00:42:39.270
AUTOMATED VOICE:
[SPEAKING VIETNAMESE]

00:42:39.270 --> 00:42:42.980
BEHSHAD BEZHADI: I lost
my luggage in the train.

00:42:42.980 --> 00:42:47.090
AUTOMATED VOICE:
[SPEAKING VIETNAMESE]

00:42:47.090 --> 00:42:49.550
BEHSHAD BEZHADI:
Stop translation.

00:42:49.550 --> 00:42:50.838
AUTOMATED VOICE: OK.

00:42:50.838 --> 00:42:53.208
[APPLAUSE]

00:42:57.090 --> 00:42:58.590
BEHSHAD BEZHADI:
So you see that you

00:42:58.590 --> 00:43:00.340
can use this natural
language and talking,

00:43:00.340 --> 00:43:03.980
and get connected to these
services and applications.

00:43:03.980 --> 00:43:06.770
Now I show another example, this
time with Street View, again,

00:43:06.770 --> 00:43:09.260
to show a combination
of voice input

00:43:09.260 --> 00:43:11.350
and the natural language
understanding connected

00:43:11.350 --> 00:43:12.780
to this service.

00:43:12.780 --> 00:43:14.420
So in this case I
would say something

00:43:14.420 --> 00:43:18.090
like, I would like to be on
the top of Eiffel Tower now.

00:43:18.090 --> 00:43:19.340
Can you please bring me there?

00:43:22.050 --> 00:43:24.030
AUTOMATED VOICE:
Opening Street View.

00:43:24.030 --> 00:43:25.740
BEHSHAD BEZHADI: We actually
call this project internally

00:43:25.740 --> 00:43:26.240
Teleport.

00:43:28.652 --> 00:43:31.556
[APPLAUSE]

00:43:36.915 --> 00:43:40.780
I think that's as good as
we can do for Teleport.

00:43:40.780 --> 00:43:44.440
So now I want to show you how
this could be, for example,

00:43:44.440 --> 00:43:49.830
integrated within service which
is not developed at Google.

00:43:49.830 --> 00:43:50.470
Talk to WebMD.

00:43:53.580 --> 00:43:55.860
AUTOMATED VOICE:
Sure, getting WebMD.

00:43:55.860 --> 00:43:57.240
Welcome to WebMD.

00:43:57.240 --> 00:43:59.780
I can tell you about
health conditions, drugs,

00:43:59.780 --> 00:44:01.850
or even side effects.

00:44:01.850 --> 00:44:04.141
What would you like to know?

00:44:04.141 --> 00:44:06.390
BEHSHAD BEZHADI: What are
the side effects of aspirin?

00:44:10.070 --> 00:44:12.260
AUTOMATED VOICE: Here's
a summary from RxList.

00:44:12.260 --> 00:44:15.000
Severe nausea, vomiting,
or stomach pain,

00:44:15.000 --> 00:44:17.630
coughing up blood or vomit
that looks like coffee grounds,

00:44:17.630 --> 00:44:20.950
fever lasting longer than
three days, and more.

00:44:20.950 --> 00:44:23.550
BEHSHAD BEZHADI:
It actually failed.

00:44:23.550 --> 00:44:25.624
We can try one more time maybe.

00:44:25.624 --> 00:44:27.165
What are the side
effects of aspirin?

00:44:30.360 --> 00:44:32.560
AUTOMATED VOICE: Here's
a summary from Rx--

00:44:32.560 --> 00:44:34.920
BEHSHAD BEZHADI: OK, so
but you know it works.

00:44:34.920 --> 00:44:38.090
I guess you are
developing this, too.

00:44:38.090 --> 00:44:39.960
But really, in the
core of what we need

00:44:39.960 --> 00:44:45.000
is also to be able to talk to
different services developed

00:44:45.000 --> 00:44:48.170
and merged by actions on Google
Platform to the Assistant

00:44:48.170 --> 00:44:49.390
itself.

00:44:49.390 --> 00:44:51.242
So in the next
part of my demos, I

00:44:51.242 --> 00:44:52.950
want to show you how
the Assistant should

00:44:52.950 --> 00:44:54.669
be ultra personal,
because this is

00:44:54.669 --> 00:44:55.960
a kind of a personal assistant.

00:44:55.960 --> 00:44:59.720
So there are answers and
things which Assistant

00:44:59.720 --> 00:45:02.100
could do about the
world for me, but we

00:45:02.100 --> 00:45:04.320
want it to also be
answering things

00:45:04.320 --> 00:45:06.150
which are specific to me.

00:45:06.150 --> 00:45:08.690
For example, I can
do things like,

00:45:08.690 --> 00:45:11.060
how is the traffic from
Zurich airport to my home?

00:45:13.310 --> 00:45:15.810
AUTOMATED VOICE: There's light
traffic from Zurich airport--

00:45:15.810 --> 00:45:18.946
ZRH-- to your home, so it
should take 43 minutes.

00:45:18.946 --> 00:45:20.570
BEHSHAD BEZHADI: So
I don't need to say

00:45:20.570 --> 00:45:22.690
what's the address of my home,
because my assistant knows

00:45:22.690 --> 00:45:23.190
that.

00:45:23.190 --> 00:45:24.760
And that's helpful for me.

00:45:24.760 --> 00:45:30.670
I can ask for things like,
when is my flight today?

00:45:30.670 --> 00:45:33.610
AUTOMATED VOICE: Your flight is
Lufthansa flight 1625 to Munich

00:45:33.610 --> 00:45:35.754
which leaves today at 4:50 PM.

00:45:35.754 --> 00:45:37.420
BEHSHAD BEZHADI: Note
that these are all

00:45:37.420 --> 00:45:39.961
happening automatic, and through
a different machine learning

00:45:39.961 --> 00:45:43.690
system, detecting
that from Gmail.

00:45:43.690 --> 00:45:46.190
We also have ways to do
explicit, in an explicit way.

00:45:46.190 --> 00:45:50.760
For example, if I say,
how is my team doing?

00:45:50.760 --> 00:45:53.877
AUTOMATED VOICE: Barcelona
is second in group A.

00:45:53.877 --> 00:45:55.710
BEHSHAD BEZHADI: This
is only the beginning.

00:45:55.710 --> 00:45:56.392
But--

00:45:56.392 --> 00:45:58.200
[APPLAUSE]

00:46:01.100 --> 00:46:04.387
I think that these are
all the Barcelona fans.

00:46:04.387 --> 00:46:05.970
But I think the
reason that I actually

00:46:05.970 --> 00:46:08.720
can do that is because
I explicitly said this.

00:46:08.720 --> 00:46:13.890
So I can say something like,
what is my favorite team?

00:46:13.890 --> 00:46:16.234
AUTOMATED VOICE: You told
me that you like Barcelona.

00:46:16.234 --> 00:46:18.650
BEHSHAD BEZHADI: So I explicitly
said I like Barcelona one

00:46:18.650 --> 00:46:21.030
day, actually, I think few
months back, to the Assistant.

00:46:21.030 --> 00:46:24.780
And from that moment,
she actually, if I say,

00:46:24.780 --> 00:46:27.180
what's my favorite team,
or how is my team doing,

00:46:27.180 --> 00:46:29.270
it considers Barcelona.

00:46:29.270 --> 00:46:32.760
OK, so now I want to
show you-- this is a way

00:46:32.760 --> 00:46:35.370
that we can actually improve
the Assistant by teaching

00:46:35.370 --> 00:46:37.340
something to it,
like about myself.

00:46:37.340 --> 00:46:39.952
I'm going to show you a more
fancy version of that, which is

00:46:39.952 --> 00:46:41.160
potentially coming next year.

00:46:44.700 --> 00:46:47.250
When the weather is
more than 25 degrees,

00:46:47.250 --> 00:46:49.010
I can swim in the
lake of Zurich.

00:46:51.417 --> 00:46:52.750
AUTOMATED VOICE: OK, understood.

00:46:55.069 --> 00:46:57.110
BEHSHAD BEZHADI: Can I
swim in the lake of Zurich

00:46:57.110 --> 00:47:00.049
this weekend?

00:47:00.049 --> 00:47:01.340
AUTOMATED VOICE: No, you can't.

00:47:01.340 --> 00:47:03.245
The temperature is
less than 25 degrees.

00:47:03.245 --> 00:47:04.916
[APPLAUSE]

00:47:04.916 --> 00:47:09.640
BEHSHAD BEZHADI: What's the
weather in Zurich this weekend?

00:47:09.640 --> 00:47:12.480
AUTOMATED VOICE: Here's
the forecast for Zurich.

00:47:12.480 --> 00:47:14.730
BEHSHAD BEZHADI: So that's
kind of things that really,

00:47:14.730 --> 00:47:17.766
if you think about a personal
assistant which you can improve

00:47:17.766 --> 00:47:19.140
it through natural
language, this

00:47:19.140 --> 00:47:22.500
is really going to be much
more powerful and easier

00:47:22.500 --> 00:47:24.270
to use for many people.

00:47:24.270 --> 00:47:27.480
So the next part of my demo is
I want to talk about context.

00:47:27.480 --> 00:47:28.650
Context is very important.

00:47:28.650 --> 00:47:30.060
The different
meanings of context

00:47:30.060 --> 00:47:35.130
is used to make the interactions
with the Assistant easier

00:47:35.130 --> 00:47:36.220
and more natural.

00:47:36.220 --> 00:47:38.359
And we use it in
different places.

00:47:38.359 --> 00:47:39.900
One of the places
that we use context

00:47:39.900 --> 00:47:43.710
is speech recognition itself,
trying to understand the words.

00:47:43.710 --> 00:47:46.140
So know I try to say an
example where first I

00:47:46.140 --> 00:47:48.000
don't give it a context.

00:47:48.000 --> 00:47:49.239
Normally it fails.

00:47:49.239 --> 00:47:51.030
And then I will try to
give context and see

00:47:51.030 --> 00:47:53.100
whether it works or not.

00:47:53.100 --> 00:47:56.020
Something like, how
high is the Rysy?

00:47:58.529 --> 00:48:00.070
AUTOMATED VOICE:
Here's what I found.

00:48:00.070 --> 00:48:01.090
The--

00:48:01.090 --> 00:48:02.673
BEHSHAD BEZHADI: How
high is the Rysy?

00:48:07.090 --> 00:48:10.320
So the point here is that
if I don't give context,

00:48:10.320 --> 00:48:13.141
it's hard to-- and it
even hangs sometimes.

00:48:13.141 --> 00:48:15.140
AUTOMATED VOICE: Here's
the forecast for Zurich.

00:48:15.140 --> 00:48:15.973
BEHSHAD BEZHADI: OK.

00:48:15.973 --> 00:48:18.159
[LAUGHTER] It tries
to do something,

00:48:18.159 --> 00:48:19.950
because it doesn't
understand what it says.

00:48:22.640 --> 00:48:25.330
Now, let's see what happens
if I give some context to it.

00:48:25.330 --> 00:48:30.980
Something like, highest
Tatra mountains.

00:48:30.980 --> 00:48:34.040
AUTOMATED VOICE: High Tatras
includes Lomnicky stit, Rysy,

00:48:34.040 --> 00:48:36.590
Gerlachovsky stit,
and other mountains.

00:48:36.590 --> 00:48:39.086
BEHSHAD BEZHADI: So as you
see, now there is a Rysy there.

00:48:39.086 --> 00:48:40.460
So this time now
I'm going to ask

00:48:40.460 --> 00:48:42.076
and hopefully it should work.

00:48:42.076 --> 00:48:42.950
How high is the Rysy?

00:48:46.230 --> 00:48:48.870
AUTOMATED VOICE: I can
search the web for answers.

00:48:48.870 --> 00:48:52.600
BEHSHAD BEZHADI:
Highest Tatra mountains.

00:48:52.600 --> 00:48:55.007
AUTOMATED VOICE: High Tatras
includes Lomnicky stit--

00:48:55.007 --> 00:48:56.590
BEHSHAD BEZHADI: How
high is the Rysy?

00:48:59.440 --> 00:49:02.670
AUTOMATED VOICE: Rysy
is 2,503 meters tall.

00:49:02.670 --> 00:49:05.490
[APPLAUSE]

00:49:07.534 --> 00:49:09.700
BEHSHAD BEZHADI: So this
shows that contextual voice

00:49:09.700 --> 00:49:11.920
recognition is actually
going to play a big role.

00:49:11.920 --> 00:49:13.510
Because people
actually always try

00:49:13.510 --> 00:49:16.240
to continue talking about
things which is related,

00:49:16.240 --> 00:49:18.220
and things which
is also personal,

00:49:18.220 --> 00:49:21.520
and location specific,
contextually relevance.

00:49:21.520 --> 00:49:24.100
Now, let me show you
another usage of context

00:49:24.100 --> 00:49:27.650
when context is used to
understand the entities itself.

00:49:27.650 --> 00:49:29.920
For example, pictures of Thomas.

00:49:32.381 --> 00:49:34.130
AUTOMATED VOICE: Check
out these pictures.

00:49:34.130 --> 00:49:35.921
BEHSHAD BEZHADI: I
think without a context,

00:49:35.921 --> 00:49:38.090
that's perhaps the best
we can come up with.

00:49:38.090 --> 00:49:39.290
Bayern Munich team roster.

00:49:41.680 --> 00:49:43.680
AUTOMATED VOICE: The
roster for FC Bayern Munich

00:49:43.680 --> 00:49:47.910
includes Robert Lewandowski,
James Rodriguez, Aryan Robin,

00:49:47.910 --> 00:49:48.540
and others.

00:49:48.540 --> 00:49:51.210
BEHSHAD BEZHADI: So you
see some Thomas is here.

00:49:51.210 --> 00:49:52.556
Pictures of Thomas.

00:49:55.739 --> 00:49:57.530
AUTOMATED VOICE: Pictures
of Thomas Muller.

00:49:57.530 --> 00:49:58.030
Here you are.

00:49:58.030 --> 00:49:59.655
BEHSHAD BEZHADI: So
in the context of--

00:49:59.655 --> 00:50:01.766
[APPLAUSE]

00:50:04.570 --> 00:50:07.480
In the context of the
previous sentence,

00:50:07.480 --> 00:50:10.160
then Tomas should be interpreted
as the different entity

00:50:10.160 --> 00:50:11.390
in this case.

00:50:11.390 --> 00:50:13.510
Now I want to show you
how context is helping

00:50:13.510 --> 00:50:16.090
to follow on conversations.

00:50:16.090 --> 00:50:19.360
Something like, where is
the Empire State Building?

00:50:21.720 --> 00:50:23.970
AUTOMATED VOICE: The address
for Empire State Building

00:50:23.970 --> 00:50:27.150
is Empire State Building,
350 Fifth Avenue, New York,

00:50:27.150 --> 00:50:28.212
New York, 1--

00:50:28.212 --> 00:50:29.878
BEHSHAD BEZHADI: I
want to see pictures.

00:50:33.329 --> 00:50:35.620
AUTOMATED VOICE: Pictures of
the Empire State Building.

00:50:35.620 --> 00:50:36.727
OK.

00:50:36.727 --> 00:50:38.060
BEHSHAD BEZHADI: How tall is it?

00:50:40.430 --> 00:50:42.180
AUTOMATED VOICE: The
Empire State Building

00:50:42.180 --> 00:50:44.361
is 381 meters tall.

00:50:44.361 --> 00:50:45.610
BEHSHAD BEZHADI: Who built it?

00:50:49.750 --> 00:50:51.944
AUTOMATED VOICE:
Steric Corporation.

00:50:51.944 --> 00:50:52.860
BEHSHAD BEZHADI: When?

00:50:56.212 --> 00:50:58.670
AUTOMATED VOICE: Construction
for the Empire State Building

00:50:58.670 --> 00:51:02.329
started in March 17th, 1930.

00:51:02.329 --> 00:51:04.370
BEHSHAD BEZHADI: What are
the Italian restaurants

00:51:04.370 --> 00:51:04.970
around there?

00:51:09.490 --> 00:51:12.160
AUTOMATED VOICE: I
found a few places.

00:51:12.160 --> 00:51:13.660
BEHSHAD BEZHADI:
Call the first one.

00:51:17.082 --> 00:51:17.790
It's in New York.

00:51:17.790 --> 00:51:19.344
AUTOMATED VOICE:
Calling Ai Fiori.

00:51:19.344 --> 00:51:21.010
BEHSHAD BEZHADI: So
you can see that I'm

00:51:21.010 --> 00:51:24.098
having the conversation
back and forth with--

00:51:24.098 --> 00:51:25.550
I will stop there.

00:51:25.550 --> 00:51:28.454
[APPLAUSE]

00:51:33.950 --> 00:51:35.410
So you can that I
said like seven,

00:51:35.410 --> 00:51:37.410
eight sentences about the
Empire State Building,

00:51:37.410 --> 00:51:38.790
I mentioned only one time.

00:51:38.790 --> 00:51:40.770
And this is all thanks
to the power of context

00:51:40.770 --> 00:51:42.960
and trying to put context
into the conversational

00:51:42.960 --> 00:51:43.920
understanding.

00:51:43.920 --> 00:51:46.655
So this is much more getting
closer to how people talk.

00:51:46.655 --> 00:51:48.780
Still there is lots of
problems to be solved there,

00:51:48.780 --> 00:51:53.020
but we're excited about these
steps in the right direction.

00:51:53.020 --> 00:51:57.180
Now I want to show next another
example of context, which

00:51:57.180 --> 00:51:59.255
is context of what you see.

00:51:59.255 --> 00:52:01.650
So for that, I'm
basically trying

00:52:01.650 --> 00:52:05.197
to show some examples of
integration of Google Lens

00:52:05.197 --> 00:52:06.780
with the Assistant,
where we're adding

00:52:06.780 --> 00:52:10.290
visual input to the Assistant.

00:52:10.290 --> 00:52:12.060
I don't know whether
you're seeing here,

00:52:12.060 --> 00:52:13.740
now I'm putting an apple here.

00:52:13.740 --> 00:52:18.680
And I'm going to the Google
Lens part of the Assistant.

00:52:18.680 --> 00:52:21.330
And I will ask, how many
calories does it have?

00:52:24.010 --> 00:52:27.550
AUTOMATED VOICE: There are 95
calories in one medium apple.

00:52:27.550 --> 00:52:29.676
[APPLAUSE]

00:52:30.896 --> 00:52:33.270
BEHSHAD BEZHADI: This is an
experience that you can have,

00:52:33.270 --> 00:52:36.720
where you have visual input
and voice input together.

00:52:36.720 --> 00:52:39.630
So let me just try to show
you one other example.

00:52:39.630 --> 00:52:41.120
I can try to get some money.

00:52:43.816 --> 00:52:48.216
[? That much ?] input, OK.

00:52:48.216 --> 00:52:54.090
[LAUGHTER]

00:52:54.090 --> 00:52:57.850
OK, this is visible, yeah.

00:52:57.850 --> 00:52:59.646
How much is this in Swiss franc?

00:53:03.380 --> 00:53:05.050
AUTOMATED VOICE:
250 polish zloties

00:53:05.050 --> 00:53:08.252
equals 67 Swiss
francs and 10 rappen.

00:53:08.252 --> 00:53:11.640
[APPLAUSE]

00:53:17.717 --> 00:53:19.300
BEHSHAD BEZHADI: So
you can see that--

00:53:19.300 --> 00:53:21.250
and this combination
can be very useful.

00:53:21.250 --> 00:53:24.030
I was actually the other day
walking in Krakow yesterday,

00:53:24.030 --> 00:53:26.031
seeing buildings, and
trying to take pictures.

00:53:26.031 --> 00:53:28.280
I would go to the Google
Lens and try to ask questions

00:53:28.280 --> 00:53:30.180
about what I was seeing around.

00:53:30.180 --> 00:53:33.660
And that's going to be
more powerful experiences

00:53:33.660 --> 00:53:36.570
for this future
of the Assistant.

00:53:36.570 --> 00:53:38.100
The last example
I want to show you

00:53:38.100 --> 00:53:40.171
is, because speech
recognition often

00:53:40.171 --> 00:53:41.670
worked here, I want
to show you also

00:53:41.670 --> 00:53:44.580
that we have worked on
improving speech recognition

00:53:44.580 --> 00:53:46.380
in a noisy environment.

00:53:46.380 --> 00:53:47.930
So for that I need your help.

00:53:47.930 --> 00:53:51.120
And the setup will be
that we will cut my mic,

00:53:51.120 --> 00:53:54.000
and I will ask all of you to
make as much noise as you can.

00:53:54.000 --> 00:53:57.060
Your mission should
be to make me fail.

00:53:57.060 --> 00:53:59.650
And I will ask a question
like my favorite team,

00:53:59.650 --> 00:54:01.520
when my favorite
team is playing next.

00:54:01.520 --> 00:54:04.200
And yeah, we can
even put some music

00:54:04.200 --> 00:54:06.910
to make the noise to be higher.

00:54:06.910 --> 00:54:08.920
It's OK if I fail,
it's just fine.

00:54:08.920 --> 00:54:11.220
Let's do it.

00:54:11.220 --> 00:54:13.620
So please make as
much noise as you can,

00:54:13.620 --> 00:54:15.444
and please cut the mic.

00:54:15.444 --> 00:54:22.246
[MUSIC PLAYING]

00:54:22.246 --> 00:54:23.871
AUTOMATED VOICE:
Barcelona's next match

00:54:23.871 --> 00:54:28.187
is on Saturday at 8:45 PM when
they will take on the Espanol.

00:54:28.187 --> 00:54:30.020
BEHSHAD BEZHADI: So we
actually have spent--

00:54:30.020 --> 00:54:30.840
can I have the mic back?

00:54:30.840 --> 00:54:30.930
Yeah.

00:54:30.930 --> 00:54:32.460
We actually have
spent lots of time

00:54:32.460 --> 00:54:34.740
on trying to improve
speech recognition

00:54:34.740 --> 00:54:36.360
in noisy environments,
added lots

00:54:36.360 --> 00:54:40.410
of data to the machine learning
systems behind automatically

00:54:40.410 --> 00:54:46.110
generated noise, like fake noise
of stadium, or people, or cars.

00:54:46.110 --> 00:54:48.780
And that's how we have
actually significantly managed

00:54:48.780 --> 00:54:50.610
to improve this.

00:54:50.610 --> 00:54:51.990
Thank you, camera man.

00:54:51.990 --> 00:54:56.229
So I can go back
to my slides for--

00:54:56.229 --> 00:54:57.195
thank you.

00:54:57.195 --> 00:55:00.093
[APPLAUSE]

00:55:03.970 --> 00:55:07.570
So what you have
seen in these demos

00:55:07.570 --> 00:55:10.480
is actually a collection of lots
of technologies going behind.

00:55:10.480 --> 00:55:14.610
Lots of it is actually being
built in Zurich and in Europe.

00:55:14.610 --> 00:55:17.046
So speech recognition,
context understanding,

00:55:17.046 --> 00:55:19.420
natural language understanding,
understanding the world--

00:55:19.420 --> 00:55:21.310
because we were answering
things about the world--

00:55:21.310 --> 00:55:22.960
understanding the
user, understanding

00:55:22.960 --> 00:55:26.140
the context, image recognition,
and personalization,

00:55:26.140 --> 00:55:26.830
and many more.

00:55:26.830 --> 00:55:29.560
But this was the ones
that I put on the slides.

00:55:29.560 --> 00:55:32.170
And this is all-- we
believe that these

00:55:32.170 --> 00:55:35.770
are all earlier steps
of the Google Assistant

00:55:35.770 --> 00:55:37.850
and the age of the
assistant, but it's

00:55:37.850 --> 00:55:39.670
a very exciting moment.

00:55:39.670 --> 00:55:43.650
I want to remind that I
talked about AI revolution,

00:55:43.650 --> 00:55:46.120
and that doesn't mean Google
Assistant or age of assistant

00:55:46.120 --> 00:55:47.710
is the AI revolution.

00:55:47.710 --> 00:55:49.420
It's one of the things
which is happening

00:55:49.420 --> 00:55:51.020
in this AI revolution.

00:55:51.020 --> 00:55:53.740
But the AI and machine
learning is being used heavily,

00:55:53.740 --> 00:55:57.070
and is going to be used much
more in many industries,

00:55:57.070 --> 00:56:00.520
such as health, agriculture,
smart cities, smart cars,

00:56:00.520 --> 00:56:01.520
and many more.

00:56:01.520 --> 00:56:03.220
So it's the right
time to really try

00:56:03.220 --> 00:56:07.000
to invest in different
industries, and into AI.

00:56:07.000 --> 00:56:11.930
And while at Google, I'm working
and we're working on the Google

00:56:11.930 --> 00:56:15.040
Assistant, I feel
very excited of adding

00:56:15.040 --> 00:56:18.930
these types of intelligences
into the Google Assistant.

00:56:18.930 --> 00:56:20.800
But I think in the end
that Google Assistant

00:56:20.800 --> 00:56:24.490
will be more powerful depending
on how many different services

00:56:24.490 --> 00:56:25.960
and applications it can have.

00:56:25.960 --> 00:56:28.210
And this is where
you all can help

00:56:28.210 --> 00:56:31.320
by integrating with
Google Assistant

00:56:31.320 --> 00:56:33.670
with the different use
cases that you have

00:56:33.670 --> 00:56:35.180
and applications that you have.

00:56:35.180 --> 00:56:38.960
And take part with us in
building this AI revolution.

00:56:38.960 --> 00:56:39.734
Thank you.

00:56:39.734 --> 00:56:42.578
[APPLAUSE]

00:56:48.280 --> 00:56:50.860
And with that I would like
to invite Micheal again

00:56:50.860 --> 00:56:52.911
to join to the stage.

00:56:52.911 --> 00:56:56.807
[MUSIC PLAYING]

00:57:00.720 --> 00:57:02.960
MICHEAL O FOGHLU: So we've
heard two great talks

00:57:02.960 --> 00:57:06.480
to kick off the day today,
and I would especially like

00:57:06.480 --> 00:57:08.400
to thank those two speakers.

00:57:08.400 --> 00:57:11.340
Behshad, who is very brave
with all those demonstrations,

00:57:11.340 --> 00:57:12.480
thank you.

00:57:12.480 --> 00:57:13.304
And--

00:57:13.304 --> 00:57:18.410
[APPLAUSE]

00:57:18.410 --> 00:57:22.070
And Ewa, who showed us the
very exciting work that's

00:57:22.070 --> 00:57:25.700
going on in Warsaw, in Poland.

00:57:25.700 --> 00:57:28.005
[APPLAUSE]

00:57:31.240 --> 00:57:34.340
I was reminded of one of
my favorite geeky t-shirts

00:57:34.340 --> 00:57:36.280
as I was listening
to Ewa, which is,

00:57:36.280 --> 00:57:39.850
there's no such thing as cloud
computing, only someone else's

00:57:39.850 --> 00:57:42.350
computers.

00:57:42.350 --> 00:57:45.400
And the thing is,
when that is true,

00:57:45.400 --> 00:57:47.530
you want the people running
those computers to know

00:57:47.530 --> 00:57:48.321
what they're doing.

00:57:48.321 --> 00:57:53.640
And so trust in Google, use
our Google Cloud Platform.

00:57:53.640 --> 00:57:59.290
Now, I'd advise you all to
make best use of the code labs

00:57:59.290 --> 00:58:02.230
that allow you to do follow-up
activities, especially

00:58:02.230 --> 00:58:04.340
on the Google Cloud
Platform stuff that Ewa

00:58:04.340 --> 00:58:05.440
was talking about.

00:58:05.440 --> 00:58:09.070
But also about some
of our open sourced AI

00:58:09.070 --> 00:58:12.710
stuff that relates to what
Behshad was talking about.

00:58:12.710 --> 00:58:15.340
And for the rest of
the day, you can also

00:58:15.340 --> 00:58:20.410
join in sessions, trainings,
and explore the sandboxes

00:58:20.410 --> 00:58:21.910
that are scattered around.

00:58:21.910 --> 00:58:23.880
And don't forget that
we're wrapping up

00:58:23.880 --> 00:58:25.300
at quarter past 5:00--

00:58:25.300 --> 00:58:28.810
17:15-- back here in
the main auditorium

00:58:28.810 --> 00:58:30.910
with the closing keynote.

00:58:30.910 --> 00:58:33.940
So thanks very much and enjoy
the rest of the conference.

00:58:33.940 --> 00:58:36.990
[MUSIC PLAYING]

