WEBVTT
Kind: captions
Language: en

00:00:00.477 --> 00:00:08.119
[MUSIC PLAYING]

00:00:08.119 --> 00:00:09.830
MALE SPEAKER: Shanghai
GDG is a very

00:00:09.830 --> 00:00:11.910
interesting developer community.

00:00:11.910 --> 00:00:12.750
FEMALE SPEAKER: I'm
glad somebody

00:00:12.750 --> 00:00:13.870
has asked this question.

00:00:13.870 --> 00:00:15.289
MALE SPEAKER: This is where
the magic happens.

00:00:15.289 --> 00:00:16.790
FEMALE SPEAKER: This is
primarily a question and

00:00:16.790 --> 00:00:17.390
answer show.

00:00:17.390 --> 00:00:19.370
So if any of you out there would
like to ask questions.

00:00:25.110 --> 00:00:25.350
JEREMY WALKER: Hi.

00:00:25.350 --> 00:00:28.300
Welcome to the YouTube
Developers Live.

00:00:28.300 --> 00:00:30.750
We have a great show today.

00:00:30.750 --> 00:00:32.100
We have some guests here.

00:00:32.100 --> 00:00:33.320
My name's Jeremy.

00:00:33.320 --> 00:00:34.470
We have Jarek, of course.

00:00:34.470 --> 00:00:34.640
JAREK WILKIEWICZ: Hi, guys.

00:00:34.640 --> 00:00:35.600
JEREMY WALKER: And
we're both on the

00:00:35.600 --> 00:00:37.290
Developer Advocate team.

00:00:37.290 --> 00:00:39.270
And we also have Jeff
on the line.

00:00:39.270 --> 00:00:41.060
But I'm really excited.

00:00:41.060 --> 00:00:43.445
We have some people
from GoAnimate.

00:00:43.445 --> 00:00:44.450
We have Gary.

00:00:44.450 --> 00:00:45.270
GARY LIPKOWITZ: Yes.

00:00:45.270 --> 00:00:46.470
Hi, I'm Gary Lipkowitz.

00:00:46.470 --> 00:00:47.570
I'm with GoAnimate.

00:00:47.570 --> 00:00:49.210
JEREMY WALKER: And then we
have Alvin, who actually

00:00:49.210 --> 00:00:50.460
started up the whole company.

00:00:53.240 --> 00:00:56.210
And then we also have Ben on
the line who's one of the

00:00:56.210 --> 00:00:58.450
developers for GoAnimate.

00:00:58.450 --> 00:01:00.690
BEN NG: Hi, everyone.

00:01:00.690 --> 00:01:02.780
JEREMY WALKER: And then I
mentioned Jeff earlier, who's

00:01:02.780 --> 00:01:07.260
also one of the Google
Developer advocates.

00:01:07.260 --> 00:01:08.592
JEFF: Hi, guys.

00:01:08.592 --> 00:01:09.130
JEREMY WALKER: Hi, Jeff.

00:01:09.130 --> 00:01:10.830
How's life in New York?

00:01:10.830 --> 00:01:11.530
JEFF: Pretty good.

00:01:11.530 --> 00:01:14.970
Trying a new setup here today,
so bear with any technical

00:01:14.970 --> 00:01:17.650
difficulties that we have
with the audio or video.

00:01:17.650 --> 00:01:18.540
JAREK WILKIEWICZ: You
have some fancy

00:01:18.540 --> 00:01:20.360
new digs over there.

00:01:20.360 --> 00:01:21.920
JEFF: Yes.

00:01:21.920 --> 00:01:25.560
We have a nice lush New York
City background as you can see

00:01:25.560 --> 00:01:28.470
behind me with the YouTube logo
over everyone's shoulder.

00:01:28.470 --> 00:01:30.830
JAREK WILKIEWICZ: But you seem
to be moving in slow motion.

00:01:30.830 --> 00:01:32.310
Are you kicking it
in New York City?

00:01:32.310 --> 00:01:34.230
I thought New Yorkers are
uptight, and they move very

00:01:34.230 --> 00:01:35.050
fast and everything.

00:01:35.050 --> 00:01:36.660
So what's up with that?

00:01:36.660 --> 00:01:36.970
JEFF: Yeah.

00:01:36.970 --> 00:01:39.100
We need to get a data center
out in New York, I guess.

00:01:39.100 --> 00:01:42.680
It's just obviously taking a lot
of time to send my video

00:01:42.680 --> 00:01:45.180
signal out to you guys
in Mountain View.

00:01:45.180 --> 00:01:46.180
So sorry about that.

00:01:46.180 --> 00:01:48.630
We should get that technical
stuff worked out for next

00:01:48.630 --> 00:01:49.460
week's broadcast.

00:01:49.460 --> 00:01:49.760
JAREK WILKIEWICZ: Cool.

00:01:49.760 --> 00:01:52.000
Your voice sounds
fine, though.

00:01:52.000 --> 00:01:52.310
JEREMY WALKER: Yeah.

00:01:52.310 --> 00:01:53.390
And the background's
awesome, too.

00:01:53.390 --> 00:01:55.460
JAREK WILKIEWICZ: No
problem there.

00:01:55.460 --> 00:01:57.810
So Alvin and Ben are joining
us from Hong Kong.

00:01:57.810 --> 00:02:00.520
What time is it there
right now?

00:02:00.520 --> 00:02:03.580
ALVIN HUNG: It's actually 1:00
AM in Hong Kong right now

00:02:03.580 --> 00:02:04.610
JAREK WILKIEWICZ: Wow.

00:02:04.610 --> 00:02:05.860
You guys work really hard.

00:02:10.330 --> 00:02:10.789
Great.

00:02:10.789 --> 00:02:11.310
JEREMY WALKER: Great.

00:02:11.310 --> 00:02:13.230
Well, I'm really excited.

00:02:13.230 --> 00:02:16.290
So GoAnimate, I'm going to let
you guys talk a little bit

00:02:16.290 --> 00:02:18.350
about your company and
how you got started.

00:02:18.350 --> 00:02:20.480
But I'm really excited
because I love

00:02:20.480 --> 00:02:22.040
animation, and I love anime.

00:02:22.040 --> 00:02:23.110
And I know we're going
to talk a little

00:02:23.110 --> 00:02:24.340
bit about that today--

00:02:24.340 --> 00:02:24.790
GARY LIPKOWITZ: Absolutely.

00:02:24.790 --> 00:02:26.910
JEREMY WALKER: --and how you
guys are expanding into that

00:02:26.910 --> 00:02:28.780
for your users.

00:02:28.780 --> 00:02:30.580
But why don't you guys
get started?

00:02:30.580 --> 00:02:34.960
Just talk a little bit why you
got started and the whole

00:02:34.960 --> 00:02:36.130
story behind GoAnimate.

00:02:36.130 --> 00:02:37.020
GARY LIPKOWITZ: Sure.

00:02:37.020 --> 00:02:38.820
We'll let Alvin do that since
he's the founder.

00:02:38.820 --> 00:02:41.810
He knows the origins the best.

00:02:41.810 --> 00:02:45.240
ALVIN HUNG: So a few years ago,
I was trying to turn the

00:02:45.240 --> 00:02:48.570
story in my head into a
video, and it was very

00:02:48.570 --> 00:02:49.980
difficult to do.

00:02:49.980 --> 00:02:53.430
I didn't want to hire actors,
and I didn't have any camera

00:02:53.430 --> 00:02:54.900
equipment with me.

00:02:54.900 --> 00:02:58.840
And if I wanted to create an
animation, I would need to

00:02:58.840 --> 00:02:59.870
draw very well.

00:02:59.870 --> 00:03:01.350
But I don't know how to draw.

00:03:01.350 --> 00:03:03.940
And so basically back then,
I was completely stuck.

00:03:03.940 --> 00:03:06.610
I had this really funny story
in my head, but I just

00:03:06.610 --> 00:03:09.070
couldn't turn it into a video.

00:03:09.070 --> 00:03:10.330
And that was very frustrating.

00:03:10.330 --> 00:03:12.480
And I thought, there must be a
lot of people out there with

00:03:12.480 --> 00:03:16.662
great ideas who want to express
those ideas as video.

00:03:16.662 --> 00:03:18.080
It can't be that hard.

00:03:18.080 --> 00:03:20.990
And that's why I founded
GoAnimate as a simple website,

00:03:20.990 --> 00:03:24.430
a simple way for everyone to
create videos and express

00:03:24.430 --> 00:03:26.940
themselves.

00:03:26.940 --> 00:03:28.930
JEREMY WALKER: Awesome.

00:03:28.930 --> 00:03:31.350
Can you tell us a little bit
about how your system is

00:03:31.350 --> 00:03:33.430
implemented?

00:03:33.430 --> 00:03:36.060
ALVIN HUNG: It's fairly
simple, actually.

00:03:36.060 --> 00:03:37.445
All our client-side
applications

00:03:37.445 --> 00:03:39.430
are done using Flash.

00:03:39.430 --> 00:03:42.540
On the server side, we are
running on a LAN stack, so

00:03:42.540 --> 00:03:47.460
basically Linux, Apache,
MySQL, and PHP.

00:03:47.460 --> 00:03:50.440
And the whole thing we are using
Amazon Web Services.

00:03:50.440 --> 00:03:53.320
So everything is basically
in the cloud.

00:03:53.320 --> 00:03:54.230
JEREMY WALKER: Oh,
that's great.

00:03:54.230 --> 00:03:58.030
Can you talk a little bit about
converting these Flash

00:03:58.030 --> 00:04:02.410
animations into video and what
kind of time it takes and a

00:04:02.410 --> 00:04:04.440
little bit more about that?

00:04:04.440 --> 00:04:08.760
ALVIN HUNG: So we basically have
a server file where we

00:04:08.760 --> 00:04:12.610
have these Windows machines
running 24 hours a day.

00:04:12.610 --> 00:04:16.990
And depending on demand at any
moment in time, we will fire

00:04:16.990 --> 00:04:20.680
up new servers or tier
down useless ones.

00:04:20.680 --> 00:04:25.720
And we basically dynamically
allocate capacity depending on

00:04:25.720 --> 00:04:27.790
how much traffic we have.

00:04:27.790 --> 00:04:30.425
On the average, it takes between
5 to 10 minutes for a

00:04:30.425 --> 00:04:33.300
video to convert,
so fairly fast.

00:04:33.300 --> 00:04:33.580
JEREMY WALKER: Oh, wow.

00:04:33.580 --> 00:04:35.030
JAREK WILKIEWICZ: And
you actually render

00:04:35.030 --> 00:04:36.730
frames frame by frame?

00:04:36.730 --> 00:04:37.890
What's the actual process?

00:04:37.890 --> 00:04:40.160
Because the animations are
actually executed in the

00:04:40.160 --> 00:04:41.470
Flash, right?

00:04:41.470 --> 00:04:45.480
We don't actually in
just Flash for--

00:04:45.480 --> 00:04:49.680
at YouTube, we need some sort
of encoded video stream.

00:04:49.680 --> 00:04:51.740
So was that kind of the most
challenging part of the

00:04:51.740 --> 00:04:53.480
integration?

00:04:53.480 --> 00:04:57.190
What did you guys end up doing
about that, and how

00:04:57.190 --> 00:05:00.460
difficult was that?

00:05:00.460 --> 00:05:02.450
ALVIN HUNG: The very cool thing
about using Flash is

00:05:02.450 --> 00:05:06.120
that when people are composing
their video, they can

00:05:06.120 --> 00:05:09.200
instantly preview what
they have done.

00:05:09.200 --> 00:05:11.090
It doesn't go through
a rendering process.

00:05:11.090 --> 00:05:13.930
And so that instant feedback
and gratification

00:05:13.930 --> 00:05:16.190
is extremely important.

00:05:16.190 --> 00:05:19.435
As to how we actually get all
the Flash stuff into video

00:05:19.435 --> 00:05:23.290
format, that's black magic.

00:05:23.290 --> 00:05:25.700
So we'll review that later on.

00:05:25.700 --> 00:05:28.970
But yeah, there's some pretty
cool stuff going on.

00:05:28.970 --> 00:05:29.850
JAREK WILKIEWICZ: Yeah, yeah.

00:05:29.850 --> 00:05:32.200
Just trying, you know,
to see if we can get

00:05:32.200 --> 00:05:33.950
something from you.

00:05:33.950 --> 00:05:35.970
But it sounds like it's your
competitive advantage, which

00:05:35.970 --> 00:05:37.060
is actually very neat.

00:05:37.060 --> 00:05:39.650
I played with the tool, and
it works really well.

00:05:39.650 --> 00:05:41.800
So what about character
development?

00:05:41.800 --> 00:05:43.920
You guys have a very wide
range of characters.

00:05:43.920 --> 00:05:48.030
How do you decide what is hot
and what should be made

00:05:48.030 --> 00:05:49.670
available to your users?

00:05:49.670 --> 00:05:52.588
How does the process work?

00:05:52.588 --> 00:05:55.670
ALVIN HUNG: We get feedback
from a variety of places.

00:05:55.670 --> 00:05:57.860
We ask for our users'
feedback.

00:05:57.860 --> 00:06:01.250
We basically ask on the forums
what kind of characters would

00:06:01.250 --> 00:06:03.050
enable them to be
more creative.

00:06:03.050 --> 00:06:04.410
What kind of characters
would let them

00:06:04.410 --> 00:06:06.030
express themselves better?

00:06:06.030 --> 00:06:07.360
We do a lot of data mining.

00:06:07.360 --> 00:06:10.950
We look into our database, and
we study what kind of behavior

00:06:10.950 --> 00:06:12.510
people are displaying.

00:06:12.510 --> 00:06:16.490
And we basically go online, and
we scout the web and look

00:06:16.490 --> 00:06:17.620
for file content.

00:06:17.620 --> 00:06:19.440
What kind of content
is getting filed at

00:06:19.440 --> 00:06:20.700
any moment in time?

00:06:20.700 --> 00:06:23.270
What kind of styling
do people like?

00:06:23.270 --> 00:06:26.040
And we take this feedback
together, and we basically

00:06:26.040 --> 00:06:30.350
brainstorm and try to find
directions that will satisfy

00:06:30.350 --> 00:06:33.350
some aspects of these demand.

00:06:33.350 --> 00:06:33.860
JAREK WILKIEWICZ: I see.

00:06:33.860 --> 00:06:34.630
Cool.

00:06:34.630 --> 00:06:38.130
Maybe we should take a look at
a quick demo and then ask you

00:06:38.130 --> 00:06:41.400
some more questions so people
who are not familiar with

00:06:41.400 --> 00:06:44.586
GoAnimate can get a basic
idea of how it works.

00:06:44.586 --> 00:06:45.030
ALVIN HUNG: Certainly.

00:06:45.030 --> 00:06:45.760
JAREK WILKIEWICZ:
Can we do that?

00:06:45.760 --> 00:06:46.310
GARY LIPKOWITZ: We can.

00:06:46.310 --> 00:06:47.630
We've been specially trained.

00:06:47.630 --> 00:06:49.140
JAREK WILKIEWICZ:
Let's go for it.

00:06:49.140 --> 00:06:50.410
GARY LIPKOWITZ: I had some
queued up for the demo.

00:06:50.410 --> 00:06:51.800
So actually I'm going
to go off script.

00:06:51.800 --> 00:06:54.900
I'll show you a real short
one because it's topical.

00:06:54.900 --> 00:06:58.360
And this is also an old internet
meme, so all the

00:06:58.360 --> 00:06:59.210
older guys out there will--

00:06:59.210 --> 00:06:59.660
[VIDEO PLAYBACK]

00:06:59.660 --> 00:07:03.680
MALE SPEAKER: Here one
should see in Wasabi.

00:07:03.680 --> 00:07:05.910
JOE BIDEN: Wasabi.

00:07:05.910 --> 00:07:06.750
MALE SPEAKER: Yeah, wasabi.

00:07:06.750 --> 00:07:09.175
JOE BIDEN: Wasabi.

00:07:09.175 --> 00:07:10.630
MALE SPEAKER: Wasabi, abi.

00:07:10.630 --> 00:07:11.070
MALE SPEAKER: Wasabi.

00:07:11.070 --> 00:07:12.870
JOE BIDEN: Wasaaaaaabi.

00:07:12.870 --> 00:07:14.220
MALE SPEAKER: Wasabi.

00:07:14.220 --> 00:07:15.270
JOE BIDEN: Wasabi.

00:07:15.270 --> 00:07:16.860
FEMALE SPEAKER: Wasaaaaaabi.

00:07:16.860 --> 00:07:17.570
MALE SPEAKER: Wasabi.

00:07:17.570 --> 00:07:17.984
[ALL SPEAKING]

00:07:17.984 --> 00:07:22.184
Wasabi, Wasaaabi, Wasabi,
Oh, ah, aaaah, Oh, ah.

00:07:22.184 --> 00:07:25.148
MALE SPEAKER: Wasabi.

00:07:25.148 --> 00:07:31.080
[END VIDEO PLAYBACK]

00:07:31.080 --> 00:07:32.010
GARY LIPKOWITZ: So that
one's featuring--

00:07:32.010 --> 00:07:33.190
JAREK WILKIEWICZ: Does that
conclude the demo?

00:07:33.190 --> 00:07:34.710
GARY LIPKOWITZ: That does
not conclude the demo.

00:07:34.710 --> 00:07:35.560
That was off-script.

00:07:35.560 --> 00:07:37.740
That was an extra
special bonus.

00:07:37.740 --> 00:07:39.680
But we thought the election's
making headlines again.

00:07:39.680 --> 00:07:42.490
We'd show off the election
characters one more time.

00:07:42.490 --> 00:07:44.720
Everybody likes to see Joe
Biden in a bar, as

00:07:44.720 --> 00:07:45.350
far as I can tell.

00:07:45.350 --> 00:07:46.140
JAREK WILKIEWICZ: Yeah,
yeah, yeah.

00:07:46.140 --> 00:07:47.110
So how does the process work?

00:07:47.110 --> 00:07:49.890
Can you walk through
the actual process

00:07:49.890 --> 00:07:51.500
of creating an animation?

00:07:51.500 --> 00:07:52.750
GARY LIPKOWITZ: Sure.

00:07:58.980 --> 00:08:02.600
You'd log into YouTube Create
and then select GoAnimate.

00:08:02.600 --> 00:08:05.500
You'd end up on a homepage
that's divided into quick

00:08:05.500 --> 00:08:07.450
video makers and full
video makers.

00:08:07.450 --> 00:08:09.370
But for the purpose of today, I
think we'll just look at the

00:08:09.370 --> 00:08:10.960
full video makers.

00:08:10.960 --> 00:08:12.950
The quick video maker's a very
structured solution.

00:08:12.950 --> 00:08:15.480
You would, just using only left
and right arrow, pick

00:08:15.480 --> 00:08:18.070
some characters, pick a
background, type or record

00:08:18.070 --> 00:08:20.590
some lines of dialogue,
and press Play.

00:08:20.590 --> 00:08:23.750
But I think this will be more
interesting for the audience.

00:08:23.750 --> 00:08:26.790
So I would click on one of these
Make a Movie buttons,

00:08:26.790 --> 00:08:28.750
and that would lead
me to what we call

00:08:28.750 --> 00:08:31.670
the Studio in aggregate.

00:08:31.670 --> 00:08:34.890
And some key parts here, there's
a pull-down menu that

00:08:34.890 --> 00:08:37.120
shows some of the creative
options available.

00:08:37.120 --> 00:08:39.270
These two video makers are
behind the Business paywall.

00:08:39.270 --> 00:08:41.220
If we were in the Consumer
section, there would be more

00:08:41.220 --> 00:08:43.760
than a dozen video makers
or creative

00:08:43.760 --> 00:08:46.171
themes to choose from.

00:08:46.171 --> 00:08:49.090
JAREK WILKIEWICZ: So this is--
you could create a version of

00:08:49.090 --> 00:08:51.880
the application which has a
limited set of characters?

00:08:51.880 --> 00:08:53.640
Is that what you mean?

00:08:53.640 --> 00:08:54.900
GARY LIPKOWITZ: No.

00:08:54.900 --> 00:08:56.400
We wanted to show some
of the new stuff.

00:08:56.400 --> 00:08:57.240
JAREK WILKIEWICZ: OK.

00:08:57.240 --> 00:09:00.170
GARY LIPKOWITZ: I could go out
and come back in and load the

00:09:00.170 --> 00:09:02.450
studio with the consumer video
makers, and you would still

00:09:02.450 --> 00:09:03.380
have more than a dozen.

00:09:03.380 --> 00:09:04.400
Everything is available.

00:09:04.400 --> 00:09:05.741
JAREK WILKIEWICZ: So Consumer
is the version that's

00:09:05.741 --> 00:09:06.492
available for free?

00:09:06.492 --> 00:09:07.094
Or is it premium?

00:09:07.094 --> 00:09:08.450
GARY LIPKOWITZ: It's premium.

00:09:08.450 --> 00:09:09.353
JAREK WILKIEWICZ: Premium.

00:09:09.353 --> 00:09:10.340
GARY LIPKOWITZ: Correct.

00:09:10.340 --> 00:09:14.760
And this part up here, this grey
part on the left, we call

00:09:14.760 --> 00:09:15.450
this the tray.

00:09:15.450 --> 00:09:17.200
And you'll see it's
multi-tabbed.

00:09:17.200 --> 00:09:19.890
And this is where all of the
assets are, assets being

00:09:19.890 --> 00:09:25.950
Characters, Backgrounds, Props,
Music, Visual Effects.

00:09:25.950 --> 00:09:27.370
And this one here, as
you can probably

00:09:27.370 --> 00:09:29.160
guess, is the Text tool.

00:09:29.160 --> 00:09:32.170
This area is called the stage,
and this is the frame of your

00:09:32.170 --> 00:09:33.840
video that you're creating.

00:09:33.840 --> 00:09:34.870
Down here is the timeline.

00:09:34.870 --> 00:09:37.400
And you can see your picture
arranged in the timeline as

00:09:37.400 --> 00:09:40.770
well as multiple audio tracks.

00:09:40.770 --> 00:09:42.270
Let's start by changing
the background.

00:09:42.270 --> 00:09:43.940
This crumpled paper is good.

00:09:43.940 --> 00:09:45.850
Let me do one a little
more woody themed.

00:09:45.850 --> 00:09:48.260
Everything is point and
click, drag and drop.

00:09:48.260 --> 00:09:51.300
So all I do is drag it in,
and it takes over.

00:09:51.300 --> 00:09:53.750
If there were multiple elements
on this background,

00:09:53.750 --> 00:09:55.930
like a forest scene with lots
of trees and rocks and

00:09:55.930 --> 00:09:59.280
boulders and sunshine, in many
cases all of those elements

00:09:59.280 --> 00:10:01.670
are layered and individually
controllable, so you can make

00:10:01.670 --> 00:10:03.900
them bigger, smaller,
or delete them.

00:10:03.900 --> 00:10:05.760
And of course, we want
some characters.

00:10:05.760 --> 00:10:08.560
So again, you just drag
them in the screen.

00:10:08.560 --> 00:10:10.250
I want him on the left,
so I want him to

00:10:10.250 --> 00:10:10.990
face the other way.

00:10:10.990 --> 00:10:12.370
I can flip him.

00:10:12.370 --> 00:10:14.710
If we were multilayered, I can
move him backward and forward.

00:10:14.710 --> 00:10:16.160
And if I decide I don't
want him, I can

00:10:16.160 --> 00:10:18.290
just get rid of him.

00:10:18.290 --> 00:10:23.990
So you know, with this guy, I
want a little more spiky hair.

00:10:23.990 --> 00:10:25.630
Once I've selected
a character, I

00:10:25.630 --> 00:10:28.660
can give him actions.

00:10:28.660 --> 00:10:29.410
I can--

00:10:29.410 --> 00:10:32.310
sorry, double click there.

00:10:32.310 --> 00:10:35.840
I can give him facial
expressions.

00:10:35.840 --> 00:10:39.360
I can give him basic sliding
movements, or I can give him

00:10:39.360 --> 00:10:42.960
more advanced entrances
and exits.

00:10:42.960 --> 00:10:45.210
So some of these tools work a
little bit like what your

00:10:45.210 --> 00:10:47.800
expectations are
for PowerPoint.

00:10:47.800 --> 00:10:52.200
I choose Enter or Exit, timed
with the previous scene or put

00:10:52.200 --> 00:10:54.520
a little delay on it, and then
there's many choices.

00:10:54.520 --> 00:10:56.820
So maybe I just want
him to fade in.

00:10:56.820 --> 00:10:59.610
I can adjust the timing
if I want.

00:10:59.610 --> 00:11:02.150
And then if I click Preview,
basically we'd see the one and

00:11:02.150 --> 00:11:02.640
only scene.

00:11:02.640 --> 00:11:05.584
We'll watch this guy fade in.

00:11:05.584 --> 00:11:07.000
JEREMY WALKER: Cool.

00:11:07.000 --> 00:11:08.000
GARY LIPKOWITZ: And then
I would say, OK.

00:11:08.000 --> 00:11:09.140
I'm happy with the way
it's starting.

00:11:09.140 --> 00:11:11.470
I'm going to go back and
add more scenes or more

00:11:11.470 --> 00:11:13.250
characters.

00:11:13.250 --> 00:11:15.200
So again, I just want the
blue-haired guy here.

00:11:15.200 --> 00:11:16.320
I just drag him in.

00:11:16.320 --> 00:11:19.870
If I want him to be gigantic,
if I want him to be tiny and

00:11:19.870 --> 00:11:22.530
live in the corner or sit
on his shoulder, I

00:11:22.530 --> 00:11:24.070
can do all of that.

00:11:24.070 --> 00:11:26.400
I think I need a prop
to work with.

00:11:26.400 --> 00:11:27.940
I would go in this menu.

00:11:27.940 --> 00:11:29.270
He looks like a lounge
singer to me.

00:11:29.270 --> 00:11:31.140
I'll put a microphone in here.

00:11:31.140 --> 00:11:33.870
In some cases, although probably
not in this video

00:11:33.870 --> 00:11:35.970
maker, you can drag the props
onto the characters.

00:11:35.970 --> 00:11:37.240
They'll hold it with
their hand.

00:11:37.240 --> 00:11:38.700
Then you'll get another
menu controlling what

00:11:38.700 --> 00:11:39.960
they do with it.

00:11:39.960 --> 00:11:42.010
In this case, I think I
want the microphone--

00:11:42.010 --> 00:11:44.180
if I could operate the
mouse better--

00:11:44.180 --> 00:11:50.410
to be gigantic and
live over here.

00:11:50.410 --> 00:11:52.465
I'm not very good at design,
as you can tell.

00:11:52.465 --> 00:11:54.790
JAREK WILKIEWICZ: Well, you're
doing better than--

00:11:54.790 --> 00:11:56.830
GARY LIPKOWITZ: And then maybe
we wanted to add text.

00:11:56.830 --> 00:11:59.540
I think this one's
self-explanatory, just

00:11:59.540 --> 00:12:00.790
double-click.

00:12:07.980 --> 00:12:10.230
Then if we wanted to change a
text color, we can do that

00:12:10.230 --> 00:12:11.310
with a single click.

00:12:11.310 --> 00:12:14.020
Justify the text differently,
very easy.

00:12:14.020 --> 00:12:16.965
It's all designed to
work intuitively.

00:12:16.965 --> 00:12:19.390
Our brand promises--

00:12:19.390 --> 00:12:21.810
you wouldn't need to learn how
to draw or program in order to

00:12:21.810 --> 00:12:23.560
make a compelling animation
with this.

00:12:23.560 --> 00:12:25.140
You can just unleash your
inner director.

00:12:28.130 --> 00:12:31.335
I can show you what this theme
looks like in a video.

00:12:31.335 --> 00:12:34.070
If you guys have another minute,
we'll show what it all

00:12:34.070 --> 00:12:35.060
looks like when something's
who's good at

00:12:35.060 --> 00:12:35.890
design puts it together.

00:12:35.890 --> 00:12:36.180
JEREMY WALKER: Sure.

00:12:36.180 --> 00:12:37.020
Bring it on.

00:12:37.020 --> 00:12:38.270
[VIDEO PLAYBACK]

00:12:38.270 --> 00:12:40.880
NARRATOR: Guys, when the Supreme
Being was handing out

00:12:40.880 --> 00:12:43.740
brains, were you out to lunch?

00:12:43.740 --> 00:12:47.540
When you try to do math, does
it hurt a whole bunch?

00:12:47.540 --> 00:12:50.640
That's because you're
dumb, you meathead.

00:12:50.640 --> 00:12:55.190
This can be a big, big problem,
you know, for life.

00:12:55.190 --> 00:12:56.680
But not anymore.

00:12:56.680 --> 00:12:59.410
Thinking Cap is a revolutionary
hat designed for

00:12:59.410 --> 00:13:01.100
dumb guys like you.

00:13:01.100 --> 00:13:04.850
Just put it on and get
smarter immediately.

00:13:04.850 --> 00:13:06.080
How much smarter?

00:13:06.080 --> 00:13:07.430
10 points smarter.

00:13:07.430 --> 00:13:09.070
That's how much.

00:13:09.070 --> 00:13:10.125
That's a lot.

00:13:10.125 --> 00:13:11.770
How does it work?

00:13:11.770 --> 00:13:13.215
It's got this antenna on top.

00:13:13.215 --> 00:13:17.140
And when smart guys walk by, it
sucks the brain power right

00:13:17.140 --> 00:13:18.360
out of them.

00:13:18.360 --> 00:13:19.060
Best part?

00:13:19.060 --> 00:13:22.810
It stores the smarts inside the
hat, so you don't have to

00:13:22.810 --> 00:13:24.702
hang around smart guys
all the time.

00:13:24.702 --> 00:13:27.640
Because that would be
freaking boring.

00:13:27.640 --> 00:13:28.630
What's the catch?

00:13:28.630 --> 00:13:31.400
You got to shave your head
or it doesn't work.

00:13:31.400 --> 00:13:36.266
But hey, you're going to be
wearing the hat, so who cares?

00:13:36.266 --> 00:13:39.550
Thinking Cap, the only way you
could be dumber is if you

00:13:39.550 --> 00:13:41.420
didn't buy it.

00:13:41.420 --> 00:13:43.460
Now with all 32 NFL logos.

00:13:43.460 --> 00:13:46.330
[END VIDEO PLAYBACK]

00:13:46.330 --> 00:13:49.110
GARY LIPKOWITZ: So one thing
that video illustrates is the

00:13:49.110 --> 00:13:51.810
characters and the props and
text tool all working together

00:13:51.810 --> 00:13:53.360
to tell the story.

00:13:53.360 --> 00:13:54.220
JAREK WILKIEWICZ: One thing
I noticed, there was

00:13:54.220 --> 00:13:55.226
an image of a hand--

00:13:55.226 --> 00:13:55.562
GARY LIPKOWITZ: Yeah.

00:13:55.562 --> 00:13:56.362
JAREK WILKIEWICZ: --at some
point in the video.

00:13:56.362 --> 00:13:58.330
Is that something that
you can introduce?

00:13:58.330 --> 00:14:01.170
Can you take a photo and
mix it in to the video?

00:14:01.170 --> 00:14:02.410
GARY LIPKOWITZ: That's a
built-in transition.

00:14:02.410 --> 00:14:03.950
That's one of our hand wipes.

00:14:03.950 --> 00:14:05.210
JAREK WILKIEWICZ: Oh,
I see, I see.

00:14:05.210 --> 00:14:07.560
GARY LIPKOWITZ: And they're
real popular now in demo

00:14:07.560 --> 00:14:08.970
videos, so we've kind
of built that in.

00:14:08.970 --> 00:14:10.560
JAREK WILKIEWICZ: So it's a meme
now, like the hand wipe.

00:14:10.560 --> 00:14:10.940
GARY LIPKOWITZ: Yeah.

00:14:10.940 --> 00:14:13.050
And as Alvin was saying earlier,
we try to anticipate

00:14:13.050 --> 00:14:14.450
what people want in
their videos.

00:14:14.450 --> 00:14:16.130
And then we go out and add
that to the product.

00:14:16.130 --> 00:14:16.440
JAREK WILKIEWICZ: I see.

00:14:16.440 --> 00:14:17.700
GARY LIPKOWITZ: And that was
something we'd seen in a lot

00:14:17.700 --> 00:14:20.400
of popular demo videos, so we
thought, hey, we need to offer

00:14:20.400 --> 00:14:21.480
this to our users.

00:14:21.480 --> 00:14:22.280
JAREK WILKIEWICZ: I see.

00:14:22.280 --> 00:14:25.660
So I have a question, a
couple of questions.

00:14:25.660 --> 00:14:29.760
Alvin, we mentioned you guys
are out in Hong Kong.

00:14:29.760 --> 00:14:34.240
What prompted you to start
your business there?

00:14:34.240 --> 00:14:38.180
ALVIN HUNG: Oh, I got married
in Hong Kong.

00:14:38.180 --> 00:14:41.595
And between going back to
Silicon Valley and my family

00:14:41.595 --> 00:14:44.090
and my wife here, I thought
it would be easier to be

00:14:44.090 --> 00:14:45.170
based in Hong Kong.

00:14:45.170 --> 00:14:47.230
So therefore, I just
started here.

00:14:47.230 --> 00:14:47.770
JAREK WILKIEWICZ: Oh, wow.

00:14:47.770 --> 00:14:50.930
How's the entrepreneur community
out in Hong Kong?

00:14:50.930 --> 00:14:53.960
Do you find a lot of people
doing video-related work?

00:14:53.960 --> 00:14:56.170
Or are you kind of the
only one out there?

00:14:56.170 --> 00:14:58.660
ALVIN HUNG: There's a good
group of people here, but

00:14:58.660 --> 00:15:01.370
definitely not as vibrant
as Silicon Valley.

00:15:01.370 --> 00:15:04.390
Being able to be based in the
Bay Area definitely has become

00:15:04.390 --> 00:15:08.000
more advantageous than in Hong
Kong in that aspect.

00:15:08.000 --> 00:15:08.400
JAREK WILKIEWICZ: I see.

00:15:08.400 --> 00:15:10.760
Well, you can always join a
Hangout at 1:00 AM in the

00:15:10.760 --> 00:15:11.729
morning, you know?

00:15:11.729 --> 00:15:12.979
ALVIN HUNG: Exactly.

00:15:15.860 --> 00:15:16.625
JAREK WILKIEWICZ: Great.

00:15:16.625 --> 00:15:18.340
Hey, Ben, you've been quiet.

00:15:18.340 --> 00:15:21.530
We wanted to check with you to
see, from an implementation

00:15:21.530 --> 00:15:25.320
standpoint, were there any
challenges that you have

00:15:25.320 --> 00:15:28.430
encountered that you didn't
anticipate while

00:15:28.430 --> 00:15:29.830
building the system?

00:15:29.830 --> 00:15:33.970
And then the question that we
always like to ask also is how

00:15:33.970 --> 00:15:36.400
is the user authentication
and authorization

00:15:36.400 --> 00:15:37.330
handled in the system?

00:15:37.330 --> 00:15:40.120
Because you allow uploads into
users' YouTube accounts.

00:15:40.120 --> 00:15:42.240
So can you tell us a little
bit more about the flow?

00:15:45.730 --> 00:15:49.840
BEN NG: In the YouTube
application for user

00:15:49.840 --> 00:15:55.803
authentication, we make use
of OpenID and OAuth.

00:15:59.110 --> 00:16:03.050
And basically it's
not really hard.

00:16:03.050 --> 00:16:09.870
And we implemented this in
one working day only.

00:16:09.870 --> 00:16:12.125
It's not really difficult.

00:16:17.415 --> 00:16:18.150
Yeah, I'm nervous.

00:16:18.150 --> 00:16:19.760
Sorry.

00:16:19.760 --> 00:16:20.140
JAREK WILKIEWICZ: Don't worry.

00:16:20.140 --> 00:16:22.240
There's only 1,000 people
watching you right now.

00:16:24.740 --> 00:16:30.880
BEN NG: And it's not really
difficult because Google

00:16:30.880 --> 00:16:32.468
provides enough documentation.

00:16:37.080 --> 00:16:37.500
JAREK WILKIEWICZ: Right, yeah.

00:16:37.500 --> 00:16:40.820
We always get compliments about
the user documentation.

00:16:40.820 --> 00:16:44.990
I think we should bring our tech
writer Andy into the room

00:16:44.990 --> 00:16:49.630
one of these days and ask him
questions about his secret

00:16:49.630 --> 00:16:52.140
sauce, just like I was trying
to extract that information

00:16:52.140 --> 00:16:54.760
from Alvin a little earlier.

00:16:54.760 --> 00:16:56.530
So anything that surprised
you while you were

00:16:56.530 --> 00:16:57.810
building the solution?

00:16:57.810 --> 00:17:01.010
We always like to ask people if
there's anything as far as

00:17:01.010 --> 00:17:04.190
the implementation or the user
behavior or stuff that you

00:17:04.190 --> 00:17:06.099
just didn't expect and
it blew your mind.

00:17:09.040 --> 00:17:15.650
BEN NG: At first we always see
some users ask us why they

00:17:15.650 --> 00:17:21.660
cannot upload their videos
because they haven't created a

00:17:21.660 --> 00:17:24.720
channel in YouTube, but
they log in with

00:17:24.720 --> 00:17:26.460
their Google account.

00:17:31.580 --> 00:17:35.360
And we found this out later.

00:17:35.360 --> 00:17:46.970
And it's somehow a bit hidden
when we've tried to implement

00:17:46.970 --> 00:17:51.298
the features at first.

00:17:51.298 --> 00:17:52.000
JAREK WILKIEWICZ: Yeah, yeah.

00:17:52.000 --> 00:17:53.560
That part is a little
tricky, I think.

00:17:53.560 --> 00:17:58.460
For folks who are not familiar
with how the Google account

00:17:58.460 --> 00:18:01.950
support works for YouTube is
we introduced support for

00:18:01.950 --> 00:18:06.410
Google accounts a while back
where if you have a Google

00:18:06.410 --> 00:18:08.870
account but you don't have a
YouTube channel, you can still

00:18:08.870 --> 00:18:09.760
log into YouTube.

00:18:09.760 --> 00:18:13.290
And then there's only a subset
of functionality that we make

00:18:13.290 --> 00:18:14.580
available with the setup.

00:18:14.580 --> 00:18:19.010
There's actually a blog post
up on the API blog at

00:18:19.010 --> 00:18:22.450
youtube.com, and it goes into
some more detail about what

00:18:22.450 --> 00:18:24.080
you can do to remedy
this situation.

00:18:24.080 --> 00:18:27.960
So, in fact, there is an API
that allows you to help a user

00:18:27.960 --> 00:18:28.890
create a channel in that

00:18:28.890 --> 00:18:30.960
situation so they can actually--

00:18:30.960 --> 00:18:32.950
If they don't have a YouTube
channel, they cannot upload

00:18:32.950 --> 00:18:34.140
videos to YouTube.

00:18:34.140 --> 00:18:37.330
But with the API, you can
actually create it on their

00:18:37.330 --> 00:18:40.140
behalf, and then they will
be able to upload it.

00:18:40.140 --> 00:18:42.720
And the situation can actually
be determined by

00:18:42.720 --> 00:18:43.830
using the API as well.

00:18:43.830 --> 00:18:46.850
So we have what's called an
incomplete profile that is

00:18:46.850 --> 00:18:50.940
returned through the API in
a situation like that one.

00:18:50.940 --> 00:18:53.310
Yeah, but that's something
that we've heard before.

00:18:53.310 --> 00:18:55.840
It's good feedback.

00:18:55.840 --> 00:18:56.650
Yeah.

00:18:56.650 --> 00:18:59.390
Anything good that happened?

00:18:59.390 --> 00:19:00.650
BEN NG: Yeah.

00:19:00.650 --> 00:19:06.025
Luckily, recently we did
them at [INAUDIBLE].

00:19:06.025 --> 00:19:08.540
Yeah, it's much better now.

00:19:08.540 --> 00:19:09.540
JAREK WILKIEWICZ: Great.

00:19:09.540 --> 00:19:13.240
So another question, Alvin, you
guys are very much heavy

00:19:13.240 --> 00:19:14.590
into Flash and web.

00:19:14.590 --> 00:19:18.220
And I was just curious to see
what do you think about how

00:19:18.220 --> 00:19:20.050
things are going on the
mobile side of things?

00:19:20.050 --> 00:19:23.380
Do you think people will be
trying to create similar

00:19:23.380 --> 00:19:26.360
animations on their smartphones
or tablets?

00:19:26.360 --> 00:19:29.360
And what are you going
to do about that?

00:19:29.360 --> 00:19:31.140
ALVIN HUNG: We're actively
looking into deploying our

00:19:31.140 --> 00:19:33.860
applications for the
mobile experience.

00:19:33.860 --> 00:19:37.830
But the trick is that the use
cases and the phone factor is

00:19:37.830 --> 00:19:38.610
so different.

00:19:38.610 --> 00:19:42.120
So we cannot just straight
away port our existing

00:19:42.120 --> 00:19:44.430
applications to those devices.

00:19:44.430 --> 00:19:47.740
What we're doing right now
is to rearchitect our

00:19:47.740 --> 00:19:50.170
functionalities and make them in
such a way that it's really

00:19:50.170 --> 00:19:53.170
fitting for the mobile user.

00:19:53.170 --> 00:19:54.745
Mobile is here to stay.

00:19:54.745 --> 00:19:56.000
Mobile is the new phenomenon.

00:19:56.000 --> 00:19:59.040
So, therefore, for sure that's
a platform that we are

00:19:59.040 --> 00:20:01.020
actively developing for.

00:20:01.020 --> 00:20:02.850
And we are thinking about
what are the best

00:20:02.850 --> 00:20:05.020
ways to achieve that.

00:20:05.020 --> 00:20:05.370
JAREK WILKIEWICZ: Great.

00:20:05.370 --> 00:20:09.310
And then are you thinking
about HTML5 as well?

00:20:09.310 --> 00:20:13.710
Because that's another thing
that I wonder about.

00:20:13.710 --> 00:20:16.080
You see a lot of Flash
apps looking actively

00:20:16.080 --> 00:20:17.690
at the HTML5 space.

00:20:17.690 --> 00:20:20.590
Do you think what you have
done, would that even be

00:20:20.590 --> 00:20:23.190
possible from your perspective
with HTML5?

00:20:23.190 --> 00:20:27.070
Or is it still not
quite there yet?

00:20:27.070 --> 00:20:29.500
ALVIN HUNG: HTML5 is not
really ready for us yet

00:20:29.500 --> 00:20:32.435
because Flash actually is a
great tool set that enables

00:20:32.435 --> 00:20:36.210
our artists to create a lot of
assets very efficiently.

00:20:36.210 --> 00:20:40.320
In order to make it work for
HTML5, we have to have that

00:20:40.320 --> 00:20:42.760
tool set be ready for
HTML5 as well.

00:20:42.760 --> 00:20:43.370
JAREK WILKIEWICZ: I see.

00:20:43.370 --> 00:20:45.310
ALVIN HUNG: To overcome that,
what we're doing now is to

00:20:45.310 --> 00:20:49.190
look into porting assets
created using the Flash

00:20:49.190 --> 00:20:51.610
toolkit but have it
be readable and

00:20:51.610 --> 00:20:53.080
renderable by HTML5.

00:20:53.080 --> 00:20:54.630
So we're trying to bridge
that right now.

00:20:54.630 --> 00:20:55.020
JAREK WILKIEWICZ: I see.

00:20:55.020 --> 00:20:55.430
Interesting.

00:20:55.430 --> 00:20:59.510
So it's doesn't seem like it's
the inherent technology issue,

00:20:59.510 --> 00:21:02.660
but rather on the creative side
some of the tools are not

00:21:02.660 --> 00:21:05.550
quite there yet to support
an HTML5 application.

00:21:05.550 --> 00:21:06.070
Interesting.

00:21:06.070 --> 00:21:06.800
ALVIN HUNG: Right, right.

00:21:06.800 --> 00:21:09.770
What we're thinking is that it
may be actually more efficient

00:21:09.770 --> 00:21:17.940
to develop for natively on the
mobile devices, so basically

00:21:17.940 --> 00:21:22.510
using Apple Objective-C directly
to create native

00:21:22.510 --> 00:21:26.260
applications as opposed to using
HTML5 to service those

00:21:26.260 --> 00:21:28.930
apps, which is much
more efficient.

00:21:28.930 --> 00:21:30.510
And they have the tool
set ready for us.

00:21:30.510 --> 00:21:31.000
JAREK WILKIEWICZ: Sure, sure.

00:21:31.000 --> 00:21:33.880
So you've been coding
Objective-C and Java on this

00:21:33.880 --> 00:21:36.270
site instead of Flash lately?

00:21:36.270 --> 00:21:39.650
ALVIN HUNG: We are looking into
doing stuff like that.

00:21:39.650 --> 00:21:41.930
JAREK WILKIEWICZ: How's
the learning curve?

00:21:41.930 --> 00:21:44.364
ALVIN HUNG: My engineers,
ask them.

00:21:44.364 --> 00:21:45.252
They're fine.

00:21:45.252 --> 00:21:47.030
Yeah.

00:21:47.030 --> 00:21:48.950
JAREK WILKIEWICZ: Yeah, they
don't sleep, right?

00:21:48.950 --> 00:21:49.910
It's 1:00 AM, and you
guys are still up.

00:21:49.910 --> 00:21:53.660
So, obviously, you
guys can do it.

00:21:53.660 --> 00:21:54.790
JEREMY WALKER: I had
a couple questions.

00:21:54.790 --> 00:21:57.050
You guys are adding
a couple more

00:21:57.050 --> 00:21:59.800
characters, Japanese influence.

00:21:59.800 --> 00:22:03.190
I'm just curious where you're
getting your ideas on those.

00:22:03.190 --> 00:22:04.100
Are they anime?

00:22:04.100 --> 00:22:06.530
Are they manga?

00:22:06.530 --> 00:22:07.730
GARY LIPKOWITZ: Those two
are largely the same.

00:22:07.730 --> 00:22:13.200
But I think a lot of our team
grew up really interested in

00:22:13.200 --> 00:22:15.650
anime and manga and so have
these images in their head and

00:22:15.650 --> 00:22:17.120
follow the new ones
coming out.

00:22:17.120 --> 00:22:20.350
So I think it was not a big
ask to ask them to create

00:22:20.350 --> 00:22:23.080
anime-looking characters.

00:22:23.080 --> 00:22:26.310
Do you want to see the
anime video maker?

00:22:26.310 --> 00:22:26.570
JEREMY WALKER: Sure.

00:22:26.570 --> 00:22:27.610
GARY LIPKOWITZ: Do you want me
to just quickly show you some

00:22:27.610 --> 00:22:28.070
characters?

00:22:28.070 --> 00:22:29.952
JEREMY WALKER: Yeah, that
would be great.

00:22:29.952 --> 00:22:33.480
Probably just for me, I guess.

00:22:33.480 --> 00:22:34.740
GARY LIPKOWITZ: We have
ninja and regular.

00:22:34.740 --> 00:22:36.500
Let's see.

00:22:36.500 --> 00:22:38.677
Actually, I have to do
this separately.

00:22:42.420 --> 00:22:43.530
While that's loading,
let's see.

00:22:43.530 --> 00:22:44.960
Alvin, did you have anything
else to add on

00:22:44.960 --> 00:22:47.850
the origin of anime?

00:22:47.850 --> 00:22:50.610
ALVIN HUNG: It's probably the
most exciting project that

00:22:50.610 --> 00:22:53.540
I've seen our creators
jumping on.

00:22:53.540 --> 00:22:57.360
Like Gary said, they all
grew up watching anime.

00:22:57.360 --> 00:23:00.590
And so being able to create
these dream characters that

00:23:00.590 --> 00:23:03.900
they want to draw themselves
anyway is a lot of fun.

00:23:03.900 --> 00:23:06.690
So yeah, totally.

00:23:06.690 --> 00:23:09.430
GARY LIPKOWITZ: And it goes
without saying that ninjas are

00:23:09.430 --> 00:23:11.370
really cool.

00:23:11.370 --> 00:23:13.670
Again, just to show the ease of
swapping in a background.

00:23:13.670 --> 00:23:15.610
Or I can show you some of the--
we were talking about

00:23:15.610 --> 00:23:17.020
you can remove individual
items.

00:23:17.020 --> 00:23:18.820
So there I just made
a boulder go away.

00:23:18.820 --> 00:23:20.365
And now I decided I want to
change the whole background.

00:23:23.600 --> 00:23:25.480
And then let's see, if we wanted
some characters to be

00:23:25.480 --> 00:23:28.511
in here, this guy looks
pretty tough.

00:23:28.511 --> 00:23:32.020
But let's make him tiny and have
him stand on the table

00:23:32.020 --> 00:23:34.310
because that's always cool.

00:23:34.310 --> 00:23:43.840
And let's have her be gigantic
and get ready to beat him up.

00:23:43.840 --> 00:23:47.392
Sorry, very bad with
the mouse.

00:23:47.392 --> 00:23:49.460
Again, I don't know that you'd
really scale them like this.

00:23:49.460 --> 00:23:50.550
I just want to show
you how easy it is

00:23:50.550 --> 00:23:51.300
to manipulate things.

00:23:51.300 --> 00:23:54.760
I want this thing to go away.

00:23:54.760 --> 00:23:56.100
I can move the table.

00:23:56.100 --> 00:23:59.790
Now he's levitating in space
because he's a ninja fairy

00:23:59.790 --> 00:24:01.040
from the mountains.

00:24:04.580 --> 00:24:05.865
I'll just keep dragging all
the characters in there.

00:24:05.865 --> 00:24:09.270
I think that's what people
want to see the most.

00:24:09.270 --> 00:24:10.520
This girl's pretty cool.

00:24:15.410 --> 00:24:20.120
And then this is your typical
I'm wearing my black outfit.

00:24:20.120 --> 00:24:22.390
Sorry, you must go away.

00:24:22.390 --> 00:24:24.254
JAREK WILKIEWICZ: We
have to pay now?

00:24:24.254 --> 00:24:26.120
GARY LIPKOWITZ: Yes.

00:24:26.120 --> 00:24:26.880
JEREMY WALKER: Is that
like a gopher?

00:24:26.880 --> 00:24:28.160
GARY LIPKOWITZ: You guys
pick up so fast.

00:24:28.160 --> 00:24:30.100
I love coming here.

00:24:30.100 --> 00:24:33.560
So this is your typical
black-clad ninja who sneaks

00:24:33.560 --> 00:24:36.115
into the camp at night, and
nobody notices him and is

00:24:36.115 --> 00:24:37.870
silent like the wind, and
then can draw his sword

00:24:37.870 --> 00:24:40.040
in 1/100 of a second.

00:24:40.040 --> 00:24:41.140
But I didn't use to
watch this stuff.

00:24:41.140 --> 00:24:43.965
I'm just speculating that
he could do that.

00:24:43.965 --> 00:24:45.425
JAREK WILKIEWICZ: Well, you're
pretty good at improvisation

00:24:45.425 --> 00:24:46.150
if you didn't watch.

00:24:46.150 --> 00:24:47.370
I'll tell you that.

00:24:47.370 --> 00:24:50.030
GARY LIPKOWITZ: Yeah.

00:24:50.030 --> 00:24:51.130
OK.

00:24:51.130 --> 00:24:51.856
Anything else you want to see?

00:24:51.856 --> 00:24:53.300
JAREK WILKIEWICZ: This
is pretty cool.

00:24:53.300 --> 00:24:55.320
Is this already out
there released?

00:24:55.320 --> 00:24:55.675
GARY LIPKOWITZ: Oh, yeah.

00:24:55.675 --> 00:24:56.110
This is live.

00:24:56.110 --> 00:24:58.330
We just accessed it from
YouTube Create.

00:24:58.330 --> 00:24:58.845
JAREK WILKIEWICZ: Oh, great.

00:24:58.845 --> 00:25:01.090
GARY LIPKOWITZ: And there's
the regular anime them.

00:25:01.090 --> 00:25:05.190
And there it is, the
ninja anime.

00:25:05.190 --> 00:25:06.480
JAREK WILKIEWICZ: Great.

00:25:06.480 --> 00:25:10.610
Maybe one closing question
for you, Alvin.

00:25:10.610 --> 00:25:13.170
So we've been playing around
with this, and it seems like a

00:25:13.170 --> 00:25:14.750
great consumer tool.

00:25:14.750 --> 00:25:16.630
You mentioned there is a
business version of it.

00:25:16.630 --> 00:25:19.890
So what do businesses
do with this?

00:25:19.890 --> 00:25:22.045
ALVIN HUNG: Actually, there are
a lot of startups using us

00:25:22.045 --> 00:25:23.295
to create demo videos.

00:25:25.810 --> 00:25:26.960
Sorry, I didn't see
the demo video.

00:25:26.960 --> 00:25:28.430
What was that?

00:25:28.430 --> 00:25:29.486
Thinking Cap?

00:25:29.486 --> 00:25:30.400
GARY LIPKOWITZ: Oh, yeah.

00:25:30.400 --> 00:25:31.250
We showed Thinking Cap.

00:25:31.250 --> 00:25:31.680
ALVIN HUNG: OK.

00:25:31.680 --> 00:25:33.410
So, yeah, Thinking Cap is
actually a great example of

00:25:33.410 --> 00:25:37.060
what a typical demo video would
be like, being able to

00:25:37.060 --> 00:25:40.064
mix animations with dynamic
text and stuff like that.

00:25:40.064 --> 00:25:42.470
There are also a lot of schools
using GoAnimate,

00:25:42.470 --> 00:25:46.232
basically educators engaging
students in the classroom.

00:25:46.232 --> 00:25:47.640
JEREMY WALKER: Great.

00:25:47.640 --> 00:25:49.910
GARY LIPKOWITZ: And we don't
need to show it now because

00:25:49.910 --> 00:25:51.280
it's more than two minutes
long, but if you go to

00:25:51.280 --> 00:25:54.710
goanimate.com/business, there's
a business demo video

00:25:54.710 --> 00:25:57.300
that kind of walks through some
of the use cases that a

00:25:57.300 --> 00:26:00.360
business user would want
to use GoAnimate for.

00:26:00.360 --> 00:26:01.152
JEREMY WALKER: Great.

00:26:01.152 --> 00:26:01.550
JAREK WILKIEWICZ: Cool.

00:26:01.550 --> 00:26:04.620
Well, thank you very much for
joining us this late.

00:26:04.620 --> 00:26:07.560
I guess it's 1:30
AM in Hong Kong.

00:26:07.560 --> 00:26:11.290
Time to hit the bars,
I suppose.

00:26:11.290 --> 00:26:13.850
GARY LIPKOWITZ: The
anime bars.

00:26:13.850 --> 00:26:14.700
JAREK WILKIEWICZ: Anime bars.

00:26:14.700 --> 00:26:16.150
Again, thank you very much.

00:26:16.150 --> 00:26:19.290
And I think we will now
transition over to Jeff.

00:26:19.290 --> 00:26:23.110
Jeff was going to talk about
API quotas and how we can

00:26:23.110 --> 00:26:23.650
avoid them.

00:26:23.650 --> 00:26:26.340
So over to you, Jeff.

00:26:26.340 --> 00:26:28.110
JEFF: Cool.

00:26:28.110 --> 00:26:28.840
Thanks, guys.

00:26:28.840 --> 00:26:32.320
That was really neat watching
all the GoAnimate stuff.

00:26:32.320 --> 00:26:35.510
I want to make sure that
everybody can hear me, OK?

00:26:35.510 --> 00:26:36.510
JAREK WILKIEWICZ: Yeah,
we can hear you fine.

00:26:36.510 --> 00:26:36.850
JEFF: OK.

00:26:36.850 --> 00:26:37.900
And apologies in advance.

00:26:37.900 --> 00:26:39.670
I think my video is probably
going to be a

00:26:39.670 --> 00:26:41.400
little messed up.

00:26:41.400 --> 00:26:43.550
And the frame rate, there's
going to be some new putting

00:26:43.550 --> 00:26:44.090
out from here.

00:26:44.090 --> 00:26:47.370
It isn't super high, so maybe I
can try to pretend like I'm

00:26:47.370 --> 00:26:51.290
always in motion or something,
or get a shot of me talking,

00:26:51.290 --> 00:26:52.740
and that'll be always
on the screen.

00:26:52.740 --> 00:26:56.900
So I'm here talking, even
if you don't see me.

00:26:56.900 --> 00:26:57.530
OK.

00:26:57.530 --> 00:27:04.310
So for those of you who don't
frequent our YouTube API

00:27:04.310 --> 00:27:07.390
developer forums, I post
there quite a bit.

00:27:07.390 --> 00:27:11.550
And one of the questions that
we get very frequently are

00:27:11.550 --> 00:27:16.320
things related to YouTube API
quota system and specifically

00:27:16.320 --> 00:27:19.830
the YouTube data API
quota system.

00:27:19.830 --> 00:27:23.530
I've tried to put together some
resources that I tend to

00:27:23.530 --> 00:27:26.930
just send out to people whenever
questions come up.

00:27:26.930 --> 00:27:29.920
And we have two blog posts in
particular that are kind of

00:27:29.920 --> 00:27:32.430
related to quota and

00:27:32.430 --> 00:27:33.715
specifically quota with uploads.

00:27:33.715 --> 00:27:36.460
And one of them is just a
general quota blog post.

00:27:36.460 --> 00:27:39.340
It's on our YouTube API blog.

00:27:39.340 --> 00:27:42.830
It's entitled "Best Practices
for Avoiding Quota Issues."

00:27:42.830 --> 00:27:46.920
If you happen to be following
along on Google+ and you're

00:27:46.920 --> 00:27:51.170
following the YouTube for
developers Google+ account,

00:27:51.170 --> 00:27:54.430
you can see that I've shared the
links to these blog posts

00:27:54.430 --> 00:27:57.730
there, so you guys can go and
reference them later.

00:27:57.730 --> 00:28:00.570
But there's that one blog post
that just talks about general

00:28:00.570 --> 00:28:02.630
quota issues, and there's
another that talks about best

00:28:02.630 --> 00:28:05.390
practices for soliciting
uploads

00:28:05.390 --> 00:28:07.120
from your site's community.

00:28:07.120 --> 00:28:10.620
And I want to provide a recap
of both of those and some

00:28:10.620 --> 00:28:14.760
general quota best practices for
folks who might not have

00:28:14.760 --> 00:28:17.890
seen those blog posts before.

00:28:17.890 --> 00:28:22.290
So the first thing that you
really need to make sure is

00:28:22.290 --> 00:28:24.810
that you're actually
encountering a quota issue.

00:28:24.810 --> 00:28:28.390
Because there are a few other
types of problems that could

00:28:28.390 --> 00:28:33.440
sometimes come up with using the
YouTube API, things about

00:28:33.440 --> 00:28:34.850
authentication or--

00:28:34.850 --> 00:28:37.840
I don't know- just bad passing
and bad parameters when you're

00:28:37.840 --> 00:28:38.670
making your requests.

00:28:38.670 --> 00:28:41.210
And just because you're getting
an error back from the

00:28:41.210 --> 00:28:44.610
YouTube data API doesn't mean
you're actually running into a

00:28:44.610 --> 00:28:45.670
quota error.

00:28:45.670 --> 00:28:48.740
So there's a very specific way
of determining whether you're

00:28:48.740 --> 00:28:49.900
getting a quota error or not.

00:28:49.900 --> 00:28:54.410
And that's by taking a look at
that HTTP response body that

00:28:54.410 --> 00:28:57.450
you get back from
every request.

00:28:57.450 --> 00:29:02.430
We have a policy of always
sending back an HTTP response.

00:29:02.430 --> 00:29:06.780
We don't just ignore your
requests if you start sending

00:29:06.780 --> 00:29:08.370
us too many requests or
anything like that.

00:29:08.370 --> 00:29:09.910
We'll always let
you know what's

00:29:09.910 --> 00:29:11.620
going on with a response.

00:29:11.620 --> 00:29:15.270
So checking that response body
is always very important.

00:29:15.270 --> 00:29:17.300
If you happen to be using
a client library--

00:29:17.300 --> 00:29:19.850
I know a lot of folks use client
libraries when they're

00:29:19.850 --> 00:29:21.860
developing in C API.

00:29:21.860 --> 00:29:25.480
Usually whenever we return an
error response from the

00:29:25.480 --> 00:29:28.180
YouTube data API, the client
library will automatically

00:29:28.180 --> 00:29:31.640
deserialize that error
response and raise an

00:29:31.640 --> 00:29:35.580
exception on your behalf.

00:29:35.580 --> 00:29:39.420
So basically, the quota errors
might manifest themselves as

00:29:39.420 --> 00:29:42.150
exceptions that your application
may or may not

00:29:42.150 --> 00:29:43.440
already be handling.

00:29:43.440 --> 00:29:46.720
But you could always take a look
at the exception and take

00:29:46.720 --> 00:29:49.170
a look at the details of the
exception and see exactly what

00:29:49.170 --> 00:29:52.160
the underlying cause
of the error is.

00:29:52.160 --> 00:29:55.410
So that's a little specific to
which library you're using.

00:29:55.410 --> 00:29:58.090
I'm just going to talk on the
HTTP protocol level and tell

00:29:58.090 --> 00:30:00.320
you what the response looks
like in that case.

00:30:00.320 --> 00:30:04.290
And hopefully you guys can
mentally translate that to

00:30:04.290 --> 00:30:08.700
what will actually be returned
from a client library.

00:30:08.700 --> 00:30:12.130
So what you will get back on the
HTTP level when there's a

00:30:12.130 --> 00:30:16.450
quota error is an HTTP
403 response.

00:30:16.450 --> 00:30:18.110
403 is the response code.

00:30:18.110 --> 00:30:22.440
And the response body will
include some specific text in

00:30:22.440 --> 00:30:27.040
it saying that the domain of the
error is YT quota and the

00:30:27.040 --> 00:30:29.960
error code is too many
recent calls.

00:30:29.960 --> 00:30:32.970
So that's how you know that
you're getting a quota error.

00:30:32.970 --> 00:30:36.400
If you get any other type of
error back, we're certainly

00:30:36.400 --> 00:30:38.290
happy to help you try
to debug that.

00:30:38.290 --> 00:30:40.850
And you can post about it in the
Google group, and we'll do

00:30:40.850 --> 00:30:41.580
what we can to assist.

00:30:41.580 --> 00:30:44.720
But you're not getting a quota
error unless you see that.

00:30:44.720 --> 00:30:46.796
So that's the first
thing to verify.

00:30:46.796 --> 00:30:47.520
JAREK WILKIEWICZ: Yeah.

00:30:47.520 --> 00:30:50.570
One thing to add is I think we
quite frequently hear from

00:30:50.570 --> 00:30:54.670
developers who tell us that they
are getting quota errors.

00:30:54.670 --> 00:30:59.010
But actually, unless that
element is present in the HTTP

00:30:59.010 --> 00:31:02.800
response to many recent
calls, it is not

00:31:02.800 --> 00:31:04.280
actually a quota error.

00:31:04.280 --> 00:31:06.520
So I wanted just to stress that
this is kind of the first

00:31:06.520 --> 00:31:09.940
thing to check before
you assume you're

00:31:09.940 --> 00:31:12.080
having quota issues.

00:31:12.080 --> 00:31:13.650
JEFF: Absolutely.

00:31:13.650 --> 00:31:17.250
So the other thing that comes
up when people start talking

00:31:17.250 --> 00:31:19.613
about the quota system, and
normally I'll say, hey, you

00:31:19.613 --> 00:31:20.630
know you're running
into quota errors.

00:31:20.630 --> 00:31:21.240
Take a look at this.

00:31:21.240 --> 00:31:22.190
They'll say, OK, great.

00:31:22.190 --> 00:31:25.710
So tell me exactly how many
calls I can make with the API

00:31:25.710 --> 00:31:28.340
before I start getting
back quota errors.

00:31:28.340 --> 00:31:32.520
And I can understand the desire
to have some hard

00:31:32.520 --> 00:31:36.180
limits and to know exactly
what you could do.

00:31:39.350 --> 00:31:43.480
We don't share, really, too
many details about the

00:31:43.480 --> 00:31:46.720
underlying numbers used in the
quota system publicly for a

00:31:46.720 --> 00:31:47.450
couple of reasons.

00:31:47.450 --> 00:31:50.670
And I'm hopefully not going to
end up giving away anything

00:31:50.670 --> 00:31:53.460
today in this GDL also.

00:31:53.460 --> 00:31:53.850
JAREK WILKIEWICZ:
Come on, Jeff.

00:31:53.850 --> 00:31:55.210
No leaks day to day?

00:31:55.210 --> 00:31:56.116
What's wrong with you?

00:31:56.116 --> 00:31:57.110
JEFF: You know what?

00:31:57.110 --> 00:31:59.990
I would prefer not
to, let's say.

00:31:59.990 --> 00:32:02.640
So I don't think I'm going to
be sharing anything too

00:32:02.640 --> 00:32:03.320
scandalous here.

00:32:03.320 --> 00:32:07.130
But just basically, first of
all, we don't want to give out

00:32:07.130 --> 00:32:10.270
specific numbers because
obviously that does open the

00:32:10.270 --> 00:32:13.090
door a little bit more
towards abuse.

00:32:13.090 --> 00:32:16.400
The point is people should not
be sending absolutely as much

00:32:16.400 --> 00:32:18.840
traffic as they can
to the API.

00:32:18.840 --> 00:32:21.090
They should be sending
absolutely as much traffic as

00:32:21.090 --> 00:32:23.240
they legitimately need to.

00:32:23.240 --> 00:32:28.700
So if you do need to post a
whole bunch of new videos,

00:32:28.700 --> 00:32:30.770
upload a whole bunch of new
videos to an account, I'm not

00:32:30.770 --> 00:32:32.010
going to tell you
not to do that.

00:32:32.010 --> 00:32:34.330
But I'm going to tell you
you shouldn't try to

00:32:34.330 --> 00:32:37.620
reverse-engineer the quota
system to figure out the exact

00:32:37.620 --> 00:32:40.710
limit of the number of videos
that you can send before you

00:32:40.710 --> 00:32:41.880
get a quota error.

00:32:41.880 --> 00:32:44.600
You should just try to send
as many as you can.

00:32:44.600 --> 00:32:47.500
And then we'll talk about in
a few minutes the ways you

00:32:47.500 --> 00:32:50.755
should gracefully deal
with quota errors.

00:32:50.755 --> 00:32:52.005
So yes.

00:32:54.810 --> 00:32:57.370
My general advice is you really
shouldn't have to know

00:32:57.370 --> 00:32:58.620
the exact limits.

00:32:58.620 --> 00:33:01.220
You should code defensively
around them and adjust

00:33:01.220 --> 00:33:03.210
gracefully when you do encounter
a quota error.

00:33:03.210 --> 00:33:07.405
But just to give you a little
peek behind the curtain-- and

00:33:07.405 --> 00:33:10.851
I mentioned this in the
blog post a bit, too--

00:33:10.851 --> 00:33:13.540
that we don't just have
a single number

00:33:13.540 --> 00:33:14.540
for the quota system.

00:33:14.540 --> 00:33:17.080
It's not just like you can make
10 calls per minute and

00:33:17.080 --> 00:33:18.380
then you start getting
quota errors.

00:33:18.380 --> 00:33:21.350
The quota system that we're
using right now for the

00:33:21.350 --> 00:33:25.530
Version 1, Version 2 of the data
API is actually really,

00:33:25.530 --> 00:33:30.620
really nuanced and was designed
in order to take into

00:33:30.620 --> 00:33:33.780
account the overall costs
of different operations.

00:33:33.780 --> 00:33:35.200
And we allude to this again.

00:33:35.200 --> 00:33:38.250
In blog posts, we'll learn a bit
about how read operations

00:33:38.250 --> 00:33:40.860
are a little bit cheaper
on our system.

00:33:40.860 --> 00:33:43.920
And you could tend to make a few
more read operations than

00:33:43.920 --> 00:33:47.770
you can write operations or
update operations, and this is

00:33:47.770 --> 00:33:48.290
intentional.

00:33:48.290 --> 00:33:50.880
So there isn't a
single number.

00:33:50.880 --> 00:33:54.640
There might be like, you know,
if you say, I'm trying to get

00:33:54.640 --> 00:33:57.710
videos, and I'm doing a read
operation to get videos.

00:33:57.710 --> 00:34:02.480
Yes, there is a number of those
that you could do per

00:34:02.480 --> 00:34:04.320
minute before you encounter
quota error.

00:34:04.320 --> 00:34:07.200
But assuming you're writing an
application that does a whole

00:34:07.200 --> 00:34:10.560
bunch of different types of API
interactions, where you're

00:34:10.560 --> 00:34:12.280
doing some reads, you're doing
some writes, you're doing a

00:34:12.280 --> 00:34:15.600
bunch of different things,
there's no one magic number.

00:34:15.600 --> 00:34:20.440
So that's kind of the other
misconception or thing that's

00:34:20.440 --> 00:34:22.634
not entirely obvious about
the system that I

00:34:22.634 --> 00:34:25.550
wanted to make clear.

00:34:25.550 --> 00:34:28.540
If you look at the blog post
that I referenced, the "Best

00:34:28.540 --> 00:34:30.920
Practices for Avoiding Quota
Issues" blog post, you'll

00:34:30.920 --> 00:34:35.090
notice that there's one piece of
specific information that I

00:34:35.090 --> 00:34:35.900
really want to highlight.

00:34:35.900 --> 00:34:41.120
And this, in many cases, will
solve quota issues that just

00:34:41.120 --> 00:34:43.000
normal applications
would have.

00:34:43.000 --> 00:34:46.300
And that's that you should
always use a developer key

00:34:46.300 --> 00:34:49.409
when you're making a request
against the API.

00:34:49.409 --> 00:34:53.350
There's certain operations that
require a developer key.

00:34:53.350 --> 00:34:57.110
Specifically anything that does
a write or an update or a

00:34:57.110 --> 00:35:01.180
delete of a resource on YouTube
requires a developer

00:35:01.180 --> 00:35:02.170
key already.

00:35:02.170 --> 00:35:04.910
So if you're making those types
of calls, chances are

00:35:04.910 --> 00:35:06.540
you already are using
a developer key.

00:35:06.540 --> 00:35:12.090
Otherwise, you'd have bigger
problems than quota issues.

00:35:12.090 --> 00:35:13.250
But a lot of people
don't know that.

00:35:13.250 --> 00:35:15.900
For read operations, you could
also include a developer key.

00:35:15.900 --> 00:35:19.660
And while it's optional, the way
the quota system works, we

00:35:19.660 --> 00:35:22.590
actually do reward users for
including a developer key by

00:35:22.590 --> 00:35:27.620
giving them a bit more than
the default quota.

00:35:27.620 --> 00:35:28.670
JAREK WILKIEWICZ:
Yeah, in fact.

00:35:28.670 --> 00:35:32.700
I just wanted to add, just
speaking of our experience,

00:35:32.700 --> 00:35:36.450
quite frequently we hear back
from developers asking for

00:35:36.450 --> 00:35:37.210
help with the quota.

00:35:37.210 --> 00:35:41.660
And we point out the blog post
about quota best practices,

00:35:41.660 --> 00:35:43.970
which states please include
developer key.

00:35:43.970 --> 00:35:45.440
They do that and their
problems go away.

00:35:45.440 --> 00:35:48.860
So I think for those people
that are watching us today

00:35:48.860 --> 00:35:53.520
live or on video, this is
a little bonus for you.

00:35:53.520 --> 00:35:56.250
If you include the developer key
for operations that don't

00:35:56.250 --> 00:35:59.630
actually require it, you will
automatically be granted more

00:35:59.630 --> 00:36:03.310
quota because YouTube loves
developers, and that's pretty

00:36:03.310 --> 00:36:03.960
much how it goes.

00:36:03.960 --> 00:36:05.370
Right, Jeff?

00:36:05.370 --> 00:36:05.960
JEFF: Yeah.

00:36:05.960 --> 00:36:08.930
Yeah, the actual rationale
behind giving a little bit

00:36:08.930 --> 00:36:12.580
more quota to developer key,
it's not completely anonymous

00:36:12.580 --> 00:36:13.810
traffic at that point.

00:36:13.810 --> 00:36:16.830
You do have to register
for a developer key.

00:36:16.830 --> 00:36:19.520
You have to sign in with
your Google account.

00:36:19.520 --> 00:36:21.460
The developer of the application
needs to do this,

00:36:21.460 --> 00:36:22.890
not your users.

00:36:22.890 --> 00:36:26.420
But once you register, at least
we know something about

00:36:26.420 --> 00:36:29.870
you if we happen to detect that
your traffic is really

00:36:29.870 --> 00:36:31.930
causing trouble for us for some
reason, not that that

00:36:31.930 --> 00:36:33.640
would happen.

00:36:33.640 --> 00:36:36.030
We have some way of reaching
out to you.

00:36:36.030 --> 00:36:40.500
So it just assigns a little
bit more, I guess, way of

00:36:40.500 --> 00:36:42.570
tracing things back to you.

00:36:42.570 --> 00:36:46.010
And in return, we'll grant you
some additional quota.

00:36:46.010 --> 00:36:51.020
So that's, as Jarek said, kind
of the easiest way to resolve

00:36:51.020 --> 00:36:54.200
most quota issues that
people run into.

00:36:54.200 --> 00:36:59.740
So the blog post, again, I keep
referring back to has

00:36:59.740 --> 00:37:03.760
some guidelines for what you
should do if you encounter a

00:37:03.760 --> 00:37:04.500
quota issue.

00:37:04.500 --> 00:37:07.055
And on the blog post it actually
says you should take

00:37:07.055 --> 00:37:10.390
about 10 minutes and pause and
don't send anymore traffic

00:37:10.390 --> 00:37:13.680
after receiving a quota issue.

00:37:13.680 --> 00:37:15.800
That's true.

00:37:15.800 --> 00:37:20.570
That's something that will, in
many cases, give enough time

00:37:20.570 --> 00:37:22.070
for our quota system to reset.

00:37:22.070 --> 00:37:25.420
And at that point you should be
able to start sending most

00:37:25.420 --> 00:37:27.650
types of traffic again.

00:37:27.650 --> 00:37:32.060
But it's not necessarily the
most optimal thing if you're

00:37:32.060 --> 00:37:34.600
really trying optimize
for the amount of API

00:37:34.600 --> 00:37:35.412
calls you can make.

00:37:35.412 --> 00:37:37.460
And again, this is because
you're making

00:37:37.460 --> 00:37:38.710
legitimate API calls.

00:37:38.710 --> 00:37:41.300
We really don't want to
encourage people to do

00:37:41.300 --> 00:37:43.430
anything too spammy or
anything like that.

00:37:43.430 --> 00:37:46.430
But we understand that there
are applications out there

00:37:46.430 --> 00:37:50.840
that legitimately need to work
within our quota limits and

00:37:50.840 --> 00:37:53.020
might be bumping up
against them.

00:37:53.020 --> 00:37:56.790
So if you wanted to be a little
bit more flexible than

00:37:56.790 --> 00:37:59.960
just doing a blanket wait 10
minutes, don't send any

00:37:59.960 --> 00:38:02.970
traffic and then start back
up again, you could try an

00:38:02.970 --> 00:38:09.350
incremental backoff, or an
exponential backoff, I guess,

00:38:09.350 --> 00:38:10.290
in this case.

00:38:10.290 --> 00:38:11.570
JAREK WILKIEWICZ: That's
even stronger, Jeff.

00:38:11.570 --> 00:38:13.650
Yeah, let's go exponential,
man.

00:38:13.650 --> 00:38:16.560
JEFF: Let's go a power
series backoff maybe.

00:38:16.560 --> 00:38:17.440
JAREK WILKIEWICZ: All right.

00:38:17.440 --> 00:38:18.570
JEFF: No.

00:38:18.570 --> 00:38:19.500
Let's keep it exponential,
let's say.

00:38:19.500 --> 00:38:20.120
JAREK WILKIEWICZ: All right.

00:38:20.120 --> 00:38:26.170
JEFF: Let's say that in this
case you will pause for a

00:38:26.170 --> 00:38:27.930
certain fixed amount of
time to begin with.

00:38:27.930 --> 00:38:30.270
And if I were to throw out
some numbers here-- and

00:38:30.270 --> 00:38:32.320
there's no exact
right number--

00:38:32.320 --> 00:38:36.800
let's say 30 seconds might be
your initial pause, and you

00:38:36.800 --> 00:38:38.770
could do it 15 seconds as your
initial pause if you

00:38:38.770 --> 00:38:39.930
really wanted to.

00:38:39.930 --> 00:38:42.770
We're not going to really
penalize you for trying to

00:38:42.770 --> 00:38:44.950
send traffic again
too quickly.

00:38:44.950 --> 00:38:47.770
So don't worry that
you're specifying

00:38:47.770 --> 00:38:49.290
something way too low.

00:38:49.290 --> 00:38:51.290
But at the same time, you don't
want to keep hammering

00:38:51.290 --> 00:38:54.370
our servers, because
it's wasting

00:38:54.370 --> 00:38:55.210
bandwidth on your side.

00:38:55.210 --> 00:38:56.680
It's wasting bandwidth
on our side.

00:38:56.680 --> 00:38:59.950
So let's say you wait 30
seconds initially.

00:38:59.950 --> 00:39:02.160
You try sending your
traffic again.

00:39:02.160 --> 00:39:05.270
If you're still getting back the
same type of quota error,

00:39:05.270 --> 00:39:07.850
then you double the amount
of time that you wait.

00:39:07.850 --> 00:39:11.730
You wait a minute in between
that and your next call.

00:39:11.730 --> 00:39:14.270
You try again after a minute,
still get a quota error, you

00:39:14.270 --> 00:39:16.300
can double again, and you
wait two minutes.

00:39:16.300 --> 00:39:19.170
And this just gives you a
really flexible system.

00:39:19.170 --> 00:39:21.650
You usually do want to put an
upper cap on the amount of

00:39:21.650 --> 00:39:22.330
time that you wait.

00:39:22.330 --> 00:39:26.280
You might want say eight minutes
is your upper cap, or

00:39:26.280 --> 00:39:28.200
16 minutes is your upper cap.

00:39:28.200 --> 00:39:30.740
And once you reach that, you
could either just give up

00:39:30.740 --> 00:39:33.120
entirely, or you could, instead
of multiplying by two

00:39:33.120 --> 00:39:37.690
each time, just always wait 16
minutes in between times.

00:39:37.690 --> 00:39:42.770
And this is definitely a very
robust way of dealing with

00:39:42.770 --> 00:39:43.360
quota errors.

00:39:43.360 --> 00:39:46.880
And if you're looking to
maximize the amount of class

00:39:46.880 --> 00:39:50.530
you can make again, this will
probably end up being a lot

00:39:50.530 --> 00:39:52.100
more beneficial than just
waiting 10 minutes.

00:39:52.100 --> 00:39:55.660
So it's a little bit hard to
explain on a blog post.

00:39:55.660 --> 00:39:57.910
We kind of just stuck with the
10 minutes in that blog post

00:39:57.910 --> 00:39:59.276
as the recommendation.

00:39:59.276 --> 00:40:03.430
But a little benefit for folks
who are watching along and

00:40:03.430 --> 00:40:04.170
pick up something new.

00:40:04.170 --> 00:40:05.580
We can't just regurgitate
things from the

00:40:05.580 --> 00:40:06.430
blog all the time.

00:40:06.430 --> 00:40:10.530
We want to provide some new
information to folks.

00:40:10.530 --> 00:40:15.000
So another thing related to
quota that we hear a lot is--

00:40:15.000 --> 00:40:17.380
actually, folks aren't even
really aware of the fact that

00:40:17.380 --> 00:40:18.890
this is related to quota--

00:40:18.890 --> 00:40:22.220
the number of uploads you could
have in a given account.

00:40:22.220 --> 00:40:27.730
So for a long time, the YouTube
API would only allow

00:40:27.730 --> 00:40:30.610
2,000 videos in a
given account.

00:40:30.610 --> 00:40:32.930
And we had this documented, and
if you tried to upload a

00:40:32.930 --> 00:40:36.195
new video using the API, after
the account had its 2,000th

00:40:36.195 --> 00:40:39.910
video, for a while it would
just completely fail.

00:40:39.910 --> 00:40:42.470
Then we relaxed it a little bit
and said I think you could

00:40:42.470 --> 00:40:44.670
upload 50 new videos
in a given day once

00:40:44.670 --> 00:40:46.570
you reach 2,000 videos.

00:40:46.570 --> 00:40:51.170
And all this was before our,
let's say, newer quota system

00:40:51.170 --> 00:40:52.570
rolled out.

00:40:52.570 --> 00:40:56.180
And once we had this more
flexible quota system I'm

00:40:56.180 --> 00:40:59.650
talking about, we just said, OK,
instead of imposing this

00:40:59.650 --> 00:41:04.160
arbitrary cap of 2,000 videos,
at which point we have this

00:41:04.160 --> 00:41:08.100
other arbitrary cap of 50 new
videos per day, let's let the

00:41:08.100 --> 00:41:14.440
quota system handle everything
related to uploads and let the

00:41:14.440 --> 00:41:17.270
quota system protect from
potential abuse.

00:41:17.270 --> 00:41:21.180
We obviously still do not want
people to upload hundreds and

00:41:21.180 --> 00:41:24.720
hundreds of spammy videos
into their accounts

00:41:24.720 --> 00:41:27.750
programmatically, so we do
need some protection.

00:41:27.750 --> 00:41:29.820
But the quota system is flexible
enough to provide

00:41:29.820 --> 00:41:31.190
that protection.

00:41:31.190 --> 00:41:35.850
So if you'll check our online
Frequently Asked Questions and

00:41:35.850 --> 00:41:39.120
everything, we've completely
scrubbed all reference to

00:41:39.120 --> 00:41:40.560
2,000 videos per account.

00:41:40.560 --> 00:41:42.680
And I know we still get
questions about that.

00:41:42.680 --> 00:41:45.620
I think this has kind of entered
into lore where people

00:41:45.620 --> 00:41:48.380
think there's still this
2,000-video limit.

00:41:48.380 --> 00:41:50.540
That's no longer in place.

00:41:50.540 --> 00:41:57.250
And it's the quota system that
impacts who could upload and

00:41:57.250 --> 00:41:59.500
whether an upload will
succeed or not.

00:41:59.500 --> 00:42:02.670
So there's a separate blog post
that I referenced and I

00:42:02.670 --> 00:42:06.120
have the link to on the Google+
page for YouTube for

00:42:06.120 --> 00:42:10.190
developers that talks about
"Best Practices for Soliciting

00:42:10.190 --> 00:42:13.360
Uploads from Your Site's
Community." I call it your

00:42:13.360 --> 00:42:16.100
site, but this could
be a website.

00:42:16.100 --> 00:42:18.912
It might even be an offline
application.

00:42:18.912 --> 00:42:23.980
Just anytime when you're kind
of running an online

00:42:23.980 --> 00:42:26.780
community, and you want to
solicit videos, and you want

00:42:26.780 --> 00:42:30.350
your users to be able to respond
to a question or just

00:42:30.350 --> 00:42:33.680
interact or share things
in some way via video.

00:42:33.680 --> 00:42:35.030
So we certainly want
to encourage that

00:42:35.030 --> 00:42:37.990
use case within YouTube.

00:42:37.990 --> 00:42:41.410
That's obviously a great thing
that we could facilitate.

00:42:41.410 --> 00:42:46.110
But it's a little problematic in
the way that most people by

00:42:46.110 --> 00:42:47.700
default try to go about
doing this.

00:42:47.700 --> 00:42:52.680
And that's by hard coding in the
credentials for one master

00:42:52.680 --> 00:42:55.990
account somewhere and then
telling people, hey, everybody

00:42:55.990 --> 00:42:58.890
can just upload videos
using the API into

00:42:58.890 --> 00:43:02.220
this one master account.

00:43:02.220 --> 00:43:04.230
So there's a couple of reasons
why it's problematic.

00:43:04.230 --> 00:43:07.110
First from the policy
perspective, and this blog

00:43:07.110 --> 00:43:10.450
post goes into that
a little bit.

00:43:10.450 --> 00:43:13.440
And I don't want to actually
get into YouTube terms of

00:43:13.440 --> 00:43:16.580
service and things like that,
but there are penalties in

00:43:16.580 --> 00:43:23.570
place if a YouTube account ends
up posting objectionable

00:43:23.570 --> 00:43:26.840
slash illegal slash
inappropriate material for

00:43:26.840 --> 00:43:28.770
whatever portion of
that there is.

00:43:28.770 --> 00:43:31.580
So if you're kind of opening the
door and letting anybody

00:43:31.580 --> 00:43:36.550
upload any video into your
account, your own community

00:43:36.550 --> 00:43:40.370
might be very--

00:43:40.370 --> 00:43:43.155
nobody's out to get you and
nobody has malicious intent,

00:43:43.155 --> 00:43:46.490
but anybody else who just
discovers this might say, hey,

00:43:46.490 --> 00:43:47.990
wouldn't it be really
funny to upload this

00:43:47.990 --> 00:43:49.520
copyrighted music video?

00:43:49.520 --> 00:43:54.710
Or hey, somebody in your
community might not realize

00:43:54.710 --> 00:43:59.520
that having a music track on
their own video might end up

00:43:59.520 --> 00:44:02.940
having some implications from
the terms of service

00:44:02.940 --> 00:44:04.290
perspective if they upload it.

00:44:04.290 --> 00:44:08.400
So you're really opening
yourself up to some potential

00:44:08.400 --> 00:44:11.480
problems if you did have a setup
in which you allowed

00:44:11.480 --> 00:44:14.960
people to upload into
your own account.

00:44:14.960 --> 00:44:17.510
Furthermore, there are some
quota implications from

00:44:17.510 --> 00:44:20.060
allowing a lot of people
to upload videos

00:44:20.060 --> 00:44:22.230
into your own accounts.

00:44:22.230 --> 00:44:25.260
I don't want to, again, get
into any hard limits or

00:44:25.260 --> 00:44:29.130
anything or say what the quota
system specifically is doing,

00:44:29.130 --> 00:44:31.770
but one of the things that we
do try to protect against in

00:44:31.770 --> 00:44:35.580
the quota system is people
uploading a lot of videos in a

00:44:35.580 --> 00:44:39.010
short period of time into
a single account.

00:44:39.010 --> 00:44:43.070
So that's not really something
that we want

00:44:43.070 --> 00:44:44.650
people to be doing.

00:44:44.650 --> 00:44:47.840
And that is the type of setup
that would happen if you just

00:44:47.840 --> 00:44:50.470
let any person upload videos
into your account.

00:44:50.470 --> 00:44:53.530
Your page gets popular, people
could start uploading into

00:44:53.530 --> 00:44:55.600
your account, and all
a sudden, hey,

00:44:55.600 --> 00:44:57.820
you've got quota issues.

00:44:57.820 --> 00:45:02.380
So the way we recommend working
around that is to

00:45:02.380 --> 00:45:06.410
allow users to first
authenticate and authorize

00:45:06.410 --> 00:45:09.430
access to your application from
your application to their

00:45:09.430 --> 00:45:10.400
own YouTube accounts.

00:45:10.400 --> 00:45:13.545
And obviously, anybody who's
been following along knows

00:45:13.545 --> 00:45:19.810
that what we recommend using
OAuth 2.0 for that now.

00:45:19.810 --> 00:45:24.350
And once you have that Auth
token, you could then allow

00:45:24.350 --> 00:45:27.090
users via the API
to upload videos

00:45:27.090 --> 00:45:28.330
into their own accounts.

00:45:28.330 --> 00:45:31.280
And this works around some of
those policy issues I was

00:45:31.280 --> 00:45:34.210
talking about, and this also is
a lot better from a quota

00:45:34.210 --> 00:45:34.770
perspective.

00:45:34.770 --> 00:45:38.020
You're much less likely to run
into any quota issues.

00:45:38.020 --> 00:45:41.820
So there's always a question of,
hey, I want to collect all

00:45:41.820 --> 00:45:43.440
these videos in one
place, though.

00:45:43.440 --> 00:45:46.670
So if everybody's uploading
videos into their own account,

00:45:46.670 --> 00:45:49.420
how do I handle the
moderation step?

00:45:49.420 --> 00:45:51.990
Or how do I have feature
certain videos?

00:45:51.990 --> 00:45:54.860
And the way to do that,
you could obviously

00:45:54.860 --> 00:45:56.130
roll your own solution.

00:45:56.130 --> 00:45:59.430
And there's no reason why
you can't just use

00:45:59.430 --> 00:46:00.320
the API to do that.

00:46:00.320 --> 00:46:01.550
But we do have some

00:46:01.550 --> 00:46:04.400
prepackaged open source projects.

00:46:04.400 --> 00:46:07.723
And one instance of that is
something called YouTube

00:46:07.723 --> 00:46:09.050
Direct Lite.

00:46:09.050 --> 00:46:13.110
And that's kind of the new
version of YouTube Direct.

00:46:13.110 --> 00:46:14.090
I'm going to plug
it a little bit.

00:46:14.090 --> 00:46:18.940
But this supposed to be a quota
talk, so I don't really

00:46:18.940 --> 00:46:21.420
want to get too much
into plugging my

00:46:21.420 --> 00:46:22.580
own open source projects.

00:46:22.580 --> 00:46:26.520
But basically Direct Lite will
provide an easy way for you to

00:46:26.520 --> 00:46:32.070
embed and upload widget onto
any arbitrary page, allow

00:46:32.070 --> 00:46:34.940
users to authenticate and
to upload into their own

00:46:34.940 --> 00:46:40.580
accounts, and then give the
administrator the ability to

00:46:40.580 --> 00:46:43.720
take a look at all those videos
that have been uploaded

00:46:43.720 --> 00:46:44.970
into each individual account.

00:46:44.970 --> 00:46:48.900
And if they like the video,
after they review the video,

00:46:48.900 --> 00:46:51.370
they could say, hey, I'd like to
add it to a playlist in my

00:46:51.370 --> 00:46:53.320
master account.

00:46:53.320 --> 00:46:55.920
And even if you're not using
YouTube Direct Lite, that's

00:46:55.920 --> 00:46:59.890
really the model that we think
people should follow where you

00:46:59.890 --> 00:47:02.620
use playlists as a way of
curing content that gets

00:47:02.620 --> 00:47:05.360
submitted and featuring
what you like.

00:47:09.250 --> 00:47:11.290
JAREK WILKIEWICZ: I have
one question--

00:47:11.290 --> 00:47:12.060
JEFF: Sure.

00:47:12.060 --> 00:47:12.920
JAREK WILKIEWICZ: --if I may.

00:47:12.920 --> 00:47:17.540
So one of the ways in which
developers are trying to get

00:47:17.540 --> 00:47:21.860
around quotas is by introducing
some level of

00:47:21.860 --> 00:47:23.520
caching into their
applications.

00:47:23.520 --> 00:47:28.090
Anything in that area that
people should watch out for?

00:47:28.090 --> 00:47:30.920
Or any best practices there?

00:47:30.920 --> 00:47:32.400
JEFF: Yeah.

00:47:32.400 --> 00:47:36.660
Caching is usually something
that is all right to do.

00:47:36.660 --> 00:47:41.270
I know that the terms of service
has a few things in

00:47:41.270 --> 00:47:43.850
particular that it says about
best practices for caching.

00:47:43.850 --> 00:47:47.630
And I don't want to answer
anything too legal or terms of

00:47:47.630 --> 00:47:50.140
service-y without
being an expert.

00:47:50.140 --> 00:47:51.640
And I don't want to end up
saying something wrong.

00:47:51.640 --> 00:47:54.220
So consult the terms of service
if you have any

00:47:54.220 --> 00:47:55.400
questions about that.

00:47:55.400 --> 00:48:00.600
But, in general, keeping track
of certain pieces of

00:48:00.600 --> 00:48:06.060
frequently used data and not
having to query the API every

00:48:06.060 --> 00:48:09.920
time you need to make use of
that data, that sounds like a

00:48:09.920 --> 00:48:11.540
reasonable approach.

00:48:11.540 --> 00:48:14.120
I don't know if there's anything
specific, Jarek, that

00:48:14.120 --> 00:48:16.810
you had in mind that you
wanted to cover.

00:48:16.810 --> 00:48:18.570
JAREK WILKIEWICZ: I think,
again, I have the same

00:48:18.570 --> 00:48:20.950
concerns as you around trying
to explain the terms of

00:48:20.950 --> 00:48:23.470
service, which are pretty
well written and quite

00:48:23.470 --> 00:48:24.010
understandable.

00:48:24.010 --> 00:48:28.020
But we're not lawyers, although
you seem pretty stiff

00:48:28.020 --> 00:48:31.985
on this video, Jeff,
right now.

00:48:31.985 --> 00:48:35.670
Yeah, I think the way we phrase
it is that it's fine to

00:48:35.670 --> 00:48:37.350
do caching for session
purposes.

00:48:37.350 --> 00:48:40.570
And really the common sense
explanation of that is we just

00:48:40.570 --> 00:48:43.420
don't want the metadata
to be stale.

00:48:43.420 --> 00:48:47.460
Because then, if your
application uses YouTube, then

00:48:47.460 --> 00:48:50.430
typically you will make
it known to your user.

00:48:50.430 --> 00:48:52.950
And then if somehow the
application, for example,

00:48:52.950 --> 00:48:57.170
includes information about the
video that has been removed

00:48:57.170 --> 00:49:00.020
and the user tries to access it
then gets upset, then we'll

00:49:00.020 --> 00:49:01.670
get some of the blame.

00:49:01.670 --> 00:49:03.360
And conversely, when the
application is great, we get

00:49:03.360 --> 00:49:05.160
some of the credit,
which we love.

00:49:05.160 --> 00:49:08.410
But I think the major concern
there is user experience.

00:49:08.410 --> 00:49:12.650
We don't want stale metadata to
be presented to your users,

00:49:12.650 --> 00:49:17.060
because then it's a deterrent
to the user experience.

00:49:17.060 --> 00:49:19.220
So that's really something
to consider.

00:49:19.220 --> 00:49:22.980
If you do cache, I think the
way we phrase in terms of

00:49:22.980 --> 00:49:26.690
service, we say it's cool to
do it for session purposes.

00:49:26.690 --> 00:49:31.330
But really I think the concept
of a session depends on your

00:49:31.330 --> 00:49:31.960
architecture.

00:49:31.960 --> 00:49:36.950
But in general, really think
about the user experience.

00:49:36.950 --> 00:49:38.530
So metadata can change.

00:49:38.530 --> 00:49:41.030
People can make videos private
so you can no longer access

00:49:41.030 --> 00:49:42.730
them unless you authenticate
it.

00:49:42.730 --> 00:49:46.460
They can change description
and so forth with the API.

00:49:46.460 --> 00:49:47.910
Things can get removed
from playlists.

00:49:47.910 --> 00:49:51.790
So anything that you do that has
a caching component, make

00:49:51.790 --> 00:49:54.740
sure that it does expire within
a reasonable amount of

00:49:54.740 --> 00:49:58.270
time so that the user's
experience is not affected.

00:49:58.270 --> 00:50:00.610
JEFF: Yeah, absolutely.

00:50:00.610 --> 00:50:04.180
There's one other aspect to
quota that I wanted to talk

00:50:04.180 --> 00:50:11.180
about before I lose my voice,
and that just has to do with

00:50:11.180 --> 00:50:13.650
the fact that there are some
other quota systems that are

00:50:13.650 --> 00:50:17.610
in place in addition to the
YouTube data API quota that

00:50:17.610 --> 00:50:20.420
you might end up bumping into,
depending on what you're

00:50:20.420 --> 00:50:22.430
trying to do.

00:50:22.430 --> 00:50:25.430
And I don't necessarily have
too many best practices

00:50:25.430 --> 00:50:28.170
recommendations about this,
because they are quota systems

00:50:28.170 --> 00:50:31.160
that are separate from what we
normally deal with in the

00:50:31.160 --> 00:50:32.150
YouTube data API.

00:50:32.150 --> 00:50:36.530
But just knowing about
them might help.

00:50:36.530 --> 00:50:40.940
So the Google web
infrastructure, I guess the

00:50:40.940 --> 00:50:45.340
YouTube web infrastructure by
extension, does have some kind

00:50:45.340 --> 00:50:48.980
of anti-denials of service
protections built into it.

00:50:48.980 --> 00:50:53.280
And if you are sending a very
large amount of the HTTP

00:50:53.280 --> 00:50:56.600
traffic, whether it's API
requests or any other type of

00:50:56.600 --> 00:51:01.830
HTTP traffic, it is possible
to trigger anti-denial of

00:51:01.830 --> 00:51:07.080
service protections that
are in place there.

00:51:07.080 --> 00:51:09.870
And that again is completely
separate from anything having

00:51:09.870 --> 00:51:12.730
to do with the API, and I can't
really say too much

00:51:12.730 --> 00:51:15.800
about that other than
it does exist.

00:51:15.800 --> 00:51:21.470
And you'll know it because
instead of a normal API

00:51:21.470 --> 00:51:23.990
response, you'll get back.

00:51:23.990 --> 00:51:25.900
HTML, I think that normally
gets returned.

00:51:25.900 --> 00:51:29.580
So it returns a web page telling
you, hey, your traffic

00:51:29.580 --> 00:51:30.982
looks a little suspicious
to us.

00:51:30.982 --> 00:51:33.980
So keep in mind that
that might happen.

00:51:33.980 --> 00:51:37.040
There's also a kind of a
separate, I guess, mini-quota

00:51:37.040 --> 00:51:42.700
system that certain YouTube
operations are protected with.

00:51:42.700 --> 00:51:45.500
And these operations are
protected with the same

00:51:45.500 --> 00:51:49.390
system, whether you're doing
these operations via the API

00:51:49.390 --> 00:51:50.800
or via the website.

00:51:50.800 --> 00:51:55.370
And specifically commenting and
sending messages to other

00:51:55.370 --> 00:51:58.010
YouTube users, there are
limits on the number of

00:51:58.010 --> 00:52:00.040
comments you could post in a
given period of time, and

00:52:00.040 --> 00:52:03.960
there are limits to the number
messages you can send.

00:52:03.960 --> 00:52:09.310
Those limits, like I said, are
not API specific and sometimes

00:52:09.310 --> 00:52:12.530
require being cleared by logging
into the website and

00:52:12.530 --> 00:52:15.600
solving a CAPTCHA and doing
something like that to prove

00:52:15.600 --> 00:52:17.420
that you are a human
and you're not

00:52:17.420 --> 00:52:20.010
just sending out spam.

00:52:20.010 --> 00:52:22.460
So while that kind of does break
you from the normal API

00:52:22.460 --> 00:52:24.190
flow a little bit, and it's a
little unfortunate in that

00:52:24.190 --> 00:52:27.860
regard that you might have to
log into the website to clear

00:52:27.860 --> 00:52:31.270
that quota issue,
it does exist.

00:52:31.270 --> 00:52:32.800
We don't see too
many legitimate

00:52:32.800 --> 00:52:34.290
applications run into it.

00:52:34.290 --> 00:52:36.640
It's obviously in place to
protect against spammy

00:52:36.640 --> 00:52:38.980
applications.

00:52:38.980 --> 00:52:41.953
So I think that's the
big book of quota.

00:52:41.953 --> 00:52:43.140
JAREK WILKIEWICZ: Great.

00:52:43.140 --> 00:52:47.780
One caveat that I wanted to
add is sometimes we get

00:52:47.780 --> 00:52:51.520
inquiries from developers asking
us about CAPTCHA errors

00:52:51.520 --> 00:52:52.790
they are facing.

00:52:52.790 --> 00:52:55.090
And then we look at the logs
that they supply, and it turns

00:52:55.090 --> 00:52:56.970
out that they're actually
scraping the site.

00:52:56.970 --> 00:53:00.760
So that's another thing, is if
you actually scrape the site

00:53:00.760 --> 00:53:04.520
to obtain some information, and
you get the CAPTCHA, and

00:53:04.520 --> 00:53:07.750
this is due to some of the
processes that are shared

00:53:07.750 --> 00:53:10.980
across various pieces of our
infrastructure, the solution

00:53:10.980 --> 00:53:11.550
to that is simple.

00:53:11.550 --> 00:53:14.870
Just use the API, and chances
are you'll be fine, and you

00:53:14.870 --> 00:53:15.600
won't be getting that.

00:53:15.600 --> 00:53:20.600
So that's another little
behavior that sometimes is

00:53:20.600 --> 00:53:23.680
confused for API quotas.

00:53:23.680 --> 00:53:26.680
But you're actually not
using the API yet.

00:53:26.680 --> 00:53:29.860
So the solution there is use
the API, and I think things

00:53:29.860 --> 00:53:31.090
will be better.

00:53:31.090 --> 00:53:32.760
So Jeff, anything else
you wanted to cover?

00:53:32.760 --> 00:53:35.760
Or should we just transition for
Q&amp;A, since we have a few

00:53:35.760 --> 00:53:36.800
more minutes?

00:53:36.800 --> 00:53:37.080
JEFF: Yeah.

00:53:37.080 --> 00:53:39.300
That ended up taking
quite some time.

00:53:39.300 --> 00:53:41.915
And like most topics having to
do with the API, I probably

00:53:41.915 --> 00:53:43.920
could have spent another 30
minutes or an hour talking.

00:53:43.920 --> 00:53:47.010
But I think transitioning to
something new is probably a

00:53:47.010 --> 00:53:47.850
good idea at this point.

00:53:47.850 --> 00:53:48.230
JAREK WILKIEWICZ: Cool.

00:53:48.230 --> 00:53:48.830
Well, thank you.

00:53:48.830 --> 00:53:52.080
So we have a few questions and
just a couple of minutes.

00:53:52.080 --> 00:53:54.910
So we'll just go through
them really quickly.

00:53:54.910 --> 00:53:57.320
The first question
is about tags.

00:53:57.320 --> 00:53:59.640
"YouTube recently made
tags private.

00:53:59.640 --> 00:54:01.810
They're still available
in the API.

00:54:01.810 --> 00:54:02.950
How should we deal with them?

00:54:02.950 --> 00:54:04.110
Remove them as well?

00:54:04.110 --> 00:54:05.930
Are there any changes
coming up?"

00:54:05.930 --> 00:54:09.930
So yeah, for those of you that
haven't been paying attention,

00:54:09.930 --> 00:54:12.600
we did make some changes to
the user experience on the

00:54:12.600 --> 00:54:17.150
website and where the
tags are presented.

00:54:17.150 --> 00:54:21.800
In the API, what we are planning
to do is really

00:54:21.800 --> 00:54:26.030
mirror what the YouTube
functionality provides.

00:54:26.030 --> 00:54:29.290
And we will be requiring
authenticated access.

00:54:29.290 --> 00:54:34.850
So the owner of the video will
be able to modify and see the

00:54:34.850 --> 00:54:41.210
tags, but they will not be
available through the public

00:54:41.210 --> 00:54:43.380
access without authentication.

00:54:43.380 --> 00:54:47.280
So this is something that we
will introduce to basically

00:54:47.280 --> 00:54:50.570
bring the API in line
with what is

00:54:50.570 --> 00:54:53.240
currently done on the website.

00:54:53.240 --> 00:54:56.166
JEFF: And we'll have a blog post
talking more about that.

00:54:56.166 --> 00:54:57.830
JAREK WILKIEWICZ: Great.

00:54:57.830 --> 00:55:00.280
So the second question
is about timeline

00:55:00.280 --> 00:55:03.390
for the v3 API rollout.

00:55:03.390 --> 00:55:07.030
The developer's not sure how
quickly the code base should

00:55:07.030 --> 00:55:11.130
be changed to take advantage
of the new API version.

00:55:11.130 --> 00:55:14.530
Jeff, do you want to
take this one?

00:55:14.530 --> 00:55:18.770
JEFF: Yeah, again, with my
anti-leak policy, I'm not

00:55:18.770 --> 00:55:19.850
going to say that much.

00:55:19.850 --> 00:55:24.140
I know that we were a little
opaque about the system for

00:55:24.140 --> 00:55:27.710
signing up to the API, and
apologies about that.

00:55:27.710 --> 00:55:29.900
We haven't added too many
people to the preview

00:55:29.900 --> 00:55:31.130
release right now.

00:55:31.130 --> 00:55:33.600
Although Jarek, Jeremy, and I
did spend some time over the

00:55:33.600 --> 00:55:37.500
weekend plowing through a little
bit of the backlog.

00:55:37.500 --> 00:55:42.050
But basically at this point, we
do have a decent number of

00:55:42.050 --> 00:55:46.200
folks who have been testing out
the Version 3 of the API.

00:55:46.200 --> 00:55:48.990
We're getting progressively
closer to when we could

00:55:48.990 --> 00:55:52.160
actually roll it out
to everybody.

00:55:52.160 --> 00:55:55.680
I think it's a matter of months
rather than years or

00:55:55.680 --> 00:55:56.780
quarters or anything
like that.

00:55:56.780 --> 00:55:58.300
So it should be fairly soon.

00:55:58.300 --> 00:56:02.760
And again, folks could play
around with the API using the

00:56:02.760 --> 00:56:06.370
web-based API explorer if they
want to just get a preview

00:56:06.370 --> 00:56:10.070
feel for how the API is.

00:56:10.070 --> 00:56:10.530
JAREK WILKIEWICZ: Right.

00:56:10.530 --> 00:56:16.080
And we did have a product
manager speak about the v3

00:56:16.080 --> 00:56:18.330
plans earlier on this show.

00:56:18.330 --> 00:56:21.460
So if you look through
the previous

00:56:21.460 --> 00:56:23.390
sessions, his name is Vladimir.

00:56:23.390 --> 00:56:25.570
Vladimir was actually talking
about that, and I think he

00:56:25.570 --> 00:56:29.120
gave some basic parameters with
respect to the rollout.

00:56:29.120 --> 00:56:32.450
But we definitely are working on
that hard and looking into

00:56:32.450 --> 00:56:33.980
introducing some new
features into that

00:56:33.980 --> 00:56:35.990
API to make it enticing.

00:56:35.990 --> 00:56:38.880
I think very much we appreciate
your feedback for

00:56:38.880 --> 00:56:42.120
those of you that have
been participating

00:56:42.120 --> 00:56:43.290
in the Trusted Tester.

00:56:43.290 --> 00:56:46.265
If you have a really amazing app
and you just can't wait,

00:56:46.265 --> 00:56:49.530
then please let us know, and
we'll try to include you.

00:56:49.530 --> 00:56:52.940
Because we want to make sure
that we do a fair amount of

00:56:52.940 --> 00:56:57.480
testing with partners before
we roll it out.

00:56:57.480 --> 00:56:58.970
It's still going to be in
the experimental phase.

00:56:58.970 --> 00:57:01.510
So for production
apps, use v2.

00:57:01.510 --> 00:57:04.820
But v3 is going to come with
some really cool features.

00:57:04.820 --> 00:57:09.060
Next question is about AdWords
for video, whether the API

00:57:09.060 --> 00:57:10.170
will become available.

00:57:10.170 --> 00:57:12.280
And I'm not sure about that.

00:57:12.280 --> 00:57:14.090
We'll probably have to take
that additional offline

00:57:14.090 --> 00:57:16.700
unless, Jeff, you have some
insider knowledge about

00:57:16.700 --> 00:57:19.610
AdWords for video API?

00:57:19.610 --> 00:57:21.540
JEFF: There's some AdWords folks
standing right outside

00:57:21.540 --> 00:57:22.210
my studio now.

00:57:22.210 --> 00:57:24.590
And they're about to shoot their
Google Developer Lives,

00:57:24.590 --> 00:57:25.970
so I probably could ask them.

00:57:25.970 --> 00:57:29.440
But rather than putting them on
the spot, no, I'm going to

00:57:29.440 --> 00:57:30.232
have to pass.

00:57:30.232 --> 00:57:32.300
And we'll try to follow
up some other time.

00:57:32.300 --> 00:57:32.680
JAREK WILKIEWICZ: OK.

00:57:32.680 --> 00:57:36.010
So the last but not least
question asked by me,

00:57:36.010 --> 00:57:40.160
actually, is whether Google or
YouTube Developer relations

00:57:40.160 --> 00:57:41.140
are hiring.

00:57:41.140 --> 00:57:42.290
Jeremy, what do you think?

00:57:42.290 --> 00:57:43.050
JEREMY WALKER: Yes.

00:57:43.050 --> 00:57:44.230
Yes, we are hiring.

00:57:44.230 --> 00:57:47.260
So you'll want to go to the
Google Developers page.

00:57:47.260 --> 00:57:48.900
I think it's under
the Jobs link.

00:57:48.900 --> 00:57:50.060
JAREK WILKIEWICZ: Yeah.

00:57:50.060 --> 00:57:51.760
JEREMY WALKER: And we're
hiring not only for the

00:57:51.760 --> 00:57:54.970
YouTube team, which we need
somebody, but also across all

00:57:54.970 --> 00:57:55.520
the products.

00:57:55.520 --> 00:57:57.920
So definitely check
that out if you're

00:57:57.920 --> 00:58:01.420
interested and apply.

00:58:01.420 --> 00:58:02.990
We'd love to have you.

00:58:02.990 --> 00:58:03.370
JAREK WILKIEWICZ: Great.

00:58:03.370 --> 00:58:04.600
Well, I think we're
out of time.

00:58:04.600 --> 00:58:06.050
Thank you very much
for watching.

00:58:06.050 --> 00:58:07.270
And we'll see you next week.

00:58:07.270 --> 00:58:10.280
Next week we will actually
broadcast on Tuesday instead

00:58:10.280 --> 00:58:11.250
of Wednesday.

00:58:11.250 --> 00:58:15.180
We have a conflict, so watch the
Google Developers G+ page

00:58:15.180 --> 00:58:17.100
for the schedule.

00:58:17.100 --> 00:58:17.452
JEREMY WALKER: All right.

00:58:17.452 --> 00:58:17.540
Thanks.

00:58:17.540 --> 00:58:18.888
JEFF: Bye, guys.

00:58:18.888 --> 00:58:45.000
[MUSIC PLAYING]

