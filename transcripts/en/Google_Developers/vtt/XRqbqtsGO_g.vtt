WEBVTT
Kind: captions
Language: en

00:00:00.846 --> 00:00:04.090
ANASH P. OOMMEN: Hi, I'm Anash
P. Oommen with the Google

00:00:04.090 --> 00:00:05.590
Developer Relations team.

00:00:05.590 --> 00:00:08.200
This screencast will show you
how to get started with the

00:00:08.200 --> 00:00:11.890
AdWords API .NET
Client Library.

00:00:11.890 --> 00:00:16.370
The library requires Microsoft
.NET runtime version 2.0.

00:00:16.370 --> 00:00:20.850
The library also works on
Mono version 2.4.4.

00:00:20.850 --> 00:00:24.220
The library depends on the
System.Configuration,

00:00:24.220 --> 00:00:29.730
System.XML, System.Web, and
System.Web.Services runtime

00:00:29.730 --> 00:00:30.860
assemblies.

00:00:30.860 --> 00:00:34.850
It doesn't depend on any
third party assemblies.

00:00:34.850 --> 00:00:38.100
The first thing you need to do
is to download the library.

00:00:38.100 --> 00:00:41.770
The best way to find it is
to go to the AdWords API

00:00:41.770 --> 00:00:51.060
documentation at
code.google.com/apis/adwords.

00:00:51.060 --> 00:00:59.160
From here, click on Docs, and
then on Client Libraries.

00:00:59.160 --> 00:01:00.720
And click on .Net
Client Library.

00:01:05.300 --> 00:01:07.550
This is the main project
page of the AdWords

00:01:07.550 --> 00:01:09.520
API .Net client library.

00:01:09.520 --> 00:01:13.700
On the left-bottom side of the
page are links to download the

00:01:13.700 --> 00:01:16.530
latest version of the library.

00:01:16.530 --> 00:01:18.210
Now click the link to
download the latest

00:01:18.210 --> 00:01:20.069
version of the library.

00:01:23.240 --> 00:01:26.400
Once you've downloaded the
library, extract it to the

00:01:26.400 --> 00:01:27.650
folder of your choice.

00:01:34.650 --> 00:01:41.450
The library distribution
contains docs, examples in C#

00:01:41.450 --> 00:01:47.050
and VB for various API versions,
a precompiled

00:01:47.050 --> 00:01:52.070
version of the assembly, and
solution files for various

00:01:52.070 --> 00:01:53.410
versions of Visual Studio.

00:01:55.950 --> 00:01:58.560
Open the AdWords.sln
in Visual Studio.

00:02:08.150 --> 00:02:12.450
The solution consists of one
project each for C# examples,

00:02:12.450 --> 00:02:15.160
VB examples, and OAuth.

00:02:15.160 --> 00:02:19.210
Both C# and VB example project
consist of code examples for

00:02:19.210 --> 00:02:21.570
all the major API versions.

00:02:21.570 --> 00:02:25.350
OAuth code example is designed
as an ASP.NET website that

00:02:25.350 --> 00:02:29.120
retrieves all the campaigns
from a user's account.

00:02:29.120 --> 00:02:32.070
Before you can run the code
examples, you need to fill in

00:02:32.070 --> 00:02:35.890
the AdWords credential in your
application's app.config or a

00:02:35.890 --> 00:02:38.080
website's web.config.

00:02:38.080 --> 00:02:39.630
Let's do it for
AdWords.Examples.CSharp.

00:02:42.770 --> 00:02:44.880
Open the app.config.

00:02:44.880 --> 00:02:46.970
We will run the code
examples against

00:02:46.970 --> 00:02:49.130
the AdWords API Sandbox.

00:02:49.130 --> 00:02:52.130
Details on how to use the
AdWords API Sandbox is

00:02:52.130 --> 00:03:00.900
available at code.google.com/
apis/adwords/docs/sandbox.html

00:03:00.900 --> 00:03:05.180
When using the Sandbox, your
client email is client_n plus

00:03:05.180 --> 00:03:08.320
your email address, where n
can be from one to five.

00:03:08.320 --> 00:03:11.580
Your developer token is your
Google account plus, plus,

00:03:11.580 --> 00:03:12.900
currency code.

00:03:12.900 --> 00:03:14.430
For example,
John.Doe@gmail.com++USD.

00:03:18.630 --> 00:03:21.450
The email and password is your
Google account email

00:03:21.450 --> 00:03:22.700
address/password.

00:03:24.260 --> 00:03:27.560
You also need to change the
AdWords API server URL to

00:03:27.560 --> 00:03:28.810
https://adwords-
sandbox.google.com.

00:03:32.700 --> 00:03:35.760
Note that the client library
uses two different keys for

00:03:35.760 --> 00:03:38.640
configuring the AdWords
API server URLs.

00:03:38.640 --> 00:03:43.890
For V13 API it uses a key named
LegacyAdWordsApi.Server.

00:03:43.890 --> 00:03:46.520
And for other questions of the
API it uses a key named

00:03:46.520 --> 00:03:48.990
AdWordsApi.Server.

00:03:48.990 --> 00:03:52.290
Make sure you set both keys
appropriately when making

00:03:52.290 --> 00:03:54.970
calls to the AdWords
API Sandbox.

00:03:54.970 --> 00:03:57.040
The Sandbox needs to be
initialized by running the Get

00:03:57.040 --> 00:03:59.570
All Campaigns example.

00:03:59.570 --> 00:04:02.820
You can run a code example by
setting the example name as a

00:04:02.820 --> 00:04:05.580
command line argument for the
code examples [? port. ?]

00:04:05.580 --> 00:04:09.990
To run the v201101 version of
Get All Campaigns, you need to

00:04:09.990 --> 00:04:16.300
set v201101.GetAllCampaigns as
the command line argument.

00:04:16.300 --> 00:04:18.649
Now run the code example.

00:04:18.649 --> 00:04:22.010
The code example returns an
empty list. This is to be

00:04:22.010 --> 00:04:25.520
expected, since the Sandbox is
initially empty and you have

00:04:25.520 --> 00:04:27.840
to populate it with campaigns,
ad groups, et

00:04:27.840 --> 00:04:31.610
cetera to use it.

00:04:31.610 --> 00:04:34.230
Let's create a new campaign
by running the Add

00:04:34.230 --> 00:04:36.810
Campaign code example.

00:04:36.810 --> 00:04:42.220
Set the command line argument
to be 201101.AddCampaign and

00:04:42.220 --> 00:04:43.924
run the code example.

00:04:47.860 --> 00:04:50.100
This creates a new campaign
and displays the

00:04:50.100 --> 00:04:52.510
campaign ID and name.

00:04:52.510 --> 00:04:56.120
Now run the Get All
Campaigns again.

00:04:56.120 --> 00:04:59.790
The code example now returns
the campaign you created.

00:04:59.790 --> 00:05:02.700
Let's now build a simple AdWords
application to get a

00:05:02.700 --> 00:05:06.070
better understanding of the
library and its use.

00:05:06.070 --> 00:05:09.140
Our sample application is a
console application that

00:05:09.140 --> 00:05:12.990
retrieves a list of campaigns
for the user and prints the

00:05:12.990 --> 00:05:14.700
list to console.

00:05:14.700 --> 00:05:17.530
Note that, though this video
shows a console project for

00:05:17.530 --> 00:05:21.180
brevity, you can follow similar
steps to build a

00:05:21.180 --> 00:05:26.160
Windows form application
or an ASP.NET website.

00:05:26.160 --> 00:05:28.700
Let's start by creating a
new console application.

00:05:40.260 --> 00:05:43.270
Now copy the left folder from
AdWords API .NET Client

00:05:43.270 --> 00:05:46.390
Library distribution into
your projects folder.

00:05:53.010 --> 00:05:55.610
Then add a reference to

00:05:55.610 --> 00:05:58.650
\Google.adwords.dll in your project.

00:06:02.840 --> 00:06:07.130
Also add reference to a
assemblies System.XML,

00:06:07.130 --> 00:06:10.470
System.Web,
System.Configuration, and

00:06:10.470 --> 00:06:11.720
System.Web.Services.

00:06:25.280 --> 00:06:27.590
Now add an application
configuration

00:06:27.590 --> 00:06:30.190
file to your project.

00:06:30.190 --> 00:06:34.780
Now open
example/csharp/app.config from

00:06:34.780 --> 00:06:38.920
the Adwords API .NET library
distribution and copy its

00:06:38.920 --> 00:06:41.200
contents into your
app.config file.

00:06:44.890 --> 00:06:48.340
In case your app.config already
have other content,

00:06:48.340 --> 00:06:50.460
then mod its content with the
values of app.config.

00:06:53.080 --> 00:06:57.170
Now fill your credentials
in the app.config.

00:06:57.170 --> 00:06:59.612
Let's start developing
our application.

00:06:59.612 --> 00:07:03.170
We will start by defining an
AdWords user object in our

00:07:03.170 --> 00:07:04.420
main method.

00:07:06.960 --> 00:07:10.510
AdWords user is the entry
point of the library and

00:07:10.510 --> 00:07:14.890
allows you to create services
for making AdWords API call.

00:07:14.890 --> 00:07:17.950
The AdWords user [? pro ?]
has two constrictors.

00:07:17.950 --> 00:07:20.870
The first one creates an AdWords
user object with

00:07:20.870 --> 00:07:22.560
credentials mentioned
in your app.config.

00:07:25.760 --> 00:07:28.580
If you want to set credentials
at the runtime instead of

00:07:28.580 --> 00:07:31.760
specifying them in an
app.config, then you can use

00:07:31.760 --> 00:07:36.110
the overloaded AdWords
user constructor.

00:07:36.110 --> 00:07:39.930
You can also modify a user
object after its creation by

00:07:39.930 --> 00:07:42.630
setting appropriate
configuration parameters

00:07:42.630 --> 00:07:46.120
through the user's
config property.

00:07:46.120 --> 00:07:48.400
Let's add the functionality
to retrieve and

00:07:48.400 --> 00:07:50.660
display all the campaigns.

00:07:50.660 --> 00:07:54.110
You'll start by getting
an instance of v200101

00:07:54.110 --> 00:07:56.470
CampaignService using
the Get Service

00:07:56.470 --> 00:07:59.520
method of AdWords user.

00:07:59.520 --> 00:08:03.020
This call creates a
CampaignService object

00:08:03.020 --> 00:08:06.980
configured with the current
settings of the user object.

00:08:06.980 --> 00:08:09.820
You can also modify an existing
service object's

00:08:09.820 --> 00:08:12.540
configuration by modifying its
request [UNINTELLIGIBLE]

00:08:12.540 --> 00:08:13.790
property.

00:08:16.190 --> 00:08:18.470
Now create a selector
and set the

00:08:18.470 --> 00:08:19.950
fields we want to retrieve.

00:08:23.790 --> 00:08:26.450
Now call the CampaignService.get
method to

00:08:26.450 --> 00:08:28.010
get the campaigns.

00:08:28.010 --> 00:08:31.740
You'll get back a campaign page
object, and its entries

00:08:31.740 --> 00:08:34.190
field hold the list
of campaigns.

00:08:34.190 --> 00:08:38.309
You can look through them
and display their cells.

00:08:38.309 --> 00:08:41.520
Now run our application.

00:08:41.520 --> 00:08:44.179
As expected, the application
displays

00:08:44.179 --> 00:08:45.429
the list of all campaigns.

00:08:47.680 --> 00:08:51.070
AdWords API services throw
exceptions whenever something

00:08:51.070 --> 00:08:54.030
goes wrong at its end.

00:08:54.030 --> 00:08:58.620
Let's add some error handling
to our application.

00:08:58.620 --> 00:09:01.730
The two most common exceptions
thrown by an AdWords API

00:09:01.730 --> 00:09:07.240
server are AuthToken exception
and AdWords API exception.

00:09:07.240 --> 00:09:10.630
An AdWords API exception gets
thrown whenever the AdWords

00:09:10.630 --> 00:09:12.830
API server throws an error.

00:09:12.830 --> 00:09:16.500
The API exception field of
AdWords API exception object

00:09:16.500 --> 00:09:19.080
holds the underlying
API exception.

00:09:19.080 --> 00:09:22.340
The API exception object in turn
may contain one or more

00:09:22.340 --> 00:09:25.380
errors which need to be
handled appropriately.

00:09:25.380 --> 00:09:28.090
An AuthToken exception gets
thrown whenever the service

00:09:28.090 --> 00:09:33.410
fails to retrieve an auth token
using decline login API.

00:09:33.410 --> 00:09:36.110
The details of the error can
be found in the ErrorCode

00:09:36.110 --> 00:09:38.230
field of AuthTokenException
object.

00:09:41.040 --> 00:09:44.346
Let's trigger these exceptions
to check our code.

00:09:44.346 --> 00:09:47.160
To trigger an AuthToken
exception, let's set a bad

00:09:47.160 --> 00:09:49.640
user password.

00:09:49.640 --> 00:09:50.890
Now run the application.

00:09:55.400 --> 00:09:58.350
As expected, our application
handles the AuthToken token

00:09:58.350 --> 00:10:02.330
exception thrown by the server
and prints an error message.

00:10:02.330 --> 00:10:06.470
Now let's trigger an AdWords API
exception by setting a bad

00:10:06.470 --> 00:10:08.000
client email login.

00:10:08.000 --> 00:10:09.850
Now run the application.

00:10:09.850 --> 00:10:13.560
As expected, our application
handles the AdWords API

00:10:13.560 --> 00:10:16.730
exception thrown by the server
and displays an appropriate

00:10:16.730 --> 00:10:18.260
error message.

00:10:18.260 --> 00:10:21.280
This concludes the getting
started video for the AdWords

00:10:21.280 --> 00:10:23.630
API .NET Client Library.

00:10:23.630 --> 00:10:27.300
If you have more questions, feel
free to ask them on our

00:10:27.300 --> 00:10:28.620
forum at groups.google.co
m/group/adwords-api.

