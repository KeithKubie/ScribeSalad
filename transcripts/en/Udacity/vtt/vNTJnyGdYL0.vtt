WEBVTT
Kind: captions
Language: en

00:00:00.220 --> 00:00:03.480
So in the lazy model, as we saw

00:00:03.480 --> 00:00:06.830
in the picture, there were less communication events. Which

00:00:06.830 --> 00:00:09.860
means you have less messages that are flowing

00:00:09.860 --> 00:00:13.210
through the network, in order to carry out the

00:00:13.210 --> 00:00:17.060
coherence actions, compared to the eager model. But

00:00:17.060 --> 00:00:19.000
there is a downside to the lazy model as

00:00:19.000 --> 00:00:20.970
well. And that is, at the point of

00:00:20.970 --> 00:00:26.590
acquisition, you don't have all the coherence actions complete.

00:00:26.590 --> 00:00:31.800
And therefore you may have to incur more latency at the point of acquire to

00:00:31.800 --> 00:00:33.950
wait for all the coherence actions to get

00:00:33.950 --> 00:00:37.340
complete. So that's the cons one might think

00:00:37.340 --> 00:00:40.019
about for the lazy model compared to the

00:00:40.019 --> 00:00:42.890
eager model. Procrastination helps in releasing the number

00:00:42.890 --> 00:00:45.990
of messages. But it could result in more

00:00:45.990 --> 00:00:48.325
latency at the point of acquiring the lock.

