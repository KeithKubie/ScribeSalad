WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:06.519
[Music]

00:00:06.519 --> 00:00:06.529
[Music]
 

00:00:06.529 --> 00:00:09.950
[Music]
hello everyone welcome to the deep dive

00:00:09.950 --> 00:00:09.960
hello everyone welcome to the deep dive
 

00:00:09.960 --> 00:00:12.650
hello everyone welcome to the deep dive
into Android studio profilers session I

00:00:12.650 --> 00:00:12.660
into Android studio profilers session I
 

00:00:12.660 --> 00:00:15.530
into Android studio profilers session I
am David Herman I'm Mission Control we

00:00:15.530 --> 00:00:15.540
am David Herman I'm Mission Control we
 

00:00:15.540 --> 00:00:17.630
am David Herman I'm Mission Control we
are engineers from the profiler team in

00:00:17.630 --> 00:00:17.640
are engineers from the profiler team in
 

00:00:17.640 --> 00:00:20.570
are engineers from the profiler team in
Android studio so before we really got

00:00:20.570 --> 00:00:20.580
Android studio so before we really got
 

00:00:20.580 --> 00:00:22.189
Android studio so before we really got
into it we wanted to give you all an

00:00:22.189 --> 00:00:22.199
into it we wanted to give you all an
 

00:00:22.199 --> 00:00:24.040
into it we wanted to give you all an
outline of what to expect in this talk

00:00:24.040 --> 00:00:24.050
outline of what to expect in this talk
 

00:00:24.050 --> 00:00:26.240
outline of what to expect in this talk
instead of sort of coming from a high

00:00:26.240 --> 00:00:26.250
instead of sort of coming from a high
 

00:00:26.250 --> 00:00:28.759
instead of sort of coming from a high
overview instead we're gonna more

00:00:28.759 --> 00:00:28.769
overview instead we're gonna more
 

00:00:28.769 --> 00:00:30.919
overview instead we're gonna more
narrowly focus on a few features that we

00:00:30.919 --> 00:00:30.929
narrowly focus on a few features that we
 

00:00:30.929 --> 00:00:32.569
narrowly focus on a few features that we
think can help you get a better handle

00:00:32.569 --> 00:00:32.579
think can help you get a better handle
 

00:00:32.579 --> 00:00:35.420
think can help you get a better handle
on any codebase we're also gonna drop

00:00:35.420 --> 00:00:35.430
on any codebase we're also gonna drop
 

00:00:35.430 --> 00:00:38.540
on any codebase we're also gonna drop
some tips and tricks along the way we're

00:00:38.540 --> 00:00:38.550
some tips and tricks along the way we're
 

00:00:38.550 --> 00:00:41.750
some tips and tricks along the way we're
going to be profiling a real app Santa

00:00:41.750 --> 00:00:41.760
going to be profiling a real app Santa
 

00:00:41.760 --> 00:00:44.569
going to be profiling a real app Santa
tracker Santa tracker is an app by

00:00:44.569 --> 00:00:44.579
tracker Santa tracker is an app by
 

00:00:44.579 --> 00:00:47.860
tracker Santa tracker is an app by
Google which allows users to track Santa

00:00:47.860 --> 00:00:47.870
Google which allows users to track Santa
 

00:00:47.870 --> 00:00:50.990
Google which allows users to track Santa
as on his course around the world on

00:00:50.990 --> 00:00:51.000
as on his course around the world on
 

00:00:51.000 --> 00:00:53.290
as on his course around the world on
Christmas Eve the app also contains

00:00:53.290 --> 00:00:53.300
Christmas Eve the app also contains
 

00:00:53.300 --> 00:00:58.029
Christmas Eve the app also contains
games and a couple of other extras we're

00:00:58.029 --> 00:00:58.039
games and a couple of other extras we're
 

00:00:58.039 --> 00:01:00.830
games and a couple of other extras we're
the they released a new app every year

00:01:00.830 --> 00:01:00.840
the they released a new app every year
 

00:01:00.840 --> 00:01:02.660
the they released a new app every year
we're gonna be using the one that is

00:01:02.660 --> 00:01:02.670
we're gonna be using the one that is
 

00:01:02.670 --> 00:01:05.990
we're gonna be using the one that is
publicly available on github finally I

00:01:05.990 --> 00:01:06.000
publicly available on github finally I
 

00:01:06.000 --> 00:01:08.120
publicly available on github finally I
want to mention two talks about

00:01:08.120 --> 00:01:08.130
want to mention two talks about
 

00:01:08.130 --> 00:01:09.469
want to mention two talks about
profilers that were previously given

00:01:09.469 --> 00:01:09.479
profilers that were previously given
 

00:01:09.479 --> 00:01:12.140
profilers that were previously given
this year one at Google i/o which did

00:01:12.140 --> 00:01:12.150
this year one at Google i/o which did
 

00:01:12.150 --> 00:01:13.760
this year one at Google i/o which did
talk sort of profilers at a higher level

00:01:13.760 --> 00:01:13.770
talk sort of profilers at a higher level
 

00:01:13.770 --> 00:01:16.100
talk sort of profilers at a higher level
also introducing what was new in Android

00:01:16.100 --> 00:01:16.110
also introducing what was new in Android
 

00:01:16.110 --> 00:01:19.100
also introducing what was new in Android
studio 3.2 for profilers and another one

00:01:19.100 --> 00:01:19.110
studio 3.2 for profilers and another one
 

00:01:19.110 --> 00:01:21.289
studio 3.2 for profilers and another one
at the Android game dove dev summit

00:01:21.289 --> 00:01:21.299
at the Android game dove dev summit
 

00:01:21.299 --> 00:01:24.350
at the Android game dove dev summit
about profiling your games that talk

00:01:24.350 --> 00:01:24.360
about profiling your games that talk
 

00:01:24.360 --> 00:01:25.990
about profiling your games that talk
focuses a little bit more on performance

00:01:25.990 --> 00:01:26.000
focuses a little bit more on performance
 

00:01:26.000 --> 00:01:29.450
focuses a little bit more on performance
native code related tools things like

00:01:29.450 --> 00:01:29.460
native code related tools things like
 

00:01:29.460 --> 00:01:34.580
native code related tools things like
that you can find those videos on

00:01:34.580 --> 00:01:34.590
that you can find those videos on
 

00:01:34.590 --> 00:01:36.740
that you can find those videos on
YouTube if you're watching this online

00:01:36.740 --> 00:01:36.750
YouTube if you're watching this online
 

00:01:36.750 --> 00:01:38.390
YouTube if you're watching this online
we've also included links to those

00:01:38.390 --> 00:01:38.400
we've also included links to those
 

00:01:38.400 --> 00:01:41.539
we've also included links to those
videos in the video description below if

00:01:41.539 --> 00:01:41.549
videos in the video description below if
 

00:01:41.549 --> 00:01:44.569
videos in the video description below if
this is your first time coming of

00:01:44.569 --> 00:01:44.579
this is your first time coming of
 

00:01:44.579 --> 00:01:45.889
this is your first time coming of
learning about profilers you're just

00:01:45.889 --> 00:01:45.899
learning about profilers you're just
 

00:01:45.899 --> 00:01:48.920
learning about profilers you're just
curious here's a very quick overview the

00:01:48.920 --> 00:01:48.930
curious here's a very quick overview the
 

00:01:48.930 --> 00:01:52.700
curious here's a very quick overview the
studio profilers feature is divided into

00:01:52.700 --> 00:01:52.710
studio profilers feature is divided into
 

00:01:52.710 --> 00:01:55.460
studio profilers feature is divided into
four main profilers one for CPU

00:01:55.460 --> 00:01:55.470
four main profilers one for CPU
 

00:01:55.470 --> 00:01:58.280
four main profilers one for CPU
one from memory one for network and one

00:01:58.280 --> 00:01:58.290
one from memory one for network and one
 

00:01:58.290 --> 00:02:00.679
one from memory one for network and one
for battery there's also an event

00:02:00.679 --> 00:02:00.689
for battery there's also an event
 

00:02:00.689 --> 00:02:03.109
for battery there's also an event
profiler that's on the top of that's

00:02:03.109 --> 00:02:03.119
profiler that's on the top of that's
 

00:02:03.119 --> 00:02:04.550
profiler that's on the top of that's
always on the top which lets you see

00:02:04.550 --> 00:02:04.560
always on the top which lets you see
 

00:02:04.560 --> 00:02:07.930
always on the top which lets you see
things like user events such as taps

00:02:07.930 --> 00:02:07.940
things like user events such as taps
 

00:02:07.940 --> 00:02:10.580
things like user events such as taps
keyboard events screen rotations and

00:02:10.580 --> 00:02:10.590
keyboard events screen rotations and
 

00:02:10.590 --> 00:02:12.860
keyboard events screen rotations and
life cycle events so when your fragments

00:02:12.860 --> 00:02:12.870
life cycle events so when your fragments
 

00:02:12.870 --> 00:02:13.400
life cycle events so when your fragments
and activity

00:02:13.400 --> 00:02:13.410
and activity
 

00:02:13.410 --> 00:02:16.610
and activity
is start and stop anyway that's enough

00:02:16.610 --> 00:02:16.620
is start and stop anyway that's enough
 

00:02:16.620 --> 00:02:20.740
is start and stop anyway that's enough
talking let's jump into the demo okay

00:02:20.740 --> 00:02:20.750
talking let's jump into the demo okay
 

00:02:20.750 --> 00:02:24.650
talking let's jump into the demo okay
let's start the demo so first with one

00:02:24.650 --> 00:02:24.660
let's start the demo so first with one
 

00:02:24.660 --> 00:02:27.680
let's start the demo so first with one
click of this button I can launch the

00:02:27.680 --> 00:02:27.690
click of this button I can launch the
 

00:02:27.690 --> 00:02:31.790
click of this button I can launch the
app and start profilers so today we are

00:02:31.790 --> 00:02:31.800
app and start profilers so today we are
 

00:02:31.800 --> 00:02:36.200
app and start profilers so today we are
using ng Studios 3.4 canarios 3 because

00:02:36.200 --> 00:02:36.210
using ng Studios 3.4 canarios 3 because
 

00:02:36.210 --> 00:02:40.190
using ng Studios 3.4 canarios 3 because
that's the latest of what we have since

00:02:40.190 --> 00:02:40.200
that's the latest of what we have since
 

00:02:40.200 --> 00:02:42.680
that's the latest of what we have since
they this is a canario release is not a

00:02:42.680 --> 00:02:42.690
they this is a canario release is not a
 

00:02:42.690 --> 00:02:44.930
they this is a canario release is not a
stable release yet so there might be

00:02:44.930 --> 00:02:44.940
stable release yet so there might be
 

00:02:44.940 --> 00:02:47.900
stable release yet so there might be
some bugs please bare with us if

00:02:47.900 --> 00:02:47.910
some bugs please bare with us if
 

00:02:47.910 --> 00:02:51.950
some bugs please bare with us if
anything interesting happens today the

00:02:51.950 --> 00:02:51.960
anything interesting happens today the
 

00:02:51.960 --> 00:02:53.900
anything interesting happens today the
app we are using today the Santa tracker

00:02:53.900 --> 00:02:53.910
app we are using today the Santa tracker
 

00:02:53.910 --> 00:02:58.310
app we are using today the Santa tracker
contains only chava apps Java code so

00:02:58.310 --> 00:02:58.320
contains only chava apps Java code so
 

00:02:58.320 --> 00:03:00.290
contains only chava apps Java code so
the Java apps will be the focus of

00:03:00.290 --> 00:03:00.300
the Java apps will be the focus of
 

00:03:00.300 --> 00:03:05.240
the Java apps will be the focus of
today's talk so as you can see in the

00:03:05.240 --> 00:03:05.250
today's talk so as you can see in the
 

00:03:05.250 --> 00:03:08.480
today's talk so as you can see in the
profiler we have four profilers CPU

00:03:08.480 --> 00:03:08.490
profiler we have four profilers CPU
 

00:03:08.490 --> 00:03:11.150
profiler we have four profilers CPU
memory Network and energy you can click

00:03:11.150 --> 00:03:11.160
memory Network and energy you can click
 

00:03:11.160 --> 00:03:14.930
memory Network and energy you can click
on any of them and to get more detailed

00:03:14.930 --> 00:03:14.940
on any of them and to get more detailed
 

00:03:14.940 --> 00:03:17.660
on any of them and to get more detailed
data from that profiler let's jump to

00:03:17.660 --> 00:03:17.670
data from that profiler let's jump to
 

00:03:17.670 --> 00:03:22.660
data from that profiler let's jump to
the CPU profiler so here as you can see

00:03:22.660 --> 00:03:22.670
the CPU profiler so here as you can see
 

00:03:22.670 --> 00:03:25.850
the CPU profiler so here as you can see
in the CPU profiler you can see the CPU

00:03:25.850 --> 00:03:25.860
in the CPU profiler you can see the CPU
 

00:03:25.860 --> 00:03:29.030
in the CPU profiler you can see the CPU
utilization and the thread state they

00:03:29.030 --> 00:03:29.040
utilization and the thread state they
 

00:03:29.040 --> 00:03:32.150
utilization and the thread state they
will be useful if you to tell you when

00:03:32.150 --> 00:03:32.160
will be useful if you to tell you when
 

00:03:32.160 --> 00:03:36.350
will be useful if you to tell you when
your app becomes CPU pundit and if you

00:03:36.350 --> 00:03:36.360
your app becomes CPU pundit and if you
 

00:03:36.360 --> 00:03:40.010
your app becomes CPU pundit and if you
are examining two related threads one

00:03:40.010 --> 00:03:40.020
are examining two related threads one
 

00:03:40.020 --> 00:03:42.410
are examining two related threads one
trick is here you can reorder the

00:03:42.410 --> 00:03:42.420
trick is here you can reorder the
 

00:03:42.420 --> 00:03:49.449
trick is here you can reorder the
threads any way you want to no further

00:03:49.449 --> 00:03:49.459
threads any way you want to no further
 

00:03:49.459 --> 00:03:52.760
threads any way you want to no further
data information about which part of

00:03:52.760 --> 00:03:52.770
data information about which part of
 

00:03:52.770 --> 00:03:55.640
data information about which part of
your code is executing or how they are

00:03:55.640 --> 00:03:55.650
your code is executing or how they are
 

00:03:55.650 --> 00:03:59.920
your code is executing or how they are
executing you need CPU recordings and

00:03:59.920 --> 00:03:59.930
executing you need CPU recordings and
 

00:03:59.930 --> 00:04:03.470
executing you need CPU recordings and
let me get a little bit more space so as

00:04:03.470 --> 00:04:03.480
let me get a little bit more space so as
 

00:04:03.480 --> 00:04:06.710
let me get a little bit more space so as
you can see here there are four types of

00:04:06.710 --> 00:04:06.720
you can see here there are four types of
 

00:04:06.720 --> 00:04:09.620
you can see here there are four types of
CPU recordings so let's go to the first

00:04:09.620 --> 00:04:09.630
CPU recordings so let's go to the first
 

00:04:09.630 --> 00:04:13.130
CPU recordings so let's go to the first
one it's somehow Java methods let's get

00:04:13.130 --> 00:04:13.140
one it's somehow Java methods let's get
 

00:04:13.140 --> 00:04:18.050
one it's somehow Java methods let's get
a quick recording of this one so in

00:04:18.050 --> 00:04:18.060
a quick recording of this one so in
 

00:04:18.060 --> 00:04:21.080
a quick recording of this one so in
during this type of CPU recording the

00:04:21.080 --> 00:04:21.090
during this type of CPU recording the
 

00:04:21.090 --> 00:04:23.020
during this type of CPU recording the
java virtual machine

00:04:23.020 --> 00:04:23.030
java virtual machine
 

00:04:23.030 --> 00:04:26.210
java virtual machine
it's periodically will collect the cost

00:04:26.210 --> 00:04:26.220
it's periodically will collect the cost
 

00:04:26.220 --> 00:04:27.020
it's periodically will collect the cost
acts

00:04:27.020 --> 00:04:27.030
acts
 

00:04:27.030 --> 00:04:29.720
acts
of all the other Java threads in your

00:04:29.720 --> 00:04:29.730
of all the other Java threads in your
 

00:04:29.730 --> 00:04:33.320
of all the other Java threads in your
process and then it will present the

00:04:33.320 --> 00:04:33.330
process and then it will present the
 

00:04:33.330 --> 00:04:37.670
process and then it will present the
stacks in the in this part which we

00:04:37.670 --> 00:04:37.680
stacks in the in this part which we
 

00:04:37.680 --> 00:04:39.830
stacks in the in this part which we
called it's a recording details of the

00:04:39.830 --> 00:04:39.840
called it's a recording details of the
 

00:04:39.840 --> 00:04:43.580
called it's a recording details of the
recording and after the recording is

00:04:43.580 --> 00:04:43.590
recording and after the recording is
 

00:04:43.590 --> 00:04:45.200
recording and after the recording is
done the entire recording is

00:04:45.200 --> 00:04:45.210
done the entire recording is
 

00:04:45.210 --> 00:04:49.340
done the entire recording is
automatically selected and if you want

00:04:49.340 --> 00:04:49.350
automatically selected and if you want
 

00:04:49.350 --> 00:04:51.320
automatically selected and if you want
to take a closer look there is a button

00:04:51.320 --> 00:04:51.330
to take a closer look there is a button
 

00:04:51.330 --> 00:04:56.360
to take a closer look there is a button
called zoom to selection so if I click

00:04:56.360 --> 00:04:56.370
called zoom to selection so if I click
 

00:04:56.370 --> 00:05:00.350
called zoom to selection so if I click
it it will fill the entire screen and if

00:05:00.350 --> 00:05:00.360
it it will fill the entire screen and if
 

00:05:00.360 --> 00:05:02.810
it it will fill the entire screen and if
you want to just see a sub range of this

00:05:02.810 --> 00:05:02.820
you want to just see a sub range of this
 

00:05:02.820 --> 00:05:04.880
you want to just see a sub range of this
recording you can select using your

00:05:04.880 --> 00:05:04.890
recording you can select using your
 

00:05:04.890 --> 00:05:07.810
recording you can select using your
mouse if you want to select the entire

00:05:07.810 --> 00:05:07.820
mouse if you want to select the entire
 

00:05:07.820 --> 00:05:10.790
mouse if you want to select the entire
recording again you can click this small

00:05:10.790 --> 00:05:10.800
recording again you can click this small
 

00:05:10.800 --> 00:05:14.870
recording again you can click this small
clock icon here and at some some times

00:05:14.870 --> 00:05:14.880
clock icon here and at some some times
 

00:05:14.880 --> 00:05:16.310
clock icon here and at some some times
you only want to see a very specific

00:05:16.310 --> 00:05:16.320
you only want to see a very specific
 

00:05:16.320 --> 00:05:19.580
you only want to see a very specific
point then in that case you can do a

00:05:19.580 --> 00:05:19.590
point then in that case you can do a
 

00:05:19.590 --> 00:05:22.070
point then in that case you can do a
single click in this area and if you're

00:05:22.070 --> 00:05:22.080
single click in this area and if you're
 

00:05:22.080 --> 00:05:25.420
single click in this area and if you're
automatically select something here now

00:05:25.420 --> 00:05:25.430
automatically select something here now
 

00:05:25.430 --> 00:05:28.940
automatically select something here now
let's take a look of the call stacks

00:05:28.940 --> 00:05:28.950
let's take a look of the call stacks
 

00:05:28.950 --> 00:05:34.580
let's take a look of the call stacks
here and let's select this range that

00:05:34.580 --> 00:05:34.590
here and let's select this range that
 

00:05:34.590 --> 00:05:37.010
here and let's select this range that
might be more interesting so as you can

00:05:37.010 --> 00:05:37.020
might be more interesting so as you can
 

00:05:37.020 --> 00:05:42.830
might be more interesting so as you can
see the profiler will color the cause

00:05:42.830 --> 00:05:42.840
see the profiler will color the cause
 

00:05:42.840 --> 00:05:45.710
see the profiler will color the cause
from the NGO flat phone in orange the

00:05:45.710 --> 00:05:45.720
from the NGO flat phone in orange the
 

00:05:45.720 --> 00:05:48.020
from the NGO flat phone in orange the
method from the Java language in blue

00:05:48.020 --> 00:05:48.030
method from the Java language in blue
 

00:05:48.030 --> 00:05:51.590
method from the Java language in blue
and it will also color any of your code

00:05:51.590 --> 00:05:51.600
and it will also color any of your code
 

00:05:51.600 --> 00:05:53.750
and it will also color any of your code
and library called to green so if you

00:05:53.750 --> 00:05:53.760
and library called to green so if you
 

00:05:53.760 --> 00:05:57.110
and library called to green so if you
want to know what language what method

00:05:57.110 --> 00:05:57.120
want to know what language what method
 

00:05:57.120 --> 00:05:59.420
want to know what language what method
from your code is running you will be

00:05:59.420 --> 00:05:59.430
from your code is running you will be
 

00:05:59.430 --> 00:06:02.000
from your code is running you will be
looking for the green stuff so here we

00:06:02.000 --> 00:06:02.010
looking for the green stuff so here we
 

00:06:02.010 --> 00:06:04.790
looking for the green stuff so here we
see some green stuff here and here if

00:06:04.790 --> 00:06:04.800
see some green stuff here and here if
 

00:06:04.800 --> 00:06:08.150
see some green stuff here and here if
you can see this is Uncle method from

00:06:08.150 --> 00:06:08.160
you can see this is Uncle method from
 

00:06:08.160 --> 00:06:12.490
you can see this is Uncle method from
the village view class and if it's not

00:06:12.490 --> 00:06:12.500
the village view class and if it's not
 

00:06:12.500 --> 00:06:15.590
the village view class and if it's not
if you see the code base you can easily

00:06:15.590 --> 00:06:15.600
if you see the code base you can easily
 

00:06:15.600 --> 00:06:18.320
if you see the code base you can easily
see the visit issue is responsible to

00:06:18.320 --> 00:06:18.330
see the visit issue is responsible to
 

00:06:18.330 --> 00:06:21.909
see the visit issue is responsible to
draw the clouds that is on this screen

00:06:21.909 --> 00:06:21.919
draw the clouds that is on this screen
 

00:06:21.919 --> 00:06:27.230
draw the clouds that is on this screen
so as well another thing I want you to

00:06:27.230 --> 00:06:27.240
so as well another thing I want you to
 

00:06:27.240 --> 00:06:29.840
so as well another thing I want you to
talk about about the sampling is you can

00:06:29.840 --> 00:06:29.850
talk about about the sampling is you can
 

00:06:29.850 --> 00:06:31.670
talk about about the sampling is you can
do some customization about this

00:06:31.670 --> 00:06:31.680
do some customization about this
 

00:06:31.680 --> 00:06:34.120
do some customization about this
recording type so you click this edit

00:06:34.120 --> 00:06:34.130
recording type so you click this edit
 

00:06:34.130 --> 00:06:38.270
recording type so you click this edit
configuration entry and you can click

00:06:38.270 --> 00:06:38.280
configuration entry and you can click
 

00:06:38.280 --> 00:06:40.130
configuration entry and you can click
this plus sign you are able to create

00:06:40.130 --> 00:06:40.140
this plus sign you are able to create
 

00:06:40.140 --> 00:06:40.950
this plus sign you are able to create
our

00:06:40.950 --> 00:06:40.960
our
 

00:06:40.960 --> 00:06:44.340
our
my CPU configuration for this sample

00:06:44.340 --> 00:06:44.350
my CPU configuration for this sample
 

00:06:44.350 --> 00:06:46.439
my CPU configuration for this sample
java method recording type you can

00:06:46.439 --> 00:06:46.449
java method recording type you can
 

00:06:46.449 --> 00:06:50.189
java method recording type you can
change the sampling intervals so as most

00:06:50.189 --> 00:06:50.199
change the sampling intervals so as most
 

00:06:50.199 --> 00:06:53.189
change the sampling intervals so as most
sampling technique techniques go the

00:06:53.189 --> 00:06:53.199
sampling technique techniques go the
 

00:06:53.199 --> 00:06:55.350
sampling technique techniques go the
more frequently you collect some house

00:06:55.350 --> 00:06:55.360
more frequently you collect some house
 

00:06:55.360 --> 00:06:57.600
more frequently you collect some house
the more likely the data will be

00:06:57.600 --> 00:06:57.610
the more likely the data will be
 

00:06:57.610 --> 00:07:00.120
the more likely the data will be
representative however that will incur

00:07:00.120 --> 00:07:00.130
representative however that will incur
 

00:07:00.130 --> 00:07:03.210
representative however that will incur
more overhead so sometimes depending on

00:07:03.210 --> 00:07:03.220
more overhead so sometimes depending on
 

00:07:03.220 --> 00:07:05.969
more overhead so sometimes depending on
your use case you may want to try have

00:07:05.969 --> 00:07:05.979
your use case you may want to try have
 

00:07:05.979 --> 00:07:08.129
your use case you may want to try have
several tries before you find the sweet

00:07:08.129 --> 00:07:08.139
several tries before you find the sweet
 

00:07:08.139 --> 00:07:13.110
several tries before you find the sweet
spot so as we have seen that the sample

00:07:13.110 --> 00:07:13.120
spot so as we have seen that the sample
 

00:07:13.120 --> 00:07:15.629
spot so as we have seen that the sample
java method is very useful to get a

00:07:15.629 --> 00:07:15.639
java method is very useful to get a
 

00:07:15.639 --> 00:07:19.230
java method is very useful to get a
high-level picture of which part of the

00:07:19.230 --> 00:07:19.240
high-level picture of which part of the
 

00:07:19.240 --> 00:07:22.920
high-level picture of which part of the
code is running in some other scenarios

00:07:22.920 --> 00:07:22.930
code is running in some other scenarios
 

00:07:22.930 --> 00:07:26.150
code is running in some other scenarios
if you want to focus on a smaller area

00:07:26.150 --> 00:07:26.160
if you want to focus on a smaller area
 

00:07:26.160 --> 00:07:29.700
if you want to focus on a smaller area
another the second type of the recording

00:07:29.700 --> 00:07:29.710
another the second type of the recording
 

00:07:29.710 --> 00:07:31.860
another the second type of the recording
trace java method will be more

00:07:31.860 --> 00:07:31.870
trace java method will be more
 

00:07:31.870 --> 00:07:37.020
trace java method will be more
interesting so let me collect another

00:07:37.020 --> 00:07:37.030
interesting so let me collect another
 

00:07:37.030 --> 00:07:42.089
interesting so let me collect another
face so in this type of cpu recording

00:07:42.089 --> 00:07:42.099
face so in this type of cpu recording
 

00:07:42.099 --> 00:07:44.120
face so in this type of cpu recording
the channel virtual machine is

00:07:44.120 --> 00:07:44.130
the channel virtual machine is
 

00:07:44.130 --> 00:07:47.339
the channel virtual machine is
collecting the data every time when the

00:07:47.339 --> 00:07:47.349
collecting the data every time when the
 

00:07:47.349 --> 00:07:50.610
collecting the data every time when the
execution enters a method or exits a

00:07:50.610 --> 00:07:50.620
execution enters a method or exits a
 

00:07:50.620 --> 00:07:53.580
execution enters a method or exits a
method so therefore there is a lot of

00:07:53.580 --> 00:07:53.590
method so therefore there is a lot of
 

00:07:53.590 --> 00:08:00.420
method so therefore there is a lot of
more data being collected and so for

00:08:00.420 --> 00:08:00.430
more data being collected and so for
 

00:08:00.430 --> 00:08:03.570
more data being collected and so for
example if I really want to understand

00:08:03.570 --> 00:08:03.580
example if I really want to understand
 

00:08:03.580 --> 00:08:07.680
example if I really want to understand
exactly what methods from my code or

00:08:07.680 --> 00:08:07.690
exactly what methods from my code or
 

00:08:07.690 --> 00:08:10.439
exactly what methods from my code or
running you I will look for the green

00:08:10.439 --> 00:08:10.449
running you I will look for the green
 

00:08:10.449 --> 00:08:13.050
running you I will look for the green
stuff here and you can see it's more

00:08:13.050 --> 00:08:13.060
stuff here and you can see it's more
 

00:08:13.060 --> 00:08:16.499
stuff here and you can see it's more
there are a lot of things and you may

00:08:16.499 --> 00:08:16.509
there are a lot of things and you may
 

00:08:16.509 --> 00:08:18.450
there are a lot of things and you may
want to zoom in so you can use the

00:08:18.450 --> 00:08:18.460
want to zoom in so you can use the
 

00:08:18.460 --> 00:08:21.510
want to zoom in so you can use the
tableau ast keys to zoom in so the top

00:08:21.510 --> 00:08:21.520
tableau ast keys to zoom in so the top
 

00:08:21.520 --> 00:08:24.510
tableau ast keys to zoom in so the top
layer will be the zoom in as you can see

00:08:24.510 --> 00:08:24.520
layer will be the zoom in as you can see
 

00:08:24.520 --> 00:08:27.060
layer will be the zoom in as you can see
the key I'm pressing the S will be zoom

00:08:27.060 --> 00:08:27.070
the key I'm pressing the S will be zoom
 

00:08:27.070 --> 00:08:30.330
the key I'm pressing the S will be zoom
out the T will be moving to the right a

00:08:30.330 --> 00:08:30.340
out the T will be moving to the right a
 

00:08:30.340 --> 00:08:32.360
out the T will be moving to the right a
will be moving to the left

00:08:32.360 --> 00:08:32.370
will be moving to the left
 

00:08:32.370 --> 00:08:34.829
will be moving to the left
so if your came here you probably

00:08:34.829 --> 00:08:34.839
so if your came here you probably
 

00:08:34.839 --> 00:08:38.490
so if your came here you probably
already know this if you do mean let's

00:08:38.490 --> 00:08:38.500
already know this if you do mean let's
 

00:08:38.500 --> 00:08:40.500
already know this if you do mean let's
keep you mean to see what are these

00:08:40.500 --> 00:08:40.510
keep you mean to see what are these
 

00:08:40.510 --> 00:08:47.699
keep you mean to see what are these
green stuff so here using this a big one

00:08:47.699 --> 00:08:47.709
green stuff so here using this a big one
 

00:08:47.709 --> 00:08:50.130
green stuff so here using this a big one
is the one we just saw before

00:08:50.130 --> 00:08:50.140
is the one we just saw before
 

00:08:50.140 --> 00:08:52.199
is the one we just saw before
it's the uncle method from the village

00:08:52.199 --> 00:08:52.209
it's the uncle method from the village
 

00:08:52.209 --> 00:08:54.240
it's the uncle method from the village
view they are responsible for

00:08:54.240 --> 00:08:54.250
view they are responsible for
 

00:08:54.250 --> 00:08:57.660
view they are responsible for
join the clouds are here this is the

00:08:57.660 --> 00:08:57.670
join the clouds are here this is the
 

00:08:57.670 --> 00:09:00.030
join the clouds are here this is the
ultra method from the snowflake view

00:09:00.030 --> 00:09:00.040
ultra method from the snowflake view
 

00:09:00.040 --> 00:09:02.490
ultra method from the snowflake view
class they are responsible to draw all

00:09:02.490 --> 00:09:02.500
class they are responsible to draw all
 

00:09:02.500 --> 00:09:04.290
class they are responsible to draw all
these snowflakes that are floating

00:09:04.290 --> 00:09:04.300
these snowflakes that are floating
 

00:09:04.300 --> 00:09:07.470
these snowflakes that are floating
around and if you look at closely there

00:09:07.470 --> 00:09:07.480
around and if you look at closely there
 

00:09:07.480 --> 00:09:12.660
around and if you look at closely there
are some many very tiny green lines here

00:09:12.660 --> 00:09:12.670
are some many very tiny green lines here
 

00:09:12.670 --> 00:09:14.640
are some many very tiny green lines here
so you can further sue me

00:09:14.640 --> 00:09:14.650
so you can further sue me
 

00:09:14.650 --> 00:09:19.860
so you can further sue me
you can further you mean you can see so

00:09:19.860 --> 00:09:19.870
you can further you mean you can see so
 

00:09:19.870 --> 00:09:22.800
you can further you mean you can see so
you can see this is the uncle method

00:09:22.800 --> 00:09:22.810
you can see this is the uncle method
 

00:09:22.810 --> 00:09:25.260
you can see this is the uncle method
from the snowflake class this is also

00:09:25.260 --> 00:09:25.270
from the snowflake class this is also
 

00:09:25.270 --> 00:09:27.750
from the snowflake class this is also
from the snowflake class this is also

00:09:27.750 --> 00:09:27.760
from the snowflake class this is also
 

00:09:27.760 --> 00:09:32.550
from the snowflake class this is also
from Snape from free class so let's so

00:09:32.550 --> 00:09:32.560
from Snape from free class so let's so
 

00:09:32.560 --> 00:09:35.790
from Snape from free class so let's so
you may want to see what is that is a

00:09:35.790 --> 00:09:35.800
you may want to see what is that is a
 

00:09:35.800 --> 00:09:38.460
you may want to see what is that is a
disc Rosco so you right click here and

00:09:38.460 --> 00:09:38.470
disc Rosco so you right click here and
 

00:09:38.470 --> 00:09:41.040
disc Rosco so you right click here and
you can have a menu to jump to the

00:09:41.040 --> 00:09:41.050
you can have a menu to jump to the
 

00:09:41.050 --> 00:09:44.670
you can have a menu to jump to the
source code so we you can see here in

00:09:44.670 --> 00:09:44.680
source code so we you can see here in
 

00:09:44.680 --> 00:09:47.880
source code so we you can see here in
this snowflake last snowflake class in

00:09:47.880 --> 00:09:47.890
this snowflake last snowflake class in
 

00:09:47.890 --> 00:09:50.550
this snowflake last snowflake class in
this ondraw method we are doing some

00:09:50.550 --> 00:09:50.560
this ondraw method we are doing some
 

00:09:50.560 --> 00:09:53.760
this ondraw method we are doing some
calculation about the velocity about the

00:09:53.760 --> 00:09:53.770
calculation about the velocity about the
 

00:09:53.770 --> 00:09:56.850
calculation about the velocity about the
angle about the size then we draw circle

00:09:56.850 --> 00:09:56.860
angle about the size then we draw circle
 

00:09:56.860 --> 00:09:59.910
angle about the size then we draw circle
then is clear that's every snowflake on

00:09:59.910 --> 00:09:59.920
then is clear that's every snowflake on
 

00:09:59.920 --> 00:10:03.150
then is clear that's every snowflake on
this screen will execute this method

00:10:03.150 --> 00:10:03.160
this screen will execute this method
 

00:10:03.160 --> 00:10:08.400
this screen will execute this method
that's why we are seeing so many calls

00:10:08.400 --> 00:10:08.410
that's why we are seeing so many calls
 

00:10:08.410 --> 00:10:14.790
that's why we are seeing so many calls
into this method so as you can see trace

00:10:14.790 --> 00:10:14.800
into this method so as you can see trace
 

00:10:14.800 --> 00:10:17.970
into this method so as you can see trace
Java method is very useful to verify

00:10:17.970 --> 00:10:17.980
Java method is very useful to verify
 

00:10:17.980 --> 00:10:20.550
Java method is very useful to verify
whether or not a method has been

00:10:20.550 --> 00:10:20.560
whether or not a method has been
 

00:10:20.560 --> 00:10:23.670
whether or not a method has been
executed it's also useful to verify how

00:10:23.670 --> 00:10:23.680
executed it's also useful to verify how
 

00:10:23.680 --> 00:10:30.060
executed it's also useful to verify how
often that method is executing another

00:10:30.060 --> 00:10:30.070
often that method is executing another
 

00:10:30.070 --> 00:10:32.850
often that method is executing another
thing I want to talk about here is about

00:10:32.850 --> 00:10:32.860
thing I want to talk about here is about
 

00:10:32.860 --> 00:10:37.140
thing I want to talk about here is about
the four tabs here so the first one is

00:10:37.140 --> 00:10:37.150
the four tabs here so the first one is
 

00:10:37.150 --> 00:10:38.550
the four tabs here so the first one is
the call church

00:10:38.550 --> 00:10:38.560
the call church
 

00:10:38.560 --> 00:10:41.180
the call church
so the coach at as we said is

00:10:41.180 --> 00:10:41.190
so the coach at as we said is
 

00:10:41.190 --> 00:10:45.120
so the coach at as we said is
representing all the contacts during the

00:10:45.120 --> 00:10:45.130
representing all the contacts during the
 

00:10:45.130 --> 00:10:48.900
representing all the contacts during the
CPU recording so it's so the things to

00:10:48.900 --> 00:10:48.910
CPU recording so it's so the things to
 

00:10:48.910 --> 00:10:51.990
CPU recording so it's so the things to
the left will let's select the entire

00:10:51.990 --> 00:10:52.000
the left will let's select the entire
 

00:10:52.000 --> 00:10:53.460
the left will let's select the entire
range you can see it so the scenes

00:10:53.460 --> 00:10:53.470
range you can see it so the scenes
 

00:10:53.470 --> 00:10:56.220
range you can see it so the scenes
contacts shows up the left where happens

00:10:56.220 --> 00:10:56.230
contacts shows up the left where happens
 

00:10:56.230 --> 00:10:59.070
contacts shows up the left where happens
first in this recording so the things to

00:10:59.070 --> 00:10:59.080
first in this recording so the things to
 

00:10:59.080 --> 00:11:00.720
first in this recording so the things to
the right will happen later in this

00:11:00.720 --> 00:11:00.730
the right will happen later in this
 

00:11:00.730 --> 00:11:04.440
the right will happen later in this
recording in the flame chart it's

00:11:04.440 --> 00:11:04.450
recording in the flame chart it's
 

00:11:04.450 --> 00:11:06.690
recording in the flame chart it's
similar to the cost cost at but it's

00:11:06.690 --> 00:11:06.700
similar to the cost cost at but it's
 

00:11:06.700 --> 00:11:08.019
similar to the cost cost at but it's
upside down so the

00:11:08.019 --> 00:11:08.029
upside down so the
 

00:11:08.029 --> 00:11:11.710
upside down so the
is at the bottom and also identifying

00:11:11.710 --> 00:11:11.720
is at the bottom and also identifying
 

00:11:11.720 --> 00:11:14.979
is at the bottom and also identifying
call stacks are aggregated here so it's

00:11:14.979 --> 00:11:14.989
call stacks are aggregated here so it's
 

00:11:14.989 --> 00:11:18.969
call stacks are aggregated here so it's
very easy to see the total time a method

00:11:18.969 --> 00:11:18.979
very easy to see the total time a method
 

00:11:18.979 --> 00:11:20.399
very easy to see the total time a method
has been executed

00:11:20.399 --> 00:11:20.409
has been executed
 

00:11:20.409 --> 00:11:26.169
has been executed
the total is Archie it has exactly the

00:11:26.169 --> 00:11:26.179
the total is Archie it has exactly the
 

00:11:26.179 --> 00:11:28.479
the total is Archie it has exactly the
same data as the frame chart it's just

00:11:28.479 --> 00:11:28.489
same data as the frame chart it's just
 

00:11:28.489 --> 00:11:31.119
same data as the frame chart it's just
represented it in a view a different

00:11:31.119 --> 00:11:31.129
represented it in a view a different
 

00:11:31.129 --> 00:11:33.639
represented it in a view a different
view so what's nice about this view is

00:11:33.639 --> 00:11:33.649
view so what's nice about this view is
 

00:11:33.649 --> 00:11:36.879
view so what's nice about this view is
you can sort these methods by the time

00:11:36.879 --> 00:11:36.889
you can sort these methods by the time
 

00:11:36.889 --> 00:11:39.429
you can sort these methods by the time
so the sale time is the time executing

00:11:39.429 --> 00:11:39.439
so the sale time is the time executing
 

00:11:39.439 --> 00:11:42.249
so the sale time is the time executing
by this method itself the children is

00:11:42.249 --> 00:11:42.259
by this method itself the children is
 

00:11:42.259 --> 00:11:44.379
by this method itself the children is
the time executed by the subroutines

00:11:44.379 --> 00:11:44.389
the time executed by the subroutines
 

00:11:44.389 --> 00:11:47.409
the time executed by the subroutines
caught by this method and the total

00:11:47.409 --> 00:11:47.419
caught by this method and the total
 

00:11:47.419 --> 00:11:49.779
caught by this method and the total
column is the time it's a combination of

00:11:49.779 --> 00:11:49.789
column is the time it's a combination of
 

00:11:49.789 --> 00:11:51.210
column is the time it's a combination of
the two

00:11:51.210 --> 00:11:51.220
the two
 

00:11:51.220 --> 00:11:55.719
the two
bottom-up is looking at the cost tag

00:11:55.719 --> 00:11:55.729
bottom-up is looking at the cost tag
 

00:11:55.729 --> 00:11:59.199
bottom-up is looking at the cost tag
upwards to the color basic from the

00:11:59.199 --> 00:11:59.209
upwards to the color basic from the
 

00:11:59.209 --> 00:12:02.739
upwards to the color basic from the
method to the to another function to

00:12:02.739 --> 00:12:02.749
method to the to another function to
 

00:12:02.749 --> 00:12:07.299
method to the to another function to
that cottage so here it's very useful if

00:12:07.299 --> 00:12:07.309
that cottage so here it's very useful if
 

00:12:07.309 --> 00:12:09.729
that cottage so here it's very useful if
you expand it you can it's very useful

00:12:09.729 --> 00:12:09.739
you expand it you can it's very useful
 

00:12:09.739 --> 00:12:14.979
you expand it you can it's very useful
to see where this a method is caught and

00:12:14.979 --> 00:12:14.989
to see where this a method is caught and
 

00:12:14.989 --> 00:12:17.679
to see where this a method is caught and
how much time this message has executed

00:12:17.679 --> 00:12:17.689
how much time this message has executed
 

00:12:17.689 --> 00:12:22.079
how much time this message has executed
when it is caught by that specific color

00:12:22.079 --> 00:12:22.089
when it is caught by that specific color
 

00:12:22.089 --> 00:12:26.229
when it is caught by that specific color
and there is a third type of CPU

00:12:26.229 --> 00:12:26.239
and there is a third type of CPU
 

00:12:26.239 --> 00:12:29.819
and there is a third type of CPU
recording that is somehow native

00:12:29.819 --> 00:12:29.829
recording that is somehow native
 

00:12:29.829 --> 00:12:34.779
recording that is somehow native
functions C or C++ functions and let's

00:12:34.779 --> 00:12:34.789
functions C or C++ functions and let's
 

00:12:34.789 --> 00:12:38.559
functions C or C++ functions and let's
do also another short race here and if

00:12:38.559 --> 00:12:38.569
do also another short race here and if
 

00:12:38.569 --> 00:12:41.949
do also another short race here and if
you remember I just said this app Santa

00:12:41.949 --> 00:12:41.959
you remember I just said this app Santa
 

00:12:41.959 --> 00:12:42.339
you remember I just said this app Santa
tracker

00:12:42.339 --> 00:12:42.349
tracker
 

00:12:42.349 --> 00:12:46.389
tracker
contains Java only code so therefore the

00:12:46.389 --> 00:12:46.399
contains Java only code so therefore the
 

00:12:46.399 --> 00:12:49.210
contains Java only code so therefore the
contacts it's to mean the constants

00:12:49.210 --> 00:12:49.220
contacts it's to mean the constants
 

00:12:49.220 --> 00:12:51.729
contacts it's to mean the constants
corrected by this type of recording

00:12:51.729 --> 00:12:51.739
corrected by this type of recording
 

00:12:51.739 --> 00:12:53.649
corrected by this type of recording
isn't over it's not very interesting

00:12:53.649 --> 00:12:53.659
isn't over it's not very interesting
 

00:12:53.659 --> 00:12:57.460
isn't over it's not very interesting
they're mostly the system cause some

00:12:57.460 --> 00:12:57.470
they're mostly the system cause some
 

00:12:57.470 --> 00:12:59.169
they're mostly the system cause some
some of them is the android framework

00:12:59.169 --> 00:12:59.179
some of them is the android framework
 

00:12:59.179 --> 00:13:03.159
some of them is the android framework
native code so however if your app has

00:13:03.159 --> 00:13:03.169
native code so however if your app has
 

00:13:03.169 --> 00:13:06.759
native code so however if your app has
any native components this type of

00:13:06.759 --> 00:13:06.769
any native components this type of
 

00:13:06.769 --> 00:13:10.089
any native components this type of
recording will be very handy there is

00:13:10.089 --> 00:13:10.099
recording will be very handy there is
 

00:13:10.099 --> 00:13:12.249
recording will be very handy there is
another type of CP recording called

00:13:12.249 --> 00:13:12.259
another type of CP recording called
 

00:13:12.259 --> 00:13:14.889
another type of CP recording called
trade system talk host but before I go

00:13:14.889 --> 00:13:14.899
trade system talk host but before I go
 

00:13:14.899 --> 00:13:17.109
trade system talk host but before I go
into the details of that I will hand

00:13:17.109 --> 00:13:17.119
into the details of that I will hand
 

00:13:17.119 --> 00:13:21.300
into the details of that I will hand
back the demo back to Dave

00:13:21.300 --> 00:13:21.310
 

00:13:21.310 --> 00:13:24.910
excellent so CPU recordings are very

00:13:24.910 --> 00:13:24.920
excellent so CPU recordings are very
 

00:13:24.920 --> 00:13:26.980
excellent so CPU recordings are very
useful however sometimes there's an

00:13:26.980 --> 00:13:26.990
useful however sometimes there's an
 

00:13:26.990 --> 00:13:29.199
useful however sometimes there's an
exact function or maybe just a couple of

00:13:29.199 --> 00:13:29.209
exact function or maybe just a couple of
 

00:13:29.209 --> 00:13:30.579
exact function or maybe just a couple of
functions that you know you want to

00:13:30.579 --> 00:13:30.589
functions that you know you want to
 

00:13:30.589 --> 00:13:33.280
functions that you know you want to
analyze and it's a little bit imprecise

00:13:33.280 --> 00:13:33.290
analyze and it's a little bit imprecise
 

00:13:33.290 --> 00:13:36.310
analyze and it's a little bit imprecise
to record do something your app stopped

00:13:36.310 --> 00:13:36.320
to record do something your app stopped
 

00:13:36.320 --> 00:13:38.230
to record do something your app stopped
recording and then zooming in and search

00:13:38.230 --> 00:13:38.240
recording and then zooming in and search
 

00:13:38.240 --> 00:13:40.629
recording and then zooming in and search
for it fortunately we provide a very

00:13:40.629 --> 00:13:40.639
for it fortunately we provide a very
 

00:13:40.639 --> 00:13:43.840
for it fortunately we provide a very
simple solution for this and I already

00:13:43.840 --> 00:13:43.850
simple solution for this and I already
 

00:13:43.850 --> 00:13:46.930
simple solution for this and I already
added the code in so let's talk about it

00:13:46.930 --> 00:13:46.940
added the code in so let's talk about it
 

00:13:46.940 --> 00:13:49.629
added the code in so let's talk about it
so the debug class is actually part of

00:13:49.629 --> 00:13:49.639
so the debug class is actually part of
 

00:13:49.639 --> 00:13:51.819
so the debug class is actually part of
the Android API and the debug class and

00:13:51.819 --> 00:13:51.829
the Android API and the debug class and
 

00:13:51.829 --> 00:13:53.740
the Android API and the debug class and
many of its methods have in fact been in

00:13:53.740 --> 00:13:53.750
many of its methods have in fact been in
 

00:13:53.750 --> 00:13:55.810
many of its methods have in fact been in
the Android API since the very first

00:13:55.810 --> 00:13:55.820
the Android API since the very first
 

00:13:55.820 --> 00:13:58.269
the Android API since the very first
version including these two what the

00:13:58.269 --> 00:13:58.279
version including these two what the
 

00:13:58.279 --> 00:14:00.610
version including these two what the
start method tracing function does is it

00:14:00.610 --> 00:14:00.620
start method tracing function does is it
 

00:14:00.620 --> 00:14:03.519
start method tracing function does is it
asks the system to take a trace save it

00:14:03.519 --> 00:14:03.529
asks the system to take a trace save it
 

00:14:03.529 --> 00:14:05.350
asks the system to take a trace save it
with the filename you provide and then

00:14:05.350 --> 00:14:05.360
with the filename you provide and then
 

00:14:05.360 --> 00:14:06.759
with the filename you provide and then
it puts it in a folder somewhere that

00:14:06.759 --> 00:14:06.769
it puts it in a folder somewhere that
 

00:14:06.769 --> 00:14:08.350
it puts it in a folder somewhere that
you can pull off your device later and

00:14:08.350 --> 00:14:08.360
you can pull off your device later and
 

00:14:08.360 --> 00:14:11.920
you can pull off your device later and
inspect that's really nice but on studio

00:14:11.920 --> 00:14:11.930
inspect that's really nice but on studio
 

00:14:11.930 --> 00:14:13.300
inspect that's really nice but on studio
profilers we've got your back

00:14:13.300 --> 00:14:13.310
profilers we've got your back
 

00:14:13.310 --> 00:14:16.629
profilers we've got your back
we'll do all of that work for you so if

00:14:16.629 --> 00:14:16.639
we'll do all of that work for you so if
 

00:14:16.639 --> 00:14:18.370
we'll do all of that work for you so if
you are doing this manually you'd

00:14:18.370 --> 00:14:18.380
you are doing this manually you'd
 

00:14:18.380 --> 00:14:19.720
you are doing this manually you'd
probably be very careful about the name

00:14:19.720 --> 00:14:19.730
probably be very careful about the name
 

00:14:19.730 --> 00:14:20.949
probably be very careful about the name
that you chose and if you're doing

00:14:20.949 --> 00:14:20.959
that you chose and if you're doing
 

00:14:20.959 --> 00:14:22.960
that you chose and if you're doing
multiple traces you and maybe choose

00:14:22.960 --> 00:14:22.970
multiple traces you and maybe choose
 

00:14:22.970 --> 00:14:24.310
multiple traces you and maybe choose
unique names so that they didn't

00:14:24.310 --> 00:14:24.320
unique names so that they didn't
 

00:14:24.320 --> 00:14:26.740
unique names so that they didn't
overwrite each other in our case the

00:14:26.740 --> 00:14:26.750
overwrite each other in our case the
 

00:14:26.750 --> 00:14:28.210
overwrite each other in our case the
name is not gonna show up in studio we

00:14:28.210 --> 00:14:28.220
name is not gonna show up in studio we
 

00:14:28.220 --> 00:14:30.160
name is not gonna show up in studio we
don't really care about it so call it

00:14:30.160 --> 00:14:30.170
don't really care about it so call it
 

00:14:30.170 --> 00:14:33.160
don't really care about it so call it
whatever you want here I'm going to

00:14:33.160 --> 00:14:33.170
whatever you want here I'm going to
 

00:14:33.170 --> 00:14:35.019
whatever you want here I'm going to
start doing putting a recording around

00:14:35.019 --> 00:14:35.029
start doing putting a recording around
 

00:14:35.029 --> 00:14:36.910
start doing putting a recording around
this function so what I when I'm curious

00:14:36.910 --> 00:14:36.920
this function so what I when I'm curious
 

00:14:36.920 --> 00:14:38.559
this function so what I when I'm curious
about in this case there's an activity

00:14:38.559 --> 00:14:38.569
about in this case there's an activity
 

00:14:38.569 --> 00:14:40.689
about in this case there's an activity
in Santa tracker called the CD quiz and

00:14:40.689 --> 00:14:40.699
in Santa tracker called the CD quiz and
 

00:14:40.699 --> 00:14:43.150
in Santa tracker called the CD quiz and
the CD quiz loads files from the disc

00:14:43.150 --> 00:14:43.160
the CD quiz loads files from the disc
 

00:14:43.160 --> 00:14:44.889
the CD quiz loads files from the disc
that's usually a really good thing where

00:14:44.889 --> 00:14:44.899
that's usually a really good thing where
 

00:14:44.899 --> 00:14:46.000
that's usually a really good thing where
you want to know how long it's going to

00:14:46.000 --> 00:14:46.010
you want to know how long it's going to
 

00:14:46.010 --> 00:14:47.170
you want to know how long it's going to
take and if it's doing anything

00:14:47.170 --> 00:14:47.180
take and if it's doing anything
 

00:14:47.180 --> 00:14:48.970
take and if it's doing anything
suspicious maybe it's not we're gonna

00:14:48.970 --> 00:14:48.980
suspicious maybe it's not we're gonna
 

00:14:48.980 --> 00:14:52.240
suspicious maybe it's not we're gonna
take a look but one thing I do want to

00:14:52.240 --> 00:14:52.250
take a look but one thing I do want to
 

00:14:52.250 --> 00:14:54.160
take a look but one thing I do want to
mention is when you call this start

00:14:54.160 --> 00:14:54.170
mention is when you call this start
 

00:14:54.170 --> 00:14:56.379
mention is when you call this start
method tracing function it's doing a

00:14:56.379 --> 00:14:56.389
method tracing function it's doing a
 

00:14:56.389 --> 00:14:59.350
method tracing function it's doing a
trace of your code this is the more

00:14:59.350 --> 00:14:59.360
trace of your code this is the more
 

00:14:59.360 --> 00:15:02.139
trace of your code this is the more
expensive precise detailed one so I'd be

00:15:02.139 --> 00:15:02.149
expensive precise detailed one so I'd be
 

00:15:02.149 --> 00:15:03.610
expensive precise detailed one so I'd be
very careful I wouldn't do this around a

00:15:03.610 --> 00:15:03.620
very careful I wouldn't do this around a
 

00:15:03.620 --> 00:15:05.379
very careful I wouldn't do this around a
large amount of code just to make sure

00:15:05.379 --> 00:15:05.389
large amount of code just to make sure
 

00:15:05.389 --> 00:15:06.970
large amount of code just to make sure
that it doesn't take longer than you

00:15:06.970 --> 00:15:06.980
that it doesn't take longer than you
 

00:15:06.980 --> 00:15:09.370
that it doesn't take longer than you
might expect all right let's actually go

00:15:09.370 --> 00:15:09.380
might expect all right let's actually go
 

00:15:09.380 --> 00:15:14.379
might expect all right let's actually go
into the CD quiz which is down here see

00:15:14.379 --> 00:15:14.389
into the CD quiz which is down here see
 

00:15:14.389 --> 00:15:15.939
into the CD quiz which is down here see
what happens now before I do this I want

00:15:15.939 --> 00:15:15.949
what happens now before I do this I want
 

00:15:15.949 --> 00:15:17.439
what happens now before I do this I want
you to keep your eye over here in the

00:15:17.439 --> 00:15:17.449
you to keep your eye over here in the
 

00:15:17.449 --> 00:15:21.250
you to keep your eye over here in the
session panel I'm gonna hit play it's

00:15:21.250 --> 00:15:21.260
session panel I'm gonna hit play it's
 

00:15:21.260 --> 00:15:22.600
session panel I'm gonna hit play it's
gonna run in and it's automatically

00:15:22.600 --> 00:15:22.610
gonna run in and it's automatically
 

00:15:22.610 --> 00:15:23.740
gonna run in and it's automatically
record I didn't have to do anything

00:15:23.740 --> 00:15:23.750
record I didn't have to do anything
 

00:15:23.750 --> 00:15:29.290
record I didn't have to do anything
that's awesome let me back out so as you

00:15:29.290 --> 00:15:29.300
that's awesome let me back out so as you
 

00:15:29.300 --> 00:15:31.509
that's awesome let me back out so as you
can see here there's nothing new this is

00:15:31.509 --> 00:15:31.519
can see here there's nothing new this is
 

00:15:31.519 --> 00:15:33.670
can see here there's nothing new this is
exactly what xiukong was just showing

00:15:33.670 --> 00:15:33.680
exactly what xiukong was just showing
 

00:15:33.680 --> 00:15:34.370
exactly what xiukong was just showing
you before

00:15:34.370 --> 00:15:34.380
you before
 

00:15:34.380 --> 00:15:36.860
you before
it's just another trace but you didn't

00:15:36.860 --> 00:15:36.870
it's just another trace but you didn't
 

00:15:36.870 --> 00:15:39.620
it's just another trace but you didn't
have to record it yourself I think this

00:15:39.620 --> 00:15:39.630
have to record it yourself I think this
 

00:15:39.630 --> 00:15:41.660
have to record it yourself I think this
is a good moment to call out the

00:15:41.660 --> 00:15:41.670
is a good moment to call out the
 

00:15:41.670 --> 00:15:43.130
is a good moment to call out the
lifecycle events I talked a little bit

00:15:43.130 --> 00:15:43.140
lifecycle events I talked a little bit
 

00:15:43.140 --> 00:15:45.380
lifecycle events I talked a little bit
about at the beginning of the talk as

00:15:45.380 --> 00:15:45.390
about at the beginning of the talk as
 

00:15:45.390 --> 00:15:47.450
about at the beginning of the talk as
you can see we're doing a load here we

00:15:47.450 --> 00:15:47.460
you can see we're doing a load here we
 

00:15:47.460 --> 00:15:49.610
you can see we're doing a load here we
left our previous activity and now we're

00:15:49.610 --> 00:15:49.620
left our previous activity and now we're
 

00:15:49.620 --> 00:15:51.950
left our previous activity and now we're
into this new activity you can also see

00:15:51.950 --> 00:15:51.960
into this new activity you can also see
 

00:15:51.960 --> 00:15:53.600
into this new activity you can also see
that if you put your mouse over an

00:15:53.600 --> 00:15:53.610
that if you put your mouse over an
 

00:15:53.610 --> 00:15:56.690
that if you put your mouse over an
activity as of Android studio 3.3 will

00:15:56.690 --> 00:15:56.700
activity as of Android studio 3.3 will
 

00:15:56.700 --> 00:15:58.610
activity as of Android studio 3.3 will
also include the fragments that are

00:15:58.610 --> 00:15:58.620
also include the fragments that are
 

00:15:58.620 --> 00:16:00.500
also include the fragments that are
active during that time so that may be

00:16:00.500 --> 00:16:00.510
active during that time so that may be
 

00:16:00.510 --> 00:16:02.390
active during that time so that may be
useful for you but here we are we're in

00:16:02.390 --> 00:16:02.400
useful for you but here we are we're in
 

00:16:02.400 --> 00:16:04.520
useful for you but here we are we're in
this space while we're still loading

00:16:04.520 --> 00:16:04.530
this space while we're still loading
 

00:16:04.530 --> 00:16:06.170
this space while we're still loading
before we've actually entered the

00:16:06.170 --> 00:16:06.180
before we've actually entered the
 

00:16:06.180 --> 00:16:10.310
before we've actually entered the
activity and there's another really

00:16:10.310 --> 00:16:10.320
activity and there's another really
 

00:16:10.320 --> 00:16:11.480
activity and there's another really
great feature that I want to show you

00:16:11.480 --> 00:16:11.490
great feature that I want to show you
 

00:16:11.490 --> 00:16:13.670
great feature that I want to show you
here which is this filter button when I

00:16:13.670 --> 00:16:13.680
here which is this filter button when I
 

00:16:13.680 --> 00:16:15.650
here which is this filter button when I
press the filter button it brings up a

00:16:15.650 --> 00:16:15.660
press the filter button it brings up a
 

00:16:15.660 --> 00:16:17.660
press the filter button it brings up a
search box where I can type into it now

00:16:17.660 --> 00:16:17.670
search box where I can type into it now
 

00:16:17.670 --> 00:16:20.000
search box where I can type into it now
I happen to know that JSON has a

00:16:20.000 --> 00:16:20.010
I happen to know that JSON has a
 

00:16:20.010 --> 00:16:22.940
I happen to know that JSON has a
function called read literal so let me

00:16:22.940 --> 00:16:22.950
function called read literal so let me
 

00:16:22.950 --> 00:16:24.740
function called read literal so let me
just type that in now one thing you

00:16:24.740 --> 00:16:24.750
just type that in now one thing you
 

00:16:24.750 --> 00:16:26.930
just type that in now one thing you
might notice here is this part of my

00:16:26.930 --> 00:16:26.940
might notice here is this part of my
 

00:16:26.940 --> 00:16:29.660
might notice here is this part of my
call chart dimmed out and all parts of

00:16:29.660 --> 00:16:29.670
call chart dimmed out and all parts of
 

00:16:29.670 --> 00:16:31.580
call chart dimmed out and all parts of
here are not dim they're still the

00:16:31.580 --> 00:16:31.590
here are not dim they're still the
 

00:16:31.590 --> 00:16:33.230
here are not dim they're still the
normal color so let me zoom in and see

00:16:33.230 --> 00:16:33.240
normal color so let me zoom in and see
 

00:16:33.240 --> 00:16:34.520
normal color so let me zoom in and see
if I could find where that is so there

00:16:34.520 --> 00:16:34.530
if I could find where that is so there
 

00:16:34.530 --> 00:16:36.410
if I could find where that is so there
we go so we could see some instances of

00:16:36.410 --> 00:16:36.420
we go so we could see some instances of
 

00:16:36.420 --> 00:16:39.290
we go so we could see some instances of
this read literal function basically if

00:16:39.290 --> 00:16:39.300
this read literal function basically if
 

00:16:39.300 --> 00:16:41.120
this read literal function basically if
my function is an exact match

00:16:41.120 --> 00:16:41.130
my function is an exact match
 

00:16:41.130 --> 00:16:43.280
my function is an exact match
it will bold if it's a function that

00:16:43.280 --> 00:16:43.290
it will bold if it's a function that
 

00:16:43.290 --> 00:16:45.500
it will bold if it's a function that
calls either into that function or is

00:16:45.500 --> 00:16:45.510
calls either into that function or is
 

00:16:45.510 --> 00:16:47.060
calls either into that function or is
called out of that function indirectly

00:16:47.060 --> 00:16:47.070
called out of that function indirectly
 

00:16:47.070 --> 00:16:49.280
called out of that function indirectly
the color will be left the same and

00:16:49.280 --> 00:16:49.290
the color will be left the same and
 

00:16:49.290 --> 00:16:52.310
the color will be left the same and
otherwise it will dim and it's really

00:16:52.310 --> 00:16:52.320
otherwise it will dim and it's really
 

00:16:52.320 --> 00:16:54.440
otherwise it will dim and it's really
useful to sort of get a good overview of

00:16:54.440 --> 00:16:54.450
useful to sort of get a good overview of
 

00:16:54.450 --> 00:16:55.520
useful to sort of get a good overview of
how much time you're spending in your

00:16:55.520 --> 00:16:55.530
how much time you're spending in your
 

00:16:55.530 --> 00:16:57.020
how much time you're spending in your
code on the function that you care about

00:16:57.020 --> 00:16:57.030
code on the function that you care about
 

00:16:57.030 --> 00:16:58.310
code on the function that you care about
versus what you don't have to pay

00:16:58.310 --> 00:16:58.320
versus what you don't have to pay
 

00:16:58.320 --> 00:17:01.330
versus what you don't have to pay
attention to all of the CPU detail views

00:17:01.330 --> 00:17:01.340
attention to all of the CPU detail views
 

00:17:01.340 --> 00:17:03.680
attention to all of the CPU detail views
support this so the flame chart has the

00:17:03.680 --> 00:17:03.690
support this so the flame chart has the
 

00:17:03.690 --> 00:17:05.569
support this so the flame chart has the
similar dimming top-down and bottom-up

00:17:05.569 --> 00:17:05.579
similar dimming top-down and bottom-up
 

00:17:05.579 --> 00:17:08.150
similar dimming top-down and bottom-up
will strip out those functions that were

00:17:08.150 --> 00:17:08.160
will strip out those functions that were
 

00:17:08.160 --> 00:17:09.740
will strip out those functions that were
dimmed so if you're ever trying to

00:17:09.740 --> 00:17:09.750
dimmed so if you're ever trying to
 

00:17:09.750 --> 00:17:12.530
dimmed so if you're ever trying to
inspect some sort of method and you're

00:17:12.530 --> 00:17:12.540
inspect some sort of method and you're
 

00:17:12.540 --> 00:17:14.179
inspect some sort of method and you're
really narrowing down on it please give

00:17:14.179 --> 00:17:14.189
really narrowing down on it please give
 

00:17:14.189 --> 00:17:17.750
really narrowing down on it please give
the filter option a try and see if you

00:17:17.750 --> 00:17:17.760
the filter option a try and see if you
 

00:17:17.760 --> 00:17:19.280
the filter option a try and see if you
can sort of focus on what you're looking

00:17:19.280 --> 00:17:19.290
can sort of focus on what you're looking
 

00:17:19.290 --> 00:17:20.929
can sort of focus on what you're looking
at now the last thing to call attention

00:17:20.929 --> 00:17:20.939
at now the last thing to call attention
 

00:17:20.939 --> 00:17:22.550
at now the last thing to call attention
to here's all of these traces that we've

00:17:22.550 --> 00:17:22.560
to here's all of these traces that we've
 

00:17:22.560 --> 00:17:24.920
to here's all of these traces that we've
done if you mouse over them there's a

00:17:24.920 --> 00:17:24.930
done if you mouse over them there's a
 

00:17:24.930 --> 00:17:26.630
done if you mouse over them there's a
Save button here so you can actually

00:17:26.630 --> 00:17:26.640
Save button here so you can actually
 

00:17:26.640 --> 00:17:29.330
Save button here so you can actually
export your traces if you do this you

00:17:29.330 --> 00:17:29.340
export your traces if you do this you
 

00:17:29.340 --> 00:17:31.430
export your traces if you do this you
can give it to a co-worker attach it to

00:17:31.430 --> 00:17:31.440
can give it to a co-worker attach it to
 

00:17:31.440 --> 00:17:33.590
can give it to a co-worker attach it to
a bug useful things like that if

00:17:33.590 --> 00:17:33.600
a bug useful things like that if
 

00:17:33.600 --> 00:17:35.450
a bug useful things like that if
somebody gives you a trace file or you

00:17:35.450 --> 00:17:35.460
somebody gives you a trace file or you
 

00:17:35.460 --> 00:17:36.830
somebody gives you a trace file or you
are loading one you can just hit the

00:17:36.830 --> 00:17:36.840
are loading one you can just hit the
 

00:17:36.840 --> 00:17:38.900
are loading one you can just hit the
plus button over here and load it from

00:17:38.900 --> 00:17:38.910
plus button over here and load it from
 

00:17:38.910 --> 00:17:44.440
plus button over here and load it from
file all right

00:17:44.440 --> 00:17:44.450
 

00:17:44.450 --> 00:17:47.779
so now I'm going to talk about the last

00:17:47.779 --> 00:17:47.789
so now I'm going to talk about the last
 

00:17:47.789 --> 00:17:50.750
so now I'm going to talk about the last
type of CP recording the cheese system

00:17:50.750 --> 00:17:50.760
type of CP recording the cheese system
 

00:17:50.760 --> 00:17:55.190
type of CP recording the cheese system
cause three system cost this feature was

00:17:55.190 --> 00:17:55.200
cause three system cost this feature was
 

00:17:55.200 --> 00:17:59.360
cause three system cost this feature was
introduced in Android studio 3.2 it

00:17:59.360 --> 00:17:59.370
introduced in Android studio 3.2 it
 

00:17:59.370 --> 00:18:03.710
introduced in Android studio 3.2 it
cracks fine-grained system events that's

00:18:03.710 --> 00:18:03.720
cracks fine-grained system events that's
 

00:18:03.720 --> 00:18:06.620
cracks fine-grained system events that's
related to a performance so you can

00:18:06.620 --> 00:18:06.630
related to a performance so you can
 

00:18:06.630 --> 00:18:09.649
related to a performance so you can
investigate how your app interacts with

00:18:09.649 --> 00:18:09.659
investigate how your app interacts with
 

00:18:09.659 --> 00:18:10.970
investigate how your app interacts with
the system resource

00:18:10.970 --> 00:18:10.980
the system resource
 

00:18:10.980 --> 00:18:22.970
the system resource
so let's correct assistant race so one

00:18:22.970 --> 00:18:22.980
so let's correct assistant race so one
 

00:18:22.980 --> 00:18:25.700
so let's correct assistant race so one
thing again I'm using the click to zoom

00:18:25.700 --> 00:18:25.710
thing again I'm using the click to zoom
 

00:18:25.710 --> 00:18:28.669
thing again I'm using the click to zoom
button here so that it's very easy to

00:18:28.669 --> 00:18:28.679
button here so that it's very easy to
 

00:18:28.679 --> 00:18:31.760
button here so that it's very easy to
see one thing I want to show you here

00:18:31.760 --> 00:18:31.770
see one thing I want to show you here
 

00:18:31.770 --> 00:18:33.560
see one thing I want to show you here
the first thing I want to show you is in

00:18:33.560 --> 00:18:33.570
the first thing I want to show you is in
 

00:18:33.570 --> 00:18:37.460
the first thing I want to show you is in
this threat state view so if you click

00:18:37.460 --> 00:18:37.470
this threat state view so if you click
 

00:18:37.470 --> 00:18:41.330
this threat state view so if you click
the range i zoom to that selection again

00:18:41.330 --> 00:18:41.340
the range i zoom to that selection again
 

00:18:41.340 --> 00:18:48.740
the range i zoom to that selection again
and I work here so here as you can see

00:18:48.740 --> 00:18:48.750
and I work here so here as you can see
 

00:18:48.750 --> 00:18:51.139
and I work here so here as you can see
you can move with your mouse hover over

00:18:51.139 --> 00:18:51.149
you can move with your mouse hover over
 

00:18:51.149 --> 00:18:52.970
you can move with your mouse hover over
you can see this thread state is

00:18:52.970 --> 00:18:52.980
you can see this thread state is
 

00:18:52.980 --> 00:18:55.399
you can see this thread state is
runnable become runny then become

00:18:55.399 --> 00:18:55.409
runnable become runny then become
 

00:18:55.409 --> 00:18:58.730
runnable become runny then become
runnable become running again so as you

00:18:58.730 --> 00:18:58.740
runnable become running again so as you
 

00:18:58.740 --> 00:19:02.450
runnable become running again so as you
can see we are collecting every CPU

00:19:02.450 --> 00:19:02.460
can see we are collecting every CPU
 

00:19:02.460 --> 00:19:07.010
can see we are collecting every CPU
scheduling operation so at this level of

00:19:07.010 --> 00:19:07.020
scheduling operation so at this level of
 

00:19:07.020 --> 00:19:10.250
scheduling operation so at this level of
details it's very easy for you to figure

00:19:10.250 --> 00:19:10.260
details it's very easy for you to figure
 

00:19:10.260 --> 00:19:12.769
details it's very easy for you to figure
out exactly when your thread becomes

00:19:12.769 --> 00:19:12.779
out exactly when your thread becomes
 

00:19:12.779 --> 00:19:15.799
out exactly when your thread becomes
blocked and that could be useful if you

00:19:15.799 --> 00:19:15.809
blocked and that could be useful if you
 

00:19:15.809 --> 00:19:19.310
blocked and that could be useful if you
have some threading issues another thing

00:19:19.310 --> 00:19:19.320
have some threading issues another thing
 

00:19:19.320 --> 00:19:22.370
have some threading issues another thing
I want to show using the tree system

00:19:22.370 --> 00:19:22.380
I want to show using the tree system
 

00:19:22.380 --> 00:19:28.510
I want to show using the tree system
cost is to investigate slow UI chunk so

00:19:28.510 --> 00:19:28.520
cost is to investigate slow UI chunk so
 

00:19:28.520 --> 00:19:31.310
cost is to investigate slow UI chunk so
this slow you are rendering also called

00:19:31.310 --> 00:19:31.320
this slow you are rendering also called
 

00:19:31.320 --> 00:19:35.000
this slow you are rendering also called
jank by some people as you may know that

00:19:35.000 --> 00:19:35.010
jank by some people as you may know that
 

00:19:35.010 --> 00:19:41.180
jank by some people as you may know that
is the UI Android UI does the work in

00:19:41.180 --> 00:19:41.190
is the UI Android UI does the work in
 

00:19:41.190 --> 00:19:44.120
is the UI Android UI does the work in
two phases the first phase happens in

00:19:44.120 --> 00:19:44.130
two phases the first phase happens in
 

00:19:44.130 --> 00:19:47.269
two phases the first phase happens in
the main thread it determines what is on

00:19:47.269 --> 00:19:47.279
the main thread it determines what is on
 

00:19:47.279 --> 00:19:49.820
the main thread it determines what is on
the screen including the layout and the

00:19:49.820 --> 00:19:49.830
the screen including the layout and the
 

00:19:49.830 --> 00:19:52.520
the screen including the layout and the
choice it determines the what by

00:19:52.520 --> 00:19:52.530
choice it determines the what by
 

00:19:52.530 --> 00:19:55.850
choice it determines the what by
executing all the UI elements such as

00:19:55.850 --> 00:19:55.860
executing all the UI elements such as
 

00:19:55.860 --> 00:19:57.529
executing all the UI elements such as
all the

00:19:57.529 --> 00:19:57.539
all the
 

00:19:57.539 --> 00:20:00.859
all the
view classes in your app so after the

00:20:00.859 --> 00:20:00.869
view classes in your app so after the
 

00:20:00.869 --> 00:20:03.440
view classes in your app so after the
main threat generates the what they are

00:20:03.440 --> 00:20:03.450
main threat generates the what they are
 

00:20:03.450 --> 00:20:06.379
main threat generates the what they are
passed to the native render thread the

00:20:06.379 --> 00:20:06.389
passed to the native render thread the
 

00:20:06.389 --> 00:20:08.989
passed to the native render thread the
render thread will be figure out how to

00:20:08.989 --> 00:20:08.999
render thread will be figure out how to
 

00:20:08.999 --> 00:20:12.739
render thread will be figure out how to
draw them then it - how will be passed

00:20:12.739 --> 00:20:12.749
draw them then it - how will be passed
 

00:20:12.749 --> 00:20:15.950
draw them then it - how will be passed
to the surface finger system process and

00:20:15.950 --> 00:20:15.960
to the surface finger system process and
 

00:20:15.960 --> 00:20:18.349
to the surface finger system process and
the hardware who is actually performing

00:20:18.349 --> 00:20:18.359
the hardware who is actually performing
 

00:20:18.359 --> 00:20:22.190
the hardware who is actually performing
the joints so that's that is giving that

00:20:22.190 --> 00:20:22.200
the joints so that's that is giving that
 

00:20:22.200 --> 00:20:25.509
the joints so that's that is giving that
background so we can see under the frame

00:20:25.509 --> 00:20:25.519
background so we can see under the frame
 

00:20:25.519 --> 00:20:28.789
background so we can see under the frame
area we have the assessment which

00:20:28.789 --> 00:20:28.799
area we have the assessment which
 

00:20:28.799 --> 00:20:30.739
area we have the assessment which
represents the main thread the render

00:20:30.739 --> 00:20:30.749
represents the main thread the render
 

00:20:30.749 --> 00:20:35.149
represents the main thread the render
represents the render thread so let me

00:20:35.149 --> 00:20:35.159
represents the render thread so let me
 

00:20:35.159 --> 00:20:39.129
represents the render thread so let me
zoom out a little bit so you can see

00:20:39.129 --> 00:20:39.139
zoom out a little bit so you can see
 

00:20:39.139 --> 00:20:43.389
zoom out a little bit so you can see
here this this is the first phase and

00:20:43.389 --> 00:20:43.399
here this this is the first phase and
 

00:20:43.399 --> 00:20:45.830
here this this is the first phase and
corresponding the second phase will be

00:20:45.830 --> 00:20:45.840
corresponding the second phase will be
 

00:20:45.840 --> 00:20:51.759
corresponding the second phase will be
here if you are targeting a smooth UI

00:20:51.759 --> 00:20:51.769
here if you are targeting a smooth UI
 

00:20:51.769 --> 00:20:56.029
here if you are targeting a smooth UI
smooth your animation at 60 frames per

00:20:56.029 --> 00:20:56.039
smooth your animation at 60 frames per
 

00:20:56.039 --> 00:20:58.789
smooth your animation at 60 frames per
second which is 16 milliseconds roughly

00:20:58.789 --> 00:20:58.799
second which is 16 milliseconds roughly
 

00:20:58.799 --> 00:21:01.580
second which is 16 milliseconds roughly
16 milliseconds per frame so the two

00:21:01.580 --> 00:21:01.590
16 milliseconds per frame so the two
 

00:21:01.590 --> 00:21:05.029
16 milliseconds per frame so the two
phases combined together should be under

00:21:05.029 --> 00:21:05.039
phases combined together should be under
 

00:21:05.039 --> 00:21:08.419
phases combined together should be under
16 frames if it's longer than that the

00:21:08.419 --> 00:21:08.429
16 frames if it's longer than that the
 

00:21:08.429 --> 00:21:11.450
16 frames if it's longer than that the
profiler will color that frame to read

00:21:11.450 --> 00:21:11.460
profiler will color that frame to read
 

00:21:11.460 --> 00:21:14.989
profiler will color that frame to read
so as so you know this is as something

00:21:14.989 --> 00:21:14.999
so as so you know this is as something
 

00:21:14.999 --> 00:21:19.879
so as so you know this is as something
snow so if you zoom out more you can see

00:21:19.879 --> 00:21:19.889
snow so if you zoom out more you can see
 

00:21:19.889 --> 00:21:23.180
snow so if you zoom out more you can see
a lot of frames I think everyone in

00:21:23.180 --> 00:21:23.190
a lot of frames I think everyone in
 

00:21:23.190 --> 00:21:27.139
a lot of frames I think everyone in
today is red that means everyone is

00:21:27.139 --> 00:21:27.149
today is red that means everyone is
 

00:21:27.149 --> 00:21:31.539
today is red that means everyone is
exceeding the 16 meter second threshold

00:21:31.539 --> 00:21:31.549
exceeding the 16 meter second threshold
 

00:21:31.549 --> 00:21:34.820
exceeding the 16 meter second threshold
one reason one factory is we are using

00:21:34.820 --> 00:21:34.830
one reason one factory is we are using
 

00:21:34.830 --> 00:21:37.519
one reason one factory is we are using
the emulator because the way the

00:21:37.519 --> 00:21:37.529
the emulator because the way the
 

00:21:37.529 --> 00:21:40.489
the emulator because the way the
emulator interact with the system you

00:21:40.489 --> 00:21:40.499
emulator interact with the system you
 

00:21:40.499 --> 00:21:43.159
emulator interact with the system you
are going to see more red frames from

00:21:43.159 --> 00:21:43.169
are going to see more red frames from
 

00:21:43.169 --> 00:21:47.060
are going to see more red frames from
then from actual device before today's

00:21:47.060 --> 00:21:47.070
then from actual device before today's
 

00:21:47.070 --> 00:21:50.930
then from actual device before today's
talk I have collected another trace

00:21:50.930 --> 00:21:50.940
talk I have collected another trace
 

00:21:50.940 --> 00:21:54.080
talk I have collected another trace
using an actual physical device and I

00:21:54.080 --> 00:21:54.090
using an actual physical device and I
 

00:21:54.090 --> 00:21:56.389
using an actual physical device and I
have exported that trace as a file and

00:21:56.389 --> 00:21:56.399
have exported that trace as a file and
 

00:21:56.399 --> 00:21:59.299
have exported that trace as a file and
now I want to import that trace to show

00:21:59.299 --> 00:21:59.309
now I want to import that trace to show
 

00:21:59.309 --> 00:22:02.389
now I want to import that trace to show
you so as Dave said before you can use

00:22:02.389 --> 00:22:02.399
you so as Dave said before you can use
 

00:22:02.399 --> 00:22:05.799
you so as Dave said before you can use
this plus sign to import a trace

00:22:05.799 --> 00:22:05.809
this plus sign to import a trace
 

00:22:05.809 --> 00:22:10.700
this plus sign to import a trace
that's this trace

00:22:10.700 --> 00:22:10.710
that's this trace
 

00:22:10.710 --> 00:22:14.910
that's this trace
so because when you trace the system

00:22:14.910 --> 00:22:14.920
so because when you trace the system
 

00:22:14.920 --> 00:22:17.970
so because when you trace the system
calls everything the system-wide events

00:22:17.970 --> 00:22:17.980
calls everything the system-wide events
 

00:22:17.980 --> 00:22:20.100
calls everything the system-wide events
are collected so you need to tell the

00:22:20.100 --> 00:22:20.110
are collected so you need to tell the
 

00:22:20.110 --> 00:22:22.890
are collected so you need to tell the
provider which process you want to look

00:22:22.890 --> 00:22:22.900
provider which process you want to look
 

00:22:22.900 --> 00:22:25.200
provider which process you want to look
at so we want to look at Santa tracker

00:22:25.200 --> 00:22:25.210
at so we want to look at Santa tracker
 

00:22:25.210 --> 00:22:29.190
at so we want to look at Santa tracker
and as you know the Linux from the

00:22:29.190 --> 00:22:29.200
and as you know the Linux from the
 

00:22:29.200 --> 00:22:32.010
and as you know the Linux from the
system point of view every process or

00:22:32.010 --> 00:22:32.020
system point of view every process or
 

00:22:32.020 --> 00:22:34.200
system point of view every process or
every thread that your name can no

00:22:34.200 --> 00:22:34.210
every thread that your name can no
 

00:22:34.210 --> 00:22:37.410
every thread that your name can no
longer than 15 characters so that's why

00:22:37.410 --> 00:22:37.420
longer than 15 characters so that's why
 

00:22:37.420 --> 00:22:39.840
longer than 15 characters so that's why
this wine is accurate the Santa tracker

00:22:39.840 --> 00:22:39.850
this wine is accurate the Santa tracker
 

00:22:39.850 --> 00:22:42.960
this wine is accurate the Santa tracker
dot debug for some reason system thinks

00:22:42.960 --> 00:22:42.970
dot debug for some reason system thinks
 

00:22:42.970 --> 00:22:44.910
dot debug for some reason system thinks
this is the name so if you select this

00:22:44.910 --> 00:22:44.920
this is the name so if you select this
 

00:22:44.920 --> 00:22:46.920
this is the name so if you select this
one we are going to import this trace

00:22:46.920 --> 00:22:46.930
one we are going to import this trace
 

00:22:46.930 --> 00:22:49.290
one we are going to import this trace
and here you can see from the active

00:22:49.290 --> 00:22:49.300
and here you can see from the active
 

00:22:49.300 --> 00:22:51.240
and here you can see from the active
device most of the frames will be

00:22:51.240 --> 00:22:51.250
device most of the frames will be
 

00:22:51.250 --> 00:22:54.780
device most of the frames will be
inquiry that indicates they are under 16

00:22:54.780 --> 00:22:54.790
inquiry that indicates they are under 16
 

00:22:54.790 --> 00:22:57.390
inquiry that indicates they are under 16
milliseconds threshold and some of the

00:22:57.390 --> 00:22:57.400
milliseconds threshold and some of the
 

00:22:57.400 --> 00:22:59.070
milliseconds threshold and some of the
frames are in the red because they are

00:22:59.070 --> 00:22:59.080
frames are in the red because they are
 

00:22:59.080 --> 00:23:04.020
frames are in the red because they are
over that threshold you may wonder how

00:23:04.020 --> 00:23:04.030
over that threshold you may wonder how
 

00:23:04.030 --> 00:23:07.440
over that threshold you may wonder how
does the system knows um how does the

00:23:07.440 --> 00:23:07.450
does the system knows um how does the
 

00:23:07.450 --> 00:23:10.560
does the system knows um how does the
profiler knows how long these phases are

00:23:10.560 --> 00:23:10.570
profiler knows how long these phases are
 

00:23:10.570 --> 00:23:14.280
profiler knows how long these phases are
taking that is from the tracing points

00:23:14.280 --> 00:23:14.290
taking that is from the tracing points
 

00:23:14.290 --> 00:23:18.510
taking that is from the tracing points
so Android platform engineers have added

00:23:18.510 --> 00:23:18.520
so Android platform engineers have added
 

00:23:18.520 --> 00:23:22.110
so Android platform engineers have added
building tracing points into the some of

00:23:22.110 --> 00:23:22.120
building tracing points into the some of
 

00:23:22.120 --> 00:23:25.950
building tracing points into the some of
the critical tasks in Android system so

00:23:25.950 --> 00:23:25.960
the critical tasks in Android system so
 

00:23:25.960 --> 00:23:29.490
the critical tasks in Android system so
I mean the example here is if you click

00:23:29.490 --> 00:23:29.500
I mean the example here is if you click
 

00:23:29.500 --> 00:23:32.370
I mean the example here is if you click
the main thread here these events are

00:23:32.370 --> 00:23:32.380
the main thread here these events are
 

00:23:32.380 --> 00:23:35.910
the main thread here these events are
showing from the trace events here so if

00:23:35.910 --> 00:23:35.920
showing from the trace events here so if
 

00:23:35.920 --> 00:23:42.600
showing from the trace events here so if
i zoom in here you will see this is a

00:23:42.600 --> 00:23:42.610
i zoom in here you will see this is a
 

00:23:42.610 --> 00:23:45.480
i zoom in here you will see this is a
trace event called choreographer to

00:23:45.480 --> 00:23:45.490
trace event called choreographer to
 

00:23:45.490 --> 00:23:48.180
trace event called choreographer to
frame so that's the first phase we just

00:23:48.180 --> 00:23:48.190
frame so that's the first phase we just
 

00:23:48.190 --> 00:23:50.280
frame so that's the first phase we just
talked about in the UI rendering in

00:23:50.280 --> 00:23:50.290
talked about in the UI rendering in
 

00:23:50.290 --> 00:23:52.710
talked about in the UI rendering in
happens in the main thread if you click

00:23:52.710 --> 00:23:52.720
happens in the main thread if you click
 

00:23:52.720 --> 00:23:54.960
happens in the main thread if you click
the render thread you can see there is

00:23:54.960 --> 00:23:54.970
the render thread you can see there is
 

00:23:54.970 --> 00:23:57.120
the render thread you can see there is
an event called show frame so that's the

00:23:57.120 --> 00:23:57.130
an event called show frame so that's the
 

00:23:57.130 --> 00:23:59.880
an event called show frame so that's the
second phase and you can also see there

00:23:59.880 --> 00:23:59.890
second phase and you can also see there
 

00:23:59.890 --> 00:24:04.020
second phase and you can also see there
are other tracing points in the system

00:24:04.020 --> 00:24:04.030
are other tracing points in the system
 

00:24:04.030 --> 00:24:06.330
are other tracing points in the system
there are all building systems so they

00:24:06.330 --> 00:24:06.340
there are all building systems so they
 

00:24:06.340 --> 00:24:08.580
there are all building systems so they
are available on any Android phones

00:24:08.580 --> 00:24:08.590
are available on any Android phones
 

00:24:08.590 --> 00:24:11.220
are available on any Android phones
because they are building and they are

00:24:11.220 --> 00:24:11.230
because they are building and they are
 

00:24:11.230 --> 00:24:12.750
because they are building and they are
very useful to get the timing

00:24:12.750 --> 00:24:12.760
very useful to get the timing
 

00:24:12.760 --> 00:24:15.260
very useful to get the timing
information for some specific tasks and

00:24:15.260 --> 00:24:15.270
information for some specific tasks and
 

00:24:15.270 --> 00:24:18.090
information for some specific tasks and
actually you can have your own trace

00:24:18.090 --> 00:24:18.100
actually you can have your own trace
 

00:24:18.100 --> 00:24:20.280
actually you can have your own trace
point to you and I'm going to demo that

00:24:20.280 --> 00:24:20.290
point to you and I'm going to demo that
 

00:24:20.290 --> 00:24:23.200
point to you and I'm going to demo that
here so

00:24:23.200 --> 00:24:23.210
here so
 

00:24:23.210 --> 00:24:26.049
here so
so here if we go into the top of the app

00:24:26.049 --> 00:24:26.059
so here if we go into the top of the app
 

00:24:26.059 --> 00:24:28.720
so here if we go into the top of the app
come back to this view you have the

00:24:28.720 --> 00:24:28.730
come back to this view you have the
 

00:24:28.730 --> 00:24:31.690
come back to this view you have the
clouds we have the snowflakes I want to

00:24:31.690 --> 00:24:31.700
clouds we have the snowflakes I want to
 

00:24:31.700 --> 00:24:36.310
clouds we have the snowflakes I want to
know exactly how long the my coat is

00:24:36.310 --> 00:24:36.320
know exactly how long the my coat is
 

00:24:36.320 --> 00:24:40.000
know exactly how long the my coat is
spent join them so for the cloud I go to

00:24:40.000 --> 00:24:40.010
spent join them so for the cloud I go to
 

00:24:40.010 --> 00:24:46.169
spent join them so for the cloud I go to
the village view so there should be a

00:24:46.169 --> 00:24:46.179
the village view so there should be a
 

00:24:46.179 --> 00:24:51.340
the village view so there should be a
draw method so at the beginning of the

00:24:51.340 --> 00:24:51.350
draw method so at the beginning of the
 

00:24:51.350 --> 00:24:54.760
draw method so at the beginning of the
method I add the instrumentation the

00:24:54.760 --> 00:24:54.770
method I add the instrumentation the
 

00:24:54.770 --> 00:24:56.530
method I add the instrumentation the
trace speaking section you need to

00:24:56.530 --> 00:24:56.540
trace speaking section you need to
 

00:24:56.540 --> 00:24:58.660
trace speaking section you need to
provide a name a string which is the

00:24:58.660 --> 00:24:58.670
provide a name a string which is the
 

00:24:58.670 --> 00:25:00.790
provide a name a string which is the
sections name at the end of the method I

00:25:00.790 --> 00:25:00.800
sections name at the end of the method I
 

00:25:00.800 --> 00:25:06.460
sections name at the end of the method I
will end this trace event for the

00:25:06.460 --> 00:25:06.470
will end this trace event for the
 

00:25:06.470 --> 00:25:08.919
will end this trace event for the
snowflakes it goes to the snowflake view

00:25:08.919 --> 00:25:08.929
snowflakes it goes to the snowflake view
 

00:25:08.929 --> 00:25:14.230
snowflakes it goes to the snowflake view
again it should be a draw method I want

00:25:14.230 --> 00:25:14.240
again it should be a draw method I want
 

00:25:14.240 --> 00:25:16.360
again it should be a draw method I want
to point out the section name you should

00:25:16.360 --> 00:25:16.370
to point out the section name you should
 

00:25:16.370 --> 00:25:19.000
to point out the section name you should
you should pick a name makes sense to

00:25:19.000 --> 00:25:19.010
you should pick a name makes sense to
 

00:25:19.010 --> 00:25:21.850
you should pick a name makes sense to
you so you can recognize where you doing

00:25:21.850 --> 00:25:21.860
you so you can recognize where you doing
 

00:25:21.860 --> 00:25:25.330
you so you can recognize where you doing
the CPU recording so here we are doing

00:25:25.330 --> 00:25:25.340
the CPU recording so here we are doing
 

00:25:25.340 --> 00:25:28.690
the CPU recording so here we are doing
the snowflake Android dev summit 2018 so

00:25:28.690 --> 00:25:28.700
the snowflake Android dev summit 2018 so
 

00:25:28.700 --> 00:25:32.799
the snowflake Android dev summit 2018 so
that makes sense for today's demo so now

00:25:32.799 --> 00:25:32.809
that makes sense for today's demo so now
 

00:25:32.809 --> 00:25:35.200
that makes sense for today's demo so now
I have at the menu instrumentation so I

00:25:35.200 --> 00:25:35.210
I have at the menu instrumentation so I
 

00:25:35.210 --> 00:25:43.510
I have at the menu instrumentation so I
will rebuild as app and we profile it so

00:25:43.510 --> 00:25:43.520
will rebuild as app and we profile it so
 

00:25:43.520 --> 00:25:45.760
will rebuild as app and we profile it so
while we are waiting for the build you

00:25:45.760 --> 00:25:45.770
while we are waiting for the build you
 

00:25:45.770 --> 00:25:47.919
while we are waiting for the build you
may want me if I want to know how long

00:25:47.919 --> 00:25:47.929
may want me if I want to know how long
 

00:25:47.929 --> 00:25:50.799
may want me if I want to know how long
that two methods are taking why don't

00:25:50.799 --> 00:25:50.809
that two methods are taking why don't
 

00:25:50.809 --> 00:25:53.950
that two methods are taking why don't
you use the trace Java methods that type

00:25:53.950 --> 00:25:53.960
you use the trace Java methods that type
 

00:25:53.960 --> 00:25:56.230
you use the trace Java methods that type
of CPU recording huge are talking about

00:25:56.230 --> 00:25:56.240
of CPU recording huge are talking about
 

00:25:56.240 --> 00:26:00.580
of CPU recording huge are talking about
moments ago so I would say trace Java

00:26:00.580 --> 00:26:00.590
moments ago so I would say trace Java
 

00:26:00.590 --> 00:26:03.040
moments ago so I would say trace Java
method is very powerful it's very easy

00:26:03.040 --> 00:26:03.050
method is very powerful it's very easy
 

00:26:03.050 --> 00:26:06.669
method is very powerful it's very easy
to use but it has significant overhead

00:26:06.669 --> 00:26:06.679
to use but it has significant overhead
 

00:26:06.679 --> 00:26:09.520
to use but it has significant overhead
because the java virtual machine is

00:26:09.520 --> 00:26:09.530
because the java virtual machine is
 

00:26:09.530 --> 00:26:11.770
because the java virtual machine is
collecting data every time when the

00:26:11.770 --> 00:26:11.780
collecting data every time when the
 

00:26:11.780 --> 00:26:15.160
collecting data every time when the
execution enter of method and every time

00:26:15.160 --> 00:26:15.170
execution enter of method and every time
 

00:26:15.170 --> 00:26:17.470
execution enter of method and every time
when the execution access of method so

00:26:17.470 --> 00:26:17.480
when the execution access of method so
 

00:26:17.480 --> 00:26:20.919
when the execution access of method so
if you have a lot of frequent small

00:26:20.919 --> 00:26:20.929
if you have a lot of frequent small
 

00:26:20.929 --> 00:26:23.890
if you have a lot of frequent small
method calls that overhead can quickly

00:26:23.890 --> 00:26:23.900
method calls that overhead can quickly
 

00:26:23.900 --> 00:26:27.190
method calls that overhead can quickly
add up and become very expensive if you

00:26:27.190 --> 00:26:27.200
add up and become very expensive if you
 

00:26:27.200 --> 00:26:29.620
add up and become very expensive if you
use the manual instrumentation for

00:26:29.620 --> 00:26:29.630
use the manual instrumentation for
 

00:26:29.630 --> 00:26:31.960
use the manual instrumentation for
example like the trace using the trace

00:26:31.960 --> 00:26:31.970
example like the trace using the trace
 

00:26:31.970 --> 00:26:35.890
example like the trace using the trace
api you have the full control of one and

00:26:35.890 --> 00:26:35.900
api you have the full control of one and
 

00:26:35.900 --> 00:26:38.650
api you have the full control of one and
we're to collect data so if you use that

00:26:38.650 --> 00:26:38.660
we're to collect data so if you use that
 

00:26:38.660 --> 00:26:41.530
we're to collect data so if you use that
wisely the overhead will be much smaller

00:26:41.530 --> 00:26:41.540
wisely the overhead will be much smaller
 

00:26:41.540 --> 00:26:44.799
wisely the overhead will be much smaller
and as a result the data you click it

00:26:44.799 --> 00:26:44.809
and as a result the data you click it
 

00:26:44.809 --> 00:26:46.620
and as a result the data you click it
will be more accurate

00:26:46.620 --> 00:26:46.630
will be more accurate
 

00:26:46.630 --> 00:26:50.200
will be more accurate
so let's verify the instrumentation we

00:26:50.200 --> 00:26:50.210
so let's verify the instrumentation we
 

00:26:50.210 --> 00:26:53.770
so let's verify the instrumentation we
have so you go to the CPU profiler we

00:26:53.770 --> 00:26:53.780
have so you go to the CPU profiler we
 

00:26:53.780 --> 00:27:02.010
have so you go to the CPU profiler we
collect a trace of trade system cost and

00:27:02.010 --> 00:27:02.020
 

00:27:02.020 --> 00:27:07.990
here you mean you mean we see this event

00:27:07.990 --> 00:27:08.000
here you mean you mean we see this event
 

00:27:08.000 --> 00:27:10.930
here you mean you mean we see this event
again karach refer to frame this is from

00:27:10.930 --> 00:27:10.940
again karach refer to frame this is from
 

00:27:10.940 --> 00:27:13.150
again karach refer to frame this is from
the main thread that is responsible for

00:27:13.150 --> 00:27:13.160
the main thread that is responsible for
 

00:27:13.160 --> 00:27:23.230
the main thread that is responsible for
all UI elements and if we keep to me so

00:27:23.230 --> 00:27:23.240
all UI elements and if we keep to me so
 

00:27:23.240 --> 00:27:25.600
all UI elements and if we keep to me so
you can see this is the frame we just

00:27:25.600 --> 00:27:25.610
you can see this is the frame we just
 

00:27:25.610 --> 00:27:27.730
you can see this is the frame we just
added village view who is join the

00:27:27.730 --> 00:27:27.740
added village view who is join the
 

00:27:27.740 --> 00:27:30.730
added village view who is join the
clouds and this is a snowflake view 80s

00:27:30.730 --> 00:27:30.740
clouds and this is a snowflake view 80s
 

00:27:30.740 --> 00:27:33.549
clouds and this is a snowflake view 80s
2018 that's the thing responsible for

00:27:33.549 --> 00:27:33.559
2018 that's the thing responsible for
 

00:27:33.559 --> 00:27:39.400
2018 that's the thing responsible for
showing the snowflakes so this is that

00:27:39.400 --> 00:27:39.410
showing the snowflakes so this is that
 

00:27:39.410 --> 00:27:43.720
showing the snowflakes so this is that
how the use the trace system costs CPU

00:27:43.720 --> 00:27:43.730
how the use the trace system costs CPU
 

00:27:43.730 --> 00:27:46.720
how the use the trace system costs CPU
recording so you may heard a very

00:27:46.720 --> 00:27:46.730
recording so you may heard a very
 

00:27:46.730 --> 00:27:50.530
recording so you may heard a very
similar tool called systrace so actually

00:27:50.530 --> 00:27:50.540
similar tool called systrace so actually
 

00:27:50.540 --> 00:27:53.410
similar tool called systrace so actually
my Google coworker common gave a

00:27:53.410 --> 00:27:53.420
my Google coworker common gave a
 

00:27:53.420 --> 00:27:56.310
my Google coworker common gave a
lightning talk yesterday on the systrace

00:27:56.310 --> 00:27:56.320
lightning talk yesterday on the systrace
 

00:27:56.320 --> 00:28:00.190
lightning talk yesterday on the systrace
so it's extremely powerful tool but the

00:28:00.190 --> 00:28:00.200
so it's extremely powerful tool but the
 

00:28:00.200 --> 00:28:02.770
so it's extremely powerful tool but the
learning curve of the systrace is a

00:28:02.770 --> 00:28:02.780
learning curve of the systrace is a
 

00:28:02.780 --> 00:28:05.320
learning curve of the systrace is a
little bit deeper than the NGO studio

00:28:05.320 --> 00:28:05.330
little bit deeper than the NGO studio
 

00:28:05.330 --> 00:28:08.680
little bit deeper than the NGO studio
profiler so you may choose the truth

00:28:08.680 --> 00:28:08.690
profiler so you may choose the truth
 

00:28:08.690 --> 00:28:11.130
profiler so you may choose the truth
that best suits your needs

00:28:11.130 --> 00:28:11.140
that best suits your needs
 

00:28:11.140 --> 00:28:14.860
that best suits your needs
ok that's for the trace CP recording I

00:28:14.860 --> 00:28:14.870
ok that's for the trace CP recording I
 

00:28:14.870 --> 00:28:20.320
ok that's for the trace CP recording I
will hand over the demo Bad Fur Day all

00:28:20.320 --> 00:28:20.330
will hand over the demo Bad Fur Day all
 

00:28:20.330 --> 00:28:22.240
will hand over the demo Bad Fur Day all
right let's leave the CPU profiler

00:28:22.240 --> 00:28:22.250
right let's leave the CPU profiler
 

00:28:22.250 --> 00:28:24.040
right let's leave the CPU profiler
behind and jump over to the memory

00:28:24.040 --> 00:28:24.050
behind and jump over to the memory
 

00:28:24.050 --> 00:28:27.370
behind and jump over to the memory
profiler first of all I want to draw

00:28:27.370 --> 00:28:27.380
profiler first of all I want to draw
 

00:28:27.380 --> 00:28:29.080
profiler first of all I want to draw
everyone's attention to this allocation

00:28:29.080 --> 00:28:29.090
everyone's attention to this allocation
 

00:28:29.090 --> 00:28:32.080
everyone's attention to this allocation
tracking pull down some quick history

00:28:32.080 --> 00:28:32.090
tracking pull down some quick history
 

00:28:32.090 --> 00:28:34.990
tracking pull down some quick history
here in Android studio 3.0 when

00:28:34.990 --> 00:28:35.000
here in Android studio 3.0 when
 

00:28:35.000 --> 00:28:37.180
here in Android studio 3.0 when
targeting Android devices with oo or

00:28:37.180 --> 00:28:37.190
targeting Android devices with oo or
 

00:28:37.190 --> 00:28:40.380
targeting Android devices with oo or
newer what we did is we would collect an

00:28:40.380 --> 00:28:40.390
newer what we did is we would collect an
 

00:28:40.390 --> 00:28:43.330
newer what we did is we would collect an
allocation a call stack for every single

00:28:43.330 --> 00:28:43.340
allocation a call stack for every single
 

00:28:43.340 --> 00:28:46.450
allocation a call stack for every single
allocation dier app made we did it

00:28:46.450 --> 00:28:46.460
allocation dier app made we did it
 

00:28:46.460 --> 00:28:48.870
allocation dier app made we did it
because it would be very convenient to

00:28:48.870 --> 00:28:48.880
because it would be very convenient to
 

00:28:48.880 --> 00:28:51.750
because it would be very convenient to
used to have that history however some

00:28:51.750 --> 00:28:51.760
used to have that history however some
 

00:28:51.760 --> 00:28:53.640
used to have that history however some
of our users reported that profilers

00:28:53.640 --> 00:28:53.650
of our users reported that profilers
 

00:28:53.650 --> 00:28:56.010
of our users reported that profilers
were slowing their app down after we

00:28:56.010 --> 00:28:56.020
were slowing their app down after we
 

00:28:56.020 --> 00:28:57.840
were slowing their app down after we
investigated it turned out to be this

00:28:57.840 --> 00:28:57.850
investigated it turned out to be this
 

00:28:57.850 --> 00:29:00.840
investigated it turned out to be this
feature so starting in Android 3.3

00:29:00.840 --> 00:29:00.850
feature so starting in Android 3.3
 

00:29:00.850 --> 00:29:03.300
feature so starting in Android 3.3
hundred thirty three point three we now

00:29:03.300 --> 00:29:03.310
hundred thirty three point three we now
 

00:29:03.310 --> 00:29:05.780
hundred thirty three point three we now
give you the option to configure this

00:29:05.780 --> 00:29:05.790
give you the option to configure this
 

00:29:05.790 --> 00:29:07.980
give you the option to configure this
let me go ahead and look here so we have

00:29:07.980 --> 00:29:07.990
let me go ahead and look here so we have
 

00:29:07.990 --> 00:29:11.370
let me go ahead and look here so we have
none sampled and full none disables the

00:29:11.370 --> 00:29:11.380
none sampled and full none disables the
 

00:29:11.380 --> 00:29:13.800
none sampled and full none disables the
feature full enables it and sampled

00:29:13.800 --> 00:29:13.810
feature full enables it and sampled
 

00:29:13.810 --> 00:29:16.850
feature full enables it and sampled
attempts to collect a subset of the

00:29:16.850 --> 00:29:16.860
attempts to collect a subset of the
 

00:29:16.860 --> 00:29:20.220
attempts to collect a subset of the
allocations that sort of gives you a

00:29:20.220 --> 00:29:20.230
allocations that sort of gives you a
 

00:29:20.230 --> 00:29:22.650
allocations that sort of gives you a
general look for how your app's memory

00:29:22.650 --> 00:29:22.660
general look for how your app's memory
 

00:29:22.660 --> 00:29:25.380
general look for how your app's memory
behavior is well not actually affecting

00:29:25.380 --> 00:29:25.390
behavior is well not actually affecting
 

00:29:25.390 --> 00:29:27.270
behavior is well not actually affecting
your performance as much as a full one

00:29:27.270 --> 00:29:27.280
your performance as much as a full one
 

00:29:27.280 --> 00:29:29.970
your performance as much as a full one
does now that being said whether or not

00:29:29.970 --> 00:29:29.980
does now that being said whether or not
 

00:29:29.980 --> 00:29:32.340
does now that being said whether or not
folk effects your app or not can depend

00:29:32.340 --> 00:29:32.350
folk effects your app or not can depend
 

00:29:32.350 --> 00:29:33.660
folk effects your app or not can depend
on the host machine you're running on

00:29:33.660 --> 00:29:33.670
on the host machine you're running on
 

00:29:33.670 --> 00:29:36.060
on the host machine you're running on
whether you're targeting a device or an

00:29:36.060 --> 00:29:36.070
whether you're targeting a device or an
 

00:29:36.070 --> 00:29:38.670
whether you're targeting a device or an
emulator or even your code if you're a

00:29:38.670 --> 00:29:38.680
emulator or even your code if you're a
 

00:29:38.680 --> 00:29:41.130
emulator or even your code if you're a
code or if your app code has a lot of

00:29:41.130 --> 00:29:41.140
code or if your app code has a lot of
 

00:29:41.140 --> 00:29:44.010
code or if your app code has a lot of
small allocations in it like Santa

00:29:44.010 --> 00:29:44.020
small allocations in it like Santa
 

00:29:44.020 --> 00:29:46.830
small allocations in it like Santa
tracker does it can be slow but I

00:29:46.830 --> 00:29:46.840
tracker does it can be slow but I
 

00:29:46.840 --> 00:29:47.970
tracker does it can be slow but I
recommend playing around with the

00:29:47.970 --> 00:29:47.980
recommend playing around with the
 

00:29:47.980 --> 00:29:49.560
recommend playing around with the
features I'm gonna go ahead here and

00:29:49.560 --> 00:29:49.570
features I'm gonna go ahead here and
 

00:29:49.570 --> 00:29:53.160
features I'm gonna go ahead here and
turn full on me alive here so you notice

00:29:53.160 --> 00:29:53.170
turn full on me alive here so you notice
 

00:29:53.170 --> 00:29:55.860
turn full on me alive here so you notice
once I turned on full this allocation

00:29:55.860 --> 00:29:55.870
once I turned on full this allocation
 

00:29:55.870 --> 00:29:58.470
once I turned on full this allocation
indicator started showing up I want some

00:29:58.470 --> 00:29:58.480
indicator started showing up I want some
 

00:29:58.480 --> 00:29:59.970
indicator started showing up I want some
interesting things to happen so I'll

00:29:59.970 --> 00:29:59.980
interesting things to happen so I'll
 

00:29:59.980 --> 00:30:03.770
interesting things to happen so I'll
just go ahead and rotate the device

00:30:03.770 --> 00:30:03.780
just go ahead and rotate the device
 

00:30:03.780 --> 00:30:07.410
just go ahead and rotate the device
rotate it back we'll go back over there

00:30:07.410 --> 00:30:07.420
rotate it back we'll go back over there
 

00:30:07.420 --> 00:30:09.180
rotate it back we'll go back over there
so now let's go ahead and take a look

00:30:09.180 --> 00:30:09.190
so now let's go ahead and take a look
 

00:30:09.190 --> 00:30:11.310
so now let's go ahead and take a look
here so all I need to do at any point is

00:30:11.310 --> 00:30:11.320
here so all I need to do at any point is
 

00:30:11.320 --> 00:30:13.950
here so all I need to do at any point is
just drag across and I'm gonna be able

00:30:13.950 --> 00:30:13.960
just drag across and I'm gonna be able
 

00:30:13.960 --> 00:30:16.080
just drag across and I'm gonna be able
to see all of the allocations and the D

00:30:16.080 --> 00:30:16.090
to see all of the allocations and the D
 

00:30:16.090 --> 00:30:18.000
to see all of the allocations and the D
allocations that happened during that

00:30:18.000 --> 00:30:18.010
allocations that happened during that
 

00:30:18.010 --> 00:30:19.920
allocations that happened during that
range this could be a really lightweight

00:30:19.920 --> 00:30:19.930
range this could be a really lightweight
 

00:30:19.930 --> 00:30:22.710
range this could be a really lightweight
way to sort of get a quick look at what

00:30:22.710 --> 00:30:22.720
way to sort of get a quick look at what
 

00:30:22.720 --> 00:30:24.180
way to sort of get a quick look at what
your memory is doing there's an

00:30:24.180 --> 00:30:24.190
your memory is doing there's an
 

00:30:24.190 --> 00:30:26.520
your memory is doing there's an
allocation and de-allocation count so

00:30:26.520 --> 00:30:26.530
allocation and de-allocation count so
 

00:30:26.530 --> 00:30:27.720
allocation and de-allocation count so
sometimes you might be able to find

00:30:27.720 --> 00:30:27.730
sometimes you might be able to find
 

00:30:27.730 --> 00:30:30.770
sometimes you might be able to find
memory leaks even just doing this and

00:30:30.770 --> 00:30:30.780
memory leaks even just doing this and
 

00:30:30.780 --> 00:30:33.240
memory leaks even just doing this and
then the other nice thing is maybe if

00:30:33.240 --> 00:30:33.250
then the other nice thing is maybe if
 

00:30:33.250 --> 00:30:34.530
then the other nice thing is maybe if
you have this on and you're doing some

00:30:34.530 --> 00:30:34.540
you have this on and you're doing some
 

00:30:34.540 --> 00:30:36.270
you have this on and you're doing some
other stuff you can actually go back in

00:30:36.270 --> 00:30:36.280
other stuff you can actually go back in
 

00:30:36.280 --> 00:30:38.610
other stuff you can actually go back in
time and select a range and still see

00:30:38.610 --> 00:30:38.620
time and select a range and still see
 

00:30:38.620 --> 00:30:40.290
time and select a range and still see
what's going in your memory now I'm

00:30:40.290 --> 00:30:40.300
what's going in your memory now I'm
 

00:30:40.300 --> 00:30:42.330
what's going in your memory now I'm
gonna go ahead here and turn it back off

00:30:42.330 --> 00:30:42.340
gonna go ahead here and turn it back off
 

00:30:42.340 --> 00:30:45.990
gonna go ahead here and turn it back off
again and you'll notice that the

00:30:45.990 --> 00:30:46.000
again and you'll notice that the
 

00:30:46.000 --> 00:30:48.300
again and you'll notice that the
allocation indicated that it stopped

00:30:48.300 --> 00:30:48.310
allocation indicated that it stopped
 

00:30:48.310 --> 00:30:50.700
allocation indicated that it stopped
tracking by doing an empty circle if I

00:30:50.700 --> 00:30:50.710
tracking by doing an empty circle if I
 

00:30:50.710 --> 00:30:52.800
tracking by doing an empty circle if I
did sampled mode it would put a

00:30:52.800 --> 00:30:52.810
did sampled mode it would put a
 

00:30:52.810 --> 00:30:56.400
did sampled mode it would put a
half-filled circle now looking at these

00:30:56.400 --> 00:30:56.410
half-filled circle now looking at these
 

00:30:56.410 --> 00:30:59.220
half-filled circle now looking at these
objects once I click on it you can see

00:30:59.220 --> 00:30:59.230
objects once I click on it you can see
 

00:30:59.230 --> 00:31:00.900
objects once I click on it you can see
every single one that's currently

00:31:00.900 --> 00:31:00.910
every single one that's currently
 

00:31:00.910 --> 00:31:03.120
every single one that's currently
allocated as long as well as the

00:31:03.120 --> 00:31:03.130
allocated as long as well as the
 

00:31:03.130 --> 00:31:05.880
allocated as long as well as the
where it was allocated this is very

00:31:05.880 --> 00:31:05.890
where it was allocated this is very
 

00:31:05.890 --> 00:31:07.470
where it was allocated this is very
useful to sort of get your handle on a

00:31:07.470 --> 00:31:07.480
useful to sort of get your handle on a
 

00:31:07.480 --> 00:31:08.970
useful to sort of get your handle on a
code base you can click around this and

00:31:08.970 --> 00:31:08.980
code base you can click around this and
 

00:31:08.980 --> 00:31:10.650
code base you can click around this and
see where different objects are coming

00:31:10.650 --> 00:31:10.660
see where different objects are coming
 

00:31:10.660 --> 00:31:13.530
see where different objects are coming
from that being said it might not help

00:31:13.530 --> 00:31:13.540
from that being said it might not help
 

00:31:13.540 --> 00:31:15.780
from that being said it might not help
you understand why a memory leak

00:31:15.780 --> 00:31:15.790
you understand why a memory leak
 

00:31:15.790 --> 00:31:18.480
you understand why a memory leak
happened what is holding on to my memory

00:31:18.480 --> 00:31:18.490
happened what is holding on to my memory
 

00:31:18.490 --> 00:31:20.400
happened what is holding on to my memory
well if you want to get that information

00:31:20.400 --> 00:31:20.410
well if you want to get that information
 

00:31:20.410 --> 00:31:22.500
well if you want to get that information
you have to go over here to this icon

00:31:22.500 --> 00:31:22.510
you have to go over here to this icon
 

00:31:22.510 --> 00:31:26.460
you have to go over here to this icon
this is the heaped-up icon and and click

00:31:26.460 --> 00:31:26.470
this is the heaped-up icon and and click
 

00:31:26.470 --> 00:31:27.810
this is the heaped-up icon and and click
the heap dump so what I'm actually going

00:31:27.810 --> 00:31:27.820
the heap dump so what I'm actually going
 

00:31:27.820 --> 00:31:30.870
the heap dump so what I'm actually going
to do here just to let you know when I I

00:31:30.870 --> 00:31:30.880
to do here just to let you know when I I
 

00:31:30.880 --> 00:31:33.660
to do here just to let you know when I I
could not find a leaking activity or

00:31:33.660 --> 00:31:33.670
could not find a leaking activity or
 

00:31:33.670 --> 00:31:36.480
could not find a leaking activity or
fragment in the Santa tracker app so

00:31:36.480 --> 00:31:36.490
fragment in the Santa tracker app so
 

00:31:36.490 --> 00:31:39.240
fragment in the Santa tracker app so
full disclosure I added one and what I

00:31:39.240 --> 00:31:39.250
full disclosure I added one and what I
 

00:31:39.250 --> 00:31:42.020
full disclosure I added one and what I
did is I added a memory leak to this

00:31:42.020 --> 00:31:42.030
did is I added a memory leak to this
 

00:31:42.030 --> 00:31:45.600
did is I added a memory leak to this
penguin swim game here so actually let's

00:31:45.600 --> 00:31:45.610
penguin swim game here so actually let's
 

00:31:45.610 --> 00:31:49.470
penguin swim game here so actually let's
go ahead and go into the app now the

00:31:49.470 --> 00:31:49.480
go ahead and go into the app now the
 

00:31:49.480 --> 00:31:52.260
go ahead and go into the app now the
activity and leave it and let me

00:31:52.260 --> 00:31:52.270
activity and leave it and let me
 

00:31:52.270 --> 00:31:57.120
activity and leave it and let me
actually do another heap dump all right

00:31:57.120 --> 00:31:57.130
actually do another heap dump all right
 

00:31:57.130 --> 00:31:58.680
actually do another heap dump all right
so we're about to get a bunch of heap

00:31:58.680 --> 00:31:58.690
so we're about to get a bunch of heap
 

00:31:58.690 --> 00:32:00.660
so we're about to get a bunch of heap
dump information here so I know that the

00:32:00.660 --> 00:32:00.670
dump information here so I know that the
 

00:32:00.670 --> 00:32:03.720
dump information here so I know that the
fragment inside this activity is called

00:32:03.720 --> 00:32:03.730
fragment inside this activity is called
 

00:32:03.730 --> 00:32:07.140
fragment inside this activity is called
swim fragment so just like CPU we have

00:32:07.140 --> 00:32:07.150
swim fragment so just like CPU we have
 

00:32:07.150 --> 00:32:15.810
swim fragment so just like CPU we have
the filter button here and I can I can

00:32:15.810 --> 00:32:15.820
the filter button here and I can I can
 

00:32:15.820 --> 00:32:17.790
the filter button here and I can I can
filter out all of the different objects

00:32:17.790 --> 00:32:17.800
filter out all of the different objects
 

00:32:17.800 --> 00:32:19.770
filter out all of the different objects
and find that yep sure enough this

00:32:19.770 --> 00:32:19.780
and find that yep sure enough this
 

00:32:19.780 --> 00:32:21.780
and find that yep sure enough this
swimming fragment activity fragment is

00:32:21.780 --> 00:32:21.790
swimming fragment activity fragment is
 

00:32:21.790 --> 00:32:23.880
swimming fragment activity fragment is
still alive and I'll click on it I'll

00:32:23.880 --> 00:32:23.890
still alive and I'll click on it I'll
 

00:32:23.890 --> 00:32:26.130
still alive and I'll click on it I'll
select the active instance there is a

00:32:26.130 --> 00:32:26.140
select the active instance there is a
 

00:32:26.140 --> 00:32:28.680
select the active instance there is a
lot going on here so I'm gonna take a

00:32:28.680 --> 00:32:28.690
lot going on here so I'm gonna take a
 

00:32:28.690 --> 00:32:30.870
lot going on here so I'm gonna take a
moment to sort of explain a little bit

00:32:30.870 --> 00:32:30.880
moment to sort of explain a little bit
 

00:32:30.880 --> 00:32:32.700
moment to sort of explain a little bit
and let's just take a step back and and

00:32:32.700 --> 00:32:32.710
and let's just take a step back and and
 

00:32:32.710 --> 00:32:34.590
and let's just take a step back and and
and take a moment to absorb it so I

00:32:34.590 --> 00:32:34.600
and take a moment to absorb it so I
 

00:32:34.600 --> 00:32:36.420
and take a moment to absorb it so I
really want to explain what this depth

00:32:36.420 --> 00:32:36.430
really want to explain what this depth
 

00:32:36.430 --> 00:32:40.440
really want to explain what this depth
idea is so imagine all your Java memory

00:32:40.440 --> 00:32:40.450
idea is so imagine all your Java memory
 

00:32:40.450 --> 00:32:42.420
idea is so imagine all your Java memory
that can be cleaned up by the garbage

00:32:42.420 --> 00:32:42.430
that can be cleaned up by the garbage
 

00:32:42.430 --> 00:32:44.280
that can be cleaned up by the garbage
collector collector lives in this heap

00:32:44.280 --> 00:32:44.290
collector collector lives in this heap
 

00:32:44.290 --> 00:32:47.070
collector collector lives in this heap
there are some special Java objects that

00:32:47.070 --> 00:32:47.080
there are some special Java objects that
 

00:32:47.080 --> 00:32:49.080
there are some special Java objects that
live outside of this circle those are

00:32:49.080 --> 00:32:49.090
live outside of this circle those are
 

00:32:49.090 --> 00:32:51.900
live outside of this circle those are
called GC roots when you create a new

00:32:51.900 --> 00:32:51.910
called GC roots when you create a new
 

00:32:51.910 --> 00:32:53.850
called GC roots when you create a new
thread that basically creates this

00:32:53.850 --> 00:32:53.860
thread that basically creates this
 

00:32:53.860 --> 00:32:56.280
thread that basically creates this
special GC root or static variables are

00:32:56.280 --> 00:32:56.290
special GC root or static variables are
 

00:32:56.290 --> 00:32:59.040
special GC root or static variables are
an instance of a GC root so what ends up

00:32:59.040 --> 00:32:59.050
an instance of a GC root so what ends up
 

00:32:59.050 --> 00:33:01.290
an instance of a GC root so what ends up
happening is you might in a thread

00:33:01.290 --> 00:33:01.300
happening is you might in a thread
 

00:33:01.300 --> 00:33:04.260
happening is you might in a thread
create an instance of some class that it

00:33:04.260 --> 00:33:04.270
create an instance of some class that it
 

00:33:04.270 --> 00:33:05.700
create an instance of some class that it
in turn creates an instance of another

00:33:05.700 --> 00:33:05.710
in turn creates an instance of another
 

00:33:05.710 --> 00:33:08.010
in turn creates an instance of another
class and it in turn so on and so forth

00:33:08.010 --> 00:33:08.020
class and it in turn so on and so forth
 

00:33:08.020 --> 00:33:10.080
class and it in turn so on and so forth
and so basically what you're doing is

00:33:10.080 --> 00:33:10.090
and so basically what you're doing is
 

00:33:10.090 --> 00:33:11.340
and so basically what you're doing is
you're creating this long chain of

00:33:11.340 --> 00:33:11.350
you're creating this long chain of
 

00:33:11.350 --> 00:33:14.640
you're creating this long chain of
objects and each item in that chain has

00:33:14.640 --> 00:33:14.650
objects and each item in that chain has
 

00:33:14.650 --> 00:33:16.120
objects and each item in that chain has
a further

00:33:16.120 --> 00:33:16.130
a further
 

00:33:16.130 --> 00:33:20.050
a further
their depth from the GC root now you may

00:33:20.050 --> 00:33:20.060
their depth from the GC root now you may
 

00:33:20.060 --> 00:33:22.060
their depth from the GC root now you may
have heard that cycles are not a problem

00:33:22.060 --> 00:33:22.070
have heard that cycles are not a problem
 

00:33:22.070 --> 00:33:24.280
have heard that cycles are not a problem
to the garbage collector I can point at

00:33:24.280 --> 00:33:24.290
to the garbage collector I can point at
 

00:33:24.290 --> 00:33:25.990
to the garbage collector I can point at
you and then you point at you and you

00:33:25.990 --> 00:33:26.000
you and then you point at you and you
 

00:33:26.000 --> 00:33:27.670
you and then you point at you and you
point back at me but if we can't all be

00:33:27.670 --> 00:33:27.680
point back at me but if we can't all be
 

00:33:27.680 --> 00:33:30.460
point back at me but if we can't all be
reached that'll all get removed by the

00:33:30.460 --> 00:33:30.470
reached that'll all get removed by the
 

00:33:30.470 --> 00:33:33.130
reached that'll all get removed by the
garbage collector so one of the things

00:33:33.130 --> 00:33:33.140
garbage collector so one of the things
 

00:33:33.140 --> 00:33:35.140
garbage collector so one of the things
to note is when you take a heap dump you

00:33:35.140 --> 00:33:35.150
to note is when you take a heap dump you
 

00:33:35.150 --> 00:33:37.330
to note is when you take a heap dump you
might see a scary amount of things

00:33:37.330 --> 00:33:37.340
might see a scary amount of things
 

00:33:37.340 --> 00:33:40.570
might see a scary amount of things
holding on to Mike on my instance but a

00:33:40.570 --> 00:33:40.580
holding on to Mike on my instance but a
 

00:33:40.580 --> 00:33:42.820
holding on to Mike on my instance but a
lot of those are harmless a lot of them

00:33:42.820 --> 00:33:42.830
lot of those are harmless a lot of them
 

00:33:42.830 --> 00:33:45.280
lot of those are harmless a lot of them
are potentially just cycles and one way

00:33:45.280 --> 00:33:45.290
are potentially just cycles and one way
 

00:33:45.290 --> 00:33:46.840
are potentially just cycles and one way
that you can kind of know it's not

00:33:46.840 --> 00:33:46.850
that you can kind of know it's not
 

00:33:46.850 --> 00:33:49.150
that you can kind of know it's not
always true but it's a good heuristic is

00:33:49.150 --> 00:33:49.160
always true but it's a good heuristic is
 

00:33:49.160 --> 00:33:52.450
always true but it's a good heuristic is
if there the depth is greater than your

00:33:52.450 --> 00:33:52.460
if there the depth is greater than your
 

00:33:52.460 --> 00:33:55.030
if there the depth is greater than your
own depth so let me explain why that is

00:33:55.030 --> 00:33:55.040
own depth so let me explain why that is
 

00:33:55.040 --> 00:33:57.430
own depth so let me explain why that is
so imagine that the garbage collection

00:33:57.430 --> 00:33:57.440
so imagine that the garbage collection
 

00:33:57.440 --> 00:34:01.030
so imagine that the garbage collection
route points to you you create a child

00:34:01.030 --> 00:34:01.040
route points to you you create a child
 

00:34:01.040 --> 00:34:03.040
route points to you you create a child
instance and one of the things you do is

00:34:03.040 --> 00:34:03.050
instance and one of the things you do is
 

00:34:03.050 --> 00:34:04.600
instance and one of the things you do is
you give it your this pointer so it's

00:34:04.600 --> 00:34:04.610
you give it your this pointer so it's
 

00:34:04.610 --> 00:34:05.980
you give it your this pointer so it's
pointing back at you that's a very

00:34:05.980 --> 00:34:05.990
pointing back at you that's a very
 

00:34:05.990 --> 00:34:07.570
pointing back at you that's a very
common thing here you point back at me

00:34:07.570 --> 00:34:07.580
common thing here you point back at me
 

00:34:07.580 --> 00:34:09.100
common thing here you point back at me
you're my child but you know who your

00:34:09.100 --> 00:34:09.110
you're my child but you know who your
 

00:34:09.110 --> 00:34:12.460
you're my child but you know who your
parent is so that means my depth is then

00:34:12.460 --> 00:34:12.470
parent is so that means my depth is then
 

00:34:12.470 --> 00:34:14.860
parent is so that means my depth is then
going to be added on to that this

00:34:14.860 --> 00:34:14.870
going to be added on to that this
 

00:34:14.870 --> 00:34:17.110
going to be added on to that this
pointers debt so that's the reason that

00:34:17.110 --> 00:34:17.120
pointers debt so that's the reason that
 

00:34:17.120 --> 00:34:18.700
pointers debt so that's the reason that
some of these depths here may indicate

00:34:18.700 --> 00:34:18.710
some of these depths here may indicate
 

00:34:18.710 --> 00:34:20.169
some of these depths here may indicate
that even though you're seeing that it's

00:34:20.169 --> 00:34:20.179
that even though you're seeing that it's
 

00:34:20.179 --> 00:34:21.040
that even though you're seeing that it's
not an issue

00:34:21.040 --> 00:34:21.050
not an issue
 

00:34:21.050 --> 00:34:22.930
not an issue
you'll also notice here that there's a

00:34:22.930 --> 00:34:22.940
you'll also notice here that there's a
 

00:34:22.940 --> 00:34:24.909
you'll also notice here that there's a
few of these items in the depth column

00:34:24.909 --> 00:34:24.919
few of these items in the depth column
 

00:34:24.919 --> 00:34:27.820
few of these items in the depth column
where the depth is blank that means that

00:34:27.820 --> 00:34:27.830
where the depth is blank that means that
 

00:34:27.830 --> 00:34:29.560
where the depth is blank that means that
there's actually no way to reach these

00:34:29.560 --> 00:34:29.570
there's actually no way to reach these
 

00:34:29.570 --> 00:34:31.960
there's actually no way to reach these
at the moment from the garbage collect

00:34:31.960 --> 00:34:31.970
at the moment from the garbage collect
 

00:34:31.970 --> 00:34:34.240
at the moment from the garbage collect
from any garbage collection route so it

00:34:34.240 --> 00:34:34.250
from any garbage collection route so it
 

00:34:34.250 --> 00:34:35.710
from any garbage collection route so it
will eventually be cleaned up even

00:34:35.710 --> 00:34:35.720
will eventually be cleaned up even
 

00:34:35.720 --> 00:34:37.060
will eventually be cleaned up even
though it's showing up in the heap dump

00:34:37.060 --> 00:34:37.070
though it's showing up in the heap dump
 

00:34:37.070 --> 00:34:39.220
though it's showing up in the heap dump
right now you don't have to worry about

00:34:39.220 --> 00:34:39.230
right now you don't have to worry about
 

00:34:39.230 --> 00:34:41.290
right now you don't have to worry about
it just ignore it it's as good as

00:34:41.290 --> 00:34:41.300
it just ignore it it's as good as
 

00:34:41.300 --> 00:34:43.510
it just ignore it it's as good as
reclaimed just to make sure we

00:34:43.510 --> 00:34:43.520
reclaimed just to make sure we
 

00:34:43.520 --> 00:34:44.919
reclaimed just to make sure we
understand this a little bit with a

00:34:44.919 --> 00:34:44.929
understand this a little bit with a
 

00:34:44.929 --> 00:34:46.869
understand this a little bit with a
concrete example I'm actually going to

00:34:46.869 --> 00:34:46.879
concrete example I'm actually going to
 

00:34:46.879 --> 00:34:49.300
concrete example I'm actually going to
look here at this code which is not the

00:34:49.300 --> 00:34:49.310
look here at this code which is not the
 

00:34:49.310 --> 00:34:51.010
look here at this code which is not the
cause of our memory leak our depth is

00:34:51.010 --> 00:34:51.020
cause of our memory leak our depth is
 

00:34:51.020 --> 00:34:55.810
cause of our memory leak our depth is
one this this items depth is two so what

00:34:55.810 --> 00:34:55.820
one this this items depth is two so what
 

00:34:55.820 --> 00:34:57.520
one this this items depth is two so what
this is saying is somewhere there's an

00:34:57.520 --> 00:34:57.530
this is saying is somewhere there's an
 

00:34:57.530 --> 00:35:00.400
this is saying is somewhere there's an
instance of a score view class and that

00:35:00.400 --> 00:35:00.410
instance of a score view class and that
 

00:35:00.410 --> 00:35:02.260
instance of a score view class and that
score view class has a variable called

00:35:02.260 --> 00:35:02.270
score view class has a variable called
 

00:35:02.270 --> 00:35:05.350
score view class has a variable called
share click listener whose value is me

00:35:05.350 --> 00:35:05.360
share click listener whose value is me
 

00:35:05.360 --> 00:35:09.420
share click listener whose value is me
so let's go ahead and take a look at

00:35:09.420 --> 00:35:09.430
so let's go ahead and take a look at
 

00:35:09.430 --> 00:35:12.250
so let's go ahead and take a look at
swimming fragment and I'm gonna search

00:35:12.250 --> 00:35:12.260
swimming fragment and I'm gonna search
 

00:35:12.260 --> 00:35:16.630
swimming fragment and I'm gonna search
for get score of you so before when I

00:35:16.630 --> 00:35:16.640
for get score of you so before when I
 

00:35:16.640 --> 00:35:17.830
for get score of you so before when I
saw this I was trying to look through

00:35:17.830 --> 00:35:17.840
saw this I was trying to look through
 

00:35:17.840 --> 00:35:18.820
saw this I was trying to look through
the code I said there's got to be some

00:35:18.820 --> 00:35:18.830
the code I said there's got to be some
 

00:35:18.830 --> 00:35:20.320
the code I said there's got to be some
way that I'm gonna get a score of you

00:35:20.320 --> 00:35:20.330
way that I'm gonna get a score of you
 

00:35:20.330 --> 00:35:22.060
way that I'm gonna get a score of you
that points at me and there's this get

00:35:22.060 --> 00:35:22.070
that points at me and there's this get
 

00:35:22.070 --> 00:35:23.800
that points at me and there's this get
score view method inside my swimming

00:35:23.800 --> 00:35:23.810
score view method inside my swimming
 

00:35:23.810 --> 00:35:25.960
score view method inside my swimming
fragment if I jump to it what you're

00:35:25.960 --> 00:35:25.970
fragment if I jump to it what you're
 

00:35:25.970 --> 00:35:28.300
fragment if I jump to it what you're
gonna see is yep we create one and we

00:35:28.300 --> 00:35:28.310
gonna see is yep we create one and we
 

00:35:28.310 --> 00:35:29.740
gonna see is yep we create one and we
pass into this pointer

00:35:29.740 --> 00:35:29.750
pass into this pointer
 

00:35:29.750 --> 00:35:32.080
pass into this pointer
so that's sort of explaining why there

00:35:32.080 --> 00:35:32.090
so that's sort of explaining why there
 

00:35:32.090 --> 00:35:34.540
so that's sort of explaining why there
is a cycle there I don't have to worry

00:35:34.540 --> 00:35:34.550
is a cycle there I don't have to worry
 

00:35:34.550 --> 00:35:36.010
is a cycle there I don't have to worry
about it but at least today sort of

00:35:36.010 --> 00:35:36.020
about it but at least today sort of
 

00:35:36.020 --> 00:35:37.570
about it but at least today sort of
explains why it's showing up in the heap

00:35:37.570 --> 00:35:37.580
explains why it's showing up in the heap
 

00:35:37.580 --> 00:35:39.700
explains why it's showing up in the heap
dump now you're also noticed that's

00:35:39.700 --> 00:35:39.710
dump now you're also noticed that's
 

00:35:39.710 --> 00:35:41.950
dump now you're also noticed that's
there's a lot of this dollar signs zero

00:35:41.950 --> 00:35:41.960
there's a lot of this dollar signs zero
 

00:35:41.960 --> 00:35:44.710
there's a lot of this dollar signs zero
symbols what's going on here because

00:35:44.710 --> 00:35:44.720
symbols what's going on here because
 

00:35:44.720 --> 00:35:46.720
symbols what's going on here because
you're gonna see it a lot you all know

00:35:46.720 --> 00:35:46.730
you're gonna see it a lot you all know
 

00:35:46.730 --> 00:35:49.450
you're gonna see it a lot you all know
what that this pointer is but you if you

00:35:49.450 --> 00:35:49.460
what that this pointer is but you if you
 

00:35:49.460 --> 00:35:51.400
what that this pointer is but you if you
are an inner class if you're a nested

00:35:51.400 --> 00:35:51.410
are an inner class if you're a nested
 

00:35:51.410 --> 00:35:53.020
are an inner class if you're a nested
class and you need to have access to

00:35:53.020 --> 00:35:53.030
class and you need to have access to
 

00:35:53.030 --> 00:35:55.240
class and you need to have access to
your outer classes fields the way that

00:35:55.240 --> 00:35:55.250
your outer classes fields the way that
 

00:35:55.250 --> 00:35:59.280
your outer classes fields the way that
it works is the compiler generates a

00:35:59.280 --> 00:35:59.290
it works is the compiler generates a
 

00:35:59.290 --> 00:36:02.020
it works is the compiler generates a
synthetic variable and instead of

00:36:02.020 --> 00:36:02.030
synthetic variable and instead of
 

00:36:02.030 --> 00:36:03.250
synthetic variable and instead of
calling it this because that's taken it

00:36:03.250 --> 00:36:03.260
calling it this because that's taken it
 

00:36:03.260 --> 00:36:04.900
calling it this because that's taken it
calls it this dollar signs here so this

00:36:04.900 --> 00:36:04.910
calls it this dollar signs here so this
 

00:36:04.910 --> 00:36:07.000
calls it this dollar signs here so this
dollar sign zero means the this that's

00:36:07.000 --> 00:36:07.010
dollar sign zero means the this that's
 

00:36:07.010 --> 00:36:09.370
dollar sign zero means the this that's
one level out of my scope and anytime

00:36:09.370 --> 00:36:09.380
one level out of my scope and anytime
 

00:36:09.380 --> 00:36:11.530
one level out of my scope and anytime
you create an inner class that has a

00:36:11.530 --> 00:36:11.540
you create an inner class that has a
 

00:36:11.540 --> 00:36:14.410
you create an inner class that has a
reference to its outer class or you

00:36:14.410 --> 00:36:14.420
reference to its outer class or you
 

00:36:14.420 --> 00:36:16.720
reference to its outer class or you
create a closure an anonymous class

00:36:16.720 --> 00:36:16.730
create a closure an anonymous class
 

00:36:16.730 --> 00:36:18.820
create a closure an anonymous class
instance it's gonna have that so you

00:36:18.820 --> 00:36:18.830
instance it's gonna have that so you
 

00:36:18.830 --> 00:36:20.470
instance it's gonna have that so you
know if you're all using lambdas in your

00:36:20.470 --> 00:36:20.480
know if you're all using lambdas in your
 

00:36:20.480 --> 00:36:22.330
know if you're all using lambdas in your
code or anonymous classes you're gonna

00:36:22.330 --> 00:36:22.340
code or anonymous classes you're gonna
 

00:36:22.340 --> 00:36:26.380
code or anonymous classes you're gonna
see a lot of these dist:0 m is it's a GC

00:36:26.380 --> 00:36:26.390
see a lot of these dist:0 m is it's a GC
 

00:36:26.390 --> 00:36:28.150
see a lot of these dist:0 m is it's a GC
root it makes it really suspicious so

00:36:28.150 --> 00:36:28.160
root it makes it really suspicious so
 

00:36:28.160 --> 00:36:31.260
root it makes it really suspicious so
let's jump to the source right now

00:36:31.260 --> 00:36:31.270
let's jump to the source right now
 

00:36:31.270 --> 00:36:33.609
let's jump to the source right now
hopefully you know I might look at this

00:36:33.609 --> 00:36:33.619
hopefully you know I might look at this
 

00:36:33.619 --> 00:36:35.290
hopefully you know I might look at this
and say oh I wrote this long-running

00:36:35.290 --> 00:36:35.300
and say oh I wrote this long-running
 

00:36:35.300 --> 00:36:37.900
and say oh I wrote this long-running
task as you can see it's not a static

00:36:37.900 --> 00:36:37.910
task as you can see it's not a static
 

00:36:37.910 --> 00:36:39.760
task as you can see it's not a static
class it's a final class so if it's not

00:36:39.760 --> 00:36:39.770
class it's a final class so if it's not
 

00:36:39.770 --> 00:36:41.680
class it's a final class so if it's not
static it's gonna hold on to a reference

00:36:41.680 --> 00:36:41.690
static it's gonna hold on to a reference
 

00:36:41.690 --> 00:36:43.870
static it's gonna hold on to a reference
to the parent class that's what's going

00:36:43.870 --> 00:36:43.880
to the parent class that's what's going
 

00:36:43.880 --> 00:36:45.670
to the parent class that's what's going
on here and I might say oh this

00:36:45.670 --> 00:36:45.680
on here and I might say oh this
 

00:36:45.680 --> 00:36:48.010
on here and I might say oh this
long-running task I created it but I

00:36:48.010 --> 00:36:48.020
long-running task I created it but I
 

00:36:48.020 --> 00:36:50.079
long-running task I created it but I
forgot to cancel it so let's go ahead

00:36:50.079 --> 00:36:50.089
forgot to cancel it so let's go ahead
 

00:36:50.089 --> 00:36:51.010
forgot to cancel it so let's go ahead
and take a look here

00:36:51.010 --> 00:36:51.020
and take a look here
 

00:36:51.020 --> 00:36:53.530
and take a look here
yeah sure enough I left it commented out

00:36:53.530 --> 00:36:53.540
yeah sure enough I left it commented out
 

00:36:53.540 --> 00:36:56.230
yeah sure enough I left it commented out
for no good reason let me uncomment it

00:36:56.230 --> 00:36:56.240
for no good reason let me uncomment it
 

00:36:56.240 --> 00:37:00.970
for no good reason let me uncomment it
there and let's relaunch so what we're

00:37:00.970 --> 00:37:00.980
there and let's relaunch so what we're
 

00:37:00.980 --> 00:37:02.859
there and let's relaunch so what we're
gonna do now is let me just make sure

00:37:02.859 --> 00:37:02.869
gonna do now is let me just make sure
 

00:37:02.869 --> 00:37:05.950
gonna do now is let me just make sure
it's saved there we go what we're gonna

00:37:05.950 --> 00:37:05.960
it's saved there we go what we're gonna
 

00:37:05.960 --> 00:37:08.890
it's saved there we go what we're gonna
do now is reboot it just to make sure

00:37:08.890 --> 00:37:08.900
do now is reboot it just to make sure
 

00:37:08.900 --> 00:37:11.950
do now is reboot it just to make sure
that in fact this swimming fragment was

00:37:11.950 --> 00:37:11.960
that in fact this swimming fragment was
 

00:37:11.960 --> 00:37:14.470
that in fact this swimming fragment was
released one of the things to keep an

00:37:14.470 --> 00:37:14.480
released one of the things to keep an
 

00:37:14.480 --> 00:37:15.430
released one of the things to keep an
eye out for when you're hunting for

00:37:15.430 --> 00:37:15.440
eye out for when you're hunting for
 

00:37:15.440 --> 00:37:18.280
eye out for when you're hunting for
memory leaks is static variables or

00:37:18.280 --> 00:37:18.290
memory leaks is static variables or
 

00:37:18.290 --> 00:37:20.260
memory leaks is static variables or
singleton classes that are holding on to

00:37:20.260 --> 00:37:20.270
singleton classes that are holding on to
 

00:37:20.270 --> 00:37:23.200
singleton classes that are holding on to
your class or registering yourself with

00:37:23.200 --> 00:37:23.210
your class or registering yourself with
 

00:37:23.210 --> 00:37:24.910
your class or registering yourself with
a listener but forgetting to remove it

00:37:24.910 --> 00:37:24.920
a listener but forgetting to remove it
 

00:37:24.920 --> 00:37:27.730
a listener but forgetting to remove it
or any of these inner classes that for

00:37:27.730 --> 00:37:27.740
or any of these inner classes that for
 

00:37:27.740 --> 00:37:29.849
or any of these inner classes that for
some reason may not end up you know

00:37:29.849 --> 00:37:29.859
some reason may not end up you know
 

00:37:29.859 --> 00:37:32.260
some reason may not end up you know
stopping and they're still running even

00:37:32.260 --> 00:37:32.270
stopping and they're still running even
 

00:37:32.270 --> 00:37:34.349
stopping and they're still running even
though the activity is trying to exit

00:37:34.349 --> 00:37:34.359
though the activity is trying to exit
 

00:37:34.359 --> 00:37:39.370
though the activity is trying to exit
are we profiling here yes we are still

00:37:39.370 --> 00:37:39.380
are we profiling here yes we are still
 

00:37:39.380 --> 00:37:41.470
are we profiling here yes we are still
going and then another thing I want to

00:37:41.470 --> 00:37:41.480
going and then another thing I want to
 

00:37:41.480 --> 00:37:43.510
going and then another thing I want to
mention is it's not always gonna be this

00:37:43.510 --> 00:37:43.520
mention is it's not always gonna be this
 

00:37:43.520 --> 00:37:45.070
mention is it's not always gonna be this
you're not always gonna have this

00:37:45.070 --> 00:37:45.080
you're not always gonna have this
 

00:37:45.080 --> 00:37:48.310
you're not always gonna have this
obvious culprit so in that case what

00:37:48.310 --> 00:37:48.320
obvious culprit so in that case what
 

00:37:48.320 --> 00:37:50.740
obvious culprit so in that case what
you're gonna want to do is you know I

00:37:50.740 --> 00:37:50.750
you're gonna want to do is you know I
 

00:37:50.750 --> 00:37:52.480
you're gonna want to do is you know I
would say just try to get to know the

00:37:52.480 --> 00:37:52.490
would say just try to get to know the
 

00:37:52.490 --> 00:37:54.130
would say just try to get to know the
code look for those things that I talked

00:37:54.130 --> 00:37:54.140
code look for those things that I talked
 

00:37:54.140 --> 00:37:57.250
code look for those things that I talked
about let's go ahead and enter and well

00:37:57.250 --> 00:37:57.260
about let's go ahead and enter and well
 

00:37:57.260 --> 00:38:01.990
about let's go ahead and enter and well
I get here while I talk and you know if

00:38:01.990 --> 00:38:02.000
I get here while I talk and you know if
 

00:38:02.000 --> 00:38:03.730
I get here while I talk and you know if
you've cleaned it up even if you didn't

00:38:03.730 --> 00:38:03.740
you've cleaned it up even if you didn't
 

00:38:03.740 --> 00:38:04.900
you've cleaned it up even if you didn't
find it through the heap dump the heap

00:38:04.900 --> 00:38:04.910
find it through the heap dump the heap
 

00:38:04.910 --> 00:38:06.520
find it through the heap dump the heap
dump is still gonna be the source of

00:38:06.520 --> 00:38:06.530
dump is still gonna be the source of
 

00:38:06.530 --> 00:38:08.320
dump is still gonna be the source of
truth it's still going to be the thing

00:38:08.320 --> 00:38:08.330
truth it's still going to be the thing
 

00:38:08.330 --> 00:38:10.150
truth it's still going to be the thing
that guarantees to you that your

00:38:10.150 --> 00:38:10.160
that guarantees to you that your
 

00:38:10.160 --> 00:38:12.160
that guarantees to you that your
memories actually reclaimed so I'm gonna

00:38:12.160 --> 00:38:12.170
memories actually reclaimed so I'm gonna
 

00:38:12.170 --> 00:38:13.780
memories actually reclaimed so I'm gonna
go ahead here go back into the memory

00:38:13.780 --> 00:38:13.790
go ahead here go back into the memory
 

00:38:13.790 --> 00:38:18.130
go ahead here go back into the memory
profiler I'm gonna click on the garbage

00:38:18.130 --> 00:38:18.140
profiler I'm gonna click on the garbage
 

00:38:18.140 --> 00:38:19.690
profiler I'm gonna click on the garbage
collector so you may have noticed these

00:38:19.690 --> 00:38:19.700
collector so you may have noticed these
 

00:38:19.700 --> 00:38:24.460
collector so you may have noticed these
garbage collected events automatically

00:38:24.460 --> 00:38:24.470
garbage collected events automatically
 

00:38:24.470 --> 00:38:25.600
garbage collected events automatically
at the bottom so for example there's a

00:38:25.600 --> 00:38:25.610
at the bottom so for example there's a
 

00:38:25.610 --> 00:38:27.040
at the bottom so for example there's a
lot there that's when the garbage

00:38:27.040 --> 00:38:27.050
lot there that's when the garbage
 

00:38:27.050 --> 00:38:30.700
lot there that's when the garbage
collector decided to collect on its own

00:38:30.700 --> 00:38:30.710
collector decided to collect on its own
 

00:38:30.710 --> 00:38:32.560
collector decided to collect on its own
but you can also click the garbage

00:38:32.560 --> 00:38:32.570
but you can also click the garbage
 

00:38:32.570 --> 00:38:34.990
but you can also click the garbage
collection button to manually cause it

00:38:34.990 --> 00:38:35.000
collection button to manually cause it
 

00:38:35.000 --> 00:38:40.540
collection button to manually cause it
to to to get run now we still see

00:38:40.540 --> 00:38:40.550
to to to get run now we still see
 

00:38:40.550 --> 00:38:41.920
to to to get run now we still see
swimming fragment here let's see if the

00:38:41.920 --> 00:38:41.930
swimming fragment here let's see if the
 

00:38:41.930 --> 00:38:44.290
swimming fragment here let's see if the
depth is actually so as you can see

00:38:44.290 --> 00:38:44.300
depth is actually so as you can see
 

00:38:44.300 --> 00:38:45.880
depth is actually so as you can see
swimming fragment is still showing up

00:38:45.880 --> 00:38:45.890
swimming fragment is still showing up
 

00:38:45.890 --> 00:38:47.410
swimming fragment is still showing up
which is I could be nervous what

00:38:47.410 --> 00:38:47.420
which is I could be nervous what
 

00:38:47.420 --> 00:38:49.630
which is I could be nervous what
happened but the depth column here is

00:38:49.630 --> 00:38:49.640
happened but the depth column here is
 

00:38:49.640 --> 00:38:50.080
happened but the depth column here is
blank

00:38:50.080 --> 00:38:50.090
blank
 

00:38:50.090 --> 00:38:52.900
blank
everything is just basically getting is

00:38:52.900 --> 00:38:52.910
everything is just basically getting is
 

00:38:52.910 --> 00:38:54.190
everything is just basically getting is
waiting to be picked up by the garbage

00:38:54.190 --> 00:38:54.200
waiting to be picked up by the garbage
 

00:38:54.200 --> 00:38:56.260
waiting to be picked up by the garbage
collector you know you can press the

00:38:56.260 --> 00:38:56.270
collector you know you can press the
 

00:38:56.270 --> 00:38:58.150
collector you know you can press the
garbage collector a few more times one

00:38:58.150 --> 00:38:58.160
garbage collector a few more times one
 

00:38:58.160 --> 00:39:00.820
garbage collector a few more times one
trick I like to do is rotate the phone

00:39:00.820 --> 00:39:00.830
trick I like to do is rotate the phone
 

00:39:00.830 --> 00:39:03.700
trick I like to do is rotate the phone
and then rotate it again any time you

00:39:03.700 --> 00:39:03.710
and then rotate it again any time you
 

00:39:03.710 --> 00:39:05.110
and then rotate it again any time you
rotate an Android phone lots of fun

00:39:05.110 --> 00:39:05.120
rotate an Android phone lots of fun
 

00:39:05.120 --> 00:39:06.340
rotate an Android phone lots of fun
things happen it tells the garbage

00:39:06.340 --> 00:39:06.350
things happen it tells the garbage
 

00:39:06.350 --> 00:39:08.560
things happen it tells the garbage
collector things are going on so in that

00:39:08.560 --> 00:39:08.570
collector things are going on so in that
 

00:39:08.570 --> 00:39:09.790
collector things are going on so in that
case let's just do another heap dump

00:39:09.790 --> 00:39:09.800
case let's just do another heap dump
 

00:39:09.800 --> 00:39:11.980
case let's just do another heap dump
here and we'll see if the swimming

00:39:11.980 --> 00:39:11.990
here and we'll see if the swimming
 

00:39:11.990 --> 00:39:16.930
here and we'll see if the swimming
fragment is truly well and collected it

00:39:16.930 --> 00:39:16.940
fragment is truly well and collected it
 

00:39:16.940 --> 00:39:18.670
fragment is truly well and collected it
which just came with a drum roll and

00:39:18.670 --> 00:39:18.680
which just came with a drum roll and
 

00:39:18.680 --> 00:39:20.830
which just came with a drum roll and
there you go it's gone so the final

00:39:20.830 --> 00:39:20.840
there you go it's gone so the final
 

00:39:20.840 --> 00:39:22.210
there you go it's gone so the final
thing I want to quickly talk about is if

00:39:22.210 --> 00:39:22.220
thing I want to quickly talk about is if
 

00:39:22.220 --> 00:39:23.200
thing I want to quickly talk about is if
you're looking at the heap dump you're

00:39:23.200 --> 00:39:23.210
you're looking at the heap dump you're
 

00:39:23.210 --> 00:39:26.110
you're looking at the heap dump you're
not always necessarily hunting memory

00:39:26.110 --> 00:39:26.120
not always necessarily hunting memory
 

00:39:26.120 --> 00:39:28.390
not always necessarily hunting memory
leak you might not know some major class

00:39:28.390 --> 00:39:28.400
leak you might not know some major class
 

00:39:28.400 --> 00:39:30.220
leak you might not know some major class
to look out for so there's this concept

00:39:30.220 --> 00:39:30.230
to look out for so there's this concept
 

00:39:30.230 --> 00:39:32.650
to look out for so there's this concept
of shallow size and retain size so

00:39:32.650 --> 00:39:32.660
of shallow size and retain size so
 

00:39:32.660 --> 00:39:35.640
of shallow size and retain size so
shallow size is the size of a single

00:39:35.640 --> 00:39:35.650
shallow size is the size of a single
 

00:39:35.650 --> 00:39:39.010
shallow size is the size of a single
instance of some class that it's that's

00:39:39.010 --> 00:39:39.020
instance of some class that it's that's
 

00:39:39.020 --> 00:39:42.340
instance of some class that it's that's
been allocated and retained size is all

00:39:42.340 --> 00:39:42.350
been allocated and retained size is all
 

00:39:42.350 --> 00:39:44.290
been allocated and retained size is all
of the things that's holding on to so

00:39:44.290 --> 00:39:44.300
of the things that's holding on to so
 

00:39:44.300 --> 00:39:47.380
of the things that's holding on to so
what you may want to do is hunt sort

00:39:47.380 --> 00:39:47.390
what you may want to do is hunt sort
 

00:39:47.390 --> 00:39:48.820
what you may want to do is hunt sort
your shallow size for your retain size

00:39:48.820 --> 00:39:48.830
your shallow size for your retain size
 

00:39:48.830 --> 00:39:50.980
your shallow size for your retain size
maybe investigate to see if there's any

00:39:50.980 --> 00:39:50.990
maybe investigate to see if there's any
 

00:39:50.990 --> 00:39:53.500
maybe investigate to see if there's any
sort of suspicious memory things there

00:39:53.500 --> 00:39:53.510
sort of suspicious memory things there
 

00:39:53.510 --> 00:39:55.620
sort of suspicious memory things there
or maybe you clean up your design and

00:39:55.620 --> 00:39:55.630
or maybe you clean up your design and
 

00:39:55.630 --> 00:39:58.020
or maybe you clean up your design and
some memory there earlier anyway that

00:39:58.020 --> 00:39:58.030
some memory there earlier anyway that
 

00:39:58.030 --> 00:40:01.200
some memory there earlier anyway that
ends our demo and back to xiukong let's

00:40:01.200 --> 00:40:01.210
ends our demo and back to xiukong let's
 

00:40:01.210 --> 00:40:03.680
ends our demo and back to xiukong let's
go to the slides

00:40:03.680 --> 00:40:03.690
go to the slides
 

00:40:03.690 --> 00:40:08.850
go to the slides
ok cool so to recap in today's demo we

00:40:08.850 --> 00:40:08.860
ok cool so to recap in today's demo we
 

00:40:08.860 --> 00:40:11.280
ok cool so to recap in today's demo we
have shown to use CPU profiler and

00:40:11.280 --> 00:40:11.290
have shown to use CPU profiler and
 

00:40:11.290 --> 00:40:13.770
have shown to use CPU profiler and
memory profiler to get a better

00:40:13.770 --> 00:40:13.780
memory profiler to get a better
 

00:40:13.780 --> 00:40:15.840
memory profiler to get a better
understanding of the code base of the

00:40:15.840 --> 00:40:15.850
understanding of the code base of the
 

00:40:15.850 --> 00:40:18.210
understanding of the code base of the
center Center tracker app and to be

00:40:18.210 --> 00:40:18.220
center Center tracker app and to be
 

00:40:18.220 --> 00:40:20.430
center Center tracker app and to be
honest Dave and I don't know much about

00:40:20.430 --> 00:40:20.440
honest Dave and I don't know much about
 

00:40:20.440 --> 00:40:23.190
honest Dave and I don't know much about
it before we are preparing for this talk

00:40:23.190 --> 00:40:23.200
it before we are preparing for this talk
 

00:40:23.200 --> 00:40:27.900
it before we are preparing for this talk
and we also shown that we don't only use

00:40:27.900 --> 00:40:27.910
and we also shown that we don't only use
 

00:40:27.910 --> 00:40:30.750
and we also shown that we don't only use
profilers to diagnose performance issues

00:40:30.750 --> 00:40:30.760
profilers to diagnose performance issues
 

00:40:30.760 --> 00:40:33.090
profilers to diagnose performance issues
we also use the profilers to help us

00:40:33.090 --> 00:40:33.100
we also use the profilers to help us
 

00:40:33.100 --> 00:40:36.300
we also use the profilers to help us
understand the performance of this app

00:40:36.300 --> 00:40:36.310
understand the performance of this app
 

00:40:36.310 --> 00:40:40.290
understand the performance of this app
as we said before there are also Network

00:40:40.290 --> 00:40:40.300
as we said before there are also Network
 

00:40:40.300 --> 00:40:42.690
as we said before there are also Network
and energy providers in in your studio

00:40:42.690 --> 00:40:42.700
and energy providers in in your studio
 

00:40:42.700 --> 00:40:45.060
and energy providers in in your studio
but unfortunately we don't have time to

00:40:45.060 --> 00:40:45.070
but unfortunately we don't have time to
 

00:40:45.070 --> 00:40:47.310
but unfortunately we don't have time to
cover them today so please refer to our

00:40:47.310 --> 00:40:47.320
cover them today so please refer to our
 

00:40:47.320 --> 00:40:51.140
cover them today so please refer to our
online documents and talks to learn more

00:40:51.140 --> 00:40:51.150
online documents and talks to learn more
 

00:40:51.150 --> 00:40:53.970
online documents and talks to learn more
so we hope you have learned some tricks

00:40:53.970 --> 00:40:53.980
so we hope you have learned some tricks
 

00:40:53.980 --> 00:40:57.480
so we hope you have learned some tricks
and tips from our demo today we hope

00:40:57.480 --> 00:40:57.490
and tips from our demo today we hope
 

00:40:57.490 --> 00:41:00.090
and tips from our demo today we hope
they are useful when you approach your

00:41:00.090 --> 00:41:00.100
they are useful when you approach your
 

00:41:00.100 --> 00:41:02.940
they are useful when you approach your
own code base with NGO studio profilers

00:41:02.940 --> 00:41:02.950
own code base with NGO studio profilers
 

00:41:02.950 --> 00:41:05.850
own code base with NGO studio profilers
at your site thank you very much for

00:41:05.850 --> 00:41:05.860
at your site thank you very much for
 

00:41:05.860 --> 00:41:07.210
at your site thank you very much for
attending our talk

00:41:07.210 --> 00:41:07.220
attending our talk
 

00:41:07.220 --> 00:41:10.570
attending our talk
[Applause]

00:41:10.570 --> 00:41:10.580
[Applause]
 

00:41:10.580 --> 00:41:26.659
[Applause]
[Music]

