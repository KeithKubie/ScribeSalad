WEBVTT
Kind: captions
Language: en

00:00:00.400 --> 00:00:03.280
So elections can go sour in lots of ways.

00:00:03.340 --> 00:00:06.420
I mean, somebody might try to manipulate the elections if they're on the,

00:00:06.426 --> 00:00:09.750
if the only results are on the computer, someone could manipulate the computer somehow.

00:00:10.120 --> 00:00:13.220
So for that reason I like to have elections based on paper ballots.

00:00:13.640 --> 00:00:15.400
Paper ones are less open to manipulation,

00:00:15.400 --> 00:00:17.120
yeah, a computer, particularly one

00:00:17.130 --> 00:00:19.289
that's, might be connected to the internet, is terribly vulnerable.

00:00:19.650 --> 00:00:25.590
Somebody's counted the paper ballots and announced the result. But you might still be a bit skeptical. You should be skeptical, right?

00:00:25.590 --> 00:00:30.539
I mean this is important to them. Well the loser will be skeptical anyway, for sure. And so you want to

00:00:30.849 --> 00:00:37.049
process the post-election audit, is what we call it, for really convincing the loser that the result, the announced result, is the right result.

00:00:37.270 --> 00:00:40.649
And, so there's lots of techniques for that. I can describe one of them that I like to you.

00:00:40.960 --> 00:00:48.180
But post-election audit takes the pile of cast paper ballots and does a statistical sample to see if the

00:00:48.260 --> 00:00:49.620
outcome is consistent.

00:00:49.920 --> 00:00:53.039
Yeah, if you have an election with a million voters, you know, recounting

00:00:53.289 --> 00:00:57.689
all of the ballots by hand, which is what a recount is about, that's a lot of work.

00:00:57.789 --> 00:01:02.699
But, you know, a statistical recount, you might have to look just a hundred ballots or something like that, and say,

00:01:02.700 --> 00:01:04.500
yep, that's consistent, you can stop there.

00:01:04.500 --> 00:01:08.420
So they can be very efficient because of the statistics involved. Even for very very large states or jurisdictions.

00:01:09.000 --> 00:01:10.920
Just looking at a few ballots.

00:01:10.920 --> 00:01:15.400
You know, we've seen that already in the real world with polling and things like that, you know, statistical samples

00:01:15.700 --> 00:01:19.720
give you confidence of the outcome. So you take a random sample, you do some checking.

00:01:20.240 --> 00:01:24.440
You look at the random sample by hand, and not by machine, because you're not trusting the machines here.

00:01:24.450 --> 00:01:27.900
So you look at the random sample by hand, you see well who won the sample.

00:01:27.900 --> 00:01:34.229
But you may also do some other computations, as I'll describe, for checking how likely it is that that sample is consistent with

00:01:34.780 --> 00:01:39.570
an outcome that was announced. Maybe that the sample is too small that you really can't tell

00:01:40.210 --> 00:01:46.229
who won in the overall election with much confidence from the sample. And so the overall audit has a higher higher level loop

00:01:46.360 --> 00:01:49.139
higher level processes, draw a sample, check that sample,

00:01:49.140 --> 00:01:52.140
maybe the answer is draw more, make the sample larger.

00:01:52.140 --> 00:01:57.029
So you might go from a hundred ballots to two hundred ballots, then you check a two hundred ballot sample, and then maybe you're done.

00:01:57.029 --> 00:02:01.080
So there's many different ways of, of doing this, and part of it depends on the kind of election you're having.

00:02:01.280 --> 00:02:02.640
So let's imagine

00:02:02.640 --> 00:02:06.750
we have a first past the post, or a plurality election, so whoever gets the most votes wins.

00:02:06.750 --> 00:02:12.569
And there, the math is pretty simple. And we'd like to check whether a pile of cast ballots

00:02:13.300 --> 00:02:16.689
is really consistent with the, with the announced outcome. So we want to do an audit.

00:02:16.690 --> 00:02:22.869
How do I could we do that? So let me illustrate that with with this pile here -  pile of cast ballots for Alice or Bob.

00:02:23.300 --> 00:02:29.410
That's the whole election, right? So we've got a, this is a small county or something that's only got sixteen ballots.

00:02:29.410 --> 00:02:34.240
So you can imagine it's not sixteen, but sixteen hundred or sixteen million, but it's a big pile of paper,

00:02:34.310 --> 00:02:37.510
and we don't really want to look at all in order to

00:02:38.270 --> 00:02:41.020
see who won. But it's been announced that Alice won.

00:02:41.020 --> 00:02:45.460
And we want to check that, is that, is that correct. You can flip through it and sort of look, and say, yeah,

00:02:45.590 --> 00:02:51.250
some Alices, some Bobs, and maybe she won by 11 to 5, or 10 to 6 or something like that.

00:02:51.250 --> 00:02:55.089
There's some count. We don't need to verify the count as much as we want to verify the winner.

00:02:55.280 --> 00:02:58.690
Really, it does, if the counts off a little bit, maybe that doesn't matter so much.

00:02:58.690 --> 00:03:04.899
It's interesting but it's the real question is who won the election. And we have been told that Alice won, and

00:03:05.630 --> 00:03:10.089
we'd like to check that. We don't really trust the person who counted, or we were the loser,

00:03:10.820 --> 00:03:17.469
and we're Bob, if we're told that Bob lost, so we're Bob, and Bob is distrustful of the process. He wants to have his people

00:03:17.720 --> 00:03:22.880
participate with the election officials in an audit, and to confirm that yeah he did lose the election.

00:03:22.880 --> 00:03:24.060
Or maybe he didn't.

00:03:24.420 --> 00:03:26.020
Okay, how do we do an audit?

00:03:26.030 --> 00:03:27.310
There's a couple of ways of doing it.

00:03:27.310 --> 00:03:32.980
I'm gonna describe one that's called the Bayesian audit that was developed by a student of mine, Emily Shen, and myself.

00:03:32.980 --> 00:03:38.049
But like most audits, it starts with a sample. So we could take a sample of the draw, draw a few samples,

00:03:38.050 --> 00:03:42.100
let's take, you know, here's one. I'm just drawing at random. Here's one.

00:03:43.580 --> 00:03:49.419
And here's, you choose some initial size of the sample. So there's our sample. It looks pretty much like it's an Alice win,

00:03:49.420 --> 00:03:51.550
but that's just a sample, and who knows whether that's

00:03:51.709 --> 00:03:55.749
data to really tell. And it depends a bit on how close the election is. If it's a very

00:03:55.910 --> 00:04:01.660
close election a small sample like this may not be enough. All right, so what do we do? So we've got the sample.

00:04:01.660 --> 00:04:03.300
We can see who won the sample.

00:04:03.300 --> 00:04:05.440
The truth, of course, is who won in the whole pile,

00:04:05.690 --> 00:04:09.040
not who won in just the sample. The sample could be misleading.

00:04:09.380 --> 00:04:14.949
The sample could be too small. The sample might have too much of the loser's ballots, so, so we have to have some process of

00:04:15.500 --> 00:04:20.080
figuring out what the whole suite of, the whole collection of ballots might have looked like.

00:04:20.840 --> 00:04:23.640
You'd sort of like to do some unsampling.

00:04:24.040 --> 00:04:27.220
That's sort of a funny notion, but you'd like to take the sample, and

00:04:27.870 --> 00:04:32.989
expand it out in some way to, without having to look at the ballots, we only want to look at these ballots.

00:04:32.990 --> 00:04:37.250
But it's, only looking at these ballots, we'd like to unsample, which is to come up with a

00:04:37.949 --> 00:04:42.529
prototype, or an estimate, of what the whole set of ballots might have looked like. And we can do that many times.

00:04:43.020 --> 00:04:47.509
So let's, let's try that once. So here's a sample of four. What, what kind of

00:04:48.090 --> 00:04:54.829
set of, we had, what, 16 ballots altogether what set of 16 ballots might there have been that could have produced such a sample?

00:04:55.500 --> 00:04:59.359
And so in a probabilistic sense, we're drawing from the posterior. We have a

00:05:00.120 --> 00:05:03.080
well-defined distribution on the set of all possible things.

00:05:03.420 --> 00:05:08.300
But it's easy to describe this, it's beautiful technique due to Pólya, called Pólya's Urn, which

00:05:08.400 --> 00:05:12.259
allows you to grow a sample to a larger thing that it might have come from.

00:05:12.900 --> 00:05:17.539
And so we do that. We pick one of these at random. Let's say I pick, I happen to pick this one.

00:05:18.870 --> 00:05:23.539
Bob. Pick one out, and put two back in, and so I've got a sample of size four,

00:05:23.539 --> 00:05:26.628
I'm going to grow it up by one, to a sample of size five.

00:05:26.629 --> 00:05:31.849
I'm gonna make a copy of whatever I drew. So here's Bob. I put another Bob and I'll write it in green,

00:05:32.430 --> 00:05:36.889
so you know it's been copied. So now I've got a sample, sample of size five.

00:05:37.440 --> 00:05:42.769
This isn't really a sample from what came here. It is sort of my Pólya's Urn grown sample. Now it's three to two.

00:05:43.289 --> 00:05:48.528
Well, whatever. But we had 16 originally, so we want to repeat this process, so we draw another one a random. Well,

00:05:48.529 --> 00:05:54.588
maybe I draw an Alice. So I'll put another Alice, I pick one out and put it back, together with a copy of it.

00:05:55.050 --> 00:05:56.879
So now I've got

00:05:56.879 --> 00:06:01.459
six ballots. That's cool. So now I've grown it a bit. So now, now it's four to two.

00:06:02.039 --> 00:06:06.499
And I can continue this process. I pick one at random. Maybe I pick one that I copied already.

00:06:07.229 --> 00:06:08.849
I copy that and

00:06:08.849 --> 00:06:12.139
put it in. So you can see how this would go. Let's, let's do this.

00:06:13.620 --> 00:06:15.620
So I've now got a four to three.

00:06:15.750 --> 00:06:20.149
So I want to grow up to sixteen, so I pick one at random, got an Alice,

00:06:20.879 --> 00:06:27.709
make a copy of Alice. So at the end of an urn process we've got sixteen again, and we could pretend like that's the full,

00:06:28.379 --> 00:06:31.699
the full cast set of cast ballots, so we can see who won, and so maybe Alice won.

00:06:31.770 --> 00:06:37.589
So we can put on our chart and say Alice won that simulation. These are really simulations, so Alice won one.

00:06:37.589 --> 00:06:39.259
But there was uncertainty there.

00:06:39.259 --> 00:06:45.229
We could have drawn cards in a different order and maybe gotten a different result. So we can imagine doing the whole process again,

00:06:45.629 --> 00:06:47.629
starting with our four and

00:06:47.849 --> 00:06:52.579
growing it out to sixteen. So we do that, and we see who won, and may get a different set of ballots.

00:06:52.580 --> 00:06:57.259
Maybe, maybe Bob won that one, okay? So there's, if it's fairly evenly balanced at the beginning,

00:06:57.259 --> 00:07:01.278
you know, Bob is gonna win some, Alice is gonna win some. And that's the key here is you do a lot

00:07:01.580 --> 00:07:03.360
of simulations of this sort

00:07:03.360 --> 00:07:04.460
Bracy: "On the one sample."

00:07:04.580 --> 00:07:08.240
on the one sample. Maybe Alice wins lots of them, Bob wins some of them,

00:07:08.240 --> 00:07:13.369
but maybe it's, it's fairly close, you know, so, we'd like to have 95% confidence,

00:07:13.369 --> 00:07:18.500
so we maybe want Alice to win 95% of the runs here. If she doesn't win 95%

00:07:18.720 --> 00:07:22.159
we say the sample's not big enough. So we start over, or we make the sample bigger,

00:07:22.159 --> 00:07:25.639
maybe we can draw some more. We go back and we enlarge the sample by drawing some more.

00:07:25.639 --> 00:07:28.639
It's a new sample, it's twice the size. We said the original one wasn't big enough.

00:07:28.679 --> 00:07:31.999
So now instead of growing from four ballots out to sixteen,

00:07:31.999 --> 00:07:36.049
we're growing from eight out to sixteen, and we count, see who wins. And maybe this time,

00:07:36.119 --> 00:07:41.689
maybe this time Alice wins them all, you know, maybe since the sample's bigger now, it's really pretty clear,

00:07:42.209 --> 00:07:45.979
mathematically, from the sample, that Alice is the winner, and so maybe she's winning them.

00:07:47.009 --> 00:07:48.800
Or maybe Bob wins one or two or something.

00:07:48.800 --> 00:07:53.269
But you know, it's it's really overwhelmingly clear that no matter how this gets extended up, I pull these urn,

00:07:53.399 --> 00:07:57.499
you've got Alice winning. And so that's, that's how the audit might proceed. You could say, well,

00:07:57.499 --> 00:07:59.898
we grow the sample, and this still could be a pretty small sample

00:08:00.059 --> 00:08:02.208
by comparison with the total set of cast votes,

00:08:02.279 --> 00:08:07.069
we might have a sample of size a hundred, and that's pretty small, the computer can do all this stuff fast.

00:08:07.169 --> 00:08:11.898
So there's very little examination of the paper ballots. I don't really care too much what technique you use.

00:08:11.899 --> 00:08:14.419
I really do think that, we should have paper ballots,

00:08:14.419 --> 00:08:20.628
and we should be doing post-election audits, just to confirm that the announced outcome is really consistent with the paper ballots. Those are two very

00:08:20.729 --> 00:08:24.768
important properties we should have of all of the elections everywhere in the US. Or the planet.

00:08:26.270 --> 00:08:28.069
...get a

00:08:28.069 --> 00:08:30.819
receipt when you vote. And the receipt is not

00:08:31.580 --> 00:08:34.929
the plaintext as to how you voted, but an encryption of how you voted.

00:08:35.390 --> 00:08:41.679
So it's something that you can't sell down at the bar, because it's not something that's interpretable by somebody else.

00:08:43.310 --> 00:08:46.299
A number or a barcode or something like that, and it represents how you voted.

