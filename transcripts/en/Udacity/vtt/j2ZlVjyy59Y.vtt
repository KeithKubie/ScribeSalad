WEBVTT
Kind: captions
Language: en

00:00:00.450 --> 00:00:04.220
If you're thinking about Python you should have been able to figure out that at

00:00:04.220 --> 00:00:08.106
least its an object, everything referencible is an object and to keep the design

00:00:08.106 --> 00:00:12.036
consistent we don't want special things, we want everything to be an object. So

00:00:12.036 --> 00:00:15.672
its some kind of object, what kind of object is it? Well is a value error. So

00:00:15.672 --> 00:00:19.509
certainly the last one is correct, that it an instance of the value error type.

00:00:19.510 --> 00:00:24.984
Value Error is a subtype of exception, so it's also an instance of an exception.

00:00:24.984 --> 00:00:30.622
It's not an instance of the IO Error type and that's why the accept handler for

00:00:30.622 --> 00:00:35.620
IO Error didn't handle the Value Error. Here's an example of the kind of

00:00:35.620 --> 00:00:39.882
experiment you might do to understand what's going on here. So I've changed,

00:00:39.882 --> 00:00:41.994
instead of having IO Error here, I've changed this to exception. So this means

00:00:41.994 --> 00:00:45.558
any exception that's a sub-type of exception will be handled by this exception

00:00:45.558 --> 00:00:49.720
handler. And what I'm going to do in the handler I'll print out the type of

00:00:49.720 --> 00:00:54.538
exception then I have three assertions all about the type of e, the first checks

00:00:54.538 --> 00:00:59.600
if its an instance of value error. We expect that to be true. The second checks

00:00:59.600 --> 00:01:03.612
if its an instance of exception which we also expect that to be true. And the

00:01:03.612 --> 00:01:08.470
third checks if its an instance of IOError, that we expect to be false. You may

00:01:08.470 --> 00:01:12.256
of the guess what happens when an assertion fails. let's try running this code to

00:01:12.256 --> 00:01:15.973
see, so let's see what happens when we try running this code and this is what we

00:01:15.973 --> 00:01:20.114
get. We see that we got the exception and its type is type

00:01:20.114 --> 00:01:25.375
exceptions.ValueError. Exceptions is a built-in module to python and we don't

00:01:25.375 --> 00:01:29.706
need to import, we have the ValueError exception type, and we see that the

00:01:29.706 --> 00:01:33.969
assertion on line 10 field, that means the first two succeeded. And, what

00:01:33.969 --> 00:01:36.939
happened when it failed is we got a new kind of exception which is an

00:01:36.939 --> 00:01:41.098
AssertionError. Congratulations if you guessed that what happens when an

00:01:41.098 --> 00:01:43.373
assertion error fails, is you get an exception.

