WEBVTT
Kind: captions
Language: en

00:00:01.140 --> 00:00:02.390
MITCHELL FOLEY: Hello.

00:00:04.530 --> 00:00:05.940
My name is Mitchell Foley.

00:00:05.940 --> 00:00:09.600
I am a software engineer on the
Google Visualization API.

00:00:14.360 --> 00:00:14.750
All right.

00:00:14.750 --> 00:00:16.500
So, how many people are actually
familiar with the

00:00:16.500 --> 00:00:18.730
Google Visualization API?

00:00:18.730 --> 00:00:19.190
All right.

00:00:19.190 --> 00:00:20.300
Actually a pretty good number.

00:00:20.300 --> 00:00:22.150
That's much more than
I expected.

00:00:22.150 --> 00:00:25.140
For those of you who haven't
heard of it before, well, I'll

00:00:25.140 --> 00:00:27.030
give you a good introduction
to what it is and why you

00:00:27.030 --> 00:00:30.530
might want to use
it right now.

00:00:30.530 --> 00:00:33.530
So, what you can do with it,
it's actually a JavaScript API

00:00:33.530 --> 00:00:36.700
that is available for free
for the public to use.

00:00:36.700 --> 00:00:39.410
It's not only used by customers
outside of Google.

00:00:39.410 --> 00:00:41.890
You might want to use it on
your personal website.

00:00:41.890 --> 00:00:44.840
But it's used by internal
clients as well.

00:00:44.840 --> 00:00:48.420
Like Google Docs, AdWords,
AdSense, YouTube Analytics; we

00:00:48.420 --> 00:00:50.670
get a lot of customers
inside Google.

00:00:50.670 --> 00:00:53.460
And what we want to do is we
want to take your data, and we

00:00:53.460 --> 00:00:56.830
want to transform it into a
beautiful visualization that

00:00:56.830 --> 00:00:58.810
you can use to tell
your story.

00:00:58.810 --> 00:01:01.300
To convey a message
to your users.

00:01:01.300 --> 00:01:03.350
And you can do that a couple
of different ways.

00:01:03.350 --> 00:01:05.200
So we'll show you first,
one of our biggest

00:01:05.200 --> 00:01:06.700
clients, Google Docs.

00:01:06.700 --> 00:01:10.140
And what we have here is just
a spreadsheet with a little

00:01:10.140 --> 00:01:11.540
bit of data.

00:01:11.540 --> 00:01:14.820
How much pizza I had last
night for dinner.

00:01:14.820 --> 00:01:16.480
Probably had a little
too much.

00:01:16.480 --> 00:01:20.480
But we just took our-- the
type of pizza, and

00:01:20.480 --> 00:01:21.890
the number of slices.

00:01:21.890 --> 00:01:24.700
Put them in a couple of cells,
highlighted it, and then made

00:01:24.700 --> 00:01:26.400
a chart out of it.

00:01:26.400 --> 00:01:28.450
Very, very simple stuff.

00:01:28.450 --> 00:01:32.610
But we can also do this just
on a regular HTML page.

00:01:32.610 --> 00:01:35.680
So here's just a very,
very basic HTML page.

00:01:35.680 --> 00:01:37.140
What we're doing here
is we're including

00:01:37.140 --> 00:01:39.810
a very simple script.

00:01:39.810 --> 00:01:42.640
This is the Google's
JS API loader.

00:01:42.640 --> 00:01:45.160
You can use it to load a number
of different libraries,

00:01:45.160 --> 00:01:47.540
the visualization library
being one of them.

00:01:47.540 --> 00:01:50.680
And we also have a placeholder
div here for our chart.

00:01:50.680 --> 00:01:52.100
We're going to write a script
that you'll see in the next

00:01:52.100 --> 00:01:55.940
page where we actually insert
the chart into this div.

00:01:59.460 --> 00:02:00.410
OK.

00:02:00.410 --> 00:02:04.040
So it looks like a big slide
full of code here, but it's

00:02:04.040 --> 00:02:05.640
actually not too complicated.

00:02:05.640 --> 00:02:08.710
We're not doing anything really
complicated here.

00:02:08.710 --> 00:02:11.660
The first thing we're doing is
with that loader script that

00:02:11.660 --> 00:02:14.860
we saw on the previous slide,
we're actually going to tell

00:02:14.860 --> 00:02:16.860
it what we want to load.

00:02:16.860 --> 00:02:20.030
And we want to load, in this
case, the core chart package.

00:02:20.030 --> 00:02:21.400
We have a number of different
packages.

00:02:21.400 --> 00:02:23.560
In this case, we just want that
simple bar chart that you

00:02:23.560 --> 00:02:24.640
saw earlier.

00:02:24.640 --> 00:02:26.385
So that's one of our
core charts.

00:02:26.385 --> 00:02:29.370
And we're going to say, OK,
please load this core chart

00:02:29.370 --> 00:02:30.160
package for us.

00:02:30.160 --> 00:02:34.130
And when you're finished
loading, call this function.

00:02:34.130 --> 00:02:35.260
This is just JavaScript.

00:02:35.260 --> 00:02:36.980
It just runs right
in the browser.

00:02:36.980 --> 00:02:39.160
And so it calls our callback
drawStuff.

00:02:39.160 --> 00:02:42.330
Now once we know that we have
all of the classes, and

00:02:42.330 --> 00:02:44.800
objects, and everything that we
need to draw the chart, we

00:02:44.800 --> 00:02:45.970
can start to do that.

00:02:45.970 --> 00:02:48.200
So the first thing we need
to do here is we need

00:02:48.200 --> 00:02:50.220
to set up our data.

00:02:50.220 --> 00:02:53.690
So we need to get our data
into a data table.

00:02:53.690 --> 00:02:57.080
And the data table is the basic
construct that we use to

00:02:57.080 --> 00:03:00.430
pass our data around, to format
it, to write extra

00:03:00.430 --> 00:03:02.260
information about
it if necessary.

00:03:02.260 --> 00:03:05.170
In this case, we're just doing a
very simple data table where

00:03:05.170 --> 00:03:08.690
we're saying the topping and
the number of slices.

00:03:08.690 --> 00:03:13.610
So we add our two columns, we
add our slices and the amount

00:03:13.610 --> 00:03:17.530
we ate, then we need to set
some chart options.

00:03:17.530 --> 00:03:19.050
Now these chart options,
there's a lot

00:03:19.050 --> 00:03:20.190
of different options.

00:03:20.190 --> 00:03:22.760
Most of them you can apply to
actually any visualization

00:03:22.760 --> 00:03:24.220
that you want.

00:03:24.220 --> 00:03:26.290
This one we're just going to
set a title, and then the

00:03:26.290 --> 00:03:30.410
width and the height of what
the chart area is.

00:03:30.410 --> 00:03:32.830
And finally, we'll construct
the chart object and

00:03:32.830 --> 00:03:35.470
actually draw it.

00:03:35.470 --> 00:03:36.550
And this is what we get.

00:03:36.550 --> 00:03:39.370
It looks exactly the same as
it did in the other slide.

00:03:39.370 --> 00:03:41.910
One other good thing to note is
that this is actually fully

00:03:41.910 --> 00:03:42.930
interactive.

00:03:42.930 --> 00:03:44.470
And you can see my mouse there.

00:03:44.470 --> 00:03:45.170
Good.

00:03:45.170 --> 00:03:47.150
And so when the user hovers
over, they can actually see

00:03:47.150 --> 00:03:50.680
more details about each
of the data points.

00:03:50.680 --> 00:03:53.390
So we're just highlighting
different things, and it's

00:03:53.390 --> 00:03:55.520
giving us tool tips that provide
extra information

00:03:55.520 --> 00:03:57.650
about our data.

00:03:57.650 --> 00:03:59.210
So why would you want
to do this?

00:03:59.210 --> 00:04:02.390
Why would you want to use charts
instead of just data

00:04:02.390 --> 00:04:05.980
tables or HTML tables like
this to tell the

00:04:05.980 --> 00:04:06.890
story of your data?

00:04:06.890 --> 00:04:08.240
And it's really that.

00:04:08.240 --> 00:04:09.810
It's the storytelling.

00:04:09.810 --> 00:04:12.270
Being able to visually see
something is going to be much

00:04:12.270 --> 00:04:15.560
more effective than having,
you know, Hamilton-Norwood

00:04:15.560 --> 00:04:17.540
stage with a bunch of numbers.

00:04:17.540 --> 00:04:19.720
I'm guessing not a lot of
people in here are even

00:04:19.720 --> 00:04:21.550
familiar with the
Hamilton-Norwood stage.

00:04:21.550 --> 00:04:24.160
I certainly wasn't before
I wrote this.

00:04:24.160 --> 00:04:25.160
And so we can take this.

00:04:25.160 --> 00:04:27.430
We can put it into
a data table.

00:04:27.430 --> 00:04:30.060
And we can easily make a bunch
of different charts.

00:04:30.060 --> 00:04:31.620
And these are some
very basic ones.

00:04:31.620 --> 00:04:34.370
None of these really tell
the right story.

00:04:34.370 --> 00:04:36.460
They don't really tell
you, what am I

00:04:36.460 --> 00:04:37.440
trying to convey here?

00:04:37.440 --> 00:04:40.890
We get a bunch of names,
but we don't--

00:04:40.890 --> 00:04:41.580
what's going on?

00:04:41.580 --> 00:04:46.170
So we can actually see, if we
tell the story correctly, what

00:04:46.170 --> 00:04:49.220
we get is we get a story of how
the Google Visualization

00:04:49.220 --> 00:04:52.640
Development Team is follically
challenged.

00:04:52.640 --> 00:04:53.930
Not a lot of hair on the team.

00:04:53.930 --> 00:04:56.480
We see Sergey, Dan, and
Jeremy, they're really

00:04:56.480 --> 00:04:58.420
bringing in all the
hair to the team.

00:04:58.420 --> 00:05:02.570
We're trying to get them
haircuts, but we'll see.

00:05:02.570 --> 00:05:06.380
And so this is what I want to do
is, over the next half hour

00:05:06.380 --> 00:05:08.470
or so, I want to tell a story.

00:05:08.470 --> 00:05:11.330
And I want to tell a story using
all of the new features

00:05:11.330 --> 00:05:13.500
that we've been working on for
the past year, to help you

00:05:13.500 --> 00:05:15.710
tell stories with your data.

00:05:18.980 --> 00:05:21.035
And again, this is fully
interactive.

00:05:24.470 --> 00:05:27.810
So the story I'm gonna
tell you is about me.

00:05:27.810 --> 00:05:30.340
And it's about me becoming
an adult.

00:05:30.340 --> 00:05:33.820
There's been a lot of events
in my life recently where I

00:05:33.820 --> 00:05:36.860
feel much more grown up
than I did really a

00:05:36.860 --> 00:05:39.210
couple months ago.

00:05:39.210 --> 00:05:40.930
I've talked to a lot of people
about becoming an adult.

00:05:40.930 --> 00:05:44.370
Nobody really knows
what that means.

00:05:44.370 --> 00:05:46.420
Are there any adults here?

00:05:46.420 --> 00:05:47.870
I'm not seeing very
many hands at all.

00:05:47.870 --> 00:05:50.390
So, I'm guessing you've
all experienced the

00:05:50.390 --> 00:05:53.410
same things I have.

00:05:53.410 --> 00:05:55.270
The first thing is
the timeline.

00:05:55.270 --> 00:05:57.030
This is a brand new
visualization that we've been

00:05:57.030 --> 00:05:58.140
working on.

00:05:58.140 --> 00:06:00.870
And the ability to show
different points in history

00:06:00.870 --> 00:06:03.440
and really tell the story.

00:06:03.440 --> 00:06:09.790
So right here, you can see, I
got engaged in March of 2012.

00:06:09.790 --> 00:06:11.670
Thank you.

00:06:11.670 --> 00:06:13.030
Google I/O, giving this talk.

00:06:13.030 --> 00:06:15.680
This is a pretty big grown
up moment for me.

00:06:15.680 --> 00:06:17.120
There's a lot of people here.

00:06:17.120 --> 00:06:19.000
A lot of people are going to
be watching this on YouTube

00:06:19.000 --> 00:06:20.690
later on, hopefully.

00:06:20.690 --> 00:06:23.320
So giving the I/O talk, that's
a reasonable amount of

00:06:23.320 --> 00:06:24.780
responsibility.

00:06:24.780 --> 00:06:25.820
Condo.

00:06:25.820 --> 00:06:28.080
So I'm in the process of closing
on a condo right now.

00:06:28.080 --> 00:06:29.830
I'm from Boston.

00:06:29.830 --> 00:06:32.990
Real estate isn't quite as crazy
as it is here, but it's

00:06:32.990 --> 00:06:35.630
still reasonably insane.

00:06:35.630 --> 00:06:36.280
And married.

00:06:36.280 --> 00:06:39.620
I mentioned I got engaged, we
have a wedding date set for

00:06:39.620 --> 00:06:41.550
early September of this year.

00:06:41.550 --> 00:06:43.600
So a lot of planning all
going on at once.

00:06:43.600 --> 00:06:46.050
A lot of new responsibilities.

00:06:46.050 --> 00:06:47.310
A lot of uncharted
territories.

00:06:47.310 --> 00:06:50.980
And this timeline really helps
to show you how we have, kind

00:06:50.980 --> 00:06:53.990
of, more things all scrunched
together at the end there then

00:06:53.990 --> 00:06:59.040
I would have liked to deal with
at once, but there it is.

00:06:59.040 --> 00:07:02.080
All right, so let's go over
the code for this.

00:07:02.080 --> 00:07:03.250
If my clicker works.

00:07:03.250 --> 00:07:03.550
All right.

00:07:03.550 --> 00:07:06.980
So first thing is, you notice on
the previous visualizations

00:07:06.980 --> 00:07:10.010
where I just had the basic bar
charts, is that here, we're

00:07:10.010 --> 00:07:11.850
loading a new type
of visualization.

00:07:11.850 --> 00:07:13.350
This isn't one of
our core charts.

00:07:13.350 --> 00:07:16.560
So you can actually load this
independently from the core

00:07:16.560 --> 00:07:17.700
chart package.

00:07:17.700 --> 00:07:21.420
So we're loading the timeline
package instead here.

00:07:21.420 --> 00:07:22.980
The basic steps are
still the same.

00:07:22.980 --> 00:07:25.340
We're creating our data table.

00:07:25.340 --> 00:07:27.240
We're using a little bit of
a different method here.

00:07:27.240 --> 00:07:30.650
We're just converting a
JavaScript array directly into

00:07:30.650 --> 00:07:32.590
a data table.

00:07:32.590 --> 00:07:34.500
So once we have our data
table, and we have our

00:07:34.500 --> 00:07:38.610
options, now we're just going
to construct our chart.

00:07:38.610 --> 00:07:41.180
And the chart, instead of doing
column chart like we

00:07:41.180 --> 00:07:44.000
were previously, we're
just doing timeline.

00:07:44.000 --> 00:07:46.610
And the Google Visualization
API does all of

00:07:46.610 --> 00:07:47.650
the work for you.

00:07:47.650 --> 00:07:50.460
They figure out, OK, what are
the four best colors that will

00:07:50.460 --> 00:07:53.510
contrast with each other nicely,
that's going to really

00:07:53.510 --> 00:07:54.750
make this visualization pop?

00:07:54.750 --> 00:07:56.870
What's going to stand
out the most?

00:07:56.870 --> 00:07:59.070
How far apart should
all of the labels

00:07:59.070 --> 00:08:00.490
be on the tick axis?

00:08:00.490 --> 00:08:06.200
So you can see it shows a
quarterly interval here.

00:08:06.200 --> 00:08:09.900
And it said, this is what's
really going to tell the story

00:08:09.900 --> 00:08:11.890
the best; the most effectively
for you.

00:08:11.890 --> 00:08:14.505
So all you have to do is provide
it your data, and it

00:08:14.505 --> 00:08:18.030
will say, OK, I'll do all
the work for you.

00:08:18.030 --> 00:08:20.060
But we can actually make this
a bit more complicated.

00:08:20.060 --> 00:08:21.570
There's more than just
those four events.

00:08:21.570 --> 00:08:23.220
I mean obviously, there's
a lot of work leading

00:08:23.220 --> 00:08:24.990
up to each of those.

00:08:24.990 --> 00:08:29.130
So you can see here, I went
ring shopping for about a

00:08:29.130 --> 00:08:31.560
month and a half.

00:08:31.560 --> 00:08:32.240
And engaged--

00:08:32.240 --> 00:08:33.780
engaged isn't just a
point in time, it's

00:08:33.780 --> 00:08:36.059
really a long term thing.

00:08:36.059 --> 00:08:39.340
Well, in my case it's
a long term thing.

00:08:39.340 --> 00:08:41.760
I'm going to be engaged about
a year and a half before

00:08:41.760 --> 00:08:43.669
everything's said and done.

00:08:43.669 --> 00:08:44.630
Buying the condo.

00:08:44.630 --> 00:08:47.670
That is not a one
moment in time.

00:08:47.670 --> 00:08:50.090
That is a long, long process.

00:08:50.090 --> 00:08:52.830
Long process.

00:08:52.830 --> 00:08:54.870
So we had to do condo
shopping.

00:08:54.870 --> 00:08:56.460
And writing this I/O
presentation even

00:08:56.460 --> 00:08:57.520
took a bunch of time.

00:08:57.520 --> 00:09:01.710
So here you can see, instead of
just the one category here,

00:09:01.710 --> 00:09:04.540
that just says grown up stuff,
now I have three separate

00:09:04.540 --> 00:09:05.140
categories.

00:09:05.140 --> 00:09:08.440
I have a relationship, a condo,
and the I/O category.

00:09:08.440 --> 00:09:10.670
So you can further divide
your data to even more

00:09:10.670 --> 00:09:12.870
clearly tell the story.

00:09:12.870 --> 00:09:15.890
Now in order to do that, the
only difference here is I'm

00:09:15.890 --> 00:09:18.840
providing, instead of
just one category--

00:09:18.840 --> 00:09:20.880
so you can see where it
says relationship, and

00:09:20.880 --> 00:09:23.740
condo, and I/O here--

00:09:23.740 --> 00:09:26.340
it used to just say
grown up stuff.

00:09:26.340 --> 00:09:27.750
We can see that back here.

00:09:27.750 --> 00:09:28.810
See, it just says
grown up stuff.

00:09:28.810 --> 00:09:30.920
So now I'm giving three
different categories.

00:09:30.920 --> 00:09:32.950
And it's figuring out, OK, now
that I have these three

00:09:32.950 --> 00:09:34.590
different categories, I
should put them all

00:09:34.590 --> 00:09:35.840
onto different lines.

00:09:37.720 --> 00:09:40.300
I'm also setting ranges now.

00:09:40.300 --> 00:09:44.600
So instead of points in history,
like with the I/O

00:09:44.600 --> 00:09:45.780
being today--

00:09:45.780 --> 00:09:49.560
or two days ago, I guess
I have that set for--

00:09:49.560 --> 00:09:52.520
we're setting a start date and
an end date, rather than just

00:09:52.520 --> 00:09:54.960
a point in history.

00:09:54.960 --> 00:09:56.170
But other than that,
everything's

00:09:56.170 --> 00:09:57.630
pretty much the same.

00:09:57.630 --> 00:09:59.860
We're not adding a ton of new
complexity to get this new

00:09:59.860 --> 00:10:01.530
functionality.

00:10:01.530 --> 00:10:04.960
And even still, we can actually
stack events on top

00:10:04.960 --> 00:10:06.880
of each other within
a category.

00:10:06.880 --> 00:10:09.690
So if you want to show
concurrency, or a schedule,

00:10:09.690 --> 00:10:11.520
for example, you can do that.

00:10:14.120 --> 00:10:16.750
So with the condo shopping, I've
had to talk to realtors,

00:10:16.750 --> 00:10:18.440
banks, and lawyers.

00:10:18.440 --> 00:10:23.520
Which are a fun group of
people to talk to.

00:10:23.520 --> 00:10:25.100
Living together with
my fiancee.

00:10:25.100 --> 00:10:28.280
So you can see when that
happened in perspective to

00:10:28.280 --> 00:10:30.920
being engaged and
getting married.

00:10:30.920 --> 00:10:32.800
Wedding planning, you
can see happened the

00:10:32.800 --> 00:10:35.470
second we got engaged.

00:10:35.470 --> 00:10:39.040
Probably a little bit earlier
for my fiancee.

00:10:39.040 --> 00:10:39.830
That's right.

00:10:39.830 --> 00:10:41.910
And these again, are completely
interactive.

00:10:41.910 --> 00:10:45.120
So you'll be able to see the
exact date ranges, and all of

00:10:45.120 --> 00:10:47.820
the information that
you want, through

00:10:47.820 --> 00:10:49.170
the interaction events.

00:10:49.170 --> 00:10:51.480
So you can just get a nice big
summary, and then you can

00:10:51.480 --> 00:10:55.150
actually have your users drill
deeper into the data as

00:10:55.150 --> 00:10:56.760
they're interacting with
the visualization.

00:10:56.760 --> 00:11:00.370
So you can tell your story.

00:11:00.370 --> 00:11:02.250
Again, just very, very basic.

00:11:02.250 --> 00:11:08.000
We're just going to add some new
rows into our data table.

00:11:08.000 --> 00:11:11.690
Nothing different about this
data, it just happens to

00:11:11.690 --> 00:11:13.950
coincide at the same time
as other events.

00:11:13.950 --> 00:11:17.510
So the visualization will just
stack the bars nicely on top

00:11:17.510 --> 00:11:18.760
of each other.

00:11:22.800 --> 00:11:24.390
That's a lot of stuff.

00:11:24.390 --> 00:11:25.410
All right.

00:11:25.410 --> 00:11:28.180
So that's the timeline
visualization.

00:11:28.180 --> 00:11:31.820
Which is not available quite
yet, but it will be available

00:11:31.820 --> 00:11:35.570
in about a week or so
in our version 1.1.

00:11:35.570 --> 00:11:39.340
And I'll give you the links
for everything at the end.

00:11:39.340 --> 00:11:41.420
Blood pressure.

00:11:41.420 --> 00:11:43.710
So with all of these events
happening in my life, all at

00:11:43.710 --> 00:11:48.030
the same time, it can get
a little stressful.

00:11:48.030 --> 00:11:49.430
Get a little bit stressful.

00:11:49.430 --> 00:11:53.880
And so, here we're seeing my
blood pressure over a course

00:11:53.880 --> 00:11:56.010
of about six months, I'd say.

00:11:56.010 --> 00:11:58.510
Taken once every 15 days.

00:11:58.510 --> 00:12:00.140
It's all over the place.

00:12:00.140 --> 00:12:03.290
It's up and down.

00:12:03.290 --> 00:12:03.960
It's everywhere.

00:12:03.960 --> 00:12:06.610
And actually, this isn't just
stressful for me, but it's

00:12:06.610 --> 00:12:09.290
also stressful for my mother.

00:12:09.290 --> 00:12:10.630
She's very concerned.

00:12:10.630 --> 00:12:13.480
She still thinks of me as a
six-year-old that needs

00:12:13.480 --> 00:12:16.120
everything taken care of.

00:12:16.120 --> 00:12:18.900
I love you Mom, but relax.

00:12:18.900 --> 00:12:20.350
So this is a scatter chart.

00:12:20.350 --> 00:12:24.330
Let's drill into how we make
this scatter chart.

00:12:24.330 --> 00:12:29.320
Now there's a lot more data on
this visualization then with

00:12:29.320 --> 00:12:30.900
the previous visualizations.

00:12:30.900 --> 00:12:34.580
So we're going to move all of
our data table setup to

00:12:34.580 --> 00:12:38.720
another function, just so I
can fit it on two slides.

00:12:38.720 --> 00:12:41.200
And all it is, is a date,
and then two values.

00:12:41.200 --> 00:12:44.500
It's systolic, if you're really
concerned about what

00:12:44.500 --> 00:12:47.630
these blood pressure
numbers mean.

00:12:47.630 --> 00:12:50.310
And we're just building
our data table.

00:12:50.310 --> 00:12:52.860
And here, the only different
thing is, where we're saying,

00:12:52.860 --> 00:12:53.750
draw a scatter chart.

00:12:53.750 --> 00:12:55.780
Now we could have had a
line chart to plot the

00:12:55.780 --> 00:12:57.870
lines, if we wanted.

00:12:57.870 --> 00:13:00.380
But other than that, everything
is very simple.

00:13:00.380 --> 00:13:04.150
And then the visualization
library is taking care of

00:13:04.150 --> 00:13:05.680
everything for us.

00:13:05.680 --> 00:13:08.140
Now, when you make something
like a scatter chart, what

00:13:08.140 --> 00:13:11.130
you're really trying to do is
your saying, here are my data

00:13:11.130 --> 00:13:13.710
points, but there's gotta to be
a pattern here somewhere.

00:13:13.710 --> 00:13:15.520
We want to see the trends.

00:13:15.520 --> 00:13:19.920
And so to help you make these
trends, what we did was we add

00:13:19.920 --> 00:13:22.520
in automatic trend
line calculation.

00:13:22.520 --> 00:13:26.400
So that's just saying, given
this set of data, I want a

00:13:26.400 --> 00:13:29.100
linear trend line.

00:13:29.100 --> 00:13:30.700
And you can actually
go over here.

00:13:30.700 --> 00:13:34.970
So you can see, on March 1, my
blood pressure was at 140.

00:13:34.970 --> 00:13:36.140
My mother's was at 130.

00:13:36.140 --> 00:13:38.145
So I was actually a little more
stressed out that day

00:13:38.145 --> 00:13:40.740
than she was.

00:13:40.740 --> 00:13:44.960
And you can also see along the
different trend lines, what

00:13:44.960 --> 00:13:48.590
both the formula for the trend
line is, and what the

00:13:48.590 --> 00:13:51.120
calculated value should be,
what is the expected value

00:13:51.120 --> 00:13:53.990
based on that trend line.

00:13:53.990 --> 00:13:56.330
You can go on, you can compare
all of these numbers.

00:13:56.330 --> 00:13:59.800
And it's really a nice
interactive experience for

00:13:59.800 --> 00:14:00.540
telling your story.

00:14:00.540 --> 00:14:04.020
And you can see here, I am
getting more stressed out as

00:14:04.020 --> 00:14:07.950
time goes on, but my mother is
about to explode any minute

00:14:07.950 --> 00:14:10.810
now, really.

00:14:10.810 --> 00:14:13.490
So let's take a look at
how we add in these

00:14:13.490 --> 00:14:15.380
automatic trend lines.

00:14:15.380 --> 00:14:20.530
Again, we're doing the data
table set up on the previous

00:14:20.530 --> 00:14:24.420
slide, with the get blood
pressure data table function.

00:14:24.420 --> 00:14:26.510
All we're doing here to get
the trend lines is we're

00:14:26.510 --> 00:14:30.130
saying, in our options, add
a couple of trend lines to

00:14:30.130 --> 00:14:32.740
series zero and series one.

00:14:32.740 --> 00:14:34.350
You'll notice it says
type "linear".

00:14:34.350 --> 00:14:36.670
We can also do exponential
if we feel that's more

00:14:36.670 --> 00:14:38.440
appropriate for our data.

00:14:38.440 --> 00:14:41.950
But it's very, very simple, and
we want to expose this to

00:14:41.950 --> 00:14:45.610
everybody, so you can better
see these patterns in your

00:14:45.610 --> 00:14:47.400
data, so you can better
tell your story.

00:14:50.140 --> 00:14:51.750
And one more look
at this table.

00:14:54.310 --> 00:14:55.460
All right.

00:14:55.460 --> 00:14:59.530
Condo shopping, was
another big part.

00:14:59.530 --> 00:15:00.440
If anybody's ever--

00:15:00.440 --> 00:15:02.470
even if you've just gone
looking for apartments,

00:15:02.470 --> 00:15:03.450
there's a lot of data.

00:15:03.450 --> 00:15:07.850
You have square footage, versus
time to work, versus

00:15:07.850 --> 00:15:10.440
how much is it going
to cost you.

00:15:10.440 --> 00:15:13.150
All kinds of different
variables.

00:15:13.150 --> 00:15:15.470
One of the ways you can actually
display a lot of

00:15:15.470 --> 00:15:18.500
these variables all at once
is with a bubble chart.

00:15:18.500 --> 00:15:20.660
So this is something that
already exists today.

00:15:20.660 --> 00:15:21.950
And we have this bubble chart.

00:15:21.950 --> 00:15:27.460
So you can see, on the y-axis,
we have the size of unit.

00:15:27.460 --> 00:15:31.240
We have how much the unit
costs on the x-axis.

00:15:31.240 --> 00:15:33.520
The size of the bubble
corresponds to

00:15:33.520 --> 00:15:35.640
how far it is from--

00:15:35.640 --> 00:15:38.500
how much of a commute
it will be to work.

00:15:38.500 --> 00:15:42.530
And the color of the bubble is
the number of fireplaces.

00:15:42.530 --> 00:15:44.640
I really want a fireplace
in my place.

00:15:44.640 --> 00:15:47.790
So I figured I'd put
that up there too.

00:15:47.790 --> 00:15:51.640
And you can hover over these
and see exactly the exact

00:15:51.640 --> 00:15:54.590
details of all of these.

00:15:54.590 --> 00:16:02.200
You can say, OK, list price is
$319,900 for this place.

00:16:02.200 --> 00:16:05.090
And it's going to take me 41
minutes to get to work.

00:16:05.090 --> 00:16:07.630
So this was a really useful way
for my fiancee and I to

00:16:07.630 --> 00:16:11.720
see all of these different
listings all at once.

00:16:11.720 --> 00:16:13.400
So let's see how exactly
I draw that.

00:16:16.270 --> 00:16:18.130
The first thing I'm doing here
is you're going to notice a

00:16:18.130 --> 00:16:22.020
couple of different options
that are more for just the

00:16:22.020 --> 00:16:22.950
bubble chart.

00:16:22.950 --> 00:16:24.120
And so you have--

00:16:24.120 --> 00:16:27.040
I'm manually setting the labels
for these, as well as

00:16:27.040 --> 00:16:28.930
setting a style on the bubble.

00:16:28.930 --> 00:16:31.640
I thought the text on the bubble
was a little too big,

00:16:31.640 --> 00:16:32.700
so I made it a little smaller.

00:16:32.700 --> 00:16:36.880
And this is just one of the many
things you can customize.

00:16:36.880 --> 00:16:39.750
I'm drawing a bubble chart this
time, instead of a line

00:16:39.750 --> 00:16:41.890
chart or a scatter chart
or a timeline.

00:16:41.890 --> 00:16:44.660
So I just call a bubble
chart instead.

00:16:44.660 --> 00:16:46.370
You might also know this,
are people in here

00:16:46.370 --> 00:16:47.890
familiar with jQuery?

00:16:47.890 --> 00:16:49.050
Just, you've heard of it?

00:16:49.050 --> 00:16:49.560
Yes.

00:16:49.560 --> 00:16:50.470
Everybody's heard of jQuery.

00:16:50.470 --> 00:16:50.750
All right.

00:16:50.750 --> 00:16:51.490
Awesome.

00:16:51.490 --> 00:16:54.610
jQuery is a library that
provides a number of

00:16:54.610 --> 00:16:57.430
convenience methods, is one of
the many things it does.

00:16:57.430 --> 00:17:00.250
And here, what it's doing is
it's actually making an XML

00:17:00.250 --> 00:17:03.040
request for a blob
of JSON, that

00:17:03.040 --> 00:17:05.069
actually has all the data.

00:17:05.069 --> 00:17:06.560
And I'll show you what
that data looks like.

00:17:06.560 --> 00:17:11.079
So this is just a JSON file
that I had generated.

00:17:11.079 --> 00:17:14.750
It has the addresses, the
prices, it rips all these from

00:17:14.750 --> 00:17:17.670
various real estate
listing websites.

00:17:17.670 --> 00:17:21.230
You'll notice that the end of
each row here is a URL.

00:17:21.230 --> 00:17:25.650
And I'm not really doing
anything with this URL.

00:17:25.650 --> 00:17:32.100
On my chart here, once I decide,
OK, 358 Lexington

00:17:32.100 --> 00:17:33.730
Street here is worth
looking at.

00:17:33.730 --> 00:17:36.700
So how do I say, OK, I want
to go look at this?

00:17:36.700 --> 00:17:38.950
How do I know?

00:17:38.950 --> 00:17:42.510
So we actually added this
functionality, actions.

00:17:42.510 --> 00:17:45.810
And so with the actions API, you
can actually go in and add

00:17:45.810 --> 00:17:49.060
more interactive elements
to your tool tips.

00:17:49.060 --> 00:17:51.210
In this case it would be really
useful if I could just

00:17:51.210 --> 00:17:55.420
click on this, and then view
this on the listing website.

00:17:55.420 --> 00:17:56.900
So if I click on that--

00:17:56.900 --> 00:17:58.120
I'm not connected
to the internet.

00:17:58.120 --> 00:17:58.420
All right.

00:17:58.420 --> 00:17:59.940
That's OK.

00:17:59.940 --> 00:18:02.500
It comes up with a beautiful
picture of the house, and

00:18:02.500 --> 00:18:05.010
maybe a map, and how much it
costs, and the real estate

00:18:05.010 --> 00:18:06.810
agent I would need to
get in touch with.

00:18:06.810 --> 00:18:09.410
And this is something that's
really made it much easier for

00:18:09.410 --> 00:18:11.480
us to find a place to live.

00:18:11.480 --> 00:18:16.470
And this was not, I mean this
is not a lot of code.

00:18:16.470 --> 00:18:19.850
And it's much, much nicer than
most of the tools out there

00:18:19.850 --> 00:18:21.210
that I've found.

00:18:21.210 --> 00:18:23.670
So, to add the action.

00:18:23.670 --> 00:18:25.230
How do we do this?

00:18:25.230 --> 00:18:26.610
This is a little bit different
than we've seen

00:18:26.610 --> 00:18:29.620
in our other features.

00:18:29.620 --> 00:18:31.750
What we're doing here is, after
we've constructed the

00:18:31.750 --> 00:18:35.640
chart object, our bubble chart,
we're going to set an

00:18:35.640 --> 00:18:37.420
action on it.

00:18:37.420 --> 00:18:41.916
And the majority of stuff, the
juicy bits of this, is really

00:18:41.916 --> 00:18:43.970
this action function here.

00:18:43.970 --> 00:18:47.520
The action function says, when
I click on that little label

00:18:47.520 --> 00:18:51.360
inside the tool tip, what
do we do with it?

00:18:51.360 --> 00:18:54.210
And so all I do is I want
to get the selection.

00:18:54.210 --> 00:18:58.560
I already have the URL that's
in the data table.

00:18:58.560 --> 00:19:01.640
So I want to say, OK, based on
my selection, I want to get

00:19:01.640 --> 00:19:03.960
the cell with the URL
from the row.

00:19:03.960 --> 00:19:06.010
So we're going to get
the selection.

00:19:06.010 --> 00:19:09.410
And then we're going to get the
value at the fifth column.

00:19:09.410 --> 00:19:11.830
And then we're going
to open the URL.

00:19:11.830 --> 00:19:13.810
And that's all there is to it.

00:19:13.810 --> 00:19:15.660
I mean, it's just JavaScript,
so you can do anything you

00:19:15.660 --> 00:19:19.120
want within that function.

00:19:19.120 --> 00:19:22.220
And really, this was like an
incredibly useful tool when

00:19:22.220 --> 00:19:25.980
searching for real estate.

00:19:25.980 --> 00:19:29.600
It really helps to visualize
where everything is, how far

00:19:29.600 --> 00:19:32.590
away everything is, rather than
just looking at pictures

00:19:32.590 --> 00:19:34.110
of the inside.

00:19:34.110 --> 00:19:36.450
You can really see a
lot of data all the

00:19:36.450 --> 00:19:37.700
once with the bubble.

00:19:40.820 --> 00:19:42.840
So that was a very
good experience.

00:19:42.840 --> 00:19:46.290
Hopefully the closing
will go well.

00:19:46.290 --> 00:19:47.550
The wedding.

00:19:47.550 --> 00:19:48.650
The wedding there's a lot--

00:19:48.650 --> 00:19:49.850
I have a very big family.

00:19:49.850 --> 00:19:52.110
I have a big international
family.

00:19:52.110 --> 00:19:54.930
They're coming from all
over the place.

00:19:54.930 --> 00:19:57.670
And it's tough to visualize
stuff like this.

00:19:57.670 --> 00:20:01.190
So we actually do offer
a geochart.

00:20:01.190 --> 00:20:03.430
And the geochart's going to
show us where all of these

00:20:03.430 --> 00:20:05.390
wedding guests are
coming from.

00:20:05.390 --> 00:20:07.800
And we can see, OK, I've got a
lot of people from Greenland,

00:20:07.800 --> 00:20:11.200
it looks like, and some Irish
relatives, and a couple of

00:20:11.200 --> 00:20:15.140
people from the Ukraine, and
maybe one guy from Spain.

00:20:15.140 --> 00:20:18.230
And you can map out all
the data you want.

00:20:18.230 --> 00:20:21.170
And these will be geocoded
for you.

00:20:21.170 --> 00:20:24.360
So let's take a look at how
we're constructing this data.

00:20:24.360 --> 00:20:27.590
So I'm not actually providing
anything complicated for my

00:20:27.590 --> 00:20:28.480
data table.

00:20:28.480 --> 00:20:31.780
I'm providing just the
name of the country.

00:20:31.780 --> 00:20:35.650
Common names here going to be
cached by the library, so you

00:20:35.650 --> 00:20:37.660
won't need to make a network
request to figure out, OK,

00:20:37.660 --> 00:20:38.630
what is Ireland?

00:20:38.630 --> 00:20:40.590
Where is that on my map?

00:20:40.590 --> 00:20:42.460
It'll actually just know that.

00:20:42.460 --> 00:20:44.660
More complex names, if you want
to provide longitude and

00:20:44.660 --> 00:20:47.590
latitude, it'll make a geocoding
request to the

00:20:47.590 --> 00:20:48.940
Google Maps API.

00:20:48.940 --> 00:20:52.710
And this is all done
automatically for you.

00:20:52.710 --> 00:20:55.470
So here we're just saying the
region that the guests are

00:20:55.470 --> 00:20:57.530
coming from, and then
the number of guests

00:20:57.530 --> 00:21:00.670
coming from that area.

00:21:00.670 --> 00:21:03.530
Here we need to load a different
package than we've

00:21:03.530 --> 00:21:04.210
loaded before.

00:21:04.210 --> 00:21:06.240
We're going to load the
geochart package.

00:21:06.240 --> 00:21:10.450
And then we're going to
construct the geochart object.

00:21:10.450 --> 00:21:14.790
So very, very simple to
create a geochart.

00:21:14.790 --> 00:21:16.960
But if you look, this is
actually a Mercator

00:21:16.960 --> 00:21:18.300
projection.

00:21:18.300 --> 00:21:21.030
And a Mercator projection
is basically how

00:21:21.030 --> 00:21:21.730
you're going to--

00:21:21.730 --> 00:21:24.030
a map projection first of all,
is how you're going to take

00:21:24.030 --> 00:21:26.880
the globe, and translate
it to a flat surface?

00:21:26.880 --> 00:21:28.630
And here is the Mercator
projection.

00:21:28.630 --> 00:21:30.420
And this Mercator projection
is very common.

00:21:30.420 --> 00:21:32.200
I'm sure you've all seen
a map of the world

00:21:32.200 --> 00:21:33.420
that looks like this.

00:21:33.420 --> 00:21:36.070
And it was really designed
for marine navigation.

00:21:36.070 --> 00:21:37.800
And that's pretty much it.

00:21:37.800 --> 00:21:40.000
And that's pretty much
all it's useful for.

00:21:40.000 --> 00:21:42.200
And if you look at Greenland,
it's giant.

00:21:42.200 --> 00:21:44.890
It's bigger than Africa.

00:21:44.890 --> 00:21:46.780
Mercator, you're going to take
something, and you're going to

00:21:46.780 --> 00:21:52.680
stretch it out such that if you
were to go directly side

00:21:52.680 --> 00:21:56.230
to side here, so you go from
Maine, you would end up

00:21:56.230 --> 00:21:57.440
somewhere in France.

00:21:57.440 --> 00:21:59.350
Exactly east.

00:21:59.350 --> 00:22:01.740
But this isn't really too useful
for seeing things.

00:22:01.740 --> 00:22:03.990
When I was a little kid, and
I knew my relatives from

00:22:03.990 --> 00:22:06.490
Greenland, I thought they
must be super powerful.

00:22:06.490 --> 00:22:08.850
Because Greenland must
be super powerful,

00:22:08.850 --> 00:22:11.170
because it's giant.

00:22:11.170 --> 00:22:13.650
But Mercator really isn't
appropriate here.

00:22:13.650 --> 00:22:16.620
So we've added the ability
to have different map

00:22:16.620 --> 00:22:17.440
projections.

00:22:17.440 --> 00:22:20.690
So you can decide what is the
best way to show this data.

00:22:20.690 --> 00:22:25.290
And this is a Kavrayskiy VII.

00:22:25.290 --> 00:22:27.490
And this map projection is
going to give you minimal

00:22:27.490 --> 00:22:28.990
distortion.

00:22:28.990 --> 00:22:31.610
So here you can see, wow,
Greenland is a much more

00:22:31.610 --> 00:22:32.910
reasonable size.

00:22:32.910 --> 00:22:36.380
Australia is a much more
reasonable size.

00:22:36.380 --> 00:22:38.660
Everything looks
in proportion.

00:22:38.660 --> 00:22:41.690
And this projection is really
designed so that each of the

00:22:41.690 --> 00:22:46.090
individual regions are
minimally distorted.

00:22:46.090 --> 00:22:48.590
So to change my visualization
to have a different

00:22:48.590 --> 00:22:52.450
projection, all I'm doing here
is adding another option.

00:22:52.450 --> 00:22:56.120
And this option is just going
to say, OK, I want not the

00:22:56.120 --> 00:22:56.930
default projection.

00:22:56.930 --> 00:22:58.680
I want to specify
the Kavrayskiy

00:22:58.680 --> 00:23:00.140
VII projection instead.

00:23:03.020 --> 00:23:06.080
So we can go back, and
we can see a much

00:23:06.080 --> 00:23:08.530
nicer view of the world.

00:23:08.530 --> 00:23:10.800
I also have a lot of people
visiting from within the

00:23:10.800 --> 00:23:13.830
United States.

00:23:13.830 --> 00:23:16.180
You can see the view of the
United States here.

00:23:16.180 --> 00:23:17.510
Again, it's a little
stretched out.

00:23:17.510 --> 00:23:19.550
This is the Mercator
projection again.

00:23:19.550 --> 00:23:22.510
This isn't really what the
United States looks like.

00:23:22.510 --> 00:23:25.290
Everything's kind of distorted,
the further you

00:23:25.290 --> 00:23:28.970
venture away from the equator.

00:23:28.970 --> 00:23:32.490
But in order to construct this,
we're just passing the

00:23:32.490 --> 00:23:34.430
state codes.

00:23:34.430 --> 00:23:37.300
And most of these are
cached again.

00:23:37.300 --> 00:23:40.370
So we're creating our data table
with all of the states

00:23:40.370 --> 00:23:43.780
and the number of visitors.

00:23:43.780 --> 00:23:46.550
In order to zoom in on a
specific region, we're just

00:23:46.550 --> 00:23:48.150
going to provide that
in the options.

00:23:48.150 --> 00:23:50.390
So in this case, we want
to view the US region.

00:23:53.500 --> 00:23:55.200
And we have our Mercator
projection

00:23:55.200 --> 00:23:57.110
of the United States.

00:23:57.110 --> 00:23:59.360
But a more appropriate
projection for the United

00:23:59.360 --> 00:24:01.650
States is the Albers
projection.

00:24:01.650 --> 00:24:04.110
And this is actually what I'm
used to seeing when I see a

00:24:04.110 --> 00:24:07.430
map of the United
States, is this.

00:24:07.430 --> 00:24:11.010
So in order to specify this
projection, we're going to,

00:24:11.010 --> 00:24:13.430
again, give it the projection
option.

00:24:13.430 --> 00:24:15.000
But this one's a little
different.

00:24:15.000 --> 00:24:17.560
This one you're able to
specify parallels.

00:24:17.560 --> 00:24:19.780
And some projections
require you to

00:24:19.780 --> 00:24:21.520
specify these parallels.

00:24:21.520 --> 00:24:25.140
Where is the projection
essentially centered around?

00:24:25.140 --> 00:24:28.820
So this might be 29 and 1/2, 45
and 1/2, that's appropriate

00:24:28.820 --> 00:24:29.550
for the United States.

00:24:29.550 --> 00:24:31.270
But it might not be appropriate
for the European

00:24:31.270 --> 00:24:32.920
Union, for example.

00:24:32.920 --> 00:24:34.270
So these are good ones.

00:24:34.270 --> 00:24:36.320
It will choose these by
default, if you want.

00:24:36.320 --> 00:24:38.460
But these are ones I wanted
to hand pick.

00:24:41.140 --> 00:24:43.600
So again, we can see the
Albers, the equal area.

00:24:43.600 --> 00:24:45.170
And we can actually go back
and compare a little.

00:24:45.170 --> 00:24:49.070
So if you look at Minnesota
and Florida, and how they

00:24:49.070 --> 00:24:52.770
really shift between the two.

00:24:52.770 --> 00:24:55.140
And even that the distance,
you can see Maine and

00:24:55.140 --> 00:24:57.360
Washington kind of
coming together.

00:24:57.360 --> 00:25:01.590
It really demonstrates the
amount of distortion that each

00:25:01.590 --> 00:25:04.450
of the projections
is making up for.

00:25:07.312 --> 00:25:09.220
All right.

00:25:09.220 --> 00:25:12.540
Get you guys out of here
and get you to lunch.

00:25:12.540 --> 00:25:15.600
So our new features.

00:25:15.600 --> 00:25:19.380
We had the new visualization in
the timeline visualization.

00:25:19.380 --> 00:25:22.400
We added the ability to
add in trend lines.

00:25:22.400 --> 00:25:24.730
We have actions, new
interactions

00:25:24.730 --> 00:25:26.590
for our tool tips.

00:25:26.590 --> 00:25:29.810
And map projections, for more

00:25:29.810 --> 00:25:32.830
appropriately displaying geocharts.

00:25:32.830 --> 00:25:34.900
And all of this is for free,
and you see this at

00:25:34.900 --> 00:25:38.190
developers.google.com/chart.

00:25:38.190 --> 00:25:40.950
And it's a simple
JavaScript API.

00:25:40.950 --> 00:25:44.406
And that's about all I had.

00:25:44.406 --> 00:25:45.350
[AUDIENCE CLAPS]

00:25:45.350 --> 00:25:46.600
MITCHELL FOLEY: Thank you.

00:25:50.550 --> 00:25:52.560
If anyone has any questions, I'm
happy to take questions.

00:25:59.810 --> 00:26:00.985
AUDIENCE: Just a quick one.

00:26:00.985 --> 00:26:03.960
Ken Anderson from University
of Colorado.

00:26:03.960 --> 00:26:06.280
I've been really excited to
learn more about Dart while

00:26:06.280 --> 00:26:06.950
I've been here.

00:26:06.950 --> 00:26:11.260
And I'm wondering what is the
timeline, or are there plans

00:26:11.260 --> 00:26:15.190
in place to integrate services
like these in to Dart?

00:26:15.190 --> 00:26:19.260
Because right now, I don't know
how easy it is to call

00:26:19.260 --> 00:26:22.110
existing JavaScript libraries
straight from Dart.

00:26:22.110 --> 00:26:25.370
MITCHELL FOLEY: So, I know of
no way currently, with Dart.

00:26:25.370 --> 00:26:27.770
We haven't discussed this
with our team at all.

00:26:27.770 --> 00:26:31.480
I will say that we have worked
a lot with GWT, Google Web

00:26:31.480 --> 00:26:34.370
Toolkit, so we do have GWT
wrappers for all of these.

00:26:34.370 --> 00:26:37.840
But as far as Dart, if you can
call JavaScript code from

00:26:37.840 --> 00:26:40.950
Dart, then you'll be able
to call this from Dart.

00:26:40.950 --> 00:26:43.360
But there are no specific
Dart wrappers.

00:26:43.360 --> 00:26:44.260
AUDIENCE: Thanks.

00:26:44.260 --> 00:26:45.980
AUDIENCE: Timothy Wall
with CloudLock.

00:26:45.980 --> 00:26:49.140
I'm looking forward to seeing
the timeline come out.

00:26:49.140 --> 00:26:52.340
I've currently got a
visualization based on Google

00:26:52.340 --> 00:26:54.230
App Engine costs over time.

00:26:54.230 --> 00:26:54.710
MITCHELL FOLEY: OK.

00:26:54.710 --> 00:26:57.030
AUDIENCE: So we can see the
usage and spiking of costs.

00:26:57.030 --> 00:26:59.490
And we also have that mapped
in with another data source

00:26:59.490 --> 00:27:00.940
that shows sort of what's
going in the

00:27:00.940 --> 00:27:02.900
application at the time.

00:27:02.900 --> 00:27:05.480
So we end up having a
lot of events there.

00:27:05.480 --> 00:27:11.540
And the default formatting for
injecting, I guess they're

00:27:11.540 --> 00:27:15.570
called annotations, into the
graph is rather limited.

00:27:15.570 --> 00:27:18.780
Do you have any plans, or is
there anything upcoming to

00:27:18.780 --> 00:27:22.330
allow more customization of the
annotations that are put

00:27:22.330 --> 00:27:24.020
on a given visualization?

00:27:24.020 --> 00:27:25.620
MITCHELL FOLEY: We're absolutely
looking into adding

00:27:25.620 --> 00:27:28.000
more customizations
all the time.

00:27:28.000 --> 00:27:31.070
My recommendation would
be to complain on the

00:27:31.070 --> 00:27:32.290
public mailing list.

00:27:32.290 --> 00:27:36.060
We really do listen to
everything on all of the

00:27:36.060 --> 00:27:38.000
mailing lists that we receive.

00:27:38.000 --> 00:27:41.050
We have had some complaints
from--

00:27:41.050 --> 00:27:43.790
well, had some feature
requests, to add more

00:27:43.790 --> 00:27:44.710
annotations.

00:27:44.710 --> 00:27:47.350
I don't think I can talk about
specific schedules or promise

00:27:47.350 --> 00:27:48.660
anything right now.

00:27:48.660 --> 00:27:53.210
AUDIENCE: I noticed with the
action, it looked like the

00:27:53.210 --> 00:27:55.780
specific data around that
had been formatted in

00:27:55.780 --> 00:27:56.460
a particular way.

00:27:56.460 --> 00:27:57.810
I don't know if that was
customized or if that's the

00:27:57.810 --> 00:27:58.940
default presentation.

00:27:58.940 --> 00:28:00.240
MITCHELL FOLEY: That was
actually the default

00:28:00.240 --> 00:28:01.000
customization.

00:28:01.000 --> 00:28:04.980
I was running that exact code
to make that presentation.

00:28:04.980 --> 00:28:07.150
I think I might have changed the
size a little bit for the

00:28:07.150 --> 00:28:07.415
presentation.

00:28:07.415 --> 00:28:10.480
But other than that, that
was the default.

00:28:10.480 --> 00:28:11.990
There is some customization.

00:28:11.990 --> 00:28:15.710
And we're always looking to
improve the customizability of

00:28:15.710 --> 00:28:18.740
our product.

00:28:18.740 --> 00:28:19.910
Yep.

00:28:19.910 --> 00:28:22.500
AUDIENCE: So I know you said the
colors are chosen kind of

00:28:22.500 --> 00:28:23.820
based on what pops the most.

00:28:23.820 --> 00:28:26.310
Is there any way to override
that for branding purposes for

00:28:26.310 --> 00:28:27.820
certain companies who
want to use their

00:28:27.820 --> 00:28:30.220
colors in their logo?

00:28:30.220 --> 00:28:31.660
MITCHELL FOLEY: Absolutely.

00:28:31.660 --> 00:28:34.420
It's not always appropriate
to use the default colors.

00:28:34.420 --> 00:28:38.250
For example, sometimes red,
you'll want to be indicating a

00:28:38.250 --> 00:28:39.860
high number, like with
temperature.

00:28:39.860 --> 00:28:41.160
But sometimes you want
it to be a low

00:28:41.160 --> 00:28:44.010
number, like with money.

00:28:44.010 --> 00:28:45.720
So yes, there are ways.

00:28:45.720 --> 00:28:50.340
And read all about them on
developers.google.com/charts.

00:28:50.340 --> 00:28:51.530
AUDIENCE: Thanks.

00:28:51.530 --> 00:28:52.295
MITCHELL FOLEY: No problem.

00:28:52.295 --> 00:28:52.680
AUDIENCE: Hi.

00:28:52.680 --> 00:28:55.210
Is there any intention to make
this available within Android

00:28:55.210 --> 00:28:57.130
apps, rather than
just on the web?

00:28:57.130 --> 00:29:00.210
MITCHELL FOLEY: Mobile is
a very important part of

00:29:00.210 --> 00:29:02.880
Google's strategy as a whole.

00:29:02.880 --> 00:29:06.860
Right now, these charts
will output to SVG.

00:29:06.860 --> 00:29:11.280
We are actively working
to make them better.

00:29:11.280 --> 00:29:13.610
Adding in support for touch
events, for example.

00:29:13.610 --> 00:29:16.415
But they will render just
fine right now on

00:29:16.415 --> 00:29:18.592
a native web browser.

00:29:18.592 --> 00:29:19.018
AUDIENCE: OK.

00:29:19.018 --> 00:29:19.870
Thanks.

00:29:19.870 --> 00:29:21.270
MITCHELL FOLEY: Thanks.

00:29:21.270 --> 00:29:23.260
AUDIENCE: You showed a number
of the, for example, the

00:29:23.260 --> 00:29:25.640
timeline charts.

00:29:25.640 --> 00:29:28.670
Is there a way to have two of
the charts kind of stacked one

00:29:28.670 --> 00:29:29.230
above each other?

00:29:29.230 --> 00:29:33.150
So using your example again,
showing not just your blood

00:29:33.150 --> 00:29:36.720
pressure chart, but showing that
over the timeline chart,

00:29:36.720 --> 00:29:40.820
and being able to have a
vertical line move between

00:29:40.820 --> 00:29:45.620
them to show where you are
looking at any given point?

00:29:45.620 --> 00:29:47.240
MITCHELL FOLEY: So we do have
the ability for you to add an

00:29:47.240 --> 00:29:49.030
arbitrary number of charts
onto a page.

00:29:49.030 --> 00:29:51.690
As far as adding a line right
down the middle, we don't have

00:29:51.690 --> 00:29:54.230
support for that yet.

00:29:54.230 --> 00:29:56.820
But we do have the ability to
build dashboards, where you

00:29:56.820 --> 00:29:58.840
can transform your data,
for all of your

00:29:58.840 --> 00:30:00.460
charts, all at once.

00:30:00.460 --> 00:30:03.930
So you can have the data
change the range.

00:30:03.930 --> 00:30:05.405
So you can go through
time like that.

00:30:05.405 --> 00:30:05.720
AUDIENCE: OK.

00:30:05.720 --> 00:30:11.140
MITCHELL FOLEY: But as far as
the line, that specific way of

00:30:11.140 --> 00:30:13.320
showing that story,
we don't yet.

00:30:13.320 --> 00:30:15.420
AUDIENCE: So, putting multiple
charts on a page at the time,

00:30:15.420 --> 00:30:16.730
that's just a matter
of putting in two

00:30:16.730 --> 00:30:17.840
divs and having them--

00:30:17.840 --> 00:30:18.180
MITCHELL FOLEY: Absolutely.

00:30:18.180 --> 00:30:19.150
AUDIENCE: More or less aligned
with each other.

00:30:19.150 --> 00:30:20.190
MITCHELL FOLEY: Yes.

00:30:20.190 --> 00:30:20.940
AUDIENCE: OK.

00:30:20.940 --> 00:30:21.340
MITCHELL FOLEY: Yep.

00:30:21.340 --> 00:30:22.030
AUDIENCE: Thank you.

00:30:22.030 --> 00:30:23.420
MITCHELL FOLEY: No problem.

00:30:23.420 --> 00:30:26.000
AUDIENCE: I'm excited about the
timeline charts as well.

00:30:26.000 --> 00:30:29.450
I was wondering if there's
a way to specify your

00:30:29.450 --> 00:30:30.950
own metric for time?

00:30:30.950 --> 00:30:34.140
Like if you wanted to do
geologic epochs or something

00:30:34.140 --> 00:30:36.420
like that, and still
use those tools.

00:30:36.420 --> 00:30:38.530
MITCHELL FOLEY: So in addition
to passing in dates, you can

00:30:38.530 --> 00:30:40.410
just pass in numbers.

00:30:40.410 --> 00:30:43.880
It will try to convert those
to dates, and it does a

00:30:43.880 --> 00:30:45.130
reasonably good job.

00:30:49.230 --> 00:30:52.380
I guess beyond that,
there's not a lot.

00:30:52.380 --> 00:30:55.350
It will display no matter what
numbers you put in there.

00:30:55.350 --> 00:30:56.270
So there's that.

00:30:56.270 --> 00:30:59.000
I would recommend, once it's
released, play around with it,

00:30:59.000 --> 00:31:03.480
and see if it fits your needs.

00:31:03.480 --> 00:31:04.690
And if it doesn't,
let us know.

00:31:04.690 --> 00:31:05.440
Really let us know.

00:31:05.440 --> 00:31:05.670
AUDIENCE: OK.

00:31:05.670 --> 00:31:06.880
MITCHELL FOLEY: We're always
looking for more feedback.

00:31:06.880 --> 00:31:07.660
AUDIENCE: Thank you.

00:31:07.660 --> 00:31:08.840
MITCHELL FOLEY: Thank you.

00:31:08.840 --> 00:31:10.190
AUDIENCE: Hi.

00:31:10.190 --> 00:31:16.400
I think Google Visualization
API is a static chart by

00:31:16.400 --> 00:31:18.970
static data, from my
understanding.

00:31:18.970 --> 00:31:24.600
So do you have a plan to develop
real-time chat by

00:31:24.600 --> 00:31:28.560
updating Ajax or WebSockets,
something like that?

00:31:28.560 --> 00:31:28.690
MITCHELL FOLEY: I'm sorry.

00:31:28.690 --> 00:31:30.650
Could you repeat the question?

00:31:30.650 --> 00:31:32.490
AUDIENCE: So do you
have a plan to

00:31:32.490 --> 00:31:34.810
develop a real-time chart?

00:31:34.810 --> 00:31:38.750
I think Google chart is
static chart, I think.

00:31:38.750 --> 00:31:43.330
Do you have plans of updating
by the Ajax or WebSockets,

00:31:43.330 --> 00:31:45.740
visualize in real time?

00:31:45.740 --> 00:31:47.790
MITCHELL FOLEY: We don't provide
that, however you can

00:31:47.790 --> 00:31:48.850
just update the chart.

00:31:48.850 --> 00:31:51.700
So if you write a--

00:31:51.700 --> 00:31:53.500
if you have it at
a set interval

00:31:53.500 --> 00:31:55.200
on a page, for example.

00:31:55.200 --> 00:31:57.520
And you're saying,
redraw the chart.

00:31:57.520 --> 00:32:01.072
So you can see, let me
go back to some code.

00:32:01.072 --> 00:32:01.882
AUDIENCE: You have
transformations on

00:32:01.882 --> 00:32:03.502
charts, don't you?

00:32:03.502 --> 00:32:04.480
MITCHELL FOLEY: Absolutely.

00:32:04.480 --> 00:32:07.450
So right here, where we're
going chart.draw--

00:32:07.450 --> 00:32:07.920
AUDIENCE: Ahh.

00:32:07.920 --> 00:32:09.590
MITCHELL FOLEY: --you can save
that chart object and just

00:32:09.590 --> 00:32:12.110
call chart.draw again,
with different data

00:32:12.110 --> 00:32:13.150
and different options.

00:32:13.150 --> 00:32:14.710
AUDIENCE: [INAUDIBLE].

00:32:14.710 --> 00:32:16.300
MITCHELL FOLEY: And we actually
do have animation

00:32:16.300 --> 00:32:18.520
transitions between
those two states.

00:32:18.520 --> 00:32:18.950
AUDIENCE: OK.

00:32:18.950 --> 00:32:19.730
Thank you.

00:32:19.730 --> 00:32:21.020
MITCHELL FOLEY: Thank you.

00:32:21.020 --> 00:32:23.020
AUDIENCE: In fact, a similar
question here.

00:32:23.020 --> 00:32:26.980
The use case is like a livestock
price scenario where

00:32:26.980 --> 00:32:28.390
there's data that streams--

00:32:28.390 --> 00:32:33.480
comes in every minute or two,
and instead of reloading all

00:32:33.480 --> 00:32:37.770
the JSON data table, is there
a way to just feed the delta

00:32:37.770 --> 00:32:42.160
that we have for the last
minute into the chart?

00:32:42.160 --> 00:32:42.780
MITCHELL FOLEY: You
could certainly

00:32:42.780 --> 00:32:44.070
add onto a data table--

00:32:44.070 --> 00:32:44.300
AUDIENCE: OK.

00:32:44.300 --> 00:32:44.770
MITCHELL FOLEY: Once
you've finished

00:32:44.770 --> 00:32:45.300
constructing the data table.

00:32:45.300 --> 00:32:46.740
AUDIENCE: And then I
will do draw again?

00:32:46.740 --> 00:32:47.270
MITCHELL FOLEY: Yes.

00:32:47.270 --> 00:32:50.900
So you can say, OK, add this
data, remove this data, and

00:32:50.900 --> 00:32:51.560
then redraw.

00:32:51.560 --> 00:32:53.480
Or just add data, or
just remove data.

00:32:53.480 --> 00:32:54.430
Whatever you'd like to do.

00:32:54.430 --> 00:32:57.000
AUDIENCE: If I just add data,
it won't draw automatically?

00:32:57.000 --> 00:32:58.960
I have to programmatically
call the draw?

00:32:58.960 --> 00:32:59.340
MITCHELL FOLEY: Correct.

00:32:59.340 --> 00:33:01.330
You just have to have that
one extra call where it's

00:33:01.330 --> 00:33:01.880
chart.draw.

00:33:01.880 --> 00:33:03.000
AUDIENCE: I see, thank you.

00:33:03.000 --> 00:33:04.252
MITCHELL FOLEY: Thank you.

00:33:04.252 --> 00:33:04.650
AUDIENCE: Hi.

00:33:04.650 --> 00:33:07.650
I was wondering if you have any
options to download the

00:33:07.650 --> 00:33:09.720
data table on the client?

00:33:09.720 --> 00:33:10.610
MITCHELL FOLEY: You
can convert data

00:33:10.610 --> 00:33:12.520
tables to a JSON string.

00:33:12.520 --> 00:33:17.340
And so you can expose that
functionality to your users.

00:33:17.340 --> 00:33:20.190
And then you can actually
provide just a JSON blob to

00:33:20.190 --> 00:33:24.070
the data table to reconstruct
it in a different context.

00:33:24.070 --> 00:33:24.530
AUDIENCE: OK.

00:33:24.530 --> 00:33:25.070
Thanks.

00:33:25.070 --> 00:33:26.690
MITCHELL FOLEY: Thank you.

00:33:26.690 --> 00:33:27.570
AUDIENCE: Hi.

00:33:27.570 --> 00:33:30.520
I was looking at the scatter
graph, and I was wondering if

00:33:30.520 --> 00:33:33.410
there is an option to
provide threshold.

00:33:33.410 --> 00:33:35.790
For example, you had blood
pressure, and I want to look

00:33:35.790 --> 00:33:37.510
at blood pressure beyond
certain numbers.

00:33:37.510 --> 00:33:39.280
Say 140, red.

00:33:39.280 --> 00:33:42.720
And below a certain number, bad,
it's low blood pressure.

00:33:42.720 --> 00:33:45.910
So can you visualize that in
the scatter graph or some

00:33:45.910 --> 00:33:47.070
other form of graph?

00:33:47.070 --> 00:33:47.450
MITCHELL FOLEY: Yes.

00:33:47.450 --> 00:33:50.570
So I mentioned, in addition to
providing just the raw data

00:33:50.570 --> 00:33:52.070
table, you can also
set attributes.

00:33:52.070 --> 00:33:56.650
And one of the things
you can set is--

00:33:56.650 --> 00:33:59.150
my goodness, I forget the
term that we use off

00:33:59.150 --> 00:34:00.450
the top of my head.

00:34:00.450 --> 00:34:01.230
But you can--

00:34:01.230 --> 00:34:02.000
ah, roles.

00:34:02.000 --> 00:34:04.390
You can assign roles.

00:34:04.390 --> 00:34:08.110
And so you can assign a scope
role to a piece of data and

00:34:08.110 --> 00:34:10.370
say, this is out of scope
or this is in scope.

00:34:10.370 --> 00:34:12.389
And it will color that
data appropriately.

00:34:12.389 --> 00:34:14.320
So if you want to only highlight
the ones that are

00:34:14.320 --> 00:34:16.929
within the range, you can
assign a scope role

00:34:16.929 --> 00:34:18.522
to do that for you.

00:34:18.522 --> 00:34:18.914
AUDIENCE: OK.

00:34:18.914 --> 00:34:19.699
Thank you.

00:34:19.699 --> 00:34:21.702
MITCHELL FOLEY: Thank you.

00:34:21.702 --> 00:34:26.949
AUDIENCE: Are these controlled
ADA compliant?

00:34:26.949 --> 00:34:27.810
MITCHELL FOLEY: I'm sorry,
say that one more time.

00:34:27.810 --> 00:34:29.790
AUDIENCE: The timeline and
all this visualization

00:34:29.790 --> 00:34:33.130
controllers, are they
ADA compliant?

00:34:33.130 --> 00:34:36.020
ADA compliant, section 503.

00:34:36.020 --> 00:34:37.270
The accessibility?

00:34:39.270 --> 00:34:39.909
MITCHELL FOLEY: No.

00:34:39.909 --> 00:34:41.150
Not yet.

00:34:41.150 --> 00:34:43.699
We are working on-- there's
actually some really exciting

00:34:43.699 --> 00:34:45.100
things that we're working
on right now.

00:34:45.100 --> 00:34:45.980
AUDIENCE: OK.

00:34:45.980 --> 00:34:49.130
MITCHELL FOLEY: They are not
finished, but we are thinking

00:34:49.130 --> 00:34:52.675
about accessibility, and we'll
hopefully have a better answer

00:34:52.675 --> 00:34:53.940
for you shortly.

00:34:53.940 --> 00:34:54.350
AUDIENCE: OK.

00:34:54.350 --> 00:34:54.710
Thank you.

00:34:54.710 --> 00:34:56.396
MITCHELL FOLEY: Thank you.

00:34:56.396 --> 00:34:57.770
AUDIENCE: Hi.

00:34:57.770 --> 00:35:01.860
When I look at all the
[INAUDIBLE], like just give

00:35:01.860 --> 00:35:05.050
"Ireland" and map Ireland
automatically, it looks really

00:35:05.050 --> 00:35:06.430
like Fusion Table.

00:35:06.430 --> 00:35:06.780
MITCHELL FOLEY: Mm hmm.

00:35:06.780 --> 00:35:08.230
AUDIENCE: Functionality.

00:35:08.230 --> 00:35:11.770
What's the plan in the future
between Fusion Table and

00:35:11.770 --> 00:35:15.460
releasing all of
those features?

00:35:15.460 --> 00:35:17.980
MITCHELL FOLEY: Could you say
that one more time please?

00:35:17.980 --> 00:35:20.270
AUDIENCE: What's a roadmap
behind it having all those

00:35:20.270 --> 00:35:23.210
features for [INAUDIBLE]
developers to

00:35:23.210 --> 00:35:24.620
integrate in the website?

00:35:24.620 --> 00:35:29.300
And right now going through
Fusion Table, to have the same

00:35:29.300 --> 00:35:31.890
results and same story at
the end of the day?

00:35:31.890 --> 00:35:33.810
MITCHELL FOLEY: Are you asking
about Fusion Tables?

00:35:33.810 --> 00:35:35.280
AUDIENCE: Yes.

00:35:35.280 --> 00:35:37.150
MITCHELL FOLEY: I honestly
don't know too much about

00:35:37.150 --> 00:35:38.400
Fusion Tables.

00:35:40.450 --> 00:35:41.882
Does anybody have any idea?

00:35:41.882 --> 00:35:42.866
AUDIENCE: It's a
Google product.

00:35:42.866 --> 00:35:45.330
It comes from Google, too.

00:35:45.330 --> 00:35:47.390
MITCHELL FOLEY: Believe it or
not, they don't consult me on

00:35:47.390 --> 00:35:49.400
everything.

00:35:49.400 --> 00:35:51.880
I have my charts and graphs
and stuff, but I actually

00:35:51.880 --> 00:35:54.000
don't know too much about Fusion
Tables, I'm very sorry.

00:35:54.000 --> 00:35:56.164
AUDIENCE: Thank you.

00:35:56.164 --> 00:35:57.120
MITCHELL FOLEY: Yes?

00:35:57.120 --> 00:36:01.280
AUDIENCE: So, if I want to set
the scale on the chart on the

00:36:01.280 --> 00:36:06.290
side, do I have other ways to
do besides just a static

00:36:06.290 --> 00:36:10.250
linear chart that encompasses
all the data?

00:36:10.250 --> 00:36:13.225
Can I have data that's off the
chart and just have that sort

00:36:13.225 --> 00:36:17.080
of disconnected and appear
above it, and say this is

00:36:17.080 --> 00:36:19.550
constrained to between
80 and 120, or

00:36:19.550 --> 00:36:20.420
whatever the values are?

00:36:20.420 --> 00:36:20.860
MITCHELL FOLEY: Yes.

00:36:20.860 --> 00:36:23.420
AUDIENCE: And also, can you
do a non-linear scale?

00:36:23.420 --> 00:36:23.850
MITCHELL FOLEY: Yes.

00:36:23.850 --> 00:36:24.380
AUDIENCE: Can I do a

00:36:24.380 --> 00:36:25.535
logarithmic scale, for example?

00:36:25.535 --> 00:36:25.810
MITCHELL FOLEY: Yes.

00:36:25.810 --> 00:36:26.960
Both of those, absolutely.

00:36:26.960 --> 00:36:30.380
You can set the axis
scale yourself.

00:36:30.380 --> 00:36:32.940
You can set the start and
end points for anything.

00:36:32.940 --> 00:36:35.500
You can also set custom
logarithmic scales for

00:36:35.500 --> 00:36:36.460
everything.

00:36:36.460 --> 00:36:40.110
Including the points at which
you want to show on the axis.

00:36:40.110 --> 00:36:41.920
All of that's documented
on the site.

00:36:41.920 --> 00:36:42.350
AUDIENCE: OK.

00:36:42.350 --> 00:36:43.020
Thanks.

00:36:43.020 --> 00:36:44.260
MITCHELL FOLEY: Thank you.

00:36:44.260 --> 00:36:46.330
AUDIENCE: I am really excited
to hear about

00:36:46.330 --> 00:36:48.170
1.1 coming out soon.

00:36:48.170 --> 00:36:51.480
I was wondering if there were
any other new charts in 1.1,

00:36:51.480 --> 00:36:55.816
or if there were any other new
releases with new charts in it

00:36:55.816 --> 00:36:58.420
in the upcoming roadmap?

00:36:58.420 --> 00:37:00.670
MITCHELL FOLEY: So right
now, the only brand new

00:37:00.670 --> 00:37:02.600
visualization is the timeline.

00:37:02.600 --> 00:37:05.260
We do want to eventually
provide even more

00:37:05.260 --> 00:37:06.380
visualizations.

00:37:06.380 --> 00:37:11.160
As far as 1.0 versus 1.1,
1.0 is always the

00:37:11.160 --> 00:37:12.440
current stable version.

00:37:12.440 --> 00:37:15.410
1.1 is always the
beta version.

00:37:15.410 --> 00:37:18.170
So eventually we'll merge
1.1 to be 1.0.

00:37:20.910 --> 00:37:22.230
It's our numbering scheme.

00:37:22.230 --> 00:37:23.700
I don't know what to tell
you about that.

00:37:23.700 --> 00:37:27.530
AUDIENCE: So when's the
next 1.1 coming?

00:37:27.530 --> 00:37:29.410
MITCHELL FOLEY: In
about a week.

00:37:29.410 --> 00:37:31.930
In about a week, you'll be able
to play around, you'll

00:37:31.930 --> 00:37:34.840
have timelines on 1.1, and be
able to play around with that.

00:37:34.840 --> 00:37:37.530
Hopefully another month after
we get the testing and any

00:37:37.530 --> 00:37:42.150
bugs fixed, we'll get that out
in maybe a month or so after.

00:37:42.150 --> 00:37:42.310
AUDIENCE: OK.

00:37:42.310 --> 00:37:45.695
So are there any more new charts
coming in the next six

00:37:45.695 --> 00:37:47.936
to 12 months?

00:37:47.936 --> 00:37:48.882
MITCHELL FOLEY: Yes.

00:37:48.882 --> 00:37:51.250
[AUDIENCE LAUGHS]

00:37:51.250 --> 00:37:52.300
AUDIENCE: Thank you.

00:37:52.300 --> 00:37:54.730
MITCHELL FOLEY: Thank you.

00:37:54.730 --> 00:37:57.250
Any more questions?

00:37:57.250 --> 00:37:59.160
OK, well, if there's not, I'm
happy to stick around for a

00:37:59.160 --> 00:38:00.440
couple minutes.

00:38:00.440 --> 00:38:02.030
Thank you for coming, and
enjoy your lunch.

