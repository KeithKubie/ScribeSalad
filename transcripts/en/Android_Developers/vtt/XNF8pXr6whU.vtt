WEBVTT
Kind: captions
Language: en

00:00:06.050 --> 00:00:07.820
NICK BUTCHER: Hi, I'm Nick
Butcher, an engineer on the

00:00:07.820 --> 00:00:09.540
Android Developer
Relations team.

00:00:09.540 --> 00:00:12.060
I'm going to show you a quick
trick for your activity

00:00:12.060 --> 00:00:13.480
animations.

00:00:13.480 --> 00:00:16.200
So by default, when you switch
screens, Android will show an

00:00:16.200 --> 00:00:18.960
animation between those
two screens.

00:00:18.960 --> 00:00:21.530
A slight variation on the
standard animation is using a

00:00:21.530 --> 00:00:24.390
grow up, grow down animation,
which helps you to retain some

00:00:24.390 --> 00:00:26.540
context where the
users come from.

00:00:26.540 --> 00:00:27.560
You might be familiar with this

00:00:27.560 --> 00:00:29.190
from the Recents animation.

00:00:29.190 --> 00:00:30.930
But you can use it
in your own app.

00:00:30.930 --> 00:00:33.130
So here for example, I
have a grid layout.

00:00:33.130 --> 00:00:36.650
And if I touch on one of these
tiles, this top right one,

00:00:36.650 --> 00:00:39.005
it'll grow up from
where I touched.

00:00:39.005 --> 00:00:41.050
And if I go from around here,
it'll grow from there.

00:00:41.050 --> 00:00:43.450
So it helps to retain context.

00:00:43.450 --> 00:00:46.380
I've slowed this animation down
using one of the tricks,

00:00:46.380 --> 00:00:48.500
using one of the settings in
Developer Options called

00:00:48.500 --> 00:00:50.120
Transition Animation
Scale just to

00:00:50.120 --> 00:00:51.650
demonstrate this better.

00:00:51.650 --> 00:00:54.050
If I turn that off and
go back, you'll

00:00:54.050 --> 00:00:55.440
see it's pretty subtle.

00:00:55.440 --> 00:00:57.080
But it really does help
remember where

00:00:57.080 --> 00:00:58.650
the user came from.

00:00:58.650 --> 00:01:00.970
Best of all, this is incredibly
easy for you to do

00:01:00.970 --> 00:01:01.970
in your code.

00:01:01.970 --> 00:01:03.410
So here we are.

00:01:03.410 --> 00:01:06.310
I'm creating a bit map
to scale from.

00:01:06.310 --> 00:01:09.360
So here, it's just a simple
color for my demo.

00:01:09.360 --> 00:01:11.800
And then you just use the static
method on Activity

00:01:11.800 --> 00:01:15.010
Options to call Make
Scale Up Animation.

00:01:15.010 --> 00:01:17.316
And passing it the view to scale
from the bit map from

00:01:17.316 --> 00:01:18.490
the outer scale from--

00:01:18.490 --> 00:01:21.070
and it will return
you a bundle.

00:01:21.070 --> 00:01:23.800
You pass this bundle to your
call to start activity.

00:01:23.800 --> 00:01:26.180
And this will perform the
animation for you--

00:01:26.180 --> 00:01:27.760
couldn't be easier.

00:01:27.760 --> 00:01:29.740
One slight variation, which I've
commented out here you

00:01:29.740 --> 00:01:32.980
can see in the code, is to
scale up just from a view

00:01:32.980 --> 00:01:35.205
without the thumbnail options,
so if you don't have a

00:01:35.205 --> 00:01:36.600
thumbnail to scale from.

00:01:36.600 --> 00:01:38.160
This is slightly different.

00:01:38.160 --> 00:01:40.460
You'll have to do a
fade animation as

00:01:40.460 --> 00:01:42.170
well as the grow animation.

00:01:42.170 --> 00:01:43.740
So you have a slightly
different effect.

00:01:43.740 --> 00:01:45.590
But if you don't have a
thumbnail to scale from, you

00:01:45.590 --> 00:01:46.680
can use this.

00:01:46.680 --> 00:01:47.930
Thanks very much.

