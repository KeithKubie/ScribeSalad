WEBVTT
Kind: captions
Language: en

00:00:00.409 --> 00:00:02.200
NASIR KHAN: Once again,
we are bringing you

00:00:02.200 --> 00:00:04.740
a developer preview release of
the next version of Android.

00:00:04.740 --> 00:00:07.530
So you can test your apps,
explore new features,

00:00:07.530 --> 00:00:09.480
and provide feedback
to our team.

00:00:09.480 --> 00:00:12.210
Hi, my name is Nasir Khan,
and I'm a developer advocate

00:00:12.210 --> 00:00:13.154
with Android.

00:00:13.154 --> 00:00:15.330
Android O has more
control over what

00:00:15.330 --> 00:00:18.180
applications in the background
can do as part of an effort

00:00:18.180 --> 00:00:20.430
to improve interactive
performance by improving

00:00:20.430 --> 00:00:22.320
RAM usage.

00:00:22.320 --> 00:00:24.330
Android Nougat prevented
apps from receiving

00:00:24.330 --> 00:00:26.640
three specific
implicit broadcasts,

00:00:26.640 --> 00:00:29.280
such as the new photo broadcast
from manifest-declared

00:00:29.280 --> 00:00:30.730
receivers.

00:00:30.730 --> 00:00:34.090
Apps targeting O will no longer
receive implicit broadcasts

00:00:34.090 --> 00:00:36.311
to most manifest-declared
receivers.

00:00:36.311 --> 00:00:38.560
There are a few exceptions
that will still be allowed,

00:00:38.560 --> 00:00:41.490
such as BOOT_COMPLETED,
LOCALE_CHANGED, et cetera.

00:00:41.490 --> 00:00:44.822
Explicit broadcasts that target
the application package that

00:00:44.822 --> 00:00:46.530
are registered in the
manifest will still

00:00:46.530 --> 00:00:50.190
be received, like
ACTION_MY_PACKAGE_REPLACED.

00:00:50.190 --> 00:00:53.460
And you can still register to
receive implicit broadcasts

00:00:53.460 --> 00:00:55.980
while you have it active.

00:00:55.980 --> 00:00:59.730
On apps targeting Android
O, background services

00:00:59.730 --> 00:01:03.090
now only run for a short
time after the app no longer

00:01:03.090 --> 00:01:06.380
has visible activity or
a foreground service.

00:01:06.380 --> 00:01:08.430
startService, or
service PendingIntent

00:01:08.430 --> 00:01:10.260
will throw an
IllegalStateException

00:01:10.260 --> 00:01:12.570
when the app is not
in the foreground.

00:01:12.570 --> 00:01:16.080
Foreground services that require
a persistent notification

00:01:16.080 --> 00:01:17.700
work as usual.

00:01:17.700 --> 00:01:21.310
And there's a new API to start
a foreground service directly,

00:01:21.310 --> 00:01:24.070
startServiceInForeground.

00:01:24.070 --> 00:01:27.040
Finally, even if your
app doesn't target O,

00:01:27.040 --> 00:01:28.860
there will be a few changes.

00:01:28.860 --> 00:01:31.450
First, when your app
enters the cached state--

00:01:31.450 --> 00:01:33.980
that is, with no active
Android component--

00:01:33.980 --> 00:01:37.260
any wake lock it holds will
be automatically released.

00:01:37.260 --> 00:01:40.110
Second, location
updates will change.

00:01:40.110 --> 00:01:42.410
Apps that request
background location updates

00:01:42.410 --> 00:01:47.150
will only get limited
updates a few times per hour.

00:01:47.150 --> 00:01:48.810
Foreground services
aren't impacted.

00:01:48.810 --> 00:01:51.460
So apps that do navigation
or track fitness

00:01:51.460 --> 00:01:53.160
can continue to
get faster updates

00:01:53.160 --> 00:01:56.520
while they are performing
their location-dependent tasks.

00:01:56.520 --> 00:01:59.310
If another app is using
location in the foreground,

00:01:59.310 --> 00:02:01.830
then your background app
can get location updates

00:02:01.830 --> 00:02:06.000
at the same frequency
as that foreground app.

00:02:06.000 --> 00:02:08.530
We are constantly working
to improve user privacy.

00:02:08.530 --> 00:02:10.880
So even if you
don't target O, you

00:02:10.880 --> 00:02:15.030
will notice a change with
Android ID in Settings.Secure.

00:02:15.030 --> 00:02:19.220
In O, it will return a different
identifier for different apps.

00:02:19.220 --> 00:02:22.690
In other words, it is now
scoped per app, per user.

00:02:22.690 --> 00:02:26.080
This new value will persist
across app reinstalls.

00:02:26.080 --> 00:02:28.940
But for a simple, standard
system to help monetize app,

00:02:28.940 --> 00:02:32.170
use user-resettable
Advertising ID instead,

00:02:32.170 --> 00:02:34.610
provided by Google
Play Services.

00:02:34.610 --> 00:02:37.600
Also considering
privacy, apps targeting O

00:02:37.600 --> 00:02:40.640
won't be able to get access
to user accounts using

00:02:40.640 --> 00:02:42.980
GET_ACCOUNTS permissions alone.

00:02:42.980 --> 00:02:47.930
Instead apps must rely on the
account choosing activity.

00:02:47.930 --> 00:02:50.630
Account owners can now choose
whether the accounts will

00:02:50.630 --> 00:02:53.480
be visible to other apps, and
the account choosing activity

00:02:53.480 --> 00:02:56.030
will be updated accordingly.

00:02:56.030 --> 00:02:58.160
Android O adds
notification channels

00:02:58.160 --> 00:03:00.380
to give you those more
fine-grained control

00:03:00.380 --> 00:03:03.710
of notifications and app
developers more flexibility

00:03:03.710 --> 00:03:05.840
to send different
types of notifications

00:03:05.840 --> 00:03:08.700
with less risk of being
completely blocked.

00:03:08.700 --> 00:03:12.470
A notification channel is a
named category of notification

00:03:12.470 --> 00:03:14.000
from a single app.

00:03:14.000 --> 00:03:16.160
Users can block a
single category,

00:03:16.160 --> 00:03:19.340
or alter its behavior, such
as changing buttons, adding

00:03:19.340 --> 00:03:21.920
vibration and lights, and
altering the lock screen

00:03:21.920 --> 00:03:23.330
privacy.

00:03:23.330 --> 00:03:25.490
You can use channels to
have different categories

00:03:25.490 --> 00:03:26.390
of notification.

00:03:26.390 --> 00:03:29.120
For example, a chat app
may show two different chat

00:03:29.120 --> 00:03:30.240
conversations.

00:03:30.240 --> 00:03:33.212
End user may be able to apply
different settings to them.

00:03:33.212 --> 00:03:35.420
A long press on Notification
[? brings ?] the channel

00:03:35.420 --> 00:03:37.460
settings.

00:03:37.460 --> 00:03:40.220
All apps targeting O
must implement channels.

00:03:40.220 --> 00:03:42.440
Otherwise, the notification
will not show up.

00:03:42.440 --> 00:03:43.460
It's super easy to do.

00:03:43.460 --> 00:03:45.560
Just create a
channel, and then call

00:03:45.560 --> 00:03:48.290
said channel within the
notification builder.

00:03:48.290 --> 00:03:50.240
There is much more in
[? user notifications ?]

00:03:50.240 --> 00:03:53.280
like ability to snooze,
set timeouts to cancel,

00:03:53.280 --> 00:03:55.790
background colors of
notification display.

00:03:55.790 --> 00:03:58.240
Make sure to check
out the details.

00:03:58.240 --> 00:04:00.820
Filling out forms is a
time-consuming and error-prone

00:04:00.820 --> 00:04:01.660
task.

00:04:01.660 --> 00:04:04.480
The new autofill framework
makes it easy for apps

00:04:04.480 --> 00:04:07.040
to help their
users through this.

00:04:07.040 --> 00:04:10.060
Android O allows users to
select an autofill app,

00:04:10.060 --> 00:04:13.130
similar to the way the
keyboard app is selected.

00:04:13.130 --> 00:04:16.160
The autofill app is responsible
for storing and securing

00:04:16.160 --> 00:04:19.870
user data, such as addresses,
credit card information, user

00:04:19.870 --> 00:04:22.430
names, and even passwords.

00:04:22.430 --> 00:04:24.380
There's also a new
view API that you

00:04:24.380 --> 00:04:26.180
need to implement
in custom views

00:04:26.180 --> 00:04:28.220
to ensure that
metadata is exposed

00:04:28.220 --> 00:04:29.970
to the autofill framework.

00:04:29.970 --> 00:04:32.370
Picture in picture is now
available for all devices, not

00:04:32.370 --> 00:04:34.160
just Android TV.

00:04:34.160 --> 00:04:37.310
All an app has to do is to call
enter picture in picture mode

00:04:37.310 --> 00:04:39.830
method from the resumed
or paused state, where

00:04:39.830 --> 00:04:42.650
the system supports
entering picture in picture.

00:04:42.650 --> 00:04:44.210
Just like multi-window,
the activity

00:04:44.210 --> 00:04:46.890
gets into paused state when
in picture in picture mode.

00:04:46.890 --> 00:04:49.970
So if you have a media app,
make sure that the playback

00:04:49.970 --> 00:04:52.880
continues in paused
state as well.

00:04:52.880 --> 00:04:55.290
SetPictureinPictureArgs
allow activity

00:04:55.290 --> 00:04:57.080
to specify the picture
in picture aspect

00:04:57.080 --> 00:04:59.146
ratio, along with custom
remote actions that

00:04:59.146 --> 00:05:01.770
allow the user to interact with
the picture in picture activity

00:05:01.770 --> 00:05:03.750
directly.

00:05:03.750 --> 00:05:07.170
Rather than having the app
explicitly use the presentation

00:05:07.170 --> 00:05:09.480
API, regular
activities can now be

00:05:09.480 --> 00:05:11.970
launched on secondary displays.

00:05:11.970 --> 00:05:14.580
These displays have per
display based configuration

00:05:14.580 --> 00:05:15.802
and resource management.

00:05:15.802 --> 00:05:17.760
This means that some part
of the configuration,

00:05:17.760 --> 00:05:22.110
such as screen width DP, screen
height DP layout, density DP,

00:05:22.110 --> 00:05:25.320
will be set according to the
display on which the activity

00:05:25.320 --> 00:05:27.190
currently resides.

00:05:27.190 --> 00:05:30.370
Fonts are now a fully supported
resource type in Android.

00:05:30.370 --> 00:05:35.140
You can use the getFont method
to get a font by its ID.

00:05:35.140 --> 00:05:37.870
You can also define entire
font families in XML,

00:05:37.870 --> 00:05:40.180
declaring the font
style and weight along

00:05:40.180 --> 00:05:42.130
with the font resource.

00:05:42.130 --> 00:05:44.534
There is much more in the
developer preview than this.

00:05:44.534 --> 00:05:46.450
Please make sure to check
out the preview site

00:05:46.450 --> 00:05:49.159
and learn more about O
and the preview program.

00:05:49.159 --> 00:05:50.950
And check out the
Android developer channel

00:05:50.950 --> 00:05:52.830
for more videos like these.

00:05:52.830 --> 00:05:53.630
Thank you.

00:05:53.630 --> 00:05:56.680
[MUSIC PLAYING]

