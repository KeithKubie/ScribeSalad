WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:00.610
[MUSIC PLAYING]

00:00:00.610 --> 00:00:02.651
ALEX DANILO: Google Maps
provides a suite of APIs

00:00:02.651 --> 00:00:04.660
to let developers
access location data.

00:00:04.660 --> 00:00:06.600
We'll cover some pitfalls
and best practices

00:00:06.600 --> 00:00:09.454
for using the web service
APIs in your mobile app.

00:00:09.454 --> 00:00:12.358
[MUSIC PLAYING]

00:00:14.780 --> 00:00:17.270
Pinging the server
regularly, like, for example,

00:00:17.270 --> 00:00:19.420
once a minute, will
force the radio to wake

00:00:19.420 --> 00:00:22.750
up and drain the user's
battery very quickly.

00:00:22.750 --> 00:00:25.250
Where possible, you should
batch up requests and send them

00:00:25.250 --> 00:00:26.380
all at once.

00:00:26.380 --> 00:00:28.680
This means the radio only
needs to power up once

00:00:28.680 --> 00:00:30.445
for a number of
requests, the result

00:00:30.445 --> 00:00:32.640
being a lot less power
consumed and happier users.

00:00:32.640 --> 00:00:35.234
[MUSIC PLAYING]

00:00:38.570 --> 00:00:40.650
Don't ping on the first
second of each minute.

00:00:40.650 --> 00:00:42.270
Applications that
ping on the minute

00:00:42.270 --> 00:00:44.300
are more likely to
hit usage limits.

00:00:44.300 --> 00:00:46.360
APIs typically impose
limits on the number

00:00:46.360 --> 00:00:47.880
of queries per second.

00:00:47.880 --> 00:00:50.500
So for example, if your
application pulls the API

00:00:50.500 --> 00:00:52.390
once a minute, and
you do the pulling

00:00:52.390 --> 00:00:55.040
in the exact same second
of every minute for all

00:00:55.040 --> 00:00:57.970
your users, you'll reach
your limit very quickly.

00:00:57.970 --> 00:00:59.770
By randomizing the
pulling interval,

00:00:59.770 --> 00:01:01.890
you reduce the chance
of exceeding your quota.

00:01:01.890 --> 00:01:04.722
[MUSIC PLAYING]

00:01:08.500 --> 00:01:11.760
Now let me tell you about the
importance of using an API key.

00:01:11.760 --> 00:01:14.710
See, if you connect to a
GOAPI service without a key,

00:01:14.710 --> 00:01:16.610
Google will use the IP
address of the device

00:01:16.610 --> 00:01:19.110
to count the number of requests.

00:01:19.110 --> 00:01:21.510
Even if your app is small
and doesn't hit usage limits

00:01:21.510 --> 00:01:23.410
on its own, not
using a key means

00:01:23.410 --> 00:01:25.900
you share quota with all
other apps on the same device.

00:01:25.900 --> 00:01:28.685
[MUSIC PLAYING]

00:01:32.160 --> 00:01:34.610
When using an API key,
it's super important

00:01:34.610 --> 00:01:36.930
to keep that key out of
your application binary,

00:01:36.930 --> 00:01:38.820
because it's trivial
to reverse engineer

00:01:38.820 --> 00:01:40.120
any binary to find a key.

00:01:40.120 --> 00:01:42.550
And if that happens,
any third party

00:01:42.550 --> 00:01:44.020
could start using
Google services

00:01:44.020 --> 00:01:46.230
and charging the
usage to your account.

00:01:46.230 --> 00:01:48.030
So don't do it.

00:01:48.030 --> 00:01:49.490
Instead, you can
use a proxy server

00:01:49.490 --> 00:01:52.560
to make the API requests
on your app's behalf.

00:01:52.560 --> 00:01:53.060
Whoa!

00:01:53.060 --> 00:01:54.470
That was a lot of info.

00:01:54.470 --> 00:01:57.230
But trust me, it is worth
it, because knowing all this

00:01:57.230 --> 00:02:00.590
makes your app that much leaner,
better, and easier to build.

00:02:00.590 --> 00:02:02.690
So check out the
documentation on these links,

00:02:02.690 --> 00:02:06.785
and start building
great apps using Maps.

00:02:06.785 --> 00:02:08.510
That was a lame joke, wasn't it?

00:02:08.510 --> 00:02:09.430
MALE SPEAKER: Mmm.

00:02:09.430 --> 00:02:10.080
ALEX DANILO: Should
we do it again?

00:02:10.080 --> 00:02:10.380
MALE SPEAKER: Eh.

00:02:10.380 --> 00:02:11.088
ALEX DANILO: Nah.

00:02:11.088 --> 00:02:13.730
[MUSIC PLAYING]

