WEBVTT
Kind: captions
Language: en

00:00:03.409 --> 00:00:06.789
&gt;&gt;Neil Rhodes: Thanks for coming to this session.

00:00:06.789 --> 00:00:08.540
Before I begin, a couple questions.

00:00:08.540 --> 00:00:11.870
First off, how many of you currently use Google
Analytics?

00:00:11.870 --> 00:00:17.180
So it looks like 50, 75%, somewhere in there.

00:00:17.180 --> 00:00:22.570
And of those of you, how many of you use Google
Analytics for mobile apps?

00:00:22.570 --> 00:00:25.699
Almost the same percentage, maybe 30%, something
like that.

00:00:25.699 --> 00:00:31.359
So for those of you who don't use Google Analytics
at all, it's a way of providing anonymized,

00:00:31.359 --> 00:00:38.600
aggregated data about the usage of your software,
and we're going to see that in much more detail.

00:00:38.600 --> 00:00:44.100
For those of you who use Analytics but don't
use it for mobile yet, I hope this really

00:00:44.100 --> 00:00:48.920
shows you how mobile can be quite useful with
analytics.

00:00:48.920 --> 00:00:52.560
And for those of you who are already using
Google Analytics with mobile, I think you're

00:00:52.560 --> 00:00:59.300
going to be really excited about what we have
to show you with the new features, new announcements.

00:00:59.300 --> 00:01:02.350
So my name is Neil Rhodes.

00:01:02.350 --> 00:01:06.450
I'm tech lead for the mobile analytics SDK.

00:01:06.450 --> 00:01:14.680
I'm really happy to show you what we've been
working on for the last nine months.

00:01:14.680 --> 00:01:20.000
About two years ago, we released an SDK for
mobile analytics.

00:01:20.000 --> 00:01:22.250
But it wasn't really a great solution.

00:01:22.250 --> 00:01:26.830
So Google Analytics has been really designed
best for Web sites.

00:01:26.830 --> 00:01:33.270
And, really, what we said to you when we provided
this SDK was, you can go ahead and use analytics

00:01:33.270 --> 00:01:35.610
for mobile applications.

00:01:35.610 --> 00:01:39.479
However, you have to pretend you're a Web
site.

00:01:39.479 --> 00:01:41.080
Right?

00:01:41.080 --> 00:01:42.580
You pretend you're a Web site.

00:01:42.580 --> 00:01:45.460
We will pretend you're a Web site.

00:01:45.460 --> 00:01:48.229
And we're not going to really give you anything
application-specific.

00:01:48.229 --> 00:01:51.319
So how does that pretense work or how did
it work?

00:01:51.319 --> 00:01:57.090
Well, for one thing, when you signed up an
account, you had to provide the URL of your

00:01:57.090 --> 00:01:58.429
Web site, until recently.

00:01:58.429 --> 00:02:04.500
Now, I don't know about you, but I don't have
a URL for my mobile application.

00:02:04.500 --> 00:02:06.690
So you had to fake one.

00:02:06.690 --> 00:02:07.700
Another example.

00:02:07.700 --> 00:02:13.570
All the terminology was Web-centric.

00:02:13.570 --> 00:02:18.000
We use terminology like "visit" and "visitors."

00:02:18.000 --> 00:02:24.040
I don't have visitors to my application; I
have users.

00:02:24.040 --> 00:02:26.650
And I don't have visits; we have maybe sessions.

00:02:26.650 --> 00:02:30.400
I don't have page views; I have screens.

00:02:30.400 --> 00:02:38.050
And also, I have information that's specific
to applications, things like versions, application

00:02:38.050 --> 00:02:43.350
name, things like, well, crashes; right?

00:02:43.350 --> 00:02:45.430
That happens.

00:02:45.430 --> 00:02:48.670
And it's information you want to find out
about.

00:02:48.670 --> 00:02:56.890
So what we're announcing today, what we have
announced today, really, is mobile applications

00:02:56.890 --> 00:03:00.290
as first-class citizens at Google Analytics.

00:03:00.290 --> 00:03:04.709
Announcing Google Mobile App Analytics.

00:03:04.709 --> 00:03:09.750
[ Applause ]
&gt;&gt;Neil Rhodes: Thank you.

00:03:09.750 --> 00:03:13.750
So this is available in beta.

00:03:13.750 --> 00:03:16.430
We're taking people in via white list.

00:03:16.430 --> 00:03:20.150
And we're going to be allowing those people
to enter the beta in waves.

00:03:20.150 --> 00:03:26.740
And we expect to have everyone who's using
Analytics available to use mobile apps by

00:03:26.740 --> 00:03:28.030
the end of summer.

00:03:28.030 --> 00:03:32.430
I'll talk a little bit later about how you
sign up for this white list.

00:03:32.430 --> 00:03:34.380
So mobile applications.

00:03:34.380 --> 00:03:39.150
When you're developing a mobile application
-- we saw a number of sessions this week about

00:03:39.150 --> 00:03:40.150
development.

00:03:40.150 --> 00:03:42.090
Actually, let me add one more thing.

00:03:42.090 --> 00:03:46.990
When I say "mobile applications," I did say
Android applications?

00:03:46.990 --> 00:03:47.990
&gt;&gt;&gt; No.

00:03:47.990 --> 00:03:55.340
&gt;&gt;Neil Rhodes: I said the word "mobile," because
this includes both Android and iOS.

00:03:55.340 --> 00:04:00.280
So when you're developing applications, you
go ahead and develop them.

00:04:00.280 --> 00:04:03.480
And then you market those applications through
a variety of ways.

00:04:03.480 --> 00:04:08.920
So you might have paid advertising, email
marketing campaigns, Google Search, and so

00:04:08.920 --> 00:04:11.000
on, SEO type things.

00:04:11.000 --> 00:04:16.239
And then, my favorite part next to the analysis
is monetizing.

00:04:16.239 --> 00:04:17.239
Right?

00:04:17.239 --> 00:04:18.690
How do you make money on this application.

00:04:18.690 --> 00:04:21.200
We had sessions on this as well this week.

00:04:21.200 --> 00:04:24.520
What we're focusing on is the third part,
the measuring and the iterating, that is,

00:04:24.520 --> 00:04:30.580
measuring how well your development has worked,
how well your marketing and monetizing are

00:04:30.580 --> 00:04:35.570
working, and then improving those and iterating
on them.

00:04:35.570 --> 00:04:45.540
For development, some of what you can measure
are -- the sad thing I mentioned earlier -- crashes.

00:04:45.540 --> 00:04:50.130
Also measure how people are using your application,
whether there are particular screens that

00:04:50.130 --> 00:04:54.460
are not used very much or options that are
not used very much or screens that are confusing

00:04:54.460 --> 00:04:57.410
to users and they leave your application.

00:04:57.410 --> 00:05:02.780
So by measuring that, you can then go and
iterate and make a better product.

00:05:02.780 --> 00:05:05.690
You can measure your marketing.

00:05:05.690 --> 00:05:11.070
What happens when users come into your application
via different channels?

00:05:11.070 --> 00:05:13.720
How do they act within the application?

00:05:13.720 --> 00:05:15.820
How well do they monetize, and so on?

00:05:15.820 --> 00:05:19.280
We'll look at some of this in more detail.

00:05:19.280 --> 00:05:24.910
We break apart, really, three different areas
of measurement.

00:05:24.910 --> 00:05:27.130
So one is acquisitions.

00:05:27.130 --> 00:05:30.000
Where are your users coming from?

00:05:30.000 --> 00:05:35.260
Are they coming because an email marketing
campaign drove them to Google Play, for example?

00:05:35.260 --> 00:05:39.130
Are they coming because they're doing a search
on Google for various key words?

00:05:39.130 --> 00:05:43.760
Are they coming because of various advertising
campaigns?

00:05:43.760 --> 00:05:45.870
And it's important to get that information.

00:05:45.870 --> 00:05:49.900
You want to spend your money wisely if you're
doing advertising campaigns.

00:05:49.900 --> 00:05:52.669
A second is engagement.

00:05:52.669 --> 00:05:57.020
Once the users actually get there and are
using your application, how are they using

00:05:57.020 --> 00:05:59.400
it?

00:05:59.400 --> 00:06:02.280
What screens are they using in your application?

00:06:02.280 --> 00:06:04.690
For how long?

00:06:04.690 --> 00:06:13.090
How do users move within your application
from screen to screen?

00:06:13.090 --> 00:06:14.880
That nasty word, app crashes, again.

00:06:14.880 --> 00:06:21.730
So we may want to know information about app
crashes, like, what is the crash, of course.

00:06:21.730 --> 00:06:25.090
But also where is it occurring within your
application.

00:06:25.090 --> 00:06:27.610
What kinds of devices is it occurring on?

00:06:27.610 --> 00:06:29.580
What operating system versions?

00:06:29.580 --> 00:06:36.320
What versions of your application is it happening
in?

00:06:36.320 --> 00:06:37.680
Events.

00:06:37.680 --> 00:06:41.130
Think of screens as sort of the where in your
application.

00:06:41.130 --> 00:06:44.400
And events is the what that's happening.

00:06:44.400 --> 00:06:49.360
So you can add code to your application to
track specific events that are occurring,

00:06:49.360 --> 00:06:55.400
things like, for instance, the user choosing
a particular preference item.

00:06:55.400 --> 00:06:56.520
Let me pick a specific example.

00:06:56.520 --> 00:06:59.570
Let's say you have a menu item to carry out
some task.

00:06:59.570 --> 00:07:03.460
What percentage of your users use that menu
item?

00:07:03.460 --> 00:07:05.699
Do you have any idea?

00:07:05.699 --> 00:07:07.070
Is it 1%?

00:07:07.070 --> 00:07:09.100
Is it 50%?

00:07:09.100 --> 00:07:11.060
How many users don't even know there are menus?

00:07:11.060 --> 00:07:12.260
Probably a fair number.

00:07:12.260 --> 00:07:13.260
Right?

00:07:13.260 --> 00:07:20.050
And so by causing an event to be tracked when
a menu is chosen, you can have some idea of

00:07:20.050 --> 00:07:21.150
how often that's used.

00:07:21.150 --> 00:07:24.699
Maybe it would be simpler to not have that
event at all.

00:07:24.699 --> 00:07:30.990
Or maybe it happens so often you want to actually
make that happen on screen.

00:07:30.990 --> 00:07:31.990
So that's acquisition.

00:07:31.990 --> 00:07:33.710
Where do users come from.

00:07:33.710 --> 00:07:37.130
Engagement, what do they do when they get
there?

00:07:37.130 --> 00:07:41.560
And then outcome.

00:07:41.560 --> 00:07:43.240
So we have several outcomes.

00:07:43.240 --> 00:07:45.350
One outcome is certainly monetization.

00:07:45.350 --> 00:07:48.090
What sales do you have of your application?

00:07:48.090 --> 00:07:51.510
What ad revenue do you have?

00:07:51.510 --> 00:07:55.389
What in-app purchases do you have?

00:07:55.389 --> 00:07:59.210
And I want to look at that information and
slice it and dice it in various different

00:07:59.210 --> 00:08:04.990
ways, like per country, for example, or in
a number of different ways that we're going

00:08:04.990 --> 00:08:05.990
to see.

00:08:05.990 --> 00:08:08.780
We also have the idea of goal conversions.

00:08:08.780 --> 00:08:13.660
So you can set up a goal within your application
of, like, reaching a particular screen or

00:08:13.660 --> 00:08:19.840
having some particular event happen and see
how users get to that conversion, how many

00:08:19.840 --> 00:08:23.039
of those happen and so on.

00:08:23.039 --> 00:08:39.610
So now let's look at a demo.

00:08:39.610 --> 00:08:43.360
So here I am, and I'm going to create a new
account.

00:08:43.360 --> 00:08:47.389
So I've got an application I want to do tracking
for.

00:08:47.389 --> 00:08:49.459
And what do I want to track?

00:08:49.459 --> 00:08:52.860
Well, what we see is a first-class object
or application.

00:08:52.860 --> 00:08:54.449
So we have a Web site, yes.

00:08:54.449 --> 00:08:58.019
And if we had a Web site, we would need to
know its URL, of course.

00:08:58.019 --> 00:08:59.189
But we're not a Web site.

00:08:59.189 --> 00:09:01.540
We're an application we're going to be tracking.

00:09:01.540 --> 00:09:04.139
So no need for a URL.

00:09:04.139 --> 00:09:07.300
Our application actually has a name.

00:09:07.300 --> 00:09:11.800
This is Neil's App, let's say.

00:09:11.800 --> 00:09:14.670
And my account.

00:09:14.670 --> 00:09:18.110
And then I can go ahead and get a tracking
ID.

00:09:18.110 --> 00:09:20.879
First I've got to agree to the terms of service.

00:09:20.879 --> 00:09:23.319
My Evelyn woods speed reading class comes
in handy.

00:09:23.319 --> 00:09:25.529
And, yes, this all looks reasonable.

00:09:25.529 --> 00:09:27.589
And now I get a tracking ID.

00:09:27.589 --> 00:09:34.420
So this is the ID -- UA number number number
dash number -- that I'm going to use within

00:09:34.420 --> 00:09:41.820
my application to specify that it's for this
account that I am tracking information.

00:09:41.820 --> 00:09:44.939
From here, I can easily download the SDK.

00:09:44.939 --> 00:09:49.119
So the Android SDK or the iOS SDK, in a single
link.

00:09:49.119 --> 00:09:53.220
I have references to the documentation from
here.

00:09:53.220 --> 00:09:57.079
A lot of folks monetize their application
using AdMob.

00:09:57.079 --> 00:10:02.800
And so if you use AdMob, we have a single
download that actually combines both the AdMob

00:10:02.800 --> 00:10:04.950
and Analytics SKDs.

00:10:04.950 --> 00:10:10.139
One fewer thing to download.

00:10:10.139 --> 00:10:14.970
So I've created this account, but I'm not
going to actually use it right now, because

00:10:14.970 --> 00:10:16.800
since I just created it, there's no data there.

00:10:16.800 --> 00:10:19.870
Instead, I'm going to look at a different
account.

00:10:19.870 --> 00:10:22.759
So this is for an application I call Acme
Travel.

00:10:22.759 --> 00:10:31.569
It's an application that's used for searching
and booking hotel and flights.

00:10:31.569 --> 00:10:37.290
And in the overview, we provide what we hope
are the most useful graphs and dashboards

00:10:37.290 --> 00:10:40.170
that you'd want for looking at this.

00:10:40.170 --> 00:10:45.170
And we've organized it in these three ways,
again: Acquisitions.

00:10:45.170 --> 00:10:49.660
So here we see how many new users and active
users per day, where they're coming from,

00:10:49.660 --> 00:10:51.040
what device model.

00:10:51.040 --> 00:10:52.040
Engagement.

00:10:52.040 --> 00:10:59.179
How long are they using your application?

00:10:59.179 --> 00:11:02.610
How many screens per usage or per session?

00:11:02.610 --> 00:11:04.699
What screens are the most common?

00:11:04.699 --> 00:11:05.860
And then outcomes.

00:11:05.860 --> 00:11:06.860
Goal completions.

00:11:06.860 --> 00:11:11.110
And as I mentioned, my favorite, in-app revenue.

00:11:11.110 --> 00:11:18.809
So I can see revenues were going up slightly,
and then I had a sudden drop, but that was

00:11:18.809 --> 00:11:22.499
made up for by a nice peak.

00:11:22.499 --> 00:11:27.550
So graphs and numbers are nice.

00:11:27.550 --> 00:11:30.550
But that is not the reason for analytics.

00:11:30.550 --> 00:11:39.410
Instead, the reason is to have -- find information
so that you can take action.

00:11:39.410 --> 00:11:41.059
Look at an example.

00:11:41.059 --> 00:11:43.019
So Google Play sources.

00:11:43.019 --> 00:11:49.239
I can see, again, the acquisition.

00:11:49.239 --> 00:11:53.449
How did my users get to my application?

00:11:53.449 --> 00:11:58.819
So this source and medium tells me -- Google
and CPC tells me, basically, this is an AdWords

00:11:58.819 --> 00:11:59.920
campaign.

00:11:59.920 --> 00:12:02.529
I also have an email campaign.

00:12:02.529 --> 00:12:05.589
Mobile Display is an AdMob campaign.

00:12:05.589 --> 00:12:11.439
So this was not me monetizing my app, but
instead, me as an advertiser trying to drive

00:12:11.439 --> 00:12:13.790
users to my application.

00:12:13.790 --> 00:12:18.499
Organic search.

00:12:18.499 --> 00:12:23.119
Google doing a search that led to going to
Google Play.

00:12:23.119 --> 00:12:26.889
And other advertising campaigns as well.

00:12:26.889 --> 00:12:31.259
And from each of those, I can find out how
many users, how many new users, I got, how

00:12:31.259 --> 00:12:37.019
many sessions those users had, the duration
of those sessions, and the in-app revenue.

00:12:37.019 --> 00:12:40.929
This is the information that we provide you
directly.

00:12:40.929 --> 00:12:46.190
You can certainly make customer reports and
slice and dice information how you want.

00:12:46.190 --> 00:12:47.649
What do I get from this actionable?

00:12:47.649 --> 00:12:53.519
Well, I see, for example, that my AdWords
campaign had ten new users with an average

00:12:53.519 --> 00:12:58.799
session duration of 35 seconds, and they spent
a total of $2,493.

00:12:58.799 --> 00:13:06.139
This is probably an exceptionally good AdWords
campaign, actually, with an average of $250

00:13:06.139 --> 00:13:07.249
per user.

00:13:07.249 --> 00:13:09.679
My email campaign did fairly well.

00:13:09.679 --> 00:13:10.759
I had six new users.

00:13:10.759 --> 00:13:17.980
So, actually, if I just looked at users, ten
new users in my AdWords campaign, six new

00:13:17.980 --> 00:13:20.029
users in my email campaign.

00:13:20.029 --> 00:13:26.449
Well, that says that the AdWords campaign
is about 50% better than the other one; right?

00:13:26.449 --> 00:13:29.629
But the cohort of people coming in are actually
different.

00:13:29.629 --> 00:13:33.540
That is, their behavior is different, depending
on how they got there.

00:13:33.540 --> 00:13:35.660
Why might that be?

00:13:35.660 --> 00:13:39.959
Maybe the people who came in via my AdWords
campaign, I had a particularly compelling

00:13:39.959 --> 00:13:46.820
ad that only people who are quite qualified
would click on.

00:13:46.820 --> 00:13:52.009
And maybe on my email campaign it was somewhat
less directed and I had more sort of random

00:13:52.009 --> 00:13:53.029
people coming in.

00:13:53.029 --> 00:14:02.079
But in any case, I can see how well my ad
worked with respect to the money I got.

00:14:02.079 --> 00:14:04.970
And here, clearly, the AdWords campaign went
well.

00:14:04.970 --> 00:14:07.540
We'll take questions at the end.

00:14:07.540 --> 00:14:10.389
But do save that question.

00:14:10.389 --> 00:14:15.739
Look at another question I have.

00:14:15.739 --> 00:14:20.509
So this application is in English.

00:14:20.509 --> 00:14:25.879
I have enough money, I have enough budget,
to translate it into a single language, to

00:14:25.879 --> 00:14:27.070
localize it.

00:14:27.070 --> 00:14:28.879
And, unfortunately, one.

00:14:28.879 --> 00:14:33.559
As I look at this chart, I see that English
is certainly my predominant use.

00:14:33.559 --> 00:14:37.440
So this is people whose devices are set to
use English.

00:14:37.440 --> 00:14:42.160
But I also have people who are using it in
German, in Spanish, and French.

00:14:42.160 --> 00:14:48.220
Now, again, the application is in English,
but they're on a device that's set up for

00:14:48.220 --> 00:14:51.519
German, Spanish, or French.

00:14:51.519 --> 00:14:57.720
And as I look at the numbers here, my natural
inclination would be to say, German is obviously

00:14:57.720 --> 00:15:03.139
the language to which I should translate next,
because that's the most number of users.

00:15:03.139 --> 00:15:13.139
But if I look more carefully, dive into the
numbers a little deeper, I see that the behavior

00:15:13.139 --> 00:15:18.319
of the users using German is quite different
from the ones using Spanish.

00:15:18.319 --> 00:15:24.679
In particular, the screens per session is
2 for German, which is very close to the English

00:15:24.679 --> 00:15:28.239
of 2.09, whereas in Spanish, it's only 1.38.

00:15:28.239 --> 00:15:33.999
If I look at the session duration, it's actually
longer in German than it is for English users.

00:15:33.999 --> 00:15:36.980
But in Spanish, it's five seconds.

00:15:36.980 --> 00:15:37.980
Here's what that tells me.

00:15:37.980 --> 00:15:40.419
Here's the story that I get from that.

00:15:40.419 --> 00:15:45.319
I could be wrong, but this is my interpretation.

00:15:45.319 --> 00:15:52.790
German users, at least of this application,
are willing to use it in English.

00:15:52.790 --> 00:15:57.199
They're willing to use it for just as long
as English users.

00:15:57.199 --> 00:15:58.589
Spanish users are not.

00:15:58.589 --> 00:15:59.589
Okay?

00:15:59.589 --> 00:16:03.419
They open the application and they leave pretty
quickly.

00:16:03.419 --> 00:16:10.939
So this says to me that although I might affect
more users if I translate it to German, I'm

00:16:10.939 --> 00:16:17.529
actually going to improve the life more if
I translate to Spanish, because the German

00:16:17.529 --> 00:16:22.389
users are okay with it and the Spanish users
are not.

00:16:22.389 --> 00:16:30.670
Does that make sense?

00:16:30.670 --> 00:16:32.739
Okay.

00:16:32.739 --> 00:16:43.259
Let's look at an overview of devices and networks,
again, to try and get some actionable information.

00:16:43.259 --> 00:16:48.019
Top network operators, not that useful to
me, although it does tell me, since we're

00:16:48.019 --> 00:16:52.089
using Sprint as the top network operator,
that people are mostly using this via cell

00:16:52.089 --> 00:16:54.160
connection and not via Wi-Fi.

00:16:54.160 --> 00:16:56.769
So that's useful information.

00:16:56.769 --> 00:16:59.279
Key information here for me is the OS versions.

00:16:59.279 --> 00:17:05.250
So I see that Android 4.0 is the largest set
of people using my app.

00:17:05.250 --> 00:17:10.120
Android 2.1 behind that, iOS just behind that,
iOS 5.

00:17:10.120 --> 00:17:14.340
And then some other versions of Android and
iOS.

00:17:14.340 --> 00:17:20.900
So what this says to me is that the majority
of people using iOS are using iOS 5.

00:17:20.900 --> 00:17:30.570
And, in fact, I wouldn't lose too much of
my iOS users if I required iOS 5 as a minimum

00:17:30.570 --> 00:17:33.020
version.

00:17:33.020 --> 00:17:36.710
Doing that might allow me to take advantage
of iOS 5 features.

00:17:36.710 --> 00:17:37.710
Okay?

00:17:37.710 --> 00:17:41.530
And make my life a little easier because I
didn't have to support iOS 4.

00:17:41.530 --> 00:17:45.580
On the other hand, it wouldn't make sense,
according to these numbers, for my particular

00:17:45.580 --> 00:17:47.320
users for Android.

00:17:47.320 --> 00:17:53.900
If I required Android 4 as a minimum, I would
lose a lot of my existing users.

00:17:53.900 --> 00:17:59.890
So that says to me if I want to support Android
4 features, I need to make sure to do so in

00:17:59.890 --> 00:18:07.990
way such that my application will still run
on earlier devices.

00:18:07.990 --> 00:18:10.179
I can see the device models, and that's useful.

00:18:10.179 --> 00:18:12.200
Screen resolution is another thing that can
be important; right?

00:18:12.200 --> 00:18:15.560
If I know what percentage of people are using
what screen sizes.

00:18:15.560 --> 00:18:22.080
This tells me a fair number of people are
using large-resolution devices, high-resolution

00:18:22.080 --> 00:18:27.900
devices, and so therefore it might make sense
for me to invest in higher-resolution artwork,

00:18:27.900 --> 00:18:36.680
because my artwork right now is fairly low
res.

00:18:36.680 --> 00:18:42.470
Let's move now from acquisition to engagement.

00:18:42.470 --> 00:18:47.990
I can see information like what screens people
are using, what events are occurring.

00:18:47.990 --> 00:18:52.430
One thing that's really interesting is engagement
flow.

00:18:52.430 --> 00:18:58.810
So this tells me how people move within my
application from screen to screen.

00:18:58.810 --> 00:19:01.150
This particular application doesn't have very
many screens.

00:19:01.150 --> 00:19:04.090
It's a fairly simplistic application.

00:19:04.090 --> 00:19:10.130
But what I see is -- so this is telling me
on the left that people coming in using the

00:19:10.130 --> 00:19:13.870
Android version of the app, and the people
coming in using the iOS version of the app,

00:19:13.870 --> 00:19:18.370
and I get to see how many of them go -- start
at the search screen.

00:19:18.370 --> 00:19:21.260
So the vast majority of them start at the
search screen.

00:19:21.260 --> 00:19:26.980
And in the red here on the right is the dropoff,
how many of them leave the application by

00:19:26.980 --> 00:19:29.300
going to the search screen and then leaving.

00:19:29.300 --> 00:19:32.580
So we have some number, about 8%, drop off.

00:19:32.580 --> 00:19:35.580
The rest of them are moving over to the results
page.

00:19:35.580 --> 00:19:39.860
Say I want to narrow down just what are the
Android users doing.

00:19:39.860 --> 00:19:44.240
In this case, I see most of them go on to
the search page, but a small portion of them

00:19:44.240 --> 00:19:49.640
just go into the login page and then, kind
of weird, go directly into the results page.

00:19:49.640 --> 00:19:53.490
I'm not quite sure what's going on there and
that might make me want to look into my application

00:19:53.490 --> 00:19:56.160
a little bit.

00:19:56.160 --> 00:20:03.720
So this tells me the where of how people move
within my application.

00:20:03.720 --> 00:20:10.530
What we've also got is ability to look at
not only the where but also what's occurring

00:20:10.530 --> 00:20:11.530
as well.

00:20:11.530 --> 00:20:15.500
So I can look at a combination of screens
and events.

00:20:15.500 --> 00:20:19.870
Let me start at the results page.

00:20:19.870 --> 00:20:25.990
So I can see that the results page, from there
I go to the preferences or the book page somewhat,

00:20:25.990 --> 00:20:29.070
but then I also go to these blue events.

00:20:29.070 --> 00:20:36.580
So I can see the interaction that's occurring
in my application by users between screens

00:20:36.580 --> 00:20:43.400
and between also screens and actions.

00:20:43.400 --> 00:20:48.180
Crashes.

00:20:48.180 --> 00:20:55.930
So we differentiate between crashes and exceptions,
or rather exceptions are a superset of crashes

00:20:55.930 --> 00:20:59.250
because we also have exceptions that occur
that are not fatal.

00:20:59.250 --> 00:21:01.490
So crashes are fatal exceptions.

00:21:01.490 --> 00:21:04.030
And unfortunately in this application we had
some crashes.

00:21:04.030 --> 00:21:09.330
Our 1.1 version had four cashes, our 1.2 version
had 13.

00:21:09.330 --> 00:21:14.870
So that might say to us that's not good, it's
not good to have crashes, right, I'd like

00:21:14.870 --> 00:21:17.570
to have the number zero there.

00:21:17.570 --> 00:21:22.370
Might say just our 1.2 version got worse than
our 1.2 version or maybe it says we have a

00:21:22.370 --> 00:21:25.440
lot more usage of our 1.2 application.

00:21:25.440 --> 00:21:28.540
We can investigate that a little further.

00:21:28.540 --> 00:21:36.130
We have versions of our application for both
iOS and Android in 1.1 and we introduced 1.2.

00:21:36.130 --> 00:21:44.290
It's interesting, if I add some information
to this and look at the operating system,

00:21:44.290 --> 00:21:48.640
and what I see is it's actually segregated.

00:21:48.640 --> 00:21:54.140
The 1.1 version of the application only has
crashes on Android.

00:21:54.140 --> 00:21:56.750
And there are none in the 1.2 version of Android.

00:21:56.750 --> 00:22:02.080
So that says I had a problem there and I fixed
it.

00:22:02.080 --> 00:22:05.370
Unfortunately, what happened on iOS?

00:22:05.370 --> 00:22:11.570
Apparently, I was doing great there and I
added a bug.

00:22:11.570 --> 00:22:12.970
It wasn't me, it was my partner.

00:22:12.970 --> 00:22:17.060
I don't have bugs.

00:22:17.060 --> 00:22:22.080
I'm going to fix the 1.2 version of Android,
in fact.

00:22:22.080 --> 00:22:28.060
Some of the other reports we can see and how
this is useful.

00:22:28.060 --> 00:22:29.400
So this is loyalty.

00:22:29.400 --> 00:22:36.480
How many times does a particular user use
your application?

00:22:36.480 --> 00:22:40.220
So there are some users that use it once.

00:22:40.220 --> 00:22:43.210
And this is during the time period of interest
that we're looking at.

00:22:43.210 --> 00:22:47.670
Some people use it between 50-100 times.

00:22:47.670 --> 00:22:52.560
It's useful to know how many people use it,
but it's also useful to know how that affects

00:22:52.560 --> 00:22:54.980
other parts, how does that affect your monetization.

00:22:54.980 --> 00:22:58.280
In this case how does it affect your goal
conversion.

00:22:58.280 --> 00:23:04.250
If we look at the goal conversion here, I
see that about session 6, I get a big bump

00:23:04.250 --> 00:23:09.010
in my goal conversion from 77% to 92%.

00:23:09.010 --> 00:23:15.870
So this may be because users become more comfortable
with my application and then are willing to

00:23:15.870 --> 00:23:21.910
go ahead and go to this conversion, which
in my case involves buying something.

00:23:21.910 --> 00:23:28.420
So maybe it's important to try and help drive
people who use it more so they become comfortable

00:23:28.420 --> 00:23:29.420
so then they can monetize your app.

00:23:29.420 --> 00:23:43.340
All right.

00:23:43.340 --> 00:23:47.570
And actually the final one I want to show
you is the e-commerce.

00:23:47.570 --> 00:23:51.810
And this I don't have anything actionable
right this instant but I love to see how much

00:23:51.810 --> 00:23:56.360
money I make, and I can see how much money
I make for each of my products, in this case

00:23:56.360 --> 00:24:00.771
I'm selling round-trip air tickets and so
I can see that I'm selling a lot, for some

00:24:00.771 --> 00:24:04.140
reason, between Ontario and Boston.

00:24:04.140 --> 00:24:11.840
I might look into that and see how I can sell
even more.

00:24:11.840 --> 00:24:12.950
So what have we seen?

00:24:12.950 --> 00:24:20.620
What we've seen is the introduction in the
GA of mobile apps as a first-class citizen.

00:24:20.620 --> 00:24:24.410
So we've seen the sign-up flow, the new reporting.

00:24:24.410 --> 00:24:29.330
Next what I'd like to look at is how you actually
add this to your application.

00:24:29.330 --> 00:24:35.250
To begin with, let's look at the architecture
and let's look at the architecture of a Web

00:24:35.250 --> 00:24:36.440
site.

00:24:36.440 --> 00:24:40.380
You've got a Web site to which you are adding
analytics.

00:24:40.380 --> 00:24:47.070
What happens is you have a Web page that includes
GA, Google analytics.js, JavaScript.

00:24:47.070 --> 00:24:55.050
This JavaScript has an API on it and you can
then track various things, including events,

00:24:55.050 --> 00:24:59.490
and pages views and so on and those get sent
down to the cloud there which is the Google

00:24:59.490 --> 00:25:00.900
analytics back end.

00:25:00.900 --> 00:25:03.400
And it's very straightforward and simple.

00:25:03.400 --> 00:25:07.430
It's a little more complicated in the mobile
case.

00:25:07.430 --> 00:25:11.390
First off, you're not downloading JavaScript
dynamically, right?

00:25:11.390 --> 00:25:17.600
Instead, you have an SDK that's linked with
your application.

00:25:17.600 --> 00:25:24.240
That SDK will then accept tracking calls from
your application, and unfortunately, it can't

00:25:24.240 --> 00:25:28.460
send them directly to our back end.

00:25:28.460 --> 00:25:29.480
For a couple reasons.

00:25:29.480 --> 00:25:31.390
Give me one reason.

00:25:31.390 --> 00:25:33.290
&gt;&gt;Neil Rhodes: What's that?

00:25:33.290 --> 00:25:34.290
&gt;&gt;&gt; Power.

00:25:34.290 --> 00:25:36.620
&gt;&gt;Neil Rhodes: Power's a good reason.

00:25:36.620 --> 00:25:43.770
So we wouldn't want, every time you switch
screens, to be powering up the radio and sending

00:25:43.770 --> 00:25:47.330
out hits across the Internet.

00:25:47.330 --> 00:25:51.260
The second reason is if we -- even if we did
power up the radio, maybe there's nothing

00:25:51.260 --> 00:25:52.790
there, right?

00:25:52.790 --> 00:25:56.420
You're on an airplane or in a tunnel or something
else.

00:25:56.420 --> 00:25:59.480
So we don't necessarily have Internet connectivity.

00:25:59.480 --> 00:26:03.670
And even if we did, it's not clear we want
to be using it immediately.

00:26:03.670 --> 00:26:08.700
So instead we queue those hits in a local
database and then those get dispatched on

00:26:08.700 --> 00:26:11.710
a periodic basis.

00:26:11.710 --> 00:26:15.950
As well, you can request a dispatch manually.

00:26:15.950 --> 00:26:20.360
So if you're already making some connection
to the network, that's a good time to request

00:26:20.360 --> 00:26:27.020
a manual dispatch because we can then piggyback
on top of your connection which is good for

00:26:27.020 --> 00:26:29.710
battery life.

00:26:29.710 --> 00:26:35.710
So let's look at the steps you need to take
in order to add analytics.

00:26:35.710 --> 00:26:37.820
And there are really four basic ones to get
started.

00:26:37.820 --> 00:26:41.860
We'll talk of -- in a moment of additional
things you can do.

00:26:41.860 --> 00:26:44.590
So these four steps are to add the jar file
to your project.

00:26:44.590 --> 00:26:48.630
In this case I'm going to be talking mostly
about the Android, although some asides about

00:26:48.630 --> 00:26:49.900
iOS specific.

00:26:49.900 --> 00:26:57.490
For iOS don't add a jar file, okay, for iOS
add dot.hn.a file.

00:26:57.490 --> 00:27:01.690
So we first add the jar file, and actually
I'm going to talk about this somewhat briefly

00:27:01.690 --> 00:27:04.300
because I'm going to go through a live demo.

00:27:04.300 --> 00:27:06.050
The second thing is add a configuration file.

00:27:06.050 --> 00:27:14.090
On iOS you're going to actually be doing this
in code, and the reason for that is in iOS,

00:27:14.090 --> 00:27:17.760
it's very -- you have a single place when
your application gets started.

00:27:17.760 --> 00:27:20.370
You can go ahead and do initialization.

00:27:20.370 --> 00:27:25.309
For Android your application starts because
some activity starts and so we don't want

00:27:25.309 --> 00:27:28.320
to have to duplicate that code with every
activity.

00:27:28.320 --> 00:27:34.330
So instead, we provide an XML file with configuration
information that we read from.

00:27:34.330 --> 00:27:39.030
So the most important configuration piece
is that tracking ID you got when you created

00:27:39.030 --> 00:27:40.900
the account.

00:27:40.900 --> 00:27:44.670
UA-number, number, dash, number.

00:27:44.670 --> 00:27:48.690
The second thing I always like to turn on
for development is GAD bug.

00:27:48.690 --> 00:27:53.020
So turning that on will provide additional
debugging information to the console so that

00:27:53.020 --> 00:27:56.810
you actually know analytics are working, things
are happening.

00:27:56.810 --> 00:27:59.761
The third thing is auto activity tracking.

00:27:59.761 --> 00:28:06.510
And this is specific to Android.

00:28:06.510 --> 00:28:12.050
If your application is designed as a set of
activities, each of which roughly corresponds

00:28:12.050 --> 00:28:17.140
to a screen, as the travel application was,
then you would want to turn this on.

00:28:17.140 --> 00:28:22.840
And so as a user switches from activity to
activity, we will automatically track those

00:28:22.840 --> 00:28:24.320
as different screens.

00:28:24.320 --> 00:28:29.920
I'll talk a little bit later on in cases where
that wouldn't make sense.

00:28:29.920 --> 00:28:35.000
And the final thing we're turning on here
is reporting uncaught exceptions.

00:28:35.000 --> 00:28:40.250
This will install an uncaught exception handler,
what I think of as an exception handler of

00:28:40.250 --> 00:28:47.080
last resort which will take an exception that
is about to abort your application and go

00:28:47.080 --> 00:28:52.870
ahead and track that and send that to Google
analytics.

00:28:52.870 --> 00:28:58.120
There are a couple of configurations you can
do as well and they're documented.

00:28:58.120 --> 00:28:59.120
So that's number two.

00:28:59.120 --> 00:29:00.900
Number three, update your manifest.

00:29:00.900 --> 00:29:04.930
The most important two things are a set of
permissions, right?

00:29:04.930 --> 00:29:09.180
You need to be able to connect to the Internet
so you need to set that permission.

00:29:09.180 --> 00:29:13.970
And we need to know what the network state
is so you need to set that as well.

00:29:13.970 --> 00:29:19.330
I've mentioned the fact that analytics provides
information about where you're coming from

00:29:19.330 --> 00:29:21.340
the application, okay?

00:29:21.340 --> 00:29:27.040
Sorry, how your application gets installed,
how users go into Google Play and Google Play

00:29:27.040 --> 00:29:31.770
has to provide information to analytics and
that's done with an install receiver.

00:29:31.770 --> 00:29:37.290
So there is a notification that's made when
Google Play installs your app, we handle that

00:29:37.290 --> 00:29:41.559
notification, grab this campaign information,
and then we'll send it the first time the

00:29:41.559 --> 00:29:45.220
user uses your application.

00:29:45.220 --> 00:29:48.050
The final thing you need to do is actually
add some code.

00:29:48.050 --> 00:29:53.070
You need to tell analytics that you're starting,
so in every one of your activities you need

00:29:53.070 --> 00:30:00.080
to overwrite on start and on stop and call
analytics SDK.

00:30:00.080 --> 00:30:03.892
We do provide a tracked activity class that
just does exactly this, so if you just want

00:30:03.892 --> 00:30:08.000
to subclass from that that's fine as well.

00:30:08.000 --> 00:30:14.770
so what I'd like to do is a quick demo of
actually doing this just to show you kind

00:30:14.770 --> 00:30:16.990
of how simple it is.

00:30:16.990 --> 00:30:22.850
So I'm going to create a new Android project
from one of the samples that ships with the

00:30:22.850 --> 00:30:23.850
SDK.

00:30:23.850 --> 00:30:26.820
I'm going to use the notepad example.

00:30:26.820 --> 00:30:29.920
All right.

00:30:29.920 --> 00:30:35.170
And step one was to go ahead and add the jar
file.

00:30:35.170 --> 00:30:47.420
So I'm going to go ahead and create a libs
directory.

00:30:47.420 --> 00:30:51.200
Which already exists.

00:30:51.200 --> 00:30:54.870
Which is quite odd.

00:30:54.870 --> 00:30:57.860
Since I just created this from scratch.

00:30:57.860 --> 00:30:59.380
So here's what I'm going to do.

00:30:59.380 --> 00:31:07.600
I'm going to create a new Android project
and I'm going to name it notepad 2 and I'm

00:31:07.600 --> 00:31:12.880
sure that will solve all the problems.

00:31:12.880 --> 00:31:17.560
Because I'm quite suspicious when code suddenly
appears there automatically.

00:31:17.560 --> 00:31:23.650
And there's no libs directory there, so that's
looking better.

00:31:23.650 --> 00:31:31.460
So I have a libs directory.

00:31:31.460 --> 00:31:35.830
And I'm going to go ahead and drag over my
jar file.

00:31:35.830 --> 00:31:37.840
And that's step I need to do.

00:31:37.840 --> 00:31:43.120
Step two I need to do is I need to tell Eclipse
to go ahead and use that jar file as part

00:31:43.120 --> 00:31:48.720
of the class path.

00:31:48.720 --> 00:31:58.210
So I'm going to configure the build path,
add the jar file, okay.

00:31:58.210 --> 00:31:59.470
That's step one done.

00:31:59.470 --> 00:32:03.670
Step two, I said, was we need to create an
XML file for configuration.

00:32:03.670 --> 00:32:08.500
So I'm going to create a folder for that.

00:32:08.500 --> 00:32:15.120
Create an XML file and call it whatever you
want.

00:32:15.120 --> 00:32:24.800
I'm going to call it analytics.XML and it's
going to have values.

00:32:24.800 --> 00:32:26.100
And then go ahead and add the values I want.

00:32:26.100 --> 00:32:31.050
So I'm going add a string which is the tracking
ID.

00:32:31.050 --> 00:32:35.020
So GA_trackingID.

00:32:35.020 --> 00:32:37.610
And now I need to remember my UA.

00:32:37.610 --> 00:32:43.640
So thank goodness I have it hidden away in
a text file.

00:32:43.640 --> 00:32:46.690
Great.

00:32:46.690 --> 00:32:51.350
The other things I need to add, unfortunately
the visual editor doesn't work for, so I need

00:32:51.350 --> 00:32:54.840
to add a Boolean which is GAD_bug.

00:32:54.840 --> 00:33:02.940
We'll set that to true.

00:33:02.940 --> 00:33:12.990
I had another Boolean which was, let's see,
we want to -- auto activity tracking.

00:33:12.990 --> 00:33:16.120
I could do the uncaught exceptions but I happen
to know that notepad doesn't have exceptions.

00:33:16.120 --> 00:33:27.179
The last thing I need to do is I want, for
debugging purposes only, to adjust the dispatch

00:33:27.179 --> 00:33:28.179
period.

00:33:28.179 --> 00:33:32.700
And I just want to make it 15 seconds so I
can actually quickly see these hits go out.

00:33:32.700 --> 00:33:37.270
We would not ever want to ship with this because
that would basically just keep the radio active

00:33:37.270 --> 00:33:40.440
most of the time.

00:33:40.440 --> 00:33:42.220
So that was step two.

00:33:42.220 --> 00:33:47.360
Step three is the manifest.

00:33:47.360 --> 00:33:50.690
And in the manifest I need to add my two permissions.

00:33:50.690 --> 00:33:55.520
So the first permission I'm going to add is
accessing the network state.

00:33:55.520 --> 00:34:03.100
And the second permission I want to add is
being able to access the Internet.

00:34:03.100 --> 00:34:09.010
And what's the final thing I said we needed
to do?

00:34:09.010 --> 00:34:12.929
And I'm not going to put in the install receiver
now because I'm not actually planning on installing

00:34:12.929 --> 00:34:15.119
this via Google Play.

00:34:15.119 --> 00:34:20.770
The last thing is code.

00:34:20.770 --> 00:34:32.819
So I'm going to go into the notes list, and
I need to override on start and on stop.

00:34:32.819 --> 00:34:46.109
Feel free to tell me if I make any typos.

00:34:46.109 --> 00:34:54.339
Okay.

00:34:54.339 --> 00:34:55.480
So that's my onstart.

00:34:55.480 --> 00:35:06.200
My onstop looks very similar except we stay
stop instead of start.

00:35:06.200 --> 00:35:09.109
There are three activities in this application.

00:35:09.109 --> 00:35:14.270
For the other two, the subclass activity,
I'm going to go ahead and subclass tracked

00:35:14.270 --> 00:35:15.440
activity.

00:35:15.440 --> 00:35:22.950
As I mentioned, that's exactly the same thing,
it just overrides it on start and on stop.

00:35:22.950 --> 00:35:30.519
And the title editor is the final one.

00:35:30.519 --> 00:35:31.809
Import it.

00:35:31.809 --> 00:35:33.560
And I think we're good to go.

00:35:33.560 --> 00:35:39.150
So let's go ahead and run this application.

00:35:39.150 --> 00:35:40.700
Okay.

00:35:40.700 --> 00:35:47.050
So we can see it's uploading it on to the
emulator.

00:35:47.050 --> 00:35:59.849
You know, that reminds me of something.

00:35:59.849 --> 00:36:00.849
All this is running.

00:36:00.849 --> 00:36:05.869
I'm going to go back to the analytics report
because there was run report I intended to

00:36:05.869 --> 00:36:08.999
show you that I forgot.

00:36:08.999 --> 00:36:16.680
And that is a report that started coming out
last year, I believe, which is real time.

00:36:16.680 --> 00:36:22.530
And I want you to know that real time works
for applications as well.

00:36:22.530 --> 00:36:26.869
So switching away a second, I want to have
an application that uses real time.

00:36:26.869 --> 00:36:29.700
This notepad is going to have one user.

00:36:29.700 --> 00:36:36.720
My Acme application doesn't have really any
right now but there's one that you all have

00:36:36.720 --> 00:36:38.499
which is the I/O app.

00:36:38.499 --> 00:36:46.119
So if you all pull out your phones and pull
out the Google I/O app.

00:36:46.119 --> 00:36:52.109
So the Google I/O app right now has 210 users.

00:36:52.109 --> 00:36:53.309
Okay?

00:36:53.309 --> 00:36:59.519
We see -- and as you use it, and go ahead
and sync so what happens with the Google I/O

00:36:59.519 --> 00:37:07.319
app is it doesn't actually send the hits back
to analytics until it's actually synching

00:37:07.319 --> 00:37:12.329
so it can piggyback and do that so you're
going to see more and more users coming on

00:37:12.329 --> 00:37:14.739
here as you start using the application.

00:37:14.739 --> 00:37:18.539
So 215 applica- -- 216 users.

00:37:18.539 --> 00:37:21.999
Most of them are using the agenda, which is
not surprising.

00:37:21.999 --> 00:37:27.920
But there are other people in various other
screens, most of them Friday screens, which

00:37:27.920 --> 00:37:32.730
is not surprising, again, not using Thursday,
not using Wednesday.

00:37:32.730 --> 00:37:38.630
So this allows you to see how many users are
using your mobile application, in this case,

00:37:38.630 --> 00:37:48.232
in the last 30 minutes, and in this case,
in the last minute.

00:37:48.232 --> 00:38:02.420
If we go back to the notepad, I can see in
the log that we actually have hits being sent,

00:38:02.420 --> 00:38:07.009
so I can see this get and I get to see actually
what the particulars of the hit that's being

00:38:07.009 --> 00:38:08.009
sent.

00:38:08.009 --> 00:38:11.839
So that's my indication that this is working
correctly.

00:38:11.839 --> 00:38:18.650
I'd really like to be able to see this, so
for some reason I can't unlock this.

00:38:18.650 --> 00:38:21.990
But I know the notepad actually opened.

00:38:21.990 --> 00:38:28.020
You can actually also -- this is a useful
use of real time.

00:38:28.020 --> 00:38:34.049
So in this case this is the notepad, real
time.

00:38:34.049 --> 00:38:38.549
And I get to see, I have one user of about
four minutes ago, which is when I first launched

00:38:38.549 --> 00:38:41.160
the application.

00:38:41.160 --> 00:38:46.280
That's a good way you can quickly verify that
your application is getting information back

00:38:46.280 --> 00:38:53.470
to Analytics.

00:38:53.470 --> 00:38:57.070
Okay.

00:38:57.070 --> 00:38:59.970
So we've seen today what we have.

00:38:59.970 --> 00:39:03.880
We've seen the reports, we've seen how you
add analytics to your application.

00:39:03.880 --> 00:39:07.249
There's other code you might want to add to
your application.

00:39:07.249 --> 00:39:08.420
Tracking views manually.

00:39:08.420 --> 00:39:13.200
This would be the case if you have a game
application where you have a single activity

00:39:13.200 --> 00:39:16.380
and users are moving from level to level in
your game.

00:39:16.380 --> 00:39:21.200
So you would want to call trackview as they
enter a new level.

00:39:21.200 --> 00:39:27.789
Or if you've got your application organized
as fragments as users display one fragment

00:39:27.789 --> 00:39:30.289
or another fragment, you would want to trackview.

00:39:30.289 --> 00:39:35.210
Events I talked about, the what is happening
in your application.

00:39:35.210 --> 00:39:42.579
We have a three-level hierarchy of strings
as well as a value associated with each event.

00:39:42.579 --> 00:39:45.759
E-commerce, so you have any sort of e-commerce
in your application, as we did in the travel

00:39:45.759 --> 00:39:49.829
app, you can record it here.

00:39:49.829 --> 00:39:54.180
It's basically transaction consists of one
or more items, each of which can have their

00:39:54.180 --> 00:39:57.700
own quantity and price.

00:39:57.700 --> 00:40:04.249
Exceptions, so you can use the uncut exception
handler or catch your own exceptions.

00:40:04.249 --> 00:40:07.550
In this case, the false means it's not fatal.

00:40:07.550 --> 00:40:11.859
You can provide the raw exception in which
case we will summarize it for you.

00:40:11.859 --> 00:40:16.030
Or you can provide a textual description on
your own.

00:40:16.030 --> 00:40:24.259
And timing; timing can be really useful to
optimize your application and user's experience

00:40:24.259 --> 00:40:25.720
of that application.

00:40:25.720 --> 00:40:30.950
You might want to keep timing, for instance,
of how long it takes to sync your application

00:40:30.950 --> 00:40:41.400
to your backend, or how long it takes to load
a new level in your game.

00:40:41.400 --> 00:40:45.180
And then get that information in your reports
and find out there may be out layers you want

00:40:45.180 --> 00:40:47.239
to go fix.

00:40:47.239 --> 00:40:50.979
So I've seen what we have today.

00:40:50.979 --> 00:40:54.749
Let me look at an upcoming feature that I'm
really excited about.

00:40:54.749 --> 00:40:59.369
And that is, integration with Google Play.

00:40:59.369 --> 00:41:05.640
When you are creating an account, you have
the option of linking that to a Google Play

00:41:05.640 --> 00:41:06.900
account.

00:41:06.900 --> 00:41:11.759
We will show you then all of the applications
you have in that Google Play account.

00:41:11.759 --> 00:41:14.570
You probably don't have Gmail and YouTube.

00:41:14.570 --> 00:41:15.570
We at Google do.

00:41:15.570 --> 00:41:20.400
You will see your icons for your applications
and you can then link an application to your

00:41:20.400 --> 00:41:21.400
account.

00:41:21.400 --> 00:41:22.400
How is that useful?

00:41:22.400 --> 00:41:32.400
Well, we have a report that shows you how
users are getting -- you've already seen how

00:41:32.400 --> 00:41:35.109
users get to your application, right?

00:41:35.109 --> 00:41:40.369
We now have some extra information that we
can show about how many users may get to your

00:41:40.369 --> 00:41:46.099
page in Google Play and of those how many
actually download the application.

00:41:46.099 --> 00:41:47.099
Right?

00:41:47.099 --> 00:41:48.910
Because there's definitely a difference there,
right?

00:41:48.910 --> 00:41:55.009
You've got people who go to Google Play, see
your page and see side, nah, this isn't for

00:41:55.009 --> 00:41:56.009
me.

00:41:56.009 --> 00:42:00.769
You can see how people differentially download
based on how they are coming in.

00:42:00.769 --> 00:42:04.901
Are they coming in via Google search, AdWords,
so on.

00:42:04.901 --> 00:42:13.900
This can allow you to optimize your campaigns
as well as optimize your Google Play page.

00:42:13.900 --> 00:42:15.249
What might you do?

00:42:15.249 --> 00:42:18.150
You might adjust your screen shots.

00:42:18.150 --> 00:42:21.539
You might adjust your copy.

00:42:21.539 --> 00:42:29.869
And you might find you want to get better
reviews by whatever means you can do that.

00:42:29.869 --> 00:42:32.019
One more thing.

00:42:32.019 --> 00:42:36.079
I'd like to go ahead and bring Nick up on
board, to show you something else exciting

00:42:36.079 --> 00:42:39.909
in the space of Analytics and mobile applications.

00:42:39.909 --> 00:42:49.450
[ Applause ]
&gt;&gt;Nick Mihailovksi: Thanks Neil.

00:42:49.450 --> 00:42:50.710
My name is Nick Mihailovski.

00:42:50.710 --> 00:42:52.540
Where's the clicker.

00:42:52.540 --> 00:42:53.760
Thank you.

00:42:53.760 --> 00:42:54.970
All right.

00:42:54.970 --> 00:43:00.249
I'm going to get you guys awake because I
know it's late in the day and Analytics is

00:43:00.249 --> 00:43:04.180
probably -- for me it's one of my favorite
subjects.

00:43:04.180 --> 00:43:05.431
So my name is Nick Mihailovski.

00:43:05.431 --> 00:43:07.950
I'm a developer programs engineer on Analytics.

00:43:07.950 --> 00:43:11.720
I'm really excited here to talk about one
more thing that we have.

00:43:11.720 --> 00:43:17.819
Now, typically most people who use Google
Analytics log into the web interface and view

00:43:17.819 --> 00:43:18.829
their data.

00:43:18.829 --> 00:43:21.839
But what happens if you're away from your
desk?

00:43:21.839 --> 00:43:25.160
Like if you're traveling and you want to view
your data on the go.

00:43:25.160 --> 00:43:27.609
In the past, it's been difficult.

00:43:27.609 --> 00:43:29.799
The experience hasn't been that great.

00:43:29.799 --> 00:43:34.250
You either have to go and boot up your computer
or you are going to have to go and go to your

00:43:34.250 --> 00:43:40.849
mobile device and look at the browser and
the experience wasn't optimized until today.

00:43:40.849 --> 00:43:43.480
Today we're launching --
[ Applause ]

00:43:43.480 --> 00:43:47.269
&gt;&gt;Nick Mihailovksi: Wooh!

00:43:47.269 --> 00:43:49.799
All right.

00:43:49.799 --> 00:43:55.120
Today we are launching a new Google Analytics
mobile application that allows you to view

00:43:55.120 --> 00:43:58.319
your data directly from your Android device.

00:43:58.319 --> 00:44:05.950
Now, if all things work well, it's -- if all
things work well, I'm going to try to show

00:44:05.950 --> 00:44:07.849
you a demo from my device.

00:44:07.849 --> 00:44:14.619
Let's see if the Wi-Fi cooperates here.

00:44:14.619 --> 00:44:24.760
All right.

00:44:24.760 --> 00:44:26.210
Hopefully nobody calls me either.

00:44:26.210 --> 00:44:27.509
All right.

00:44:27.509 --> 00:44:33.470
So here I have Analytics app on the phone.

00:44:33.470 --> 00:44:34.710
I'm going to turn it on.

00:44:34.710 --> 00:44:38.309
First thing what we do is we show you a list
of all the profiles that you have access to.

00:44:38.309 --> 00:44:42.660
So the demo I'm going to give you today is
Google I/O app, the same one Neil showed you.

00:44:42.660 --> 00:44:47.599
I'm going to go ahead and click on that.

00:44:47.599 --> 00:44:49.109
The first thing we show you is the dashboard.

00:44:49.109 --> 00:44:53.210
This is a quick way for you to view your key
performance metrics.

00:44:53.210 --> 00:44:56.089
What's nice about this dashboard, it's completely
customizable.

00:44:56.089 --> 00:45:00.700
So right here, the default view will show
you the total number of active users for the

00:45:00.700 --> 00:45:01.700
I/O app.

00:45:01.700 --> 00:45:05.849
Notice how the number of active users has
increased because everybody is using the app

00:45:05.849 --> 00:45:06.849
at I/O.

00:45:06.849 --> 00:45:10.930
Now what I could do is click this plus button,
I have a full list of different metrics I

00:45:10.930 --> 00:45:14.210
can use to add to this dashboard.

00:45:14.210 --> 00:45:16.490
I'm really interested in crashes.

00:45:16.490 --> 00:45:20.430
Crashes should not happen on an app especially
when everybody is using it.

00:45:20.430 --> 00:45:24.279
Let's go ahead and click on the crashes metric.

00:45:24.279 --> 00:45:27.930
I can configure this to change and apply advanced
segments.

00:45:27.930 --> 00:45:30.589
I could change the date range, bunch of stuff.

00:45:30.589 --> 00:45:33.819
For you guys, we will use the default view.

00:45:33.819 --> 00:45:34.819
Go back.

00:45:34.819 --> 00:45:35.819
Boom.

00:45:35.819 --> 00:45:40.670
There you have daily crashes in the palm of
your hands.

00:45:40.670 --> 00:45:41.989
Pretty cool.

00:45:41.989 --> 00:45:45.849
So here's a little story on the next feature
that I think was really cool and is really

00:45:45.849 --> 00:45:47.190
applicable.

00:45:47.190 --> 00:45:53.170
So for the keynote, I was standing there in
line with my buddy Antonio Rosso.

00:45:53.170 --> 00:45:55.470
We are standing in this line.

00:45:55.470 --> 00:45:58.160
Thousands of people around us.

00:45:58.160 --> 00:46:00.269
Everybody is trying to get into the keynote
for I/O.

00:46:00.269 --> 00:46:04.849
We started to chat about how this year at
I/O the audience is bigger, things are better.

00:46:04.849 --> 00:46:11.460
The new mobile I/O app is so much better,
it's easier to use.

00:46:11.460 --> 00:46:16.749
We look around, he asks me, I wonder how many
people are using the mobile app.

00:46:16.749 --> 00:46:19.271
I look at him and smile.

00:46:19.271 --> 00:46:22.309
I showed him this view.

00:46:22.309 --> 00:46:24.750
Which is realtime reporting in Analytics.

00:46:24.750 --> 00:46:30.450
Now, I probably don't have a connection here,
so you can't see the data because it's realtime

00:46:30.450 --> 00:46:32.980
and since there's no connection, you're not
going to see information here.

00:46:32.980 --> 00:46:39.010
But what we are doing is we are bringing realtime,
up-to-the-second reporting directly in the

00:46:39.010 --> 00:46:40.010
palm of your hands.

00:46:40.010 --> 00:46:44.519
So at the time when we were looking at the
data, we saw about 5,000 different people

00:46:44.519 --> 00:46:46.539
using the app right there.

00:46:46.539 --> 00:46:51.180
And I swear this works because I was sitting
right here and I was looking at it the whole

00:46:51.180 --> 00:47:00.999
time changing networks and, of course, when
I have to do the demo, there's no connection.

00:47:00.999 --> 00:47:04.660
It's setup to work on Google I/O.

00:47:04.660 --> 00:47:10.309
So what we will do here is we will show you
a metric of the total number of users whether

00:47:10.309 --> 00:47:13.140
it's in your web site or your application.

00:47:13.140 --> 00:47:17.039
So if you're at the movie theater looking
at your metrics, if you're in a board room

00:47:17.039 --> 00:47:22.000
meeting and kind of sneaking a view, you have
up-to-the-minute reports of what's going on

00:47:22.000 --> 00:47:24.190
in your site.

00:47:24.190 --> 00:47:27.969
Now, in Google Analytics there's over 200
metrics you can analyze.

00:47:27.969 --> 00:47:32.500
That can be difficult to analyze all that
data on such a small device.

00:47:32.500 --> 00:47:36.339
A couple of years ago we launched what we
call Google Analytics Intelligence.

00:47:36.339 --> 00:47:42.269
Now, Google Analytics Intelligence mines all
your data and finds statistically significant

00:47:42.269 --> 00:47:44.900
changes and shows those in a report.

00:47:44.900 --> 00:47:47.779
It's pretty much a what's change report.

00:47:47.779 --> 00:47:54.339
To make analysis easy on the device, we incorporated
Google Analytics Intelligence directly in

00:47:54.339 --> 00:47:55.440
a view.

00:47:55.440 --> 00:47:59.509
What this shows you is a list of the top things
that have changed on your site, ordered by

00:47:59.509 --> 00:48:03.020
day and by statistical significance.

00:48:03.020 --> 00:48:08.769
And so when you click on the first link, what
we see is that in San Francisco the number

00:48:08.769 --> 00:48:13.160
of sessions has increased by 500% and that's
an anomaly in our data set.

00:48:13.160 --> 00:48:18.809
You can see by the data-over-time graph that
there's a huge increase of data right there.

00:48:18.809 --> 00:48:23.150
Now, when you're looking at this data, you
might be, again, waiting to get on a plane

00:48:23.150 --> 00:48:27.079
or eating dinner, and you want to share this
with your team at home.

00:48:27.079 --> 00:48:30.640
We made this easy to share by clicking this
button.

00:48:30.640 --> 00:48:33.979
You can send this report to your team back
at home.

00:48:33.979 --> 00:48:37.380
So that's a high level review of the Google
Analytics mobile application.

00:48:37.380 --> 00:48:39.680
The app is free.

00:48:39.680 --> 00:48:43.799
It will be available through Google Play within
a couple hours.

00:48:43.799 --> 00:48:47.369
With that, I want to bring Neil back on stage.

00:48:47.369 --> 00:48:56.759
[ Applause ]
&gt;&gt;Neil Rhodes: Thanks very much, Nick.

00:48:56.759 --> 00:49:00.430
So let's summarize.

00:49:00.430 --> 00:49:11.989
We've shown you Google mobile app Analytics
which brings mobile applications as a first-class

00:49:11.989 --> 00:49:16.710
citizen into Google Analytics.

00:49:16.710 --> 00:49:25.319
If you go to this link goo.gl/E8ULI, you can
go ahead and sign up for the whitelist.

00:49:25.319 --> 00:49:35.309
Whitelist will be available in waves starting
Monday, and the good news that I have for

00:49:35.309 --> 00:49:40.190
recall of you at I/O is that you all at I/O
have preference over anyone else.

00:49:40.190 --> 00:49:44.499
[ Applause ]
&gt;&gt;Nick Mihailovksi: Let's be clear, if you

00:49:44.499 --> 00:49:49.049
want to use this application tracking, this
brand new stuff, sign up right now because

00:49:49.049 --> 00:49:51.359
a lot of other people will sign up and you
guys will have preference.

00:49:51.359 --> 00:49:56.309
&gt;&gt;Neil Rhodes: When he says right now, wait
until the session is over.

00:49:56.309 --> 00:49:58.259
All right.

00:49:58.259 --> 00:50:01.180
Second thing we showed is -- so what will
happen, you will get an email.

00:50:01.180 --> 00:50:05.000
User will be enabled to go create app profiles.

00:50:05.000 --> 00:50:10.150
You can go download the SDK, look at the docs,
create applications that use it, start sending

00:50:10.150 --> 00:50:12.619
the data, seeing the reports and so on.

00:50:12.619 --> 00:50:13.769
So it's all there.

00:50:13.769 --> 00:50:19.739
The second thing we have launched today is
a Google Analytics Android app, which Nick

00:50:19.739 --> 00:50:25.420
just showed you and which we are really excited
about.

00:50:25.420 --> 00:50:27.039
Here's the link for it.

00:50:27.039 --> 00:50:29.989
As Nick said, it should be available in the
next couple of hours.

00:50:29.989 --> 00:50:33.710
There's a QR code not too useful for those
of you here.

00:50:33.710 --> 00:50:37.479
If you happen to be streaming this, it might
be useful.

00:50:37.479 --> 00:50:41.140
With that, we thank you very much.

00:50:41.140 --> 00:50:48.530
[ Applause ]
&gt;&gt;Neil Rhodes: So let's now open it up for

00:50:48.530 --> 00:50:49.799
questions.

00:50:49.799 --> 00:50:53.180
Just to let you know, by the way, Nick and
I will be available after this session.

00:50:53.180 --> 00:50:57.039
We will go out in the hallway and then we
will make our way down to lunch.

00:50:57.039 --> 00:50:58.339
You're free to join us.

00:50:58.339 --> 00:50:59.430
Any questions?

00:50:59.430 --> 00:51:02.039
Let's go ahead with questions?

00:51:02.039 --> 00:51:03.219
&gt;&gt;&gt; Hi.

00:51:03.219 --> 00:51:08.210
So if I were already using Google Analytics
for my app and there's already data, like

00:51:08.210 --> 00:51:13.729
a lot of Analytics information on there, what's
the migration path?

00:51:13.729 --> 00:51:17.119
How do I migrate to --
&gt;&gt;Neil Rhodes: So you are already using Google

00:51:17.119 --> 00:51:18.549
Analytics for mobile app?

00:51:18.549 --> 00:51:19.549
&gt;&gt;&gt; Yes.

00:51:19.549 --> 00:51:25.309
&gt;&gt;Neil Rhodes: So unfortunately, you really
need to just switch over to use the new and

00:51:25.309 --> 00:51:27.479
you're not going to be able to see your new
and old data.

00:51:27.479 --> 00:51:28.479
&gt;&gt;&gt; Okay.

00:51:28.479 --> 00:51:31.220
Is there a plan, though, for the migration?

00:51:31.220 --> 00:51:34.130
&gt;&gt;Neil Rhodes: So, no, unfortunately.

00:51:34.130 --> 00:51:39.290
This was really -- just the old mobile SDK
was a labs feature, we don't have a migration.

00:51:39.290 --> 00:51:40.290
&gt;&gt;&gt; Thanks.

00:51:40.290 --> 00:51:46.900
&gt;&gt;&gt; Basic question, when you were on the dashboard
for Google Play showing the traffic sources,

00:51:46.900 --> 00:51:51.710
do you have to input those choices manually
or does it auto recognize where you're traffic

00:51:51.710 --> 00:51:52.710
is coming from.

00:51:52.710 --> 00:51:56.420
&gt;&gt;Neil Rhodes: The traffic sources are auto
recognized for everything except the email

00:51:56.420 --> 00:51:57.980
campaign there.

00:51:57.980 --> 00:52:04.559
So in general, we have manual campaign tracking
and auto tracking that happens.

00:52:04.559 --> 00:52:10.789
&gt;&gt;&gt; Can I go back to those traffic sources
and look at future retention and actions from

00:52:10.789 --> 00:52:14.859
those traffic sources, or is it only showing
me app open on the initial launch?

00:52:14.859 --> 00:52:21.319
&gt;&gt;Neil Rhodes: What happens is that when you
have a traffic source, that information is

00:52:21.319 --> 00:52:28.390
maintained across the lifetime of that user,
and so we can still see information, for instance,

00:52:28.390 --> 00:52:30.710
of what happens on those users in the future.

00:52:30.710 --> 00:52:34.729
&gt;&gt;Nick Mihailovski: So if you have in-app
transactions, you can then attribute that

00:52:34.729 --> 00:52:37.950
back to the original ad that sent them to
download your app.

00:52:37.950 --> 00:52:40.390
&gt;&gt;&gt; Beautiful, that helps me with lifetime
value and retention.

00:52:40.390 --> 00:52:41.500
Thank you.

00:52:41.500 --> 00:52:43.160
&gt;&gt;Neil Rhodes: Question.

00:52:43.160 --> 00:52:44.279
&gt;&gt;&gt; Two questions.

00:52:44.279 --> 00:52:46.380
The first one is maybe a bit broad.

00:52:46.380 --> 00:52:51.609
Can you give an overview of how yourselves
compares to your competitors like Flurry?

00:52:51.609 --> 00:53:02.720
&gt;&gt;Neil Rhodes: So, we provide somewhat -- well,
we both are analytics and we provide additional

00:53:02.720 --> 00:53:05.460
features that --
&gt;&gt;&gt; Google Play, that one.

00:53:05.460 --> 00:53:09.890
&gt;&gt;Neil Rhodes: Let me back up a second.

00:53:09.890 --> 00:53:14.769
Having multiple choices is good for users
and we are going to let users decide which

00:53:14.769 --> 00:53:15.769
they prefer.

00:53:15.769 --> 00:53:16.769
&gt;&gt;&gt; Okay.

00:53:16.769 --> 00:53:21.079
Well then the other question was more specifically
about one of the features that they have is

00:53:21.079 --> 00:53:23.059
about, you can tie parameters to events.

00:53:23.059 --> 00:53:27.210
Like when you have an event for the levels,
player has beaten a level, you can add statistics

00:53:27.210 --> 00:53:29.579
about how they did in that level.

00:53:29.579 --> 00:53:34.700
When I last looked at Google Analytics, you
could only say just an event.

00:53:34.700 --> 00:53:37.539
Is there anything to allow to tie the extra
parameters to it.

00:53:37.539 --> 00:53:40.299
&gt;&gt;Nick Mihailovksi: That's a great question.

00:53:40.299 --> 00:53:44.270
We released a feature called custom variables
in the previous SDK.

00:53:44.270 --> 00:53:47.890
That's something we are looking to bring to
the new SDK.

00:53:47.890 --> 00:53:51.849
If you look at our documentation and read
about custom variables, you will see they

00:53:51.849 --> 00:53:55.470
give you the ability to add meta data around
the type of stuff you want to bring, your

00:53:55.470 --> 00:53:57.960
business data into our product.

00:53:57.960 --> 00:54:00.709
&gt;&gt;&gt; That's useful.

00:54:00.709 --> 00:54:03.119
&gt;&gt;&gt; My question is about pausing the application.

00:54:03.119 --> 00:54:08.400
So when the application -- when user pauses
the app duty, say by pressing the home key,

00:54:08.400 --> 00:54:10.839
is that considered a user leaving the screen?

00:54:10.839 --> 00:54:16.039
&gt;&gt;Neil Rhodes: So when the user leaves the
application, for instance by going to the

00:54:16.039 --> 00:54:18.579
home screen, that is considered leaving that
screen, yes.

00:54:18.579 --> 00:54:20.059
&gt;&gt;&gt; That's considered a drop of the user?

00:54:20.059 --> 00:54:26.410
&gt;&gt;Neil Rhodes: So the question as to whether
that causes a new session or not is up -- we

00:54:26.410 --> 00:54:31.769
actually have a timing mechanism so that you
can specify sort of how long the user is away

00:54:31.769 --> 00:54:34.529
from the app before we consider that a new
session.

00:54:34.529 --> 00:54:37.000
&gt;&gt;&gt; Is that part of the SDK?

00:54:37.000 --> 00:54:38.640
&gt;&gt;Neil Rhodes: Yes.

00:54:38.640 --> 00:54:39.640
&gt;&gt;&gt; Thanks.

00:54:39.640 --> 00:54:41.930
&gt;&gt;&gt; I actually have two questions.

00:54:41.930 --> 00:54:45.299
So number one is, is there a limit of number
he of events the client library will track

00:54:45.299 --> 00:54:46.299
per day?

00:54:46.299 --> 00:54:51.059
&gt;&gt;Nick Mihailovksi: A limit of 500 requests
per session.

00:54:51.059 --> 00:54:54.319
&gt;&gt;&gt; And number two, is there a export API?

00:54:54.319 --> 00:54:59.740
For example, if you came up with new query
that, for example, Google doesn't support

00:54:59.740 --> 00:55:04.219
right now, but you wanted to run against that
data, do you have an export API to grab that

00:55:04.219 --> 00:55:05.219
data, or not.

00:55:05.219 --> 00:55:06.219
&gt;&gt;Nick Mihailovksi: We do.

00:55:06.219 --> 00:55:07.529
We call it our core reporting API.

00:55:07.529 --> 00:55:12.089
If you go to developer.android.com/Analytics,
there's a lot of resources around how to use

00:55:12.089 --> 00:55:13.089
that.

00:55:13.089 --> 00:55:16.969
&gt;&gt;Neil Rhodes: Just to make clear, we do not
export the raw data.

00:55:16.969 --> 00:55:18.089
We export reports.

00:55:18.089 --> 00:55:19.089
&gt;&gt;&gt; Okay.

00:55:19.089 --> 00:55:21.069
&gt;&gt;Neil Rhodes: So aggregated data.

00:55:21.069 --> 00:55:22.770
&gt;&gt;&gt; Thank you.

00:55:22.770 --> 00:55:28.519
&gt;&gt;&gt; Question about the refer attribute or
the receiver from Google Play.

00:55:28.519 --> 00:55:34.959
We had some issues about this previously when
you have various people managing campaigns,

00:55:34.959 --> 00:55:41.579
the operating system sends one receiver value
and not all the receivers.

00:55:41.579 --> 00:55:45.930
So you're in a unique place to kind of push
back on that and say it needs to be a broadcast

00:55:45.930 --> 00:55:49.039
so that more than one receiver can get that
information.

00:55:49.039 --> 00:55:52.999
&gt;&gt;Neil Rhodes: It's true, it is kind of clumsy
if you have multiple receivers associated

00:55:52.999 --> 00:55:53.999
with your application.

00:55:53.999 --> 00:55:58.759
I think I'm addressing your issue.

00:55:58.759 --> 00:56:02.959
You need to write a meta receiver that then
dispatches it to the others.

00:56:02.959 --> 00:56:06.509
It is kind of clumsy.

00:56:06.509 --> 00:56:11.269
We'll take that information back to the Android
team.

00:56:11.269 --> 00:56:12.269
&gt;&gt;&gt; Thanks for the presentation.

00:56:12.269 --> 00:56:14.640
The question is about the Android developer
console.

00:56:14.640 --> 00:56:17.319
Right now there are some stats there.

00:56:17.319 --> 00:56:23.170
What's the crossover between Analytics and
the console that you can see for your applications?

00:56:23.170 --> 00:56:26.930
&gt;&gt;Neil Rhodes: We are trying to integrate
that more.

00:56:26.930 --> 00:56:28.609
We're working on it.

00:56:28.609 --> 00:56:33.569
&gt;&gt;&gt; Will it be a subset or --
&gt;&gt;Nick Mihailovksi: One of the stuff that

00:56:33.569 --> 00:56:37.140
Neil was talking about was deeper play integration.

00:56:37.140 --> 00:56:41.390
Some of the metrics they are giving your there
are about how people engage on the site.

00:56:41.390 --> 00:56:46.130
Analytics gives you more in-app usage and
they give you more within your listing on

00:56:46.130 --> 00:56:48.239
the actual play product.

00:56:48.239 --> 00:56:52.309
The integration that we are looking to do
is give you holistic end-to-end measurement

00:56:52.309 --> 00:56:57.309
so you have full visibility in how to gain
more people to come to your site, how you

00:56:57.309 --> 00:57:03.390
can optimize the copy in-play and get more
people to download and transact.

00:57:03.390 --> 00:57:07.279
Neil talked about some stuff coming out looking
forward a little bit.

00:57:07.279 --> 00:57:11.199
You can consider those integrations getting
deeper and deeper.

00:57:11.199 --> 00:57:12.199
&gt;&gt;&gt; Great.

00:57:12.199 --> 00:57:13.259
Thank you.

00:57:13.259 --> 00:57:20.509
&gt;&gt;&gt; How easy is it to cohort analysis looking
at the user engagement over time with WebKit

00:57:20.509 --> 00:57:22.549
and things like that?

00:57:22.549 --> 00:57:27.299
&gt;&gt;Nick Mihailovksi: So for cohort analysis,
we do show you the total number of users and

00:57:27.299 --> 00:57:30.210
active users on the site.

00:57:30.210 --> 00:57:33.369
It's something that we are looking at to give
you the right -- to be able to segment them

00:57:33.369 --> 00:57:34.369
properly.

00:57:34.369 --> 00:57:36.109
There are deeper things to do.

00:57:36.109 --> 00:57:38.609
Something we are still looking at.

00:57:38.609 --> 00:57:40.319
&gt;&gt;&gt; How realtime is the data?

00:57:40.319 --> 00:57:44.560
&gt;&gt;Nick Mihailovksi: Realtime is within a couple
seconds when you have an Internet connection.

00:57:44.560 --> 00:57:48.880
[ Laughter ]
&gt;&gt;Neil Rhodes: For the realtime.

00:57:48.880 --> 00:57:56.160
What we say sometimes is, at least for the
web site, we know before the user knows.

00:57:56.160 --> 00:58:02.579
So before the user sees the page, we can already
know that they have been there, which I think

00:58:02.579 --> 00:58:03.579
is interesting.

00:58:03.579 --> 00:58:06.200
&gt;&gt;&gt; Is there any plan to add support for other
mobile platforms?

00:58:06.200 --> 00:58:07.759
Like Windows phone or Blackberry?

00:58:07.759 --> 00:58:11.460
&gt;&gt;Neil Rhodes: We are looking into other platforms,
yes.

00:58:11.460 --> 00:58:15.380
&gt;&gt;Nick Mihailovksi: There's a trade-off on
market share, too, so we want to go where

00:58:15.380 --> 00:58:16.509
developers are.

00:58:16.509 --> 00:58:24.229
&gt;&gt;Neil Rhodes: And we are also investigating
ways this which third parties could provide

00:58:24.229 --> 00:58:25.229
that.

00:58:25.229 --> 00:58:30.420
&gt;&gt;&gt; Can you explain how you define the concept
of session and time spent and how it's different

00:58:30.420 --> 00:58:31.569
from the web?

00:58:31.569 --> 00:58:40.200
&gt;&gt;Neil Rhodes: So it's -- a session length
consists of, when you enter the first activity

00:58:40.200 --> 00:58:47.079
until you leave -- until you -- let's make
it clear.

00:58:47.079 --> 00:58:51.239
So it's a little complicated by the fact,
of course, that on Android your application

00:58:51.239 --> 00:58:53.819
is still running even in the background, right?

00:58:53.819 --> 00:59:02.119
So it's when you leave an activity and don't
start a new activity and then stay out for

00:59:02.119 --> 00:59:03.440
some certain period of time.

00:59:03.440 --> 00:59:06.630
I think the default is 30 seconds maybe.

00:59:06.630 --> 00:59:10.059
Although I don't remember and that is configurable.

00:59:10.059 --> 00:59:16.150
In addition, if you've got a period of inactivity
for at least 30 minutes that, will also be

00:59:16.150 --> 00:59:18.789
considered stopping a session.

00:59:18.789 --> 00:59:23.430
&gt;&gt;&gt; So like if you're playing a long-form
video, is that considered activity?

00:59:23.430 --> 00:59:26.170
Like say if you are watching an hour-long
movie.

00:59:26.170 --> 00:59:34.220
&gt;&gt;Neil Rhodes: As long as you are making tracking
calls at least every 30 minutes, then that

00:59:34.220 --> 00:59:35.220
will be considered the same session.

00:59:35.220 --> 00:59:39.920
But that's a good example where you would
want to explicitly make calls to -- for instance,

00:59:39.920 --> 00:59:46.880
track the event that they are 15 minutes in,
30 minutes in, 45 minutes in, so on, so you

00:59:46.880 --> 00:59:48.499
can get some idea.

00:59:48.499 --> 00:59:49.499
&gt;&gt;&gt; Thank you.

00:59:49.499 --> 00:59:53.599
&gt;&gt;&gt; Can I label my users as a custom cohort?

00:59:53.599 --> 00:59:57.930
Does the old segmentation feature of Google
Analytics work?

00:59:57.930 --> 01:00:00.799
&gt;&gt;Neil Rhodes: Segmentation feature certainly
works.

01:00:00.799 --> 01:00:07.140
If you want to be labeling them in the form
of custom variables, then, no, that is not

01:00:07.140 --> 01:00:08.140
there now.

01:00:08.140 --> 01:00:12.210
&gt;&gt;&gt; Another question, I think the play integration
is a killer feature, by the way, and sets

01:00:12.210 --> 01:00:14.410
you apart from Flurry.

01:00:14.410 --> 01:00:18.680
Two-part question, one, I would love to see
more data coming in Google Play, like this

01:00:18.680 --> 01:00:23.980
cohort gives me a 30% lower rating than this
other cohort.

01:00:23.980 --> 01:00:28.310
The question is, is this exposed in a way
that other SDKs could theoretically grab that

01:00:28.310 --> 01:00:31.430
data through the receiver or some other way?

01:00:31.430 --> 01:00:36.319
&gt;&gt;Neil Rhodes: So the -- first off, that's
very useful information about the suggestion

01:00:36.319 --> 01:00:37.900
for the Google Play.

01:00:37.900 --> 01:00:41.459
Things like how well they rate and so on.

01:00:41.459 --> 01:00:45.789
The aggregated -- there's a couple answers.

01:00:45.789 --> 01:00:49.599
So the aggregated information is certainly
available through the export API.

01:00:49.599 --> 01:00:51.670
The receiver information is available to any
application.

01:00:51.670 --> 01:00:56.339
So you can know the campaign that caused them
to get to Google Play.

01:00:56.339 --> 01:01:01.809
The actual information from Google Play as
terms of number of views and things like that,

01:01:01.809 --> 01:01:08.900
there's no API that I know of, at least at
this point, and I don't know of any plans

01:01:08.900 --> 01:01:09.900
for one.

01:01:09.900 --> 01:01:10.900
&gt;&gt;&gt; Thanks.

01:01:10.900 --> 01:01:11.900
&gt;&gt;&gt; I have two questions.

01:01:11.900 --> 01:01:17.010
One is are you planning to release the source
code of the Analytics app for Android.

01:01:17.010 --> 01:01:21.359
&gt;&gt;Nick Mihailovksi: Application to see your
data, probably not.

01:01:21.359 --> 01:01:25.119
We have API, and there's people who built
their own frontends.

01:01:25.119 --> 01:01:30.279
But for this one, we will probably own it
ourselves.

01:01:30.279 --> 01:01:35.099
&gt;&gt;&gt; Is there a way to track uninstalls with
the new feature of Google Analytics?

01:01:35.099 --> 01:01:38.420
&gt;&gt;Neil Rhodes: There is currently no way to
track uninstalls.

01:01:38.420 --> 01:01:42.839
That is not to say we won't have that as part
of Google Play integration.

01:01:42.839 --> 01:01:48.940
&gt;&gt;&gt; Is there any support for app widgets as
part of the launch?

01:01:48.940 --> 01:01:54.619
&gt;&gt;Nick Mihailovksi: So we're providing the
framework to do the tracking and so that's

01:01:54.619 --> 01:01:58.630
some of the more documentation on how to use
the framework to do that.

01:01:58.630 --> 01:02:01.890
We would probably look to go do it within
the next couple quarters.

01:02:01.890 --> 01:02:04.900
There will be more better support for that
type of stuff in the future.

01:02:04.900 --> 01:02:07.329
&gt;&gt;Neil Rhodes: But it can be used today.

01:02:07.329 --> 01:02:12.349
There's nothing that requires you to have
activities in order to do tracking.

01:02:12.349 --> 01:02:16.410
There's sort of a lower level of just initialize
the tracker and start making tracking calls.

01:02:16.410 --> 01:02:19.109
You can certainly do that from a widget.

01:02:19.109 --> 01:02:22.930
&gt;&gt;Nick Mihailovksi: Just there's a guy right
here, Andrew, he is on our team, and somebody

01:02:22.930 --> 01:02:27.299
maybe you want to talk to to figure out some
of the use cases.

01:02:27.299 --> 01:02:30.210
&gt;&gt;&gt; What is the minimum Android API required?

01:02:30.210 --> 01:02:34.339
&gt;&gt;Neil Rhodes: That is a great question that
I should know the answer to off the top of

01:02:34.339 --> 01:02:35.339
my head.

01:02:35.339 --> 01:02:37.259
I believe it's 2.1.

01:02:37.259 --> 01:02:41.209
It's certainly no later than that.

01:02:41.209 --> 01:02:43.650
Does that work for you?

01:02:43.650 --> 01:02:44.650
No?

01:02:44.650 --> 01:02:45.650
Okay.

01:02:45.650 --> 01:02:48.240
&gt;&gt;&gt; In the XML document, you have a debug
mode and you have to differentiate something

01:02:48.240 --> 01:02:49.240
like the dispatch time.

01:02:49.240 --> 01:02:57.519
Is there a good way to set that so, like,
I have a debug application, is there a good

01:02:57.519 --> 01:02:58.530
way to differentiate?

01:02:58.530 --> 01:03:02.769
Not just keep switching the string for the
ID, string for the debug.

01:03:02.769 --> 01:03:08.289
&gt;&gt;Neil Rhodes: Yeah, I can understand where
that XML -- you want to be able to do programmatically,

01:03:08.289 --> 01:03:09.289
perhaps.

01:03:09.289 --> 01:03:11.569
You can certainly do it programmatically as
well.

01:03:11.569 --> 01:03:17.779
You can leave it out of your XML file and
just make a programmatic call to either turn

01:03:17.779 --> 01:03:20.099
the debugger on or off depending on your debugger
setting.

01:03:20.099 --> 01:03:21.099
&gt;&gt;&gt; In app starter?

01:03:21.099 --> 01:03:22.099
&gt;&gt;Neil Rhodes: Yes.

01:03:22.099 --> 01:03:25.819
All that stuff is also available programmatically.

01:03:25.819 --> 01:03:30.760
We'll take the last question.

01:03:30.760 --> 01:03:35.349
&gt;&gt;&gt; Earlier you mentioned there was a 500
limit per session.

01:03:35.349 --> 01:03:37.000
What happens after you hit that?

01:03:37.000 --> 01:03:40.489
Does it just dump off the frontend?

01:03:40.489 --> 01:03:41.489
Does it stop recording?

01:03:41.489 --> 01:03:46.869
&gt;&gt;Neil Rhodes: So that limitation is actually
on the backend rather than in the SDK.

01:03:46.869 --> 01:03:55.309
And so what actually happens when you exceed
500 is undefined in practice.

01:03:55.309 --> 01:03:59.660
So but it could change, you know, in an hour.

01:03:59.660 --> 01:04:01.809
It drops everything past the 500.

01:04:01.809 --> 01:04:02.809
&gt;&gt;&gt; Thank you.

01:04:02.809 --> 01:04:05.999
&gt;&gt;Neil Rhodes: I'm not lying about that, am
I?

01:04:05.999 --> 01:04:06.999
Okay.

01:04:06.999 --> 01:04:07.999
Thanks very much.

01:04:07.999 --> 01:04:08.999
We certainly appreciate it.

01:04:08.999 --> 01:04:09.011
We will be out in the hallway if you have
other questions.

