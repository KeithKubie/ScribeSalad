WEBVTT
Kind: captions
Language: en

00:00:14.160 --> 00:00:15.310
ANKUR KOTWAL: Hi, everyone.

00:00:15.310 --> 00:00:20.690
Welcome to Backstage for the
Making Apps Beautiful series.

00:00:20.690 --> 00:00:23.320
We're actually going to be doing
two Backstage episodes.

00:00:23.320 --> 00:00:28.600
So they're based on the Android
DevBytes of Making

00:00:28.600 --> 00:00:29.180
Apps Beautiful.

00:00:29.180 --> 00:00:33.030
So far we've had parts one,
two, and three available.

00:00:33.030 --> 00:00:37.700
And here is your opportunity to
join us and ask questions.

00:00:37.700 --> 00:00:39.650
So to get started,
I'm Ankur Kotwal.

00:00:39.650 --> 00:00:43.190
And I'm a developer advocate
here in the Sydney office.

00:00:43.190 --> 00:00:44.830
JAN-FELIX SCHMAKEIT: Yeah, and
I'm Jan-Felix Schmakeit.

00:00:44.830 --> 00:00:47.510
I'm an Android Developer
Programs Engineer also here in

00:00:47.510 --> 00:00:48.710
Sydney, obviously.

00:00:48.710 --> 00:00:50.510
ANKUR KOTWAL: So we tried doing
this once before, and we

00:00:50.510 --> 00:00:51.780
had some technical problems.

00:00:51.780 --> 00:00:55.180
So hopefully, we're all going
to be good to go today.

00:00:55.180 --> 00:00:56.580
So thanks for joining us.

00:00:56.580 --> 00:01:00.040
We have a number of questions
that have been submitted

00:01:00.040 --> 00:01:01.670
before the event started.

00:01:01.670 --> 00:01:04.819
But we also have a number of
people joining us live.

00:01:04.819 --> 00:01:05.349
JAN-FELIX SCHMAKEIT:
Yeah, that's right.

00:01:05.349 --> 00:01:08.070
So if you have a question on
the Hangout, just ping us,

00:01:08.070 --> 00:01:09.690
write something with chat,
and we'll put you up.

00:01:09.690 --> 00:01:11.320
And you can ask your
question live.

00:01:11.320 --> 00:01:14.550
But to get started, let's go to
one of our first questions

00:01:14.550 --> 00:01:16.450
we received on our
Plus page before.

00:01:16.450 --> 00:01:18.700
And this question is coming
from Hannes Dorfmann.

00:01:18.700 --> 00:01:22.070
And he's asking about
transparent action bars.

00:01:22.070 --> 00:01:25.525
So if I make an action bar
transparent, will the content

00:01:25.525 --> 00:01:28.820
of a component that has match
parent height, for instance

00:01:28.820 --> 00:01:31.540
the main activity layer outside
the set content view,

00:01:31.540 --> 00:01:33.410
automatically be stretched
and visible

00:01:33.410 --> 00:01:35.210
underneath the action bar?

00:01:35.210 --> 00:01:37.835
And do you think it's generally
a good idea, if

00:01:37.835 --> 00:01:40.310
you're doing it in the Google
Play music app, for example.

00:01:40.310 --> 00:01:41.560
ANKUR KOTWAL: And the
Grand St. app.

00:01:41.560 --> 00:01:42.205
JAN-FELIX SCHMAKEIT: And
the Grand St. app.

00:01:42.205 --> 00:01:42.250
Yeah.

00:01:42.250 --> 00:01:44.640
ANKUR KOTWAL: So let's split
this question up into two.

00:01:44.640 --> 00:01:47.890
The first is about getting an
action bar that actually

00:01:47.890 --> 00:01:49.450
floats above your content.

00:01:49.450 --> 00:01:54.930
The way you do that is actually
by specifying an XML

00:01:54.930 --> 00:01:58.330
attribute in your
layouts called

00:01:58.330 --> 00:01:59.930
Action Bar Window Overlay.

00:01:59.930 --> 00:02:02.600
So if you set this, basically
what it will do is put the

00:02:02.600 --> 00:02:05.750
action bar on top and the
content behind it.

00:02:05.750 --> 00:02:09.479
With that content behind it,
then what that means is that

00:02:09.479 --> 00:02:13.170
you can take advantage of things
like the transparent

00:02:13.170 --> 00:02:14.160
action bar.

00:02:14.160 --> 00:02:18.360
So for example, Google Music, we
use that transparent action

00:02:18.360 --> 00:02:23.840
bar to show you the imagery for
the artist or the album.

00:02:23.840 --> 00:02:28.270
So what happens is when you see
the artist to start with,

00:02:28.270 --> 00:02:30.680
the action bar starts
off transparent.

00:02:30.680 --> 00:02:34.350
And then as you scroll, it
becomes more opaque.

00:02:34.350 --> 00:02:36.910
And that's a really nice effect
because what it does is

00:02:36.910 --> 00:02:41.040
it actually helps to retain the
visual branding that we're

00:02:41.040 --> 00:02:44.920
trying to get with that orange
color of the Play Music app.

00:02:44.920 --> 00:02:47.880
But we're also trying to give
away that screen real estate

00:02:47.880 --> 00:02:49.280
for that rich media.

00:02:49.280 --> 00:02:51.620
So as we're at the very
top, you can see it.

00:02:51.620 --> 00:02:53.960
And then as you scroll,
it sort of

00:02:53.960 --> 00:02:55.760
becomes opaque over time.

00:02:55.760 --> 00:02:57.740
So it's a really nice effect.

00:02:57.740 --> 00:02:58.850
JAN-FELIX SCHMAKEIT: So when
do you think it would make

00:02:58.850 --> 00:03:01.080
sense to include this
in your application?

00:03:01.080 --> 00:03:04.770
ANKUR KOTWAL: I think it's
typically where you need real

00:03:04.770 --> 00:03:05.480
estate back.

00:03:05.480 --> 00:03:11.540
So you've got a decent amount
of content that you want to

00:03:11.540 --> 00:03:14.780
take up that space that the
action bar might be using.

00:03:14.780 --> 00:03:17.210
And in particular, it's actually
when you have rich

00:03:17.210 --> 00:03:18.220
media, like images.

00:03:18.220 --> 00:03:24.030
So we have these artists'
profile here in Play Music.

00:03:24.030 --> 00:03:26.380
Now, Grand St. is interesting
because they use a transparent

00:03:26.380 --> 00:03:27.650
action bar throughout.

00:03:27.650 --> 00:03:31.130
And again, what they're doing is
they're sort of taking away

00:03:31.130 --> 00:03:34.010
the Chrome or the UI elements.

00:03:34.010 --> 00:03:36.810
So actually what they do is that
you'll see that around

00:03:36.810 --> 00:03:39.490
their buttons in the action
bar-- so their action items--

00:03:39.490 --> 00:03:42.220
they've got some sort of
translucent borders.

00:03:42.220 --> 00:03:44.890
But the main section of the
action bar, because they're

00:03:44.890 --> 00:03:47.590
not actually displaying
anything, they're choosing to

00:03:47.590 --> 00:03:49.120
make that transparent.

00:03:49.120 --> 00:03:53.910
And the question was, do you
like the general idea?

00:03:53.910 --> 00:03:55.990
To be honest, this is more
of a design question.

00:03:55.990 --> 00:03:57.970
And it depends on your design.

00:03:57.970 --> 00:04:01.100
If you're trying to really
showcase those beautiful

00:04:01.100 --> 00:04:04.600
images that you may or may not
have in your app, then a

00:04:04.600 --> 00:04:06.380
transparent action
bar makes sense.

00:04:06.380 --> 00:04:10.550
But if you want to retain that
sort of brand identity, then

00:04:10.550 --> 00:04:16.274
go ahead and keep an opaque
color or an image there.

00:04:16.274 --> 00:04:16.601
JAN-FELIX SCHMAKEIT: OK.

00:04:16.601 --> 00:04:18.464
Yep.

00:04:18.464 --> 00:04:20.690
ANKUR KOTWAL: OK, so Hannes--

00:04:20.690 --> 00:04:23.400
I think it's Hannes--

00:04:23.400 --> 00:04:26.040
had another question as well
saying, "I saw the Google Play

00:04:26.040 --> 00:04:27.850
redesign video"--

00:04:27.850 --> 00:04:30.300
and he was referring to the
Android Design in Action

00:04:30.300 --> 00:04:31.950
episode that we had for that.

00:04:31.950 --> 00:04:34.600
And said, "I'm a big fan of the
card principle and would

00:04:34.600 --> 00:04:37.660
like to implement something
like that in my next app.

00:04:37.660 --> 00:04:40.800
I'm wondering how they achieve
an adapter that works with

00:04:40.800 --> 00:04:42.690
different card sizes?

00:04:42.690 --> 00:04:46.730
Is it a simple ListView that
inflates, for instance, a

00:04:46.730 --> 00:04:51.490
horizontal linear layout that
already contains one big card

00:04:51.490 --> 00:04:55.460
and two medium cards and four
small cards?" And he's given

00:04:55.460 --> 00:04:59.180
us an image there. "Or is it a
grid view with a special view

00:04:59.180 --> 00:05:03.610
adapter Can you give any hint on
how to implement something

00:05:03.610 --> 00:05:04.700
like this?"

00:05:04.700 --> 00:05:08.360
Well, so rather than focusing
on specifically what that

00:05:08.360 --> 00:05:11.420
implementation is, what I'd be
saying is have a look at what

00:05:11.420 --> 00:05:12.630
works what well with
your code.

00:05:12.630 --> 00:05:17.600
So having a list view with a
linear layout in it is not a

00:05:17.600 --> 00:05:19.040
bad way to do it.

00:05:19.040 --> 00:05:20.880
You don't have to use
a linear layout.

00:05:20.880 --> 00:05:22.920
You could use a relative
layout.

00:05:22.920 --> 00:05:25.620
And in some ways, a relative
layout might be a bit more

00:05:25.620 --> 00:05:29.420
flexible for allowing you to
vary the number of cards.

00:05:29.420 --> 00:05:31.920
So what I'd be doing is,
basically, my adapter, I'd be

00:05:31.920 --> 00:05:35.270
keeping track of do I need to
present this is a big card--

00:05:35.270 --> 00:05:40.060
well, if you have three sizes,
a small, medium, large--

00:05:40.060 --> 00:05:43.470
and then dynamically try
and set the proportions

00:05:43.470 --> 00:05:44.500
accordingly.

00:05:44.500 --> 00:05:47.830
So we don't currently have any
real simple code there that

00:05:47.830 --> 00:05:50.590
shows developers
how to do this.

00:05:50.590 --> 00:05:54.040
But you could envisage that if
you're dynamically loading

00:05:54.040 --> 00:05:57.240
these, creating these views,
it shouldn't be too hard.

00:05:57.240 --> 00:06:01.180
Once you know your heuristic to
work out what size the card

00:06:01.180 --> 00:06:04.410
should be, you can easily just
kind of say, hey, I want it to

00:06:04.410 --> 00:06:07.490
be double the size
of this or not.

00:06:07.490 --> 00:06:12.450
So yeah, it's all about
dynamically loading it in.

00:06:12.450 --> 00:06:16.840
I hope that answers your
questions, Hannes.

00:06:16.840 --> 00:06:18.570
And now we have a few
people that have

00:06:18.570 --> 00:06:19.630
joined us on the Hangout.

00:06:19.630 --> 00:06:23.600
So maybe we'll take this
opportunity to see if they

00:06:23.600 --> 00:06:24.870
want to ask us any questions.

00:06:24.870 --> 00:06:25.560
JAN-FELIX SCHMAKEIT: So here's
a question from Marty here.

00:06:25.560 --> 00:06:28.000
Marty, do you want to come live
on the Hangout, or is it

00:06:28.000 --> 00:06:30.330
OK if we just read out
your question?

00:06:30.330 --> 00:06:32.940
We can do both.

00:06:32.940 --> 00:06:34.110
ANKUR KOTWAL: Well, I'm
not hearing anything.

00:06:34.110 --> 00:06:35.870
So why don't we just
go ahead and ask.

00:06:35.870 --> 00:06:39.100
JAN-FELIX SCHMAKEIT: So Marty's
asking about any tips

00:06:39.100 --> 00:06:41.820
on getting the search working
on the action bar.

00:06:41.820 --> 00:06:44.100
"I want to have my user enter
an address and have Google

00:06:44.100 --> 00:06:47.050
Maps return a search word and
place a marker." Oh, we

00:06:47.050 --> 00:06:48.190
actually-- hi, Marty.

00:06:48.190 --> 00:06:48.910
We have you live
on the Hangout.

00:06:48.910 --> 00:06:51.416
ANKUR KOTWAL: There we go.

00:06:51.416 --> 00:06:52.353
MARTY: Hey, how's it going?

00:06:52.353 --> 00:06:53.100
ANKUR KOTWAL: Good.

00:06:53.100 --> 00:06:54.060
You've got Glass on.

00:06:54.060 --> 00:06:55.230
I thought you might join
us from Glass.

00:06:55.230 --> 00:06:55.650
JAN-FELIX SCHMAKEIT: Yeah.

00:06:55.650 --> 00:06:56.900
ANKUR KOTWAL: But that's
all right.

00:06:59.470 --> 00:07:02.100
MARTY: Nope, can't
do that yet.

00:07:02.100 --> 00:07:04.840
ANKUR KOTWAL: So any tips for
getting the search working on

00:07:04.840 --> 00:07:05.740
the action bar.

00:07:05.740 --> 00:07:08.950
So are you talking about
like a search view?

00:07:11.810 --> 00:07:15.940
MARTY: Yeah, I'm trying to do
a search view and can't seem

00:07:15.940 --> 00:07:19.340
to get it to work and
search in my app.

00:07:19.340 --> 00:07:20.980
ANKUR KOTWAL: So are you
talking about at a

00:07:20.980 --> 00:07:23.380
presentation level, or are you
talking about the integration

00:07:23.380 --> 00:07:26.610
of doing the search operations,
or the indexing,

00:07:26.610 --> 00:07:29.740
and the looking up
of the keywords?

00:07:29.740 --> 00:07:34.940
MARTY: I'm adding a search
view on the option menu.

00:07:34.940 --> 00:07:38.120
And just for that particular
fragment, I want to have it

00:07:38.120 --> 00:07:42.150
search an address on
the map, actually.

00:07:42.150 --> 00:07:43.570
ANKUR KOTWAL: Oh, on the map.

00:07:43.570 --> 00:07:46.800
So would you like the map to
kind of pan around as the

00:07:46.800 --> 00:07:49.840
results start to show?

00:07:49.840 --> 00:07:51.790
MARTY: Actually, what I want it
to do is if I can get it to

00:07:51.790 --> 00:07:54.600
search for the address, I'm
going to have it then put a

00:07:54.600 --> 00:07:56.840
marker and then pan
to that marker.

00:07:56.840 --> 00:07:57.930
ANKUR KOTWAL: Got you.

00:07:57.930 --> 00:08:00.510
So can I just ask one
more question?

00:08:00.510 --> 00:08:03.370
Are you looking for
autocomplete, as well, there?

00:08:03.370 --> 00:08:04.175
I mean, it's an address.

00:08:04.175 --> 00:08:06.990
So people may not be typing
in the whole thing.

00:08:06.990 --> 00:08:10.690
They might be expecting
an autocomplete.

00:08:10.690 --> 00:08:11.980
MARTY: This is my first
shot at it.

00:08:11.980 --> 00:08:13.480
So that'd be nice.

00:08:13.480 --> 00:08:16.140
But it's not a must
have right now.

00:08:16.140 --> 00:08:17.260
ANKUR KOTWAL: OK.

00:08:17.260 --> 00:08:20.940
So what I'd be looking for is
just using a standard search

00:08:20.940 --> 00:08:23.260
view that we have.

00:08:23.260 --> 00:08:27.180
You've asked this question at
a really good time because

00:08:27.180 --> 00:08:29.370
we're about to publish
some documentation

00:08:29.370 --> 00:08:31.130
around this very shortly.

00:08:31.130 --> 00:08:36.480
So on best practices on how to
integrate the search views.

00:08:36.480 --> 00:08:40.669
So I think that will actually
solve your questions.

00:08:40.669 --> 00:08:44.220
But was there something specific
that you were being

00:08:44.220 --> 00:08:46.190
held back in?

00:08:46.190 --> 00:08:48.330
MARTY: I just haven't seen a
good example of how to do it.

00:08:48.330 --> 00:08:52.420
So I was looking for
guidance, really.

00:08:52.420 --> 00:08:53.480
JAN-FELIX SCHMAKEIT: You might
also want to look at the

00:08:53.480 --> 00:08:56.320
Geocode API so you can
give it an address.

00:08:56.320 --> 00:08:57.740
And it will give you
a lat/long back.

00:08:57.740 --> 00:08:58.540
And it is an API.

00:08:58.540 --> 00:08:59.800
It's a Google Maps API.

00:08:59.800 --> 00:09:01.660
So you can look it up online.

00:09:01.660 --> 00:09:02.730
It is just a normal
API you can call.

00:09:02.730 --> 00:09:04.090
You get back a lat/long.

00:09:04.090 --> 00:09:06.840
And then you can just use a
normal map view, add marker,

00:09:06.840 --> 00:09:10.080
and change the camera, those
kind of things [INAUDIBLE].

00:09:10.080 --> 00:09:13.020
MARTY: Yeah, I'm able to
do that right now.

00:09:13.020 --> 00:09:16.510
I'm just not able to put
it in the options menu.

00:09:16.510 --> 00:09:18.690
ANKUR KOTWAL: OK, have you had
a look at the Creating a

00:09:18.690 --> 00:09:20.930
Search Interface API Guide
that we have on

00:09:20.930 --> 00:09:23.130
developer.android.com?

00:09:23.130 --> 00:09:25.420
MARTY: No, but I'll go
take a look at that.

00:09:25.420 --> 00:09:26.980
ANKUR KOTWAL: That one
goes through it in a

00:09:26.980 --> 00:09:27.850
good amount of detail.

00:09:27.850 --> 00:09:29.650
So I'd suggest start there.

00:09:29.650 --> 00:09:32.050
And if you still have troubles,
then join us next

00:09:32.050 --> 00:09:32.510
time again.

00:09:32.510 --> 00:09:35.080
JAN-FELIX SCHMAKEIT: Exactly.

00:09:35.080 --> 00:09:37.080
MARTY: In the search
interface.

00:09:37.080 --> 00:09:38.890
ANKUR KOTWAL: Yeah.

00:09:38.890 --> 00:09:40.250
MARTY: OK, I'll take
a look at it.

00:09:40.250 --> 00:09:40.630
Thank you.

00:09:40.630 --> 00:09:43.180
ANKUR KOTWAL: OK, thanks
for joining us.

00:09:43.180 --> 00:09:46.260
So is there anyone else that
would like to ask a question

00:09:46.260 --> 00:09:47.510
on the Hangout?

00:09:50.460 --> 00:09:53.270
If you are interested in asking
a question, please just

00:09:53.270 --> 00:09:54.190
let us know on the chat.

00:09:54.190 --> 00:09:56.320
And then we can un-mute
you and have you join.

00:09:56.320 --> 00:09:57.040
JAN-FELIX SCHMAKEIT: Put
you up on the screen.

00:09:57.040 --> 00:09:58.660
ANKUR KOTWAL: So in the
meantime, we'll move on to the

00:09:58.660 --> 00:10:01.920
next question that
we have there.

00:10:01.920 --> 00:10:04.270
JAN-FELIX SCHMAKEIT: So in the
first two and three parts,

00:10:04.270 --> 00:10:06.570
we've been talking about making
an app beautiful.

00:10:06.570 --> 00:10:09.670
And we've been kind of talking
about what a beautiful app

00:10:09.670 --> 00:10:13.020
really should be like and what
makes an app really beautiful.

00:10:13.020 --> 00:10:16.540
So we've been talking about
modernizing an app, but the

00:10:16.540 --> 00:10:19.440
question is, how do you
spot an unmodern app?

00:10:19.440 --> 00:10:22.645
What makes an app not beautiful
these days?

00:10:22.645 --> 00:10:25.010
ANKUR KOTWAL: Yeah,
it's interesting.

00:10:25.010 --> 00:10:28.790
I'll admit that when I fire up
an Android app, I'm almost

00:10:28.790 --> 00:10:31.990
immediately able to sense
whether this is a

00:10:31.990 --> 00:10:32.880
modern app or not.

00:10:32.880 --> 00:10:35.663
And when this question
came up, I sat down.

00:10:35.663 --> 00:10:38.060
And I thought well, what are
the cues that give it away,

00:10:38.060 --> 00:10:40.150
because it's obvious to me.

00:10:40.150 --> 00:10:42.780
But sometimes if you go into
the details, it's harder to

00:10:42.780 --> 00:10:44.410
kind of specify exactly what.

00:10:44.410 --> 00:10:47.300
And I actually found that there
were a number of things.

00:10:47.300 --> 00:10:50.560
So firstly, it's the
Legacy Menu button.

00:10:50.560 --> 00:10:54.010
This one's really, really
important because there are

00:10:54.010 --> 00:10:55.850
tons of phones out there
that now have

00:10:55.850 --> 00:10:57.280
virtual navigation buttons.

00:10:57.280 --> 00:11:00.450
But in particular, the majority,
the vast majority,

00:11:00.450 --> 00:11:03.040
of tablets, don't have a
physical menu button.

00:11:03.040 --> 00:11:05.040
They have virtual buttons.

00:11:05.040 --> 00:11:09.685
So if you're not targeting the
latest SDK, or rather if

00:11:09.685 --> 00:11:14.040
you're not targeting API 11 and
up, you're going to start

00:11:14.040 --> 00:11:16.130
to see that legacy
menu button.

00:11:16.130 --> 00:11:20.710
And often, actually, most people
don't even put a menu

00:11:20.710 --> 00:11:23.420
in there, because
we've kind of--

00:11:23.420 --> 00:11:27.100
when Android first came about,
we had these user interfaces

00:11:27.100 --> 00:11:29.660
that were designed around having
a menu that wasn't

00:11:29.660 --> 00:11:31.430
necessarily visible.

00:11:31.430 --> 00:11:34.770
The action bar and the action
overflow basically improved

00:11:34.770 --> 00:11:37.710
that so that you could see
when you had actions

00:11:37.710 --> 00:11:38.970
available to you.

00:11:38.970 --> 00:11:42.890
And in that way, it replaced
what the menu button did but

00:11:42.890 --> 00:11:45.770
in a more powerful manner,
because you could choose what

00:11:45.770 --> 00:11:49.210
to show, give things
priority, have it

00:11:49.210 --> 00:11:51.840
automatically stack or split.

00:11:51.840 --> 00:11:54.670
So there were a lot
of advantages

00:11:54.670 --> 00:11:56.000
that came with that.

00:11:56.000 --> 00:11:59.090
So if I'm seeing a legacy menu
button, usually to me, that's

00:11:59.090 --> 00:12:01.750
a sign that developers
aren't keeping up.

00:12:01.750 --> 00:12:03.350
They're not staying modern.

00:12:03.350 --> 00:12:06.640
And frankly, API 11's been out
for a long, long time.

00:12:06.640 --> 00:12:06.960
JAN-FELIX SCHMAKEIT:
I was going to ask,

00:12:06.960 --> 00:12:08.150
what's a quick fix?

00:12:08.150 --> 00:12:09.970
What's the easiest thing
you can do to get

00:12:09.970 --> 00:12:10.620
rid of the menu button.

00:12:10.620 --> 00:12:12.480
ANKUR KOTWAL: Actually, we
covered it in Episode One.

00:12:12.480 --> 00:12:13.930
It's that target SDK version.

00:12:13.930 --> 00:12:15.230
That's what you should
be setting.

00:12:15.230 --> 00:12:17.820
And as we said there, that
won't necessarily break

00:12:17.820 --> 00:12:21.980
backward compatibility because
you have the Min SDK version

00:12:21.980 --> 00:12:24.830
attribute that you can specify
in your manifest to make sure

00:12:24.830 --> 00:12:27.440
that you're still showing
up on all the devices.

00:12:27.440 --> 00:12:29.500
So legacy menu button
is the first one.

00:12:29.500 --> 00:12:32.270
The next one is actually
using a non-Holo theme.

00:12:32.270 --> 00:12:35.260
And by that, we don't mean that
every single app needs to

00:12:35.260 --> 00:12:38.010
look the same or have the
same Holo colors.

00:12:38.010 --> 00:12:41.400
But you know when an app is
following the Holo theme.

00:12:41.400 --> 00:12:46.370
You can see the way text fields
are specified, the way

00:12:46.370 --> 00:12:47.840
you get touch feedback.

00:12:50.770 --> 00:12:53.280
If you're targeting an older
version of Android, it's

00:12:53.280 --> 00:12:56.270
immediately apparent in the way
the dialogues are styled,

00:12:56.270 --> 00:12:59.370
if you've got that hideous
toggle bar across the top.

00:12:59.370 --> 00:13:00.810
We've moved with the times.

00:13:00.810 --> 00:13:05.220
So using a modern theme
is a good thing.

00:13:05.220 --> 00:13:06.506
JAN-FELIX SCHMAKEIT: And
especially if you have an app

00:13:06.506 --> 00:13:08.470
that you've tested on something
more modern, it's

00:13:08.470 --> 00:13:11.296
really easy to specify a
different theme for Ice Cream

00:13:11.296 --> 00:13:12.630
Sandwich and above,
for example.

00:13:12.630 --> 00:13:14.090
And immediately, you're getting
the Holo theme and

00:13:14.090 --> 00:13:18.670
dialogues and the other inputs,
UI elements as well.

00:13:18.670 --> 00:13:20.230
So it's really easy
to actually get--

00:13:20.230 --> 00:13:21.510
and it's so obvious.

00:13:21.510 --> 00:13:24.010
If you get a dialogue that
doesn't look like a Holo

00:13:24.010 --> 00:13:26.380
dialogue, it just stands out.

00:13:26.380 --> 00:13:28.970
ANKUR KOTWAL: So legacy menu
button, non-Holo theme.

00:13:28.970 --> 00:13:30.980
The third one for me
is the action bar.

00:13:30.980 --> 00:13:35.330
So the lack of an action bar
tells me that you're either

00:13:35.330 --> 00:13:38.660
paying a lot of attention to
detail, and you're building a

00:13:38.660 --> 00:13:42.610
really custom experience that
you feel is better than the

00:13:42.610 --> 00:13:43.250
action bar.

00:13:43.250 --> 00:13:43.900
And that's OK.

00:13:43.900 --> 00:13:45.730
That's an endeavor that
we encourage.

00:13:45.730 --> 00:13:47.460
Innovation is always
a good thing.

00:13:47.460 --> 00:13:50.890
But often what I find is apps
that aren't using an action

00:13:50.890 --> 00:13:55.510
bar are actually kind
of an old style app.

00:13:55.510 --> 00:13:58.970
So it breaks that sense of
consistent navigation for your

00:13:58.970 --> 00:14:01.860
users because when they use
their Android devices, whether

00:14:01.860 --> 00:14:05.840
it's a phone or a tablet, the
apps that ship with the system

00:14:05.840 --> 00:14:09.210
and the sort of top apps that
tend to get featured or are

00:14:09.210 --> 00:14:13.000
popular will tend to use the
Android design guidelines.

00:14:13.000 --> 00:14:15.890
So if you're not using those
guidelines, don't do it

00:14:15.890 --> 00:14:17.930
because of sheer laziness.

00:14:17.930 --> 00:14:20.170
If you're going to go against
the guidelines or do something

00:14:20.170 --> 00:14:22.950
custom, do it because you
truly are building an

00:14:22.950 --> 00:14:26.610
experience that is superior
to the default one.

00:14:26.610 --> 00:14:28.990
So yeah, three things.

00:14:28.990 --> 00:14:30.290
JAN-FELIX SCHMAKEIT: Yes,
so the action bar is an

00:14:30.290 --> 00:14:30.890
interesting one.

00:14:30.890 --> 00:14:32.280
It always tends to come up.

00:14:32.280 --> 00:14:34.400
So let's talk about that
in a bit more detail.

00:14:34.400 --> 00:14:37.940
So let's say you already have an
established branding, like

00:14:37.940 --> 00:14:41.240
you have some logos using some
colors or something, how would

00:14:41.240 --> 00:14:42.720
you include that with
your action bar?

00:14:42.720 --> 00:14:45.150
Because your action bar would be
at the top, and people tend

00:14:45.150 --> 00:14:46.560
to put logos there or
something similar

00:14:46.560 --> 00:14:47.940
on some of the apps.

00:14:47.940 --> 00:14:51.760
ANKUR KOTWAL: Yeah, the action
bar is more for having a

00:14:51.760 --> 00:14:54.650
consistent interaction design.

00:14:54.650 --> 00:14:57.700
We still encourage you to have
your own branding, have your

00:14:57.700 --> 00:14:59.400
own logos, theme it.

00:14:59.400 --> 00:15:04.110
And that's what really Episode
One of the DevByte series,

00:15:04.110 --> 00:15:07.690
Making Apps Beautiful, was all
about, theming it so that it's

00:15:07.690 --> 00:15:10.510
consistent with your
guidelines.

00:15:10.510 --> 00:15:12.950
It's really important, though,
that you put in things like

00:15:12.950 --> 00:15:16.310
the app icon because it, again,
allows you to establish

00:15:16.310 --> 00:15:19.360
your identity, the identity
of your app.

00:15:19.360 --> 00:15:22.050
And in particular, you want
to start looking at the

00:15:22.050 --> 00:15:27.180
differentiation between up and
back, because it definitely

00:15:27.180 --> 00:15:31.630
provides a really nice way to
navigate through your app.

00:15:31.630 --> 00:15:33.400
The last thing, I guess, I
want to mention is the

00:15:33.400 --> 00:15:36.130
navigation bar, just before we
finish this question, the

00:15:36.130 --> 00:15:37.260
navigation drawer.

00:15:37.260 --> 00:15:41.240
That's a pattern that's been
around for a while, which is

00:15:41.240 --> 00:15:46.350
being formalized sort
of mid-2013 by us.

00:15:46.350 --> 00:15:49.310
And that's a really nice
pattern for grouping

00:15:49.310 --> 00:15:51.470
functionality or top-level
menus.

00:15:51.470 --> 00:15:55.330
So when we talk about how do you
spot a non-modern app, to

00:15:55.330 --> 00:15:57.750
be honest, the old dashboard
pattern is something that's

00:15:57.750 --> 00:15:59.380
kind of fallen out of favor.

00:15:59.380 --> 00:16:06.940
And the navigation drawer is a
much better use of navigation,

00:16:06.940 --> 00:16:08.480
at least at the top level, than

00:16:08.480 --> 00:16:10.010
dashboard for many things.

00:16:10.010 --> 00:16:12.455
For starters, you're not
restricted to a grid of six,

00:16:12.455 --> 00:16:15.920
or nine, or some arbitrary
number.

00:16:15.920 --> 00:16:17.470
JAN-FELIX SCHMAKEIT: OK, so as
a developer, how would I go

00:16:17.470 --> 00:16:20.140
about adding a navigation drawer
to my application?

00:16:20.140 --> 00:16:21.890
Is there anything we have that
might help developers?

00:16:21.890 --> 00:16:23.285
ANKUR KOTWAL: Ah.

00:16:23.285 --> 00:16:23.990
JAN-FELIX SCHMAKEIT:
Funny I should ask.

00:16:23.990 --> 00:16:24.220
ANKUR KOTWAL: Good lead up.

00:16:24.220 --> 00:16:27.520
So on
developer.android.com/design,

00:16:27.520 --> 00:16:31.350
if you look in the navigation
drawer section, not only do we

00:16:31.350 --> 00:16:34.535
describe what the navigation
drawer should look like and

00:16:34.535 --> 00:16:36.690
feel like, we also
talk about why.

00:16:36.690 --> 00:16:37.860
And we provide sample code.

00:16:37.860 --> 00:16:39.600
So you can just drop that in.

00:16:39.600 --> 00:16:43.180
And it's backward compatible,
as well, so you can support

00:16:43.180 --> 00:16:46.510
from Android 2.2 and
up, I believe.

00:16:46.510 --> 00:16:47.660
It might be 2.1.

00:16:47.660 --> 00:16:49.530
I can't remember off
the top of my head.

00:16:49.530 --> 00:16:56.830
So just on the action bar, one
of the things that I know that

00:16:56.830 --> 00:16:58.600
I've seen some apps do
is actually provide

00:16:58.600 --> 00:17:00.800
a fake action bar.

00:17:00.800 --> 00:17:08.260
And that is something that does
give a feeling that the

00:17:08.260 --> 00:17:11.050
app is not modern, even though
you're trying to be modern by

00:17:11.050 --> 00:17:12.930
having an action bar.

00:17:12.930 --> 00:17:17.480
If you can obviously spot that
it's not a real action bar, it

00:17:17.480 --> 00:17:19.329
actually takes away from
the experience.

00:17:19.329 --> 00:17:21.625
And there are some subtle cues
that you should look at.

00:17:21.625 --> 00:17:25.359
So things like the spacing.

00:17:25.359 --> 00:17:28.359
Often, I'll see the action bars
that someone is sort of

00:17:28.359 --> 00:17:31.420
faking with a linear layout, the
height of it just doesn't

00:17:31.420 --> 00:17:32.780
seem quite right.

00:17:32.780 --> 00:17:36.200
We've all used those
sorts of apps.

00:17:36.200 --> 00:17:40.130
If you look at the spacing,
even horizontally, of the

00:17:40.130 --> 00:17:42.830
fonts, it's not quite there.

00:17:42.830 --> 00:17:45.840
Action items, they don't quite
align quite right.

00:17:45.840 --> 00:17:48.360
And in particular, the one thing
that I've seen missing

00:17:48.360 --> 00:17:52.180
in a lot of fake action bars is
the touch feedback because

00:17:52.180 --> 00:17:54.660
on an action bar, that touch
feedback is so crucial.

00:17:54.660 --> 00:17:58.950
You see exactly what region
you've interacted with.

00:17:58.950 --> 00:18:03.180
So in terms of using action
bars, our advice is either use

00:18:03.180 --> 00:18:08.090
Action Bar Sherlock, which is
a very popular community

00:18:08.090 --> 00:18:10.110
effort and a quality product.

00:18:10.110 --> 00:18:11.550
And it's free.

00:18:11.550 --> 00:18:14.050
So just because it's a product
doesn't mean it's not free.

00:18:14.050 --> 00:18:19.530
Or consider also using the
Action Bar Compat that's

00:18:19.530 --> 00:18:21.960
coming soon from us that we
announced last year at IO.

00:18:21.960 --> 00:18:24.710
And we renounced this year
at I/O. So coming soon.

00:18:24.710 --> 00:18:29.850
But the point is you'll soon
have at least two choices.

00:18:29.850 --> 00:18:33.600
Right now, Sherlock is
a great way to go.

00:18:33.600 --> 00:18:37.050
So we've actually talked a
lot about the action bar.

00:18:37.050 --> 00:18:40.930
And I hope we can start to see
the importance of it, at least

00:18:40.930 --> 00:18:43.110
from a modernizing
point of view.

00:18:43.110 --> 00:18:46.620
Let's see if we have any
questions yet on the Hangout.

00:18:46.620 --> 00:18:48.580
JAN-FELIX SCHMAKEIT: It
doesn't look like it.

00:18:48.580 --> 00:18:50.185
ANKUR KOTWAL: If you've just
joined us on the Hangout, and

00:18:50.185 --> 00:18:53.380
if you do want to ask some
questions, please just let us

00:18:53.380 --> 00:18:55.395
know in the chat that I'd
like to ask a question.

00:18:55.395 --> 00:19:01.750
And we'll bring you into
the video feed.

00:19:01.750 --> 00:19:04.825
JAN-FELIX SCHMAKEIT:
So action bars--

00:19:04.825 --> 00:19:06.460
and you were talking about
touch feedback as well.

00:19:06.460 --> 00:19:09.810
So one interesting thing that
always comes up is spacing, I

00:19:09.810 --> 00:19:12.240
find, because some of the
buttons that are too close

00:19:12.240 --> 00:19:15.090
together or text that
is just too narrow.

00:19:15.090 --> 00:19:16.610
It doesn't look right.

00:19:16.610 --> 00:19:21.770
I know we talked a bit about
spacing in our DevBytes.

00:19:21.770 --> 00:19:22.840
And let's talk about
it a bit more.

00:19:22.840 --> 00:19:25.050
So what would be the recommended
spacing if you

00:19:25.050 --> 00:19:27.370
want to put a button on your
screen, for example?

00:19:27.370 --> 00:19:28.950
ANKUR KOTWAL: Well, the good
thing is we've actually

00:19:28.950 --> 00:19:32.300
documented this on the Android
Design Guidelines site.

00:19:32.300 --> 00:19:35.340
And again, there's a section
called Metrics and Grids that

00:19:35.340 --> 00:19:37.200
actually tells you
all about this.

00:19:37.200 --> 00:19:40.260
But there's a couple
of key points that

00:19:40.260 --> 00:19:41.330
we should get across.

00:19:41.330 --> 00:19:43.250
One is that if you've got
something like a list, you

00:19:43.250 --> 00:19:46.320
have a minimum of 48 dps--

00:19:46.320 --> 00:19:48.580
so that's density-independent
pixels--

00:19:48.580 --> 00:19:52.300
in height because we feel that
that's a comfortable sort of

00:19:52.300 --> 00:19:53.530
touch region.

00:19:53.530 --> 00:19:57.490
But even within that 48dp rhythm
that you have in the

00:19:57.490 --> 00:20:00.720
list view items, you want to
have some padding within that

00:20:00.720 --> 00:20:04.820
48dp so that you've got roughly
about four dps of

00:20:04.820 --> 00:20:08.610
padding above a button, for
example, and below it.

00:20:08.610 --> 00:20:11.280
So that you don't get two
buttons that are so close to

00:20:11.280 --> 00:20:14.210
one another that if a user
happens to hit somewhere in

00:20:14.210 --> 00:20:18.140
that unknown region, they might
end up triggering the

00:20:18.140 --> 00:20:20.850
wrong event or the
wrong button.

00:20:20.850 --> 00:20:24.140
So that Metrics and Grids
page, there are a lot of

00:20:24.140 --> 00:20:24.790
measurements on there.

00:20:24.790 --> 00:20:28.560
But the ones that I particularly
pay attention to

00:20:28.560 --> 00:20:33.450
is a 48dp rhythm, some of the
padding numbers there around

00:20:33.450 --> 00:20:35.320
items within list views.

00:20:35.320 --> 00:20:39.290
And the one that I wish more
developers paid attention to

00:20:39.290 --> 00:20:42.550
is the 16 dps of padding
on the sides.

00:20:42.550 --> 00:20:46.710
And the reason for that is as we
hold our devices, you kind

00:20:46.710 --> 00:20:48.330
of hold it with your hand.

00:20:48.330 --> 00:20:51.520
And you'll find that your
fingers may end up interacting

00:20:51.520 --> 00:20:52.600
with the screen.

00:20:52.600 --> 00:20:56.970
Now, if you've got a UI that
touches, juts all the way up

00:20:56.970 --> 00:20:59.390
against the edge, you can end
up in a situation where the

00:20:59.390 --> 00:21:02.830
user is accidentally triggering
those items when

00:21:02.830 --> 00:21:03.640
they don't mean to.

00:21:03.640 --> 00:21:08.710
So having that spacing on either
side is very important.

00:21:08.710 --> 00:21:10.010
How about yourself?

00:21:10.010 --> 00:21:12.750
Do you have any words
of advice there?

00:21:12.750 --> 00:21:15.210
JAN-FELIX SCHMAKEIT: So I find
with a tablet layout-- so even

00:21:15.210 --> 00:21:17.640
if you don't necessarily have
time to make a full tablet

00:21:17.640 --> 00:21:20.240
layout, just adding a bit more
spacing to the side, making

00:21:20.240 --> 00:21:21.750
fonts a tiny bit bigger,
really helps.

00:21:21.750 --> 00:21:23.720
It goes a long way.

00:21:23.720 --> 00:21:26.000
Especially because if you have
a long list of text you want

00:21:26.000 --> 00:21:28.400
to scroll through, having a bit
more spacing on the side

00:21:28.400 --> 00:21:29.970
allows you to hold the
tablet in one hand.

00:21:29.970 --> 00:21:31.430
You can scroll through the
list with the other hand.

00:21:31.430 --> 00:21:33.520
It's a good tip of advice
I can give people.

00:21:33.520 --> 00:21:34.180
ANKUR KOTWAL: Yeah.

00:21:34.180 --> 00:21:36.945
And actually to go with that,
when you've got some text on a

00:21:36.945 --> 00:21:41.930
tablet, whether you've got a
multi-paned layout or not,

00:21:41.930 --> 00:21:45.250
it's important to know that
you kind of want to have a

00:21:45.250 --> 00:21:48.470
horizontal scan, which is
actually comfortable.

00:21:48.470 --> 00:21:51.570
So what we mean by that is if
you've got text that you're

00:21:51.570 --> 00:21:56.670
presenting, don't have it
going from edge to edge.

00:21:56.670 --> 00:22:00.960
Use a certain horizontal scan
that allows users to go left

00:22:00.960 --> 00:22:03.870
and right very quickly through
the text, even if that means

00:22:03.870 --> 00:22:04.760
adding padding on the side.

00:22:04.760 --> 00:22:11.100
And we did this in BaconReader
actually in Part 3 of this

00:22:11.100 --> 00:22:13.900
DevBytes series of Making
Apps Beautiful.

00:22:13.900 --> 00:22:17.200
You looked at that detailed
view that we had.

00:22:17.200 --> 00:22:19.430
We added this padding on the
side so that that horizontal

00:22:19.430 --> 00:22:20.590
scan is comfortable.

00:22:20.590 --> 00:22:22.510
JAN-FELIX SCHMAKEIT: It's always
surprising how little

00:22:22.510 --> 00:22:24.840
you have to do to get this
working, but it has a huge

00:22:24.840 --> 00:22:27.570
impact on usability in
the actual design.

00:22:27.570 --> 00:22:29.130
ANKUR KOTWAL: Exactly.

00:22:29.130 --> 00:22:32.370
So speaking of text, fonts.

00:22:32.370 --> 00:22:34.940
Now, one of the things we've
been talking so far about

00:22:34.940 --> 00:22:38.210
measuring our layouts in dps,
but fonts have a kind of

00:22:38.210 --> 00:22:41.360
special metric that you
should use, right?

00:22:41.360 --> 00:22:43.560
JAN-FELIX SCHMAKEIT: Yeah, so
for fonts, you'd use SP.

00:22:43.560 --> 00:22:47.300
And the idea is that you
basically should look at

00:22:47.300 --> 00:22:48.250
accessibility.

00:22:48.250 --> 00:22:50.670
And in your Android device
settings, you can actually

00:22:50.670 --> 00:22:51.680
change the font size.

00:22:51.680 --> 00:22:53.510
Some of you might have
seen it already.

00:22:53.510 --> 00:22:55.510
But now it's set to
normal 100% font.

00:22:55.510 --> 00:22:56.720
But you can make it larger
or smaller if you

00:22:56.720 --> 00:22:57.730
wanted to do that.

00:22:57.730 --> 00:23:01.030
And if you stick with the SP
measurement, it's actually

00:23:01.030 --> 00:23:02.490
relative based on
that as well.

00:23:02.490 --> 00:23:06.860
So if somebody has enabled 150%
font size, for example,

00:23:06.860 --> 00:23:08.510
your app would automatically
scale up for that.

00:23:08.510 --> 00:23:10.190
And the text would automatically
get bigger.

00:23:10.190 --> 00:23:13.370
So specifying fonts in SP is
definitely the way forward.

00:23:13.370 --> 00:23:14.280
ANKUR KOTWAL: Yeah.

00:23:14.280 --> 00:23:16.320
It's particularly useful for
accessibility, right?

00:23:16.320 --> 00:23:18.670
Like in accessibility setting,
you can set a

00:23:18.670 --> 00:23:20.040
minimum font size.

00:23:20.040 --> 00:23:26.350
And SP basically acknowledges
that and applies it.

00:23:26.350 --> 00:23:29.090
The other thing that's really
important in fonts-- and it's

00:23:29.090 --> 00:23:31.850
one that we haven't actually
covered in this particular

00:23:31.850 --> 00:23:34.910
series-- is localization.

00:23:34.910 --> 00:23:38.910
Now, a lot of people think that
localization just means

00:23:38.910 --> 00:23:40.330
translating strings.

00:23:40.330 --> 00:23:42.470
Often, that's not the case.

00:23:42.470 --> 00:23:45.940
Often, you actually need to
also consider things that

00:23:45.940 --> 00:23:49.650
might be culturally insensitive,
as well, in the

00:23:49.650 --> 00:23:51.740
content of your app.

00:23:51.740 --> 00:23:54.110
Often, actually, in most
cases, that sort of

00:23:54.110 --> 00:23:58.410
sensitivity is more towards
games than it may be towards

00:23:58.410 --> 00:24:00.350
just a standard non-game app.

00:24:00.350 --> 00:24:02.520
But it's something that's
worth considering.

00:24:02.520 --> 00:24:04.960
But the big thing that happens
from localization is when you

00:24:04.960 --> 00:24:07.000
translate some of these strings,
depending on the

00:24:07.000 --> 00:24:11.700
language you use, you can end
up with much longer strings

00:24:11.700 --> 00:24:13.140
than is possible.

00:24:13.140 --> 00:24:15.180
I know when we did Santa
Tracker, our German

00:24:15.180 --> 00:24:20.040
translation was significantly
longer, broader, than the

00:24:20.040 --> 00:24:21.390
English ones, for example.

00:24:21.390 --> 00:24:23.640
JAN-FELIX SCHMAKEIT: So one good
tip I can give you here

00:24:23.640 --> 00:24:26.440
is to load up the application,
Android Studio.

00:24:26.440 --> 00:24:28.500
And there, you actually have a
view that can see all of the

00:24:28.500 --> 00:24:30.500
translations and all of the
languages that you have

00:24:30.500 --> 00:24:31.680
available in your application.

00:24:31.680 --> 00:24:34.300
You get a fantastic overview of
the same layout, the same

00:24:34.300 --> 00:24:37.460
screen, in different
languages.

00:24:37.460 --> 00:24:39.530
So you can easily spot if the
text is cut off or it doesn't

00:24:39.530 --> 00:24:40.850
quite look right without
having to click

00:24:40.850 --> 00:24:41.950
all over the place.

00:24:41.950 --> 00:24:44.720
It's a really, really good
way to test it out.

00:24:44.720 --> 00:24:46.240
ANKUR KOTWAL: Yeah,
definitely.

00:24:46.240 --> 00:24:49.740
So in localization, make sure
you just test it out on your

00:24:49.740 --> 00:24:53.620
user's devices or in that
user's configuration.

00:24:53.620 --> 00:24:55.880
It's really, really important.

00:24:55.880 --> 00:25:01.170
Often, it's not easy to
necessarily have a magic

00:25:01.170 --> 00:25:01.710
bullet for it.

00:25:01.710 --> 00:25:05.040
Sometimes you are going to get
text which is just really long

00:25:05.040 --> 00:25:05.360
for your button.

00:25:05.360 --> 00:25:10.140
And you need to consider
rephrasing that button so that

00:25:10.140 --> 00:25:12.980
text doesn't get truncated, or
it doesn't wrap, and you end

00:25:12.980 --> 00:25:14.380
up with this massive button.

00:25:14.380 --> 00:25:17.230
So it is something
that's important.

00:25:17.230 --> 00:25:20.130
But localization is probably one
of the best ways to grow

00:25:20.130 --> 00:25:23.850
your user base because you're
suddenly making your app

00:25:23.850 --> 00:25:31.170
available to a whole group of
people that may not have

00:25:31.170 --> 00:25:34.330
otherwise been able to consume
that app or may not have felt

00:25:34.330 --> 00:25:35.895
it was comfortable enough.

00:25:35.895 --> 00:25:38.540
But looks like we
have a couple of

00:25:38.540 --> 00:25:40.730
questions on the Hangout.

00:25:40.730 --> 00:25:44.700
From [? Yuri ?]

00:25:44.700 --> 00:25:45.820
[? Legota ?].

00:25:45.820 --> 00:25:50.480
So what is the best way to have
action overflow button on

00:25:50.480 --> 00:25:53.870
devices with the menu button
such as the S3?

00:25:53.870 --> 00:25:56.000
That's a really good question.

00:25:56.000 --> 00:25:57.130
So yep.

00:25:57.130 --> 00:26:00.550
There are still devices that
ship with menu buttons, as

00:26:00.550 --> 00:26:04.130
well as those that ship with
virtual navigation, virtual

00:26:04.130 --> 00:26:06.480
buttons, rather.

00:26:06.480 --> 00:26:10.950
I think to me, this is a
bit of a choice that

00:26:10.950 --> 00:26:14.620
you have as a developer.

00:26:14.620 --> 00:26:17.640
The action overflow, typically
what would happen is that it

00:26:17.640 --> 00:26:20.820
would disappear on the
standard action bar.

00:26:20.820 --> 00:26:24.160
And it would show
up as a menu.

00:26:24.160 --> 00:26:27.330
I think that's a fine way of
using it because that's,

00:26:27.330 --> 00:26:29.780
again, if you think about the
consistency of the user

00:26:29.780 --> 00:26:35.800
experience for people on that
device, they will be used to

00:26:35.800 --> 00:26:37.060
using the menu button.

00:26:37.060 --> 00:26:40.580
On the other hand, if you feel
strongly about having that

00:26:40.580 --> 00:26:42.710
overflow there, that's
something you

00:26:42.710 --> 00:26:44.360
can do there as well.

00:26:44.360 --> 00:26:46.930
I don't think there's a right
or wrong here but more of a

00:26:46.930 --> 00:26:48.940
preference that you can have.

00:26:48.940 --> 00:26:52.340
And with some of these things,
depending on the app, it can

00:26:52.340 --> 00:26:53.350
also differ.

00:26:53.350 --> 00:26:58.130
So there's no harm in doing
some experiments.

00:26:58.130 --> 00:27:01.570
Things like the Stage Role Out
Feature that we've now enabled

00:27:01.570 --> 00:27:04.550
or alpha beta testing channels
on Google Play allow you to

00:27:04.550 --> 00:27:08.500
actually experiment with a
small subset of users and

00:27:08.500 --> 00:27:11.220
collect some analytics and
see what's working best.

00:27:11.220 --> 00:27:13.730
I think you'll find that, again,
there's not just one

00:27:13.730 --> 00:27:16.040
right answer for that
sort of question.

00:27:16.040 --> 00:27:16.460
JAN-FELIX SCHMAKEIT: Yep.

00:27:16.460 --> 00:27:17.360
That's right.

00:27:17.360 --> 00:27:19.250
ANKUR KOTWAL: Well, I hope--

00:27:19.250 --> 00:27:19.480
OK.

00:27:19.480 --> 00:27:21.920
He said, is it OK in your
opinion to have the navigation

00:27:21.920 --> 00:27:28.390
drawer and sliding pane layout
even so that they both don't

00:27:28.390 --> 00:27:29.820
use the same gestures.

00:27:29.820 --> 00:27:33.510
It seems quite similar.

00:27:33.510 --> 00:27:33.900
JAN-FELIX SCHMAKEIT: Yeah.

00:27:33.900 --> 00:27:36.880
So that's always a problem if
you have touch interactions in

00:27:36.880 --> 00:27:40.210
your application, whether it's
a sliding pane layout, or

00:27:40.210 --> 00:27:41.770
whether it's a map,
or something.

00:27:41.770 --> 00:27:44.840
So that's a bit of
a trade off.

00:27:44.840 --> 00:27:47.060
You have to make the right
decision and say, can you

00:27:47.060 --> 00:27:49.250
accidentally trigger the
navigation role, for example,

00:27:49.250 --> 00:27:51.660
when you actually want
to slide your layout?

00:27:51.660 --> 00:27:54.900
So it kind of depends on your
application, how users

00:27:54.900 --> 00:27:56.090
interact with it.

00:27:56.090 --> 00:28:00.770
So in some ways, overloading a
gesture is not a good idea.

00:28:00.770 --> 00:28:02.540
Really wouldn't recommend
that.

00:28:02.540 --> 00:28:04.820
Especially something like an
edge spot, for example.

00:28:04.820 --> 00:28:06.240
We wouldn't recommend that.

00:28:06.240 --> 00:28:07.870
But I've seen some applications
where the

00:28:07.870 --> 00:28:09.690
navigation drawer has actually
been quite successfully

00:28:09.690 --> 00:28:12.030
implemented, where it actually
goes on top of the rest of the

00:28:12.030 --> 00:28:12.550
application.

00:28:12.550 --> 00:28:14.080
So in this case, it was a map.

00:28:14.080 --> 00:28:15.050
And you can pan a map.

00:28:15.050 --> 00:28:17.075
But you can still pull
in the navigation

00:28:17.075 --> 00:28:18.350
drawer from the side.

00:28:18.350 --> 00:28:20.120
And that actually worked quite
well because it was just

00:28:20.120 --> 00:28:21.530
triggered from the edge.

00:28:21.530 --> 00:28:24.940
ANKUR KOTWAL: Yeah, so the
edge swipe, or the bezel

00:28:24.940 --> 00:28:28.900
swipe, that's become quite
popular, I mean, that's a sign

00:28:28.900 --> 00:28:32.100
of times changing because
users are getting more

00:28:32.100 --> 00:28:36.460
comfortable with bezel swipes
across a whole range of apps

00:28:36.460 --> 00:28:39.540
and even platforms themselves.

00:28:39.540 --> 00:28:43.850
So having those bezel swipes
there is not such a bad thing.

00:28:43.850 --> 00:28:46.260
Particularly on Android,
that's why we have that

00:28:46.260 --> 00:28:50.110
navigation drawer icon in the
top left in the action bar to

00:28:50.110 --> 00:28:53.190
show that we have this
navigation drawer available

00:28:53.190 --> 00:28:56.280
and that you could expect
that a bezel swipe

00:28:56.280 --> 00:28:57.620
would bring it across.

00:28:57.620 --> 00:28:59.180
So yeah, you're right.

00:28:59.180 --> 00:29:01.570
When you said things like a map
where you've got content

00:29:01.570 --> 00:29:05.200
that you're effectively panning
around, you could

00:29:05.200 --> 00:29:08.965
think, will a bezel swipe
trigger that navigation

00:29:08.965 --> 00:29:11.220
drawer, or should
it pan the map?

00:29:11.220 --> 00:29:13.550
If you're showing visually that
you have a navigation

00:29:13.550 --> 00:29:16.420
drawer, you're setting an
expectation with your user

00:29:16.420 --> 00:29:19.390
that you're going to
have a bezel swipe.

00:29:19.390 --> 00:29:25.180
So consistency is probably
the most important thing.

00:29:25.180 --> 00:29:27.060
So if you've got that, if
you've got the visual

00:29:27.060 --> 00:29:29.190
indicator, have the
bezel swipe there.

00:29:32.210 --> 00:29:33.220
All right.

00:29:33.220 --> 00:29:35.710
Well, we're getting close
to the end of this.

00:29:35.710 --> 00:29:39.405
But the last two things that I
think we should really cover

00:29:39.405 --> 00:29:42.050
are we already mentioned
a little bit

00:29:42.050 --> 00:29:43.520
about the touch feedback.

00:29:46.430 --> 00:29:50.150
With the touch feedback, often
I see apps that don't provide

00:29:50.150 --> 00:29:52.590
touch feedback are the ones that
are using really custom

00:29:52.590 --> 00:29:54.390
built controls.

00:29:54.390 --> 00:29:58.910
The reason I really wanted
to talk about this is we

00:29:58.910 --> 00:30:03.400
encourage users to have a custom
style, a custom brand.

00:30:03.400 --> 00:30:06.890
But it's really important that
you start with the standard UI

00:30:06.890 --> 00:30:10.110
controls and then customize
it rather than

00:30:10.110 --> 00:30:11.300
build it from scratch.

00:30:11.300 --> 00:30:15.490
Because again, with the standard
UI controls, you do

00:30:15.490 --> 00:30:17.080
get things like touch
feedback.

00:30:17.080 --> 00:30:20.390
And it's not just visually.

00:30:20.390 --> 00:30:22.990
If your user's enabled it, it
also makes that little audio

00:30:22.990 --> 00:30:24.960
click, as well, as you
interact with it.

00:30:24.960 --> 00:30:27.640
And you just get
this feeling--

00:30:27.640 --> 00:30:29.180
sometimes it's intangible--

00:30:29.180 --> 00:30:31.950
that, hey, this is something
that feels familiar to me.

00:30:31.950 --> 00:30:36.410
So whilst it's great to sort
of style your app, what you

00:30:36.410 --> 00:30:39.330
should do is be using our styles
and themes to do it or

00:30:39.330 --> 00:30:43.080
extending our standard UI
controls rather than building

00:30:43.080 --> 00:30:44.120
them from scratch.

00:30:44.120 --> 00:30:48.740
You'll find in general your
interaction is generally much

00:30:48.740 --> 00:30:53.090
more defined that way and
consistent again.

00:30:53.090 --> 00:30:53.440
All right.

00:30:53.440 --> 00:30:55.790
Well, it looks like we're
out of questions.

00:30:55.790 --> 00:30:57.650
And we're also out of time.

00:30:57.650 --> 00:30:59.520
So thank you very much
for joining us.

00:30:59.520 --> 00:31:04.130
We'll have two more episodes of
the DevByte series Making

00:31:04.130 --> 00:31:07.100
Apps Beautiful coming out over
the next couple of weeks.

00:31:07.100 --> 00:31:10.310
And then, we'll be back for
another backstage to answer

00:31:10.310 --> 00:31:13.680
your questions about the
rest of that series.

00:31:13.680 --> 00:31:15.180
Thanks for joining us.

00:31:15.180 --> 00:31:15.430
JAN-FELIX SCHMAKEIT:
Thank you.

00:31:15.430 --> 00:31:16.680
ANKUR KOTWAL: See you later.

