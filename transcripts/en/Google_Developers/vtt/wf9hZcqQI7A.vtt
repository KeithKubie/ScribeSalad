WEBVTT
Kind: captions
Language: en

00:00:08.640 --> 00:00:11.120
JAMES TAMPLIN: Hi everyone,
and welcome to Developing

00:00:11.120 --> 00:00:13.840
Extraordinary Apps
with Firebase.

00:00:13.840 --> 00:00:14.710
I'm James.

00:00:14.710 --> 00:00:16.705
I'm the co-founder,
and was the CEO,

00:00:16.705 --> 00:00:22.280
of Firebase until we joined
Google about six months ago.

00:00:22.280 --> 00:00:24.780
I want to start on a little
bit of a personal note.

00:00:24.780 --> 00:00:27.340
Six years ago today, I
moved to the Bay Area.

00:00:27.340 --> 00:00:31.780
And the very first thing I
did was come to I/O 2009.

00:00:31.780 --> 00:00:34.560
A lot has changed in six
years, and it's really great

00:00:34.560 --> 00:00:37.380
to be back here for my
second I/O, and this time,

00:00:37.380 --> 00:00:39.915
speaking to all of you.

00:00:39.915 --> 00:00:42.040
So we're going to have a
brief overview of Firebase

00:00:42.040 --> 00:00:44.960
and how we think about
application development.

00:00:44.960 --> 00:00:49.280
But before we go deep,
I want to go broad.

00:00:49.280 --> 00:00:51.280
So 10 years ago, if you
were starting a startup,

00:00:51.280 --> 00:00:54.660
you had to buy physical servers.

00:00:54.660 --> 00:00:56.750
You'd call up Dell
or HP and you'd say,

00:00:56.750 --> 00:00:59.020
hello, I'd like a box
with the Xeon processor

00:00:59.020 --> 00:01:00.060
and a terabyte of RAM.

00:01:00.060 --> 00:01:03.615
And they would ship
you a physical server.

00:01:03.615 --> 00:01:06.240
You had to find a colo facility
and maybe, every now and again,

00:01:06.240 --> 00:01:08.050
call the nice people
at the colo facility

00:01:08.050 --> 00:01:11.340
and ask them to reset
your physical server.

00:01:11.340 --> 00:01:14.850
And all of this seems
unimaginable today.

00:01:14.850 --> 00:01:17.830
The cost of these made
them inaccessible to most.

00:01:17.830 --> 00:01:20.870
And the time to set up,
operate, manage, and maintain

00:01:20.870 --> 00:01:23.050
seemed stunning, as well.

00:01:23.050 --> 00:01:25.730
So it begs the question,
if this looks crazy,

00:01:25.730 --> 00:01:28.340
what are we going to look like--
today-- to software engineers

00:01:28.340 --> 00:01:30.430
10 years from now?

00:01:30.430 --> 00:01:33.830
If history is any guide, we're
going to look antiquated.

00:01:36.464 --> 00:01:38.380
Even though we've made
huge strides, the tools

00:01:38.380 --> 00:01:41.060
and the processes that we
use to build software today

00:01:41.060 --> 00:01:43.250
are going to feel clunky.

00:01:43.250 --> 00:01:45.427
So where is software
development going?

00:01:45.427 --> 00:01:48.010
We think the developer's going
to have more and more leverage.

00:01:48.010 --> 00:01:49.800
You'll be able to
do more with less.

00:01:49.800 --> 00:01:52.760
Specifically, you'll focus
on high level concepts,

00:01:52.760 --> 00:01:57.160
like users, data, and tasks.

00:01:57.160 --> 00:02:00.542
So how is Google going
to help you do this?

00:02:00.542 --> 00:02:02.250
Today, we'll be looking
at some offerings

00:02:02.250 --> 00:02:04.060
from Google Cloud Platform.

00:02:04.060 --> 00:02:06.120
We'll be looking at an
overview of Firebase,

00:02:06.120 --> 00:02:08.289
going into a feature
deep dive, and then we've

00:02:08.289 --> 00:02:11.940
got some exciting
announcements for you, as well.

00:02:11.940 --> 00:02:13.880
So let's start with
Google Cloud Platform.

00:02:13.880 --> 00:02:15.380
Remember all those
physical servers?

00:02:15.380 --> 00:02:17.680
With GCP, you do not need them.

00:02:17.680 --> 00:02:20.350
GCP provides compute
storage, data analytics,

00:02:20.350 --> 00:02:23.120
and several other services
that help today's developers be

00:02:23.120 --> 00:02:24.330
more productive.

00:02:24.330 --> 00:02:26.530
I'm going to highlight
a few of them.

00:02:26.530 --> 00:02:30.410
First, is Google
Compute Engine, or GCE.

00:02:30.410 --> 00:02:32.025
GCE abstracts the
physical machine

00:02:32.025 --> 00:02:33.750
and gives you a virtual one.

00:02:33.750 --> 00:02:36.110
This is also known as
Infrastructure as a Service.

00:02:36.110 --> 00:02:39.460
You pay nothing for the hardware
and then you pay as you go.

00:02:39.460 --> 00:02:41.350
With GCP, this is in
one-minute increments,

00:02:41.350 --> 00:02:43.710
which is pretty awesome.

00:02:43.710 --> 00:02:46.634
An abstraction above
that is containers.

00:02:46.634 --> 00:02:48.050
So with containers,
you don't have

00:02:48.050 --> 00:02:52.769
to think about the operational
concerns of a virtual machine.

00:02:52.769 --> 00:02:54.060
Can we go forward in the notes?

00:02:57.340 --> 00:02:59.436
Containers, basically,
mean that you

00:02:59.436 --> 00:03:00.810
can run software
without thinking

00:03:00.810 --> 00:03:02.280
about underlying hardware.

00:03:02.280 --> 00:03:04.210
And with Google
Container Engine,

00:03:04.210 --> 00:03:07.200
you can run your code on
a cluster of machines.

00:03:07.200 --> 00:03:09.780
And that's done with the open
source project, Kubernetes,

00:03:09.780 --> 00:03:13.260
which Google released last June.

00:03:13.260 --> 00:03:16.070
One level of abstraction above
that, is Platform as a Service,

00:03:16.070 --> 00:03:17.690
with App Engine.

00:03:17.690 --> 00:03:19.410
With App Engine,
you further don't

00:03:19.410 --> 00:03:24.480
need to think about memory
or CPU, OS upgrades.

00:03:24.480 --> 00:03:26.640
You just give it
your back end code,

00:03:26.640 --> 00:03:30.840
and App Engine takes it, deploys
it, runs it, and scales it.

00:03:30.840 --> 00:03:34.890
And this makes developers
significantly more productive.

00:03:34.890 --> 00:03:38.300
And so GCP has some awesome
offerings for service side back

00:03:38.300 --> 00:03:39.860
end developers.

00:03:39.860 --> 00:03:42.000
But what if you're a
mobile developer or a web

00:03:42.000 --> 00:03:46.460
developer working on the client
side of your application?

00:03:46.460 --> 00:03:50.751
Well, it turns out that
Google has a service for you.

00:03:50.751 --> 00:03:54.334
And that brings us to Firebase.

00:03:54.334 --> 00:03:55.750
For those of you
who aren't aware,

00:03:55.750 --> 00:03:58.300
let's do a quick overview.

00:03:58.300 --> 00:04:01.500
Firebase is a platform
to help you rapidly

00:04:01.500 --> 00:04:05.624
build really great mobile
and web applications.

00:04:05.624 --> 00:04:08.040
One of the first things you
do when building an app is you

00:04:08.040 --> 00:04:10.750
choose how to
build its back end.

00:04:10.750 --> 00:04:14.390
Firebase has three services--
user authentication,

00:04:14.390 --> 00:04:19.040
a real time database,
and static hosting--

00:04:19.040 --> 00:04:21.640
to help you build your
application without needing

00:04:21.640 --> 00:04:24.290
to spin up servers and
without needing to manage

00:04:24.290 --> 00:04:26.810
complex infrastructure.

00:04:26.810 --> 00:04:28.920
This saves you an
immense amount of time.

00:04:28.920 --> 00:04:30.350
But more importantly,
it lets you

00:04:30.350 --> 00:04:33.810
focus on creating a
great user experience.

00:04:33.810 --> 00:04:36.625
Your users do not care if the
code to shard your database

00:04:36.625 --> 00:04:37.910
is elegant.

00:04:37.910 --> 00:04:40.820
They care if you're elegantly
solving their problem.

00:04:44.020 --> 00:04:48.990
Firebase has SDKs for
iOS, Android, and the web.

00:04:48.990 --> 00:04:50.870
This allows you to
access Firebase directly

00:04:50.870 --> 00:04:52.724
from your client.

00:04:52.724 --> 00:04:54.390
With client side code,
though, you often

00:04:54.390 --> 00:04:56.170
need to structure
and maintain it.

00:04:56.170 --> 00:04:58.110
And this is why we've
built deep integrations

00:04:58.110 --> 00:05:00.865
with these great front
end web frameworks.

00:05:00.865 --> 00:05:02.740
If you want to access
Firebase from a server,

00:05:02.740 --> 00:05:04.970
you can use our server
site libraries or wrappers

00:05:04.970 --> 00:05:07.710
around our REST API
in these languages.

00:05:07.710 --> 00:05:10.420
And with our REST API, you can
access Firebase from anywhere

00:05:10.420 --> 00:05:11.285
you can do HTTP.

00:05:15.400 --> 00:05:17.700
So how did Firebase start?

00:05:17.700 --> 00:05:21.400
Well, 3 and 1/2 years ago,
we saw some game developers

00:05:21.400 --> 00:05:24.570
having some trouble setting up
their back end infrastructure.

00:05:24.570 --> 00:05:26.890
All they wanted to do was
build a really cool game.

00:05:26.890 --> 00:05:29.170
They wanted to make
awesome artwork.

00:05:29.170 --> 00:05:30.890
They wanted to grow their MAUs.

00:05:30.890 --> 00:05:32.530
And they didn't want to
think about the intricacies

00:05:32.530 --> 00:05:33.970
of a distributed
real time system.

00:05:37.310 --> 00:05:38.570
So we started Firebase.

00:05:38.570 --> 00:05:41.240
And today, this is one of our
customers-- Roll20-- who's

00:05:41.240 --> 00:05:42.710
built their entire game on us.

00:05:42.710 --> 00:05:47.265
They are just one of 190,000
developers who are building

00:05:47.265 --> 00:05:49.530
their applications on Firebase.

00:05:49.530 --> 00:05:53.450
And Firebase has 1 and 1/2
million end user devices

00:05:53.450 --> 00:05:58.060
sending data through
us at any given time.

00:05:58.060 --> 00:06:00.220
These are some of the
customers that use us.

00:06:00.220 --> 00:06:02.490
They range from
ambitious startups

00:06:02.490 --> 00:06:06.270
all the way up to
large enterprises.

00:06:06.270 --> 00:06:08.230
So that's a quick
overview of Firebase.

00:06:08.230 --> 00:06:11.940
Now let's look at our features--
authentication, database,

00:06:11.940 --> 00:06:14.230
and hosting.

00:06:14.230 --> 00:06:16.850
Data is the lifeblood
of any application.

00:06:16.850 --> 00:06:19.370
So we'll start off with
the real time database.

00:06:19.370 --> 00:06:22.080
Firebase has a
NoSQL JSON database.

00:06:22.080 --> 00:06:25.020
One of the most exciting
features about this

00:06:25.020 --> 00:06:27.624
is it does data synchronization.

00:06:27.624 --> 00:06:29.540
Whenever the client
device writes to Firebase,

00:06:29.540 --> 00:06:31.920
we synchronize that data
with the Firebase servers,

00:06:31.920 --> 00:06:34.810
and then push it down to
every other device who cares.

00:06:34.810 --> 00:06:36.865
This is fantastic for
this multi-device world

00:06:36.865 --> 00:06:40.240
that we live in, where you
pick up your smartphone

00:06:40.240 --> 00:06:41.970
and put down your
tablet and expect

00:06:41.970 --> 00:06:44.270
to pick up where you left off.

00:06:44.270 --> 00:06:46.760
It's also fantastic for this
world of intermittent internet

00:06:46.760 --> 00:06:47.560
connectivity.

00:06:47.560 --> 00:06:50.990
When you go into an elevator
or go through a tunnel,

00:06:50.990 --> 00:06:53.360
you expect your
application to still work.

00:06:53.360 --> 00:06:54.950
And since, with
Firebase, your SDKs

00:06:54.950 --> 00:06:57.750
have a local view of the data--
a local copy of the data--

00:06:57.750 --> 00:07:00.080
in memory on the device,
it means your application

00:07:00.080 --> 00:07:01.050
does exactly this.

00:07:04.720 --> 00:07:06.590
But it's not just
synchronization.

00:07:06.590 --> 00:07:08.890
It's real time synchronization.

00:07:08.890 --> 00:07:11.800
We push those updates to
other devices in milliseconds.

00:07:11.800 --> 00:07:14.450
And this allows you to build
great, real time, collaborative

00:07:14.450 --> 00:07:16.390
applications with Firebase.

00:07:16.390 --> 00:07:19.270
Google Docs has set the
standard for what you can do

00:07:19.270 --> 00:07:20.990
with real time collaboration.

00:07:20.990 --> 00:07:23.750
And now, with Firebase, you can
build these great experiences

00:07:23.750 --> 00:07:26.700
without needing a
huge engineering team.

00:07:26.700 --> 00:07:30.090
But instead of telling
you, why don't I show you?

00:07:30.090 --> 00:07:32.030
So we'll switch
over to the camera.

00:07:32.030 --> 00:07:34.620
And we're going to show an
application called Talkboard.

00:07:34.620 --> 00:07:36.740
Talkboard is built
by Citrix, and it's

00:07:36.740 --> 00:07:40.890
used in schools and companies
with over hundreds of thousands

00:07:40.890 --> 00:07:42.970
of users around the world.

00:07:42.970 --> 00:07:44.580
So here I can select
multiple boards,

00:07:44.580 --> 00:07:46.329
and I'm going to jump
into this one called

00:07:46.329 --> 00:07:49.812
I/O. Now, with Firebase,
these two devices

00:07:49.812 --> 00:07:51.610
are connected over Wi-Fi.

00:07:51.610 --> 00:07:54.560
When I write on one, it'll
sync the data up to Firebase

00:07:54.560 --> 00:07:57.610
and push it down to the
other device in milliseconds.

00:07:57.610 --> 00:08:00.220
So I can say, hi I/O. And
I'll flip that around,

00:08:00.220 --> 00:08:03.090
so we're all looking
at the same thing.

00:08:03.090 --> 00:08:05.760
I'll find the appropriate
shade of blue.

00:08:05.760 --> 00:08:07.905
Let's get a bit of
a fatter stencil

00:08:07.905 --> 00:08:13.890
there, go hi, I/O. I'll
find a nice yellow,

00:08:13.890 --> 00:08:16.620
draw a little sun up here.

00:08:16.620 --> 00:08:18.910
So you can-- this
is all vector data,

00:08:18.910 --> 00:08:20.950
and it's all stored as
JSON inside Firebase.

00:08:20.950 --> 00:08:25.460
And you can see just how
quickly those updates propagate.

00:08:25.460 --> 00:08:29.659
And just how easy it is to build
those collaborative features.

00:08:29.659 --> 00:08:30.700
So go back to the slides.

00:08:35.319 --> 00:08:35.819
Thank you.

00:08:35.819 --> 00:08:38.385
[APPLAUSE]

00:08:40.084 --> 00:08:41.500
There are a couple
of great things

00:08:41.500 --> 00:08:43.660
we should note about
Firebase database.

00:08:43.660 --> 00:08:46.134
The first is that it's
accessible directly

00:08:46.134 --> 00:08:46.800
from the client.

00:08:46.800 --> 00:08:49.330
So you don't need
to talk to a server.

00:08:49.330 --> 00:08:52.330
The client can just go
directly to the database.

00:08:52.330 --> 00:08:55.120
Second-- and this is
how easy it is to do so.

00:08:55.120 --> 00:08:57.480
So this is actually
some Android code.

00:08:57.480 --> 00:08:59.320
First of all, we
create a reference

00:08:59.320 --> 00:09:01.330
to a location inside Firebase.

00:09:01.330 --> 00:09:02.580
I'm doing that up top.

00:09:02.580 --> 00:09:05.105
And then I can just
call ref.setValue.

00:09:05.105 --> 00:09:06.480
And I'm passing
in a string there

00:09:06.480 --> 00:09:08.840
that says, hi, I/O.
This is all the code you

00:09:08.840 --> 00:09:12.670
need to write to Firebase.

00:09:12.670 --> 00:09:15.354
The Firebase database
is just one JSON object.

00:09:15.354 --> 00:09:17.270
So it's in a format that
you're familiar with.

00:09:17.270 --> 00:09:20.050
And it's in a format that all
of the client side devices

00:09:20.050 --> 00:09:22.920
that you work with already use.

00:09:22.920 --> 00:09:23.700
It's schemaless.

00:09:23.700 --> 00:09:25.908
And so it's super flexible,
so you can structure data

00:09:25.908 --> 00:09:26.760
how you like.

00:09:26.760 --> 00:09:29.490
If you've already used Mongo, if
you've already used Couchbase,

00:09:29.490 --> 00:09:31.990
Firebase's database is going
to feel really familiar to you.

00:09:34.520 --> 00:09:37.280
And finally, every piece
of data has its own URL.

00:09:37.280 --> 00:09:38.440
JSON is a tree structure.

00:09:38.440 --> 00:09:40.220
URLs are a tree structure.

00:09:40.220 --> 00:09:41.820
So we've mapped
every piece of data.

00:09:41.820 --> 00:09:46.520
Every number, every Boolean,
every string, to its own URL.

00:09:46.520 --> 00:09:48.170
This gives you several
great benefits.

00:09:48.170 --> 00:09:50.160
First of all, it's intuitive.

00:09:50.160 --> 00:09:53.020
So you can reference data
with an absolute path

00:09:53.020 --> 00:09:54.690
or with a relative path.

00:09:54.690 --> 00:09:57.730
And it's all in a format
that you know and understand.

00:09:57.730 --> 00:10:00.699
Second of all, you can use
those URLs as REST endpoints,

00:10:00.699 --> 00:10:02.990
so you can manage and manipulate
from REST, in addition

00:10:02.990 --> 00:10:04.400
to the client libraries.

00:10:04.400 --> 00:10:05.970
And finally, it's
browser compatible.

00:10:05.970 --> 00:10:09.010
So you can actually punch
those URLs into a web browser

00:10:09.010 --> 00:10:11.440
and you see a graphical
view of your data.

00:10:11.440 --> 00:10:13.190
And this is fantastic
if you're debugging.

00:10:15.604 --> 00:10:17.770
I want to talk a little bit
about accessing Firebase

00:10:17.770 --> 00:10:19.120
from the client.

00:10:19.120 --> 00:10:20.870
Typically, when you
build applications,

00:10:20.870 --> 00:10:23.920
you're building them in a
three-tier architecture.

00:10:23.920 --> 00:10:26.110
So your device talks to
an application server,

00:10:26.110 --> 00:10:28.020
and that, in turn, then
talks to a database.

00:10:28.020 --> 00:10:31.060
As I mentioned, this isn't
the case with Firebase.

00:10:31.060 --> 00:10:33.230
We view application
development as moving

00:10:33.230 --> 00:10:36.460
to a two-tier model, where
the device speaks directly

00:10:36.460 --> 00:10:38.350
to the Firebase database.

00:10:38.350 --> 00:10:40.170
And this gives you a
couple of benefits.

00:10:40.170 --> 00:10:43.000
First, it allows you to do the
real time in the offline mode

00:10:43.000 --> 00:10:44.000
that I mentioned.

00:10:44.000 --> 00:10:45.870
But it also speeds
up development.

00:10:45.870 --> 00:10:47.560
There's no server
boilerplate code

00:10:47.560 --> 00:10:50.130
that's shuffling data
between your database

00:10:50.130 --> 00:10:52.366
and your application server.

00:10:52.366 --> 00:10:53.740
When you add a
feature, you don't

00:10:53.740 --> 00:10:55.790
need to go and add
new server code,

00:10:55.790 --> 00:10:57.320
or add new tests to that code.

00:10:57.320 --> 00:10:59.770
So it really does
speed up development.

00:10:59.770 --> 00:11:03.740
And then you're also
offloading scaling to Firebase.

00:11:03.740 --> 00:11:06.087
So you don't need to
re-architect your server

00:11:06.087 --> 00:11:06.670
code to scale.

00:11:06.670 --> 00:11:10.100
Firebase already guides
you into a pattern

00:11:10.100 --> 00:11:12.870
where your operations on
your data scale linearly

00:11:12.870 --> 00:11:14.290
with the size of your data set.

00:11:14.290 --> 00:11:17.070
This is how most
high scale production

00:11:17.070 --> 00:11:18.250
apps are written, anyway.

00:11:18.250 --> 00:11:21.210
And you're doing it
from the very beginning.

00:11:21.210 --> 00:11:23.770
With a two-tier
architecture, you

00:11:23.770 --> 00:11:26.130
may be asking, how
do I run server code,

00:11:26.130 --> 00:11:27.690
if I want to run
some trusted code?

00:11:27.690 --> 00:11:30.440
Or if I want to do some
heavy lifting that I don't

00:11:30.440 --> 00:11:32.306
want the edge phone to do?

00:11:32.306 --> 00:11:34.680
Well, you can just hook a
server up the Firebase database

00:11:34.680 --> 00:11:35.420
directly.

00:11:35.420 --> 00:11:38.795
And you can also connected
with third party APIs.

00:11:38.795 --> 00:11:40.420
And you may be thinking
to yourself out

00:11:40.420 --> 00:11:42.520
in the audience,
OK, that's great.

00:11:42.520 --> 00:11:44.830
But if my device is talking
directly to my Firebase

00:11:44.830 --> 00:11:47.150
database, how do I secure it?

00:11:47.150 --> 00:11:50.980
And the answer is with our
flexible rules language.

00:11:50.980 --> 00:11:53.790
So this language lets you define
how your data can be structured

00:11:53.790 --> 00:11:55.800
and who can access it.

00:11:55.800 --> 00:11:59.101
These live on our server, and
here's an example of them.

00:11:59.101 --> 00:12:00.350
So here are my rules language.

00:12:00.350 --> 00:12:03.170
I'm saying the foo node
can be read by anyone,

00:12:03.170 --> 00:12:05.210
it can be written by anyone.

00:12:05.210 --> 00:12:08.560
And then I have a validate
rule that enforces the schema.

00:12:08.560 --> 00:12:10.070
So it's got to be
a string and it's

00:12:10.070 --> 00:12:12.270
got to be less than
100 characters.

00:12:12.270 --> 00:12:13.770
These are all in one place.

00:12:13.770 --> 00:12:17.740
They're stored in the Firebase
servers, and they're all JSON.

00:12:17.740 --> 00:12:21.462
Again, you can upload
them with our CLI

00:12:21.462 --> 00:12:23.045
or edit them directly
at Firebase.com.

00:12:25.862 --> 00:12:27.820
So we've taken a look at
the Firebase database.

00:12:27.820 --> 00:12:30.420
Now let's move to
Firebase authentication.

00:12:30.420 --> 00:12:32.304
Most every app has
the concept of a user.

00:12:32.304 --> 00:12:33.720
Unfortunately, the
first thing you

00:12:33.720 --> 00:12:36.840
do when you set up
set up an app is

00:12:36.840 --> 00:12:39.060
have to write a user
authenication system

00:12:39.060 --> 00:12:41.460
or fight with OAuth.

00:12:41.460 --> 00:12:44.640
With Firebase, we enable
you to easily implement

00:12:44.640 --> 00:12:47.800
email and password and then
connect with third party

00:12:47.800 --> 00:12:51.490
providers, like Google,
Facebook, Twitter, and GitHub.

00:12:51.490 --> 00:12:53.380
And you can do
this really easily.

00:12:53.380 --> 00:12:57.620
This is the code in JavaScript
implement Facebook login

00:12:57.620 --> 00:12:59.310
with Firebase authentication.

00:12:59.310 --> 00:13:01.700
I create a reference,
as we saw earlier,

00:13:01.700 --> 00:13:04.850
and I call
ref.authWithOAuthPopup

00:13:04.850 --> 00:13:07.950
and I pass it to string
Facebook, give it a callback.

00:13:07.950 --> 00:13:08.512
That's it.

00:13:08.512 --> 00:13:09.720
I can change that to Twitter.

00:13:09.720 --> 00:13:11.310
I can change that to Google.

00:13:11.310 --> 00:13:14.380
And that's all I need
to do to implement log

00:13:14.380 --> 00:13:16.020
in with a third party provider.

00:13:16.020 --> 00:13:19.410
Really is that simple.

00:13:19.410 --> 00:13:22.102
So what if you're asking, how
do I actually integrate it

00:13:22.102 --> 00:13:23.310
with my existing user system?

00:13:23.310 --> 00:13:24.580
I already built one.

00:13:24.580 --> 00:13:26.130
And the answer
is, you can easily

00:13:26.130 --> 00:13:28.940
use one of our eight server
side libraries to integrate.

00:13:28.940 --> 00:13:31.960
You just generate a JSON web
token, another open standard,

00:13:31.960 --> 00:13:36.350
and that'll tell Firebase
who your user is.

00:13:36.350 --> 00:13:38.030
But our Firebase
authentication also

00:13:38.030 --> 00:13:41.390
works with our security
rules that I just mentioned.

00:13:41.390 --> 00:13:46.150
This enables you to build
secure applications with a user

00:13:46.150 --> 00:13:47.180
authentication system.

00:13:47.180 --> 00:13:50.800
So let's say we
have a users node.

00:13:50.800 --> 00:13:55.320
$uid basically specifies that
we can interact with any user

00:13:55.320 --> 00:13:56.940
entry in the user's node.

00:13:56.940 --> 00:13:59.460
It's saying that anyone
can read a user's profile,

00:13:59.460 --> 00:14:03.690
but only the person logged in
can modify their own profile.

00:14:03.690 --> 00:14:07.230
It's that easy with just
a few lines of code.

00:14:07.230 --> 00:14:09.250
Finally, let's look
at Firebase hosting.

00:14:09.250 --> 00:14:11.752
It's production-grade
hosting for developers.

00:14:11.752 --> 00:14:14.210
So Firebase hosting was designed
for mission-critical sites

00:14:14.210 --> 00:14:17.110
and apps, and we built it
for reliability and scale.

00:14:17.110 --> 00:14:20.640
It runs some great sites,
like Firebase.com, Angular,

00:14:20.640 --> 00:14:23.410
and the Polymer
team user, as well.

00:14:23.410 --> 00:14:27.660
It's backed by global CDN, so
you get pops around the world.

00:14:27.660 --> 00:14:31.670
It's SSL by default. We even
provision SSL cert for you.

00:14:31.670 --> 00:14:35.851
So you don't have to go
off and buy the $150 cert.

00:14:35.851 --> 00:14:38.100
And it has custom domain
support so you can hook it up

00:14:38.100 --> 00:14:41.350
to your own custom domain.

00:14:41.350 --> 00:14:44.260
You just go into your terminal,
go to the directory you want,

00:14:44.260 --> 00:14:45.779
call firebase imit.

00:14:45.779 --> 00:14:47.320
And then you can
call firebase deploy

00:14:47.320 --> 00:14:50.090
and it'll push that content
up to your own Firebaseapp.com

00:14:50.090 --> 00:14:53.900
URL or your own custom URL.

00:14:53.900 --> 00:14:56.900
So we've seen Firebase
authentication real time

00:14:56.900 --> 00:14:59.810
database and Firebase hosting.

00:14:59.810 --> 00:15:03.530
Now let's take a look at some of
the customers who use Firebase.

00:15:03.530 --> 00:15:06.610
Instacart is one of the rising
stars in Silicon Valley.

00:15:06.610 --> 00:15:09.310
They let you do grocery
delivery from your mobile app

00:15:09.310 --> 00:15:10.864
to your door in hours.

00:15:10.864 --> 00:15:13.030
And they've been using
Firebase since the beginning.

00:15:13.030 --> 00:15:17.580
They've raised over $300
million from top-tier VCs

00:15:17.580 --> 00:15:19.960
and they use Firebase
for a number of things.

00:15:19.960 --> 00:15:22.730
You can collaboratively
edit your shopping cart

00:15:22.730 --> 00:15:24.660
with your roommate or spouse.

00:15:24.660 --> 00:15:27.960
You can talk to your shopper
while they're in the store.

00:15:27.960 --> 00:15:32.480
And you can also see where your
order is with their live order

00:15:32.480 --> 00:15:34.500
location tracking.

00:15:34.500 --> 00:15:38.100
The next customer's a little
bit of a different profile.

00:15:38.100 --> 00:15:42.850
So Sky News was the UK'S
first 24-hour news network.

00:15:42.850 --> 00:15:43.850
They're based in London.

00:15:43.850 --> 00:15:46.490
They have new bureaus
around the globe.

00:15:46.490 --> 00:15:49.860
And on May the seventh, the
UK held general election.

00:15:49.860 --> 00:15:52.140
For those of you unfamiliar
with British parliamentary

00:15:52.140 --> 00:15:55.670
procedure, until this
year, an election

00:15:55.670 --> 00:15:57.420
would be called within
a five-year window.

00:15:57.420 --> 00:16:01.120
And as soon as it was
called, then six weeks later,

00:16:01.120 --> 00:16:03.610
the election happened.

00:16:03.610 --> 00:16:06.640
So this six-weeks election
cycle makes some democracies,

00:16:06.640 --> 00:16:09.954
I know, feel like
a walk in the park.

00:16:09.954 --> 00:16:14.310
Sky News used Firebase to
synchronize election data

00:16:14.310 --> 00:16:18.064
from their iOS app, their
Android app, and their web app.

00:16:18.064 --> 00:16:19.730
So that on the night
of May the seventh,

00:16:19.730 --> 00:16:21.200
and the morning
of May the eighth,

00:16:21.200 --> 00:16:24.070
the millions of people from
around the world who tuned in

00:16:24.070 --> 00:16:28.270
to watch the most-watched
election in UK history

00:16:28.270 --> 00:16:32.120
got the updates with Firebase.

00:16:32.120 --> 00:16:33.990
We're really excited
that this software was

00:16:33.990 --> 00:16:36.390
built in a matter of
weeks by their team

00:16:36.390 --> 00:16:39.580
and achieved this scale.

00:16:39.580 --> 00:16:41.070
Next up, we have Citrix.

00:16:41.070 --> 00:16:43.690
So Citrix uses us in some of
their flagship applications

00:16:43.690 --> 00:16:46.710
like GoToMeeting and GoToAssist.

00:16:46.710 --> 00:16:50.040
Well one of their newest
applications uses us, too.

00:16:50.040 --> 00:16:52.060
Today, I'm excited to
welcome onto the stage

00:16:52.060 --> 00:16:54.420
Gus Pinto, senior
director at Citrix,

00:16:54.420 --> 00:16:56.900
who's going to tell us a
little bit about how Citrix

00:16:56.900 --> 00:16:58.215
is using us in Concierge.

00:17:06.182 --> 00:17:10.190
So we'll switch over to the--

00:17:10.190 --> 00:17:12.080
GUS PINTO: Good
morning, everyone.

00:17:12.080 --> 00:17:16.170
I'm really jazzed to be joining
the Firebase team and James

00:17:16.170 --> 00:17:17.130
here.

00:17:17.130 --> 00:17:19.584
We built a wonderful
relationship

00:17:19.584 --> 00:17:21.500
that expands on the
original relationship we'd

00:17:21.500 --> 00:17:23.000
had with Google.

00:17:23.000 --> 00:17:29.400
You see, Citrix-- we have a
pretty mission-critical task

00:17:29.400 --> 00:17:29.910
at hand.

00:17:29.910 --> 00:17:30.410
OK?

00:17:30.410 --> 00:17:34.300
We power over 400
million workspace users

00:17:34.300 --> 00:17:36.110
every single day.

00:17:36.110 --> 00:17:38.170
And one thing that
we did notice is

00:17:38.170 --> 00:17:42.110
that the vast majority of our
mobile users are going mobile--

00:17:42.110 --> 00:17:46.010
are getting the work done
on a mobile workspace.

00:17:46.010 --> 00:17:51.710
And it really dawned upon us
that the vehicles in which we

00:17:51.710 --> 00:17:56.220
support customers today on
mobile devices is antiquated

00:17:56.220 --> 00:17:58.180
and it's really, really bad.

00:17:58.180 --> 00:18:02.959
I mean, to the point of being
frustrating to the most part.

00:18:02.959 --> 00:18:05.000
Things like-- the best
things that we can come up

00:18:05.000 --> 00:18:08.150
with sometimes was just
putting a button in our apps

00:18:08.150 --> 00:18:11.020
that sends an email
form to somebody,

00:18:11.020 --> 00:18:15.392
when the problems that we
have are happening right now.

00:18:15.392 --> 00:18:16.850
That's why we've
created Concierge.

00:18:16.850 --> 00:18:21.360
We really just re-imagined the
communication flow and the way

00:18:21.360 --> 00:18:27.240
companies connect with their
customers and employees.

00:18:27.240 --> 00:18:30.540
And we launched
it two weeks ago.

00:18:30.540 --> 00:18:33.240
And beyond our
wildest expectations,

00:18:33.240 --> 00:18:37.910
we sold out our tech preview
in the very first day.

00:18:37.910 --> 00:18:41.940
And quite honestly, we couldn't
have done that without Google.

00:18:41.940 --> 00:18:45.640
Now we do leverage a lot
of components of Google

00:18:45.640 --> 00:18:48.190
across our technologies.

00:18:48.190 --> 00:18:53.390
In the case of Concierge,
we use WebRTC and Chrome.

00:18:53.390 --> 00:18:57.110
We have an SDK for
Android, we leverage Cast.

00:18:57.110 --> 00:19:00.210
But at the very
heart of Concierge--

00:19:00.210 --> 00:19:03.820
and really what enabled us
to get here-- was Firebase.

00:19:06.597 --> 00:19:08.180
I say it's in the
heart of our product

00:19:08.180 --> 00:19:11.840
because it's the ticking
component that makes everything

00:19:11.840 --> 00:19:13.480
flow within our product.

00:19:13.480 --> 00:19:15.450
From user
authentication, as James

00:19:15.450 --> 00:19:18.430
alluded, to the real time
data from end to end.

00:19:18.430 --> 00:19:23.320
We had to reinvent the
inbox for agents-- our chat

00:19:23.320 --> 00:19:26.200
communication-- and so many
other components all the way

00:19:26.200 --> 00:19:29.230
to signaling for WebRTC.

00:19:29.230 --> 00:19:31.910
We really rely
heavily on Firebase.

00:19:31.910 --> 00:19:35.170
And I could just spend the time
here telling you about this.

00:19:35.170 --> 00:19:37.151
I'd rather show you
what this looks like

00:19:37.151 --> 00:19:38.650
and what we've
managed to accomplish

00:19:38.650 --> 00:19:40.020
with our partnership.

00:19:40.020 --> 00:19:45.950
So I think there's nothing
better than to truly show

00:19:45.950 --> 00:19:46.940
a live product.

00:19:46.940 --> 00:19:49.294
Nothing more
dangerous and better

00:19:49.294 --> 00:19:50.460
than to show a live product.

00:19:50.460 --> 00:19:54.550
So we brought a customer
product to show you guys.

00:19:54.550 --> 00:19:57.760
And it's from a company
called Modernizing Medicine.

00:19:57.760 --> 00:20:00.630
And what those guys are doing
in their own environment,

00:20:00.630 --> 00:20:03.700
in the medical space, is
reinventing and reimagining

00:20:03.700 --> 00:20:07.130
how physicians
interact with patients.

00:20:07.130 --> 00:20:08.610
And they're doing
it from anywhere

00:20:08.610 --> 00:20:11.060
and bringing the power of
electronic medical record

00:20:11.060 --> 00:20:12.830
systems to mobile.

00:20:12.830 --> 00:20:15.984
Now what I want to do
is fire it up here.

00:20:15.984 --> 00:20:17.650
And hopefully, you
guys can see it good.

00:20:17.650 --> 00:20:20.290
I'll log in.

00:20:20.290 --> 00:20:22.450
Now with Concierge,
what we've done

00:20:22.450 --> 00:20:26.290
was-- as part of reimagining
how we would support customers

00:20:26.290 --> 00:20:28.040
on the go-- was,
first, something

00:20:28.040 --> 00:20:30.445
that actually Google's very
keen on, which is contacts.

00:20:33.960 --> 00:20:35.680
Trying to get support
in today's apps--

00:20:35.680 --> 00:20:38.390
whether it's the email form,
or going out of your app,

00:20:38.390 --> 00:20:40.350
scrambling, finding
a 1-800 number,

00:20:40.350 --> 00:20:43.390
calling somebody, and
eventually being frustrated,

00:20:43.390 --> 00:20:45.710
giving up, and going and
bashing them on Twitter--

00:20:45.710 --> 00:20:46.747
it's rather frustrating.

00:20:46.747 --> 00:20:48.580
So we figured that the
place to start-- it's

00:20:48.580 --> 00:20:52.530
what makes our product really
smart, which are the apps.

00:20:52.530 --> 00:20:56.420
In the case of Modernizing
Medicine, what they've done

00:20:56.420 --> 00:20:58.080
is they've integrated
Concierge, which

00:20:58.080 --> 00:21:01.260
is a simple SDK you
plug into your app.

00:21:01.260 --> 00:21:05.060
And with one line of
code, just fire up

00:21:05.060 --> 00:21:09.090
an entire suite of technologies
that allows you to communicate

00:21:09.090 --> 00:21:10.570
real time with your customers.

00:21:10.570 --> 00:21:14.000
And in the case of real time, we
mean with the push of a button,

00:21:14.000 --> 00:21:17.940
you can get audio-- like
a normal internet call

00:21:17.940 --> 00:21:19.324
right within your
app-- a video--

00:21:19.324 --> 00:21:20.990
so you can see the
representative that's

00:21:20.990 --> 00:21:23.860
helping you in real time,
or just a simple chat,

00:21:23.860 --> 00:21:26.970
if you're not fond of having
a conversation through audio

00:21:26.970 --> 00:21:27.850
and video.

00:21:27.850 --> 00:21:32.260
So what I'm going to do here is
go ahead and start a new visit.

00:21:32.260 --> 00:21:34.920
And simple things-- like,
say, I'm a physician,

00:21:34.920 --> 00:21:36.606
the application
has been updated,

00:21:36.606 --> 00:21:38.980
something moved and changed,
and I don't know what it is.

00:21:38.980 --> 00:21:40.563
And I'm a doctor and
I'm kind of lost.

00:21:40.563 --> 00:21:44.250
And I don't want to go to a
consultation with my patient

00:21:44.250 --> 00:21:46.134
and be like, I don't
know what's going on.

00:21:46.134 --> 00:21:48.300
JAMES TAMPLIN: I didn't
know you were a doctor, Gus.

00:21:48.300 --> 00:21:50.060
GUS PINTO: I am a
doctor to make believe.

00:21:50.060 --> 00:21:50.680
JAMES TAMPLIN: OK.

00:21:50.680 --> 00:21:51.763
You're like Doogie Howser.

00:21:53.485 --> 00:21:55.110
GUS PINTO: So what
I'm going to do here

00:21:55.110 --> 00:21:56.540
is I started a
new constultation,

00:21:56.540 --> 00:22:00.610
but I forgot, with this new
UI, how to properly document

00:22:00.610 --> 00:22:01.570
this visit.

00:22:01.570 --> 00:22:04.010
So what the guys
from ModMed have done

00:22:04.010 --> 00:22:06.760
is they embedded our
SDK into their product.

00:22:06.760 --> 00:22:08.580
It took them less
than 20 minutes.

00:22:08.580 --> 00:22:11.300
Trust me, the developer of the
product is here in the audience

00:22:11.300 --> 00:22:13.290
and he can hold me up to it.

00:22:13.290 --> 00:22:14.880
And with the push
of a button, it

00:22:14.880 --> 00:22:18.820
comes up on their own UI that
confirms that you actually

00:22:18.820 --> 00:22:19.930
want to get support.

00:22:19.930 --> 00:22:22.150
And what that does--
when I press this button,

00:22:22.150 --> 00:22:24.150
it goes out there and
establishes a connection

00:22:24.150 --> 00:22:26.960
on Concierge.

00:22:26.960 --> 00:22:29.660
And as you can see-- can we
switch back to the Notebook?

00:22:32.340 --> 00:22:33.480
Thank you.

00:22:33.480 --> 00:22:36.350
That puts, instantly,
a new session

00:22:36.350 --> 00:22:41.290
within our inbox, where the
ticketing system happens.

00:22:41.290 --> 00:22:43.840
And James will be
my support agent.

00:22:43.840 --> 00:22:45.860
JAMES TAMPLIN: I'd be happy to.

00:22:45.860 --> 00:22:48.520
So I'll go ahead and
answer the call here.

00:22:48.520 --> 00:22:51.730
And I've got an incoming call.

00:22:51.730 --> 00:22:53.597
So I'll accept.

00:22:53.597 --> 00:22:54.430
GUS PINTO: So voila.

00:22:54.430 --> 00:22:59.300
So right within our app, we
have a live support agent.

00:22:59.300 --> 00:23:04.800
Now can we switch back, real
quick, to the [? Wolf ?].

00:23:04.800 --> 00:23:09.084
Now you see that we can-- let
me hit OK here to confirm.

00:23:09.084 --> 00:23:10.250
Now we're sharing my screen.

00:23:10.250 --> 00:23:12.497
So you can see that
James-- I can just

00:23:12.497 --> 00:23:14.580
move him around the screen,
and it's really swift.

00:23:14.580 --> 00:23:16.470
And he can hear me
and I can hear him.

00:23:16.470 --> 00:23:19.580
But one thing that
happened here was just

00:23:19.580 --> 00:23:22.560
getting the communication
flow between the customer

00:23:22.560 --> 00:23:25.720
and the company was not enough.

00:23:25.720 --> 00:23:28.437
Tools to get proper support
for mobile customers

00:23:28.437 --> 00:23:29.270
really didn't exist.

00:23:29.270 --> 00:23:30.820
So we had to create
something new.

00:23:30.820 --> 00:23:33.460
And we call that Copilot,
which is the ability for you

00:23:33.460 --> 00:23:36.940
to share everything that's in
the screen of the customer's

00:23:36.940 --> 00:23:39.360
computer in real
time, whether it's

00:23:39.360 --> 00:23:42.334
an iOS device or an Android
device or a web app.

00:23:42.334 --> 00:23:44.500
As well as the camera,
because most of these devices

00:23:44.500 --> 00:23:45.090
have a camera.

00:23:45.090 --> 00:23:48.032
And sometimes the problem's not
necessarily in the app itself,

00:23:48.032 --> 00:23:49.490
but in the real
world and something

00:23:49.490 --> 00:23:50.840
you want to interact with.

00:23:50.840 --> 00:23:54.710
As well as information, like
what the device version is

00:23:54.710 --> 00:23:58.420
and what the battery level,
what the Wi-Fi, and things

00:23:58.420 --> 00:24:00.269
of such nature.

00:24:00.269 --> 00:24:02.060
JAMES TAMPLIN: So how
can I help you today?

00:24:02.060 --> 00:24:03.268
What seems to be the problem?

00:24:03.268 --> 00:24:08.110
GUS PINTO: So I
forgot how to document

00:24:08.110 --> 00:24:09.900
a session with this patient.

00:24:09.900 --> 00:24:12.750
And since the UI changed, I
really don't know how it is.

00:24:12.750 --> 00:24:14.485
JAMES TAMPLIN: You're
a terrible doctor.

00:24:14.485 --> 00:24:15.100
GUS PINTO: I'm a
horrible doctor.

00:24:15.100 --> 00:24:16.820
JAMES TAMPLIN: So if you
want to start an exam,

00:24:16.820 --> 00:24:19.370
what you're going to want to do
is click this exam button here

00:24:19.370 --> 00:24:20.120
in the upper left.

00:24:20.120 --> 00:24:21.390
And I'll just
highlight that for you.

00:24:21.390 --> 00:24:22.056
GUS PINTO: Cool.

00:24:22.056 --> 00:24:25.210
So you see that right on
the iPad, whatever he did,

00:24:25.210 --> 00:24:27.610
he could draw on my screen
and guide me to completion.

00:24:27.610 --> 00:24:30.110
And we call that
feature Touch Assist.

00:24:30.110 --> 00:24:33.850
He can actually see where I
tap on the screen in real time.

00:24:33.850 --> 00:24:37.132
So if we switch
back to Notebook,

00:24:37.132 --> 00:24:38.090
he can see the drawing.

00:24:38.090 --> 00:24:39.960
You can see he can
simply clear the drawing.

00:24:39.960 --> 00:24:40.230
JAMES TAMPLIN: Cool.

00:24:40.230 --> 00:24:41.770
So I'll clear that
with the eraser.

00:24:41.770 --> 00:24:43.620
GUS PINTO: Once I touch where
I need to touch-- and all

00:24:43.620 --> 00:24:45.700
the touches that I do--
I perform-- they show up

00:24:45.700 --> 00:24:46.380
in real time.

00:24:46.380 --> 00:24:49.620
Including any updates I
make to the application.

00:24:49.620 --> 00:24:52.250
JAMES TAMPLIN: Just going
to give her a little hair.

00:24:54.816 --> 00:24:56.190
I could totally
be a doctor, too.

00:24:59.210 --> 00:25:01.810
GUS PINTO: And
then from here, we

00:25:01.810 --> 00:25:05.520
expect to be able to drive
problem solutions much faster

00:25:05.520 --> 00:25:07.331
than ever before.

00:25:07.331 --> 00:25:07.830
You know?

00:25:07.830 --> 00:25:09.880
So this is Concierge.

00:25:09.880 --> 00:25:11.170
It's in the market today.

00:25:11.170 --> 00:25:13.910
You can go to
concierge.call.com.

00:25:13.910 --> 00:25:16.609
It's available for
both Android and iOS.

00:25:16.609 --> 00:25:18.150
And we believe that
it's really going

00:25:18.150 --> 00:25:21.630
to transform the way companies
connect with their customers

00:25:21.630 --> 00:25:23.320
and employees.

00:25:23.320 --> 00:25:25.010
And we really couldn't
have built this

00:25:25.010 --> 00:25:28.760
without the help of
Firebase because we really

00:25:28.760 --> 00:25:31.530
had a hard set of
problems to tackle.

00:25:31.530 --> 00:25:35.310
And instead of trying
to reinvent the wheel,

00:25:35.310 --> 00:25:39.395
we made a commitment to build
this on a solid platform that

00:25:39.395 --> 00:25:42.000
would scale for us at the
enterprise-grade levels

00:25:42.000 --> 00:25:43.510
that we really needed to.

00:25:43.510 --> 00:25:44.382
So that's Concierge.

00:25:44.382 --> 00:25:45.340
JAMES TAMPLIN: Awesome.

00:25:45.340 --> 00:25:47.220
GUS PINTO: And take
Firebase for a spin.

00:25:47.220 --> 00:25:48.662
You will absolutely love it.

00:25:48.662 --> 00:25:49.370
Thank you, James.

00:25:49.370 --> 00:25:50.080
JAMES TAMPLIN: Thanks
for your time, Gus.

00:25:50.080 --> 00:25:50.410
Really appreciate it.

00:25:50.410 --> 00:25:50.898
GUS PINTO: Absolutely.

00:25:50.898 --> 00:25:51.398
Thank you.

00:25:51.398 --> 00:25:53.338
[APPLAUSE]

00:25:58.220 --> 00:25:59.320
JAMES TAMPLIN: Cool.

00:25:59.320 --> 00:26:02.870
So we've seen how Instacart,
Sky News, and Citrix

00:26:02.870 --> 00:26:06.150
use Firebase to power some
of their applications.

00:26:06.150 --> 00:26:10.450
Now let's get to some of
the really exciting bits.

00:26:10.450 --> 00:26:12.625
We've got a couple of
great announcements today.

00:26:12.625 --> 00:26:18.752
And the first is a new feature
for our real time database.

00:26:18.752 --> 00:26:20.960
Typically, when you're
building a mobile application,

00:26:20.960 --> 00:26:24.460
it's just consuming a
REST API from a server.

00:26:24.460 --> 00:26:25.990
And in this
architecture, when you

00:26:25.990 --> 00:26:29.760
lose your internet connection,
the app just stops working.

00:26:29.760 --> 00:26:31.890
And this is a terrible
user experience.

00:26:31.890 --> 00:26:34.580
We learned earlier that
the Firebase client

00:26:34.580 --> 00:26:40.160
SDKs keep a local copy of your
data in memory on your phone.

00:26:40.160 --> 00:26:43.360
And so this allows your
app to stay responsive

00:26:43.360 --> 00:26:46.520
when you lose your
connection temporarily.

00:26:46.520 --> 00:26:49.040
But today, we're
improving on that.

00:26:49.040 --> 00:26:52.360
And we're improving on that by
announcing full mobile offline

00:26:52.360 --> 00:26:53.760
support.

00:26:53.760 --> 00:26:55.720
[APPLAUSE]

00:26:58.940 --> 00:27:00.170
This comes in two flavors.

00:27:00.170 --> 00:27:03.210
The first is disk persistence.

00:27:03.210 --> 00:27:05.990
So when you go
offline, your SDKs now

00:27:05.990 --> 00:27:11.090
not only store into memory,
but they also persist to disk.

00:27:11.090 --> 00:27:14.190
This means you can completely
quit your application

00:27:14.190 --> 00:27:18.570
and when you restart it,
your data is still available.

00:27:18.570 --> 00:27:21.120
When you come back
online, it resyncs

00:27:21.120 --> 00:27:23.880
and the entire application
brings you back up

00:27:23.880 --> 00:27:26.191
to speed and back up to the
current state of the world.

00:27:26.191 --> 00:27:27.940
Let's hop over to the
[? Wolf ?] and let's

00:27:27.940 --> 00:27:28.950
show you this in action.

00:27:31.640 --> 00:27:36.780
So this has actually already
been implemented on Talkboard.

00:27:36.780 --> 00:27:42.196
So this time, let's play a
little game of tic-tac-toe.

00:27:42.196 --> 00:27:44.320
But all of a sudden, I lose
my internet connection.

00:27:46.850 --> 00:27:49.266
So I'm going to come in
here and turn off the Wi-Fi.

00:27:49.266 --> 00:27:50.640
And I'm going to
go to the Wi-Fi.

00:27:54.010 --> 00:27:55.260
And I'll go back to Talkboard.

00:27:59.091 --> 00:28:00.840
So now we've lost the
internet connection.

00:28:00.840 --> 00:28:03.619
So the first thing I'll do
is I'll start playing again.

00:28:03.619 --> 00:28:05.660
And I realize the other
player's isn't connected,

00:28:05.660 --> 00:28:08.030
so I'm just going to go
ahead and win the game

00:28:08.030 --> 00:28:11.700
because they're not there.

00:28:11.700 --> 00:28:15.180
And then I'll go ahead and quit
my application entirely and say

00:28:15.180 --> 00:28:18.410
I'm off climbing a mountain.

00:28:18.410 --> 00:28:21.782
Meanwhile, the other player is
like, what actually happened?

00:28:21.782 --> 00:28:22.490
Where did you go?

00:28:22.490 --> 00:28:25.090
And draws a question mark.

00:28:25.090 --> 00:28:27.890
A while later, I spin the
application back up, I go out.

00:28:30.640 --> 00:28:32.160
Fire it up again.

00:28:32.160 --> 00:28:32.910
Go into Talkboard.

00:28:35.490 --> 00:28:37.410
Here's my game of tic-tac-toe.

00:28:37.410 --> 00:28:39.140
And then I turn
the Wi-Fi back on.

00:28:39.140 --> 00:28:42.390
First of all, you've seen
that I quit the application,

00:28:42.390 --> 00:28:45.410
the data was persisted to disk,
I restarted the application,

00:28:45.410 --> 00:28:47.080
everything is still there.

00:28:47.080 --> 00:28:53.812
Then, when I reconnect to
Wi-Fi, turn it back on.

00:28:53.812 --> 00:28:55.770
This, by the way, is the
only demo of my career

00:28:55.770 --> 00:29:00.620
that if the Wi-Fi actually drops
out, it would be a good thing.

00:29:00.620 --> 00:29:03.142
And as we regain Wi-Fi,
everything syncs back

00:29:03.142 --> 00:29:05.100
and we're up to the
current state of the world.

00:29:05.100 --> 00:29:07.480
[APPLAUSE]

00:29:12.250 --> 00:29:14.500
We really need to focus
on mobile as developers,

00:29:14.500 --> 00:29:17.044
and features like this
let you do exactly that.

00:29:17.044 --> 00:29:18.210
We'll go back to the slides.

00:29:20.910 --> 00:29:23.390
Another great thing
is that this feature

00:29:23.390 --> 00:29:26.320
is available with
just one line of code.

00:29:26.320 --> 00:29:28.760
This is the Android, the
Objective-C, and the Swift code

00:29:28.760 --> 00:29:31.080
that you need to enable
this persistence.

00:29:31.080 --> 00:29:33.420
Because Firebase database is
built on a synchronization

00:29:33.420 --> 00:29:36.700
approach, we've really built
it-- from the beginning--

00:29:36.700 --> 00:29:38.000
to be able to do this.

00:29:38.000 --> 00:29:41.200
And we're excited
that there's GA today.

00:29:41.200 --> 00:29:45.150
The next peeks of full mobile
offline support is Keep Synced.

00:29:45.150 --> 00:29:46.950
Keep Synced is the
ability for you

00:29:46.950 --> 00:29:50.060
to specify data that
should be prefetched

00:29:50.060 --> 00:29:53.207
and kept up to date in
case you go offline.

00:29:53.207 --> 00:29:54.790
So a good example
of this is if you're

00:29:54.790 --> 00:29:56.460
building a social
network and you

00:29:56.460 --> 00:29:59.670
want to keep the profiles of
your closest friends up to date

00:29:59.670 --> 00:30:01.899
so that you can get at
them if you're offline.

00:30:01.899 --> 00:30:03.440
Keep Synced is the
feature that would

00:30:03.440 --> 00:30:05.064
allow you to do this
and see their wall

00:30:05.064 --> 00:30:08.820
posts from the last time you
had an internet connection.

00:30:08.820 --> 00:30:12.029
This is, again, just one
line of code to implement.

00:30:12.029 --> 00:30:14.320
Here's the Android, the
Objective-C, and the Swift code

00:30:14.320 --> 00:30:17.150
to do it again.

00:30:17.150 --> 00:30:20.660
With both disk persistence
and with Keep Synced,

00:30:20.660 --> 00:30:24.280
if your users go through
tunnels, climb a mountain,

00:30:24.280 --> 00:30:26.220
or get on a plane,
your applications

00:30:26.220 --> 00:30:28.310
continue to work seamlessly.

00:30:28.310 --> 00:30:30.560
And since this is
just one line of code,

00:30:30.560 --> 00:30:33.700
this continues to be a hallmark
of Firebase-- our simplicity

00:30:33.700 --> 00:30:35.260
and our ease of use.

00:30:35.260 --> 00:30:36.970
And you can now
deliver these features

00:30:36.970 --> 00:30:40.389
that your users are
coming to expect.

00:30:40.389 --> 00:30:41.930
The second announcement
we have today

00:30:41.930 --> 00:30:44.230
is around making
Firebase compatible with

00:30:44.230 --> 00:30:46.380
an exciting new technology.

00:30:46.380 --> 00:30:49.385
Firebase is just one piece
of a complete application.

00:30:49.385 --> 00:30:51.352
As I mentioned earlier,
client side code

00:30:51.352 --> 00:30:53.060
often needs to be
structured and managed.

00:30:53.060 --> 00:30:54.685
And that's why we've
built integrations

00:30:54.685 --> 00:30:57.750
with Angular, Ember, React.

00:30:57.750 --> 00:31:01.070
But an exciting new technology,
called React Native,

00:31:01.070 --> 00:31:03.460
was announced a
couple of months ago.

00:31:03.460 --> 00:31:05.720
And today, we're excited
to announce that Firebase

00:31:05.720 --> 00:31:07.700
works with React
Native and can be

00:31:07.700 --> 00:31:12.052
the back end for your
React Native-powered app.

00:31:12.052 --> 00:31:14.260
React Native is an open
source library from Facebook.

00:31:14.260 --> 00:31:15.968
There's a huge community
going around it.

00:31:15.968 --> 00:31:19.140
It already has 14,000
stars on GitHub

00:31:19.140 --> 00:31:21.940
and it's used by Facebook
in their Groups product.

00:31:21.940 --> 00:31:25.080
Firebase and React work
really well with each other.

00:31:25.080 --> 00:31:27.570
React updates your
UI when there's

00:31:27.570 --> 00:31:29.520
a change in your data model.

00:31:29.520 --> 00:31:33.160
Firebase delivers real time
updates to your data model.

00:31:33.160 --> 00:31:34.510
The pairing is quite elegant.

00:31:37.510 --> 00:31:40.010
You can get started by
npm installing Firebase,

00:31:40.010 --> 00:31:41.730
and then, inside your
React Native code,

00:31:41.730 --> 00:31:44.920
just require Firebase and
you're off to the races.

00:31:44.920 --> 00:31:47.312
We really can't wait
to see what you build.

00:31:47.312 --> 00:31:49.020
So you've seen our
mobile offline support

00:31:49.020 --> 00:31:52.032
and our React announcements.

00:31:52.032 --> 00:31:53.740
We've seen what Google
Cloud Platform can

00:31:53.740 --> 00:31:55.720
do to help you be more
productive, an overview

00:31:55.720 --> 00:31:58.539
of Firebase and a feature
deep dive, heard from Citrix,

00:31:58.539 --> 00:31:59.705
and seen some announcements.

00:32:03.680 --> 00:32:07.347
Really focusing on user
experience, not infrastructure,

00:32:07.347 --> 00:32:09.180
is going to be the way
developers build apps

00:32:09.180 --> 00:32:09.820
in the future.

00:32:09.820 --> 00:32:13.570
Focusing on tasks,
users, and data.

00:32:13.570 --> 00:32:16.770
Firebase is enabling developers
to deliver extraordinary apps,

00:32:16.770 --> 00:32:20.310
with features that end users
expect right out of the box.

00:32:20.310 --> 00:32:24.720
With Firebase, what used to
take months now takes hours.

00:32:24.720 --> 00:32:27.100
We live in pretty
exciting times.

00:32:27.100 --> 00:32:30.090
And we're excited that
individual developers

00:32:30.090 --> 00:32:33.529
and small teams can make
a massive difference.

00:32:33.529 --> 00:32:35.070
If you build something
with Firebase,

00:32:35.070 --> 00:32:37.580
please do tell us about it.

00:32:37.580 --> 00:32:40.030
We'd love to hear
what you build.

00:32:40.030 --> 00:32:41.630
We'll be around all day.

00:32:41.630 --> 00:32:43.520
We have office hours at 4:00 PM.

00:32:43.520 --> 00:32:45.430
There's some schwag
over on these tables.

00:32:45.430 --> 00:32:47.170
We're here in the yellow shirts.

00:32:47.170 --> 00:32:49.050
Please come and find
us and say hello.

00:32:49.050 --> 00:32:51.720
And enjoy the rest of
your I/O. Thank you.

00:32:51.720 --> 00:32:53.270
[APPLAUSE]

