WEBVTT
Kind: captions
Language: en

00:00:00.180 --> 00:00:02.270
Let's look at a slightly different example.

00:00:02.270 --> 00:00:05.440
Here the threads need to execute a function, thread function.

00:00:05.440 --> 00:00:10.430
That's the function that's past the pthread create that takes in one argument.

00:00:10.430 --> 00:00:15.730
This is an integer argument and the function, what it does, it prints out

00:00:15.730 --> 00:00:20.270
thread number and then the number, the integer that was provided as an argument.

00:00:20.270 --> 00:00:25.380
The variables p and myNum are private to every one of the threads, so

00:00:25.380 --> 00:00:28.310
they are only valid in the scope of the thread function.

00:00:28.310 --> 00:00:30.415
Since we have multiple threads executing,

00:00:30.415 --> 00:00:36.370
four, every one of them will have its own private copies of these two variables,

00:00:36.370 --> 00:00:40.720
and they will potentially and in fact, likely be set to different values.

00:00:40.720 --> 00:00:45.140
When a thread is created, we see that the very first thing that happen are that

00:00:45.140 --> 00:00:51.340
it sets these private variables to values that depend on the input parameter.

00:00:51.340 --> 00:00:56.910
If you look at where the threads were created, we see that this input parameter,

00:00:56.910 --> 00:01:02.530
this argument is identical, that is, the index that's used in this loop.

00:01:02.530 --> 00:01:07.720
So once the thread sets these private variables, every one of them will print

00:01:07.720 --> 00:01:13.270
out a line, pthread number, and the value of the private variable, my number.

