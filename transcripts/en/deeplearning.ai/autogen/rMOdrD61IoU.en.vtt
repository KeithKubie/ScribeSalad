WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:02.360
in the last video you saw what a single

00:00:02.360 --> 00:00:02.370
in the last video you saw what a single
 

00:00:02.370 --> 00:00:04.430
in the last video you saw what a single
hidden layer neural network looks like

00:00:04.430 --> 00:00:04.440
hidden layer neural network looks like
 

00:00:04.440 --> 00:00:06.260
hidden layer neural network looks like
in this video let's go through the

00:00:06.260 --> 00:00:06.270
in this video let's go through the
 

00:00:06.270 --> 00:00:08.299
in this video let's go through the
details of exactly how this neural

00:00:08.299 --> 00:00:08.309
details of exactly how this neural
 

00:00:08.309 --> 00:00:10.700
details of exactly how this neural
network computers outputs what you see

00:00:10.700 --> 00:00:10.710
network computers outputs what you see
 

00:00:10.710 --> 00:00:13.879
network computers outputs what you see
is that is like logistic regression but

00:00:13.879 --> 00:00:13.889
is that is like logistic regression but
 

00:00:13.889 --> 00:00:15.950
is that is like logistic regression but
repeater of all the times let's take a

00:00:15.950 --> 00:00:15.960
repeater of all the times let's take a
 

00:00:15.960 --> 00:00:18.380
repeater of all the times let's take a
look so this is what's a two layer

00:00:18.380 --> 00:00:18.390
look so this is what's a two layer
 

00:00:18.390 --> 00:00:20.840
look so this is what's a two layer
neural network looks let's go more DB

00:00:20.840 --> 00:00:20.850
neural network looks let's go more DB
 

00:00:20.850 --> 00:00:22.880
neural network looks let's go more DB
into exactly what this new network

00:00:22.880 --> 00:00:22.890
into exactly what this new network
 

00:00:22.890 --> 00:00:26.269
into exactly what this new network
compute now was set before that logistic

00:00:26.269 --> 00:00:26.279
compute now was set before that logistic
 

00:00:26.279 --> 00:00:28.250
compute now was set before that logistic
regression the circle in logistic

00:00:28.250 --> 00:00:28.260
regression the circle in logistic
 

00:00:28.260 --> 00:00:30.259
regression the circle in logistic
regression really represents two steps

00:00:30.259 --> 00:00:30.269
regression really represents two steps
 

00:00:30.269 --> 00:00:32.359
regression really represents two steps
of computation rows you compute Z as

00:00:32.359 --> 00:00:32.369
of computation rows you compute Z as
 

00:00:32.369 --> 00:00:34.370
of computation rows you compute Z as
follows and in second you compute the

00:00:34.370 --> 00:00:34.380
follows and in second you compute the
 

00:00:34.380 --> 00:00:37.310
follows and in second you compute the
activation as a sigmoid function of Z so

00:00:37.310 --> 00:00:37.320
activation as a sigmoid function of Z so
 

00:00:37.320 --> 00:00:39.860
activation as a sigmoid function of Z so
in your network just does this a lot

00:00:39.860 --> 00:00:39.870
in your network just does this a lot
 

00:00:39.870 --> 00:00:42.080
in your network just does this a lot
more times let's start by focusing on

00:00:42.080 --> 00:00:42.090
more times let's start by focusing on
 

00:00:42.090 --> 00:00:43.880
more times let's start by focusing on
just one of the nodes in the hidden

00:00:43.880 --> 00:00:43.890
just one of the nodes in the hidden
 

00:00:43.890 --> 00:00:45.410
just one of the nodes in the hidden
layer and let's look at the first node

00:00:45.410 --> 00:00:45.420
layer and let's look at the first node
 

00:00:45.420 --> 00:00:46.850
layer and let's look at the first node
in the hidden layer so I've grayed out

00:00:46.850 --> 00:00:46.860
in the hidden layer so I've grayed out
 

00:00:46.860 --> 00:00:48.860
in the hidden layer so I've grayed out
the other nodes for now so similar to

00:00:48.860 --> 00:00:48.870
the other nodes for now so similar to
 

00:00:48.870 --> 00:00:51.290
the other nodes for now so similar to
logistic regression on the left is node

00:00:51.290 --> 00:00:51.300
logistic regression on the left is node
 

00:00:51.300 --> 00:00:53.479
logistic regression on the left is node
in a hidden layer that's two steps of

00:00:53.479 --> 00:00:53.489
in a hidden layer that's two steps of
 

00:00:53.489 --> 00:00:55.369
in a hidden layer that's two steps of
computation right the first step and

00:00:55.369 --> 00:00:55.379
computation right the first step and
 

00:00:55.379 --> 00:00:57.619
computation right the first step and
think of as the left half of this node

00:00:57.619 --> 00:00:57.629
think of as the left half of this node
 

00:00:57.629 --> 00:01:01.639
think of as the left half of this node
it computes Z equals W transpose X plus

00:01:01.639 --> 00:01:01.649
it computes Z equals W transpose X plus
 

00:01:01.649 --> 00:01:05.329
it computes Z equals W transpose X plus
B and the notation were used is um these

00:01:05.329 --> 00:01:05.339
B and the notation were used is um these
 

00:01:05.339 --> 00:01:07.280
B and the notation were used is um these
are all quantities associated with the

00:01:07.280 --> 00:01:07.290
are all quantities associated with the
 

00:01:07.290 --> 00:01:09.020
are all quantities associated with the
first hidden there so that's why we have

00:01:09.020 --> 00:01:09.030
first hidden there so that's why we have
 

00:01:09.030 --> 00:01:10.609
first hidden there so that's why we have
a bunch of square brackets there and

00:01:10.609 --> 00:01:10.619
a bunch of square brackets there and
 

00:01:10.619 --> 00:01:13.160
a bunch of square brackets there and
this is the first node in the hidden

00:01:13.160 --> 00:01:13.170
this is the first node in the hidden
 

00:01:13.170 --> 00:01:14.840
this is the first node in the hidden
layer so that's why we have the

00:01:14.840 --> 00:01:14.850
layer so that's why we have the
 

00:01:14.850 --> 00:01:17.300
layer so that's why we have the
subscript one over there so first it

00:01:17.300 --> 00:01:17.310
subscript one over there so first it
 

00:01:17.310 --> 00:01:19.399
subscript one over there so first it
does that and then the second step is it

00:01:19.399 --> 00:01:19.409
does that and then the second step is it
 

00:01:19.409 --> 00:01:23.600
does that and then the second step is it
computes a 1 1 equals say point of Z 1 1

00:01:23.600 --> 00:01:23.610
computes a 1 1 equals say point of Z 1 1
 

00:01:23.610 --> 00:01:26.660
computes a 1 1 equals say point of Z 1 1
like so so for both Zn a the notational

00:01:26.660 --> 00:01:26.670
like so so for both Zn a the notational
 

00:01:26.670 --> 00:01:30.710
like so so for both Zn a the notational
convention is that on a oh I DL here in

00:01:30.710 --> 00:01:30.720
convention is that on a oh I DL here in
 

00:01:30.720 --> 00:01:32.510
convention is that on a oh I DL here in
superscript square backers refers to

00:01:32.510 --> 00:01:32.520
superscript square backers refers to
 

00:01:32.520 --> 00:01:34.850
superscript square backers refers to
layer number and the I subscript here

00:01:34.850 --> 00:01:34.860
layer number and the I subscript here
 

00:01:34.860 --> 00:01:38.120
layer number and the I subscript here
refers to the nodes in that layer so the

00:01:38.120 --> 00:01:38.130
refers to the nodes in that layer so the
 

00:01:38.130 --> 00:01:40.219
refers to the nodes in that layer so the
node will be looking at is layer 1 that

00:01:40.219 --> 00:01:40.229
node will be looking at is layer 1 that
 

00:01:40.229 --> 00:01:42.560
node will be looking at is layer 1 that
is a hidden layer node 1 so that's why

00:01:42.560 --> 00:01:42.570
is a hidden layer node 1 so that's why
 

00:01:42.570 --> 00:01:44.690
is a hidden layer node 1 so that's why
the superscript and subscript were on

00:01:44.690 --> 00:01:44.700
the superscript and subscript were on
 

00:01:44.700 --> 00:01:47.450
the superscript and subscript were on
both 1 1 so that little circle that

00:01:47.450 --> 00:01:47.460
both 1 1 so that little circle that
 

00:01:47.460 --> 00:01:49.010
both 1 1 so that little circle that
first node in a neural network

00:01:49.010 --> 00:01:49.020
first node in a neural network
 

00:01:49.020 --> 00:01:51.620
first node in a neural network
represents carrying out these two steps

00:01:51.620 --> 00:01:51.630
represents carrying out these two steps
 

00:01:51.630 --> 00:01:53.450
represents carrying out these two steps
of computation now let's look at the

00:01:53.450 --> 00:01:53.460
of computation now let's look at the
 

00:01:53.460 --> 00:01:55.730
of computation now let's look at the
second node in your network the second

00:01:55.730 --> 00:01:55.740
second node in your network the second
 

00:01:55.740 --> 00:01:57.440
second node in your network the second
node in a hidden layer comes in your

00:01:57.440 --> 00:01:57.450
node in a hidden layer comes in your
 

00:01:57.450 --> 00:01:59.780
node in a hidden layer comes in your
network similar to the logistic

00:01:59.780 --> 00:01:59.790
network similar to the logistic
 

00:01:59.790 --> 00:02:02.090
network similar to the logistic
regression unit on the left this little

00:02:02.090 --> 00:02:02.100
regression unit on the left this little
 

00:02:02.100 --> 00:02:03.920
regression unit on the left this little
circle represents two steps of

00:02:03.920 --> 00:02:03.930
circle represents two steps of
 

00:02:03.930 --> 00:02:05.840
circle represents two steps of
computation the first step is a

00:02:05.840 --> 00:02:05.850
computation the first step is a
 

00:02:05.850 --> 00:02:08.779
computation the first step is a
confusing Z this is still layer 1 the

00:02:08.779 --> 00:02:08.789
confusing Z this is still layer 1 the
 

00:02:08.789 --> 00:02:11.710
confusing Z this is still layer 1 the
now is the second note equals W Tron's

00:02:11.710 --> 00:02:11.720
now is the second note equals W Tron's
 

00:02:11.720 --> 00:02:17.890
now is the second note equals W Tron's
x+ v 2 and then a &amp; 2 equals sigmoid of

00:02:17.890 --> 00:02:17.900
x+ v 2 and then a &amp; 2 equals sigmoid of
 

00:02:17.900 --> 00:02:20.260
x+ v 2 and then a &amp; 2 equals sigmoid of
z12 and again feel free to pause the

00:02:20.260 --> 00:02:20.270
z12 and again feel free to pause the
 

00:02:20.270 --> 00:02:21.910
z12 and again feel free to pause the
video if you want that you can double

00:02:21.910 --> 00:02:21.920
video if you want that you can double
 

00:02:21.920 --> 00:02:23.800
video if you want that you can double
check that B superscript and subscript

00:02:23.800 --> 00:02:23.810
check that B superscript and subscript
 

00:02:23.810 --> 00:02:26.560
check that B superscript and subscript
notation is consistent with what we have

00:02:26.560 --> 00:02:26.570
notation is consistent with what we have
 

00:02:26.570 --> 00:02:28.750
notation is consistent with what we have
written here above in purple so we'll

00:02:28.750 --> 00:02:28.760
written here above in purple so we'll
 

00:02:28.760 --> 00:02:31.360
written here above in purple so we'll
talk through the first two hidden units

00:02:31.360 --> 00:02:31.370
talk through the first two hidden units
 

00:02:31.370 --> 00:02:33.850
talk through the first two hidden units
in the neural network on hidden units 3

00:02:33.850 --> 00:02:33.860
in the neural network on hidden units 3
 

00:02:33.860 --> 00:02:37.090
in the neural network on hidden units 3
&amp; 4 also represents some computations so

00:02:37.090 --> 00:02:37.100
&amp; 4 also represents some computations so
 

00:02:37.100 --> 00:02:39.400
&amp; 4 also represents some computations so
now let me take this pair of equations

00:02:39.400 --> 00:02:39.410
now let me take this pair of equations
 

00:02:39.410 --> 00:02:42.520
now let me take this pair of equations
and this pair of equations and let's

00:02:42.520 --> 00:02:42.530
and this pair of equations and let's
 

00:02:42.530 --> 00:02:44.590
and this pair of equations and let's
copy them to the next line so here's our

00:02:44.590 --> 00:02:44.600
copy them to the next line so here's our
 

00:02:44.600 --> 00:02:47.380
copy them to the next line so here's our
network and here's the first and there's

00:02:47.380 --> 00:02:47.390
network and here's the first and there's
 

00:02:47.390 --> 00:02:49.420
network and here's the first and there's
the second equations they've worked on

00:02:49.420 --> 00:02:49.430
the second equations they've worked on
 

00:02:49.430 --> 00:02:53.170
the second equations they've worked on
previously for the first and the second

00:02:53.170 --> 00:02:53.180
previously for the first and the second
 

00:02:53.180 --> 00:02:55.330
previously for the first and the second
hidden units if you then go through and

00:02:55.330 --> 00:02:55.340
hidden units if you then go through and
 

00:02:55.340 --> 00:02:57.430
hidden units if you then go through and
write out the corresponding equations

00:02:57.430 --> 00:02:57.440
write out the corresponding equations
 

00:02:57.440 --> 00:02:59.860
write out the corresponding equations
for the third and fourth hidden units

00:02:59.860 --> 00:02:59.870
for the third and fourth hidden units
 

00:02:59.870 --> 00:03:02.170
for the third and fourth hidden units
you get the following and those make

00:03:02.170 --> 00:03:02.180
you get the following and those make
 

00:03:02.180 --> 00:03:04.660
you get the following and those make
sure this notation is clear this is the

00:03:04.660 --> 00:03:04.670
sure this notation is clear this is the
 

00:03:04.670 --> 00:03:08.020
sure this notation is clear this is the
vector W 1 1 this is a vector transpose

00:03:08.020 --> 00:03:08.030
vector W 1 1 this is a vector transpose
 

00:03:08.030 --> 00:03:10.840
vector W 1 1 this is a vector transpose
times X so that's what the superscript T

00:03:10.840 --> 00:03:10.850
times X so that's what the superscript T
 

00:03:10.850 --> 00:03:13.150
times X so that's what the superscript T
there represents this vector transpose

00:03:13.150 --> 00:03:13.160
there represents this vector transpose
 

00:03:13.160 --> 00:03:15.490
there represents this vector transpose
now as you might have guessed if you're

00:03:15.490 --> 00:03:15.500
now as you might have guessed if you're
 

00:03:15.500 --> 00:03:16.930
now as you might have guessed if you're
actually implementing in your network

00:03:16.930 --> 00:03:16.940
actually implementing in your network
 

00:03:16.940 --> 00:03:19.390
actually implementing in your network
doing this with a for loop seems really

00:03:19.390 --> 00:03:19.400
doing this with a for loop seems really
 

00:03:19.400 --> 00:03:21.640
doing this with a for loop seems really
inefficient so what we're going to do is

00:03:21.640 --> 00:03:21.650
inefficient so what we're going to do is
 

00:03:21.650 --> 00:03:24.970
inefficient so what we're going to do is
take these four equations and vectorize

00:03:24.970 --> 00:03:24.980
take these four equations and vectorize
 

00:03:24.980 --> 00:03:26.650
take these four equations and vectorize
so I'm going to start by showing how to

00:03:26.650 --> 00:03:26.660
so I'm going to start by showing how to
 

00:03:26.660 --> 00:03:29.620
so I'm going to start by showing how to
compute Z as a vector and it turns out

00:03:29.620 --> 00:03:29.630
compute Z as a vector and it turns out
 

00:03:29.630 --> 00:03:31.690
compute Z as a vector and it turns out
you could do it as follows let me take

00:03:31.690 --> 00:03:31.700
you could do it as follows let me take
 

00:03:31.700 --> 00:03:34.330
you could do it as follows let me take
these WS and stack them into a matrix

00:03:34.330 --> 00:03:34.340
these WS and stack them into a matrix
 

00:03:34.340 --> 00:03:38.259
these WS and stack them into a matrix
then you have W 1 1 transpose so that's

00:03:38.259 --> 00:03:38.269
then you have W 1 1 transpose so that's
 

00:03:38.269 --> 00:03:40.420
then you have W 1 1 transpose so that's
a row vector of the column vector

00:03:40.420 --> 00:03:40.430
a row vector of the column vector
 

00:03:40.430 --> 00:03:43.150
a row vector of the column vector
transpose gives you a row vector and W 1

00:03:43.150 --> 00:03:43.160
transpose gives you a row vector and W 1
 

00:03:43.160 --> 00:03:47.920
transpose gives you a row vector and W 1
2 transpose W 1 3 transpose of V 1 4

00:03:47.920 --> 00:03:47.930
2 transpose W 1 3 transpose of V 1 4
 

00:03:47.930 --> 00:03:50.590
2 transpose W 1 3 transpose of V 1 4
transpose and so this by stacking goes

00:03:50.590 --> 00:03:50.600
transpose and so this by stacking goes
 

00:03:50.600 --> 00:03:53.560
transpose and so this by stacking goes
from for W vectors together you end up

00:03:53.560 --> 00:03:53.570
from for W vectors together you end up
 

00:03:53.570 --> 00:03:55.539
from for W vectors together you end up
with a matrix so another way to think of

00:03:55.539 --> 00:03:55.549
with a matrix so another way to think of
 

00:03:55.549 --> 00:03:57.400
with a matrix so another way to think of
this is that we have for logistic

00:03:57.400 --> 00:03:57.410
this is that we have for logistic
 

00:03:57.410 --> 00:03:59.650
this is that we have for logistic
regression unions there and each of the

00:03:59.650 --> 00:03:59.660
regression unions there and each of the
 

00:03:59.660 --> 00:04:01.300
regression unions there and each of the
logistic regression you know is has a

00:04:01.300 --> 00:04:01.310
logistic regression you know is has a
 

00:04:01.310 --> 00:04:04.120
logistic regression you know is has a
corresponding parameter vector W and by

00:04:04.120 --> 00:04:04.130
corresponding parameter vector W and by
 

00:04:04.130 --> 00:04:06.160
corresponding parameter vector W and by
stacking those four vectors together you

00:04:06.160 --> 00:04:06.170
stacking those four vectors together you
 

00:04:06.170 --> 00:04:09.789
stacking those four vectors together you
end up with this 4 by 3 matrix so if you

00:04:09.789 --> 00:04:09.799
end up with this 4 by 3 matrix so if you
 

00:04:09.799 --> 00:04:12.070
end up with this 4 by 3 matrix so if you
then take this matrix and multiply it by

00:04:12.070 --> 00:04:12.080
then take this matrix and multiply it by
 

00:04:12.080 --> 00:04:15.880
then take this matrix and multiply it by
your input features x1 x2 x3 you end up

00:04:15.880 --> 00:04:15.890
your input features x1 x2 x3 you end up
 

00:04:15.890 --> 00:04:18.370
your input features x1 x2 x3 you end up
with by our matrix multiplication works

00:04:18.370 --> 00:04:18.380
with by our matrix multiplication works
 

00:04:18.380 --> 00:04:21.339
with by our matrix multiplication works
you end up with w1 1 transpose X W 1

00:04:21.339 --> 00:04:21.349
you end up with w1 1 transpose X W 1
 

00:04:21.349 --> 00:04:24.640
you end up with w1 1 transpose X W 1
this will be 2 1 transpose X

00:04:24.640 --> 00:04:24.650
this will be 2 1 transpose X
 

00:04:24.650 --> 00:04:28.629
this will be 2 1 transpose X
we 1 transpose X wo 1 transpose X and

00:04:28.629 --> 00:04:28.639
we 1 transpose X wo 1 transpose X and
 

00:04:28.639 --> 00:04:31.390
we 1 transpose X wo 1 transpose X and
then now let's not forget the bees so we

00:04:31.390 --> 00:04:31.400
then now let's not forget the bees so we
 

00:04:31.400 --> 00:04:36.279
then now let's not forget the bees so we
now add to this the vector e1 1 b12 b13

00:04:36.279 --> 00:04:36.289
now add to this the vector e1 1 b12 b13
 

00:04:36.289 --> 00:04:40.930
now add to this the vector e1 1 b12 b13
in 1/4 so that's basically this then

00:04:40.930 --> 00:04:40.940
in 1/4 so that's basically this then
 

00:04:40.940 --> 00:04:46.659
in 1/4 so that's basically this then
this gives b11 b12 b13 b14 and so you

00:04:46.659 --> 00:04:46.669
this gives b11 b12 b13 b14 and so you
 

00:04:46.669 --> 00:04:49.029
this gives b11 b12 b13 b14 and so you
see that each of the 4 rows of this

00:04:49.029 --> 00:04:49.039
see that each of the 4 rows of this
 

00:04:49.039 --> 00:04:51.700
see that each of the 4 rows of this
outcome correspond exactly to each of

00:04:51.700 --> 00:04:51.710
outcome correspond exactly to each of
 

00:04:51.710 --> 00:04:53.860
outcome correspond exactly to each of
these 4 rows each of these four

00:04:53.860 --> 00:04:53.870
these 4 rows each of these four
 

00:04:53.870 --> 00:04:56.230
these 4 rows each of these four
quantities that we had above so in other

00:04:56.230 --> 00:04:56.240
quantities that we had above so in other
 

00:04:56.240 --> 00:04:58.090
quantities that we had above so in other
words we've just shown that this thing

00:04:58.090 --> 00:04:58.100
words we've just shown that this thing
 

00:04:58.100 --> 00:05:02.890
words we've just shown that this thing
is therefore equal to V 1 1 V 1 to V 1 V

00:05:02.890 --> 00:05:02.900
is therefore equal to V 1 1 V 1 to V 1 V
 

00:05:02.900 --> 00:05:05.950
is therefore equal to V 1 1 V 1 to V 1 V
V 1 core right as defined here and maybe

00:05:05.950 --> 00:05:05.960
V 1 core right as defined here and maybe
 

00:05:05.960 --> 00:05:07.600
V 1 core right as defined here and maybe
not surprisingly we're going to call

00:05:07.600 --> 00:05:07.610
not surprisingly we're going to call
 

00:05:07.610 --> 00:05:10.060
not surprisingly we're going to call
this whole thing the vector V 1 which is

00:05:10.060 --> 00:05:10.070
this whole thing the vector V 1 which is
 

00:05:10.070 --> 00:05:11.890
this whole thing the vector V 1 which is
taken by stacking up these are

00:05:11.890 --> 00:05:11.900
taken by stacking up these are
 

00:05:11.900 --> 00:05:14.560
taken by stacking up these are
individuals of these into a column

00:05:14.560 --> 00:05:14.570
individuals of these into a column
 

00:05:14.570 --> 00:05:16.810
individuals of these into a column
vector when we're vectorizing one of the

00:05:16.810 --> 00:05:16.820
vector when we're vectorizing one of the
 

00:05:16.820 --> 00:05:19.330
vector when we're vectorizing one of the
rules of thumb that might help you

00:05:19.330 --> 00:05:19.340
rules of thumb that might help you
 

00:05:19.340 --> 00:05:20.950
rules of thumb that might help you
navigate this is that when we have

00:05:20.950 --> 00:05:20.960
navigate this is that when we have
 

00:05:20.960 --> 00:05:22.839
navigate this is that when we have
different nodes in a layer we'll stack

00:05:22.839 --> 00:05:22.849
different nodes in a layer we'll stack
 

00:05:22.849 --> 00:05:24.879
different nodes in a layer we'll stack
them vertically so that's why when you

00:05:24.879 --> 00:05:24.889
them vertically so that's why when you
 

00:05:24.889 --> 00:05:27.939
them vertically so that's why when you
have V 1 1 2 0 1 4 those correspond to

00:05:27.939 --> 00:05:27.949
have V 1 1 2 0 1 4 those correspond to
 

00:05:27.949 --> 00:05:30.159
have V 1 1 2 0 1 4 those correspond to
four different nodes in the hidden layer

00:05:30.159 --> 00:05:30.169
four different nodes in the hidden layer
 

00:05:30.169 --> 00:05:32.379
four different nodes in the hidden layer
and so we stack these four numbers

00:05:32.379 --> 00:05:32.389
and so we stack these four numbers
 

00:05:32.389 --> 00:05:34.890
and so we stack these four numbers
vertically to form the vector Z 1 and

00:05:34.890 --> 00:05:34.900
vertically to form the vector Z 1 and
 

00:05:34.900 --> 00:05:37.810
vertically to form the vector Z 1 and
reduce one more piece of notation this 4

00:05:37.810 --> 00:05:37.820
reduce one more piece of notation this 4
 

00:05:37.820 --> 00:05:40.149
reduce one more piece of notation this 4
by 3 matrix here which we obtained by

00:05:40.149 --> 00:05:40.159
by 3 matrix here which we obtained by
 

00:05:40.159 --> 00:05:43.839
by 3 matrix here which we obtained by
stacking the lower case you know W 1 1 W

00:05:43.839 --> 00:05:43.849
stacking the lower case you know W 1 1 W
 

00:05:43.849 --> 00:05:45.430
stacking the lower case you know W 1 1 W
1 2 and so on we're going to call this

00:05:45.430 --> 00:05:45.440
1 2 and so on we're going to call this
 

00:05:45.440 --> 00:05:49.029
1 2 and so on we're going to call this
matrix W Capital One and similarly this

00:05:49.029 --> 00:05:49.039
matrix W Capital One and similarly this
 

00:05:49.039 --> 00:05:51.760
matrix W Capital One and similarly this
vector or going to call B superscript 1

00:05:51.760 --> 00:05:51.770
vector or going to call B superscript 1
 

00:05:51.770 --> 00:05:53.710
vector or going to call B superscript 1
square bracket and so this is a four

00:05:53.710 --> 00:05:53.720
square bracket and so this is a four
 

00:05:53.720 --> 00:05:56.320
square bracket and so this is a four
point one vector so now we've computed Z

00:05:56.320 --> 00:05:56.330
point one vector so now we've computed Z
 

00:05:56.330 --> 00:05:59.680
point one vector so now we've computed Z
using this vector matrix notation the

00:05:59.680 --> 00:05:59.690
using this vector matrix notation the
 

00:05:59.690 --> 00:06:01.750
using this vector matrix notation the
last thing we need to do is also compute

00:06:01.750 --> 00:06:01.760
last thing we need to do is also compute
 

00:06:01.760 --> 00:06:04.240
last thing we need to do is also compute
these values of a and so probably won't

00:06:04.240 --> 00:06:04.250
these values of a and so probably won't
 

00:06:04.250 --> 00:06:06.339
these values of a and so probably won't
surprise you to see that we're going to

00:06:06.339 --> 00:06:06.349
surprise you to see that we're going to
 

00:06:06.349 --> 00:06:09.370
surprise you to see that we're going to
define a 1 as just stacking together

00:06:09.370 --> 00:06:09.380
define a 1 as just stacking together
 

00:06:09.380 --> 00:06:13.240
define a 1 as just stacking together
those activation values a11 to a14 so

00:06:13.240 --> 00:06:13.250
those activation values a11 to a14 so
 

00:06:13.250 --> 00:06:14.950
those activation values a11 to a14 so
just take these four values and stack

00:06:14.950 --> 00:06:14.960
just take these four values and stack
 

00:06:14.960 --> 00:06:17.170
just take these four values and stack
them together in a vector called

00:06:17.170 --> 00:06:17.180
them together in a vector called
 

00:06:17.180 --> 00:06:20.649
them together in a vector called
a1 and this is going to be sigmoid of z1

00:06:20.649 --> 00:06:20.659
a1 and this is going to be sigmoid of z1
 

00:06:20.659 --> 00:06:23.260
a1 and this is going to be sigmoid of z1
where there's no husband implantation of

00:06:23.260 --> 00:06:23.270
where there's no husband implantation of
 

00:06:23.270 --> 00:06:25.540
where there's no husband implantation of
the sigmoid function that takes in the

00:06:25.540 --> 00:06:25.550
the sigmoid function that takes in the
 

00:06:25.550 --> 00:06:27.550
the sigmoid function that takes in the
four elements of Z and applies the

00:06:27.550 --> 00:06:27.560
four elements of Z and applies the
 

00:06:27.560 --> 00:06:30.760
four elements of Z and applies the
sigmoid function element wise to it so

00:06:30.760 --> 00:06:30.770
sigmoid function element wise to it so
 

00:06:30.770 --> 00:06:31.460
sigmoid function element wise to it so
just a

00:06:31.460 --> 00:06:31.470
just a
 

00:06:31.470 --> 00:06:35.750
just a
we figured out that Z 1 is equal to w1

00:06:35.750 --> 00:06:35.760
we figured out that Z 1 is equal to w1
 

00:06:35.760 --> 00:06:38.480
we figured out that Z 1 is equal to w1
times the vector X plus the vector B 1

00:06:38.480 --> 00:06:38.490
times the vector X plus the vector B 1
 

00:06:38.490 --> 00:06:42.290
times the vector X plus the vector B 1
and a 1 is sigmoid times Z 1 let's just

00:06:42.290 --> 00:06:42.300
and a 1 is sigmoid times Z 1 let's just
 

00:06:42.300 --> 00:06:44.330
and a 1 is sigmoid times Z 1 let's just
copy this to the next slide and what we

00:06:44.330 --> 00:06:44.340
copy this to the next slide and what we
 

00:06:44.340 --> 00:06:46.100
copy this to the next slide and what we
see is that for the first layer of the

00:06:46.100 --> 00:06:46.110
see is that for the first layer of the
 

00:06:46.110 --> 00:06:48.380
see is that for the first layer of the
neural network given an input X we have

00:06:48.380 --> 00:06:48.390
neural network given an input X we have
 

00:06:48.390 --> 00:06:51.410
neural network given an input X we have
that Z 1 is equal to W 1 times X plus B

00:06:51.410 --> 00:06:51.420
that Z 1 is equal to W 1 times X plus B
 

00:06:51.420 --> 00:06:55.760
that Z 1 is equal to W 1 times X plus B
1 and a 1 is Sigma we took Z 1 and the

00:06:55.760 --> 00:06:55.770
1 and a 1 is Sigma we took Z 1 and the
 

00:06:55.770 --> 00:06:58.670
1 and a 1 is Sigma we took Z 1 and the
dimensions of this are 4 by 1 equals

00:06:58.670 --> 00:06:58.680
dimensions of this are 4 by 1 equals
 

00:06:58.680 --> 00:07:01.940
dimensions of this are 4 by 1 equals
this is a 4 by 3 matrix times a 3 by 1

00:07:01.940 --> 00:07:01.950
this is a 4 by 3 matrix times a 3 by 1
 

00:07:01.950 --> 00:07:05.270
this is a 4 by 3 matrix times a 3 by 1
vector plus a on 4 by 1 vector B and

00:07:05.270 --> 00:07:05.280
vector plus a on 4 by 1 vector B and
 

00:07:05.280 --> 00:07:08.000
vector plus a on 4 by 1 vector B and
this is 4 by 1 same dimensions and

00:07:08.000 --> 00:07:08.010
this is 4 by 1 same dimensions and
 

00:07:08.010 --> 00:07:11.870
this is 4 by 1 same dimensions and
remember that we said X is equal to a 0

00:07:11.870 --> 00:07:11.880
remember that we said X is equal to a 0
 

00:07:11.880 --> 00:07:15.650
remember that we said X is equal to a 0
right just like Y hat is also equal to a

00:07:15.650 --> 00:07:15.660
right just like Y hat is also equal to a
 

00:07:15.660 --> 00:07:17.840
right just like Y hat is also equal to a
2 so if you want you can actually take

00:07:17.840 --> 00:07:17.850
2 so if you want you can actually take
 

00:07:17.850 --> 00:07:21.800
2 so if you want you can actually take
this X and replace it with a 0 since a 0

00:07:21.800 --> 00:07:21.810
this X and replace it with a 0 since a 0
 

00:07:21.810 --> 00:07:23.840
this X and replace it with a 0 since a 0
is if you want it as an alias for the

00:07:23.840 --> 00:07:23.850
is if you want it as an alias for the
 

00:07:23.850 --> 00:07:26.030
is if you want it as an alias for the
vector of input features X now through a

00:07:26.030 --> 00:07:26.040
vector of input features X now through a
 

00:07:26.040 --> 00:07:27.950
vector of input features X now through a
similar derivation you can figure out

00:07:27.950 --> 00:07:27.960
similar derivation you can figure out
 

00:07:27.960 --> 00:07:30.590
similar derivation you can figure out
that the representation for the next

00:07:30.590 --> 00:07:30.600
that the representation for the next
 

00:07:30.600 --> 00:07:33.380
that the representation for the next
layer can also be written similarly

00:07:33.380 --> 00:07:33.390
layer can also be written similarly
 

00:07:33.390 --> 00:07:36.140
layer can also be written similarly
where what the output layer does is it

00:07:36.140 --> 00:07:36.150
where what the output layer does is it
 

00:07:36.150 --> 00:07:38.870
where what the output layer does is it
has associated with it so the parameters

00:07:38.870 --> 00:07:38.880
has associated with it so the parameters
 

00:07:38.880 --> 00:07:42.650
has associated with it so the parameters
W 2 and B 2 so W 2 in this case is going

00:07:42.650 --> 00:07:42.660
W 2 and B 2 so W 2 in this case is going
 

00:07:42.660 --> 00:07:45.590
W 2 and B 2 so W 2 in this case is going
to be a 1 by 4 matrix and B 2 is just a

00:07:45.590 --> 00:07:45.600
to be a 1 by 4 matrix and B 2 is just a
 

00:07:45.600 --> 00:07:48.350
to be a 1 by 4 matrix and B 2 is just a
real number as 1 by 1 and so V 2 is

00:07:48.350 --> 00:07:48.360
real number as 1 by 1 and so V 2 is
 

00:07:48.360 --> 00:07:51.080
real number as 1 by 1 and so V 2 is
going to be a real numbers right as a 1

00:07:51.080 --> 00:07:51.090
going to be a real numbers right as a 1
 

00:07:51.090 --> 00:07:53.030
going to be a real numbers right as a 1
by 1 matrix is going to be a 1 by 4

00:07:53.030 --> 00:07:53.040
by 1 matrix is going to be a 1 by 4
 

00:07:53.040 --> 00:07:57.020
by 1 matrix is going to be a 1 by 4
thing times a was 4 by 1 plus B 2 is 1

00:07:57.020 --> 00:07:57.030
thing times a was 4 by 1 plus B 2 is 1
 

00:07:57.030 --> 00:07:59.210
thing times a was 4 by 1 plus B 2 is 1
by 1 and so this gives you just a real

00:07:59.210 --> 00:07:59.220
by 1 and so this gives you just a real
 

00:07:59.220 --> 00:08:00.920
by 1 and so this gives you just a real
number and if you think of this loss

00:08:00.920 --> 00:08:00.930
number and if you think of this loss
 

00:08:00.930 --> 00:08:03.530
number and if you think of this loss
output unit as just being analogous to

00:08:03.530 --> 00:08:03.540
output unit as just being analogous to
 

00:08:03.540 --> 00:08:05.540
output unit as just being analogous to
logistic regression which had parameters

00:08:05.540 --> 00:08:05.550
logistic regression which had parameters
 

00:08:05.550 --> 00:08:10.280
logistic regression which had parameters
W and B W really plays in lagless real

00:08:10.280 --> 00:08:10.290
W and B W really plays in lagless real
 

00:08:10.290 --> 00:08:14.000
W and B W really plays in lagless real
to W 2 transpose or W 2's really W

00:08:14.000 --> 00:08:14.010
to W 2 transpose or W 2's really W
 

00:08:14.010 --> 00:08:16.700
to W 2 transpose or W 2's really W
transpose and B is equal to V 2 right

00:08:16.700 --> 00:08:16.710
transpose and B is equal to V 2 right
 

00:08:16.710 --> 00:08:18.920
transpose and B is equal to V 2 right
said were to you know cover up the left

00:08:18.920 --> 00:08:18.930
said were to you know cover up the left
 

00:08:18.930 --> 00:08:21.409
said were to you know cover up the left
of this network and ignore all that for

00:08:21.409 --> 00:08:21.419
of this network and ignore all that for
 

00:08:21.419 --> 00:08:23.810
of this network and ignore all that for
now then this is just this last output

00:08:23.810 --> 00:08:23.820
now then this is just this last output
 

00:08:23.820 --> 00:08:25.820
now then this is just this last output
unit is a lot like logistic regression

00:08:25.820 --> 00:08:25.830
unit is a lot like logistic regression
 

00:08:25.830 --> 00:08:27.740
unit is a lot like logistic regression
except that instead of writing the

00:08:27.740 --> 00:08:27.750
except that instead of writing the
 

00:08:27.750 --> 00:08:30.260
except that instead of writing the
parameters as WMV we're writing them as

00:08:30.260 --> 00:08:30.270
parameters as WMV we're writing them as
 

00:08:30.270 --> 00:08:33.920
parameters as WMV we're writing them as
W 2 and V 2 with dimensions one by four

00:08:33.920 --> 00:08:33.930
W 2 and V 2 with dimensions one by four
 

00:08:33.930 --> 00:08:37.579
W 2 and V 2 with dimensions one by four
and one by one so just a recap for

00:08:37.579 --> 00:08:37.589
and one by one so just a recap for
 

00:08:37.589 --> 00:08:39.650
and one by one so just a recap for
logistic regression to implement the

00:08:39.650 --> 00:08:39.660
logistic regression to implement the
 

00:08:39.660 --> 00:08:41.719
logistic regression to implement the
output or the influence prediction you

00:08:41.719 --> 00:08:41.729
output or the influence prediction you
 

00:08:41.729 --> 00:08:44.900
output or the influence prediction you
compute Z equals W transpose X plus B

00:08:44.900 --> 00:08:44.910
compute Z equals W transpose X plus B
 

00:08:44.910 --> 00:08:50.440
compute Z equals W transpose X plus B
and a y hat equals a equals sigmoid of z

00:08:50.440 --> 00:08:50.450
and a y hat equals a equals sigmoid of z
 

00:08:50.450 --> 00:08:53.480
and a y hat equals a equals sigmoid of z
when you have a new network with one

00:08:53.480 --> 00:08:53.490
when you have a new network with one
 

00:08:53.490 --> 00:08:55.160
when you have a new network with one
hidden layer what you need to implement

00:08:55.160 --> 00:08:55.170
hidden layer what you need to implement
 

00:08:55.170 --> 00:08:58.040
hidden layer what you need to implement
two computers output is just these four

00:08:58.040 --> 00:08:58.050
two computers output is just these four
 

00:08:58.050 --> 00:09:00.260
two computers output is just these four
equations and you can think of this as a

00:09:00.260 --> 00:09:00.270
equations and you can think of this as a
 

00:09:00.270 --> 00:09:02.870
equations and you can think of this as a
vectorized implementation of computing

00:09:02.870 --> 00:09:02.880
vectorized implementation of computing
 

00:09:02.880 --> 00:09:06.320
vectorized implementation of computing
the output of first these for logistic

00:09:06.320 --> 00:09:06.330
the output of first these for logistic
 

00:09:06.330 --> 00:09:07.670
the output of first these for logistic
regression units in the hidden layer

00:09:07.670 --> 00:09:07.680
regression units in the hidden layer
 

00:09:07.680 --> 00:09:10.070
regression units in the hidden layer
that's what this does and then this

00:09:10.070 --> 00:09:10.080
that's what this does and then this
 

00:09:10.080 --> 00:09:12.260
that's what this does and then this
which is regression in the output layer

00:09:12.260 --> 00:09:12.270
which is regression in the output layer
 

00:09:12.270 --> 00:09:13.610
which is regression in the output layer
which is what this does

00:09:13.610 --> 00:09:13.620
which is what this does
 

00:09:13.620 --> 00:09:15.710
which is what this does
I hope this description made sense but

00:09:15.710 --> 00:09:15.720
I hope this description made sense but
 

00:09:15.720 --> 00:09:18.110
I hope this description made sense but
takeaway is to compute the output of

00:09:18.110 --> 00:09:18.120
takeaway is to compute the output of
 

00:09:18.120 --> 00:09:20.000
takeaway is to compute the output of
this neural network all you need is

00:09:20.000 --> 00:09:20.010
this neural network all you need is
 

00:09:20.010 --> 00:09:22.490
this neural network all you need is
those four lines of code so now you've

00:09:22.490 --> 00:09:22.500
those four lines of code so now you've
 

00:09:22.500 --> 00:09:25.040
those four lines of code so now you've
seen how given a single input feature

00:09:25.040 --> 00:09:25.050
seen how given a single input feature
 

00:09:25.050 --> 00:09:27.350
seen how given a single input feature
vector at you can with four lines of

00:09:27.350 --> 00:09:27.360
vector at you can with four lines of
 

00:09:27.360 --> 00:09:29.180
vector at you can with four lines of
code compute the outputs of this new

00:09:29.180 --> 00:09:29.190
code compute the outputs of this new
 

00:09:29.190 --> 00:09:31.580
code compute the outputs of this new
network um similar to what we did for

00:09:31.580 --> 00:09:31.590
network um similar to what we did for
 

00:09:31.590 --> 00:09:33.470
network um similar to what we did for
the gist regression will also want to

00:09:33.470 --> 00:09:33.480
the gist regression will also want to
 

00:09:33.480 --> 00:09:35.480
the gist regression will also want to
vectorize across multiple training

00:09:35.480 --> 00:09:35.490
vectorize across multiple training
 

00:09:35.490 --> 00:09:38.570
vectorize across multiple training
examples and we'll see that by stacking

00:09:38.570 --> 00:09:38.580
examples and we'll see that by stacking
 

00:09:38.580 --> 00:09:40.340
examples and we'll see that by stacking
up training examples in different

00:09:40.340 --> 00:09:40.350
up training examples in different
 

00:09:40.350 --> 00:09:42.320
up training examples in different
columns in the matrix or just slight

00:09:42.320 --> 00:09:42.330
columns in the matrix or just slight
 

00:09:42.330 --> 00:09:44.960
columns in the matrix or just slight
modification to this you also similar to

00:09:44.960 --> 00:09:44.970
modification to this you also similar to
 

00:09:44.970 --> 00:09:46.820
modification to this you also similar to
what you saw in which is regression be

00:09:46.820 --> 00:09:46.830
what you saw in which is regression be
 

00:09:46.830 --> 00:09:49.310
what you saw in which is regression be
able to compute the output of this

00:09:49.310 --> 00:09:49.320
able to compute the output of this
 

00:09:49.320 --> 00:09:51.230
able to compute the output of this
neural network not just on one example

00:09:51.230 --> 00:09:51.240
neural network not just on one example
 

00:09:51.240 --> 00:09:53.300
neural network not just on one example
at a time belong your say your entire

00:09:53.300 --> 00:09:53.310
at a time belong your say your entire
 

00:09:53.310 --> 00:09:55.910
at a time belong your say your entire
inning set at a time so let's see the

00:09:55.910 --> 00:09:55.920
inning set at a time so let's see the
 

00:09:55.920 --> 00:09:59.480
inning set at a time so let's see the
details of that in the next video

