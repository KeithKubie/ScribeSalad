WEBVTT
Kind: captions
Language: en

00:00:01.350 --> 00:00:03.460
ALI AFSHAR: Today we're going
to be doing Office Hours for

00:00:03.460 --> 00:00:04.770
the Google Drive SDK.

00:00:04.770 --> 00:00:07.670
My name's Ali, this is Claudio,
and this is Alain.

00:00:07.670 --> 00:00:08.160
ALAIN VONGSOUVANH: Hi.

00:00:08.160 --> 00:00:10.380
ALI AFSHAR: And we're three
engineers on the Google Drive

00:00:10.380 --> 00:00:13.870
SDK developer relations team.

00:00:13.870 --> 00:00:16.730
So we're going to get
started today.

00:00:16.730 --> 00:00:19.905
If you don't know about Google
Drive SDK, we do our support

00:00:19.905 --> 00:00:21.030
on Stack Overflow.

00:00:21.030 --> 00:00:24.640
We find it's really useful to
get community engagement, and

00:00:24.640 --> 00:00:26.170
today we're going to go
through some of the

00:00:26.170 --> 00:00:29.515
interesting questions, and our
experts here are going to

00:00:29.515 --> 00:00:30.860
answer them for you.

00:00:30.860 --> 00:00:34.954
So let's get started
right away.

00:00:34.954 --> 00:00:39.760
The first question I've got is,
is it possible to get the

00:00:39.760 --> 00:00:41.870
owner for a Google Drive file?

00:00:44.530 --> 00:00:45.800
That's pretty self-explanatory.

00:00:45.800 --> 00:00:46.950
I won't go into the detail.

00:00:46.950 --> 00:00:50.040
We have a sharing system in
Google Drive, and part of that

00:00:50.040 --> 00:00:51.280
sharing system is an owner.

00:00:51.280 --> 00:00:53.070
Could you describe that slightly
for us, Claudio?

00:00:53.070 --> 00:00:54.990
How the permission
system works?

00:00:54.990 --> 00:00:57.360
CLAUDIO CHERUBINO: So for each
file you have, our users can

00:00:57.360 --> 00:00:59.730
have access to that file
with different roles.

00:00:59.730 --> 00:01:03.680
So obviously one of the users
will be the owner of the file,

00:01:03.680 --> 00:01:06.330
the guy who created the file.

00:01:06.330 --> 00:01:09.130
Or you could also transfer
ownership to another user.

00:01:09.130 --> 00:01:13.080
But also, you can have other
people allowed to access the

00:01:13.080 --> 00:01:16.900
file in a read-only mode in
their readers, or in a

00:01:16.900 --> 00:01:20.020
read-write mode in their
editors of writers.

00:01:20.020 --> 00:01:26.475
So what this guy's trying to do
is to have a programmatical

00:01:26.475 --> 00:01:31.870
way to find the owner of
the file in Drive.

00:01:31.870 --> 00:01:33.700
Let's say there are actually
two ways to

00:01:33.700 --> 00:01:36.140
do it at the moment.

00:01:36.140 --> 00:01:40.330
With the Google Drive API, the
new API we recently launched,

00:01:40.330 --> 00:01:46.010
each file has a set of metadata,
and that metadata

00:01:46.010 --> 00:01:50.640
includes a field called user
permission, which will list

00:01:50.640 --> 00:01:55.130
what the permission for
the current user is.

00:01:55.130 --> 00:02:01.200
So with this field, you can just
find out whether you are

00:02:01.200 --> 00:02:04.640
the owner or not, or if you're a
writer of if you're a reader

00:02:04.640 --> 00:02:05.990
on that file.

00:02:05.990 --> 00:02:09.410
A broader solution would require
using the documents

00:02:09.410 --> 00:02:15.290
list API, which is the older
API that interacts with the

00:02:15.290 --> 00:02:19.330
same resources that the
Drive API works with.

00:02:19.330 --> 00:02:26.100
And with the documents list API,
you can request ACL, so

00:02:26.100 --> 00:02:30.740
access control list feed for
each file or resource, and

00:02:30.740 --> 00:02:34.620
then from there, you will see
all the users that are listed,

00:02:34.620 --> 00:02:36.610
and for each of them, you can
get what permissions they

00:02:36.610 --> 00:02:39.212
have, all users and
groups as well.

00:02:39.212 --> 00:02:40.600
ALI AFSHAR: OK.

00:02:40.600 --> 00:02:44.764
And what happens if a file
doesn't have an owner?

00:02:44.764 --> 00:02:45.970
ALAIN VONGSOUVANH: I'm not
sure that's possible.

00:02:45.970 --> 00:02:47.380
ALI AFSHAR: That's a trick
question, sorry.

00:02:47.380 --> 00:02:49.040
CLAUDIO CHERUBINO: I'm not sure
that's possible, because

00:02:49.040 --> 00:02:50.370
you cannot delete the owner.

00:02:50.370 --> 00:02:53.190
You can pass the ownership
to someone else.

00:02:53.190 --> 00:02:53.710
ALI AFSHAR: Exactly.

00:02:53.710 --> 00:02:56.070
CLAUDIO CHERUBINO: But you
cannot delete the owner.

00:02:56.070 --> 00:02:59.015
ALI AFSHAR: So all files in
Google Drive must have at

00:02:59.015 --> 00:02:59.790
least one owner.

00:02:59.790 --> 00:03:01.780
CLAUDIO CHERUBINO: Yeah.

00:03:01.780 --> 00:03:04.330
I mean, this is something that
happened in the enterprise

00:03:04.330 --> 00:03:06.110
environment.

00:03:06.110 --> 00:03:10.710
Let's say you, in your company,
have documents, and

00:03:10.710 --> 00:03:13.220
one document is owned by one
of the employees, and the

00:03:13.220 --> 00:03:17.250
employee leaves the company.

00:03:17.250 --> 00:03:20.080
Of course we need to assign
that document ownership to

00:03:20.080 --> 00:03:20.920
someone else.

00:03:20.920 --> 00:03:25.880
So domain administrators can
change the ownership of a

00:03:25.880 --> 00:03:28.280
document using things like
super administrator

00:03:28.280 --> 00:03:31.010
permissions, and they can still
take ownership of the

00:03:31.010 --> 00:03:33.760
document so that the document
is not lost.

00:03:33.760 --> 00:03:34.940
ALI AFSHAR: Fantastic.

00:03:34.940 --> 00:03:37.950
Thank you very much.

00:03:37.950 --> 00:03:39.280
Let's get on to our
next question.

00:03:41.900 --> 00:03:46.310
Does anyone know if the Google
Docs API supports commenting?

00:03:46.310 --> 00:03:48.980
I'm trying to build an app that
allows me to add comments

00:03:48.980 --> 00:03:52.750
and tagging to files
on G Drive.

00:03:52.750 --> 00:03:55.790
Now if you've ever used Google
Docs, you know that there's a

00:03:55.790 --> 00:03:58.160
pretty cool-- well, we think
pretty cool-- commenting

00:03:58.160 --> 00:04:01.540
system, in that you can write a
comment against any piece of

00:04:01.540 --> 00:04:04.280
text in a document, and then
people can reply to those

00:04:04.280 --> 00:04:06.440
comments, and people can
resolve those comments.

00:04:06.440 --> 00:04:11.330
And it's a really good way of
collaboratively iterating and

00:04:11.330 --> 00:04:13.430
working on a document.

00:04:13.430 --> 00:04:16.300
Now this question is asking,
can you programmatically

00:04:16.300 --> 00:04:20.120
access the comment stream
using the Google Docs or

00:04:20.120 --> 00:04:21.842
Google Drive API?

00:04:21.842 --> 00:04:22.200
Alain?

00:04:22.200 --> 00:04:23.920
ALAIN VONGSOUVANH: Well,
unfortunately this is not

00:04:23.920 --> 00:04:28.050
available through any of our
APIs, or anywhere through the

00:04:28.050 --> 00:04:31.040
documents list API,
nor the Drive API.

00:04:31.040 --> 00:04:33.950
But it's actually a good
feature to have.

00:04:33.950 --> 00:04:39.080
So we are discussing having it,
and we hear your feedback,

00:04:39.080 --> 00:04:41.740
and we'll get back to you
as soon as we have

00:04:41.740 --> 00:04:42.460
more updates on that.

00:04:42.460 --> 00:04:45.030
ALI AFSHAR: It's one of the
more requested features.

00:04:45.030 --> 00:04:47.520
CLAUDIO CHERUBINO: I mean, it's
something people love in

00:04:47.520 --> 00:04:50.350
Google Docs, is that they can
add comments and collaborate

00:04:50.350 --> 00:04:51.610
on the same document.

00:04:51.610 --> 00:04:54.785
And actually it's probably worth
mentioning that you can

00:04:54.785 --> 00:04:57.820
only have comments on native
Google Docs, right?

00:04:57.820 --> 00:04:58.500
ALI AFSHAR: That's right.

00:04:58.500 --> 00:05:01.800
CLAUDIO CHERUBINO: So you can
store any kind of files on

00:05:01.800 --> 00:05:05.080
Google Drive, but you only
collaborate on them and add

00:05:05.080 --> 00:05:08.672
comments with native
Google Docs.

00:05:08.672 --> 00:05:11.450
So there's also a second
part of the question.

00:05:11.450 --> 00:05:13.880
ALI AFSHAR: Now they're asking
for a tagging API.

00:05:13.880 --> 00:05:16.970
I'm not sure exactly what that
means, but I guess it means

00:05:16.970 --> 00:05:20.850
it's trying to work out a way of
adding custom metadata, ie,

00:05:20.850 --> 00:05:22.780
application-specific,
non-Google Drive

00:05:22.780 --> 00:05:25.990
metadata to a file.

00:05:25.990 --> 00:05:27.290
Claudio, you're going to
answer that for us?

00:05:27.290 --> 00:05:29.920
CLAUDIO CHERUBINO: Yeah, because
I suggested something

00:05:29.920 --> 00:05:33.120
on Stack Overflow, and
so there's no way to

00:05:33.120 --> 00:05:33.910
[? outcast ?] some metadata.

00:05:33.910 --> 00:05:39.360
But there is a field that is
called description, which is a

00:05:39.360 --> 00:05:42.800
string field, so you can
basically put whatever you

00:05:42.800 --> 00:05:44.210
want, any kind of data there.

00:05:44.210 --> 00:05:47.160
And I assume that this
question was

00:05:47.160 --> 00:05:49.160
about string tags.

00:05:52.090 --> 00:05:54.970
Developers can use the
description field, which is

00:05:54.970 --> 00:05:57.870
available through the docs list
API, the documents list

00:05:57.870 --> 00:06:02.870
API, and store, let's say, a
space-separated list of tags

00:06:02.870 --> 00:06:06.610
or a comma-separated list of
tags there, and then build

00:06:06.610 --> 00:06:10.040
their logic, assuming that the
description is actually a

00:06:10.040 --> 00:06:10.980
container for tags.

00:06:10.980 --> 00:06:13.140
ALI AFSHAR: Now the beauty of
using that description field

00:06:13.140 --> 00:06:16.840
is that when you then search,
either in the docs user

00:06:16.840 --> 00:06:19.440
interface-- the user can do
a search just by typing--

00:06:19.440 --> 00:06:22.980
or if you do a search query
using the documents list API,

00:06:22.980 --> 00:06:25.210
that description field
is queried.

00:06:25.210 --> 00:06:28.240
So if you put 20 tags, and one
of them is banana and one of

00:06:28.240 --> 00:06:31.790
them is fruit, if you do a
search for fruit, your

00:06:31.790 --> 00:06:33.010
documents will appear.

00:06:33.010 --> 00:06:34.850
So it's not just a hack.

00:06:34.850 --> 00:06:37.480
It's actually a pretty good
way of tagging and then

00:06:37.480 --> 00:06:41.380
retrieving the data that
is tagged with that.

00:06:41.380 --> 00:06:43.510
CLAUDIO CHERUBINO: I'm actually
thinking about a kind

00:06:43.510 --> 00:06:45.310
of hacky solution,
another one.

00:06:45.310 --> 00:06:46.800
ALI AFSHAR: Bring it on.

00:06:46.800 --> 00:06:49.960
CLAUDIO CHERUBINO: So you know
with the Drive API, we have

00:06:49.960 --> 00:06:53.520
indexable tags that third-party

00:06:53.520 --> 00:06:55.920
applications can set.

00:06:55.920 --> 00:07:01.190
Tags are not exactly indexable
text, but maybe you can still

00:07:01.190 --> 00:07:02.020
want to use them.

00:07:02.020 --> 00:07:05.780
And any piece of information you
put in the indexable text

00:07:05.780 --> 00:07:07.340
will be searchable as well.

00:07:07.340 --> 00:07:12.910
So you'll have about the same
functionality using another

00:07:12.910 --> 00:07:15.105
field, which is also available
with the new API.

00:07:15.105 --> 00:07:18.460
ALAIN VONGSOUVANH: [INAUDIBLE]
is that the indexable tags is

00:07:18.460 --> 00:07:19.270
write-only.

00:07:19.270 --> 00:07:23.080
So neither the user or the
developer has access to this

00:07:23.080 --> 00:07:25.110
field once it is set.

00:07:25.110 --> 00:07:30.550
So if you want to tag a document
without it being

00:07:30.550 --> 00:07:34.140
displayed to other applications
or the user, this

00:07:34.140 --> 00:07:35.160
is the way to go.

00:07:35.160 --> 00:07:39.680
If you want the user to see the
tag and appear on the web

00:07:39.680 --> 00:07:42.330
UI in other applications,
you should use

00:07:42.330 --> 00:07:43.810
[? VA Description ?].

00:07:43.810 --> 00:07:46.180
ALI AFSHAR: So we mentioned
indexable text, and we know

00:07:46.180 --> 00:07:48.410
what that means.

00:07:48.410 --> 00:07:50.460
Can you explain what indexable
text is, Alain?

00:07:50.460 --> 00:07:53.700
ALAIN VONGSOUVANH: Yes, so the
Drive API lets you create two

00:07:53.700 --> 00:07:54.600
types of documents.

00:07:54.600 --> 00:07:58.390
You can either choose to store
the data behind the file on

00:07:58.390 --> 00:08:02.070
Drive or store the data in your
own server if you already

00:08:02.070 --> 00:08:06.430
have an existing application
and an existing database.

00:08:06.430 --> 00:08:10.490
One of the cool features on
Drive, on the web UI, is to be

00:08:10.490 --> 00:08:11.860
able to search documents.

00:08:11.860 --> 00:08:15.170
But if data is stored on your
backend, we have no way to

00:08:15.170 --> 00:08:16.650
know what's storing your data.

00:08:16.650 --> 00:08:22.660
So developers can set data in
the indexable text field so

00:08:22.660 --> 00:08:27.250
that Drive knows how to index
your files, and users can

00:08:27.250 --> 00:08:29.650
search your files and
have them appear

00:08:29.650 --> 00:08:31.904
on the search results.

00:08:31.904 --> 00:08:32.740
ALI AFSHAR: OK.

00:08:32.740 --> 00:08:35.330
Thanks.

00:08:35.330 --> 00:08:36.039
CLAUDIO CHERUBINO: Maybe another
question related to

00:08:36.039 --> 00:08:38.530
that is that, can you add
indexable text to any kind of

00:08:38.530 --> 00:08:41.750
documents, or any
kind of files?

00:08:41.750 --> 00:08:45.490
ALAIN VONGSOUVANH: I would
suggest that it's used only on

00:08:45.490 --> 00:08:48.780
the shortcut, but I believe
you can set that on both.

00:08:48.780 --> 00:08:51.640
ALI AFSHAR: So I think you can
set it on both, but obviously

00:08:51.640 --> 00:08:54.550
there's a problem there, because
documents that Google

00:08:54.550 --> 00:08:57.870
Docs knows about and stores
there, sometimes Google Drive

00:08:57.870 --> 00:09:00.340
does do indexing of its own--
for example, a photo,

00:09:00.340 --> 00:09:00.950
something like that.

00:09:00.950 --> 00:09:02.330
It sets the indexable text.

00:09:02.330 --> 00:09:05.620
So if you in the API set the
indexable text, then you're

00:09:05.620 --> 00:09:08.510
overwriting, potentially,
what we've got written.

00:09:08.510 --> 00:09:08.690
CLAUDIO CHERUBINO: Yeah.

00:09:08.690 --> 00:09:10.940
But if you have a banner
file format that--

00:09:10.940 --> 00:09:11.750
ALI AFSHAR: Yeah,
we've done that.

00:09:11.750 --> 00:09:12.720
CLAUDIO CHERUBINO: I mean, your
application is the only

00:09:12.720 --> 00:09:15.810
one that uses it, and you're
sure that we don't understand

00:09:15.810 --> 00:09:17.240
anything out of it.

00:09:17.240 --> 00:09:19.890
Then you should probably provide
us with indexable text

00:09:19.890 --> 00:09:21.950
so that we can give
users [INAUDIBLE].

00:09:21.950 --> 00:09:24.480
ALI AFSHAR: So, very much
depends on the use case.

00:09:24.480 --> 00:09:26.885
If you do have this use case,
get in touch with us, and we'd

00:09:26.885 --> 00:09:29.680
love to talk to you about it.

00:09:29.680 --> 00:09:32.280
CLAUDIO CHERUBINO: And by, well,
when we say talk with

00:09:32.280 --> 00:09:34.450
us, remember next week
is Google I/O.

00:09:34.450 --> 00:09:35.390
ALI AFSHAR: Absolutely,
Google I/O.

00:09:35.390 --> 00:09:38.610
CLAUDIO CHERUBINO: It's our
main event of the year.

00:09:38.610 --> 00:09:40.753
It's next week in San Francisco

00:09:40.753 --> 00:09:41.780
at the Moscone Center.

00:09:41.780 --> 00:09:46.530
We're all going to be there, and
we'd love to meet you and

00:09:46.530 --> 00:09:48.790
to, well, get your
feedback there.

00:09:48.790 --> 00:09:51.200
And of course, there will
be announcements.

00:09:51.200 --> 00:09:53.180
ALI AFSHAR: Of course there
will be announcements, as

00:09:53.180 --> 00:09:55.730
there are every year at I/O.
So, come and find us.

00:09:55.730 --> 00:09:58.190
We'll be in a Drive area if
you're attending that.

00:09:58.190 --> 00:10:01.840
So we'll all be there, as will
some of the important people

00:10:01.840 --> 00:10:03.200
in the Google Drive
[? UK ?] system.

00:10:03.200 --> 00:10:05.920
So this is really your chance
to come and speak to us face

00:10:05.920 --> 00:10:08.770
to face and tell us how great
we are, or tell us what we

00:10:08.770 --> 00:10:10.098
could be doing better.

00:10:10.098 --> 00:10:11.472
CLAUDIO CHERUBINO:
Better to best.

00:10:11.472 --> 00:10:12.850
[INAUDIBLE].

00:10:12.850 --> 00:10:14.380
ALI AFSHAR: So, yeah,
but please just

00:10:14.380 --> 00:10:16.340
keep it to good feedback.

00:10:16.340 --> 00:10:17.750
So, next question.

00:10:17.750 --> 00:10:19.870
I think we've got time
for a couple more.

00:10:19.870 --> 00:10:23.800
How to share a file to other
people using the

00:10:23.800 --> 00:10:25.900
Google Drive SDK.

00:10:25.900 --> 00:10:28.200
So, you've seen our
sharing model.

00:10:28.200 --> 00:10:30.560
Claudio has spoken about how you
retrieve the permissions.

00:10:30.560 --> 00:10:32.780
This is the other side of it,
how to add a permission to a

00:10:32.780 --> 00:10:35.180
Google Drive document.

00:10:35.180 --> 00:10:36.510
Who wants to talk about this?

00:10:36.510 --> 00:10:37.070
CLAUDIO CHERUBINO: You.

00:10:37.070 --> 00:10:37.750
ALI AFSHAR: Me?

00:10:37.750 --> 00:10:38.010
OK.

00:10:38.010 --> 00:10:41.340
So, as Claudio said, we've
got access control lists.

00:10:41.340 --> 00:10:43.970
Currently at the moment with
the Drive API, you can't

00:10:43.970 --> 00:10:46.110
perform this functionality.

00:10:46.110 --> 00:10:48.930
You will need to use the Google
Documents List API.

00:10:48.930 --> 00:10:52.560
Now, each document has a feed
that is essentially the

00:10:52.560 --> 00:10:53.660
permissions.

00:10:53.660 --> 00:10:56.550
We call them ACLs in the
Documents List API.

00:10:56.550 --> 00:10:59.480
And each of those permissions
has a person or a group of

00:10:59.480 --> 00:11:02.490
people or a domain that it
applies to, and it has a role

00:11:02.490 --> 00:11:03.680
associated with it.

00:11:03.680 --> 00:11:06.760
So you can say, I want
the domain google.com

00:11:06.760 --> 00:11:08.220
to be able to read--

00:11:08.220 --> 00:11:08.940
that's the role--

00:11:08.940 --> 00:11:09.860
this document.

00:11:09.860 --> 00:11:13.150
And additionally, we have
other little roles like

00:11:13.150 --> 00:11:14.880
commenting and that
kind of thing.

00:11:14.880 --> 00:11:17.950
It's all fairly well documented,
so check that out.

00:11:17.950 --> 00:11:19.030
So how do we add it?

00:11:19.030 --> 00:11:23.900
Well, essentially just post to
the ACL feed for a document,

00:11:23.900 --> 00:11:24.910
and that will do that.

00:11:24.910 --> 00:11:26.640
There's an extra thing there.

00:11:26.640 --> 00:11:29.190
In some situations,
you might have--

00:11:29.190 --> 00:11:31.270
well, in two specific
situations.

00:11:31.270 --> 00:11:36.940
One, you may have to add many,
many files, give one person

00:11:36.940 --> 00:11:38.400
permission to do many,
many files.

00:11:38.400 --> 00:11:40.110
Now, there's two quick
ways of doing that.

00:11:40.110 --> 00:11:42.740
The first one is you
can do batching.

00:11:42.740 --> 00:11:45.600
OK, so we allow batching
of ACLs.

00:11:45.600 --> 00:11:48.730
You send 100 at the same time
for the same file and that

00:11:48.730 --> 00:11:50.530
just saves you making
many requests.

00:11:50.530 --> 00:11:53.580
The other way of doing it is
you can move or create a

00:11:53.580 --> 00:11:57.230
folder and copy all these files
into that folder, and

00:11:57.230 --> 00:11:58.640
then just share the folder.

00:11:58.640 --> 00:12:00.250
So again, that will save
you some time.

00:12:00.250 --> 00:12:01.880
So there are some little
tricks with this.

00:12:01.880 --> 00:12:04.320
But currently you can't use the
Drive API unfortunately.

00:12:04.320 --> 00:12:06.130
Use the Documents List API.

00:12:06.130 --> 00:12:08.470
This is one of our most popular
functionalities

00:12:08.470 --> 00:12:11.990
because it's really good
to automate that.

00:12:11.990 --> 00:12:14.140
If you're in an organization,
you don't really want to do

00:12:14.140 --> 00:12:18.260
that one by one in the
Drive User Interface.

00:12:18.260 --> 00:12:19.820
CLAUDIO CHERUBINO: I think it's
very important to stress

00:12:19.820 --> 00:12:23.870
again that the Drive API and the
Documents List API work on

00:12:23.870 --> 00:12:25.100
the same resources.

00:12:25.100 --> 00:12:26.400
So you can mix the two.

00:12:26.400 --> 00:12:28.490
They have a different
security model.

00:12:28.490 --> 00:12:32.160
You can use one of them or the
other according to your needs.

00:12:32.160 --> 00:12:35.230
But I mean, if you need to use
the Documents List API and

00:12:35.230 --> 00:12:38.500
you're worried that your user
has upgraded to Drive, there

00:12:38.500 --> 00:12:40.410
is no problem at all there,
because they all

00:12:40.410 --> 00:12:41.830
use the same files.

00:12:41.830 --> 00:12:45.190
ALI AFSHAR: With the same files,
with the same IDs, it's

00:12:45.190 --> 00:12:45.850
the same data.

00:12:45.850 --> 00:12:48.670
So what you do in one will be
reflected in the other.

00:12:48.670 --> 00:12:50.860
It's exactly the same data.

00:12:50.860 --> 00:12:51.840
OK.

00:12:51.840 --> 00:12:52.350
Great.

00:12:52.350 --> 00:12:53.930
Thank you, Ali.

00:12:53.930 --> 00:12:54.170
CLAUDIO CHERUBINO:
Thank you, Ali.

00:12:54.170 --> 00:12:55.420
ALAIN VONGSOUVANH:
Thank you, Ali.

00:13:02.710 --> 00:13:03.948
CLAUDIO CHERUBINO: How to build
a desktop client for

00:13:03.948 --> 00:13:04.632
Google Drive?

00:13:04.632 --> 00:13:06.420
ALI AFSHAR: It's one of
my favorite questions.

00:13:06.420 --> 00:13:07.790
How to build a desktop client.

00:13:07.790 --> 00:13:08.570
ALAIN VONGSOUVANH: We've
heard it so many times.

00:13:08.570 --> 00:13:08.990
ALI AFSHAR: Yeah.

00:13:08.990 --> 00:13:11.995
I want to build a desktop
application for Windows OS and

00:13:11.995 --> 00:13:14.700
use Google Drive to save
some data in the cloud.

00:13:14.700 --> 00:13:18.430
CLAUDIO CHERUBINO: I would say
download a Google Drive

00:13:18.430 --> 00:13:20.370
application for Windows
that we provide.

00:13:20.370 --> 00:13:21.240
ALI AFSHAR: So that's
a great answer.

00:13:21.240 --> 00:13:22.360
CLAUDIO CHERUBINO: That's
a great answer.

00:13:22.360 --> 00:13:25.360
ALI AFSHAR: But perhaps this
user just wants a bit of Drive

00:13:25.360 --> 00:13:26.030
functionality.

00:13:26.030 --> 00:13:28.790
They just want to save some data
to Drive, and they don't

00:13:28.790 --> 00:13:29.940
necessarily want to--

00:13:29.940 --> 00:13:33.640
Actually, again, our Google
Drive client would be the best

00:13:33.640 --> 00:13:35.910
way because your application
could just copy it to a file,

00:13:35.910 --> 00:13:36.950
and we'd handle the sync.

00:13:36.950 --> 00:13:40.350
But if you really want to do
it yourself, currently, can

00:13:40.350 --> 00:13:42.650
you do this with the
Google Drive API?

00:13:42.650 --> 00:13:43.570
ALAIN VONGSOUVANH:
Unfortunately, no.

00:13:43.570 --> 00:13:46.850
The Google Drive API requires
that a user install the

00:13:46.850 --> 00:13:50.790
applications from the
Chrome web store.

00:13:50.790 --> 00:13:53.960
There have been many debates
about why we need to do that,

00:13:53.960 --> 00:13:56.110
so we are working on improving
the story here.

00:13:56.110 --> 00:13:59.570
But right now, the current
situation makes it impossible

00:13:59.570 --> 00:14:01.350
to use a Drive API for
a desktop client.

00:14:01.350 --> 00:14:03.280
ALI AFSHAR: So what would
this user use?

00:14:03.280 --> 00:14:05.050
ALAIN VONGSOUVANH: Well, as
Claudio and I mentioned

00:14:05.050 --> 00:14:07.240
earlier, [? to ?] document this
API, which works on the

00:14:07.240 --> 00:14:12.305
same resources and allow users
to write actually a desktop

00:14:12.305 --> 00:14:14.580
client that doesn't need to be
installed from the Chrome web

00:14:14.580 --> 00:14:19.090
store, and can work on the
same type of resources.

00:14:19.090 --> 00:14:19.770
ALI AFSHAR: OK.

00:14:19.770 --> 00:14:20.770
Thanks.

00:14:20.770 --> 00:14:22.460
CLAUDIO CHERUBINO: This question
is also very specific

00:14:22.460 --> 00:14:24.580
about C++ and Windows.

00:14:24.580 --> 00:14:26.850
Do we have any problems
with those?

00:14:26.850 --> 00:14:30.520
ALI AFSHAR: No, we love C++,
and we love Windows.

00:14:30.520 --> 00:14:33.590
CLAUDIO CHERUBINO: So we must
say that there's no client

00:14:33.590 --> 00:14:35.360
library for C++ that
we provide.

00:14:35.360 --> 00:14:35.562
ALAIN VONGSOUVANH:

00:14:35.562 --> 00:14:37.110
Google-supported client library.

00:14:37.110 --> 00:14:41.480
CLAUDIO CHERUBINO: But the
protocol is described in the

00:14:41.480 --> 00:14:45.340
Docs, and they're all
HTTP requests.

00:14:45.340 --> 00:14:47.260
ALI AFSHAR: HTTPS requests.

00:14:47.260 --> 00:14:48.710
CLAUDIO CHERUBINO:
HTTPS requests.

00:14:48.710 --> 00:14:53.040
So you can easily build your
client in any language.

00:14:53.040 --> 00:14:56.260
ALI AFSHAR: Any language that
can parse XML, essentially.

00:14:56.260 --> 00:14:56.520
ALAIN VONGSOUVANH: Yes.

00:14:56.520 --> 00:14:58.675
ALI AFSHAR: It can send
requests over HTTP.

00:14:58.675 --> 00:15:00.330
ALI AFSHAR: Yeah.

00:15:00.330 --> 00:15:03.370
ALI AFSHAR: So, sorry C++ users,
we do get that question

00:15:03.370 --> 00:15:05.060
occasionally.

00:15:05.060 --> 00:15:07.660
As far as I can tell from C++
developers, they love writing

00:15:07.660 --> 00:15:08.450
code anyway.

00:15:08.450 --> 00:15:10.448
So Alain?

00:15:10.448 --> 00:15:13.250
ALAIN VONGSOUVANH: Well,
I do love C++.

00:15:13.250 --> 00:15:16.710
Too bad I haven't really done
C++ in a long time, but as

00:15:16.710 --> 00:15:22.140
Claudio mentioned, the APIs, the
REST API, you just need an

00:15:22.140 --> 00:15:26.850
HTTP client to send data through
the wire, through the

00:15:26.850 --> 00:15:30.810
HTTP, and read data from the
API for HTTP as well, or

00:15:30.810 --> 00:15:35.550
HTTPS, and parse
and write XML.

00:15:35.550 --> 00:15:36.560
ALI AFSHAR: OK, thank you.

00:15:36.560 --> 00:15:40.530
So next question, possibly our
last question, because we'd

00:15:40.530 --> 00:15:42.260
like to talk about it a bit.

00:15:42.260 --> 00:15:46.350
The question is, I'm using the
Docs upload view in the Google

00:15:46.350 --> 00:15:49.180
picker to upload documents
to the Google Drive.

00:15:49.180 --> 00:15:52.080
However, I want to add content
to the description and the

00:15:52.080 --> 00:15:54.840
indexable text fields at
the time of uploads.

00:15:54.840 --> 00:15:56.920
What would be a simple
way to do this?

00:15:56.920 --> 00:15:58.800
So, Claudio, first, if--

00:15:58.800 --> 00:16:00.140
CLAUDIO CHERUBINO: I think we
should explaining what the--

00:16:00.140 --> 00:16:00.870
ALI AFSHAR: Explain what
the picker is.

00:16:00.870 --> 00:16:01.580
CLAUDIO CHERUBINO:
What a picker is.

00:16:01.580 --> 00:16:03.100
ALI AFSHAR: And then,
Alain, or one of you

00:16:03.100 --> 00:16:04.970
can explain the answer.

00:16:04.970 --> 00:16:06.445
So what was the picker?

00:16:06.445 --> 00:16:09.570
CLAUDIO CHERUBINO: The Picker
API is one of the APIs we

00:16:09.570 --> 00:16:10.990
provide to developers.

00:16:10.990 --> 00:16:14.940
It's part of the Google Drive
SDK, and it is a JavaScript

00:16:14.940 --> 00:16:21.530
API that you can use in your web
pages to get, upload, or

00:16:21.530 --> 00:16:24.370
download file picker dialogue
for free from us.

00:16:24.370 --> 00:16:27.930
So with a few lines of code,
you can integrate your web

00:16:27.930 --> 00:16:32.260
application with Drive and list
your files, or as in this

00:16:32.260 --> 00:16:38.470
case, you're also allowed to
upload files to Drive with a

00:16:38.470 --> 00:16:42.430
simple drag and drop from your
browser, or it can have the

00:16:42.430 --> 00:16:46.270
come and browse dialogue
from your environment.

00:16:46.270 --> 00:16:47.980
ALI AFSHAR: So I'm getting
that right, Claudio?

00:16:47.980 --> 00:16:50.720
Someone can just add two or
three lines of JavaScript.

00:16:50.720 --> 00:16:51.250
CLAUDIO CHERUBINO:
Let's say 10.

00:16:51.250 --> 00:16:54.130
ALI AFSHAR: 10 lines of
JavaScript to their page, and

00:16:54.130 --> 00:16:56.950
they will be able to pop up a
dialogue that looks exactly

00:16:56.950 --> 00:16:58.280
like a Google Doc dialogue.

00:16:58.280 --> 00:16:59.490
CLAUDIO CHERUBINO: Well, it
doesn't look exactly, because

00:16:59.490 --> 00:17:01.890
it is exactly the same
dialogue we use.

00:17:01.890 --> 00:17:04.619
And it's about 10 lines of
code, because you have to

00:17:04.619 --> 00:17:09.800
write maybe seven lines to
define the features you want.

00:17:09.800 --> 00:17:11.200
Let's say you want to
upload, or not.

00:17:11.200 --> 00:17:13.410
Let's say you want--

00:17:13.410 --> 00:17:14.230
ALAIN VONGSOUVANH:
[INAUDIBLE].

00:17:14.230 --> 00:17:15.760
CLAUDIO CHERUBINO:
Multiple views.

00:17:15.760 --> 00:17:17.960
You want multiple uploads
at the same time.

00:17:17.960 --> 00:17:22.060
And then you have to define a
callback that is the one that

00:17:22.060 --> 00:17:25.599
is called when the upload
process is complete, or when

00:17:25.599 --> 00:17:27.890
the user has selected a file.

00:17:27.890 --> 00:17:31.300
And yeah, we have sample
code in our Docs.

00:17:31.300 --> 00:17:35.410
And we also recently published
a blog post showing how to

00:17:35.410 --> 00:17:40.040
have both upload and picker
in the same dialogue.

00:17:40.040 --> 00:17:43.340
ALI AFSHAR: So now that we
know what the picker is,

00:17:43.340 --> 00:17:45.270
what's the upload view?

00:17:45.270 --> 00:17:48.270
What, you mean you can upload
files as well even in picker?

00:17:48.270 --> 00:17:51.520
CLAUDIO CHERUBINO: Yeah, so by
using this, you don't need to

00:17:51.520 --> 00:17:53.290
write code to upload
files to Drive.

00:17:53.290 --> 00:17:57.370
If you want to, you can just
pop up this dialogue using

00:17:57.370 --> 00:18:00.210
those few lines of
JavaScript code.

00:18:00.210 --> 00:18:05.070
And then the user can drag files
on it, and those files

00:18:05.070 --> 00:18:08.670
will be added to the user's
Google Drive account.

00:18:08.670 --> 00:18:09.480
ALI AFSHAR: Fantastic.

00:18:09.480 --> 00:18:12.640
So you don't need to write
any more code to do that?

00:18:12.640 --> 00:18:15.810
CLAUDIO CHERUBINO: Yeah, in
order to insert a file, the

00:18:15.810 --> 00:18:19.950
API requires you to send a post
request with specific

00:18:19.950 --> 00:18:24.120
parameters in the payload,
and different

00:18:24.120 --> 00:18:25.620
parameters of the request.

00:18:25.620 --> 00:18:28.570
With this, you just need to
say, I want an upload

00:18:28.570 --> 00:18:32.650
dialogue, and when the user is
done, I want to do this, which

00:18:32.650 --> 00:18:33.656
is a callback.

00:18:33.656 --> 00:18:34.090
ALI AFSHAR: OK.

00:18:34.090 --> 00:18:35.240
Perfect.

00:18:35.240 --> 00:18:37.040
So I won't rush an
extra question.

00:18:37.040 --> 00:18:37.860
I think that's [INAUDIBLE].

00:18:37.860 --> 00:18:39.240
ALAIN VONGSOUVANH: No, there's a
second part of the question.

00:18:39.240 --> 00:18:40.010
ALI AFSHAR: Oh, is there
a second part?

00:18:40.010 --> 00:18:41.890
CLAUDIO CHERUBINO: Yeah, the
second part was how to add

00:18:41.890 --> 00:18:44.275
some metadata to the
uploaded file.

00:18:44.275 --> 00:18:45.210
ALI AFSHAR: That was
the important pant.

00:18:45.210 --> 00:18:45.890
My apologies.

00:18:45.890 --> 00:18:49.590
How do you add extra data for
the description or indexable

00:18:49.590 --> 00:18:49.910
text fields?

00:18:49.910 --> 00:18:50.670
CLAUDIO CHERUBINO: And the
question is specifically about

00:18:50.670 --> 00:18:53.610
description and indexable
text fields we

00:18:53.610 --> 00:18:56.000
talked about earlier.

00:18:56.000 --> 00:18:58.405
And unfortunately, the
answer is you can't.

00:18:58.405 --> 00:18:59.790
ALAIN VONGSOUVANH: With
the Picker API.

00:18:59.790 --> 00:19:00.630
CLAUDIO CHERUBINO: With
the Picker API.

00:19:00.630 --> 00:19:00.960
ALAIN VONGSOUVANH:
No, you can't.

00:19:00.960 --> 00:19:02.780
ALI AFSHAR: So how would
you do it, Alain?

00:19:02.780 --> 00:19:04.550
ALAIN VONGSOUVANH: Well, if
you want to write, like, a

00:19:04.550 --> 00:19:08.120
full client-side application
only in JavaScript, you can

00:19:08.120 --> 00:19:11.820
use the JavaScript client
library that Google supports,

00:19:11.820 --> 00:19:13.180
which also can [INAUDIBLE]

00:19:13.180 --> 00:19:14.170
Google Drive API.

00:19:14.170 --> 00:19:17.910
So once the files are uploaded
to Drive, the callback will

00:19:17.910 --> 00:19:21.340
provide you with a file ID, and
you can use this file ID

00:19:21.340 --> 00:19:26.620
to send an update request to the
API to add the description

00:19:26.620 --> 00:19:29.410
and the indexable text.

00:19:29.410 --> 00:19:30.890
That will require
two requests.

00:19:30.890 --> 00:19:34.020
That's unfortunate, but might
be the easiest way to do it.

00:19:34.020 --> 00:19:36.880
And the client library's very
easy to use as well.

00:19:36.880 --> 00:19:40.510
A few lines of code, I would
say one or two lines for

00:19:40.510 --> 00:19:41.480
authorization.

00:19:41.480 --> 00:19:44.080
And this should be handled
already by your code.

00:19:44.080 --> 00:19:47.590
And the same thing, a few lines
of code to send the

00:19:47.590 --> 00:19:50.740
update request.

00:19:50.740 --> 00:19:51.466
ALI AFSHAR: Perfect, OK.

00:19:51.466 --> 00:19:51.830
Perfect.

00:19:51.830 --> 00:19:52.310
All right.

00:19:52.310 --> 00:19:53.680
Sorry to cut you off halfway
through that one.

00:19:53.680 --> 00:19:55.790
ALAIN VONGSOUVANH: No worries.

00:19:55.790 --> 00:19:57.680
ALI AFSHAR: Right.

00:19:57.680 --> 00:19:59.810
Thank you for coming to
our Office Hours.

00:19:59.810 --> 00:20:00.920
There's just a few questions.

00:20:00.920 --> 00:20:04.820
We'll have different types of
GDL, Google Developer Live,

00:20:04.820 --> 00:20:07.510
events throughout the course of
the week, and every week,

00:20:07.510 --> 00:20:09.350
but hopefully we'll
be repeating this.

00:20:09.350 --> 00:20:11.460
So keep asking your Stack
Overflow questions.

00:20:11.460 --> 00:20:13.490
We enjoy answering them
on Stack Overflow

00:20:13.490 --> 00:20:14.790
and online as well.

00:20:14.790 --> 00:20:16.020
So thank you very much.

00:20:16.020 --> 00:20:17.670
See you at I/O if
you're coming.

00:20:17.670 --> 00:20:18.850
ALAIN VONGSOUVANH: Yeah,
hope to see you at I/O.

00:20:18.850 --> 00:20:20.280
ALI AFSHAR: So goodbye
from me.

00:20:20.280 --> 00:20:21.420
ALAIN VONGSOUVANH: Goodbye.

00:20:21.420 --> 00:20:23.440
The events will be
a live stream at

00:20:23.440 --> 00:20:24.600
Google I/O live stream.

00:20:24.600 --> 00:20:26.530
So if you're not attending
in person,

00:20:26.530 --> 00:20:27.840
please follow us online.

00:20:27.840 --> 00:20:28.590
CLAUDIO CHERUBINO: And this
is the time for a

00:20:28.590 --> 00:20:29.600
shameless plug, right?

00:20:29.600 --> 00:20:30.430
ALI AFSHAR: What do you
mean a shameless plug?

00:20:30.430 --> 00:20:32.680
CLAUDIO CHERUBINO: When we say
that Alain and I are going to

00:20:32.680 --> 00:20:36.360
present about Android
development for Drive at I/O.

00:20:36.360 --> 00:20:38.850
And we know we've got so many
questions about it, so we're

00:20:38.850 --> 00:20:40.440
going to talk about
it next week.

00:20:40.440 --> 00:20:40.890
ALAIN VONGSOUVANH:
Exciting time.

00:20:40.890 --> 00:20:42.290
ALI AFSHAR: Shameless plug.

00:20:42.290 --> 00:20:43.710
ALI AFSHAR: It's not even
shameless if you're into

00:20:43.710 --> 00:20:45.610
Android and you want to
write Drive apps.

00:20:45.610 --> 00:20:47.410
Come along and see these guys.

00:20:47.410 --> 00:20:49.770
There will be other
talks as well.

00:20:49.770 --> 00:20:51.480
Great, so thanks very
much, everyone.

00:20:51.480 --> 00:20:51.520
CLAUDIO CHERUBINO: Thank you.

00:20:51.520 --> 00:20:52.450
ALI AFSHAR: And goodbye
from us.

00:20:52.450 --> 00:20:53.700
ALAIN VONGSOUVANH: Bye.

