WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.930
These two rules here form what is known more formally as the Collatz series

00:00:04.930 --> 00:00:10.410
named after the German mathematician Lothar Collatz and appeared somewhat erratic

00:00:10.410 --> 00:00:12.110
as I think you've seen with the program.

00:00:12.110 --> 00:00:15.440
Sometimes it will terminate very quickly for certain values of i

00:00:15.440 --> 00:00:20.240
and sometimes actually it will behave super eratic and it will go up and down and up and down

00:00:20.240 --> 00:00:22.040
until it finally terminates.

00:00:22.040 --> 00:00:27.620
Now here's the thing, it has been conjectured that this algorithm here will terminate

00:00:27.620 --> 00:00:31.640
for any value of i but so far nobody has been able to prove that.

00:00:31.640 --> 00:00:36.550
So if we were given an integer for this function here for which the Collatz hypothesis

00:00:36.550 --> 00:00:40.390
that this algorithm here always terminates has not been verified

00:00:40.390 --> 00:00:42.630
then that would indeed be undecidable.

00:00:42.630 --> 00:00:46.930
Now truth be told, it would have to be a very large integer because the Collatz hypothesis

00:00:46.930 --> 00:00:50.110
has been verified for large numbers indeed.

00:00:50.110 --> 00:00:55.060
Nevertheless, once the integer is out of this range, we have no way of deciding

00:00:55.060 --> 00:00:57.100
whether this algorithm would terminate or not.

00:00:57.100 --> 00:01:01.790
The only thing we can do is run it so the Collatz problem or the Collatz hypothesis

00:01:01.790 --> 00:01:05.720
is an open mathematical problem and of course as you know it's not the only

00:01:05.720 --> 00:01:09.490
open mathematical problem so we could have other mathematical problems as well.

00:01:09.490 --> 00:01:11.000
But I want to show you something.

00:01:11.000 --> 00:01:15.750
So if we have an algorithm that solves the halting problem, so if we indeed had this algorithm halt

00:01:15.750 --> 00:01:22.840
what we could then do for example is write the following program for i = 1 to 10¹⁰⁰

00:01:22.840 --> 00:01:28.070
then run the Collatz rules for i so we start with i = 1 then we go to i = 2 and so on

00:01:28.070 --> 00:01:32.210
and then we feed this problem into the halting algorithm.

00:01:32.210 --> 00:01:37.220
And now if the halting algorithm says yes, then this means that the Collatz hypothesis is true

00:01:37.220 --> 00:01:43.110
for any number from 1 to 10¹⁰⁰ and if it says no then it means that there is some number

00:01:43.110 --> 00:01:46.260
for which the Collatz hypothesis is not true, which means that this part here

00:01:46.260 --> 00:01:48.850
would go into an infinite loop and then we can easily

00:01:48.850 --> 00:01:51.360
check this for larger and larger and larger numbers.

00:01:51.360 --> 00:01:54.000
An algorithm that would be able to solve the halting problem

00:01:54.000 --> 00:01:59.570
would actually be able to solve almost any open mathematical problem there is out there.

00:01:59.570 --> 00:02:03.350
Any mathematical problem that can be formulated as an algorithm

00:02:03.350 --> 00:02:06.470
could be decided by an algorithm that solves the halting problem.

00:02:06.470 --> 00:02:12.170
So this would almost be a kind of omission algorithm which also provides an intuition

00:02:12.170 --> 00:02:14.830
why this halting algorithm here cannot possibly exist.

00:02:14.830 --> 00:02:16.650
It would just simply be too powerful.

00:02:16.650 --> 99:59:59.000
It could answer almost any mathematical question that we can think of.

