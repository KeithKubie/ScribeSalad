WEBVTT
Kind: captions
Language: en

00:00:01.500 --> 00:00:05.050
[Music]

00:00:05.050 --> 00:00:05.060
[Music]
 

00:00:05.060 --> 00:00:07.450
[Music]
good morning everyone

00:00:07.450 --> 00:00:07.460
good morning everyone
 

00:00:07.460 --> 00:00:11.030
good morning everyone
I'm Kelly and I work with music and

00:00:11.030 --> 00:00:11.040
I'm Kelly and I work with music and
 

00:00:11.040 --> 00:00:13.549
I'm Kelly and I work with music and
audio app developers to help them launch

00:00:13.549 --> 00:00:13.559
audio app developers to help them launch
 

00:00:13.559 --> 00:00:15.680
audio app developers to help them launch
and build successful businesses on

00:00:15.680 --> 00:00:15.690
and build successful businesses on
 

00:00:15.690 --> 00:00:18.050
and build successful businesses on
Google Play we're really excited to be

00:00:18.050 --> 00:00:18.060
Google Play we're really excited to be
 

00:00:18.060 --> 00:00:19.790
Google Play we're really excited to be
here today to share with you both

00:00:19.790 --> 00:00:19.800
here today to share with you both
 

00:00:19.800 --> 00:00:21.830
here today to share with you both
technical and business best practices

00:00:21.830 --> 00:00:21.840
technical and business best practices
 

00:00:21.840 --> 00:00:24.259
technical and business best practices
for developers that require high quality

00:00:24.259 --> 00:00:24.269
for developers that require high quality
 

00:00:24.269 --> 00:00:28.250
for developers that require high quality
audio so our session is divided into

00:00:28.250 --> 00:00:28.260
audio so our session is divided into
 

00:00:28.260 --> 00:00:30.140
audio so our session is divided into
three parts I'm first going to share

00:00:30.140 --> 00:00:30.150
three parts I'm first going to share
 

00:00:30.150 --> 00:00:31.849
three parts I'm first going to share
with you tips from leading audio

00:00:31.849 --> 00:00:31.859
with you tips from leading audio
 

00:00:31.859 --> 00:00:34.040
with you tips from leading audio
developers who have successfully built

00:00:34.040 --> 00:00:34.050
developers who have successfully built
 

00:00:34.050 --> 00:00:36.799
developers who have successfully built
businesses on Android then Don is going

00:00:36.799 --> 00:00:36.809
businesses on Android then Don is going
 

00:00:36.809 --> 00:00:39.229
businesses on Android then Don is going
to join me on stage to share its common

00:00:39.229 --> 00:00:39.239
to join me on stage to share its common
 

00:00:39.239 --> 00:00:41.060
to join me on stage to share its common
technical hurdles that audio developers

00:00:41.060 --> 00:00:41.070
technical hurdles that audio developers
 

00:00:41.070 --> 00:00:44.060
technical hurdles that audio developers
face and ways to overcome them then Phil

00:00:44.060 --> 00:00:44.070
face and ways to overcome them then Phil
 

00:00:44.070 --> 00:00:46.160
face and ways to overcome them then Phil
will be announcing our latest a audio

00:00:46.160 --> 00:00:46.170
will be announcing our latest a audio
 

00:00:46.170 --> 00:00:48.110
will be announcing our latest a audio
framework that we think will help

00:00:48.110 --> 00:00:48.120
framework that we think will help
 

00:00:48.120 --> 00:00:50.000
framework that we think will help
developers reach your performance needs

00:00:50.000 --> 00:00:50.010
developers reach your performance needs
 

00:00:50.010 --> 00:00:52.580
developers reach your performance needs
then to wrap things up we'll have rollin

00:00:52.580 --> 00:00:52.590
then to wrap things up we'll have rollin
 

00:00:52.590 --> 00:00:55.400
then to wrap things up we'll have rollin
rollin CEO join us on stage for a really

00:00:55.400 --> 00:00:55.410
rollin CEO join us on stage for a really
 

00:00:55.410 --> 00:00:59.389
rollin CEO join us on stage for a really
cool live music demo so stick around so

00:00:59.389 --> 00:00:59.399
cool live music demo so stick around so
 

00:00:59.399 --> 00:01:01.970
cool live music demo so stick around so
I grew up in Los Angeles California in a

00:01:01.970 --> 00:01:01.980
I grew up in Los Angeles California in a
 

00:01:01.980 --> 00:01:04.759
I grew up in Los Angeles California in a
very musical family and I remember the

00:01:04.759 --> 00:01:04.769
very musical family and I remember the
 

00:01:04.769 --> 00:01:06.679
very musical family and I remember the
first time I stepped foot into a music

00:01:06.679 --> 00:01:06.689
first time I stepped foot into a music
 

00:01:06.689 --> 00:01:09.320
first time I stepped foot into a music
studio it was really exciting but I was

00:01:09.320 --> 00:01:09.330
studio it was really exciting but I was
 

00:01:09.330 --> 00:01:11.330
studio it was really exciting but I was
also a bit overwhelmed by the amount of

00:01:11.330 --> 00:01:11.340
also a bit overwhelmed by the amount of
 

00:01:11.340 --> 00:01:13.100
also a bit overwhelmed by the amount of
professional tools and expensive

00:01:13.100 --> 00:01:13.110
professional tools and expensive
 

00:01:13.110 --> 00:01:14.810
professional tools and expensive
equipment and also mentioned that

00:01:14.810 --> 00:01:14.820
equipment and also mentioned that
 

00:01:14.820 --> 00:01:16.820
equipment and also mentioned that
renting the music studio itself wasn't

00:01:16.820 --> 00:01:16.830
renting the music studio itself wasn't
 

00:01:16.830 --> 00:01:20.660
renting the music studio itself wasn't
exactly affordable as a teenager these

00:01:20.660 --> 00:01:20.670
exactly affordable as a teenager these
 

00:01:20.670 --> 00:01:22.580
exactly affordable as a teenager these
DJ turntables were my favorite piece of

00:01:22.580 --> 00:01:22.590
DJ turntables were my favorite piece of
 

00:01:22.590 --> 00:01:23.929
DJ turntables were my favorite piece of
equipment because I thought it was

00:01:23.929 --> 00:01:23.939
equipment because I thought it was
 

00:01:23.939 --> 00:01:25.789
equipment because I thought it was
pretty cool being able to mix my

00:01:25.789 --> 00:01:25.799
pretty cool being able to mix my
 

00:01:25.799 --> 00:01:28.070
pretty cool being able to mix my
favorite beats for my friends but as

00:01:28.070 --> 00:01:28.080
favorite beats for my friends but as
 

00:01:28.080 --> 00:01:30.859
favorite beats for my friends but as
cool as these turntables are having

00:01:30.859 --> 00:01:30.869
cool as these turntables are having
 

00:01:30.869 --> 00:01:33.200
cool as these turntables are having
access to expensive equipment or an

00:01:33.200 --> 00:01:33.210
access to expensive equipment or an
 

00:01:33.210 --> 00:01:35.270
access to expensive equipment or an
expensive studio isn't really feasible

00:01:35.270 --> 00:01:35.280
expensive studio isn't really feasible
 

00:01:35.280 --> 00:01:38.179
expensive studio isn't really feasible
for most people so luckily for the

00:01:38.179 --> 00:01:38.189
for most people so luckily for the
 

00:01:38.189 --> 00:01:40.039
for most people so luckily for the
billions of people around the world who

00:01:40.039 --> 00:01:40.049
billions of people around the world who
 

00:01:40.049 --> 00:01:42.679
billions of people around the world who
want to produce music music creation has

00:01:42.679 --> 00:01:42.689
want to produce music music creation has
 

00:01:42.689 --> 00:01:43.990
want to produce music music creation has
changed drastically

00:01:43.990 --> 00:01:44.000
changed drastically
 

00:01:44.000 --> 00:01:47.030
changed drastically
now with the accessibility of mobile you

00:01:47.030 --> 00:01:47.040
now with the accessibility of mobile you
 

00:01:47.040 --> 00:01:48.889
now with the accessibility of mobile you
can simply download an app and have

00:01:48.889 --> 00:01:48.899
can simply download an app and have
 

00:01:48.899 --> 00:01:51.350
can simply download an app and have
pro-lite quality music instrument and a

00:01:51.350 --> 00:01:51.360
pro-lite quality music instrument and a
 

00:01:51.360 --> 00:01:53.389
pro-lite quality music instrument and a
music studios directly in your pocket

00:01:53.389 --> 00:01:53.399
music studios directly in your pocket
 

00:01:53.399 --> 00:01:57.289
music studios directly in your pocket
making these DJ turntables accessible to

00:01:57.289 --> 00:01:57.299
making these DJ turntables accessible to
 

00:01:57.299 --> 00:02:00.020
making these DJ turntables accessible to
everyone on their phone and that's why

00:02:00.020 --> 00:02:00.030
everyone on their phone and that's why
 

00:02:00.030 --> 00:02:02.600
everyone on their phone and that's why
we've seen tremendous popularity in apps

00:02:02.600 --> 00:02:02.610
we've seen tremendous popularity in apps
 

00:02:02.610 --> 00:02:05.209
we've seen tremendous popularity in apps
like edy Jiang with over 45 million

00:02:05.209 --> 00:02:05.219
like edy Jiang with over 45 million
 

00:02:05.219 --> 00:02:08.150
like edy Jiang with over 45 million
installs but of course it's not just DJ

00:02:08.150 --> 00:02:08.160
installs but of course it's not just DJ
 

00:02:08.160 --> 00:02:10.249
installs but of course it's not just DJ
apps that have grown in popularity its

00:02:10.249 --> 00:02:10.259
apps that have grown in popularity its
 

00:02:10.259 --> 00:02:12.470
apps that have grown in popularity its
apps that allow you to sing karaoke such

00:02:12.470 --> 00:02:12.480
apps that allow you to sing karaoke such
 

00:02:12.480 --> 00:02:13.340
apps that allow you to sing karaoke such
as smil Singh

00:02:13.340 --> 00:02:13.350
as smil Singh
 

00:02:13.350 --> 00:02:16.430
as smil Singh
with over 52 million monthly active

00:02:16.430 --> 00:02:16.440
with over 52 million monthly active
 

00:02:16.440 --> 00:02:19.250
with over 52 million monthly active
users and apps like cord ke oscillators

00:02:19.250 --> 00:02:19.260
users and apps like cord ke oscillators
 

00:02:19.260 --> 00:02:21.290
users and apps like cord ke oscillators
that recently released on Android and

00:02:21.290 --> 00:02:21.300
that recently released on Android and
 

00:02:21.300 --> 00:02:24.230
that recently released on Android and
while high quality audio is important to

00:02:24.230 --> 00:02:24.240
while high quality audio is important to
 

00:02:24.240 --> 00:02:26.420
while high quality audio is important to
music creation apps it's also important

00:02:26.420 --> 00:02:26.430
music creation apps it's also important
 

00:02:26.430 --> 00:02:29.030
music creation apps it's also important
to a whole host of other apps such as VR

00:02:29.030 --> 00:02:29.040
to a whole host of other apps such as VR
 

00:02:29.040 --> 00:02:32.090
to a whole host of other apps such as VR
or voice reliant apps or games and the

00:02:32.090 --> 00:02:32.100
or voice reliant apps or games and the
 

00:02:32.100 --> 00:02:33.950
or voice reliant apps or games and the
market for high-quality audio apps is

00:02:33.950 --> 00:02:33.960
market for high-quality audio apps is
 

00:02:33.960 --> 00:02:36.920
market for high-quality audio apps is
only expanding so that's why I'd like to

00:02:36.920 --> 00:02:36.930
only expanding so that's why I'd like to
 

00:02:36.930 --> 00:02:38.600
only expanding so that's why I'd like to
now dive deeper into the first part of

00:02:38.600 --> 00:02:38.610
now dive deeper into the first part of
 

00:02:38.610 --> 00:02:40.460
now dive deeper into the first part of
our agenda which is sharing with you

00:02:40.460 --> 00:02:40.470
our agenda which is sharing with you
 

00:02:40.470 --> 00:02:42.410
our agenda which is sharing with you
three best practices from leading

00:02:42.410 --> 00:02:42.420
three best practices from leading
 

00:02:42.420 --> 00:02:43.940
three best practices from leading
audiences developers who have

00:02:43.940 --> 00:02:43.950
audiences developers who have
 

00:02:43.950 --> 00:02:45.710
audiences developers who have
successfully launched and built their

00:02:45.710 --> 00:02:45.720
successfully launched and built their
 

00:02:45.720 --> 00:02:49.580
successfully launched and built their
businesses on Google Android's these

00:02:49.580 --> 00:02:49.590
businesses on Google Android's these
 

00:02:49.590 --> 00:02:52.940
businesses on Google Android's these
messages are launch smart sync global

00:02:52.940 --> 00:02:52.950
messages are launch smart sync global
 

00:02:52.950 --> 00:02:55.730
messages are launch smart sync global
and everyone favorite make more money so

00:02:55.730 --> 00:02:55.740
and everyone favorite make more money so
 

00:02:55.740 --> 00:03:00.770
and everyone favorite make more money so
first launch smart so we know that

00:03:00.770 --> 00:03:00.780
first launch smart so we know that
 

00:03:00.780 --> 00:03:02.900
first launch smart so we know that
device fragmentation on Android can be a

00:03:02.900 --> 00:03:02.910
device fragmentation on Android can be a
 

00:03:02.910 --> 00:03:04.850
device fragmentation on Android can be a
major challenge for developers that

00:03:04.850 --> 00:03:04.860
major challenge for developers that
 

00:03:04.860 --> 00:03:07.580
major challenge for developers that
require a high performance audio in

00:03:07.580 --> 00:03:07.590
require a high performance audio in
 

00:03:07.590 --> 00:03:09.140
require a high performance audio in
order to deliver the best user

00:03:09.140 --> 00:03:09.150
order to deliver the best user
 

00:03:09.150 --> 00:03:11.420
order to deliver the best user
experience it's important to understand

00:03:11.420 --> 00:03:11.430
experience it's important to understand
 

00:03:11.430 --> 00:03:14.030
experience it's important to understand
what device work well for your

00:03:14.030 --> 00:03:14.040
what device work well for your
 

00:03:14.040 --> 00:03:16.190
what device work well for your
performance needs by performance here

00:03:16.190 --> 00:03:16.200
performance needs by performance here
 

00:03:16.200 --> 00:03:17.570
performance needs by performance here
I'm specifically talking about a

00:03:17.570 --> 00:03:17.580
I'm specifically talking about a
 

00:03:17.580 --> 00:03:20.060
I'm specifically talking about a
device's CPU and latency with the lower

00:03:20.060 --> 00:03:20.070
device's CPU and latency with the lower
 

00:03:20.070 --> 00:03:21.590
device's CPU and latency with the lower
the latency the better the user

00:03:21.590 --> 00:03:21.600
the latency the better the user
 

00:03:21.600 --> 00:03:23.990
the latency the better the user
experience so let's take a look now at

00:03:23.990 --> 00:03:24.000
experience so let's take a look now at
 

00:03:24.000 --> 00:03:26.780
experience so let's take a look now at
how joy Tunes and apps that requires low

00:03:26.780 --> 00:03:26.790
how joy Tunes and apps that requires low
 

00:03:26.790 --> 00:03:29.390
how joy Tunes and apps that requires low
latency approached launching on android

00:03:29.390 --> 00:03:29.400
latency approached launching on android
 

00:03:29.400 --> 00:03:31.640
latency approached launching on android
in order to maximize the reach but still

00:03:31.640 --> 00:03:31.650
in order to maximize the reach but still
 

00:03:31.650 --> 00:03:35.120
in order to maximize the reach but still
achieve a good user experience so joy

00:03:35.120 --> 00:03:35.130
achieve a good user experience so joy
 

00:03:35.130 --> 00:03:37.940
achieve a good user experience so joy
tune is the creator of simply piano a

00:03:37.940 --> 00:03:37.950
tune is the creator of simply piano a
 

00:03:37.950 --> 00:03:40.220
tune is the creator of simply piano a
subscription-based music app that helps

00:03:40.220 --> 00:03:40.230
subscription-based music app that helps
 

00:03:40.230 --> 00:03:41.960
subscription-based music app that helps
users learn how to play piano

00:03:41.960 --> 00:03:41.970
users learn how to play piano
 

00:03:41.970 --> 00:03:45.530
users learn how to play piano
in fact my daughter here has learned how

00:03:45.530 --> 00:03:45.540
in fact my daughter here has learned how
 

00:03:45.540 --> 00:03:47.990
in fact my daughter here has learned how
to play piano almost exclusively on this

00:03:47.990 --> 00:03:48.000
to play piano almost exclusively on this
 

00:03:48.000 --> 00:03:50.060
to play piano almost exclusively on this
app so we've had a piano in my household

00:03:50.060 --> 00:03:50.070
app so we've had a piano in my household
 

00:03:50.070 --> 00:03:52.340
app so we've had a piano in my household
her entire life and it wasn't until I

00:03:52.340 --> 00:03:52.350
her entire life and it wasn't until I
 

00:03:52.350 --> 00:03:54.800
her entire life and it wasn't until I
introduced her to this app did she think

00:03:54.800 --> 00:03:54.810
introduced her to this app did she think
 

00:03:54.810 --> 00:03:56.360
introduced her to this app did she think
that playing piano was all of a sudden

00:03:56.360 --> 00:03:56.370
that playing piano was all of a sudden
 

00:03:56.370 --> 00:03:58.910
that playing piano was all of a sudden
fun so what she does is she simply

00:03:58.910 --> 00:03:58.920
fun so what she does is she simply
 

00:03:58.920 --> 00:04:01.580
fun so what she does is she simply
follows along to the guided lessons on

00:04:01.580 --> 00:04:01.590
follows along to the guided lessons on
 

00:04:01.590 --> 00:04:03.220
follows along to the guided lessons on
our piano and the app immediately

00:04:03.220 --> 00:04:03.230
our piano and the app immediately
 

00:04:03.230 --> 00:04:05.630
our piano and the app immediately
recognizes what she's playing and then

00:04:05.630 --> 00:04:05.640
recognizes what she's playing and then
 

00:04:05.640 --> 00:04:07.430
recognizes what she's playing and then
provide feedback to her to help her

00:04:07.430 --> 00:04:07.440
provide feedback to her to help her
 

00:04:07.440 --> 00:04:10.400
provide feedback to her to help her
improve so the key here is that when my

00:04:10.400 --> 00:04:10.410
improve so the key here is that when my
 

00:04:10.410 --> 00:04:12.020
improve so the key here is that when my
daughter presses down on the piano keys

00:04:12.020 --> 00:04:12.030
daughter presses down on the piano keys
 

00:04:12.030 --> 00:04:14.330
daughter presses down on the piano keys
she expects that simply piano will

00:04:14.330 --> 00:04:14.340
she expects that simply piano will
 

00:04:14.340 --> 00:04:16.849
she expects that simply piano will
immediately and accurately hear what

00:04:16.849 --> 00:04:16.859
immediately and accurately hear what
 

00:04:16.859 --> 00:04:19.460
immediately and accurately hear what
she's playing and provide feedback but

00:04:19.460 --> 00:04:19.470
she's playing and provide feedback but
 

00:04:19.470 --> 00:04:22.159
she's playing and provide feedback but
in order to have this experience simply

00:04:22.159 --> 00:04:22.169
in order to have this experience simply
 

00:04:22.169 --> 00:04:25.370
in order to have this experience simply
piano requires low latency of playback

00:04:25.370 --> 00:04:25.380
piano requires low latency of playback
 

00:04:25.380 --> 00:04:27.320
piano requires low latency of playback
and recording of musical tracks

00:04:27.320 --> 00:04:27.330
and recording of musical tracks
 

00:04:27.330 --> 00:04:29.839
and recording of musical tracks
so to figure out what devices meet their

00:04:29.839 --> 00:04:29.849
so to figure out what devices meet their
 

00:04:29.849 --> 00:04:32.089
so to figure out what devices meet their
low latency and computational

00:04:32.089 --> 00:04:32.099
low latency and computational
 

00:04:32.099 --> 00:04:34.460
low latency and computational
performance needs they first launched a

00:04:34.460 --> 00:04:34.470
performance needs they first launched a
 

00:04:34.470 --> 00:04:36.290
performance needs they first launched a
beta version of their app in our early

00:04:36.290 --> 00:04:36.300
beta version of their app in our early
 

00:04:36.300 --> 00:04:39.980
beta version of their app in our early
access collection so early access is a

00:04:39.980 --> 00:04:39.990
access collection so early access is a
 

00:04:39.990 --> 00:04:42.439
access collection so early access is a
collection on Google Play for new

00:04:42.439 --> 00:04:42.449
collection on Google Play for new
 

00:04:42.449 --> 00:04:45.490
collection on Google Play for new
selected apps that are still in beta

00:04:45.490 --> 00:04:45.500
selected apps that are still in beta
 

00:04:45.500 --> 00:04:48.230
selected apps that are still in beta
inclusion in this collection enabled joy

00:04:48.230 --> 00:04:48.240
inclusion in this collection enabled joy
 

00:04:48.240 --> 00:04:51.080
inclusion in this collection enabled joy
Tunes to build a beta audience and to be

00:04:51.080 --> 00:04:51.090
Tunes to build a beta audience and to be
 

00:04:51.090 --> 00:04:52.749
Tunes to build a beta audience and to be
able to collect private user feedback

00:04:52.749 --> 00:04:52.759
able to collect private user feedback
 

00:04:52.759 --> 00:04:55.279
able to collect private user feedback
this enabled them to identify both

00:04:55.279 --> 00:04:55.289
this enabled them to identify both
 

00:04:55.289 --> 00:04:57.409
this enabled them to identify both
problematic devices where users were

00:04:57.409 --> 00:04:57.419
problematic devices where users were
 

00:04:57.419 --> 00:04:59.749
problematic devices where users were
having a poor quality audio experience

00:04:59.749 --> 00:04:59.759
having a poor quality audio experience
 

00:04:59.759 --> 00:05:02.450
having a poor quality audio experience
but also problematic regions that they

00:05:02.450 --> 00:05:02.460
but also problematic regions that they
 

00:05:02.460 --> 00:05:04.309
but also problematic regions that they
were then able to exclude from their

00:05:04.309 --> 00:05:04.319
were then able to exclude from their
 

00:05:04.319 --> 00:05:07.249
were then able to exclude from their
production version they also developed a

00:05:07.249 --> 00:05:07.259
production version they also developed a
 

00:05:07.259 --> 00:05:09.409
production version they also developed a
way to have their app work on lower-end

00:05:09.409 --> 00:05:09.419
way to have their app work on lower-end
 

00:05:09.419 --> 00:05:12.379
way to have their app work on lower-end
devices by making automatic adjustments

00:05:12.379 --> 00:05:12.389
devices by making automatic adjustments
 

00:05:12.389 --> 00:05:14.959
devices by making automatic adjustments
of certain features such as changing and

00:05:14.959 --> 00:05:14.969
of certain features such as changing and
 

00:05:14.969 --> 00:05:17.149
of certain features such as changing and
optimizing the graphics so that a user

00:05:17.149 --> 00:05:17.159
optimizing the graphics so that a user
 

00:05:17.159 --> 00:05:19.399
optimizing the graphics so that a user
on a particular device would still have

00:05:19.399 --> 00:05:19.409
on a particular device would still have
 

00:05:19.409 --> 00:05:21.740
on a particular device would still have
a good experience so with all of these

00:05:21.740 --> 00:05:21.750
a good experience so with all of these
 

00:05:21.750 --> 00:05:23.839
a good experience so with all of these
learnings joy tunes was able to then

00:05:23.839 --> 00:05:23.849
learnings joy tunes was able to then
 

00:05:23.849 --> 00:05:26.390
learnings joy tunes was able to then
launch to a public audience with a very

00:05:26.390 --> 00:05:26.400
launch to a public audience with a very
 

00:05:26.400 --> 00:05:30.129
launch to a public audience with a very
high user rating of over 4.3 and to also

00:05:30.129 --> 00:05:30.139
high user rating of over 4.3 and to also
 

00:05:30.139 --> 00:05:32.659
high user rating of over 4.3 and to also
launch to a larger number of devices

00:05:32.659 --> 00:05:32.669
launch to a larger number of devices
 

00:05:32.669 --> 00:05:33.649
launch to a larger number of devices
than they had originally thought

00:05:33.649 --> 00:05:33.659
than they had originally thought
 

00:05:33.659 --> 00:05:38.990
than they had originally thought
possible so second you want to thank

00:05:38.990 --> 00:05:39.000
possible so second you want to thank
 

00:05:39.000 --> 00:05:40.490
possible so second you want to thank
global when you think about launching

00:05:40.490 --> 00:05:40.500
global when you think about launching
 

00:05:40.500 --> 00:05:42.709
global when you think about launching
your app or growing your user base an

00:05:42.709 --> 00:05:42.719
your app or growing your user base an
 

00:05:42.719 --> 00:05:45.260
your app or growing your user base an
Android has tremendous strength here and

00:05:45.260 --> 00:05:45.270
Android has tremendous strength here and
 

00:05:45.270 --> 00:05:47.390
Android has tremendous strength here and
we continue to see enormous growth of

00:05:47.390 --> 00:05:47.400
we continue to see enormous growth of
 

00:05:47.400 --> 00:05:49.640
we continue to see enormous growth of
music creativity apps in both developed

00:05:49.640 --> 00:05:49.650
music creativity apps in both developed
 

00:05:49.650 --> 00:05:52.370
music creativity apps in both developed
and emerging countries when expanding to

00:05:52.370 --> 00:05:52.380
and emerging countries when expanding to
 

00:05:52.380 --> 00:05:54.409
and emerging countries when expanding to
developing regions so you want to

00:05:54.409 --> 00:05:54.419
developing regions so you want to
 

00:05:54.419 --> 00:05:56.779
developing regions so you want to
optimize your app for its specific needs

00:05:56.779 --> 00:05:56.789
optimize your app for its specific needs
 

00:05:56.789 --> 00:05:58.820
optimize your app for its specific needs
for users that are in that market for

00:05:58.820 --> 00:05:58.830
for users that are in that market for
 

00:05:58.830 --> 00:06:00.439
for users that are in that market for
instance you may find that there's a

00:06:00.439 --> 00:06:00.449
instance you may find that there's a
 

00:06:00.449 --> 00:06:01.760
instance you may find that there's a
higher number of users that are on

00:06:01.760 --> 00:06:01.770
higher number of users that are on
 

00:06:01.770 --> 00:06:04.249
higher number of users that are on
low-end devices and you may find that

00:06:04.249 --> 00:06:04.259
low-end devices and you may find that
 

00:06:04.259 --> 00:06:06.170
low-end devices and you may find that
more users have lower bandwidth

00:06:06.170 --> 00:06:06.180
more users have lower bandwidth
 

00:06:06.180 --> 00:06:08.540
more users have lower bandwidth
constraints but as mentioned with simply

00:06:08.540 --> 00:06:08.550
constraints but as mentioned with simply
 

00:06:08.550 --> 00:06:10.430
constraints but as mentioned with simply
piano you don't have to limit your app

00:06:10.430 --> 00:06:10.440
piano you don't have to limit your app
 

00:06:10.440 --> 00:06:12.619
piano you don't have to limit your app
to particular devices there's a number

00:06:12.619 --> 00:06:12.629
to particular devices there's a number
 

00:06:12.629 --> 00:06:14.300
to particular devices there's a number
of technical things that you can do to

00:06:14.300 --> 00:06:14.310
of technical things that you can do to
 

00:06:14.310 --> 00:06:16.339
of technical things that you can do to
optimize your app for both high and low

00:06:16.339 --> 00:06:16.349
optimize your app for both high and low
 

00:06:16.349 --> 00:06:18.800
optimize your app for both high and low
end devices so let's take a look now at

00:06:18.800 --> 00:06:18.810
end devices so let's take a look now at
 

00:06:18.810 --> 00:06:21.439
end devices so let's take a look now at
another leading audio developer that has

00:06:21.439 --> 00:06:21.449
another leading audio developer that has
 

00:06:21.449 --> 00:06:23.990
another leading audio developer that has
been distributed globally but it's seen

00:06:23.990 --> 00:06:24.000
been distributed globally but it's seen
 

00:06:24.000 --> 00:06:28.070
been distributed globally but it's seen
enormous success in emerging market thus

00:06:28.070 --> 00:06:28.080
enormous success in emerging market thus
 

00:06:28.080 --> 00:06:30.499
enormous success in emerging market thus
mule is a leading developer of mobile

00:06:30.499 --> 00:06:30.509
mule is a leading developer of mobile
 

00:06:30.509 --> 00:06:32.959
mule is a leading developer of mobile
music apps including small sing that

00:06:32.959 --> 00:06:32.969
music apps including small sing that
 

00:06:32.969 --> 00:06:34.820
music apps including small sing that
allows users to sing along to their

00:06:34.820 --> 00:06:34.830
allows users to sing along to their
 

00:06:34.830 --> 00:06:37.040
allows users to sing along to their
favorite songs in a karaoke cell fashion

00:06:37.040 --> 00:06:37.050
favorite songs in a karaoke cell fashion
 

00:06:37.050 --> 00:06:39.589
favorite songs in a karaoke cell fashion
so for instance if I wanted to sing or

00:06:39.589 --> 00:06:39.599
so for instance if I wanted to sing or
 

00:06:39.599 --> 00:06:41.210
so for instance if I wanted to sing or
if any of you wanted to sing

00:06:41.210 --> 00:06:41.220
if any of you wanted to sing
 

00:06:41.220 --> 00:06:43.580
if any of you wanted to sing
frozen's let it go the app would match

00:06:43.580 --> 00:06:43.590
frozen's let it go the app would match
 

00:06:43.590 --> 00:06:45.560
frozen's let it go the app would match
up what I am singing in real time with

00:06:45.560 --> 00:06:45.570
up what I am singing in real time with
 

00:06:45.570 --> 00:06:47.660
up what I am singing in real time with
the song and then I'd be able to overlay

00:06:47.660 --> 00:06:47.670
the song and then I'd be able to overlay
 

00:06:47.670 --> 00:06:50.090
the song and then I'd be able to overlay
audio graphics to make my humble voice

00:06:50.090 --> 00:06:50.100
audio graphics to make my humble voice
 

00:06:50.100 --> 00:06:52.250
audio graphics to make my humble voice
sound like a pop star if Disney

00:06:52.250 --> 00:06:52.260
sound like a pop star if Disney
 

00:06:52.260 --> 00:06:53.780
sound like a pop star if Disney
sing-alongs aren't popular in your

00:06:53.780 --> 00:06:53.790
sing-alongs aren't popular in your
 

00:06:53.790 --> 00:06:54.920
sing-alongs aren't popular in your
household they have a ton of other

00:06:54.920 --> 00:06:54.930
household they have a ton of other
 

00:06:54.930 --> 00:06:58.880
household they have a ton of other
genres too so small has seems phenomenal

00:06:58.880 --> 00:06:58.890
genres too so small has seems phenomenal
 

00:06:58.890 --> 00:07:01.520
genres too so small has seems phenomenal
growth but last year the apps all over

00:07:01.520 --> 00:07:01.530
growth but last year the apps all over
 

00:07:01.530 --> 00:07:05.030
growth but last year the apps all over
10x active user install growth in the

00:07:05.030 --> 00:07:05.040
10x active user install growth in the
 

00:07:05.040 --> 00:07:08.300
10x active user install growth in the
Southeast Asia region with over 40% of

00:07:08.300 --> 00:07:08.310
Southeast Asia region with over 40% of
 

00:07:08.310 --> 00:07:10.070
Southeast Asia region with over 40% of
their user base now comes from this

00:07:10.070 --> 00:07:10.080
their user base now comes from this
 

00:07:10.080 --> 00:07:12.230
their user base now comes from this
region with Indonesia being one of their

00:07:12.230 --> 00:07:12.240
region with Indonesia being one of their
 

00:07:12.240 --> 00:07:14.900
region with Indonesia being one of their
fastest growing countries but not only

00:07:14.900 --> 00:07:14.910
fastest growing countries but not only
 

00:07:14.910 --> 00:07:16.580
fastest growing countries but not only
have they seen enormous active user

00:07:16.580 --> 00:07:16.590
have they seen enormous active user
 

00:07:16.590 --> 00:07:18.680
have they seen enormous active user
install growth they've also been

00:07:18.680 --> 00:07:18.690
install growth they've also been
 

00:07:18.690 --> 00:07:21.890
install growth they've also been
monetizing well they're so with over 7x

00:07:21.890 --> 00:07:21.900
monetizing well they're so with over 7x
 

00:07:21.900 --> 00:07:24.110
monetizing well they're so with over 7x
increase in revenue over the same year

00:07:24.110 --> 00:07:24.120
increase in revenue over the same year
 

00:07:24.120 --> 00:07:26.510
increase in revenue over the same year
in the Southeast Asia region so in

00:07:26.510 --> 00:07:26.520
in the Southeast Asia region so in
 

00:07:26.520 --> 00:07:27.710
in the Southeast Asia region so in
addition to some of the technical

00:07:27.710 --> 00:07:27.720
addition to some of the technical
 

00:07:27.720 --> 00:07:30.140
addition to some of the technical
optimizations that they've done another

00:07:30.140 --> 00:07:30.150
optimizations that they've done another
 

00:07:30.150 --> 00:07:32.030
optimizations that they've done another
reason for this viral uptick can be

00:07:32.030 --> 00:07:32.040
reason for this viral uptick can be
 

00:07:32.040 --> 00:07:34.100
reason for this viral uptick can be
attributed to some Yool offering locally

00:07:34.100 --> 00:07:34.110
attributed to some Yool offering locally
 

00:07:34.110 --> 00:07:37.190
attributed to some Yool offering locally
relevant content for instance a user in

00:07:37.190 --> 00:07:37.200
relevant content for instance a user in
 

00:07:37.200 --> 00:07:39.260
relevant content for instance a user in
Indonesia pictured here on the left with

00:07:39.260 --> 00:07:39.270
Indonesia pictured here on the left with
 

00:07:39.270 --> 00:07:41.480
Indonesia pictured here on the left with
the headphones can sing along to one of

00:07:41.480 --> 00:07:41.490
the headphones can sing along to one of
 

00:07:41.490 --> 00:07:43.970
the headphones can sing along to one of
the world's top hits or she can choose

00:07:43.970 --> 00:07:43.980
the world's top hits or she can choose
 

00:07:43.980 --> 00:07:46.909
the world's top hits or she can choose
to sing in a duet style karaoke with one

00:07:46.909 --> 00:07:46.919
to sing in a duet style karaoke with one
 

00:07:46.919 --> 00:07:48.950
to sing in a duet style karaoke with one
of her favorite regional artists such as

00:07:48.950 --> 00:07:48.960
of her favorite regional artists such as
 

00:07:48.960 --> 00:07:50.960
of her favorite regional artists such as
PETA pictured on the right who's a very

00:07:50.960 --> 00:07:50.970
PETA pictured on the right who's a very
 

00:07:50.970 --> 00:07:54.140
PETA pictured on the right who's a very
popular Indonesian singer so as you

00:07:54.140 --> 00:07:54.150
popular Indonesian singer so as you
 

00:07:54.150 --> 00:07:55.760
popular Indonesian singer so as you
think about expanding your reach you

00:07:55.760 --> 00:07:55.770
think about expanding your reach you
 

00:07:55.770 --> 00:07:58.250
think about expanding your reach you
want to identify areas of growth and

00:07:58.250 --> 00:07:58.260
want to identify areas of growth and
 

00:07:58.260 --> 00:08:00.530
want to identify areas of growth and
then create a localized experience for

00:08:00.530 --> 00:08:00.540
then create a localized experience for
 

00:08:00.540 --> 00:08:02.390
then create a localized experience for
that market I also encourage you to

00:08:02.390 --> 00:08:02.400
that market I also encourage you to
 

00:08:02.400 --> 00:08:04.430
that market I also encourage you to
check out our building for a billion

00:08:04.430 --> 00:08:04.440
check out our building for a billion
 

00:08:04.440 --> 00:08:06.140
check out our building for a billion
guidelines online if you're interested

00:08:06.140 --> 00:08:06.150
guidelines online if you're interested
 

00:08:06.150 --> 00:08:07.790
guidelines online if you're interested
in more tips on building for emerging

00:08:07.790 --> 00:08:07.800
in more tips on building for emerging
 

00:08:07.800 --> 00:08:11.480
in more tips on building for emerging
markets lastly you want to ensure that

00:08:11.480 --> 00:08:11.490
markets lastly you want to ensure that
 

00:08:11.490 --> 00:08:12.830
markets lastly you want to ensure that
you're testing your monetization

00:08:12.830 --> 00:08:12.840
you're testing your monetization
 

00:08:12.840 --> 00:08:15.050
you're testing your monetization
strategy to achieve the best business

00:08:15.050 --> 00:08:15.060
strategy to achieve the best business
 

00:08:15.060 --> 00:08:17.780
strategy to achieve the best business
results so many music creation apps have

00:08:17.780 --> 00:08:17.790
results so many music creation apps have
 

00:08:17.790 --> 00:08:19.880
results so many music creation apps have
historically required that you just pay

00:08:19.880 --> 00:08:19.890
historically required that you just pay
 

00:08:19.890 --> 00:08:21.890
historically required that you just pay
a premium price in order to access their

00:08:21.890 --> 00:08:21.900
a premium price in order to access their
 

00:08:21.900 --> 00:08:24.770
a premium price in order to access their
app but because of the variety of

00:08:24.770 --> 00:08:24.780
app but because of the variety of
 

00:08:24.780 --> 00:08:26.360
app but because of the variety of
payments that are available on mobile

00:08:26.360 --> 00:08:26.370
payments that are available on mobile
 

00:08:26.370 --> 00:08:28.880
payments that are available on mobile
user consumption habits have changed and

00:08:28.880 --> 00:08:28.890
user consumption habits have changed and
 

00:08:28.890 --> 00:08:31.370
user consumption habits have changed and
in fact on play our fastest growing

00:08:31.370 --> 00:08:31.380
in fact on play our fastest growing
 

00:08:31.380 --> 00:08:32.570
in fact on play our fastest growing
business model it comes from

00:08:32.570 --> 00:08:32.580
business model it comes from
 

00:08:32.580 --> 00:08:34.310
business model it comes from
subscriptions where we've seen both

00:08:34.310 --> 00:08:34.320
subscriptions where we've seen both
 

00:08:34.320 --> 00:08:36.709
subscriptions where we've seen both
subscribers and revenue double over the

00:08:36.709 --> 00:08:36.719
subscribers and revenue double over the
 

00:08:36.719 --> 00:08:39.680
subscribers and revenue double over the
last year so while the last few apps

00:08:39.680 --> 00:08:39.690
last year so while the last few apps
 

00:08:39.690 --> 00:08:41.750
last year so while the last few apps
that I mentioned simply piano and Smule

00:08:41.750 --> 00:08:41.760
that I mentioned simply piano and Smule
 

00:08:41.760 --> 00:08:44.209
that I mentioned simply piano and Smule
allow users to download the app for free

00:08:44.209 --> 00:08:44.219
allow users to download the app for free
 

00:08:44.219 --> 00:08:46.700
allow users to download the app for free
and test it out and then sign up for a

00:08:46.700 --> 00:08:46.710
and test it out and then sign up for a
 

00:08:46.710 --> 00:08:49.910
and test it out and then sign up for a
subscription the developers of ultimate

00:08:49.910 --> 00:08:49.920
subscription the developers of ultimate
 

00:08:49.920 --> 00:08:52.100
subscription the developers of ultimate
guitar tabs' have tested an interesting

00:08:52.100 --> 00:08:52.110
guitar tabs' have tested an interesting
 

00:08:52.110 --> 00:08:53.660
guitar tabs' have tested an interesting
hybrid model so

00:08:53.660 --> 00:08:53.670
hybrid model so
 

00:08:53.670 --> 00:08:55.550
hybrid model so
Ultimate Guitar Tabs allows you to learn

00:08:55.550 --> 00:08:55.560
Ultimate Guitar Tabs allows you to learn
 

00:08:55.560 --> 00:08:57.530
Ultimate Guitar Tabs allows you to learn
how to play guitar through in-app

00:08:57.530 --> 00:08:57.540
how to play guitar through in-app
 

00:08:57.540 --> 00:08:59.270
how to play guitar through in-app
lessons or you can just jam to your

00:08:59.270 --> 00:08:59.280
lessons or you can just jam to your
 

00:08:59.280 --> 00:09:02.390
lessons or you can just jam to your
favorite song so ultimate guitar started

00:09:02.390 --> 00:09:02.400
favorite song so ultimate guitar started
 

00:09:02.400 --> 00:09:04.730
favorite song so ultimate guitar started
off as a premium app but rather than

00:09:04.730 --> 00:09:04.740
off as a premium app but rather than
 

00:09:04.740 --> 00:09:06.770
off as a premium app but rather than
charging a high price point they

00:09:06.770 --> 00:09:06.780
charging a high price point they
 

00:09:06.780 --> 00:09:09.590
charging a high price point they
experimented with a lower price point

00:09:09.590 --> 00:09:09.600
experimented with a lower price point
 

00:09:09.600 --> 00:09:11.630
experimented with a lower price point
for a paid app allowing users to

00:09:11.630 --> 00:09:11.640
for a paid app allowing users to
 

00:09:11.640 --> 00:09:14.000
for a paid app allowing users to
download the app for $2.99 as you can

00:09:14.000 --> 00:09:14.010
download the app for $2.99 as you can
 

00:09:14.010 --> 00:09:14.750
download the app for $2.99 as you can
see on the left

00:09:14.750 --> 00:09:14.760
see on the left
 

00:09:14.760 --> 00:09:16.760
see on the left
this essentially lowered the barrier to

00:09:16.760 --> 00:09:16.770
this essentially lowered the barrier to
 

00:09:16.770 --> 00:09:19.790
this essentially lowered the barrier to
entry then they up sold their users once

00:09:19.790 --> 00:09:19.800
entry then they up sold their users once
 

00:09:19.800 --> 00:09:21.620
entry then they up sold their users once
they were in the app allowing them to

00:09:21.620 --> 00:09:21.630
they were in the app allowing them to
 

00:09:21.630 --> 00:09:23.900
they were in the app allowing them to
download the full version for $9.99 as

00:09:23.900 --> 00:09:23.910
download the full version for $9.99 as
 

00:09:23.910 --> 00:09:26.360
download the full version for $9.99 as
you can see on the right so this hybrid

00:09:26.360 --> 00:09:26.370
you can see on the right so this hybrid
 

00:09:26.370 --> 00:09:28.700
you can see on the right so this hybrid
approach of using paid and in-app

00:09:28.700 --> 00:09:28.710
approach of using paid and in-app
 

00:09:28.710 --> 00:09:30.890
approach of using paid and in-app
purchases turned out to be an effective

00:09:30.890 --> 00:09:30.900
purchases turned out to be an effective
 

00:09:30.900 --> 00:09:32.810
purchases turned out to be an effective
monetization model for ultimate Guitar

00:09:32.810 --> 00:09:32.820
monetization model for ultimate Guitar
 

00:09:32.820 --> 00:09:34.820
monetization model for ultimate Guitar
Tabs they not only increase their

00:09:34.820 --> 00:09:34.830
Tabs they not only increase their
 

00:09:34.830 --> 00:09:37.760
Tabs they not only increase their
revenue overall but in app purchases now

00:09:37.760 --> 00:09:37.770
revenue overall but in app purchases now
 

00:09:37.770 --> 00:09:40.490
revenue overall but in app purchases now
account for 65% of their revenue which

00:09:40.490 --> 00:09:40.500
account for 65% of their revenue which
 

00:09:40.500 --> 00:09:42.260
account for 65% of their revenue which
is a pretty striking stat given they're

00:09:42.260 --> 00:09:42.270
is a pretty striking stat given they're
 

00:09:42.270 --> 00:09:45.080
is a pretty striking stat given they're
already a premium app so while a hybrid

00:09:45.080 --> 00:09:45.090
already a premium app so while a hybrid
 

00:09:45.090 --> 00:09:47.390
already a premium app so while a hybrid
approach worked for them I encourage you

00:09:47.390 --> 00:09:47.400
approach worked for them I encourage you
 

00:09:47.400 --> 00:09:48.830
approach worked for them I encourage you
to test out different monetization

00:09:48.830 --> 00:09:48.840
to test out different monetization
 

00:09:48.840 --> 00:09:51.440
to test out different monetization
models beyond premium and see where you

00:09:51.440 --> 00:09:51.450
models beyond premium and see where you
 

00:09:51.450 --> 00:09:54.830
models beyond premium and see where you
have the best conversion results so

00:09:54.830 --> 00:09:54.840
have the best conversion results so
 

00:09:54.840 --> 00:09:56.630
have the best conversion results so
these are just a few examples of audio

00:09:56.630 --> 00:09:56.640
these are just a few examples of audio
 

00:09:56.640 --> 00:09:58.160
these are just a few examples of audio
duct developers that are seeing

00:09:58.160 --> 00:09:58.170
duct developers that are seeing
 

00:09:58.170 --> 00:10:01.430
duct developers that are seeing
tremendous success on Android there is a

00:10:01.430 --> 00:10:01.440
tremendous success on Android there is a
 

00:10:01.440 --> 00:10:03.740
tremendous success on Android there is a
tremendous appetite for music creativity

00:10:03.740 --> 00:10:03.750
tremendous appetite for music creativity
 

00:10:03.750 --> 00:10:05.780
tremendous appetite for music creativity
apps and so we think if you follow the

00:10:05.780 --> 00:10:05.790
apps and so we think if you follow the
 

00:10:05.790 --> 00:10:08.180
apps and so we think if you follow the
business tips that I just gave and also

00:10:08.180 --> 00:10:08.190
business tips that I just gave and also
 

00:10:08.190 --> 00:10:09.920
business tips that I just gave and also
some of the technical tips that Don and

00:10:09.920 --> 00:10:09.930
some of the technical tips that Don and
 

00:10:09.930 --> 00:10:12.140
some of the technical tips that Don and
Phil will be sharing that there's a big

00:10:12.140 --> 00:10:12.150
Phil will be sharing that there's a big
 

00:10:12.150 --> 00:10:14.030
Phil will be sharing that there's a big
opportunity for developers in this space

00:10:14.030 --> 00:10:14.040
opportunity for developers in this space
 

00:10:14.040 --> 00:10:16.520
opportunity for developers in this space
I would now like to introduce Don to the

00:10:16.520 --> 00:10:16.530
I would now like to introduce Don to the
 

00:10:16.530 --> 00:10:18.320
I would now like to introduce Don to the
stage to discuss common technical

00:10:18.320 --> 00:10:18.330
stage to discuss common technical
 

00:10:18.330 --> 00:10:20.510
stage to discuss common technical
hurdles and how developers can overcome

00:10:20.510 --> 00:10:20.520
hurdles and how developers can overcome
 

00:10:20.520 --> 00:10:25.620
hurdles and how developers can overcome
them thank you hello hello

00:10:25.620 --> 00:10:25.630
 

00:10:25.630 --> 00:10:29.170
Thank You Kelly hi I'm dawn I'm a

00:10:29.170 --> 00:10:29.180
Thank You Kelly hi I'm dawn I'm a
 

00:10:29.180 --> 00:10:31.269
Thank You Kelly hi I'm dawn I'm a
developer advocate and I lead our

00:10:31.269 --> 00:10:31.279
developer advocate and I lead our
 

00:10:31.279 --> 00:10:33.519
developer advocate and I lead our
developer efforts for the Android high

00:10:33.519 --> 00:10:33.529
developer efforts for the Android high
 

00:10:33.529 --> 00:10:35.650
developer efforts for the Android high
performance audio framework what that

00:10:35.650 --> 00:10:35.660
performance audio framework what that
 

00:10:35.660 --> 00:10:38.949
performance audio framework what that
means is I help you guys create amazing

00:10:38.949 --> 00:10:38.959
means is I help you guys create amazing
 

00:10:38.959 --> 00:10:42.699
means is I help you guys create amazing
audio experiences on Android what it

00:10:42.699 --> 00:10:42.709
audio experiences on Android what it
 

00:10:42.709 --> 00:10:45.040
audio experiences on Android what it
actually means is I spend virtually all

00:10:45.040 --> 00:10:45.050
actually means is I spend virtually all
 

00:10:45.050 --> 00:10:48.370
actually means is I spend virtually all
my time listening to sine waves outside

00:10:48.370 --> 00:10:48.380
my time listening to sine waves outside
 

00:10:48.380 --> 00:10:50.889
my time listening to sine waves outside
of Google I do a bit of DJing and in my

00:10:50.889 --> 00:10:50.899
of Google I do a bit of DJing and in my
 

00:10:50.899 --> 00:10:54.540
of Google I do a bit of DJing and in my
head I like to DJ in places like this

00:10:54.540 --> 00:10:54.550
head I like to DJ in places like this
 

00:10:54.550 --> 00:10:57.009
head I like to DJ in places like this
but the reality is actually probably

00:10:57.009 --> 00:10:57.019
but the reality is actually probably
 

00:10:57.019 --> 00:11:01.449
but the reality is actually probably
closer to this more people definitely

00:11:01.449 --> 00:11:01.459
closer to this more people definitely
 

00:11:01.459 --> 00:11:04.050
closer to this more people definitely
definitely turned up later I promise

00:11:04.050 --> 00:11:04.060
definitely turned up later I promise
 

00:11:04.060 --> 00:11:06.670
definitely turned up later I promise
ok so today I'm going to give you two

00:11:06.670 --> 00:11:06.680
ok so today I'm going to give you two
 

00:11:06.680 --> 00:11:08.440
ok so today I'm going to give you two
best practices which you can use in your

00:11:08.440 --> 00:11:08.450
best practices which you can use in your
 

00:11:08.450 --> 00:11:10.870
best practices which you can use in your
apps to create amazing audio experiences

00:11:10.870 --> 00:11:10.880
apps to create amazing audio experiences
 

00:11:10.880 --> 00:11:13.960
apps to create amazing audio experiences
these are obtained low latency audio

00:11:13.960 --> 00:11:13.970
these are obtained low latency audio
 

00:11:13.970 --> 00:11:17.290
these are obtained low latency audio
paths and meet your audio deadlines so

00:11:17.290 --> 00:11:17.300
paths and meet your audio deadlines so
 

00:11:17.300 --> 00:11:19.329
paths and meet your audio deadlines so
you don't give your users headaches by

00:11:19.329 --> 00:11:19.339
you don't give your users headaches by
 

00:11:19.339 --> 00:11:21.310
you don't give your users headaches by
putting audio glitches into their ears

00:11:21.310 --> 00:11:21.320
putting audio glitches into their ears
 

00:11:21.320 --> 00:11:25.690
putting audio glitches into their ears
so so starting with obtain low latency

00:11:25.690 --> 00:11:25.700
so so starting with obtain low latency
 

00:11:25.700 --> 00:11:28.030
so so starting with obtain low latency
files I'm going to talk about two signal

00:11:28.030 --> 00:11:28.040
files I'm going to talk about two signal
 

00:11:28.040 --> 00:11:29.590
files I'm going to talk about two signal
paths through the group through the

00:11:29.590 --> 00:11:29.600
paths through the group through the
 

00:11:29.600 --> 00:11:32.699
paths through the group through the
Android system number one recording and

00:11:32.699 --> 00:11:32.709
Android system number one recording and
 

00:11:32.709 --> 00:11:36.760
Android system number one recording and
number two playback now one of the first

00:11:36.760 --> 00:11:36.770
number two playback now one of the first
 

00:11:36.770 --> 00:11:38.260
number two playback now one of the first
questions that I often get from

00:11:38.260 --> 00:11:38.270
questions that I often get from
 

00:11:38.270 --> 00:11:40.960
questions that I often get from
developers is what is the latency of

00:11:40.960 --> 00:11:40.970
developers is what is the latency of
 

00:11:40.970 --> 00:11:44.139
developers is what is the latency of
this path and this is the thinking

00:11:44.139 --> 00:11:44.149
this path and this is the thinking
 

00:11:44.149 --> 00:11:46.690
this path and this is the thinking
behind the audio dot Pro Hardware

00:11:46.690 --> 00:11:46.700
behind the audio dot Pro Hardware
 

00:11:46.700 --> 00:11:49.630
behind the audio dot Pro Hardware
feature flag and if the device reports

00:11:49.630 --> 00:11:49.640
feature flag and if the device reports
 

00:11:49.640 --> 00:11:51.550
feature flag and if the device reports
support for this lag it means that this

00:11:51.550 --> 00:11:51.560
support for this lag it means that this
 

00:11:51.560 --> 00:11:54.730
support for this lag it means that this
particular path is less than 20

00:11:54.730 --> 00:11:54.740
particular path is less than 20
 

00:11:54.740 --> 00:11:57.850
particular path is less than 20
milliseconds over the headset you can

00:11:57.850 --> 00:11:57.860
milliseconds over the headset you can
 

00:11:57.860 --> 00:11:59.500
milliseconds over the headset you can
use this flag in your app to either

00:11:59.500 --> 00:11:59.510
use this flag in your app to either
 

00:11:59.510 --> 00:12:02.170
use this flag in your app to either
enable certain features such as live

00:12:02.170 --> 00:12:02.180
enable certain features such as live
 

00:12:02.180 --> 00:12:05.230
enable certain features such as live
monitoring or you can only distribute to

00:12:05.230 --> 00:12:05.240
monitoring or you can only distribute to
 

00:12:05.240 --> 00:12:07.210
monitoring or you can only distribute to
these devices these Pro audio devices

00:12:07.210 --> 00:12:07.220
these devices these Pro audio devices
 

00:12:07.220 --> 00:12:10.030
these devices these Pro audio devices
and there's now tens of devices in

00:12:10.030 --> 00:12:10.040
and there's now tens of devices in
 

00:12:10.040 --> 00:12:11.650
and there's now tens of devices in
market which is supporting this

00:12:11.650 --> 00:12:11.660
market which is supporting this
 

00:12:11.660 --> 00:12:13.150
market which is supporting this
particular standard so it's not just

00:12:13.150 --> 00:12:13.160
particular standard so it's not just
 

00:12:13.160 --> 00:12:15.730
particular standard so it's not just
pixel and Nexus devices we're seeing

00:12:15.730 --> 00:12:15.740
pixel and Nexus devices we're seeing
 

00:12:15.740 --> 00:12:21.730
pixel and Nexus devices we're seeing
good uptake from OMS as well so audio

00:12:21.730 --> 00:12:21.740
good uptake from OMS as well so audio
 

00:12:21.740 --> 00:12:24.850
good uptake from OMS as well so audio
recording this is the past through the

00:12:24.850 --> 00:12:24.860
recording this is the past through the
 

00:12:24.860 --> 00:12:26.560
recording this is the past through the
Android audio framework when you're

00:12:26.560 --> 00:12:26.570
Android audio framework when you're
 

00:12:26.570 --> 00:12:29.259
Android audio framework when you're
recording you have an analog signal into

00:12:29.259 --> 00:12:29.269
recording you have an analog signal into
 

00:12:29.269 --> 00:12:31.000
recording you have an analog signal into
a microphone goes through an analog to

00:12:31.000 --> 00:12:31.010
a microphone goes through an analog to
 

00:12:31.010 --> 00:12:33.850
a microphone goes through an analog to
digital converter through some effects

00:12:33.850 --> 00:12:33.860
digital converter through some effects
 

00:12:33.860 --> 00:12:35.889
digital converter through some effects
to kind of clean up the signal this can

00:12:35.889 --> 00:12:35.899
to kind of clean up the signal this can
 

00:12:35.899 --> 00:12:38.620
to kind of clean up the signal this can
be things like noise cancellation and

00:12:38.620 --> 00:12:38.630
be things like noise cancellation and
 

00:12:38.630 --> 00:12:40.930
be things like noise cancellation and
code cancellation and then the digital

00:12:40.930 --> 00:12:40.940
code cancellation and then the digital
 

00:12:40.940 --> 00:12:44.940
code cancellation and then the digital
data is delivered to your app now effect

00:12:44.940 --> 00:12:44.950
data is delivered to your app now effect
 

00:12:44.950 --> 00:12:48.700
data is delivered to your app now effect
can add latency so if if we're talking

00:12:48.700 --> 00:12:48.710
can add latency so if if we're talking
 

00:12:48.710 --> 00:12:50.530
can add latency so if if we're talking
about low latency apps what we want is

00:12:50.530 --> 00:12:50.540
about low latency apps what we want is
 

00:12:50.540 --> 00:12:52.930
about low latency apps what we want is
the lowest possible latency and there is

00:12:52.930 --> 00:12:52.940
the lowest possible latency and there is
 

00:12:52.940 --> 00:12:56.110
the lowest possible latency and there is
a route through the system which allows

00:12:56.110 --> 00:12:56.120
a route through the system which allows
 

00:12:56.120 --> 00:12:58.810
a route through the system which allows
us to avoid adding this latency and this

00:12:58.810 --> 00:12:58.820
us to avoid adding this latency and this
 

00:12:58.820 --> 00:13:00.340
us to avoid adding this latency and this
is a plane using the voice recognition

00:13:00.340 --> 00:13:00.350
is a plane using the voice recognition
 

00:13:00.350 --> 00:13:03.190
is a plane using the voice recognition
preset the other thing we need to

00:13:03.190 --> 00:13:03.200
preset the other thing we need to
 

00:13:03.200 --> 00:13:06.580
preset the other thing we need to
remember here is to use PCM 16 format

00:13:06.580 --> 00:13:06.590
remember here is to use PCM 16 format
 

00:13:06.590 --> 00:13:10.180
remember here is to use PCM 16 format
and this essentially allows the audio

00:13:10.180 --> 00:13:10.190
and this essentially allows the audio
 

00:13:10.190 --> 00:13:12.490
and this essentially allows the audio
framework to not do any format shifting

00:13:12.490 --> 00:13:12.500
framework to not do any format shifting
 

00:13:12.500 --> 00:13:16.120
framework to not do any format shifting
which potentially could add latency so

00:13:16.120 --> 00:13:16.130
which potentially could add latency so
 

00:13:16.130 --> 00:13:17.380
which potentially could add latency so
that's all I'm going to say about audio

00:13:17.380 --> 00:13:17.390
that's all I'm going to say about audio
 

00:13:17.390 --> 00:13:21.220
that's all I'm going to say about audio
recording audio playback is a little bit

00:13:21.220 --> 00:13:21.230
recording audio playback is a little bit
 

00:13:21.230 --> 00:13:24.190
recording audio playback is a little bit
more complicated so every phone that

00:13:24.190 --> 00:13:24.200
more complicated so every phone that
 

00:13:24.200 --> 00:13:27.340
more complicated so every phone that
produces audio in the world has digital

00:13:27.340 --> 00:13:27.350
produces audio in the world has digital
 

00:13:27.350 --> 00:13:29.560
produces audio in the world has digital
to analog converter in it this takes one

00:13:29.560 --> 00:13:29.570
to analog converter in it this takes one
 

00:13:29.570 --> 00:13:30.760
to analog converter in it this takes one
the noughts and converts it into a

00:13:30.760 --> 00:13:30.770
the noughts and converts it into a
 

00:13:30.770 --> 00:13:32.680
the noughts and converts it into a
voltage which is used to drive

00:13:32.680 --> 00:13:32.690
voltage which is used to drive
 

00:13:32.690 --> 00:13:36.430
voltage which is used to drive
headphones or a speaker now I like to

00:13:36.430 --> 00:13:36.440
headphones or a speaker now I like to
 

00:13:36.440 --> 00:13:39.570
headphones or a speaker now I like to
think of this as kind of a character

00:13:39.570 --> 00:13:39.580
think of this as kind of a character
 

00:13:39.580 --> 00:13:43.090
think of this as kind of a character
which is chomping down on this audio

00:13:43.090 --> 00:13:43.100
which is chomping down on this audio
 

00:13:43.100 --> 00:13:45.190
which is chomping down on this audio
data and producing a signal if I even

00:13:45.190 --> 00:13:45.200
data and producing a signal if I even
 

00:13:45.200 --> 00:13:49.200
data and producing a signal if I even
have a name for him DAC man

00:13:49.200 --> 00:13:49.210
have a name for him DAC man
 

00:13:49.210 --> 00:13:55.840
have a name for him DAC man
now that man has very specific

00:13:55.840 --> 00:13:55.850
now that man has very specific
 

00:13:55.850 --> 00:13:59.620
now that man has very specific
requirements for his food he wants it

00:13:59.620 --> 00:13:59.630
requirements for his food he wants it
 

00:13:59.630 --> 00:14:02.740
requirements for his food he wants it
served to him at a certain rate and he

00:14:02.740 --> 00:14:02.750
served to him at a certain rate and he
 

00:14:02.750 --> 00:14:04.000
served to him at a certain rate and he
also wants it served to him in

00:14:04.000 --> 00:14:04.010
also wants it served to him in
 

00:14:04.010 --> 00:14:06.490
also wants it served to him in
bite-sized chunks of a very specific

00:14:06.490 --> 00:14:06.500
bite-sized chunks of a very specific
 

00:14:06.500 --> 00:14:09.250
bite-sized chunks of a very specific
size now for this analogy to work DAC

00:14:09.250 --> 00:14:09.260
size now for this analogy to work DAC
 

00:14:09.260 --> 00:14:11.980
size now for this analogy to work DAC
man also includes DMA controller and all

00:14:11.980 --> 00:14:11.990
man also includes DMA controller and all
 

00:14:11.990 --> 00:14:13.930
man also includes DMA controller and all
the other hardware required to consume

00:14:13.930 --> 00:14:13.940
the other hardware required to consume
 

00:14:13.940 --> 00:14:16.660
the other hardware required to consume
audio so just bear with it so this is

00:14:16.660 --> 00:14:16.670
audio so just bear with it so this is
 

00:14:16.670 --> 00:14:20.340
audio so just bear with it so this is
how DAC man fits in to the Android audio

00:14:20.340 --> 00:14:20.350
how DAC man fits in to the Android audio
 

00:14:20.350 --> 00:14:23.800
how DAC man fits in to the Android audio
architecture so your app is at the top

00:14:23.800 --> 00:14:23.810
architecture so your app is at the top
 

00:14:23.810 --> 00:14:25.900
architecture so your app is at the top
here and it's your job to get your audio

00:14:25.900 --> 00:14:25.910
here and it's your job to get your audio
 

00:14:25.910 --> 00:14:28.990
here and it's your job to get your audio
data to the the output as quickly as

00:14:28.990 --> 00:14:29.000
data to the the output as quickly as
 

00:14:29.000 --> 00:14:31.330
data to the the output as quickly as
possible the default path through the

00:14:31.330 --> 00:14:31.340
possible the default path through the
 

00:14:31.340 --> 00:14:34.830
possible the default path through the
system is to go through a resampler

00:14:34.830 --> 00:14:34.840
system is to go through a resampler
 

00:14:34.840 --> 00:14:37.540
system is to go through a resampler
through some effects again to improve

00:14:37.540 --> 00:14:37.550
through some effects again to improve
 

00:14:37.550 --> 00:14:39.220
through some effects again to improve
the acoustic quality of the signal and

00:14:39.220 --> 00:14:39.230
the acoustic quality of the signal and
 

00:14:39.230 --> 00:14:41.620
the acoustic quality of the signal and
then through a mixer and outs of that

00:14:41.620 --> 00:14:41.630
then through a mixer and outs of that
 

00:14:41.630 --> 00:14:45.040
then through a mixer and outs of that
man now as with the recording pass the

00:14:45.040 --> 00:14:45.050
man now as with the recording pass the
 

00:14:45.050 --> 00:14:47.560
man now as with the recording pass the
resampler and effects will add latency

00:14:47.560 --> 00:14:47.570
resampler and effects will add latency
 

00:14:47.570 --> 00:14:49.840
resampler and effects will add latency
and we can obtain a lower latency path

00:14:49.840 --> 00:14:49.850
and we can obtain a lower latency path
 

00:14:49.850 --> 00:14:51.490
and we can obtain a lower latency path
called the

00:14:51.490 --> 00:14:51.500
called the
 

00:14:51.500 --> 00:14:55.720
called the
fast mixer path if our app conforms to

00:14:55.720 --> 00:14:55.730
fast mixer path if our app conforms to
 

00:14:55.730 --> 00:15:02.260
fast mixer path if our app conforms to
certain requirements so number one we

00:15:02.260 --> 00:15:02.270
certain requirements so number one we
 

00:15:02.270 --> 00:15:04.930
certain requirements so number one we
need to obtain the correct sample rate

00:15:04.930 --> 00:15:04.940
need to obtain the correct sample rate
 

00:15:04.940 --> 00:15:07.030
need to obtain the correct sample rate
so remember I said DAC man once it's

00:15:07.030 --> 00:15:07.040
so remember I said DAC man once it's
 

00:15:07.040 --> 00:15:09.100
so remember I said DAC man once it's
food at a specific rate we can use the

00:15:09.100 --> 00:15:09.110
food at a specific rate we can use the
 

00:15:09.110 --> 00:15:11.200
food at a specific rate we can use the
audio manager API to find out exactly

00:15:11.200 --> 00:15:11.210
audio manager API to find out exactly
 

00:15:11.210 --> 00:15:14.080
audio manager API to find out exactly
what that rate is and that will enable

00:15:14.080 --> 00:15:14.090
what that rate is and that will enable
 

00:15:14.090 --> 00:15:17.650
what that rate is and that will enable
us to create an audio stream on this

00:15:17.650 --> 00:15:17.660
us to create an audio stream on this
 

00:15:17.660 --> 00:15:19.540
us to create an audio stream on this
fast path the other thing we need to

00:15:19.540 --> 00:15:19.550
fast path the other thing we need to
 

00:15:19.550 --> 00:15:23.920
fast path the other thing we need to
remember is not to add any effects so

00:15:23.920 --> 00:15:23.930
remember is not to add any effects so
 

00:15:23.930 --> 00:15:26.890
remember is not to add any effects so
once we've created this audio streams to

00:15:26.890 --> 00:15:26.900
once we've created this audio streams to
 

00:15:26.900 --> 00:15:28.960
once we've created this audio streams to
DAC man we need to start supplying audio

00:15:28.960 --> 00:15:28.970
DAC man we need to start supplying audio
 

00:15:28.970 --> 00:15:31.090
DAC man we need to start supplying audio
data and we need to do it in this

00:15:31.090 --> 00:15:31.100
data and we need to do it in this
 

00:15:31.100 --> 00:15:33.640
data and we need to do it in this
specific chunk size and again we can use

00:15:33.640 --> 00:15:33.650
specific chunk size and again we can use
 

00:15:33.650 --> 00:15:35.800
specific chunk size and again we can use
the audio manager API to obtain this

00:15:35.800 --> 00:15:35.810
the audio manager API to obtain this
 

00:15:35.810 --> 00:15:39.940
the audio manager API to obtain this
optimal size so after this first chunk

00:15:39.940 --> 00:15:39.950
optimal size so after this first chunk
 

00:15:39.950 --> 00:15:43.690
optimal size so after this first chunk
of audio data is consumed by DAC man he

00:15:43.690 --> 00:15:43.700
of audio data is consumed by DAC man he
 

00:15:43.700 --> 00:15:46.720
of audio data is consumed by DAC man he
sends us a call back he's basically

00:15:46.720 --> 00:15:46.730
sends us a call back he's basically
 

00:15:46.730 --> 00:15:49.510
sends us a call back he's basically
saying I've run our food feed me more

00:15:49.510 --> 00:15:49.520
saying I've run our food feed me more
 

00:15:49.520 --> 00:15:52.390
saying I've run our food feed me more
and we get this callback on a high

00:15:52.390 --> 00:15:52.400
and we get this callback on a high
 

00:15:52.400 --> 00:15:54.130
and we get this callback on a high
priority thread and this allows you to

00:15:54.130 --> 00:15:54.140
priority thread and this allows you to
 

00:15:54.140 --> 00:15:56.680
priority thread and this allows you to
do your audio processing work without

00:15:56.680 --> 00:15:56.690
do your audio processing work without
 

00:15:56.690 --> 00:15:58.780
do your audio processing work without
being preempted by other parts of the

00:15:58.780 --> 00:15:58.790
being preempted by other parts of the
 

00:15:58.790 --> 00:16:01.810
being preempted by other parts of the
system now this is a fairly critical

00:16:01.810 --> 00:16:01.820
system now this is a fairly critical
 

00:16:01.820 --> 00:16:04.480
system now this is a fairly critical
part of any audio app so let's take a

00:16:04.480 --> 00:16:04.490
part of any audio app so let's take a
 

00:16:04.490 --> 00:16:06.610
part of any audio app so let's take a
closer look at what happens inside this

00:16:06.610 --> 00:16:06.620
closer look at what happens inside this
 

00:16:06.620 --> 00:16:09.610
closer look at what happens inside this
callback so every callback have a

00:16:09.610 --> 00:16:09.620
callback so every callback have a
 

00:16:09.620 --> 00:16:11.230
callback so every callback have a
deadline remember that you have to send

00:16:11.230 --> 00:16:11.240
deadline remember that you have to send
 

00:16:11.240 --> 00:16:13.420
deadline remember that you have to send
these chunks of audio data a very

00:16:13.420 --> 00:16:13.430
these chunks of audio data a very
 

00:16:13.430 --> 00:16:16.600
these chunks of audio data a very
specific intervals so the amount of time

00:16:16.600 --> 00:16:16.610
specific intervals so the amount of time
 

00:16:16.610 --> 00:16:18.730
specific intervals so the amount of time
you spend in this callback is going to

00:16:18.730 --> 00:16:18.740
you spend in this callback is going to
 

00:16:18.740 --> 00:16:21.370
you spend in this callback is going to
vary based on the computations that

00:16:21.370 --> 00:16:21.380
vary based on the computations that
 

00:16:21.380 --> 00:16:23.260
vary based on the computations that
you're performing like the complexity of

00:16:23.260 --> 00:16:23.270
you're performing like the complexity of
 

00:16:23.270 --> 00:16:26.140
you're performing like the complexity of
the the audio data but also CPU

00:16:26.140 --> 00:16:26.150
the the audio data but also CPU
 

00:16:26.150 --> 00:16:28.240
the the audio data but also CPU
frequency and you know the device they

00:16:28.240 --> 00:16:28.250
frequency and you know the device they
 

00:16:28.250 --> 00:16:31.840
frequency and you know the device they
are running on if you miss this deadline

00:16:31.840 --> 00:16:31.850
are running on if you miss this deadline
 

00:16:31.850 --> 00:16:35.800
are running on if you miss this deadline
that man is going to be very unhappy and

00:16:35.800 --> 00:16:35.810
that man is going to be very unhappy and
 

00:16:35.810 --> 00:16:39.660
that man is going to be very unhappy and
he's going to output silence in protest

00:16:39.660 --> 00:16:39.670
he's going to output silence in protest
 

00:16:39.670 --> 00:16:41.890
he's going to output silence in protest
so it's very important that we don't

00:16:41.890 --> 00:16:41.900
so it's very important that we don't
 

00:16:41.900 --> 00:16:45.880
so it's very important that we don't
miss these deadlines so for the next

00:16:45.880 --> 00:16:45.890
miss these deadlines so for the next
 

00:16:45.890 --> 00:16:48.370
miss these deadlines so for the next
part I wanted to talk about some common

00:16:48.370 --> 00:16:48.380
part I wanted to talk about some common
 

00:16:48.380 --> 00:16:51.190
part I wanted to talk about some common
reasons why you might miss these audio

00:16:51.190 --> 00:16:51.200
reasons why you might miss these audio
 

00:16:51.200 --> 00:16:54.340
reasons why you might miss these audio
deadlines so starting with blocking so

00:16:54.340 --> 00:16:54.350
deadlines so starting with blocking so
 

00:16:54.350 --> 00:16:56.500
deadlines so starting with blocking so
inside your callback there are various

00:16:56.500 --> 00:16:56.510
inside your callback there are various
 

00:16:56.510 --> 00:16:58.900
inside your callback there are various
reasons you might block and here I have

00:16:58.900 --> 00:16:58.910
reasons you might block and here I have
 

00:16:58.910 --> 00:17:01.900
reasons you might block and here I have
a code sample which does a whole lot of

00:17:01.900 --> 00:17:01.910
a code sample which does a whole lot of
 

00:17:01.910 --> 00:17:03.970
a code sample which does a whole lot of
bad things things you shouldn't do in

00:17:03.970 --> 00:17:03.980
bad things things you shouldn't do in
 

00:17:03.980 --> 00:17:05.410
bad things things you shouldn't do in
your callback so

00:17:05.410 --> 00:17:05.420
your callback so
 

00:17:05.420 --> 00:17:09.550
your callback so
one logging instead of logging inside

00:17:09.550 --> 00:17:09.560
one logging instead of logging inside
 

00:17:09.560 --> 00:17:11.500
one logging instead of logging inside
the callback you should use a trace and

00:17:11.500 --> 00:17:11.510
the callback you should use a trace and
 

00:17:11.510 --> 00:17:13.390
the callback you should use a trace and
use systrace it's a much better tool for

00:17:13.390 --> 00:17:13.400
use systrace it's a much better tool for
 

00:17:13.400 --> 00:17:16.660
use systrace it's a much better tool for
debugging the callback don't do memory

00:17:16.660 --> 00:17:16.670
debugging the callback don't do memory
 

00:17:16.670 --> 00:17:19.420
debugging the callback don't do memory
allocation if you need to use memory

00:17:19.420 --> 00:17:19.430
allocation if you need to use memory
 

00:17:19.430 --> 00:17:21.340
allocation if you need to use memory
inside the callback which invariably you

00:17:21.340 --> 00:17:21.350
inside the callback which invariably you
 

00:17:21.350 --> 00:17:23.350
inside the callback which invariably you
do you should allocate the memory

00:17:23.350 --> 00:17:23.360
do you should allocate the memory
 

00:17:23.360 --> 00:17:25.540
do you should allocate the memory
upfront when you instantiate your audio

00:17:25.540 --> 00:17:25.550
upfront when you instantiate your audio
 

00:17:25.550 --> 00:17:27.820
upfront when you instantiate your audio
stream and then just use it inside here

00:17:27.820 --> 00:17:27.830
stream and then just use it inside here
 

00:17:27.830 --> 00:17:29.140
stream and then just use it inside here
rather than trying to allocate new

00:17:29.140 --> 00:17:29.150
rather than trying to allocate new
 

00:17:29.150 --> 00:17:33.070
rather than trying to allocate new
memory don't wait on other threads bear

00:17:33.070 --> 00:17:33.080
memory don't wait on other threads bear
 

00:17:33.080 --> 00:17:34.360
memory don't wait on other threads bear
in mind you this is a high priority

00:17:34.360 --> 00:17:34.370
in mind you this is a high priority
 

00:17:34.370 --> 00:17:36.430
in mind you this is a high priority
callback so if you're waiting on a lower

00:17:36.430 --> 00:17:36.440
callback so if you're waiting on a lower
 

00:17:36.440 --> 00:17:38.080
callback so if you're waiting on a lower
priority thread you have priority

00:17:38.080 --> 00:17:38.090
priority thread you have priority
 

00:17:38.090 --> 00:17:42.160
priority thread you have priority
inversion don't do file i/o if you need

00:17:42.160 --> 00:17:42.170
inversion don't do file i/o if you need
 

00:17:42.170 --> 00:17:43.990
inversion don't do file i/o if you need
to read from a file use another thread

00:17:43.990 --> 00:17:44.000
to read from a file use another thread
 

00:17:44.000 --> 00:17:46.440
to read from a file use another thread
and then use a non-blocking queue or a

00:17:46.440 --> 00:17:46.450
and then use a non-blocking queue or a
 

00:17:46.450 --> 00:17:49.450
and then use a non-blocking queue or a
circular buffer to transfer data into

00:17:49.450 --> 00:17:49.460
circular buffer to transfer data into
 

00:17:49.460 --> 00:17:51.970
circular buffer to transfer data into
the callback and don't sleep there

00:17:51.970 --> 00:17:51.980
the callback and don't sleep there
 

00:17:51.980 --> 00:17:53.860
the callback and don't sleep there
should never be any need to sleep inside

00:17:53.860 --> 00:17:53.870
should never be any need to sleep inside
 

00:17:53.870 --> 00:17:59.890
should never be any need to sleep inside
here so so we've dealt with blocking and

00:17:59.890 --> 00:17:59.900
here so so we've dealt with blocking and
 

00:17:59.900 --> 00:18:02.140
here so so we've dealt with blocking and
the next reason why you might miss your

00:18:02.140 --> 00:18:02.150
the next reason why you might miss your
 

00:18:02.150 --> 00:18:05.380
the next reason why you might miss your
deadlines is core migrations now when

00:18:05.380 --> 00:18:05.390
deadlines is core migrations now when
 

00:18:05.390 --> 00:18:07.540
deadlines is core migrations now when
you create an audio app on Android this

00:18:07.540 --> 00:18:07.550
you create an audio app on Android this
 

00:18:07.550 --> 00:18:10.030
you create an audio app on Android this
CPU scheduler will assign your audio

00:18:10.030 --> 00:18:10.040
CPU scheduler will assign your audio
 

00:18:10.040 --> 00:18:12.520
CPU scheduler will assign your audio
thread to a particular call and here

00:18:12.520 --> 00:18:12.530
thread to a particular call and here
 

00:18:12.530 --> 00:18:15.310
thread to a particular call and here
here I have a cyst race which is showing

00:18:15.310 --> 00:18:15.320
here I have a cyst race which is showing
 

00:18:15.320 --> 00:18:18.580
here I have a cyst race which is showing
the audio thread running on CPU 1 and we

00:18:18.580 --> 00:18:18.590
the audio thread running on CPU 1 and we
 

00:18:18.590 --> 00:18:21.400
the audio thread running on CPU 1 and we
have 4 callbacks marked in those green

00:18:21.400 --> 00:18:21.410
have 4 callbacks marked in those green
 

00:18:21.410 --> 00:18:23.530
have 4 callbacks marked in those green
rectangles there are other callbacks the

00:18:23.530 --> 00:18:23.540
rectangles there are other callbacks the
 

00:18:23.540 --> 00:18:25.450
rectangles there are other callbacks the
other row of interest is F ready one

00:18:25.450 --> 00:18:25.460
other row of interest is F ready one
 

00:18:25.460 --> 00:18:26.980
other row of interest is F ready one
here which shows us the state of our

00:18:26.980 --> 00:18:26.990
here which shows us the state of our
 

00:18:26.990 --> 00:18:33.010
here which shows us the state of our
audio buffer and we have 4 callbacks and

00:18:33.010 --> 00:18:33.020
audio buffer and we have 4 callbacks and
 

00:18:33.020 --> 00:18:35.590
audio buffer and we have 4 callbacks and
then the CPU scheduler shifts our thread

00:18:35.590 --> 00:18:35.600
then the CPU scheduler shifts our thread
 

00:18:35.600 --> 00:18:38.860
then the CPU scheduler shifts our thread
over C to CPU 0 now this core migration

00:18:38.860 --> 00:18:38.870
over C to CPU 0 now this core migration
 

00:18:38.870 --> 00:18:42.280
over C to CPU 0 now this core migration
can incur a slight time penalty in the

00:18:42.280 --> 00:18:42.290
can incur a slight time penalty in the
 

00:18:42.290 --> 00:18:44.470
can incur a slight time penalty in the
order of a few milliseconds and this can

00:18:44.470 --> 00:18:44.480
order of a few milliseconds and this can
 

00:18:44.480 --> 00:18:46.090
order of a few milliseconds and this can
cause I'll call back to the start late

00:18:46.090 --> 00:18:46.100
cause I'll call back to the start late
 

00:18:46.100 --> 00:18:48.160
cause I'll call back to the start late
and therefore run over and sure enough

00:18:48.160 --> 00:18:48.170
and therefore run over and sure enough
 

00:18:48.170 --> 00:18:51.220
and therefore run over and sure enough
we have an audio glitch occurring there

00:18:51.220 --> 00:18:51.230
we have an audio glitch occurring there
 

00:18:51.230 --> 00:18:56.410
we have an audio glitch occurring there
so the solution to this is to set thread

00:18:56.410 --> 00:18:56.420
so the solution to this is to set thread
 

00:18:56.420 --> 00:18:58.330
so the solution to this is to set thread
affinity which means that we can bind

00:18:58.330 --> 00:18:58.340
affinity which means that we can bind
 

00:18:58.340 --> 00:19:00.580
affinity which means that we can bind
our audio thread either to the current

00:19:00.580 --> 00:19:00.590
our audio thread either to the current
 

00:19:00.590 --> 00:19:03.490
our audio thread either to the current
core which were assigned that's like an

00:19:03.490 --> 00:19:03.500
core which were assigned that's like an
 

00:19:03.500 --> 00:19:06.340
core which were assigned that's like an
OK way of doing it or we can use get

00:19:06.340 --> 00:19:06.350
OK way of doing it or we can use get
 

00:19:06.350 --> 00:19:10.030
OK way of doing it or we can use get
exclusive cores on API 24 or above in

00:19:10.030 --> 00:19:10.040
exclusive cores on API 24 or above in
 

00:19:10.040 --> 00:19:12.670
exclusive cores on API 24 or above in
order to get the cords which are

00:19:12.670 --> 00:19:12.680
order to get the cords which are
 

00:19:12.680 --> 00:19:14.050
order to get the cords which are
reserved for the current foreground

00:19:14.050 --> 00:19:14.060
reserved for the current foreground
 

00:19:14.060 --> 00:19:16.659
reserved for the current foreground
application

00:19:16.659 --> 00:19:16.669
application
 

00:19:16.669 --> 00:19:19.940
application
right lastly CPU frequency scaling so

00:19:19.940 --> 00:19:19.950
right lastly CPU frequency scaling so
 

00:19:19.950 --> 00:19:22.669
right lastly CPU frequency scaling so
this is a process which is used to give

00:19:22.669 --> 00:19:22.679
this is a process which is used to give
 

00:19:22.679 --> 00:19:25.340
this is a process which is used to give
users great performance and great

00:19:25.340 --> 00:19:25.350
users great performance and great
 

00:19:25.350 --> 00:19:26.960
users great performance and great
battery it's like a power performance

00:19:26.960 --> 00:19:26.970
battery it's like a power performance
 

00:19:26.970 --> 00:19:29.840
battery it's like a power performance
trade-off CPU frequency is high when

00:19:29.840 --> 00:19:29.850
trade-off CPU frequency is high when
 

00:19:29.850 --> 00:19:32.210
trade-off CPU frequency is high when
users need good performance and low when

00:19:32.210 --> 00:19:32.220
users need good performance and low when
 

00:19:32.220 --> 00:19:33.560
users need good performance and low when
they don't need good performance but

00:19:33.560 --> 00:19:33.570
they don't need good performance but
 

00:19:33.570 --> 00:19:36.049
they don't need good performance but
they do want to conserve power so this

00:19:36.049 --> 00:19:36.059
they do want to conserve power so this
 

00:19:36.059 --> 00:19:38.240
they do want to conserve power so this
is great for most applications but for

00:19:38.240 --> 00:19:38.250
is great for most applications but for
 

00:19:38.250 --> 00:19:40.039
is great for most applications but for
real-time audio applications it can

00:19:40.039 --> 00:19:40.049
real-time audio applications it can
 

00:19:40.049 --> 00:19:42.799
real-time audio applications it can
cause a problem so imagine you have a

00:19:42.799 --> 00:19:42.809
cause a problem so imagine you have a
 

00:19:42.809 --> 00:19:45.620
cause a problem so imagine you have a
synthesizer app and every time you press

00:19:45.620 --> 00:19:45.630
synthesizer app and every time you press
 

00:19:45.630 --> 00:19:48.529
synthesizer app and every time you press
a key the synthesizer app generates the

00:19:48.529 --> 00:19:48.539
a key the synthesizer app generates the
 

00:19:48.539 --> 00:19:52.340
a key the synthesizer app generates the
voice this is how the computational

00:19:52.340 --> 00:19:52.350
voice this is how the computational
 

00:19:52.350 --> 00:19:55.130
voice this is how the computational
graph might look for an app like this so

00:19:55.130 --> 00:19:55.140
graph might look for an app like this so
 

00:19:55.140 --> 00:19:57.590
graph might look for an app like this so
we start off we have 10 fingers down on

00:19:57.590 --> 00:19:57.600
we start off we have 10 fingers down on
 

00:19:57.600 --> 00:20:00.950
we start off we have 10 fingers down on
our keyboard and at the app bandwidth

00:20:00.950 --> 00:20:00.960
our keyboard and at the app bandwidth
 

00:20:00.960 --> 00:20:04.340
our keyboard and at the app bandwidth
required is fairly high now we take our

00:20:04.340 --> 00:20:04.350
required is fairly high now we take our
 

00:20:04.350 --> 00:20:06.860
required is fairly high now we take our
fingers off that keyboard our bandwidth

00:20:06.860 --> 00:20:06.870
fingers off that keyboard our bandwidth
 

00:20:06.870 --> 00:20:09.649
fingers off that keyboard our bandwidth
required drops down and the CPU governor

00:20:09.649 --> 00:20:09.659
required drops down and the CPU governor
 

00:20:09.659 --> 00:20:11.510
required drops down and the CPU governor
sees that actually our app doesn't need

00:20:11.510 --> 00:20:11.520
sees that actually our app doesn't need
 

00:20:11.520 --> 00:20:13.700
sees that actually our app doesn't need
as much bandwidth so it drops down the

00:20:13.700 --> 00:20:13.710
as much bandwidth so it drops down the
 

00:20:13.710 --> 00:20:16.220
as much bandwidth so it drops down the
CPU frequency everything's fine so far

00:20:16.220 --> 00:20:16.230
CPU frequency everything's fine so far
 

00:20:16.230 --> 00:20:18.980
CPU frequency everything's fine so far
now we've put our fingers back on the

00:20:18.980 --> 00:20:18.990
now we've put our fingers back on the
 

00:20:18.990 --> 00:20:21.380
now we've put our fingers back on the
keyboard our bandwidth rises to its

00:20:21.380 --> 00:20:21.390
keyboard our bandwidth rises to its
 

00:20:21.390 --> 00:20:23.840
keyboard our bandwidth rises to its
previous level but the governor takes a

00:20:23.840 --> 00:20:23.850
previous level but the governor takes a
 

00:20:23.850 --> 00:20:26.390
previous level but the governor takes a
while to ramp the CPU frequency back up

00:20:26.390 --> 00:20:26.400
while to ramp the CPU frequency back up
 

00:20:26.400 --> 00:20:28.430
while to ramp the CPU frequency back up
to the level that we need so

00:20:28.430 --> 00:20:28.440
to the level that we need so
 

00:20:28.440 --> 00:20:31.520
to the level that we need so
unfortunately during this time glitches

00:20:31.520 --> 00:20:31.530
unfortunately during this time glitches
 

00:20:31.530 --> 00:20:35.570
unfortunately during this time glitches
are occurring so the solution to this

00:20:35.570 --> 00:20:35.580
are occurring so the solution to this
 

00:20:35.580 --> 00:20:38.330
are occurring so the solution to this
well this the title of this talk is best

00:20:38.330 --> 00:20:38.340
well this the title of this talk is best
 

00:20:38.340 --> 00:20:40.070
well this the title of this talk is best
practices for Android audio but for this

00:20:40.070 --> 00:20:40.080
practices for Android audio but for this
 

00:20:40.080 --> 00:20:43.010
practices for Android audio but for this
section alone let's just call this Don's

00:20:43.010 --> 00:20:43.020
section alone let's just call this Don's
 

00:20:43.020 --> 00:20:45.560
section alone let's just call this Don's
practices for Android audio and this is

00:20:45.560 --> 00:20:45.570
practices for Android audio and this is
 

00:20:45.570 --> 00:20:47.330
practices for Android audio and this is
from working with top partners like

00:20:47.330 --> 00:20:47.340
from working with top partners like
 

00:20:47.340 --> 00:20:49.100
from working with top partners like
Raleigh this is what actually works in

00:20:49.100 --> 00:20:49.110
Raleigh this is what actually works in
 

00:20:49.110 --> 00:20:52.190
Raleigh this is what actually works in
the real world so what you can do is you

00:20:52.190 --> 00:20:52.200
the real world so what you can do is you
 

00:20:52.200 --> 00:20:54.289
the real world so what you can do is you
can use something called stabilizing

00:20:54.289 --> 00:20:54.299
can use something called stabilizing
 

00:20:54.299 --> 00:20:59.029
can use something called stabilizing
load now the idea here is that instead

00:20:59.029 --> 00:20:59.039
load now the idea here is that instead
 

00:20:59.039 --> 00:21:01.490
load now the idea here is that instead
of having a varying a varying amount of

00:21:01.490 --> 00:21:01.500
of having a varying a varying amount of
 

00:21:01.500 --> 00:21:02.990
of having a varying a varying amount of
time spent in your callback you have a

00:21:02.990 --> 00:21:03.000
time spent in your callback you have a
 

00:21:03.000 --> 00:21:04.970
time spent in your callback you have a
fixed amount of time and this

00:21:04.970 --> 00:21:04.980
fixed amount of time and this
 

00:21:04.980 --> 00:21:06.440
fixed amount of time and this
stabilizing load can be things like

00:21:06.440 --> 00:21:06.450
stabilizing load can be things like
 

00:21:06.450 --> 00:21:09.279
stabilizing load can be things like
gating voices on and off or you can use

00:21:09.279 --> 00:21:09.289
gating voices on and off or you can use
 

00:21:09.289 --> 00:21:11.649
gating voices on and off or you can use
assembler no operation instructions

00:21:11.649 --> 00:21:11.659
assembler no operation instructions
 

00:21:11.659 --> 00:21:16.390
assembler no operation instructions
basically to keep the CPU spinning so

00:21:16.390 --> 00:21:16.400
basically to keep the CPU spinning so
 

00:21:16.400 --> 00:21:19.399
basically to keep the CPU spinning so
the result of that is that you basically

00:21:19.399 --> 00:21:19.409
the result of that is that you basically
 

00:21:19.409 --> 00:21:23.590
the result of that is that you basically
have fixed load fixed CPU frequency and

00:21:23.590 --> 00:21:23.600
have fixed load fixed CPU frequency and
 

00:21:23.600 --> 00:21:25.730
have fixed load fixed CPU frequency and
you always have the bandwidth you

00:21:25.730 --> 00:21:25.740
you always have the bandwidth you
 

00:21:25.740 --> 00:21:28.390
you always have the bandwidth you
require in order to generate audio data

00:21:28.390 --> 00:21:28.400
require in order to generate audio data
 

00:21:28.400 --> 00:21:30.880
require in order to generate audio data
this is best used with sustained

00:21:30.880 --> 00:21:30.890
this is best used with sustained
 

00:21:30.890 --> 00:21:33.400
this is best used with sustained
performance mode on API 24 as this will

00:21:33.400 --> 00:21:33.410
performance mode on API 24 as this will
 

00:21:33.410 --> 00:21:35.140
performance mode on API 24 as this will
avoid you running to thermal throttling

00:21:35.140 --> 00:21:35.150
avoid you running to thermal throttling
 

00:21:35.150 --> 00:21:36.910
avoid you running to thermal throttling
issues

00:21:36.910 --> 00:21:36.920
issues
 

00:21:36.920 --> 00:21:40.420
issues
so in summary obtain low latency audio

00:21:40.420 --> 00:21:40.430
so in summary obtain low latency audio
 

00:21:40.430 --> 00:21:43.240
so in summary obtain low latency audio
and always make your audio deadlines I'd

00:21:43.240 --> 00:21:43.250
and always make your audio deadlines I'd
 

00:21:43.250 --> 00:21:45.460
and always make your audio deadlines I'd
now like to hand over to Phil who's

00:21:45.460 --> 00:21:45.470
now like to hand over to Phil who's
 

00:21:45.470 --> 00:21:47.050
now like to hand over to Phil who's
going to talk about a fantastic new

00:21:47.050 --> 00:21:47.060
going to talk about a fantastic new
 

00:21:47.060 --> 00:21:55.620
going to talk about a fantastic new
audio API in Android welcome Phil ok ok

00:21:55.620 --> 00:21:55.630
 

00:21:55.630 --> 00:21:59.110
hello my name is Phil Burke and I work

00:21:59.110 --> 00:21:59.120
hello my name is Phil Burke and I work
 

00:21:59.120 --> 00:22:01.420
hello my name is Phil Burke and I work
in the Android Audio group mostly on

00:22:01.420 --> 00:22:01.430
in the Android Audio group mostly on
 

00:22:01.430 --> 00:22:04.570
in the Android Audio group mostly on
MIDI and pro audio applications my

00:22:04.570 --> 00:22:04.580
MIDI and pro audio applications my
 

00:22:04.580 --> 00:22:06.850
MIDI and pro audio applications my
background is in experimental music so

00:22:06.850 --> 00:22:06.860
background is in experimental music so
 

00:22:06.860 --> 00:22:09.610
background is in experimental music so
my personal goal is to make the Android

00:22:09.610 --> 00:22:09.620
my personal goal is to make the Android
 

00:22:09.620 --> 00:22:11.800
my personal goal is to make the Android
platform really a great platform for

00:22:11.800 --> 00:22:11.810
platform really a great platform for
 

00:22:11.810 --> 00:22:13.960
platform really a great platform for
making strange kinds of new musical

00:22:13.960 --> 00:22:13.970
making strange kinds of new musical
 

00:22:13.970 --> 00:22:15.520
making strange kinds of new musical
instruments so that's sort of what

00:22:15.520 --> 00:22:15.530
instruments so that's sort of what
 

00:22:15.530 --> 00:22:19.930
instruments so that's sort of what
motivates me the what I'll be talking

00:22:19.930 --> 00:22:19.940
motivates me the what I'll be talking
 

00:22:19.940 --> 00:22:23.230
motivates me the what I'll be talking
about is a new audio API called a audio

00:22:23.230 --> 00:22:23.240
about is a new audio API called a audio
 

00:22:23.240 --> 00:22:25.630
about is a new audio API called a audio
which very excited about and I'll show

00:22:25.630 --> 00:22:25.640
which very excited about and I'll show
 

00:22:25.640 --> 00:22:27.780
which very excited about and I'll show
you how to do callbacks using that API

00:22:27.780 --> 00:22:27.790
you how to do callbacks using that API
 

00:22:27.790 --> 00:22:30.340
you how to do callbacks using that API
and I'll also show you how to optimize

00:22:30.340 --> 00:22:30.350
and I'll also show you how to optimize
 

00:22:30.350 --> 00:22:33.880
and I'll also show you how to optimize
your latency on any particular device

00:22:33.880 --> 00:22:33.890
your latency on any particular device
 

00:22:33.890 --> 00:22:39.100
your latency on any particular device
you happen to be running so a audio is a

00:22:39.100 --> 00:22:39.110
you happen to be running so a audio is a
 

00:22:39.110 --> 00:22:45.310
you happen to be running so a audio is a
C API so this is a native API you may be

00:22:45.310 --> 00:22:45.320
C API so this is a native API you may be
 

00:22:45.320 --> 00:22:47.740
C API so this is a native API you may be
wondering why a new API we already have

00:22:47.740 --> 00:22:47.750
wondering why a new API we already have
 

00:22:47.750 --> 00:22:50.560
wondering why a new API we already have
open SLES and Java and the reason is

00:22:50.560 --> 00:22:50.570
open SLES and Java and the reason is
 

00:22:50.570 --> 00:22:53.710
open SLES and Java and the reason is
that a audio is we think easier to use

00:22:53.710 --> 00:22:53.720
that a audio is we think easier to use
 

00:22:53.720 --> 00:22:55.990
that a audio is we think easier to use
and if you've done used opensl es and

00:22:55.990 --> 00:22:56.000
and if you've done used opensl es and
 

00:22:56.000 --> 00:22:57.490
and if you've done used opensl es and
compare them I think you'll see why

00:22:57.490 --> 00:22:57.500
compare them I think you'll see why
 

00:22:57.500 --> 00:23:00.160
compare them I think you'll see why
also the it's a platform where we can

00:23:00.160 --> 00:23:00.170
also the it's a platform where we can
 

00:23:00.170 --> 00:23:04.060
also the it's a platform where we can
make improvements and this will show you

00:23:04.060 --> 00:23:04.070
make improvements and this will show you
 

00:23:04.070 --> 00:23:08.830
make improvements and this will show you
how we do that the these three api's can

00:23:08.830 --> 00:23:08.840
how we do that the these three api's can
 

00:23:08.840 --> 00:23:10.570
how we do that the these three api's can
all go through the existing audio

00:23:10.570 --> 00:23:10.580
all go through the existing audio
 

00:23:10.580 --> 00:23:13.420
all go through the existing audio
flinger framework but if we make radical

00:23:13.420 --> 00:23:13.430
flinger framework but if we make radical
 

00:23:13.430 --> 00:23:15.070
flinger framework but if we make radical
changes in the audio flinger we

00:23:15.070 --> 00:23:15.080
changes in the audio flinger we
 

00:23:15.080 --> 00:23:16.690
changes in the audio flinger we
potentially could break thousands of

00:23:16.690 --> 00:23:16.700
potentially could break thousands of
 

00:23:16.700 --> 00:23:18.970
potentially could break thousands of
apps that are already existing so what

00:23:18.970 --> 00:23:18.980
apps that are already existing so what
 

00:23:18.980 --> 00:23:21.430
apps that are already existing so what
we do is we add a new audio service

00:23:21.430 --> 00:23:21.440
we do is we add a new audio service
 

00:23:21.440 --> 00:23:23.530
we do is we add a new audio service
where we can do some pretty radical

00:23:23.530 --> 00:23:23.540
where we can do some pretty radical
 

00:23:23.540 --> 00:23:25.420
where we can do some pretty radical
things and not have to worry about

00:23:25.420 --> 00:23:25.430
things and not have to worry about
 

00:23:25.430 --> 00:23:27.160
things and not have to worry about
breaking existing stuff so we can do

00:23:27.160 --> 00:23:27.170
breaking existing stuff so we can do
 

00:23:27.170 --> 00:23:29.920
breaking existing stuff so we can do
some big performance enhancements in the

00:23:29.920 --> 00:23:29.930
some big performance enhancements in the
 

00:23:29.930 --> 00:23:33.160
some big performance enhancements in the
a audio service so a audio use the

00:23:33.160 --> 00:23:33.170
a audio service so a audio use the
 

00:23:33.170 --> 00:23:35.530
a audio service so a audio use the
concept of streams audio flowing for the

00:23:35.530 --> 00:23:35.540
concept of streams audio flowing for the
 

00:23:35.540 --> 00:23:37.540
concept of streams audio flowing for the
mic to the app back down to the

00:23:37.540 --> 00:23:37.550
mic to the app back down to the
 

00:23:37.550 --> 00:23:40.780
mic to the app back down to the
headphones so how do you create a stream

00:23:40.780 --> 00:23:40.790
headphones so how do you create a stream
 

00:23:40.790 --> 00:23:44.980
headphones so how do you create a stream
using a audio we use a builder design

00:23:44.980 --> 00:23:44.990
using a audio we use a builder design
 

00:23:44.990 --> 00:23:47.680
using a audio we use a builder design
pattern so in the Builder you can set

00:23:47.680 --> 00:23:47.690
pattern so in the Builder you can set
 

00:23:47.690 --> 00:23:50.050
pattern so in the Builder you can set
your parameters that you want you could

00:23:50.050 --> 00:23:50.060
your parameters that you want you could
 

00:23:50.060 --> 00:23:52.000
your parameters that you want you could
leave everything just the default and

00:23:52.000 --> 00:23:52.010
leave everything just the default and
 

00:23:52.010 --> 00:23:53.530
leave everything just the default and
you'll probably get a stereo output

00:23:53.530 --> 00:23:53.540
you'll probably get a stereo output
 

00:23:53.540 --> 00:23:55.870
you'll probably get a stereo output
string but if you need a specific sample

00:23:55.870 --> 00:23:55.880
string but if you need a specific sample
 

00:23:55.880 --> 00:23:58.480
string but if you need a specific sample
rate or a specific format you can set

00:23:58.480 --> 00:23:58.490
rate or a specific format you can set
 

00:23:58.490 --> 00:24:00.880
rate or a specific format you can set
that once the Builder setup you can use

00:24:00.880 --> 00:24:00.890
that once the Builder setup you can use
 

00:24:00.890 --> 00:24:02.140
that once the Builder setup you can use
it like a rubber stamp to create

00:24:02.140 --> 00:24:02.150
it like a rubber stamp to create
 

00:24:02.150 --> 00:24:05.380
it like a rubber stamp to create
multiple streams so this is what it

00:24:05.380 --> 00:24:05.390
multiple streams so this is what it
 

00:24:05.390 --> 00:24:07.360
multiple streams so this is what it
looks like in the code so we have a

00:24:07.360 --> 00:24:07.370
looks like in the code so we have a
 

00:24:07.370 --> 00:24:09.760
looks like in the code so we have a
Audio create screen builder pretty

00:24:09.760 --> 00:24:09.770
Audio create screen builder pretty
 

00:24:09.770 --> 00:24:12.130
Audio create screen builder pretty
straightforward and if you want your

00:24:12.130 --> 00:24:12.140
straightforward and if you want your
 

00:24:12.140 --> 00:24:13.990
straightforward and if you want your
here's how you set different parameters

00:24:13.990 --> 00:24:14.000
here's how you set different parameters
 

00:24:14.000 --> 00:24:17.950
here's how you set different parameters
on the stream builder once you've set up

00:24:17.950 --> 00:24:17.960
on the stream builder once you've set up
 

00:24:17.960 --> 00:24:20.260
on the stream builder once you've set up
the stream you call audio screen builder

00:24:20.260 --> 00:24:20.270
the stream you call audio screen builder
 

00:24:20.270 --> 00:24:22.660
the stream you call audio screen builder
open stream again pretty straightforward

00:24:22.660 --> 00:24:22.670
open stream again pretty straightforward
 

00:24:22.670 --> 00:24:25.450
open stream again pretty straightforward
and then if you didn't specify things

00:24:25.450 --> 00:24:25.460
and then if you didn't specify things
 

00:24:25.460 --> 00:24:28.090
and then if you didn't specify things
like the sample rate or the format then

00:24:28.090 --> 00:24:28.100
like the sample rate or the format then
 

00:24:28.100 --> 00:24:29.620
like the sample rate or the format then
you'll need to query it to find out what

00:24:29.620 --> 00:24:29.630
you'll need to query it to find out what
 

00:24:29.630 --> 00:24:31.600
you'll need to query it to find out what
you got don't just assume that it's 48

00:24:31.600 --> 00:24:31.610
you got don't just assume that it's 48
 

00:24:31.610 --> 00:24:33.060
you got don't just assume that it's 48
thousand Hertz because some devices

00:24:33.060 --> 00:24:33.070
thousand Hertz because some devices
 

00:24:33.070 --> 00:24:35.410
thousand Hertz because some devices
particularly like USB devices it might

00:24:35.410 --> 00:24:35.420
particularly like USB devices it might
 

00:24:35.420 --> 00:24:37.870
particularly like USB devices it might
be at 96 thousand Hertz or something so

00:24:37.870 --> 00:24:37.880
be at 96 thousand Hertz or something so
 

00:24:37.880 --> 00:24:39.880
be at 96 thousand Hertz or something so
it's important to query to find out what

00:24:39.880 --> 00:24:39.890
it's important to query to find out what
 

00:24:39.890 --> 00:24:41.940
it's important to query to find out what
you really got have to open the stream

00:24:41.940 --> 00:24:41.950
you really got have to open the stream
 

00:24:41.950 --> 00:24:44.470
you really got have to open the stream
another important value is this frames

00:24:44.470 --> 00:24:44.480
another important value is this frames
 

00:24:44.480 --> 00:24:46.480
another important value is this frames
per burst and this correlates with the

00:24:46.480 --> 00:24:46.490
per burst and this correlates with the
 

00:24:46.490 --> 00:24:49.000
per burst and this correlates with the
chunk sizes that DAC man was consuming

00:24:49.000 --> 00:24:49.010
chunk sizes that DAC man was consuming
 

00:24:49.010 --> 00:24:52.300
chunk sizes that DAC man was consuming
IND on slides so what is a burst

00:24:52.300 --> 00:24:52.310
IND on slides so what is a burst
 

00:24:52.310 --> 00:24:54.610
IND on slides so what is a burst
whereas what is a buffer is this can be

00:24:54.610 --> 00:24:54.620
whereas what is a buffer is this can be
 

00:24:54.620 --> 00:24:58.570
whereas what is a buffer is this can be
very confusing so we say buffer na audio

00:24:58.570 --> 00:24:58.580
very confusing so we say buffer na audio
 

00:24:58.580 --> 00:25:00.190
very confusing so we say buffer na audio
we're talking about the whole array

00:25:00.190 --> 00:25:00.200
we're talking about the whole array
 

00:25:00.200 --> 00:25:02.530
we're talking about the whole array
where the audio data is stored for a

00:25:02.530 --> 00:25:02.540
where the audio data is stored for a
 

00:25:02.540 --> 00:25:04.600
where the audio data is stored for a
particular stream and in that buffer

00:25:04.600 --> 00:25:04.610
particular stream and in that buffer
 

00:25:04.610 --> 00:25:07.600
particular stream and in that buffer
there can be multiple bursts so this

00:25:07.600 --> 00:25:07.610
there can be multiple bursts so this
 

00:25:07.610 --> 00:25:10.630
there can be multiple bursts so this
case stack man has two bursts that it

00:25:10.630 --> 00:25:10.640
case stack man has two bursts that it
 

00:25:10.640 --> 00:25:13.630
case stack man has two bursts that it
can consume and we're writing in the the

00:25:13.630 --> 00:25:13.640
can consume and we're writing in the the
 

00:25:13.640 --> 00:25:18.250
can consume and we're writing in the the
size of a burst you have to start your

00:25:18.250 --> 00:25:18.260
size of a burst you have to start your
 

00:25:18.260 --> 00:25:20.680
size of a burst you have to start your
screen you can pause it you can flush

00:25:20.680 --> 00:25:20.690
screen you can pause it you can flush
 

00:25:20.690 --> 00:25:22.060
screen you can pause it you can flush
the stream stop it these are

00:25:22.060 --> 00:25:22.070
the stream stop it these are
 

00:25:22.070 --> 00:25:24.220
the stream stop it these are
asynchronous calls and normally you

00:25:24.220 --> 00:25:24.230
asynchronous calls and normally you
 

00:25:24.230 --> 00:25:25.360
asynchronous calls and normally you
don't have to worry about that but if

00:25:25.360 --> 00:25:25.370
don't have to worry about that but if
 

00:25:25.370 --> 00:25:27.010
don't have to worry about that but if
you have to synchronize we do have a

00:25:27.010 --> 00:25:27.020
you have to synchronize we do have a
 

00:25:27.020 --> 00:25:28.450
you have to synchronize we do have a
function that will allow you to

00:25:28.450 --> 00:25:28.460
function that will allow you to
 

00:25:28.460 --> 00:25:30.700
function that will allow you to
synchronize with a state machine inside

00:25:30.700 --> 00:25:30.710
synchronize with a state machine inside
 

00:25:30.710 --> 00:25:35.560
synchronize with a state machine inside
a audio the reading and writing so we

00:25:35.560 --> 00:25:35.570
a audio the reading and writing so we
 

00:25:35.570 --> 00:25:37.030
a audio the reading and writing so we
have to get data in and out of the

00:25:37.030 --> 00:25:37.040
have to get data in and out of the
 

00:25:37.040 --> 00:25:37.630
have to get data in and out of the
stream

00:25:37.630 --> 00:25:37.640
stream
 

00:25:37.640 --> 00:25:39.550
stream
so there's two ways if if your

00:25:39.550 --> 00:25:39.560
so there's two ways if if your
 

00:25:39.560 --> 00:25:42.100
so there's two ways if if your
application doesn't need super low

00:25:42.100 --> 00:25:42.110
application doesn't need super low
 

00:25:42.110 --> 00:25:44.410
application doesn't need super low
latency the easiest thing is just to

00:25:44.410 --> 00:25:44.420
latency the easiest thing is just to
 

00:25:44.420 --> 00:25:47.310
latency the easiest thing is just to
read or write using blocking writes and

00:25:47.310 --> 00:25:47.320
read or write using blocking writes and
 

00:25:47.320 --> 00:25:50.020
read or write using blocking writes and
so here we're in a loop and we're doing

00:25:50.020 --> 00:25:50.030
so here we're in a loop and we're doing
 

00:25:50.030 --> 00:25:51.640
so here we're in a loop and we're doing
a write and you notice we have a timeout

00:25:51.640 --> 00:25:51.650
a write and you notice we have a timeout
 

00:25:51.650 --> 00:25:52.169
a write and you notice we have a timeout
there

00:25:52.169 --> 00:25:52.179
there
 

00:25:52.179 --> 00:25:57.119
there
as a last parameter when we do a

00:25:57.119 --> 00:25:57.129
as a last parameter when we do a
 

00:25:57.129 --> 00:25:58.470
as a last parameter when we do a
blocking right we'll get back either

00:25:58.470 --> 00:25:58.480
blocking right we'll get back either
 

00:25:58.480 --> 00:26:00.330
blocking right we'll get back either
error code or the number of frames

00:26:00.330 --> 00:26:00.340
error code or the number of frames
 

00:26:00.340 --> 00:26:03.149
error code or the number of frames
written and if it times out or if we use

00:26:03.149 --> 00:26:03.159
written and if it times out or if we use
 

00:26:03.159 --> 00:26:05.580
written and if it times out or if we use
a timeout of zero and it may not be we

00:26:05.580 --> 00:26:05.590
a timeout of zero and it may not be we
 

00:26:05.590 --> 00:26:14.400
a timeout of zero and it may not be we
may get a partial transfer

00:26:14.400 --> 00:26:14.410
 

00:26:14.410 --> 00:26:16.230
okay the second technique is when you

00:26:16.230 --> 00:26:16.240
okay the second technique is when you
 

00:26:16.240 --> 00:26:18.900
okay the second technique is when you
need the lowest latency and to do that

00:26:18.900 --> 00:26:18.910
need the lowest latency and to do that
 

00:26:18.910 --> 00:26:21.300
need the lowest latency and to do that
you need a high priority thread that may

00:26:21.300 --> 00:26:21.310
you need a high priority thread that may
 

00:26:21.310 --> 00:26:23.400
you need a high priority thread that may
be running with a sched FIFO scheduler

00:26:23.400 --> 00:26:23.410
be running with a sched FIFO scheduler
 

00:26:23.410 --> 00:26:26.130
be running with a sched FIFO scheduler
and hopefully in a higher priority as

00:26:26.130 --> 00:26:26.140
and hopefully in a higher priority as
 

00:26:26.140 --> 00:26:30.150
and hopefully in a higher priority as
well so the way to do that is to write

00:26:30.150 --> 00:26:30.160
well so the way to do that is to write
 

00:26:30.160 --> 00:26:32.570
well so the way to do that is to write
your own callback function so this is a

00:26:32.570 --> 00:26:32.580
your own callback function so this is a
 

00:26:32.580 --> 00:26:36.690
your own callback function so this is a
function that you would write and we a I

00:26:36.690 --> 00:26:36.700
function that you would write and we a I
 

00:26:36.700 --> 00:26:39.780
function that you would write and we a I
do will pass to you a stream parameter a

00:26:39.780 --> 00:26:39.790
do will pass to you a stream parameter a
 

00:26:39.790 --> 00:26:42.150
do will pass to you a stream parameter a
user data which could be an object or a

00:26:42.150 --> 00:26:42.160
user data which could be an object or a
 

00:26:42.160 --> 00:26:45.420
user data which could be an object or a
structure pointer and then audio data

00:26:45.420 --> 00:26:45.430
structure pointer and then audio data
 

00:26:45.430 --> 00:26:47.220
structure pointer and then audio data
pointer which is a pointer to your array

00:26:47.220 --> 00:26:47.230
pointer which is a pointer to your array
 

00:26:47.230 --> 00:26:49.080
pointer which is a pointer to your array
and the number of frames and then you

00:26:49.080 --> 00:26:49.090
and the number of frames and then you
 

00:26:49.090 --> 00:26:51.060
and the number of frames and then you
can render directly into that audio

00:26:51.060 --> 00:26:51.070
can render directly into that audio
 

00:26:51.070 --> 00:26:56.730
can render directly into that audio
buffer and then return once you have a

00:26:56.730 --> 00:26:56.740
buffer and then return once you have a
 

00:26:56.740 --> 00:26:59.010
buffer and then return once you have a
defined that your callback function and

00:26:59.010 --> 00:26:59.020
defined that your callback function and
 

00:26:59.020 --> 00:27:00.720
defined that your callback function and
you know what data you want to pass you

00:27:00.720 --> 00:27:00.730
you know what data you want to pass you
 

00:27:00.730 --> 00:27:02.820
you know what data you want to pass you
give it to the Builder you set the data

00:27:02.820 --> 00:27:02.830
give it to the Builder you set the data
 

00:27:02.830 --> 00:27:05.430
give it to the Builder you set the data
callback on the Builder and then when

00:27:05.430 --> 00:27:05.440
callback on the Builder and then when
 

00:27:05.440 --> 00:27:07.530
callback on the Builder and then when
you later create a stream it will use

00:27:07.530 --> 00:27:07.540
you later create a stream it will use
 

00:27:07.540 --> 00:27:11.940
you later create a stream it will use
those values sometimes people need to

00:27:11.940 --> 00:27:11.950
those values sometimes people need to
 

00:27:11.950 --> 00:27:13.710
those values sometimes people need to
combine multiple inputs maybe you're

00:27:13.710 --> 00:27:13.720
combine multiple inputs maybe you're
 

00:27:13.720 --> 00:27:15.810
combine multiple inputs maybe you're
taking two input sources and mixing them

00:27:15.810 --> 00:27:15.820
taking two input sources and mixing them
 

00:27:15.820 --> 00:27:19.530
taking two input sources and mixing them
and sending them to an output so how

00:27:19.530 --> 00:27:19.540
and sending them to an output so how
 

00:27:19.540 --> 00:27:21.690
and sending them to an output so how
best way to do that with a audio we

00:27:21.690 --> 00:27:21.700
best way to do that with a audio we
 

00:27:21.700 --> 00:27:24.360
best way to do that with a audio we
recommend using one stream as a master

00:27:24.360 --> 00:27:24.370
recommend using one stream as a master
 

00:27:24.370 --> 00:27:26.730
recommend using one stream as a master
and doing your callback from that master

00:27:26.730 --> 00:27:26.740
and doing your callback from that master
 

00:27:26.740 --> 00:27:29.130
and doing your callback from that master
stream which ideally should be an output

00:27:29.130 --> 00:27:29.140
stream which ideally should be an output
 

00:27:29.140 --> 00:27:31.830
stream which ideally should be an output
string and then what you do in the

00:27:31.830 --> 00:27:31.840
string and then what you do in the
 

00:27:31.840 --> 00:27:34.740
string and then what you do in the
callback see here we're being passed the

00:27:34.740 --> 00:27:34.750
callback see here we're being passed the
 

00:27:34.750 --> 00:27:36.960
callback see here we're being passed the
output stream corner so what we do in a

00:27:36.960 --> 00:27:36.970
output stream corner so what we do in a
 

00:27:36.970 --> 00:27:40.140
output stream corner so what we do in a
callback is we do a read from the input

00:27:40.140 --> 00:27:40.150
callback is we do a read from the input
 

00:27:40.150 --> 00:27:40.650
callback is we do a read from the input
stream

00:27:40.650 --> 00:27:40.660
stream
 

00:27:40.660 --> 00:27:42.570
stream
and we set the timeout to zero so this

00:27:42.570 --> 00:27:42.580
and we set the timeout to zero so this
 

00:27:42.580 --> 00:27:44.760
and we set the timeout to zero so this
is a non-blocking call as Don mentioned

00:27:44.760 --> 00:27:44.770
is a non-blocking call as Don mentioned
 

00:27:44.770 --> 00:27:46.770
is a non-blocking call as Don mentioned
you don't want to block inside the

00:27:46.770 --> 00:27:46.780
you don't want to block inside the
 

00:27:46.780 --> 00:27:49.470
you don't want to block inside the
callback now initially you may not get

00:27:49.470 --> 00:27:49.480
callback now initially you may not get
 

00:27:49.480 --> 00:27:51.330
callback now initially you may not get
all the data that you're expecting but

00:27:51.330 --> 00:27:51.340
all the data that you're expecting but
 

00:27:51.340 --> 00:27:52.920
all the data that you're expecting but
pretty soon these two streams will

00:27:52.920 --> 00:27:52.930
pretty soon these two streams will
 

00:27:52.930 --> 00:27:54.690
pretty soon these two streams will
synchronize like very quickly within a

00:27:54.690 --> 00:27:54.700
synchronize like very quickly within a
 

00:27:54.700 --> 00:27:56.700
synchronize like very quickly within a
couple buffer calls and then you'll have

00:27:56.700 --> 00:27:56.710
couple buffer calls and then you'll have
 

00:27:56.710 --> 00:27:58.320
couple buffer calls and then you'll have
nice back and forth between these two

00:27:58.320 --> 00:27:58.330
nice back and forth between these two
 

00:27:58.330 --> 00:28:02.760
nice back and forth between these two
streams and you can um do echo or guitar

00:28:02.760 --> 00:28:02.770
streams and you can um do echo or guitar
 

00:28:02.770 --> 00:28:07.299
streams and you can um do echo or guitar
effects things like that

00:28:07.299 --> 00:28:07.309
 

00:28:07.309 --> 00:28:09.190
the other topic I want to discuss is a

00:28:09.190 --> 00:28:09.200
the other topic I want to discuss is a
 

00:28:09.200 --> 00:28:14.049
the other topic I want to discuss is a
dynamic latency tuning so if you it's

00:28:14.049 --> 00:28:14.059
dynamic latency tuning so if you it's
 

00:28:14.059 --> 00:28:15.820
dynamic latency tuning so if you it's
very difficult to predict ahead of time

00:28:15.820 --> 00:28:15.830
very difficult to predict ahead of time
 

00:28:15.830 --> 00:28:18.009
very difficult to predict ahead of time
what the exact number of buffers that

00:28:18.009 --> 00:28:18.019
what the exact number of buffers that
 

00:28:18.019 --> 00:28:19.480
what the exact number of buffers that
you need and the number of buffers

00:28:19.480 --> 00:28:19.490
you need and the number of buffers
 

00:28:19.490 --> 00:28:21.940
you need and the number of buffers
determines your latency if you have too

00:28:21.940 --> 00:28:21.950
determines your latency if you have too
 

00:28:21.950 --> 00:28:25.149
determines your latency if you have too
few buffers the too few bursts I guess

00:28:25.149 --> 00:28:25.159
few buffers the too few bursts I guess
 

00:28:25.159 --> 00:28:29.080
few buffers the too few bursts I guess
in your buffer then if you if your

00:28:29.080 --> 00:28:29.090
in your buffer then if you if your
 

00:28:29.090 --> 00:28:31.659
in your buffer then if you if your
thread is preempted you may glitch so

00:28:31.659 --> 00:28:31.669
thread is preempted you may glitch so
 

00:28:31.669 --> 00:28:34.539
thread is preempted you may glitch so
what you want to do if you look at this

00:28:34.539 --> 00:28:34.549
what you want to do if you look at this
 

00:28:34.549 --> 00:28:36.940
what you want to do if you look at this
diagram from before right now we only

00:28:36.940 --> 00:28:36.950
diagram from before right now we only
 

00:28:36.950 --> 00:28:39.639
diagram from before right now we only
have two bursts that are valid in this

00:28:39.639 --> 00:28:39.649
have two bursts that are valid in this
 

00:28:39.649 --> 00:28:41.769
have two bursts that are valid in this
very large buffer so that's our latency

00:28:41.769 --> 00:28:41.779
very large buffer so that's our latency
 

00:28:41.779 --> 00:28:44.740
very large buffer so that's our latency
is two times this burst for this buffer

00:28:44.740 --> 00:28:44.750
is two times this burst for this buffer
 

00:28:44.750 --> 00:28:47.980
is two times this burst for this buffer
so if the if we are unable to write to

00:28:47.980 --> 00:28:47.990
so if the if we are unable to write to
 

00:28:47.990 --> 00:28:50.889
so if the if we are unable to write to
the buffer DAC Matt will run out of data

00:28:50.889 --> 00:28:50.899
the buffer DAC Matt will run out of data
 

00:28:50.899 --> 00:28:53.169
the buffer DAC Matt will run out of data
after two bursts so if we have a glitch

00:28:53.169 --> 00:28:53.179
after two bursts so if we have a glitch
 

00:28:53.179 --> 00:28:56.889
after two bursts so if we have a glitch
we may wish that we have three bursts in

00:28:56.889 --> 00:28:56.899
we may wish that we have three bursts in
 

00:28:56.899 --> 00:28:58.360
we may wish that we have three bursts in
the buffer so we have a little bit more

00:28:58.360 --> 00:28:58.370
the buffer so we have a little bit more
 

00:28:58.370 --> 00:29:00.340
the buffer so we have a little bit more
cushion if we get preempted of our

00:29:00.340 --> 00:29:00.350
cushion if we get preempted of our
 

00:29:00.350 --> 00:29:02.379
cushion if we get preempted of our
thread gets preempted so we can adjust

00:29:02.379 --> 00:29:02.389
thread gets preempted so we can adjust
 

00:29:02.389 --> 00:29:05.320
thread gets preempted so we can adjust
this value the way you do that in code

00:29:05.320 --> 00:29:05.330
this value the way you do that in code
 

00:29:05.330 --> 00:29:08.529
this value the way you do that in code
is that you can query to find out how

00:29:08.529 --> 00:29:08.539
is that you can query to find out how
 

00:29:08.539 --> 00:29:10.690
is that you can query to find out how
many overruns are under runs you've had

00:29:10.690 --> 00:29:10.700
many overruns are under runs you've had
 

00:29:10.700 --> 00:29:14.529
many overruns are under runs you've had
on that output string and if it's

00:29:14.529 --> 00:29:14.539
on that output string and if it's
 

00:29:14.539 --> 00:29:16.180
on that output string and if it's
changed since the last time you check

00:29:16.180 --> 00:29:16.190
changed since the last time you check
 

00:29:16.190 --> 00:29:18.610
changed since the last time you check
that means that you just had a glitch so

00:29:18.610 --> 00:29:18.620
that means that you just had a glitch so
 

00:29:18.620 --> 00:29:20.799
that means that you just had a glitch so
what you can then do is you can query to

00:29:20.799 --> 00:29:20.809
what you can then do is you can query to
 

00:29:20.809 --> 00:29:25.750
what you can then do is you can query to
see what the size is of the buffer how

00:29:25.750 --> 00:29:25.760
see what the size is of the buffer how
 

00:29:25.760 --> 00:29:27.159
see what the size is of the buffer how
much basically how much of the buffer is

00:29:27.159 --> 00:29:27.169
much basically how much of the buffer is
 

00:29:27.169 --> 00:29:29.409
much basically how much of the buffer is
being used which determines your legacy

00:29:29.409 --> 00:29:29.419
being used which determines your legacy
 

00:29:29.419 --> 00:29:31.480
being used which determines your legacy
and then bump it up and say well let's

00:29:31.480 --> 00:29:31.490
and then bump it up and say well let's
 

00:29:31.490 --> 00:29:34.060
and then bump it up and say well let's
just add one more burst in here so

00:29:34.060 --> 00:29:34.070
just add one more burst in here so
 

00:29:34.070 --> 00:29:35.379
just add one more burst in here so
instead of being double buffered I'll be

00:29:35.379 --> 00:29:35.389
instead of being double buffered I'll be
 

00:29:35.389 --> 00:29:37.480
instead of being double buffered I'll be
triple buffered and then you set that

00:29:37.480 --> 00:29:37.490
triple buffered and then you set that
 

00:29:37.490 --> 00:29:40.720
triple buffered and then you set that
back in reset your size so this is a

00:29:40.720 --> 00:29:40.730
back in reset your size so this is a
 

00:29:40.730 --> 00:29:43.870
back in reset your size so this is a
sort of a simplification you may find

00:29:43.870 --> 00:29:43.880
sort of a simplification you may find
 

00:29:43.880 --> 00:29:46.269
sort of a simplification you may find
that you want to you know if you could

00:29:46.269 --> 00:29:46.279
that you want to you know if you could
 

00:29:46.279 --> 00:29:48.039
that you want to you know if you could
do timing analysis and maybe lower the

00:29:48.039 --> 00:29:48.049
do timing analysis and maybe lower the
 

00:29:48.049 --> 00:29:49.509
do timing analysis and maybe lower the
latency again later if you haven't

00:29:49.509 --> 00:29:49.519
latency again later if you haven't
 

00:29:49.519 --> 00:29:51.129
latency again later if you haven't
glitched for a long time but that's up

00:29:51.129 --> 00:29:51.139
glitched for a long time but that's up
 

00:29:51.139 --> 00:29:52.750
glitched for a long time but that's up
to the application to do those those

00:29:52.750 --> 00:29:52.760
to the application to do those those
 

00:29:52.760 --> 00:29:55.990
to the application to do those those
kind of smart smart analysis but this is

00:29:55.990 --> 00:29:56.000
kind of smart smart analysis but this is
 

00:29:56.000 --> 00:30:00.310
kind of smart smart analysis but this is
the basic technique so in summary to a

00:30:00.310 --> 00:30:00.320
the basic technique so in summary to a
 

00:30:00.320 --> 00:30:02.740
the basic technique so in summary to a
minimal a audio program you create a

00:30:02.740 --> 00:30:02.750
minimal a audio program you create a
 

00:30:02.750 --> 00:30:06.460
minimal a audio program you create a
builder you open a stream you start the

00:30:06.460 --> 00:30:06.470
builder you open a stream you start the
 

00:30:06.470 --> 00:30:09.519
builder you open a stream you start the
stream and then in a loop this case

00:30:09.519 --> 00:30:09.529
stream and then in a loop this case
 

00:30:09.529 --> 00:30:11.460
stream and then in a loop this case
we're doing the blocking writes

00:30:11.460 --> 00:30:11.470
we're doing the blocking writes
 

00:30:11.470 --> 00:30:13.629
we're doing the blocking writes
synthesizing audio and writing it to the

00:30:13.629 --> 00:30:13.639
synthesizing audio and writing it to the
 

00:30:13.639 --> 00:30:15.940
synthesizing audio and writing it to the
stream and then we close it when we're

00:30:15.940 --> 00:30:15.950
stream and then we close it when we're
 

00:30:15.950 --> 00:30:18.850
stream and then we close it when we're
done so pretty simple just for

00:30:18.850 --> 00:30:18.860
done so pretty simple just for
 

00:30:18.860 --> 00:30:19.680
done so pretty simple just for
comparison

00:30:19.680 --> 00:30:19.690
comparison
 

00:30:19.690 --> 00:30:22.139
comparison
this is sort of an equivalent opensl es

00:30:22.139 --> 00:30:22.149
this is sort of an equivalent opensl es
 

00:30:22.149 --> 00:30:24.869
this is sort of an equivalent opensl es
program I probably little hard to read

00:30:24.869 --> 00:30:24.879
program I probably little hard to read
 

00:30:24.879 --> 00:30:27.629
program I probably little hard to read
but as you can see the a audio is a

00:30:27.629 --> 00:30:27.639
but as you can see the a audio is a
 

00:30:27.639 --> 00:30:29.100
but as you can see the a audio is a
fewer lines of codes will more

00:30:29.100 --> 00:30:29.110
fewer lines of codes will more
 

00:30:29.110 --> 00:30:33.049
fewer lines of codes will more
straightforward if you want to use audio

00:30:33.049 --> 00:30:33.059
straightforward if you want to use audio
 

00:30:33.059 --> 00:30:36.360
straightforward if you want to use audio
so now a audio you're probably thinking

00:30:36.360 --> 00:30:36.370
so now a audio you're probably thinking
 

00:30:36.370 --> 00:30:38.159
so now a audio you're probably thinking
that sounds great but it's only in the

00:30:38.159 --> 00:30:38.169
that sounds great but it's only in the
 

00:30:38.169 --> 00:30:40.049
that sounds great but it's only in the
OH release so how does that help me if

00:30:40.049 --> 00:30:40.059
OH release so how does that help me if
 

00:30:40.059 --> 00:30:42.149
OH release so how does that help me if
I'm writing for marshmallow or new god

00:30:42.149 --> 00:30:42.159
I'm writing for marshmallow or new god
 

00:30:42.159 --> 00:30:44.369
I'm writing for marshmallow or new god
or lollipop so what we're doing is we're

00:30:44.369 --> 00:30:44.379
or lollipop so what we're doing is we're
 

00:30:44.379 --> 00:30:47.759
or lollipop so what we're doing is we're
developing a wrapper which has is

00:30:47.759 --> 00:30:47.769
developing a wrapper which has is
 

00:30:47.769 --> 00:30:50.279
developing a wrapper which has is
basically like the a Audio API and a

00:30:50.279 --> 00:30:50.289
basically like the a Audio API and a
 

00:30:50.289 --> 00:30:55.139
basically like the a Audio API and a
audio features but it's in C++ so it

00:30:55.139 --> 00:30:55.149
audio features but it's in C++ so it
 

00:30:55.149 --> 00:30:57.180
audio features but it's in C++ so it
just looks slightly different and what

00:30:57.180 --> 00:30:57.190
just looks slightly different and what
 

00:30:57.190 --> 00:31:00.119
just looks slightly different and what
we do is we dynamically linked to the a

00:31:00.119 --> 00:31:00.129
we do is we dynamically linked to the a
 

00:31:00.129 --> 00:31:03.269
we do is we dynamically linked to the a
audio library using runtime linking so

00:31:03.269 --> 00:31:03.279
audio library using runtime linking so
 

00:31:03.279 --> 00:31:04.830
audio library using runtime linking so
your program can run and link on

00:31:04.830 --> 00:31:04.840
your program can run and link on
 

00:31:04.840 --> 00:31:08.549
your program can run and link on
previous versions of Android but the

00:31:08.549 --> 00:31:08.559
previous versions of Android but the
 

00:31:08.559 --> 00:31:10.289
previous versions of Android but the
audio won't be there and so then what we

00:31:10.289 --> 00:31:10.299
audio won't be there and so then what we
 

00:31:10.299 --> 00:31:12.629
audio won't be there and so then what we
do is we just dynamically switch over to

00:31:12.629 --> 00:31:12.639
do is we just dynamically switch over to
 

00:31:12.639 --> 00:31:15.330
do is we just dynamically switch over to
using opensl es so if you write your

00:31:15.330 --> 00:31:15.340
using opensl es so if you write your
 

00:31:15.340 --> 00:31:18.629
using opensl es so if you write your
program to this new API which will be

00:31:18.629 --> 00:31:18.639
program to this new API which will be
 

00:31:18.639 --> 00:31:21.570
program to this new API which will be
like an open source thing or it's not

00:31:21.570 --> 00:31:21.580
like an open source thing or it's not
 

00:31:21.580 --> 00:31:24.600
like an open source thing or it's not
quite out yet but we'll be out soon then

00:31:24.600 --> 00:31:24.610
quite out yet but we'll be out soon then
 

00:31:24.610 --> 00:31:27.539
quite out yet but we'll be out soon then
if you write your program to this C C++

00:31:27.539 --> 00:31:27.549
if you write your program to this C C++
 

00:31:27.549 --> 00:31:30.090
if you write your program to this C C++
wrapper then you'll be able to use a

00:31:30.090 --> 00:31:30.100
wrapper then you'll be able to use a
 

00:31:30.100 --> 00:31:33.240
wrapper then you'll be able to use a
audio or opensl es transparently and run

00:31:33.240 --> 00:31:33.250
audio or opensl es transparently and run
 

00:31:33.250 --> 00:31:39.180
audio or opensl es transparently and run
on old or new platforms okay I'm excited

00:31:39.180 --> 00:31:39.190
on old or new platforms okay I'm excited
 

00:31:39.190 --> 00:31:41.669
on old or new platforms okay I'm excited
about what's coming up next this is a

00:31:41.669 --> 00:31:41.679
about what's coming up next this is a
 

00:31:41.679 --> 00:31:43.740
about what's coming up next this is a
roll he's going to give us a demo and

00:31:43.740 --> 00:31:43.750
roll he's going to give us a demo and
 

00:31:43.750 --> 00:31:46.320
roll he's going to give us a demo and
Roley the company has been taking

00:31:46.320 --> 00:31:46.330
Roley the company has been taking
 

00:31:46.330 --> 00:31:47.669
Roley the company has been taking
advantage of a lot of these tricks

00:31:47.669 --> 00:31:47.679
advantage of a lot of these tricks
 

00:31:47.679 --> 00:31:50.159
advantage of a lot of these tricks
they've figured out a lot of stuff and

00:31:50.159 --> 00:31:50.169
they've figured out a lot of stuff and
 

00:31:50.169 --> 00:31:51.810
they've figured out a lot of stuff and
I've been a great partner for us so I'd

00:31:51.810 --> 00:31:51.820
I've been a great partner for us so I'd
 

00:31:51.820 --> 00:31:54.840
I've been a great partner for us so I'd
like the other CEO of rolling roll Alam

00:31:54.840 --> 00:31:54.850
like the other CEO of rolling roll Alam
 

00:31:54.850 --> 00:31:57.779
like the other CEO of rolling roll Alam
to come up and give us a talk about some

00:31:57.779 --> 00:31:57.789
to come up and give us a talk about some
 

00:31:57.789 --> 00:31:59.100
to come up and give us a talk about some
of the programs they've been developing

00:31:59.100 --> 00:31:59.110
of the programs they've been developing
 

00:31:59.110 --> 00:32:06.210
of the programs they've been developing
on Android thank you

00:32:06.210 --> 00:32:06.220
 

00:32:06.220 --> 00:32:07.960
good morning everybody

00:32:07.960 --> 00:32:07.970
good morning everybody
 

00:32:07.970 --> 00:32:10.780
good morning everybody
it's such a pleasure to be here as Phil

00:32:10.780 --> 00:32:10.790
it's such a pleasure to be here as Phil
 

00:32:10.790 --> 00:32:12.760
it's such a pleasure to be here as Phil
was saying I'm Roland Lam I'm the

00:32:12.760 --> 00:32:12.770
was saying I'm Roland Lam I'm the
 

00:32:12.770 --> 00:32:15.880
was saying I'm Roland Lam I'm the
founder and CEO of Rollie a company that

00:32:15.880 --> 00:32:15.890
founder and CEO of Rollie a company that
 

00:32:15.890 --> 00:32:18.130
founder and CEO of Rollie a company that
is developing new musical hardware and

00:32:18.130 --> 00:32:18.140
is developing new musical hardware and
 

00:32:18.140 --> 00:32:20.490
is developing new musical hardware and
software and I'm very pleased to have

00:32:20.490 --> 00:32:20.500
software and I'm very pleased to have
 

00:32:20.500 --> 00:32:23.790
software and I'm very pleased to have
Marko and Jack Parisi with me who are

00:32:23.790 --> 00:32:23.800
Marko and Jack Parisi with me who are
 

00:32:23.800 --> 00:32:26.350
Marko and Jack Parisi with me who are
virtuoso musicians who are kind of on

00:32:26.350 --> 00:32:26.360
virtuoso musicians who are kind of on
 

00:32:26.360 --> 00:32:29.080
virtuoso musicians who are kind of on
this cutting edge of new hardware new

00:32:29.080 --> 00:32:29.090
this cutting edge of new hardware new
 

00:32:29.090 --> 00:32:32.080
this cutting edge of new hardware new
software and expression so just to give

00:32:32.080 --> 00:32:32.090
software and expression so just to give
 

00:32:32.090 --> 00:32:34.960
software and expression so just to give
a little bit of background you know

00:32:34.960 --> 00:32:34.970
a little bit of background you know
 

00:32:34.970 --> 00:32:37.419
a little bit of background you know
starting out I felt really passionate

00:32:37.419 --> 00:32:37.429
starting out I felt really passionate
 

00:32:37.429 --> 00:32:40.390
starting out I felt really passionate
about creativity and about you know the

00:32:40.390 --> 00:32:40.400
about creativity and about you know the
 

00:32:40.400 --> 00:32:43.120
about creativity and about you know the
joy that comes from creation and in

00:32:43.120 --> 00:32:43.130
joy that comes from creation and in
 

00:32:43.130 --> 00:32:45.130
joy that comes from creation and in
particular we thought we want to empower

00:32:45.130 --> 00:32:45.140
particular we thought we want to empower
 

00:32:45.140 --> 00:32:47.320
particular we thought we want to empower
everyone to be creators but particularly

00:32:47.320 --> 00:32:47.330
everyone to be creators but particularly
 

00:32:47.330 --> 00:32:50.320
everyone to be creators but particularly
in music and the reason for music being

00:32:50.320 --> 00:32:50.330
in music and the reason for music being
 

00:32:50.330 --> 00:32:52.510
in music and the reason for music being
kind of the center point for us

00:32:52.510 --> 00:32:52.520
kind of the center point for us
 

00:32:52.520 --> 00:32:54.610
kind of the center point for us
is it there's this huge opportunity for

00:32:54.610 --> 00:32:54.620
is it there's this huge opportunity for
 

00:32:54.620 --> 00:32:57.610
is it there's this huge opportunity for
expression that is untapped and the way

00:32:57.610 --> 00:32:57.620
expression that is untapped and the way
 

00:32:57.620 --> 00:32:59.530
expression that is untapped and the way
we think about that is that musical

00:32:59.530 --> 00:32:59.540
we think about that is that musical
 

00:32:59.540 --> 00:33:01.660
we think about that is that musical
instruments are tremendously expressive

00:33:01.660 --> 00:33:01.670
instruments are tremendously expressive
 

00:33:01.670 --> 00:33:03.430
instruments are tremendously expressive
but they're still quite difficult to

00:33:03.430 --> 00:33:03.440
but they're still quite difficult to
 

00:33:03.440 --> 00:33:05.799
but they're still quite difficult to
learn and on the other side

00:33:05.799 --> 00:33:05.809
learn and on the other side
 

00:33:05.809 --> 00:33:08.440
learn and on the other side
electronic music has such versatility

00:33:08.440 --> 00:33:08.450
electronic music has such versatility
 

00:33:08.450 --> 00:33:10.870
electronic music has such versatility
associated with it but then it's

00:33:10.870 --> 00:33:10.880
associated with it but then it's
 

00:33:10.880 --> 00:33:12.940
associated with it but then it's
relatively technical still and

00:33:12.940 --> 00:33:12.950
relatively technical still and
 

00:33:12.950 --> 00:33:14.590
relatively technical still and
complicated to set up your own home

00:33:14.590 --> 00:33:14.600
complicated to set up your own home
 

00:33:14.600 --> 00:33:17.020
complicated to set up your own home
studio so we thought what if we could

00:33:17.020 --> 00:33:17.030
studio so we thought what if we could
 

00:33:17.030 --> 00:33:19.090
studio so we thought what if we could
create instruments that were deeply

00:33:19.090 --> 00:33:19.100
create instruments that were deeply
 

00:33:19.100 --> 00:33:21.940
create instruments that were deeply
expressive but also easy to learn had

00:33:21.940 --> 00:33:21.950
expressive but also easy to learn had
 

00:33:21.950 --> 00:33:25.030
expressive but also easy to learn had
the versatility of electronic music but

00:33:25.030 --> 00:33:25.040
the versatility of electronic music but
 

00:33:25.040 --> 00:33:26.500
the versatility of electronic music but
then didn't have all of the extra

00:33:26.500 --> 00:33:26.510
then didn't have all of the extra
 

00:33:26.510 --> 00:33:28.540
then didn't have all of the extra
technical setup but to solve that

00:33:28.540 --> 00:33:28.550
technical setup but to solve that
 

00:33:28.550 --> 00:33:30.310
technical setup but to solve that
problem we thought first of all we need

00:33:30.310 --> 00:33:30.320
problem we thought first of all we need
 

00:33:30.320 --> 00:33:33.430
problem we thought first of all we need
these high resolution control devices

00:33:33.430 --> 00:33:33.440
these high resolution control devices
 

00:33:33.440 --> 00:33:36.130
these high resolution control devices
for digital so you know we couldn't if

00:33:36.130 --> 00:33:36.140
for digital so you know we couldn't if
 

00:33:36.140 --> 00:33:37.570
for digital so you know we couldn't if
you just have like simple

00:33:37.570 --> 00:33:37.580
you just have like simple
 

00:33:37.580 --> 00:33:39.310
you just have like simple
one-dimensional electronic controllers

00:33:39.310 --> 00:33:39.320
one-dimensional electronic controllers
 

00:33:39.320 --> 00:33:41.500
one-dimensional electronic controllers
you can't get to that depth of

00:33:41.500 --> 00:33:41.510
you can't get to that depth of
 

00:33:41.510 --> 00:33:43.090
you can't get to that depth of
expression that you have with all of the

00:33:43.090 --> 00:33:43.100
expression that you have with all of the
 

00:33:43.100 --> 00:33:44.860
expression that you have with all of the
physical gestures you can create with

00:33:44.860 --> 00:33:44.870
physical gestures you can create with
 

00:33:44.870 --> 00:33:48.250
physical gestures you can create with
acoustic instruments so I invented this

00:33:48.250 --> 00:33:48.260
acoustic instruments so I invented this
 

00:33:48.260 --> 00:33:49.930
acoustic instruments so I invented this
instrument called the sea board and the

00:33:49.930 --> 00:33:49.940
instrument called the sea board and the
 

00:33:49.940 --> 00:33:51.850
instrument called the sea board and the
sea board is an evolution of the piano

00:33:51.850 --> 00:33:51.860
sea board is an evolution of the piano
 

00:33:51.860 --> 00:33:54.010
sea board is an evolution of the piano
keyboard you can play it just the way

00:33:54.010 --> 00:33:54.020
keyboard you can play it just the way
 

00:33:54.020 --> 00:33:55.960
keyboard you can play it just the way
that you play a piano but then you can

00:33:55.960 --> 00:33:55.970
that you play a piano but then you can
 

00:33:55.970 --> 00:33:58.180
that you play a piano but then you can
modulate all of the sounds in real time

00:33:58.180 --> 00:33:58.190
modulate all of the sounds in real time
 

00:33:58.190 --> 00:34:00.549
modulate all of the sounds in real time
using very intuitive gestures so as

00:34:00.549 --> 00:34:00.559
using very intuitive gestures so as
 

00:34:00.559 --> 00:34:03.280
using very intuitive gestures so as
marco will show you could you could play

00:34:03.280 --> 00:34:03.290
marco will show you could you could play
 

00:34:03.290 --> 00:34:04.600
marco will show you could you could play
the sea board first of all just like the

00:34:04.600 --> 00:34:04.610
the sea board first of all just like the
 

00:34:04.610 --> 00:34:08.750
the sea board first of all just like the
piano

00:34:08.750 --> 00:34:08.760
 

00:34:08.760 --> 00:34:11.720
I think maybe if the guys can bring up

00:34:11.720 --> 00:34:11.730
I think maybe if the guys can bring up
 

00:34:11.730 --> 00:34:13.849
I think maybe if the guys can bring up
the audio sounds like maybe they just

00:34:13.849 --> 00:34:13.859
the audio sounds like maybe they just
 

00:34:13.859 --> 00:34:18.649
the audio sounds like maybe they just
did Marco so I were running the Seaboard

00:34:18.649 --> 00:34:18.659
did Marco so I were running the Seaboard
 

00:34:18.659 --> 00:34:22.050
did Marco so I were running the Seaboard
now on pixel take

00:34:22.050 --> 00:34:22.060
now on pixel take
 

00:34:22.060 --> 00:34:26.639
now on pixel take
[Music]

00:34:26.639 --> 00:34:26.649
 

00:34:26.649 --> 00:34:28.930
kind of like electronic piano patches

00:34:28.930 --> 00:34:28.940
kind of like electronic piano patches
 

00:34:28.940 --> 00:34:30.609
kind of like electronic piano patches
just playing like piano but if he wants

00:34:30.609 --> 00:34:30.619
just playing like piano but if he wants
 

00:34:30.619 --> 00:34:31.990
just playing like piano but if he wants
to he could play it for example like a

00:34:31.990 --> 00:34:32.000
to he could play it for example like a
 

00:34:32.000 --> 00:34:34.659
to he could play it for example like a
guitar and he would just you know be

00:34:34.659 --> 00:34:34.669
guitar and he would just you know be
 

00:34:34.669 --> 00:34:37.240
guitar and he would just you know be
able to bend these soft silicon keys

00:34:37.240 --> 00:34:37.250
able to bend these soft silicon keys
 

00:34:37.250 --> 00:34:39.379
able to bend these soft silicon keys
left to right as you'll see

00:34:39.379 --> 00:34:39.389
left to right as you'll see
 

00:34:39.389 --> 00:34:48.430
left to right as you'll see
[Music]

00:34:48.430 --> 00:34:48.440
 

00:34:48.440 --> 00:34:50.930
so those kinds of ends that unit usually

00:34:50.930 --> 00:34:50.940
so those kinds of ends that unit usually
 

00:34:50.940 --> 00:34:53.120
so those kinds of ends that unit usually
would associate with another kind of

00:34:53.120 --> 00:34:53.130
would associate with another kind of
 

00:34:53.130 --> 00:34:54.500
would associate with another kind of
acoustic instrument you can create in

00:34:54.500 --> 00:34:54.510
acoustic instrument you can create in
 

00:34:54.510 --> 00:34:56.900
acoustic instrument you can create in
this context and there's many many sonic

00:34:56.900 --> 00:34:56.910
this context and there's many many sonic
 

00:34:56.910 --> 00:34:59.360
this context and there's many many sonic
possibilities with something like the C

00:34:59.360 --> 00:34:59.370
possibilities with something like the C
 

00:34:59.370 --> 00:35:01.310
possibilities with something like the C
board so we thought wow this is awesome

00:35:01.310 --> 00:35:01.320
board so we thought wow this is awesome
 

00:35:01.320 --> 00:35:04.070
board so we thought wow this is awesome
we have this new physical technology but

00:35:04.070 --> 00:35:04.080
we have this new physical technology but
 

00:35:04.080 --> 00:35:05.660
we have this new physical technology but
we want to make it as accessible as

00:35:05.660 --> 00:35:05.670
we want to make it as accessible as
 

00:35:05.670 --> 00:35:07.640
we want to make it as accessible as
possible you know to reach many many

00:35:07.640 --> 00:35:07.650
possible you know to reach many many
 

00:35:07.650 --> 00:35:10.160
possible you know to reach many many
more people around the world so we built

00:35:10.160 --> 00:35:10.170
more people around the world so we built
 

00:35:10.170 --> 00:35:12.200
more people around the world so we built
a new product called blocks and blocks

00:35:12.200 --> 00:35:12.210
a new product called blocks and blocks
 

00:35:12.210 --> 00:35:14.750
a new product called blocks and blocks
takes the technology of the C board and

00:35:14.750 --> 00:35:14.760
takes the technology of the C board and
 

00:35:14.760 --> 00:35:18.350
takes the technology of the C board and
puts it into a format of a small like

00:35:18.350 --> 00:35:18.360
puts it into a format of a small like
 

00:35:18.360 --> 00:35:21.230
puts it into a format of a small like
pocket-sized music controller and you

00:35:21.230 --> 00:35:21.240
pocket-sized music controller and you
 

00:35:21.240 --> 00:35:22.910
pocket-sized music controller and you
can you see you see it there you can use

00:35:22.910 --> 00:35:22.920
can you see you see it there you can use
 

00:35:22.920 --> 00:35:25.010
can you see you see it there you can use
it to just play beats or a play

00:35:25.010 --> 00:35:25.020
it to just play beats or a play
 

00:35:25.020 --> 00:35:27.230
it to just play beats or a play
expressive melodies and when we launch

00:35:27.230 --> 00:35:27.240
expressive melodies and when we launch
 

00:35:27.240 --> 00:35:31.340
expressive melodies and when we launch
blocks we initially launched on iOS but

00:35:31.340 --> 00:35:31.350
blocks we initially launched on iOS but
 

00:35:31.350 --> 00:35:33.590
blocks we initially launched on iOS but
the idea was always to make it you know

00:35:33.590 --> 00:35:33.600
the idea was always to make it you know
 

00:35:33.600 --> 00:35:37.430
the idea was always to make it you know
go far and wide and so the issue for us

00:35:37.430 --> 00:35:37.440
go far and wide and so the issue for us
 

00:35:37.440 --> 00:35:39.710
go far and wide and so the issue for us
was really about the latency all the

00:35:39.710 --> 00:35:39.720
was really about the latency all the
 

00:35:39.720 --> 00:35:41.090
was really about the latency all the
stuff that Don and Phil have been

00:35:41.090 --> 00:35:41.100
stuff that Don and Phil have been
 

00:35:41.100 --> 00:35:43.490
stuff that Don and Phil have been
talking about because to power these new

00:35:43.490 --> 00:35:43.500
talking about because to power these new
 

00:35:43.500 --> 00:35:45.290
talking about because to power these new
expressive instruments we developed a

00:35:45.290 --> 00:35:45.300
expressive instruments we developed a
 

00:35:45.300 --> 00:35:47.660
expressive instruments we developed a
professional-grade synthesizer called

00:35:47.660 --> 00:35:47.670
professional-grade synthesizer called
 

00:35:47.670 --> 00:35:50.480
professional-grade synthesizer called
equator and with equator you know you're

00:35:50.480 --> 00:35:50.490
equator and with equator you know you're
 

00:35:50.490 --> 00:35:53.090
equator and with equator you know you're
running many many different channels of

00:35:53.090 --> 00:35:53.100
running many many different channels of
 

00:35:53.100 --> 00:35:55.160
running many many different channels of
synthesis at the same time and you're

00:35:55.160 --> 00:35:55.170
synthesis at the same time and you're
 

00:35:55.170 --> 00:35:56.480
synthesis at the same time and you're
controlling them with all of these

00:35:56.480 --> 00:35:56.490
controlling them with all of these
 

00:35:56.490 --> 00:35:58.850
controlling them with all of these
different multi parameter gestures this

00:35:58.850 --> 00:35:58.860
different multi parameter gestures this
 

00:35:58.860 --> 00:36:01.970
different multi parameter gestures this
is it's a professional audio application

00:36:01.970 --> 00:36:01.980
is it's a professional audio application
 

00:36:01.980 --> 00:36:03.470
is it's a professional audio application
that's used in studios all around the

00:36:03.470 --> 00:36:03.480
that's used in studios all around the
 

00:36:03.480 --> 00:36:05.810
that's used in studios all around the
world so to run that on a phone you know

00:36:05.810 --> 00:36:05.820
world so to run that on a phone you know
 

00:36:05.820 --> 00:36:07.700
world so to run that on a phone you know
we had to do quite a bit of work but the

00:36:07.700 --> 00:36:07.710
we had to do quite a bit of work but the
 

00:36:07.710 --> 00:36:09.980
we had to do quite a bit of work but the
recent developments in the last few

00:36:09.980 --> 00:36:09.990
recent developments in the last few
 

00:36:09.990 --> 00:36:11.360
recent developments in the last few
versions of Android have made a big

00:36:11.360 --> 00:36:11.370
versions of Android have made a big
 

00:36:11.370 --> 00:36:13.130
versions of Android have made a big
difference and all of the you know stuff

00:36:13.130 --> 00:36:13.140
difference and all of the you know stuff
 

00:36:13.140 --> 00:36:15.020
difference and all of the you know stuff
that's just been discussed has actually

00:36:15.020 --> 00:36:15.030
that's just been discussed has actually
 

00:36:15.030 --> 00:36:18.350
that's just been discussed has actually
made it so now we can run all the sounds

00:36:18.350 --> 00:36:18.360
made it so now we can run all the sounds
 

00:36:18.360 --> 00:36:21.710
made it so now we can run all the sounds
in a crater on Android devices noise the

00:36:21.710 --> 00:36:21.720
in a crater on Android devices noise the
 

00:36:21.720 --> 00:36:23.600
in a crater on Android devices noise the
application is available in early access

00:36:23.600 --> 00:36:23.610
application is available in early access
 

00:36:23.610 --> 00:36:26.240
application is available in early access
in the Google Play Store and Marco and

00:36:26.240 --> 00:36:26.250
in the Google Play Store and Marco and
 

00:36:26.250 --> 00:36:28.010
in the Google Play Store and Marco and
Jack some of you may have noticed opened

00:36:28.010 --> 00:36:28.020
Jack some of you may have noticed opened
 

00:36:28.020 --> 00:36:30.620
Jack some of you may have noticed opened
up Google i/o two days ago with the

00:36:30.620 --> 00:36:30.630
up Google i/o two days ago with the
 

00:36:30.630 --> 00:36:32.210
up Google i/o two days ago with the
performance that was performed just on

00:36:32.210 --> 00:36:32.220
performance that was performed just on
 

00:36:32.220 --> 00:36:34.730
performance that was performed just on
four pixel phones so they're going to

00:36:34.730 --> 00:36:34.740
four pixel phones so they're going to
 

00:36:34.740 --> 00:36:37.330
four pixel phones so they're going to
just say a minute from that so it's

00:36:37.330 --> 00:36:37.340
just say a minute from that so it's
 

00:36:37.340 --> 00:36:40.520
just say a minute from that so it's
seaboard plus block plus four pixel

00:36:40.520 --> 00:36:40.530
seaboard plus block plus four pixel
 

00:36:40.530 --> 00:36:43.010
seaboard plus block plus four pixel
phones three instances of noise and

00:36:43.010 --> 00:36:43.020
phones three instances of noise and
 

00:36:43.020 --> 00:36:46.280
phones three instances of noise and
they're also using DJ pro 2 so let's

00:36:46.280 --> 00:36:46.290
they're also using DJ pro 2 so let's
 

00:36:46.290 --> 00:36:48.020
they're also using DJ pro 2 so let's
take a look

00:36:48.020 --> 00:36:48.030
take a look
 

00:36:48.030 --> 00:36:56.250
take a look
[Music]

00:36:56.250 --> 00:36:56.260
 

00:36:56.260 --> 00:37:04.760
[Applause]

00:37:04.760 --> 00:37:04.770
 

00:37:04.770 --> 00:37:14.050
[Music]

00:37:14.050 --> 00:37:14.060
 

00:37:14.060 --> 00:37:20.050
[Music]

00:37:20.050 --> 00:37:20.060
[Music]
 

00:37:20.060 --> 00:37:25.420
[Music]
[Applause]

00:37:25.420 --> 00:37:25.430
[Applause]
 

00:37:25.430 --> 00:37:38.880
[Applause]
[Music]

00:37:38.880 --> 00:37:38.890
[Music]
 

00:37:38.890 --> 00:37:40.350
[Music]
[Applause]

00:37:40.350 --> 00:37:40.360
[Applause]
 

00:37:40.360 --> 00:37:51.880
[Applause]
[Music]

00:37:51.880 --> 00:37:51.890
 

00:37:51.890 --> 00:37:54.170
thank you so much so one of the reasons

00:37:54.170 --> 00:37:54.180
thank you so much so one of the reasons
 

00:37:54.180 --> 00:37:56.870
thank you so much so one of the reasons
why we were able to do this was that we

00:37:56.870 --> 00:37:56.880
why we were able to do this was that we
 

00:37:56.880 --> 00:37:59.090
why we were able to do this was that we
develop a coding framework called juice

00:37:59.090 --> 00:37:59.100
develop a coding framework called juice
 

00:37:59.100 --> 00:38:03.680
develop a coding framework called juice
juc II and it's a C++ cross-platform

00:38:03.680 --> 00:38:03.690
juc II and it's a C++ cross-platform
 

00:38:03.690 --> 00:38:06.590
juc II and it's a C++ cross-platform
framework it's built for audio and it's

00:38:06.590 --> 00:38:06.600
framework it's built for audio and it's
 

00:38:06.600 --> 00:38:09.320
framework it's built for audio and it's
really built for speed and so we've been

00:38:09.320 --> 00:38:09.330
really built for speed and so we've been
 

00:38:09.330 --> 00:38:11.300
really built for speed and so we've been
working not only you know using juice

00:38:11.300 --> 00:38:11.310
working not only you know using juice
 

00:38:11.310 --> 00:38:13.880
working not only you know using juice
for noise but we work with thousands of

00:38:13.880 --> 00:38:13.890
for noise but we work with thousands of
 

00:38:13.890 --> 00:38:15.740
for noise but we work with thousands of
developers around the world who are

00:38:15.740 --> 00:38:15.750
developers around the world who are
 

00:38:15.750 --> 00:38:17.450
developers around the world who are
creating audio applications that are

00:38:17.450 --> 00:38:17.460
creating audio applications that are
 

00:38:17.460 --> 00:38:18.320
creating audio applications that are
cross-platform

00:38:18.320 --> 00:38:18.330
cross-platform
 

00:38:18.330 --> 00:38:19.880
cross-platform
and what we're finding is with these

00:38:19.880 --> 00:38:19.890
and what we're finding is with these
 

00:38:19.890 --> 00:38:22.730
and what we're finding is with these
recent improvements in Android it's not

00:38:22.730 --> 00:38:22.740
recent improvements in Android it's not
 

00:38:22.740 --> 00:38:24.770
recent improvements in Android it's not
just you know for our applications but

00:38:24.770 --> 00:38:24.780
just you know for our applications but
 

00:38:24.780 --> 00:38:26.690
just you know for our applications but
for many of our developers they can take

00:38:26.690 --> 00:38:26.700
for many of our developers they can take
 

00:38:26.700 --> 00:38:28.040
for many of our developers they can take
applications that were audio

00:38:28.040 --> 00:38:28.050
applications that were audio
 

00:38:28.050 --> 00:38:30.200
applications that were audio
applications that were developed for iOS

00:38:30.200 --> 00:38:30.210
applications that were developed for iOS
 

00:38:30.210 --> 00:38:33.020
applications that were developed for iOS
for example and now port those over to

00:38:33.020 --> 00:38:33.030
for example and now port those over to
 

00:38:33.030 --> 00:38:35.330
for example and now port those over to
Android and we're also seeing this is an

00:38:35.330 --> 00:38:35.340
Android and we're also seeing this is an
 

00:38:35.340 --> 00:38:36.560
Android and we're also seeing this is an
interesting opportunity for a lot of

00:38:36.560 --> 00:38:36.570
interesting opportunity for a lot of
 

00:38:36.570 --> 00:38:38.990
interesting opportunity for a lot of
other developers out there who want to

00:38:38.990 --> 00:38:39.000
other developers out there who want to
 

00:38:39.000 --> 00:38:41.210
other developers out there who want to
create low latency audio applications

00:38:41.210 --> 00:38:41.220
create low latency audio applications
 

00:38:41.220 --> 00:38:43.490
create low latency audio applications
but don't necessarily have the resources

00:38:43.490 --> 00:38:43.500
but don't necessarily have the resources
 

00:38:43.500 --> 00:38:46.010
but don't necessarily have the resources
to learn all of the different systems

00:38:46.010 --> 00:38:46.020
to learn all of the different systems
 

00:38:46.020 --> 00:38:47.690
to learn all of the different systems
associated with a different platform so

00:38:47.690 --> 00:38:47.700
associated with a different platform so
 

00:38:47.700 --> 00:38:49.100
associated with a different platform so
that's something to check out if you're

00:38:49.100 --> 00:38:49.110
that's something to check out if you're
 

00:38:49.110 --> 00:38:51.140
that's something to check out if you're
interested at juice comm we also

00:38:51.140 --> 00:38:51.150
interested at juice comm we also
 

00:38:51.150 --> 00:38:54.230
interested at juice comm we also
organise something called ADC not the

00:38:54.230 --> 00:38:54.240
organise something called ADC not the
 

00:38:54.240 --> 00:38:57.590
organise something called ADC not the
ADC that Phil was talking about but it's

00:38:57.590 --> 00:38:57.600
ADC that Phil was talking about but it's
 

00:38:57.600 --> 00:38:59.480
ADC that Phil was talking about but it's
called an audio developer conference in

00:38:59.480 --> 00:38:59.490
called an audio developer conference in
 

00:38:59.490 --> 00:39:01.940
called an audio developer conference in
London which is on the 13th and 15th of

00:39:01.940 --> 00:39:01.950
London which is on the 13th and 15th of
 

00:39:01.950 --> 00:39:03.950
London which is on the 13th and 15th of
November which is deals with all of

00:39:03.950 --> 00:39:03.960
November which is deals with all of
 

00:39:03.960 --> 00:39:06.260
November which is deals with all of
these issues so check that out at juice

00:39:06.260 --> 00:39:06.270
these issues so check that out at juice
 

00:39:06.270 --> 00:39:08.960
these issues so check that out at juice
calm but just you know thank you for

00:39:08.960 --> 00:39:08.970
calm but just you know thank you for
 

00:39:08.970 --> 00:39:11.060
calm but just you know thank you for
tuning in and we thought we'd leave you

00:39:11.060 --> 00:39:11.070
tuning in and we thought we'd leave you
 

00:39:11.070 --> 00:39:13.130
tuning in and we thought we'd leave you
with one more little performance from

00:39:13.130 --> 00:39:13.140
with one more little performance from
 

00:39:13.140 --> 00:39:27.400
with one more little performance from
marco and jack

00:39:27.400 --> 00:39:27.410
 

00:39:27.410 --> 00:39:38.850
[Music]

00:39:38.850 --> 00:39:38.860
[Music]
 

00:39:38.860 --> 00:39:39.330
[Music]
[Applause]

00:39:39.330 --> 00:39:39.340
[Applause]
 

00:39:39.340 --> 00:39:49.670
[Applause]
[Music]

00:39:49.670 --> 00:39:49.680
 

00:39:49.680 --> 00:39:55.990
[Music]

00:39:55.990 --> 00:39:56.000
[Music]
 

00:39:56.000 --> 00:39:56.430
[Music]
[Applause]

00:39:56.430 --> 00:39:56.440
[Applause]
 

00:39:56.440 --> 00:40:02.740
[Applause]
[Music]

00:40:02.740 --> 00:40:02.750
 

00:40:02.750 --> 00:40:13.670
you

00:40:13.670 --> 00:40:13.680
 

00:40:13.680 --> 00:40:17.099
so Marco and Jack breezy everyone and

00:40:17.099 --> 00:40:17.109
so Marco and Jack breezy everyone and
 

00:40:17.109 --> 00:40:19.109
so Marco and Jack breezy everyone and
also check out check out their work

00:40:19.109 --> 00:40:19.119
also check out check out their work
 

00:40:19.119 --> 00:40:20.940
also check out check out their work
breezy is doing some amazing things and

00:40:20.940 --> 00:40:20.950
breezy is doing some amazing things and
 

00:40:20.950 --> 00:40:22.799
breezy is doing some amazing things and
releasing some great work so I believe

00:40:22.799 --> 00:40:22.809
releasing some great work so I believe
 

00:40:22.809 --> 00:40:24.299
releasing some great work so I believe
that's all for this session and there's

00:40:24.299 --> 00:40:24.309
that's all for this session and there's
 

00:40:24.309 --> 00:40:29.190
that's all for this session and there's
a sandbox that will follow so you know

00:40:29.190 --> 00:40:29.200
a sandbox that will follow so you know
 

00:40:29.200 --> 00:40:31.529
a sandbox that will follow so you know
come check it out and thank you all so

00:40:31.529 --> 00:40:31.539
come check it out and thank you all so
 

00:40:31.539 --> 00:40:33.020
come check it out and thank you all so
very much for coming today

00:40:33.020 --> 00:40:33.030
very much for coming today
 

00:40:33.030 --> 00:40:36.240
very much for coming today
[Applause]

00:40:36.240 --> 00:40:36.250
[Applause]
 

00:40:36.250 --> 00:40:47.150
[Applause]
[Music]

00:40:47.150 --> 00:40:47.160
 

00:40:47.160 --> 00:40:50.179
[Music]

