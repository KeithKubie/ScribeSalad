WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:07.260
[MUSIC PLAYING]

00:00:07.260 --> 00:00:09.860
LAWRENCE: Hi, and welcome
again to GeoCasts,

00:00:09.860 --> 00:00:12.900
where we'll teach you all about
using Google Maps to build

00:00:12.900 --> 00:00:14.190
better apps.

00:00:14.190 --> 00:00:16.079
I'm Lawrence, and
in this video I'm

00:00:16.079 --> 00:00:19.500
going to talk all about building
an interactive place-based

00:00:19.500 --> 00:00:22.470
experience using the Places API.

00:00:22.470 --> 00:00:25.740
It's a simple game, and you'll
be communicating with Alyssa,

00:00:25.740 --> 00:00:28.380
this woman who's trapped
in a parallel dimension,

00:00:28.380 --> 00:00:32.290
and well, I'll just let her
explain what you have to do.

00:00:32.290 --> 00:00:33.900
ALYSSA: There was an accident.

00:00:33.900 --> 00:00:36.780
I'm trapped in an alternate
dimension which is literally

00:00:36.780 --> 00:00:38.400
right next door to yours.

00:00:38.400 --> 00:00:40.590
Parts of my dimension
are leaking into yours,

00:00:40.590 --> 00:00:42.360
and if you can get
to their location,

00:00:42.360 --> 00:00:44.820
I can fix it and
get myself home.

00:00:44.820 --> 00:00:46.950
LAWRENCE: So how does
this work as an app?

00:00:46.950 --> 00:00:50.220
It's been made user customizable
so you can pick any three

00:00:50.220 --> 00:00:53.160
places in the world,
assign a code to them,

00:00:53.160 --> 00:00:55.350
and then when you share
that code with your friends,

00:00:55.350 --> 00:00:58.290
Alyssa will guide them
through those three places

00:00:58.290 --> 00:01:00.930
to solve puzzles that
will get her home.

00:01:00.930 --> 00:01:04.260
The Google Places API supports
over 100 million places

00:01:04.260 --> 00:01:07.140
around the world so you
have lots to choose from.

00:01:07.140 --> 00:01:08.700
Here you can see
some games that I've

00:01:08.700 --> 00:01:11.070
designed stored in Firebase.

00:01:11.070 --> 00:01:15.060
So for example, if you were
to use the code googkior,

00:01:15.060 --> 00:01:17.820
you'd go to these three
places to rescue Alyssa.

00:01:17.820 --> 00:01:20.070
Or if you were to
choose the code draheda,

00:01:20.070 --> 00:01:22.610
you'd be guided to these three.

00:01:22.610 --> 00:01:25.340
The Places API has a
user interface widget

00:01:25.340 --> 00:01:28.580
called the PlacePicker, which
allows you to pick your desired

00:01:28.580 --> 00:01:30.320
places off the map.

00:01:30.320 --> 00:01:33.560
In this video, you'll see how
to use the PlacePicker to choose

00:01:33.560 --> 00:01:36.800
your three places and how
to store them in Firebase.

00:01:36.800 --> 00:01:38.610
In the next video
in this series,

00:01:38.610 --> 00:01:40.880
we'll look at how you
use the Places API

00:01:40.880 --> 00:01:43.610
to detect your current
location to see if it matches

00:01:43.610 --> 00:01:45.650
the desired place.

00:01:45.650 --> 00:01:48.980
As it uses real world
places, the Places API

00:01:48.980 --> 00:01:52.760
is a terrific way to make
it user-friendly, powerful,

00:01:52.760 --> 00:01:54.440
and easy to build for.

00:01:54.440 --> 00:01:56.840
ALYSSA: It's really nice
of you to help me out.

00:01:56.840 --> 00:01:57.830
Thanks.

00:01:57.830 --> 00:01:59.210
LAWRENCE: You're welcome.

00:01:59.210 --> 00:02:02.600
The Places API is designed
to make your apps stand out

00:02:02.600 --> 00:02:07.070
with detailed information
about over 100 million places

00:02:07.070 --> 00:02:10.520
around the world, across a
wide range of categories,

00:02:10.520 --> 00:02:13.820
and it uses the same
database as Google Maps.

00:02:13.820 --> 00:02:17.810
Not only that, the Places
API has place detection,

00:02:17.810 --> 00:02:20.570
giving you the ability
to tell if your user is

00:02:20.570 --> 00:02:22.100
in one of those locations.

00:02:22.100 --> 00:02:23.780
ALYSSA: That makes it easier.

00:02:23.780 --> 00:02:26.130
I can just tell you to go
to a specific location,

00:02:26.130 --> 00:02:29.420
like say, the Seattle
Space Needle, instead

00:02:29.420 --> 00:02:31.880
of dealing with latitude
and longitude or addresses.

00:02:31.880 --> 00:02:32.990
LAWRENCE: That's right.

00:02:32.990 --> 00:02:34.940
And the Places
API, remember, can

00:02:34.940 --> 00:02:36.950
detect if your user is there.

00:02:36.950 --> 00:02:39.900
ALYSSA: Well, of course
I'm there, silly.

00:02:39.900 --> 00:02:43.650
LAWRENCE: Right, but before we
get to detecting the places,

00:02:43.650 --> 00:02:46.010
let's look at how we
can build an app where

00:02:46.010 --> 00:02:49.790
you can configure the places
that you want to play in.

00:02:49.790 --> 00:02:53.480
We'll use the PlacePicker
control to pick three places

00:02:53.480 --> 00:02:56.180
and store their
place IDs in Firebase

00:02:56.180 --> 00:02:58.070
along with a unique code.

00:02:58.070 --> 00:03:00.350
You can share that
code with your friends

00:03:00.350 --> 00:03:02.420
so when they play
the game, Alyssa

00:03:02.420 --> 00:03:06.000
will tell them to go to
those places, like this.

00:03:06.000 --> 00:03:07.860
ALYSSA: The first part is here.

00:03:07.860 --> 00:03:10.640
Please go and I'll let you
know once you're close enough.

00:03:10.640 --> 00:03:12.230
LAWRENCE: The
PlacePicker control

00:03:12.230 --> 00:03:16.640
allows me to give my end users
a standard, user-friendly way

00:03:16.640 --> 00:03:20.540
of selecting the places that
this game will be played in.

00:03:20.540 --> 00:03:24.860
So for the game, I decided
that it would use three places.

00:03:24.860 --> 00:03:27.410
You can see how it works here.

00:03:27.410 --> 00:03:29.480
Every time I press
a button, I get

00:03:29.480 --> 00:03:32.210
the PlacePicker, along
with Google Maps,

00:03:32.210 --> 00:03:34.690
allowing me to choose a place.

00:03:34.690 --> 00:03:36.386
I'll pick the Space
Needle for us.

00:03:36.386 --> 00:03:37.760
You're still there
right, Alyssa?

00:03:37.760 --> 00:03:39.170
ALYSSA: Roger that.

00:03:39.170 --> 00:03:40.160
LAWRENCE: Good.

00:03:40.160 --> 00:03:42.360
So then I can pick
some other places.

00:03:42.360 --> 00:03:44.780
ALYSSA: And if you really
don't like your friends,

00:03:44.780 --> 00:03:47.720
you can make them locations
that are really far away, right?

00:03:47.720 --> 00:03:48.770
LAWRENCE: That's right.

00:03:48.770 --> 00:03:50.870
And of course, as
you can see here,

00:03:50.870 --> 00:03:53.030
these strings are
the identifiers

00:03:53.030 --> 00:03:55.100
for those places on Google.

00:03:55.100 --> 00:03:57.960
Later when we scan for
the device location,

00:03:57.960 --> 00:04:01.220
we'll find nearby places
and we can compare

00:04:01.220 --> 00:04:03.620
to see if we're close to these.

00:04:03.620 --> 00:04:05.960
So how does this work in code?

00:04:05.960 --> 00:04:08.870
First of all, in order
to use the PlacePicker,

00:04:08.870 --> 00:04:11.180
you need your app to
have the access find

00:04:11.180 --> 00:04:14.630
location permission, so
make sure you have that.

00:04:14.630 --> 00:04:18.079
Docs on how to do
that are right here.

00:04:18.079 --> 00:04:20.390
Next, make sure you
have the location

00:04:20.390 --> 00:04:23.600
libraries from Play Services
included in your builder

00:04:23.600 --> 00:04:25.400
gradle.

00:04:25.400 --> 00:04:27.590
Now, in an Android
activity, and as you

00:04:27.590 --> 00:04:30.480
can see mine is called
Create Game Activity,

00:04:30.480 --> 00:04:33.110
you can use a PlacePicker
Intent Builder

00:04:33.110 --> 00:04:35.960
to create a PlacePicker intent.

00:04:35.960 --> 00:04:39.110
Start this and the
picker will run for you.

00:04:39.110 --> 00:04:41.600
If you're wondering what
that ID parameter is,

00:04:41.600 --> 00:04:44.240
this game allows you
to define three places,

00:04:44.240 --> 00:04:47.740
so it's just an integer
for one, two, or three.

00:04:47.740 --> 00:04:52.210
Once the user selects a place,
OnActivityResult will fire

00:04:52.210 --> 00:04:56.320
and it will contain an intent
with the returned data.

00:04:56.320 --> 00:04:59.250
You can then turn this
into a place object with

00:04:59.250 --> 00:05:02.590
the PlacePicker
.getplacefunction.

00:05:02.590 --> 00:05:05.890
The place object exposes
the Google identifier

00:05:05.890 --> 00:05:09.940
for that location as the
place ID, which you can then

00:05:09.940 --> 00:05:11.950
read with that method.

00:05:11.950 --> 00:05:14.470
It also has the
description for the place

00:05:14.470 --> 00:05:17.470
which you can access
with a place.getname

00:05:17.470 --> 00:05:19.420
and cast that into a string.

00:05:19.420 --> 00:05:21.730
It's really that simple.

00:05:21.730 --> 00:05:23.620
To close the loop,
here's how you

00:05:23.620 --> 00:05:28.000
can save the three Place IDs
to Firebase under a game code.

00:05:28.000 --> 00:05:30.340
I simply create a node
with the game code

00:05:30.340 --> 00:05:32.860
and store these
values under that.

00:05:32.860 --> 00:05:35.050
Do note that there
are restrictions

00:05:35.050 --> 00:05:39.250
to saving data from the Places
API in your own database.

00:05:39.250 --> 00:05:42.760
Before distributing an app
that uses the Places API,

00:05:42.760 --> 00:05:45.070
be sure to understand
the policies.

00:05:45.070 --> 00:05:47.170
They're linked right here.

00:05:47.170 --> 00:05:50.280
So you've completed the
first part of this task.

00:05:50.280 --> 00:05:51.300
Well done.

00:05:51.300 --> 00:05:53.260
In the next video,
we'll take a look

00:05:53.260 --> 00:05:57.220
at how to use the Places API
to determine if your users are

00:05:57.220 --> 00:06:00.640
close enough to the
desired place to unlock

00:06:00.640 --> 00:06:02.740
the next part of the game.

00:06:02.740 --> 00:06:06.400
You can learn more about the
Google Places API at this page

00:06:06.400 --> 00:06:10.450
and see more GeoCasts videos on
the Google Developers channel.

00:06:10.450 --> 00:06:12.700
ALYSSA: And don't forget to
hit that Subscribe button.

00:06:12.700 --> 00:06:14.850
[MUSIC PLAYING]

