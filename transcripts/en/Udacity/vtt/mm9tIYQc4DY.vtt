WEBVTT
Kind: captions
Language: en

00:00:00.200 --> 00:00:04.080
Even pandas aren't really black and
white, they're actually colored.

00:00:04.080 --> 00:00:06.600
Okay, usually it's like disgusting,
dirty brown, because they're,

00:00:06.600 --> 00:00:07.850
they're really sloppy eaters.

00:00:07.850 --> 00:00:13.900
Anyway so instead of clustering
in just the intensity space,

00:00:13.900 --> 00:00:16.170
we could cluster in RGB space.

00:00:16.170 --> 00:00:18.400
So this is notionally drawn here.

00:00:18.400 --> 00:00:21.890
Right, where you can see that each point

00:00:21.890 --> 00:00:26.280
now belongs to a different color
cluster and here they are.

00:00:26.280 --> 00:00:29.210
And so you're grouping these
pixels based upon their color.

00:00:29.210 --> 00:00:33.360
So now you're doing a quantization
in three dimensional space.

00:00:33.360 --> 00:00:37.260
Here's a nice example of using
color instead of intensity

00:00:37.260 --> 00:00:38.840
this original image here.

00:00:38.840 --> 00:00:41.660
And you can see if you take
a look at sort of the, the,

00:00:41.660 --> 00:00:45.570
the clustering based upon intensity
over here, it doesn't do a particularly

00:00:45.570 --> 00:00:49.470
interesting job of segmenting
the cabbage from the broccoli

00:00:49.470 --> 00:00:52.622
which is something you should always do
because you like one and not the other.

00:00:52.622 --> 00:00:56.690
All right, but over here you can see
that based upon the different colors

00:00:56.690 --> 00:00:58.490
you get the different segments.

00:00:58.490 --> 00:01:01.430
And it's not rocket science, but
it's just this idea that you have some

00:01:01.430 --> 00:01:05.600
things that have this similar intensity
but are very different in their chroma.

00:01:05.600 --> 00:01:06.630
Right?
Their, their colors.

00:01:06.630 --> 00:01:10.076
And we talked about color space,
last time, all right.

00:01:10.076 --> 00:01:15.000
Notice, however, this pepper here and
this pepper there.

00:01:15.000 --> 00:01:20.220
This system does not know at all
that those two peppers are distinct.

00:01:20.220 --> 00:01:23.890
Right, because the only thing
it uses to create these clusters

00:01:23.890 --> 00:01:26.330
is the distance in color space.

00:01:26.330 --> 00:01:28.520
You might ask can I
do something smarter.

00:01:28.520 --> 00:01:29.970
&gt;&gt; Can I do something smarter?

00:01:29.970 --> 00:01:31.100
&gt;&gt; Thank you very much,

00:01:31.100 --> 00:01:35.360
yes you can include not only
clustering in say intensity.

00:01:35.360 --> 00:01:36.860
But you can also cluster,

00:01:36.860 --> 00:01:39.560
so here we have, we have this
little part of the black ear and

00:01:39.560 --> 00:01:43.470
this dark part of the eye, and you might
want them to be in separate clusters.

00:01:43.470 --> 00:01:45.130
Well, how would you do that?

00:01:45.130 --> 00:01:45.870
Very simple.

00:01:45.870 --> 00:01:50.790
Instead of just clustering on intensity,
you would add the position as well.

00:01:50.790 --> 00:01:55.310
So now, we have a three dimensional
space of intensity, no.

00:01:55.310 --> 00:02:01.770
Intensity x and y or,
as shown here, intensity x and y.

00:02:01.770 --> 00:02:04.100
Here we have the black pixels.

00:02:04.100 --> 00:02:07.740
Together they're low in intensity but
separated in different areas in x and

00:02:07.740 --> 00:02:12.230
y, and so you would get a different,
two different, clusters.

00:02:12.230 --> 00:02:13.360
And of course.

00:02:13.360 --> 00:02:16.790
If you've got intensity and you can do
position you have, can have color and

00:02:16.790 --> 00:02:18.110
you can do position.

00:02:18.110 --> 00:02:23.640
And the point here is that your
feature vector is getting longer,

00:02:23.640 --> 00:02:28.870
looking for features that you'd all like
or, as many as possible, to be similar.

00:02:28.870 --> 00:02:31.780
In order to say that everything
is in the same cluster.

00:02:31.780 --> 00:02:37.820
So, notice that if I include the x and
y here, so, for example, these

00:02:37.820 --> 00:02:42.010
two pixels, this green up in the top
left and the green in the bottom left.

00:02:42.010 --> 00:02:46.177
They can't be clustered in the same
segments because they're different along

00:02:46.177 --> 00:02:48.422
some dimension, namely the y dimension.

00:02:48.422 --> 00:02:49.020
All right?

00:02:49.020 --> 00:02:52.070
So that's, that's the utility
of adding these dimensions.

