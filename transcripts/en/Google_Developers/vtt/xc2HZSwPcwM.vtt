WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.440
[MUSIC PLAYING]

00:00:10.312 --> 00:00:12.270
JOSH GORDON: Although
Voice Actions are already

00:00:12.270 --> 00:00:15.090
available on many
different Android devices,

00:00:15.090 --> 00:00:18.030
there's nowhere where they're
more important than in the car.

00:00:18.030 --> 00:00:21.020
Already you can reply to
messages simply by speaking,

00:00:21.020 --> 00:00:24.640
and now you can listen to
music and other audio content

00:00:24.640 --> 00:00:26.980
simply by saying what
you want to hear.

00:00:26.980 --> 00:00:28.768
Let's see, or rather
hear, an example

00:00:28.768 --> 00:00:30.726
of how this works on our
reference application.

00:00:33.840 --> 00:00:36.240
Listen to "Awakening" on
Universal Media Player.

00:00:38.492 --> 00:00:39.950
FEMALE SPEAKER:
Playing "Awakening"

00:00:39.950 --> 00:00:41.033
on Universal Media Player.

00:00:41.033 --> 00:00:43.432
[MUSIC PLAYING]

00:00:47.271 --> 00:00:48.520
JOSH GORDON: How cool is that?

00:00:48.520 --> 00:00:50.560
I'm Josh Gordon from
Google, and today I'll

00:00:50.560 --> 00:00:52.320
show you how easy
it is to add Voice

00:00:52.320 --> 00:00:55.177
Actions to your existing
Android auto applications.

00:00:55.177 --> 00:00:56.635
This is important
to do, because it

00:00:56.635 --> 00:00:58.420
will help users stay
focused on the road

00:00:58.420 --> 00:01:00.030
as well as enjoy the ride.

00:01:00.030 --> 00:01:03.820
Let's head back to the
studio and see how it's done.

00:01:03.820 --> 00:01:08.070
Voice Actions can be used to
start and control playback.

00:01:08.070 --> 00:01:10.980
Users initiate a Voice Action
by tapping the mic button

00:01:10.980 --> 00:01:13.270
on the car's display
or by pressing

00:01:13.270 --> 00:01:15.880
the corresponding
steering wheel control.

00:01:15.880 --> 00:01:19.370
You don't say "OK Google" as
you would on a mobile device.

00:01:19.370 --> 00:01:21.630
You can start playback in
a number of different ways,

00:01:21.630 --> 00:01:25.360
but they all take the
form of Play Query on App.

00:01:25.360 --> 00:01:27.052
Of course, you don't
need to say the app

00:01:27.052 --> 00:01:28.260
name if it's already running.

00:01:30.780 --> 00:01:33.210
If you'd like to hear music
of certain genre, you can say,

00:01:33.210 --> 00:01:37.250
"play jazz on app," or you can
say, listen "listen to rock."

00:01:37.250 --> 00:01:38.940
You can also request
to hear music

00:01:38.940 --> 00:01:43.790
by artist, album, song, radio
station and even by playlist.

00:01:43.790 --> 00:01:47.550
You should support all of these
that make sense for your app.

00:01:47.550 --> 00:01:49.280
In addition to
starting playback,

00:01:49.280 --> 00:01:52.480
Voice Actions can also
be used to control it.

00:01:52.480 --> 00:01:55.090
When content is playing, users
can press the steering wheel

00:01:55.090 --> 00:02:00.100
button and say commands like
"pause music" or "next song."

00:02:00.100 --> 00:02:01.960
And here's something
great for you.

00:02:01.960 --> 00:02:03.990
If your app isn't already
in the foreground when

00:02:03.990 --> 00:02:06.300
a Voice Action comes
in, Android Auto

00:02:06.300 --> 00:02:08.577
will launch it automatically.

00:02:08.577 --> 00:02:10.160
This means that Voice
Actions give you

00:02:10.160 --> 00:02:12.700
a way to take users directly
from the home screen

00:02:12.700 --> 00:02:15.769
into your content.

00:02:15.769 --> 00:02:18.310
Now let's see how to implement
Voice Actions in your existing

00:02:18.310 --> 00:02:19.600
audio app.

00:02:19.600 --> 00:02:22.320
First, if you'd like a refresher
on how to build an audio app,

00:02:22.320 --> 00:02:26.170
check out this great
video by Wayne Piekarski.

00:02:26.170 --> 00:02:28.660
The first step is to add the
Media Play from search entry

00:02:28.660 --> 00:02:30.380
to your manifest.

00:02:30.380 --> 00:02:32.660
This enables Auto to
launch your app in response

00:02:32.660 --> 00:02:35.610
to "playback voice action."

00:02:35.610 --> 00:02:38.790
Next, implement the On Play From
Search method inside your media

00:02:38.790 --> 00:02:40.540
session callback.

00:02:40.540 --> 00:02:42.490
When the user finishes
speaking, Auto

00:02:42.490 --> 00:02:46.310
delivers the speech recognition
results to this method.

00:02:46.310 --> 00:02:47.820
In your implementation,
you should

00:02:47.820 --> 00:02:50.190
search your media library
for matching content,

00:02:50.190 --> 00:02:54.394
build your media sessions audio
queue, and then start playback.

00:02:54.394 --> 00:02:56.060
There are two parameters
to this method,

00:02:56.060 --> 00:02:58.570
and to understand them,
let's say the user says,

00:02:58.570 --> 00:03:02.030
"play Miles Davis" on your app.

00:03:02.030 --> 00:03:04.490
The first parameter
contains the search query,

00:03:04.490 --> 00:03:07.970
in this case the
string "Miles Davis."

00:03:07.970 --> 00:03:11.120
The extras contain additional
information Google provides.

00:03:11.120 --> 00:03:14.570
In this case Google detects
that Miles Davis is an artist

00:03:14.570 --> 00:03:17.200
and adds an Artist
Extra to the bundle.

00:03:17.200 --> 00:03:19.910
These are the different extras
provided by Android Auto,

00:03:19.910 --> 00:03:21.330
and when they're
available you can

00:03:21.330 --> 00:03:23.880
use them to do a structured
query of your database,

00:03:23.880 --> 00:03:26.767
as opposed to having
to search all fields.

00:03:26.767 --> 00:03:28.350
They won't always
be available though,

00:03:28.350 --> 00:03:30.580
so you should also
implement Logic to search

00:03:30.580 --> 00:03:33.290
based on just the query string.

00:03:33.290 --> 00:03:35.780
Here's an example of how
you can retrieve the extras,

00:03:35.780 --> 00:03:37.850
and you can find a
complete code example

00:03:37.850 --> 00:03:40.670
in the link at the
end of this video.

00:03:40.670 --> 00:03:44.130
Also be sure to check for
an empty query string.

00:03:44.130 --> 00:03:46.650
This can happen when the user
doesn't specify any search

00:03:46.650 --> 00:03:47.390
terms.

00:03:47.390 --> 00:03:50.880
For example, if they just
say, "play anything."

00:03:50.880 --> 00:03:53.920
Handle this case by playing what
makes most sense for your app.

00:03:53.920 --> 00:03:58.400
For example, a recent
or favorite song.

00:03:58.400 --> 00:04:01.150
Next, implement Search
Logic to find content

00:04:01.150 --> 00:04:04.000
that matches the user's query.

00:04:04.000 --> 00:04:06.070
If your search doesn't
return immediately,

00:04:06.070 --> 00:04:08.520
set the playback state
to "state connecting,"

00:04:08.520 --> 00:04:11.580
and perform your search
on an async thread.

00:04:11.580 --> 00:04:14.260
Build your media sessions Audio
Queue with the search results,

00:04:14.260 --> 00:04:17.730
keeping in mind there
could be more than one.

00:04:17.730 --> 00:04:20.390
For example, if the user
searches for an album,

00:04:20.390 --> 00:04:22.740
add all its songs to the
queue so the next song

00:04:22.740 --> 00:04:25.020
starts playing automatically
after the current song

00:04:25.020 --> 00:04:27.314
finishes.

00:04:27.314 --> 00:04:28.730
And when search
results are ready,

00:04:28.730 --> 00:04:31.350
be sure to start playback
without requiring the driver

00:04:31.350 --> 00:04:34.250
to take any other action.

00:04:34.250 --> 00:04:36.950
On the other hand, if no
search results were found,

00:04:36.950 --> 00:04:40.960
stop playback and show an error.

00:04:40.960 --> 00:04:43.680
Now it's time to enable
Playback Controls.

00:04:43.680 --> 00:04:45.920
When the user says a
command, Android Auto

00:04:45.920 --> 00:04:48.430
triggers the corresponding
method in your Media Session

00:04:48.430 --> 00:04:49.900
Callback.

00:04:49.900 --> 00:04:51.640
There are just two steps.

00:04:51.640 --> 00:04:55.590
First, set these flags on
your Media Session Object.

00:04:55.590 --> 00:04:58.190
Now you only have to implement
the corresponding callback

00:04:58.190 --> 00:04:59.990
methods.

00:04:59.990 --> 00:05:02.780
For complete code example of
how both types of Voice Actions

00:05:02.780 --> 00:05:05.430
work, check out the Universal
Media Player Reference

00:05:05.430 --> 00:05:08.160
app, and you can see
our developer training

00:05:08.160 --> 00:05:09.889
for much more info.

00:05:09.889 --> 00:05:12.180
Thanks very much for joining
me, and see you next time.

00:05:12.180 --> 00:05:15.230
[MUSIC PLAYING]

