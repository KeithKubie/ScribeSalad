WEBVTT
Kind: captions
Language: en

00:00:00.499 --> 00:00:03.129
[MUSIC PLAYING]

00:00:06.515 --> 00:00:10.200
Hi, I'm Xeres, a developer
advocate here at Google,

00:00:10.200 --> 00:00:13.840
back again in our
AdWords API series.

00:00:13.840 --> 00:00:17.590
In the first video, we looked
at what the AdWords API is

00:00:17.590 --> 00:00:19.950
and what it can be used for.

00:00:19.950 --> 00:00:25.580
In this video, I want to get
you to your first API call.

00:00:25.580 --> 00:00:28.710
This is a complex process,
so I wanted to break it down

00:00:28.710 --> 00:00:31.630
for you, step by step.

00:00:31.630 --> 00:00:34.300
You may want to pause the
video from time to time

00:00:34.300 --> 00:00:36.880
so that you can follow along.

00:00:36.880 --> 00:00:40.390
This will open the door for
you to take full advantage

00:00:40.390 --> 00:00:42.100
of the AdWords API.

00:00:42.100 --> 00:00:45.190
We're going to use
Java and Eclipse.

00:00:45.190 --> 00:00:47.290
If you don't use Java,
you can accomplish

00:00:47.290 --> 00:00:49.410
all of this with
the client libraries

00:00:49.410 --> 00:00:51.520
in these other languages.

00:00:51.520 --> 00:00:54.750
The concepts are all the same.

00:00:54.750 --> 00:00:58.610
Here are the six steps you
need to follow-- request

00:00:58.610 --> 00:01:03.340
a developer token,
create a test AdWords MCC

00:01:03.340 --> 00:01:07.190
or My Client Centered Account
and a test AdWords client

00:01:07.190 --> 00:01:11.940
account, set up your
development environment,

00:01:11.940 --> 00:01:16.570
set up OAuth2 access, configure
your client application,

00:01:16.570 --> 00:01:20.380
and, finally, make
your first API call.

00:01:20.380 --> 00:01:22.810
So let's start.

00:01:22.810 --> 00:01:25.060
To be able to use
the AdWords API,

00:01:25.060 --> 00:01:28.880
you need to have an
AdWords MCC account.

00:01:28.880 --> 00:01:33.380
If you don't have one,
you can request one here.

00:01:33.380 --> 00:01:36.770
Next, request a developer token.

00:01:36.770 --> 00:01:38.710
This is what allows
your application

00:01:38.710 --> 00:01:42.060
to connect to the API.

00:01:42.060 --> 00:01:45.140
Log into your
AdWords MCC account.

00:01:45.140 --> 00:01:48.380
In the gear menu,
choose Account Settings.

00:01:48.380 --> 00:01:52.190
Then, in the menu on the
left, click AdWords API Center

00:01:52.190 --> 00:01:56.210
and fill out the form to
apply for a developer token.

00:01:56.210 --> 00:01:58.760
Check your mail for
another application form

00:01:58.760 --> 00:02:00.420
and complete it.

00:02:00.420 --> 00:02:03.390
You should receive it
within two business days.

00:02:03.390 --> 00:02:07.660
You can also find
that form here.

00:02:07.660 --> 00:02:10.520
While your developer
token is pending approval,

00:02:10.520 --> 00:02:14.050
you can start using it to
develop your code with a test

00:02:14.050 --> 00:02:16.570
MCC account.

00:02:16.570 --> 00:02:20.250
API calls you make to the
test MCC account will not

00:02:20.250 --> 00:02:22.080
serve any ads.

00:02:22.080 --> 00:02:27.180
Use this link to create
your test MCC account.

00:02:27.180 --> 00:02:30.360
After you create it, use
the AdWords web interface

00:02:30.360 --> 00:02:35.470
to create a test client account,
under that test MCC account.

00:02:35.470 --> 00:02:39.310
And in that test client account,
create a few test campaigns

00:02:39.310 --> 00:02:43.750
and save the client account
customer ID for later.

00:02:43.750 --> 00:02:48.180
Now, let's turn our attention
to your development environment.

00:02:48.180 --> 00:02:50.530
If you're an experienced
Java developer,

00:02:50.530 --> 00:02:53.190
you probably already have
your environment just the way

00:02:53.190 --> 00:02:54.660
you want it.

00:02:54.660 --> 00:02:57.480
If not, we will walk
through the recommended set

00:02:57.480 --> 00:03:00.640
up for the Java
client libraries now.

00:03:00.640 --> 00:03:04.630
First, install
Eclipse from here.

00:03:04.630 --> 00:03:07.050
Eclipse for Java
EE is recommended,

00:03:07.050 --> 00:03:10.030
because it includes Maven.

00:03:10.030 --> 00:03:14.390
Then, download the Maven
AdWords client library for Java

00:03:14.390 --> 00:03:16.490
from here.

00:03:16.490 --> 00:03:20.620
The client library handles all
the back end API calls for you

00:03:20.620 --> 00:03:24.370
and exposes friendly
objects to work with.

00:03:24.370 --> 00:03:28.190
This particular archive
also includes code samples

00:03:28.190 --> 00:03:29.900
which are very helpful.

00:03:29.900 --> 00:03:33.880
Extract the files and open them
in Eclipse by choosing Import,

00:03:33.880 --> 00:03:36.790
Existing Maven Project.

00:03:36.790 --> 00:03:39.020
If you get Maven
compilation errors,

00:03:39.020 --> 00:03:41.680
you may have to install
additional M2E connectors

00:03:41.680 --> 00:03:43.730
for Eclipse.

00:03:43.730 --> 00:03:46.680
If you still have some
errors in the palm.XML,

00:03:46.680 --> 00:03:48.040
you can ignore them.

00:03:48.040 --> 00:03:50.920
The code samples should
still run properly.

00:03:50.920 --> 00:03:55.790
Now, let's move on
to setting up OAuth2.

00:03:55.790 --> 00:03:59.550
The average API using OAuth2
to allow your application

00:03:59.550 --> 00:04:02.500
to operate on behalf of
your AdWords account.

00:04:02.500 --> 00:04:05.170
To get set up,
follow these steps.

00:04:05.170 --> 00:04:07.380
Go to the Google
Developer Console

00:04:07.380 --> 00:04:11.350
and login with your
MCC credentials.

00:04:11.350 --> 00:04:16.680
Create a new project, go to
APIs &amp; Auth in the left menu

00:04:16.680 --> 00:04:19.680
and select Credentials.

00:04:19.680 --> 00:04:23.660
Follow the workflow to
create a new client ID

00:04:23.660 --> 00:04:26.920
and, when prompted, choose
Installed Application

00:04:26.920 --> 00:04:29.920
as the application
type and Other

00:04:29.920 --> 00:04:33.580
as the installed
application type.

00:04:33.580 --> 00:04:37.520
It will then display your
newly created client ID, client

00:04:37.520 --> 00:04:40.950
secret, and redirect URIs.

00:04:40.950 --> 00:04:43.400
Save these for later as well.

00:04:43.400 --> 00:04:45.560
Just a quick note
that client here

00:04:45.560 --> 00:04:50.990
means your application, not the
AdWords MCC or client account.

00:04:50.990 --> 00:04:54.350
Now, let's go back to Eclipse.

00:04:54.350 --> 00:04:57.220
In the client library
and samples project,

00:04:57.220 --> 00:05:01.610
open the Ads.Properties
file here.

00:05:01.610 --> 00:05:03.120
Now you'll need
all of these values

00:05:03.120 --> 00:05:05.790
that we've been
saving for later.

00:05:05.790 --> 00:05:09.870
First, enter your developer
token on this line.

00:05:09.870 --> 00:05:11.680
It's OK if it's
not approved yet,

00:05:11.680 --> 00:05:15.600
since we're using a test
account customer ID.

00:05:15.600 --> 00:05:21.380
Then, enter your test client
customer ID on this line.

00:05:21.380 --> 00:05:27.410
Enter your OAuth2 client ID and
client secret on these lines.

00:05:27.410 --> 00:05:30.660
Then enter the name of your
application or organization

00:05:30.660 --> 00:05:33.100
on this line.

00:05:33.100 --> 00:05:36.860
You can leave any other
values at their defaults.

00:05:36.860 --> 00:05:41.190
You'll notice that there is
a line for a refresh token.

00:05:41.190 --> 00:05:43.790
This token is used
by the client library

00:05:43.790 --> 00:05:47.430
to generate new OAuth
tokens, as needed.

00:05:47.430 --> 00:05:51.390
The client library has a utility
to retrieve that refresh token,

00:05:51.390 --> 00:05:53.410
which we can use now.

00:05:53.410 --> 00:05:57.340
In Eclipse, find
GetRefreshToken.Java

00:05:57.340 --> 00:05:59.670
and execute it.

00:05:59.670 --> 00:06:03.350
The Eclipse console
will print a URL.

00:06:03.350 --> 00:06:05.990
Open a browser and
log into AdWords

00:06:05.990 --> 00:06:09.040
with your test MCC account.

00:06:09.040 --> 00:06:12.900
Then, copy that URL
into the browser.

00:06:12.900 --> 00:06:17.330
Click Accept and copy the code
back into the Eclipse console

00:06:17.330 --> 00:06:19.410
where prompted.

00:06:19.410 --> 00:06:22.840
The console will then
print a refresh token.

00:06:22.840 --> 00:06:27.550
Copy that into the
Ads.Properties file.

00:06:27.550 --> 00:06:28.090
I know.

00:06:28.090 --> 00:06:29.390
It's a lot, right?

00:06:29.390 --> 00:06:34.240
But this file should now contain
all the necessary information

00:06:34.240 --> 00:06:38.990
to make API calls against your
test AdWords client account.

00:06:38.990 --> 00:06:43.440
So, in Eclipse, open
up GetCampaigns.Java

00:06:43.440 --> 00:06:45.570
and execute it.

00:06:45.570 --> 00:06:49.230
The console should print a
listing of the test campaigns

00:06:49.230 --> 00:06:51.870
in your test account.

00:06:51.870 --> 00:06:53.150
Congratulations.

00:06:53.150 --> 00:06:56.980
You just made an API call
with the client library.

00:06:56.980 --> 00:06:59.410
It was a long journey,
but now, you're

00:06:59.410 --> 00:07:02.880
ready to explore the
power of the AdWords API.

00:07:02.880 --> 00:07:05.670
Thanks for watching and
this will all be worth it,

00:07:05.670 --> 00:07:07.450
I promise.

00:07:07.450 --> 00:07:11.520
[MUSIC PLAYING]

