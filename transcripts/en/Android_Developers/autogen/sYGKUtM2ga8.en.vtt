WEBVTT
Kind: captions
Language: en

00:00:03.570 --> 00:00:05.960
 
[Music]

00:00:05.960 --> 00:00:05.970
[Music]
 

00:00:05.970 --> 00:00:08.810
[Music]
have you seen this sad blank square

00:00:08.810 --> 00:00:08.820
have you seen this sad blank square
 

00:00:08.820 --> 00:00:10.700
have you seen this sad blank square
character called tofu on a napkin

00:00:10.700 --> 00:00:10.710
character called tofu on a napkin
 

00:00:10.710 --> 00:00:13.370
character called tofu on a napkin
display an emoji new emojis are

00:00:13.370 --> 00:00:13.380
display an emoji new emojis are
 

00:00:13.380 --> 00:00:14.779
display an emoji new emojis are
constantly being added to the Unicode

00:00:14.779 --> 00:00:14.789
constantly being added to the Unicode
 

00:00:14.789 --> 00:00:17.240
constantly being added to the Unicode
standards but since they are bundled as

00:00:17.240 --> 00:00:17.250
standards but since they are bundled as
 

00:00:17.250 --> 00:00:19.850
standards but since they are bundled as
a font your phone's emojis are set in

00:00:19.850 --> 00:00:19.860
a font your phone's emojis are set in
 

00:00:19.860 --> 00:00:22.520
a font your phone's emojis are set in
stone with each OS release well they

00:00:22.520 --> 00:00:22.530
stone with each OS release well they
 

00:00:22.530 --> 00:00:25.280
stone with each OS release well they
work with the emoji compat library part

00:00:25.280 --> 00:00:25.290
work with the emoji compat library part
 

00:00:25.290 --> 00:00:27.320
work with the emoji compat library part
of jetpack your app can get backwards

00:00:27.320 --> 00:00:27.330
of jetpack your app can get backwards
 

00:00:27.330 --> 00:00:29.480
of jetpack your app can get backwards
compatible emoji support on devices with

00:00:29.480 --> 00:00:29.490
compatible emoji support on devices with
 

00:00:29.490 --> 00:00:32.299
compatible emoji support on devices with
API level 19 and higher and get rid of

00:00:32.299 --> 00:00:32.309
API level 19 and higher and get rid of
 

00:00:32.309 --> 00:00:35.299
API level 19 and higher and get rid of
tofu for a given charge sequence emoji

00:00:35.299 --> 00:00:35.309
tofu for a given charge sequence emoji
 

00:00:35.309 --> 00:00:37.790
tofu for a given charge sequence emoji
compat can identify the emojis replace

00:00:37.790 --> 00:00:37.800
compat can identify the emojis replace
 

00:00:37.800 --> 00:00:39.950
compat can identify the emojis replace
them with emoji spans and then render

00:00:39.950 --> 00:00:39.960
them with emoji spans and then render
 

00:00:39.960 --> 00:00:42.860
them with emoji spans and then render
the glyphs on versions prior to API

00:00:42.860 --> 00:00:42.870
the glyphs on versions prior to API
 

00:00:42.870 --> 00:00:45.319
the glyphs on versions prior to API
level 19 well you'll still get the tofu

00:00:45.319 --> 00:00:45.329
level 19 well you'll still get the tofu
 

00:00:45.329 --> 00:00:48.619
level 19 well you'll still get the tofu
characters emoji compact builds on the

00:00:48.619 --> 00:00:48.629
characters emoji compact builds on the
 

00:00:48.629 --> 00:00:50.479
characters emoji compact builds on the
downloadable phone mechanism to make

00:00:50.479 --> 00:00:50.489
downloadable phone mechanism to make
 

00:00:50.489 --> 00:00:51.860
downloadable phone mechanism to make
sure that you always have the latest

00:00:51.860 --> 00:00:51.870
sure that you always have the latest
 

00:00:51.870 --> 00:00:55.040
sure that you always have the latest
emoji available so if you want the emoji

00:00:55.040 --> 00:00:55.050
emoji available so if you want the emoji
 

00:00:55.050 --> 00:00:57.110
emoji available so if you want the emoji
phone to be downloaded when your app is

00:00:57.110 --> 00:00:57.120
phone to be downloaded when your app is
 

00:00:57.120 --> 00:00:58.759
phone to be downloaded when your app is
installed from Play Store add this

00:00:58.759 --> 00:00:58.769
installed from Play Store add this
 

00:00:58.769 --> 00:01:02.149
installed from Play Store add this
metadata in your manifest like this the

00:01:02.149 --> 00:01:02.159
metadata in your manifest like this the
 

00:01:02.159 --> 00:01:03.919
metadata in your manifest like this the
phone will be downloaded and ready to be

00:01:03.919 --> 00:01:03.929
phone will be downloaded and ready to be
 

00:01:03.929 --> 00:01:05.690
phone will be downloaded and ready to be
used when your app starts for the first

00:01:05.690 --> 00:01:05.700
used when your app starts for the first
 

00:01:05.700 --> 00:01:08.840
used when your app starts for the first
time before being used the emoticon pad

00:01:08.840 --> 00:01:08.850
time before being used the emoticon pad
 

00:01:08.850 --> 00:01:10.910
time before being used the emoticon pad
library needs a one time asynchronous

00:01:10.910 --> 00:01:10.920
library needs a one time asynchronous
 

00:01:10.920 --> 00:01:13.010
library needs a one time asynchronous
setup we recommend doing this in your

00:01:13.010 --> 00:01:13.020
setup we recommend doing this in your
 

00:01:13.020 --> 00:01:15.110
setup we recommend doing this in your
launch activity or in the first activity

00:01:15.110 --> 00:01:15.120
launch activity or in the first activity
 

00:01:15.120 --> 00:01:19.490
launch activity or in the first activity
that uses emojis like this when using

00:01:19.490 --> 00:01:19.500
that uses emojis like this when using
 

00:01:19.500 --> 00:01:21.020
that uses emojis like this when using
the downloadable font configuration

00:01:21.020 --> 00:01:21.030
the downloadable font configuration
 

00:01:21.030 --> 00:01:23.090
the downloadable font configuration
create your phone request and create a

00:01:23.090 --> 00:01:23.100
create your phone request and create a
 

00:01:23.100 --> 00:01:25.660
create your phone request and create a
font request emoji compact config object

00:01:25.660 --> 00:01:25.670
font request emoji compact config object
 

00:01:25.670 --> 00:01:28.280
font request emoji compact config object
if you can't use the inaudible fonts

00:01:28.280 --> 00:01:28.290
if you can't use the inaudible fonts
 

00:01:28.290 --> 00:01:30.500
if you can't use the inaudible fonts
then you can bundle the emoji font like

00:01:30.500 --> 00:01:30.510
then you can bundle the emoji font like
 

00:01:30.510 --> 00:01:33.260
then you can bundle the emoji font like
this note that the size of the font is

00:01:33.260 --> 00:01:33.270
this note that the size of the font is
 

00:01:33.270 --> 00:01:35.450
this note that the size of the font is
multiple megabytes increasing your apk

00:01:35.450 --> 00:01:35.460
multiple megabytes increasing your apk
 

00:01:35.460 --> 00:01:38.270
multiple megabytes increasing your apk
size considerably on top of this you

00:01:38.270 --> 00:01:38.280
size considerably on top of this you
 

00:01:38.280 --> 00:01:39.770
size considerably on top of this you
will have to ship updates of your app

00:01:39.770 --> 00:01:39.780
will have to ship updates of your app
 

00:01:39.780 --> 00:01:42.250
will have to ship updates of your app
whenever the emoji font is updated

00:01:42.250 --> 00:01:42.260
whenever the emoji font is updated
 

00:01:42.260 --> 00:01:44.300
whenever the emoji font is updated
independent of the way you're using it

00:01:44.300 --> 00:01:44.310
independent of the way you're using it
 

00:01:44.310 --> 00:01:47.060
independent of the way you're using it
the initialization takes at least 150

00:01:47.060 --> 00:01:47.070
the initialization takes at least 150
 

00:01:47.070 --> 00:01:49.610
the initialization takes at least 150
milliseconds even up to a few seconds so

00:01:49.610 --> 00:01:49.620
milliseconds even up to a few seconds so
 

00:01:49.620 --> 00:01:51.230
milliseconds even up to a few seconds so
you might want to get notified about it

00:01:51.230 --> 00:01:51.240
you might want to get notified about it
 

00:01:51.240 --> 00:01:54.320
you might want to get notified about it
State for this use the register init

00:01:54.320 --> 00:01:54.330
State for this use the register init
 

00:01:54.330 --> 00:01:56.420
State for this use the register init
callback method here's a pro tip for

00:01:56.420 --> 00:01:56.430
callback method here's a pro tip for
 

00:01:56.430 --> 00:01:58.460
callback method here's a pro tip for
debugging you can enable a span

00:01:58.460 --> 00:01:58.470
debugging you can enable a span
 

00:01:58.470 --> 00:02:02.540
debugging you can enable a span
indicator like this this way emojis by

00:02:02.540 --> 00:02:02.550
indicator like this this way emojis by
 

00:02:02.550 --> 00:02:04.130
indicator like this this way emojis by
using witches that extend from app

00:02:04.130 --> 00:02:04.140
using witches that extend from app
 

00:02:04.140 --> 00:02:07.820
using witches that extend from app
compat widgets you can pre-process a

00:02:07.820 --> 00:02:07.830
compat widgets you can pre-process a
 

00:02:07.830 --> 00:02:10.130
compat widgets you can pre-process a
char sequence using the process method

00:02:10.130 --> 00:02:10.140
char sequence using the process method
 

00:02:10.140 --> 00:02:12.530
char sequence using the process method
you can then reuse the result instead of

00:02:12.530 --> 00:02:12.540
you can then reuse the result instead of
 

00:02:12.540 --> 00:02:14.750
you can then reuse the result instead of
the initial raw string in any widget

00:02:14.750 --> 00:02:14.760
the initial raw string in any widget
 

00:02:14.760 --> 00:02:16.280
the initial raw string in any widget
that can render spent

00:02:16.280 --> 00:02:16.290
that can render spent
 

00:02:16.290 --> 00:02:18.199
that can render spent
instances and needs to display the same

00:02:18.199 --> 00:02:18.209
instances and needs to display the same
 

00:02:18.209 --> 00:02:20.630
instances and needs to display the same
strap so for example if you're doing

00:02:20.630 --> 00:02:20.640
strap so for example if you're doing
 

00:02:20.640 --> 00:02:22.819
strap so for example if you're doing
your own custom drawing you can use this

00:02:22.819 --> 00:02:22.829
your own custom drawing you can use this
 

00:02:22.829 --> 00:02:25.880
your own custom drawing you can use this
to display emoji text if you want to add

00:02:25.880 --> 00:02:25.890
to display emoji text if you want to add
 

00:02:25.890 --> 00:02:28.039
to display emoji text if you want to add
emoji supports to a text you subclass

00:02:28.039 --> 00:02:28.049
emoji supports to a text you subclass
 

00:02:28.049 --> 00:02:30.470
emoji supports to a text you subclass
beyond the provided ones so for example

00:02:30.470 --> 00:02:30.480
beyond the provided ones so for example
 

00:02:30.480 --> 00:02:32.750
beyond the provided ones so for example
to an app compat checkbox you can use

00:02:32.750 --> 00:02:32.760
to an app compat checkbox you can use
 

00:02:32.760 --> 00:02:36.860
to an app compat checkbox you can use
the emoji textview helper class so now

00:02:36.860 --> 00:02:36.870
the emoji textview helper class so now
 

00:02:36.870 --> 00:02:38.780
the emoji textview helper class so now
with the new emoji combat library I can

00:02:38.780 --> 00:02:38.790
with the new emoji combat library I can
 

00:02:38.790 --> 00:02:41.149
with the new emoji combat library I can
see that my friend isn't asking me if I

00:02:41.149 --> 00:02:41.159
see that my friend isn't asking me if I
 

00:02:41.159 --> 00:02:43.550
see that my friend isn't asking me if I
want offal for brunch but avocados and

00:02:43.550 --> 00:02:43.560
want offal for brunch but avocados and
 

00:02:43.560 --> 00:02:45.890
want offal for brunch but avocados and
the answer for this is of course yes

00:02:45.890 --> 00:02:45.900
the answer for this is of course yes
 

00:02:45.900 --> 00:02:49.020
the answer for this is of course yes
[Applause]

