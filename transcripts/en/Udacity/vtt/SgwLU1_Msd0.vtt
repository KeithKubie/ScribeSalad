WEBVTT
Kind: captions
Language: en

00:00:00.749 --> 00:00:04.429
One thing I've noticed about this code is, it's a bit spaghettified.

00:00:04.429 --> 00:00:05.107
&gt;&gt; What?

00:00:05.107 --> 00:00:07.355
You mean like it's falling into a black hole?

00:00:07.355 --> 00:00:08.724
&gt;&gt; What?

00:00:08.724 --> 00:00:10.004
&gt;&gt; Never mind.

00:00:10.004 --> 00:00:11.483
It's an astronomy thing.

00:00:11.483 --> 00:00:15.740
&gt;&gt; It's spaghettified as in it's a mess of if statements and loops.

00:00:15.740 --> 00:00:20.160
Let's break this down into some more manageable chunks by using some functions.

00:00:21.990 --> 00:00:23.910
&gt;&gt; Functions are awesome.

00:00:23.910 --> 00:00:26.920
Hey, have you read the book East of Eden by John Steinbeck?

00:00:26.920 --> 00:00:29.070
&gt;&gt; This isn't a literature class.

00:00:29.070 --> 00:00:31.160
&gt;&gt; I know, but stick with me.

00:00:31.160 --> 00:00:31.790
This is relevant.

00:00:31.790 --> 00:00:36.230
I was reading it the other day, and there was a passage that struck me.

00:00:36.230 --> 00:00:38.630
The story takes place around the turn of the century, and

00:00:38.630 --> 00:00:41.640
one of the characters named Adam gets a car.

00:00:41.640 --> 00:00:44.130
This was a big deal because cars were really new.

00:00:44.130 --> 00:00:47.030
Back then, you couldn't just stick a key in the ignition and get rolling.

00:00:47.030 --> 00:00:50.300
There was a long intricate process of priming the ignition,

00:00:50.300 --> 00:00:51.990
getting oxygen into the engine, et cetera.

00:00:51.990 --> 00:00:54.970
The boys in the story had a mantra that they kept repeating to

00:00:54.970 --> 00:00:57.230
help themselves remember the process.

00:00:57.230 --> 00:00:59.340
&gt;&gt; But all of this is automated now, right?

00:00:59.340 --> 00:01:00.940
Turn the key, start the car.

00:01:00.940 --> 00:01:01.720
&gt;&gt; Right.

00:01:01.720 --> 00:01:05.080
You know, in the book, the characters had to pass instructions about the way

00:01:05.080 --> 00:01:07.410
engines work in order to start the car.

00:01:07.410 --> 00:01:11.550
Today, all of those instructions are bundled in the act of turning the key.

00:01:11.550 --> 00:01:13.040
Functions do basically the same thing.

00:01:13.040 --> 00:01:15.080
They bundle instructions together.

00:01:15.080 --> 00:01:17.440
&gt;&gt; So if I had a start car function,

00:01:17.440 --> 00:01:20.350
it would abstract away all of the intricacies of starting a car.

00:01:20.350 --> 00:01:21.550
&gt;&gt; Yeah, exactly.

00:01:21.550 --> 00:01:24.300
&gt;&gt; Okay, that was a decent example.

00:01:24.300 --> 00:01:28.850
Functions in JavaScript can be defined with two different syntaxes.

00:01:28.850 --> 00:01:32.330
The first should look pretty familiar if you've been paying attention.

00:01:32.330 --> 00:01:35.930
We start with var followed by the function name,

00:01:35.930 --> 00:01:40.880
in this case myFunc equals, and then the word keyword function,

00:01:40.880 --> 00:01:44.970
an optional parameter list, and then the body of the function.

00:01:44.970 --> 00:01:48.730
This keyword function tells the JavaScript engine that we're making a function.

00:01:48.730 --> 00:01:50.250
&gt;&gt; And this is the second syntax.

00:01:50.250 --> 00:01:53.350
In this case, we don't actually have to start with var.

00:01:53.350 --> 00:01:56.760
We just start with this keyword function and then we give our function a name,

00:01:56.760 --> 00:01:58.648
which, in this case, is still myFunc.

00:01:58.648 --> 00:02:02.910
Then after myFunc, we have optional parameters inside parentheses and

00:02:02.910 --> 00:02:06.000
then the body of the code goes between the two curly braces,

00:02:06.000 --> 00:02:08.758
just the same way we do with if statements and loops.

00:02:08.758 --> 00:02:12.060
These two syntaxes are pretty much equivalent.

00:02:12.060 --> 00:02:15.460
There are subtle differences in the way the JavaScript engine interprets these

00:02:15.460 --> 00:02:16.800
two different functions.

00:02:16.800 --> 00:02:18.860
However, they go beyond the scope of this course.

00:02:18.860 --> 00:02:21.700
So check the instructor's notes if you're interested in learning more.

00:02:21.700 --> 00:02:24.610
&gt;&gt; Seems to me we should bundle the code we just used to

00:02:24.610 --> 00:02:28.240
populate the work experience inside the display work function.

00:02:28.240 --> 00:02:30.130
&gt;&gt; Yeah. Let's do that and see what happens.

00:02:30.130 --> 00:02:31.440
Here's a quiz for you.

00:02:31.440 --> 00:02:34.950
We want you to move all the code you just wrote to display the work

00:02:34.950 --> 00:02:37.360
into a function called display work.

00:02:37.360 --> 00:02:40.580
Make sure you put all of your code between the curly braces, but

00:02:40.580 --> 00:02:44.290
don't do anything else after you've moved your code into display work.

00:02:44.290 --> 00:02:46.230
What happens when you refresh the page?

00:02:46.230 --> 00:02:47.890
Pick one of these two answers.

00:02:47.890 --> 00:02:51.380
Do you see the same thing or does nothing appear at all in the work section?

