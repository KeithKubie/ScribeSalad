WEBVTT
Kind: captions
Language: en

00:00:00.605 --> 00:00:02.980
ROMAN NURIK: There are a lot
of ways to design something.

00:00:02.980 --> 00:00:06.236
That blank canvas you get at
the start of many projects,

00:00:06.236 --> 00:00:08.610
I think it's something that
designers and developers love

00:00:08.610 --> 00:00:09.790
about what they do.

00:00:09.790 --> 00:00:13.890
And for every 100 complicated
solutions to a design problem,

00:00:13.890 --> 00:00:16.020
there's only a
handful of simple ones

00:00:16.020 --> 00:00:18.550
that I think will work
and be successful.

00:00:18.550 --> 00:00:22.380
I think it's why simplicity
in design is so revered.

00:00:22.380 --> 00:00:24.690
I'm Roman, a designer in
the Firebase team at Google,

00:00:24.690 --> 00:00:26.430
New York.

00:00:26.430 --> 00:00:29.320
And I love this little
app called Circuit.

00:00:29.320 --> 00:00:32.159
And I want to talk about some
of the design details that

00:00:32.159 --> 00:00:34.530
make it so beautifully simple.

00:00:34.530 --> 00:00:37.740
So Circuit is an app that solves
the traveling salesman problem.

00:00:37.740 --> 00:00:39.480
You give it a couple
of destinations

00:00:39.480 --> 00:00:42.790
and it figures out the optimal
order to visit those places.

00:00:42.790 --> 00:00:44.430
I'll add a couple
of my favorite spots

00:00:44.430 --> 00:00:46.226
here in New York
as a quick example.

00:00:46.226 --> 00:00:48.100
Once I'm done, I can
hit this nice big button

00:00:48.100 --> 00:00:50.850
to calculate the
route, and proceed

00:00:50.850 --> 00:00:53.540
to navigate on Google Maps.

00:00:53.540 --> 00:00:54.930
And that's it, simple.

00:00:54.930 --> 00:00:56.494
I did all that in
under a minute.

00:00:56.494 --> 00:00:58.410
So let's talk about some
of the design choices

00:00:58.410 --> 00:00:59.970
here that I think
are really great.

00:00:59.970 --> 00:01:01.005
First is contrast.

00:01:01.005 --> 00:01:04.014
At any given point, these
big splashes of blue

00:01:04.014 --> 00:01:06.700
clearly draw my attention
to what I should do next.

00:01:06.700 --> 00:01:09.165
Now the app also uses verbs
like improve, navigator,

00:01:09.165 --> 00:01:11.020
and calculate.

00:01:11.020 --> 00:01:12.690
And this creates affordances.

00:01:12.690 --> 00:01:15.090
You don't always need
special visual treatments

00:01:15.090 --> 00:01:16.800
to make something
look clickable.

00:01:16.800 --> 00:01:19.110
Now while we're on the
subject of UI text,

00:01:19.110 --> 00:01:22.870
one minor suggestion is
instead of using title case,

00:01:22.870 --> 00:01:26.460
to use sentence case in labels
like Remaining route or Total

00:01:26.460 --> 00:01:27.775
estimated savings here.

00:01:27.775 --> 00:01:30.570
This will make the app feel
a little bit friendlier.

00:01:30.570 --> 00:01:33.030
Speaking of which, this
expand and collapse transition

00:01:33.030 --> 00:01:36.160
here is dead simple, but
done incredibly well.

00:01:36.160 --> 00:01:38.730
So as the one-line
summary moves up and down,

00:01:38.730 --> 00:01:41.610
the other elements, they
slide and they fade with it.

00:01:41.610 --> 00:01:45.000
And this creates this
consistent spatial relationship

00:01:45.000 --> 00:01:47.190
between expanded and
collapsed states.

00:01:47.190 --> 00:01:49.990
It almost establishes
this one-line summary

00:01:49.990 --> 00:01:53.550
as a synecdoche, a symbol
for the expanded state.

00:01:53.550 --> 00:01:56.280
I think it's something
that's very powerful

00:01:56.280 --> 00:01:58.640
for these progressive
disclosure UIs,

00:01:58.640 --> 00:02:01.346
and can make them
much more successful.

00:02:01.346 --> 00:02:03.760
So notice how in
the map in the list,

00:02:03.760 --> 00:02:06.360
there's a bunch of shared
visual elements-- the step

00:02:06.360 --> 00:02:10.949
circles, the flag, and then
the path to the next step

00:02:10.949 --> 00:02:13.360
is a darker blue, compared
to all the other paths

00:02:13.360 --> 00:02:14.850
that are a lighter blue.

00:02:14.850 --> 00:02:18.000
Using a coherent visual
language like this,

00:02:18.000 --> 00:02:20.310
is a great way to
connect related elements

00:02:20.310 --> 00:02:22.470
throughout your
app, without needing

00:02:22.470 --> 00:02:25.650
to use a legend or
any other visual aids.

00:02:25.650 --> 00:02:28.590
It's a great way to encourage
your users to really

00:02:28.590 --> 00:02:31.080
quickly build a mental model
for how your app works.

00:02:31.080 --> 00:02:34.230
One idea here is to go a step
further and differentiate

00:02:34.230 --> 00:02:36.780
previous paths
from upcoming ones.

00:02:36.780 --> 00:02:39.660
In general, I think it's always
a great idea to consider users

00:02:39.660 --> 00:02:41.530
past, present, and future.

00:02:41.530 --> 00:02:43.530
Finally, let's talk about
something at play here

00:02:43.530 --> 00:02:44.820
that's invisible.

00:02:44.820 --> 00:02:48.340
If I click on Edit, you'll
see that this app is following

00:02:48.340 --> 00:02:51.300
the 8dp grid and keylines
from Material Design

00:02:51.300 --> 00:02:53.136
to create harmony across the UI.

00:02:53.136 --> 00:02:54.760
If I turn on a couple
of nice overlays,

00:02:54.760 --> 00:02:56.280
you'll see what
I'm talking about.

00:02:56.280 --> 00:02:57.960
First, I'll use the
grid and keylines

00:02:57.960 --> 00:03:00.370
overlay from this app
called Designer Tools.

00:03:00.370 --> 00:03:02.810
And then I'll turn on Show
Layout Bounds from Android's

00:03:02.810 --> 00:03:04.320
Developer Options.

00:03:04.320 --> 00:03:06.740
Aligning elements through
these natural visual guides

00:03:06.740 --> 00:03:09.810
is a great way to create
order and balance in your UI.

00:03:09.810 --> 00:03:12.650
The human brain is really
good at pattern recognition,

00:03:12.650 --> 00:03:15.780
and it's even better at spotting
things that break that pattern.

00:03:15.780 --> 00:03:17.730
So remember to be
deliberate whenever things

00:03:17.730 --> 00:03:19.220
aren't aligned in your app.

00:03:19.220 --> 00:03:22.240
So those are some of my favorite
visual tidbits in Circuit.

00:03:22.240 --> 00:03:25.950
It uses contrast to clearly
tell me what I should do next.

00:03:25.950 --> 00:03:28.050
It employs a clear
visual language

00:03:28.050 --> 00:03:29.835
to create cohesion
throughout the app.

00:03:29.835 --> 00:03:32.940
It uses motion to subtly express
the relationship between what's

00:03:32.940 --> 00:03:34.460
visible and what's hidden.

00:03:34.460 --> 00:03:37.230
And it creates harmony in the
UI by using Material Design's

00:03:37.230 --> 00:03:39.630
8dp grid and keylines.

00:03:39.630 --> 00:03:41.490
These little details,
and many more,

00:03:41.490 --> 00:03:44.375
make this app feel very
simple and easy to use.

00:03:44.375 --> 00:03:45.750
And that's something
that I think

00:03:45.750 --> 00:03:48.899
that all designers and
developers should aspire to.

00:03:48.899 --> 00:03:50.940
If you have an app you
want us to take a look at,

00:03:50.940 --> 00:03:51.960
click here to submit it.

00:03:51.960 --> 00:03:53.670
And make sure to
subscribe to our channel

00:03:53.670 --> 00:03:55.110
for more awesome design videos.

00:03:55.110 --> 00:03:58.160
[MUSIC PLAYING]

