WEBVTT
Kind: captions
Language: en

00:00:00.266 --> 00:00:01.833
- [Voiceover] In the first
video on Euler's Method

00:00:01.833 --> 00:00:03.603
we walked through an example

00:00:03.603 --> 00:00:07.200
where we were trying to approximate

00:00:07.200 --> 00:00:10.061
the solution to y prime is equal to y

00:00:10.061 --> 00:00:11.633
using the initial condition,

00:00:11.633 --> 00:00:14.400
start when x is equal
to zero y equals one.

00:00:14.400 --> 00:00:15.789
And you're probably thinking to yourself,

00:00:15.789 --> 00:00:18.133
well, it's very nice that
Sal was doing that by hand

00:00:18.133 --> 00:00:21.501
and it felt very home-brewed.

00:00:21.501 --> 00:00:22.633
But this looks like something

00:00:22.633 --> 00:00:24.766
that would be a good job for computers.

00:00:24.766 --> 00:00:26.833
And if you were thinking
that, you are right

00:00:26.833 --> 00:00:29.992
and that is why I took
a little time last night

00:00:29.992 --> 00:00:32.700
to actually write a computer program

00:00:32.700 --> 00:00:35.700
that implements Euler's Method.

00:00:35.700 --> 00:00:37.833
And so, what I want to
do in this video is one,

00:00:37.833 --> 00:00:39.809
show you how to use this program I had

00:00:39.809 --> 00:00:42.300
and it's sitting and I'll put
an annotation on this video

00:00:42.300 --> 00:00:43.766
so that you can click right to it,

00:00:43.766 --> 00:00:46.000
but it's sitting on the
tutorial on Khan Academy

00:00:46.000 --> 00:00:49.233
that is about Euler's Method.

00:00:49.233 --> 00:00:52.700
And so, let's first talk
about how to use this thing.

00:00:52.700 --> 00:00:54.900
So this first thing, this
first variable right over here

00:00:54.900 --> 00:00:57.609
xStep, this is how much we want to step.

00:00:57.609 --> 00:01:00.933
This is how much we want
to increase x by for each

00:01:00.933 --> 00:01:03.300
when we want to find each next point

00:01:03.300 --> 00:01:04.597
in our approximation.

00:01:04.597 --> 00:01:07.901
So in our right here xStep is one,

00:01:07.901 --> 00:01:09.300
we could make this point five,

00:01:09.300 --> 00:01:10.403
we could make this two,

00:01:10.403 --> 00:01:12.100
we could make this .001.

00:01:12.100 --> 00:01:13.869
As we see in the first video,

00:01:13.869 --> 00:01:15.500
the lower the number here

00:01:15.500 --> 00:01:19.366
the more precise of an
approximation we're going to get.

00:01:19.366 --> 00:01:20.400
On these next two variables

00:01:20.400 --> 00:01:21.733
are things that you might want to tweak.

00:01:21.733 --> 00:01:22.900
These are the initial conditions.

00:01:22.900 --> 00:01:24.166
This is the starting x.

00:01:24.166 --> 00:01:25.333
And when we're at the starting x

00:01:25.333 --> 00:01:27.220
we're assuming that
the particular solution

00:01:27.220 --> 00:01:29.700
will contain that starting y.

00:01:29.700 --> 00:01:30.966
So, the way it's set right now

00:01:30.966 --> 00:01:35.194
it says hey, the .01 is in
the particular solution.

00:01:35.194 --> 00:01:37.434
And if you go a little bit lower

00:01:37.434 --> 00:01:39.366
this is the function slope at point.

00:01:39.366 --> 00:01:42.200
I guess I could have called
it derivative at point as well

00:01:42.200 --> 00:01:45.200
or tangent slope at point.

00:01:45.200 --> 00:01:48.233
Those would involve legitimate
name for this function.

00:01:48.233 --> 00:01:50.867
This is really where I define

00:01:50.867 --> 00:01:52.866
what the differential equation is.

00:01:52.866 --> 00:01:53.833
And so you see it says like,

00:01:53.833 --> 00:01:56.433
it just says return y right over here.

00:01:56.433 --> 00:01:58.733
What it's saying is what
it's going to return

00:01:58.733 --> 00:02:01.146
is the slope at that point

00:02:01.146 --> 00:02:03.533
and you pass it at x and y

00:02:03.533 --> 00:02:05.366
and then it will give you
the slope of the point.

00:02:05.366 --> 00:02:08.034
So this is saying that the slope
of that point is equal to y

00:02:08.034 --> 00:02:10.200
or another way interpreting it is

00:02:10.200 --> 00:02:12.766
is that y prime is equal to y.

00:02:12.766 --> 00:02:15.400
And so, this is the way it's defined now.

00:02:15.400 --> 00:02:18.000
The differential equation
that we looked at

00:02:18.000 --> 00:02:19.733
in the first introductory video

00:02:19.733 --> 00:02:22.666
that at any point the derivative
is going to be equal to y.

00:02:22.666 --> 00:02:24.633
And since we stepped by one we see that.

00:02:24.633 --> 00:02:27.566
Where the .01, our
slope is going to be one

00:02:27.566 --> 00:02:30.199
until our next step, until
we increase our x by one

00:02:30.199 --> 00:02:31.379
we get to this point.

00:02:31.379 --> 00:02:32.633
Now our slope is two.

00:02:32.633 --> 00:02:35.733
We increase x by one and
then our y goes up by two.

00:02:35.733 --> 00:02:37.933
Now our slope is four.

00:02:37.933 --> 00:02:42.133
We increase x by one,
we increase y by four.

00:02:42.133 --> 00:02:44.166
Now we could do a different function here.

00:02:44.166 --> 00:02:48.066
You could say that dy,
dx is equal to negative x

00:02:48.066 --> 00:02:50.366
divided by Y.

00:02:50.366 --> 00:02:53.366
And we would get something like this.

00:02:54.073 --> 00:02:56.866
If our xStep is just one,

00:02:56.866 --> 00:02:58.033
if we have this initial condition

00:02:58.033 --> 00:03:01.366
our initial condition could
be something like that

00:03:01.366 --> 00:03:03.133
and you say even with an xStep of one

00:03:03.133 --> 00:03:04.633
something as course as that

00:03:04.633 --> 00:03:07.633
we're getting a pretty good
approximation right over here

00:03:07.633 --> 00:03:09.500
and if we want to get
a better approximation

00:03:09.500 --> 00:03:10.466
we can make this smaller.

00:03:10.466 --> 00:03:13.333
0.5 is even better.

00:03:13.333 --> 00:03:16.066
If we wanted to get even better, 0.1.

00:03:16.066 --> 00:03:17.650
And you might have noticed something

00:03:17.650 --> 00:03:18.730
that just happened here.

00:03:18.730 --> 00:03:21.366
This thing got wacky as we got,

00:03:21.366 --> 00:03:23.833
as we started dividing by,

00:03:23.833 --> 00:03:28.833
as we started getting
close to dividing by zero.

00:03:29.000 --> 00:03:29.992
And this is a reminder

00:03:29.992 --> 00:03:31.928
that this is really just
an approximation tool.

00:03:31.928 --> 00:03:35.633
We're not analytically
finding the actual solution.

00:03:35.633 --> 00:03:37.525
We're just stepping from, you know,

00:03:37.525 --> 00:03:40.366
x equals zero to x equals point
one to x equals point two,

00:03:40.366 --> 00:03:42.842
and we're using the slopes
at each of those points

00:03:42.842 --> 00:03:44.766
and were you able to figure out the slope

00:03:44.766 --> 00:03:46.166
based on this function

00:03:46.166 --> 00:03:50.767
to figure out what their
next x and y should be.

00:03:50.767 --> 00:03:52.566
So I encourage you to play with this.

00:03:52.566 --> 00:03:53.500
It's actually a lot of fun.

00:03:53.500 --> 00:03:57.333
You can see how you get a
much better approximation

00:03:57.333 --> 00:04:01.266
as you, let me go back to
what we originally had.

00:04:01.266 --> 00:04:03.333
You can see how you get a
much better approximation

00:04:03.333 --> 00:04:07.992
as you get your xSteps
being close and closer

00:04:07.992 --> 00:04:09.666
and closer to zero.

00:04:09.666 --> 00:04:12.325
So, this is you'll notice
now when you just...

00:04:12.325 --> 00:04:16.233
We have an xStep of 0.1 at x equals one.

00:04:16.233 --> 00:04:18.066
This is getting pretty close to E.

00:04:18.066 --> 00:04:20.900
It's probably doing a pretty good job

00:04:20.900 --> 00:04:25.900
of simulating the exponential function y

00:04:26.463 --> 00:04:28.866
is equal E, y equals E to the x.

00:04:28.866 --> 00:04:30.870
So the main things to know
about, this is your xStep,

00:04:30.870 --> 00:04:33.333
these right over here are
your initial conditions,

00:04:33.333 --> 00:04:34.233
your x and y.

00:04:34.233 --> 00:04:36.266
And whatever you put in here,

00:04:36.266 --> 00:04:39.900
you're gonna say that
dy, dx is equal to that.

00:04:39.900 --> 00:04:42.366
Notice I say assumes that
your differential equation

00:04:42.366 --> 00:04:43.900
can be expressed as y prime

00:04:43.900 --> 00:04:46.625
is equal to a function of x and y

00:04:46.625 --> 00:04:48.433
which is also a function of x.

00:04:48.433 --> 00:04:50.433
And so, whatever you put here,

00:04:50.433 --> 00:04:53.392
that's essentially your
function of x and y of x.

00:04:53.392 --> 00:04:55.866
So if you just have y prime
is equal to negative x or y

00:04:55.866 --> 00:04:59.215
you put negative x divided by y,

00:04:59.215 --> 00:05:02.700
negative x divided by y over here.

00:05:02.700 --> 00:05:03.933
All of these is actually no way.

00:05:03.933 --> 00:05:06.291
I'd have to raise the
initial condition here

00:05:06.814 --> 00:05:08.600
to do something like that.

00:05:08.600 --> 00:05:11.566
And if you want to now know
how this program works,

00:05:11.566 --> 00:05:12.642
if you want to modify this

00:05:12.642 --> 00:05:14.866
and I encourage you to
modify it, make it better

00:05:14.866 --> 00:05:17.366
because this I just kind of
hacked this together last night.

00:05:17.366 --> 00:05:20.266
I'll now explain what the
rest of the program is doing.

00:05:20.266 --> 00:05:22.004
So these are all the variables

00:05:22.004 --> 00:05:25.313
for kind of establishing
for drawing the graph paper.

00:05:25.313 --> 00:05:27.233
This is our minimum x, minimum y,

00:05:27.233 --> 00:05:28.866
maximum x and maximum y.

00:05:28.866 --> 00:05:30.633
They kind of fall off
the page right over here.

00:05:30.633 --> 00:05:32.333
You have your x and y offset.

00:05:32.333 --> 00:05:34.558
If you change it you'll notice,

00:05:34.558 --> 00:05:36.900
if you change your xOffset it shows

00:05:36.900 --> 00:05:38.866
how much we move to the right or the left.

00:05:38.866 --> 00:05:43.367
The yOffset it moves
everything up or down.

00:05:43.367 --> 00:05:45.933
The background, that's
just the background color

00:05:45.933 --> 00:05:47.033
that we are...

00:05:47.033 --> 00:05:49.486
The background color for our canvas.

00:05:49.486 --> 00:05:51.466
Then the xScale is
really just trying to say

00:05:51.466 --> 00:05:55.033
well, how many of the pixels

00:05:55.033 --> 00:05:58.633
result to kind of one
incremental step in x

00:05:58.633 --> 00:06:00.809
or one incremental step in y.

00:06:00.809 --> 00:06:01.962
I'm sure I probably
could have tweaked this

00:06:01.962 --> 00:06:04.166
a little bit better to factor the offset

00:06:04.166 --> 00:06:05.466
and that's probably one of the reasons why

00:06:05.466 --> 00:06:07.000
I'm falling off the screen.

00:06:07.000 --> 00:06:09.467
But anyway, you can modify it if you like.

00:06:09.467 --> 00:06:11.076
These next two functions are really

00:06:11.076 --> 00:06:15.300
to just map between x and
y coordinates and pixels.

00:06:15.300 --> 00:06:16.866
So that's that.

00:06:16.866 --> 00:06:20.633
Then this is the color of the actual grid.

00:06:20.633 --> 00:06:22.433
You can see I could change that.

00:06:22.433 --> 00:06:24.100
I could change the color of the grid

00:06:24.100 --> 00:06:24.900
to whatever I like.

00:06:24.900 --> 00:06:26.891
I like something with a
reasonable level of contrast

00:06:26.891 --> 00:06:28.200
so I'll leave it there.

00:06:28.200 --> 00:06:29.233
And then these two things,

00:06:29.233 --> 00:06:30.669
this draws the vertical lines

00:06:30.669 --> 00:06:32.748
and then labels the numbers down here.

00:06:32.748 --> 00:06:35.643
You see this draws the vertical lines.

00:06:35.643 --> 00:06:37.700
This does the labels down here.

00:06:37.700 --> 00:06:41.333
Notice it starts at x
min, it goes up to x max.

00:06:41.333 --> 00:06:45.333
This does the same thing
for the horizontal lines

00:06:45.333 --> 00:06:48.238
so this right over here is going to go.

00:06:48.238 --> 00:06:52.076
So, it starts at the y
min, goes up to the y max,

00:06:52.076 --> 00:06:55.933
draws a bunch of lines and
also labels the y axis.

00:06:55.933 --> 00:06:57.700
So that's really just kind of the setup

00:06:57.700 --> 00:06:59.933
and then this is the actual
function that we call

00:06:59.933 --> 00:07:04.600
in order to draw our approximation.

00:07:04.600 --> 00:07:07.933
And it makes use of slope at point.

00:07:07.933 --> 00:07:09.800
So, for any point you're starting,

00:07:09.800 --> 00:07:13.533
you start your x in initX, initial x.

00:07:13.533 --> 00:07:15.173
You start your y in initial y.

00:07:15.173 --> 00:07:15.900
And then you say look,

00:07:15.900 --> 00:07:19.000
while x hasn't gotten to our maximum x yet

00:07:19.000 --> 00:07:24.000
figure out or draw a point at that point,

00:07:25.700 --> 00:07:27.446
and actually we might not even need that.

00:07:27.446 --> 00:07:29.033
I can comment that out.

00:07:29.033 --> 00:07:31.346
It doesn't change it really.

00:07:31.346 --> 00:07:32.948
That's actually my first iteration,

00:07:32.948 --> 00:07:34.335
actually let me take that out.

00:07:34.335 --> 00:07:37.901
Let me take that one out

00:07:37.901 --> 00:07:39.633
or I'll leave it here for now.

00:07:39.633 --> 00:07:42.066
You could modify it as you see fit.

00:07:42.066 --> 00:07:44.258
And then it figures out the slope.

00:07:44.258 --> 00:07:46.666
It figures out the slope at that,

00:07:46.666 --> 00:07:48.566
in that current x and y.

00:07:48.566 --> 00:07:49.658
So it uses that function.

00:07:49.658 --> 00:07:51.900
So it saying okay, let
me input that x and y

00:07:51.900 --> 00:07:53.099
and then it figures out

00:07:53.099 --> 00:07:55.766
what the derivative is at that point.

00:07:55.766 --> 00:07:57.702
And so that it uses that slope

00:07:57.702 --> 00:07:59.761
to figure out what the
next x and the next y are.

00:07:59.761 --> 00:08:02.233
The next x is gonna be x incremented

00:08:02.233 --> 00:08:04.700
by the delta that you passed to it.

00:08:04.700 --> 00:08:07.633
The next y is gonna be the current y

00:08:07.633 --> 00:08:09.467
plus the slope times the delta

00:08:09.467 --> 00:08:10.900
and then it just draws a line

00:08:10.900 --> 00:08:13.300
from the current x to the next,

00:08:13.300 --> 00:08:15.766
or the current point, the x, y point

00:08:15.766 --> 00:08:17.366
to the next x, y point.

00:08:17.366 --> 00:08:19.200
And then it makes the next x one.

00:08:19.200 --> 00:08:21.000
It makes the next x and the next y

00:08:21.000 --> 00:08:23.533
the current x and the current y,

00:08:23.533 --> 00:08:26.467
and then it just keeps on
going and going and going.

00:08:26.467 --> 00:08:29.566
And then finally, this is
actually where we call,

00:08:29.566 --> 00:08:31.433
where we call that function.

00:08:31.433 --> 00:08:33.233
And I used the variable xStep

00:08:33.233 --> 00:08:36.600
that we defined earlier
on at you know, point one,

00:08:36.600 --> 00:08:39.033
but if I change this to just...

00:08:39.033 --> 00:08:40.833
If I just change this to one

00:08:40.833 --> 00:08:42.733
you see that actually makes the change

00:08:42.733 --> 00:08:44.566
and I could actually draw
multiple approximations

00:08:44.566 --> 00:08:46.066
on the same screen.

00:08:46.066 --> 00:08:49.059
That actually might help us appreciate.

00:08:49.059 --> 00:08:51.500
That actually might help us appreciate

00:08:51.500 --> 00:08:53.336
how our approximation gets better

00:08:53.336 --> 00:08:55.900
as we get a little bit more granularity.

00:08:55.900 --> 00:09:00.866
So let's say let's draw an approximation.

00:09:01.619 --> 00:09:03.733
Approximation.

00:09:03.733 --> 00:09:05.566
And instead of having an xStep

00:09:05.566 --> 00:09:07.400
or a delta x of one every time,

00:09:07.400 --> 00:09:11.386
let's have a delta x of 0.5.

00:09:12.217 --> 00:09:13.376
And so you see it there.

00:09:13.376 --> 00:09:15.000
The delta x of 0.5

00:09:15.000 --> 00:09:18.233
it gave me a more accurate representation.

00:09:18.233 --> 00:09:20.166
Let me do one more.

00:09:20.166 --> 00:09:22.576
Just show how all these works.

00:09:23.100 --> 00:09:24.500
Stroke.

00:09:24.500 --> 00:09:26.448
Let me change the color.

00:09:26.909 --> 00:09:29.576
So for the next line of
color let me make it,

00:09:29.576 --> 00:09:31.666
I don't know, I'll make it this kind of

00:09:31.666 --> 00:09:33.534
this green blue color.

00:09:33.534 --> 00:09:35.134
Let me draw.

00:09:35.134 --> 00:09:36.766
Whoops, let's draw.

00:09:36.766 --> 00:09:40.736
Draw Approximation.

00:09:40.736 --> 00:09:43.161
I'll just have to capitalize the A.

00:09:43.900 --> 00:09:46.766
Draw Approximation

00:09:46.766 --> 00:09:49.489
and I'll make this one even more fine.

00:09:49.489 --> 00:09:50.567
So there you go.

00:09:50.567 --> 00:09:52.202
That was even a better approximation.

00:09:52.202 --> 00:09:55.315
So the blue one is the most accurate one

00:09:55.315 --> 00:09:56.433
and you can do this with a bunch of ones.

00:09:56.433 --> 00:10:00.033
We could do it with what we
saw in the very first video

00:10:00.033 --> 00:10:02.800
where we're approximating
y is equal to E to the x.

00:10:02.800 --> 00:10:04.466
Well that case, the slope at a point

00:10:04.466 --> 00:10:06.125
is equal to the Y coordinate.

00:10:06.125 --> 00:10:07.900
Y prime is equal to y

00:10:07.900 --> 00:10:09.723
and our initial condition is 01,

00:10:09.723 --> 00:10:11.068
and you see the blue one

00:10:11.068 --> 00:10:14.481
is getting really close
to y is equal E to the x

00:10:14.481 --> 00:10:18.266
but you could play with all
sorts of neat things here.

00:10:18.266 --> 00:10:20.450
So, we could do things like...

00:10:20.450 --> 00:10:22.828
So we could say that y prime is equal to

00:10:22.828 --> 00:10:25.030
I don't know, x plus y.

00:10:25.030 --> 00:10:25.871
What does that do?

00:10:25.871 --> 00:10:28.100
What if we did x minus y?

00:10:28.100 --> 00:10:30.466
Well, that's actually a pretty neat one.

00:10:30.466 --> 00:10:33.366
We could change our range.

00:10:33.366 --> 00:10:34.533
We can make our x max.

00:10:34.533 --> 00:10:36.733
Let's say we want to like
zoom in a little bit here.

00:10:36.733 --> 00:10:40.230
Let's make our x max equal to four.

00:10:40.230 --> 00:10:43.104
And now you get a little
bit more fine grained here

00:10:43.104 --> 00:10:45.346
and then you could...

00:10:45.346 --> 00:10:46.633
Let's change our initial conditions.

00:10:46.633 --> 00:10:49.500
What if when x is equal
to zero y is a higher y?

00:10:49.500 --> 00:10:52.566
And so you can see how your
different approximations change.

00:10:52.566 --> 00:10:55.576
Anyway, hopefully you
found that interesting.

00:10:55.576 --> 00:10:57.484
I encourage you to modify
this and understand this

00:10:57.484 --> 00:10:59.333
because the whole point of Euler's Method

00:10:59.333 --> 00:11:00.367
it's a numerical method.

00:11:00.367 --> 00:11:02.500
It's to use something like a computer

00:11:02.500 --> 00:11:06.133
in order to approximate solutions.

