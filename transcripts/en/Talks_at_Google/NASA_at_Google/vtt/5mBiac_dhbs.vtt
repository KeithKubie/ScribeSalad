WEBVTT
Kind: captions
Language: en

00:00:02.009 --> 00:00:04.920
MALE SPEAKER: Hello, and
welcome to the Google Tech Talk.

00:00:04.920 --> 00:00:07.555
Today it's my pleasure
to announce and introduce

00:00:07.555 --> 00:00:10.780
Nikunj Oza from
NASA Ames Lab where

00:00:10.780 --> 00:00:12.760
he is the leader in the
Data Sciences Group,

00:00:12.760 --> 00:00:16.321
and he's going to talk about
anomaly detection in aviation

00:00:16.321 --> 00:00:16.820
systems.

00:00:19.580 --> 00:00:21.470
NIKUNJ OZA: So I'll
first give a little bit

00:00:21.470 --> 00:00:23.960
of a general overview of
what sorts of problems

00:00:23.960 --> 00:00:25.410
are of interest to NASA.

00:00:25.410 --> 00:00:28.610
And then I'll dive
a little bit more

00:00:28.610 --> 00:00:30.930
into the problem of
detecting anomalies

00:00:30.930 --> 00:00:32.700
in aircraft trajectory,
specifically,

00:00:32.700 --> 00:00:36.320
which is one recent focus area.

00:00:36.320 --> 00:00:40.800
I'll show just where data
mining fits in, at least what

00:00:40.800 --> 00:00:44.500
we've thought of so far, and
what we've been implementing,

00:00:44.500 --> 00:00:48.150
and what kind of data we
get, algorithms, results.

00:00:48.150 --> 00:00:51.050
And then I'll give a brief
overview of some other work

00:00:51.050 --> 00:00:54.510
that we're also doing in
the Data Sciences Group.

00:00:54.510 --> 00:00:56.770
And then also a
little description

00:00:56.770 --> 00:01:01.060
of how you all can get
involved in our efforts.

00:01:01.060 --> 00:01:07.140
So in general, NASA is aimed at
problems in aeronautics, earth

00:01:07.140 --> 00:01:09.710
science, space science,
and space exploration.

00:01:09.710 --> 00:01:12.120
And so the Data
Science Group looks

00:01:12.120 --> 00:01:14.190
at how data mining
algorithms can

00:01:14.190 --> 00:01:16.240
be applied to these
different areas.

00:01:16.240 --> 00:01:18.180
So for example,
within aeronautics,

00:01:18.180 --> 00:01:21.420
a big focus of ours has
been aviation safety.

00:01:21.420 --> 00:01:25.140
For example, identifying
previously unknown anomalies

00:01:25.140 --> 00:01:27.500
that are of some
operational significance,

00:01:27.500 --> 00:01:29.280
that have a safety concern.

00:01:29.280 --> 00:01:30.790
We are also doing
some other work

00:01:30.790 --> 00:01:33.030
in aeronautics such
as using machine

00:01:33.030 --> 00:01:35.490
learning for surrogate modeling.

00:01:35.490 --> 00:01:37.659
And also we are doing
right now some text

00:01:37.659 --> 00:01:39.700
mining as well-- that's
actually an effort that's

00:01:39.700 --> 00:01:41.360
been going for quite a while.

00:01:41.360 --> 00:01:45.020
Then as far as applications
to earth science,

00:01:45.020 --> 00:01:48.280
one area is anomaly detection.

00:01:48.280 --> 00:01:51.870
There are numerous data
sources, whether it's

00:01:51.870 --> 00:01:55.600
space borne, ground-based,
airborne, where

00:01:55.600 --> 00:01:57.710
you expect there to be
certain relationships

00:01:57.710 --> 00:01:59.460
between the measurements
that are taken.

00:01:59.460 --> 00:02:03.750
And we spent some effort
looking for anomalies

00:02:03.750 --> 00:02:05.450
in those relationships
because those

00:02:05.450 --> 00:02:08.310
may be indicative of some
unusual phenomenon taking

00:02:08.310 --> 00:02:09.990
place.

00:02:09.990 --> 00:02:12.400
Also some filling
in missing data.

00:02:12.400 --> 00:02:16.100
So this is the problem
of when NASA develops

00:02:16.100 --> 00:02:20.140
new instruments that are
deployed that typically collect

00:02:20.140 --> 00:02:24.480
data in greater number of
bands, of spectral bands

00:02:24.480 --> 00:02:26.240
than the older instruments.

00:02:26.240 --> 00:02:29.110
Then we use machine learning
to actually kind of fill

00:02:29.110 --> 00:02:31.220
in what those
measurements would have

00:02:31.220 --> 00:02:33.259
been for some of the
earlier instruments,

00:02:33.259 --> 00:02:35.800
given that those early ones did
not have the bands available.

00:02:35.800 --> 00:02:36.890
And of course,
those are estimates,

00:02:36.890 --> 00:02:38.930
but we can at least
use those to figure out

00:02:38.930 --> 00:02:41.820
some interesting
phenomenon from the past.

00:02:41.820 --> 00:02:46.350
And then we've also done some
work in space exploration,

00:02:46.350 --> 00:02:49.650
mostly in the area of
systems health management

00:02:49.650 --> 00:02:51.515
looking for anomalies
in systems operations.

00:02:54.480 --> 00:02:56.900
Now, more specifically
for anomaly detection

00:02:56.900 --> 00:03:00.610
within aviation, the
current way that it is done,

00:03:00.610 --> 00:03:04.080
whether at the
carrier level or at,

00:03:04.080 --> 00:03:06.060
say, within air
traffic control, is

00:03:06.060 --> 00:03:08.520
that they use what are called
exceedance-based methods.

00:03:08.520 --> 00:03:10.390
So there are certain
anomalies that they

00:03:10.390 --> 00:03:13.920
know about that
typically are conditions

00:03:13.920 --> 00:03:15.090
over two to three variables.

00:03:15.090 --> 00:03:16.881
You can think of them
as maybe being rules.

00:03:16.881 --> 00:03:19.600
So I give one example
here that during landing

00:03:19.600 --> 00:03:21.660
when the altitude
reaches 1,000 feet

00:03:21.660 --> 00:03:23.590
they would like that
the aircraft is not

00:03:23.590 --> 00:03:27.030
traveling faster than 250
nautical miles per hour.

00:03:27.030 --> 00:03:30.500
If it is, that is sometimes
referred to as a speed

00:03:30.500 --> 00:03:31.910
high exceedance.

00:03:31.910 --> 00:03:34.070
So for that particular
flight, the system

00:03:34.070 --> 00:03:35.800
will essentially
check a box saying

00:03:35.800 --> 00:03:38.720
that exceedance
has been violated.

00:03:38.720 --> 00:03:42.080
They do typically also have
a severity of exceedance

00:03:42.080 --> 00:03:43.390
that they indicate.

00:03:43.390 --> 00:03:45.940
And then most flights will
have at least a few exceedances

00:03:45.940 --> 00:03:47.510
but they're not such a big deal.

00:03:47.510 --> 00:03:49.120
Then they have a
system, it's often

00:03:49.120 --> 00:03:52.450
called the morning report, where
it'll show these exceedances

00:03:52.450 --> 00:03:54.240
for all the flights
of the previous day.

00:03:54.240 --> 00:03:55.170
And so they'll look at it.

00:03:55.170 --> 00:03:56.586
They'll see, OK,
most flights have

00:03:56.586 --> 00:03:59.090
some number of anomalies
of some exceedances.

00:03:59.090 --> 00:04:02.370
But if they see a few flights
that have many more exceedances

00:04:02.370 --> 00:04:05.200
than that, or a lot of really
high severity exceedances,

00:04:05.200 --> 00:04:07.390
and they have not
received a safety report

00:04:07.390 --> 00:04:10.890
from the pilot or some
other member of the crew,

00:04:10.890 --> 00:04:14.480
then the carrier will
go and talk to the crew

00:04:14.480 --> 00:04:18.279
and ask OK, what
happened with that.

00:04:18.279 --> 00:04:20.189
Now, this is great
for identifying

00:04:20.189 --> 00:04:21.230
what they're looking for.

00:04:21.230 --> 00:04:23.188
So, for example, for the
speed high exceedance,

00:04:23.188 --> 00:04:27.110
if you want to find it, you
have this rule, it'll find it.

00:04:27.110 --> 00:04:29.492
So it certainly has a
low false positive rate

00:04:29.492 --> 00:04:30.950
because it tells
you what you want.

00:04:30.950 --> 00:04:34.940
But it has a high false
negative, or misdetection rate,

00:04:34.940 --> 00:04:38.650
because almost by definition it
cannot find what you don't tell

00:04:38.650 --> 00:04:40.090
it to look for.

00:04:40.090 --> 00:04:43.450
So we decided to come at it
from the opposite perspective

00:04:43.450 --> 00:04:47.736
of saying let's use data-driven
methods to discover anomalies

00:04:47.736 --> 00:04:49.610
just by looking at the
statistical properties

00:04:49.610 --> 00:04:52.830
of the data, finding which
data points do not fit.

00:04:52.830 --> 00:04:55.890
Let's say they're far
away in some sense,

00:04:55.890 --> 00:04:58.310
or they are of low
probability in some sense

00:04:58.310 --> 00:05:01.220
where I need to, of course,
define what "some sense" means.

00:05:01.220 --> 00:05:03.880
And I'll be getting into
that a little bit later.

00:05:03.880 --> 00:05:06.370
The methods we've
explored so far

00:05:06.370 --> 00:05:10.340
don't require background
knowledge on the anomalies.

00:05:10.340 --> 00:05:11.952
So in some ways that's good.

00:05:11.952 --> 00:05:13.910
You're not entering with
preconceived knowledge

00:05:13.910 --> 00:05:15.160
about the system is operating.

00:05:15.160 --> 00:05:18.802
You're just telling the data
to kind of speak for itself.

00:05:18.802 --> 00:05:20.760
And in this way, it's
complementary to existing

00:05:20.760 --> 00:05:21.610
methods.

00:05:21.610 --> 00:05:23.000
It has a low false
negative rate.

00:05:23.000 --> 00:05:27.390
We assume that data that appears
normal through our methods

00:05:27.390 --> 00:05:30.570
probably represents normal
operation, because overall,

00:05:30.570 --> 00:05:33.620
the aviation system we've
seen is a very safe system.

00:05:33.620 --> 00:05:36.230
And we figured that
the data points

00:05:36.230 --> 00:05:38.780
that are identified as
anomalous, yeah, they may have

00:05:38.780 --> 00:05:42.130
some false positives because
there may be data glitches,

00:05:42.130 --> 00:05:47.140
but we figure that new problems
that people don't really

00:05:47.140 --> 00:05:50.100
know about are likely to be
in that set of anomalies,

00:05:50.100 --> 00:05:51.940
the statistical anomalies.

00:05:51.940 --> 00:05:56.040
And the pipeline that
we have used actually

00:05:56.040 --> 00:05:57.960
is what I describe
in the last bullet

00:05:57.960 --> 00:06:01.460
there where we run these
data driven methods,

00:06:01.460 --> 00:06:02.491
identify some anomalies.

00:06:02.491 --> 00:06:04.490
Yes, some of them turn
out to be false positive,

00:06:04.490 --> 00:06:08.082
but there are some
useful insights that

00:06:08.082 --> 00:06:09.540
can be drawn from
that and they can

00:06:09.540 --> 00:06:12.460
be used to modify the
exceedance-based methods.

00:06:12.460 --> 00:06:15.355
And in fact, we do have
partnerships with some carriers

00:06:15.355 --> 00:06:16.730
where they have,
in fact, told us

00:06:16.730 --> 00:06:18.890
that based on the
insights of our algorithms

00:06:18.890 --> 00:06:22.680
they have made modifications to
their daily exceedance review.

00:06:22.680 --> 00:06:27.880
And so then that ends up being
something operational then.

00:06:27.880 --> 00:06:33.420
So really the key
for us really is

00:06:33.420 --> 00:06:38.650
mining this heterogeneous data
because the national airspace

00:06:38.650 --> 00:06:41.280
and even the operation
of a single aircraft

00:06:41.280 --> 00:06:44.300
is described by variables of
many different modalities.

00:06:44.300 --> 00:06:48.900
So you have discrete
variables-- these

00:06:48.900 --> 00:06:52.410
may represent say like
auto pilot modes, switches

00:06:52.410 --> 00:06:55.410
that pilots may press during
the operation of a flight.

00:06:55.410 --> 00:06:58.820
There's continuous data--
things like altitude, air speed,

00:06:58.820 --> 00:07:00.090
and others.

00:07:00.090 --> 00:07:05.190
Then there is what
I call networks.

00:07:05.190 --> 00:07:06.700
Basically they're radar data.

00:07:06.700 --> 00:07:10.630
They represent trajectories
that the aircraft travel in

00:07:10.630 --> 00:07:13.400
and that's where you can have
the possibility of interactions

00:07:13.400 --> 00:07:15.670
between aircrafts, so
there is, of course,

00:07:15.670 --> 00:07:18.180
the need to maintain certain
separation between aircraft.

00:07:18.180 --> 00:07:21.850
So that's a key way in which
the aircraft behavior ends up

00:07:21.850 --> 00:07:24.640
depending on the behavior
of other aircraft.

00:07:24.640 --> 00:07:26.510
And then we also do have text.

00:07:26.510 --> 00:07:31.060
So the various carriers do
have internal safety reporting

00:07:31.060 --> 00:07:31.940
systems.

00:07:31.940 --> 00:07:34.940
And NASA itself also runs
what's called the aviation

00:07:34.940 --> 00:07:37.650
safety reporting
system or ASRS--

00:07:37.650 --> 00:07:39.720
it's actually
administered out of Ames.

00:07:39.720 --> 00:07:42.370
And after any commercial
flight, any member

00:07:42.370 --> 00:07:45.700
of the crew or even
a passenger, if you

00:07:45.700 --> 00:07:48.137
feel that there's something
irregular, a safety

00:07:48.137 --> 00:07:49.720
concern that took
place on the flight,

00:07:49.720 --> 00:07:52.440
that person can actually
submit a report,

00:07:52.440 --> 00:07:56.150
and then the report does go
through some redaction process.

00:07:56.150 --> 00:07:58.790
Some subset of the reports
after being redacted

00:07:58.790 --> 00:08:01.610
are actually released
to the public.

00:08:01.610 --> 00:08:05.500
And FAA also keep
track of these reports,

00:08:05.500 --> 00:08:08.440
find out about any new problems
that seem to be popping up,

00:08:08.440 --> 00:08:11.670
and we'll work to
investigate what changes

00:08:11.670 --> 00:08:13.830
can be made to the
national airspace

00:08:13.830 --> 00:08:16.470
based on new problems
that are reported.

00:08:16.470 --> 00:08:18.860
So we would really like
to utilize and analyze

00:08:18.860 --> 00:08:24.625
all of that data at once to find
any new or emerging problems.

00:08:28.050 --> 00:08:31.320
So I'll go a little more
into the specific problem

00:08:31.320 --> 00:08:35.299
of detecting anomalies
in aircraft trajectories

00:08:35.299 --> 00:08:38.450
at this point.

00:08:38.450 --> 00:08:42.970
So there is a system run by
FAA called the Performance Data

00:08:42.970 --> 00:08:45.970
Analysis and Reporting
System or PDARS.

00:08:45.970 --> 00:08:49.210
It gathers data from
the US airspace,

00:08:49.210 --> 00:08:51.120
so the trajectory
of every flight

00:08:51.120 --> 00:08:53.250
is recorded as
part of the system.

00:08:53.250 --> 00:08:55.510
And it takes care of
data quality issues, so

00:08:55.510 --> 00:08:57.340
in particular, for
PDARS there are actually

00:08:57.340 --> 00:09:00.010
three different sources of
trajectories that are used,

00:09:00.010 --> 00:09:01.570
and they are actually
fused in order

00:09:01.570 --> 00:09:03.960
to create fly tracks that
are more accurate than what

00:09:03.960 --> 00:09:05.840
each one would otherwise.

00:09:05.840 --> 00:09:08.110
That's where the merging
process that I mentioned here

00:09:08.110 --> 00:09:08.710
takes place.

00:09:08.710 --> 00:09:12.380
And then part of PDARS, some
analysis and visualization

00:09:12.380 --> 00:09:15.210
is also done.

00:09:15.210 --> 00:09:18.780
And then this data is
also made available

00:09:18.780 --> 00:09:21.000
to certain other
key partners who

00:09:21.000 --> 00:09:23.200
also are interested
in this area.

00:09:26.240 --> 00:09:30.170
There is the desire expressed at
different levels of government

00:09:30.170 --> 00:09:32.910
to improve the
analysis capabilities.

00:09:32.910 --> 00:09:38.090
There's a realization that there
is this vast amount of data.

00:09:38.090 --> 00:09:41.550
We really need to do more
to study that data in order

00:09:41.550 --> 00:09:42.960
to find new problems.

00:09:42.960 --> 00:09:46.200
That's the upshot of
what's being mentioned

00:09:46.200 --> 00:09:50.250
by, in this case, GAO and the
Office of Inspector General.

00:09:50.250 --> 00:09:56.060
So that's part of what prompted
our little effort, which

00:09:56.060 --> 00:09:57.340
I'll talk about at this point.

00:10:00.020 --> 00:10:05.390
So for us, we went into this
really wanting to-- we thought

00:10:05.390 --> 00:10:08.780
that our data-driven methods
could identify anomalies

00:10:08.780 --> 00:10:11.190
within radar track
data, and so we ended up

00:10:11.190 --> 00:10:13.900
investigating that
in two phases.

00:10:13.900 --> 00:10:22.360
So there was one phase that took
place in 2012 to 2013 where we

00:10:22.360 --> 00:10:28.420
looked at two years' worth
of data involving LAX.

00:10:28.420 --> 00:10:32.834
In that case, it was looking
primarily at landings at LAX.

00:10:32.834 --> 00:10:34.250
As part of that
effort we ended up

00:10:34.250 --> 00:10:38.160
identifying 15 operationally
significant anomalies

00:10:38.160 --> 00:10:41.437
where originally those
were unknown, actually.

00:10:41.437 --> 00:10:43.020
So it was our
algorithms that actually

00:10:43.020 --> 00:10:44.300
revealed these problems.

00:10:44.300 --> 00:10:47.530
Safety analysts said that these
are of safety significance,

00:10:47.530 --> 00:10:51.990
and so some further
investigation should be done.

00:10:51.990 --> 00:10:55.960
Then as part of
phase two we decided

00:10:55.960 --> 00:10:57.510
we would look at
air traffic that's

00:10:57.510 --> 00:10:59.570
of a very different
type from LAX.

00:10:59.570 --> 00:11:02.320
And so that's where we
looked at the Denver Airport

00:11:02.320 --> 00:11:05.530
because there you have much more
foul weather than what you have

00:11:05.530 --> 00:11:07.640
in LA, so we thought
maybe there could

00:11:07.640 --> 00:11:09.420
be some new problems
revealed there.

00:11:09.420 --> 00:11:11.500
And we also looked at
the New York Metroplex,

00:11:11.500 --> 00:11:17.246
so this is primarily the JFK,
LaGuardia and Newark Airport.

00:11:17.246 --> 00:11:18.870
And then you sometimes
also get traffic

00:11:18.870 --> 00:11:23.728
involving Philadelphia and
Teterboro involved in that.

00:11:23.728 --> 00:11:26.790
That, of course, because you
have these multiple airports

00:11:26.790 --> 00:11:30.280
with crossing traffic, that's
much more complicated than what

00:11:30.280 --> 00:11:31.239
we've looked at so far.

00:11:31.239 --> 00:11:32.946
And so there's this
kind of folklore also

00:11:32.946 --> 00:11:35.370
that says that if you can
somehow deal with the New York

00:11:35.370 --> 00:11:37.930
Metroplex you can deal with
problems anywhere in the world.

00:11:37.930 --> 00:11:40.480
So that's why we thought let's
think big and try and tackle

00:11:40.480 --> 00:11:40.979
that.

00:11:43.510 --> 00:11:47.680
So this is just showing
the full process here

00:11:47.680 --> 00:11:51.630
of what goes on
from data collection

00:11:51.630 --> 00:11:53.180
to any kind of
analysis that we have.

00:11:53.180 --> 00:11:57.180
So at the FAA
level you have data

00:11:57.180 --> 00:12:00.507
that's collected
at multiple levels,

00:12:00.507 --> 00:12:02.340
so there's, of course,
at the airport level,

00:12:02.340 --> 00:12:05.420
and then TRACON and RCC
describe broader levels that

00:12:05.420 --> 00:12:08.810
go beyond the airports that
encompass multiple airports.

00:12:08.810 --> 00:12:12.890
And so you have data from each
of those representing traffic,

00:12:12.890 --> 00:12:16.600
whether it's on route or during
takeoff or landing as well.

00:12:16.600 --> 00:12:20.940
Then all of these data
sources are merged together

00:12:20.940 --> 00:12:27.980
and result in the PDARS data
that I described before.

00:12:27.980 --> 00:12:31.750
One thing that we did not have
within the phase one in LAX,

00:12:31.750 --> 00:12:34.120
but we do have in the
phase two at Denver

00:12:34.120 --> 00:12:37.020
and The New York Metroplex
is this calculating

00:12:37.020 --> 00:12:38.710
of the flight separation.

00:12:38.710 --> 00:12:42.060
So in the LA effort we
only look for anomalies

00:12:42.060 --> 00:12:44.650
in the shapes of the
trajectories themselves,

00:12:44.650 --> 00:12:47.820
without necessarily looking at
whether there are cases where

00:12:47.820 --> 00:12:50.110
aircraft were unusually
close together.

00:12:50.110 --> 00:12:52.519
We ended up adding that
step for the second phase

00:12:52.519 --> 00:12:54.560
and looking at Denver and
the New York Metroplex.

00:12:57.090 --> 00:13:02.010
Then this is where we came
in, the NASA portion, where

00:13:02.010 --> 00:13:03.480
we took this data
and we actually

00:13:03.480 --> 00:13:08.820
separated the data by
runway and by month.

00:13:08.820 --> 00:13:12.786
So because, of course, depending
on which runway is chosen,

00:13:12.786 --> 00:13:15.160
you're going to have different
trajectories and so that's

00:13:15.160 --> 00:13:17.243
why we wanted to look at
each of those separately.

00:13:17.243 --> 00:13:21.020
And then we separated by
month looking for anomalies

00:13:21.020 --> 00:13:23.344
separately for each
month just to account

00:13:23.344 --> 00:13:25.010
for any kind of
seasonal characteristics

00:13:25.010 --> 00:13:27.100
that may be present.

00:13:27.100 --> 00:13:31.880
Then the main algorithm we ran
is the Multiple Kernel Anomaly

00:13:31.880 --> 00:13:34.330
Detection or MKAD
that we developed.

00:13:34.330 --> 00:13:37.140
I'll be describing that
a little bit more later.

00:13:37.140 --> 00:13:41.560
But essentially, it takes the
trajectories that we enter

00:13:41.560 --> 00:13:44.180
and it rank orders them
from most anomalous to least

00:13:44.180 --> 00:13:45.310
anomalous.

00:13:45.310 --> 00:13:48.590
And so once we get that, then we
do a review with subject matter

00:13:48.590 --> 00:13:49.830
experts.

00:13:49.830 --> 00:13:52.130
First, our partners
that ATAC, which

00:13:52.130 --> 00:13:54.050
is a company near
the San Jose Airport

00:13:54.050 --> 00:13:57.270
that we're working with which
has access to PDARS data.

00:13:57.270 --> 00:14:02.740
So they have people who are
former air traffic controllers

00:14:02.740 --> 00:14:05.440
and generally are
experts in this area.

00:14:05.440 --> 00:14:07.160
And they review
these flights going

00:14:07.160 --> 00:14:10.340
through more or less
in order from looking

00:14:10.340 --> 00:14:12.570
at the anomalous
flights and seeing

00:14:12.570 --> 00:14:14.730
is there some kind of
a safety concern there.

00:14:14.730 --> 00:14:18.770
And we have, also, once
they vet the flights,

00:14:18.770 --> 00:14:20.870
we have shown them to air
traffic controllers who

00:14:20.870 --> 00:14:24.660
have generously volunteered
their time to explain what's

00:14:24.660 --> 00:14:25.300
going on.

00:14:25.300 --> 00:14:30.930
And in some cases we have had
voice recordings available

00:14:30.930 --> 00:14:33.320
so then we've been able to
understand what's going on.

00:14:33.320 --> 00:14:35.760
But if we have not
had such access,

00:14:35.760 --> 00:14:37.880
these controllers have
been able to provide

00:14:37.880 --> 00:14:41.720
fairly educated guesses about
what may have been going wrong,

00:14:41.720 --> 00:14:43.740
and why the anomalies
that we found

00:14:43.740 --> 00:14:45.710
were significant or were not.

00:14:48.860 --> 00:14:52.850
So this is another
diagram showing

00:14:52.850 --> 00:14:54.480
what we're dealing with here.

00:14:54.480 --> 00:14:59.210
So starting with the
TRACON, or, indeed,

00:14:59.210 --> 00:15:02.590
any other data sources that
may have been merged with that,

00:15:02.590 --> 00:15:05.630
we'll identify a set
of airport arrivals.

00:15:05.630 --> 00:15:09.630
And typically whether it's LA,
Denver, or New York Metroplex,

00:15:09.630 --> 00:15:13.100
we've had anywhere from
about 100,000 to nearly

00:15:13.100 --> 00:15:14.970
400,000 flights
that we've ended up

00:15:14.970 --> 00:15:16.410
identifying and
then working with.

00:15:22.360 --> 00:15:25.880
So there's the
mining system where

00:15:25.880 --> 00:15:30.450
I mentioned that we separated
by runway and by month.

00:15:30.450 --> 00:15:32.500
We do also have a
prototype system that

00:15:32.500 --> 00:15:35.590
is operating in more of
this morning report style

00:15:35.590 --> 00:15:38.370
that I mentioned where it's
looking at flights on a given

00:15:38.370 --> 00:15:41.980
day giving an indication
of how anomalous it is

00:15:41.980 --> 00:15:44.590
and then providing a
report the next day.

00:15:44.590 --> 00:15:47.740
And that's more or less what's
described here where we also

00:15:47.740 --> 00:15:50.460
do, like after first
doing some testing then

00:15:50.460 --> 00:15:54.050
we'll incorporate
those into training.

00:15:54.050 --> 00:15:56.710
And that's what's depicted
here where we then end up

00:15:56.710 --> 00:15:59.880
taking some training flights,
separating them by runway,

00:15:59.880 --> 00:16:03.480
and running our MKAD
algorithm, getting a model,

00:16:03.480 --> 00:16:07.344
identifying anomalies, and then
doing whatever follow-up needs

00:16:07.344 --> 00:16:09.260
to be done, whether it's
subject matter expert

00:16:09.260 --> 00:16:10.100
review, for example.

00:16:13.980 --> 00:16:19.430
So the Multiple Kernel
Anomaly Detection algorithm

00:16:19.430 --> 00:16:21.990
is basically a One-Class
Support Vector Machine,

00:16:21.990 --> 00:16:24.720
which many of you
may be familiar with.

00:16:24.720 --> 00:16:28.780
The upshot of it you
can say is that we

00:16:28.780 --> 00:16:31.970
assume that-- I think I
described this a bit earlier.

00:16:31.970 --> 00:16:35.330
But the idea is that a
flight, we consider it normal

00:16:35.330 --> 00:16:38.260
if it's similar to
most other flights.

00:16:38.260 --> 00:16:41.650
Whereas we figure a flight
is probably abnormal

00:16:41.650 --> 00:16:43.520
if it's different from
most other flights.

00:16:43.520 --> 00:16:44.978
But then the question
is how do you

00:16:44.978 --> 00:16:48.320
measure similarity or
difference, in this case.

00:16:48.320 --> 00:16:51.690
And so the way we
measure it is really

00:16:51.690 --> 00:16:55.340
through this, what's shown here.

00:16:55.340 --> 00:16:59.850
So I haven't gone into the setup
of the primal of the One-Class

00:16:59.850 --> 00:17:00.644
SVM.

00:17:00.644 --> 00:17:02.560
I'm showing here the
dual form because that's,

00:17:02.560 --> 00:17:06.010
at least, somewhat
revealing, or as revealing

00:17:06.010 --> 00:17:08.640
as equations can be
right after lunchtime.

00:17:08.640 --> 00:17:12.410
But what this one shows us,
the vanilla One-Class Support

00:17:12.410 --> 00:17:15.730
Vector Machine will have
one kernel function here,

00:17:15.730 --> 00:17:18.609
where you could see here I've
shown a kernel function applied

00:17:18.609 --> 00:17:21.750
to two data, xi and xj.

00:17:21.750 --> 00:17:24.430
In our case, those will
be two trajectories.

00:17:24.430 --> 00:17:27.880
So if two trajectories
are very similar-- let's

00:17:27.880 --> 00:17:29.840
suppose they're one
on top of the other,

00:17:29.840 --> 00:17:31.270
they're the same flight.

00:17:31.270 --> 00:17:33.560
Then the kernel
is going to return

00:17:33.560 --> 00:17:35.540
or should return a value
of one in that case

00:17:35.540 --> 00:17:37.410
to reflect maximum similarity.

00:17:37.410 --> 00:17:39.590
Whereas if two trajectories
are very different,

00:17:39.590 --> 00:17:41.839
they should return
a much lower value--

00:17:41.839 --> 00:17:43.380
one that doesn't
disappear hopefully.

00:17:43.380 --> 00:17:46.790
But it should return a
value say close to zero.

00:17:46.790 --> 00:17:49.830
And using this
machinery, if you have

00:17:49.830 --> 00:17:52.080
a set of flights
that you're checking,

00:17:52.080 --> 00:17:57.320
then the similarity between all
pairs of flights is calculated.

00:17:57.320 --> 00:18:00.300
And so using that, you can
determine for any flight

00:18:00.300 --> 00:18:03.627
how similar it is to
most other flights

00:18:03.627 --> 00:18:05.210
to answer the question
of whether it's

00:18:05.210 --> 00:18:08.670
normal or anomalous.

00:18:08.670 --> 00:18:11.270
Now that works fine if you
have like one modality of data,

00:18:11.270 --> 00:18:13.540
but I described the
problems we had earlier

00:18:13.540 --> 00:18:16.150
of having data of many
different modalities.

00:18:16.150 --> 00:18:18.270
So I described for
a single aircraft

00:18:18.270 --> 00:18:20.300
you may have, say,
discretes, discontinuous,

00:18:20.300 --> 00:18:21.970
you may have even
safety reports that

00:18:21.970 --> 00:18:25.280
are associated with that flight.

00:18:25.280 --> 00:18:26.980
How do you put
all those on-- you

00:18:26.980 --> 00:18:30.040
can't imagine putting those
on the same coordinate system

00:18:30.040 --> 00:18:34.262
and doing, let's say, clustering
and checking for anomalies.

00:18:34.262 --> 00:18:36.220
So what we do is here is
have a separate kernel

00:18:36.220 --> 00:18:38.970
function for each modality.

00:18:38.970 --> 00:18:41.370
And actually, that's kind
of what I describe here.

00:18:41.370 --> 00:18:43.810
So for the single
flight, we actually

00:18:43.810 --> 00:18:47.810
ran this same algorithm
but with a separate kernel

00:18:47.810 --> 00:18:50.690
for discretes, a separate one
for continuous, separate one

00:18:50.690 --> 00:18:51.310
for text.

00:18:51.310 --> 00:18:53.640
At one point we even tested
incorporating weather data

00:18:53.640 --> 00:18:54.620
into this.

00:18:54.620 --> 00:18:56.840
But now for this
trajectory problem

00:18:56.840 --> 00:18:59.220
we use the same algorithm
but we have different kernels

00:18:59.220 --> 00:19:02.520
for latitude,
longitude, altitude,

00:19:02.520 --> 00:19:05.022
and distance to the
nearest aircraft.

00:19:05.022 --> 00:19:06.980
And the good thing here
is that we can actually

00:19:06.980 --> 00:19:08.730
use different kernels
that are appropriate,

00:19:08.730 --> 00:19:10.060
depending on the modality here.

00:19:10.060 --> 00:19:13.820
So for latitude and longitude
we just use a cosine similarity

00:19:13.820 --> 00:19:16.880
kernel, since that ends
up taking into account

00:19:16.880 --> 00:19:19.070
the locations and
directions therefore

00:19:19.070 --> 00:19:21.820
of the trajectories
that we end up getting.

00:19:21.820 --> 00:19:28.935
And then altitude, of course, is
on a very different scale here,

00:19:28.935 --> 00:19:31.750
but we still ended up using
cosine similarity for that,

00:19:31.750 --> 00:19:34.230
but of course normalize
the data very differently.

00:19:34.230 --> 00:19:36.520
For the distance to
the nearest aircraft

00:19:36.520 --> 00:19:40.030
we ended up just using
this radial basis function

00:19:40.030 --> 00:19:43.140
kernel that's shown here.

00:19:43.140 --> 00:19:46.430
And then for the case
where we were looking

00:19:46.430 --> 00:19:49.180
at individual aircraft,
we used, of course,

00:19:49.180 --> 00:19:53.950
fairly different kernels for
discrete, continuous, and text.

00:19:53.950 --> 00:19:56.150
But the key point
is that then rather

00:19:56.150 --> 00:19:58.249
than working in your
original data space,

00:19:58.249 --> 00:19:59.790
you're mapping all
the different data

00:19:59.790 --> 00:20:01.390
with all their
different modalities

00:20:01.390 --> 00:20:05.020
into this similarity space,
where for all modalities

00:20:05.020 --> 00:20:07.990
you're just getting these
values ranging from 0 to 1.

00:20:07.990 --> 00:20:10.820
And then with the
multiple kernel method

00:20:10.820 --> 00:20:13.150
you can just measure the
similarity between two data

00:20:13.150 --> 00:20:15.170
points by taking their
averages over all

00:20:15.170 --> 00:20:16.690
these different modalities.

00:20:16.690 --> 00:20:18.880
So for two trajectories
that's exactly what we do.

00:20:18.880 --> 00:20:20.379
We take these
measures of similarity

00:20:20.379 --> 00:20:22.700
over latitude, longitude,
altitude, and distance

00:20:22.700 --> 00:20:27.020
to nearest aircraft,
and just take

00:20:27.020 --> 00:20:31.520
a convex combination,
which is depicted here.

00:20:31.520 --> 00:20:33.740
We, so far, have
only explored having

00:20:33.740 --> 00:20:36.025
equal weights for
all the kernels.

00:20:36.025 --> 00:20:37.650
You could, of course,
decide to explore

00:20:37.650 --> 00:20:40.108
giving different weights to
different kernels, if you like.

00:20:43.170 --> 00:20:45.330
Otherwise though, you still
have the same machinery

00:20:45.330 --> 00:20:51.880
as with a One-Class Support
Vector Machine where you end up

00:20:51.880 --> 00:20:56.950
with, in this
case-- yeah, I guess

00:20:56.950 --> 00:20:59.970
I can probably show it here.

00:20:59.970 --> 00:21:04.410
The data points that end up
having these alphas being

00:21:04.410 --> 00:21:07.200
positive are what are
called the support vectors.

00:21:07.200 --> 00:21:10.370
So some of the benefit
you get, especially when

00:21:10.370 --> 00:21:13.720
running the Support Vector
Machine in a testing mode,

00:21:13.720 --> 00:21:17.210
is that you don't have to have
all of your training data.

00:21:17.210 --> 00:21:19.120
Essentially, the
algorithm figures out

00:21:19.120 --> 00:21:21.536
what are called the support
vectors which are the key data

00:21:21.536 --> 00:21:24.120
points that you
need to determine

00:21:24.120 --> 00:21:28.740
the separator between normal
and anomalous data points.

00:21:28.740 --> 00:21:33.360
And so that only those data
points end up being used here.

00:21:33.360 --> 00:21:34.980
And instead of a
single kernel you

00:21:34.980 --> 00:21:36.670
can still use multiple kernels.

00:21:36.670 --> 00:21:39.360
So when, say, a new
flight comes in,

00:21:39.360 --> 00:21:43.500
it's compared against all
of your training flights

00:21:43.500 --> 00:21:45.904
using this kernel-- it
could be a single kernel,

00:21:45.904 --> 00:21:47.320
or in this case
it's a combination

00:21:47.320 --> 00:21:48.610
of multiple kernels.

00:21:48.610 --> 00:21:53.650
And then that is used to assess
if the data point is an outlier

00:21:53.650 --> 00:21:56.285
or is normal, relative
to the training data

00:21:56.285 --> 00:21:57.160
the you already have.

00:21:57.160 --> 00:22:00.170
And we get also an
indication based

00:22:00.170 --> 00:22:02.100
on how strongly
negative or positive

00:22:02.100 --> 00:22:05.260
the decision value
that's returned,

00:22:05.260 --> 00:22:08.485
you get an indication of how
strongly normal or anomalous

00:22:08.485 --> 00:22:09.510
it is.

00:22:09.510 --> 00:22:11.870
And so that's where we're
able to get that kind of rank

00:22:11.870 --> 00:22:15.080
ordering that I describe, where
then the subject matter expert

00:22:15.080 --> 00:22:16.960
is able to go through
the flights in order.

00:22:21.570 --> 00:22:24.370
So I'll describe some
results that we got.

00:22:28.260 --> 00:22:32.220
So one example that
we found is the case

00:22:32.220 --> 00:22:36.550
of a loss of separation,
as it's called.

00:22:36.550 --> 00:22:41.050
So in this case,
the aircraft that

00:22:41.050 --> 00:22:42.640
ended up being
identified as anomalous

00:22:42.640 --> 00:22:46.630
is the one that's
indicated here in orange.

00:22:46.630 --> 00:22:49.570
And it ended up
getting relatively

00:22:49.570 --> 00:22:54.420
close to another aircraft,
not only in the long space,

00:22:54.420 --> 00:22:59.440
but also in terms of
altitude separation here.

00:22:59.440 --> 00:23:01.460
And this particular
trajectory ended up

00:23:01.460 --> 00:23:04.690
showing up as anomalous because
this orange aircraft was

00:23:04.690 --> 00:23:08.280
on descent, and then it suddenly
stopped and actually climbed

00:23:08.280 --> 00:23:10.660
a little bit in order
to avoid getting

00:23:10.660 --> 00:23:12.910
too close to this
other aircraft,

00:23:12.910 --> 00:23:16.230
and then continued on
its descent after that.

00:23:16.230 --> 00:23:21.690
So especially the shape of the
trajectory ended up being key.

00:23:21.690 --> 00:23:23.440
Yeah, the distance to
the nearest aircraft

00:23:23.440 --> 00:23:28.810
also ended up being a factor
in this particular case.

00:23:28.810 --> 00:23:33.620
So one thing that we were
told by our domain experts

00:23:33.620 --> 00:23:36.916
is that this was in
an air space where

00:23:36.916 --> 00:23:39.290
there may have been controllers
handing off the aircraft,

00:23:39.290 --> 00:23:42.035
so meaning maybe one
controller was managing it

00:23:42.035 --> 00:23:44.410
and then he was supposed to
handoff to another controller

00:23:44.410 --> 00:23:47.200
because he reached, say, a
boundary in the air space.

00:23:47.200 --> 00:23:50.870
So they hypothesized that
this particular area where

00:23:50.870 --> 00:23:54.250
this happened may be a so-called
hot spot where there maybe

00:23:54.250 --> 00:23:56.735
are more likely to be
problems because of handoffs

00:23:56.735 --> 00:23:57.610
to other controllers.

00:24:02.260 --> 00:24:06.290
So this is one where
there was a go-around that

00:24:06.290 --> 00:24:08.180
happened due to high speed.

00:24:08.180 --> 00:24:10.830
So in this particular
case, the trajectory

00:24:10.830 --> 00:24:12.330
that the aircraft
ended up following

00:24:12.330 --> 00:24:16.520
was that it came down this
way, he was going too fast--

00:24:16.520 --> 00:24:21.090
in this case, over 250 knots at
about 2,500 feet while landing.

00:24:21.090 --> 00:24:23.230
He was supposed to land
on this runway here,

00:24:23.230 --> 00:24:26.260
but he kind of
overshot this and then

00:24:26.260 --> 00:24:29.490
was unable to line up in
time to be able to land here.

00:24:29.490 --> 00:24:32.000
So then he decided
to, or it was decided

00:24:32.000 --> 00:24:35.250
at you should do a go-around.

00:24:35.250 --> 00:24:38.970
Overshot the runway again a
little bit, but not by as much

00:24:38.970 --> 00:24:43.690
of a margin, so this
time he was able to land.

00:24:43.690 --> 00:24:47.020
So this ended up showing up
as anomalous purely because

00:24:47.020 --> 00:24:49.181
of the unusual shape
of the trajectory.

00:24:49.181 --> 00:24:51.430
You don't get this kind of
thing happening very often.

00:24:51.430 --> 00:24:56.150
So that's where this
ended up being identified.

00:25:00.850 --> 00:25:04.120
Another one that we had was what
we call a recurring high speed

00:25:04.120 --> 00:25:04.920
vertical descent.

00:25:04.920 --> 00:25:09.930
So this was a cargo
aircraft that regularly

00:25:09.930 --> 00:25:15.630
lands, in this case, at JFK some
time from 11:00 PM to 1:00 AM.

00:25:15.630 --> 00:25:19.920
And there's kind
of this agreement

00:25:19.920 --> 00:25:23.570
that this particular aircraft,
being a cargo aircraft

00:25:23.570 --> 00:25:26.180
and being at night,
is allowed to take

00:25:26.180 --> 00:25:28.980
some creative approaches
to landing so that it

00:25:28.980 --> 00:25:32.400
can get closer to the cargo
terminal, so its cargo

00:25:32.400 --> 00:25:33.080
facility.

00:25:33.080 --> 00:25:36.620
So there is kind of a standard
landing it's supposed to go on,

00:25:36.620 --> 00:25:38.610
but the thought is this
is middle of the night,

00:25:38.610 --> 00:25:41.110
there are no passengers
who would get frightened.

00:25:41.110 --> 00:25:44.200
And so they can allow these
somewhat creative maneuvers

00:25:44.200 --> 00:25:45.360
to take place.

00:25:45.360 --> 00:25:47.050
And you can see
here on the diagram

00:25:47.050 --> 00:25:49.960
the range of different
maneuvers that are taken.

00:25:49.960 --> 00:25:57.170
It's quite amusing, unless
you have to fly on it I guess.

00:25:57.170 --> 00:26:00.660
So in this case, there's not
really a safety issue here,

00:26:00.660 --> 00:26:03.890
but the safety
analyst did point out

00:26:03.890 --> 00:26:07.670
that since this is
not really following

00:26:07.670 --> 00:26:10.090
the standard operating
procedure, if a new controller

00:26:10.090 --> 00:26:13.910
comes online, that person
may not be used to this,

00:26:13.910 --> 00:26:18.410
may cause some difficulties
or may raise alarms

00:26:18.410 --> 00:26:20.330
where it's not really needed.

00:26:20.330 --> 00:26:25.820
So there was the thought that
then maybe procedures like this

00:26:25.820 --> 00:26:28.400
should be codified so that
any new controllers that

00:26:28.400 --> 00:26:34.320
come online know that
it's OK to do this.

00:26:34.320 --> 00:26:36.590
And so in that way, the
anomalies that we find

00:26:36.590 --> 00:26:39.540
can be used actually add to
standard operating procedure.

00:26:43.650 --> 00:26:51.800
So another one, this
I guess is somewhat--

00:26:51.800 --> 00:26:53.430
I shouldn't say
more routine case,

00:26:53.430 --> 00:26:56.200
but this happens
every once in a while.

00:26:56.200 --> 00:26:58.510
A key job that
controllers have is

00:26:58.510 --> 00:27:00.245
to ensure the spacing
between aircraft

00:27:00.245 --> 00:27:01.220
that are going to land.

00:27:01.220 --> 00:27:05.270
So they have a system
where they identify slots

00:27:05.270 --> 00:27:08.710
where aircraft can be plugged
in in order to then land.

00:27:08.710 --> 00:27:11.050
And this was a case
where it looked

00:27:11.050 --> 00:27:14.810
like there could have been a
potential tie situation, where

00:27:14.810 --> 00:27:17.330
two aircraft are trying
to land at the same runway

00:27:17.330 --> 00:27:20.725
and there would have
been reduced separation.

00:27:20.725 --> 00:27:22.850
And so that, in this case,
this particular aircraft

00:27:22.850 --> 00:27:24.400
was told to go around.

00:27:26.920 --> 00:27:32.030
And I think this is one where
there's an animation here.

00:27:32.030 --> 00:27:35.472
Yeah, this is just
showing the aircraft here.

00:27:35.472 --> 00:27:37.930
Not quite sure about the reason
for this little [INAUDIBLE]

00:27:37.930 --> 00:27:43.910
here where it gets off
of its approach here.

00:27:43.910 --> 00:27:46.880
But then you can see that the
red aircraft gets relatively

00:27:46.880 --> 00:27:49.540
close to that other one, and so
then that's where it's told OK,

00:27:49.540 --> 00:27:50.830
you probably better go around.

00:27:53.550 --> 00:27:57.030
And then eventually, though,
he does go all the way around

00:27:57.030 --> 00:27:59.830
here, and then
finally does end up

00:27:59.830 --> 00:28:04.170
landing on this
particular runway.

00:28:04.170 --> 00:28:06.980
So I should say this is
part of the procedure,

00:28:06.980 --> 00:28:09.990
also, that our collaborators
at ATAC follow.

00:28:09.990 --> 00:28:11.960
So when we identify
a particular anomaly,

00:28:11.960 --> 00:28:14.410
they'll typically pool
up traffic starting

00:28:14.410 --> 00:28:18.850
maybe half an hour before just
to see what the whole traffic

00:28:18.850 --> 00:28:21.640
situation is, see if there
are any real funny things that

00:28:21.640 --> 00:28:25.760
are brewing up in advance of
the anomaly that we identify.

00:28:25.760 --> 00:28:28.192
And then they'll make
animations of this sort

00:28:28.192 --> 00:28:30.400
to show, let's say, not only
this particular anomaly,

00:28:30.400 --> 00:28:35.250
but maybe even other issues
that pop up before that.

00:28:35.250 --> 00:28:38.580
And for our work in the
LA area, we were not

00:28:38.580 --> 00:28:40.530
able to get access
to voice recordings

00:28:40.530 --> 00:28:44.740
because there is a publicly
available archive of voice

00:28:44.740 --> 00:28:47.191
recordings, but that
only goes back 45 days,

00:28:47.191 --> 00:28:48.690
and we ended up
looking at data that

00:28:48.690 --> 00:28:50.900
was about a year back in time.

00:28:50.900 --> 00:28:53.050
So that's where we relied
a lot on the educated

00:28:53.050 --> 00:28:55.630
guesses of the
controllers to tell us

00:28:55.630 --> 00:28:56.860
what may have been happening.

00:28:56.860 --> 00:29:00.220
But with our work with
Denver and the New York area,

00:29:00.220 --> 00:29:02.680
we've been able to get
access to voice recordings.

00:29:02.680 --> 00:29:05.535
So sometimes they're not
present, but once in a

00:29:05.535 --> 00:29:09.060
while we're able to get
explanations of anomalies

00:29:09.060 --> 00:29:11.580
using the voice recordings.

00:29:11.580 --> 00:29:14.750
So this is another
particular anomaly,

00:29:14.750 --> 00:29:18.350
what is termed I guess an
aggressive runway change.

00:29:18.350 --> 00:29:21.800
So this was the case-- the
anomalous flight, again,

00:29:21.800 --> 00:29:23.060
is in orange.

00:29:23.060 --> 00:29:28.280
And this is one where the
aircraft was lining up

00:29:28.280 --> 00:29:30.770
for approach, but then
there he was going faster

00:29:30.770 --> 00:29:32.910
than the aircraft in front here.

00:29:32.910 --> 00:29:37.050
And so there was what they call
a potential overtake situation.

00:29:37.050 --> 00:29:40.400
And so for that
reason, this aircraft

00:29:40.400 --> 00:29:45.520
was told, at least, not to land
here on this particular runway.

00:29:45.520 --> 00:29:48.010
The decision ended up
being made to instead

00:29:48.010 --> 00:29:51.610
land on this
different runway here.

00:29:51.610 --> 00:29:53.190
But the turn that
he ended up taking

00:29:53.190 --> 00:29:55.440
was kind of relatively sharp.

00:29:55.440 --> 00:29:59.330
And as you probably
know-- I always

00:29:59.330 --> 00:30:01.810
hate diagramming
airplanes with my hands.

00:30:01.810 --> 00:30:05.190
But when an aircraft is,
say, turning to the right,

00:30:05.190 --> 00:30:08.670
it has to bank, so you'll
end up turning like this.

00:30:08.670 --> 00:30:11.270
And the same thing happens
with this aircraft.

00:30:11.270 --> 00:30:14.570
There was, here, you can see
this aircraft in blue that

00:30:14.570 --> 00:30:16.770
was getting ready to
land on a parallel runway

00:30:16.770 --> 00:30:18.750
as this particular orange
aircraft was banking

00:30:18.750 --> 00:30:19.710
to the right.

00:30:19.710 --> 00:30:22.900
And that yields what is
called a belly up situation.

00:30:22.900 --> 00:30:24.700
So essentially,
this orange aircraft

00:30:24.700 --> 00:30:27.770
was not able to see
this aircraft in blue

00:30:27.770 --> 00:30:28.790
while it was landing.

00:30:28.790 --> 00:30:33.290
And that's because it's a
quote "belly up" situation--

00:30:33.290 --> 00:30:36.230
the aircraft isn't able to see
anything that's at its belly,

00:30:36.230 --> 00:30:38.930
so to speak, if you
anthropomorphize the plane.

00:30:38.930 --> 00:30:43.250
And that's a situation they
would prefer not to have.

00:30:43.250 --> 00:30:46.990
As far as the safety
impact of these data

00:30:46.990 --> 00:30:50.330
mining algorithms, what
our collaborators at ATAC

00:30:50.330 --> 00:30:54.420
and controllers have
told us is that they

00:30:54.420 --> 00:30:57.070
see these anomaly detection
methods, whether it's

00:30:57.070 --> 00:31:01.040
MKAD or other methods
that could be used,

00:31:01.040 --> 00:31:03.640
can be good to automatically
identify certain safety risks,

00:31:03.640 --> 00:31:08.200
and also provide morning
report style feedback

00:31:08.200 --> 00:31:11.930
and really identify new
problems that they're not set up

00:31:11.930 --> 00:31:16.290
to look for given the current
exceedance-based system.

00:31:16.290 --> 00:31:18.150
I mentioned we have
the problem of being

00:31:18.150 --> 00:31:20.500
able to highlight certain
problem areas or hot spots,

00:31:20.500 --> 00:31:22.720
if anomalies seem to
show up in certain areas,

00:31:22.720 --> 00:31:25.640
and that may be indicative
of say issues related

00:31:25.640 --> 00:31:30.480
to one controller
handing off to another.

00:31:30.480 --> 00:31:34.500
Also, I mentioned about
the idea of the recurring

00:31:34.500 --> 00:31:40.640
non-standard operating procedure
maneuvers, these behaviors that

00:31:40.640 --> 00:31:44.190
just sort of emerge where
there's really not a safety

00:31:44.190 --> 00:31:46.830
issue, but these have
not really been codified,

00:31:46.830 --> 00:31:50.570
and our algorithms can help
reveal them and provide

00:31:50.570 --> 00:31:52.310
some sort of input
as to actually codify

00:31:52.310 --> 00:31:56.160
these different
ways of operating.

00:31:56.160 --> 00:31:59.210
We could also use this to
assess whether new procedures

00:31:59.210 --> 00:32:00.830
or tools are improving safety.

00:32:00.830 --> 00:32:02.480
And that's something
we're actually

00:32:02.480 --> 00:32:07.000
getting into now is looking
at operation, say, at a given

00:32:07.000 --> 00:32:10.040
airport before and after
some kind of procedure

00:32:10.040 --> 00:32:13.380
change to see what the
overall impact on safety

00:32:13.380 --> 00:32:15.820
is as a result of that.

00:32:15.820 --> 00:32:17.940
See what kind of
anomalies maybe were there

00:32:17.940 --> 00:32:22.950
before that are not present
now, and the other way around.

00:32:22.950 --> 00:32:25.880
And it can also help to
identify key training examples,

00:32:25.880 --> 00:32:29.030
not training examples in the way
that we machine learning types

00:32:29.030 --> 00:32:32.170
would think of it, but examples
for training of controllers,

00:32:32.170 --> 00:32:33.690
in this case, is what is meant.

00:32:33.690 --> 00:32:38.830
So identifying certain
borderline safety situations

00:32:38.830 --> 00:32:41.440
that could be good to
train controllers on.

00:32:45.460 --> 00:32:50.250
As far as the work that we're
planning, right now when

00:32:50.250 --> 00:32:53.540
we run our anomaly
detection algorithms,

00:32:53.540 --> 00:32:55.650
domain experts give
some kind of feedback on

00:32:55.650 --> 00:32:58.100
whether those anomalies are
operationally significant

00:32:58.100 --> 00:32:58.600
or not.

00:32:58.600 --> 00:33:01.900
They may give us an
indication of why.

00:33:01.900 --> 00:33:05.210
That is not fed back into
the algorithm in any way.

00:33:05.210 --> 00:33:07.960
Like the One-Class SVM
runs, but that's it.

00:33:07.960 --> 00:33:10.330
There isn't some kind of
feedback that goes into that.

00:33:10.330 --> 00:33:15.030
We are looking at augmenting
MKAD with active learning

00:33:15.030 --> 00:33:18.987
methods that can be used to
provide this kind of feedback.

00:33:18.987 --> 00:33:20.570
Of course, the
difficulty that we have

00:33:20.570 --> 00:33:24.130
is that we're looking at not
only the notion of a flight

00:33:24.130 --> 00:33:26.310
being anomalous, but then
trying to identify parts

00:33:26.310 --> 00:33:27.450
of that flight
that are anomalous,

00:33:27.450 --> 00:33:29.283
and oftentimes the
feedback is in that form.

00:33:29.283 --> 00:33:31.306
That here's a specific
portion of the flight,

00:33:31.306 --> 00:33:33.680
like over these variables or
over these particular ranges

00:33:33.680 --> 00:33:35.600
of time that are anomalous.

00:33:35.600 --> 00:33:38.200
How can that be incorporated
into an algorithm that's

00:33:38.200 --> 00:33:41.470
looking at data at the
flight level really?

00:33:41.470 --> 00:33:44.460
But that's something
that we are working on.

00:33:44.460 --> 00:33:47.500
I mentioned this prototype
daily reporting system

00:33:47.500 --> 00:33:50.100
that we have set up at ATAC.

00:33:50.100 --> 00:33:53.190
It still needs to go
through a proper evaluation

00:33:53.190 --> 00:33:56.520
over many days, really
seeing what kind

00:33:56.520 --> 00:33:59.380
of false positive rate we
have, what kind of new problems

00:33:59.380 --> 00:34:02.470
are being revealed.

00:34:02.470 --> 00:34:05.710
We would also like to
develop some sort of way

00:34:05.710 --> 00:34:07.750
as part of our system to
automatically classify

00:34:07.750 --> 00:34:10.190
the known identified events.

00:34:10.190 --> 00:34:12.389
So maybe even using the
exceedance-based system

00:34:12.389 --> 00:34:14.639
to tag parts of the
flight that we know

00:34:14.639 --> 00:34:17.409
are anomalous, or maybe
even based on feedback

00:34:17.409 --> 00:34:21.514
the controllers and
other experts have given.

00:34:21.514 --> 00:34:23.389
There's also the desire
to automatically link

00:34:23.389 --> 00:34:24.840
certain visualization tools.

00:34:24.840 --> 00:34:28.330
So I mentioned about how
we use voice, weather,

00:34:28.330 --> 00:34:31.460
I showed some of
these animations.

00:34:31.460 --> 00:34:34.380
But those are all
operated separately.

00:34:34.380 --> 00:34:36.409
So over at ATAC there
are different systems

00:34:36.409 --> 00:34:38.400
that are used for all of these.

00:34:38.400 --> 00:34:40.900
We would, of course, like to
have a single integrated system

00:34:40.900 --> 00:34:42.360
that's able to
pop up an anomaly,

00:34:42.360 --> 00:34:45.409
pop up the voice that's
associated with it,

00:34:45.409 --> 00:34:49.370
bring up the weather,
automatically bring up

00:34:49.370 --> 00:34:49.960
the traffic.

00:34:49.960 --> 00:34:52.100
I described about how our
domain experts bring up

00:34:52.100 --> 00:34:53.860
the previous half
hour or so of traffic

00:34:53.860 --> 00:34:55.900
to see what's been
brewing up in advance.

00:34:55.900 --> 00:34:58.790
Bringing that up
automatically would be good.

00:34:58.790 --> 00:35:01.210
I guess I described also
the bottom problem there

00:35:01.210 --> 00:35:04.250
of studying the airspace before
and after a procedure change.

00:35:08.150 --> 00:35:13.540
As far as other work that we do,
we have done anomaly detection

00:35:13.540 --> 00:35:17.670
in flight recorded data by
itself, and also jointly

00:35:17.670 --> 00:35:19.140
with safety reports.

00:35:19.140 --> 00:35:23.090
So there's one carrier with whom
we partner to where they have

00:35:23.090 --> 00:35:25.910
allowed us to actually
tie the flight

00:35:25.910 --> 00:35:27.630
recorded data with
safety reports.

00:35:27.630 --> 00:35:31.670
And so we actually use MKAD to
mine those all at the same time

00:35:31.670 --> 00:35:34.350
and look for
anomalies across that.

00:35:34.350 --> 00:35:38.050
So that's certainly something
that we'd like to do.

00:35:38.050 --> 00:35:40.650
There's the text mining on
the aviation safety reports.

00:35:40.650 --> 00:35:42.990
So I described that aviation
safety reporting system.

00:35:42.990 --> 00:35:44.860
That only has reports
by itself, not

00:35:44.860 --> 00:35:47.220
tied to any flight
recorded data,

00:35:47.220 --> 00:35:51.037
but certainly more mining
of that kind of data

00:35:51.037 --> 00:35:51.745
would be helpful.

00:35:54.360 --> 00:35:57.580
We also really want
to identify precursors

00:35:57.580 --> 00:36:00.530
to anomalies in the sense--
most of what I've described here

00:36:00.530 --> 00:36:03.990
is really trying to identify
a single anomaly that's

00:36:03.990 --> 00:36:05.230
taken place.

00:36:05.230 --> 00:36:07.510
What we're really
interested in is

00:36:07.510 --> 00:36:10.980
what it was that happened before
that that could have possibly

00:36:10.980 --> 00:36:11.980
led to this brewing up.

00:36:11.980 --> 00:36:16.260
So why did the one aircraft
nearly overtake the other?

00:36:16.260 --> 00:36:17.920
Was he busy doing
something else?

00:36:17.920 --> 00:36:20.320
Was he looking at his iPad?

00:36:20.320 --> 00:36:24.450
Was he arguing
with his co-pilot?

00:36:24.450 --> 00:36:26.170
Some of that we
may never find out

00:36:26.170 --> 00:36:28.470
because we don't collect
data, for example,

00:36:28.470 --> 00:36:30.730
from within the
cockpit necessarily.

00:36:30.730 --> 00:36:32.670
But we may be able
to monitor, say,

00:36:32.670 --> 00:36:34.650
the switches that
are being pressed.

00:36:34.650 --> 00:36:38.130
We may be able to figure
out that, OK, there's let's

00:36:38.130 --> 00:36:39.817
say a rapid sequence
of mode changes

00:36:39.817 --> 00:36:41.900
in the auto pilot that may
be indicative of what's

00:36:41.900 --> 00:36:44.885
called mode confusion,
where that's a case where

00:36:44.885 --> 00:36:46.510
the crew doesn't
really understand what

00:36:46.510 --> 00:36:49.450
mode the aircraft is in and
is trying to figure that out.

00:36:49.450 --> 00:36:52.020
And of course, that
takes brain cycles,

00:36:52.020 --> 00:36:55.630
which may need to be
used for something else.

00:36:55.630 --> 00:36:58.760
So that's certainly something
that we'd like to do.

00:36:58.760 --> 00:37:00.880
We've done a little bit
of that kind of thing

00:37:00.880 --> 00:37:06.125
so far, but certainly
more of that is needed.

00:37:06.125 --> 00:37:07.500
We'd really like
to go ultimately

00:37:07.500 --> 00:37:10.480
towards identifying a
sequence of steps that went

00:37:10.480 --> 00:37:14.670
from, say, a state
that's perfectly normal,

00:37:14.670 --> 00:37:18.900
but just happens to be more
likely to lead to some unsavory

00:37:18.900 --> 00:37:21.490
state than other ones.

00:37:21.490 --> 00:37:23.970
And then see what is
kind of brewing up

00:37:23.970 --> 00:37:27.500
until some operationally
significant anomaly actually

00:37:27.500 --> 00:37:30.600
takes place.

00:37:30.600 --> 00:37:35.430
We do have a facility, it's
called the NASA Earth Exchange.

00:37:35.430 --> 00:37:38.680
So that actually ties in
NASA's supercomputing assets

00:37:38.680 --> 00:37:42.890
and massive data
storage, together with I

00:37:42.890 --> 00:37:46.310
guess you could say kind of a
social networking/collaborative

00:37:46.310 --> 00:37:49.470
system that allows, in
this case, earth scientists

00:37:49.470 --> 00:37:51.960
to run different analysis,
algorithms on massive data

00:37:51.960 --> 00:37:56.870
sets and document them
for reproducibility

00:37:56.870 --> 00:37:59.030
and for sharing
with collaborators.

00:37:59.030 --> 00:38:04.630
And we had a project funded
competitively by NASA

00:38:04.630 --> 00:38:07.280
to implement our data
mining algorithms for use

00:38:07.280 --> 00:38:10.460
within the NASA Earth Exchange.

00:38:10.460 --> 00:38:12.669
Here I just describe
some of the partners

00:38:12.669 --> 00:38:14.710
that we've had in our,
especially on the aviation

00:38:14.710 --> 00:38:18.560
safety side, in our work.

00:38:18.560 --> 00:38:22.060
So as far as how many
of you can get involved,

00:38:22.060 --> 00:38:25.250
we have a system
called DASHlink.

00:38:25.250 --> 00:38:29.144
Blue may not be the best font
here, but this is in HTTPS.

00:38:29.144 --> 00:38:30.060
Dashlink.ndc.nasa.gov.

00:38:35.540 --> 00:38:37.660
It's a collaborative website.

00:38:37.660 --> 00:38:39.740
It's for people who are
interested in data mining

00:38:39.740 --> 00:38:43.040
and systems health
management primarily.

00:38:43.040 --> 00:38:44.620
Any of you can join.

00:38:44.620 --> 00:38:46.970
You would need a civil
servant, a NASA civil servant

00:38:46.970 --> 00:38:47.640
to approve you.

00:38:47.640 --> 00:38:49.160
I would be happy to do that.

00:38:49.160 --> 00:38:53.770
Please do mention this
talk as part of that.

00:38:53.770 --> 00:38:58.670
And this is a place where you
can set up profiles of your own

00:38:58.670 --> 00:38:59.860
describing your research.

00:38:59.860 --> 00:39:02.680
You can set up project pages.

00:39:02.680 --> 00:39:06.200
You can set up
data sets that you

00:39:06.200 --> 00:39:09.070
are allowed to
release to the public,

00:39:09.070 --> 00:39:13.030
and you make them available
for others to work with.

00:39:13.030 --> 00:39:15.170
We put some of the
data sets that we're

00:39:15.170 --> 00:39:16.570
allowed to release on there.

00:39:16.570 --> 00:39:20.280
And then our data mining
algorithms, we open source them

00:39:20.280 --> 00:39:21.950
and make them
available on DASHlink.

00:39:21.950 --> 00:39:24.170
So the MKAD
algorithm I described

00:39:24.170 --> 00:39:26.610
is available up there
for people to use.

00:39:26.610 --> 00:39:28.860
And we, in fact,
have had carriers

00:39:28.860 --> 00:39:31.110
that have gone to this,
downloaded the algorithms

00:39:31.110 --> 00:39:33.140
and tried them out on their own.

00:39:33.140 --> 00:39:36.220
And we'll help answer
questions within reason.

00:39:40.760 --> 00:39:47.030
So this is our team at NASA.

00:39:47.030 --> 00:39:50.000
You can see right now,
we're at, what, 10 people,

00:39:50.000 --> 00:39:54.550
split about evenly between
researchers and programmers

00:39:54.550 --> 00:39:56.460
and support type.

00:39:56.460 --> 00:40:01.390
And of course, most of the
work that I described here

00:40:01.390 --> 00:40:05.610
is funded by our Aeronautics
Research Mission Directorate,

00:40:05.610 --> 00:40:10.660
but we do have certain also
externally funded projects.

00:40:10.660 --> 00:40:13.510
The NASA Science
Mission Directorate also

00:40:13.510 --> 00:40:15.400
provides funding, but
they do it entirely

00:40:15.400 --> 00:40:18.850
on a competitive basis,
whether the people proposing

00:40:18.850 --> 00:40:20.480
to do the work are
from NASA or not.

00:40:20.480 --> 00:40:23.110
So then that's another way.

00:40:23.110 --> 00:40:24.830
The NASA Engineering
and Safety Center

00:40:24.830 --> 00:40:27.370
you can think of as
an internal consulting

00:40:27.370 --> 00:40:30.770
arm, where if a problem
comes up where they need

00:40:30.770 --> 00:40:32.690
some kind of quick
turnaround solution, then

00:40:32.690 --> 00:40:35.023
they often go to the NASA
Engineering and Safety Center.

00:40:35.023 --> 00:40:36.860
And we have gotten
involved where

00:40:36.860 --> 00:40:38.980
it was felt that data
mining could be of help.

00:40:41.560 --> 00:40:45.990
So I put my email
address up there

00:40:45.990 --> 00:40:47.860
in case you want to
hound me about anything

00:40:47.860 --> 00:40:49.840
I've mentioned here.

00:40:49.840 --> 00:40:54.550
And this is just some reading,
in case you're interested.

00:40:54.550 --> 00:40:59.800
So this first paper
here describes our work

00:40:59.800 --> 00:41:03.000
on anomaly detection
for the LAX area,

00:41:03.000 --> 00:41:06.310
describing many more anomalies
than what I could have here.

00:41:06.310 --> 00:41:08.010
The second paper
describes our work

00:41:08.010 --> 00:41:11.780
for the Denver and
New York Metroplex.

00:41:11.780 --> 00:41:14.810
This third paper here goes into
the Multiple Kernel Anomaly

00:41:14.810 --> 00:41:17.140
Detection algorithm,
and it gives a few

00:41:17.140 --> 00:41:20.810
results involving individual
aircraft, the, what's called,

00:41:20.810 --> 00:41:24.960
Flight Operations Quality
Assurance or FOQA data.

00:41:24.960 --> 00:41:28.922
And then this last one
was one I didn't end up

00:41:28.922 --> 00:41:29.880
getting into this work.

00:41:29.880 --> 00:41:32.610
But we've developed
an algorithm that's

00:41:32.610 --> 00:41:34.950
primarily based on inverse
reinforcement learning

00:41:34.950 --> 00:41:37.990
but has a standard reinforcement
learning component to it

00:41:37.990 --> 00:41:41.930
as well, that we use for
the problem of identifying

00:41:41.930 --> 00:41:43.830
precursors to
particular anomalies.

00:41:43.830 --> 00:41:46.610
So what this paper
describes is the case where

00:41:46.610 --> 00:41:49.640
you have identified,
I think I described

00:41:49.640 --> 00:41:51.090
earlier the high
speed exceedance.

00:41:51.090 --> 00:41:54.210
So where during landing
you're going too fast

00:41:54.210 --> 00:41:55.990
for the particular altitude.

00:41:55.990 --> 00:41:59.590
So with his algorithm we
were able to set that up

00:41:59.590 --> 00:42:03.040
as the effect, and
then our algorithm

00:42:03.040 --> 00:42:06.110
is able to identify what seemed
to be the precursors to that.

00:42:06.110 --> 00:42:10.530
So we end up identifying I
guess what you can consider kind

00:42:10.530 --> 00:42:13.130
of an envelope of energy
state, where you can say that

00:42:13.130 --> 00:42:15.590
even earlier in the flight,
if you were traveling faster

00:42:15.590 --> 00:42:18.270
than a certain speed,
you're probably

00:42:18.270 --> 00:42:20.140
kind of beyond some
point of no return,

00:42:20.140 --> 00:42:23.950
so to speak, at least given
the data that we have.

00:42:23.950 --> 00:42:26.240
So that's just a rather
preliminary test,

00:42:26.240 --> 00:42:31.100
but we certainly do plan to
use this to identify precursors

00:42:31.100 --> 00:42:34.950
to other particular problems
that, say, a carrier or FAA

00:42:34.950 --> 00:42:38.650
or others identify as a problem
they're particularly interested

00:42:38.650 --> 00:42:40.150
in, for which they
would really like

00:42:40.150 --> 00:42:43.490
to know what the precursors are.

00:42:43.490 --> 00:42:47.870
So that I believe is the extent
of what I had planned to say.

00:42:47.870 --> 00:42:50.370
I guess I can put that
last slide up and take

00:42:50.370 --> 00:42:52.077
any questions.

00:42:52.077 --> 00:42:53.410
MALE SPEAKER: Thank you Dr. Oza.

00:42:53.410 --> 00:42:55.810
For the benefit of
those who are remote,

00:42:55.810 --> 00:42:57.730
if you are going
to ask a question

00:42:57.730 --> 00:43:00.560
please use this microphone.

00:43:00.560 --> 00:43:02.770
AUDIENCE: Can these
detection be used

00:43:02.770 --> 00:43:07.900
to detect the drones
when they are going

00:43:07.900 --> 00:43:09.970
in the wrong directions,
things like that?

00:43:09.970 --> 00:43:12.684
Because I imagine
in the future when

00:43:12.684 --> 00:43:14.100
we will have more
and more drones,

00:43:14.100 --> 00:43:17.110
there will be accidents.

00:43:17.110 --> 00:43:20.585
NIKUNJ OZA: Yeah, I'd
certainly think so.

00:43:20.585 --> 00:43:23.490
You would have to have
enough traffic of drones

00:43:23.490 --> 00:43:27.700
to where something like
MKAD can get a sense of what

00:43:27.700 --> 00:43:31.140
would represent normal
behavior of the drones.

00:43:31.140 --> 00:43:33.570
So that you can say that
let's say the drone that's

00:43:33.570 --> 00:43:36.680
going in the wrong direction
should be quite atypical

00:43:36.680 --> 00:43:38.180
given the data that you have.

00:43:38.180 --> 00:43:41.570
But yeah, I think actually
the algorithm as we have it,

00:43:41.570 --> 00:43:44.430
with the latitude,
longitude, altitude,

00:43:44.430 --> 00:43:47.950
and maybe distance to nearest
aircraft could be relevant.

00:43:47.950 --> 00:43:49.030
But yeah, I think so.

00:43:53.450 --> 00:43:56.660
Oh, I should add, though, that
we at least so far have not

00:43:56.660 --> 00:43:59.140
set it up for real
time monitoring.

00:43:59.140 --> 00:44:03.994
So yeah, this is something that
it's really set up right now

00:44:03.994 --> 00:44:05.910
to only operate for the
case where, let's say,

00:44:05.910 --> 00:44:07.550
flights have already
been completed.

00:44:07.550 --> 00:44:10.090
And then after the fact you
are looking for anomalies.

00:44:10.090 --> 00:44:13.070
So yeah, for the
real time case I,

00:44:13.070 --> 00:44:14.890
think that's
something that we're

00:44:14.890 --> 00:44:19.390
thinking of now,
more than before.

00:44:19.390 --> 00:44:22.619
Given the way the NASA's
projects are evolving,

00:44:22.619 --> 00:44:24.910
I think we're going to be
looking at the real time case

00:44:24.910 --> 00:44:28.449
a little bit more in the future.

00:44:28.449 --> 00:44:29.490
AUDIENCE: So I'm curious.

00:44:29.490 --> 00:44:32.320
For an incident where an
airplane ends up in the Hudson

00:44:32.320 --> 00:44:36.610
because some birds affected the
engine, do you filter that out,

00:44:36.610 --> 00:44:39.160
or do you actually
include that in as a way

00:44:39.160 --> 00:44:42.360
to detect similar anomalies?

00:44:42.360 --> 00:44:45.800
NIKUNJ OZA: So we
don't necessarily

00:44:45.800 --> 00:44:48.656
eliminate particular
flights right now.

00:44:48.656 --> 00:44:50.280
I mean I know that
the data that we get

00:44:50.280 --> 00:44:53.490
does not include, say,
military flights or other ones

00:44:53.490 --> 00:44:58.720
where they would rather that we
not look into them any further.

00:44:58.720 --> 00:45:03.180
But yeah, I think that
the inclusion of flights

00:45:03.180 --> 00:45:08.010
that are anomalous shouldn't
really affect us too much.

00:45:08.010 --> 00:45:11.030
I guess if a certain flight
occurs too many times

00:45:11.030 --> 00:45:14.320
it may start to show up as
normal, given our algorithm.

00:45:14.320 --> 00:45:16.760
So that may be of concern.

00:45:16.760 --> 00:45:19.200
But something like this,
it should be rare enough

00:45:19.200 --> 00:45:21.700
that we'd be able to find it.

00:45:21.700 --> 00:45:25.115
AUDIENCE: Its it OK to ask about
this multi-kernel SVM thing?

00:45:25.115 --> 00:45:26.530
NIKUNJ OZA: Oh, sure.

00:45:26.530 --> 00:45:30.510
AUDIENCE: So the [INAUDIBLE]
combination of kernels--

00:45:30.510 --> 00:45:32.800
is it kernel, itself, isn't it?

00:45:32.800 --> 00:45:33.890
NIKUNJ OZA: Oh, yes.

00:45:33.890 --> 00:45:36.470
AUDIENCE: So for the
sake of understanding,

00:45:36.470 --> 00:45:40.240
would it be right to say that
you are looking for a kernel--

00:45:40.240 --> 00:45:46.320
well, for a kernel of this
form, which [INAUDIBLE]

00:45:46.320 --> 00:45:51.120
margin of algorithm,
something like-- could you

00:45:51.120 --> 00:45:55.240
please, if possible,
decouple the kernel

00:45:55.240 --> 00:46:00.490
you are looking from
the algorithm itself?

00:46:00.490 --> 00:46:04.890
Is it possible to understand
the properties of this kernel

00:46:04.890 --> 00:46:08.800
without knowing the SVM itself?

00:46:08.800 --> 00:46:10.180
NIKUNJ OZA: Oh yeah.

00:46:10.180 --> 00:46:11.490
In fact, yeah.

00:46:11.490 --> 00:46:14.097
We are able to develop the
kernels the way they normally

00:46:14.097 --> 00:46:16.180
are developed, just making
sure they follow things

00:46:16.180 --> 00:46:19.660
like the Mercer's conditions.

00:46:19.660 --> 00:46:24.720
In fact, for us-- yeah, one
of the good properties of this

00:46:24.720 --> 00:46:27.450
is that we are able to share
the kernels with domain experts

00:46:27.450 --> 00:46:29.385
and they're actually
able to understand

00:46:29.385 --> 00:46:30.260
that they make sense.

00:46:30.260 --> 00:46:33.550
So for example, for the case
of the individual flights where

00:46:33.550 --> 00:46:36.930
we have the discrete
and continuous,

00:46:36.930 --> 00:46:40.966
just for example
for the discrete,

00:46:40.966 --> 00:46:43.340
each flight is just going to
have a sequence of switches,

00:46:43.340 --> 00:46:44.340
essentially.

00:46:44.340 --> 00:46:45.970
And so the kernel we
use there actually

00:46:45.970 --> 00:46:48.800
is the normalized longest
common sub sequence.

00:46:48.800 --> 00:46:51.302
So in that case,
like two flights,

00:46:51.302 --> 00:46:52.760
let's say they're
exactly the same.

00:46:52.760 --> 00:46:54.200
Their common sub
sequence is going

00:46:54.200 --> 00:46:56.199
to be the full flight,
right, so that would then

00:46:56.199 --> 00:46:58.300
end up normalizing
to a length of one.

00:46:58.300 --> 00:47:00.050
Whereas if two flights
are very different,

00:47:00.050 --> 00:47:02.091
there's going to be only
a very small part that's

00:47:02.091 --> 00:47:02.740
common to them.

00:47:02.740 --> 00:47:04.820
And so the length of
that would normalize

00:47:04.820 --> 00:47:07.450
to something that's
relatively close to zero.

00:47:07.450 --> 00:47:09.160
And so that's
something where we were

00:47:09.160 --> 00:47:10.890
able to explain
to domain experts

00:47:10.890 --> 00:47:14.154
and they were able to say
that, OK, this make sense.

00:47:14.154 --> 00:47:16.570
We did end up adjusting the
values of some of the switches

00:47:16.570 --> 00:47:20.090
because some of them were
deemed to not be as relevant.

00:47:20.090 --> 00:47:22.700
But then we were just
able to then include that

00:47:22.700 --> 00:47:25.510
here as part of the algorithm.

00:47:25.510 --> 00:47:28.890
And then when we transitioned
over to the trajectory domain,

00:47:28.890 --> 00:47:30.570
we kept the algorithm
exactly the same,

00:47:30.570 --> 00:47:33.640
except just swapped out kernels.

00:47:33.640 --> 00:47:36.340
AUDIENCE: I might have
a follow-up question.

00:47:36.340 --> 00:47:39.140
Is there any problems you
know of with this approach,

00:47:39.140 --> 00:47:43.030
like maybe an
algorithm attempting

00:47:43.030 --> 00:47:51.865
to prefer some kernels over the
others or something like that?

00:47:51.865 --> 00:47:52.990
NIKUNJ OZA: Yeah, actually.

00:47:52.990 --> 00:47:53.490
Yeah.

00:47:56.820 --> 00:48:01.660
I mean certainly
that can be an issue.

00:48:01.660 --> 00:48:04.570
I mean one issue that we haven't
dealt with at all, really,

00:48:04.570 --> 00:48:07.260
is the case where you just
have these separate kernels

00:48:07.260 --> 00:48:09.450
and what kind of weight
are you giving to them.

00:48:09.450 --> 00:48:12.070
So should the text
kernel, for example,

00:48:12.070 --> 00:48:16.030
have the same weight as the
discrete and the continuous?

00:48:16.030 --> 00:48:16.890
Not really sure.

00:48:20.660 --> 00:48:22.570
And then I guess
another issue also

00:48:22.570 --> 00:48:28.180
that we kind of have noticed is
that for the continuous kernel,

00:48:28.180 --> 00:48:30.950
the way we actually do
it is that we take all

00:48:30.950 --> 00:48:34.820
of the different variables,
however many they were.

00:48:34.820 --> 00:48:36.530
I don't think we've
ever used more

00:48:36.530 --> 00:48:40.120
than 20 continuous
variables at once.

00:48:40.120 --> 00:48:41.890
But what we actually
do is discretize

00:48:41.890 --> 00:48:45.570
each of them using a Symbolic
Aggregate approXimation,

00:48:45.570 --> 00:48:48.950
the SAX approximation that
Eamonn Keogh and his colleagues

00:48:48.950 --> 00:48:49.780
developed.

00:48:49.780 --> 00:48:52.780
It's a way of just discretizing
all the different variables.

00:48:52.780 --> 00:48:55.470
And then we actually
put all of those

00:48:55.470 --> 00:48:59.680
into a single discrete sequence
corresponding to the times

00:48:59.680 --> 00:49:02.780
when each variable has a
change from one discrete bin

00:49:02.780 --> 00:49:03.530
to another.

00:49:03.530 --> 00:49:05.620
So we know the times at
which each variable has

00:49:05.620 --> 00:49:09.530
a change in the
discretized version.

00:49:09.530 --> 00:49:11.280
Note the time at which
it happened, and we

00:49:11.280 --> 00:49:15.594
put those changes in order
into a single sequence.

00:49:15.594 --> 00:49:17.010
Now, the problem
then with that is

00:49:17.010 --> 00:49:19.530
that you're taking so many of
these continuous variables,

00:49:19.530 --> 00:49:21.196
putting them into a
single sequence that

00:49:21.196 --> 00:49:25.030
has a weight of like
one-third or one-quarter.

00:49:25.030 --> 00:49:27.880
Now, there may be significant
changes in one or two

00:49:27.880 --> 00:49:31.030
of the variables that are
kind of getting washed out

00:49:31.030 --> 00:49:33.030
in the process of doing
this combination with so

00:49:33.030 --> 00:49:35.990
many other variables.

00:49:35.990 --> 00:49:38.660
That's admittedly something
we still have to resolve.

00:49:41.007 --> 00:49:43.090
Is that along the lines
of what you're mentioning?

00:49:43.090 --> 00:49:43.866
I'm sorry if I'm--

00:49:43.866 --> 00:49:44.740
AUDIENCE: Yeah.

00:49:44.740 --> 00:49:49.610
And may I ask the last question?

00:49:49.610 --> 00:49:50.340
Sorry.

00:49:50.340 --> 00:49:54.410
So I heard that sometimes when
you try to discover anomalies,

00:49:54.410 --> 00:49:58.660
you have a lot of normal cases
and only a few anomalies,

00:49:58.660 --> 00:50:00.910
and that throws
the algorithm off.

00:50:00.910 --> 00:50:03.010
So do you have such problems?

00:50:03.010 --> 00:50:06.950
And if you do, then how
do you deal with them?

00:50:06.950 --> 00:50:14.660
NIKUNJ OZA: So we haven't had a
huge problem with them so far.

00:50:14.660 --> 00:50:17.180
I guess maybe the
biggest problem we've had

00:50:17.180 --> 00:50:21.360
is that for the case of say
the flight recorded data,

00:50:21.360 --> 00:50:23.780
there tend to be a fair
number of go-arounds.

00:50:23.780 --> 00:50:27.390
So we tend to get a
large number of them.

00:50:27.390 --> 00:50:30.070
And they are of
varying interest.

00:50:30.070 --> 00:50:31.550
Some of them are
just routine ones

00:50:31.550 --> 00:50:34.110
where they say, OK, it's
not really a big deal.

00:50:34.110 --> 00:50:36.910
Some of them are
of concern not so

00:50:36.910 --> 00:50:39.280
much for the go-around
itself, but maybe

00:50:39.280 --> 00:50:41.340
what prompted the go-around.

00:50:41.340 --> 00:50:44.200
So I showed examples of things
like the potential overtake

00:50:44.200 --> 00:50:45.160
situation.

00:50:45.160 --> 00:50:48.680
So the problem is not so much
the go-around but the overtake.

00:50:48.680 --> 00:50:51.322
But sometimes go-arounds seem
to happen for certain, whatever

00:50:51.322 --> 00:50:52.780
other reason and
there doesn't seem

00:50:52.780 --> 00:50:54.780
to be a concrete
precursor to that

00:50:54.780 --> 00:50:58.220
and it's not that big a deal.

00:50:58.220 --> 00:51:02.240
That, overall, is probably
the biggest issue we faced.

00:51:02.240 --> 00:51:05.880
Also, with the
trajectory anomalies,

00:51:05.880 --> 00:51:10.240
we haven't really had the case
where a flight was identified

00:51:10.240 --> 00:51:12.240
as, let's say, abnormal
that turned out

00:51:12.240 --> 00:51:14.680
to be like perfectly normal.

00:51:14.680 --> 00:51:17.160
But sometimes those are
not of safety concerns,

00:51:17.160 --> 00:51:19.390
because let's say it's
maybe an unusual trajectory

00:51:19.390 --> 00:51:21.140
but it happens at night.

00:51:21.140 --> 00:51:23.610
So there aren't too many
other aircraft around

00:51:23.610 --> 00:51:25.220
so it's not such a big deal.

00:51:25.220 --> 00:51:28.410
Or I described the problem
of the cargo aircraft

00:51:28.410 --> 00:51:30.970
where passenger comfort
is not really an issue.

00:51:30.970 --> 00:51:33.742
So in that case trajectory
anomalies are OK.

00:51:33.742 --> 00:51:35.200
We have had cases,
actually, though

00:51:35.200 --> 00:51:38.390
with unusual trajectories
where it turned out instead

00:51:38.390 --> 00:51:40.910
of a commercial aircraft,
it was a regional jet.

00:51:40.910 --> 00:51:42.510
And the regional
jets being smaller

00:51:42.510 --> 00:51:44.340
are much more maneuverable.

00:51:44.340 --> 00:51:49.240
So I guess that's one case
where something that's normal

00:51:49.240 --> 00:51:52.110
pops up as an anomaly for us.

00:51:52.110 --> 00:51:54.680
We've had a few of those.

00:51:54.680 --> 00:51:58.700
But overall, it hasn't
been a big problem.

00:51:58.700 --> 00:52:00.990
AUDIENCE: So most of the
examples that you showed

00:52:00.990 --> 00:52:04.570
were of anomalies that were
sort of detected in real time

00:52:04.570 --> 00:52:08.510
by the controllers or were of
no concern to the controllers.

00:52:08.510 --> 00:52:12.390
Did you find any that were not
detected and perhaps should

00:52:12.390 --> 00:52:13.860
have been?

00:52:13.860 --> 00:52:17.720
NIKUNJ OZA: So actually, yeah.

00:52:17.720 --> 00:52:21.110
So actually, for the
ones that I showed,

00:52:21.110 --> 00:52:27.160
they were ones where
safety analysts did

00:52:27.160 --> 00:52:29.780
say that it should go
through some further review

00:52:29.780 --> 00:52:32.180
where they had not
originally planned to.

00:52:32.180 --> 00:52:35.340
So as you said, they
were likely things

00:52:35.340 --> 00:52:37.510
where during the
operation, yes, controller

00:52:37.510 --> 00:52:39.300
realizes OK something
was happening,

00:52:39.300 --> 00:52:41.910
and let's say a go-around
should be issued.

00:52:41.910 --> 00:52:46.300
But they didn't decide to
put it through some kind

00:52:46.300 --> 00:52:47.840
of further safety review.

00:52:47.840 --> 00:52:49.300
And it was after
our algorithm was

00:52:49.300 --> 00:52:51.090
run that they decided
that it should

00:52:51.090 --> 00:52:54.800
go through some further
review at least.

00:52:54.800 --> 00:52:58.310
MALE SPEAKER: OK, thank you very
much, Dr. Oza, and thank you.

