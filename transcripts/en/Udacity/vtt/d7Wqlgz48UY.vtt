WEBVTT
Kind: captions
Language: en

00:00:05.231 --> 00:00:08.160
Okay. So how do you want to cover nested information?

00:00:08.160 --> 00:00:10.260
&gt;&gt; I mean, it's not too tricky.

00:00:10.260 --> 00:00:11.320
You know what?

00:00:11.320 --> 00:00:14.040
Let's use object literal notation here.

00:00:14.040 --> 00:00:18.280
You could accomplish the same thing using dot or bracket notation.

00:00:18.280 --> 00:00:21.360
But, I want to show the students a really useful tool for making sure your

00:00:21.360 --> 00:00:25.690
data are formatted properly which relies on object literal notation.

00:00:25.690 --> 00:00:26.900
&gt;&gt; So you mean JSON?

00:00:26.900 --> 00:00:27.670
&gt;&gt; Yep.

00:00:27.670 --> 00:00:30.410
JavaScript Object Notation.

00:00:30.410 --> 00:00:31.160
Hey James?

00:00:31.160 --> 00:00:33.490
You had two majors, right?

00:00:33.490 --> 00:00:36.530
Let's make it a JSON object that shows nested data.

00:00:36.530 --> 00:00:37.360
Okay.

00:00:37.360 --> 00:00:42.140
So, I'm seeing one big object with one property called schools.

00:00:43.740 --> 00:00:47.050
In schools is a list of two objects, we know it's a list because we

00:00:47.050 --> 00:00:49.710
have these square brackets here, indicating it's an array.

00:00:51.000 --> 00:00:56.920
The first object has the name Eckerd College, City of St. Pete and so on.

00:00:57.990 --> 00:01:01.880
The second object has a name of Nova Southeastern.

00:01:01.880 --> 00:01:03.150
In the city of Fort Lauderdale.

00:01:05.200 --> 00:01:07.060
This looks like a good JSON to me.

00:01:07.060 --> 00:01:08.460
Mind if we check it?

00:01:08.460 --> 00:01:08.960
&gt;&gt; Not at all.

