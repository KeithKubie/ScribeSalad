WEBVTT
Kind: captions
Language: en

00:00:06.609 --> 00:00:08.650
JOSE ALCERRECA: Hi, and
welcome to this new video

00:00:08.650 --> 00:00:10.070
about the AdSense
Management API.

00:00:10.070 --> 00:00:10.890
I'm Jose Alcerreca.

00:00:10.890 --> 00:00:12.180
SERGIO GOMES: And
I'm Sergio Gomes.

00:00:12.180 --> 00:00:13.050
JOSE ALCERRECA: This
session is meant

00:00:13.050 --> 00:00:15.770
to be a getting started guide,
so we'll cover everything

00:00:15.770 --> 00:00:20.440
from APIs in general to the
new features in version 1.4.

00:00:20.440 --> 00:00:22.080
So if you're familiar
with the API,

00:00:22.080 --> 00:00:24.615
you can jump to the more
advanced topics using the links

00:00:24.615 --> 00:00:26.740
that you will find in the
description of this video

00:00:26.740 --> 00:00:29.182
if you're watching from YouTube.

00:00:29.182 --> 00:00:31.640
SERGIO GOMES: So we should
start with a little introduction

00:00:31.640 --> 00:00:32.940
to AdSense.

00:00:32.940 --> 00:00:35.890
AdSense is Google's program
for publishers to earn revenue

00:00:35.890 --> 00:00:38.520
by displaying advertising
on their websites.

00:00:38.520 --> 00:00:41.060
And the way the AdSense
management API ties

00:00:41.060 --> 00:00:44.420
in with this is it allows you
access to your AdSense data

00:00:44.420 --> 00:00:45.780
programmatically.

00:00:45.780 --> 00:00:48.310
This includes all of your
inventory data, which

00:00:48.310 --> 00:00:51.540
would be ad units,
ad clients, channels,

00:00:51.540 --> 00:00:54.760
all of that information, as well
as the ability to run reports

00:00:54.760 --> 00:00:58.630
on your data and other smaller
features, such as the ability

00:00:58.630 --> 00:01:01.510
to list your alerts.

00:01:01.510 --> 00:01:02.440
JOSE ALCERRECA: OK.

00:01:02.440 --> 00:01:03.670
So what is an API?

00:01:03.670 --> 00:01:04.760
Let's see an example.

00:01:04.760 --> 00:01:07.250
Imagine you want to create
a widget for your smartphone

00:01:07.250 --> 00:01:08.830
that checks the weather.

00:01:08.830 --> 00:01:11.550
You'll need somewhere to
fetch this information from.

00:01:11.550 --> 00:01:14.030
In this example, we created
this fake weather API

00:01:14.030 --> 00:01:16.900
by specifying a city
in the query parameter.

00:01:16.900 --> 00:01:19.980
If we open that with a browser,
we get something like this.

00:01:19.980 --> 00:01:21.860
A response with
a known structure

00:01:21.860 --> 00:01:23.470
that we can easily parse.

00:01:23.470 --> 00:01:27.220
Usually requests and
responses use XML or JSON

00:01:27.220 --> 00:01:30.090
as container formats.

00:01:30.090 --> 00:01:32.000
So let's query a real API now.

00:01:32.000 --> 00:01:36.390
This is the API Explorer, which
is an awesome tool for learning

00:01:36.390 --> 00:01:39.300
how to use Google
APIs and also is

00:01:39.300 --> 00:01:41.240
great for debugging problems.

00:01:41.240 --> 00:01:44.650
In this case, we are making
our request against the YouTube

00:01:44.650 --> 00:01:49.100
Data API, and we're using the
youtube.search.list method.

00:01:49.100 --> 00:01:52.100
The only parameter that
I have to fill in here

00:01:52.100 --> 00:01:56.080
is [INAUDIBLE] parameters
[? of ?] part and q,

00:01:56.080 --> 00:02:00.150
which is the string
that I'm looking for.

00:02:00.150 --> 00:02:04.620
If I press Execute
here, you can see

00:02:04.620 --> 00:02:07.980
the request that I've just
made and the response, which

00:02:07.980 --> 00:02:13.570
is a JSON document with all the
results that I'm looking for.

00:02:15.579 --> 00:02:17.620
SERGIO GOMES: So of course,
what you've seen here

00:02:17.620 --> 00:02:21.460
so far is all raw
requests against the API.

00:02:21.460 --> 00:02:24.350
Now, you don't have to
code everything by hand.

00:02:24.350 --> 00:02:25.980
We actually have
client libraries

00:02:25.980 --> 00:02:27.938
for a number of different
programming languages

00:02:27.938 --> 00:02:30.930
that make your job a
lot easier by handling

00:02:30.930 --> 00:02:33.760
a lot of the boilerplate
stuff such as authentication,

00:02:33.760 --> 00:02:36.920
discovering services--
since we have so many APIs,

00:02:36.920 --> 00:02:39.020
we actually built
a Discovery Service

00:02:39.020 --> 00:02:42.117
that lists all of them--
and also other things

00:02:42.117 --> 00:02:43.700
such as building the
requests, parsing

00:02:43.700 --> 00:02:45.962
the responses, et cetera.

00:02:45.962 --> 00:02:47.420
JOSE ALCERRECA: So
here you can see

00:02:47.420 --> 00:02:51.020
examples for four
different languages.

00:02:51.020 --> 00:02:53.980
As you can see, it makes
the requests much easier

00:02:53.980 --> 00:02:57.500
to use than coding everything
by hand, especially handling

00:02:57.500 --> 00:02:59.190
things like authentication.

00:02:59.190 --> 00:03:02.210
The first example
is Java and lists

00:03:02.210 --> 00:03:04.840
the ad clients of an account.

00:03:04.840 --> 00:03:09.120
In the second example,
it's a Python example

00:03:09.120 --> 00:03:11.950
that gets the ad
units for a client ID.

00:03:11.950 --> 00:03:15.490
The PHP sample gets the custom
channel supplied to an ad unit.

00:03:15.490 --> 00:03:20.200
And the last example defines
how you would configure a report

00:03:20.200 --> 00:03:22.414
in C#.

00:03:22.414 --> 00:03:24.830
SERGIO GOMES: So some of the
important features-- the most

00:03:24.830 --> 00:03:27.680
important features, actually--
when you're doing reporting

00:03:27.680 --> 00:03:30.340
is the ability to have
your own channels.

00:03:30.340 --> 00:03:32.410
And these channels
come in two types--

00:03:32.410 --> 00:03:34.550
custom channels
and URL channels.

00:03:34.550 --> 00:03:37.180
The first, custom channels,
are defined by you,

00:03:37.180 --> 00:03:42.400
and you can assign an ad unit or
multiple ad units to a channel.

00:03:42.400 --> 00:03:45.200
And so this allows you
to give specific meanings

00:03:45.200 --> 00:03:46.374
to sets of ad units.

00:03:46.374 --> 00:03:48.790
You could have, for example,
a set for all of the ad units

00:03:48.790 --> 00:03:51.750
that display on the top
versus all of the ad units

00:03:51.750 --> 00:03:53.150
that display on the left.

00:03:53.150 --> 00:03:56.220
Or you could assign different
meanings such as categories

00:03:56.220 --> 00:03:58.740
of the pages that you're
displaying these on.

00:03:58.740 --> 00:04:00.550
In terms of the
URL channels, these

00:04:00.550 --> 00:04:03.650
are actually filled
in automatically,

00:04:03.650 --> 00:04:08.365
depending on the URL of the page
that the ads are displayed on.

00:04:11.040 --> 00:04:13.910
So in terms of authentication
and authorization,

00:04:13.910 --> 00:04:16.899
the API uses the
OAuth2 standard.

00:04:16.899 --> 00:04:19.240
And we support two different
types of application-- web

00:04:19.240 --> 00:04:23.830
application, which handles
all of the applications

00:04:23.830 --> 00:04:26.700
both from server side and
client side perspective,

00:04:26.700 --> 00:04:30.020
and installed
applications, which

00:04:30.020 --> 00:04:33.280
can go from anything from a
full GUI desktop application

00:04:33.280 --> 00:04:36.810
to just a simple Python script
that runs in a cron job.

00:04:36.810 --> 00:04:40.020
The AdSense Management API does
not support service accounts

00:04:40.020 --> 00:04:43.030
because service accounts
do not allow access

00:04:43.030 --> 00:04:48.060
to protected user data,
which AdSense data is.

00:04:48.060 --> 00:04:52.280
In terms of reports, you
have the full flexibility

00:04:52.280 --> 00:04:54.980
of the AdSense
reports at your hand.

00:04:54.980 --> 00:04:57.030
So you can run the
exact same reports

00:04:57.030 --> 00:04:59.830
that you would run on
the AdSense website.

00:04:59.830 --> 00:05:04.280
This includes running a report
for one or multiple ad clients.

00:05:04.280 --> 00:05:07.090
Same thing for ad units,
channels, et cetera.

00:05:07.090 --> 00:05:09.330
You can configure
these any way you want.

00:05:09.330 --> 00:05:11.449
You can add filters, et cetera.

00:05:11.449 --> 00:05:13.490
JOSE ALCERRECA: So if you
need to fetch a report,

00:05:13.490 --> 00:05:17.370
you should check out the list
of dimensions and metrics

00:05:17.370 --> 00:05:20.060
available in
developers.google.com.

00:05:20.060 --> 00:05:25.290
Now let's see an example
using the APIs Explorer.

00:05:25.290 --> 00:05:30.550
In this case, I've pre-filled
the date range, the dimension,

00:05:30.550 --> 00:05:32.030
which is date.

00:05:32.030 --> 00:05:37.620
I added two metrics,
as you can see here,

00:05:37.620 --> 00:05:39.640
and now I can't really execute.

00:05:39.640 --> 00:05:40.950
I have to authorize first.

00:05:40.950 --> 00:05:46.080
So for that, I use this
button here, click Authorize,

00:05:46.080 --> 00:05:47.280
and we're good to go.

00:05:47.280 --> 00:05:49.488
SERGIO GOMES: That's actually
the OAuth2 [INAUDIBLE].

00:05:51.690 --> 00:05:53.720
JOSE ALCERRECA: It's
generated my request,

00:05:53.720 --> 00:06:00.660
and here I have the response
in a JSON file or object.

00:06:00.660 --> 00:06:03.280
SERGIO GOMES: So
in version 1.2, we

00:06:03.280 --> 00:06:05.750
introduced a couple of
new features-- Ad Styles

00:06:05.750 --> 00:06:07.030
and Saved Reports.

00:06:07.030 --> 00:06:09.650
The first one allows you to get
all of the styling information

00:06:09.650 --> 00:06:13.340
for an ad unit, which means
colors, fonts, corners,

00:06:13.340 --> 00:06:16.340
whether they're rounded or
not and how rounded they are.

00:06:16.340 --> 00:06:18.350
And the second
one, Saved Reports,

00:06:18.350 --> 00:06:20.590
allows you to run your
existing reports, which

00:06:20.590 --> 00:06:24.510
are configured in the
AdSense website via the API,

00:06:24.510 --> 00:06:28.010
and handle the results
programmatically.

00:06:28.010 --> 00:06:30.710
In v1.3, we added a few
new features as well.

00:06:30.710 --> 00:06:34.430
We added the ability to list
your existing account alerts.

00:06:34.430 --> 00:06:37.990
We added metadata to reporting,
which gives you the ability

00:06:37.990 --> 00:06:40.997
to list your
dimensions and metrics,

00:06:40.997 --> 00:06:43.580
the dimensions and metrics that
are available to your reports,

00:06:43.580 --> 00:06:45.730
as well as the
relationships between them,

00:06:45.730 --> 00:06:48.590
which ones you can use,
which ones you can combine,

00:06:48.590 --> 00:06:50.000
and which ones you can't.

00:06:50.000 --> 00:06:53.040
And we also added the ability
to generate ad code for existing

00:06:53.040 --> 00:06:55.810
ad units so you can get
the JavaScript snippets

00:06:55.810 --> 00:06:59.470
and insert them
into your website.

00:06:59.470 --> 00:07:00.910
JOSE ALCERRECA:
In version 1.4, we

00:07:00.910 --> 00:07:03.800
added a code to list
your payments, which

00:07:03.800 --> 00:07:05.610
was a highly requested feature.

00:07:05.610 --> 00:07:08.000
Also, now you can
delete alerts, which

00:07:08.000 --> 00:07:10.750
is the same thing as dismissing
them in the AdSense web

00:07:10.750 --> 00:07:11.940
interface.

00:07:11.940 --> 00:07:15.110
And finally, we added two fields
to the report response-- start

00:07:15.110 --> 00:07:16.510
date and end date.

00:07:16.510 --> 00:07:19.540
Especially important if
you're using relative dates

00:07:19.540 --> 00:07:22.750
like yesterday,
start of month, today

00:07:22.750 --> 00:07:25.750
minus one month, et cetera.

00:07:25.750 --> 00:07:28.410
If you want, you can
check the reporting guides

00:07:28.410 --> 00:07:32.110
to learn about this feature
in developers.google.com.

00:07:34.805 --> 00:07:36.930
SERGIO GOMES: So thank you
for watching this video.

00:07:36.930 --> 00:07:38.962
And speaking of
developers.google.com,

00:07:38.962 --> 00:07:41.020
you can find all of
our documentation

00:07:41.020 --> 00:07:43.870
at
developers.google.com/adsense.

00:07:43.870 --> 00:07:49.580
You can follow our blog at
googleadsdeveloper.blogspot.com,

00:07:49.580 --> 00:07:51.810
and you can follow
our Google+ page,

00:07:51.810 --> 00:07:53.420
which I'm not
going to spell out,

00:07:53.420 --> 00:07:55.680
but the URL is in the slide.

00:07:55.680 --> 00:07:56.415
You can see.

00:07:56.415 --> 00:07:56.670
JOSE ALCERRECA: OK.

00:07:56.670 --> 00:07:57.460
Thank you.

00:07:57.460 --> 00:07:59.480
SERGIO GOMES: Thank
you for watching.

