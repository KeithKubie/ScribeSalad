WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.000
Here's the idea of the protocol.

00:00:02.000 --> 00:00:05.000
First they agree on 2 shared values.

00:00:05.000 --> 00:00:07.000
The first is q, some large prime number,

00:00:07.000 --> 00:00:11.000
and the second is g, and g is a primitive root of q.

00:00:11.000 --> 00:00:14.000
What it means to be a primitive root is that for all numbers

00:00:14.000 --> 00:00:18.000
in the group Zq, that is the numbers 1, 2, through q-1,

00:00:18.000 --> 00:00:21.000
we can generate all those numbers by raising g to some integer power.

00:00:21.000 --> 00:00:24.000
If q is prime, it must have a primitive root,

00:00:24.000 --> 00:00:26.000
and there are ways to find these primitive roots.

00:00:26.000 --> 00:00:30.000
We could think of a brute force way of trying numbers until we find one.

00:00:30.000 --> 00:00:32.000
That would be very expensive for a large prime number,

00:00:32.000 --> 00:00:36.000
but there are more efficient ways to find them, which we won't talk about.

00:00:36.000 --> 00:00:38.000
That's what they start with, those 2 things.

00:00:38.000 --> 00:00:40.000
And then here's how the protocol works.

00:00:40.000 --> 00:00:44.000
Alice will select a large random number, and Bob will also select

00:00:44.000 --> 00:00:46.000
his own large random number.

00:00:46.000 --> 00:00:49.000
This is like selecting the secret paint colors.

00:00:49.000 --> 00:00:53.000
Then Alice will compute a value we'll call yA,

00:00:53.000 --> 00:00:57.000
and she'll compute that by raising g to the xA power

00:00:57.000 --> 00:01:00.000
and doing this modulo q.

00:01:00.000 --> 00:01:03.000
Bob will do the same thing but with his secret power xB.

00:01:03.000 --> 00:01:06.000
He'll raise g to the xB power modulo q.

00:01:06.000 --> 00:01:08.000
They'll exchange these values.

00:01:08.000 --> 00:01:10.000
Alice sends yA to Bob.

00:01:10.000 --> 00:01:13.000
Bob sends yB to Alice.

00:01:13.000 --> 00:01:17.000
And then Alice will compute a key that will be shared between Alice and Bob,

00:01:17.000 --> 00:01:22.000
and she'll compute that by raising the yB value that she received from Bob

00:01:22.000 --> 00:01:25.000
to the xA power and do that all modulo q.

00:01:25.000 --> 00:01:28.000
If this is a good key distribution protocol,

00:01:28.000 --> 00:01:31.000
then there should be a way for Bob to compute the same key.

00:01:31.000 --> 00:01:35.000
I'll see if you can figure that out yourself by making that a quiz.

00:01:35.000 --> 00:01:37.000
These are the possible choices.

00:01:37.000 --> 00:01:41.000
Which one of these should Bob compute to obtain the same key as Alice did here?

