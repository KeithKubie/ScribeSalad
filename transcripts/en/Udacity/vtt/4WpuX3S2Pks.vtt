WEBVTT
Kind: captions
Language: en

00:00:00.110 --> 00:00:04.975
And Java use packages to organize related classes. Now, everyone likes packages

00:00:04.975 --> 00:00:09.210
particularly on Christmas, but in Java, we, we use them all year long. Classes

00:00:09.210 --> 00:00:12.750
that have one responsibility, get put in one package and classes with a

00:00:12.750 --> 00:00:18.620
different responsibility, in a different one. For example, you've seen the

00:00:18.620 --> 00:00:24.808
package called java.util quite a bit. It contains, various utility classes such

00:00:24.808 --> 00:00:30.687
as Scanner, ArrayList, Arrays, Random, and so on. That's one aspect of

00:00:30.687 --> 00:00:36.557
packages, to group related classes together. There's another useful aspect, the

00:00:36.557 --> 00:00:42.742
second aspect has to do with names. Unfortunately, in real life, names aren't

00:00:42.742 --> 00:00:46.512
always unique. There may be more than one person called Fred. And if you refer

00:00:46.512 --> 00:00:51.468
to Fred, they may all feel that they are the one. That's of course why last

00:00:51.468 --> 00:00:57.724
names were invented. So that hopefully the first and last names are unique. Now

00:00:57.724 --> 00:01:00.556
with people that's no longer the case, but with packages and classes it

00:01:00.556 --> 00:01:07.130
actually is. A package name is intended to be unique around the entire world.

00:01:07.130 --> 00:01:10.705
There's only 1 java.util package, and even though there may be other packages

00:01:10.705 --> 00:01:15.925
that have a scanner class, java.util.Scanner is unique. And you can actually

00:01:15.925 --> 00:01:23.210
reference in your programs, the scanner class as java.util.Scanner everywhere.

00:01:23.210 --> 00:01:26.977
And say things like java.util.Scanner in equals new java.util.Scanner. That's a

00:01:26.977 --> 00:01:33.208
little tedious, of course, which is why the import statement was invented. When

00:01:33.208 --> 00:01:37.816
you say import java.util.Scanner, that means that from then on, you can drop

00:01:37.816 --> 00:01:44.366
the family name, and just use Scanner. These two statements then mean the exact

00:01:44.366 --> 00:01:48.687
same thing. This is the sole purpose of the import statement, to allow you to

00:01:48.687 --> 00:01:52.345
use only the class name, or the first name so to speak, without having to use

00:01:52.345 --> 00:02:00.138
the package name. Now let me show you, how to use packages in your own code. So

00:02:00.138 --> 00:02:03.804
let's suppose that you have a class that you want to put into a package. All

00:02:03.804 --> 00:02:07.516
you have to do, is put this statement starting with the word package, and then

00:02:07.516 --> 00:02:12.635
the name of the package, on the top of the source file. Package names are

00:02:12.635 --> 00:02:16.665
supposed to be unique, and most companies use their domain name written in

00:02:16.665 --> 00:02:23.200
reverse order. Such as com.udacity instead of udacity.com. Because domain names

00:02:23.200 --> 00:02:27.148
are guaranteed to be unique. Maybe you have your own domain name. But if you're

00:02:27.148 --> 00:02:31.325
not. Udacity, in its infinite generosity, it will allow you to use theirs for

00:02:31.325 --> 00:02:36.068
the following exercises. Now, when you want to use this class, you do what

00:02:36.068 --> 00:02:40.659
you've always done, when you imported a class. You just use the import

00:02:40.659 --> 00:02:44.569
statement, and then you get to use the class in the normal way. Now Sara will

00:02:44.569 --> 00:02:50.598
practice this with you. And you get to reorganize the car pool classes.

