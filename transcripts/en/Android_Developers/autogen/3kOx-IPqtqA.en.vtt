WEBVTT
Kind: captions
Language: en

00:00:01.970 --> 00:00:04.730 align:start position:0%
 
the<00:00:02.970><c> single</c><00:00:03.389><c> biggest</c><00:00:03.600><c> improvement</c><00:00:04.319><c> your</c><00:00:04.589><c> app</c>

00:00:04.730 --> 00:00:04.740 align:start position:0%
the single biggest improvement your app
 

00:00:04.740 --> 00:00:06.320 align:start position:0%
the single biggest improvement your app
can<00:00:04.950><c> make</c><00:00:05.130><c> for</c><00:00:05.339><c> networking</c><00:00:05.640><c> performance</c><00:00:06.089><c> has</c>

00:00:06.320 --> 00:00:06.330 align:start position:0%
can make for networking performance has
 

00:00:06.330 --> 00:00:08.030 align:start position:0%
can make for networking performance has
to<00:00:06.359><c> do</c><00:00:06.660><c> with</c><00:00:06.779><c> reducing</c><00:00:06.960><c> the</c><00:00:07.319><c> sheer</c><00:00:07.620><c> number</c><00:00:07.649><c> of</c>

00:00:08.030 --> 00:00:08.040 align:start position:0%
to do with reducing the sheer number of
 

00:00:08.040 --> 00:00:10.100 align:start position:0%
to do with reducing the sheer number of
requests<00:00:08.790><c> made</c><00:00:08.970><c> but</c><00:00:09.450><c> rather</c><00:00:09.630><c> than</c><00:00:09.840><c> just</c>

00:00:10.100 --> 00:00:10.110 align:start position:0%
requests made but rather than just
 

00:00:10.110 --> 00:00:11.959 align:start position:0%
requests made but rather than just
avoiding<00:00:10.679><c> data</c><00:00:10.889><c> syncing</c><00:00:11.250><c> all</c><00:00:11.340><c> together</c><00:00:11.519><c> how</c>

00:00:11.959 --> 00:00:11.969 align:start position:0%
avoiding data syncing all together how
 

00:00:11.969 --> 00:00:13.970 align:start position:0%
avoiding data syncing all together how
exactly<00:00:12.360><c> do</c><00:00:12.509><c> you</c><00:00:12.540><c> pull</c><00:00:12.780><c> that</c><00:00:12.900><c> off</c><00:00:12.960><c> my</c><00:00:13.679><c> name</c><00:00:13.830><c> is</c>

00:00:13.970 --> 00:00:13.980 align:start position:0%
exactly do you pull that off my name is
 

00:00:13.980 --> 00:00:15.230 align:start position:0%
exactly do you pull that off my name is
Colt<00:00:14.160><c> McAnlis</c><00:00:14.190><c> and</c><00:00:14.639><c> if</c><00:00:14.759><c> you're</c><00:00:14.880><c> looking</c><00:00:15.210><c> for</c>

00:00:15.230 --> 00:00:15.240 align:start position:0%
Colt McAnlis and if you're looking for
 

00:00:15.240 --> 00:00:17.359 align:start position:0%
Colt McAnlis and if you're looking for
the<00:00:15.480><c> optimal</c><00:00:16.049><c> way</c><00:00:16.170><c> to</c><00:00:16.199><c> batch</c><00:00:16.619><c> request</c><00:00:17.160><c> to</c>

00:00:17.359 --> 00:00:17.369 align:start position:0%
the optimal way to batch request to
 

00:00:17.369 --> 00:00:19.519 align:start position:0%
the optimal way to batch request to
reduce<00:00:17.730><c> overall</c><00:00:18.210><c> network</c><00:00:18.630><c> traffic</c><00:00:18.900><c> then</c>

00:00:19.519 --> 00:00:19.529 align:start position:0%
reduce overall network traffic then
 

00:00:19.529 --> 00:00:21.560 align:start position:0%
reduce overall network traffic then
prefetching<00:00:19.949><c> is</c><00:00:20.279><c> for</c><00:00:20.580><c> you</c><00:00:20.699><c> I</c><00:00:20.939><c> think</c><00:00:21.449><c> of</c><00:00:21.510><c> it</c>

00:00:21.560 --> 00:00:21.570 align:start position:0%
prefetching is for you I think of it
 

00:00:21.570 --> 00:00:23.450 align:start position:0%
prefetching is for you I think of it
this<00:00:21.689><c> way</c><00:00:21.750><c> your</c><00:00:22.289><c> app</c><00:00:22.470><c> makes</c><00:00:22.830><c> a</c><00:00:22.920><c> request</c><00:00:23.039><c> for</c><00:00:23.400><c> a</c>

00:00:23.450 --> 00:00:23.460 align:start position:0%
this way your app makes a request for a
 

00:00:23.460 --> 00:00:25.340 align:start position:0%
this way your app makes a request for a
specific<00:00:23.699><c> piece</c><00:00:24.119><c> of</c><00:00:24.150><c> data</c><00:00:24.480><c> and</c><00:00:24.630><c> then</c><00:00:24.720><c> sometime</c>

00:00:25.340 --> 00:00:25.350 align:start position:0%
specific piece of data and then sometime
 

00:00:25.350 --> 00:00:26.870 align:start position:0%
specific piece of data and then sometime
in<00:00:25.470><c> the</c><00:00:25.529><c> future</c><00:00:25.680><c> it</c><00:00:26.099><c> makes</c><00:00:26.340><c> a</c><00:00:26.400><c> request</c><00:00:26.519><c> for</c>

00:00:26.870 --> 00:00:26.880 align:start position:0%
in the future it makes a request for
 

00:00:26.880 --> 00:00:29.480 align:start position:0%
in the future it makes a request for
another<00:00:27.420><c> piece</c><00:00:27.779><c> of</c><00:00:27.960><c> data</c><00:00:28.140><c> and</c><00:00:28.380><c> so</c><00:00:28.949><c> on</c><00:00:29.130><c> and</c><00:00:29.429><c> so</c>

00:00:29.480 --> 00:00:29.490 align:start position:0%
another piece of data and so on and so
 

00:00:29.490 --> 00:00:31.700 align:start position:0%
another piece of data and so on and so
forth<00:00:29.670><c> each</c><00:00:30.330><c> individual</c><00:00:31.080><c> request</c><00:00:31.439><c> has</c>

00:00:31.700 --> 00:00:31.710 align:start position:0%
forth each individual request has
 

00:00:31.710 --> 00:00:33.830 align:start position:0%
forth each individual request has
specific<00:00:32.189><c> overhead</c><00:00:32.790><c> associated</c><00:00:33.120><c> with</c><00:00:33.600><c> it</c><00:00:33.719><c> and</c>

00:00:33.830 --> 00:00:33.840 align:start position:0%
specific overhead associated with it and
 

00:00:33.840 --> 00:00:36.170 align:start position:0%
specific overhead associated with it and
may<00:00:33.989><c> end</c><00:00:34.260><c> up</c><00:00:34.469><c> in</c><00:00:34.620><c> a</c><00:00:34.710><c> weird</c><00:00:34.980><c> pattern</c><00:00:35.430><c> of</c><00:00:35.610><c> waking</c>

00:00:36.170 --> 00:00:36.180 align:start position:0%
may end up in a weird pattern of waking
 

00:00:36.180 --> 00:00:38.450 align:start position:0%
may end up in a weird pattern of waking
up<00:00:36.270><c> the</c><00:00:36.390><c> radio</c><00:00:36.719><c> each</c><00:00:36.989><c> time</c><00:00:37.500><c> to</c><00:00:37.980><c> make</c><00:00:38.309><c> the</c>

00:00:38.450 --> 00:00:38.460 align:start position:0%
up the radio each time to make the
 

00:00:38.460 --> 00:00:41.510 align:start position:0%
up the radio each time to make the
request<00:00:39.140><c> prefetching</c><00:00:40.140><c> is</c><00:00:40.440><c> about</c><00:00:40.680><c> predicting</c>

00:00:41.510 --> 00:00:41.520 align:start position:0%
request prefetching is about predicting
 

00:00:41.520 --> 00:00:42.950 align:start position:0%
request prefetching is about predicting
what<00:00:41.820><c> data</c><00:00:42.030><c> would</c><00:00:42.180><c> be</c><00:00:42.239><c> in</c><00:00:42.420><c> those</c><00:00:42.570><c> future</c>

00:00:42.950 --> 00:00:42.960 align:start position:0%
what data would be in those future
 

00:00:42.960 --> 00:00:44.690 align:start position:0%
what data would be in those future
requests<00:00:43.350><c> and</c><00:00:43.469><c> grabbing</c><00:00:43.829><c> all</c><00:00:43.920><c> that</c><00:00:44.070><c> data</c><00:00:44.219><c> now</c>

00:00:44.690 --> 00:00:44.700 align:start position:0%
requests and grabbing all that data now
 

00:00:44.700 --> 00:00:46.670 align:start position:0%
requests and grabbing all that data now
while<00:00:45.420><c> there's</c><00:00:45.600><c> an</c><00:00:45.719><c> active</c><00:00:46.050><c> radio</c><00:00:46.379><c> connection</c>

00:00:46.670 --> 00:00:46.680 align:start position:0%
while there's an active radio connection
 

00:00:46.680 --> 00:00:48.619 align:start position:0%
while there's an active radio connection
the<00:00:47.250><c> benefit</c><00:00:47.579><c> here</c><00:00:47.760><c> is</c><00:00:47.789><c> that</c><00:00:47.879><c> each</c><00:00:48.120><c> radio</c>

00:00:48.619 --> 00:00:48.629 align:start position:0%
the benefit here is that each radio
 

00:00:48.629 --> 00:00:50.600 align:start position:0%
the benefit here is that each radio
request<00:00:49.140><c> has</c><00:00:49.410><c> some</c><00:00:49.710><c> overhead</c><00:00:50.129><c> in</c><00:00:50.280><c> terms</c><00:00:50.489><c> of</c>

00:00:50.600 --> 00:00:50.610 align:start position:0%
request has some overhead in terms of
 

00:00:50.610 --> 00:00:52.279 align:start position:0%
request has some overhead in terms of
time<00:00:50.850><c> it</c><00:00:51.059><c> takes</c><00:00:51.180><c> to</c><00:00:51.329><c> wake</c><00:00:51.570><c> up</c><00:00:51.719><c> the</c><00:00:51.840><c> radio</c><00:00:52.079><c> and</c>

00:00:52.279 --> 00:00:52.289 align:start position:0%
time it takes to wake up the radio and
 

00:00:52.289 --> 00:00:54.410 align:start position:0%
time it takes to wake up the radio and
battery<00:00:53.039><c> drain</c><00:00:53.370><c> that's</c><00:00:53.579><c> taken</c><00:00:53.969><c> as</c><00:00:54.090><c> a</c><00:00:54.120><c> result</c>

00:00:54.410 --> 00:00:54.420 align:start position:0%
battery drain that's taken as a result
 

00:00:54.420 --> 00:00:56.779 align:start position:0%
battery drain that's taken as a result
of<00:00:54.539><c> its</c><00:00:54.660><c> keep</c><00:00:54.899><c> awake</c><00:00:55.140><c> time</c><00:00:55.500><c> being</c><00:00:56.340><c> able</c><00:00:56.640><c> to</c>

00:00:56.779 --> 00:00:56.789 align:start position:0%
of its keep awake time being able to
 

00:00:56.789 --> 00:00:58.700 align:start position:0%
of its keep awake time being able to
bundle<00:00:57.030><c> future</c><00:00:57.629><c> requests</c><00:00:58.079><c> together</c><00:00:58.350><c> and</c><00:00:58.590><c> do</c>

00:00:58.700 --> 00:00:58.710 align:start position:0%
bundle future requests together and do
 

00:00:58.710 --> 00:01:00.889 align:start position:0%
bundle future requests together and do
them<00:00:58.890><c> now</c><00:00:59.250><c> means</c><00:00:59.910><c> being</c><00:01:00.149><c> able</c><00:01:00.420><c> to</c><00:01:00.510><c> reduce</c><00:01:00.690><c> that</c>

00:01:00.889 --> 00:01:00.899 align:start position:0%
them now means being able to reduce that
 

00:01:00.899 --> 00:01:03.319 align:start position:0%
them now means being able to reduce that
overhead<00:01:01.379><c> and</c><00:01:01.680><c> save</c><00:01:02.010><c> precious</c><00:01:02.489><c> battery</c><00:01:02.969><c> life</c>

00:01:03.319 --> 00:01:03.329 align:start position:0%
overhead and save precious battery life
 

00:01:03.329 --> 00:01:05.870 align:start position:0%
overhead and save precious battery life
but<00:01:03.899><c> prefetching</c><00:01:04.290><c> is</c><00:01:04.559><c> a</c><00:01:04.589><c> tricky</c><00:01:05.400><c> balancing</c>

00:01:05.870 --> 00:01:05.880 align:start position:0%
but prefetching is a tricky balancing
 

00:01:05.880 --> 00:01:08.030 align:start position:0%
but prefetching is a tricky balancing
problem<00:01:06.119><c> prefetch</c><00:01:06.840><c> too</c><00:01:07.140><c> little</c><00:01:07.560><c> and</c><00:01:07.740><c> you'll</c>

00:01:08.030 --> 00:01:08.040 align:start position:0%
problem prefetch too little and you'll
 

00:01:08.040 --> 00:01:09.710 align:start position:0%
problem prefetch too little and you'll
end<00:01:08.220><c> up</c><00:01:08.340><c> not</c><00:01:08.549><c> optimizing</c><00:01:09.030><c> your</c><00:01:09.270><c> bandwidth</c>

00:01:09.710 --> 00:01:09.720 align:start position:0%
end up not optimizing your bandwidth
 

00:01:09.720 --> 00:01:11.780 align:start position:0%
end up not optimizing your bandwidth
effectively<00:01:10.320><c> and</c><00:01:10.590><c> prefetching</c><00:01:11.130><c> too</c><00:01:11.400><c> much</c>

00:01:11.780 --> 00:01:11.790 align:start position:0%
effectively and prefetching too much
 

00:01:11.790 --> 00:01:13.039 align:start position:0%
effectively and prefetching too much
means<00:01:12.090><c> the</c><00:01:12.180><c> user</c><00:01:12.360><c> is</c><00:01:12.540><c> going</c><00:01:12.720><c> to</c><00:01:12.810><c> be</c><00:01:12.900><c> waiting</c>

00:01:13.039 --> 00:01:13.049 align:start position:0%
means the user is going to be waiting
 

00:01:13.049 --> 00:01:16.070 align:start position:0%
means the user is going to be waiting
even<00:01:13.409><c> longer</c><00:01:13.560><c> for</c><00:01:13.950><c> the</c><00:01:14.400><c> results</c><00:01:14.820><c> so</c><00:01:15.330><c> now</c><00:01:16.020><c> we</c>

00:01:16.070 --> 00:01:16.080 align:start position:0%
even longer for the results so now we
 

00:01:16.080 --> 00:01:18.289 align:start position:0%
even longer for the results so now we
come<00:01:16.470><c> to</c><00:01:16.500><c> our</c><00:01:16.740><c> simple</c><00:01:17.130><c> question</c><00:01:17.490><c> how</c><00:01:18.090><c> much</c>

00:01:18.289 --> 00:01:18.299 align:start position:0%
come to our simple question how much
 

00:01:18.299 --> 00:01:20.719 align:start position:0%
come to our simple question how much
data<00:01:18.600><c> is</c><00:01:18.869><c> in</c><00:01:19.110><c> a</c><00:01:19.290><c> good</c><00:01:19.560><c> prefetch</c><00:01:20.070><c> well</c><00:01:20.340><c> the</c>

00:01:20.719 --> 00:01:20.729 align:start position:0%
data is in a good prefetch well the
 

00:01:20.729 --> 00:01:22.969 align:start position:0%
data is in a good prefetch well the
general<00:01:21.240><c> rule</c><00:01:21.450><c> of</c><00:01:21.479><c> thumb</c><00:01:21.659><c> is</c><00:01:22.020><c> that</c><00:01:22.170><c> on</c><00:01:22.259><c> a</c><00:01:22.290><c> 3g</c>

00:01:22.969 --> 00:01:22.979 align:start position:0%
general rule of thumb is that on a 3g
 

00:01:22.979 --> 00:01:24.950 align:start position:0%
general rule of thumb is that on a 3g
connection<00:01:23.430><c> a</c><00:01:23.610><c> quality</c><00:01:24.150><c> prefetch</c><00:01:24.570><c> is</c><00:01:24.720><c> about</c>

00:01:24.950 --> 00:01:24.960 align:start position:0%
connection a quality prefetch is about
 

00:01:24.960 --> 00:01:27.410 align:start position:0%
connection a quality prefetch is about
one<00:01:25.590><c> to</c><00:01:25.740><c> five</c><00:01:25.770><c> megs</c><00:01:26.280><c> of</c><00:01:26.400><c> data</c><00:01:26.460><c> of</c><00:01:27.000><c> course</c>

00:01:27.410 --> 00:01:27.420 align:start position:0%
one to five megs of data of course
 

00:01:27.420 --> 00:01:28.969 align:start position:0%
one to five megs of data of course
that's<00:01:27.570><c> with</c><00:01:27.810><c> the</c><00:01:27.900><c> understanding</c><00:01:28.140><c> that</c><00:01:28.560><c> the</c>

00:01:28.969 --> 00:01:28.979 align:start position:0%
that's with the understanding that the
 

00:01:28.979 --> 00:01:31.429 align:start position:0%
that's with the understanding that the
data<00:01:29.250><c> will</c><00:01:29.430><c> be</c><00:01:29.490><c> needed</c><00:01:29.970><c> and</c><00:01:30.119><c> used</c><00:01:30.630><c> by</c><00:01:31.020><c> the</c><00:01:31.079><c> user</c>

00:01:31.429 --> 00:01:31.439 align:start position:0%
data will be needed and used by the user
 

00:01:31.439 --> 00:01:33.109 align:start position:0%
data will be needed and used by the user
so<00:01:31.740><c> you</c><00:01:32.280><c> could</c><00:01:32.520><c> look</c><00:01:32.610><c> at</c><00:01:32.729><c> this</c><00:01:32.759><c> another</c><00:01:32.939><c> way</c>

00:01:33.109 --> 00:01:33.119 align:start position:0%
so you could look at this another way
 

00:01:33.119 --> 00:01:35.450 align:start position:0%
so you could look at this another way
and<00:01:33.390><c> say</c><00:01:33.689><c> prefetch</c><00:01:34.409><c> as</c><00:01:34.619><c> much</c><00:01:34.829><c> data</c><00:01:35.100><c> as</c><00:01:35.220><c> the</c>

00:01:35.450 --> 00:01:35.460 align:start position:0%
and say prefetch as much data as the
 

00:01:35.460 --> 00:01:37.460 align:start position:0%
and say prefetch as much data as the
user<00:01:35.670><c> might</c><00:01:36.000><c> need</c><00:01:36.299><c> in</c><00:01:36.630><c> the</c><00:01:36.750><c> next</c><00:01:37.020><c> one</c><00:01:37.290><c> to</c><00:01:37.439><c> two</c>

00:01:37.460 --> 00:01:37.470 align:start position:0%
user might need in the next one to two
 

00:01:37.470 --> 00:01:39.800 align:start position:0%
user might need in the next one to two
minutes<00:01:37.890><c> of</c><00:01:38.009><c> their</c><00:01:38.280><c> active</c><00:01:38.759><c> session</c><00:01:39.210><c> but</c><00:01:39.720><c> in</c>

00:01:39.800 --> 00:01:39.810 align:start position:0%
minutes of their active session but in
 

00:01:39.810 --> 00:01:41.719 align:start position:0%
minutes of their active session but in
honesty<00:01:40.229><c> one</c><00:01:40.470><c> of</c><00:01:40.560><c> the</c><00:01:40.619><c> biggest</c><00:01:40.979><c> things</c><00:01:41.369><c> your</c>

00:01:41.719 --> 00:01:41.729 align:start position:0%
honesty one of the biggest things your
 

00:01:41.729 --> 00:01:44.030 align:start position:0%
honesty one of the biggest things your
prefetch<00:01:42.210><c> needs</c><00:01:42.479><c> to</c><00:01:42.570><c> optimize</c><00:01:42.960><c> for</c><00:01:42.990><c> has</c><00:01:43.710><c> to</c><00:01:43.920><c> be</c>

00:01:44.030 --> 00:01:44.040 align:start position:0%
prefetch needs to optimize for has to be
 

00:01:44.040 --> 00:01:46.010 align:start position:0%
prefetch needs to optimize for has to be
for<00:01:44.310><c> the</c><00:01:44.340><c> speed</c><00:01:44.880><c> of</c><00:01:45.180><c> the</c><00:01:45.329><c> device</c><00:01:45.570><c> connection</c>

00:01:46.010 --> 00:01:46.020 align:start position:0%
for the speed of the device connection
 

00:01:46.020 --> 00:01:48.590 align:start position:0%
for the speed of the device connection
for<00:01:46.439><c> example</c><00:01:46.770><c> if</c><00:01:46.890><c> the</c><00:01:47.220><c> user</c><00:01:47.430><c> is</c><00:01:47.670><c> on</c><00:01:47.759><c> a</c><00:01:47.790><c> 4G</c>

00:01:48.590 --> 00:01:48.600 align:start position:0%
for example if the user is on a 4G
 

00:01:48.600 --> 00:01:50.149 align:start position:0%
for example if the user is on a 4G
connection<00:01:48.960><c> you</c><00:01:49.259><c> may</c><00:01:49.380><c> be</c><00:01:49.439><c> able</c><00:01:49.649><c> to</c><00:01:49.799><c> connect</c>

00:01:50.149 --> 00:01:50.159 align:start position:0%
connection you may be able to connect
 

00:01:50.159 --> 00:01:53.090 align:start position:0%
connection you may be able to connect
and<00:01:50.430><c> fetch</c><00:01:50.729><c> 12</c><00:01:51.180><c> new</c><00:01:51.689><c> photos</c><00:01:51.990><c> which</c><00:01:52.619><c> takes</c><00:01:52.920><c> the</c>

00:01:53.090 --> 00:01:53.100 align:start position:0%
and fetch 12 new photos which takes the
 

00:01:53.100 --> 00:01:55.490 align:start position:0%
and fetch 12 new photos which takes the
same<00:01:53.399><c> amount</c><00:01:53.460><c> of</c><00:01:53.790><c> time</c><00:01:53.850><c> as</c><00:01:54.060><c> prefetching</c><00:01:55.020><c> three</c>

00:01:55.490 --> 00:01:55.500 align:start position:0%
same amount of time as prefetching three
 

00:01:55.500 --> 00:01:58.609 align:start position:0%
same amount of time as prefetching three
photos<00:01:55.799><c> on</c><00:01:56.130><c> a</c><00:01:56.189><c> 2g</c><00:01:57.149><c> connection</c><00:01:57.450><c> so</c><00:01:57.930><c> modifying</c>

00:01:58.609 --> 00:01:58.619 align:start position:0%
photos on a 2g connection so modifying
 

00:01:58.619 --> 00:01:59.899 align:start position:0%
photos on a 2g connection so modifying
your<00:01:58.710><c> prefetching</c><00:01:59.130><c> code</c><00:01:59.399><c> to</c><00:01:59.520><c> take</c><00:01:59.700><c> into</c>

00:01:59.899 --> 00:01:59.909 align:start position:0%
your prefetching code to take into
 

00:01:59.909 --> 00:02:01.130 align:start position:0%
your prefetching code to take into
account<00:02:00.060><c> the</c><00:02:00.240><c> quality</c><00:02:00.689><c> of</c><00:02:00.719><c> the</c><00:02:00.869><c> user's</c>

00:02:01.130 --> 00:02:01.140 align:start position:0%
account the quality of the user's
 

00:02:01.140 --> 00:02:02.660 align:start position:0%
account the quality of the user's
connection<00:02:01.530><c> is</c><00:02:01.649><c> the</c><00:02:02.009><c> best</c><00:02:02.219><c> way</c><00:02:02.399><c> to</c><00:02:02.460><c> create</c>

00:02:02.660 --> 00:02:02.670 align:start position:0%
connection is the best way to create
 

00:02:02.670 --> 00:02:04.850 align:start position:0%
connection is the best way to create
optimal<00:02:03.270><c> fetch</c><00:02:03.540><c> cases</c><00:02:04.049><c> and</c><00:02:04.590><c> it's</c><00:02:04.740><c> worth</c>

00:02:04.850 --> 00:02:04.860 align:start position:0%
optimal fetch cases and it's worth
 

00:02:04.860 --> 00:02:06.410 align:start position:0%
optimal fetch cases and it's worth
pointing<00:02:05.070><c> out</c><00:02:05.280><c> that</c><00:02:05.430><c> the</c><00:02:05.490><c> easiest</c><00:02:05.700><c> way</c><00:02:06.360><c> to</c>

00:02:06.410 --> 00:02:06.420 align:start position:0%
pointing out that the easiest way to
 

00:02:06.420 --> 00:02:08.119 align:start position:0%
pointing out that the easiest way to
determine<00:02:07.140><c> the</c><00:02:07.229><c> health</c><00:02:07.380><c> of</c><00:02:07.560><c> the</c><00:02:07.649><c> network</c><00:02:07.920><c> is</c>

00:02:08.119 --> 00:02:08.129 align:start position:0%
determine the health of the network is
 

00:02:08.129 --> 00:02:09.919 align:start position:0%
determine the health of the network is
simply<00:02:08.550><c> to</c><00:02:08.670><c> time</c><00:02:08.879><c> how</c><00:02:09.149><c> long</c><00:02:09.209><c> it</c><00:02:09.390><c> takes</c><00:02:09.690><c> for</c>

00:02:09.919 --> 00:02:09.929 align:start position:0%
simply to time how long it takes for
 

00:02:09.929 --> 00:02:11.839 align:start position:0%
simply to time how long it takes for
some<00:02:10.110><c> known</c><00:02:10.410><c> piece</c><00:02:10.679><c> of</c><00:02:10.830><c> content</c><00:02:11.039><c> to</c><00:02:11.430><c> return</c>

00:02:11.839 --> 00:02:11.849 align:start position:0%
some known piece of content to return
 

00:02:11.849 --> 00:02:13.840 align:start position:0%
some known piece of content to return
from<00:02:12.360><c> a</c><00:02:12.480><c> request</c><00:02:12.840><c> with</c><00:02:13.290><c> a</c><00:02:13.319><c> few</c>

00:02:13.840 --> 00:02:13.850 align:start position:0%
from a request with a few
 

00:02:13.850 --> 00:02:15.640 align:start position:0%
from a request with a few
simple<00:02:14.180><c> calculations</c><00:02:14.750><c> and</c><00:02:14.900><c> a</c><00:02:14.990><c> handy</c><00:02:15.350><c> lookup</c>

00:02:15.640 --> 00:02:15.650 align:start position:0%
simple calculations and a handy lookup
 

00:02:15.650 --> 00:02:17.380 align:start position:0%
simple calculations and a handy lookup
table<00:02:15.950><c> for</c><00:02:16.100><c> common</c><00:02:16.370><c> network</c><00:02:16.610><c> speeds</c><00:02:16.820><c> you</c><00:02:17.210><c> can</c>

00:02:17.380 --> 00:02:17.390 align:start position:0%
table for common network speeds you can
 

00:02:17.390 --> 00:02:18.850 align:start position:0%
table for common network speeds you can
quickly<00:02:17.600><c> determine</c><00:02:17.870><c> what</c><00:02:18.380><c> type</c><00:02:18.560><c> of</c><00:02:18.590><c> network</c>

00:02:18.850 --> 00:02:18.860 align:start position:0%
quickly determine what type of network
 

00:02:18.860 --> 00:02:21.010 align:start position:0%
quickly determine what type of network
the<00:02:19.100><c> users</c><00:02:19.370><c> connected</c><00:02:19.820><c> to</c><00:02:19.940><c> and</c><00:02:20.150><c> adjust</c><00:02:20.900><c> your</c>

00:02:21.010 --> 00:02:21.020 align:start position:0%
the users connected to and adjust your
 

00:02:21.020 --> 00:02:23.020 align:start position:0%
the users connected to and adjust your
fetching<00:02:21.260><c> and</c><00:02:21.590><c> requests</c><00:02:22.070><c> accordingly</c><00:02:22.490><c> it's</c>

00:02:23.020 --> 00:02:23.030 align:start position:0%
fetching and requests accordingly it's
 

00:02:23.030 --> 00:02:24.670 align:start position:0%
fetching and requests accordingly it's
also<00:02:23.210><c> we're</c><00:02:23.510><c> pointing</c><00:02:23.840><c> out</c><00:02:23.960><c> that</c><00:02:24.140><c> the</c><00:02:24.320><c> real</c>

00:02:24.670 --> 00:02:24.680 align:start position:0%
also we're pointing out that the real
 

00:02:24.680 --> 00:02:26.950 align:start position:0%
also we're pointing out that the real
sweet<00:02:25.190><c> spot</c><00:02:25.460><c> here</c><00:02:25.730><c> has</c><00:02:26.000><c> to</c><00:02:26.210><c> be</c><00:02:26.330><c> executing</c>

00:02:26.950 --> 00:02:26.960 align:start position:0%
sweet spot here has to be executing
 

00:02:26.960 --> 00:02:29.050 align:start position:0%
sweet spot here has to be executing
batched<00:02:27.380><c> requests</c><00:02:27.980><c> that</c><00:02:28.670><c> you</c><00:02:28.730><c> know</c><00:02:28.880><c> we're</c>

00:02:29.050 --> 00:02:29.060 align:start position:0%
batched requests that you know we're
 

00:02:29.060 --> 00:02:31.090 align:start position:0%
batched requests that you know we're
delayed<00:02:29.360><c> to</c><00:02:29.810><c> be</c><00:02:29.930><c> issues</c><00:02:30.320><c> but</c><00:02:30.560><c> have</c><00:02:30.890><c> been</c><00:02:30.980><c> on</c>

00:02:31.090 --> 00:02:31.100 align:start position:0%
delayed to be issues but have been on
 

00:02:31.100 --> 00:02:33.460 align:start position:0%
delayed to be issues but have been on
the<00:02:31.220><c> weight</c><00:02:31.370><c> cycle</c><00:02:31.760><c> and</c><00:02:31.940><c> future</c><00:02:32.660><c> requests</c><00:02:33.170><c> aka</c>

00:02:33.460 --> 00:02:33.470 align:start position:0%
the weight cycle and future requests aka
 

00:02:33.470 --> 00:02:36.220 align:start position:0%
the weight cycle and future requests aka
prefetching<00:02:34.070><c> into</c><00:02:34.640><c> a</c><00:02:34.670><c> single</c><00:02:35.210><c> activity</c><00:02:35.540><c> radio</c>

00:02:36.220 --> 00:02:36.230 align:start position:0%
prefetching into a single activity radio
 

00:02:36.230 --> 00:02:38.020 align:start position:0%
prefetching into a single activity radio
window<00:02:36.710><c> that's</c><00:02:37.160><c> when</c><00:02:37.340><c> things</c><00:02:37.550><c> start</c><00:02:37.820><c> to</c><00:02:37.850><c> get</c>

00:02:38.020 --> 00:02:38.030 align:start position:0%
window that's when things start to get
 

00:02:38.030 --> 00:02:40.060 align:start position:0%
window that's when things start to get
really<00:02:38.360><c> awesome</c><00:02:38.960><c> and</c><00:02:39.140><c> the</c><00:02:39.470><c> good</c><00:02:39.590><c> news</c><00:02:39.770><c> is</c><00:02:39.920><c> that</c>

00:02:40.060 --> 00:02:40.070 align:start position:0%
really awesome and the good news is that
 

00:02:40.070 --> 00:02:41.710 align:start position:0%
really awesome and the good news is that
you<00:02:40.190><c> can</c><00:02:40.220><c> update</c><00:02:40.490><c> your</c><00:02:40.790><c> app</c><00:02:41.000><c> to</c><00:02:41.210><c> adopt</c><00:02:41.540><c> these</c>

00:02:41.710 --> 00:02:41.720 align:start position:0%
you can update your app to adopt these
 

00:02:41.720 --> 00:02:43.120 align:start position:0%
you can update your app to adopt these
patterns<00:02:42.050><c> without</c><00:02:42.410><c> having</c><00:02:42.680><c> to</c><00:02:42.770><c> write</c><00:02:42.920><c> a</c>

00:02:43.120 --> 00:02:43.130 align:start position:0%
patterns without having to write a
 

00:02:43.130 --> 00:02:45.160 align:start position:0%
patterns without having to write a
massive<00:02:43.580><c> amount</c><00:02:43.820><c> of</c><00:02:43.910><c> code</c><00:02:44.140><c> GCM</c><00:02:45.140><c> network</c>

00:02:45.160 --> 00:02:45.170 align:start position:0%
massive amount of code GCM network
 

00:02:45.170 --> 00:02:47.500 align:start position:0%
massive amount of code GCM network
manager<00:02:45.860><c> is</c><00:02:45.980><c> a</c><00:02:46.010><c> google</c><00:02:46.460><c> play</c><00:02:46.610><c> services</c><00:02:46.850><c> API</c>

00:02:47.500 --> 00:02:47.510 align:start position:0%
manager is a google play services API
 

00:02:47.510 --> 00:02:49.570 align:start position:0%
manager is a google play services API
which<00:02:47.840><c> helps</c><00:02:48.170><c> to</c><00:02:48.230><c> schedule</c><00:02:48.770><c> Network</c><00:02:49.130><c> oriented</c>

00:02:49.570 --> 00:02:49.580 align:start position:0%
which helps to schedule Network oriented
 

00:02:49.580 --> 00:02:51.730 align:start position:0%
which helps to schedule Network oriented
tasks<00:02:49.910><c> and</c><00:02:50.030><c> handle</c><00:02:50.570><c> batching</c><00:02:50.900><c> for</c><00:02:51.140><c> you</c><00:02:51.260><c> this</c>

00:02:51.730 --> 00:02:51.740 align:start position:0%
tasks and handle batching for you this
 

00:02:51.740 --> 00:02:53.770 align:start position:0%
tasks and handle batching for you this
greatly<00:02:52.040><c> simplifies</c><00:02:52.190><c> the</c><00:02:52.970><c> implementation</c><00:02:53.690><c> of</c>

00:02:53.770 --> 00:02:53.780 align:start position:0%
greatly simplifies the implementation of
 

00:02:53.780 --> 00:02:55.660 align:start position:0%
greatly simplifies the implementation of
common<00:02:53.960><c> patterns</c><00:02:54.560><c> such</c><00:02:54.950><c> as</c><00:02:54.980><c> waiting</c><00:02:55.520><c> for</c>

00:02:55.660 --> 00:02:55.670 align:start position:0%
common patterns such as waiting for
 

00:02:55.670 --> 00:02:57.550 align:start position:0%
common patterns such as waiting for
network<00:02:55.880><c> connectivity</c><00:02:56.210><c> Network</c><00:02:56.750><c> retries</c><00:02:57.200><c> and</c>

00:02:57.550 --> 00:02:57.560 align:start position:0%
network connectivity Network retries and
 

00:02:57.560 --> 00:02:59.830 align:start position:0%
network connectivity Network retries and
exponential<00:02:58.340><c> back-off</c><00:02:58.640><c> basically</c><00:02:59.420><c> it's</c><00:02:59.600><c> all</c>

00:02:59.830 --> 00:02:59.840 align:start position:0%
exponential back-off basically it's all
 

00:02:59.840 --> 00:03:01.720 align:start position:0%
exponential back-off basically it's all
the<00:03:00.050><c> stuff</c><00:03:00.260><c> you</c><00:03:00.440><c> need</c><00:03:00.470><c> with</c><00:03:00.830><c> a</c><00:03:00.860><c> single</c><00:03:01.280><c> helpful</c>

00:03:01.720 --> 00:03:01.730 align:start position:0%
the stuff you need with a single helpful
 

00:03:01.730 --> 00:03:04.090 align:start position:0%
the stuff you need with a single helpful
API<00:03:02.150><c> and</c><00:03:02.510><c> when</c><00:03:02.990><c> it</c><00:03:03.080><c> comes</c><00:03:03.200><c> to</c><00:03:03.350><c> performance</c><00:03:03.770><c> you</c>

00:03:04.090 --> 00:03:04.100 align:start position:0%
API and when it comes to performance you
 

00:03:04.100 --> 00:03:06.250 align:start position:0%
API and when it comes to performance you
need<00:03:04.340><c> all</c><00:03:04.610><c> the</c><00:03:04.820><c> helpful</c><00:03:05.060><c> api's</c><00:03:05.660><c> you</c><00:03:05.930><c> can</c><00:03:06.080><c> get</c>

00:03:06.250 --> 00:03:06.260 align:start position:0%
need all the helpful api's you can get
 

00:03:06.260 --> 00:03:08.560 align:start position:0%
need all the helpful api's you can get
and<00:03:06.470><c> helpful</c><00:03:07.220><c> videos</c><00:03:07.520><c> too</c><00:03:07.790><c> which</c><00:03:08.270><c> is</c><00:03:08.300><c> why</c><00:03:08.420><c> you</c>

00:03:08.560 --> 00:03:08.570 align:start position:0%
and helpful videos too which is why you
 

00:03:08.570 --> 00:03:09.700 align:start position:0%
and helpful videos too which is why you
should<00:03:08.660><c> check</c><00:03:08.960><c> out</c><00:03:09.080><c> the</c><00:03:09.170><c> rest</c><00:03:09.320><c> of</c><00:03:09.380><c> the</c><00:03:09.500><c> Android</c>

00:03:09.700 --> 00:03:09.710 align:start position:0%
should check out the rest of the Android
 

00:03:09.710 --> 00:03:11.680 align:start position:0%
should check out the rest of the Android
performance<00:03:10.250><c> patterns</c><00:03:10.580><c> content</c><00:03:11.000><c> and</c><00:03:11.420><c> don't</c>

00:03:11.680 --> 00:03:11.690 align:start position:0%
performance patterns content and don't
 

00:03:11.690 --> 00:03:13.600 align:start position:0%
performance patterns content and don't
forget<00:03:11.930><c> to</c><00:03:12.050><c> join</c><00:03:12.260><c> our</c><00:03:12.500><c> Google+</c><00:03:13.040><c> community</c><00:03:13.160><c> as</c>

00:03:13.600 --> 00:03:13.610 align:start position:0%
forget to join our Google+ community as
 

00:03:13.610 --> 00:03:16.150 align:start position:0%
forget to join our Google+ community as
well<00:03:13.730><c> so</c><00:03:14.420><c> keep</c><00:03:14.870><c> calm</c><00:03:15.080><c> profile</c><00:03:15.740><c> your</c><00:03:15.770><c> code</c><00:03:15.920><c> and</c>

00:03:16.150 --> 00:03:16.160 align:start position:0%
well so keep calm profile your code and
 

00:03:16.160 --> 00:03:19.230 align:start position:0%
well so keep calm profile your code and
always<00:03:16.460><c> remember</c><00:03:16.670><c> perf</c><00:03:17.180><c> matters</c>

00:03:19.230 --> 00:03:19.240 align:start position:0%
always remember perf matters
 

00:03:19.240 --> 00:03:21.270 align:start position:0%
always remember perf matters
Oh

