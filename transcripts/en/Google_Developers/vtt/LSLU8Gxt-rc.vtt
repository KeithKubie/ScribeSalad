WEBVTT
Kind: captions
Language: en

00:00:00.117 --> 00:00:00.950
FELIPE HOFFA: Hello.

00:00:00.950 --> 00:00:03.150
I'm Felipe Hoffa at Google
Developer Relations.

00:00:03.150 --> 00:00:07.110
And I help developers manage
and analyze their big data

00:00:07.110 --> 00:00:09.710
as they could never
before, using Google Tools.

00:00:09.710 --> 00:00:12.530
A few weeks ago, I received
a challenge via Twitter

00:00:12.530 --> 00:00:14.160
from Graham Polley in Australia.

00:00:14.160 --> 00:00:14.746
Check it out.

00:00:14.746 --> 00:00:15.870
GRAHAM POLLEY: Hey, Felipe.

00:00:15.870 --> 00:00:17.510
Possible requirement.

00:00:17.510 --> 00:00:22.170
One table, 30 billion
rows, 30 terabytes of data.

00:00:22.170 --> 00:00:24.790
No problem for BigQuery, right?

00:00:24.790 --> 00:00:26.500
FELIPE HOFFA: 30
terabytes of data?

00:00:26.500 --> 00:00:28.690
30 billion rows
in a single query?

00:00:28.690 --> 00:00:31.520
My response was,
challenge accepted.

00:00:31.520 --> 00:00:35.290
And well, turns out Graham
flew all the way from Australia

00:00:35.290 --> 00:00:38.280
to our Mountain View studios
to take me up on my word.

00:00:38.280 --> 00:00:40.440
Follow me to meet Luke
Alexander and Graham

00:00:40.440 --> 00:00:42.870
Polley from Shine
Technologies where

00:00:42.870 --> 00:00:46.640
we will learn, where did they
get this 30 terabytes of data?

00:00:46.640 --> 00:00:48.500
What's the business
behind their project?

00:00:48.500 --> 00:00:51.300
And how well the query
is working for them.

00:00:51.300 --> 00:00:53.650
And of course, we'll
find out if the query

00:00:53.650 --> 00:00:57.650
is up to the 30 terabytes,
30 billion rows challenge.

00:00:57.650 --> 00:00:58.920
Let's find out right now.

00:01:02.790 --> 00:01:05.340
Thank you for coming all
the way from Australia.

00:01:05.340 --> 00:01:06.020
Graham Polley.

00:01:06.020 --> 00:01:07.620
Luke Alexander.

00:01:07.620 --> 00:01:08.840
Thank you for being here.

00:01:08.840 --> 00:01:10.340
GRAHAM POLLEY:
Thanks for having us.

00:01:10.340 --> 00:01:11.670
LUKE ALEXANDER: Really
excited to be here.

00:01:11.670 --> 00:01:13.878
FELIPE HOFFA: Yeah, I'm very
excited to have you too.

00:01:13.878 --> 00:01:15.270
Let's get down to business.

00:01:15.270 --> 00:01:18.420
Can you tell me what
is Shine Technologies?

00:01:18.420 --> 00:01:19.516
What are you doing there?

00:01:19.516 --> 00:01:21.390
LUKE ALEXANDER: Yeah,
just Shine Technologies

00:01:21.390 --> 00:01:24.210
we're an IT consultancy based
out of Melbourne, Australia.

00:01:24.210 --> 00:01:27.340
We're about 55 developers.

00:01:27.340 --> 00:01:30.260
And we work with most of
the major large corporates

00:01:30.260 --> 00:01:32.155
in Australia, one
of which is Telstra,

00:01:32.155 --> 00:01:34.584
what we're going to be
talking about today.

00:01:34.584 --> 00:01:35.500
FELIPE HOFFA: Telstra.

00:01:35.500 --> 00:01:37.990
That's where you're getting
your 30 terabytes of data?

00:01:37.990 --> 00:01:39.198
LUKE ALEXANDER: That's right.

00:01:39.198 --> 00:01:41.510
So Telstra is one of
Australia's largest ISP's.

00:01:41.510 --> 00:01:43.705
And it's also a large
digital publisher.

00:01:43.705 --> 00:01:45.330
And that's where we
get this data from.

00:01:45.330 --> 00:01:49.800
We serve ads onto the
major digital properties.

00:01:49.800 --> 00:01:54.660
And those ad impression logs
create a large volume of data.

00:01:54.660 --> 00:01:56.372
FELIPE HOFFA: That's
DoubleClick data?

00:01:56.372 --> 00:01:57.830
LUKE ALEXANDER:
Yes, so this is all

00:01:57.830 --> 00:02:00.400
served by Google DoubleClick.

00:02:00.400 --> 00:02:03.530
And we process the
log files on the back

00:02:03.530 --> 00:02:05.239
of those both impressions
and the clicks.

00:02:05.239 --> 00:02:07.113
FELIPE HOFFA: So you're
getting a high amount

00:02:07.113 --> 00:02:08.229
of clicks of impressions.

00:02:08.229 --> 00:02:09.354
LUKE ALEXANDER: Yes, we do.

00:02:09.354 --> 00:02:13.140
2,000 requests a second at peak
plus clicks on top of that.

00:02:13.140 --> 00:02:17.020
And that translates to
about 3 billion transactions

00:02:17.020 --> 00:02:18.110
a month at peak.

00:02:18.110 --> 00:02:18.860
FELIPE HOFFA: Wow.

00:02:18.860 --> 00:02:22.324
And how were you handling
this before knowing the query?

00:02:22.324 --> 00:02:23.490
LUKE ALEXANDER: Yeah, badly.

00:02:23.490 --> 00:02:25.280
We had a lot of difficulty.

00:02:25.280 --> 00:02:28.560
So we knew that there was a
real opportunity with the data

00:02:28.560 --> 00:02:30.200
that we were seeing.

00:02:30.200 --> 00:02:32.461
There was a lot of
data that was used

00:02:32.461 --> 00:02:34.960
in those logs that we weren't
able to extract any other way.

00:02:34.960 --> 00:02:37.010
So we used to try
and process them.

00:02:37.010 --> 00:02:39.630
We'd have bash scripts,
which would cut up the logs,

00:02:39.630 --> 00:02:42.730
throw away 90% of it, because
we could only handle about 10%

00:02:42.730 --> 00:02:43.660
of volume.

00:02:43.660 --> 00:02:47.500
We then split up the data, push
it into relational databases,

00:02:47.500 --> 00:02:50.290
and try and use the
data from there.

00:02:50.290 --> 00:02:55.200
But, you know, we blew up
disks, ran out of space,

00:02:55.200 --> 00:02:59.510
saturated networks,
blew up table spaces,

00:02:59.510 --> 00:03:01.400
got called in the
middle of the night.

00:03:01.400 --> 00:03:01.900
GRAHAM POLLEY: I
didn't get called.

00:03:01.900 --> 00:03:02.483
He got called.

00:03:02.483 --> 00:03:03.855
LUKE ALEXANDER: Yeah.

00:03:03.855 --> 00:03:05.560
So it was hard work.

00:03:05.560 --> 00:03:07.900
FELIPE HOFFA: But I think
everyone has felt that once.

00:03:07.900 --> 00:03:08.670
LUKE ALEXANDER: Absolutely.

00:03:08.670 --> 00:03:10.253
FELIPE HOFFA: And
that was a year ago.

00:03:10.253 --> 00:03:14.107
You had no idea that-- the
equipment was not on your map?

00:03:14.107 --> 00:03:15.690
LUKE ALEXANDER: No,
so BigQuery came--

00:03:15.690 --> 00:03:18.170
we came across BigQuery when
we moved to DoubleClick.

00:03:18.170 --> 00:03:20.950
We found that by
default the log files

00:03:20.950 --> 00:03:23.390
that we were receiving
from DoubleClick

00:03:23.390 --> 00:03:25.050
were being written
to the Google Cloud.

00:03:25.050 --> 00:03:26.841
So that made us have
a bit of a poke around

00:03:26.841 --> 00:03:29.420
to see what we could do,
solve the BigQuery thing.

00:03:29.420 --> 00:03:31.440
I thought this looks
like it could do the job.

00:03:31.440 --> 00:03:33.930
Maybe this dream can come true.

00:03:33.930 --> 00:03:35.729
And so we thought
we'd give it a try.

00:03:35.729 --> 00:03:37.020
FELIPE HOFFA: And how was that?

00:03:37.020 --> 00:03:38.250
How did you try--?

00:03:38.250 --> 00:03:40.125
LUKE ALEXANDER: Well,
we took some real data.

00:03:40.125 --> 00:03:41.030
It was fascinating.

00:03:41.030 --> 00:03:41.990
We took some real data.

00:03:41.990 --> 00:03:44.585
Graham and I sat down.

00:03:44.585 --> 00:03:46.110
A cup of coffee.

00:03:46.110 --> 00:03:47.990
Two hours later we'd
proven the problem.

00:03:47.990 --> 00:03:50.690
The big problem was, can
we handle the volume?

00:03:50.690 --> 00:03:53.050
And can we handle
the type of data?

00:03:53.050 --> 00:03:57.590
We have some of the targeting
option from [? DFP ?] come

00:03:57.590 --> 00:04:00.814
through in a large string
of key value pairs.

00:04:00.814 --> 00:04:02.230
And we needed to
extract that data

00:04:02.230 --> 00:04:03.563
and treat them all like columns.

00:04:03.563 --> 00:04:07.060
That was a big challenge
for us, along with the data.

00:04:07.060 --> 00:04:11.946
But within two hours, we had
a working copy of real data.

00:04:11.946 --> 00:04:14.990
FELIPE HOFFA: So in two hours
you had your proof of concept.

00:04:14.990 --> 00:04:16.320
That was all you needed.

00:04:16.320 --> 00:04:16.890
LUKE ALEXANDER: Absolutely.

00:04:16.890 --> 00:04:18.515
GRAHAM POLLEY: We
were just blown away.

00:04:18.515 --> 00:04:20.459
We just sat there,
like Luke said.

00:04:20.459 --> 00:04:22.520
And we just pulled in a
small data set first just

00:04:22.520 --> 00:04:25.350
to see if we could extract that
data out, those three columns.

00:04:25.350 --> 00:04:27.310
And then we pulled in a
month's worth of data.

00:04:27.310 --> 00:04:31.920
And we just went Run, and
it just-- it blew us away.

00:04:31.920 --> 00:04:32.930
LUKE ALEXANDER: It did.

00:04:32.930 --> 00:04:33.790
It was amazing.

00:04:33.790 --> 00:04:35.155
FELIPE HOFFA: Suddenly, you
were running regular expressions

00:04:35.155 --> 00:04:36.714
over 2 billion records.

00:04:36.714 --> 00:04:37.755
GRAHAM POLLEY: 2 billion.

00:04:37.755 --> 00:04:38.020
Yeah.

00:04:38.020 --> 00:04:40.186
FELIPE HOFFA: So with that,
you went to your client.

00:04:40.186 --> 00:04:40.860
You told them--

00:04:40.860 --> 00:04:42.620
LUKE ALEXANDER:
This is possible.

00:04:42.620 --> 00:04:43.430
GRAHAM POLLEY: We can do this.

00:04:43.430 --> 00:04:44.305
LUKE ALEXANDER: Yeah.

00:04:44.305 --> 00:04:46.805
FELIPE HOFFA: And then it
translated into a real project.

00:04:46.805 --> 00:04:47.680
You sold the project.

00:04:47.680 --> 00:04:48.820
You have the--

00:04:48.820 --> 00:04:50.340
LUKE ALEXANDER:
Yes, so then it was

00:04:50.340 --> 00:04:53.507
a case of being able to
take that and produce

00:04:53.507 --> 00:04:54.840
the reporting on the back of it.

00:04:54.840 --> 00:04:56.548
The clients were really
excited about it.

00:04:56.548 --> 00:04:58.400
They wanted to take
this as an offering back

00:04:58.400 --> 00:04:59.397
to their advertisers.

00:04:59.397 --> 00:05:01.980
There was some real great data
insights that we could provide.

00:05:01.980 --> 00:05:04.710
And they were really
keen to see that this now

00:05:04.710 --> 00:05:06.810
wasn't going to be a
massive IT project.

00:05:06.810 --> 00:05:08.559
This is something that
they could actually

00:05:08.559 --> 00:05:10.570
do with a small IT budget.

00:05:10.570 --> 00:05:12.570
FELIPE HOFFA: And how
long did the project take?

00:05:12.570 --> 00:05:14.840
LUKE ALEXANDER: So the
project took about six months.

00:05:14.840 --> 00:05:15.960
Gathering requirements,
working out

00:05:15.960 --> 00:05:17.230
what we were doing
with the data, how

00:05:17.230 --> 00:05:18.750
we were going to
display, what data

00:05:18.750 --> 00:05:21.600
we wanted to overlay on what.

00:05:21.600 --> 00:05:24.619
And some of the normal
operational modes

00:05:24.619 --> 00:05:26.160
of the data, how
we're processing it,

00:05:26.160 --> 00:05:27.850
when we're processing it,
when we're cleaning it up

00:05:27.850 --> 00:05:28.933
and those kinds of things.

00:05:28.933 --> 00:05:32.160
FELIPE HOFFA: So what's so
great about-- what does Telstra

00:05:32.160 --> 00:05:32.895
get from this?

00:05:32.895 --> 00:05:35.270
LUKE ALEXANDER: Yes, so the
key benefit that Telstra gets

00:05:35.270 --> 00:05:37.750
is being able to tell
its advertisers what

00:05:37.750 --> 00:05:39.590
are the people that
have seen those ads?

00:05:39.590 --> 00:05:40.780
What are the demographics?

00:05:40.780 --> 00:05:46.360
So we've got age, income,
the state that they're in,

00:05:46.360 --> 00:05:49.280
the time of day that they're
in, that they saw their ad.

00:05:49.280 --> 00:05:52.230
And we can overlay those
metrics against each other.

00:05:52.230 --> 00:05:56.190
And we can really
show advertisers

00:05:56.190 --> 00:05:58.990
who was seeing their ads,
who was responding to it,

00:05:58.990 --> 00:06:00.790
was it meeting their
target demographics

00:06:00.790 --> 00:06:02.190
that they were
trying to hit for?

00:06:02.190 --> 00:06:04.360
And what are the things
they could possibly

00:06:04.360 --> 00:06:07.340
try in the future?

00:06:07.340 --> 00:06:09.160
Different targeting options.

00:06:09.160 --> 00:06:09.872
Amazing stuff.

00:06:09.872 --> 00:06:12.080
FELIPE HOFFA: So now you're
able to look at the data,

00:06:12.080 --> 00:06:15.509
dice it, understand what
happened, who's clicking?

00:06:15.509 --> 00:06:17.800
LUKE ALEXANDER: Yeah and it's
a real end-user tool that

00:06:17.800 --> 00:06:20.460
runs and returns in seconds
so the clients can generate

00:06:20.460 --> 00:06:23.370
their own reports
as they want them.

00:06:23.370 --> 00:06:26.830
And it's essentially
giving them large volumes

00:06:26.830 --> 00:06:29.669
of data represented in nice
forms in the click of a button.

00:06:29.669 --> 00:06:31.460
FELIPE HOFFA: They can
dig deeper on demand

00:06:31.460 --> 00:06:32.570
wherever they want.

00:06:32.570 --> 00:06:32.915
LUKE ALEXANDER: Absolutey.

00:06:32.915 --> 00:06:34.123
FELIPE HOFFA: That's awesome.

00:06:34.123 --> 00:06:36.350
And then you wrote a
blog post about this.

00:06:36.350 --> 00:06:38.802
GRAHAM POLLEY: Right, so yeah.

00:06:38.802 --> 00:06:40.760
One of the things working
at Shine Technologies

00:06:40.760 --> 00:06:43.510
is that they
encouraged engineers

00:06:43.510 --> 00:06:46.780
to talk about and write
about technologies that we're

00:06:46.780 --> 00:06:49.340
working on, bleeding
edge technologies.

00:06:49.340 --> 00:06:53.320
And I just found BigQuery
just blew me away.

00:06:53.320 --> 00:06:57.790
And I wanted to write about
it so I put pen to paper

00:06:57.790 --> 00:07:00.060
and wrote a blog post.

00:07:00.060 --> 00:07:01.770
And I didn't really
think much of it.

00:07:01.770 --> 00:07:03.560
I thought it was
a good blog post.

00:07:03.560 --> 00:07:05.870
And I had some pretty
big numbers in there.

00:07:05.870 --> 00:07:07.950
But it just gained
a bit of traction.

00:07:07.950 --> 00:07:09.940
I think you picked it
up and you shared it.

00:07:09.940 --> 00:07:11.940
FELIPE HOFFA: I remember
reading that blog post.

00:07:11.940 --> 00:07:13.590
And I was like, on
one hand, amazing.

00:07:13.590 --> 00:07:16.480
On the other hand, there
were some criticisms.

00:07:16.480 --> 00:07:18.690
GRAHAM POLLEY: OK, it can't
be completely lopsided.

00:07:18.690 --> 00:07:19.080
FELIPE HOFFA: Of course.

00:07:19.080 --> 00:07:20.720
That was a very full review.

00:07:20.720 --> 00:07:24.107
I guess you were very happy with
the latest news from the query.

00:07:24.107 --> 00:07:24.940
GRAHAM POLLEY: Yeah.

00:07:24.940 --> 00:07:28.460
Yeah, so a couple of things with
the latest news as well-- so

00:07:28.460 --> 00:07:32.070
we're getting a-- we found out
yesterday 100,000 streaming

00:07:32.070 --> 00:07:35.690
inserts a second, which
is just phenomenal.

00:07:35.690 --> 00:07:39.300
And also one of the things that
when we were writing our SQL

00:07:39.300 --> 00:07:42.030
queries and refining those
SQL queries for this project,

00:07:42.030 --> 00:07:44.219
we couldn't do multiple joins.

00:07:44.219 --> 00:07:45.010
And we found that--

00:07:45.010 --> 00:07:46.200
FELIPE HOFFA: You had to
do nested queries together?

00:07:46.200 --> 00:07:48.241
GRAHAM POLLEY: Yeah, we
had to do nested queries.

00:07:48.241 --> 00:07:51.570
Yeah, and that was a little
bit work around those nuances.

00:07:51.570 --> 00:07:54.084
But fabulous news that we
can do it on there as well.

00:07:54.084 --> 00:07:55.250
FELIPE HOFFA: That is great.

00:07:55.250 --> 00:07:57.345
Now you have a Views tool.

00:07:57.345 --> 00:07:59.470
GRAHAM POLLEY: Views,
[INAUDIBLE] table decorators.

00:07:59.470 --> 00:08:01.065
And yeah it's phenomenal.

00:08:01.065 --> 00:08:03.540
LUKE ALEXANDER: And the
85% pricing [INAUDIBLE]

00:08:03.540 --> 00:08:05.290
is a big difference
to us as well.

00:08:05.290 --> 00:08:07.910
FELIPE HOFFA: Yeah,
pricing that blew me off.

00:08:07.910 --> 00:08:11.352
GRAHAM POLLEY: 85% is
just-- it's incredible.

00:08:11.352 --> 00:08:13.060
FELIPE HOFFA: So you
wrote the blog post.

00:08:13.060 --> 00:08:14.300
You won the traction.

00:08:14.300 --> 00:08:15.790
Urs [INAUDIBLE]

00:08:15.790 --> 00:08:19.600
GRAHAM POLLEY: Yeah, right so
then after you had found it,

00:08:19.600 --> 00:08:24.140
just a few days later I found
out that Urs Holzle had picked

00:08:24.140 --> 00:08:28.040
it up and put it on
his Google+ page.

00:08:28.040 --> 00:08:32.080
And he just shared it and said,
take a look at this blog post.

00:08:32.080 --> 00:08:32.789
It's a good read.

00:08:32.789 --> 00:08:33.913
FELIPE HOFFA: It's amazing.

00:08:33.913 --> 00:08:35.140
You've been giving talks now.

00:08:35.140 --> 00:08:36.090
GRAHAM POLLEY:
Yeah, we got invited

00:08:36.090 --> 00:08:37.256
myself and another engineer.

00:08:37.256 --> 00:08:39.700
We got invited then to do a
few talks around Melbourne,

00:08:39.700 --> 00:08:40.866
which have gone really well.

00:08:40.866 --> 00:08:43.319
And we've got another few
in the pipeline as well.

00:08:43.319 --> 00:08:44.880
So it's phenomenal.

00:08:44.880 --> 00:08:47.220
We weren't expecting
that from the blog post.

00:08:47.220 --> 00:08:48.270
It was really cool.

00:08:48.270 --> 00:08:49.978
FELIPE HOFFA: Now what
I want to know now

00:08:49.978 --> 00:08:51.620
is how you're using the query.

00:08:51.620 --> 00:08:52.595
Can you show us?

00:08:52.595 --> 00:08:53.720
LUKE ALEXANDER: Absolutely.

00:08:53.720 --> 00:08:55.095
GRAHAM POLLEY:
What we tend to do

00:08:55.095 --> 00:08:57.200
is we work with small
data sets first.

00:08:57.200 --> 00:09:00.014
And that allows us
then to refine our SQL

00:09:00.014 --> 00:09:01.430
and get it into a
state that we're

00:09:01.430 --> 00:09:04.620
happy with to push to
production and then really start

00:09:04.620 --> 00:09:05.760
working on big data sets.

00:09:05.760 --> 00:09:07.570
But we start small first.

00:09:07.570 --> 00:09:09.670
And of course that keeps
our costs down as well.

00:09:09.670 --> 00:09:11.169
FELIPE HOFFA: That's
a good pattern.

00:09:11.169 --> 00:09:13.920
Develop your queries
on small data,

00:09:13.920 --> 00:09:16.200
then scale it up as
much as you need.

00:09:16.200 --> 00:09:17.440
GRAHAM POLLEY: Exactly, yeah.

00:09:17.440 --> 00:09:18.770
It's great as well.

00:09:18.770 --> 00:09:22.120
So we're just running over
maybe a few megabytes even

00:09:22.120 --> 00:09:24.010
just or a few 100,000 rows.

00:09:24.010 --> 00:09:26.310
And the responses are
coming back in seconds.

00:09:26.310 --> 00:09:30.150
So it just allows us that rapid
way of getting [? truancy ?]

00:09:30.150 --> 00:09:32.210
and building our
SQL into that state.

00:09:32.210 --> 00:09:33.910
It's phenomenal.

00:09:33.910 --> 00:09:34.840
That's the way we go.

00:09:34.840 --> 00:09:36.590
So what I want to
show you is actually--

00:09:36.590 --> 00:09:38.640
this is one of our
production queries.

00:09:38.640 --> 00:09:42.080
And it's not an overly
complex SQL query.

00:09:42.080 --> 00:09:44.020
It's actually quite
straightforward.

00:09:44.020 --> 00:09:46.395
We've got a few [? nested ?]
[? selects. ?] We're pulling

00:09:46.395 --> 00:09:50.620
out our core columns that we
want from the raw data tables.

00:09:50.620 --> 00:09:52.680
And what I really want
to focus on though

00:09:52.680 --> 00:09:54.460
is the regular
expressions down here.

00:09:54.460 --> 00:09:58.060
So what we touched on earlier,
this is core to this project.

00:09:58.060 --> 00:10:00.356
This was-- we have to
have this in there.

00:10:00.356 --> 00:10:01.730
And BigQuery gave
us that ability

00:10:01.730 --> 00:10:04.820
to be able to go to that
one column and slice

00:10:04.820 --> 00:10:07.390
and dice it up and pull at
those values that we needed.

00:10:07.390 --> 00:10:10.150
And that's what you can
see here in the SQL.

00:10:10.150 --> 00:10:13.059
FELIPE HOFFA: So you're taking
all of this custom variables

00:10:13.059 --> 00:10:14.350
transforming them into columns?

00:10:14.350 --> 00:10:15.160
GRAHAM POLLEY: Correct.

00:10:15.160 --> 00:10:15.660
Yeah.

00:10:15.660 --> 00:10:17.389
And I've got some joins here.

00:10:17.389 --> 00:10:19.430
And then we're just doing
an aggregation on that.

00:10:19.430 --> 00:10:21.150
We're just grouping
by all those columns.

00:10:21.150 --> 00:10:23.230
And we're just building
these summary tables up,

00:10:23.230 --> 00:10:24.546
which are then given
to the front end

00:10:24.546 --> 00:10:25.600
for the visualization.

00:10:25.600 --> 00:10:26.725
FELIPE HOFFA: Let's try it.

00:10:26.725 --> 00:10:29.220
GRAHAM POLLEY: Absolutely.

00:10:29.220 --> 00:10:31.050
So this is the query.

00:10:31.050 --> 00:10:31.800
It's ready to run.

00:10:31.800 --> 00:10:36.880
You can see here in
BigQuery's validation bar.

00:10:36.880 --> 00:10:39.170
We're about to
process 6.04 megs.

00:10:39.170 --> 00:10:40.330
So we'll just hit six megs.

00:10:40.330 --> 00:10:42.500
And it's about 47,000 rows.

00:10:42.500 --> 00:10:44.050
So this is actually
a good window

00:10:44.050 --> 00:10:47.980
into how we work with BigQuery,
working on the small data sets

00:10:47.980 --> 00:10:49.482
and then gradually ramping up.

00:10:49.482 --> 00:10:50.690
FELIPE HOFFA: That's nothing.

00:10:50.690 --> 00:10:52.100
Any database can do that.

00:10:52.100 --> 00:10:52.590
GRAHAM POLLEY: Exactly.

00:10:52.590 --> 00:10:54.298
FELIPE HOFFA: But we
can run our queries.

00:10:54.298 --> 00:10:55.476
GRAHAM POLLEY: Absolutely.

00:10:55.476 --> 00:10:56.600
I'm gonna pull the trigger.

00:10:56.600 --> 00:10:57.891
FELIPE HOFFA: Pull the trigger.

00:10:59.954 --> 00:11:02.120
GRAHAM POLLEY: So this
should just take-- literally,

00:11:02.120 --> 00:11:04.890
we're going over 40
something thousand rows.

00:11:04.890 --> 00:11:06.560
It's 3.6 seconds.

00:11:06.560 --> 00:11:08.664
It's a cost of zero
cent which is just--

00:11:08.664 --> 00:11:10.830
FELIPE HOFFA: You're using
the Street plug in there.

00:11:10.830 --> 00:11:11.470
I can see.

00:11:11.470 --> 00:11:13.817
GRAHAM POLLEY: Yeah,
that's-- you spotted that.

00:11:13.817 --> 00:11:14.400
I'm impressed.

00:11:14.400 --> 00:11:15.250
Yeah, yeah.

00:11:15.250 --> 00:11:16.020
That's cool.

00:11:16.020 --> 00:11:18.395
FELIPE HOFFA: Yeah, Streetcar
is very good friends of us.

00:11:18.395 --> 00:11:20.810
We did a video recently.

00:11:20.810 --> 00:11:21.907
Check it out.

00:11:21.907 --> 00:11:23.740
GRAHAM POLLEY: Yeah,
the Street plug in just

00:11:23.740 --> 00:11:26.910
gives a few little
niceties to the web UI.

00:11:26.910 --> 00:11:28.170
So I like to use it.

00:11:28.170 --> 00:11:29.420
And you get the cost in there.

00:11:29.420 --> 00:11:29.650
And you're able to--

00:11:29.650 --> 00:11:31.650
FELIPE HOFFA: So now you
have your aggregations.

00:11:31.650 --> 00:11:32.930
You have your new columns.

00:11:32.930 --> 00:11:34.138
GRAHAM POLLEY: Yeah, exactly.

00:11:34.138 --> 00:11:35.830
So these are our
summary-- in essence,

00:11:35.830 --> 00:11:36.780
these are our summary tables.

00:11:36.780 --> 00:11:38.580
Now these result sets that
you can see at the bottom

00:11:38.580 --> 00:11:39.620
here are our summary tables.

00:11:39.620 --> 00:11:41.619
And you can see, we do
have a few nulls in there

00:11:41.619 --> 00:11:44.609
but we leave them out of the
summary tables in the end.

00:11:44.609 --> 00:11:46.150
Then we've got our
values coming out.

00:11:46.150 --> 00:11:47.983
And these are the values
actually coming out

00:11:47.983 --> 00:11:49.300
of those regular expressions.

00:11:49.300 --> 00:11:51.010
And then we're
remapping them and doing

00:11:51.010 --> 00:11:52.180
some aggregation on those.

00:11:52.180 --> 00:11:55.490
FELIPE HOFFA: But this was only
over six megabytes of data.

00:11:55.490 --> 00:11:56.996
How do you scale this up?

00:11:56.996 --> 00:11:58.370
GRAHAM POLLEY: So
what we do then

00:11:58.370 --> 00:12:01.590
is after we're happy with the
SQL and we know it's working,

00:12:01.590 --> 00:12:04.010
we then ramp it up to about
a month's worth of data.

00:12:04.010 --> 00:12:07.370
And that month's worth of
data is about 2 billion rows

00:12:07.370 --> 00:12:08.250
or above.

00:12:08.250 --> 00:12:11.620
In some cases we've got
2.53 to 3 billion rows.

00:12:11.620 --> 00:12:14.620
And then we're up in
big data territory.

00:12:14.620 --> 00:12:18.680
So we're going from 500 gig
to 750 up to a terabyte.

00:12:18.680 --> 00:12:22.070
And that's when it starts
getting interesting.

00:12:22.070 --> 00:12:24.590
FELIPE HOFFA: Let's try it out.

00:12:24.590 --> 00:12:26.712
GRAHAM POLLEY: So I've
got this query here.

00:12:26.712 --> 00:12:29.170
It's the exact same query that
I've just walked you through

00:12:29.170 --> 00:12:30.022
and shown you.

00:12:30.022 --> 00:12:31.730
But it's just pointing
to a bigger table.

00:12:31.730 --> 00:12:36.280
So it's pointing to our raw,
one month's worth of data.

00:12:36.280 --> 00:12:40.239
And that data is about
2.2 billion rows.

00:12:40.239 --> 00:12:41.530
FELIPE HOFFA: 2.2 billion rows?

00:12:41.530 --> 00:12:43.250
GRAHAM POLLEY: 2.2 billion rows.

00:12:43.250 --> 00:12:46.640
And I believe this
table is somewhere

00:12:46.640 --> 00:12:50.710
in the region of about 3/4
of a terabyte to a terabyte.

00:12:50.710 --> 00:12:54.005
FELIPE HOFFA: So we're
only going here over--

00:12:54.005 --> 00:12:55.880
GRAHAM POLLEY: Yes, so
we're-- yeah, correct.

00:12:55.880 --> 00:13:00.040
So what you've spotted is
BigQuery is smart enough.

00:13:00.040 --> 00:13:02.030
It says, well
actually, I don't need

00:13:02.030 --> 00:13:05.124
to go over everything
in the data set.

00:13:05.124 --> 00:13:06.540
I only need to go
over the columns

00:13:06.540 --> 00:13:08.980
that you actually want me
to work on in your SQL.

00:13:08.980 --> 00:13:11.660
And I'm actually only
going to query-- or sorry,

00:13:11.660 --> 00:13:14.130
I'm only going to
process 159 gig.

00:13:14.130 --> 00:13:15.966
So that's just great as well.

00:13:15.966 --> 00:13:17.090
FELIPE HOFFA: Let's run it.

00:13:17.090 --> 00:13:17.380
GRAHAM POLLEY: Let's.

00:13:17.380 --> 00:13:19.270
So just to put this
in perspective,

00:13:19.270 --> 00:13:22.972
2.2 billion rows, 159 gig.

00:13:22.972 --> 00:13:25.180
FELIPE HOFFA: This was
impossible for you a year ago?

00:13:25.180 --> 00:13:27.540
GRAHAM POLLEY: We couldn't
do this in the past.

00:13:27.540 --> 00:13:29.290
OK, so we can see the
queries running here

00:13:29.290 --> 00:13:32.410
and then it's going over
a serious amount of data.

00:13:32.410 --> 00:13:34.980
So I estimate that's going
to take about somewhere

00:13:34.980 --> 00:13:37.215
in the region-- what we've
seen in our log files

00:13:37.215 --> 00:13:38.637
takes about 25 to 30 seconds.

00:13:38.637 --> 00:13:40.720
FELIPE HOFFA: And you run
these queries every day?

00:13:40.720 --> 00:13:41.678
GRAHAM POLLEY: Correct.

00:13:41.678 --> 00:13:43.970
We've got an automation
built into all this.

00:13:43.970 --> 00:13:46.380
And we're actually running
22 of these queries

00:13:46.380 --> 00:13:50.310
nightly on our data, because
we have multiple summary tables

00:13:50.310 --> 00:13:53.410
and multiple aggregation tables
for the front end to work with.

00:13:53.410 --> 00:13:54.910
FELIPE HOFFA: And
with those tables,

00:13:54.910 --> 00:13:57.390
you're able to present the
data interactively later.

00:13:57.390 --> 00:13:59.210
GRAHAM POLLEY: Correct.

00:13:59.210 --> 00:13:59.900
So here you go.

00:13:59.900 --> 00:14:02.040
Here's our results.

00:14:02.040 --> 00:14:05.330
You can see that it
took exactly 38 seconds.

00:14:05.330 --> 00:14:09.210
It processed 159 gig, which
the validator said it would.

00:14:09.210 --> 00:14:13.545
And it came at a cost
of 556 cents to us.

00:14:13.545 --> 00:14:15.872
FELIPE HOFFA: And that's
the previous cost.

00:14:15.872 --> 00:14:16.830
GRAHAM POLLEY: Correct.

00:14:16.830 --> 00:14:19.580
FELIPE HOFFA: Yes, prices have
been going down a lot now.

00:14:19.580 --> 00:14:20.584
GRAHAM POLLEY: 85%.

00:14:20.584 --> 00:14:21.500
FELIPE HOFFA: 85% now.

00:14:21.500 --> 00:14:23.127
Well, pretty convenient for you.

00:14:23.127 --> 00:14:23.960
GRAHAM POLLEY: Yeah.

00:14:23.960 --> 00:14:25.300
That's going to save
us quite a bit of money

00:14:25.300 --> 00:14:26.250
and our clients
some money, yeah.

00:14:26.250 --> 00:14:26.550
FELIPE HOFFA: That's cool.

00:14:26.550 --> 00:14:27.966
And what do you
do with this data?

00:14:27.966 --> 00:14:29.857
How do you transform
this summary table in--

00:14:29.857 --> 00:14:30.690
GRAHAM POLLEY: Yeah.

00:14:30.690 --> 00:14:34.549
So what we do now is that
data and those summary tables,

00:14:34.549 --> 00:14:35.840
they're given to the front end.

00:14:35.840 --> 00:14:39.110
And the front end is now going
to query those tables using

00:14:39.110 --> 00:14:43.564
the BigQuery API, the RESTful
API over at JavaScript web app.

00:14:43.564 --> 00:14:44.480
FELIPE HOFFA: Show me.

00:14:44.480 --> 00:14:45.563
GRAHAM POLLEY: Absolutely.

00:14:45.563 --> 00:14:47.120
I'd love to show you.

00:14:47.120 --> 00:14:50.350
So this is the front end.

00:14:50.350 --> 00:14:52.770
I'm just going to run the
report on the basic demographics

00:14:52.770 --> 00:14:54.853
that we have, or the ones
that we just pulled out,

00:14:54.853 --> 00:14:59.450
which is gender, location, age,
income and hour of the day.

00:14:59.450 --> 00:15:01.480
FELIPE HOFFA: So this
is a JavaScript app

00:15:01.480 --> 00:15:03.070
that is loading
data from the query?

00:15:03.070 --> 00:15:04.050
GRAHAM POLLEY: Correct.

00:15:04.050 --> 00:15:05.952
And you can see that
it's still pretty quick.

00:15:05.952 --> 00:15:08.410
FELIPE HOFFA: And you're able
to choose all the dimensions?

00:15:08.410 --> 00:15:08.840
LUKE ALEXANDER: Yeah.

00:15:08.840 --> 00:15:10.440
So this is giving real
insights into the data

00:15:10.440 --> 00:15:11.190
for our customers.

00:15:11.190 --> 00:15:14.740
So we're getting breakdowns
about impressions by gender,

00:15:14.740 --> 00:15:17.477
rolling down into the location
so the states within Australia.

00:15:17.477 --> 00:15:19.060
FELIPE HOFFA: Look
at Australia there.

00:15:19.060 --> 00:15:19.920
LUKE ALEXANDER:
Yeah, absolutely.

00:15:19.920 --> 00:15:22.086
And you can see here that
the impressions are pretty

00:15:22.086 --> 00:15:24.070
much in line with
population or thereabouts,

00:15:24.070 --> 00:15:26.287
so nothing unbelievable
insights in there.

00:15:26.287 --> 00:15:27.370
FELIPE HOFFA: Makes sense.

00:15:27.370 --> 00:15:27.945
What else?

00:15:27.945 --> 00:15:29.528
LUKE ALEXANDER: What
else have we got?

00:15:29.528 --> 00:15:31.410
Moving down, we've got age.

00:15:31.410 --> 00:15:32.910
So the various
different impressions

00:15:32.910 --> 00:15:34.659
for the different age
groups and the trend

00:15:34.659 --> 00:15:38.760
of the different click-through
rates for the different ages.

00:15:38.760 --> 00:15:40.940
Further along, household income.

00:15:40.940 --> 00:15:42.030
And then hour of day.

00:15:42.030 --> 00:15:44.280
Hour of day's got some
interesting information here.

00:15:44.280 --> 00:15:48.250
So what we can see is a pretty
consistent set of impressions.

00:15:48.250 --> 00:15:51.260
So the blue line is pretty
consistent over the period

00:15:51.260 --> 00:15:51.930
of time.

00:15:51.930 --> 00:15:54.210
And we see that red line
increasing as the hour of day

00:15:54.210 --> 00:15:57.520
goes on, showing that for
some reason, around 4 o'clock,

00:15:57.520 --> 00:16:00.870
3 or 4 o'clock, we start to
see more clicks on ads than we

00:16:00.870 --> 00:16:02.989
do at 10 o'clock in the morning.

00:16:02.989 --> 00:16:04.530
FELIPE HOFFA: So
when I finally-- you

00:16:04.530 --> 00:16:06.140
are able to
understand-- Telstra is

00:16:06.140 --> 00:16:07.819
able to understand
what is happening.

00:16:07.819 --> 00:16:10.360
LUKE ALEXANDER: Yeah, and we
can provide the information back

00:16:10.360 --> 00:16:11.700
to the advertisers and agencies.

00:16:11.700 --> 00:16:14.750
And they get some real insight
into how the targeting's

00:16:14.750 --> 00:16:17.500
working, what other targeting
options they could be using.

00:16:17.500 --> 00:16:20.034
Yeah and just information that
they just never had before.

00:16:20.034 --> 00:16:21.950
FELIPE HOFFA: And they
have an interactive app

00:16:21.950 --> 00:16:23.635
where they can go
further down the--

00:16:23.635 --> 00:16:25.760
LUKE ALEXANDER: They can
run it whenever they want.

00:16:25.760 --> 00:16:28.020
It takes seconds to come back.

00:16:28.020 --> 00:16:29.033
It's the whole picture.

00:16:29.033 --> 00:16:29.949
FELIPE HOFFA: Perfect.

00:16:29.949 --> 00:16:30.750
I love it.

00:16:30.750 --> 00:16:32.470
This is your application.

00:16:32.470 --> 00:16:36.430
We're doing what you
could never do before.

00:16:36.430 --> 00:16:37.727
But you a challenge for me.

00:16:37.727 --> 00:16:39.560
LUKE ALEXANDER: Yeah,
so on the back of this

00:16:39.560 --> 00:16:40.960
we got really excited.

00:16:40.960 --> 00:16:42.930
This is something we
had never done before.

00:16:42.930 --> 00:16:44.570
But once Graham had
written the blog

00:16:44.570 --> 00:16:47.440
and the conversation had
started, I wanted to go bigger.

00:16:47.440 --> 00:16:49.160
I wanted a year's worth of data.

00:16:49.160 --> 00:16:51.451
If we can do it for a month,
can't we do it for a year?

00:16:51.451 --> 00:16:53.010
And this is where it started.

00:16:53.010 --> 00:16:57.170
So Graham then decided to
pass that challenge on.

00:16:57.170 --> 00:16:59.670
FELIPE HOFFA: And that's when
you decided to send the tweet.

00:16:59.670 --> 00:17:01.378
LUKE ALEXANDER: Yeah,
the tweet was sent.

00:17:01.378 --> 00:17:02.850
And the challenge was set.

00:17:02.850 --> 00:17:04.442
FELIPE HOFFA: You
loaded all the data.

00:17:04.442 --> 00:17:05.650
GRAHAM POLLEY: Exactly, yeah.

00:17:05.650 --> 00:17:08.710
So we laid down the gauntlet
to you and to BigQuery,

00:17:08.710 --> 00:17:10.609
because we really
wanted to see, could it

00:17:10.609 --> 00:17:12.020
handle a year's worth of data?

00:17:12.020 --> 00:17:13.710
Could it handle 30 terabytes?

00:17:13.710 --> 00:17:15.950
FELIPE HOFFA: How fast
were you loading this data?

00:17:15.950 --> 00:17:17.866
GRAHAM POLLEY: Yes, so
a month's worth of data

00:17:17.866 --> 00:17:19.439
takes about--
actually, it doesn't

00:17:19.439 --> 00:17:21.030
take-- it takes 28 seconds.

00:17:21.030 --> 00:17:24.690
I did it-- I timed it for one
of the months and that was,

00:17:24.690 --> 00:17:28.710
I think, 2 billion
rows in 28 seconds

00:17:28.710 --> 00:17:30.980
from Google Cloud storage
straight into BigQuery.

00:17:30.980 --> 00:17:34.910
So it took a few hours to get a
year's worth of data in there.

00:17:34.910 --> 00:17:35.450
But we--

00:17:35.450 --> 00:17:36.825
FELIPE HOFFA:
Sounds pretty good.

00:17:36.825 --> 00:17:39.700
GRAHAM POLLEY: Yeah,
it's pretty quick.

00:17:39.700 --> 00:17:41.140
We're pretty happy with it.

00:17:41.140 --> 00:17:43.723
FELIPE HOFFA: And we're running
the same query, the same query

00:17:43.723 --> 00:17:49.280
over 6 megabytes of data,
over 230 megabytes of data.

00:17:49.280 --> 00:17:50.530
GRAHAM POLLEY: Shall we do it?

00:17:50.530 --> 00:17:50.800
FELIPE HOFFA: Let's do it.

00:17:50.800 --> 00:17:51.660
GRAHAM POLLEY: You excited?

00:17:51.660 --> 00:17:52.270
FELIPE HOFFA: Show me.

00:17:52.270 --> 00:17:53.020
GRAHAM POLLEY: OK.

00:17:53.020 --> 00:17:55.201
So we're going to
ramp this up now.

00:17:55.201 --> 00:17:58.120
We're going from
six to a few 100 gig

00:17:58.120 --> 00:18:03.000
and then we're going
up to 6.24 terabytes.

00:18:03.000 --> 00:18:04.920
FELIPE HOFFA: 6.4 terabytes?

00:18:04.920 --> 00:18:07.920
Why is it 6.4 terabytes?

00:18:07.920 --> 00:18:09.529
GRAHAM POLLEY: So
it's 6.24 terabytes

00:18:09.529 --> 00:18:11.820
because, of course, BigQuery
like we touched on earlier

00:18:11.820 --> 00:18:14.460
is smart enough to work
out that the query itself

00:18:14.460 --> 00:18:17.560
isn't going over the whole data
set, which is 30 terabytes.

00:18:17.560 --> 00:18:20.025
And it just needs to pull at
those columns that we need.

00:18:20.025 --> 00:18:21.400
FELIPE HOFFA: Oh,
that's perfect.

00:18:21.400 --> 00:18:21.900
Very cool.

00:18:21.900 --> 00:18:24.560
GRAHAM POLLEY: So it's
still a huge amount of data.

00:18:24.560 --> 00:18:27.937
And it's 36.6 billion rows
that we're about to query.

00:18:27.937 --> 00:18:29.270
FELIPE HOFFA: 36.6 billion rows.

00:18:29.270 --> 00:18:30.920
Will it run?

00:18:30.920 --> 00:18:32.670
GRAHAM POLLEY: I hope so.

00:18:32.670 --> 00:18:34.170
FELIPE HOFFA: You
can do the honors.

00:18:34.170 --> 00:18:35.710
GRAHAM POLLEY:
Thank you so much.

00:18:35.710 --> 00:18:36.560
I'm really excited.

00:18:39.579 --> 00:18:40.870
FELIPE HOFFA: And it's running.

00:18:40.870 --> 00:18:43.440
I think it will take
more than 30 seconds.

00:18:43.440 --> 00:18:45.560
GRAHAM POLLEY: Yeah,
I'd imagine it's

00:18:45.560 --> 00:18:49.297
going to take a few minutes to
run, which is still phenomenal.

00:18:49.297 --> 00:18:51.380
FELIPE HOFFA: How are you
using the web interface?

00:18:51.380 --> 00:18:52.620
Tell me more about--

00:18:52.620 --> 00:18:54.120
LUKE ALEXANDER: So
the web interface

00:18:54.120 --> 00:18:57.040
is used by our agencies
and advertisers

00:18:57.040 --> 00:18:59.100
to be able to use those
graphs in presentations

00:18:59.100 --> 00:19:04.860
that they provide back to
their customers and advertisers

00:19:04.860 --> 00:19:07.160
in reports and
things that they use.

00:19:07.160 --> 00:19:10.130
I think some of the other
things that we talk about here

00:19:10.130 --> 00:19:13.540
is that we've learned
a lot by using BigQuery

00:19:13.540 --> 00:19:15.910
and we've had a lot of practice.

00:19:15.910 --> 00:19:18.100
We created a lot of
data in the first place.

00:19:18.100 --> 00:19:19.450
And we created a large mess.

00:19:19.450 --> 00:19:21.770
And we needed to learn to
clean up after ourselves.

00:19:21.770 --> 00:19:24.690
So a lot of this has
been we've introduced

00:19:24.690 --> 00:19:28.390
things like automated
cleanups, closing down

00:19:28.390 --> 00:19:30.900
tables when we're not
using them anymore,

00:19:30.900 --> 00:19:34.400
but also we're using
the dashboard in a--

00:19:34.400 --> 00:19:36.500
of the BigQuery
interfaces a dashboard

00:19:36.500 --> 00:19:37.770
for our operations team.

00:19:37.770 --> 00:19:41.330
So we feed our logs of
the success of the loads

00:19:41.330 --> 00:19:43.120
back into the tools
so our operations

00:19:43.120 --> 00:19:45.960
guys can check those logs,
check the size of the files that

00:19:45.960 --> 00:19:48.460
were processed,
look for anomalies.

00:19:48.460 --> 00:19:53.345
And it becomes our day to day
dashboard of data, really.

00:19:53.345 --> 00:19:55.547
FELIPE HOFFA: So you're
using the query not only

00:19:55.547 --> 00:19:57.130
to analyze all this
data, you're using

00:19:57.130 --> 00:19:58.380
it to analyze your operations.

00:19:58.380 --> 00:19:59.505
LUKE ALEXANDER: Operations.

00:19:59.505 --> 00:20:00.750
Yeah, absolutely.

00:20:00.750 --> 00:20:02.370
And then obviously
on top of that

00:20:02.370 --> 00:20:03.700
we've got that data in there.

00:20:03.700 --> 00:20:06.960
So quite often now when
the business come and go,

00:20:06.960 --> 00:20:11.510
I'd really like to know
how many people over 65

00:20:11.510 --> 00:20:15.830
have been to site X between
the hours of 2:00 and 4:00.

00:20:15.830 --> 00:20:18.435
And it's things that we
could never answer before.

00:20:18.435 --> 00:20:20.560
But the product people
really need that information

00:20:20.560 --> 00:20:22.140
for pricing purposes.

00:20:22.140 --> 00:20:23.150
We can now do that.

00:20:23.150 --> 00:20:25.560
We just run an ad hoc query,
using the web interface,

00:20:25.560 --> 00:20:27.410
and we've got the
results in seconds.

00:20:27.410 --> 00:20:31.204
So it created a whole new
set of opportunities for us.

00:20:31.204 --> 00:20:33.370
FELIPE HOFFA: And now you
have all the new features.

00:20:33.370 --> 00:20:36.470
You have the [INAUDIBLE]
actions streaming.

00:20:36.470 --> 00:20:38.470
I want to see what
you can do with that.

00:20:38.470 --> 00:20:39.450
LUKE ALEXANDER: Yeah, we've
got some big [INAUDIBLE]

00:20:39.450 --> 00:20:40.200
streaming already.

00:20:40.200 --> 00:20:43.320
So web streaming at
only 1,000 requests

00:20:43.320 --> 00:20:45.120
a second, it was a
bit limiting for us.

00:20:45.120 --> 00:20:47.050
But with the announcements
yesterday that's

00:20:47.050 --> 00:20:49.050
opened a whole new world
of possibilities to us.

00:20:49.050 --> 00:20:51.830
FELIPE HOFFA: 100,000
rows per second?

00:20:51.830 --> 00:20:53.290
LUKE ALEXANDER: Absolutely.

00:20:53.290 --> 00:20:55.720
So this is even
with the challenge

00:20:55.720 --> 00:21:00.230
of the big 36 billion rows, what
this has led us to understand

00:21:00.230 --> 00:21:02.620
is, how much data we've
got, how valuable that is.

00:21:02.620 --> 00:21:04.580
And we're even now
looking with the business

00:21:04.580 --> 00:21:08.180
about the different contexts in
which that data could be used.

00:21:08.180 --> 00:21:09.694
Now with the price
drops as well,

00:21:09.694 --> 00:21:11.110
this makes it even
more appealing.

00:21:11.110 --> 00:21:16.520
We can run more data,
look for more insights

00:21:16.520 --> 00:21:17.490
across more demands.

00:21:17.490 --> 00:21:20.030
So we're looking outside
of just ad serving.

00:21:20.030 --> 00:21:23.220
Now, we're looking at being
able to use this data in many

00:21:23.220 --> 00:21:25.250
of the contexts within Telstra.

00:21:25.250 --> 00:21:26.250
FELIPE HOFFA: I like it.

00:21:26.250 --> 00:21:28.245
You will bring it
to other clients.

00:21:28.245 --> 00:21:29.370
LUKE ALEXANDER: Absolutely.

00:21:29.370 --> 00:21:30.320
GRAHAM POLLEY: Definitely.

00:21:30.320 --> 00:21:31.840
FELIPE HOFFA: We still have
the query running here.

00:21:31.840 --> 00:21:32.860
GRAHAM POLLEY: So
it's still going.

00:21:32.860 --> 00:21:34.560
Yeah, we've got to bear in mind.

00:21:34.560 --> 00:21:36.945
It's crunching a serious
amount of data here.

00:21:36.945 --> 00:21:37.820
FELIPE HOFFA: I know.

00:21:37.820 --> 00:21:40.080
We're running over
seven terabytes of data.

00:21:40.080 --> 00:21:41.840
We're running a
regular expression.

00:21:41.840 --> 00:21:43.372
We are grouping.

00:21:43.372 --> 00:21:44.830
We are using
distributive grouping.

00:21:44.830 --> 00:21:46.674
We are shelving it as--

00:21:46.674 --> 00:21:48.340
LUKE ALEXANDER: Well,
I presume you are.

00:21:48.340 --> 00:21:49.756
We don't have to
worry about that.

00:21:49.756 --> 00:21:50.959
That's the great thing.

00:21:50.959 --> 00:21:53.500
And another of the big things
that we found with this as well

00:21:53.500 --> 00:21:58.275
was with its SQL-like interface,
it just created a massive--

00:21:58.275 --> 00:21:59.960
it brought down that
barrier to entry.

00:21:59.960 --> 00:22:02.660
We could get going on this
without necessarily knowing

00:22:02.660 --> 00:22:05.947
about the underlying
technology that's

00:22:05.947 --> 00:22:07.280
having to be in place to run it.

00:22:07.280 --> 00:22:10.280
We're not having to worry about
the log files and the disks

00:22:10.280 --> 00:22:11.670
that they're stored on.

00:22:11.670 --> 00:22:14.130
We're not having to worry
about who's cleaning those up,

00:22:14.130 --> 00:22:16.320
how much-- other than
how much it costs us

00:22:16.320 --> 00:22:17.449
when the data is in there.

00:22:17.449 --> 00:22:19.240
All that headache and
problem that we'd had

00:22:19.240 --> 00:22:20.530
before has gone away.

00:22:20.530 --> 00:22:21.650
And--

00:22:21.650 --> 00:22:22.480
FELIPE HOFFA: You're
not going back

00:22:22.480 --> 00:22:23.646
to your previous [INAUDIBLE]

00:22:23.646 --> 00:22:26.359
LUKE ALEXANDER: That's
never going back.

00:22:26.359 --> 00:22:27.650
FELIPE HOFFA: How's it running?

00:22:27.650 --> 00:22:32.390
GRAHAM POLLEY: So we're
up at 230 seconds now.

00:22:32.390 --> 00:22:34.660
I've got a feeling it's
getting close now, to the end.

00:22:34.660 --> 00:22:37.734
FELIPE HOFFA: Have you
run this query before?

00:22:37.734 --> 00:22:39.400
GRAHAM POLLEY: There
was a point in time

00:22:39.400 --> 00:22:41.260
a few weeks ago when
I was getting prepared

00:22:41.260 --> 00:22:43.030
that we did have
some data in there.

00:22:43.030 --> 00:22:45.680
And I just couldn't
resist having a look

00:22:45.680 --> 00:22:48.530
and running the query.

00:22:48.530 --> 00:22:51.120
But I only did it over
a smaller data set.

00:22:51.120 --> 00:22:54.540
I didn't do it on
this volume of data.

00:22:54.540 --> 00:22:57.690
FELIPE HOFFA: Well,
let's wait and see.

00:22:57.690 --> 00:22:59.399
Any parting points?

00:22:59.399 --> 00:23:01.690
LUKE ALEXANDER: No, I mean,
the announcements yesterday

00:23:01.690 --> 00:23:05.540
across the cloud board were
for me really exciting to hear.

00:23:05.540 --> 00:23:09.910
It's really stepping
up the opportunities

00:23:09.910 --> 00:23:13.930
for BigQuery and the
other Google products

00:23:13.930 --> 00:23:17.910
into the enterprise market
where we do most of our work.

00:23:17.910 --> 00:23:20.110
And our clients have been
really interested to see

00:23:20.110 --> 00:23:22.440
what we can do with the
technologies on offer now.

00:23:22.440 --> 00:23:24.190
FELIPE HOFFA: You
were-- you were featured

00:23:24.190 --> 00:23:27.730
in the "Wall Street
Journal" yesterday, too.

00:23:27.730 --> 00:23:29.910
LUKE ALEXANDER: We managed
to get a line in there.

00:23:29.910 --> 00:23:31.284
When the "Wall
Street" journalist

00:23:31.284 --> 00:23:35.300
was trying to quantify what
the price difference was

00:23:35.300 --> 00:23:38.000
and how that compared to other
offerings in the marketplace,

00:23:38.000 --> 00:23:42.920
we were able to give them a real
world example of our 36 billion

00:23:42.920 --> 00:23:48.130
row query, which was
going to cost us $248

00:23:48.130 --> 00:23:50.160
and now would cost
us less than $40.

00:23:50.160 --> 00:23:52.770
So we were able to give him
that real world example.

00:23:52.770 --> 00:23:56.680
And he was kind
enough to publish it.

00:23:56.680 --> 00:23:58.460
FELIPE HOFFA: We are at--

00:23:58.460 --> 00:24:00.330
GRAHAM POLLEY: At 320 seconds.

00:24:00.330 --> 00:24:01.996
FELIPE HOFFA: That's
about five minutes.

00:24:01.996 --> 00:24:03.250
And it's still running.

00:24:03.250 --> 00:24:05.505
GRAHAM POLLEY: And
it's still going.

00:24:05.505 --> 00:24:07.005
FELIPE HOFFA: Should
we go to a rec?

00:24:07.005 --> 00:24:10.672
Should we wait
until it finishes?

00:24:10.672 --> 00:24:11.880
MALE SPEAKER: Up to you guys.

00:24:11.880 --> 00:24:12.521
It's a--

00:24:12.521 --> 00:24:13.604
FELIPE HOFFA: It finished!

00:24:16.439 --> 00:24:17.480
GRAHAM POLLEY: All right.

00:24:17.480 --> 00:24:22.410
So we just processed 6.24
terabytes in 334 seconds.

00:24:22.410 --> 00:24:24.690
So BigQuery did its job.

00:24:24.690 --> 00:24:25.440
FELIPE HOFFA: Yay!

00:24:25.440 --> 00:24:26.997
GRAHAM POLLEY: High five.

00:24:26.997 --> 00:24:28.330
LUKE ALEXANDER: That's exciting.

00:24:28.330 --> 00:24:29.100
GRAHAM POLLEY: That's awesome.

00:24:29.100 --> 00:24:29.600
That's--

00:24:29.600 --> 00:24:31.850
FELIPE HOFFA: We went
over the big, big table.

00:24:31.850 --> 00:24:34.170
30 billion rows.

00:24:34.170 --> 00:24:36.329
We can now see a
whole year of data.

00:24:36.329 --> 00:24:38.370
GRAHAM POLLEY: This is a
whole year of data, yep.

00:24:38.370 --> 00:24:40.203
So this is, of course,
the aggregation table

00:24:40.203 --> 00:24:42.700
here in its raw format
inside the query.

00:24:42.700 --> 00:24:45.810
So what I can do is
I can flip back over.

00:24:45.810 --> 00:24:47.660
And maybe we can
have a look at what

00:24:47.660 --> 00:24:50.460
insights that data is now
giving us over a year.

00:24:50.460 --> 00:24:53.509
So I'm just going to knock off
the other ones, which I'm just

00:24:53.509 --> 00:24:54.800
going to take these two graphs.

00:24:57.809 --> 00:24:59.850
FELIPE HOFFA: And you're
running the same app now

00:24:59.850 --> 00:25:03.280
over a year of data you are
able to see-- Going over

00:25:03.280 --> 00:25:04.620
a month was a dream.

00:25:04.620 --> 00:25:06.100
Going over a year
was impossible.

00:25:06.100 --> 00:25:07.516
GRAHAM POLLEY:
This is new for us.

00:25:07.516 --> 00:25:08.450
This is--

00:25:08.450 --> 00:25:10.533
LUKE ALEXANDER: Yeah,
opened up new possibilities.

00:25:10.533 --> 00:25:13.290
So we started to look
at what insights could

00:25:13.290 --> 00:25:15.790
we get about our data
over an entire year.

00:25:15.790 --> 00:25:17.670
We've got some train
graphs here showing

00:25:17.670 --> 00:25:22.010
our male and female viewers
across the different sites

00:25:22.010 --> 00:25:23.400
across our entire network.

00:25:23.400 --> 00:25:25.740
And we see that during
the Australian sporting

00:25:25.740 --> 00:25:28.220
season around
February, March time,

00:25:28.220 --> 00:25:31.560
we start to ramp up the
number of male users.

00:25:31.560 --> 00:25:33.670
But female users keeps
kind of constant.

00:25:33.670 --> 00:25:35.580
And back at the end
of the football season

00:25:35.580 --> 00:25:37.810
that user base declines.

00:25:37.810 --> 00:25:39.060
FELIPE HOFFA: This is awesome.

00:25:39.060 --> 00:25:40.580
I love those graphs.

00:25:40.580 --> 00:25:41.840
Thank you very much, Graham.

00:25:41.840 --> 00:25:43.440
Thank you very much, Luke.

00:25:43.440 --> 00:25:44.740
I hope to see you again.

00:25:44.740 --> 00:25:45.520
GRAHAM POLLEY:
Thank you, Felipe.

00:25:45.520 --> 00:25:47.010
LUKE ALEXANDER:
Thanks very much.

00:25:47.010 --> 00:25:48.590
FELIPE HOFFA: The [INAUDIBLE].

00:25:48.590 --> 00:25:50.190
Everything worked out.

00:25:50.190 --> 00:25:50.860
I'm so happy.

00:25:50.860 --> 00:25:52.650
This is awesome.

00:25:52.650 --> 00:25:55.080
Please, stay curious.

