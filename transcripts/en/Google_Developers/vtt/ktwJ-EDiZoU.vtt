WEBVTT
Kind: captions
Language: en

00:00:07.410 --> 00:00:08.480
ADDY OSMANI: Hey guys.

00:00:08.480 --> 00:00:10.700
And welcome to "The Breakpoint,"
a brand new show

00:00:10.700 --> 00:00:13.030
on Google Developers Live,
where we're going to be

00:00:13.030 --> 00:00:17.040
focusing on DevTools and
tooling in general.

00:00:17.040 --> 00:00:21.010
My name is Addy Osmani and
joining me is Paul Irish.

00:00:21.010 --> 00:00:23.550
PAUL LEWIS: That's not
technically true.

00:00:23.550 --> 00:00:24.250
ADDY OSMANI: Who are you?

00:00:24.250 --> 00:00:25.240
PAUL LEWIS: I'm Paul Lewis.

00:00:25.240 --> 00:00:26.390
ADDY OSMANI: You're
not Paul Irish.

00:00:26.390 --> 00:00:26.860
PAUL LEWIS: No.

00:00:26.860 --> 00:00:27.780
I'm not Paul Irish.

00:00:27.780 --> 00:00:30.320
I made a mask to try and
cover up for the fact.

00:00:30.320 --> 00:00:33.070
I don't think it worked
out if I'm honest.

00:00:33.070 --> 00:00:34.270
Yeah, I'm Paul Lewis, Developer

00:00:34.270 --> 00:00:36.100
Programs engineer at Google.

00:00:36.100 --> 00:00:37.940
The reason I'm standing
in for Paul Irish

00:00:37.940 --> 00:00:39.050
today is he's unwell.

00:00:39.050 --> 00:00:41.490
So get better soon, Paul.

00:00:41.490 --> 00:00:41.880
ADDY OSMANI: Get well soon!

00:00:41.880 --> 00:00:42.285
PAUL LEWIS: Yeah.

00:00:42.285 --> 00:00:42.690
ADDY OSMANI: Yeah.

00:00:42.690 --> 00:00:43.930
PAUL LEWIS: So we're
here to talk about

00:00:43.930 --> 00:00:45.400
DevTools and Yeoman.

00:00:45.400 --> 00:00:46.490
ADDY OSMANI: Yeah, we're
here to talk about

00:00:46.490 --> 00:00:49.400
DevTools and tooling.

00:00:49.400 --> 00:00:50.760
Tooling's important.

00:00:50.760 --> 00:00:52.592
There have been a lot of
developers recently that have

00:00:52.592 --> 00:00:55.960
been starting to take a long,
hard look at their workflow

00:00:55.960 --> 00:00:57.220
and the different tools
that they use on

00:00:57.220 --> 00:00:58.530
a day-to-day basis.

00:00:58.530 --> 00:01:01.250
And hopefully in the show over
the next couple of episodes,

00:01:01.250 --> 00:01:02.910
we're going to give you some
tips and tricks on how you can

00:01:02.910 --> 00:01:05.970
improve your workflow and
the tools that you use.

00:01:05.970 --> 00:01:07.985
So, Paul?

00:01:07.985 --> 00:01:08.400
PAUL LEWIS: Yup.

00:01:08.400 --> 00:01:09.490
ADDY OSMANI: What do you
think about tooling?

00:01:09.490 --> 00:01:11.170
PAUL LEWIS: So well, we
were talking about

00:01:11.170 --> 00:01:11.780
this earlier today.

00:01:11.780 --> 00:01:15.800
And we were talking about the
kind of things that you do

00:01:15.800 --> 00:01:18.040
almost on a day-to-day basis,
like when you start an

00:01:18.040 --> 00:01:19.300
application for the
first time.

00:01:19.300 --> 00:01:22.830
You go off and you get the
dependencies that you need,

00:01:22.830 --> 00:01:23.570
the libraries.

00:01:23.570 --> 00:01:26.260
Maybe you even look around and
say, well, what do I need?

00:01:26.260 --> 00:01:27.640
You'll come to this conclusion,
I'm going to do,

00:01:27.640 --> 00:01:28.700
say, an MVC app.

00:01:28.700 --> 00:01:29.210
ADDY OSMANI: Yeah.

00:01:29.210 --> 00:01:32.310
PAUL LEWIS: OK, so I'm going to
maybe get Backbone or Ember

00:01:32.310 --> 00:01:33.180
or one of these things.

00:01:33.180 --> 00:01:33.520
ADDY OSMANI: Yeah, or Angular.

00:01:33.520 --> 00:01:34.340
Something like that, yeah.

00:01:34.340 --> 00:01:35.030
PAUL LEWIS: Yup,
Angular, yeah.

00:01:35.030 --> 00:01:37.170
So then I go off and
I download that.

00:01:37.170 --> 00:01:39.300
Find maybe the repo,
go and get that.

00:01:39.300 --> 00:01:41.640
Start coding.

00:01:41.640 --> 00:01:43.570
There's a bit of fun in the
middle of there where I'm

00:01:43.570 --> 00:01:47.120
constantly back and forth,
iterating in my editor and

00:01:47.120 --> 00:01:50.110
also checking in the browser
back and forth.

00:01:50.110 --> 00:01:54.110
And then I build it because I
want to compress my assets--

00:01:54.110 --> 00:01:54.870
ADDY OSMANI: Yeah.

00:01:54.870 --> 00:01:56.680
PAUL LEWIS: --and you get all
the scripts together.

00:01:56.680 --> 00:01:57.850
ADDY OSMANI: That's sounds
awfully manual.

00:01:57.850 --> 00:02:00.040
There's like a whole lot of
manual grunt work there.

00:02:00.040 --> 00:02:01.442
PAUL LEWIS: If I'm honest,
if I'm doing grunt

00:02:01.442 --> 00:02:02.650
work, I like it.

00:02:02.650 --> 00:02:06.720
If I'm honest, that is pretty
much how I used build apps.

00:02:06.720 --> 00:02:08.720
And I understand that Yeoman
is going to help me out.

00:02:08.720 --> 00:02:09.930
ADDY OSMANI: Well, hopefully,
it will.

00:02:09.930 --> 00:02:11.980
We found that a lot of
developers are pretty much

00:02:11.980 --> 00:02:13.550
doing exactly what Paul
Lewis is doing.

00:02:13.550 --> 00:02:15.520
It's like they're manually
going and getting their

00:02:15.520 --> 00:02:16.310
dependencies.

00:02:16.310 --> 00:02:18.750
They're manually writing out
an awful lot of boilerplate

00:02:18.750 --> 00:02:21.360
code whenever they want to
create a new application.

00:02:21.360 --> 00:02:24.780
And we think that instead of
being one of those developers

00:02:24.780 --> 00:02:28.160
that take like 45 minutes to get
set up whenever you want

00:02:28.160 --> 00:02:29.630
to create a new project,
you should just

00:02:29.630 --> 00:02:30.585
like take five minutes.

00:02:30.585 --> 00:02:32.830
If you've got your workflow down
properly, it should just

00:02:32.830 --> 00:02:34.370
take you 5 or 10 minutes.

00:02:34.370 --> 00:02:36.900
And then you can have a working
prototype going just

00:02:36.900 --> 00:02:39.040
soon after if you've got
your workflow down.

00:02:39.040 --> 00:02:40.550
So we're going to give you some
tips on how to do that

00:02:40.550 --> 00:02:41.950
today with Yeoman.

00:02:41.950 --> 00:02:44.940
But before we do that, we're
going to take a look at some

00:02:44.940 --> 00:02:48.390
of the new stuff that's landed
in the Chrome DevTools, or

00:02:48.390 --> 00:02:51.490
Developer Tools, over the
past couple months.

00:02:51.490 --> 00:02:54.910
So let me switch to my screen.

00:02:54.910 --> 00:02:57.140
OK, so this is Chrome Stable
at the moment.

00:02:57.140 --> 00:03:00.340
And I guess one of the big
things that we added in the

00:03:00.340 --> 00:03:03.600
past couple months was better
support for mobile debugging

00:03:03.600 --> 00:03:05.760
and debugging your mobile
web apps just

00:03:05.760 --> 00:03:07.330
as easily as possible.

00:03:07.330 --> 00:03:09.760
So I'm currently in Settings
at the moment.

00:03:09.760 --> 00:03:11.440
Let me exit that out.

00:03:11.440 --> 00:03:13.820
Most people who are familiar
with the Developer Tools

00:03:13.820 --> 00:03:17.310
probably know that you can go
into the cog at the very right

00:03:17.310 --> 00:03:19.280
corner of the screen,
and that will open

00:03:19.280 --> 00:03:21.110
up a bunch of settings.

00:03:21.110 --> 00:03:23.830
You can then go to the Overrides
tab, and in there,

00:03:23.830 --> 00:03:24.850
you'll see a few options.

00:03:24.850 --> 00:03:27.880
You'll see User Agent,
Device Metrics, and

00:03:27.880 --> 00:03:29.410
Emulate Touch Events.

00:03:29.410 --> 00:03:32.210
Now, just to give you a quick
visual demo of what this does,

00:03:32.210 --> 00:03:35.420
if I go and I select User Agent,
so I pick a specific

00:03:35.420 --> 00:03:38.640
browser or perhaps a browser
pair with an operating system

00:03:38.640 --> 00:03:41.550
I go and I configure some device
metrics, I can actually

00:03:41.550 --> 00:03:43.820
go and preview what this
site looks like.

00:03:43.820 --> 00:03:47.210
So I'm previewing what
google.com looks like on an

00:03:47.210 --> 00:03:49.280
iPhone using iOS 5.

00:03:49.280 --> 00:03:52.380
And I've set my device metrics
to have a set screen

00:03:52.380 --> 00:03:54.710
resolution of 320 by 480.

00:03:54.710 --> 00:03:58.130
I can also change the font scale
factor if I want to see

00:03:58.130 --> 00:04:00.660
how fonts may render differently
on mobile devices.

00:04:00.660 --> 00:04:02.640
And I can also emulate
touch events.

00:04:02.640 --> 00:04:04.910
I'm not going to show you
how that works just yet.

00:04:04.910 --> 00:04:05.760
But it's--

00:04:05.760 --> 00:04:06.565
what do you think, Paul?

00:04:06.565 --> 00:04:06.730
Is it useful?

00:04:06.730 --> 00:04:07.730
PAUL LEWIS: That's amazing,
actually.

00:04:07.730 --> 00:04:10.800
So you can quickly choose--

00:04:10.800 --> 00:04:12.590
like you say, I want
to see what this

00:04:12.590 --> 00:04:13.720
looks like for an iPhone.

00:04:13.720 --> 00:04:15.080
I want to see what this looks
like-- what else do we

00:04:15.080 --> 00:04:16.110
have in that list?

00:04:16.110 --> 00:04:17.029
ADDY OSMANI: Oh, we've
got a ton of stuff.

00:04:17.029 --> 00:04:17.369
PAUL LEWIS: No.

00:04:17.369 --> 00:04:20.820
ADDY OSMANI: We've got iPads,
Android devices, BlackBerrys,

00:04:20.820 --> 00:04:22.790
and then the browsers that
you're used to on desktop.

00:04:22.790 --> 00:04:24.790
And we've got other options as
well in case you want to

00:04:24.790 --> 00:04:25.880
customize it.

00:04:25.880 --> 00:04:26.350
PAUL LEWIS: I like it.

00:04:26.350 --> 00:04:28.300
ADDY OSMANI: We've got a ton
of options in there.

00:04:28.300 --> 00:04:29.550
But this is useful.

00:04:31.650 --> 00:04:33.420
I was about to show people
Chrome Canary and some of the

00:04:33.420 --> 00:04:33.880
new stuff in there.

00:04:33.880 --> 00:04:35.290
Do you use Canary for your--

00:04:35.290 --> 00:04:35.570
PAUL LEWIS: Yeah.

00:04:35.570 --> 00:04:40.570
So I think this is what we
say regularly anyway.

00:04:40.570 --> 00:04:42.720
Because you can have Canary
alongside Chrome Stable.

00:04:42.720 --> 00:04:44.580
So it's kind of good to
have Canary open.

00:04:44.580 --> 00:04:48.490
You can see what's kind of
coming down the line and just

00:04:48.490 --> 00:04:50.430
check that everything still
play nicely, get

00:04:50.430 --> 00:04:51.300
access to new features.

00:04:51.300 --> 00:04:51.740
ADDY OSMANI: Exactly.

00:04:51.740 --> 00:04:52.740
PAUL LEWIS: Which is I'm pretty
sure what you're going

00:04:52.740 --> 00:04:53.360
to do here.

00:04:53.360 --> 00:04:54.170
ADDY OSMANI: Exactly.

00:04:54.170 --> 00:04:55.520
PAUL LEWIS: And have Stable
alongside it so you can

00:04:55.520 --> 00:04:58.680
actually see what all your users
are seeing when they're

00:04:58.680 --> 00:04:59.005
building your app.

00:04:59.005 --> 00:05:00.540
ADDY OSMANI: Yeah, so most of
the time, I think people will

00:05:00.540 --> 00:05:02.790
be using Chrome Stable when
they're testing out, like you

00:05:02.790 --> 00:05:04.530
said, what their
users have got.

00:05:04.530 --> 00:05:07.350
But if you want to be using the
latest, hottest features

00:05:07.350 --> 00:05:09.780
in the Chrome Developer Tools
there's no reason why you

00:05:09.780 --> 00:05:13.310
can't be using Canary for
your debugging instead.

00:05:13.310 --> 00:05:16.140
So I'm going to show
you some new stuff.

00:05:16.140 --> 00:05:20.340
Before we go and try out some
features, if you take a look

00:05:20.340 --> 00:05:23.090
at Chrome Flags--

00:05:23.090 --> 00:05:24.510
PAUL LEWIS: Which you should
do anyway, right?

00:05:24.510 --> 00:05:24.690
ADDY OSMANI: Yeah.

00:05:24.690 --> 00:05:25.840
PAUL LEWIS: Because there's
tons of really cool

00:05:25.840 --> 00:05:26.190
things you can do.

00:05:26.190 --> 00:05:27.360
ADDY OSMANI: There is so
much stuff in here.

00:05:27.360 --> 00:05:29.150
PAUL LEWIS: The one I've been
playing with recently is the

00:05:29.150 --> 00:05:33.890
ability to pipe the microphone
through to the Web Audio API,

00:05:33.890 --> 00:05:34.840
which is amazing.

00:05:34.840 --> 00:05:35.760
ADDY OSMANI: Yeah, that
stuff just landed

00:05:35.760 --> 00:05:36.690
recently, too, right?

00:05:36.690 --> 00:05:37.510
PAUL LEWIS: Just the last
couple of weeks.

00:05:37.510 --> 00:05:40.960
So that's a really good way to
see, as we said, what's coming

00:05:40.960 --> 00:05:41.360
down the line.

00:05:41.360 --> 00:05:42.920
So definitely like to
do some of that.

00:05:42.920 --> 00:05:43.800
ADDY OSMANI: Yeah.

00:05:43.800 --> 00:05:45.840
So because we're looking at
the Developer Tools at the

00:05:45.840 --> 00:05:48.460
moment, scroll down to the
option that says Enable

00:05:48.460 --> 00:05:50.050
Developer Tools Experiments.

00:05:50.050 --> 00:05:52.130
And this a new option that will
let you take a look at

00:05:52.130 --> 00:05:53.210
some of the features
that we've been

00:05:53.210 --> 00:05:54.890
working on very recently.

00:05:54.890 --> 00:05:57.680
They're not all finished
and polished off.

00:05:57.680 --> 00:06:00.040
But you can try them right away
and see what's going on

00:06:00.040 --> 00:06:02.060
and if they're going to be
useful to your workflow.

00:06:02.060 --> 00:06:04.260
So I've gone and I've
enabled them.

00:06:04.260 --> 00:06:07.420
I need to actually go and
relaunch my browser now, just

00:06:07.420 --> 00:06:09.640
so those changes will
take effect.

00:06:09.640 --> 00:06:10.840
That will load up
very quickly.

00:06:10.840 --> 00:06:13.840
I've got all my tabs back,
which is awesome.

00:06:13.840 --> 00:06:17.720
And now, I'm just going to
go back to tab I was on.

00:06:17.720 --> 00:06:19.050
And let's go through some
of the features.

00:06:19.050 --> 00:06:21.320
So I'm clicking on the
cog once again.

00:06:21.320 --> 00:06:23.020
And now you'll notice
that we have a new

00:06:23.020 --> 00:06:24.910
Experiments tab, right?

00:06:24.910 --> 00:06:26.750
So let's go to Experiments.

00:06:26.750 --> 00:06:28.190
I've going to bump up the font
size a little bit so people

00:06:28.190 --> 00:06:30.000
can see these.

00:06:30.000 --> 00:06:31.740
Now, you see a warning
at the very top.

00:06:31.740 --> 00:06:34.680
Basically, these experiments
are subject to change.

00:06:34.680 --> 00:06:36.960
They're not finalized
or stable just yet.

00:06:36.960 --> 00:06:38.590
But you can try them out.

00:06:38.590 --> 00:06:40.355
So some of things on this list--
have you been using any

00:06:40.355 --> 00:06:40.500
of this stuff?

00:06:40.500 --> 00:06:40.890
PAUL LEWIS: Yes.

00:06:40.890 --> 00:06:43.425
I've been using the file
system inspection one.

00:06:43.425 --> 00:06:43.900
ADDY OSMANI: What
does that do?

00:06:43.900 --> 00:06:46.160
PAUL LEWIS: So it gives you--
alongside all the other

00:06:46.160 --> 00:06:50.310
resources that you see, so any
the Index DB tables all those

00:06:50.310 --> 00:06:52.170
kind things, you'll see a new
one appear at the bottom,

00:06:52.170 --> 00:06:52.990
which is the File System.

00:06:52.990 --> 00:06:56.470
So anything you use, anything
you store using the Chrome

00:06:56.470 --> 00:06:59.470
File System is available
there.

00:06:59.470 --> 00:07:01.410
So it's really convenient if
you just wanted to see what

00:07:01.410 --> 00:07:03.610
Chrome actually stored under the
hood when you use the file

00:07:03.610 --> 00:07:04.480
system API.

00:07:04.480 --> 00:07:05.990
ADDY OSMANI: That is so cool.

00:07:05.990 --> 00:07:07.250
So there's a bunch
of stuff in here.

00:07:07.250 --> 00:07:08.520
There's Snippet support.

00:07:08.520 --> 00:07:10.270
There's CSS Regions support.

00:07:10.270 --> 00:07:13.030
So have you taken a look
at CSS Regions before?

00:07:13.030 --> 00:07:13.610
PAUL LEWIS: I have.

00:07:13.610 --> 00:07:14.060
ADDY OSMANI: You have?

00:07:14.060 --> 00:07:14.946
PAUL LEWIS: I have.

00:07:14.946 --> 00:07:15.900
You going to show us?

00:07:15.900 --> 00:07:17.900
ADDY OSMANI: I'm not going to
show a demo of this just yet.

00:07:17.900 --> 00:07:20.770
I want to show people Snippets
and some other things.

00:07:20.770 --> 00:07:23.250
But basically with CSS
Regions, we have some

00:07:23.250 --> 00:07:26.850
experimental support of how you
can go and inspect name

00:07:26.850 --> 00:07:29.850
flows on the page and take a
look at sort of any other

00:07:29.850 --> 00:07:32.750
highlighted regions that you
want to see in your document

00:07:32.750 --> 00:07:34.530
at the moment, which is cool.

00:07:34.530 --> 00:07:35.980
We've got a bunch
of other stuff.

00:07:35.980 --> 00:07:38.760
PAUL LEWIS: I like this Override
Device Geolocation.

00:07:38.760 --> 00:07:39.740
That's really handy.

00:07:39.740 --> 00:07:41.520
Because again if you
find yourself--

00:07:41.520 --> 00:07:42.790
you're building the site
with geolocation.

00:07:42.790 --> 00:07:44.410
You're like, yeah, but
how does this work

00:07:44.410 --> 00:07:46.710
in the middle of--

00:07:46.710 --> 00:07:47.700
I was going to say in the
middle of London.

00:07:47.700 --> 00:07:48.310
I'm in the middle of London.

00:07:48.310 --> 00:07:49.320
Well done, Paul.

00:07:49.320 --> 00:07:50.530
The middle of the US.

00:07:50.530 --> 00:07:51.370
I'm not there.

00:07:51.370 --> 00:07:52.170
I'm in London.

00:07:52.170 --> 00:07:54.430
So that would be brilliant
for that.

00:07:54.430 --> 00:07:55.800
ADDY OSMANI: This sounds like
the type of feature that would

00:07:55.800 --> 00:07:57.110
let me change your location--

00:07:57.110 --> 00:07:57.450
PAUL LEWIS: Yes.

00:07:57.450 --> 00:07:58.020
ADDY OSMANI: --if I wanted to.

00:07:58.020 --> 00:07:59.210
This sounds exciting.

00:07:59.210 --> 00:08:01.180
PAUL LEWIS: That's mean.

00:08:01.180 --> 00:08:02.600
ADDY OSMANI: You were expecting
anything else?

00:08:02.600 --> 00:08:03.310
PAUL LEWIS: No, I wasn't.

00:08:03.310 --> 00:08:03.880
ADDY OSMANI: OK, right.

00:08:03.880 --> 00:08:06.280
All right so Override
Device Geolocation.

00:08:06.280 --> 00:08:07.110
What does that do?

00:08:07.110 --> 00:08:08.140
So if we go back--

00:08:08.140 --> 00:08:09.160
let's enable it first of all.

00:08:09.160 --> 00:08:12.120
So Override Device
Geolocation.

00:08:12.120 --> 00:08:14.086
Let's enable a few of these so
I can actually show them to

00:08:14.086 --> 00:08:16.050
you, right?

00:08:16.050 --> 00:08:17.810
PAUL LEWIS: Presumably we need
a restart there, right?

00:08:17.810 --> 00:08:21.390
ADDY OSMANI: Yes, we need
to reopen the DevTools.

00:08:21.390 --> 00:08:23.800
Whoop.

00:08:23.800 --> 00:08:26.190
And now you'll see that there's
a bunch of other

00:08:26.190 --> 00:08:28.570
overrides that have introduced
since the Overrides tab.

00:08:28.570 --> 00:08:31.820
Now with Override Geolocation,
if I were to select that I can

00:08:31.820 --> 00:08:35.770
then go and type in custom
long/lat details, which I can

00:08:35.770 --> 00:08:37.590
use when I'm debugging
my applications.

00:08:37.590 --> 00:08:40.559
So I don't have to go and worry
about hard coding values

00:08:40.559 --> 00:08:41.780
or anything like that
into my app.

00:08:41.780 --> 00:08:45.130
I can just do it while I'm
debugging and have my app sort

00:08:45.130 --> 00:08:47.860
of react to that, which
is pretty cool.

00:08:47.860 --> 00:08:50.790
Another thing that we've got
is the ability to override

00:08:50.790 --> 00:08:52.610
device orientation.

00:08:52.610 --> 00:08:54.490
So if you wanted to sort of
see what would happen if

00:08:54.490 --> 00:08:56.840
someone turned around the
devices they're using--

00:08:56.840 --> 00:08:58.470
PAUL LEWIS: It's almost like you
wouldn't want to take your

00:08:58.470 --> 00:08:59.850
laptop and go, whee, with it.

00:08:59.850 --> 00:09:00.740
ADDY OSMANI: Exactly.

00:09:00.740 --> 00:09:02.720
And there have been people that
have been doing that.

00:09:02.720 --> 00:09:03.100
PAUL LEWIS: Really?

00:09:03.100 --> 00:09:03.620
ADDY OSMANI: Yes.

00:09:03.620 --> 00:09:05.530
I've seen people in some
offices doing that.

00:09:05.530 --> 00:09:06.060
PAUL LEWIS: Well,
that's awkward.

00:09:06.060 --> 00:09:07.240
ADDY OSMANI: It's crazy.

00:09:07.240 --> 00:09:08.425
PAUL LEWIS: Imagine the
looks you'd get.

00:09:08.425 --> 00:09:12.760
And now through the power of the
Chrome DevTools, no more.

00:09:12.760 --> 00:09:13.450
PAUL LEWIS: You've got them.

00:09:13.450 --> 00:09:14.600
It's awesome.

00:09:14.600 --> 00:09:17.870
So one other thing that I
enabled was something called

00:09:17.870 --> 00:09:19.190
Snippets support.

00:09:19.190 --> 00:09:20.870
Have you used Snippets before?

00:09:20.870 --> 00:09:21.660
PAUL LEWIS: I have
used Snippets.

00:09:21.660 --> 00:09:23.325
But what are you going
to do here?

00:09:23.325 --> 00:09:24.110
ADDY OSMANI: What am
I going to do here?

00:09:24.110 --> 00:09:25.160
I'm just going to show you
what Snippets are.

00:09:25.160 --> 00:09:26.290
PAUL LEWIS: Oh, I like it.

00:09:26.290 --> 00:09:27.870
ADDY OSMANI: So we've got a
bunch of tabs in Chrome

00:09:27.870 --> 00:09:28.990
Developer Tools.

00:09:28.990 --> 00:09:32.460
If I go to sources and you've
enabled Snippets in the

00:09:32.460 --> 00:09:36.270
experiments, you can actually
go to a Snippets sub-tab.

00:09:36.270 --> 00:09:39.390
And you're able to now sort
of create new Snippets.

00:09:39.390 --> 00:09:41.560
And Snippets are basically just
blocks of scripts that

00:09:41.560 --> 00:09:44.250
you can create, save, or
execute, and easily store them

00:09:44.250 --> 00:09:45.500
inside the DevTools in
case you want to

00:09:45.500 --> 00:09:46.970
use them at any point.

00:09:46.970 --> 00:09:49.960
So I can go and I can add in
custom functions doing--

00:09:55.330 --> 00:09:56.380
or something.

00:09:56.380 --> 00:09:57.320
I don't know.

00:09:57.320 --> 00:09:59.140
You could have any sort of
function you want in here and

00:09:59.140 --> 00:10:01.010
just have it execute.

00:10:01.010 --> 00:10:02.450
And it all works.

00:10:02.450 --> 00:10:04.020
It's pretty neat.

00:10:04.020 --> 00:10:06.310
PAUL LEWIS: So how would
you then use

00:10:06.310 --> 00:10:07.910
that Snippet in your--

00:10:07.910 --> 00:10:09.140
so you've created
this Snippet--

00:10:09.140 --> 00:10:12.350
ADDY OSMANI: Yeah, so you can
go and run this if you want.

00:10:12.350 --> 00:10:13.720
This code isn't going to run
because it doesn't actually

00:10:13.720 --> 00:10:14.690
have anything in there.

00:10:14.690 --> 00:10:16.270
But you can then go and
run these Snippets

00:10:16.270 --> 00:10:17.400
any time you want.

00:10:17.400 --> 00:10:19.080
You can have them interact
with the page if

00:10:19.080 --> 00:10:19.890
you want to do that.

00:10:19.890 --> 00:10:20.360
PAUL LEWIS: Oh, OK.

00:10:20.360 --> 00:10:21.960
ADDY OSMANI: And it's just
supposed to be a nice little

00:10:21.960 --> 00:10:23.000
addition to your work.

00:10:23.000 --> 00:10:25.010
PAUL LEWIS: So let's so you
created some kind of script

00:10:25.010 --> 00:10:27.510
that helps you debug.

00:10:27.510 --> 00:10:27.930
ADDY OSMANI: Yeah.

00:10:27.930 --> 00:10:30.350
PAUL LEWIS: So I mean I'm
very much in the GPU and

00:10:30.350 --> 00:10:30.950
performance thing.

00:10:30.950 --> 00:10:33.510
So I'm very much kind of
thinking, hey, I could have a

00:10:33.510 --> 00:10:36.270
little Snippet that could do
something crazy with the WebGL

00:10:36.270 --> 00:10:38.360
context that I only want to
do when I'm debugging.

00:10:38.360 --> 00:10:40.000
I don't want to include it
as a script to my thing.

00:10:40.000 --> 00:10:41.350
I could create a Snippet.

00:10:41.350 --> 00:10:41.625
ADDY OSMANI: Exactly.

00:10:41.625 --> 00:10:43.280
PAUL LEWIS: I just run that
whenever I've got a problem.

00:10:43.280 --> 00:10:43.334
ADDY OSMANI: Exactly.

00:10:43.334 --> 00:10:45.460
And you can just go straight
back into the Snippets tab and

00:10:45.460 --> 00:10:46.900
run that code any time
you want, which is

00:10:46.900 --> 00:10:47.680
really, really fun.

00:10:47.680 --> 00:10:48.600
PAUL LEWIS: Sold.

00:10:48.600 --> 00:10:49.440
ADDY OSMANI: Awesome.

00:10:49.440 --> 00:10:51.450
So one other thing I wanted
to talk about.

00:10:51.450 --> 00:10:52.800
So we've taken a look
at some of the

00:10:52.800 --> 00:10:54.330
experiments in Chrome Canary.

00:10:54.330 --> 00:10:55.720
We've taken a look at
what's in stable.

00:10:55.720 --> 00:10:58.840
One other thing that we think
developers should care about

00:10:58.840 --> 00:11:01.320
are the Developer Tools
Extensions that are available

00:11:01.320 --> 00:11:02.260
at the moment.

00:11:02.260 --> 00:11:05.500
One that I've written about
previously was called Tincr.

00:11:05.500 --> 00:11:07.700
And I'm going to show you a
preview of what Tincr does.

00:11:07.700 --> 00:11:09.090
It's pretty awesome.

00:11:09.090 --> 00:11:12.330
So I'm just going to serve
up a directory.

00:11:12.330 --> 00:11:14.900
This is my TodoMVC project.

00:11:14.900 --> 00:11:18.760
And I probably want to go and
switch off my overrides just

00:11:18.760 --> 00:11:20.400
so I can see the entire page.

00:11:20.400 --> 00:11:21.400
It's so cool.

00:11:21.400 --> 00:11:22.480
PAUL LEWIS: You see how
easy that was, right?

00:11:22.480 --> 00:11:23.050
ADDY OSMANI: That's
really nice.

00:11:23.050 --> 00:11:24.380
PAUL LEWIS: He just takes that
box over and takes that one

00:11:24.380 --> 00:11:25.720
check, that box.

00:11:25.720 --> 00:11:26.630
ADDY OSMANI: It's so nice.

00:11:26.630 --> 00:11:27.280
PAUL LEWIS: Oh, yeah.

00:11:27.280 --> 00:11:28.480
ADDY OSMANI: Now, Tincr is
there's something that's

00:11:28.480 --> 00:11:33.530
available over at the Tincr
website, so tin.cr.

00:11:33.530 --> 00:11:36.810
And what Tincr does is it allows
you to make changes

00:11:36.810 --> 00:11:39.720
within the Developer Tools to a
page and have those changes

00:11:39.720 --> 00:11:43.330
actually be saved and persist to
your original source files.

00:11:43.330 --> 00:11:46.640
So if I made like style changes
or changes to script

00:11:46.640 --> 00:11:48.810
or anything like that, those
changes can actually be saved

00:11:48.810 --> 00:11:49.940
to the source files.

00:11:49.940 --> 00:11:51.050
PAUL LEWIS: This is what I was
talking about earlier.

00:11:51.050 --> 00:11:51.450
ADDY OSMANI: Yeah.

00:11:51.450 --> 00:11:53.810
PAUL LEWIS: Like when you're
building an application and

00:11:53.810 --> 00:11:55.940
then you're like, oh, I'll
switch to Chrome.

00:11:55.940 --> 00:11:58.520
Ah, I'll just change that in
the DevTools because that

00:11:58.520 --> 00:11:59.400
color's slightly off.

00:11:59.400 --> 00:12:01.350
And then you kind of have to
remember if you make like 10

00:12:01.350 --> 00:12:02.870
or 15 changes--

00:12:02.870 --> 00:12:03.690
ADDY OSMANI: It's a big deal.

00:12:03.690 --> 00:12:05.020
You've got to copy those
things over here.

00:12:05.020 --> 00:12:05.980
Or you have to make sure
that you don't

00:12:05.980 --> 00:12:07.140
like reload your page.

00:12:07.140 --> 00:12:07.830
It's a pain.

00:12:07.830 --> 00:12:09.110
PAUL LEWIS: Or if you do reload
your page, you're like,

00:12:09.110 --> 00:12:10.810
no, I've lost all
those things.

00:12:10.810 --> 00:12:11.860
ADDY OSMANI: Exactly.

00:12:11.860 --> 00:12:13.270
Exactly.

00:12:13.270 --> 00:12:16.030
Right, so with Tincr, what you
do is you first choose the

00:12:16.030 --> 00:12:17.490
type of project that
you're working on.

00:12:17.490 --> 00:12:19.640
I'm currently inside a new
Tincr tab that's in the

00:12:19.640 --> 00:12:22.980
DevTools, which you'll have when
you install it, right?

00:12:22.980 --> 00:12:26.200
So I'm selecting the type of
project I'm working on.

00:12:26.200 --> 00:12:29.820
I'm going to browse to the root
of where this project is

00:12:29.820 --> 00:12:31.320
because Tincr requires that.

00:12:31.320 --> 00:12:34.480
And by default, it'll
automatically refresh to sort

00:12:34.480 --> 00:12:35.970
of show you the changes
that you've made.

00:12:35.970 --> 00:12:39.270
And it'll automatically save.

00:12:39.270 --> 00:12:42.430
So let me refresh my page very
quickly and go back.

00:12:42.430 --> 00:12:44.110
And let's say we want
to make a change.

00:12:44.110 --> 00:12:47.130
Like let's say I want to change
the color of my buttons

00:12:47.130 --> 00:12:47.880
to something else.

00:12:47.880 --> 00:12:50.140
PAUL LEWIS: I, for one, am
disappointed you didn't change

00:12:50.140 --> 00:12:52.680
it to Comic Sans, that you went
straight to the color

00:12:52.680 --> 00:12:53.220
thing there.

00:12:53.220 --> 00:12:54.970
But, you know, each
to their own.

00:12:54.970 --> 00:12:57.590
I can't fault you for just
changing the color.

00:12:57.590 --> 00:12:59.530
ADDY OSMANI: This is really the
standard of developer we

00:12:59.530 --> 00:13:01.960
were able to get instead
of Paul Irish.

00:13:01.960 --> 00:13:02.455
It's heartbreaking.

00:13:02.455 --> 00:13:03.700
PAUL LEWIS: Desparate times,
desperate measures.

00:13:03.700 --> 00:13:04.990
Any port in a storm,
I believe is the--

00:13:04.990 --> 00:13:05.580
ADDY OSMANI: Pretty much.

00:13:05.580 --> 00:13:06.140
Pretty much.

00:13:06.140 --> 00:13:06.840
PAUL LEWIS: OK.

00:13:06.840 --> 00:13:08.020
ADDY OSMANI: OK.

00:13:08.020 --> 00:13:09.780
So I've gone and I've
changed the color of

00:13:09.780 --> 00:13:11.610
my buttons to blue.

00:13:11.610 --> 00:13:14.290
Now, as long as you know nothing
has broken, nothing's

00:13:14.290 --> 00:13:16.540
gone wrong, when I refresh my
page, and you can confirm I've

00:13:16.540 --> 00:13:17.390
just refreshed my page--

00:13:17.390 --> 00:13:17.590
PAUL LEWIS: Yeah.

00:13:17.590 --> 00:13:19.010
ADDY OSMANI: --the changes
have persisted.

00:13:19.010 --> 00:13:21.440
And if go and I take a look at
source of this document, what

00:13:21.440 --> 00:13:24.240
you'll find is that in my style
sheet that change has

00:13:24.240 --> 00:13:24.920
been saved.

00:13:24.920 --> 00:13:26.990
So I don't even have to go
back to my editor or

00:13:26.990 --> 00:13:27.700
anything like that.

00:13:27.700 --> 00:13:29.850
The change is saved, and
it's already there.

00:13:29.850 --> 00:13:33.870
What's even cooler is if you go
to Sources and you take a

00:13:33.870 --> 00:13:38.890
look at where this stuff is--
so let me go to Sources and

00:13:38.890 --> 00:13:42.310
figure out what file
I was working in.

00:13:42.310 --> 00:13:46.030
I can right click on a file
and take a look at local

00:13:46.030 --> 00:13:47.030
modifications to it.

00:13:47.030 --> 00:13:49.870
So let's see what local
modifications remain.

00:13:49.870 --> 00:13:52.300
I think it was this file.

00:13:52.300 --> 00:13:53.560
Where are we?

00:13:53.560 --> 00:13:54.930
Let's see.

00:13:54.930 --> 00:13:56.070
So it's because I've
refreshed it.

00:13:56.070 --> 00:13:58.180
Let's just make another change
so I can actually take a look

00:13:58.180 --> 00:13:59.190
at local modifications.

00:13:59.190 --> 00:14:01.600
So let's say we've changed
this to green, right?

00:14:01.600 --> 00:14:02.850
I go to Sources.

00:14:05.290 --> 00:14:06.950
Let's see if this will work.

00:14:06.950 --> 00:14:10.190
So now what you'll see in local
modifications is all the

00:14:10.190 --> 00:14:11.720
changes that I've made
to this file.

00:14:11.720 --> 00:14:13.160
And you actually get a
really, really nice

00:14:13.160 --> 00:14:15.440
diff of those changes.

00:14:15.440 --> 00:14:17.350
Depending on whether you've gone
and you've refreshed the

00:14:17.350 --> 00:14:20.590
page or not, you can actually
see the entire history of what

00:14:20.590 --> 00:14:23.590
you've been doing to the page
and decide about what changes

00:14:23.590 --> 00:14:25.200
you want to keep and what
changes you don't want to

00:14:25.200 --> 00:14:26.960
keep, which I think is useful.

00:14:26.960 --> 00:14:27.720
PAUL LEWIS: Yeah, I
was noticing that.

00:14:27.720 --> 00:14:29.830
Because you've got a revert,
which I assume reverts all

00:14:29.830 --> 00:14:31.580
changes that you made locally.

00:14:31.580 --> 00:14:34.830
And then there's presumably
a per-change

00:14:34.830 --> 00:14:35.990
Apply Original Content.

00:14:35.990 --> 00:14:37.010
ADDY OSMANI: Yeah, and it'll
show you the time that you

00:14:37.010 --> 00:14:38.020
made the changes
and everything.

00:14:38.020 --> 00:14:39.320
It's really, really useful.

00:14:39.320 --> 00:14:40.250
PAUL LEWIS: I like.

00:14:40.250 --> 00:14:40.790
ADDY OSMANI: You like?

00:14:40.790 --> 00:14:41.930
Excellent.

00:14:41.930 --> 00:14:42.210
Right.

00:14:42.210 --> 00:14:44.880
So we've shown you some stuff in
the Chrome Developer Tools.

00:14:44.880 --> 00:14:47.640
Let's talk a little bit more
about tooling and how we can

00:14:47.640 --> 00:14:49.310
solve some of the problems
you talked about earlier.

00:14:49.310 --> 00:14:49.590
PAUL LEWIS: Right.

00:14:49.590 --> 00:14:51.460
Because earlier we
established that

00:14:51.460 --> 00:14:52.715
basically my workflow sucks.

00:14:52.715 --> 00:14:53.890
Now, I'll be honest.

00:14:53.890 --> 00:14:55.600
I've moved on a little
bit from that point.

00:14:55.600 --> 00:14:56.340
But nonetheless--

00:14:56.340 --> 00:14:57.250
ADDY OSMANI: Notice
he said little.

00:14:57.250 --> 00:14:57.610
Just a little.

00:14:57.610 --> 00:14:58.330
Tiny amount.

00:14:58.330 --> 00:14:58.470
Tiny amount.

00:14:58.470 --> 00:14:59.900
OK.

00:14:59.900 --> 00:15:03.090
PAUL LEWIS: But all the same, I
think parts of that workflow

00:15:03.090 --> 00:15:04.530
still remain for me.

00:15:04.530 --> 00:15:07.980
And I think, like we said, for a
lot of developers, it's very

00:15:07.980 --> 00:15:10.610
much kind of the situation.

00:15:10.610 --> 00:15:12.600
It's very difficult
to just shift.

00:15:12.600 --> 00:15:14.210
Because people have
got deadlines.

00:15:14.210 --> 00:15:15.360
They've got these things to--

00:15:15.360 --> 00:15:15.980
ADDY OSMANI: Yeah, of course.

00:15:15.980 --> 00:15:18.330
PAUL LEWIS: --the actual
coding to do.

00:15:18.330 --> 00:15:20.870
So I guess we're going to talk
about Yeoman, right?

00:15:20.870 --> 00:15:21.490
ADDY OSMANI: We're
going to talk a

00:15:21.490 --> 00:15:23.610
little bit about Yeoman.

00:15:23.610 --> 00:15:24.900
PAUL LEWIS: Solid.

00:15:24.900 --> 00:15:25.740
ADDY OSMANI: Awesome, right.

00:15:25.740 --> 00:15:28.640
So Yeoman is basically an
opinionated workflow for

00:15:28.640 --> 00:15:31.570
creating compelling modern
web applications.

00:15:31.570 --> 00:15:34.670
For people that haven't tried it
out yet or haven't checked

00:15:34.670 --> 00:15:38.020
out the site, we're available
at yeoman.io.

00:15:38.020 --> 00:15:40.870
And this is sort of a project
that a few people, so me, Paul

00:15:40.870 --> 00:15:44.310
Irish, Sindre Sorhus,
and Mickael Daniel--

00:15:44.310 --> 00:15:44.810
PAUL LEWIS: Paul Irish.

00:15:44.810 --> 00:15:47.240
ADDY OSMANI: --Paul Irish
--created few months ago and

00:15:47.240 --> 00:15:48.440
we've been working on it.

00:15:48.440 --> 00:15:51.230
And it sort of builds on top of
a ton of other great tools

00:15:51.230 --> 00:15:54.690
like Grunt and Twitter
Bootstrap and so on.

00:15:54.690 --> 00:15:56.710
And I'm just going to show
you what it does.

00:15:56.710 --> 00:15:58.630
It's easier to show than
just keep talking.

00:15:58.630 --> 00:15:59.580
PAUL LEWIS: So one of the things
that you said, though,

00:15:59.580 --> 00:16:01.340
was that this is an
opinionated tool.

00:16:01.340 --> 00:16:02.540
ADDY OSMANI: Yeah.

00:16:02.540 --> 00:16:04.610
ADDY OSMANI: What do you mean
an opinionated tool?

00:16:04.610 --> 00:16:04.840
ADDY OSMANI: Right.

00:16:04.840 --> 00:16:08.710
So there are like a huge ton of
options that people have on

00:16:08.710 --> 00:16:09.700
the front end these days.

00:16:09.700 --> 00:16:12.480
Like do you use SaaS,
Less, Compass?

00:16:12.480 --> 00:16:14.080
There's a ton of options.

00:16:14.080 --> 00:16:16.110
And then you have a whole other
side of things when it

00:16:16.110 --> 00:16:18.090
comes to like the JavaScript
that you write for apps.

00:16:18.090 --> 00:16:18.560
PAUL LEWIS: Right.

00:16:18.560 --> 00:16:20.350
ADDY OSMANI: Like are you
talking about using specific

00:16:20.350 --> 00:16:21.150
frameworks?

00:16:21.150 --> 00:16:23.850
Or how do you structure
your whole app,

00:16:23.850 --> 00:16:24.740
and all those things.

00:16:24.740 --> 00:16:27.240
There's a lot of stuff that
people have to think about it.

00:16:27.240 --> 00:16:27.630
PAUL LEWIS: Yes.

00:16:27.630 --> 00:16:29.860
ADDY OSMANI: And we thought
what if we were to try

00:16:29.860 --> 00:16:32.710
capturing what we think is the
best set of options for you

00:16:32.710 --> 00:16:35.630
develop a modern app into
a single workflow.

00:16:35.630 --> 00:16:37.490
And that's basically
what Yeoman is.

00:16:37.490 --> 00:16:39.160
It's a bunch of tools brought
together that

00:16:39.160 --> 00:16:40.960
we hope works well.

00:16:40.960 --> 00:16:45.140
So let me take you to a demo
of Yeoman and show you how

00:16:45.140 --> 00:16:46.410
that works.

00:16:46.410 --> 00:16:48.250
OK, so I've got my screen
open at the moment.

00:16:48.250 --> 00:16:50.440
And I'm going to also have a
text editor that I'm going to

00:16:50.440 --> 00:16:52.160
switch to you in just a sec.

00:16:52.160 --> 00:16:55.290
Right, so with Yeoman to
kickstart off our new project,

00:16:55.290 --> 00:16:56.970
you just use Yeoman Init.

00:16:56.970 --> 00:16:59.820
So I've typed in Yeoman Init.

00:17:02.340 --> 00:17:04.970
Waiting for this to go and
ask me some questions.

00:17:04.970 --> 00:17:07.900
So when you sort of fire this
off, it'll go ask you some

00:17:07.900 --> 00:17:10.079
questions about what you want
to do in your application.

00:17:10.079 --> 00:17:12.760
Like do you want to include
Twitter Bootstrap?

00:17:12.760 --> 00:17:14.760
Do you want to include the
Twitter Bootstrap plug-ins?

00:17:14.760 --> 00:17:16.369
Because like, let's face it,
when you're developing a

00:17:16.369 --> 00:17:18.939
prototype, you want something
that's pretty.

00:17:18.939 --> 00:17:20.530
It doesn't have to be the
prettiest thing in the world.

00:17:20.530 --> 00:17:22.880
You don't have to go necessarily
using Bootstrap in

00:17:22.880 --> 00:17:26.160
production, but it's great
for prototypes, right?

00:17:26.160 --> 00:17:28.140
So do you want to include the
Twitter Bootstrap plug-ins?

00:17:28.140 --> 00:17:30.930
If you're a JavaScript app
developer, maybe you want to

00:17:30.930 --> 00:17:32.620
use RequireJS and AMD.

00:17:32.620 --> 00:17:33.815
So we'll ask you about
that as well.

00:17:33.815 --> 00:17:34.930
PAUL LEWIS: So I assume the
questions that it's asking are

00:17:34.930 --> 00:17:37.800
based on your experience, Paul
Irish's experience, the team's

00:17:37.800 --> 00:17:40.530
experience on the kind of tools
that people need and

00:17:40.530 --> 00:17:41.980
want in their workflow, right?

00:17:41.980 --> 00:17:42.690
ADDY OSMANI: Yes, absolutely.

00:17:42.690 --> 00:17:43.200
PAUL LEWIS: Cool.

00:17:43.200 --> 00:17:45.330
ADDY OSMANI: So, while you're
talking, basically what it's

00:17:45.330 --> 00:17:47.410
gone and it's done is it's gone
and fetched the latest

00:17:47.410 --> 00:17:49.570
version of all these
dependencies, and it's put

00:17:49.570 --> 00:17:52.080
them into a local directory that
you can use for your app.

00:17:52.080 --> 00:17:54.800
We've also gone and sort of
scaffolded out some very basic

00:17:54.800 --> 00:17:55.860
unit tests.

00:17:55.860 --> 00:17:56.970
Unit testing's important.

00:17:56.970 --> 00:17:58.400
Do you unit test your code?

00:17:58.400 --> 00:17:58.880
PAUL LEWIS: Yes.

00:17:58.880 --> 00:17:59.310
ADDY OSMANI: Yes?

00:17:59.310 --> 00:17:59.910
PAUL LEWIS: Not always.

00:17:59.910 --> 00:17:59.960
ADDY OSMANI: Not always.

00:17:59.960 --> 00:18:01.520
PAUL LEWIS: If I'm honest,
not always.

00:18:01.520 --> 00:18:04.930
But if it's built in,
it makes it easier.

00:18:04.930 --> 00:18:06.280
ADDY OSMANI: OK, good.

00:18:06.280 --> 00:18:07.620
So we do that stuff for you.

00:18:07.620 --> 00:18:10.240
And you can then go and like
preview what this has created

00:18:10.240 --> 00:18:12.060
using server command.

00:18:12.060 --> 00:18:14.930
So I'm guessing in previous
years when you're like a web

00:18:14.930 --> 00:18:17.240
app developer and working with
a bunch of other code, maybe

00:18:17.240 --> 00:18:20.710
you used like Map or Wamp
or all that stuff.

00:18:20.710 --> 00:18:21.560
PAUL LEWIS: Always
one of those.

00:18:21.560 --> 00:18:21.800
PAUL LEWIS: Right.

00:18:21.800 --> 00:18:25.000
So we thought why don't we just
add this to a command and

00:18:25.000 --> 00:18:26.190
fire off a server.

00:18:26.190 --> 00:18:28.850
So if you type in Yeoman Server,
it'll actually go and

00:18:28.850 --> 00:18:32.290
fire off a server using the
contents of the application

00:18:32.290 --> 00:18:33.920
that you working on
just right now.

00:18:33.920 --> 00:18:35.510
And it'll actually show
you a preview.

00:18:35.510 --> 00:18:39.280
So on screen at the moment, we
have a preview of our compiled

00:18:39.280 --> 00:18:40.440
Twitter Bootstrap files.

00:18:40.440 --> 00:18:42.450
We were using Compass sources.

00:18:42.450 --> 00:18:44.320
So this is complied Twitter
Bootstrap files.

00:18:44.320 --> 00:18:45.730
You have HTML5 Boilerplate.

00:18:45.730 --> 00:18:48.500
You have RequireJS and
a few other pieces.

00:18:48.500 --> 00:18:51.100
And you can go and start coding
right away which is

00:18:51.100 --> 00:18:52.930
fun, right?

00:18:52.930 --> 00:18:58.790
So one other thing I wanted to
show you guys was how Yeoman

00:18:58.790 --> 00:19:02.350
can help you with something
called LiveReload.

00:19:02.350 --> 00:19:04.190
Have you heard of LiveReload
before?

00:19:04.190 --> 00:19:05.120
PAUL LEWIS: Let's assume
I have not.

00:19:05.120 --> 00:19:07.050
That would make life a lot
easier for you right now,

00:19:07.050 --> 00:19:07.590
wouldn't it?

00:19:07.590 --> 00:19:07.920
ADDY OSMANI: Yes.

00:19:07.920 --> 00:19:09.540
Yes, it would.

00:19:09.540 --> 00:19:12.500
OK, before I show
this to you, so

00:19:12.500 --> 00:19:15.080
LiveReload is pretty awesome.

00:19:15.080 --> 00:19:17.890
It's this functionality that
allows you to make changes in

00:19:17.890 --> 00:19:20.840
your application, whether it's
your style sheets, or your

00:19:20.840 --> 00:19:23.780
scripts, your markup or
anything, and have the browser

00:19:23.780 --> 00:19:26.096
automatically reload whenever
changes are made

00:19:26.096 --> 00:19:27.190
to your local files.

00:19:27.190 --> 00:19:29.080
So you don't have to go and
refresh it yourself.

00:19:29.080 --> 00:19:32.110
You get this constant sort of
parallel view of what's going

00:19:32.110 --> 00:19:35.160
on in the browser and what's
going on in your source.

00:19:35.160 --> 00:19:36.550
So let's see if this
works right now.

00:19:36.550 --> 00:19:39.430
So I've just created a brand
new application.

00:19:39.430 --> 00:19:45.665
I'm going to my index and let me
see about replacing Wotcha!

00:19:45.665 --> 00:19:47.000
with Wotcha Paul!

00:19:47.000 --> 00:19:49.110
And as we can see it's gone,
and it's automatically

00:19:49.110 --> 00:19:50.100
reloaded the page.

00:19:50.100 --> 00:19:52.230
I didn't have to do
anything at all.

00:19:52.230 --> 00:19:55.020
It's gone, and it's compiled
the compass files.

00:19:55.020 --> 00:19:56.980
If I had copied script, it
would be automatically

00:19:56.980 --> 00:19:58.430
compiling that stuff for me.

00:19:58.430 --> 00:20:01.210
If I had RequireJS files, it'd
be doing the exact same thing.

00:20:01.210 --> 00:20:02.120
And it's just really nice.

00:20:02.120 --> 00:20:04.810
It means I don't have to go
and put together a whole

00:20:04.810 --> 00:20:07.600
workflow and build process
that does this stuff.

00:20:07.600 --> 00:20:08.420
PAUL LEWIS: Awesome.

00:20:08.420 --> 00:20:09.920
ADDY OSMANI: Which is nice.

00:20:09.920 --> 00:20:14.260
Sort of on top of that, how were
you saying that you were

00:20:14.260 --> 00:20:15.410
handling dependencies before?

00:20:15.410 --> 00:20:17.390
You were manually going against
the web, right?

00:20:17.390 --> 00:20:20.290
PAUL LEWIS: Yeah, The classic
situation is there's a new

00:20:20.290 --> 00:20:24.640
version of a library, or I want
to add another library

00:20:24.640 --> 00:20:25.590
after this point, right?

00:20:25.590 --> 00:20:25.810
ADDY OSMANI: Yeah.

00:20:25.810 --> 00:20:27.750
PAUL LEWIS: So we created a
project but it's like, ah, now

00:20:27.750 --> 00:20:30.410
I realize I need this other
library in there.

00:20:30.410 --> 00:20:31.540
ADDY OSMANI: Yeah.

00:20:31.540 --> 00:20:33.000
PAUL LEWIS: So, yeah, I go off,
find it in framework's

00:20:33.000 --> 00:20:34.430
like I did with my original
dependencies.

00:20:34.430 --> 00:20:37.090
So I just go off, get it, and
drag it in, and hope for the

00:20:37.090 --> 00:20:38.380
best, generally speaking.

00:20:38.380 --> 00:20:38.620
ADDY OSMANI: Yeah.

00:20:38.620 --> 00:20:39.670
It's a pain.

00:20:39.670 --> 00:20:41.360
It's, again, one of those
manual things

00:20:41.360 --> 00:20:41.930
that you have to do.

00:20:41.930 --> 00:20:44.000
You've got to go and open up
your browser and figure out

00:20:44.000 --> 00:20:46.650
where the dependencies, whether
you're using the most

00:20:46.650 --> 00:20:47.820
up-to-date version or not.

00:20:47.820 --> 00:20:50.300
So we figured, well, why don't
we make this a little bit more

00:20:50.300 --> 00:20:52.790
straightforward?

00:20:52.790 --> 00:20:54.230
So let's say there's a
dependency you wanted.

00:20:54.230 --> 00:20:56.495
You mentioned Backbone
apps earlier on.

00:20:56.495 --> 00:20:58.010
PAUL LEWIS: Yeah, let's do it.

00:20:58.010 --> 00:20:58.320
ADDY OSMANI: Let's see.

00:20:58.320 --> 00:20:59.630
Let's say that we started
off with a very

00:20:59.630 --> 00:21:01.150
basic application structure.

00:21:01.150 --> 00:21:03.550
And we want to get Backbone
into our app.

00:21:03.550 --> 00:21:07.100
So maybe the first thing that
we do is try to look and see

00:21:07.100 --> 00:21:09.900
is Backbone available
via Yeoman?

00:21:09.900 --> 00:21:11.720
And it's going to go and it's
going to search out.

00:21:11.720 --> 00:21:13.740
And what you can see here on
the screen at the moment is

00:21:13.740 --> 00:21:17.350
that not only is Backbone
available, but there are a ton

00:21:17.350 --> 00:21:20.290
of Backbone extensions and
adapters and plug-ins also

00:21:20.290 --> 00:21:21.300
available as well.

00:21:21.300 --> 00:21:24.190
And I can easily install any of
these via the command line.

00:21:24.190 --> 00:21:27.950
So if I were to do Yeoman
install Backbone just to start

00:21:27.950 --> 00:21:33.680
us off, that'll go and it'll
install Backbone for me.

00:21:33.680 --> 00:21:36.660
PAUL LEWIS: What happens if I do
this and then there's a new

00:21:36.660 --> 00:21:40.210
version of Backbone
released tomorrow?

00:21:40.210 --> 00:21:41.480
It's early on in the project.

00:21:41.480 --> 00:21:42.900
I feel like I've got the room.

00:21:42.900 --> 00:21:44.670
I can test this in
this new version.

00:21:44.670 --> 00:21:45.320
What do I do then?

00:21:45.320 --> 00:21:45.910
How does that work?

00:21:45.910 --> 00:21:48.300
ADDY OSMANI: Then all you have
to do is we have-- similar to

00:21:48.300 --> 00:21:49.640
install, we have an
update command.

00:21:49.640 --> 00:21:52.755
So if you typed in "yeoman
update backbone," it would go

00:21:52.755 --> 00:21:53.980
and it would get the
latest version of

00:21:53.980 --> 00:21:55.860
Backbone for you as well.

00:21:55.860 --> 00:21:58.200
And something you may have
noticed, some people may have

00:21:58.200 --> 00:22:02.400
noticed, is if you take a look
at the lines in here, you'll

00:22:02.400 --> 00:22:04.490
notice that it didn't just
go and fetch Backbone.

00:22:04.490 --> 00:22:07.280
It actually went and it fetched
Underscore as well.

00:22:07.280 --> 00:22:10.600
So we're using Twitter's Bower
project as our package

00:22:10.600 --> 00:22:11.890
management registry.

00:22:11.890 --> 00:22:15.135
And when we typed in "yeoman
install backbone," it went and

00:22:15.135 --> 00:22:17.940
it tried to fetch the latest
version of Backbone, figured

00:22:17.940 --> 00:22:20.780
out that Backbone has a few
other dependencies, and it

00:22:20.780 --> 00:22:22.520
also went and grabbed
those dependencies

00:22:22.520 --> 00:22:24.600
for us, which is--

00:22:24.600 --> 00:22:27.060
PAUL LEWIS: That's awesome
because, yeah, it's like you

00:22:27.060 --> 00:22:30.840
may have, as you say,
dependencies on dependencies.

00:22:30.840 --> 00:22:32.230
Dependency-ception.

00:22:32.230 --> 00:22:33.280
ADDY OSMANI: Dependency-ception.

00:22:33.280 --> 00:22:33.980
PAUL LEWIS: I love it.

00:22:33.980 --> 00:22:34.940
ADDY OSMANI: Of course you do.

00:22:34.940 --> 00:22:35.950
PAUL LEWIS: Why wouldn't I?

00:22:35.950 --> 00:22:36.700
ADDY OSMANI: God knows.

00:22:36.700 --> 00:22:37.650
God knows.

00:22:37.650 --> 00:22:41.230
OK, so we've covered previewing
stuff and what you

00:22:41.230 --> 00:22:44.080
do when you're writing a
very basic application.

00:22:44.080 --> 00:22:46.090
Then you've got your build
process, right?

00:22:46.090 --> 00:22:46.240
PAUL LEWIS: Yeah,.

00:22:46.240 --> 00:22:46.590
So right.

00:22:46.590 --> 00:22:50.320
So this is the point at which,
let's call him old Paul.

00:22:50.320 --> 00:22:50.703
ADDY OSMANI: Yes.

00:22:50.703 --> 00:22:51.086
Old Paul.

00:22:51.086 --> 00:22:52.570
PAUL LEWIS: The unreformed.

00:22:52.570 --> 00:22:53.900
The unwashed.

00:22:53.900 --> 00:22:58.340
I would probably write myself,
oh, let's see, an ANT script.

00:22:58.340 --> 00:23:00.710
I would use a UE.jar
or something like

00:23:00.710 --> 00:23:02.310
that to go off and--

00:23:02.310 --> 00:23:04.690
hey, I've been around
a while--

00:23:04.690 --> 00:23:10.100
to concatenate and minify my
JavaScript, minify my CSS,

00:23:10.100 --> 00:23:11.190
make it all good.

00:23:11.190 --> 00:23:13.990
And then I sort of manually
change the paths and all that

00:23:13.990 --> 00:23:14.995
kind of stuff in my app.

00:23:14.995 --> 00:23:15.380
ADDY OSMANI: Yeah.

00:23:15.380 --> 00:23:17.170
PAUL LEWIS: And be like,
yeah, this works

00:23:17.170 --> 00:23:18.670
with my minified version.

00:23:18.670 --> 00:23:20.870
And then push it out live.

00:23:20.870 --> 00:23:21.260
ADDY OSMANI: Cool.

00:23:21.260 --> 00:23:22.810
PAUL LEWIS: You've got something
better for me?

00:23:22.810 --> 00:23:23.340
ADDY OSMANI: Hopefully.

00:23:23.340 --> 00:23:24.120
PAUL LEWIS: Yes.

00:23:24.120 --> 00:23:27.000
ADDY OSMANI: Right, so we took
a long, hard look at how

00:23:27.000 --> 00:23:28.890
people were actually building
their projects.

00:23:28.890 --> 00:23:31.300
And, like we said, there's a ton
of tools people use on the

00:23:31.300 --> 00:23:32.280
front end these says.

00:23:32.280 --> 00:23:36.130
You've got like SaaS and
CoffeeScript and RequireJS and

00:23:36.130 --> 00:23:36.880
what have you.

00:23:36.880 --> 00:23:38.720
And then when you're trying
to deploy something to

00:23:38.720 --> 00:23:41.335
production, you also have to
care about optimizing the rest

00:23:41.335 --> 00:23:42.390
of your project.

00:23:42.390 --> 00:23:45.500
Like not just the stuff you're
used to like minification and

00:23:45.500 --> 00:23:49.120
concatenation, but also things
like revving your files and

00:23:49.120 --> 00:23:51.960
optimizing all of the images
in your project as well.

00:23:51.960 --> 00:23:54.005
Now, some people, when you're
putting together your own

00:23:54.005 --> 00:23:56.460
build process, you might just
go and say, OK, well, I'm

00:23:56.460 --> 00:23:58.950
going to pick an image
optimization library.

00:23:58.950 --> 00:24:01.600
Cool, it'll do its own
stuff for me, right?

00:24:01.600 --> 00:24:04.590
What we did was we actually went
and researched all of the

00:24:04.590 --> 00:24:06.910
most popular image optimization
solutions that

00:24:06.910 --> 00:24:07.720
are available.

00:24:07.720 --> 00:24:10.900
And we picked the two most
efficient ones in terms of

00:24:10.900 --> 00:24:13.290
making sure that you get as
lasting an experience as

00:24:13.290 --> 00:24:15.810
possible with the small
file sizes as well.

00:24:15.810 --> 00:24:18.480
And when you run Yeoman
Build, this is

00:24:18.480 --> 00:24:19.280
where the magic happens.

00:24:19.280 --> 00:24:22.160
It'll actually go and it'll
build out your entire project.

00:24:22.160 --> 00:24:23.650
It'll compile any sort of

00:24:23.650 --> 00:24:25.300
abstractions that you're using.

00:24:25.300 --> 00:24:28.310
As you can see, it's both
running a number of tasks on

00:24:28.310 --> 00:24:30.040
your images as well
as other stuff.

00:24:30.040 --> 00:24:30.850
And there we have it.

00:24:30.850 --> 00:24:32.230
The project is completely
done.

00:24:32.230 --> 00:24:34.330
I've just finished off a
sentence and my project is now

00:24:34.330 --> 00:24:37.513
ready for me to deploy to
production if I wanted it.

00:24:37.513 --> 00:24:38.500
PAUL LEWIS: I'm blown away.

00:24:38.500 --> 00:24:39.110
ADDY OSMANI: It's done.

00:24:39.110 --> 00:24:40.480
That is amazing.

00:24:40.480 --> 00:24:41.355
PAUL LEWIS: Done
without errors.

00:24:41.355 --> 00:24:41.870
ADDY OSMANI: Done without
errors, yeah.

00:24:41.870 --> 00:24:44.080
PAUL LEWIS: That's unusual
for me, certainly.

00:24:44.080 --> 00:24:46.520
But let's carry on.

00:24:46.520 --> 00:24:47.350
ADDY OSMANI: We're hoping
that this will

00:24:47.350 --> 00:24:48.850
improve you as a developer.

00:24:48.850 --> 00:24:49.070
PAUL LEWIS: Whoa.

00:24:49.070 --> 00:24:49.920
ADDY OSMANI: This
is specifically

00:24:49.920 --> 00:24:50.850
built for you, Paul.

00:24:50.850 --> 00:24:52.278
PAUL LEWIS: Wow.

00:24:52.278 --> 00:24:55.880
I am so lucky.

00:24:55.880 --> 00:24:58.400
ADDY OSMANI: OK, so we've taken
a look at the Yeoman

00:24:58.400 --> 00:25:02.280
workflow and how it works
for basic projects.

00:25:02.280 --> 00:25:04.480
I'm going to talk very quickly
about generators.

00:25:04.480 --> 00:25:05.010
PAUL LEWIS: Right.

00:25:05.010 --> 00:25:06.310
ADDY OSMANI: So you
were talking.

00:25:06.310 --> 00:25:10.780
PAUL LEWIS: So one of the things
that came up when we

00:25:10.780 --> 00:25:13.620
were talking about Yeoman and
I was asking some questions

00:25:13.620 --> 00:25:16.520
is, OK, you do something
like Backbone.

00:25:16.520 --> 00:25:19.530
But there are these models,
there's controllers, there's

00:25:19.530 --> 00:25:21.920
all those kinds of things that
you do as well, right?

00:25:21.920 --> 00:25:25.550
So what if I don't
want Backbone.

00:25:25.550 --> 00:25:27.575
What if I actually want to start
a project with Angular

00:25:27.575 --> 00:25:30.400
or Backbone or any of these?

00:25:30.400 --> 00:25:32.000
Do I have to go through this
multi-step process with

00:25:32.000 --> 00:25:34.570
Yeoman, or can we kind of
shortcut this whole thing?

00:25:34.570 --> 00:25:35.290
ADDY OSMANI: Yeah.

00:25:35.290 --> 00:25:38.160
So Yeoman, with them, we wanted
to do something fun.

00:25:38.160 --> 00:25:41.210
So we put it over the generator
system in Rails,

00:25:41.210 --> 00:25:44.290
over the node, and we make
available a bunch of

00:25:44.290 --> 00:25:46.250
different, what we
call, scaffolds.

00:25:46.250 --> 00:25:46.750
PAUL LEWIS: OK.

00:25:46.750 --> 00:25:48.760
ADDY OSMANI: Scaffold
degenerators that allow you to

00:25:48.760 --> 00:25:52.180
scaffold out new projects
using an MVC framework.

00:25:52.180 --> 00:25:54.340
So we've got a bunch of them
that we support at the moment.

00:25:54.340 --> 00:25:57.400
We've got Angular,
Backbone, Ember.

00:25:57.400 --> 00:25:58.560
And a bunch of others.

00:25:58.560 --> 00:26:01.070
And the idea is that rather
than you having to go and

00:26:01.070 --> 00:26:04.270
write the boilerplate for a new
model, or controller, or

00:26:04.270 --> 00:26:07.130
router, we'll actually
do that for you.

00:26:07.130 --> 00:26:08.610
Let me show you a very
quick preview.

00:26:08.610 --> 00:26:11.800
And I guess then we're going to
be introducing our special

00:26:11.800 --> 00:26:12.330
guess for today.

00:26:12.330 --> 00:26:12.720
PAUL LEWIS: Oh, yes.

00:26:12.720 --> 00:26:14.870
ADDY OSMANI: We've got
a special guest.

00:26:14.870 --> 00:26:18.110
So let's say that I want to
start up a brand new project.

00:26:18.110 --> 00:26:20.280
We're going to call
this Paul L.

00:26:20.280 --> 00:26:21.780
PAUL LEWIS: Oh, is
this for me?

00:26:21.780 --> 00:26:23.170
ADDY OSMANI: Is this
jinxing it?

00:26:23.170 --> 00:26:23.990
PAUL LEWIS: Well, yeah.

00:26:23.990 --> 00:26:24.870
ADDY OSMANI: It has to.

00:26:24.870 --> 00:26:26.010
PAUL LEWIS: It's going to
be erratic at best.

00:26:26.010 --> 00:26:26.620
ADDY OSMANI: Probably.

00:26:26.620 --> 00:26:27.140
PAUL LEWIS: If I'm honest.

00:26:27.140 --> 00:26:29.400
ADDY OSMANI: OK, so let's say
I'm doing Yeoman and Backbone.

00:26:29.400 --> 00:26:31.770
I want to create a new
Backbone application.

00:26:31.770 --> 00:26:35.550
And what you've seen it go and
do just now is scaffold out

00:26:35.550 --> 00:26:38.080
everything I need for a very,
very basic Backbone app.

00:26:38.080 --> 00:26:39.150
I've got my index.

00:26:39.150 --> 00:26:39.870
I've got jQuery.

00:26:39.870 --> 00:26:42.510
I've got Underscore
or Low-Dash.

00:26:42.510 --> 00:26:44.260
I've got a bunch
of unit tests.

00:26:44.260 --> 00:26:47.580
And I've also got my first
set of application files.

00:26:47.580 --> 00:26:51.680
So I've got my first router, my
first view, template files,

00:26:51.680 --> 00:26:53.460
model, collection.

00:26:53.460 --> 00:26:55.750
And if you go into these files,
it'll actually contain

00:26:55.750 --> 00:26:58.170
the boilerplate for each of
those pieces for you.

00:26:58.170 --> 00:26:59.870
So you can just focus
on writing the

00:26:59.870 --> 00:27:01.480
logic for your app.

00:27:01.480 --> 00:27:03.700
Now, that's cool and all.

00:27:03.700 --> 00:27:07.080
But I think people will like to
see what the Angular guys

00:27:07.080 --> 00:27:07.715
have been working on.

00:27:07.715 --> 00:27:08.350
PAUL LEWIS: Oh, yeah.

00:27:08.350 --> 00:27:10.060
ADDY OSMANI: This has
been pretty awesome.

00:27:10.060 --> 00:27:10.860
PAUL LEWIS: Absolutely.

00:27:10.860 --> 00:27:15.810
So the AngularJS team
were pretty awesome.

00:27:15.810 --> 00:27:17.615
They came in early on in
the Yeoman project.

00:27:17.615 --> 00:27:21.170
And they were like, well, can we
actually build a generator

00:27:21.170 --> 00:27:24.050
that can replace some of the
other Angular projects at the

00:27:24.050 --> 00:27:25.990
moment that are trying to help
people with scaffolding?

00:27:25.990 --> 00:27:28.680
And can Yeoman help give a
much better generation

00:27:28.680 --> 00:27:30.130
experience for people so
they don't have to

00:27:30.130 --> 00:27:31.660
write as much code?

00:27:31.660 --> 00:27:35.810
So I'm happy to introduce Brian
Ford from the Angular

00:27:35.810 --> 00:27:38.570
team who is going to be showing
us some of the stuff

00:27:38.570 --> 00:27:42.800
that he's been working on
Angular to do with Yeoman.

00:27:42.800 --> 00:27:43.620
BRIAN FORD: All right.

00:27:43.620 --> 00:27:45.040
Hey, guys.

00:27:45.040 --> 00:27:48.830
So as Addy said, I'm from
the Angular team.

00:27:48.830 --> 00:27:54.210
I was tasked with doing some
exploratory work and seeing

00:27:54.210 --> 00:27:56.740
how Yeoman could really
help us out.

00:27:56.740 --> 00:28:00.200
And I was really pleasantly
surprised.

00:28:00.200 --> 00:28:02.330
We experimented with this
thing that we called the

00:28:02.330 --> 00:28:04.990
Angular seed, which
was kind of like a

00:28:04.990 --> 00:28:06.180
boilerplate for Angular.

00:28:06.180 --> 00:28:11.430
So it gave you kind of a
folder structure and an

00:28:11.430 --> 00:28:15.650
index.html that's pretty
inspired by HTML5 boilerplate,

00:28:15.650 --> 00:28:17.380
and some other stuff.

00:28:17.380 --> 00:28:20.250
And we have a pretty vibrant
open source community.

00:28:20.250 --> 00:28:24.280
And we had a lot of people work
this project and kind of

00:28:24.280 --> 00:28:27.380
say, well, I want
SaaS support.

00:28:27.380 --> 00:28:30.880
I want Bootstrap in there,
or I want RequireJS.

00:28:30.880 --> 00:28:32.990
I want these different things.

00:28:32.990 --> 00:28:37.680
And so we were really excited
about Yeoman because it was

00:28:37.680 --> 00:28:39.440
really a pain to--

00:28:39.440 --> 00:28:41.710
every time we released a new
version or there were some API

00:28:41.710 --> 00:28:44.856
change, all these projects
had to change.

00:28:44.856 --> 00:28:46.310
And it was just a big hassle.

00:28:46.310 --> 00:28:50.530
And there wasn't like one
definitive like here's where

00:28:50.530 --> 00:28:53.846
you should go for the best
practices for starting a new

00:28:53.846 --> 00:28:54.820
Angular app.

00:28:54.820 --> 00:28:58.260
So I think Yeoman's a really
exciting project for not just

00:28:58.260 --> 00:29:03.570
Angular, but any of these new
MVC frameworks to look at.

00:29:03.570 --> 00:29:09.750
So with that in mind, some of
the generators that I wrote,

00:29:09.750 --> 00:29:14.970
they not only just generate
models, views, controllers,

00:29:14.970 --> 00:29:18.130
directives, which is something
awesome in Angular.

00:29:18.130 --> 00:29:20.050
By the way, if you guys haven't
checked out Angular

00:29:20.050 --> 00:29:21.850
yet, you definitely should.

00:29:21.850 --> 00:29:23.480
It's a really cool library.

00:29:23.480 --> 00:29:25.640
It's a really fresh
approach, I think.

00:29:25.640 --> 00:29:27.840
And I think that you'll find
that it also really helps

00:29:27.840 --> 00:29:30.240
speed up the app building
process.

00:29:30.240 --> 00:29:31.210
So a quick plug there.

00:29:31.210 --> 00:29:33.760
Check it out if you haven't.

00:29:33.760 --> 00:29:34.790
But it does all these things.

00:29:34.790 --> 00:29:38.850
But it not only does these,
but it'll rewrite routing

00:29:38.850 --> 00:29:43.400
configurations, and it makes
little tweaks to other files

00:29:43.400 --> 00:29:45.180
in a really non-destructive
way.

00:29:45.180 --> 00:29:48.440
So we're not just rewriting
some file every time.

00:29:48.440 --> 00:29:50.260
It's going in there, and
it's rewriting things.

00:29:50.260 --> 00:29:51.930
So it keep all of
your changes.

00:29:51.930 --> 00:29:56.000
But as you add new routes and
things, it'll automatically

00:29:56.000 --> 00:29:59.570
give you that boilerplate code
there so you can just keep

00:29:59.570 --> 00:30:01.970
hacking away on your app.

00:30:01.970 --> 00:30:06.270
So I'm going to switch then over
to my screen and give a

00:30:06.270 --> 00:30:11.060
quick demo of what this
actually looks like.

00:30:11.060 --> 00:30:12.400
All right.

00:30:12.400 --> 00:30:13.720
Oh, there we go.

00:30:13.720 --> 00:30:15.560
PAUL LEWIS: Look at those
gorgeous people on his screen.

00:30:15.560 --> 00:30:16.940
ADDY OSMANI: There
are so pretty.

00:30:16.940 --> 00:30:19.610
PAUL LEWIS: Oh, I know.

00:30:19.610 --> 00:30:21.710
BRIAN FORD: So here we
are at our terminal.

00:30:21.710 --> 00:30:26.000
I'm going to do a Yeoman
Init Angular.

00:30:28.660 --> 00:30:31.270
So Addy showed off what happens
when you run Yeoman

00:30:31.270 --> 00:30:34.940
Init Backbone, I think it was.

00:30:34.940 --> 00:30:38.020
But we have pretty much the
same thing going on here,

00:30:38.020 --> 00:30:39.940
perhaps a few less choices.

00:30:39.940 --> 00:30:42.720
So would you like to include
Twitter Bootstrap?

00:30:42.720 --> 00:30:43.640
Yes, for sure.

00:30:43.640 --> 00:30:45.370
Twitter Bootstrap's awesome.

00:30:45.370 --> 00:30:48.920
Would you like to use Twitter
Bootstrap for Compass, which

00:30:48.920 --> 00:30:50.420
is an extension of SaaS?

00:30:50.420 --> 00:30:52.300
So it's the SaaS version.

00:30:52.300 --> 00:30:53.820
Yes, that's awesome.

00:30:53.820 --> 00:30:55.530
I love SaaS.

00:30:55.530 --> 00:30:56.590
So there we go.

00:30:56.590 --> 00:30:56.950
Bam.

00:30:56.950 --> 00:30:59.950
It created a ton of files.

00:30:59.950 --> 00:31:03.540
You'll see there are a lot of
these different style things.

00:31:03.540 --> 00:31:06.910
But then also it gives you some
common Angular files,

00:31:06.910 --> 00:31:10.080
sets up your application, sets
up a single controller.

00:31:10.080 --> 00:31:11.570
And it also sets up--

00:31:11.570 --> 00:31:13.420
here, this is one of the coolest
things about the

00:31:13.420 --> 00:31:18.440
Angular generators, is it also
sets up a unit test by default

00:31:18.440 --> 00:31:19.490
for everything that you make.

00:31:19.490 --> 00:31:21.940
So you're already set up
to do unit testing.

00:31:21.940 --> 00:31:24.475
You don't have to fiddle
around with

00:31:24.475 --> 00:31:25.430
some boilerplate code.

00:31:25.430 --> 00:31:27.630
It'll automatically
put that in there.

00:31:27.630 --> 00:31:28.680
And so that's really cool.

00:31:28.680 --> 00:31:31.940
Unit testing's a really, really
huge part of developing

00:31:31.940 --> 00:31:32.770
AngularJS apps.

00:31:32.770 --> 00:31:35.920
We want web apps to be really
robust and testable.

00:31:35.920 --> 00:31:39.170
And we want to have these
tools to support

00:31:39.170 --> 00:31:40.690
that sort of workflow.

00:31:40.690 --> 00:31:44.290
So let's see what this
looks like right now.

00:31:46.960 --> 00:31:48.480
So my Linus box is goofy.

00:31:48.480 --> 00:31:52.000
I think it's going to
launch up Firefox.

00:31:52.000 --> 00:31:53.800
But we're going to ignore
that and go to Chrome.

00:31:53.800 --> 00:31:56.100
There we go there's Firefox.

00:31:56.100 --> 00:31:57.270
Cheerio!

00:31:57.270 --> 00:31:57.840
All right.

00:31:57.840 --> 00:31:59.215
PAUL LEWIS: Oh, the irony.

00:31:59.215 --> 00:32:02.000
BRIAN FORD: Yeah, the irony.

00:32:02.000 --> 00:32:05.840
So here you can see you might
recognize the Twitter

00:32:05.840 --> 00:32:07.850
Bootstrap here.

00:32:07.850 --> 00:32:10.750
And it says we have these
things installed.

00:32:10.750 --> 00:32:16.375
So let's go ahead and go into
Apps Script Controller Main.

00:32:16.375 --> 00:32:18.260
Ooh, that's some big font.

00:32:18.260 --> 00:32:19.120
All right.

00:32:19.120 --> 00:32:21.930
Let's add another
item in there.

00:32:21.930 --> 00:32:24.210
Let's see, technically we
also have Bootstrap,

00:32:24.210 --> 00:32:27.350
so let's add that.

00:32:27.350 --> 00:32:31.730
And we save it, and we get that
auto-refresh awesomeness.

00:32:31.730 --> 00:32:33.760
So that's pretty cool.

00:32:33.760 --> 00:32:39.870
But let's see how we can further
support building an

00:32:39.870 --> 00:32:41.920
Angular app with Yeoman.

00:32:41.920 --> 00:32:46.040
So let's say I want
another route.

00:32:46.040 --> 00:32:49.760
Maybe I'll open up a new tab
in my terminal here.

00:32:49.760 --> 00:32:56.810
So we would do Yeoman
Init Angular route.

00:32:56.810 --> 00:32:58.765
Maybe I'll do like "hi, Paul,"
or something like that.

00:32:58.765 --> 00:33:01.750
PAUL LEWIS: I like this theme.

00:33:01.750 --> 00:33:03.070
ADDY OSMANI: I think perhaps
he was referring

00:33:03.070 --> 00:33:03.820
to our other Paul.

00:33:03.820 --> 00:33:06.340
PAUL LEWIS: Oh.

00:33:06.340 --> 00:33:08.700
BRIAN FORD: We can do a "hi,
other Paul" as well.

00:33:08.700 --> 00:33:09.690
PAUL LEWIS: I said at
the start, we're

00:33:09.690 --> 00:33:11.050
hot-swappable, you know?

00:33:11.050 --> 00:33:12.525
You just pick a Paul.

00:33:12.525 --> 00:33:14.750
It's all good.

00:33:14.750 --> 00:33:16.200
BRIAN FORD: Full Paul
interpolation?

00:33:16.200 --> 00:33:16.950
PAUL LEWIS: Absolutely.

00:33:16.950 --> 00:33:19.430
BRIAN FORD: All right.

00:33:19.430 --> 00:33:21.280
PAUL LEWIS: You get increasing
amount of hair.

00:33:21.280 --> 00:33:23.790
BRIAN FORD: And you can actually
just go to "hi,

00:33:23.790 --> 00:33:27.870
Paul." And this is the
"hi, Paul" view.

00:33:27.870 --> 00:33:31.040
But let's add something in
here so that way we can

00:33:31.040 --> 00:33:32.290
navigate around.

00:33:34.510 --> 00:33:36.880
It's hard to scroll through
these things we you have this

00:33:36.880 --> 00:33:38.240
awesome huge text.

00:33:38.240 --> 00:33:40.190
OK.

00:33:40.190 --> 00:33:44.170
So maybe we add a nav
element here.

00:33:47.370 --> 00:34:02.530
And we say that this goes to
"hi, Paul." One of the things

00:34:02.530 --> 00:34:08.280
that we're working on right
now is supporting HTML5

00:34:08.280 --> 00:34:11.520
routing by defaults in Yeoman.

00:34:11.520 --> 00:34:13.230
Right now we don't do that.

00:34:13.230 --> 00:34:16.000
But I think there's actually a
pending pull request that adds

00:34:16.000 --> 00:34:21.250
that so that you don't have to
have this ugly little hashmap.

00:34:21.250 --> 00:34:23.123
Then we can just do
home, I guess.

00:34:29.762 --> 00:34:32.460
All right, so we've got home and
we've got "hi, Paul," so

00:34:32.460 --> 00:34:33.100
that's pretty cool.

00:34:33.100 --> 00:34:36.050
We already set up some really
simple routing.

00:34:36.050 --> 00:34:38.920
And if we check our app here,
here's where it actually set

00:34:38.920 --> 00:34:39.949
up this routing.

00:34:39.949 --> 00:34:43.670
So you'll see we have both the
"hi, Paul" and the "hi, other

00:34:43.670 --> 00:34:47.290
Paul." And it already configured
a controller and

00:34:47.290 --> 00:34:49.320
the view, and it has it
already hooked up.

00:34:49.320 --> 00:34:52.300
And if we wanted to
do maybe add like

00:34:52.300 --> 00:34:56.960
some ID in here, right?

00:34:56.960 --> 00:35:01.360
Then this will persist
even if I were to add

00:35:01.360 --> 00:35:02.540
another route to it.

00:35:02.540 --> 00:35:05.710
So all of these changes that you
make, they're not going to

00:35:05.710 --> 00:35:08.880
get overwritten by
the generators.

00:35:08.880 --> 00:35:09.360
ADDY OSMANI: That's awesome.

00:35:09.360 --> 00:35:10.060
It's seems like--

00:35:10.060 --> 00:35:10.590
BRIAN FORD: And actually
there's--

00:35:10.590 --> 00:35:11.830
sorry, what was that?

00:35:11.830 --> 00:35:14.490
ADDY OSMANI: It seems like
almost the process of building

00:35:14.490 --> 00:35:17.540
Angular app has in many cases
been replaced by just a few

00:35:17.540 --> 00:35:19.200
lines of the command line.

00:35:19.200 --> 00:35:21.010
BRIAN FORD: Yeah, I mean,
it's very simply.

00:35:21.010 --> 00:35:24.200
You just write a few things in
the command line, and then you

00:35:24.200 --> 00:35:26.320
basically just open up your
controller, and you're just

00:35:26.320 --> 00:35:28.890
like right in the meat and
potatoes of your app.

00:35:28.890 --> 00:35:31.760
So, for instance, if I wanted
to make it so I could edit

00:35:31.760 --> 00:35:35.520
this list right now, it's
actually really super simple.

00:35:35.520 --> 00:35:38.150
So we just want to expose--

00:35:38.150 --> 00:35:41.080
this is like Angular jargon
here, but we just want to

00:35:41.080 --> 00:35:50.560
expose onto our scope a method
that maybe adds to our list of

00:35:50.560 --> 00:35:53.100
awesome things.

00:35:53.100 --> 00:35:56.140
So I'll push scope.new
awesome thing.

00:36:01.740 --> 00:36:07.230
And this is like some awesome
Angular almost voodoo we have

00:36:07.230 --> 00:36:08.280
going on here.

00:36:08.280 --> 00:36:17.390
So if we go over here to our
main view, we can just add an

00:36:17.390 --> 00:36:20.220
input box here.

00:36:20.220 --> 00:36:27.770
And we can say ng-model equals
new awesome thing and then

00:36:27.770 --> 00:36:30.570
maybe we want an input.

00:36:30.570 --> 00:36:33.860
I'll make this look nice because
we're using Bootstrap,

00:36:33.860 --> 00:36:35.110
ng-click=add.

00:36:41.930 --> 00:36:43.187
PAUL LEWIS: I love this
Because you've

00:36:43.187 --> 00:36:44.700
gone straight into--

00:36:44.700 --> 00:36:47.640
like we're saying, all the set
up-y type stuff, the really,

00:36:47.640 --> 00:36:50.980
really dull stuff, if I'm
honest, like the wiring this

00:36:50.980 --> 00:36:54.410
and the-- less wiring and
more actual fun stuff.

00:36:54.410 --> 00:36:54.580
ADDY OSMANI: Yeah.

00:36:54.580 --> 00:36:54.900
PAUL LEWIS: Let's face it.

00:36:54.900 --> 00:36:56.630
ADDY OSMANI: I'm guessing that
if he kept on going for like

00:36:56.630 --> 00:36:59.340
another 10 or 20 minutes, he
would easily have a nice

00:36:59.340 --> 00:37:00.690
prototype of his app.

00:37:00.690 --> 00:37:01.460
PAUL LEWIS: I love it.

00:37:01.460 --> 00:37:02.470
ADDY OSMANI: It's awesome.

00:37:02.470 --> 00:37:04.050
PAUL LEWIS: I've got a feeling
he's about to add

00:37:04.050 --> 00:37:05.730
something to this list.

00:37:05.730 --> 00:37:06.060
BRIAN FORD: Yup.

00:37:06.060 --> 00:37:06.840
PAUL LEWIS: Boom, there it is.

00:37:06.840 --> 00:37:07.260
ADDY OSMANI: Sweet.

00:37:07.260 --> 00:37:07.940
That is awesome.

00:37:07.940 --> 00:37:08.640
BRIAN FORD: I don't know if you
guys can see it very well.

00:37:08.640 --> 00:37:10.800
ADDY OSMANI: Yes, yes, we can.

00:37:10.800 --> 00:37:13.820
BRIAN FORD: Yeah, again, I think
Angular and Yeoman are a

00:37:13.820 --> 00:37:16.690
great team together.

00:37:16.690 --> 00:37:19.920
Angular really focuses on
minimal boilerplate.

00:37:19.920 --> 00:37:22.300
But no matter what framework you
use, you're still going to

00:37:22.300 --> 00:37:25.910
have different references
across files, different

00:37:25.910 --> 00:37:28.200
controllers, and views and
things that you need to link

00:37:28.200 --> 00:37:30.880
together when you're making
these new things.

00:37:30.880 --> 00:37:33.060
And so Yeoman is really
cool for that.

00:37:33.060 --> 00:37:35.640
And plus you get all of the
awesome things that Addy

00:37:35.640 --> 00:37:37.420
mentioned earlier.

00:37:37.420 --> 00:37:39.250
The build process is there.

00:37:39.250 --> 00:37:43.270
The testing is there, just all
these things, the image

00:37:43.270 --> 00:37:43.930
minification.

00:37:43.930 --> 00:37:47.270
So it's just really,
really awesome.

00:37:47.270 --> 00:37:50.250
I couldn't imagine developing
apps any other

00:37:50.250 --> 00:37:54.260
way since using Yeoman.

00:37:54.260 --> 00:37:55.690
PAUL LEWIS: That's what you
want to hear, right?

00:37:55.690 --> 00:37:56.060
ADDY OSMANI: Exactly.

00:37:56.060 --> 00:37:57.330
PAUL LEWIS: That's wonderful.

00:37:57.330 --> 00:37:58.070
Awesome.

00:37:58.070 --> 00:38:00.530
Yeah, thank you so much, Brian,
for showing us through

00:38:00.530 --> 00:38:01.520
the Angular generators.

00:38:01.520 --> 00:38:02.340
That's awesome.

00:38:02.340 --> 00:38:02.740
PAUL LEWIS: Yeah.

00:38:02.740 --> 00:38:05.240
I guess what we should do is we
should take a look at the

00:38:05.240 --> 00:38:05.960
questions on the Moderator.

00:38:05.960 --> 00:38:06.410
ADDY OSMANI: Yeah.

00:38:06.410 --> 00:38:08.410
We're almost out of time so
let's look at some questions.

00:38:08.410 --> 00:38:09.230
PAUL LEWIS: Yeah, let's
see what we've got.

00:38:09.230 --> 00:38:13.040
So we maybe not be able to get
through all 13 questions, but

00:38:13.040 --> 00:38:13.630
thank you for them.

00:38:13.630 --> 00:38:16.036
And we will obviously get
through the ones that we can.

00:38:16.036 --> 00:38:16.830
ADDY OSMANI: Yeah.

00:38:16.830 --> 00:38:19.370
PAUL LEWIS: So let's start
with the top one.

00:38:19.370 --> 00:38:21.440
So first, "congrats on the
successful launch." That's

00:38:21.440 --> 00:38:24.310
very kind of you. "Plans on
letting people define their

00:38:24.310 --> 00:38:25.180
own code structure.

00:38:25.180 --> 00:38:27.550
Today it's rather hard to
introduce Yeoman into an

00:38:27.550 --> 00:38:29.820
existing environment due to
the requirements on folder

00:38:29.820 --> 00:38:32.420
structure, et cetera." Also,
as a bonus here, "Windows

00:38:32.420 --> 00:38:33.730
support soon?"

00:38:33.730 --> 00:38:36.200
ADDY OSMANI: So people have been
requesting the ability to

00:38:36.200 --> 00:38:39.640
drop in existing projects into
Yeoman and just have it work.

00:38:39.640 --> 00:38:41.360
And we totally get that.

00:38:41.360 --> 00:38:44.720
So we're taking a look at better
initial configuration

00:38:44.720 --> 00:38:47.920
so that if you have a project
with a different directory

00:38:47.920 --> 00:38:51.220
structure to what we think you
should be using, we're going

00:38:51.220 --> 00:38:54.460
to give you a nice easy way in
the next couple of releases to

00:38:54.460 --> 00:38:57.180
just sort of say, OK, well,
here's where my scripts are.

00:38:57.180 --> 00:38:58.570
Here's where my styles are.

00:38:58.570 --> 00:39:00.500
And here's how the rest of
my app is structured.

00:39:00.500 --> 00:39:03.135
And hopefully, you'll be able
to just use Yeoman right out

00:39:03.135 --> 00:39:04.590
of the box without
too many issues.

00:39:04.590 --> 00:39:08.680
PAUL LEWIS: So on that, though,
it's presumably worth

00:39:08.680 --> 00:39:10.550
saying that Yeoman still
is opinionated.

00:39:10.550 --> 00:39:11.090
ADDY OSMANI: Yes.

00:39:11.090 --> 00:39:14.470
PAUL LEWIS: And that is
a core part of Yeoman.

00:39:14.470 --> 00:39:15.350
So it's probably, what?

00:39:15.350 --> 00:39:16.600
A compromise somewhere
in there?

00:39:16.600 --> 00:39:17.033
ADDY OSMANI: Yeah.

00:39:17.033 --> 00:39:19.140
PAUL LEWIS: So it's like,
yes, you can tweak

00:39:19.140 --> 00:39:19.660
things a little bit.

00:39:19.660 --> 00:39:21.510
But do expect it to still
be Yeoman-ish.

00:39:21.510 --> 00:39:22.190
ADDY OSMANI: Absolutely.

00:39:22.190 --> 00:39:26.040
And we always tell people if
you find that what you're

00:39:26.040 --> 00:39:28.720
trying to do is a little bit
too much outside of our own

00:39:28.720 --> 00:39:31.900
opinions, we do recommend,
though, do check out Grunts,

00:39:31.900 --> 00:39:34.630
which is a project that
Yeoman builds on.

00:39:34.630 --> 00:39:37.090
Because it allows you to
customize a lot more.

00:39:37.090 --> 00:39:40.380
It's more for those people that
know what they're doing.

00:39:40.380 --> 00:39:43.080
They've got a good idea of all
the tools they want to support

00:39:43.080 --> 00:39:45.360
and want something a
lot more custom.

00:39:45.360 --> 00:39:47.630
There's also a question
about Windows support.

00:39:47.630 --> 00:39:50.860
So we don't officially support
Windows just yet.

00:39:50.860 --> 00:39:54.110
But I will say I was doing
a tooling workshop in

00:39:54.110 --> 00:39:55.270
Amsterdam last week.

00:39:55.270 --> 00:39:57.890
And I'd say half the class had
Windows boxes, and they were

00:39:57.890 --> 00:39:59.370
all up and using Yeoman.

00:39:59.370 --> 00:40:01.490
So it does work at the moment.

00:40:01.490 --> 00:40:04.150
There are one or two little
tweaks we still have to make

00:40:04.150 --> 00:40:05.670
to improve the user
experience.

00:40:05.670 --> 00:40:07.170
But Windows support is coming.

00:40:07.170 --> 00:40:08.590
It's definitely something
that's on our radar.

00:40:08.590 --> 00:40:09.860
PAUL LEWIS: Awesome.

00:40:09.860 --> 00:40:14.910
OK, so "can Yeoman be expanded
for other languages, such as

00:40:14.910 --> 00:40:16.230
PHP?"

00:40:16.230 --> 00:40:16.900
ADDY OSMANI: Interesting
question.

00:40:16.900 --> 00:40:19.850
So quite a few people have also
been saying, you know,

00:40:19.850 --> 00:40:21.380
I've got an existing back end.

00:40:21.380 --> 00:40:24.470
Maybe it's written in PHP,
or Rails, or .net,

00:40:24.470 --> 00:40:25.450
or something else.

00:40:25.450 --> 00:40:28.540
And we want to try helping
developers with the broader

00:40:28.540 --> 00:40:29.470
stack as well.

00:40:29.470 --> 00:40:31.790
There are a ton of different
variations on that, though.

00:40:31.790 --> 00:40:34.490
And we obviously can't help
everybody with everything.

00:40:34.490 --> 00:40:37.270
So what we're going to try doing
some time in the near

00:40:37.270 --> 00:40:40.830
future is giving you a solution
for how you can

00:40:40.830 --> 00:40:43.710
integrate your existing back
end with a front end that's

00:40:43.710 --> 00:40:45.620
powered by a Yeoman workflow.

00:40:45.620 --> 00:40:47.220
It's definitely something
that we're looking at.

00:40:47.220 --> 00:40:49.330
And it'll probably just take
a little while longer to

00:40:49.330 --> 00:40:50.890
properly think through
the design of that.

00:40:50.890 --> 00:40:52.900
PAUL LEWIS: OK, that actually
taps into another question.

00:40:52.900 --> 00:40:55.365
So you've answered that one
by proxy, which is great.

00:40:55.365 --> 00:40:57.540
"It would be awesome"--
apparently--

00:40:57.540 --> 00:41:02.280
"if Wordpress and other CMS
had integration as well."

00:41:02.280 --> 00:41:03.990
ADDY OSMANI: It's interesting
when you say integration.

00:41:03.990 --> 00:41:05.420
What do you think integration
means there?

00:41:05.420 --> 00:41:08.630
PAUL LEWIS: Well, it's
a good question.

00:41:08.630 --> 00:41:13.170
Well, the question here from
Simon, he's sort of saying

00:41:13.170 --> 00:41:16.200
"Wordpress database, HTML5
boilerplate-themed build

00:41:16.200 --> 00:41:18.050
script, boo."

00:41:18.050 --> 00:41:21.220
ADDY OSMANI: So, actually, a
nice fellow called Romain

00:41:21.220 --> 00:41:23.700
Berger came up with a Wordpress

00:41:23.700 --> 00:41:24.890
generator for Yeoman.

00:41:24.890 --> 00:41:27.110
I haven't taken a full
look at it just yet.

00:41:27.110 --> 00:41:29.820
But the idea there is that
you can actually generate

00:41:29.820 --> 00:41:33.790
Wordpress projects
using Yeoman.

00:41:33.790 --> 00:41:35.980
PAUL LEWIS: I guess that
seems to be what

00:41:35.980 --> 00:41:36.530
the question's asking.

00:41:36.530 --> 00:41:37.950
It's like, OK, yeah.

00:41:37.950 --> 00:41:42.120
Because if you were to scaffold
out today at front

00:41:42.120 --> 00:41:47.150
end, it would be, I suppose,
ignorant of any particular CMS

00:41:47.150 --> 00:41:47.530
or whatever.

00:41:47.530 --> 00:41:47.785
ADDY OSMANI: Yeah.

00:41:47.785 --> 00:41:49.885
PAUL LEWIS: So it's good to
know that there are, in

00:41:49.885 --> 00:41:50.810
theory, generators.

00:41:50.810 --> 00:41:53.030
And yes, I mean, that's the
point of the community, right?

00:41:53.030 --> 00:41:53.530
ADDY OSMANI: Definitely.

00:41:53.530 --> 00:41:56.010
PAUL LEWIS: If you want to write
these generators, you

00:41:56.010 --> 00:41:57.540
can look at the existing
generators, you

00:41:57.540 --> 00:41:58.970
can create your own.

00:41:58.970 --> 00:42:00.860
There's pull requests, as
you say, for Wordpress.

00:42:00.860 --> 00:42:01.220
ADDY OSMANI: Absolutely.

00:42:01.220 --> 00:42:02.770
PAUL LEWIS: So get involved.

00:42:02.770 --> 00:42:03.150
Help out.

00:42:03.150 --> 00:42:04.600
ADDY OSMANI: Yeah, that'd
be awesome.

00:42:04.600 --> 00:42:07.200
PAUL LEWIS: That's what we're
hoping people will do.

00:42:07.200 --> 00:42:08.920
ADDY OSMANI: Let's take
one more question and

00:42:08.920 --> 00:42:09.730
then we're going to--

00:42:09.730 --> 00:42:13.040
PAUL LEWIS: Can you talk a
little about Yeoman Insight?

00:42:13.040 --> 00:42:14.750
What are the plans to
share this wonderful

00:42:14.750 --> 00:42:15.540
data with the world?

00:42:15.540 --> 00:42:16.310
Thank you, Eric.

00:42:16.310 --> 00:42:17.000
ADDY OSMANI: Oh, of course.

00:42:17.000 --> 00:42:17.620
Yes.

00:42:17.620 --> 00:42:22.070
So Yeoman Insight was this idea
to help track some of the

00:42:22.070 --> 00:42:23.520
different things that
developers are doing

00:42:23.520 --> 00:42:24.760
on the front end.

00:42:24.760 --> 00:42:27.730
The idea is that we don't really
have this sort of great

00:42:27.730 --> 00:42:30.650
source of information about
what frameworks people are

00:42:30.650 --> 00:42:33.360
using, whether people are
building large-scale

00:42:33.360 --> 00:42:36.270
applications or something a
little bit smaller, what the

00:42:36.270 --> 00:42:38.420
pain points of people's
workflows are.

00:42:38.420 --> 00:42:41.920
And so Insight is sort of this
opt-in feature of Yeoman.

00:42:41.920 --> 00:42:43.670
So it's completely optional.

00:42:43.670 --> 00:42:44.760
You don't have to use it.

00:42:44.760 --> 00:42:46.790
We do like you to, if you can.

00:42:46.790 --> 00:42:49.090
But basically, it'll track some
of the stuff that you're

00:42:49.090 --> 00:42:51.730
doing and send it back to us.

00:42:51.730 --> 00:42:53.130
We aggregate the data.

00:42:53.130 --> 00:42:55.890
And at some point in the near
future, we're going to share a

00:42:55.890 --> 00:42:57.340
lot of that information.

00:42:57.340 --> 00:42:59.830
So we'll let you know what
frameworks people have been

00:42:59.830 --> 00:43:02.520
installing and using with their
apps, what the most

00:43:02.520 --> 00:43:05.910
popular commands are, whether
people are just using Yeoman

00:43:05.910 --> 00:43:09.790
for tons and tons of smaller
projects or just on much

00:43:09.790 --> 00:43:12.740
larger beefier things
in production.

00:43:12.740 --> 00:43:15.480
But, yeah, we're hopefully going
to plan on getting that

00:43:15.480 --> 00:43:16.380
data out soon.

00:43:16.380 --> 00:43:17.610
PAUL LEWIS: I know that you said
this was last question.

00:43:17.610 --> 00:43:18.580
But I did see one at
the bottom here.

00:43:18.580 --> 00:43:20.220
Is that Paul Irish
on the right?

00:43:20.220 --> 00:43:21.720
I think, no.

00:43:21.720 --> 00:43:24.000
Unless Paul Irish suddenly
became British.

00:43:24.000 --> 00:43:26.060
There's Paul Irish
now on the left.

00:43:26.060 --> 00:43:28.910
Unless Paul Irish became British
and lost all his hair.

00:43:28.910 --> 00:43:30.110
No, I'm Paul Irish.

00:43:30.110 --> 00:43:32.780
But Paul Irish is unwell
this week.

00:43:32.780 --> 00:43:34.240
So hopefully he gets better.

00:43:34.240 --> 00:43:34.740
ADDY OSMANI: Get well soon.

00:43:34.740 --> 00:43:36.080
Get well soon.

00:43:36.080 --> 00:43:37.710
So on that that's it.

00:43:37.710 --> 00:43:38.730
PAUL LEWIS: Thank you
for joining us.

00:43:38.730 --> 00:43:40.940
ADDY OSMANI: Thank you to my
special guest, Paul Lewis, for

00:43:40.940 --> 00:43:41.770
stepping in.

00:43:41.770 --> 00:43:42.440
PAUL LEWIS: Thank you.

00:43:42.440 --> 00:43:44.010
ADDY OSMANI: And we'll see
you again on the next

00:43:44.010 --> 00:43:45.480
"Breakpoint." Thank
you very much.

00:43:45.480 --> 00:43:46.600
PAUL LEWIS: Thank you, Brian.

00:43:46.600 --> 00:43:46.900
BRIAN FORD: Yup.

00:43:46.900 --> 00:43:48.150
PAUL LEWIS: See you later.

