WEBVTT
Kind: captions
Language: en

00:00:00.980 --> 00:00:04.260
I wanted to revisit the chart that we created at the end of

00:00:04.260 --> 00:00:06.340
the last live coding session.

00:00:06.340 --> 00:00:11.280
Hopefully one thing that you noticed that was conspicuously absent was any

00:00:11.280 --> 00:00:14.190
sort of context around the chart.

00:00:14.190 --> 00:00:18.880
The most extreme example of this might be a chart without any labels or

00:00:18.880 --> 00:00:23.640
axis, or even a title, but this may seems silly.

00:00:23.640 --> 00:00:27.530
Most charts would at least have axis and tick marks, but

00:00:27.530 --> 00:00:32.509
even with axis and tick marks, and values at those axis and

00:00:32.509 --> 00:00:38.540
tick marks, unless we label with the y and with the x coordinates, represent.

00:00:38.540 --> 00:00:43.018
It's very hard for a reader to interpret what's actually being displayed.

00:00:43.018 --> 00:00:47.210
You always want to make sure that any chart you create has both

00:00:47.210 --> 00:00:49.070
clearly displayed units.

00:00:49.070 --> 00:00:55.490
In this case, millions for the attendance, and years for the x axis.

00:00:55.490 --> 00:00:57.680
As well as informative labels.

00:00:57.680 --> 00:01:01.170
That shouldn't require any additional explanation.

00:01:01.170 --> 00:01:06.260
If I label the x axis year, it should be readily understandable to a reader.

00:01:06.260 --> 00:01:10.570
And the same applies to the y axis of attendance.

00:01:10.570 --> 00:01:15.200
But even with these additions of label tick marks with clear units.

00:01:15.200 --> 00:01:18.310
And labels on the y and x axis.

00:01:18.310 --> 00:01:23.229
A reader still left in the dark about what's actually being displayed.

00:01:23.229 --> 00:01:29.007
For this chart, before we add the title, even the [INAUDIBLE]

00:01:29.007 --> 00:01:35.930
some attendance plotted against years between 1930 and 2014.

00:01:35.930 --> 00:01:39.065
We don't know what the attendance actually represents.

00:01:39.065 --> 00:01:41.132
The chart's quite meaningless.

00:01:41.132 --> 00:01:43.653
As you can see even the simplest additions,

00:01:43.653 --> 00:01:47.471
can have profound effects on how interpretable your chart is, and

00:01:47.471 --> 00:01:50.436
how effectively you convey your overall message.

00:01:50.436 --> 00:01:55.120
And while dimple.js might be great for many common chart types, and

00:01:55.120 --> 00:02:01.240
allows us the flexibility to adapt them by exposing the underlying d3 objects.

00:02:01.240 --> 00:02:05.160
We will begin to start customizing and adding to our chart, enough so

00:02:05.160 --> 00:02:08.758
that it makes sense to work at the level of d3 itself.

00:02:08.758 --> 00:02:13.460
Part of this is due to the fact that d3 is much more flexible, and allows for

00:02:13.460 --> 00:02:17.650
complex interaction and animation in your graphics.

00:02:17.650 --> 00:02:21.480
And the third point while it may not be relevant to someone who's

00:02:21.480 --> 00:02:25.590
creating graphics in production, or has already learned d3,

00:02:25.590 --> 00:02:30.770
this being a course to learn about visualization by working with d3, it really

00:02:30.770 --> 00:02:36.460
helps you to understand what higher level libraries are doing such as dimple JS.

00:02:36.460 --> 00:02:40.780
How to debug their issues when they do arise, and to feel more confident about

00:02:40.780 --> 00:02:44.560
what's going on with the library itself and how to adapt it.

