WEBVTT
Kind: captions
Language: en

00:00:00.100 --> 00:00:02.476
This problem is a little bit tricky, because you have to completely rethink the

00:00:02.476 --> 00:00:08.210
approach. Previously, we looked at a picture,and the one to the left. But when

00:00:08.210 --> 00:00:11.750
we use an enhanced for loop, we only get to look at one picture at a time, so we

00:00:11.750 --> 00:00:17.115
have to remember something from the past. The way I've done it is, I would

00:00:17.115 --> 00:00:22.829
remember the rightmost position of the previous picture. Let me show you. I

00:00:22.829 --> 00:00:26.310
have an enhanced for loop, and when I'm done positioning the picture, I

00:00:26.310 --> 00:00:33.016
remember its rightmostX value. So when I reenter the loop with the next

00:00:33.016 --> 00:00:38.312
picture, then I can position it 10 further than the rightmostX value. And

00:00:38.312 --> 00:00:42.635
they're always spaced apart nicely. What about he first picture? If I start the

00:00:42.635 --> 00:00:48.028
rightmostX at 0, then the first picture ends up at offset 10. So that's the

00:00:48.028 --> 00:00:51.062
answer. And now when you look at these two loops, you can see that we can

00:00:51.062 --> 00:00:56.750
actually merge them. So we do the positioning and drawing in a single loop.

00:00:56.750 --> 00:00:59.694
That's enough about pictures for right now. Sarah will show you another

00:00:59.694 --> 00:01:03.989
application of array lists. She'll revisit a class that you've seen in lesson

00:01:03.989 --> 00:01:08.112
three. The person class that collected friends, at that time we did it in

00:01:08.112 --> 00:01:13.343
a less than perfect way by just having one long string of friend names. Now

00:01:13.343 --> 00:01:17.186
that you know how to collect objects, she'll collect the friends in an array

00:01:17.186 --> 00:01:20.039
list. Alright, over to you Sarah.

