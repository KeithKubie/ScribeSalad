WEBVTT
Kind: captions
Language: en

00:00:06.910 --> 00:00:07.410
Hi.

00:00:07.410 --> 00:00:09.140
Welcome back to recitation.

00:00:09.140 --> 00:00:12.820
You've been learning about
infinite series of constants.

00:00:12.820 --> 00:00:16.050
Adding up, you know,
series of numbers.

00:00:16.050 --> 00:00:19.300
And one thing that
we've talked about

00:00:19.300 --> 00:00:21.600
are divergent series
and convergent series,

00:00:21.600 --> 00:00:24.470
and rates of divergence
a little bit.

00:00:24.470 --> 00:00:26.785
So suppose you wanted
to run an experiment.

00:00:26.785 --> 00:00:30.710
So suppose you started with
the series log n over n,

00:00:30.710 --> 00:00:33.250
and you started summing--
I picked n equals 3.

00:00:33.250 --> 00:00:35.480
It doesn't actually
matter that much--

00:00:35.480 --> 00:00:39.280
started summing at n equals
3, and going to infinity.

00:00:39.280 --> 00:00:41.410
And you set your
computer to sort of keep

00:00:41.410 --> 00:00:45.790
track of what the partial
sums are as it does this.

00:00:45.790 --> 00:00:48.600
So you want it to produce
a list of partial sums.

00:00:48.600 --> 00:00:51.600
And you know, maybe
to get a good feel

00:00:51.600 --> 00:00:54.820
for this rate of divergence,
what you want to do

00:00:54.820 --> 00:00:57.820
is let it run for a
long time, collect

00:00:57.820 --> 00:00:58.970
a whole bunch of values.

00:00:58.970 --> 00:01:02.150
Say, you know, stop when it gets
to some fairly large number.

00:01:02.150 --> 00:01:06.610
So suppose we run
this, and we ask

00:01:06.610 --> 00:01:09.960
it to stop when it gets
to a partial sum that's

00:01:09.960 --> 00:01:11.750
greater than or equal to 5,000.

00:01:11.750 --> 00:01:12.740
You know, whatever.

00:01:12.740 --> 00:01:15.770
A moderately large
integer or number.

00:01:15.770 --> 00:01:17.020
Doesn't have to be an integer.

00:01:17.020 --> 00:01:19.686
So it's going to stop as soon as
it reaches a partial sum that's

00:01:19.686 --> 00:01:20.559
bigger than 5,000.

00:01:20.559 --> 00:01:22.975
So what I want to know, is how
long is that going to take?

00:01:22.975 --> 00:01:24.970
Now of course, that
depends on your computer.

00:01:24.970 --> 00:01:27.520
So let's just say, you
know, for sake of argument,

00:01:27.520 --> 00:01:31.460
that your computer-- this is
generous to your computer.

00:01:31.460 --> 00:01:33.670
At least my computer
doesn't go this fast--

00:01:33.670 --> 00:01:37.090
that it takes 10 to
the minus 20 seconds

00:01:37.090 --> 00:01:41.402
to add an additional
term to the partial sums.

00:01:41.402 --> 00:01:42.985
So suppose that your
computer takes 10

00:01:42.985 --> 00:01:46.960
to the minus 20 seconds for
each additional summand.

00:01:46.960 --> 00:01:48.930
How long, how many
terms of the series,

00:01:48.930 --> 00:01:51.930
how long are you going to wait
around, waiting for this sum

00:01:51.930 --> 00:01:53.390
to get to 5,000?

00:01:53.390 --> 00:01:55.770
So that's the question.

00:01:55.770 --> 00:01:59.000
Why don't you pause the
video, take some time,

00:01:59.000 --> 00:02:00.130
try and work this out.

00:02:00.130 --> 00:02:02.250
This is probably not
a quite good question

00:02:02.250 --> 00:02:03.750
for experimentation.

00:02:03.750 --> 00:02:07.370
I would advise against
actually running it

00:02:07.370 --> 00:02:09.750
while you wait to
continue with the video.

00:02:09.750 --> 00:02:12.520
But of course, you're
welcome to try.

00:02:12.520 --> 00:02:15.090
But you can, you know,
work this out, come back,

00:02:15.090 --> 00:02:16.780
and we'll talk
about it together.

00:02:25.500 --> 00:02:26.116
Welcome back.

00:02:26.116 --> 00:02:27.990
Hopefully you had some
fun with this problem.

00:02:27.990 --> 00:02:29.320
Let's let's talk about it.

00:02:29.320 --> 00:02:33.530
So what we want to do, is we
want to look at this series

00:02:33.530 --> 00:02:35.380
and say, you know,
about how long

00:02:35.380 --> 00:02:38.160
it's going to take
to get to 5,000.

00:02:38.160 --> 00:02:40.720
What we want-- which
partial sum of this series

00:02:40.720 --> 00:02:43.200
is about equal to 5,000
for the first time?

00:02:43.200 --> 00:02:45.540
So let's give a notation there.

00:02:45.540 --> 00:02:49.500
So let's call S_N--
big N now, S big N

00:02:49.500 --> 00:02:52.074
is equal to N-th
partial sum-- well, OK.

00:02:52.074 --> 00:02:53.740
Let me not make it
the N-th partial sum.

00:02:53.740 --> 00:02:56.390
Let me just make it
the sum when the top

00:02:56.390 --> 00:03:05.470
is big N. So going from 3 to big
N of log little n divided by n.

00:03:05.470 --> 00:03:09.730
So first of all, the
answer could be-- A priori,

00:03:09.730 --> 00:03:11.550
the answer could be forever.

00:03:11.550 --> 00:03:14.780
It might be that
series converges

00:03:14.780 --> 00:03:17.170
to some number less than 5,000.

00:03:17.170 --> 00:03:19.490
So if that were to
happen, then, you know,

00:03:19.490 --> 00:03:22.460
no matter how long you waited
around, you wouldn't get there.

00:03:22.460 --> 00:03:26.630
But we can check that
that's not the case.

00:03:26.630 --> 00:03:29.910
So we can check that
this series diverges.

00:03:29.910 --> 00:03:33.790
So how can we check that?

00:03:33.790 --> 00:03:43.140
So the series diverges
by the integral test,

00:03:43.140 --> 00:03:52.610
because the integral of
log x over x dx from, say,

00:03:52.610 --> 00:03:56.320
3 to infinity, though of course
the bounds aren't-- the lower

00:03:56.320 --> 00:03:58.059
bound, 3, is not
crucially important.

00:03:58.059 --> 00:03:59.850
This is something we
know how to integrate.

00:03:59.850 --> 00:04:06.310
This is equal to 1/2 log
of x quantity squared,

00:04:06.310 --> 00:04:10.440
taken between, well,
3 and infinity.

00:04:10.440 --> 00:04:14.260
And anyway, you see that as
x goes to infinity, log of x

00:04:14.260 --> 00:04:17.280
goes to infinity, and so log
of x squared goes to infinity.

00:04:17.280 --> 00:04:18.040
So this diverges.

00:04:21.850 --> 00:04:24.396
So the series does diverge
to positive infinity.

00:04:24.396 --> 00:04:25.770
And as a result
of its divergence

00:04:25.770 --> 00:04:28.350
to positive infinity, we
know that eventually, we

00:04:28.350 --> 00:04:29.800
do get to 5,000.

00:04:29.800 --> 00:04:33.300
OK, so this is-- the answer is
not an infinite amount of time.

00:04:33.300 --> 00:04:35.410
The answer is some
finite amount of time.

00:04:35.410 --> 00:04:37.730
So now the question
is, how much.

00:04:37.730 --> 00:04:39.840
Now, the thing to remember
about the integral test

00:04:39.840 --> 00:04:42.340
is not only can it tell you
whether something converges

00:04:42.340 --> 00:04:45.830
or diverges, but it gives
you a really good estimate

00:04:45.830 --> 00:04:47.980
of how quickly it
converges or diverges.

00:04:47.980 --> 00:04:50.200
So I have over here
a little picture.

00:04:50.200 --> 00:04:53.650
This is the function y
equals log of x over x.

00:04:53.650 --> 00:04:58.360
So at x equals 1,
this function is 0,

00:04:58.360 --> 00:05:02.874
and then it reaches a
maximum, and then tapers down.

00:05:02.874 --> 00:05:05.040
And as x gets larger-- so
it's a little hard to tell

00:05:05.040 --> 00:05:07.810
in this picture--
at x equals 6, this

00:05:07.810 --> 00:05:10.720
is still-- well, so the peak
here is a little bit less

00:05:10.720 --> 00:05:11.890
than 0.4.

00:05:11.890 --> 00:05:13.612
At x equals 6, this,
the function value

00:05:13.612 --> 00:05:15.860
is still bigger than a quarter.

00:05:15.860 --> 00:05:18.510
But it does eventually go down
to 0, because x grows faster

00:05:18.510 --> 00:05:19.250
than log x.

00:05:19.250 --> 00:05:20.800
And of course if
you were interested,

00:05:20.800 --> 00:05:23.450
an interesting exercise might
be really precise, you know,

00:05:23.450 --> 00:05:26.700
where, to figure out precisely,
what is this peak, and what's

00:05:26.700 --> 00:05:29.780
the x-value, and what's the
y-value of that peak point

00:05:29.780 --> 00:05:31.160
before it starts turning down.

00:05:31.160 --> 00:05:34.130
If you wanted something
fun to work out.

00:05:34.130 --> 00:05:34.630
And OK.

00:05:34.630 --> 00:05:36.255
But that doesn't
actually have anything

00:05:36.255 --> 00:05:39.200
to do with our
problem, which has

00:05:39.200 --> 00:05:40.490
to do with this integral test.

00:05:40.490 --> 00:05:42.560
So remember that the
integral in question

00:05:42.560 --> 00:05:47.200
is the area under this
curve from 3 onwards,

00:05:47.200 --> 00:05:49.840
and a partial sum
is what you get

00:05:49.840 --> 00:05:53.790
when you take a bunch of these
left endpoint rectangles.

00:05:53.790 --> 00:05:55.610
And because this
function is decreasing,

00:05:55.610 --> 00:05:58.200
the rectangles completely
cover the region.

00:05:58.200 --> 00:06:00.460
And so the integral
test tells us

00:06:00.460 --> 00:06:12.550
that the integral from 3
to big N of our function,

00:06:12.550 --> 00:06:19.060
log x over x dx, is
strictly less than-- well,

00:06:19.060 --> 00:06:23.600
we want the partial
sum that goes up to,

00:06:23.600 --> 00:06:28.890
so whose right interval
here ends at big N.

00:06:28.890 --> 00:06:31.830
So that's actually the N
minus first partial sum.

00:06:31.830 --> 00:06:34.555
So maybe what I'll do, is
I'll add a plus 1 here,

00:06:34.555 --> 00:06:37.880
and I'll make this the
big Nth partial sum is

00:06:37.880 --> 00:06:42.630
bigger than the sum from 3
to N plus 1 of the function.

00:06:42.630 --> 00:06:45.360
And also, if you
turn this around,

00:06:45.360 --> 00:06:49.960
and you took right endpoint
rectangles instead,

00:06:49.960 --> 00:06:53.770
you see that if you chop
off the first rectangle,

00:06:53.770 --> 00:06:58.420
then what you get
is the-- you get

00:06:58.420 --> 00:07:00.350
an area less than the integral.

00:07:00.350 --> 00:07:03.080
So we also have an
upper bound here.

00:07:03.080 --> 00:07:06.120
This is less than or equal
to the very first term, which

00:07:06.120 --> 00:07:14.830
in our case is ln 3 over
3 plus that same integral.

00:07:21.930 --> 00:07:25.050
So this is this formula that
Professor Jerison showed you

00:07:25.050 --> 00:07:30.440
in class that bounds the partial
sums in between the integral.

00:07:30.440 --> 00:07:32.310
So here, where the
integral, instead

00:07:32.310 --> 00:07:35.690
of being an improper integral,
just goes up to N plus 1.

00:07:35.690 --> 00:07:38.600
So the integral test
gives us, it tells us

00:07:38.600 --> 00:07:41.730
that this diverges if
and only if this does,

00:07:41.730 --> 00:07:44.120
but it also gives
us explicit bounds

00:07:44.120 --> 00:07:49.360
for those two expressions,
how they relate to each other.

00:07:49.360 --> 00:07:51.720
And so it says that the
rate of divergence of S_N

00:07:51.720 --> 00:07:54.550
is very, very closely tied
to the rate of divergence

00:07:54.550 --> 00:07:56.280
of this integral.

00:07:56.280 --> 00:07:57.020
Well, so what?

00:07:57.020 --> 00:07:57.519
So OK.

00:07:57.519 --> 00:08:00.490
So we said, we know, you know,
about how big this integral is.

00:08:00.490 --> 00:08:01.250
How big is it?

00:08:01.250 --> 00:08:06.770
Well, we saw that it's about log
x squared between the bounds.

00:08:06.770 --> 00:08:09.892
So this is equal to,
well, it's about,

00:08:09.892 --> 00:08:18.740
it's 1/2 log of n plus
1 squared minus 1/2 log

00:08:18.740 --> 00:08:25.900
3 squared is less than S_N,
which is less than log 3

00:08:25.900 --> 00:08:28.320
over 3 plus the same thing.

00:08:34.160 --> 00:08:39.900
So this is log N plus 1
quantity squared minus 1/2 log

00:08:39.900 --> 00:08:42.050
3 squared.

00:08:42.050 --> 00:08:46.530
And here this is log N
plus 1 quantity squared.

00:08:46.530 --> 00:08:47.120
OK.

00:08:47.120 --> 00:08:52.390
So this right-hand side is
equal to this right-hand side.

00:08:52.390 --> 00:08:52.940
OK.

00:08:52.940 --> 00:08:58.490
So we have that S-- and
this is a big N. So we have

00:08:58.490 --> 00:09:02.656
that S_N is about bounded by
these-- sorry-- is definitely

00:09:02.656 --> 00:09:04.030
bounded by these
two expressions.

00:09:04.030 --> 00:09:05.545
Another thing to note is
that the constants here

00:09:05.545 --> 00:09:06.310
are pretty small.

00:09:06.310 --> 00:09:06.810
Right?

00:09:06.810 --> 00:09:11.630
This 1/2 log 3 squared and log 3
over 3 times 1/2 log 3 squared,

00:09:11.630 --> 00:09:12.820
those are pretty small.

00:09:12.820 --> 00:09:14.278
From this point on
in this problem,

00:09:14.278 --> 00:09:17.970
I'm going to stop worrying about
precise constants like that,

00:09:17.970 --> 00:09:21.177
and I'm going to start
using an approximate sign.

00:09:21.177 --> 00:09:22.760
So another way to
write this is to say

00:09:22.760 --> 00:09:28.690
that S_N is approximately-- so
this is like an equals sign,

00:09:28.690 --> 00:09:30.520
but both of them are curvy.

00:09:30.520 --> 00:09:33.590
So what I mean by this, it
doesn't mean anything formally.

00:09:33.590 --> 00:09:35.490
So it's not a precise meaning.

00:09:35.490 --> 00:09:39.290
In this case, it's going to
mean always about the same size.

00:09:39.290 --> 00:09:41.020
For purposes of
this argument, it's

00:09:41.020 --> 00:09:42.210
going to be about the same.

00:09:42.210 --> 00:09:49.752
So this is about equal to 1/2
ln of N plus 1 quantity squared.

00:09:49.752 --> 00:09:50.550
OK.

00:09:50.550 --> 00:09:52.830
And what we want--

00:09:52.830 --> 00:09:53.361
So, OK.

00:09:53.361 --> 00:09:53.860
So, good.

00:09:53.860 --> 00:09:56.670
So we have a good approximation
for about how big the Nth

00:09:56.670 --> 00:09:57.860
partial sum is.

00:09:57.860 --> 00:09:58.580
Well, all right.

00:09:58.580 --> 00:09:59.790
So why?

00:09:59.790 --> 00:10:02.250
Well, because I know
that what I want to do is

00:10:02.250 --> 00:10:05.020
I want to keep going until
I reach a partial sum that

00:10:05.020 --> 00:10:07.090
has size about 5,000.

00:10:07.090 --> 00:10:09.250
So I want to know, how
many terms do I need.

00:10:09.250 --> 00:10:09.790
Right?

00:10:09.790 --> 00:10:11.873
That's going to tell me
how much time it requires,

00:10:11.873 --> 00:10:13.860
and I need to know how
many terms there are.

00:10:13.860 --> 00:10:19.350
So I need to know, when S_N
is about 5,000, how big is N?

00:10:19.350 --> 00:10:22.460
So coming back over here, so
I need to take this equation,

00:10:22.460 --> 00:10:24.760
and I need to solve it
for N in terms of S_N.

00:10:24.760 --> 00:10:27.280
Because I know that S_N is
going to be about 5,000,

00:10:27.280 --> 00:10:29.291
so I want to know, how
big is N going to be?

00:10:29.291 --> 00:10:29.790
So OK.

00:10:29.790 --> 00:10:30.498
So let's do that.

00:10:30.498 --> 00:10:33.210
So we can multiply by 2, take a
square root, and exponentiate.

00:10:33.210 --> 00:10:37.370
And what we get-- so I'm
going to move up here.

00:10:40.250 --> 00:10:47.440
So from this expression, what
I get is that N plus 1 is

00:10:47.440 --> 00:10:50.179
approximately equal to-- so
I'm going to multiply by 2,

00:10:50.179 --> 00:10:51.720
take a square root,
and exponentiate,

00:10:51.720 --> 00:10:58.860
so that's e to the
square root of 2*s_N.

00:11:03.060 --> 00:11:05.180
And you know what, I don't
care about this plus 1.

00:11:05.180 --> 00:11:06.388
I'm going to forget about it.

00:11:06.388 --> 00:11:10.290
So N is approximately equal to
e to the 2 square root of S_N.

00:11:10.290 --> 00:11:14.420
Now in our case, we want to know
particularly when S_N is equal

00:11:14.420 --> 00:11:15.760
to about 5,000.

00:11:15.760 --> 00:11:26.260
So when S_N is approximately
equal to 5,000,

00:11:26.260 --> 00:11:30.570
this means that N is
approximately-- well,

00:11:30.570 --> 00:11:34.090
2 times 5,000 is 10,000,
square root of 10,000 is 100,

00:11:34.090 --> 00:11:38.150
so N is approximately
equal to e to the 100.

00:11:38.150 --> 00:11:41.186
Now e is between
2 and 3-- so OK,

00:11:41.186 --> 00:11:44.490
so you know, I
don't, I can't really

00:11:44.490 --> 00:11:47.100
give a very precise estimate
of this off the top of my head.

00:11:47.100 --> 00:11:50.080
But luckily I used a
computer ahead of time

00:11:50.080 --> 00:11:51.400
to approximate it.

00:11:51.400 --> 00:12:01.520
So e to the 100 is
about equal to 2 times

00:12:01.520 --> 00:12:04.880
10 to the forty-third power.

00:12:04.880 --> 00:12:07.280
So that's the number, so
that's about how big N

00:12:07.280 --> 00:12:10.380
is, order of magnitude.

00:12:10.380 --> 00:12:15.970
So we need to do about 2 times
10 to the forty-third terms.

00:12:15.970 --> 00:12:18.289
So now that's the
number of terms.

00:12:18.289 --> 00:12:20.080
Now, if you remember,
back in our question,

00:12:20.080 --> 00:12:24.450
we were asked, on the assumption
that each term takes 10

00:12:24.450 --> 00:12:28.070
to the minus 20 seconds, how
long is this going to take.

00:12:28.070 --> 00:12:47.460
So if each term requires
10 to the minus 20 seconds,

00:12:47.460 --> 00:12:52.850
this means we're dealing with
2 times 10 to the 23 seconds.

00:12:52.850 --> 00:12:54.710
That's how long
you'll have to wait.

00:12:54.710 --> 00:12:57.190
Now, this is a big number.

00:12:57.190 --> 00:12:57.710
Right?

00:12:57.710 --> 00:13:01.150
So let's think about how
big a number this is.

00:13:01.150 --> 00:13:03.160
Because there are
big numbers, and then

00:13:03.160 --> 00:13:05.220
there are ridiculously
big numbers.

00:13:05.220 --> 00:13:07.350
So, a big number
would be a number

00:13:07.350 --> 00:13:11.181
where like, maybe this 10 to
the minus 20 is a bad estimate,

00:13:11.181 --> 00:13:11.680
right?

00:13:11.680 --> 00:13:15.130
I mean, maybe you are
emperor of the world,

00:13:15.130 --> 00:13:17.430
and you can harness
all the computing

00:13:17.430 --> 00:13:20.470
power in the entire world
to work on this problem.

00:13:20.470 --> 00:13:22.590
And so then, in
that case, maybe you

00:13:22.590 --> 00:13:26.730
can do, say, 10 to
the 25 computations

00:13:26.730 --> 00:13:29.940
per second, something.

00:13:29.940 --> 00:13:31.550
Or whatever.

00:13:31.550 --> 00:13:35.480
So how much of a dent would
that make in this number?

00:13:35.480 --> 00:13:37.260
Like 2 times 10 to 23.

00:13:37.260 --> 00:13:37.760
OK.

00:13:37.760 --> 00:13:39.551
It's not going to be
done before lunchtime,

00:13:39.551 --> 00:13:40.700
but how long will it take?

00:13:40.700 --> 00:13:43.300
So just to-- let's see.

00:13:43.300 --> 00:13:45.830
I have this written down here.

00:13:45.830 --> 00:13:46.330
OK.

00:13:46.330 --> 00:13:58.160
So for comparison, this is about
equal to 50,000 times the age

00:13:58.160 --> 00:14:04.010
of the universe.

00:14:04.010 --> 00:14:07.680
So if you had, if you
harnessed all the computing

00:14:07.680 --> 00:14:10.960
power on earth,
you could probably

00:14:10.960 --> 00:14:15.120
get this done in a
few billion years.

00:14:15.120 --> 00:14:18.010
So OK, so just a
sense of just how

00:14:18.010 --> 00:14:19.410
slowly this thing is getting.

00:14:19.410 --> 00:14:22.740
If you wait, and you have all
the computer power on earth

00:14:22.740 --> 00:14:27.540
adding terms of the series, in,
say, a few billion years you

00:14:27.540 --> 00:14:32.870
will be able to figure
out-- you will sum up

00:14:32.870 --> 00:14:35.470
terms that pass 5,000 in value.

00:14:35.470 --> 00:14:37.390
So OK.

00:14:37.390 --> 00:14:40.360
So I don't know.

00:14:40.360 --> 00:14:42.790
I find that amusing.

00:14:42.790 --> 00:14:46.090
And remember that the key
here to this whole problem

00:14:46.090 --> 00:14:49.860
was just that we were using
this integral test here.

00:14:49.860 --> 00:14:52.240
And specifically, we
were using it in the form

00:14:52.240 --> 00:14:54.000
that I have over
here, this form that

00:14:54.000 --> 00:14:57.390
lets you bound the
partial sums between two

00:14:57.390 --> 00:14:58.530
values of the integral.

00:14:58.530 --> 00:15:00.600
And because we have
those very tight bounds,

00:15:00.600 --> 00:15:03.300
these approximations
are all valid,

00:15:03.300 --> 00:15:06.360
and so we can really say,
yes, this problem that I've

00:15:06.360 --> 00:15:10.160
described is really something
you can't do in an afternoon

00:15:10.160 --> 00:15:11.990
or whatever.

00:15:11.990 --> 00:15:13.815
So I'll stop there.

