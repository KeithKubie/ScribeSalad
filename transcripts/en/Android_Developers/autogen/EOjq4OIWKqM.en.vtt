WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:06.880 align:start position:0%
 
[Music]

00:00:06.880 --> 00:00:06.890 align:start position:0%
[Music]
 

00:00:06.890 --> 00:00:10.129 align:start position:0%
[Music]
so<00:00:07.890><c> I'm</c><00:00:08.250><c> Adam</c><00:00:08.550><c> I'm</c><00:00:08.970><c> Chris</c><00:00:09.240><c> and</c><00:00:09.389><c> this</c><00:00:10.019><c> is</c>

00:00:10.129 --> 00:00:10.139 align:start position:0%
so I'm Adam I'm Chris and this is
 

00:00:10.139 --> 00:00:11.810 align:start position:0%
so I'm Adam I'm Chris and this is
Android<00:00:10.440><c> suspenders</c><00:00:10.950><c> today</c><00:00:11.550><c> we're</c><00:00:11.639><c> going</c><00:00:11.730><c> to</c>

00:00:11.810 --> 00:00:11.820 align:start position:0%
Android suspenders today we're going to
 

00:00:11.820 --> 00:00:13.190 align:start position:0%
Android suspenders today we're going to
talk<00:00:12.059><c> a</c><00:00:12.090><c> little</c><00:00:12.210><c> bit</c><00:00:12.360><c> about</c><00:00:12.570><c> Kotlin</c>

00:00:13.190 --> 00:00:13.200 align:start position:0%
talk a little bit about Kotlin
 

00:00:13.200 --> 00:00:15.530 align:start position:0%
talk a little bit about Kotlin
co-routines<00:00:13.650><c> but</c><00:00:14.009><c> to</c><00:00:14.190><c> get</c><00:00:14.280><c> started</c><00:00:14.639><c> a</c><00:00:15.240><c> little</c>

00:00:15.530 --> 00:00:15.540 align:start position:0%
co-routines but to get started a little
 

00:00:15.540 --> 00:00:16.730 align:start position:0%
co-routines but to get started a little
bit<00:00:15.690><c> of</c><00:00:15.780><c> background</c><00:00:15.929><c> many</c><00:00:16.379><c> of</c><00:00:16.470><c> you</c><00:00:16.619><c> are</c>

00:00:16.730 --> 00:00:16.740 align:start position:0%
bit of background many of you are
 

00:00:16.740 --> 00:00:18.590 align:start position:0%
bit of background many of you are
probably<00:00:16.890><c> familiar</c><00:00:17.100><c> with</c><00:00:17.580><c> those</c><00:00:17.699><c> already</c><00:00:18.330><c> is</c>

00:00:18.590 --> 00:00:18.600 align:start position:0%
probably familiar with those already is
 

00:00:18.600 --> 00:00:20.359 align:start position:0%
probably familiar with those already is
the<00:00:18.869><c> idea</c><00:00:19.109><c> of</c><00:00:19.170><c> androids</c><00:00:19.680><c> main</c><00:00:19.859><c> thread</c><00:00:20.160><c> and</c>

00:00:20.359 --> 00:00:20.369 align:start position:0%
the idea of androids main thread and
 

00:00:20.369 --> 00:00:22.820 align:start position:0%
the idea of androids main thread and
just<00:00:20.880><c> like</c><00:00:21.420><c> almost</c><00:00:21.720><c> every</c><00:00:22.020><c> other</c><00:00:22.050><c> UI</c><00:00:22.380><c> toolkit</c>

00:00:22.820 --> 00:00:22.830 align:start position:0%
just like almost every other UI toolkit
 

00:00:22.830 --> 00:00:26.150 align:start position:0%
just like almost every other UI toolkit
out<00:00:22.980><c> there</c><00:00:23.189><c> androids</c><00:00:24.350><c> exposes</c><00:00:25.350><c> a</c><00:00:25.380><c> single</c><00:00:25.740><c> UI</c>

00:00:26.150 --> 00:00:26.160 align:start position:0%
out there androids exposes a single UI
 

00:00:26.160 --> 00:00:28.250 align:start position:0%
out there androids exposes a single UI
or<00:00:26.490><c> main</c><00:00:26.699><c> thread</c><00:00:27.000><c> for</c><00:00:27.330><c> doing</c><00:00:27.630><c> updates</c><00:00:28.050><c> to</c>

00:00:28.250 --> 00:00:28.260 align:start position:0%
or main thread for doing updates to
 

00:00:28.260 --> 00:00:30.710 align:start position:0%
or main thread for doing updates to
parts<00:00:28.500><c> of</c><00:00:28.590><c> your</c><00:00:28.769><c> UI</c><00:00:29.179><c> so</c><00:00:30.179><c> some</c><00:00:30.449><c> of</c><00:00:30.480><c> the</c><00:00:30.599><c> things</c>

00:00:30.710 --> 00:00:30.720 align:start position:0%
parts of your UI so some of the things
 

00:00:30.720 --> 00:00:31.999 align:start position:0%
parts of your UI so some of the things
that<00:00:30.929><c> you</c><00:00:31.019><c> might</c><00:00:31.140><c> find</c><00:00:31.320><c> yourself</c><00:00:31.650><c> doing</c><00:00:31.800><c> on</c>

00:00:31.999 --> 00:00:32.009 align:start position:0%
that you might find yourself doing on
 

00:00:32.009 --> 00:00:34.729 align:start position:0%
that you might find yourself doing on
the<00:00:32.099><c> main</c><00:00:32.219><c> thread</c><00:00:32.460><c> inflating</c><00:00:33.390><c> views</c><00:00:33.739><c> you</c>

00:00:34.729 --> 00:00:34.739 align:start position:0%
the main thread inflating views you
 

00:00:34.739 --> 00:00:36.139 align:start position:0%
the main thread inflating views you
could<00:00:34.890><c> be</c><00:00:35.070><c> doing</c><00:00:35.190><c> measure</c><00:00:35.730><c> and</c><00:00:35.910><c> layout</c>

00:00:36.139 --> 00:00:36.149 align:start position:0%
could be doing measure and layout
 

00:00:36.149 --> 00:00:38.209 align:start position:0%
could be doing measure and layout
operations<00:00:36.780><c> to</c><00:00:37.020><c> change</c><00:00:37.290><c> the</c><00:00:37.829><c> shape</c><00:00:38.010><c> of</c><00:00:38.160><c> your</c>

00:00:38.209 --> 00:00:38.219 align:start position:0%
operations to change the shape of your
 

00:00:38.219 --> 00:00:41.030 align:start position:0%
operations to change the shape of your
view<00:00:38.579><c> hierarchy</c><00:00:38.930><c> you</c><00:00:39.930><c> could</c><00:00:40.079><c> be</c><00:00:40.140><c> drawing</c><00:00:40.440><c> or</c>

00:00:41.030 --> 00:00:41.040 align:start position:0%
view hierarchy you could be drawing or
 

00:00:41.040 --> 00:00:43.190 align:start position:0%
view hierarchy you could be drawing or
many<00:00:41.579><c> other</c><00:00:41.790><c> things</c><00:00:41.940><c> really</c><00:00:42.300><c> like</c><00:00:42.629><c> processing</c>

00:00:43.190 --> 00:00:43.200 align:start position:0%
many other things really like processing
 

00:00:43.200 --> 00:00:45.970 align:start position:0%
many other things really like processing
input<00:00:43.530><c> events</c><00:00:43.829><c> and</c><00:00:44.070><c> so</c><00:00:44.250><c> on</c><00:00:44.340><c> and</c><00:00:44.489><c> so</c><00:00:44.610><c> forth</c><00:00:44.850><c> so</c>

00:00:45.970 --> 00:00:45.980 align:start position:0%
input events and so on and so forth so
 

00:00:45.980 --> 00:00:49.130 align:start position:0%
input events and so on and so forth so
today<00:00:46.980><c> you're</c><00:00:47.670><c> probably</c><00:00:47.850><c> familiar</c><00:00:48.270><c> with</c><00:00:48.570><c> this</c>

00:00:49.130 --> 00:00:49.140 align:start position:0%
today you're probably familiar with this
 

00:00:49.140 --> 00:00:51.799 align:start position:0%
today you're probably familiar with this
16<00:00:49.649><c> millisecond</c><00:00:50.250><c> time</c><00:00:50.489><c> limit</c><00:00:50.820><c> the</c><00:00:51.660><c> vast</c>

00:00:51.799 --> 00:00:51.809 align:start position:0%
16 millisecond time limit the vast
 

00:00:51.809 --> 00:00:53.330 align:start position:0%
16 millisecond time limit the vast
majority<00:00:51.960><c> of</c><00:00:52.289><c> devices</c><00:00:52.800><c> out</c><00:00:52.890><c> there</c><00:00:53.100><c> have</c><00:00:53.309><c> a</c>

00:00:53.330 --> 00:00:53.340 align:start position:0%
majority of devices out there have a
 

00:00:53.340 --> 00:00:55.279 align:start position:0%
majority of devices out there have a
refresh<00:00:53.670><c> rate</c><00:00:53.879><c> of</c><00:00:54.210><c> 60</c><00:00:54.600><c> Hertz</c><00:00:54.809><c> which</c><00:00:55.079><c> means</c>

00:00:55.279 --> 00:00:55.289 align:start position:0%
refresh rate of 60 Hertz which means
 

00:00:55.289 --> 00:00:57.139 align:start position:0%
refresh rate of 60 Hertz which means
that<00:00:55.500><c> you</c><00:00:55.590><c> have</c><00:00:55.710><c> just</c><00:00:55.890><c> over</c><00:00:56.219><c> 16</c><00:00:56.579><c> milliseconds</c>

00:00:57.139 --> 00:00:57.149 align:start position:0%
that you have just over 16 milliseconds
 

00:00:57.149 --> 00:00:59.360 align:start position:0%
that you have just over 16 milliseconds
to<00:00:57.239><c> do</c><00:00:57.329><c> all</c><00:00:57.539><c> the</c><00:00:57.780><c> work</c><00:00:57.899><c> necessary</c><00:00:58.170><c> in</c><00:00:58.770><c> order</c><00:00:59.250><c> to</c>

00:00:59.360 --> 00:00:59.370 align:start position:0%
to do all the work necessary in order to
 

00:00:59.370 --> 00:01:01.970 align:start position:0%
to do all the work necessary in order to
deliver<00:00:59.670><c> a</c><00:00:59.820><c> smooth</c><00:01:00.180><c> frame</c><00:01:00.390><c> rate</c><00:01:00.770><c> so</c><00:01:01.770><c> what</c>

00:01:01.970 --> 00:01:01.980 align:start position:0%
deliver a smooth frame rate so what
 

00:01:01.980 --> 00:01:03.290 align:start position:0%
deliver a smooth frame rate so what
happens<00:01:02.219><c> when</c><00:01:02.340><c> that</c><00:01:02.460><c> display</c><00:01:02.789><c> rate</c><00:01:02.969><c> goes</c><00:01:03.120><c> up</c>

00:01:03.290 --> 00:01:03.300 align:start position:0%
happens when that display rate goes up
 

00:01:03.300 --> 00:01:05.539 align:start position:0%
happens when that display rate goes up
so<00:01:04.080><c> 90</c><00:01:04.500><c> Hertz</c><00:01:04.710><c> means</c><00:01:04.890><c> you</c><00:01:05.100><c> have</c><00:01:05.250><c> 12</c>

00:01:05.539 --> 00:01:05.549 align:start position:0%
so 90 Hertz means you have 12
 

00:01:05.549 --> 00:01:08.270 align:start position:0%
so 90 Hertz means you have 12
milliseconds<00:01:06.090><c> 120</c><00:01:07.049><c> Hertz</c><00:01:07.260><c> means</c><00:01:07.530><c> you</c><00:01:07.740><c> have</c><00:01:07.890><c> 8</c>

00:01:08.270 --> 00:01:08.280 align:start position:0%
milliseconds 120 Hertz means you have 8
 

00:01:08.280 --> 00:01:10.250 align:start position:0%
milliseconds 120 Hertz means you have 8
milliseconds<00:01:08.939><c> and</c><00:01:09.210><c> you</c><00:01:09.720><c> have</c><00:01:09.810><c> less</c><00:01:10.020><c> and</c><00:01:10.170><c> less</c>

00:01:10.250 --> 00:01:10.260 align:start position:0%
milliseconds and you have less and less
 

00:01:10.260 --> 00:01:11.719 align:start position:0%
milliseconds and you have less and less
time<00:01:10.590><c> to</c><00:01:10.619><c> get</c><00:01:10.830><c> some</c><00:01:10.950><c> of</c><00:01:10.979><c> this</c><00:01:11.100><c> work</c><00:01:11.310><c> done</c><00:01:11.520><c> if</c>

00:01:11.719 --> 00:01:11.729 align:start position:0%
time to get some of this work done if
 

00:01:11.729 --> 00:01:13.880 align:start position:0%
time to get some of this work done if
you<00:01:12.240><c> take</c><00:01:12.390><c> a</c><00:01:12.420><c> look</c><00:01:12.570><c> at</c><00:01:12.689><c> assist</c><00:01:12.990><c> trace</c><00:01:13.200><c> you'll</c>

00:01:13.880 --> 00:01:13.890 align:start position:0%
you take a look at assist trace you'll
 

00:01:13.890 --> 00:01:15.679 align:start position:0%
you take a look at assist trace you'll
usually<00:01:14.189><c> find</c><00:01:14.670><c> that</c><00:01:14.850><c> the</c><00:01:15.150><c> things</c><00:01:15.330><c> that</c><00:01:15.450><c> caused</c>

00:01:15.679 --> 00:01:15.689 align:start position:0%
usually find that the things that caused
 

00:01:15.689 --> 00:01:17.840 align:start position:0%
usually find that the things that caused
you<00:01:15.869><c> to</c><00:01:15.900><c> miss</c><00:01:16.229><c> a</c><00:01:16.290><c> frame</c><00:01:16.680><c> and</c><00:01:17.040><c> thereby</c><00:01:17.640><c> have</c>

00:01:17.840 --> 00:01:17.850 align:start position:0%
you to miss a frame and thereby have
 

00:01:17.850 --> 00:01:19.370 align:start position:0%
you to miss a frame and thereby have
kind<00:01:18.119><c> of</c><00:01:18.150><c> jank</c><00:01:18.420><c> in</c><00:01:18.540><c> your</c><00:01:18.630><c> application</c><00:01:19.200><c> is</c>

00:01:19.370 --> 00:01:19.380 align:start position:0%
kind of jank in your application is
 

00:01:19.380 --> 00:01:22.010 align:start position:0%
kind of jank in your application is
really<00:01:20.009><c> app</c><00:01:20.220><c> code</c><00:01:20.520><c> like</c><00:01:21.030><c> if</c><00:01:21.420><c> you're</c><00:01:21.750><c> binding</c>

00:01:22.010 --> 00:01:22.020 align:start position:0%
really app code like if you're binding
 

00:01:22.020 --> 00:01:23.899 align:start position:0%
really app code like if you're binding
items<00:01:22.560><c> to</c><00:01:22.710><c> a</c><00:01:22.740><c> recycler</c><00:01:23.189><c> view</c><00:01:23.250><c> reading</c><00:01:23.700><c> from</c><00:01:23.820><c> a</c>

00:01:23.899 --> 00:01:23.909 align:start position:0%
items to a recycler view reading from a
 

00:01:23.909 --> 00:01:25.640 align:start position:0%
items to a recycler view reading from a
data<00:01:24.090><c> store</c><00:01:24.330><c> or</c><00:01:24.360><c> so</c><00:01:24.570><c> on</c><00:01:24.659><c> and</c><00:01:24.780><c> so</c><00:01:24.930><c> forth</c><00:01:25.170><c> these</c>

00:01:25.640 --> 00:01:25.650 align:start position:0%
data store or so on and so forth these
 

00:01:25.650 --> 00:01:27.499 align:start position:0%
data store or so on and so forth these
are<00:01:25.830><c> all</c><00:01:26.100><c> bits</c><00:01:26.490><c> of</c><00:01:26.640><c> work</c><00:01:26.820><c> that</c><00:01:27.180><c> it</c><00:01:27.330><c> would</c><00:01:27.420><c> be</c>

00:01:27.499 --> 00:01:27.509 align:start position:0%
are all bits of work that it would be
 

00:01:27.509 --> 00:01:28.969 align:start position:0%
are all bits of work that it would be
really<00:01:27.689><c> great</c><00:01:28.020><c> if</c><00:01:28.200><c> we</c><00:01:28.350><c> could</c><00:01:28.439><c> keep</c><00:01:28.619><c> this</c><00:01:28.680><c> off</c>

00:01:28.969 --> 00:01:28.979 align:start position:0%
really great if we could keep this off
 

00:01:28.979 --> 00:01:30.289 align:start position:0%
really great if we could keep this off
of<00:01:29.280><c> that</c><00:01:29.400><c> main</c><00:01:29.549><c> thread</c><00:01:29.820><c> and</c><00:01:29.939><c> out</c><00:01:30.060><c> of</c><00:01:30.180><c> this</c>

00:01:30.289 --> 00:01:30.299 align:start position:0%
of that main thread and out of this
 

00:01:30.299 --> 00:01:32.749 align:start position:0%
of that main thread and out of this
critical<00:01:30.659><c> path</c><00:01:30.810><c> so</c><00:01:31.110><c> how</c><00:01:31.229><c> do</c><00:01:31.290><c> we</c><00:01:31.380><c> fix</c><00:01:31.590><c> it</c><00:01:31.799><c> well</c>

00:01:32.749 --> 00:01:32.759 align:start position:0%
critical path so how do we fix it well
 

00:01:32.759 --> 00:01:34.940 align:start position:0%
critical path so how do we fix it well
this<00:01:33.630><c> talk</c><00:01:33.840><c> isn't</c><00:01:34.020><c> about</c><00:01:34.259><c> achieving</c><00:01:34.680><c> eight</c>

00:01:34.940 --> 00:01:34.950 align:start position:0%
this talk isn't about achieving eight
 

00:01:34.950 --> 00:01:36.649 align:start position:0%
this talk isn't about achieving eight
millisecond<00:01:35.460><c> refresh</c><00:01:35.820><c> boundaries</c><00:01:36.240><c> this</c><00:01:36.509><c> is</c>

00:01:36.649 --> 00:01:36.659 align:start position:0%
millisecond refresh boundaries this is
 

00:01:36.659 --> 00:01:39.469 align:start position:0%
millisecond refresh boundaries this is
about<00:01:37.070><c> making</c><00:01:38.070><c> use</c><00:01:38.430><c> of</c><00:01:38.460><c> the</c><00:01:38.939><c> resources</c><00:01:39.000><c> we</c>

00:01:39.469 --> 00:01:39.479 align:start position:0%
about making use of the resources we
 

00:01:39.479 --> 00:01:41.270 align:start position:0%
about making use of the resources we
have<00:01:39.600><c> available</c><00:01:39.720><c> and</c><00:01:40.259><c> all</c><00:01:40.860><c> the</c><00:01:40.979><c> phones</c><00:01:41.159><c> that</c>

00:01:41.270 --> 00:01:41.280 align:start position:0%
have available and all the phones that
 

00:01:41.280 --> 00:01:42.859 align:start position:0%
have available and all the phones that
we<00:01:41.369><c> have</c><00:01:41.640><c> have</c><00:01:41.939><c> multiple</c><00:01:42.360><c> cores</c><00:01:42.570><c> in</c><00:01:42.750><c> them</c>

00:01:42.859 --> 00:01:42.869 align:start position:0%
we have have multiple cores in them
 

00:01:42.869 --> 00:01:46.010 align:start position:0%
we have have multiple cores in them
today<00:01:43.020><c> so</c><00:01:43.759><c> how</c><00:01:44.759><c> do</c><00:01:44.820><c> we</c><00:01:44.909><c> actually</c><00:01:45.420><c> make</c><00:01:45.750><c> use</c><00:01:45.990><c> of</c>

00:01:46.010 --> 00:01:46.020 align:start position:0%
today so how do we actually make use of
 

00:01:46.020 --> 00:01:49.429 align:start position:0%
today so how do we actually make use of
that<00:01:47.030><c> well</c><00:01:48.030><c> some</c><00:01:48.720><c> of</c><00:01:48.810><c> you</c><00:01:48.899><c> probably</c><00:01:49.020><c> remember</c>

00:01:49.429 --> 00:01:49.439 align:start position:0%
that well some of you probably remember
 

00:01:49.439 --> 00:01:51.200 align:start position:0%
that well some of you probably remember
this<00:01:49.799><c> thing</c><00:01:50.009><c> it's</c><00:01:50.640><c> been</c><00:01:50.820><c> around</c><00:01:50.970><c> for</c><00:01:51.180><c> quite</c>

00:01:51.200 --> 00:01:51.210 align:start position:0%
this thing it's been around for quite
 

00:01:51.210 --> 00:01:53.840 align:start position:0%
this thing it's been around for quite
some<00:01:51.509><c> time</c><00:01:51.750><c> and</c><00:01:51.930><c> has</c><00:01:52.799><c> a</c><00:01:52.829><c> lot</c><00:01:53.040><c> of</c><00:01:53.159><c> issues</c><00:01:53.250><c> it's</c>

00:01:53.840 --> 00:01:53.850 align:start position:0%
some time and has a lot of issues it's
 

00:01:53.850 --> 00:01:56.209 align:start position:0%
some time and has a lot of issues it's
all<00:01:54.000><c> composes</c><00:01:54.930><c> a</c><00:01:54.960><c> little</c><00:01:55.200><c> bit</c><00:01:55.320><c> badly</c><00:01:55.500><c> has</c><00:01:55.979><c> some</c>

00:01:56.209 --> 00:01:56.219 align:start position:0%
all composes a little bit badly has some
 

00:01:56.219 --> 00:01:57.889 align:start position:0%
all composes a little bit badly has some
issues<00:01:56.549><c> around</c><00:01:56.759><c> rotation</c><00:01:57.390><c> it's</c><00:01:57.570><c> really</c><00:01:57.780><c> easy</c>

00:01:57.889 --> 00:01:57.899 align:start position:0%
issues around rotation it's really easy
 

00:01:57.899 --> 00:01:59.090 align:start position:0%
issues around rotation it's really easy
to<00:01:58.020><c> get</c><00:01:58.110><c> wrong</c>

00:01:59.090 --> 00:01:59.100 align:start position:0%
to get wrong
 

00:01:59.100 --> 00:02:01.160 align:start position:0%
to get wrong
there's<00:01:59.520><c> executors</c><00:02:00.509><c> which</c><00:02:00.719><c> most</c><00:02:00.930><c> Java</c>

00:02:01.160 --> 00:02:01.170 align:start position:0%
there's executors which most Java
 

00:02:01.170 --> 00:02:03.770 align:start position:0%
there's executors which most Java
developers<00:02:01.680><c> are</c><00:02:02.009><c> familiar</c><00:02:02.460><c> with</c><00:02:02.640><c> and</c><00:02:02.909><c> this</c>

00:02:03.770 --> 00:02:03.780 align:start position:0%
developers are familiar with and this
 

00:02:03.780 --> 00:02:05.179 align:start position:0%
developers are familiar with and this
kind<00:02:03.990><c> of</c><00:02:04.049><c> lets</c><00:02:04.200><c> you</c><00:02:04.350><c> share</c><00:02:04.530><c> some</c><00:02:04.740><c> thread</c><00:02:04.979><c> pools</c>

00:02:05.179 --> 00:02:05.189 align:start position:0%
kind of lets you share some thread pools
 

00:02:05.189 --> 00:02:07.639 align:start position:0%
kind of lets you share some thread pools
which<00:02:05.430><c> is</c><00:02:05.549><c> nice</c><00:02:05.759><c> but</c><00:02:06.719><c> it's</c><00:02:06.960><c> otherwise</c><00:02:07.259><c> kind</c><00:02:07.530><c> of</c>

00:02:07.639 --> 00:02:07.649 align:start position:0%
which is nice but it's otherwise kind of
 

00:02:07.649 --> 00:02:09.320 align:start position:0%
which is nice but it's otherwise kind of
a<00:02:07.710><c> really</c><00:02:07.920><c> raw</c><00:02:08.129><c> API</c><00:02:08.489><c> you</c><00:02:08.610><c> can</c><00:02:08.910><c> build</c><00:02:09.119><c> things</c>

00:02:09.320 --> 00:02:09.330 align:start position:0%
a really raw API you can build things
 

00:02:09.330 --> 00:02:10.760 align:start position:0%
a really raw API you can build things
out<00:02:09.599><c> of</c><00:02:09.629><c> it</c><00:02:09.810><c> but</c><00:02:09.989><c> it's</c><00:02:10.110><c> not</c><00:02:10.140><c> really</c><00:02:10.440><c> convenient</c>

00:02:10.760 --> 00:02:10.770 align:start position:0%
out of it but it's not really convenient
 

00:02:10.770 --> 00:02:14.090 align:start position:0%
out of it but it's not really convenient
to<00:02:10.979><c> use</c><00:02:11.099><c> on</c><00:02:11.220><c> its</c><00:02:11.370><c> own</c><00:02:12.560><c> loaders</c><00:02:13.560><c> loaders</c>

00:02:14.090 --> 00:02:14.100 align:start position:0%
to use on its own loaders loaders
 

00:02:14.100 --> 00:02:16.130 align:start position:0%
to use on its own loaders loaders
sort<00:02:14.250><c> of</c><00:02:14.340><c> thing</c><00:02:14.520><c> that</c><00:02:14.630><c> we're</c><00:02:15.630><c> certainly</c><00:02:15.810><c> out</c>

00:02:16.130 --> 00:02:16.140 align:start position:0%
sort of thing that we're certainly out
 

00:02:16.140 --> 00:02:18.260 align:start position:0%
sort of thing that we're certainly out
there<00:02:16.350><c> that</c><00:02:16.590><c> solved</c><00:02:17.220><c> a</c><00:02:17.250><c> few</c><00:02:17.430><c> problems</c><00:02:17.610><c> but</c><00:02:18.060><c> it</c>

00:02:18.260 --> 00:02:18.270 align:start position:0%
there that solved a few problems but it
 

00:02:18.270 --> 00:02:20.450 align:start position:0%
there that solved a few problems but it
was<00:02:18.390><c> pretty</c><00:02:18.570><c> narrowly</c><00:02:18.870><c> scoped</c><00:02:19.350><c> it's</c><00:02:19.860><c> really</c>

00:02:20.450 --> 00:02:20.460 align:start position:0%
was pretty narrowly scoped it's really
 

00:02:20.460 --> 00:02:22.190 align:start position:0%
was pretty narrowly scoped it's really
now<00:02:20.610><c> deprecated</c><00:02:21.210><c> so</c><00:02:21.390><c> there's</c><00:02:21.570><c> not</c><00:02:21.960><c> a</c><00:02:22.020><c> whole</c>

00:02:22.190 --> 00:02:22.200 align:start position:0%
now deprecated so there's not a whole
 

00:02:22.200 --> 00:02:26.150 align:start position:0%
now deprecated so there's not a whole
lot<00:02:22.260><c> there</c><00:02:23.930><c> we</c><00:02:24.930><c> can</c><00:02:25.050><c> use</c><00:02:25.170><c> futures</c>

00:02:26.150 --> 00:02:26.160 align:start position:0%
lot there we can use futures
 

00:02:26.160 --> 00:02:27.650 align:start position:0%
lot there we can use futures
there's<00:02:26.610><c> listenable</c><00:02:27.000><c> future</c><00:02:27.360><c> which</c><00:02:27.540><c> has</c>

00:02:27.650 --> 00:02:27.660 align:start position:0%
there's listenable future which has
 

00:02:27.660 --> 00:02:29.330 align:start position:0%
there's listenable future which has
started<00:02:27.930><c> showing</c><00:02:28.080><c> up</c><00:02:28.320><c> in</c><00:02:28.410><c> more</c><00:02:28.560><c> Android</c><00:02:28.830><c> XA</c><00:02:29.190><c> P</c>

00:02:29.330 --> 00:02:29.340 align:start position:0%
started showing up in more Android XA P
 

00:02:29.340 --> 00:02:31.490 align:start position:0%
started showing up in more Android XA P
is<00:02:29.520><c> but</c><00:02:30.330><c> you</c><00:02:30.600><c> may</c><00:02:30.690><c> not</c><00:02:30.870><c> want</c><00:02:31.050><c> to</c><00:02:31.080><c> pull</c><00:02:31.230><c> in</c><00:02:31.380><c> all</c>

00:02:31.490 --> 00:02:31.500 align:start position:0%
is but you may not want to pull in all
 

00:02:31.500 --> 00:02:33.950 align:start position:0%
is but you may not want to pull in all
of<00:02:31.680><c> guava</c><00:02:31.920><c> and</c><00:02:32.160><c> all</c><00:02:32.340><c> of</c><00:02:32.520><c> the</c><00:02:32.960><c> infrastructure</c>

00:02:33.950 --> 00:02:33.960 align:start position:0%
of guava and all of the infrastructure
 

00:02:33.960 --> 00:02:35.570 align:start position:0%
of guava and all of the infrastructure
that<00:02:34.080><c> really</c><00:02:34.410><c> helps</c><00:02:34.680><c> you</c><00:02:34.770><c> leverage</c><00:02:35.010><c> some</c><00:02:35.550><c> of</c>

00:02:35.570 --> 00:02:35.580 align:start position:0%
that really helps you leverage some of
 

00:02:35.580 --> 00:02:36.800 align:start position:0%
that really helps you leverage some of
the<00:02:35.670><c> things</c><00:02:35.850><c> that</c><00:02:36.000><c> you</c><00:02:36.060><c> can</c><00:02:36.210><c> do</c><00:02:36.360><c> with</c><00:02:36.510><c> it</c><00:02:36.660><c> and</c>

00:02:36.800 --> 00:02:36.810 align:start position:0%
the things that you can do with it and
 

00:02:36.810 --> 00:02:39.770 align:start position:0%
the things that you can do with it and
unless<00:02:37.620><c> you're</c><00:02:37.860><c> working</c><00:02:38.160><c> on</c><00:02:38.400><c> min</c><00:02:38.640><c> SDK</c><00:02:38.760><c> 24</c><00:02:39.540><c> you</c>

00:02:39.770 --> 00:02:39.780 align:start position:0%
unless you're working on min SDK 24 you
 

00:02:39.780 --> 00:02:41.540 align:start position:0%
unless you're working on min SDK 24 you
can't<00:02:39.990><c> use</c><00:02:40.140><c> completable</c><00:02:40.590><c> future</c><00:02:40.980><c> either</c><00:02:41.190><c> and</c>

00:02:41.540 --> 00:02:41.550 align:start position:0%
can't use completable future either and
 

00:02:41.550 --> 00:02:43.280 align:start position:0%
can't use completable future either and
really<00:02:42.540><c> there's</c><00:02:42.720><c> a</c><00:02:42.780><c> whole</c><00:02:42.900><c> bunch</c><00:02:43.080><c> of</c><00:02:43.140><c> other</c>

00:02:43.280 --> 00:02:43.290 align:start position:0%
really there's a whole bunch of other
 

00:02:43.290 --> 00:02:44.780 align:start position:0%
really there's a whole bunch of other
reasons<00:02:43.470><c> why</c><00:02:43.710><c> you</c><00:02:44.220><c> might</c><00:02:44.340><c> not</c><00:02:44.520><c> want</c><00:02:44.700><c> to</c><00:02:44.730><c> use</c>

00:02:44.780 --> 00:02:44.790 align:start position:0%
reasons why you might not want to use
 

00:02:44.790 --> 00:02:48.110 align:start position:0%
reasons why you might not want to use
that<00:02:44.880><c> to</c><00:02:45.180><c> begin</c><00:02:45.300><c> with</c><00:02:46.730><c> so</c><00:02:47.730><c> there</c><00:02:47.850><c> are</c><00:02:47.940><c> a</c><00:02:47.970><c> lot</c><00:02:48.030><c> of</c>

00:02:48.110 --> 00:02:48.120 align:start position:0%
that to begin with so there are a lot of
 

00:02:48.120 --> 00:02:49.490 align:start position:0%
that to begin with so there are a lot of
other<00:02:48.300><c> libraries</c><00:02:48.510><c> out</c><00:02:48.870><c> there</c><00:02:48.900><c> I</c><00:02:49.080><c> mentioned</c>

00:02:49.490 --> 00:02:49.500 align:start position:0%
other libraries out there I mentioned
 

00:02:49.500 --> 00:02:50.900 align:start position:0%
other libraries out there I mentioned
guava<00:02:49.710><c> guava</c><00:02:50.040><c> is</c><00:02:50.250><c> certainly</c><00:02:50.580><c> one</c><00:02:50.730><c> that</c><00:02:50.820><c> you</c>

00:02:50.900 --> 00:02:50.910 align:start position:0%
guava guava is certainly one that you
 

00:02:50.910 --> 00:02:52.910 align:start position:0%
guava guava is certainly one that you
can<00:02:51.030><c> pull</c><00:02:51.210><c> into</c><00:02:51.360><c> your</c><00:02:51.510><c> app</c><00:02:51.660><c> rx</c><00:02:52.170><c> Java</c><00:02:52.410><c> is</c><00:02:52.590><c> super</c>

00:02:52.910 --> 00:02:52.920 align:start position:0%
can pull into your app rx Java is super
 

00:02:52.920 --> 00:02:55.370 align:start position:0%
can pull into your app rx Java is super
popular<00:02:53.130><c> it's</c><00:02:53.670><c> a</c><00:02:53.730><c> great</c><00:02:54.180><c> library</c><00:02:54.360><c> does</c><00:02:55.200><c> a</c><00:02:55.230><c> lot</c>

00:02:55.370 --> 00:02:55.380 align:start position:0%
popular it's a great library does a lot
 

00:02:55.380 --> 00:02:58.760 align:start position:0%
popular it's a great library does a lot
of<00:02:55.500><c> things</c><00:02:55.650><c> as</c><00:02:55.740><c> well</c><00:02:55.890><c> but</c><00:02:56.930><c> if</c><00:02:57.930><c> you're</c><00:02:58.410><c> sitting</c>

00:02:58.760 --> 00:02:58.770 align:start position:0%
of things as well but if you're sitting
 

00:02:58.770 --> 00:03:00.080 align:start position:0%
of things as well but if you're sitting
here<00:02:58.980><c> in</c><00:02:59.100><c> this</c><00:02:59.220><c> talk</c><00:02:59.430><c> today</c><00:02:59.460><c> you're</c><00:02:59.910><c> probably</c>

00:03:00.080 --> 00:03:00.090 align:start position:0%
here in this talk today you're probably
 

00:03:00.090 --> 00:03:02.150 align:start position:0%
here in this talk today you're probably
here<00:03:00.510><c> to</c><00:03:00.660><c> talk</c><00:03:00.840><c> about</c><00:03:00.870><c> co-routines</c><00:03:01.710><c> which</c><00:03:02.010><c> is</c>

00:03:02.150 --> 00:03:02.160 align:start position:0%
here to talk about co-routines which is
 

00:03:02.160 --> 00:03:04.070 align:start position:0%
here to talk about co-routines which is
a<00:03:02.190><c> new</c><00:03:02.340><c> feature</c><00:03:02.520><c> that</c><00:03:02.670><c> went</c><00:03:03.150><c> fully</c><00:03:03.540><c> stable</c><00:03:03.960><c> in</c>

00:03:04.070 --> 00:03:04.080 align:start position:0%
a new feature that went fully stable in
 

00:03:04.080 --> 00:03:08.120 align:start position:0%
a new feature that went fully stable in
Kotlin<00:03:04.440><c> 1.3</c><00:03:05.100><c> just</c><00:03:05.730><c> this</c><00:03:05.850><c> fall</c><00:03:06.830><c> so</c><00:03:07.830><c> why</c><00:03:07.980><c> should</c>

00:03:08.120 --> 00:03:08.130 align:start position:0%
Kotlin 1.3 just this fall so why should
 

00:03:08.130 --> 00:03:13.400 align:start position:0%
Kotlin 1.3 just this fall so why should
we<00:03:08.220><c> use</c><00:03:08.250><c> them</c><00:03:10.010><c> great</c><00:03:11.750><c> so</c><00:03:12.750><c> when</c><00:03:13.080><c> I</c><00:03:13.110><c> think</c><00:03:13.290><c> about</c>

00:03:13.400 --> 00:03:13.410 align:start position:0%
we use them great so when I think about
 

00:03:13.410 --> 00:03:14.690 align:start position:0%
we use them great so when I think about
this<00:03:13.500><c> question</c><00:03:13.920><c> I'm</c><00:03:14.130><c> thinking</c><00:03:14.430><c> about</c><00:03:14.550><c> what</c>

00:03:14.690 --> 00:03:14.700 align:start position:0%
this question I'm thinking about what
 

00:03:14.700 --> 00:03:16.670 align:start position:0%
this question I'm thinking about what
does<00:03:14.820><c> your</c><00:03:14.940><c> typical</c><00:03:15.300><c> mobile</c><00:03:15.450><c> app</c><00:03:15.720><c> do</c><00:03:15.900><c> and</c><00:03:16.620><c> I</c>

00:03:16.670 --> 00:03:16.680 align:start position:0%
does your typical mobile app do and I
 

00:03:16.680 --> 00:03:17.960 align:start position:0%
does your typical mobile app do and I
think<00:03:16.830><c> for</c><00:03:16.920><c> the</c><00:03:17.010><c> most</c><00:03:17.160><c> part</c><00:03:17.430><c> you</c><00:03:17.580><c> can</c><00:03:17.730><c> describe</c>

00:03:17.960 --> 00:03:17.970 align:start position:0%
think for the most part you can describe
 

00:03:17.970 --> 00:03:19.460 align:start position:0%
think for the most part you can describe
them<00:03:18.240><c> as</c><00:03:18.330><c> kind</c><00:03:18.510><c> of</c><00:03:18.600><c> crude</c><00:03:18.780><c> apps</c><00:03:18.930><c> and</c><00:03:19.200><c> I</c><00:03:19.260><c> don't</c>

00:03:19.460 --> 00:03:19.470 align:start position:0%
them as kind of crude apps and I don't
 

00:03:19.470 --> 00:03:21.230 align:start position:0%
them as kind of crude apps and I don't
mean<00:03:19.590><c> the</c><00:03:19.650><c> American</c><00:03:19.950><c> Slang</c><00:03:20.220><c> I</c><00:03:20.520><c> mean</c><00:03:20.940><c> the</c><00:03:21.060><c> fact</c>

00:03:21.230 --> 00:03:21.240 align:start position:0%
mean the American Slang I mean the fact
 

00:03:21.240 --> 00:03:23.090 align:start position:0%
mean the American Slang I mean the fact
that<00:03:21.300><c> they</c><00:03:21.510><c> create</c><00:03:21.930><c> they</c><00:03:22.230><c> read</c><00:03:22.500><c> they</c><00:03:22.740><c> update</c>

00:03:23.090 --> 00:03:23.100 align:start position:0%
that they create they read they update
 

00:03:23.100 --> 00:03:25.250 align:start position:0%
that they create they read they update
and<00:03:23.340><c> they</c><00:03:23.400><c> delete</c><00:03:23.670><c> data</c><00:03:23.990><c> usually</c><00:03:24.990><c> to</c><00:03:25.110><c> some</c>

00:03:25.250 --> 00:03:25.260 align:start position:0%
and they delete data usually to some
 

00:03:25.260 --> 00:03:26.450 align:start position:0%
and they delete data usually to some
kind<00:03:25.410><c> of</c><00:03:25.440><c> local</c><00:03:25.710><c> data</c><00:03:25.830><c> source</c><00:03:26.190><c> like</c><00:03:26.430><c> a</c>

00:03:26.450 --> 00:03:26.460 align:start position:0%
kind of local data source like a
 

00:03:26.460 --> 00:03:28.970 align:start position:0%
kind of local data source like a
database<00:03:26.850><c> or</c><00:03:27.180><c> whatever</c><00:03:27.480><c> it</c><00:03:27.570><c> be</c><00:03:27.680><c> and</c><00:03:28.680><c> then</c><00:03:28.860><c> go</c>

00:03:28.970 --> 00:03:28.980 align:start position:0%
database or whatever it be and then go
 

00:03:28.980 --> 00:03:30.320 align:start position:0%
database or whatever it be and then go
to<00:03:29.040><c> it</c><00:03:29.160><c> further</c><00:03:29.430><c> a</c><00:03:29.640><c> lot</c><00:03:29.760><c> of</c><00:03:29.880><c> apps</c><00:03:30.030><c> will</c><00:03:30.180><c> also</c>

00:03:30.320 --> 00:03:30.330 align:start position:0%
to it further a lot of apps will also
 

00:03:30.330 --> 00:03:32.630 align:start position:0%
to it further a lot of apps will also
have<00:03:30.420><c> some</c><00:03:30.540><c> kind</c><00:03:30.780><c> of</c><00:03:30.810><c> sync</c><00:03:31.140><c> so</c><00:03:31.410><c> they</c><00:03:32.310><c> upload</c>

00:03:32.630 --> 00:03:32.640 align:start position:0%
have some kind of sync so they upload
 

00:03:32.640 --> 00:03:34.460 align:start position:0%
have some kind of sync so they upload
data<00:03:32.880><c> and</c><00:03:33.390><c> pull</c><00:03:33.600><c> data</c><00:03:33.780><c> back</c><00:03:34.020><c> from</c><00:03:34.050><c> some</c><00:03:34.320><c> kind</c>

00:03:34.460 --> 00:03:34.470 align:start position:0%
data and pull data back from some kind
 

00:03:34.470 --> 00:03:37.010 align:start position:0%
data and pull data back from some kind
of<00:03:34.530><c> web</c><00:03:34.620><c> service</c><00:03:35.010><c> now</c><00:03:35.910><c> apps</c><00:03:36.300><c> are</c><00:03:36.720><c> actually</c>

00:03:37.010 --> 00:03:37.020 align:start position:0%
of web service now apps are actually
 

00:03:37.020 --> 00:03:39.050 align:start position:0%
of web service now apps are actually
pretty<00:03:37.350><c> simple</c><00:03:37.950><c> computationally</c><00:03:38.790><c> you're</c><00:03:38.970><c> not</c>

00:03:39.050 --> 00:03:39.060 align:start position:0%
pretty simple computationally you're not
 

00:03:39.060 --> 00:03:41.780 align:start position:0%
pretty simple computationally you're not
retexe<00:03:39.480><c> in</c><00:03:39.630><c> the</c><00:03:39.690><c> CPU</c><00:03:39.990><c> that</c><00:03:40.080><c> much</c><00:03:40.320><c> really</c><00:03:40.790><c> yes</c>

00:03:41.780 --> 00:03:41.790 align:start position:0%
retexe in the CPU that much really yes
 

00:03:41.790 --> 00:03:43.190 align:start position:0%
retexe in the CPU that much really yes
the<00:03:41.940><c> logic</c><00:03:42.270><c> can</c><00:03:42.420><c> be</c><00:03:42.450><c> quite</c><00:03:42.690><c> tricky</c><00:03:42.930><c> to</c><00:03:43.050><c> get</c>

00:03:43.190 --> 00:03:43.200 align:start position:0%
the logic can be quite tricky to get
 

00:03:43.200 --> 00:03:45.200 align:start position:0%
the logic can be quite tricky to get
right<00:03:43.440><c> but</c><00:03:43.770><c> actually</c><00:03:44.400><c> they're</c><00:03:44.790><c> pretty</c><00:03:44.820><c> simple</c>

00:03:45.200 --> 00:03:45.210 align:start position:0%
right but actually they're pretty simple
 

00:03:45.210 --> 00:03:47.630 align:start position:0%
right but actually they're pretty simple
and<00:03:46.200><c> of</c><00:03:46.290><c> course</c><00:03:46.530><c> Android</c><00:03:46.950><c> we</c><00:03:47.220><c> put</c><00:03:47.430><c> a</c><00:03:47.460><c> lot</c><00:03:47.550><c> of</c>

00:03:47.630 --> 00:03:47.640 align:start position:0%
and of course Android we put a lot of
 

00:03:47.640 --> 00:03:49.070 align:start position:0%
and of course Android we put a lot of
stuff<00:03:47.790><c> in</c><00:03:47.910><c> your</c><00:03:48.000><c> way</c><00:03:48.180><c> like</c><00:03:48.480><c> we</c><00:03:48.630><c> make</c><00:03:48.810><c> out</c><00:03:48.930><c> your</c>

00:03:49.070 --> 00:03:49.080 align:start position:0%
stuff in your way like we make out your
 

00:03:49.080 --> 00:03:51.290 align:start position:0%
stuff in your way like we make out your
live<00:03:49.290><c> harder</c><00:03:49.680><c> but</c><00:03:50.430><c> in</c><00:03:50.610><c> actually</c><00:03:50.970><c> your</c><00:03:51.150><c> apps</c>

00:03:51.290 --> 00:03:51.300 align:start position:0%
live harder but in actually your apps
 

00:03:51.300 --> 00:03:53.030 align:start position:0%
live harder but in actually your apps
are<00:03:51.420><c> actually</c><00:03:51.630><c> pretty</c><00:03:51.810><c> simple</c><00:03:52.050><c> from</c><00:03:52.230><c> a</c><00:03:52.380><c> logic</c>

00:03:53.030 --> 00:03:53.040 align:start position:0%
are actually pretty simple from a logic
 

00:03:53.040 --> 00:03:56.090 align:start position:0%
are actually pretty simple from a logic
point<00:03:53.250><c> of</c><00:03:53.340><c> view</c><00:03:54.080><c> so</c><00:03:55.080><c> WIPO</c><00:03:55.470><c> routines</c><00:03:55.770><c> well</c><00:03:55.980><c> how</c>

00:03:56.090 --> 00:03:56.100 align:start position:0%
point of view so WIPO routines well how
 

00:03:56.100 --> 00:03:58.010 align:start position:0%
point of view so WIPO routines well how
do<00:03:56.160><c> they</c><00:03:56.220><c> actually</c><00:03:56.400><c> fix</c><00:03:56.760><c> that</c><00:03:56.940><c> well</c><00:03:57.900><c> I</c><00:03:57.930><c> think</c>

00:03:58.010 --> 00:03:58.020 align:start position:0%
do they actually fix that well I think
 

00:03:58.020 --> 00:03:59.810 align:start position:0%
do they actually fix that well I think
they're<00:03:58.230><c> great</c><00:03:58.320><c> for</c><00:03:58.500><c> i/o</c><00:03:58.620><c> tasks</c><00:03:59.130><c> especially</c>

00:03:59.810 --> 00:03:59.820 align:start position:0%
they're great for i/o tasks especially
 

00:03:59.820 --> 00:04:02.270 align:start position:0%
they're great for i/o tasks especially
for<00:04:00.030><c> a</c><00:04:00.350><c> resource</c><00:04:01.350><c> constraint</c><00:04:01.710><c> system</c><00:04:02.040><c> like</c>

00:04:02.270 --> 00:04:02.280 align:start position:0%
for a resource constraint system like
 

00:04:02.280 --> 00:04:03.740 align:start position:0%
for a resource constraint system like
the<00:04:02.490><c> phones</c><00:04:02.760><c> and</c><00:04:03.060><c> tablets</c><00:04:03.360><c> you're</c><00:04:03.540><c> using</c>

00:04:03.740 --> 00:04:03.750 align:start position:0%
the phones and tablets you're using
 

00:04:03.750 --> 00:04:05.120 align:start position:0%
the phones and tablets you're using
today

00:04:05.120 --> 00:04:05.130 align:start position:0%
today
 

00:04:05.130 --> 00:04:07.250 align:start position:0%
today
now<00:04:05.610><c> you</c><00:04:05.670><c> can't</c><00:04:05.940><c> create</c><00:04:06.210><c> a</c><00:04:06.420><c> thread</c><00:04:06.690><c> for</c><00:04:07.020><c> every</c>

00:04:07.250 --> 00:04:07.260 align:start position:0%
now you can't create a thread for every
 

00:04:07.260 --> 00:04:09.260 align:start position:0%
now you can't create a thread for every
Network<00:04:07.530><c> request</c><00:04:07.830><c> you</c><00:04:07.920><c> ever</c><00:04:08.040><c> use</c><00:04:08.270><c> because</c>

00:04:09.260 --> 00:04:09.270 align:start position:0%
Network request you ever use because
 

00:04:09.270 --> 00:04:11.120 align:start position:0%
Network request you ever use because
Fred's<00:04:09.510><c> taking</c><00:04:10.290><c> the</c><00:04:10.380><c> space</c><00:04:10.740><c> of</c><00:04:10.920><c> about</c><00:04:11.070><c> a</c>

00:04:11.120 --> 00:04:11.130 align:start position:0%
Fred's taking the space of about a
 

00:04:11.130 --> 00:04:12.980 align:start position:0%
Fred's taking the space of about a
megabyte<00:04:11.580><c> to</c><00:04:11.790><c> 2</c><00:04:11.910><c> megabytes</c><00:04:12.270><c> of</c><00:04:12.360><c> RAM</c><00:04:12.600><c> every</c>

00:04:12.980 --> 00:04:12.990 align:start position:0%
megabyte to 2 megabytes of RAM every
 

00:04:12.990 --> 00:04:14.870 align:start position:0%
megabyte to 2 megabytes of RAM every
time<00:04:13.170><c> you</c><00:04:13.260><c> create</c><00:04:13.500><c> one</c><00:04:13.740><c> that's</c><00:04:14.310><c> why</c><00:04:14.520><c> Fred</c>

00:04:14.870 --> 00:04:14.880 align:start position:0%
time you create one that's why Fred
 

00:04:14.880 --> 00:04:18.110 align:start position:0%
time you create one that's why Fred
pools<00:04:15.120><c> and</c><00:04:15.510><c> actually</c><00:04:16.290><c> cache</c><00:04:16.530><c> Fred's</c><00:04:16.859><c> for</c><00:04:17.070><c> you</c>

00:04:18.110 --> 00:04:18.120 align:start position:0%
pools and actually cache Fred's for you
 

00:04:18.120 --> 00:04:20.210 align:start position:0%
pools and actually cache Fred's for you
now<00:04:18.630><c> carotenes</c><00:04:19.320><c> on</c><00:04:19.410><c> the</c><00:04:19.470><c> other</c><00:04:19.590><c> hand</c><00:04:19.739><c> taking</c>

00:04:20.210 --> 00:04:20.220 align:start position:0%
now carotenes on the other hand taking
 

00:04:20.220 --> 00:04:22.420 align:start position:0%
now carotenes on the other hand taking
the<00:04:20.310><c> sort</c><00:04:20.880><c> of</c><00:04:20.940><c> realm</c><00:04:21.150><c> of</c><00:04:21.299><c> tens</c><00:04:21.810><c> of</c><00:04:21.930><c> kilobytes</c>

00:04:22.420 --> 00:04:22.430 align:start position:0%
the sort of realm of tens of kilobytes
 

00:04:22.430 --> 00:04:24.740 align:start position:0%
the sort of realm of tens of kilobytes
in<00:04:23.430><c> turns</c><00:04:23.700><c> out</c><00:04:23.790><c> read</c><00:04:23.910><c> carotene</c><00:04:24.330><c> they</c><00:04:24.570><c> use</c>

00:04:24.740 --> 00:04:24.750 align:start position:0%
in turns out read carotene they use
 

00:04:24.750 --> 00:04:26.300 align:start position:0%
in turns out read carotene they use
Fred's<00:04:24.990><c> underneath</c><00:04:25.380><c> but</c><00:04:25.650><c> they</c><00:04:25.979><c> use</c><00:04:26.130><c> them</c><00:04:26.250><c> a</c>

00:04:26.300 --> 00:04:26.310 align:start position:0%
Fred's underneath but they use them a
 

00:04:26.310 --> 00:04:27.670 align:start position:0%
Fred's underneath but they use them a
much<00:04:26.430><c> more</c><00:04:26.460><c> optimal</c><00:04:26.850><c> way</c>

00:04:27.670 --> 00:04:27.680 align:start position:0%
much more optimal way
 

00:04:27.680 --> 00:04:30.290 align:start position:0%
much more optimal way
also<00:04:28.680><c> there</c><00:04:29.040><c> in</c><00:04:29.520><c> my</c><00:04:29.700><c> mind</c><00:04:29.880><c> anyway</c><00:04:30.090><c> they</c><00:04:30.180><c> have</c>

00:04:30.290 --> 00:04:30.300 align:start position:0%
also there in my mind anyway they have
 

00:04:30.300 --> 00:04:32.270 align:start position:0%
also there in my mind anyway they have
an<00:04:30.390><c> easier</c><00:04:30.720><c> development</c><00:04:31.230><c> model</c><00:04:31.470><c> it's</c><00:04:32.100><c> a</c><00:04:32.130><c> lot</c>

00:04:32.270 --> 00:04:32.280 align:start position:0%
an easier development model it's a lot
 

00:04:32.280 --> 00:04:34.520 align:start position:0%
an easier development model it's a lot
easier<00:04:32.610><c> for</c><00:04:32.670><c> developers</c><00:04:32.940><c> to</c><00:04:33.270><c> kind</c><00:04:34.230><c> of</c><00:04:34.260><c> come</c>

00:04:34.520 --> 00:04:34.530 align:start position:0%
easier for developers to kind of come
 

00:04:34.530 --> 00:04:38.660 align:start position:0%
easier for developers to kind of come
into<00:04:34.770><c> a</c><00:04:35.040><c> new</c><00:04:35.280><c> source</c><00:04:35.970><c> source</c><00:04:36.720><c> source</c><00:04:37.410><c> and</c><00:04:38.280><c> see</c>

00:04:38.660 --> 00:04:38.670 align:start position:0%
into a new source source source and see
 

00:04:38.670 --> 00:04:40.670 align:start position:0%
into a new source source source and see
an<00:04:39.360><c> imperative</c><00:04:39.870><c> line-by-line</c>

00:04:40.670 --> 00:04:40.680 align:start position:0%
an imperative line-by-line
 

00:04:40.680 --> 00:04:43.430 align:start position:0%
an imperative line-by-line
cocoa<00:04:41.610><c> routine</c><00:04:41.850><c> over</c><00:04:42.360><c> something</c><00:04:42.720><c> like</c><00:04:42.750><c> an</c><00:04:43.170><c> Rx</c>

00:04:43.430 --> 00:04:43.440 align:start position:0%
cocoa routine over something like an Rx
 

00:04:43.440 --> 00:04:45.350 align:start position:0%
cocoa routine over something like an Rx
Java<00:04:43.650><c> chain</c><00:04:44.190><c> like</c><00:04:44.730><c> to</c><00:04:44.820><c> have</c><00:04:44.940><c> to</c><00:04:45.030><c> understand</c>

00:04:45.350 --> 00:04:45.360 align:start position:0%
Java chain like to have to understand
 

00:04:45.360 --> 00:04:46.970 align:start position:0%
Java chain like to have to understand
what's<00:04:45.510><c> happening</c><00:04:45.810><c> there</c><00:04:45.930><c> as</c><00:04:46.020><c> a</c><00:04:46.050><c> in</c><00:04:46.620><c> my</c><00:04:46.830><c> mod</c>

00:04:46.970 --> 00:04:46.980 align:start position:0%
what's happening there as a in my mod
 

00:04:46.980 --> 00:04:48.800 align:start position:0%
what's happening there as a in my mod
anyway<00:04:47.220><c> easier</c><00:04:47.610><c> and</c><00:04:48.450><c> same</c><00:04:48.630><c> thing</c><00:04:48.660><c> for</c>

00:04:48.800 --> 00:04:48.810 align:start position:0%
anyway easier and same thing for
 

00:04:48.810 --> 00:04:51.080 align:start position:0%
anyway easier and same thing for
callbacks<00:04:49.080><c> like</c><00:04:49.800><c> everyone</c><00:04:50.790><c> knows</c><00:04:50.910><c> what</c>

00:04:51.080 --> 00:04:51.090 align:start position:0%
callbacks like everyone knows what
 

00:04:51.090 --> 00:04:52.940 align:start position:0%
callbacks like everyone knows what
callback<00:04:51.390><c> hell</c><00:04:51.540><c> and</c><00:04:51.720><c> I'm</c><00:04:51.810><c> to</c><00:04:51.990><c> go</c><00:04:52.500><c> line</c><00:04:52.770><c> by</c><00:04:52.800><c> line</c>

00:04:52.940 --> 00:04:52.950 align:start position:0%
callback hell and I'm to go line by line
 

00:04:52.950 --> 00:04:54.770 align:start position:0%
callback hell and I'm to go line by line
and<00:04:53.280><c> say</c><00:04:53.490><c> see</c><00:04:54.030><c> where</c><00:04:54.210><c> you've</c><00:04:54.300><c> been</c><00:04:54.420><c> called</c><00:04:54.660><c> and</c>

00:04:54.770 --> 00:04:54.780 align:start position:0%
and say see where you've been called and
 

00:04:54.780 --> 00:04:57.080 align:start position:0%
and say see where you've been called and
stuff<00:04:54.930><c> and</c><00:04:55.140><c> so</c><00:04:55.530><c> co-routines</c><00:04:56.220><c> help</c><00:04:56.550><c> hopefully</c>

00:04:57.080 --> 00:04:57.090 align:start position:0%
stuff and so co-routines help hopefully
 

00:04:57.090 --> 00:05:00.980 align:start position:0%
stuff and so co-routines help hopefully
anyway<00:04:57.240><c> fix</c><00:04:57.540><c> that</c><00:04:58.970><c> so</c><00:04:59.970><c> a</c><00:05:00.330><c> lot</c><00:05:00.600><c> of</c><00:05:00.690><c> this</c><00:05:00.780><c> talk</c>

00:05:00.980 --> 00:05:00.990 align:start position:0%
anyway fix that so a lot of this talk
 

00:05:00.990 --> 00:05:03.050 align:start position:0%
anyway fix that so a lot of this talk
was<00:05:01.350><c> written</c><00:05:01.800><c> in</c><00:05:01.950><c> mind</c><00:05:02.160><c> with</c><00:05:02.400><c> an</c><00:05:02.490><c> app</c><00:05:02.580><c> a</c><00:05:02.670><c> sample</c>

00:05:03.050 --> 00:05:03.060 align:start position:0%
was written in mind with an app a sample
 

00:05:03.060 --> 00:05:04.280 align:start position:0%
was written in mind with an app a sample
app<00:05:03.120><c> that</c><00:05:03.270><c> I've</c><00:05:03.360><c> been</c><00:05:03.480><c> writing</c><00:05:03.960><c> for</c><00:05:04.080><c> the</c><00:05:04.140><c> past</c>

00:05:04.280 --> 00:05:04.290 align:start position:0%
app that I've been writing for the past
 

00:05:04.290 --> 00:05:06.800 align:start position:0%
app that I've been writing for the past
twelve<00:05:04.500><c> months</c><00:05:04.560><c> or</c><00:05:04.800><c> so</c><00:05:04.890><c> good</c><00:05:05.040><c> TV</c><00:05:05.690><c> it</c><00:05:06.690><c> was</c>

00:05:06.800 --> 00:05:06.810 align:start position:0%
twelve months or so good TV it was
 

00:05:06.810 --> 00:05:09.050 align:start position:0%
twelve months or so good TV it was
originally<00:05:07.290><c> I</c><00:05:07.320><c> went</c><00:05:07.620><c> all-in</c><00:05:07.980><c> on</c><00:05:08.580><c> Eric's</c><00:05:08.880><c> job</c>

00:05:09.050 --> 00:05:09.060 align:start position:0%
originally I went all-in on Eric's job
 

00:05:09.060 --> 00:05:10.460 align:start position:0%
originally I went all-in on Eric's job
it<00:05:09.390><c> was</c><00:05:09.480><c> Eric's</c><00:05:09.720><c> Java</c><00:05:10.020><c> from</c><00:05:10.170><c> top</c><00:05:10.320><c> to</c><00:05:10.350><c> bottom</c>

00:05:10.460 --> 00:05:10.470 align:start position:0%
it was Eric's Java from top to bottom
 

00:05:10.470 --> 00:05:13.400 align:start position:0%
it was Eric's Java from top to bottom
and<00:05:10.860><c> I've</c><00:05:11.280><c> kind</c><00:05:11.490><c> of</c><00:05:11.610><c> slowly</c><00:05:12.060><c> brought</c><00:05:12.990><c> curtains</c>

00:05:13.400 --> 00:05:13.410 align:start position:0%
and I've kind of slowly brought curtains
 

00:05:13.410 --> 00:05:15.650 align:start position:0%
and I've kind of slowly brought curtains
into<00:05:13.560><c> it</c><00:05:13.800><c> it's</c><00:05:14.010><c> now</c><00:05:14.100><c> about</c><00:05:14.250><c> 50%</c><00:05:14.820><c> carotenes</c><00:05:15.210><c> 50%</c>

00:05:15.650 --> 00:05:15.660 align:start position:0%
into it it's now about 50% carotenes 50%
 

00:05:15.660 --> 00:05:17.630 align:start position:0%
into it it's now about 50% carotenes 50%
Eric's<00:05:15.900><c> Java</c><00:05:16.110><c> so</c><00:05:16.470><c> he</c><00:05:16.560><c> still</c><00:05:16.710><c> uses</c><00:05:16.890><c> both</c><00:05:17.070><c> and</c><00:05:17.550><c> I</c>

00:05:17.630 --> 00:05:17.640 align:start position:0%
Eric's Java so he still uses both and I
 

00:05:17.640 --> 00:05:19.310 align:start position:0%
Eric's Java so he still uses both and I
think<00:05:17.790><c> they</c><00:05:17.850><c> both</c><00:05:18.030><c> have</c><00:05:18.090><c> a</c><00:05:18.300><c> place</c><00:05:18.600><c> in</c><00:05:18.930><c> Android</c>

00:05:19.310 --> 00:05:19.320 align:start position:0%
think they both have a place in Android
 

00:05:19.320 --> 00:05:24.160 align:start position:0%
think they both have a place in Android
development<00:05:19.560><c> and</c><00:05:20.520><c> so</c><00:05:20.940><c> yeah</c><00:05:21.060><c> go</c><00:05:21.930><c> views</c><00:05:22.170><c> both</c>

00:05:24.160 --> 00:05:24.170 align:start position:0%
development and so yeah go views both
 

00:05:24.170 --> 00:05:26.960 align:start position:0%
development and so yeah go views both
now<00:05:25.170><c> as</c><00:05:25.440><c> Android</c><00:05:26.040><c> developers</c><00:05:26.430><c> we</c><00:05:26.640><c> have</c><00:05:26.820><c> to</c>

00:05:26.960 --> 00:05:26.970 align:start position:0%
now as Android developers we have to
 

00:05:26.970 --> 00:05:29.350 align:start position:0%
now as Android developers we have to
care<00:05:27.180><c> about</c><00:05:27.210><c> apk</c><00:05:27.840><c> size</c><00:05:27.870><c> and</c><00:05:28.380><c> Method</c><00:05:28.680><c> counts</c>

00:05:29.350 --> 00:05:29.360 align:start position:0%
care about apk size and Method counts
 

00:05:29.360 --> 00:05:32.330 align:start position:0%
care about apk size and Method counts
now<00:05:30.360><c> in</c><00:05:30.510><c> Kotlin</c><00:05:30.870><c> in</c><00:05:31.080><c> my</c><00:05:31.470><c> off</c><00:05:31.590><c> anyway</c><00:05:31.860><c> I'm</c><00:05:32.040><c> using</c>

00:05:32.330 --> 00:05:32.340 align:start position:0%
now in Kotlin in my off anyway I'm using
 

00:05:32.340 --> 00:05:35.030 align:start position:0%
now in Kotlin in my off anyway I'm using
free<00:05:33.000><c> libraries</c><00:05:33.390><c> from</c><00:05:33.660><c> the</c><00:05:33.750><c> Kotlin</c><00:05:34.140><c> Curtin's</c>

00:05:35.030 --> 00:05:35.040 align:start position:0%
free libraries from the Kotlin Curtin's
 

00:05:35.040 --> 00:05:37.790 align:start position:0%
free libraries from the Kotlin Curtin's
kind<00:05:35.640><c> of</c><00:05:35.700><c> tree</c><00:05:36.090><c> the</c><00:05:36.870><c> core</c><00:05:37.080><c> which</c><00:05:37.320><c> contains</c><00:05:37.710><c> the</c>

00:05:37.790 --> 00:05:37.800 align:start position:0%
kind of tree the core which contains the
 

00:05:37.800 --> 00:05:38.980 align:start position:0%
kind of tree the core which contains the
majority<00:05:37.920><c> of</c><00:05:38.280><c> what</c><00:05:38.460><c> you'll</c><00:05:38.580><c> actually</c><00:05:38.700><c> use</c>

00:05:38.980 --> 00:05:38.990 align:start position:0%
majority of what you'll actually use
 

00:05:38.990 --> 00:05:41.180 align:start position:0%
majority of what you'll actually use
Android<00:05:39.990><c> which</c><00:05:40.350><c> had</c><00:05:40.530><c> support</c><00:05:41.010><c> for</c><00:05:41.070><c> the</c>

00:05:41.180 --> 00:05:41.190 align:start position:0%
Android which had support for the
 

00:05:41.190 --> 00:05:42.680 align:start position:0%
Android which had support for the
Android<00:05:41.430><c> main</c><00:05:41.580><c> thread</c><00:05:41.850><c> amongst</c><00:05:42.300><c> other</c><00:05:42.450><c> small</c>

00:05:42.680 --> 00:05:42.690 align:start position:0%
Android main thread amongst other small
 

00:05:42.690 --> 00:05:44.840 align:start position:0%
Android main thread amongst other small
things<00:05:42.870><c> and</c><00:05:43.140><c> then</c><00:05:43.620><c> arcs</c><00:05:43.860><c> to</c><00:05:44.070><c> which</c><00:05:44.340><c> allows</c><00:05:44.580><c> you</c>

00:05:44.840 --> 00:05:44.850 align:start position:0%
things and then arcs to which allows you
 

00:05:44.850 --> 00:05:47.270 align:start position:0%
things and then arcs to which allows you
to<00:05:45.120><c> interact</c><00:05:45.600><c> with</c><00:05:45.810><c> arcs</c><00:05:46.140><c> Java</c><00:05:46.350><c> so</c><00:05:46.980><c> if</c><00:05:47.160><c> you're</c>

00:05:47.270 --> 00:05:47.280 align:start position:0%
to interact with arcs Java so if you're
 

00:05:47.280 --> 00:05:48.350 align:start position:0%
to interact with arcs Java so if you're
not<00:05:47.370><c> using</c><00:05:47.520><c> Irish</c><00:05:47.730><c> Java</c><00:05:47.910><c> you</c><00:05:48.060><c> won't</c><00:05:48.180><c> need</c><00:05:48.300><c> that</c>

00:05:48.350 --> 00:05:48.360 align:start position:0%
not using Irish Java you won't need that
 

00:05:48.360 --> 00:05:51.530 align:start position:0%
not using Irish Java you won't need that
one<00:05:48.630><c> it's</c><00:05:48.870><c> pretty</c><00:05:49.080><c> small</c><00:05:49.230><c> anyway</c><00:05:50.240><c> now</c><00:05:51.240><c> if</c><00:05:51.450><c> you</c>

00:05:51.530 --> 00:05:51.540 align:start position:0%
one it's pretty small anyway now if you
 

00:05:51.540 --> 00:05:52.190 align:start position:0%
one it's pretty small anyway now if you
actually<00:05:51.660><c> pull</c><00:05:51.990><c> down</c>

00:05:52.190 --> 00:05:52.200 align:start position:0%
actually pull down
 

00:05:52.200 --> 00:05:53.480 align:start position:0%
actually pull down
there's<00:05:52.500><c> jar</c><00:05:52.710><c> file</c><00:05:52.920><c> store</c><00:05:53.220><c> from</c><00:05:53.340><c> maven</c>

00:05:53.480 --> 00:05:53.490 align:start position:0%
there's jar file store from maven
 

00:05:53.490 --> 00:05:55.910 align:start position:0%
there's jar file store from maven
central<00:05:53.610><c> or</c><00:05:54.150><c> wherever</c><00:05:54.390><c> they</c><00:05:55.200><c> would</c><00:05:55.410><c> come</c><00:05:55.770><c> to</c>

00:05:55.910 --> 00:05:55.920 align:start position:0%
central or wherever they would come to
 

00:05:55.920 --> 00:05:57.950 align:start position:0%
central or wherever they would come to
about<00:05:56.100><c> 700</c><00:05:56.610><c> centi</c><00:05:56.820><c> four</c><00:05:56.940><c> kilobytes</c><00:05:57.270><c> so</c><00:05:57.510><c> that's</c>

00:05:57.950 --> 00:05:57.960 align:start position:0%
about 700 centi four kilobytes so that's
 

00:05:57.960 --> 00:05:59.540 align:start position:0%
about 700 centi four kilobytes so that's
quite<00:05:58.290><c> big</c><00:05:58.530><c> and</c><00:05:58.770><c> it</c><00:05:58.890><c> should</c><00:05:59.010><c> be</c><00:05:59.100><c> a</c><00:05:59.130><c> you</c><00:05:59.490><c> know</c>

00:05:59.540 --> 00:05:59.550 align:start position:0%
quite big and it should be a you know
 

00:05:59.550 --> 00:06:01.820 align:start position:0%
quite big and it should be a you know
alarm<00:05:59.970><c> bells</c><00:06:00.150><c> are</c><00:06:00.240><c> ringin</c><00:06:00.560><c> but</c><00:06:01.560><c> once</c><00:06:01.710><c> you</c>

00:06:01.820 --> 00:06:01.830 align:start position:0%
alarm bells are ringin but once you
 

00:06:01.830 --> 00:06:03.530 align:start position:0%
alarm bells are ringin but once you
actually<00:06:02.070><c> put</c><00:06:02.220><c> that</c><00:06:02.460><c> in</c><00:06:02.730><c> your</c><00:06:02.760><c> apk</c><00:06:03.240><c> it</c>

00:06:03.530 --> 00:06:03.540 align:start position:0%
actually put that in your apk it
 

00:06:03.540 --> 00:06:05.540 align:start position:0%
actually put that in your apk it
actually<00:06:03.810><c> shrinks</c><00:06:03.960><c> down</c><00:06:04.200><c> six-pack</c><00:06:04.710><c> ting</c><00:06:04.890><c> and</c>

00:06:05.540 --> 00:06:05.550 align:start position:0%
actually shrinks down six-pack ting and
 

00:06:05.550 --> 00:06:07.640 align:start position:0%
actually shrinks down six-pack ting and
it<00:06:05.640><c> comes</c><00:06:05.790><c> down</c><00:06:05.910><c> to</c><00:06:05.970><c> about</c><00:06:06.150><c> 500</c><00:06:06.660><c> kilobytes</c><00:06:06.930><c> but</c>

00:06:07.640 --> 00:06:07.650 align:start position:0%
it comes down to about 500 kilobytes but
 

00:06:07.650 --> 00:06:09.110 align:start position:0%
it comes down to about 500 kilobytes but
that<00:06:07.980><c> method</c><00:06:08.190><c> references</c><00:06:08.610><c> are</c><00:06:08.760><c> still</c><00:06:08.970><c> quite</c>

00:06:09.110 --> 00:06:09.120 align:start position:0%
that method references are still quite
 

00:06:09.120 --> 00:06:10.820 align:start position:0%
that method references are still quite
high<00:06:09.240><c> that's</c><00:06:09.540><c> like</c><00:06:09.750><c> 5</c><00:06:09.990><c> percent</c><00:06:10.230><c> if</c><00:06:10.320><c> you're</c><00:06:10.440><c> 64</c>

00:06:10.820 --> 00:06:10.830 align:start position:0%
high that's like 5 percent if you're 64
 

00:06:10.830 --> 00:06:15.320 align:start position:0%
high that's like 5 percent if you're 64
K<00:06:12.380><c> as</c><00:06:13.380><c> soon</c><00:06:13.530><c> as</c><00:06:13.590><c> you</c><00:06:13.650><c> turn</c><00:06:13.830><c> on</c><00:06:13.860><c> minify</c><00:06:14.400><c> and</c><00:06:15.180><c> now</c>

00:06:15.320 --> 00:06:15.330 align:start position:0%
K as soon as you turn on minify and now
 

00:06:15.330 --> 00:06:16.910 align:start position:0%
K as soon as you turn on minify and now
this<00:06:15.510><c> is</c><00:06:15.660><c> just</c><00:06:15.690><c> tree</c><00:06:15.990><c> shaking</c><00:06:16.200><c> so</c><00:06:16.590><c> that</c><00:06:16.740><c> no</c>

00:06:16.910 --> 00:06:16.920 align:start position:0%
this is just tree shaking so that no
 

00:06:16.920 --> 00:06:19.820 align:start position:0%
this is just tree shaking so that no
optimization<00:06:17.550><c> turned</c><00:06:18.120><c> on</c><00:06:18.210><c> here</c><00:06:18.390><c> or</c><00:06:19.260><c> ProGuard</c>

00:06:19.820 --> 00:06:19.830 align:start position:0%
optimization turned on here or ProGuard
 

00:06:19.830 --> 00:06:21.860 align:start position:0%
optimization turned on here or ProGuard
they<00:06:20.010><c> both</c><00:06:20.160><c> have</c><00:06:20.310><c> similar</c><00:06:20.490><c> results</c><00:06:20.970><c> you're</c>

00:06:21.860 --> 00:06:21.870 align:start position:0%
they both have similar results you're
 

00:06:21.870 --> 00:06:22.730 align:start position:0%
they both have similar results you're
looking<00:06:21.900><c> about</c><00:06:22.170><c> a</c><00:06:22.260><c> hundred</c><00:06:22.470><c> and</c><00:06:22.590><c> twelve</c>

00:06:22.730 --> 00:06:22.740 align:start position:0%
looking about a hundred and twelve
 

00:06:22.740 --> 00:06:25.310 align:start position:0%
looking about a hundred and twelve
thirteen<00:06:23.190><c> k</c><00:06:23.460><c> so</c><00:06:23.760><c> a</c><00:06:23.790><c> lot</c><00:06:24.150><c> less</c><00:06:24.360><c> and</c><00:06:24.630><c> again</c><00:06:25.200><c> the</c>

00:06:25.310 --> 00:06:25.320 align:start position:0%
thirteen k so a lot less and again the
 

00:06:25.320 --> 00:06:27.350 align:start position:0%
thirteen k so a lot less and again the
method<00:06:25.440><c> references</c><00:06:25.710><c> has</c><00:06:25.980><c> dropped</c><00:06:26.270><c> but</c><00:06:27.270><c> as</c>

00:06:27.350 --> 00:06:27.360 align:start position:0%
method references has dropped but as
 

00:06:27.360 --> 00:06:29.450 align:start position:0%
method references has dropped but as
soon<00:06:27.510><c> as</c><00:06:27.540><c> you</c><00:06:27.720><c> turn</c><00:06:28.080><c> on</c><00:06:28.140><c> optimization</c><00:06:28.800><c> and</c>

00:06:29.450 --> 00:06:29.460 align:start position:0%
soon as you turn on optimization and
 

00:06:29.460 --> 00:06:30.890 align:start position:0%
soon as you turn on optimization and
then<00:06:29.640><c> you</c><00:06:29.730><c> go</c><00:06:29.850><c> for</c><00:06:30.060><c> all</c><00:06:30.090><c> of</c><00:06:30.180><c> trying</c><00:06:30.570><c> to</c><00:06:30.630><c> fix</c><00:06:30.750><c> all</c>

00:06:30.890 --> 00:06:30.900 align:start position:0%
then you go for all of trying to fix all
 

00:06:30.900 --> 00:06:32.900 align:start position:0%
then you go for all of trying to fix all
the<00:06:30.960><c> ProGuard</c><00:06:31.230><c> rules</c><00:06:31.470><c> you're</c><00:06:32.400><c> coming</c><00:06:32.700><c> down</c><00:06:32.820><c> to</c>

00:06:32.900 --> 00:06:32.910 align:start position:0%
the ProGuard rules you're coming down to
 

00:06:32.910 --> 00:06:34.070 align:start position:0%
the ProGuard rules you're coming down to
that<00:06:33.030><c> magic</c><00:06:33.360><c> valley</c><00:06:33.540><c> which</c><00:06:33.750><c> is</c><00:06:33.780><c> less</c><00:06:33.990><c> than</c>

00:06:34.070 --> 00:06:34.080 align:start position:0%
that magic valley which is less than
 

00:06:34.080 --> 00:06:35.990 align:start position:0%
that magic valley which is less than
hundred<00:06:34.350><c> kilobytes</c><00:06:34.650><c> and</c><00:06:35.550><c> again</c><00:06:35.730><c> you're</c><00:06:35.880><c> met</c>

00:06:35.990 --> 00:06:36.000 align:start position:0%
hundred kilobytes and again you're met
 

00:06:36.000 --> 00:06:38.210 align:start position:0%
hundred kilobytes and again you're met
with<00:06:36.030><c> references</c><00:06:36.480><c> now</c><00:06:36.690><c> 854</c><00:06:37.680><c> like</c><00:06:37.920><c> it's</c><00:06:38.040><c> less</c>

00:06:38.210 --> 00:06:38.220 align:start position:0%
with references now 854 like it's less
 

00:06:38.220 --> 00:06:42.820 align:start position:0%
with references now 854 like it's less
than<00:06:38.310><c> 1%</c><00:06:38.490><c> 1%</c><00:06:39.300><c> of</c><00:06:39.600><c> your</c><00:06:39.720><c> reference</c>

00:06:42.820 --> 00:06:42.830 align:start position:0%
 
 

00:06:42.830 --> 00:06:44.200 align:start position:0%
 
now<00:06:43.280><c> one</c><00:06:43.430><c> thing</c><00:06:43.580><c> to</c><00:06:43.669><c> note</c><00:06:43.789><c> when</c><00:06:43.880><c> you're</c><00:06:44.030><c> is</c><00:06:44.120><c> in</c>

00:06:44.200 --> 00:06:44.210 align:start position:0%
now one thing to note when you're is in
 

00:06:44.210 --> 00:06:46.029 align:start position:0%
now one thing to note when you're is in
ProGuard<00:06:44.600><c> or</c><00:06:44.930><c> r8</c><00:06:45.350><c> is</c><00:06:45.380><c> that</c><00:06:45.560><c> you</c><00:06:45.650><c> need</c><00:06:45.770><c> to</c><00:06:45.860><c> use</c>

00:06:46.029 --> 00:06:46.039 align:start position:0%
ProGuard or r8 is that you need to use
 

00:06:46.039 --> 00:06:48.040 align:start position:0%
ProGuard or r8 is that you need to use
this<00:06:46.160><c> rule</c><00:06:46.430><c> it's</c><00:06:47.270><c> not</c><00:06:47.419><c> currently</c><00:06:47.690><c> bundled</c>

00:06:48.040 --> 00:06:48.050 align:start position:0%
this rule it's not currently bundled
 

00:06:48.050 --> 00:06:50.290 align:start position:0%
this rule it's not currently bundled
with<00:06:48.169><c> the</c><00:06:48.259><c> jars</c><00:06:48.889><c> but</c><00:06:49.250><c> hopefully</c><00:06:50.120><c> it'll</c><00:06:50.210><c> be</c>

00:06:50.290 --> 00:06:50.300 align:start position:0%
with the jars but hopefully it'll be
 

00:06:50.300 --> 00:06:52.450 align:start position:0%
with the jars but hopefully it'll be
added<00:06:50.419><c> soon</c><00:06:50.690><c> but</c><00:06:51.680><c> it's</c><00:06:51.800><c> a</c><00:06:51.889><c> pretty</c><00:06:52.130><c> simple</c><00:06:52.340><c> rule</c>

00:06:52.450 --> 00:06:52.460 align:start position:0%
added soon but it's a pretty simple rule
 

00:06:52.460 --> 00:06:59.020 align:start position:0%
added soon but it's a pretty simple rule
to<00:06:52.520><c> add</c><00:06:56.560><c> so</c><00:06:57.639><c> hopefully</c><00:06:58.639><c> by</c><00:06:58.759><c> now</c><00:06:58.880><c> you're</c>

00:06:59.020 --> 00:06:59.030 align:start position:0%
to add so hopefully by now you're
 

00:06:59.030 --> 00:07:00.430 align:start position:0%
to add so hopefully by now you're
thinking<00:06:59.360><c> about</c><00:06:59.419><c> how</c><00:06:59.780><c> you</c><00:07:00.259><c> might</c><00:07:00.289><c> use</c>

00:07:00.430 --> 00:07:00.440 align:start position:0%
thinking about how you might use
 

00:07:00.440 --> 00:07:02.200 align:start position:0%
thinking about how you might use
co-routines<00:07:01.069><c> in</c><00:07:01.220><c> your</c><00:07:01.340><c> app</c><00:07:01.490><c> so</c><00:07:01.849><c> let's</c><00:07:02.090><c> go</c>

00:07:02.200 --> 00:07:02.210 align:start position:0%
co-routines in your app so let's go
 

00:07:02.210 --> 00:07:02.950 align:start position:0%
co-routines in your app so let's go
ahead<00:07:02.270><c> and</c><00:07:02.389><c> talk</c><00:07:02.569><c> a</c><00:07:02.599><c> little</c><00:07:02.810><c> bit</c><00:07:02.930><c> about</c>

00:07:02.950 --> 00:07:02.960 align:start position:0%
ahead and talk a little bit about
 

00:07:02.960 --> 00:07:05.710 align:start position:0%
ahead and talk a little bit about
actually<00:07:03.410><c> writing</c><00:07:03.620><c> them</c><00:07:03.849><c> so</c><00:07:04.849><c> anything</c><00:07:05.330><c> that</c>

00:07:05.710 --> 00:07:05.720 align:start position:0%
actually writing them so anything that
 

00:07:05.720 --> 00:07:07.719 align:start position:0%
actually writing them so anything that
you<00:07:06.229><c> can</c><00:07:06.410><c> do</c><00:07:06.560><c> with</c><00:07:06.710><c> a</c><00:07:06.740><c> one</c><00:07:06.979><c> shot</c><00:07:07.130><c> callback</c><00:07:07.550><c> or</c>

00:07:07.719 --> 00:07:07.729 align:start position:0%
you can do with a one shot callback or
 

00:07:07.729 --> 00:07:08.980 align:start position:0%
you can do with a one shot callback or
future<00:07:08.060><c> you</c><00:07:08.210><c> can</c><00:07:08.330><c> do</c><00:07:08.419><c> with</c><00:07:08.539><c> a</c><00:07:08.569><c> suspend</c>

00:07:08.980 --> 00:07:08.990 align:start position:0%
future you can do with a suspend
 

00:07:08.990 --> 00:07:11.110 align:start position:0%
future you can do with a suspend
function<00:07:09.400><c> everything</c><00:07:10.400><c> with</c><00:07:10.520><c> co-routines</c><00:07:10.970><c> is</c>

00:07:11.110 --> 00:07:11.120 align:start position:0%
function everything with co-routines is
 

00:07:11.120 --> 00:07:12.540 align:start position:0%
function everything with co-routines is
kind<00:07:11.270><c> of</c><00:07:11.330><c> based</c><00:07:11.509><c> around</c><00:07:11.720><c> this</c><00:07:11.900><c> idea</c><00:07:12.080><c> of</c>

00:07:12.540 --> 00:07:12.550 align:start position:0%
kind of based around this idea of
 

00:07:12.550 --> 00:07:14.680 align:start position:0%
kind of based around this idea of
suspending<00:07:13.550><c> function</c><00:07:13.970><c> as</c><00:07:14.120><c> a</c><00:07:14.150><c> basis</c><00:07:14.539><c> for</c>

00:07:14.680 --> 00:07:14.690 align:start position:0%
suspending function as a basis for
 

00:07:14.690 --> 00:07:16.990 align:start position:0%
suspending function as a basis for
creating<00:07:14.870><c> api's</c><00:07:15.500><c> suspend</c><00:07:16.430><c> functions</c><00:07:16.820><c> can</c>

00:07:16.990 --> 00:07:17.000 align:start position:0%
creating api's suspend functions can
 

00:07:17.000 --> 00:07:18.040 align:start position:0%
creating api's suspend functions can
stop<00:07:17.210><c> and</c><00:07:17.389><c> yield</c><00:07:17.570><c> their</c><00:07:17.750><c> thread</c><00:07:17.930><c> without</c>

00:07:18.040 --> 00:07:18.050 align:start position:0%
stop and yield their thread without
 

00:07:18.050 --> 00:07:19.719 align:start position:0%
stop and yield their thread without
blocking<00:07:18.650><c> and</c><00:07:18.889><c> they</c><00:07:19.009><c> can</c><00:07:19.130><c> be</c><00:07:19.220><c> resumed</c><00:07:19.580><c> later</c>

00:07:19.719 --> 00:07:19.729 align:start position:0%
blocking and they can be resumed later
 

00:07:19.729 --> 00:07:22.089 align:start position:0%
blocking and they can be resumed later
like<00:07:20.060><c> a</c><00:07:20.090><c> callback</c><00:07:20.419><c> and</c><00:07:20.840><c> they</c><00:07:21.650><c> can</c><00:07:21.770><c> only</c><00:07:21.979><c> be</c>

00:07:22.089 --> 00:07:22.099 align:start position:0%
like a callback and they can only be
 

00:07:22.099 --> 00:07:24.010 align:start position:0%
like a callback and they can only be
called<00:07:22.370><c> from</c><00:07:22.550><c> another</c><00:07:22.849><c> suspend</c><00:07:23.300><c> function</c><00:07:23.750><c> so</c>

00:07:24.010 --> 00:07:24.020 align:start position:0%
called from another suspend function so
 

00:07:24.020 --> 00:07:25.240 align:start position:0%
called from another suspend function so
just<00:07:24.289><c> to</c><00:07:24.440><c> set</c><00:07:24.590><c> up</c><00:07:24.710><c> all</c><00:07:24.830><c> the</c><00:07:24.919><c> machinery</c>

00:07:25.240 --> 00:07:25.250 align:start position:0%
just to set up all the machinery
 

00:07:25.250 --> 00:07:27.610 align:start position:0%
just to set up all the machinery
involved<00:07:25.729><c> in</c><00:07:25.820><c> that</c><00:07:25.940><c> but</c><00:07:26.900><c> the</c><00:07:27.020><c> core</c><00:07:27.169><c> thing</c><00:07:27.440><c> is</c>

00:07:27.610 --> 00:07:27.620 align:start position:0%
involved in that but the core thing is
 

00:07:27.620 --> 00:07:28.960 align:start position:0%
involved in that but the core thing is
is<00:07:27.860><c> that</c><00:07:28.039><c> all</c><00:07:28.070><c> of</c><00:07:28.220><c> this</c><00:07:28.370><c> kind</c><00:07:28.550><c> of</c><00:07:28.610><c> fits</c><00:07:28.789><c> on</c><00:07:28.940><c> one</c>

00:07:28.960 --> 00:07:28.970 align:start position:0%
is that all of this kind of fits on one
 

00:07:28.970 --> 00:07:30.879 align:start position:0%
is that all of this kind of fits on one
slide<00:07:29.150><c> there's</c><00:07:29.780><c> less</c><00:07:29.960><c> to</c><00:07:30.110><c> remember</c><00:07:30.500><c> the</c><00:07:30.740><c> rest</c>

00:07:30.879 --> 00:07:30.889 align:start position:0%
slide there's less to remember the rest
 

00:07:30.889 --> 00:07:32.320 align:start position:0%
slide there's less to remember the rest
of<00:07:30.979><c> the</c><00:07:31.039><c> language</c><00:07:31.190><c> still</c><00:07:31.669><c> works</c><00:07:31.880><c> the</c><00:07:32.060><c> same</c><00:07:32.090><c> in</c>

00:07:32.320 --> 00:07:32.330 align:start position:0%
of the language still works the same in
 

00:07:32.330 --> 00:07:34.060 align:start position:0%
of the language still works the same in
the<00:07:32.570><c> presence</c><00:07:32.900><c> of</c><00:07:32.990><c> suspend</c><00:07:33.409><c> functions</c><00:07:33.830><c> and</c>

00:07:34.060 --> 00:07:34.070 align:start position:0%
the presence of suspend functions and
 

00:07:34.070 --> 00:07:35.649 align:start position:0%
the presence of suspend functions and
we'll<00:07:34.250><c> spend</c><00:07:34.460><c> the</c><00:07:34.550><c> rest</c><00:07:34.669><c> of</c><00:07:34.820><c> the</c><00:07:34.909><c> talk</c><00:07:35.270><c> talking</c>

00:07:35.649 --> 00:07:35.659 align:start position:0%
we'll spend the rest of the talk talking
 

00:07:35.659 --> 00:07:38.950 align:start position:0%
we'll spend the rest of the talk talking
about<00:07:35.840><c> that</c><00:07:36.940><c> so</c><00:07:37.940><c> here's</c><00:07:38.210><c> a</c><00:07:38.300><c> suspending</c><00:07:38.690><c> method</c>

00:07:38.950 --> 00:07:38.960 align:start position:0%
about that so here's a suspending method
 

00:07:38.960 --> 00:07:41.020 align:start position:0%
about that so here's a suspending method
from<00:07:39.020><c> chris's</c><00:07:39.380><c> app</c><00:07:39.530><c> actually</c><00:07:40.310><c> this</c><00:07:40.550><c> is</c><00:07:40.669><c> a</c><00:07:40.699><c> data</c>

00:07:41.020 --> 00:07:41.030 align:start position:0%
from chris's app actually this is a data
 

00:07:41.030 --> 00:07:43.390 align:start position:0%
from chris's app actually this is a data
repository<00:07:41.630><c> for</c><00:07:41.840><c> TV</c><00:07:42.169><c> shows</c><00:07:42.199><c> so</c><00:07:42.860><c> you</c><00:07:42.919><c> go</c><00:07:43.280><c> ahead</c>

00:07:43.390 --> 00:07:43.400 align:start position:0%
repository for TV shows so you go ahead
 

00:07:43.400 --> 00:07:44.830 align:start position:0%
repository for TV shows so you go ahead
and<00:07:43.490><c> you</c><00:07:43.639><c> call</c><00:07:43.819><c> this</c><00:07:43.940><c> update</c><00:07:44.270><c> show</c><00:07:44.479><c> function</c>

00:07:44.830 --> 00:07:44.840 align:start position:0%
and you call this update show function
 

00:07:44.840 --> 00:07:49.930 align:start position:0%
and you call this update show function
with<00:07:44.960><c> an</c><00:07:45.050><c> ID</c><00:07:45.400><c> we</c><00:07:46.400><c> get</c><00:07:47.000><c> some</c><00:07:47.180><c> shows</c><00:07:47.449><c> and</c><00:07:48.759><c> we</c><00:07:49.759><c> get</c>

00:07:49.930 --> 00:07:49.940 align:start position:0%
with an ID we get some shows and we get
 

00:07:49.940 --> 00:07:51.580 align:start position:0%
with an ID we get some shows and we get
a<00:07:49.970><c> little</c><00:07:50.419><c> bit</c><00:07:50.509><c> more</c><00:07:50.630><c> data</c><00:07:50.870><c> from</c><00:07:51.199><c> a</c><00:07:51.349><c> remote</c>

00:07:51.580 --> 00:07:51.590 align:start position:0%
a little bit more data from a remote
 

00:07:51.590 --> 00:07:54.370 align:start position:0%
a little bit more data from a remote
source<00:07:51.830><c> and</c><00:07:52.449><c> a</c><00:07:53.449><c> little</c><00:07:53.659><c> bit</c><00:07:53.750><c> more</c><00:07:53.870><c> data</c><00:07:54.080><c> from</c><00:07:54.229><c> a</c>

00:07:54.370 --> 00:07:54.380 align:start position:0%
source and a little bit more data from a
 

00:07:54.380 --> 00:07:55.200 align:start position:0%
source and a little bit more data from a
second<00:07:54.680><c> source</c>

00:07:55.200 --> 00:07:55.210 align:start position:0%
second source
 

00:07:55.210 --> 00:07:57.459 align:start position:0%
second source
finally<00:07:56.210><c> we</c><00:07:56.330><c> merge</c><00:07:56.509><c> all</c><00:07:56.719><c> that</c><00:07:56.840><c> together</c><00:07:57.020><c> and</c>

00:07:57.459 --> 00:07:57.469 align:start position:0%
finally we merge all that together and
 

00:07:57.469 --> 00:08:01.629 align:start position:0%
finally we merge all that together and
we<00:07:58.190><c> save</c><00:07:58.400><c> that</c><00:07:58.580><c> data</c><00:07:59.949><c> so</c><00:08:00.949><c> these</c><00:08:01.130><c> three</c><00:08:01.460><c> main</c>

00:08:01.629 --> 00:08:01.639 align:start position:0%
we save that data so these three main
 

00:08:01.639 --> 00:08:03.370 align:start position:0%
we save that data so these three main
tasks<00:08:02.210><c> where</c><00:08:02.630><c> we</c><00:08:02.719><c> spend</c><00:08:02.930><c> the</c><00:08:03.020><c> bulk</c><00:08:03.169><c> of</c><00:08:03.259><c> the</c>

00:08:03.370 --> 00:08:03.380 align:start position:0%
tasks where we spend the bulk of the
 

00:08:03.380 --> 00:08:05.320 align:start position:0%
tasks where we spend the bulk of the
time<00:08:03.590><c> these</c><00:08:03.800><c> are</c><00:08:03.860><c> done</c><00:08:04.159><c> sequentially</c><00:08:04.880><c> but</c>

00:08:05.320 --> 00:08:05.330 align:start position:0%
time these are done sequentially but
 

00:08:05.330 --> 00:08:06.909 align:start position:0%
time these are done sequentially but
none<00:08:05.599><c> of</c><00:08:05.630><c> these</c><00:08:05.750><c> tasks</c><00:08:06.199><c> have</c><00:08:06.320><c> a</c><00:08:06.380><c> dependency</c><00:08:06.889><c> on</c>

00:08:06.909 --> 00:08:06.919 align:start position:0%
none of these tasks have a dependency on
 

00:08:06.919 --> 00:08:08.529 align:start position:0%
none of these tasks have a dependency on
one<00:08:07.190><c> another</c><00:08:07.430><c> so</c><00:08:07.490><c> wouldn't</c><00:08:08.120><c> it</c><00:08:08.180><c> be</c><00:08:08.240><c> nice</c><00:08:08.360><c> if</c><00:08:08.389><c> we</c>

00:08:08.529 --> 00:08:08.539 align:start position:0%
one another so wouldn't it be nice if we
 

00:08:08.539 --> 00:08:11.860 align:start position:0%
one another so wouldn't it be nice if we
could<00:08:08.630><c> do</c><00:08:08.810><c> this</c><00:08:08.900><c> concurrently</c><00:08:09.969><c> so</c><00:08:10.969><c> with</c><00:08:11.599><c> the</c>

00:08:11.860 --> 00:08:11.870 align:start position:0%
could do this concurrently so with the
 

00:08:11.870 --> 00:08:14.320 align:start position:0%
could do this concurrently so with the
async<00:08:12.229><c> builder</c><00:08:12.620><c> we</c><00:08:13.099><c> can</c><00:08:13.280><c> do</c><00:08:13.460><c> this</c><00:08:13.639><c> so</c><00:08:14.210><c> we're</c>

00:08:14.320 --> 00:08:14.330 align:start position:0%
async builder we can do this so we're
 

00:08:14.330 --> 00:08:16.029 align:start position:0%
async builder we can do this so we're
gonna<00:08:14.419><c> start</c><00:08:14.659><c> from</c><00:08:14.780><c> the</c><00:08:14.900><c> very</c><00:08:14.930><c> top</c><00:08:15.349><c> here</c><00:08:15.590><c> we</c>

00:08:16.029 --> 00:08:16.039 align:start position:0%
gonna start from the very top here we
 

00:08:16.039 --> 00:08:17.770 align:start position:0%
gonna start from the very top here we
start<00:08:16.310><c> by</c><00:08:16.400><c> opening</c><00:08:16.430><c> a</c><00:08:16.789><c> co-routine</c><00:08:17.270><c> scope</c><00:08:17.599><c> and</c>

00:08:17.770 --> 00:08:17.780 align:start position:0%
start by opening a co-routine scope and
 

00:08:17.780 --> 00:08:19.330 align:start position:0%
start by opening a co-routine scope and
this<00:08:18.080><c> is</c><00:08:18.229><c> important</c><00:08:18.560><c> because</c><00:08:18.590><c> this</c><00:08:18.889><c> allows</c><00:08:19.130><c> us</c>

00:08:19.330 --> 00:08:19.340 align:start position:0%
this is important because this allows us
 

00:08:19.340 --> 00:08:21.100 align:start position:0%
this is important because this allows us
to<00:08:19.490><c> perform</c><00:08:19.820><c> this</c><00:08:19.940><c> parallel</c><00:08:20.389><c> decomposition</c>

00:08:21.100 --> 00:08:21.110 align:start position:0%
to perform this parallel decomposition
 

00:08:21.110 --> 00:08:23.890 align:start position:0%
to perform this parallel decomposition
using<00:08:21.590><c> the</c><00:08:21.680><c> async</c><00:08:22.009><c> builder</c><00:08:22.310><c> it</c><00:08:22.759><c> brings</c><00:08:23.539><c> a</c><00:08:23.659><c> cur</c>

00:08:23.890 --> 00:08:23.900 align:start position:0%
using the async builder it brings a cur
 

00:08:23.900 --> 00:08:25.689 align:start position:0%
using the async builder it brings a cur
routine<00:08:24.169><c> scope</c><00:08:24.500><c> receiver</c><00:08:24.949><c> into</c><00:08:25.340><c> scope</c><00:08:25.490><c> for</c>

00:08:25.689 --> 00:08:25.699 align:start position:0%
routine scope receiver into scope for
 

00:08:25.699 --> 00:08:29.230 align:start position:0%
routine scope receiver into scope for
this<00:08:25.789><c> lambda</c><00:08:26.000><c> block</c><00:08:26.300><c> that</c><00:08:26.449><c> we</c><00:08:26.539><c> have</c><00:08:27.880><c> so</c><00:08:28.880><c> first</c>

00:08:29.230 --> 00:08:29.240 align:start position:0%
this lambda block that we have so first
 

00:08:29.240 --> 00:08:31.779 align:start position:0%
this lambda block that we have so first
we<00:08:29.389><c> build</c><00:08:29.539><c> the</c><00:08:29.690><c> async</c><00:08:29.990><c> operation</c><00:08:30.500><c> and</c><00:08:30.789><c> the</c>

00:08:31.779 --> 00:08:31.789 align:start position:0%
we build the async operation and the
 

00:08:31.789 --> 00:08:34.930 align:start position:0%
we build the async operation and the
second<00:08:32.060><c> and</c><00:08:32.300><c> the</c><00:08:32.899><c> third</c><00:08:32.930><c> and</c><00:08:33.459><c> then</c><00:08:34.459><c> we</c><00:08:34.579><c> await</c>

00:08:34.930 --> 00:08:34.940 align:start position:0%
second and the third and then we await
 

00:08:34.940 --> 00:08:37.060 align:start position:0%
second and the third and then we await
the<00:08:34.969><c> result</c><00:08:35.419><c> of</c><00:08:35.539><c> each</c><00:08:35.719><c> one</c><00:08:35.930><c> in</c><00:08:36.079><c> turn</c><00:08:36.200><c> so</c><00:08:37.039><c> the</c>

00:08:37.060 --> 00:08:37.070 align:start position:0%
the result of each one in turn so the
 

00:08:37.070 --> 00:08:38.319 align:start position:0%
the result of each one in turn so the
nice<00:08:37.339><c> thing</c><00:08:37.520><c> is</c><00:08:37.550><c> here</c><00:08:37.849><c> is</c><00:08:37.909><c> that</c><00:08:38.089><c> we've</c>

00:08:38.319 --> 00:08:38.329 align:start position:0%
nice thing is here is that we've
 

00:08:38.329 --> 00:08:40.149 align:start position:0%
nice thing is here is that we've
launched<00:08:38.959><c> all</c><00:08:39.140><c> of</c><00:08:39.260><c> these</c><00:08:39.409><c> things</c><00:08:39.680><c> let</c><00:08:39.979><c> them</c>

00:08:40.149 --> 00:08:40.159 align:start position:0%
launched all of these things let them
 

00:08:40.159 --> 00:08:42.370 align:start position:0%
launched all of these things let them
run<00:08:40.370><c> kind</c><00:08:40.760><c> of</c><00:08:40.849><c> independently</c><00:08:41.599><c> and</c><00:08:41.899><c> then</c><00:08:42.289><c> we</c>

00:08:42.370 --> 00:08:42.380 align:start position:0%
run kind of independently and then we
 

00:08:42.380 --> 00:08:46.000 align:start position:0%
run kind of independently and then we
bring<00:08:42.589><c> them</c><00:08:42.740><c> back</c><00:08:42.800><c> together</c><00:08:43.099><c> again</c><00:08:43.750><c> so</c><00:08:45.010><c> since</c>

00:08:46.000 --> 00:08:46.010 align:start position:0%
bring them back together again so since
 

00:08:46.010 --> 00:08:47.620 align:start position:0%
bring them back together again so since
all<00:08:46.190><c> of</c><00:08:46.250><c> these</c><00:08:46.430><c> things</c><00:08:46.640><c> can</c><00:08:46.940><c> be</c><00:08:47.149><c> now</c><00:08:47.329><c> done</c><00:08:47.540><c> in</c>

00:08:47.620 --> 00:08:47.630 align:start position:0%
all of these things can be now done in
 

00:08:47.630 --> 00:08:49.449 align:start position:0%
all of these things can be now done in
parallel<00:08:47.870><c> things</c><00:08:48.440><c> should</c><00:08:48.680><c> complete</c><00:08:49.070><c> faster</c>

00:08:49.449 --> 00:08:49.459 align:start position:0%
parallel things should complete faster
 

00:08:49.459 --> 00:08:51.610 align:start position:0%
parallel things should complete faster
so<00:08:49.910><c> trying</c><00:08:50.209><c> to</c><00:08:50.270><c> do</c><00:08:50.420><c> this</c><00:08:50.540><c> with</c><00:08:50.810><c> raw</c><00:08:51.079><c> threads</c><00:08:51.440><c> by</c>

00:08:51.610 --> 00:08:51.620 align:start position:0%
so trying to do this with raw threads by
 

00:08:51.620 --> 00:08:53.490 align:start position:0%
so trying to do this with raw threads by
hand<00:08:51.949><c> would</c><00:08:52.250><c> be</c><00:08:52.310><c> a</c><00:08:52.490><c> lot</c><00:08:52.699><c> more</c><00:08:52.730><c> code</c><00:08:53.150><c> which</c>

00:08:53.490 --> 00:08:53.500 align:start position:0%
hand would be a lot more code which
 

00:08:53.500 --> 00:08:56.160 align:start position:0%
hand would be a lot more code which
need<00:08:53.710><c> to</c><00:08:53.770><c> maintain</c><00:08:53.920><c> along</c><00:08:54.370><c> the</c><00:08:54.490><c> way</c><00:08:54.960><c> so</c><00:08:55.960><c> the</c>

00:08:56.160 --> 00:08:56.170 align:start position:0%
need to maintain along the way so the
 

00:08:56.170 --> 00:08:58.230 align:start position:0%
need to maintain along the way so the
async<00:08:56.530><c> builder</c><00:08:56.890><c> is</c><00:08:57.040><c> for</c><00:08:57.580><c> when</c><00:08:57.700><c> we</c><00:08:57.820><c> want</c><00:08:57.910><c> to</c><00:08:58.090><c> run</c>

00:08:58.230 --> 00:08:58.240 align:start position:0%
async builder is for when we want to run
 

00:08:58.240 --> 00:08:59.880 align:start position:0%
async builder is for when we want to run
something<00:08:58.540><c> and</c><00:08:58.930><c> then</c><00:08:59.080><c> later</c><00:08:59.290><c> await</c><00:08:59.740><c> the</c>

00:08:59.880 --> 00:08:59.890 align:start position:0%
something and then later await the
 

00:08:59.890 --> 00:09:01.380 align:start position:0%
something and then later await the
result<00:09:00.250><c> after</c><00:09:00.430><c> kind</c><00:09:00.760><c> of</c><00:09:00.820><c> giving</c><00:09:01.060><c> it</c><00:09:01.120><c> a</c><00:09:01.210><c> chance</c>

00:09:01.380 --> 00:09:01.390 align:start position:0%
result after kind of giving it a chance
 

00:09:01.390 --> 00:09:02.640 align:start position:0%
result after kind of giving it a chance
to<00:09:01.510><c> finish</c><00:09:01.720><c> while</c><00:09:01.990><c> we're</c><00:09:02.140><c> doing</c><00:09:02.320><c> something</c>

00:09:02.640 --> 00:09:02.650 align:start position:0%
to finish while we're doing something
 

00:09:02.650 --> 00:09:05.070 align:start position:0%
to finish while we're doing something
else<00:09:02.770><c> it's</c><00:09:03.370><c> very</c><00:09:03.640><c> similar</c><00:09:03.910><c> to</c><00:09:04.300><c> C</c><00:09:04.600><c> sharp</c><00:09:04.630><c> or</c>

00:09:05.070 --> 00:09:05.080 align:start position:0%
else it's very similar to C sharp or
 

00:09:05.080 --> 00:09:08.370 align:start position:0%
else it's very similar to C sharp or
promises<00:09:05.560><c> in</c><00:09:05.680><c> JavaScript</c><00:09:07.110><c> so</c><00:09:08.110><c> what</c><00:09:08.290><c> about</c>

00:09:08.370 --> 00:09:08.380 align:start position:0%
promises in JavaScript so what about
 

00:09:08.380 --> 00:09:09.390 align:start position:0%
promises in JavaScript so what about
when<00:09:08.560><c> you</c><00:09:08.620><c> just</c><00:09:08.800><c> want</c><00:09:08.920><c> to</c><00:09:08.950><c> launch</c><00:09:09.100><c> something</c>

00:09:09.390 --> 00:09:09.400 align:start position:0%
when you just want to launch something
 

00:09:09.400 --> 00:09:10.830 align:start position:0%
when you just want to launch something
and<00:09:09.550><c> forget</c><00:09:09.850><c> about</c><00:09:09.880><c> it</c><00:09:10.060><c> though</c><00:09:10.300><c> well</c><00:09:10.540><c> there's</c>

00:09:10.830 --> 00:09:10.840 align:start position:0%
and forget about it though well there's
 

00:09:10.840 --> 00:09:12.420 align:start position:0%
and forget about it though well there's
something<00:09:11.200><c> for</c><00:09:11.440><c> that</c><00:09:11.530><c> too</c><00:09:11.710><c> it's</c><00:09:11.920><c> just</c><00:09:12.250><c> called</c>

00:09:12.420 --> 00:09:12.430 align:start position:0%
something for that too it's just called
 

00:09:12.430 --> 00:09:15.200 align:start position:0%
something for that too it's just called
launch<00:09:12.670><c> it</c><00:09:12.880><c> works</c><00:09:13.060><c> pretty</c><00:09:13.240><c> much</c><00:09:13.360><c> the</c><00:09:13.480><c> same</c><00:09:13.630><c> way</c>

00:09:15.200 --> 00:09:15.210 align:start position:0%
launch it works pretty much the same way
 

00:09:15.210 --> 00:09:18.540 align:start position:0%
launch it works pretty much the same way
so<00:09:16.210><c> in</c><00:09:16.480><c> this</c><00:09:16.600><c> case</c><00:09:16.840><c> it's</c><00:09:17.680><c> is</c><00:09:17.980><c> a</c><00:09:18.160><c> lot</c><00:09:18.430><c> more</c>

00:09:18.540 --> 00:09:18.550 align:start position:0%
so in this case it's is a lot more
 

00:09:18.550 --> 00:09:21.150 align:start position:0%
so in this case it's is a lot more
similar<00:09:18.970><c> to</c><00:09:19.000><c> executors</c><00:09:19.960><c> and</c><00:09:20.260><c> just</c><00:09:20.860><c> sort</c><00:09:21.130><c> of</c>

00:09:21.150 --> 00:09:21.160 align:start position:0%
similar to executors and just sort of
 

00:09:21.160 --> 00:09:22.680 align:start position:0%
similar to executors and just sort of
submitting<00:09:21.580><c> a</c><00:09:21.640><c> task</c><00:09:21.880><c> submitting</c><00:09:22.480><c> something</c>

00:09:22.680 --> 00:09:22.690 align:start position:0%
submitting a task submitting something
 

00:09:22.690 --> 00:09:24.480 align:start position:0%
submitting a task submitting something
to<00:09:22.990><c> an</c><00:09:23.110><c> Android</c><00:09:23.290><c> handler</c><00:09:23.740><c> for</c><00:09:23.920><c> example</c><00:09:24.340><c> when</c>

00:09:24.480 --> 00:09:24.490 align:start position:0%
to an Android handler for example when
 

00:09:24.490 --> 00:09:25.890 align:start position:0%
to an Android handler for example when
we<00:09:24.580><c> just</c><00:09:24.730><c> want</c><00:09:24.850><c> to</c><00:09:24.910><c> fire</c><00:09:25.090><c> and</c><00:09:25.300><c> forget</c><00:09:25.480><c> and</c><00:09:25.750><c> deal</c>

00:09:25.890 --> 00:09:25.900 align:start position:0%
we just want to fire and forget and deal
 

00:09:25.900 --> 00:09:28.800 align:start position:0%
we just want to fire and forget and deal
with<00:09:25.960><c> it</c><00:09:26.140><c> later</c><00:09:26.170><c> so</c><00:09:27.510><c> that's</c><00:09:28.510><c> a</c><00:09:28.570><c> little</c><00:09:28.690><c> bit</c>

00:09:28.800 --> 00:09:28.810 align:start position:0%
with it later so that's a little bit
 

00:09:28.810 --> 00:09:30.690 align:start position:0%
with it later so that's a little bit
about<00:09:28.960><c> the</c><00:09:29.080><c> basics</c><00:09:29.470><c> of</c><00:09:29.530><c> running</c><00:09:29.890><c> co-routines</c>

00:09:30.690 --> 00:09:30.700 align:start position:0%
about the basics of running co-routines
 

00:09:30.700 --> 00:09:32.610 align:start position:0%
about the basics of running co-routines
in<00:09:31.090><c> isolation</c><00:09:31.660><c> how</c><00:09:32.020><c> do</c><00:09:32.080><c> you</c><00:09:32.170><c> run</c><00:09:32.350><c> them</c><00:09:32.470><c> on</c>

00:09:32.610 --> 00:09:32.620 align:start position:0%
in isolation how do you run them on
 

00:09:32.620 --> 00:09:35.610 align:start position:0%
in isolation how do you run them on
Android<00:09:33.160><c> though</c><00:09:33.570><c> so</c><00:09:34.570><c> in</c><00:09:34.660><c> this</c><00:09:34.750><c> case</c><00:09:34.960><c> you</c><00:09:35.500><c> might</c>

00:09:35.610 --> 00:09:35.620 align:start position:0%
Android though so in this case you might
 

00:09:35.620 --> 00:09:37.470 align:start position:0%
Android though so in this case you might
have<00:09:35.680><c> an</c><00:09:36.220><c> arch</c><00:09:36.430><c> components</c><00:09:36.880><c> of</c><00:09:36.940><c> you</c><00:09:37.030><c> model</c><00:09:37.330><c> and</c>

00:09:37.470 --> 00:09:37.480 align:start position:0%
have an arch components of you model and
 

00:09:37.480 --> 00:09:38.850 align:start position:0%
have an arch components of you model and
wouldn't<00:09:37.720><c> it</c><00:09:37.780><c> be</c><00:09:37.840><c> nice</c><00:09:37.990><c> if</c><00:09:38.020><c> we</c><00:09:38.170><c> had</c><00:09:38.290><c> kind</c><00:09:38.710><c> of</c><00:09:38.770><c> an</c>

00:09:38.850 --> 00:09:38.860 align:start position:0%
wouldn't it be nice if we had kind of an
 

00:09:38.860 --> 00:09:40.590 align:start position:0%
wouldn't it be nice if we had kind of an
easy<00:09:39.070><c> way</c><00:09:39.310><c> to</c><00:09:39.370><c> put</c><00:09:40.030><c> all</c><00:09:40.090><c> this</c><00:09:40.270><c> stuff</c><00:09:40.450><c> together</c>

00:09:40.590 --> 00:09:40.600 align:start position:0%
easy way to put all this stuff together
 

00:09:40.600 --> 00:09:42.480 align:start position:0%
easy way to put all this stuff together
automatically<00:09:41.230><c> we</c><00:09:41.890><c> needed</c><00:09:42.130><c> to</c><00:09:42.190><c> be</c><00:09:42.280><c> able</c><00:09:42.370><c> to</c>

00:09:42.480 --> 00:09:42.490 align:start position:0%
automatically we needed to be able to
 

00:09:42.490 --> 00:09:44.760 align:start position:0%
automatically we needed to be able to
open<00:09:42.640><c> a</c><00:09:42.850><c> scope</c><00:09:43.120><c> so</c><00:09:43.570><c> where</c><00:09:44.290><c> do</c><00:09:44.350><c> you</c><00:09:44.440><c> get</c><00:09:44.560><c> one</c><00:09:44.740><c> of</c>

00:09:44.760 --> 00:09:44.770 align:start position:0%
open a scope so where do you get one of
 

00:09:44.770 --> 00:09:46.050 align:start position:0%
open a scope so where do you get one of
those<00:09:44.920><c> things</c><00:09:45.160><c> to</c><00:09:45.310><c> begin</c><00:09:45.520><c> with</c><00:09:45.670><c> that</c><00:09:45.850><c> you</c><00:09:45.940><c> can</c>

00:09:46.050 --> 00:09:46.060 align:start position:0%
those things to begin with that you can
 

00:09:46.060 --> 00:09:48.960 align:start position:0%
those things to begin with that you can
launch<00:09:46.210><c> things</c><00:09:46.480><c> into</c><00:09:46.920><c> well</c><00:09:47.920><c> in</c><00:09:48.100><c> this</c><00:09:48.190><c> case</c><00:09:48.400><c> our</c>

00:09:48.960 --> 00:09:48.970 align:start position:0%
launch things into well in this case our
 

00:09:48.970 --> 00:09:51.090 align:start position:0%
launch things into well in this case our
view<00:09:49.180><c> model</c><00:09:49.420><c> has</c><00:09:49.600><c> a</c><00:09:49.960><c> show</c><00:09:50.260><c> repository</c><00:09:50.890><c> which</c>

00:09:51.090 --> 00:09:51.100 align:start position:0%
view model has a show repository which
 

00:09:51.100 --> 00:09:52.680 align:start position:0%
view model has a show repository which
is<00:09:51.190><c> our</c><00:09:51.310><c> data</c><00:09:51.490><c> layer</c><00:09:51.700><c> and</c><00:09:52.030><c> we</c><00:09:52.240><c> have</c><00:09:52.360><c> a</c><00:09:52.390><c> view</c>

00:09:52.680 --> 00:09:52.690 align:start position:0%
is our data layer and we have a view
 

00:09:52.690 --> 00:09:54.420 align:start position:0%
is our data layer and we have a view
state<00:09:52.900><c> that</c><00:09:53.290><c> the</c><00:09:53.500><c> viewer</c><00:09:53.860><c> activity</c><00:09:54.340><c> or</c>

00:09:54.420 --> 00:09:54.430 align:start position:0%
state that the viewer activity or
 

00:09:54.430 --> 00:09:57.150 align:start position:0%
state that the viewer activity or
fragment<00:09:54.610><c> can</c><00:09:54.970><c> observe</c><00:09:55.350><c> we</c><00:09:56.350><c> can</c><00:09:56.500><c> refresh</c><00:09:56.860><c> on</c>

00:09:57.150 --> 00:09:57.160 align:start position:0%
fragment can observe we can refresh on
 

00:09:57.160 --> 00:09:59.670 align:start position:0%
fragment can observe we can refresh on
construction<00:09:57.640><c> and</c><00:09:58.000><c> when</c><00:09:58.960><c> we</c><00:09:59.080><c> actually</c><00:09:59.230><c> go</c><00:09:59.620><c> to</c>

00:09:59.670 --> 00:09:59.680 align:start position:0%
construction and when we actually go to
 

00:09:59.680 --> 00:10:01.860 align:start position:0%
construction and when we actually go to
refresh<00:10:00.100><c> we</c><00:10:00.310><c> launch</c><00:10:00.520><c> into</c><00:10:00.760><c> this</c><00:10:01.030><c> new</c><00:10:01.600><c> view</c>

00:10:01.860 --> 00:10:01.870 align:start position:0%
refresh we launch into this new view
 

00:10:01.870 --> 00:10:03.870 align:start position:0%
refresh we launch into this new view
model<00:10:02.170><c> scope</c><00:10:02.410><c> extension</c><00:10:02.950><c> property</c><00:10:03.339><c> this</c><00:10:03.730><c> is</c>

00:10:03.870 --> 00:10:03.880 align:start position:0%
model scope extension property this is
 

00:10:03.880 --> 00:10:05.310 align:start position:0%
model scope extension property this is
coming<00:10:04.089><c> very</c><00:10:04.240><c> soon</c><00:10:04.570><c> to</c><00:10:04.750><c> the</c><00:10:04.839><c> Android</c><00:10:05.140><c> X</c>

00:10:05.310 --> 00:10:05.320 align:start position:0%
coming very soon to the Android X
 

00:10:05.320 --> 00:10:07.230 align:start position:0%
coming very soon to the Android X
libraries<00:10:05.830><c> those</c><00:10:06.250><c> of</c><00:10:06.400><c> you</c><00:10:06.520><c> who</c><00:10:06.700><c> like</c><00:10:06.910><c> to</c><00:10:06.940><c> watch</c>

00:10:07.230 --> 00:10:07.240 align:start position:0%
libraries those of you who like to watch
 

00:10:07.240 --> 00:10:09.030 align:start position:0%
libraries those of you who like to watch
commits<00:10:07.720><c> in</c><00:10:07.870><c> a</c><00:10:08.020><c> OSP</c><00:10:08.410><c> might</c><00:10:08.620><c> have</c><00:10:08.740><c> seen</c><00:10:08.890><c> this</c>

00:10:09.030 --> 00:10:09.040 align:start position:0%
commits in a OSP might have seen this
 

00:10:09.040 --> 00:10:09.810 align:start position:0%
commits in a OSP might have seen this
going<00:10:09.310><c> already</c>

00:10:09.810 --> 00:10:09.820 align:start position:0%
going already
 

00:10:09.820 --> 00:10:12.150 align:start position:0%
going already
so<00:10:10.750><c> the</c><00:10:10.839><c> Refresh</c><00:10:11.170><c> function</c><00:10:11.560><c> launches</c><00:10:11.950><c> a</c><00:10:11.980><c> car</c>

00:10:12.150 --> 00:10:12.160 align:start position:0%
so the Refresh function launches a car
 

00:10:12.160 --> 00:10:13.800 align:start position:0%
so the Refresh function launches a car
routine<00:10:12.400><c> uses</c><00:10:12.670><c> the</c><00:10:12.790><c> launch</c><00:10:12.970><c> builder</c><00:10:13.390><c> which</c>

00:10:13.800 --> 00:10:13.810 align:start position:0%
routine uses the launch builder which
 

00:10:13.810 --> 00:10:15.120 align:start position:0%
routine uses the launch builder which
then<00:10:13.990><c> calls</c><00:10:14.170><c> the</c><00:10:14.230><c> update</c><00:10:14.589><c> function</c><00:10:14.770><c> on</c><00:10:15.040><c> the</c>

00:10:15.120 --> 00:10:15.130 align:start position:0%
then calls the update function on the
 

00:10:15.130 --> 00:10:17.130 align:start position:0%
then calls the update function on the
repository<00:10:15.730><c> and</c><00:10:15.940><c> our</c><00:10:16.360><c> co-routine</c><00:10:16.780><c> resumes</c>

00:10:17.130 --> 00:10:17.140 align:start position:0%
repository and our co-routine resumes
 

00:10:17.140 --> 00:10:19.020 align:start position:0%
repository and our co-routine resumes
back<00:10:17.410><c> on</c><00:10:17.620><c> the</c><00:10:17.740><c> main</c><00:10:17.920><c> thread</c><00:10:18.220><c> after</c><00:10:18.550><c> update</c>

00:10:19.020 --> 00:10:19.030 align:start position:0%
back on the main thread after update
 

00:10:19.030 --> 00:10:21.240 align:start position:0%
back on the main thread after update
show<00:10:19.240><c> returns</c><00:10:19.630><c> so</c><00:10:20.170><c> we</c><00:10:20.290><c> can</c><00:10:20.410><c> safely</c><00:10:20.620><c> manipulate</c>

00:10:21.240 --> 00:10:21.250 align:start position:0%
show returns so we can safely manipulate
 

00:10:21.250 --> 00:10:22.890 align:start position:0%
show returns so we can safely manipulate
our<00:10:21.430><c> view</c><00:10:21.670><c> hierarchy</c><00:10:22.120><c> with</c><00:10:22.270><c> the</c><00:10:22.390><c> results</c><00:10:22.750><c> just</c>

00:10:22.890 --> 00:10:22.900 align:start position:0%
our view hierarchy with the results just
 

00:10:22.900 --> 00:10:24.270 align:start position:0%
our view hierarchy with the results just
on<00:10:23.080><c> the</c><00:10:23.170><c> next</c><00:10:23.380><c> line</c><00:10:23.560><c> of</c><00:10:23.680><c> code</c><00:10:23.710><c> we</c><00:10:24.100><c> have</c><00:10:24.190><c> this</c>

00:10:24.270 --> 00:10:24.280 align:start position:0%
on the next line of code we have this
 

00:10:24.280 --> 00:10:26.310 align:start position:0%
on the next line of code we have this
nice<00:10:24.490><c> clean</c><00:10:24.820><c> sequential</c><00:10:25.510><c> ordering</c><00:10:26.230><c> of</c>

00:10:26.310 --> 00:10:26.320 align:start position:0%
nice clean sequential ordering of
 

00:10:26.320 --> 00:10:29.820 align:start position:0%
nice clean sequential ordering of
operations<00:10:27.300><c> so</c><00:10:28.350><c> those</c><00:10:29.350><c> of</c><00:10:29.380><c> you</c><00:10:29.560><c> who</c><00:10:29.680><c> want</c><00:10:29.800><c> to</c>

00:10:29.820 --> 00:10:29.830 align:start position:0%
operations so those of you who want to
 

00:10:29.830 --> 00:10:31.230 align:start position:0%
operations so those of you who want to
go<00:10:29.920><c> check</c><00:10:30.160><c> out</c><00:10:30.280><c> this</c><00:10:30.610><c> thing</c><00:10:30.820><c> that's</c><00:10:31.089><c> upcoming</c>

00:10:31.230 --> 00:10:31.240 align:start position:0%
go check out this thing that's upcoming
 

00:10:31.240 --> 00:10:33.990 align:start position:0%
go check out this thing that's upcoming
you<00:10:31.660><c> can</c><00:10:31.810><c> go</c><00:10:32.020><c> to</c><00:10:32.080><c> this</c><00:10:32.650><c> link</c><00:10:32.920><c> take</c><00:10:33.730><c> a</c><00:10:33.760><c> look</c><00:10:33.910><c> at</c>

00:10:33.990 --> 00:10:34.000 align:start position:0%
you can go to this link take a look at
 

00:10:34.000 --> 00:10:36.000 align:start position:0%
you can go to this link take a look at
the<00:10:34.060><c> change</c><00:10:34.270><c> so</c><00:10:34.510><c> far</c><00:10:34.750><c> in</c><00:10:35.080><c> advance</c><00:10:35.560><c> of</c><00:10:35.890><c> the</c>

00:10:36.000 --> 00:10:36.010 align:start position:0%
the change so far in advance of the
 

00:10:36.010 --> 00:10:37.380 align:start position:0%
the change so far in advance of the
actual<00:10:36.370><c> release</c><00:10:36.640><c> this</c><00:10:36.850><c> is</c><00:10:36.970><c> coming</c><00:10:37.180><c> in</c><00:10:37.270><c> an</c>

00:10:37.380 --> 00:10:37.390 align:start position:0%
actual release this is coming in an
 

00:10:37.390 --> 00:10:40.260 align:start position:0%
actual release this is coming in an
upcoming<00:10:37.510><c> release</c><00:10:37.990><c> of</c><00:10:38.080><c> our</c><00:10:38.170><c> KTX</c><00:10:38.650><c> libraries</c><00:10:39.270><c> so</c>

00:10:40.260 --> 00:10:40.270 align:start position:0%
upcoming release of our KTX libraries so
 

00:10:40.270 --> 00:10:42.150 align:start position:0%
upcoming release of our KTX libraries so
let's<00:10:40.930><c> go</c><00:10:41.020><c> ahead</c><00:10:41.080><c> and</c><00:10:41.260><c> demystify</c><00:10:41.770><c> how</c><00:10:41.800><c> some</c><00:10:42.130><c> of</c>

00:10:42.150 --> 00:10:42.160 align:start position:0%
let's go ahead and demystify how some of
 

00:10:42.160 --> 00:10:43.710 align:start position:0%
let's go ahead and demystify how some of
this<00:10:42.280><c> works</c><00:10:42.339><c> a</c><00:10:42.640><c> little</c><00:10:42.730><c> bit</c><00:10:42.940><c> but</c><00:10:43.180><c> before</c><00:10:43.330><c> we</c>

00:10:43.710 --> 00:10:43.720 align:start position:0%
this works a little bit but before we
 

00:10:43.720 --> 00:10:45.750 align:start position:0%
this works a little bit but before we
can<00:10:43.870><c> go</c><00:10:44.320><c> to</c><00:10:44.380><c> too</c><00:10:44.770><c> deep</c><00:10:44.950><c> we</c><00:10:45.130><c> need</c><00:10:45.250><c> to</c><00:10:45.370><c> start</c>

00:10:45.750 --> 00:10:45.760 align:start position:0%
can go to too deep we need to start
 

00:10:45.760 --> 00:10:46.590 align:start position:0%
can go to too deep we need to start
talking<00:10:46.060><c> about</c><00:10:46.120><c> some</c><00:10:46.360><c> of</c><00:10:46.390><c> the</c><00:10:46.480><c> other</c>

00:10:46.590 --> 00:10:46.600 align:start position:0%
talking about some of the other
 

00:10:46.600 --> 00:10:47.820 align:start position:0%
talking about some of the other
primitives<00:10:47.050><c> that</c><00:10:47.110><c> are</c><00:10:47.230><c> work</c><00:10:47.470><c> under</c><00:10:47.710><c> the</c><00:10:47.800><c> hood</c>

00:10:47.820 --> 00:10:47.830 align:start position:0%
primitives that are work under the hood
 

00:10:47.830 --> 00:10:50.700 align:start position:0%
primitives that are work under the hood
here<00:10:48.720><c> ok</c><00:10:49.720><c> great</c><00:10:49.930><c> so</c><00:10:50.170><c> we're</c><00:10:50.320><c> gonna</c><00:10:50.410><c> talk</c><00:10:50.530><c> about</c>

00:10:50.700 --> 00:10:50.710 align:start position:0%
here ok great so we're gonna talk about
 

00:10:50.710 --> 00:10:54.270 align:start position:0%
here ok great so we're gonna talk about
jobs<00:10:51.010><c> a</c><00:10:51.160><c> little</c><00:10:51.339><c> bit</c><00:10:51.460><c> so</c><00:10:52.180><c> what</c><00:10:52.300><c> is</c><00:10:52.390><c> it</c><00:10:52.480><c> job</c><00:10:53.280><c> so</c>

00:10:54.270 --> 00:10:54.280 align:start position:0%
jobs a little bit so what is it job so
 

00:10:54.280 --> 00:10:55.440 align:start position:0%
jobs a little bit so what is it job so
here<00:10:54.490><c> when</c><00:10:54.760><c> you</c><00:10:54.820><c> actually</c><00:10:54.910><c> look</c><00:10:55.120><c> at</c><00:10:55.180><c> this</c><00:10:55.240><c> code</c>

00:10:55.440 --> 00:10:55.450 align:start position:0%
here when you actually look at this code
 

00:10:55.450 --> 00:10:57.829 align:start position:0%
here when you actually look at this code
snippet<00:10:55.600><c> when</c><00:10:56.320><c> we</c><00:10:56.440><c> just</c><00:10:56.589><c> look</c><00:10:56.740><c> out</c><00:10:56.830><c> from</c><00:10:57.070><c> Adam</c>

00:10:57.829 --> 00:10:57.839 align:start position:0%
snippet when we just look out from Adam
 

00:10:57.839 --> 00:10:59.820 align:start position:0%
snippet when we just look out from Adam
you're<00:10:58.839><c> actually</c><00:10:59.110><c> using</c><00:10:59.230><c> the</c><00:10:59.410><c> launch</c><00:10:59.589><c> method</c>

00:10:59.820 --> 00:10:59.830 align:start position:0%
you're actually using the launch method
 

00:10:59.830 --> 00:11:01.980 align:start position:0%
you're actually using the launch method
now<00:11:00.400><c> when</c><00:11:00.610><c> you</c><00:11:00.700><c> actually</c><00:11:00.790><c> run</c><00:11:01.660><c> that</c><00:11:01.810><c> launch</c>

00:11:01.980 --> 00:11:01.990 align:start position:0%
now when you actually run that launch
 

00:11:01.990 --> 00:11:04.560 align:start position:0%
now when you actually run that launch
method<00:11:02.230><c> it</c><00:11:02.589><c> returns</c><00:11:03.040><c> what</c><00:11:03.250><c> we</c><00:11:03.370><c> call</c><00:11:03.520><c> a</c><00:11:03.670><c> job</c><00:11:03.880><c> now</c>

00:11:04.560 --> 00:11:04.570 align:start position:0%
method it returns what we call a job now
 

00:11:04.570 --> 00:11:06.780 align:start position:0%
method it returns what we call a job now
job<00:11:04.930><c> is</c><00:11:05.170><c> allows</c><00:11:05.589><c> us</c><00:11:05.800><c> to</c><00:11:05.890><c> reference</c><00:11:06.280><c> keep</c><00:11:06.760><c> a</c>

00:11:06.780 --> 00:11:06.790 align:start position:0%
job is allows us to reference keep a
 

00:11:06.790 --> 00:11:07.330 align:start position:0%
job is allows us to reference keep a
reference

00:11:07.330 --> 00:11:07.340 align:start position:0%
reference
 

00:11:07.340 --> 00:11:09.250 align:start position:0%
reference
I'm<00:11:07.430><c> going</c><00:11:07.640><c> piece</c><00:11:07.790><c> of</c><00:11:07.910><c> work</c><00:11:08.090><c> and</c><00:11:09.080><c> it</c><00:11:09.140><c> has</c>

00:11:09.250 --> 00:11:09.260 align:start position:0%
I'm going piece of work and it has
 

00:11:09.260 --> 00:11:10.570 align:start position:0%
I'm going piece of work and it has
really<00:11:09.470><c> one</c><00:11:09.680><c> method</c><00:11:10.010><c> on</c><00:11:10.100><c> it</c><00:11:10.190><c> and</c><00:11:10.340><c> it's</c><00:11:10.460><c> called</c>

00:11:10.570 --> 00:11:10.580 align:start position:0%
really one method on it and it's called
 

00:11:10.580 --> 00:11:13.420 align:start position:0%
really one method on it and it's called
cancel<00:11:11.200><c> now</c><00:11:12.200><c> obviously</c><00:11:12.530><c> in</c><00:11:12.890><c> this</c><00:11:13.040><c> example</c><00:11:13.310><c> we</c>

00:11:13.420 --> 00:11:13.430 align:start position:0%
cancel now obviously in this example we
 

00:11:13.430 --> 00:11:14.650 align:start position:0%
cancel now obviously in this example we
wouldn't<00:11:13.640><c> just</c><00:11:13.760><c> call</c><00:11:13.880><c> cancel</c><00:11:14.300><c> straightaway</c>

00:11:14.650 --> 00:11:14.660 align:start position:0%
wouldn't just call cancel straightaway
 

00:11:14.660 --> 00:11:15.730 align:start position:0%
wouldn't just call cancel straightaway
after<00:11:14.870><c> we've</c><00:11:14.960><c> launched</c><00:11:15.230><c> something</c><00:11:15.500><c> that</c>

00:11:15.730 --> 00:11:15.740 align:start position:0%
after we've launched something that
 

00:11:15.740 --> 00:11:18.670 align:start position:0%
after we've launched something that
would<00:11:15.860><c> be</c><00:11:15.950><c> ridiculous</c><00:11:16.640><c> but</c><00:11:17.450><c> what</c><00:11:18.440><c> it</c><00:11:18.530><c> does</c>

00:11:18.670 --> 00:11:18.680 align:start position:0%
would be ridiculous but what it does
 

00:11:18.680 --> 00:11:20.590 align:start position:0%
would be ridiculous but what it does
allow<00:11:18.860><c> us</c><00:11:18.980><c> to</c><00:11:19.070><c> do</c><00:11:19.250><c> is</c><00:11:19.490><c> handle</c><00:11:20.060><c> something</c><00:11:20.300><c> like</c>

00:11:20.590 --> 00:11:20.600 align:start position:0%
allow us to do is handle something like
 

00:11:20.600 --> 00:11:22.690 align:start position:0%
allow us to do is handle something like
double<00:11:21.110><c> refreshes</c><00:11:21.560><c> like</c><00:11:21.980><c> if</c><00:11:22.430><c> you</c><00:11:22.550><c> have</c>

00:11:22.690 --> 00:11:22.700 align:start position:0%
double refreshes like if you have
 

00:11:22.700 --> 00:11:23.860 align:start position:0%
double refreshes like if you have
something<00:11:22.940><c> like</c><00:11:23.000><c> forward</c><00:11:23.300><c> pull</c><00:11:23.660><c> to</c><00:11:23.750><c> refresh</c>

00:11:23.860 --> 00:11:23.870 align:start position:0%
something like forward pull to refresh
 

00:11:23.870 --> 00:11:26.110 align:start position:0%
something like forward pull to refresh
in<00:11:24.170><c> your</c><00:11:24.290><c> app</c><00:11:24.500><c> and</c><00:11:25.070><c> an</c><00:11:25.340><c> automated</c><00:11:25.580><c> refresh</c><00:11:26.000><c> you</c>

00:11:26.110 --> 00:11:26.120 align:start position:0%
in your app and an automated refresh you
 

00:11:26.120 --> 00:11:27.010 align:start position:0%
in your app and an automated refresh you
don't<00:11:26.270><c> look</c><00:11:26.360><c> both</c><00:11:26.510><c> stuff</c><00:11:26.690><c> in</c><00:11:26.780><c> at</c><00:11:26.870><c> the</c><00:11:26.930><c> same</c>

00:11:27.010 --> 00:11:27.020 align:start position:0%
don't look both stuff in at the same
 

00:11:27.020 --> 00:11:29.110 align:start position:0%
don't look both stuff in at the same
time<00:11:27.290><c> and</c><00:11:27.560><c> then</c><00:11:27.680><c> you</c><00:11:27.740><c> have</c><00:11:27.890><c> two</c><00:11:28.490><c> things</c><00:11:28.850><c> happen</c>

00:11:29.110 --> 00:11:29.120 align:start position:0%
time and then you have two things happen
 

00:11:29.120 --> 00:11:31.360 align:start position:0%
time and then you have two things happen
at<00:11:29.210><c> the</c><00:11:29.270><c> same</c><00:11:29.330><c> time</c><00:11:29.770><c> so</c><00:11:30.770><c> here</c><00:11:30.950><c> this</c><00:11:31.160><c> code</c>

00:11:31.360 --> 00:11:31.370 align:start position:0%
at the same time so here this code
 

00:11:31.370 --> 00:11:32.770 align:start position:0%
at the same time so here this code
snippet<00:11:31.460><c> you</c><00:11:31.730><c> can</c><00:11:31.940><c> keep</c><00:11:32.120><c> a</c><00:11:32.210><c> reference</c><00:11:32.570><c> to</c><00:11:32.660><c> the</c>

00:11:32.770 --> 00:11:32.780 align:start position:0%
snippet you can keep a reference to the
 

00:11:32.780 --> 00:11:35.050 align:start position:0%
snippet you can keep a reference to the
one<00:11:33.290><c> that's</c><00:11:33.530><c> currently</c><00:11:33.620><c> running</c><00:11:34.010><c> and</c><00:11:34.340><c> if</c><00:11:34.940><c> it</c>

00:11:35.050 --> 00:11:35.060 align:start position:0%
one that's currently running and if it
 

00:11:35.060 --> 00:11:36.550 align:start position:0%
one that's currently running and if it
happens<00:11:35.300><c> again</c><00:11:35.390><c> like</c><00:11:35.870><c> a</c><00:11:35.900><c> refresh</c><00:11:36.200><c> is</c><00:11:36.320><c> called</c>

00:11:36.550 --> 00:11:36.560 align:start position:0%
happens again like a refresh is called
 

00:11:36.560 --> 00:11:38.530 align:start position:0%
happens again like a refresh is called
and<00:11:36.860><c> you</c><00:11:36.920><c> can</c><00:11:37.040><c> cancel</c><00:11:37.220><c> the</c><00:11:37.460><c> first</c><00:11:37.580><c> one</c><00:11:37.850><c> and</c><00:11:38.030><c> so</c>

00:11:38.530 --> 00:11:38.540 align:start position:0%
and you can cancel the first one and so
 

00:11:38.540 --> 00:11:40.090 align:start position:0%
and you can cancel the first one and so
that's<00:11:38.840><c> the</c><00:11:39.020><c> kind</c><00:11:39.200><c> of</c><00:11:39.260><c> app</c><00:11:39.410><c> job</c><00:11:39.620><c> kind</c><00:11:39.860><c> of</c><00:11:39.920><c> works</c>

00:11:40.090 --> 00:11:40.100 align:start position:0%
that's the kind of app job kind of works
 

00:11:40.100 --> 00:11:42.460 align:start position:0%
that's the kind of app job kind of works
it's<00:11:40.670><c> a</c><00:11:40.730><c> very</c><00:11:40.880><c> simple</c><00:11:41.090><c> object</c><00:11:41.480><c> but</c><00:11:42.200><c> it</c><00:11:42.290><c> allows</c>

00:11:42.460 --> 00:11:42.470 align:start position:0%
it's a very simple object but it allows
 

00:11:42.470 --> 00:11:43.810 align:start position:0%
it's a very simple object but it allows
you<00:11:42.770><c> to</c><00:11:42.980><c> keep</c><00:11:43.100><c> a</c><00:11:43.160><c> reference</c><00:11:43.460><c> of</c><00:11:43.550><c> the</c><00:11:43.640><c> ongoing</c>

00:11:43.810 --> 00:11:43.820 align:start position:0%
you to keep a reference of the ongoing
 

00:11:43.820 --> 00:11:48.310 align:start position:0%
you to keep a reference of the ongoing
piece<00:11:44.120><c> of</c><00:11:44.210><c> work</c><00:11:46.510><c> so</c><00:11:47.510><c> you</c><00:11:47.600><c> may</c><00:11:47.720><c> have</c><00:11:47.840><c> seen</c><00:11:48.050><c> that</c>

00:11:48.310 --> 00:11:48.320 align:start position:0%
piece of work so you may have seen that
 

00:11:48.320 --> 00:11:50.260 align:start position:0%
piece of work so you may have seen that
viewmodel<00:11:48.920><c> scope</c><00:11:49.250><c> thing</c><00:11:49.490><c> and</c><00:11:49.820><c> wondered</c><00:11:50.150><c> what</c>

00:11:50.260 --> 00:11:50.270 align:start position:0%
viewmodel scope thing and wondered what
 

00:11:50.270 --> 00:11:52.810 align:start position:0%
viewmodel scope thing and wondered what
is<00:11:50.480><c> Adam</c><00:11:51.050><c> explained</c><00:11:51.350><c> it</c><00:11:51.470><c> earlier</c><00:11:51.560><c> and</c><00:11:51.950><c> you</c><00:11:52.670><c> can</c>

00:11:52.810 --> 00:11:52.820 align:start position:0%
is Adam explained it earlier and you can
 

00:11:52.820 --> 00:11:55.630 align:start position:0%
is Adam explained it earlier and you can
have<00:11:53.030><c> a</c><00:11:53.060><c> scope</c><00:11:53.450><c> and</c><00:11:53.720><c> it</c><00:11:54.290><c> provides</c><00:11:55.190><c> you</c><00:11:55.490><c> with</c>

00:11:55.630 --> 00:11:55.640 align:start position:0%
have a scope and it provides you with
 

00:11:55.640 --> 00:11:57.940 align:start position:0%
have a scope and it provides you with
all<00:11:55.820><c> the</c><00:11:55.910><c> context</c><00:11:56.270><c> you</c><00:11:56.360><c> need</c><00:11:56.540><c> to</c><00:11:56.600><c> run</c><00:11:57.470><c> so</c><00:11:57.920><c> a</c>

00:11:57.940 --> 00:11:57.950 align:start position:0%
all the context you need to run so a
 

00:11:57.950 --> 00:12:00.520 align:start position:0%
all the context you need to run so a
launch<00:11:58.190><c> or</c><00:11:58.370><c> an</c><00:11:58.430><c> async</c><00:11:58.750><c> so</c><00:11:59.750><c> take</c><00:12:00.170><c> a</c><00:12:00.200><c> look</c><00:12:00.320><c> at</c><00:12:00.440><c> how</c>

00:12:00.520 --> 00:12:00.530 align:start position:0%
launch or an async so take a look at how
 

00:12:00.530 --> 00:12:03.130 align:start position:0%
launch or an async so take a look at how
they<00:12:00.680><c> actually</c><00:12:00.890><c> work</c><00:12:01.010><c> underneath</c><00:12:02.140><c> so</c>

00:12:03.130 --> 00:12:03.140 align:start position:0%
they actually work underneath so
 

00:12:03.140 --> 00:12:04.540 align:start position:0%
they actually work underneath so
co-routine<00:12:03.620><c> scope</c><00:12:03.860><c> is</c><00:12:04.100><c> an</c><00:12:04.190><c> interface</c><00:12:04.520><c> that</c>

00:12:04.540 --> 00:12:04.550 align:start position:0%
co-routine scope is an interface that
 

00:12:04.550 --> 00:12:07.780 align:start position:0%
co-routine scope is an interface that
allows<00:12:05.000><c> objects</c><00:12:05.750><c> to</c><00:12:05.870><c> provide</c><00:12:06.230><c> a</c><00:12:06.530><c> scope</c><00:12:07.010><c> for</c>

00:12:07.780 --> 00:12:07.790 align:start position:0%
allows objects to provide a scope for
 

00:12:07.790 --> 00:12:11.140 align:start position:0%
allows objects to provide a scope for
carotenes<00:12:08.720><c> think</c><00:12:09.560><c> things</c><00:12:09.950><c> like</c><00:12:10.160><c> things</c><00:12:10.790><c> with</c>

00:12:11.140 --> 00:12:11.150 align:start position:0%
carotenes think things like things with
 

00:12:11.150 --> 00:12:13.720 align:start position:0%
carotenes think things like things with
a<00:12:11.180><c> lifecycle</c><00:12:11.600><c> so</c><00:12:12.200><c> fragments</c><00:12:12.800><c> activities</c><00:12:13.280><c> view</c>

00:12:13.720 --> 00:12:13.730 align:start position:0%
a lifecycle so fragments activities view
 

00:12:13.730 --> 00:12:15.430 align:start position:0%
a lifecycle so fragments activities view
model<00:12:13.970><c> even</c><00:12:14.240><c> and</c><00:12:14.450><c> they</c><00:12:14.990><c> can</c><00:12:15.140><c> revise</c><00:12:15.380><c> a</c>

00:12:15.430 --> 00:12:15.440 align:start position:0%
model even and they can revise a
 

00:12:15.440 --> 00:12:17.320 align:start position:0%
model even and they can revise a
lifecycle<00:12:15.950><c> for</c><00:12:16.280><c> the</c><00:12:16.340><c> curtain</c><00:12:16.700><c> itself</c><00:12:17.060><c> and</c>

00:12:17.320 --> 00:12:17.330 align:start position:0%
lifecycle for the curtain itself and
 

00:12:17.330 --> 00:12:21.070 align:start position:0%
lifecycle for the curtain itself and
start<00:12:17.840><c> and</c><00:12:17.960><c> stop</c><00:12:18.140><c> it</c><00:12:18.260><c> as</c><00:12:18.380><c> it</c><00:12:18.500><c> needs</c><00:12:19.300><c> a</c><00:12:20.300><c> sink</c><00:12:20.900><c> and</c>

00:12:21.070 --> 00:12:21.080 align:start position:0%
start and stop it as it needs a sink and
 

00:12:21.080 --> 00:12:23.140 align:start position:0%
start and stop it as it needs a sink and
launch<00:12:21.380><c> used</c><00:12:21.890><c> to</c><00:12:22.070><c> be</c><00:12:22.190><c> sort</c><00:12:22.370><c> of</c><00:12:22.460><c> global</c><00:12:22.820><c> methods</c>

00:12:23.140 --> 00:12:23.150 align:start position:0%
launch used to be sort of global methods
 

00:12:23.150 --> 00:12:26.020 align:start position:0%
launch used to be sort of global methods
and<00:12:23.840><c> now</c><00:12:24.020><c> a</c><00:12:24.050><c> recent</c><00:12:24.530><c> refactor</c><00:12:25.100><c> brought</c><00:12:25.880><c> them</c>

00:12:26.020 --> 00:12:26.030 align:start position:0%
and now a recent refactor brought them
 

00:12:26.030 --> 00:12:29.760 align:start position:0%
and now a recent refactor brought them
as<00:12:26.290><c> instant</c><00:12:27.290><c> methods</c><00:12:27.560><c> on</c><00:12:27.680><c> the</c><00:12:28.160><c> carotene</c><00:12:29.030><c> scope</c>

00:12:29.760 --> 00:12:29.770 align:start position:0%
as instant methods on the carotene scope
 

00:12:29.770 --> 00:12:32.440 align:start position:0%
as instant methods on the carotene scope
what<00:12:30.770><c> it</c><00:12:30.860><c> means</c><00:12:31.070><c> is</c><00:12:31.220><c> then</c><00:12:31.550><c> mentally</c><00:12:31.910><c> anyway</c><00:12:32.270><c> is</c>

00:12:32.440 --> 00:12:32.450 align:start position:0%
what it means is then mentally anyway is
 

00:12:32.450 --> 00:12:34.000 align:start position:0%
what it means is then mentally anyway is
that<00:12:32.480><c> instead</c><00:12:32.840><c> of</c><00:12:32.900><c> just</c><00:12:33.140><c> launching</c><00:12:33.800><c> something</c>

00:12:34.000 --> 00:12:34.010 align:start position:0%
that instead of just launching something
 

00:12:34.010 --> 00:12:37.600 align:start position:0%
that instead of just launching something
you're<00:12:34.580><c> launching</c><00:12:34.790><c> a</c><00:12:35.470><c> carotene</c><00:12:36.470><c> on</c><00:12:36.650><c> X</c><00:12:37.130><c> so</c><00:12:37.370><c> I'm</c>

00:12:37.600 --> 00:12:37.610 align:start position:0%
you're launching a carotene on X so I'm
 

00:12:37.610 --> 00:12:39.280 align:start position:0%
you're launching a carotene on X so I'm
launching<00:12:37.820><c> a</c><00:12:38.000><c> curry</c><00:12:38.180><c> teen</c><00:12:38.390><c> on</c><00:12:38.510><c> the</c><00:12:38.840><c> activity</c>

00:12:39.280 --> 00:12:39.290 align:start position:0%
launching a curry teen on the activity
 

00:12:39.290 --> 00:12:41.260 align:start position:0%
launching a curry teen on the activity
it<00:12:40.100><c> just</c><00:12:40.250><c> changed</c><00:12:40.430><c> it</c><00:12:40.550><c> mentally</c><00:12:40.850><c> in</c><00:12:40.910><c> your</c><00:12:41.030><c> head</c>

00:12:41.260 --> 00:12:41.270 align:start position:0%
it just changed it mentally in your head
 

00:12:41.270 --> 00:12:43.570 align:start position:0%
it just changed it mentally in your head
in<00:12:41.450><c> that</c><00:12:41.990><c> it's</c><00:12:42.260><c> tied</c><00:12:42.830><c> to</c><00:12:42.860><c> the</c><00:12:43.040><c> life</c><00:12:43.220><c> cycle</c><00:12:43.520><c> of</c>

00:12:43.570 --> 00:12:43.580 align:start position:0%
in that it's tied to the life cycle of
 

00:12:43.580 --> 00:12:45.370 align:start position:0%
in that it's tied to the life cycle of
something<00:12:43.880><c> else</c><00:12:44.030><c> right</c><00:12:44.780><c> if</c><00:12:44.930><c> you're</c><00:12:45.050><c> used</c><00:12:45.260><c> to</c>

00:12:45.370 --> 00:12:45.380 align:start position:0%
something else right if you're used to
 

00:12:45.380 --> 00:12:48.070 align:start position:0%
something else right if you're used to
working<00:12:45.560><c> with</c><00:12:45.800><c> the</c><00:12:46.250><c> lifecycle</c><00:12:46.970><c> owner</c><00:12:47.270><c> in</c><00:12:47.660><c> arch</c>

00:12:48.070 --> 00:12:48.080 align:start position:0%
working with the lifecycle owner in arch
 

00:12:48.080 --> 00:12:49.660 align:start position:0%
working with the lifecycle owner in arch
components<00:12:48.590><c> so</c><00:12:48.710><c> far</c><00:12:48.920><c> you</c><00:12:49.100><c> know</c><00:12:49.190><c> the</c><00:12:49.280><c> lifecycle</c>

00:12:49.660 --> 00:12:49.670 align:start position:0%
components so far you know the lifecycle
 

00:12:49.670 --> 00:12:51.970 align:start position:0%
components so far you know the lifecycle
owner<00:12:50.000><c> has</c><00:12:50.570><c> a</c><00:12:50.600><c> lifecycle</c><00:12:51.320><c> that</c><00:12:51.530><c> you</c><00:12:51.680><c> can</c><00:12:51.830><c> then</c>

00:12:51.970 --> 00:12:51.980 align:start position:0%
owner has a lifecycle that you can then
 

00:12:51.980 --> 00:12:53.950 align:start position:0%
owner has a lifecycle that you can then
observe<00:12:52.460><c> and</c><00:12:52.700><c> attach</c><00:12:52.910><c> things</c><00:12:53.120><c> to</c><00:12:53.270><c> similarly</c><00:12:53.810><c> a</c>

00:12:53.950 --> 00:12:53.960 align:start position:0%
observe and attach things to similarly a
 

00:12:53.960 --> 00:12:55.630 align:start position:0%
observe and attach things to similarly a
co-routine<00:12:54.470><c> scope</c><00:12:54.770><c> has</c><00:12:55.040><c> a</c><00:12:55.070><c> co-routine</c>

00:12:55.630 --> 00:12:55.640 align:start position:0%
co-routine scope has a co-routine
 

00:12:55.640 --> 00:12:57.430 align:start position:0%
co-routine scope has a co-routine
context<00:12:56.270><c> that</c><00:12:56.450><c> carries</c><00:12:56.750><c> along</c><00:12:56.990><c> everything</c>

00:12:57.430 --> 00:12:57.440 align:start position:0%
context that carries along everything
 

00:12:57.440 --> 00:12:58.630 align:start position:0%
context that carries along everything
necessary<00:12:57.620><c> to</c><00:12:57.980><c> know</c><00:12:58.190><c> how</c><00:12:58.220><c> to</c><00:12:58.430><c> launch</c>

00:12:58.630 --> 00:12:58.640 align:start position:0%
necessary to know how to launch
 

00:12:58.640 --> 00:13:00.430 align:start position:0%
necessary to know how to launch
co-routine<00:12:59.180><c> some</c><00:12:59.990><c> of</c><00:13:00.050><c> the</c><00:13:00.110><c> stuff</c><00:13:00.260><c> we're</c><00:13:00.380><c> gonna</c>

00:13:00.430 --> 00:13:00.440 align:start position:0%
co-routine some of the stuff we're gonna
 

00:13:00.440 --> 00:13:02.260 align:start position:0%
co-routine some of the stuff we're gonna
talk<00:13:00.680><c> about</c><00:13:00.710><c> a</c><00:13:00.890><c> bit</c>

00:13:02.260 --> 00:13:02.270 align:start position:0%
talk about a bit
 

00:13:02.270 --> 00:13:04.960 align:start position:0%
talk about a bit
and<00:13:02.500><c> similarly</c><00:13:03.500><c> correcting</c><00:13:04.310><c> scopes</c><00:13:04.550><c> provide</c>

00:13:04.960 --> 00:13:04.970 align:start position:0%
and similarly correcting scopes provide
 

00:13:04.970 --> 00:13:06.460 align:start position:0%
and similarly correcting scopes provide
a<00:13:05.000><c> default</c><00:13:05.210><c> context</c><00:13:05.780><c> so</c><00:13:05.990><c> you</c><00:13:06.020><c> can</c><00:13:06.230><c> provide</c><00:13:06.410><c> a</c>

00:13:06.460 --> 00:13:06.470 align:start position:0%
a default context so you can provide a
 

00:13:06.470 --> 00:13:08.170 align:start position:0%
a default context so you can provide a
default<00:13:06.770><c> context</c><00:13:07.400><c> for</c><00:13:07.490><c> all</c><00:13:07.550><c> the</c><00:13:07.760><c> curtains</c>

00:13:08.170 --> 00:13:08.180 align:start position:0%
default context for all the curtains
 

00:13:08.180 --> 00:13:10.060 align:start position:0%
default context for all the curtains
that<00:13:08.240><c> are</c><00:13:08.360><c> overrun</c><00:13:08.630><c> on</c><00:13:08.870><c> it</c><00:13:09.020><c> so</c><00:13:09.620><c> I</c><00:13:09.650><c> think</c><00:13:09.710><c> things</c>

00:13:10.060 --> 00:13:10.070 align:start position:0%
that are overrun on it so I think things
 

00:13:10.070 --> 00:13:11.860 align:start position:0%
that are overrun on it so I think things
like<00:13:10.250><c> what</c><00:13:10.490><c> kind</c><00:13:10.700><c> of</c><00:13:10.760><c> fred</c><00:13:10.970><c> paul</c><00:13:11.210><c> dispatcher</c>

00:13:11.860 --> 00:13:11.870 align:start position:0%
like what kind of fred paul dispatcher
 

00:13:11.870 --> 00:13:14.800 align:start position:0%
like what kind of fred paul dispatcher
it<00:13:12.050><c> runs</c><00:13:12.230><c> on</c><00:13:12.440><c> the</c><00:13:13.130><c> job</c><00:13:13.430><c> the</c><00:13:13.940><c> parent</c><00:13:14.420><c> jobs</c><00:13:14.630><c> that</c>

00:13:14.800 --> 00:13:14.810 align:start position:0%
it runs on the job the parent jobs that
 

00:13:14.810 --> 00:13:15.940 align:start position:0%
it runs on the job the parent jobs that
will<00:13:14.900><c> actually</c><00:13:14.990><c> to</c><00:13:15.170><c> cancel</c><00:13:15.410><c> it</c><00:13:15.500><c> later</c><00:13:15.650><c> and</c>

00:13:15.940 --> 00:13:15.950 align:start position:0%
will actually to cancel it later and
 

00:13:15.950 --> 00:13:17.230 align:start position:0%
will actually to cancel it later and
other<00:13:16.340><c> things</c><00:13:16.580><c> which</c><00:13:16.730><c> you</c><00:13:16.850><c> can</c><00:13:16.970><c> add</c><00:13:17.060><c> to</c><00:13:17.210><c> it</c>

00:13:17.230 --> 00:13:17.240 align:start position:0%
other things which you can add to it
 

00:13:17.240 --> 00:13:20.300 align:start position:0%
other things which you can add to it
it's<00:13:17.720><c> basically</c><00:13:17.840><c> a</c><00:13:18.080><c> map</c><00:13:18.290><c> the</c><00:13:18.410><c> context</c>

00:13:20.300 --> 00:13:20.310 align:start position:0%
it's basically a map the context
 

00:13:20.310 --> 00:13:24.410 align:start position:0%
it's basically a map the context
and<00:13:20.910><c> it's</c><00:13:21.240><c> good</c><00:13:22.939><c> that's</c><00:13:23.939><c> a</c><00:13:24.089><c> good</c><00:13:24.120><c> day</c><00:13:24.360><c> for</c>

00:13:24.410 --> 00:13:24.420 align:start position:0%
and it's good that's a good day for
 

00:13:24.420 --> 00:13:27.889 align:start position:0%
and it's good that's a good day for
slide<00:13:25.279><c> back</c><00:13:26.279><c> okay</c><00:13:26.730><c> cool</c><00:13:26.910><c> so</c><00:13:27.300><c> let's</c><00:13:27.720><c> take</c><00:13:27.870><c> a</c>

00:13:27.889 --> 00:13:27.899 align:start position:0%
slide back okay cool so let's take a
 

00:13:27.899 --> 00:13:30.079 align:start position:0%
slide back okay cool so let's take a
look<00:13:28.110><c> at</c><00:13:28.199><c> another</c><00:13:28.379><c> example</c><00:13:28.740><c> this</c><00:13:29.670><c> time</c><00:13:29.879><c> we're</c>

00:13:30.079 --> 00:13:30.089 align:start position:0%
look at another example this time we're
 

00:13:30.089 --> 00:13:31.610 align:start position:0%
look at another example this time we're
not<00:13:30.120><c> going</c><00:13:30.300><c> to</c><00:13:30.360><c> use</c><00:13:30.420><c> view</c><00:13:30.870><c> model</c><00:13:31.050><c> scope</c><00:13:31.319><c> the</c>

00:13:31.610 --> 00:13:31.620 align:start position:0%
not going to use view model scope the
 

00:13:31.620 --> 00:13:33.170 align:start position:0%
not going to use view model scope the
automated<00:13:32.100><c> thing</c><00:13:32.249><c> we've</c><00:13:32.490><c> added</c><00:13:32.579><c> to</c><00:13:32.819><c> Android</c><00:13:33.029><c> X</c>

00:13:33.170 --> 00:13:33.180 align:start position:0%
automated thing we've added to Android X
 

00:13:33.180 --> 00:13:36.050 align:start position:0%
automated thing we've added to Android X
we're<00:13:33.329><c> going</c><00:13:33.360><c> to</c><00:13:33.509><c> write</c><00:13:33.629><c> out</c><00:13:33.810><c> ourselves</c><00:13:35.060><c> so</c>

00:13:36.050 --> 00:13:36.060 align:start position:0%
we're going to write out ourselves so
 

00:13:36.060 --> 00:13:37.309 align:start position:0%
we're going to write out ourselves so
here<00:13:36.269><c> you</c><00:13:36.329><c> can</c><00:13:36.420><c> see</c><00:13:36.600><c> that</c><00:13:36.720><c> we</c><00:13:36.809><c> create</c><00:13:37.019><c> a</c><00:13:37.050><c> job</c>

00:13:37.309 --> 00:13:37.319 align:start position:0%
here you can see that we create a job
 

00:13:37.319 --> 00:13:39.170 align:start position:0%
here you can see that we create a job
and<00:13:37.829><c> now</c><00:13:37.920><c> it's</c><00:13:38.069><c> just</c><00:13:38.129><c> a</c><00:13:38.249><c> simple</c><00:13:38.579><c> instantiation</c>

00:13:39.170 --> 00:13:39.180 align:start position:0%
and now it's just a simple instantiation
 

00:13:39.180 --> 00:13:40.429 align:start position:0%
and now it's just a simple instantiation
we're<00:13:39.420><c> just</c><00:13:39.540><c> gonna</c><00:13:39.629><c> keep</c><00:13:39.779><c> a</c><00:13:39.870><c> reference</c><00:13:40.019><c> to</c><00:13:40.290><c> it</c>

00:13:40.429 --> 00:13:40.439 align:start position:0%
we're just gonna keep a reference to it
 

00:13:40.439 --> 00:13:41.900 align:start position:0%
we're just gonna keep a reference to it
and<00:13:41.220><c> then</c><00:13:41.339><c> we're</c><00:13:41.430><c> going</c><00:13:41.519><c> to</c><00:13:41.579><c> keep</c><00:13:41.730><c> that</c>

00:13:41.900 --> 00:13:41.910 align:start position:0%
and then we're going to keep that
 

00:13:41.910 --> 00:13:44.749 align:start position:0%
and then we're going to keep that
contact<00:13:42.120><c> create</c><00:13:42.779><c> a</c><00:13:42.959><c> carotene</c><00:13:43.709><c> scope</c><00:13:44.009><c> using</c><00:13:44.430><c> a</c>

00:13:44.749 --> 00:13:44.759 align:start position:0%
contact create a carotene scope using a
 

00:13:44.759 --> 00:13:46.610 align:start position:0%
contact create a carotene scope using a
job<00:13:45.029><c> and</c><00:13:46.019><c> that</c><00:13:46.139><c> means</c><00:13:46.170><c> that</c><00:13:46.350><c> anything</c><00:13:46.589><c> that</c>

00:13:46.610 --> 00:13:46.620 align:start position:0%
job and that means that anything that
 

00:13:46.620 --> 00:13:49.369 align:start position:0%
job and that means that anything that
runs<00:13:46.920><c> on</c><00:13:47.129><c> it</c><00:13:47.279><c> allows</c><00:13:48.180><c> us</c><00:13:48.209><c> to</c><00:13:48.600><c> track</c><00:13:48.930><c> back</c><00:13:49.110><c> using</c>

00:13:49.369 --> 00:13:49.379 align:start position:0%
runs on it allows us to track back using
 

00:13:49.379 --> 00:13:51.590 align:start position:0%
runs on it allows us to track back using
that<00:13:49.439><c> job</c><00:13:49.649><c> object</c><00:13:50.120><c> we're</c><00:13:51.120><c> also</c><00:13:51.209><c> going</c><00:13:51.389><c> to</c><00:13:51.449><c> give</c>

00:13:51.590 --> 00:13:51.600 align:start position:0%
that job object we're also going to give
 

00:13:51.600 --> 00:13:54.110 align:start position:0%
that job object we're also going to give
it<00:13:51.720><c> a</c><00:13:51.870><c> default</c><00:13:52.199><c> dispatcher</c><00:13:52.819><c> we're</c><00:13:53.819><c> gonna</c><00:13:53.970><c> talk</c>

00:13:54.110 --> 00:13:54.120 align:start position:0%
it a default dispatcher we're gonna talk
 

00:13:54.120 --> 00:13:55.489 align:start position:0%
it a default dispatcher we're gonna talk
more<00:13:54.180><c> about</c><00:13:54.240><c> that</c><00:13:54.389><c> later</c><00:13:54.449><c> but</c><00:13:55.110><c> basically</c><00:13:55.230><c> it</c>

00:13:55.489 --> 00:13:55.499 align:start position:0%
more about that later but basically it
 

00:13:55.499 --> 00:13:57.049 align:start position:0%
more about that later but basically it
means<00:13:55.649><c> is</c><00:13:55.769><c> that</c><00:13:55.800><c> anything</c><00:13:56.309><c> that</c><00:13:56.339><c> is</c><00:13:56.550><c> launched</c>

00:13:57.049 --> 00:13:57.059 align:start position:0%
means is that anything that is launched
 

00:13:57.059 --> 00:13:59.629 align:start position:0%
means is that anything that is launched
on<00:13:57.269><c> that</c><00:13:57.569><c> scope</c><00:13:57.930><c> or</c><00:13:58.350><c> we</c><00:13:58.589><c> automatically</c><00:13:59.100><c> run</c><00:13:59.459><c> on</c>

00:13:59.629 --> 00:13:59.639 align:start position:0%
on that scope or we automatically run on
 

00:13:59.639 --> 00:14:02.090 align:start position:0%
on that scope or we automatically run on
the<00:13:59.759><c> main</c><00:13:59.970><c> thread</c><00:14:00.269><c> Android</c><00:14:00.990><c> Manfred</c><00:14:01.290><c> in</c><00:14:01.949><c> this</c>

00:14:02.090 --> 00:14:02.100 align:start position:0%
the main thread Android Manfred in this
 

00:14:02.100 --> 00:14:06.110 align:start position:0%
the main thread Android Manfred in this
isn't<00:14:04.160><c> so</c><00:14:05.160><c> once</c><00:14:05.309><c> we've</c><00:14:05.430><c> done</c><00:14:05.459><c> that</c><00:14:05.579><c> we</c><00:14:05.939><c> have</c><00:14:05.970><c> a</c>

00:14:06.110 --> 00:14:06.120 align:start position:0%
isn't so once we've done that we have a
 

00:14:06.120 --> 00:14:07.699 align:start position:0%
isn't so once we've done that we have a
refresh<00:14:06.449><c> method</c><00:14:06.749><c> again</c><00:14:06.930><c> and</c><00:14:07.559><c> this</c><00:14:07.649><c> time</c>

00:14:07.699 --> 00:14:07.709 align:start position:0%
refresh method again and this time
 

00:14:07.709 --> 00:14:09.079 align:start position:0%
refresh method again and this time
instead<00:14:08.040><c> of</c><00:14:08.220><c> that</c><00:14:08.339><c> view</c><00:14:08.459><c> model</c><00:14:08.670><c> scope</c><00:14:08.910><c> the</c>

00:14:09.079 --> 00:14:09.089 align:start position:0%
instead of that view model scope the
 

00:14:09.089 --> 00:14:10.309 align:start position:0%
instead of that view model scope the
automated<00:14:09.389><c> thing</c><00:14:09.660><c> we're</c><00:14:09.779><c> going</c><00:14:09.899><c> to</c><00:14:09.959><c> use</c><00:14:10.110><c> our</c>

00:14:10.309 --> 00:14:10.319 align:start position:0%
automated thing we're going to use our
 

00:14:10.319 --> 00:14:12.769 align:start position:0%
automated thing we're going to use our
own<00:14:10.499><c> created</c><00:14:11.009><c> scope</c><00:14:11.220><c> and</c><00:14:11.459><c> again</c><00:14:11.999><c> saki-san</c>

00:14:12.769 --> 00:14:12.779 align:start position:0%
own created scope and again saki-san
 

00:14:12.779 --> 00:14:13.850 align:start position:0%
own created scope and again saki-san
code<00:14:12.930><c> just</c><00:14:13.170><c> using</c><00:14:13.410><c> a</c><00:14:13.439><c> different</c><00:14:13.709><c> type</c><00:14:13.800><c> of</c>

00:14:13.850 --> 00:14:13.860 align:start position:0%
code just using a different type of
 

00:14:13.860 --> 00:14:16.610 align:start position:0%
code just using a different type of
scope<00:14:14.069><c> this</c><00:14:14.249><c> time</c><00:14:15.019><c> but</c><00:14:16.019><c> this</c><00:14:16.110><c> time</c><00:14:16.319><c> the</c>

00:14:16.610 --> 00:14:16.620 align:start position:0%
scope this time but this time the
 

00:14:16.620 --> 00:14:17.749 align:start position:0%
scope this time but this time the
launched<00:14:16.889><c> we</c><00:14:17.189><c> scoped</c>

00:14:17.749 --> 00:14:17.759 align:start position:0%
launched we scoped
 

00:14:17.759 --> 00:14:20.019 align:start position:0%
launched we scoped
to<00:14:17.939><c> the</c><00:14:18.059><c> odd-job</c><00:14:18.360><c> object</c><00:14:18.870><c> we</c><00:14:18.959><c> created</c><00:14:19.079><c> earlier</c>

00:14:20.019 --> 00:14:20.029 align:start position:0%
to the odd-job object we created earlier
 

00:14:20.029 --> 00:14:22.579 align:start position:0%
to the odd-job object we created earlier
which<00:14:21.029><c> means</c><00:14:21.240><c> that</c><00:14:21.480><c> anon</c><00:14:21.930><c> and</c><00:14:22.019><c> cleared</c><00:14:22.259><c> which</c>

00:14:22.579 --> 00:14:22.589 align:start position:0%
which means that anon and cleared which
 

00:14:22.589 --> 00:14:24.230 align:start position:0%
which means that anon and cleared which
is<00:14:22.740><c> the</c><00:14:22.829><c> callback</c><00:14:23.009><c> we</c><00:14:23.249><c> have</c><00:14:23.399><c> in</c><00:14:23.519><c> view</c><00:14:23.819><c> model</c><00:14:24.120><c> to</c>

00:14:24.230 --> 00:14:24.240 align:start position:0%
is the callback we have in view model to
 

00:14:24.240 --> 00:14:25.939 align:start position:0%
is the callback we have in view model to
actually<00:14:24.329><c> not</c><00:14:24.600><c> when</c><00:14:24.720><c> it's</c><00:14:24.839><c> been</c><00:14:24.959><c> torn</c><00:14:25.230><c> down</c><00:14:25.410><c> we</c>

00:14:25.939 --> 00:14:25.949 align:start position:0%
actually not when it's been torn down we
 

00:14:25.949 --> 00:14:26.809 align:start position:0%
actually not when it's been torn down we
can<00:14:26.069><c> actually</c><00:14:26.160><c> just</c><00:14:26.339><c> called</c><00:14:26.550><c> job</c><00:14:26.670><c> got</c>

00:14:26.809 --> 00:14:26.819 align:start position:0%
can actually just called job got
 

00:14:26.819 --> 00:14:28.549 align:start position:0%
can actually just called job got
canceled<00:14:27.149><c> and</c><00:14:27.360><c> that</c><00:14:27.899><c> means</c><00:14:28.079><c> that</c><00:14:28.230><c> any</c><00:14:28.319><c> pair</c><00:14:28.529><c> of</c>

00:14:28.549 --> 00:14:28.559 align:start position:0%
canceled and that means that any pair of
 

00:14:28.559 --> 00:14:29.780 align:start position:0%
canceled and that means that any pair of
teens<00:14:28.740><c> which</c><00:14:28.889><c> are</c><00:14:28.980><c> currently</c><00:14:29.220><c> running</c><00:14:29.430><c> when</c>

00:14:29.780 --> 00:14:29.790 align:start position:0%
teens which are currently running when
 

00:14:29.790 --> 00:14:31.040 align:start position:0%
teens which are currently running when
the<00:14:29.850><c> view</c><00:14:30.000><c> model</c><00:14:30.120><c> goes</c><00:14:30.389><c> down</c><00:14:30.629><c> will</c><00:14:30.930><c> be</c>

00:14:31.040 --> 00:14:31.050 align:start position:0%
the view model goes down will be
 

00:14:31.050 --> 00:14:33.769 align:start position:0%
the view model goes down will be
canceled<00:14:31.379><c> at</c><00:14:31.470><c> the</c><00:14:31.559><c> same</c><00:14:31.680><c> time</c><00:14:32.509><c> reduces</c><00:14:33.509><c> memory</c>

00:14:33.769 --> 00:14:33.779 align:start position:0%
canceled at the same time reduces memory
 

00:14:33.779 --> 00:14:34.910 align:start position:0%
canceled at the same time reduces memory
leaks<00:14:33.959><c> or</c><00:14:34.170><c> you</c><00:14:34.379><c> know</c><00:14:34.470><c> whatever</c><00:14:34.620><c> it</c><00:14:34.740><c> is</c><00:14:34.860><c> just</c>

00:14:34.910 --> 00:14:34.920 align:start position:0%
leaks or you know whatever it is just
 

00:14:34.920 --> 00:14:37.540 align:start position:0%
leaks or you know whatever it is just
allows<00:14:35.250><c> it</c><00:14:35.399><c> to</c><00:14:35.430><c> tidy</c><00:14:35.639><c> up</c>

00:14:37.540 --> 00:14:37.550 align:start position:0%
allows it to tidy up
 

00:14:37.550 --> 00:14:39.860 align:start position:0%
allows it to tidy up
so<00:14:38.550><c> if</c><00:14:38.759><c> you</c><00:14:38.819><c> actually</c><00:14:38.939><c> have</c><00:14:39.209><c> a</c><00:14:39.240><c> look</c><00:14:39.449><c> at</c><00:14:39.540><c> how</c>

00:14:39.860 --> 00:14:39.870 align:start position:0%
so if you actually have a look at how
 

00:14:39.870 --> 00:14:41.360 align:start position:0%
so if you actually have a look at how
things<00:14:40.439><c> are</c><00:14:40.559><c> run</c><00:14:40.709><c> now</c>

00:14:41.360 --> 00:14:41.370 align:start position:0%
things are run now
 

00:14:41.370 --> 00:14:42.980 align:start position:0%
things are run now
so<00:14:41.670><c> we've</c><00:14:41.850><c> launched</c><00:14:42.149><c> our</c><00:14:42.240><c> routine</c><00:14:42.689><c> and</c><00:14:42.720><c> now</c>

00:14:42.980 --> 00:14:42.990 align:start position:0%
so we've launched our routine and now
 

00:14:42.990 --> 00:14:44.600 align:start position:0%
so we've launched our routine and now
we're<00:14:43.110><c> going</c><00:14:43.230><c> to</c><00:14:43.290><c> go</c><00:14:43.379><c> into</c><00:14:43.529><c> our</c><00:14:43.709><c> update</c><00:14:44.459><c> show</c>

00:14:44.600 --> 00:14:44.610 align:start position:0%
we're going to go into our update show
 

00:14:44.610 --> 00:14:48.259 align:start position:0%
we're going to go into our update show
method<00:14:45.199><c> so</c><00:14:46.199><c> here</c><00:14:46.439><c> we</c><00:14:46.620><c> are</c><00:14:47.129><c> in</c><00:14:47.490><c> our</c><00:14:47.639><c> carotene</c><00:14:48.089><c> so</c>

00:14:48.259 --> 00:14:48.269 align:start position:0%
method so here we are in our carotene so
 

00:14:48.269 --> 00:14:49.639 align:start position:0%
method so here we are in our carotene so
I'll<00:14:48.389><c> launch</c><00:14:48.600><c> which</c><00:14:48.959><c> is</c><00:14:49.110><c> modeled</c><00:14:49.379><c> by</c><00:14:49.470><c> that</c>

00:14:49.639 --> 00:14:49.649 align:start position:0%
I'll launch which is modeled by that
 

00:14:49.649 --> 00:14:52.400 align:start position:0%
I'll launch which is modeled by that
blue<00:14:49.860><c> thing</c><00:14:50.040><c> going</c><00:14:50.309><c> around</c><00:14:50.779><c> now</c><00:14:51.779><c> here</c><00:14:51.990><c> in</c><00:14:52.199><c> the</c>

00:14:52.400 --> 00:14:52.410 align:start position:0%
blue thing going around now here in the
 

00:14:52.410 --> 00:14:53.929 align:start position:0%
blue thing going around now here in the
object<00:14:52.709><c> show</c><00:14:52.800><c> method</c><00:14:53.129><c> which</c><00:14:53.279><c> is</c><00:14:53.430><c> denoted</c><00:14:53.670><c> by</c>

00:14:53.929 --> 00:14:53.939 align:start position:0%
object show method which is denoted by
 

00:14:53.939 --> 00:14:55.910 align:start position:0%
object show method which is denoted by
the<00:14:54.029><c> yellow</c><00:14:54.269><c> arrow</c><00:14:54.300><c> so</c><00:14:55.290><c> we're</c><00:14:55.410><c> gonna</c><00:14:55.500><c> go</c><00:14:55.709><c> past</c>

00:14:55.910 --> 00:14:55.920 align:start position:0%
the yellow arrow so we're gonna go past
 

00:14:55.920 --> 00:14:56.960 align:start position:0%
the yellow arrow so we're gonna go past
that<00:14:55.980><c> first</c><00:14:56.250><c> piece</c><00:14:56.399><c> of</c><00:14:56.459><c> code</c><00:14:56.610><c> which</c><00:14:56.790><c> is</c><00:14:56.939><c> the</c>

00:14:56.960 --> 00:14:56.970 align:start position:0%
that first piece of code which is the
 

00:14:56.970 --> 00:14:59.360 align:start position:0%
that first piece of code which is the
async<00:14:57.389><c> builder</c><00:14:57.689><c> at</c><00:14:58.379><c> this</c><00:14:58.529><c> point</c><00:14:58.769><c> we</c><00:14:58.889><c> have</c><00:14:59.160><c> a</c>

00:14:59.360 --> 00:14:59.370 align:start position:0%
async builder at this point we have a
 

00:14:59.370 --> 00:15:01.069 align:start position:0%
async builder at this point we have a
first<00:14:59.759><c> curry</c><00:15:00.029><c> team</c><00:15:00.269><c> running</c><00:15:00.569><c> which</c><00:15:00.930><c> is</c>

00:15:01.069 --> 00:15:01.079 align:start position:0%
first curry team running which is
 

00:15:01.079 --> 00:15:02.389 align:start position:0%
first curry team running which is
everything<00:15:01.350><c> and</c><00:15:01.649><c> that's</c><00:15:01.769><c> doing</c><00:15:02.040><c> the</c><00:15:02.129><c> local</c>

00:15:02.389 --> 00:15:02.399 align:start position:0%
everything and that's doing the local
 

00:15:02.399 --> 00:15:04.160 align:start position:0%
everything and that's doing the local
show<00:15:02.550><c> store</c><00:15:02.790><c> stuff</c><00:15:02.970><c> so</c><00:15:03.540><c> it's</c><00:15:03.689><c> running</c><00:15:03.870><c> nicely</c>

00:15:04.160 --> 00:15:04.170 align:start position:0%
show store stuff so it's running nicely
 

00:15:04.170 --> 00:15:07.040 align:start position:0%
show store stuff so it's running nicely
and<00:15:04.529><c> it's</c><00:15:04.649><c> doing</c><00:15:04.860><c> its</c><00:15:05.009><c> thing</c><00:15:05.179><c> now</c><00:15:06.179><c> the</c><00:15:06.750><c> outer</c>

00:15:07.040 --> 00:15:07.050 align:start position:0%
and it's doing its thing now the outer
 

00:15:07.050 --> 00:15:08.660 align:start position:0%
and it's doing its thing now the outer
curtain<00:15:07.500><c> is</c><00:15:07.620><c> going</c><00:15:07.740><c> to</c><00:15:07.800><c> go</c><00:15:07.889><c> past</c><00:15:08.220><c> that</c><00:15:08.309><c> and</c><00:15:08.610><c> go</c>

00:15:08.660 --> 00:15:08.670 align:start position:0%
curtain is going to go past that and go
 

00:15:08.670 --> 00:15:10.569 align:start position:0%
curtain is going to go past that and go
past<00:15:08.910><c> the</c><00:15:09.059><c> second</c><00:15:09.509><c> async</c><00:15:09.839><c> which</c><00:15:09.990><c> the</c><00:15:10.139><c> remote</c>

00:15:10.569 --> 00:15:10.579 align:start position:0%
past the second async which the remote
 

00:15:10.579 --> 00:15:13.220 align:start position:0%
past the second async which the remote
here<00:15:11.579><c> again</c><00:15:12.029><c> we've</c><00:15:12.240><c> got</c><00:15:12.420><c> so</c><00:15:12.689><c> we</c><00:15:12.779><c> now</c><00:15:12.870><c> have</c><00:15:12.990><c> two</c>

00:15:13.220 --> 00:15:13.230 align:start position:0%
here again we've got so we now have two
 

00:15:13.230 --> 00:15:15.079 align:start position:0%
here again we've got so we now have two
curry<00:15:13.439><c> teams</c><00:15:13.679><c> running</c><00:15:13.920><c> and</c><00:15:14.129><c> they're</c><00:15:14.610><c> both</c><00:15:14.759><c> off</c>

00:15:15.079 --> 00:15:15.089 align:start position:0%
curry teams running and they're both off
 

00:15:15.089 --> 00:15:16.730 align:start position:0%
curry teams running and they're both off
we<00:15:15.240><c> have</c><00:15:15.329><c> free</c><00:15:15.480><c> currencies</c><00:15:15.750><c> but</c><00:15:16.230><c> two</c><00:15:16.439><c> inner</c>

00:15:16.730 --> 00:15:16.740 align:start position:0%
we have free currencies but two inner
 

00:15:16.740 --> 00:15:19.939 align:start position:0%
we have free currencies but two inner
ones<00:15:16.920><c> to</c><00:15:17.220><c> child</c><00:15:17.519><c> proteins</c><00:15:18.589><c> so</c><00:15:19.589><c> once</c><00:15:19.769><c> they're</c>

00:15:19.939 --> 00:15:19.949 align:start position:0%
ones to child proteins so once they're
 

00:15:19.949 --> 00:15:21.350 align:start position:0%
ones to child proteins so once they're
launched<00:15:20.160><c> in</c><00:15:20.370><c> their</c><00:15:20.490><c> rune</c><00:15:20.699><c> and</c><00:15:20.850><c> going</c><00:15:21.149><c> along</c>

00:15:21.350 --> 00:15:21.360 align:start position:0%
launched in their rune and going along
 

00:15:21.360 --> 00:15:24.470 align:start position:0%
launched in their rune and going along
we<00:15:22.350><c> afford</c><00:15:22.860><c> on</c><00:15:23.040><c> to</c><00:15:23.279><c> the</c><00:15:23.429><c> áfirstá</c><00:15:23.999><c> weight</c>

00:15:24.470 --> 00:15:24.480 align:start position:0%
we afford on to the áfirstá weight
 

00:15:24.480 --> 00:15:25.850 align:start position:0%
we afford on to the áfirstá weight
now<00:15:24.990><c> this</c><00:15:25.170><c> point</c><00:15:25.319><c> were</c><00:15:25.470><c> waiting</c><00:15:25.709><c> for</c><00:15:25.800><c> that</c>

00:15:25.850 --> 00:15:25.860 align:start position:0%
now this point were waiting for that
 

00:15:25.860 --> 00:15:28.369 align:start position:0%
now this point were waiting for that
first<00:15:26.160><c> async</c><00:15:26.819><c> the</c><00:15:27.029><c> local</c><00:15:27.389><c> to</c><00:15:27.839><c> actually</c><00:15:28.170><c> finish</c>

00:15:28.369 --> 00:15:28.379 align:start position:0%
first async the local to actually finish
 

00:15:28.379 --> 00:15:30.439 align:start position:0%
first async the local to actually finish
itself<00:15:28.679><c> up</c><00:15:28.920><c> and</c><00:15:29.129><c> then</c><00:15:29.429><c> not</c><00:15:29.970><c> return</c><00:15:30.240><c> a</c><00:15:30.269><c> result</c>

00:15:30.439 --> 00:15:30.449 align:start position:0%
itself up and then not return a result
 

00:15:30.449 --> 00:15:33.049 align:start position:0%
itself up and then not return a result
which<00:15:30.870><c> is</c><00:15:30.990><c> what</c><00:15:31.110><c> a</c><00:15:31.230><c> weight</c><00:15:31.410><c> will</c><00:15:31.559><c> return</c><00:15:32.059><c> but</c>

00:15:33.049 --> 00:15:33.059 align:start position:0%
which is what a weight will return but
 

00:15:33.059 --> 00:15:33.680 align:start position:0%
which is what a weight will return but
at<00:15:33.179><c> this</c><00:15:33.329><c> point</c>

00:15:33.680 --> 00:15:33.690 align:start position:0%
at this point
 

00:15:33.690 --> 00:15:35.390 align:start position:0%
at this point
because<00:15:34.020><c> we're</c><00:15:34.170><c> waiting</c><00:15:34.290><c> on</c><00:15:34.620><c> that</c><00:15:34.830><c> first</c>

00:15:35.390 --> 00:15:35.400 align:start position:0%
because we're waiting on that first
 

00:15:35.400 --> 00:15:37.820 align:start position:0%
because we're waiting on that first
async<00:15:35.790><c> the</c><00:15:36.690><c> outer</c><00:15:36.900><c> coating</c><00:15:37.410><c> is</c><00:15:37.530><c> what</c><00:15:37.650><c> we</c><00:15:37.710><c> call</c>

00:15:37.820 --> 00:15:37.830 align:start position:0%
async the outer coating is what we call
 

00:15:37.830 --> 00:15:38.450 align:start position:0%
async the outer coating is what we call
suspended

00:15:38.450 --> 00:15:38.460 align:start position:0%
suspended
 

00:15:38.460 --> 00:15:41.750 align:start position:0%
suspended
it's<00:15:38.580><c> just</c><00:15:38.790><c> sat</c><00:15:38.910><c> there</c><00:15:38.940><c> doing</c><00:15:39.300><c> nothing</c><00:15:40.760><c> but</c>

00:15:41.750 --> 00:15:41.760 align:start position:0%
it's just sat there doing nothing but
 

00:15:41.760 --> 00:15:43.520 align:start position:0%
it's just sat there doing nothing but
during<00:15:42.090><c> that</c><00:15:42.120><c> time</c><00:15:42.240><c> that</c><00:15:42.780><c> view</c><00:15:42.990><c> model</c><00:15:43.230><c> has</c>

00:15:43.520 --> 00:15:43.530 align:start position:0%
during that time that view model has
 

00:15:43.530 --> 00:15:45.350 align:start position:0%
during that time that view model has
been<00:15:43.710><c> torn</c><00:15:43.920><c> down</c><00:15:44.040><c> is</c><00:15:44.340><c> the</c><00:15:44.640><c> activities</c><00:15:45.240><c> gone</c>

00:15:45.350 --> 00:15:45.360 align:start position:0%
been torn down is the activities gone
 

00:15:45.360 --> 00:15:47.900 align:start position:0%
been torn down is the activities gone
away<00:15:45.570><c> or</c><00:15:45.810><c> whatever</c><00:15:46.200><c> it</c><00:15:46.290><c> would</c><00:15:46.380><c> be</c><00:15:46.560><c> and</c><00:15:47.520><c> we've</c>

00:15:47.900 --> 00:15:47.910 align:start position:0%
away or whatever it would be and we've
 

00:15:47.910 --> 00:15:50.090 align:start position:0%
away or whatever it would be and we've
called<00:15:48.060><c> job</c><00:15:48.270><c> lat</c><00:15:48.420><c> cancel</c><00:15:48.750><c> now</c><00:15:49.710><c> at</c><00:15:49.800><c> this</c><00:15:49.890><c> point</c>

00:15:50.090 --> 00:15:50.100 align:start position:0%
called job lat cancel now at this point
 

00:15:50.100 --> 00:15:52.190 align:start position:0%
called job lat cancel now at this point
the<00:15:50.460><c> outer</c><00:15:50.640><c> carotene</c><00:15:51.060><c> is</c><00:15:51.150><c> canceled</c><00:15:51.510><c> and</c><00:15:51.720><c> then</c>

00:15:52.190 --> 00:15:52.200 align:start position:0%
the outer carotene is canceled and then
 

00:15:52.200 --> 00:15:54.290 align:start position:0%
the outer carotene is canceled and then
the<00:15:52.440><c> inner</c><00:15:52.710><c> two</c><00:15:52.920><c> are</c><00:15:53.130><c> also</c><00:15:53.340><c> canceled</c><00:15:53.910><c> and</c><00:15:54.120><c> now</c>

00:15:54.290 --> 00:15:54.300 align:start position:0%
the inner two are also canceled and now
 

00:15:54.300 --> 00:15:56.660 align:start position:0%
the inner two are also canceled and now
that's<00:15:54.570><c> similar</c><00:15:55.110><c> carotene</c><00:15:55.980><c> scope</c><00:15:56.250><c> gives</c><00:15:56.520><c> us</c>

00:15:56.660 --> 00:15:56.670 align:start position:0%
that's similar carotene scope gives us
 

00:15:56.670 --> 00:15:58.250 align:start position:0%
that's similar carotene scope gives us
and<00:15:56.880><c> scoping</c><00:15:57.300><c> in</c><00:15:57.390><c> general</c><00:15:57.690><c> gives</c><00:15:57.840><c> us</c><00:15:57.960><c> for</c><00:15:58.080><c> free</c>

00:15:58.250 --> 00:15:58.260 align:start position:0%
and scoping in general gives us for free
 

00:15:58.260 --> 00:15:59.660 align:start position:0%
and scoping in general gives us for free
and<00:15:58.560><c> that</c><00:15:58.590><c> childcare</c><00:15:59.310><c> routines</c>

00:15:59.660 --> 00:15:59.670 align:start position:0%
and that childcare routines
 

00:15:59.670 --> 00:16:01.280 align:start position:0%
and that childcare routines
automatically<00:16:00.120><c> inherit</c><00:16:00.540><c> from</c><00:16:00.690><c> its</c><00:16:00.900><c> parent</c>

00:16:01.280 --> 00:16:01.290 align:start position:0%
automatically inherit from its parent
 

00:16:01.290 --> 00:16:03.260 align:start position:0%
automatically inherit from its parent
carotene<00:16:01.710><c> so</c><00:16:02.280><c> if</c><00:16:02.520><c> the</c><00:16:02.640><c> parent</c><00:16:02.910><c> coatings</c><00:16:03.210><c> have</c>

00:16:03.260 --> 00:16:03.270 align:start position:0%
carotene so if the parent coatings have
 

00:16:03.270 --> 00:16:04.700 align:start position:0%
carotene so if the parent coatings have
been<00:16:03.480><c> cancelled</c><00:16:03.840><c> anything</c><00:16:04.050><c> below</c><00:16:04.500><c> it</c><00:16:04.590><c> will</c>

00:16:04.700 --> 00:16:04.710 align:start position:0%
been cancelled anything below it will
 

00:16:04.710 --> 00:16:06.260 align:start position:0%
been cancelled anything below it will
also<00:16:04.860><c> be</c><00:16:05.100><c> that</c><00:16:05.640><c> some</c><00:16:05.760><c> of</c><00:16:05.820><c> the</c><00:16:05.880><c> nice</c><00:16:06.000><c> stuff</c><00:16:06.120><c> has</c>

00:16:06.260 --> 00:16:06.270 align:start position:0%
also be that some of the nice stuff has
 

00:16:06.270 --> 00:16:09.620 align:start position:0%
also be that some of the nice stuff has
been<00:16:06.330><c> added</c><00:16:06.570><c> recently</c><00:16:08.300><c> but</c><00:16:09.300><c> what</c><00:16:09.420><c> if</c><00:16:09.510><c> you're</c>

00:16:09.620 --> 00:16:09.630 align:start position:0%
been added recently but what if you're
 

00:16:09.630 --> 00:16:11.330 align:start position:0%
been added recently but what if you're
not<00:16:09.660><c> actually</c><00:16:09.840><c> using</c><00:16:10.110><c> P</c><00:16:10.290><c> models</c><00:16:10.590><c> you</c><00:16:11.010><c> know</c><00:16:11.100><c> a</c>

00:16:11.330 --> 00:16:11.340 align:start position:0%
not actually using P models you know a
 

00:16:11.340 --> 00:16:13.520 align:start position:0%
not actually using P models you know a
lot<00:16:11.580><c> of</c><00:16:11.610><c> us</c><00:16:11.790><c> might</c><00:16:12.120><c> not</c><00:16:12.300><c> be</c><00:16:12.390><c> using</c><00:16:12.660><c> it</c><00:16:12.750><c> and</c><00:16:13.260><c> that</c>

00:16:13.520 --> 00:16:13.530 align:start position:0%
lot of us might not be using it and that
 

00:16:13.530 --> 00:16:15.290 align:start position:0%
lot of us might not be using it and that
we<00:16:13.920><c> have</c><00:16:14.010><c> over</c><00:16:14.220><c> api's</c><00:16:14.520><c> we</c><00:16:14.730><c> just</c><00:16:14.880><c> later</c><00:16:15.060><c> do</c>

00:16:15.290 --> 00:16:15.300 align:start position:0%
we have over api's we just later do
 

00:16:15.300 --> 00:16:17.930 align:start position:0%
we have over api's we just later do
similar<00:16:15.660><c> other</c><00:16:15.840><c> things</c><00:16:16.460><c> so</c><00:16:17.460><c> it's</c><00:16:17.640><c> part</c><00:16:17.820><c> of</c><00:16:17.880><c> the</c>

00:16:17.930 --> 00:16:17.940 align:start position:0%
similar other things so it's part of the
 

00:16:17.940 --> 00:16:19.490 align:start position:0%
similar other things so it's part of the
Android<00:16:18.180><c> architecture</c><00:16:18.570><c> components</c><00:16:18.960><c> we</c><00:16:19.080><c> added</c>

00:16:19.490 --> 00:16:19.500 align:start position:0%
Android architecture components we added
 

00:16:19.500 --> 00:16:21.050 align:start position:0%
Android architecture components we added
a<00:16:19.680><c> listener</c><00:16:20.070><c> at</c><00:16:20.310><c> least</c><00:16:20.520><c> the</c><00:16:20.580><c> functionality</c>

00:16:21.050 --> 00:16:21.060 align:start position:0%
a listener at least the functionality
 

00:16:21.060 --> 00:16:23.150 align:start position:0%
a listener at least the functionality
for<00:16:21.150><c> life</c><00:16:21.300><c> cycles</c><00:16:21.690><c> so</c><00:16:22.410><c> here's</c><00:16:22.680><c> a</c><00:16:22.710><c> very</c><00:16:22.890><c> quick</c>

00:16:23.150 --> 00:16:23.160 align:start position:0%
for life cycles so here's a very quick
 

00:16:23.160 --> 00:16:24.530 align:start position:0%
for life cycles so here's a very quick
example<00:16:23.250><c> of</c><00:16:23.610><c> how</c><00:16:23.700><c> you</c><00:16:23.760><c> use</c><00:16:23.850><c> them</c><00:16:24.090><c> generally</c>

00:16:24.530 --> 00:16:24.540 align:start position:0%
example of how you use them generally
 

00:16:24.540 --> 00:16:26.690 align:start position:0%
example of how you use them generally
and<00:16:24.750><c> you</c><00:16:25.320><c> create</c><00:16:25.620><c> a</c><00:16:25.650><c> lifecycle</c><00:16:26.010><c> observer</c><00:16:26.430><c> and</c>

00:16:26.690 --> 00:16:26.700 align:start position:0%
and you create a lifecycle observer and
 

00:16:26.700 --> 00:16:28.540 align:start position:0%
and you create a lifecycle observer and
this<00:16:26.880><c> in</c><00:16:27.180><c> this</c><00:16:27.510><c> example</c><00:16:27.870><c> we're</c><00:16:28.020><c> using</c><00:16:28.140><c> default</c>

00:16:28.540 --> 00:16:28.550 align:start position:0%
this in this example we're using default
 

00:16:28.550 --> 00:16:30.860 align:start position:0%
this in this example we're using default
and<00:16:29.550><c> when</c><00:16:29.730><c> you</c><00:16:29.820><c> create</c><00:16:30.060><c> and</c><00:16:30.300><c> it</c><00:16:30.480><c> has</c><00:16:30.570><c> methods</c>

00:16:30.860 --> 00:16:30.870 align:start position:0%
and when you create and it has methods
 

00:16:30.870 --> 00:16:32.420 align:start position:0%
and when you create and it has methods
for<00:16:31.200><c> each</c><00:16:31.320><c> of</c><00:16:31.470><c> the</c><00:16:31.530><c> different</c><00:16:31.590><c> lifecycle</c>

00:16:32.420 --> 00:16:32.430 align:start position:0%
for each of the different lifecycle
 

00:16:32.430 --> 00:16:34.640 align:start position:0%
for each of the different lifecycle
events<00:16:32.490><c> so</c><00:16:32.880><c> on</c><00:16:33.060><c> create</c><00:16:33.330><c> destroyed</c><00:16:33.810><c> stop</c><00:16:34.290><c> start</c>

00:16:34.640 --> 00:16:34.650 align:start position:0%
events so on create destroyed stop start
 

00:16:34.650 --> 00:16:36.920 align:start position:0%
events so on create destroyed stop start
whatever<00:16:34.920><c> it</c><00:16:34.980><c> be</c><00:16:35.180><c> and</c><00:16:36.180><c> to</c><00:16:36.270><c> actually</c><00:16:36.510><c> use</c><00:16:36.660><c> it</c><00:16:36.690><c> on</c>

00:16:36.920 --> 00:16:36.930 align:start position:0%
whatever it be and to actually use it on
 

00:16:36.930 --> 00:16:38.720 align:start position:0%
whatever it be and to actually use it on
like<00:16:37.410><c> an</c><00:16:37.500><c> activity</c><00:16:37.980><c> or</c><00:16:38.100><c> whatever</c><00:16:38.310><c> it</c><00:16:38.370><c> be</c><00:16:38.430><c> you</c>

00:16:38.720 --> 00:16:38.730 align:start position:0%
like an activity or whatever it be you
 

00:16:38.730 --> 00:16:40.100 align:start position:0%
like an activity or whatever it be you
create<00:16:39.000><c> an</c><00:16:39.060><c> instance</c><00:16:39.360><c> and</c><00:16:39.480><c> you</c><00:16:39.600><c> add</c><00:16:39.750><c> observer</c>

00:16:40.100 --> 00:16:40.110 align:start position:0%
create an instance and you add observer
 

00:16:40.110 --> 00:16:44.330 align:start position:0%
create an instance and you add observer
hopefully<00:16:41.040><c> you've</c><00:16:41.130><c> seen</c><00:16:41.430><c> yourself</c><00:16:41.490><c> before</c><00:16:43.340><c> so</c>

00:16:44.330 --> 00:16:44.340 align:start position:0%
hopefully you've seen yourself before so
 

00:16:44.340 --> 00:16:46.910 align:start position:0%
hopefully you've seen yourself before so
this<00:16:44.460><c> build</c><00:16:44.670><c> kind</c><00:16:45.150><c> of</c><00:16:45.210><c> scope</c><00:16:45.570><c> aware</c><00:16:46.230><c> lifecycle</c>

00:16:46.910 --> 00:16:46.920 align:start position:0%
this build kind of scope aware lifecycle
 

00:16:46.920 --> 00:16:48.410 align:start position:0%
this build kind of scope aware lifecycle
observer<00:16:47.190><c> which</c><00:16:47.700><c> allows</c><00:16:47.940><c> us</c><00:16:48.090><c> to</c><00:16:48.210><c> scope</c>

00:16:48.410 --> 00:16:48.420 align:start position:0%
observer which allows us to scope
 

00:16:48.420 --> 00:16:50.300 align:start position:0%
observer which allows us to scope
carotenes<00:16:48.870><c> to</c><00:16:49.080><c> the</c><00:16:49.200><c> an</c><00:16:49.410><c> actual</c><00:16:49.710><c> lifecycle</c>

00:16:50.300 --> 00:16:50.310 align:start position:0%
carotenes to the an actual lifecycle
 

00:16:50.310 --> 00:16:53.000 align:start position:0%
carotenes to the an actual lifecycle
instance<00:16:50.900><c> the</c><00:16:51.900><c> primary</c><00:16:52.200><c> API</c><00:16:52.380><c> we'll</c><00:16:52.620><c> use</c><00:16:52.830><c> here</c>

00:16:53.000 --> 00:16:53.010 align:start position:0%
instance the primary API we'll use here
 

00:16:53.010 --> 00:16:54.320 align:start position:0%
instance the primary API we'll use here
is<00:16:53.160><c> that</c><00:16:53.250><c> we'll</c><00:16:53.400><c> pass</c><00:16:53.550><c> another</c><00:16:53.700><c> lambda</c><00:16:54.120><c> and</c>

00:16:54.320 --> 00:16:54.330 align:start position:0%
is that we'll pass another lambda and
 

00:16:54.330 --> 00:16:55.970 align:start position:0%
is that we'll pass another lambda and
that's<00:16:54.840><c> the</c><00:16:54.990><c> thing</c><00:16:55.110><c> that</c><00:16:55.260><c> we've</c><00:16:55.350><c> run</c><00:16:55.590><c> once</c>

00:16:55.970 --> 00:16:55.980 align:start position:0%
that's the thing that we've run once
 

00:16:55.980 --> 00:16:58.430 align:start position:0%
that's the thing that we've run once
we've<00:16:56.250><c> say</c><00:16:56.580><c> been</c><00:16:56.760><c> started</c><00:16:57.270><c> I</c><00:16:57.510><c> mean</c><00:16:58.080><c> she's</c><00:16:58.230><c> kind</c>

00:16:58.430 --> 00:16:58.440 align:start position:0%
we've say been started I mean she's kind
 

00:16:58.440 --> 00:17:01.850 align:start position:0%
we've say been started I mean she's kind
of<00:16:58.530><c> what</c><00:16:58.650><c> you</c><00:16:58.710><c> want</c><00:16:58.800><c> usually</c><00:16:59.040><c> mister</c><00:16:59.520><c> time</c><00:17:00.860><c> so</c>

00:17:01.850 --> 00:17:01.860 align:start position:0%
of what you want usually mister time so
 

00:17:01.860 --> 00:17:05.030 align:start position:0%
of what you want usually mister time so
well<00:17:02.550><c> now</c><00:17:02.730><c> look</c><00:17:02.910><c> at</c><00:17:03.030><c> its</c><00:17:03.270><c> implementation</c><00:17:04.230><c> so</c>

00:17:05.030 --> 00:17:05.040 align:start position:0%
well now look at its implementation so
 

00:17:05.040 --> 00:17:05.929 align:start position:0%
well now look at its implementation so
the<00:17:05.130><c> first</c><00:17:05.280><c> thing</c><00:17:05.370><c> we</c><00:17:05.430><c> want</c><00:17:05.550><c> to</c><00:17:05.579><c> do</c><00:17:05.699><c> is</c><00:17:05.819><c> on</c>

00:17:05.929 --> 00:17:05.939 align:start position:0%
the first thing we want to do is on
 

00:17:05.939 --> 00:17:07.250 align:start position:0%
the first thing we want to do is on
start<00:17:06.240><c> so</c><00:17:06.480><c> that's</c><00:17:06.630><c> when</c><00:17:06.780><c> we'll</c><00:17:06.900><c> start</c><00:17:07.050><c> running</c>

00:17:07.250 --> 00:17:07.260 align:start position:0%
start so that's when we'll start running
 

00:17:07.260 --> 00:17:09.770 align:start position:0%
start so that's when we'll start running
our<00:17:07.530><c> piece</c><00:17:08.130><c> of</c><00:17:08.250><c> code</c><00:17:08.400><c> and</c><00:17:09.240><c> say</c><00:17:09.420><c> well</c><00:17:09.540><c> create</c><00:17:09.750><c> a</c>

00:17:09.770 --> 00:17:09.780 align:start position:0%
our piece of code and say well create a
 

00:17:09.780 --> 00:17:11.780 align:start position:0%
our piece of code and say well create a
co-routine<00:17:10.140><c> scope</c><00:17:10.380><c> using</c><00:17:10.620><c> that</c><00:17:10.709><c> job</c><00:17:10.949><c> and</c><00:17:11.640><c> then</c>

00:17:11.780 --> 00:17:11.790 align:start position:0%
co-routine scope using that job and then
 

00:17:11.790 --> 00:17:12.740 align:start position:0%
co-routine scope using that job and then
we're<00:17:11.910><c> going</c><00:17:12.030><c> to</c><00:17:12.060><c> run</c><00:17:12.209><c> it</c><00:17:12.300><c> on</c><00:17:12.360><c> the</c><00:17:12.420><c> dispatch</c>

00:17:12.740 --> 00:17:12.750 align:start position:0%
we're going to run it on the dispatch
 

00:17:12.750 --> 00:17:14.300 align:start position:0%
we're going to run it on the dispatch
it's<00:17:12.870><c> not</c><00:17:12.959><c> main</c><00:17:13.110><c> you</c><00:17:13.650><c> can</c><00:17:13.829><c> choose</c><00:17:14.010><c> what</c><00:17:14.160><c> that</c>

00:17:14.300 --> 00:17:14.310 align:start position:0%
it's not main you can choose what that
 

00:17:14.310 --> 00:17:16.160 align:start position:0%
it's not main you can choose what that
be<00:17:14.459><c> and</c><00:17:15.329><c> then</c><00:17:15.420><c> we'll</c><00:17:15.540><c> call</c><00:17:15.600><c> skip</c><00:17:15.839><c> that</c><00:17:15.959><c> launch</c>

00:17:16.160 --> 00:17:16.170 align:start position:0%
be and then we'll call skip that launch
 

00:17:16.170 --> 00:17:17.870 align:start position:0%
be and then we'll call skip that launch
and<00:17:16.500><c> then</c><00:17:16.650><c> just</c><00:17:16.860><c> call</c><00:17:17.010><c> our</c><00:17:17.130><c> lambda</c><00:17:17.280><c> pretty</c>

00:17:17.870 --> 00:17:17.880 align:start position:0%
and then just call our lambda pretty
 

00:17:17.880 --> 00:17:20.630 align:start position:0%
and then just call our lambda pretty
simple<00:17:18.089><c> really</c><00:17:18.180><c> and</c><00:17:18.860><c> then</c><00:17:19.860><c> finally</c><00:17:20.189><c> a</c><00:17:20.370><c> non</c>

00:17:20.630 --> 00:17:20.640 align:start position:0%
simple really and then finally a non
 

00:17:20.640 --> 00:17:22.939 align:start position:0%
simple really and then finally a non
stop<00:17:20.939><c> which</c><00:17:21.420><c> seems</c><00:17:22.079><c> like</c><00:17:22.170><c> a</c><00:17:22.199><c> good</c><00:17:22.380><c> life</c><00:17:22.740><c> cycle</c>

00:17:22.939 --> 00:17:22.949 align:start position:0%
stop which seems like a good life cycle
 

00:17:22.949 --> 00:17:25.699 align:start position:0%
stop which seems like a good life cycle
to<00:17:22.980><c> use</c><00:17:23.189><c> that</c><00:17:24.000><c> will</c><00:17:24.120><c> call</c><00:17:24.360><c> in</c><00:17:25.140><c> that</c><00:17:25.319><c> keys</c><00:17:25.530><c> go</c>

00:17:25.699 --> 00:17:25.709 align:start position:0%
to use that will call in that keys go
 

00:17:25.709 --> 00:17:27.679 align:start position:0%
to use that will call in that keys go
but<00:17:25.890><c> we'll</c><00:17:26.010><c> eventually</c><00:17:26.220><c> cancel</c><00:17:26.850><c> the</c><00:17:26.910><c> job</c><00:17:27.089><c> and</c>

00:17:27.679 --> 00:17:27.689 align:start position:0%
but we'll eventually cancel the job and
 

00:17:27.689 --> 00:17:28.820 align:start position:0%
but we'll eventually cancel the job and
that<00:17:27.750><c> will</c><00:17:27.870><c> means</c><00:17:28.020><c> that</c><00:17:28.140><c> co-routine</c><00:17:28.530><c> if</c><00:17:28.710><c> it's</c>

00:17:28.820 --> 00:17:28.830 align:start position:0%
that will means that co-routine if it's
 

00:17:28.830 --> 00:17:30.520 align:start position:0%
that will means that co-routine if it's
still<00:17:28.980><c> during</c><00:17:29.220><c> that</c><00:17:29.340><c> point</c><00:17:29.550><c> will</c><00:17:29.700><c> be</c><00:17:29.790><c> canceled</c>

00:17:30.520 --> 00:17:30.530 align:start position:0%
still during that point will be canceled
 

00:17:30.530 --> 00:17:32.270 align:start position:0%
still during that point will be canceled
so<00:17:31.530><c> if</c><00:17:31.590><c> you</c><00:17:31.650><c> can</c><00:17:31.740><c> see</c><00:17:31.830><c> that</c><00:17:31.980><c> code</c><00:17:32.130><c> isn't</c>

00:17:32.270 --> 00:17:32.280 align:start position:0%
so if you can see that code isn't
 

00:17:32.280 --> 00:17:33.680 align:start position:0%
so if you can see that code isn't
actually<00:17:32.550><c> that</c><00:17:32.640><c> complex</c><00:17:32.940><c> it's</c><00:17:33.210><c> like</c><00:17:33.360><c> okay</c>

00:17:33.680 --> 00:17:33.690 align:start position:0%
actually that complex it's like okay
 

00:17:33.690 --> 00:17:35.840 align:start position:0%
actually that complex it's like okay
with<00:17:33.840><c> Ethan</c><00:17:34.320><c> at</c><00:17:34.470><c> 100x</c><00:17:34.920><c> so</c><00:17:35.070><c> it's</c><00:17:35.220><c> not</c><00:17:35.370><c> nice</c><00:17:35.640><c> to</c>

00:17:35.840 --> 00:17:35.850 align:start position:0%
with Ethan at 100x so it's not nice to
 

00:17:35.850 --> 00:17:38.060 align:start position:0%
with Ethan at 100x so it's not nice to
use<00:17:36.090><c> but</c><00:17:36.360><c> in</c><00:17:36.570><c> actually</c><00:17:36.900><c> you</c><00:17:37.290><c> look</c><00:17:37.470><c> at</c><00:17:37.590><c> the</c><00:17:37.650><c> sort</c>

00:17:38.060 --> 00:17:38.070 align:start position:0%
use but in actually you look at the sort
 

00:17:38.070 --> 00:17:39.350 align:start position:0%
use but in actually you look at the sort
of<00:17:38.130><c> deep</c><00:17:38.250><c> down</c><00:17:38.430><c> of</c><00:17:38.550><c> it</c><00:17:38.670><c> it's</c><00:17:38.820><c> actually</c><00:17:39.000><c> pretty</c>

00:17:39.350 --> 00:17:39.360 align:start position:0%
of deep down of it it's actually pretty
 

00:17:39.360 --> 00:17:42.410 align:start position:0%
of deep down of it it's actually pretty
simple<00:17:39.860><c> and</c><00:17:40.860><c> then</c><00:17:41.550><c> to</c><00:17:41.640><c> actually</c><00:17:41.910><c> finish</c><00:17:42.240><c> it</c>

00:17:42.410 --> 00:17:42.420 align:start position:0%
simple and then to actually finish it
 

00:17:42.420 --> 00:17:43.550 align:start position:0%
simple and then to actually finish it
all<00:17:42.510><c> off</c><00:17:42.540><c> will</c><00:17:42.900><c> provide</c><00:17:43.080><c> a</c><00:17:43.140><c> nice</c><00:17:43.320><c> build</c>

00:17:43.550 --> 00:17:43.560 align:start position:0%
all off will provide a nice build
 

00:17:43.560 --> 00:17:45.620 align:start position:0%
all off will provide a nice build
function<00:17:43.980><c> and</c><00:17:44.610><c> you</c><00:17:44.790><c> pass</c><00:17:44.940><c> it</c><00:17:45.060><c> a</c><00:17:45.090><c> lambda</c><00:17:45.270><c> and</c><00:17:45.540><c> it</c>

00:17:45.620 --> 00:17:45.630 align:start position:0%
function and you pass it a lambda and it
 

00:17:45.630 --> 00:17:47.260 align:start position:0%
function and you pass it a lambda and it
will<00:17:45.750><c> automatically</c><00:17:46.200><c> add</c><00:17:46.320><c> it</c><00:17:46.350><c> for</c><00:17:46.920><c> you</c>

00:17:47.260 --> 00:17:47.270 align:start position:0%
will automatically add it for you
 

00:17:47.270 --> 00:17:50.270 align:start position:0%
will automatically add it for you
and<00:17:48.270><c> what</c><00:17:49.140><c> it</c><00:17:49.200><c> allows</c><00:17:49.470><c> us</c><00:17:49.500><c> to</c><00:17:49.710><c> do</c><00:17:49.920><c> is</c><00:17:50.040><c> stuff</c>

00:17:50.270 --> 00:17:50.280 align:start position:0%
and what it allows us to do is stuff
 

00:17:50.280 --> 00:17:51.980 align:start position:0%
and what it allows us to do is stuff
like<00:17:50.430><c> this</c><00:17:50.610><c> so</c><00:17:51.450><c> we're</c><00:17:51.570><c> here</c><00:17:51.690><c> we</c><00:17:51.780><c> have</c><00:17:51.810><c> a</c>

00:17:51.980 --> 00:17:51.990 align:start position:0%
like this so we're here we have a
 

00:17:51.990 --> 00:17:54.830 align:start position:0%
like this so we're here we have a
details<00:17:52.410><c> fragment</c><00:17:52.590><c> and</c><00:17:53.400><c> um</c><00:17:53.730><c> decorated</c><00:17:54.270><c> we</c>

00:17:54.830 --> 00:17:54.840 align:start position:0%
details fragment and um decorated we
 

00:17:54.840 --> 00:17:56.240 align:start position:0%
details fragment and um decorated we
will<00:17:54.990><c> use</c><00:17:55.140><c> our</c><00:17:55.380><c> live</c><00:17:55.590><c> scope</c><00:17:55.830><c> accent</c>

00:17:56.240 --> 00:17:56.250 align:start position:0%
will use our live scope accent
 

00:17:56.250 --> 00:17:58.160 align:start position:0%
will use our live scope accent
revolution<00:17:56.640><c> and</c><00:17:57.300><c> then</c><00:17:57.450><c> just</c><00:17:57.630><c> run</c><00:17:57.810><c> something</c>

00:17:58.160 --> 00:17:58.170 align:start position:0%
revolution and then just run something
 

00:17:58.170 --> 00:18:00.350 align:start position:0%
revolution and then just run something
and<00:17:58.680><c> that</c><00:17:58.800><c> will</c><00:17:58.890><c> automatically</c><00:17:59.310><c> started</c><00:17:59.850><c> when</c>

00:18:00.350 --> 00:18:00.360 align:start position:0%
and that will automatically started when
 

00:18:00.360 --> 00:18:02.330 align:start position:0%
and that will automatically started when
we<00:18:00.450><c> get</c><00:18:00.600><c> to</c><00:18:00.810><c> it'll</c><00:18:01.410><c> be</c><00:18:01.500><c> started</c><00:18:01.860><c> when</c><00:18:01.920><c> we</c><00:18:02.040><c> go</c><00:18:02.160><c> at</c>

00:18:02.330 --> 00:18:02.340 align:start position:0%
we get to it'll be started when we go at
 

00:18:02.340 --> 00:18:04.070 align:start position:0%
we get to it'll be started when we go at
start<00:18:02.700><c> and</c><00:18:02.850><c> the</c><00:18:03.000><c> new</c><00:18:03.120><c> fragment</c><00:18:03.510><c> and</c><00:18:03.660><c> they'll</c>

00:18:04.070 --> 00:18:04.080 align:start position:0%
start and the new fragment and they'll
 

00:18:04.080 --> 00:18:07.520 align:start position:0%
start and the new fragment and they'll
be<00:18:04.260><c> closed</c><00:18:04.860><c> or</c><00:18:05.070><c> ended</c><00:18:05.490><c> when</c><00:18:06.360><c> we</c><00:18:06.690><c> get</c><00:18:07.050><c> on</c><00:18:07.170><c> on</c>

00:18:07.520 --> 00:18:07.530 align:start position:0%
be closed or ended when we get on on
 

00:18:07.530 --> 00:18:12.110 align:start position:0%
be closed or ended when we get on on
stop<00:18:09.860><c> brings</c><00:18:10.860><c> it</c><00:18:10.950><c> on</c><00:18:10.980><c> to</c><00:18:11.130><c> cancellation</c><00:18:11.430><c> right</c>

00:18:12.110 --> 00:18:12.120 align:start position:0%
stop brings it on to cancellation right
 

00:18:12.120 --> 00:18:13.400 align:start position:0%
stop brings it on to cancellation right
we've<00:18:12.270><c> talked</c><00:18:12.510><c> a</c><00:18:12.600><c> lot</c><00:18:12.630><c> about</c><00:18:12.780><c> this</c><00:18:13.050><c> idea</c><00:18:13.230><c> of</c>

00:18:13.400 --> 00:18:13.410 align:start position:0%
we've talked a lot about this idea of
 

00:18:13.410 --> 00:18:15.080 align:start position:0%
we've talked a lot about this idea of
cancelling<00:18:13.890><c> a</c><00:18:13.980><c> KO</c><00:18:14.130><c> routine</c><00:18:14.430><c> but</c><00:18:14.790><c> what</c>

00:18:15.080 --> 00:18:15.090 align:start position:0%
cancelling a KO routine but what
 

00:18:15.090 --> 00:18:17.060 align:start position:0%
cancelling a KO routine but what
actually<00:18:15.210><c> happens</c><00:18:15.810><c> when</c><00:18:16.080><c> this</c><00:18:16.380><c> thing</c><00:18:16.440><c> cancels</c>

00:18:17.060 --> 00:18:17.070 align:start position:0%
actually happens when this thing cancels
 

00:18:17.070 --> 00:18:18.260 align:start position:0%
actually happens when this thing cancels
I<00:18:17.190><c> mean</c><00:18:17.310><c> if</c><00:18:17.400><c> you</c><00:18:17.460><c> just</c><00:18:17.640><c> have</c><00:18:17.760><c> kind</c><00:18:17.880><c> of</c><00:18:17.970><c> a</c><00:18:18.060><c> block</c>

00:18:18.260 --> 00:18:18.270 align:start position:0%
I mean if you just have kind of a block
 

00:18:18.270 --> 00:18:20.540 align:start position:0%
I mean if you just have kind of a block
of<00:18:18.300><c> code</c><00:18:18.630><c> that's</c><00:18:19.020><c> running</c><00:18:19.200><c> what</c><00:18:20.130><c> gets</c><00:18:20.310><c> torn</c>

00:18:20.540 --> 00:18:20.550 align:start position:0%
of code that's running what gets torn
 

00:18:20.550 --> 00:18:21.920 align:start position:0%
of code that's running what gets torn
down<00:18:20.730><c> what</c><00:18:21.030><c> do</c><00:18:21.090><c> you</c><00:18:21.180><c> need</c><00:18:21.300><c> to</c><00:18:21.390><c> do</c><00:18:21.510><c> to</c><00:18:21.660><c> sort</c><00:18:21.810><c> of</c>

00:18:21.920 --> 00:18:21.930 align:start position:0%
down what do you need to do to sort of
 

00:18:21.930 --> 00:18:25.640 align:start position:0%
down what do you need to do to sort of
clean<00:18:22.110><c> up</c><00:18:22.850><c> so</c><00:18:24.110><c> when</c><00:18:25.110><c> a</c><00:18:25.140><c> KO</c><00:18:25.320><c> routine</c><00:18:25.560><c> is</c>

00:18:25.640 --> 00:18:25.650 align:start position:0%
clean up so when a KO routine is
 

00:18:25.650 --> 00:18:27.260 align:start position:0%
clean up so when a KO routine is
cancelled<00:18:26.100><c> if</c><00:18:26.280><c> it's</c><00:18:26.430><c> cancelled</c><00:18:26.820><c> while</c><00:18:27.060><c> it's</c>

00:18:27.260 --> 00:18:27.270 align:start position:0%
cancelled if it's cancelled while it's
 

00:18:27.270 --> 00:18:29.600 align:start position:0%
cancelled if it's cancelled while it's
suspended<00:18:27.690><c> so</c><00:18:28.170><c> it's</c><00:18:28.770><c> waiting</c><00:18:29.130><c> on</c><00:18:29.220><c> something</c>

00:18:29.600 --> 00:18:29.610 align:start position:0%
suspended so it's waiting on something
 

00:18:29.610 --> 00:18:31.580 align:start position:0%
suspended so it's waiting on something
else<00:18:29.730><c> to</c><00:18:29.880><c> happen</c><00:18:30.060><c> in</c><00:18:30.510><c> callback</c><00:18:30.990><c> terms</c><00:18:31.290><c> the</c>

00:18:31.580 --> 00:18:31.590 align:start position:0%
else to happen in callback terms the
 

00:18:31.590 --> 00:18:33.190 align:start position:0%
else to happen in callback terms the
callback<00:18:31.890><c> just</c><00:18:32.100><c> hasn't</c><00:18:32.250><c> been</c><00:18:32.370><c> invoked</c><00:18:32.670><c> yet</c>

00:18:33.190 --> 00:18:33.200 align:start position:0%
callback just hasn't been invoked yet
 

00:18:33.200 --> 00:18:35.840 align:start position:0%
callback just hasn't been invoked yet
it'll<00:18:34.200><c> throw</c><00:18:34.470><c> a</c><00:18:34.560><c> cancellation</c><00:18:35.280><c> exception</c><00:18:35.730><c> or</c>

00:18:35.840 --> 00:18:35.850 align:start position:0%
it'll throw a cancellation exception or
 

00:18:35.850 --> 00:18:37.940 align:start position:0%
it'll throw a cancellation exception or
rather<00:18:36.030><c> the</c><00:18:36.480><c> curtain</c><00:18:36.870><c> will</c><00:18:37.020><c> resume</c><00:18:37.410><c> from</c><00:18:37.770><c> the</c>

00:18:37.940 --> 00:18:37.950 align:start position:0%
rather the curtain will resume from the
 

00:18:37.950 --> 00:18:39.680 align:start position:0%
rather the curtain will resume from the
point<00:18:38.160><c> that</c><00:18:38.280><c> it</c><00:18:38.460><c> was</c><00:18:38.550><c> suspended</c><00:18:39.180><c> with</c><00:18:39.660><c> a</c>

00:18:39.680 --> 00:18:39.690 align:start position:0%
point that it was suspended with a
 

00:18:39.690 --> 00:18:42.740 align:start position:0%
point that it was suspended with a
cancellation<00:18:40.380><c> exception</c><00:18:41.480><c> so</c><00:18:42.480><c> what</c><00:18:42.630><c> does</c><00:18:42.720><c> that</c>

00:18:42.740 --> 00:18:42.750 align:start position:0%
cancellation exception so what does that
 

00:18:42.750 --> 00:18:44.240 align:start position:0%
cancellation exception so what does that
actually<00:18:42.960><c> look</c><00:18:43.170><c> like</c><00:18:43.500><c> here's</c><00:18:43.740><c> our</c><00:18:43.830><c> example</c>

00:18:44.240 --> 00:18:44.250 align:start position:0%
actually look like here's our example
 

00:18:44.250 --> 00:18:46.040 align:start position:0%
actually look like here's our example
from<00:18:44.340><c> before</c><00:18:44.430><c> so</c><00:18:45.090><c> what</c><00:18:45.330><c> happens</c><00:18:45.570><c> if</c><00:18:45.690><c> we</c><00:18:45.810><c> need</c>

00:18:46.040 --> 00:18:46.050 align:start position:0%
from before so what happens if we need
 

00:18:46.050 --> 00:18:47.360 align:start position:0%
from before so what happens if we need
to<00:18:46.080><c> clean</c><00:18:46.380><c> something</c><00:18:46.680><c> up</c><00:18:46.950><c> if</c><00:18:47.130><c> this</c><00:18:47.220><c> is</c>

00:18:47.360 --> 00:18:47.370 align:start position:0%
to clean something up if this is
 

00:18:47.370 --> 00:18:48.920 align:start position:0%
to clean something up if this is
canceled<00:18:47.790><c> in</c><00:18:47.880><c> the</c><00:18:47.940><c> middle</c><00:18:48.210><c> of</c><00:18:48.390><c> that</c><00:18:48.510><c> update</c>

00:18:48.920 --> 00:18:48.930 align:start position:0%
canceled in the middle of that update
 

00:18:48.930 --> 00:18:52.640 align:start position:0%
canceled in the middle of that update
show<00:18:49.170><c> function</c><00:18:50.120><c> well</c><00:18:51.260><c> because</c><00:18:52.260><c> if</c><00:18:52.380><c> there's</c><00:18:52.560><c> a</c>

00:18:52.640 --> 00:18:52.650 align:start position:0%
show function well because if there's a
 

00:18:52.650 --> 00:18:54.440 align:start position:0%
show function well because if there's a
cancellation<00:18:53.160><c> exception</c><00:18:53.610><c> this</c><00:18:53.850><c> is</c><00:18:53.910><c> something</c>

00:18:54.440 --> 00:18:54.450 align:start position:0%
cancellation exception this is something
 

00:18:54.450 --> 00:18:56.000 align:start position:0%
cancellation exception this is something
that<00:18:54.480><c> we</c><00:18:54.690><c> kind</c><00:18:54.810><c> of</c><00:18:54.960><c> know</c><00:18:55.080><c> how</c><00:18:55.200><c> to</c><00:18:55.230><c> do</c><00:18:55.470><c> already</c><00:18:55.740><c> a</c>

00:18:56.000 --> 00:18:56.010 align:start position:0%
that we kind of know how to do already a
 

00:18:56.010 --> 00:18:58.190 align:start position:0%
that we kind of know how to do already a
plain<00:18:56.520><c> old</c><00:18:56.670><c> finally</c><00:18:57.090><c> blocks</c><00:18:57.330><c> run</c><00:18:57.630><c> is</c><00:18:57.720><c> expected</c>

00:18:58.190 --> 00:18:58.200 align:start position:0%
plain old finally blocks run is expected
 

00:18:58.200 --> 00:18:59.780 align:start position:0%
plain old finally blocks run is expected
we<00:18:58.320><c> didn't</c><00:18:58.560><c> have</c><00:18:58.680><c> to</c><00:18:58.770><c> add</c><00:18:58.890><c> any</c><00:18:59.130><c> new</c><00:18:59.160><c> concepts</c>

00:18:59.780 --> 00:18:59.790 align:start position:0%
we didn't have to add any new concepts
 

00:18:59.790 --> 00:19:01.250 align:start position:0%
we didn't have to add any new concepts
beyond<00:19:00.120><c> what</c><00:19:00.300><c> we</c><00:19:00.390><c> already</c><00:19:00.600><c> know</c><00:19:00.930><c> from</c><00:19:01.170><c> the</c>

00:19:01.250 --> 00:19:01.260 align:start position:0%
beyond what we already know from the
 

00:19:01.260 --> 00:19:04.580 align:start position:0%
beyond what we already know from the
rest<00:19:01.500><c> of</c><00:19:01.650><c> Kotlin</c><00:19:02.720><c> but</c><00:19:03.720><c> if</c><00:19:03.810><c> blocking</c><00:19:04.230><c> code</c><00:19:04.440><c> is</c>

00:19:04.580 --> 00:19:04.590 align:start position:0%
rest of Kotlin but if blocking code is
 

00:19:04.590 --> 00:19:06.380 align:start position:0%
rest of Kotlin but if blocking code is
running<00:19:04.800><c> cancellation</c><00:19:05.790><c> requires</c><00:19:06.120><c> some</c>

00:19:06.380 --> 00:19:06.390 align:start position:0%
running cancellation requires some
 

00:19:06.390 --> 00:19:08.210 align:start position:0%
running cancellation requires some
explicit<00:19:06.720><c> cooperation</c><00:19:07.560><c> in</c><00:19:07.680><c> order</c><00:19:07.890><c> to</c><00:19:08.010><c> stop</c>

00:19:08.210 --> 00:19:08.220 align:start position:0%
explicit cooperation in order to stop
 

00:19:08.220 --> 00:19:11.090 align:start position:0%
explicit cooperation in order to stop
what<00:19:08.400><c> it's</c><00:19:08.520><c> doing</c><00:19:09.260><c> so</c><00:19:10.260><c> we</c><00:19:10.470><c> can</c><00:19:10.620><c> check</c><00:19:10.830><c> for</c><00:19:11.010><c> that</c>

00:19:11.090 --> 00:19:11.100 align:start position:0%
what it's doing so we can check for that
 

00:19:11.100 --> 00:19:13.040 align:start position:0%
what it's doing so we can check for that
cancellation<00:19:11.580><c> explicitly</c><00:19:12.510><c> in</c><00:19:12.630><c> a</c><00:19:12.690><c> couple</c><00:19:12.960><c> of</c>

00:19:13.040 --> 00:19:13.050 align:start position:0%
cancellation explicitly in a couple of
 

00:19:13.050 --> 00:19:15.920 align:start position:0%
cancellation explicitly in a couple of
ways<00:19:13.970><c> generally</c><00:19:14.970><c> this</c><00:19:15.090><c> means</c><00:19:15.360><c> checking</c><00:19:15.810><c> to</c>

00:19:15.920 --> 00:19:15.930 align:start position:0%
ways generally this means checking to
 

00:19:15.930 --> 00:19:17.780 align:start position:0%
ways generally this means checking to
see<00:19:16.110><c> if</c><00:19:16.140><c> your</c><00:19:16.440><c> codeine</c><00:19:16.860><c> is</c><00:19:17.010><c> currently</c><00:19:17.370><c> active</c>

00:19:17.780 --> 00:19:17.790 align:start position:0%
see if your codeine is currently active
 

00:19:17.790 --> 00:19:19.160 align:start position:0%
see if your codeine is currently active
in<00:19:17.910><c> one</c><00:19:18.060><c> way</c><00:19:18.210><c> shape</c><00:19:18.240><c> or</c><00:19:18.570><c> form</c><00:19:18.630><c> and</c><00:19:18.960><c> there</c><00:19:19.080><c> are</c><00:19:19.140><c> a</c>

00:19:19.160 --> 00:19:19.170 align:start position:0%
in one way shape or form and there are a
 

00:19:19.170 --> 00:19:21.130 align:start position:0%
in one way shape or form and there are a
couple<00:19:19.290><c> of</c><00:19:19.440><c> useful</c><00:19:19.620><c> patterns</c><00:19:20.130><c> for</c><00:19:20.370><c> doing</c><00:19:20.610><c> this</c>

00:19:21.130 --> 00:19:21.140 align:start position:0%
couple of useful patterns for doing this
 

00:19:21.140 --> 00:19:23.900 align:start position:0%
couple of useful patterns for doing this
so<00:19:22.140><c> one</c><00:19:22.680><c> of</c><00:19:22.710><c> those</c><00:19:22.890><c> patterns</c><00:19:23.160><c> is</c><00:19:23.550><c> that</c><00:19:23.730><c> if</c><00:19:23.820><c> you</c>

00:19:23.900 --> 00:19:23.910 align:start position:0%
so one of those patterns is that if you
 

00:19:23.910 --> 00:19:25.580 align:start position:0%
so one of those patterns is that if you
know<00:19:24.090><c> that</c><00:19:24.330><c> your</c><00:19:24.420><c> job</c><00:19:24.600><c> is</c><00:19:24.630><c> already</c><00:19:25.080><c> cancelled</c>

00:19:25.580 --> 00:19:25.590 align:start position:0%
know that your job is already cancelled
 

00:19:25.590 --> 00:19:27.350 align:start position:0%
know that your job is already cancelled
you<00:19:26.100><c> can</c><00:19:26.250><c> call</c><00:19:26.430><c> any</c><00:19:26.670><c> one</c><00:19:26.910><c> of</c><00:19:26.940><c> the</c><00:19:27.120><c> stock</c>

00:19:27.350 --> 00:19:27.360 align:start position:0%
you can call any one of the stock
 

00:19:27.360 --> 00:19:29.690 align:start position:0%
you can call any one of the stock
suspending<00:19:27.990><c> methods</c><00:19:28.350><c> such</c><00:19:28.590><c> as</c><00:19:28.620><c> yield</c><00:19:29.070><c> use</c><00:19:29.280><c> the</c>

00:19:29.690 --> 00:19:29.700 align:start position:0%
suspending methods such as yield use the
 

00:19:29.700 --> 00:19:31.610 align:start position:0%
suspending methods such as yield use the
example<00:19:30.150><c> here</c><00:19:30.480><c> to</c><00:19:31.140><c> force</c><00:19:31.350><c> the</c><00:19:31.470><c> cancellation</c>

00:19:31.610 --> 00:19:31.620 align:start position:0%
example here to force the cancellation
 

00:19:31.620 --> 00:19:33.560 align:start position:0%
example here to force the cancellation
exception<00:19:32.400><c> to</c><00:19:32.460><c> be</c><00:19:32.550><c> thrown</c><00:19:32.850><c> relying</c><00:19:33.240><c> on</c><00:19:33.390><c> that</c>

00:19:33.560 --> 00:19:33.570 align:start position:0%
exception to be thrown relying on that
 

00:19:33.570 --> 00:19:35.000 align:start position:0%
exception to be thrown relying on that
standards<00:19:34.020><c> and</c><00:19:34.200><c> implementation</c><00:19:34.890><c> that</c><00:19:34.950><c> I</c>

00:19:35.000 --> 00:19:35.010 align:start position:0%
standards and implementation that I
 

00:19:35.010 --> 00:19:37.040 align:start position:0%
standards and implementation that I
mentioned<00:19:35.340><c> before</c><00:19:35.430><c> that</c><00:19:36.030><c> if</c><00:19:36.270><c> you're</c>

00:19:37.040 --> 00:19:37.050 align:start position:0%
mentioned before that if you're
 

00:19:37.050 --> 00:19:39.140 align:start position:0%
mentioned before that if you're
cancelled<00:19:37.560><c> when</c><00:19:38.070><c> you're</c><00:19:38.250><c> trying</c><00:19:38.460><c> to</c><00:19:38.610><c> suspend</c>

00:19:39.140 --> 00:19:39.150 align:start position:0%
cancelled when you're trying to suspend
 

00:19:39.150 --> 00:19:40.340 align:start position:0%
cancelled when you're trying to suspend
then<00:19:39.600><c> you'll</c><00:19:39.750><c> resume</c><00:19:40.050><c> with</c><00:19:40.200><c> that</c>

00:19:40.340 --> 00:19:40.350 align:start position:0%
then you'll resume with that
 

00:19:40.350 --> 00:19:42.020 align:start position:0%
then you'll resume with that
cancellation<00:19:40.770><c> exception</c><00:19:41.370><c> so</c><00:19:41.760><c> we</c><00:19:41.880><c> know</c><00:19:42.000><c> that</c>

00:19:42.020 --> 00:19:42.030 align:start position:0%
cancellation exception so we know that
 

00:19:42.030 --> 00:19:43.700 align:start position:0%
cancellation exception so we know that
this<00:19:42.300><c> will</c><00:19:42.480><c> immediately</c><00:19:42.570><c> throw</c><00:19:43.290><c> if</c><00:19:43.470><c> we</c><00:19:43.590><c> happen</c>

00:19:43.700 --> 00:19:43.710 align:start position:0%
this will immediately throw if we happen
 

00:19:43.710 --> 00:19:46.880 align:start position:0%
this will immediately throw if we happen
to<00:19:43.860><c> be</c><00:19:43.980><c> cancelled</c><00:19:45.230><c> but</c><00:19:46.230><c> if</c><00:19:46.410><c> you're</c><00:19:46.530><c> in</c><00:19:46.620><c> a</c><00:19:46.680><c> tight</c>

00:19:46.880 --> 00:19:46.890 align:start position:0%
to be cancelled but if you're in a tight
 

00:19:46.890 --> 00:19:48.410 align:start position:0%
to be cancelled but if you're in a tight
loop<00:19:47.100><c> you</c><00:19:47.310><c> can</c><00:19:47.400><c> also</c><00:19:47.580><c> just</c><00:19:47.880><c> check</c><00:19:48.060><c> this</c><00:19:48.240><c> is</c>

00:19:48.410 --> 00:19:48.420 align:start position:0%
loop you can also just check this is
 

00:19:48.420 --> 00:19:51.410 align:start position:0%
loop you can also just check this is
active<00:19:48.960><c> that's</c><00:19:49.950><c> available</c><00:19:50.310><c> from</c><00:19:51.180><c> any</c>

00:19:51.410 --> 00:19:51.420 align:start position:0%
active that's available from any
 

00:19:51.420 --> 00:19:53.780 align:start position:0%
active that's available from any
suspending<00:19:51.990><c> scope</c><00:19:52.290><c> and</c><00:19:52.530><c> you</c><00:19:52.590><c> can</c><00:19:53.490><c> just</c><00:19:53.670><c> simply</c>

00:19:53.780 --> 00:19:53.790 align:start position:0%
suspending scope and you can just simply
 

00:19:53.790 --> 00:19:55.340 align:start position:0%
suspending scope and you can just simply
stop<00:19:54.180><c> what</c><00:19:54.330><c> you're</c><00:19:54.450><c> doing</c><00:19:54.750><c> there's</c><00:19:54.930><c> no</c><00:19:55.080><c> reason</c>

00:19:55.340 --> 00:19:55.350 align:start position:0%
stop what you're doing there's no reason
 

00:19:55.350 --> 00:19:57.110 align:start position:0%
stop what you're doing there's no reason
to<00:19:55.380><c> really</c><00:19:55.680><c> involve</c><00:19:55.950><c> an</c><00:19:56.310><c> exception</c><00:19:56.790><c> here</c><00:19:57.030><c> if</c>

00:19:57.110 --> 00:19:57.120 align:start position:0%
to really involve an exception here if
 

00:19:57.120 --> 00:19:58.400 align:start position:0%
to really involve an exception here if
all<00:19:57.210><c> you're</c><00:19:57.390><c> doing</c><00:19:57.420><c> is</c><00:19:57.750><c> some</c><00:19:57.930><c> sort</c><00:19:58.140><c> of</c><00:19:58.200><c> tight</c>

00:19:58.400 --> 00:19:58.410 align:start position:0%
all you're doing is some sort of tight
 

00:19:58.410 --> 00:19:59.270 align:start position:0%
all you're doing is some sort of tight
inner<00:19:58.650><c> computation</c>

00:19:59.270 --> 00:19:59.280 align:start position:0%
inner computation
 

00:19:59.280 --> 00:20:02.420 align:start position:0%
inner computation
Loup<00:19:59.490><c> that</c><00:19:59.700><c> you</c><00:19:59.760><c> need</c><00:19:59.910><c> to</c><00:20:00.030><c> break</c><00:20:00.240><c> out</c><00:20:00.420><c> of</c><00:20:01.430><c> which</c>

00:20:02.420 --> 00:20:02.430 align:start position:0%
Loup that you need to break out of which
 

00:20:02.430 --> 00:20:04.040 align:start position:0%
Loup that you need to break out of which
kind<00:20:02.730><c> of</c><00:20:02.790><c> leads</c><00:20:02.970><c> nicely</c><00:20:03.120><c> up</c><00:20:03.480><c> into</c><00:20:03.780><c> how</c>

00:20:04.040 --> 00:20:04.050 align:start position:0%
kind of leads nicely up into how
 

00:20:04.050 --> 00:20:05.720 align:start position:0%
kind of leads nicely up into how
exceptions<00:20:04.710><c> are</c><00:20:04.830><c> handled</c><00:20:05.160><c> with</c><00:20:05.190><c> co-routines</c>

00:20:05.720 --> 00:20:05.730 align:start position:0%
exceptions are handled with co-routines
 

00:20:05.730 --> 00:20:07.340 align:start position:0%
exceptions are handled with co-routines
in<00:20:05.880><c> general</c><00:20:06.240><c> and</c><00:20:06.450><c> there</c><00:20:06.960><c> are</c><00:20:06.990><c> a</c><00:20:07.080><c> few</c><00:20:07.230><c> things</c>

00:20:07.340 --> 00:20:07.350 align:start position:0%
in general and there are a few things
 

00:20:07.350 --> 00:20:08.540 align:start position:0%
in general and there are a few things
that<00:20:07.530><c> are</c><00:20:07.650><c> really</c><00:20:07.890><c> worth</c><00:20:08.010><c> pointing</c><00:20:08.400><c> out</c>

00:20:08.540 --> 00:20:08.550 align:start position:0%
that are really worth pointing out
 

00:20:08.550 --> 00:20:10.220 align:start position:0%
that are really worth pointing out
especially<00:20:08.850><c> if</c><00:20:09.360><c> you</c><00:20:09.570><c> followed</c><00:20:09.900><c> some</c><00:20:10.080><c> of</c><00:20:10.170><c> the</c>

00:20:10.220 --> 00:20:10.230 align:start position:0%
especially if you followed some of the
 

00:20:10.230 --> 00:20:12.050 align:start position:0%
especially if you followed some of the
Kotlin<00:20:10.500><c> exco</c><00:20:10.980><c> routines</c><00:20:11.310><c> development</c><00:20:11.850><c> leading</c>

00:20:12.050 --> 00:20:12.060 align:start position:0%
Kotlin exco routines development leading
 

00:20:12.060 --> 00:20:13.490 align:start position:0%
Kotlin exco routines development leading
up<00:20:12.240><c> to</c><00:20:12.270><c> release</c><00:20:12.660><c> because</c><00:20:12.930><c> there</c><00:20:13.110><c> were</c><00:20:13.320><c> some</c>

00:20:13.490 --> 00:20:13.500 align:start position:0%
up to release because there were some
 

00:20:13.500 --> 00:20:15.520 align:start position:0%
up to release because there were some
really<00:20:13.770><c> significant</c><00:20:14.400><c> changes</c><00:20:14.430><c> that</c><00:20:14.760><c> happened</c>

00:20:15.520 --> 00:20:15.530 align:start position:0%
really significant changes that happened
 

00:20:15.530 --> 00:20:18.770 align:start position:0%
really significant changes that happened
the<00:20:16.530><c> first</c><00:20:16.560><c> is</c><00:20:17.040><c> that</c><00:20:17.220><c> launch</c><00:20:17.760><c> will</c><00:20:18.210><c> wreath</c><00:20:18.450><c> row</c>

00:20:18.770 --> 00:20:18.780 align:start position:0%
the first is that launch will wreath row
 

00:20:18.780 --> 00:20:21.320 align:start position:0%
the first is that launch will wreath row
unhandled<00:20:19.470><c> exceptions</c><00:20:20.070><c> as</c><00:20:20.250><c> they</c><00:20:20.370><c> happen</c><00:20:20.730><c> so</c>

00:20:21.320 --> 00:20:21.330 align:start position:0%
unhandled exceptions as they happen so
 

00:20:21.330 --> 00:20:23.330 align:start position:0%
unhandled exceptions as they happen so
more<00:20:21.600><c> precisely</c><00:20:21.750><c> it</c><00:20:22.410><c> fails</c><00:20:22.680><c> the</c><00:20:22.890><c> parent</c><00:20:23.220><c> it</c>

00:20:23.330 --> 00:20:23.340 align:start position:0%
more precisely it fails the parent it
 

00:20:23.340 --> 00:20:26.090 align:start position:0%
more precisely it fails the parent it
cancels<00:20:23.820><c> its</c><00:20:24.060><c> its</c><00:20:24.360><c> parent</c><00:20:24.900><c> job</c><00:20:25.110><c> the</c><00:20:25.770><c> parent</c>

00:20:26.090 --> 00:20:26.100 align:start position:0%
cancels its its parent job the parent
 

00:20:26.100 --> 00:20:27.620 align:start position:0%
cancels its its parent job the parent
sees<00:20:26.250><c> a</c><00:20:26.280><c> cancellation</c><00:20:27.000><c> exception</c><00:20:27.450><c> with</c><00:20:27.600><c> the</c>

00:20:27.620 --> 00:20:27.630 align:start position:0%
sees a cancellation exception with the
 

00:20:27.630 --> 00:20:30.110 align:start position:0%
sees a cancellation exception with the
original<00:20:28.200><c> exception</c><00:20:28.710><c> as</c><00:20:28.860><c> the</c><00:20:29.130><c> cause</c><00:20:29.370><c> in</c><00:20:29.880><c> the</c>

00:20:30.110 --> 00:20:30.120 align:start position:0%
original exception as the cause in the
 

00:20:30.120 --> 00:20:32.900 align:start position:0%
original exception as the cause in the
exception<00:20:30.540><c> object</c><00:20:30.870><c> itself</c><00:20:31.200><c> so</c><00:20:32.100><c> similar</c><00:20:32.760><c> to</c><00:20:32.880><c> a</c>

00:20:32.900 --> 00:20:32.910 align:start position:0%
exception object itself so similar to a
 

00:20:32.910 --> 00:20:34.040 align:start position:0%
exception object itself so similar to a
thread<00:20:33.150><c> they</c><00:20:33.270><c> get</c><00:20:33.420><c> dispatched</c><00:20:33.690><c> to</c><00:20:33.960><c> the</c>

00:20:34.040 --> 00:20:34.050 align:start position:0%
thread they get dispatched to the
 

00:20:34.050 --> 00:20:35.720 align:start position:0%
thread they get dispatched to the
default<00:20:34.410><c> exception</c><00:20:34.890><c> handler</c><00:20:35.280><c> at</c><00:20:35.400><c> the</c><00:20:35.490><c> root</c><00:20:35.640><c> of</c>

00:20:35.720 --> 00:20:35.730 align:start position:0%
default exception handler at the root of
 

00:20:35.730 --> 00:20:37.910 align:start position:0%
default exception handler at the root of
a<00:20:35.790><c> job</c><00:20:36.000><c> tree</c><00:20:36.330><c> if</c><00:20:36.450><c> nothing</c><00:20:36.750><c> else</c><00:20:36.870><c> manages</c><00:20:37.830><c> to</c>

00:20:37.910 --> 00:20:37.920 align:start position:0%
a job tree if nothing else manages to
 

00:20:37.920 --> 00:20:40.760 align:start position:0%
a job tree if nothing else manages to
handle<00:20:38.220><c> that</c><00:20:38.450><c> but</c><00:20:39.450><c> your</c><00:20:39.720><c> co</c><00:20:39.870><c> routine</c><00:20:40.170><c> context</c>

00:20:40.760 --> 00:20:40.770 align:start position:0%
handle that but your co routine context
 

00:20:40.770 --> 00:20:42.620 align:start position:0%
handle that but your co routine context
also<00:20:40.950><c> gets</c><00:20:41.460><c> a</c><00:20:41.550><c> chance</c><00:20:41.700><c> to</c><00:20:41.910><c> intercept</c><00:20:42.390><c> you</c><00:20:42.510><c> can</c>

00:20:42.620 --> 00:20:42.630 align:start position:0%
also gets a chance to intercept you can
 

00:20:42.630 --> 00:20:44.390 align:start position:0%
also gets a chance to intercept you can
attach<00:20:42.870><c> a</c><00:20:43.020><c> special</c><00:20:43.380><c> element</c><00:20:43.620><c> to</c><00:20:43.890><c> the</c><00:20:43.980><c> cur</c><00:20:44.130><c> team</c>

00:20:44.390 --> 00:20:44.400 align:start position:0%
attach a special element to the cur team
 

00:20:44.400 --> 00:20:46.580 align:start position:0%
attach a special element to the cur team
context<00:20:44.910><c> itself</c><00:20:45.210><c> that</c><00:20:45.840><c> you</c><00:20:45.930><c> can</c><00:20:46.080><c> use</c><00:20:46.260><c> to</c>

00:20:46.580 --> 00:20:46.590 align:start position:0%
context itself that you can use to
 

00:20:46.590 --> 00:20:50.360 align:start position:0%
context itself that you can use to
handle<00:20:47.100><c> on</c><00:20:47.340><c> handled</c><00:20:47.730><c> exceptions</c><00:20:48.950><c> so</c><00:20:49.950><c> let's</c><00:20:50.250><c> go</c>

00:20:50.360 --> 00:20:50.370 align:start position:0%
handle on handled exceptions so let's go
 

00:20:50.370 --> 00:20:52.160 align:start position:0%
handle on handled exceptions so let's go
ahead<00:20:50.460><c> and</c><00:20:50.550><c> see</c><00:20:50.760><c> how</c><00:20:50.790><c> that</c><00:20:50.910><c> works</c><00:20:51.170><c> here's</c>

00:20:52.160 --> 00:20:52.170 align:start position:0%
ahead and see how that works here's
 

00:20:52.170 --> 00:20:54.710 align:start position:0%
ahead and see how that works here's
again<00:20:52.500><c> our</c><00:20:52.680><c> example</c><00:20:53.040><c> from</c><00:20:53.130><c> before</c><00:20:53.220><c> and</c><00:20:53.820><c> say</c>

00:20:54.710 --> 00:20:54.720 align:start position:0%
again our example from before and say
 

00:20:54.720 --> 00:20:56.450 align:start position:0%
again our example from before and say
that<00:20:54.930><c> save</c><00:20:55.170><c> show</c><00:20:55.440><c> throws</c><00:20:55.770><c> a</c><00:20:55.890><c> very</c><00:20:56.100><c> domain</c>

00:20:56.450 --> 00:20:56.460 align:start position:0%
that save show throws a very domain
 

00:20:56.460 --> 00:20:59.720 align:start position:0%
that save show throws a very domain
specific<00:20:56.970><c> exception</c><00:20:57.420><c> in</c><00:20:57.540><c> this</c><00:20:57.630><c> case</c><00:20:58.430><c> so</c><00:20:59.430><c> in</c>

00:20:59.720 --> 00:20:59.730 align:start position:0%
specific exception in this case so in
 

00:20:59.730 --> 00:21:01.280 align:start position:0%
specific exception in this case so in
this<00:21:00.150><c> case</c><00:21:00.360><c> this</c><00:21:00.510><c> will</c><00:21:00.630><c> be</c><00:21:00.720><c> treated</c><00:21:01.020><c> like</c><00:21:01.170><c> an</c>

00:21:01.280 --> 00:21:01.290 align:start position:0%
this case this will be treated like an
 

00:21:01.290 --> 00:21:03.290 align:start position:0%
this case this will be treated like an
uncaught<00:21:01.620><c> exception</c><00:21:02.070><c> at</c><00:21:02.310><c> runtime</c><00:21:02.550><c> just</c><00:21:02.970><c> like</c>

00:21:03.290 --> 00:21:03.300 align:start position:0%
uncaught exception at runtime just like
 

00:21:03.300 --> 00:21:05.180 align:start position:0%
uncaught exception at runtime just like
anything<00:21:03.600><c> else</c><00:21:03.840><c> that</c><00:21:04.200><c> throws</c><00:21:04.470><c> an</c><00:21:04.710><c> uncaught</c>

00:21:05.180 --> 00:21:05.190 align:start position:0%
anything else that throws an uncaught
 

00:21:05.190 --> 00:21:09.260 align:start position:0%
anything else that throws an uncaught
exception<00:21:05.610><c> on</c><00:21:05.700><c> your</c><00:21:05.850><c> main</c><00:21:05.970><c> thread</c><00:21:07.250><c> so</c><00:21:08.270><c> async</c>

00:21:09.260 --> 00:21:09.270 align:start position:0%
exception on your main thread so async
 

00:21:09.270 --> 00:21:10.940 align:start position:0%
exception on your main thread so async
is<00:21:09.450><c> a</c><00:21:09.510><c> little</c><00:21:10.200><c> bit</c><00:21:10.290><c> different</c><00:21:10.650><c> if</c><00:21:10.800><c> an</c>

00:21:10.940 --> 00:21:10.950 align:start position:0%
is a little bit different if an
 

00:21:10.950 --> 00:21:12.770 align:start position:0%
is a little bit different if an
exception<00:21:11.190><c> is</c><00:21:11.400><c> thrown</c><00:21:11.580><c> well</c><00:21:12.000><c> something</c><00:21:12.570><c> that</c>

00:21:12.770 --> 00:21:12.780 align:start position:0%
exception is thrown well something that
 

00:21:12.780 --> 00:21:14.390 align:start position:0%
exception is thrown well something that
you<00:21:12.870><c> launch</c><00:21:13.050><c> with</c><00:21:13.200><c> async</c><00:21:13.530><c> is</c><00:21:13.680><c> running</c><00:21:13.980><c> it'll</c>

00:21:14.390 --> 00:21:14.400 align:start position:0%
you launch with async is running it'll
 

00:21:14.400 --> 00:21:16.100 align:start position:0%
you launch with async is running it'll
hold<00:21:14.550><c> on</c><00:21:14.700><c> to</c><00:21:14.820><c> that</c><00:21:14.910><c> exception</c><00:21:15.420><c> and</c><00:21:15.570><c> only</c><00:21:15.810><c> throw</c>

00:21:16.100 --> 00:21:16.110 align:start position:0%
hold on to that exception and only throw
 

00:21:16.110 --> 00:21:19.280 align:start position:0%
hold on to that exception and only throw
when<00:21:16.290><c> the</c><00:21:16.320><c> caller</c><00:21:16.620><c> calls</c><00:21:17.010><c> a</c><00:21:17.250><c> wait</c><00:21:17.930><c> so</c><00:21:18.930><c> coming</c>

00:21:19.280 --> 00:21:19.290 align:start position:0%
when the caller calls a wait so coming
 

00:21:19.290 --> 00:21:20.980 align:start position:0%
when the caller calls a wait so coming
back<00:21:19.320><c> to</c><00:21:19.590><c> our</c><00:21:19.620><c> example</c><00:21:20.070><c> from</c><00:21:20.190><c> before</c><00:21:20.550><c> again</c>

00:21:20.980 --> 00:21:20.990 align:start position:0%
back to our example from before again
 

00:21:20.990 --> 00:21:24.380 align:start position:0%
back to our example from before again
let's<00:21:21.990><c> go</c><00:21:22.110><c> ahead</c><00:21:22.230><c> and</c><00:21:22.470><c> use</c><00:21:22.650><c> what</c><00:21:22.830><c> we</c><00:21:22.920><c> know</c><00:21:23.390><c> we</c>

00:21:24.380 --> 00:21:24.390 align:start position:0%
let's go ahead and use what we know we
 

00:21:24.390 --> 00:21:25.910 align:start position:0%
let's go ahead and use what we know we
throw<00:21:24.840><c> our</c><00:21:24.960><c> exception</c><00:21:25.440><c> from</c><00:21:25.560><c> one</c><00:21:25.770><c> of</c><00:21:25.860><c> these</c>

00:21:25.910 --> 00:21:25.920 align:start position:0%
throw our exception from one of these
 

00:21:25.920 --> 00:21:29.390 align:start position:0%
throw our exception from one of these
async<00:21:26.370><c> jobs</c><00:21:27.380><c> but</c><00:21:28.380><c> that</c><00:21:28.500><c> gets</c><00:21:28.650><c> thrown</c><00:21:28.920><c> from</c>

00:21:29.390 --> 00:21:29.400 align:start position:0%
async jobs but that gets thrown from
 

00:21:29.400 --> 00:21:31.340 align:start position:0%
async jobs but that gets thrown from
this<00:21:29.610><c> call</c><00:21:29.880><c> to</c><00:21:30.120><c> a</c><00:21:30.150><c> weight</c><00:21:30.390><c> itself</c><00:21:30.870><c> so</c><00:21:31.110><c> we</c><00:21:31.230><c> know</c>

00:21:31.340 --> 00:21:31.350 align:start position:0%
this call to a weight itself so we know
 

00:21:31.350 --> 00:21:33.380 align:start position:0%
this call to a weight itself so we know
exactly<00:21:31.650><c> where</c><00:21:32.040><c> we</c><00:21:32.160><c> need</c><00:21:32.310><c> to</c><00:21:32.460><c> try</c><00:21:32.730><c> and</c><00:21:33.060><c> catch</c>

00:21:33.380 --> 00:21:33.390 align:start position:0%
exactly where we need to try and catch
 

00:21:33.390 --> 00:21:35.030 align:start position:0%
exactly where we need to try and catch
that<00:21:33.570><c> exception</c><00:21:33.650><c> just</c><00:21:34.650><c> kind</c><00:21:34.830><c> of</c><00:21:34.890><c> in</c><00:21:34.980><c> the</c>

00:21:35.030 --> 00:21:35.040 align:start position:0%
that exception just kind of in the
 

00:21:35.040 --> 00:21:38.090 align:start position:0%
that exception just kind of in the
normal<00:21:35.340><c> way</c><00:21:35.460><c> and</c><00:21:35.490><c> handle</c><00:21:35.910><c> that</c><00:21:36.060><c> error</c><00:21:37.100><c> but</c>

00:21:38.090 --> 00:21:38.100 align:start position:0%
normal way and handle that error but
 

00:21:38.100 --> 00:21:39.590 align:start position:0%
normal way and handle that error but
there's<00:21:38.250><c> a</c><00:21:38.310><c> gotcha</c><00:21:38.490><c> here</c><00:21:38.820><c> and</c><00:21:38.970><c> that's</c><00:21:39.330><c> that</c>

00:21:39.590 --> 00:21:39.600 align:start position:0%
there's a gotcha here and that's that
 

00:21:39.600 --> 00:21:41.960 align:start position:0%
there's a gotcha here and that's that
async<00:21:40.080><c> works</c><00:21:40.410><c> the</c><00:21:40.800><c> same</c><00:21:40.980><c> way</c><00:21:41.190><c> as</c><00:21:41.370><c> launched</c><00:21:41.670><c> in</c>

00:21:41.960 --> 00:21:41.970 align:start position:0%
async works the same way as launched in
 

00:21:41.970 --> 00:21:44.090 align:start position:0%
async works the same way as launched in
terms<00:21:42.180><c> of</c><00:21:42.330><c> how</c><00:21:42.420><c> this</c><00:21:42.780><c> nested</c><00:21:43.500><c> job</c><00:21:43.740><c> tree</c><00:21:44.010><c> is</c>

00:21:44.090 --> 00:21:44.100 align:start position:0%
terms of how this nested job tree is
 

00:21:44.100 --> 00:21:46.190 align:start position:0%
terms of how this nested job tree is
handled<00:21:44.490><c> the</c><00:21:45.150><c> deferred</c><00:21:45.480><c> object</c><00:21:45.660><c> that</c><00:21:46.110><c> it</c>

00:21:46.190 --> 00:21:46.200 align:start position:0%
handled the deferred object that it
 

00:21:46.200 --> 00:21:48.140 align:start position:0%
handled the deferred object that it
returns<00:21:46.560><c> is</c><00:21:46.830><c> just</c><00:21:47.040><c> another</c><00:21:47.220><c> kind</c><00:21:47.460><c> of</c><00:21:47.550><c> job</c><00:21:47.820><c> and</c>

00:21:48.140 --> 00:21:48.150 align:start position:0%
returns is just another kind of job and
 

00:21:48.150 --> 00:21:50.300 align:start position:0%
returns is just another kind of job and
so<00:21:48.690><c> it'll</c><00:21:48.930><c> cancel</c><00:21:49.410><c> the</c><00:21:49.500><c> parent</c><00:21:49.860><c> if</c><00:21:50.010><c> it</c><00:21:50.130><c> fails</c>

00:21:50.300 --> 00:21:50.310 align:start position:0%
so it'll cancel the parent if it fails
 

00:21:50.310 --> 00:21:52.340 align:start position:0%
so it'll cancel the parent if it fails
with<00:21:50.520><c> an</c><00:21:50.610><c> unhandled</c><00:21:50.880><c> exception</c><00:21:51.510><c> just</c><00:21:52.170><c> like</c>

00:21:52.340 --> 00:21:52.350 align:start position:0%
with an unhandled exception just like
 

00:21:52.350 --> 00:21:54.770 align:start position:0%
with an unhandled exception just like
launch<00:21:52.590><c> does</c><00:21:52.920><c> and</c><00:21:53.130><c> it'll</c><00:21:53.880><c> do</c><00:21:54.030><c> this</c><00:21:54.210><c> even</c><00:21:54.570><c> if</c><00:21:54.630><c> we</c>

00:21:54.770 --> 00:21:54.780 align:start position:0%
launch does and it'll do this even if we
 

00:21:54.780 --> 00:21:56.390 align:start position:0%
launch does and it'll do this even if we
did<00:21:54.930><c> it</c><00:21:55.020><c> in</c><00:21:55.110><c> a</c><00:21:55.170><c> weight</c><00:21:55.290><c> and</c><00:21:55.530><c> called</c><00:21:55.770><c> it</c><00:21:55.950><c> now</c>

00:21:56.390 --> 00:21:56.400 align:start position:0%
did it in a weight and called it now
 

00:21:56.400 --> 00:21:58.190 align:start position:0%
did it in a weight and called it now
this<00:21:56.640><c> is</c><00:21:56.790><c> kind</c><00:21:57.000><c> of</c><00:21:57.060><c> important</c><00:21:57.540><c> because</c><00:21:57.690><c> if</c>

00:21:58.190 --> 00:21:58.200 align:start position:0%
this is kind of important because if
 

00:21:58.200 --> 00:21:59.960 align:start position:0%
this is kind of important because if
something<00:21:58.890><c> throws</c><00:21:59.130><c> an</c><00:21:59.310><c> exception</c><00:21:59.400><c> it's</c>

00:21:59.960 --> 00:21:59.970 align:start position:0%
something throws an exception it's
 

00:21:59.970 --> 00:22:01.220 align:start position:0%
something throws an exception it's
really<00:22:00.300><c> important</c><00:22:00.660><c> that</c><00:22:00.690><c> your</c><00:22:00.840><c> app</c><00:22:00.960><c> know</c>

00:22:01.220 --> 00:22:01.230 align:start position:0%
really important that your app know
 

00:22:01.230 --> 00:22:02.210 align:start position:0%
really important that your app know
about<00:22:01.500><c> it</c><00:22:01.680><c> like</c><00:22:01.800><c> it</c><00:22:01.950><c> shouldn't</c><00:22:02.190><c> just</c>

00:22:02.210 --> 00:22:02.220 align:start position:0%
about it like it shouldn't just
 

00:22:02.220 --> 00:22:04.460 align:start position:0%
about it like it shouldn't just
disappear<00:22:02.820><c> into</c><00:22:02.940><c> the</c><00:22:03.060><c> ether</c><00:22:03.390><c> but</c><00:22:03.600><c> at</c><00:22:04.230><c> the</c><00:22:04.320><c> same</c>

00:22:04.460 --> 00:22:04.470 align:start position:0%
disappear into the ether but at the same
 

00:22:04.470 --> 00:22:05.870 align:start position:0%
disappear into the ether but at the same
time<00:22:04.680><c> it</c><00:22:04.830><c> kind</c><00:22:04.980><c> of</c><00:22:05.010><c> defeats</c><00:22:05.340><c> the</c><00:22:05.430><c> purpose</c><00:22:05.520><c> of</c>

00:22:05.870 --> 00:22:05.880 align:start position:0%
time it kind of defeats the purpose of
 

00:22:05.880 --> 00:22:07.430 align:start position:0%
time it kind of defeats the purpose of
the<00:22:05.940><c> code</c><00:22:06.120><c> in</c><00:22:06.270><c> this</c><00:22:06.360><c> sample</c><00:22:06.780><c> here</c><00:22:06.990><c> like</c><00:22:07.290><c> we</c>

00:22:07.430 --> 00:22:07.440 align:start position:0%
the code in this sample here like we
 

00:22:07.440 --> 00:22:08.930 align:start position:0%
the code in this sample here like we
caught<00:22:07.830><c> it</c><00:22:07.860><c> what</c><00:22:08.220><c> are</c><00:22:08.310><c> we</c><00:22:08.370><c> supposed</c><00:22:08.670><c> to</c><00:22:08.730><c> do</c>

00:22:08.930 --> 00:22:08.940 align:start position:0%
caught it what are we supposed to do
 

00:22:08.940 --> 00:22:09.490 align:start position:0%
caught it what are we supposed to do
here

00:22:09.490 --> 00:22:09.500 align:start position:0%
here
 

00:22:09.500 --> 00:22:11.840 align:start position:0%
here
well<00:22:10.500><c> in</c><00:22:10.680><c> this</c><00:22:10.950><c> case</c><00:22:11.160><c> instead</c><00:22:11.460><c> of</c><00:22:11.640><c> using</c>

00:22:11.840 --> 00:22:11.850 align:start position:0%
well in this case instead of using
 

00:22:11.850 --> 00:22:12.680 align:start position:0%
well in this case instead of using
co-routines

00:22:12.680 --> 00:22:12.690 align:start position:0%
co-routines
 

00:22:12.690 --> 00:22:14.360 align:start position:0%
co-routines
at<00:22:12.870><c> the</c><00:22:12.960><c> top</c><00:22:13.170><c> to</c><00:22:13.440><c> open</c><00:22:13.470><c> up</c><00:22:13.800><c> this</c><00:22:13.950><c> parallel</c>

00:22:14.360 --> 00:22:14.370 align:start position:0%
at the top to open up this parallel
 

00:22:14.370 --> 00:22:16.310 align:start position:0%
at the top to open up this parallel
decomposition<00:22:15.090><c> we</c><00:22:15.600><c> can</c><00:22:15.720><c> use</c><00:22:15.840><c> supervisor</c>

00:22:16.310 --> 00:22:16.320 align:start position:0%
decomposition we can use supervisor
 

00:22:16.320 --> 00:22:18.500 align:start position:0%
decomposition we can use supervisor
scope<00:22:16.740><c> it</c><00:22:17.160><c> works</c><00:22:17.370><c> exactly</c><00:22:17.580><c> like</c><00:22:17.910><c> co-routine</c>

00:22:18.500 --> 00:22:18.510 align:start position:0%
scope it works exactly like co-routine
 

00:22:18.510 --> 00:22:20.660 align:start position:0%
scope it works exactly like co-routine
scope<00:22:18.810><c> except</c><00:22:19.200><c> with</c><00:22:19.410><c> a</c><00:22:19.440><c> supervisor</c><00:22:19.980><c> job</c><00:22:20.430><c> which</c>

00:22:20.660 --> 00:22:20.670 align:start position:0%
scope except with a supervisor job which
 

00:22:20.670 --> 00:22:22.310 align:start position:0%
scope except with a supervisor job which
is<00:22:20.760><c> a</c><00:22:20.850><c> special</c><00:22:21.210><c> kind</c><00:22:21.420><c> of</c><00:22:21.480><c> job</c><00:22:21.690><c> that</c><00:22:21.930><c> won't</c><00:22:22.080><c> be</c>

00:22:22.310 --> 00:22:22.320 align:start position:0%
is a special kind of job that won't be
 

00:22:22.320 --> 00:22:24.350 align:start position:0%
is a special kind of job that won't be
canceled<00:22:22.890><c> if</c><00:22:23.070><c> a</c><00:22:23.460><c> child</c><00:22:23.730><c> fails</c><00:22:24.030><c> with</c><00:22:24.270><c> an</c>

00:22:24.350 --> 00:22:24.360 align:start position:0%
canceled if a child fails with an
 

00:22:24.360 --> 00:22:29.360 align:start position:0%
canceled if a child fails with an
unhandled<00:22:24.660><c> exception</c><00:22:27.440><c> one</c><00:22:28.440><c> more</c><00:22:28.620><c> spot</c><00:22:28.800><c> yep</c>

00:22:29.360 --> 00:22:29.370 align:start position:0%
unhandled exception one more spot yep
 

00:22:29.370 --> 00:22:31.640 align:start position:0%
unhandled exception one more spot yep
it<00:22:30.240><c> will</c><00:22:30.390><c> only</c><00:22:30.510><c> be</c><00:22:30.690><c> thrown</c><00:22:31.020><c> from</c><00:22:31.200><c> this</c><00:22:31.320><c> await</c>

00:22:31.640 --> 00:22:31.650 align:start position:0%
it will only be thrown from this await
 

00:22:31.650 --> 00:22:35.690 align:start position:0%
it will only be thrown from this await
method<00:22:31.950><c> here</c><00:22:33.140><c> cool</c><00:22:34.170><c> so</c><00:22:34.680><c> earlier</c><00:22:35.070><c> we</c><00:22:35.190><c> mentioned</c>

00:22:35.690 --> 00:22:35.700 align:start position:0%
method here cool so earlier we mentioned
 

00:22:35.700 --> 00:22:37.490 align:start position:0%
method here cool so earlier we mentioned
that<00:22:35.880><c> we</c><00:22:36.150><c> can</c><00:22:36.480><c> actually</c><00:22:36.720><c> decide</c><00:22:37.050><c> where</c>

00:22:37.490 --> 00:22:37.500 align:start position:0%
that we can actually decide where
 

00:22:37.500 --> 00:22:38.960 align:start position:0%
that we can actually decide where
co-routines<00:22:37.950><c> have</c><00:22:38.070><c> run</c><00:22:38.220><c> and</c><00:22:38.640><c> what</c><00:22:38.820><c> kind</c><00:22:38.940><c> of</c>

00:22:38.960 --> 00:22:38.970 align:start position:0%
co-routines have run and what kind of
 

00:22:38.970 --> 00:22:40.790 align:start position:0%
co-routines have run and what kind of
fred<00:22:39.210><c> they</c><00:22:39.330><c> brought</c><00:22:39.510><c> on</c><00:22:39.630><c> because</c><00:22:40.200><c> actually</c><00:22:40.650><c> on</c>

00:22:40.790 --> 00:22:40.800 align:start position:0%
fred they brought on because actually on
 

00:22:40.800 --> 00:22:42.620 align:start position:0%
fred they brought on because actually on
the<00:22:40.890><c> JVM</c><00:22:41.280><c> and</c><00:22:41.430><c> on</c><00:22:41.520><c> Android</c><00:22:41.760><c> we</c><00:22:42.120><c> actually</c><00:22:42.420><c> still</c>

00:22:42.620 --> 00:22:42.630 align:start position:0%
the JVM and on Android we actually still
 

00:22:42.630 --> 00:22:45.140 align:start position:0%
the JVM and on Android we actually still
run<00:22:42.930><c> on</c><00:22:42.960><c> Fred's</c><00:22:43.410><c> he</c><00:22:44.040><c> still</c><00:22:44.220><c> uses</c><00:22:44.520><c> fred</c><00:22:45.000><c> paul</c>

00:22:45.140 --> 00:22:45.150 align:start position:0%
run on Fred's he still uses fred paul
 

00:22:45.150 --> 00:22:47.150 align:start position:0%
run on Fred's he still uses fred paul
underneath<00:22:45.480><c> so</c><00:22:46.230><c> we</c><00:22:46.350><c> still</c><00:22:46.530><c> can</c><00:22:46.680><c> decide</c><00:22:46.980><c> where</c>

00:22:47.150 --> 00:22:47.160 align:start position:0%
underneath so we still can decide where
 

00:22:47.160 --> 00:22:50.570 align:start position:0%
underneath so we still can decide where
that<00:22:47.190><c> she</c><00:22:47.460><c> gets</c><00:22:47.610><c> dispatched</c><00:22:48.120><c> on</c><00:22:49.430><c> now</c><00:22:50.430><c> let's</c>

00:22:50.570 --> 00:22:50.580 align:start position:0%
that she gets dispatched on now let's
 

00:22:50.580 --> 00:22:51.740 align:start position:0%
that she gets dispatched on now let's
have<00:22:50.670><c> a</c><00:22:50.760><c> look</c><00:22:50.880><c> so</c><00:22:51.120><c> we</c><00:22:51.360><c> here</c><00:22:51.510><c> we</c><00:22:51.570><c> have</c><00:22:51.660><c> our</c>

00:22:51.740 --> 00:22:51.750 align:start position:0%
have a look so we here we have our
 

00:22:51.750 --> 00:22:53.360 align:start position:0%
have a look so we here we have our
launch<00:22:51.960><c> a</c><00:22:52.230><c> very</c><00:22:52.440><c> simple</c><00:22:52.740><c> launch</c><00:22:52.920><c> which</c><00:22:53.160><c> is</c>

00:22:53.360 --> 00:22:53.370 align:start position:0%
launch a very simple launch which is
 

00:22:53.370 --> 00:22:54.890 align:start position:0%
launch a very simple launch which is
missing<00:22:53.670><c> a</c><00:22:53.760><c> scope</c><00:22:53.970><c> for</c><00:22:54.300><c> you</c><00:22:54.540><c> know</c><00:22:54.660><c> just</c><00:22:54.810><c> look</c>

00:22:54.890 --> 00:22:54.900 align:start position:0%
missing a scope for you know just look
 

00:22:54.900 --> 00:22:57.620 align:start position:0%
missing a scope for you know just look
at<00:22:54.990><c> example</c><00:22:55.440><c> now</c><00:22:56.280><c> default</c><00:22:56.670><c> actually</c><00:22:56.850><c> is</c><00:22:57.300><c> that</c>

00:22:57.620 --> 00:22:57.630 align:start position:0%
at example now default actually is that
 

00:22:57.630 --> 00:22:59.750 align:start position:0%
at example now default actually is that
the<00:22:58.140><c> context</c><00:22:58.590><c> will</c><00:22:58.740><c> be</c><00:22:58.830><c> using</c><00:22:59.190><c> what</c><00:22:59.460><c> we</c><00:22:59.550><c> call</c><00:22:59.730><c> a</c>

00:22:59.750 --> 00:22:59.760 align:start position:0%
the context will be using what we call a
 

00:22:59.760 --> 00:23:01.520 align:start position:0%
the context will be using what we call a
dispatcher<00:23:00.180><c> stop</c><00:23:00.420><c> default</c><00:23:00.840><c> that's</c><00:23:01.260><c> a</c><00:23:01.320><c> default</c>

00:23:01.520 --> 00:23:01.530 align:start position:0%
dispatcher stop default that's a default
 

00:23:01.530 --> 00:23:03.320 align:start position:0%
dispatcher stop default that's a default
dispatcher<00:23:01.950><c> that's</c><00:23:02.250><c> kind</c><00:23:02.610><c> of</c><00:23:02.670><c> given</c><00:23:02.970><c> for</c><00:23:03.180><c> you</c>

00:23:03.320 --> 00:23:03.330 align:start position:0%
dispatcher that's kind of given for you
 

00:23:03.330 --> 00:23:05.660 align:start position:0%
dispatcher that's kind of given for you
for<00:23:03.690><c> free</c><00:23:03.830><c> and</c><00:23:04.830><c> it's</c><00:23:05.010><c> supposed</c><00:23:05.280><c> to</c><00:23:05.310><c> be</c><00:23:05.430><c> sort</c><00:23:05.610><c> of</c>

00:23:05.660 --> 00:23:05.670 align:start position:0%
for free and it's supposed to be sort of
 

00:23:05.670 --> 00:23:06.830 align:start position:0%
for free and it's supposed to be sort of
default<00:23:06.270><c> for</c><00:23:06.360><c> everything</c><00:23:06.630><c> really</c>

00:23:06.830 --> 00:23:06.840 align:start position:0%
default for everything really
 

00:23:06.840 --> 00:23:09.140 align:start position:0%
default for everything really
essentially<00:23:07.800><c> a</c><00:23:07.920><c> computation</c><00:23:08.520><c> thread</c><00:23:08.790><c> pool</c><00:23:09.030><c> if</c>

00:23:09.140 --> 00:23:09.150 align:start position:0%
essentially a computation thread pool if
 

00:23:09.150 --> 00:23:10.430 align:start position:0%
essentially a computation thread pool if
you're<00:23:09.360><c> used</c><00:23:09.630><c> to</c><00:23:09.720><c> using</c><00:23:09.810><c> that</c><00:23:10.200><c> from</c><00:23:10.350><c> our</c>

00:23:10.430 --> 00:23:10.440 align:start position:0%
you're used to using that from our
 

00:23:10.440 --> 00:23:12.740 align:start position:0%
you're used to using that from our
Xstrata<00:23:10.770><c> so</c><00:23:11.580><c> what</c><00:23:11.760><c> is</c><00:23:11.880><c> a</c><00:23:11.910><c> protein</c><00:23:12.270><c> dispatcher</c>

00:23:12.740 --> 00:23:12.750 align:start position:0%
Xstrata so what is a protein dispatcher
 

00:23:12.750 --> 00:23:15.350 align:start position:0%
Xstrata so what is a protein dispatcher
which<00:23:13.080><c> is</c><00:23:13.200><c> what</c><00:23:13.350><c> it</c><00:23:13.680><c> basically</c><00:23:13.800><c> is</c><00:23:14.270><c> what</c><00:23:15.270><c> is</c>

00:23:15.350 --> 00:23:15.360 align:start position:0%
which is what it basically is what is
 

00:23:15.360 --> 00:23:16.430 align:start position:0%
which is what it basically is what is
the<00:23:15.450><c> thing</c><00:23:15.600><c> which</c><00:23:15.720><c> runs</c><00:23:15.960><c> and</c><00:23:16.110><c> schedules</c>

00:23:16.430 --> 00:23:16.440 align:start position:0%
the thing which runs and schedules
 

00:23:16.440 --> 00:23:17.840 align:start position:0%
the thing which runs and schedules
curtains<00:23:16.920><c> as</c><00:23:17.040><c> I</c><00:23:17.100><c> mentioned</c><00:23:17.370><c> earlier</c><00:23:17.580><c> it's</c>

00:23:17.840 --> 00:23:17.850 align:start position:0%
curtains as I mentioned earlier it's
 

00:23:17.850 --> 00:23:19.220 align:start position:0%
curtains as I mentioned earlier it's
schedules<00:23:18.270><c> or</c><00:23:18.360><c> carotenes</c><00:23:18.750><c> to</c><00:23:18.900><c> run</c><00:23:19.080><c> on</c>

00:23:19.220 --> 00:23:19.230 align:start position:0%
schedules or carotenes to run on
 

00:23:19.230 --> 00:23:22.570 align:start position:0%
schedules or carotenes to run on
something<00:23:19.590><c> on</c><00:23:20.520><c> a</c><00:23:20.550><c> Fred</c><00:23:20.820><c> I</c><00:23:21.000><c> know</c><00:23:21.180><c> in</c><00:23:21.360><c> our</c><00:23:21.450><c> case</c>

00:23:22.570 --> 00:23:22.580 align:start position:0%
something on a Fred I know in our case
 

00:23:22.580 --> 00:23:24.830 align:start position:0%
something on a Fred I know in our case
now<00:23:23.580><c> this</c><00:23:23.760><c> patch</c><00:23:23.940><c> it's</c><00:23:24.090><c> not</c><00:23:24.180><c> default</c><00:23:24.540><c> which</c><00:23:24.660><c> is</c>

00:23:24.830 --> 00:23:24.840 align:start position:0%
now this patch it's not default which is
 

00:23:24.840 --> 00:23:27.530 align:start position:0%
now this patch it's not default which is
the<00:23:24.990><c> default</c><00:23:25.140><c> which</c><00:23:25.440><c> you</c><00:23:25.590><c> get</c><00:23:26.040><c> is</c><00:23:26.760><c> that</c><00:23:27.270><c> you</c>

00:23:27.530 --> 00:23:27.540 align:start position:0%
the default which you get is that you
 

00:23:27.540 --> 00:23:29.780 align:start position:0%
the default which you get is that you
see<00:23:27.690><c> CPU</c><00:23:28.080><c> camp</c><00:23:28.290><c> Fred</c><00:23:28.500><c> so</c><00:23:28.830><c> it</c><00:23:29.160><c> has</c><00:23:29.340><c> say</c><00:23:29.640><c> your</c>

00:23:29.780 --> 00:23:29.790 align:start position:0%
see CPU camp Fred so it has say your
 

00:23:29.790 --> 00:23:32.420 align:start position:0%
see CPU camp Fred so it has say your
device<00:23:30.120><c> has</c><00:23:30.150><c> four</c><00:23:30.870><c> CPUs</c><00:23:31.440><c> in</c><00:23:31.650><c> it</c><00:23:31.860><c> you</c><00:23:32.250><c> will</c><00:23:32.370><c> get</c>

00:23:32.420 --> 00:23:32.430 align:start position:0%
device has four CPUs in it you will get
 

00:23:32.430 --> 00:23:35.150 align:start position:0%
device has four CPUs in it you will get
a<00:23:32.490><c> Fred</c><00:23:32.700><c> Paul</c><00:23:32.880><c> at</c><00:23:33.030><c> four</c><00:23:33.680><c> which</c><00:23:34.680><c> isn't</c><00:23:34.860><c> so</c><00:23:35.040><c> great</c>

00:23:35.150 --> 00:23:35.160 align:start position:0%
a Fred Paul at four which isn't so great
 

00:23:35.160 --> 00:23:37.220 align:start position:0%
a Fred Paul at four which isn't so great
for<00:23:35.310><c> things</c><00:23:35.490><c> IO</c><00:23:35.730><c> so</c><00:23:36.210><c> most</c><00:23:36.630><c> apps</c><00:23:36.810><c> will</c><00:23:36.990><c> be</c><00:23:37.080><c> doing</c>

00:23:37.220 --> 00:23:37.230 align:start position:0%
for things IO so most apps will be doing
 

00:23:37.230 --> 00:23:39.020 align:start position:0%
for things IO so most apps will be doing
a<00:23:37.320><c> lot</c><00:23:37.380><c> on</c><00:23:37.440><c> network</c><00:23:37.830><c> or</c><00:23:38.190><c> disk</c><00:23:38.490><c> or</c><00:23:38.760><c> whatever</c><00:23:38.970><c> it</c>

00:23:39.020 --> 00:23:39.030 align:start position:0%
a lot on network or disk or whatever it
 

00:23:39.030 --> 00:23:41.060 align:start position:0%
a lot on network or disk or whatever it
be<00:23:39.060><c> so</c><00:23:39.240><c> it's</c><00:23:39.450><c> not</c><00:23:39.570><c> so</c><00:23:39.720><c> great</c><00:23:39.840><c> for</c><00:23:39.930><c> that</c><00:23:40.230><c> and</c><00:23:40.560><c> so</c>

00:23:41.060 --> 00:23:41.070 align:start position:0%
be so it's not so great for that and so
 

00:23:41.070 --> 00:23:42.350 align:start position:0%
be so it's not so great for that and so
yeah<00:23:41.280><c> it's</c><00:23:41.460><c> mostly</c><00:23:41.790><c> more</c><00:23:42.120><c> like</c><00:23:42.330><c> a</c>

00:23:42.350 --> 00:23:42.360 align:start position:0%
yeah it's mostly more like a
 

00:23:42.360 --> 00:23:45.740 align:start position:0%
yeah it's mostly more like a
computational<00:23:43.080><c> type</c><00:23:43.580><c> dispatcher</c><00:23:44.660><c> but</c><00:23:45.660><c> it's</c>

00:23:45.740 --> 00:23:45.750 align:start position:0%
computational type dispatcher but it's
 

00:23:45.750 --> 00:23:48.170 align:start position:0%
computational type dispatcher but it's
also<00:23:45.870><c> an</c><00:23:46.020><c> elastic</c><00:23:46.380><c> Fred</c><00:23:46.560><c> executor</c><00:23:47.180><c> which</c>

00:23:48.170 --> 00:23:48.180 align:start position:0%
also an elastic Fred executor which
 

00:23:48.180 --> 00:23:49.370 align:start position:0%
also an elastic Fred executor which
we'll<00:23:48.300><c> talk</c><00:23:48.420><c> about</c><00:23:48.480><c> in</c><00:23:48.660><c> a</c><00:23:48.750><c> minute</c><00:23:48.840><c> but</c><00:23:49.140><c> it's</c>

00:23:49.370 --> 00:23:49.380 align:start position:0%
we'll talk about in a minute but it's
 

00:23:49.380 --> 00:23:52.520 align:start position:0%
we'll talk about in a minute but it's
the<00:23:49.590><c> default</c><00:23:50.780><c> there's</c><00:23:51.780><c> also</c><00:23:51.930><c> dispatcher</c><00:23:52.380><c> to</c>

00:23:52.520 --> 00:23:52.530 align:start position:0%
the default there's also dispatcher to
 

00:23:52.530 --> 00:23:54.890 align:start position:0%
the default there's also dispatcher to
IO<00:23:52.680><c> which</c><00:23:52.980><c> was</c><00:23:53.130><c> added</c><00:23:53.370><c> fairly</c><00:23:53.820><c> recently</c><00:23:54.180><c> and</c>

00:23:54.890 --> 00:23:54.900 align:start position:0%
IO which was added fairly recently and
 

00:23:54.900 --> 00:23:56.000 align:start position:0%
IO which was added fairly recently and
it<00:23:55.020><c> was</c><00:23:55.050><c> designed</c><00:23:55.410><c> specifically</c><00:23:55.920><c> for</c>

00:23:56.000 --> 00:23:56.010 align:start position:0%
it was designed specifically for
 

00:23:56.010 --> 00:23:58.280 align:start position:0%
it was designed specifically for
blocking<00:23:56.580><c> i/o</c><00:23:56.670><c> tasks</c><00:23:57.180><c> so</c><00:23:57.690><c> things</c><00:23:57.930><c> that</c><00:23:58.110><c> we</c>

00:23:58.280 --> 00:23:58.290 align:start position:0%
blocking i/o tasks so things that we
 

00:23:58.290 --> 00:24:00.350 align:start position:0%
blocking i/o tasks so things that we
really<00:23:58.590><c> care</c><00:23:58.770><c> about</c><00:23:58.860><c> you</c><00:23:59.370><c> know</c><00:23:59.400><c> network</c><00:23:59.880><c> image</c>

00:24:00.350 --> 00:24:00.360 align:start position:0%
really care about you know network image
 

00:24:00.360 --> 00:24:02.930 align:start position:0%
really care about you know network image
loading<00:24:00.840><c> reading</c><00:24:01.500><c> disk</c><00:24:01.800><c> database</c><00:24:02.400><c> blah</c><00:24:02.850><c> blah</c>

00:24:02.930 --> 00:24:02.940 align:start position:0%
loading reading disk database blah blah
 

00:24:02.940 --> 00:24:06.530 align:start position:0%
loading reading disk database blah blah
blah<00:24:03.290><c> it</c><00:24:04.290><c> uses</c><00:24:04.650><c> a</c><00:24:04.710><c> minimum</c><00:24:05.160><c> 64</c><00:24:05.880><c> parallelism</c>

00:24:06.530 --> 00:24:06.540 align:start position:0%
blah it uses a minimum 64 parallelism
 

00:24:06.540 --> 00:24:08.330 align:start position:0%
blah it uses a minimum 64 parallelism
which<00:24:07.500><c> Bracy</c><00:24:07.680><c> means</c><00:24:07.860><c> it</c><00:24:07.920><c> you</c><00:24:07.980><c> can</c><00:24:08.070><c> have</c><00:24:08.160><c> up</c><00:24:08.220><c> to</c>

00:24:08.330 --> 00:24:08.340 align:start position:0%
which Bracy means it you can have up to
 

00:24:08.340 --> 00:24:10.160 align:start position:0%
which Bracy means it you can have up to
64<00:24:08.790><c> tasks</c><00:24:09.150><c> run</c><00:24:09.330><c> at</c><00:24:09.420><c> a</c><00:24:09.450><c> time</c><00:24:09.510><c> which</c><00:24:09.900><c> is</c><00:24:10.020><c> great</c>

00:24:10.160 --> 00:24:10.170 align:start position:0%
64 tasks run at a time which is great
 

00:24:10.170 --> 00:24:12.620 align:start position:0%
64 tasks run at a time which is great
for<00:24:10.380><c> what</c><00:24:10.530><c> we</c><00:24:10.620><c> need</c><00:24:11.060><c> so</c><00:24:12.060><c> you</c><00:24:12.270><c> can</c><00:24:12.360><c> launch</c><00:24:12.510><c> it</c>

00:24:12.620 --> 00:24:12.630 align:start position:0%
for what we need so you can launch it
 

00:24:12.630 --> 00:24:15.350 align:start position:0%
for what we need so you can launch it
like<00:24:12.750><c> that</c><00:24:13.670><c> but</c><00:24:14.670><c> the</c><00:24:14.760><c> really</c><00:24:15.030><c> great</c><00:24:15.180><c> thing</c>

00:24:15.350 --> 00:24:15.360 align:start position:0%
like that but the really great thing
 

00:24:15.360 --> 00:24:17.090 align:start position:0%
like that but the really great thing
about<00:24:15.390><c> the</c><00:24:15.900><c> IO</c><00:24:16.050><c> dispatcher</c><00:24:16.500><c> is</c><00:24:16.830><c> that</c><00:24:17.010><c> it</c>

00:24:17.090 --> 00:24:17.100 align:start position:0%
about the IO dispatcher is that it
 

00:24:17.100 --> 00:24:19.280 align:start position:0%
about the IO dispatcher is that it
shares<00:24:17.430><c> Fred</c><00:24:17.790><c> pools</c><00:24:18.060><c> with</c><00:24:18.540><c> the</c><00:24:18.900><c> default</c>

00:24:19.280 --> 00:24:19.290 align:start position:0%
shares Fred pools with the default
 

00:24:19.290 --> 00:24:22.400 align:start position:0%
shares Fred pools with the default
dispatcher<00:24:20.030><c> and</c><00:24:21.030><c> the</c><00:24:21.110><c> point</c><00:24:22.110><c> where</c><00:24:22.170><c> it</c><00:24:22.260><c> comes</c>

00:24:22.400 --> 00:24:22.410 align:start position:0%
dispatcher and the point where it comes
 

00:24:22.410 --> 00:24:23.990 align:start position:0%
dispatcher and the point where it comes
great<00:24:22.650><c> is</c><00:24:22.770><c> this</c><00:24:22.980><c> so</c><00:24:23.400><c> here</c><00:24:23.580><c> we</c><00:24:23.640><c> have</c><00:24:23.730><c> an</c><00:24:23.790><c> example</c>

00:24:23.990 --> 00:24:24.000 align:start position:0%
great is this so here we have an example
 

00:24:24.000 --> 00:24:26.450 align:start position:0%
great is this so here we have an example
where<00:24:24.330><c> we</c><00:24:25.230><c> have</c><00:24:25.320><c> an</c><00:24:25.410><c> async</c>

00:24:26.450 --> 00:24:26.460 align:start position:0%
where we have an async
 

00:24:26.460 --> 00:24:28.670 align:start position:0%
where we have an async
she's<00:24:26.610><c> using</c><00:24:26.790><c> the</c><00:24:26.910><c> default</c><00:24:27.300><c> dispatcher</c><00:24:27.680><c> and</c>

00:24:28.670 --> 00:24:28.680 align:start position:0%
she's using the default dispatcher and
 

00:24:28.680 --> 00:24:30.560 align:start position:0%
she's using the default dispatcher and
then<00:24:28.800><c> we're</c><00:24:29.010><c> gonna</c><00:24:29.130><c> load</c><00:24:29.880><c> an</c><00:24:30.060><c> image</c><00:24:30.120><c> on</c><00:24:30.450><c> the</c>

00:24:30.560 --> 00:24:30.570 align:start position:0%
then we're gonna load an image on the
 

00:24:30.570 --> 00:24:31.790 align:start position:0%
then we're gonna load an image on the
i/o<00:24:30.720><c> dispatcher</c><00:24:31.140><c> so</c><00:24:31.380><c> we're</c><00:24:31.470><c> gonna</c><00:24:31.560><c> do</c><00:24:31.680><c> some</c>

00:24:31.790 --> 00:24:31.800 align:start position:0%
i/o dispatcher so we're gonna do some
 

00:24:31.800 --> 00:24:33.980 align:start position:0%
i/o dispatcher so we're gonna do some
disk<00:24:31.980><c> reading</c><00:24:32.280><c> some</c><00:24:33.270><c> kind</c><00:24:33.450><c> of</c><00:24:33.480><c> load</c><00:24:33.660><c> of</c><00:24:33.780><c> image</c>

00:24:33.980 --> 00:24:33.990 align:start position:0%
disk reading some kind of load of image
 

00:24:33.990 --> 00:24:35.840 align:start position:0%
disk reading some kind of load of image
whatever<00:24:34.230><c> it</c><00:24:34.440><c> be</c><00:24:34.530><c> and</c><00:24:35.520><c> then</c><00:24:35.610><c> we're</c><00:24:35.700><c> going</c><00:24:35.820><c> to</c>

00:24:35.840 --> 00:24:35.850 align:start position:0%
whatever it be and then we're going to
 

00:24:35.850 --> 00:24:37.490 align:start position:0%
whatever it be and then we're going to
use<00:24:35.910><c> that</c><00:24:36.150><c> result</c><00:24:36.300><c> and</c><00:24:36.660><c> then</c><00:24:37.080><c> process</c><00:24:37.470><c> it</c>

00:24:37.490 --> 00:24:37.500 align:start position:0%
use that result and then process it
 

00:24:37.500 --> 00:24:41.360 align:start position:0%
use that result and then process it
somehow<00:24:37.800><c> there's</c><00:24:38.670><c> a</c><00:24:38.700><c> computational</c><00:24:39.330><c> task</c><00:24:40.370><c> now</c>

00:24:41.360 --> 00:24:41.370 align:start position:0%
somehow there's a computational task now
 

00:24:41.370 --> 00:24:43.310 align:start position:0%
somehow there's a computational task now
because<00:24:42.300><c> this</c><00:24:42.420><c> is</c><00:24:42.480><c> running</c><00:24:42.840><c> on</c><00:24:42.870><c> the</c><00:24:42.990><c> default</c>

00:24:43.310 --> 00:24:43.320 align:start position:0%
because this is running on the default
 

00:24:43.320 --> 00:24:46.520 align:start position:0%
because this is running on the default
dispatcher<00:24:43.680><c> there</c><00:24:44.550><c> is</c><00:24:44.670><c> no</c><00:24:44.910><c> actual</c><00:24:45.530><c> Fred</c>

00:24:46.520 --> 00:24:46.530 align:start position:0%
dispatcher there is no actual Fred
 

00:24:46.530 --> 00:24:48.560 align:start position:0%
dispatcher there is no actual Fred
switch<00:24:46.770><c> in</c><00:24:47.010><c> there</c><00:24:47.460><c> because</c><00:24:47.790><c> we</c><00:24:48.300><c> use</c><00:24:48.420><c> those</c>

00:24:48.560 --> 00:24:48.570 align:start position:0%
switch in there because we use those
 

00:24:48.570 --> 00:24:51.320 align:start position:0%
switch in there because we use those
assured<00:24:49.170><c> Fred</c><00:24:49.440><c> pulls</c><00:24:49.680><c> IO</c><00:24:50.100><c> and</c><00:24:50.460><c> default</c><00:24:51.030><c> uses</c>

00:24:51.320 --> 00:24:51.330 align:start position:0%
assured Fred pulls IO and default uses
 

00:24:51.330 --> 00:24:52.850 align:start position:0%
assured Fred pulls IO and default uses
two<00:24:51.450><c> shared</c><00:24:51.630><c> Fred's</c><00:24:51.930><c> therefore</c><00:24:52.710><c> there's</c><00:24:52.830><c> no</c>

00:24:52.850 --> 00:24:52.860 align:start position:0%
two shared Fred's therefore there's no
 

00:24:52.860 --> 00:24:54.620 align:start position:0%
two shared Fred's therefore there's no
after<00:24:53.100><c> Fred</c><00:24:53.340><c> switch</c><00:24:53.580><c> which</c><00:24:53.910><c> makes</c><00:24:54.360><c> it</c><00:24:54.420><c> a</c><00:24:54.480><c> whole</c>

00:24:54.620 --> 00:24:54.630 align:start position:0%
after Fred switch which makes it a whole
 

00:24:54.630 --> 00:24:58.610 align:start position:0%
after Fred switch which makes it a whole
lot<00:24:54.660><c> quicker</c><00:24:56.960><c> then</c><00:24:57.960><c> we</c><00:24:58.020><c> also</c><00:24:58.170><c> have</c><00:24:58.320><c> dispatcher</c>

00:24:58.610 --> 00:24:58.620 align:start position:0%
lot quicker then we also have dispatcher
 

00:24:58.620 --> 00:24:59.930 align:start position:0%
lot quicker then we also have dispatcher
stop<00:24:58.800><c> main</c><00:24:59.010><c> which</c><00:24:59.250><c> we</c><00:24:59.340><c> spoke</c><00:24:59.550><c> about</c><00:24:59.610><c> a</c><00:24:59.790><c> little</c>

00:24:59.930 --> 00:24:59.940 align:start position:0%
stop main which we spoke about a little
 

00:24:59.940 --> 00:25:02.420 align:start position:0%
stop main which we spoke about a little
bit<00:25:00.030><c> already</c><00:25:00.350><c> it</c><00:25:01.350><c> allows</c><00:25:01.620><c> running</c><00:25:02.010><c> carotenes</c>

00:25:02.420 --> 00:25:02.430 align:start position:0%
bit already it allows running carotenes
 

00:25:02.430 --> 00:25:05.570 align:start position:0%
bit already it allows running carotenes
on<00:25:02.640><c> the</c><00:25:02.730><c> UI</c><00:25:02.880><c> main</c><00:25:03.150><c> fred</c><00:25:04.100><c> conovan</c><00:25:05.100><c> who</c><00:25:05.400><c> wants</c>

00:25:05.570 --> 00:25:05.580 align:start position:0%
on the UI main fred conovan who wants
 

00:25:05.580 --> 00:25:07.040 align:start position:0%
on the UI main fred conovan who wants
with<00:25:05.700><c> that</c><00:25:05.820><c> is</c><00:25:06.000><c> that</c><00:25:06.030><c> in</c><00:25:06.360><c> later</c><00:25:06.810><c> releases</c>

00:25:07.040 --> 00:25:07.050 align:start position:0%
with that is that in later releases
 

00:25:07.050 --> 00:25:10.160 align:start position:0%
with that is that in later releases
anyway<00:25:07.590><c> ii</c><00:25:07.620><c> uses</c><00:25:08.190><c> service</c><00:25:08.880><c> loader</c><00:25:09.120><c> to</c><00:25:09.750><c> load</c>

00:25:10.160 --> 00:25:10.170 align:start position:0%
anyway ii uses service loader to load
 

00:25:10.170 --> 00:25:12.980 align:start position:0%
anyway ii uses service loader to load
the<00:25:10.650><c> dispatcher</c><00:25:11.040><c> in</c><00:25:11.880><c> your</c><00:25:12.000><c> code</c><00:25:12.210><c> which</c><00:25:12.840><c> is</c>

00:25:12.980 --> 00:25:12.990 align:start position:0%
the dispatcher in your code which is
 

00:25:12.990 --> 00:25:14.120 align:start position:0%
the dispatcher in your code which is
kind<00:25:13.200><c> of</c><00:25:13.230><c> tricky</c><00:25:13.530><c> when</c><00:25:13.680><c> we</c><00:25:13.770><c> have</c><00:25:13.890><c> things</c><00:25:14.010><c> like</c>

00:25:14.120 --> 00:25:14.130 align:start position:0%
kind of tricky when we have things like
 

00:25:14.130 --> 00:25:16.550 align:start position:0%
kind of tricky when we have things like
ProGuard<00:25:14.580><c> so</c><00:25:14.700><c> you</c><00:25:14.790><c> have</c><00:25:14.910><c> a</c><00:25:14.940><c> care</c><00:25:15.120><c> for</c><00:25:15.240><c> this</c><00:25:15.560><c> but</c>

00:25:16.550 --> 00:25:16.560 align:start position:0%
ProGuard so you have a care for this but
 

00:25:16.560 --> 00:25:18.080 align:start position:0%
ProGuard so you have a care for this but
yeah<00:25:16.680><c> just</c><00:25:16.860><c> be</c><00:25:17.010><c> careful</c>

00:25:18.080 --> 00:25:18.090 align:start position:0%
yeah just be careful
 

00:25:18.090 --> 00:25:19.550 align:start position:0%
yeah just be careful
the<00:25:18.510><c> team's</c><00:25:18.660><c> know</c><00:25:18.900><c> is</c><00:25:19.080><c> that</c><00:25:19.230><c> you</c><00:25:19.290><c> need</c><00:25:19.350><c> to</c><00:25:19.470><c> add</c>

00:25:19.550 --> 00:25:19.560 align:start position:0%
the team's know is that you need to add
 

00:25:19.560 --> 00:25:21.380 align:start position:0%
the team's know is that you need to add
the<00:25:19.740><c> Android</c><00:25:20.430><c> dependency</c><00:25:20.880><c> which</c><00:25:21.090><c> is</c><00:25:21.210><c> very</c>

00:25:21.380 --> 00:25:21.390 align:start position:0%
the Android dependency which is very
 

00:25:21.390 --> 00:25:25.220 align:start position:0%
the Android dependency which is very
earlier<00:25:21.690><c> anyway</c><00:25:22.940><c> and</c><00:25:23.940><c> then</c><00:25:24.060><c> to</c><00:25:24.180><c> use</c><00:25:24.300><c> it</c><00:25:24.480><c> as</c><00:25:25.050><c> we</c>

00:25:25.220 --> 00:25:25.230 align:start position:0%
earlier anyway and then to use it as we
 

00:25:25.230 --> 00:25:26.780 align:start position:0%
earlier anyway and then to use it as we
said<00:25:25.380><c> just</c><00:25:25.680><c> launched</c><00:25:26.190><c> and</c><00:25:26.430><c> then</c><00:25:26.520><c> dispatch</c>

00:25:26.780 --> 00:25:26.790 align:start position:0%
said just launched and then dispatch
 

00:25:26.790 --> 00:25:30.500 align:start position:0%
said just launched and then dispatch
stop<00:25:26.970><c> me</c><00:25:28.820><c> so</c><00:25:29.820><c> that</c><00:25:29.910><c> brings</c><00:25:30.030><c> us</c><00:25:30.180><c> a</c><00:25:30.240><c> little</c><00:25:30.360><c> bit</c>

00:25:30.500 --> 00:25:30.510 align:start position:0%
stop me so that brings us a little bit
 

00:25:30.510 --> 00:25:33.950 align:start position:0%
stop me so that brings us a little bit
onto<00:25:30.660><c> reactivity</c><00:25:32.000><c> so</c><00:25:33.000><c> how</c><00:25:33.420><c> many</c><00:25:33.480><c> blog</c><00:25:33.930><c> posts</c>

00:25:33.950 --> 00:25:33.960 align:start position:0%
onto reactivity so how many blog posts
 

00:25:33.960 --> 00:25:35.930 align:start position:0%
onto reactivity so how many blog posts
that<00:25:34.560><c> you've</c><00:25:34.830><c> seen</c><00:25:34.980><c> recently</c><00:25:35.160><c> anyway</c><00:25:35.580><c> can</c><00:25:35.820><c> be</c>

00:25:35.930 --> 00:25:35.940 align:start position:0%
that you've seen recently anyway can be
 

00:25:35.940 --> 00:25:41.720 align:start position:0%
that you've seen recently anyway can be
summarized<00:25:36.360><c> as</c><00:25:36.600><c> this</c><00:25:36.840><c> slide</c><00:25:38.600><c> and</c><00:25:40.460><c> I</c><00:25:41.460><c> myself</c>

00:25:41.720 --> 00:25:41.730 align:start position:0%
summarized as this slide and I myself
 

00:25:41.730 --> 00:25:46.010 align:start position:0%
summarized as this slide and I myself
have<00:25:42.030><c> been</c><00:25:42.150><c> guilty</c><00:25:42.510><c> of</c><00:25:42.600><c> this</c><00:25:44.630><c> now</c><00:25:45.630><c> I'm</c><00:25:45.930><c> gonna</c>

00:25:46.010 --> 00:25:46.020 align:start position:0%
have been guilty of this now I'm gonna
 

00:25:46.020 --> 00:25:48.470 align:start position:0%
have been guilty of this now I'm gonna
make<00:25:46.170><c> the</c><00:25:46.230><c> premise</c><00:25:47.040><c> and</c><00:25:47.340><c> the</c><00:25:47.940><c> statement</c><00:25:48.360><c> and</c>

00:25:48.470 --> 00:25:48.480 align:start position:0%
make the premise and the statement and
 

00:25:48.480 --> 00:25:50.390 align:start position:0%
make the premise and the statement and
that<00:25:48.510><c> most</c><00:25:48.810><c> of</c><00:25:48.990><c> Hugh's</c><00:25:49.260><c> rxjava</c><00:25:49.710><c> just</c><00:25:50.160><c> because</c>

00:25:50.390 --> 00:25:50.400 align:start position:0%
that most of Hugh's rxjava just because
 

00:25:50.400 --> 00:25:52.550 align:start position:0%
that most of Hugh's rxjava just because
it<00:25:50.520><c> makes</c><00:25:50.760><c> reading</c><00:25:51.390><c> easy</c><00:25:51.630><c> so</c><00:25:52.260><c> the</c><00:25:52.350><c> fact</c><00:25:52.530><c> that</c>

00:25:52.550 --> 00:25:52.560 align:start position:0%
it makes reading easy so the fact that
 

00:25:52.560 --> 00:25:54.110 align:start position:0%
it makes reading easy so the fact that
you<00:25:52.680><c> have</c><00:25:52.800><c> scheduled</c><00:25:53.190><c> on</c><00:25:53.310><c> and</c><00:25:53.550><c> you</c><00:25:53.790><c> can</c><00:25:53.910><c> easily</c>

00:25:54.110 --> 00:25:54.120 align:start position:0%
you have scheduled on and you can easily
 

00:25:54.120 --> 00:25:57.020 align:start position:0%
you have scheduled on and you can easily
switch<00:25:54.330><c> a</c><00:25:54.420><c> Fred</c><00:25:54.660><c> or</c><00:25:55.190><c> switch</c><00:25:56.190><c> multiple</c><00:25:56.850><c> threads</c>

00:25:57.020 --> 00:25:57.030 align:start position:0%
switch a Fred or switch multiple threads
 

00:25:57.030 --> 00:25:59.860 align:start position:0%
switch a Fred or switch multiple threads
and<00:25:57.510><c> that's</c><00:25:57.840><c> why</c><00:25:57.960><c> most</c><00:25:58.110><c> iris</c><00:25:58.440><c> Java</c><00:25:59.100><c> is</c><00:25:59.370><c> uses</c>

00:25:59.860 --> 00:25:59.870 align:start position:0%
and that's why most iris Java is uses
 

00:25:59.870 --> 00:26:01.730 align:start position:0%
and that's why most iris Java is uses
and<00:26:00.870><c> of</c><00:26:00.960><c> course</c><00:26:01.170><c> there</c><00:26:01.290><c> are</c><00:26:01.380><c> gonna</c><00:26:01.470><c> be</c><00:26:01.560><c> people</c>

00:26:01.730 --> 00:26:01.740 align:start position:0%
and of course there are gonna be people
 

00:26:01.740 --> 00:26:03.470 align:start position:0%
and of course there are gonna be people
who<00:26:01.980><c> go</c><00:26:02.160><c> tell</c><00:26:02.430><c> not</c><00:26:02.760><c> top</c><00:26:02.940><c> to</c><00:26:03.060><c> bottom</c><00:26:03.180><c> with</c>

00:26:03.470 --> 00:26:03.480 align:start position:0%
who go tell not top to bottom with
 

00:26:03.480 --> 00:26:06.680 align:start position:0%
who go tell not top to bottom with
chains<00:26:03.810><c> and</c><00:26:04.400><c> reactivity</c><00:26:05.400><c> but</c><00:26:06.300><c> I</c><00:26:06.360><c> think</c><00:26:06.570><c> from</c>

00:26:06.680 --> 00:26:06.690 align:start position:0%
chains and reactivity but I think from
 

00:26:06.690 --> 00:26:09.410 align:start position:0%
chains and reactivity but I think from
the<00:26:06.750><c> AG</c><00:26:07.710><c> presentment</c><00:26:07.980><c> cases</c><00:26:08.700><c> it's</c><00:26:09.090><c> just</c><00:26:09.180><c> a</c>

00:26:09.410 --> 00:26:09.420 align:start position:0%
the AG presentment cases it's just a
 

00:26:09.420 --> 00:26:11.240 align:start position:0%
the AG presentment cases it's just a
switcher<00:26:09.750><c> Fred</c><00:26:09.990><c> and</c><00:26:10.650><c> that's</c><00:26:10.770><c> because</c><00:26:10.980><c> the</c><00:26:11.040><c> API</c>

00:26:11.240 --> 00:26:11.250 align:start position:0%
switcher Fred and that's because the API
 

00:26:11.250 --> 00:26:12.800 align:start position:0%
switcher Fred and that's because the API
is<00:26:11.370><c> that</c><00:26:11.760><c> we</c><00:26:11.880><c> have</c><00:26:12.060><c> and</c><00:26:12.330><c> we</c><00:26:12.390><c> spoke</c><00:26:12.570><c> about</c><00:26:12.690><c> them</c>

00:26:12.800 --> 00:26:12.810 align:start position:0%
is that we have and we spoke about them
 

00:26:12.810 --> 00:26:16.670 align:start position:0%
is that we have and we spoke about them
earlier<00:26:12.870><c> aren't</c><00:26:13.680><c> so</c><00:26:13.800><c> great</c><00:26:13.920><c> to</c><00:26:14.100><c> use</c><00:26:15.530><c> I'd</c><00:26:16.530><c> say</c>

00:26:16.670 --> 00:26:16.680 align:start position:0%
earlier aren't so great to use I'd say
 

00:26:16.680 --> 00:26:18.710 align:start position:0%
earlier aren't so great to use I'd say
that<00:26:16.830><c> you</c><00:26:16.920><c> and</c><00:26:17.160><c> because</c><00:26:17.640><c> of</c><00:26:17.670><c> that</c><00:26:17.820><c> most</c><00:26:18.450><c> people</c>

00:26:18.710 --> 00:26:18.720 align:start position:0%
that you and because of that most people
 

00:26:18.720 --> 00:26:20.360 align:start position:0%
that you and because of that most people
end<00:26:18.840><c> up</c><00:26:18.900><c> using</c><00:26:19.110><c> things</c><00:26:19.470><c> like</c><00:26:19.620><c> single</c><00:26:20.160><c> may</c><00:26:20.310><c> be</c>

00:26:20.360 --> 00:26:20.370 align:start position:0%
end up using things like single may be
 

00:26:20.370 --> 00:26:21.440 align:start position:0%
end up using things like single may be
incomplete<00:26:20.730><c> for</c><00:26:20.970><c> because</c><00:26:21.330><c> that's</c>

00:26:21.440 --> 00:26:21.450 align:start position:0%
incomplete for because that's
 

00:26:21.450 --> 00:26:22.610 align:start position:0%
incomplete for because that's
specifically<00:26:21.960><c> what</c><00:26:22.050><c> they</c><00:26:22.170><c> are</c><00:26:22.290><c> there's</c>

00:26:22.610 --> 00:26:22.620 align:start position:0%
specifically what they are there's
 

00:26:22.620 --> 00:26:26.360 align:start position:0%
specifically what they are there's
single<00:26:22.890><c> one-shot</c><00:26:23.370><c> things</c><00:26:23.930><c> single</c><00:26:25.220><c> allows</c><00:26:26.220><c> you</c>

00:26:26.360 --> 00:26:26.370 align:start position:0%
single one-shot things single allows you
 

00:26:26.370 --> 00:26:27.800 align:start position:0%
single one-shot things single allows you
to<00:26:26.490><c> always</c><00:26:26.610><c> have</c><00:26:26.760><c> a</c><00:26:26.820><c> type</c><00:26:27.000><c> maybe</c><00:26:27.450><c> he's</c><00:26:27.630><c> not</c><00:26:27.750><c> a</c>

00:26:27.800 --> 00:26:27.810 align:start position:0%
to always have a type maybe he's not a
 

00:26:27.810 --> 00:26:29.060 align:start position:0%
to always have a type maybe he's not a
ball<00:26:27.960><c> and</c><00:26:28.110><c> complete</c><00:26:28.380><c> balls</c><00:26:28.620><c> doesn't</c><00:26:28.950><c> have</c><00:26:29.040><c> a</c>

00:26:29.060 --> 00:26:29.070 align:start position:0%
ball and complete balls doesn't have a
 

00:26:29.070 --> 00:26:30.740 align:start position:0%
ball and complete balls doesn't have a
return<00:26:29.370><c> type</c><00:26:29.550><c> so</c><00:26:30.420><c> they're</c><00:26:30.540><c> all</c><00:26:30.630><c> pretty</c>

00:26:30.740 --> 00:26:30.750 align:start position:0%
return type so they're all pretty
 

00:26:30.750 --> 00:26:33.920 align:start position:0%
return type so they're all pretty
similar<00:26:31.520><c> but</c><00:26:32.520><c> in</c><00:26:33.060><c> fact</c><00:26:33.270><c> they</c><00:26:33.450><c> only</c><00:26:33.480><c> actually</c>

00:26:33.920 --> 00:26:33.930 align:start position:0%
similar but in fact they only actually
 

00:26:33.930 --> 00:26:35.930 align:start position:0%
similar but in fact they only actually
exist<00:26:34.200><c> on</c><00:26:34.380><c> Eric's</c><00:26:34.710><c> Java</c><00:26:34.920><c> are</c><00:26:35.190><c> at</c><00:26:35.400><c> Scala</c><00:26:35.730><c> and</c>

00:26:35.930 --> 00:26:35.940 align:start position:0%
exist on Eric's Java are at Scala and
 

00:26:35.940 --> 00:26:37.070 align:start position:0%
exist on Eric's Java are at Scala and
are<00:26:36.120><c> it's</c><00:26:36.240><c> groovy</c><00:26:36.450><c> they</c><00:26:36.840><c> don't</c><00:26:36.990><c> actually</c>

00:26:37.070 --> 00:26:37.080 align:start position:0%
are it's groovy they don't actually
 

00:26:37.080 --> 00:26:39.200 align:start position:0%
are it's groovy they don't actually
exist<00:26:37.290><c> in</c><00:26:37.500><c> any</c><00:26:37.680><c> other</c><00:26:37.860><c> platform</c><00:26:38.400><c> so</c><00:26:38.970><c> I</c><00:26:39.000><c> said</c>

00:26:39.200 --> 00:26:39.210 align:start position:0%
exist in any other platform so I said
 

00:26:39.210 --> 00:26:40.190 align:start position:0%
exist in any other platform so I said
earlier<00:26:39.450><c> then</c><00:26:39.600><c> maybe</c>

00:26:40.190 --> 00:26:40.200 align:start position:0%
earlier then maybe
 

00:26:40.200 --> 00:26:42.379 align:start position:0%
earlier then maybe
it's<00:26:40.320><c> more</c><00:26:40.649><c> reflection</c><00:26:41.220><c> of</c><00:26:41.370><c> the</c><00:26:41.940><c> api's</c><00:26:42.210><c> that</c>

00:26:42.379 --> 00:26:42.389 align:start position:0%
it's more reflection of the api's that
 

00:26:42.389 --> 00:26:44.240 align:start position:0%
it's more reflection of the api's that
we<00:26:42.510><c> have</c><00:26:42.659><c> our</c><00:26:42.840><c> disposal</c><00:26:43.710><c> rather</c><00:26:43.950><c> than</c><00:26:44.159><c> the</c>

00:26:44.240 --> 00:26:44.250 align:start position:0%
we have our disposal rather than the
 

00:26:44.250 --> 00:26:47.419 align:start position:0%
we have our disposal rather than the
fact<00:26:44.460><c> that</c><00:26:44.549><c> they're</c><00:26:44.730><c> needed</c><00:26:46.190><c> Soaker</c><00:26:47.190><c> Oh</c><00:26:47.220><c> teens</c>

00:26:47.419 --> 00:26:47.429 align:start position:0%
fact that they're needed Soaker Oh teens
 

00:26:47.429 --> 00:26:49.250 align:start position:0%
fact that they're needed Soaker Oh teens
can<00:26:47.639><c> actually</c><00:26:47.940><c> quite</c><00:26:48.149><c> easily</c><00:26:48.360><c> replace</c><00:26:48.809><c> single</c>

00:26:49.250 --> 00:26:49.260 align:start position:0%
can actually quite easily replace single
 

00:26:49.260 --> 00:26:50.810 align:start position:0%
can actually quite easily replace single
maybe<00:26:49.409><c> incompressible</c><00:26:49.919><c> they</c><00:26:50.220><c> do</c><00:26:50.279><c> exactly</c>

00:26:50.810 --> 00:26:50.820 align:start position:0%
maybe incompressible they do exactly
 

00:26:50.820 --> 00:26:52.039 align:start position:0%
maybe incompressible they do exactly
what<00:26:50.970><c> you</c><00:26:51.090><c> think</c><00:26:51.240><c> and</c><00:26:51.539><c> we</c><00:26:51.600><c> said</c><00:26:51.720><c> earlier</c><00:26:51.929><c> about</c>

00:26:52.039 --> 00:26:52.049 align:start position:0%
what you think and we said earlier about
 

00:26:52.049 --> 00:26:53.930 align:start position:0%
what you think and we said earlier about
replacing<00:26:52.500><c> callbacks</c><00:26:52.919><c> they</c><00:26:53.429><c> also</c><00:26:53.639><c> replace</c>

00:26:53.930 --> 00:26:53.940 align:start position:0%
replacing callbacks they also replace
 

00:26:53.940 --> 00:26:56.990 align:start position:0%
replacing callbacks they also replace
these<00:26:54.120><c> kind</c><00:26:54.450><c> of</c><00:26:54.510><c> quite</c><00:26:54.870><c> nicely</c><00:26:55.049><c> so</c><00:26:55.909><c> is</c><00:26:56.909><c> an</c>

00:26:56.990 --> 00:26:57.000 align:start position:0%
these kind of quite nicely so is an
 

00:26:57.000 --> 00:26:58.879 align:start position:0%
these kind of quite nicely so is an
example<00:26:57.240><c> so</c><00:26:57.630><c> we</c><00:26:57.809><c> have</c><00:26:57.840><c> a</c><00:26:58.019><c> retrofit</c><00:26:58.559><c> interface</c>

00:26:58.879 --> 00:26:58.889 align:start position:0%
example so we have a retrofit interface
 

00:26:58.889 --> 00:27:01.639 align:start position:0%
example so we have a retrofit interface
which<00:26:59.850><c> has</c><00:27:00.090><c> a</c><00:27:00.120><c> guess</c><00:27:00.539><c> and</c><00:27:01.230><c> it</c><00:27:01.350><c> returns</c><00:27:01.590><c> a</c>

00:27:01.639 --> 00:27:01.649 align:start position:0%
which has a guess and it returns a
 

00:27:01.649 --> 00:27:03.230 align:start position:0%
which has a guess and it returns a
single<00:27:01.799><c> which</c><00:27:02.159><c> is</c><00:27:02.190><c> just</c><00:27:02.580><c> returns</c><00:27:02.850><c> a</c><00:27:02.909><c> list</c><00:27:03.059><c> of</c>

00:27:03.230 --> 00:27:03.240 align:start position:0%
single which is just returns a list of
 

00:27:03.240 --> 00:27:06.529 align:start position:0%
single which is just returns a list of
shows<00:27:03.740><c> and</c><00:27:04.740><c> the</c><00:27:05.669><c> way</c><00:27:05.760><c> you'd</c><00:27:05.880><c> use</c><00:27:06.059><c> that</c><00:27:06.090><c> in</c><00:27:06.389><c> our</c>

00:27:06.529 --> 00:27:06.539 align:start position:0%
shows and the way you'd use that in our
 

00:27:06.539 --> 00:27:08.600 align:start position:0%
shows and the way you'd use that in our
xjv<00:27:06.899><c> is</c><00:27:07.200><c> you</c><00:27:07.470><c> do</c><00:27:07.679><c> this</c><00:27:07.799><c> chaining</c><00:27:08.309><c> so</c><00:27:08.460><c> you'd</c>

00:27:08.600 --> 00:27:08.610 align:start position:0%
xjv is you do this chaining so you'd
 

00:27:08.610 --> 00:27:11.330 align:start position:0%
xjv is you do this chaining so you'd
switch<00:27:09.019><c> the</c><00:27:10.019><c> scheduler</c><00:27:10.590><c> using</c><00:27:10.860><c> scheduled</c><00:27:11.159><c> on</c>

00:27:11.330 --> 00:27:11.340 align:start position:0%
switch the scheduler using scheduled on
 

00:27:11.340 --> 00:27:12.529 align:start position:0%
switch the scheduler using scheduled on
and<00:27:11.639><c> here</c><00:27:11.940><c> we</c><00:27:12.000><c> can</c><00:27:12.090><c> use</c><00:27:12.179><c> the</c><00:27:12.269><c> i/o</c><00:27:12.389><c> scheduler</c>

00:27:12.529 --> 00:27:12.539 align:start position:0%
and here we can use the i/o scheduler
 

00:27:12.539 --> 00:27:14.750 align:start position:0%
and here we can use the i/o scheduler
which<00:27:12.990><c> is</c><00:27:13.080><c> provided</c><00:27:13.409><c> for</c><00:27:13.590><c> you</c><00:27:13.740><c> and</c><00:27:13.919><c> then</c><00:27:14.639><c> we're</c>

00:27:14.750 --> 00:27:14.760 align:start position:0%
which is provided for you and then we're
 

00:27:14.760 --> 00:27:16.519 align:start position:0%
which is provided for you and then we're
going<00:27:14.850><c> to</c><00:27:14.909><c> do</c><00:27:15.299><c> some</c><00:27:15.510><c> calls</c><00:27:15.659><c> to</c><00:27:16.110><c> when</c><00:27:16.409><c> it's</c>

00:27:16.519 --> 00:27:16.529 align:start position:0%
going to do some calls to when it's
 

00:27:16.529 --> 00:27:20.120 align:start position:0%
going to do some calls to when it's
finished<00:27:17.570><c> now</c><00:27:18.570><c> the</c><00:27:18.630><c> nice</c><00:27:18.809><c> thing</c><00:27:19.080><c> about</c><00:27:19.230><c> the</c><00:27:19.710><c> rx</c>

00:27:20.120 --> 00:27:20.130 align:start position:0%
finished now the nice thing about the rx
 

00:27:20.130 --> 00:27:22.310 align:start position:0%
finished now the nice thing about the rx
to<00:27:20.669><c> interrupt</c><00:27:21.299><c> library</c><00:27:21.570><c> of</c><00:27:21.630><c> carotenes</c><00:27:22.080><c> is</c>

00:27:22.310 --> 00:27:22.320 align:start position:0%
to interrupt library of carotenes is
 

00:27:22.320 --> 00:27:24.889 align:start position:0%
to interrupt library of carotenes is
that<00:27:22.529><c> you</c><00:27:22.620><c> can</c><00:27:22.799><c> actually</c><00:27:22.980><c> use</c><00:27:23.850><c> that</c><00:27:23.899><c> exact</c>

00:27:24.889 --> 00:27:24.899 align:start position:0%
that you can actually use that exact
 

00:27:24.899 --> 00:27:27.470 align:start position:0%
that you can actually use that exact
single<00:27:25.440><c> as</c><00:27:26.279><c> an</c><00:27:26.460><c> await</c><00:27:26.700><c> so</c><00:27:27.149><c> you</c><00:27:27.179><c> can</c><00:27:27.360><c> actually</c>

00:27:27.470 --> 00:27:27.480 align:start position:0%
single as an await so you can actually
 

00:27:27.480 --> 00:27:30.919 align:start position:0%
single as an await so you can actually
use<00:27:28.230><c> it</c><00:27:28.350><c> as</c><00:27:28.470><c> like</c><00:27:28.590><c> a</c><00:27:28.679><c> suspending</c><00:27:29.220><c> deferred</c><00:27:29.929><c> so</c>

00:27:30.919 --> 00:27:30.929 align:start position:0%
use it as like a suspending deferred so
 

00:27:30.929 --> 00:27:32.480 align:start position:0%
use it as like a suspending deferred so
it's<00:27:31.139><c> really</c><00:27:31.350><c> handy</c><00:27:31.620><c> for</c><00:27:32.010><c> when</c><00:27:32.039><c> you're</c><00:27:32.340><c> kind</c>

00:27:32.480 --> 00:27:32.490 align:start position:0%
it's really handy for when you're kind
 

00:27:32.490 --> 00:27:34.279 align:start position:0%
it's really handy for when you're kind
of<00:27:32.610><c> slowly</c><00:27:32.909><c> migrating</c><00:27:33.539><c> towards</c><00:27:33.870><c> carotenes</c>

00:27:34.279 --> 00:27:34.289 align:start position:0%
of slowly migrating towards carotenes
 

00:27:34.289 --> 00:27:35.600 align:start position:0%
of slowly migrating towards carotenes
and<00:27:34.409><c> you</c><00:27:34.889><c> don't</c><00:27:35.010><c> want</c><00:27:35.130><c> to</c><00:27:35.190><c> change</c><00:27:35.309><c> everything</c>

00:27:35.600 --> 00:27:35.610 align:start position:0%
and you don't want to change everything
 

00:27:35.610 --> 00:27:38.990 align:start position:0%
and you don't want to change everything
know<00:27:36.510><c> from</c><00:27:36.960><c> day</c><00:27:37.230><c> one</c><00:27:37.470><c> you</c><00:27:38.429><c> can</c><00:27:38.580><c> actually</c><00:27:38.700><c> keep</c>

00:27:38.990 --> 00:27:39.000 align:start position:0%
know from day one you can actually keep
 

00:27:39.000 --> 00:27:41.480 align:start position:0%
know from day one you can actually keep
those<00:27:39.269><c> interfaces</c><00:27:39.690><c> all</c><00:27:40.139><c> those</c><00:27:40.320><c> reserve</c><00:27:41.279><c> balls</c>

00:27:41.480 --> 00:27:41.490 align:start position:0%
those interfaces all those reserve balls
 

00:27:41.490 --> 00:27:42.889 align:start position:0%
those interfaces all those reserve balls
and<00:27:41.730><c> you</c><00:27:42.059><c> can</c><00:27:42.149><c> actually</c><00:27:42.269><c> just</c><00:27:42.419><c> call</c><00:27:42.659><c> a</c><00:27:42.690><c> weight</c>

00:27:42.889 --> 00:27:42.899 align:start position:0%
and you can actually just call a weight
 

00:27:42.899 --> 00:27:45.230 align:start position:0%
and you can actually just call a weight
on<00:27:42.929><c> them</c><00:27:43.230><c> you</c><00:27:43.500><c> receive</c><00:27:44.190><c> inside</c><00:27:44.730><c> can't</c><00:27:44.970><c> be</c>

00:27:45.230 --> 00:27:45.240 align:start position:0%
on them you receive inside can't be
 

00:27:45.240 --> 00:27:46.970 align:start position:0%
on them you receive inside can't be
using<00:27:45.480><c> carotenes</c><00:27:45.870><c> so</c><00:27:46.380><c> it's</c><00:27:46.500><c> quite</c><00:27:46.590><c> a</c><00:27:46.649><c> handy</c>

00:27:46.970 --> 00:27:46.980 align:start position:0%
using carotenes so it's quite a handy
 

00:27:46.980 --> 00:27:51.620 align:start position:0%
using carotenes so it's quite a handy
way<00:27:47.100><c> to</c><00:27:47.130><c> slowly</c><00:27:47.639><c> migrate</c><00:27:49.429><c> but</c><00:27:50.429><c> what</c><00:27:50.639><c> how</c><00:27:51.179><c> what</c>

00:27:51.620 --> 00:27:51.630 align:start position:0%
way to slowly migrate but what how what
 

00:27:51.630 --> 00:27:52.639 align:start position:0%
way to slowly migrate but what how what
a<00:27:51.659><c> might</c><00:27:51.779><c> be</c><00:27:51.840><c> great</c><00:27:52.019><c> if</c><00:27:52.139><c> we</c><00:27:52.200><c> can</c><00:27:52.260><c> actually</c><00:27:52.500><c> made</c>

00:27:52.639 --> 00:27:52.649 align:start position:0%
a might be great if we can actually made
 

00:27:52.649 --> 00:27:55.669 align:start position:0%
a might be great if we can actually made
that<00:27:52.769><c> retrofit</c><00:27:53.690><c> call</c><00:27:54.690><c> just</c><00:27:55.110><c> a</c><00:27:55.200><c> suspending</c>

00:27:55.669 --> 00:27:55.679 align:start position:0%
that retrofit call just a suspending
 

00:27:55.679 --> 00:27:57.110 align:start position:0%
that retrofit call just a suspending
function<00:27:55.980><c> and</c><00:27:56.159><c> just</c><00:27:56.279><c> remove</c><00:27:56.580><c> the</c><00:27:56.700><c> whole</c><00:27:56.820><c> rx</c>

00:27:57.110 --> 00:27:57.120 align:start position:0%
function and just remove the whole rx
 

00:27:57.120 --> 00:28:00.620 align:start position:0%
function and just remove the whole rx
from<00:27:57.269><c> the</c><00:27:57.360><c> start</c><00:27:58.159><c> well</c><00:27:59.159><c> we</c><00:27:59.399><c> can</c><00:27:59.580><c> and</c><00:28:00.389><c> that</c><00:28:00.539><c> is</c>

00:28:00.620 --> 00:28:00.630 align:start position:0%
from the start well we can and that is
 

00:28:00.630 --> 00:28:02.269 align:start position:0%
from the start well we can and that is
actually<00:28:00.720><c> coming</c><00:28:00.899><c> to</c><00:28:01.080><c> retrofit</c><00:28:01.320><c> soon</c><00:28:01.620><c> jake</c>

00:28:02.269 --> 00:28:02.279 align:start position:0%
actually coming to retrofit soon jake
 

00:28:02.279 --> 00:28:04.639 align:start position:0%
actually coming to retrofit soon jake
has<00:28:02.490><c> a</c><00:28:02.519><c> PR</c><00:28:03.029><c> which</c><00:28:03.330><c> is</c><00:28:03.480><c> pending</c><00:28:03.809><c> review</c><00:28:04.019><c> and</c><00:28:04.409><c> but</c>

00:28:04.639 --> 00:28:04.649 align:start position:0%
has a PR which is pending review and but
 

00:28:04.649 --> 00:28:08.779 align:start position:0%
has a PR which is pending review and but
it's<00:28:04.769><c> he</c><00:28:05.460><c> tells</c><00:28:05.700><c> me</c><00:28:05.820><c> age</c><00:28:05.909><c> soon</c><00:28:07.190><c> so</c><00:28:08.190><c> yeah</c><00:28:08.370><c> it's</c>

00:28:08.779 --> 00:28:08.789 align:start position:0%
it's he tells me age soon so yeah it's
 

00:28:08.789 --> 00:28:12.470 align:start position:0%
it's he tells me age soon so yeah it's
the<00:28:08.909><c> crimson</c><00:28:10.760><c> and</c><00:28:11.760><c> then</c><00:28:11.940><c> if</c><00:28:12.179><c> you</c><00:28:12.240><c> look</c><00:28:12.360><c> at</c><00:28:12.389><c> a</c>

00:28:12.470 --> 00:28:12.480 align:start position:0%
the crimson and then if you look at a
 

00:28:12.480 --> 00:28:14.210 align:start position:0%
the crimson and then if you look at a
consuming<00:28:12.929><c> code</c><00:28:13.110><c> it's</c><00:28:13.590><c> pretty</c><00:28:13.919><c> much</c><00:28:14.010><c> the</c><00:28:14.070><c> same</c>

00:28:14.210 --> 00:28:14.220 align:start position:0%
consuming code it's pretty much the same
 

00:28:14.220 --> 00:28:15.649 align:start position:0%
consuming code it's pretty much the same
it's<00:28:14.519><c> just</c><00:28:14.669><c> we</c><00:28:14.820><c> can</c><00:28:14.940><c> now</c><00:28:15.090><c> get</c><00:28:15.299><c> rid</c><00:28:15.330><c> of</c><00:28:15.539><c> that</c>

00:28:15.649 --> 00:28:15.659 align:start position:0%
it's just we can now get rid of that
 

00:28:15.659 --> 00:28:17.509 align:start position:0%
it's just we can now get rid of that
weight<00:28:15.870><c> and</c><00:28:16.110><c> it's</c><00:28:16.590><c> just</c><00:28:16.769><c> a</c><00:28:16.860><c> normal</c><00:28:17.010><c> suspending</c>

00:28:17.509 --> 00:28:17.519 align:start position:0%
weight and it's just a normal suspending
 

00:28:17.519 --> 00:28:18.799 align:start position:0%
weight and it's just a normal suspending
function<00:28:17.820><c> that</c><00:28:17.970><c> we've</c><00:28:18.059><c> called</c><00:28:18.299><c> and</c><00:28:18.570><c> it</c><00:28:18.659><c> you</c>

00:28:18.799 --> 00:28:18.809 align:start position:0%
function that we've called and it you
 

00:28:18.809 --> 00:28:22.639 align:start position:0%
function that we've called and it you
know<00:28:18.840><c> it's</c><00:28:19.080><c> normal</c><00:28:19.440><c> carotene</c><00:28:19.769><c> and</c><00:28:21.649><c> that</c>

00:28:22.639 --> 00:28:22.649 align:start position:0%
know it's normal carotene and that
 

00:28:22.649 --> 00:28:24.590 align:start position:0%
know it's normal carotene and that
brings<00:28:22.860><c> us</c><00:28:22.980><c> on</c><00:28:23.100><c> to</c><00:28:23.130><c> our</c><00:28:23.669><c> final</c><00:28:23.909><c> section</c><00:28:24.240><c> which</c>

00:28:24.590 --> 00:28:24.600 align:start position:0%
brings us on to our final section which
 

00:28:24.600 --> 00:28:26.269 align:start position:0%
brings us on to our final section which
is<00:28:24.809><c> kind</c><00:28:25.049><c> of</c><00:28:25.110><c> bringing</c><00:28:25.710><c> it</c><00:28:25.889><c> all</c><00:28:25.919><c> back</c><00:28:25.980><c> together</c>

00:28:26.269 --> 00:28:26.279 align:start position:0%
is kind of bringing it all back together
 

00:28:26.279 --> 00:28:28.669 align:start position:0%
is kind of bringing it all back together
and<00:28:27.240><c> trying</c><00:28:27.570><c> to</c><00:28:27.659><c> finger</c><00:28:27.870><c> two</c><00:28:28.019><c> scenarios</c><00:28:28.200><c> where</c>

00:28:28.669 --> 00:28:28.679 align:start position:0%
and trying to finger two scenarios where
 

00:28:28.679 --> 00:28:30.769 align:start position:0%
and trying to finger two scenarios where
we<00:28:28.950><c> show</c><00:28:29.250><c> you</c><00:28:29.309><c> how</c><00:28:29.490><c> to</c><00:28:29.549><c> use</c><00:28:29.700><c> carotenes</c><00:28:30.120><c> to</c><00:28:30.630><c> make</c>

00:28:30.769 --> 00:28:30.779 align:start position:0%
we show you how to use carotenes to make
 

00:28:30.779 --> 00:28:33.200 align:start position:0%
we show you how to use carotenes to make
your<00:28:30.899><c> lives</c><00:28:31.110><c> easier</c><00:28:31.230><c> on</c><00:28:31.529><c> Android</c><00:28:32.029><c> both</c><00:28:33.029><c> the</c>

00:28:33.200 --> 00:28:33.210 align:start position:0%
your lives easier on Android both the
 

00:28:33.210 --> 00:28:35.149 align:start position:0%
your lives easier on Android both the
examples<00:28:33.659><c> are</c><00:28:33.840><c> all</c><00:28:33.929><c> about</c><00:28:34.049><c> location</c><00:28:34.289><c> the</c>

00:28:35.149 --> 00:28:35.159 align:start position:0%
examples are all about location the
 

00:28:35.159 --> 00:28:36.529 align:start position:0%
examples are all about location the
first<00:28:35.340><c> one</c><00:28:35.519><c> is</c><00:28:35.700><c> about</c><00:28:35.820><c> actually</c><00:28:36.240><c> getting</c><00:28:36.480><c> the</c>

00:28:36.529 --> 00:28:36.539 align:start position:0%
first one is about actually getting the
 

00:28:36.539 --> 00:28:39.049 align:start position:0%
first one is about actually getting the
last<00:28:36.750><c> known</c><00:28:36.960><c> location</c><00:28:37.639><c> which</c><00:28:38.639><c> kind</c><00:28:39.029><c> of</c>

00:28:39.049 --> 00:28:39.059 align:start position:0%
last known location which kind of
 

00:28:39.059 --> 00:28:42.289 align:start position:0%
last known location which kind of
fingers<00:28:39.299><c> like</c><00:28:39.419><c> a</c><00:28:39.480><c> one</c><00:28:39.630><c> shot</c><00:28:39.779><c> callback</c><00:28:41.120><c> so</c><00:28:42.120><c> here</c>

00:28:42.289 --> 00:28:42.299 align:start position:0%
fingers like a one shot callback so here
 

00:28:42.299 --> 00:28:43.340 align:start position:0%
fingers like a one shot callback so here
we're<00:28:42.419><c> going</c><00:28:42.539><c> to</c><00:28:42.600><c> use</c><00:28:42.840><c> the</c><00:28:42.990><c> fused</c><00:28:43.289><c> location</c>

00:28:43.340 --> 00:28:43.350 align:start position:0%
we're going to use the fused location
 

00:28:43.350 --> 00:28:46.009 align:start position:0%
we're going to use the fused location
provider<00:28:43.830><c> client</c><00:28:44.399><c> which</c><00:28:45.179><c> is</c><00:28:45.210><c> from</c><00:28:45.659><c> the</c><00:28:45.779><c> Google</c>

00:28:46.009 --> 00:28:46.019 align:start position:0%
provider client which is from the Google
 

00:28:46.019 --> 00:28:48.560 align:start position:0%
provider client which is from the Google
Play<00:28:46.049><c> services</c><00:28:46.559><c> API</c><00:28:47.179><c> it's</c><00:28:48.179><c> actually</c><00:28:48.389><c> kind</c><00:28:48.539><c> of</c>

00:28:48.560 --> 00:28:48.570 align:start position:0%
Play services API it's actually kind of
 

00:28:48.570 --> 00:28:50.539 align:start position:0%
Play services API it's actually kind of
cool<00:28:48.720><c> because</c><00:28:48.870><c> it</c><00:28:49.289><c> combines</c><00:28:50.010><c> all</c><00:28:50.279><c> different</c>

00:28:50.539 --> 00:28:50.549 align:start position:0%
cool because it combines all different
 

00:28:50.549 --> 00:28:52.879 align:start position:0%
cool because it combines all different
providers<00:28:50.970><c> we</c><00:28:51.090><c> have</c><00:28:51.240><c> like</c><00:28:51.510><c> Wi-Fi</c><00:28:52.019><c> and</c><00:28:52.350><c> GPS</c><00:28:52.860><c> and</c>

00:28:52.879 --> 00:28:52.889 align:start position:0%
providers we have like Wi-Fi and GPS and
 

00:28:52.889 --> 00:28:53.560 align:start position:0%
providers we have like Wi-Fi and GPS and
mobile

00:28:53.560 --> 00:28:53.570 align:start position:0%
mobile
 

00:28:53.570 --> 00:28:55.810 align:start position:0%
mobile
whatever<00:28:54.109><c> is</c><00:28:54.259><c> Bluetooth</c><00:28:54.679><c> provides</c><00:28:55.549><c> all</c><00:28:55.700><c> those</c>

00:28:55.810 --> 00:28:55.820 align:start position:0%
whatever is Bluetooth provides all those
 

00:28:55.820 --> 00:28:57.669 align:start position:0%
whatever is Bluetooth provides all those
providers<00:28:56.090><c> for</c><00:28:56.479><c> you</c><00:28:56.690><c> I</c><00:28:56.869><c> mean</c><00:28:57.139><c> to</c><00:28:57.200><c> one</c><00:28:57.440><c> single</c>

00:28:57.669 --> 00:28:57.679 align:start position:0%
providers for you I mean to one single
 

00:28:57.679 --> 00:28:59.049 align:start position:0%
providers for you I mean to one single
API<00:28:57.859><c> so</c><00:28:58.190><c> it's</c><00:28:58.309><c> actually</c><00:28:58.399><c> very</c><00:28:58.580><c> nice</c><00:28:58.729><c> API</c><00:28:58.909><c> to</c>

00:28:59.049 --> 00:28:59.059 align:start position:0%
API so it's actually very nice API to
 

00:28:59.059 --> 00:29:02.200 align:start position:0%
API so it's actually very nice API to
use<00:28:59.259><c> and</c><00:29:00.259><c> it</c><00:29:00.710><c> returns</c><00:29:01.039><c> a</c><00:29:01.279><c> task</c><00:29:01.519><c> which</c><00:29:02.029><c> is</c><00:29:02.179><c> a</c>

00:29:02.200 --> 00:29:02.210 align:start position:0%
use and it returns a task which is a
 

00:29:02.210 --> 00:29:03.820 align:start position:0%
use and it returns a task which is a
kind<00:29:02.359><c> of</c><00:29:02.479><c> Futura</c><00:29:02.929><c> type</c><00:29:03.200><c> thing</c><00:29:03.440><c> that</c><00:29:03.470><c> Play</c>

00:29:03.820 --> 00:29:03.830 align:start position:0%
kind of Futura type thing that Play
 

00:29:03.830 --> 00:29:06.609 align:start position:0%
kind of Futura type thing that Play
services<00:29:04.190><c> library</c><00:29:04.220><c> has</c><00:29:05.109><c> and</c><00:29:06.109><c> yeah</c><00:29:06.229><c> so</c><00:29:06.529><c> you</c>

00:29:06.609 --> 00:29:06.619 align:start position:0%
services library has and yeah so you
 

00:29:06.619 --> 00:29:08.440 align:start position:0%
services library has and yeah so you
call<00:29:06.769><c> client</c><00:29:07.100><c> get</c><00:29:07.399><c> last</c><00:29:07.759><c> location</c><00:29:08.179><c> and</c><00:29:08.389><c> they</c>

00:29:08.440 --> 00:29:08.450 align:start position:0%
call client get last location and they
 

00:29:08.450 --> 00:29:11.379 align:start position:0%
call client get last location and they
returns<00:29:08.720><c> a</c><00:29:08.779><c> task</c><00:29:08.989><c> and</c><00:29:09.350><c> from</c><00:29:10.249><c> the</c><00:29:10.340><c> task</c><00:29:10.609><c> you</c><00:29:11.239><c> can</c>

00:29:11.379 --> 00:29:11.389 align:start position:0%
returns a task and from the task you can
 

00:29:11.389 --> 00:29:13.239 align:start position:0%
returns a task and from the task you can
add<00:29:11.509><c> what</c><00:29:11.659><c> we</c><00:29:11.749><c> call</c><00:29:11.899><c> a</c><00:29:11.929><c> complete</c><00:29:12.559><c> listener</c><00:29:13.070><c> and</c>

00:29:13.239 --> 00:29:13.249 align:start position:0%
add what we call a complete listener and
 

00:29:13.249 --> 00:29:14.649 align:start position:0%
add what we call a complete listener and
then<00:29:13.460><c> you'll</c><00:29:13.669><c> get</c><00:29:14.059><c> the</c><00:29:14.179><c> result</c><00:29:14.509><c> back</c>

00:29:14.649 --> 00:29:14.659 align:start position:0%
then you'll get the result back
 

00:29:14.659 --> 00:29:18.239 align:start position:0%
then you'll get the result back
eventually<00:29:14.840><c> so</c><00:29:15.529><c> it's</c><00:29:15.950><c> completely</c><00:29:16.159><c> sync</c>

00:29:18.239 --> 00:29:18.249 align:start position:0%
eventually so it's completely sync
 

00:29:18.249 --> 00:29:20.320 align:start position:0%
eventually so it's completely sync
so<00:29:19.249><c> when</c><00:29:19.399><c> you</c><00:29:19.460><c> think</c><00:29:19.580><c> about</c><00:29:19.669><c> it</c><00:29:19.909><c> what</c><00:29:20.210><c> we're</c>

00:29:20.320 --> 00:29:20.330 align:start position:0%
so when you think about it what we're
 

00:29:20.330 --> 00:29:22.389 align:start position:0%
so when you think about it what we're
doing<00:29:20.539><c> is</c><00:29:20.690><c> converting</c><00:29:20.899><c> a</c><00:29:21.259><c> callback</c><00:29:21.590><c> api</c><00:29:21.739><c> into</c>

00:29:22.389 --> 00:29:22.399 align:start position:0%
doing is converting a callback api into
 

00:29:22.399 --> 00:29:23.619 align:start position:0%
doing is converting a callback api into
a<00:29:22.429><c> suspending</c><00:29:22.850><c> function</c><00:29:23.149><c> that's</c><00:29:23.359><c> pretty</c><00:29:23.570><c> much</c>

00:29:23.619 --> 00:29:23.629 align:start position:0%
a suspending function that's pretty much
 

00:29:23.629 --> 00:29:26.919 align:start position:0%
a suspending function that's pretty much
what<00:29:23.779><c> we</c><00:29:23.840><c> want</c><00:29:23.989><c> to</c><00:29:24.049><c> do</c><00:29:24.820><c> and</c><00:29:25.820><c> luckily</c><00:29:26.570><c> the</c><00:29:26.749><c> curie</c>

00:29:26.919 --> 00:29:26.929 align:start position:0%
what we want to do and luckily the curie
 

00:29:26.929 --> 00:29:29.529 align:start position:0%
what we want to do and luckily the curie
teens<00:29:27.109><c> library</c><00:29:27.409><c> has</c><00:29:27.619><c> to</c><00:29:28.190><c> kind</c><00:29:28.820><c> of</c><00:29:28.909><c> builders</c>

00:29:29.529 --> 00:29:29.539 align:start position:0%
teens library has to kind of builders
 

00:29:29.539 --> 00:29:32.019 align:start position:0%
teens library has to kind of builders
that<00:29:29.720><c> do</c><00:29:30.019><c> exactly</c><00:29:30.529><c> what</c><00:29:30.679><c> we</c><00:29:30.799><c> want</c><00:29:30.830><c> the</c><00:29:31.820><c> first</c>

00:29:32.019 --> 00:29:32.029 align:start position:0%
that do exactly what we want the first
 

00:29:32.029 --> 00:29:37.180 align:start position:0%
that do exactly what we want the first
is<00:29:32.210><c> to</c><00:29:32.359><c> suspend</c><00:29:32.599><c> co-routine</c><00:29:33.879><c> and</c><00:29:35.979><c> what</c><00:29:36.979><c> you</c><00:29:37.039><c> do</c>

00:29:37.180 --> 00:29:37.190 align:start position:0%
is to suspend co-routine and what you do
 

00:29:37.190 --> 00:29:39.190 align:start position:0%
is to suspend co-routine and what you do
you<00:29:37.340><c> pass</c><00:29:37.519><c> a</c><00:29:37.549><c> lambda</c><00:29:37.849><c> in</c><00:29:38.119><c> which</c><00:29:38.479><c> set</c><00:29:38.809><c> which</c>

00:29:39.190 --> 00:29:39.200 align:start position:0%
you pass a lambda in which set which
 

00:29:39.200 --> 00:29:40.869 align:start position:0%
you pass a lambda in which set which
allows<00:29:39.409><c> you</c><00:29:39.529><c> to</c><00:29:39.649><c> setup</c><00:29:39.889><c> your</c><00:29:39.979><c> callback</c><00:29:40.249><c> so</c><00:29:40.639><c> I</c>

00:29:40.869 --> 00:29:40.879 align:start position:0%
allows you to setup your callback so I
 

00:29:40.879 --> 00:29:42.820 align:start position:0%
allows you to setup your callback so I
think<00:29:41.029><c> what</c><00:29:41.239><c> we'll</c><00:29:41.330><c> do</c><00:29:41.479><c> here</c><00:29:41.659><c> is</c><00:29:41.840><c> call</c><00:29:42.679><c> play</c>

00:29:42.820 --> 00:29:42.830 align:start position:0%
think what we'll do here is call play
 

00:29:42.830 --> 00:29:44.940 align:start position:0%
think what we'll do here is call play
services<00:29:43.070><c> and</c><00:29:43.399><c> go</c><00:29:43.489><c> get</c><00:29:44.090><c> me</c><00:29:44.179><c> the</c><00:29:44.269><c> last</c><00:29:44.389><c> location</c>

00:29:44.940 --> 00:29:44.950 align:start position:0%
services and go get me the last location
 

00:29:44.950 --> 00:29:47.589 align:start position:0%
services and go get me the last location
at<00:29:45.950><c> that</c><00:29:46.009><c> point</c><00:29:46.399><c> this</c><00:29:46.519><c> is</c><00:29:46.580><c> the</c><00:29:46.940><c> Qura</c><00:29:47.389><c> teen</c>

00:29:47.589 --> 00:29:47.599 align:start position:0%
at that point this is the Qura teen
 

00:29:47.599 --> 00:29:49.299 align:start position:0%
at that point this is the Qura teen
immediately<00:29:48.139><c> suspends</c><00:29:48.619><c> waiting</c><00:29:49.070><c> for</c><00:29:49.249><c> the</c>

00:29:49.299 --> 00:29:49.309 align:start position:0%
immediately suspends waiting for the
 

00:29:49.309 --> 00:29:50.799 align:start position:0%
immediately suspends waiting for the
result<00:29:49.609><c> to</c><00:29:49.669><c> come</c><00:29:49.820><c> back</c><00:29:49.940><c> and</c><00:29:50.210><c> then</c><00:29:50.690><c> the</c>

00:29:50.799 --> 00:29:50.809 align:start position:0%
result to come back and then the
 

00:29:50.809 --> 00:29:52.389 align:start position:0%
result to come back and then the
callback<00:29:51.169><c> can</c><00:29:51.409><c> wake</c><00:29:51.679><c> it</c><00:29:51.799><c> back</c><00:29:51.830><c> up</c><00:29:52.070><c> basically</c>

00:29:52.389 --> 00:29:52.399 align:start position:0%
callback can wake it back up basically
 

00:29:52.399 --> 00:29:55.869 align:start position:0%
callback can wake it back up basically
so<00:29:53.149><c> we'll</c><00:29:53.269><c> go</c><00:29:53.359><c> for</c><00:29:53.450><c> an</c><00:29:53.570><c> example</c><00:29:53.809><c> now</c><00:29:54.879><c> yeah</c>

00:29:55.869 --> 00:29:55.879 align:start position:0%
so we'll go for an example now yeah
 

00:29:55.879 --> 00:29:57.219 align:start position:0%
so we'll go for an example now yeah
you're<00:29:56.090><c> given</c><00:29:56.269><c> a</c><00:29:56.330><c> continuation</c><00:29:56.690><c> to</c><00:29:56.869><c> later</c><00:29:57.080><c> is</c>

00:29:57.219 --> 00:29:57.229 align:start position:0%
you're given a continuation to later is
 

00:29:57.229 --> 00:30:01.989 align:start position:0%
you're given a continuation to later is
you<00:29:57.409><c> that's</c><00:29:57.619><c> how</c><00:29:57.769><c> we</c><00:29:57.830><c> do</c><00:29:58.039><c> and</c><00:30:00.879><c> analyze</c><00:30:01.879><c> the</c>

00:30:01.989 --> 00:30:01.999 align:start position:0%
you that's how we do and analyze the
 

00:30:01.999 --> 00:30:05.799 align:start position:0%
you that's how we do and analyze the
calls<00:30:02.149><c> accountable</c><00:30:04.450><c> so</c><00:30:05.450><c> actually</c><00:30:05.720><c> that's</c>

00:30:05.799 --> 00:30:05.809 align:start position:0%
calls accountable so actually that's
 

00:30:05.809 --> 00:30:07.149 align:start position:0%
calls accountable so actually that's
different<00:30:06.019><c> or</c><00:30:06.139><c> not</c><00:30:06.200><c> so</c><00:30:06.529><c> there</c><00:30:06.799><c> is</c><00:30:06.889><c> a</c><00:30:06.919><c> newer</c>

00:30:07.149 --> 00:30:07.159 align:start position:0%
different or not so there is a newer
 

00:30:07.159 --> 00:30:08.619 align:start position:0%
different or not so there is a newer
version<00:30:07.190><c> that's</c><00:30:07.759><c> are</c><00:30:07.909><c> doing</c><00:30:08.299><c> which</c><00:30:08.389><c> is</c><00:30:08.419><c> good</c>

00:30:08.619 --> 00:30:08.629 align:start position:0%
version that's are doing which is good
 

00:30:08.629 --> 00:30:09.909 align:start position:0%
version that's are doing which is good
luck<00:30:08.749><c> there's</c><00:30:09.349><c> another</c><00:30:09.499><c> version</c><00:30:09.679><c> because</c>

00:30:09.909 --> 00:30:09.919 align:start position:0%
luck there's another version because
 

00:30:09.919 --> 00:30:11.589 align:start position:0%
luck there's another version because
suspend<00:30:10.279><c> cancelable</c><00:30:10.789><c> carotene</c><00:30:11.149><c> so</c><00:30:11.359><c> cousins</c>

00:30:11.589 --> 00:30:11.599 align:start position:0%
suspend cancelable carotene so cousins
 

00:30:11.599 --> 00:30:14.259 align:start position:0%
suspend cancelable carotene so cousins
all<00:30:11.690><c> add</c><00:30:11.929><c> on</c><00:30:12.049><c> on</c><00:30:12.169><c> top</c><00:30:12.379><c> and</c><00:30:13.309><c> it</c><00:30:13.399><c> allows</c><00:30:13.639><c> you</c><00:30:13.999><c> to</c>

00:30:14.259 --> 00:30:14.269 align:start position:0%
all add on on top and it allows you to
 

00:30:14.269 --> 00:30:16.659 align:start position:0%
all add on on top and it allows you to
cancel<00:30:14.929><c> the</c><00:30:15.229><c> call</c><00:30:15.470><c> so</c><00:30:15.979><c> say</c><00:30:16.129><c> your</c><00:30:16.249><c> carotene</c><00:30:16.580><c> is</c>

00:30:16.659 --> 00:30:16.669 align:start position:0%
cancel the call so say your carotene is
 

00:30:16.669 --> 00:30:18.269 align:start position:0%
cancel the call so say your carotene is
canceled<00:30:17.059><c> you</c><00:30:17.239><c> can</c><00:30:17.509><c> then</c><00:30:17.629><c> tell</c><00:30:17.869><c> the</c>

00:30:18.269 --> 00:30:18.279 align:start position:0%
canceled you can then tell the
 

00:30:18.279 --> 00:30:20.440 align:start position:0%
canceled you can then tell the
underlying<00:30:19.279><c> API</c><00:30:19.639><c> in</c><00:30:19.940><c> this</c><00:30:20.059><c> case</c><00:30:20.239><c> play</c>

00:30:20.440 --> 00:30:20.450 align:start position:0%
underlying API in this case play
 

00:30:20.450 --> 00:30:24.759 align:start position:0%
underlying API in this case play
services<00:30:20.929><c> to</c><00:30:21.349><c> cancel</c><00:30:21.710><c> its</c><00:30:21.950><c> call</c><00:30:23.590><c> so</c><00:30:24.590><c> let's</c>

00:30:24.759 --> 00:30:24.769 align:start position:0%
services to cancel its call so let's
 

00:30:24.769 --> 00:30:26.080 align:start position:0%
services to cancel its call so let's
build<00:30:24.889><c> a</c><00:30:25.009><c> function</c><00:30:25.309><c> so</c><00:30:25.549><c> here</c><00:30:25.580><c> we</c><00:30:25.849><c> can</c><00:30:25.909><c> have</c><00:30:25.970><c> a</c>

00:30:26.080 --> 00:30:26.090 align:start position:0%
build a function so here we can have a
 

00:30:26.090 --> 00:30:27.310 align:start position:0%
build a function so here we can have a
suspending<00:30:26.450><c> function</c><00:30:26.749><c> called</c><00:30:26.929><c> get</c><00:30:27.109><c> last</c>

00:30:27.310 --> 00:30:27.320 align:start position:0%
suspending function called get last
 

00:30:27.320 --> 00:30:29.229 align:start position:0%
suspending function called get last
location<00:30:27.619><c> and</c><00:30:28.070><c> it</c><00:30:28.489><c> returns</c><00:30:28.789><c> an</c><00:30:28.999><c> actual</c>

00:30:29.229 --> 00:30:29.239 align:start position:0%
location and it returns an actual
 

00:30:29.239 --> 00:30:30.789 align:start position:0%
location and it returns an actual
location<00:30:29.690><c> to</c><00:30:29.840><c> some</c><00:30:29.929><c> intent</c><00:30:30.169><c> of</c><00:30:30.259><c> future</c><00:30:30.559><c> or</c><00:30:30.679><c> any</c>

00:30:30.789 --> 00:30:30.799 align:start position:0%
location to some intent of future or any
 

00:30:30.799 --> 00:30:34.019 align:start position:0%
location to some intent of future or any
funada<00:30:31.009><c> it's</c><00:30:31.460><c> just</c><00:30:31.669><c> a</c><00:30:31.820><c> straight-up</c><00:30:32.090><c> location</c>

00:30:34.019 --> 00:30:34.029 align:start position:0%
funada it's just a straight-up location
 

00:30:34.029 --> 00:30:35.950 align:start position:0%
funada it's just a straight-up location
so<00:30:35.029><c> we're</c><00:30:35.119><c> gonna</c><00:30:35.210><c> use</c><00:30:35.269><c> our</c><00:30:35.570><c> suspend</c>

00:30:35.950 --> 00:30:35.960 align:start position:0%
so we're gonna use our suspend
 

00:30:35.960 --> 00:30:37.810 align:start position:0%
so we're gonna use our suspend
cancellable<00:30:36.499><c> co-routine</c><00:30:36.889><c> builder</c><00:30:37.129><c> and</c><00:30:37.340><c> and</c>

00:30:37.810 --> 00:30:37.820 align:start position:0%
cancellable co-routine builder and and
 

00:30:37.820 --> 00:30:38.739 align:start position:0%
cancellable co-routine builder and and
then<00:30:38.090><c> we're</c><00:30:38.179><c> going</c><00:30:38.299><c> to</c><00:30:38.330><c> a</c><00:30:38.419><c> continuation</c>

00:30:38.739 --> 00:30:38.749 align:start position:0%
then we're going to a continuation
 

00:30:38.749 --> 00:30:42.879 align:start position:0%
then we're going to a continuation
that's<00:30:39.289><c> a</c><00:30:39.409><c> kind</c><00:30:40.009><c> of</c><00:30:40.099><c> callback</c><00:30:40.429><c> e</c><00:30:40.460><c> typing</c><00:30:41.889><c> and</c>

00:30:42.879 --> 00:30:42.889 align:start position:0%
that's a kind of callback e typing and
 

00:30:42.889 --> 00:30:45.009 align:start position:0%
that's a kind of callback e typing and
then<00:30:42.979><c> we're</c><00:30:43.159><c> gonna</c><00:30:43.249><c> sort</c><00:30:43.970><c> of</c><00:30:44.059><c> set</c><00:30:44.179><c> up</c><00:30:44.269><c> so</c><00:30:44.929><c> we're</c>

00:30:45.009 --> 00:30:45.019 align:start position:0%
then we're gonna sort of set up so we're
 

00:30:45.019 --> 00:30:46.509 align:start position:0%
then we're gonna sort of set up so we're
gonna<00:30:45.139><c> call</c><00:30:45.349><c> a</c><00:30:45.619><c> location</c><00:30:46.070><c> client</c><00:30:46.369><c> which</c><00:30:46.489><c> is</c>

00:30:46.509 --> 00:30:46.519 align:start position:0%
gonna call a location client which is
 

00:30:46.519 --> 00:30:49.930 align:start position:0%
gonna call a location client which is
the<00:30:46.700><c> Play</c><00:30:47.239><c> services</c><00:30:47.720><c> API</c><00:30:48.349><c> last</c><00:30:49.309><c> location</c><00:30:49.549><c> and</c>

00:30:49.930 --> 00:30:49.940 align:start position:0%
the Play services API last location and
 

00:30:49.940 --> 00:30:51.849 align:start position:0%
the Play services API last location and
then<00:30:50.450><c> we're</c><00:30:50.570><c> gonna</c><00:30:50.659><c> we</c><00:30:51.049><c> get</c><00:30:51.169><c> a</c><00:30:51.200><c> task</c><00:30:51.409><c> back</c><00:30:51.619><c> and</c>

00:30:51.849 --> 00:30:51.859 align:start position:0%
then we're gonna we get a task back and
 

00:30:51.859 --> 00:30:52.930 align:start position:0%
then we're gonna we get a task back and
then<00:30:52.009><c> we're</c><00:30:52.099><c> gonna</c><00:30:52.190><c> add</c><00:30:52.369><c> our</c><00:30:52.399><c> on</c><00:30:52.700><c> complete</c>

00:30:52.930 --> 00:30:52.940 align:start position:0%
then we're gonna add our on complete
 

00:30:52.940 --> 00:30:56.080 align:start position:0%
then we're gonna add our on complete
listener<00:30:53.289><c> at</c><00:30:54.289><c> that</c><00:30:54.470><c> point</c><00:30:54.710><c> we</c><00:30:55.190><c> are</c><00:30:55.220><c> gonna</c><00:30:55.549><c> wake</c>

00:30:56.080 --> 00:30:56.090 align:start position:0%
listener at that point we are gonna wake
 

00:30:56.090 --> 00:30:58.960 align:start position:0%
listener at that point we are gonna wake
up<00:30:56.239><c> actor</c><00:30:56.809><c> it</c><00:30:56.929><c> in</c><00:30:57.049><c> so</c><00:30:57.830><c> that</c><00:30:58.369><c> is</c><00:30:58.489><c> how</c><00:30:58.609><c> we</c><00:30:58.669><c> pass</c>

00:30:58.960 --> 00:30:58.970 align:start position:0%
up actor it in so that is how we pass
 

00:30:58.970 --> 00:31:00.489 align:start position:0%
up actor it in so that is how we pass
back<00:30:59.210><c> to</c><00:30:59.239><c> the</c><00:30:59.479><c> suspended</c><00:30:59.989><c> coyote</c><00:31:00.349><c> in</c><00:31:00.409><c> the</c>

00:31:00.489 --> 00:31:00.499 align:start position:0%
back to the suspended coyote in the
 

00:31:00.499 --> 00:31:02.289 align:start position:0%
back to the suspended coyote in the
result<00:31:00.859><c> and</c><00:31:01.129><c> it</c><00:31:01.399><c> then</c><00:31:01.549><c> wakes</c><00:31:01.759><c> up</c><00:31:01.940><c> and</c><00:31:02.119><c> there's</c>

00:31:02.289 --> 00:31:02.299 align:start position:0%
result and it then wakes up and there's
 

00:31:02.299 --> 00:31:05.259 align:start position:0%
result and it then wakes up and there's
a<00:31:02.359><c> suspending</c><00:31:03.279><c> function</c><00:31:04.279><c> basically</c><00:31:04.820><c> waits</c>

00:31:05.259 --> 00:31:05.269 align:start position:0%
a suspending function basically waits
 

00:31:05.269 --> 00:31:08.430 align:start position:0%
a suspending function basically waits
backup<00:31:05.539><c> resumes</c>

00:31:08.430 --> 00:31:08.440 align:start position:0%
 
 

00:31:08.440 --> 00:31:11.889 align:start position:0%
 
now<00:31:09.440><c> because</c><00:31:09.590><c> this</c><00:31:09.889><c> is</c><00:31:10.100><c> a</c><00:31:10.130><c> councilor</c><00:31:10.760><c> ball</c><00:31:10.940><c> of</c>

00:31:11.889 --> 00:31:11.899 align:start position:0%
now because this is a councilor ball of
 

00:31:11.899 --> 00:31:14.259 align:start position:0%
now because this is a councilor ball of
a<00:31:12.019><c> national</c><00:31:12.320><c> bank</c><00:31:12.590><c> really</c><00:31:12.860><c> because</c><00:31:13.760><c> we</c><00:31:14.179><c> are</c>

00:31:14.259 --> 00:31:14.269 align:start position:0%
a national bank really because we are
 

00:31:14.269 --> 00:31:16.899 align:start position:0%
a national bank really because we are
using<00:31:14.539><c> tasks</c><00:31:15.039><c> we're</c><00:31:16.039><c> not</c><00:31:16.190><c> using</c><00:31:16.399><c> the</c><00:31:16.549><c> success</c>

00:31:16.899 --> 00:31:16.909 align:start position:0%
using tasks we're not using the success
 

00:31:16.909 --> 00:31:18.639 align:start position:0%
using tasks we're not using the success
isn't<00:31:17.240><c> we</c><00:31:17.299><c> using</c><00:31:17.480><c> a</c><00:31:17.510><c> complete</c><00:31:17.840><c> listener</c><00:31:18.169><c> which</c>

00:31:18.639 --> 00:31:18.649 align:start position:0%
isn't we using a complete listener which
 

00:31:18.649 --> 00:31:20.740 align:start position:0%
isn't we using a complete listener which
means<00:31:18.889><c> that</c><00:31:19.039><c> the</c><00:31:19.190><c> task</c><00:31:19.460><c> itself</c><00:31:19.880><c> can</c><00:31:20.480><c> for</c><00:31:20.690><c> an</c>

00:31:20.740 --> 00:31:20.750 align:start position:0%
means that the task itself can for an
 

00:31:20.750 --> 00:31:22.539 align:start position:0%
means that the task itself can for an
exception<00:31:21.139><c> like</c><00:31:21.409><c> it</c><00:31:21.679><c> can</c><00:31:21.889><c> fail</c><00:31:22.159><c> for</c><00:31:22.429><c> whatever</c>

00:31:22.539 --> 00:31:22.549 align:start position:0%
exception like it can fail for whatever
 

00:31:22.549 --> 00:31:24.299 align:start position:0%
exception like it can fail for whatever
reason<00:31:22.940><c> so</c><00:31:23.090><c> you</c><00:31:23.120><c> don't</c><00:31:23.330><c> have</c><00:31:23.539><c> a</c><00:31:23.899><c> location</c>

00:31:24.299 --> 00:31:24.309 align:start position:0%
reason so you don't have a location
 

00:31:24.309 --> 00:31:27.490 align:start position:0%
reason so you don't have a location
permission<00:31:25.309><c> or</c><00:31:25.399><c> whatever</c><00:31:25.639><c> it</c><00:31:25.700><c> be</c><00:31:26.080><c> now</c><00:31:27.080><c> it</c><00:31:27.260><c> will</c>

00:31:27.490 --> 00:31:27.500 align:start position:0%
permission or whatever it be now it will
 

00:31:27.500 --> 00:31:29.259 align:start position:0%
permission or whatever it be now it will
raise<00:31:28.010><c> an</c><00:31:28.100><c> exception</c><00:31:28.190><c> on</c><00:31:28.519><c> you</c><00:31:28.730><c> which</c><00:31:29.120><c> means</c>

00:31:29.259 --> 00:31:29.269 align:start position:0%
raise an exception on you which means
 

00:31:29.269 --> 00:31:31.000 align:start position:0%
raise an exception on you which means
that<00:31:29.450><c> you</c><00:31:29.659><c> can</c><00:31:29.899><c> populate</c><00:31:30.169><c> that</c><00:31:30.500><c> back</c><00:31:30.710><c> up</c><00:31:30.889><c> to</c>

00:31:31.000 --> 00:31:31.010 align:start position:0%
that you can populate that back up to
 

00:31:31.010 --> 00:31:33.129 align:start position:0%
that you can populate that back up to
the<00:31:31.100><c> colleague</c><00:31:31.460><c> which</c><00:31:32.029><c> is</c><00:31:32.179><c> done</c><00:31:32.929><c> with</c><00:31:32.960><c> the</c>

00:31:33.129 --> 00:31:33.139 align:start position:0%
the colleague which is done with the
 

00:31:33.139 --> 00:31:37.330 align:start position:0%
the colleague which is done with the
resume<00:31:33.380><c> with</c><00:31:33.529><c> exception</c><00:31:34.070><c> method</c><00:31:35.080><c> and</c><00:31:36.340><c> finally</c>

00:31:37.330 --> 00:31:37.340 align:start position:0%
resume with exception method and finally
 

00:31:37.340 --> 00:31:39.250 align:start position:0%
resume with exception method and finally
because<00:31:37.940><c> we're</c><00:31:38.059><c> using</c><00:31:38.210><c> suspend</c><00:31:38.690><c> cancel</c><00:31:39.139><c> or</c>

00:31:39.250 --> 00:31:39.260 align:start position:0%
because we're using suspend cancel or
 

00:31:39.260 --> 00:31:42.100 align:start position:0%
because we're using suspend cancel or
co-routine<00:31:39.740><c> we</c><00:31:40.700><c> need</c><00:31:41.090><c> to</c><00:31:41.240><c> tell</c><00:31:41.510><c> the</c><00:31:41.899><c> Play</c>

00:31:42.100 --> 00:31:42.110 align:start position:0%
co-routine we need to tell the Play
 

00:31:42.110 --> 00:31:43.840 align:start position:0%
co-routine we need to tell the Play
services<00:31:42.500><c> API</c><00:31:42.769><c> that</c><00:31:43.010><c> we've</c><00:31:43.220><c> been</c><00:31:43.429><c> cancelled</c>

00:31:43.840 --> 00:31:43.850 align:start position:0%
services API that we've been cancelled
 

00:31:43.850 --> 00:31:46.450 align:start position:0%
services API that we've been cancelled
so<00:31:44.059><c> therefore</c><00:31:44.360><c> each</c><00:31:44.510><c> cancel</c><00:31:45.049><c> so</c><00:31:46.010><c> we</c><00:31:46.250><c> do</c><00:31:46.370><c> that</c>

00:31:46.450 --> 00:31:46.460 align:start position:0%
so therefore each cancel so we do that
 

00:31:46.460 --> 00:31:48.070 align:start position:0%
so therefore each cancel so we do that
with<00:31:46.610><c> a</c><00:31:46.639><c> callback</c><00:31:47.179><c> which</c><00:31:47.510><c> is</c><00:31:47.630><c> infocomm</c>

00:31:48.070 --> 00:31:48.080 align:start position:0%
with a callback which is infocomm
 

00:31:48.080 --> 00:31:50.560 align:start position:0%
with a callback which is infocomm
completion<00:31:48.649><c> at</c><00:31:49.490><c> that</c><00:31:49.669><c> point</c><00:31:49.909><c> as</c><00:31:50.179><c> soon</c><00:31:50.419><c> as</c><00:31:50.510><c> you</c>

00:31:50.560 --> 00:31:50.570 align:start position:0%
completion at that point as soon as you
 

00:31:50.570 --> 00:31:52.720 align:start position:0%
completion at that point as soon as you
know<00:31:51.080><c> that</c><00:31:51.289><c> the</c><00:31:51.529><c> curtain</c><00:31:52.010><c> has</c><00:31:52.100><c> been</c><00:31:52.190><c> cancelled</c>

00:31:52.720 --> 00:31:52.730 align:start position:0%
know that the curtain has been cancelled
 

00:31:52.730 --> 00:31:53.620 align:start position:0%
know that the curtain has been cancelled
which<00:31:52.850><c> means</c><00:31:53.029><c> that</c><00:31:53.120><c> you</c><00:31:53.179><c> need</c><00:31:53.299><c> to</c><00:31:53.360><c> sell</c><00:31:53.450><c> five</c>

00:31:53.620 --> 00:31:53.630 align:start position:0%
which means that you need to sell five
 

00:31:53.630 --> 00:31:55.450 align:start position:0%
which means that you need to sell five
services<00:31:54.049><c> now</c><00:31:54.679><c> they</c><00:31:54.860><c> say</c><00:31:55.010><c> PR</c><00:31:55.159><c> doesn't</c>

00:31:55.450 --> 00:31:55.460 align:start position:0%
services now they say PR doesn't
 

00:31:55.460 --> 00:31:56.799 align:start position:0%
services now they say PR doesn't
actually<00:31:55.549><c> exist</c><00:31:55.789><c> because</c><00:31:56.210><c> Play</c><00:31:56.419><c> Services</c>

00:31:56.799 --> 00:31:56.809 align:start position:0%
actually exist because Play Services
 

00:31:56.809 --> 00:31:58.899 align:start position:0%
actually exist because Play Services
doesn't<00:31:57.080><c> have</c><00:31:57.260><c> a</c><00:31:57.289><c> cancel</c><00:31:57.710><c> method</c><00:31:57.980><c> but</c><00:31:58.399><c> imagine</c>

00:31:58.899 --> 00:31:58.909 align:start position:0%
doesn't have a cancel method but imagine
 

00:31:58.909 --> 00:32:01.840 align:start position:0%
doesn't have a cancel method but imagine
it<00:31:59.000><c> just</c><00:31:59.029><c> exists</c><00:32:00.220><c> now</c><00:32:01.220><c> Adams</c><00:32:01.519><c> going</c><00:32:01.610><c> to</c><00:32:01.669><c> talk</c>

00:32:01.840 --> 00:32:01.850 align:start position:0%
it just exists now Adams going to talk
 

00:32:01.850 --> 00:32:05.259 align:start position:0%
it just exists now Adams going to talk
about<00:32:01.940><c> observing</c><00:32:02.740><c> sure</c><00:32:03.880><c> so</c><00:32:04.880><c> what</c><00:32:05.000><c> happens</c>

00:32:05.259 --> 00:32:05.269 align:start position:0%
about observing sure so what happens
 

00:32:05.269 --> 00:32:06.610 align:start position:0%
about observing sure so what happens
when<00:32:05.389><c> you</c><00:32:05.510><c> want</c><00:32:05.600><c> to</c><00:32:05.659><c> observe</c><00:32:05.870><c> a</c><00:32:06.049><c> sequence</c><00:32:06.470><c> of</c>

00:32:06.610 --> 00:32:06.620 align:start position:0%
when you want to observe a sequence of
 

00:32:06.620 --> 00:32:08.799 align:start position:0%
when you want to observe a sequence of
events<00:32:06.889><c> over</c><00:32:07.100><c> time</c><00:32:07.130><c> no</c><00:32:07.820><c> this</c><00:32:08.299><c> is</c><00:32:08.510><c> the</c><00:32:08.659><c> thing</c>

00:32:08.799 --> 00:32:08.809 align:start position:0%
events over time no this is the thing
 

00:32:08.809 --> 00:32:10.419 align:start position:0%
events over time no this is the thing
that<00:32:08.990><c> our</c><00:32:09.019><c> ex</c><00:32:09.260><c> is</c><00:32:09.440><c> really</c><00:32:09.799><c> really</c><00:32:10.039><c> good</c><00:32:10.279><c> at</c>

00:32:10.419 --> 00:32:10.429 align:start position:0%
that our ex is really really good at
 

00:32:10.429 --> 00:32:12.549 align:start position:0%
that our ex is really really good at
like<00:32:10.639><c> if</c><00:32:10.940><c> you're</c><00:32:11.149><c> using</c><00:32:11.450><c> rx</c><00:32:11.809><c> for</c><00:32:12.049><c> anything</c><00:32:12.260><c> it</c>

00:32:12.549 --> 00:32:12.559 align:start position:0%
like if you're using rx for anything it
 

00:32:12.559 --> 00:32:14.620 align:start position:0%
like if you're using rx for anything it
should<00:32:12.710><c> be</c><00:32:12.830><c> for</c><00:32:13.010><c> this</c><00:32:13.159><c> and</c><00:32:14.000><c> people</c><00:32:14.240><c> tend</c><00:32:14.570><c> to</c>

00:32:14.620 --> 00:32:14.630 align:start position:0%
should be for this and people tend to
 

00:32:14.630 --> 00:32:17.320 align:start position:0%
should be for this and people tend to
compare<00:32:15.130><c> rx</c><00:32:16.130><c> Java</c><00:32:16.370><c> and</c><00:32:16.580><c> co-routines</c><00:32:17.029><c> quite</c><00:32:17.299><c> a</c>

00:32:17.320 --> 00:32:17.330 align:start position:0%
compare rx Java and co-routines quite a
 

00:32:17.330 --> 00:32:19.870 align:start position:0%
compare rx Java and co-routines quite a
bit<00:32:17.570><c> in</c><00:32:17.960><c> blogs</c><00:32:18.679><c> and</c><00:32:18.919><c> so</c><00:32:19.070><c> on</c><00:32:19.159><c> and</c><00:32:19.309><c> so</c><00:32:19.429><c> forth</c><00:32:19.669><c> so</c>

00:32:19.870 --> 00:32:19.880 align:start position:0%
bit in blogs and so on and so forth so
 

00:32:19.880 --> 00:32:21.430 align:start position:0%
bit in blogs and so on and so forth so
so<00:32:20.269><c> what</c><00:32:20.389><c> does</c><00:32:20.480><c> it</c><00:32:20.570><c> actually</c><00:32:20.690><c> look</c><00:32:20.929><c> like</c><00:32:21.260><c> if</c><00:32:21.409><c> we</c>

00:32:21.430 --> 00:32:21.440 align:start position:0%
so what does it actually look like if we
 

00:32:21.440 --> 00:32:23.289 align:start position:0%
so what does it actually look like if we
try<00:32:21.649><c> and</c><00:32:21.769><c> emulate</c><00:32:21.980><c> this</c><00:32:22.309><c> using</c><00:32:22.880><c> co-routines</c>

00:32:23.289 --> 00:32:23.299 align:start position:0%
try and emulate this using co-routines
 

00:32:23.299 --> 00:32:26.110 align:start position:0%
try and emulate this using co-routines
as<00:32:23.419><c> a</c><00:32:23.480><c> primitive</c><00:32:24.100><c> so</c><00:32:25.100><c> place</c><00:32:25.730><c> service</c><00:32:25.970><c> is</c><00:32:26.090><c> a</c>

00:32:26.110 --> 00:32:26.120 align:start position:0%
as a primitive so place service is a
 

00:32:26.120 --> 00:32:27.789 align:start position:0%
as a primitive so place service is a
location<00:32:26.510><c> API</c><00:32:26.750><c> in</c><00:32:27.019><c> addition</c><00:32:27.320><c> to</c><00:32:27.440><c> letting</c><00:32:27.620><c> you</c>

00:32:27.789 --> 00:32:27.799 align:start position:0%
location API in addition to letting you
 

00:32:27.799 --> 00:32:29.470 align:start position:0%
location API in addition to letting you
get<00:32:27.980><c> just</c><00:32:28.220><c> kind</c><00:32:28.429><c> of</c><00:32:28.519><c> a</c><00:32:28.610><c> one</c><00:32:28.789><c> shot</c><00:32:29.029><c> what's</c><00:32:29.330><c> my</c>

00:32:29.470 --> 00:32:29.480 align:start position:0%
get just kind of a one shot what's my
 

00:32:29.480 --> 00:32:30.399 align:start position:0%
get just kind of a one shot what's my
current<00:32:29.809><c> location</c>

00:32:30.399 --> 00:32:30.409 align:start position:0%
current location
 

00:32:30.409 --> 00:32:32.080 align:start position:0%
current location
it<00:32:30.620><c> lets</c><00:32:30.769><c> you</c><00:32:30.889><c> request</c><00:32:31.220><c> location</c><00:32:31.669><c> updates</c>

00:32:32.080 --> 00:32:32.090 align:start position:0%
it lets you request location updates
 

00:32:32.090 --> 00:32:33.850 align:start position:0%
it lets you request location updates
using<00:32:32.389><c> a</c><00:32:32.570><c> callback</c><00:32:32.779><c> that's</c><00:32:33.080><c> invoked</c><00:32:33.470><c> multiple</c>

00:32:33.850 --> 00:32:33.860 align:start position:0%
using a callback that's invoked multiple
 

00:32:33.860 --> 00:32:35.769 align:start position:0%
using a callback that's invoked multiple
times<00:32:34.070><c> so</c><00:32:34.820><c> normally</c><00:32:35.179><c> this</c><00:32:35.299><c> is</c><00:32:35.480><c> a</c><00:32:35.510><c> prime</c>

00:32:35.769 --> 00:32:35.779 align:start position:0%
times so normally this is a prime
 

00:32:35.779 --> 00:32:37.149 align:start position:0%
times so normally this is a prime
candidate<00:32:36.260><c> to</c><00:32:36.289><c> be</c><00:32:36.440><c> an</c><00:32:36.529><c> observable</c><00:32:36.860><c> you</c>

00:32:37.149 --> 00:32:37.159 align:start position:0%
candidate to be an observable you
 

00:32:37.159 --> 00:32:38.889 align:start position:0%
candidate to be an observable you
register<00:32:37.580><c> a</c><00:32:37.610><c> callback</c><00:32:37.820><c> at</c><00:32:38.179><c> subscribe</c><00:32:38.600><c> time</c>

00:32:38.889 --> 00:32:38.899 align:start position:0%
register a callback at subscribe time
 

00:32:38.899 --> 00:32:41.440 align:start position:0%
register a callback at subscribe time
and<00:32:39.519><c> unregister</c><00:32:40.519><c> when</c><00:32:40.700><c> that</c><00:32:40.850><c> subscription</c><00:32:41.210><c> is</c>

00:32:41.440 --> 00:32:41.450 align:start position:0%
and unregister when that subscription is
 

00:32:41.450 --> 00:32:43.779 align:start position:0%
and unregister when that subscription is
disposed<00:32:41.870><c> we</c><00:32:42.200><c> get</c><00:32:42.350><c> this</c><00:32:42.559><c> composable</c><00:32:43.279><c> control</c>

00:32:43.779 --> 00:32:43.789 align:start position:0%
disposed we get this composable control
 

00:32:43.789 --> 00:32:45.639 align:start position:0%
disposed we get this composable control
over<00:32:44.419><c> shutting</c><00:32:44.750><c> down</c><00:32:44.899><c> the</c><00:32:45.049><c> updates</c><00:32:45.380><c> really</c>

00:32:45.639 --> 00:32:45.649 align:start position:0%
over shutting down the updates really
 

00:32:45.649 --> 00:32:48.159 align:start position:0%
over shutting down the updates really
cleanly<00:32:46.070><c> so</c><00:32:46.490><c> Rx</c><00:32:47.149><c> is</c><00:32:47.269><c> a</c><00:32:47.330><c> great</c><00:32:47.630><c> library</c><00:32:47.990><c> offers</c>

00:32:48.159 --> 00:32:48.169 align:start position:0%
cleanly so Rx is a great library offers
 

00:32:48.169 --> 00:32:49.990 align:start position:0%
cleanly so Rx is a great library offers
a<00:32:48.320><c> ton</c><00:32:48.500><c> of</c><00:32:48.559><c> functionality</c><00:32:48.769><c> to</c><00:32:49.250><c> build</c><00:32:49.760><c> things</c>

00:32:49.990 --> 00:32:50.000 align:start position:0%
a ton of functionality to build things
 

00:32:50.000 --> 00:32:52.539 align:start position:0%
a ton of functionality to build things
like<00:32:50.120><c> this</c><00:32:50.480><c> so</c><00:32:51.139><c> how</c><00:32:51.649><c> many</c><00:32:51.710><c> similar</c><00:32:52.159><c> benefits</c>

00:32:52.539 --> 00:32:52.549 align:start position:0%
like this so how many similar benefits
 

00:32:52.549 --> 00:32:54.190 align:start position:0%
like this so how many similar benefits
can<00:32:52.700><c> we</c><00:32:52.820><c> get</c><00:32:53.000><c> if</c><00:32:53.210><c> we</c><00:32:53.240><c> base</c><00:32:53.600><c> this</c><00:32:53.809><c> off</c><00:32:53.990><c> of</c>

00:32:54.190 --> 00:32:54.200 align:start position:0%
can we get if we base this off of
 

00:32:54.200 --> 00:32:57.190 align:start position:0%
can we get if we base this off of
suspending<00:32:54.649><c> functions</c><00:32:55.600><c> so</c><00:32:56.600><c> let's</c><00:32:56.840><c> again</c>

00:32:57.190 --> 00:32:57.200 align:start position:0%
suspending functions so let's again
 

00:32:57.200 --> 00:32:58.899 align:start position:0%
suspending functions so let's again
start<00:32:57.440><c> just</c><00:32:57.740><c> writing</c><00:32:58.039><c> a</c><00:32:58.190><c> simple</c><00:32:58.399><c> function</c><00:32:58.789><c> or</c>

00:32:58.899 --> 00:32:58.909 align:start position:0%
start just writing a simple function or
 

00:32:58.909 --> 00:33:00.149 align:start position:0%
start just writing a simple function or
at<00:32:59.000><c> least</c><00:32:59.120><c> it's</c><00:32:59.240><c> going</c><00:32:59.360><c> to</c><00:32:59.419><c> start</c><00:32:59.600><c> out</c><00:32:59.720><c> simple</c>

00:33:00.149 --> 00:33:00.159 align:start position:0%
at least it's going to start out simple
 

00:33:00.159 --> 00:33:01.930 align:start position:0%
at least it's going to start out simple
suspending<00:33:01.159><c> functions</c><00:33:01.519><c> don't</c><00:33:01.669><c> return</c><00:33:01.880><c> until</c>

00:33:01.930 --> 00:33:01.940 align:start position:0%
suspending functions don't return until
 

00:33:01.940 --> 00:33:03.909 align:start position:0%
suspending functions don't return until
their<00:33:02.389><c> work</c><00:33:02.510><c> is</c><00:33:02.659><c> all</c><00:33:02.809><c> done</c><00:33:02.840><c> so</c><00:33:03.500><c> there's</c><00:33:03.769><c> no</c>

00:33:03.909 --> 00:33:03.919 align:start position:0%
their work is all done so there's no
 

00:33:03.919 --> 00:33:05.980 align:start position:0%
their work is all done so there's no
disposable<00:33:04.580><c> or</c><00:33:04.820><c> closable</c><00:33:05.330><c> return</c><00:33:05.690><c> by</c><00:33:05.929><c> it</c>

00:33:05.980 --> 00:33:05.990 align:start position:0%
disposable or closable return by it
 

00:33:05.990 --> 00:33:07.629 align:start position:0%
disposable or closable return by it
since<00:33:06.320><c> the</c><00:33:06.440><c> calling</c><00:33:06.769><c> scope</c><00:33:07.039><c> itself</c><00:33:07.429><c> is</c>

00:33:07.629 --> 00:33:07.639 align:start position:0%
since the calling scope itself is
 

00:33:07.639 --> 00:33:09.100 align:start position:0%
since the calling scope itself is
cancelable<00:33:08.210><c> we</c><00:33:08.330><c> just</c><00:33:08.480><c> don't</c><00:33:08.630><c> return</c><00:33:08.899><c> until</c>

00:33:09.100 --> 00:33:09.110 align:start position:0%
cancelable we just don't return until
 

00:33:09.110 --> 00:33:09.610 align:start position:0%
cancelable we just don't return until
we're<00:33:09.350><c> done</c>

00:33:09.610 --> 00:33:09.620 align:start position:0%
we're done
 

00:33:09.620 --> 00:33:12.279 align:start position:0%
we're done
so<00:33:10.429><c> our</c><00:33:10.730><c> observer</c><00:33:11.179><c> in</c><00:33:11.419><c> this</c><00:33:11.539><c> case</c><00:33:11.779><c> can</c><00:33:12.019><c> just</c><00:33:12.200><c> be</c>

00:33:12.279 --> 00:33:12.289 align:start position:0%
so our observer in this case can just be
 

00:33:12.289 --> 00:33:14.350 align:start position:0%
so our observer in this case can just be
a<00:33:12.320><c> simple</c><00:33:12.559><c> lambda</c><00:33:13.039><c> that</c><00:33:13.220><c> accepts</c><00:33:13.610><c> a</c><00:33:13.760><c> location</c>

00:33:14.350 --> 00:33:14.360 align:start position:0%
a simple lambda that accepts a location
 

00:33:14.360 --> 00:33:15.970 align:start position:0%
a simple lambda that accepts a location
result<00:33:14.690><c> and</c><00:33:14.899><c> we'll</c><00:33:15.260><c> go</c><00:33:15.350><c> ahead</c><00:33:15.470><c> and</c><00:33:15.649><c> call</c><00:33:15.799><c> it</c>

00:33:15.970 --> 00:33:15.980 align:start position:0%
result and we'll go ahead and call it
 

00:33:15.980 --> 00:33:17.409 align:start position:0%
result and we'll go ahead and call it
whenever<00:33:16.129><c> a</c><00:33:16.279><c> new</c><00:33:16.340><c> locations</c><00:33:16.940><c> reported</c>

00:33:17.409 --> 00:33:17.419 align:start position:0%
whenever a new locations reported
 

00:33:17.419 --> 00:33:19.269 align:start position:0%
whenever a new locations reported
without<00:33:17.720><c> actually</c><00:33:18.350><c> returning</c><00:33:18.710><c> from</c><00:33:18.889><c> observed</c>

00:33:19.269 --> 00:33:19.279 align:start position:0%
without actually returning from observed
 

00:33:19.279 --> 00:33:21.490 align:start position:0%
without actually returning from observed
location

00:33:21.490 --> 00:33:21.500 align:start position:0%
location
 

00:33:21.500 --> 00:33:23.990 align:start position:0%
location
so<00:33:22.500><c> if</c><00:33:22.740><c> you</c><00:33:22.890><c> take</c><00:33:23.039><c> in</c><00:33:23.220><c> this</c><00:33:23.370><c> giant</c><00:33:23.789><c> pile</c><00:33:23.970><c> of</c>

00:33:23.990 --> 00:33:24.000 align:start position:0%
so if you take in this giant pile of
 

00:33:24.000 --> 00:33:25.640 align:start position:0%
so if you take in this giant pile of
code<00:33:24.360><c> here</c><00:33:24.630><c> some</c><00:33:24.840><c> of</c><00:33:24.870><c> you</c><00:33:25.020><c> might</c><00:33:25.200><c> notice</c><00:33:25.470><c> that</c>

00:33:25.640 --> 00:33:25.650 align:start position:0%
code here some of you might notice that
 

00:33:25.650 --> 00:33:27.440 align:start position:0%
code here some of you might notice that
it<00:33:25.770><c> looks</c><00:33:25.799><c> an</c><00:33:26.130><c> awful</c><00:33:26.250><c> lot</c><00:33:26.520><c> like</c><00:33:26.640><c> an</c><00:33:26.909><c> observable</c>

00:33:27.440 --> 00:33:27.450 align:start position:0%
it looks an awful lot like an observable
 

00:33:27.450 --> 00:33:29.600 align:start position:0%
it looks an awful lot like an observable
dot<00:33:27.720><c> create</c><00:33:27.990><c> call</c><00:33:28.320><c> from</c><00:33:28.530><c> our</c><00:33:28.650><c> X</c><00:33:28.830><c> so</c><00:33:29.250><c> let's</c><00:33:29.490><c> go</c>

00:33:29.600 --> 00:33:29.610 align:start position:0%
dot create call from our X so let's go
 

00:33:29.610 --> 00:33:31.539 align:start position:0%
dot create call from our X so let's go
ahead<00:33:29.789><c> and</c><00:33:29.909><c> take</c><00:33:30.150><c> it</c><00:33:30.179><c> apart</c><00:33:30.330><c> piece</c><00:33:30.690><c> by</c><00:33:30.720><c> piece</c>

00:33:31.539 --> 00:33:31.549 align:start position:0%
ahead and take it apart piece by piece
 

00:33:31.549 --> 00:33:33.560 align:start position:0%
ahead and take it apart piece by piece
well<00:33:32.549><c> go</c><00:33:32.669><c> ahead</c><00:33:32.700><c> and</c><00:33:32.850><c> start</c><00:33:33.120><c> off</c><00:33:33.210><c> and</c><00:33:33.450><c> we'll</c>

00:33:33.560 --> 00:33:33.570 align:start position:0%
well go ahead and start off and we'll
 

00:33:33.570 --> 00:33:35.270 align:start position:0%
well go ahead and start off and we'll
just<00:33:33.720><c> create</c><00:33:33.929><c> this</c><00:33:34.200><c> done</c><00:33:34.470><c> signal</c><00:33:34.950><c> that</c><00:33:35.100><c> we</c><00:33:35.159><c> can</c>

00:33:35.270 --> 00:33:35.280 align:start position:0%
just create this done signal that we can
 

00:33:35.280 --> 00:33:36.799 align:start position:0%
just create this done signal that we can
await<00:33:35.490><c> on</c><00:33:35.640><c> later</c><00:33:35.880><c> to</c><00:33:36.150><c> know</c><00:33:36.299><c> when</c><00:33:36.450><c> to</c><00:33:36.480><c> finish</c>

00:33:36.799 --> 00:33:36.809 align:start position:0%
await on later to know when to finish
 

00:33:36.809 --> 00:33:38.480 align:start position:0%
await on later to know when to finish
normally<00:33:37.169><c> and</c><00:33:37.289><c> clean</c><00:33:37.500><c> up</c><00:33:37.650><c> so</c><00:33:38.159><c> this</c><00:33:38.220><c> is</c><00:33:38.370><c> like</c>

00:33:38.480 --> 00:33:38.490 align:start position:0%
normally and clean up so this is like
 

00:33:38.490 --> 00:33:40.190 align:start position:0%
normally and clean up so this is like
our<00:33:38.640><c> observable</c><00:33:39.059><c> completion</c><00:33:39.720><c> in</c><00:33:39.929><c> the</c><00:33:39.990><c> case</c>

00:33:40.190 --> 00:33:40.200 align:start position:0%
our observable completion in the case
 

00:33:40.200 --> 00:33:41.360 align:start position:0%
our observable completion in the case
where<00:33:40.409><c> that</c><00:33:40.440><c> you</c><00:33:40.710><c> have</c><00:33:40.830><c> a</c><00:33:40.860><c> stream</c><00:33:41.190><c> with</c><00:33:41.340><c> a</c>

00:33:41.360 --> 00:33:41.370 align:start position:0%
where that you have a stream with a
 

00:33:41.370 --> 00:33:43.640 align:start position:0%
where that you have a stream with a
well-defined<00:33:41.880><c> end</c><00:33:42.210><c> signal</c><00:33:42.690><c> you</c><00:33:43.140><c> can</c><00:33:43.289><c> complete</c>

00:33:43.640 --> 00:33:43.650 align:start position:0%
well-defined end signal you can complete
 

00:33:43.650 --> 00:33:45.169 align:start position:0%
well-defined end signal you can complete
this<00:33:43.830><c> to</c><00:33:44.070><c> let</c><00:33:44.190><c> the</c><00:33:44.309><c> observe</c><00:33:44.580><c> function</c><00:33:44.970><c> clean</c>

00:33:45.169 --> 00:33:45.179 align:start position:0%
this to let the observe function clean
 

00:33:45.179 --> 00:33:46.460 align:start position:0%
this to let the observe function clean
up<00:33:45.299><c> and</c><00:33:45.450><c> return</c><00:33:45.720><c> and</c><00:33:45.929><c> we'll</c><00:33:46.020><c> see</c><00:33:46.169><c> that</c><00:33:46.260><c> in</c><00:33:46.409><c> a</c>

00:33:46.460 --> 00:33:46.470 align:start position:0%
up and return and we'll see that in a
 

00:33:46.470 --> 00:33:49.700 align:start position:0%
up and return and we'll see that in a
little<00:33:46.559><c> bit</c><00:33:47.780><c> so</c><00:33:48.780><c> the</c><00:33:48.960><c> next</c><00:33:49.110><c> piece</c><00:33:49.320><c> here</c><00:33:49.559><c> where</c>

00:33:49.700 --> 00:33:49.710 align:start position:0%
little bit so the next piece here where
 

00:33:49.710 --> 00:33:51.110 align:start position:0%
little bit so the next piece here where
we're<00:33:49.830><c> creating</c><00:33:50.220><c> the</c><00:33:50.340><c> location</c><00:33:50.760><c> callback</c>

00:33:51.110 --> 00:33:51.120 align:start position:0%
we're creating the location callback
 

00:33:51.120 --> 00:33:52.610 align:start position:0%
we're creating the location callback
this<00:33:51.330><c> should</c><00:33:51.539><c> really</c><00:33:51.659><c> be</c><00:33:51.780><c> no</c><00:33:51.990><c> surprise</c><00:33:52.350><c> we</c>

00:33:52.610 --> 00:33:52.620 align:start position:0%
this should really be no surprise we
 

00:33:52.620 --> 00:33:53.960 align:start position:0%
this should really be no surprise we
need<00:33:52.740><c> one</c><00:33:52.919><c> to</c><00:33:53.039><c> receive</c><00:33:53.309><c> updates</c><00:33:53.490><c> from</c><00:33:53.850><c> the</c>

00:33:53.960 --> 00:33:53.970 align:start position:0%
need one to receive updates from the
 

00:33:53.970 --> 00:33:55.669 align:start position:0%
need one to receive updates from the
location<00:33:54.179><c> provider</c><00:33:54.630><c> but</c><00:33:55.260><c> what's</c><00:33:55.440><c> interesting</c>

00:33:55.669 --> 00:33:55.679 align:start position:0%
location provider but what's interesting
 

00:33:55.679 --> 00:33:57.590 align:start position:0%
location provider but what's interesting
here<00:33:56.039><c> is</c><00:33:56.220><c> that</c><00:33:56.490><c> we</c><00:33:56.760><c> use</c><00:33:56.880><c> launch</c><00:33:57.120><c> to</c><00:33:57.299><c> call</c><00:33:57.480><c> the</c>

00:33:57.590 --> 00:33:57.600 align:start position:0%
here is that we use launch to call the
 

00:33:57.600 --> 00:33:59.360 align:start position:0%
here is that we use launch to call the
observer<00:33:57.900><c> function</c><00:33:58.380><c> on</c><00:33:58.470><c> the</c><00:33:58.590><c> same</c><00:33:58.770><c> coating</c>

00:33:59.360 --> 00:33:59.370 align:start position:0%
observer function on the same coating
 

00:33:59.370 --> 00:34:00.890 align:start position:0%
observer function on the same coating
dispatcher<00:33:59.789><c> that</c><00:34:00.059><c> observed</c><00:34:00.330><c> location</c><00:34:00.750><c> was</c>

00:34:00.890 --> 00:34:00.900 align:start position:0%
dispatcher that observed location was
 

00:34:00.900 --> 00:34:03.740 align:start position:0%
dispatcher that observed location was
called<00:34:01.110><c> on</c><00:34:01.260><c> remember</c><00:34:02.070><c> the</c><00:34:02.970><c> co-routine</c><00:34:03.450><c> scope</c>

00:34:03.740 --> 00:34:03.750 align:start position:0%
called on remember the co-routine scope
 

00:34:03.750 --> 00:34:05.930 align:start position:0%
called on remember the co-routine scope
that<00:34:03.929><c> we</c><00:34:04.020><c> opened</c><00:34:04.380><c> here</c><00:34:04.710><c> carries</c><00:34:05.400><c> along</c><00:34:05.669><c> the</c>

00:34:05.930 --> 00:34:05.940 align:start position:0%
that we opened here carries along the
 

00:34:05.940 --> 00:34:07.610 align:start position:0%
that we opened here carries along the
dispatcher<00:34:06.360><c> with</c><00:34:06.750><c> it</c><00:34:06.929><c> that</c><00:34:07.169><c> it</c><00:34:07.260><c> was</c><00:34:07.350><c> called</c>

00:34:07.610 --> 00:34:07.620 align:start position:0%
dispatcher with it that it was called
 

00:34:07.620 --> 00:34:09.409 align:start position:0%
dispatcher with it that it was called
with<00:34:07.830><c> so</c><00:34:08.190><c> we</c><00:34:08.340><c> always</c><00:34:08.520><c> know</c><00:34:08.820><c> that</c><00:34:08.849><c> we're</c><00:34:09.330><c> gonna</c>

00:34:09.409 --> 00:34:09.419 align:start position:0%
with so we always know that we're gonna
 

00:34:09.419 --> 00:34:10.909 align:start position:0%
with so we always know that we're gonna
call<00:34:09.690><c> the</c><00:34:09.810><c> observer</c><00:34:10.139><c> in</c><00:34:10.349><c> the</c><00:34:10.470><c> same</c><00:34:10.649><c> place</c><00:34:10.889><c> that</c>

00:34:10.909 --> 00:34:10.919 align:start position:0%
call the observer in the same place that
 

00:34:10.919 --> 00:34:11.990 align:start position:0%
call the observer in the same place that
the<00:34:11.099><c> call</c><00:34:11.310><c> are</c><00:34:11.429><c> one</c><00:34:11.580><c> of</c><00:34:11.669><c> the</c><00:34:11.760><c> information</c>

00:34:11.990 --> 00:34:12.000 align:start position:0%
the call are one of the information
 

00:34:12.000 --> 00:34:15.560 align:start position:0%
the call are one of the information
reported<00:34:12.859><c> so</c><00:34:13.859><c> we</c><00:34:14.609><c> cancel</c><00:34:14.940><c> the</c><00:34:15.030><c> old</c><00:34:15.149><c> job</c><00:34:15.389><c> from</c>

00:34:15.560 --> 00:34:15.570 align:start position:0%
reported so we cancel the old job from
 

00:34:15.570 --> 00:34:17.089 align:start position:0%
reported so we cancel the old job from
before<00:34:15.869><c> and</c><00:34:15.960><c> start</c><00:34:16.139><c> a</c><00:34:16.260><c> new</c><00:34:16.409><c> one</c><00:34:16.590><c> we</c><00:34:16.770><c> make</c><00:34:16.919><c> sure</c>

00:34:17.089 --> 00:34:17.099 align:start position:0%
before and start a new one we make sure
 

00:34:17.099 --> 00:34:18.379 align:start position:0%
before and start a new one we make sure
that<00:34:17.220><c> we</c><00:34:17.340><c> call</c><00:34:17.490><c> the</c><00:34:17.609><c> observer</c><00:34:17.879><c> while</c><00:34:18.179><c> we're</c>

00:34:18.379 --> 00:34:18.389 align:start position:0%
that we call the observer while we're
 

00:34:18.389 --> 00:34:20.030 align:start position:0%
that we call the observer while we're
holding<00:34:18.659><c> this</c><00:34:18.750><c> suspending</c><00:34:19.260><c> mutex</c><00:34:19.619><c> and</c><00:34:19.919><c> this</c>

00:34:20.030 --> 00:34:20.040 align:start position:0%
holding this suspending mutex and this
 

00:34:20.040 --> 00:34:21.560 align:start position:0%
holding this suspending mutex and this
keeps<00:34:20.340><c> things</c><00:34:20.580><c> serialized</c><00:34:21.119><c> to</c><00:34:21.300><c> make</c><00:34:21.419><c> sure</c>

00:34:21.560 --> 00:34:21.570 align:start position:0%
keeps things serialized to make sure
 

00:34:21.570 --> 00:34:22.700 align:start position:0%
keeps things serialized to make sure
that<00:34:21.690><c> we</c><00:34:21.780><c> don't</c><00:34:21.929><c> have</c><00:34:22.050><c> two</c><00:34:22.230><c> calls</c><00:34:22.440><c> to</c><00:34:22.619><c> an</c>

00:34:22.700 --> 00:34:22.710 align:start position:0%
that we don't have two calls to an
 

00:34:22.710 --> 00:34:25.220 align:start position:0%
that we don't have two calls to an
observer<00:34:23.010><c> active</c><00:34:23.399><c> at</c><00:34:23.490><c> once</c><00:34:23.720><c> we</c><00:34:24.720><c> assume</c><00:34:24.960><c> that</c>

00:34:25.220 --> 00:34:25.230 align:start position:0%
observer active at once we assume that
 

00:34:25.230 --> 00:34:26.899 align:start position:0%
observer active at once we assume that
on<00:34:25.349><c> location</c><00:34:25.800><c> result</c><00:34:26.129><c> won't</c><00:34:26.280><c> have</c><00:34:26.520><c> multiple</c>

00:34:26.899 --> 00:34:26.909 align:start position:0%
on location result won't have multiple
 

00:34:26.909 --> 00:34:28.790 align:start position:0%
on location result won't have multiple
calls<00:34:27.119><c> active</c><00:34:27.510><c> at</c><00:34:27.599><c> once</c><00:34:27.629><c> either</c><00:34:28.050><c> so</c><00:34:28.379><c> this</c><00:34:28.649><c> is</c>

00:34:28.790 --> 00:34:28.800 align:start position:0%
calls active at once either so this is
 

00:34:28.800 --> 00:34:30.050 align:start position:0%
calls active at once either so this is
kind<00:34:28.980><c> of</c><00:34:29.010><c> an</c><00:34:29.129><c> example</c><00:34:29.369><c> of</c><00:34:29.550><c> some</c><00:34:29.730><c> of</c><00:34:29.760><c> the</c><00:34:29.879><c> things</c>

00:34:30.050 --> 00:34:30.060 align:start position:0%
kind of an example of some of the things
 

00:34:30.060 --> 00:34:31.730 align:start position:0%
kind of an example of some of the things
that<00:34:30.359><c> if</c><00:34:30.510><c> you're</c><00:34:30.629><c> building</c><00:34:31.020><c> one</c><00:34:31.500><c> of</c><00:34:31.619><c> these</c>

00:34:31.730 --> 00:34:31.740 align:start position:0%
that if you're building one of these
 

00:34:31.740 --> 00:34:33.710 align:start position:0%
that if you're building one of these
things<00:34:31.980><c> yourself</c><00:34:32.129><c> this</c><00:34:33.030><c> is</c><00:34:33.240><c> one</c><00:34:33.570><c> of</c><00:34:33.599><c> those</c>

00:34:33.710 --> 00:34:33.720 align:start position:0%
things yourself this is one of those
 

00:34:33.720 --> 00:34:35.629 align:start position:0%
things yourself this is one of those
comparison<00:34:34.290><c> things</c><00:34:34.560><c> of</c><00:34:34.859><c> like</c><00:34:35.099><c> our</c><00:34:35.280><c> X</c><00:34:35.429><c> Java</c>

00:34:35.629 --> 00:34:35.639 align:start position:0%
comparison things of like our X Java
 

00:34:35.639 --> 00:34:37.430 align:start position:0%
comparison things of like our X Java
kind<00:34:35.909><c> of</c><00:34:35.970><c> does</c><00:34:36.419><c> a</c><00:34:36.450><c> lot</c><00:34:36.659><c> of</c><00:34:36.780><c> these</c><00:34:36.899><c> things</c><00:34:37.169><c> for</c>

00:34:37.430 --> 00:34:37.440 align:start position:0%
kind of does a lot of these things for
 

00:34:37.440 --> 00:34:40.159 align:start position:0%
kind of does a lot of these things for
you<00:34:37.560><c> but</c><00:34:38.460><c> with</c><00:34:39.270><c> come</c><00:34:39.480><c> routines</c><00:34:39.750><c> we</c><00:34:39.929><c> have</c><00:34:40.050><c> all</c>

00:34:40.159 --> 00:34:40.169 align:start position:0%
you but with come routines we have all
 

00:34:40.169 --> 00:34:41.389 align:start position:0%
you but with come routines we have all
the<00:34:40.260><c> primitives</c><00:34:40.619><c> to</c><00:34:40.679><c> build</c><00:34:40.919><c> it</c><00:34:41.070><c> we</c><00:34:41.159><c> just</c><00:34:41.310><c> need</c>

00:34:41.389 --> 00:34:41.399 align:start position:0%
the primitives to build it we just need
 

00:34:41.399 --> 00:34:42.800 align:start position:0%
the primitives to build it we just need
to<00:34:41.520><c> do</c><00:34:41.609><c> a</c><00:34:41.639><c> little</c><00:34:41.760><c> bit</c><00:34:41.970><c> more</c><00:34:42.149><c> of</c><00:34:42.210><c> it</c><00:34:42.270><c> by</c><00:34:42.389><c> hand</c><00:34:42.659><c> if</c>

00:34:42.800 --> 00:34:42.810 align:start position:0%
to do a little bit more of it by hand if
 

00:34:42.810 --> 00:34:43.639 align:start position:0%
to do a little bit more of it by hand if
we're<00:34:42.929><c> putting</c><00:34:43.169><c> one</c><00:34:43.260><c> of</c><00:34:43.349><c> these</c><00:34:43.409><c> things</c>

00:34:43.639 --> 00:34:43.649 align:start position:0%
we're putting one of these things
 

00:34:43.649 --> 00:34:47.899 align:start position:0%
we're putting one of these things
together<00:34:43.830><c> so</c><00:34:45.710><c> we</c><00:34:46.710><c> register</c><00:34:47.099><c> our</c><00:34:47.220><c> callback</c><00:34:47.429><c> and</c>

00:34:47.899 --> 00:34:47.909 align:start position:0%
together so we register our callback and
 

00:34:47.909 --> 00:34:49.609 align:start position:0%
together so we register our callback and
then<00:34:48.179><c> we</c><00:34:48.330><c> await</c><00:34:48.570><c> on</c><00:34:48.690><c> our</c><00:34:48.810><c> done</c><00:34:48.990><c> signal</c><00:34:49.349><c> and</c>

00:34:49.609 --> 00:34:49.619 align:start position:0%
then we await on our done signal and
 

00:34:49.619 --> 00:34:51.619 align:start position:0%
then we await on our done signal and
since<00:34:50.099><c> we</c><00:34:50.250><c> never</c><00:34:50.369><c> complete</c><00:34:50.849><c> it</c><00:34:50.970><c> I</c><00:34:51.089><c> mean</c><00:34:51.240><c> when</c>

00:34:51.619 --> 00:34:51.629 align:start position:0%
since we never complete it I mean when
 

00:34:51.629 --> 00:34:53.210 align:start position:0%
since we never complete it I mean when
does<00:34:51.780><c> the</c><00:34:51.839><c> location</c><00:34:52.109><c> stream</c><00:34:52.530><c> really</c><00:34:52.770><c> complete</c>

00:34:53.210 --> 00:34:53.220 align:start position:0%
does the location stream really complete
 

00:34:53.220 --> 00:34:55.250 align:start position:0%
does the location stream really complete
anyway<00:34:53.570><c> this</c><00:34:54.570><c> will</c><00:34:54.720><c> go</c><00:34:54.810><c> ahead</c><00:34:54.869><c> and</c><00:34:54.990><c> wait</c><00:34:55.139><c> for</c>

00:34:55.250 --> 00:34:55.260 align:start position:0%
anyway this will go ahead and wait for
 

00:34:55.260 --> 00:34:56.990 align:start position:0%
anyway this will go ahead and wait for
the<00:34:55.349><c> calling</c><00:34:55.530><c> job</c><00:34:55.830><c> to</c><00:34:55.950><c> be</c><00:34:56.040><c> cancelled</c><00:34:56.460><c> so</c><00:34:56.609><c> we</c>

00:34:56.990 --> 00:34:57.000 align:start position:0%
the calling job to be cancelled so we
 

00:34:57.000 --> 00:34:58.460 align:start position:0%
the calling job to be cancelled so we
remove<00:34:57.359><c> the</c><00:34:57.480><c> callback</c><00:34:57.839><c> in</c><00:34:57.990><c> the</c><00:34:58.080><c> finally</c><00:34:58.440><c> block</c>

00:34:58.460 --> 00:34:58.470 align:start position:0%
remove the callback in the finally block
 

00:34:58.470 --> 00:35:01.099 align:start position:0%
remove the callback in the finally block
so<00:34:58.920><c> it'll</c><00:34:59.070><c> happen</c><00:34:59.220><c> on</c><00:34:59.430><c> cancellation</c><00:35:00.150><c> and</c><00:35:00.359><c> then</c>

00:35:01.099 --> 00:35:01.109 align:start position:0%
so it'll happen on cancellation and then
 

00:35:01.109 --> 00:35:03.829 align:start position:0%
so it'll happen on cancellation and then
request<00:35:02.040><c> location</c><00:35:02.580><c> updates</c><00:35:02.849><c> normally</c><00:35:03.300><c> takes</c>

00:35:03.829 --> 00:35:03.839 align:start position:0%
request location updates normally takes
 

00:35:03.839 --> 00:35:05.150 align:start position:0%
request location updates normally takes
a<00:35:03.930><c> looper</c><00:35:04.230><c> instead</c><00:35:04.530><c> of</c><00:35:04.619><c> something</c><00:35:04.800><c> like</c><00:35:04.920><c> an</c>

00:35:05.150 --> 00:35:05.160 align:start position:0%
a looper instead of something like an
 

00:35:05.160 --> 00:35:07.310 align:start position:0%
a looper instead of something like an
executor<00:35:05.640><c> it's</c><00:35:06.450><c> just</c><00:35:06.599><c> kind</c><00:35:06.750><c> of</c><00:35:06.780><c> unfortunate</c>

00:35:07.310 --> 00:35:07.320 align:start position:0%
executor it's just kind of unfortunate
 

00:35:07.320 --> 00:35:08.480 align:start position:0%
executor it's just kind of unfortunate
because<00:35:07.410><c> this</c><00:35:07.560><c> pattern</c><00:35:07.710><c> really</c><00:35:07.980><c> shines</c><00:35:08.339><c> when</c>

00:35:08.480 --> 00:35:08.490 align:start position:0%
because this pattern really shines when
 

00:35:08.490 --> 00:35:10.700 align:start position:0%
because this pattern really shines when
you<00:35:08.640><c> can</c><00:35:08.760><c> avoid</c><00:35:08.940><c> an</c><00:35:09.060><c> extra</c><00:35:09.359><c> hop</c><00:35:09.570><c> so</c><00:35:10.170><c> if</c><00:35:10.380><c> you</c><00:35:10.530><c> use</c>

00:35:10.700 --> 00:35:10.710 align:start position:0%
you can avoid an extra hop so if you use
 

00:35:10.710 --> 00:35:12.260 align:start position:0%
you can avoid an extra hop so if you use
like<00:35:10.859><c> a</c><00:35:10.890><c> direct</c><00:35:11.250><c> executor</c><00:35:11.760><c> that'll</c><00:35:12.000><c> just</c><00:35:12.150><c> go</c>

00:35:12.260 --> 00:35:12.270 align:start position:0%
like a direct executor that'll just go
 

00:35:12.270 --> 00:35:14.750 align:start position:0%
like a direct executor that'll just go
ahead<00:35:12.390><c> and</c><00:35:12.810><c> run</c><00:35:13.500><c> the</c><00:35:13.619><c> observer</c><00:35:13.980><c> wherever</c><00:35:14.460><c> the</c>

00:35:14.750 --> 00:35:14.760 align:start position:0%
ahead and run the observer wherever the
 

00:35:14.760 --> 00:35:16.370 align:start position:0%
ahead and run the observer wherever the
update<00:35:15.030><c> happens</c><00:35:15.210><c> on</c><00:35:15.630><c> the</c><00:35:15.720><c> incoming</c><00:35:16.080><c> binder</c>

00:35:16.370 --> 00:35:16.380 align:start position:0%
update happens on the incoming binder
 

00:35:16.380 --> 00:35:19.250 align:start position:0%
update happens on the incoming binder
thread<00:35:16.619><c> or</c><00:35:16.770><c> whatever</c><00:35:17.250><c> it</c><00:35:17.400><c> is</c><00:35:17.839><c> it</c><00:35:18.839><c> really</c><00:35:19.109><c> kind</c>

00:35:19.250 --> 00:35:19.260 align:start position:0%
thread or whatever it is it really kind
 

00:35:19.260 --> 00:35:20.810 align:start position:0%
thread or whatever it is it really kind
of<00:35:19.320><c> shines</c><00:35:19.530><c> when</c><00:35:19.740><c> you</c><00:35:19.859><c> can</c><00:35:20.130><c> avoid</c><00:35:20.220><c> those</c><00:35:20.520><c> extra</c>

00:35:20.810 --> 00:35:20.820 align:start position:0%
of shines when you can avoid those extra
 

00:35:20.820 --> 00:35:25.099 align:start position:0%
of shines when you can avoid those extra
hops<00:35:21.030><c> but</c><00:35:21.300><c> you</c><00:35:21.450><c> get</c><00:35:21.599><c> the</c><00:35:21.690><c> idea</c><00:35:21.930><c> so</c><00:35:23.839><c> here's</c><00:35:24.839><c> what</c>

00:35:25.099 --> 00:35:25.109 align:start position:0%
hops but you get the idea so here's what
 

00:35:25.109 --> 00:35:27.589 align:start position:0%
hops but you get the idea so here's what
it<00:35:25.200><c> looks</c><00:35:25.349><c> like</c><00:35:25.500><c> in</c><00:35:25.680><c> use</c><00:35:25.950><c> and</c><00:35:26.300><c> if</c><00:35:27.300><c> you</c><00:35:27.359><c> take</c><00:35:27.540><c> a</c>

00:35:27.589 --> 00:35:27.599 align:start position:0%
it looks like in use and if you take a
 

00:35:27.599 --> 00:35:28.940 align:start position:0%
it looks like in use and if you take a
look<00:35:27.750><c> this</c><00:35:27.930><c> looks</c><00:35:28.109><c> an</c><00:35:28.200><c> awful</c><00:35:28.230><c> lot</c><00:35:28.440><c> like</c><00:35:28.560><c> just</c><00:35:28.800><c> a</c>

00:35:28.940 --> 00:35:28.950 align:start position:0%
look this looks an awful lot like just a
 

00:35:28.950 --> 00:35:30.980 align:start position:0%
look this looks an awful lot like just a
for<00:35:29.160><c> each</c><00:35:29.280><c> call</c><00:35:29.580><c> on</c><00:35:29.730><c> a</c><00:35:29.760><c> collection</c><00:35:30.150><c> and</c><00:35:30.510><c> it</c>

00:35:30.980 --> 00:35:30.990 align:start position:0%
for each call on a collection and it
 

00:35:30.990 --> 00:35:33.560 align:start position:0%
for each call on a collection and it
behaves<00:35:31.349><c> exactly</c><00:35:31.589><c> the</c><00:35:32.040><c> same</c><00:35:32.220><c> way</c><00:35:32.430><c> so</c><00:35:32.640><c> since</c><00:35:33.450><c> we</c>

00:35:33.560 --> 00:35:33.570 align:start position:0%
behaves exactly the same way so since we
 

00:35:33.570 --> 00:35:34.130 align:start position:0%
behaves exactly the same way so since we
use<00:35:33.720><c> long</c>

00:35:34.130 --> 00:35:34.140 align:start position:0%
use long
 

00:35:34.140 --> 00:35:35.480 align:start position:0%
use long
to<00:35:34.230><c> call</c><00:35:34.410><c> the</c><00:35:34.530><c> observer</c><00:35:34.800><c> block</c><00:35:35.070><c> in</c><00:35:35.250><c> the</c><00:35:35.310><c> first</c>

00:35:35.480 --> 00:35:35.490 align:start position:0%
to call the observer block in the first
 

00:35:35.490 --> 00:35:37.220 align:start position:0%
to call the observer block in the first
place<00:35:35.730><c> if</c><00:35:36.060><c> the</c><00:35:36.300><c> inner</c><00:35:36.540><c> block</c><00:35:36.810><c> throws</c><00:35:37.140><c> an</c>

00:35:37.220 --> 00:35:37.230 align:start position:0%
place if the inner block throws an
 

00:35:37.230 --> 00:35:39.080 align:start position:0%
place if the inner block throws an
exception<00:35:37.350><c> that</c><00:35:38.280><c> means</c><00:35:38.490><c> that</c><00:35:38.640><c> the</c><00:35:38.730><c> observed</c>

00:35:39.080 --> 00:35:39.090 align:start position:0%
exception that means that the observed
 

00:35:39.090 --> 00:35:40.970 align:start position:0%
exception that means that the observed
location<00:35:39.600><c> call</c><00:35:39.810><c> itself</c><00:35:40.320><c> will</c><00:35:40.590><c> throw</c><00:35:40.830><c> an</c>

00:35:40.970 --> 00:35:40.980 align:start position:0%
location call itself will throw an
 

00:35:40.980 --> 00:35:42.770 align:start position:0%
location call itself will throw an
exception<00:35:41.040><c> into</c><00:35:41.610><c> that</c><00:35:41.820><c> outer</c><00:35:42.030><c> scope</c><00:35:42.450><c> we</c><00:35:42.660><c> can</c>

00:35:42.770 --> 00:35:42.780 align:start position:0%
exception into that outer scope we can
 

00:35:42.780 --> 00:35:44.000 align:start position:0%
exception into that outer scope we can
just<00:35:42.960><c> wrap</c><00:35:43.170><c> this</c><00:35:43.380><c> whole</c><00:35:43.440><c> thing</c><00:35:43.620><c> in</c><00:35:43.920><c> a</c>

00:35:44.000 --> 00:35:44.010 align:start position:0%
just wrap this whole thing in a
 

00:35:44.010 --> 00:35:45.410 align:start position:0%
just wrap this whole thing in a
try-catch<00:35:44.250><c> and</c><00:35:44.670><c> that's</c><00:35:44.820><c> all</c><00:35:45.000><c> of</c><00:35:45.030><c> our</c><00:35:45.210><c> error</c>

00:35:45.410 --> 00:35:45.420 align:start position:0%
try-catch and that's all of our error
 

00:35:45.420 --> 00:35:47.960 align:start position:0%
try-catch and that's all of our error
handling<00:35:45.780><c> that</c><00:35:46.020><c> we</c><00:35:46.110><c> need</c><00:35:46.260><c> to</c><00:35:46.350><c> do</c><00:35:46.580><c> so</c><00:35:47.580><c> it's</c><00:35:47.880><c> a</c>

00:35:47.960 --> 00:35:47.970 align:start position:0%
handling that we need to do so it's a
 

00:35:47.970 --> 00:35:49.910 align:start position:0%
handling that we need to do so it's a
child<00:35:48.210><c> job</c><00:35:48.540><c> so</c><00:35:48.900><c> it'll</c><00:35:49.200><c> cancel</c><00:35:49.410><c> the</c><00:35:49.620><c> parent</c>

00:35:49.910 --> 00:35:49.920 align:start position:0%
child job so it'll cancel the parent
 

00:35:49.920 --> 00:35:51.770 align:start position:0%
child job so it'll cancel the parent
scope<00:35:50.100><c> with</c><00:35:50.280><c> the</c><00:35:50.310><c> exception</c><00:35:50.850><c> as</c><00:35:50.970><c> well</c><00:35:51.180><c> the</c>

00:35:51.770 --> 00:35:51.780 align:start position:0%
scope with the exception as well the
 

00:35:51.780 --> 00:35:53.180 align:start position:0%
scope with the exception as well the
same<00:35:51.960><c> scope</c><00:35:52.260><c> that</c><00:35:52.500><c> wraps</c><00:35:52.650><c> the</c><00:35:52.770><c> whole</c><00:35:53.010><c> the</c>

00:35:53.180 --> 00:35:53.190 align:start position:0%
same scope that wraps the whole the
 

00:35:53.190 --> 00:35:54.710 align:start position:0%
same scope that wraps the whole the
observed<00:35:53.460><c> location</c><00:35:53.910><c> function</c><00:35:54.120><c> body</c>

00:35:54.710 --> 00:35:54.720 align:start position:0%
observed location function body
 

00:35:54.720 --> 00:35:56.180 align:start position:0%
observed location function body
so<00:35:54.870><c> it'll</c><00:35:55.110><c> resume</c><00:35:55.470><c> from</c><00:35:55.650><c> the</c><00:35:55.770><c> weight</c><00:35:55.950><c> with</c><00:35:56.100><c> the</c>

00:35:56.180 --> 00:35:56.190 align:start position:0%
so it'll resume from the weight with the
 

00:35:56.190 --> 00:35:58.310 align:start position:0%
so it'll resume from the weight with the
cancellation<00:35:56.490><c> exception</c><00:35:57.230><c> unregistered</c><00:35:58.230><c> the</c>

00:35:58.310 --> 00:35:58.320 align:start position:0%
cancellation exception unregistered the
 

00:35:58.320 --> 00:35:59.720 align:start position:0%
cancellation exception unregistered the
location<00:35:58.740><c> call</c><00:35:58.920><c> back</c><00:35:59.100><c> from</c><00:35:59.250><c> the</c><00:35:59.400><c> finally</c>

00:35:59.720 --> 00:35:59.730 align:start position:0%
location call back from the finally
 

00:35:59.730 --> 00:36:01.070 align:start position:0%
location call back from the finally
block<00:35:59.760><c> from</c><00:36:00.150><c> above</c><00:36:00.420><c> and</c><00:36:00.630><c> all</c><00:36:00.810><c> of</c><00:36:00.930><c> this</c><00:36:01.020><c> just</c>

00:36:01.070 --> 00:36:01.080 align:start position:0%
block from above and all of this just
 

00:36:01.080 --> 00:36:04.280 align:start position:0%
block from above and all of this just
composes<00:36:01.830><c> so</c><00:36:02.130><c> you</c><00:36:02.550><c> again</c><00:36:02.940><c> can</c><00:36:03.210><c> lean</c><00:36:03.780><c> on</c><00:36:03.810><c> all</c><00:36:04.170><c> of</c>

00:36:04.280 --> 00:36:04.290 align:start position:0%
composes so you again can lean on all of
 

00:36:04.290 --> 00:36:05.900 align:start position:0%
composes so you again can lean on all of
these<00:36:04.410><c> constructs</c><00:36:05.130><c> of</c><00:36:05.370><c> the</c><00:36:05.430><c> language</c><00:36:05.580><c> that</c>

00:36:05.900 --> 00:36:05.910 align:start position:0%
these constructs of the language that
 

00:36:05.910 --> 00:36:07.850 align:start position:0%
these constructs of the language that
you<00:36:06.150><c> already</c><00:36:06.330><c> know</c><00:36:06.690><c> by</c><00:36:07.020><c> just</c><00:36:07.260><c> adding</c><00:36:07.440><c> some</c><00:36:07.770><c> of</c>

00:36:07.850 --> 00:36:07.860 align:start position:0%
you already know by just adding some of
 

00:36:07.860 --> 00:36:13.340 align:start position:0%
you already know by just adding some of
these<00:36:07.920><c> suspending</c><00:36:08.460><c> primitives</c><00:36:11.930><c> so</c><00:36:12.930><c> let's</c>

00:36:13.340 --> 00:36:13.350 align:start position:0%
these suspending primitives so let's
 

00:36:13.350 --> 00:36:15.080 align:start position:0%
these suspending primitives so let's
wrap<00:36:13.470><c> up</c><00:36:13.500><c> a</c><00:36:13.650><c> little</c><00:36:13.770><c> bit</c><00:36:13.920><c> so</c><00:36:14.190><c> what's</c><00:36:14.520><c> next</c><00:36:14.700><c> what</c>

00:36:15.080 --> 00:36:15.090 align:start position:0%
wrap up a little bit so what's next what
 

00:36:15.090 --> 00:36:17.360 align:start position:0%
wrap up a little bit so what's next what
some<00:36:15.210><c> action</c><00:36:15.420><c> items</c><00:36:15.660><c> for</c><00:36:15.690><c> you</c><00:36:15.840><c> to</c><00:36:15.990><c> do</c><00:36:16.310><c> well</c><00:36:17.310><c> the</c>

00:36:17.360 --> 00:36:17.370 align:start position:0%
some action items for you to do well the
 

00:36:17.370 --> 00:36:18.890 align:start position:0%
some action items for you to do well the
first<00:36:17.580><c> is</c><00:36:17.880><c> that</c><00:36:18.210><c> as</c><00:36:18.360><c> you</c><00:36:18.480><c> saw</c><00:36:18.600><c> in</c><00:36:18.720><c> the</c><00:36:18.780><c> keynote</c>

00:36:18.890 --> 00:36:18.900 align:start position:0%
first is that as you saw in the keynote
 

00:36:18.900 --> 00:36:20.510 align:start position:0%
first is that as you saw in the keynote
earlier<00:36:19.170><c> we</c><00:36:19.890><c> actually</c><00:36:20.130><c> have</c><00:36:20.220><c> a</c><00:36:20.250><c> code</c><00:36:20.490><c> lab</c>

00:36:20.510 --> 00:36:20.520 align:start position:0%
earlier we actually have a code lab
 

00:36:20.520 --> 00:36:22.460 align:start position:0%
earlier we actually have a code lab
specifically<00:36:21.180><c> for</c><00:36:21.360><c> co-routines</c><00:36:21.750><c> and</c><00:36:22.080><c> that</c>

00:36:22.460 --> 00:36:22.470 align:start position:0%
specifically for co-routines and that
 

00:36:22.470 --> 00:36:24.470 align:start position:0%
specifically for co-routines and that
was<00:36:22.560><c> released</c><00:36:22.890><c> about</c><00:36:23.310><c> three</c><00:36:23.490><c> weeks</c><00:36:23.640><c> ago</c><00:36:23.730><c> which</c>

00:36:24.470 --> 00:36:24.480 align:start position:0%
was released about three weeks ago which
 

00:36:24.480 --> 00:36:25.640 align:start position:0%
was released about three weeks ago which
is<00:36:24.570><c> really</c><00:36:24.750><c> good</c><00:36:24.870><c> introduction</c><00:36:25.440><c> it's</c>

00:36:25.640 --> 00:36:25.650 align:start position:0%
is really good introduction it's
 

00:36:25.650 --> 00:36:26.780 align:start position:0%
is really good introduction it's
carotene<00:36:26.010><c> and</c><00:36:26.040><c> how</c><00:36:26.220><c> to</c><00:36:26.280><c> actually</c><00:36:26.430><c> use</c><00:36:26.580><c> it</c><00:36:26.760><c> in</c>

00:36:26.780 --> 00:36:26.790 align:start position:0%
carotene and how to actually use it in
 

00:36:26.790 --> 00:36:30.230 align:start position:0%
carotene and how to actually use it in
your<00:36:26.910><c> app</c><00:36:27.090><c> and</c><00:36:28.040><c> secondly</c><00:36:29.040><c> read</c><00:36:29.640><c> the</c><00:36:29.730><c> manual</c><00:36:30.060><c> I</c>

00:36:30.230 --> 00:36:30.240 align:start position:0%
your app and secondly read the manual I
 

00:36:30.240 --> 00:36:31.640 align:start position:0%
your app and secondly read the manual I
don't<00:36:30.570><c> like</c><00:36:30.660><c> to</c><00:36:30.780><c> use</c><00:36:30.810><c> do</c><00:36:31.020><c> that</c><00:36:31.140><c> usually</c><00:36:31.290><c> but</c>

00:36:31.640 --> 00:36:31.650 align:start position:0%
don't like to use do that usually but
 

00:36:31.650 --> 00:36:33.160 align:start position:0%
don't like to use do that usually but
the<00:36:31.800><c> docs</c><00:36:32.040><c> are</c><00:36:32.250><c> actually</c><00:36:32.490><c> really</c><00:36:32.670><c> really</c><00:36:32.850><c> good</c>

00:36:33.160 --> 00:36:33.170 align:start position:0%
the docs are actually really really good
 

00:36:33.170 --> 00:36:35.240 align:start position:0%
the docs are actually really really good
the<00:36:34.170><c> wrong</c><00:36:34.320><c> kicker</c><00:36:34.500><c> but</c><00:36:34.770><c> you</c><00:36:34.830><c> can</c><00:36:34.950><c> look</c><00:36:35.160><c> at</c>

00:36:35.240 --> 00:36:35.250 align:start position:0%
the wrong kicker but you can look at
 

00:36:35.250 --> 00:36:36.440 align:start position:0%
the wrong kicker but you can look at
them<00:36:35.370><c> you</c><00:36:35.460><c> can</c><00:36:35.580><c> even</c><00:36:35.760><c> edit</c><00:36:35.880><c> them</c><00:36:36.060><c> if</c><00:36:36.180><c> you</c><00:36:36.270><c> want</c>

00:36:36.440 --> 00:36:36.450 align:start position:0%
them you can even edit them if you want
 

00:36:36.450 --> 00:36:38.330 align:start position:0%
them you can even edit them if you want
to<00:36:36.510><c> but</c><00:36:37.260><c> they're</c><00:36:37.380><c> all</c><00:36:37.500><c> very</c><00:36:37.530><c> use</c><00:36:37.920><c> case</c><00:36:38.100><c> based</c>

00:36:38.330 --> 00:36:38.340 align:start position:0%
to but they're all very use case based
 

00:36:38.340 --> 00:36:39.980 align:start position:0%
to but they're all very use case based
they're<00:36:38.580><c> all</c><00:36:38.730><c> I</c><00:36:38.820><c> need</c><00:36:39.090><c> to</c><00:36:39.180><c> do</c><00:36:39.270><c> X</c><00:36:39.450><c> how</c><00:36:39.690><c> do</c><00:36:39.750><c> I</c><00:36:39.930><c> do</c>

00:36:39.980 --> 00:36:39.990 align:start position:0%
they're all I need to do X how do I do
 

00:36:39.990 --> 00:36:41.900 align:start position:0%
they're all I need to do X how do I do
it<00:36:40.110><c> so</c><00:36:40.980><c> make</c><00:36:41.130><c> sure</c><00:36:41.160><c> to</c><00:36:41.310><c> go</c><00:36:41.490><c> and</c><00:36:41.580><c> check</c><00:36:41.640><c> it</c><00:36:41.820><c> out</c>

00:36:41.900 --> 00:36:41.910 align:start position:0%
it so make sure to go and check it out
 

00:36:41.910 --> 00:36:44.870 align:start position:0%
it so make sure to go and check it out
if<00:36:42.120><c> you</c><00:36:42.330><c> are</c><00:36:42.360><c> using</c><00:36:42.870><c> carotenes</c><00:36:43.320><c> and</c><00:36:43.700><c> that</c><00:36:44.700><c> is</c>

00:36:44.870 --> 00:36:44.880 align:start position:0%
if you are using carotenes and that is
 

00:36:44.880 --> 00:36:47.390 align:start position:0%
if you are using carotenes and that is
it<00:36:45.090><c> thank</c><00:36:45.810><c> you</c><00:36:45.840><c> very</c><00:36:45.900><c> much</c>

00:36:47.390 --> 00:36:47.400 align:start position:0%
it thank you very much
 

00:36:47.400 --> 00:37:03.480 align:start position:0%
it thank you very much
[Music]

