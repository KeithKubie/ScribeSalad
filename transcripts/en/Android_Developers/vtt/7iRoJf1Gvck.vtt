WEBVTT
Kind: captions
Language: en

00:00:02.200 --> 00:00:07.260
&gt;&gt;Sparky: The Wednesday afternoon Android
Developer's Office Hours Hangout. This is

00:00:07.260 --> 00:00:13.750
your EMEA edition coming to you from Munich,
Germany. That's me, I'm Sparky. And we've

00:00:13.750 --> 00:00:21.920
got Matt and Nick and, coming from London
UK. And we're here to answer for you any questions

00:00:21.920 --> 00:00:28.040
or address any topics of discussion that you
want to have about developing apps for Android.

00:00:28.040 --> 00:00:32.119
And with that, let's see who's in the hangout.

00:00:32.119 --> 00:00:36.580
Nobody's in the hangout. Crickets chirp, chirp,
chirp. We had some technical difficulties

00:00:36.580 --> 00:00:39.750
today. So we got off to a little bit of a
late start. And it could take people a little

00:00:39.750 --> 00:00:41.730
while to catch up to us.

00:00:41.730 --> 00:00:46.120
While we're waiting for some people to join
us in the hangout, perhaps we can turn to

00:00:46.120 --> 00:00:51.800
the moderator and see what question we have
cued up. Well, I heard somebody ding. Did

00:00:51.800 --> 00:00:53.739
anybody come in? Not yet.

00:00:53.739 --> 00:00:57.190
&gt;&gt;Nick: I think that's just me inviting a
bunch of people to come join us.

00:00:57.190 --> 00:00:59.300
&gt;&gt;Sparky: Excellent. Great.

00:00:59.300 --> 00:01:00.300
[pause]

00:01:00.300 --> 00:01:07.479
Let me come up with the old Moderator and
see what people have asked.

00:01:07.479 --> 00:01:15.530
Martin S. from northwest UK. So I guess this
will be a question for Matt and Nick to answer.

00:01:15.530 --> 00:01:22.969
List detail page scenario in single pane mode,
activity hosts the list fragment. User selects

00:01:22.969 --> 00:01:28.590
from list. Should the detail fragment be displayed
by replacing the list fragment in the same

00:01:28.590 --> 00:01:36.109
activity, or should detail page be launched
in its own activity. Pretty classic multi

00:01:36.109 --> 00:01:39.829
fragment, multi activity question.

00:01:39.829 --> 00:01:46.319
The way we usually solve this in our application
templates is, when you're running this app

00:01:46.319 --> 00:01:53.509
on a large format device like a ten inch tablet,
then we would recommend putting two things

00:01:53.509 --> 00:01:57.421
side by side. So you have your detail and
your list in the same place. And then you

00:01:57.421 --> 00:02:02.850
run that same app on a smaller device like
a phone. You should probably completely swap

00:02:02.850 --> 00:02:08.349
out the list view for the detail view. And
the easiest way to program this is to put

00:02:08.349 --> 00:02:15.159
the list in one fragment and the detail in
another. And generally speaking when you completely

00:02:15.159 --> 00:02:21.200
clear away one set of UI and replace it completely
with another, that's kind of an activity change.

00:02:21.200 --> 00:02:27.770
And that's probably gonna be the cleanest
and easiest way to do it. And as I noted in

00:02:27.770 --> 00:02:34.810
my response in the moderator, I think that
by making it a new activity, is going to be

00:02:34.810 --> 00:02:40.769
the easiest way to get the right semantics
for navigation using the back button.

00:02:40.769 --> 00:02:41.769
[pause]

00:02:41.769 --> 00:02:50.630
You guys wanna comment on that right now?
Did I pretty much cover it?

00:02:50.630 --> 00:02:51.630
&gt;&gt;Matt: [inaudible] answer.

00:02:51.630 --> 00:02:52.630
&gt;&gt;Nick: Yeah. Can't talk about it.

00:02:52.630 --> 00:02:57.500
&gt;&gt;Sparky: We have been joined in the hangout
by Jonathan ward. Hello Jonathan. Do you have

00:02:57.500 --> 00:03:00.350
anything on your mind about Android development?

00:03:00.350 --> 00:03:01.959
[pause]

00:03:01.959 --> 00:03:06.640
&gt;&gt;Jonathan: Well this is the first hangout
that I'm doing so I'm not sure if my microphone

00:03:06.640 --> 00:03:09.360
is working. Can you hear me?

00:03:09.360 --> 00:03:11.150
&gt;&gt;Nick: Loud and clear.

00:03:11.150 --> 00:03:12.930
&gt;&gt;Sparky: We hear you.

00:03:12.930 --> 00:03:17.450
&gt;&gt;Jonathan: Fantastic. I didn't have any particular
question. I just wanted to join the conversation

00:03:17.450 --> 00:03:23.200
as my first developers office hours, to see
what's up.

00:03:23.200 --> 00:03:24.849
&gt;&gt;Nick: Ah. Well, welcome.

00:03:24.849 --> 00:03:26.090
&gt;&gt;Sparky: Yeah, welcome.

00:03:26.090 --> 00:03:28.159
&gt;&gt;Matt: Where are you based?

00:03:28.159 --> 00:03:31.459
&gt;&gt;Jonathan: I'm actually based in the US.

00:03:31.459 --> 00:03:32.459
&gt;&gt;Matt: Uh-huh.

00:03:32.459 --> 00:03:36.489
&gt;&gt;Sparky: Well then you'll be able to get
your fill of hangouts because the Mountain

00:03:36.489 --> 00:03:40.769
View team will be having another hangout just
like this one in eight or nine hours.

00:03:40.769 --> 00:03:42.670
&gt;&gt;Jonathan: Great.

00:03:42.670 --> 00:03:46.110
&gt;&gt;Sparky: So what's on your mind? What are
you developing these days?

00:03:46.110 --> 00:03:52.079
&gt;&gt;Jonathan: Well, I'm developing a music application
and actually one of the things that I'm trying

00:03:52.079 --> 00:04:00.459
to debug today is, view pager seems to not
update fragments when its underlying adapter

00:04:00.459 --> 00:04:06.870
gets notified of a data set change. I don't
know if you've run into that issue.

00:04:06.870 --> 00:04:14.430
&gt;&gt;Sparky: Hmm. I generally duck the whole
data set change issue entirely by using only

00:04:14.430 --> 00:04:15.430
loaders. [chuckles]

00:04:15.430 --> 00:04:16.430
&gt;&gt;Jonathan: [laughs]

00:04:16.430 --> 00:04:17.510
&gt;&gt;Nick: That's my advice.

00:04:17.510 --> 00:04:18.510
&gt;&gt;Jonathan: Mm-hm.

00:04:18.510 --> 00:04:25.480
&gt;&gt;Nick: and what I would say as well is sometimes
you need to make sure is, is your adapter

00:04:25.480 --> 00:04:31.740
attaining stable IDs? 'Cause basically there's
a few optimizations in view pager.

00:04:31.740 --> 00:04:32.740
&gt;&gt;Jonathan: Mm-hm.

00:04:32.740 --> 00:04:36.760
&gt;&gt;Nick: Where it'll try not to reload data
that it thinks it's already loaded it.

00:04:36.760 --> 00:04:37.840
&gt;&gt;Jonathan: Mm-hmm.

00:04:37.840 --> 00:04:42.130
&gt;&gt;Nick: I think it's the, is it the ID it
uses to work out if it's the same pages you've

00:04:42.130 --> 00:04:43.340
loaded, it's already loaded?

00:04:43.340 --> 00:04:48.590
&gt;&gt;Matt: I can't remember. I kind of remember
when I was doing some research with this I

00:04:48.590 --> 00:04:55.110
ended up having to do a little bit of trickery
around it in terms of a sync task kicking

00:04:55.110 --> 00:05:01.700
in, but I think why it did was using the view
holder design pattern to kind of insure that

00:05:01.700 --> 00:05:05.260
it would be the view holder that would update
from the cursor and then update the views

00:05:05.260 --> 00:05:06.460
that it needed to do.

00:05:06.460 --> 00:05:07.680
&gt;&gt;Jonathan: Mm-mm.

00:05:07.680 --> 00:05:13.850
&gt;&gt;Matt: so that may be a kind of different
way of looking at it. Yeah there is a lot

00:05:13.850 --> 00:05:18.680
of optimizations at the ISO view pager.

00:05:18.680 --> 00:05:24.900
&gt;&gt;Sparky: If you're looking into any of that
sort of view pager, fragment adapter sort

00:05:24.900 --> 00:05:32.180
of thing, definitely do be at least passingly
familiar with the fragment samples in the

00:05:32.180 --> 00:05:37.520
[screeching noise] in the API demos. Sample
[unintelligible] They implement a lot of interesting

00:05:37.520 --> 00:05:48.060
fragment behaviors in there. Things like view
pager combined with a tab manager. Fragments

00:05:48.060 --> 00:05:53.960
in a view pager each with its own list view.
Each recording its own state. They have the

00:05:53.960 --> 00:05:59.470
throttle loader which takes a list fragment
and fills it, I think it's like one row per

00:05:59.470 --> 00:06:03.370
second or something like that. And you can
just kinda get in there and see different

00:06:03.370 --> 00:06:12.500
ways that the Android engineers have implemented
activities using these different APIs.

00:06:12.500 --> 00:06:19.750
So API demos definitely should be in everybody's
repertoire as a great go-to place for reference

00:06:19.750 --> 00:06:24.770
code. It's not the end all be all, but it's
got a lot of good samples in it.

00:06:24.770 --> 00:06:26.910
&gt;&gt;Jonathan: Great.

00:06:26.910 --> 00:06:35.600
&gt;&gt;Sparky: I see we've been joined in the hangout
also by Alejandro and Emil. And just now by

00:06:35.600 --> 00:06:41.470
Markus. So, welcome guys. Welcome to the hangout.
Do you have any questions about Android development?

00:06:41.470 --> 00:06:42.650
Or, what's on your mind.

00:06:42.650 --> 00:06:51.970
&gt;&gt;Markus: I just wanted to say, I heard you
talk about the page switcher. What are they

00:06:51.970 --> 00:07:01.290
called? I actually use it for fragments. I
had some problems. 'Cause I actually had fragments

00:07:01.290 --> 00:07:06.590
containing them. I had fragments inside fragments.
That's my [unintelligible].

00:07:06.590 --> 00:07:07.680
&gt;&gt;Sparky: That's a no no.

00:07:07.680 --> 00:07:15.150
&gt;&gt;Markus: Yeah, exactly. So I ended up making
like a lightweight version of fragments. Which

00:07:15.150 --> 00:07:21.970
only pretty much has a new, and not even a
life cycle. But it works pretty well actually.

00:07:21.970 --> 00:07:24.210
&gt;&gt;Sparky: Cool, how did you do that?

00:07:24.210 --> 00:07:32.730
&gt;&gt;Markus: Well, it's a list I made from scratch.
It's a pretty small class. I might put in

00:07:32.730 --> 00:07:43.220
an app somewhere, at some point. But not yet.
But it's pretty simple task. It's a task that

00:07:43.220 --> 00:07:44.220
[unintelligible].

00:07:44.220 --> 00:07:52.090
&gt;&gt;Sparky: So, did you, did you use any of
the Android framework source code from source

00:07:52.090 --> 00:07:54.840
at Android.com. or did you roll those all
yourself.

00:07:54.840 --> 00:08:01.580
&gt;&gt;Markus: Well, I mean this is a really small
class. It's like it's, I just pretty much

00:08:01.580 --> 00:08:09.150
borrowed some concepts like how do you, I
think it has this ability and it has some

00:08:09.150 --> 00:08:10.580
help [unintelligible] to—

00:08:10.580 --> 00:08:15.230
&gt;&gt;Nick: I was going to say, it's actually
a view to that extent? It's like a custom

00:08:15.230 --> 00:08:16.230
view basically?

00:08:16.230 --> 00:08:18.980
&gt;&gt;Markus: No, no, no. it's more like a fragment.

00:08:18.980 --> 00:08:19.980
&gt;&gt;Nick: OK.

00:08:19.980 --> 00:08:24.340
&gt;&gt;Markus: But I want to see if I can put it
up somewhere.

00:08:24.340 --> 00:08:26.980
&gt;&gt;Nick: Yeah, definitely for a [gist] like
that.

00:08:26.980 --> 00:08:31.500
&gt;&gt;Sparky: Yeah, that's very cool. We love
to hear what you guys do when you take the

00:08:31.500 --> 00:08:37.570
framework and run with it. And take it in
your own direction. I guess some of the more

00:08:37.570 --> 00:08:44.140
popular places that people tend to put up
their contributions to the code base are in

00:08:44.140 --> 00:08:50.960
the code.google.com or in GitHub, I would
say is probably the top two? What do you think

00:08:50.960 --> 00:08:51.960
Nick? Matt?

00:08:51.960 --> 00:08:54.530
&gt;&gt;Nick: Yeah, I'd say GitHub is generally
pretty popular these days.

00:08:54.530 --> 00:08:58.210
&gt;&gt;Matt: Yeah, I think that's the one I've
seen most of the time. The source code being

00:08:58.210 --> 00:09:00.020
stuck up on GitHub.

00:09:00.020 --> 00:09:06.070
&gt;&gt;Sparky: I notice that's where the mighty
ActionBarSherlock hangs out. [chuckles]

00:09:06.070 --> 00:09:08.290
&gt;&gt;Matt: [chuckles] Yes.

00:09:08.290 --> 00:09:15.040
&gt;&gt;Sparky: Alright. Who else is in the call?
Emil. What's on your mind?

00:09:15.040 --> 00:09:22.260
&gt;&gt;Emil: Hi. I think you saw my question on
the moderator about text use disappearing

00:09:22.260 --> 00:09:23.260
when rotated?

00:09:23.260 --> 00:09:27.600
&gt;&gt;Sparky: Oh yes, I was trying to write some
code to prove that out and I didn't really

00:09:27.600 --> 00:09:29.330
get anywhere. I kind of started too late.

00:09:29.330 --> 00:09:34.650
&gt;&gt;Emil: Yeah, I wanted to respond again, but
I didn't see a way to respond again in moderator.

00:09:34.650 --> 00:09:39.320
Just edited my own column. Yeah, it's really
just [unintelligible] I mean, I wrote to the

00:09:39.320 --> 00:09:46.210
canvas with a matrix and run base axis and
the text just disappears only when it's two

00:09:46.210 --> 00:09:48.550
lines. When it's one line it works fine.

00:09:48.550 --> 00:09:50.610
&gt;&gt;Sparky: Very interesting.

00:09:50.610 --> 00:09:58.630
&gt;&gt;Emil: Well, more than one line. Three lines
probably doesn't work either. I have no idea

00:09:58.630 --> 00:10:04.300
why. I mean I can do a work around by drawing
texture bitmap first. But that's just, bad.

00:10:04.300 --> 00:10:07.660
&gt;&gt;Sparky: That's kind of what canvas drawing
is though, isn't it? I mean—

00:10:07.660 --> 00:10:11.330
&gt;&gt;Emil: Well, yeah, but drawing it through
bitmap before rotating.

00:10:11.330 --> 00:10:20.980
&gt;&gt;Sparky: Yeah, I, this is not a particular
specialty of mine. So I would suggest take

00:10:20.980 --> 00:10:26.550
your code fragment and put it on stack overflow
and see what the community says. And as I

00:10:26.550 --> 00:10:31.110
said in moderator, share with me the URL,
and I'll try to find some time to dig into

00:10:31.110 --> 00:10:35.690
it myself. But I would bet you that somebody
out there in the community can answer that

00:10:35.690 --> 00:10:38.210
question way faster than I could even get
to it.

00:10:38.210 --> 00:10:41.500
&gt;&gt;Emil: Yeah. OK. Yeah, I'll probably do that.
Thanks.

00:10:41.500 --> 00:10:45.640
&gt;&gt;Sparky: Yeah. Oh, we've lost Alejandro.

00:10:45.640 --> 00:10:51.970
&gt;&gt;Markus: I just wanted to say, I [unintelligible]
to [unintelligible] class. Chuck.

00:10:51.970 --> 00:11:02.850
&gt;&gt;Sparky: Mm. Hey, look at that. We have a
link from GitHub. Cool. Alright, thanks Markus.

00:11:02.850 --> 00:11:08.260
If no-one else has anything that you wanna
talk about right away, I will go back into

00:11:08.260 --> 00:11:15.360
the Moderator. And see what else we've got
cued up. OK.

00:11:15.360 --> 00:11:18.380
Just see, huh. Were you about to say something?

00:11:18.380 --> 00:11:22.380
&gt;&gt;Nick: No, I'm just having a look at the
gist that Markus threw out there. Which he,

00:11:22.380 --> 00:11:29.380
has the code pasted into the G plus comments
as well. And, very interesting. I see what

00:11:29.380 --> 00:11:32.250
you mean about it being a lightweight fragment.

00:11:32.250 --> 00:11:33.740
&gt;&gt;Matt: Yeah.

00:11:33.740 --> 00:11:38.480
&gt;&gt;Sparky: You can do a lot in two lines of
code, huh? [chuckles]

00:11:38.480 --> 00:11:39.480
[feedback noises]

00:11:39.480 --> 00:11:53.630
OK, the next question from Juno Gonsalves
from Portugal. "Advanced NFC support and documentation

00:11:53.630 --> 00:11:59.880
is not the best. Is there any good book to
look at?" Actually, I think I have seen a

00:11:59.880 --> 00:12:06.600
book about Android NFC. But I don't recall
the title of it. Maybe try looking in the

00:12:06.600 --> 00:12:10.510
Android developers forum and see if someone
is talking about it in there. And there are

00:12:10.510 --> 00:12:17.190
developers who discuss on—"For example I
was trying to talk in high data rate mode

00:12:17.190 --> 00:12:21.530
with an NFCD tag and concluded the stack does
not support this."

00:12:21.530 --> 00:12:28.220
Again, not really my specialty. I would say
if you really want the definitive source,

00:12:28.220 --> 00:12:32.920
you sound pretty sophisticated. And I would
say maybe dig into source code. There's probably

00:12:32.920 --> 00:12:35.890
some answers in there.

00:12:35.890 --> 00:12:38.360
[pause]

00:12:38.360 --> 00:12:49.900
Next. "Can I make clickable drawables inside
text view? Drawable created using html.imagetter

00:12:49.900 --> 00:12:54.580
from images downloaded from web. I want to
be able to zoom the images." Didn't, Nick,

00:12:54.580 --> 00:12:56.701
didn't you and Rich talk about this last week?

00:12:56.701 --> 00:12:58.940
&gt;&gt;Nick: Yeah, I think we covered this one.

00:12:58.940 --> 00:13:07.540
&gt;&gt;Sparky: Is this the same one? I don't think
it was. I thought I cleaned it out. I seem

00:13:07.540 --> 00:13:11.510
to recall your answer was "No, you can't."
Is that right?

00:13:11.510 --> 00:13:12.720
&gt;&gt;Nick: Yeah.

00:13:12.720 --> 00:13:17.170
&gt;&gt;Sparky: You can make the whole text view
clickable. But you can't really assign a separate

00:13:17.170 --> 00:13:19.991
click region inside it. But you could still—

00:13:19.991 --> 00:13:23.700
&gt;&gt;Matt: I haven't tried that. That's not something
I've done. I think if you're going to try

00:13:23.700 --> 00:13:27.670
to do it, you'd have to wrap the image in
an a-clasp. But then you'd have nothing to

00:13:27.670 --> 00:13:38.230
kind of hook that up to get it to click. So
I don't think you could do it.

00:13:38.230 --> 00:13:39.230
[pause]

00:13:39.230 --> 00:13:47.550
&gt;&gt;Sparky: "It would be cool if Google Now
integrated with Google Events. IE, who's coming

00:13:47.550 --> 00:13:52.980
to event name, and read out a list of guest
responses and or show the list. Are Google

00:13:52.980 --> 00:13:58.740
planning on allowing developers to produce
custom cards from a Now feature?" That would

00:13:58.740 --> 00:14:03.310
be a forward looking statement about something
where nothing has been announced. And I'm

00:14:03.310 --> 00:14:09.520
afraid we can't say anything on the topic.
So, take that as neither a confirmation nor

00:14:09.520 --> 00:14:11.400
a denial. Simply a lack of answer.

00:14:11.400 --> 00:14:18.020
&gt;&gt; Nick: I'll just say, one question which
is from the G plus comments. So Michael Back.

00:14:18.020 --> 00:14:23.850
Hi Michael if you're following along. And
he says he's been using the most excellent—sorry

00:14:23.850 --> 00:14:30.180
that's my words, not his—tutorial, on Android
training about using bitmaps and LIU caches

00:14:30.180 --> 00:14:35.440
and all that good stuff to make sure you don't
get out of memory issues. And very observantly

00:14:35.440 --> 00:14:40.690
he noticed the Friday review last week. And
some of the teammates said that there was

00:14:40.690 --> 00:14:45.310
going to be an update to that class. And he's
wondering if it's still recommended to use

00:14:45.310 --> 00:14:51.350
that training class as is if an update's already
in the works. So I say, it's you know, techniques

00:14:51.350 --> 00:14:55.880
are still valid. They've just been slightly
improved and polished a bit more. And if you

00:14:55.880 --> 00:15:02.270
wanna take a look at that. If you actually
go to the Google IO application from this

00:15:02.270 --> 00:15:08.970
year, from 2012. If you search the code at
google.com and search for IO sched, it's IO,

00:15:08.970 --> 00:15:15.080
S-C-H-E-D. Most of the application has been
open sourced now. And actually includes a

00:15:15.080 --> 00:15:19.420
lot of the improvement. That's where our team
was kind of like working on stuff. And like,

00:15:19.420 --> 00:15:24.649
squashing bugs. And actively improving the
code. So if you take a look in IO sched you

00:15:24.649 --> 00:15:31.670
can actually get an early look as it were.
Of the updated versions. I'd say check that

00:15:31.670 --> 00:15:36.230
out. But you know, the basic version in the
training course is still valid.

00:15:36.230 --> 00:15:45.990
Cool. We are joined by Lucas. Lucas of Pattern
fame, I believe.

00:15:45.990 --> 00:15:47.290
&gt;&gt;Lucas: Yep.

00:15:47.290 --> 00:15:56.529
&gt;&gt;Nick: Has everyone seen Lucas' app? Pattern.
P-A-T-T-E-R-N is a very cool app for game

00:15:56.529 --> 00:16:00.830
and very nice wallpapers for your phones and
tablets.

00:16:00.830 --> 00:16:03.230
&gt;&gt;Lucas: Can you hear me?

00:16:03.230 --> 00:16:04.230
&gt;&gt;Nick: Yeah.

00:16:04.230 --> 00:16:09.170
&gt;&gt;Lucas: OK. I don't have a room here at the
office. [laughs] So I have to walk around.

00:16:09.170 --> 00:16:10.170
[laughter]

00:16:10.170 --> 00:16:11.170
&gt;&gt;Nick: Right. Very illegal. You're illegal.

00:16:11.170 --> 00:16:18.890
&gt;&gt;Lucas: Yeah, I work for Mozilla. So I'm
at the Mozilla office in London. So all the

00:16:18.890 --> 00:16:23.850
rooms are booked. So I just got curious about
the developer office hours. So here I am.

00:16:23.850 --> 00:16:24.850
[laughter]

00:16:24.850 --> 00:16:27.100
&gt;&gt;Sparky: So instead of hanging out, you're
kind of walking out.

00:16:27.100 --> 00:16:28.860
&gt;&gt;Lucas: Yeah, walking around.

00:16:28.860 --> 00:16:31.950
&gt;&gt;Nick: Boy, you make me feel dizzy.

00:16:31.950 --> 00:16:34.200
&gt;&gt;Sparky: Well it's good to have you in the
hangout.

00:16:34.200 --> 00:16:38.279
&gt;&gt;Nick: Yeah, just here to say hi and see
what's going on.

00:16:38.279 --> 00:16:39.279
[laughter]

00:16:39.279 --> 00:16:44.260
&gt;&gt;Sparky: So do you wanna share with us a
little bit of what you do in Mozilla?

00:16:44.260 --> 00:16:52.930
&gt;&gt;Lucas: OK, so I work on Firefox for Android
pretty much. So last year we, so the initial

00:16:52.930 --> 00:16:58.670
version of Firefox for Android was based on
the same technologies then, the best of version.

00:16:58.670 --> 00:17:04.740
So Zillow, I don't know if you're familiar
with it, but Zillow based stuff. But we were

00:17:04.740 --> 00:17:09.630
having a lot of performance problems because
of that. So it was a very chunky library.

00:17:09.630 --> 00:17:17.649
So on devices with slow file systems, the
library would just take ages to load. So on

00:17:17.649 --> 00:17:24.350
some devices we would have like startup times
of like 30 seconds. So it was a bit ridiculous.

00:17:24.350 --> 00:17:34.080
So we decided to rewrite the whole app. The
whole front end. Anyway. So since October.

00:17:34.080 --> 00:17:40.710
So a month ago we released the first version
of what we called "native Firefox for Android."

00:17:40.710 --> 00:17:48.830
Which is in practice, Firefox backhand. Which
means getcode rendering engine, but with native

00:17:48.830 --> 00:17:50.529
Android front end.

00:17:50.529 --> 00:17:55.139
&gt;&gt;Nick: How do you handle [inaudible] is all,
is all engine?

00:17:55.139 --> 00:17:58.690
&gt;&gt;Lucas: Do you mean extensions and stuff?

00:17:58.690 --> 00:17:59.690
&gt;&gt;Nick: Yeah.

00:17:59.690 --> 00:18:05.700
&gt;&gt;Lucas: So, we are like, independently of
what we're doing, like Mozilla is moving for,

00:18:05.700 --> 00:18:13.740
to a more API based kind of thing instead
of the zillow term is called, it's like overlay.

00:18:13.740 --> 00:18:20.769
So overlay is like pretty much messing with
the UI from the add-on. So you can't add menu

00:18:20.769 --> 00:18:25.590
items and stuff. So we're moving from that
to a more API based thing so we have a shallow

00:18:25.590 --> 00:18:30.850
scrape API to add menu items. So it doesn't
matter really what kind of technology is behind

00:18:30.850 --> 00:18:38.450
the UI. So you can still do things like add
a menu item. Add a context menu item. All

00:18:38.450 --> 00:18:44.299
those things. But through a more controlled
API. So what you cannot do anymore is zillow

00:18:44.299 --> 00:18:49.770
overlay stuff. Which is because it's not true
anymore. But we still have a support where

00:18:49.770 --> 00:19:00.519
[audio cuts out]-- fine with the Firefox [inaudible].
So. Yeah. There's a bit of, like, certain

00:19:00.519 --> 00:19:07.600
amount of work to adapt add-ons. But it's
not too much. So yeah, so we're right now,

00:19:07.600 --> 00:19:15.509
we're working on the tablet version of Firefox
for Android. It will be released very soon.

00:19:15.509 --> 00:19:20.659
And also native and stuff. So it was a very
good exercise of other responsive design stuff.

00:19:20.659 --> 00:19:26.049
And all the—so yeah. All the stuff that
Android gives you. So it was an interesting

00:19:26.049 --> 00:19:32.850
thing. Android is not a small app. As you
can imagine. So yeah. That, I mean, we have

00:19:32.850 --> 00:19:39.039
like nine, ten versions of the same icon everywhere
because [laughs] it's kind of a ridiculous

00:19:39.039 --> 00:19:43.769
amount of assets. But yeah, it's worth it
just to keep it like looking good on any type

00:19:43.769 --> 00:19:44.850
of device, right?

00:19:44.850 --> 00:19:46.740
&gt;&gt;Nick: So it's a singule APK?

00:19:46.740 --> 00:19:54.840
&gt;&gt;Lucas: Yeah, it's a singule APK. Yeah. And
it's a, go on--

00:19:54.840 --> 00:19:56.529
&gt;&gt;Nick: All built in London?

00:19:56.529 --> 00:20:05.309
&gt;&gt;Lucas: No, no. Yeah, we are like, spread
out. Mostly we are in the US. But, the office

00:20:05.309 --> 00:20:11.791
in London is quite new. So we're just like
two people in this team here. So. The office

00:20:11.791 --> 00:20:14.549
opened in April. So it's quite new.

00:20:14.549 --> 00:20:16.110
&gt;&gt;Nick: Cool.

00:20:16.110 --> 00:20:21.840
&gt;&gt;Lucas: And as you've mentioned my spare
time project is Pattern. Just to start a wallpaper

00:20:21.840 --> 00:20:28.840
app. For like that grabs all the patterns
from Color Lovers. IF you don't know this

00:20:28.840 --> 00:20:34.249
website it's really cool. It's a very nice
community. You can create patterns. Color

00:20:34.249 --> 00:20:39.929
palettes and stuff. And so, I just thought
it would be fun to have an app that grabs

00:20:39.929 --> 00:20:45.259
all those patterns like, it's a lot of stuff
being created every day. So it's more like,

00:20:45.259 --> 00:20:53.600
more than 200,000 patterns. So it's a lot
of stuff. And also I wanted to have an opportunity

00:20:53.600 --> 00:20:59.419
to use Android API since I don't have a chance
to use it at work. So, it's kind of a more

00:20:59.419 --> 00:21:02.440
like a learning experience than anything else.

00:21:02.440 --> 00:21:09.080
&gt;&gt;Sparky: Cool. You get to take a little vacation
from Mozilla and run Chrome for a time.

00:21:09.080 --> 00:21:10.080
[laughter]

00:21:10.080 --> 00:21:17.210
&gt;&gt;Nick: One of the reasons I like it is that
as you were stating before, with Firefox,

00:21:17.210 --> 00:21:22.019
is their response to design aspects. Like
I think you did a nice job customizing your

00:21:22.019 --> 00:21:26.600
logo for different size devices. I've had
it on my phone, and on my seven inch tablet

00:21:26.600 --> 00:21:31.700
and on my ten inch tablet. And it really kind
of alters its presentation to take advantage

00:21:31.700 --> 00:21:35.369
of screen space. And I think you've done a
nice job there.

00:21:35.369 --> 00:21:42.059
&gt;&gt;Lucas: Oh great. Thanks. Yeah. One thing
that kind of sucks in terms of Nexus 7 Specific

00:21:42.059 --> 00:21:46.519
development. Is we don't have a X86 emulator
yet for Jellybean.

00:21:46.519 --> 00:21:47.519
&gt;&gt;Nick: Mm-hmm.

00:21:47.519 --> 00:21:52.600
&gt;&gt;Lucas: So it, yeah, but it gets a bit on
the way because it's just so slow.

00:21:52.600 --> 00:21:53.600
&gt;&gt;Nick: Yeah.

00:21:53.600 --> 00:21:54.940
&gt;&gt;Lucas: To test stuff there.

00:21:54.940 --> 00:22:02.109
&gt;&gt;Nick: Is there any estimate for getting
like a X86 image? I think Intel created it

00:22:02.109 --> 00:22:03.989
has 86 images. I mean—

00:22:03.989 --> 00:22:09.830
&gt;&gt;Lucas: Oh, OK, it's not Google. Yeah, maybe
that's a stupid question. But maybe and obvious

00:22:09.830 --> 00:22:19.080
one. Like, why isn't X86 the primary target
for emulator images? Because that's where

00:22:19.080 --> 00:22:22.070
developers are anyway, right?

00:22:22.070 --> 00:22:25.631
&gt;&gt;Nick: I guess, well, the answer is in the
[unintelligible] emulator that you were really,

00:22:25.631 --> 00:22:30.429
we were really trying to emulate the devices
it was actually running on. So I think the

00:22:30.429 --> 00:22:37.820
on base APIs were the vast vast majority of
devices out there. So I think now it was our

00:22:37.820 --> 00:22:40.480
primary focus to provide a platform where
people can develop against what it's gonna

00:22:40.480 --> 00:22:45.539
run on, on phones. I think that's historically
where we came from. I don't know if that's

00:22:45.539 --> 00:22:50.899
gonna change in the future or what. But I
think that's why we are where we are.

00:22:50.899 --> 00:22:56.389
&gt;&gt;Lucas: Yeah. I kinda see the point. It's
just that for front-end development most of

00:22:56.389 --> 00:23:03.850
the time you don't really care about the architecture.
You just care about seeing how the app feels.

00:23:03.850 --> 00:23:11.659
Very quickly. And having a very quick [audio
cuts out, inaudible] is so nice. Like, when

00:23:11.659 --> 00:23:17.480
you get the emulator with the X86 image. It's
just makes a big difference.

00:23:17.480 --> 00:23:18.480
&gt;&gt;Nick: Yeah.

00:23:18.480 --> 00:23:20.129
&gt;&gt;Lucas: maybe that's just me, I don't know.

00:23:20.129 --> 00:23:26.029
&gt;&gt;Nick: No, I get your point. Do you ever
use the interface building tools in Eclipse?

00:23:26.029 --> 00:23:33.080
&gt;&gt;Lucas: Yeah, I use it. It helps but for
things like animations and stuff, I mean there's

00:23:33.080 --> 00:23:38.299
a lot of like back and forth. Just to see,
tweaking and different properties to see how

00:23:38.299 --> 00:23:39.299
it builds.

00:23:39.299 --> 00:23:40.299
&gt;&gt;Nick: Yeah.

00:23:40.299 --> 00:23:46.559
&gt;&gt;Lucas: and for animations, if we had a quick
way to like prereview an animation that would

00:23:46.559 --> 00:23:52.009
be nice. But, so like, for now, we just have
to run the application. And see how it goes.

00:23:52.009 --> 00:23:53.009
So.

00:23:53.009 --> 00:23:55.090
&gt;&gt;Nick: So what do you intend to do? Do you
intend to develop on devices instead?

00:23:55.090 --> 00:24:00.630
&gt;&gt;Lucas: Yeah. For Nexus 7 It was interesting
because it didn't have a device while I was

00:24:00.630 --> 00:24:05.999
writing the app. So I released the tablet
version. The tablet UI for pattern before

00:24:05.999 --> 00:24:12.179
having the device. And I was a bit scared
of like, what could happen because things

00:24:12.179 --> 00:24:18.559
like, I was using the new [audio cuts out,
inaudible] so bad on the emulator I couldn't

00:24:18.559 --> 00:24:24.690
really see how it worked. So it was a kind
of a really a big guess. Like, that it would

00:24:24.690 --> 00:24:29.539
work well. But I wasn't sure. So I was happy
that it did, turned out to be pretty good.

00:24:29.539 --> 00:24:30.539
But yeah.

00:24:30.539 --> 00:24:35.549
&gt;&gt;Nick: You did a good job of that. So what
tricks, do you got any tricks to tie the optimizing

00:24:35.549 --> 00:24:41.019
to the seven, you're using the what, the SW600DP?

00:24:41.019 --> 00:24:47.769
&gt;&gt;Lucas: Yeah, yeah. Design wise, I think
the interesting thing about seven inch tablets,

00:24:47.769 --> 00:24:55.190
on, I think it's a type of form factor that
is unique in the sense that in portrait and

00:24:55.190 --> 00:25:00.190
landscape it behaves very differently. It's
different than tablets. That you have a lot

00:25:00.190 --> 00:25:07.149
of space on both orientations. But on seven
inch tablets, on portrait mode, it's almost

00:25:07.149 --> 00:25:13.669
like a phone. But not really. And in landscape
mode it's more like a tablet. But smaller.

00:25:13.669 --> 00:25:20.330
So it's a kind of a very big, it's a kind
of a gray area type of device. So it's an

00:25:20.330 --> 00:25:28.649
interesting exercise in terms of design. So
what I did with Pattern was pretty much blending

00:25:28.649 --> 00:25:37.529
the design of the tablet and phones on portrait
mode. So you have a one column thing. But

00:25:37.529 --> 00:25:38.739
you have the sidebar.

00:25:38.739 --> 00:25:39.739
&gt;&gt;Nick: Yeah.

00:25:39.739 --> 00:25:46.620
&gt;&gt;Lucas: But on landscape you have a more
tablet like thing with a grid and the sidebar.

00:25:46.620 --> 00:25:53.669
While on phones you only have one column and
that's it. And then I used the sliding tabs

00:25:53.669 --> 00:26:00.179
to give access to different tabs of content.
Where, like, sidebars don't work well on phones

00:26:00.179 --> 00:26:01.179
anyway. So.

00:26:01.179 --> 00:26:04.960
&gt;&gt;Nick: Yeah, exactly. It just isn't enough
horizont. Nice.

00:26:04.960 --> 00:26:11.124
&gt;&gt;Lucas: Yeah, yeah. And also, I mean I'm
not really keen on the how do you call it?

00:26:11.124 --> 00:26:12.309
Flyout? Menus? The thing that [inaudible]

00:26:12.309 --> 00:26:16.399
&gt;&gt;Nick: Well you call it the [unintelligible]

00:26:16.399 --> 00:26:20.600
&gt;&gt;Lucas: [unintelligible] Fly-in menu or something?

00:26:20.600 --> 00:26:22.279
&gt;&gt;Nick: yeah.

00:26:22.279 --> 00:26:32.239
&gt;&gt;Lucas: I have my like, issues with it. I
think it's not discoverable enough. It's--

00:26:32.239 --> 00:26:38.309
that's one thing. The other is its kind of
hard to get it right. You have to give it,

00:26:38.309 --> 00:26:44.429
give access to it everywhere. Or it feels
weird. Google plus for example, you have to

00:26:44.429 --> 00:26:48.830
view home screen to have access to it. So
when you click on the up button you never

00:26:48.830 --> 00:26:54.200
know what's going to happen. Is it going to
be on the upper level? Or is it going to be

00:26:54.200 --> 00:27:00.409
the flying menu. So it's the same feeling
I got with the Gingerbread type of menus you

00:27:00.409 --> 00:27:06.940
had in Android. You don't know what's going
to happen. You don't know if the [inaudible]

00:27:06.940 --> 00:27:10.730
menu is the same thing. You don't know if
you slide from the side, will you see it or

00:27:10.730 --> 00:27:12.740
not? Like, so.

00:27:12.740 --> 00:27:14.080
&gt;&gt;Nick: Right.

00:27:14.080 --> 00:27:21.869
&gt;&gt;Lucas: So there's a bit of like unpredictability.
It's just not, not, I think you have to iterate

00:27:21.869 --> 00:27:28.039
this thing a bit more to get it right, 'cause
there's a lot of implementations right now,

00:27:28.039 --> 00:27:29.039
right?

00:27:29.039 --> 00:27:32.679
&gt;&gt;Nick I'm loathe to recommend it to, colleagues
or anyone. Like you I feel like it's stepping

00:27:32.679 --> 00:27:38.139
down still. It hasn't really, Markus might
have some thoughts on this as well. Having

00:27:38.139 --> 00:27:43.889
implemented it for his app. But yeah, I feel
like we're still trying to work out what the

00:27:43.889 --> 00:27:49.690
right way to do it is. At the moment I think
the current feeling is like, the YouTube application's

00:27:49.690 --> 00:27:50.720
probably the best example of our current thought.

00:27:50.720 --> 00:27:51.720
&gt;&gt;Lucas: Yeah, I agree.

00:27:51.720 --> 00:27:58.479
&gt;&gt;Nick: Where it's kind of seeing from the
edge, right. [feedback sounds] replacement

00:27:58.479 --> 00:28:04.539
for the dashboard. It's just accessed from
somewhere else.

00:28:04.539 --> 00:28:11.190
&gt;&gt;Lucas: Yeah, I don't know, it works well
as a dashboard. But the thing is, depending

00:28:11.190 --> 00:28:15.999
on the type of app, you might expect it to
be available everywhere in the app. No matter

00:28:15.999 --> 00:28:22.179
in what level of navigation you are. I think
it's possible, Spotify does something like

00:28:22.179 --> 00:28:23.179
this.

00:28:23.179 --> 00:28:24.179
&gt;&gt;Nick: Yeah.

00:28:24.179 --> 00:28:29.690
&gt;&gt;Lucas: So the frame menu is available everywhere.
While in Google plus it's not. So there's

00:28:29.690 --> 00:28:36.940
a lot of work to, in terms of like, consolidating
what, how it's supposed to behave. So that

00:28:36.940 --> 00:28:38.299
you always have the same behavior.

00:28:38.299 --> 00:28:43.840
&gt;&gt;Nick: It might be, it doesn't necessarily
have to be, or shouldn't be available everywhere.

00:28:43.840 --> 00:28:49.580
I kind of feel that this ruins any idea of
hierarchy that you have.

00:28:49.580 --> 00:28:50.619
&gt;&gt;Lucas: True, true.

00:28:50.619 --> 00:28:55.679
&gt;&gt;Nick: So I feel like it should only be available
from, if you think of the dashboard or the

00:28:55.679 --> 00:28:59.909
flying menu itself being the first level,
the parent, it should only be available from

00:28:59.909 --> 00:29:04.419
direct children of that. It's my feeling.

00:29:04.419 --> 00:29:10.220
&gt;&gt;Lucas: Yeah, the only thing is, maybe it's
just a matter of changing the icon or something.

00:29:10.220 --> 00:29:14.389
But because Google plus right now has this
thing that looks like it's an up-level kind

00:29:14.389 --> 00:29:21.359
of thing, but it's flying menu. And Spotify
changes the icon to be something like menu

00:29:21.359 --> 00:29:27.029
looking kind of thing. Maybe that's it. Maybe
it's just about giving the right tense to

00:29:27.029 --> 00:29:28.029
the user.

00:29:28.029 --> 00:29:29.029
&gt;&gt;Nick: Mm-hmm.

00:29:29.029 --> 00:29:35.519
&gt;&gt;Sparky: Yeah, I think that overloading the
exact same UI widget was perhaps a mistake.

00:29:35.519 --> 00:29:40.440
The ironic thing is that having that leftward
pointing chevron actually looks more like

00:29:40.440 --> 00:29:44.720
it's intended for a fly in menu than it does
for up.

00:29:44.720 --> 00:29:45.840
&gt;&gt;Lucas: [chuckles]

00:29:45.840 --> 00:29:52.849
&gt;&gt;Nick: My problem is, if you think of the
icon being up, it makes perfect sense. Like

00:29:52.849 --> 00:29:55.799
it's the top level of your app. And then you're
kind of going down and [unintelligible] up

00:29:55.799 --> 00:30:01.419
a level to get to the root of it. It's just,
I worry that users don't think of it as "up"

00:30:01.419 --> 00:30:04.149
'cause it points left. That's my issue.

00:30:04.149 --> 00:30:11.770
&gt;&gt;Markus: So it's kind of hard to explain
the concept of up. Or. For us to explain to

00:30:11.770 --> 00:30:23.869
users. Like. So, I work for Spotify by the
way. We chose to use the new looking thing.

00:30:23.869 --> 00:30:32.019
Like Facebook does, just to make it clear
that this will show, and this is something

00:30:32.019 --> 00:30:37.309
that that it [take a lot, that we look about.]
Of likely to use this. I'm not really sure

00:30:37.309 --> 00:30:45.239
that, we didn't really want to have to qualify
out. 'Cause if you know, [unintelligible],

00:30:45.239 --> 00:30:58.080
so you go back and forth. So it hasn't made
sense for us to always have the menu available

00:30:58.080 --> 00:30:59.640
side.

00:30:59.640 --> 00:31:01.200
[laughter]

00:31:01.200 --> 00:31:10.200
&gt;&gt;Sparky: Yeah, I know that at least from
the perspective of the android UI designers

00:31:10.200 --> 00:31:17.220
or UX designers, they're still kind of, they're
still sort of coalescing on their story with

00:31:17.220 --> 00:31:23.179
regards to these slide in menus. But the sense
that I get is that they're' not going to go

00:31:23.179 --> 00:31:28.190
in a direction of having it available everywhere.
That they're going to recommend restricting

00:31:28.190 --> 00:31:30.169
where it's available from.

00:31:30.169 --> 00:31:37.529
&gt;&gt;Markus: Well of course it kind of makes
sense based on what kind of application you're

00:31:37.529 --> 00:31:43.409
making and how it's working. So I'm not saying
it always should be like that. But--

00:31:43.409 --> 00:31:47.710
&gt;&gt;Nick: it still, it's like, a hierarchy to
music there, right? Like you wrote a song

00:31:47.710 --> 00:31:54.899
which is part of a playlist or album. Which
is part of a list of albums. I feel like with

00:31:54.899 --> 00:31:59.259
the implementation. I get your point about
jumping between different sections. But I

00:31:59.259 --> 00:32:04.200
feel like you lose, the cost of that is you
lose any kind of structure. Which I think

00:32:04.200 --> 00:32:08.230
people feel a strong attachment to structure.
I think people instantly understand structure.

00:32:08.230 --> 00:32:12.659
Being it's how the real world works. And how
we've been trained to think about things for

00:32:12.659 --> 00:32:16.450
a long time. So I feel like you kind of lose
that a little bit.

00:32:16.450 --> 00:32:22.460
&gt;&gt;Markus: Yeah. But that's kind of hard. I
mean in our case it's kind of easy to do in

00:32:22.460 --> 00:32:30.899
some part of the apps. Like artists and albums
created to hierarchy. And, even other user's

00:32:30.899 --> 00:32:37.529
playlists and [unintelligible] and so one.
It's kind of hard to put, and [unintelligible]

00:32:37.529 --> 00:32:47.700
lists. It also just is problem that, if you
bounce around a lot, and kind of easy to lose

00:32:47.700 --> 00:32:56.610
your space. And not be able to go back to
where you lost track. Or it's kind of tricky.

00:32:56.610 --> 00:32:57.720
I mean--

00:32:57.720 --> 00:33:03.879
&gt;&gt;Nick: [inaudible] type of browsing history.
Which, you know if you'd had to keep on hitting

00:33:03.879 --> 00:33:06.979
the back button at all times to you know walk
back along that breadcrumb trail. But Arc

00:33:06.979 --> 00:33:10.479
is supposed to be hierarchy which you know,
never really should be that deep.

00:33:10.479 --> 00:33:18.119
&gt;&gt;Markus: Yeah. I know. I'm still kind of,
I'm not really sure how to do it.

00:33:18.119 --> 00:33:24.450
&gt;&gt;Lucas: Yeah, I think, it depends on how
you see the fly in menu. One way to see it,

00:33:24.450 --> 00:33:30.169
which I think it's the case. Like it's how
Spotify implements it. It's more like a jump

00:33:30.169 --> 00:33:32.570
list. Instead of a dashboard.

00:33:32.570 --> 00:33:33.570
&gt;&gt;Nick: Yeah.

00:33:33.570 --> 00:33:41.659
&gt;&gt;Lucas: So it's pretty much about having
a very fast shortcut to go to any of the roots

00:33:41.659 --> 00:33:47.669
of navigation in the app. Instead of working
more like a dashboard. I mean, there's a point

00:33:47.669 --> 00:33:53.360
about it. The problem with that is, like,
I think the main problem right now is, there

00:33:53.360 --> 00:34:00.529
are too many variations of the same pattern.
So I think the important thing is, once you

00:34:00.529 --> 00:34:07.219
consolidate that, if it ever appears as a
official API, it should be a always the same.

00:34:07.219 --> 00:34:14.679
It shouldn't be like "OK, my app works more
like a jump list. So let's do the global thing.

00:34:14.679 --> 00:34:20.480
Oh no, mine is more like a dashboard. Lets'
do the—" Only this will be very confusing.

00:34:20.480 --> 00:34:27.290
&gt;&gt;Sparky: I think people are pretty much in
agreement with that sentiment. But because

00:34:27.290 --> 00:34:36.480
it is such a fresh new UI feature, that that
consensus hasn't really gelled yet about how

00:34:36.480 --> 00:34:38.409
it's going to be.

00:34:38.409 --> 00:34:39.990
[pause]

00:34:39.990 --> 00:34:47.440
&gt;&gt;Lucas: Yeah, the ratio I see, but I think,
yeah, I totally agree with you. It's pretty

00:34:47.440 --> 00:34:54.260
much ongoing. It's something that's still
consolidating. It's, yeah, but it shouldn't

00:34:54.260 --> 00:35:00.020
take too long. Because I think it's just spreading
out quite quickly. A lot of people are thinking

00:35:00.020 --> 00:35:05.130
that this is great. Let me do it. And then
everyone does differently. And then—

00:35:05.130 --> 00:35:06.130
&gt;&gt;Nick: Yeah.

00:35:06.130 --> 00:35:10.320
&gt;&gt;Lucas: So I think it would be nice to consolidate
this as soon as possible.

00:35:10.320 --> 00:35:13.700
&gt;&gt;Nick: I'm sure we have UX people looking
at it.

00:35:13.700 --> 00:35:20.380
&gt;&gt;Sparky: Maybe we could get them to watch
this video and get them straightened out.

00:35:20.380 --> 00:35:28.849
&gt;&gt;Markus: I talked to my UX people at Google
IO, we had a session about action bars. And

00:35:28.849 --> 00:35:35.160
to us, they actually said they were going
to look at this first thing after Google IO.

00:35:35.160 --> 00:35:37.360
So hopefully they're working on it.

00:35:37.360 --> 00:35:41.650
&gt;&gt;Nick: I was in the room. I heard that question.
And it got a big round of applause.

00:35:41.650 --> 00:35:46.359
&gt;&gt;Sparky: [laughs] I was not in the room but
I saw the video.

00:35:46.359 --> 00:35:55.230
&gt;&gt;Nick: Yeah. Adam Powell. The busiest man
at android. Shall we move on from sliding

00:35:55.230 --> 00:35:59.049
drawers and app navigation, seeing as it tends
to hijack our—

00:35:59.049 --> 00:36:00.049
[laughter]

00:36:00.049 --> 00:36:05.630
&gt;&gt;Sparky: Yeah, let's maybe spend a moment
or two looking at W. Long's question about

00:36:05.630 --> 00:36:06.630
phone gaps.

00:36:06.630 --> 00:36:07.630
&gt;&gt;Nick: Sure.

00:36:07.630 --> 00:36:11.950
&gt;&gt;Sparky: It says "I don't know if you have
covered this before. Sorry if you have. But

00:36:11.950 --> 00:36:15.530
would you be able to give some comments on
the phone gap framework, as a starting point

00:36:15.530 --> 00:36:21.980
for a developer with three to five years of
php and java experience?"

00:36:21.980 --> 00:36:25.500
Do you guys wanna take a crack at this one?
Or shall I?

00:36:25.500 --> 00:36:31.650
&gt;&gt;Nick: [laughs] I would say, if you've got
java experience, I would urge you to look

00:36:31.650 --> 00:36:33.079
at native development.

00:36:33.079 --> 00:36:39.190
&gt;&gt;Matt: Yeah, I think having php and java
realistically for you going looking at phone

00:36:39.190 --> 00:36:44.220
gap stuff, you're going to be java script
heavy. So you're actually going to be better

00:36:44.220 --> 00:36:47.700
off going for the native group with a java
application. And plus you'll get a better

00:36:47.700 --> 00:36:53.040
experience at the end. The user being more
happy when they download it from Playstore.

00:36:53.040 --> 00:36:57.700
And plus, it's kind of nice, is, you're never
having to wait for the latest feature to be

00:36:57.700 --> 00:37:03.010
able to anticipate phone gap framework. There's
lots of kind of massive pros by just going

00:37:03.010 --> 00:37:04.700
down the native route to be honest.

00:37:04.700 --> 00:37:10.440
&gt;&gt;Nick: Yeah. I have a bunch of problems with
phone gap apps. I've never seen one that I

00:37:10.440 --> 00:37:15.859
liked, and I didn't think could be, provide
a better experience if done in native. I think

00:37:15.859 --> 00:37:20.490
you get into that uncanny valley trap. Where
something that looks like a button is actually

00:37:20.490 --> 00:37:25.670
a link. Basically and anc tag. And you know
it gets a funny highlight. And it doesn't

00:37:25.670 --> 00:37:29.760
get the same response. And it's slightly slower
to respond to you. Just think when you're

00:37:29.760 --> 00:37:33.390
stacking abstractions on top of abstractions
on top of abstractions. You're going to lose

00:37:33.390 --> 00:37:40.579
something. You're going to lose the responsiveness
or the expectations of how an app forms. So

00:37:40.579 --> 00:37:45.750
I can understand the arguments for it. Like
you know from the speed of development or

00:37:45.750 --> 00:37:49.690
cross platforms, I don't know whatever argument.
I just think if you don't hate your users

00:37:49.690 --> 00:37:53.500
then you should perhaps think about going
native.

00:37:53.500 --> 00:37:55.650
&gt;&gt;Matt:[laughs] Strong words.

00:37:55.650 --> 00:38:02.369
&gt;&gt;Sparky: Wow. Well, I will be the first to
point out that you are in front of a very

00:38:02.369 --> 00:38:03.819
biased crowd here.

00:38:03.819 --> 00:38:04.819
[laughter]

00:38:04.819 --> 00:38:09.440
Since all of us are employed in the business
of convincing you to write the best application

00:38:09.440 --> 00:38:17.000
that you can using the native android APIs.
But that said, I've also answered, I've answered

00:38:17.000 --> 00:38:21.910
this question in the past couple of days in
stack overflow. And everything that Nick and

00:38:21.910 --> 00:38:28.750
Matt said, I agree with. In addition, any
of these so called cross-platform development

00:38:28.750 --> 00:38:35.400
frameworks, when you think about it, it's
really a platform in its own right. So you

00:38:35.400 --> 00:38:39.680
know, they claim to be right once run everywhere.
But all of the platforms they sit on have

00:38:39.680 --> 00:38:47.279
their own little quirks. And you have to still
chase down implementation specific sort of,

00:38:47.279 --> 00:38:51.539
little hang-ups that appear. So you still
basically have to write once and test everywhere.

00:38:51.539 --> 00:38:56.760
And now because you're using a new platform
that's sitting on top of old platforms, rather

00:38:56.760 --> 00:39:01.690
than having to target your application to
N platforms, you'd have to target it to N

00:39:01.690 --> 00:39:06.520
plus one. Where the plus one is this cross
platform framework that you're supposedly

00:39:06.520 --> 00:39:13.260
writing it in. And then on top of that there's
also, you're stuck in the dilemma of either

00:39:13.260 --> 00:39:19.210
you're writing to the least common denominator
across all the platforms that you're deployed

00:39:19.210 --> 00:39:25.779
on, or, you're accessing platform specific
features on the host platforms that you're

00:39:25.779 --> 00:39:30.570
sitting on. And losing your portability. So
one way or the other, there's not really,

00:39:30.570 --> 00:39:38.680
it's not really, it's not really a win. My
general recommendation is to abstract out

00:39:38.680 --> 00:39:44.150
your business logic and make it as portable
as you can. Give your business logic a clean

00:39:44.150 --> 00:39:53.270
API. And then write the best platform specific
native UI that you can. And have your UI interface

00:39:53.270 --> 00:39:55.190
with the API that you defined in your correlogic.

00:39:55.190 --> 00:40:01.230
&gt;&gt;Matt: Yeah, I mean one of the other things
that I'd say, is that I think, I was talking

00:40:01.230 --> 00:40:05.060
to a developer, he started looking into phone
gap, he was quite excited about it. Showed

00:40:05.060 --> 00:40:09.900
me. And I observed that the kit didn't sync
up. I think it was just after Froyo had been

00:40:09.900 --> 00:40:13.660
released. Clicked on the camera, opened it
up, and it was a new camera API. And it just

00:40:13.660 --> 00:40:17.880
crashed instantly. And it's one of those things.
If you're going down that route. And you're

00:40:17.880 --> 00:40:22.609
relying on phone gap to do all of that properly,
you have to then account for the fact that

00:40:22.609 --> 00:40:26.299
it doesn't work on certain versions. You've
got to kind of wait for the update to be pushed.

00:40:26.299 --> 00:40:30.079
Whereas if you're kind of writing it for yourself,
then I think you get more flexibility around

00:40:30.079 --> 00:40:36.640
intent, etcetera. How you implement certain
features. So, yeah. It's one of those things.

00:40:36.640 --> 00:40:40.130
It's whether you take control of it or you're
handing it over to another platform which

00:40:40.130 --> 00:40:43.640
is another issue. Entirely separate of course.

00:40:43.640 --> 00:40:49.720
&gt;&gt;Sparky: A follow-up question from Mr. W.
L. Long. I say "Mr." But I may be wrong. It

00:40:49.720 --> 00:40:54.280
says "Would you be able to share some of the
most significant difficulties with dealing

00:40:54.280 --> 00:40:57.279
with various screen sizes? And solutions to
it?"

00:40:57.279 --> 00:41:04.160
&gt;&gt;Nick: Well, we've had some great tutorials
on just this, if you go to developer.android.com

00:41:04.160 --> 00:41:08.380
slash training. There's one called, was it
"Working with different screen sizes?" Managing

00:41:08.380 --> 00:41:13.970
different screen sizes. I think the key to
it is a state of mind really. It's how you

00:41:13.970 --> 00:41:20.100
approach the development, that you approach
it a bit like a web developer. You know that

00:41:20.100 --> 00:41:25.710
there's variation in screen sizes and resolutions
and densities, so you don't go deep down the

00:41:25.710 --> 00:41:31.329
hole developing for just like the cell phone
in your pocket and then try to retrofit kind

00:41:31.329 --> 00:41:36.539
of support for other things. I think you approach
it from a scaling point of view. So you think,

00:41:36.539 --> 00:41:40.980
this bit should be at the top. Then this bit
can grow. And then this bit is at the bottom.

00:41:40.980 --> 00:41:42.359
Or however you might arrange it.

00:41:42.359 --> 00:41:50.069
So very quickly a few techniques. You can
do, it's like using like relative layouts.

00:41:50.069 --> 00:41:53.400
Make it as simple as that. So they can, bits
can grow and change and so on. And always

00:41:53.400 --> 00:42:00.049
work in density independent pixels. So it's
a concept in android which allows you to size

00:42:00.049 --> 00:42:05.220
things in a way that it'll appear the same
physical size across different density screens.

00:42:05.220 --> 00:42:10.680
That's very important. And then to also think
about providing alternative layouts for different

00:42:10.680 --> 00:42:16.359
screen sizes. If you look at, I think the
top blog post on the android developers blog,

00:42:16.359 --> 00:42:20.970
and my own, in which I wrote about getting
your app ready for Nexus 7 and Jellybean.

00:42:20.970 --> 00:42:26.200
That talks about how you can provide alternative
layouts for different devices depending on

00:42:26.200 --> 00:42:30.640
how much space they have available to you.
So it lets you write an application with one

00:42:30.640 --> 00:42:32.550
piece of logic behind it. But different presentations.

00:42:32.550 --> 00:42:39.029
&gt;&gt;Matt: Yeah, I think the one thing I'd add
to that is just try and kind of embrace the

00:42:39.029 --> 00:42:43.640
different buckets and if you can sort of use
some different [vents, pictures, the drawable

00:42:43.640 --> 00:42:48.819
dash helps. LDPI-NDPI] etcetera. Because that
doesn't just apply to drawboards like Nick

00:42:48.819 --> 00:42:52.010
said. It also applies to layouts, and then
valleys. Etcetera. And then you can literally

00:42:52.010 --> 00:42:56.261
extract more and more kind of, where those
valleys are coming, and let the system decide

00:42:56.261 --> 00:43:01.750
what's the most appropriate valley. If you
kind of erase that, you start getting a lot

00:43:01.750 --> 00:43:04.780
of this done for free. And you don't have
to write any additional code.

00:43:04.780 --> 00:43:08.280
&gt;&gt;Nick: Yeah, use the resources system.

00:43:08.280 --> 00:43:09.280
&gt;&gt;Matt: Yeah.

00:43:09.280 --> 00:43:15.170
&gt;&gt;Nick: And you tip some of the people on
the call as well, any top tips on managing

00:43:15.170 --> 00:43:18.339
variations and screen sizes?

00:43:18.339 --> 00:43:24.549
&gt;&gt;Lucas: One thing that helped me a bit in
Pattern specifically, maybe it's a kind of

00:43:24.549 --> 00:43:31.589
extreme approach, but I think in terms of
fragments instead of activities all the time.

00:43:31.589 --> 00:43:32.589
&gt;&gt;Nick: Yeah.

00:43:32.589 --> 00:43:38.329
&gt;&gt;Lucas: So I started with the phone UI. And
I started with a lot of activities with one

00:43:38.329 --> 00:43:44.099
fragment inside most of the time. But then
when I moved on to the tablet UI, I had all

00:43:44.099 --> 00:43:49.510
those complements that I could just assemble
in different layouts. So that helped a lot.

00:43:49.510 --> 00:43:56.319
So my tip would be, thinking like, fragment,
in terms of fragments from the start. So you

00:43:56.319 --> 00:43:58.099
can recombine stuff later.

00:43:58.099 --> 00:44:02.069
&gt;&gt;Nick: Absolutely. Yes, great point, should
have said that. Which is, if you're not familiar

00:44:02.069 --> 00:44:08.079
with fragments yet, W. L. Long, it's basically
a reusable chunk of functionality. So you

00:44:08.079 --> 00:44:12.530
kind of write these chunks and you have them
laid out in different configurations. You

00:44:12.530 --> 00:44:17.829
should definitely look at that. In fact, if
you starting from scratch in applications,

00:44:17.829 --> 00:44:24.849
you take a look at the new templates which
we have in Eclipse. Then they'll create fragments

00:44:24.849 --> 00:44:28.010
for you and so on. So it's a great starting
point.

00:44:28.010 --> 00:44:34.130
&gt;&gt;Sparky: Yeah, without writing any code yourself
you can get an application that has two fragments

00:44:34.130 --> 00:44:37.269
on screen. One with a list view and another
with a detail.

00:44:37.269 --> 00:44:43.420
&gt;&gt;Nick: Well, tablet, on the phone device
it'll be full screen each.

00:44:43.420 --> 00:44:51.330
&gt;&gt;Sparky: I think that's quite a step up from
our old Hello World application, I think.

00:44:51.330 --> 00:44:52.330
[laughter]

00:44:52.330 --> 00:44:53.330
So, uh.

00:44:53.330 --> 00:44:57.849
&gt;&gt;Nick: Markus, you have a question incoming
in the Google plus comments. Where Johann

00:44:57.849 --> 00:45:02.280
is asking how Spotify app manages to keep
its service running without showing up in

00:45:02.280 --> 00:45:03.710
the running services list.

00:45:03.710 --> 00:45:04.710
&gt;&gt;Markus: Well, we don't.

00:45:04.710 --> 00:45:08.819
&gt;&gt;Nick: That's what I thought the answer would
be. Good.

00:45:08.819 --> 00:45:12.630
&gt;&gt;Markus: Well we're not trying to at least.

00:45:12.630 --> 00:45:13.630
[laughter]

00:45:13.630 --> 00:45:17.690
&gt;&gt;Markus: [static noise and audio cuts out
through this speaking] The way it works, is

00:45:17.690 --> 00:45:23.810
we, have a little stealth machine that keeps
track when we're doing something. Which means

00:45:23.810 --> 00:45:31.670
[that download we use a unintelligible] there
are a few conditions that can interlock within,

00:45:31.670 --> 00:45:38.039
like if you [inaudible] and so on. And if
you're not doing anything, we have a time

00:45:38.039 --> 00:45:45.790
out, but it doesn't matter how long it is.
But then you'll actually shut down the service.

00:45:45.790 --> 00:45:55.830
And if you don't, if you're actually doing
some things, it will, if you play music without

00:45:55.830 --> 00:46:01.730
[unintelligible] identification and thereby
[inaudible] alive. Otherwise you're not doing

00:46:01.730 --> 00:46:02.910
anything [inaudible].

00:46:02.910 --> 00:46:07.890
&gt;&gt;Nick: Brilliant. I think that's a good tip.
You basically don't do any work you don't

00:46:07.890 --> 00:46:12.990
need to do in your services. But make sure
you finish yourself. If you're not doing any

00:46:12.990 --> 00:46:16.700
work. Perhaps you know, escape to [a nut]
plate, if the service is running, working

00:46:16.700 --> 00:46:17.700
for some condition.

00:46:17.700 --> 00:46:29.250
&gt;&gt;Markus: And also it might be run by [unintelligible]
But yeah. So we're actually running off applications

00:46:29.250 --> 00:46:37.150
[unintelligible]. So that might be like, seems
to be [inaudible] but it's not.

00:46:37.150 --> 00:46:39.640
&gt;&gt;Nick: So, you have a UI in different processes?

00:46:39.640 --> 00:46:43.900
&gt;&gt;Markus: The service in UI is different processes.
Yes.

00:46:43.900 --> 00:46:48.400
&gt;&gt;Nick: and then you're talking to each other
with AIDL?

00:46:48.400 --> 00:46:50.559
&gt;&gt;Markus: Yeah. Exactly.

00:46:50.559 --> 00:46:53.440
&gt;&gt;Nick: OK. Hm. OK.

00:46:53.440 --> 00:46:54.440
[pause]

00:46:54.440 --> 00:46:59.569
&gt;&gt;Markus: I actually have a small question
if there's still time.

00:46:59.569 --> 00:47:00.720
&gt;&gt;Sparky: Yeah, go for it.

00:47:00.720 --> 00:47:03.869
&gt;&gt;Markus: I saw about Global Juice. The new
version.

00:47:03.869 --> 00:47:04.869
&gt;&gt;Sparky: OK.

00:47:04.869 --> 00:47:09.839
&gt;&gt;Markus: I saw it yesterday or something.
It looks really cool. Like [unintelligible]

00:47:09.839 --> 00:47:19.140
resources. All kinds of stuff. I was wondering,
if any of you have actually tried it out,

00:47:19.140 --> 00:47:28.380
and know if it really works well or not. Because
I kind of wanna do it another way if it works.

00:47:28.380 --> 00:47:32.720
Because it looks really nice.

00:47:32.720 --> 00:47:36.170
&gt;&gt;Nick: I've not tried it. Anyone have?

00:47:36.170 --> 00:47:40.710
&gt;&gt;Matt: No, I've seen a couple of places people
playing around with it. Google plus and really

00:47:40.710 --> 00:47:44.730
liking it. But yea, I can't say I've really
tried it myself. Yeah.

00:47:44.730 --> 00:47:51.140
&gt;&gt;Sparky: I think we've got maybe one or two
sample apps floating around where the engineer

00:47:51.140 --> 00:47:57.530
has used Juice to write them. Pretty cool
idea. But likewise I also have not gotten

00:47:57.530 --> 00:48:02.289
into it myself yet. I went, its' something
that I would definitely keep in my back pocket

00:48:02.289 --> 00:48:06.470
as something I might want to investigate at
some point in the future.

00:48:06.470 --> 00:48:15.589
&gt;&gt;Markus: We have some sample apps. Like the
[unintelligible] and it looks really nice.

00:48:15.589 --> 00:48:21.539
So. I was having [unintelligible].
[pause]

00:48:21.539 --> 00:48:30.300
&gt;&gt;Sparky: Well, I noticed that Juno Gonsalves
was good enough to join us in the Hangout.

00:48:30.300 --> 00:48:34.610
And he had a question in the Moderator. We
skimmed over it pretty quickly. But since

00:48:34.610 --> 00:48:40.740
he was good enough to join us here I thought
maybe we would revisit that. So he was, do

00:48:40.740 --> 00:48:42.779
you wanna ask the question yourself?

00:48:42.779 --> 00:48:49.690
&gt;&gt;Juno: Er, I think that everything was right.
And so there is no need to clarify it further.

00:48:49.690 --> 00:48:56.340
But well, I can repeat the, what he was asking.
Well, I just started doing some development

00:48:56.340 --> 00:49:07.349
with NFC APIs. For the contact last smart
cards. And well, at first thing, I've already

00:49:07.349 --> 00:49:15.880
published that issue. Is that I think that
Jellybean is not supporting NFC B. Transit

00:49:15.880 --> 00:49:22.900
always failed. I published an issue, it wasn't
common, the app. But I guess that is an issue

00:49:22.900 --> 00:49:29.599
with jellybean. But NFC B is completely dead
for now. It's not possible to talk with the

00:49:29.599 --> 00:49:41.849
text. And well, all the rest in the NFC support,
I think it's more oriented for the standard

00:49:41.849 --> 00:49:52.799
text. For the M-def. And not for the technologies
to talk directly in raw format with the text.

00:49:52.799 --> 00:50:00.500
So the special documentation is not that good.
And I just lost a lot of time and that was

00:50:00.500 --> 00:50:06.440
well, actually I didn't place any question.
[laughs] My only question is that if there

00:50:06.440 --> 00:50:15.789
was any book I could look at. Because the,
my issue for example this morning was to try

00:50:15.789 --> 00:50:23.920
to talk with the text. And, I'm stalled. And
my face will stall, I'm not sure if my ftp

00:50:23.920 --> 00:50:31.380
was or not. And I just lost the entire morning
trying to talk in [igrate]. Which, OK, yeah,

00:50:31.380 --> 00:50:40.339
I see the book. [laughs] In [igrate] with
the tag. And my conclusion is that the stack

00:50:40.339 --> 00:50:45.089
just doesn't allow it. So. Yeah. Probably
I will take this suggestion and try to look

00:50:45.089 --> 00:50:46.099
at that book.

00:50:46.099 --> 00:50:51.099
&gt;&gt;Nick: Like you say, I think it's quite orientated
around doing NDEF.

00:50:51.099 --> 00:50:52.099
&gt;&gt;Juno: yeah.

00:50:52.099 --> 00:50:56.279
&gt;&gt;Nick: Definitely. 'cause we see that as
the most common use case. The most useful

00:50:56.279 --> 00:51:00.539
use case. But you still do can do all the
tech stuff. You still can read the raw bytes

00:51:00.539 --> 00:51:03.180
and so on. That's definitely supported use-case.

00:51:03.180 --> 00:51:13.210
&gt;&gt;Juno: Well, like I was telling, for example,
NFC B is completely dead in Jellybean. At

00:51:13.210 --> 00:51:26.119
least on Nexus S. The NFC B, so, one of the
technologies for text is not working. Uh,

00:51:26.119 --> 00:51:29.470
I just found that issue a few days ago.

00:51:29.470 --> 00:51:32.990
&gt;&gt;Nick: It used to work on ICS and it's regressed?

00:51:32.990 --> 00:51:34.600
[pause]

00:51:34.600 --> 00:51:40.030
&gt;&gt;Juno: Yeah, my connection is bad, I'm not
getting it.

00:51:40.030 --> 00:51:46.279
&gt;&gt;Nick: Sorry, I was just asking, it used
to work on ICS and it's regressed? But sounds

00:51:46.279 --> 00:51:49.309
like a bug. Have you filed that?

00:51:49.309 --> 00:51:56.930
&gt;&gt;Juno: Well, no idea because I just started
now with Jellybean and I just have one phone.

00:51:56.930 --> 00:52:08.290
But, yeah, I receive an exception saying that,
something not supported. Operation not, well,

00:52:08.290 --> 00:52:12.680
technology not supported. So I'm pretty sure
it's a regression. Because no one was claiming

00:52:12.680 --> 00:52:13.680
that before.

00:52:13.680 --> 00:52:14.980
&gt;&gt;Nick: Interesting.

00:52:14.980 --> 00:52:16.339
&gt;&gt;Juno: Yes.

00:52:16.339 --> 00:52:18.099
&gt;&gt;Nick: Sounds like a bug, so that—

00:52:18.099 --> 00:52:23.690
&gt;&gt;Juno: Yeah, it's for sure an issue. I don't
see—

00:52:23.690 --> 00:52:29.849
&gt;&gt;Nick: Yeah, so if you go to source.android.com
there'll be instructions there on how to file

00:52:29.849 --> 00:52:35.270
a bug, so if you could file it as a bug, that's
the right way to go ahead with this.

00:52:35.270 --> 00:52:45.230
&gt;&gt;Juno: Yeah, actually I think, well it's
on uh, it's, I guess it's this one. Just well,

00:52:45.230 --> 00:52:46.230
just a moment. I think—

00:52:46.230 --> 00:52:48.319
&gt;&gt;Nick: A bug already filed, you're saying.

00:52:48.319 --> 00:52:50.589
&gt;&gt;Juno: Well, it's like this. This is my,
the bug I filed, this is the correct place.

00:52:50.589 --> 00:52:55.400
&gt;&gt;Nick: Oh, OK. I just thought it was target.

00:52:55.400 --> 00:53:01.769
&gt;&gt;Juno: Yeah, but this is the right place
to file issues?

00:53:01.769 --> 00:53:03.240
&gt;&gt;Sparky: Yeah.

00:53:03.240 --> 00:53:06.910
&gt;&gt;Matt: Yeah. I see. Yeah.

00:53:06.910 --> 00:53:12.680
&gt;&gt;Juno: OK. OK. So it's just that. Thanks
for the book suggestion.

00:53:12.680 --> 00:53:21.359
&gt;&gt;Sparky: I remembered where I saw it. I think
somebody in my Google plus stream is the author

00:53:21.359 --> 00:53:24.490
of it, and said "Hey look I just published
this book." Or something like that. I think

00:53:24.490 --> 00:53:26.030
that's where I might have seen it.

00:53:26.030 --> 00:53:27.210
&gt;&gt;Matt: Ah.

00:53:27.210 --> 00:53:28.390
&gt;&gt;Juno: OK.

00:53:28.390 --> 00:53:30.170
&gt;&gt;Nick: Ok. Right.

00:53:30.170 --> 00:53:32.530
&gt;&gt;Juno: OK. Very nice.

00:53:32.530 --> 00:53:36.390
&gt;&gt;Nick: I think we've run out of time. Sorry
we started a little late. We had a little

00:53:36.390 --> 00:53:42.690
setup issue here. But thank you everyone for
joining us. And we'll be back, same time next

00:53:42.690 --> 00:53:47.170
week, talking android development. So until
then, you know—

00:53:47.170 --> 00:53:53.740
&gt;&gt;Sparky: Now, next week I will be in London
and we will all be involved in a developer

00:53:53.740 --> 00:53:58.490
activity. So it will be interesting to find
out what shape the hangout takes. Maybe we

00:53:58.490 --> 00:54:02.320
can get some other people on screen with us.
What do you think?

00:54:02.320 --> 00:54:07.900
&gt;&gt;Matt: yeah, that sounds fun. Let's just
fill up all of these seats with people.

00:54:07.900 --> 00:54:08.900
[laughter]

00:54:08.900 --> 00:54:13.569
&gt;&gt;Nick: Well, until next week. Yeah. Feel
free to fire your questions into the Moderator.

00:54:13.569 --> 00:54:20.640
And we can take a look at them. Or turn up
next week, and ask them live. So thanks everyone

00:54:20.640 --> 00:54:22.150
for coming.

00:54:22.150 --> 00:54:24.410
&gt;&gt;Matt: Cheers. Bye.

00:54:24.410 --> 00:54:25.920
&gt;&gt;Nick: Bye.

