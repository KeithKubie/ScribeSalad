WEBVTT
Kind: captions
Language: en

00:00:11.577 --> 00:00:13.160
ERIC JOHNSON: My
name is Eric Johnson.

00:00:13.160 --> 00:00:15.370
I'm a technical program manager.

00:00:15.370 --> 00:00:19.050
I work on Google's Compute
Engine team up in Seattle,

00:00:19.050 --> 00:00:21.462
and I thought I'd take
25 minutes of your time

00:00:21.462 --> 00:00:23.420
today to talk a little
bit about Google Compute

00:00:23.420 --> 00:00:25.190
Engine and open
source technologies.

00:00:27.740 --> 00:00:30.060
Over this last year, as
you saw a previous session

00:00:30.060 --> 00:00:32.750
and probably heard earlier
in the keynote this morning,

00:00:32.750 --> 00:00:35.800
Compute Engine,
last year in 2013,

00:00:35.800 --> 00:00:38.910
we went all the way
from invite only,

00:00:38.910 --> 00:00:40.920
and then in I/O we
went to open sign-ups,

00:00:40.920 --> 00:00:45.430
and then in December we went
to general availability.

00:00:45.430 --> 00:00:48.690
So during that last
year also, I and several

00:00:48.690 --> 00:00:51.180
of my colleagues
worked on contributing

00:00:51.180 --> 00:00:53.990
code and documentation to
some popular open source

00:00:53.990 --> 00:00:56.020
packages out there so
that if you're already

00:00:56.020 --> 00:00:58.620
using those
technologies, you'd be

00:00:58.620 --> 00:01:02.070
able to go ahead and use those
with Compute Engine as well.

00:01:02.070 --> 00:01:04.819
But before I get into the
specifics of what we've

00:01:04.819 --> 00:01:07.465
done there and some of the
projects we've contributed to,

00:01:07.465 --> 00:01:09.340
I wanted to talk just
a little bit in general

00:01:09.340 --> 00:01:11.290
about how Google
uses open source

00:01:11.290 --> 00:01:16.170
and how we're effectively
built on top of open source.

00:01:16.170 --> 00:01:18.900
It would be incredibly
challenging for Google

00:01:18.900 --> 00:01:22.160
to exist as you know it
today without the foundations

00:01:22.160 --> 00:01:25.460
of open source technology
and open standards.

00:01:25.460 --> 00:01:29.970
We serve hundreds of millions of
users across Gmail and YouTube

00:01:29.970 --> 00:01:33.230
and Maps, and none of that would
be possible without the ability

00:01:33.230 --> 00:01:35.420
to be able to get in, kind
of roll up our sleeves,

00:01:35.420 --> 00:01:37.170
and take a look at the
source code of some

00:01:37.170 --> 00:01:40.630
of the technologies that
we use, make modifications

00:01:40.630 --> 00:01:42.680
to that stuff, and
try and squeeze out

00:01:42.680 --> 00:01:47.650
every ounce of performance
and scalability that we can.

00:01:47.650 --> 00:01:52.270
So there's other alternatives
obviously, besides open source.

00:01:52.270 --> 00:01:57.550
There's other closed source,
binary distributions or binary

00:01:57.550 --> 00:01:59.960
packages out there
that you can use.

00:01:59.960 --> 00:02:03.150
And so, I guess as
I think about sort

00:02:03.150 --> 00:02:06.150
of maybe the differences between
the two, a good analogy to me

00:02:06.150 --> 00:02:07.830
is painting.

00:02:07.830 --> 00:02:11.992
So if you're a painter and you
start off with a blank canvas,

00:02:11.992 --> 00:02:13.200
you have a couple of options.

00:02:13.200 --> 00:02:15.660
You can choose what your
subject is going to be,

00:02:15.660 --> 00:02:18.010
if you want to do a
portrait or a landscape,

00:02:18.010 --> 00:02:20.130
you can choose between
different styles,

00:02:20.130 --> 00:02:25.210
like abstract or
expressionism, impressionist,

00:02:25.210 --> 00:02:29.420
and kind of the sky's the limit.

00:02:29.420 --> 00:02:32.060
And as you go through, maybe
in working on your masterpiece,

00:02:32.060 --> 00:02:34.393
I think one of the things
that's great about open source

00:02:34.393 --> 00:02:36.917
software, which fits in
well with this analogy,

00:02:36.917 --> 00:02:38.625
is the ability to be
able to sort of make

00:02:38.625 --> 00:02:41.180
your own modifications to it.

00:02:41.180 --> 00:02:43.560
So as I was going through
looking for pictures,

00:02:43.560 --> 00:02:45.184
this one kind of
struck out at me.

00:02:45.184 --> 00:02:47.100
And I was thinking as
Rembrandt's sitting here

00:02:47.100 --> 00:02:48.550
painting this, he's
looking at this,

00:02:48.550 --> 00:02:50.174
and he's like, you
know what, I've just

00:02:50.174 --> 00:02:53.130
finished this great big
masterpiece, with the exception

00:02:53.130 --> 00:02:55.464
that I think it's a
little bit too formal.

00:02:55.464 --> 00:02:57.005
He originally had
a hat on everybody,

00:02:57.005 --> 00:02:58.620
and he thought, all
right, well you know,

00:02:58.620 --> 00:03:00.661
it's the 1600s, I'm going
to make it a little bit

00:03:00.661 --> 00:03:03.350
more casual, kind of laid
back, so he just painted over

00:03:03.350 --> 00:03:07.490
the hat on one of the
drapers pictured here.

00:03:07.490 --> 00:03:09.917
So that's an example of being
able to take and start off

00:03:09.917 --> 00:03:12.250
with whatever you want and
be able to make modifications

00:03:12.250 --> 00:03:13.840
to it.

00:03:13.840 --> 00:03:16.490
If I were to contrast that
with sort of the closed source

00:03:16.490 --> 00:03:22.910
world and binary packages, you
can still create a painting,

00:03:22.910 --> 00:03:25.640
but maybe your options are
a little bit more limited.

00:03:25.640 --> 00:03:32.200
So maybe the paint-by-numbers is
a good way to think about that.

00:03:32.200 --> 00:03:35.930
You are given a set of software
to build out your technology,

00:03:35.930 --> 00:03:37.880
but you don't have
as much flexibility.

00:03:37.880 --> 00:03:39.550
The design is already
chosen for you.

00:03:39.550 --> 00:03:43.010
The color palette may
also be chosen for you.

00:03:43.010 --> 00:03:47.540
Even the rearrangement of those
colors might be chosen for you.

00:03:47.540 --> 00:03:49.040
And you don't have
the ability to be

00:03:49.040 --> 00:03:52.630
able to go in and make
modifications to it.

00:03:52.630 --> 00:03:55.150
So at the end of the day,
you can still finish up,

00:03:55.150 --> 00:03:57.786
and you'll have a
decent painting,

00:03:57.786 --> 00:03:59.410
but you just don't
have the flexibility

00:03:59.410 --> 00:04:02.110
to kind of make it your own.

00:04:02.110 --> 00:04:04.765
So how does Google use
open source software?

00:04:07.980 --> 00:04:10.150
First and foremost,
we use Linux.

00:04:10.150 --> 00:04:12.660
There's tens of
thousands of Googlers

00:04:12.660 --> 00:04:15.850
employed all around the world,
and every one of those Googlers

00:04:15.850 --> 00:04:18.300
runs-- well, a very
large number of them,

00:04:18.300 --> 00:04:22.510
let's say-- run either
Linux or Unix derivative.

00:04:22.510 --> 00:04:26.070
Unix had its sort of
roots in open source.

00:04:26.070 --> 00:04:29.050
And all of us pretty
much use that.

00:04:29.050 --> 00:04:31.900
There's utilities
installed on our laptops

00:04:31.900 --> 00:04:33.950
and our workstations
that are all open source,

00:04:33.950 --> 00:04:34.990
like sed and awk.

00:04:34.990 --> 00:04:38.290
These are utilities that
engineers use every day.

00:04:38.290 --> 00:04:39.300
All open source.

00:04:39.300 --> 00:04:42.500
It enables us to do our jobs.

00:04:42.500 --> 00:04:46.410
But not only do we run Linux on
our laptops and workstations,

00:04:46.410 --> 00:04:48.800
but we also run it
in our data centers.

00:04:48.800 --> 00:04:51.910
So every service that
you use at Google

00:04:51.910 --> 00:04:54.155
is powered underneath
that by Linux.

00:04:58.260 --> 00:04:59.900
Another way that
we use open source

00:04:59.900 --> 00:05:02.670
is our development environment.

00:05:02.670 --> 00:05:05.030
We use popular open source
programming languages

00:05:05.030 --> 00:05:08.869
like Python or Go.

00:05:08.869 --> 00:05:10.660
One of the things that
we do to get our job

00:05:10.660 --> 00:05:13.810
done on a day-to-day basis,
we're working on source code

00:05:13.810 --> 00:05:15.690
or making modifications to that.

00:05:15.690 --> 00:05:20.180
We use open source integrated
development environments, IDEs.

00:05:20.180 --> 00:05:24.090
We use open source text editors
for modifying source code.

00:05:24.090 --> 00:05:26.620
We use open source
version control

00:05:26.620 --> 00:05:29.680
to record changes that
we make to the system

00:05:29.680 --> 00:05:33.630
and have that sort of history
of changes that we've made.

00:05:33.630 --> 00:05:36.400
Compilers that we use to compile
the software, all of that

00:05:36.400 --> 00:05:37.480
is open source as well.

00:05:40.730 --> 00:05:43.760
But open source has
a lot of its roots,

00:05:43.760 --> 00:05:47.190
and the ability to be able to
develop open source software

00:05:47.190 --> 00:05:50.070
is based on open standards.

00:05:50.070 --> 00:05:53.969
So these are standard
organizations

00:05:53.969 --> 00:05:55.510
that have gotten
together and defined

00:05:55.510 --> 00:05:58.550
in the open how certain
things should work,

00:05:58.550 --> 00:06:00.110
the characteristics of it.

00:06:00.110 --> 00:06:02.410
And then a lot of times
they'll create reference

00:06:02.410 --> 00:06:05.660
implementations based
on those standards.

00:06:05.660 --> 00:06:07.360
So if you think about
the presentation

00:06:07.360 --> 00:06:09.651
that you're watching today,
whether you're here locally

00:06:09.651 --> 00:06:12.610
or you're watching it
remote over YouTube,

00:06:12.610 --> 00:06:16.090
there are a lot of
standards that are involved.

00:06:16.090 --> 00:06:18.260
The original content
of this, this

00:06:18.260 --> 00:06:23.210
is done in Google Apps in the
slides software, all of that

00:06:23.210 --> 00:06:25.900
data actually lives someplace
in Google data center,

00:06:25.900 --> 00:06:28.550
and it's being served
out over the network.

00:06:28.550 --> 00:06:30.590
The network is defined
by open standards.

00:06:30.590 --> 00:06:33.410
You have protocols
like TCP/IP and DNS

00:06:33.410 --> 00:06:35.110
and HTTP in play,
all of that has

00:06:35.110 --> 00:06:38.110
been defined as open standards.

00:06:38.110 --> 00:06:41.300
Even the content on
the slides, the images

00:06:41.300 --> 00:06:44.740
that you see, the content
of the slides itself,

00:06:44.740 --> 00:06:48.690
that's being displayed via
HTML, CSS, JavaScript, again,

00:06:48.690 --> 00:06:51.260
all things developed
off of open standards.

00:06:51.260 --> 00:06:53.990
Even the text on the
screen, character encodings,

00:06:53.990 --> 00:06:56.360
for Unicode or Ascii.

00:06:56.360 --> 00:06:58.930
Again, open standards.

00:06:58.930 --> 00:07:00.790
Even just displaying
this stuff uses

00:07:00.790 --> 00:07:05.520
HDMI, DDI, VGA or
something like that.

00:07:05.520 --> 00:07:08.240
Also, video encoding
over the internet,

00:07:08.240 --> 00:07:12.960
H.264, again, all
open standards.

00:07:12.960 --> 00:07:18.740
So Google clearly benefits
from open source software.

00:07:18.740 --> 00:07:20.700
Like I said before,
everything that we've done

00:07:20.700 --> 00:07:22.630
is built on top of
open source software

00:07:22.630 --> 00:07:24.520
and we really wouldn't
exist in the way

00:07:24.520 --> 00:07:26.680
that you know us today
without that foundation

00:07:26.680 --> 00:07:29.130
in open source and
open standards.

00:07:29.130 --> 00:07:30.870
So clearly we're
benefiting a lot,

00:07:30.870 --> 00:07:32.830
but does that
benefit you at all?

00:07:32.830 --> 00:07:36.260
Well, you know, one of the
key foundations of open source

00:07:36.260 --> 00:07:39.880
is collaborating with others
and sharing those modifications

00:07:39.880 --> 00:07:41.180
back and forth.

00:07:41.180 --> 00:07:45.010
And Google does participate
in that as well.

00:07:45.010 --> 00:07:47.660
Last year, Linux
Foundation, well

00:07:47.660 --> 00:07:50.680
every year they publish a report
called "Who Writes Linux."

00:07:50.680 --> 00:07:53.900
Last year in 2013,
Google moved up

00:07:53.900 --> 00:07:57.270
into the top 10
corporate contributors

00:07:57.270 --> 00:07:59.320
to the Linux kernel.

00:07:59.320 --> 00:08:01.570
And you might think,
OK, Linux kernel,

00:08:01.570 --> 00:08:03.510
Android runs Linux kernel.

00:08:03.510 --> 00:08:05.880
It's probably all
Android development.

00:08:05.880 --> 00:08:09.240
Well, in an article
published by Ars Tecnica,

00:08:09.240 --> 00:08:10.870
they interviewed
Greg Kroah-Hartman,

00:08:10.870 --> 00:08:13.630
who is the Linux
stable maintainer,

00:08:13.630 --> 00:08:16.620
Linux kernel stable maintainer.

00:08:16.620 --> 00:08:19.130
Greg was quick to point
out that Google is really

00:08:19.130 --> 00:08:21.320
doing work all over the Kernel.

00:08:21.320 --> 00:08:24.880
In fact, you heard if you saw
Joe, the previous session, Joe

00:08:24.880 --> 00:08:27.230
Beda mentioned that we
contributed cgroups,

00:08:27.230 --> 00:08:30.220
I think that was back
in 2007 and 2008,

00:08:30.220 --> 00:08:32.070
and that's sort of the
underlying technology

00:08:32.070 --> 00:08:34.402
behind containers and
some of the technology

00:08:34.402 --> 00:08:36.860
that you see out there in the
open source world like Docker

00:08:36.860 --> 00:08:38.950
today.

00:08:38.950 --> 00:08:41.990
So not only are we
actively contributing

00:08:41.990 --> 00:08:44.880
to the development
of the Linux Kernel,

00:08:44.880 --> 00:08:49.120
Google also through
stipends and mentorship,

00:08:49.120 --> 00:08:51.650
has a Google Summer
of Code Project.

00:08:51.650 --> 00:08:55.600
What that is, we do pay
stipends to students

00:08:55.600 --> 00:08:59.114
to contribute to
open source projects.

00:08:59.114 --> 00:09:00.780
Google Summer of Code
I think we started

00:09:00.780 --> 00:09:05.990
around 2005, and since that
time, through that program,

00:09:05.990 --> 00:09:09.370
we've contributed over
50 million lines of code

00:09:09.370 --> 00:09:13.680
to over 400 open
source projects.

00:09:13.680 --> 00:09:17.870
So those are great examples
of Google contributed back

00:09:17.870 --> 00:09:19.789
to existing projects.

00:09:19.789 --> 00:09:21.580
Some of you are probably
already also aware

00:09:21.580 --> 00:09:25.470
that Google does initiate a
lot of open source projects.

00:09:25.470 --> 00:09:28.422
So to name a few, obviously
Android, everybody I'm sure

00:09:28.422 --> 00:09:29.340
has heard of that.

00:09:29.340 --> 00:09:33.340
Chromium, as a foundation
behind both Chrome Web browser,

00:09:33.340 --> 00:09:35.130
as well as Chrome OS.

00:09:35.130 --> 00:09:37.520
The Go programming language.

00:09:37.520 --> 00:09:39.840
The V8 JavaScript
engine, which really

00:09:39.840 --> 00:09:44.350
is the thing that makes
Node.js sort of under the hood,

00:09:44.350 --> 00:09:46.930
makes Node.js possible.

00:09:46.930 --> 00:09:51.830
So all of these are developed,
were initiated by Google

00:09:51.830 --> 00:09:53.960
open source from the beginning.

00:09:53.960 --> 00:09:58.300
They all have very
active contributions,

00:09:58.300 --> 00:10:01.900
not only from Googlers, but
also from other external

00:10:01.900 --> 00:10:05.185
corporations and even
external developers that

00:10:05.185 --> 00:10:07.810
are interested in the technology
and want to participate in it.

00:10:11.830 --> 00:10:16.154
So let's talk a little bit
about Compute Engine also.

00:10:16.154 --> 00:10:17.820
Lots of announcements
today with Compute

00:10:17.820 --> 00:10:24.280
Engine, and as we mentioned,
because it's a Google service,

00:10:24.280 --> 00:10:28.062
it runs on top of
open source software.

00:10:28.062 --> 00:10:29.520
So some of the open
source software

00:10:29.520 --> 00:10:32.080
that we use to power
Compute Engine,

00:10:32.080 --> 00:10:34.920
obviously it runs on
top of Linux servers

00:10:34.920 --> 00:10:38.390
in our data centers, and we
use KVM as our virtualization

00:10:38.390 --> 00:10:41.150
layer.

00:10:41.150 --> 00:10:44.120
We provide a public
API, and that's

00:10:44.120 --> 00:10:48.390
defined by open standards,
it's an HTTP REST API.

00:10:48.390 --> 00:10:49.770
So there's nothing
sort of unique

00:10:49.770 --> 00:10:51.660
about that, there's
nothing proprietary,

00:10:51.660 --> 00:10:54.950
it's completely open
based off of standards.

00:10:54.950 --> 00:10:57.880
Even the images
that you can launch,

00:10:57.880 --> 00:11:00.160
the virtual machines
that you can spin up,

00:11:00.160 --> 00:11:02.500
the operating systems
that we supply by default,

00:11:02.500 --> 00:11:10.730
are Debian, CentOS, Red Hat
you saw, [? Rel, ?] and SUSE.

00:11:10.730 --> 00:11:13.470
FreeBSD, you can even
spin up your own images

00:11:13.470 --> 00:11:16.820
as you probably heard in
the previous presentation.

00:11:16.820 --> 00:11:19.680
So again, open source
technology through and through.

00:11:24.304 --> 00:11:26.470
Now we're kind of ready to
get into some of the work

00:11:26.470 --> 00:11:29.040
that we've done for open
source projects that

00:11:29.040 --> 00:11:32.370
are out there that do
support Compute Engine.

00:11:32.370 --> 00:11:34.870
Kind of the best way I think
to probably start this off

00:11:34.870 --> 00:11:39.740
is just sort of let's use the
Hello World of Compute Engine.

00:11:39.740 --> 00:11:44.700
So, what I have up here is
13 lines of Python code,

00:11:44.700 --> 00:11:48.630
and what this will do is
create a single virtual machine

00:11:48.630 --> 00:11:50.560
in Compute Engine.

00:11:50.560 --> 00:11:55.790
And this uses the open
source Python library.

00:11:55.790 --> 00:11:58.030
It's an Apache Software
Foundation Project

00:11:58.030 --> 00:11:59.950
called Libcloud.

00:11:59.950 --> 00:12:04.190
It's a multi-cloud
library written in Python.

00:12:04.190 --> 00:12:07.350
So you can use this with
other cloud providers as well.

00:12:07.350 --> 00:12:09.960
So recognizing that there
might be users out there that

00:12:09.960 --> 00:12:13.070
would be using another
provider that maybe would also

00:12:13.070 --> 00:12:15.900
want to try Compute
Engine, we went through

00:12:15.900 --> 00:12:20.210
and we contributed code and
documentation, sample scripts,

00:12:20.210 --> 00:12:22.650
on how you, if you're
already using Libcloud

00:12:22.650 --> 00:12:24.170
or an application
maybe that's even

00:12:24.170 --> 00:12:27.750
built on top of the Libcloud,
can go in and basically make

00:12:27.750 --> 00:12:31.320
some minor configuration
changes for authentication,

00:12:31.320 --> 00:12:33.960
and, by and large, it
should probably just work.

00:12:33.960 --> 00:12:36.550
You may have to make
some customizations there

00:12:36.550 --> 00:12:41.010
in terms of the machine
size or the location,

00:12:41.010 --> 00:12:43.670
but otherwise it's
the same concepts

00:12:43.670 --> 00:12:45.320
that you would
get using Libcloud

00:12:45.320 --> 00:12:48.330
with any other provider.

00:12:48.330 --> 00:12:51.040
But maybe Python's
not your thing.

00:12:51.040 --> 00:12:53.030
Maybe you're a Ruby developer.

00:12:53.030 --> 00:12:56.600
Well fortunately, there is
another library out there

00:12:56.600 --> 00:13:00.650
that's very similar to
Libcloud in that it works

00:13:00.650 --> 00:13:03.310
with multiple
providers, and here I've

00:13:03.310 --> 00:13:06.070
got a snippet of Ruby code,
which does effectively

00:13:06.070 --> 00:13:06.750
the same thing.

00:13:06.750 --> 00:13:10.590
In fact, the code
almost looks identical.

00:13:10.590 --> 00:13:16.496
This fog is an open source
library all in Ruby,

00:13:16.496 --> 00:13:18.870
and again, you can use that
with multiple cloud providers

00:13:18.870 --> 00:13:19.840
as well.

00:13:19.840 --> 00:13:23.290
And this is another example of
where Google contributed code

00:13:23.290 --> 00:13:25.820
back over to the fog
open source community

00:13:25.820 --> 00:13:28.410
to make sure that any fog
developers or applications that

00:13:28.410 --> 00:13:31.035
are built using fog can now
also use Compute Engine.

00:13:34.760 --> 00:13:37.170
So there's this other
language out there

00:13:37.170 --> 00:13:39.700
called Java that's
proved very popular,

00:13:39.700 --> 00:13:42.830
and there happens to be another
open source project very

00:13:42.830 --> 00:13:45.840
similar to both
Libcloud and fog that

00:13:45.840 --> 00:13:49.010
allows you to work with
multiple cloud providers.

00:13:49.010 --> 00:13:51.154
And so here I've got
to 12 lines of code.

00:13:51.154 --> 00:13:53.070
This one's a little bit
different in the sense

00:13:53.070 --> 00:14:00.400
that this code snippet here, and
this is a jclouds sort of idiom

00:14:00.400 --> 00:14:02.960
that they have templates
that you define,

00:14:02.960 --> 00:14:05.080
where you set the node
attributes or the instance

00:14:05.080 --> 00:14:07.120
attributes that
you want to create.

00:14:07.120 --> 00:14:08.810
And so here I'm just
assuming that I'm

00:14:08.810 --> 00:14:11.250
using the default in that
those are same values,

00:14:11.250 --> 00:14:14.520
it's probably a single
core machine type,

00:14:14.520 --> 00:14:18.310
and hopefully it's in a region
that's going to be close by.

00:14:18.310 --> 00:14:21.510
But these are all attributes
that I could modify and change,

00:14:21.510 --> 00:14:24.890
and then I can specify
my exact environment

00:14:24.890 --> 00:14:25.935
that I want with jclouds.

00:14:28.760 --> 00:14:30.830
So again, as I'd
mentioned, Google

00:14:30.830 --> 00:14:35.240
had contributed to code with the
exception I think of jclouds.

00:14:35.240 --> 00:14:37.300
We've kind of poked
at it a little bit

00:14:37.300 --> 00:14:38.870
and offered some
help here and there,

00:14:38.870 --> 00:14:41.570
but by and large, this was
done by the community itself.

00:14:44.590 --> 00:14:48.600
So, I just showed you that you
can use-- programmatically,

00:14:48.600 --> 00:14:52.510
you can create your own virtual
machines and spin those up.

00:14:52.510 --> 00:14:55.050
And that's great, but now
you want to put them to work.

00:14:55.050 --> 00:14:56.909
So the next thing
that you would do,

00:14:56.909 --> 00:14:58.700
once you have your
instance up and running,

00:14:58.700 --> 00:15:01.550
is you probably want to go ahead
and put your own software on it

00:15:01.550 --> 00:15:04.972
or run a service on it.

00:15:04.972 --> 00:15:06.430
And the way that
you would normally

00:15:06.430 --> 00:15:08.330
do that, I guess just
sort of out of the box,

00:15:08.330 --> 00:15:09.900
you'd probably SSH into that.

00:15:09.900 --> 00:15:13.490
And since they're all open
source Linux distributions,

00:15:13.490 --> 00:15:15.970
you'd use your package managers
to pull down your packages,

00:15:15.970 --> 00:15:17.886
to pull you application
and get it configured.

00:15:20.310 --> 00:15:22.900
And I think also you saw
in the previous talk,

00:15:22.900 --> 00:15:25.780
if you saw that one, we talked
a little bit about snowflakes.

00:15:25.780 --> 00:15:28.510
So you're going to
spend a lot of time

00:15:28.510 --> 00:15:31.329
tuning and tweaking this
and getting it just right.

00:15:31.329 --> 00:15:33.370
But then the next time
that you want to go and do

00:15:33.370 --> 00:15:35.090
that, you have to
kind of remember, oh,

00:15:35.090 --> 00:15:36.798
what were all those
packages I had to go?

00:15:36.798 --> 00:15:39.600
Or how did I get around that
one particular dependency?

00:15:39.600 --> 00:15:42.430
Oh yeah, that's right, I had to
compile that thing from source.

00:15:42.430 --> 00:15:45.860
So there's a lot of things
that you want to make and turn

00:15:45.860 --> 00:15:49.820
into sort of a
repeatable process.

00:15:49.820 --> 00:15:52.390
There are a lot of open source
configuration management tools

00:15:52.390 --> 00:15:56.640
out there that you can
use, and all of these now,

00:15:56.640 --> 00:16:01.050
through code contributions by
Google, support Compute Engine.

00:16:01.050 --> 00:16:03.000
So the two biggest
ones that you probably

00:16:03.000 --> 00:16:05.937
have heard of, Puppet
and Chef, but then

00:16:05.937 --> 00:16:07.770
there's also newer ones
that are coming out,

00:16:07.770 --> 00:16:09.910
SaltStack and Ansible.

00:16:09.910 --> 00:16:14.400
And again, all of these
support Compute Engine.

00:16:14.400 --> 00:16:18.340
So tying back into the
previous conversation

00:16:18.340 --> 00:16:23.660
about getting away from
snowflakes, all of these tools

00:16:23.660 --> 00:16:27.000
allow you to create a
configuration that represents

00:16:27.000 --> 00:16:31.730
the desired state of
your server or servers,

00:16:31.730 --> 00:16:34.570
your virtual machines
in the cloud.

00:16:34.570 --> 00:16:36.030
It's like a declarative syntax.

00:16:36.030 --> 00:16:38.780
It doesn't tell
really how a machine

00:16:38.780 --> 00:16:40.360
should get itself configured.

00:16:40.360 --> 00:16:43.250
You just say, here are the
services I want, the packages I

00:16:43.250 --> 00:16:45.320
want, the users
that are created,

00:16:45.320 --> 00:16:47.051
file permissions,
anything that you

00:16:47.051 --> 00:16:48.550
can think of that
you would normally

00:16:48.550 --> 00:16:50.890
do through just manual
one-off commands,

00:16:50.890 --> 00:16:53.570
you can capture in a
configuration file.

00:16:53.570 --> 00:16:55.770
Those configuration
files can be versioned,

00:16:55.770 --> 00:16:57.560
so you can track
changes to that stuff,

00:16:57.560 --> 00:17:01.570
if you make a mistake
you can roll it back.

00:17:01.570 --> 00:17:04.440
They all strive
to be idempotent,

00:17:04.440 --> 00:17:07.300
so you can rerun the same
command over and over again

00:17:07.300 --> 00:17:09.910
and tune and tweak it
and run the same command,

00:17:09.910 --> 00:17:13.200
and it will only install
things that have changed.

00:17:13.200 --> 00:17:15.790
It's a great way to try and
tune and get your environment

00:17:15.790 --> 00:17:18.339
set up just the way you like.

00:17:18.339 --> 00:17:20.715
And as I mentioned,
Google contributed a lot

00:17:20.715 --> 00:17:26.079
to the development of Compute
Engine support into these.

00:17:26.079 --> 00:17:28.329
There's a lot of other open
source packages out there

00:17:28.329 --> 00:17:30.610
and here's some of
the other popular ones

00:17:30.610 --> 00:17:32.390
that we've come across.

00:17:32.390 --> 00:17:35.490
In some cases, Google
has contributed either

00:17:35.490 --> 00:17:39.654
directly to the project,
or through code, or just

00:17:39.654 --> 00:17:40.570
through documentation.

00:17:40.570 --> 00:17:43.460
Like Docker, I think for
instance, one of our developer

00:17:43.460 --> 00:17:47.180
advocates put together a nice
clean set of instructions,

00:17:47.180 --> 00:17:50.180
it's like 10 lines of code to
get up and running with that.

00:17:50.180 --> 00:17:53.940
CoreOS has an image that you
can put into your project,

00:17:53.940 --> 00:17:58.100
and you can run the CoreOS image
right inside of Compute Engine.

00:17:58.100 --> 00:18:01.390
Vagrant is another tool that
you can use to kind of quickly

00:18:01.390 --> 00:18:03.590
spin up a development
environment,

00:18:03.590 --> 00:18:06.040
and that works with
Compute Engine.

00:18:06.040 --> 00:18:08.440
And Packer is
another project that

00:18:08.440 --> 00:18:11.040
allows you to sort of
bundle up your image

00:18:11.040 --> 00:18:14.150
and get it customized the way
you want and then reuse that.

00:18:16.850 --> 00:18:19.950
So let's flip over to a demo.

00:18:19.950 --> 00:18:24.370
So we should have a terminal
come up here in a second.

00:18:24.370 --> 00:18:25.850
Let me just cat out this file.

00:18:30.690 --> 00:18:34.450
So this is very similar
to the little Hello World

00:18:34.450 --> 00:18:37.330
example in Python that
I showed you before.

00:18:37.330 --> 00:18:39.390
The only couple differences
here to call out,

00:18:39.390 --> 00:18:42.590
obviously lines five, six, and
seven have my authentication

00:18:42.590 --> 00:18:45.220
credentials in it
for my project,

00:18:45.220 --> 00:18:49.830
but one of the other
differences here is on line 11,

00:18:49.830 --> 00:18:53.400
I'm going to use a
wrapping function

00:18:53.400 --> 00:18:56.930
that we added to Libcloud,
which allows you to create

00:18:56.930 --> 00:19:01.180
multiple virtual machines
with a single method call.

00:19:01.180 --> 00:19:03.280
So rather than
having to re-execute

00:19:03.280 --> 00:19:05.820
the single create node
inside of a while loop,

00:19:05.820 --> 00:19:08.720
we sort of do all
of that for you.

00:19:08.720 --> 00:19:11.180
And let's see, what else.

00:19:11.180 --> 00:19:14.590
Oh-- I've got it hard
coded in there on line 14

00:19:14.590 --> 00:19:18.430
that we want to create
100 virtual machines.

00:19:18.430 --> 00:19:20.490
And then on line
16, what we'll do

00:19:20.490 --> 00:19:23.350
is we'll print out--
that will return

00:19:23.350 --> 00:19:26.220
an array of created
virtual machines.

00:19:26.220 --> 00:19:27.802
And then so on
line 16, I'm going

00:19:27.802 --> 00:19:30.160
to print out sort of
the length of that list,

00:19:30.160 --> 00:19:32.280
and hopefully that
comes out to be 100.

00:19:32.280 --> 00:19:33.730
And then how long did that take.

00:19:37.730 --> 00:19:40.250
Let's just go
ahead and run this.

00:19:40.250 --> 00:19:46.290
So let's call this Hello
World Times 100, I guess.

00:19:46.290 --> 00:19:49.680
So, I'll flip over to the
developer console here,

00:19:49.680 --> 00:19:52.220
and you can see this is the
demo virtual machine that I

00:19:52.220 --> 00:19:55.780
was on when I executed
that command just now.

00:19:55.780 --> 00:19:59.107
So we should start to see
a couple instances spin up.

00:20:08.360 --> 00:20:12.930
OK, so flipping over
to the Disks tab,

00:20:12.930 --> 00:20:16.370
our virtual machines now
use persistent disks.

00:20:16.370 --> 00:20:18.510
That's your only
option right now.

00:20:18.510 --> 00:20:21.500
There is no ephemeral
disk or scratch disk.

00:20:21.500 --> 00:20:24.550
So what this has done
is it's created the 100

00:20:24.550 --> 00:20:26.910
persistent disks.

00:20:26.910 --> 00:20:28.660
Each is 10 gigs
in size, and each

00:20:28.660 --> 00:20:33.590
has the Debian image
loaded on them.

00:20:33.590 --> 00:20:37.180
And then we also have
the 100 instances

00:20:37.180 --> 00:20:38.970
that are being created.

00:20:38.970 --> 00:20:42.380
And so each of those
instances is matched.

00:20:42.380 --> 00:20:45.450
I should have pointed this
out in the sample code,

00:20:45.450 --> 00:20:48.590
but I give it a name
prefix of LC for Libcloud,

00:20:48.590 --> 00:20:51.350
and then it just depends
on an auto incrementing

00:20:51.350 --> 00:20:53.690
integer for each
instance it creates.

00:20:53.690 --> 00:20:56.900
And then that also matches the
name of the persistent disk,

00:20:56.900 --> 00:21:00.140
and so then that's what
it uses as its boot disk.

00:21:00.140 --> 00:21:03.470
One thing I'd like to point
out as you're getting up

00:21:03.470 --> 00:21:07.201
to speed with Compute Engine
and you want to learn our API,

00:21:07.201 --> 00:21:08.200
there's a couple things.

00:21:08.200 --> 00:21:09.770
So what I did here
is I drilled down

00:21:09.770 --> 00:21:14.685
into just one of these
instances, in this case LC001,

00:21:14.685 --> 00:21:16.310
and I'm scrolling
down, and I'm looking

00:21:16.310 --> 00:21:18.930
at some of the attributes on it.

00:21:18.930 --> 00:21:21.640
But down here at
the bottom, we have

00:21:21.640 --> 00:21:24.590
a couple hyperlinks
that you can click on,

00:21:24.590 --> 00:21:26.990
and this will show
you the exact REST

00:21:26.990 --> 00:21:32.260
API that defines this instance.

00:21:32.260 --> 00:21:34.090
So that's a great
way to learn the API.

00:21:34.090 --> 00:21:36.560
And then there's
also Compute Engine

00:21:36.560 --> 00:21:39.500
provides a command line
utility called gcutil, which

00:21:39.500 --> 00:21:43.820
is part of G Cloud, and this
gives you the exact SSH command

00:21:43.820 --> 00:21:47.589
that you can just cut and paste
SSH directly into that machine.

00:21:47.589 --> 00:21:49.880
So I wanted to call that out
because that's a great way

00:21:49.880 --> 00:21:53.670
to get up and running
with Compute Engine.

00:21:56.785 --> 00:21:59.160
Just kind of quickly drilling
through some of this stuff.

00:21:59.160 --> 00:22:02.800
Snapshots, from a
persistent disk,

00:22:02.800 --> 00:22:04.760
you can create a
snapshot off of that.

00:22:04.760 --> 00:22:06.810
And snapshots are
stored globally,

00:22:06.810 --> 00:22:10.020
so this is a great way for
you to replicate data around.

00:22:10.020 --> 00:22:13.600
You can create your instance,
customize it the way you want,

00:22:13.600 --> 00:22:15.870
and then take a snapshot
of that persistent disk,

00:22:15.870 --> 00:22:19.450
and then bring up another
persistent disk, let's

00:22:19.450 --> 00:22:22.010
say in Europe, and an
instance based off of that,

00:22:22.010 --> 00:22:26.460
and you've just replicated
your instance over there.

00:22:26.460 --> 00:22:29.720
So let's go back to
the instance list.

00:22:29.720 --> 00:22:31.410
And if we scroll
all the way down,

00:22:31.410 --> 00:22:35.280
hopefully we'll see down
to 99, so let's find out

00:22:35.280 --> 00:22:41.860
how long did it take us to
create 100 virtual machines.

00:22:41.860 --> 00:22:46.500
So 100 in 1 minute
and 27 seconds.

00:22:46.500 --> 00:22:50.620
And these, again, they're
all Debian images.

00:22:50.620 --> 00:22:52.340
You can SSH into
any one of these,

00:22:52.340 --> 00:22:58.000
and we had 100% success
in less than two minutes.

00:22:58.000 --> 00:23:02.230
So if we can flip back
to the slides, please.

00:23:02.230 --> 00:23:03.990
So what's next?

00:23:03.990 --> 00:23:07.140
So there's a lot of things
that came out today.

00:23:07.140 --> 00:23:10.890
So as we've been working
to contribute code

00:23:10.890 --> 00:23:12.350
back to the open
source community

00:23:12.350 --> 00:23:15.266
for supporting
Compute Engine, we're

00:23:15.266 --> 00:23:16.390
always iterating on things.

00:23:16.390 --> 00:23:17.970
We're always changing things.

00:23:17.970 --> 00:23:20.230
And it's a difficult job to
kind of keep up with that.

00:23:20.230 --> 00:23:22.807
And it's a small group
of us within Google

00:23:22.807 --> 00:23:25.140
that are kind of contributing
some of our part-time work

00:23:25.140 --> 00:23:26.095
to this stuff.

00:23:26.095 --> 00:23:27.470
And in the spirit
of open source,

00:23:27.470 --> 00:23:30.390
we'd love to
collaborate with you.

00:23:30.390 --> 00:23:32.590
You can find me on
GitHub @erjohnso.

00:23:32.590 --> 00:23:36.030
And if you have a project
that is an open source

00:23:36.030 --> 00:23:38.894
project out there, and
you'd like us to see,

00:23:38.894 --> 00:23:41.060
maybe kind of help you out
either with some guidance

00:23:41.060 --> 00:23:42.920
or even some code
or documentation,

00:23:42.920 --> 00:23:45.520
feel free to do an
@mention on your project

00:23:45.520 --> 00:23:47.710
and kind of bring
it to my attention.

00:23:47.710 --> 00:23:50.547
And if it's not something
that I can personally take on,

00:23:50.547 --> 00:23:52.380
there's a lot of people
that work at Google,

00:23:52.380 --> 00:23:55.480
and I might be able to find
somebody that can help you.

00:23:55.480 --> 00:23:58.040
I'd also like to point
out we have a GitHub

00:23:58.040 --> 00:24:00.570
organization called
Google Cloud Platform

00:24:00.570 --> 00:24:03.980
and there are a lot of great
repositories set up there that

00:24:03.980 --> 00:24:09.870
are samples, applications,
demos, that type of thing

00:24:09.870 --> 00:24:12.190
across all of the Google
Cloud Platform services.

00:24:12.190 --> 00:24:14.710
So I really encourage you
to check that stuff out,

00:24:14.710 --> 00:24:17.450
and I'd like to thank
you for your time.

