WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:02.780 align:start position:0%
 
Android<00:00:00.690><c> 8.1</c><00:00:01.230><c> Oreo</c><00:00:01.589><c> contains</c><00:00:02.070><c> a</c><00:00:02.190><c> targeted</c><00:00:02.639><c> set</c>

00:00:02.780 --> 00:00:02.790 align:start position:0%
Android 8.1 Oreo contains a targeted set
 

00:00:02.790 --> 00:00:04.460 align:start position:0%
Android 8.1 Oreo contains a targeted set
of<00:00:02.879><c> enhancements</c><00:00:03.449><c> including</c><00:00:03.810><c> optimizations</c>

00:00:04.460 --> 00:00:04.470 align:start position:0%
of enhancements including optimizations
 

00:00:04.470 --> 00:00:07.039 align:start position:0%
of enhancements including optimizations
for<00:00:04.620><c> Android</c><00:00:04.950><c> Go</c><00:00:05.130><c> and</c><00:00:05.460><c> a</c><00:00:06.120><c> new</c><00:00:06.330><c> neural</c><00:00:06.720><c> networks</c>

00:00:07.039 --> 00:00:07.049 align:start position:0%
for Android Go and a new neural networks
 

00:00:07.049 --> 00:00:09.290 align:start position:0%
for Android Go and a new neural networks
API<00:00:07.379><c> we've</c><00:00:08.160><c> also</c><00:00:08.340><c> included</c><00:00:08.790><c> a</c><00:00:08.849><c> few</c><00:00:08.880><c> smaller</c>

00:00:09.290 --> 00:00:09.300 align:start position:0%
API we've also included a few smaller
 

00:00:09.300 --> 00:00:11.030 align:start position:0%
API we've also included a few smaller
enhancements<00:00:09.929><c> in</c><00:00:10.050><c> response</c><00:00:10.380><c> to</c><00:00:10.559><c> user</c><00:00:10.740><c> and</c>

00:00:11.030 --> 00:00:11.040 align:start position:0%
enhancements in response to user and
 

00:00:11.040 --> 00:00:14.120 align:start position:0%
enhancements in response to user and
developer<00:00:11.219><c> feedback</c><00:00:12.200><c> Android</c><00:00:13.200><c> 8.1</c><00:00:13.769><c> includes</c>

00:00:14.120 --> 00:00:14.130 align:start position:0%
developer feedback Android 8.1 includes
 

00:00:14.130 --> 00:00:15.919 align:start position:0%
developer feedback Android 8.1 includes
memory<00:00:14.519><c> optimizations</c><00:00:15.269><c> for</c><00:00:15.330><c> Android</c><00:00:15.750><c> Go</c>

00:00:15.919 --> 00:00:15.929 align:start position:0%
memory optimizations for Android Go
 

00:00:15.929 --> 00:00:17.720 align:start position:0%
memory optimizations for Android Go
hardware<00:00:16.650><c> that</c><00:00:16.770><c> has</c><00:00:16.859><c> one</c><00:00:17.070><c> gigabyte</c><00:00:17.430><c> or</c><00:00:17.580><c> less</c>

00:00:17.720 --> 00:00:17.730 align:start position:0%
hardware that has one gigabyte or less
 

00:00:17.730 --> 00:00:20.750 align:start position:0%
hardware that has one gigabyte or less
of<00:00:17.880><c> RAM</c><00:00:18.119><c> for</c><00:00:19.080><c> example</c><00:00:19.560><c> notification</c><00:00:20.490><c> listener</c>

00:00:20.750 --> 00:00:20.760 align:start position:0%
of RAM for example notification listener
 

00:00:20.760 --> 00:00:22.429 align:start position:0%
of RAM for example notification listener
service<00:00:21.090><c> and</c><00:00:21.300><c> condition</c><00:00:21.779><c> provider</c><00:00:22.050><c> service</c>

00:00:22.429 --> 00:00:22.439 align:start position:0%
service and condition provider service
 

00:00:22.439 --> 00:00:24.620 align:start position:0%
service and condition provider service
will<00:00:22.680><c> not</c><00:00:22.949><c> be</c><00:00:23.130><c> supported</c><00:00:23.550><c> on</c><00:00:23.670><c> low</c><00:00:23.850><c> Ram</c><00:00:24.060><c> devices</c>

00:00:24.620 --> 00:00:24.630 align:start position:0%
will not be supported on low Ram devices
 

00:00:24.630 --> 00:00:26.599 align:start position:0%
will not be supported on low Ram devices
in<00:00:24.810><c> addition</c><00:00:25.500><c> we've</c><00:00:25.769><c> added</c><00:00:25.920><c> new</c><00:00:26.220><c> hardware</c>

00:00:26.599 --> 00:00:26.609 align:start position:0%
in addition we've added new hardware
 

00:00:26.609 --> 00:00:28.040 align:start position:0%
in addition we've added new hardware
feature<00:00:26.849><c> constants</c><00:00:27.390><c> so</c><00:00:27.510><c> you</c><00:00:27.630><c> can</c><00:00:27.810><c> now</c><00:00:27.990><c> target</c>

00:00:28.040 --> 00:00:28.050 align:start position:0%
feature constants so you can now target
 

00:00:28.050 --> 00:00:30.169 align:start position:0%
feature constants so you can now target
the<00:00:28.560><c> distribution</c><00:00:29.070><c> of</c><00:00:29.160><c> your</c><00:00:29.279><c> apps</c><00:00:29.429><c> and</c><00:00:29.609><c> apk</c>

00:00:30.169 --> 00:00:30.179 align:start position:0%
the distribution of your apps and apk
 

00:00:30.179 --> 00:00:32.959 align:start position:0%
the distribution of your apps and apk
splits<00:00:30.539><c> to</c><00:00:30.929><c> normal</c><00:00:31.349><c> or</c><00:00:31.650><c> low</c><00:00:32.009><c> ram</c><00:00:32.250><c> devices</c><00:00:32.790><c> if</c>

00:00:32.959 --> 00:00:32.969 align:start position:0%
splits to normal or low ram devices if
 

00:00:32.969 --> 00:00:34.959 align:start position:0%
splits to normal or low ram devices if
they're<00:00:33.149><c> running</c><00:00:33.270><c> Android</c><00:00:33.719><c> 8.1</c><00:00:34.110><c> and</c><00:00:34.230><c> later</c>

00:00:34.959 --> 00:00:34.969 align:start position:0%
they're running Android 8.1 and later
 

00:00:34.969 --> 00:00:37.310 align:start position:0%
they're running Android 8.1 and later
we've<00:00:35.969><c> been</c><00:00:36.149><c> working</c><00:00:36.450><c> hard</c><00:00:36.480><c> to</c><00:00:36.960><c> bring</c><00:00:37.140><c> on</c>

00:00:37.310 --> 00:00:37.320 align:start position:0%
we've been working hard to bring on
 

00:00:37.320 --> 00:00:39.139 align:start position:0%
we've been working hard to bring on
device<00:00:37.620><c> machine</c><00:00:38.070><c> intelligence</c><00:00:38.670><c> to</c><00:00:38.850><c> mobile</c>

00:00:39.139 --> 00:00:39.149 align:start position:0%
device machine intelligence to mobile
 

00:00:39.149 --> 00:00:40.940 align:start position:0%
device machine intelligence to mobile
with<00:00:39.420><c> features</c><00:00:39.780><c> such</c><00:00:39.930><c> as</c><00:00:39.960><c> Now</c><00:00:40.260><c> Playing</c><00:00:40.530><c> and</c>

00:00:40.940 --> 00:00:40.950 align:start position:0%
with features such as Now Playing and
 

00:00:40.950 --> 00:00:43.250 align:start position:0%
with features such as Now Playing and
google<00:00:41.250><c> lense</c><00:00:41.520><c> the</c><00:00:42.090><c> new</c><00:00:42.300><c> neural</c><00:00:42.629><c> networks</c><00:00:42.960><c> API</c>

00:00:43.250 --> 00:00:43.260 align:start position:0%
google lense the new neural networks API
 

00:00:43.260 --> 00:00:45.410 align:start position:0%
google lense the new neural networks API
lays<00:00:43.680><c> the</c><00:00:43.920><c> foundation</c><00:00:44.700><c> for</c><00:00:44.879><c> our</c><00:00:44.910><c> developer</c>

00:00:45.410 --> 00:00:45.420 align:start position:0%
lays the foundation for our developer
 

00:00:45.420 --> 00:00:47.420 align:start position:0%
lays the foundation for our developer
community<00:00:45.570><c> to</c><00:00:45.870><c> build</c><00:00:46.170><c> accelerated</c><00:00:46.950><c> on</c><00:00:47.100><c> device</c>

00:00:47.420 --> 00:00:47.430 align:start position:0%
community to build accelerated on device
 

00:00:47.430 --> 00:00:48.680 align:start position:0%
community to build accelerated on device
applications<00:00:48.090><c> of</c><00:00:48.210><c> machine</c><00:00:48.480><c> learning</c>

00:00:48.680 --> 00:00:48.690 align:start position:0%
applications of machine learning
 

00:00:48.690 --> 00:00:50.510 align:start position:0%
applications of machine learning
including<00:00:49.500><c> image</c><00:00:49.770><c> recognition</c><00:00:50.340><c> and</c>

00:00:50.510 --> 00:00:50.520 align:start position:0%
including image recognition and
 

00:00:50.520 --> 00:00:52.580 align:start position:0%
including image recognition and
prediction<00:00:50.969><c> the</c><00:00:51.629><c> neural</c><00:00:51.930><c> networks</c><00:00:52.260><c> API</c>

00:00:52.580 --> 00:00:52.590 align:start position:0%
prediction the neural networks API
 

00:00:52.590 --> 00:00:54.170 align:start position:0%
prediction the neural networks API
runtime<00:00:53.160><c> is</c><00:00:53.399><c> designed</c><00:00:53.730><c> to</c><00:00:53.879><c> efficiently</c>

00:00:54.170 --> 00:00:54.180 align:start position:0%
runtime is designed to efficiently
 

00:00:54.180 --> 00:00:56.060 align:start position:0%
runtime is designed to efficiently
distribute<00:00:54.629><c> the</c><00:00:55.079><c> computation</c><00:00:55.710><c> workload</c>

00:00:56.060 --> 00:00:56.070 align:start position:0%
distribute the computation workload
 

00:00:56.070 --> 00:00:57.860 align:start position:0%
distribute the computation workload
across<00:00:56.250><c> available</c><00:00:56.879><c> on</c><00:00:57.000><c> device</c><00:00:57.270><c> processors</c>

00:00:57.860 --> 00:00:57.870 align:start position:0%
across available on device processors
 

00:00:57.870 --> 00:00:59.630 align:start position:0%
across available on device processors
including<00:00:58.530><c> dedicated</c><00:00:59.100><c> neural</c><00:00:59.370><c> network</c>

00:00:59.630 --> 00:00:59.640 align:start position:0%
including dedicated neural network
 

00:00:59.640 --> 00:01:01.520 align:start position:0%
including dedicated neural network
hardware<00:00:59.969><c> graphics</c><00:01:00.660><c> processing</c><00:01:01.050><c> units</c><00:01:01.410><c> and</c>

00:01:01.520 --> 00:01:01.530 align:start position:0%
hardware graphics processing units and
 

00:01:01.530 --> 00:01:04.520 align:start position:0%
hardware graphics processing units and
digital<00:01:02.129><c> signal</c><00:01:02.460><c> processors</c><00:01:03.080><c> for</c><00:01:04.080><c> devices</c>

00:01:04.520 --> 00:01:04.530 align:start position:0%
digital signal processors for devices
 

00:01:04.530 --> 00:01:06.469 align:start position:0%
digital signal processors for devices
that<00:01:04.559><c> lack</c><00:01:04.890><c> a</c><00:01:04.920><c> specialized</c><00:01:05.580><c> vendor</c><00:01:05.970><c> driver</c><00:01:06.240><c> or</c>

00:01:06.469 --> 00:01:06.479 align:start position:0%
that lack a specialized vendor driver or
 

00:01:06.479 --> 00:01:08.570 align:start position:0%
that lack a specialized vendor driver or
hardware<00:01:06.900><c> the</c><00:01:07.229><c> runtime</c><00:01:07.619><c> relies</c><00:01:07.920><c> on</c><00:01:07.950><c> optimized</c>

00:01:08.570 --> 00:01:08.580 align:start position:0%
hardware the runtime relies on optimized
 

00:01:08.580 --> 00:01:11.480 align:start position:0%
hardware the runtime relies on optimized
code<00:01:08.880><c> to</c><00:01:09.000><c> execute</c><00:01:09.090><c> requests</c><00:01:09.840><c> on</c><00:01:09.930><c> the</c><00:01:09.960><c> CPU</c><00:01:10.500><c> it's</c>

00:01:11.480 --> 00:01:11.490 align:start position:0%
code to execute requests on the CPU it's
 

00:01:11.490 --> 00:01:13.520 align:start position:0%
code to execute requests on the CPU it's
unlikely<00:01:12.210><c> that</c><00:01:12.479><c> most</c><00:01:12.630><c> apps</c><00:01:12.930><c> will</c><00:01:13.170><c> use</c><00:01:13.380><c> the</c>

00:01:13.520 --> 00:01:13.530 align:start position:0%
unlikely that most apps will use the
 

00:01:13.530 --> 00:01:15.440 align:start position:0%
unlikely that most apps will use the
neural<00:01:13.799><c> networks</c><00:01:14.130><c> API</c><00:01:14.460><c> directly</c><00:01:15.060><c> they'll</c>

00:01:15.440 --> 00:01:15.450 align:start position:0%
neural networks API directly they'll
 

00:01:15.450 --> 00:01:17.270 align:start position:0%
neural networks API directly they'll
instead<00:01:15.840><c> rely</c><00:01:16.140><c> on</c><00:01:16.200><c> a</c><00:01:16.380><c> higher-level</c><00:01:16.650><c> machine</c>

00:01:17.270 --> 00:01:17.280 align:start position:0%
instead rely on a higher-level machine
 

00:01:17.280 --> 00:01:18.800 align:start position:0%
instead rely on a higher-level machine
learning<00:01:17.610><c> framework</c><00:01:17.970><c> such</c><00:01:18.299><c> as</c><00:01:18.420><c> tensorflow</c>

00:01:18.800 --> 00:01:18.810 align:start position:0%
learning framework such as tensorflow
 

00:01:18.810 --> 00:01:21.859 align:start position:0%
learning framework such as tensorflow
lite<00:01:19.170><c> or</c><00:01:19.350><c> cafe</c><00:01:19.950><c> to</c><00:01:20.450><c> tensorflow</c><00:01:21.450><c> lite</c><00:01:21.840><c> is</c>

00:01:21.859 --> 00:01:21.869 align:start position:0%
lite or cafe to tensorflow lite is
 

00:01:21.869 --> 00:01:23.359 align:start position:0%
lite or cafe to tensorflow lite is
Google's<00:01:22.350><c> cross-platform</c><00:01:22.920><c> open-source</c>

00:01:23.359 --> 00:01:23.369 align:start position:0%
Google's cross-platform open-source
 

00:01:23.369 --> 00:01:25.580 align:start position:0%
Google's cross-platform open-source
framework<00:01:24.000><c> designed</c><00:01:24.600><c> to</c><00:01:24.869><c> execute</c><00:01:25.350><c> deep</c>

00:01:25.580 --> 00:01:25.590 align:start position:0%
framework designed to execute deep
 

00:01:25.590 --> 00:01:26.899 align:start position:0%
framework designed to execute deep
trained<00:01:25.860><c> neural</c><00:01:26.159><c> networks</c><00:01:26.490><c> in</c><00:01:26.610><c> mobile</c>

00:01:26.899 --> 00:01:26.909 align:start position:0%
trained neural networks in mobile
 

00:01:26.909 --> 00:01:28.609 align:start position:0%
trained neural networks in mobile
environments<00:01:27.540><c> and</c><00:01:27.659><c> it's</c><00:01:28.080><c> scheduled</c><00:01:28.439><c> to</c><00:01:28.530><c> be</c>

00:01:28.609 --> 00:01:28.619 align:start position:0%
environments and it's scheduled to be
 

00:01:28.619 --> 00:01:30.890 align:start position:0%
environments and it's scheduled to be
released<00:01:28.920><c> soon</c><00:01:29.369><c> so</c><00:01:29.939><c> make</c><00:01:30.119><c> sure</c><00:01:30.150><c> to</c><00:01:30.299><c> stay</c><00:01:30.479><c> tuned</c>

00:01:30.890 --> 00:01:30.900 align:start position:0%
released soon so make sure to stay tuned
 

00:01:30.900 --> 00:01:33.170 align:start position:0%
released soon so make sure to stay tuned
we<00:01:31.680><c> also</c><00:01:31.890><c> are</c><00:01:32.189><c> investing</c><00:01:32.729><c> bringing</c><00:01:33.090><c> the</c>

00:01:33.170 --> 00:01:33.180 align:start position:0%
we also are investing bringing the
 

00:01:33.180 --> 00:01:34.429 align:start position:0%
we also are investing bringing the
benefits<00:01:33.299><c> of</c><00:01:33.659><c> deep</c><00:01:33.840><c> learning</c><00:01:34.020><c> to</c><00:01:34.259><c> more</c>

00:01:34.429 --> 00:01:34.439 align:start position:0%
benefits of deep learning to more
 

00:01:34.439 --> 00:01:36.050 align:start position:0%
benefits of deep learning to more
developers<00:01:34.920><c> so</c><00:01:35.310><c> we</c><00:01:35.400><c> intend</c><00:01:35.670><c> to</c><00:01:35.759><c> release</c><00:01:36.030><c> a</c>

00:01:36.050 --> 00:01:36.060 align:start position:0%
developers so we intend to release a
 

00:01:36.060 --> 00:01:38.030 align:start position:0%
developers so we intend to release a
library<00:01:36.659><c> to</c><00:01:36.810><c> make</c><00:01:36.960><c> common</c><00:01:37.350><c> ml</c><00:01:37.590><c> use</c><00:01:37.770><c> cases</c>

00:01:38.030 --> 00:01:38.040 align:start position:0%
library to make common ml use cases
 

00:01:38.040 --> 00:01:40.870 align:start position:0%
library to make common ml use cases
easily<00:01:38.640><c> available</c><00:01:38.880><c> on</c><00:01:39.210><c> mobile</c><00:01:39.600><c> devices</c>

00:01:40.870 --> 00:01:40.880 align:start position:0%
easily available on mobile devices
 

00:01:40.880 --> 00:01:43.969 align:start position:0%
easily available on mobile devices
Android<00:01:41.880><c> 8.1</c><00:01:42.329><c> Oreo</c><00:01:42.689><c> as</c><00:01:42.869><c> a</c><00:01:42.930><c> new</c><00:01:43.290><c> shared</c><00:01:43.649><c> memory</c>

00:01:43.969 --> 00:01:43.979 align:start position:0%
Android 8.1 Oreo as a new shared memory
 

00:01:43.979 --> 00:01:46.760 align:start position:0%
Android 8.1 Oreo as a new shared memory
API<00:01:44.340><c> this</c><00:01:44.970><c> new</c><00:01:45.210><c> API</c><00:01:45.540><c> enables</c><00:01:46.110><c> the</c><00:01:46.229><c> creation</c><00:01:46.649><c> of</c>

00:01:46.760 --> 00:01:46.770 align:start position:0%
API this new API enables the creation of
 

00:01:46.770 --> 00:01:49.310 align:start position:0%
API this new API enables the creation of
an<00:01:46.950><c> anonymous</c><00:01:47.220><c> shared</c><00:01:47.970><c> memory</c><00:01:48.299><c> instance</c><00:01:48.720><c> you</c>

00:01:49.310 --> 00:01:49.320 align:start position:0%
an anonymous shared memory instance you
 

00:01:49.320 --> 00:01:51.170 align:start position:0%
an anonymous shared memory instance you
can<00:01:49.470><c> nmap</c><00:01:49.860><c> the</c><00:01:50.009><c> shared</c><00:01:50.250><c> memory</c><00:01:50.399><c> object</c><00:01:50.939><c> into</c><00:01:51.149><c> a</c>

00:01:51.170 --> 00:01:51.180 align:start position:0%
can nmap the shared memory object into a
 

00:01:51.180 --> 00:01:52.819 align:start position:0%
can nmap the shared memory object into a
local<00:01:51.390><c> byte</c><00:01:51.659><c> buffer</c><00:01:51.960><c> and</c><00:01:52.170><c> breed</c><00:01:52.439><c> and</c><00:01:52.470><c> write</c><00:01:52.710><c> it</c>

00:01:52.819 --> 00:01:52.829 align:start position:0%
local byte buffer and breed and write it
 

00:01:52.829 --> 00:01:54.679 align:start position:0%
local byte buffer and breed and write it
like<00:01:52.950><c> any</c><00:01:53.100><c> other</c><00:01:53.189><c> byte</c><00:01:53.460><c> buffer</c><00:01:53.790><c> the</c><00:01:54.360><c> memory</c>

00:01:54.679 --> 00:01:54.689 align:start position:0%
like any other byte buffer the memory
 

00:01:54.689 --> 00:01:55.910 align:start position:0%
like any other byte buffer the memory
protection<00:01:55.110><c> can</c><00:01:55.259><c> be</c><00:01:55.380><c> controlled</c><00:01:55.770><c> on</c><00:01:55.890><c> the</c>

00:01:55.910 --> 00:01:55.920 align:start position:0%
protection can be controlled on the
 

00:01:55.920 --> 00:01:58.010 align:start position:0%
protection can be controlled on the
shared<00:01:56.250><c> object</c><00:01:56.700><c> since</c><00:01:57.479><c> the</c><00:01:57.630><c> shared</c><00:01:57.840><c> memory</c>

00:01:58.010 --> 00:01:58.020 align:start position:0%
shared object since the shared memory
 

00:01:58.020 --> 00:01:59.149 align:start position:0%
shared object since the shared memory
object<00:01:58.469><c> is</c><00:01:58.560><c> parsable</c>

00:01:59.149 --> 00:01:59.159 align:start position:0%
object is parsable
 

00:01:59.159 --> 00:02:00.440 align:start position:0%
object is parsable
you<00:01:59.399><c> can</c><00:01:59.579><c> easily</c><00:01:59.790><c> pass</c><00:02:00.119><c> it</c><00:02:00.329><c> to</c><00:02:00.390><c> another</c>

00:02:00.440 --> 00:02:00.450 align:start position:0%
you can easily pass it to another
 

00:02:00.450 --> 00:02:03.139 align:start position:0%
you can easily pass it to another
process<00:02:01.079><c> through</c><00:02:01.259><c> a</c><00:02:01.320><c> IDL</c><00:02:01.770><c> the</c><00:02:02.430><c> remote</c><00:02:02.700><c> process</c>

00:02:03.139 --> 00:02:03.149 align:start position:0%
process through a IDL the remote process
 

00:02:03.149 --> 00:02:04.670 align:start position:0%
process through a IDL the remote process
can<00:02:03.329><c> then</c><00:02:03.450><c> map</c><00:02:03.630><c> any</c><00:02:03.899><c> part</c><00:02:04.170><c> of</c><00:02:04.229><c> the</c><00:02:04.320><c> memory</c><00:02:04.469><c> it</c>

00:02:04.670 --> 00:02:04.680 align:start position:0%
can then map any part of the memory it
 

00:02:04.680 --> 00:02:06.560 align:start position:0%
can then map any part of the memory it
wants<00:02:05.009><c> and</c><00:02:05.189><c> once</c><00:02:05.790><c> access</c><00:02:06.149><c> is</c><00:02:06.270><c> no</c><00:02:06.390><c> longer</c>

00:02:06.560 --> 00:02:06.570 align:start position:0%
wants and once access is no longer
 

00:02:06.570 --> 00:02:06.950 align:start position:0%
wants and once access is no longer
needed

00:02:06.950 --> 00:02:06.960 align:start position:0%
needed
 

00:02:06.960 --> 00:02:09.199 align:start position:0%
needed
just<00:02:07.320><c> unmapped</c><00:02:07.619><c> the</c><00:02:07.770><c> buffer</c><00:02:08.069><c> the</c><00:02:08.970><c> shared</c>

00:02:09.199 --> 00:02:09.209 align:start position:0%
just unmapped the buffer the shared
 

00:02:09.209 --> 00:02:10.790 align:start position:0%
just unmapped the buffer the shared
memory<00:02:09.390><c> API</c><00:02:09.840><c> also</c><00:02:10.440><c> supports</c>

00:02:10.790 --> 00:02:10.800 align:start position:0%
memory API also supports
 

00:02:10.800 --> 00:02:12.740 align:start position:0%
memory API also supports
interoperability<00:02:11.430><c> with</c><00:02:11.760><c> the</c><00:02:11.849><c> NDK</c><00:02:12.209><c> using</c><00:02:12.540><c> a</c>

00:02:12.740 --> 00:02:12.750 align:start position:0%
interoperability with the NDK using a
 

00:02:12.750 --> 00:02:13.699 align:start position:0%
interoperability with the NDK using a
shared<00:02:13.080><c> memory</c>

00:02:13.699 --> 00:02:13.709 align:start position:0%
shared memory
 

00:02:13.709 --> 00:02:15.470 align:start position:0%
shared memory
we<00:02:14.010><c> can</c><00:02:14.159><c> end</c><00:02:14.310><c> that</c><00:02:14.430><c> the</c><00:02:14.609><c> F</c><00:02:14.730><c> D</c><00:02:14.909><c> and</c><00:02:15.180><c> then</c><00:02:15.299><c> read</c>

00:02:15.470 --> 00:02:15.480 align:start position:0%
we can end that the F D and then read
 

00:02:15.480 --> 00:02:17.240 align:start position:0%
we can end that the F D and then read
and<00:02:15.599><c> write</c><00:02:15.780><c> it's</c><00:02:16.290><c> a</c><00:02:16.409><c> great</c><00:02:16.590><c> way</c><00:02:16.739><c> to</c><00:02:16.769><c> share</c><00:02:17.040><c> data</c>

00:02:17.240 --> 00:02:17.250 align:start position:0%
and write it's a great way to share data
 

00:02:17.250 --> 00:02:19.039 align:start position:0%
and write it's a great way to share data
between<00:02:17.370><c> multiple</c><00:02:17.730><c> processes</c><00:02:18.510><c> within</c><00:02:18.900><c> a</c>

00:02:19.039 --> 00:02:19.049 align:start position:0%
between multiple processes within a
 

00:02:19.049 --> 00:02:21.920 align:start position:0%
between multiple processes within a
single<00:02:19.349><c> app</c><00:02:19.469><c> or</c><00:02:19.739><c> even</c><00:02:20.040><c> between</c><00:02:20.159><c> apps</c><00:02:20.930><c> we've</c>

00:02:21.920 --> 00:02:21.930 align:start position:0%
single app or even between apps we've
 

00:02:21.930 --> 00:02:23.479 align:start position:0%
single app or even between apps we've
added<00:02:22.109><c> some</c><00:02:22.349><c> polish</c><00:02:22.709><c> and</c><00:02:22.890><c> refinement</c><00:02:23.400><c> to</c>

00:02:23.479 --> 00:02:23.489 align:start position:0%
added some polish and refinement to
 

00:02:23.489 --> 00:02:25.459 align:start position:0%
added some polish and refinement to
autofill<00:02:23.909><c> most</c><00:02:24.599><c> of</c><00:02:24.750><c> the</c><00:02:24.840><c> changes</c><00:02:25.140><c> are</c><00:02:25.200><c> on</c><00:02:25.379><c> the</c>

00:02:25.459 --> 00:02:25.469 align:start position:0%
autofill most of the changes are on the
 

00:02:25.469 --> 00:02:27.559 align:start position:0%
autofill most of the changes are on the
autofill<00:02:25.829><c> Service</c><00:02:26.280><c> side</c><00:02:26.459><c> for</c><00:02:27.090><c> example</c><00:02:27.480><c> the</c>

00:02:27.559 --> 00:02:27.569 align:start position:0%
autofill Service side for example the
 

00:02:27.569 --> 00:02:29.750 align:start position:0%
autofill Service side for example the
save<00:02:27.780><c> UI</c><00:02:27.989><c> now</c><00:02:28.349><c> supports</c><00:02:28.769><c> custom</c><00:02:29.040><c> descriptions</c>

00:02:29.750 --> 00:02:29.760 align:start position:0%
save UI now supports custom descriptions
 

00:02:29.760 --> 00:02:31.580 align:start position:0%
save UI now supports custom descriptions
so<00:02:30.209><c> when</c><00:02:30.299><c> asking</c><00:02:30.629><c> to</c><00:02:30.750><c> save</c><00:02:30.930><c> credit</c><00:02:31.260><c> card</c><00:02:31.439><c> data</c>

00:02:31.580 --> 00:02:31.590 align:start position:0%
so when asking to save credit card data
 

00:02:31.590 --> 00:02:33.110 align:start position:0%
so when asking to save credit card data
the<00:02:31.859><c> service</c><00:02:32.159><c> can</c><00:02:32.280><c> request</c><00:02:32.519><c> the</c><00:02:32.700><c> display</c><00:02:33.000><c> of</c><00:02:33.090><c> a</c>

00:02:33.110 --> 00:02:33.120 align:start position:0%
the service can request the display of a
 

00:02:33.120 --> 00:02:34.759 align:start position:0%
the service can request the display of a
logo<00:02:33.480><c> representing</c><00:02:34.290><c> the</c><00:02:34.349><c> type</c><00:02:34.530><c> of</c><00:02:34.560><c> credit</c>

00:02:34.759 --> 00:02:34.769 align:start position:0%
logo representing the type of credit
 

00:02:34.769 --> 00:02:36.349 align:start position:0%
logo representing the type of credit
card<00:02:35.129><c> the</c><00:02:35.430><c> last</c><00:02:35.579><c> four</c><00:02:35.760><c> digits</c><00:02:35.819><c> of</c><00:02:36.150><c> the</c><00:02:36.239><c> card</c>

00:02:36.349 --> 00:02:36.359 align:start position:0%
card the last four digits of the card
 

00:02:36.359 --> 00:02:38.629 align:start position:0%
card the last four digits of the card
number<00:02:36.510><c> and</c><00:02:36.900><c> an</c><00:02:37.200><c> expiration</c><00:02:37.560><c> date</c><00:02:37.739><c> this</c><00:02:38.340><c> helps</c>

00:02:38.629 --> 00:02:38.639 align:start position:0%
number and an expiration date this helps
 

00:02:38.639 --> 00:02:40.699 align:start position:0%
number and an expiration date this helps
the<00:02:38.730><c> user</c><00:02:38.760><c> understand</c><00:02:39.420><c> exactly</c><00:02:39.659><c> what</c><00:02:40.530><c> is</c>

00:02:40.699 --> 00:02:40.709 align:start position:0%
the user understand exactly what is
 

00:02:40.709 --> 00:02:43.490 align:start position:0%
the user understand exactly what is
being<00:02:40.739><c> saved</c><00:02:41.629><c> one</c><00:02:42.629><c> minor</c><00:02:42.870><c> change</c><00:02:42.959><c> for</c><00:02:43.349><c> apps</c>

00:02:43.490 --> 00:02:43.500 align:start position:0%
being saved one minor change for apps
 

00:02:43.500 --> 00:02:44.809 align:start position:0%
being saved one minor change for apps
that<00:02:43.769><c> want</c><00:02:43.889><c> to</c><00:02:43.950><c> support</c><00:02:44.040><c> autofill</c><00:02:44.519><c> is</c><00:02:44.670><c> that</c>

00:02:44.809 --> 00:02:44.819 align:start position:0%
that want to support autofill is that
 

00:02:44.819 --> 00:02:46.309 align:start position:0%
that want to support autofill is that
base<00:02:45.000><c> adapter</c><00:02:45.450><c> and</c><00:02:45.599><c> it's</c><00:02:45.720><c> derived</c><00:02:45.930><c> classes</c>

00:02:46.309 --> 00:02:46.319 align:start position:0%
base adapter and it's derived classes
 

00:02:46.319 --> 00:02:47.899 align:start position:0%
base adapter and it's derived classes
such<00:02:46.680><c> as</c><00:02:46.709><c> array</c><00:02:47.010><c> adapter</c><00:02:47.129><c> now</c><00:02:47.579><c> supports</c>

00:02:47.899 --> 00:02:47.909 align:start position:0%
such as array adapter now supports
 

00:02:47.909 --> 00:02:50.270 align:start position:0%
such as array adapter now supports
setting<00:02:48.239><c> autofill</c><00:02:48.629><c> options</c><00:02:49.049><c> this</c><00:02:49.919><c> makes</c><00:02:50.159><c> it</c>

00:02:50.270 --> 00:02:50.280 align:start position:0%
setting autofill options this makes it
 

00:02:50.280 --> 00:02:51.770 align:start position:0%
setting autofill options this makes it
easier<00:02:50.609><c> to</c><00:02:50.639><c> provide</c><00:02:50.939><c> autofill</c><00:02:51.389><c> data</c><00:02:51.569><c> for</c>

00:02:51.770 --> 00:02:51.780 align:start position:0%
easier to provide autofill data for
 

00:02:51.780 --> 00:02:53.809 align:start position:0%
easier to provide autofill data for
simple<00:02:52.049><c> custom</c><00:02:52.349><c> adapters</c><00:02:52.799><c> such</c><00:02:53.220><c> as</c><00:02:53.400><c> one</c><00:02:53.579><c> used</c>

00:02:53.809 --> 00:02:53.819 align:start position:0%
simple custom adapters such as one used
 

00:02:53.819 --> 00:02:55.550 align:start position:0%
simple custom adapters such as one used
to<00:02:53.939><c> set</c><00:02:54.120><c> credit</c><00:02:54.480><c> card</c><00:02:54.689><c> expiration</c><00:02:54.959><c> dates</c><00:02:55.379><c> in</c>

00:02:55.550 --> 00:02:55.560 align:start position:0%
to set credit card expiration dates in
 

00:02:55.560 --> 00:02:58.129 align:start position:0%
to set credit card expiration dates in
Android<00:02:56.189><c> 0</c><00:02:56.609><c> you</c><00:02:57.060><c> would</c><00:02:57.120><c> need</c><00:02:57.269><c> to</c><00:02:57.359><c> override</c><00:02:57.780><c> to</c>

00:02:58.129 --> 00:02:58.139 align:start position:0%
Android 0 you would need to override to
 

00:02:58.139 --> 00:03:00.259 align:start position:0%
Android 0 you would need to override to
get<00:02:58.290><c> autofill</c><00:02:58.680><c> method</c><00:02:59.129><c> options</c><00:02:59.609><c> in</c><00:02:59.790><c> the</c>

00:03:00.259 --> 00:03:00.269 align:start position:0%
get autofill method options in the
 

00:03:00.269 --> 00:03:02.509 align:start position:0%
get autofill method options in the
adapter<00:03:00.689><c> but</c><00:03:01.079><c> now</c><00:03:01.260><c> in</c><00:03:01.409><c> 8.1</c><00:03:01.889><c> you</c><00:03:02.129><c> can</c><00:03:02.250><c> just</c><00:03:02.400><c> call</c>

00:03:02.509 --> 00:03:02.519 align:start position:0%
adapter but now in 8.1 you can just call
 

00:03:02.519 --> 00:03:05.149 align:start position:0%
adapter but now in 8.1 you can just call
set<00:03:02.790><c> autofill</c><00:03:03.180><c> options</c><00:03:03.569><c> and</c><00:03:04.019><c> in</c><00:03:04.919><c> another</c>

00:03:05.149 --> 00:03:05.159 align:start position:0%
set autofill options and in another
 

00:03:05.159 --> 00:03:07.610 align:start position:0%
set autofill options and in another
helpful<00:03:05.459><c> touch</c><00:03:05.730><c> the</c><00:03:06.269><c> API</c><00:03:06.569><c> 27</c><00:03:07.169><c> version</c><00:03:07.469><c> of</c><00:03:07.560><c> the</c>

00:03:07.610 --> 00:03:07.620 align:start position:0%
helpful touch the API 27 version of the
 

00:03:07.620 --> 00:03:09.110 align:start position:0%
helpful touch the API 27 version of the
support<00:03:07.889><c> library</c><00:03:07.980><c> view</c><00:03:08.250><c> compat</c><00:03:08.669><c> now</c><00:03:08.879><c> wraps</c>

00:03:09.110 --> 00:03:09.120 align:start position:0%
support library view compat now wraps
 

00:03:09.120 --> 00:03:10.759 align:start position:0%
support library view compat now wraps
the<00:03:09.299><c> autofill</c><00:03:09.719><c> methods</c><00:03:10.049><c> to</c><00:03:10.200><c> make</c><00:03:10.319><c> it</c><00:03:10.469><c> easier</c>

00:03:10.759 --> 00:03:10.769 align:start position:0%
the autofill methods to make it easier
 

00:03:10.769 --> 00:03:12.170 align:start position:0%
the autofill methods to make it easier
to<00:03:10.829><c> give</c><00:03:11.010><c> hints</c><00:03:11.219><c> to</c><00:03:11.340><c> the</c><00:03:11.489><c> audit</c><00:03:11.700><c> fill</c><00:03:11.819><c> service</c>

00:03:12.170 --> 00:03:12.180 align:start position:0%
to give hints to the audit fill service
 

00:03:12.180 --> 00:03:15.110 align:start position:0%
to give hints to the audit fill service
which<00:03:12.719><c> you</c><00:03:12.870><c> really</c><00:03:13.049><c> should</c><00:03:13.319><c> do</c><00:03:13.939><c> one</c><00:03:14.939><c> more</c>

00:03:15.110 --> 00:03:15.120 align:start position:0%
which you really should do one more
 

00:03:15.120 --> 00:03:17.119 align:start position:0%
which you really should do one more
autofill<00:03:15.569><c> note</c><00:03:15.780><c> consider</c><00:03:16.560><c> setting</c><00:03:16.919><c> up</c><00:03:16.980><c> an</c>

00:03:17.119 --> 00:03:17.129 align:start position:0%
autofill note consider setting up an
 

00:03:17.129 --> 00:03:18.920 align:start position:0%
autofill note consider setting up an
association<00:03:17.760><c> between</c><00:03:17.849><c> your</c><00:03:18.120><c> app</c><00:03:18.269><c> and</c><00:03:18.479><c> your</c>

00:03:18.920 --> 00:03:18.930 align:start position:0%
association between your app and your
 

00:03:18.930 --> 00:03:20.930 align:start position:0%
association between your app and your
website<00:03:19.319><c> this</c><00:03:19.769><c> allows</c><00:03:20.010><c> the</c><00:03:20.190><c> autofill</c><00:03:20.579><c> service</c>

00:03:20.930 --> 00:03:20.940 align:start position:0%
website this allows the autofill service
 

00:03:20.940 --> 00:03:22.339 align:start position:0%
website this allows the autofill service
to<00:03:21.060><c> share</c><00:03:21.239><c> passwords</c><00:03:21.540><c> between</c><00:03:22.109><c> the</c><00:03:22.199><c> two</c>

00:03:22.339 --> 00:03:22.349 align:start position:0%
to share passwords between the two
 

00:03:22.349 --> 00:03:24.379 align:start position:0%
to share passwords between the two
whether<00:03:22.620><c> you're</c><00:03:22.769><c> on</c><00:03:22.829><c> android</c><00:03:23.159><c> 8.0</c><00:03:23.549><c> or</c><00:03:23.790><c> android</c>

00:03:24.379 --> 00:03:24.389 align:start position:0%
whether you're on android 8.0 or android
 

00:03:24.389 --> 00:03:28.069 align:start position:0%
whether you're on android 8.0 or android
8.1<00:03:25.400><c> Android</c><00:03:26.400><c> 801</c><00:03:26.819><c> includes</c><00:03:27.120><c> new</c><00:03:27.449><c> api</c><00:03:27.780><c> is</c><00:03:27.900><c> in</c>

00:03:28.069 --> 00:03:28.079 align:start position:0%
8.1 Android 801 includes new api is in
 

00:03:28.079 --> 00:03:29.839 align:start position:0%
8.1 Android 801 includes new api is in
the<00:03:28.169><c> wallpaper</c><00:03:28.590><c> manager</c><00:03:29.010><c> to</c><00:03:29.370><c> get</c><00:03:29.489><c> the</c><00:03:29.609><c> most</c>

00:03:29.839 --> 00:03:29.849 align:start position:0%
the wallpaper manager to get the most
 

00:03:29.849 --> 00:03:31.699 align:start position:0%
the wallpaper manager to get the most
representative<00:03:30.720><c> colors</c><00:03:31.109><c> from</c><00:03:31.290><c> the</c><00:03:31.439><c> current</c>

00:03:31.699 --> 00:03:31.709 align:start position:0%
representative colors from the current
 

00:03:31.709 --> 00:03:33.860 align:start position:0%
representative colors from the current
wallpaper<00:03:32.099><c> and</c><00:03:32.370><c> the</c><00:03:32.760><c> system</c><00:03:33.090><c> UI</c><00:03:33.239><c> and</c><00:03:33.540><c> pixel</c>

00:03:33.860 --> 00:03:33.870 align:start position:0%
wallpaper and the system UI and pixel
 

00:03:33.870 --> 00:03:35.390 align:start position:0%
wallpaper and the system UI and pixel
launcher<00:03:34.169><c> will</c><00:03:34.290><c> adjust</c><00:03:34.650><c> the</c><00:03:34.739><c> colors</c><00:03:35.040><c> they</c><00:03:35.189><c> use</c>

00:03:35.390 --> 00:03:35.400 align:start position:0%
launcher will adjust the colors they use
 

00:03:35.400 --> 00:03:37.759 align:start position:0%
launcher will adjust the colors they use
based<00:03:35.729><c> upon</c><00:03:36.000><c> this</c><00:03:36.180><c> api</c><00:03:36.540><c> if</c><00:03:37.019><c> you've</c><00:03:37.560><c> made</c><00:03:37.739><c> a</c>

00:03:37.759 --> 00:03:37.769 align:start position:0%
based upon this api if you've made a
 

00:03:37.769 --> 00:03:39.830 align:start position:0%
based upon this api if you've made a
live<00:03:38.040><c> wallpaper</c><00:03:38.519><c> you</c><00:03:38.939><c> notify</c><00:03:39.329><c> the</c><00:03:39.359><c> wallpaper</c>

00:03:39.830 --> 00:03:39.840 align:start position:0%
live wallpaper you notify the wallpaper
 

00:03:39.840 --> 00:03:41.420 align:start position:0%
live wallpaper you notify the wallpaper
service<00:03:40.229><c> whenever</c><00:03:40.620><c> your</c><00:03:40.829><c> colors</c><00:03:41.129><c> change</c>

00:03:41.420 --> 00:03:41.430 align:start position:0%
service whenever your colors change
 

00:03:41.430 --> 00:03:43.069 align:start position:0%
service whenever your colors change
significantly<00:03:41.639><c> returning</c><00:03:42.479><c> them</c><00:03:42.599><c> in</c><00:03:42.780><c> the</c><00:03:42.930><c> on</c>

00:03:43.069 --> 00:03:43.079 align:start position:0%
significantly returning them in the on
 

00:03:43.079 --> 00:03:45.259 align:start position:0%
significantly returning them in the on
compute<00:03:43.530><c> colors</c><00:03:43.829><c> method</c><00:03:44.189><c> we</c><00:03:44.699><c> recommend</c><00:03:45.150><c> using</c>

00:03:45.259 --> 00:03:45.269 align:start position:0%
compute colors method we recommend using
 

00:03:45.269 --> 00:03:46.759 align:start position:0%
compute colors method we recommend using
the<00:03:45.449><c> utility</c><00:03:46.049><c> functions</c><00:03:46.470><c> within</c><00:03:46.650><c> the</c>

00:03:46.759 --> 00:03:46.769 align:start position:0%
the utility functions within the
 

00:03:46.769 --> 00:03:48.860 align:start position:0%
the utility functions within the
wallpaper<00:03:47.220><c> colors</c><00:03:47.579><c> class</c><00:03:47.849><c> to</c><00:03:48.299><c> automatically</c>

00:03:48.860 --> 00:03:48.870 align:start position:0%
wallpaper colors class to automatically
 

00:03:48.870 --> 00:03:50.240 align:start position:0%
wallpaper colors class to automatically
select<00:03:49.139><c> these</c><00:03:49.439><c> colors</c><00:03:49.769><c> from</c><00:03:50.129><c> a</c>

00:03:50.240 --> 00:03:50.250 align:start position:0%
select these colors from a
 

00:03:50.250 --> 00:03:53.119 align:start position:0%
select these colors from a
representative<00:03:50.430><c> bitmap</c><00:03:51.209><c> or</c><00:03:51.359><c> drawable</c><00:03:52.129><c> some</c>

00:03:53.119 --> 00:03:53.129 align:start position:0%
representative bitmap or drawable some
 

00:03:53.129 --> 00:03:55.009 align:start position:0%
representative bitmap or drawable some
other<00:03:53.280><c> changes</c><00:03:53.970><c> you</c><00:03:54.060><c> might</c><00:03:54.209><c> be</c><00:03:54.359><c> interested</c><00:03:54.569><c> in</c>

00:03:55.009 --> 00:03:55.019 align:start position:0%
other changes you might be interested in
 

00:03:55.019 --> 00:03:56.899 align:start position:0%
other changes you might be interested in
edit<00:03:55.560><c> text</c><00:03:55.709><c> now</c><00:03:55.889><c> returns</c><00:03:56.220><c> an</c><00:03:56.370><c> editable</c><00:03:56.639><c> rather</c>

00:03:56.899 --> 00:03:56.909 align:start position:0%
edit text now returns an editable rather
 

00:03:56.909 --> 00:03:58.369 align:start position:0%
edit text now returns an editable rather
than<00:03:57.090><c> a</c><00:03:57.120><c> care</c><00:03:57.359><c> sequence</c><00:03:57.720><c> your</c><00:03:58.109><c> app</c><00:03:58.229><c> can</c>

00:03:58.369 --> 00:03:58.379 align:start position:0%
than a care sequence your app can
 

00:03:58.379 --> 00:03:59.599 align:start position:0%
than a care sequence your app can
determine<00:03:58.620><c> how</c><00:03:58.799><c> it</c><00:03:58.859><c> responds</c><00:03:59.280><c> to</c><00:03:59.310><c> a</c><00:03:59.430><c> known</c>

00:03:59.599 --> 00:03:59.609 align:start position:0%
determine how it responds to a known
 

00:03:59.609 --> 00:04:01.039 align:start position:0%
determine how it responds to a known
threat<00:03:59.909><c> from</c><00:04:00.000><c> the</c><00:04:00.180><c> webview</c><00:04:00.449><c> implementation</c>

00:04:01.039 --> 00:04:01.049 align:start position:0%
threat from the webview implementation
 

00:04:01.049 --> 00:04:03.199 align:start position:0%
threat from the webview implementation
of<00:04:01.139><c> the</c><00:04:01.229><c> Safe</c><00:04:01.379><c> Browsing</c><00:04:01.409><c> API</c><00:04:01.889><c> the</c><00:04:02.819><c> media</c>

00:04:03.199 --> 00:04:03.209 align:start position:0%
of the Safe Browsing API the media
 

00:04:03.209 --> 00:04:04.759 align:start position:0%
of the Safe Browsing API the media
metadata<00:04:03.569><c> Retriever</c><00:04:04.019><c> class</c><00:04:04.290><c> has</c><00:04:04.500><c> a</c><00:04:04.530><c> new</c>

00:04:04.759 --> 00:04:04.769 align:start position:0%
metadata Retriever class has a new
 

00:04:04.769 --> 00:04:06.770 align:start position:0%
metadata Retriever class has a new
method<00:04:05.159><c> get</c><00:04:05.430><c> scaled</c><00:04:05.669><c> frame</c><00:04:05.970><c> at</c><00:04:06.090><c> time</c><00:04:06.329><c> that</c>

00:04:06.770 --> 00:04:06.780 align:start position:0%
method get scaled frame at time that
 

00:04:06.780 --> 00:04:08.539 align:start position:0%
method get scaled frame at time that
finds<00:04:06.989><c> a</c><00:04:07.109><c> frame</c><00:04:07.349><c> near</c><00:04:07.620><c> a</c><00:04:07.650><c> given</c><00:04:07.949><c> time</c><00:04:08.159><c> position</c>

00:04:08.539 --> 00:04:08.549 align:start position:0%
finds a frame near a given time position
 

00:04:08.549 --> 00:04:09.830 align:start position:0%
finds a frame near a given time position
and<00:04:08.699><c> returns</c><00:04:08.970><c> a</c><00:04:09.060><c> bitmap</c><00:04:09.269><c> with</c><00:04:09.569><c> the</c><00:04:09.659><c> same</c>

00:04:09.830 --> 00:04:09.840 align:start position:0%
and returns a bitmap with the same
 

00:04:09.840 --> 00:04:11.719 align:start position:0%
and returns a bitmap with the same
aspect<00:04:10.199><c> ratio</c><00:04:10.560><c> as</c><00:04:10.680><c> a</c><00:04:10.709><c> source</c><00:04:10.979><c> frame</c><00:04:11.280><c> but</c><00:04:11.639><c> at</c>

00:04:11.719 --> 00:04:11.729 align:start position:0%
aspect ratio as a source frame but at
 

00:04:11.729 --> 00:04:14.330 align:start position:0%
aspect ratio as a source frame but at
the<00:04:11.819><c> requested</c><00:04:12.239><c> size</c><00:04:12.449><c> if</c><00:04:13.139><c> you</c><00:04:13.590><c> have</c><00:04:13.650><c> any</c><00:04:13.859><c> pixel</c>

00:04:14.330 --> 00:04:14.340 align:start position:0%
the requested size if you have any pixel
 

00:04:14.340 --> 00:04:16.219 align:start position:0%
the requested size if you have any pixel
or<00:04:14.489><c> pixel</c><00:04:14.909><c> two</c><00:04:15.090><c> device</c><00:04:15.389><c> we</c><00:04:15.870><c> support</c>

00:04:16.219 --> 00:04:16.229 align:start position:0%
or pixel two device we support
 

00:04:16.229 --> 00:04:17.990 align:start position:0%
or pixel two device we support
requesting<00:04:16.769><c> a</c><00:04:16.919><c> audio</c><00:04:17.250><c> sharing</c><00:04:17.759><c> mode</c>

00:04:17.990 --> 00:04:18.000 align:start position:0%
requesting a audio sharing mode
 

00:04:18.000 --> 00:04:20.539 align:start position:0%
requesting a audio sharing mode
exclusive<00:04:18.359><c> in</c><00:04:18.959><c> some</c><00:04:19.199><c> cases</c><00:04:19.470><c> which</c><00:04:20.190><c> provides</c>

00:04:20.539 --> 00:04:20.549 align:start position:0%
exclusive in some cases which provides
 

00:04:20.549 --> 00:04:23.209 align:start position:0%
exclusive in some cases which provides
reduced<00:04:20.970><c> audio</c><00:04:21.359><c> latency</c><00:04:21.599><c> better</c><00:04:22.440><c> yet</c><00:04:22.710><c> we've</c>

00:04:23.209 --> 00:04:23.219 align:start position:0%
reduced audio latency better yet we've
 

00:04:23.219 --> 00:04:25.279 align:start position:0%
reduced audio latency better yet we've
released<00:04:23.520><c> a</c><00:04:23.639><c> preview</c><00:04:24.029><c> of</c><00:04:24.210><c> the</c><00:04:24.330><c> oboe</c><00:04:24.810><c> library</c>

00:04:25.279 --> 00:04:25.289 align:start position:0%
released a preview of the oboe library
 

00:04:25.289 --> 00:04:27.550 align:start position:0%
released a preview of the oboe library
which<00:04:25.680><c> allows</c><00:04:25.950><c> applications</c><00:04:26.669><c> to</c><00:04:26.760><c> target</c><00:04:27.120><c> a</c>

00:04:27.550 --> 00:04:27.560 align:start position:0%
which allows applications to target a
 

00:04:27.560 --> 00:04:30.340 align:start position:0%
which allows applications to target a
API<00:04:28.070><c> 26</c><00:04:28.639><c> plus</c><00:04:28.850><c> devices</c><00:04:29.360><c> and</c><00:04:29.540><c> opensl</c><00:04:30.139><c> on</c>

00:04:30.340 --> 00:04:30.350 align:start position:0%
API 26 plus devices and opensl on
 

00:04:30.350 --> 00:04:32.260 align:start position:0%
API 26 plus devices and opensl on
previous<00:04:30.860><c> versions</c><00:04:30.980><c> of</c><00:04:31.220><c> Android</c><00:04:31.340><c> to</c><00:04:32.030><c> get</c><00:04:32.180><c> the</c>

00:04:32.260 --> 00:04:32.270 align:start position:0%
previous versions of Android to get the
 

00:04:32.270 --> 00:04:33.940 align:start position:0%
previous versions of Android to get the
best<00:04:32.450><c> latency</c><00:04:32.930><c> with</c><00:04:33.139><c> a</c><00:04:33.170><c> simplified</c><00:04:33.470><c> API</c>

00:04:33.940 --> 00:04:33.950 align:start position:0%
best latency with a simplified API
 

00:04:33.950 --> 00:04:36.220 align:start position:0%
best latency with a simplified API
surface<00:04:34.250><c> in</c><00:04:34.520><c> a</c><00:04:34.580><c> compatible</c><00:04:34.850><c> way</c><00:04:35.180><c> if</c><00:04:35.600><c> you</c><00:04:36.110><c> have</c>

00:04:36.220 --> 00:04:36.230 align:start position:0%
surface in a compatible way if you have
 

00:04:36.230 --> 00:04:37.990 align:start position:0%
surface in a compatible way if you have
a<00:04:36.260><c> pixel</c><00:04:36.620><c> to</c><00:04:36.830><c> you'll</c><00:04:37.160><c> notice</c><00:04:37.520><c> a</c><00:04:37.610><c> developer</c>

00:04:37.990 --> 00:04:38.000 align:start position:0%
a pixel to you'll notice a developer
 

00:04:38.000 --> 00:04:40.000 align:start position:0%
a pixel to you'll notice a developer
setting<00:04:38.270><c> in</c><00:04:38.360><c> Android</c><00:04:38.630><c> 8.1</c><00:04:39.110><c> for</c><00:04:39.139><c> camera</c><00:04:39.800><c> Hal</c>

00:04:40.000 --> 00:04:40.010 align:start position:0%
setting in Android 8.1 for camera Hal
 

00:04:40.010 --> 00:04:42.700 align:start position:0%
setting in Android 8.1 for camera Hal
hdr+<00:04:40.730><c> this</c><00:04:41.570><c> enables</c><00:04:41.930><c> you</c><00:04:42.020><c> to</c><00:04:42.050><c> test</c><00:04:42.350><c> an</c><00:04:42.470><c> early</c>

00:04:42.700 --> 00:04:42.710 align:start position:0%
hdr+ this enables you to test an early
 

00:04:42.710 --> 00:04:45.159 align:start position:0%
hdr+ this enables you to test an early
version<00:04:42.860><c> of</c><00:04:43.130><c> HDR</c><00:04:43.520><c> plus</c><00:04:43.820><c> with</c><00:04:44.300><c> pixel</c><00:04:44.690><c> visual</c>

00:04:45.159 --> 00:04:45.169 align:start position:0%
version of HDR plus with pixel visual
 

00:04:45.169 --> 00:04:47.230 align:start position:0%
version of HDR plus with pixel visual
core<00:04:45.470><c> Google's</c><00:04:46.190><c> first</c><00:04:46.400><c> costume</c><00:04:46.790><c> design</c>

00:04:47.230 --> 00:04:47.240 align:start position:0%
core Google's first costume design
 

00:04:47.240 --> 00:04:49.690 align:start position:0%
core Google's first costume design
coprocessor<00:04:47.990><c> for</c><00:04:48.230><c> consumer</c><00:04:48.560><c> products</c><00:04:49.040><c> note</c>

00:04:49.690 --> 00:04:49.700 align:start position:0%
coprocessor for consumer products note
 

00:04:49.700 --> 00:04:51.909 align:start position:0%
coprocessor for consumer products note
that<00:04:49.730><c> hdr+</c><00:04:50.510><c> will</c><00:04:50.780><c> only</c><00:04:50.990><c> be</c><00:04:51.200><c> enabled</c><00:04:51.410><c> for</c>

00:04:51.909 --> 00:04:51.919 align:start position:0%
that hdr+ will only be enabled for
 

00:04:51.919 --> 00:04:53.860 align:start position:0%
that hdr+ will only be enabled for
specific<00:04:52.490><c> camera</c><00:04:52.790><c> and</c><00:04:53.060><c> camera</c><00:04:53.389><c> to</c><00:04:53.540><c> API</c>

00:04:53.860 --> 00:04:53.870 align:start position:0%
specific camera and camera to API
 

00:04:53.870 --> 00:04:56.470 align:start position:0%
specific camera and camera to API
options<00:04:54.139><c> if</c><00:04:54.830><c> you</c><00:04:55.340><c> have</c><00:04:55.460><c> an</c><00:04:55.580><c> eligible</c><00:04:55.790><c> pixel</c><00:04:56.330><c> or</c>

00:04:56.470 --> 00:04:56.480 align:start position:0%
options if you have an eligible pixel or
 

00:04:56.480 --> 00:04:58.060 align:start position:0%
options if you have an eligible pixel or
Nexus<00:04:56.780><c> device</c><00:04:57.080><c> you</c><00:04:57.500><c> can</c><00:04:57.650><c> enroll</c><00:04:57.770><c> it</c><00:04:57.980><c> in</c>

00:04:58.060 --> 00:04:58.070 align:start position:0%
Nexus device you can enroll it in
 

00:04:58.070 --> 00:04:59.620 align:start position:0%
Nexus device you can enroll it in
Android<00:04:58.370><c> beta</c><00:04:58.580><c> to</c><00:04:58.820><c> get</c><00:04:58.940><c> the</c><00:04:59.060><c> latest</c><00:04:59.180><c> update</c>

00:04:59.620 --> 00:04:59.630 align:start position:0%
Android beta to get the latest update
 

00:04:59.630 --> 00:05:01.930 align:start position:0%
Android beta to get the latest update
but<00:05:00.020><c> we</c><00:05:00.110><c> also</c><00:05:00.290><c> have</c><00:05:00.620><c> Android</c><00:05:01.040><c> 8.1</c><00:05:01.460><c> emulator</c>

00:05:01.930 --> 00:05:01.940 align:start position:0%
but we also have Android 8.1 emulator
 

00:05:01.940 --> 00:05:03.909 align:start position:0%
but we also have Android 8.1 emulator
images<00:05:02.090><c> this</c><00:05:02.900><c> gives</c><00:05:03.140><c> you</c><00:05:03.200><c> the</c><00:05:03.290><c> opportunity</c><00:05:03.530><c> to</c>

00:05:03.909 --> 00:05:03.919 align:start position:0%
images this gives you the opportunity to
 

00:05:03.919 --> 00:05:05.440 align:start position:0%
images this gives you the opportunity to
fix<00:05:04.100><c> any</c><00:05:04.340><c> issues</c><00:05:04.520><c> that</c><00:05:04.820><c> update</c><00:05:05.180><c> your</c><00:05:05.330><c> app</c>

00:05:05.440 --> 00:05:05.450 align:start position:0%
fix any issues that update your app
 

00:05:05.450 --> 00:05:07.480 align:start position:0%
fix any issues that update your app
before<00:05:05.690><c> consumers</c><00:05:06.260><c> get</c><00:05:06.440><c> their</c><00:05:06.560><c> hands</c><00:05:06.770><c> on</c><00:05:06.950><c> 8.1</c>

00:05:07.480 --> 00:05:07.490 align:start position:0%
before consumers get their hands on 8.1
 

00:05:07.490 --> 00:05:09.490 align:start position:0%
before consumers get their hands on 8.1
you<00:05:08.150><c> can</c><00:05:08.300><c> find</c><00:05:08.480><c> out</c><00:05:08.600><c> more</c><00:05:08.780><c> about</c><00:05:08.840><c> everything</c>

00:05:09.490 --> 00:05:09.500 align:start position:0%
you can find out more about everything
 

00:05:09.500 --> 00:05:11.110 align:start position:0%
you can find out more about everything
we<00:05:09.590><c> covered</c><00:05:09.919><c> including</c><00:05:10.640><c> the</c><00:05:10.730><c> Developer</c>

00:05:11.110 --> 00:05:11.120 align:start position:0%
we covered including the Developer
 

00:05:11.120 --> 00:05:14.320 align:start position:0%
we covered including the Developer
Preview<00:05:11.300><c> program</c><00:05:11.810><c> here</c><00:05:12.140><c> happy</c><00:05:13.010><c> coding</c>

00:05:14.320 --> 00:05:14.330 align:start position:0%
Preview program here happy coding
 

00:05:14.330 --> 00:05:25.560 align:start position:0%
Preview program here happy coding
[Music]

