WEBVTT
Kind: captions
Language: en

00:00:00.610 --> 00:00:04.010
Sometimes a container on a pod
can be up and running but

00:00:04.010 --> 00:00:07.160
the application inside of
the container might be malfunctioning.

00:00:07.160 --> 00:00:08.780
For instance if your
code was deadlocked.

00:00:10.000 --> 00:00:12.930
Kubernetes has built in support to make
sure that your application is running

00:00:12.930 --> 00:00:16.149
correctly with user implemented
application health and readiness checks.

00:00:17.832 --> 00:00:21.200
Readiness probes indicate when
a pod is ready to serve traffic.

00:00:21.200 --> 00:00:24.850
If a readiness check fails then the
container will be marked as not ready

00:00:24.850 --> 00:00:26.755
and will be removed from
any load balancers.

00:00:27.815 --> 00:00:30.360
Liveness probes indicate
a container is alive.

00:00:30.360 --> 00:00:34.190
If aliveness probe fails multiple times,
then the container will be restarted.

00:00:35.260 --> 00:00:36.830
Let's see a visual example
of this in action.

00:00:38.000 --> 00:00:38.730
In our example,

00:00:38.730 --> 00:00:43.465
we have a pod with a container at B1 and
Kubernetes daemon called a Kubelet.

00:00:44.815 --> 00:00:47.595
Since the Kubelet is responsible for
making sure that a pod is healthy,

00:00:47.595 --> 00:00:49.051
it's going to perform the live check.

00:00:49.051 --> 00:00:53.095
Hey, app v1, you alive?

00:00:53.095 --> 00:00:54.985
In this example for whatever reason.

00:00:56.002 --> 00:01:00.352
Our container is dead and that's denoted
by the outline in the red color.

00:01:00.352 --> 00:01:02.232
So it's going to respond, nope.

00:01:03.572 --> 00:01:07.192
Since this is the case, the Kubelet
will restart our container and

00:01:07.192 --> 00:01:09.771
then it will perform
the check again as necessary.

00:01:10.811 --> 00:01:13.470
Hey, app v1.
You alive?

00:01:13.470 --> 00:01:15.654
And this time everything is good.

00:01:15.654 --> 00:01:17.271
App v1 will say, yeah.

00:01:18.561 --> 00:01:21.218
That was just a quick overview of
pod monitoring and health checking.

