WEBVTT
Kind: captions
Language: en

00:00:00.064 --> 00:00:02.344
Okay, let's turn to Stratton's fifth technique,

00:00:02.344 --> 00:00:06.311
which he refers to as binning or spatial data structures.

00:00:07.234 --> 00:00:09.419
So say you've got an algorithm where certain input elements

00:00:09.419 --> 00:00:11.891
will contribute to certain output elements.

00:00:11.891 --> 00:00:15.019
In technique 2, we talked about transforming this from a scatter operation,

00:00:15.019 --> 00:00:18.395
where you assign threads to the input elements to perform the computation,

00:00:18.395 --> 00:00:21.255
and then they figure out where to write,

00:00:21.455 --> 00:00:24.293
to a gather operation, where you assign threads the output elements,

00:00:24.293 --> 00:00:26.645
and they figure out where to go read from.

00:00:26.645 --> 00:00:30.471
Now sometimes it can be hard to orchestrate this gather operation, right?

00:00:30.471 --> 00:00:34.509
It can be hard to figure out which inputs matter for a given output.

00:00:34.509 --> 00:00:37.641
One thing you can always do is you could have every thread

00:00:37.641 --> 00:00:41.493
assigned to an output element, check every possible input element

00:00:41.493 --> 00:00:44.754
to see if this input element will contribute to this output element.

00:00:44.754 --> 00:00:48.588
But obviously, that's going to be ruinously expensive if you take it too far.

00:00:48.588 --> 00:00:51.858
So what we want to do is optimize away most of the redundant work

00:00:51.858 --> 00:00:55.391
that you would be doing if all of these threads were checking all of these inputs

00:00:55.391 --> 00:00:57.430
to see if they contribute.

00:00:57.430 --> 00:00:59.642
And we're going to call this binning.

00:00:59.642 --> 00:01:01.639
So binning is when you build a data structure

00:01:01.639 --> 00:01:05.042
that maps output locations to the relevant input data.

00:01:05.042 --> 00:01:09.410
And a point that I want to make is that this will work best

00:01:09.410 --> 00:01:14.312
when you're mapping output locations to a relatively small subset of the input data.

00:01:14.312 --> 00:01:17.683
Stratton and company called a creation of this data structure binning,

00:01:17.683 --> 00:01:21.296
because it often reflects a sorting of the input in to bins

00:01:21.296 --> 00:01:24.057
that contain often a region of space,

00:01:24.057 --> 00:01:27.288
representing a region of space containing those input elements that are relevant.

00:01:27.288 --> 00:01:30.000
So let's look at an example.

