WEBVTT
Kind: captions
Language: en

00:00:00.210 --> 00:00:04.720
One of the core aspects of the ARIA
system is its collection of roles.

00:00:04.720 --> 00:00:09.409
As we learned in lessons 3 and 4,
a role, an accessibility term,

00:00:09.409 --> 00:00:13.049
amounts to a shorthand for
a particular UI pattern.

00:00:13.049 --> 00:00:17.488
ARIA provides a vocabulary of patterns
we can use via the role attribute on

00:00:17.488 --> 00:00:19.510
any HTML element.

00:00:19.510 --> 00:00:22.959
When we applied role=checkbox in
the example earlier, we were telling

00:00:22.959 --> 00:00:27.270
assistive technology that the element
should follow the checkbox pattern.

00:00:27.270 --> 00:00:30.760
We're promising that it will have
a checked state, either checked or

00:00:30.760 --> 00:00:34.270
not checked, and that the state
may be toggled using the mouse or

00:00:34.270 --> 00:00:36.008
via the space bar.

00:00:36.008 --> 00:00:38.270
If we followed the advice
in earlier lessons,

00:00:38.270 --> 00:00:41.760
we've already kept part of that promise
by implementing keyboard behaviors.

00:00:41.760 --> 00:00:43.900
In fact, since the keyboard
interactions feature so

00:00:43.900 --> 00:00:48.770
prominently, it's very important to make
sure that when creating a custom widget,

00:00:48.770 --> 00:00:53.391
the role attribute is always applied in
the same place as the tabindex attribute

00:00:53.391 --> 00:00:57.750
so that keyboard events will go to the
right place and so that when page focus

00:00:57.750 --> 00:01:01.450
lands on an element,
its role is conveyed accurately.

00:01:01.450 --> 00:01:04.682
The ARIA spec describes
a taxonomy of possible values for

00:01:04.682 --> 00:01:09.127
the role attribute and associated ARIA
attributes which may legally be used in

00:01:09.127 --> 00:01:10.962
conjunction with those roles.

00:01:10.962 --> 00:01:14.404
This is the best source of truth when
it comes to understanding how the ARIA

00:01:14.404 --> 00:01:16.403
roles and
attributes all work together and

00:01:16.403 --> 00:01:20.090
may be used in a way that is supported
by browsers and assistive technologies.

00:01:21.430 --> 00:01:24.180
It's well worth browsing through the
list of roles linked from the instructor

00:01:24.180 --> 00:01:27.940
notes, since there's a finite vocabulary
of roles which can be used and

00:01:27.940 --> 00:01:31.170
each one has specific
semantic implications.

00:01:31.170 --> 00:01:32.399
Also, in this screenshot,

00:01:32.399 --> 00:01:34.920
we can see that certain roles
are designated as abstract.

00:01:36.090 --> 00:01:39.210
These capture certain properties which
may be common to several roles, but

00:01:39.210 --> 00:01:42.200
may not be used as values for
the role attribute.

00:01:42.200 --> 00:01:47.290
The ARIA spec also has a section on each
role, explaining its semantic meaning

00:01:47.290 --> 00:01:51.380
as well as any associated attributes
that may or may not be used with it.

00:01:51.380 --> 00:01:53.320
Let's walk through these sections.

00:01:53.320 --> 00:01:55.910
The top section gives you
the name of the role,

00:01:55.910 --> 00:01:58.520
a brief description of
its semantic meaning,

00:01:58.520 --> 00:02:02.390
as well as a brief description
of the related radiogroup role.

00:02:02.390 --> 00:02:05.420
Then, in the table,
we start off with a superclass role.

00:02:06.660 --> 00:02:10.509
The role's model includes a taxonomy of
roles, including some abstract roles,

00:02:10.509 --> 00:02:12.760
which capture groups of roles
with common properties but

00:02:12.760 --> 00:02:14.690
can't be used on their own.

00:02:14.690 --> 00:02:18.660
In this case, the superclass
rolls are option and checkbox.

00:02:18.660 --> 00:02:22.680
So radio button inherits
properties from both of those.

00:02:22.680 --> 00:02:24.930
We also have a related concept.

00:02:24.930 --> 00:02:28.680
This is just kind of a catch-all for
things that are semantically related.

00:02:28.680 --> 00:02:29.300
In this case,

00:02:29.300 --> 00:02:33.580
a radio input is related because it's
a common presentation of a radio button.

00:02:33.580 --> 00:02:37.380
These inherited states and properties
are all the properties which may or

00:02:37.380 --> 00:02:40.980
must be applied to this element
based on its superclass roles.

00:02:42.020 --> 00:02:45.540
Most of these will be optional
generic global attributes.

00:02:45.540 --> 00:02:47.740
But in this case, we see aria-checked,

00:02:47.740 --> 00:02:51.730
which is inherited from the checkbox
role, is a required attribute.

00:02:51.730 --> 00:02:54.915
So if we're going to create an ARIA
radio button we have to make sure

00:02:54.915 --> 00:02:57.290
aria-checked is set correctly.

00:02:57.290 --> 00:03:01.270
We have some information about
labels referred to as name here.

00:03:01.270 --> 00:03:05.680
Name From indicates whether the name may
be taken from the element's text content

00:03:05.680 --> 00:03:09.520
like a button element or needs to
be provided by some other mechanism

00:03:09.520 --> 00:03:12.250
like a native HTML radio input.

00:03:12.250 --> 00:03:16.040
Having contents as one of the options
here indicates that the element's text

00:03:16.040 --> 00:03:20.190
content if it has any will be
used as its accessible label.

00:03:20.190 --> 00:03:23.233
Author indicates that the author
must explicitly provide a name,

00:03:23.233 --> 00:03:25.365
which we'll cover a bit
later in this lesson.

00:03:25.365 --> 00:03:29.349
Accessible Name Required obviously
indicates you've got to specify some

00:03:29.349 --> 00:03:31.630
type of name for this role.

00:03:31.630 --> 00:03:33.604
This is usually but not always true.

00:03:33.604 --> 00:03:36.598
For example, the main role indicates
the main region of a page,

00:03:36.598 --> 00:03:38.770
which requires no
explanation in most cases.

00:03:40.320 --> 00:03:44.578
And finally, the implicit value note
here indicates that the default value

00:03:44.578 --> 00:03:46.260
for aria-checked is false.

00:03:46.260 --> 00:03:48.830
This means that if we omit
the aria-checked attribute,

00:03:48.830 --> 00:03:52.570
the radio button will be
represented as being unselected.

00:03:52.570 --> 00:03:55.190
It's definitely worth learning
to navigate the ARIA spec

00:03:55.190 --> 00:03:58.710
to find out about the specifics of
ARIA roles, states, and properties.

00:03:58.710 --> 00:04:02.640
But if you can find a specific pattern
you want in the ARIA practices guide,

00:04:02.640 --> 00:04:05.390
then that gives you all the information
you need to implement the widget

00:04:05.390 --> 00:04:06.820
in one place.

00:04:06.820 --> 00:04:08.509
It also links back to the ARIA spec for

00:04:08.509 --> 00:04:11.890
information on all of the ARIA
attributes I've mentioned.

00:04:11.890 --> 00:04:14.620
Earlier we saw the 1.0
version of this document.

00:04:14.620 --> 00:04:17.790
This is the 1.1 version,
which at the time I'm recording this,

00:04:17.790 --> 00:04:18.779
is a working draft.

00:04:19.790 --> 00:04:23.320
I'm working off this version in this
lesson since it's more up to date and

00:04:23.320 --> 00:04:25.710
will eventually become
the standard version.

00:04:25.710 --> 00:04:27.580
This is the design pattern
we already saw for

00:04:27.580 --> 00:04:31.090
a radio group, which gives us
the keyboard interaction and

00:04:31.090 --> 00:04:35.740
also some more detailed advice on the
ARIA attributes which should be used.

00:04:35.740 --> 00:04:39.540
The design pattern tells us that we need
to put our radio buttons in a container

00:04:39.540 --> 00:04:44.490
element with a role of radiogroup,
give each one a role of radio, and

00:04:44.490 --> 00:04:47.100
ensure that we set
aria-checked correctly.

00:04:47.100 --> 00:04:48.020
So let's try that out.

