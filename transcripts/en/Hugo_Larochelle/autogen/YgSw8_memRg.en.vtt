WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.060
 in this capsule we will see how we 

00:00:01.800 --> 00:00:04.710
 can solve a problem of 

00:00:03.060 --> 00:00:10.110
 satisfaction constraint with the 

00:00:04.710 --> 00:00:13.410
 research the cable so we saw in 

00:00:10.110 --> 00:00:15.509
 local search that these are types 

00:00:13.410 --> 00:00:16.859
 algorithms that are appropriate 

00:00:15.509 --> 00:00:20.340
 when we want to solve our problems and 

00:00:16.859 --> 00:00:22.740
 that the path between the initial state 

00:00:20.340 --> 00:00:24.060
 then the final solution and not really 

00:00:22.740 --> 00:00:26.130
 important that all that interests us 

00:00:24.060 --> 00:00:28.650
 in fact to find it's and ultimately who 

00:00:26.130 --> 00:00:31.619
 is that satisfied that corresponds to a 

00:00:28.650 --> 00:00:33.329
 solution to our problem is actually a 

00:00:31.619 --> 00:00:34.680
 satisfaction problem against it is 

00:00:33.329 --> 00:00:36.750
 like that is to say that all that 

00:00:34.680 --> 00:00:38.969
 we are interested is the final assignment 

00:00:36.750 --> 00:00:40.530
 of all the variables that corresponds to 

00:00:38.969 --> 00:00:41.480
 an assignment therefore complete and 

00:00:40.530 --> 00:00:44.309
 competitive 

00:00:41.480 --> 00:00:46.739
 so it turns out that as we go the 

00:00:44.309 --> 00:00:48.329
 see that we can solve a problem of 

00:00:46.739 --> 00:00:53.180
 constraint satisfaction with a 

00:00:48.329 --> 00:00:59.840
 local search algorithm like 

00:00:53.180 --> 00:01:01.770
 bing or simulate denis line a site 8 

00:00:59.840 --> 00:01:05.390
 any search box 

00:01:01.770 --> 00:01:07.710
 local we saw the previous capsules 

00:01:05.390 --> 00:01:09.840
 and in this case also what we actually 

00:01:07.710 --> 00:01:11.490
 is that we are told in our 

00:01:09.840 --> 00:01:13.350
 search would match an assignment 

00:01:11.490 --> 00:01:14.189
 which is complete but not necessarily 

00:01:13.350 --> 00:01:16.470
 compatible 

00:01:14.189 --> 00:01:19.530
 and then what we could do is 

00:01:16.470 --> 00:01:21.360
 make local transitions on 

00:01:19.530 --> 00:01:23.850
 would change the assignments in our 

00:01:21.360 --> 00:01:26.759
 assignment complete so as to 

00:01:23.850 --> 00:01:27.990
 minimize the number of conflicts like 

00:01:26.759 --> 00:01:29.310
 besides we saw that not tell me is 

00:01:27.990 --> 00:01:31.409
 real name could use from the 

00:01:29.310 --> 00:01:32.909
 local search for to solve it 

00:01:31.409 --> 00:01:34.290
 so any point of 

00:01:32.909 --> 00:01:35.759
 satisfaction constraints way 

00:01:34.290 --> 00:01:36.650
 similar to solve them with the 

00:01:35.759 --> 00:01:38.880
 local search 

00:01:36.650 --> 00:01:42.299
 the problem is that research 

00:01:38.880 --> 00:01:43.860
 local can fall into optimal 

00:01:42.299 --> 00:01:45.810
 local so what does that mean 

00:01:43.860 --> 00:01:48.030
 is that we are not guaranteed 

00:01:45.810 --> 00:01:50.880
 find the solution that provides 

00:01:48.030 --> 00:01:53.820
 no conflict therefore to satisfy all 

00:01:50.880 --> 00:01:56.189
 our countries but it turns out that between 

00:01:53.820 --> 00:01:58.200
 others for the problem of would like the 

00:01:56.189 --> 00:01:59.909
 search keeps it calm works the 

00:01:58.200 --> 00:02:02.340
 market particularly well and find 

00:01:59.909 --> 00:02:03.719
 the exact solution to our problem is 

00:02:02.340 --> 00:02:05.450
 among others, the sentry box that we will see 

00:02:03.719 --> 00:02:08.250
 which is the algorithm in conflict 

00:02:05.450 --> 00:02:10.289
 works surprisingly well so 

00:02:08.250 --> 00:02:11.980
 because if our objectives function 

00:02:10.289 --> 00:02:14.200
 we will try to 

00:02:11.980 --> 00:02:16.290
 bet that's going to be the number of conflicts 

00:02:14.200 --> 00:02:20.470
 so the number of constraints that are 

00:02:16.290 --> 00:02:22.629
 not satisfied by our assignment and 

00:02:20.470 --> 00:02:25.330
 the transitions that we will do is 

00:02:22.629 --> 00:02:28.060
 changes to the assignment of a 

00:02:25.330 --> 00:02:29.970
 variable we will change the destination 

00:02:28.060 --> 00:02:32.379
 from one variable to another in order to 

00:02:29.970 --> 00:02:34.930
 to minimize more and more the number of 

00:02:32.379 --> 00:02:36.730
 conflicts until and hopefully 

00:02:34.930 --> 00:02:39.819
 arrive at an assignment with zero 

00:02:36.730 --> 00:02:41.920
 so entrusts the algorithm in complicated goes 

00:02:39.819 --> 00:02:43.930
 as we will see gathered from the nile 

00:02:41.920 --> 00:02:46.620
 like bing but with an appearance 

00:02:43.930 --> 00:02:46.620
 stochastic 

00:02:46.650 --> 00:02:51.700
 here is the office kde I had to be a 

00:02:50.230 --> 00:02:53.200
 simple game without means on the water the 

00:02:51.700 --> 00:02:56.109
 little local to see him well understand 

00:02:53.200 --> 00:02:58.420
 what is the sentry box so we 

00:02:56.109 --> 00:03:00.180
 starts with a state that is a 

00:02:58.420 --> 00:03:04.810
 assignment that is going to be an assignment 

00:03:00.180 --> 00:03:07.480
 random and complete so random that 

00:03:04.810 --> 00:03:09.819
 means that she will probably not 

00:03:07.480 --> 00:03:11.260
 therefore compatible purely 

00:03:09.819 --> 00:03:12.609
 random take each of the variables 

00:03:11.260 --> 00:03:14.290
 of our problem to assign them to you 

00:03:12.609 --> 00:03:16.419
 at one of their possible value little 

00:03:14.290 --> 00:03:18.220
 matter if it generates conflicts or 

00:03:16.419 --> 00:03:20.319
 not alas for a number 

00:03:18.220 --> 00:03:25.269
 iterations or number of iterations vote 

00:03:20.319 --> 00:03:28.049
 is specified a parameter of my 

00:03:25.269 --> 00:03:30.489
 in conflict function of my algorithms 

00:03:28.049 --> 00:03:32.769
 at each iteration what I do I 

00:03:30.489 --> 00:03:34.180
 turn my assignment is compatible 

00:03:32.769 --> 00:03:35.919
 if this is the case because we are working 

00:03:34.180 --> 00:03:37.359
 always with full assignments 

00:03:35.919 --> 00:03:38.760
 we found a solution they can 

00:03:37.359 --> 00:03:42.579
 return the assignment 

00:03:38.760 --> 00:03:45.130
 and if it's not like we're going to continue 

00:03:42.579 --> 00:03:48.190
 will choose a variable x which we will 

00:03:45.130 --> 00:03:49.660
 change the assignment is actually that 

00:03:48.190 --> 00:03:52.329
 will do what this variable is going there 

00:03:49.660 --> 00:03:53.980
 choose randomly from all 

00:03:52.329 --> 00:03:57.190
 possible variables for my problem of 

00:03:53.980 --> 00:04:00.310
 constraint satisfaction then of that 

00:03:57.190 --> 00:04:03.099
 we will choose a value from 

00:04:00.310 --> 00:04:04.810
 domain values ​​of my chosen variable 

00:04:03.099 --> 00:04:06.459
 is the value we will choose is 

00:04:04.810 --> 00:04:08.949
 the one that satisfies the most 

00:04:06.459 --> 00:04:12.040
 constraints in which is involved 

00:04:08.949 --> 00:04:14.260
 x so we change the value we want 

00:04:12.040 --> 00:04:16.150
 change the value of my variable x for 

00:04:14.260 --> 00:04:18.370
 a small empty value that is such 

00:04:16.150 --> 00:04:21.940
 we will have the least amount of conflict 

00:04:18.370 --> 00:04:24.130
 possible and what we do is we 

00:04:21.940 --> 00:04:26.650
 change assignment 1 

00:04:24.130 --> 00:04:28.840
 a change the value that was signed 

00:04:26.650 --> 00:04:31.300
 x for this to be the value but we 

00:04:28.840 --> 00:04:31.780
 found one that satisfies the most 

00:04:31.300 --> 00:04:33.670
 constraints 

00:04:31.780 --> 00:04:36.480
 so there was the slightest conflict and 

00:04:33.670 --> 00:04:39.010
 unitary like this many times 

00:04:36.480 --> 00:04:41.290
 until we hope to find a 

00:04:39.010 --> 00:04:42.870
 assignment that she votes is compatible 

00:04:41.290 --> 00:04:45.250
 we will be able to return 

00:04:42.870 --> 00:04:46.480
 otherwise we'll stop have come out of the 

00:04:45.250 --> 00:04:47.920
 mouth then we will return once we 

00:04:46.480 --> 00:04:51.250
 feel we are failing we have not managed to 

00:04:47.920 --> 00:04:52.210
 satisfy all so understands what 

00:04:51.250 --> 00:04:54.280
 is the gorilla that is very very 

00:04:52.210 --> 00:04:56.560
 simple and surprisingly a 

00:04:54.280 --> 00:04:57.820
 problem with a million reindeers this is 

00:04:56.560 --> 00:05:01.450
 possible to solve it 

00:04:57.820 --> 00:05:02.320
 about 50 steps and so that can 

00:05:01.450 --> 00:05:05.110
 look surprising 

00:05:02.320 --> 00:05:07.170
 the reason for the success of the research the 

00:05:05.110 --> 00:05:10.420
 case the algorithm inc in cop sedan 

00:05:07.170 --> 00:05:12.010
 problem as big as that is when 

00:05:10.420 --> 00:05:14.080
 you are the problem of a million reign 

00:05:12.010 --> 00:05:15.550
 of a general drainer he does not exist 

00:05:14.080 --> 00:05:16.570
 only one solution but there is 

00:05:15.550 --> 00:05:19.170
 exist several 

00:05:16.570 --> 00:05:21.460
 and these solutions are only offered 

00:05:19.170 --> 00:05:22.720
 intuitively scattered everywhere 

00:05:21.460 --> 00:05:25.030
 in the space that makes it 

00:05:22.720 --> 00:05:28.270
 possible difficult whether it is to fall 

00:05:25.030 --> 00:05:30.520
 almost by chance on his solutions there 

00:05:28.270 --> 00:05:32.020
 and so by what really exists 

00:05:30.520 --> 00:05:34.090
 a lot of solutions that's going to be 

00:05:32.020 --> 00:05:36.900
 possible same problem with miller to a 

00:05:34.090 --> 00:05:39.790
 million reign to find the solution 

00:05:36.900 --> 00:05:42.640
 is actually this algorithm years they have 

00:05:39.790 --> 00:05:45.670
 been used previously to make the 

00:05:42.640 --> 00:05:48.460
 observation schedules for the robot 

00:05:45.670 --> 00:05:49.720
 space telescope and the great they 

00:05:48.460 --> 00:05:52.090
 used before could take three 

00:05:49.720 --> 00:05:53.560
 weeks to make a six o'clock water 

00:05:52.090 --> 00:05:55.630
 while with the mincom cops are 

00:05:53.560 --> 00:05:56.950
 have come to solve this problem of 

00:05:55.630 --> 00:05:58.540
 satisfaction of constraints to find 

00:05:56.950 --> 00:06:02.820
 a schedule this holiday unconstrained 

00:05:58.540 --> 00:06:02.820
 of use in just 10 minutes 

