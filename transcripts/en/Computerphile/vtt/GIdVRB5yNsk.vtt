WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:02.020
We've seen an enormous boom [in]

00:00:02.020 --> 00:00:06.810
The use of Cloud services because I can I order my processor cycles [on-demand]

00:00:07.120 --> 00:00:13.920
And virtualization is between the core technology. That's underpinned. You know this enormous change in the way in which we go about doing business

00:00:16.539 --> 00:00:20.159
Actually as a technology. It's quite old first emerged in the

00:00:20.859 --> 00:00:24.779
1970s I would say many of the original computer companies produced

00:00:24.880 --> 00:00:32.160
different computers that had different operating systems for different purposes they had one for accountancy and they had one for scientific computation and

00:00:33.130 --> 00:00:37.499
Ibm when it started pushing the IBm 360 which was a complete breakthrough in computer architecture?

00:00:37.989 --> 00:00:44.968
They realized they were losing businesses from other sectors because they couldn't run some of the operating systems that they wanted

00:00:45.129 --> 00:00:50.879
So they invented the idea of running a virtual machine a virtual computer on top of the physical computer

00:00:51.399 --> 00:00:57.089
And realized rapidly that you could actually run multiple virtual machines at the same time so it's an old idea

00:00:57.190 --> 00:01:01.649
[there's] been quite a enormous growth recently in the use of virtual machine technology

00:01:01.719 --> 00:01:08.338
then you know cloud computing infrastructures as well as being able to desktop in order to run virtualization on

00:01:08.860 --> 00:01:15.839
Earlier versions of the X86 family or everyday PC platforms you need some software let's start with

00:01:16.150 --> 00:01:20.669
Vmware this came out of a bunch of very smart people at Stanford who?

00:01:21.189 --> 00:01:23.189
realized how to perform

00:01:23.470 --> 00:01:24.490
software

00:01:24.490 --> 00:01:31.229
emulation of virtual machines in simplest terms we often have two different levels of

00:01:31.869 --> 00:01:33.040
privilege

00:01:33.040 --> 00:01:36.239
To run software [on] computers we run an operating system

00:01:36.250 --> 00:01:38.279
and then we run our

00:01:38.619 --> 00:01:41.099
applications and the operating system can use

00:01:41.290 --> 00:01:48.449
Instructions and access memory and do things that the applications can't and that's to avoid the applications either maliciously or accidentally

00:01:48.579 --> 00:01:54.719
crashing the machine and of course the operating system can but it's presumed a lot more energy goes into making sure that works and

00:01:55.180 --> 00:02:00.479
you don't want every time your application crashes, especially when you're developing it that it takes out the [whole] machine and

00:02:02.259 --> 00:02:05.309
These are often in all sorts of different computer processors

00:02:06.369 --> 00:02:10.969
There's a hardware mechanism [implements]. This is sometimes called the Kernel [mode] or

00:02:12.330 --> 00:02:14.010
Supervisor mode

00:02:14.010 --> 00:02:17.510
in the case of the sort of the intel family of processors

00:02:18.270 --> 00:02:24.949
It's called ring zero this is ring three at this point. You may ask where a ring one and two they are present

00:02:25.590 --> 00:02:31.369
But they're not commonly used by most everyday operating systems, but just think of it as the two [privileged] levels

00:02:31.370 --> 00:02:34.519
So we have this picture and say we want to run multiple virtual machines

00:02:34.590 --> 00:02:40.009
[with] operating systems [clearing] charges and being zero in terms of the privileged mode so what we try to do

00:02:40.010 --> 00:02:43.519
[we'll] try to run an operating system in the usual context and then we'll run

00:02:44.459 --> 00:02:47.389
Applications on top of that so how do we do this because this operating system?

00:02:47.940 --> 00:02:53.179
Running up here in user mode it will try to issue instructions and access things that will

00:02:54.269 --> 00:02:55.280
cause a fault

00:02:55.280 --> 00:02:55.880
[I] mean well

00:02:55.880 --> 00:03:01.099
You know that's not the application not permitted to do that and of course the trick is this tries to do things that are illegal

00:03:01.099 --> 00:03:01.819
And what we do is

00:03:01.819 --> 00:03:07.249
We make sure it comes into a piece of the operating system has been pressed there to provide virtual machine support and whenever it does

00:03:07.250 --> 00:03:12.979
Something that only an operating system can it looks at what I was trying to do and then causes that effect to happen

00:03:13.650 --> 00:03:16.130
by emulating the instruction now I

00:03:17.160 --> 00:03:23.719
On many processors. They are essentially designed to be easy to be virtualized able. So they have a very simple

00:03:24.359 --> 00:03:27.019
Instruction set where it's very easy to decode. What's happening?

00:03:27.569 --> 00:03:30.649
The X86 instruction set is not one of those processors

00:03:30.650 --> 00:03:35.929
It's rather gnarly processor in terms of destruction set it's often quite difficult and sometimes

00:03:36.389 --> 00:03:38.539
Ambiguous as to what I was trying to achieve

00:03:38.549 --> 00:03:44.388
And so it was an intellectual marvel from people knowledge to figure this one out one other

00:03:44.730 --> 00:03:49.130
Slightly given architecture that worth looking at is the xen virtual machine monitor

00:03:49.130 --> 00:03:56.029
Which is an open source one and very popular it underpins for example a vast majority [of] open source

00:03:56.519 --> 00:04:00.048
cloud service provision today including it runs at the core of Amazon's

00:04:00.600 --> 00:04:03.350
compute service then took a slightly different approach

00:04:04.139 --> 00:04:08.449
Which was similar in a sense, but it had a very small?

00:04:09.030 --> 00:04:14.209
Hypervisor is [it] like a supervisor that better correct, so you know the terminology?

00:04:14.280 --> 00:04:18.799
It's quite old it comes from operating systems often used to be called supervisors

00:04:18.799 --> 00:04:22.999
And then when someone said we have something it's you know that can run multiple supervisors

00:04:23.190 --> 00:04:27.769
Then what shall we call it hypervisor was what's the word was coined again?

00:04:27.810 --> 00:04:33.410
we are talking 1970s here this ran in ring [0] it's a very much smaller piece of code and

00:04:34.020 --> 00:04:37.130
there's one privileged domain domain 0

00:04:38.340 --> 00:04:39.840
Which actually?

00:04:39.840 --> 00:04:41.840
has the operating system and

00:04:42.150 --> 00:04:43.260
accesses and

00:04:43.260 --> 00:04:49.519
all the physical devices so in a very important function of an operating system is to [access] disk drives and these and Ed interfaces and

00:04:49.520 --> 00:04:55.579
Graphics cards and now our guest operating system as we call it the thing that's being hosted it then

00:04:55.980 --> 00:05:02.209
Traps into the operating system, [so] it traps across into domain 0 it's a slightly different. It's not in the operating system

00:05:02.210 --> 00:05:03.860
It's actually a thin layer

00:05:03.860 --> 00:05:10.610
But it achieves the same effect it emulates what that process was trying to achieve [now] of course the software emulation of this is

00:05:11.340 --> 00:05:13.519
The performance is not that great

00:05:13.520 --> 00:05:19.700
[I] mean you're talking about having to execute what previously was one instruction could take many thousands of instructions

00:05:19.980 --> 00:05:22.819
You're also talking about. What's called a protection switch

00:05:22.820 --> 00:05:28.820
Where you switch from one domain of protection to another that has a cost in terms of just a number of processor cycles?

00:05:28.820 --> 00:05:32.899
So that's where we were say 10 15 years ago. It didn't take long before

00:05:33.479 --> 00:05:35.479
Intel realized maybe they should add

00:05:35.970 --> 00:05:37.970
virtualization support and

00:05:38.010 --> 00:05:40.010
Vt. Technology as [it's] referred to

00:05:40.979 --> 00:05:47.029
Was developed and released into you know it's of nearly all intel processors now

00:05:47.030 --> 00:05:52.369
I have a virtualization support and so rather than having to emulate a lot of this in software

00:05:52.919 --> 00:05:59.809
Rather the software constructs a series of tables that the hardware can access and just make the decision about was trying to be cheap

00:06:00.120 --> 00:06:06.049
So today what this means is that we have virtual machines and running in these virtual machines

00:06:06.630 --> 00:06:08.630
We can have lots of different operating systems

00:06:09.660 --> 00:06:11.660
[that] can be the same operating system

00:06:12.479 --> 00:06:17.269
They can be variants they could be windows they could be linux may be different variants of Linux

00:06:18.210 --> 00:06:23.690
Very importantly for the commercial sector was the [ability] to run legacy operating systems like windows

00:06:24.360 --> 00:06:29.750
Nt for all of the new hardware all the Fancy new Graphics cards everything

00:06:30.850 --> 00:06:34.619
H&amp;N interfaces district all the new bits of Hardware of Course Windows, NT

00:06:34.620 --> 00:06:37.679
4 hasn't had any software updates for a long time [account] use them

00:06:37.840 --> 00:06:44.190
So it has to use them in a backwards compatibility mode so actually by running. Nt. 4 inside a virtual machine

00:06:45.250 --> 00:06:49.410
You can get you know the sort of performance advantages of Modern Hardware

00:06:49.690 --> 00:06:56.039
Even though that operating system doesn't support him I remember nt. 4 from say 15 [years] ago. Who's still using Nt

00:06:56.039 --> 00:06:58.289
4 there'll be a lot of people want to do more well

00:06:58.289 --> 00:07:02.939
There's still people using Ls. 2 if you go back pubs and that the fact is probably some people using nt 3.51

00:07:03.759 --> 00:07:06.059
the reason is it's sort of a

00:07:07.419 --> 00:07:09.419
Terrible secret of the Software industry

00:07:10.960 --> 00:07:12.960
we refer to

00:07:14.110 --> 00:07:17.550
unloved and uncared for a code as dusty dex

00:07:17.889 --> 00:07:22.258
so the phrase dusty dac it used to refer to an unloved and uncared for a stack of

00:07:22.389 --> 00:07:26.848
Punched cards that have Gathered dust and you then no need to rerun this software

00:07:27.250 --> 00:07:34.229
Quickly a problem if you have bought software in that's proprietary the company's gone the bust and no one's looking after it

00:07:34.229 --> 00:07:36.749
There's no support and your business depends on it

00:07:36.750 --> 00:07:42.299
There's a fair chunk of a financial services sector continuing to run very old legacy codes in fact

00:07:42.300 --> 00:07:48.780
They're still running some of them are still running code on mainframes because they can't move it on to modern processors

00:07:48.780 --> 00:07:54.419
They enabled people to get the performance Advantages, but also deal with the fact [that] hardware [fails] over time

00:07:54.419 --> 00:07:57.899
But there's a lot of people to migrate on to new hardware upgrade, but also

00:07:58.419 --> 00:08:04.079
My if this didn't need much performance, and you've got this you know enormous 64 core process

00:08:04.080 --> 00:08:08.310
And I hang the tank in a way you can just give one processor [to] that operating system

00:08:08.349 --> 00:08:14.369
And you can use the other processors for other Roblin systems in a multi-core processor where there are multiple

00:08:14.710 --> 00:08:21.239
Processing elements all of these operating systems are actually running at the same time in one of the sad truths is that we haven't yet

00:08:21.370 --> 00:08:24.030
Become very good at writing [applications]

00:08:24.030 --> 00:08:27.479
Which are which can truly use a large number of processors although?

00:08:27.479 --> 00:08:32.129
They use things called threads they tend to really be sequential in their behavior

00:08:32.370 --> 00:08:35.820
Mostly sequential and so they can only really make use of one or maybe two

00:08:36.130 --> 00:08:42.239
Processors, and of course in cloud computing [I] can sell those small virtual machines to different customers

00:08:42.880 --> 00:08:46.260
So not as a custom in art I can rent a machine of whatever size

00:08:46.260 --> 00:08:50.609
I need one core two cores [four] cores [two] gigabytes of memory four gigabyTes and

00:08:50.740 --> 00:08:53.099
The configuration of that is all done by software

00:08:53.100 --> 00:08:56.580
[I] didn't have to buy a particular hardware configuration

00:08:56.830 --> 00:09:03.479
so if you look at the cloud service providers today the way in which I can provision a new server and applied in a

00:09:03.730 --> 00:09:10.890
Minute is because their provisioning me a virtual machine, and it's all under software control and they just create the virtual machine on-demand

00:09:11.529 --> 00:09:17.219
And find a spare process or somewhere and run it and hand me [back] the details to allow me to access it

00:09:20.750 --> 00:09:22.750
The mathematics as far as we know is okay

00:09:23.069 --> 00:09:27.649
So is this a bit like I've got 17 locks on my front door, but he's throwing in the window

00:09:27.649 --> 00:09:28.100
Yeah

00:09:28.100 --> 00:09:32.509
[so] you go in the window or you pull the wall down you can find other ways in you can always find other ways it

