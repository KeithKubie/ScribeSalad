WEBVTT
Kind: captions
Language: en

00:00:01.067 --> 00:00:03.200
Schroepfer: Hi, folks.
Hey, up here.

00:00:03.200 --> 00:00:04.968
You guys over here,
if you want to see the panel,

00:00:04.968 --> 00:00:06.634
you can move down this way.

00:00:06.634 --> 00:00:08.567
Otherwise, enjoy your laptops
on that side.

00:00:08.567 --> 00:00:10.467
Welcome to the Browser
Perspective panels.

00:00:10.467 --> 00:00:11.734
I'm Mike Schroepfer.

00:00:11.734 --> 00:00:13.667
I am your moderator
for today.

00:00:13.667 --> 00:00:15.400
We've got three
great panelists here

00:00:15.400 --> 00:00:17.701
representing a variety
of viewpoints

00:00:17.701 --> 00:00:19.467
on where browsers are going.

00:00:19.467 --> 00:00:21.501
We've got Charles,
who's been working on standards

00:00:21.501 --> 00:00:22.767
for about ten years.

00:00:22.767 --> 00:00:24.434
For the last four years
he's been working

00:00:24.434 --> 00:00:26.267
with Opera software.

00:00:26.267 --> 00:00:27.767
Part of the W3C.

00:00:27.767 --> 00:00:29.434
Part of many of the emerging
web standards.

00:00:29.434 --> 00:00:31.200
Let's welcome Charles
to the panel.

00:00:31.200 --> 00:00:33.834
Yay.
[applause]

00:00:33.834 --> 00:00:35.634
Boo?
Charles: [laughter]

00:00:35.634 --> 00:00:36.701
Schroepfer:
Save that for later.

00:00:36.701 --> 00:00:38.367
Next to Charles
we have Jonas.

00:00:38.367 --> 00:00:40.968
Jonas has also been working
for for browser technologies

00:00:40.968 --> 00:00:42.434
for about ten years,

00:00:42.434 --> 00:00:44.334
first as a Mozilla
community member,

00:00:44.334 --> 00:00:46.133
and now as a--
the last several years

00:00:46.133 --> 00:00:48.400
as a full-time
Mozilla developer.

00:00:48.400 --> 00:00:49.767
Been concentrating
in the DOM,

00:00:49.767 --> 00:00:52.767
and also a participant
in many W3C working groups.

00:00:52.767 --> 00:00:57.534
Welcome, Jonas.
[applause]

00:00:57.534 --> 00:01:00.467
And Ian is a product manager
on Google Chrome.

00:01:00.467 --> 00:01:02.534
He's been with the team
since 2007.

00:01:02.534 --> 00:01:05.100
He works on core infrastructure,
security,

00:01:05.100 --> 00:01:07.701
and focuses a lot of his time
on HTML 5

00:01:07.701 --> 00:01:09.000
and emerging web standards,

00:01:09.000 --> 00:01:10.601
and has been
an active participant, again,

00:01:10.601 --> 00:01:12.868
in the web standards
working group.

00:01:12.868 --> 00:01:14.467
So welcome to our panel, Ian.

00:01:14.467 --> 00:01:17.934
[applause]

00:01:17.934 --> 00:01:18.934
All right,
so I'd like to kick it off

00:01:18.934 --> 00:01:20.334
with a couple of questions,

00:01:20.334 --> 00:01:22.601
and then we'll definitely
open it up to the audience

00:01:22.601 --> 00:01:24.767
to see what things
you are curious about.

00:01:24.767 --> 00:01:26.200
Start with you, Charles.

00:01:26.200 --> 00:01:28.234
I'm curious as to
what you think

00:01:28.234 --> 00:01:30.734
the most promising emerging
standard is on the market,

00:01:30.734 --> 00:01:32.234
and why you're excited
by it.

00:01:32.234 --> 00:01:34.033
Charles: Uh,
that's a tough question.

00:01:34.033 --> 00:01:37.033
I think one of the things
that I'm really excited by--

00:01:37.033 --> 00:01:40.934
Doug wants me to say SVG,
which is what I was gonna say.

00:01:40.934 --> 00:01:43.000
But I think that's
pretty much emerged,

00:01:43.000 --> 00:01:45.567
and, you know,
it's out of the closet.

00:01:45.567 --> 00:01:48.667
The access to device
information--

00:01:48.667 --> 00:01:52.334
the location, the camera,
the SMS,

00:01:52.334 --> 00:01:54.467
the address book stuff.

00:01:54.467 --> 00:01:57.200
And the reason I'm really,
really excited about it is

00:01:57.200 --> 00:01:59.734
because it makes us
get security right.

00:01:59.734 --> 00:02:02.267
So like, if you start
telling the web

00:02:02.267 --> 00:02:05.934
where people are
and who they talk to

00:02:05.934 --> 00:02:07.667
and what their device does,

00:02:07.667 --> 00:02:09.801
you've gotta
get security right

00:02:09.801 --> 00:02:12.100
in a way that we've
never really done before.

00:02:12.100 --> 00:02:15.400
And doing that means
we can really go out

00:02:15.400 --> 00:02:18.534
and make cool things
and let 'em run.

00:02:18.534 --> 00:02:20.501
So I think that's probably
one of the most exciting things

00:02:20.501 --> 00:02:22.834
happening right now.

00:02:22.834 --> 00:02:25.167
Schroepfer: So, Jonas,
if you could make

00:02:25.167 --> 00:02:28.000
every other browser vendor
implement one standard today,

00:02:28.000 --> 00:02:30.767
what standard would that be?

00:02:30.767 --> 00:02:34.767
Jonas: Uh, I would probably say
one of the things

00:02:34.767 --> 00:02:37.868
I would really like to see
is OGG support

00:02:37.868 --> 00:02:40.067
for the video tag.

00:02:40.067 --> 00:02:42.501
Having free video
on the web is--

00:02:42.501 --> 00:02:44.133
[applause]

00:02:44.133 --> 00:02:46.100
It's very, very important.

00:02:46.100 --> 00:02:49.901
And it's also a standard where
we don't yet have--

00:02:49.901 --> 00:02:51.868
Everyone is behind
the video tag,

00:02:51.868 --> 00:02:53.367
and that's very good.

00:02:53.367 --> 00:02:57.167
Making it easier for people
to put video on the web

00:02:57.167 --> 00:03:00.234
without relying on things
like Vimeo or YouTube

00:03:00.234 --> 00:03:02.467
is really good.

00:03:02.467 --> 00:03:04.234
But also having it--

00:03:04.234 --> 00:03:06.601
allowing people to do it
for free is very important.

00:03:06.601 --> 00:03:10.367
With standards like H.264,
for example,

00:03:10.367 --> 00:03:12.934
there's a big risk that everyone
that puts video on the web

00:03:12.934 --> 00:03:14.801
is gonna have to pay money.

00:03:14.801 --> 00:03:17.434
And at Mozilla,
we have really worked for

00:03:17.434 --> 00:03:20.534
making it easy and cheap
to put stuff on the web.

00:03:20.534 --> 00:03:22.100
So...

00:03:22.100 --> 00:03:23.234
Schroepfer: Okay.

00:03:23.234 --> 00:03:24.934
So, Ian, bringing this to you,

00:03:24.934 --> 00:03:26.601
if you could uninvent
a standard

00:03:26.601 --> 00:03:28.000
that's in existence today,

00:03:28.000 --> 00:03:30.400
which standard would you
uninvent?

00:03:30.400 --> 00:03:33.133
Ian: So I think if I could
uninvent a standard,

00:03:33.133 --> 00:03:36.868
what I would uninvent is
things that are sort of

00:03:36.868 --> 00:03:39.734
de facto standards,
but not actual standards.

00:03:39.734 --> 00:03:41.400
There's a lot of these things
out there

00:03:41.400 --> 00:03:44.667
that cause problems for us
sort of alternative browsers,

00:03:44.667 --> 00:03:46.400
if you will.

00:03:46.400 --> 00:03:48.400
One great example of this
is ActiveX.

00:03:48.400 --> 00:03:50.267
You know, it's not
an actual standard

00:03:50.267 --> 00:03:52.467
that we all sat down
and agreed upon.

00:03:52.467 --> 00:03:53.934
But yet, a lot of people,

00:03:53.934 --> 00:03:56.467
especially in the Asian
regions--

00:03:56.467 --> 00:03:58.634
Like, if you're looking at
e-banking in Korea,

00:03:58.634 --> 00:04:00.100
Japan, China,

00:04:00.100 --> 00:04:01.968
they're all using
ActiveX controls,

00:04:01.968 --> 00:04:04.534
which isn't something that
we can support on Mac and Linux.

00:04:04.534 --> 00:04:07.067
It's not something that,
you know,

00:04:07.067 --> 00:04:08.634
we all sat down
and tried to figure out

00:04:08.634 --> 00:04:11.067
what's the best API for this--
how do we do it the best way?

00:04:11.067 --> 00:04:14.067
So I think a lot of these things
that are sort of

00:04:14.067 --> 00:04:18.267
proprietary standards
that never really made it

00:04:18.267 --> 00:04:20.634
through the web standards
process--

00:04:20.634 --> 00:04:22.968
I would love to see us have
an opportunity to go back

00:04:22.968 --> 00:04:24.501
and figure out, you know,

00:04:24.501 --> 00:04:26.868
what are we actually trying
to support here?

00:04:26.868 --> 00:04:28.701
How can we do this
in an open way

00:04:28.701 --> 00:04:30.100
that everyone can implement?

00:04:30.100 --> 00:04:32.934
Implement securely,
implement Cross-Platform.

00:04:32.934 --> 00:04:37.767
And just do it in a more
webby, standards-friendly way.

00:04:37.767 --> 00:04:39.868
Schroepfer: Okay, I've got
an open question for the panel.

00:04:39.868 --> 00:04:42.100
So whichever of you
would like to respond.

00:04:42.100 --> 00:04:43.334
If I'm a web developer--

00:04:43.334 --> 00:04:45.067
so I'm building websites,
for example--

00:04:45.067 --> 00:04:47.234
and I wanted to talk
to the browser vendors

00:04:47.234 --> 00:04:49.734
and lobby on behalf
of a particular new standard,

00:04:49.734 --> 00:04:51.667
or change a new implementation
to be done,

00:04:51.667 --> 00:04:52.667
how do I get in touch with you?

00:04:52.667 --> 00:04:54.334
How do I help influence
the process

00:04:54.334 --> 00:04:56.200
by which you decide
what you're gonna build

00:04:56.200 --> 00:04:57.734
in the next version
of the browser

00:04:57.734 --> 00:05:00.033
that affects the entire
web ecosystem?

00:05:00.033 --> 00:05:02.868
Charles: So the dumb answer
is email, right?

00:05:02.868 --> 00:05:04.834
Because we all read
a lot of it.

00:05:04.834 --> 00:05:08.167
I think part
of the smart answer is

00:05:08.167 --> 00:05:11.801
you get your users to become
very visible.

00:05:11.801 --> 00:05:14.334
If you've got something
that you're building,

00:05:14.334 --> 00:05:17.767
then show that it's interesting.

00:05:17.767 --> 00:05:21.167
Because the browsers look around
at what's going on in the web.

00:05:21.167 --> 00:05:24.267
A lot of the input
to things that we're gonna do

00:05:24.267 --> 00:05:25.534
in standardization

00:05:25.534 --> 00:05:28.100
comes from things that people
are trying to do,

00:05:28.100 --> 00:05:30.167
and getting frustrated by.

00:05:30.167 --> 00:05:33.234
So building it,

00:05:33.234 --> 00:05:36.100
and then, instead of hoping
they will come--

00:05:36.100 --> 00:05:37.601
because eventually we will.

00:05:37.601 --> 00:05:40.801
But building it and then
going to talk to us and say,

00:05:40.801 --> 00:05:42.901
"This is what I want,"
you know...

00:05:42.901 --> 00:05:44.767
And doing it somewhere, like,
you know,

00:05:44.767 --> 00:05:48.534
go and talk to the W3C--
the working group--

00:05:48.534 --> 00:05:51.634
or submit it
to a relevant group

00:05:51.634 --> 00:05:54.133
where a bunch of browser makers
and a bunch

00:05:54.133 --> 00:05:57.567
of the other parts
of the ecosystem

00:05:57.567 --> 00:05:59.267
are already present.

00:05:59.267 --> 00:06:02.701
Because it's not just browsers.
You've got to have browsers.

00:06:02.701 --> 00:06:05.167
You've got to have the tools
that people are gonna use.

00:06:05.167 --> 00:06:08.133
If you build something--
If we build some format,

00:06:08.133 --> 00:06:10.234
and you can't make
authoring tools for it,

00:06:10.234 --> 00:06:12.801
then we've got a problem,
right?

00:06:12.801 --> 00:06:15.234
Because you've got a bit
of the ecosystem missing.

00:06:15.234 --> 00:06:18.667
But basically make it,

00:06:18.667 --> 00:06:20.601
and then find the forum
we're sitting in

00:06:20.601 --> 00:06:23.000
where we talk about this stuff.

00:06:23.000 --> 00:06:26.100
3D Canvas is an example
of something where--

00:06:26.100 --> 00:06:29.067
We went to a place--
we ended up at Cronos,

00:06:29.067 --> 00:06:31.834
which seemed to be
a reasonable organization.

00:06:31.834 --> 00:06:34.334
We would like it to be more open
in the way it works.

00:06:34.334 --> 00:06:38.167
But it's got the right people
working on the right technology.

00:06:38.167 --> 00:06:41.033
And, you know, Mozilla,
Opera...

00:06:41.033 --> 00:06:44.801
People out in the wide world
all went and said,

00:06:44.801 --> 00:06:48.734
"We want to do 3-D stuff.
Let's go and do it together."

00:06:48.734 --> 00:06:52.100
Jonas: I think showing that
there's a need for something

00:06:52.100 --> 00:06:56.367
is a very good way
of building support for,

00:06:56.367 --> 00:06:58.767
or ensuring that browsers
will get excited

00:06:58.767 --> 00:07:00.000
to implement something.

00:07:00.000 --> 00:07:03.267
There's an infinite number
of suggestions,

00:07:03.267 --> 00:07:06.334
and it's very rare that
someone sends in a suggestion

00:07:06.334 --> 00:07:07.934
to a standards body
or to a browser--

00:07:07.934 --> 00:07:10.000
just shoots away one email,

00:07:10.000 --> 00:07:12.467
and then everyone gets
so excited about that idea

00:07:12.467 --> 00:07:15.000
that people start
implementing it.

00:07:15.000 --> 00:07:17.334
It has happened, and it's
usually very small things.

00:07:17.334 --> 00:07:19.701
But more what happens is that

00:07:19.701 --> 00:07:23.701
you do the best you can
without it, or--

00:07:23.701 --> 00:07:27.067
So for example, with 3D,
as soon as Canvas came out,

00:07:27.067 --> 00:07:31.033
people started doing, like,
Doom and 3D games in Canvas.

00:07:31.033 --> 00:07:33.601
And it's horribly slow,
but it sort of works.

00:07:33.601 --> 00:07:35.234
You can sort of see
potential there.

00:07:35.234 --> 00:07:40.100
So people did the best they can
with the tools that were there,

00:07:40.100 --> 00:07:42.467
and thereby showed that
if we only had

00:07:42.467 --> 00:07:43.901
this other tool as well,

00:07:43.901 --> 00:07:46.534
we could do the things we're
doing, but more awesome.

00:07:46.534 --> 00:07:51.701
So that is a very good way
of getting browsers

00:07:51.701 --> 00:07:53.734
and getting standards
organization to take interest

00:07:53.734 --> 00:07:57.467
is to show that there's
an actual need for it.

00:07:57.467 --> 00:07:59.901
Ian: I know a lot of people--
if I could just answer quickly.

00:07:59.901 --> 00:08:02.100
I know a lot of people out here
look at us up here

00:08:02.100 --> 00:08:04.033
and see, like, Google,
a giant company.

00:08:04.033 --> 00:08:05.334
Mozilla, a big browser.

00:08:05.334 --> 00:08:07.033
Opera, big player.

00:08:07.033 --> 00:08:08.734
Been around
for quite a long time.

00:08:08.734 --> 00:08:10.901
I think probably one
of the oldest browsers?

00:08:10.901 --> 00:08:12.767
Charles: Yeah, I think we're now
the oldest browser

00:08:12.767 --> 00:08:15.167
delivering active development
and still around.

00:08:15.167 --> 00:08:17.234
Ian: So people look at us
and think, like, "Oh, my gosh,

00:08:17.234 --> 00:08:18.667
"they must have a ton
of resources

00:08:18.667 --> 00:08:20.367
and giant teams
to work on all of these."

00:08:20.367 --> 00:08:22.901
But the reality is that we do
sort of have to pick and choose.

00:08:22.901 --> 00:08:24.534
You know, we're looking at,
you know--

00:08:24.534 --> 00:08:26.567
what are people actually trying
to do,

00:08:26.567 --> 00:08:28.000
as Jonas and Charles said?

00:08:28.000 --> 00:08:30.367
The other side is that,
you know, for Chrome, at least,

00:08:30.367 --> 00:08:32.167
and Mozilla as well,
we're open-source.

00:08:32.167 --> 00:08:34.534
If you really want to see
something implemented,

00:08:34.534 --> 00:08:35.868
patches welcome.

00:08:35.868 --> 00:08:38.667
Go to dev.chromium.org.
All of our source code's there.

00:08:38.667 --> 00:08:42.234
We're all hanging out on IRC
and pound Chromium on Freenote.

00:08:42.234 --> 00:08:44.901
And you can come talk to us
and pitch an idea and say, like,

00:08:44.901 --> 00:08:47.033
"Look, this is this
really cool thing I want to do.

00:08:47.033 --> 00:08:49.300
"And by the way,
I implemented it.

00:08:49.300 --> 00:08:50.534
Here you go.
check it out."

00:08:50.534 --> 00:08:52.868
That's a great way
to get it in there too.

00:08:52.868 --> 00:08:55.133
Charles: It turns out that
there's no shortage of things

00:08:55.133 --> 00:08:56.567
that we could be working on.

00:08:56.567 --> 00:08:59.467
It's about what other ones
that are really important

00:08:59.467 --> 00:09:00.834
to the world.

00:09:00.834 --> 00:09:04.000
So you know,
just implementing code,

00:09:04.000 --> 00:09:05.367
it's like, you know,

00:09:05.367 --> 00:09:07.734
is one part of a step
that you can do.

00:09:07.734 --> 00:09:10.200
But showing that
this is something that is,

00:09:10.200 --> 00:09:12.434
you know, gonna be important
to the world,

00:09:12.434 --> 00:09:15.434
that this matters
to other people,

00:09:15.434 --> 00:09:18.534
is a pretty critical step to
get something to be a standard

00:09:18.534 --> 00:09:21.000
and not, you know,
a private project.

00:09:21.000 --> 00:09:22.501
Schroepfer: So turning
the question around,

00:09:22.501 --> 00:09:24.601
what, as browser developers,
do you wish

00:09:24.601 --> 00:09:26.200
more web developers were doing

00:09:26.200 --> 00:09:28.701
to take advantage of
next-generation technologies

00:09:28.701 --> 00:09:30.901
in existing
or upcoming browsers?

00:09:30.901 --> 00:09:33.234
What do you wish you saw
on the web?

00:09:33.234 --> 00:09:36.801
Jonas: It's really awesome when
you put the new technology--

00:09:36.801 --> 00:09:38.167
even if you just--

00:09:38.167 --> 00:09:40.601
especially when you put it
in an alpha or beta release.

00:09:40.601 --> 00:09:42.367
And to see people start
playing around with it

00:09:42.367 --> 00:09:44.701
and do amazing things that
you had just never imagined

00:09:44.701 --> 00:09:45.701
that people would do with it.

00:09:45.701 --> 00:09:48.801
Like with the Canvas,
when that came.

00:09:48.801 --> 00:09:52.601
So playing with early
alphas and betas is

00:09:52.601 --> 00:09:53.901
a really good way.

00:09:53.901 --> 00:09:55.767
And also, these people tend
to find bugs,

00:09:55.767 --> 00:09:58.334
and these are bugs that
we can fix before the release.

00:09:58.334 --> 00:10:01.501
And this prevents things where,
you know,

00:10:01.501 --> 00:10:03.834
there was a bug
in an initial release,

00:10:03.834 --> 00:10:05.934
and now everyone has to deal
with that bug,

00:10:05.934 --> 00:10:07.434
and we can't fix it because
people have started

00:10:07.434 --> 00:10:08.767
depending on it.

00:10:08.767 --> 00:10:10.767
Fixing those things before,

00:10:10.767 --> 00:10:12.701
because people find them
in alphas and betas,

00:10:12.701 --> 00:10:14.367
is really nice.

00:10:14.367 --> 00:10:19.601
Um, also, like,
just pushing the limits.

00:10:19.601 --> 00:10:23.534
Daring to do demos,
at least,

00:10:23.534 --> 00:10:25.400
that only work
with one browser.

00:10:25.400 --> 00:10:27.100
I can understand the reluctance,

00:10:27.100 --> 00:10:29.334
and I do want people
to develop sites

00:10:29.334 --> 00:10:31.000
that work in all browsers.

00:10:31.000 --> 00:10:35.501
But at least playing around
with technologies

00:10:35.501 --> 00:10:37.000
that only exist in one browser.

00:10:37.000 --> 00:10:39.834
Not necessarily Firefox, but
you're welcome to do that too.

00:10:39.834 --> 00:10:43.434
But people playing around
with new technologies

00:10:43.434 --> 00:10:46.367
and doing things
that we had never imagined

00:10:46.367 --> 00:10:47.901
is really cool.

00:10:47.901 --> 00:10:49.767
Charles: Sorry, go, Ian.

00:10:49.767 --> 00:10:52.934
Ian: I think we talk a lot about
this chicken and egg scenario.

00:10:52.934 --> 00:10:54.501
You know, I don't know
if you're the chicken

00:10:54.501 --> 00:10:55.801
or if you're the egg.

00:10:55.801 --> 00:10:57.000
But a lot of us want
to think that, oh,

00:10:57.000 --> 00:10:59.100
the other person needs
to do something first.

00:10:59.100 --> 00:11:01.033
And I think that, really,
we just need to act.

00:11:01.033 --> 00:11:04.334
So on the Google Chrome team,
we're starting to look

00:11:04.334 --> 00:11:05.968
at CSS3 and Vertical Text.

00:11:05.968 --> 00:11:08.834
Is anyone really using
Vertical Text right now?

00:11:08.834 --> 00:11:10.234
No, not really,
but on the other hand,

00:11:10.234 --> 00:11:11.734
there's no option to do it.

00:11:11.734 --> 00:11:13.367
So we're just gonna go ahead,
and we're gonna do it.

00:11:13.367 --> 00:11:15.167
And I would love it if
some of you

00:11:15.167 --> 00:11:17.567
content publishers out there
would go ahead

00:11:17.567 --> 00:11:19.968
and start implementing
Vertical Text on your site,

00:11:19.968 --> 00:11:21.667
even though
it might not work yet.

00:11:21.667 --> 00:11:23.968
Because when it does,
there's gonna be a lot of users,

00:11:23.968 --> 00:11:26.200
like Japan, you know,
surprised.

00:11:26.200 --> 00:11:27.701
They wake up in the morning,

00:11:27.701 --> 00:11:29.534
and their newspaper is
still vertical.

00:11:29.534 --> 00:11:32.167
It hasn't changed--
their language hasn't changed

00:11:32.167 --> 00:11:34.133
just because the web has
some restriction.

00:11:34.133 --> 00:11:36.501
So we're working on lifting
those restrictions.

00:11:36.501 --> 00:11:38.701
I would say that
what would really help me is

00:11:38.701 --> 00:11:41.667
if you guys would start working
on the parts

00:11:41.667 --> 00:11:43.267
that you have control over,

00:11:43.267 --> 00:11:45.434
such that when we're both there,
it'll just work.

00:11:45.434 --> 00:11:49.534
And I think that the first time
that someone wakes up,

00:11:49.534 --> 00:11:51.534
and they see, you know,
oh, my gosh,

00:11:51.534 --> 00:11:53.934
Wikipedia is now Vertical
in Japanese.

00:11:53.934 --> 00:11:55.567
It's like reading it
in a newspaper.

00:11:55.567 --> 00:11:58.701
Oh, my gosh, this web comic
now has Vertical Text,

00:11:58.701 --> 00:12:01.167
just like the manga I read
on my table.

00:12:01.167 --> 00:12:02.767
You know, I think
that's going to be

00:12:02.767 --> 00:12:05.234
a very, sort of,
eye-opening moment.

00:12:05.234 --> 00:12:07.801
And after that happens,
it'll accelerate demand,

00:12:07.801 --> 00:12:10.033
and people will start creating
more content.

00:12:10.033 --> 00:12:12.133
More browsers will start
implementing.

00:12:12.133 --> 00:12:13.767
And so I would say just forget

00:12:13.767 --> 00:12:16.200
the whole chicken and egg
argument, and just do it.

00:12:16.200 --> 00:12:18.467
Charles: So I'd also like to
say, you know,

00:12:18.467 --> 00:12:20.734
figure out the experimental
stuff and, yeah,

00:12:20.734 --> 00:12:22.400
get all of the
experimental toys,

00:12:22.400 --> 00:12:24.734
and play with them
and push them,

00:12:24.734 --> 00:12:27.734
and make experiments
and show us where, you know,

00:12:27.734 --> 00:12:29.200
this thing can go.

00:12:29.200 --> 00:12:31.501
And show us where
we should be thinking next,

00:12:31.501 --> 00:12:33.801
and give out all the new ideas.

00:12:33.801 --> 00:12:36.467
And figure out how to separate
the experimental stuff

00:12:36.467 --> 00:12:41.167
and the hacking around
from building ordinary stuff.

00:12:41.167 --> 00:12:43.133
Ordinary stuff should be
built right.

00:12:43.133 --> 00:12:45.667
So you know,
if you're building a piece

00:12:45.667 --> 00:12:47.400
of crazy,
experimental sculpture

00:12:47.400 --> 00:12:49.334
to show off what can be done
with a material,

00:12:49.334 --> 00:12:51.000
you build a crazy thing.

00:12:51.000 --> 00:12:55.033
If you're building a bridge,
get the standards right.

00:12:55.033 --> 00:12:56.801
You know, figure out
how to do it properly,

00:12:56.801 --> 00:12:59.434
and use the technology
that we've got properly.

00:12:59.434 --> 00:13:01.000
And that's really important,

00:13:01.000 --> 00:13:04.033
because the more time we spend
messing around

00:13:04.033 --> 00:13:06.868
existing broken rubbish,

00:13:06.868 --> 00:13:10.033
the less time we spend
doing interesting things.

00:13:10.033 --> 00:13:12.567
And that frustrates
our engineers,

00:13:12.567 --> 00:13:16.767
who like making cool stuff
rather than patching bad HTML.

00:13:16.767 --> 00:13:20.133
And it frustrates
the developers

00:13:20.133 --> 00:13:23.334
because the browsers spend
all their time patching bad HTML

00:13:23.334 --> 00:13:26.300
instead of giving
more interesting functionality.

00:13:26.300 --> 00:13:28.234
Schroepfer: So one of
the challenges of pushing

00:13:28.234 --> 00:13:29.734
new standards and browsers

00:13:29.734 --> 00:13:32.400
is getting those new browsers
adopted on users' desktops.

00:13:32.400 --> 00:13:33.968
I'm sure, as anyone
in the audience

00:13:33.968 --> 00:13:35.367
who's building
a major web site,

00:13:35.367 --> 00:13:38.601
probably still has to support
both IE 6 and Firefox 2,

00:13:38.601 --> 00:13:40.100
because together they're
a reasonable portion

00:13:40.100 --> 00:13:41.200
of their user base.

00:13:41.200 --> 00:13:42.334
What are all of you doing

00:13:42.334 --> 00:13:44.133
to aggressively get your users
to upgrade

00:13:44.133 --> 00:13:45.667
to the latest version
of the browsers

00:13:45.667 --> 00:13:47.501
that have the latest
and newest standards?

00:13:47.501 --> 00:13:49.834
Ian: I can answer that.
[laughter]

00:13:49.834 --> 00:13:51.334
If you're running
Google Chrome,

00:13:51.334 --> 00:13:52.534
you're running
the latest version.

00:13:52.534 --> 00:13:55.801
Which I know Firefox does
some auto-updates,

00:13:55.801 --> 00:13:58.534
not quite as aggressively
as Chrome.

00:13:58.534 --> 00:14:00.167
But I think that,
you know,

00:14:00.167 --> 00:14:02.267
there's certainly a good case
to be made

00:14:02.267 --> 00:14:03.934
for doing automatic updates,

00:14:03.934 --> 00:14:06.734
and I'd like to see more people
move towards that direction.

00:14:06.734 --> 00:14:09.601
It helps keep the web browsers
up to date.

00:14:09.601 --> 00:14:11.334
And that's good not only
from a functionality

00:14:11.334 --> 00:14:12.868
and standards perspective,

00:14:12.868 --> 00:14:15.300
but also, when there's
a security bug that we patch,

00:14:15.300 --> 00:14:16.801
we're able to push out
an update,

00:14:16.801 --> 00:14:18.200
and it goes out to the vast
majority of our users

00:14:18.200 --> 00:14:19.634
very quickly.

00:14:19.634 --> 00:14:22.601
So I'd really like to see,
you know, more browsers--

00:14:22.601 --> 00:14:24.334
Charles: Have a look at
our containers.

00:14:24.334 --> 00:14:26.567
Go to Auto Update in it.
[chuckles]

00:14:26.567 --> 00:14:30.868
Yeah, there are some issues
with Auto Update, right?

00:14:30.868 --> 00:14:33.801
There are issues about systems.

00:14:33.801 --> 00:14:37.067
People who run, you know,
very secured systems,

00:14:37.067 --> 00:14:39.200
or systems where,
for some reason,

00:14:39.200 --> 00:14:41.234
they want to have a lot
of control.

00:14:41.234 --> 00:14:43.367
You don't put
the space shuttle onto

00:14:43.367 --> 00:14:46.000
the beta version of anything,
right?

00:14:46.000 --> 00:14:49.100
And there are other places
where you don't want to

00:14:49.100 --> 00:14:51.100
update everything automatically.

00:14:51.100 --> 00:14:52.968
If you use a browser
twice a week,

00:14:52.968 --> 00:14:55.601
and you pay a lot of money
for your data,

00:14:55.601 --> 00:14:58.634
you don't want the browser
costing you ten bucks a week,

00:14:58.634 --> 00:15:00.834
'cause that's five bucks
a page.

00:15:00.834 --> 00:15:02.834
You should be able
to turn the update off.

00:15:02.834 --> 00:15:04.133
You should be in control.

00:15:04.133 --> 00:15:07.667
But yeah, Auto Update,
making it easy for the user

00:15:07.667 --> 00:15:10.868
to just have the thing
that is the latest version

00:15:10.868 --> 00:15:12.334
is important.

00:15:12.334 --> 00:15:15.300
Making the latest version
actually better quality--

00:15:15.300 --> 00:15:17.634
You know, make sure that
it's an improvement

00:15:17.634 --> 00:15:20.367
and that it's a real upgrade
and not a, you know,

00:15:20.367 --> 00:15:22.934
"We made a new version, and
you should have that anyway."

00:15:22.934 --> 00:15:25.033
Because if you do that
a couple of times,

00:15:25.033 --> 00:15:26.200
people say,
"Well, wait a minute,

00:15:26.200 --> 00:15:28.334
"you guys don't necessarily
improve--

00:15:28.334 --> 00:15:31.334
I don't want to upgrade."

00:15:31.334 --> 00:15:33.334
So that attention to quality,

00:15:33.334 --> 00:15:35.334
getting stuff right
is important.

00:15:35.334 --> 00:15:37.133
Jonas: I think it's--

00:15:37.133 --> 00:15:39.400
There's definitely advantages
and disadvantages

00:15:39.400 --> 00:15:41.834
to pushing the latest version
automatically.

00:15:41.834 --> 00:15:45.267
It is scary to push
a new major release

00:15:45.267 --> 00:15:47.934
because there's always gonna be
some amount of things

00:15:47.934 --> 00:15:49.467
that break
with a new major release.

00:15:49.467 --> 00:15:51.434
If you fix a bug,
a site is gonna break.

00:15:51.434 --> 00:15:53.000
That's just how the web works.

00:15:53.000 --> 00:15:56.968
So pushing new major releases,

00:15:56.968 --> 00:15:59.601
we're talking a lot
about how to do that.

00:15:59.601 --> 00:16:01.033
I think it's very important--

00:16:01.033 --> 00:16:02.934
For security updates,
it's very important

00:16:02.934 --> 00:16:05.767
that it's--it's--
because they come so often,

00:16:05.767 --> 00:16:07.934
it's important that
it's very smooth,

00:16:07.934 --> 00:16:09.801
and it's unnoticeable
for the user

00:16:09.801 --> 00:16:11.501
so the user doesn't
get bothered.

00:16:11.501 --> 00:16:13.834
Because nothing really
should break over that anyway.

00:16:13.834 --> 00:16:17.567
With major releases,
I think it's very important

00:16:17.567 --> 00:16:19.834
that users know
that there's an upgrade.

00:16:19.834 --> 00:16:22.133
We find many times that
our users

00:16:22.133 --> 00:16:23.934
that are still on Firefox 2
just didn't know

00:16:23.934 --> 00:16:26.133
that Firefox 3
had been released.

00:16:26.133 --> 00:16:27.767
Somehow they missed
the dialogue.

00:16:27.767 --> 00:16:31.100
Even if we'd pushed up
an announcement

00:16:31.100 --> 00:16:33.133
two or three times
to all the users,

00:16:33.133 --> 00:16:35.167
somehow they missed it
because maybe their mom was

00:16:35.167 --> 00:16:36.467
using the computer,

00:16:36.467 --> 00:16:38.567
or someone else was using
the computer

00:16:38.567 --> 00:16:40.434
and just clicked "cancel"
because they didn't know

00:16:40.434 --> 00:16:43.634
that they wanted to upgrade.

00:16:43.634 --> 00:16:45.334
So it's very important
that users know

00:16:45.334 --> 00:16:46.634
that there's an upgrade.

00:16:46.634 --> 00:16:50.167
And it should also be very easy
to do the upgrade.

00:16:50.167 --> 00:16:54.634
The easy part is something
that we decided

00:16:54.634 --> 00:16:58.767
very early on in Firefox--
it should be almost transparent.

00:16:58.767 --> 00:17:00.200
The user should just,
at the most,

00:17:00.200 --> 00:17:01.601
have to click a "yes" button.

00:17:01.601 --> 00:17:04.434
If users have to download
and install

00:17:04.434 --> 00:17:06.133
and go through
an entire process again,

00:17:06.133 --> 00:17:09.133
you immediately drop
a big hunk of users.

00:17:09.133 --> 00:17:10.868
If you can't do it
in two, three seconds,

00:17:10.868 --> 00:17:13.334
you've lost a bunch
of users already.

00:17:13.334 --> 00:17:18.701
So whether to push,
automatically, major releases,

00:17:18.701 --> 00:17:21.200
we're still debating.

00:17:21.200 --> 00:17:24.033
There's definitely users
that want both ways.

00:17:24.033 --> 00:17:25.801
And I also think
it's very important

00:17:25.801 --> 00:17:27.334
that users are in control.

00:17:27.334 --> 00:17:28.934
If users don't want to upgrade,

00:17:28.934 --> 00:17:30.667
they should be able to,
at all times,

00:17:30.667 --> 00:17:32.801
make a conscious decision
and say,

00:17:32.801 --> 00:17:35.067
"I don't want more upgrades."

00:17:35.067 --> 00:17:36.834
For whatever reason
there may be.

00:17:36.834 --> 00:17:38.267
Charles: So there's
another issue, right?

00:17:38.267 --> 00:17:41.200
My father-in-law is
82 years old,

00:17:41.200 --> 00:17:44.901
and his computer is not quite
as old as he is.

00:17:44.901 --> 00:17:47.834
But it runs Windows '98.

00:17:47.834 --> 00:17:49.567
'Cause it turns out
that I couldn't find

00:17:49.567 --> 00:17:52.634
a Linux distribution
easily available

00:17:52.634 --> 00:17:54.601
that would fit
on the machine.

00:17:54.601 --> 00:17:56.968
And it also turns out
that I could only find

00:17:56.968 --> 00:17:59.400
one browser
that's a modern browser

00:17:59.400 --> 00:18:01.667
that will fit into the machine.

00:18:01.667 --> 00:18:03.734
There's a lot
of this stuff around.

00:18:03.734 --> 00:18:07.634
So, you know, wanting everybody
to have the latest everything--

00:18:07.634 --> 00:18:08.834
It's like, you know,
one solution is

00:18:08.834 --> 00:18:10.400
go out and buy
the whole world

00:18:10.400 --> 00:18:12.901
the latest piece of hardware
to run it.

00:18:12.901 --> 00:18:16.000
But that's probably not
the best way

00:18:16.000 --> 00:18:18.167
we could spend all our money.

00:18:18.167 --> 00:18:19.868
So you've got to
actually recognize

00:18:19.868 --> 00:18:22.801
that some of these limits
come from things

00:18:22.801 --> 00:18:24.501
that are quite important
to people,

00:18:24.501 --> 00:18:27.100
and things that are
pretty fundamental.

00:18:27.100 --> 00:18:29.033
Schroepfer: So looking at
the composition of this panel,

00:18:29.033 --> 00:18:31.834
I'm noticing two
major absences.

00:18:31.834 --> 00:18:34.701
Our friends at Apple
and Microsoft are not here,

00:18:34.701 --> 00:18:37.200
which collectively have
more than about 50%

00:18:37.200 --> 00:18:40.100
of the browser market share, if
I have the recent stats right.

00:18:40.100 --> 00:18:41.868
What are you doing
to work well

00:18:41.868 --> 00:18:43.400
with the entire
browser community

00:18:43.400 --> 00:18:45.767
to make sure that, as a new
and important standard gets out,

00:18:45.767 --> 00:18:48.467
it gets implemented
across all the major browsers

00:18:48.467 --> 00:18:51.133
so that web developers can count
on that feature being there

00:18:51.133 --> 00:18:52.534
when they're deploying
their web site

00:18:52.534 --> 00:18:55.200
in the real world?

00:18:55.200 --> 00:18:57.234
Jonas: I find a very
important part is

00:18:57.234 --> 00:18:58.734
in the standards process--

00:18:58.734 --> 00:19:00.100
when you're defining
a new standard--

00:19:00.100 --> 00:19:03.667
it's very important to get--
to have all the parties

00:19:03.667 --> 00:19:05.200
that have interest
in the standard

00:19:05.200 --> 00:19:06.901
and are going to implement
the standard,

00:19:06.901 --> 00:19:10.100
to have them involved
so that they can give input.

00:19:10.100 --> 00:19:13.567
First of all, I think if you
don't have a party involved,

00:19:13.567 --> 00:19:16.367
it's very easy to accidentally
put something in the standard

00:19:16.367 --> 00:19:18.300
that someone just can't
implement--

00:19:18.300 --> 00:19:19.968
that is just physically
too hard.

00:19:19.968 --> 00:19:21.901
Some of those things are
actually already on the web,

00:19:21.901 --> 00:19:23.200
unfortunately.

00:19:23.200 --> 00:19:27.901
But...so there's
that aspect.

00:19:27.901 --> 00:19:29.934
The other thing is that
it's just--

00:19:29.934 --> 00:19:32.200
if someone just
throws a standard in your lap

00:19:32.200 --> 00:19:34.300
and says,
"Here, go implement it,"

00:19:34.300 --> 00:19:36.968
then you'll be
much less excited to do that

00:19:36.968 --> 00:19:40.167
than if you get to be part of
the development process.

00:19:40.167 --> 00:19:41.400
You get to give your input.

00:19:41.400 --> 00:19:44.334
You get to put your print
on it.

00:19:44.334 --> 00:19:48.767
So that way you'll be
more excited about it

00:19:48.767 --> 00:19:50.901
than going forward
and implementing it.

00:19:50.901 --> 00:19:55.367
So I think getting
all browser vendors involved

00:19:55.367 --> 00:19:59.234
in the standards community
is very important.

00:19:59.234 --> 00:20:01.367
Schroepfer: So are you working
with Microsoft and Apple

00:20:01.367 --> 00:20:02.767
directly on these standards
today?

00:20:02.767 --> 00:20:05.734
Is that a process as well?
Charles: Yeah, yeah.

00:20:05.734 --> 00:20:09.067
It's nice to know that Apple
is involved in standards stuff

00:20:09.067 --> 00:20:11.701
much more than they're in
anywhere else.

00:20:11.701 --> 00:20:14.400
It's a pain in the ass when it
turns out that they're involved

00:20:14.400 --> 00:20:16.801
because they sent their
patent declaration

00:20:16.801 --> 00:20:20.033
and said, you know, "We're gonna
block all of this stuff."

00:20:20.033 --> 00:20:23.033
And we've got to figure out
a way around dealing with that.

00:20:23.033 --> 00:20:25.000
But in general, yeah.

00:20:25.000 --> 00:20:26.868
These other browsers are
actually involved

00:20:26.868 --> 00:20:28.534
in standards development.

00:20:28.534 --> 00:20:32.033
I think another important thing
that we do is compete, right?

00:20:32.033 --> 00:20:34.801
Each browser has users.

00:20:34.801 --> 00:20:37.868
Each browser has developers
who are pushing

00:20:37.868 --> 00:20:39.200
what they want to do,

00:20:39.200 --> 00:20:42.133
and following the latest
Fileo

00:20:42.133 --> 00:20:43.601
and the interactivity stuff
in Opera,

00:20:43.601 --> 00:20:47.300
or the latest stuff in Firefox
or Chrome or whatever.

00:20:47.300 --> 00:20:49.434
And because we're actually
competing with each other

00:20:49.434 --> 00:20:51.968
as well, we're looking around
and seeing, you know,

00:20:51.968 --> 00:20:53.934
what is it that attracts
these people

00:20:53.934 --> 00:20:55.567
to some other browser?

00:20:55.567 --> 00:20:58.300
And part of it is
the new functionalities

00:20:58.300 --> 00:20:59.667
that they develop.

00:20:59.667 --> 00:21:05.000
The fact that Firefox
and IE and Opera

00:21:05.000 --> 00:21:08.000
and Apple and Chrome
and other browsers

00:21:08.000 --> 00:21:09.601
that no one here knows of

00:21:09.601 --> 00:21:12.334
all have active communities,
and support them,

00:21:12.334 --> 00:21:16.400
and get them developing stuff,
keeps all of us on our toes.

00:21:16.400 --> 00:21:17.567
Makes us look around and say,

00:21:17.567 --> 00:21:19.601
"We've got to follow that
as well."

00:21:19.601 --> 00:21:20.934
We've got to actually
figure out

00:21:20.934 --> 00:21:23.667
is that something
that's worth standardizing--

00:21:23.667 --> 00:21:25.901
that's worth doing
across the web--

00:21:25.901 --> 00:21:28.200
or is this some weird thing
that's gonna die off

00:21:28.200 --> 00:21:29.968
in a corner?

00:21:29.968 --> 00:21:33.167
And when a browser
comes up with something

00:21:33.167 --> 00:21:34.767
and makes it work,

00:21:34.767 --> 00:21:38.300
it's great, you know,
if you take it and say,

00:21:38.300 --> 00:21:40.000
look, we want to standardize
this.

00:21:40.000 --> 00:21:41.334
It helps the browser,

00:21:41.334 --> 00:21:43.501
It helps the developer
community,

00:21:43.501 --> 00:21:47.267
and it helps the other browsers
have a reason

00:21:47.267 --> 00:21:49.467
to sit down and talk
to each other.

00:21:49.467 --> 00:21:51.467
Ian: I think we should point out
that everyone up here--

00:21:51.467 --> 00:21:52.934
You know, first of all,
we're nice people.

00:21:52.934 --> 00:21:57.734
But we do try to be as open
and as--

00:21:57.734 --> 00:21:59.601
We do as much outreach
as we can.

00:21:59.601 --> 00:22:04.934
So when we're developing
something like Canvas 3D or O3D,

00:22:04.934 --> 00:22:09.868
we tend not to see it
as some whizbang advantage

00:22:09.868 --> 00:22:12.434
that's going to get more usage
for our browser,

00:22:12.434 --> 00:22:14.133
and get people to switch
from other browsers

00:22:14.133 --> 00:22:16.934
because only we are gonna
support O3D, Canvas 3D.

00:22:16.934 --> 00:22:18.467
That's not what we're trying
to do.

00:22:18.467 --> 00:22:20.400
Like, what we're trying to do
is figure out

00:22:20.400 --> 00:22:21.901
how do we move the web forward?

00:22:21.901 --> 00:22:25.267
And so when we do things
like Canvas 3D, you know,

00:22:25.267 --> 00:22:27.167
there was a very active effort.

00:22:27.167 --> 00:22:29.400
Everyone from Mozilla was
reaching out trying to see,

00:22:29.400 --> 00:22:30.734
okay, how do we get people
from Google?

00:22:30.734 --> 00:22:33.133
How do we get people
from Opera and Microsoft?

00:22:33.133 --> 00:22:36.033
And how do we get all the people
to the same table

00:22:36.033 --> 00:22:37.367
and talk about this

00:22:37.367 --> 00:22:39.200
so that when we're actually
developing this,

00:22:39.200 --> 00:22:40.934
we know about the issues
ahead of time?

00:22:40.934 --> 00:22:44.100
We don't want to get
to a point where we have a spec,

00:22:44.100 --> 00:22:48.167
and two years later,
the other browsers,

00:22:48.167 --> 00:22:51.100
who weren't the first to
implement, start implementing

00:22:51.100 --> 00:22:53.000
and realize, oh, my gosh,
this doesn't work

00:22:53.000 --> 00:22:55.701
in a multiprocess model,
or, oh, my gosh,

00:22:55.701 --> 00:22:58.901
we can't do this
on top of Direct X

00:22:58.901 --> 00:23:01.968
because the OpenGL Shader
Language is different.

00:23:01.968 --> 00:23:04.734
You know, we do try to reach out
as early as we can

00:23:04.734 --> 00:23:06.801
because we want to know if
there are these sorts of issues

00:23:06.801 --> 00:23:08.300
that are gonna hold us up.

00:23:08.300 --> 00:23:10.400
Sometimes it's unfortunate
when we find out these issues,

00:23:10.400 --> 00:23:12.634
be they patent issues
or technical issues,

00:23:12.634 --> 00:23:14.767
because, you know,
sometimes they're setbacks,

00:23:14.767 --> 00:23:16.400
and we want
to get things done quickly.

00:23:16.400 --> 00:23:19.400
But I think that we all realize
that it's much better for us

00:23:19.400 --> 00:23:21.367
to find this out early
in the process,

00:23:21.367 --> 00:23:23.400
as opposed to at the end
of the process.

00:23:23.400 --> 00:23:26.534
So I think we're all trying
to be as open as we can.

00:23:26.534 --> 00:23:29.100
Jonas: The whole, like,
implementing a standard

00:23:29.100 --> 00:23:30.968
in order to compete
kind of doesn't work.

00:23:30.968 --> 00:23:34.334
I've never heard of any user
switching to Firefox

00:23:34.334 --> 00:23:36.667
because we support
animated PNG, for example.

00:23:36.667 --> 00:23:43.300
People switch to browsers
because websites work nicely,

00:23:43.300 --> 00:23:47.801
because the browser works nicely
with the user.

00:23:47.801 --> 00:23:51.701
Generally speaking,
most sites write such that

00:23:51.701 --> 00:23:53.200
they work in all browsers.

00:23:53.200 --> 00:23:55.601
So--that's generally speaking.

00:23:55.601 --> 00:23:58.701
But there's very few times
that I'll switch--

00:23:58.701 --> 00:24:03.300
or someone switches to a browser
because it has a new standard.

00:24:03.300 --> 00:24:05.434
If a standard only works
in one browser,

00:24:05.434 --> 00:24:08.434
no site is gonna rely on it
anyway, generally speaking.

00:24:08.434 --> 00:24:12.968
So there's no competitive
advantage there, really,

00:24:12.968 --> 00:24:14.434
for users.

00:24:14.434 --> 00:24:16.100
Charles: Well, so there's not
for users,

00:24:16.100 --> 00:24:17.534
but there's an advantage
for developers, right?

00:24:17.534 --> 00:24:18.701
Jonas: Yes.

00:24:18.701 --> 00:24:20.767
Charles: The developers want
to figure out

00:24:20.767 --> 00:24:22.501
how to play
with the new technology.

00:24:22.501 --> 00:24:24.801
And in order for developers
to experiment

00:24:24.801 --> 00:24:26.167
with new the technology,

00:24:26.167 --> 00:24:29.801
they do go from one set
of new technology to another,

00:24:29.801 --> 00:24:31.267
figure out what they like.

00:24:31.267 --> 00:24:34.801
And it's not that, you know,
implementing this feature

00:24:34.801 --> 00:24:38.534
is gonna get my mom
to switch her browser.

00:24:38.534 --> 00:24:44.033
But it will give a developer
a place to experiment.

00:24:44.033 --> 00:24:49.367
So there's standardization,
and there's innovation,

00:24:49.367 --> 00:24:51.100
and they're separate processes.

00:24:51.100 --> 00:24:53.501
Innovation is where you start
building the experiment.

00:24:53.501 --> 00:24:56.667
Standardization is where
you've seen the experiment

00:24:56.667 --> 00:24:59.334
and what people have done
with it, and you've said, yeah,

00:24:59.334 --> 00:25:02.200
we need to actually
make this work properly.

00:25:02.200 --> 00:25:05.934
And then we take a step back,
and we get it all right,

00:25:05.934 --> 00:25:09.400
and we make sure it works
on mobiles and in Arabic

00:25:09.400 --> 00:25:12.367
and in Japanese
with Vertical Text,

00:25:12.367 --> 00:25:14.901
and in dual-processor systems.

00:25:14.901 --> 00:25:22.300
And so the innovation stuff
that drives the creativity

00:25:22.300 --> 00:25:24.033
and the development

00:25:24.033 --> 00:25:26.267
comes back down
to standardization

00:25:26.267 --> 00:25:28.734
at a different level.

00:25:28.734 --> 00:25:32.434
So I agree that, you know,
you don't win users

00:25:32.434 --> 00:25:35.334
because you implement
some standard thing.

00:25:35.334 --> 00:25:39.734
But you do get creativity,
you get innovation,

00:25:39.734 --> 00:25:42.267
and you get a chance for people
to make applications.

00:25:42.267 --> 00:25:44.000
Schroepfer: So if you're not--
I'm sorry.

00:25:44.000 --> 00:25:45.901
If you're not competing
on a standard

00:25:45.901 --> 00:25:47.300
on the web platform,

00:25:47.300 --> 00:25:48.601
what's the pitch
from each of you

00:25:48.601 --> 00:25:50.734
in terms of why I,
as a newbie user,

00:25:50.734 --> 00:25:53.167
should use Opera,
Firefox, or Chrome?

00:25:53.167 --> 00:25:54.501
And why are you competing
in the market?

00:25:54.501 --> 00:25:57.968
Why not join efforts into one
super-browser project

00:25:57.968 --> 00:25:59.634
where you pool your efforts
into building

00:25:59.634 --> 00:26:02.300
the latest and greatest
web-rendering engine?

00:26:02.300 --> 00:26:04.400
Charles: Because we'd have to
downsize all the engineers.

00:26:04.400 --> 00:26:06.334
Jonas: We don't like each other
that much.

00:26:06.334 --> 00:26:08.868
Ian: I was just gonna say,
I mean, it's not that we don't--

00:26:08.868 --> 00:26:10.534
We do sort of compete.

00:26:10.534 --> 00:26:12.567
Like, things like JavaScript,
you know.

00:26:12.567 --> 00:26:14.934
There was a slide
in the keynote that showed

00:26:14.934 --> 00:26:16.667
how fast JavaScript
had gotten.

00:26:16.667 --> 00:26:19.934
If there weren't
multiple browsers,

00:26:19.934 --> 00:26:22.767
I don't know that that curve
would be as sharp as it is.

00:26:22.767 --> 00:26:24.167
You know,
within the past year,

00:26:24.167 --> 00:26:27.000
we've seen JavaScript
in all the major browsers

00:26:27.000 --> 00:26:28.734
make leaps and bounds.

00:26:28.734 --> 00:26:31.901
And I think that, you know,
part of this is

00:26:31.901 --> 00:26:34.167
us competing
for developer love.

00:26:34.167 --> 00:26:36.200
Part of it is just, you know,
if you're a user,

00:26:36.200 --> 00:26:38.868
and you're loading Gmail,
which is getting more complex

00:26:38.868 --> 00:26:40.868
as more features get
added in,

00:26:40.868 --> 00:26:43.234
you want that to load quickly.

00:26:43.234 --> 00:26:45.434
And if you start realizing that,
you know what,

00:26:45.434 --> 00:26:48.033
it's taking ten seconds
in my browser to load,

00:26:48.033 --> 00:26:49.667
but when I switch
to Google Chrome,

00:26:49.667 --> 00:26:51.033
it comes up in one second...

00:26:51.033 --> 00:26:53.667
You know, maybe then
that's gonna force the--

00:26:53.667 --> 00:26:55.667
convince the user
to switch over.

00:26:55.667 --> 00:26:58.200
So you know,
we're not trying to compete

00:26:58.200 --> 00:27:01.033
in terms of these are standards
I'm going to implement,

00:27:01.033 --> 00:27:03.033
these are standards
I'm not going to implement.

00:27:03.033 --> 00:27:06.701
But we are certainly competing
in terms of user experience,

00:27:06.701 --> 00:27:10.334
how well do we render the web,
how shiny is our browser,

00:27:10.334 --> 00:27:11.701
how nice does it look,

00:27:11.701 --> 00:27:13.934
how does it feel
to use this overall?

00:27:13.934 --> 00:27:16.567
Charles: A lot of the pitch is,
you know,

00:27:16.567 --> 00:27:20.000
the browser makes your life
better, right?

00:27:20.000 --> 00:27:22.467
The more the browser
helps you do--

00:27:22.467 --> 00:27:23.767
the things you're actually
trying to do.

00:27:23.767 --> 00:27:25.501
Because very, very few people
in the world

00:27:25.501 --> 00:27:27.868
have a job of using
a browser.

00:27:27.868 --> 00:27:31.300
It's like mostly their job is
use the browser to do something.

00:27:31.300 --> 00:27:33.834
And making that thing
work better for them

00:27:33.834 --> 00:27:36.501
is a big bunch
of where we compete.

00:27:36.501 --> 00:27:39.434
Why do we not all do,
you know, the same thing?

00:27:39.434 --> 00:27:41.667
Yeah, I agree with him.
We would stagnate.

00:27:41.667 --> 00:27:44.868
We had the fastest JavaScript
engine around for ages,

00:27:44.868 --> 00:27:46.267
and we didn't do a lot
of work on it

00:27:46.267 --> 00:27:49.100
because nobody else cared
about speeding JavaScript.

00:27:49.100 --> 00:27:51.300
And so nothing happened.

00:27:51.300 --> 00:27:52.968
And then all of a sudden
people said wait a minute.

00:27:52.968 --> 00:27:55.133
They started building
these heavy Ajax apps,

00:27:55.133 --> 00:27:58.767
and JavaScript became important,
and we pushed each other.

00:27:58.767 --> 00:28:02.167
You know, engineers are
individuals,

00:28:02.167 --> 00:28:04.334
and groups are slightly
different,

00:28:04.334 --> 00:28:05.834
with different cultures.

00:28:05.834 --> 00:28:08.400
They're interested
in slightly different stuff.

00:28:08.400 --> 00:28:11.033
They compete.
People like competing.

00:28:11.033 --> 00:28:14.467
So a race to build the fastest
JavaScript engine

00:28:14.467 --> 00:28:17.400
is much more fun when
there's more than one entrant.

00:28:17.400 --> 00:28:20.934
Because a one-person race is
kind of dull to watch.

00:28:20.934 --> 00:28:25.200
And not much fun
to participate in.

00:28:25.200 --> 00:28:28.400
Jonas: Yeah, I mean,
the performance is definitely

00:28:28.400 --> 00:28:32.734
an important aspect
of how we compete.

00:28:32.734 --> 00:28:35.534
There's also, like,
user experience, stability.

00:28:35.534 --> 00:28:39.834
It's basically,
the interface towards users are

00:28:39.834 --> 00:28:42.534
a major competitive point.

00:28:42.534 --> 00:28:46.534
Do I like the Chrome UI and the
features that Chrome provides,

00:28:46.534 --> 00:28:48.968
or do I like the Firefox UI
or the Opera UI?

00:28:48.968 --> 00:28:52.067
So it's sort of how
you interact with the browser,

00:28:52.067 --> 00:28:54.634
which browser
you feel comfortable with

00:28:54.634 --> 00:28:59.667
that's more of a competitive
vector.

00:28:59.667 --> 00:29:02.901
Also, performance has gotten
very, very important lately.

00:29:02.901 --> 00:29:05.701
I think there's just been
some sort of critical mass

00:29:05.701 --> 00:29:08.501
behind the performance message.

00:29:08.501 --> 00:29:10.901
Also, websites have gotten
so complex

00:29:10.901 --> 00:29:13.000
the they actually get
to be slower.

00:29:13.000 --> 00:29:17.133
And so that's why people care
about performance these days

00:29:17.133 --> 00:29:18.934
much more than we did
just a few years ago.

00:29:18.934 --> 00:29:20.968
Schroepfer: So speaking
of JavaScript engines,

00:29:20.968 --> 00:29:23.934
between the, you know, 2x,
3x year over year improvements

00:29:23.934 --> 00:29:25.133
in JavaScript speed,

00:29:25.133 --> 00:29:27.000
and new standards like
worker threads,

00:29:27.000 --> 00:29:28.767
which allows me to do
background processing

00:29:28.767 --> 00:29:30.767
without locking up
the main UI,

00:29:30.767 --> 00:29:32.334
there's a lot more power
on the client

00:29:32.334 --> 00:29:33.701
than there used to be.

00:29:33.701 --> 00:29:35.734
Like, by some benchmarks,
the JS engines are faster

00:29:35.734 --> 00:29:37.100
than many other
interpretive languages,

00:29:37.100 --> 00:29:38.634
like PHP or Python.

00:29:38.634 --> 00:29:41.601
If I'm a web developer,
and I'm re-architecting my site

00:29:41.601 --> 00:29:43.200
or building a new site
from scratch,

00:29:43.200 --> 00:29:44.801
and I'm making a key decision,

00:29:44.801 --> 00:29:46.968
which is how much work
do I do on the client

00:29:46.968 --> 00:29:48.300
versus the server?

00:29:48.300 --> 00:29:50.234
Or which work do I do
on the client or the server?

00:29:50.234 --> 00:29:54.434
What's your advice to me
on how to figure that out?

00:29:54.434 --> 00:29:55.934
Charles: Carefully.
[chuckles]

00:29:55.934 --> 00:29:58.701
Ian: Make it modular.

00:29:58.701 --> 00:30:00.901
The nice thing about
a good modular design is that

00:30:00.901 --> 00:30:04.000
it should be pretty easy
to take some module,

00:30:04.000 --> 00:30:06.133
some part of that
and shift it over.

00:30:06.133 --> 00:30:08.100
So I'd say that, you know,
if your--

00:30:08.100 --> 00:30:10.000
if you want to be
really forward-looking

00:30:10.000 --> 00:30:12.601
and think, you know, okay,
how do I take advantage

00:30:12.601 --> 00:30:14.501
of what's coming up in browsers
the next few years?

00:30:14.501 --> 00:30:16.133
How do I take advantage
of speed?

00:30:16.133 --> 00:30:18.133
How do I take advantage
of new features?

00:30:18.133 --> 00:30:20.334
Design your code in such a way
that, you know,

00:30:20.334 --> 00:30:23.667
if there is a part that
you think might be separable,

00:30:23.667 --> 00:30:25.734
write it in such a way,
such that, you know,

00:30:25.734 --> 00:30:27.968
two years from now,
if it might make more sense

00:30:27.968 --> 00:30:29.701
to do it on the client,
it's easy to swap it out.

00:30:29.701 --> 00:30:33.667
Don't write it as just
one giant monolithic PHP file

00:30:33.667 --> 00:30:36.334
that, you know, is one class,
one function.

00:30:36.334 --> 00:30:37.701
That's gonna hurt.

00:30:37.701 --> 00:30:40.834
And that's just good
coding practice in general.

00:30:40.834 --> 00:30:42.901
Jonas: And there's
a general coding rule

00:30:42.901 --> 00:30:46.067
that's something, like,

00:30:46.067 --> 00:30:48.467
"too early optimizations is
the root of all evil."

00:30:48.467 --> 00:30:52.667
And that's, like, if you start
thinking about performance,

00:30:52.667 --> 00:30:55.701
and start doing performance
before you actually have

00:30:55.701 --> 00:30:57.334
anything else,

00:30:57.334 --> 00:31:01.467
and then you are probably
gonna optimize things

00:31:01.467 --> 00:31:04.133
that you don't need
to optimize.

00:31:04.133 --> 00:31:06.567
And it's much better
to optimize for code quality

00:31:06.567 --> 00:31:09.067
so that once you have
something working,

00:31:09.067 --> 00:31:11.968
and you can see what is slow,

00:31:11.968 --> 00:31:13.901
at that point
you can optimize that.

00:31:13.901 --> 00:31:17.167
There's also the case that
the platform--

00:31:17.167 --> 00:31:19.501
The web platform changes
extremely rapidly right now,

00:31:19.501 --> 00:31:22.501
so whatever is
the correct answer now

00:31:22.501 --> 00:31:25.200
is not going to be
the correct answer in two years.

00:31:25.200 --> 00:31:26.667
So you better be prepared.

00:31:26.667 --> 00:31:29.234
You better build your code such
that you can easily change it.

00:31:29.234 --> 00:31:31.734
Charles: You also want
to think about--

00:31:31.734 --> 00:31:34.434
You know, the web platform
is not like a single platform.

00:31:34.434 --> 00:31:37.801
The difference between
a small device--

00:31:37.801 --> 00:31:39.234
you know, a Nintendo DS,

00:31:39.234 --> 00:31:41.501
which is a pretty
low-spec machine

00:31:41.501 --> 00:31:45.000
compared to some
shiny new laptop--

00:31:45.000 --> 00:31:48.033
You don't necessarily want
the code to run the same way

00:31:48.033 --> 00:31:49.400
on both things.

00:31:49.400 --> 00:31:51.901
So keep it simple,
you know.

00:31:51.901 --> 00:31:54.400
One thing, just cut it down,
if you can.

00:31:54.400 --> 00:31:56.167
And figure out, you know--

00:31:56.167 --> 00:31:58.434
As Ian says, work out where
you can shift stuff across

00:31:58.434 --> 00:32:00.067
from one to the other.

00:32:00.067 --> 00:32:03.033
Keep your code flexible so
you can deal with the changes.

00:32:03.033 --> 00:32:05.400
Ian: I think that a lot
of the advice that we've heard

00:32:05.400 --> 00:32:06.534
over the years--

00:32:06.534 --> 00:32:08.267
especially when CSS started
coming out,

00:32:08.267 --> 00:32:10.667
people were, like, you know,
you need to be really good

00:32:10.667 --> 00:32:12.667
about separating
your program logic

00:32:12.667 --> 00:32:14.868
from your presentation layer
from your data.

00:32:14.868 --> 00:32:18.567
Had you done that, you'd be in
a much better state right now.

00:32:18.567 --> 00:32:20.400
Because when mobile started
taking off,

00:32:20.400 --> 00:32:22.934
you could say, well,
I've got my application code.

00:32:22.934 --> 00:32:24.267
That's still pretty much
the same.

00:32:24.267 --> 00:32:26.100
My data isn't really changing
that much.

00:32:26.100 --> 00:32:28.601
But my presentation layer sort
of needs to change from mobile.

00:32:28.601 --> 00:32:30.234
So that transition might not
have been

00:32:30.234 --> 00:32:31.567
quite as painful for you.

00:32:31.567 --> 00:32:33.334
Now that we're talking
about offline,

00:32:33.334 --> 00:32:35.367
you know, if all of your stuff
is service side--

00:32:35.367 --> 00:32:37.567
all your presentation logic
is service side,

00:32:37.567 --> 00:32:39.300
and now you're trying
to move that offline,

00:32:39.300 --> 00:32:40.400
that's gonna be hard.

00:32:40.400 --> 00:32:42.567
But had you separated that
a few years ago,

00:32:42.567 --> 00:32:45.801
you could say, well, okay,
now some part of that is

00:32:45.801 --> 00:32:47.100
moving down to the client.

00:32:47.100 --> 00:32:48.701
But I've already got
this nice separation,

00:32:48.701 --> 00:32:49.968
so there's a layer
I can rewrite.

00:32:49.968 --> 00:32:51.367
So I think a lot
of the advice

00:32:51.367 --> 00:32:54.133
that people have been giving
for years still applies.

00:32:54.133 --> 00:32:55.934
Charles: And I go back
to the "carefully" thing,

00:32:55.934 --> 00:32:57.434
because it's like--

00:32:57.434 --> 00:33:00.067
It's not enough to say, well,
I have all this stuff in CSS

00:33:00.067 --> 00:33:01.901
and HTML and JavaScript.

00:33:01.901 --> 00:33:03.400
I've got all this separation.

00:33:03.400 --> 00:33:05.901
It's how you actually conceive
of the stuff,

00:33:05.901 --> 00:33:08.100
how it fits together.

00:33:08.100 --> 00:33:11.267
Because you can write
one huge piece of code

00:33:11.267 --> 00:33:14.801
that is actually very cleanly
and beautifully structured

00:33:14.801 --> 00:33:16.934
in your understanding
of how it works.

00:33:16.934 --> 00:33:19.734
And you can simply
pull pieces out and put 'em in.

00:33:19.734 --> 00:33:21.701
And you can write stuff
that's got modules

00:33:21.701 --> 00:33:24.000
all over the place
where, in fact,

00:33:24.000 --> 00:33:26.467
the modules are just this
giant spaghetti stuff

00:33:26.467 --> 00:33:28.434
connecting things.

00:33:28.434 --> 00:33:29.767
Schroepfer: So this is great
general advice.

00:33:29.767 --> 00:33:31.300
Can you think of
specific examples

00:33:31.300 --> 00:33:33.234
you could point people at
where you think people are

00:33:33.234 --> 00:33:35.567
taking advantage of the next
generation JavaScript engines,

00:33:35.567 --> 00:33:37.601
or offline, or worker threads

00:33:37.601 --> 00:33:39.534
to do things in a way
that we maybe wouldn't have

00:33:39.534 --> 00:33:41.133
built web applications before?

00:33:41.133 --> 00:33:42.968
It's a good example for me,
as a web developer,

00:33:42.968 --> 00:33:45.734
to see here's an example
of how you could use

00:33:45.734 --> 00:33:47.934
some of these next-gen
technologies.

00:33:47.934 --> 00:33:51.767
Jonas: I thought it was pretty
cool the other day when I--

00:33:51.767 --> 00:33:54.434
Because I use--
To read email on my phone

00:33:54.434 --> 00:33:58.567
I use Safari and Gmail,
'cause I use the iPhone.

00:33:58.567 --> 00:34:03.434
And it was pretty cool when,
a few months ago,

00:34:03.434 --> 00:34:07.100
or a few weeks ago,
all of a sudden the UI changed

00:34:07.100 --> 00:34:08.934
and became much snappier.

00:34:08.934 --> 00:34:10.601
And it turned out
that it was because

00:34:10.601 --> 00:34:14.501
they're using the client-side
SQL API.

00:34:14.501 --> 00:34:17.267
And so if--

00:34:17.267 --> 00:34:19.234
I don't know exactly
how the caching works,

00:34:19.234 --> 00:34:21.100
but many times, instead of
having to download

00:34:21.100 --> 00:34:22.701
all your emails,

00:34:22.701 --> 00:34:24.200
it has them already
on the phone.

00:34:24.200 --> 00:34:27.167
So it was noticeably
more snappier.

00:34:27.167 --> 00:34:28.501
They're still working
on some bugs,

00:34:28.501 --> 00:34:30.400
because oftentimes
you end up seeing

00:34:30.400 --> 00:34:33.634
two old emails, and you have to
manually refresh it.

00:34:33.634 --> 00:34:35.834
So there's definitely
still bugs there,

00:34:35.834 --> 00:34:38.968
but it's a very interesting
sort of first draft,

00:34:38.968 --> 00:34:42.200
or first take
on improving performance

00:34:42.200 --> 00:34:44.133
by using these new APIs.

00:34:44.133 --> 00:34:45.701
Ian: And I think that
the current trend towards

00:34:45.701 --> 00:34:47.100
using web toolkits,

00:34:47.100 --> 00:34:50.267
be that GWT
or other toolkits out there--

00:34:50.267 --> 00:34:54.734
You know,
as it becomes possible

00:34:54.734 --> 00:34:56.133
to do more things
on the client,

00:34:56.133 --> 00:34:57.567
or do things in different ways--

00:34:57.567 --> 00:35:00.200
For instance, if some code
that you compiled on GWT

00:35:00.200 --> 00:35:02.934
would now run better
were you using a worker thread,

00:35:02.934 --> 00:35:05.200
that change can be made
in the toolkit

00:35:05.200 --> 00:35:07.834
so that you,
as an application developer,

00:35:07.834 --> 00:35:09.901
might not even have
to do anything.

00:35:09.901 --> 00:35:12.133
We, as the toolkit provider,
could make that change.

00:35:12.133 --> 00:35:15.701
So I think that, you know,
if you're able to use a toolkit,

00:35:15.701 --> 00:35:18.667
not only does that help you do
some extraction and clean code,

00:35:18.667 --> 00:35:22.100
but it also helps other people
help you.

00:35:22.100 --> 00:35:26.167
So not to sort of be
all Google here,

00:35:26.167 --> 00:35:30.601
but things like GWT
are certainly a good way to go.

00:35:30.601 --> 00:35:32.133
Schroepfer: So last question
from me,

00:35:32.133 --> 00:35:33.567
and then I'd love to
open it up to the audience.

00:35:33.567 --> 00:35:35.267
So we have a microphone
on this side

00:35:35.267 --> 00:35:36.367
and a microphone on this side.

00:35:36.367 --> 00:35:38.400
If you want to ask
our panel questions,

00:35:38.400 --> 00:35:40.367
please come on up
to one of the microphones,

00:35:40.367 --> 00:35:42.100
and we'll get you part
of the discussion.

00:35:42.100 --> 00:35:44.367
So my last question:
many of you mentioned mobile.

00:35:44.367 --> 00:35:47.300
Let's be honest, the browser
state on mobile is a total mess.

00:35:47.300 --> 00:35:48.801
I'm sure you've seen
lots of blog posts

00:35:48.801 --> 00:35:50.934
from people looking at
state of implementation

00:35:50.934 --> 00:35:53.634
of different standards across
different devices and phones.

00:35:53.634 --> 00:35:56.534
As a web developer,
it's really hard to understand

00:35:56.534 --> 00:35:58.601
exactly how to understand
this landscape,

00:35:58.601 --> 00:35:59.801
and how to support--

00:35:59.801 --> 00:36:01.033
you know, if I want to support
a billion people

00:36:01.033 --> 00:36:02.434
on all of these
different phones,

00:36:02.434 --> 00:36:04.434
it's a gargantuan effort
to do it.

00:36:04.434 --> 00:36:06.801
So what are all of you doing
to help us clean up

00:36:06.801 --> 00:36:09.667
the mobile mess,
and get a better set

00:36:09.667 --> 00:36:11.400
of supported,
standardized browsers

00:36:11.400 --> 00:36:13.067
across mobile devices?

00:36:13.067 --> 00:36:15.033
Charles: Make better
mobile browsers.

00:36:15.033 --> 00:36:16.334
Jonas: Yeah.

00:36:16.334 --> 00:36:18.000
Charles: I mean,
it's not rocket science.

00:36:18.000 --> 00:36:20.434
It's just, you know,
hard work.

00:36:20.434 --> 00:36:22.601
Jonas: I think the big problem
on mobile--

00:36:22.601 --> 00:36:25.300
I've not done any
mobile development myself,

00:36:25.300 --> 00:36:28.067
but from what I've heard,
the big problem is that

00:36:28.067 --> 00:36:31.434
there's just so many--
there's so many players there.

00:36:31.434 --> 00:36:34.300
It has been so easy to build,
like, a crappy browser

00:36:34.300 --> 00:36:37.367
and put it on mobile phones,
and then people try to use it.

00:36:37.367 --> 00:36:41.734
Whereas...instead of building
a full-fledged web browser.

00:36:41.734 --> 00:36:45.067
That's what we at Mozilla is
definitely pushing

00:36:45.067 --> 00:36:48.200
as an answer to, like,
how do you do a mobile web?

00:36:48.200 --> 00:36:51.234
Let's just put the normal web
on the mobile web.

00:36:51.234 --> 00:36:53.534
Let's put full web browsers
that have

00:36:53.534 --> 00:36:57.000
all capabilities of
desktop browsers on cell phones.

00:36:57.000 --> 00:36:59.567
Like, doing something
cut down is--

00:36:59.567 --> 00:37:03.367
that's a very short-sighted
solution.

00:37:03.367 --> 00:37:08.767
People want to use
all manners of web pages

00:37:08.767 --> 00:37:12.067
that aren't mobilized yet.

00:37:12.067 --> 00:37:15.067
And in order to do that,
you need a full web browser.

00:37:15.067 --> 00:37:18.400
And also, web developers
want to use all the features

00:37:18.400 --> 00:37:21.601
that they've become accustomed
to use on desktop.

00:37:21.601 --> 00:37:24.200
So they also want
a full browser.

00:37:24.200 --> 00:37:26.434
Ian: I think people are also
voting with their feet.

00:37:26.434 --> 00:37:31.334
People meaning both end-users,
but also phone manufacturers.

00:37:31.334 --> 00:37:36.067
So right now we see
a huge sale of iPhones.

00:37:36.067 --> 00:37:38.000
I see a lot of people
in the room with Androids.

00:37:38.000 --> 00:37:42.234
I'm not sure why that is.
I think they gave some out.

00:37:42.234 --> 00:37:43.834
But you know,
if you look at these browsers,

00:37:43.834 --> 00:37:45.000
they all have--

00:37:45.000 --> 00:37:46.367
I'm sorry,
if you look at these phones,

00:37:46.367 --> 00:37:48.701
they all have pretty
full-featured web browsers.

00:37:48.701 --> 00:37:52.167
Both iPhone and Android browser
happen to be based

00:37:52.167 --> 00:37:54.567
off of Webkit,
which is sort of cool for me

00:37:54.567 --> 00:37:57.901
because a lot of the work that
we do on the Google Chrome team,

00:37:57.901 --> 00:37:59.501
we just check straight into
Webkit.

00:37:59.501 --> 00:38:02.100
Which means that, you know,
not only does it end up

00:38:02.100 --> 00:38:04.734
in Safari on the desktop,
but also ends up

00:38:04.734 --> 00:38:06.501
in the Safari browser
on iPhone.

00:38:06.501 --> 00:38:08.434
It ends up
in the Android browser.

00:38:08.434 --> 00:38:11.367
So I think Webkit is actually
doing a lot of great things

00:38:11.367 --> 00:38:13.334
for mobile browsers.

00:38:13.334 --> 00:38:16.133
Certainly the Opera guys have
a ton of experience

00:38:16.133 --> 00:38:17.734
on making good mobile browsers.

00:38:17.734 --> 00:38:19.100
And people are voting
with their feet

00:38:19.100 --> 00:38:22.968
when they go and download
Opera Mini for their phone.

00:38:22.968 --> 00:38:25.601
So I think that, you know,
voting with your feet

00:38:25.601 --> 00:38:29.567
is also a great way
to sort of encourage people

00:38:29.567 --> 00:38:31.334
to do better
in the browser space.

00:38:31.334 --> 00:38:32.901
You know, if you're looking at
buying a new phone,

00:38:32.901 --> 00:38:35.133
buy one that comes with
a good browser.

00:38:35.133 --> 00:38:37.434
Charles: Yeah.
Ian: Or buy a good browser.

00:38:37.434 --> 00:38:39.534
Charles: Or just get
a good browser.

00:38:39.534 --> 00:38:40.834
Download Opera Mini,
you know.

00:38:40.834 --> 00:38:42.801
If you've got an old,
crappy phone,

00:38:42.801 --> 00:38:46.701
one of the issues is phone
systems have been pretty closed.

00:38:46.701 --> 00:38:50.434
Phone operators have been
reluctant to allow people

00:38:50.434 --> 00:38:52.501
to just install
whatever they want

00:38:52.501 --> 00:38:54.701
and do whatever they want
with their phone.

00:38:54.701 --> 00:38:59.467
And they've been pretty tight
about what could go there.

00:38:59.467 --> 00:39:01.834
And phones last a long time.

00:39:01.834 --> 00:39:06.434
The people who go out
and buy a new phone every year

00:39:06.434 --> 00:39:10.400
are a fairly small shim
on top of the market.

00:39:10.400 --> 00:39:12.901
And the phones, you know,
are out there.

00:39:12.901 --> 00:39:14.934
If you go around the markets
around the world,

00:39:14.934 --> 00:39:17.767
you find ten-year-old phones
all over the place.

00:39:17.767 --> 00:39:21.834
Millions and millions
and millions are sold every week

00:39:21.834 --> 00:39:23.567
of ten-year-old phones.

00:39:23.567 --> 00:39:27.634
So part of the issue is, here,
we have this legacy.

00:39:27.634 --> 00:39:33.801
And working out how to build
systems for old devices...

00:39:33.801 --> 00:39:38.801
How to bring not the sort of
20 or 50 million

00:39:38.801 --> 00:39:41.234
richest people in the world
to go out and buy

00:39:41.234 --> 00:39:42.501
the fanciest new thing,

00:39:42.501 --> 00:39:45.801
but the billion or two
who haven't got

00:39:45.801 --> 00:39:47.267
the fanciest new thing,

00:39:47.267 --> 00:39:49.133
and also haven't got
a desktop computer,

00:39:49.133 --> 00:39:50.901
and are gonna use the web
on their phone,

00:39:50.901 --> 00:39:53.267
and will use whatever works
on their phone--

00:39:53.267 --> 00:39:55.667
We've gotta deal with that,
because that's a huge part

00:39:55.667 --> 00:39:58.567
of what makes up
the market.

00:39:58.567 --> 00:39:59.767
Schroepfer: You want to
step up to the mike?

00:39:59.767 --> 00:40:01.067
You got a question
for the panel?

00:40:01.067 --> 00:40:04.067
man: Sure. I'm Vinny,
from PGP Corporation.

00:40:04.067 --> 00:40:07.067
You guys know us
from encrypting mail

00:40:07.067 --> 00:40:09.300
and data content
and stuff like that.

00:40:09.300 --> 00:40:10.868
I have an interesting
observation.

00:40:10.868 --> 00:40:13.901
I've noticed this over the last,
I don't know,

00:40:13.901 --> 00:40:16.000
seven years, eight years.

00:40:16.000 --> 00:40:17.801
As more and more of the content
has been

00:40:17.801 --> 00:40:19.767
moving up onto the clouds,
into the web,

00:40:19.767 --> 00:40:22.601
the fear that I have
is that

00:40:22.601 --> 00:40:25.467
that content isn't
very well protected.

00:40:25.467 --> 00:40:27.834
Now, when I say "protected"
to a browser developer,

00:40:27.834 --> 00:40:29.667
they tend to say to me,
"Well, sure we are.

00:40:29.667 --> 00:40:31.300
"We do SSL, TLS,
or whatever,

00:40:31.300 --> 00:40:33.300
and we protect the data
going up and down."

00:40:33.300 --> 00:40:36.234
But what I'm thinking about,
and what I hear often

00:40:36.234 --> 00:40:38.334
from, you know, the CSOs--

00:40:38.334 --> 00:40:41.968
the chief security officers,
the technology officers...

00:40:41.968 --> 00:40:43.400
folks like the FBI;

00:40:43.400 --> 00:40:45.400
people who care about
the data itself--

00:40:45.400 --> 00:40:50.067
is that the data itself
is not protected.

00:40:50.067 --> 00:40:51.834
Let me give you two cases
in point,

00:40:51.834 --> 00:40:55.067
and I'll offer you
a possible solution.

00:40:55.067 --> 00:40:58.501
Most companies that have very,

00:40:58.501 --> 00:41:01.767
very savvy chief security
officers

00:41:01.767 --> 00:41:05.734
will not let them use iPhones
to access their mail sys--

00:41:05.734 --> 00:41:07.934
They won't let them use Gmail.

00:41:07.934 --> 00:41:10.100
Because there's no way
to encrypt that data.

00:41:10.100 --> 00:41:11.934
I can't send an email
through Gmail

00:41:11.934 --> 00:41:14.567
and encrypt it, and worry
about it being decrypted.

00:41:14.567 --> 00:41:16.000
Yeah, the pipe is protected,

00:41:16.000 --> 00:41:18.734
but that's data's
out of their reach.

00:41:18.734 --> 00:41:21.334
Another good example is--

00:41:21.334 --> 00:41:23.200
and I've seen this happen
a lot now.

00:41:23.200 --> 00:41:25.934
I've seen companies move
their data offline.

00:41:25.934 --> 00:41:29.834
Gosh, we used some third party
to do performance reviews

00:41:29.834 --> 00:41:31.200
for employees.

00:41:31.200 --> 00:41:32.834
And it was interesting to see
that they were typing

00:41:32.834 --> 00:41:35.501
all this stuff on what the
employee was gonna do next year

00:41:35.501 --> 00:41:37.767
into this off-site web site.

00:41:37.767 --> 00:41:39.434
I said, well, gee,
did you vet the employees

00:41:39.434 --> 00:41:40.801
of that off-site web site?

00:41:40.801 --> 00:41:43.701
How do you know that that data
is not well-protected?

00:41:43.701 --> 00:41:46.968
And you know, so again,
I've seen this trend of things

00:41:46.968 --> 00:41:48.634
moving up there
onto the web,

00:41:48.634 --> 00:41:51.634
and people doing backups
off-site.

00:41:51.634 --> 00:41:55.400
Now, we've done a couple
of hacks over the years.

00:41:55.400 --> 00:41:57.367
I've tried to address this.

00:41:57.367 --> 00:41:59.801
Done some NPAPI plug-ins.

00:41:59.801 --> 00:42:03.634
Maybe thought about using Embed
to specify the data

00:42:03.634 --> 00:42:06.100
that is embedded is encrypted,

00:42:06.100 --> 00:42:08.834
and that only the clients
can look at those things.

00:42:08.834 --> 00:42:10.801
But you know, if you look
at the Android phones, and--

00:42:10.801 --> 00:42:12.200
Schroepfer: Sorry,
do you have a question?

00:42:12.200 --> 00:42:13.567
man: Yeah, I do.

00:42:13.567 --> 00:42:15.167
I'm saying that if you look
at the Android phones

00:42:15.167 --> 00:42:17.634
and the iPhones and stuff,

00:42:17.634 --> 00:42:20.767
those browsers don't
really offer you

00:42:20.767 --> 00:42:22.334
any way to extend them

00:42:22.334 --> 00:42:26.601
to identify that data
should be secure.

00:42:26.601 --> 00:42:28.868
What I'd like to see happen
with the browsers,

00:42:28.868 --> 00:42:30.534
and maybe with HTML
and whatever,

00:42:30.534 --> 00:42:33.834
is for you to start
thinking about how to encrypt--

00:42:33.834 --> 00:42:36.300
how to specify that data
be encrypted.

00:42:36.300 --> 00:42:38.434
Again, my fear is that,
you know,

00:42:38.434 --> 00:42:40.033
People, like, wonder
about things like Facebook.

00:42:40.033 --> 00:42:41.601
They say, "Gee,
I put these photos up there,

00:42:41.601 --> 00:42:42.701
"but then Facebook can
look at it,

00:42:42.701 --> 00:42:44.067
or somebody else can
look at it."

00:42:44.067 --> 00:42:45.934
I'd like to be able to encrypt
that data as a customer,

00:42:45.934 --> 00:42:49.100
and only let my friends who have
the right keys look at that.

00:42:49.100 --> 00:42:51.100
That's my opening question.

00:42:51.100 --> 00:42:53.400
Ian: I think one of the problems
with encryption

00:42:53.400 --> 00:42:54.868
that we've seen so far--

00:42:54.868 --> 00:42:56.968
You know, there was this great
sort of seminal paper

00:42:56.968 --> 00:43:00.200
a few years ago called
"Why Johnny Can't Encrypt,"

00:43:00.200 --> 00:43:03.267
which was a great usability--

00:43:03.267 --> 00:43:04.934
I think it was called
"Why Johnny Can't Encrypt."

00:43:04.934 --> 00:43:06.200
man:
It's pretty old, yeah.

00:43:06.200 --> 00:43:09.067
Ian: A great usability study
on PGP 5, I think.

00:43:09.067 --> 00:43:10.200
man: We're at ten.

00:43:10.200 --> 00:43:11.801
Ian: Yes, you're at ten.

00:43:11.801 --> 00:43:14.934
But one of the things
that came up is it's very hard

00:43:14.934 --> 00:43:19.400
to actually figure out
how to teach users what to do.

00:43:19.400 --> 00:43:20.834
You know, people--

00:43:20.834 --> 00:43:23.834
Encryption is not something
that people naturally think of.

00:43:23.834 --> 00:43:25.100
You know, I'll buy
the argument

00:43:25.100 --> 00:43:28.000
that people might want to
protect their email.

00:43:28.000 --> 00:43:29.334
That's a very logical thing
to do.

00:43:29.334 --> 00:43:31.234
They might want to protect
what they put on Facebook.

00:43:31.234 --> 00:43:32.868
But I think that
one of the first things

00:43:32.868 --> 00:43:34.434
that really needs to be
worked out

00:43:34.434 --> 00:43:38.000
before we go down the path
of standardizing PGP

00:43:38.000 --> 00:43:39.400
into the browser
is figuring out

00:43:39.400 --> 00:43:41.734
how do we actually
make this usable?

00:43:41.734 --> 00:43:47.334
You know, show me that
users are actually--

00:43:47.334 --> 00:43:50.067
That there is a good UI
for doing this,

00:43:50.067 --> 00:43:53.334
that users want this,
that there is large demand.

00:43:53.334 --> 00:43:55.767
I'm pretty that you could
do this in JavaScript

00:43:55.767 --> 00:43:58.400
with a Chrome extension
if you wanted to.

00:43:58.400 --> 00:44:00.434
You know, that might be
a radical statement,

00:44:00.434 --> 00:44:03.634
but JavaScript performance
has gotten really good.

00:44:03.634 --> 00:44:06.133
It's a Turing-complete language,
so given enough time,

00:44:06.133 --> 00:44:08.367
you probably should be able
to do it.

00:44:08.367 --> 00:44:11.501
If someone showed me
a very compelling UI

00:44:11.501 --> 00:44:16.601
that would let someone in Gmail
or on Facebook easily say

00:44:16.601 --> 00:44:19.300
encrypt this content,
and only let my friends see it,

00:44:19.300 --> 00:44:21.133
and they worked out all
the user-experience issues

00:44:21.133 --> 00:44:24.300
and said, "Ian, you know,
I've solved it--here it is,"

00:44:24.300 --> 00:44:26.767
that would be very compelling
for me.

00:44:26.767 --> 00:44:30.767
Right now I think those
UX issues are still unresolved.

00:44:30.767 --> 00:44:34.334
I don't mean to demean
any particular product

00:44:34.334 --> 00:44:35.634
for implementation,

00:44:35.634 --> 00:44:37.000
but I think we have
a long way to go

00:44:37.000 --> 00:44:39.467
before my mother can
figure out

00:44:39.467 --> 00:44:42.067
how to send
an encrypted email to me.

00:44:42.067 --> 00:44:44.767
man: So let me retort to you
that along--

00:44:44.767 --> 00:44:47.667
A lot of stuff has happened
since that paper was written.

00:44:47.667 --> 00:44:52.701
And that I'd say about 90%
of the corporate Fortune 100s

00:44:52.701 --> 00:44:55.133
is using, in fact,
our product.

00:44:55.133 --> 00:44:57.634
Okay, um, yes,
I agree with you.

00:44:57.634 --> 00:45:00.133
I'd like to see something
like Embed--

00:45:00.133 --> 00:45:03.367
encrypted text,
something key, whatever;

00:45:03.367 --> 00:45:04.801
leave that up to
the implementers--

00:45:04.801 --> 00:45:06.667
It should be a control panel
no one ever sees.

00:45:06.667 --> 00:45:09.067
But those questions are
being solved.

00:45:09.067 --> 00:45:11.567
Charles: So the questions are
being asked.

00:45:11.567 --> 00:45:14.801
You know, at the beginning, when
I said the exciting technology

00:45:14.801 --> 00:45:19.467
was, you know, all this access
to sensitive information--

00:45:19.467 --> 00:45:23.067
And it's exciting because
it's not a technology question.

00:45:23.067 --> 00:45:26.701
The security stuff is not about:
can we encrypt stuff?

00:45:26.701 --> 00:45:28.067
We know how to do that.

00:45:28.067 --> 00:45:30.601
It really is about
how do we get people

00:45:30.601 --> 00:45:32.701
to understand
what they're doing?

00:45:32.701 --> 00:45:34.801
And how do we get them
to think about it?

00:45:34.801 --> 00:45:36.834
And it's really,
really complicated.

00:45:36.834 --> 00:45:39.200
And every time
you get it wrong--

00:45:39.200 --> 00:45:43.767
You know, if you train
a micro-generation of users

00:45:43.767 --> 00:45:47.133
to do something that turns out
to be a bad idea,

00:45:47.133 --> 00:45:49.734
then you've taken
this huge step backwards.

00:45:49.734 --> 00:45:52.701
We have all this
certificate stuff where,

00:45:52.701 --> 00:45:54.234
you know,
all of the browsers say,

00:45:54.234 --> 00:45:56.133
well, you know,
we've got this certificate,

00:45:56.133 --> 00:45:59.934
and it's unsigned, and it's,
you know, low security,

00:45:59.934 --> 00:46:01.434
and it doesn't really work.

00:46:01.434 --> 00:46:04.200
Do you want to continue
putting your credit card number?

00:46:04.200 --> 00:46:05.501
What do we all do?

00:46:05.501 --> 00:46:07.033
Ian: Yes.
Charles: Yes.

00:46:07.033 --> 00:46:08.801
And we are the experts,
right?

00:46:08.801 --> 00:46:11.167
And we take this huge
backwards step.

00:46:11.167 --> 00:46:14.000
We have learned to do
the stupid thing.

00:46:14.000 --> 00:46:17.367
So we've got to figure out
as we get this right--

00:46:17.367 --> 00:46:19.334
We've got to figure out
how to do it

00:46:19.334 --> 00:46:21.267
in a way that teaches users

00:46:21.267 --> 00:46:24.400
and in a way that users
understand what they're doing.

00:46:24.400 --> 00:46:25.934
How to do the right thing.

00:46:25.934 --> 00:46:28.667
So the research is not
technology.

00:46:28.667 --> 00:46:31.801
The research and the development
is behavior.

00:46:31.801 --> 00:46:35.234
And the web is, you know,
a very, very big environment.

00:46:35.234 --> 00:46:37.367
Researching behavior

00:46:37.367 --> 00:46:39.434
and people's understanding
on the web,

00:46:39.434 --> 00:46:41.100
that's complicated stuff.

00:46:41.100 --> 00:46:43.133
And we're doing it.

00:46:43.133 --> 00:46:44.934
man: My question's regarding--

00:46:44.934 --> 00:46:46.734
with the increase in touch
and multi-touch

00:46:46.734 --> 00:46:48.133
as a user interface,

00:46:48.133 --> 00:46:52.467
not only for mobile devices,
but also laptops and computers,

00:46:52.467 --> 00:46:55.934
that has an implication for how
you might use the web browser,

00:46:55.934 --> 00:46:58.567
the features of the web browser,
and how you might design for it.

00:46:58.567 --> 00:47:01.434
I mean, even with the iPhone,
it has multi-touch features,

00:47:01.434 --> 00:47:05.868
but it also stops it from doing
some other types of interface.

00:47:05.868 --> 00:47:09.133
I'd like to hear your comments
on what would you regard as

00:47:09.133 --> 00:47:11.367
sort of the best practice
for dealing with

00:47:11.367 --> 00:47:13.601
this sort of new touch
and multi-touch environment

00:47:13.601 --> 00:47:14.901
with user interface?

00:47:14.901 --> 00:47:18.901
Jonas: We've had recent
discussions with a vendor.

00:47:18.901 --> 00:47:21.367
I'm not sure if I can
tell you who.

00:47:21.367 --> 00:47:27.701
But about coming out with
DOM API's new standards

00:47:27.701 --> 00:47:31.200
for doing multi-touch,
and so on.

00:47:31.200 --> 00:47:34.367
One of the early problems
we discovered

00:47:34.367 --> 00:47:35.667
as we started doing
mobile stuff--

00:47:35.667 --> 00:47:38.567
this is a long time ago,
not the current effort--

00:47:38.567 --> 00:47:44.801
was that you went to Gmaps--
to Google Maps--

00:47:44.801 --> 00:47:46.801
and you wanted to scroll
on the map,

00:47:46.801 --> 00:47:48.133
instead of scrolling the map,

00:47:48.133 --> 00:47:49.968
what you ended up was
scrolling the page.

00:47:49.968 --> 00:47:56.434
And so there is a effort--
the DOM advanced effort--

00:47:56.434 --> 00:47:59.033
to try to standardize
this better.

00:47:59.033 --> 00:48:00.801
Because, like you say,
there's overlap

00:48:00.801 --> 00:48:05.767
in the various ways
you interact with the browser.

00:48:05.767 --> 00:48:10.534
And so it's not
a solved problem yet.

00:48:10.534 --> 00:48:13.400
There are various solutions,
and they are being debated.

00:48:13.400 --> 00:48:17.868
I haven't heard, like,
where that standard is--

00:48:17.868 --> 00:48:19.934
what the latest news
on that standard is.

00:48:19.934 --> 00:48:22.467
But there's definitely
efforts there

00:48:22.467 --> 00:48:24.000
to sort of improve
the situation.

00:48:24.000 --> 00:48:25.200
Charles: The guy who's
supposed to be working on it

00:48:25.200 --> 00:48:27.067
is sitting over there hiding
instead.

00:48:27.067 --> 00:48:31.501
Jonas: So it's a very
hard problem to solve.

00:48:31.501 --> 00:48:33.968
Especially that fact that
today there are so many things

00:48:33.968 --> 00:48:36.300
that want to react to, like,
on click.

00:48:36.300 --> 00:48:40.767
Whereas, if you're, like,
dragging on a touch interface,

00:48:40.767 --> 00:48:43.000
that is sort of a click,
but sort of not.

00:48:43.000 --> 00:48:46.067
And how does the page or browser
know which one you want to do?

00:48:46.067 --> 00:48:50.968
So I suspect that there is
slowly gonna come new standards

00:48:50.968 --> 00:48:52.434
to deal with this.

00:48:52.434 --> 00:48:56.734
And then, once the standards
have been slowly deployed,

00:48:56.734 --> 00:49:00.334
websites will slowly start
to take advantage of them.

00:49:00.334 --> 00:49:04.300
The best help here is
gonna be

00:49:04.300 --> 00:49:06.400
when more people start
mobile browsing.

00:49:06.400 --> 00:49:08.667
So the more this turns into
an actual problem for people

00:49:08.667 --> 00:49:10.434
and for websites,

00:49:10.434 --> 00:49:12.901
the faster we'll find
a solution.

00:49:12.901 --> 00:49:16.334
Charles: Right, there's this
legacy of dirty, messy code

00:49:16.334 --> 00:49:18.701
that is causing problems.

00:49:18.701 --> 00:49:20.968
And everything we try and do
gets complicated

00:49:20.968 --> 00:49:23.734
by the fact that there's a whole
chunk of the web out there

00:49:23.734 --> 00:49:27.567
that will break if we do
anything that seems intelligent.

00:49:27.567 --> 00:49:30.968
And so, you know, if you guys
go back and figure out

00:49:30.968 --> 00:49:34.100
how to clean up your stuff,
then that would be helpful.

00:49:34.100 --> 00:49:37.267
That would be a part
of the best practice

00:49:37.267 --> 00:49:40.300
that will enable us to build--
us all--

00:49:40.300 --> 00:49:42.834
because developers do
most of the thinking here--

00:49:42.834 --> 00:49:45.400
to build new best practices
and make things go.

00:49:45.400 --> 00:49:48.133
But interfaces change
all the time.

00:49:48.133 --> 00:49:51.667
Controlled interfaces--
touch and multi-touch

00:49:51.667 --> 00:49:54.667
and gravity stuff.

00:49:54.667 --> 00:49:56.267
And you go into
the accessibility world,

00:49:56.267 --> 00:49:58.367
where you have people
with disabilities

00:49:58.367 --> 00:50:02.834
who've been using
brain-wave control, literally,

00:50:02.834 --> 00:50:08.467
and voice and multi-touch stuff
for years and decades.

00:50:08.467 --> 00:50:10.467
There's a lot
of this stuff around.

00:50:10.467 --> 00:50:12.968
It's about figuring out
how to integrate it.

00:50:12.968 --> 00:50:16.200
And it's really about, you know,
how can we clean up the way

00:50:16.200 --> 00:50:20.167
that people understand
the interaction piece

00:50:20.167 --> 00:50:24.267
of an application
so that we can make nicer code

00:50:24.267 --> 00:50:31.400
and nicer APIs available
without busting half the web?

00:50:31.400 --> 00:50:34.667
man: How do you see the future
and the role

00:50:34.667 --> 00:50:39.767
of browser extensions?

00:50:39.767 --> 00:50:42.734
Jonas: I think browser exten--

00:50:42.734 --> 00:50:46.033
I mean, to me,
the browser is really is your--

00:50:46.033 --> 00:50:47.367
Once you have installed
a browser,

00:50:47.367 --> 00:50:48.601
it's your piece of software.

00:50:48.601 --> 00:50:50.934
You should be able to do
whatever you want with it.

00:50:50.934 --> 00:50:53.801
And so the more powerful
extensions

00:50:53.801 --> 00:50:56.000
that are available
for that browser, the better.

00:50:56.000 --> 00:51:00.667
So I'm definitely very
pro browser and pro extensions.

00:51:00.667 --> 00:51:04.734
I mean, look at the extension
community we have for Firefox.

00:51:04.734 --> 00:51:05.934
It's really amazing.

00:51:05.934 --> 00:51:07.734
And I'm sure a good chunk
of the reason

00:51:07.734 --> 00:51:09.434
people switch to Firefox
is because

00:51:09.434 --> 00:51:10.868
there's some extension
that they want.

00:51:10.868 --> 00:51:15.801
The downside, or the other side
of that is security.

00:51:15.801 --> 00:51:21.167
We want people to be secure
at the same time.

00:51:21.167 --> 00:51:23.801
And the more sort of power
we give to extensions--

00:51:23.801 --> 00:51:26.501
the more things they can do,
the more awesome they get--

00:51:26.501 --> 00:51:29.868
the bigger the risk that
they do something evil and bad.

00:51:29.868 --> 00:51:32.868
Or the risk that they have
some security problem in them,

00:51:32.868 --> 00:51:35.200
and someone hacks them,
and then you have full access

00:51:35.200 --> 00:51:36.734
to whatever power
that they had.

00:51:36.734 --> 00:51:41.567
So I definitely think
that extensions are

00:51:41.567 --> 00:51:43.501
a very good thing.

00:51:43.501 --> 00:51:46.434
And we just need to sort of--

00:51:46.434 --> 00:51:48.234
It's not a perfect system yet,

00:51:48.234 --> 00:51:50.367
and it's never gonna be
a perfect system.

00:51:50.367 --> 00:51:53.033
But we need to improve, and
we need to make it more secure

00:51:53.033 --> 00:51:54.901
and easier to deal with.

00:51:54.901 --> 00:51:59.033
The other side too is the
Greasemonkey-type extensions,

00:51:59.033 --> 00:52:02.000
where you actually extend
web pages.

00:52:02.000 --> 00:52:03.901
And that's one of the things,
I think,

00:52:03.901 --> 00:52:06.601
where HTML has really triumphed,

00:52:06.601 --> 00:52:08.367
in the sense that you could
never do something

00:52:08.367 --> 00:52:11.534
like Greasemonkey
for your desktop applications.

00:52:11.534 --> 00:52:14.834
The applications I install
on my iPhone

00:52:14.834 --> 00:52:17.734
are never gonna have, like,
Greasemonkey plug-ins

00:52:17.734 --> 00:52:20.367
that allow me to, like,
improve the applications.

00:52:20.367 --> 00:52:23.167
But the websites I use are--

00:52:23.167 --> 00:52:28.734
The ecosystem around the web
is such that you can

00:52:28.734 --> 00:52:30.367
reach into various aspects.

00:52:30.367 --> 00:52:32.267
You can change the looks
of things.

00:52:32.267 --> 00:52:34.334
And you can also add
functionality,

00:52:34.334 --> 00:52:36.300
or change functionality
as you want.

00:52:36.300 --> 00:52:40.501
So that is a very
powerful thing of the web.

00:52:40.501 --> 00:52:43.000
And I think that's, uh...

00:52:43.000 --> 00:52:44.901
I don't know if it'll be
a major competitive advantage

00:52:44.901 --> 00:52:47.067
to the web, as opposed
to desktop applications,

00:52:47.067 --> 00:52:49.334
but it's definitely
something that,

00:52:49.334 --> 00:52:51.634
for the people that use it,
it's a very powerful thing.

00:52:51.634 --> 00:52:52.801
Ian: At the beginning
of the talk,

00:52:52.801 --> 00:52:55.467
we were talking about
how do you use a browser

00:52:55.467 --> 00:52:56.834
to decide what to implement?

00:52:56.834 --> 00:52:58.501
And I think it was Charles
who said, you know,

00:52:58.501 --> 00:53:00.701
if you go out there and you show
that there's a need for it,

00:53:00.701 --> 00:53:03.033
and a lot of people want it--
that will implement it--

00:53:03.033 --> 00:53:06.367
I think extensions provide a way
to show that need.

00:53:06.367 --> 00:53:10.701
A few years ago, when phishing
was just sort of entering

00:53:10.701 --> 00:53:12.300
the common vocabulary,

00:53:12.300 --> 00:53:14.767
Google went out and put on
an extension for Firefox--

00:53:14.767 --> 00:53:16.300
the Safe Browsing extension,

00:53:16.300 --> 00:53:19.000
which basically provided
warnings

00:53:19.000 --> 00:53:21.167
when you hit
a suspected phishing site.

00:53:21.167 --> 00:53:24.200
And now that functionality is
in all the browsers.

00:53:24.200 --> 00:53:27.067
Why? Because we showed
that we could do it.

00:53:27.067 --> 00:53:28.434
People started downloading it

00:53:28.434 --> 00:53:30.167
and showed that there was
a demand for it.

00:53:30.167 --> 00:53:32.868
And it was validated
as a reasonable idea.

00:53:32.868 --> 00:53:34.400
And so now it's one
of the standard things

00:53:34.400 --> 00:53:35.567
on most browsers.

00:53:35.567 --> 00:53:38.133
So I think extensions have
a great role

00:53:38.133 --> 00:53:41.434
in not only just customizing
your browser

00:53:41.434 --> 00:53:42.868
to meet your experience,

00:53:42.868 --> 00:53:46.200
but also in validating that
something is a good idea

00:53:46.200 --> 00:53:48.634
for a browser, and that
there is demand for it,

00:53:48.634 --> 00:53:49.667
and that it should become part

00:53:49.667 --> 00:53:52.434
of the standard
browsing experience.

00:53:52.434 --> 00:53:55.868
Charles: So extensibility
gives a community a chance

00:53:55.868 --> 00:53:59.100
to either show
where a browser should go,

00:53:59.100 --> 00:54:00.634
or take something--

00:54:00.634 --> 00:54:02.534
You know, a lot of the stuff
that we've done at Opera,

00:54:02.534 --> 00:54:05.601
that's like Mouse Gestures
and things we've had for ages--

00:54:05.601 --> 00:54:06.901
speed dials and stuff--

00:54:06.901 --> 00:54:10.467
people go and develop
as Firefox extensions.

00:54:10.467 --> 00:54:13.834
It gives you this quick way
of copying stuff,

00:54:13.834 --> 00:54:16.000
or of testing stuff out.

00:54:16.000 --> 00:54:18.400
It suffers from some drawbacks.

00:54:18.400 --> 00:54:20.400
You don't want
your core functionality

00:54:20.400 --> 00:54:23.901
to be based on, you know,
some chain of extensibility

00:54:23.901 --> 00:54:28.701
because the inherent difference
in security and stuff.

00:54:28.701 --> 00:54:31.968
So you want to use that
as a way seeing

00:54:31.968 --> 00:54:34.734
where people are going,
what's good

00:54:34.734 --> 00:54:37.467
as a guide to, you know,
what should you bring in

00:54:37.467 --> 00:54:39.267
to the central core?

00:54:39.267 --> 00:54:43.968
But extensibility in general--
that's a programming paradigm.

00:54:43.968 --> 00:54:45.968
Helps people do stuff.

00:54:45.968 --> 00:54:50.467
man: Specifically, what
functional or design patents

00:54:50.467 --> 00:54:54.334
have inhibited, I guess, the
development and implementation

00:54:54.334 --> 00:54:58.234
of new browser standards?

00:54:58.234 --> 00:55:00.534
Charles: You mean by number,
or just, like,

00:55:00.534 --> 00:55:02.367
the author and date?
[chuckles]

00:55:02.367 --> 00:55:03.901
man: In general, I guess.

00:55:03.901 --> 00:55:07.033
What have you run into
where maybe Apple or Microsoft

00:55:07.033 --> 00:55:08.834
has said nope,
you can't do that,

00:55:08.834 --> 00:55:10.434
or do it differently?

00:55:10.434 --> 00:55:14.234
Ian: I think some of your
question is alluding to, like,

00:55:14.234 --> 00:55:15.701
our people saying,
"No, don't do that."

00:55:15.701 --> 00:55:17.801
But I think a lot of it is
just practical constraints,

00:55:17.801 --> 00:55:19.200
at least on the Chrome side.

00:55:19.200 --> 00:55:22.367
We look at things like
Web Workers.

00:55:22.367 --> 00:55:24.968
And it seems like
that should be so trivial

00:55:24.968 --> 00:55:26.467
to implement in Chrome.

00:55:26.467 --> 00:55:29.467
But then we hit
all these issues like, you know,

00:55:29.467 --> 00:55:31.968
to do XHR from a Worker,

00:55:31.968 --> 00:55:35.367
you need to know the origin
of the request.

00:55:35.367 --> 00:55:36.667
A simple thing.

00:55:36.667 --> 00:55:38.868
But when you're
in multiprocess land,

00:55:38.868 --> 00:55:40.300
like you are in Chrome,

00:55:40.300 --> 00:55:42.100
you are in a separate process.

00:55:42.100 --> 00:55:44.167
You might not actually
have access to that data.

00:55:44.167 --> 00:55:46.734
So on the Chrome side,
we actually hit

00:55:46.734 --> 00:55:49.534
a lot of these practical
considerations that--

00:55:49.534 --> 00:55:51.400
You know, before we released,

00:55:51.400 --> 00:55:53.000
people developing
these standards

00:55:53.000 --> 00:55:54.968
weren't necessarily thinking,
you know,

00:55:54.968 --> 00:55:56.467
how is this actually gonna
play out

00:55:56.467 --> 00:55:58.400
in a multiprocess environment?

00:55:58.400 --> 00:56:01.200
And now people are actually
starting to think about that.

00:56:01.200 --> 00:56:02.868
And so that's--

00:56:02.868 --> 00:56:04.801
I don't know if that's
functional or--

00:56:04.801 --> 00:56:07.467
That's one of the things
that is certainly interesting

00:56:07.467 --> 00:56:10.767
from my perspective in terms
of things that sound like

00:56:10.767 --> 00:56:11.901
they should be easy,

00:56:11.901 --> 00:56:14.033
but actually turn out
to be quite hard.

00:56:14.033 --> 00:56:17.567
Charles: Was your question
about patterns or patents?

00:56:17.567 --> 00:56:19.000
man: "Patents."
Charles: Oh, patents.

00:56:19.000 --> 00:56:22.234
man: Yes,
like registered patents.

00:56:22.234 --> 00:56:27.267
Jonas: Well, the first thing
I think when you say patents

00:56:27.267 --> 00:56:28.601
is video.

00:56:28.601 --> 00:56:31.100
The video situation right now
is really, really bad

00:56:31.100 --> 00:56:33.567
in the sense that
there's all sort

00:56:33.567 --> 00:56:35.000
of ridiculous patents
out there.

00:56:35.000 --> 00:56:36.767
And the most popular format,

00:56:36.767 --> 00:56:39.400
and arguably
a very good format, is H264.

00:56:39.400 --> 00:56:41.901
We just can't use because
there's patents on it.

00:56:41.901 --> 00:56:43.501
There's just no way.

00:56:43.501 --> 00:56:45.934
And we would love to do it.
There's code out there.

00:56:45.934 --> 00:56:47.734
There's open-source code
out there.

00:56:47.734 --> 00:56:50.167
We could just, you know,
plug it in.

00:56:50.167 --> 00:56:52.934
But we can't, technically
and financially, do it

00:56:52.934 --> 00:56:54.534
because of patents.

00:56:54.534 --> 00:57:00.367
And similarly...

00:57:00.367 --> 00:57:04.200
everything around video is
so heavily patented

00:57:04.200 --> 00:57:09.901
that Apple has said that, well,
OGG looks decent enough.

00:57:09.901 --> 00:57:12.234
But if we implement it,
we have no idea

00:57:12.234 --> 00:57:14.434
if we're gonna get sued
because it's very likely

00:57:14.434 --> 00:57:16.934
that there's a patent somewhere
that no one has thought about,

00:57:16.934 --> 00:57:18.701
or that might be
a submarine patent

00:57:18.701 --> 00:57:20.200
that no one knows about yet.

00:57:20.200 --> 00:57:23.300
And so they just, out of fear
of getting sued,

00:57:23.300 --> 00:57:25.234
they don't want to implement it.

00:57:25.234 --> 00:57:29.300
No one knows to a patent,
but just, it's--

00:57:29.300 --> 00:57:33.133
There's probably a patent,
or quite possibly a patent.

00:57:33.133 --> 00:57:36.534
man: Do you see a solution
for these kind of problems?

00:57:36.534 --> 00:57:40.067
Charles: So walking into any
new area of technology--

00:57:40.067 --> 00:57:43.100
Every time the web goes into
some new area of technology,

00:57:43.100 --> 00:57:46.734
you find that
in most areas of technology

00:57:46.734 --> 00:57:48.400
there are patents.

00:57:48.400 --> 00:57:50.300
And some companies,
you know--

00:57:50.300 --> 00:57:52.601
I don't know of Microsoft
holding a patent

00:57:52.601 --> 00:57:57.567
over anybody to stop development
of the web at any time ever.

00:57:57.567 --> 00:58:02.834
And I do know of them,
before the W3C patent policy--

00:58:02.834 --> 00:58:05.567
which was a fairly radical step
of saying, you know,

00:58:05.567 --> 00:58:08.167
"We want people to make
a royalty-free web.

00:58:08.167 --> 00:58:11.133
We want the stuff to be
patent-free, if we can."

00:58:11.133 --> 00:58:13.300
Microsoft voluntarily stepped up
and said

00:58:13.300 --> 00:58:15.634
we've got this patent,
and we will put it down

00:58:15.634 --> 00:58:17.767
on the conditions which are
what are now

00:58:17.767 --> 00:58:19.667
the W3C conditions.

00:58:19.667 --> 00:58:23.934
In things like Voice, you know,
going into Voice.

00:58:23.934 --> 00:58:27.834
In, as Jonas said, 
video is a minefield.

00:58:27.834 --> 00:58:32.567
Going into a couple of areas,
there have been patents.

00:58:32.567 --> 00:58:37.901
Apple is currently excluding
a patent on the widget space.

00:58:37.901 --> 00:58:42.234
And, you know, the solution is
that we sit down

00:58:42.234 --> 00:58:45.667
and we look--
either with the patent holder--

00:58:45.667 --> 00:58:47.534
You know, because
people file patents,

00:58:47.534 --> 00:58:50.634
and it costs them money,
and they do have a right to say

00:58:50.634 --> 00:58:52.634
I want to actually recoup
some of the money

00:58:52.634 --> 00:58:54.234
I got from this work.

00:58:54.234 --> 00:58:57.167
But you can either sit down
with the patent holder

00:58:57.167 --> 00:59:01.467
and say, well, all right,
if we're going to do this,

00:59:01.467 --> 00:59:04.100
either we agree
to all pay up money--

00:59:04.100 --> 00:59:07.934
And in the W3C world,
that's not an answer.

00:59:07.934 --> 00:59:10.100
It's like, we've gotta
figure out a way around it.

00:59:10.100 --> 00:59:12.767
So Apple can come and help us
work out

00:59:12.767 --> 00:59:14.968
how to avoid infringing
their patent,

00:59:14.968 --> 00:59:16.734
and still provide
a functionality

00:59:16.734 --> 00:59:19.334
that's the thing
we were aiming at.

00:59:19.334 --> 00:59:22.767
Or we go out to the community
and say, look, you know,

00:59:22.767 --> 00:59:24.467
we're not getting anywhere.

00:59:24.467 --> 00:59:27.033
We've gotta figure this out
as a community,

00:59:27.033 --> 00:59:28.868
and it's a big,
complicated process.

00:59:28.868 --> 00:59:32.434
It's like, what is the history
behind this patent?

00:59:32.434 --> 00:59:36.934
What other patents are out there
that might cover something--

00:59:36.934 --> 00:59:40.934
An expired patent that covers
similar stuff that we could use.

00:59:40.934 --> 00:59:44.801
Or some prior art
that shows the patent holder

00:59:44.801 --> 00:59:46.834
that actually it's not really
worth their while

00:59:46.834 --> 00:59:48.334
enforcing this.

00:59:48.334 --> 00:59:51.901
And in the past, in some cases,
that's what's happened.

00:59:51.901 --> 00:59:54.567
That someone has said
we've got patents on,

00:59:54.567 --> 00:59:57.300
you know, this sort of
scene-updating technology

00:59:57.300 --> 00:59:58.701
or something.

00:59:58.701 --> 01:00:01.801
And we sit down,
and we can't make any headway,

01:00:01.801 --> 01:00:03.234
and we go out and start
looking around,

01:00:03.234 --> 01:00:04.400
and people say,
"Wait a minute.

01:00:04.400 --> 01:00:08.000
You got the patent, but like,
ten years before

01:00:08.000 --> 01:00:09.300
you ever applied for it,

01:00:09.300 --> 01:00:11.300
there were 15 applications
doing it."

01:00:11.300 --> 01:00:13.400
And the patent holder looks at
it and says "Yeah, you're right.

01:00:13.400 --> 01:00:16.000
Don't worry about it.
Just go ahead and use it."

01:00:16.000 --> 01:00:17.467
Schroepfer: So we're
just about out of time.

01:00:17.467 --> 01:00:18.601
Or, we are out of time.

01:00:18.601 --> 01:00:20.267
Quick closing remarks
from each of you.

01:00:20.267 --> 01:00:21.534
We'll start with you, Ian.

01:00:21.534 --> 01:00:23.601
Any thoughts you have
for the audience?

01:00:23.601 --> 01:00:26.467
Ian: I just--I'm very excited
by the direction

01:00:26.467 --> 01:00:27.834
that browsers are going.

01:00:27.834 --> 01:00:30.601
I think all the browsers,
both onstage and offstage,

01:00:30.601 --> 01:00:32.467
are getting better.

01:00:32.467 --> 01:00:34.100
And I know that we're all
very motivated

01:00:34.100 --> 01:00:36.000
to continue that direction.

01:00:36.000 --> 01:00:37.901
We're all providing a lot
of new functionality.

01:00:37.901 --> 01:00:39.968
I hope that you all
in the audience

01:00:39.968 --> 01:00:42.667
start taking advantage of it
and certainly give us feedback.

01:00:42.667 --> 01:00:44.667
And, you know,
if there's a direction

01:00:44.667 --> 01:00:46.901
that you think that we should be
going in that we're not,

01:00:46.901 --> 01:00:49.100
let us know.

01:00:49.100 --> 01:00:54.400
Jonas: Yeah, I'm very excited
that the web has changed a lot

01:00:54.400 --> 01:00:55.667
over the past few years.

01:00:55.667 --> 01:00:58.267
Just a few years ago,
nothing was basically happening.

01:00:58.267 --> 01:01:00.734
The web had looked the same
for a few years,

01:01:00.734 --> 01:01:03.334
and there was no new,
significant innovation.

01:01:03.334 --> 01:01:07.167
And now we have, what,
five major browsers

01:01:07.167 --> 01:01:11.067
that are very heavily
competing with each other.

01:01:11.067 --> 01:01:13.734
And just the improvements
that's happened in JavaScript

01:01:13.734 --> 01:01:17.901
are very sort of indicative
of how much competition

01:01:17.901 --> 01:01:19.501
and how much improvement
we're actually seeing.

01:01:19.501 --> 01:01:22.701
So I'm very excited
to be part of this.

01:01:22.701 --> 01:01:24.501
Charles: So it's exciting.

01:01:24.501 --> 01:01:27.968
It's like, you know,
we're in this brave new world.

01:01:27.968 --> 01:01:30.868
One of the things
that I see more of,

01:01:30.868 --> 01:01:33.834
and would like to see a lot
more of, is professionalism.

01:01:33.834 --> 01:01:37.701
Let's get together, and let's
do our work on our own

01:01:37.701 --> 01:01:39.701
and make it better,
you know.

01:01:39.701 --> 01:01:42.667
Because the web started off
being a bunch of cowboys

01:01:42.667 --> 01:01:44.567
and a bunch of crazy people
doing stuff

01:01:44.567 --> 01:01:46.300
and just lashing it up.

01:01:46.300 --> 01:01:48.300
And there is a place for that.

01:01:48.300 --> 01:01:51.234
And we should all remember
that if you don't do that,

01:01:51.234 --> 01:01:52.868
you stagnate and get bored

01:01:52.868 --> 01:01:56.200
and go off and become a mechanic
or a plumber or something.

01:01:56.200 --> 01:02:00.200
But there is also a place
for being professional

01:02:00.200 --> 01:02:01.868
and caring about quality,

01:02:01.868 --> 01:02:04.667
and caring about
maintaining stuff.

01:02:04.667 --> 01:02:06.734
Thinking about stuff
that's gonna be around

01:02:06.734 --> 01:02:10.300
when you're not working on it
anymore, and where it goes.

01:02:10.300 --> 01:02:14.701
And, you know, I see that there
is a whole lot more of that.

01:02:14.701 --> 01:02:17.400
And I'd like to see
even more.

01:02:17.400 --> 01:02:19.567
The browsers are getting better.

01:02:19.567 --> 01:02:22.300
I mean, browsers used to be
this sort of crazy project

01:02:22.300 --> 01:02:23.834
that you'd lash together.

01:02:23.834 --> 01:02:26.801
Now they're turning into
an important piece of software,

01:02:26.801 --> 01:02:28.767
and we're working harder
on making it

01:02:28.767 --> 01:02:30.434
a really good piece
of software.

01:02:30.434 --> 01:02:32.133
The developers are
getting better.

01:02:32.133 --> 01:02:33.901
Developers are actually
thinking harder about

01:02:33.901 --> 01:02:35.767
what impact they have,

01:02:35.767 --> 01:02:38.934
and what impact it has
when they do a good job.

01:02:38.934 --> 01:02:42.501
And what impact it has
when they think about stuff

01:02:42.501 --> 01:02:46.000
that's gonna be, maybe, around
for a long time.

01:02:46.000 --> 01:02:47.934
Or how they're gonna change it

01:02:47.934 --> 01:02:50.801
so that their embarrassing
first effort--

01:02:50.801 --> 01:02:53.767
which is always my case--
doesn't stick around.

01:02:53.767 --> 01:02:56.634
But it gets replaced
by something cleaner and better.

01:02:56.634 --> 01:02:57.968
It's fun.
Schroepfer: Great.

01:02:57.968 --> 01:03:00.300
I want to thank the panel
for great thoughts

01:03:00.300 --> 01:03:01.501
on browser futures.

01:03:01.501 --> 01:03:02.567
Thank you very much.

01:03:02.567 --> 01:03:06.834
[applause]

