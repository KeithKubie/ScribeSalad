WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:07.160
&gt;&gt; Sean: Arno says "Could you say 'hello world' for us?
&gt;&gt; BWK:  hello world 
&gt;&gt; Sean: Fantastic!

00:00:07.160 --> 00:00:10.910
&gt;&gt; Sean: [reading out a viewer question]
Did the dominant linguistic theories of
the time consciously or unconsciously

00:00:10.910 --> 00:00:15.450
influence the design of certain
programming languages? 
&gt;&gt; BWK: I suspect the

00:00:15.450 --> 00:00:19.289
answer is 'yes' in some ways.  I'm not sure
that I'm enough of a historian to know

00:00:19.289 --> 00:00:25.410
for sure, but for example languages like
C derived from languages like, in

00:00:25.410 --> 00:00:30.269
particular BCPL, which of course were
influenced - sometimes positively,

00:00:30.269 --> 00:00:34.710
sometimes in a sort of reactionary way
to Algol, which was really really

00:00:34.710 --> 00:00:39.180
fundamental. But also Fortran, which was, I
would say, less theoretical in every

00:00:39.180 --> 00:00:43.980
respect but very much more pragmatic in
a way.  So things are influenced by what

00:00:43.980 --> 00:00:46.770
went before and sometimes it's: "Wow we need more of

00:00:46.770 --> 00:00:51.840
that!", and sometimes it's "... Hmmm, we need less
of that", and do something different.  So

00:00:51.840 --> 00:00:57.690
those would be examples.  C++ would be
another one, influenced by the wonderful

00:00:57.690 --> 00:01:03.989
engineering that went into C -- efficiency,
obvious mechanisms, and so on, but at the

00:01:03.989 --> 00:01:08.460
same time taking what came from Simula,
the idea of classes in particular. Simula

00:01:08.460 --> 00:01:13.439
is a language that, I think, didn't get
the recognition that it [deserved].  When Nygaard

00:01:13.439 --> 00:01:18.390
got the Turing award for it, that was
recognition, finally.   But C++ [was] clearly

00:01:18.390 --> 00:01:26.280
influenced by those two streams coming
together.  More modern example: Go, which

00:01:26.280 --> 00:01:31.290
the pragmatic part of it, the syntax, the
minimalism and so on very strongly

00:01:31.290 --> 00:01:36.240
influenced by C, but on the other side
the module structure influenced by all

00:01:36.240 --> 00:01:41.460
of the things that came from Algol
through [Ni]klaus Wirth -- Modula, Pascal,

00:01:41.460 --> 00:01:47.220
Modula, Oberon, all of those things. And
then the 'communicating sequential

00:01:47.220 --> 00:01:52.110
processes' work of Tony Hoare.  So those
three streams come together and

00:01:52.110 --> 00:01:57.750
certainly Tony Hoare's view of this was,
let's call it a theoretical approach.  So

00:01:57.750 --> 00:02:01.860
all of these things come together. So,
it's not like things come full-blown

00:02:01.860 --> 00:02:08.099
from the head of Zeus.  They are based on
what has gone before. 
&gt;&gt; Sean: I've got a few

00:02:08.099 --> 00:02:13.280
people saying just pass on thank you.
So, thank you! 
&gt;&gt; BWK:  Thank you all

00:02:13.280 --> 00:02:18.500
&gt;&gt; Sean: What are your thoughts on writing
'secured by design' software in C today?

00:02:18.500 --> 00:02:21.740
Is it better, as a result, for
inexperienced programmers to use something

00:02:21.740 --> 00:02:26.630
higher level - something else? 
&gt;&gt; BWK:  I think writing secure software 
you should do it

00:02:26.630 --> 00:02:31.100
by design.  If you don't [i.e.] glue it on
afterwards -- that won't work.  You have to

00:02:31.100 --> 00:02:36.050
think very carefully about what you do. I
think the problem with C is that the

00:02:36.050 --> 00:02:39.620
language itself doesn't provide you with
many mechanisms for making sure that

00:02:39.620 --> 00:02:44.300
your code is secure. So, there's lots of
ways in which you can inadvertently make

00:02:44.300 --> 00:02:50.120
a mistake and the compiler is not able to
help you.  And so for many purposes, a

00:02:50.120 --> 00:02:55.850
higher-level language would probably be
wiser because some of them may offer -- array

00:02:55.850 --> 00:03:01.310
overflow is an obvious example.
buffer overrun is one of the common

00:03:01.310 --> 00:03:05.209
things that goes wrong with C programs.
It doesn't go wrong, at least in that

00:03:05.209 --> 00:03:11.300
sense, with any language which is
manipulating strings or arrays for you,

00:03:11.300 --> 00:03:15.230
in keeping track of the bounds of them.
So, it's possible to screw up in any

00:03:15.230 --> 00:03:21.680
language - absolutely -  but I think C is by
design a very, very sharp tool. And you

00:03:21.680 --> 00:03:28.489
can cut yourself as well as cutting through things.  
&gt;&gt; Sean: Tabs or spaces? 
&gt;&gt; BWK: Tabs or spaces.

00:03:28.489 --> 00:03:34.010
I started out with tabs because
that's the way that UNIX was done.  Ken

00:03:34.010 --> 00:03:36.950
Thompson and Dennis Ritchie used tabs,
everybody used tabs, there was no notion

00:03:36.950 --> 00:03:41.420
of spaces, and this was partly the
minimalism -- why type 4 characters

00:03:41.420 --> 00:03:46.459
when you could type one?  But the problem
is that things tend to get wide after a

00:03:46.459 --> 00:03:51.049
while, and especially in a language
like Java which is intrinsically wide.

00:03:51.049 --> 00:03:57.019
I think spaces are a better fit for most
people, and so I think now, when I'm

00:03:57.019 --> 00:04:01.519
writing my own code, I mostly use spaces
and every once in a while I get bitten

00:04:01.519 --> 00:04:05.660
because there's a tab when there should
have been a space, or vice versa.  Some

00:04:05.660 --> 00:04:11.660
languages, in particular Go, enforce a
standard format, period.  And the standard

00:04:11.660 --> 00:04:17.000
format uses tabs, and that's it.
But you can display the tabs as any

00:04:17.000 --> 00:04:20.530
number of spaces, so that the visual
effect is right.

00:04:20.530 --> 00:04:24.440
&gt;&gt; Sean: "Sinful [Citrus]" would like to know what you're
involved in now? Innovations or

00:04:24.440 --> 00:04:29.270
recreational ... Comp Sci?
&gt;&gt; BWK: I'm glad you qualify it because

00:04:29.270 --> 00:04:32.150
recreational, my wife and I are on
vacation in England and having a

00:04:32.150 --> 00:04:38.360
wonderful time, thank you.
Technically, at the moment I am

00:04:38.360 --> 00:04:45.350
trying to gear up for a class in the fall,
where I'm going back after a several year

00:04:45.350 --> 00:04:52.700
layoff to the class that I've been teaching
for non-technical people.  And I did

00:04:52.700 --> 00:04:56.330
that for a long time, probably fifteen
years or more.  I can put in a plug for

00:04:56.330 --> 00:04:59.450
the book, called "Understanding the
Digital World"; please buy many copies for

00:04:59.450 --> 00:05:05.630
yourself and your friends (!)  But I had a
three year layoff on that and so I'm

00:05:05.630 --> 00:05:09.020
back to doing that in the fall.  And of
course the world changes and so there

00:05:09.020 --> 00:05:13.700
are things that I didn't cover properly,
I think, or enough, in previous go-arounds

00:05:13.700 --> 00:05:16.700
that I want to include this time.   The
obvious things are things related to

00:05:16.700 --> 00:05:20.060
machine learning, big data, natural
language processing, and so what is

00:05:20.060 --> 00:05:24.590
all of that stuff?  How do you explain
that for people who are not technical

00:05:24.590 --> 00:05:28.490
but are probably going to be making
decisions on behalf of those who are

00:05:28.490 --> 00:05:34.250
technical?  And so on. That's one of the
things that I'm worrying about at the

00:05:34.250 --> 00:05:39.140
moment.  The other thing that I've been
playing with off and on, really as a

00:05:39.140 --> 00:05:43.700
dilettante, is issues in and around the
digital humanities.  We had talked earlier

00:05:43.700 --> 00:05:49.190
about how computing spreads into lots
and lots of different areas.  So digital

00:05:49.190 --> 00:05:52.640
humanities is basically doing with
[a] computer the kinds of things of

00:05:52.640 --> 00:05:56.510
analyzing data and drawing inferences
from it and making it available to other

00:05:56.510 --> 00:06:00.410
people and so on that you do with any
other kind of data.  But the data comes

00:06:00.410 --> 00:06:05.690
from really, really interesting sources,
often somewhat elderly.  This goes back to

00:06:05.690 --> 00:06:11.900
my interest in history.  And so I have
been over the last couple of years, I had

00:06:11.900 --> 00:06:16.130
run computer science seminars, that is,
seminars for computer science students

00:06:16.130 --> 00:06:19.970
who are doing independent work in
digital humanities, studying datasets

00:06:19.970 --> 00:06:26.360
from all kinds of weird things.  And I'm
in addition supervising independent work --

00:06:26.360 --> 00:06:31.820
one semester and senior thesis work -- for
undergraduates on digital humanities. And

00:06:31.820 --> 00:06:37.610
so I keep going on that, but very much as
a dilettante.  I could talk for a long time

00:06:37.610 --> 00:06:40.430
about it but it would become obvious
that I didn't

00:06:40.430 --> 00:06:45.980
what I was talking about.  So that would
be fine and so that's another aspect.  And

00:06:45.980 --> 00:06:48.650
of course the same kinds of things about
machine learning and natural language

00:06:48.650 --> 00:06:54.380
processing and so on show up very much
in digital humanities.  There's a wonderful

00:06:54.380 --> 00:06:58.730
thing here in England.
It's called oldbaileyonline.org and

00:06:58.730 --> 00:07:02.570
it's basically some university
consortium, I guess, digitized all of the

00:07:02.570 --> 00:07:07.100
records of the Old Bailey from the late
1600s until the early 1900s.

00:07:07.100 --> 00:07:11.600
These had been court records, right;
transcriptions had been taken from, as I

00:07:11.600 --> 00:07:17.030
say, the late 1600s right into the early
1900s and they were all digitized, put

00:07:17.030 --> 00:07:22.190
together in XML format, and now you can
search them and find out things like,

00:07:22.190 --> 00:07:26.840
well there was probably some guy named
Sean Riley in the 1700s who was hanged

00:07:26.840 --> 00:07:30.590
for stealing a pig, or something like
that.  It's just absolutely a wonderful

00:07:30.590 --> 00:07:35.540
amazing database.  It's  close to two
hundred thousand cases, very carefully

00:07:35.540 --> 00:07:39.890
documented with the names of the perp[etrator]s and
the victims and the witnesses and the

00:07:39.890 --> 00:07:43.970
judges, and the what happened to the
people when they were convicted?  One

00:07:43.970 --> 00:07:49.460
of the things I had not realized until I saw
this was -- you've heard of transportation --

00:07:49.460 --> 00:07:53.750
you know if you had been, if you'd done
something bad, you were transported and

00:07:53.750 --> 00:07:56.840
of course everybody thinks
transportation meant Australia.  No.

00:07:56.840 --> 00:08:03.020
Transportation before 1776 meant you were
shipped off to the United States, which

00:08:03.020 --> 00:08:06.740
wasn't the United States at that point;
it was just the colonies.  And that might

00:08:06.740 --> 00:08:13.220
explain all kinds of things.

