WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:07.749
&gt;&gt; DAVID: Okay, orientation is good. "Orientation
about new," up. Alright, so we've just launched

00:00:07.749 --> 00:00:14.210
about half an hour ago the ability to now
export a single wave. I'll talk about--Soren

00:00:14.210 --> 00:00:20.050
will talk about how to export more waves later
on. But this feature we just launched to now

00:00:20.050 --> 00:00:25.869
let you to actually get your waves now in
a ZIP file format with all your attachments

00:00:25.869 --> 00:00:31.439
or as HTML with no attachments whatsoever.
It's really only targeted for people who only

00:00:31.439 --> 00:00:36.570
have a few waves they want to keep and just
archived. I'll show you now. It's not super,

00:00:36.570 --> 00:00:47.000
super fast. Is this one? Yup, so I can go
export. I can go ZIP bundle. I can get attachments

00:00:47.000 --> 00:00:52.130
if I wanted to but there's no attachment to
this. What--it actually takes about 30 seconds

00:00:52.130 --> 00:00:58.470
to admit it because what it does is it renders
the content on a server, produces--and the

00:00:58.470 --> 00:01:03.020
PDF and let you download it so that the whole
process essentially runs the browser on the

00:01:03.020 --> 00:01:10.070
server. So if someone here can come up with
a better way in making this faster we take

00:01:10.070 --> 00:01:15.610
all recommendations. And by the way, this
was done by a Google person who donated their

00:01:15.610 --> 00:01:22.060
time to do this and thanks, thanks to him
for doing that. Okay, so now, I think I've

00:01:22.060 --> 00:01:28.970
downloaded this somewhere. Wave three. I can
open it and I get a PDF so which looks like

00:01:28.970 --> 00:01:34.450
this, so you get your content back. All right.
So that's announcement number one.

00:01:34.450 --> 00:01:36.580
&gt;&gt; Can you demonstrate it one more time?
&gt;&gt; DAVID: Okay. Let me just give you an example

00:01:36.580 --> 00:01:39.920
with an attachment. Let me find a wave with
an attachment and I'll let you explore with

00:01:39.920 --> 00:01:42.290
that. So, we find one with an attachment.
You know what, I'm just going to upload an

00:01:42.290 --> 00:02:22.930
attachment for the sake of doing it. And that's
the way I want, downloads. Let's do this.

00:02:22.930 --> 00:03:02.920
Now I click, done, so now I can now go export,
include attachments. So, you can actually

00:03:02.920 --> 00:03:04.730
now download the attachment. The attachments
will be in a separate folder that you can

00:03:04.730 --> 00:03:12.629
get where the attachments at. Now, it's--it's
unfortunate that there is one thing we have

00:03:12.629 --> 00:03:22.170
to be careful of. You--there you go--here's
your files and you get your file back. Yeah,

00:03:22.170 --> 00:03:27.300
well, it's a screenshot of Facebook but the
important thing is that if you have an image

00:03:27.300 --> 00:03:31.030
you will not be able to get your original
image back because we actually compress images

00:03:31.030 --> 00:03:37.420
when we store on the server site. But if ever
you get by default you get the file back.

00:03:37.420 --> 00:03:41.640
We want to give you the original image back
but we can't because for space reasons we

00:03:41.640 --> 00:03:46.020
already actually chop, trim the images before
we store it so you'll never get to get the

00:03:46.020 --> 00:03:51.069
same image back. So just be aware of that.
But if you have lots of ways, I think Soren

00:03:51.069 --> 00:04:14.330
have

00:04:14.330 --> 00:04:20.579
the answer for you. Cool.
&gt;&gt; SOREN: Okay. So, it's not--so, yeah, we

00:04:20.579 --> 00:04:29.270
promised that we would make it possible to
import waves through your Wave in a Box instance.

00:04:29.270 --> 00:04:38.660
And so, we are at work here, in particular,
Christian has been--has written some code

00:04:38.660 --> 00:04:50.681
to make--through the Data API that you can
pragmatically slip up your waves. So, what

00:04:50.681 --> 00:04:56.280
you can do right now with the Data API is
that you can--so you can pragmatically come

00:04:56.280 --> 00:05:09.010
in by OAuth and authenticate if you--so you
can have--so the idea is that we want to make

00:05:09.010 --> 00:05:14.960
it possible for you to add codes to Wave in
a Box so they can dial them up out at Data

00:05:14.960 --> 00:05:21.180
API on the production--the Google Wave production
system and read out your waves. And that so

00:05:21.180 --> 00:05:30.401
the Data API has OAuth authentication so that
if you give your credentials to your Wave

00:05:30.401 --> 00:05:36.460
in a Box instance and the code you write for
that, then it can dial up and do a fetch wavelet.

00:05:36.460 --> 00:05:43.740
First of all, it can use the search options
on the Data API to find the relevant wave.

00:05:43.740 --> 00:05:50.430
So you can search for inbox and it can see
all the wavelets--waves. Then, you can do

00:05:50.430 --> 00:06:01.960
a fetch wavelet request to read out the wave
including the attachments in there. The problem

00:06:01.960 --> 00:06:06.960
with the current Data API is that it gives
you a certain text representation of the contents

00:06:06.960 --> 00:06:15.860
of a wavelet. But what we are adding this
week--so we hope to get it out within the

00:06:15.860 --> 00:06:24.630
next 48 hours so that when we get to the hacking
on Thursday and Friday that this option is

00:06:24.630 --> 00:06:34.880
there and is live. So, anyone who's game can
start coding up for as something to pullout

00:06:34.880 --> 00:06:39.230
the waves and put them into Wave in a Box.
And what we have--so what we're adding is

00:06:39.230 --> 00:06:46.750
an option to--an optional argument to the
fetch wavelet's method. We can ask to have

00:06:46.750 --> 00:06:54.300
them to get the row of deltas in there out
so that they'll come out. And so we still

00:06:54.300 --> 00:07:07.340
are trying to get the binary format right
but it's--it would be a faithful binary representation

00:07:07.340 --> 00:07:12.690
of the deltas and the operations in there
so that you can then stick them into the wave

00:07:12.690 --> 00:07:18.530
store in the Wave in a Box and you'll get
the wave with the--with all the--with the

00:07:18.530 --> 00:07:29.030
entire--a faithful copy of the wave with the
history. So, we're getting there. I think

00:07:29.030 --> 00:07:34.460
that should make a--so that--yesterday, there
were some request about getting it out in

00:07:34.460 --> 00:07:44.449
an HTML format so you can better process the
contents. This should be the most faithful

00:07:44.449 --> 00:07:56.561
exporter that is possible to give you. So,
I think--yes, I had commented also--PDF and

00:07:56.561 --> 00:08:05.650
HTML exports is now live as David showed you.
This, if all goes well, we'll get the Data

00:08:05.650 --> 00:08:12.819
API export option out this week. And then
the third thing we--Christian didn't promise

00:08:12.819 --> 00:08:23.419
to make waves available in docs. So that's
our export story. Questions?

00:08:23.419 --> 00:08:26.750
&gt;&gt; Yeah. No, sorry. I don't have questions.
e request about getting it out in an HTML

00:08:26.750 --> 00:08:28.900
format so you can better process the contents.
This should be the most faithful exporter

00:08:28.900 --> 00:08:31.190
that is possible to give you. So, I think--yes,
I had commented also--PDF and HTML exports

00:08:31.190 --> 00:08:33.769
is now live as David showed you. This, if
all goes well, we'll get the Data API export

00:08:33.769 --> 00:08:34.209
option out thi

