WEBVTT
Kind: captions
Language: en

00:00:00.700 --> 00:00:03.010
AARON KARP: Generic Selectors.

00:00:03.010 --> 00:00:06.510
We have a new Generic
Selector type.

00:00:06.510 --> 00:00:10.010
It replaces the Service Specific
Selectors that you've

00:00:10.010 --> 00:00:11.840
been using before.

00:00:11.840 --> 00:00:14.150
So whereas, say, Campaign
Service had its own selector

00:00:14.150 --> 00:00:16.460
type, now we have one single
selector object that is used

00:00:16.460 --> 00:00:17.810
across services.

00:00:17.810 --> 00:00:19.770
Now the biggest difference you
guys will notice immediately

00:00:19.770 --> 00:00:22.460
is that instead of selecting
all of the fields for an

00:00:22.460 --> 00:00:25.655
object at once, you now have
to specify the individual

00:00:25.655 --> 00:00:27.300
field that you want back.

00:00:27.300 --> 00:00:29.890
This also provides for powerful
filtering and storing

00:00:29.890 --> 00:00:33.140
options within your selectors.

00:00:33.140 --> 00:00:36.130
So Generic Selectors return
objects specific to the

00:00:36.130 --> 00:00:37.960
service that they're
used with.

00:00:37.960 --> 00:00:38.995
What does that mean?

00:00:38.995 --> 00:00:41.310
It means that you can use the
same selector objects on the

00:00:41.310 --> 00:00:44.220
Campaign Service, that you can
use on the AdGroup AdService

00:00:44.220 --> 00:00:46.215
or the AdGroup service.

00:00:46.215 --> 00:00:51.870
And it will automatically return
a list of AdGroups, or

00:00:51.870 --> 00:00:55.905
campaigns, or ads, or whatever
it is that you're using it in

00:00:55.905 --> 00:00:57.910
conjunction with.

00:00:57.910 --> 00:00:59.160
You could also do
this previously.

00:00:59.160 --> 00:01:02.607
But we've maintained the stash
retrieval functionality for

00:01:02.607 --> 00:01:08.010
specific date ranges, request
ordering, and request paging.

00:01:08.010 --> 00:01:09.070
These are the services that are

00:01:09.070 --> 00:01:10.810
moving to Generic Selectors.

00:01:10.810 --> 00:01:15.100
I'm sure you guys will recognize
quite a few that you

00:01:15.100 --> 00:01:16.580
use selectors on yourselves.

00:01:16.580 --> 00:01:20.590
So this whole list is available
through the

00:01:20.590 --> 00:01:22.530
documentation.

00:01:22.530 --> 00:01:25.176
So fields can be either
selectable,

00:01:25.176 --> 00:01:27.560
filterable, or neither.

00:01:27.560 --> 00:01:30.150
These are the fields
of an object.

00:01:30.150 --> 00:01:32.905
So if it's selectable, it means
that it can be retrieved

00:01:32.905 --> 00:01:34.260
with a Selector via
a get operation.

00:01:34.260 --> 00:01:36.850
So that's something like
the campaign ID.

00:01:36.850 --> 00:01:41.180
Filterable means values can be
filtered using a Predicate

00:01:41.180 --> 00:01:42.730
within a Selector.

00:01:42.730 --> 00:01:46.330
Not all fields fit into
both categories.

00:01:46.330 --> 00:01:50.170
Here for the AdGroup object,
you have the AdGroup ID.

00:01:50.170 --> 00:01:54.060
It says that it is Filterable
and Selectable.

00:01:54.060 --> 00:01:59.220
The status is also Filterable
and Selectable.

00:01:59.220 --> 00:02:01.490
So what does the new Selector
object look like?

00:02:01.490 --> 00:02:03.810
It would have the following
five fields.

00:02:03.810 --> 00:02:07.186
The fields field, which
is the list of fields

00:02:07.186 --> 00:02:08.530
that you want to select.

00:02:08.530 --> 00:02:11.820
This is the one required
field, here.

00:02:11.820 --> 00:02:12.500
The predicate.

00:02:12.500 --> 00:02:15.160
This is what you use
for filtering.

00:02:15.160 --> 00:02:18.960
The date range for stats
that you want.

00:02:18.960 --> 00:02:20.800
The ordering--

00:02:20.800 --> 00:02:21.880
fields to sort off.

00:02:21.880 --> 00:02:24.447
You can sort on multiple
fields, as

00:02:24.447 --> 00:02:25.500
well as the sort order.

00:02:25.500 --> 00:02:29.202
So you can do campaign name
ascending, and then by click,

00:02:29.202 --> 00:02:30.600
for example.

00:02:30.600 --> 00:02:35.670
Paging has rules for paginating
of the results.

00:02:35.670 --> 00:02:39.630
So, for example, we want to get
these four fields back for

00:02:39.630 --> 00:02:40.435
any Campaign Object.

00:02:40.435 --> 00:02:43.185
Then we will use the
following Selector.

00:02:43.185 --> 00:02:47.130
Set the field as an array
of strings, these four.

00:02:47.130 --> 00:02:50.531
And then this Selector could
be used as a get operation

00:02:50.531 --> 00:02:51.370
just as it is.

00:02:51.370 --> 00:02:54.390
Remember, I've said that the
fields field is the only

00:02:54.390 --> 00:02:59.116
required property you have
to set on the Selector.

00:02:59.116 --> 00:03:01.880
So if you only want to retrieve
a campaign with a

00:03:01.880 --> 00:03:05.462
specific ID, or you only want
to retrieve a campaign with

00:03:05.462 --> 00:03:08.980
more than 200 clicks over a
specific date range, you can

00:03:08.980 --> 00:03:12.240
do all of these quite powerful
things using predicates.

00:03:12.240 --> 00:03:16.380
Here we say, for this predicate
object, we're

00:03:16.380 --> 00:03:19.360
setting the field that we
want filter on as ID.

00:03:19.360 --> 00:03:24.410
We're setting the operator
as in, so the ID is in

00:03:24.410 --> 00:03:27.595
this array of values.

00:03:27.595 --> 00:03:30.202
And then we add that predicate
to our Selector Object.

00:03:30.202 --> 00:03:33.050
So here we're going to sort by
two different properties.

00:03:33.050 --> 00:03:38.015
First by name ascending and then
by start date descending.

00:03:38.015 --> 00:03:39.542
Again, pretty easy.

00:03:39.542 --> 00:03:43.570
We create our order by objects
and set the field names to

00:03:43.570 --> 00:03:45.280
name and start date.

00:03:45.280 --> 00:03:49.170
We set the order here to
descending, Because we don't

00:03:49.170 --> 00:03:53.030
need to put the defaults
for the other one.

00:03:53.030 --> 00:03:56.325
Paging works quite similarly
to how it

00:03:56.325 --> 00:03:58.390
did in the old version.

00:03:58.390 --> 00:04:00.620
So we set our start index.

00:04:00.620 --> 00:04:02.170
We set the number of
results we want.

00:04:02.170 --> 00:04:06.730
Pretty straightforward, right?

00:04:06.730 --> 00:04:09.090
Good, now let's talk about
selecting Stats.

00:04:09.090 --> 00:04:12.530
So you use the Selector
dateRange to specify the Stats

00:04:12.530 --> 00:04:15.370
fields that you want returned.

00:04:15.370 --> 00:04:18.350
So if you are selecting
the following fields--

00:04:18.350 --> 00:04:21.579
Id, Text, Clicks,
Ctr, and Cost--

00:04:21.579 --> 00:04:24.955
and if we want to filter where
the Clicks are greater than

00:04:24.955 --> 00:04:27.060
200, then you'd use the
following Selector.

00:04:27.060 --> 00:04:29.260
Here we're setting the fields
that we want back.

00:04:29.260 --> 00:04:31.000
And we're setting the
date range specified

00:04:31.000 --> 00:04:32.770
in the strings above.

00:04:36.130 --> 00:04:37.730
Then we're adding a predicate.

00:04:37.730 --> 00:04:40.290
We're saying that we want to
filter on fields, where the

00:04:40.290 --> 00:04:44.180
value is greater than 200.

00:04:44.180 --> 00:04:45.720
So the list of available
predicate

00:04:45.720 --> 00:04:48.100
operators is pretty big.

00:04:48.100 --> 00:04:49.350
It will be the full list
in the documentation.

00:04:53.090 --> 00:04:55.980
So the Response Objects is the
same type that you got back in

00:04:55.980 --> 00:04:56.930
previous versions.

00:04:56.930 --> 00:05:00.180
If you're using Generic
Selectors for the

00:05:00.180 --> 00:05:02.690
CampaignService, you get
back a Campaign Object.

00:05:02.690 --> 00:05:05.667
Using them for the AdGroup
service, you

00:05:05.667 --> 00:05:07.290
get an AdGroup back.

00:05:07.290 --> 00:05:10.510
Now one thing to note is that
you may get null values back

00:05:10.510 --> 00:05:15.120
for fields that you don't
request. So if your code is

00:05:15.120 --> 00:05:18.652
currently indiscriminately
accessing fields on the

00:05:18.652 --> 00:05:23.402
objects, you might need to add
in some null checking.

00:05:23.402 --> 00:05:26.442
An easy way to do the migration
is just check which

00:05:26.442 --> 00:05:29.270
fields you need in your existing
code, and then build

00:05:29.270 --> 00:05:30.520
your Selector to match that.

00:05:32.850 --> 00:05:35.552
So what are some
best practices?

00:05:35.552 --> 00:05:39.910
First of all, specify only the
fields you actually want.

00:05:39.910 --> 00:05:42.522
Don't try to imitate the Select
Star functionality of

00:05:42.522 --> 00:05:44.390
the previous version.

00:05:44.390 --> 00:05:45.760
This defeats the purpose.

00:05:45.760 --> 00:05:47.760
And you'll always be
playing catchup as

00:05:47.760 --> 00:05:50.460
we modify the objects.

00:05:50.460 --> 00:05:53.280
These are the two errors you
will most commonly see with

00:05:53.280 --> 00:05:54.480
Generic Selectors--

00:05:54.480 --> 00:05:57.900
the invalid field name and the
invalid predicate field name--

00:05:57.900 --> 00:05:59.210
which are pretty
self-explanatory.

00:05:59.210 --> 00:06:01.370
You give us a string that we
don't know how to handle,

00:06:01.370 --> 00:06:02.570
we'll give you back
this error.

00:06:02.570 --> 00:06:07.000
And then, use Generic Selectors
to add new and

00:06:07.000 --> 00:06:07.670
interesting functionality.

00:06:07.670 --> 00:06:11.530
So, get criteria with clicks
greater than 200 and ctr of

00:06:11.530 --> 00:06:13.450
less than 2.0 last week.

00:06:13.450 --> 00:06:16.610
So if you don't have all of the
data for a given account

00:06:16.610 --> 00:06:20.010
cached in your system, you can
select it all on the fly,

00:06:20.010 --> 00:06:24.151
based on your user's needs
of your application.

00:06:24.151 --> 00:06:26.660
So we have put together a
Selector Migration Guide.

00:06:26.660 --> 00:06:31.522
It includes both a mapping of
the fields in each object to

00:06:31.522 --> 00:06:37.210
their selector names, if you
will, selector field names.

00:06:37.210 --> 00:06:40.780
And it also includes some sample
code and PHP that shows

00:06:40.780 --> 00:06:42.760
roughly what I've put up
on the board today.

00:06:45.420 --> 00:06:47.120
Thank you very much.

