WEBVTT
Kind: captions
Language: en

00:00:00.250 --> 00:00:03.920
Traditionally general purpose operating systems have

00:00:03.920 --> 00:00:06.240
catered to the needs of throughput oriented

00:00:06.240 --> 00:00:09.710
applications, such as databases, and scientific applications.

00:00:10.730 --> 00:00:13.460
But now more and more applications, such

00:00:13.460 --> 00:00:16.658
as synchronous A/V players, video games, and

00:00:16.658 --> 00:00:20.170
so on, need soft real-time guarantees. That

00:00:20.170 --> 00:00:26.320
is they are latency sensitive. How do we mix the two kinds of applications

00:00:26.320 --> 00:00:30.990
in a general purpose operating system? Also, what are the pain points

00:00:30.990 --> 00:00:35.050
in developing complex, multimedia applications that

00:00:35.050 --> 00:00:38.170
need such real-time guarantees? How can

00:00:38.170 --> 00:00:44.750
they be alleviated? Welcome back. In this module, we will discuss approaches

00:00:44.750 --> 00:00:47.680
to addressing these questions. In this

00:00:47.680 --> 00:00:52.080
lesson, we will discuss time-sensitive Linux,

00:00:52.080 --> 00:00:53.780
an extension of the commodity general

00:00:53.780 --> 00:00:56.860
purpose Linux operating system that addresses two

00:00:56.860 --> 00:00:59.920
questions. The first question is how

00:00:59.920 --> 00:01:05.230
to provide guarantees for real-time applications in

00:01:05.230 --> 00:01:08.678
the presence of background throughput oriented

00:01:08.678 --> 00:01:11.360
applications, such as databases and so on.

00:01:11.360 --> 00:01:14.420
The second question is how to bound

00:01:14.420 --> 00:01:18.110
the performance loss of throughput oriented applications

00:01:18.110 --> 00:01:20.770
in the presence of latency sensitive applications.

