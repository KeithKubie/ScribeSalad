WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.000
For this problem, we're going to be doing something

00:00:02.000 --> 00:00:05.000
similar to what we've done in a previous homework where you were given

00:00:05.000 --> 00:00:09.000
a magic function to use for a reduction.

00:00:09.000 --> 00:00:11.000
You're provided with a function solve&lt;u&gt;vc&lt;/u&gt;

00:00:11.000 --> 00:00:14.000
which solves vertex cover for a given graph represented

00:00:14.000 --> 00:00:17.000
as an adjacency matrix, as we've seen previously.

00:00:17.000 --> 00:00:21.000
Now, it returns a minimum cover of the graph as a list of 0s and 1s

00:00:21.000 --> 00:00:25.000
where 1 means the corresponding vertex is in the cover,

00:00:25.000 --> 00:00:28.000
and 0 means that it is not.

00:00:28.000 --> 00:00:31.000
Now, what you should do here is use solve&lt;u&gt;vc&lt;/u&gt;

00:00:31.000 --> 00:00:35.000
to write a function multisolve which takes as its inputs

00:00:35.000 --> 00:00:37.000
an adjacency matrix and a string.

00:00:37.000 --> 00:00:40.000
The adjacency matrix is simply a graph,

00:00:40.000 --> 00:00:44.000
and the string is either vertex cover, independent set, or clique,

00:00:44.000 --> 00:00:47.000
and it returns a list of 0s and 1s, which are assignments of the vertices

00:00:47.000 --> 00:00:51.000
where 1 means the corresponding vertex is in the solution

00:00:51.000 --> 00:00:55.000
to the corresponding problem, and 0 means that it is not.

00:00:55.000 --> 00:00:59.000
Now, you can feel free to use any additional functions you might feel are necessary.

00:00:59.000 --> 99:59:59.000
But to be graded correctly, you have to use solve&lt;u&gt;vc in the solution to your problem.&lt;/u&gt;

