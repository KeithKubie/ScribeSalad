WEBVTT
Kind: captions
Language: en

00:00:00.080 --> 00:00:02.380
Let's continue coding 
our content provider.

00:00:02.380 --> 00:00:06.250
query() will be the most complex 
of the required content provider methods.

00:00:07.250 --> 00:00:09.730
We begin with the bones 
of the query() operation.

00:00:10.810 --> 00:00:15.080
We use our sURIMatcher object
once again to switch on the type of URI.

00:00:15.590 --> 00:00:17.969
This is the only function 
where we will have to fill out

00:00:17.969 --> 00:00:20.890
every type of URI in the content provider,

00:00:20.890 --> 00:00:23.480
as several of them are used
for querying only.

00:00:24.600 --> 00:00:27.200
We'll implement the basic 
Weather query first.

00:00:27.710 --> 00:00:28.770
For this query,

00:00:28.770 --> 00:00:31.853
we just pass through 
all of the parameters to the database.

00:00:31.853 --> 00:00:33.196
Pretty simple stuff.

00:00:33.196 --> 00:00:35.770
Let's fix these parameters 
so they make some sense.

00:00:35.770 --> 00:00:38.216
"strings" here is actually a projection;

00:00:38.216 --> 00:00:40.192
S is a selection,

00:00:40.192 --> 00:00:42.870
the next array is selectionArgs.

00:00:42.870 --> 00:00:44.756
And the last string is sort order.

00:00:44.756 --> 00:00:46.852
That matches a lot better.

00:00:46.852 --> 00:00:48.530
At the bottom of the function,

00:00:48.530 --> 00:00:51.853
we're going to set the NotificationURI
for our cursor

00:00:51.853 --> 00:00:54.546
to the one that was passed
into the function.

00:00:54.546 --> 00:00:58.360
This causes the cursor
to register a content observer

00:00:58.360 --> 00:01:03.470
to watch for changes that happen
to that URI and any of its descendents.

00:01:04.870 --> 00:01:08.580
By descendants, I mean any URI
that begins with this path.

00:01:08.883 --> 00:01:10.762
But, we still need to test this.

