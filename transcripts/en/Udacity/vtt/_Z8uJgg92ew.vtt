WEBVTT
Kind: captions
Language: en

00:00:00.610 --> 00:00:03.760
Okay so, let's go back and look at our two

00:00:03.760 --> 00:00:06.610
questions we were trying to answer. And so far we've

00:00:06.610 --> 00:00:09.560
answer the first one, learn over a subset of data,

00:00:09.560 --> 00:00:13.530
defined a rule by choosing that subset uniformally randomly and

00:00:13.530 --> 00:00:16.530
applying some learning algorithm. And we answered the second question,

00:00:16.530 --> 00:00:18.830
which is how do you combine all of those rules

00:00:18.830 --> 00:00:21.760
of thumbs by saying, you simply average them. And that

00:00:21.760 --> 00:00:26.680
gave us, bagging. So Michael, I'm going to suggest an alternative

00:00:26.680 --> 00:00:29.430
to at least the first one. And leave open the

00:00:29.430 --> 00:00:31.780
second one for a moment. That's going to get us

00:00:31.780 --> 00:00:34.130
to what we're supposed to be talking about today, which

00:00:34.130 --> 00:00:36.570
is boosting. So let me throw and idea at you and

00:00:36.570 --> 00:00:38.050
you tell me if you think it's a good one.

00:00:38.050 --> 00:00:43.430
So rather than choosing uniformly randomly. Over the data, we should

00:00:43.430 --> 00:00:46.490
try to take advantage of what we are learning as

00:00:46.490 --> 00:00:51.520
we go along, and instead of focusing just kind of randomly,

00:00:51.520 --> 00:00:56.920
we should pick the examples that we are not good at.

00:00:56.920 --> 00:00:58.500
So what do i mean by that? What i mean by that

00:00:58.500 --> 00:01:04.349
is. We should pick a subset based upon whether the examples

00:01:04.349 --> 00:01:08.080
in that subset are hard. So what do you think of that?

00:01:08.080 --> 00:01:11.750
&gt;&gt; Well, I guess it depends on how we think about hard, right

00:01:11.750 --> 00:01:16.470
so it could be that it's hard because some, in some absolute sense right,

00:01:16.470 --> 00:01:19.190
or could be that it is hard relative to you know, if we

00:01:19.190 --> 00:01:22.340
were to stop now how well we do Yeah, and I mean the latter.

00:01:22.340 --> 00:01:24.430
&gt;&gt; Oh. Okay. Alright. Well that I feel like

00:01:24.430 --> 00:01:26.640
that makes a lot of sense. I mean, certainly when

00:01:26.640 --> 00:01:29.650
I'm you know, trying to learn a new skill,

00:01:29.650 --> 00:01:31.690
I'll spend most of my energy on the stuff that

00:01:31.690 --> 00:01:33.490
I kind, that I'm kind of on the edge of

00:01:33.490 --> 00:01:35.410
being able to do, not the stuff that I've already

00:01:35.410 --> 00:01:38.360
mastered. It can be a little dispiriting. But it, but

00:01:38.360 --> 00:01:40.230
it I think it, I make faster progress that way.

00:01:40.230 --> 00:01:41.490
&gt;&gt; Right and if you, if you go

00:01:41.490 --> 00:01:45.090
back to the example that we, we started with, with spam right?

00:01:45.090 --> 00:01:47.320
If you come up with a and you see it does a

00:01:47.320 --> 00:01:50.490
very good on some of the data, some of the mail examples,

00:01:50.490 --> 00:01:53.140
but doesn't do a good job on the other. Why would you spend

00:01:53.140 --> 00:01:56.600
your time trying to come up with more rules that do well

00:01:56.600 --> 00:01:59.380
on the email messages you already know how to classify? You should

00:01:59.380 --> 00:02:01.970
be focusing on the ones you don't know how to classify. And

00:02:01.970 --> 00:02:06.610
that's the basic idea here between, the basic idea here behind boosting and

00:02:06.610 --> 00:02:08.000
finding the hardest examples.

00:02:08.000 --> 00:02:08.680
&gt;&gt; Cool.

00:02:08.680 --> 00:02:11.520
&gt;&gt; Okay. So that answers the first one. We're going to

00:02:11.520 --> 00:02:13.480
look at the hardest examples, and I'm going to define for

00:02:13.480 --> 00:02:15.970
you exactly what that means. I'm going to have to introduce

00:02:15.970 --> 00:02:18.710
at least one technical definition. But ,uh, I want to make

00:02:18.710 --> 00:02:21.240
certain you got that. And the second one, the combining,

00:02:21.240 --> 00:02:24.040
well that's a difficult and sort of complicated thing, but

00:02:24.040 --> 00:02:26.350
at a high level, I can explain it pretty easily

00:02:26.350 --> 00:02:28.180
by saying we are going to still stick with the mean.

00:02:28.180 --> 00:02:29.410
&gt;&gt; Okay.

00:02:29.410 --> 00:02:32.080
&gt;&gt; We're voting except this time,this time we

00:02:32.080 --> 00:02:35.050
are going to do weighted mean. Now why do we want to do

00:02:35.050 --> 00:02:37.360
weighted mean? Well I have to tell you exactly how we are going to

00:02:37.360 --> 00:02:40.870
weight it but the basic idea is to avoid the certain situations That

00:02:40.870 --> 00:02:44.460
we came across when we looked at the data before, when taking an average

00:02:44.460 --> 00:02:47.240
over a bunch of points that are spread out, this gives you an

00:02:47.240 --> 00:02:50.990
average or a constant that doesn't give you a lot of information about the

00:02:50.990 --> 00:02:54.280
space. So we're going to weight it by something, and it's going to turn

00:02:54.280 --> 00:02:57.120
out the way we choose to weight it will be very important. But just

00:02:57.120 --> 00:02:58.680
keep in your head for now that we're going to try to

00:02:58.680 --> 00:03:01.800
do some sort of weighted average. Some kind of weighted voting. Okay?

00:03:01.800 --> 00:03:05.630
&gt;&gt; Sure. One of the things that's scaring me at the moment though is this,

00:03:05.630 --> 00:03:08.410
like I have this fear that by focusing

00:03:08.410 --> 00:03:10.190
on the hardest questions, and then, and then

00:03:10.190 --> 00:03:12.460
sort of mastering those, what's to keep the

00:03:12.460 --> 00:03:14.890
learner from starting to kind of lose track of

00:03:14.890 --> 00:03:17.040
the ones it has already mastered? Like how,

00:03:17.040 --> 00:03:18.600
why does it not thrash back and forth?

00:03:18.600 --> 00:03:22.160
&gt;&gt; So that's going to be the trick. Behind the,

00:03:22.160 --> 00:03:23.545
the particular way that we do weighting.

00:03:23.545 --> 00:03:24.013
&gt;&gt; Okay

00:03:24.013 --> 00:03:26.480
&gt;&gt; So I will show you that in a moment, and it's going to require

00:03:26.480 --> 00:03:29.310
two slightly technical definitions, that we have

00:03:29.310 --> 00:03:32.060
been kind of skirting around, this entire conversation. Okay?

00:03:32.060 --> 00:03:32.740
&gt;&gt; Sure.

