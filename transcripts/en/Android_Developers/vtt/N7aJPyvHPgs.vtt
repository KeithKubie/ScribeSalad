WEBVTT
Kind: captions
Language: en

00:00:00.487 --> 00:00:01.320
WAYNE PIEKARSKI: Hi.

00:00:01.320 --> 00:00:02.861
My name's Wayne
Piekarski, and I work

00:00:02.861 --> 00:00:04.900
as a developer
advocate at Google.

00:00:04.900 --> 00:00:07.180
Today I'm going to talk
about Android Wear,

00:00:07.180 --> 00:00:09.290
and how you can take
advantage of adding pages

00:00:09.290 --> 00:00:11.942
to your existing notifications.

00:00:11.942 --> 00:00:13.650
If you're just getting
started, you first

00:00:13.650 --> 00:00:15.800
might want to view some
of our previous DevBytes.

00:00:15.800 --> 00:00:18.383
You'll also want to get set up
with the Android Wear developer

00:00:18.383 --> 00:00:21.120
preview, and get it
working on your machine.

00:00:21.120 --> 00:00:23.600
So let's write an Android
Wear application that

00:00:23.600 --> 00:00:25.300
helps keep track
of library books

00:00:25.300 --> 00:00:27.250
that I'm borrowing
for my next adventure.

00:00:27.250 --> 00:00:28.864
So the app will
generate notifications

00:00:28.864 --> 00:00:30.280
whenever books
you've borrowed are

00:00:30.280 --> 00:00:33.160
overdue to be returned
to the library.

00:00:33.160 --> 00:00:35.200
On a phone, there'll be
a single notification

00:00:35.200 --> 00:00:37.450
indicating how many
books are overdue.

00:00:37.450 --> 00:00:39.290
So with an Android
Wear device, this

00:00:39.290 --> 00:00:40.816
is easily glanceable
on your wrist,

00:00:40.816 --> 00:00:43.440
and you can see the notification
without pulling your phone out

00:00:43.440 --> 00:00:44.610
of your pocket.

00:00:44.610 --> 00:00:46.510
Now since wearable
displays are quite small,

00:00:46.510 --> 00:00:48.480
there's a limit to what you
can see in a single glance,

00:00:48.480 --> 00:00:49.200
however.

00:00:49.200 --> 00:00:51.460
So what can we do about this?

00:00:51.460 --> 00:00:54.300
With Android Wear, we
support adding extra pages

00:00:54.300 --> 00:00:57.240
to a notification, allowing
you to swipe sideways,

00:00:57.240 --> 00:00:59.050
and see a lot more information.

00:00:59.050 --> 00:01:02.090
On the wearable, we can see
the specific titles and authors

00:01:02.090 --> 00:01:04.780
of each book that are
overdue, and there

00:01:04.780 --> 00:01:07.840
can be some kind of action
at the end, as well.

00:01:07.840 --> 00:01:09.760
So how do we go and
implement all of this?

00:01:09.760 --> 00:01:11.660
For a phone
application, your code

00:01:11.660 --> 00:01:14.300
will currently be traversing
some kind of array or list

00:01:14.300 --> 00:01:16.040
of books within
a loop like this,

00:01:16.040 --> 00:01:18.754
and then calculating how
many are overdue from it.

00:01:18.754 --> 00:01:20.170
You're probably
already doing this

00:01:20.170 --> 00:01:22.650
to generate the main
notification you can see here

00:01:22.650 --> 00:01:25.680
on the phone screenshot
at the bottom, there.

00:01:25.680 --> 00:01:28.740
To add extra pages, what you
do is you modify your code

00:01:28.740 --> 00:01:30.700
to keep a list of
extra notifications.

00:01:30.700 --> 00:01:33.020
So here, I've created
an array list,

00:01:33.020 --> 00:01:36.060
which we will use to
store these for use later.

00:01:36.060 --> 00:01:39.060
You would now modify your loop
to generate a new notification

00:01:39.060 --> 00:01:40.890
for each overdue item,
with whatever text

00:01:40.890 --> 00:01:43.032
you want inside of it,
like this code, here.

00:01:43.032 --> 00:01:45.240
And you should add each of
these into your array list

00:01:45.240 --> 00:01:47.037
for use later on.

00:01:47.037 --> 00:01:48.620
So adding the extra
pages to your code

00:01:48.620 --> 00:01:49.880
is now really, really easy.

00:01:49.880 --> 00:01:52.680
So this is what your existing
code might look like right now.

00:01:52.680 --> 00:01:56.160
And then we now make a code
to a method called addPages.

00:01:56.160 --> 00:01:58.150
And this takes in a
collection, so you can just

00:01:58.150 --> 00:02:00.150
pass in the extras list
you created earlier

00:02:00.150 --> 00:02:01.430
as a single argument.

00:02:01.430 --> 00:02:04.710
So here, you can see it's
just a one line change.

00:02:04.710 --> 00:02:08.380
So make sure you also use the
new NotificationManagerCompat

00:02:08.380 --> 00:02:10.000
instead of the
NotificationManager

00:02:10.000 --> 00:02:12.435
from the framework so that
the new notifications will

00:02:12.435 --> 00:02:15.440
work properly with
wearable devices.

00:02:15.440 --> 00:02:17.650
And finally, you
can combine pages

00:02:17.650 --> 00:02:19.402
with a stack feature
that was discussed

00:02:19.402 --> 00:02:20.860
in my previous
DevByte. [? bite. ?]

00:02:20.860 --> 00:02:22.985
So there are lots of
combinations that are possible

00:02:22.985 --> 00:02:24.930
here, based on whatever
you want to do.

00:02:24.930 --> 00:02:26.020
So that's it for pages.

00:02:26.020 --> 00:02:29.030
It's a really, very simple way
of adding extra functionality

00:02:29.030 --> 00:02:30.907
to your existing
Android applications.

00:02:30.907 --> 00:02:33.490
And you can find out more about
Android Wear and the developer

00:02:33.490 --> 00:02:36.430
preview by visiting
our website here.

00:02:36.430 --> 00:02:38.805
And also, I want you to go
and join our Google+ community

00:02:38.805 --> 00:02:41.221
and share what other great
ideas you have for Android Wear

00:02:41.221 --> 00:02:41.850
as well.

00:02:41.850 --> 00:02:44.639
So I'm Wayne Piekarski,
and I'll see you next time.

