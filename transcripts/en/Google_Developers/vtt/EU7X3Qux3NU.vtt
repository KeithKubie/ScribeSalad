WEBVTT
Kind: captions
Language: en

00:00:09.200 --> 00:00:11.330
GUS CLASS: Hello Google+
developers, and welcome to

00:00:11.330 --> 00:00:14.750
this week's episode of Google+
Developers Live.

00:00:14.750 --> 00:00:17.220
I'm Gus Class, a developer
programs engineer on the

00:00:17.220 --> 00:00:18.550
Google+ team.

00:00:18.550 --> 00:00:20.130
And today I'm going to be
showing you some best

00:00:20.130 --> 00:00:21.860
practices for sign in.

00:00:21.860 --> 00:00:24.560
If you were watching our episode
from last week, I had

00:00:24.560 --> 00:00:29.000
started out by just at the top
of the charts, what you're

00:00:29.000 --> 00:00:32.810
trying to do with sign in is
get the user to sign in.

00:00:32.810 --> 00:00:35.380
And there's a couple of things
you can do to kind of

00:00:35.380 --> 00:00:38.170
encourage the user to sign in
more and to increase the

00:00:38.170 --> 00:00:40.780
likeliness that they're going
to sign in onto your site.

00:00:40.780 --> 00:00:43.430
And when you sign in the user
onto your site, you get all

00:00:43.430 --> 00:00:46.460
sorts of benefits like that
user is then able to

00:00:46.460 --> 00:00:48.670
contribute to your site
in an easier way.

00:00:48.670 --> 00:00:53.270
And you're able to get to that
user's data, which allows you

00:00:53.270 --> 00:00:55.600
to draw the user into
your site more.

00:00:55.600 --> 00:01:00.420
So if you look at my screen, you
can see the site as it was

00:01:00.420 --> 00:01:01.610
rendered last week.

00:01:01.610 --> 00:01:07.060
And so this is just a copy of
the demo from last week.

00:01:07.060 --> 00:01:12.290
And in this copy, you can see
the Sign In button prominently

00:01:12.290 --> 00:01:13.960
displayed on the right
of the screen.

00:01:13.960 --> 00:01:18.300
You can see that encouragement
to get the user to

00:01:18.300 --> 00:01:19.920
sign in on the left.

00:01:19.920 --> 00:01:23.670
And when the user signs in, they
get this nice experience

00:01:23.670 --> 00:01:26.790
where their profile is reflected
back to them.

00:01:26.790 --> 00:01:33.130
And then it bounces to kind of
draw to their attention that

00:01:33.130 --> 00:01:33.960
they're signed in.

00:01:33.960 --> 00:01:35.330
So here's the basic
experience.

00:01:35.330 --> 00:01:37.630
And here's the better
experience.

00:01:37.630 --> 00:01:40.210
So let's disconnect.

00:01:40.210 --> 00:01:42.640
So what I want to show
you today is

00:01:42.640 --> 00:01:45.360
kind of the next step.

00:01:45.360 --> 00:01:47.440
What happens before
the user signs in?

00:01:47.440 --> 00:01:53.150
And if you look at this site,
I've made one change to this

00:01:53.150 --> 00:01:56.480
site, and this change is kind of
a future-facing feature for

00:01:56.480 --> 00:02:00.115
"Is too cute!" And what this
forward-facing feature is, is

00:02:00.115 --> 00:02:03.370
it allows the user to do
something with their photos.

00:02:03.370 --> 00:02:06.000
I haven't determined what it is
yet, but at some point I'm

00:02:06.000 --> 00:02:09.620
going to add a feature that
brings in a user's photos from

00:02:09.620 --> 00:02:11.590
their Google+ activity stream.

00:02:11.590 --> 00:02:14.470
So what I've done is I've
created some code here that

00:02:14.470 --> 00:02:20.690
just does the basics, and it
signs them in with Google+.

00:02:20.690 --> 00:02:24.340
Now after the user signs
in, this icon

00:02:24.340 --> 00:02:25.780
appears in the top right.

00:02:25.780 --> 00:02:30.630
And that icon is indicating to
the user that you click here,

00:02:30.630 --> 00:02:32.840
and your photos will
be accessed.

00:02:32.840 --> 00:02:36.950
So if you look at the photos
here, you can see here's all

00:02:36.950 --> 00:02:40.220
the photos that already exist
inside of my activity stream

00:02:40.220 --> 00:02:40.620
on Google+.

00:02:40.620 --> 00:02:43.890
And let's just take a quick
look at the code

00:02:43.890 --> 00:02:46.220
for how this is done.

00:02:46.220 --> 00:02:49.030
We've actually shown very
similar code in other GDLs.

00:02:49.030 --> 00:02:51.150
So I don't want to spend
too much time on this.

00:02:51.150 --> 00:02:57.020
But this is code that we see a
lot out there, because people

00:02:57.020 --> 00:02:59.820
are doing interesting things
with a user's Google+

00:02:59.820 --> 00:03:00.540
activities.

00:03:00.540 --> 00:03:04.010
So at a high level,
what we do is we

00:03:04.010 --> 00:03:06.570
construct that gapi client.

00:03:06.570 --> 00:03:12.120
And then we perform a request
against plus activities list.

00:03:12.120 --> 00:03:15.800
And we set the user ID to the
currently authorized user, get

00:03:15.800 --> 00:03:19.220
their public collection, and
then we traverse that list of

00:03:19.220 --> 00:03:21.680
elements that are returned
looking for images.

00:03:21.680 --> 00:03:26.790
And so I just have a string
inside of my helper module,

00:03:26.790 --> 00:03:29.240
and that contains the URLs
that at some point in the

00:03:29.240 --> 00:03:30.690
future, I'll do something
with.

00:03:30.690 --> 00:03:37.560
So what if, though, I want to
get as many photos as possible

00:03:37.560 --> 00:03:38.180
from my users?

00:03:38.180 --> 00:03:40.940
And so I want to use additional
data points.

00:03:40.940 --> 00:03:43.910
So what I've done is
I've made another

00:03:43.910 --> 00:03:46.190
version that is better.

00:03:46.190 --> 00:03:49.370
And what this better version
does is it also tries to

00:03:49.370 --> 00:03:52.610
retrieve files from a
user's Google Drive.

00:03:52.610 --> 00:03:55.760
And in doing this, you're
able to bring in more

00:03:55.760 --> 00:03:56.930
content for your site.

00:03:56.930 --> 00:04:00.630
And you're able to allow the
user to get to more of their

00:04:00.630 --> 00:04:04.680
data without having to go
through more effort.

00:04:04.680 --> 00:04:10.410
So I'll sign in again, and you
can see that I haven't

00:04:10.410 --> 00:04:11.490
refreshed the page yet.

00:04:11.490 --> 00:04:15.140
But I'll sign in again, and now
you can see an additional

00:04:15.140 --> 00:04:18.586
scope being requested.

00:04:18.586 --> 00:04:21.180
The little element here that
says "View the files and

00:04:21.180 --> 00:04:24.210
documents in your Google Drive"
has been added because

00:04:24.210 --> 00:04:26.640
I've requested an additional
scope.

00:04:26.640 --> 00:04:28.890
And now I just accept.

00:04:28.890 --> 00:04:33.910
And now after the user signs
in, and the user clicks on

00:04:33.910 --> 00:04:37.280
this little icon here with the
photos, you can see there's

00:04:37.280 --> 00:04:41.440
more stuff here, most notably
the assets that I

00:04:41.440 --> 00:04:42.930
created for this site.

00:04:42.930 --> 00:04:46.250
So all these files on the
top here are files

00:04:46.250 --> 00:04:47.870
from my Google Drive.

00:04:47.870 --> 00:04:49.440
So this is great.

00:04:49.440 --> 00:04:53.790
So now you have these
two scopes.

00:04:53.790 --> 00:04:56.460
So you can do all sorts
of additional things

00:04:56.460 --> 00:04:57.986
you couldn't do before.

00:04:57.986 --> 00:05:01.540
Before going on, let's take a
look at how we added that

00:05:01.540 --> 00:05:02.650
Drive scope.

00:05:02.650 --> 00:05:07.280
So here is the code markup for
rendering that Sign In button.

00:05:07.280 --> 00:05:11.460
And on the top, you just see
that data scope attribute, and

00:05:11.460 --> 00:05:15.380
it's set to just Google
APIs auth plus login.

00:05:15.380 --> 00:05:17.200
Now this is the Google+ scope.

00:05:17.200 --> 00:05:20.430
And this is what is actually
implicit inside

00:05:20.430 --> 00:05:21.210
of the Sign In button.

00:05:21.210 --> 00:05:23.970
But I'm explicitly showing
it so that it's

00:05:23.970 --> 00:05:25.580
easier for you to read.

00:05:25.580 --> 00:05:28.390
And in the second case, what
we've done is we've added an

00:05:28.390 --> 00:05:29.360
additional scope.

00:05:29.360 --> 00:05:32.660
So when you want to use
additional Google APIs you

00:05:32.660 --> 00:05:35.390
need to set up your console
project to have

00:05:35.390 --> 00:05:36.790
those services enabled.

00:05:36.790 --> 00:05:38.880
And then you need to request
both the scopes.

00:05:38.880 --> 00:05:42.950
So these scopes inside of that
data scope field are just

00:05:42.950 --> 00:05:44.410
space delimited.

00:05:44.410 --> 00:05:47.760
And by doing this, we're
then requesting

00:05:47.760 --> 00:05:49.340
both of those scopes.

00:05:49.340 --> 00:05:52.770
And so I'm also doing that
photos list that I'm doing

00:05:52.770 --> 00:05:55.790
from Google+ with the equivalent
from Google Drive.

00:05:55.790 --> 00:05:58.790
And don't worry too much
about this code.

00:05:58.790 --> 00:06:02.840
I just want to show that it's
very similar code when you're

00:06:02.840 --> 00:06:05.850
accessing content from multiple
data sources using

00:06:05.850 --> 00:06:06.830
the Google APIs.

00:06:06.830 --> 00:06:11.260
So this just does a similar
query where it says Drive

00:06:11.260 --> 00:06:12.610
files list.

00:06:12.610 --> 00:06:15.590
And then I'm looking for
files by MIME type.

00:06:15.590 --> 00:06:17.810
And this will just return all
the images that I have on my

00:06:17.810 --> 00:06:19.850
Google Drive.

00:06:19.850 --> 00:06:23.800
So we have both of
these scopes.

00:06:23.800 --> 00:06:29.450
And when the user sees it, they
then say, oh, I'm going

00:06:29.450 --> 00:06:32.200
to be granting this application
access to both my

00:06:32.200 --> 00:06:34.700
Google+ account and
my Drive account.

00:06:34.700 --> 00:06:36.170
For some users--

00:06:36.170 --> 00:06:38.640
let's just say hypothetically--

00:06:38.640 --> 00:06:41.770
this could be something that
would turn them away.

00:06:41.770 --> 00:06:44.030
And you don't want that to
happen, because you want users

00:06:44.030 --> 00:06:45.140
to sign in.

00:06:45.140 --> 00:06:48.300
So you can do something
awesome.

00:06:48.300 --> 00:06:49.830
You can do something amazing.

00:06:49.830 --> 00:06:53.810
And you can actually do what
I like to call, dynamically

00:06:53.810 --> 00:06:55.800
generating these scopes.

00:06:55.800 --> 00:07:02.500
So let's turn it back to awesome
and reload the page.

00:07:02.500 --> 00:07:05.790
And so now if you look at the
page, you can see this sort of

00:07:05.790 --> 00:07:10.050
signal I'm giving the user when
they highlight over the

00:07:10.050 --> 00:07:10.640
Sign In button.

00:07:10.640 --> 00:07:12.220
The behavior is a little
bit different.

00:07:12.220 --> 00:07:15.430
The button grays out when the
user highlights over it.

00:07:15.430 --> 00:07:19.240
And now when the user clicks
the button, something

00:07:19.240 --> 00:07:21.490
different happens.

00:07:21.490 --> 00:07:23.690
I prompt the user, choose
what you share with us.

00:07:23.690 --> 00:07:25.590
And I give them two options.

00:07:25.590 --> 00:07:28.710
I say, I really want to see
your Google Drive files,

00:07:28.710 --> 00:07:30.490
because we want to
allow you to do

00:07:30.490 --> 00:07:33.320
something with these photos.

00:07:33.320 --> 00:07:35.850
But if you just want to use
Google+, and you don't trust

00:07:35.850 --> 00:07:37.790
us with your Drive files, or
you have sensitive stuff on

00:07:37.790 --> 00:07:39.870
there, you can just
choose the other.

00:07:39.870 --> 00:07:45.340
So when you click this, the Sign
In button then appears

00:07:45.340 --> 00:07:46.970
inside the dialogue.

00:07:46.970 --> 00:07:49.580
And when the user signs in,
the scopes that they've

00:07:49.580 --> 00:07:51.770
selected appear here.

00:07:51.770 --> 00:07:55.910
So because I selected Google
Drive, now I see "View files

00:07:55.910 --> 00:07:57.970
and documents in your Google
Drive" as well

00:07:57.970 --> 00:08:00.360
as the Google+ scope.

00:08:00.360 --> 00:08:02.470
Now I'll cancel here.

00:08:02.470 --> 00:08:03.320
We'll go back here.

00:08:03.320 --> 00:08:05.100
And we'll render this again.

00:08:05.100 --> 00:08:07.786
And if I were to switch which
instead to say only Google+

00:08:07.786 --> 00:08:11.690
and I sign in, I get
just only Google+.

00:08:11.690 --> 00:08:14.560
So let's make sure that this is
really doing what I think

00:08:14.560 --> 00:08:17.270
it's doing, and let's look
at those photos again.

00:08:17.270 --> 00:08:21.280
So because of the requested
scopes, I'm just now seeing my

00:08:21.280 --> 00:08:23.620
Google+ photos.

00:08:23.620 --> 00:08:33.159
And now if I were to disconnect
and reconnect, you

00:08:33.159 --> 00:08:36.730
will see that all my photos from
Google+ and Google Drive

00:08:36.730 --> 00:08:39.970
now will appear inside
of that photos area.

00:08:39.970 --> 00:08:42.400
Now there's a couple of things
that I'm doing here, and

00:08:42.400 --> 00:08:45.250
there's a couple of things
that are really worth

00:08:45.250 --> 00:08:47.120
mentioning.

00:08:47.120 --> 00:08:51.240
When you do this, you're losing
a lot of the built-in

00:08:51.240 --> 00:08:53.280
functionality of the
Sign In button.

00:08:53.280 --> 00:08:57.780
And you're losing it because
you're managing this other

00:08:57.780 --> 00:09:01.720
dialogue in addition to
that Sign In button.

00:09:01.720 --> 00:09:06.360
So when you do this, if you
choose to carefully select

00:09:06.360 --> 00:09:08.830
these scopes and allow the user
to dynamically generate

00:09:08.830 --> 00:09:13.010
these scopes, make sure that you
test the heck out of it.

00:09:13.010 --> 00:09:16.210
Because there's a lot of simple
ways that you can kind

00:09:16.210 --> 00:09:18.750
of do this and make the
experience not as good.

00:09:18.750 --> 00:09:23.790
So let's see how I'm doing it
if I load up the code here.

00:09:23.790 --> 00:09:27.130
The first thing that I have to
do when dynamically rendering

00:09:27.130 --> 00:09:29.970
these scopes is to enable
explicit render.

00:09:29.970 --> 00:09:36.700
So what explicit render means is
when the JavaScript for the

00:09:36.700 --> 00:09:40.470
+1 button renders, which also
contains the JavaScript for

00:09:40.470 --> 00:09:45.020
rendering the Sign In button,
instead of just rendering the

00:09:45.020 --> 00:09:48.560
buttons immediately after the
HTML is loaded, what you'll be

00:09:48.560 --> 00:09:51.140
doing is you'll be
programmatically rendering

00:09:51.140 --> 00:09:52.140
that Sign In button.

00:09:52.140 --> 00:09:54.060
And so when you programmatically
render the

00:09:54.060 --> 00:09:58.750
Sign In button, you then can
manage that scope attribute

00:09:58.750 --> 00:09:59.590
dynamically.

00:09:59.590 --> 00:10:03.610
So I also want to emphasize
that incremental auth is

00:10:03.610 --> 00:10:05.640
something that's kind of
more specific to--

00:10:05.640 --> 00:10:07.340
you would encounter
it in Android.

00:10:07.340 --> 00:10:08.130
And this is not that.

00:10:08.130 --> 00:10:11.890
This is just managing the
scopes that are rendered

00:10:11.890 --> 00:10:15.190
inside of that Sign In button
so that the user can

00:10:15.190 --> 00:10:19.040
selectively turn on or off
some of those scopes.

00:10:19.040 --> 00:10:22.200
So here's how you do explicit
render, the first part.

00:10:22.200 --> 00:10:29.800
You have to set the Google API
scripts in JavaScript to

00:10:29.800 --> 00:10:31.950
explicitly render that
Sign In button.

00:10:31.950 --> 00:10:36.700
And so because I'm loading the
JavaScript asynchronously, at

00:10:36.700 --> 00:10:40.680
the top of that JavaScript
client library boilerplate

00:10:40.680 --> 00:10:47.510
code, I'm setting this global
variable gcfg to have the

00:10:47.510 --> 00:10:50.930
attribute parsetags
set to explicit.

00:10:50.930 --> 00:10:55.790
And then inside of my actual
application JavaScript, I can

00:10:55.790 --> 00:10:58.880
programmatically render the
button through this API call.

00:10:58.880 --> 00:11:04.410
And in my particular case, I'm
storing the client ID and the

00:11:04.410 --> 00:11:06.990
auth scopes inside of
that helper module.

00:11:06.990 --> 00:11:08.910
So this sort of simplifies
for me.

00:11:08.910 --> 00:11:11.080
But you can pass strings here.

00:11:11.080 --> 00:11:13.060
You can do it a number
of different ways.

00:11:13.060 --> 00:11:17.960
And that first attribute that is
passed to that gapi sign in

00:11:17.960 --> 00:11:20.720
render is going to be the target
container that's going

00:11:20.720 --> 00:11:21.980
to render inside of your HTML.

00:11:21.980 --> 00:11:25.690
So I've just got a span inside
that dialogue, and then I

00:11:25.690 --> 00:11:26.480
target the span.

00:11:26.480 --> 00:11:29.740
And as soon as I call render,
the Sign In button appears

00:11:29.740 --> 00:11:30.890
inside of there.

00:11:30.890 --> 00:11:33.670
And I'm also doing something--

00:11:33.670 --> 00:11:39.410
so when I render those scopes
insider of that dialog again,

00:11:39.410 --> 00:11:44.830
I'm just going to append the
Drive scope to just a base

00:11:44.830 --> 00:11:46.200
scope that I'm using.

00:11:46.200 --> 00:11:50.700
And when the user says Google
Drive and Google+, then that

00:11:50.700 --> 00:11:53.570
Drive scope is appended to the
scope string, and then when

00:11:53.570 --> 00:11:56.020
the button is rendered, you
see both the scopes.

00:11:56.020 --> 00:11:57.760
And there's something
else that I'm doing.

00:11:57.760 --> 00:12:01.160
Because of the way that I'm
managing the dialogue, I end

00:12:01.160 --> 00:12:06.410
up also having to do this sort
of last bit of flair where I

00:12:06.410 --> 00:12:12.230
have to re-show that little
interactive Sign In button by

00:12:12.230 --> 00:12:16.240
looking for when the user
cancels the sign in dialogue.

00:12:16.240 --> 00:12:19.290
Because I do something where I'm
hiding the button around a

00:12:19.290 --> 00:12:21.050
lot and then re-showing it.

00:12:21.050 --> 00:12:24.750
So I'm not going to recommend
right off the bat that you can

00:12:24.750 --> 00:12:26.040
do this, but you can do this.

00:12:26.040 --> 00:12:29.590
And I'm showing you just so that
you can sort of see all

00:12:29.590 --> 00:12:33.590
of the various ways you can
really flair up your site with

00:12:33.590 --> 00:12:37.320
personalization and a kind of a
look and feel that is unique

00:12:37.320 --> 00:12:38.130
to what you like.

00:12:38.130 --> 00:12:41.705
So here's the Sign In button.

00:12:41.705 --> 00:12:44.820
Now because I haven't yet
rendered the Sign In button,

00:12:44.820 --> 00:12:50.160
what I'm doing is I'm showing
this dialog with the Sign In

00:12:50.160 --> 00:12:51.010
button in the background.

00:12:51.010 --> 00:12:55.270
Now when I click Google Drive
or Google+, or only Google,

00:12:55.270 --> 00:12:58.710
the Sign In button hides inside
of the background, and

00:12:58.710 --> 00:13:02.050
then it renders again inside
of that dialogue.

00:13:02.050 --> 00:13:03.590
And this is just something
that I like.

00:13:03.590 --> 00:13:06.200
I just wanted to have this
sort of experience.

00:13:06.200 --> 00:13:08.750
And I hooked in to the various
pieces of Google+.

00:13:08.750 --> 00:13:12.330
So that here again you can see
that in the background I'm

00:13:12.330 --> 00:13:14.390
hiding the Sign In button now.

00:13:14.390 --> 00:13:15.960
And I'm listening for
this cancel event.

00:13:15.960 --> 00:13:19.420
So when I click Cancel, there's
an error that's

00:13:19.420 --> 00:13:21.610
returned to that on
sign in callback.

00:13:21.610 --> 00:13:23.450
And then listening for that
error, I can then show the

00:13:23.450 --> 00:13:24.820
Sign In button again.

00:13:24.820 --> 00:13:27.530
I'll try to talk a little bit
more about this topic of

00:13:27.530 --> 00:13:30.150
things you can do when you're
handling errors inside the

00:13:30.150 --> 00:13:31.330
Sign In callback.

00:13:31.330 --> 00:13:35.280
But it's going to saved for a
future episode of the sign in

00:13:35.280 --> 00:13:36.100
best practices.

00:13:36.100 --> 00:13:39.620
So this is really all I had to
show for you today in terms of

00:13:39.620 --> 00:13:40.380
experience.

00:13:40.380 --> 00:13:44.390
But I have a great example of
someone doing this dynamic

00:13:44.390 --> 00:13:47.060
scoping from the real
world, Jolicloud.

00:13:47.060 --> 00:13:51.390
And if you look at their site,
you see that sign in

00:13:51.390 --> 00:13:53.430
experience that I simulated
before.

00:13:53.430 --> 00:13:56.520
So here's a Sign In button.

00:13:56.520 --> 00:13:58.740
Here's a Sign In with Google
button that's prominently

00:13:58.740 --> 00:14:00.580
displayed on the front
of their site.

00:14:00.580 --> 00:14:03.560
And when I click this, here
is one of these dialogs.

00:14:03.560 --> 00:14:07.370
And you can select or deselect
the features that you want to

00:14:07.370 --> 00:14:09.180
turn on and off.

00:14:09.180 --> 00:14:13.320
And when you do this, you feel
like you can trust Jolicloud

00:14:13.320 --> 00:14:15.140
with the things you
are sharing.

00:14:15.140 --> 00:14:17.730
So I really like when
sites do this.

00:14:17.730 --> 00:14:21.345
Because it allows me to
control upfront the

00:14:21.345 --> 00:14:22.150
information that I'm sharing.

00:14:22.150 --> 00:14:23.280
And it doesn't surprise me.

00:14:23.280 --> 00:14:27.510
I don't ask myself, why is this
site asking for access to

00:14:27.510 --> 00:14:28.300
my Google Drive?

00:14:28.300 --> 00:14:29.360
I'm suspicious of that.

00:14:29.360 --> 00:14:32.140
So by doing this you can create
a much more trusting

00:14:32.140 --> 00:14:33.420
connection with the user.

00:14:33.420 --> 00:14:36.560
And you can increase the
likeliness that users will

00:14:36.560 --> 00:14:38.270
actually sign in to your site.

00:14:38.270 --> 00:14:41.310
And once the users are signed
into your site, then you have

00:14:41.310 --> 00:14:45.580
a lot of tools at your disposal
for driving up

00:14:45.580 --> 00:14:46.540
engagement.

00:14:46.540 --> 00:14:50.380
So that's pretty much it
for today's episode.

00:14:50.380 --> 00:14:52.110
I have a couple of
announcements.

00:14:52.110 --> 00:14:56.320
The first is that the code from
the last episode is now

00:14:56.320 --> 00:14:58.130
inside of our GitHub pages.

00:14:58.130 --> 00:15:00.990
So if you're interested in
taking a closer look or

00:15:00.990 --> 00:15:04.690
running through the demo
yourself, the code's there.

00:15:04.690 --> 00:15:09.070
And also this week, we launched
PhotoHunt in C#.

00:15:09.070 --> 00:15:10.070
Sharp.

00:15:10.070 --> 00:15:13.050
And so now if you are a Windows
developer and are

00:15:13.050 --> 00:15:16.940
interested in taking a deeper
look at Google+ sign in

00:15:16.940 --> 00:15:20.360
integrations, that sample
is available for you.

00:15:20.360 --> 00:15:21.870
And that's it.

00:15:21.870 --> 00:15:25.980
So please watch our Google+
Developer Live shows every

00:15:25.980 --> 00:15:27.850
Tuesday at 2:30.

00:15:27.850 --> 00:15:30.480
So thanks for tuning in and
look to see you next time.

