WEBVTT
Kind: captions
Language: en

00:00:00.720 --> 00:00:03.360
So there is no real correct answer to this quiz if

00:00:03.360 --> 00:00:05.600
you really don't like money, I guess you could prefer not

00:00:05.600 --> 00:00:07.870
to be paid at all. The closest thing to a correct

00:00:07.870 --> 00:00:10.890
answer is that it depends, and it depends on how you

00:00:10.890 --> 00:00:13.920
interpret the meaning of biweekly. We could look that up in

00:00:13.920 --> 00:00:17.230
the dictionary to decide how we should interpret it, and if

00:00:17.230 --> 00:00:21.390
we look up biweekly in the dictionary, what we see is

00:00:21.390 --> 00:00:25.725
the definition of biweekly, which is right here. It says happening

00:00:25.725 --> 00:00:29.710
every two weeks is the first definition. The

00:00:29.710 --> 00:00:34.150
second definition is happening twice a week. If you

00:00:34.150 --> 00:00:36.450
have the first definition, you'd rather be paid

00:00:36.450 --> 00:00:39.380
weekly, assuming you'd like more money. If you have

00:00:39.380 --> 00:00:43.130
the second definition, you'd rather be paid biweekly.

00:00:43.130 --> 00:00:45.370
Maybe that's the problem with paper dictionaries, that they're

00:00:45.370 --> 00:00:48.140
not very precise, because they're old things. Let's look

00:00:48.140 --> 00:00:51.040
up a more modern dictionary, let's see what Wiktionary

00:00:51.040 --> 00:00:55.920
has to say about this. So, here's the Wiktionary entry for

00:00:55.920 --> 00:01:00.780
biweekly, and if we scroll down, we can see that it has two

00:01:00.780 --> 00:01:06.200
meanings. Occurring once every two weeks, occurring twice a week,

00:01:06.200 --> 00:01:08.450
this is chiefly in the UK the American

00:01:08.450 --> 00:01:10.400
dictionary didn't seem to think that. It seemed to

00:01:10.400 --> 00:01:14.150
think both definitions occurred in both countries. So,

00:01:14.150 --> 00:01:16.150
this is a pretty big problem. If we wrote

00:01:16.150 --> 00:01:19.450
a computer program and the program was doing our payroll

00:01:19.450 --> 00:01:22.350
and had to decide what it meant to pay someone biweekly,

00:01:22.350 --> 00:01:24.300
we want to make sure it understood that the same

00:01:24.300 --> 00:01:27.680
way the programmer did. So that's one important reason why we

00:01:27.680 --> 00:01:31.380
need to invent new languages like Python to program computers,

00:01:31.380 --> 00:01:35.000
rather than using natural languages that we already understand. And that's

00:01:35.000 --> 00:01:38.380
because we don't really understand languages like English or Mandarin, that

00:01:38.380 --> 00:01:41.830
there's lots of things that different people will understand different ways.

00:01:41.830 --> 00:01:44.850
And this happens at the granularity of words like biweekly.

00:01:44.850 --> 00:01:48.540
It also happens in complete sentences where there are many different

00:01:48.540 --> 00:01:51.410
ways to interpret the same phrase. Another reason we don't use

00:01:51.410 --> 00:01:54.930
natural languages for programming is that natural languages are actually very

00:01:54.930 --> 00:01:58.230
verbose. To write a program, we need to describe exactly

00:01:58.230 --> 00:02:01.220
what the computer should do in very precise sequence of steps.

00:02:01.220 --> 00:02:03.760
If we had to describe all those details using a natural

00:02:03.760 --> 00:02:06.890
language, that would require a huge amount of text. So we'll

00:02:06.890 --> 00:02:09.900
see soon that with a programming language like Python,

00:02:09.900 --> 00:02:11.430
we only need a few lines of code to

00:02:11.430 --> 00:02:14.320
describe a complicated thing and describe it in a

00:02:14.320 --> 00:02:17.200
very precise, step by step way. So I want

00:02:17.200 --> 00:02:19.360
you to think about as we write programs in

00:02:19.360 --> 00:02:21.880
this class, how much more detail you need to

00:02:21.880 --> 00:02:24.650
actually describe in English, precisely how to do what

00:02:24.650 --> 00:02:26.860
we're describing with a few lines of Python code.

