WEBVTT
Kind: captions
Language: en

00:00:00.604 --> 00:00:02.020
SPEAKER: Your app's
performance is

00:00:02.020 --> 00:00:06.550
crucial to your user's happiness
and your app's success.

00:00:06.550 --> 00:00:09.100
An internal study of
reviews on Google Play

00:00:09.100 --> 00:00:10.930
found that half of
one star reviews

00:00:10.930 --> 00:00:14.370
mentions stability or crashes.

00:00:14.370 --> 00:00:17.670
By identifying and fixing
issues and bad behaviors,

00:00:17.670 --> 00:00:20.610
you could see happier
users and better ratings,

00:00:20.610 --> 00:00:25.090
which will also improve
your app's discoverability.

00:00:25.090 --> 00:00:27.940
Introducing Android Vitals.

00:00:27.940 --> 00:00:30.400
Android Vitals in
the Play Console

00:00:30.400 --> 00:00:32.560
gives you new data
so you can understand

00:00:32.560 --> 00:00:34.960
your app's stability,
battery usage,

00:00:34.960 --> 00:00:36.640
and render time on real devices.

00:00:39.690 --> 00:00:41.280
Stability.

00:00:41.280 --> 00:00:44.160
Android Vitals include
two bad behaviors relating

00:00:44.160 --> 00:00:47.220
to stability, application
not responding errors,

00:00:47.220 --> 00:00:49.860
or ANRs, and crashes.

00:00:49.860 --> 00:00:52.410
ANRs occur when the
application freezes

00:00:52.410 --> 00:00:54.570
and stops responding
to user input for more

00:00:54.570 --> 00:00:56.340
than five seconds.

00:00:56.340 --> 00:00:58.290
This is usually
caused by deadlocks,

00:00:58.290 --> 00:01:02.010
slowness in UI threads
or background processes.

00:01:02.010 --> 00:01:05.010
When your app crashes, it can
be a frustrating experience

00:01:05.010 --> 00:01:07.800
for the user, impacting
retention and leading

00:01:07.800 --> 00:01:09.870
to bad reviews.

00:01:09.870 --> 00:01:11.850
The crash rate will
show you the percentage

00:01:11.850 --> 00:01:15.210
of users experiencing
crashes in your app.

00:01:15.210 --> 00:01:17.040
One way to address
stability issues

00:01:17.040 --> 00:01:19.380
is to run pre-launch
reports, which

00:01:19.380 --> 00:01:22.960
will test your alpha or beta
app on physical devices,

00:01:22.960 --> 00:01:27.440
so you can identify and fix
issues before you launch.

00:01:27.440 --> 00:01:28.820
Battery.

00:01:28.820 --> 00:01:31.220
Well-behaved apps
don't consume battery

00:01:31.220 --> 00:01:35.630
by keeping the device radio
and CPU on unnecessarily.

00:01:35.630 --> 00:01:37.700
Android Vitals lets
you see the metrics

00:01:37.700 --> 00:01:43.160
for two common causes of battery
drain, wake ups and wake locks.

00:01:43.160 --> 00:01:45.830
Wake ups are caused by
alarms performing time

00:01:45.830 --> 00:01:50.440
based operations that prevent
an idle device from sleeping.

00:01:50.440 --> 00:01:52.510
Wake locks are when
the app has your device

00:01:52.510 --> 00:01:56.300
working so hard it
won't allow it to sleep.

00:01:56.300 --> 00:02:00.440
For better battery life, you
can use job scheduling APIs

00:02:00.440 --> 00:02:03.680
to schedule asynchronous
tasks and specify conditions

00:02:03.680 --> 00:02:06.160
to maximize efficiency.

00:02:06.160 --> 00:02:09.550
This is suitable for small
tasks like clearing a cache

00:02:09.550 --> 00:02:13.560
and for large ones like syncing
a database to the cloud.

00:02:13.560 --> 00:02:15.150
Render time.

00:02:15.150 --> 00:02:17.130
The speed at which
your app renders

00:02:17.130 --> 00:02:20.160
impacts user perception
of your app performance.

00:02:20.160 --> 00:02:24.240
Slow render time or frozen
frames lead to bad reviews.

00:02:24.240 --> 00:02:26.940
Apps that have a render
time of 16 milliseconds

00:02:26.940 --> 00:02:29.550
or reach 60 frames
per second produce

00:02:29.550 --> 00:02:32.560
a silky smooth experience
for your users.

00:02:32.560 --> 00:02:35.520
This is the rate at which users
can perceive smooth motion

00:02:35.520 --> 00:02:36.780
within your app.

00:02:36.780 --> 00:02:38.820
Therefore, Android
Vitals lets you

00:02:38.820 --> 00:02:42.180
see what percentage of users
experienced more than 50%

00:02:42.180 --> 00:02:46.270
of frames with a render time of
greater than 16 milliseconds,

00:02:46.270 --> 00:02:50.020
so you can provide a smooth
experience across all devices.

00:02:50.020 --> 00:02:53.170
Anything greater than a render
time of 700 milliseconds

00:02:53.170 --> 00:02:56.370
is considered a frozen
frame, and at this rate,

00:02:56.370 --> 00:02:59.400
users consider an app
to be unresponsive.

00:02:59.400 --> 00:03:02.490
Avoid slow render
times or frozen frames

00:03:02.490 --> 00:03:05.310
by using frame metrics
APIs to measure

00:03:05.310 --> 00:03:08.220
per interaction frame
render times for devices

00:03:08.220 --> 00:03:09.630
during production.

00:03:09.630 --> 00:03:12.600
Find out about other
features in the Play Console

00:03:12.600 --> 00:03:16.260
and get tips to grow your app or
game business with the Playbook

00:03:16.260 --> 00:03:19.490
App available on Google Play.

