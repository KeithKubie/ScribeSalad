WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.000
All right. The answer in this case is actually a bit easier than in the previous example.

00:00:04.000 --> 00:00:08.000
What happens here is put in some value a and b.

00:00:08.000 --> 00:00:11.000
It turns out the running time doesn't depend on b--the number of steps doesn't depend on b--

00:00:11.000 --> 00:00:14.000
but it does depend on a, and what happens is a gets assigned to x.

00:00:14.000 --> 00:00:18.000
Then x gets counted down, so the number of times the body of this loop is executed

00:00:18.000 --> 00:00:22.000
is exactly whatever a is, and there's two statements in the loop.

00:00:22.000 --> 00:00:26.000
It's going to be 2 times a--this statement, this statement, this statement, for a total of 3.

00:00:26.000 --> 09:59:59.000
So 2a + 3 is the function that I was looking for.

