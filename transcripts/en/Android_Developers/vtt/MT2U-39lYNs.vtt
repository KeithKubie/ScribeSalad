WEBVTT
Kind: captions
Language: en

00:00:02.970 --> 00:00:08.630
[music playing] [countdown begins] [Android
noise] [airplane sound] [countdown ends]

00:00:08.630 --> 00:00:13.340
&gt;&gt;Joe Malin: Welcome once again to Android
Developer Office Hours.

00:00:13.340 --> 00:00:14.460
My name is Joe Malin.

00:00:14.460 --> 00:00:16.209
I'll be your moderator today.

00:00:16.209 --> 00:00:18.070
Next to me is Trevor Johns贸
&gt;&gt;Trevor Johns: Hi.

00:00:18.070 --> 00:00:21.039
&gt;&gt;Malin: And also with me is Alex Lucas.

00:00:21.039 --> 00:00:26.539
We have Tim Bray also here, and Daniel Pham
is our engineer.

00:00:26.539 --> 00:00:28.240
There's Tim.

00:00:28.240 --> 00:00:34.840
So without further ado, let's get started
with questions from Google Moderator.

00:00:34.840 --> 00:00:37.850
We have several questions on the order of
sensors of fragmentation.

00:00:37.850 --> 00:00:41.280
I'll read them and then let Tim and others
answer.

00:00:41.280 --> 00:00:46.760
"Can some sensor testing be introduced on
devices that Google approves by allowing the

00:00:46.760 --> 00:00:48.520
play store on the device?

00:00:48.520 --> 00:00:51.970
This would then show more standardized behavior.

00:00:51.970 --> 00:00:56.640
Many LG and Samsung accelerometers return
the same invalid value when the screen is

00:00:56.640 --> 00:00:57.640
off."

00:00:57.640 --> 00:01:00.920
And there's other questions to that regard,
as well.

00:01:00.920 --> 00:01:01.920
Somebody want to answer?

00:01:01.920 --> 00:01:05.360
&gt;&gt;Tim Bray: Yeah, I'll address that.

00:01:05.360 --> 00:01:07.720
Can people hear me?

00:01:07.720 --> 00:01:08.900
&gt;&gt;Joe: Yep!

00:01:08.900 --> 00:01:10.670
&gt;&gt;Alex Lucas: Yep!

00:01:10.670 --> 00:01:13.030
&gt;&gt;Tim: Okay, fair enough.

00:01:13.030 --> 00:01:17.040
To start with, it's even worse than you think
it is, because if you look carefully at the

00:01:17.040 --> 00:01:21.330
Android compatible device definition, it doesn't
actually require that an Android device have

00:01:21.330 --> 00:01:22.460
any sensors at all.

00:01:22.460 --> 00:01:27.979
One of the reasons for that is that it also
[unintelligible, mic interference] that aren't

00:01:27.979 --> 00:01:31.930
going to have accelerometers or anything like
that.

00:01:31.930 --> 00:01:38.590
It's absolutely keythe case, as far as your
correct code, that depends on sensors, you're

00:01:38.590 --> 00:01:43.600
going to have to do some probing and testing
to see if the sensor is there.

00:01:43.600 --> 00:01:46.810
You may even want to get a little bit more
subtle, because people who've done this kind

00:01:46.810 --> 00:01:53.440
of stuff have noticed that if you're doing
motion related stuff, it makes a big difference

00:01:53.440 --> 00:01:57.390
whether the phone has a gyroscope or not.

00:01:57.390 --> 00:02:00.190
You get domestic immensely better quality
if there's a gyroscope.

00:02:00.190 --> 00:02:03.440
{For some cases, you might even be inclined
to round, with a gyroscope, for example.}

00:02:03.440 --> 00:02:07.070
Now, having said all that, what the person
was asking here贸"Jann, Jahn," something like

00:02:07.070 --> 00:02:11.620
that贸Jan, are you one of the people we can
see?

00:02:11.620 --> 00:02:13.780
If so, wave.

00:02:13.780 --> 00:02:16.200
&gt;&gt;Joe: No, doesn't look like it.

00:02:16.200 --> 00:02:18.680
&gt;&gt;Dan: Not as far as I can tell.

00:02:18.680 --> 00:02:19.680
&gt;&gt;Joe: Nope.

00:02:19.680 --> 00:02:20.680
&gt;&gt;Tim: Okay.

00:02:20.680 --> 00:02:21.680
Somebody else just joined.

00:02:21.680 --> 00:02:27.890
Anyhow, what Jan's really driving at was:
should we try and crack down on operativeapparent

00:02:27.890 --> 00:02:31.400
incompatibilities between one model and the
next?

00:02:31.400 --> 00:02:38.319
If you ask me, the current Compatibility Test
Suite does have some tests that I've tried

00:02:38.319 --> 00:02:44.069
on a few devices, and they're actually pretty
good for accelerometer and gyroscope.

00:02:44.069 --> 00:02:48.349
In particular, when I used them, I noticed
some little quirksperks that I've observed

00:02:48.349 --> 00:02:49.349
in particular hardware.

00:02:49.349 --> 00:02:50.530
But not that many.

00:02:50.530 --> 00:02:54.250
There's also some basic tests that Dave and
I do to check.

00:02:54.250 --> 00:02:57.390
So let me say a few things in general.

00:02:57.390 --> 00:03:03.950
First of all, empirically, I see that there's
quite a few decent apps out there that make

00:03:03.950 --> 00:03:09.450
excellent use of the sensors, in particular
the accelerometer and the gyroscope.

00:03:09.450 --> 00:03:14.010
So whereas there are some compatibility issues
here, we see that people have successfully

00:03:14.010 --> 00:03:16.290
worked around them and got really good results.

00:03:16.290 --> 00:03:21.610
So yeah, it may be a little harder than we'd
all like it to be, but you can actually do

00:03:21.610 --> 00:03:22.610
it.

00:03:22.610 --> 00:03:28.890
Another thing I should point out is that the
Compatibility Test Suite is one of the most

00:03:28.890 --> 00:03:30.350
open source-y parts of Android.

00:03:30.350 --> 00:03:32.270
The whole thing is open source.

00:03:32.270 --> 00:03:35.480
It's developed in an open source way.

00:03:35.480 --> 00:03:39.690
And anybody who observes something they think
is really wonky in an Android device: "Hey,

00:03:39.690 --> 00:03:45.620
it would be a really good idea to pull together
a test and submit it to the project."

00:03:45.620 --> 00:03:49.470
I suspect those guys will seem quite open
to looking at it.

00:03:49.470 --> 00:03:59.580
The final point somebody made was that they
observed issues where sensors were giving

00:03:59.580 --> 00:04:03.170
wonky values when the screen was off, which
means probably that the device is just lying

00:04:03.170 --> 00:04:05.250
there, not doing anything.

00:04:05.250 --> 00:04:06.730
I hadn't actually noticed that.

00:04:06.730 --> 00:04:10.560
I looked around, I also didn't see actually
any live bug file on that one.

00:04:10.560 --> 00:04:17.889
Perhaps the reason there is that all work
that I did on Samsung program was waiting

00:04:17.889 --> 00:04:26.670
to sitwaving the thing around on capturing---
[voices coming through the computer]

00:04:26.670 --> 00:04:34.000
&gt;&gt;Trevor: That's an interesting noise coming
from the Hangout there.

00:04:34.000 --> 00:04:37.070
[voices continue] Do you just want to mute
everyone else, Dan?

00:04:37.070 --> 00:04:39.180
&gt;&gt;Dan Pham: Yeah, I'm going to go--
&gt;&gt;Trevor: And just a reminder for those of

00:04:39.180 --> 00:04:42.100
you who are joining us live贸
&gt;&gt;Joe: Hold on for a second, Tim.

00:04:42.100 --> 00:04:43.100
&gt;&gt;Trevor: Yeah.

00:04:43.100 --> 00:04:45.870
Just a reminder for those of you who are joining
us live, please mute your microphone when

00:04:45.870 --> 00:04:46.870
you're not speaking.

00:04:46.870 --> 00:04:49.550
There's a little button in the upper right
hand corner of Google+.

00:04:49.550 --> 00:04:51.199
Go ahead and hit that.

00:04:51.199 --> 00:04:55.400
Otherwise, it gets a little bit hard to hear
what people are saying in here.

00:04:55.400 --> 00:04:59.000
[voices from computers]
&gt;&gt;Joe: I'm still hearing something.

00:04:59.000 --> 00:05:00.000
&gt;&gt;Trevor: Yeah, we can hear somebody laughing.

00:05:00.000 --> 00:05:01.000
Hello!

00:05:01.000 --> 00:05:02.000
&gt;&gt;Tim: It's the gentlemen with the black hair
and the red shirt there.

00:05:02.000 --> 00:05:03.000
[pause]
&gt;&gt;Dan: All right, don't worry.

00:05:03.000 --> 00:05:04.000
I'm on it, guys.

00:05:04.000 --> 00:05:05.000
Just do your thing.

00:05:05.000 --> 00:05:06.000
&gt;&gt;Joe: Okay.

00:05:06.000 --> 00:05:07.000
Right.

00:05:07.000 --> 00:05:08.870
&gt;&gt;Trevor: [laughs]
&gt;&gt;Tim: Okay, so where was I?

00:05:08.870 --> 00:05:14.750
So yeah, there were complaints about devices,
complaints when things are asleep.

00:05:14.750 --> 00:05:16.900
I'm sorry, I can't speak to that one.

00:05:16.900 --> 00:05:17.900
I haven't observed that one.

00:05:17.900 --> 00:05:18.900
There may, in fact, be bugs there.

00:05:18.900 --> 00:05:22.139
I'll tell you, I do not look if there are
tests in the CTS of that.

00:05:22.139 --> 00:05:23.139
&gt;&gt;Joe: Okay.

00:05:23.139 --> 00:05:24.280
&gt;&gt;Tim: So that's something you should look
at.

00:05:24.280 --> 00:05:29.720
&gt;&gt;Joe: I would add that if you are using sensors
and you run into something which you think

00:05:29.720 --> 00:05:34.280
is a bug, or just not working the way you
think it should be working, you should file

00:05:34.280 --> 00:05:35.470
a bug.

00:05:35.470 --> 00:05:36.470
Okay?

00:05:36.470 --> 00:05:42.699
You know, not everything that's out there
that you encounter is deliberate.

00:05:42.699 --> 00:05:45.479
So when in doubt, you should file a bug.

00:05:45.479 --> 00:05:50.820
It's either a bug or it's some aspect of expected
behavior.

00:05:50.820 --> 00:05:56.950
And if it is a bug, we can get to fixing or
addressing it.

00:05:56.950 --> 00:05:57.950
Any other comments?

00:05:57.950 --> 00:06:01.250
[pause]
&gt;&gt;Trevor: No, I think that's good.

00:06:01.250 --> 00:06:02.250
&gt;&gt;Joe: All right.

00:06:02.250 --> 00:06:05.889
Let me move to the next question on Moderator,
unless we have somebody in the Hangout that

00:06:05.889 --> 00:06:07.240
wants to ask a question.

00:06:07.240 --> 00:06:08.240
Hmm?

00:06:08.240 --> 00:06:09.240
Nope.

00:06:09.240 --> 00:06:10.610
&gt;&gt;Trevor: We do have a pretty full Hangout.

00:06:10.610 --> 00:06:16.630
Also, yeah, just a reminder for those of you
who are joining us live: you are welcome to

00:06:16.630 --> 00:06:19.220
join us via Hangout, ask questions.

00:06:19.220 --> 00:06:20.699
We're here to answer them.

00:06:20.699 --> 00:06:25.350
If you are joining via the Hangout, we assume
that you are going to ask a question.

00:06:25.350 --> 00:06:27.949
We only have ten slots at a time.

00:06:27.949 --> 00:06:31.520
It looks like it's getting pretty full, so
we're going to ask those ten of you to actually

00:06:31.520 --> 00:06:33.320
start asking questions here in short order.

00:06:33.320 --> 00:06:36.320
Otherwise, we'll have to start kicking some
of you off to make room for people who do

00:06:36.320 --> 00:06:37.759
have questions.

00:06:37.759 --> 00:06:43.940
That being said, the live feed is available
via Youtube as well, so that way, everybody

00:06:43.940 --> 00:06:48.020
who is watching and doesn't have a question
can view us that way.

00:06:48.020 --> 00:06:49.020
&gt;&gt;Joe: Right.

00:06:49.020 --> 00:06:54.410
In summary, if you want to watch and be ready
to ask a question if you've got one, go to

00:06:54.410 --> 00:06:55.410
Youtube.

00:06:55.410 --> 00:06:56.889
&gt;&gt;Trevor: No, go to Hangout if they have a
question.

00:06:56.889 --> 00:06:58.400
&gt;&gt;Joe: Well, hold on.

00:06:58.400 --> 00:07:01.490
&gt;&gt;Trevor: [laughs]
&gt;&gt;Joe: If you don't have a question right

00:07:01.490 --> 00:07:05.300
now, go to Youtube and you can watch live.

00:07:05.300 --> 00:07:08.270
Then, if you've got a question, jump into
the Hangout.

00:07:08.270 --> 00:07:11.980
If you're waiting to ask a question, stay
in the Hangout.

00:07:11.980 --> 00:07:12.980
&gt;&gt;Trevor: Right.

00:07:12.980 --> 00:07:13.980
&gt;&gt;Joe: Okay?

00:07:13.980 --> 00:07:15.819
Do we have any questions waiting?

00:07:15.819 --> 00:07:16.819
&gt;&gt;Dan: We have a Jared.

00:07:16.819 --> 00:07:18.850
I'm going to put him on momentarily.

00:07:18.850 --> 00:07:19.970
&gt;&gt;Joe: Okay.

00:07:19.970 --> 00:07:22.910
&gt;&gt;Dan: All right, Jared, you're on.

00:07:22.910 --> 00:07:23.910
Go ahead.

00:07:23.910 --> 00:07:30.110
&gt;&gt;Jared: In my halfapp, I'm working with a
whole bunch of background threads, and I'm

00:07:30.110 --> 00:07:34.259
starting to really have some issues with race
conditions and trying to figure out which

00:07:34.259 --> 00:07:38.800
thread is doing what, that sort of thing.

00:07:38.800 --> 00:07:44.010
I just started looking at Traceview a couple
days ago, and it is incredibly difficult to

00:07:44.010 --> 00:07:47.550
try and make any sense of what it actually
gives me.

00:07:47.550 --> 00:07:53.389
Is there a recommended practice or a different
tool, perhaps, that might make a little more

00:07:53.389 --> 00:07:54.389
sense?

00:07:54.389 --> 00:07:58.199
&gt;&gt;Trevor: Traceview is more for performance
optimization.

00:07:58.199 --> 00:08:06.200
It gives you an idea of when your app is drawing
to the screen, when it is actually using CPU,

00:08:06.200 --> 00:08:07.840
things like that.

00:08:07.840 --> 00:08:11.199
It's not so good at seeing interactions between
threads.

00:08:11.199 --> 00:08:15.560
And really, there's not too much that's really
going to do a good job of visualizing that

00:08:15.560 --> 00:08:16.560
for you.

00:08:16.560 --> 00:08:21.280
Your best tool, really, there, is the debugger
built into your IDE, whether it's Eclipse

00:08:21.280 --> 00:08:26.300
or IntelliJ or using the Java debugger on
the command line.

00:08:26.300 --> 00:08:29.460
Race conditions are always notoriously difficult
to debug.

00:08:29.460 --> 00:08:35.950
They're always a little bit painful, unfortunately,
and that's just the nature of concurrent programming.

00:08:35.950 --> 00:08:39.530
I really don't have too much to say that's
gonna make that really easy for you, other

00:08:39.530 --> 00:08:44.779
than use a standard debugger and try and sort
things out that way.

00:08:44.779 --> 00:08:48.809
I assume this is just an ordinary race condition
within your code.

00:08:48.809 --> 00:08:50.670
There's nothing having to do with the GPE
or贸

00:08:50.670 --> 00:08:51.670
&gt;&gt;Jared: Yeah.

00:08:51.670 --> 00:08:56.110
So really, what's happening is that I have
a class that takes messages for data to post

00:08:56.110 --> 00:09:02.709
to the database in batches.

00:09:02.709 --> 00:09:06.089
Under certain conditions, it actually slows
down the UI.

00:09:06.089 --> 00:09:10.970
I'm presuming because I'm synchronizing data,
you can have cert function calls and stuff

00:09:10.970 --> 00:09:11.970
like that.

00:09:11.970 --> 00:09:16.889
&gt;&gt;Trevor: Okay, so, well, if it's slowing
down the UI贸Your UI should be on a self-contained

00:09:16.889 --> 00:09:17.910
UI thread.

00:09:17.910 --> 00:09:19.720
You shouldn't begin any data operations there.

00:09:19.720 --> 00:09:20.720
&gt;&gt;Jared: Right.

00:09:20.720 --> 00:09:21.720
Which it is.

00:09:21.720 --> 00:09:26.620
But I think that what's happening is when
it goes to actually write the data to the

00:09:26.620 --> 00:09:28.389
database, it synchronizes on the class.

00:09:28.389 --> 00:09:33.369
And I think that the UI is unable to get data
from it.

00:09:33.369 --> 00:09:35.259
&gt;&gt;Trevor: Oh, okay.

00:09:35.259 --> 00:09:36.259
Gotcha.

00:09:36.259 --> 00:09:38.110
&gt;&gt;Jared: I'm trying to verify that.

00:09:38.110 --> 00:09:39.110
&gt;&gt;Tim: Right.

00:09:39.110 --> 00:09:42.110
I did a ton of research on concurrency a couple
years ago.

00:09:42.110 --> 00:09:53.730
A few remarks: if the Java model of concurrency,
which all Android inherits is sorta pessimal.

00:09:53.730 --> 00:10:00.239
It allows for shared computable state, which
makes multi-threaded things really, really

00:10:00.239 --> 00:10:02.850
hard to think about and understand.

00:10:02.850 --> 00:10:05.560
And you start to have a lot of different mutexes
and so on.

00:10:05.560 --> 00:10:10.579
You're very likely gonna end up in a situation
where it's gonna become nearly impossible

00:10:10.579 --> 00:10:12.180
to understand what's going on.

00:10:12.180 --> 00:10:18.610
One thing I would strongly recommend would
be to go and read a couple of good, short

00:10:18.610 --> 00:10:24.309
essays on functional programming, which is
the best technique we know about to avoid

00:10:24.309 --> 00:10:31.059
having to {unintelligible} to the extent that
you've made your code truly functional.

00:10:31.059 --> 00:10:33.089
You dodge all this kind of stuff.

00:10:33.089 --> 00:10:39.870
I would also go type the name Doug Lea, D-Doug
L-E-A, into Google and read a couple of his

00:10:39.870 --> 00:10:40.870
things that he wrote.

00:10:40.870 --> 00:10:45.569
He is maybe our leading thinker on how to
do this stuff without sticking your head up

00:10:45.569 --> 00:10:48.170
your ass, which I've done a few times.

00:10:48.170 --> 00:10:50.759
Probably there's some really helpful stuff
in there.

00:10:50.759 --> 00:10:55.800
One particular thing I will say is that if
you can go through one of the built in things

00:10:55.800 --> 00:11:01.410
like AsyncTask or IntentService or something
like that, they are really, really fully debugged

00:11:01.410 --> 00:11:02.410
on this stuff.

00:11:02.410 --> 00:11:07.579
They are less likely to barf on your thread
pools and code you write yourself.

00:11:07.579 --> 00:11:08.579
&gt;&gt;Joe: Right.

00:11:08.579 --> 00:11:13.239
I have a question about this贸Jared, right?

00:11:13.239 --> 00:11:17.459
Which is, you're trying to run multiple threads
to write to the database?

00:11:17.459 --> 00:11:24.899
&gt;&gt;Jared: Well, specifically, the model is:
I have a thread that manages all the access

00:11:24.899 --> 00:11:25.899
to the database.

00:11:25.899 --> 00:11:28.139
It's my single connection with the database.

00:11:28.139 --> 00:11:29.139
&gt;&gt;Joe: Aha.

00:11:29.139 --> 00:11:34.339
&gt;&gt;Jared: And it basically, in its run loop,
it at the start of it checks to see if there's

00:11:34.339 --> 00:11:35.630
any pending data to write.

00:11:35.630 --> 00:11:37.279
If there is, it writes it.

00:11:37.279 --> 00:11:39.230
Then it sleeps for a certain amount of time.

00:11:39.230 --> 00:11:48.059
Meanwhile, other things can post the data
in, but there's贸when it goes to write the

00:11:48.059 --> 00:11:52.149
data, I have it synchronize on itself, which
may actually be where the problem is.

00:11:52.149 --> 00:11:53.379
&gt;&gt;Joe: Hmm.

00:11:53.379 --> 00:12:00.670
&gt;&gt;Jared: But my idea was I didn't want it
to贸Because there's a lot of data, it's weather

00:12:00.670 --> 00:12:06.319
data, I don't want it to start arriving and
then get an update halfway through and write

00:12:06.319 --> 00:12:10.529
stuff that doesn't correspond to the same
timestamp.

00:12:10.529 --> 00:12:18.290
So I'm trying to figure out if maybe there's
a way that I can read data without synchronizing

00:12:18.290 --> 00:12:19.910
on it, but write data without贸yeah.

00:12:19.910 --> 00:12:22.679
That's what I'm trying to figure out.

00:12:22.679 --> 00:12:23.679
&gt;&gt;Joe: I understand.

00:12:23.679 --> 00:12:28.660
&gt;&gt;Tim: I would also贸I just looked, and I
noticed that the Android SDK includes the

00:12:28.660 --> 00:12:30.630
java.util.concurrent class.

00:12:30.630 --> 00:12:31.690
&gt;&gt;Jared: Mmhmm.

00:12:31.690 --> 00:12:38.079
&gt;&gt;Tim: I think you might be well-served by
going and diving into that pond and looking贸It

00:12:38.079 --> 00:12:44.120
gives you things like thread pools, synchronization,
and queues that will {}exhaust part of the

00:12:44.120 --> 00:12:45.499
queue.

00:12:45.499 --> 00:12:46.529
It's all well, well, well debugged code.

00:12:46.529 --> 00:12:47.529
&gt;&gt;Jared: Okay.

00:12:47.529 --> 00:12:49.999
&gt;&gt;Tim: And to the extent that you can use
that, that might help.

00:12:49.999 --> 00:12:53.829
&gt;&gt;Joe: Jared, are you doing this work right
now on an AsyncTask?

00:12:53.829 --> 00:13:00.509
&gt;&gt;Jared: No, the problem I have with the AsyncTask
is because that's all basically a thread pool.

00:13:00.509 --> 00:13:06.350
I have other parts that function on the UI
that use AsyncTask, and it was interfering

00:13:06.350 --> 00:13:07.430
with that.

00:13:07.430 --> 00:13:15.220
I couldn't do the database write and maintain贸at
least, I couldn't think of a way of maintaining

00:13:15.220 --> 00:13:21.439
the one connection to the database through
an AsyncTask, and make sure that all the writing

00:13:21.439 --> 00:13:22.670
happened in the background.

00:13:22.670 --> 00:13:24.739
&gt;&gt;Joe: Ah, okay.

00:13:24.739 --> 00:13:29.569
&gt;&gt;Jared: I'll probably, you know贸
&gt;&gt;Joe: Yeah.

00:13:29.569 --> 00:13:34.379
It's a difficult one to answer because without
knowing more about what exactly you're trying

00:13:34.379 --> 00:13:35.600
to do, you would贸
&gt;&gt;Jared: Right.

00:13:35.600 --> 00:13:39.060
I'm trying to贸I mean, I could use a content
provider.

00:13:39.060 --> 00:13:40.660
I'm sure that would simplify a lot of things.

00:13:40.660 --> 00:13:43.790
But I don't actually have need of a content
provider, aside from贸

00:13:43.790 --> 00:13:47.949
&gt;&gt;Joe: Yeah, I don't贸I honestly贸
&gt;&gt;Tim: If it makes you feel any better, what

00:13:47.949 --> 00:13:50.799
you're trying to do is well-known to be a
hard thing.

00:13:50.799 --> 00:13:51.799
&gt;&gt;Jared: Right.

00:13:51.799 --> 00:13:52.819
I know that.

00:13:52.819 --> 00:13:59.350
I mean, originally, I programmed in C++, so
it's even worse.

00:13:59.350 --> 00:14:05.319
[all laugh] I was hoping there might be some
sort of tool that is specifically for monitoring

00:14:05.319 --> 00:14:06.319
threads.

00:14:06.319 --> 00:14:07.319
&gt;&gt;Joe: No.

00:14:07.319 --> 00:14:14.069
And I don't think a content provider would
help you all that much because that's just

00:14:14.069 --> 00:14:17.919
a lightweight-- in a lot of respects, it's
just a lightweight shell around the database

00:14:17.919 --> 00:14:18.919
anyway.

00:14:18.919 --> 00:14:21.859
You start to run into the problems that you're
running into.

00:14:21.859 --> 00:14:22.859
&gt;&gt;Jared: Yeah.

00:14:22.859 --> 00:14:26.129
Basically, I tried to implement my own thread
pool around the database, and I probably just

00:14:26.129 --> 00:14:28.709
didn't do a very good job of it.

00:14:28.709 --> 00:14:29.709
&gt;&gt;Joe: Mmm.

00:14:29.709 --> 00:14:30.709
Okay.

00:14:30.709 --> 00:14:34.089
Any other comments or ideas that we can provide?

00:14:34.089 --> 00:14:37.709
[pause]
&gt;&gt;Trevor: I think that's covered quite a bit.

00:14:37.709 --> 00:14:38.709
[chuckles]
&gt;&gt;Joe: Yeah.

00:14:38.709 --> 00:14:40.639
&gt;&gt;Jared: I'll take a look at the concurrent
classes.

00:14:40.639 --> 00:14:43.829
That sounds like it might be a good place
to start.

00:14:43.829 --> 00:14:44.829
&gt;&gt;Joe: Okay.

00:14:44.829 --> 00:14:45.829
Thank you very much for your patience.

00:14:45.829 --> 00:14:47.019
&gt;&gt;Jared: Yeah, thank you.

00:14:47.019 --> 00:14:51.679
&gt;&gt;Dan: All right, so we have another user
in the Hangout who wants to ask a question.

00:14:51.679 --> 00:14:52.720
His name is Martin.

00:14:52.720 --> 00:14:54.319
I'm going to put Martin on.

00:14:54.319 --> 00:14:55.319
&gt;&gt;Joe: Please.

00:14:55.319 --> 00:14:56.319
Please do.

00:14:56.319 --> 00:14:57.319
[pause] Hello, Martin.

00:14:57.319 --> 00:14:58.319
&gt;&gt;Martin: Hey guys.

00:14:58.319 --> 00:14:59.319
&gt;&gt;Trevor: Howdy.

00:14:59.319 --> 00:15:00.319
&gt;&gt;Martin: Oh, hey.

00:15:00.319 --> 00:15:05.610
I want to touch the sensors a little more,
since that's basically the topic today.

00:15:05.610 --> 00:15:13.209
[laughs] YouWe were talking about the accelerometer
in particular not working in the background

00:15:13.209 --> 00:15:14.209
of some devices, right?

00:15:14.209 --> 00:15:20.230
So there's, I mean, there is a ton of devices
send reports just surrounding that but there's

00:15:20.230 --> 00:15:23.579
also a fairly easy solution that works on
some devices.

00:15:23.579 --> 00:15:29.740
Basically restart the accelerometer when you
receive a screen-off broadcast.

00:15:29.740 --> 00:15:36.209
The problem there is贸The question would be贸In
some devices, even that does not work.

00:15:36.209 --> 00:15:44.559
So if you hold the partial wakelock on the
device, should that let me restart the accelerometer

00:15:44.559 --> 00:15:46.410
or not?

00:15:46.410 --> 00:15:49.009
&gt;&gt;Trevor: That's a good question.

00:15:49.009 --> 00:15:54.120
I don't think the behavior there is actually
specified as part of the API.

00:15:54.120 --> 00:16:01.309
I suspect what you've probably found is something
that works by chance, but not by design.

00:16:01.309 --> 00:16:02.639
[laughs]
&gt;&gt;Martin: Oh.

00:16:02.639 --> 00:16:04.470
&gt;&gt;Trevor: It's difficult to say exactly.

00:16:04.470 --> 00:16:09.810
Just to be clear, when you say "in the background,",
do you mean your app is no longer in foreground,

00:16:09.810 --> 00:16:12.019
or do you mean you've shut the phone completely
off?

00:16:12.019 --> 00:16:16.619
&gt;&gt;Martin: I mean, it doesn't even matter if
the app is in the foreground or background.

00:16:16.619 --> 00:16:20.949
Basically, it is a service, so it shouldn't
make any difference.

00:16:20.949 --> 00:16:26.910
You just贸What you notice is on some phones,
when you press the power button and you turn

00:16:26.910 --> 00:16:32.879
the screen off, that automatically shuts down
the accelerometer as well.

00:16:32.879 --> 00:16:35.319
So what you do is you is you basically listen
for the screen-off broadcast.

00:16:35.319 --> 00:16:40.679
You actually need to wait for a couple of
seconds, and then restart the accelerometer,

00:16:40.679 --> 00:16:41.910
right?

00:16:41.910 --> 00:16:45.819
So the expected behavior or the documented
thing would be events for the wakelock, right?

00:16:45.819 --> 00:16:51.170
The partial wakelock should keep at least
the processor running, and I would expect

00:16:51.170 --> 00:16:56.449
that by default, it would enable you to enable
other stuff as well, right?

00:16:56.449 --> 00:16:59.839
&gt;&gt;Trevor: [laughs] That would have been my
expectation as well, yes.

00:16:59.839 --> 00:17:00.839
&gt;&gt;Joe: Right.

00:17:00.839 --> 00:17:06.439
&gt;&gt;Martin: I'm just贸It feels like it's not
enabled, or it works by chance.

00:17:06.439 --> 00:17:11.319
It feels like it's disabled by design [laughs]
on some of the devices.

00:17:11.319 --> 00:17:13.381
&gt;&gt;Tim: I wouldn't be surprised, you know.

00:17:13.381 --> 00:17:14.860
The {CDDV} doesn't say anything about that.

00:17:14.860 --> 00:17:15.860
&gt;&gt;Trevor: Right.

00:17:15.860 --> 00:17:19.860
&gt;&gt;Tim: I could imagine some system builder
deciding to just turn it off when the power

00:17:19.860 --> 00:17:23.419
goes off, because it's a sort of self-defense
against developers who don't do the right

00:17:23.419 --> 00:17:24.419
thing.

00:17:24.419 --> 00:17:25.419
[laughs]
&gt;&gt;Joe: Right.

00:17:25.419 --> 00:17:28.740
&gt;&gt;Trevor: So when I say, "It works by chance,"
I'm not saying that you're running into some

00:17:28.740 --> 00:17:32.139
scenario that hasn't been conceived of somewhere
by some engineer.

00:17:32.139 --> 00:17:35.570
It's just not part of the standard Android
design.

00:17:35.570 --> 00:17:39.530
We specify what things need to look like at
the surface level, what the API to developers

00:17:39.530 --> 00:17:40.530
looks like.

00:17:40.530 --> 00:17:46.799
But as far as how things like device drivers
are implemented, a lot of that is left up

00:17:46.799 --> 00:17:49.370
to device manufacturers out of necessity.

00:17:49.370 --> 00:17:53.400
And it's possible somebody just thought, "Oh,
leaving the accelerometer running when the

00:17:53.400 --> 00:17:58.650
screen is off consumes a lot of battery power,
so let's just go in a terminate theany accelerometer

00:17:58.650 --> 00:18:00.580
listeners that are waiting."

00:18:00.580 --> 00:18:05.870
The probably just贸maybe they didn't think
of the implications of that, or maybe they

00:18:05.870 --> 00:18:08.260
really don't want you to do that.

00:18:08.260 --> 00:18:09.260
Who knows.

00:18:09.260 --> 00:18:13.750
But in any case, it's not贸the behavior here
isn't something that we specify in the API.

00:18:13.750 --> 00:18:18.960
I do agree, though, that the right thing,
probably, is to leave the accelerometer running

00:18:18.960 --> 00:18:21.630
as long as you hold a wakelock.

00:18:21.630 --> 00:18:27.820
Generally speaking, when you run into bugs
like this, we want to get something into the

00:18:27.820 --> 00:18:32.659
CDDV and the CTS to go and make sure that
the behavior is really well specified.

00:18:32.659 --> 00:18:35.600
Basically, that means filing a bug.

00:18:35.600 --> 00:18:40.230
So if you go to b.android.com, that's usually
oura recommendation.

00:18:40.230 --> 00:18:44.570
Open a bug there, and if you're really ambitious,
you can actually go so far as to submit a

00:18:44.570 --> 00:18:45.570
patch.

00:18:45.570 --> 00:18:48.299
Since you brought this up here, I'll make
sure that thosedoes get filed for you.

00:18:48.299 --> 00:18:51.690
Now, which device in particular were you working
with?

00:18:51.690 --> 00:18:55.830
&gt;&gt;Martin: [sighs] I have an Excel spreadsheet
somewhere.

00:18:55.830 --> 00:18:57.779
[laughs] I can send it to you.

00:18:57.779 --> 00:19:01.150
毛Cause贸
&gt;&gt;Tim: But just generally: do most of them

00:19:01.150 --> 00:19:02.399
turn off or do most of them stay on?

00:19:02.399 --> 00:19:05.100
&gt;&gt;Martin: I would say it's kinda a 50/50 situation.

00:19:05.100 --> 00:19:06.100
&gt;&gt;Tim: Ah!

00:19:06.100 --> 00:19:07.100
No kidding.

00:19:07.100 --> 00:19:08.100
&gt;&gt;Martin: Yeah.

00:19:08.100 --> 00:19:12.289
So it works贸I had problems, actually, on
a Google device.

00:19:12.289 --> 00:19:19.490
I think the Galaxy S-- or the Nexus S, pardon,
was problematic in that regard.

00:19:19.490 --> 00:19:21.799
&gt;&gt;Joe: What's the use case?

00:19:21.799 --> 00:19:28.210
I'm assuming that you want to be able to control
when the accelerator贸or, at least, detect

00:19:28.210 --> 00:19:34.590
when the accelerator's gonna turn off by saying,
"If I have a wakelock, then it shouldn't turn

00:19:34.590 --> 00:19:35.590
off."

00:19:35.590 --> 00:19:38.140
So what are you trying to accomplish by this?

00:19:38.140 --> 00:19:42.019
&gt;&gt;Martin: Here's the use case.

00:19:42.019 --> 00:19:47.190
I want to monitor贸Let's say, let's pretend
I want to monitor activity during the day.

00:19:47.190 --> 00:19:50.929
So I have a service that's in the background,
and every time you turn off the screen, the

00:19:50.929 --> 00:19:53.210
accelerometer goes off.

00:19:53.210 --> 00:19:59.389
What we do here in our case is we acquire
a new wakelock, a new partial wakelock, 毛cause

00:19:59.389 --> 00:20:06.429
it appears that you need to acquire a new
one, 毛cause the old one, wannabe, expired.

00:20:06.429 --> 00:20:07.429
That happened in several devices.

00:20:07.429 --> 00:20:10.240
[clears throat] So listen for the screen-off
broadcast.

00:20:10.240 --> 00:20:14.429
You acquire a new wakelock the same second.

00:20:14.429 --> 00:20:18.490
You wait for-- I think waiting for three seconds
was the sweet spot.

00:20:18.490 --> 00:20:21.520
And then you go to the accelerometer and say,
"Hey!

00:20:21.520 --> 00:20:23.559
Start now."

00:20:23.559 --> 00:20:25.009
And then it's on.

00:20:25.009 --> 00:20:28.610
In 99.5% of the cases, it actually works.

00:20:28.610 --> 00:20:30.409
Some devices贸
&gt;&gt;Alex: Really?

00:20:30.409 --> 00:20:31.409
&gt;&gt;Martin: Yeah.

00:20:31.409 --> 00:20:37.150
I can understand why you would turn off the
accelerometer when you turn the screen off.

00:20:37.150 --> 00:20:43.620
What I don't understand is the next 0.5% of
devices which ignored the wakelock that should

00:20:43.620 --> 00:20:47.480
allow you to wake the damn accelerometer.

00:20:47.480 --> 00:20:53.090
&gt;&gt;Tim: Okay, it seems like if we could agree
that it's a bug, it would be a well-characterized

00:20:53.090 --> 00:20:54.090
bug.

00:20:54.090 --> 00:20:57.210
It's the case where you're trying to turn
it on when the {}machine is.

00:20:57.210 --> 00:20:58.399
&gt;&gt;Trevor: Yeah.

00:20:58.399 --> 00:20:59.600
&gt;&gt;Martin: Yes.

00:20:59.600 --> 00:21:02.220
I'm not sure if it's a bug, that's the thing.

00:21:02.220 --> 00:21:08.070
&gt;&gt;Trevor: It sounds like贸I mean, it's a bug
in the sense that it's behavior that's not

00:21:08.070 --> 00:21:09.070
well-specified.

00:21:09.070 --> 00:21:13.179
So again, this is a really good candidate
for something that we should include as part

00:21:13.179 --> 00:21:14.409
of the Compatibility Test Suite.

00:21:14.409 --> 00:21:15.409
&gt;&gt;Joe: Right.

00:21:15.409 --> 00:21:18.419
&gt;&gt;Trevor: If you贸Since you already have that
spreadsheet, that's actually really good data

00:21:18.419 --> 00:21:21.259
to pass along to our engineers so we can do
some testing on our end.

00:21:21.259 --> 00:21:22.669
&gt;&gt;Martin: Yeah, sure.

00:21:22.669 --> 00:21:26.539
&gt;&gt;Trevor: Probably the best thing to do: if
you go to b.android.com, just paste it in

00:21:26.539 --> 00:21:31.309
whatever data you already have there, and
then give us the ticket number or the issue

00:21:31.309 --> 00:21:37.200
number as a comment in贸I guess in Google+,
probably the best place to put it.

00:21:37.200 --> 00:21:42.610
Or just message me directly, Trevor Johns--
I think my name might be linked to this somewhere?

00:21:42.610 --> 00:21:45.850
[laughs]
In any case, just let one of us know what

00:21:45.850 --> 00:21:48.059
the issue number is with any information that
you already have.

00:21:48.059 --> 00:21:51.190
And we can go ahead and take that and pass
it along.

00:21:51.190 --> 00:21:56.889
Either way, I'll make sure that somebody on
the sensors team贸or actually, the CTS team

00:21:56.889 --> 00:21:58.940
also is looking into this.

00:21:58.940 --> 00:21:59.940
&gt;&gt;Joe: Right.

00:21:59.940 --> 00:22:02.730
&gt;&gt;Martin: Yeah, sure, I can report this.

00:22:02.730 --> 00:22:03.730
No problem.

00:22:03.730 --> 00:22:04.730
&gt;&gt;Joe: Okay.

00:22:04.730 --> 00:22:05.730
&gt;&gt;Martin: Great.

00:22:05.730 --> 00:22:06.730
Thanks, guys.

00:22:06.730 --> 00:22:07.730
&gt;&gt;Joe: You're welcome.

00:22:07.730 --> 00:22:08.730
&gt;&gt;Trevor: Totally.

00:22:08.730 --> 00:22:09.730
&gt;&gt;Joe: Thank you.

00:22:09.730 --> 00:22:10.730
Anybody else in the Hangout?

00:22:10.730 --> 00:22:14.340
Okay, let's--
&gt;&gt;Dan: We're putting Jared back on.

00:22:14.340 --> 00:22:15.340
He's got another question.

00:22:15.340 --> 00:22:16.340
&gt;&gt;Joe: Okay.

00:22:16.340 --> 00:22:17.340
Go ahead, Jared.

00:22:17.340 --> 00:22:18.929
&gt;&gt;Jared: This is actually a quick one.

00:22:18.929 --> 00:22:24.120
Is Logcat guaranteed to be sequential as far
as the timing?

00:22:24.120 --> 00:22:27.289
Like, the order of logs in Logcat.

00:22:27.289 --> 00:22:30.540
Is that guaranteed to be the order that they
were posted in the VM?

00:22:30.540 --> 00:22:36.090
&gt;&gt;Trevor: If they're on different threads贸
&gt;&gt;Alex: I don't think if they're on different

00:22:36.090 --> 00:22:37.090
threads.

00:22:37.090 --> 00:22:38.090
&gt;&gt;Tim: I wouldn't bet on that.

00:22:38.090 --> 00:22:41.529
&gt;&gt;Jared: Okay, because that would explain
a lot of what's been driving me crazy.

00:22:41.529 --> 00:22:46.539
&gt;&gt;Alex: I think Logcat has a贸or the log has
a flush mechanism.

00:22:46.539 --> 00:22:51.450
I don't remember exactly, but贸
&gt;&gt;Jared: Because I've seenI'm seeing Logcat

00:22:51.450 --> 00:22:53.960
messages that the order really doesn't make
sense.

00:22:53.960 --> 00:22:54.960
You know?

00:22:54.960 --> 00:22:55.960
&gt;&gt;Alex: Right.

00:22:55.960 --> 00:22:59.889
&gt;&gt;Trevor: It's possible that they are getting
written in a different order than you're posting

00:22:59.889 --> 00:23:01.880
them, 毛cause they're coming from different
threads.

00:23:01.880 --> 00:23:08.250
If you want to get around that, maybe a good
idea would be to go and include the system

00:23:08.250 --> 00:23:11.049
time when the log message is generated as
part of your log message.

00:23:11.049 --> 00:23:12.049
&gt;&gt;Jared: All right.

00:23:12.049 --> 00:23:13.120
&gt;&gt;Tim: I would totally do that.

00:23:13.120 --> 00:23:19.389
I would think that on a modern four core processor,
it would be a really, really hard to do Logcat

00:23:19.389 --> 00:23:20.389
in the way that it's贸you know.

00:23:20.389 --> 00:23:22.049
Something might happen, but then you get swapped
out, right?

00:23:22.049 --> 00:23:23.049
&gt;&gt;Joe: Right.

00:23:23.049 --> 00:23:24.049
&gt;&gt;Trevor: Yep.

00:23:24.049 --> 00:23:26.020
&gt;&gt;Tim: Somebody else is swapped in, and then,
you know.

00:23:26.020 --> 00:23:27.290
&gt;&gt;Joe: I agree.

00:23:27.290 --> 00:23:29.080
The system time is a good way of doing it.

00:23:29.080 --> 00:23:30.080
&gt;&gt;Jared: Okay.

00:23:30.080 --> 00:23:31.080
Perfect.

00:23:31.080 --> 00:23:32.370
&gt;&gt;Alex: Does Logcat have a flush method?

00:23:32.370 --> 00:23:33.690
Do you guys know?

00:23:33.690 --> 00:23:35.009
&gt;&gt;Trevor: No, it doesn't.

00:23:35.009 --> 00:23:36.020
I don't think so.

00:23:36.020 --> 00:23:37.020
&gt;&gt;Alex: Okay.

00:23:37.020 --> 00:23:42.330
&gt;&gt;Tim: It's what's happening behind the scenes,
where you can't control it, right?

00:23:42.330 --> 00:23:43.620
&gt;&gt;Alex: Yeah.

00:23:43.620 --> 00:23:44.919
&gt;&gt;Joe: Yeah.

00:23:44.919 --> 00:23:46.210
Thanks Jared.

00:23:46.210 --> 00:23:47.510
Anyone else?

00:23:47.510 --> 00:23:52.799
I have贸You know, the reason I do this is
I have to ask the engineer if there's anybody

00:23:52.799 --> 00:23:57.299
else in the Hangout, 毛cause I can only see
one other person at a time.

00:23:57.299 --> 00:24:00.610
&gt;&gt;Dan: Actually, I'm gonna put Martin back
on.

00:24:00.610 --> 00:24:01.610
&gt;&gt;Joe: Okay.

00:24:01.610 --> 00:24:02.690
Go ahead, Martin.

00:24:02.690 --> 00:24:03.929
&gt;&gt;Martin: [laughs] Okay.

00:24:03.929 --> 00:24:05.590
Just another quick one.

00:24:05.590 --> 00:24:12.789
It's not related to sensors, but it should
be fairly easy to answer if you know anything

00:24:12.789 --> 00:24:13.789
about it.

00:24:13.789 --> 00:24:19.289
[clears throat] I've been having a ton of
problems with the calendar time zone thingy.

00:24:19.289 --> 00:24:25.470
And I'm wondering if there's贸I have been
able to find one bug report on the older phones,

00:24:25.470 --> 00:24:28.230
but they贸I feel like it still hasn't been
fixed.

00:24:28.230 --> 00:24:31.340
So you have two methods on the calendar, right?

00:24:31.340 --> 00:24:34.330
Iin which you can set the time zone.

00:24:34.330 --> 00:24:41.620
You have the field zone off set, and you have
the time zone parameter with the set time

00:24:41.620 --> 00:24:44.809
zone method that actually takes the time zone
object.

00:24:44.809 --> 00:24:51.820
I'm just wondering if both of those methods
should work the same or not.

00:24:51.820 --> 00:24:53.019
&gt;&gt;Joe: Hmm.

00:24:53.019 --> 00:24:57.040
&gt;&gt;Trevor: Yeah, I'm not clearfamiliar enough
with the API to know what the difference between

00:24:57.040 --> 00:24:58.040
those two is.

00:24:58.040 --> 00:25:01.940
That's a really good question.

00:25:01.940 --> 00:25:06.549
I think we're going to ask David to do some
research there, and get back to you.

00:25:06.549 --> 00:25:08.379
I've written it down.

00:25:08.379 --> 00:25:12.360
I'll go over questions from last week at the
beginning of the next show.

00:25:12.360 --> 00:25:13.360
Actually, you know what?

00:25:13.360 --> 00:25:14.360
I suppose we forgot to do that.

00:25:14.360 --> 00:25:16.120
I have the answers to questions from last
week, too.

00:25:16.120 --> 00:25:17.120
At some point贸
&gt;&gt;Joe: Right.

00:25:17.120 --> 00:25:21.139
We can do贸We have agreed to let Tim have
his chance with sensors.

00:25:21.139 --> 00:25:25.409
&gt;&gt;Trevor: Yeah, let Tim do it, and let's keep
Tim on the line here as long as we can.

00:25:25.409 --> 00:25:27.690
Then we'll go over questions from last week
a little bit later.

00:25:27.690 --> 00:25:28.690
&gt;&gt;Joe: Right.

00:25:28.690 --> 00:25:30.820
&gt;&gt;Tim: There's some other Moderator贸There're
some other sensor- related questions贸

00:25:30.820 --> 00:25:33.769
&gt;&gt;Joe: Yeah, we're going to get to you in
just a sec.

00:25:33.769 --> 00:25:35.509
We're about to come back to you.

00:25:35.509 --> 00:25:36.610
&gt;&gt;Trevor: All right.

00:25:36.610 --> 00:25:37.610
So yes.

00:25:37.610 --> 00:25:41.059
Yeah, just a follow up on the live question:
we'll do some research.

00:25:41.059 --> 00:25:43.510
We'll get back to you beginning of the show
next week.

00:25:43.510 --> 00:25:45.249
We should have some more info for you.

00:25:45.249 --> 00:25:46.249
All right.

00:25:46.249 --> 00:25:47.299
Thanks for the question.

00:25:47.299 --> 00:25:48.299
&gt;&gt;Martin: Thanks.

00:25:48.299 --> 00:25:52.799
&gt;&gt;Joe: We want to use as much time of Tim's
as we can get, so we're gonna move on to the

00:25:52.799 --> 00:25:56.980
Moderator to get some more贸
&gt;&gt;Tim: Sensor questions.

00:25:56.980 --> 00:25:58.659
&gt;&gt;Joe: Sensor questions, yes.

00:25:58.659 --> 00:25:59.659
Thank you.

00:25:59.659 --> 00:26:00.659
Sensor questions.

00:26:00.659 --> 00:26:05.480
"Recommend best practice is to get input from
sensors for a long-running application with

00:26:05.480 --> 00:26:11.049
the display off, that does not drain the battery?"

00:26:11.049 --> 00:26:12.049
&gt;&gt;Tim: Right.

00:26:12.049 --> 00:26:16.160
So there's a few things to watch out here
for.

00:26:16.160 --> 00:26:20.139
The reason贸One of the reasons why sensors
drain battery is not so much that the sensor

00:26:20.139 --> 00:26:23.820
itself consumes power, it's that it's calling
you back 100 times a second.

00:26:23.820 --> 00:26:30.350
Or I think the slowest possible rate they
can do is 20 or 30 times a second.

00:26:30.350 --> 00:26:33.110
That's waking up your process, looking into
it.

00:26:33.110 --> 00:26:38.309
Unfortunately, if you look at typical sensor
callbacks, they're full of trigonometry and

00:26:38.309 --> 00:26:41.220
math libraries and floating point.

00:26:41.220 --> 00:26:43.590
They're not cheap.

00:26:43.590 --> 00:26:47.029
I would really, totally not recommend leaving
the sensor running.

00:26:47.029 --> 00:26:50.789
If I were gonna do this kind of thing, what
I would do is I would put myself into its

00:26:50.789 --> 00:26:55.379
service and schedule myself to wake up every
so often.

00:26:55.379 --> 00:27:00.409
Turn the sensors on for ten seconds, gather
a bunch of data, and then go back to sleep.

00:27:00.409 --> 00:27:07.820
Now ideally, I would not do much data processing
unless there's actually贸you're looking for

00:27:07.820 --> 00:27:08.820
it to wake up.

00:27:08.820 --> 00:27:10.559
I would gather the data, stuff it in the database,
go back to sleep.

00:27:10.559 --> 00:27:14.110
[pause]
The ratio between the amount of time you're

00:27:14.110 --> 00:27:19.080
awake and the amount of time you're asleep,
work it out.

00:27:19.080 --> 00:27:26.059
But if you're only awake for 5% of the time,
you're clearly not gonna hurt the battery

00:27:26.059 --> 00:27:27.380
that much.

00:27:27.380 --> 00:27:31.490
Now, the one thing you asked about was GPS,
and that's a different thing.

00:27:31.490 --> 00:27:35.760
One thing to watch out for is while you're
asleep, somebody else might have gotten up

00:27:35.760 --> 00:27:40.499
and opened up the Maps{} or done something
like that that resulted in GPS.

00:27:40.499 --> 00:27:45.019
So what you should totally do is go and look
at some of the stuff that Reto Meier's been

00:27:45.019 --> 00:27:48.070
publishing about how to do location efficiently.

00:27:48.070 --> 00:27:53.010
In particular, there's this thing called the
passive location provider贸

00:27:53.010 --> 00:27:54.370
&gt;&gt;Trevor: Right.

00:27:54.370 --> 00:27:55.730
&gt;&gt;Joe: Right.

00:27:55.730 --> 00:28:00.360
&gt;&gt;Tim: --that just parasitically remembers
any locations that have come in through other

00:28:00.360 --> 00:28:01.360
apps.

00:28:01.360 --> 00:28:04.360
And then when you wake up, if you use that
app, you might just get a really high quality

00:28:04.360 --> 00:28:08.830
location data right there for you, without
ever having to turn the GPS on.

00:28:08.830 --> 00:28:12.720
I'm not gonna reiterate all the excellent
advice that Reto gave, because it goes on

00:28:12.720 --> 00:28:13.720
for an hour.

00:28:13.720 --> 00:28:15.070
It's a big subject.

00:28:15.070 --> 00:28:19.879
But the regular sensors just wake up every
so often.

00:28:19.879 --> 00:28:23.129
For their location, go and look and do what
Reto said.

00:28:23.129 --> 00:28:24.129
&gt;&gt;Trevor: All right.

00:28:24.129 --> 00:28:27.190
I have one more thing on GPS there, too.

00:28:27.190 --> 00:28:32.210
A lot of times, what you need when you're
trying to turn GPS on doesn't actually require

00:28:32.210 --> 00:28:33.210
GPS.

00:28:33.210 --> 00:28:36.710
You can use the course location provider,
which will still get you, actually, a fairly

00:28:36.710 --> 00:28:42.159
accurate location fix, but without the power
overheadit of turning the GPS radio on and

00:28:42.159 --> 00:28:46.269
waiting for a satellite lock and all this
other stuff which takes time and CPU.

00:28:46.269 --> 00:28:51.169
So if you can at all get away with it, use
the course location provider first, in addition

00:28:51.169 --> 00:28:55.450
to all the other stuff like using the passive
location provider.

00:28:55.450 --> 00:28:56.850
Definitely look through Reto's post.

00:28:56.850 --> 00:29:01.260
But keep in mind, GPS isn't your only option
for location.

00:29:01.260 --> 00:29:04.340
[pause]
&gt;&gt;Joe: Okay.

00:29:04.340 --> 00:29:08.210
I'm looking for sensor-related stuff.

00:29:08.210 --> 00:29:10.129
&gt;&gt;Tim: Yeah.

00:29:10.129 --> 00:29:17.590
There's that one贸Sorry, the next one down,
Joe, is actually different from the rest of

00:29:17.590 --> 00:29:18.590
his.

00:29:18.590 --> 00:29:21.009
&gt;&gt;Joe: Actually, the next one down for贸You
mean Jan?

00:29:21.009 --> 00:29:22.269
&gt;&gt;Tim: Yes.

00:29:22.269 --> 00:29:23.529
&gt;&gt;Joe: Okay.

00:29:23.529 --> 00:29:25.980
Can you贸
&gt;&gt;Tim: So that's actually an interesting question.

00:29:25.980 --> 00:29:26.980
&gt;&gt;Joe: Yeah.

00:29:26.980 --> 00:29:27.980
"Sensors or fragmentation.

00:29:27.980 --> 00:29:29.740
Could you enforce on manufacturers somewhat
more strongly贸"

00:29:29.740 --> 00:29:30.740
&gt;&gt;Tim: No, I'm sorry, that's not what I'm
looking at.

00:29:30.740 --> 00:29:35.519
The one I'm looking at says, "Many sensors
return values only when they change?"?

00:29:35.519 --> 00:29:37.299
&gt;&gt;Joe: Hold on for a second.

00:29:37.299 --> 00:29:39.179
&gt;&gt;Trevor: I think that's further up.

00:29:39.179 --> 00:29:40.789
It used to be.

00:29:40.789 --> 00:29:41.789
&gt;&gt;Joe: Yeah.

00:29:41.789 --> 00:29:42.799
&gt;&gt;Trevor: That's it.

00:29:42.799 --> 00:29:43.799
&gt;&gt;Joe: Yep.

00:29:43.799 --> 00:29:44.799
Here we are.

00:29:44.799 --> 00:29:47.369
"Many sensors return values only when they
change.

00:29:47.369 --> 00:29:52.200
Could this become part of a spec and draw
a line between sensors that do just that,

00:29:52.200 --> 00:29:55.170
and those capable of returning the current
value as well?"

00:29:55.170 --> 00:29:56.530
&gt;&gt;Tim: Right.

00:29:56.530 --> 00:29:59.039
So up until 4.1, no.

00:29:59.039 --> 00:30:00.039
As of now, yes.

00:30:00.039 --> 00:30:01.169
Now, I didn't actually know that.

00:30:01.169 --> 00:30:06.919
I've never used such a sensor, but in preparation
for this, I was going and reading this CTDD

00:30:06.919 --> 00:30:07.919
and things like that.

00:30:07.919 --> 00:30:12.679
And I gather that in 4.1, we did introduce
a new type of sensor that is what's called

00:30:12.679 --> 00:30:13.679
a "streaming sensor."

00:30:13.679 --> 00:30:16.419
That-- You just read live values out of it.

00:30:16.419 --> 00:30:18.659
Having said that, I've never used one.

00:30:18.659 --> 00:30:22.110
And I didn't have time to go and drill down
on it.

00:30:22.110 --> 00:30:27.159
So they actually had to do quite a bit of
architectural work with the core sensor code

00:30:27.159 --> 00:30:33.000
because all the stuff that had existed assumed
it was all callback based.

00:30:33.000 --> 00:30:38.460
So the answer to Jan's question is: yes, this
could become part of spec, and it has become

00:30:38.460 --> 00:30:43.049
part of spec, but no, I don't actually have
any specific, concrete advice.

00:30:43.049 --> 00:30:48.869
But clearly, other people share your desire
for that kind of sensor.

00:30:48.869 --> 00:30:50.330
&gt;&gt;Joe: Okay.

00:30:50.330 --> 00:30:56.919
I'm trying to see if there's any other questions贸Oh,
here's one that's not from anybody that has

00:30:56.919 --> 00:30:58.779
asked a question before.

00:30:58.779 --> 00:31:04.480
"Are there any use cases for sensors and apps
which you feel have been underutilized by

00:31:04.480 --> 00:31:05.480
developers?"

00:31:05.480 --> 00:31:07.190
&gt;&gt;Tim: Which贸Sorry, I didn't hear you, Joe.

00:31:07.190 --> 00:31:12.850
&gt;&gt;Joe: "Are there any use cases for sensors
and apps which you feel have been underutilized

00:31:12.850 --> 00:31:13.989
by developers?"

00:31:13.989 --> 00:31:15.330
&gt;&gt;Tim: Oh, absolutely.

00:31:15.330 --> 00:31:21.980
It's what I would call贸what most people would
call Gestures, but that already has been taken

00:31:21.980 --> 00:31:24.889
by another piece of Android, so we can't call
it Gestures.

00:31:24.889 --> 00:31:26.190
So I've been calling it Kinetics.

00:31:26.190 --> 00:31:29.220
This is the classic case of "shake to undo."

00:31:29.220 --> 00:31:34.590
Or there's a bunch of short, simple gestures
you can do that matches "chop left", "chop

00:31:34.590 --> 00:31:38.480
forward", "chop back" [slapping sound] "slap
the front", [slapping sound] "slap the back",

00:31:38.480 --> 00:31:40.440
[slapping sound] "slap the side" kind of thing.

00:31:40.440 --> 00:31:47.720
And I'm actually in the background, working
on an app that has no screen controls at all,

00:31:47.720 --> 00:31:51.149
and is entirely controlled by those kinds
of kinetics.

00:31:51.149 --> 00:31:54.299
And actually, I noticed贸I discovered, once
I got over the hump, they're not that hard

00:31:54.299 --> 00:31:55.299
to write.

00:31:55.299 --> 00:32:02.490
And there's not that many of them out in the
market, so I totally recommend people do that,

00:32:02.490 --> 00:32:08.749
because not only is it really cool when it
works, it might well differentiate you from

00:32:08.749 --> 00:32:13.649
the other 500,000 or however many it is apps
on the market that haven't been clever enough

00:32:13.649 --> 00:32:14.649
to do that.

00:32:14.649 --> 00:32:15.850
How much贸
&gt;&gt;Trevor: I remember talking about an app

00:32:15.850 --> 00:32:19.269
I saw a while back where you could take your
phone and flip it over.

00:32:19.269 --> 00:32:21.179
So if it's face down on your desk, it would
silence.

00:32:21.179 --> 00:32:22.179
&gt;&gt;Joe: Hmm.

00:32:22.179 --> 00:32:23.179
&gt;&gt;Tim: Yeah!

00:32:23.179 --> 00:32:24.179
&gt;&gt;Joe: Okay.

00:32:24.179 --> 00:32:27.330
&gt;&gt;Tim: In fact, we did a talk at Google IO
with Annika {}Ankur Kotwal and Tony Chan.

00:32:27.330 --> 00:32:32.740
And AnnikaAnkur wrote a little blackjack app
with dealer apps and player apps.

00:32:32.740 --> 00:32:36.309
You would fold your cards by turning them
over贸turning your phone over.

00:32:36.309 --> 00:32:40.340
And you would say, "Hit me!" by moving your
hand over the phone.

00:32:40.340 --> 00:32:42.129
And things like that.

00:32:42.129 --> 00:32:45.399
It felt really great to watch it work.

00:32:45.399 --> 00:32:52.799
And when the dealer was gonna turn his cards
over so you could start counting, he would

00:32:52.799 --> 00:32:54.539
just flip the phone up, and they would flip
over.

00:32:54.539 --> 00:32:55.539
It was贸It's really, really nice.

00:32:55.539 --> 00:32:59.629
I don't know about you, but I get tired of
apps with buttons all over the screens, and

00:32:59.629 --> 00:33:01.220
trying to {unintelligible}.

00:33:01.220 --> 00:33:04.820
&gt;&gt;Joe: Well, I would agree with you.

00:33:04.820 --> 00:33:09.720
I would also point out that there's a lot
of circumstances in which you want to protect

00:33:09.720 --> 00:33:12.789
the device, whatever type of device it is,
from the environment.

00:33:12.789 --> 00:33:19.279
Which means that you can't directly use the
touchscreen, but you can still use the accelerometer.

00:33:19.279 --> 00:33:24.259
[pause]
So any other comments about this question?

00:33:24.259 --> 00:33:25.340
No?

00:33:25.340 --> 00:33:27.990
In that case, where do we stand?

00:33:27.990 --> 00:33:31.139
Or do we have anybody in the Hangout waiting
for a question?

00:33:31.139 --> 00:33:34.250
All right, let's go back here and see where
we are.

00:33:34.250 --> 00:33:35.429
&gt;&gt;Dan: Actually贸
&gt;&gt;Joe: Oh!

00:33:35.429 --> 00:33:37.869
&gt;&gt;Dan: Actually, we have a hand just raised.

00:33:37.869 --> 00:33:38.869
&gt;&gt;Joe: Okay.

00:33:38.869 --> 00:33:40.090
&gt;&gt;Dan: Looks like Alex.

00:33:40.090 --> 00:33:44.340
Alex, you want to go on to the air?

00:33:44.340 --> 00:33:46.200
&gt;&gt;Hangout Alex: Yeah, if I can.

00:33:46.200 --> 00:33:47.440
&gt;&gt;Dan: Here we go.

00:33:47.440 --> 00:33:48.440
&gt;&gt;Joe: Okay.

00:33:48.440 --> 00:33:49.440
Hello, Alex.

00:33:49.440 --> 00:33:50.440
&gt;&gt;Hangout Alex: Okay.

00:33:50.440 --> 00:33:51.440
Hey.

00:33:51.440 --> 00:33:53.080
Talking about Gestures, or Kinetics, as you
toldcalled.

00:33:53.080 --> 00:33:58.610
My question is about the better way贸Do you
hear me well?

00:33:58.610 --> 00:34:00.480
&gt;&gt;Tim: Talk a little slower, please.

00:34:00.480 --> 00:34:01.480
&gt;&gt;Joe: Yeah.

00:34:01.480 --> 00:34:02.480
&gt;&gt;Hangout Alex: Okay.

00:34:02.480 --> 00:34:06.799
The main question is: how do you prefer to
recognize the gestures?

00:34:06.799 --> 00:34:11.359
I mean, basically, they're parameter data.

00:34:11.359 --> 00:34:16.440
You can use a few other sensors, like linear
acceleration.

00:34:16.440 --> 00:34:17.480
You know?

00:34:17.480 --> 00:34:21.730
And they actually provide to you the acceleration
itself.

00:34:21.730 --> 00:34:28.460
And if you want to direct the movement itself,
to draw, for example, a symbol, you should

00:34:28.460 --> 00:34:29.940
double integrate it.

00:34:29.940 --> 00:34:36.990
Double integration, as maybe you all know,
is really not accurate.

00:34:36.990 --> 00:34:42.889
As I know, in the device, it cannot be used
in duration, and just required to be used

00:34:42.889 --> 00:34:44.639
in raw sensor data.

00:34:44.639 --> 00:34:50.030
However, maybe is there some way of some fielders,
for example, which will help to make better

00:34:50.030 --> 00:34:52.500
accuracy for predicting the movement?

00:34:52.500 --> 00:34:54.990
&gt;&gt;Joe: Hmm.

00:34:54.990 --> 00:35:00.549
&gt;&gt;Tim: We gave a talk on more or less exactly
that question at Google IO this year.

00:35:00.549 --> 00:35:04.359
So if you go to Google IO and look for "A
Sensitive Side toof Android," there's both

00:35:04.359 --> 00:35:09.049
the video and slides with lots of links.

00:35:09.049 --> 00:35:18.230
So to address what you said, [pause] I actually
did a lot of this coding myself.

00:35:18.230 --> 00:35:24.020
And there's also an app I published to the
Play Store called Sensplore.

00:35:24.020 --> 00:35:26.810
There's a link to it in the talks.

00:35:26.810 --> 00:35:31.930
What it does is it allows you to shake the
phone around, and it captures a bunch of sensory

00:35:31.930 --> 00:35:35.619
data and puts it in a CSV file and emails
it to you.

00:35:35.619 --> 00:35:39.700
So you can make graphs of what the values
are.

00:35:39.700 --> 00:35:45.740
Now, in answer to your question, I prefer--
For gesture detection, there are some calculations

00:35:45.740 --> 00:35:47.799
you can do if you save the贸Which one is it?

00:35:47.799 --> 00:35:49.250
It's one of the sensors.

00:35:49.250 --> 00:35:50.520
It's the linear acceleration sensor.

00:35:50.520 --> 00:35:51.520
&gt;&gt;Hangout Alex: That one?

00:35:51.520 --> 00:35:54.120
&gt;&gt;Tim: I'll have to go and look whichever
it is.

00:35:54.120 --> 00:36:01.660
Anyhow, you can save the data, and then you
can call a routine on it that will detect

00:36:01.660 --> 00:36:05.030
change in an angle along the three axes.

00:36:05.030 --> 00:36:07.569
Delta angle around the x, y, and z axes.

00:36:07.569 --> 00:36:12.160
And I actually found that one was the most
useful in detecting simple hand gestures like

00:36:12.160 --> 00:36:16.089
shaking and twisting and that kind of stuff.

00:36:16.089 --> 00:36:17.500
You have to watch out for a bunch of things.

00:36:17.500 --> 00:36:21.859
The data is messy as it comes off the sensors,
so you have to do some filtering and stuff.

00:36:21.859 --> 00:36:25.730
Now, the last thing you talked about is pretty
hard.

00:36:25.730 --> 00:36:31.079
So I'd like to be able to draw letters of
fire in the air, or something like that.

00:36:31.079 --> 00:36:32.400
That's really hard.

00:36:32.400 --> 00:36:38.829
The quality of the data coming out-- I'm not
sure that can actually be done.

00:36:38.829 --> 00:36:40.670
I tried to do that for a month or two, and
I couldn't do it.

00:36:40.670 --> 00:36:47.619
If you look at something like the Ninentdo
Wii or the Connect, the way they work is they

00:36:47.619 --> 00:36:52.160
have a fixed point, like a camera or the IR
sensor, something standing still and watching

00:36:52.160 --> 00:36:53.730
you move around.

00:36:53.730 --> 00:36:57.570
So for them, it's actually much, much easier.

00:36:57.570 --> 00:37:04.730
I've never actually seen a mobile app on any
platform that really allows you to do a good

00:37:04.730 --> 00:37:07.599
three dimensional motion tracking of the device.

00:37:07.599 --> 00:37:11.760
If somebody could figure out how to do that
and make it work, I think that would be a

00:37:11.760 --> 00:37:12.760
great {} service.

00:37:12.760 --> 00:37:13.900
I wasn't smart enough.

00:37:13.900 --> 00:37:19.309
&gt;&gt;Trevor: This reminds me of another question
that I actually saw earlier in Moderator.

00:37:19.309 --> 00:37:23.799
That was the贸I can't remember who asked it,
but the question was, "Are there any good

00:37:23.799 --> 00:37:26.130
libraries out there to go and do Gesture detections?"

00:37:26.130 --> 00:37:31.390
Right now, we just provide the low-level libraries
to go and read sensor data.

00:37:31.390 --> 00:37:36.520
Now, I'm not actually familiar with any libraries
out there that provide prepackaged Gestures.

00:37:36.520 --> 00:37:38.300
Tim, are you aware of anything?

00:37:38.300 --> 00:37:42.309
&gt;&gt;Tim: Well, I'm aware in the negative sense
in that I looked really hard for them, and

00:37:42.309 --> 00:37:45.270
I didn't [laughs] find anything very much
to speak of.

00:37:45.270 --> 00:37:49.050
There are 27 different libraries out there
that will detect a shake.

00:37:49.050 --> 00:37:55.060
&gt;&gt;Trevor: [laughs]
&gt;&gt;Tim: All by doing the (x2 + y2 + z2)(1/2)

00:37:55.060 --> 00:37:58.720
and detecting absolute values and acceleration.

00:37:58.720 --> 00:38:02.880
But no, I think that it's actually a fairly
weak area.

00:38:02.880 --> 00:38:03.880
&gt;&gt;Trevor: Okay.

00:38:03.880 --> 00:38:05.720
So that's actually a probably贸even going
back to the last question, too, on open areas

00:38:05.720 --> 00:38:06.720
for development.

00:38:06.720 --> 00:38:10.891
So if somebody wants to do some open source
work that really benefits the community, I

00:38:10.891 --> 00:38:14.079
think this is贸It's an open area for development.

00:38:14.079 --> 00:38:17.250
Write the library that does gesture recognition.

00:38:17.250 --> 00:38:18.700
&gt;&gt;Joe: Right.

00:38:18.700 --> 00:38:21.900
There's贸
&gt;&gt;Alex: Some pretty fat gestures.

00:38:21.900 --> 00:38:28.380
&gt;&gt;Joe: There's a question here from Pablo
about standard sensor-based gesture recognizers

00:38:28.380 --> 00:38:29.380
as part of the API.

00:38:29.380 --> 00:38:30.380
&gt;&gt;Trevor: Yeah, that was the one.

00:38:30.380 --> 00:38:31.380
&gt;&gt;Joe: Yeah.

00:38:31.380 --> 00:38:32.380
&gt;&gt;Alex: Right.

00:38:32.380 --> 00:38:37.730
&gt;&gt;Joe: And my贸I don't know for sure, but
I think we agree that the likelihood of that

00:38:37.730 --> 00:38:41.250
happening anytime soon is not high.

00:38:41.250 --> 00:38:46.090
But it's certainly a place where other people
could make thea contribution to Android, for

00:38:46.090 --> 00:38:47.090
sure.

00:38:47.090 --> 00:38:51.339
I think, as people pointed out, not much has
been done here yet.

00:38:51.339 --> 00:38:55.720
And I don't think very much has been done
anywhere in the space for any types of devices

00:38:55.720 --> 00:38:56.720
yet.

00:38:56.720 --> 00:39:01.069
We just haven't gotten used to the idea that
these sensors are available and can be used

00:39:01.069 --> 00:39:02.069
to communicate with devices.

00:39:02.069 --> 00:39:03.069
Jared.

00:39:03.069 --> 00:39:08.930
&gt;&gt;JaredTim: I have one small sample piece
of code that you might want to check out in

00:39:08.930 --> 00:39:12.829
that Sensplore app that's open sourced on
{code .google.com}.

00:39:12.829 --> 00:39:16.870
It's got a flip recognizer to recognize flipping
up and flipping back.

00:39:16.870 --> 00:39:17.870
&gt;&gt;Joe: Okay.

00:39:17.870 --> 00:39:20.190
&gt;&gt;Jared: It's not an app or a shared library
or anything like that.

00:39:20.190 --> 00:39:21.210
It's just a bunch of Java code.

00:39:21.210 --> 00:39:22.210
But it seems to work pretty well.

00:39:22.210 --> 00:39:23.210
&gt;&gt;Joe: Okay.

00:39:23.210 --> 00:39:27.380
&gt;&gt;Jared: I actually have a comment to this,
guys.

00:39:27.380 --> 00:39:33.319
It kinda goes to what Tim was talking about,
where he worked on it for a long time and

00:39:33.319 --> 00:39:34.980
struggled with it.

00:39:34.980 --> 00:39:38.160
Basically, what you're talking about doing
is an inertial guidance system.

00:39:38.160 --> 00:39:39.160
&gt;&gt;Tim: Exactly.

00:39:39.160 --> 00:39:42.319
&gt;&gt;Jared: And missiles, aircraft, rockets,
they all do it.

00:39:42.319 --> 00:39:43.750
They do it incredibly well.

00:39:43.750 --> 00:39:48.579
But they're talking about something where
they're measuring贸They want to be a couple

00:39:48.579 --> 00:39:53.401
of feet accurate over several miles, and you're
talking about millimeters of accuracy in a

00:39:53.401 --> 00:39:57.349
foot, half a meter.

00:39:57.349 --> 00:40:02.270
It could be done, but those same devices that
are actually doing it, they were purpose-built

00:40:02.270 --> 00:40:03.950
for that task.

00:40:03.950 --> 00:40:06.430
So their sensors are much more accurate.

00:40:06.430 --> 00:40:08.470
Their analog-digital conversion's much more
accurate.

00:40:08.470 --> 00:40:13.049
They're able to do a lot more processing because
they have DSP chips to do all this math.

00:40:13.049 --> 00:40:14.049
And much more.

00:40:14.049 --> 00:40:15.859
You know, real time.

00:40:15.859 --> 00:40:17.640
So I think, in theory, it's capable.

00:40:17.640 --> 00:40:21.930
I just doubt that the Android phone possesses
the hardware required to do it.

00:40:21.930 --> 00:40:22.930
&gt;&gt;Joe: Yeah.

00:40:22.930 --> 00:40:23.930
&gt;&gt;Trevor: That's a very good point.

00:40:23.930 --> 00:40:24.930
Thank you.

00:40:24.930 --> 00:40:25.930
&gt;&gt;Tim: Yeah.

00:40:25.930 --> 00:40:28.510
&gt;&gt;Joe: Yeah, thank you, Jared.

00:40:28.510 --> 00:40:29.510
Okay.

00:40:29.510 --> 00:40:30.510
Anybody else in the Hangout?

00:40:30.510 --> 00:40:31.510
No?

00:40:31.510 --> 00:40:35.430
Okay, let's move on, then.

00:40:35.430 --> 00:40:37.380
There's another question in here from Jan
in Prague.

00:40:37.380 --> 00:40:43.900
"Could you enforce on the manufacturers a
somewhat more standardized behavior of sensors?

00:40:43.900 --> 00:40:48.299
That is, even Galaxy Nexus has issues with
proximity sensors returning nonsense when

00:40:48.299 --> 00:40:50.289
covered with, say, paper."

00:40:50.289 --> 00:40:54.869
&gt;&gt;Tim: Well, there is one thing specifically
about proximity sensors.

00:40:54.869 --> 00:41:00.900
The proximity sensor is well-known by people
who've done these things to be a very blunt-edged

00:41:00.900 --> 00:41:01.900
instrument.

00:41:01.900 --> 00:41:06.740
In general, you can't count on much more than
it detecting "there's something in front"

00:41:06.740 --> 00:41:08.250
or "there's not something in front."

00:41:08.250 --> 00:41:14.309
Now, it claims to read upout in centimeters
or something like that, but in fact, it's

00:41:14.309 --> 00:41:16.260
just not up to that.

00:41:16.260 --> 00:41:21.640
I think we addressed Jan's question initially
in that the CDDV doesn't really promise very

00:41:21.640 --> 00:41:25.400
much, to the extent that there are obvious
glitches that really should be better.

00:41:25.400 --> 00:41:29.820
The {unintelligible} test could certainly
be beefed up {}in the open source project.

00:41:29.820 --> 00:41:33.560
&gt;&gt;Trevor: I'll add one more thing on top of
that, too.

00:41:33.560 --> 00:41:37.539
Having done some robotics work before, sensors
are very noisy.

00:41:37.539 --> 00:41:41.390
That's the nature of the physical world, then
it's just the reality of working with sensor

00:41:41.390 --> 00:41:42.390
data.

00:41:42.390 --> 00:41:46.730
We can go and give you tools like virtual
sensors to go and help clean them up, but

00:41:46.730 --> 00:41:49.700
at some level, there's always gonna be some
inaccuracy here, and there's always gonna

00:41:49.700 --> 00:41:55.680
be a little bit of extra work required converting
data from sensors into something very clean

00:41:55.680 --> 00:41:58.119
that you're app location makes sense of.

00:41:58.119 --> 00:41:59.510
That's just the nature of the field.

00:41:59.510 --> 00:42:00.510
&gt;&gt;Joe: Yeah.

00:42:00.510 --> 00:42:04.980
And I would also say that there's various
ways贸there's various types of sensors that

00:42:04.980 --> 00:42:10.069
you can use to do the same type of measurement.

00:42:10.069 --> 00:42:15.860
In robotics, at least, the question becomes,
"Which is the best one to use for your particular

00:42:15.860 --> 00:42:17.240
application?"

00:42:17.240 --> 00:42:22.110
Just because you've got a color sensor doesn't
mean that that's necessarily the best way

00:42:22.110 --> 00:42:27.109
of sensing the particular quality of some
material that you have in front of you.

00:42:27.109 --> 00:42:31.460
There might be another sensor that you could
choose that is better for that particular

00:42:31.460 --> 00:42:32.460
application.

00:42:32.460 --> 00:42:35.280
And those are the sort of trade-offs that
you make in robotics all the time.

00:42:35.280 --> 00:42:37.170
&gt;&gt;Tim: Let me make two specific points.

00:42:37.170 --> 00:42:38.170
&gt;&gt;Joe: Go ahead.

00:42:38.170 --> 00:42:41.839
&gt;&gt;Tim: On the Android devices, it seems to
be conventional wisdom that the higher tech,highest

00:42:41.839 --> 00:42:43.030
quality sensor is the gyroscope.

00:42:43.030 --> 00:42:46.200
The data that comes out of the gyroscope are
generally considered to be, relative to all

00:42:46.200 --> 00:42:50.200
the others, cleaner and nicer and easier to
work with.

00:42:50.200 --> 00:42:55.579
Second thing is that for every category of
sensor data I trapped pretty well, I ended

00:42:55.579 --> 00:42:59.710
up having to write somewhere in the {unintelligible}
a little circular buffer where, instead of

00:42:59.710 --> 00:43:04.099
working with the raw sensor data, I would
end up working with the average of the last

00:43:04.099 --> 00:43:05.099
mn.

00:43:05.099 --> 00:43:09.329
So every time you got a new one, you could
put it in the buffer, average the latest mn,

00:43:09.329 --> 00:43:12.000
and give that value instead.

00:43:12.000 --> 00:43:17.510
And by the way, I found that mn = 5 was a
really good value for a lot of sensors.

00:43:17.510 --> 00:43:20.130
&gt;&gt;Joe: Now, that's a really good piece of
advice.

00:43:20.130 --> 00:43:22.410
Really good information to have.

00:43:22.410 --> 00:43:26.910
And we have one more question I'd like to
get out of you, Tim.

00:43:26.910 --> 00:43:30.869
Someone posted a question that says, "Were
there any sensor related behind-the-scenes

00:43:30.869 --> 00:43:32.220
changes on 4.1?

00:43:32.220 --> 00:43:33.230
You mentioned one already.

00:43:33.230 --> 00:43:35.700
Are there any others you can think of?"

00:43:35.700 --> 00:43:39.000
&gt;&gt;Tim: There was a ton of refactoring that
went into that.

00:43:39.000 --> 00:43:42.650
I don't know贸Trevor, remember {unintelligible
name} was working贸or no, Matthias {unintelligible

00:43:42.650 --> 00:43:44.190
name} was working on it.

00:43:44.190 --> 00:43:47.210
They did a ton of work.

00:43:47.210 --> 00:43:54.859
At some point, in the flow of somewhere between
ICS and Jelly Bean, the quality of the data

00:43:54.859 --> 00:43:56.510
was really qualitatively improved.

00:43:56.510 --> 00:43:57.569
&gt;&gt;Trevor: Right.

00:43:57.569 --> 00:44:00.849
Yeah, and that's not stuff that you're gonna
see so much in the API.

00:44:00.849 --> 00:44:03.400
It really is implementation changes.

00:44:03.400 --> 00:44:04.650
&gt;&gt;Joe: Okay.

00:44:04.650 --> 00:44:11.130
Okay, let me go贸Since we've been hopping
all over the place today, I have to get my

00:44:11.130 --> 00:44:12.480
bearings here again.

00:44:12.480 --> 00:44:19.530
I think what we want to do is, if we don't
have anybody else waiting for a sensor-related

00:44:19.530 --> 00:44:24.750
question in the Hangout贸no贸then we'll move
on to some questions that don't necessarily

00:44:24.750 --> 00:44:27.440
involve sensors.

00:44:27.440 --> 00:44:30.220
Let's go see here.

00:44:30.220 --> 00:44:36.220
[pause]
"The best set of test devices"贸this is from

00:44:36.220 --> 00:44:40.250
Napster in India贸"What is the best set of
test devices that an independent developer

00:44:40.250 --> 00:44:41.609
can own?

00:44:41.609 --> 00:44:49.060
For example, Nexus 7, Galaxy Nexus, Nexus
S, Motorola Droid, the screen density of theseies

00:44:49.060 --> 00:44:50.770
and API versions are my criterion.

00:44:50.770 --> 00:44:51.770
Thanks."

00:44:51.770 --> 00:44:52.770
&gt;&gt;Trevor: Okay.

00:44:52.770 --> 00:44:57.299
Actually, Alex, do you want to start off with
this one?

00:44:57.299 --> 00:44:58.750
&gt;&gt;Alex: Yeah, sure.

00:44:58.750 --> 00:45:03.270
First thing to note is that there isn't a
specific set贸there isn't a set of very specific

00:45:03.270 --> 00:45:05.820
devices that you want in your test family.

00:45:05.820 --> 00:45:11.900
What you really want to be looking for is,
like you mentioned, a set of devices that

00:45:11.900 --> 00:45:14.930
matches those facts, each of those criteria.

00:45:14.930 --> 00:45:17.590
So you want a range of API versions.

00:45:17.590 --> 00:45:20.030
You want a range of screen sizes.

00:45:20.030 --> 00:45:25.580
More importantly, also important is you want
a range of GPUs, of graphics chips.

00:45:25.580 --> 00:45:31.960
And there're these families that you want
to follow.

00:45:31.960 --> 00:45:37.359
So probably, you want at least one tablet,
one large phone, one small phone, depending

00:45:37.359 --> 00:45:41.810
on how universal you want to be, probably
a Google TV.

00:45:41.810 --> 00:45:44.270
Try to贸I would say go as far back as FROYO.

00:45:44.270 --> 00:45:51.850
Get a blend all the way from FROYO to Jelly
Bean, and new devices-- or devices with new

00:45:51.850 --> 00:45:54.130
API versions as they come out.

00:45:54.130 --> 00:45:57.800
And I'm sure I'm missing a couple of criteria
here.

00:45:57.800 --> 00:45:58.800
Trevor?

00:45:58.800 --> 00:46:02.920
&gt;&gt;Trevor: Sorry, you mentioned贸What was the
list you mentioned?

00:46:02.920 --> 00:46:06.650
&gt;&gt;Alex: GPU, API version, screen size, oh,
and screen density.

00:46:06.650 --> 00:46:07.650
&gt;&gt;Trevor: Right.

00:46:07.650 --> 00:46:10.150
Yeah, I'd say those are the big ones.

00:46:10.150 --> 00:46:14.740
The GPU is one that I think a lot of people
often miss, because it's not something贸it's

00:46:14.740 --> 00:46:16.650
something inside the phone you need to think
about.

00:46:16.650 --> 00:46:18.510
But there's four major GPU vendors.

00:46:18.510 --> 00:46:21.970
Try to have a device from each of those.

00:46:21.970 --> 00:46:25.470
Just because so much is hardware accelerator
right now, even when you don't think you're

00:46:25.470 --> 00:46:28.109
using Open GL, you probably are.

00:46:28.109 --> 00:46:32.359
And then otherwise, just get a good mix of
phones that represent the different density

00:46:32.359 --> 00:46:34.869
buckets, screen size buckets, and API levels.

00:46:34.869 --> 00:46:40.960
The Nexus devices in general are usually pretty
good ones, if you're just getting贸if you

00:46:40.960 --> 00:46:42.960
need something to get started with.

00:46:42.960 --> 00:46:46.859
A lot of our internal development is done
on them for obvious reasons.

00:46:46.859 --> 00:46:50.720
It doesn't cover everything, but it does cover
pretty wide spectrum out there.

00:46:50.720 --> 00:46:53.309
And on top of that, just devices that are
popular.

00:46:53.309 --> 00:46:58.380
If there's a lot of users using the phone,
it might make sense for you to have one of

00:46:58.380 --> 00:46:59.380
those, too.

00:46:59.380 --> 00:47:02.329
Now, that being said, you don't necessarily
need to have a ton of phones.

00:47:02.329 --> 00:47:05.359
In fact, you definitely don't need to have
a ton of phones if you want to do Android

00:47:05.359 --> 00:47:06.359
development.

00:47:06.359 --> 00:47:11.880
We try very hard to go and make sure that
everything behaves consistently across devices,

00:47:11.880 --> 00:47:18.140
but there are cases, especially with things
like Textures and Open GL where you tend to

00:47:18.140 --> 00:47:22.740
see a bit more differences because of the
nature of GPUs.

00:47:22.740 --> 00:47:26.050
So just watch out for that.

00:47:26.050 --> 00:47:27.160
One thing.

00:47:27.160 --> 00:47:31.430
If you do want to get access to a lot of different
devices, and you don't have a big budget,

00:47:31.430 --> 00:47:35.819
[dinging] of course, there is the emulator
if you're just doing basic API level testing,

00:47:35.819 --> 00:47:38.680
screen test testing, the emulator will get
you access to all of that.

00:47:38.680 --> 00:47:42.390
You don't need physical devices in many cases.

00:47:42.390 --> 00:47:45.930
But if you do find that you do, there are
a number of third party vendors that provide

00:47:45.930 --> 00:47:47.589
access to贸remote access to the devices.

00:47:47.589 --> 00:47:55.260
So off the top of my head, I think a DeviceAnywhere
and Bitbar are two really popular ones.

00:47:55.260 --> 00:47:56.730
They have very different products.

00:47:56.730 --> 00:48:01.819
But you pay them a small fee and upload your
APK to them, and they'll go and either let

00:48:01.819 --> 00:48:05.880
you run it on individual devices one at a
time, or run automated tests across the entire

00:48:05.880 --> 00:48:08.099
suite of devices.

00:48:08.099 --> 00:48:10.369
You can get some really good data that way,
too.

00:48:10.369 --> 00:48:16.510
&gt;&gt;Alex: I would say: one of the things, also:
don't discount the fact that you can build

00:48:16.510 --> 00:48:19.250
as many different emulators on your own local
development贸

00:48:19.250 --> 00:48:20.250
&gt;&gt;Joe: Right.

00:48:20.250 --> 00:48:21.250
&gt;&gt;Alex: And machines as you want.

00:48:21.250 --> 00:48:22.250
&gt;&gt;Trevor: It's true.

00:48:22.250 --> 00:48:23.950
And the emulators have gotten a lot better,
too.

00:48:23.950 --> 00:48:24.950
&gt;&gt;Alex: Right.

00:48:24.950 --> 00:48:26.760
You can build a gingerbread device of any
size.

00:48:26.760 --> 00:48:30.440
You can build a Jelly Bean device of any size,
any density you want.

00:48:30.440 --> 00:48:35.940
It's not at a point where you can emulate
any GPU chip you want, so you can't have NVIDIA

00:48:35.940 --> 00:48:39.299
next to a Polycom next to a whatever.

00:48:39.299 --> 00:48:40.339
&gt;&gt;Trevor: No.

00:48:40.339 --> 00:48:45.040
&gt;&gt;Alex: But you can have a贸You can automate
a thing where you spin up a tablet emulator

00:48:45.040 --> 00:48:51.400
next to a phone emulator, take a couple of
screen shots, and then compare afterwards.

00:48:51.400 --> 00:48:52.559
Or run a test suite.

00:48:52.559 --> 00:48:56.250
&gt;&gt;Trevor: And maybe if you haven't used the
emulator in quite a while or haven't been

00:48:56.250 --> 00:49:02.180
following the developments there, we've added
hardware acceleration as well as virtualization

00:49:02.180 --> 00:49:03.319
support.

00:49:03.319 --> 00:49:08.150
Basically, that means the emulator's actually
gotten to the point where it's not painful

00:49:08.150 --> 00:49:09.150
to use.

00:49:09.150 --> 00:49:12.510
[laughs] It actually feels as fast as a normal
phone in a lot of cases.

00:49:12.510 --> 00:49:17.800
So it really is a useful development tool,
and if you don't find yourself using an emulator,

00:49:17.800 --> 00:49:20.210
now might be a good time to give it another
try.

00:49:20.210 --> 00:49:21.210
&gt;&gt;Joe: Right.

00:49:21.210 --> 00:49:22.210
Okay?

00:49:22.210 --> 00:49:23.210
Great, thank you very much.

00:49:23.210 --> 00:49:26.849
&gt;&gt;Dan: Hey guys, a couple of people in the
Hangout are just asking for a recap from last

00:49:26.849 --> 00:49:27.849
week贸
&gt;&gt;Joe: Yes.

00:49:27.849 --> 00:49:28.849
Okay.

00:49:28.849 --> 00:49:29.849
Yes.

00:49:29.849 --> 00:49:30.849
Go ahead.

00:49:30.849 --> 00:49:31.849
&gt;&gt;Trevor: Excellent.

00:49:31.849 --> 00:49:32.849
&gt;&gt;Joe: Let's do that now.

00:49:32.849 --> 00:49:33.849
&gt;&gt;Trevor: All right.

00:49:33.849 --> 00:49:36.030
Well, not so much a recap, but a list of questions
we couldn't answer.

00:49:36.030 --> 00:49:37.619
So there we two of those from last week.

00:49:37.619 --> 00:49:42.220
The first one was a question about a贸Actually,
for those who weren't with us last week, the

00:49:42.220 --> 00:49:44.880
topic was web development on Android.

00:49:44.880 --> 00:49:49.770
And one of the questions was about a library
that was announced at Google IO for syncing

00:49:49.770 --> 00:49:52.720
preferences across different devices.

00:49:52.720 --> 00:49:55.569
And particularly, they wanted to know if there
were any updates on that.

00:49:55.569 --> 00:50:01.230
So I spoke to {unintelligible name}, who was
the engineer who gave the talk where that

00:50:01.230 --> 00:50:02.230
was announced.

00:50:02.230 --> 00:50:03.880
He told me that the team is still working
on it.

00:50:03.880 --> 00:50:08.910
They don't have anything that they can announce
at this time, but it still is under app development.

00:50:08.910 --> 00:50:11.920
So hopefully sometime in the near future,
we'll hear something.

00:50:11.920 --> 00:50:16.400
Just stay tuned and we'll let you know as
soon as there's something new that we can

00:50:16.400 --> 00:50:17.400
share there.

00:50:17.400 --> 00:50:22.339
The other question was about parsing JSON
data on devices with limited memory.

00:50:22.339 --> 00:50:27.630
In particular, are there any streaming stacks
file parsers for JSON?

00:50:27.630 --> 00:50:32.029
And we have two recommendations for you: the
first one is actually already built into Android.

00:50:32.029 --> 00:50:40.480
So as of Honeycomb, API level 11, we have
an android.util.json reader, which is a streaming

00:50:40.480 --> 00:50:45.619
JSON parser built into the system that should
do exactly what you want.

00:50:45.619 --> 00:50:52.369
Now, if you're on a device that's pre-Honeycomb,
we would recommend using a library called

00:50:52.369 --> 00:50:54.089
GSON.

00:50:54.089 --> 00:50:57.660
G as in Google.

00:50:57.660 --> 00:51:04.160
It turns out that JSON reader is actually
derived from GSON, so the two have very similar

00:51:04.160 --> 00:51:05.490
interfaces.

00:51:05.490 --> 00:51:11.369
If you're looking for something that's backwards
compatible and easy to either swap out at

00:51:11.369 --> 00:51:15.279
runtime or upgrade to later, GSON's definitely
a good choice.

00:51:15.279 --> 00:51:20.740
We picked it for the framework, so can't go
too wrong.

00:51:20.740 --> 00:51:23.869
And that were the two unanswered questions
from last week.

00:51:23.869 --> 00:51:24.910
&gt;&gt;Joe: Okay.

00:51:24.910 --> 00:51:30.299
Now, we have also talked about some audio
problems that we had at the beginning of last

00:51:30.299 --> 00:51:31.299
week.

00:51:31.299 --> 00:51:32.299
&gt;&gt;Trevor: Yes.

00:51:32.299 --> 00:51:33.650
&gt;&gt;Joe: Will people be able to look at the
Youtube recording?

00:51:33.650 --> 00:51:37.000
&gt;&gt;Trevor: They will once the Youtube video
goes up.

00:51:37.000 --> 00:51:40.710
I believe there's贸Daniel can correct me if
I'm wrong, but I believe there's some processing

00:51:40.710 --> 00:51:45.089
errors, and it's still贸or some processing
delays, rather, and it's still in the queue

00:51:45.089 --> 00:51:46.200
waiting to get uploaded.

00:51:46.200 --> 00:51:48.670
So we do have a recording of it贸
&gt;&gt;Joe: Right.

00:51:48.670 --> 00:51:54.349
&gt;&gt;Trevor: --and as soon as the area贸If, for
some reason, Youtube isn't able to go and

00:51:54.349 --> 00:51:56.510
post the video, we can just post the recorded
version.

00:51:56.510 --> 00:51:57.510
&gt;&gt;Joe: Yeah.

00:51:57.510 --> 00:51:58.690
&gt;&gt;Dan: Yeah, that's correct as far as I know.

00:51:58.690 --> 00:52:01.000
I actually have another question from the
Hangout real quick贸

00:52:01.000 --> 00:52:02.000
&gt;&gt;Joe: Go ahead.

00:52:02.000 --> 00:52:03.000
&gt;&gt;Dan: --before we close for today.

00:52:03.000 --> 00:52:04.390
I'm gonna put Akil on.

00:52:04.390 --> 00:52:06.650
I think that's how you pronounce it?

00:52:06.650 --> 00:52:08.260
Correct me if I'm wrong.

00:52:08.260 --> 00:52:09.260
&gt;&gt;Joe: Please do.

00:52:09.260 --> 00:52:10.260
&gt;&gt;Dan: One second.

00:52:10.260 --> 00:52:11.260
[pause]
&gt;&gt;Joe: Ahhh.

00:52:11.260 --> 00:52:12.260
&gt;&gt;Dan: Whoops.

00:52:12.260 --> 00:52:13.260
I see you guys.

00:52:13.260 --> 00:52:14.260
There we go.

00:52:14.260 --> 00:52:15.260
&gt;&gt;Joe: There he is!

00:52:15.260 --> 00:52:16.260
Hello!

00:52:16.260 --> 00:52:17.260
&gt;&gt;Trevor: Howdy.

00:52:17.260 --> 00:52:18.260
&gt;&gt;Akil: Hello.

00:52:18.260 --> 00:52:19.260
Hello, can you hear me?

00:52:19.260 --> 00:52:20.260
&gt;&gt;Trevor: Yes.

00:52:20.260 --> 00:52:21.260
&gt;&gt;Joe: Yes.

00:52:21.260 --> 00:52:22.260
&gt;&gt;Akil: Okay, this is a follow-up to last
week's question.

00:52:22.260 --> 00:52:25.099
I'm a beginner to Android development, and
I've been using the API guides.

00:52:25.099 --> 00:52:26.099
Not straight through, though.

00:52:26.099 --> 00:52:32.990
Do you have any suggestions on some good parts
of it that I should make sure I have covered?

00:52:32.990 --> 00:52:39.339
Like, I have done the fundamentals, and the
activity section except for loaders and user

00:52:39.339 --> 00:52:45.950
interface stuff, but I'm having trouble differentiating
what is something to read for reference later,

00:52:45.950 --> 00:52:48.900
or what are the fundamentals.

00:52:48.900 --> 00:52:51.710
&gt;&gt;Joe: I remember this question from last
week.

00:52:51.710 --> 00:52:52.710
&gt;&gt;Trevor: Yeah.

00:52:52.710 --> 00:52:57.260
Well, I think the question from last week
was actually贸Well, no, there were two questions

00:52:57.260 --> 00:52:58.260
recently.

00:52:58.260 --> 00:53:01.099
One was "What would be good things to read?"
and another one was "Would you recommend reading

00:53:01.099 --> 00:53:04.450
through all of the API guide?"

00:53:04.450 --> 00:53:09.180
So yeah, fundamentals is definitely a place
to start.

00:53:09.180 --> 00:53:10.470
That's why it's called fundamentals, right?

00:53:10.470 --> 00:53:11.680
[laughs] Loaders, definitely.

00:53:11.680 --> 00:53:15.720
You'll definitely want to read up on loaders
and UI when you get a chance, both of which

00:53:15.720 --> 00:53:18.740
are extremely important for modern Android
development.

00:53:18.740 --> 00:53:22.809
I guess UI has always been important.

00:53:22.809 --> 00:53:26.540
As far as other things worth noting贸Now,
{SQLite}SequelLite, is that-- I can't remember

00:53:26.540 --> 00:53:31.720
if that's part of the fundamental section
or not, but you'll definitely need to be familiar

00:53:31.720 --> 00:53:32.720
with that.

00:53:32.720 --> 00:53:39.930
Other things worth knowing: Binder is probably
nothing you need to know to begin with, but

00:53:39.930 --> 00:53:44.010
something you'll probably run into eventually,
since that's the RPC mechanism for Android.

00:53:44.010 --> 00:53:48.650
Let's see, what are some other really good
sections worth noting?

00:53:48.650 --> 00:53:49.650
Shared preferences.

00:53:49.650 --> 00:53:51.309
Definitely a good section to read up on.

00:53:51.309 --> 00:53:53.390
Let's see, what else?

00:53:53.390 --> 00:54:00.059
&gt;&gt;Joe: I would say that it's difficult to
give you detailed advice without knowing what

00:54:00.059 --> 00:54:01.619
sort of things you're trying to do.

00:54:01.619 --> 00:54:06.829
If you're just trying to learn everything
there is to know about Android, my approach

00:54:06.829 --> 00:54:11.410
to it is always to suggest that people pick
a project that they want to do, and then go

00:54:11.410 --> 00:54:13.809
off and try to do it.

00:54:13.809 --> 00:54:20.880
And, in addition, read the API guides as you
go along trying to do that project to learn

00:54:20.880 --> 00:54:25.180
about activities and how activities interact
with each other.

00:54:25.180 --> 00:54:29.690
If I was gonna name it, I would say activities,
intents, services贸

00:54:29.690 --> 00:54:31.300
&gt;&gt;Trevor: Yep.

00:54:31.300 --> 00:54:36.309
&gt;&gt;Joe: --and also shared preferences and贸
&gt;&gt;Alex: Fragments, probably.

00:54:36.309 --> 00:54:37.490
&gt;&gt;Trevor: Oh, fragments.

00:54:37.490 --> 00:54:38.490
Definitely.

00:54:38.490 --> 00:54:39.490
&gt;&gt;Alex: Yeah.

00:54:39.490 --> 00:54:40.490
&gt;&gt;Joe: Fragments.

00:54:40.490 --> 00:54:42.280
Fragments might be very useful as well.

00:54:42.280 --> 00:54:48.319
I think you can wait on those until after
you've gotten through some simple exercises.

00:54:48.319 --> 00:54:55.599
And keep in mind that we have a whole set
of Android training that you can do in conjunction

00:54:55.599 --> 00:54:57.510
with any of the API guides that you read.

00:54:57.510 --> 00:54:58.510
&gt;&gt;Trevor: Right.

00:54:58.510 --> 00:55:04.210
&gt;&gt;Alex: I would say, to get a solid foundation,
the Android training is split into a basic

00:55:04.210 --> 00:55:07.820
training section and an advanced topic section.

00:55:07.820 --> 00:55:11.869
Basic training is the stuff that everyone
should try to learn all of.

00:55:11.869 --> 00:55:12.869
&gt;&gt;Trevor: Yeah.

00:55:12.869 --> 00:55:17.559
&gt;&gt;Alex: 毛Cause it's the stuff that comes
up in almost every Android application past

00:55:17.559 --> 00:55:19.750
a certain size that you're going to write.

00:55:19.750 --> 00:55:25.670
The advanced topic stuff is also very useful
to know, but it only matters to your application

00:55:25.670 --> 00:55:28.180
some of the time.

00:55:28.180 --> 00:55:31.720
So I would say definitely cover the Getting
Started section of Android training, and that

00:55:31.720 --> 00:55:34.850
will cover a really good, solid foundation
for you.

00:55:34.850 --> 00:55:35.850
&gt;&gt;Trevor: Yeah.

00:55:35.850 --> 00:55:36.850
&gt;&gt;Joe: Yeah.

00:55:36.850 --> 00:55:38.980
&gt;&gt;Trevor: The training section is probably
a little bit closer to what you're trying

00:55:38.980 --> 00:55:39.980
to do, too.

00:55:39.980 --> 00:55:40.980
&gt;&gt;Joe: Right.

00:55:40.980 --> 00:55:42.829
&gt;&gt;Trevor: That's the section that really is
meant to be read sequentially, whereas the

00:55:42.829 --> 00:55:47.619
API guide and especially the reference are
more贸it's more reference material.

00:55:47.619 --> 00:55:49.690
You jump to the sections you need as you need
them.

00:55:49.690 --> 00:55:50.930
&gt;&gt;Akil: Yeah.

00:55:50.930 --> 00:55:54.350
I'm writing a course organizing app for students
and stuff.

00:55:54.350 --> 00:55:55.350
&gt;&gt;Joe: Mmhmm.

00:55:55.350 --> 00:56:01.180
&gt;&gt;Akil: That's what I'm {unintelligible} a
project to work on.

00:56:01.180 --> 00:56:06.920
So I was just wondering what should I basically
cover, and what's the next thing to do?

00:56:06.920 --> 00:56:08.170
But thanks for shedding some light on that.

00:56:08.170 --> 00:56:09.730
That really helps.

00:56:09.730 --> 00:56:10.730
Awesome.

00:56:10.730 --> 00:56:11.730
&gt;&gt;Joe: Okay.

00:56:11.730 --> 00:56:12.730
Great.

00:56:12.730 --> 00:56:13.730
Thank you.

00:56:13.730 --> 00:56:15.839
[watch beeps] Do we have anybody else out
there?

00:56:15.839 --> 00:56:16.930
&gt;&gt;Dan: Nope.

00:56:16.930 --> 00:56:18.029
&gt;&gt;Joe: Okay.

00:56:18.029 --> 00:56:19.809
Do we have time for one last question?

00:56:19.809 --> 00:56:23.869
&gt;&gt;Dan: I think we can spare another minute
or so.

00:56:23.869 --> 00:56:25.570
We're a little over time, but that's not a
problem.

00:56:25.570 --> 00:56:26.570
&gt;&gt;Joe: Okay.

00:56:26.570 --> 00:56:29.740
Do you want to try and tackle this last question
here, sitting here?

00:56:29.740 --> 00:56:32.050
&gt;&gt;Trevor: Eh, we can go ahead and do it.

00:56:32.050 --> 00:56:33.050
I mean贸
&gt;&gt;Joe: Okay.

00:56:33.050 --> 00:56:35.279
&gt;&gt;Trevor: --there's not much I can say on
that, but let's go ahead.

00:56:35.279 --> 00:56:36.279
&gt;&gt;Joe: Okay.

00:56:36.279 --> 00:56:37.279
Let's at least read it.

00:56:37.279 --> 00:56:42.880
"It took three weeks for developer to support,
respond, and reinstate the Reddit sync application

00:56:42.880 --> 00:56:44.349
after a trademark misunderstanding.

00:56:44.349 --> 00:56:49.730
What are you doing to enhance developer relations
and fix these unacceptable response times

00:56:49.730 --> 00:56:50.730
from support?"

00:56:50.730 --> 00:56:51.730
&gt;&gt;Trevor: Okay.

00:56:51.730 --> 00:56:55.460
Like I said, I can't say too much on this
particular issue.

00:56:55.460 --> 00:57:01.320
App reviews are private issues between us
and the developer in question.

00:57:01.320 --> 00:57:06.539
We have been in contact with that developer,
and we have been since the beginning, so there

00:57:06.539 --> 00:57:08.609
is definitely a dialog going on there.

00:57:08.609 --> 00:57:12.269
I just can't really publicly say what's going
on there.

00:57:12.269 --> 00:57:14.700
Like I said, it's between us and the developer.

00:57:14.700 --> 00:57:19.190
In general, though贸I mean, first off, we
are aware that there was some concern in the

00:57:19.190 --> 00:57:20.960
community about this particular app.

00:57:20.960 --> 00:57:24.319
And we're looking what we can do there to
improve the process in the future.

00:57:24.319 --> 00:57:31.660
And on a more general note, I just want to
emphasize: if you are a developer on Google

00:57:31.660 --> 00:57:36.620
Play, make sure you read through the terms
of services, and make sure that you don't

00:57:36.620 --> 00:57:43.960
have anything in your app which either violates
those or our content guidelines, because then

00:57:43.960 --> 00:57:45.950
the review team can get involved.

00:57:45.950 --> 00:57:49.950
It's a messy situation for everyone involved.

00:57:49.950 --> 00:57:52.460
Something that's best to avoid if possible.

00:57:52.460 --> 00:57:56.690
But again, we are aware of this particular
case, and we're looking into ways to improve

00:57:56.690 --> 00:58:00.230
it for the future, improve the process for
the future.

00:58:00.230 --> 00:58:04.560
I think that pretty much covers everything
we can say on that.

00:58:04.560 --> 00:58:05.740
&gt;&gt;Joe: Okay.

00:58:05.740 --> 00:58:07.990
Any other comments for today?

00:58:07.990 --> 00:58:09.200
All right.

00:58:09.200 --> 00:58:15.819
With that, we will say goodbye to you and
see you again this time next week.

00:58:15.819 --> 00:58:20.779
Please send in your questions to Moderator
and, if you want to ask us questions on the

00:58:20.779 --> 00:58:21.990
air, please feel free.

00:58:21.990 --> 00:58:22.990
Until then.

00:58:22.990 --> 00:58:23.990
&gt;&gt;Trevor: All right.

00:58:23.990 --> 00:58:24.990
See you, everyone.

00:58:24.990 --> 00:58:24.991
[pause]

