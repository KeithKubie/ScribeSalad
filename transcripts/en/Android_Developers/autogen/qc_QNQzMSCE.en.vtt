WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:06.909
[Music]

00:00:06.909 --> 00:00:06.919
 

00:00:06.919 --> 00:00:09.140
level up with databinding all right so

00:00:09.140 --> 00:00:09.150
level up with databinding all right so
 

00:00:09.150 --> 00:00:11.180
level up with databinding all right so
when databinding was introduced back in

00:00:11.180 --> 00:00:11.190
when databinding was introduced back in
 

00:00:11.190 --> 00:00:13.700
when databinding was introduced back in
2015 and i can't read anything so i'll

00:00:13.700 --> 00:00:13.710
2015 and i can't read anything so i'll
 

00:00:13.710 --> 00:00:15.169
2015 and i can't read anything so i'll
just do it from here my action was

00:00:15.169 --> 00:00:15.179
just do it from here my action was
 

00:00:15.179 --> 00:00:17.000
just do it from here my action was
pretty much what have we done

00:00:17.000 --> 00:00:17.010
pretty much what have we done
 

00:00:17.010 --> 00:00:18.980
pretty much what have we done
like expressions inside of xml values

00:00:18.980 --> 00:00:18.990
like expressions inside of xml values
 

00:00:18.990 --> 00:00:20.540
like expressions inside of xml values
this is kind of nuts but as it turns out

00:00:20.540 --> 00:00:20.550
this is kind of nuts but as it turns out
 

00:00:20.550 --> 00:00:22.880
this is kind of nuts but as it turns out
data binding is pretty cool and I just

00:00:22.880 --> 00:00:22.890
data binding is pretty cool and I just
 

00:00:22.890 --> 00:00:24.439
data binding is pretty cool and I just
needed to level up my understanding and

00:00:24.439 --> 00:00:24.449
needed to level up my understanding and
 

00:00:24.449 --> 00:00:25.910
needed to level up my understanding and
the one thing I love about data binding

00:00:25.910 --> 00:00:25.920
the one thing I love about data binding
 

00:00:25.920 --> 00:00:27.019
the one thing I love about data binding
is you can actually choose how much you

00:00:27.019 --> 00:00:27.029
is you can actually choose how much you
 

00:00:27.029 --> 00:00:28.040
is you can actually choose how much you
want it to use so it's kind of the

00:00:28.040 --> 00:00:28.050
want it to use so it's kind of the
 

00:00:28.050 --> 00:00:29.750
want it to use so it's kind of the
beginner level you get you know some

00:00:29.750 --> 00:00:29.760
beginner level you get you know some
 

00:00:29.760 --> 00:00:31.400
beginner level you get you know some
immediate benefits like avoiding find

00:00:31.400 --> 00:00:31.410
immediate benefits like avoiding find
 

00:00:31.410 --> 00:00:33.229
immediate benefits like avoiding find
view but ID it's better to start at the

00:00:33.229 --> 00:00:33.239
view but ID it's better to start at the
 

00:00:33.239 --> 00:00:34.940
view but ID it's better to start at the
intermediate level you actually get

00:00:34.940 --> 00:00:34.950
intermediate level you actually get
 

00:00:34.950 --> 00:00:36.470
intermediate level you actually get
things like custom binding adapters and

00:00:36.470 --> 00:00:36.480
things like custom binding adapters and
 

00:00:36.480 --> 00:00:37.970
things like custom binding adapters and
observability while at the expert level

00:00:37.970 --> 00:00:37.980
observability while at the expert level
 

00:00:37.980 --> 00:00:39.670
observability while at the expert level
we actually have two-way data binding

00:00:39.670 --> 00:00:39.680
we actually have two-way data binding
 

00:00:39.680 --> 00:00:41.660
we actually have two-way data binding
and this also allows you to apply

00:00:41.660 --> 00:00:41.670
and this also allows you to apply
 

00:00:41.670 --> 00:00:43.729
and this also allows you to apply
observer ability not only from data to

00:00:43.729 --> 00:00:43.739
observer ability not only from data to
 

00:00:43.739 --> 00:00:46.490
observer ability not only from data to
UI but also in UI to data so first of

00:00:46.490 --> 00:00:46.500
UI but also in UI to data so first of
 

00:00:46.500 --> 00:00:50.470
UI but also in UI to data so first of
all let's get rid of find view by ID

00:00:50.470 --> 00:00:50.480
 

00:00:50.480 --> 00:00:53.299
exactly so first we just we need to

00:00:53.299 --> 00:00:53.309
exactly so first we just we need to
 

00:00:53.309 --> 00:00:54.590
exactly so first we just we need to
enable data binding now all you have to

00:00:54.590 --> 00:00:54.600
enable data binding now all you have to
 

00:00:54.600 --> 00:00:56.090
enable data binding now all you have to
do to do this is actually set data

00:00:56.090 --> 00:00:56.100
do to do this is actually set data
 

00:00:56.100 --> 00:00:57.350
do to do this is actually set data
binding enabled equals true in your

00:00:57.350 --> 00:00:57.360
binding enabled equals true in your
 

00:00:57.360 --> 00:00:58.939
binding enabled equals true in your
Gradle file and then you need to put

00:00:58.939 --> 00:00:58.949
Gradle file and then you need to put
 

00:00:58.949 --> 00:01:00.380
Gradle file and then you need to put
these little layout wrappers around your

00:01:00.380 --> 00:01:00.390
these little layout wrappers around your
 

00:01:00.390 --> 00:01:02.270
these little layout wrappers around your
file and you can actually do that in

00:01:02.270 --> 00:01:02.280
file and you can actually do that in
 

00:01:02.280 --> 00:01:04.280
file and you can actually do that in
Android studio automatically now by

00:01:04.280 --> 00:01:04.290
Android studio automatically now by
 

00:01:04.290 --> 00:01:05.990
Android studio automatically now by
using by pulling down from the little

00:01:05.990 --> 00:01:06.000
using by pulling down from the little
 

00:01:06.000 --> 00:01:08.120
using by pulling down from the little
lightbulb icon and saying convert to

00:01:08.120 --> 00:01:08.130
lightbulb icon and saying convert to
 

00:01:08.130 --> 00:01:10.100
lightbulb icon and saying convert to
data binding layout which is pretty cool

00:01:10.100 --> 00:01:10.110
data binding layout which is pretty cool
 

00:01:10.110 --> 00:01:12.140
data binding layout which is pretty cool
now the binding is actually this object

00:01:12.140 --> 00:01:12.150
now the binding is actually this object
 

00:01:12.150 --> 00:01:13.520
now the binding is actually this object
you get from inflating the layout with

00:01:13.520 --> 00:01:13.530
you get from inflating the layout with
 

00:01:13.530 --> 00:01:15.380
you get from inflating the layout with
data binding util and you simply set

00:01:15.380 --> 00:01:15.390
data binding util and you simply set
 

00:01:15.390 --> 00:01:16.820
data binding util and you simply set
your attributes and listeners like this

00:01:16.820 --> 00:01:16.830
your attributes and listeners like this
 

00:01:16.830 --> 00:01:18.530
your attributes and listeners like this
which is pretty cool but honestly you're

00:01:18.530 --> 00:01:18.540
which is pretty cool but honestly you're
 

00:01:18.540 --> 00:01:19.850
which is pretty cool but honestly you're
never going to use this because you're

00:01:19.850 --> 00:01:19.860
never going to use this because you're
 

00:01:19.860 --> 00:01:21.380
never going to use this because you're
actually gonna want to use a real data

00:01:21.380 --> 00:01:21.390
actually gonna want to use a real data
 

00:01:21.390 --> 00:01:24.200
actually gonna want to use a real data
binding so let's talk about binding

00:01:24.200 --> 00:01:24.210
binding so let's talk about binding
 

00:01:24.210 --> 00:01:26.780
binding so let's talk about binding
expressions and in order to do this we

00:01:26.780 --> 00:01:26.790
expressions and in order to do this we
 

00:01:26.790 --> 00:01:29.149
expressions and in order to do this we
actually have to make data available to

00:01:29.149 --> 00:01:29.159
actually have to make data available to
 

00:01:29.159 --> 00:01:31.130
actually have to make data available to
our layout by declaring variables in

00:01:31.130 --> 00:01:31.140
our layout by declaring variables in
 

00:01:31.140 --> 00:01:34.039
our layout by declaring variables in
this data section of our layout and then

00:01:34.039 --> 00:01:34.049
this data section of our layout and then
 

00:01:34.049 --> 00:01:36.920
this data section of our layout and then
we can use expressions in layout XML

00:01:36.920 --> 00:01:36.930
we can use expressions in layout XML
 

00:01:36.930 --> 00:01:39.920
we can use expressions in layout XML
attributes to actually tie that data to

00:01:39.920 --> 00:01:39.930
attributes to actually tie that data to
 

00:01:39.930 --> 00:01:41.840
attributes to actually tie that data to
views now expressions are actually

00:01:41.840 --> 00:01:41.850
views now expressions are actually
 

00:01:41.850 --> 00:01:44.330
views now expressions are actually
wrapped in curly braces and prefixed by

00:01:44.330 --> 00:01:44.340
wrapped in curly braces and prefixed by
 

00:01:44.340 --> 00:01:46.429
wrapped in curly braces and prefixed by
an @ sign so here are some examples of

00:01:46.429 --> 00:01:46.439
an @ sign so here are some examples of
 

00:01:46.439 --> 00:01:47.990
an @ sign so here are some examples of
data binding expressions like in this

00:01:47.990 --> 00:01:48.000
data binding expressions like in this
 

00:01:48.000 --> 00:01:49.880
data binding expressions like in this
first one we're assigning a text

00:01:49.880 --> 00:01:49.890
first one we're assigning a text
 

00:01:49.890 --> 00:01:51.469
first one we're assigning a text
property to a view model property in

00:01:51.469 --> 00:01:51.479
property to a view model property in
 

00:01:51.479 --> 00:01:53.240
property to a view model property in
this second one we're using a custom

00:01:53.240 --> 00:01:53.250
this second one we're using a custom
 

00:01:53.250 --> 00:01:54.980
this second one we're using a custom
attribute height of zero and the third

00:01:54.980 --> 00:01:54.990
attribute height of zero and the third
 

00:01:54.990 --> 00:01:57.139
attribute height of zero and the third
one we're actually using a lambda which

00:01:57.139 --> 00:01:57.149
one we're actually using a lambda which
 

00:01:57.149 --> 00:01:59.060
one we're actually using a lambda which
calls what to get to gets past the text

00:01:59.060 --> 00:01:59.070
calls what to get to gets past the text
 

00:01:59.070 --> 00:02:00.859
calls what to get to gets past the text
view and calls unlike and in this fourth

00:02:00.859 --> 00:02:00.869
view and calls unlike and in this fourth
 

00:02:00.869 --> 00:02:02.810
view and calls unlike and in this fourth
one we're actually using a lambda which

00:02:02.810 --> 00:02:02.820
one we're actually using a lambda which
 

00:02:02.820 --> 00:02:04.969
one we're actually using a lambda which
calls unlike with a text property of

00:02:04.969 --> 00:02:04.979
calls unlike with a text property of
 

00:02:04.979 --> 00:02:06.620
calls unlike with a text property of
another view in our layout so you can

00:02:06.620 --> 00:02:06.630
another view in our layout so you can
 

00:02:06.630 --> 00:02:07.940
another view in our layout so you can
actually reference other views and pass

00:02:07.940 --> 00:02:07.950
actually reference other views and pass
 

00:02:07.950 --> 00:02:09.080
actually reference other views and pass
them in which is pretty cool

00:02:09.080 --> 00:02:09.090
them in which is pretty cool
 

00:02:09.090 --> 00:02:10.850
them in which is pretty cool
now to give data binding access to the

00:02:10.850 --> 00:02:10.860
now to give data binding access to the
 

00:02:10.860 --> 00:02:13.040
now to give data binding access to the
view model instance we just set the

00:02:13.040 --> 00:02:13.050
view model instance we just set the
 

00:02:13.050 --> 00:02:13.970
view model instance we just set the
binding object like

00:02:13.970 --> 00:02:13.980
binding object like
 

00:02:13.980 --> 00:02:16.550
binding object like
this after inflating layout so pretty

00:02:16.550 --> 00:02:16.560
this after inflating layout so pretty
 

00:02:16.560 --> 00:02:19.759
this after inflating layout so pretty
straightforward and then our view model

00:02:19.759 --> 00:02:19.769
straightforward and then our view model
 

00:02:19.769 --> 00:02:21.710
straightforward and then our view model
is now available to that layout but the

00:02:21.710 --> 00:02:21.720
is now available to that layout but the
 

00:02:21.720 --> 00:02:23.000
is now available to that layout but the
real question is how does this all work

00:02:23.000 --> 00:02:23.010
real question is how does this all work
 

00:02:23.010 --> 00:02:25.520
real question is how does this all work
and and the answer of course is that

00:02:25.520 --> 00:02:25.530
and and the answer of course is that
 

00:02:25.530 --> 00:02:28.729
and and the answer of course is that
there is no magic in data bindings but

00:02:28.729 --> 00:02:28.739
there is no magic in data bindings but
 

00:02:28.739 --> 00:02:30.170
there is no magic in data bindings but
it does seem like magic and that's

00:02:30.170 --> 00:02:30.180
it does seem like magic and that's
 

00:02:30.180 --> 00:02:32.059
it does seem like magic and that's
because we have built in binding

00:02:32.059 --> 00:02:32.069
because we have built in binding
 

00:02:32.069 --> 00:02:33.710
because we have built in binding
adapters that handle almost everything

00:02:33.710 --> 00:02:33.720
adapters that handle almost everything
 

00:02:33.720 --> 00:02:35.509
adapters that handle almost everything
so with data binding every call of the

00:02:35.509 --> 00:02:35.519
so with data binding every call of the
 

00:02:35.519 --> 00:02:36.830
so with data binding every call of the
framework is actually made in a binding

00:02:36.830 --> 00:02:36.840
framework is actually made in a binding
 

00:02:36.840 --> 00:02:38.509
framework is actually made in a binding
adapter there's no magic you can

00:02:38.509 --> 00:02:38.519
adapter there's no magic you can
 

00:02:38.519 --> 00:02:39.650
adapter there's no magic you can
actually see the code and use the

00:02:39.650 --> 00:02:39.660
actually see the code and use the
 

00:02:39.660 --> 00:02:41.210
actually see the code and use the
debugger to navigate through it the

00:02:41.210 --> 00:02:41.220
debugger to navigate through it the
 

00:02:41.220 --> 00:02:42.319
debugger to navigate through it the
first lines in the method are just

00:02:42.319 --> 00:02:42.329
first lines in the method are just
 

00:02:42.329 --> 00:02:43.910
first lines in the method are just
checking for changes to only update the

00:02:43.910 --> 00:02:43.920
checking for changes to only update the
 

00:02:43.920 --> 00:02:46.520
checking for changes to only update the
UI if necessary and that last line is

00:02:46.520 --> 00:02:46.530
UI if necessary and that last line is
 

00:02:46.530 --> 00:02:48.050
UI if necessary and that last line is
actually the set text we're looking for

00:02:48.050 --> 00:02:48.060
actually the set text we're looking for
 

00:02:48.060 --> 00:02:49.880
actually the set text we're looking for
and there's lots of adapters provided by

00:02:49.880 --> 00:02:49.890
and there's lots of adapters provided by
 

00:02:49.890 --> 00:02:50.990
and there's lots of adapters provided by
data binding and they make it behave

00:02:50.990 --> 00:02:51.000
data binding and they make it behave
 

00:02:51.000 --> 00:02:52.550
data binding and they make it behave
intelligently and consistently across

00:02:52.550 --> 00:02:52.560
intelligently and consistently across
 

00:02:52.560 --> 00:02:54.619
intelligently and consistently across
all these views now looking at these

00:02:54.619 --> 00:02:54.629
all these views now looking at these
 

00:02:54.629 --> 00:02:55.940
all these views now looking at these
source files will help to build your own

00:02:55.940 --> 00:02:55.950
source files will help to build your own
 

00:02:55.950 --> 00:02:58.460
source files will help to build your own
custom binding adapters which is really

00:02:58.460 --> 00:02:58.470
custom binding adapters which is really
 

00:02:58.470 --> 00:03:00.170
custom binding adapters which is really
how things start to get exciting so

00:03:00.170 --> 00:03:00.180
how things start to get exciting so
 

00:03:00.180 --> 00:03:02.449
how things start to get exciting so
let's talk about buying adapters 101 the

00:03:02.449 --> 00:03:02.459
let's talk about buying adapters 101 the
 

00:03:02.459 --> 00:03:04.039
let's talk about buying adapters 101 the
adapters annotated with at binding

00:03:04.039 --> 00:03:04.049
adapters annotated with at binding
 

00:03:04.049 --> 00:03:05.869
adapters annotated with at binding
adapter and takes one or more attribute

00:03:05.869 --> 00:03:05.879
adapter and takes one or more attribute
 

00:03:05.879 --> 00:03:08.330
adapter and takes one or more attribute
names the adapter method takes a view as

00:03:08.330 --> 00:03:08.340
names the adapter method takes a view as
 

00:03:08.340 --> 00:03:10.190
names the adapter method takes a view as
the first parameter and use a subclass

00:03:10.190 --> 00:03:10.200
the first parameter and use a subclass
 

00:03:10.200 --> 00:03:11.660
the first parameter and use a subclass
of you to restrict it to a specific view

00:03:11.660 --> 00:03:11.670
of you to restrict it to a specific view
 

00:03:11.670 --> 00:03:13.610
of you to restrict it to a specific view
type any additional parameters are then

00:03:13.610 --> 00:03:13.620
type any additional parameters are then
 

00:03:13.620 --> 00:03:15.020
type any additional parameters are then
matched with the datatype of the binding

00:03:15.020 --> 00:03:15.030
matched with the datatype of the binding
 

00:03:15.030 --> 00:03:17.360
matched with the datatype of the binding
expressions now they can just adapters

00:03:17.360 --> 00:03:17.370
expressions now they can just adapters
 

00:03:17.370 --> 00:03:20.360
expressions now they can just adapters
can differ just by data types so you can

00:03:20.360 --> 00:03:20.370
can differ just by data types so you can
 

00:03:20.370 --> 00:03:21.890
can differ just by data types so you can
also use adapters to override the

00:03:21.890 --> 00:03:21.900
also use adapters to override the
 

00:03:21.900 --> 00:03:24.170
also use adapters to override the
behavior for built-in attributes now

00:03:24.170 --> 00:03:24.180
behavior for built-in attributes now
 

00:03:24.180 --> 00:03:25.909
behavior for built-in attributes now
this makes all image views load using

00:03:25.909 --> 00:03:25.919
this makes all image views load using
 

00:03:25.919 --> 00:03:27.589
this makes all image views load using
Glide with their source parameter set

00:03:27.589 --> 00:03:27.599
Glide with their source parameter set
 

00:03:27.599 --> 00:03:28.879
Glide with their source parameter set
but you've got to be careful with this

00:03:28.879 --> 00:03:28.889
but you've got to be careful with this
 

00:03:28.889 --> 00:03:30.379
but you've got to be careful with this
because this is module global so you

00:03:30.379 --> 00:03:30.389
because this is module global so you
 

00:03:30.389 --> 00:03:32.150
because this is module global so you
might have some really cool side effects

00:03:32.150 --> 00:03:32.160
might have some really cool side effects
 

00:03:32.160 --> 00:03:34.550
might have some really cool side effects
of this you might expect we also could

00:03:34.550 --> 00:03:34.560
of this you might expect we also could
 

00:03:34.560 --> 00:03:35.479
of this you might expect we also could
do a bunch of stuff with advanced

00:03:35.479 --> 00:03:35.489
do a bunch of stuff with advanced
 

00:03:35.489 --> 00:03:37.400
do a bunch of stuff with advanced
finding adapters so like sometimes that

00:03:37.400 --> 00:03:37.410
finding adapters so like sometimes that
 

00:03:37.410 --> 00:03:38.870
finding adapters so like sometimes that
old value is really important and such

00:03:38.870 --> 00:03:38.880
old value is really important and such
 

00:03:38.880 --> 00:03:40.759
old value is really important and such
as with a color change listener so if

00:03:40.759 --> 00:03:40.769
as with a color change listener so if
 

00:03:40.769 --> 00:03:42.170
as with a color change listener so if
you used the same parameter type for two

00:03:42.170 --> 00:03:42.180
you used the same parameter type for two
 

00:03:42.180 --> 00:03:44.150
you used the same parameter type for two
parameters in a row the binding of Pilar

00:03:44.150 --> 00:03:44.160
parameters in a row the binding of Pilar
 

00:03:44.160 --> 00:03:45.650
parameters in a row the binding of Pilar
actually passed the old value into the

00:03:45.650 --> 00:03:45.660
actually passed the old value into the
 

00:03:45.660 --> 00:03:47.120
actually passed the old value into the
first one followed by the updated one

00:03:47.120 --> 00:03:47.130
first one followed by the updated one
 

00:03:47.130 --> 00:03:50.300
first one followed by the updated one
and also you can use multiple attributes

00:03:50.300 --> 00:03:50.310
and also you can use multiple attributes
 

00:03:50.310 --> 00:03:51.920
and also you can use multiple attributes
which is pretty cool like in this image

00:03:51.920 --> 00:03:51.930
which is pretty cool like in this image
 

00:03:51.930 --> 00:03:53.599
which is pretty cool like in this image
view so you can actually define these

00:03:53.599 --> 00:03:53.609
view so you can actually define these
 

00:03:53.609 --> 00:03:55.430
view so you can actually define these
multiple attributes here in when you

00:03:55.430 --> 00:03:55.440
multiple attributes here in when you
 

00:03:55.440 --> 00:03:57.199
multiple attributes here in when you
declare the binding adapter and then

00:03:57.199 --> 00:03:57.209
declare the binding adapter and then
 

00:03:57.209 --> 00:03:59.599
declare the binding adapter and then
those are both available to your code

00:03:59.599 --> 00:03:59.609
those are both available to your code
 

00:03:59.609 --> 00:04:01.550
those are both available to your code
actually as you're looking at it now

00:04:01.550 --> 00:04:01.560
actually as you're looking at it now
 

00:04:01.560 --> 00:04:03.710
actually as you're looking at it now
observer ability is also pretty cool and

00:04:03.710 --> 00:04:03.720
observer ability is also pretty cool and
 

00:04:03.720 --> 00:04:06.710
observer ability is also pretty cool and
we can actually use live data to

00:04:06.710 --> 00:04:06.720
we can actually use live data to
 

00:04:06.720 --> 00:04:09.470
we can actually use live data to
automatically do observation so this is

00:04:09.470 --> 00:04:09.480
automatically do observation so this is
 

00:04:09.480 --> 00:04:10.729
automatically do observation so this is
pretty cool what we're actually only

00:04:10.729 --> 00:04:10.739
pretty cool what we're actually only
 

00:04:10.739 --> 00:04:12.470
pretty cool what we're actually only
exposing an immutable class here with an

00:04:12.470 --> 00:04:12.480
exposing an immutable class here with an
 

00:04:12.480 --> 00:04:13.849
exposing an immutable class here with an
example of this and the backing field

00:04:13.849 --> 00:04:13.859
example of this and the backing field
 

00:04:13.859 --> 00:04:15.470
example of this and the backing field
can either be immutable or mediator live

00:04:15.470 --> 00:04:15.480
can either be immutable or mediator live
 

00:04:15.480 --> 00:04:17.270
can either be immutable or mediator live
data and then you just expose a live

00:04:17.270 --> 00:04:17.280
data and then you just expose a live
 

00:04:17.280 --> 00:04:19.990
data and then you just expose a live
data using Cotton's getters to tax and

00:04:19.990 --> 00:04:20.000
data using Cotton's getters to tax and
 

00:04:20.000 --> 00:04:22.190
data using Cotton's getters to tax and
then you need to do way more additional

00:04:22.190 --> 00:04:22.200
then you need to do way more additional
 

00:04:22.200 --> 00:04:23.300
then you need to do way more additional
change you actually need to set the

00:04:23.300 --> 00:04:23.310
change you actually need to set the
 

00:04:23.310 --> 00:04:24.890
change you actually need to set the
lifecycle owner so you can observe the

00:04:24.890 --> 00:04:24.900
lifecycle owner so you can observe the
 

00:04:24.900 --> 00:04:26.330
lifecycle owner so you can observe the
live data in your view model with the

00:04:26.330 --> 00:04:26.340
live data in your view model with the
 

00:04:26.340 --> 00:04:27.650
live data in your view model with the
correct scope

00:04:27.650 --> 00:04:27.660
correct scope
 

00:04:27.660 --> 00:04:30.200
correct scope
all right finally two-way data-binding

00:04:30.200 --> 00:04:30.210
all right finally two-way data-binding
 

00:04:30.210 --> 00:04:32.240
all right finally two-way data-binding
and honestly this is really trivial when

00:04:32.240 --> 00:04:32.250
and honestly this is really trivial when
 

00:04:32.250 --> 00:04:34.610
and honestly this is really trivial when
you're actually using live data now you

00:04:34.610 --> 00:04:34.620
you're actually using live data now you
 

00:04:34.620 --> 00:04:35.870
you're actually using live data now you
can of course use one-way data-binding

00:04:35.870 --> 00:04:35.880
can of course use one-way data-binding
 

00:04:35.880 --> 00:04:39.080
can of course use one-way data-binding
two ways as in this example of checkbox

00:04:39.080 --> 00:04:39.090
two ways as in this example of checkbox
 

00:04:39.090 --> 00:04:41.150
two ways as in this example of checkbox
but you can actually just use to call

00:04:41.150 --> 00:04:41.160
but you can actually just use to call
 

00:04:41.160 --> 00:04:42.650
but you can actually just use to call
this it with two-way data-binding by

00:04:42.650 --> 00:04:42.660
this it with two-way data-binding by
 

00:04:42.660 --> 00:04:44.990
this it with two-way data-binding by
using at equals and the best part of

00:04:44.990 --> 00:04:45.000
using at equals and the best part of
 

00:04:45.000 --> 00:04:46.280
using at equals and the best part of
this is we can actually observe live

00:04:46.280 --> 00:04:46.290
this is we can actually observe live
 

00:04:46.290 --> 00:04:48.500
this is we can actually observe live
data so in this case it's fine to expose

00:04:48.500 --> 00:04:48.510
data so in this case it's fine to expose
 

00:04:48.510 --> 00:04:49.790
data so in this case it's fine to expose
a mutable live data since it can be

00:04:49.790 --> 00:04:49.800
a mutable live data since it can be
 

00:04:49.800 --> 00:04:51.740
a mutable live data since it can be
modified by our view and then we set the

00:04:51.740 --> 00:04:51.750
modified by our view and then we set the
 

00:04:51.750 --> 00:04:53.780
modified by our view and then we set the
lifecycle owner and we use the at-at

00:04:53.780 --> 00:04:53.790
lifecycle owner and we use the at-at
 

00:04:53.790 --> 00:04:55.640
lifecycle owner and we use the at-at
equals notation for the check box and

00:04:55.640 --> 00:04:55.650
equals notation for the check box and
 

00:04:55.650 --> 00:04:58.100
equals notation for the check box and
that's it to a data binding maybe that's

00:04:58.100 --> 00:04:58.110
that's it to a data binding maybe that's
 

00:04:58.110 --> 00:05:00.080
that's it to a data binding maybe that's
not so expert after all so to learn more

00:05:00.080 --> 00:05:00.090
not so expert after all so to learn more
 

00:05:00.090 --> 00:05:01.970
not so expert after all so to learn more
check out the data binding code lab and

00:05:01.970 --> 00:05:01.980
check out the data binding code lab and
 

00:05:01.980 --> 00:05:03.440
check out the data binding code lab and
the documentation on developer and

00:05:03.440 --> 00:05:03.450
the documentation on developer and
 

00:05:03.450 --> 00:05:06.640
the documentation on developer and
Raycom

00:05:06.640 --> 00:05:06.650
 

00:05:06.650 --> 00:05:15.000
[Music]

00:05:15.000 --> 00:05:15.010
 

00:05:15.010 --> 00:05:21.449
[Music]

