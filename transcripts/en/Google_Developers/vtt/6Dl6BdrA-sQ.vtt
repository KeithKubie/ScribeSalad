WEBVTT
Kind: captions
Language: en

00:00:01.050 --> 00:00:03.200
If you're an audio buff
writing Android apps,

00:00:03.200 --> 00:00:04.574
then there's some
exciting things

00:00:04.574 --> 00:00:06.330
showing up in L
Developer Preview.

00:00:06.330 --> 00:00:07.950
My name is Andy, and
today we're going

00:00:07.950 --> 00:00:10.250
to talk about sample
rates for digital audio,

00:00:10.250 --> 00:00:13.214
and how to give the best
sound to your users.

00:00:13.214 --> 00:00:14.755
But hold on-- let's
start at the top,

00:00:14.755 --> 00:00:17.090
and talk about
audio sample rates.

00:00:17.090 --> 00:00:20.510
There's devices, content,
and connectivity.

00:00:20.510 --> 00:00:23.460
And each one approaches
sample rates differently.

00:00:23.460 --> 00:00:26.090
For example, this phone
has a device audio rate

00:00:26.090 --> 00:00:27.480
of 48 kilohertz.

00:00:27.480 --> 00:00:31.220
But that doesn't guarantee apps
on it will be using all of it.

00:00:31.220 --> 00:00:34.780
Game apps often use 24 kilohertz
and 32 kilohertz sample rates.

00:00:34.780 --> 00:00:37.610
Streaming music comes
in at 44.1 kilohertz.

00:00:37.610 --> 00:00:39.990
Streaming video, 48 kilohertz.

00:00:39.990 --> 00:00:41.820
Meanwhile, my
hands-free Bluetooth

00:00:41.820 --> 00:00:43.940
is chugging along
at eight kilohertz.

00:00:43.940 --> 00:00:46.490
Which means it's a jungle out
there with sample rates, even

00:00:46.490 --> 00:00:48.570
just considering the smartphone.

00:00:48.570 --> 00:00:50.310
So what is sample rate anyhow?

00:00:50.310 --> 00:00:53.170
Simply put, given an
analog audio signal,

00:00:53.170 --> 00:00:55.850
it's how often you
sample its waveform.

00:00:55.850 --> 00:00:58.210
So when a game
uses 32 kilohertz,

00:00:58.210 --> 00:01:01.030
we need to use a resampler to
convert to the 48 kilohertz

00:01:01.030 --> 00:01:03.140
the phone needs.

00:01:03.140 --> 00:01:06.230
As you can expect, this
process of resampling

00:01:06.230 --> 00:01:08.104
can cause lots of issues.

00:01:08.104 --> 00:01:10.020
Generally the one problem
everyone talks about

00:01:10.020 --> 00:01:11.500
is aliasing.

00:01:11.500 --> 00:01:13.405
Aliasing can occur when
the audio frequency

00:01:13.405 --> 00:01:15.200
is too high for the sample rate.

00:01:15.200 --> 00:01:17.310
Then the high frequency
signal looks like,

00:01:17.310 --> 00:01:19.240
or aliases as a low
frequency signal--

00:01:19.240 --> 00:01:22.170
as shown with the green
signal on the right.

00:01:22.170 --> 00:01:24.260
The maximum audio
frequency without aliasing

00:01:24.260 --> 00:01:27.720
is half the sample rate, also
called a Nyquist frequency.

00:01:27.720 --> 00:01:31.200
In order to get rid of aliasing,
we use a low pass filter.

00:01:31.200 --> 00:01:33.560
A low pass filter removes
the high frequencies,

00:01:33.560 --> 00:01:35.050
which cause aliasing.

00:01:35.050 --> 00:01:36.650
It has three bands.

00:01:36.650 --> 00:01:39.070
The Passband is for
the audio frequencies.

00:01:39.070 --> 00:01:41.780
The Stopband prevents high
frequencies from aliasing.

00:01:41.780 --> 00:01:44.250
And the Transition
band is between them.

00:01:44.250 --> 00:01:46.350
So what makes a good
resampler filter?

00:01:46.350 --> 00:01:47.950
First, finite length.

00:01:47.950 --> 00:01:49.710
With finite length,
ripples occur.

00:01:49.710 --> 00:01:51.340
This is Gibbs' phenomena.

00:01:51.340 --> 00:01:54.250
Second, we want the ripples
in the Passband to be small,

00:01:54.250 --> 00:01:56.270
to avoid distorting our audio.

00:01:56.270 --> 00:01:58.580
Third, we want ripples in
the Stopband to be small,

00:01:58.580 --> 00:02:01.255
to avoid raising the Stopband,
and allowing high frequencies

00:02:01.255 --> 00:02:02.570
to alias.

00:02:02.570 --> 00:02:04.880
Last, we want to narrow
our Transition band.

00:02:04.880 --> 00:02:07.211
A shorter filer length means
a wider Transition band.

00:02:07.211 --> 00:02:08.919
It's related to the
uncertainty principal

00:02:08.919 --> 00:02:10.460
between frequency and time.

00:02:10.460 --> 00:02:12.880
You want a narrow
Transition band.

00:02:12.880 --> 00:02:16.190
As you might imagine, designing
really good filters are hard.

00:02:16.190 --> 00:02:18.614
Having the transition bandwidth
doubles the filter length,

00:02:18.614 --> 00:02:20.780
doubling the stopband
attenuation doubles the filter

00:02:20.780 --> 00:02:21.535
length.

00:02:21.535 --> 00:02:23.530
Ugh-- design trade-offs.

00:02:23.530 --> 00:02:24.450
Good news.

00:02:24.450 --> 00:02:27.530
In Android, we compute the
sampler filters for you.

00:02:27.530 --> 00:02:30.840
Check out these links for
information on how that works.

00:02:30.840 --> 00:02:32.640
There's lots of
resamplers out there.

00:02:32.640 --> 00:02:36.000
Where do the ones Android
audio provides fit in?

00:02:36.000 --> 00:02:39.100
Like plants and animals, there
are polynomial resamplers

00:02:39.100 --> 00:02:40.530
and filter resamplers.

00:02:40.530 --> 00:02:42.260
On a polynomial
side, you've probably

00:02:42.260 --> 00:02:45.170
heard of linear interpolators,
and cubic splines.

00:02:45.170 --> 00:02:46.880
Those are typically
used for images.

00:02:46.880 --> 00:02:48.790
We're a filter-based resampler.

00:02:48.790 --> 00:02:50.300
This is more typical for audio.

00:02:50.300 --> 00:02:53.390
In particular, we're using
a windowed sink filter.

00:02:53.390 --> 00:02:55.250
Now let's talk
about Android audio

00:02:55.250 --> 00:02:57.720
where we've improved
the resamplers.

00:02:57.720 --> 00:02:59.760
We have increased quality.

00:02:59.760 --> 00:03:02.070
In a spectrogram of a
sine sweep or chirp,

00:03:02.070 --> 00:03:04.310
we inspect a single line.

00:03:04.310 --> 00:03:06.340
This means one input
frequency corresponds

00:03:06.340 --> 00:03:08.320
exactly one output frequency.

00:03:08.320 --> 00:03:11.550
This should also be true
after sample rate conversion.

00:03:11.550 --> 00:03:14.960
Our example shows 44.1
kilohertz to 48 kilohertz,

00:03:14.960 --> 00:03:16.700
after a sample rate conversion.

00:03:16.700 --> 00:03:19.420
Before we reach the top, see
that basket weave pattern?

00:03:19.420 --> 00:03:21.180
That's aliasing in harmonics.

00:03:21.180 --> 00:03:22.220
Bad.

00:03:22.220 --> 00:03:24.520
After is the bottom,
which is much cleaner.

00:03:24.520 --> 00:03:27.070
This at our low quality
setting, and means music

00:03:27.070 --> 00:03:29.290
from many devices
will sound better.

00:03:29.290 --> 00:03:31.810
We dynamically compute
filters for your frequencies.

00:03:31.810 --> 00:03:35.210
In a spectrogram of 42
kilohertz to 32 kilohertz,

00:03:35.210 --> 00:03:36.960
before we reach
the top, aliasing

00:03:36.960 --> 00:03:38.400
is present on the
old resamplers,

00:03:38.400 --> 00:03:41.070
as shown in the
reflected line down.

00:03:41.070 --> 00:03:42.240
After is a bottom.

00:03:42.240 --> 00:03:43.740
Again, we clean things up.

00:03:43.740 --> 00:03:45.240
This is at our high
quality setting.

00:03:45.240 --> 00:03:46.920
It means we have
less audio artifacts

00:03:46.920 --> 00:03:49.060
at different frequencies.

00:03:49.060 --> 00:03:51.430
We've also expanded the
frequency range for use

00:03:51.430 --> 00:03:54.350
to any frequency between eight
kilohertz to 48 kilohertz.

00:03:54.350 --> 00:03:56.070
So resampling we
can use for effects,

00:03:56.070 --> 00:03:58.840
or reduce synthesis computation.

00:03:58.840 --> 00:04:00.520
We've increased speed.

00:04:00.520 --> 00:04:02.360
Our resample rates are
about twice as fast

00:04:02.360 --> 00:04:05.600
as the older resamplers, for
comparable or better quality.

00:04:05.600 --> 00:04:07.740
This means more processing
for other tasks,

00:04:07.740 --> 00:04:10.170
and better battery lifetime.

00:04:10.170 --> 00:04:12.030
We've made it easier
for you to use

00:04:12.030 --> 00:04:13.840
the digital audio on Android.

00:04:13.840 --> 00:04:17.440
We like it if you're liberated,
to use different sample rates.

00:04:17.440 --> 00:04:19.480
Now, it's up to you to
make something great.

00:04:19.480 --> 00:04:21.950
Please follow these links
for more information.

00:04:21.950 --> 00:04:23.870
Thanks for watching.

