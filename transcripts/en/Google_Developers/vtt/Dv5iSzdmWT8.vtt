WEBVTT
Kind: captions
Language: en

00:00:01.370 --> 00:00:04.760
It is easy to forget that even
the simplest movements involve

00:00:04.760 --> 00:00:08.060
complex cognitive and
physical processes.

00:00:08.060 --> 00:00:11.660
The human body alone consists
of more than 200 joints

00:00:11.660 --> 00:00:13.640
and more than 600 muscles.

00:00:13.640 --> 00:00:15.950
And it is this incredibly
intricate machine

00:00:15.950 --> 00:00:18.470
that allows us to move.

00:00:18.470 --> 00:00:21.570
It is the ability to move
that has even given humans

00:00:21.570 --> 00:00:24.170
the remarkable flexibility
to do everything

00:00:24.170 --> 00:00:28.050
from landing spaceships on the
moon to moon walking on Earth.

00:00:28.050 --> 00:00:30.340
Project Tango is a
platform for mobile devices

00:00:30.340 --> 00:00:32.030
that can interpret
human movement

00:00:32.030 --> 00:00:34.760
in interesting, new ways.

00:00:34.760 --> 00:00:36.180
My name is Nikolai.

00:00:36.180 --> 00:00:37.980
And in this video,
I will show you

00:00:37.980 --> 00:00:41.180
the basics of designing apps and
games with motion tracking that

00:00:41.180 --> 00:00:43.960
feels natural to users.

00:00:43.960 --> 00:00:45.890
When designing for
motion, you have

00:00:45.890 --> 00:00:48.620
to consider how a
user moves naturally,

00:00:48.620 --> 00:00:50.770
which physical setting
they will be in,

00:00:50.770 --> 00:00:53.490
and why they need to move.

00:00:53.490 --> 00:00:55.450
You may have seen how
mobile devices can

00:00:55.450 --> 00:00:59.460
track movement in games and apps
by using rotational tracking.

00:00:59.460 --> 00:01:00.950
You may have used
it to look around

00:01:00.950 --> 00:01:02.900
Google Street View
on racing games

00:01:02.900 --> 00:01:04.910
to control the steering wheel.

00:01:04.910 --> 00:01:08.010
However, if you only
track the device rotation,

00:01:08.010 --> 00:01:11.400
you have to come up with
other ways to move in the app.

00:01:11.400 --> 00:01:13.620
You can do so by
tapping on the screen

00:01:13.620 --> 00:01:17.090
or by using virtual
D-Pads to go places.

00:01:17.090 --> 00:01:20.010
If the user is looking
at a virtual moon colony,

00:01:20.010 --> 00:01:23.600
like here, they can use the
device rotation to look around.

00:01:23.600 --> 00:01:25.320
But they need
another input method,

00:01:25.320 --> 00:01:28.620
like virtual D-Pads
to move around.

00:01:28.620 --> 00:01:31.620
The lack of fine-grain tracking
in current mobile devices

00:01:31.620 --> 00:01:33.720
limits what we can do with them.

00:01:33.720 --> 00:01:36.540
And Project Tango device
solves these problems

00:01:36.540 --> 00:01:39.700
by adding a camera system
that, like us humans,

00:01:39.700 --> 00:01:43.980
uses visual recognition
to keep track of itself.

00:01:43.980 --> 00:01:46.720
This allows the user to
not only rotate, but also

00:01:46.720 --> 00:01:49.400
move the device in any
direction they choose

00:01:49.400 --> 00:01:52.720
and see it reflected
in their app.

00:01:52.720 --> 00:01:55.800
You can implement
this on a small scale.

00:01:55.800 --> 00:01:57.990
The users can use
this input method

00:01:57.990 --> 00:02:01.320
to view the moon colony
while sitting at a table.

00:02:01.320 --> 00:02:05.080
This works great if the
virtual world is small.

00:02:05.080 --> 00:02:07.130
In this example, we have
constrained the users

00:02:07.130 --> 00:02:09.500
so they don't get
up and walk away.

00:02:09.500 --> 00:02:13.090
But what if the user did
get up and walked away?

00:02:13.090 --> 00:02:15.710
Project Tango can track
a large scale too.

00:02:15.710 --> 00:02:18.520
This means the user does
not need to stay seated

00:02:18.520 --> 00:02:21.100
but can move around
freely and naturally.

00:02:21.100 --> 00:02:24.370
In that case, the user will
have a much larger play space

00:02:24.370 --> 00:02:26.190
and could explore
more of the colony

00:02:26.190 --> 00:02:28.700
or the craters of the moon.

00:02:28.700 --> 00:02:30.510
In the virtual
worlds we create, you

00:02:30.510 --> 00:02:33.190
can do things you
can't do in real life.

00:02:33.190 --> 00:02:36.980
You can run really, really fast
and move very, very slowly.

00:02:36.980 --> 00:02:40.170
This is how it looks if
we move at normal speed.

00:02:40.170 --> 00:02:42.550
So if you're tracking
the user's movement

00:02:42.550 --> 00:02:44.800
through the physical
world, a safe bet

00:02:44.800 --> 00:02:49.780
is to map the physical motion
proportionally to the virtual.

00:02:49.780 --> 00:02:52.340
If we once again
walk at normal speed,

00:02:52.340 --> 00:02:54.890
but slow down the
user's virtual movement,

00:02:54.890 --> 00:02:56.870
it can look like this.

00:02:56.870 --> 00:02:59.630
Notice how we have to
walk really far before we

00:02:59.630 --> 00:03:02.030
get past that building block?

00:03:02.030 --> 00:03:03.750
Not only is this
not very exciting,

00:03:03.750 --> 00:03:06.450
it can create a feeling
that the entire system is

00:03:06.450 --> 00:03:08.860
unable to keep up or that
everything in the world

00:03:08.860 --> 00:03:11.540
is unnaturally big.

00:03:11.540 --> 00:03:13.510
On the other hand,
it would be great

00:03:13.510 --> 00:03:16.430
if we could move at supersonic
speed in the virtual world

00:03:16.430 --> 00:03:18.080
instead, right?

00:03:18.080 --> 00:03:19.570
Not so fast.

00:03:19.570 --> 00:03:21.710
If we speed up
motion so you only

00:03:21.710 --> 00:03:24.080
have to walk a
little to get far,

00:03:24.080 --> 00:03:26.810
things can start
to feel jittery.

00:03:26.810 --> 00:03:30.170
In other words, things are
easiest to comprehend and use

00:03:30.170 --> 00:03:34.440
if they behave naturally
like we're used to.

00:03:34.440 --> 00:03:36.355
At times, there
may be good reasons

00:03:36.355 --> 00:03:40.890
to letting the user move faster
or slower than they really are.

00:03:40.890 --> 00:03:42.910
For example, if they
are attempting to sight

00:03:42.910 --> 00:03:47.750
see the entire moon on foot or
probing very tiny moon rocks.

00:03:47.750 --> 00:03:49.990
In these cases, we have
found that providing a way

00:03:49.990 --> 00:03:54.390
to manually adjust the speed
makes it less confusing,

00:03:54.390 --> 00:03:58.140
such as a Speed Boost button to
skip the boring bits on the way

00:03:58.140 --> 00:04:00.720
to the moon crater.

00:04:00.720 --> 00:04:02.660
When you integrate
motion tracking

00:04:02.660 --> 00:04:06.490
in the user experience, think
about what kind you need.

00:04:06.490 --> 00:04:08.100
Are you creating
a small world that

00:04:08.100 --> 00:04:11.170
fits on a table or will it
require the whole building

00:04:11.170 --> 00:04:12.440
to fit?

00:04:12.440 --> 00:04:15.480
You will need to decide
on rotation, small scale,

00:04:15.480 --> 00:04:20.339
large scale, a combination for
the tracking, and how to make

00:04:20.339 --> 00:04:22.640
it feel natural.

00:04:22.640 --> 00:04:26.560
Users always have expectations,
even when bouncing around

00:04:26.560 --> 00:04:29.020
their virtual space colony.

00:04:29.020 --> 00:04:32.410
Visit our Google+ community
and join us in our journey.

00:04:32.410 --> 00:04:35.780
We are excited to see what you
will build with Project Tango.

00:04:35.780 --> 00:04:38.530
[MUSIC PLAYING]

