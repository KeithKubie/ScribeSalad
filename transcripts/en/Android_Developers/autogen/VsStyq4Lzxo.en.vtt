WEBVTT
Kind: captions
Language: en

00:00:01.420 --> 00:00:03.460
[Music]

00:00:03.460 --> 00:00:03.470
[Music]
 

00:00:03.470 --> 00:00:05.510
[Music]
good afternoon everyone

00:00:05.510 --> 00:00:05.520
good afternoon everyone
 

00:00:05.520 --> 00:00:08.570
good afternoon everyone
I'm Maggie I'm Adam Powell and I'm gem

00:00:08.570 --> 00:00:08.580
I'm Maggie I'm Adam Powell and I'm gem
 

00:00:08.580 --> 00:00:10.520
I'm Maggie I'm Adam Powell and I'm gem
all right and we're here to talk about

00:00:10.520 --> 00:00:10.530
all right and we're here to talk about
 

00:00:10.530 --> 00:00:13.160
all right and we're here to talk about
UI patterns funny a lot of you are

00:00:13.160 --> 00:00:13.170
UI patterns funny a lot of you are
 

00:00:13.170 --> 00:00:16.220
UI patterns funny a lot of you are
interested in that suddenly so the talk

00:00:16.220 --> 00:00:16.230
interested in that suddenly so the talk
 

00:00:16.230 --> 00:00:17.960
interested in that suddenly so the talk
was kind of that there was a stealth

00:00:17.960 --> 00:00:17.970
was kind of that there was a stealth
 

00:00:17.970 --> 00:00:19.970
was kind of that there was a stealth
title for the talk so obviously it's

00:00:19.970 --> 00:00:19.980
title for the talk so obviously it's
 

00:00:19.980 --> 00:00:22.189
title for the talk so obviously it's
about jetpack compos on next generation

00:00:22.189 --> 00:00:22.199
about jetpack compos on next generation
 

00:00:22.199 --> 00:00:24.140
about jetpack compos on next generation
UI talkie that we're working on and it's

00:00:24.140 --> 00:00:24.150
UI talkie that we're working on and it's
 

00:00:24.150 --> 00:00:26.720
UI talkie that we're working on and it's
available in open source and so we want

00:00:26.720 --> 00:00:26.730
available in open source and so we want
 

00:00:26.730 --> 00:00:28.820
available in open source and so we want
to talk a little more about this today

00:00:28.820 --> 00:00:28.830
to talk a little more about this today
 

00:00:28.830 --> 00:00:30.679
to talk a little more about this today
but first we want to talk to you a bit

00:00:30.679 --> 00:00:30.689
but first we want to talk to you a bit
 

00:00:30.689 --> 00:00:32.209
but first we want to talk to you a bit
of this story and explain why we're

00:00:32.209 --> 00:00:32.219
of this story and explain why we're
 

00:00:32.219 --> 00:00:32.870
of this story and explain why we're
doing this

00:00:32.870 --> 00:00:32.880
doing this
 

00:00:32.880 --> 00:00:35.900
doing this
so how did you get here a lot of you

00:00:35.900 --> 00:00:35.910
so how did you get here a lot of you
 

00:00:35.910 --> 00:00:37.549
so how did you get here a lot of you
obviously are familiar with views and

00:00:37.549 --> 00:00:37.559
obviously are familiar with views and
 

00:00:37.559 --> 00:00:39.110
obviously are familiar with views and
activities and fragment and I'm sure

00:00:39.110 --> 00:00:39.120
activities and fragment and I'm sure
 

00:00:39.120 --> 00:00:41.240
activities and fragment and I'm sure
you'll love those api's they are close

00:00:41.240 --> 00:00:41.250
you'll love those api's they are close
 

00:00:41.250 --> 00:00:44.840
you'll love those api's they are close
to perfect so just to give you a little

00:00:44.840 --> 00:00:44.850
to perfect so just to give you a little
 

00:00:44.850 --> 00:00:46.490
to perfect so just to give you a little
bit of background so this is a diagram

00:00:46.490 --> 00:00:46.500
bit of background so this is a diagram
 

00:00:46.500 --> 00:00:49.220
bit of background so this is a diagram
that Chet did for a talk that we gave I

00:00:49.220 --> 00:00:49.230
that Chet did for a talk that we gave I
 

00:00:49.230 --> 00:00:51.590
that Chet did for a talk that we gave I
think last year shows you a timeline of

00:00:51.590 --> 00:00:51.600
think last year shows you a timeline of
 

00:00:51.600 --> 00:00:53.029
think last year shows you a timeline of
what we've been up to especially on the

00:00:53.029 --> 00:00:53.039
what we've been up to especially on the
 

00:00:53.039 --> 00:00:54.979
what we've been up to especially on the
Android toolkit team so after we shipped

00:00:54.979 --> 00:00:54.989
Android toolkit team so after we shipped
 

00:00:54.989 --> 00:00:57.200
Android toolkit team so after we shipped
Android 1.0 we didn't do anything for

00:00:57.200 --> 00:00:57.210
Android 1.0 we didn't do anything for
 

00:00:57.210 --> 00:00:58.090
Android 1.0 we didn't do anything for
many many years

00:00:58.090 --> 00:00:58.100
many many years
 

00:00:58.100 --> 00:01:00.680
many many years
and then we finally woke up and decided

00:01:00.680 --> 00:01:00.690
and then we finally woke up and decided
 

00:01:00.690 --> 00:01:02.599
and then we finally woke up and decided
to you know write new libraries to help

00:01:02.599 --> 00:01:02.609
to you know write new libraries to help
 

00:01:02.609 --> 00:01:04.009
to you know write new libraries to help
you so things like recyclerview

00:01:04.009 --> 00:01:04.019
you so things like recyclerview
 

00:01:04.019 --> 00:01:06.950
you so things like recyclerview
constraint layout art components and of

00:01:06.950 --> 00:01:06.960
constraint layout art components and of
 

00:01:06.960 --> 00:01:08.149
constraint layout art components and of
course we had the adoption of caffeine

00:01:08.149 --> 00:01:08.159
course we had the adoption of caffeine
 

00:01:08.159 --> 00:01:09.740
course we had the adoption of caffeine
so we have been working on new things

00:01:09.740 --> 00:01:09.750
so we have been working on new things
 

00:01:09.750 --> 00:01:12.130
so we have been working on new things
but one things we one thing we never

00:01:12.130 --> 00:01:12.140
but one things we one thing we never
 

00:01:12.140 --> 00:01:15.050
but one things we one thing we never
changed was the UI toolkit itself we did

00:01:15.050 --> 00:01:15.060
changed was the UI toolkit itself we did
 

00:01:15.060 --> 00:01:16.880
changed was the UI toolkit itself we did
a lot of work underneath to make it

00:01:16.880 --> 00:01:16.890
a lot of work underneath to make it
 

00:01:16.890 --> 00:01:19.100
a lot of work underneath to make it
better we had hardware acceleration we

00:01:19.100 --> 00:01:19.110
better we had hardware acceleration we
 

00:01:19.110 --> 00:01:21.920
better we had hardware acceleration we
fixed some bugs we added some bugs we

00:01:21.920 --> 00:01:21.930
fixed some bugs we added some bugs we
 

00:01:21.930 --> 00:01:23.270
fixed some bugs we added some bugs we
added a few features but we never

00:01:23.270 --> 00:01:23.280
added a few features but we never
 

00:01:23.280 --> 00:01:26.240
added a few features but we never
changed it fundamentally so one of the

00:01:26.240 --> 00:01:26.250
changed it fundamentally so one of the
 

00:01:26.250 --> 00:01:28.760
changed it fundamentally so one of the
things that happened you know over ten

00:01:28.760 --> 00:01:28.770
things that happened you know over ten
 

00:01:28.770 --> 00:01:30.890
things that happened you know over ten
years ago was this this is a device we

00:01:30.890 --> 00:01:30.900
years ago was this this is a device we
 

00:01:30.900 --> 00:01:33.140
years ago was this this is a device we
call the sooner and this was the first

00:01:33.140 --> 00:01:33.150
call the sooner and this was the first
 

00:01:33.150 --> 00:01:35.929
call the sooner and this was the first
device that I used to write Android code

00:01:35.929 --> 00:01:35.939
device that I used to write Android code
 

00:01:35.939 --> 00:01:38.330
device that I used to write Android code
when I joined Google so to give you an

00:01:38.330 --> 00:01:38.340
when I joined Google so to give you an
 

00:01:38.340 --> 00:01:40.130
when I joined Google so to give you an
idea this device had a single CPU

00:01:40.130 --> 00:01:40.140
idea this device had a single CPU
 

00:01:40.140 --> 00:01:42.350
idea this device had a single CPU
running that running at 80 megahertz

00:01:42.350 --> 00:01:42.360
running that running at 80 megahertz
 

00:01:42.360 --> 00:01:45.530
running that running at 80 megahertz
it didn't have a GPU we had 64 Meg's of

00:01:45.530 --> 00:01:45.540
it didn't have a GPU we had 64 Meg's of
 

00:01:45.540 --> 00:01:49.100
it didn't have a GPU we had 64 Meg's of
RAM and the screen was 320 by 240 this

00:01:49.100 --> 00:01:49.110
RAM and the screen was 320 by 240 this
 

00:01:49.110 --> 00:01:50.539
RAM and the screen was 320 by 240 this
was not the first device we shipped

00:01:50.539 --> 00:01:50.549
was not the first device we shipped
 

00:01:50.549 --> 00:01:51.950
was not the first device we shipped
which is the g1 which was slightly

00:01:51.950 --> 00:01:51.960
which is the g1 which was slightly
 

00:01:51.960 --> 00:01:53.840
which is the g1 which was slightly
better but there was no similar in

00:01:53.840 --> 00:01:53.850
better but there was no similar in
 

00:01:53.850 --> 00:01:55.760
better but there was no similar in
spirit which shipped with the GPU we

00:01:55.760 --> 00:01:55.770
spirit which shipped with the GPU we
 

00:01:55.770 --> 00:01:58.459
spirit which shipped with the GPU we
mostly didn't use it so I had talked it

00:01:58.459 --> 00:01:58.469
mostly didn't use it so I had talked it
 

00:01:58.469 --> 00:02:01.060
mostly didn't use it so I had talked it
was pretty much design for this device

00:02:01.060 --> 00:02:01.070
was pretty much design for this device
 

00:02:01.070 --> 00:02:04.310
was pretty much design for this device
fast forward a few years and now we have

00:02:04.310 --> 00:02:04.320
fast forward a few years and now we have
 

00:02:04.320 --> 00:02:06.709
fast forward a few years and now we have
this kind of devices so this is a pixel

00:02:06.709 --> 00:02:06.719
this kind of devices so this is a pixel
 

00:02:06.719 --> 00:02:09.559
this kind of devices so this is a pixel
- I believe and the screen resolutions

00:02:09.559 --> 00:02:09.569
- I believe and the screen resolutions
 

00:02:09.569 --> 00:02:13.320
- I believe and the screen resolutions
now are 21 60 60 by 1080 or

00:02:13.320 --> 00:02:13.330
now are 21 60 60 by 1080 or
 

00:02:13.330 --> 00:02:16.350
now are 21 60 60 by 1080 or
for 2960 by 1440 on the excel variants

00:02:16.350 --> 00:02:16.360
for 2960 by 1440 on the excel variants
 

00:02:16.360 --> 00:02:19.200
for 2960 by 1440 on the excel variants
and here you can see a screenshot of the

00:02:19.200 --> 00:02:19.210
and here you can see a screenshot of the
 

00:02:19.210 --> 00:02:23.100
and here you can see a screenshot of the
Sooner at the same scale and it fits

00:02:23.100 --> 00:02:23.110
Sooner at the same scale and it fits
 

00:02:23.110 --> 00:02:25.320
Sooner at the same scale and it fits
comfortably over just one icon on the

00:02:25.320 --> 00:02:25.330
comfortably over just one icon on the
 

00:02:25.330 --> 00:02:27.480
comfortably over just one icon on the
launcher so you know where you're still

00:02:27.480 --> 00:02:27.490
launcher so you know where you're still
 

00:02:27.490 --> 00:02:30.120
launcher so you know where you're still
using the same UI toolkit so maybe twice

00:02:30.120 --> 00:02:30.130
using the same UI toolkit so maybe twice
 

00:02:30.130 --> 00:02:32.280
using the same UI toolkit so maybe twice
time to rethink our approach to you is

00:02:32.280 --> 00:02:32.290
time to rethink our approach to you is
 

00:02:32.290 --> 00:02:36.270
time to rethink our approach to you is
to better serve those devices and on top

00:02:36.270 --> 00:02:36.280
to better serve those devices and on top
 

00:02:36.280 --> 00:02:37.920
to better serve those devices and on top
of that so we we build the architecture

00:02:37.920 --> 00:02:37.930
of that so we we build the architecture
 

00:02:37.930 --> 00:02:39.450
of that so we we build the architecture
components over the past couple years

00:02:39.450 --> 00:02:39.460
components over the past couple years
 

00:02:39.460 --> 00:02:41.760
components over the past couple years
and the approach we took was extremely

00:02:41.760 --> 00:02:41.770
and the approach we took was extremely
 

00:02:41.770 --> 00:02:44.190
and the approach we took was extremely
interesting we were more open open we

00:02:44.190 --> 00:02:44.200
interesting we were more open open we
 

00:02:44.200 --> 00:02:46.410
interesting we were more open open we
did a lot of alphas and betas in our C's

00:02:46.410 --> 00:02:46.420
did a lot of alphas and betas in our C's
 

00:02:46.420 --> 00:02:48.390
did a lot of alphas and betas in our C's
we talked with you the community a lot

00:02:48.390 --> 00:02:48.400
we talked with you the community a lot
 

00:02:48.400 --> 00:02:50.520
we talked with you the community a lot
to hear what you wanted from us

00:02:50.520 --> 00:02:50.530
to hear what you wanted from us
 

00:02:50.530 --> 00:02:52.320
to hear what you wanted from us
I mean you build the applications we

00:02:52.320 --> 00:02:52.330
I mean you build the applications we
 

00:02:52.330 --> 00:02:54.540
I mean you build the applications we
don't really anymore so we need your

00:02:54.540 --> 00:02:54.550
don't really anymore so we need your
 

00:02:54.550 --> 00:02:56.070
don't really anymore so we need your
input to know what it is you need what

00:02:56.070 --> 00:02:56.080
input to know what it is you need what
 

00:02:56.080 --> 00:02:57.540
input to know what it is you need what
is you want what are the times that

00:02:57.540 --> 00:02:57.550
is you want what are the times that
 

00:02:57.550 --> 00:03:01.920
is you want what are the times that
you're facing every day so yeah what are

00:03:01.920 --> 00:03:01.930
you're facing every day so yeah what are
 

00:03:01.930 --> 00:03:06.030
you're facing every day so yeah what are
you asking for and what would you like

00:03:06.030 --> 00:03:06.040
you asking for and what would you like
 

00:03:06.040 --> 00:03:07.770
you asking for and what would you like
to do what would you like us to do so

00:03:07.770 --> 00:03:07.780
to do what would you like us to do so
 

00:03:07.780 --> 00:03:09.600
to do what would you like us to do so
when we ask this question for the

00:03:09.600 --> 00:03:09.610
when we ask this question for the
 

00:03:09.610 --> 00:03:11.340
when we ask this question for the
battery for the UI talk it in particular

00:03:11.340 --> 00:03:11.350
battery for the UI talk it in particular
 

00:03:11.350 --> 00:03:13.530
battery for the UI talk it in particular
one of the answers we got was unbundle

00:03:13.530 --> 00:03:13.540
one of the answers we got was unbundle
 

00:03:13.540 --> 00:03:15.330
one of the answers we got was unbundle
the UI toolkit because until now every

00:03:15.330 --> 00:03:15.340
the UI toolkit because until now every
 

00:03:15.340 --> 00:03:17.699
the UI toolkit because until now every
time we wanted to ship a fix in the UI

00:03:17.699 --> 00:03:17.709
time we wanted to ship a fix in the UI
 

00:03:17.709 --> 00:03:19.290
time we wanted to ship a fix in the UI
toki Tori what time we wanted to ship a

00:03:19.290 --> 00:03:19.300
toki Tori what time we wanted to ship a
 

00:03:19.300 --> 00:03:21.150
toki Tori what time we wanted to ship a
new feature we could do this easily

00:03:21.150 --> 00:03:21.160
new feature we could do this easily
 

00:03:21.160 --> 00:03:23.100
new feature we could do this easily
ourselves but then you had to wait for

00:03:23.100 --> 00:03:23.110
ourselves but then you had to wait for
 

00:03:23.110 --> 00:03:25.350
ourselves but then you had to wait for
just a few years to be able to read

00:03:25.350 --> 00:03:25.360
just a few years to be able to read
 

00:03:25.360 --> 00:03:27.630
just a few years to be able to read
tourism in API level and I know I've had

00:03:27.630 --> 00:03:27.640
tourism in API level and I know I've had
 

00:03:27.640 --> 00:03:29.400
tourism in API level and I know I've had
many discussions personal with some of

00:03:29.400 --> 00:03:29.410
many discussions personal with some of
 

00:03:29.410 --> 00:03:30.750
many discussions personal with some of
you where I said hey I fixed your bug

00:03:30.750 --> 00:03:30.760
you where I said hey I fixed your bug
 

00:03:30.760 --> 00:03:32.940
you where I said hey I fixed your bug
you like yeah I don't care because you

00:03:32.940 --> 00:03:32.950
you like yeah I don't care because you
 

00:03:32.950 --> 00:03:34.380
you like yeah I don't care because you
know the fix is not going to reach my

00:03:34.380 --> 00:03:34.390
know the fix is not going to reach my
 

00:03:34.390 --> 00:03:36.630
know the fix is not going to reach my
users devices for a long long time so

00:03:36.630 --> 00:03:36.640
users devices for a long long time so
 

00:03:36.640 --> 00:03:38.880
users devices for a long long time so
not helpful I don't

00:03:38.880 --> 00:03:38.890
not helpful I don't
 

00:03:38.890 --> 00:03:40.410
not helpful I don't
so we're thinking about moving some of

00:03:40.410 --> 00:03:40.420
so we're thinking about moving some of
 

00:03:40.420 --> 00:03:42.479
so we're thinking about moving some of
our widgets to jetpack you know make

00:03:42.479 --> 00:03:42.489
our widgets to jetpack you know make
 

00:03:42.489 --> 00:03:43.979
our widgets to jetpack you know make
them be a support library let's take

00:03:43.979 --> 00:03:43.989
them be a support library let's take
 

00:03:43.989 --> 00:03:45.990
them be a support library let's take
textview move it entirely in jetpack and

00:03:45.990 --> 00:03:46.000
textview move it entirely in jetpack and
 

00:03:46.000 --> 00:03:47.100
textview move it entirely in jetpack and
then you won't be able to there are

00:03:47.100 --> 00:03:47.110
then you won't be able to there are
 

00:03:47.110 --> 00:03:49.199
then you won't be able to there are
fixes but as we were thinking about

00:03:49.199 --> 00:03:49.209
fixes but as we were thinking about
 

00:03:49.209 --> 00:03:51.630
fixes but as we were thinking about
doing this doing this we've thought well

00:03:51.630 --> 00:03:51.640
doing this doing this we've thought well
 

00:03:51.640 --> 00:03:53.310
doing this doing this we've thought well
if we're gonna do this how about we

00:03:53.310 --> 00:03:53.320
if we're gonna do this how about we
 

00:03:53.320 --> 00:03:55.680
if we're gonna do this how about we
start improving those widgets a little

00:03:55.680 --> 00:03:55.690
start improving those widgets a little
 

00:03:55.690 --> 00:03:57.420
start improving those widgets a little
bit what could we do to improve the

00:03:57.420 --> 00:03:57.430
bit what could we do to improve the
 

00:03:57.430 --> 00:03:59.699
bit what could we do to improve the
api's and you know I'm sure you all love

00:03:59.699 --> 00:03:59.709
api's and you know I'm sure you all love
 

00:03:59.709 --> 00:04:02.160
api's and you know I'm sure you all love
the API of our UI toolkit but as chet

00:04:02.160 --> 00:04:02.170
the API of our UI toolkit but as chet
 

00:04:02.170 --> 00:04:05.550
the API of our UI toolkit but as chet
put it API design is building future

00:04:05.550 --> 00:04:05.560
put it API design is building future
 

00:04:05.560 --> 00:04:08.250
put it API design is building future
regrets and we have a lot of regrets a

00:04:08.250 --> 00:04:08.260
regrets and we have a lot of regrets a
 

00:04:08.260 --> 00:04:11.370
regrets and we have a lot of regrets a
lot even more than you do here are some

00:04:11.370 --> 00:04:11.380
lot even more than you do here are some
 

00:04:11.380 --> 00:04:15.630
lot even more than you do here are some
examples so for instance view Java

00:04:15.630 --> 00:04:15.640
examples so for instance view Java
 

00:04:15.640 --> 00:04:18.479
examples so for instance view Java
do you know how big it is I'm sure you

00:04:18.479 --> 00:04:18.489
do you know how big it is I'm sure you
 

00:04:18.489 --> 00:04:20.460
do you know how big it is I'm sure you
have big files in your source code I'm

00:04:20.460 --> 00:04:20.470
have big files in your source code I'm
 

00:04:20.470 --> 00:04:21.840
have big files in your source code I'm
pretty sure you don't have files as big

00:04:21.840 --> 00:04:21.850
pretty sure you don't have files as big
 

00:04:21.850 --> 00:04:24.510
pretty sure you don't have files as big
as this one so we have almost 30,000

00:04:24.510 --> 00:04:24.520
as this one so we have almost 30,000
 

00:04:24.520 --> 00:04:25.900
as this one so we have almost 30,000
lines of code

00:04:25.900 --> 00:04:25.910
lines of code
 

00:04:25.910 --> 00:04:32.800
lines of code
in Judah Java yeah that is Google scale

00:04:32.800 --> 00:04:32.810
in Judah Java yeah that is Google scale
 

00:04:32.810 --> 00:04:34.050
in Judah Java yeah that is Google scale
right here

00:04:34.050 --> 00:04:34.060
right here
 

00:04:34.060 --> 00:04:36.610
right here
to be fair it's a lot of comments but

00:04:36.610 --> 00:04:36.620
to be fair it's a lot of comments but
 

00:04:36.620 --> 00:04:39.610
to be fair it's a lot of comments but
still this is no not very good design so

00:04:39.610 --> 00:04:39.620
still this is no not very good design so
 

00:04:39.620 --> 00:04:42.250
still this is no not very good design so
that's one thing and then there's random

00:04:42.250 --> 00:04:42.260
that's one thing and then there's random
 

00:04:42.260 --> 00:04:45.190
that's one thing and then there's random
stuff for instance spinner why do we

00:04:45.190 --> 00:04:45.200
stuff for instance spinner why do we
 

00:04:45.200 --> 00:04:46.390
stuff for instance spinner why do we
have this class called spinner it's a

00:04:46.390 --> 00:04:46.400
have this class called spinner it's a
 

00:04:46.400 --> 00:04:48.640
have this class called spinner it's a
combo box or drop-down we don't like

00:04:48.640 --> 00:04:48.650
combo box or drop-down we don't like
 

00:04:48.650 --> 00:04:50.560
combo box or drop-down we don't like
spinner nobody does and a bunch of us

00:04:50.560 --> 00:04:50.570
spinner nobody does and a bunch of us
 

00:04:50.570 --> 00:04:52.180
spinner nobody does and a bunch of us
why is it called spinner I'll show you I

00:04:52.180 --> 00:04:52.190
why is it called spinner I'll show you I
 

00:04:52.190 --> 00:04:55.810
why is it called spinner I'll show you I
so when we shipped our first SDK this is

00:04:55.810 --> 00:04:55.820
so when we shipped our first SDK this is
 

00:04:55.820 --> 00:04:58.090
so when we shipped our first SDK this is
what it look like so I ran this on on my

00:04:58.090 --> 00:04:58.100
what it look like so I ran this on on my
 

00:04:58.100 --> 00:05:02.650
what it look like so I ran this on on my
Mac and it does spin so we're not

00:05:02.650 --> 00:05:02.660
Mac and it does spin so we're not
 

00:05:02.660 --> 00:05:06.070
Mac and it does spin so we're not
entirely crazy or stupid we just changed

00:05:06.070 --> 00:05:06.080
entirely crazy or stupid we just changed
 

00:05:06.080 --> 00:05:08.560
entirely crazy or stupid we just changed
our mind

00:05:08.560 --> 00:05:08.570
 

00:05:08.570 --> 00:05:10.870
another example that I really like is a

00:05:10.870 --> 00:05:10.880
another example that I really like is a
 

00:05:10.880 --> 00:05:13.030
another example that I really like is a
button button if you look at the source

00:05:13.030 --> 00:05:13.040
button button if you look at the source
 

00:05:13.040 --> 00:05:14.740
button button if you look at the source
code of button the Java it's extremely

00:05:14.740 --> 00:05:14.750
code of button the Java it's extremely
 

00:05:14.750 --> 00:05:16.600
code of button the Java it's extremely
interesting there's very few lines of

00:05:16.600 --> 00:05:16.610
interesting there's very few lines of
 

00:05:16.610 --> 00:05:18.700
interesting there's very few lines of
code in there because it extends

00:05:18.700 --> 00:05:18.710
code in there because it extends
 

00:05:18.710 --> 00:05:21.850
code in there because it extends
textview why it's a good question

00:05:21.850 --> 00:05:21.860
textview why it's a good question
 

00:05:21.860 --> 00:05:23.980
textview why it's a good question
because when you need to display text

00:05:23.980 --> 00:05:23.990
because when you need to display text
 

00:05:23.990 --> 00:05:26.200
because when you need to display text
the problems that text you can do a lot

00:05:26.200 --> 00:05:26.210
the problems that text you can do a lot
 

00:05:26.210 --> 00:05:28.150
the problems that text you can do a lot
of things for instance you can make a

00:05:28.150 --> 00:05:28.160
of things for instance you can make a
 

00:05:28.160 --> 00:05:32.170
of things for instance you can make a
button selectable if you want and I'm

00:05:32.170 --> 00:05:32.180
button selectable if you want and I'm
 

00:05:32.180 --> 00:05:33.250
button selectable if you want and I'm
pretty sure you can also make it

00:05:33.250 --> 00:05:33.260
pretty sure you can also make it
 

00:05:33.260 --> 00:05:39.280
pretty sure you can also make it
editable alright and of course there are

00:05:39.280 --> 00:05:39.290
editable alright and of course there are
 

00:05:39.290 --> 00:05:41.080
editable alright and of course there are
tons of other issues but Adam is gonna

00:05:41.080 --> 00:05:41.090
tons of other issues but Adam is gonna
 

00:05:41.090 --> 00:05:43.540
tons of other issues but Adam is gonna
talk more about those yeah Ramon told me

00:05:43.540 --> 00:05:43.550
talk more about those yeah Ramon told me
 

00:05:43.550 --> 00:05:44.530
talk more about those yeah Ramon told me
that I had to take the slide that

00:05:44.530 --> 00:05:44.540
that I had to take the slide that
 

00:05:44.540 --> 00:05:46.270
that I had to take the slide that
started with fragments here I'm not

00:05:46.270 --> 00:05:46.280
started with fragments here I'm not
 

00:05:46.280 --> 00:05:49.780
started with fragments here I'm not
entirely sure why so as you stop to

00:05:49.780 --> 00:05:49.790
entirely sure why so as you stop to
 

00:05:49.790 --> 00:05:51.400
entirely sure why so as you stop to
factor some of your you eyes on Android

00:05:51.400 --> 00:05:51.410
factor some of your you eyes on Android
 

00:05:51.410 --> 00:05:53.050
factor some of your you eyes on Android
and you start to have to make some

00:05:53.050 --> 00:05:53.060
and you start to have to make some
 

00:05:53.060 --> 00:05:54.280
and you start to have to make some
decisions about how you're going to

00:05:54.280 --> 00:05:54.290
decisions about how you're going to
 

00:05:54.290 --> 00:05:55.960
decisions about how you're going to
write your UI components and this is a

00:05:55.960 --> 00:05:55.970
write your UI components and this is a
 

00:05:55.970 --> 00:05:57.550
write your UI components and this is a
question that we've had a lot over the

00:05:57.550 --> 00:05:57.560
question that we've had a lot over the
 

00:05:57.560 --> 00:05:59.650
question that we've had a lot over the
years do I write a fragment or do I

00:05:59.650 --> 00:05:59.660
years do I write a fragment or do I
 

00:05:59.660 --> 00:06:01.180
years do I write a fragment or do I
write a custom view or a custom view

00:06:01.180 --> 00:06:01.190
write a custom view or a custom view
 

00:06:01.190 --> 00:06:03.220
write a custom view or a custom view
group and the problem with this is that

00:06:03.220 --> 00:06:03.230
group and the problem with this is that
 

00:06:03.230 --> 00:06:04.600
group and the problem with this is that
the answer can be really different

00:06:04.600 --> 00:06:04.610
the answer can be really different
 

00:06:04.610 --> 00:06:06.040
the answer can be really different
depending on the kind of component that

00:06:06.040 --> 00:06:06.050
depending on the kind of component that
 

00:06:06.050 --> 00:06:07.600
depending on the kind of component that
you're writing and each approach has

00:06:07.600 --> 00:06:07.610
you're writing and each approach has
 

00:06:07.610 --> 00:06:09.760
you're writing and each approach has
some of its own challenges for example

00:06:09.760 --> 00:06:09.770
some of its own challenges for example
 

00:06:09.770 --> 00:06:12.100
some of its own challenges for example
if you see this line of code somewhere

00:06:12.100 --> 00:06:12.110
if you see this line of code somewhere
 

00:06:12.110 --> 00:06:13.570
if you see this line of code somewhere
because someone decided that they were

00:06:13.570 --> 00:06:13.580
because someone decided that they were
 

00:06:13.580 --> 00:06:15.100
because someone decided that they were
going to write a custom view to solve a

00:06:15.100 --> 00:06:15.110
going to write a custom view to solve a
 

00:06:15.110 --> 00:06:17.350
going to write a custom view to solve a
particular problem what exactly is your

00:06:17.350 --> 00:06:17.360
particular problem what exactly is your
 

00:06:17.360 --> 00:06:21.120
particular problem what exactly is your
first reaction awesome

00:06:21.120 --> 00:06:21.130
first reaction awesome
 

00:06:21.130 --> 00:06:25.420
first reaction awesome
Noro mom no ok so custom views are kind

00:06:25.420 --> 00:06:25.430
Noro mom no ok so custom views are kind
 

00:06:25.430 --> 00:06:26.830
Noro mom no ok so custom views are kind
of daunting to write because you really

00:06:26.830 --> 00:06:26.840
of daunting to write because you really
 

00:06:26.840 --> 00:06:27.880
of daunting to write because you really
have to get so many things right

00:06:27.880 --> 00:06:27.890
have to get so many things right
 

00:06:27.890 --> 00:06:29.620
have to get so many things right
especially if you want to expose a first

00:06:29.620 --> 00:06:29.630
especially if you want to expose a first
 

00:06:29.630 --> 00:06:31.540
especially if you want to expose a first
class at API surface you've got

00:06:31.540 --> 00:06:31.550
class at API surface you've got
 

00:06:31.550 --> 00:06:32.920
class at API surface you've got
properties that need their getters and

00:06:32.920 --> 00:06:32.930
properties that need their getters and
 

00:06:32.930 --> 00:06:35.200
properties that need their getters and
setters pretty standard stuff you've got

00:06:35.200 --> 00:06:35.210
setters pretty standard stuff you've got
 

00:06:35.210 --> 00:06:37.300
setters pretty standard stuff you've got
XML attributes which means that you need

00:06:37.300 --> 00:06:37.310
XML attributes which means that you need
 

00:06:37.310 --> 00:06:38.330
XML attributes which means that you need
to start adding

00:06:38.330 --> 00:06:38.340
to start adding
 

00:06:38.340 --> 00:06:40.850
to start adding
more stuff in your adders XML defined

00:06:40.850 --> 00:06:40.860
more stuff in your adders XML defined
 

00:06:40.860 --> 00:06:41.680
more stuff in your adders XML defined
style obols

00:06:41.680 --> 00:06:41.690
style obols
 

00:06:41.690 --> 00:06:43.880
style obols
speaking of styles you need to define

00:06:43.880 --> 00:06:43.890
speaking of styles you need to define
 

00:06:43.890 --> 00:06:46.370
speaking of styles you need to define
actual default Styles and probably edit

00:06:46.370 --> 00:06:46.380
actual default Styles and probably edit
 

00:06:46.380 --> 00:06:48.470
actual default Styles and probably edit
some default theme attributes to make

00:06:48.470 --> 00:06:48.480
some default theme attributes to make
 

00:06:48.480 --> 00:06:50.720
some default theme attributes to make
sure that all those Styles get wired up

00:06:50.720 --> 00:06:50.730
sure that all those Styles get wired up
 

00:06:50.730 --> 00:06:52.490
sure that all those Styles get wired up
properly and that's before you even get

00:06:52.490 --> 00:06:52.500
properly and that's before you even get
 

00:06:52.500 --> 00:06:54.110
properly and that's before you even get
to the sheer volume of code that you

00:06:54.110 --> 00:06:54.120
to the sheer volume of code that you
 

00:06:54.120 --> 00:06:55.670
to the sheer volume of code that you
need for dealing with things like layout

00:06:55.670 --> 00:06:55.680
need for dealing with things like layout
 

00:06:55.680 --> 00:07:00.110
need for dealing with things like layout
or touch events so meanwhile fragments

00:07:00.110 --> 00:07:00.120
or touch events so meanwhile fragments
 

00:07:00.120 --> 00:07:02.300
or touch events so meanwhile fragments
give you a whole lot of flexibility but

00:07:02.300 --> 00:07:02.310
give you a whole lot of flexibility but
 

00:07:02.310 --> 00:07:04.310
give you a whole lot of flexibility but
plus all the lifecycle hooks for hanging

00:07:04.310 --> 00:07:04.320
plus all the lifecycle hooks for hanging
 

00:07:04.320 --> 00:07:06.200
plus all the lifecycle hooks for hanging
your application logic from especially

00:07:06.200 --> 00:07:06.210
your application logic from especially
 

00:07:06.210 --> 00:07:07.670
your application logic from especially
now that you've got arch components to

00:07:07.670 --> 00:07:07.680
now that you've got arch components to
 

00:07:07.680 --> 00:07:09.110
now that you've got arch components to
give you some of this in a more

00:07:09.110 --> 00:07:09.120
give you some of this in a more
 

00:07:09.120 --> 00:07:11.330
give you some of this in a more
pluggable way but this kind of makes

00:07:11.330 --> 00:07:11.340
pluggable way but this kind of makes
 

00:07:11.340 --> 00:07:13.070
pluggable way but this kind of makes
them better suited for coarser grained

00:07:13.070 --> 00:07:13.080
them better suited for coarser grained
 

00:07:13.080 --> 00:07:15.740
them better suited for coarser grained
situations reusable hold article

00:07:15.740 --> 00:07:15.750
situations reusable hold article
 

00:07:15.750 --> 00:07:18.080
situations reusable hold article
displays with interactive sub components

00:07:18.080 --> 00:07:18.090
displays with interactive sub components
 

00:07:18.090 --> 00:07:19.820
displays with interactive sub components
and not really so much things like

00:07:19.820 --> 00:07:19.830
and not really so much things like
 

00:07:19.830 --> 00:07:22.430
and not really so much things like
single buttons but the problem with this

00:07:22.430 --> 00:07:22.440
single buttons but the problem with this
 

00:07:22.440 --> 00:07:24.230
single buttons but the problem with this
is that your apps aren't static they

00:07:24.230 --> 00:07:24.240
is that your apps aren't static they
 

00:07:24.240 --> 00:07:26.540
is that your apps aren't static they
really change and grow over time so

00:07:26.540 --> 00:07:26.550
really change and grow over time so
 

00:07:26.550 --> 00:07:27.800
really change and grow over time so
there's a potentially really high

00:07:27.800 --> 00:07:27.810
there's a potentially really high
 

00:07:27.810 --> 00:07:29.990
there's a potentially really high
engineering cost to having to cross over

00:07:29.990 --> 00:07:30.000
engineering cost to having to cross over
 

00:07:30.000 --> 00:07:31.730
engineering cost to having to cross over
from one of these abstractions to

00:07:31.730 --> 00:07:31.740
from one of these abstractions to
 

00:07:31.740 --> 00:07:37.040
from one of these abstractions to
another as your use cases change so you

00:07:37.040 --> 00:07:37.050
another as your use cases change so you
 

00:07:37.050 --> 00:07:38.630
another as your use cases change so you
insulate yourself from that change you

00:07:38.630 --> 00:07:38.640
insulate yourself from that change you
 

00:07:38.640 --> 00:07:40.310
insulate yourself from that change you
build other architectures to keep your

00:07:40.310 --> 00:07:40.320
build other architectures to keep your
 

00:07:40.320 --> 00:07:42.170
build other architectures to keep your
views your fragments and activities is

00:07:42.170 --> 00:07:42.180
views your fragments and activities is
 

00:07:42.180 --> 00:07:43.520
views your fragments and activities is
removed from these things as possible

00:07:43.520 --> 00:07:43.530
removed from these things as possible
 

00:07:43.530 --> 00:07:45.320
removed from these things as possible
and maybe actually make it a little bit

00:07:45.320 --> 00:07:45.330
and maybe actually make it a little bit
 

00:07:45.330 --> 00:07:47.540
and maybe actually make it a little bit
easier to test along the way no matter

00:07:47.540 --> 00:07:47.550
easier to test along the way no matter
 

00:07:47.550 --> 00:07:49.340
easier to test along the way no matter
which of these architectures or some of

00:07:49.340 --> 00:07:49.350
which of these architectures or some of
 

00:07:49.350 --> 00:07:50.540
which of these architectures or some of
them that aren't listed that you might

00:07:50.540 --> 00:07:50.550
them that aren't listed that you might
 

00:07:50.550 --> 00:07:53.360
them that aren't listed that you might
choose you they all take on the same

00:07:53.360 --> 00:07:53.370
choose you they all take on the same
 

00:07:53.370 --> 00:07:55.070
choose you they all take on the same
basic shape you bind some of this stuff

00:07:55.070 --> 00:07:55.080
basic shape you bind some of this stuff
 

00:07:55.080 --> 00:07:57.380
basic shape you bind some of this stuff
in your activity your views publish

00:07:57.380 --> 00:07:57.390
in your activity your views publish
 

00:07:57.390 --> 00:07:59.990
in your activity your views publish
events and receive State and everything

00:07:59.990 --> 00:08:00.000
events and receive State and everything
 

00:08:00.000 --> 00:08:02.140
events and receive State and everything
in between is kind of a judgement call

00:08:02.140 --> 00:08:02.150
in between is kind of a judgement call
 

00:08:02.150 --> 00:08:05.300
in between is kind of a judgement call
so these architectures really exists to

00:08:05.300 --> 00:08:05.310
so these architectures really exists to
 

00:08:05.310 --> 00:08:07.010
so these architectures really exists to
help define and reason about your apps

00:08:07.010 --> 00:08:07.020
help define and reason about your apps
 

00:08:07.020 --> 00:08:09.380
help define and reason about your apps
data flow and answer the three main

00:08:09.380 --> 00:08:09.390
data flow and answer the three main
 

00:08:09.390 --> 00:08:13.600
data flow and answer the three main
questions so what is the source of truth

00:08:13.600 --> 00:08:13.610
questions so what is the source of truth
 

00:08:13.610 --> 00:08:17.120
questions so what is the source of truth
who owns it and more specifically who

00:08:17.120 --> 00:08:17.130
who owns it and more specifically who
 

00:08:17.130 --> 00:08:20.360
who owns it and more specifically who
can change it so once you answer some of

00:08:20.360 --> 00:08:20.370
can change it so once you answer some of
 

00:08:20.370 --> 00:08:22.910
can change it so once you answer some of
these questions then you realize that

00:08:22.910 --> 00:08:22.920
these questions then you realize that
 

00:08:22.920 --> 00:08:26.210
these questions then you realize that
the Android UI toolkit doesn't really

00:08:26.210 --> 00:08:26.220
the Android UI toolkit doesn't really
 

00:08:26.220 --> 00:08:29.720
the Android UI toolkit doesn't really
work this way views kind of owned their

00:08:29.720 --> 00:08:29.730
work this way views kind of owned their
 

00:08:29.730 --> 00:08:31.400
work this way views kind of owned their
own State and make their own changes

00:08:31.400 --> 00:08:31.410
own State and make their own changes
 

00:08:31.410 --> 00:08:33.160
own State and make their own changes
whether you want them to or not

00:08:33.160 --> 00:08:33.170
whether you want them to or not
 

00:08:33.170 --> 00:08:35.630
whether you want them to or not
most of these view state changes at

00:08:35.630 --> 00:08:35.640
most of these view state changes at
 

00:08:35.640 --> 00:08:37.010
most of these view state changes at
least have some optional listeners that

00:08:37.010 --> 00:08:37.020
least have some optional listeners that
 

00:08:37.020 --> 00:08:38.720
least have some optional listeners that
you can attach so you can respond to

00:08:38.720 --> 00:08:38.730
you can attach so you can respond to
 

00:08:38.730 --> 00:08:40.550
you can attach so you can respond to
some of those changes and do something

00:08:40.550 --> 00:08:40.560
some of those changes and do something
 

00:08:40.560 --> 00:08:44.900
some of those changes and do something
about it but really the spinner is

00:08:44.900 --> 00:08:44.910
about it but really the spinner is
 

00:08:44.910 --> 00:08:46.760
about it but really the spinner is
another great example here as odd as it

00:08:46.760 --> 00:08:46.770
another great example here as odd as it
 

00:08:46.770 --> 00:08:49.250
another great example here as odd as it
is and

00:08:49.250 --> 00:08:49.260
is and
 

00:08:49.260 --> 00:08:50.930
is and
it's got this on selected item change

00:08:50.930 --> 00:08:50.940
it's got this on selected item change
 

00:08:50.940 --> 00:08:52.520
it's got this on selected item change
listener that tells you when the user

00:08:52.520 --> 00:08:52.530
listener that tells you when the user
 

00:08:52.530 --> 00:08:53.990
listener that tells you when the user
changed the value you've picked a new

00:08:53.990 --> 00:08:54.000
changed the value you've picked a new
 

00:08:54.000 --> 00:08:57.440
changed the value you've picked a new
value from the drop-down and it gives

00:08:57.440 --> 00:08:57.450
value from the drop-down and it gives
 

00:08:57.450 --> 00:08:58.940
value from the drop-down and it gives
you this call back after the items

00:08:58.940 --> 00:08:58.950
you this call back after the items
 

00:08:58.950 --> 00:09:00.860
you this call back after the items
already changed and for a lot of you

00:09:00.860 --> 00:09:00.870
already changed and for a lot of you
 

00:09:00.870 --> 00:09:03.590
already changed and for a lot of you
eyes this is kind of useless because

00:09:03.590 --> 00:09:03.600
eyes this is kind of useless because
 

00:09:03.600 --> 00:09:05.420
eyes this is kind of useless because
then you have to change it back after

00:09:05.420 --> 00:09:05.430
then you have to change it back after
 

00:09:05.430 --> 00:09:07.130
then you have to change it back after
the fact so if you've ever created one

00:09:07.130 --> 00:09:07.140
the fact so if you've ever created one
 

00:09:07.140 --> 00:09:09.080
the fact so if you've ever created one
of those UI is where you have a custom

00:09:09.080 --> 00:09:09.090
of those UI is where you have a custom
 

00:09:09.090 --> 00:09:11.420
of those UI is where you have a custom
dot dot dot you pop up a dialog you let

00:09:11.420 --> 00:09:11.430
dot dot dot you pop up a dialog you let
 

00:09:11.430 --> 00:09:13.430
dot dot dot you pop up a dialog you let
the user make some custom selections and

00:09:13.430 --> 00:09:13.440
the user make some custom selections and
 

00:09:13.440 --> 00:09:16.220
the user make some custom selections and
then you have to change the adapter set

00:09:16.220 --> 00:09:16.230
then you have to change the adapter set
 

00:09:16.230 --> 00:09:18.620
then you have to change the adapter set
the value to something new it's kind of

00:09:18.620 --> 00:09:18.630
the value to something new it's kind of
 

00:09:18.630 --> 00:09:20.180
the value to something new it's kind of
a song-and-dance that's not a lot of fun

00:09:20.180 --> 00:09:20.190
a song-and-dance that's not a lot of fun
 

00:09:20.190 --> 00:09:23.060
a song-and-dance that's not a lot of fun
and you also have to deal with this idea

00:09:23.060 --> 00:09:23.070
and you also have to deal with this idea
 

00:09:23.070 --> 00:09:24.800
and you also have to deal with this idea
of these reentrant listener calls once

00:09:24.800 --> 00:09:24.810
of these reentrant listener calls once
 

00:09:24.810 --> 00:09:27.260
of these reentrant listener calls once
you do set something back so your

00:09:27.260 --> 00:09:27.270
you do set something back so your
 

00:09:27.270 --> 00:09:28.700
you do set something back so your
listener has to handle both the cases

00:09:28.700 --> 00:09:28.710
listener has to handle both the cases
 

00:09:28.710 --> 00:09:30.500
listener has to handle both the cases
where you meant to change it on purpose

00:09:30.500 --> 00:09:30.510
where you meant to change it on purpose
 

00:09:30.510 --> 00:09:33.590
where you meant to change it on purpose
or when the user did it and that just is

00:09:33.590 --> 00:09:33.600
or when the user did it and that just is
 

00:09:33.600 --> 00:09:35.240
or when the user did it and that just is
more and more code that you can get

00:09:35.240 --> 00:09:35.250
more and more code that you can get
 

00:09:35.250 --> 00:09:38.210
more and more code that you can get
wrong but you know then there's some

00:09:38.210 --> 00:09:38.220
wrong but you know then there's some
 

00:09:38.220 --> 00:09:40.010
wrong but you know then there's some
advantages to this kind of approach I

00:09:40.010 --> 00:09:40.020
advantages to this kind of approach I
 

00:09:40.020 --> 00:09:41.600
advantages to this kind of approach I
mean like I would love to just be able

00:09:41.600 --> 00:09:41.610
mean like I would love to just be able
 

00:09:41.610 --> 00:09:43.700
mean like I would love to just be able
to change my salary and then tell Romo

00:09:43.700 --> 00:09:43.710
to change my salary and then tell Romo
 

00:09:43.710 --> 00:09:46.550
to change my salary and then tell Romo
about it after the fact we'll talk about

00:09:46.550 --> 00:09:46.560
about it after the fact we'll talk about
 

00:09:46.560 --> 00:09:49.130
about it after the fact we'll talk about
it that's work no this is me telling you

00:09:49.130 --> 00:09:49.140
it that's work no this is me telling you
 

00:09:49.140 --> 00:09:53.990
it that's work no this is me telling you
after the fact about it okay so speaking

00:09:53.990 --> 00:09:54.000
after the fact about it okay so speaking
 

00:09:54.000 --> 00:09:58.010
after the fact about it okay so speaking
of events when you have a single source

00:09:58.010 --> 00:09:58.020
of events when you have a single source
 

00:09:58.020 --> 00:09:59.780
of events when you have a single source
of truth you don't have all of these

00:09:59.780 --> 00:09:59.790
of truth you don't have all of these
 

00:09:59.790 --> 00:10:02.270
of truth you don't have all of these
problems every piece of state has one

00:10:02.270 --> 00:10:02.280
problems every piece of state has one
 

00:10:02.280 --> 00:10:05.780
problems every piece of state has one
owner and only the owner can make

00:10:05.780 --> 00:10:05.790
owner and only the owner can make
 

00:10:05.790 --> 00:10:09.320
owner and only the owner can make
changes to that particular State so that

00:10:09.320 --> 00:10:09.330
changes to that particular State so that
 

00:10:09.330 --> 00:10:11.540
changes to that particular State so that
means that the owner is listening to

00:10:11.540 --> 00:10:11.550
means that the owner is listening to
 

00:10:11.550 --> 00:10:12.920
means that the owner is listening to
events that are happening somewhere else

00:10:12.920 --> 00:10:12.930
events that are happening somewhere else
 

00:10:12.930 --> 00:10:15.590
events that are happening somewhere else
in the UI and it makes changes in

00:10:15.590 --> 00:10:15.600
in the UI and it makes changes in
 

00:10:15.600 --> 00:10:19.910
in the UI and it makes changes in
response how many of you have seen some

00:10:19.910 --> 00:10:19.920
response how many of you have seen some
 

00:10:19.920 --> 00:10:22.910
response how many of you have seen some
code like this hopefully not too

00:10:22.910 --> 00:10:22.920
code like this hopefully not too
 

00:10:22.920 --> 00:10:24.710
code like this hopefully not too
recently oh no we've got a few hands

00:10:24.710 --> 00:10:24.720
recently oh no we've got a few hands
 

00:10:24.720 --> 00:10:28.070
recently oh no we've got a few hands
okay so Android UI API is were really

00:10:28.070 --> 00:10:28.080
okay so Android UI API is were really
 

00:10:28.080 --> 00:10:30.500
okay so Android UI API is were really
kind of designed for this world handling

00:10:30.500 --> 00:10:30.510
kind of designed for this world handling
 

00:10:30.510 --> 00:10:32.600
kind of designed for this world handling
events by implementing several different

00:10:32.600 --> 00:10:32.610
events by implementing several different
 

00:10:32.610 --> 00:10:34.490
events by implementing several different
listener interfaces in one class where

00:10:34.490 --> 00:10:34.500
listener interfaces in one class where
 

00:10:34.500 --> 00:10:36.680
listener interfaces in one class where
that state lives by implementing these

00:10:36.680 --> 00:10:36.690
that state lives by implementing these
 

00:10:36.690 --> 00:10:38.660
that state lives by implementing these
interfaces where the state is you can

00:10:38.660 --> 00:10:38.670
interfaces where the state is you can
 

00:10:38.670 --> 00:10:39.800
interfaces where the state is you can
make sure that you don't have to lace

00:10:39.800 --> 00:10:39.810
make sure that you don't have to lace
 

00:10:39.810 --> 00:10:41.300
make sure that you don't have to lace
that state through too many different

00:10:41.300 --> 00:10:41.310
that state through too many different
 

00:10:41.310 --> 00:10:44.540
that state through too many different
places and you know this is kind of

00:10:44.540 --> 00:10:44.550
places and you know this is kind of
 

00:10:44.550 --> 00:10:46.760
places and you know this is kind of
gross but lambdas weren't even part of

00:10:46.760 --> 00:10:46.770
gross but lambdas weren't even part of
 

00:10:46.770 --> 00:10:48.530
gross but lambdas weren't even part of
the language when this was common

00:10:48.530 --> 00:10:48.540
the language when this was common
 

00:10:48.540 --> 00:10:51.080
the language when this was common
practice so we can take a few liberties

00:10:51.080 --> 00:10:51.090
practice so we can take a few liberties
 

00:10:51.090 --> 00:10:54.170
practice so we can take a few liberties
here but if you let somebody who's

00:10:54.170 --> 00:10:54.180
here but if you let somebody who's
 

00:10:54.180 --> 00:10:55.640
here but if you let somebody who's
comfortable with Kotlin loose they might

00:10:55.640 --> 00:10:55.650
comfortable with Kotlin loose they might
 

00:10:55.650 --> 00:10:57.890
comfortable with Kotlin loose they might
go nuts and play some golf they might

00:10:57.890 --> 00:10:57.900
go nuts and play some golf they might
 

00:10:57.900 --> 00:10:59.900
go nuts and play some golf they might
write something more like this and you

00:10:59.900 --> 00:10:59.910
write something more like this and you
 

00:10:59.910 --> 00:11:01.070
write something more like this and you
know the advantages of something like

00:11:01.070 --> 00:11:01.080
know the advantages of something like
 

00:11:01.080 --> 00:11:02.569
know the advantages of something like
this is that it's event-driven

00:11:02.569 --> 00:11:02.579
this is that it's event-driven
 

00:11:02.579 --> 00:11:04.519
this is that it's event-driven
and it's built on composing behaviors

00:11:04.519 --> 00:11:04.529
and it's built on composing behaviors
 

00:11:04.529 --> 00:11:06.889
and it's built on composing behaviors
rather than based on inheritance you can

00:11:06.889 --> 00:11:06.899
rather than based on inheritance you can
 

00:11:06.899 --> 00:11:08.119
rather than based on inheritance you can
kind of get away with implementing a

00:11:08.119 --> 00:11:08.129
kind of get away with implementing a
 

00:11:08.129 --> 00:11:09.650
kind of get away with implementing a
bunch of interfaces on a central class

00:11:09.650 --> 00:11:09.660
bunch of interfaces on a central class
 

00:11:09.660 --> 00:11:11.720
bunch of interfaces on a central class
like the slide we saw before when you

00:11:11.720 --> 00:11:11.730
like the slide we saw before when you
 

00:11:11.730 --> 00:11:13.519
like the slide we saw before when you
have a small team if everybody fits in

00:11:13.519 --> 00:11:13.529
have a small team if everybody fits in
 

00:11:13.529 --> 00:11:15.739
have a small team if everybody fits in
the same room and you can just ask each

00:11:15.739 --> 00:11:15.749
the same room and you can just ask each
 

00:11:15.749 --> 00:11:17.150
the same room and you can just ask each
other questions you know that you're not

00:11:17.150 --> 00:11:17.160
other questions you know that you're not
 

00:11:17.160 --> 00:11:18.739
other questions you know that you're not
going to make a mess in front of one

00:11:18.739 --> 00:11:18.749
going to make a mess in front of one
 

00:11:18.749 --> 00:11:21.559
going to make a mess in front of one
another but as app and team sizes grew

00:11:21.559 --> 00:11:21.569
another but as app and team sizes grew
 

00:11:21.569 --> 00:11:23.689
another but as app and team sizes grew
it became much less sustainable to do

00:11:23.689 --> 00:11:23.699
it became much less sustainable to do
 

00:11:23.699 --> 00:11:25.340
it became much less sustainable to do
that so by leaning into Kotlin in

00:11:25.340 --> 00:11:25.350
that so by leaning into Kotlin in
 

00:11:25.350 --> 00:11:27.049
that so by leaning into Kotlin in
particular we can write much more

00:11:27.049 --> 00:11:27.059
particular we can write much more
 

00:11:27.059 --> 00:11:32.059
particular we can write much more
powerful and more composable api's but

00:11:32.059 --> 00:11:32.069
powerful and more composable api's but
 

00:11:32.069 --> 00:11:34.039
powerful and more composable api's but
really whether you've decided to write a

00:11:34.039 --> 00:11:34.049
really whether you've decided to write a
 

00:11:34.049 --> 00:11:36.650
really whether you've decided to write a
fragment or a view the changes that you

00:11:36.650 --> 00:11:36.660
fragment or a view the changes that you
 

00:11:36.660 --> 00:11:38.329
fragment or a view the changes that you
have to make really kind of look similar

00:11:38.329 --> 00:11:38.339
have to make really kind of look similar
 

00:11:38.339 --> 00:11:40.309
have to make really kind of look similar
if you're trying to write something

00:11:40.309 --> 00:11:40.319
if you're trying to write something
 

00:11:40.319 --> 00:11:42.049
if you're trying to write something
that's really reusable something that

00:11:42.049 --> 00:11:42.059
that's really reusable something that
 

00:11:42.059 --> 00:11:44.299
that's really reusable something that
exposes a first-class API surface for

00:11:44.299 --> 00:11:44.309
exposes a first-class API surface for
 

00:11:44.309 --> 00:11:47.479
exposes a first-class API surface for
other people to use you'll have

00:11:47.479 --> 00:11:47.489
other people to use you'll have
 

00:11:47.489 --> 00:11:48.919
other people to use you'll have
something that looks either Mike

00:11:48.919 --> 00:11:48.929
something that looks either Mike
 

00:11:48.929 --> 00:11:50.660
something that looks either Mike
fragment or my view and it might be a

00:11:50.660 --> 00:11:50.670
fragment or my view and it might be a
 

00:11:50.670 --> 00:11:53.989
fragment or my view and it might be a
Kotlin or a Java file you have an XML

00:11:53.989 --> 00:11:53.999
Kotlin or a Java file you have an XML
 

00:11:53.999 --> 00:11:55.669
Kotlin or a Java file you have an XML
file that holds your layout for that

00:11:55.669 --> 00:11:55.679
file that holds your layout for that
 

00:11:55.679 --> 00:11:57.109
file that holds your layout for that
particular file potentially if it's

00:11:57.109 --> 00:11:57.119
particular file potentially if it's
 

00:11:57.119 --> 00:11:58.549
particular file potentially if it's
something complicated if it's something

00:11:58.549 --> 00:11:58.559
something complicated if it's something
 

00:11:58.559 --> 00:11:59.720
something complicated if it's something
more than just a simple button that

00:11:59.720 --> 00:11:59.730
more than just a simple button that
 

00:11:59.730 --> 00:12:02.210
more than just a simple button that
clicks you've got some stuff in your

00:12:02.210 --> 00:12:02.220
clicks you've got some stuff in your
 

00:12:02.220 --> 00:12:04.669
clicks you've got some stuff in your
adders XML file that defines the style

00:12:04.669 --> 00:12:04.679
adders XML file that defines the style
 

00:12:04.679 --> 00:12:05.989
adders XML file that defines the style
Bowl and all the different attributes

00:12:05.989 --> 00:12:05.999
Bowl and all the different attributes
 

00:12:05.999 --> 00:12:07.699
Bowl and all the different attributes
that it can take and you know yeah also

00:12:07.699 --> 00:12:07.709
that it can take and you know yeah also
 

00:12:07.709 --> 00:12:09.229
that it can take and you know yeah also
have to make sure that you don't step on

00:12:09.229 --> 00:12:09.239
have to make sure that you don't step on
 

00:12:09.239 --> 00:12:11.119
have to make sure that you don't step on
that shared namespace that resources

00:12:11.119 --> 00:12:11.129
that shared namespace that resources
 

00:12:11.129 --> 00:12:13.340
that shared namespace that resources
work in can't declare two attributes for

00:12:13.340 --> 00:12:13.350
work in can't declare two attributes for
 

00:12:13.350 --> 00:12:15.109
work in can't declare two attributes for
two completely different styles if they

00:12:15.109 --> 00:12:15.119
two completely different styles if they
 

00:12:15.119 --> 00:12:16.489
two completely different styles if they
have a different type that would be

00:12:16.489 --> 00:12:16.499
have a different type that would be
 

00:12:16.499 --> 00:12:20.269
have a different type that would be
silly and then finally you have to deal

00:12:20.269 --> 00:12:20.279
silly and then finally you have to deal
 

00:12:20.279 --> 00:12:24.350
silly and then finally you have to deal
with everything around styling so you're

00:12:24.350 --> 00:12:24.360
with everything around styling so you're
 

00:12:24.360 --> 00:12:25.999
with everything around styling so you're
spreading all of this code that really

00:12:25.999 --> 00:12:26.009
spreading all of this code that really
 

00:12:26.009 --> 00:12:28.129
spreading all of this code that really
has to do with the same component across

00:12:28.129 --> 00:12:28.139
has to do with the same component across
 

00:12:28.139 --> 00:12:30.379
has to do with the same component across
many different files and by breaking

00:12:30.379 --> 00:12:30.389
many different files and by breaking
 

00:12:30.389 --> 00:12:32.840
many different files and by breaking
that spatial locality it makes it harder

00:12:32.840 --> 00:12:32.850
that spatial locality it makes it harder
 

00:12:32.850 --> 00:12:35.090
that spatial locality it makes it harder
to regain context or flow at a glance

00:12:35.090 --> 00:12:35.100
to regain context or flow at a glance
 

00:12:35.100 --> 00:12:37.519
to regain context or flow at a glance
after you've been interrupted so for

00:12:37.519 --> 00:12:37.529
after you've been interrupted so for
 

00:12:37.529 --> 00:12:39.679
after you've been interrupted so for
example if you have pets or small

00:12:39.679 --> 00:12:39.689
example if you have pets or small
 

00:12:39.689 --> 00:12:42.109
example if you have pets or small
children or an open plan office you

00:12:42.109 --> 00:12:42.119
children or an open plan office you
 

00:12:42.119 --> 00:12:45.949
children or an open plan office you
might get interrupted pretty often so

00:12:45.949 --> 00:12:45.959
might get interrupted pretty often so
 

00:12:45.959 --> 00:12:47.539
might get interrupted pretty often so
really we're trying to address all of

00:12:47.539 --> 00:12:47.549
really we're trying to address all of
 

00:12:47.549 --> 00:12:50.539
really we're trying to address all of
these things at once so first off we

00:12:50.539 --> 00:12:50.549
these things at once so first off we
 

00:12:50.549 --> 00:12:51.979
these things at once so first off we
want to make sure that we unbundle from

00:12:51.979 --> 00:12:51.989
want to make sure that we unbundle from
 

00:12:51.989 --> 00:12:54.049
want to make sure that we unbundle from
the platform releases so that you can

00:12:54.049 --> 00:12:54.059
the platform releases so that you can
 

00:12:54.059 --> 00:12:56.179
the platform releases so that you can
take advantage of what we're working on

00:12:56.179 --> 00:12:56.189
take advantage of what we're working on
 

00:12:56.189 --> 00:12:59.150
take advantage of what we're working on
immediately we want to make sure that

00:12:59.150 --> 00:12:59.160
immediately we want to make sure that
 

00:12:59.160 --> 00:13:00.679
immediately we want to make sure that
you have fewer technology stack

00:13:00.679 --> 00:13:00.689
you have fewer technology stack
 

00:13:00.689 --> 00:13:02.329
you have fewer technology stack
flowcharts to traverse when you're

00:13:02.329 --> 00:13:02.339
flowcharts to traverse when you're
 

00:13:02.339 --> 00:13:04.789
flowcharts to traverse when you're
deciding how to build your component we

00:13:04.789 --> 00:13:04.799
deciding how to build your component we
 

00:13:04.799 --> 00:13:06.019
deciding how to build your component we
want to make sure that we're not telling

00:13:06.019 --> 00:13:06.029
want to make sure that we're not telling
 

00:13:06.029 --> 00:13:07.579
want to make sure that we're not telling
you well if you're doing something

00:13:07.579 --> 00:13:07.589
you well if you're doing something
 

00:13:07.589 --> 00:13:08.929
you well if you're doing something
that's bigger like this start with a

00:13:08.929 --> 00:13:08.939
that's bigger like this start with a
 

00:13:08.939 --> 00:13:10.519
that's bigger like this start with a
fragment otherwise a button and if

00:13:10.519 --> 00:13:10.529
fragment otherwise a button and if
 

00:13:10.529 --> 00:13:13.249
fragment otherwise a button and if
you're not sure yeah flip a coin see how

00:13:13.249 --> 00:13:13.259
you're not sure yeah flip a coin see how
 

00:13:13.259 --> 00:13:15.869
you're not sure yeah flip a coin see how
it goes maybe refactor later

00:13:15.869 --> 00:13:15.879
it goes maybe refactor later
 

00:13:15.879 --> 00:13:18.340
it goes maybe refactor later
we want to help you clarify state

00:13:18.340 --> 00:13:18.350
we want to help you clarify state
 

00:13:18.350 --> 00:13:20.410
we want to help you clarify state
ownership and event handling this is

00:13:20.410 --> 00:13:20.420
ownership and event handling this is
 

00:13:20.420 --> 00:13:21.910
ownership and event handling this is
really big because this is one of those

00:13:21.910 --> 00:13:21.920
really big because this is one of those
 

00:13:21.920 --> 00:13:24.100
really big because this is one of those
things that ends up being almost an

00:13:24.100 --> 00:13:24.110
things that ends up being almost an
 

00:13:24.110 --> 00:13:26.139
things that ends up being almost an
afterthought in some applications if

00:13:26.139 --> 00:13:26.149
afterthought in some applications if
 

00:13:26.149 --> 00:13:27.729
afterthought in some applications if
you're not thinking about it upfront but

00:13:27.729 --> 00:13:27.739
you're not thinking about it upfront but
 

00:13:27.739 --> 00:13:29.679
you're not thinking about it upfront but
it's really the the flow of data through

00:13:29.679 --> 00:13:29.689
it's really the the flow of data through
 

00:13:29.689 --> 00:13:31.359
it's really the the flow of data through
your application that can be the most

00:13:31.359 --> 00:13:31.369
your application that can be the most
 

00:13:31.369 --> 00:13:34.689
your application that can be the most
complex interactions and finally we want

00:13:34.689 --> 00:13:34.699
complex interactions and finally we want
 

00:13:34.699 --> 00:13:38.829
complex interactions and finally we want
to help you just write less code so the

00:13:38.829 --> 00:13:38.839
to help you just write less code so the
 

00:13:38.839 --> 00:13:40.509
to help you just write less code so the
simplest program that you can write in

00:13:40.509 --> 00:13:40.519
simplest program that you can write in
 

00:13:40.519 --> 00:13:44.949
simplest program that you can write in
Kotlin is really really simple so

00:13:44.949 --> 00:13:44.959
Kotlin is really really simple so
 

00:13:44.959 --> 00:13:47.139
Kotlin is really really simple so
whenever you're writing a GUI app though

00:13:47.139 --> 00:13:47.149
whenever you're writing a GUI app though
 

00:13:47.149 --> 00:13:48.879
whenever you're writing a GUI app though
they're not this kind of snapshot in

00:13:48.879 --> 00:13:48.889
they're not this kind of snapshot in
 

00:13:48.889 --> 00:13:50.229
they're not this kind of snapshot in
time it's not a fire-and-forget

00:13:50.229 --> 00:13:50.239
time it's not a fire-and-forget
 

00:13:50.239 --> 00:13:53.109
time it's not a fire-and-forget
construct where you run it once and then

00:13:53.109 --> 00:13:53.119
construct where you run it once and then
 

00:13:53.119 --> 00:13:54.850
construct where you run it once and then
the program terminates you're done it's

00:13:54.850 --> 00:13:54.860
the program terminates you're done it's
 

00:13:54.860 --> 00:13:57.549
the program terminates you're done it's
done its job so we kind of need to

00:13:57.549 --> 00:13:57.559
done its job so we kind of need to
 

00:13:57.559 --> 00:13:59.289
done its job so we kind of need to
handle this idea of an event loop and

00:13:59.289 --> 00:13:59.299
handle this idea of an event loop and
 

00:13:59.299 --> 00:14:01.869
handle this idea of an event loop and
things that change over time and Kotlin

00:14:01.869 --> 00:14:01.879
things that change over time and Kotlin
 

00:14:01.879 --> 00:14:03.970
things that change over time and Kotlin
really gives us some huge advantages for

00:14:03.970 --> 00:14:03.980
really gives us some huge advantages for
 

00:14:03.980 --> 00:14:06.069
really gives us some huge advantages for
working with asynchronous code now but

00:14:06.069 --> 00:14:06.079
working with asynchronous code now but
 

00:14:06.079 --> 00:14:08.259
working with asynchronous code now but
can we go even further can we make it as

00:14:08.259 --> 00:14:08.269
can we go even further can we make it as
 

00:14:08.269 --> 00:14:10.889
can we go even further can we make it as
simple as this to write an Android app

00:14:10.889 --> 00:14:10.899
simple as this to write an Android app
 

00:14:10.899 --> 00:14:15.129
simple as this to write an Android app
well maybe we can what if instead of

00:14:15.129 --> 00:14:15.139
well maybe we can what if instead of
 

00:14:15.139 --> 00:14:17.590
well maybe we can what if instead of
calling text or in print line we called

00:14:17.590 --> 00:14:17.600
calling text or in print line we called
 

00:14:17.600 --> 00:14:21.669
calling text or in print line we called
text what if calling text would emit a

00:14:21.669 --> 00:14:21.679
text what if calling text would emit a
 

00:14:21.679 --> 00:14:25.359
text what if calling text would emit a
text widget to the UI hierarchy this is

00:14:25.359 --> 00:14:25.369
text widget to the UI hierarchy this is
 

00:14:25.369 --> 00:14:27.970
text widget to the UI hierarchy this is
the idea behind jetpack compose it's a

00:14:27.970 --> 00:14:27.980
the idea behind jetpack compose it's a
 

00:14:27.980 --> 00:14:31.119
the idea behind jetpack compose it's a
declarative UI toolkit built for Android

00:14:31.119 --> 00:14:31.129
declarative UI toolkit built for Android
 

00:14:31.129 --> 00:14:33.669
declarative UI toolkit built for Android
it's inspired by frameworks like react

00:14:33.669 --> 00:14:33.679
it's inspired by frameworks like react
 

00:14:33.679 --> 00:14:37.119
it's inspired by frameworks like react
with Oh view j/s and flutter but it's

00:14:37.119 --> 00:14:37.129
with Oh view j/s and flutter but it's
 

00:14:37.129 --> 00:14:39.189
with Oh view j/s and flutter but it's
written completely in Kotlin and is

00:14:39.189 --> 00:14:39.199
written completely in Kotlin and is
 

00:14:39.199 --> 00:14:40.929
written completely in Kotlin and is
fully compatible with the existing

00:14:40.929 --> 00:14:40.939
fully compatible with the existing
 

00:14:40.939 --> 00:14:43.269
fully compatible with the existing
Android view system it aims to simplify

00:14:43.269 --> 00:14:43.279
Android view system it aims to simplify
 

00:14:43.279 --> 00:14:45.970
Android view system it aims to simplify
the way that you write code by making

00:14:45.970 --> 00:14:45.980
the way that you write code by making
 

00:14:45.980 --> 00:14:47.799
the way that you write code by making
your Android UI hierarchies more

00:14:47.799 --> 00:14:47.809
your Android UI hierarchies more
 

00:14:47.809 --> 00:14:51.549
your Android UI hierarchies more
declarative with compose your UI is

00:14:51.549 --> 00:14:51.559
declarative with compose your UI is
 

00:14:51.559 --> 00:14:53.139
declarative with compose your UI is
defined as a function and this function

00:14:53.139 --> 00:14:53.149
defined as a function and this function
 

00:14:53.149 --> 00:14:55.660
defined as a function and this function
transforms data into view hierarchy in

00:14:55.660 --> 00:14:55.670
transforms data into view hierarchy in
 

00:14:55.670 --> 00:14:58.840
transforms data into view hierarchy in
this case the input is a simple piece of

00:14:58.840 --> 00:14:58.850
this case the input is a simple piece of
 

00:14:58.850 --> 00:15:01.179
this case the input is a simple piece of
data a person's name and the output is a

00:15:01.179 --> 00:15:01.189
data a person's name and the output is a
 

00:15:01.189 --> 00:15:05.199
data a person's name and the output is a
UI hierarchy is a text widget when you

00:15:05.199 --> 00:15:05.209
UI hierarchy is a text widget when you
 

00:15:05.209 --> 00:15:07.799
UI hierarchy is a text widget when you
need to update the name we can just

00:15:07.799 --> 00:15:07.809
need to update the name we can just
 

00:15:07.809 --> 00:15:10.629
need to update the name we can just
reinvention with the new data and the UI

00:15:10.629 --> 00:15:10.639
reinvention with the new data and the UI
 

00:15:10.639 --> 00:15:12.879
reinvention with the new data and the UI
hierarchy will contain a text widget

00:15:12.879 --> 00:15:12.889
hierarchy will contain a text widget
 

00:15:12.889 --> 00:15:15.100
hierarchy will contain a text widget
with the new text this radically

00:15:15.100 --> 00:15:15.110
with the new text this radically
 

00:15:15.110 --> 00:15:16.569
with the new text this radically
simplifies your application because you

00:15:16.569 --> 00:15:16.579
simplifies your application because you
 

00:15:16.579 --> 00:15:18.129
simplifies your application because you
no longer have to have separate code

00:15:18.129 --> 00:15:18.139
no longer have to have separate code
 

00:15:18.139 --> 00:15:19.989
no longer have to have separate code
paths for inflating the initial views

00:15:19.989 --> 00:15:19.999
paths for inflating the initial views
 

00:15:19.999 --> 00:15:23.079
paths for inflating the initial views
and then updating the views later if we

00:15:23.079 --> 00:15:23.089
and then updating the views later if we
 

00:15:23.089 --> 00:15:24.429
and then updating the views later if we
invoke the function with an appropriate

00:15:24.429 --> 00:15:24.439
invoke the function with an appropriate
 

00:15:24.439 --> 00:15:27.489
invoke the function with an appropriate
name then we'll get text hello world on

00:15:27.489 --> 00:15:27.499
name then we'll get text hello world on
 

00:15:27.499 --> 00:15:29.770
name then we'll get text hello world on
the screen when the data changes

00:15:29.770 --> 00:15:29.780
the screen when the data changes
 

00:15:29.780 --> 00:15:31.480
the screen when the data changes
we can invoke the function again with

00:15:31.480 --> 00:15:31.490
we can invoke the function again with
 

00:15:31.490 --> 00:15:34.120
we can invoke the function again with
the new data and the new data appears

00:15:34.120 --> 00:15:34.130
the new data and the new data appears
 

00:15:34.130 --> 00:15:36.730
the new data and the new data appears
with a new greeting on the screen each

00:15:36.730 --> 00:15:36.740
with a new greeting on the screen each
 

00:15:36.740 --> 00:15:38.050
with a new greeting on the screen each
time we invoke the function with

00:15:38.050 --> 00:15:38.060
time we invoke the function with
 

00:15:38.060 --> 00:15:40.000
time we invoke the function with
different data the text on the screen is

00:15:40.000 --> 00:15:40.010
different data the text on the screen is
 

00:15:40.010 --> 00:15:43.090
different data the text on the screen is
updated but what exactly is composed and

00:15:43.090 --> 00:15:43.100
updated but what exactly is composed and
 

00:15:43.100 --> 00:15:46.080
updated but what exactly is composed and
how does this work among other things

00:15:46.080 --> 00:15:46.090
how does this work among other things
 

00:15:46.090 --> 00:15:48.850
how does this work among other things
compose is a completely new set of

00:15:48.850 --> 00:15:48.860
compose is a completely new set of
 

00:15:48.860 --> 00:15:51.070
compose is a completely new set of
widgets and toolkit api's built on top

00:15:51.070 --> 00:15:51.080
widgets and toolkit api's built on top
 

00:15:51.080 --> 00:15:53.170
widgets and toolkit api's built on top
of composable functions they're not

00:15:53.170 --> 00:15:53.180
of composable functions they're not
 

00:15:53.180 --> 00:15:55.240
of composable functions they're not
views they're not fragments there's

00:15:55.240 --> 00:15:55.250
views they're not fragments there's
 

00:15:55.250 --> 00:15:57.970
views they're not fragments there's
something smaller more modular easier to

00:15:57.970 --> 00:15:57.980
something smaller more modular easier to
 

00:15:57.980 --> 00:16:00.520
something smaller more modular easier to
work with and easier to test in

00:16:00.520 --> 00:16:00.530
work with and easier to test in
 

00:16:00.530 --> 00:16:04.180
work with and easier to test in
isolation compose is also a cutland

00:16:04.180 --> 00:16:04.190
isolation compose is also a cutland
 

00:16:04.190 --> 00:16:06.100
isolation compose is also a cutland
compiler plug-in which makes it possible

00:16:06.100 --> 00:16:06.110
compiler plug-in which makes it possible
 

00:16:06.110 --> 00:16:09.100
compiler plug-in which makes it possible
to define your own declarative functions

00:16:09.100 --> 00:16:09.110
to define your own declarative functions
 

00:16:09.110 --> 00:16:12.070
to define your own declarative functions
using our declarative API the composed

00:16:12.070 --> 00:16:12.080
using our declarative API the composed
 

00:16:12.080 --> 00:16:13.750
using our declarative API the composed
compiler is what powers the new widget

00:16:13.750 --> 00:16:13.760
compiler is what powers the new widget
 

00:16:13.760 --> 00:16:15.730
compiler is what powers the new widget
set and makes it easy for you to define

00:16:15.730 --> 00:16:15.740
set and makes it easy for you to define
 

00:16:15.740 --> 00:16:19.180
set and makes it easy for you to define
your own composable widgets compose

00:16:19.180 --> 00:16:19.190
your own composable widgets compose
 

00:16:19.190 --> 00:16:21.040
your own composable widgets compose
widgets are also fully compatible with

00:16:21.040 --> 00:16:21.050
widgets are also fully compatible with
 

00:16:21.050 --> 00:16:23.080
widgets are also fully compatible with
the existing view system whether you're

00:16:23.080 --> 00:16:23.090
the existing view system whether you're
 

00:16:23.090 --> 00:16:24.970
the existing view system whether you're
working with Kotlin or the java

00:16:24.970 --> 00:16:24.980
working with Kotlin or the java
 

00:16:24.980 --> 00:16:26.890
working with Kotlin or the java
programming language we provide ways for

00:16:26.890 --> 00:16:26.900
programming language we provide ways for
 

00:16:26.900 --> 00:16:29.200
programming language we provide ways for
you to use the new widget set in your

00:16:29.200 --> 00:16:29.210
you to use the new widget set in your
 

00:16:29.210 --> 00:16:31.630
you to use the new widget set in your
existing view hierarchy and you can use

00:16:31.630 --> 00:16:31.640
existing view hierarchy and you can use
 

00:16:31.640 --> 00:16:33.850
existing view hierarchy and you can use
existing views in the compose hierarchy

00:16:33.850 --> 00:16:33.860
existing views in the compose hierarchy
 

00:16:33.860 --> 00:16:36.400
existing views in the compose hierarchy
you can mix and match you can adopt it

00:16:36.400 --> 00:16:36.410
you can mix and match you can adopt it
 

00:16:36.410 --> 00:16:38.470
you can mix and match you can adopt it
incrementally and you can adopt it at

00:16:38.470 --> 00:16:38.480
incrementally and you can adopt it at
 

00:16:38.480 --> 00:16:41.370
incrementally and you can adopt it at
your own pace just like Kotlin itself

00:16:41.370 --> 00:16:41.380
your own pace just like Kotlin itself
 

00:16:41.380 --> 00:16:44.620
your own pace just like Kotlin itself
it's also very early stage we're still

00:16:44.620 --> 00:16:44.630
it's also very early stage we're still
 

00:16:44.630 --> 00:16:46.180
it's also very early stage we're still
in active development and we're moving

00:16:46.180 --> 00:16:46.190
in active development and we're moving
 

00:16:46.190 --> 00:16:48.280
in active development and we're moving
to a LSP so that you guys can get an

00:16:48.280 --> 00:16:48.290
to a LSP so that you guys can get an
 

00:16:48.290 --> 00:16:49.780
to a LSP so that you guys can get an
early preview and so that you can be a

00:16:49.780 --> 00:16:49.790
early preview and so that you can be a
 

00:16:49.790 --> 00:16:51.640
early preview and so that you can be a
part of its development too so we can

00:16:51.640 --> 00:16:51.650
part of its development too so we can
 

00:16:51.650 --> 00:16:53.530
part of its development too so we can
collect feedback from you but it's not

00:16:53.530 --> 00:16:53.540
collect feedback from you but it's not
 

00:16:53.540 --> 00:16:57.730
collect feedback from you but it's not
ready for production use yet if you did

00:16:57.730 --> 00:16:57.740
ready for production use yet if you did
 

00:16:57.740 --> 00:17:00.910
ready for production use yet if you did
want to use compose in an application it

00:17:00.910 --> 00:17:00.920
want to use compose in an application it
 

00:17:00.920 --> 00:17:02.770
want to use compose in an application it
might look something like this you can

00:17:02.770 --> 00:17:02.780
might look something like this you can
 

00:17:02.780 --> 00:17:05.020
might look something like this you can
call it composable up functions directly

00:17:05.020 --> 00:17:05.030
call it composable up functions directly
 

00:17:05.030 --> 00:17:10.059
call it composable up functions directly
from the content of your activity all

00:17:10.059 --> 00:17:10.069
from the content of your activity all
 

00:17:10.069 --> 00:17:11.980
from the content of your activity all
compostable functions are annotated with

00:17:11.980 --> 00:17:11.990
compostable functions are annotated with
 

00:17:11.990 --> 00:17:14.439
compostable functions are annotated with
an ACK composable annotation this tells

00:17:14.439 --> 00:17:14.449
an ACK composable annotation this tells
 

00:17:14.449 --> 00:17:16.179
an ACK composable annotation this tells
the composed compiler that your function

00:17:16.179 --> 00:17:16.189
the composed compiler that your function
 

00:17:16.189 --> 00:17:18.610
the composed compiler that your function
should be treated as a widget and it

00:17:18.610 --> 00:17:18.620
should be treated as a widget and it
 

00:17:18.620 --> 00:17:20.380
should be treated as a widget and it
allows us to jump in and perform the

00:17:20.380 --> 00:17:20.390
allows us to jump in and perform the
 

00:17:20.390 --> 00:17:21.870
allows us to jump in and perform the
necessary rewrites at the right time

00:17:21.870 --> 00:17:21.880
necessary rewrites at the right time
 

00:17:21.880 --> 00:17:23.860
necessary rewrites at the right time
we've been working with the JetBrains

00:17:23.860 --> 00:17:23.870
we've been working with the JetBrains
 

00:17:23.870 --> 00:17:25.329
we've been working with the JetBrains
team to make all of this possible and

00:17:25.329 --> 00:17:25.339
team to make all of this possible and
 

00:17:25.339 --> 00:17:27.340
team to make all of this possible and
it's still very experimental but

00:17:27.340 --> 00:17:27.350
it's still very experimental but
 

00:17:27.350 --> 00:17:29.170
it's still very experimental but
basically we intercept calls to

00:17:29.170 --> 00:17:29.180
basically we intercept calls to
 

00:17:29.180 --> 00:17:30.850
basically we intercept calls to
composable functions and that's what

00:17:30.850 --> 00:17:30.860
composable functions and that's what
 

00:17:30.860 --> 00:17:33.420
composable functions and that's what
allows us to provide the declarative API

00:17:33.420 --> 00:17:33.430
allows us to provide the declarative API
 

00:17:33.430 --> 00:17:36.010
allows us to provide the declarative API
ultimately these functions are fully

00:17:36.010 --> 00:17:36.020
ultimately these functions are fully
 

00:17:36.020 --> 00:17:38.080
ultimately these functions are fully
featured Kotlin functions which allows

00:17:38.080 --> 00:17:38.090
featured Kotlin functions which allows
 

00:17:38.090 --> 00:17:40.340
featured Kotlin functions which allows
us to do some really interesting things

00:17:40.340 --> 00:17:40.350
us to do some really interesting things
 

00:17:40.350 --> 00:17:42.740
us to do some really interesting things
for example if we wanted to greet the

00:17:42.740 --> 00:17:42.750
for example if we wanted to greet the
 

00:17:42.750 --> 00:17:44.749
for example if we wanted to greet the
user 10 times we could use a simple for

00:17:44.749 --> 00:17:44.759
user 10 times we could use a simple for
 

00:17:44.759 --> 00:17:48.590
user 10 times we could use a simple for
loop to do exactly that if we want to

00:17:48.590 --> 00:17:48.600
loop to do exactly that if we want to
 

00:17:48.600 --> 00:17:50.299
loop to do exactly that if we want to
iterate over a list of names we can

00:17:50.299 --> 00:17:50.309
iterate over a list of names we can
 

00:17:50.309 --> 00:17:51.529
iterate over a list of names we can
greet a whole bunch of people all at

00:17:51.529 --> 00:17:51.539
greet a whole bunch of people all at
 

00:17:51.539 --> 00:17:55.399
greet a whole bunch of people all at
once we can also have logic to shoku

00:17:55.399 --> 00:17:55.409
once we can also have logic to shoku
 

00:17:55.409 --> 00:17:56.720
once we can also have logic to shoku
something completely different when the

00:17:56.720 --> 00:17:56.730
something completely different when the
 

00:17:56.730 --> 00:17:58.909
something completely different when the
list is empty but the most important

00:17:58.909 --> 00:17:58.919
list is empty but the most important
 

00:17:58.919 --> 00:18:00.499
list is empty but the most important
thing about composable widgets is that

00:18:00.499 --> 00:18:00.509
thing about composable widgets is that
 

00:18:00.509 --> 00:18:03.830
thing about composable widgets is that
they're composable compose makes it

00:18:03.830 --> 00:18:03.840
they're composable compose makes it
 

00:18:03.840 --> 00:18:05.539
they're composable compose makes it
trivial to define your own composable

00:18:05.539 --> 00:18:05.549
trivial to define your own composable
 

00:18:05.549 --> 00:18:07.159
trivial to define your own composable
functions and reuse them throughout your

00:18:07.159 --> 00:18:07.169
functions and reuse them throughout your
 

00:18:07.169 --> 00:18:10.580
functions and reuse them throughout your
application the UI hierarchy is built by

00:18:10.580 --> 00:18:10.590
application the UI hierarchy is built by
 

00:18:10.590 --> 00:18:12.200
application the UI hierarchy is built by
having composable functions call other

00:18:12.200 --> 00:18:12.210
having composable functions call other
 

00:18:12.210 --> 00:18:17.210
having composable functions call other
composable functions so our story widget

00:18:17.210 --> 00:18:17.220
composable functions so our story widget
 

00:18:17.220 --> 00:18:19.129
composable functions so our story widget
here uses several stock elements that

00:18:19.129 --> 00:18:19.139
here uses several stock elements that
 

00:18:19.139 --> 00:18:20.629
here uses several stock elements that
we're gonna provide out-of-the-box to

00:18:20.629 --> 00:18:20.639
we're gonna provide out-of-the-box to
 

00:18:20.639 --> 00:18:22.220
we're gonna provide out-of-the-box to
build up a pretty straightforward layout

00:18:22.220 --> 00:18:22.230
build up a pretty straightforward layout
 

00:18:22.230 --> 00:18:24.200
build up a pretty straightforward layout
but you might see another issue here if

00:18:24.200 --> 00:18:24.210
but you might see another issue here if
 

00:18:24.210 --> 00:18:25.940
but you might see another issue here if
you're not suspending disbelief quite

00:18:25.940 --> 00:18:25.950
you're not suspending disbelief quite
 

00:18:25.950 --> 00:18:27.409
you're not suspending disbelief quite
enough looking at our slide we're here

00:18:27.409 --> 00:18:27.419
enough looking at our slide we're here
 

00:18:27.419 --> 00:18:30.230
enough looking at our slide we're here
so as we know if that list right there

00:18:30.230 --> 00:18:30.240
so as we know if that list right there
 

00:18:30.240 --> 00:18:32.389
so as we know if that list right there
is really really big then this would

00:18:32.389 --> 00:18:32.399
is really really big then this would
 

00:18:32.399 --> 00:18:34.039
is really really big then this would
create a whole lot of these Story

00:18:34.039 --> 00:18:34.049
create a whole lot of these Story
 

00:18:34.049 --> 00:18:35.950
create a whole lot of these Story
widgets that we're not going to see as

00:18:35.950 --> 00:18:35.960
widgets that we're not going to see as
 

00:18:35.960 --> 00:18:38.119
widgets that we're not going to see as
Android developers we've been trained

00:18:38.119 --> 00:18:38.129
Android developers we've been trained
 

00:18:38.129 --> 00:18:39.919
Android developers we've been trained
over the years to avoid this in fact I

00:18:39.919 --> 00:18:39.929
over the years to avoid this in fact I
 

00:18:39.929 --> 00:18:41.659
over the years to avoid this in fact I
think about 10 years ago romana I gave

00:18:41.659 --> 00:18:41.669
think about 10 years ago romana I gave
 

00:18:41.669 --> 00:18:43.249
think about 10 years ago romana I gave
our first talk together where we were

00:18:43.249 --> 00:18:43.259
our first talk together where we were
 

00:18:43.259 --> 00:18:44.680
our first talk together where we were
talking about ListView

00:18:44.680 --> 00:18:44.690
talking about ListView
 

00:18:44.690 --> 00:18:47.629
talking about ListView
so this today would be the job of a

00:18:47.629 --> 00:18:47.639
so this today would be the job of a
 

00:18:47.639 --> 00:18:49.279
so this today would be the job of a
recycler view kind of our ListView -

00:18:49.279 --> 00:18:49.289
recycler view kind of our ListView -
 

00:18:49.289 --> 00:18:50.659
recycler view kind of our ListView -
widget that you're all probably familiar

00:18:50.659 --> 00:18:50.669
widget that you're all probably familiar
 

00:18:50.669 --> 00:18:53.480
widget that you're all probably familiar
with but that means that we have to

00:18:53.480 --> 00:18:53.490
with but that means that we have to
 

00:18:53.490 --> 00:18:55.159
with but that means that we have to
factor out an adapter to handle the

00:18:55.159 --> 00:18:55.169
factor out an adapter to handle the
 

00:18:55.169 --> 00:18:57.019
factor out an adapter to handle the
recycler view itself requesting and

00:18:57.019 --> 00:18:57.029
recycler view itself requesting and
 

00:18:57.029 --> 00:19:01.190
recycler view itself requesting and
rebinding those views so as you probably

00:19:01.190 --> 00:19:01.200
rebinding those views so as you probably
 

00:19:01.200 --> 00:19:02.930
rebinding those views so as you probably
know there's really no good way to fit a

00:19:02.930 --> 00:19:02.940
know there's really no good way to fit a
 

00:19:02.940 --> 00:19:05.840
know there's really no good way to fit a
recycler view adapter onto a slide it's

00:19:05.840 --> 00:19:05.850
recycler view adapter onto a slide it's
 

00:19:05.850 --> 00:19:07.279
recycler view adapter onto a slide it's
a lot of code even in the best case and

00:19:07.279 --> 00:19:07.289
a lot of code even in the best case and
 

00:19:07.289 --> 00:19:09.289
a lot of code even in the best case and
I'm using data binding to cheat a bit

00:19:09.289 --> 00:19:09.299
I'm using data binding to cheat a bit
 

00:19:09.299 --> 00:19:11.629
I'm using data binding to cheat a bit
here and several things just aren't

00:19:11.629 --> 00:19:11.639
here and several things just aren't
 

00:19:11.639 --> 00:19:13.430
here and several things just aren't
shown at all like the diff callback for

00:19:13.430 --> 00:19:13.440
shown at all like the diff callback for
 

00:19:13.440 --> 00:19:15.230
shown at all like the diff callback for
helping to handle animations on data set

00:19:15.230 --> 00:19:15.240
helping to handle animations on data set
 

00:19:15.240 --> 00:19:16.460
helping to handle animations on data set
changes and we certainly don't have

00:19:16.460 --> 00:19:16.470
changes and we certainly don't have
 

00:19:16.470 --> 00:19:17.990
changes and we certainly don't have
anything about event handling in here

00:19:17.990 --> 00:19:18.000
anything about event handling in here
 

00:19:18.000 --> 00:19:20.320
anything about event handling in here
but you kind of get the basic idea

00:19:20.320 --> 00:19:20.330
but you kind of get the basic idea
 

00:19:20.330 --> 00:19:22.340
but you kind of get the basic idea
so let's come back to this loop in the

00:19:22.340 --> 00:19:22.350
so let's come back to this loop in the
 

00:19:22.350 --> 00:19:24.019
so let's come back to this loop in the
jetpack compose version and see what

00:19:24.019 --> 00:19:24.029
jetpack compose version and see what
 

00:19:24.029 --> 00:19:27.680
jetpack compose version and see what
else we can do well this is Kotlin after

00:19:27.680 --> 00:19:27.690
else we can do well this is Kotlin after
 

00:19:27.690 --> 00:19:29.509
else we can do well this is Kotlin after
all we can define a generic composable

00:19:29.509 --> 00:19:29.519
all we can define a generic composable
 

00:19:29.519 --> 00:19:31.549
all we can define a generic composable
function that looks like a foreach loop

00:19:31.549 --> 00:19:31.559
function that looks like a foreach loop
 

00:19:31.559 --> 00:19:33.830
function that looks like a foreach loop
by using a trailing lambda argument and

00:19:33.830 --> 00:19:33.840
by using a trailing lambda argument and
 

00:19:33.840 --> 00:19:35.779
by using a trailing lambda argument and
have it emit each story widget as its

00:19:35.779 --> 00:19:35.789
have it emit each story widget as its
 

00:19:35.789 --> 00:19:38.570
have it emit each story widget as its
asked for so what we did here is we just

00:19:38.570 --> 00:19:38.580
asked for so what we did here is we just
 

00:19:38.580 --> 00:19:41.240
asked for so what we did here is we just
defined our recycler view adapter in one

00:19:41.240 --> 00:19:41.250
defined our recycler view adapter in one
 

00:19:41.250 --> 00:19:43.580
defined our recycler view adapter in one
line of code so the implementation of

00:19:43.580 --> 00:19:43.590
line of code so the implementation of
 

00:19:43.590 --> 00:19:45.769
line of code so the implementation of
the scrolling list itself can be just as

00:19:45.769 --> 00:19:45.779
the scrolling list itself can be just as
 

00:19:45.779 --> 00:19:48.289
the scrolling list itself can be just as
smart of it's a recycler view the body

00:19:48.289 --> 00:19:48.299
smart of it's a recycler view the body
 

00:19:48.299 --> 00:19:50.029
smart of it's a recycler view the body
that we pass to a composable function

00:19:50.029 --> 00:19:50.039
that we pass to a composable function
 

00:19:50.039 --> 00:19:52.460
that we pass to a composable function
call can itself be a composable function

00:19:52.460 --> 00:19:52.470
call can itself be a composable function
 

00:19:52.470 --> 00:19:54.260
call can itself be a composable function
lambda so that scrolling list

00:19:54.260 --> 00:19:54.270
lambda so that scrolling list
 

00:19:54.270 --> 00:19:56.450
lambda so that scrolling list
can choose to call it multiple times or

00:19:56.450 --> 00:19:56.460
can choose to call it multiple times or
 

00:19:56.460 --> 00:19:57.260
can choose to call it multiple times or
not at all

00:19:57.260 --> 00:19:57.270
not at all
 

00:19:57.270 --> 00:19:59.690
not at all
much more powerful than just passing

00:19:59.690 --> 00:19:59.700
much more powerful than just passing
 

00:19:59.700 --> 00:20:01.940
much more powerful than just passing
parameters through an include tag since

00:20:01.940 --> 00:20:01.950
parameters through an include tag since
 

00:20:01.950 --> 00:20:03.620
parameters through an include tag since
it means the scrolling list doesn't need

00:20:03.620 --> 00:20:03.630
it means the scrolling list doesn't need
 

00:20:03.630 --> 00:20:05.600
it means the scrolling list doesn't need
to know anything about what we're going

00:20:05.600 --> 00:20:05.610
to know anything about what we're going
 

00:20:05.610 --> 00:20:07.070
to know anything about what we're going
to put in there when we use it you can

00:20:07.070 --> 00:20:07.080
to put in there when we use it you can
 

00:20:07.080 --> 00:20:08.960
to put in there when we use it you can
put entirely different structures in

00:20:08.960 --> 00:20:08.970
put entirely different structures in
 

00:20:08.970 --> 00:20:10.940
put entirely different structures in
here just depending on code that you're

00:20:10.940 --> 00:20:10.950
here just depending on code that you're
 

00:20:10.950 --> 00:20:14.900
here just depending on code that you're
running and defining so we can do some

00:20:14.900 --> 00:20:14.910
running and defining so we can do some
 

00:20:14.910 --> 00:20:16.400
running and defining so we can do some
other kind of neat things too we can

00:20:16.400 --> 00:20:16.410
other kind of neat things too we can
 

00:20:16.410 --> 00:20:17.960
other kind of neat things too we can
offer some really powerful hooks into

00:20:17.960 --> 00:20:17.970
offer some really powerful hooks into
 

00:20:17.970 --> 00:20:20.000
offer some really powerful hooks into
our runtime for life cycle and

00:20:20.000 --> 00:20:20.010
our runtime for life cycle and
 

00:20:20.010 --> 00:20:21.890
our runtime for life cycle and
subscription management that can work

00:20:21.890 --> 00:20:21.900
subscription management that can work
 

00:20:21.900 --> 00:20:23.570
subscription management that can work
together seamlessly with things like

00:20:23.570 --> 00:20:23.580
together seamlessly with things like
 

00:20:23.580 --> 00:20:25.880
together seamlessly with things like
live data rx Java or the new Kotlin

00:20:25.880 --> 00:20:25.890
live data rx Java or the new Kotlin
 

00:20:25.890 --> 00:20:28.610
live data rx Java or the new Kotlin
flows so up until now we can do most of

00:20:28.610 --> 00:20:28.620
flows so up until now we can do most of
 

00:20:28.620 --> 00:20:29.900
flows so up until now we can do most of
what we shown here just with a clever

00:20:29.900 --> 00:20:29.910
what we shown here just with a clever
 

00:20:29.910 --> 00:20:34.100
what we shown here just with a clever
DSL but here observe will return a new

00:20:34.100 --> 00:20:34.110
DSL but here observe will return a new
 

00:20:34.110 --> 00:20:36.500
DSL but here observe will return a new
value each time it changes and cause the

00:20:36.500 --> 00:20:36.510
value each time it changes and cause the
 

00:20:36.510 --> 00:20:39.020
value each time it changes and cause the
newsfeed function around it to run again

00:20:39.020 --> 00:20:39.030
newsfeed function around it to run again
 

00:20:39.030 --> 00:20:41.180
newsfeed function around it to run again
so that'll feed new data to our

00:20:41.180 --> 00:20:41.190
so that'll feed new data to our
 

00:20:41.190 --> 00:20:43.130
so that'll feed new data to our
scrolling list much like a recycler view

00:20:43.130 --> 00:20:43.140
scrolling list much like a recycler view
 

00:20:43.140 --> 00:20:45.800
scrolling list much like a recycler view
a data herd recyclerview adapter data

00:20:45.800 --> 00:20:45.810
a data herd recyclerview adapter data
 

00:20:45.810 --> 00:20:48.620
a data herd recyclerview adapter data
swap will so observe as shown here is

00:20:48.620 --> 00:20:48.630
swap will so observe as shown here is
 

00:20:48.630 --> 00:20:50.120
swap will so observe as shown here is
just a find in library code there's

00:20:50.120 --> 00:20:50.130
just a find in library code there's
 

00:20:50.130 --> 00:20:51.530
just a find in library code there's
nothing special here there's nothing

00:20:51.530 --> 00:20:51.540
nothing special here there's nothing
 

00:20:51.540 --> 00:20:53.300
nothing special here there's nothing
that we've implemented that's based on

00:20:53.300 --> 00:20:53.310
that we've implemented that's based on
 

00:20:53.310 --> 00:20:56.060
that we've implemented that's based on
internal API you can write your own - if

00:20:56.060 --> 00:20:56.070
internal API you can write your own - if
 

00:20:56.070 --> 00:20:57.650
internal API you can write your own - if
you have your own favorite observable or

00:20:57.650 --> 00:20:57.660
you have your own favorite observable or
 

00:20:57.660 --> 00:21:00.380
you have your own favorite observable or
callback types so what else does this

00:21:00.380 --> 00:21:00.390
callback types so what else does this
 

00:21:00.390 --> 00:21:02.240
callback types so what else does this
imply about how the scrolling list must

00:21:02.240 --> 00:21:02.250
imply about how the scrolling list must
 

00:21:02.250 --> 00:21:04.610
imply about how the scrolling list must
work so let's go ahead and put it into

00:21:04.610 --> 00:21:04.620
work so let's go ahead and put it into
 

00:21:04.620 --> 00:21:05.450
work so let's go ahead and put it into
something a little bit more

00:21:05.450 --> 00:21:05.460
something a little bit more
 

00:21:05.460 --> 00:21:09.020
something a little bit more
sophisticated so we saw with observing a

00:21:09.020 --> 00:21:09.030
sophisticated so we saw with observing a
 

00:21:09.030 --> 00:21:10.760
sophisticated so we saw with observing a
live data that we can trigger a

00:21:10.760 --> 00:21:10.770
live data that we can trigger a
 

00:21:10.770 --> 00:21:12.860
live data that we can trigger a
recomposition when something changes so

00:21:12.860 --> 00:21:12.870
recomposition when something changes so
 

00:21:12.870 --> 00:21:15.110
recomposition when something changes so
let's use an async loading function that

00:21:15.110 --> 00:21:15.120
let's use an async loading function that
 

00:21:15.120 --> 00:21:16.820
let's use an async loading function that
can give us a placeholder immediately

00:21:16.820 --> 00:21:16.830
can give us a placeholder immediately
 

00:21:16.830 --> 00:21:18.770
can give us a placeholder immediately
but the result of running some sort of

00:21:18.770 --> 00:21:18.780
but the result of running some sort of
 

00:21:18.780 --> 00:21:20.930
but the result of running some sort of
lazy loaded block once it's actually

00:21:20.930 --> 00:21:20.940
lazy loaded block once it's actually
 

00:21:20.940 --> 00:21:22.880
lazy loaded block once it's actually
completed so all of these sorts of

00:21:22.880 --> 00:21:22.890
completed so all of these sorts of
 

00:21:22.890 --> 00:21:25.010
completed so all of these sorts of
complex image loading scenarios that

00:21:25.010 --> 00:21:25.020
complex image loading scenarios that
 

00:21:25.020 --> 00:21:26.840
complex image loading scenarios that
we're all familiar with suddenly becomes

00:21:26.840 --> 00:21:26.850
we're all familiar with suddenly becomes
 

00:21:26.850 --> 00:21:28.340
we're all familiar with suddenly becomes
something very simple that we can use

00:21:28.340 --> 00:21:28.350
something very simple that we can use
 

00:21:28.350 --> 00:21:32.630
something very simple that we can use
anywhere and also like we saw with the

00:21:32.630 --> 00:21:32.640
anywhere and also like we saw with the
 

00:21:32.640 --> 00:21:34.610
anywhere and also like we saw with the
scrolling list we can weave data across

00:21:34.610 --> 00:21:34.620
scrolling list we can weave data across
 

00:21:34.620 --> 00:21:36.230
scrolling list we can weave data across
layers of the hierarchy and they don't

00:21:36.230 --> 00:21:36.240
layers of the hierarchy and they don't
 

00:21:36.240 --> 00:21:37.850
layers of the hierarchy and they don't
have to be direct tree children either

00:21:37.850 --> 00:21:37.860
have to be direct tree children either
 

00:21:37.860 --> 00:21:40.250
have to be direct tree children either
it doesn't matter what kind of Chrome or

00:21:40.250 --> 00:21:40.260
it doesn't matter what kind of Chrome or
 

00:21:40.260 --> 00:21:42.200
it doesn't matter what kind of Chrome or
how many layers of hierarchy that that

00:21:42.200 --> 00:21:42.210
how many layers of hierarchy that that
 

00:21:42.210 --> 00:21:44.360
how many layers of hierarchy that that
card or column might add in between in

00:21:44.360 --> 00:21:44.370
card or column might add in between in
 

00:21:44.370 --> 00:21:46.220
card or column might add in between in
order to do their work so we can go

00:21:46.220 --> 00:21:46.230
order to do their work so we can go
 

00:21:46.230 --> 00:21:47.750
order to do their work so we can go
further than we can with something like

00:21:47.750 --> 00:21:47.760
further than we can with something like
 

00:21:47.760 --> 00:21:49.400
further than we can with something like
data binding and we can write a whole

00:21:49.400 --> 00:21:49.410
data binding and we can write a whole
 

00:21:49.410 --> 00:21:51.620
data binding and we can write a whole
lot less wire up code we can just use

00:21:51.620 --> 00:21:51.630
lot less wire up code we can just use
 

00:21:51.630 --> 00:21:54.050
lot less wire up code we can just use
the lexical scope of that image or story

00:21:54.050 --> 00:21:54.060
the lexical scope of that image or story
 

00:21:54.060 --> 00:21:56.150
the lexical scope of that image or story
that we already have and we can refer to

00:21:56.150 --> 00:21:56.160
that we already have and we can refer to
 

00:21:56.160 --> 00:22:00.070
that we already have and we can refer to
the story headlines several layers deep

00:22:00.070 --> 00:22:00.080
the story headlines several layers deep
 

00:22:00.080 --> 00:22:02.870
the story headlines several layers deep
this is really part of what helps make

00:22:02.870 --> 00:22:02.880
this is really part of what helps make
 

00:22:02.880 --> 00:22:04.670
this is really part of what helps make
composable functions composable how

00:22:04.670 --> 00:22:04.680
composable functions composable how
 

00:22:04.680 --> 00:22:06.230
composable functions composable how
they're kind of getting their name we

00:22:06.230 --> 00:22:06.240
they're kind of getting their name we
 

00:22:06.240 --> 00:22:07.860
they're kind of getting their name we
can leave this as is

00:22:07.860 --> 00:22:07.870
can leave this as is
 

00:22:07.870 --> 00:22:09.419
can leave this as is
I mean it's a lot of code for a slide

00:22:09.419 --> 00:22:09.429
I mean it's a lot of code for a slide
 

00:22:09.429 --> 00:22:11.070
I mean it's a lot of code for a slide
but it's not a lot to glance at at an

00:22:11.070 --> 00:22:11.080
but it's not a lot to glance at at an
 

00:22:11.080 --> 00:22:13.860
but it's not a lot to glance at at an
editor or we can just use our normal

00:22:13.860 --> 00:22:13.870
editor or we can just use our normal
 

00:22:13.870 --> 00:22:15.600
editor or we can just use our normal
tools that we've got highlight it

00:22:15.600 --> 00:22:15.610
tools that we've got highlight it
 

00:22:15.610 --> 00:22:17.970
tools that we've got highlight it
extract method on any part of it and go

00:22:17.970 --> 00:22:17.980
extract method on any part of it and go
 

00:22:17.980 --> 00:22:20.130
extract method on any part of it and go
ahead and generalize it this isn't

00:22:20.130 --> 00:22:20.140
ahead and generalize it this isn't
 

00:22:20.140 --> 00:22:21.600
ahead and generalize it this isn't
anything magic it's just the same tools

00:22:21.600 --> 00:22:21.610
anything magic it's just the same tools
 

00:22:21.610 --> 00:22:23.010
anything magic it's just the same tools
and techniques that we're already used

00:22:23.010 --> 00:22:23.020
and techniques that we're already used
 

00:22:23.020 --> 00:22:25.350
and techniques that we're already used
to doing when we're writing code so

00:22:25.350 --> 00:22:25.360
to doing when we're writing code so
 

00:22:25.360 --> 00:22:26.730
to doing when we're writing code so
we've talked about how we can observe

00:22:26.730 --> 00:22:26.740
we've talked about how we can observe
 

00:22:26.740 --> 00:22:29.730
we've talked about how we can observe
changes in live data and we've seen how

00:22:29.730 --> 00:22:29.740
changes in live data and we've seen how
 

00:22:29.740 --> 00:22:31.230
changes in live data and we've seen how
we can show placeholders while we

00:22:31.230 --> 00:22:31.240
we can show placeholders while we
 

00:22:31.240 --> 00:22:33.049
we can show placeholders while we
request a data load from somewhere else

00:22:33.049 --> 00:22:33.059
request a data load from somewhere else
 

00:22:33.059 --> 00:22:35.789
request a data load from somewhere else
but what if we get an update to one of

00:22:35.789 --> 00:22:35.799
but what if we get an update to one of
 

00:22:35.799 --> 00:22:41.130
but what if we get an update to one of
our story data objects so our story data

00:22:41.130 --> 00:22:41.140
our story data objects so our story data
 

00:22:41.140 --> 00:22:42.630
our story data objects so our story data
that we used as a parameter in there is

00:22:42.630 --> 00:22:42.640
that we used as a parameter in there is
 

00:22:42.640 --> 00:22:44.700
that we used as a parameter in there is
really most naturally represented as a

00:22:44.700 --> 00:22:44.710
really most naturally represented as a
 

00:22:44.710 --> 00:22:46.590
really most naturally represented as a
Kotlin data class there's really nothing

00:22:46.590 --> 00:22:46.600
Kotlin data class there's really nothing
 

00:22:46.600 --> 00:22:48.930
Kotlin data class there's really nothing
too special about it but we'd like to be

00:22:48.930 --> 00:22:48.940
too special about it but we'd like to be
 

00:22:48.940 --> 00:22:50.460
too special about it but we'd like to be
able to update our UI if anything about

00:22:50.460 --> 00:22:50.470
able to update our UI if anything about
 

00:22:50.470 --> 00:22:54.149
able to update our UI if anything about
it changes what if this was mutable so

00:22:54.149 --> 00:22:54.159
it changes what if this was mutable so
 

00:22:54.159 --> 00:22:56.190
it changes what if this was mutable so
if it were a fragment we might use an

00:22:56.190 --> 00:22:56.200
if it were a fragment we might use an
 

00:22:56.200 --> 00:22:57.750
if it were a fragment we might use an
arch components view model with some

00:22:57.750 --> 00:22:57.760
arch components view model with some
 

00:22:57.760 --> 00:22:59.940
arch components view model with some
live data as as properties and use the

00:22:59.940 --> 00:22:59.950
live data as as properties and use the
 

00:22:59.950 --> 00:23:01.649
live data as as properties and use the
same technique that we saw earlier but

00:23:01.649 --> 00:23:01.659
same technique that we saw earlier but
 

00:23:01.659 --> 00:23:03.090
same technique that we saw earlier but
this is going to get really repetitive

00:23:03.090 --> 00:23:03.100
this is going to get really repetitive
 

00:23:03.100 --> 00:23:04.799
this is going to get really repetitive
really quickly especially with all that

00:23:04.799 --> 00:23:04.809
really quickly especially with all that
 

00:23:04.809 --> 00:23:06.659
really quickly especially with all that
extra subscription management we're kind

00:23:06.659 --> 00:23:06.669
extra subscription management we're kind
 

00:23:06.669 --> 00:23:09.149
extra subscription management we're kind
of deciding where all this goes really

00:23:09.149 --> 00:23:09.159
of deciding where all this goes really
 

00:23:09.159 --> 00:23:10.350
of deciding where all this goes really
we just wanted to write that code from

00:23:10.350 --> 00:23:10.360
we just wanted to write that code from
 

00:23:10.360 --> 00:23:15.090
we just wanted to write that code from
the last slide and you can so composers

00:23:15.090 --> 00:23:15.100
the last slide and you can so composers
 

00:23:15.100 --> 00:23:16.740
the last slide and you can so composers
compiler plug-in lets you mark a data

00:23:16.740 --> 00:23:16.750
compiler plug-in lets you mark a data
 

00:23:16.750 --> 00:23:18.659
compiler plug-in lets you mark a data
class as a model which will make the

00:23:18.659 --> 00:23:18.669
class as a model which will make the
 

00:23:18.669 --> 00:23:20.700
class as a model which will make the
properties observable when it's used in

00:23:20.700 --> 00:23:20.710
properties observable when it's used in
 

00:23:20.710 --> 00:23:24.419
properties observable when it's used in
a compose function now if our story

00:23:24.419 --> 00:23:24.429
a compose function now if our story
 

00:23:24.429 --> 00:23:26.789
a compose function now if our story
changes the story wedge widget that read

00:23:26.789 --> 00:23:26.799
changes the story wedge widget that read
 

00:23:26.799 --> 00:23:29.610
changes the story wedge widget that read
its fields will know to recompose the

00:23:29.610 --> 00:23:29.620
its fields will know to recompose the
 

00:23:29.620 --> 00:23:31.710
its fields will know to recompose the
compose runtime observes the changes and

00:23:31.710 --> 00:23:31.720
compose runtime observes the changes and
 

00:23:31.720 --> 00:23:33.659
compose runtime observes the changes and
will cause the story widget function to

00:23:33.659 --> 00:23:33.669
will cause the story widget function to
 

00:23:33.669 --> 00:23:35.880
will cause the story widget function to
rerun and update our UI with the new

00:23:35.880 --> 00:23:35.890
rerun and update our UI with the new
 

00:23:35.890 --> 00:23:42.670
rerun and update our UI with the new
data

00:23:42.670 --> 00:23:42.680
 

00:23:42.680 --> 00:23:44.380
when you're generalizing your code like

00:23:44.380 --> 00:23:44.390
when you're generalizing your code like
 

00:23:44.390 --> 00:23:47.080
when you're generalizing your code like
that it's really important to break it

00:23:47.080 --> 00:23:47.090
that it's really important to break it
 

00:23:47.090 --> 00:23:48.670
that it's really important to break it
up into multiple compostable functions

00:23:48.670 --> 00:23:48.680
up into multiple compostable functions
 

00:23:48.680 --> 00:23:51.010
up into multiple compostable functions
and understand how the data flows

00:23:51.010 --> 00:23:51.020
and understand how the data flows
 

00:23:51.020 --> 00:23:53.130
and understand how the data flows
through your application the application

00:23:53.130 --> 00:23:53.140
through your application the application
 

00:23:53.140 --> 00:23:56.020
through your application the application
passes beta in this case a list of

00:23:56.020 --> 00:23:56.030
passes beta in this case a list of
 

00:23:56.030 --> 00:23:58.570
passes beta in this case a list of
stories into the news feed the news feed

00:23:58.570 --> 00:23:58.580
stories into the news feed the news feed
 

00:23:58.580 --> 00:24:00.070
stories into the news feed the news feed
is then going to iterate over this list

00:24:00.070 --> 00:24:00.080
is then going to iterate over this list
 

00:24:00.080 --> 00:24:02.170
is then going to iterate over this list
of stories extracting each of the pieces

00:24:02.170 --> 00:24:02.180
of stories extracting each of the pieces
 

00:24:02.180 --> 00:24:04.360
of stories extracting each of the pieces
of Story data from the list and passing

00:24:04.360 --> 00:24:04.370
of Story data from the list and passing
 

00:24:04.370 --> 00:24:07.450
of Story data from the list and passing
one story data to each story widget the

00:24:07.450 --> 00:24:07.460
one story data to each story widget the
 

00:24:07.460 --> 00:24:10.150
one story data to each story widget the
story widget then reads the title the

00:24:10.150 --> 00:24:10.160
story widget then reads the title the
 

00:24:10.160 --> 00:24:12.520
story widget then reads the title the
image and the content from the story

00:24:12.520 --> 00:24:12.530
image and the content from the story
 

00:24:12.530 --> 00:24:15.340
image and the content from the story
data the important thing here is that

00:24:15.340 --> 00:24:15.350
data the important thing here is that
 

00:24:15.350 --> 00:24:17.230
data the important thing here is that
the parent is always in control of the

00:24:17.230 --> 00:24:17.240
the parent is always in control of the
 

00:24:17.240 --> 00:24:19.960
the parent is always in control of the
data for the child if the data needs to

00:24:19.960 --> 00:24:19.970
data for the child if the data needs to
 

00:24:19.970 --> 00:24:21.670
data for the child if the data needs to
be shared between multiple widgets the

00:24:21.670 --> 00:24:21.680
be shared between multiple widgets the
 

00:24:21.680 --> 00:24:23.200
be shared between multiple widgets the
data should be hoisted up to a common

00:24:23.200 --> 00:24:23.210
data should be hoisted up to a common
 

00:24:23.210 --> 00:24:25.300
data should be hoisted up to a common
ancestor and passed down to each of the

00:24:25.300 --> 00:24:25.310
ancestor and passed down to each of the
 

00:24:25.310 --> 00:24:27.220
ancestor and passed down to each of the
widgets that needs it children should

00:24:27.220 --> 00:24:27.230
widgets that needs it children should
 

00:24:27.230 --> 00:24:29.110
widgets that needs it children should
not be reading from global variables or

00:24:29.110 --> 00:24:29.120
not be reading from global variables or
 

00:24:29.120 --> 00:24:30.820
not be reading from global variables or
global data stores they should be

00:24:30.820 --> 00:24:30.830
global data stores they should be
 

00:24:30.830 --> 00:24:32.890
global data stores they should be
side-effect free and should not do

00:24:32.890 --> 00:24:32.900
side-effect free and should not do
 

00:24:32.900 --> 00:24:34.420
side-effect free and should not do
anything except what the parent tells

00:24:34.420 --> 00:24:34.430
anything except what the parent tells
 

00:24:34.430 --> 00:24:37.060
anything except what the parent tells
them to do as your application scales

00:24:37.060 --> 00:24:37.070
them to do as your application scales
 

00:24:37.070 --> 00:24:38.950
them to do as your application scales
this architecture makes your code much

00:24:38.950 --> 00:24:38.960
this architecture makes your code much
 

00:24:38.960 --> 00:24:41.590
this architecture makes your code much
easier to reason about but what happens

00:24:41.590 --> 00:24:41.600
easier to reason about but what happens
 

00:24:41.600 --> 00:24:43.060
easier to reason about but what happens
if the application wants to know when a

00:24:43.060 --> 00:24:43.070
if the application wants to know when a
 

00:24:43.070 --> 00:24:45.610
if the application wants to know when a
user clicks on a story one interesting

00:24:45.610 --> 00:24:45.620
user clicks on a story one interesting
 

00:24:45.620 --> 00:24:47.800
user clicks on a story one interesting
pattern is to pass lambdas down because

00:24:47.800 --> 00:24:47.810
pattern is to pass lambdas down because
 

00:24:47.810 --> 00:24:50.560
pattern is to pass lambdas down because
code is data which allows us to have

00:24:50.560 --> 00:24:50.570
code is data which allows us to have
 

00:24:50.570 --> 00:24:53.230
code is data which allows us to have
events propagate upwards it looks

00:24:53.230 --> 00:24:53.240
events propagate upwards it looks
 

00:24:53.240 --> 00:24:56.410
events propagate upwards it looks
something like this in this case the

00:24:56.410 --> 00:24:56.420
something like this in this case the
 

00:24:56.420 --> 00:24:58.540
something like this in this case the
news feed takes an unselected lambda

00:24:58.540 --> 00:24:58.550
news feed takes an unselected lambda
 

00:24:58.550 --> 00:25:03.160
news feed takes an unselected lambda
which is going to take in some story

00:25:03.160 --> 00:25:03.170
which is going to take in some story
 

00:25:03.170 --> 00:25:05.560
which is going to take in some story
data which is the current story it will

00:25:05.560 --> 00:25:05.570
data which is the current story it will
 

00:25:05.570 --> 00:25:09.550
data which is the current story it will
then when these news feed invokes the

00:25:09.550 --> 00:25:09.560
then when these news feed invokes the
 

00:25:09.560 --> 00:25:11.500
then when these news feed invokes the
story widget it's going to take this

00:25:11.500 --> 00:25:11.510
story widget it's going to take this
 

00:25:11.510 --> 00:25:13.300
story widget it's going to take this
lambda and create a new lambda of its

00:25:13.300 --> 00:25:13.310
lambda and create a new lambda of its
 

00:25:13.310 --> 00:25:15.220
lambda and create a new lambda of its
own and pass that lambda to the story

00:25:15.220 --> 00:25:15.230
own and pass that lambda to the story
 

00:25:15.230 --> 00:25:18.250
own and pass that lambda to the story
widget the story widget then passes that

00:25:18.250 --> 00:25:18.260
widget the story widget then passes that
 

00:25:18.260 --> 00:25:21.070
widget the story widget then passes that
lambda to a clickable widget which will

00:25:21.070 --> 00:25:21.080
lambda to a clickable widget which will
 

00:25:21.080 --> 00:25:23.530
lambda to a clickable widget which will
respond to the click when a user clicks

00:25:23.530 --> 00:25:23.540
respond to the click when a user clicks
 

00:25:23.540 --> 00:25:25.150
respond to the click when a user clicks
on this story clicks on the clickable

00:25:25.150 --> 00:25:25.160
on this story clicks on the clickable
 

00:25:25.160 --> 00:25:27.640
on this story clicks on the clickable
widget the unclick will fire which will

00:25:27.640 --> 00:25:27.650
widget the unclick will fire which will
 

00:25:27.650 --> 00:25:30.190
widget the unclick will fire which will
cause the event to propagate back up to

00:25:30.190 --> 00:25:30.200
cause the event to propagate back up to
 

00:25:30.200 --> 00:25:32.740
cause the event to propagate back up to
the lambda that was created and passed

00:25:32.740 --> 00:25:32.750
the lambda that was created and passed
 

00:25:32.750 --> 00:25:35.230
the lambda that was created and passed
in this lambda will call unselected

00:25:35.230 --> 00:25:35.240
in this lambda will call unselected
 

00:25:35.240 --> 00:25:36.700
in this lambda will call unselected
which is the lambda that was passed to

00:25:36.700 --> 00:25:36.710
which is the lambda that was passed to
 

00:25:36.710 --> 00:25:39.040
which is the lambda that was passed to
the news feed by the application so the

00:25:39.040 --> 00:25:39.050
the news feed by the application so the
 

00:25:39.050 --> 00:25:40.840
the news feed by the application so the
parents is always in control the data in

00:25:40.840 --> 00:25:40.850
parents is always in control the data in
 

00:25:40.850 --> 00:25:42.310
parents is always in control the data in
this case a lambda has been passed down

00:25:42.310 --> 00:25:42.320
this case a lambda has been passed down
 

00:25:42.320 --> 00:25:45.490
this case a lambda has been passed down
and then the event bubbles back up if we

00:25:45.490 --> 00:25:45.500
and then the event bubbles back up if we
 

00:25:45.500 --> 00:25:47.200
and then the event bubbles back up if we
look at this in diagram form we see that

00:25:47.200 --> 00:25:47.210
look at this in diagram form we see that
 

00:25:47.210 --> 00:25:49.090
look at this in diagram form we see that
the application starts with some data

00:25:49.090 --> 00:25:49.100
the application starts with some data
 

00:25:49.100 --> 00:25:51.250
the application starts with some data
passes it down to the news feed which

00:25:51.250 --> 00:25:51.260
passes it down to the news feed which
 

00:25:51.260 --> 00:25:53.050
passes it down to the news feed which
passes it down to each of the story

00:25:53.050 --> 00:25:53.060
passes it down to each of the story
 

00:25:53.060 --> 00:25:55.030
passes it down to each of the story
widgets which in turn passed the

00:25:55.030 --> 00:25:55.040
widgets which in turn passed the
 

00:25:55.040 --> 00:25:56.360
widgets which in turn passed the
information down to

00:25:56.360 --> 00:25:56.370
information down to
 

00:25:56.370 --> 00:25:57.680
information down to
the compostable building blocks that

00:25:57.680 --> 00:25:57.690
the compostable building blocks that
 

00:25:57.690 --> 00:25:59.930
the compostable building blocks that
build up each widget then when a user

00:25:59.930 --> 00:25:59.940
build up each widget then when a user
 

00:25:59.940 --> 00:26:01.940
build up each widget then when a user
clicks on a piece of the widget that

00:26:01.940 --> 00:26:01.950
clicks on a piece of the widget that
 

00:26:01.950 --> 00:26:04.010
clicks on a piece of the widget that
triggers an event which calls the

00:26:04.010 --> 00:26:04.020
triggers an event which calls the
 

00:26:04.020 --> 00:26:05.600
triggers an event which calls the
lambdas going back up with a hierarchy

00:26:05.600 --> 00:26:05.610
lambdas going back up with a hierarchy
 

00:26:05.610 --> 00:26:08.720
lambdas going back up with a hierarchy
back up to the screen ultimately the

00:26:08.720 --> 00:26:08.730
back up to the screen ultimately the
 

00:26:08.730 --> 00:26:10.730
back up to the screen ultimately the
application can then update the

00:26:10.730 --> 00:26:10.740
application can then update the
 

00:26:10.740 --> 00:26:13.190
application can then update the
applications data model and the new data

00:26:13.190 --> 00:26:13.200
applications data model and the new data
 

00:26:13.200 --> 00:26:15.799
applications data model and the new data
will be passed back down all the way

00:26:15.799 --> 00:26:15.809
will be passed back down all the way
 

00:26:15.809 --> 00:26:17.360
will be passed back down all the way
down until it's displayed onto the

00:26:17.360 --> 00:26:17.370
down until it's displayed onto the
 

00:26:17.370 --> 00:26:21.230
down until it's displayed onto the
screen notice that the data was always

00:26:21.230 --> 00:26:21.240
screen notice that the data was always
 

00:26:21.240 --> 00:26:23.180
screen notice that the data was always
passed top down and data always consumed

00:26:23.180 --> 00:26:23.190
passed top down and data always consumed
 

00:26:23.190 --> 00:26:25.760
passed top down and data always consumed
as parameters the widget didn't have to

00:26:25.760 --> 00:26:25.770
as parameters the widget didn't have to
 

00:26:25.770 --> 00:26:27.560
as parameters the widget didn't have to
reference the activity it didn't do

00:26:27.560 --> 00:26:27.570
reference the activity it didn't do
 

00:26:27.570 --> 00:26:30.649
reference the activity it didn't do
anything except code that was controlled

00:26:30.649 --> 00:26:30.659
anything except code that was controlled
 

00:26:30.659 --> 00:26:34.310
anything except code that was controlled
by the parent we'll come back to this

00:26:34.310 --> 00:26:34.320
by the parent we'll come back to this
 

00:26:34.320 --> 00:26:36.889
by the parent we'll come back to this
with the spinner example that's right

00:26:36.889 --> 00:26:36.899
with the spinner example that's right
 

00:26:36.899 --> 00:26:39.230
with the spinner example that's right
so the spinner has a problem that the

00:26:39.230 --> 00:26:39.240
so the spinner has a problem that the
 

00:26:39.240 --> 00:26:40.820
so the spinner has a problem that the
code that we just saw doesn't and that

00:26:40.820 --> 00:26:40.830
code that we just saw doesn't and that
 

00:26:40.830 --> 00:26:42.350
code that we just saw doesn't and that
the spinner makes you deal with multiple

00:26:42.350 --> 00:26:42.360
the spinner makes you deal with multiple
 

00:26:42.360 --> 00:26:46.240
the spinner makes you deal with multiple
sources of truth so our app has a state

00:26:46.240 --> 00:26:46.250
sources of truth so our app has a state
 

00:26:46.250 --> 00:26:50.060
sources of truth so our app has a state
the spinner has a state and the spinner

00:26:50.060 --> 00:26:50.070
the spinner has a state and the spinner
 

00:26:50.070 --> 00:26:52.190
the spinner has a state and the spinner
doesn't ask us before letting the user

00:26:52.190 --> 00:26:52.200
doesn't ask us before letting the user
 

00:26:52.200 --> 00:26:53.690
doesn't ask us before letting the user
change its state and it's the basic

00:26:53.690 --> 00:26:53.700
change its state and it's the basic
 

00:26:53.700 --> 00:26:56.180
change its state and it's the basic
shape of the problem and there's two

00:26:56.180 --> 00:26:56.190
shape of the problem and there's two
 

00:26:56.190 --> 00:26:57.799
shape of the problem and there's two
ways to solve this when when you have

00:26:57.799 --> 00:26:57.809
ways to solve this when when you have
 

00:26:57.809 --> 00:26:59.600
ways to solve this when when you have
this like one of these sides must win if

00:26:59.600 --> 00:26:59.610
this like one of these sides must win if
 

00:26:59.610 --> 00:27:00.769
this like one of these sides must win if
you want to have a single source of

00:27:00.769 --> 00:27:00.779
you want to have a single source of
 

00:27:00.779 --> 00:27:03.260
you want to have a single source of
truth so we could design some of these

00:27:03.260 --> 00:27:03.270
truth so we could design some of these
 

00:27:03.270 --> 00:27:06.080
truth so we could design some of these
components such that the spinner itself

00:27:06.080 --> 00:27:06.090
components such that the spinner itself
 

00:27:06.090 --> 00:27:08.570
components such that the spinner itself
is the source of truth and you could see

00:27:08.570 --> 00:27:08.580
is the source of truth and you could see
 

00:27:08.580 --> 00:27:09.710
is the source of truth and you could see
how you would put that together even

00:27:09.710 --> 00:27:09.720
how you would put that together even
 

00:27:09.720 --> 00:27:11.990
how you would put that together even
with the API that we just saw and it

00:27:11.990 --> 00:27:12.000
with the API that we just saw and it
 

00:27:12.000 --> 00:27:13.519
with the API that we just saw and it
basically looks like having to add a

00:27:13.519 --> 00:27:13.529
basically looks like having to add a
 

00:27:13.529 --> 00:27:15.830
basically looks like having to add a
whole bunch of validation api's it means

00:27:15.830 --> 00:27:15.840
whole bunch of validation api's it means
 

00:27:15.840 --> 00:27:17.720
whole bunch of validation api's it means
that every user interaction which it

00:27:17.720 --> 00:27:17.730
that every user interaction which it
 

00:27:17.730 --> 00:27:20.120
that every user interaction which it
needs these fully-formed api's for

00:27:20.120 --> 00:27:20.130
needs these fully-formed api's for
 

00:27:20.130 --> 00:27:21.860
needs these fully-formed api's for
anything that you can change to sort of

00:27:21.860 --> 00:27:21.870
anything that you can change to sort of
 

00:27:21.870 --> 00:27:24.080
anything that you can change to sort of
filter through what you might do in

00:27:24.080 --> 00:27:24.090
filter through what you might do in
 

00:27:24.090 --> 00:27:26.240
filter through what you might do in
order to validate that what the users

00:27:26.240 --> 00:27:26.250
order to validate that what the users
 

00:27:26.250 --> 00:27:30.440
order to validate that what the users
inputting is actually correct and it

00:27:30.440 --> 00:27:30.450
inputting is actually correct and it
 

00:27:30.450 --> 00:27:32.240
inputting is actually correct and it
scales kind of poorly if you're writing

00:27:32.240 --> 00:27:32.250
scales kind of poorly if you're writing
 

00:27:32.250 --> 00:27:33.830
scales kind of poorly if you're writing
those components yourself you want to

00:27:33.830 --> 00:27:33.840
those components yourself you want to
 

00:27:33.840 --> 00:27:35.600
those components yourself you want to
have a case where you where it's Turtles

00:27:35.600 --> 00:27:35.610
have a case where you where it's Turtles
 

00:27:35.610 --> 00:27:37.220
have a case where you where it's Turtles
all the way down you want to make sure

00:27:37.220 --> 00:27:37.230
all the way down you want to make sure
 

00:27:37.230 --> 00:27:40.070
all the way down you want to make sure
that it's as easy to write a component

00:27:40.070 --> 00:27:40.080
that it's as easy to write a component
 

00:27:40.080 --> 00:27:41.779
that it's as easy to write a component
as it is to consume a component so you

00:27:41.779 --> 00:27:41.789
as it is to consume a component so you
 

00:27:41.789 --> 00:27:43.580
as it is to consume a component so you
kind of don't want everybody to have to

00:27:43.580 --> 00:27:43.590
kind of don't want everybody to have to
 

00:27:43.590 --> 00:27:45.409
kind of don't want everybody to have to
deal with writing all their api's twice

00:27:45.409 --> 00:27:45.419
deal with writing all their api's twice
 

00:27:45.419 --> 00:27:47.299
deal with writing all their api's twice
writing these sort of validation filters

00:27:47.299 --> 00:27:47.309
writing these sort of validation filters
 

00:27:47.309 --> 00:27:51.380
writing these sort of validation filters
for every property that you can set so

00:27:51.380 --> 00:27:51.390
for every property that you can set so
 

00:27:51.390 --> 00:27:53.600
for every property that you can set so
the other option that we think is better

00:27:53.600 --> 00:27:53.610
the other option that we think is better
 

00:27:53.610 --> 00:27:55.970
the other option that we think is better
that we're certainly pitching here is to

00:27:55.970 --> 00:27:55.980
that we're certainly pitching here is to
 

00:27:55.980 --> 00:27:58.850
that we're certainly pitching here is to
let the app own its own data and have

00:27:58.850 --> 00:27:58.860
let the app own its own data and have
 

00:27:58.860 --> 00:28:00.649
let the app own its own data and have
the apps backing data model the source

00:28:00.649 --> 00:28:00.659
the apps backing data model the source
 

00:28:00.659 --> 00:28:02.060
the apps backing data model the source
of truth that you're using that's part

00:28:02.060 --> 00:28:02.070
of truth that you're using that's part
 

00:28:02.070 --> 00:28:04.310
of truth that you're using that's part
of your data repository be the source of

00:28:04.310 --> 00:28:04.320
of your data repository be the source of
 

00:28:04.320 --> 00:28:06.440
of your data repository be the source of
truth instead so this has a whole lot of

00:28:06.440 --> 00:28:06.450
truth instead so this has a whole lot of
 

00:28:06.450 --> 00:28:09.940
truth instead so this has a whole lot of
other advantages

00:28:09.940 --> 00:28:09.950
 

00:28:09.950 --> 00:28:12.910
let's take a look at a concrete example

00:28:12.910 --> 00:28:12.920
let's take a look at a concrete example
 

00:28:12.920 --> 00:28:15.740
let's take a look at a concrete example
here we have a food preferences widget

00:28:15.740 --> 00:28:15.750
here we have a food preferences widget
 

00:28:15.750 --> 00:28:17.480
here we have a food preferences widget
that we define as a compostable function

00:28:17.480 --> 00:28:17.490
that we define as a compostable function
 

00:28:17.490 --> 00:28:19.460
that we define as a compostable function
it takes in some user preference data

00:28:19.460 --> 00:28:19.470
it takes in some user preference data
 

00:28:19.470 --> 00:28:22.010
it takes in some user preference data
and ultimately it will emit a spinner

00:28:22.010 --> 00:28:22.020
and ultimately it will emit a spinner
 

00:28:22.020 --> 00:28:24.470
and ultimately it will emit a spinner
which has some set of options that are

00:28:24.470 --> 00:28:24.480
which has some set of options that are
 

00:28:24.480 --> 00:28:25.490
which has some set of options that are
available to the user

00:28:25.490 --> 00:28:25.500
available to the user
 

00:28:25.500 --> 00:28:28.610
available to the user
notice that the spinners data is set by

00:28:28.610 --> 00:28:28.620
notice that the spinners data is set by
 

00:28:28.620 --> 00:28:30.890
notice that the spinners data is set by
the selected parameter so the food

00:28:30.890 --> 00:28:30.900
the selected parameter so the food
 

00:28:30.900 --> 00:28:32.780
the selected parameter so the food
favorite food of the user is passed

00:28:32.780 --> 00:28:32.790
favorite food of the user is passed
 

00:28:32.790 --> 00:28:34.250
favorite food of the user is passed
directly to the spinner the parent

00:28:34.250 --> 00:28:34.260
directly to the spinner the parent
 

00:28:34.260 --> 00:28:36.050
directly to the spinner the parent
widget in this case food preferences is

00:28:36.050 --> 00:28:36.060
widget in this case food preferences is
 

00:28:36.060 --> 00:28:37.670
widget in this case food preferences is
in control of what the spinner is

00:28:37.670 --> 00:28:37.680
in control of what the spinner is
 

00:28:37.680 --> 00:28:41.360
in control of what the spinner is
showing and when this spinner has a user

00:28:41.360 --> 00:28:41.370
showing and when this spinner has a user
 

00:28:41.370 --> 00:28:42.650
showing and when this spinner has a user
indicate that they want to make a change

00:28:42.650 --> 00:28:42.660
indicate that they want to make a change
 

00:28:42.660 --> 00:28:46.040
indicate that they want to make a change
the user can then execute the unchanged

00:28:46.040 --> 00:28:46.050
the user can then execute the unchanged
 

00:28:46.050 --> 00:28:48.260
the user can then execute the unchanged
code which will result in the data being

00:28:48.260 --> 00:28:48.270
code which will result in the data being
 

00:28:48.270 --> 00:28:50.330
code which will result in the data being
updated the spinner doesn't know which

00:28:50.330 --> 00:28:50.340
updated the spinner doesn't know which
 

00:28:50.340 --> 00:28:51.950
updated the spinner doesn't know which
data is being updated or what to do it

00:28:51.950 --> 00:28:51.960
data is being updated or what to do it
 

00:28:51.960 --> 00:28:54.200
data is being updated or what to do it
just calls unchanged when the data does

00:28:54.200 --> 00:28:54.210
just calls unchanged when the data does
 

00:28:54.210 --> 00:28:56.690
just calls unchanged when the data does
get updated this compose function will

00:28:56.690 --> 00:28:56.700
get updated this compose function will
 

00:28:56.700 --> 00:28:57.620
get updated this compose function will
get recomposed

00:28:57.620 --> 00:28:57.630
get recomposed
 

00:28:57.630 --> 00:29:01.930
get recomposed
and the new selected value will be set

00:29:01.930 --> 00:29:01.940
and the new selected value will be set
 

00:29:01.940 --> 00:29:05.150
and the new selected value will be set
we can apply the same approach to text

00:29:05.150 --> 00:29:05.160
we can apply the same approach to text
 

00:29:05.160 --> 00:29:07.700
we can apply the same approach to text
so in this case we have an editable text

00:29:07.700 --> 00:29:07.710
so in this case we have an editable text
 

00:29:07.710 --> 00:29:10.460
so in this case we have an editable text
for the users name and all that the

00:29:10.460 --> 00:29:10.470
for the users name and all that the
 

00:29:10.470 --> 00:29:12.440
for the users name and all that the
unchanged handler does is set the name

00:29:12.440 --> 00:29:12.450
unchanged handler does is set the name
 

00:29:12.450 --> 00:29:15.410
unchanged handler does is set the name
this looks pretty generic and you might

00:29:15.410 --> 00:29:15.420
this looks pretty generic and you might
 

00:29:15.420 --> 00:29:17.330
this looks pretty generic and you might
wonder why the editable text couldn't

00:29:17.330 --> 00:29:17.340
wonder why the editable text couldn't
 

00:29:17.340 --> 00:29:20.480
wonder why the editable text couldn't
just set the text itself but maintaining

00:29:20.480 --> 00:29:20.490
just set the text itself but maintaining
 

00:29:20.490 --> 00:29:22.130
just set the text itself but maintaining
this one-way data flow allows us to do

00:29:22.130 --> 00:29:22.140
this one-way data flow allows us to do
 

00:29:22.140 --> 00:29:23.930
this one-way data flow allows us to do
some really interesting things for

00:29:23.930 --> 00:29:23.940
some really interesting things for
 

00:29:23.940 --> 00:29:26.060
some really interesting things for
example if we have a phone number

00:29:26.060 --> 00:29:26.070
example if we have a phone number
 

00:29:26.070 --> 00:29:29.060
example if we have a phone number
preferences then when a new potential

00:29:29.060 --> 00:29:29.070
preferences then when a new potential
 

00:29:29.070 --> 00:29:32.180
preferences then when a new potential
value comes in we can do filtering we

00:29:32.180 --> 00:29:32.190
value comes in we can do filtering we
 

00:29:32.190 --> 00:29:35.030
value comes in we can do filtering we
can invalid any invalid characters and

00:29:35.030 --> 00:29:35.040
can invalid any invalid characters and
 

00:29:35.040 --> 00:29:36.950
can invalid any invalid characters and
then we can format the phone number so

00:29:36.950 --> 00:29:36.960
then we can format the phone number so
 

00:29:36.960 --> 00:29:38.810
then we can format the phone number so
that it looks nice when the user is

00:29:38.810 --> 00:29:38.820
that it looks nice when the user is
 

00:29:38.820 --> 00:29:40.940
that it looks nice when the user is
typing it in and then we set the data

00:29:40.940 --> 00:29:40.950
typing it in and then we set the data
 

00:29:40.950 --> 00:29:42.940
typing it in and then we set the data
model to the new formatted phone number

00:29:42.940 --> 00:29:42.950
model to the new formatted phone number
 

00:29:42.950 --> 00:29:45.560
model to the new formatted phone number
again this will trigger a recomposition

00:29:45.560 --> 00:29:45.570
again this will trigger a recomposition
 

00:29:45.570 --> 00:29:47.810
again this will trigger a recomposition
which will cause the editable text to

00:29:47.810 --> 00:29:47.820
which will cause the editable text to
 

00:29:47.820 --> 00:29:53.120
which will cause the editable text to
show the new value all right so let's go

00:29:53.120 --> 00:29:53.130
show the new value all right so let's go
 

00:29:53.130 --> 00:29:54.440
show the new value all right so let's go
ahead and go back to some of our goals

00:29:54.440 --> 00:29:54.450
ahead and go back to some of our goals
 

00:29:54.450 --> 00:29:55.910
ahead and go back to some of our goals
from the beginning that we listed

00:29:55.910 --> 00:29:55.920
from the beginning that we listed
 

00:29:55.920 --> 00:29:57.800
from the beginning that we listed
through did we actually meet some of

00:29:57.800 --> 00:29:57.810
through did we actually meet some of
 

00:29:57.810 --> 00:29:59.510
through did we actually meet some of
those goals and I kind of think we did

00:29:59.510 --> 00:29:59.520
those goals and I kind of think we did
 

00:29:59.520 --> 00:30:02.420
those goals and I kind of think we did
so in order to meet our unbundling goals

00:30:02.420 --> 00:30:02.430
so in order to meet our unbundling goals
 

00:30:02.430 --> 00:30:05.660
so in order to meet our unbundling goals
we're open sourcing a new UI API and

00:30:05.660 --> 00:30:05.670
we're open sourcing a new UI API and
 

00:30:05.670 --> 00:30:09.590
we're open sourcing a new UI API and
component set for jetpack we've offered

00:30:09.590 --> 00:30:09.600
component set for jetpack we've offered
 

00:30:09.600 --> 00:30:11.390
component set for jetpack we've offered
composable functions that scale across

00:30:11.390 --> 00:30:11.400
composable functions that scale across
 

00:30:11.400 --> 00:30:13.370
composable functions that scale across
these layers of abstraction a composable

00:30:13.370 --> 00:30:13.380
these layers of abstraction a composable
 

00:30:13.380 --> 00:30:15.230
these layers of abstraction a composable
function can do the same sorts of jobs

00:30:15.230 --> 00:30:15.240
function can do the same sorts of jobs
 

00:30:15.240 --> 00:30:17.600
function can do the same sorts of jobs
as a fragment or as a custom view group

00:30:17.600 --> 00:30:17.610
as a fragment or as a custom view group
 

00:30:17.610 --> 00:30:19.400
as a fragment or as a custom view group
or even as something as small as a

00:30:19.400 --> 00:30:19.410
or even as something as small as a
 

00:30:19.410 --> 00:30:22.549
or even as something as small as a
single button

00:30:22.549 --> 00:30:22.559
 

00:30:22.559 --> 00:30:24.659
we've kind of established this guideline

00:30:24.659 --> 00:30:24.669
we've kind of established this guideline
 

00:30:24.669 --> 00:30:27.480
we've kind of established this guideline
of one way observable data flow as a

00:30:27.480 --> 00:30:27.490
of one way observable data flow as a
 

00:30:27.490 --> 00:30:29.370
of one way observable data flow as a
first class concept and we're building

00:30:29.370 --> 00:30:29.380
first class concept and we're building
 

00:30:29.380 --> 00:30:31.260
first class concept and we're building
the system to make it easy to sort of

00:30:31.260 --> 00:30:31.270
the system to make it easy to sort of
 

00:30:31.270 --> 00:30:34.890
the system to make it easy to sort of
stay on this happy path and finally you

00:30:34.890 --> 00:30:34.900
stay on this happy path and finally you
 

00:30:34.900 --> 00:30:36.480
stay on this happy path and finally you
have less code and you can keep it in

00:30:36.480 --> 00:30:36.490
have less code and you can keep it in
 

00:30:36.490 --> 00:30:38.220
have less code and you can keep it in
one place you don't have to split your

00:30:38.220 --> 00:30:38.230
one place you don't have to split your
 

00:30:38.230 --> 00:30:40.200
one place you don't have to split your
focus across multiple files just to

00:30:40.200 --> 00:30:40.210
focus across multiple files just to
 

00:30:40.210 --> 00:30:45.659
focus across multiple files just to
write a piece of your UI okay that was a

00:30:45.659 --> 00:30:45.669
write a piece of your UI okay that was a
 

00:30:45.669 --> 00:30:47.970
write a piece of your UI okay that was a
lot of information in one short talk and

00:30:47.970 --> 00:30:47.980
lot of information in one short talk and
 

00:30:47.980 --> 00:30:49.070
lot of information in one short talk and
we're only just scratching the surface

00:30:49.070 --> 00:30:49.080
we're only just scratching the surface
 

00:30:49.080 --> 00:30:51.690
we're only just scratching the surface
some of you looked excited and others

00:30:51.690 --> 00:30:51.700
some of you looked excited and others
 

00:30:51.700 --> 00:30:53.610
some of you looked excited and others
might have a lot of questions for

00:30:53.610 --> 00:30:53.620
might have a lot of questions for
 

00:30:53.620 --> 00:30:59.060
might have a lot of questions for
example what about view compatibility

00:30:59.060 --> 00:30:59.070
example what about view compatibility
 

00:30:59.070 --> 00:31:01.260
example what about view compatibility
will this work with the existing views

00:31:01.260 --> 00:31:01.270
will this work with the existing views
 

00:31:01.270 --> 00:31:02.909
will this work with the existing views
in like how do i integrate this into my

00:31:02.909 --> 00:31:02.919
in like how do i integrate this into my
 

00:31:02.919 --> 00:31:06.269
in like how do i integrate this into my
application so one of the things that

00:31:06.269 --> 00:31:06.279
application so one of the things that
 

00:31:06.279 --> 00:31:09.149
application so one of the things that
you can do is have a annotation that

00:31:09.149 --> 00:31:09.159
you can do is have a annotation that
 

00:31:09.159 --> 00:31:11.100
you can do is have a annotation that
indicates that this code should be

00:31:11.100 --> 00:31:11.110
indicates that this code should be
 

00:31:11.110 --> 00:31:14.100
indicates that this code should be
usable from within a Android view and

00:31:14.100 --> 00:31:14.110
usable from within a Android view and
 

00:31:14.110 --> 00:31:16.529
usable from within a Android view and
when you do that it'll generate a view

00:31:16.529 --> 00:31:16.539
when you do that it'll generate a view
 

00:31:16.539 --> 00:31:18.720
when you do that it'll generate a view
class this class is just a standard view

00:31:18.720 --> 00:31:18.730
class this class is just a standard view
 

00:31:18.730 --> 00:31:20.130
class this class is just a standard view
like any other from your composable

00:31:20.130 --> 00:31:20.140
like any other from your composable
 

00:31:20.140 --> 00:31:23.010
like any other from your composable
function it and you can use it from xml

00:31:23.010 --> 00:31:23.020
function it and you can use it from xml
 

00:31:23.020 --> 00:31:26.789
function it and you can use it from xml
as shown below or you can call the find

00:31:26.789 --> 00:31:26.799
as shown below or you can call the find
 

00:31:26.799 --> 00:31:28.769
as shown below or you can call the find
view by ID and get a reference to the

00:31:28.769 --> 00:31:28.779
view by ID and get a reference to the
 

00:31:28.779 --> 00:31:32.480
view by ID and get a reference to the
node and pass data directly to the view

00:31:32.480 --> 00:31:32.490
node and pass data directly to the view
 

00:31:32.490 --> 00:31:38.610
node and pass data directly to the view
you can also yeah there's other things

00:31:38.610 --> 00:31:38.620
you can also yeah there's other things
 

00:31:38.620 --> 00:31:40.710
you can also yeah there's other things
that might be interesting to you for

00:31:40.710 --> 00:31:40.720
that might be interesting to you for
 

00:31:40.720 --> 00:31:42.480
that might be interesting to you for
example we've been giving a lot of

00:31:42.480 --> 00:31:42.490
example we've been giving a lot of
 

00:31:42.490 --> 00:31:44.279
example we've been giving a lot of
thought to how layout editor and preview

00:31:44.279 --> 00:31:44.289
thought to how layout editor and preview
 

00:31:44.289 --> 00:31:46.230
thought to how layout editor and preview
tool would work if you're giving a lot

00:31:46.230 --> 00:31:46.240
tool would work if you're giving a lot
 

00:31:46.240 --> 00:31:48.360
tool would work if you're giving a lot
of thought to animation Styles themes

00:31:48.360 --> 00:31:48.370
of thought to animation Styles themes
 

00:31:48.370 --> 00:31:50.220
of thought to animation Styles themes
and constraint layout all of these

00:31:50.220 --> 00:31:50.230
and constraint layout all of these
 

00:31:50.230 --> 00:31:51.779
and constraint layout all of these
things are really important to get right

00:31:51.779 --> 00:31:51.789
things are really important to get right
 

00:31:51.789 --> 00:31:53.639
things are really important to get right
before we go with a stable release and

00:31:53.639 --> 00:31:53.649
before we go with a stable release and
 

00:31:53.649 --> 00:31:55.889
before we go with a stable release and
so we're gonna make sure that we have

00:31:55.889 --> 00:31:55.899
so we're gonna make sure that we have
 

00:31:55.899 --> 00:31:57.360
so we're gonna make sure that we have
support for everything that you would

00:31:57.360 --> 00:31:57.370
support for everything that you would
 

00:31:57.370 --> 00:32:00.090
support for everything that you would
need to build beautiful applications and

00:32:00.090 --> 00:32:00.100
need to build beautiful applications and
 

00:32:00.100 --> 00:32:01.560
need to build beautiful applications and
we're still thinking about a lot of

00:32:01.560 --> 00:32:01.570
we're still thinking about a lot of
 

00:32:01.570 --> 00:32:02.669
we're still thinking about a lot of
other things we're continuing this

00:32:02.669 --> 00:32:02.679
other things we're continuing this
 

00:32:02.679 --> 00:32:04.799
other things we're continuing this
exploration we have ideas around

00:32:04.799 --> 00:32:04.809
exploration we have ideas around
 

00:32:04.809 --> 00:32:06.450
exploration we have ideas around
multi-threaded layout around

00:32:06.450 --> 00:32:06.460
multi-threaded layout around
 

00:32:06.460 --> 00:32:08.460
multi-threaded layout around
asynchronous parallel execution of

00:32:08.460 --> 00:32:08.470
asynchronous parallel execution of
 

00:32:08.470 --> 00:32:10.169
asynchronous parallel execution of
composable functions around memoization

00:32:10.169 --> 00:32:10.179
composable functions around memoization
 

00:32:10.179 --> 00:32:13.049
composable functions around memoization
and much more all of these things become

00:32:13.049 --> 00:32:13.059
and much more all of these things become
 

00:32:13.059 --> 00:32:14.970
and much more all of these things become
feasible because of the declarative

00:32:14.970 --> 00:32:14.980
feasible because of the declarative
 

00:32:14.980 --> 00:32:16.560
feasible because of the declarative
programming model and we encourage you

00:32:16.560 --> 00:32:16.570
programming model and we encourage you
 

00:32:16.570 --> 00:32:18.090
programming model and we encourage you
to start exploring these ideas with us

00:32:18.090 --> 00:32:18.100
to start exploring these ideas with us
 

00:32:18.100 --> 00:32:23.159
to start exploring these ideas with us
we'd love to hear your ideas alright I

00:32:23.159 --> 00:32:23.169
we'd love to hear your ideas alright I
 

00:32:23.169 --> 00:32:25.769
we'd love to hear your ideas alright I
just want to make one clarification you

00:32:25.769 --> 00:32:25.779
just want to make one clarification you
 

00:32:25.779 --> 00:32:27.389
just want to make one clarification you
saw an example jetpack compost that was

00:32:27.389 --> 00:32:27.399
saw an example jetpack compost that was
 

00:32:27.399 --> 00:32:29.220
saw an example jetpack compost that was
using a spinner we don't have a spinner

00:32:29.220 --> 00:32:29.230
using a spinner we don't have a spinner
 

00:32:29.230 --> 00:32:31.740
using a spinner we don't have a spinner
yet and it won't be called spinner so

00:32:31.740 --> 00:32:31.750
yet and it won't be called spinner so
 

00:32:31.750 --> 00:32:33.010
yet and it won't be called spinner so
that was just you know

00:32:33.010 --> 00:32:33.020
that was just you know
 

00:32:33.020 --> 00:32:35.169
that was just you know
how are people going to understand what

00:32:35.169 --> 00:32:35.179
how are people going to understand what
 

00:32:35.179 --> 00:32:38.649
how are people going to understand what
you use but if you really want one you

00:32:38.649 --> 00:32:38.659
you use but if you really want one you
 

00:32:38.659 --> 00:32:41.380
you use but if you really want one you
can build one that's the whole point

00:32:41.380 --> 00:32:41.390
can build one that's the whole point
 

00:32:41.390 --> 00:32:43.000
can build one that's the whole point
yeah so just so like I just want to

00:32:43.000 --> 00:32:43.010
yeah so just so like I just want to
 

00:32:43.010 --> 00:32:44.320
yeah so just so like I just want to
reiterate that here one of the key

00:32:44.320 --> 00:32:44.330
reiterate that here one of the key
 

00:32:44.330 --> 00:32:46.480
reiterate that here one of the key
elements is well toukyo means that every

00:32:46.480 --> 00:32:46.490
elements is well toukyo means that every
 

00:32:46.490 --> 00:32:48.430
elements is well toukyo means that every
live first composition if you go look at

00:32:48.430 --> 00:32:48.440
live first composition if you go look at
 

00:32:48.440 --> 00:32:50.289
live first composition if you go look at
the source code in ASP you can look at

00:32:50.289 --> 00:32:50.299
the source code in ASP you can look at
 

00:32:50.299 --> 00:32:51.940
the source code in ASP you can look at
how some of the widgets were implemented

00:32:51.940 --> 00:32:51.950
how some of the widgets were implemented
 

00:32:51.950 --> 00:32:54.220
how some of the widgets were implemented
and you'll see they are dead simple when

00:32:54.220 --> 00:32:54.230
and you'll see they are dead simple when
 

00:32:54.230 --> 00:32:55.389
and you'll see they are dead simple when
you still have to write some code but

00:32:55.389 --> 00:32:55.399
you still have to write some code but
 

00:32:55.399 --> 00:32:56.649
you still have to write some code but
should I get the check box for instance

00:32:56.649 --> 00:32:56.659
should I get the check box for instance
 

00:32:56.659 --> 00:32:58.269
should I get the check box for instance
it's just a few lines of code and

00:32:58.269 --> 00:32:58.279
it's just a few lines of code and
 

00:32:58.279 --> 00:33:00.430
it's just a few lines of code and
everything each user is available to you

00:33:00.430 --> 00:33:00.440
everything each user is available to you
 

00:33:00.440 --> 00:33:02.799
everything each user is available to you
to create your own the only way data

00:33:02.799 --> 00:33:02.809
to create your own the only way data
 

00:33:02.809 --> 00:33:04.690
to create your own the only way data
flow model is also really important

00:33:04.690 --> 00:33:04.700
flow model is also really important
 

00:33:04.700 --> 00:33:06.279
flow model is also really important
because a lot of the bugs and a lot of

00:33:06.279 --> 00:33:06.289
because a lot of the bugs and a lot of
 

00:33:06.289 --> 00:33:07.810
because a lot of the bugs and a lot of
it'll burn up late in your code comes

00:33:07.810 --> 00:33:07.820
it'll burn up late in your code comes
 

00:33:07.820 --> 00:33:10.180
it'll burn up late in your code comes
from trying to keep two data models in

00:33:10.180 --> 00:33:10.190
from trying to keep two data models in
 

00:33:10.190 --> 00:33:12.580
from trying to keep two data models in
sync at all time and M is that up all

00:33:12.580 --> 00:33:12.590
sync at all time and M is that up all
 

00:33:12.590 --> 00:33:14.380
sync at all time and M is that up all
the time and I'm sure you do as well so

00:33:14.380 --> 00:33:14.390
the time and I'm sure you do as well so
 

00:33:14.390 --> 00:33:15.639
the time and I'm sure you do as well so
we just got rid of the pollen all

00:33:15.639 --> 00:33:15.649
we just got rid of the pollen all
 

00:33:15.649 --> 00:33:17.529
we just got rid of the pollen all
together so that that Campos is not

00:33:17.529 --> 00:33:17.539
together so that that Campos is not
 

00:33:17.539 --> 00:33:19.060
together so that that Campos is not
ready to ship yet we've established that

00:33:19.060 --> 00:33:19.070
ready to ship yet we've established that
 

00:33:19.070 --> 00:33:20.710
ready to ship yet we've established that
please go take a look at the source code

00:33:20.710 --> 00:33:20.720
please go take a look at the source code
 

00:33:20.720 --> 00:33:23.350
please go take a look at the source code
if you go to d dot android.com slash

00:33:23.350 --> 00:33:23.360
if you go to d dot android.com slash
 

00:33:23.360 --> 00:33:25.930
if you go to d dot android.com slash
jetpack campos we have explanations we

00:33:25.930 --> 00:33:25.940
jetpack campos we have explanations we
 

00:33:25.940 --> 00:33:28.570
jetpack campos we have explanations we
have a readme that explain how to source

00:33:28.570 --> 00:33:28.580
have a readme that explain how to source
 

00:33:28.580 --> 00:33:30.250
have a readme that explain how to source
trees architectured you can run a

00:33:30.250 --> 00:33:30.260
trees architectured you can run a
 

00:33:30.260 --> 00:33:31.810
trees architectured you can run a
special version of Android studio that

00:33:31.810 --> 00:33:31.820
special version of Android studio that
 

00:33:31.820 --> 00:33:33.760
special version of Android studio that
will let you play with it compile it we

00:33:33.760 --> 00:33:33.770
will let you play with it compile it we
 

00:33:33.770 --> 00:33:35.260
will let you play with it compile it we
have a few demos that are available you

00:33:35.260 --> 00:33:35.270
have a few demos that are available you
 

00:33:35.270 --> 00:33:37.630
have a few demos that are available you
can look at the entire source tree but

00:33:37.630 --> 00:33:37.640
can look at the entire source tree but
 

00:33:37.640 --> 00:33:40.299
can look at the entire source tree but
in the meantime you can get ready before

00:33:40.299 --> 00:33:40.309
in the meantime you can get ready before
 

00:33:40.309 --> 00:33:41.830
in the meantime you can get ready before
this becomes available so one thing you

00:33:41.830 --> 00:33:41.840
this becomes available so one thing you
 

00:33:41.840 --> 00:33:43.720
this becomes available so one thing you
can do is just play with it but you can

00:33:43.720 --> 00:33:43.730
can do is just play with it but you can
 

00:33:43.730 --> 00:33:44.919
can do is just play with it but you can
also try to structure your application

00:33:44.919 --> 00:33:44.929
also try to structure your application
 

00:33:44.929 --> 00:33:47.169
also try to structure your application
to try to fold this one way the airflow

00:33:47.169 --> 00:33:47.179
to try to fold this one way the airflow
 

00:33:47.179 --> 00:33:49.480
to try to fold this one way the airflow
model so one thing you can do already is

00:33:49.480 --> 00:33:49.490
model so one thing you can do already is
 

00:33:49.490 --> 00:33:51.580
model so one thing you can do already is
try to eliminate all the fun you bodies

00:33:51.580 --> 00:33:51.590
try to eliminate all the fun you bodies
 

00:33:51.590 --> 00:33:53.230
try to eliminate all the fun you bodies
you have because every time you do this

00:33:53.230 --> 00:33:53.240
you have because every time you do this
 

00:33:53.240 --> 00:33:55.149
you have because every time you do this
it's almost the code smell especially if

00:33:55.149 --> 00:33:55.159
it's almost the code smell especially if
 

00:33:55.159 --> 00:33:57.220
it's almost the code smell especially if
you called get on a view that means

00:33:57.220 --> 00:33:57.230
you called get on a view that means
 

00:33:57.230 --> 00:33:58.690
you called get on a view that means
you're trying to synchronize the data

00:33:58.690 --> 00:33:58.700
you're trying to synchronize the data
 

00:33:58.700 --> 00:34:00.549
you're trying to synchronize the data
model of the view with the data model of

00:34:00.549 --> 00:34:00.559
model of the view with the data model of
 

00:34:00.559 --> 00:34:02.139
model of the view with the data model of
your application and this is a potential

00:34:02.139 --> 00:34:02.149
your application and this is a potential
 

00:34:02.149 --> 00:34:04.120
your application and this is a potential
source of bugs and you won't be able to

00:34:04.120 --> 00:34:04.130
source of bugs and you won't be able to
 

00:34:04.130 --> 00:34:05.019
source of bugs and you won't be able to
do this anymore

00:34:05.019 --> 00:34:05.029
do this anymore
 

00:34:05.029 --> 00:34:07.299
do this anymore
in jetpack compos because your functions

00:34:07.299 --> 00:34:07.309
in jetpack compos because your functions
 

00:34:07.309 --> 00:34:09.339
in jetpack compos because your functions
are composable so just emit a new tree

00:34:09.339 --> 00:34:09.349
are composable so just emit a new tree
 

00:34:09.349 --> 00:34:12.790
are composable so just emit a new tree
at no point can you get a handle on the

00:34:12.790 --> 00:34:12.800
at no point can you get a handle on the
 

00:34:12.800 --> 00:34:15.220
at no point can you get a handle on the
actual you know not physical but the

00:34:15.220 --> 00:34:15.230
actual you know not physical but the
 

00:34:15.230 --> 00:34:17.169
actual you know not physical but the
actual new view object that will be put

00:34:17.169 --> 00:34:17.179
actual new view object that will be put
 

00:34:17.179 --> 00:34:20.109
actual new view object that will be put
on screen so you need to get rid of this

00:34:20.109 --> 00:34:20.119
on screen so you need to get rid of this
 

00:34:20.119 --> 00:34:24.820
on screen so you need to get rid of this
habit like basically right now also you

00:34:24.820 --> 00:34:24.830
habit like basically right now also you
 

00:34:24.830 --> 00:34:26.290
habit like basically right now also you
can start working at architectural

00:34:26.290 --> 00:34:26.300
can start working at architectural
 

00:34:26.300 --> 00:34:27.730
can start working at architectural
components how many of you are using the

00:34:27.730 --> 00:34:27.740
components how many of you are using the
 

00:34:27.740 --> 00:34:29.260
components how many of you are using the
art components in one form or another

00:34:29.260 --> 00:34:29.270
art components in one form or another
 

00:34:29.270 --> 00:34:32.109
art components in one form or another
all right you are all awesome everybody

00:34:32.109 --> 00:34:32.119
all right you are all awesome everybody
 

00:34:32.119 --> 00:34:34.149
all right you are all awesome everybody
who didn't raise their hands like run

00:34:34.149 --> 00:34:34.159
who didn't raise their hands like run
 

00:34:34.159 --> 00:34:36.070
who didn't raise their hands like run
back to your to your desk and go fix

00:34:36.070 --> 00:34:36.080
back to your to your desk and go fix
 

00:34:36.080 --> 00:34:38.440
back to your to your desk and go fix
that please so you have several things

00:34:38.440 --> 00:34:38.450
that please so you have several things
 

00:34:38.450 --> 00:34:39.970
that please so you have several things
you can use that view model and life

00:34:39.970 --> 00:34:39.980
you can use that view model and life
 

00:34:39.980 --> 00:34:41.710
you can use that view model and life
data but there are also other solutions

00:34:41.710 --> 00:34:41.720
data but there are also other solutions
 

00:34:41.720 --> 00:34:44.250
data but there are also other solutions
out there so please try to use those

00:34:44.250 --> 00:34:44.260
out there so please try to use those
 

00:34:44.260 --> 00:34:46.440
out there so please try to use those
and now we have a few minutes left so

00:34:46.440 --> 00:34:46.450
and now we have a few minutes left so
 

00:34:46.450 --> 00:34:48.089
and now we have a few minutes left so
here's the URL that you can check out if

00:34:48.089 --> 00:34:48.099
here's the URL that you can check out if
 

00:34:48.099 --> 00:34:49.409
here's the URL that you can check out if
you want to know more and sure to find

00:34:49.409 --> 00:34:49.419
you want to know more and sure to find
 

00:34:49.419 --> 00:34:50.020
you want to know more and sure to find
the source tree

00:34:50.020 --> 00:34:50.030
the source tree
 

00:34:50.030 --> 00:35:11.929
the source tree
[Music]

