WEBVTT
Kind: captions
Language: en

00:00:00.500 --> 00:00:02.460
Project Tango runs
on Android devices.

00:00:02.460 --> 00:00:04.110
And you can use the
same tools that you

00:00:04.110 --> 00:00:06.400
use to develop regular
apps to respond

00:00:06.400 --> 00:00:10.230
to changes in the device
position and orientation.

00:00:10.230 --> 00:00:10.730
Hi.

00:00:10.730 --> 00:00:11.831
My name is Nikolai.

00:00:11.831 --> 00:00:13.580
And in this episode,
I'm going to show you

00:00:13.580 --> 00:00:16.000
how to use the Java
programming language, Android

00:00:16.000 --> 00:00:20.170
Studio, and the Rajawali
Java 3D Graphics Library

00:00:20.170 --> 00:00:22.490
to implement motion tracking.

00:00:22.490 --> 00:00:24.630
In this demo, we are
going to move around

00:00:24.630 --> 00:00:27.030
a sample cityscape using
the pose data that we

00:00:27.030 --> 00:00:29.100
get from the motion
tracking system.

00:00:29.100 --> 00:00:31.080
Let's get started.

00:00:31.080 --> 00:00:33.900
Once you're set up,
launch Android Studio

00:00:33.900 --> 00:00:36.630
and import the motion
tracking Java project.

00:00:36.630 --> 00:00:40.280
You can see the App folder,
which contains the demo app.

00:00:40.280 --> 00:00:43.390
And above that, you will
see the Tango Utils folder,

00:00:43.390 --> 00:00:45.820
which is used to expose
the motion tracking data

00:00:45.820 --> 00:00:48.910
in a format the Rajawali
library can use.

00:00:48.910 --> 00:00:52.510
In the AndroidManifest.XML
file, we

00:00:52.510 --> 00:00:54.940
request the permission
for the camera,

00:00:54.940 --> 00:00:58.270
add the user's library
element for Project Tango,

00:00:58.270 --> 00:01:03.060
and disable automatic
screen orientation.

00:01:03.060 --> 00:01:05.140
We will use the app's
Gradle build script

00:01:05.140 --> 00:01:10.140
to wire up the Tango SDK,
Rajawali, and Tango Utils.

00:01:10.140 --> 00:01:16.600
In the script, we add the SDK
here, the utilities library,

00:01:16.600 --> 00:01:20.680
and lastly, the
Rajawali library.

00:01:20.680 --> 00:01:24.860
Before we start, we will
add a Rajawali surface view

00:01:24.860 --> 00:01:29.090
to the Layout XML
file in the project.

00:01:29.090 --> 00:01:32.770
This view will be used to render
the 3D content on the screen.

00:01:32.770 --> 00:01:35.060
In the motion tracking
activity class,

00:01:35.060 --> 00:01:37.190
we have created a
reference to this view

00:01:37.190 --> 00:01:39.930
to be used later by
our render object.

00:01:39.930 --> 00:01:43.100
To render our cityscape
scene with Rajawali,

00:01:43.100 --> 00:01:47.070
we need to extend the Rajawali
renderer abstract class.

00:01:47.070 --> 00:01:49.460
And we do that in
the motion tracking

00:01:49.460 --> 00:01:52.120
Rajawali renderer file.

00:01:52.120 --> 00:01:54.820
This class will allow us
to configure what to show

00:01:54.820 --> 00:01:56.312
and how to render it.

00:01:56.312 --> 00:01:58.020
First, we set up the
lights for the scene

00:01:58.020 --> 00:01:59.825
so the 3D objects
will be visible.

00:02:02.560 --> 00:02:08.050
Then we import a 3D object,
the cityscape, as an OBJ file

00:02:08.050 --> 00:02:09.580
and render that in the scene.

00:02:12.480 --> 00:02:14.450
We need to set the
position of the 3D world

00:02:14.450 --> 00:02:16.140
relative to the device.

00:02:16.140 --> 00:02:19.860
Motion checking in Project
Tango always starts at the 000

00:02:19.860 --> 00:02:24.190
coordinate, the origin,
and that will, by default,

00:02:24.190 --> 00:02:27.000
be the ground plane
for the 3D world.

00:02:27.000 --> 00:02:30.440
However, we want the city to
be aligned with the floor.

00:02:30.440 --> 00:02:34.410
And since I hold the device
1.3 meters above the floor,

00:02:34.410 --> 00:02:40.380
I set the height offset
to minus 1.3 meters here.

00:02:40.380 --> 00:02:42.680
You might want to change
that value to something

00:02:42.680 --> 00:02:44.580
that works for you.

00:02:44.580 --> 00:02:48.000
This is where we update the
pose in the rendered scene.

00:02:48.000 --> 00:02:49.960
And we use the
utilities function

00:02:49.960 --> 00:02:53.050
to convert the pose data
to Rajawali's camera

00:02:53.050 --> 00:02:56.990
pose In the main
activity class, we now

00:02:56.990 --> 00:03:01.460
connect the renderer to the
RenderView in the setup GL view

00:03:01.460 --> 00:03:03.660
and renderer helper function.

00:03:03.660 --> 00:03:06.240
And to receive the data
from Project Tango,

00:03:06.240 --> 00:03:08.360
we need a reference
to the tango object.

00:03:08.360 --> 00:03:11.910
And we call new tango
to get this object.

00:03:11.910 --> 00:03:14.970
We also need a reference to
the tango configuration object,

00:03:14.970 --> 00:03:18.420
which we get from calling our
helper function setup tango

00:03:18.420 --> 00:03:19.380
config.

00:03:19.380 --> 00:03:21.870
Now we set up the Project
Tango event listeners

00:03:21.870 --> 00:03:24.380
in order to receive
the pose updates.

00:03:24.380 --> 00:03:26.400
A pose is what
Project Tango uses

00:03:26.400 --> 00:03:29.300
to describe the user's
location in a 3D space.

00:03:29.300 --> 00:03:31.120
We also need to remember
to handle the life

00:03:31.120 --> 00:03:32.910
cycle of Project Tango.

00:03:32.910 --> 00:03:37.910
And we do that in the on
resume and on pause methods.

00:03:37.910 --> 00:03:40.470
When we get a new pose,
we update the camera

00:03:40.470 --> 00:03:44.230
in the Rajawali renderer here.

00:03:44.230 --> 00:03:47.750
This will make the camera
follow the motion of the device.

00:03:47.750 --> 00:03:51.670
Now we are ready to compile
and launch this project.

00:03:51.670 --> 00:03:54.390
Let's have a look at how that
works out on a Project Tango

00:03:54.390 --> 00:03:55.145
enabled device.

00:04:02.570 --> 00:04:03.990
And there you have it.

00:04:03.990 --> 00:04:06.220
Project Tango provides
mobile devices

00:04:06.220 --> 00:04:08.360
with three-dimensional
motion tracking,

00:04:08.360 --> 00:04:12.210
and Rajawali provides you with
an easy-to-use 3D rendering

00:04:12.210 --> 00:04:14.070
engine in Java.

00:04:14.070 --> 00:04:17.040
Visit our Google+ community
and join us in our journey.

00:04:17.040 --> 00:04:20.166
We are excited to see what you
will build with Project Tango.

00:04:20.166 --> 00:04:23.070
[MUSIC PLAYING]

