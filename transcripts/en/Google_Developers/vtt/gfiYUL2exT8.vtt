WEBVTT
Kind: captions
Language: en

00:00:03.600 --> 00:00:08.550
&gt;&gt;Chris DiBona: Hello, everyone.
My name is Chris DiBona. I am Google's open

00:00:08.550 --> 00:00:14.600
source person. And they have me moderate this
each year, at least until they replace me

00:00:14.600 --> 00:00:18.650
with someone better for next year.
I want to thank you all for coming.

00:00:18.650 --> 00:00:23.490
One of the really nice things about the Fireside
Chats is you get really direct access to the

00:00:23.490 --> 00:00:29.380
software engineers behind the software that
we all love, Android. And for the other Fireside

00:00:29.380 --> 00:00:32.570
Chats, other technologies that we're not going
to talk about.

00:00:32.570 --> 00:00:36.350
So that's actually a really special thing
in a lot of ways. And it's something that's

00:00:36.350 --> 00:00:40.530
very appealing to me as an open source person,
because, you know, at its core, engineers

00:00:40.530 --> 00:00:45.659
talking to engineers is what moves the entire
industry and computer science forward, and

00:00:45.659 --> 00:00:50.019
that's something that I very much believe
in. So we are going to start today by doing

00:00:50.019 --> 00:00:57.420
short introductions of our many, many panelists.
And we will take questions from the microphones

00:00:57.420 --> 00:01:02.030
you see in the room here. We will pay no attention
to you at all unless you are in front of a

00:01:02.030 --> 00:01:06.030
microphone, as well as from the moderator
instance that we set up.

00:01:06.030 --> 00:01:10.590
So let's go ahead and start with Dave.
&gt;&gt;Dave Sparks: Hi, I am Dave Sparks. I am

00:01:10.590 --> 00:01:19.180
the technical lead of the Android Media Framework,
that's media graphics, camera, video, stuff

00:01:19.180 --> 00:01:20.289
like that.
&gt;&gt;Rebecca Zavin: Hi, I am Rebecca Zavin, and

00:01:20.289 --> 00:01:28.200
I work on the Android Systems Team. We are
responsible for the Linux kernel and some

00:01:28.200 --> 00:01:29.200
of the other low-level software.
&gt;&gt;Dan Bornstein: I am Dan Bornstein. I am

00:01:29.200 --> 00:01:33.200
the tech lead for the Dalvik virtual machine
and core libraries, the layer above what Rebecca

00:01:33.200 --> 00:01:35.399
works on.
&gt;&gt;Ficus Kirkpatrick: I am Ficus Kirkpatrick.

00:01:35.399 --> 00:01:40.070
I work on Android Market.
&gt;&gt;Debajit Ghosh: I am Debajit Ghosh. I am

00:01:40.070 --> 00:01:46.190
the tech lead manager for Music Beta by Google.
I previously worked on the sync framework,

00:01:46.190 --> 00:01:51.600
Google sync integrations, and the cloud-to-device
messaging APIs that we released last year

00:01:51.600 --> 00:01:56.590
here at Google I/O.
&gt;&gt;Dianne Hackborn: I am Dianne Hackborn. I

00:01:56.590 --> 00:02:00.899
am the tech lead on the Android framework,
so that the activities, intents, and view

00:02:00.899 --> 00:02:04.200
hierarchy and stuff like that.
&gt;&gt;Xavier Ducrohet: Hi, I am Xavier Ducrohet.

00:02:04.200 --> 00:02:10.179
I am the lead for SDK on developer tools.
&gt;&gt;Andy Stadler: Hi, I am Andy Stadler. I have

00:02:10.179 --> 00:02:14.040
been working on Android enterprise apps for
quite a while now, but for the last few weeks

00:02:14.040 --> 00:02:18.670
I have been having a really good time building
apps for the Android@home initiative.

00:02:18.670 --> 00:02:23.750
&gt;&gt;Jeff Hamilton: Hi, I am Jeff Hamilton, and
I worked on a bunch of different things. Most

00:02:23.750 --> 00:02:29.810
recently I am working on the Android NFC stack.
&gt;&gt;Dan Morrill: I am Dan Morrill. I do open

00:02:29.810 --> 00:02:34.310
source and compatibility these days.
&gt;&gt;Chris DiBona: Thanks everyone.

00:02:34.310 --> 00:02:40.400
Just so you know, we will be transitioning
the last ten minutes of this talk for the

00:02:40.400 --> 00:02:45.611
iRobot folks to talk about their robots, because
we thought that would be fun, so just you

00:02:45.611 --> 00:02:48.450
should know that. So you should expect them
the last ten minutes of this talk.

00:02:48.450 --> 00:02:52.400
So let's go ahead and get started with the
interrogation.

00:02:52.400 --> 00:02:57.500
Again, please go to the mics if you want to
talk.

00:02:57.500 --> 00:03:01.350
When will developers from more countries be
able to open Android merchant accounts to

00:03:01.350 --> 00:03:04.070
sell their apps on the Android Market? What's
the schedule on that?

00:03:04.070 --> 00:03:08.690
I am trying to put some personality into this.
Any info would be appreciated. There are many

00:03:08.690 --> 00:03:13.060
developers waiting for this.
&gt;&gt;Ficus Kirkpatrick: We hear your concerns.

00:03:13.060 --> 00:03:21.480
We are actively working on launching market
in more regions, more countries, and there's

00:03:21.480 --> 00:03:25.090
actually some stuff coming up pretty soon
about this so I can't say anything about schedule

00:03:25.090 --> 00:03:30.410
right now, but very soon.
&gt;&gt;Chris DiBona: Thanks, Ficus.

00:03:30.410 --> 00:03:37.460
First mic, first person.
&gt;&gt; Hi. My question is it's actually about

00:03:37.460 --> 00:03:41.830
the new music beta. I don't know if this is
premature to ask, but as a software developer

00:03:41.830 --> 00:03:48.970
who has a music app out in the Android marketplace,
I'm wondering are developers going to have

00:03:48.970 --> 00:03:55.470
access to that as we do now with the media
libraries, or is that something that's going

00:03:55.470 --> 00:04:01.240
to be controlled by Google?
&gt;&gt;Debajit Ghosh: Should I repeat the question?

00:04:01.240 --> 00:04:05.490
&gt;&gt;Chris DiBona: No. They heard it.
&gt;&gt;Debajit Ghosh: As to developer APIs for

00:04:05.490 --> 00:04:12.760
Music Beta by Google, we don't have any open
APIs at this time.

00:04:12.760 --> 00:04:20.340
&gt;&gt; You realize that's going to sort of destroy
anybody who is doing a music app.

00:04:20.340 --> 00:04:21.340
&gt;&gt;Debajit Ghosh: Sorry; I am talking about
the cloud portion specifically.

00:04:21.340 --> 00:04:24.890
&gt;&gt; That's what I am talking about as well.
Until now, there has been no easy way of getting

00:04:24.890 --> 00:04:31.250
the music on the phone, and now there is,
and you are saying the libraries you have

00:04:31.250 --> 00:04:33.420
developed to do that, we won't have access.
to?

00:04:33.420 --> 00:04:38.130
&gt;&gt;Debajit Ghosh: No, the APIs that currently
exist will be supported. So like, for example,

00:04:38.130 --> 00:04:46.060
the media provider and so on will continue
to provide information as it currently does

00:04:46.060 --> 00:04:49.700
about music that is installed or present on
the SD card and so on.

00:04:49.700 --> 00:04:56.910
I don't know, and maybe you are not the right
person to know either what the behavior on

00:04:56.910 --> 00:05:07.040
the device S.
Do you know anything about this? So what will

00:05:07.040 --> 00:05:18.220
we do -- obviously if you are streaming music,
it may or may not appear in the provider.

00:05:18.220 --> 00:05:26.569
&gt;&gt; The music libraries as they stand, if somebody
has music on the phone they can play them

00:05:26.569 --> 00:05:30.659
in any developers' music player.
&gt;&gt;Dan Morrill: Right.

00:05:30.659 --> 00:05:44.750
&gt;&gt; So it would seem to me it would make sense
we should be able to do the same thing with

00:05:44.750 --> 00:05:54.100
the cloud if that's there, or if we are not
allowed to do that, then we are done.

00:05:54.100 --> 00:06:00.550
&gt;&gt;Dan Morrill: I don't think we have anybody,
like, representing the actual music library.

00:06:00.550 --> 00:06:12.600
I don't know what the behavior on the device
is, but the media provider, API and all that

00:06:12.600 --> 00:06:18.090
that exists on device must continue to function
in some way.

00:06:18.090 --> 00:06:27.370
So apps won't be completely broken but I don't
have an answer right now for what they will

00:06:27.370 --> 00:06:35.930
see.
&gt;&gt; What I am asking is will we have access

00:06:35.930 --> 00:06:42.419
to the cloud-based music service? Is that
a yes or no?

00:06:42.419 --> 00:06:48.600
&gt;&gt;Chris DiBona: I don't think he knows yet.
&gt;&gt; They don't know. Okay.

00:06:48.600 --> 00:07:03.041
Because as I say, it either seems like a major
opportunity or kind of the time to call it

00:07:03.041 --> 00:07:11.230
quits.
&gt;&gt;Chris DiBona: I have to admit, I don't see

00:07:11.230 --> 00:07:18.669
the latter as being as probable, I guess.
I think that having streaming music is really

00:07:18.669 --> 00:07:26.300
neat and important and stuff, but I don't
think it means the end to all on-device MP3

00:07:26.300 --> 00:07:29.630
files and all on-device music players.
Maybe I am not as pessimistic as you are,

00:07:29.630 --> 00:07:42.660
or as optimistic as you are about our chances,
but, I mean -- I don't mean that in a mean

00:07:42.660 --> 00:07:55.280
way. I just don't think it's the end of music
just because we start doing streaming.

00:07:55.280 --> 00:08:03.460
&gt;&gt; No, I don't think it's the end of music,
but as I say, I see this as either a great

00:08:03.460 --> 00:08:11.290
thing or something, as I say, that makes me
not so motivated to continue on.

00:08:11.290 --> 00:08:14.370
&gt;&gt;Dan Morrill: Let me clarify by being a bit
more specific. We have this media provider

00:08:14.370 --> 00:08:21.639
that says this is the music that's on the
device. Basically what you are asking is will

00:08:21.639 --> 00:08:41.990
that -- or essentially one thing that it could
do is say it could show tracks that are in

00:08:41.990 --> 00:08:51.899
the cloud, even though they are not present
on the device, or it could only show tracks

00:08:51.899 --> 00:09:00.350
that physically present on the device. All
I am saying is I don't know what the behavior

00:09:00.350 --> 00:09:08.100
of the app is.
&gt;&gt; Beyond that. What I want to know is will

00:09:08.100 --> 00:09:22.769
I be able to play music in my app off the
Google music cloud?

00:09:22.769 --> 00:09:32.600
&gt;&gt;Dan Morrill: Right. And right now, we don't
know the answer to that. My suggestion would

00:09:32.600 --> 00:09:49.459
be to ask that in the Android developers group,
and we can rustle up the right person there

00:09:49.459 --> 00:10:02.639
to get the answer to the question.
&gt;&gt;Chris DiBona: Let's go to the second mic

00:10:02.639 --> 00:10:06.379
back, black-shirt dude.
&gt;&gt; Thanks.

00:10:06.379 --> 00:10:24.970
My question was today you announced more of
a unification between the Google TV and Android

00:10:24.970 --> 00:10:31.800
tablets and phones. I'm wondering if you can
talk about maybe in the future, any kind of

00:10:31.800 --> 00:10:38.220
merging with the Chrome code base. What's
going to happen to Chrome, eventually, and

00:10:38.220 --> 00:10:44.420
Android?
&gt;&gt;Chris DiBona: I would bring that up to the

00:10:44.420 --> 00:10:48.009
Chrome Fireside Chat.
[ Laughter ]

00:10:48.009 --> 00:10:53.429
&gt;&gt; It seems like Android is eventually going
to take over in that sense.

00:10:53.429 --> 00:10:59.139
&gt;&gt;Chris DiBona: Android and Chrome share a
fair amount of code through the Web kit stuff

00:10:59.139 --> 00:11:09.259
and through some of the browser stuff. So
that might continue, but we have nothing really

00:11:09.259 --> 00:11:20.139
to say at this time other than that.
&gt;&gt;Jeff Hamilton: Ask the Chrome team.

00:11:20.139 --> 00:11:30.459
&gt;&gt;Chris DiBona: So Anthony Prasaud from Irvine,
California says: Are there any plans to have

00:11:30.459 --> 00:11:33.300
layout tool, aka interface builder, for building
Android apps?

00:11:33.300 --> 00:11:39.189
&gt;&gt;Xavier Ducrohet: Yes. We already have one,
kind of. I mean, it's not finished, I agree,

00:11:39.189 --> 00:11:47.089
but we already have one and we are heavily
working on it.

00:11:47.089 --> 00:11:57.261
I actually have a session tomorrow afternoon
where I will show a lot of the new feature

00:11:57.261 --> 00:12:00.050
in there so I encourage you to attend that
talk.

00:12:00.050 --> 00:12:01.319
[ Applause ]
&gt;&gt;Chris DiBona: They really like that answer.

00:12:01.319 --> 00:12:04.869
&gt;&gt;Andy Stadler: I can just say I have been
using it for this @Home stuff, and it was

00:12:04.869 --> 00:12:08.689
a nice change from tweaking XML.
&gt;&gt;Chris DiBona: Isn't everything, though?

00:12:08.689 --> 00:12:10.959
Okay.
Red-shirt fellow in the front mic.

00:12:10.959 --> 00:12:17.290
&gt;&gt; Hi. My question is on data SMS. Currently,
if you send a SMS in (inaudible) of the application,

00:12:17.290 --> 00:12:32.899
we can do that but it's not directly to a
port. Anybody can take the message and use

00:12:32.899 --> 00:12:44.739
it on their app. So my question is what's
the direction? Are we going to, in future

00:12:44.739 --> 00:12:54.290
android releases, support data SMS or are
we going to go away from data SMS and use

00:12:54.290 --> 00:12:58.689
(inaudible) full-fledged?
&gt;&gt;Chris DiBona: Unfortunately, we don't have

00:12:58.689 --> 00:13:06.720
a telephony person up here, so we are kind
of screwing you.

00:13:06.720 --> 00:13:14.580
&gt;&gt;Dave Sparks: I remember that technology.
&gt;&gt;Chris DiBona: We have no answer for you.

00:13:14.580 --> 00:13:20.769
We're bad people.
Back mic, gray shirt.

00:13:20.769 --> 00:13:35.830
&gt;&gt; I have two questions but I will keep them
brief and ask them both up front. They are

00:13:35.830 --> 00:13:41.490
bought about Android Market.
I recently saw statistics about your apps

00:13:41.490 --> 00:13:50.420
and how they are performing but missing is
downloads you get per day, downloads you get

00:13:50.420 --> 00:13:59.379
historically. So I have been keeping a spreadsheet
by hand every day of the number of downloads.

00:13:59.379 --> 00:14:14.989
I still have to do that even though all the
stuff you guys have added. It's pretty important

00:14:14.989 --> 00:14:27.100
information. So I am wondering when you will
give people the ability to look at their download

00:14:27.100 --> 00:14:39.480
trends and download spreadsheets or just anything
better than a single static number.

00:14:39.480 --> 00:14:52.709
The other thing is Tim Bray has been good
about getting you guys to blog more, which

00:14:52.709 --> 00:15:01.249
is awesome, but the Android support forums
are filled with many, many threads where there

00:15:01.249 --> 00:15:04.829
has been no official answer. There's a lot
of simmering resentment on these threads,

00:15:04.829 --> 00:15:10.579
irrational or not. Do you guys have any plans
on increasing how well you support that forum?

00:15:10.579 --> 00:15:16.610
&gt;&gt;Ficus Kirkpatrick: I can speak to the stat
stuff. It seems like I have been blogging

00:15:16.610 --> 00:15:23.750
more, but not enough. You want more, I understand.
Yeah, I think that's a good idea. Again, I

00:15:23.750 --> 00:15:29.949
don't have a schedule to announce but I agree
with you, it seems like important information,

00:15:29.949 --> 00:15:41.709
and I think as we continue to push a lot of
the developer features forward, like we did

00:15:41.709 --> 00:15:50.139
with the launch of all the really cool new
stat stuff, that will be coming.

00:15:50.139 --> 00:16:03.600
As far as resentment, I think that's something
we want to see trending downward in general,

00:16:03.600 --> 00:16:07.660
but I think that's really more of a developer
relations question.

00:16:07.660 --> 00:16:10.369
&gt;&gt;Dan Morrill: I do see Tim over there.
&gt;&gt;Chris DiBona: No, it's okay. You can answer

00:16:10.369 --> 00:16:15.720
for him.
&gt;&gt;Dan Morrill: No, I think we need to hear

00:16:15.720 --> 00:16:20.199
from Tim.
He should walk faster.

00:16:20.199 --> 00:16:32.399
&gt;&gt; Tim: So fortunately, these guys are pretty
easy to convince to blog. So we will keep

00:16:32.399 --> 00:16:51.559
cracking the whip on that and we will try
-- we have an internal target to try and get

00:16:51.559 --> 00:17:04.189
something done of substantial technical import
at least once a week so we will go on doing

00:17:04.189 --> 00:17:13.530
that. But at the end of the day, keep in mind,
look at the size of this room. We are totally

00:17:13.530 --> 00:17:18.980
outnumbered. And we really need to be in the
business of teaching the teachers.

00:17:18.980 --> 00:17:26.059
&gt;&gt;Chris DiBona: You guys should also take
this opportunity to say you are hiring.

00:17:26.059 --> 00:17:35.990
&gt;&gt;Dan Morrill: This thing is talking to me.
&gt;&gt;Chris DiBona: The robot is talking to you?

00:17:35.990 --> 00:17:40.580
&gt;&gt;Dan Morrill: Yes. The robot is saying excuse
me.

00:17:40.580 --> 00:17:44.260
&gt;&gt;Chris DiBona: Are you sure?
&gt;&gt;Dan Morrill: Oh, I am quite positive.

00:17:44.260 --> 00:17:47.419
&gt;&gt;Chris DiBona: It is saying excuse me? It
wants attention?

00:17:47.419 --> 00:17:50.149
&gt;&gt;Jeff Hamilton: I am confirm that.
&gt;&gt; Don't bad touch the robot.

00:17:50.149 --> 00:17:57.299
&gt;&gt;Chris DiBona: From the market -- here is
a great one. I really like this question.

00:17:57.299 --> 00:18:04.809
From Barrajos (phonetic), from a country that
is actually his company name. What about a

00:18:04.809 --> 00:18:09.080
better emulator? When will it be available?
[ Applause ]

00:18:09.080 --> 00:18:19.540
&gt;&gt;Xavier Ducrohet: Yes, so we are very aware
the emulator is difficult to use these days.

00:18:19.540 --> 00:18:34.690
We are working on it. We don't have a whole
lot to announce because it's in the ready,

00:18:34.690 --> 00:18:40.600
but I have a demo at my talk tomorrow, and
it's in that room, so I encourage you to talk.

00:18:40.600 --> 00:18:44.740
&gt;&gt;Chris DiBona: What time is your talk?
&gt;&gt;Xavier Ducrohet: Three-something. I'm not

00:18:44.740 --> 00:18:47.840
sure, in this room.
&gt;&gt;Chris DiBona: In this room.

00:18:47.840 --> 00:18:59.100
&gt;&gt;Dave Sparks: You will be here; right?
&gt;&gt;Chris DiBona: I think I have to go back

00:18:59.100 --> 00:19:11.110
to the second microphone, to the person with
the print shirt.

00:19:11.110 --> 00:19:29.600
&gt;&gt; Yeah, I am looking for a way to gain access
to an event when a file is added, changed

00:19:29.600 --> 00:19:36.910
--
&gt;&gt;Chris DiBona: Like e pole interface, that

00:19:36.910 --> 00:19:45.149
kind of thing?
&gt;&gt; Yeah, either in the framework or down in

00:19:45.149 --> 00:19:49.850
the core somewhere. Is that available?
&gt;&gt; Excuse me.

00:19:49.850 --> 00:20:00.470
&gt;&gt;Chris DiBona: That was the robot.
&gt;&gt; If the robot knows, that's fine.

00:20:00.470 --> 00:20:02.630
[ Applause ]
&gt;&gt;Dianne Hackborn: There's a class called

00:20:02.630 --> 00:20:05.170
file observer that lets you monitor the file
system.

00:20:05.170 --> 00:20:08.929
&gt;&gt; Perfect. Is that going to be unprotected
files, I assume? Nothing that's sandboxed?

00:20:08.929 --> 00:20:14.950
&gt;&gt;Dianne Hackborn: Only your own files.
&gt;&gt; Your own files. How about stuff on the

00:20:14.950 --> 00:20:23.120
SD card? Pictures, music that, kind of thing?
&gt;&gt;Dianne Hackborn: It should work on the SD

00:20:23.120 --> 00:20:29.750
card although I have not tested that, but
I believe it does.

00:20:29.750 --> 00:20:31.980
&gt;&gt; Okay. Thank you.
&gt;&gt; Kapow!

00:20:31.980 --> 00:20:38.360
&gt;&gt;Chris DiBona: There you go. we answered
one. That's great.

00:20:38.360 --> 00:20:41.760
[ Laughter ]
&gt;&gt;Chris DiBona: Hat guy. Love your hat. It's

00:20:41.760 --> 00:20:47.321
an Android hat, Android being what you are
here for.

00:20:47.321 --> 00:20:55.549
&gt;&gt; We are using the compatibility layer for
Honeycomb pretty extensively and there are

00:20:55.549 --> 00:21:08.480
a couple of bugs in there that are significant
to what we're doing. Do you guys have a release

00:21:08.480 --> 00:21:13.730
schedule for that or planning any updates
to the compatibility there?

00:21:13.730 --> 00:21:15.720
&gt;&gt;Dianne Hackborn: This is the fragment compatibility
library?

00:21:15.720 --> 00:21:18.960
&gt;&gt; Yeah.
&gt;&gt;Dianne Hackborn: MR1 will have an update

00:21:18.960 --> 00:21:28.239
to it that I think addresses, like, animation
and some other issues people had.

00:21:28.239 --> 00:21:33.929
&gt;&gt; Is there a release date?
&gt;&gt;Xavier Ducrohet: Is it ready?

00:21:33.929 --> 00:21:35.779
&gt;&gt; Today.
&gt;&gt;Xavier Ducrohet: No, I didn't push anything

00:21:35.779 --> 00:21:49.320
so if the package is ready, I just push it
after I/O, I guess.

00:21:49.320 --> 00:21:59.649
&gt;&gt;Rebecca Zavin: That's the release date for
the update that should start going out to

00:21:59.649 --> 00:22:11.669
Verizon customers on Xooms today.
&gt;&gt;Dan Morrill: I have a quick public service

00:22:11.669 --> 00:22:26.580
announcement, just because I feel it's important
that the world know this. The green Android

00:22:26.580 --> 00:22:40.360
as depicted in the hats I seen in the room
here, he has no official name but we call

00:22:40.360 --> 00:22:51.620
him the bug Droid.
So I have seen in the press people calling

00:22:51.620 --> 00:23:02.160
him Andy and things like that, but I wanted
to make sure you guys know that we call him

00:23:02.160 --> 00:23:13.760
the bug Droid.
&gt;&gt;Chris DiBona: You sound almost offended.

00:23:13.760 --> 00:23:20.590
All right.
Are we going to see carrier billing for users

00:23:20.590 --> 00:23:28.760
in countries outside the United States? And
in general, there are a number of when will

00:23:28.760 --> 00:23:40.130
we get music, books and movies launched in
countries other than the U.S. So two international

00:23:40.130 --> 00:23:50.980
questions for you.
&gt;&gt;Ficus Kirkpatrick: We already have carrier

00:23:50.980 --> 00:23:57.669
billing outside the U.S. It's been launched
at least in Japan.

00:23:57.669 --> 00:24:13.850
&gt;&gt;Chris DiBona: Japan is not in the United
States.

00:24:13.850 --> 00:24:29.170
&gt;&gt;Ficus Kirkpatrick: Last I heard. And to
the other question about launching in more

00:24:29.170 --> 00:24:36.029
countries, same thing. We are always looking
to integrate with more carriers, bring people

00:24:36.029 --> 00:24:43.760
more ways to buy apps.
As far as the books and movies question, I

00:24:43.760 --> 00:24:52.049
think a lot of that is dependent on licensing
deals. Again, no schedule.

00:24:52.049 --> 00:24:59.659
&gt;&gt;Chris DiBona: I think the back -- front
-- back microphone's turn. You, dark shirt.

00:24:59.659 --> 00:25:06.789
&gt;&gt; Hi, Chris, I am one of your GSOC mentors.
&gt;&gt;Chris DiBona: Awesome.

00:25:06.789 --> 00:25:13.130
&gt;&gt;Can I ask the hard question or the easy
one?

00:25:13.130 --> 00:25:21.760
&gt;&gt;Chris DiBona: It's up to you, but you have
to ask one now.

00:25:21.760 --> 00:25:29.100
&gt;&gt; Okay, okay. The hard one, then.
So when do you think Google will release a

00:25:29.100 --> 00:25:33.600
source version of Android that, when built,
provides complete hardware support in every

00:25:33.600 --> 00:25:39.590
single feature that's in the closed packages
that the carriers provide? In other words,

00:25:39.590 --> 00:25:43.970
when will we have a complete open source Android?
Alternatively, can we call it Android slash

00:25:43.970 --> 00:25:50.250
Linux? Sorry, I saw RMS a couple weeks ago
and it's been on my mind. But yeah.

00:25:50.250 --> 00:25:59.029
&gt;&gt;Dan Morrill: So yeah. The Nexus S has -- we
reached agreements with the various chipset

00:25:59.029 --> 00:26:03.820
vendors in the Nexus S to include redistributable,
under noncommercial terms, at least, versions

00:26:03.820 --> 00:26:10.129
of the binary drivers for most of the components,
and we are working with chipset vendors on

00:26:10.129 --> 00:26:18.700
the remaining components. What this basically
means is check out of the AOSP source code

00:26:18.700 --> 00:26:27.740
plus files that you download from our Web
site plus make equals bootable fully functional

00:26:27.740 --> 00:26:31.600
device.
&gt;&gt; Right. Except there's no source code, so

00:26:31.600 --> 00:26:42.850
I couldn't take it and put it into, say, Poulsbo
or any other SGX graphics --

00:26:42.850 --> 00:26:53.669
&gt;&gt;Dan Morrill: You will have to talk to the
chipset vendors about that. Realistically

00:26:53.669 --> 00:26:55.980
--
&gt;&gt; They said no.

00:26:55.980 --> 00:27:03.710
&gt;&gt;Dan Morrill: Well, it's their decision,
for the most part.

00:27:03.710 --> 00:27:17.030
There's all kinds of IP restrictions on this
that they are bound by. That's not a landscape

00:27:17.030 --> 00:27:26.990
that we really understand or really have that
much insight into.

00:27:26.990 --> 00:27:39.110
So, for example, like the radio image that
runs on the secondary processor in most of

00:27:39.110 --> 00:27:51.009
these phones, that's completely opaque to
us for the most part.

00:27:51.009 --> 00:28:07.049
So it's not -- we are sort of a software vendor
to chips and software that runs on these chips

00:28:07.049 --> 00:28:15.170
that we don't really have the insight into.
So what we can do is produce the drivers and

00:28:15.170 --> 00:28:22.929
make sure that those are available under useful
terms, at least for the devices that we ship

00:28:22.929 --> 00:28:28.590
ourselves, but unfortunately, it's really
in the hands of the chipset vendors and the

00:28:28.590 --> 00:28:33.260
OEMs to really kind of complete the loop.
&gt;&gt; That's deeply unfortunate.

00:28:33.260 --> 00:28:37.850
Thank you.
&gt;&gt;Chris DiBona: Well, it's less deeply unfortunate

00:28:37.850 --> 00:28:47.200
now than it was when we launched the G1. Each
iterative step, when we do the full Android

00:28:47.200 --> 00:29:01.840
open source release, we end up having more
and more of those components in place. So

00:29:01.840 --> 00:29:12.150
this isn't the kind of war you win. It's a
constant, ongoing effort to keep more and

00:29:12.150 --> 00:29:21.909
more things open.
So we just work hard at that. And it's better

00:29:21.909 --> 00:29:37.240
now than it was two years ago. It's better
now than it was a year ago, and it will be

00:29:37.240 --> 00:30:02.570
better in a year from now than it is now.
So that's actually something I am kind of

00:30:02.570 --> 00:30:05.940
proud of with the team.
[ Applause ]

00:30:05.940 --> 00:30:11.460
&gt;&gt;Chris DiBona: Thanks.
White shirt microphone. One of the major things

00:30:11.460 --> 00:30:20.409
that is an issue with Android, next to battery
life sometimes, is fragmentation. So there's

00:30:20.409 --> 00:30:31.460
a lot of choice. You have over 300 devices,
which is a good thing for the consumer, but

00:30:31.460 --> 00:30:41.890
is sometimes a nightmare for developers. And
I think mostly for game developers. So there

00:30:41.890 --> 00:30:55.530
are a lot of things being done from within
the Android team but are there additional

00:30:55.530 --> 00:31:06.650
things that are being launched, additional
initiatives to help produce those fragmentation,

00:31:06.650 --> 00:31:15.200
help developers? This question gets asked
every year, and the answer is usually the

00:31:15.200 --> 00:31:26.649
same. We do do what we can, and we are continually
improving the CTS test. One thing which actually

00:31:26.649 --> 00:31:40.159
is really useful is that the CTS -- sorry,
which is the compatibility test suite, is

00:31:40.159 --> 00:31:56.639
developed in the open. Like right now, it's
actually not because there's Honeycomb tests

00:31:56.639 --> 00:32:15.690
that are useless without Honeycomb source,
obviously. But, like, for example, if you

00:32:15.690 --> 00:32:42.559
encounter a bug in Gingerbread, you being
you as a developer, encounter a bug in Gingerbread,

00:32:42.559 --> 00:32:59.309
you can submit a test to us to cover that
case, which will fix it for future devices

00:32:59.309 --> 00:33:20.379
and so on.
So really part of it is do check out the CTS,

00:33:20.379 --> 00:33:32.460
and if there is something you can contribute,
it will help a lot there.

00:33:32.460 --> 00:33:45.360
At the same time, there are other problems.
You mentioned game developers in particular,

00:33:45.360 --> 00:33:55.110
and that's certainly true. I don't know how
much Dave can comment on where we are with

00:33:55.110 --> 00:34:09.360
some of the stuff that we're planning on -- for
some of the openGL related topics and things

00:34:09.360 --> 00:34:32.900
like that. That's really his and I don't know
a great deal about that. But in general, what

00:34:32.900 --> 00:35:02.130
we aim to do is improve these things over
the next few releases and then, of course,

00:35:02.130 --> 00:35:11.340
at the same time, we're also working, as we
announced this morning, more aggressively

00:35:11.340 --> 00:35:20.680
with the OEMs and carriers to make sure updates
get out there more regularly and so on. Dave,

00:35:20.680 --> 00:35:28.601
did you want to talk about --
&gt;&gt;Dave Sparks: We are work being with the

00:35:28.601 --> 00:35:36.420
chipset vendors on compatible issues. GPU,
that's an area we are painfully aware of.

00:35:36.420 --> 00:35:45.820
The problem -- This is no different than a
desktop system; right? They all have their

00:35:45.820 --> 00:35:52.650
own texture, formats. And typically they are
protected by patents.

00:35:52.650 --> 00:36:02.360
So it's not like we have a lot we can do in
that area, but we are certainly working on

00:36:02.360 --> 00:36:03.600
it.
We're working within Khronos to help standardize

00:36:03.600 --> 00:36:05.450
some things, like a good example of something
we have done recently is the texture streaming

00:36:05.450 --> 00:36:11.020
stuff in Honeycomb, which allows you to take
video or camera frames and move them directly

00:36:11.020 --> 00:36:18.910
into the GPU and render those within a 3D
scene graph.

00:36:18.910 --> 00:36:25.060
So we're working at that level with the chipset
vendors to try to get more common functionality

00:36:25.060 --> 00:36:39.720
across all the devices by creating extensions
that are specific to Android, like this texture

00:36:39.720 --> 00:36:47.030
streaming stuff.
So it's a difficult situation. I think it's

00:36:47.030 --> 00:37:04.310
going to get better, especially over the next
year. And GPUs are an area where things are

00:37:04.310 --> 00:37:18.540
advancing really quickly. You know, we are
seeing performance jumps, we are seeing all

00:37:18.540 --> 00:37:35.170
kinds of new features in the GPUs, and those
will, for the next probably three or four

00:37:35.170 --> 00:37:51.460
years, you are going to see doubling in performance.
So I think that's an area that's very promising.

00:37:51.460 --> 00:38:01.730
&gt;&gt;Ficus Kirkpatrick: Sticky Notes.
&gt;&gt;Ficus Kirkpatrick: I wanted to add on the

00:38:01.730 --> 00:38:10.400
market side, we're going to be adding a lot
of stuff to address the issues particularly

00:38:10.400 --> 00:38:16.680
games producers have. It's a tough problem,
and we're going to try to help you deal with

00:38:16.680 --> 00:38:26.770
it. I'd really encourage anyone who -- this
is a topic near and dear to your heart, to

00:38:26.770 --> 00:38:32.950
attend Eric Chu's talk tomorrow morning.
&gt;&gt;Chris DiBona: Sérgio in Lisbon says are

00:38:32.950 --> 00:38:39.530
there plans to let the developers respond
to feedback and reviews from their users,

00:38:39.530 --> 00:38:43.340
which I think is pretty important.
[ Applause ]

00:38:43.340 --> 00:38:50.510
&gt;&gt;Chris DiBona: That guy thinks it's really
important, too.

00:38:50.510 --> 00:38:55.480
&gt;&gt;Ficus Kirkpatrick: Yes.
&gt;&gt;&gt; (off mike).

00:38:55.480 --> 00:39:06.440
&gt;&gt;Ficus Kirkpatrick: Excuse me? Time frame.
Not clear. We're working on it.

00:39:06.440 --> 00:39:20.410
&gt;&gt;Chris DiBona: Similarly, will the marketplace
have plans to support the use of promo codes

00:39:20.410 --> 00:39:29.990
for free downloads for marketing purposes?
That's kind of a specific ask, but, you know.

00:39:29.990 --> 00:39:45.780
&gt;&gt;Ficus Kirkpatrick: That, as far as I know,
we do not have plans for right now.

00:39:45.780 --> 00:40:03.150
But I wouldn't rule it out. But I am not personally
working on it right now.

00:40:03.150 --> 00:40:11.000
&gt;&gt;Chris DiBona: Okay.
The blue shirt on the second microphone.

00:40:11.000 --> 00:40:25.130
&gt;&gt;&gt; Yeah, any plans to upgrade the support
for larger apps? I know 50 megs is pretty

00:40:25.130 --> 00:40:29.990
much the limit right now. With tablet apps,
or more tablets out there, more ability to

00:40:29.990 --> 00:40:40.330
support some really large apps that particularly
have a lot of audio or video in them?

00:40:40.330 --> 00:40:47.360
&gt;&gt;Ficus Kirkpatrick: Absolutely, yes.
Again, you should come to Eric Chu's talk

00:40:47.360 --> 00:40:51.550
tomorrow morning. We are going to have some
stuff to show.

00:40:51.550 --> 00:40:55.920
&gt;&gt;&gt; Three quick questions.
When will the CTUM graduate from Google Labs.

00:40:55.920 --> 00:41:01.430
When will the porting guide be back up and
updated. And.

00:41:01.430 --> 00:41:09.610
&gt;&gt;&gt; Any hope of seeing Honeycomb source if
we wanted to support legacy tablets or do

00:41:09.610 --> 00:41:23.930
we have to wait for Ice Cream Sandwich?
&gt;&gt;Chris DiBona: Do you want to start with

00:41:23.930 --> 00:41:28.420
the Honeycomb source question? That's asked
in the thing, too.

00:41:28.420 --> 00:41:35.310
&gt;&gt;Dan Morrill: So I guess you asked about
the porting guide.

00:41:35.310 --> 00:41:42.510
That went away because it was basically obsolete
and it was essentially actively misleading.

00:41:42.510 --> 00:41:47.990
So we're, like, better to not have anything
than -- and let people look at the source

00:41:47.990 --> 00:41:58.500
to figure out how the build system works than
to actively give them erroneous info.

00:41:58.500 --> 00:42:09.380
So -- but at the same time, we know there
is some good info there that needs to come

00:42:09.380 --> 00:42:17.480
back. We're working on it. What we're doing
right now is gathering information that in

00:42:17.480 --> 00:42:28.700
fact some of the people on this lineup that
you see here owe me, you know, kind of technical

00:42:28.700 --> 00:42:37.020
information that I need to relaunch a sort
of replacement for this section.

00:42:37.020 --> 00:42:46.490
So we've been really busy preparing for I/O.
I know it's a bit inconvenient. And we'll

00:42:46.490 --> 00:42:56.180
get some content back up there when it's actually
useful and correct and accurate and up-to-date.

00:42:56.180 --> 00:43:06.230
And I think I missed. What was the Honeycomb
source question?

00:43:06.230 --> 00:43:12.680
&gt;&gt;&gt; Is the source code ever going to be really
open source?

00:43:12.680 --> 00:43:22.130
&gt;&gt;Dan Morrill: That's an interesting question.
And to answer it, I need to answer it in the

00:43:22.130 --> 00:43:38.020
form of an explanation of GIT. So for those
who are not terribly familiar with GIT, it's

00:43:38.020 --> 00:43:45.170
a system that tracks individual bits and reassembles
them as you instruct it to. And this is an

00:43:45.170 --> 00:43:52.690
terrifying and as awesome as it sounds.
What this means is you can think of Honeycomb

00:43:52.690 --> 00:44:02.350
as this sort of gigantic collection of a bunch
of little patches stored in GIT. If you asked

00:44:02.350 --> 00:44:09.430
the question, will we ever release this in
the Honeycomb source, well, we can't not and

00:44:09.430 --> 00:44:18.800
yet still release the Ice Cream Sandwich,
because these patches will still all be there

00:44:18.800 --> 00:44:23.060
in the history of, you know, whatever source
we push that is Ice Cream Sandwich.

00:44:23.060 --> 00:44:27.660
So, you know, in other words, Honeycomb is
sort of a set of patches. Ice Cream Sandwich

00:44:27.660 --> 00:44:29.720
is a larger set of patches that also includes
all of the Honeycomb patches.

00:44:29.720 --> 00:44:37.640
So the source will inevitably get out there
in one form or another. The question is will

00:44:37.640 --> 00:44:43.500
we essentially tag it in such a way as to
let somebody reconstruct a, you know, like

00:44:43.500 --> 00:44:49.170
a Honeycomb build from that source. That's
what we don't know right now.

00:44:49.170 --> 00:44:57.680
It depends on how things shake out in the
fourth quarter when we get ready to look at

00:44:57.680 --> 00:45:02.470
Ice Cream Sandwich releases.
&gt;&gt;&gt; So before fourth quarter, we won't see

00:45:02.470 --> 00:45:16.700
it? Or we won't see anything that will allow
us to build, essentially, a Honeycomb image

00:45:16.700 --> 00:45:27.300
for a legacy tablet, for example?
&gt;&gt;Dan Morrill: As far as I know right now,

00:45:27.300 --> 00:45:31.370
that's correct.
&gt;&gt;David Sparks: We announced specifically

00:45:31.370 --> 00:45:38.990
we're not releasing Honeycomb source.
&gt;&gt;&gt; The final question was the C2DM, when

00:45:38.990 --> 00:45:54.030
will it graduate? It was supposed to graduate
from Google Labs by December of last year.

00:45:54.030 --> 00:46:00.060
It still, as far as I know, requires official
approval.

00:46:00.060 --> 00:46:04.880
&gt;&gt;Chris DiBona: Which one are you talking
about?

00:46:04.880 --> 00:46:12.720
&gt;&gt;&gt; C2DM, the cloud to device messaging.
&gt;&gt;Debajit Ghosh: It's doing really well. There's

00:46:12.720 --> 00:46:24.940
a tremendously amount of usage for it. I don't
recall ever setting a date for when it will

00:46:24.940 --> 00:46:43.830
graduate from Google Labs.
It's -- you know, it's on our priority list.

00:46:43.830 --> 00:46:57.081
But I have nothing to announce at this time.
&gt;&gt;&gt; Okay. Thank you.

00:46:57.081 --> 00:47:03.310
&gt;&gt;Chris DiBona: The fellow on the second microphone.
&gt;&gt;&gt; Honeycomb provides support for storage

00:47:03.310 --> 00:47:08.270
encryption. What are the encryption algorithms
used and what is the encryption file system

00:47:08.270 --> 00:47:12.290
used in -- for storage encryption in Honeycomb?
&gt;&gt;Rebecca Schultz Zavin: You mean the file

00:47:12.290 --> 00:47:18.200
system data partition encryption? It's sitting
on top of dm-crypt, which is something that's

00:47:18.200 --> 00:47:23.840
supported in the kernel. And I think it's
-- I don't want to mislead you, but I think

00:47:23.840 --> 00:47:25.990
it's AES128. I'm pretty sure.
&gt;&gt;&gt; Okay.

00:47:25.990 --> 00:47:31.330
&gt;&gt;Chris DiBona: What are your plans for the
NFC APIs? In this case, I'd say just watch

00:47:31.330 --> 00:47:35.770
the NFC session, which is later today; right?
&gt;&gt;Jeff Hamilton: Can you repeat the question?

00:47:35.770 --> 00:47:38.120
&gt;&gt;Chris DiBona: Just what are the plans for
the NFC APIs.

00:47:38.120 --> 00:47:41.480
&gt;&gt;Jeff Hamilton: For NFC APIs?
&gt;&gt;Chris DiBona: Yes.

00:47:41.480 --> 00:47:46.020
&gt;&gt;Jeff Hamilton: In Android 2.3.3, we released
much more support for NFC, quite a variety

00:47:46.020 --> 00:47:52.620
of APIs that allow full reader/writer support
so you can interact with all sorts of legacy

00:47:52.620 --> 00:48:02.060
NFC devices. That came up pretty recently.
2.3.4 doesn't have any additional support

00:48:02.060 --> 00:48:07.940
for new APIs. But 2.3.3 had a bunch of new
stuff there.

00:48:07.940 --> 00:48:18.010
We're giving a talk right after this one in
this room going into more detail on NFC. So

00:48:18.010 --> 00:48:23.310
I suggest listening to that.
&gt;&gt;Chris DiBona: Stick around for that if you

00:48:23.310 --> 00:48:26.270
want that.
&gt;&gt;&gt; Two questions. First question about Chrome.

00:48:26.270 --> 00:48:32.870
What are the challenges to enable full Chrome
browser used on Android.

00:48:32.870 --> 00:48:39.630
&gt;&gt;Chris DiBona: There's no Chrome browser
on Android, so there's a lot of challenges,

00:48:39.630 --> 00:48:47.290
I would imagine. I would ask the Chrome guys
during their fireside.

00:48:47.290 --> 00:48:52.730
What's your second question?
&gt;&gt;&gt; Second question is, is there a plan to

00:48:52.730 --> 00:48:57.860
enable, like, Android virtual machine in a
different environment. For instance, within

00:48:57.860 --> 00:49:03.780
Chrome, Android virtual machine.
&gt;&gt;Chris DiBona: I would ask the Chrome guys.

00:49:03.780 --> 00:49:10.680
I don't know what their plans are around that.
&gt;&gt;Dan Bornstein: There's nothing particularly

00:49:10.680 --> 00:49:17.080
technical stopping that from happening. That's
nothing that anybody up here -- it's just

00:49:17.080 --> 00:49:19.060
programming, you know.
[ Laughter ]

00:49:19.060 --> 00:49:27.300
&gt;&gt;Chris DiBona: Yeah, blue shirt in the back.
&gt;&gt;&gt; I would love to be able to learn from

00:49:27.300 --> 00:49:33.320
the apps you build in large-scale apps, like
the Google Apps, GMail, Books. Is there any

00:49:33.320 --> 00:49:39.930
plans on making that available for developers
to learn from?

00:49:39.930 --> 00:49:46.050
&gt;&gt;Chris DiBona: Dan?
&gt;&gt;Dan Morrill: So you mean like, what, like

00:49:46.050 --> 00:49:47.650
a case studies or like a technical sort of
--

00:49:47.650 --> 00:49:49.860
&gt;&gt;&gt; The source code.
&gt;&gt;Dan Morrill: Oh, the source code.

00:49:49.860 --> 00:49:51.910
[ Laughter ]
&gt;&gt;Dan Morrill: Oh.

00:49:51.910 --> 00:49:55.217
&gt;&gt;Chris DiBona: Gosh, how they do that.
&gt;&gt;Dan Morrill: Yeah, that's -- I'm going to

00:49:55.217 --> 00:49:56.217
say no.
It's -- it's come up before. I mean, you know,

00:49:56.217 --> 00:50:00.300
we periodically revisit it. But, you know,
essentially, it's -- the reality is that even

00:50:00.300 --> 00:50:03.800
aside from the fact that there is, you know,
intellectual property that's extremely important

00:50:03.800 --> 00:50:10.400
to Google in there, the -- the reality is
that a lot of the, you know, partners are,

00:50:10.400 --> 00:50:17.750
you know, motivated to work with us and make
sure that their devices are compatible and

00:50:17.750 --> 00:50:24.030
so on, you know, because we, you know, license
the stuff to them. And so if we make it too

00:50:24.030 --> 00:50:28.370
freely available, you know, then that sort
of reduces the incentive of, you know, a lot

00:50:28.370 --> 00:50:34.800
of the members of the ecosystem to, you know,
continue to make compatible devices and work

00:50:34.800 --> 00:50:40.590
for user and developer experience and so on.
So it's a tricky situation for us.

00:50:40.590 --> 00:50:44.800
We do think about that periodically. But right
now, that's not something that we're able

00:50:44.800 --> 00:50:47.330
to do.
&gt;&gt;&gt; Would in-depth case studies be a possibility?

00:50:47.330 --> 00:50:51.110
&gt;&gt;Dan Morrill: That's an interesting question,
actually. We do have the mobile blog, and

00:50:51.110 --> 00:50:53.700
they've talked about, like, we've done blog
posts about things like, you know -- like

00:50:53.700 --> 00:51:01.410
-- I think they did a blog post about how
they did the GMail -- or the mobile Web version

00:51:01.410 --> 00:51:10.460
of GMail. We can certainly look at that.
&gt;&gt;Chris DiBona: We should make Tim Bray do

00:51:10.460 --> 00:51:14.660
that. Because he's not up here.
&gt;&gt;Dan Morrill: That would be pretty interesting.

00:51:14.660 --> 00:51:18.700
I'd read it.
&gt;&gt;Chris DiBona: Yeah. You, sir.

00:51:18.700 --> 00:51:26.770
&gt;&gt;&gt; I was pretty excited when app inventor
came out. I realize it's not going to give

00:51:26.770 --> 00:51:34.110
us rich, deep UI and things that we can do
in native development more the traditional

00:51:34.110 --> 00:51:42.200
way. But I think it has a lot of potential
to produce a lot of really simple apps for

00:51:42.200 --> 00:51:52.130
people who are not as technically savvy.
Is there any plans to bring that out of sort

00:51:52.130 --> 00:51:55.950
of the experimentation mode it's in now to
make it possible to bring an app from App

00:51:55.950 --> 00:51:57.640
Inventor to the market?
&gt;&gt;Dan Morrill: I don't think -- that's a different

00:51:57.640 --> 00:52:02.530
team at Google, actually, that did that. I
don't think -- we don't have anybody here,

00:52:02.530 --> 00:52:05.040
and I don't think we really know the answer
to that.

00:52:05.040 --> 00:52:08.840
&gt;&gt;Chris DiBona: Are they even in the sandbox?
That's the question.

00:52:08.840 --> 00:52:10.760
I think they're in the sandbox.
&gt;&gt;&gt; Okay.

00:52:10.760 --> 00:52:19.030
&gt;&gt;Chris DiBona: Yeah. So I would find Sharon
or Mark and go talk to them over there.

00:52:19.030 --> 00:52:22.550
&gt;&gt;&gt; Thanks.
&gt;&gt;Chris DiBona: Shirt in the second mike.

00:52:22.550 --> 00:52:29.030
&gt;&gt;&gt; Okay. How does renderscript relate to
OpenCL? Is it seen as an replacement or can

00:52:29.030 --> 00:52:34.410
we expect OpenCL in the future rendering versions?
&gt;&gt;David Sparks: We're -- we see it as a -- sort

00:52:34.410 --> 00:52:37.530
of equivalent to OpenCL that is tailored for
the Android environment.

00:52:37.530 --> 00:52:44.150
Android has this really rich API in Java,
and we have no intention to duplicate that

00:52:44.150 --> 00:52:49.090
API for every other language out there. So
if you want to get access to all the rich

00:52:49.090 --> 00:52:51.940
APIs in Java, you need to have a Java application
of some sort.

00:52:51.940 --> 00:52:54.620
Renderscript basically gives you dynamic findings
from Java to your native code. So that's why

00:52:54.620 --> 00:52:56.830
we think it's viable. Basically, your program
needs something that looks a lot like C99,

00:52:56.830 --> 00:53:02.370
so it's easy to port code over. We have a
few little extensions we've thrown in to give

00:53:02.370 --> 00:53:06.100
you the multithreading and some additional
extensions, extrinsics that will come along

00:53:06.100 --> 00:53:11.230
later on to take advantage of GPU architecture
and CPU architectures in the future that will

00:53:11.230 --> 00:53:17.620
basically be done in the (inaudible) device.
So if a new device comes out with new features,

00:53:17.620 --> 00:53:22.530
your application will automatically get whatever
acceleration there is.

00:53:22.530 --> 00:53:24.630
So it's basically, we think, a better way
of getting at native performance from a, you

00:53:24.630 --> 00:53:25.630
know, interpret -- effectively, interpreted
language, but not really.

00:53:25.630 --> 00:53:26.630
So it -- there's no plans to do OpenCL. I
think you'll probably see other companies

00:53:26.630 --> 00:53:31.360
that are interested in doing that. But we
have no plans to support it.

00:53:31.360 --> 00:53:33.490
&gt;&gt;&gt; Okay.
&gt;&gt;&gt; Okay. Android's great on high-end devices

00:53:33.490 --> 00:53:39.050
with flat-rate data contracts. But as you
move further down the scale or across the

00:53:39.050 --> 00:53:40.050
world, you're more likely to be on a metered
contract. And I've seen requests from many

00:53:40.050 --> 00:53:43.850
users asking for more control over which applications
can access the Internet and when. Is this

00:53:43.850 --> 00:53:45.590
something you guys are likely to support or
is this against your ideology?

00:53:45.590 --> 00:53:47.020
&gt;&gt;David Sparks: Do you want to take that?
&gt;&gt;Dianne Hackborn: Yeah, we're looking into

00:53:47.020 --> 00:53:48.020
this.
[ Laughter ]

00:53:48.020 --> 00:53:50.720
&gt;&gt;Chris DiBona: Very closely.
Does Ice Cream Sandwich mean all Android devices

00:53:50.720 --> 00:53:55.290
become Google TV devices for free when using
the HDMI output? Are any of these Google TV

00:53:55.290 --> 00:54:03.000
type output available in Honeycomb 3.1 before
Ice Cream Sandwich is released? Does Ice Cream

00:54:03.000 --> 00:54:06.080
Sandwich mean all Android devices become Google
TV devices for free when using HDMI output?

00:54:06.080 --> 00:54:09.460
I know the answer to that, and that's no.
Because there's all this other stuff that

00:54:09.460 --> 00:54:16.320
goes into a Google TV that isn't in a phone.
Are any of these -- Basically, it's asking

00:54:16.320 --> 00:54:21.390
for a UI that will scale to a larger screen
via the HDMI output on a tablet. So I don't

00:54:21.390 --> 00:54:26.080
know if you have any plans for that.
&gt;&gt;Dianne Hackborn: Yes, we definitely are

00:54:26.080 --> 00:54:28.230
thinking about what happens when you plug
your phone into HDMI output and you have a

00:54:28.230 --> 00:54:29.230
bigger screen on it. We have a lot of stuff
in the platform today to, you know, have -- activities

00:54:29.230 --> 00:54:30.230
restart when these kind of conversion changes
happen.

00:54:30.230 --> 00:54:31.230
We're going a little slow on this because
it has a big impact on developers. So, like,

00:54:31.230 --> 00:54:32.230
having -- your applications now have to deal
with the screen size suddenly changing significantly

00:54:32.230 --> 00:54:33.230
on you. We want to make sure you have all
the tools for this you need in there.

00:54:33.230 --> 00:54:34.230
But, you know, we -- there's already devices
out there shipping that have this kind of

00:54:34.230 --> 00:54:42.850
-- that do this kind of thing. And it's definitely
on our minds about how to do this really seamlessly

00:54:42.850 --> 00:54:45.803
in Android.
&gt;&gt;Chris DiBona: I think, actually, the second

00:54:45.803 --> 00:54:46.803
mike.
&gt;&gt;&gt; Are there any improvements coming to the

00:54:46.803 --> 00:54:49.180
developer dashboard that you can share with
us? For example, it would be really useful

00:54:49.180 --> 00:54:52.340
to be able to filter by version number.
&gt;&gt;Ficus Kirkpatrick: Filter by version number

00:54:52.340 --> 00:54:53.920
of what?
&gt;&gt;&gt; Filter crash reports by version.

00:54:53.920 --> 00:54:58.360
&gt;&gt;Ficus Kirkpatrick: I see. As I spoke about
earlier, you know, we did a push recently

00:54:58.360 --> 00:55:05.660
with improved stats reporting on the developer
site. And more is coming. So that one is one

00:55:05.660 --> 00:55:07.141
that I -- I personally have thought would
be really useful. I'd also like to be able

00:55:07.141 --> 00:55:08.141
to filter by device type so you guys can see,
like, if somebody with an EVO is crashing,

00:55:08.141 --> 00:55:09.141
you know, you can track that down.
&gt;&gt;&gt; Great. Thanks.

00:55:09.141 --> 00:55:10.141
&gt;&gt;&gt; So I'm just curious if there have been
any improvements in hardware acceleration

00:55:10.141 --> 00:55:11.141
in Android 3.1 or perhaps future releases,
such as Ice Cream Sandwich, because it seems

00:55:11.141 --> 00:55:12.141
like there's a lot of lag across the board
with the tablet operating system right now.

00:55:12.141 --> 00:55:13.141
&gt;&gt;David Sparks: You're developing on a tablet
now and you're seeing lag?

00:55:13.141 --> 00:55:14.141
&gt;&gt;&gt; Yes.
&gt;&gt;David Sparks: Have you done profiling to

00:55:14.141 --> 00:55:15.141
find out where it is?
&gt;&gt;&gt; Just in the whole operating system itself,

00:55:15.141 --> 00:55:16.141
whether -- even if you're scrolling in the
GMail app by Google, it's just sort of --

00:55:16.141 --> 00:55:17.141
&gt;&gt;David Sparks: Okay, just sort of in general
performance?

00:55:17.141 --> 00:55:18.141
We're constantly looking at performance.
We -- certainly performance is one of the

00:55:18.141 --> 00:55:19.141
things we're going to look at in Ice Cream
Sandwich in terms of our improvements across

00:55:19.141 --> 00:55:20.141
the board.
Generally, when we dig down into performance

00:55:20.141 --> 00:55:21.141
issues, it's the application that's at fault
rather than the -- the system itself, most

00:55:21.141 --> 00:55:22.141
of the time, not always.
We spend a lot of time -- Honeycomb has a

00:55:22.141 --> 00:55:23.141
lot of improvements across the board in terms
of acceleration. We're doing GPU compositing.

00:55:23.141 --> 00:55:24.141
We're -- if you have your application with
the proper manifest flag, you can take advantage

00:55:24.141 --> 00:55:25.141
of GPU acceleration. Fonts are cached in the
GPU. We're doing -- compositing the GPU. Where

00:55:25.141 --> 00:55:26.141
we can take advantage of it, we take advantage
of overlay composition.

00:55:26.141 --> 00:55:27.141
So it really -- you know, if the device is
-- the device manufacturer has done a good

00:55:27.141 --> 00:55:28.141
job on their abstraction layers, then it can
run at 60 frames a second rock solid. When

00:55:28.141 --> 00:55:29.141
we start looking at problems where it's not
hitting that, it's usually something in the

00:55:29.141 --> 00:55:30.141
app itself, not always, but usually.
&gt;&gt;&gt; I'm just noticing that all across the

00:55:30.141 --> 00:55:31.141
board with tablets, it seems like an issue,
whereas with newer Android phones, even dual-core

00:55:31.141 --> 00:55:32.141
ones, it doesn't seem to be a problem.
&gt;&gt;David Sparks: Without specifics, I -- you

00:55:32.141 --> 00:55:33.141
know, it's -- the system performance thing
is a pretty complex problem. So it may be

00:55:33.141 --> 00:55:34.141
-- and I'm not sure what devices you're talking
about. But it may be something related to

00:55:34.141 --> 00:55:35.141
that specific device.
&gt;&gt;&gt; Okay. Thank you.

00:55:35.141 --> 00:55:36.141
&gt;&gt;&gt; I'm interested in frame buffer access
for screen shots and for remote control applications.

00:55:36.141 --> 00:55:37.141
And currently, the story for this is fragmented.
Some devices simply allow you to do that.

00:55:37.141 --> 00:55:38.141
In other cases, you can use some rather clunky
methods to accomplish it.

00:55:38.141 --> 00:55:39.141
I'm wondering if this will become part of
the core platform that's supported on all

00:55:39.141 --> 00:55:40.141
devices. And if not, why not? I understand
there are some security implications to that.

00:55:40.141 --> 00:55:41.141
But that's what the permission system is for.
So I'd like to find out more about what the

00:55:41.141 --> 00:55:42.141
plans are for that.
&gt;&gt;Dianne Hackborn: Well, I hope none of the

00:55:42.141 --> 00:55:43.141
devices actually let you do this. Because
that is a security issue.

00:55:43.141 --> 00:55:44.141
We are -- being able to -- letting the user
take screen shots is definitely something

00:55:44.141 --> 00:55:45.141
we know people have wanted for a long time.
I guess it's worth mentioning the thumbnails

00:55:45.141 --> 00:55:46.141
now in the Honeycomb UI, those are actually
done by taking a screen shot of the screen

00:55:46.141 --> 00:55:47.141
when the application -- when you leave the
application. So we have some infrastructure

00:55:47.141 --> 00:55:48.141
in there to do that now. And we should be
exposing something for that fairly soon.

00:55:48.141 --> 00:55:49.141
For application access, we don't have any
immediate plans for that.

00:55:49.141 --> 00:55:50.141
&gt;&gt;Chris DiBona: From the Internet, there's
a question here, it's sort of interestingly

00:55:50.141 --> 00:55:51.141
formed, so I'll just try to distill it.
There are questions about audio latency being

00:55:51.141 --> 00:55:52.141
a problem for Android. Are you seeing this,
Dave?

00:55:52.141 --> 00:55:53.141
&gt;&gt;David Sparks: Latency, really?
&gt;&gt;Chris DiBona: Yeah, latency. Like, you know,

00:55:53.141 --> 00:55:54.141
sending --
&gt;&gt;David Sparks: Never heard of it.

00:55:54.141 --> 00:55:55.141
No, we know latency --
&gt;&gt;Chris DiBona: And it says "compared to the

00:55:55.141 --> 00:55:56.141
iPhone." And it uses a star instead of the
whole name of the iPhone. It's okay to type

00:55:56.141 --> 00:55:57.141
"iPhone" into Google.
&gt;&gt;David Sparks: That's something a spell checker

00:55:57.141 --> 00:55:58.141
changes --
&gt;&gt;Chris DiBona: Maybe.

00:55:58.141 --> 00:55:59.141
&gt;&gt;David Sparks: Latency is a big problem.
We're working at -- we hope to be able to

00:55:59.141 --> 00:56:00.141
do something about it with ICS. As we investigate
it, it's actually a pretty complex problem.

00:56:00.141 --> 00:56:01.141
There are a number of different places where
latency gets introduced. Most of the latency

00:56:01.141 --> 00:56:02.141
is introduced below the -- below Android.
Basically, it's happening in the drivers or

00:56:02.141 --> 00:56:03.141
on the chipsets or somewhere in there. And
some of these are really obscene amounts,

00:56:03.141 --> 00:56:04.141
hundreds of milliseconds of latency in the
audio path.

00:56:04.141 --> 00:56:05.141
So it's something we're going to push on.
We started -- I think we introduced something

00:56:05.141 --> 00:56:06.141
in CDD Gingerbread, I want to say, which was
a should, you know, hit certain latencies.

00:56:06.141 --> 00:56:07.141
There are some interesting problems we need
to solve in the scheduler, so I'll be talking

00:56:07.141 --> 00:56:08.141
to Rebecca shortly about this. Because the
(inaudible) scheduler makes it really difficult

00:56:08.141 --> 00:56:09.141
to make sure that these low-latency audio
threads get scheduled when we need them to

00:56:09.141 --> 00:56:10.141
be scheduled every single time. That's probably
the biggest issue we're running into right

00:56:10.141 --> 00:56:11.141
now.
But it's a problem we have to deal with and

00:56:11.141 --> 00:56:12.141
hopefully the next release will get it. Obviously
it's not going to solve the problems for legacy

00:56:12.141 --> 00:56:13.141
devices, but it's going to get better.
&gt;&gt; I have a serious question for the market

00:56:13.141 --> 00:56:14.141
guy, and then I have a lighter question.
Is it at all possible that we might be able

00:56:14.141 --> 00:56:15.141
to see Android slash Google checkout gift
cards to send virtual gifts this holiday season

00:56:15.141 --> 00:56:16.141
coming up and not miss that boat all together
in the Android Market?

00:56:16.141 --> 00:56:17.141
&gt;&gt;Ficus Kirkpatrick: It's certainly possible.
&gt;&gt; Is it on the agenda, maybe?

00:56:17.141 --> 00:56:18.141
&gt;&gt;Ficus Kirkpatrick: It's something we're
looking at, for sure.

00:56:18.141 --> 00:56:19.141
&gt;&gt; And then the lighter question is, bug Droid?
Really?

00:56:19.141 --> 00:56:20.141
&gt;&gt; Yes, yes!
&gt;&gt;Chris DiBona: It was going to be Phillip,

00:56:20.141 --> 00:56:21.141
but it didn't work.
The second microphone, please.

00:56:21.141 --> 00:56:22.141
&gt;&gt; Sure. Any plans to support unicode characters
in the future?

00:56:22.141 --> 00:56:23.141
&gt;&gt;Dan Bornstein: We already support unicode
in general. Do you have something --

00:56:23.141 --> 00:56:24.141
&gt;&gt; Characters like Hindi or Tamil or like
that.

00:56:24.141 --> 00:56:25.141
&gt;&gt;Dan Bornstein: There are a couple of possible
questions. One might be about fonts, one might

00:56:25.141 --> 00:56:26.141
be input methods.
&gt;&gt; I have used fonts but they don't appear

00:56:26.141 --> 00:56:27.141
that good. So I want to see whether some basic
support is there. iPhone 4 already supports

00:56:27.141 --> 00:56:28.141
it, Windows supports it. I am just wondering,
when does Android does it?

00:56:28.141 --> 00:56:29.141
&gt;&gt;Dan Bornstein: So I don't know when -- We
are constantly revving our fonts, adding new

00:56:29.141 --> 00:56:30.141
characters. Obviously, I don't know about,
like, what schedule we have for any new sets

00:56:30.141 --> 00:56:31.141
of characters offhand. I know that we are
continually adding new sets. So my guess is

00:56:31.141 --> 00:56:32.141
eventually, we will cover your territory,
but we don't have a schedule for that.

00:56:32.141 --> 00:56:33.141
&gt;&gt;Dave Sparks: There is another issue which
is just the size. We can't include every single

00:56:33.141 --> 00:56:34.141
font out there. So manufacturers have a choice
of fonts they put into a device. It's going

00:56:34.141 --> 00:56:35.141
to be dictated by what geography is for that
device. So you are not going to see a device

00:56:35.141 --> 00:56:36.141
that have universal support for every single
language out. There so it's definitely going

00:56:36.141 --> 00:56:37.141
to be regional.
&gt;&gt;Dianne Hackborn: And to that, there is work

00:56:37.141 --> 00:56:38.141
going on right now for complex character shaping
and bi-di supports. I can't give you a date

00:56:38.141 --> 00:56:39.141
for that, but that is something that is being
worked on that.

00:56:39.141 --> 00:56:40.141
&gt;&gt;Dan Morrill: There are actually threads
on that on the android-contrib mailing list,

00:56:40.141 --> 00:56:41.141
so if you want to find out what the details
are, the guys working on that are actually

00:56:41.141 --> 00:56:42.141
on that list, and there's a thread that might
be interesting and provide you some specific

00:56:42.141 --> 00:56:43.141
info there, too.
&gt;&gt; Thank you.

00:56:43.141 --> 00:56:44.141
&gt;&gt;Chris DiBona: The fellow at the first microphone.
&gt;&gt; What, if anything, are you doing in terms

00:56:44.141 --> 00:56:45.141
of real-time support in Android? Or support
for embedded systems beyond the platforms

00:56:45.141 --> 00:56:46.141
you support now.
&gt;&gt;Chris DiBona: For rocket control, that kind

00:56:46.141 --> 00:56:47.141
of thing?
&gt;&gt; Whatever.

00:56:47.141 --> 00:56:48.141
&gt;&gt;Chris DiBona: I guess the iRobot guys are
coming up. They can answer that.

00:56:48.141 --> 00:56:49.141
&gt;&gt;Rebecca Zavin: I can try. It depends on
what you mean by real time and what kind of

00:56:49.141 --> 00:56:50.141
systems you are envisioning.
In terms of other embedded systems, you know,

00:56:50.141 --> 00:56:51.141
we certainly have, in the past, worked directly
on a number of different chipsets and there

00:56:51.141 --> 00:56:52.141
are others supported by the chipset vendors
and by the various OEMs.

00:56:52.141 --> 00:56:53.141
&gt;&gt; And real-time support?
&gt;&gt;Rebecca Zavin: I have to get a sense of

00:56:53.141 --> 00:56:54.141
exactly what you are looking for. From a platform
perspective? I wouldn't think that would necessarily

00:56:54.141 --> 00:56:55.141
be something we would do. But from a -- if
you wanted to put Android on top of whatever

00:56:55.141 --> 00:56:56.141
operating system, low-level kernel operating
system with support, that's within the domain

00:56:56.141 --> 00:56:57.141
of any developer or chipset vendor.
&gt;&gt; Okay.

00:56:57.141 --> 00:56:58.141
&gt;&gt;Chris DiBona: Okay. So if your question
is super short, we can take it; otherwise,

00:56:58.141 --> 00:56:59.141
we will wrap up. I will remind everyone we
have office hours throughout the days, so

00:56:59.141 --> 00:57:00.141
please find us there.
Is it short? Make it short. The other people

00:57:00.141 --> 00:57:01.141
we won't be able to get to because we are
going to go on to the next guys.

00:57:01.141 --> 00:57:02.141
&gt;&gt; When a user installs an app, it seems like
the market prompts them about the reason why

00:57:02.141 --> 00:57:03.141
they uninstalled it. As a developer, can we
get that data?

00:57:03.141 --> 00:57:04.141
&gt;&gt;Chris DiBona: Ficus?
&gt;&gt;Ficus Kirkpatrick: Not currently.

00:57:04.141 --> 00:57:05.141
&gt;&gt; Are there any plans --
&gt;&gt;Chris DiBona: Not currently.

00:57:05.141 --> 00:57:06.141
&gt;&gt; -- for that?
&gt;&gt;Chris DiBona: Sorry.

00:57:06.141 --> 00:57:07.141
Thank you, guys. You can get off the stage
now.

00:57:07.141 --> 00:57:08.141
[ Applause ]
&gt;&gt;Chris DiBona: I would like to welcome a

00:57:08.141 --> 00:57:09.141
question from the moderator which is I have
a question for the robot. When will you be

00:57:09.141 --> 00:57:10.141
available for purchase?
.

00:57:10.141 --> 00:57:11.141
&gt;&gt;Colin Angle: Thank you.
The answer to the question is the robot, we

00:57:11.141 --> 00:57:12.141
are going to be talking about today, is going
to be available as a developer version this

00:57:12.141 --> 00:57:13.141
year. So that if you are interested in working
with us, come up to our booth, give us your

00:57:13.141 --> 00:57:14.141
name and we will be developing these guys
and building more of them throughout the year,

00:57:14.141 --> 00:57:15.141
and so that we already have several of these
robots here being worked on by the Google

00:57:15.141 --> 00:57:16.141
team. And more of them will come into existence
as the year plays out.

00:57:16.141 --> 00:57:17.141
So, hello. My name is Colin Angle. I am the
co-founder, CEO and chairman of iRobot, but

00:57:17.141 --> 00:57:18.141
I lay that all aside in the spirit of Chris's
introduction at the beginning of this Fireside

00:57:18.141 --> 00:57:19.141
Chat.
I am an engineer. I am a double E with minor

00:57:19.141 --> 00:57:20.141
in computer science, and he said that when
engineers talk to engineers, interesting things

00:57:20.141 --> 00:57:21.141
happen, and hopefully we can be true to that
charge, because there's a big question out

00:57:21.141 --> 00:57:22.141
there, where are the robots?
And I will tell you that, well, let's just

00:57:22.141 --> 00:57:23.141
-- I need a show of hands. When I was growing
up, I always assumed that there would be more

00:57:23.141 --> 00:57:24.141
robots in the world than exist today. How
many people in the audience are satisfied

00:57:24.141 --> 00:57:25.141
with the current state of robotics?
All right. We have one hands up in the entire

00:57:25.141 --> 00:57:26.141
audience.
Now, there's a reason for that, and the reason

00:57:26.141 --> 00:57:27.141
is that we have been seduced by the coolness
of robots, by the vision and the dream of

00:57:27.141 --> 00:57:28.141
robots, and forgotten the fact that industries
are created when the right business conditions

00:57:28.141 --> 00:57:29.141
allow for the robots and businesses to be
created. For example, there is not going to

00:57:29.141 --> 00:57:30.141
be a robot industry until more companies create
robots that deliver more value than they cost

00:57:30.141 --> 00:57:31.141
to produce. Academia has been overperforming
in the world of robots. We have a tremendous

00:57:31.141 --> 00:57:32.141
amount of technology being developed for robots,
but we don't have enough robotic products.

00:57:32.141 --> 00:57:33.141
And so I am here to make an appeal to all
of you to help solve the challenge of the

00:57:33.141 --> 00:57:34.141
lack of robots in the world.
So there's three ways that this robotic business

00:57:34.141 --> 00:57:35.141
becomes real. The first is to find problems
so critical, so dramatic that only a robot

00:57:35.141 --> 00:57:36.141
can solve it, and, thus it, doesn't matter
how much the robot costs. Okay. Here are some

00:57:36.141 --> 00:57:37.141
examples. We have 4,000 robots that we created
over in Iraq and Afghanistan defusing bombs.

00:57:37.141 --> 00:57:38.141
There's an incredibly valuable thing. The
robots -- what matters is you can throw these

00:57:38.141 --> 00:57:39.141
things off two-story, three-story buildings,
they survive. They save soldiers' lives. You

00:57:39.141 --> 00:57:40.141
can create a business around that.
We have robots at the Fukushima Daiichi nuclear

00:57:40.141 --> 00:57:41.141
power plant right now, going into the power
plant helping to find out what's going on,

00:57:41.141 --> 00:57:42.141
not a good thing for people to be doing.
So there are businesses that we can create

00:57:42.141 --> 00:57:43.141
there.
A second thing is to find robot-friendly tasks

00:57:43.141 --> 00:57:44.141
to do. Robots are really good at vacuuming
the floor, because the floor is flat, not

00:57:44.141 --> 00:57:45.141
a lot of objects around. You can have a moderately
sophisticated navigation system and do very,

00:57:45.141 --> 00:57:46.141
very well there, and you can build such robots
for hundreds of dollars instead of hundreds

00:57:46.141 --> 00:57:47.141
of thousands of dollars.
So the Roomba, six million sold.

00:57:47.141 --> 00:57:48.141
But the third one is an interesting one. The
third one is technology advancements enabling

00:57:48.141 --> 00:57:49.141
robots to do more things, more like Rosie
from the Jetsons, the type of interactions

00:57:49.141 --> 00:57:50.141
we all thought of.
That's where you all come in because the robot

00:57:50.141 --> 00:57:51.141
industry can't be trusted to solve this problem.
We need the mobile computing industry to come

00:57:51.141 --> 00:57:52.141
in and save our bacons to some extent through
the creation of stuff like this (indicating).

00:57:52.141 --> 00:57:53.141
Why? Because these tablets, you can talk to
them. They have done more for voice recognition

00:57:53.141 --> 00:57:54.141
than robotics has in decades.
Image understanding, voice and video over

00:57:54.141 --> 00:57:55.141
IP. Very good and strong development tools
exist to make these tablets easy to interact

00:57:55.141 --> 00:57:56.141
with.
So what we at the robot industry realized

00:57:56.141 --> 00:57:57.141
was this is a fantastic head for a robot.
Okay? It does everything. You have got a camera

00:57:57.141 --> 00:57:58.141
on this thing, you have got speakers, you
have got a microphone input. You can put eyes

00:57:58.141 --> 00:57:59.141
and faces on this thing. This is a fantastic
head for a robot.

00:57:59.141 --> 00:58:00.141
So what was missing is the body.
So here is a robot called AVA. We have got

00:58:00.141 --> 00:58:01.141
these things running around and what does
this robot do? It navigates. It builds maps.

00:58:01.141 --> 00:58:02.141
It carries tablets. It has big speakers on
it. It has batteries, power supplies, things

00:58:02.141 --> 00:58:03.141
like that. So this robot, our guys, our engineers
have gone around and mapped this whole conference

00:58:03.141 --> 00:58:04.141
room center. We have a screen so you can,
on your tablet, push a button and say go there,

00:58:04.141 --> 00:58:05.141
and it will go and drive through the mobs,
make it to where it needs to go safely and

00:58:05.141 --> 00:58:06.141
securely.
There's a processing system on here running

00:58:06.141 --> 00:58:07.141
a low-level operating system, independent
of the tablet. So if the tablet crashes or

00:58:07.141 --> 00:58:08.141
the tablet tells the robot to drive off this
cliff, the aware operating system here, which

00:58:08.141 --> 00:58:09.141
has been architected not to crash, to do a
few things very, very well, will keep that

00:58:09.141 --> 00:58:10.141
robot from doing something wrong.
So we have also developed a very sophisticated

00:58:10.141 --> 00:58:11.141
API between aware and the tablets. So now
we have a platform which will make all much

00:58:11.141 --> 00:58:12.141
you developers for applications for robots.
And what my company is doing is taking this,

00:58:12.141 --> 00:58:13.141
making these robots commercially available
to developers this year, B2B applications

00:58:13.141 --> 00:58:14.141
next year, and then beyond getting the price
point, so this is a practical thing to have

00:58:14.141 --> 00:58:15.141
in households within a few years.
So our goal is to get the installed base up

00:58:15.141 --> 00:58:16.141
so that you all can make money writing apps
for robots, so that we all can ultimately

00:58:16.141 --> 00:58:17.141
achieve this vision of having robots impactfully
doing cool stuff for us in our lifetime.

00:58:17.141 --> 00:58:18.141
So that's my pitch. And if you think about
what sort of apps are going on, you can think

00:58:18.141 --> 00:58:19.141
about making information proactive. What happens
when you send an e-mail and the person doesn't

00:58:19.141 --> 00:58:20.141
respond? The robot can get them.
[ Laughter ]

00:58:20.141 --> 00:58:21.141
&gt;&gt;Colin Angle: Remote presence. What if I
could give this talk via robot, but not just

00:58:21.141 --> 00:58:22.141
as a mobile video conferencing system; as
something I can tap on the screen, say go

00:58:22.141 --> 00:58:23.141
follow that person. Or I can have cool software
which determines whether or not you are paying

00:58:23.141 --> 00:58:24.141
attention and take your image being beamed
to me, make you red and say this person is

00:58:24.141 --> 00:58:25.141
asleep. His name is Mark so you should pick
on him in the next comment you say. You can

00:58:25.141 --> 00:58:26.141
have ways of projecting yourself via robot
that would be more impactful than being there

00:58:26.141 --> 00:58:27.141
yourself.
And, of course, the last class of applications

00:58:27.141 --> 00:58:28.141
is actually doing physical work, because robots
are physical. They are in our world, and so

00:58:28.141 --> 00:58:29.141
that fetching, bringing things, going out
and doing the manual type of work which information

00:58:29.141 --> 00:58:30.141
alone, obviously, can't deliver to us creates
a huge set of opportunities. So this is the

00:58:30.141 --> 00:58:31.141
robot. We have a booth out there. We have
a all sorts of guys in black shirts who don't

00:58:31.141 --> 00:58:32.141
say Google, they say iRobot on them. And we
love your support and interest in making these

00:58:32.141 --> 00:58:33.141
dreams a reality.
Thank you very much.

00:58:33.141 --> 00:58:33.142
[ Applause ]

