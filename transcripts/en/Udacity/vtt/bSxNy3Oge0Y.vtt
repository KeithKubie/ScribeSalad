WEBVTT
Kind: captions
Language: en

00:00:00.440 --> 00:00:03.240
As you see in the algorithm for finding the first match was a bit more

00:00:03.240 --> 00:00:05.580
involved, and it looks like our friendly Udacians

00:00:05.580 --> 00:00:10.670
have given us some more starter code. We have an integer index that starts

00:00:10.670 --> 00:00:14.912
at zero. We have a boolean variable to keep track of whether we already found a

00:00:14.912 --> 00:00:19.460
match. Now, we have to keep looking while what? First of all, while we haven't

00:00:19.460 --> 00:00:24.880
yet found a match, and while we'll still have a chance of finding one. Now I is

00:00:24.880 --> 00:00:29.578
the index. We need the actual picture at that index. Here it is. We need to

00:00:29.578 --> 00:00:35.110
check whether it's a match. It's a match if it's taller than it is wide. Now if

00:00:35.110 --> 00:00:40.020
it is a match, then we set found to true. Otherwise, we keep on looking at the

00:00:40.020 --> 00:00:46.910
next position. Finally, if we have found a match, then we need to draw it.

00:00:46.910 --> 00:00:53.010
Where do we find it? Well, at position I. So we get it from here. When you run

00:00:53.010 --> 00:00:57.368
the program, it shows the first match. It happens to be this one. It might be

00:00:57.368 --> 00:01:00.510
nice to know what all the matches are. And as it turns out, that's actually

00:01:00.510 --> 00:01:04.429
easier to do then finding the first one. Let's see how to do that.

