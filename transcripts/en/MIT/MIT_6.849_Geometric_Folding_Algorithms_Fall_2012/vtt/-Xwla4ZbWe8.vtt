WEBVTT
Kind: captions
Language: en

00:00:04.710 --> 00:00:06.420
PROFESSOR: Let's get started.

00:00:06.420 --> 00:00:09.310
Today we're really going
to take on folding polygons

00:00:09.310 --> 00:00:11.630
into polyhedra in a big way.

00:00:11.630 --> 00:00:14.690
We got started last time.

00:00:14.690 --> 00:00:16.390
Today we're going
to do the real thing

00:00:16.390 --> 00:00:18.280
with some tape and scissors.

00:00:22.800 --> 00:00:27.695
Folding polyhedra.

00:00:32.439 --> 00:00:34.640
It's pretty much the
last kind of folding

00:00:34.640 --> 00:00:36.950
that we're going to be
talking about in this class.

00:00:36.950 --> 00:00:42.770
We see linkage folding, paper
folding, unfolding polyhedra,

00:00:42.770 --> 00:00:44.930
and finally, folding polyhedra.

00:00:47.789 --> 00:00:49.080
So this is a, sort of, problem.

00:00:49.080 --> 00:00:50.494
We're given some polygon.

00:00:50.494 --> 00:00:52.660
We're not told where to
folder or how to glue it up,

00:00:52.660 --> 00:00:53.830
necessarily.

00:00:53.830 --> 00:00:55.970
We'd like to find,
is there some way

00:00:55.970 --> 00:00:59.555
to glue this
boundary to itself--

00:00:59.555 --> 00:01:06.050
I've drawn this picture
before, something like this--

00:01:06.050 --> 00:01:08.925
in order to make a
convex polyhedron?

00:01:15.695 --> 00:01:19.580
There's several versions
of this problem.

00:01:19.580 --> 00:01:23.905
One is the decision version,
which is, I give you a polygon.

00:01:23.905 --> 00:01:26.395
And I want to know, does it
make any convex polyhedron?

00:01:30.840 --> 00:01:33.230
For the cross,
the answer is yes.

00:01:33.230 --> 00:01:36.300
We will see examples later
today where the answer is no.

00:01:36.300 --> 00:01:38.160
In fact, most of the
time the answer is no.

00:01:43.580 --> 00:01:53.110
So given a polygon, can its
boundary be glued to itself?

00:01:57.010 --> 00:01:59.350
And this is the
distinguishing feature

00:01:59.350 --> 00:02:03.860
from origami is that's
all you get to do

00:02:03.860 --> 00:02:06.420
and no multiple coverage.

00:02:06.420 --> 00:02:15.820
You want exactly
that surface to be

00:02:15.820 --> 00:02:19.180
folded into convex polyhedron.

00:02:37.810 --> 00:02:41.580
And today's lecture is going
to be mainly about mathematics

00:02:41.580 --> 00:02:43.630
for solving this problem.

00:02:43.630 --> 00:02:45.580
The next class will be
algorithms for solving

00:02:45.580 --> 00:02:46.310
this problem.

00:02:46.310 --> 00:02:49.420
So we need some mathematical
tools, some cool geometry

00:02:49.420 --> 00:02:54.172
stuff by a Russian
geometer called Alexandrov,

00:02:54.172 --> 00:02:56.426
from the '40s.

00:02:56.426 --> 00:02:58.300
And that's what we'll
be talking about today.

00:02:58.300 --> 00:03:00.758
Then we'll see how that turns
into an algorithm next class.

00:03:07.100 --> 00:03:08.310
Decision is nice.

00:03:08.310 --> 00:03:13.490
But of course, we'd like to
actually find these gluings.

00:03:13.490 --> 00:03:16.950
I want to actually know that
this guy folds into a cube.

00:03:16.950 --> 00:03:19.860
So there's the
enumeration problem,

00:03:19.860 --> 00:03:24.560
which is list all the
gluings and all the foldings.

00:03:32.160 --> 00:03:35.110
And there's also the more
mathematical combinatorial

00:03:35.110 --> 00:03:43.350
problem, which is,
how many can there be?

00:03:53.960 --> 00:03:57.270
And we'll start
addressing that today

00:03:57.270 --> 00:03:59.730
by showing that there
can be infinitely many.

00:03:59.730 --> 00:04:01.890
There can be continua.

00:04:01.890 --> 00:04:04.960
For example, this
polygon, this rectangle,

00:04:04.960 --> 00:04:07.680
can fold into infinitely
many polyhedra.

00:04:07.680 --> 00:04:10.610
We'll prove that today.

00:04:10.610 --> 00:04:11.830
We won't do all of them.

00:04:11.830 --> 00:04:15.760
But we'll one of them, I guess.

00:04:15.760 --> 00:04:19.630
So that's makes this listing
all of them a little bit

00:04:19.630 --> 00:04:21.310
difficult, when there's
infinitely many.

00:04:21.310 --> 00:04:23.740
But it turns out they'll
fall into some nice classes.

00:04:23.740 --> 00:04:25.156
We'll be able to
characterize that

00:04:25.156 --> 00:04:26.666
at the end of today's class.

00:04:26.666 --> 00:04:28.540
And so this problem is
actually well defined.

00:04:28.540 --> 00:04:31.780
They're a finite number
of distinct classes.

00:04:31.780 --> 00:04:34.422
And you could list them all.

00:04:34.422 --> 00:04:35.880
There can actually
be exponentially

00:04:35.880 --> 00:04:37.970
many of those classes.

00:04:37.970 --> 00:04:39.610
But most the time,
it's polynomial.

00:04:39.610 --> 00:04:41.260
That'll be more next class.

00:04:41.260 --> 00:04:45.470
These are the sorts of problems
we're interested in folding.

00:04:45.470 --> 00:04:48.270
Now, one natural
question is, why am I

00:04:48.270 --> 00:04:50.240
restricting myself to convex?

00:04:50.240 --> 00:04:52.490
And one answer is, well,
that's where most of the work

00:04:52.490 --> 00:04:53.370
has been done.

00:04:53.370 --> 00:04:56.530
But there is some nice
work on the nonconvex case.

00:04:56.530 --> 00:04:57.780
So let me tell you about that.

00:05:02.090 --> 00:05:08.786
So for nonconvex-- or
where you don't care about

00:05:08.786 --> 00:05:10.410
whether the result
is convex-- you just

00:05:10.410 --> 00:05:13.420
want it to make some polyhedron.

00:05:13.420 --> 00:05:15.425
You can show it's
always possible.

00:05:20.660 --> 00:05:24.040
What this means is if
I'm given some polygon,

00:05:24.040 --> 00:05:25.900
and I glue up the
boundary somehow--

00:05:25.900 --> 00:05:27.390
and this result
even holds if you

00:05:27.390 --> 00:05:29.410
don't glue up all
of the boundary.

00:05:29.410 --> 00:05:32.250
Because then we're no longer
trying to make a convex thing.

00:05:32.250 --> 00:05:34.600
For example, I could
glue up all the boundary,

00:05:34.600 --> 00:05:38.510
as long as the way that I glue
things is orientable-- I don't

00:05:38.510 --> 00:05:44.390
put twists in an unresolvable
way, in these gluings--

00:05:44.390 --> 00:05:47.590
then you're golden.

00:05:47.590 --> 00:05:58.875
So you need that the surface
is orientable or has boundary.

00:06:06.700 --> 00:06:10.860
So this is posed as an
open problem in our book.

00:06:10.860 --> 00:06:12.740
And then we
discovered, this year,

00:06:12.740 --> 00:06:17.380
that it was already solved
in 1960, but in Russian.

00:06:17.380 --> 00:06:19.490
And then, it was only
translated in 1996.

00:06:19.490 --> 00:06:22.360
We still should have
known about it in '96.

00:06:22.360 --> 00:06:25.641
But we finally
realized that they

00:06:25.641 --> 00:06:27.140
didn't talk about
folding or gluing.

00:06:27.140 --> 00:06:30.850
They were talking about
realizing polyhedral metrics,

00:06:30.850 --> 00:06:33.210
which is the language we're
going to translate to soon.

00:06:33.210 --> 00:06:37.680
But our bad.

00:06:37.680 --> 00:06:39.760
And I think this is a
pretty complicated result.

00:06:39.760 --> 00:06:41.468
So we're not going to
talk about it here.

00:06:41.468 --> 00:06:42.755
But it's interesting.

00:06:42.755 --> 00:06:45.200
I'd like to learn more about it.

00:06:45.200 --> 00:06:50.340
So it's by Burago
and Zalgaller, I've

00:06:50.340 --> 00:06:51.910
used others of their theorems.

00:06:51.910 --> 00:06:55.350
So it's funny I
didn't know this one.

00:06:55.350 --> 00:06:57.230
In some sense, the
decision question

00:06:57.230 --> 00:07:00.190
isn't interesting for
non-convex polyhedra.

00:07:00.190 --> 00:07:01.834
So by restricting
the convex, saying,

00:07:01.834 --> 00:07:03.250
I want to make
convex shapes, this

00:07:03.250 --> 00:07:04.541
becomes an interesting problem.

00:07:04.541 --> 00:07:07.200
And it leads to lots of cool
mathematics and algorithms.

00:07:07.200 --> 00:07:10.580
And that's what we're
going to talk about.

00:07:10.580 --> 00:07:15.680
So I want to talk about
this guy, Alexandrov.

00:07:18.570 --> 00:07:22.380
Not really the guy, but the
mathematics that he did.

00:07:22.380 --> 00:07:25.130
And we're going to appropriate
his name a little bit

00:07:25.130 --> 00:07:27.294
and talk about
Alexandrov gluings.

00:07:27.294 --> 00:07:29.460
This is a term that we made
up, obviously he didn't.

00:07:29.460 --> 00:07:32.043
You don't usually make up your
own terms named after yourself.

00:07:35.350 --> 00:07:37.644
We'd like to know which
gluings are valid.

00:07:37.644 --> 00:07:40.060
We're not going to think about
where the thing is creased,

00:07:40.060 --> 00:07:41.020
how to fold.

00:07:41.020 --> 00:07:43.730
We're just going to focus
on the gluing for now.

00:07:43.730 --> 00:07:45.790
What makes a gluing valid?

00:07:45.790 --> 00:07:49.170
Well, one thing that we
talked about last time

00:07:49.170 --> 00:07:51.210
is that once you have a
gluing, in this picture,

00:07:51.210 --> 00:07:53.050
you can compute shortest paths.

00:07:53.050 --> 00:07:56.010
You can compute the shortest
path from this vertex

00:07:56.010 --> 00:07:56.809
to this vertex.

00:07:56.809 --> 00:07:58.100
But here, it's a straight line.

00:07:58.100 --> 00:07:59.516
There's probably
another path that

00:07:59.516 --> 00:08:01.210
goes around a different way.

00:08:01.210 --> 00:08:03.600
Last time we did the shortest
path from here to here.

00:08:03.600 --> 00:08:05.882
And it was some
complicated thing.

00:08:05.882 --> 00:08:08.544
I won't try to do it again.

00:08:08.544 --> 00:08:09.960
But you can compute
shortest paths

00:08:09.960 --> 00:08:12.280
once you know what's
connected to what.

00:08:12.280 --> 00:08:15.520
So this defines what
we call a metric.

00:08:15.520 --> 00:08:17.770
We're going to learn
something about that.

00:08:17.770 --> 00:08:29.820
Polygon plus gluing
induce a metric.

00:08:29.820 --> 00:08:32.864
Metric just means it tells you
how far different points are

00:08:32.864 --> 00:08:33.530
from each other.

00:08:36.360 --> 00:08:39.850
And we can compute that metric
by computing shortest paths.

00:08:43.830 --> 00:08:45.830
I'm going to start
abstracting a little bit away

00:08:45.830 --> 00:08:49.070
from polygon plus gluing
and just think about,

00:08:49.070 --> 00:08:51.460
there's some surface
that, in your mind,

00:08:51.460 --> 00:08:53.692
it's not really
geometric thing entirely.

00:08:53.692 --> 00:08:55.400
But locally, you
understand the geometry.

00:08:55.400 --> 00:08:57.540
If you're at some
corner, you can

00:08:57.540 --> 00:09:01.410
understand what other
vertices are near to you

00:09:01.410 --> 00:09:03.150
and how to walk around
on that surface.

00:09:03.150 --> 00:09:06.800
So locally, you understand the
metric and how it's laid out.

00:09:06.800 --> 00:09:09.750
When you're at this
corner, you know--

00:09:09.750 --> 00:09:13.310
and let's say I glued this to
this-- that your curvature is

00:09:13.310 --> 00:09:16.290
90 degrees, that there's 270
degrees of material there.

00:09:16.290 --> 00:09:20.250
And you could go any one of
those 270 degrees of directions

00:09:20.250 --> 00:09:22.410
from there.

00:09:22.410 --> 00:09:25.400
So that's the sense in
which we have a metric.

00:09:25.400 --> 00:09:28.680
Now, there are three things
that this metric should satisfy

00:09:28.680 --> 00:09:31.989
if we want to make
something that's convex.

00:09:31.989 --> 00:09:32.655
Any suggestions?

00:09:38.240 --> 00:09:40.267
AUDIENCE: Less than
or equal to 360.

00:09:40.267 --> 00:09:42.600
PROFESSOR: Less than or equal
to 360 degrees of material

00:09:42.600 --> 00:09:43.141
an any point.

00:09:43.141 --> 00:09:46.730
Yep, that is what we
would call convexity.

00:09:56.000 --> 00:09:57.470
It's really a local convexity.

00:10:00.910 --> 00:10:07.790
All points have 0 or
positive curvature.

00:10:07.790 --> 00:10:09.040
That's the way I would say it.

00:10:09.040 --> 00:10:14.380
Remember, curvature
was 360 minus some

00:10:14.380 --> 00:10:15.547
of the angles at the vertex.

00:10:15.547 --> 00:10:18.046
So this is the same as saying
you have, at most, 360 degrees

00:10:18.046 --> 00:10:18.970
of material any point.

00:10:18.970 --> 00:10:20.720
This is obviously necessary.

00:10:20.720 --> 00:10:22.901
And the point is, you can
evaluate this just knowing

00:10:22.901 --> 00:10:24.150
how things are glued together.

00:10:24.150 --> 00:10:26.350
You don't need to
understand 3D geometry.

00:10:26.350 --> 00:10:27.867
It's a local property.

00:10:27.867 --> 00:10:29.450
And certainly necessary
if we're going

00:10:29.450 --> 00:10:32.680
to try to make a
convex polyhedron.

00:10:32.680 --> 00:10:33.480
Anything else?

00:10:39.950 --> 00:10:41.759
They get less obvious
from here, I guess.

00:10:47.574 --> 00:10:48.240
Any topologists?

00:10:56.335 --> 00:10:57.800
AUDIENCE: You
shouldn't have holes.

00:10:57.800 --> 00:10:59.060
PROFESSOR: Shouldn't have holes.

00:10:59.060 --> 00:10:59.559
Right.

00:10:59.559 --> 00:11:03.070
So I should definitely
glue everything together.

00:11:03.070 --> 00:11:05.860
It's sort of implicit
in this statement

00:11:05.860 --> 00:11:08.300
but not totally explicit.

00:11:08.300 --> 00:11:09.885
And there's a little
more than that.

00:11:09.885 --> 00:11:11.760
Not only should everything
to glued together,

00:11:11.760 --> 00:11:17.980
but for example, if I glued
this edge to this edge

00:11:17.980 --> 00:11:24.410
and I glued this edge to this
edge-- something like that.

00:11:24.410 --> 00:11:26.800
That's probably not
going to work out.

00:11:26.800 --> 00:11:29.550
Crossings are bad.

00:11:29.550 --> 00:11:32.560
And what's really going
wrong there is the topology.

00:11:32.560 --> 00:11:34.810
If we're trying to make
something that's convex,

00:11:34.810 --> 00:11:38.060
it better be
topologically a sphere.

00:11:38.060 --> 00:11:40.640
So that's the third condition.

00:11:46.336 --> 00:11:47.710
And this is, again,
something you

00:11:47.710 --> 00:11:52.765
can figure out just by
looking at the local metric.

00:12:01.636 --> 00:12:03.010
This is a property
about metrics.

00:12:03.010 --> 00:12:04.670
In their case of
polygons plus gluings,

00:12:04.670 --> 00:12:06.180
it's really easy
to figure out when

00:12:06.180 --> 00:12:10.589
this is the case, which is that
the gluing should be complete,

00:12:10.589 --> 00:12:11.380
as you were saying.

00:12:11.380 --> 00:12:14.170
You shouldn't leave
anything blank.

00:12:14.170 --> 00:12:16.490
Everything gets
glued to something.

00:12:16.490 --> 00:12:20.460
And it has no
crossings that will

00:12:20.460 --> 00:12:23.952
be equivalent to being
sphere like, in our case.

00:12:23.952 --> 00:12:25.660
The other property
actually always holds.

00:12:25.660 --> 00:12:29.560
So it's no surprise that
you didn't think of it.

00:12:32.430 --> 00:12:34.750
But if you want to think
a little more generally,

00:12:34.750 --> 00:12:38.550
this a key property we're
using that we started

00:12:38.550 --> 00:12:43.740
from a polygon, not some
smooth curve thing, which

00:12:43.740 --> 00:12:50.380
is that only a finite number of
points have nonzero curvature.

00:12:55.900 --> 00:12:58.150
If we want to make a polyhedron
with a finite a number

00:12:58.150 --> 00:12:59.800
vertices, well,
these are going to be

00:12:59.800 --> 00:13:03.490
the vertices, all the points
with nonzero curvature.

00:13:03.490 --> 00:13:05.730
So there had better be a
finite number of those.

00:13:05.730 --> 00:13:07.970
Now, when we start with
a polygon and just glue

00:13:07.970 --> 00:13:10.220
some finite set of
segments to each other,

00:13:10.220 --> 00:13:12.280
that will happen automatically.

00:13:12.280 --> 00:13:15.790
But it's a property we're using.

00:13:15.790 --> 00:13:19.020
So these three
properties together

00:13:19.020 --> 00:13:22.340
are what I'm going to
call Alexandrov gluing.

00:13:22.340 --> 00:13:28.200
If you satisfy all three of
these, you are Alexandrov.

00:13:28.200 --> 00:13:31.950
And now, we have a cool
theorem about Alexandrov

00:13:31.950 --> 00:13:34.100
gluings is called
Alexandrov's Theorem.

00:13:37.160 --> 00:13:39.650
He had a lot of gluings,
but this the one

00:13:39.650 --> 00:13:42.320
we use a lot in this field.

00:13:50.990 --> 00:13:54.810
Originally proved
in 1941, I believe.

00:13:54.810 --> 00:13:59.370
Then finally, his big
book about convex surfaces

00:13:59.370 --> 00:14:04.120
was translated to English
in 2005, pretty recent.

00:14:04.120 --> 00:14:07.120
But we've been reading other
translations, and so on,

00:14:07.120 --> 00:14:09.520
to understand this theorem.

00:14:23.900 --> 00:14:26.010
I guess I'm not using
Alexandrov gluing here.

00:14:26.010 --> 00:14:28.260
But we have a
convex, polyhedral,

00:14:28.260 --> 00:14:29.770
and topologically sphere.

00:14:42.160 --> 00:14:44.490
Take any one of those things.

00:14:44.490 --> 00:14:50.840
Then it's realized by a
unique convex polyhedron.

00:14:58.900 --> 00:15:01.490
So this is basically the answer.

00:15:01.490 --> 00:15:04.150
And from our perspective, it's
like , yeah, yeah, polyhedral.

00:15:04.150 --> 00:15:05.094
Yeah, no crossings.

00:15:05.094 --> 00:15:06.510
But really, the
central constraint

00:15:06.510 --> 00:15:09.010
that we have to worry
about is convexity,

00:15:09.010 --> 00:15:11.810
that we never glue
together too much material.

00:15:11.810 --> 00:15:14.640
As long as you don't glue
together more than 360 degrees

00:15:14.640 --> 00:15:17.630
material at any
point, then that thing

00:15:17.630 --> 00:15:19.555
will realize a unique
convex polyhedron.

00:15:22.710 --> 00:15:24.944
It's pretty cool but surprising.

00:15:24.944 --> 00:15:26.610
The uniqueness should
not be surprising,

00:15:26.610 --> 00:15:29.900
because we proved
that last class.

00:15:29.900 --> 00:15:31.570
I can remind you briefly.

00:15:31.570 --> 00:15:33.070
We proved Cauchy's
Rigidity Theorem,

00:15:33.070 --> 00:15:34.570
which is not quite the same.

00:15:34.570 --> 00:15:37.824
And then we said, oh, yeah, if
you have some convex polyhedron

00:15:37.824 --> 00:15:39.240
metric, you don't
know necessarily

00:15:39.240 --> 00:15:40.490
know what it looks like in 3D.

00:15:40.490 --> 00:15:42.090
But you can compute
all shortest paths

00:15:42.090 --> 00:15:45.070
from every vertex to
every other vertex.

00:15:45.070 --> 00:15:48.710
And then however you
try to fold that thing,

00:15:48.710 --> 00:15:50.310
every edge is a shortest path.

00:15:50.310 --> 00:15:53.630
That's just a fact
about polyhedra.

00:15:53.630 --> 00:15:57.490
The edges must be some subset
of these shortest paths.

00:15:57.490 --> 00:16:01.344
So you think of this
as a convex polyhedron.

00:16:01.344 --> 00:16:02.760
And then Cauchy's
Rigidity Theorem

00:16:02.760 --> 00:16:05.470
says, there's only
one convex realization

00:16:05.470 --> 00:16:08.000
of that thing with those edges.

00:16:08.000 --> 00:16:11.690
And Cauchy allows some of the
edges to be flat like this.

00:16:11.690 --> 00:16:14.310
So there will only be one
way to embed that in 3D--

00:16:14.310 --> 00:16:15.699
at most one way.

00:16:15.699 --> 00:16:17.490
The surprising thing
is that there actually

00:16:17.490 --> 00:16:21.740
is one way that you can
realize-- I'm just thinking

00:16:21.740 --> 00:16:25.330
totally locally in
this kind of gluing--

00:16:25.330 --> 00:16:27.590
and yet, as long as
I don't glue together

00:16:27.590 --> 00:16:31.600
too much material at any point,
I get a convex polyhedron.

00:16:31.600 --> 00:16:34.560
With the usual gluing here,
without these crossings,

00:16:34.560 --> 00:16:35.945
I get a cube.

00:16:35.945 --> 00:16:38.670
No surprise, and it's unique.

00:16:38.670 --> 00:16:40.920
But there are other ways
to glue this polygon.

00:16:40.920 --> 00:16:42.670
We saw them, actually,
in Lecture 1--

00:16:42.670 --> 00:16:44.439
I'll show them
again next class--

00:16:44.439 --> 00:16:45.980
that can make other
convex polyhedra.

00:16:50.910 --> 00:16:56.180
Let me give you a little
idea of the proof.

00:16:56.180 --> 00:16:59.460
This is going to be a
pretty high-level sketch.

00:16:59.460 --> 00:17:02.010
But I'll tell you the
combinatorial part.

00:17:02.010 --> 00:17:04.210
And then there's the
topology analysis part

00:17:04.210 --> 00:17:06.710
that's a little less obvious.

00:17:15.680 --> 00:17:17.280
We've already proved uniqueness.

00:17:17.280 --> 00:17:19.170
I want to look at existence.

00:17:19.170 --> 00:17:24.130
And we're going to use induction
on the number of vertices.

00:17:27.910 --> 00:17:30.220
And remember, vertices
are well defined.

00:17:30.220 --> 00:17:32.640
When I say vertex
here, I really mean

00:17:32.640 --> 00:17:35.907
point of nonzero curvature.

00:17:35.907 --> 00:17:37.490
We know there's
finitely many of them.

00:17:37.490 --> 00:17:39.230
Call the number n.

00:17:39.230 --> 00:17:41.350
And we're going to try to
simplify our polyhedron

00:17:41.350 --> 00:17:44.020
and reduce the number vertices.

00:17:44.020 --> 00:17:47.630
But there's lots of ways
to do that with polyhedra.

00:17:47.630 --> 00:17:49.460
But here, we don't
have a polyhedron.

00:17:49.460 --> 00:17:52.240
We have this kind of abstract
polyhedron in Never Never Land.

00:17:52.240 --> 00:17:54.820
We know how to walk around
on the surface, locally.

00:17:54.820 --> 00:17:59.180
But we don't really
know any 3D geometry.

00:17:59.180 --> 00:18:01.010
So is this a crazy idea.

00:18:01.010 --> 00:18:03.030
Before we get to
the crazy idea, I

00:18:03.030 --> 00:18:14.010
need an important fact, which
is total curvature, if you

00:18:14.010 --> 00:18:22.690
sum over all vertices,
is 720 degrees.

00:18:25.560 --> 00:18:27.870
This is actually true, even
of nonconvex polyhedra,

00:18:27.870 --> 00:18:30.420
as long as you have something
homeomorphic to a sphere,

00:18:30.420 --> 00:18:32.080
topologically a sphere.

00:18:32.080 --> 00:18:35.107
Total curvature is 720.

00:18:35.107 --> 00:18:37.440
This is actually why it's
useful to talk about curvature

00:18:37.440 --> 00:18:41.310
and not how much angle is
coming together at a point.

00:18:41.310 --> 00:18:43.940
So obviously, we've got zillions
of points with a curvature 0.

00:18:43.940 --> 00:18:46.330
Those don't count for anything.

00:18:46.330 --> 00:18:49.230
But then, somehow this thing
has to wrap around a sphere.

00:18:49.230 --> 00:18:52.660
And you can compute the
curvature of a sphere at 720.

00:18:52.660 --> 00:18:54.652
And this has to match that.

00:18:54.652 --> 00:18:58.286
I can't give a lot of intuition
for this, but it's true.

00:18:58.286 --> 00:19:00.415
And it's kind of powerful.

00:19:03.590 --> 00:19:05.590
It says you can't have
very many sharp vertices.

00:19:05.590 --> 00:19:10.120
If I have a super-sharp point
in my convex polyhedron,

00:19:10.120 --> 00:19:12.120
it has a curvature close to 360.

00:19:12.120 --> 00:19:15.000
It's going to be
260 minus almost 0.

00:19:15.000 --> 00:19:19.420
I can only have two of
those in any polyhedron.

00:19:19.420 --> 00:19:21.050
Now, with a
nonconvex polyhedron,

00:19:21.050 --> 00:19:22.940
I can have negative
curvature to compensate.

00:19:22.940 --> 00:19:25.740
And so then, I can have lots
of spikes, like an our witch's

00:19:25.740 --> 00:19:28.310
hats, where we had four spikes.

00:19:28.310 --> 00:19:31.114
But for convex, I don't
have any negative numbers

00:19:31.114 --> 00:19:33.030
to compensate with these
big positive numbers.

00:19:33.030 --> 00:19:36.190
So I can only have two spikes.

00:19:36.190 --> 00:19:38.890
We're going to use that
a lot today, this fact.

00:19:38.890 --> 00:19:41.077
It's called Descartes Theorem.

00:19:41.077 --> 00:19:42.410
You may have heard of Descartes.

00:19:44.929 --> 00:19:46.470
Nowadays, you prove
it in other ways.

00:19:46.470 --> 00:19:48.094
But we're not going
to look at a proof.

00:19:48.094 --> 00:19:49.842
We're just going to use it.

00:19:49.842 --> 00:19:51.800
I'm also going to assume
that my polyhedron has

00:19:51.800 --> 00:19:52.930
at least five vertices.

00:19:52.930 --> 00:19:57.830
Or really, my polyhedral metric
has at least five vertices.

00:19:57.830 --> 00:19:59.300
If it has at least
five vertices,

00:19:59.300 --> 00:20:01.380
in other words,
more than four, then

00:20:01.380 --> 00:20:04.380
there will be some vertex
that has less than a quarter

00:20:04.380 --> 00:20:08.630
of 720 curvature, in
fact, two of them.

00:20:14.200 --> 00:20:23.000
Two vertices-- and I call
them x and y-- have curvature.

00:20:27.188 --> 00:20:31.900
Call them alpha and
beta, less than 180,

00:20:31.900 --> 00:20:35.740
which is one quarter of 720.

00:20:35.740 --> 00:20:38.050
The average is obviously
going down as n goes up.

00:20:38.050 --> 00:20:42.940
So when n is 5, I can get two
reasonably small curvature

00:20:42.940 --> 00:20:44.977
vertices.

00:20:44.977 --> 00:20:47.060
This is like saying, there's
more than 180 degrees

00:20:47.060 --> 00:20:51.740
of material glued at
these two points So what?

00:20:51.740 --> 00:20:55.580
Well, now I'm going
to do some surgery,

00:20:55.580 --> 00:20:57.610
as topologists call it.

00:20:57.610 --> 00:21:05.024
I have these vertices, x and
y, in this sphere-like thing.

00:21:05.024 --> 00:21:06.690
There's some shortest
path between them.

00:21:06.690 --> 00:21:08.325
I can compute that.

00:21:08.325 --> 00:21:09.700
And now we're
saying that there's

00:21:09.700 --> 00:21:12.050
a fair amount of material here
and a fair amount of material

00:21:12.050 --> 00:21:12.580
here.

00:21:12.580 --> 00:21:17.520
What I'd like to do is
slice the surface open along

00:21:17.520 --> 00:21:18.770
that shortest path.

00:21:18.770 --> 00:21:21.600
I've drawn it twice,
because I've cut it open.

00:21:21.600 --> 00:21:24.370
There's surface here, surface
here, and a hole there.

00:21:24.370 --> 00:21:28.110
And I'm going to glue
in some more material.

00:21:28.110 --> 00:21:33.010
And I'm going to
glue in a triangle--

00:21:33.010 --> 00:21:36.190
actually, two triangles
right on top of each other.

00:21:36.190 --> 00:21:38.470
So that here, the edges
are glued together.

00:21:38.470 --> 00:21:42.760
Back here, the edges are glued
together, here, they're not.

00:21:42.760 --> 00:21:45.460
So you can see, this is
still topologically a sphere.

00:21:45.460 --> 00:21:49.920
As you walk on to this edge,
you end up on the top triangle.

00:21:49.920 --> 00:21:52.670
I can go around the back
to the bottom triangle.

00:21:52.670 --> 00:21:55.410
And eventually, I will
get to the back edge.

00:21:55.410 --> 00:21:57.186
And then I can walk like that.

00:21:57.186 --> 00:21:58.560
Shortest paths
are not preserved.

00:21:58.560 --> 00:22:00.730
But it's at least still
topologically a sphere.

00:22:00.730 --> 00:22:05.040
I've slipped this open,
wedged in two triangles.

00:22:05.040 --> 00:22:06.980
I get a new metric.

00:22:06.980 --> 00:22:12.820
Now, I get to choose
what triangles I glue in.

00:22:12.820 --> 00:22:17.730
And I'm going to
set these angles.

00:22:17.730 --> 00:22:20.770
Ultimately, I'd like
this angle to be

00:22:20.770 --> 00:22:26.840
alpha over 2 and this
angle to be beta over 2.

00:22:26.840 --> 00:22:30.950
Remember, curvature is 360 minus
the sum of the angles there.

00:22:30.950 --> 00:22:33.440
That means that's how
much extra material

00:22:33.440 --> 00:22:37.690
you need to stick in
until that vertex is flat.

00:22:37.690 --> 00:22:40.260
So if I stick in an
angle of alpha over 2

00:22:40.260 --> 00:22:43.420
here, at this point, and
there's two copies of it.

00:22:43.420 --> 00:22:46.080
Because there's the front
triangle and the back triangle,

00:22:46.080 --> 00:22:47.580
Then I'll be wedging
in alpha, which

00:22:47.580 --> 00:22:51.010
is exactly what it
takes to make x flat.

00:22:51.010 --> 00:22:54.360
And this is exactly what
it takes to make y flat.

00:22:54.360 --> 00:22:56.221
The result will be
I'd obliterate x.

00:22:56.221 --> 00:22:57.220
It's no longer a vertex.

00:22:57.220 --> 00:22:57.845
I obliterate y.

00:22:57.845 --> 00:22:58.870
It's no longer a vertex.

00:22:58.870 --> 00:23:01.020
But I add this new vertex, z.

00:23:04.240 --> 00:23:06.670
In that way, I remove
two vertices, add one,

00:23:06.670 --> 00:23:08.190
which decreases n.

00:23:08.190 --> 00:23:10.210
And then I can use induction.

00:23:10.210 --> 00:23:13.350
Now, there's lots of things
to say why this works.

00:23:13.350 --> 00:23:15.140
But this is the crazy idea.

00:23:15.140 --> 00:23:18.464
It's the Alexandrov
induction, and it's useful.

00:23:18.464 --> 00:23:19.880
If you want to
prove, for example,

00:23:19.880 --> 00:23:21.800
that the star unfolding
doesn't overlap,

00:23:21.800 --> 00:23:23.035
you use this induction also.

00:23:23.035 --> 00:23:24.441
It's the only
proof that's known.

00:23:27.590 --> 00:23:31.540
So why did we need
these properties?

00:23:31.540 --> 00:23:34.176
Well, the biggest
triangle you could make,

00:23:34.176 --> 00:23:35.550
something like
this, like we were

00:23:35.550 --> 00:23:37.800
doing in witch's hats,
where this is almost 90.

00:23:37.800 --> 00:23:39.470
This is almost 90.

00:23:39.470 --> 00:23:41.430
This is x and y.

00:23:44.670 --> 00:23:47.190
The biggest we can make
alpha over 2 is almost 90.

00:23:47.190 --> 00:23:49.900
And the biggest we can make
beta over 2 is almost 90.

00:23:49.900 --> 00:23:53.440
So we'd really like alpha
and beta to be less than 180.

00:23:53.440 --> 00:23:55.660
But then there is a valid
triangle that does this.

00:23:55.660 --> 00:24:00.130
Once you fix two angles, it of
course determines third one.

00:24:00.130 --> 00:24:02.070
It might be very close to 0.

00:24:02.070 --> 00:24:05.260
So z might have very large
curvature, but that's OK.

00:24:08.040 --> 00:24:10.580
What else?

00:24:10.580 --> 00:24:13.480
The other thing is, in what
sense could you induct?

00:24:13.480 --> 00:24:15.700
And this is where I'm going
to be a little hand wavy.

00:24:15.700 --> 00:24:19.230
Yeah, I've found some
other polyhedral metric.

00:24:19.230 --> 00:24:21.880
It has one fewer vertex.

00:24:21.880 --> 00:24:24.960
So by induction I know that
it's realized by a unique convex

00:24:24.960 --> 00:24:26.040
polyhedron.

00:24:26.040 --> 00:24:29.000
The how in the world
would I convert that

00:24:29.000 --> 00:24:32.860
into a realization of
the original polyhedron?

00:24:32.860 --> 00:24:37.260
And the answer is
continuity and magic.

00:24:37.260 --> 00:24:39.819
The continuity is easy to see.

00:24:39.819 --> 00:24:41.360
When I glue in this
triangle, I don't

00:24:41.360 --> 00:24:43.160
have to just glue
in the triangle

00:24:43.160 --> 00:24:44.810
with those final angles.

00:24:44.810 --> 00:24:47.970
I could actually glue in a
very tiny triangle initially.

00:24:47.970 --> 00:24:50.616
And I could change these
angles continuously.

00:24:50.616 --> 00:24:52.240
That makes me feel
a little bit better.

00:24:52.240 --> 00:24:53.650
I start with something
that's very, very

00:24:53.650 --> 00:24:54.608
close to my polyhedron.

00:24:54.608 --> 00:24:56.220
Obviously, If I
could realize that,

00:24:56.220 --> 00:24:58.167
I could still realize
the original, right?

00:24:58.167 --> 00:25:00.416
It's almost the same, if I
glue in a tiny, tiny sliver

00:25:00.416 --> 00:25:01.850
of a triangle.

00:25:01.850 --> 00:25:04.030
That's not obvious,
but it's true.

00:25:04.030 --> 00:25:07.490
And you vary it until the
point, where you actually

00:25:07.490 --> 00:25:09.070
get something with
one fewer vertex.

00:25:09.070 --> 00:25:10.695
Then you actually do
get a realization.

00:25:10.695 --> 00:25:15.070
And then you continuously
morph it back to your original.

00:25:15.070 --> 00:25:16.804
That's the idea.

00:25:16.804 --> 00:25:18.220
I'm not going to
detail that idea.

00:25:18.220 --> 00:25:23.510
It uses something called the
inverse function theorem, which

00:25:23.510 --> 00:25:28.250
is a cool theorem
in real analysis.

00:25:28.250 --> 00:25:30.690
But I think most of you
haven't had real analysis.

00:25:30.690 --> 00:25:33.860
So you can read about
it if you're interested.

00:25:33.860 --> 00:25:35.420
It's cool.

00:25:35.420 --> 00:25:37.350
The main consequence
for us algorithms

00:25:37.350 --> 00:25:40.140
people is that it's
non constructive.

00:25:40.140 --> 00:25:41.984
It doesn't actually
tell you how to do this.

00:25:41.984 --> 00:25:43.400
It just says, well,
by continuity,

00:25:43.400 --> 00:25:46.084
it really ought to
work out somehow.

00:25:46.084 --> 00:25:47.000
But we don't know how.

00:25:47.000 --> 00:25:51.110
We've tried to make it
work out and failed.

00:25:51.110 --> 00:25:54.791
While this does sort of prove
the theorem by continuity,

00:25:54.791 --> 00:25:56.290
it doesn't actually
give us any idea

00:25:56.290 --> 00:25:59.610
of how to find what
polyhedron we are realizing,

00:25:59.610 --> 00:26:02.310
which is a bit frustrating.

00:26:02.310 --> 00:26:05.780
And that was the state of
the art until four years ago.

00:26:14.850 --> 00:26:21.890
Four years ago, these guys,
Bobenko and Izmestiev,

00:26:21.890 --> 00:26:25.200
came up with a
constructive version

00:26:25.200 --> 00:26:26.360
of Alexandrov's Theorem.

00:26:30.020 --> 00:26:33.860
And I just want to sketch
an idea of how this works.

00:26:33.860 --> 00:26:41.410
But the end consequence, which
is done in this class, I think,

00:26:41.410 --> 00:26:43.650
as a class project
three years ago,

00:26:43.650 --> 00:26:46.180
is that you get a pseudo
polynomial algorithm

00:26:46.180 --> 00:26:49.160
for solving this problem.

00:26:49.160 --> 00:26:51.020
So I'll jump ahead a little bit.

00:26:55.030 --> 00:26:57.340
Running time, we
get-- this, again,

00:26:57.340 --> 00:27:05.995
for amusement value-- 1891.

00:27:05.995 --> 00:27:06.960
It's a good year.

00:27:16.290 --> 00:27:20.330
I think I said, last time, that
n to the 125 times r to the 41

00:27:20.330 --> 00:27:21.060
was my record.

00:27:21.060 --> 00:27:23.460
Well, it's been surpassed.

00:27:23.460 --> 00:27:24.900
I just forgot about it.

00:27:24.900 --> 00:27:29.850
n to the 456.5 times r to the
1891, over epsilon epsilon.

00:27:29.850 --> 00:27:33.650
Here is the desired error.

00:27:33.650 --> 00:27:35.740
So you can make the error
as small as you want.

00:27:35.740 --> 00:27:37.660
We can't do it perfectly.

00:27:37.660 --> 00:27:41.470
But your running time increases
as the error goes down.

00:27:41.470 --> 00:27:44.230
This is our usual feature size.

00:27:44.230 --> 00:27:51.390
It's the longest length in
your input metric, let's say,

00:27:51.390 --> 00:27:54.260
divided by the shortest length.

00:27:54.260 --> 00:27:57.010
So that's a measure of how
tight the features are.

00:27:57.010 --> 00:28:00.230
We had that before with
carpenter's rule stuff.

00:28:00.230 --> 00:28:04.170
And n is the number vertices.

00:28:04.170 --> 00:28:06.764
Obviously, this is
a very bad bound.

00:28:06.764 --> 00:28:08.430
But the point is it's
pseudo polynomial.

00:28:08.430 --> 00:28:10.310
It's a bad bound
for the same reason

00:28:10.310 --> 00:28:12.640
that our last giant ginormous
bound was ginormous.

00:28:12.640 --> 00:28:16.300
Because differential flow is
hard to get good bounds on.

00:28:16.300 --> 00:28:19.264
See it's possible to
get some kind of bound.

00:28:19.264 --> 00:28:21.930
But they don't usually represent
how fast the algorithm actually

00:28:21.930 --> 00:28:22.430
is.

00:28:22.430 --> 00:28:24.764
Again, this algorithm
is pretty practical.

00:28:24.764 --> 00:28:25.930
There's an implementational.

00:28:25.930 --> 00:28:27.690
I'll show it to you in a moment.

00:28:27.690 --> 00:28:29.265
Maybe I'll show it
to you right now.

00:28:29.265 --> 00:28:32.530
It'll be more fun.

00:28:32.530 --> 00:28:35.630
It is available on
the web for free.

00:28:35.630 --> 00:28:37.510
Try it out.

00:28:37.510 --> 00:28:41.731
I assume this is a student
of Bobenko and Izmestiev

00:28:41.731 --> 00:28:47.400
in Berlin, and he implemented
this program, Java.

00:28:47.400 --> 00:28:50.500
So you specify a
polyhedral metric.

00:28:50.500 --> 00:28:52.326
Now, that's the tricky part.

00:28:52.326 --> 00:28:53.700
And especially,
it's tricky here,

00:28:53.700 --> 00:28:56.230
because it has to
be triangulated.

00:28:56.230 --> 00:28:58.930
But we would normally
do it by specifying

00:28:58.930 --> 00:29:00.662
a polygon plus a gluing.

00:29:00.662 --> 00:29:02.620
But of course, by computing
all shortest paths,

00:29:02.620 --> 00:29:05.570
you can eventually make that
a nice triangulated thing.

00:29:05.570 --> 00:29:09.250
So here I have a very simple
triangulated thing, namely,

00:29:09.250 --> 00:29:11.660
a complete graph on
four vertices, which

00:29:11.660 --> 00:29:13.280
makes a regular tetrahedron.

00:29:13.280 --> 00:29:15.580
It doesn't look so
regular, because I

00:29:15.580 --> 00:29:19.230
have a lot of perspective in
a small, narrow angle of view.

00:29:19.230 --> 00:29:22.840
But that is a regular
tetrahedron, believe me.

00:29:22.840 --> 00:29:24.460
Then I can change
the edge lengths.

00:29:24.460 --> 00:29:27.070
Right now, they're
all one, so I should

00:29:27.070 --> 00:29:33.470
be able to make one of
the edges longer, like 2.

00:29:33.470 --> 00:29:34.370
I haven't tried this.

00:29:34.370 --> 00:29:35.328
We'll see what happens.

00:29:35.328 --> 00:29:41.400
I say, Compute, and it says,
Starting Calculations--

00:29:41.400 --> 00:29:45.880
not my intended answer.

00:29:45.880 --> 00:29:47.380
I like it to finish
the calculation.

00:29:49.874 --> 00:29:51.665
That's why it prepared
some other examples.

00:29:55.210 --> 00:29:56.950
I suspect it's not
the program failing,

00:29:56.950 --> 00:30:00.305
but I've had some trouble
running it on this computer.

00:30:07.210 --> 00:30:09.160
I think we have demo effect.

00:30:09.160 --> 00:30:10.990
Finally, something
failed in this class.

00:30:10.990 --> 00:30:12.892
It took a long time.

00:30:12.892 --> 00:30:14.100
You'll have to try it online.

00:30:14.100 --> 00:30:17.140
You can change the edge lengths
to all sorts of crazy things.

00:30:17.140 --> 00:30:19.360
If you have very close
to degenerate situations,

00:30:19.360 --> 00:30:20.744
it does tend to fail.

00:30:20.744 --> 00:30:22.160
Because there's
some tricky issues

00:30:22.160 --> 00:30:25.374
to deal with and
this floating point.

00:30:25.374 --> 00:30:26.790
Oops, it might be
doing something.

00:30:32.820 --> 00:30:35.190
Dare I try to open a file?

00:30:38.760 --> 00:30:41.030
Here, you get to see my
organizational structure

00:30:41.030 --> 00:30:42.710
or lack thereof.

00:30:42.710 --> 00:30:52.070
Courses, Slides, 15,
and let's take Cube.

00:30:52.070 --> 00:30:53.395
Exciting.

00:30:53.395 --> 00:30:54.020
This is a cube.

00:30:54.020 --> 00:30:57.130
It's not so obvious
that it is a cube.

00:30:57.130 --> 00:30:59.050
But you set the edge links.

00:30:59.050 --> 00:31:02.910
And a lot of these
are sort of diagonals.

00:31:02.910 --> 00:31:06.220
And if I do it right,
maybe add some iterations.

00:31:08.564 --> 00:31:10.480
It says, [INAUDIBLE]
successfully constructed.

00:31:10.480 --> 00:31:13.540
You can see it, right?

00:31:13.540 --> 00:31:15.852
My job is failing, I'm afraid.

00:31:15.852 --> 00:31:16.560
Sorry about that.

00:31:20.479 --> 00:31:20.979
Go away.

00:31:23.850 --> 00:31:25.100
You'll have to try it at home.

00:31:25.100 --> 00:31:25.540
AUDIENCE: It was there.

00:31:25.540 --> 00:31:26.240
PROFESSOR: It was there?

00:31:26.240 --> 00:31:26.740
Oh.

00:31:26.740 --> 00:31:29.730
AUDIENCE: [LAUGHTER]

00:31:29.730 --> 00:31:32.940
PROFESSOR: Wait, I
don't see a cube.

00:31:32.940 --> 00:31:36.190
What did you see?

00:31:36.190 --> 00:31:37.170
AUDIENCE: It was there.

00:31:37.170 --> 00:31:38.169
PROFESSOR: It was there.

00:31:38.169 --> 00:31:40.040
All right, you saw it.

00:31:40.040 --> 00:31:40.950
It's like it ghost.

00:31:40.950 --> 00:31:43.530
It's the left over
from Halloween.

00:31:43.530 --> 00:31:45.620
Let me tell you a little
bit about how this works.

00:31:45.620 --> 00:31:47.570
And you'll have to try
the program at home.

00:31:54.030 --> 00:31:56.500
A crazy idea is we have
this polyhedron, which

00:31:56.500 --> 00:31:58.700
we want to find.

00:31:58.700 --> 00:31:59.960
It's a surface.

00:31:59.960 --> 00:32:03.080
It's hard to think about
surfaces that live in 3D.

00:32:03.080 --> 00:32:06.530
So I want to make it
more three dimensional.

00:32:06.530 --> 00:32:07.970
And the way I
going to do that is

00:32:07.970 --> 00:32:10.720
by thinking about the
inside of the polyhedron.

00:32:10.720 --> 00:32:13.027
And say, well,
imagine it's convex.

00:32:13.027 --> 00:32:14.860
So there's some point
inside the polyhedron.

00:32:14.860 --> 00:32:16.290
Start with one point.

00:32:16.290 --> 00:32:18.930
And then, I'd like to fill
the interior in between.

00:32:18.930 --> 00:32:22.137
So the surface, as you saw--
we're assuming that everything

00:32:22.137 --> 00:32:23.220
is initially triangulated.

00:32:23.220 --> 00:32:25.832
We can do that by
adding shortest paths.

00:32:25.832 --> 00:32:27.540
Well, if this triangle
is on the surface,

00:32:27.540 --> 00:32:29.960
and this point is in the
center, the natural thing to do

00:32:29.960 --> 00:32:33.860
is to make tetrahedra inside.

00:32:37.180 --> 00:32:39.760
If I could find
the 3D triangles,

00:32:39.760 --> 00:32:41.930
I could also find
the 3D tetrahedra.

00:32:41.930 --> 00:32:43.550
So we're going to
do a harder job

00:32:43.550 --> 00:32:44.777
of finding the 3D tetrahedra.

00:32:44.777 --> 00:32:46.610
From that, we will
derive what the triangles

00:32:46.610 --> 00:32:48.820
are-- easy enough idea.

00:32:48.820 --> 00:32:50.150
Make your problem harder.

00:32:50.150 --> 00:32:51.500
That often makes things easier.

00:32:55.690 --> 00:32:56.850
How do we do that?

00:32:56.850 --> 00:32:59.440
Well, for every
vertex up here-- call

00:32:59.440 --> 00:33:02.000
it vi-- there's some distance.

00:33:02.000 --> 00:33:04.740
This dashed line-- we're
going to call that ri.

00:33:04.740 --> 00:33:06.850
That's really what we'd
like to figure out.

00:33:06.850 --> 00:33:10.530
We already know the triangles--
we know their geometry.

00:33:10.530 --> 00:33:12.870
That's given to us as
part of the metric.

00:33:12.870 --> 00:33:14.662
We don't know how the
triangles are hinged,

00:33:14.662 --> 00:33:15.786
with respect to each other.

00:33:15.786 --> 00:33:17.040
That's the dihedral angles.

00:33:17.040 --> 00:33:18.320
That's the tricky part.

00:33:18.320 --> 00:33:20.361
But we're not going to
worry about that directly.

00:33:20.361 --> 00:33:23.530
We're going to think about
these edge lengths, ri.

00:33:23.530 --> 00:33:27.570
Because if I knew
all the ri lengths--

00:33:27.570 --> 00:33:30.971
they're the sort of radii
from the center point-- then

00:33:30.971 --> 00:33:32.970
I'd know all the edge
lengths of the tetrahedron

00:33:32.970 --> 00:33:34.689
that uniquely determined
the tetrahedron.

00:33:34.689 --> 00:33:36.230
If I do that for
all the tetrahedron,

00:33:36.230 --> 00:33:37.820
there would be a unique
way to glue them together.

00:33:37.820 --> 00:33:39.050
And I would get the answer.

00:33:39.050 --> 00:33:40.500
So I really just
need these ri's.

00:33:43.110 --> 00:33:44.660
What I'd like to
do is characterize,

00:33:44.660 --> 00:33:48.130
when are the ri's valid?

00:33:48.130 --> 00:33:53.230
And there's a few conditions
to make them reasonable.

00:33:53.230 --> 00:33:56.610
The first thing, I guess I
didn't even write in the notes.

00:33:56.610 --> 00:33:59.550
You might call it
sanity, which is

00:33:59.550 --> 00:34:05.145
that these are
real 3D tetrahedra.

00:34:08.139 --> 00:34:10.560
I'm not going to try to
characterize when that's true.

00:34:10.560 --> 00:34:13.630
It's some function on the ri
lengths and existing lengths.

00:34:13.630 --> 00:34:16.260
But I always want these to
correspond actual tetrahedra.

00:34:16.260 --> 00:34:18.310
The trouble is, they might
not fit together right

00:34:18.310 --> 00:34:19.710
to make 3D polyhedron.

00:34:19.710 --> 00:34:22.630
So I won't really have to
worry about this condition.

00:34:22.630 --> 00:34:28.254
The next condition-- what
do I call it-- is convexity.

00:34:32.830 --> 00:34:34.550
This will also be kind of easy.

00:34:34.550 --> 00:34:38.770
What I want is that the
outside surface is convex.

00:34:38.770 --> 00:34:42.620
Now, if you look at the outside
surface, what we really want

00:34:42.620 --> 00:34:44.810
is that one of these edges,
on the outside surface,

00:34:44.810 --> 00:34:47.170
bends the correct way.

00:34:47.170 --> 00:34:48.337
So when will that be true?

00:34:48.337 --> 00:34:50.170
Well, I'm going to look
at the two triangles

00:34:50.170 --> 00:34:51.550
next to that edge.

00:34:51.550 --> 00:34:58.874
That defines two tetrahedra
that share a face.

00:34:58.874 --> 00:35:00.290
And if I knew what
the ri's where,

00:35:00.290 --> 00:35:02.020
I'd know what those
tetrahedra are.

00:35:02.020 --> 00:35:05.290
And what I really need is
that if I look at the angle--

00:35:05.290 --> 00:35:07.290
I'm going to draw this
a little bit thicker--

00:35:07.290 --> 00:35:12.160
this dihedral angle
between-- it's hard to draw.

00:35:12.160 --> 00:35:13.840
If you look at
this edge, there's

00:35:13.840 --> 00:35:15.690
two tetrahedra glued there.

00:35:15.690 --> 00:35:18.210
So there's some
solid dihedral angle

00:35:18.210 --> 00:35:20.760
of tetrahedron glued at that
edge from this tetrahedron.

00:35:20.760 --> 00:35:22.620
And there's some
angle over here that's

00:35:22.620 --> 00:35:24.650
glued to this edge
from that tetrahedron.

00:35:24.650 --> 00:35:29.750
I want the sum of those
two dihedral angles,

00:35:29.750 --> 00:35:35.100
the total material there, to
be less than or equal to 180.

00:35:35.100 --> 00:35:37.170
That is, the sum of
those angles is really

00:35:37.170 --> 00:35:39.180
the dihedral angle
along this edge.

00:35:39.180 --> 00:35:41.870
If it's less than
180, it'll be convex.

00:35:41.870 --> 00:35:45.940
It's hard to draw,
but very intuitive.

00:35:45.940 --> 00:35:48.860
This is also pretty easy to get.

00:35:48.860 --> 00:35:50.780
You can set the ri
so that that's true.

00:35:50.780 --> 00:35:54.700
The hard part is
looking at a vertex.

00:35:54.700 --> 00:35:55.970
You think about a vertex.

00:35:55.970 --> 00:35:57.940
It has a whole bunch
of triangles around it.

00:36:01.080 --> 00:36:06.650
From this vertex to the central
point, which we usually call p,

00:36:06.650 --> 00:36:10.350
if you look at that edge-- I'm
not going to try to draw it--

00:36:10.350 --> 00:36:12.360
there's, in this
case, five tetrahedra

00:36:12.360 --> 00:36:15.530
glued around that edge.

00:36:15.530 --> 00:36:19.300
The total dihedral angle
of those five tetrahedra

00:36:19.300 --> 00:36:21.620
ought to be exactly 360.

00:36:21.620 --> 00:36:23.870
If these tetrahedra are going
to fit together and make

00:36:23.870 --> 00:36:29.545
a solid thing-- and this we
call the reality constraint.

00:36:32.050 --> 00:36:34.170
I'm not usually bound by
the reality constraint.

00:36:34.170 --> 00:36:36.040
In fact, we will
relax it a little bit.

00:36:36.040 --> 00:36:42.850
But we would like that the
sum of the dihedral angles

00:36:42.850 --> 00:36:52.110
around some edge from
P to vi equals 360.

00:36:52.110 --> 00:36:54.270
This is the hard
constraint to get.

00:36:54.270 --> 00:36:56.340
Reality is tough.

00:36:56.340 --> 00:36:57.740
Sanity, convexity, easy.

00:37:02.240 --> 00:37:06.740
I guess I shouldn't
kill this yet.

00:37:06.740 --> 00:37:10.290
So let me tell you a little
bit more about how we get this.

00:37:36.210 --> 00:37:38.380
I'll just tell you
some of this stuff.

00:37:38.380 --> 00:37:41.330
The first thing we do is
get sanity and convexity

00:37:41.330 --> 00:37:43.340
and forget about reality.

00:37:43.340 --> 00:37:44.215
Reality is overrated.

00:37:46.870 --> 00:37:48.600
To do that, we actually
need two things.

00:37:48.600 --> 00:37:51.220
One, is we need a
triangulation of the surface.

00:37:51.220 --> 00:37:52.970
We're presumably given
some triangulation,

00:37:52.970 --> 00:37:56.000
but that one might
be hard to work with.

00:37:56.000 --> 00:37:59.790
And the answer is,
to start out, it's

00:37:59.790 --> 00:38:03.630
nice to use Delaunay
triangulation.

00:38:03.630 --> 00:38:06.330
How many people know about
the Delaunay triangulations?

00:38:06.330 --> 00:38:09.440
They're nice triangulations.

00:38:09.440 --> 00:38:11.340
And you can define
Delaunay triangulation

00:38:11.340 --> 00:38:13.390
in an implicit
surface like this.

00:38:13.390 --> 00:38:15.510
I won't do that here.

00:38:15.510 --> 00:38:17.980
But it can be done,
and it can be computed.

00:38:17.980 --> 00:38:20.380
One of the innovations
in this paper

00:38:20.380 --> 00:38:22.120
was to actually show
how to compute it

00:38:22.120 --> 00:38:23.680
in pseudo polynomial time.

00:38:23.680 --> 00:38:26.580
It's not too hard.

00:38:26.580 --> 00:38:28.960
It's just shortest paths.

00:38:28.960 --> 00:38:32.140
Then, it turns out, if you
start with that triangulation,

00:38:32.140 --> 00:38:35.020
and you let all the ri's be
really, really big, close

00:38:35.020 --> 00:38:39.440
to infinity, then sanity
and convexity hold.

00:38:39.440 --> 00:38:41.859
So I guess intuition may
be like witch's hats.

00:38:41.859 --> 00:38:42.400
I don't know.

00:38:42.400 --> 00:38:45.690
You're making these super-sharp
triangles, tetrahedra.

00:38:45.690 --> 00:38:46.450
And it will work.

00:38:46.450 --> 00:38:50.480
Now, it'll make
everything big and equal.

00:38:50.480 --> 00:38:54.210
And so reality will be violated.

00:38:54.210 --> 00:38:59.330
But sanity and convexity
are OK, and that

00:38:59.330 --> 00:39:01.830
will be your starting point.

00:39:01.830 --> 00:39:04.460
So now the crazy
idea is to fix it.

00:39:11.920 --> 00:39:14.720
I'm going to define
a kind of curvature

00:39:14.720 --> 00:39:25.430
around each edge, around that
center line from p to vi.

00:39:25.430 --> 00:39:28.690
That's the sum that we
wanted to be equal to 360.

00:39:28.690 --> 00:39:30.570
And now I'm just
taking 360 minus that.

00:39:30.570 --> 00:39:31.470
That's the deficit.

00:39:31.470 --> 00:39:33.810
This is how much we're off by.

00:39:33.810 --> 00:39:35.330
So we have some starting point.

00:39:35.330 --> 00:39:40.250
And it turns out the Ki
will be positive, I believe.

00:39:40.250 --> 00:39:52.175
And we want to make Ki
evolve with time, so that it

00:39:52.175 --> 00:39:55.170
is 1 minus t, times
the initial Ki.

00:39:57.750 --> 00:40:00.000
So we start at times
0, with the solution

00:40:00.000 --> 00:40:01.439
where all the ri's are large.

00:40:01.439 --> 00:40:02.980
So we're staying in
convex, and we're

00:40:02.980 --> 00:40:05.510
going to be staying in
convex from then on.

00:40:05.510 --> 00:40:09.350
And then, if we could do this,
we would start at t equals 0.

00:40:09.350 --> 00:40:12.520
This is 1 times the original
curvature at every edge,

00:40:12.520 --> 00:40:14.140
so it's a problem.

00:40:14.140 --> 00:40:17.360
But at t equals 1, at time
1, when this is finished,

00:40:17.360 --> 00:40:20.140
we will get 0 times
whatever we had.

00:40:20.140 --> 00:40:22.310
So all of these numbers
will magically go to 0.

00:40:22.310 --> 00:40:25.160
And then it adds up to 360.

00:40:25.160 --> 00:40:28.070
It's not obvious that
this works, but it does.

00:40:28.070 --> 00:40:29.610
It defines a differential flow.

00:40:29.610 --> 00:40:34.670
And those who know
differential equations,

00:40:34.670 --> 00:40:38.127
this will look pretty.

00:40:38.127 --> 00:40:39.710
This is partial
differential equations

00:40:39.710 --> 00:40:41.890
to make it a little
more exciting.

00:40:41.890 --> 00:40:49.560
This is a kappa and
inverse and phi.

00:40:49.560 --> 00:40:51.270
What was phi?

00:40:51.270 --> 00:40:55.690
I'm forgetting my own
notation, some initial value.

00:40:58.610 --> 00:41:00.806
It should probably be r.

00:41:00.806 --> 00:41:01.306
r?

00:41:01.306 --> 00:41:04.590
We'll see.

00:41:04.590 --> 00:41:08.500
All this is saying
is what I really

00:41:08.500 --> 00:41:11.007
want is to evolve
kappas to go smaller.

00:41:11.007 --> 00:41:13.465
I don't know how to do that,
because all I can do is change

00:41:13.465 --> 00:41:14.147
the ri's.

00:41:14.147 --> 00:41:15.480
That's the only thing I control.

00:41:15.480 --> 00:41:18.220
The kappas are computed
as a function of the ri's.

00:41:18.220 --> 00:41:21.240
There's a standard trick in
analysis-- or I guess, whatever

00:41:21.240 --> 00:41:27.300
that is, calculus--
to rewrite things.

00:41:27.300 --> 00:41:28.680
You get to control the ri's.

00:41:28.680 --> 00:41:31.950
You want to control the kappas.

00:41:31.950 --> 00:41:36.500
So you use this thing, which
is called the Jacobian.

00:41:39.140 --> 00:41:40.650
It's a matrix.

00:41:40.650 --> 00:41:43.600
But really, it says,
if I change ri,

00:41:43.600 --> 00:41:45.230
how does that change kappa j?

00:41:45.230 --> 00:41:46.732
It says that for all i and j.

00:41:46.732 --> 00:41:48.690
So it's just a whole
bunch of different values.

00:41:48.690 --> 00:41:50.550
They're really functions.

00:41:50.550 --> 00:41:51.980
You invert that
because you really

00:41:51.980 --> 00:41:55.640
want to know how--
I want to change

00:41:55.640 --> 00:41:58.350
the ri's in order to
affect the kappas.

00:41:58.350 --> 00:42:01.590
So you write this
differential equation.

00:42:01.590 --> 00:42:07.590
And you just follow your nose,
and it tells you what to do.

00:42:07.590 --> 00:42:10.370
I'm going to slide a whole
bunch of details under the rug.

00:42:10.370 --> 00:42:13.520
The hard part is proving that
this relation is actually

00:42:13.520 --> 00:42:15.810
feasible, that you can
change the ri's in order

00:42:15.810 --> 00:42:18.190
to change the kappas,
no matter how you want.

00:42:18.190 --> 00:42:22.010
This is equivalent to saying
that the Jacobian is never 0,

00:42:22.010 --> 00:42:24.709
and it always has an inverse.

00:42:24.709 --> 00:42:25.750
And that's hard to prove.

00:42:25.750 --> 00:42:28.570
And in fact, they prove it using
the Inverse Function Theorem,

00:42:28.570 --> 00:42:30.490
which is what we
were trying to avoid.

00:42:30.490 --> 00:42:33.610
But hey, it's a
construction of sorts,

00:42:33.610 --> 00:42:35.790
and it leads to
that implementation.

00:42:35.790 --> 00:42:38.990
This, in some sense,
gives you an algorithm.

00:42:38.990 --> 00:42:41.040
To turn it into an
actual algorithm--

00:42:41.040 --> 00:42:47.210
as we did in this paper, which
appeared last year-- you need

00:42:47.210 --> 00:42:49.800
to make this proof a little
bit more constructive,

00:42:49.800 --> 00:42:52.700
a little bit more
algorithmic, let's say.

00:42:52.700 --> 00:42:55.342
You don't just want to prove
that this Jacobian is never

00:42:55.342 --> 00:42:57.050
zero 0 and that it
always has an inverse.

00:42:57.050 --> 00:42:58.570
You need to prove
that it's actually

00:42:58.570 --> 00:43:00.300
always at least some epsilon.

00:43:00.300 --> 00:43:02.960
It's bounded away from 0,
and same for the inverse.

00:43:05.812 --> 00:43:07.520
Instead of using
inverse functions there,

00:43:07.520 --> 00:43:08.850
and we're totally
constructive, we just

00:43:08.850 --> 00:43:10.730
look at second derivatives
and bound those.

00:43:10.730 --> 00:43:14.290
We get a really awful
bound, which is this one.

00:43:14.290 --> 00:43:17.830
But we do get an explicit
bound on how long, essentially,

00:43:17.830 --> 00:43:23.810
the algorithm is implemented
and the applet takes.

00:43:23.810 --> 00:43:26.420
So, a high-level sketch,
but it gives you an idea.

00:43:26.420 --> 00:43:30.961
This is pretty new stuff.

00:43:30.961 --> 00:43:31.460
Questions?

00:43:34.690 --> 00:43:42.639
I want to move on to more
fun topics, let's technical,

00:43:42.639 --> 00:43:43.180
I should say.

00:43:46.270 --> 00:43:48.340
So that's Alexandrov's
Theorem algorithms.

00:43:48.340 --> 00:43:50.550
In theory, there's
now a computer program

00:43:50.550 --> 00:43:56.150
that will tell you
how to fold something,

00:43:56.150 --> 00:43:58.530
as long as we have
an Alexandrov gluing.

00:43:58.530 --> 00:43:59.710
So it has to be polyhedral.

00:43:59.710 --> 00:44:00.876
That's pretty much for free.

00:44:00.876 --> 00:44:01.724
It has to be convex.

00:44:01.724 --> 00:44:02.890
That's the interesting part.

00:44:02.890 --> 00:44:04.810
It has to be a
topological sphere that

00:44:04.810 --> 00:44:06.850
is just non-crossing.

00:44:06.850 --> 00:44:09.090
So let's think about gluings.

00:44:09.090 --> 00:44:11.160
We know that as long as
we find a good gluing,

00:44:11.160 --> 00:44:13.180
it corresponds to something.

00:44:13.180 --> 00:44:15.230
We know that something's
a little hard to find.

00:44:15.230 --> 00:44:17.435
But we'll see how we
find them in practice.

00:44:17.435 --> 00:44:18.170
It's kind of fun.

00:44:21.810 --> 00:44:24.300
We talked about the
decision problem.

00:44:24.300 --> 00:44:27.720
Is it possible at all
for a given polygon?

00:44:27.720 --> 00:44:31.212
So here's a polygon where
it's not possible at all.

00:44:31.212 --> 00:44:32.420
It's kind of fun-- ungluable.

00:44:38.740 --> 00:44:39.865
I should make that sharper.

00:44:43.970 --> 00:44:45.841
So this is a polygon.

00:44:45.841 --> 00:44:46.715
This is the material.

00:44:50.100 --> 00:44:52.220
I want to glue it
into a convex shape.

00:44:52.220 --> 00:44:55.240
I claim it's not possible.

00:44:55.240 --> 00:44:58.620
The reason is, think
about this vertex.

00:44:58.620 --> 00:45:02.518
What could get glued
to that vertex?

00:45:02.518 --> 00:45:04.031
It has to be less than 360.

00:45:04.031 --> 00:45:05.280
Right now, it's less than 360.

00:45:05.280 --> 00:45:07.640
It's that much material.

00:45:07.640 --> 00:45:11.410
Could I glue any other
vertex to that point?

00:45:11.410 --> 00:45:11.910
No.

00:45:11.910 --> 00:45:14.450
Because all the other vertices
have at least 90 degrees

00:45:14.450 --> 00:45:15.630
of material.

00:45:15.630 --> 00:45:17.500
This one has even more.

00:45:17.500 --> 00:45:18.750
But all them have at least 90.

00:45:18.750 --> 00:45:20.820
And there's less
than 90 remaining.

00:45:20.820 --> 00:45:22.680
So no other vertex
could be glued there.

00:45:22.680 --> 00:45:24.930
The other possibility, it
doesn't have to be a vertex.

00:45:24.930 --> 00:45:26.910
It could be a point in
the middle of an edge.

00:45:26.910 --> 00:45:28.330
But that has 180 degrees.

00:45:28.330 --> 00:45:31.610
That's way too much,
so nothing fits there.

00:45:31.610 --> 00:45:33.620
Therefore, I have
glue like this.

00:45:33.620 --> 00:45:36.830
This is what we call zipping.

00:45:36.830 --> 00:45:39.300
I zip those two
edges to each other.

00:45:39.300 --> 00:45:41.490
Now, they happen to be
exactly the same length.

00:45:41.490 --> 00:45:45.310
Therefore, this vertex
gets glued to that vertex.

00:45:45.310 --> 00:45:47.640
But that's not allowed,
because there's more than 180

00:45:47.640 --> 00:45:50.640
and more than 180
here-- contradiction.

00:45:50.640 --> 00:45:52.568
So that's it.

00:45:52.568 --> 00:45:56.345
This can actually happen a lot.

00:45:56.345 --> 00:45:59.580
Let me formalize that.

00:46:06.850 --> 00:46:09.515
So we could look at what you
might call the generic case.

00:46:13.520 --> 00:46:15.990
And I won't call it
the generic case.

00:46:15.990 --> 00:46:20.400
But there's a back reference
there, all the linkage stuff.

00:46:20.400 --> 00:46:22.480
I can explicitly think
about the random case.

00:46:22.480 --> 00:46:24.520
Suppose you choose all
the lengths of your edges

00:46:24.520 --> 00:46:27.890
and all you angles at
random in your polygon.

00:46:27.890 --> 00:46:29.760
You get some messy thing.

00:46:29.760 --> 00:46:36.580
But the point is,
around half the vertices

00:46:36.580 --> 00:46:42.320
will be reflex
angle, more than 180.

00:46:42.320 --> 00:46:43.900
And those are kind of troubled.

00:46:43.900 --> 00:46:47.850
Because if you have a
reflex vertex like this,

00:46:47.850 --> 00:46:51.150
in particular, you can't
glue the middle of an edge.

00:46:51.150 --> 00:46:53.590
Because that has 180.

00:46:53.590 --> 00:46:55.800
You can only blue
convex vertices

00:46:55.800 --> 00:46:59.400
that have some smaller
angle into there.

00:46:59.400 --> 00:47:04.510
Otherwise, use zip, and
zipping would be like this.

00:47:04.510 --> 00:47:08.490
So, what do I want to say?

00:47:08.490 --> 00:47:09.100
Yeah, I see.

00:47:09.100 --> 00:47:10.760
Right, cool.

00:47:10.760 --> 00:47:14.071
Before I get to zipping,
maybe I glue some convex angle

00:47:14.071 --> 00:47:14.570
in there.

00:47:14.570 --> 00:47:15.930
It's the same kind of analysis.

00:47:15.930 --> 00:47:17.221
Maybe I glue some convex angle.

00:47:17.221 --> 00:47:19.312
But if the angles
are chosen at random,

00:47:19.312 --> 00:47:21.520
I'm not going to get lucky
and completely flatten out

00:47:21.520 --> 00:47:22.019
the vertex.

00:47:22.019 --> 00:47:22.890
It won't disappear.

00:47:22.890 --> 00:47:24.860
That would be too
much to hope for.

00:47:24.860 --> 00:47:26.460
So most the time,
I'm going to glue

00:47:26.460 --> 00:47:28.290
in-- maybe I glue
in some material.

00:47:28.290 --> 00:47:29.436
Then I glue in some more.

00:47:29.436 --> 00:47:30.560
At some point, I get stuck.

00:47:30.560 --> 00:47:33.690
I can't glue anymore in, or
I decide I don't want to.

00:47:33.690 --> 00:47:35.950
At that point, I must zip.

00:47:35.950 --> 00:47:38.180
This is a rather
ambiguous notation.

00:47:38.180 --> 00:47:41.870
But zipping, I want to glue
this edge to that edge.

00:47:41.870 --> 00:47:44.370
Well, how long can
I zip them for?

00:47:47.660 --> 00:47:49.731
Well, let's say I zip them.

00:47:52.350 --> 00:47:54.430
At any moment here,
I'm gluing a 180 degree

00:47:54.430 --> 00:47:56.010
angle to another
180 degree angle.

00:47:56.010 --> 00:47:57.742
I can't stop zipping
once I start.

00:47:57.742 --> 00:47:59.950
Because there's nothing else
that could fit in there.

00:47:59.950 --> 00:48:05.210
So I've got to zip
until I get to a corner.

00:48:05.210 --> 00:48:08.000
There's going to be some
corner, some vertex, that's

00:48:08.000 --> 00:48:10.662
glued to some point.

00:48:10.662 --> 00:48:12.370
Now, is it going to
be glued to a vertex?

00:48:12.370 --> 00:48:13.710
Well, that would
be awfully lucky.

00:48:13.710 --> 00:48:14.920
That would mean
that these two edges

00:48:14.920 --> 00:48:16.128
have exactly the same length.

00:48:16.128 --> 00:48:18.480
That's not going
to happen randomly.

00:48:18.480 --> 00:48:21.150
One of these is going to
be larger than the other.

00:48:21.150 --> 00:48:25.620
Now I'm gluing some angle
to a 180 degree angle.

00:48:25.620 --> 00:48:28.770
The result is another
reflex vertex.

00:48:28.770 --> 00:48:30.730
This will keep going.

00:48:30.730 --> 00:48:33.890
And you'll never finish.

00:48:33.890 --> 00:48:35.410
So this is a bit hand wavy.

00:48:35.410 --> 00:48:39.000
But you can see the textbook
for more formal argument.

00:48:43.050 --> 00:48:43.690
I have it here.

00:48:43.690 --> 00:48:47.210
I'll finish it for you.

00:48:47.210 --> 00:48:49.920
This would be fine if
this vertex is convex.

00:48:49.920 --> 00:48:51.610
This is less than 180.

00:48:51.610 --> 00:48:54.596
But actually, with
probability 1/2,

00:48:54.596 --> 00:48:55.970
it's going to be
a reflex vertex.

00:48:55.970 --> 00:48:58.830
And then you're screwed, because
now you have more than 180

00:48:58.830 --> 00:48:59.790
gluing to 180.

00:48:59.790 --> 00:49:01.450
That's more than 360.

00:49:01.450 --> 00:49:03.850
So you don't even have to
go all the way to the end.

00:49:03.850 --> 00:49:06.270
Immediately, after
the very first zip,

00:49:06.270 --> 00:49:08.400
with probability
1/2, you'll fail.

00:49:08.400 --> 00:49:12.710
I you have n vertices, and
half of them are reflex,

00:49:12.710 --> 00:49:14.700
a quarter of them
are going to fail.

00:49:14.700 --> 00:49:18.108
So that's plenty, as long
as n is bigger than 4.

00:49:18.108 --> 00:49:21.160
For n large, you're going to get
exponentially high probability

00:49:21.160 --> 00:49:24.300
that this fails.

00:49:24.300 --> 00:49:27.170
Most of the time, if you're
choosing random polyhedra,

00:49:27.170 --> 00:49:30.100
random polygons,
you can't glue them.

00:49:35.110 --> 00:49:40.390
So you've got to be clever,
choose some nice polygons.

00:49:40.390 --> 00:49:41.890
It's actually not that hard.

00:49:41.890 --> 00:49:45.130
Like the cross, if you
just glued together

00:49:45.130 --> 00:49:47.750
a bunch of unit squares,
it'll go into something nice

00:49:47.750 --> 00:49:48.710
probably.

00:49:48.710 --> 00:49:51.680
Or here's another great, class.

00:49:51.680 --> 00:49:52.785
Convex polygons.

00:49:56.670 --> 00:50:01.660
Convex polygons do
always glue to something

00:50:01.660 --> 00:50:04.490
using something called
perimeter having.

00:50:10.170 --> 00:50:13.820
What to do, basically,
by having the perimeter.

00:50:13.820 --> 00:50:17.090
I have some convex polygon.

00:50:17.090 --> 00:50:20.200
I'm going to choose any
point on the boundary.

00:50:20.200 --> 00:50:21.880
And then have the
perimeter from there.

00:50:21.880 --> 00:50:30.560
So I walk equal distance,
all around this thing-- equal

00:50:30.560 --> 00:50:31.410
speed, I should say.

00:50:38.000 --> 00:50:38.940
Something like that.

00:50:45.890 --> 00:50:47.510
This is x.

00:50:47.510 --> 00:50:53.070
This is the antipodal point, in
terms of measuring perimeter.

00:50:53.070 --> 00:50:57.080
Now I zip.

00:50:57.080 --> 00:50:59.110
So I'm going to
glue this to this.

00:50:59.110 --> 00:51:00.880
I'm going to glue this to this.

00:51:00.880 --> 00:51:02.396
I drew all those marks.

00:51:02.396 --> 00:51:03.270
I was planning ahead.

00:51:03.270 --> 00:51:04.870
Can you tell?

00:51:04.870 --> 00:51:07.810
I was trying to make all the
segments the same length,

00:51:07.810 --> 00:51:10.252
so that I could properly glue.

00:51:10.252 --> 00:51:12.210
Something I've never
really said about gluings,

00:51:12.210 --> 00:51:16.400
but you should always glue same
length things to other things.

00:51:16.400 --> 00:51:16.900
Segments.

00:51:20.004 --> 00:51:20.670
OK, there we go.

00:51:20.670 --> 00:51:21.378
There's a gluing.

00:51:21.378 --> 00:51:23.920
There's no crossings
in that glowing.

00:51:23.920 --> 00:51:24.730
You can check.

00:51:24.730 --> 00:51:25.980
Its Alexandrov.

00:51:25.980 --> 00:51:30.260
It is convex, because
what do I glue to what?

00:51:30.260 --> 00:51:32.895
Well, here, maybe
I'm going this vertex

00:51:32.895 --> 00:51:34.020
to the middle of this edge.

00:51:34.020 --> 00:51:35.220
But it's a convex vertex.

00:51:35.220 --> 00:51:35.820
So that's OK.

00:51:38.075 --> 00:51:39.200
Everything looks like that.

00:51:39.200 --> 00:51:42.042
You're always gluing some
vertex to some other edge.

00:51:42.042 --> 00:51:43.375
And all the vertices are convex.

00:51:43.375 --> 00:51:45.670
So it will be less than 360.

00:51:45.670 --> 00:51:48.730
Maybe, if you got lucky, some
edge will glue to some edge.

00:51:48.730 --> 00:51:51.240
But that's still barely OK.

00:51:51.240 --> 00:51:53.850
So for convex polygons,
it's always going to work.

00:51:53.850 --> 00:51:56.650
Let's try it out, shall we?

00:51:56.650 --> 00:51:59.150
I don't want to use this page,
because I'm not done with it.

00:51:59.150 --> 00:52:02.470
We'll take page one,
make a convex polygon.

00:52:11.140 --> 00:52:13.790
I don't want to make
it too complicated.

00:52:13.790 --> 00:52:16.731
I'll spend a lot of time taping.

00:52:16.731 --> 00:52:18.980
You an try this at home with
your own, favorite convex

00:52:18.980 --> 00:52:19.479
polygon.

00:52:19.479 --> 00:52:21.360
Here's a convex polygon.

00:52:21.360 --> 00:52:23.590
And now, we're going
to pick a point.

00:52:28.430 --> 00:52:31.670
Do I have a good
point written here?

00:52:31.670 --> 00:52:34.750
Let's try here.

00:52:37.650 --> 00:52:41.090
See that point, purple?

00:52:41.090 --> 00:52:43.480
Now we are going to zip.

00:52:43.480 --> 00:52:46.800
So take this.

00:52:46.800 --> 00:52:49.110
I glue those edges together.

00:52:49.110 --> 00:52:51.636
I don't have glue, or
glue takes a while to dry.

00:52:51.636 --> 00:52:52.760
So we're going to use tape.

00:52:55.520 --> 00:52:56.020
Ta-da.

00:52:58.560 --> 00:53:01.310
Now, we have to
glue a little more.

00:53:01.310 --> 00:53:04.796
I'm going to pretend
those just met.

00:53:04.796 --> 00:53:08.130
Eh, it's a little ugly.

00:53:08.130 --> 00:53:09.680
Man, couldn't I have
chosen something

00:53:09.680 --> 00:53:10.721
a little more degenerate?

00:53:14.225 --> 00:53:16.100
Here, it really does
work in the random case,

00:53:16.100 --> 00:53:18.605
which is fine, as long as
I was restricted to convex.

00:53:21.636 --> 00:53:23.851
Now, we're going to
If you brought tape,

00:53:23.851 --> 00:53:24.725
you can try yourself.

00:53:28.898 --> 00:53:30.190
Tape a little more.

00:53:34.190 --> 00:53:36.680
See, it's already making
a convex polyhedron.

00:53:36.680 --> 00:53:39.780
It's like magic.

00:53:39.780 --> 00:53:42.230
For a long time, we've
tried to turn this process

00:53:42.230 --> 00:53:43.420
into an algorithm.

00:53:43.420 --> 00:53:46.240
Because it looks
pretty good, right?

00:53:46.240 --> 00:53:49.925
But we have not been
able to formalize this.

00:53:49.925 --> 00:53:52.425
This differential flow does not
really follow our intuition.

00:53:56.390 --> 00:53:58.390
Now, I'm going to glue
these are edges together.

00:54:05.537 --> 00:54:07.120
This is when I wish
I had three hands.

00:54:20.498 --> 00:54:21.310
A little more.

00:54:40.720 --> 00:54:44.050
And there, we've computed
the antipodal point.

00:54:44.050 --> 00:54:45.420
In theory, you would zip that.

00:54:45.420 --> 00:54:47.410
But I'm going to leave
it open to give myself

00:54:47.410 --> 00:54:49.570
some maneuverability here.

00:54:49.570 --> 00:54:51.070
So you puff it out a little.

00:54:51.070 --> 00:54:54.630
It will be kind of
round and convex.

00:54:54.630 --> 00:54:56.090
Now, that's not
quite a polyhedron.

00:54:56.090 --> 00:54:58.460
But this is a polyhedral metric.

00:54:58.460 --> 00:55:00.570
And Alexandrov's
Theorem says this

00:55:00.570 --> 00:55:02.870
should make a unique
convex polyhedron.

00:55:02.870 --> 00:55:06.350
And with a little bit of
practice and thinking about it,

00:55:06.350 --> 00:55:09.310
you can derive that actually
this must be an edge here.

00:55:12.740 --> 00:55:15.660
It's more of an intuition thing.

00:55:15.660 --> 00:55:17.890
See, it looks like this
really wants to bend there.

00:55:17.890 --> 00:55:20.430
So that must be an edge.

00:55:20.430 --> 00:55:23.430
This one looks like it
must be an edge here.

00:55:23.430 --> 00:55:24.680
This gets a little hard to do.

00:55:27.860 --> 00:55:30.220
But this is how we
used to do them.

00:55:30.220 --> 00:55:34.020
Wow, this probably
still is how we do them.

00:55:34.020 --> 00:55:37.557
I haven't done a lot
of these in a while.

00:55:37.557 --> 00:55:39.015
It looks like
there's an edge here.

00:55:41.725 --> 00:55:47.466
Oh boy, something like that.

00:55:47.466 --> 00:55:51.320
Here there already is and
edge, kind of convenient.

00:55:51.320 --> 00:55:52.320
Here there's an edge.

00:55:57.450 --> 00:56:00.715
I'm just folding point to point.

00:56:00.715 --> 00:56:02.750
I'm almost triangulated.

00:56:02.750 --> 00:56:04.625
I've got a nice line there.

00:56:09.784 --> 00:56:11.450
It's starting to look
like a polyhedron.

00:56:11.450 --> 00:56:12.491
There's a couple missing.

00:56:12.491 --> 00:56:15.620
This guy probably has
a diagonal somewhere.

00:56:15.620 --> 00:56:17.560
I would guess here.

00:56:17.560 --> 00:56:20.970
And on the bottom, there's
a diagonal missing,

00:56:20.970 --> 00:56:24.887
I would guess, here.

00:56:24.887 --> 00:56:26.470
One of them is going
to make it reflex

00:56:26.470 --> 00:56:28.250
when the other one
will make it convex.

00:56:28.250 --> 00:56:29.410
You can experiment.

00:56:29.410 --> 00:56:33.090
Then you unfold, ideally,
and make a better version

00:56:33.090 --> 00:56:36.670
of this with more properly
drawn lines and then refold it.

00:56:36.670 --> 00:56:42.430
And I bet you it makes a
beautiful convex polyhedron.

00:56:42.430 --> 00:56:46.560
So this is the
experimental approach.

00:56:46.560 --> 00:56:51.040
And this gives you a hands-on
feel for Alexandrov's Theorem.

00:56:57.844 --> 00:56:58.816
Like that.

00:57:03.690 --> 00:57:06.130
Yeah, almost.

00:57:06.130 --> 00:57:09.350
Believe me, it's a
triangulated convex polyhedron.

00:57:09.350 --> 00:57:09.850
Gorgeous.

00:57:13.660 --> 00:57:14.874
That's how it works.

00:57:14.874 --> 00:57:16.790
And you can try for your
own convex polyhedron

00:57:16.790 --> 00:57:19.070
where you're
guaranteed not to fail.

00:57:19.070 --> 00:57:22.210
Now, you prove some nice things
about these perimeter havings.

00:57:22.210 --> 00:57:25.450
In particular, I had this
flexibility of where I started

00:57:25.450 --> 00:57:26.950
and where I ended.

00:57:26.950 --> 00:57:29.810
And I could move those
points continuously.

00:57:29.810 --> 00:57:33.190
There's infinitely many
choices for x and y.

00:57:33.190 --> 00:57:36.480
And certainly, there's
infinitely many gluings.

00:57:36.480 --> 00:57:39.300
I can just keep moving x and
moving y correspondingly.

00:57:39.300 --> 00:57:41.650
There's a whole
continuum of gluings.

00:57:41.650 --> 00:57:43.490
They're all different.

00:57:43.490 --> 00:57:47.000
They all generate
different polyhedra,

00:57:47.000 --> 00:57:48.190
if you think about it.

00:57:48.190 --> 00:57:55.127
Because if you think
of x being very close.

00:57:55.127 --> 00:57:57.460
x is definitely going to be
a vertex of your polyhedron.

00:57:57.460 --> 00:58:01.359
Because you end up gluing
this part of the edge

00:58:01.359 --> 00:58:02.400
to this part of the edge.

00:58:02.400 --> 00:58:04.710
So you have 180 degrees
of material there.

00:58:04.710 --> 00:58:09.279
That's a vertex, less than 360.

00:58:09.279 --> 00:58:10.820
And this is also a
vertex, let's say.

00:58:10.820 --> 00:58:13.660
Look at the nearest
neighbor to x.

00:58:13.660 --> 00:58:16.200
Here is a distance
between two vertices.

00:58:16.200 --> 00:58:17.216
It's the shortest path.

00:58:17.216 --> 00:58:18.840
If you make x very
close to the vertex,

00:58:18.840 --> 00:58:21.180
it will be a shortest path.

00:58:21.180 --> 00:58:22.850
And you're setting
that to infinitely

00:58:22.850 --> 00:58:26.650
many different values, a whole
continuum, very close to 0.

00:58:26.650 --> 00:58:29.090
If you look at some polyhedron
that this thing realizes,

00:58:29.090 --> 00:58:30.877
it has whatever, n vertices.

00:58:30.877 --> 00:58:32.960
You look at the n squared
different shortest paths

00:58:32.960 --> 00:58:33.501
between them.

00:58:33.501 --> 00:58:35.126
That's some finite
set of real numbers.

00:58:35.126 --> 00:58:37.542
And here, I'm supposed to get
a continuum of real numbers.

00:58:37.542 --> 00:58:39.190
Therefore, the set
of all polyhedra

00:58:39.190 --> 00:58:42.044
that you are making in this
process is a continuum.

00:58:42.044 --> 00:58:42.960
There's a lot of them.

00:58:45.892 --> 00:58:47.600
Most of the things
you'll get out of this

00:58:47.600 --> 00:58:48.927
are different polyhedra.

00:58:48.927 --> 00:58:50.510
If I started with a
different x and y,

00:58:50.510 --> 00:58:52.176
I'd get a slightly
different polyhedron.

00:58:52.176 --> 00:58:57.921
It will change continuously,
but it will be different.

00:58:57.921 --> 00:58:59.920
So this is the sense in
which, at the beginning,

00:58:59.920 --> 00:59:02.255
I said there infinitely
many gluings.

00:59:05.549 --> 00:59:07.340
Really, the only time
that they're infinite

00:59:07.340 --> 00:59:09.790
is when you have a
convex polygon somewhere

00:59:09.790 --> 00:59:11.755
embedded inside your polygon.

00:59:11.755 --> 00:59:14.880
It doesn't have
to be at the top.

00:59:14.880 --> 00:59:16.798
All right, where
do I want to go?

00:59:16.798 --> 00:59:17.298
Here.

00:59:43.670 --> 00:59:48.510
One way to think about
gluings is all these arrows

00:59:48.510 --> 00:59:49.469
that are not crossing.

00:59:49.469 --> 00:59:51.260
But it's a little bit
awkward to work with.

00:59:51.260 --> 00:59:54.080
And next class we're
going to really find

00:59:54.080 --> 00:59:56.070
algorithms to compute
these gluings.

00:59:56.070 --> 00:59:58.320
And it's useful to have
another structure, another way

00:59:58.320 --> 01:00:02.890
of looking and gluings,
called the gluing tree.

01:00:02.890 --> 01:00:06.210
And the main idea is to
take your polygon, which

01:00:06.210 --> 01:00:08.340
I'm going to explicitly shade.

01:00:08.340 --> 01:00:09.820
Because you're
soon going to lose

01:00:09.820 --> 01:00:13.680
track of where it is
if I don't shade it.

01:00:13.680 --> 01:00:15.180
So that's the inside
of the polygon,

01:00:15.180 --> 01:00:16.530
and there's outside space.

01:00:16.530 --> 01:00:19.520
I want to turn this
whole picture inside out.

01:00:19.520 --> 01:00:21.641
Think of this as
living on a sphere.

01:00:21.641 --> 01:00:23.390
On the sphere, there's
some shaded region.

01:00:23.390 --> 01:00:24.760
That's the material.

01:00:24.760 --> 01:00:29.390
And then there's the rest,
the black of the blackboard.

01:00:29.390 --> 01:00:31.510
If I look on the other
side of the sphere,

01:00:31.510 --> 01:00:35.760
my perspective will be, I
have some convex polygon.

01:00:35.760 --> 01:00:38.080
And the interior of the
polygon is on the outside.

01:00:41.040 --> 01:00:44.210
This is a useful way of
thinking about things.

01:00:44.210 --> 01:00:46.820
So there's my
polygons out there.

01:00:46.820 --> 01:00:52.210
Now in fact, in a convex case,
this would be less than 180.

01:00:52.210 --> 01:00:53.840
It's hard to see
that in this picture.

01:00:53.840 --> 01:00:55.330
But just think of
it topologically.

01:00:55.330 --> 01:00:57.184
Don't worry so much
about the geometry.

01:00:57.184 --> 01:00:59.600
Now, what I'm trying to do--
it's a little easier to think

01:00:59.600 --> 01:01:02.450
about, oh, I need to glue
this edge to this edge

01:01:02.450 --> 01:01:06.410
and then maybe glue
up to whatever.

01:01:06.410 --> 01:01:08.070
Maybe these were
the full length.

01:01:08.070 --> 01:01:11.580
Then I'll glue this edge to
this portion of that edge.

01:01:11.580 --> 01:01:21.275
So I still can draw my
arrows, something like that.

01:01:21.275 --> 01:01:24.067
This would be a
parameter having gluing.

01:01:24.067 --> 01:01:25.650
I can still draw
them, but now they're

01:01:25.650 --> 01:01:27.200
on the inside instead
of the outside.

01:01:27.200 --> 01:01:28.860
It's easier to see them.

01:01:28.860 --> 01:01:30.520
And in particular,
I could actually

01:01:30.520 --> 01:01:33.103
say, well, if I want to go that
edge to that edge, why don't I

01:01:33.103 --> 01:01:35.370
draw them next to each other?

01:01:35.370 --> 01:01:39.510
So it would look like this.

01:01:39.510 --> 01:01:43.700
Then have these edges when I
draw them next to each other.

01:01:43.700 --> 01:01:49.500
And then I have those edges
and then that edge and then

01:01:49.500 --> 01:01:54.620
the little edges, except these
are actually the same point.

01:01:54.620 --> 01:01:57.920
So it would look like that.

01:01:57.920 --> 01:02:01.480
I think of these as almost
touching and then the material

01:02:01.480 --> 01:02:04.000
still on the outside.

01:02:04.000 --> 01:02:08.880
It's not looking so white
anymore, but you get the idea.

01:02:08.880 --> 01:02:10.290
Well, that's a path.

01:02:10.290 --> 01:02:12.990
In general, you get a tree.

01:02:12.990 --> 01:02:18.690
So a gluing tree will look
something like this, maybe.

01:02:18.690 --> 01:02:19.760
It's a double tree.

01:02:19.760 --> 01:02:23.440
There's an underlying tree here,
and then you walk around it.

01:02:23.440 --> 01:02:25.080
And the material
is all out here.

01:02:29.110 --> 01:02:32.020
It's like that's
where you're gluing.

01:02:32.020 --> 01:02:34.340
Now, this is actually
really intuitive to us.

01:02:34.340 --> 01:02:36.730
It could be.

01:02:36.730 --> 01:02:39.290
When we were thinking
about where to cut along

01:02:39.290 --> 01:02:41.440
the surface of a
convex polyhedron,

01:02:41.440 --> 01:02:46.030
at some point we said, well,
in a convex polyhedron,

01:02:46.030 --> 01:02:48.050
we had all these properties
that, in the end,

01:02:48.050 --> 01:02:51.000
said the cuts must be a
spanning tree of the vertices.

01:02:51.000 --> 01:02:52.631
Every vertex must get cut too.

01:02:52.631 --> 01:02:54.380
And you can't have any
cycles in the cuts,

01:02:54.380 --> 01:02:56.680
because that would
disconnect the surface.

01:02:56.680 --> 01:02:59.140
So where you cut was
a set of was a tree,

01:02:59.140 --> 01:03:01.140
a set of edges forming a tree.

01:03:01.140 --> 01:03:06.570
That's the cut tree, just
viewed from the other side.

01:03:06.570 --> 01:03:07.904
That's where we want to glue.

01:03:07.904 --> 01:03:09.820
Folding is supposed to
be exactly the opposite

01:03:09.820 --> 01:03:12.120
of unfolding.

01:03:12.120 --> 01:03:14.570
That's why the gluing
tree is a tree.

01:03:21.410 --> 01:03:23.610
You could think about
some interesting things

01:03:23.610 --> 01:03:28.940
like where are the vertices
of my polygon in that picture?

01:03:28.940 --> 01:03:31.577
So here, I made all these
notches, but not all of them

01:03:31.577 --> 01:03:32.160
were vertices.

01:03:32.160 --> 01:03:34.870
Some of them were
the middles of edges.

01:03:34.870 --> 01:03:37.550
So this one might be 180,
meaning it wasn't really

01:03:37.550 --> 01:03:39.140
a vertex of the polygon.

01:03:39.140 --> 01:03:43.110
It was the middle of an edge.

01:03:43.110 --> 01:03:45.690
Obviously, if I
look at some vertex

01:03:45.690 --> 01:03:52.570
where three corners are coming
together, if one of them

01:03:52.570 --> 01:03:55.930
was 180 and another
one was 180, we

01:03:55.930 --> 01:03:59.200
would not have room for a third.

01:03:59.200 --> 01:04:01.510
At a degree 3 vertex
or more, it could have,

01:04:01.510 --> 01:04:03.410
at most, one middle of an edge.

01:04:03.410 --> 01:04:05.890
These guys, the
other remaining guys,

01:04:05.890 --> 01:04:09.080
must be vertices of the polygon.

01:04:09.080 --> 01:04:12.600
The middle of an edge
could be two 180s.

01:04:12.600 --> 01:04:15.360
That's actually
the typical case.

01:04:15.360 --> 01:04:20.245
If you look at one of these
gluings, most of the points,

01:04:20.245 --> 01:04:21.620
it's the middle
of an edge gluing

01:04:21.620 --> 01:04:23.200
to another middle of an edge.

01:04:23.200 --> 01:04:26.080
That's what's happening
almost everywhere.

01:04:26.080 --> 01:04:31.210
But you could also have some
180 gluing to some vertex.

01:04:31.210 --> 01:04:36.727
But then it had better be a
convex vertex, less than 180.

01:04:36.727 --> 01:04:38.310
You can go around
and think about what

01:04:38.310 --> 01:04:41.637
all these situations are.

01:04:41.637 --> 01:04:43.220
When there's a 180,
the remaining guys

01:04:43.220 --> 01:04:44.160
had better be convex.

01:04:44.160 --> 01:04:48.949
And their total angle had
better be less than 180.

01:04:48.949 --> 01:04:49.865
What about the leaves?

01:04:57.740 --> 01:04:58.855
This is a zipping place.

01:04:58.855 --> 01:05:01.650
I was talking about zips before,
were you just locally join

01:05:01.650 --> 01:05:04.730
the two incident
edges to themselves.

01:05:04.730 --> 01:05:06.450
The leaves are
where zips happen.

01:05:06.450 --> 01:05:09.110
Trees have leaves,
so zips happen.

01:05:12.020 --> 01:05:13.536
Zip happens.

01:05:13.536 --> 01:05:15.366
[LAUGHTER]

01:05:15.366 --> 01:05:16.740
PROFESSOR: This
angle, obviously,

01:05:16.740 --> 01:05:18.340
will be less than 360.

01:05:18.340 --> 01:05:21.080
It could be a vertex,
and then at some angle,

01:05:21.080 --> 01:05:23.330
or it could be the
middle of an edge.

01:05:23.330 --> 01:05:25.270
And then it will be 180.

01:05:25.270 --> 01:05:27.360
That's what we had over here.

01:05:33.900 --> 01:05:37.712
I chose one and
x to be a vertex.

01:05:37.712 --> 01:05:39.420
But then, generically,
on the other side,

01:05:39.420 --> 01:05:41.170
you're going to get
the middle of an edge.

01:05:41.170 --> 01:05:44.470
And the example I did
in reality, both of them

01:05:44.470 --> 01:05:46.390
were in the middle of an edge.

01:05:46.390 --> 01:05:50.040
I'm going to make
special note of the ones

01:05:50.040 --> 01:05:55.820
where we have
material like this,

01:05:55.820 --> 01:05:58.390
and you end up
zipping like that,

01:05:58.390 --> 01:06:02.490
we call this a fold point.

01:06:02.490 --> 01:06:05.430
I don't know why,
but you fold at it.

01:06:05.430 --> 01:06:08.190
So it's some shorthand.

01:06:08.190 --> 01:06:11.210
So these are fold
points, the leaves that

01:06:11.210 --> 01:06:14.630
are at the middle
of an edge, they're

01:06:14.630 --> 01:06:19.170
a little special or
a little restricted.

01:06:19.170 --> 01:06:22.580
Because how much curvature
is at that point?

01:06:22.580 --> 01:06:25.050
180.

01:06:25.050 --> 01:06:32.590
Fold points have curvature 180.

01:06:32.590 --> 01:06:35.000
The total curvature is 720.

01:06:35.000 --> 01:06:37.705
So I can't have more
than four fold points.

01:06:46.980 --> 01:06:50.030
They're actually quite
rare, but they can happen.

01:06:50.030 --> 01:06:52.185
Obviously, we had two of
them in these examples.

01:06:56.540 --> 01:06:57.890
Can actually have four?

01:07:01.220 --> 01:07:02.631
Yeah I think.

01:07:02.631 --> 01:07:04.172
AUDIENCE: Could you
have [INAUDIBLE]?

01:07:12.040 --> 01:07:14.010
PROFESSOR: I'm going to
draw an actual folding,

01:07:14.010 --> 01:07:15.940
with creases and everything.

01:07:15.940 --> 01:07:19.260
This is a blintz space,
for the origamists.

01:07:19.260 --> 01:07:20.230
You fold like that.

01:07:20.230 --> 01:07:24.020
You get a doubly covered square.

01:07:24.020 --> 01:07:28.225
The gluing tree is
going to look like this.

01:07:30.869 --> 01:07:31.410
You see that?

01:07:31.410 --> 01:07:35.310
And it will be drawn
right on top of that,

01:07:35.310 --> 01:07:38.440
and the actual
material is back here.

01:07:38.440 --> 01:07:40.600
So this will be exactly
four fold points.

01:07:40.600 --> 01:07:43.040
And just by luck, you have
these four 90 degree angles.

01:07:43.040 --> 01:07:44.649
So there's no more
curvature there.

01:07:44.649 --> 01:07:46.690
So yeah, you can definitely
get four fold points.

01:07:46.690 --> 01:07:48.455
I don't know if you can
get a large examples four

01:07:48.455 --> 01:07:49.200
fold points.

01:07:49.200 --> 01:07:52.180
AUDIENCE: I think four fold
points means it'll be flat.

01:07:52.180 --> 01:07:54.180
PROFESSOR: Four fold
points means it'll be flat.

01:07:54.180 --> 01:07:57.235
AUDIENCE: So that's going
to be 0 curvature at that.

01:07:57.235 --> 01:07:58.610
PROFESSOR: You're
going to have 0

01:07:58.610 --> 01:08:00.700
curvature at every other vertex.

01:08:00.700 --> 01:08:03.230
It's certainly implies
that you are a tetrahedron.

01:08:03.230 --> 01:08:07.250
Because you only have
four vertices at all.

01:08:07.250 --> 01:08:07.751
So yeah.

01:08:07.751 --> 01:08:10.166
You might be able to start
with some complicate a polygon.

01:08:10.166 --> 01:08:11.930
And then, everything
somehow disappears,

01:08:11.930 --> 01:08:15.990
because all the angles match
up in a lucky way, like this.

01:08:15.990 --> 01:08:18.744
But the polyhedron itself will
definitely be a tetrahedron.

01:08:18.744 --> 01:08:20.160
I'm not sure if
it has to be flat,

01:08:20.160 --> 01:08:23.050
but tetrahedron
is pretty simple.

01:08:23.050 --> 01:08:25.180
So it's not so exciting.

01:08:25.180 --> 01:08:26.830
Let me tell you
about rolling belts,

01:08:26.830 --> 01:08:29.760
because they're really cool.

01:08:29.760 --> 01:08:32.280
And then I think we're done.

01:09:00.691 --> 01:09:03.920
A rolling belt is basically
an embedded, convex polygon.

01:09:06.479 --> 01:09:08.870
And we saw that when we
looked at a convex polygon,

01:09:08.870 --> 01:09:13.497
from the perspective of a
gluing tree, it was a path.

01:09:13.497 --> 01:09:14.580
In general, I have a tree.

01:09:14.580 --> 01:09:17.859
And I want to define
when a path in that tree

01:09:17.859 --> 01:09:20.210
is like a convex polygon.

01:09:20.210 --> 01:09:22.319
And like in the sense
that it can roll.

01:09:22.319 --> 01:09:25.582
I could move x continuously
and move y corresponding,

01:09:25.582 --> 01:09:27.290
and I'd always have
an Alexandrov gluing.

01:09:27.290 --> 01:09:29.710
So it's like one of
these infinite families.

01:09:29.710 --> 01:09:34.720
I'd like to detect those things,
and we call them rolling belts.

01:09:34.720 --> 01:09:37.689
They're going to be a
path in the gluing tree.

01:09:37.689 --> 01:09:40.180
Here are the
conditions you need.

01:09:40.180 --> 01:09:52.060
The endpoints are
either fold points

01:09:52.060 --> 01:09:54.184
or convex vertices, no reflex.

01:10:01.020 --> 01:10:03.390
In that case, they
must be leaves.

01:10:03.390 --> 01:10:12.180
And along that path, you
always have less than

01:10:12.180 --> 01:10:19.580
or equal to 180 degrees of
material on either side.

01:10:24.860 --> 01:10:26.630
This is pretty intuitive.

01:10:26.630 --> 01:10:28.210
So you have some tree.

01:10:31.652 --> 01:10:33.610
I'll draw a slightly more
general picture here.

01:10:42.160 --> 01:10:49.082
And then, I look at some path
in that tree, maybe from here

01:10:49.082 --> 01:10:50.380
to here.

01:10:55.632 --> 01:10:57.340
Yeah, this was the
way I glued things up.

01:10:57.340 --> 01:11:00.239
Now, imagine that I recut here.

01:11:00.239 --> 01:11:02.280
Ideally, these are supposed
to be glued together.

01:11:02.280 --> 01:11:05.150
But what if I separated, I
pulled just those parts apart?

01:11:05.150 --> 01:11:07.600
I left these intact, all
the sub trees hanging off I

01:11:07.600 --> 01:11:08.810
didn't touch.

01:11:08.810 --> 01:11:10.540
And then I just
rolled that thing

01:11:10.540 --> 01:11:11.880
like it was a convex polygon.

01:11:11.880 --> 01:11:14.420
Which means, instead
of going here to here,

01:11:14.420 --> 01:11:17.240
I'm going to glue this
point to this point.

01:11:17.240 --> 01:11:21.080
I'm going to slide
this over a little bit.

01:11:21.080 --> 01:11:22.580
Whereas before,
this point was glued

01:11:22.580 --> 01:11:26.790
to itself-- that was the end of
the zip-- the new zip point is

01:11:26.790 --> 01:11:31.250
going to be-- I can't tell,
everything's moving this way.

01:11:31.250 --> 01:11:34.220
This point is going
to move up here.

01:11:34.220 --> 01:11:37.080
And it's going to become
the new zip point.

01:11:37.080 --> 01:11:39.390
Everybody here is moving
in that direction.

01:11:39.390 --> 01:11:41.460
Everybody here is moving
in that direction.

01:11:41.460 --> 01:11:47.080
I just kind of roll that belt
along, and then I reglue.

01:11:47.080 --> 01:11:49.950
And as long as it looks like
a convex polygon-- meaning,

01:11:49.950 --> 01:11:52.680
as you walk around here,
the total amount of material

01:11:52.680 --> 01:11:55.590
getting glued, like, here I
have two portions of material--

01:11:55.590 --> 01:11:59.927
as long as that's, at most,
180 in total, I can do that.

01:11:59.927 --> 01:12:01.760
Because if it's, at
most, 180 on both sides,

01:12:01.760 --> 01:12:03.330
it will be, at
most, 360 in total.

01:12:05.930 --> 01:12:07.060
So that's it.

01:12:07.060 --> 01:12:09.050
And there's a separate
corner condition.

01:12:09.050 --> 01:12:12.707
But all it's saying is that
it's, at most, 180 everywhere.

01:12:12.707 --> 01:12:14.790
And then it's really acting
like a convex polygon,

01:12:14.790 --> 01:12:19.280
but not in total, just in that
little subpath of the tree.

01:12:22.280 --> 01:12:24.060
Turns out, this is
the only way to have

01:12:24.060 --> 01:12:26.470
an infinite set of gluings.

01:12:26.470 --> 01:12:30.590
All infinite goings will
look like rolling belts.

01:12:30.590 --> 01:12:32.850
Now, there can be more
than one rolling belt

01:12:32.850 --> 01:12:35.830
in a single example.

01:12:35.830 --> 01:12:39.011
And this I can even build.

01:12:39.011 --> 01:12:40.080
It's pretty simple.

01:12:40.080 --> 01:12:46.595
I take a rectangle, and I
glue it into a cylinder.

01:12:55.630 --> 01:12:57.535
Beautiful, what an
amazing cylinder.

01:13:06.487 --> 01:13:08.820
But I'm not going to commit
to how the rest of the thing

01:13:08.820 --> 01:13:10.420
is glued.

01:13:10.420 --> 01:13:11.470
There's a cylinder.

01:13:11.470 --> 01:13:12.740
What did I draw?

01:13:12.740 --> 01:13:13.420
The gluing tree.

01:13:13.420 --> 01:13:18.270
So initially, my rectangles
out here, imagine.

01:13:18.270 --> 01:13:20.370
And I've glued--
what did I glue,

01:13:20.370 --> 01:13:23.290
the shortage to the shortage?

01:13:23.290 --> 01:13:25.410
So what I end up with,
in terms of gluing tree,

01:13:25.410 --> 01:13:27.050
is I have these two edges
that are glued to each other.

01:13:27.050 --> 01:13:29.080
And then I have this
big thing, which

01:13:29.080 --> 01:13:31.450
I don't know how I
want to glue that yet.

01:13:31.450 --> 01:13:32.960
I haven't decided.

01:13:32.960 --> 01:13:35.720
So those loops are supposed
to get squashed into a tree.

01:13:35.720 --> 01:13:38.760
And that's this
loop and this loop.

01:13:38.760 --> 01:13:43.186
You can almost see this is a
weird projection of a cylinder.

01:13:43.186 --> 01:13:44.810
A cylinder goes around
on the backside,

01:13:44.810 --> 01:13:46.351
because all the
material is out here.

01:13:48.860 --> 01:13:50.990
I'm totally free, what
I do with the top here.

01:13:50.990 --> 01:13:52.030
It's a rolling belt.

01:13:52.030 --> 01:13:53.071
Look, I can even role it.

01:13:53.071 --> 01:13:53.580
It's great.

01:13:53.580 --> 01:13:59.890
I can slide it around,
slide, slide, slide.

01:13:59.890 --> 01:14:02.640
I can do this forever,
because it's cyclic.

01:14:02.640 --> 01:14:06.700
And then separately, I can
slide this one however I want.

01:14:06.700 --> 01:14:07.750
It doesn't matter.

01:14:07.750 --> 01:14:11.590
At all times, I'm just
gluing 180 to 180.

01:14:11.590 --> 01:14:14.170
And at the ends, I'm getting
to just single 180's.

01:14:14.170 --> 01:14:16.356
Those are fold points.

01:14:16.356 --> 01:14:18.230
Well, this one's not
technically a fold point

01:14:18.230 --> 01:14:22.660
if I did it right at the vertex,
but it acts the same way.

01:14:22.660 --> 01:14:24.320
So the gluing tree
is always going

01:14:24.320 --> 01:14:27.982
to look something like this.

01:14:27.982 --> 01:14:29.190
But each of these could roll.

01:14:29.190 --> 01:14:30.340
So it could look like that.

01:14:30.340 --> 01:14:33.290
It could look like it's even.

01:14:33.290 --> 01:14:36.450
You get to slide this around.

01:14:36.450 --> 01:14:40.870
So it's a double continuum,
a double rainbow.

01:14:43.870 --> 01:14:46.460
In some cases, like this
one, when there are lines,

01:14:46.460 --> 01:14:49.280
you actually get a flat thing,
which is kind of boring.

01:14:49.280 --> 01:14:55.550
In all other cases, you will get
a convex tetrahedron, non-flat,

01:14:55.550 --> 01:14:57.510
for this one example.

01:14:57.510 --> 01:14:58.640
That's two rolling belts.

01:14:58.640 --> 01:15:00.280
Now notice, to have
to rolling belts,

01:15:00.280 --> 01:15:03.040
I basically had to
have four fold points.

01:15:03.040 --> 01:15:04.290
Sounds familiar.

01:15:04.290 --> 01:15:08.050
I can only have
four fold points.

01:15:08.050 --> 01:15:09.880
So it seems like
maybe two rolling

01:15:09.880 --> 01:15:11.830
belts is the most I can have.

01:15:11.830 --> 01:15:15.670
Because each rolling belt--
if you roll a little bit,

01:15:15.670 --> 01:15:17.450
it will have a fold
point on either end.

01:15:19.980 --> 01:15:24.220
Two is kind of the
max, but only kind of.

01:15:24.220 --> 01:15:25.100
You can do three.

01:15:29.036 --> 01:15:29.790
Let's do three.

01:15:38.500 --> 01:15:40.055
Three rolling belts.

01:15:44.880 --> 01:15:48.570
I'm going to take this
example, the blintz space.

01:15:52.100 --> 01:15:54.400
Yeah, let's look at this
example for a little bit.

01:15:54.400 --> 01:15:57.650
I hadn't planned this.

01:15:57.650 --> 01:16:01.630
The tree here, is this nice
four star, four-armed star.

01:16:01.630 --> 01:16:07.780
And there's kind of a rolling
belt from here to here.

01:16:07.780 --> 01:16:10.860
If I ignore the fact that there
are these things hanging off,

01:16:10.860 --> 01:16:14.605
then I have, at most,
180 on both sides.

01:16:14.605 --> 01:16:16.960
It acts just like a
rolling belt Also,

01:16:16.960 --> 01:16:18.360
there's a rolling belt here.

01:16:18.360 --> 01:16:20.090
They cross each other.

01:16:20.090 --> 01:16:21.820
Crazy.

01:16:21.820 --> 01:16:28.480
But in theory, it's
a little tricky.

01:16:28.480 --> 01:16:30.210
They're not independent anymore.

01:16:30.210 --> 01:16:33.480
I can roll one of
them however I want.

01:16:33.480 --> 01:16:37.090
But if I roll that one at all,
I cannot roll the other one.

01:16:37.090 --> 01:16:39.320
Because as soon as
you roll-- let's say

01:16:39.320 --> 01:16:41.100
I roll the horizontal one.

01:16:41.100 --> 01:16:44.060
It'll look like this.

01:16:46.620 --> 01:16:49.880
They'll be if you roll that.

01:16:49.880 --> 01:16:53.690
So these top and bottom
guys are no longer touching.

01:16:53.690 --> 01:16:57.402
And if you try to make
this path a rolling belt,

01:16:57.402 --> 01:17:00.420
it doesn't look so good.

01:17:00.420 --> 01:17:08.210
Because here, this side,
there's more than 180.

01:17:08.210 --> 01:17:12.232
It's going to have a 90 from
here and 180 from down there.

01:17:12.232 --> 01:17:13.690
So that's no longer
a rolling belt.

01:17:13.690 --> 01:17:15.064
Right now it is,
and I could roll

01:17:15.064 --> 01:17:18.040
just the vertical one or the
horizontal one but not both.

01:17:20.430 --> 01:17:22.680
But the point here is, you
can have rolling belts that

01:17:22.680 --> 01:17:26.670
cross or overlap each
other, in general.

01:17:26.670 --> 01:17:35.020
If we do the same thing
with a triangle-- in fact,

01:17:35.020 --> 01:17:38.460
I think I'm going to make a
tetrahedron-- look at that.

01:17:38.460 --> 01:17:39.089
Amazing.

01:17:39.089 --> 01:17:40.505
Bring those three
points together.

01:17:44.320 --> 01:17:47.932
The gluing tree looks like that.

01:17:47.932 --> 01:17:49.390
This is the top of
the tetrahedron.

01:17:49.390 --> 01:17:52.030
These are the other three
vertices of the tetrahedron.

01:17:52.030 --> 01:17:53.571
It's a spanning tree
of the vertices.

01:17:56.450 --> 01:17:58.790
I claim this is a rolling belt.

01:17:58.790 --> 01:18:01.930
And therefore, so is
this and so is this.

01:18:01.930 --> 01:18:04.610
So there are three of them.

01:18:04.610 --> 01:18:07.200
Because at this point, well,
that was like a fold point.

01:18:07.200 --> 01:18:09.220
There's only 180 degrees there.

01:18:09.220 --> 01:18:13.910
As I walk around, here I
have two 60s going together.

01:18:13.910 --> 01:18:16.620
That's less than 180.

01:18:16.620 --> 01:18:18.670
And on the other
side, I just have 160.

01:18:18.670 --> 01:18:21.560
So it's definitely less
than 180 on both sides,

01:18:21.560 --> 01:18:22.910
all the way along this curve.

01:18:22.910 --> 01:18:24.430
And by symmetry,
along all three.

01:18:24.430 --> 01:18:26.390
So I can kind of get
three rolling belts.

01:18:26.390 --> 01:18:29.200
They're not independent,
I don't think.

01:18:29.200 --> 01:18:34.220
If I roll one of them, it
looks like actually maybe I

01:18:34.220 --> 01:18:36.960
can keep rolling the others.

01:18:36.960 --> 01:18:39.420
But this is the only way you
can get three rolling belts.

01:18:39.420 --> 01:18:42.685
It turns out, four rolling
belts are impossible.

01:18:50.470 --> 01:18:53.410
This is actually something
we proved in this class.

01:18:53.410 --> 01:18:56.880
We've proved it six years ago.

01:18:56.880 --> 01:18:58.580
So it's probably
even in the textbook.

01:18:58.580 --> 01:19:00.215
I don't remember,
very simple proof.

01:19:05.080 --> 01:19:08.270
If you have four rolling
belts, even if they overlap,

01:19:08.270 --> 01:19:14.015
you have to have a lot of fold
points, at least four of them.

01:19:14.015 --> 01:19:16.390
There has to be at least one
fold point per rolling belt,

01:19:16.390 --> 01:19:17.764
because they have
different ends.

01:19:17.764 --> 01:19:19.740
At least one end is different.

01:19:19.740 --> 01:19:23.006
Here, we had three fold
points and three belts.

01:19:23.006 --> 01:19:26.890
If we have four fold
points, at least four belts.

01:19:26.890 --> 01:19:30.190
If you have four rolling belts,
at least four fold points.

01:19:30.190 --> 01:19:31.780
Get the right direction.

01:19:31.780 --> 01:19:33.480
We know there's only
four fold points.

01:19:33.480 --> 01:19:35.409
So it's actually exactly
four fold points.

01:19:35.409 --> 01:19:37.700
But as you were saying, when
you have four fold points,

01:19:37.700 --> 01:19:39.616
there's really no more
curvature to go around.

01:19:41.986 --> 01:19:43.110
In fact, this can't happen.

01:19:43.110 --> 01:19:45.620
Because your four fold
points-- all the curvature

01:19:45.620 --> 01:19:47.440
is at those four leaves.

01:19:47.440 --> 01:19:51.130
Every other vertex must be
perfectly balanced, has to have

01:19:51.130 --> 01:19:51.740
0 curvature.

01:19:56.690 --> 01:19:58.606
And then things break.

01:19:58.606 --> 01:20:00.105
It's not a very
convincing argument.

01:20:07.190 --> 01:20:08.460
You imagine these fold points.

01:20:08.460 --> 01:20:15.586
They're somewhere
in your gluing tree.

01:20:15.586 --> 01:20:17.890
Maybe they're here.

01:20:17.890 --> 01:20:22.330
In order to fit four rolling
belts, there's got to be,

01:20:22.330 --> 01:20:26.990
on average, two rolling belts
coming out of every vertex.

01:20:26.990 --> 01:20:30.000
And where they diverge,
it's a problem.

01:20:30.000 --> 01:20:32.749
Because there has to be
basically 0 degrees of material

01:20:32.749 --> 01:20:35.040
out here for them to roll
that way and to role that way

01:20:35.040 --> 01:20:36.760
and have 0 curvature.

01:20:36.760 --> 01:20:38.230
So it fails.

01:20:41.630 --> 01:20:43.130
One rolling belt,
two rolling belts,

01:20:43.130 --> 01:20:45.320
three rolling belts, no more.

01:20:45.320 --> 01:20:47.200
So it's not that
complicated, in terms

01:20:47.200 --> 01:20:48.660
of the infinite structure.

01:20:48.660 --> 01:20:51.530
What's really interesting is
all the very combinatorially

01:20:51.530 --> 01:20:52.459
different trees.

01:20:52.459 --> 01:20:54.000
When I roll a belt,
not much changes.

01:20:54.000 --> 01:20:56.180
It's just changing a
few of the lengths.

01:20:56.180 --> 01:21:00.180
Next class, we're going to look
at how the trees themselves

01:21:00.180 --> 01:21:03.250
can actually change
combinatorially and get bounds

01:21:03.250 --> 01:21:04.980
on how many there or
how to compute them.

01:21:04.980 --> 01:21:07.840
There's good algorithms
for it, all that stuff.

01:21:07.840 --> 01:21:09.640
Still some open problems too.

01:21:09.640 --> 01:21:12.774
That'll be next class,
which is on Monday.

01:21:12.774 --> 01:21:13.690
No class on Wednesday.

01:21:16.240 --> 01:21:17.930
That's it.

