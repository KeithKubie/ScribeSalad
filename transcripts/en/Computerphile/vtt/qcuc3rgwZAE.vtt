WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.960
Okay so today we're going to talk about blockchain technology

00:00:03.000 --> 00:00:05.440
and give you a high-level overview of what it is and how it works

00:00:08.320 --> 00:00:14.140
blockchain, it emerged in 2008 out of cryptocurrency

00:00:14.320 --> 00:00:17.720
specifically Bitcoin that had a white paper published and

00:00:18.340 --> 00:00:21.020
That's really where it all started

00:00:21.020 --> 00:00:23.380
So we start, I guess, by defining what it is

00:00:23.460 --> 00:00:28.740
Blockchain technology is a distributed, decentralized system in which all parties

00:00:28.740 --> 00:00:32.920
have an entire record and can view the transactions that took place

00:00:33.240 --> 00:00:37.460
It's a decentralized and distributed network and

00:00:37.460 --> 00:00:42.220
I can draw that out to explain what a decentralized, distributed network actually is

00:00:42.300 --> 00:00:48.000
so in a classic centralized network, you have a central node to which all other

00:00:48.000 --> 00:00:49.760
nodes in the network connect to

00:00:49.760 --> 00:00:52.180
In a distributed system

00:00:52.380 --> 00:00:54.020
you might have

00:00:54.039 --> 00:00:57.419
clusters of nodes with a few

00:00:58.149 --> 00:01:01.529
links between them, something a bit like this

00:01:01.600 --> 00:01:05.909
But if you know - this node - is knocked offline, you lose

00:01:06.340 --> 00:01:09.400
the part of the data that was stored on that system

00:01:09.800 --> 00:01:12.920
in a distributed system

00:01:13.740 --> 00:01:16.140
like a peer-to-peer network

00:01:16.140 --> 00:01:18.420
you have something a bit more like this

00:01:18.420 --> 00:01:20.620
here you can think of talking a bit like in database terms

00:01:21.080 --> 00:01:23.400
your database is sharded and

00:01:23.580 --> 00:01:27.980
distributed in components, parts across your network

00:01:27.980 --> 00:01:30.980
In this distributed, decentralized solution

00:01:30.980 --> 00:01:35.940
all parties have a complete record of the database and system

00:01:36.189 --> 00:01:41.758
combined together to add this one single database with each individual node having a complete

00:01:42.660 --> 00:01:46.100
copy of all transactions, in the case of blockchain

00:01:46.340 --> 00:01:48.100
So here you've got centralized,

00:01:48.100 --> 00:01:51.780
here you've got a decentralized network

00:01:51.780 --> 00:01:56.140
where you've got clusters with only a few nodes connecting the individual clusters

00:01:56.799 --> 00:01:59.879
and here in this more lattice pattern you've got a

00:02:00.400 --> 00:02:03.160
distributed and decentralized network

00:02:03.160 --> 00:02:08.860
you can think of the blockchain system as a distributed ledger or like an old fashion

00:02:09.180 --> 00:02:11.580
uh, database term, a transaction based database

00:02:11.580 --> 00:02:16.480
That's what it fundamentally is, it stores a ledger of transactions

00:02:17.200 --> 00:02:17.740
uh

00:02:18.340 --> 00:02:19.320
and

00:02:19.320 --> 00:02:20.700
it's also

00:02:21.130 --> 00:02:24.089
immutable, which is to say..

00:02:25.060 --> 00:02:27.060
it can be updated

00:02:27.880 --> 00:02:30.570
new sets of transactions can be added to it

00:02:31.000 --> 00:02:36.690
but, it can't, you know, once something's added, that block cannot and should not be changed or

00:02:37.060 --> 00:02:39.060
mutated any further

00:02:39.060 --> 00:02:41.900
the core technologies that underpin blockchain

00:02:41.900 --> 00:02:45.020
is hash codes, hash puzzles

00:02:45.520 --> 00:02:49.080
Merkel trees and public-private key cryptography

00:02:49.080 --> 00:02:53.900
in the sort of common parlance of bitcoin you have what is known as a bitcoin wallet

00:02:53.940 --> 00:02:58.040
that's actually your public key in [terms of your?] private-public key cryptography

00:02:58.040 --> 00:03:01.360
[like an?] earlier Computerphile on public-private encryption

00:03:01.360 --> 00:03:08.660
but essentially, in the case of blockchain, you have your your wallet (your public key) and

00:03:08.660 --> 00:03:09.580
uh

00:03:09.580 --> 00:03:10.960
your private key

00:03:10.960 --> 00:03:15.520
and an interesting thing about at least the way bitcoin has implemented on the blockchain technology

00:03:15.520 --> 00:03:22.380
it's all or nothing, so the total wealth of my current wallet has to be spent in a transaction, so if I've got five

00:03:23.320 --> 00:03:26.060
bitcoins using the Bitcoin technology

00:03:26.060 --> 00:03:30.560
and I only want to send one to you then I send one coin to you and four back to myself

00:03:30.560 --> 00:03:32.640
but I had to do this sort of circular transaction

00:03:32.640 --> 00:03:36.560
I basically say that that one bitcoin I've sent to you

00:03:37.100 --> 00:03:37.600
is

00:03:37.600 --> 00:03:39.880
I don't necessarily know you, I don't know who you are

00:03:39.900 --> 00:03:41.560
There's no reason for us to have met or

00:03:41.560 --> 00:03:45.700
me to even know your name what I'm really saying is the wallet that is labeled

00:03:45.700 --> 00:03:50.180
by this public key, the person who owns the corresponding private key to that public key

00:03:50.190 --> 00:03:53.669
I'm authorizing them to take ownership of

00:03:54.550 --> 00:03:56.470
this one Bitcoin

00:03:57.880 --> 00:04:02.339
and that's how public private key Encryption is used in, in means of

00:04:03.340 --> 00:04:05.340
legitimizing and, or uh

00:04:05.860 --> 00:04:08.400
authoring transaction said yes

00:04:08.500 --> 00:04:12.000
I have said you can spend this amount

00:04:12.970 --> 00:04:17.669
I wish transfer the amount to you, and you know that that turns got originated from me

00:04:17.669 --> 00:04:20.680
and not somebody else on the network poking at me

00:04:21.100 --> 00:04:23.540
The other thing is hash uh

00:04:23.560 --> 00:04:27.400
Hash codes and merkel trees
Basically I can, please throw this out,

00:04:27.940 --> 00:04:33.400
another interesting thing about the way hashes work is for a given input

00:04:33.500 --> 00:04:35.000
if I have I know

00:04:35.000 --> 00:04:40.340
ABC make my input and I put that through hashing algorithms and

00:04:41.150 --> 00:04:44.300
I get the output, I don't know, uh

00:04:44.330 --> 00:04:47.000
Zero Five B C

00:04:47.419 --> 00:04:48.650
Uh

00:04:48.650 --> 00:04:53.820
I only have to change this marginally, say I add ABC

00:04:53.820 --> 00:05:00.700
and I add D to it and it will completely change the corresponding hashed code

00:05:00.720 --> 00:05:05.700
you only have to change the input in a small way to get a drastically different hashcode coming out

00:05:05.740 --> 00:05:12.160
that will be of the same uniform length, a particular one despite the fact the input which of a different length

00:05:12.460 --> 00:05:16.960
you can think of it is like labeling it with a uh

00:05:17.260 --> 00:05:19.980
I'm going to use 'unique' carefully here 'cause there are

00:05:20.630 --> 00:05:22.839
In occasions you do hash collisions where?

00:05:24.020 --> 00:05:29.360
different input resolves to the same hash, but you're you're aiming toward uniqueness

00:05:29.360 --> 00:05:32.100
and the idea is you can think of it as like a

00:05:32.380 --> 00:05:35.180
fixed length signature for a given input

00:05:35.360 --> 00:05:39.400
so how this feature further in in block Chains is

00:05:39.440 --> 00:05:41.700
a blockchain technology

00:05:41.720 --> 00:05:44.060
The transactions we talked about earlier

00:05:44.560 --> 00:05:48.600
uh, are grouped to get, you know, you can think of transactions when they first

00:05:48.889 --> 00:05:51.300
published the network it's existing out there in the ether

00:05:51.500 --> 00:05:56.019
and then the job of you might have heard of sort of miners in blockchain technology

00:05:56.389 --> 00:06:00.219
The job of a miner is to gather a bunch of these two transactions together

00:06:00.940 --> 00:06:02.940
form them into a block and

00:06:03.820 --> 00:06:06.880
the process of doing that is what involves hashing

00:06:07.100 --> 00:06:12.320
and the process of checking that a block it remains immutable and hasn't been changed

00:06:12.860 --> 00:06:18.970
It goes on to Merkle trees which are drawn in the next diagram, but essentially one key. I formed my block

00:06:19.640 --> 00:06:23.500
My block has a corresponding hashcode

00:06:23.800 --> 00:06:27.560
and how Merkle trees come into it.
If we start with a

00:06:27.880 --> 00:06:33.120
basic block of content that we want to represent in our tree structure in generating our

00:06:33.380 --> 00:06:39.580
next node in our tree. I'm just going to use H to represent hash function

00:06:39.880 --> 00:06:45.580
Of A and B, and the value of that comes to label this node in our tree

00:06:46.160 --> 00:06:49.800
Likewise over here, take the Hash of B

00:06:50.060 --> 00:06:54.940
and C and then here at our top level we take the hash of

00:06:55.040 --> 00:07:01.500
the hash of A and B, and the hash of B and C

00:07:02.030 --> 00:07:03.560
and that

00:07:03.560 --> 00:07:06.340
represents our next level up in the tree and

00:07:07.490 --> 00:07:09.490
the interesting thing about

00:07:10.460 --> 00:07:14.500
This structure and about hash code is, we remember from this diagram

00:07:14.500 --> 00:07:21.640
You only have to change your input a tiny bit to change the output so if I change this base content

00:07:21.640 --> 00:07:24.500
I make it lower case rather than upper case for example

00:07:24.820 --> 00:07:28.600
this will then change to this, the hashcode will become invalid

00:07:28.600 --> 00:07:31.040
as wic and it will persuade and filter back up and

00:07:31.260 --> 00:07:33.720
that is the core

00:07:33.980 --> 00:07:41.020
of blockchain technology in terms of how blocks are stored and how it's, uh,

00:07:41.300 --> 00:07:45.380
In a, in a sys-, in a distributed system when no one knows anybody else

00:07:45.380 --> 00:07:49.880
how you know and can be certain that

00:07:49.880 --> 00:07:55.380
the transaction cannot been tampered with because everyone can see this chain of blocks

00:07:55.380 --> 00:07:57.760
Having talked about some the underlying data structures

00:07:57.760 --> 00:08:01.940
give an example of how transaction get grouped into blocks and blocks get grouped into chains

00:08:02.240 --> 00:08:06.280
so you can think of, uh

00:08:06.740 --> 00:08:08.640
your, you know

00:08:08.640 --> 00:08:13.260
your ledger of transactions, you can, when you transaction your first formed on the network

00:08:13.260 --> 00:08:16.500
they could go out there in the ether; the sort of loose

00:08:16.500 --> 00:08:19.000
transactions that need to be grouped together into blocks

00:08:19.000 --> 00:08:19.920
in a network

00:08:20.060 --> 00:08:24.920
Anyone who takes on the role of a miner their job is to grab some of these

00:08:24.960 --> 00:08:28.740
transactions down from the ether put them into a block

00:08:28.740 --> 00:08:33.300
If I draw a block here and a block has several things in it has

00:08:33.400 --> 00:08:35.460
a set of transactions

00:08:35.680 --> 00:08:37.680
A said something to B

00:08:37.900 --> 00:08:40.720
B said something to C and so and so forth

00:08:40.720 --> 00:08:46.040
it also has the hash value of any previous block

00:08:46.040 --> 00:08:47.930
That were in the network

00:08:47.930 --> 00:08:50.200
Going back to that Merkle tree structure

00:08:50.540 --> 00:08:54.400
Additionally it has something known as a Nonce value

00:08:54.520 --> 00:08:59.660
Which is just a randomly guessed value, uh

00:08:59.660 --> 00:09:01.640
to impact the

00:09:01.660 --> 00:09:04.000
signature hash of this block

00:09:04.000 --> 00:09:10.000
so you hash the combination of the record of transactions, the hash value of the previous block and

00:09:10.640 --> 00:09:13.400
this Nonce value to generate a

00:09:13.460 --> 00:09:16.580
Hash Code that uniquely labels this block

00:09:16.580 --> 00:09:20.780
now the reason behind the Nonce value is

00:09:21.080 --> 00:09:26.900
to sort of hash puzzle this final hash code that labels this block

00:09:26.980 --> 00:09:28.420
It will [? help out you know ?]

00:09:28.420 --> 00:09:30.620
it had to start with four zeroes

00:09:30.760 --> 00:09:33.819
So what a miner does, he groups his transactions together

00:09:33.820 --> 00:09:40.420
And he puts in random guesses for that Nonce value until this hash value that labels this block

00:09:40.640 --> 00:09:43.440
satisfies the Criteria of whatever the hash puzzle is

00:09:43.440 --> 00:09:46.440
where does this hash puzzle come, your said..

00:09:46.440 --> 00:09:54.760
So its part of the mathematics of the the Block chain Network and it's a way of, uh,

00:09:54.940 --> 00:09:57.680
certifying that

00:09:58.160 --> 00:10:01.760
a grou-, a block is legitimate

00:10:02.420 --> 00:10:03.440
uh

00:10:03.440 --> 00:10:06.500
and that it's agreed upon key, and it's a way of

00:10:07.460 --> 00:10:12.080
managing the distributed nature of the network because anyone can

00:10:12.080 --> 00:10:17.420
take any collection of transactions very light that are sort of out in the open that not yet formed into a block and

00:10:17.540 --> 00:10:22.380
Try and create a block and there's this sort of mathematical race of a sort of compute power

00:10:22.520 --> 00:10:28.420
To solve this puzzle and the first person who solves it or the first group of people that solve it

00:10:28.420 --> 00:10:31.780
They're the ones that generate a block that goes on to the chain

00:10:32.120 --> 00:10:39.000
so it's a way of managing the fact that everybody is free to try and create blocks to add to the chain

00:10:40.280 --> 00:10:42.580
so what happens then when

00:10:43.550 --> 00:10:45.550
say two people

00:10:45.769 --> 00:10:51.849
Both happen to solve a block at the same moment at precisely the same moment now

00:10:51.850 --> 00:10:55.300
it is rare, but they happen and in those instances

00:10:55.579 --> 00:11:01.339
You can get forks in block chains. The people in the network, they see one block added

00:11:02.300 --> 00:11:04.160
go off and try and build

00:11:04.160 --> 00:11:10.360
Blocks on top of that block whereas the people that see a different block being added go off and try and continue the chain in another direction

00:11:10.820 --> 00:11:17.740
How's that yelled across the network? How is it that everyone has this single agreed upon ledger? What happens is

00:11:18.380 --> 00:11:25.060
That the longer essentially a sort of a democracy throughout the network, [but] the longest chain is the one that everyone agrees

00:11:25.060 --> 00:11:30.400
that they should take and the mathematics are such but you're unlikely to sustain

00:11:31.140 --> 00:11:33.140
Forks for a long period of time

00:11:34.020 --> 00:11:35.080
as

00:11:35.120 --> 00:11:41.060
You know people are looking all the time to update their current ledger to the longest chain

00:11:42.000 --> 00:11:48.500
you know suppose, to keep it simple, we have five people in our network and we have a forked chain. We have two

00:11:48.900 --> 00:11:52.640
imagine we [have] two competing chains it only takes

00:11:53.400 --> 00:11:57.000
three of those out of five to have seen

00:11:57.620 --> 00:12:00.040
the you know the longer of the two chains

00:12:00.920 --> 00:12:02.940
for the vets bit contention submissively

00:12:03.930 --> 00:12:05.720
Bishop by Majority vote yet

00:12:05.720 --> 00:12:06.329
were

00:12:06.329 --> 00:12:12.138
We're going to reject any chain that shorter than the longest chain the majority [of] the people on the network I've seen what happens to

00:12:12.139 --> 00:12:18.859
Any transactions that happens with the shortage only man. You know in the shorter chains. That's where you're kind of your transactions

00:12:18.860 --> 00:12:24.649
You're in that group. You're out of luck they go [into] the extent that they go back into the ether. They're not yet

00:12:25.800 --> 00:12:27.800
codified allure

00:12:27.959 --> 00:12:33.649
Incorporated into the blockchain and so not process not not legitimate all of this

00:12:34.860 --> 00:12:38.419
Means is actually a slow assistance on

00:12:39.899 --> 00:12:41.899
at the moment

00:12:43.920 --> 00:12:49.940
Not as well this will it take it happening very quickly at the moment blocks are

00:12:51.300 --> 00:12:52.440
in

00:12:52.440 --> 00:12:55.099
Again, I use bitcoin cuz you tweak the first system

00:12:55.100 --> 00:13:03.019
And you know one of the most widely adopted in the bitcoin system lock your created that [the] mathematical complexity of that hash puzzle

00:13:03.269 --> 00:13:09.078
Is on a sliding scale to reflect the compute power of the network at any given point?

00:13:10.010 --> 00:13:14.150
That blot will be created on average every 10 minutes the further back

00:13:15.150 --> 00:13:20.780
In the chain a particular blockage the less likely it is for that came to be

00:13:21.780 --> 00:13:24.229
to the plan to be a a shorter fork and

00:13:24.960 --> 00:13:27.259
Decided so that the current

00:13:28.110 --> 00:13:30.090
Waiting period is kailia

00:13:30.090 --> 00:13:32.299
before counting that the money in your wallet

00:13:32.880 --> 00:13:36.080
Let's [fix] plot to be created at a moment. That is back an hour

00:13:37.200 --> 00:13:39.060
So it's not

00:13:39.060 --> 00:13:42.109
Instantaneous, but it's not too long to wait and a

00:13:42.840 --> 00:13:45.290
bad point makes a very slim chance that your

00:13:46.260 --> 00:13:52.400
transactions going to go back into the ether and then you know to be incorporated in a block later on if you are in the

00:13:52.400 --> 00:13:59.689
Unfortunate circumstance where you were past that shorter fork of the blockchain and your transaction hadn't been accepted

00:13:59.690 --> 00:14:01.610
And it's been turned back into the ether yeah

00:14:01.610 --> 00:14:07.310
You're just wasting for another minor to come along grab that series of transactions you and try and build another block

00:14:07.980 --> 00:14:11.600
you must leave this all these insults and filming about the fact that

00:14:12.240 --> 00:14:16.160
[there] [is] [going] [to] be a pointer which lonely bitcoin. Go maybe

00:14:16.800 --> 00:14:22.040
That's correct. Yes, if some it's like me that this mining will stop at uplands

00:14:23.220 --> 00:14:25.220
No, but how you will be?

00:14:26.280 --> 00:14:28.790
Complicated with more change so at the moment

00:14:29.400 --> 00:14:37.280
Bitcoins are sort of being introduced to show you through the mining process in that you're being financially rewarded in

00:14:37.830 --> 00:14:40.429
Bitcoin, I think at this point in time

00:14:41.100 --> 00:14:44.150
the creation of a block it merits its

00:14:45.030 --> 00:14:46.260
coins

00:14:46.260 --> 00:14:48.950
in the wallet of the Minor or

00:14:49.230 --> 00:14:55.310
as is commonly the case now with people grouping computer out together the group of people that are made after sort of

00:14:56.340 --> 00:14:58.340
mining pool

00:14:58.590 --> 00:15:00.590
and

00:15:01.530 --> 00:15:05.329
At the point where all of all bitcoins have been introduced

00:15:07.050 --> 00:15:13.910
You'll no longer gain financially from mining in that regard how you will then

00:15:15.390 --> 00:15:17.840
Gain be through transaction fees

00:15:18.790 --> 00:15:20.210
and he's where

00:15:20.210 --> 00:15:21.860
people can

00:15:21.860 --> 00:15:26.349
Give up certain amount of their trank action, okay?

00:15:26.350 --> 00:15:28.040
I want to send you

00:15:28.040 --> 00:15:33.519
He will get a bitcoin I've got five in my county ahead for rather than camping for back to me

00:15:33.520 --> 00:15:37.449
Maybe I can three and a half back to me, and I k give the other half

00:15:37.970 --> 00:15:39.290
to the

00:15:39.290 --> 00:15:40.970
Minor and

00:15:40.970 --> 00:15:44.230
during that way you'll be financially complicated for

00:15:44.810 --> 00:15:52.149
The work of of mining so it's a bit like a currency exchange or PayPal little taste their feet dirty nose

00:15:52.400 --> 00:15:58.060
Is this dislike this distribution if these miners are effectively actually like the ages?

00:15:59.540 --> 00:16:01.540
affiliation well it

00:16:02.090 --> 00:16:04.090
to the extent where

00:16:04.580 --> 00:16:06.580
you know that there will be the

00:16:06.620 --> 00:16:08.560
transaction page which of them at the Moment

00:16:08.560 --> 00:16:09.860
You know should have

00:16:09.860 --> 00:16:10.670
not

00:16:10.670 --> 00:16:17.139
Taking a big part of the network because people are still getting money just from doing the computation work of curing the hash by George

00:16:17.420 --> 00:16:21.250
But as a system evolved and relies more upon

00:16:21.920 --> 00:16:27.039
Transaction fees then yes. They will book that have more of a role to play within the network

00:16:27.950 --> 00:16:30.070
But they're still likely to be

00:16:31.580 --> 00:16:33.580
Far below your standards

00:16:34.310 --> 00:16:41.709
Transaction fees for exchanging Dalek pounds from its original conception they'll only ever intended and designed to be

00:16:42.620 --> 00:16:47.469
21 million bitcoins in existence, and you can clearly like to radioactive half-life

00:16:48.290 --> 00:16:52.959
controlling the release of those we're going and how that's reflected is the

00:16:54.650 --> 00:16:58.300
level of rewards for mining so every and [kitty] every

00:17:01.130 --> 00:17:03.110
21,000

00:17:03.110 --> 00:17:04.130
bitcoins

00:17:04.130 --> 00:17:06.999
In the bin the book collection area that have produced

00:17:07.520 --> 00:17:11.320
The rewards for mining and creating a block it's aft

00:17:12.620 --> 00:17:15.940
and show you're introducing half the amount of

00:17:18.110 --> 00:17:20.890
[ecological] in network if you were previously in Chianti, so forth

00:17:21.590 --> 00:17:23.330
until eventually

00:17:23.330 --> 00:17:26.739
All 21 million bitcoins have been introduced to the network

00:17:29.800 --> 00:17:31.800
same process in reverse

00:17:31.900 --> 00:17:38.759
Using the same key and then they get hello back out the other end, and that's nice and simple it works, and it was once

00:17:40.180 --> 00:17:45.479
Sort of the only way that people did [sing], but it has a problem. Which [is] you both need to know

