WEBVTT
Kind: captions
Language: en

00:00:00.340 --> 00:00:03.190
MALE SPEAKER 1: Shanghai GDG
is a very interesting

00:00:03.190 --> 00:00:04.160
developer community.

00:00:04.160 --> 00:00:05.000
FEMALE SPEAKER 1: I'm
glad somebody

00:00:05.000 --> 00:00:06.240
has asked this question.

00:00:06.240 --> 00:00:07.353
MALE SPEAKER 2: This is where
the magic happens.

00:00:07.353 --> 00:00:08.730
FEMALE SPEAKER 2: This is
primarily a question and

00:00:08.730 --> 00:00:10.570
answer show, so if any
of you out there

00:00:10.570 --> 00:00:11.820
would like to ask questions.

00:00:16.620 --> 00:00:17.370
COLT MCANLIS: Hello.

00:00:17.370 --> 00:00:17.650
Hello.

00:00:17.650 --> 00:00:18.580
I'm live?

00:00:18.580 --> 00:00:19.640
Fantastic, awesome.

00:00:19.640 --> 00:00:21.280
They're telling me I'm live,
so hello everyone.

00:00:21.280 --> 00:00:21.680
Welcome.

00:00:21.680 --> 00:00:25.330
Thank you so much for coming
to our GDL session, talking

00:00:25.330 --> 00:00:27.560
about webify your game.

00:00:27.560 --> 00:00:29.100
I am your host for the day.

00:00:29.100 --> 00:00:31.850
My name is Colt McAnlis, and I'm
a developer advocate here

00:00:31.850 --> 00:00:34.950
working at Google, focusing
on web gaming.

00:00:34.950 --> 00:00:36.680
What I want to talk to you guys
about today, I want to

00:00:36.680 --> 00:00:39.400
take about 30 minutes of your
time, 30 to 45 minutes, and

00:00:39.400 --> 00:00:44.620
talk about how you can make
more successful games, and

00:00:44.620 --> 00:00:48.180
what you need to be doing in
this ecosystem that we have in

00:00:48.180 --> 00:00:49.780
order to prosper.

00:00:49.780 --> 00:00:51.990
I think to understand that, we
need to take a step back.

00:00:51.990 --> 00:00:54.540
We need to go all the way back
to 2009 and take a look at the

00:00:54.540 --> 00:00:57.440
gaming ecosystem at that time.

00:00:57.440 --> 00:00:59.840
In 2009, two major
things happened.

00:00:59.840 --> 00:01:03.000
Number one was the rise
of web social gaming.

00:01:03.000 --> 00:01:06.040
We saw a lot of social
distributed gaming coming

00:01:06.040 --> 00:01:08.580
through the cloud, coming
through these viral networks,

00:01:08.580 --> 00:01:11.640
being able to tap a new
generation, a new bucket of

00:01:11.640 --> 00:01:14.530
customers that typically weren't
considered gamers.

00:01:14.530 --> 00:01:16.920
These weren't people that big
gaming companies were

00:01:16.920 --> 00:01:18.790
advertising to, or even thought
that there was a

00:01:18.790 --> 00:01:20.000
market there.

00:01:20.000 --> 00:01:22.850
Number two that happened in 2009
was that we finally saw

00:01:22.850 --> 00:01:24.570
the boom of the mobile gaming.

00:01:24.570 --> 00:01:26.900
Now the mobile ecosystem had
been there for a number of

00:01:26.900 --> 00:01:30.110
years, but really didn't
come into its

00:01:30.110 --> 00:01:32.660
stride until about 2009.

00:01:32.660 --> 00:01:35.190
Now, the rise of these two
things brought something to

00:01:35.190 --> 00:01:38.140
game development the no one
had really seen before.

00:01:38.140 --> 00:01:41.660
And that was that any game
developer could go out and

00:01:41.660 --> 00:01:44.490
make a very small budget game
and get it in front of

00:01:44.490 --> 00:01:46.430
millions of people.

00:01:46.430 --> 00:01:49.720
When you have this vacuum that
was created for demand, of

00:01:49.720 --> 00:01:52.610
individuals wanting content both
in the social game space

00:01:52.610 --> 00:01:55.910
as well as the mobile space, it
gave rise to something that

00:01:55.910 --> 00:01:57.660
none of us really expected
at the time.

00:01:57.660 --> 00:02:01.370
But it really generated the
indie game developer.

00:02:01.370 --> 00:02:04.990
And this is a situation where
you have sort of the casual

00:02:04.990 --> 00:02:08.300
development space of just
making websites, or easy

00:02:08.300 --> 00:02:11.420
scripting, or people who come
to the table wanting small

00:02:11.420 --> 00:02:15.890
content, coupled with sort of
the high-precision, high

00:02:15.890 --> 00:02:18.750
frequency game development
processes that we'd seen in

00:02:18.750 --> 00:02:21.600
AAA development, as well as
skill sets that had come to

00:02:21.600 --> 00:02:24.890
the world for mobile handheld
development that we've seen

00:02:24.890 --> 00:02:26.630
from other large publishers.

00:02:26.630 --> 00:02:30.570
And this really gave rise to
this developer who basically

00:02:30.570 --> 00:02:34.570
became our fan icon for the
games industry overnight.

00:02:34.570 --> 00:02:37.960
It seemed like we were flooded
with tons and tons of stories

00:02:37.960 --> 00:02:40.210
about how individuals would
spend the weekend in the

00:02:40.210 --> 00:02:43.940
garage making a game, and
putting it up on the web or

00:02:43.940 --> 00:02:46.690
mobile, and then turning around
and making $100,000 on

00:02:46.690 --> 00:02:47.830
it in the next week.

00:02:47.830 --> 00:02:51.940
And this type of information,
when received by the general

00:02:51.940 --> 00:02:54.950
populace of game developers,
created what I like to call

00:02:54.950 --> 00:02:57.540
the modern gaming gold rush.

00:02:57.540 --> 00:03:00.070
We had tons and tons and tons
of developers leaving their

00:03:00.070 --> 00:03:03.170
established companies with
401(k)s and stock options,

00:03:03.170 --> 00:03:06.220
branching out into the
world of unknown self

00:03:06.220 --> 00:03:09.140
entrepreneurship, looking to
make the next big game.

00:03:09.140 --> 00:03:11.740
And a lot of them actually had
a very, very good success.

00:03:11.740 --> 00:03:14.720
Now over time, though, we have
to come to the conclusion that

00:03:14.720 --> 00:03:16.850
it's no longer 2009.

00:03:16.850 --> 00:03:19.320
In fact, it's 2012 now, and
a lot of the things that

00:03:19.320 --> 00:03:22.230
happened back then are
no longer the case.

00:03:22.230 --> 00:03:25.850
First off, a lot of these social
games in the social

00:03:25.850 --> 00:03:28.070
networks have kind
of taken a fall.

00:03:28.070 --> 00:03:30.610
What we've seen is that the
social networks themselves

00:03:30.610 --> 00:03:33.780
have reduced a lot of the
sharing and viral features

00:03:33.780 --> 00:03:37.190
that originally made those first
generation of games so

00:03:37.190 --> 00:03:38.800
successful and so popular.

00:03:38.800 --> 00:03:41.430
It was very easy for them to
basically flood your stream of

00:03:41.430 --> 00:03:44.660
information with, buy my pink
cow, buy my pink cow.

00:03:44.660 --> 00:03:47.350
In addition to that, because of
the early success, we saw a

00:03:47.350 --> 00:03:51.650
huge influence and a huge pool
of money come in from venture

00:03:51.650 --> 00:03:53.970
capitalists and other small
game development studios,

00:03:53.970 --> 00:03:56.270
which effectively just
flooded the space.

00:03:56.270 --> 00:03:58.790
There's tons of clones, tons of
one-offs, everyone trying

00:03:58.790 --> 00:04:02.340
to do the same thing with a
different skin to kind of keep

00:04:02.340 --> 00:04:04.370
your eyeballs and get
your attention

00:04:04.370 --> 00:04:06.910
through their clicks.

00:04:06.910 --> 00:04:09.670
On the other side of the
dime is mobile gaming.

00:04:09.670 --> 00:04:12.220
Now what mobile gaming
has done now--

00:04:12.220 --> 00:04:13.260
don't get me wrong,
mobile gaming is

00:04:13.260 --> 00:04:14.650
doing amazingly well.

00:04:14.650 --> 00:04:16.930
In fact, I think the latest
statistics still show like

00:04:16.930 --> 00:04:21.209
some 27 billion million umpteen
zillion devices that

00:04:21.209 --> 00:04:23.530
are released and activated
every day.

00:04:23.530 --> 00:04:25.260
But what we're seeing there
is that the market and the

00:04:25.260 --> 00:04:28.720
ecosystem has been driven more
by indie game developers than

00:04:28.720 --> 00:04:29.970
any other ecosystem.

00:04:29.970 --> 00:04:33.900
And the result there has been
just a flood of content, just

00:04:33.900 --> 00:04:36.970
an overwhelming number of
applications that have ended

00:04:36.970 --> 00:04:38.880
up in that ecosystem.

00:04:38.880 --> 00:04:41.680
And the result has kind of been
difficult, because large

00:04:41.680 --> 00:04:43.780
game developers, publishers who
traditionally weren't in

00:04:43.780 --> 00:04:46.960
the space before, have now
entered into the space, and

00:04:46.960 --> 00:04:50.200
are competing against these
indies for the same little 128

00:04:50.200 --> 00:04:53.590
pixels by 96 pixel screen real
estate in the promotional

00:04:53.590 --> 00:04:54.670
systems that are there.

00:04:54.670 --> 00:04:56.800
So the indies are coming to the
table with lots of great

00:04:56.800 --> 00:04:59.050
ideas and having to fight
against people with lots of

00:04:59.050 --> 00:05:00.970
marketing dollars.

00:05:00.970 --> 00:05:03.840
Which means something very
interesting, is that with the

00:05:03.840 --> 00:05:06.790
birth of everything that
happened in 2009, it's never

00:05:06.790 --> 00:05:10.450
been easier or more
cost-effective to make a game

00:05:10.450 --> 00:05:12.690
and get it in front of
millions of people.

00:05:12.690 --> 00:05:16.950
The problem though, is it's
still just as hard to market

00:05:16.950 --> 00:05:19.820
that game and actually convince
all the people in the

00:05:19.820 --> 00:05:23.010
crowd that your content
is worth looking at.

00:05:23.010 --> 00:05:25.590
So what we end up with, is you
have a whole fleet of indie

00:05:25.590 --> 00:05:28.700
developers all making content,
expecting the environment to

00:05:28.700 --> 00:05:30.750
still resemble what it looked
like in 2009, when

00:05:30.750 --> 00:05:32.170
that's not the case.

00:05:32.170 --> 00:05:33.480
So what should you be doing?

00:05:33.480 --> 00:05:35.170
If you're a game developer
today, how do you get your

00:05:35.170 --> 00:05:36.060
message out?

00:05:36.060 --> 00:05:37.330
How you embrace users?

00:05:37.330 --> 00:05:40.130
How do you market your product
properly when this may not be

00:05:40.130 --> 00:05:42.120
necessarily be your
wheelhouse?

00:05:42.120 --> 00:05:45.830
The good news is that there's
a very established ecosystem

00:05:45.830 --> 00:05:50.480
that's well-versed in
understanding how to get your

00:05:50.480 --> 00:05:53.290
signal out there with lots of
noise in the ecosystem.

00:05:53.290 --> 00:05:56.040
And that multiverse is
called the internet.

00:05:56.040 --> 00:05:58.070
So the question really for this
talk, and what I really

00:05:58.070 --> 00:06:00.730
want to address to everyone here
today is what can the web

00:06:00.730 --> 00:06:03.770
to teach us about making
more successful games?

00:06:03.770 --> 00:06:06.340
And I'm not saying put all
your games on the web.

00:06:06.340 --> 00:06:10.370
I'm talking about learning and
adapting and bringing the

00:06:10.370 --> 00:06:14.060
principles and traits of the web
into your game development

00:06:14.060 --> 00:06:16.600
process, and your game, to
make it more successful.

00:06:16.600 --> 00:06:20.190
Or better yet, what makes
clicking a link and seeing a

00:06:20.190 --> 00:06:23.880
cat such a compelling vehicle
for content that people

00:06:23.880 --> 00:06:24.820
continuously do it?

00:06:24.820 --> 00:06:28.430
That cat right there alone has
some ungodly number of

00:06:28.430 --> 00:06:30.290
hundreds of thousands
of views.

00:06:30.290 --> 00:06:32.780
That's an amazing vehicle
and an amazing process.

00:06:32.780 --> 00:06:35.690
So what we're going to talk
about today is three ways that

00:06:35.690 --> 00:06:37.590
you're going to be able to
webify your game, and

00:06:37.590 --> 00:06:42.720
hopefully, or more specifically,
have success in

00:06:42.720 --> 00:06:43.870
making better games.

00:06:43.870 --> 00:06:46.350
The first part is going to be to
ship all of your platforms.

00:06:46.350 --> 00:06:51.120
Now there's a great story that
I'm going to tell, and if this

00:06:51.120 --> 00:06:52.970
story's about you,
I apologize.

00:06:52.970 --> 00:06:55.510
I was actually at a game
developer conference a few

00:06:55.510 --> 00:06:58.025
weeks ago, and talked to a lot
of people on the floor, and

00:06:58.025 --> 00:07:01.170
was just getting a pulse on
what game developers were

00:07:01.170 --> 00:07:01.760
going through.

00:07:01.760 --> 00:07:04.430
And I was talking to this
developer who was lamenting

00:07:04.430 --> 00:07:07.520
over the state of the mobile
ecosystem, and how he wasn't

00:07:07.520 --> 00:07:09.900
making millions and millions
of dollars like he was

00:07:09.900 --> 00:07:10.880
expecting to.

00:07:10.880 --> 00:07:13.670
And so I said to him, hey that's
cool, how are you doing

00:07:13.670 --> 00:07:14.850
in the other ecosystems?

00:07:14.850 --> 00:07:18.830
How are you doing not on mobile,
or in the competing

00:07:18.830 --> 00:07:20.040
mobile ecosystem?

00:07:20.040 --> 00:07:23.050
And his response was, I'm
not in those ecosystems.

00:07:23.050 --> 00:07:24.380
I'm only in this one place.

00:07:24.380 --> 00:07:27.160
You can only find
my program here.

00:07:27.160 --> 00:07:29.010
And I kind of stopped and looked
at him, like wait,

00:07:29.010 --> 00:07:30.440
you're not anywhere else?

00:07:30.440 --> 00:07:32.770
Why are you not embracing
these other ecosystems?

00:07:32.770 --> 00:07:35.620
He says, well, I don't think
it's worth my time, and/or I

00:07:35.620 --> 00:07:38.010
don't have money to do it.

00:07:38.010 --> 00:07:41.680
This was not news to me.

00:07:41.680 --> 00:07:44.960
But I definitely think it was
one of those spots where I can

00:07:44.960 --> 00:07:46.840
honestly say, I believe
that game developers

00:07:46.840 --> 00:07:48.530
are doing it wrong.

00:07:48.530 --> 00:07:50.710
If you're a game developer and
you're making a piece of

00:07:50.710 --> 00:07:53.590
content, you should be
understanding that the success

00:07:53.590 --> 00:07:56.990
of your studio and the success
of your content is directly

00:07:56.990 --> 00:08:00.280
related to how many people can
access it and purchase it.

00:08:00.280 --> 00:08:02.290
In marketing or in sales,
you call this

00:08:02.290 --> 00:08:03.830
the top of the funnel.

00:08:03.830 --> 00:08:07.150
If you only have two million
potential customers, and you

00:08:07.150 --> 00:08:10.310
hope to get 10% out of it, is
that going to keep your studio

00:08:10.310 --> 00:08:11.590
afloat over time?

00:08:11.590 --> 00:08:13.370
This is the critical question.

00:08:13.370 --> 00:08:17.390
Should you be locking your
content only to one platform?

00:08:17.390 --> 00:08:19.490
There's a great quote by
a guy named Mark Cuban.

00:08:19.490 --> 00:08:20.890
Hopefully you know who he is.

00:08:20.890 --> 00:08:24.040
His comment is, make your
product easier to buy than

00:08:24.040 --> 00:08:27.760
your competition or you're going
to find them buying your

00:08:27.760 --> 00:08:29.660
competitor product
instead of yours.

00:08:29.660 --> 00:08:30.800
Now this is very important.

00:08:30.800 --> 00:08:33.360
So let's take a real world
application for example.

00:08:33.360 --> 00:08:34.240
Let's say you've
got a headache.

00:08:34.240 --> 00:08:35.669
I've got a really bad headache,
and I'm sitting at

00:08:35.669 --> 00:08:37.390
home, and I'm out of any
headache medicine.

00:08:37.390 --> 00:08:39.039
I get my car.

00:08:39.039 --> 00:08:41.690
I'm going to drive to the
closest, most convenient place

00:08:41.690 --> 00:08:43.059
to get headache medicine.

00:08:43.059 --> 00:08:44.640
I'm going to walk in the store,
and I'm going to pick

00:08:44.640 --> 00:08:47.220
from the things that are
available on that shelf for me

00:08:47.220 --> 00:08:49.340
to purchase.

00:08:49.340 --> 00:08:52.440
Now if your product isn't being
served or delivered

00:08:52.440 --> 00:08:55.180
there, then there's no
opportunity for me to purchase

00:08:55.180 --> 00:08:55.840
your product.

00:08:55.840 --> 00:08:56.990
Even though I may like
your product.

00:08:56.990 --> 00:08:57.850
I may know your product.

00:08:57.850 --> 00:09:00.190
I may have purchased it two
miles down the road in a

00:09:00.190 --> 00:09:01.040
different store.

00:09:01.040 --> 00:09:03.390
The fact is that right now,
I'm going to choose the

00:09:03.390 --> 00:09:06.420
easiest option to purchase
the product as possible.

00:09:06.420 --> 00:09:09.000
So what happens is, let's say
you have your content.

00:09:09.000 --> 00:09:11.230
Your content's out in the wild,
and you put it on a

00:09:11.230 --> 00:09:12.260
specific platform.

00:09:12.260 --> 00:09:15.380
Well that's fine for the users
that have already breached the

00:09:15.380 --> 00:09:17.610
barrier of entry to get
to your content.

00:09:17.610 --> 00:09:18.870
This is pretty easy for them.

00:09:18.870 --> 00:09:22.010
You just have to find a way to
connect from your platform to

00:09:22.010 --> 00:09:22.900
the people.

00:09:22.900 --> 00:09:25.460
But there's a whole group of
people over here who maybe

00:09:25.460 --> 00:09:27.910
entirely willing to
pay you oodles of

00:09:27.910 --> 00:09:29.450
money for your content.

00:09:29.450 --> 00:09:32.540
You may find your true fans
here, or your connoisseurs, or

00:09:32.540 --> 00:09:35.220
your collectors, who have no
ability to actually access

00:09:35.220 --> 00:09:37.700
your content because they may
not already be on the

00:09:37.700 --> 00:09:41.580
platform, or are unwilling to
adopt that platform due to

00:09:41.580 --> 00:09:42.210
various reasons.

00:09:42.210 --> 00:09:44.040
Maybe they don't sign up for an
email, or they don't want

00:09:44.040 --> 00:09:48.180
to buy $700 worth of hardware
in order to then pay extra

00:09:48.180 --> 00:09:49.410
money for your content.

00:09:49.410 --> 00:09:52.240
And really what you should be
doing, is because of the fact

00:09:52.240 --> 00:09:54.030
that games are digitally
distributable--

00:09:54.030 --> 00:09:56.510
we have the ability to just go
and download the content--

00:09:56.510 --> 00:09:59.490
you should really be embracing
the ability to allow the user

00:09:59.490 --> 00:10:03.162
to get the content directly
from you as the developer.

00:10:03.162 --> 00:10:07.260
Four or five years ago, this
kind of was unheard of because

00:10:07.260 --> 00:10:08.320
of the avenues online.

00:10:08.320 --> 00:10:10.700
It was really hard for a
standard developer to actually

00:10:10.700 --> 00:10:13.950
put the product online and sell
it to people directly.

00:10:13.950 --> 00:10:15.530
There was lots of DRM
issues out there.

00:10:15.530 --> 00:10:17.100
Console was kind of
the big thing.

00:10:17.100 --> 00:10:18.770
A lot of people didn't
put focus in this.

00:10:18.770 --> 00:10:21.470
But today, in 2012,
is very different.

00:10:21.470 --> 00:10:25.200
I want to talk to specifically
about a great success story.

00:10:25.200 --> 00:10:27.780
There's a game out there
called Gratuitous Space

00:10:27.780 --> 00:10:29.470
Battles, by Positech Games.

00:10:29.470 --> 00:10:30.800
And it's a fantastic game.

00:10:30.800 --> 00:10:31.820
It's beautifully done.

00:10:31.820 --> 00:10:33.010
It's all in 2D.

00:10:33.010 --> 00:10:35.600
And it was done by basically a
little indie developer that

00:10:35.600 --> 00:10:37.550
shipped it in 2009.

00:10:37.550 --> 00:10:40.630
Now the developer of this, Cliff
Harris, actually came

00:10:40.630 --> 00:10:43.110
out at a great talk called World
of Love a long time ago.

00:10:43.110 --> 00:10:46.010
And the whole point of his talk
was, hey, I'm an indie.

00:10:46.010 --> 00:10:46.950
I need money.

00:10:46.950 --> 00:10:50.210
Here's how I'm going outside of
these channels to market my

00:10:50.210 --> 00:10:52.240
game and get money from
other avenues.

00:10:52.240 --> 00:10:55.570
And one of the big things he
came to with this was that he

00:10:55.570 --> 00:10:58.920
believed dominantly that you
should be allowing users to

00:10:58.920 --> 00:11:00.270
buy from your website.

00:11:00.270 --> 00:11:02.640
And in fact, if you actually
visit the Gratuitous Battles

00:11:02.640 --> 00:11:05.300
website, you can actually
see tons of icons there.

00:11:05.300 --> 00:11:09.390
You can buy with Amazon, with
PayPal, with Google Checkout.

00:11:09.390 --> 00:11:12.240
There is a plethora of ways
for you to give him your

00:11:12.240 --> 00:11:14.910
money, if you already are
signed in, or have an

00:11:14.910 --> 00:11:18.200
established rapport, or an
account on file, and whatnot.

00:11:18.200 --> 00:11:22.800
This is really cool, because it
allows him to effectively

00:11:22.800 --> 00:11:27.450
connect with his customers
outside of the ebb and flow of

00:11:27.450 --> 00:11:29.170
digital distribution
platforms.

00:11:29.170 --> 00:11:31.920
He can actually connect at
a much deeper level.

00:11:31.920 --> 00:11:33.970
And his website goes on
further to say this.

00:11:33.970 --> 00:11:34.980
If you actually got us website,

00:11:34.980 --> 00:11:35.770
he's got a great quote.

00:11:35.770 --> 00:11:40.040
He says, you should buy from
us because of the fact that

00:11:40.040 --> 00:11:43.860
when you buy from us, I
get 91% of the money.

00:11:43.860 --> 00:11:47.710
Only 9% actually goes to the
credit card payment people.

00:11:47.710 --> 00:11:49.720
And this is really cool, because
this allows him to

00:11:49.720 --> 00:11:51.430
actually connect with
his users, say

00:11:51.430 --> 00:11:52.480
hey, I'm a real person.

00:11:52.480 --> 00:11:53.700
I have a real job.

00:11:53.700 --> 00:11:55.640
Please buy the content
directly from me.

00:11:55.640 --> 00:11:57.180
It's fantastic.

00:11:57.180 --> 00:12:00.820
He goes on further to say if
you do buy from me, I will

00:12:00.820 --> 00:12:03.780
send you pictures of cats.

00:12:03.780 --> 00:12:06.980
Now where else on the internet
are you going to be able to

00:12:06.980 --> 00:12:10.790
find the ability to connect with
users like this at that

00:12:10.790 --> 00:12:11.370
deep of a level?

00:12:11.370 --> 00:12:14.530
You can't actually connect
like this in digital

00:12:14.530 --> 00:12:15.420
distribution platforms.

00:12:15.420 --> 00:12:17.130
Specifically, when a user wants
your product, they have

00:12:17.130 --> 00:12:19.310
to go to some site that explains
your product, and

00:12:19.310 --> 00:12:21.050
accept permissions and
get it from there.

00:12:21.050 --> 00:12:23.520
No, these guys over here that
make Gratuitous Space Battles

00:12:23.520 --> 00:12:27.550
are telling you, please, buy my
product and I will give you

00:12:27.550 --> 00:12:28.810
pictures of cats.

00:12:28.810 --> 00:12:31.740
Only on the internet can you
have that sort of relationship

00:12:31.740 --> 00:12:32.250
with the user.

00:12:32.250 --> 00:12:33.810
And best off, look at that.

00:12:33.810 --> 00:12:36.740
He's saying that if you give me
your email and don't even

00:12:36.740 --> 00:12:38.270
buy the product, I'll just
send you cat pictures.

00:12:38.270 --> 00:12:39.200
This is great.

00:12:39.200 --> 00:12:42.750
He has the ability to create an
entire marketing chain and

00:12:42.750 --> 00:12:45.680
email list, a group of people
who are interested in his

00:12:45.680 --> 00:12:48.400
product, and are willing to
receive pictures of cats, that

00:12:48.400 --> 00:12:50.390
he can then market
to over time.

00:12:50.390 --> 00:12:53.370
He has the ability to have a
connection with his user

00:12:53.370 --> 00:12:55.880
because they're going direct
to his website that other

00:12:55.880 --> 00:12:58.750
developers can't get because
they're relying entirely on a

00:12:58.750 --> 00:13:00.840
silo distribution.

00:13:00.840 --> 00:13:02.910
And with this, you have to
understand that you also get

00:13:02.910 --> 00:13:04.140
other benefits.

00:13:04.140 --> 00:13:09.440
And the second thing is, from
our three set, is that with

00:13:09.440 --> 00:13:11.510
the ability to connect with
your user, you have the

00:13:11.510 --> 00:13:13.920
ability to actually talk
with them earlier.

00:13:13.920 --> 00:13:15.880
You have the ability to
get their feedback.

00:13:15.880 --> 00:13:18.180
You have the ability to make
changes and make a product

00:13:18.180 --> 00:13:20.000
that they actually care about.

00:13:20.000 --> 00:13:21.870
So anyone know this guy?

00:13:21.870 --> 00:13:23.100
This is Michelangelo.

00:13:23.100 --> 00:13:26.100
He's very famous for carving
this statue,

00:13:26.100 --> 00:13:27.290
the statue of David.

00:13:27.290 --> 00:13:30.720
Now when Michelangelo was later
in his life, he actually

00:13:30.720 --> 00:13:32.930
give a great quote to someone
that says, "Along with the

00:13:32.930 --> 00:13:36.380
milk of my nurse, I received the
knack of handling a chisel

00:13:36.380 --> 00:13:39.020
and hammer, with which
I make my figures."

00:13:39.020 --> 00:13:41.550
Now for those of you don't know
the life of Michelangelo,

00:13:41.550 --> 00:13:45.010
his family actually fell on some
hard times, and he, as a

00:13:45.010 --> 00:13:48.460
young child, actually had to
go live with his wet nurse.

00:13:48.460 --> 00:13:50.470
The wet nurse and her
family actually

00:13:50.470 --> 00:13:53.170
lived in a marble quarry.

00:13:53.170 --> 00:13:55.700
The father of the family
actually mined marble, which

00:13:55.700 --> 00:13:58.670
meant that Michelangelo, as a
young child living in this

00:13:58.670 --> 00:14:01.840
environment, had marble just
laying around his house for

00:14:01.840 --> 00:14:03.470
him to play with.

00:14:03.470 --> 00:14:07.030
During this entire time, he was
able to go outside, chisel

00:14:07.030 --> 00:14:09.300
marble, play with marble,
manipulate marble.

00:14:09.300 --> 00:14:12.840
He had a feedback loop of how
to play with marble that his

00:14:12.840 --> 00:14:14.910
competitors had never gotten.

00:14:14.910 --> 00:14:17.640
He had spend more time failing
and playing with marble by the

00:14:17.640 --> 00:14:20.370
time he was 12 than any other
sculptors had done their

00:14:20.370 --> 00:14:22.700
entire lifetime, because
how expensive

00:14:22.700 --> 00:14:24.040
marble was at that time.

00:14:24.040 --> 00:14:26.900
The point of this was that
Michelangelo had found that

00:14:26.900 --> 00:14:30.100
iteration in a medium resulted
in better results.

00:14:30.100 --> 00:14:31.920
And the fact that he could
iterate better than his

00:14:31.920 --> 00:14:34.470
competitors resulted
in his success.

00:14:34.470 --> 00:14:37.990
And the statue David is a
perfect example of that.

00:14:37.990 --> 00:14:41.850
AAA game development does
not necessarily follow

00:14:41.850 --> 00:14:43.170
this path very well.

00:14:43.170 --> 00:14:46.240
Now what you see with a big
budget title typically in a

00:14:46.240 --> 00:14:48.980
console development cycle right
now, is that you end up

00:14:48.980 --> 00:14:50.760
with an early prototype phase.

00:14:50.760 --> 00:14:52.410
And then you'll probably go
through about two or three

00:14:52.410 --> 00:14:54.230
years worth of development
cycle.

00:14:54.230 --> 00:14:57.610
And only then, after the
internal development cycle for

00:14:57.610 --> 00:15:00.190
three years, will you actually
go into public beta.

00:15:00.190 --> 00:15:01.870
Now take a look at this.

00:15:01.870 --> 00:15:04.910
The only time that the public,
the consumers, the people that

00:15:04.910 --> 00:15:06.270
are actually going to be buying
the product, have

00:15:06.270 --> 00:15:09.020
actually seen the product and
played with the product, is

00:15:09.020 --> 00:15:10.570
during this beta phase.

00:15:10.570 --> 00:15:12.330
This means that all of the
feedback that they've gotten

00:15:12.330 --> 00:15:15.440
on their content has
been internal only.

00:15:15.440 --> 00:15:18.580
With that in mind, it kind of
makes a lot of sense that most

00:15:18.580 --> 00:15:21.740
console games always ship
their slip date.

00:15:21.740 --> 00:15:23.900
Once you go into beta, you get
all this feedback from people

00:15:23.900 --> 00:15:26.560
saying these icons are wrong, or
I don't like this, or this

00:15:26.560 --> 00:15:28.955
thing is overpowered, or they
stress the system in new ways,

00:15:28.955 --> 00:15:31.460
and then the shipping gets
slipped again and again, or as

00:15:31.460 --> 00:15:33.190
long as they financially
can hand out.

00:15:33.190 --> 00:15:35.250
And then finally the product
hits the shelves.

00:15:35.250 --> 00:15:37.040
Now what this means is, if you
look at this development

00:15:37.040 --> 00:15:40.010
cycle, you end up with a four
year development span costing

00:15:40.010 --> 00:15:42.680
$40 million, where the user
is only brought in the

00:15:42.680 --> 00:15:46.640
conversation the last
25% or 30%.

00:15:46.640 --> 00:15:50.590
Those are the people actually
buying your product.

00:15:50.590 --> 00:15:52.780
And yet you don't actually have
a conversation with them

00:15:52.780 --> 00:15:55.480
about the product until much
later in the cycle.

00:15:55.480 --> 00:15:57.420
What you actually see is that
they're going through this.

00:15:57.420 --> 00:15:59.580
Internally, they say, is this
product awesome yet?

00:15:59.580 --> 00:16:01.000
If not, let's change
a bunch of stuff

00:16:01.000 --> 00:16:02.050
and see if it's again.

00:16:02.050 --> 00:16:04.800
And then oops, we ran out
of time, let's ship it.

00:16:04.800 --> 00:16:07.380
The problem here again is that
there should be a bubble in

00:16:07.380 --> 00:16:10.830
there where it says, is this
awesome yet, consumer?

00:16:10.830 --> 00:16:14.490
And the consumer says, yes or
no, here's my feedback.

00:16:14.490 --> 00:16:18.410
Minecraft is a perfect example
of where this went right.

00:16:18.410 --> 00:16:20.420
For those of you guys who don't
know the story of how

00:16:20.420 --> 00:16:24.030
Minecraft got off the ground,
in 2009, Minecraft actually

00:16:24.030 --> 00:16:25.820
went public with an alpha.

00:16:25.820 --> 00:16:29.450
And with that, you could
actually buy the alpha and get

00:16:29.450 --> 00:16:30.740
the full version later.

00:16:30.740 --> 00:16:32.210
Effectively, what the developers
were doing is, they

00:16:32.210 --> 00:16:33.440
still had day jobs.

00:16:33.440 --> 00:16:35.270
They shipped Minecraft
on the side.

00:16:35.270 --> 00:16:38.703
And they said, hey, if you're
willing to pay me now, $20,

00:16:38.703 --> 00:16:42.000
$25, something like that, then
when the full version comes

00:16:42.000 --> 00:16:44.570
out later, you'll get the full
version plus all the upgrades

00:16:44.570 --> 00:16:46.190
and all the other cool stuff.

00:16:46.190 --> 00:16:49.350
What this allowed them to do
was actually find a pool of

00:16:49.350 --> 00:16:52.360
true fans, people actually cared
about the product, early

00:16:52.360 --> 00:16:56.080
this development cycle, that are
willing to pay for it and

00:16:56.080 --> 00:16:58.970
then receive feedback
from it over time.

00:16:58.970 --> 00:17:00.480
The result of this was
actually amazing.

00:17:00.480 --> 00:17:02.870
In 2010, they actually
shipped their beta.

00:17:02.870 --> 00:17:06.859
And, funny story, the actual
company was founded in 2010,

00:17:06.859 --> 00:17:11.329
when Paypal actually suspended
their account from the alpha

00:17:11.329 --> 00:17:14.190
purchases, when it ended up with
like $700,000 in there.

00:17:14.190 --> 00:17:17.630
PayPal actually thought it was
a hack, some piracy was going

00:17:17.630 --> 00:17:18.690
on, something bad
was happening.

00:17:18.690 --> 00:17:22.400
And they had to found their
company in order to properly

00:17:22.400 --> 00:17:23.869
receive these funds
and tunnel them

00:17:23.869 --> 00:17:25.390
into development properly.

00:17:25.390 --> 00:17:29.320
The cool thing about this is
that users were paying the

00:17:29.320 --> 00:17:34.030
company to provide feedback
about their product.

00:17:34.030 --> 00:17:39.330
In any other medium that you
want external feedback, you

00:17:39.330 --> 00:17:41.980
usually have to go
pay someone else.

00:17:41.980 --> 00:17:44.340
If you want a consultant to come
in and tell you how your

00:17:44.340 --> 00:17:47.460
blinds should be shaped, or you
want external writers to

00:17:47.460 --> 00:17:51.880
comment on your new manifest
portfolio, whatever it is, you

00:17:51.880 --> 00:17:53.300
usually have to go find
these people and pay

00:17:53.300 --> 00:17:54.500
them for their opinion.

00:17:54.500 --> 00:17:58.320
Game developers were paying
Mojang to give

00:17:58.320 --> 00:17:59.350
their opinion to them.

00:17:59.350 --> 00:18:02.310
This is a completely different
ecosystem that gamers are

00:18:02.310 --> 00:18:03.560
willing to justify.

00:18:03.560 --> 00:18:05.430
I'm willing to pay you
and tell you how to

00:18:05.430 --> 00:18:06.380
make the game better.

00:18:06.380 --> 00:18:08.300
That's fantastic, and the
results show themselves.

00:18:08.300 --> 00:18:11.610
In 2011, the PC and mobile game
actually shipped, the

00:18:11.610 --> 00:18:12.490
stable versions.

00:18:12.490 --> 00:18:14.745
And they actually had so many
people that loved the game and

00:18:14.745 --> 00:18:17.060
did so many things, they had
the MineCon convention.

00:18:17.060 --> 00:18:20.250
How many games do you know
actually start from nothing,

00:18:20.250 --> 00:18:22.310
build a community, and actually
have a convention

00:18:22.310 --> 00:18:24.020
that ships a couple
of years later?

00:18:24.020 --> 00:18:26.160
Today, it's reported that
Minecraft has over 9 million

00:18:26.160 --> 00:18:28.230
sales and has lots of
SKUs cross-platform.

00:18:28.230 --> 00:18:31.410
This is a perfect example of
shipping early, getting

00:18:31.410 --> 00:18:33.270
feedback from users,
and then creating a

00:18:33.270 --> 00:18:35.900
success story from it.

00:18:35.900 --> 00:18:39.490
Little known fact in the mobile
ecosystem, Angry Birds

00:18:39.490 --> 00:18:41.970
was actually the 30th
game that Rovio

00:18:41.970 --> 00:18:43.390
shipped in three years.

00:18:43.390 --> 00:18:46.030
That's actually a great
statistic, 30

00:18:46.030 --> 00:18:48.640
games in three years.

00:18:48.640 --> 00:18:52.820
What Rovio was able to do, was
able to ship games quickly,

00:18:52.820 --> 00:18:56.730
receive feedback about them
as a unit, as a product--

00:18:56.730 --> 00:18:59.640
like, they didn't have the time
to do a full cycle and

00:18:59.640 --> 00:19:02.760
say, how do you want this game
to change, and do that for

00:19:02.760 --> 00:19:04.460
three years with their
customers.

00:19:04.460 --> 00:19:06.660
They would basically make a
product, get information, ship

00:19:06.660 --> 00:19:09.250
it quickly, receive as much
feedback as they can from

00:19:09.250 --> 00:19:11.890
that, incorporate that into the
next product that allowed

00:19:11.890 --> 00:19:14.710
them to be featured once again
in the mobile ecosystem.

00:19:14.710 --> 00:19:16.610
Because that's how it works in
mobile right now, is it's

00:19:16.610 --> 00:19:19.560
easier to get a new piece of
content featured than it is an

00:19:19.560 --> 00:19:21.290
existing piece of content.

00:19:21.290 --> 00:19:23.430
So for them to stay on the top
the charts, they had to keep

00:19:23.430 --> 00:19:24.650
pushing out new products.

00:19:24.650 --> 00:19:26.730
And Angry Birds was the
result of that.

00:19:26.730 --> 00:19:29.850
They were able to get feedback
and incorporate it quickly.

00:19:29.850 --> 00:19:32.400
A more recent example, a game
called Temple Run, was

00:19:32.400 --> 00:19:34.970
actually the 11th game
in four years.

00:19:34.970 --> 00:19:36.640
You should be seeing
a trend here.

00:19:36.640 --> 00:19:38.710
Game developers who are shipping
more games in the

00:19:38.710 --> 00:19:41.320
mobile space are getting better
feedback cycle with

00:19:41.320 --> 00:19:42.290
their users.

00:19:42.290 --> 00:19:45.170
And then game developers in
the PC space, in the web

00:19:45.170 --> 00:19:47.810
space, are able to have better
connectivity with their users

00:19:47.810 --> 00:19:50.860
and get more feedback sooner,
allowing them to make a better

00:19:50.860 --> 00:19:54.060
product over time.

00:19:54.060 --> 00:19:56.270
And the cool thing is, that
once you have the user's

00:19:56.270 --> 00:19:58.590
attention, once you're able to
distribute to them from all

00:19:58.590 --> 00:20:02.500
the platforms, once you're able
to actually get them in a

00:20:02.500 --> 00:20:04.900
dialogue from you, you'll find
it one of the most important

00:20:04.900 --> 00:20:07.000
things that you can do
is get them into

00:20:07.000 --> 00:20:08.080
your product quickly.

00:20:08.080 --> 00:20:09.780
And this is probably the most
technical discussion we're

00:20:09.780 --> 00:20:11.770
going to have today about
webify your game.

00:20:11.770 --> 00:20:15.750
And it's the concept
of instant on.

00:20:15.750 --> 00:20:18.110
If you read the papers about the
internet, you should know

00:20:18.110 --> 00:20:22.290
that the internet is ruled by
a law of three seconds.

00:20:22.290 --> 00:20:25.080
And that is that a user will
abandon a website if it isn't

00:20:25.080 --> 00:20:26.760
loaded in three seconds.

00:20:26.760 --> 00:20:29.370
A perfect example of this, a
long time ago, in a galaxy

00:20:29.370 --> 00:20:32.160
far, far away, there was a
company called Google who had

00:20:32.160 --> 00:20:33.490
a very amazing search engine.

00:20:33.490 --> 00:20:36.340
And they actually asked their
users, would you like to see

00:20:36.340 --> 00:20:38.140
more results per page?

00:20:38.140 --> 00:20:39.890
Would you like 30 results
or 10 results?

00:20:39.890 --> 00:20:42.540
Overwhelmingly, of course, the
users of the search engine

00:20:42.540 --> 00:20:44.520
said, please give us 30.

00:20:44.520 --> 00:20:46.520
When they implemented it and got
all the engineering done,

00:20:46.520 --> 00:20:49.400
what they found was that their
click-through traffic actually

00:20:49.400 --> 00:20:51.490
dropped about 20%.

00:20:51.490 --> 00:20:52.690
And they didn't understand
why.

00:20:52.690 --> 00:20:54.790
They implemented what the users
want, but yet they were

00:20:54.790 --> 00:20:55.850
losing traffic.

00:20:55.850 --> 00:20:58.870
When they went back and looked
at everything, they noticed

00:20:58.870 --> 00:21:04.800
that the extra results caused
a half of a second delay in

00:21:04.800 --> 00:21:06.700
the site loading.

00:21:06.700 --> 00:21:11.560
Half a second of delay was
resulting in 20% of the users

00:21:11.560 --> 00:21:13.520
just abandoning the website.

00:21:13.520 --> 00:21:16.400
The internet is a consumer's
market.

00:21:16.400 --> 00:21:18.980
They understand that
data is everywhere.

00:21:18.980 --> 00:21:22.240
And if I think that your site is
slow, and I know that I can

00:21:22.240 --> 00:21:23.540
get that data somewhere
else, I'm just going

00:21:23.540 --> 00:21:24.150
to exit your site.

00:21:24.150 --> 00:21:26.340
Because I feel I can find it
faster than waiting for your

00:21:26.340 --> 00:21:27.410
slow site to load.

00:21:27.410 --> 00:21:28.730
This is the rule of
the internet.

00:21:28.730 --> 00:21:29.320
It's the law.

00:21:29.320 --> 00:21:32.370
And there's tons of papers that
have shown personalities

00:21:32.370 --> 00:21:34.800
and studies that reflect
that yes, three

00:21:34.800 --> 00:21:37.680
seconds is the limit.

00:21:37.680 --> 00:21:40.100
Now there's a great quote that
shows that this actually

00:21:40.100 --> 00:21:41.940
affects game developers
as well.

00:21:41.940 --> 00:21:44.300
There's a great quote from
Rich Helleman, who gave a

00:21:44.300 --> 00:21:47.230
fantastic talk at New
Game in 2011.

00:21:47.230 --> 00:21:50.430
He says, "Increasingly, the
capacity we are arguing for

00:21:50.430 --> 00:21:55.230
with our customers is not their
money, but their time."

00:21:55.230 --> 00:21:58.450
Rich understands that the
important thing to do now, in

00:21:58.450 --> 00:22:01.470
the ecosystem that we're in now
with gaming, is get the

00:22:01.470 --> 00:22:03.430
user's time.

00:22:03.430 --> 00:22:07.340
Because the time will
result in the money.

00:22:07.340 --> 00:22:09.390
A long time ago with console,
the most important thing to do

00:22:09.390 --> 00:22:10.510
was get the money.

00:22:10.510 --> 00:22:12.110
Because then the time
came afterwards.

00:22:12.110 --> 00:22:15.080
Once I had your purchase, you
would then spend 30 hours

00:22:15.080 --> 00:22:16.070
playing my products.

00:22:16.070 --> 00:22:18.020
But that was because the
ecosystem wasn't as saturated

00:22:18.020 --> 00:22:19.500
as it is today.

00:22:19.500 --> 00:22:22.120
Now, game developers are
fighting for nuances of

00:22:22.120 --> 00:22:25.000
attention that the user can
spend with their product.

00:22:25.000 --> 00:22:27.260
And if they can get your
attention and make you a user,

00:22:27.260 --> 00:22:29.610
they know they can get you make
you become a customer.

00:22:29.610 --> 00:22:34.670
So now game developers have to
respect the user's time.

00:22:34.670 --> 00:22:36.240
This is a great example.

00:22:36.240 --> 00:22:36.850
Anyone know this game?

00:22:36.850 --> 00:22:38.240
This is Mass Effect 2.

00:22:38.240 --> 00:22:40.770
Probably one of the largest
criticisms for this game was

00:22:40.770 --> 00:22:43.390
actually their elevator
loading screens.

00:22:43.390 --> 00:22:46.040
This actually had a huge
uproar on the internet.

00:22:46.040 --> 00:22:47.530
Lots of people were very
critical of this.

00:22:47.530 --> 00:22:50.270
In fact, one of the most common
forum posts you could

00:22:50.270 --> 00:22:55.020
find is, OMG, WTF, what about
these loading screens?

00:22:55.020 --> 00:22:57.150
I could go make a cheeseburger
and come back before the next

00:22:57.150 --> 00:22:57.980
level is loaded.

00:22:57.980 --> 00:23:01.410
And what you saw here was a very
negative uproar to long

00:23:01.410 --> 00:23:02.300
load times.

00:23:02.300 --> 00:23:04.530
Now the internet has seen the
same thing in practice.

00:23:04.530 --> 00:23:07.220
There's actually been research
that finds that users who

00:23:07.220 --> 00:23:12.470
experience slow load times for
a website are more likely to

00:23:12.470 --> 00:23:15.710
complain to their friends
about the experience.

00:23:15.710 --> 00:23:19.810
Which means that you've not
only lost a current user.

00:23:19.810 --> 00:23:22.830
You've actually lost another
potential user who may view

00:23:22.830 --> 00:23:25.080
your site as not worth
their time.

00:23:25.080 --> 00:23:27.800
In fact, the uproar for Mass
Effect was so large, a very

00:23:27.800 --> 00:23:32.200
popular web game comic blog--

00:23:32.200 --> 00:23:33.030
blogish--

00:23:33.030 --> 00:23:34.550
I don't even know how they even

00:23:34.550 --> 00:23:35.520
define themselves anymore.

00:23:35.520 --> 00:23:38.380
Anyhow, Penny Arcade did a
comic on this, where they

00:23:38.380 --> 00:23:42.170
basically said, this alien
civilization has died from the

00:23:42.170 --> 00:23:44.020
ecosystem and I don't
know what happened,

00:23:44.020 --> 00:23:45.010
but I have an idea.

00:23:45.010 --> 00:23:47.560
It's probably because they all
died in the elevators waiting

00:23:47.560 --> 00:23:48.760
to go from floor to floor.

00:23:48.760 --> 00:23:50.650
And basically what happened is,
for all the people who had

00:23:50.650 --> 00:23:53.360
never played Mass Effect 2,
and this was the only

00:23:53.360 --> 00:23:57.770
experience they got was Penny
Arcade saying, whoa, the load

00:23:57.770 --> 00:24:00.070
times are too long, there was
a whole pool of customers

00:24:00.070 --> 00:24:02.530
who've now been negatively
influenced simply

00:24:02.530 --> 00:24:04.682
because of load time.

00:24:04.682 --> 00:24:07.330
And it's important to understand
that load time is a

00:24:07.330 --> 00:24:09.270
technical problem.

00:24:09.270 --> 00:24:10.590
It's not necessarily
a design problem.

00:24:10.590 --> 00:24:13.150
Design can hide the technical
limitations.

00:24:13.150 --> 00:24:15.240
But in reality, what you're
doing is you're fighting

00:24:15.240 --> 00:24:16.190
through multiple stages here.

00:24:16.190 --> 00:24:19.210
First off, you've got some
medium, be it compact disc or

00:24:19.210 --> 00:24:21.430
actually hard drive, that needs
to get transferred into

00:24:21.430 --> 00:24:24.390
memory, and that's typically
limited by the transfer rates

00:24:24.390 --> 00:24:25.850
of the medium to memory.

00:24:25.850 --> 00:24:27.820
And then from the memory, you've
got to get it back over

00:24:27.820 --> 00:24:30.300
the GPU, if you're doing any
sort of rendering, or even

00:24:30.300 --> 00:24:33.110
just transform the data into
some form that your system is

00:24:33.110 --> 00:24:33.760
going to use.

00:24:33.760 --> 00:24:37.190
So loading up a binary trees, or
spatial hierarchies, or A*

00:24:37.190 --> 00:24:38.020
path finding.

00:24:38.020 --> 00:24:39.890
All that data has got
to be processed.

00:24:39.890 --> 00:24:42.180
And so for you to have something
like instant load

00:24:42.180 --> 00:24:43.870
times, to get your product
to actually load in three

00:24:43.870 --> 00:24:47.370
seconds, you have to optimize
each one of these scenarios

00:24:47.370 --> 00:24:49.060
independently.

00:24:49.060 --> 00:24:50.890
Another great example is a
game called Half-Life.

00:24:50.890 --> 00:24:53.710
This was probably one of the
first that came to the table

00:24:53.710 --> 00:24:55.140
with a unique solution.

00:24:55.140 --> 00:24:57.110
So for those of you who've
played Half-Life and the

00:24:57.110 --> 00:24:58.190
series sort of following--

00:24:58.190 --> 00:25:00.280
Half-Life 2, and Left 4 Dead,
and all those other ones--

00:25:00.280 --> 00:25:02.700
you'll notice that at the end
of a level, you'll typically

00:25:02.700 --> 00:25:06.920
have about 400 foot worth of
additional space for you just

00:25:06.920 --> 00:25:07.620
kind of run.

00:25:07.620 --> 00:25:09.460
There's no monsters there, you
don't know what's going on.

00:25:09.460 --> 00:25:10.720
You're just jumping over
some creates and

00:25:10.720 --> 00:25:11.920
running up some ladders.

00:25:11.920 --> 00:25:13.730
But then all of the sudden
you'll see this screen, which

00:25:13.730 --> 00:25:15.240
is that little loading blip.

00:25:15.240 --> 00:25:18.090
And that loading blip will come
on and then disappear.

00:25:18.090 --> 00:25:21.160
What the artists and designers
and programmers at Valve were

00:25:21.160 --> 00:25:23.800
able to do was actually add
extra geometry into the

00:25:23.800 --> 00:25:24.600
environment.

00:25:24.600 --> 00:25:26.300
And when you would hit a
specific trigger point, they

00:25:26.300 --> 00:25:29.570
would be able to start loading
in the next level of content

00:25:29.570 --> 00:25:32.280
while you're running through
these extra 400 foot.

00:25:32.280 --> 00:25:34.680
The result was that you would
only see that loading blip for

00:25:34.680 --> 00:25:36.570
a very small amount of time.

00:25:36.570 --> 00:25:38.830
Rather than having to go through
a full level load,

00:25:38.830 --> 00:25:40.880
they were able to predict what
you're going to do and how

00:25:40.880 --> 00:25:42.990
you're going to do it, and
start the stream earlier.

00:25:42.990 --> 00:25:46.350
Because they knew that the
medium of getting from disk to

00:25:46.350 --> 00:25:48.240
memory was the slow part,
and that they could

00:25:48.240 --> 00:25:50.580
hide it with design.

00:25:50.580 --> 00:25:53.390
So the question we have overall
in instant on is can

00:25:53.390 --> 00:25:55.950
your load times be under
three seconds?

00:25:55.950 --> 00:26:00.050
Can the gaming community as a
whole adopt this feature of

00:26:00.050 --> 00:26:00.760
the internet?

00:26:00.760 --> 00:26:03.290
Can your game be instant on?

00:26:03.290 --> 00:26:06.750
And what I'm not talking about
here is instant on only from

00:26:06.750 --> 00:26:07.790
disk to memory.

00:26:07.790 --> 00:26:10.410
So if you're actually doing
digital distribution, and the

00:26:10.410 --> 00:26:12.930
user goes in purchases your
content, they're going to have

00:26:12.930 --> 00:26:14.930
to wait around for your content
to be downloaded.

00:26:14.930 --> 00:26:17.660
I'm not talking about instant
on after this point.

00:26:17.660 --> 00:26:20.340
I'm talking about instant on
from the user saying, buy,

00:26:20.340 --> 00:26:23.440
thank you, or clicking a link,
or getting a referral, or

00:26:23.440 --> 00:26:26.140
having the ability to access
your content for the very

00:26:26.140 --> 00:26:29.700
first time, all the way
to actually being

00:26:29.700 --> 00:26:30.260
able to play it.

00:26:30.260 --> 00:26:32.620
Can they do that in
three seconds?

00:26:32.620 --> 00:26:36.190
Now if you're not getting your
product to your user through a

00:26:36.190 --> 00:26:39.835
digital distribution platform,
then really, the avenue that

00:26:39.835 --> 00:26:42.900
you have to look at is how you
can get content to your users

00:26:42.900 --> 00:26:44.940
through the internet.

00:26:44.940 --> 00:26:48.970
You'll notice each one of these
arrows has already a ton

00:26:48.970 --> 00:26:50.990
of literature out there on how
you can optimize that, how you

00:26:50.990 --> 00:26:53.040
can make load times from disk
to memory faster, and memory

00:26:53.040 --> 00:26:54.940
to GPU, et cetera, et
cetera, et cetera.

00:26:54.940 --> 00:26:57.740
But what really hasn't been
talked about, because it's not

00:26:57.740 --> 00:27:00.450
been really conquered yet,
is how you can increase--

00:27:00.450 --> 00:27:02.540
or decrease load times from
internet to memory.

00:27:02.540 --> 00:27:04.270
So let's talk about
that for a second.

00:27:04.270 --> 00:27:07.180
So let's say you have a user who
sits in the United States

00:27:07.180 --> 00:27:08.630
and he wants a piece
of content.

00:27:08.630 --> 00:27:11.970
Well, that content will be on
some server, sitting in some

00:27:11.970 --> 00:27:14.580
basement of some dude's house,
and that content can be

00:27:14.580 --> 00:27:16.690
shipped to them over
the inter-tubes.

00:27:16.690 --> 00:27:20.180
The issue is, once the user ends
up far, far away, that

00:27:20.180 --> 00:27:22.580
the ability to get that content
quickly diminishes.

00:27:22.580 --> 00:27:24.210
And this is because
of two factors,

00:27:24.210 --> 00:27:25.850
bandwidth and latency.

00:27:25.850 --> 00:27:28.130
Now, bandwidth is typically
what you pay for when you

00:27:28.130 --> 00:27:29.940
actually go to your internet
service provider.

00:27:29.940 --> 00:27:32.120
They usually have some sort of
package system, and they limit

00:27:32.120 --> 00:27:34.150
it based upon throttling
all these other things.

00:27:34.150 --> 00:27:37.120
But what they're talking about
is buying bandwidth.

00:27:37.120 --> 00:27:39.620
The second problem, latency,
you actually can't

00:27:39.620 --> 00:27:40.950
control that much.

00:27:40.950 --> 00:27:44.790
Latency, or the speed of
latency, is actually limited

00:27:44.790 --> 00:27:47.870
by physics, which is actually
limited by how fast light can

00:27:47.870 --> 00:27:49.270
travel over time--

00:27:49.270 --> 00:27:50.330
or over distance.

00:27:50.330 --> 00:27:55.530
Which means that even though
you are buying 100 million

00:27:55.530 --> 00:27:58.390
speed connection in America and
they have hundred million

00:27:58.390 --> 00:28:01.510
speed connection in Australia,
that data this is going to hit

00:28:01.510 --> 00:28:02.970
a limit on how fast you
can get to those

00:28:02.970 --> 00:28:04.940
guys across the globe.

00:28:04.940 --> 00:28:08.070
How this is fixed is by
duplicating that data.

00:28:08.070 --> 00:28:10.240
So rather than allowing that
data to sit only one server,

00:28:10.240 --> 00:28:12.770
you allow it to be duplicated
in Australia so that it can

00:28:12.770 --> 00:28:15.020
actually get to that
user much quicker.

00:28:15.020 --> 00:28:17.990
Now this concept is actually
duplicated in a lot of places.

00:28:17.990 --> 00:28:20.760
And you can actually see that by
duplicating the data across

00:28:20.760 --> 00:28:23.510
many data centers, you can get
it to users all over the world

00:28:23.510 --> 00:28:24.210
very quickly.

00:28:24.210 --> 00:28:26.720
Now this is at its
core a content

00:28:26.720 --> 00:28:28.900
delivery network, or CDN.

00:28:28.900 --> 00:28:31.000
This is sort of the backbone of
the internet, the ability

00:28:31.000 --> 00:28:32.910
to distribute content to people
quickly because it's

00:28:32.910 --> 00:28:34.340
duplicated in lots of places.

00:28:34.340 --> 00:28:36.410
So as a developer, if you want
to get your content, and

00:28:36.410 --> 00:28:39.300
you're selling it worldwide, if
you're selling your game,

00:28:39.300 --> 00:28:41.270
you need to make sure that
you're using CDNs to

00:28:41.270 --> 00:28:42.950
distribute your content.

00:28:42.950 --> 00:28:45.010
Now there's some interesting
properties with this.

00:28:45.010 --> 00:28:46.060
Let's talk about load
times again.

00:28:46.060 --> 00:28:48.090
So let's say the you're a AAA
game, and you have one

00:28:48.090 --> 00:28:49.660
gigabyte of content.

00:28:49.660 --> 00:28:51.630
That's actually going to take
about seven minutes to

00:28:51.630 --> 00:28:54.530
transfer on a 20 megabits
per second connection.

00:28:54.530 --> 00:28:56.720
So if you've got one gig, you
want to get it to a user,

00:28:56.720 --> 00:28:58.240
that's seven minutes of their
time that they're going to

00:28:58.240 --> 00:28:59.760
have to sit around and wait.

00:28:59.760 --> 00:29:02.750
So if you assume, just naively,
that that one

00:29:02.750 --> 00:29:05.040
gigabyte is uncompressed, then
your first step to say is,

00:29:05.040 --> 00:29:07.290
hey, well, what if we just
simply compressed this data?

00:29:07.290 --> 00:29:09.460
How fast we get the user?

00:29:09.460 --> 00:29:11.280
Gzip is a very standard
compression.

00:29:11.280 --> 00:29:13.990
It's supported by most web
servers as well as web

00:29:13.990 --> 00:29:16.395
browsers, and the zlib
library, and

00:29:16.395 --> 00:29:17.220
lots of other things.

00:29:17.220 --> 00:29:19.880
That will actually take a given
set of one gigabyte

00:29:19.880 --> 00:29:23.190
content and get down to
about 330 megabytes.

00:29:23.190 --> 00:29:26.370
That 330 megs will take about
two minutes and 12 seconds to

00:29:26.370 --> 00:29:28.350
transfer and decompress.

00:29:28.350 --> 00:29:30.720
Because we have to take into
account the time to actually

00:29:30.720 --> 00:29:32.570
decompress the data.

00:29:32.570 --> 00:29:34.050
Now, that's fine.

00:29:34.050 --> 00:29:35.370
That's great, but can
we get lower?

00:29:35.370 --> 00:29:37.930
If you look at the internet,
there's actually some new

00:29:37.930 --> 00:29:40.550
cutting edge compression
algorithms out there.

00:29:40.550 --> 00:29:43.720
One of them, probably my
favorite, is one called LZHAM.

00:29:43.720 --> 00:29:46.170
That will actually take that
same one gig of data and get

00:29:46.170 --> 00:29:48.740
it down to about 204 megabytes,
which reduces your

00:29:48.740 --> 00:29:50.825
transfer time and decompression
time to one

00:29:50.825 --> 00:29:52.530
minute and 18 seconds.

00:29:52.530 --> 00:29:53.270
Now this is good, right?

00:29:53.270 --> 00:29:55.160
We're starting to see that as
your data gets compressed,

00:29:55.160 --> 00:29:57.310
more can come to the
user faster.

00:29:57.310 --> 00:30:00.030
Let's take a look at another
thing, using CDNs.

00:30:00.030 --> 00:30:02.950
There's an implicit cost
with using a CDN.

00:30:02.950 --> 00:30:05.300
So let's say that you've
got some super

00:30:05.300 --> 00:30:06.410
successful web game.

00:30:06.410 --> 00:30:09.570
And let's say at your best,
you're doing about 3.4 million

00:30:09.570 --> 00:30:11.870
unique users a day.

00:30:11.870 --> 00:30:13.870
These are people that have
never seen your content

00:30:13.870 --> 00:30:16.800
before, coming to your content
for the very first time, and

00:30:16.800 --> 00:30:17.880
receiving your content.

00:30:17.880 --> 00:30:20.440
Now obviously, this is a worst
case scenario, because if you

00:30:20.440 --> 00:30:24.260
get 3.4 million users every day
coming to your game, you

00:30:24.260 --> 00:30:26.720
probably don't care about
transfer times.

00:30:26.720 --> 00:30:27.950
So that's a separate
discussion.

00:30:27.950 --> 00:30:30.100
So if you're actually
transferring 3.4 million users

00:30:30.100 --> 00:30:33.500
a day, one gigabyte of data is
actually going to cost you

00:30:33.500 --> 00:30:37.610
about $9,600 to get that
data to those users

00:30:37.610 --> 00:30:39.120
every single day.

00:30:39.120 --> 00:30:41.620
With compression with gzip,
that actually cuts down to

00:30:41.620 --> 00:30:43.360
about $2,900.

00:30:43.360 --> 00:30:47.040
So you see the number of bits
crossing the wire reduced,

00:30:47.040 --> 00:30:49.840
reduce the cost involved with
distributing that content.

00:30:49.840 --> 00:30:52.280
And of course, LZHAM then cuts
it down even further, getting

00:30:52.280 --> 00:30:54.940
you to about $1,900 a day.

00:30:54.940 --> 00:30:58.120
So that's actually still a lot
of data and a lot of cost.

00:30:58.120 --> 00:31:00.440
If you have 3.4 million users,
you have to actually take a

00:31:00.440 --> 00:31:05.420
look and say, do we need to ship
one gigabyte to a user

00:31:05.420 --> 00:31:08.020
before they're allowed to see
a pixel on the screen?

00:31:08.020 --> 00:31:09.710
I'm sure if you look at your
assets and you look at your

00:31:09.710 --> 00:31:11.820
design, you'll find that that's
not actually the case.

00:31:11.820 --> 00:31:14.490
You could probably actually get
a much smaller subset to

00:31:14.490 --> 00:31:16.800
your users, allow them to see
the content quickly, and then

00:31:16.800 --> 00:31:18.630
stream in the rest
of background.

00:31:18.630 --> 00:31:20.910
Which is the concept of, you
should only be sending to

00:31:20.910 --> 00:31:22.690
users what they need.

00:31:22.690 --> 00:31:24.850
What's the minimal amount of
data you can send to them?

00:31:24.850 --> 00:31:26.760
Especially if you're
paying for it.

00:31:26.760 --> 00:31:29.050
If you have a user who's not
paying for your content--

00:31:29.050 --> 00:31:31.970
let's say you have a freemium
app, or there's a trial

00:31:31.970 --> 00:31:33.350
application or something
like that.

00:31:33.350 --> 00:31:36.760
These users are connecting to
your servers, downloading your

00:31:36.760 --> 00:31:39.200
data, and you're paying for that
transfer for someone who

00:31:39.200 --> 00:31:40.120
may not be paying to you.

00:31:40.120 --> 00:31:42.070
And so you want to minimize the
amount of data that they

00:31:42.070 --> 00:31:44.480
receive that comes out
of your pocket.

00:31:44.480 --> 00:31:46.090
There's a great example
of this, a

00:31:46.090 --> 00:31:48.050
very successful example.

00:31:48.050 --> 00:31:48.980
I hope you all know it.

00:31:48.980 --> 00:31:50.680
It's called World of Warcraft.

00:31:50.680 --> 00:31:54.680
World of Warcraft came out with
a great streaming demo a

00:31:54.680 --> 00:31:56.480
while ago, called Try WoW.

00:31:56.480 --> 00:31:59.290
And what Try WoW did, was
effectively bundle the first

00:31:59.290 --> 00:32:02.570
25 megabytes of the World of
Warcraft experience into a

00:32:02.570 --> 00:32:04.930
single package, a single
executable, that the user

00:32:04.930 --> 00:32:08.960
could download very quickly on
a 20 megabits per second pipe

00:32:08.960 --> 00:32:10.650
that actually came down around
10 seconds or so.

00:32:10.650 --> 00:32:13.040
And then after that, while the
user was configuring their

00:32:13.040 --> 00:32:14.910
character and learning a little
bit about the game,

00:32:14.910 --> 00:32:19.090
they were actually streaming in
the next 20 hours or so of

00:32:19.090 --> 00:32:21.560
gameplay and caching it
locally on the disk.

00:32:21.560 --> 00:32:25.270
So the user only actually had
to grab 25 megs first, then

00:32:25.270 --> 00:32:26.380
they could start playing
the game.

00:32:26.380 --> 00:32:28.310
And then as they started
progressing and experiencing

00:32:28.310 --> 00:32:31.140
more content, they would get the
larger and larger pieces

00:32:31.140 --> 00:32:32.590
of content coming down.

00:32:32.590 --> 00:32:35.400
This allowed the developer of
World of Warcraft to kind of

00:32:35.400 --> 00:32:38.160
balance what content came
through the pipe, how much

00:32:38.160 --> 00:32:42.080
cost did it take them to acquire
a new user, how much

00:32:42.080 --> 00:32:43.860
they were losing to people who
were trying to game but not

00:32:43.860 --> 00:32:45.390
actually purchasing of the
content, et cetera.

00:32:45.390 --> 00:32:47.630
They had lot more data because
they were segmenting the

00:32:47.630 --> 00:32:49.540
content properly.

00:32:49.540 --> 00:32:52.390
So now if we assume that
204 megs that LZHAM was

00:32:52.390 --> 00:32:55.030
compressing our gig to, and we
tried to bundle it up like

00:32:55.030 --> 00:32:58.020
this-- let's say 24 megs went
to two million users a day,

00:32:58.020 --> 00:33:01.410
and 172 of that megs one to
1.4 million users a day.

00:33:01.410 --> 00:33:03.840
This actually changes your
scale and your cost quite

00:33:03.840 --> 00:33:04.700
significantly.

00:33:04.700 --> 00:33:09.450
The 24 meg is actually going
to cost you $132 a day.

00:33:09.450 --> 00:33:12.890
And then you're going to pay
around $700 for the 172 megs.

00:33:12.890 --> 00:33:16.210
The total is about half of
what you were paying by

00:33:16.210 --> 00:33:18.000
sending a gig to every user.

00:33:18.000 --> 00:33:19.640
And this is a very successful
strategy.

00:33:19.640 --> 00:33:22.720
It allows you to also understand
your content and

00:33:22.720 --> 00:33:23.410
the deeper level.

00:33:23.410 --> 00:33:26.370
It lets you care about what your
users are experiencing,

00:33:26.370 --> 00:33:29.850
how they're experiencing, and
what data is needed from your

00:33:29.850 --> 00:33:32.640
studio to get them the right
vision of your message.

00:33:32.640 --> 00:33:36.400
It's like taking a blog and
compressing into 140 bytes, or

00:33:36.400 --> 00:33:37.800
140 characters, so
you can get your

00:33:37.800 --> 00:33:39.940
message out to the people.

00:33:39.940 --> 00:33:42.300
Now there's a great game that
goes even further than this.

00:33:42.300 --> 00:33:44.130
It's a game called Realm
of the Mad God.

00:33:44.130 --> 00:33:44.890
Hopefully you've played it.

00:33:44.890 --> 00:33:46.750
It's a fantastic product
that's up on the web.

00:33:46.750 --> 00:33:49.090
And because it's a web game,
these guys have actually

00:33:49.090 --> 00:33:50.880
optimized in a different
direction.

00:33:50.880 --> 00:33:55.020
Their entire game
is 1.29 megs.

00:33:55.020 --> 00:33:56.180
That's the whole product.

00:33:56.180 --> 00:34:00.460
Effectively it's a fantasy
MMO shooter online.

00:34:00.460 --> 00:34:02.380
So you've got tons of people
shooting bullets at each other

00:34:02.380 --> 00:34:03.230
and dodging.

00:34:03.230 --> 00:34:04.200
It's really cool.

00:34:04.200 --> 00:34:06.930
The point is that with that 1.29
megs, if they distribute

00:34:06.930 --> 00:34:09.139
that to 3.4 million unique
users a day,

00:34:09.139 --> 00:34:11.610
that costs them $12.

00:34:11.610 --> 00:34:14.580
So they've taken a very unique
approach to the problem.

00:34:14.580 --> 00:34:19.880
How small can we make this
product, because load times

00:34:19.880 --> 00:34:21.360
matter on the internet.

00:34:21.360 --> 00:34:24.610
It takes about 1.3 seconds to
transfer and boot up Realm of

00:34:24.610 --> 00:34:26.300
the Mad God the first time
you've played it.

00:34:26.300 --> 00:34:28.969
And if 3.4 million users are
getting that content every

00:34:28.969 --> 00:34:31.170
day, it only costs
the developer $12

00:34:31.170 --> 00:34:32.500
to ship that content.

00:34:32.500 --> 00:34:35.989
This is a great intersection
point of understanding

00:34:35.989 --> 00:34:38.989
transfer time plus
cost ratios.

00:34:38.989 --> 00:34:41.110
And this is where you're going
to have to start optimizing as

00:34:41.110 --> 00:34:42.250
game developers.

00:34:42.250 --> 00:34:44.570
If you want your content to be
available outside of the

00:34:44.570 --> 00:34:46.469
digital distribution platforms
that you have today, so that

00:34:46.469 --> 00:34:49.340
you can have a deeper, richer
conversation with your

00:34:49.340 --> 00:34:52.139
consumers, you can get feedback
with them earlier,

00:34:52.139 --> 00:34:54.400
you need the ability to have
your game load quickly and the

00:34:54.400 --> 00:34:57.240
cost of scales involved with
that are minimized.

00:34:57.240 --> 00:34:59.080
There's a great quote, and
I'll leave you with this.

00:34:59.080 --> 00:35:03.250
"It is not the strongest of the
species that survives, nor

00:35:03.250 --> 00:35:05.460
the most intelligent, but the
one most responsive to

00:35:05.460 --> 00:35:08.400
change." This is a great
quote about evolution.

00:35:08.400 --> 00:35:11.040
What we're seeing in the games
industry right now is a very

00:35:11.040 --> 00:35:12.470
evolution-based moment.

00:35:12.470 --> 00:35:15.130
We've got tons and tons of
little organisms out there all

00:35:15.130 --> 00:35:18.000
fighting for life, trying to
stay stable, trying to create

00:35:18.000 --> 00:35:19.910
their own little niches
and ecosystems.

00:35:19.910 --> 00:35:22.360
And some will survive,
and some won't.

00:35:22.360 --> 00:35:25.670
Your product, your game, your
studio, in order to be

00:35:25.670 --> 00:35:30.410
responsive to last out this time
of change, you need to be

00:35:30.410 --> 00:35:33.050
willing to adopt new
technologies, new standards of

00:35:33.050 --> 00:35:35.810
development, and think in new
ways to reach your customer.

00:35:35.810 --> 00:35:39.030
And that is the basis of
webifying your game.

00:35:39.030 --> 00:35:40.060
Thank you so much
for your time.

00:35:40.060 --> 00:35:41.020
I appreciate it.

00:35:41.020 --> 00:35:44.020
We'll go to questions here
in a minute, once they

00:35:44.020 --> 00:35:44.720
kill the live feed.

00:35:44.720 --> 00:35:46.010
Again, I'm Colt McAnlis.

00:35:46.010 --> 00:35:47.280
This is how you get
a hold of me.

00:35:47.280 --> 00:35:48.560
Go, webify your game.

00:35:48.560 --> 00:35:49.360
Make things awesome.

00:35:49.360 --> 00:35:50.610
Thank you very much.

