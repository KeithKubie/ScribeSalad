WEBVTT
Kind: captions
Language: en

00:00:00.570 --> 00:00:04.990
This right here is a
picture of Fibonacci,

00:00:04.990 --> 00:00:08.080
one of the most famous
mathematicians of all time,

00:00:08.080 --> 00:00:10.910
and he was a mathematician
in medieval Italy.

00:00:10.910 --> 00:00:13.610
And he's most famous for
the Fibonacci numbers.

00:00:19.210 --> 00:00:20.690
And he didn't discover them.

00:00:20.690 --> 00:00:23.106
They were actually discovered
several centuries before him

00:00:23.106 --> 00:00:26.570
in India, but he popularized
them, especially in the West.

00:00:26.570 --> 00:00:28.910
And the Fibonacci
numbers are super simple.

00:00:28.910 --> 00:00:32.610
The first two are
defined as 0 and 1.

00:00:32.610 --> 00:00:35.862
And every number after that is
the sum of the previous two.

00:00:35.862 --> 00:00:37.320
So what I'm
constructing right here

00:00:37.320 --> 00:00:39.764
is really a Fibonacci
sequence of numbers.

00:00:39.764 --> 00:00:41.180
So the next number
in the sequence

00:00:41.180 --> 00:00:44.050
is going to be 0 plus
1, which is 1, Then

00:00:44.050 --> 00:00:46.410
the next number after that
is going to be 1 plus 1,

00:00:46.410 --> 00:00:47.620
which is 2.

00:00:47.620 --> 00:00:50.370
Then the next number
after that 1 plus 2 is 3.

00:00:50.370 --> 00:00:52.860
2 plus 3 is 5.

00:00:52.860 --> 00:00:54.506
3 plus 5 is 8.

00:00:54.506 --> 00:00:57.420
5 plus 8 is 13.

00:00:57.420 --> 00:01:01.510
8 plus 13 is 21.

00:01:01.510 --> 00:01:05.680
13 plus 21 is 34.

00:01:05.680 --> 00:01:07.830
And the Fibonacci
numbers, especially once

00:01:07.830 --> 00:01:09.690
you start getting into
number theories, tons

00:01:09.690 --> 00:01:11.064
of fascinating
things about them.

00:01:11.064 --> 00:01:13.130
But probably the
coolest thing about them

00:01:13.130 --> 00:01:15.900
is as you add more and
more terms to the Fibonacci

00:01:15.900 --> 00:01:19.140
sequence, and you take
the last two terms

00:01:19.140 --> 00:01:21.761
that you've generated, obviously
there is no really last two

00:01:21.761 --> 00:01:22.260
terms.

00:01:22.260 --> 00:01:24.650
You could keep going on
forever, get arbitrarily

00:01:24.650 --> 00:01:26.180
large Fibonacci numbers.

00:01:26.180 --> 00:01:30.400
But say we take these last two
terms over here, 21 and 34.

00:01:30.400 --> 00:01:34.310
If we take the ratio of
these two, 21 over 34,

00:01:34.310 --> 00:01:38.150
this is going to be pretty
close to the golden ratio.

00:01:41.660 --> 00:01:45.242
And I encourage you to look up
the golden ratio on Wikipedia

00:01:45.242 --> 00:01:45.950
and the internet.

00:01:45.950 --> 00:01:48.530
You'll find all sorts of
fascinating and mystical things

00:01:48.530 --> 00:01:50.260
about the golden ratio.

00:01:50.260 --> 00:01:53.020
What's cool about the Fibonacci
numbers, or the Fibonacci

00:01:53.020 --> 00:01:54.920
sequence, this gives
you an approximation

00:01:54.920 --> 00:01:55.753
of the golden ratio.

00:01:55.753 --> 00:01:57.620
You'll get even a
better approximation

00:01:57.620 --> 00:02:00.490
if you add another
term to our sequence.

00:02:00.490 --> 00:02:04.430
So the next term over
here, 21 plus 34 is 55.

00:02:04.430 --> 00:02:13.530
So the ratio of 34 to 55 is
even closer to the golden ratio.

00:02:13.530 --> 00:02:15.200
So one way, if you
wanted to compute

00:02:15.200 --> 00:02:17.990
a really good approximation
for the golden ratio,

00:02:17.990 --> 00:02:20.920
you could really just get
super high Fibonacci numbers

00:02:20.920 --> 00:02:24.510
just adding the previous two
terms to get the next one.

00:02:24.510 --> 00:02:26.590
And you will get a pretty
good approximation,

00:02:26.590 --> 00:02:29.800
when you take the ratio
of the last two terms.

00:02:29.800 --> 00:02:32.290
Now that's what the
Fibonacci numbers are about,

00:02:32.290 --> 00:02:35.094
and now I want to pose
a challenge to you.

00:02:35.094 --> 00:02:36.760
I want you to write,
since we've already

00:02:36.760 --> 00:02:39.460
done some examples
using factorial,

00:02:39.460 --> 00:02:41.730
I want you to write
an implementation

00:02:41.730 --> 00:02:45.900
of a function that generates
the n-th term in the Fibonacci

00:02:45.900 --> 00:02:46.950
sequence.

00:02:46.950 --> 00:02:48.460
So the function
will be like this.

00:02:52.120 --> 00:02:55.860
So if I call your function--
Let me make it a lowercase.

00:02:55.860 --> 00:02:57.400
Let me just give
you some examples.

00:02:57.400 --> 00:03:00.999
So if I take your function,
and I call Fibonacci--

00:03:00.999 --> 00:03:03.540
and you could really implement
this in any language you want,

00:03:03.540 --> 00:03:04.530
although we've been
dealing in Python,

00:03:04.530 --> 00:03:06.770
it might be simplest
to do it in Python--

00:03:06.770 --> 00:03:12.130
if I call fibonacci of
1, what I want this to be

00:03:12.130 --> 00:03:13.464
is the first term.

00:03:13.464 --> 00:03:15.630
And just to make things
clear, and you should always

00:03:15.630 --> 00:03:17.680
clarify this, especially
in computer science,

00:03:17.680 --> 00:03:20.360
because it's not always
clear what the first term is.

00:03:20.360 --> 00:03:22.662
And I'm going to make
it clear right now.

00:03:22.662 --> 00:03:24.870
The first term is not going
to be this one over here.

00:03:24.870 --> 00:03:26.536
I'm going to make it
this one over here.

00:03:26.536 --> 00:03:29.390
I'm going to call
this the 0-th term.

00:03:29.390 --> 00:03:31.310
That's the 0-th
term, and then that

00:03:31.310 --> 00:03:32.980
is going to be the first term.

00:03:32.980 --> 00:03:35.590
This is going to be the second
term, third term, fourth term,

00:03:35.590 --> 00:03:37.170
so on and so forth.

00:03:37.170 --> 00:03:39.360
And so Fibonacci of
1, the first term

00:03:39.360 --> 00:03:40.880
will be this right over here.

00:03:40.880 --> 00:03:44.670
It should return 1.

00:03:44.670 --> 00:03:49.020
So Fibonacci of 0
should return 0.

00:03:49.020 --> 00:03:53.700
Fibonacci of 3 should
return 0, 1, 2, 3.

00:03:53.700 --> 00:03:55.110
It should return 2.

00:03:59.000 --> 00:04:04.700
Fibonacci of 5 should
return 0, 1, 2, 3, 4, 5.

00:04:04.700 --> 00:04:05.885
It should actually return 5.

00:04:05.885 --> 00:04:07.760
And what I want you to
do is write a function

00:04:07.760 --> 00:04:09.790
so we could put in
any argument over here

00:04:09.790 --> 00:04:14.670
and it will return that third
term of the Fibonacci sequence.

