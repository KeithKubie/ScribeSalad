WEBVTT
Kind: captions
Language: en

00:00:02.880 --> 00:00:07.449
[Music]

00:00:07.449 --> 00:00:07.459
[Music]
 

00:00:07.459 --> 00:00:10.970
[Music]
thank you thanks for being here this

00:00:10.970 --> 00:00:10.980
thank you thanks for being here this
 

00:00:10.980 --> 00:00:14.029
thank you thanks for being here this
morning my name is James and I'm part of

00:00:14.029 --> 00:00:14.039
morning my name is James and I'm part of
 

00:00:14.039 --> 00:00:17.419
morning my name is James and I'm part of
the Kotlin team at Google today I have

00:00:17.419 --> 00:00:17.429
the Kotlin team at Google today I have
 

00:00:17.429 --> 00:00:20.029
the Kotlin team at Google today I have
the pleasure of introducing a very

00:00:20.029 --> 00:00:20.039
the pleasure of introducing a very
 

00:00:20.039 --> 00:00:23.509
the pleasure of introducing a very
special guest from jetbrains who really

00:00:23.509 --> 00:00:23.519
special guest from jetbrains who really
 

00:00:23.519 --> 00:00:28.029
special guest from jetbrains who really
requires no introduction

00:00:28.029 --> 00:00:28.039
 

00:00:28.039 --> 00:00:34.220
now all of you know that Kotlin is now

00:00:34.220 --> 00:00:34.230
now all of you know that Kotlin is now
 

00:00:34.230 --> 00:00:36.790
now all of you know that Kotlin is now
one of the most loved programming

00:00:36.790 --> 00:00:36.800
one of the most loved programming
 

00:00:36.800 --> 00:00:42.490
one of the most loved programming
languages in the world

00:00:42.490 --> 00:00:42.500
 

00:00:42.500 --> 00:00:47.390
and at Google IO is very rare for us to

00:00:47.390 --> 00:00:47.400
and at Google IO is very rare for us to
 

00:00:47.400 --> 00:00:50.230
and at Google IO is very rare for us to
have external speakers but this person

00:00:50.230 --> 00:00:50.240
have external speakers but this person
 

00:00:50.240 --> 00:00:53.930
have external speakers but this person
was here last year and we invited him

00:00:53.930 --> 00:00:53.940
was here last year and we invited him
 

00:00:53.940 --> 00:00:55.910
was here last year and we invited him
back because we couldn't think of

00:00:55.910 --> 00:00:55.920
back because we couldn't think of
 

00:00:55.920 --> 00:00:58.700
back because we couldn't think of
anybody else to better to teach Kotlin

00:00:58.700 --> 00:00:58.710
anybody else to better to teach Kotlin
 

00:00:58.710 --> 00:01:00.590
anybody else to better to teach Kotlin
other than one of the people who

00:01:00.590 --> 00:01:00.600
other than one of the people who
 

00:01:00.600 --> 00:01:03.260
other than one of the people who
invented it so please help me welcome

00:01:03.260 --> 00:01:03.270
invented it so please help me welcome
 

00:01:03.270 --> 00:01:05.930
invented it so please help me welcome
the lead language designer for Kotlin

00:01:05.930 --> 00:01:05.940
the lead language designer for Kotlin
 

00:01:05.940 --> 00:01:11.450
the lead language designer for Kotlin
andre breslov

00:01:11.450 --> 00:01:11.460
 

00:01:11.460 --> 00:01:14.990
and vegetarians thanks for a great

00:01:14.990 --> 00:01:15.000
and vegetarians thanks for a great
 

00:01:15.000 --> 00:01:17.090
and vegetarians thanks for a great
introduction hello everybody I'm very

00:01:17.090 --> 00:01:17.100
introduction hello everybody I'm very
 

00:01:17.100 --> 00:01:20.480
introduction hello everybody I'm very
glad to see here today I'm gonna talk

00:01:20.480 --> 00:01:20.490
glad to see here today I'm gonna talk
 

00:01:20.490 --> 00:01:24.070
glad to see here today I'm gonna talk
about what can it be carbon I guess and

00:01:24.070 --> 00:01:24.080
about what can it be carbon I guess and
 

00:01:24.080 --> 00:01:28.670
about what can it be carbon I guess and
I really I'm going to do a live demo so

00:01:28.670 --> 00:01:28.680
I really I'm going to do a live demo so
 

00:01:28.680 --> 00:01:32.660
I really I'm going to do a live demo so
please bring my demo on so the reason

00:01:32.660 --> 00:01:32.670
please bring my demo on so the reason
 

00:01:32.670 --> 00:01:35.149
please bring my demo on so the reason
why I have this horrible code in the

00:01:35.149 --> 00:01:35.159
why I have this horrible code in the
 

00:01:35.159 --> 00:01:38.719
why I have this horrible code in the
slides is that we are all learning and

00:01:38.719 --> 00:01:38.729
slides is that we are all learning and
 

00:01:38.729 --> 00:01:41.350
slides is that we are all learning and
our all habits sometimes get in the way

00:01:41.350 --> 00:01:41.360
our all habits sometimes get in the way
 

00:01:41.360 --> 00:01:44.960
our all habits sometimes get in the way
so I'll be presenting today on the topic

00:01:44.960 --> 00:01:44.970
so I'll be presenting today on the topic
 

00:01:44.970 --> 00:01:48.260
so I'll be presenting today on the topic
of how you get out of your java habits

00:01:48.260 --> 00:01:48.270
of how you get out of your java habits
 

00:01:48.270 --> 00:01:51.200
of how you get out of your java habits
and get to your calling habits so we all

00:01:51.200 --> 00:01:51.210
and get to your calling habits so we all
 

00:01:51.210 --> 00:01:52.910
and get to your calling habits so we all
come from different backgrounds of

00:01:52.910 --> 00:01:52.920
come from different backgrounds of
 

00:01:52.920 --> 00:01:55.040
come from different backgrounds of
course and many of us started with the

00:01:55.040 --> 00:01:55.050
course and many of us started with the
 

00:01:55.050 --> 00:01:57.350
course and many of us started with the
Java programming language and built up

00:01:57.350 --> 00:01:57.360
Java programming language and built up
 

00:01:57.360 --> 00:01:58.940
Java programming language and built up
our knowledge of programming through

00:01:58.940 --> 00:01:58.950
our knowledge of programming through
 

00:01:58.950 --> 00:02:02.120
our knowledge of programming through
this so we remember many things and the

00:02:02.120 --> 00:02:02.130
this so we remember many things and the
 

00:02:02.130 --> 00:02:04.790
this so we remember many things and the
thing is colin has been inspired by many

00:02:04.790 --> 00:02:04.800
thing is colin has been inspired by many
 

00:02:04.800 --> 00:02:06.050
thing is colin has been inspired by many
languages including the java programming

00:02:06.050 --> 00:02:06.060
languages including the java programming
 

00:02:06.060 --> 00:02:09.290
languages including the java programming
language so you can reproduce many of

00:02:09.290 --> 00:02:09.300
language so you can reproduce many of
 

00:02:09.300 --> 00:02:11.330
language so you can reproduce many of
the java constructs and coughlin and

00:02:11.330 --> 00:02:11.340
the java constructs and coughlin and
 

00:02:11.340 --> 00:02:14.300
the java constructs and coughlin and
will work like you can get your job done

00:02:14.300 --> 00:02:14.310
will work like you can get your job done
 

00:02:14.310 --> 00:02:17.270
will work like you can get your job done
this way but it can be in many cases

00:02:17.270 --> 00:02:17.280
this way but it can be in many cases
 

00:02:17.280 --> 00:02:19.970
this way but it can be in many cases
improved dramatically so this particular

00:02:19.970 --> 00:02:19.980
improved dramatically so this particular
 

00:02:19.980 --> 00:02:22.900
improved dramatically so this particular
example is about declaring classes and

00:02:22.900 --> 00:02:22.910
example is about declaring classes and
 

00:02:22.910 --> 00:02:25.400
example is about declaring classes and
you can see here that I have a common

00:02:25.400 --> 00:02:25.410
you can see here that I have a common
 

00:02:25.410 --> 00:02:27.380
you can see here that I have a common
class on the left and the Java class on

00:02:27.380 --> 00:02:27.390
class on the left and the Java class on
 

00:02:27.390 --> 00:02:29.210
class on the left and the Java class on
the right and they look very similar but

00:02:29.210 --> 00:02:29.220
the right and they look very similar but
 

00:02:29.220 --> 00:02:31.460
the right and they look very similar but
this is definitely not how we write

00:02:31.460 --> 00:02:31.470
this is definitely not how we write
 

00:02:31.470 --> 00:02:33.740
this is definitely not how we write
cousin code so what are you are actually

00:02:33.740 --> 00:02:33.750
cousin code so what are you are actually
 

00:02:33.750 --> 00:02:36.979
cousin code so what are you are actually
supposed to do is like remove all the

00:02:36.979 --> 00:02:36.989
supposed to do is like remove all the
 

00:02:36.989 --> 00:02:38.539
supposed to do is like remove all the
unnecessary stuff what I could have to

00:02:38.539 --> 00:02:38.549
unnecessary stuff what I could have to
 

00:02:38.549 --> 00:02:40.520
unnecessary stuff what I could have to
say here is two properties one class

00:02:40.520 --> 00:02:40.530
say here is two properties one class
 

00:02:40.530 --> 00:02:42.830
say here is two properties one class
that's it right so I can try to

00:02:42.830 --> 00:02:42.840
that's it right so I can try to
 

00:02:42.840 --> 00:02:44.900
that's it right so I can try to
transform it by hand but I'll actually

00:02:44.900 --> 00:02:44.910
transform it by hand but I'll actually
 

00:02:44.910 --> 00:02:47.210
transform it by hand but I'll actually
want to show off a nice tool and simply

00:02:47.210 --> 00:02:47.220
want to show off a nice tool and simply
 

00:02:47.220 --> 00:02:49.280
want to show off a nice tool and simply
copy and paste the code from the Java

00:02:49.280 --> 00:02:49.290
copy and paste the code from the Java
 

00:02:49.290 --> 00:02:51.650
copy and paste the code from the Java
side to the common side so it will use

00:02:51.650 --> 00:02:51.660
side to the common side so it will use
 

00:02:51.660 --> 00:02:54.349
side to the common side so it will use
the Java 2 cousin converter built into

00:02:54.349 --> 00:02:54.359
the Java 2 cousin converter built into
 

00:02:54.359 --> 00:02:58.280
the Java 2 cousin converter built into
the IDE and do it for me so boom there

00:02:58.280 --> 00:02:58.290
the IDE and do it for me so boom there
 

00:02:58.290 --> 00:03:02.150
the IDE and do it for me so boom there
it is a single line that's actually all

00:03:02.150 --> 00:03:02.160
it is a single line that's actually all
 

00:03:02.160 --> 00:03:06.890
it is a single line that's actually all
you needed to declare one class two

00:03:06.890 --> 00:03:06.900
you needed to declare one class two
 

00:03:06.900 --> 00:03:09.289
you needed to declare one class two
properties that's it what all I have

00:03:09.289 --> 00:03:09.299
properties that's it what all I have
 

00:03:09.299 --> 00:03:10.759
properties that's it what all I have
here is a class for the primary

00:03:10.759 --> 00:03:10.769
here is a class for the primary
 

00:03:10.769 --> 00:03:12.680
here is a class for the primary
constructor so it has two parameters

00:03:12.680 --> 00:03:12.690
constructor so it has two parameters
 

00:03:12.690 --> 00:03:14.330
constructor so it has two parameters
both of them are properties that's all

00:03:14.330 --> 00:03:14.340
both of them are properties that's all
 

00:03:14.340 --> 00:03:18.530
both of them are properties that's all
he wanted to say so this is one of the

00:03:18.530 --> 00:03:18.540
he wanted to say so this is one of the
 

00:03:18.540 --> 00:03:21.020
he wanted to say so this is one of the
things that demonstrates how cheap

00:03:21.020 --> 00:03:21.030
things that demonstrates how cheap
 

00:03:21.030 --> 00:03:24.520
things that demonstrates how cheap
declaring classes is in common and

00:03:24.520 --> 00:03:24.530
declaring classes is in common and
 

00:03:24.530 --> 00:03:26.620
declaring classes is in common and
there is a consequence to this so look

00:03:26.620 --> 00:03:26.630
there is a consequence to this so look
 

00:03:26.630 --> 00:03:29.050
there is a consequence to this so look
at this code here

00:03:29.050 --> 00:03:29.060
at this code here
 

00:03:29.060 --> 00:03:31.210
at this code here
it's obviously not how you're supposed

00:03:31.210 --> 00:03:31.220
it's obviously not how you're supposed
 

00:03:31.220 --> 00:03:33.160
it's obviously not how you're supposed
to write code in any language actually I

00:03:33.160 --> 00:03:33.170
to write code in any language actually I
 

00:03:33.170 --> 00:03:35.710
to write code in any language actually I
wanted to parse a full name into first

00:03:35.710 --> 00:03:35.720
wanted to parse a full name into first
 

00:03:35.720 --> 00:03:38.559
wanted to parse a full name into first
name and the last thing and so that's

00:03:38.559 --> 00:03:38.569
name and the last thing and so that's
 

00:03:38.569 --> 00:03:40.300
name and the last thing and so that's
what I'm doing here but how do I pack

00:03:40.300 --> 00:03:40.310
what I'm doing here but how do I pack
 

00:03:40.310 --> 00:03:42.430
what I'm doing here but how do I pack
the result to put it out of the function

00:03:42.430 --> 00:03:42.440
the result to put it out of the function
 

00:03:42.440 --> 00:03:44.949
the result to put it out of the function
I don't have a way of returning two

00:03:44.949 --> 00:03:44.959
I don't have a way of returning two
 

00:03:44.959 --> 00:03:46.420
I don't have a way of returning two
things from a function I have to put

00:03:46.420 --> 00:03:46.430
things from a function I have to put
 

00:03:46.430 --> 00:03:48.430
things from a function I have to put
into one object and I'm abusing a list

00:03:48.430 --> 00:03:48.440
into one object and I'm abusing a list
 

00:03:48.440 --> 00:03:48.970
into one object and I'm abusing a list
here

00:03:48.970 --> 00:03:48.980
here
 

00:03:48.980 --> 00:03:52.750
here
just then awkwardly taking out one and

00:03:52.750 --> 00:03:52.760
just then awkwardly taking out one and
 

00:03:52.760 --> 00:03:55.180
just then awkwardly taking out one and
the other to make a first name and the

00:03:55.180 --> 00:03:55.190
the other to make a first name and the
 

00:03:55.190 --> 00:03:56.979
the other to make a first name and the
last name don't do this in any language

00:03:56.979 --> 00:03:56.989
last name don't do this in any language
 

00:03:56.989 --> 00:03:59.590
last name don't do this in any language
but there is kind of psychological

00:03:59.590 --> 00:03:59.600
but there is kind of psychological
 

00:03:59.600 --> 00:04:02.560
but there is kind of psychological
reason to doing this at least in our old

00:04:02.560 --> 00:04:02.570
reason to doing this at least in our old
 

00:04:02.570 --> 00:04:04.660
reason to doing this at least in our old
habits because declaring classes is

00:04:04.660 --> 00:04:04.670
habits because declaring classes is
 

00:04:04.670 --> 00:04:07.240
habits because declaring classes is
expensive right you have to create a new

00:04:07.240 --> 00:04:07.250
expensive right you have to create a new
 

00:04:07.250 --> 00:04:09.880
expensive right you have to create a new
file so a lot of code in it it's kind of

00:04:09.880 --> 00:04:09.890
file so a lot of code in it it's kind of
 

00:04:09.890 --> 00:04:11.530
file so a lot of code in it it's kind of
awkward but in college I don't have to

00:04:11.530 --> 00:04:11.540
awkward but in college I don't have to
 

00:04:11.540 --> 00:04:14.229
awkward but in college I don't have to
do this all we need to say my class full

00:04:14.229 --> 00:04:14.239
do this all we need to say my class full
 

00:04:14.239 --> 00:04:18.550
do this all we need to say my class full
name with first and last names as

00:04:18.550 --> 00:04:18.560
name with first and last names as
 

00:04:18.560 --> 00:04:22.840
name with first and last names as
properties and then all I need to do

00:04:22.840 --> 00:04:22.850
properties and then all I need to do
 

00:04:22.850 --> 00:04:28.330
properties and then all I need to do
here is just return that right so my

00:04:28.330 --> 00:04:28.340
here is just return that right so my
 

00:04:28.340 --> 00:04:31.450
here is just return that right so my
full name here it goes and now instead

00:04:31.450 --> 00:04:31.460
full name here it goes and now instead
 

00:04:31.460 --> 00:04:34.960
full name here it goes and now instead
of indices I can say first and last

00:04:34.960 --> 00:04:34.970
of indices I can say first and last
 

00:04:34.970 --> 00:04:38.290
of indices I can say first and last
right here so that's the idea

00:04:38.290 --> 00:04:38.300
right here so that's the idea
 

00:04:38.300 --> 00:04:40.480
right here so that's the idea
class is being cheap is not only saving

00:04:40.480 --> 00:04:40.490
class is being cheap is not only saving
 

00:04:40.490 --> 00:04:42.100
class is being cheap is not only saving
you like time at the Declaration site

00:04:42.100 --> 00:04:42.110
you like time at the Declaration site
 

00:04:42.110 --> 00:04:44.850
you like time at the Declaration site
it's saving you mental effort you can

00:04:44.850 --> 00:04:44.860
it's saving you mental effort you can
 

00:04:44.860 --> 00:04:47.110
it's saving you mental effort you can
represent your multiple return as a

00:04:47.110 --> 00:04:47.120
represent your multiple return as a
 

00:04:47.120 --> 00:04:48.640
represent your multiple return as a
class and it doesn't cost you anything

00:04:48.640 --> 00:04:48.650
class and it doesn't cost you anything
 

00:04:48.650 --> 00:04:52.390
class and it doesn't cost you anything
if I run this you'll see that my equals

00:04:52.390 --> 00:04:52.400
if I run this you'll see that my equals
 

00:04:52.400 --> 00:04:54.400
if I run this you'll see that my equals
doesn't work obviously because this

00:04:54.400 --> 00:04:54.410
doesn't work obviously because this
 

00:04:54.410 --> 00:04:58.680
doesn't work obviously because this
single line class and so now I'll go to

00:04:58.680 --> 00:04:58.690
single line class and so now I'll go to
 

00:04:58.690 --> 00:05:01.630
single line class and so now I'll go to
declare equals there right and then hash

00:05:01.630 --> 00:05:01.640
declare equals there right and then hash
 

00:05:01.640 --> 00:05:03.490
declare equals there right and then hash
code there as long as the fourth it's

00:05:03.490 --> 00:05:03.500
code there as long as the fourth it's
 

00:05:03.500 --> 00:05:05.800
code there as long as the fourth it's
over both but I really don't need to do

00:05:05.800 --> 00:05:05.810
over both but I really don't need to do
 

00:05:05.810 --> 00:05:08.230
over both but I really don't need to do
this in common because you probably know

00:05:08.230 --> 00:05:08.240
this in common because you probably know
 

00:05:08.240 --> 00:05:09.340
this in common because you probably know
that there is something called data

00:05:09.340 --> 00:05:09.350
that there is something called data
 

00:05:09.350 --> 00:05:12.060
that there is something called data
classes right who knows data classes

00:05:12.060 --> 00:05:12.070
classes right who knows data classes
 

00:05:12.070 --> 00:05:15.100
classes right who knows data classes
many people good so so you know that I

00:05:15.100 --> 00:05:15.110
many people good so so you know that I
 

00:05:15.110 --> 00:05:17.080
many people good so so you know that I
simply put this single keyword there and

00:05:17.080 --> 00:05:17.090
simply put this single keyword there and
 

00:05:17.090 --> 00:05:18.700
simply put this single keyword there and
the compiler generates many things for

00:05:18.700 --> 00:05:18.710
the compiler generates many things for
 

00:05:18.710 --> 00:05:20.469
the compiler generates many things for
me it's equals it's hash go it's to

00:05:20.469 --> 00:05:20.479
me it's equals it's hash go it's to
 

00:05:20.479 --> 00:05:22.750
me it's equals it's hash go it's to
string and many other can be empathic so

00:05:22.750 --> 00:05:22.760
string and many other can be empathic so
 

00:05:22.760 --> 00:05:24.240
string and many other can be empathic so
that's it

00:05:24.240 --> 00:05:24.250
that's it
 

00:05:24.250 --> 00:05:27.310
that's it
change your mind about how expensive a

00:05:27.310 --> 00:05:27.320
change your mind about how expensive a
 

00:05:27.320 --> 00:05:31.240
change your mind about how expensive a
class is you can use it easily in all

00:05:31.240 --> 00:05:31.250
class is you can use it easily in all
 

00:05:31.250 --> 00:05:34.719
class is you can use it easily in all
your abstractions so more or less done

00:05:34.719 --> 00:05:34.729
your abstractions so more or less done
 

00:05:34.729 --> 00:05:36.060
your abstractions so more or less done
with the

00:05:36.060 --> 00:05:36.070
with the
 

00:05:36.070 --> 00:05:40.350
with the
warm up let's look at something else

00:05:40.350 --> 00:05:40.360
warm up let's look at something else
 

00:05:40.360 --> 00:05:43.570
warm up let's look at something else
properties so we talked about classes

00:05:43.570 --> 00:05:43.580
properties so we talked about classes
 

00:05:43.580 --> 00:05:45.100
properties so we talked about classes
will go through properties and then go

00:05:45.100 --> 00:05:45.110
will go through properties and then go
 

00:05:45.110 --> 00:05:47.770
will go through properties and then go
over to functions so here is it property

00:05:47.770 --> 00:05:47.780
over to functions so here is it property
 

00:05:47.780 --> 00:05:49.930
over to functions so here is it property
done the way you shouldn't do it in

00:05:49.930 --> 00:05:49.940
done the way you shouldn't do it in
 

00:05:49.940 --> 00:05:52.510
done the way you shouldn't do it in
column again so the properties are you

00:05:52.510 --> 00:05:52.520
column again so the properties are you
 

00:05:52.520 --> 00:05:54.640
column again so the properties are you
showed you before we're kind of one

00:05:54.640 --> 00:05:54.650
showed you before we're kind of one
 

00:05:54.650 --> 00:05:56.500
showed you before we're kind of one
one-liners where both the getter and

00:05:56.500 --> 00:05:56.510
one-liners where both the getter and
 

00:05:56.510 --> 00:05:58.540
one-liners where both the getter and
setter is trivial if you want a custom

00:05:58.540 --> 00:05:58.550
setter is trivial if you want a custom
 

00:05:58.550 --> 00:06:00.280
setter is trivial if you want a custom
setter you definitely don't define

00:06:00.280 --> 00:06:00.290
setter you definitely don't define
 

00:06:00.290 --> 00:06:03.310
setter you definitely don't define
functions for that you have your custom

00:06:03.310 --> 00:06:03.320
functions for that you have your custom
 

00:06:03.320 --> 00:06:05.770
functions for that you have your custom
setter syntax as you probably know if

00:06:05.770 --> 00:06:05.780
setter syntax as you probably know if
 

00:06:05.780 --> 00:06:07.390
setter syntax as you probably know if
you know data classes you know that so

00:06:07.390 --> 00:06:07.400
you know data classes you know that so
 

00:06:07.400 --> 00:06:10.140
you know data classes you know that so
inside a custom center you have field to

00:06:10.140 --> 00:06:10.150
inside a custom center you have field to
 

00:06:10.150 --> 00:06:14.620
inside a custom center you have field to
note file but field to write to your

00:06:14.620 --> 00:06:14.630
note file but field to write to your
 

00:06:14.630 --> 00:06:16.960
note file but field to write to your
backing storage but that's it you don't

00:06:16.960 --> 00:06:16.970
backing storage but that's it you don't
 

00:06:16.970 --> 00:06:19.060
backing storage but that's it you don't
need to introduce extra names and

00:06:19.060 --> 00:06:19.070
need to introduce extra names and
 

00:06:19.070 --> 00:06:20.980
need to introduce extra names and
anything else so that's straightforward

00:06:20.980 --> 00:06:20.990
anything else so that's straightforward
 

00:06:20.990 --> 00:06:25.960
anything else so that's straightforward
right but then look at this code so here

00:06:25.960 --> 00:06:25.970
right but then look at this code so here
 

00:06:25.970 --> 00:06:29.170
right but then look at this code so here
is already a sensible logic I have two

00:06:29.170 --> 00:06:29.180
is already a sensible logic I have two
 

00:06:29.180 --> 00:06:30.870
is already a sensible logic I have two
properties one of them private and

00:06:30.870 --> 00:06:30.880
properties one of them private and
 

00:06:30.880 --> 00:06:35.920
properties one of them private and
nullable and mutable and on my first

00:06:35.920 --> 00:06:35.930
nullable and mutable and on my first
 

00:06:35.930 --> 00:06:37.900
nullable and mutable and on my first
access I'm checking if that's now and

00:06:37.900 --> 00:06:37.910
access I'm checking if that's now and
 

00:06:37.910 --> 00:06:39.880
access I'm checking if that's now and
then I compute a value and write into it

00:06:39.880 --> 00:06:39.890
then I compute a value and write into it
 

00:06:39.890 --> 00:06:43.810
then I compute a value and write into it
and then I output return it from I get

00:06:43.810 --> 00:06:43.820
and then I output return it from I get
 

00:06:43.820 --> 00:06:46.180
and then I output return it from I get
her so what is it it's a lazy property

00:06:46.180 --> 00:06:46.190
her so what is it it's a lazy property
 

00:06:46.190 --> 00:06:46.630
her so what is it it's a lazy property
right

00:06:46.630 --> 00:06:46.640
right
 

00:06:46.640 --> 00:06:49.330
right
I personally wrote dozens and dozens and

00:06:49.330 --> 00:06:49.340
I personally wrote dozens and dozens and
 

00:06:49.340 --> 00:06:52.270
I personally wrote dozens and dozens and
those and Java many other languages so I

00:06:52.270 --> 00:06:52.280
those and Java many other languages so I
 

00:06:52.280 --> 00:06:54.850
those and Java many other languages so I
got kind of bored by that and that's why

00:06:54.850 --> 00:06:54.860
got kind of bored by that and that's why
 

00:06:54.860 --> 00:06:56.710
got kind of bored by that and that's why
common has an obstruction mechanism

00:06:56.710 --> 00:06:56.720
common has an obstruction mechanism
 

00:06:56.720 --> 00:06:58.990
common has an obstruction mechanism
called delegation for properties so

00:06:58.990 --> 00:06:59.000
called delegation for properties so
 

00:06:59.000 --> 00:07:02.770
called delegation for properties so
delegated properties let you get a rate

00:07:02.770 --> 00:07:02.780
delegated properties let you get a rate
 

00:07:02.780 --> 00:07:04.900
delegated properties let you get a rate
of all the repetition of this a lazy

00:07:04.900 --> 00:07:04.910
of all the repetition of this a lazy
 

00:07:04.910 --> 00:07:06.610
of all the repetition of this a lazy
logic all we care about is this

00:07:06.610 --> 00:07:06.620
logic all we care about is this
 

00:07:06.620 --> 00:07:09.960
logic all we care about is this
expression here so let's just do it in

00:07:09.960 --> 00:07:09.970
expression here so let's just do it in
 

00:07:09.970 --> 00:07:14.700
expression here so let's just do it in
implement my property by just lazy of

00:07:14.700 --> 00:07:14.710
implement my property by just lazy of
 

00:07:14.710 --> 00:07:20.890
implement my property by just lazy of
all this

00:07:20.890 --> 00:07:20.900
 

00:07:20.900 --> 00:07:24.580
this is it so what I'm having now I'm

00:07:24.580 --> 00:07:24.590
this is it so what I'm having now I'm
 

00:07:24.590 --> 00:07:27.150
this is it so what I'm having now I'm
saying my property is not simply

00:07:27.150 --> 00:07:27.160
saying my property is not simply
 

00:07:27.160 --> 00:07:30.279
saying my property is not simply
initialized by something its delegated

00:07:30.279 --> 00:07:30.289
initialized by something its delegated
 

00:07:30.289 --> 00:07:33.279
initialized by something its delegated
to this lazy thing here and upon first

00:07:33.279 --> 00:07:33.289
to this lazy thing here and upon first
 

00:07:33.289 --> 00:07:35.320
to this lazy thing here and upon first
access this lambda will be executed and

00:07:35.320 --> 00:07:35.330
access this lambda will be executed and
 

00:07:35.330 --> 00:07:36.810
access this lambda will be executed and
then the rest will be stored by the

00:07:36.810 --> 00:07:36.820
then the rest will be stored by the
 

00:07:36.820 --> 00:07:39.279
then the rest will be stored by the
library so lazy is not a language

00:07:39.279 --> 00:07:39.289
library so lazy is not a language
 

00:07:39.289 --> 00:07:41.320
library so lazy is not a language
construct it's just a library function

00:07:41.320 --> 00:07:41.330
construct it's just a library function
 

00:07:41.330 --> 00:07:44.830
construct it's just a library function
you can define your own and the library

00:07:44.830 --> 00:07:44.840
you can define your own and the library
 

00:07:44.840 --> 00:07:46.930
you can define your own and the library
provides you with many other things so

00:07:46.930 --> 00:07:46.940
provides you with many other things so
 

00:07:46.940 --> 00:07:50.590
provides you with many other things so
the takeaway here is that if you have a

00:07:50.590 --> 00:07:50.600
the takeaway here is that if you have a
 

00:07:50.600 --> 00:07:54.640
the takeaway here is that if you have a
common kind of property like observable

00:07:54.640 --> 00:07:54.650
common kind of property like observable
 

00:07:54.650 --> 00:07:56.920
common kind of property like observable
for example when you need to be notified

00:07:56.920 --> 00:07:56.930
for example when you need to be notified
 

00:07:56.930 --> 00:07:58.960
for example when you need to be notified
that something was modified use a

00:07:58.960 --> 00:07:58.970
that something was modified use a
 

00:07:58.970 --> 00:08:00.310
that something was modified use a
library or write your own

00:08:00.310 --> 00:08:00.320
library or write your own
 

00:08:00.320 --> 00:08:04.120
library or write your own
so here delegates are observable does

00:08:04.120 --> 00:08:04.130
so here delegates are observable does
 

00:08:04.130 --> 00:08:06.939
so here delegates are observable does
the job from the standard library but if

00:08:06.939 --> 00:08:06.949
the job from the standard library but if
 

00:08:06.949 --> 00:08:08.980
the job from the standard library but if
you like you don't have to write code

00:08:08.980 --> 00:08:08.990
you like you don't have to write code
 

00:08:08.990 --> 00:08:13.300
you like you don't have to write code
like this when you have one property

00:08:13.300 --> 00:08:13.310
like this when you have one property
 

00:08:13.310 --> 00:08:15.040
like this when you have one property
than the other property and the other

00:08:15.040 --> 00:08:15.050
than the other property and the other
 

00:08:15.050 --> 00:08:17.230
than the other property and the other
doing the same of the same thing over

00:08:17.230 --> 00:08:17.240
doing the same of the same thing over
 

00:08:17.240 --> 00:08:18.760
doing the same of the same thing over
and over again all you need to do is

00:08:18.760 --> 00:08:18.770
and over again all you need to do is
 

00:08:18.770 --> 00:08:21.659
and over again all you need to do is
this actually declare a single class

00:08:21.659 --> 00:08:21.669
this actually declare a single class
 

00:08:21.669 --> 00:08:24.820
this actually declare a single class
that encapsulate the logic of your

00:08:24.820 --> 00:08:24.830
that encapsulate the logic of your
 

00:08:24.830 --> 00:08:27.100
that encapsulate the logic of your
property like your generic getter and

00:08:27.100 --> 00:08:27.110
property like your generic getter and
 

00:08:27.110 --> 00:08:30.490
property like your generic getter and
generic setter and that's it you can now

00:08:30.490 --> 00:08:30.500
generic setter and that's it you can now
 

00:08:30.500 --> 00:08:32.469
generic setter and that's it you can now
simply refer to this class in many

00:08:32.469 --> 00:08:32.479
simply refer to this class in many
 

00:08:32.479 --> 00:08:34.750
simply refer to this class in many
properties and get your business logic

00:08:34.750 --> 00:08:34.760
properties and get your business logic
 

00:08:34.760 --> 00:08:37.570
properties and get your business logic
database base access all kinds of

00:08:37.570 --> 00:08:37.580
database base access all kinds of
 

00:08:37.580 --> 00:08:40.180
database base access all kinds of
validation anything you like can be

00:08:40.180 --> 00:08:40.190
validation anything you like can be
 

00:08:40.190 --> 00:08:43.600
validation anything you like can be
abstracted as a library and then reused

00:08:43.600 --> 00:08:43.610
abstracted as a library and then reused
 

00:08:43.610 --> 00:08:45.670
abstracted as a library and then reused
across your project it doesn't make

00:08:45.670 --> 00:08:45.680
across your project it doesn't make
 

00:08:45.680 --> 00:08:50.530
across your project it doesn't make
sense who uses this already I know so

00:08:50.530 --> 00:08:50.540
sense who uses this already I know so
 

00:08:50.540 --> 00:08:52.480
sense who uses this already I know so
many people you actually should I'm sure

00:08:52.480 --> 00:08:52.490
many people you actually should I'm sure
 

00:08:52.490 --> 00:08:56.800
many people you actually should I'm sure
you can benefit from this so this is

00:08:56.800 --> 00:08:56.810
you can benefit from this so this is
 

00:08:56.810 --> 00:08:58.600
you can benefit from this so this is
more or less it about properties and now

00:08:58.600 --> 00:08:58.610
more or less it about properties and now
 

00:08:58.610 --> 00:09:00.250
more or less it about properties and now
let's get to functions functions are

00:09:00.250 --> 00:09:00.260
let's get to functions functions are
 

00:09:00.260 --> 00:09:03.040
let's get to functions functions are
very important right so again this is

00:09:03.040 --> 00:09:03.050
very important right so again this is
 

00:09:03.050 --> 00:09:06.100
very important right so again this is
very horrible code don't write code like

00:09:06.100 --> 00:09:06.110
very horrible code don't write code like
 

00:09:06.110 --> 00:09:08.320
very horrible code don't write code like
this and kosslyn please this is very

00:09:08.320 --> 00:09:08.330
this and kosslyn please this is very
 

00:09:08.330 --> 00:09:10.449
this and kosslyn please this is very
much inspired by our habits in the java

00:09:10.449 --> 00:09:10.459
much inspired by our habits in the java
 

00:09:10.459 --> 00:09:12.460
much inspired by our habits in the java
programming language when i have to put

00:09:12.460 --> 00:09:12.470
programming language when i have to put
 

00:09:12.470 --> 00:09:15.070
programming language when i have to put
everything into a class right so string

00:09:15.070 --> 00:09:15.080
everything into a class right so string
 

00:09:15.080 --> 00:09:17.710
everything into a class right so string
youto does your project has its own

00:09:17.710 --> 00:09:17.720
youto does your project has its own
 

00:09:17.720 --> 00:09:21.550
youto does your project has its own
string util class oh if it doesn't is

00:09:21.550 --> 00:09:21.560
string util class oh if it doesn't is
 

00:09:21.560 --> 00:09:26.500
string util class oh if it doesn't is
just a very new project right so so any

00:09:26.500 --> 00:09:26.510
just a very new project right so so any
 

00:09:26.510 --> 00:09:29.230
just a very new project right so so any
of my projects have them but the thing

00:09:29.230 --> 00:09:29.240
of my projects have them but the thing
 

00:09:29.240 --> 00:09:31.120
of my projects have them but the thing
is in cullen it's ll different you don't

00:09:31.120 --> 00:09:31.130
is in cullen it's ll different you don't
 

00:09:31.130 --> 00:09:33.370
is in cullen it's ll different you don't
have to use a class well first of all a

00:09:33.370 --> 00:09:33.380
have to use a class well first of all a
 

00:09:33.380 --> 00:09:34.790
have to use a class well first of all a
common classes don't have

00:09:34.790 --> 00:09:34.800
common classes don't have
 

00:09:34.800 --> 00:09:37.460
common classes don't have
addicts so to use these functions from

00:09:37.460 --> 00:09:37.470
addicts so to use these functions from
 

00:09:37.470 --> 00:09:39.670
addicts so to use these functions from
this class you have to say a string util

00:09:39.670 --> 00:09:39.680
this class you have to say a string util
 

00:09:39.680 --> 00:09:42.410
this class you have to say a string util
parenthesis which makes a new object

00:09:42.410 --> 00:09:42.420
parenthesis which makes a new object
 

00:09:42.420 --> 00:09:44.090
parenthesis which makes a new object
right I don't want a new object every

00:09:44.090 --> 00:09:44.100
right I don't want a new object every
 

00:09:44.100 --> 00:09:45.980
right I don't want a new object every
time I want it like this so I turn this

00:09:45.980 --> 00:09:45.990
time I want it like this so I turn this
 

00:09:45.990 --> 00:09:48.769
time I want it like this so I turn this
class into an object it's a little bit

00:09:48.769 --> 00:09:48.779
class into an object it's a little bit
 

00:09:48.779 --> 00:09:50.540
class into an object it's a little bit
of an improvement in in my insanity

00:09:50.540 --> 00:09:50.550
of an improvement in in my insanity
 

00:09:50.550 --> 00:09:52.519
of an improvement in in my insanity
right so I was creating an object every

00:09:52.519 --> 00:09:52.529
right so I was creating an object every
 

00:09:52.529 --> 00:09:53.630
right so I was creating an object every
time I wanted to call a function that's

00:09:53.630 --> 00:09:53.640
time I wanted to call a function that's
 

00:09:53.640 --> 00:09:54.430
time I wanted to call a function that's
crazy

00:09:54.430 --> 00:09:54.440
crazy
 

00:09:54.440 --> 00:09:57.860
crazy
but really in common I don't need an any

00:09:57.860 --> 00:09:57.870
but really in common I don't need an any
 

00:09:57.870 --> 00:10:00.139
but really in common I don't need an any
enclosing container at all because I

00:10:00.139 --> 00:10:00.149
enclosing container at all because I
 

00:10:00.149 --> 00:10:03.290
enclosing container at all because I
have top-level functions so this may

00:10:03.290 --> 00:10:03.300
have top-level functions so this may
 

00:10:03.300 --> 00:10:05.750
have top-level functions so this may
seem obvious like functions what are

00:10:05.750 --> 00:10:05.760
seem obvious like functions what are
 

00:10:05.760 --> 00:10:07.699
seem obvious like functions what are
they they're just declarations right but

00:10:07.699 --> 00:10:07.709
they they're just declarations right but
 

00:10:07.709 --> 00:10:09.470
they they're just declarations right but
some languages you know have them only

00:10:09.470 --> 00:10:09.480
some languages you know have them only
 

00:10:09.480 --> 00:10:11.150
some languages you know have them only
in classes and many people learn this

00:10:11.150 --> 00:10:11.160
in classes and many people learn this
 

00:10:11.160 --> 00:10:14.870
in classes and many people learn this
and rely on this so this is a lot more

00:10:14.870 --> 00:10:14.880
and rely on this so this is a lot more
 

00:10:14.880 --> 00:10:16.940
and rely on this so this is a lot more
of a cosmic way but it's so not great

00:10:16.940 --> 00:10:16.950
of a cosmic way but it's so not great
 

00:10:16.950 --> 00:10:20.210
of a cosmic way but it's so not great
and in terms of what you can achieve

00:10:20.210 --> 00:10:20.220
and in terms of what you can achieve
 

00:10:20.220 --> 00:10:22.009
and in terms of what you can achieve
with Collin because here you have two

00:10:22.009 --> 00:10:22.019
with Collin because here you have two
 

00:10:22.019 --> 00:10:25.040
with Collin because here you have two
overloads right so get first word is

00:10:25.040 --> 00:10:25.050
overloads right so get first word is
 

00:10:25.050 --> 00:10:27.949
overloads right so get first word is
supposed to parse a string find the

00:10:27.949 --> 00:10:27.959
supposed to parse a string find the
 

00:10:27.959 --> 00:10:29.780
supposed to parse a string find the
first space and take the first word in

00:10:29.780 --> 00:10:29.790
first space and take the first word in
 

00:10:29.790 --> 00:10:32.720
first space and take the first word in
your turn right but what if the safe

00:10:32.720 --> 00:10:32.730
your turn right but what if the safe
 

00:10:32.730 --> 00:10:35.240
your turn right but what if the safe
separator is not a space but a comma or

00:10:35.240 --> 00:10:35.250
separator is not a space but a comma or
 

00:10:35.250 --> 00:10:37.579
separator is not a space but a comma or
something so here is a more

00:10:37.579 --> 00:10:37.589
something so here is a more
 

00:10:37.589 --> 00:10:39.889
something so here is a more
full-featured version and then this is

00:10:39.889 --> 00:10:39.899
full-featured version and then this is
 

00:10:39.899 --> 00:10:41.660
full-featured version and then this is
how you call it actually in most

00:10:41.660 --> 00:10:41.670
how you call it actually in most
 

00:10:41.670 --> 00:10:44.660
how you call it actually in most
contexts right so what I wanted to

00:10:44.660 --> 00:10:44.670
contexts right so what I wanted to
 

00:10:44.670 --> 00:10:46.850
contexts right so what I wanted to
express here is just a default value in

00:10:46.850 --> 00:10:46.860
express here is just a default value in
 

00:10:46.860 --> 00:10:49.910
express here is just a default value in
Java we are used to using overloads for

00:10:49.910 --> 00:10:49.920
Java we are used to using overloads for
 

00:10:49.920 --> 00:10:52.490
Java we are used to using overloads for
this and also some people use nullable

00:10:52.490 --> 00:10:52.500
this and also some people use nullable
 

00:10:52.500 --> 00:10:54.949
this and also some people use nullable
parameters like pass and null here and

00:10:54.949 --> 00:10:54.959
parameters like pass and null here and
 

00:10:54.959 --> 00:10:57.290
parameters like pass and null here and
I'll give you a default value don't do

00:10:57.290 --> 00:10:57.300
I'll give you a default value don't do
 

00:10:57.300 --> 00:10:59.510
I'll give you a default value don't do
this in cosmic you don't need to so all

00:10:59.510 --> 00:10:59.520
this in cosmic you don't need to so all
 

00:10:59.520 --> 00:11:01.550
this in cosmic you don't need to so all
you need to do actually is simply

00:11:01.550 --> 00:11:01.560
you need to do actually is simply
 

00:11:01.560 --> 00:11:04.010
you need to do actually is simply
specify your default by default this

00:11:04.010 --> 00:11:04.020
specify your default by default this
 

00:11:04.020 --> 00:11:07.490
specify your default by default this
space here that's it all right so so

00:11:07.490 --> 00:11:07.500
space here that's it all right so so
 

00:11:07.500 --> 00:11:09.889
space here that's it all right so so
there is no need to emulate defaults

00:11:09.889 --> 00:11:09.899
there is no need to emulate defaults
 

00:11:09.899 --> 00:11:11.329
there is no need to emulate defaults
they are built into the language and

00:11:11.329 --> 00:11:11.339
they are built into the language and
 

00:11:11.339 --> 00:11:15.319
they are built into the language and
same for when you have many many default

00:11:15.319 --> 00:11:15.329
same for when you have many many default
 

00:11:15.329 --> 00:11:17.269
same for when you have many many default
parameters with different values like

00:11:17.269 --> 00:11:17.279
parameters with different values like
 

00:11:17.279 --> 00:11:19.400
parameters with different values like
multiple boolean's so on so forth you

00:11:19.400 --> 00:11:19.410
multiple boolean's so on so forth you
 

00:11:19.410 --> 00:11:23.510
multiple boolean's so on so forth you
can just use named parameter syntax to

00:11:23.510 --> 00:11:23.520
can just use named parameter syntax to
 

00:11:23.520 --> 00:11:25.160
can just use named parameter syntax to
express which of them you actually need

00:11:25.160 --> 00:11:25.170
express which of them you actually need
 

00:11:25.170 --> 00:11:26.870
express which of them you actually need
in all of them all the rest will be used

00:11:26.870 --> 00:11:26.880
in all of them all the rest will be used
 

00:11:26.880 --> 00:11:30.350
in all of them all the rest will be used
by default so this makes functions fewer

00:11:30.350 --> 00:11:30.360
by default so this makes functions fewer
 

00:11:30.360 --> 00:11:32.810
by default so this makes functions fewer
in the first place and then a lot more

00:11:32.810 --> 00:11:32.820
in the first place and then a lot more
 

00:11:32.820 --> 00:11:36.650
in the first place and then a lot more
expressive okay good with functions

00:11:36.650 --> 00:11:36.660
expressive okay good with functions
 

00:11:36.660 --> 00:11:40.009
expressive okay good with functions
right well actually this is kind of this

00:11:40.009 --> 00:11:40.019
right well actually this is kind of this
 

00:11:40.019 --> 00:11:41.840
right well actually this is kind of this
function is kind of midway between the

00:11:41.840 --> 00:11:41.850
function is kind of midway between the
 

00:11:41.850 --> 00:11:44.949
function is kind of midway between the
like the column style and the Java style

00:11:44.949 --> 00:11:44.959
like the column style and the Java style
 

00:11:44.959 --> 00:11:47.870
like the column style and the Java style
because it's actually working on strings

00:11:47.870 --> 00:11:47.880
because it's actually working on strings
 

00:11:47.880 --> 00:11:48.560
because it's actually working on strings
right there

00:11:48.560 --> 00:11:48.570
right there
 

00:11:48.570 --> 00:11:51.140
right there
much a good idea to put this into a

00:11:51.140 --> 00:11:51.150
much a good idea to put this into a
 

00:11:51.150 --> 00:11:54.290
much a good idea to put this into a
string class oh it's not because the

00:11:54.290 --> 00:11:54.300
string class oh it's not because the
 

00:11:54.300 --> 00:11:56.000
string class oh it's not because the
string class is not controlled by you we

00:11:56.000 --> 00:11:56.010
string class is not controlled by you we
 

00:11:56.010 --> 00:11:57.380
string class is not controlled by you we
can put everything into the string class

00:11:57.380 --> 00:11:57.390
can put everything into the string class
 

00:11:57.390 --> 00:12:00.740
can put everything into the string class
and you really want to keep this string

00:12:00.740 --> 00:12:00.750
and you really want to keep this string
 

00:12:00.750 --> 00:12:03.860
and you really want to keep this string
API minimal so what I would really like

00:12:03.860 --> 00:12:03.870
API minimal so what I would really like
 

00:12:03.870 --> 00:12:05.930
API minimal so what I would really like
to do or is something like this where I

00:12:05.930 --> 00:12:05.940
to do or is something like this where I
 

00:12:05.940 --> 00:12:09.080
to do or is something like this where I
can say my string get first word and

00:12:09.080 --> 00:12:09.090
can say my string get first word and
 

00:12:09.090 --> 00:12:11.930
can say my string get first word and
that's it right so it looks like a

00:12:11.930 --> 00:12:11.940
that's it right so it looks like a
 

00:12:11.940 --> 00:12:15.020
that's it right so it looks like a
method it's called an extension function

00:12:15.020 --> 00:12:15.030
method it's called an extension function
 

00:12:15.030 --> 00:12:17.210
method it's called an extension function
actually it's not sitting in string

00:12:17.210 --> 00:12:17.220
actually it's not sitting in string
 

00:12:17.220 --> 00:12:19.700
actually it's not sitting in string
class I didn't go into the JDK and alter

00:12:19.700 --> 00:12:19.710
class I didn't go into the JDK and alter
 

00:12:19.710 --> 00:12:22.580
class I didn't go into the JDK and alter
the class I can't control but so it

00:12:22.580 --> 00:12:22.590
the class I can't control but so it
 

00:12:22.590 --> 00:12:26.150
the class I can't control but so it
works like this so this is the mechanism

00:12:26.150 --> 00:12:26.160
works like this so this is the mechanism
 

00:12:26.160 --> 00:12:28.760
works like this so this is the mechanism
you can use I'll do it manually to

00:12:28.760 --> 00:12:28.770
you can use I'll do it manually to
 

00:12:28.770 --> 00:12:31.640
you can use I'll do it manually to
illustrate how we're here so I have a

00:12:31.640 --> 00:12:31.650
illustrate how we're here so I have a
 

00:12:31.650 --> 00:12:33.800
illustrate how we're here so I have a
receiver have type string now I don't

00:12:33.800 --> 00:12:33.810
receiver have type string now I don't
 

00:12:33.810 --> 00:12:34.910
receiver have type string now I don't
need this parameter anymore

00:12:34.910 --> 00:12:34.920
need this parameter anymore
 

00:12:34.920 --> 00:12:41.030
need this parameter anymore
and I can say this dot here and use my

00:12:41.030 --> 00:12:41.040
and I can say this dot here and use my
 

00:12:41.040 --> 00:12:44.420
and I can say this dot here and use my
this here or omit all of this on the

00:12:44.420 --> 00:12:44.430
this here or omit all of this on the
 

00:12:44.430 --> 00:12:46.820
this here or omit all of this on the
left-hand side so now I'll be able to

00:12:46.820 --> 00:12:46.830
left-hand side so now I'll be able to
 

00:12:46.830 --> 00:12:52.490
left-hand side so now I'll be able to
use it this way make sense I can do the

00:12:52.490 --> 00:12:52.500
use it this way make sense I can do the
 

00:12:52.500 --> 00:12:54.650
use it this way make sense I can do the
same with the property actually would be

00:12:54.650 --> 00:12:54.660
same with the property actually would be
 

00:12:54.660 --> 00:12:58.310
same with the property actually would be
very nice to do it this way just have

00:12:58.310 --> 00:12:58.320
very nice to do it this way just have
 

00:12:58.320 --> 00:13:01.250
very nice to do it this way just have
first word as a property name and you

00:13:01.250 --> 00:13:01.260
first word as a property name and you
 

00:13:01.260 --> 00:13:04.340
first word as a property name and you
can have an extension property of course

00:13:04.340 --> 00:13:04.350
can have an extension property of course
 

00:13:04.350 --> 00:13:06.020
can have an extension property of course
there will be no customization for the

00:13:06.020 --> 00:13:06.030
there will be no customization for the
 

00:13:06.030 --> 00:13:08.330
there will be no customization for the
separator but otherwise you're good to

00:13:08.330 --> 00:13:08.340
separator but otherwise you're good to
 

00:13:08.340 --> 00:13:12.170
separator but otherwise you're good to
go yep I'll just need to put a space

00:13:12.170 --> 00:13:12.180
go yep I'll just need to put a space
 

00:13:12.180 --> 00:13:14.960
go yep I'll just need to put a space
here and that's it so extension

00:13:14.960 --> 00:13:14.970
here and that's it so extension
 

00:13:14.970 --> 00:13:16.700
here and that's it so extension
functions extension properties it's

00:13:16.700 --> 00:13:16.710
functions extension properties it's
 

00:13:16.710 --> 00:13:17.990
functions extension properties it's
actually a very important idea it's not

00:13:17.990 --> 00:13:18.000
actually a very important idea it's not
 

00:13:18.000 --> 00:13:20.540
actually a very important idea it's not
only just convenience it allows you to

00:13:20.540 --> 00:13:20.550
only just convenience it allows you to
 

00:13:20.550 --> 00:13:23.630
only just convenience it allows you to
keep your classes really minimal so look

00:13:23.630 --> 00:13:23.640
keep your classes really minimal so look
 

00:13:23.640 --> 00:13:26.690
keep your classes really minimal so look
at the string class in cotton it's only

00:13:26.690 --> 00:13:26.700
at the string class in cotton it's only
 

00:13:26.700 --> 00:13:30.560
at the string class in cotton it's only
five methods if you compare that to Java

00:13:30.560 --> 00:13:30.570
five methods if you compare that to Java
 

00:13:30.570 --> 00:13:31.940
five methods if you compare that to Java
it will be screens and screens of

00:13:31.940 --> 00:13:31.950
it will be screens and screens of
 

00:13:31.950 --> 00:13:35.270
it will be screens and screens of
declarations so you can keep your API

00:13:35.270 --> 00:13:35.280
declarations so you can keep your API
 

00:13:35.280 --> 00:13:38.180
declarations so you can keep your API
minimal and all the utility functions

00:13:38.180 --> 00:13:38.190
minimal and all the utility functions
 

00:13:38.190 --> 00:13:39.950
minimal and all the utility functions
can be extensions can set in different

00:13:39.950 --> 00:13:39.960
can be extensions can set in different
 

00:13:39.960 --> 00:13:41.690
can be extensions can set in different
libraries can be modularized like this

00:13:41.690 --> 00:13:41.700
libraries can be modularized like this
 

00:13:41.700 --> 00:13:45.590
libraries can be modularized like this
and that's a very important tool for

00:13:45.590 --> 00:13:45.600
and that's a very important tool for
 

00:13:45.600 --> 00:13:51.090
and that's a very important tool for
designing api's do you have questions

00:13:51.090 --> 00:13:51.100
 

00:13:51.100 --> 00:13:57.030
okay I couldn't take them anyway okay

00:13:57.030 --> 00:13:57.040
okay I couldn't take them anyway okay
 

00:13:57.040 --> 00:14:00.150
okay I couldn't take them anyway okay
now let's all look at this here I'm

00:14:00.150 --> 00:14:00.160
now let's all look at this here I'm
 

00:14:00.160 --> 00:14:02.100
now let's all look at this here I'm
doing something very typical and

00:14:02.100 --> 00:14:02.110
doing something very typical and
 

00:14:02.110 --> 00:14:03.630
doing something very typical and
traversing a hierarchy so I have

00:14:03.630 --> 00:14:03.640
traversing a hierarchy so I have
 

00:14:03.640 --> 00:14:06.660
traversing a hierarchy so I have
containers and leaf elements continues

00:14:06.660 --> 00:14:06.670
containers and leaf elements continues
 

00:14:06.670 --> 00:14:08.010
containers and leaf elements continues
can be nested in one another leaf

00:14:08.010 --> 00:14:08.020
can be nested in one another leaf
 

00:14:08.020 --> 00:14:10.110
can be nested in one another leaf
elements sit there a leaf elements whole

00:14:10.110 --> 00:14:10.120
elements sit there a leaf elements whole
 

00:14:10.120 --> 00:14:11.820
elements sit there a leaf elements whole
text and I want to extract all the text

00:14:11.820 --> 00:14:11.830
text and I want to extract all the text
 

00:14:11.830 --> 00:14:15.780
text and I want to extract all the text
from this higher priest rate bird so my

00:14:15.780 --> 00:14:15.790
from this higher priest rate bird so my
 

00:14:15.790 --> 00:14:19.170
from this higher priest rate bird so my
classes are three lines of code not much

00:14:19.170 --> 00:14:19.180
classes are three lines of code not much
 

00:14:19.180 --> 00:14:20.490
classes are three lines of code not much
there's an element there's container

00:14:20.490 --> 00:14:20.500
there's an element there's container
 

00:14:20.500 --> 00:14:23.570
there's an element there's container
with the list of children there is add X

00:14:23.570 --> 00:14:23.580
with the list of children there is add X
 

00:14:23.580 --> 00:14:27.330
with the list of children there is add X
now I'm traversing this so I'm using

00:14:27.330 --> 00:14:27.340
now I'm traversing this so I'm using
 

00:14:27.340 --> 00:14:28.770
now I'm traversing this so I'm using
extension functions I'm using top-level

00:14:28.770 --> 00:14:28.780
extension functions I'm using top-level
 

00:14:28.780 --> 00:14:31.560
extension functions I'm using top-level
functions everything as I told you so

00:14:31.560 --> 00:14:31.570
functions everything as I told you so
 

00:14:31.570 --> 00:14:33.680
functions everything as I told you so
it's right but I don't like this code

00:14:33.680 --> 00:14:33.690
it's right but I don't like this code
 

00:14:33.690 --> 00:14:37.170
it's right but I don't like this code
why don't like it here to traverse a

00:14:37.170 --> 00:14:37.180
why don't like it here to traverse a
 

00:14:37.180 --> 00:14:40.380
why don't like it here to traverse a
hierarchy and your recursion right so I

00:14:40.380 --> 00:14:40.390
hierarchy and your recursion right so I
 

00:14:40.390 --> 00:14:42.990
hierarchy and your recursion right so I
need to pass the stringbuilder down the

00:14:42.990 --> 00:14:43.000
need to pass the stringbuilder down the
 

00:14:43.000 --> 00:14:45.510
need to pass the stringbuilder down the
stack and add to it as I'm going down

00:14:45.510 --> 00:14:45.520
stack and add to it as I'm going down
 

00:14:45.520 --> 00:14:50.250
stack and add to it as I'm going down
the tree but then I end up with a top

00:14:50.250 --> 00:14:50.260
the tree but then I end up with a top
 

00:14:50.260 --> 00:14:52.140
the tree but then I end up with a top
level function that's only needed by

00:14:52.140 --> 00:14:52.150
level function that's only needed by
 

00:14:52.150 --> 00:14:55.050
level function that's only needed by
this one here right so this one is not

00:14:55.050 --> 00:14:55.060
this one here right so this one is not
 

00:14:55.060 --> 00:14:57.660
this one here right so this one is not
really anywhere but inside this function

00:14:57.660 --> 00:14:57.670
really anywhere but inside this function
 

00:14:57.670 --> 00:15:00.600
really anywhere but inside this function
so what I'd really like to do is just

00:15:00.600 --> 00:15:00.610
so what I'd really like to do is just
 

00:15:00.610 --> 00:15:05.790
so what I'd really like to do is just
put it inside just go here and make it a

00:15:05.790 --> 00:15:05.800
put it inside just go here and make it a
 

00:15:05.800 --> 00:15:10.110
put it inside just go here and make it a
local function so it's again it's just

00:15:10.110 --> 00:15:10.120
local function so it's again it's just
 

00:15:10.120 --> 00:15:12.120
local function so it's again it's just
expressing that nobody else needs this

00:15:12.120 --> 00:15:12.130
expressing that nobody else needs this
 

00:15:12.130 --> 00:15:13.800
expressing that nobody else needs this
you don't need private helpers anymore a

00:15:13.800 --> 00:15:13.810
you don't need private helpers anymore a
 

00:15:13.810 --> 00:15:16.680
you don't need private helpers anymore a
look for local helpers and this can be

00:15:16.680 --> 00:15:16.690
look for local helpers and this can be
 

00:15:16.690 --> 00:15:18.570
look for local helpers and this can be
improved a little bit you can't actually

00:15:18.570 --> 00:15:18.580
improved a little bit you can't actually
 

00:15:18.580 --> 00:15:21.870
improved a little bit you can't actually
make use of closure so I can create my

00:15:21.870 --> 00:15:21.880
make use of closure so I can create my
 

00:15:21.880 --> 00:15:25.260
make use of closure so I can create my
string builder right here

00:15:25.260 --> 00:15:25.270
string builder right here
 

00:15:25.270 --> 00:15:27.750
string builder right here
and get rid of all this so I don't need

00:15:27.750 --> 00:15:27.760
and get rid of all this so I don't need
 

00:15:27.760 --> 00:15:31.320
and get rid of all this so I don't need
to return or take parameters here all I

00:15:31.320 --> 00:15:31.330
to return or take parameters here all I
 

00:15:31.330 --> 00:15:34.530
to return or take parameters here all I
need here is use whatever is declared

00:15:34.530 --> 00:15:34.540
need here is use whatever is declared
 

00:15:34.540 --> 00:15:39.660
need here is use whatever is declared
above and then I just do extract text of

00:15:39.660 --> 00:15:39.670
above and then I just do extract text of
 

00:15:39.670 --> 00:15:43.280
above and then I just do extract text of
e right here and return string builder

00:15:43.280 --> 00:15:43.290
e right here and return string builder
 

00:15:43.290 --> 00:15:45.480
e right here and return string builder
to string

00:15:45.480 --> 00:15:45.490
to string
 

00:15:45.490 --> 00:15:48.450
to string
extract text oh sorry it's an extension

00:15:48.450 --> 00:15:48.460
extract text oh sorry it's an extension
 

00:15:48.460 --> 00:15:51.170
extract text oh sorry it's an extension
function right

00:15:51.170 --> 00:15:51.180
 

00:15:51.180 --> 00:15:58.200
no sorry yeah so here has how goes like

00:15:58.200 --> 00:15:58.210
no sorry yeah so here has how goes like
 

00:15:58.210 --> 00:16:00.329
no sorry yeah so here has how goes like
you can turn something into a local

00:16:00.329 --> 00:16:00.339
you can turn something into a local
 

00:16:00.339 --> 00:16:02.730
you can turn something into a local
function and leverage closure so this

00:16:02.730 --> 00:16:02.740
function and leverage closure so this
 

00:16:02.740 --> 00:16:04.680
function and leverage closure so this
variable is declared outside my function

00:16:04.680 --> 00:16:04.690
variable is declared outside my function
 

00:16:04.690 --> 00:16:06.780
variable is declared outside my function
it's not accessible to anyone outside

00:16:06.780 --> 00:16:06.790
it's not accessible to anyone outside
 

00:16:06.790 --> 00:16:09.780
it's not accessible to anyone outside
the outer and I'm using here and that's

00:16:09.780 --> 00:16:09.790
the outer and I'm using here and that's
 

00:16:09.790 --> 00:16:10.400
the outer and I'm using here and that's
it

00:16:10.400 --> 00:16:10.410
it
 

00:16:10.410 --> 00:16:14.670
it
now local functions extension functions

00:16:14.670 --> 00:16:14.680
now local functions extension functions
 

00:16:14.680 --> 00:16:16.650
now local functions extension functions
to level functions default parameters

00:16:16.650 --> 00:16:16.660
to level functions default parameters
 

00:16:16.660 --> 00:16:18.750
to level functions default parameters
use these they will make your code nicer

00:16:18.750 --> 00:16:18.760
use these they will make your code nicer
 

00:16:18.760 --> 00:16:23.519
use these they will make your code nicer
now let's look at what's still there you

00:16:23.519 --> 00:16:23.529
now let's look at what's still there you
 

00:16:23.529 --> 00:16:27.510
now let's look at what's still there you
see gray code gray code is useless the

00:16:27.510 --> 00:16:27.520
see gray code gray code is useless the
 

00:16:27.520 --> 00:16:28.800
see gray code gray code is useless the
idea in the compiler show you that

00:16:28.800 --> 00:16:28.810
idea in the compiler show you that
 

00:16:28.810 --> 00:16:30.570
idea in the compiler show you that
something is not new there and it

00:16:30.570 --> 00:16:30.580
something is not new there and it
 

00:16:30.580 --> 00:16:33.030
something is not new there and it
actually isn't this gas is redundant

00:16:33.030 --> 00:16:33.040
actually isn't this gas is redundant
 

00:16:33.040 --> 00:16:36.090
actually isn't this gas is redundant
because we have this is check here right

00:16:36.090 --> 00:16:36.100
because we have this is check here right
 

00:16:36.100 --> 00:16:38.550
because we have this is check here right
so you simply can remove this and I

00:16:38.550 --> 00:16:38.560
so you simply can remove this and I
 

00:16:38.560 --> 00:16:40.230
so you simply can remove this and I
don't know if you see it oh yeah you do

00:16:40.230 --> 00:16:40.240
don't know if you see it oh yeah you do
 

00:16:40.240 --> 00:16:43.710
don't know if you see it oh yeah you do
but the text variable has gone green why

00:16:43.710 --> 00:16:43.720
but the text variable has gone green why
 

00:16:43.720 --> 00:16:45.240
but the text variable has gone green why
it's green it's because the compiler can

00:16:45.240 --> 00:16:45.250
it's green it's because the compiler can
 

00:16:45.250 --> 00:16:47.370
it's green it's because the compiler can
figure out the cast for you it's

00:16:47.370 --> 00:16:47.380
figure out the cast for you it's
 

00:16:47.380 --> 00:16:49.110
figure out the cast for you it's
actually much safer it's not only

00:16:49.110 --> 00:16:49.120
actually much safer it's not only
 

00:16:49.120 --> 00:16:50.970
actually much safer it's not only
convened I'm really annoyed with my

00:16:50.970 --> 00:16:50.980
convened I'm really annoyed with my
 

00:16:50.980 --> 00:16:53.100
convened I'm really annoyed with my
casts all of all over the place right so

00:16:53.100 --> 00:16:53.110
casts all of all over the place right so
 

00:16:53.110 --> 00:16:57.180
casts all of all over the place right so
I know it's text why don't you know well

00:16:57.180 --> 00:16:57.190
I know it's text why don't you know well
 

00:16:57.190 --> 00:17:00.060
I know it's text why don't you know well
now it knows and actually you don't need

00:17:00.060 --> 00:17:00.070
now it knows and actually you don't need
 

00:17:00.070 --> 00:17:03.810
now it knows and actually you don't need
this variable either because it's the

00:17:03.810 --> 00:17:03.820
this variable either because it's the
 

00:17:03.820 --> 00:17:06.679
this variable either because it's the
only usage right the same thing here and

00:17:06.679 --> 00:17:06.689
only usage right the same thing here and
 

00:17:06.689 --> 00:17:09.620
only usage right the same thing here and
then my container can be inline as well

00:17:09.620 --> 00:17:09.630
then my container can be inline as well
 

00:17:09.630 --> 00:17:13.799
then my container can be inline as well
so here it is I can use smart casts it

00:17:13.799 --> 00:17:13.809
so here it is I can use smart casts it
 

00:17:13.809 --> 00:17:15.780
so here it is I can use smart casts it
makes a quick code safer more concise

00:17:15.780 --> 00:17:15.790
makes a quick code safer more concise
 

00:17:15.790 --> 00:17:18.240
makes a quick code safer more concise
and actually it makes all the casts that

00:17:18.240 --> 00:17:18.250
and actually it makes all the casts that
 

00:17:18.250 --> 00:17:20.429
and actually it makes all the casts that
still are in your program meaningful so

00:17:20.429 --> 00:17:20.439
still are in your program meaningful so
 

00:17:20.439 --> 00:17:22.949
still are in your program meaningful so
when you see an as operator in khasinau

00:17:22.949 --> 00:17:22.959
when you see an as operator in khasinau
 

00:17:22.959 --> 00:17:25.319
when you see an as operator in khasinau
you know it means something it's not

00:17:25.319 --> 00:17:25.329
you know it means something it's not
 

00:17:25.329 --> 00:17:27.270
you know it means something it's not
just a useless compliment a compliment

00:17:27.270 --> 00:17:27.280
just a useless compliment a compliment
 

00:17:27.280 --> 00:17:30.840
just a useless compliment a compliment
to the is Jack above all so this thing

00:17:30.840 --> 00:17:30.850
to the is Jack above all so this thing
 

00:17:30.850 --> 00:17:34.980
to the is Jack above all so this thing
here it's kind of stupid because what

00:17:34.980 --> 00:17:34.990
here it's kind of stupid because what
 

00:17:34.990 --> 00:17:36.480
here it's kind of stupid because what
I'm doing I'm just applying the same

00:17:36.480 --> 00:17:36.490
I'm doing I'm just applying the same
 

00:17:36.490 --> 00:17:38.520
I'm doing I'm just applying the same
function to everything and it's a single

00:17:38.520 --> 00:17:38.530
function to everything and it's a single
 

00:17:38.530 --> 00:17:40.320
function to everything and it's a single
function so what what I want to do is

00:17:40.320 --> 00:17:40.330
function so what what I want to do is
 

00:17:40.330 --> 00:17:44.390
function so what what I want to do is
something like this it's a little bit

00:17:44.390 --> 00:17:44.400
something like this it's a little bit
 

00:17:44.400 --> 00:17:48.480
something like this it's a little bit
nicer looking and then let's look at

00:17:48.480 --> 00:17:48.490
nicer looking and then let's look at
 

00:17:48.490 --> 00:17:50.790
nicer looking and then let's look at
what we have we're traversing a

00:17:50.790 --> 00:17:50.800
what we have we're traversing a
 

00:17:50.800 --> 00:17:52.919
what we have we're traversing a
hierarchy I have my leaves I have my

00:17:52.919 --> 00:17:52.929
hierarchy I have my leaves I have my
 

00:17:52.929 --> 00:17:55.530
hierarchy I have my leaves I have my
containers and that's what I want to

00:17:55.530 --> 00:17:55.540
containers and that's what I want to
 

00:17:55.540 --> 00:17:57.150
containers and that's what I want to
express right I'm checking different

00:17:57.150 --> 00:17:57.160
express right I'm checking different
 

00:17:57.160 --> 00:18:00.180
express right I'm checking different
cases so to do that it's a lot nicer to

00:18:00.180 --> 00:18:00.190
cases so to do that it's a lot nicer to
 

00:18:00.190 --> 00:18:04.050
cases so to do that it's a lot nicer to
use a when it when statement

00:18:04.050 --> 00:18:04.060
 

00:18:04.060 --> 00:18:08.470
switchin types right here but there's an

00:18:08.470 --> 00:18:08.480
switchin types right here but there's an
 

00:18:08.480 --> 00:18:10.720
switchin types right here but there's an
annoying thing about it and it's again

00:18:10.720 --> 00:18:10.730
annoying thing about it and it's again
 

00:18:10.730 --> 00:18:13.330
annoying thing about it and it's again
coming from my old habits declaring at

00:18:13.330 --> 00:18:13.340
coming from my old habits declaring at
 

00:18:13.340 --> 00:18:15.760
coming from my old habits declaring at
close hierarchy I have only containers

00:18:15.760 --> 00:18:15.770
close hierarchy I have only containers
 

00:18:15.770 --> 00:18:17.290
close hierarchy I have only containers
and text right I don't have anything

00:18:17.290 --> 00:18:17.300
and text right I don't have anything
 

00:18:17.300 --> 00:18:21.370
and text right I don't have anything
else but now I have this pretty annoying

00:18:21.370 --> 00:18:21.380
else but now I have this pretty annoying
 

00:18:21.380 --> 00:18:23.890
else but now I have this pretty annoying
Al's case right here why because the

00:18:23.890 --> 00:18:23.900
Al's case right here why because the
 

00:18:23.900 --> 00:18:25.840
Al's case right here why because the
compiler has no idea I don't have

00:18:25.840 --> 00:18:25.850
compiler has no idea I don't have
 

00:18:25.850 --> 00:18:27.760
compiler has no idea I don't have
anything but containers of text it's

00:18:27.760 --> 00:18:27.770
anything but containers of text it's
 

00:18:27.770 --> 00:18:29.730
anything but containers of text it's
just an abstract class and I have some

00:18:29.730 --> 00:18:29.740
just an abstract class and I have some
 

00:18:29.740 --> 00:18:33.820
just an abstract class and I have some
cases there but you can actually express

00:18:33.820 --> 00:18:33.830
cases there but you can actually express
 

00:18:33.830 --> 00:18:36.820
cases there but you can actually express
this in common where it's sealed I can

00:18:36.820 --> 00:18:36.830
this in common where it's sealed I can
 

00:18:36.830 --> 00:18:38.860
this in common where it's sealed I can
have a seal class which means all the

00:18:38.860 --> 00:18:38.870
have a seal class which means all the
 

00:18:38.870 --> 00:18:40.330
have a seal class which means all the
subclasses are known you can declare

00:18:40.330 --> 00:18:40.340
subclasses are known you can declare
 

00:18:40.340 --> 00:18:43.120
subclasses are known you can declare
them outside this file and this way the

00:18:43.120 --> 00:18:43.130
them outside this file and this way the
 

00:18:43.130 --> 00:18:44.380
them outside this file and this way the
idea in that compiler know that this

00:18:44.380 --> 00:18:44.390
idea in that compiler know that this
 

00:18:44.390 --> 00:18:47.620
idea in that compiler know that this
else is useless so we went from like

00:18:47.620 --> 00:18:47.630
else is useless so we went from like
 

00:18:47.630 --> 00:18:50.320
else is useless so we went from like
almost two screens of code to less than

00:18:50.320 --> 00:18:50.330
almost two screens of code to less than
 

00:18:50.330 --> 00:18:53.350
almost two screens of code to less than
one simply applying the idioms of carbon

00:18:53.350 --> 00:18:53.360
one simply applying the idioms of carbon
 

00:18:53.360 --> 00:18:57.010
one simply applying the idioms of carbon
to this code you have questions I'm

00:18:57.010 --> 00:18:57.020
to this code you have questions I'm
 

00:18:57.020 --> 00:19:04.600
to this code you have questions I'm
sorry all right so now let's just

00:19:04.600 --> 00:19:04.610
sorry all right so now let's just
 

00:19:04.610 --> 00:19:06.400
sorry all right so now let's just
continue with this exercise and look at

00:19:06.400 --> 00:19:06.410
continue with this exercise and look at
 

00:19:06.410 --> 00:19:08.590
continue with this exercise and look at
some some more examples of expressions

00:19:08.590 --> 00:19:08.600
some some more examples of expressions
 

00:19:08.600 --> 00:19:11.380
some some more examples of expressions
that are written like with old habits in

00:19:11.380 --> 00:19:11.390
that are written like with old habits in
 

00:19:11.390 --> 00:19:14.310
that are written like with old habits in
mind and we'll try to transfer them

00:19:14.310 --> 00:19:14.320
mind and we'll try to transfer them
 

00:19:14.320 --> 00:19:17.260
mind and we'll try to transfer them
under something better so first thing

00:19:17.260 --> 00:19:17.270
under something better so first thing
 

00:19:17.270 --> 00:19:19.410
under something better so first thing
that really stands out here is VAR I

00:19:19.410 --> 00:19:19.420
that really stands out here is VAR I
 

00:19:19.420 --> 00:19:23.620
that really stands out here is VAR I
can't say never use var words are useful

00:19:23.620 --> 00:19:23.630
can't say never use var words are useful
 

00:19:23.630 --> 00:19:26.530
can't say never use var words are useful
mutable variables can be used for many

00:19:26.530 --> 00:19:26.540
mutable variables can be used for many
 

00:19:26.540 --> 00:19:30.550
mutable variables can be used for many
nice things but it's kind of discouraged

00:19:30.550 --> 00:19:30.560
nice things but it's kind of discouraged
 

00:19:30.560 --> 00:19:32.680
nice things but it's kind of discouraged
if you need a var you need a very good

00:19:32.680 --> 00:19:32.690
if you need a var you need a very good
 

00:19:32.690 --> 00:19:34.240
if you need a var you need a very good
reason here is no good reason

00:19:34.240 --> 00:19:34.250
reason here is no good reason
 

00:19:34.250 --> 00:19:37.330
reason here is no good reason
using eval definitely then here let's

00:19:37.330 --> 00:19:37.340
using eval definitely then here let's
 

00:19:37.340 --> 00:19:39.910
using eval definitely then here let's
look at these three it's repetition

00:19:39.910 --> 00:19:39.920
look at these three it's repetition
 

00:19:39.920 --> 00:19:41.290
look at these three it's repetition
repetition is ugly

00:19:41.290 --> 00:19:41.300
repetition is ugly
 

00:19:41.300 --> 00:19:43.390
repetition is ugly
repetition is error-prone especially if

00:19:43.390 --> 00:19:43.400
repetition is error-prone especially if
 

00:19:43.400 --> 00:19:45.250
repetition is error-prone especially if
this was not a single name but many

00:19:45.250 --> 00:19:45.260
this was not a single name but many
 

00:19:45.260 --> 00:19:48.130
this was not a single name but many
things change so I would like to get rid

00:19:48.130 --> 00:19:48.140
things change so I would like to get rid
 

00:19:48.140 --> 00:19:50.500
things change so I would like to get rid
of this repetition what I can do is say

00:19:50.500 --> 00:19:50.510
of this repetition what I can do is say
 

00:19:50.510 --> 00:19:55.410
of this repetition what I can do is say
with X does anyone remember Pascal

00:19:55.410 --> 00:19:55.420
with X does anyone remember Pascal
 

00:19:55.420 --> 00:19:59.680
with X does anyone remember Pascal
Pascal anyone oh good good I started in

00:19:59.680 --> 00:19:59.690
Pascal anyone oh good good I started in
 

00:19:59.690 --> 00:20:02.740
Pascal anyone oh good good I started in
Pascal almost so it had this wid thing

00:20:02.740 --> 00:20:02.750
Pascal almost so it had this wid thing
 

00:20:02.750 --> 00:20:04.000
Pascal almost so it had this wid thing
which was a building construction

00:20:04.000 --> 00:20:04.010
which was a building construction
 

00:20:04.010 --> 00:20:06.730
which was a building construction
calling it's a function you can use it

00:20:06.730 --> 00:20:06.740
calling it's a function you can use it
 

00:20:06.740 --> 00:20:08.800
calling it's a function you can use it
and here we can get rid of all the ax

00:20:08.800 --> 00:20:08.810
and here we can get rid of all the ax
 

00:20:08.810 --> 00:20:13.360
and here we can get rid of all the ax
things here just like this and now it

00:20:13.360 --> 00:20:13.370
things here just like this and now it
 

00:20:13.370 --> 00:20:15.100
things here just like this and now it
looks even more C of it right I'm just

00:20:15.100 --> 00:20:15.110
looks even more C of it right I'm just
 

00:20:15.110 --> 00:20:16.480
looks even more C of it right I'm just
assigning to the same variables don't do

00:20:16.480 --> 00:20:16.490
assigning to the same variables don't do
 

00:20:16.490 --> 00:20:18.940
assigning to the same variables don't do
that

00:20:18.940 --> 00:20:18.950
 

00:20:18.950 --> 00:20:22.060
okay so now have a print line with

00:20:22.060 --> 00:20:22.070
okay so now have a print line with
 

00:20:22.070 --> 00:20:23.740
okay so now have a print line with
strength plus some things drink plus

00:20:23.740 --> 00:20:23.750
strength plus some things drink plus
 

00:20:23.750 --> 00:20:25.720
strength plus some things drink plus
some things drink plus something it's

00:20:25.720 --> 00:20:25.730
some things drink plus something it's
 

00:20:25.730 --> 00:20:27.820
some things drink plus something it's
awkward most languages now have string

00:20:27.820 --> 00:20:27.830
awkward most languages now have string
 

00:20:27.830 --> 00:20:30.159
awkward most languages now have string
interpolation colony has that as well so

00:20:30.159 --> 00:20:30.169
interpolation colony has that as well so
 

00:20:30.169 --> 00:20:34.169
interpolation colony has that as well so
what do you actually need here is this

00:20:34.169 --> 00:20:34.179
 

00:20:34.179 --> 00:20:38.560
okay done with this one import things

00:20:38.560 --> 00:20:38.570
okay done with this one import things
 

00:20:38.570 --> 00:20:40.749
okay done with this one import things
into your scope with with you string

00:20:40.749 --> 00:20:40.759
into your scope with with you string
 

00:20:40.759 --> 00:20:43.930
into your scope with with you string
interpolation it's nice now here I'm

00:20:43.930 --> 00:20:43.940
interpolation it's nice now here I'm
 

00:20:43.940 --> 00:20:49.570
interpolation it's nice now here I'm
creating a map the old way I can kind of

00:20:49.570 --> 00:20:49.580
creating a map the old way I can kind of
 

00:20:49.580 --> 00:20:52.690
creating a map the old way I can kind of
make it a little nicer like this by

00:20:52.690 --> 00:20:52.700
make it a little nicer like this by
 

00:20:52.700 --> 00:20:55.180
make it a little nicer like this by
using my operators but it's really much

00:20:55.180 --> 00:20:55.190
using my operators but it's really much
 

00:20:55.190 --> 00:20:57.600
using my operators but it's really much
nicer if I just use a builder function

00:20:57.600 --> 00:20:57.610
nicer if I just use a builder function
 

00:20:57.610 --> 00:21:02.430
nicer if I just use a builder function
so what I can do here is replace all my

00:21:02.430 --> 00:21:02.440
so what I can do here is replace all my
 

00:21:02.440 --> 00:21:04.749
so what I can do here is replace all my
map put things with pairs

00:21:04.749 --> 00:21:04.759
map put things with pairs
 

00:21:04.759 --> 00:21:12.810
map put things with pairs
oh not pairs but pair sorry

00:21:12.810 --> 00:21:12.820
oh not pairs but pair sorry
 

00:21:12.820 --> 00:21:15.100
oh not pairs but pair sorry
typing when when talking is difficult

00:21:15.100 --> 00:21:15.110
typing when when talking is difficult
 

00:21:15.110 --> 00:21:17.080
typing when when talking is difficult
yeah so so a map can be constructed of

00:21:17.080 --> 00:21:17.090
yeah so so a map can be constructed of
 

00:21:17.090 --> 00:21:19.509
yeah so so a map can be constructed of
pairs right at Navis only said if

00:21:19.509 --> 00:21:19.519
pairs right at Navis only said if
 

00:21:19.519 --> 00:21:21.159
pairs right at Navis only said if
there's from key to Bellevue

00:21:21.159 --> 00:21:21.169
there's from key to Bellevue
 

00:21:21.169 --> 00:21:23.379
there's from key to Bellevue
well actually pairs are kind of

00:21:23.379 --> 00:21:23.389
well actually pairs are kind of
 

00:21:23.389 --> 00:21:25.960
well actually pairs are kind of
redundant in this so we're usually

00:21:25.960 --> 00:21:25.970
redundant in this so we're usually
 

00:21:25.970 --> 00:21:29.799
redundant in this so we're usually
usually using the two function here it's

00:21:29.799 --> 00:21:29.809
usually using the two function here it's
 

00:21:29.809 --> 00:21:31.480
usually using the two function here it's
not a built-in operator just library

00:21:31.480 --> 00:21:31.490
not a built-in operator just library
 

00:21:31.490 --> 00:21:33.220
not a built-in operator just library
function here so this is how you create

00:21:33.220 --> 00:21:33.230
function here so this is how you create
 

00:21:33.230 --> 00:21:35.230
function here so this is how you create
a map and when you want to traverse the

00:21:35.230 --> 00:21:35.240
a map and when you want to traverse the
 

00:21:35.240 --> 00:21:40.090
a map and when you want to traverse the
map you can say here key and value and

00:21:40.090 --> 00:21:40.100
map you can say here key and value and
 

00:21:40.100 --> 00:21:45.669
map you can say here key and value and
just have you variables like this which

00:21:45.669 --> 00:21:45.679
just have you variables like this which
 

00:21:45.679 --> 00:21:47.740
just have you variables like this which
makes for loops a lot more concise

00:21:47.740 --> 00:21:47.750
makes for loops a lot more concise
 

00:21:47.750 --> 00:21:51.940
makes for loops a lot more concise
well this example of code with my if

00:21:51.940 --> 00:21:51.950
well this example of code with my if
 

00:21:51.950 --> 00:21:54.430
well this example of code with my if
statement is something I really hated by

00:21:54.430 --> 00:21:54.440
statement is something I really hated by
 

00:21:54.440 --> 00:21:58.990
statement is something I really hated by
my code in Java because it's like these

00:21:58.990 --> 00:21:59.000
my code in Java because it's like these
 

00:21:59.000 --> 00:22:02.110
my code in Java because it's like these
assignments here they all fall apart so

00:22:02.110 --> 00:22:02.120
assignments here they all fall apart so
 

00:22:02.120 --> 00:22:05.799
assignments here they all fall apart so
easily I really like to do things like

00:22:05.799 --> 00:22:05.809
easily I really like to do things like
 

00:22:05.809 --> 00:22:09.399
easily I really like to do things like
this in Kotlin so if and many other

00:22:09.399 --> 00:22:09.409
this in Kotlin so if and many other
 

00:22:09.409 --> 00:22:11.950
this in Kotlin so if and many other
things are actually expressions this is

00:22:11.950 --> 00:22:11.960
things are actually expressions this is
 

00:22:11.960 --> 00:22:14.169
things are actually expressions this is
something pre unfamiliar for the C

00:22:14.169 --> 00:22:14.179
something pre unfamiliar for the C
 

00:22:14.179 --> 00:22:18.039
something pre unfamiliar for the C
language family we are used to dividing

00:22:18.039 --> 00:22:18.049
language family we are used to dividing
 

00:22:18.049 --> 00:22:19.389
language family we are used to dividing
our color into statements and

00:22:19.389 --> 00:22:19.399
our color into statements and
 

00:22:19.399 --> 00:22:21.310
our color into statements and
expressions write statements are things

00:22:21.310 --> 00:22:21.320
expressions write statements are things
 

00:22:21.320 --> 00:22:22.990
expressions write statements are things
that have effects expressions are things

00:22:22.990 --> 00:22:23.000
that have effects expressions are things
 

00:22:23.000 --> 00:22:26.049
that have effects expressions are things
that have values so you expressions two

00:22:26.049 --> 00:22:26.059
that have values so you expressions two
 

00:22:26.059 --> 00:22:28.149
that have values so you expressions two
variables and write statements to assign

00:22:28.149 --> 00:22:28.159
variables and write statements to assign
 

00:22:28.159 --> 00:22:30.430
variables and write statements to assign
things to things so Colin

00:22:30.430 --> 00:22:30.440
things to things so Colin
 

00:22:30.440 --> 00:22:32.529
things to things so Colin
is halfway between the this procedural

00:22:32.529 --> 00:22:32.539
is halfway between the this procedural
 

00:22:32.539 --> 00:22:34.240
is halfway between the this procedural
tradition and a functional tradition

00:22:34.240 --> 00:22:34.250
tradition and a functional tradition
 

00:22:34.250 --> 00:22:36.490
tradition and a functional tradition
that we have a lot more expressions than

00:22:36.490 --> 00:22:36.500
that we have a lot more expressions than
 

00:22:36.500 --> 00:22:38.980
that we have a lot more expressions than
you're used to in other languages so you

00:22:38.980 --> 00:22:38.990
you're used to in other languages so you
 

00:22:38.990 --> 00:22:40.539
you're used to in other languages so you
can do this here and of course you don't

00:22:40.539 --> 00:22:40.549
can do this here and of course you don't
 

00:22:40.549 --> 00:22:45.129
can do this here and of course you don't
have to use a bar you don't have to make

00:22:45.129 --> 00:22:45.139
have to use a bar you don't have to make
 

00:22:45.139 --> 00:22:46.570
have to use a bar you don't have to make
it a different line you can assign it

00:22:46.570 --> 00:22:46.580
it a different line you can assign it
 

00:22:46.580 --> 00:22:47.139
it a different line you can assign it
right away

00:22:47.139 --> 00:22:47.149
right away
 

00:22:47.149 --> 00:22:50.769
right away
so if expression make it nicer by the

00:22:50.769 --> 00:22:50.779
so if expression make it nicer by the
 

00:22:50.779 --> 00:22:52.480
so if expression make it nicer by the
way the result of the expression is the

00:22:52.480 --> 00:22:52.490
way the result of the expression is the
 

00:22:52.490 --> 00:22:55.960
way the result of the expression is the
last thing in the block so the same for

00:22:55.960 --> 00:22:55.970
last thing in the block so the same for
 

00:22:55.970 --> 00:23:00.369
last thing in the block so the same for
when when is not simply switch get case

00:23:00.369 --> 00:23:00.379
when when is not simply switch get case
 

00:23:00.379 --> 00:23:03.850
when when is not simply switch get case
on steroids it's largely importantly an

00:23:03.850 --> 00:23:03.860
on steroids it's largely importantly an
 

00:23:03.860 --> 00:23:09.190
on steroids it's largely importantly an
expression so you can also do it like

00:23:09.190 --> 00:23:09.200
expression so you can also do it like
 

00:23:09.200 --> 00:23:11.710
expression so you can also do it like
this right so not many returns here but

00:23:11.710 --> 00:23:11.720
this right so not many returns here but
 

00:23:11.720 --> 00:23:14.200
this right so not many returns here but
one return here will be a lot nicer once

00:23:14.200 --> 00:23:14.210
one return here will be a lot nicer once
 

00:23:14.210 --> 00:23:15.340
one return here will be a lot nicer once
you don't have to repeat yourself of

00:23:15.340 --> 00:23:15.350
you don't have to repeat yourself of
 

00:23:15.350 --> 00:23:18.820
you don't have to repeat yourself of
course this much and you can say even

00:23:18.820 --> 00:23:18.830
course this much and you can say even
 

00:23:18.830 --> 00:23:23.379
course this much and you can say even
this by the way if you want to check if

00:23:23.379 --> 00:23:23.389
this by the way if you want to check if
 

00:23:23.389 --> 00:23:24.789
this by the way if you want to check if
some things I don't even don't do it

00:23:24.789 --> 00:23:24.799
some things I don't even don't do it
 

00:23:24.799 --> 00:23:27.210
some things I don't even don't do it
like me it's only for demo purposes

00:23:27.210 --> 00:23:27.220
like me it's only for demo purposes
 

00:23:27.220 --> 00:23:33.399
like me it's only for demo purposes
don't try this at home it will hurt yeah

00:23:33.399 --> 00:23:33.409
don't try this at home it will hurt yeah
 

00:23:33.409 --> 00:23:36.100
don't try this at home it will hurt yeah
so this one can be further simplified

00:23:36.100 --> 00:23:36.110
so this one can be further simplified
 

00:23:36.110 --> 00:23:39.789
so this one can be further simplified
like this so again you're trying to

00:23:39.789 --> 00:23:39.799
like this so again you're trying to
 

00:23:39.799 --> 00:23:41.379
like this so again you're trying to
remove the noise when you see code like

00:23:41.379 --> 00:23:41.389
remove the noise when you see code like
 

00:23:41.389 --> 00:23:43.110
remove the noise when you see code like
this just try to get rid of the noise

00:23:43.110 --> 00:23:43.120
this just try to get rid of the noise
 

00:23:43.120 --> 00:23:48.009
this just try to get rid of the noise
noise is harmful for your brain last

00:23:48.009 --> 00:23:48.019
noise is harmful for your brain last
 

00:23:48.019 --> 00:23:50.110
noise is harmful for your brain last
thing just a quick demo of what you do

00:23:50.110 --> 00:23:50.120
thing just a quick demo of what you do
 

00:23:50.120 --> 00:23:51.850
thing just a quick demo of what you do
with null ability so these question

00:23:51.850 --> 00:23:51.860
with null ability so these question
 

00:23:51.860 --> 00:23:53.710
with null ability so these question
marks puts familiar with noble types in

00:23:53.710 --> 00:23:53.720
marks puts familiar with noble types in
 

00:23:53.720 --> 00:23:56.470
marks puts familiar with noble types in
common how many people I'll go really

00:23:56.470 --> 00:23:56.480
common how many people I'll go really
 

00:23:56.480 --> 00:23:59.590
common how many people I'll go really
really quick so you can have novel types

00:23:59.590 --> 00:23:59.600
really quick so you can have novel types
 

00:23:59.600 --> 00:24:01.779
really quick so you can have novel types
and compiler makes you do things like

00:24:01.779 --> 00:24:01.789
and compiler makes you do things like
 

00:24:01.789 --> 00:24:02.230
and compiler makes you do things like
this

00:24:02.230 --> 00:24:02.240
this
 

00:24:02.240 --> 00:24:05.169
this
so it's an error now string is nullable

00:24:05.169 --> 00:24:05.179
so it's an error now string is nullable
 

00:24:05.179 --> 00:24:07.419
so it's an error now string is nullable
you can do reference it you can either

00:24:07.419 --> 00:24:07.429
you can do reference it you can either
 

00:24:07.429 --> 00:24:10.269
you can do reference it you can either
do this which says just say fleed

00:24:10.269 --> 00:24:10.279
do this which says just say fleed
 

00:24:10.279 --> 00:24:12.369
do this which says just say fleed
reference me which you by the way can do

00:24:12.369 --> 00:24:12.379
reference me which you by the way can do
 

00:24:12.379 --> 00:24:16.019
reference me which you by the way can do
here as well right so you don't have to

00:24:16.019 --> 00:24:16.029
here as well right so you don't have to
 

00:24:16.029 --> 00:24:19.419
here as well right so you don't have to
write any around it and you can actually

00:24:19.419 --> 00:24:19.429
write any around it and you can actually
 

00:24:19.429 --> 00:24:22.269
write any around it and you can actually
simplify it like this another nice thing

00:24:22.269 --> 00:24:22.279
simplify it like this another nice thing
 

00:24:22.279 --> 00:24:25.769
simplify it like this another nice thing
is that you can use a an Elvis operator

00:24:25.769 --> 00:24:25.779
is that you can use a an Elvis operator
 

00:24:25.779 --> 00:24:30.040
is that you can use a an Elvis operator
like this

00:24:30.040 --> 00:24:30.050
 

00:24:30.050 --> 00:24:32.950
so - to simplify your like longer if

00:24:32.950 --> 00:24:32.960
so - to simplify your like longer if
 

00:24:32.960 --> 00:24:34.570
so - to simplify your like longer if
statements into something and this is

00:24:34.570 --> 00:24:34.580
statements into something and this is
 

00:24:34.580 --> 00:24:37.420
statements into something and this is
kind of curious because this is

00:24:37.420 --> 00:24:37.430
kind of curious because this is
 

00:24:37.430 --> 00:24:38.950
kind of curious because this is
definitely an expression position right

00:24:38.950 --> 00:24:38.960
definitely an expression position right
 

00:24:38.960 --> 00:24:42.340
definitely an expression position right
so how Elvis works Elvis takes an

00:24:42.340 --> 00:24:42.350
so how Elvis works Elvis takes an
 

00:24:42.350 --> 00:24:43.540
so how Elvis works Elvis takes an
expression to the left-hand side of

00:24:43.540 --> 00:24:43.550
expression to the left-hand side of
 

00:24:43.550 --> 00:24:46.900
expression to the left-hand side of
string asks are you annul really nicely

00:24:46.900 --> 00:24:46.910
string asks are you annul really nicely
 

00:24:46.910 --> 00:24:50.800
string asks are you annul really nicely
and then if it's a null value it's the

00:24:50.800 --> 00:24:50.810
and then if it's a null value it's the
 

00:24:50.810 --> 00:24:52.510
and then if it's a null value it's the
right hand side but the right hand side

00:24:52.510 --> 00:24:52.520
right hand side but the right hand side
 

00:24:52.520 --> 00:24:53.590
right hand side but the right hand side
has to be an expression right it's

00:24:53.590 --> 00:24:53.600
has to be an expression right it's
 

00:24:53.600 --> 00:24:56.170
has to be an expression right it's
basically it's supposed to be a default

00:24:56.170 --> 00:24:56.180
basically it's supposed to be a default
 

00:24:56.180 --> 00:24:58.780
basically it's supposed to be a default
so like if you are now on the left hand

00:24:58.780 --> 00:24:58.790
so like if you are now on the left hand
 

00:24:58.790 --> 00:25:00.550
so like if you are now on the left hand
side like use a default on the right

00:25:00.550 --> 00:25:00.560
side like use a default on the right
 

00:25:00.560 --> 00:25:02.560
side like use a default on the right
hand side but your default can be just a

00:25:02.560 --> 00:25:02.570
hand side but your default can be just a
 

00:25:02.570 --> 00:25:05.770
hand side but your default can be just a
richer what which means that you don't

00:25:05.770 --> 00:25:05.780
richer what which means that you don't
 

00:25:05.780 --> 00:25:07.900
richer what which means that you don't
compute any value there you'll just jump

00:25:07.900 --> 00:25:07.910
compute any value there you'll just jump
 

00:25:07.910 --> 00:25:10.450
compute any value there you'll just jump
out of the function that's a quite

00:25:10.450 --> 00:25:10.460
out of the function that's a quite
 

00:25:10.460 --> 00:25:12.190
out of the function that's a quite
interesting thing from the type system

00:25:12.190 --> 00:25:12.200
interesting thing from the type system
 

00:25:12.200 --> 00:25:13.750
interesting thing from the type system
standpoint but I'm not giving a lecture

00:25:13.750 --> 00:25:13.760
standpoint but I'm not giving a lecture
 

00:25:13.760 --> 00:25:18.850
standpoint but I'm not giving a lecture
here I'm doing a demo ok we're good with

00:25:18.850 --> 00:25:18.860
here I'm doing a demo ok we're good with
 

00:25:18.860 --> 00:25:21.310
here I'm doing a demo ok we're good with
expressions let's look at some

00:25:21.310 --> 00:25:21.320
expressions let's look at some
 

00:25:21.320 --> 00:25:24.610
expressions let's look at some
functional style so people very often

00:25:24.610 --> 00:25:24.620
functional style so people very often
 

00:25:24.620 --> 00:25:26.700
functional style so people very often
refer to carbon as a functional language

00:25:26.700 --> 00:25:26.710
refer to carbon as a functional language
 

00:25:26.710 --> 00:25:30.160
refer to carbon as a functional language
I don't think it is actually I think

00:25:30.160 --> 00:25:30.170
I don't think it is actually I think
 

00:25:30.170 --> 00:25:32.290
I don't think it is actually I think
Cullen is a multi-paradigm language that

00:25:32.290 --> 00:25:32.300
Cullen is a multi-paradigm language that
 

00:25:32.300 --> 00:25:34.120
Cullen is a multi-paradigm language that
supports functional style you don't have

00:25:34.120 --> 00:25:34.130
supports functional style you don't have
 

00:25:34.130 --> 00:25:36.160
supports functional style you don't have
to write functional in carbon but it's

00:25:36.160 --> 00:25:36.170
to write functional in carbon but it's
 

00:25:36.170 --> 00:25:39.460
to write functional in carbon but it's
often times very nice to do it so let's

00:25:39.460 --> 00:25:39.470
often times very nice to do it so let's
 

00:25:39.470 --> 00:25:43.210
often times very nice to do it so let's
have a look at this so in in my java old

00:25:43.210 --> 00:25:43.220
have a look at this so in in my java old
 

00:25:43.220 --> 00:25:46.090
have a look at this so in in my java old
days in mind i wrote this code which

00:25:46.090 --> 00:25:46.100
days in mind i wrote this code which
 

00:25:46.100 --> 00:25:48.700
days in mind i wrote this code which
just goes over a list of numbers and

00:25:48.700 --> 00:25:48.710
just goes over a list of numbers and
 

00:25:48.710 --> 00:25:51.970
just goes over a list of numbers and
picks those that are divided divided by

00:25:51.970 --> 00:25:51.980
picks those that are divided divided by
 

00:25:51.980 --> 00:25:55.630
picks those that are divided divided by
16 and then converts them to hex right

00:25:55.630 --> 00:25:55.640
16 and then converts them to hex right
 

00:25:55.640 --> 00:25:59.680
16 and then converts them to hex right
so so what it actually does is filter

00:25:59.680 --> 00:25:59.690
so so what it actually does is filter
 

00:25:59.690 --> 00:26:03.940
so so what it actually does is filter
map write map is this one and filter is

00:26:03.940 --> 00:26:03.950
map write map is this one and filter is
 

00:26:03.950 --> 00:26:06.880
map write map is this one and filter is
this one so what I can do even with the

00:26:06.880 --> 00:26:06.890
this one so what I can do even with the
 

00:26:06.890 --> 00:26:11.500
this one so what I can do even with the
hell of my ID I can do this so newer

00:26:11.500 --> 00:26:11.510
hell of my ID I can do this so newer
 

00:26:11.510 --> 00:26:14.110
hell of my ID I can do this so newer
versions of all programming languages

00:26:14.110 --> 00:26:14.120
versions of all programming languages
 

00:26:14.120 --> 00:26:15.970
versions of all programming languages
have something like this it can

00:26:15.970 --> 00:26:15.980
have something like this it can
 

00:26:15.980 --> 00:26:19.120
have something like this it can
definitely leverage this so this filter

00:26:19.120 --> 00:26:19.130
definitely leverage this so this filter
 

00:26:19.130 --> 00:26:21.730
definitely leverage this so this filter
is a function this lambda is a function

00:26:21.730 --> 00:26:21.740
is a function this lambda is a function
 

00:26:21.740 --> 00:26:23.980
is a function this lambda is a function
value you don't have by the way to

00:26:23.980 --> 00:26:23.990
value you don't have by the way to
 

00:26:23.990 --> 00:26:26.710
value you don't have by the way to
declare it as a variable it just get

00:26:26.710 --> 00:26:26.720
declare it as a variable it just get
 

00:26:26.720 --> 00:26:30.940
declare it as a variable it just get
can't get rid of it so that's a lambda

00:26:30.940 --> 00:26:30.950
can't get rid of it so that's a lambda
 

00:26:30.950 --> 00:26:34.780
can't get rid of it so that's a lambda
parameter colin has some nice semi semi

00:26:34.780 --> 00:26:34.790
parameter colin has some nice semi semi
 

00:26:34.790 --> 00:26:36.520
parameter colin has some nice semi semi
functional things like even you can say

00:26:36.520 --> 00:26:36.530
functional things like even you can say
 

00:26:36.530 --> 00:26:38.560
functional things like even you can say
anywhere in your code you can say also

00:26:38.560 --> 00:26:38.570
anywhere in your code you can say also
 

00:26:38.570 --> 00:26:41.380
anywhere in your code you can say also
you have this value also do this for me

00:26:41.380 --> 00:26:41.390
you have this value also do this for me
 

00:26:41.390 --> 00:26:44.409
you have this value also do this for me
please like prints

00:26:44.409 --> 00:26:44.419
please like prints
 

00:26:44.419 --> 00:26:47.680
please like prints
if this list for me and then proceed

00:26:47.680 --> 00:26:47.690
if this list for me and then proceed
 

00:26:47.690 --> 00:26:49.029
if this list for me and then proceed
with what you were doing like never mind

00:26:49.029 --> 00:26:49.039
with what you were doing like never mind
 

00:26:49.039 --> 00:26:51.399
with what you were doing like never mind
this it's just the debug output or some

00:26:51.399 --> 00:26:51.409
this it's just the debug output or some
 

00:26:51.409 --> 00:26:53.200
this it's just the debug output or some
side effect one to insert here side

00:26:53.200 --> 00:26:53.210
side effect one to insert here side
 

00:26:53.210 --> 00:26:54.460
side effect one to insert here side
effects are not very functional in the

00:26:54.460 --> 00:26:54.470
effects are not very functional in the
 

00:26:54.470 --> 00:26:56.169
effects are not very functional in the
one hand on the other hand this is very

00:26:56.169 --> 00:26:56.179
one hand on the other hand this is very
 

00:26:56.179 --> 00:26:57.999
one hand on the other hand this is very
handy for debugging you don't have to

00:26:57.999 --> 00:26:58.009
handy for debugging you don't have to
 

00:26:58.009 --> 00:26:59.470
handy for debugging you don't have to
break your chain apartment so it's free

00:26:59.470 --> 00:26:59.480
break your chain apartment so it's free
 

00:26:59.480 --> 00:27:02.980
break your chain apartment so it's free
so use also use let's use run and so on

00:27:02.980 --> 00:27:02.990
so use also use let's use run and so on
 

00:27:02.990 --> 00:27:07.090
so use also use let's use run and so on
so forth there was one very deep thing

00:27:07.090 --> 00:27:07.100
so forth there was one very deep thing
 

00:27:07.100 --> 00:27:10.149
so forth there was one very deep thing
about functional abstractions in non

00:27:10.149 --> 00:27:10.159
about functional abstractions in non
 

00:27:10.159 --> 00:27:12.430
about functional abstractions in non
functional languages when I do something

00:27:12.430 --> 00:27:12.440
functional languages when I do something
 

00:27:12.440 --> 00:27:13.720
functional languages when I do something
like this I have my repeat function

00:27:13.720 --> 00:27:13.730
like this I have my repeat function
 

00:27:13.730 --> 00:27:15.639
like this I have my repeat function
right here right so so so what it does

00:27:15.639 --> 00:27:15.649
right here right so so so what it does
 

00:27:15.649 --> 00:27:17.560
right here right so so so what it does
it takes a number of times I want to

00:27:17.560 --> 00:27:17.570
it takes a number of times I want to
 

00:27:17.570 --> 00:27:19.419
it takes a number of times I want to
repeat something and this something is a

00:27:19.419 --> 00:27:19.429
repeat something and this something is a
 

00:27:19.429 --> 00:27:21.430
repeat something and this something is a
function by the way you don't have to

00:27:21.430 --> 00:27:21.440
function by the way you don't have to
 

00:27:21.440 --> 00:27:23.560
function by the way you don't have to
invent your own function interface every

00:27:23.560 --> 00:27:23.570
invent your own function interface every
 

00:27:23.570 --> 00:27:25.899
invent your own function interface every
time just use the function types here

00:27:25.899 --> 00:27:25.909
time just use the function types here
 

00:27:25.909 --> 00:27:27.369
time just use the function types here
it's a function that takes an int every

00:27:27.369 --> 00:27:27.379
it's a function that takes an int every
 

00:27:27.379 --> 00:27:29.109
it's a function that takes an int every
time as a unit your end is something you

00:27:29.109 --> 00:27:29.119
time as a unit your end is something you
 

00:27:29.119 --> 00:27:31.720
time as a unit your end is something you
don't care about then it simply repeats

00:27:31.720 --> 00:27:31.730
don't care about then it simply repeats
 

00:27:31.730 --> 00:27:36.489
don't care about then it simply repeats
it right so when I say repeat I'm always

00:27:36.489 --> 00:27:36.499
it right so when I say repeat I'm always
 

00:27:36.499 --> 00:27:40.060
it right so when I say repeat I'm always
very much conscious about like what's

00:27:40.060 --> 00:27:40.070
very much conscious about like what's
 

00:27:40.070 --> 00:27:44.049
very much conscious about like what's
gonna cost me right so it's a function

00:27:44.049 --> 00:27:44.059
gonna cost me right so it's a function
 

00:27:44.059 --> 00:27:47.379
gonna cost me right so it's a function
it takes a lambda as a parameter so it's

00:27:47.379 --> 00:27:47.389
it takes a lambda as a parameter so it's
 

00:27:47.389 --> 00:27:50.049
it takes a lambda as a parameter so it's
actually just another parameter the

00:27:50.049 --> 00:27:50.059
actually just another parameter the
 

00:27:50.059 --> 00:27:51.430
actually just another parameter the
calling custom is to write it outside

00:27:51.430 --> 00:27:51.440
calling custom is to write it outside
 

00:27:51.440 --> 00:27:53.019
calling custom is to write it outside
the parentheses because it looks more

00:27:53.019 --> 00:27:53.029
the parentheses because it looks more
 

00:27:53.029 --> 00:27:55.989
the parentheses because it looks more
like a language construct like this but

00:27:55.989 --> 00:27:55.999
like a language construct like this but
 

00:27:55.999 --> 00:27:59.889
like a language construct like this but
then okay I'm running this I have to

00:27:59.889 --> 00:27:59.899
then okay I'm running this I have to
 

00:27:59.899 --> 00:28:03.519
then okay I'm running this I have to
create a lambda object right I have to

00:28:03.519 --> 00:28:03.529
create a lambda object right I have to
 

00:28:03.529 --> 00:28:05.139
create a lambda object right I have to
create lambda object every time I do

00:28:05.139 --> 00:28:05.149
create lambda object every time I do
 

00:28:05.149 --> 00:28:07.450
create lambda object every time I do
anything like this so there is a cost to

00:28:07.450 --> 00:28:07.460
anything like this so there is a cost to
 

00:28:07.460 --> 00:28:09.129
anything like this so there is a cost to
this abstraction it's nice code I can

00:28:09.129 --> 00:28:09.139
this abstraction it's nice code I can
 

00:28:09.139 --> 00:28:11.950
this abstraction it's nice code I can
reuse things I can raise level of

00:28:11.950 --> 00:28:11.960
reuse things I can raise level of
 

00:28:11.960 --> 00:28:14.379
reuse things I can raise level of
abstraction in my code but there is at

00:28:14.379 --> 00:28:14.389
abstraction in my code but there is at
 

00:28:14.389 --> 00:28:17.739
abstraction in my code but there is at
all on that actually in covent you can

00:28:17.739 --> 00:28:17.749
all on that actually in covent you can
 

00:28:17.749 --> 00:28:20.649
all on that actually in covent you can
very often get rid of the sole of

00:28:20.649 --> 00:28:20.659
very often get rid of the sole of
 

00:28:20.659 --> 00:28:23.169
very often get rid of the sole of
creating lambdas lambda objects for you

00:28:23.169 --> 00:28:23.179
creating lambdas lambda objects for you
 

00:28:23.179 --> 00:28:25.659
creating lambdas lambda objects for you
but just using inline functions when I

00:28:25.659 --> 00:28:25.669
but just using inline functions when I
 

00:28:25.669 --> 00:28:28.090
but just using inline functions when I
say inline my code doesn't change right

00:28:28.090 --> 00:28:28.100
say inline my code doesn't change right
 

00:28:28.100 --> 00:28:30.879
say inline my code doesn't change right
so here nothing happened at the call

00:28:30.879 --> 00:28:30.889
so here nothing happened at the call
 

00:28:30.889 --> 00:28:35.169
so here nothing happened at the call
site that it can see but if I say show

00:28:35.169 --> 00:28:35.179
site that it can see but if I say show
 

00:28:35.179 --> 00:28:40.299
site that it can see but if I say show
calling bytecode and just D compile this

00:28:40.299 --> 00:28:40.309
calling bytecode and just D compile this
 

00:28:40.309 --> 00:28:42.549
calling bytecode and just D compile this
into Java just to scare you a little bit

00:28:42.549 --> 00:28:42.559
into Java just to scare you a little bit
 

00:28:42.559 --> 00:28:47.499
into Java just to scare you a little bit
it was much yeah of an easy talk so far

00:28:47.499 --> 00:28:47.509
it was much yeah of an easy talk so far
 

00:28:47.509 --> 00:28:51.430
it was much yeah of an easy talk so far
so if I do this here it goes it's a

00:28:51.430 --> 00:28:51.440
so if I do this here it goes it's a
 

00:28:51.440 --> 00:28:54.640
so if I do this here it goes it's a
simple for loop

00:28:54.640 --> 00:28:54.650
 

00:28:54.650 --> 00:28:58.340
where did my lambda go well the compiler

00:28:58.340 --> 00:28:58.350
where did my lambda go well the compiler
 

00:28:58.350 --> 00:29:00.560
where did my lambda go well the compiler
simply optimized it away you don't need

00:29:00.560 --> 00:29:00.570
simply optimized it away you don't need
 

00:29:00.570 --> 00:29:03.920
simply optimized it away you don't need
a lambda right so if you if you simply

00:29:03.920 --> 00:29:03.930
a lambda right so if you if you simply
 

00:29:03.930 --> 00:29:05.510
a lambda right so if you if you simply
have your loop here and you inline

00:29:05.510 --> 00:29:05.520
have your loop here and you inline
 

00:29:05.520 --> 00:29:07.640
have your loop here and you inline
everything you end up with a loop that's

00:29:07.640 --> 00:29:07.650
everything you end up with a loop that's
 

00:29:07.650 --> 00:29:13.130
everything you end up with a loop that's
it so the big difference in the mindset

00:29:13.130 --> 00:29:13.140
it so the big difference in the mindset
 

00:29:13.140 --> 00:29:14.750
it so the big difference in the mindset
when you go from the java programming

00:29:14.750 --> 00:29:14.760
when you go from the java programming
 

00:29:14.760 --> 00:29:16.430
when you go from the java programming
language to cuddlin programming language

00:29:16.430 --> 00:29:16.440
language to cuddlin programming language
 

00:29:16.440 --> 00:29:18.500
language to cuddlin programming language
is that you're still use lambdas but

00:29:18.500 --> 00:29:18.510
is that you're still use lambdas but
 

00:29:18.510 --> 00:29:19.910
is that you're still use lambdas but
some of your lambdas are really free and

00:29:19.910 --> 00:29:19.920
some of your lambdas are really free and
 

00:29:19.920 --> 00:29:22.760
some of your lambdas are really free and
by the way these all are free to so many

00:29:22.760 --> 00:29:22.770
by the way these all are free to so many
 

00:29:22.770 --> 00:29:24.350
by the way these all are free to so many
many lambdas in the standard library are

00:29:24.350 --> 00:29:24.360
many lambdas in the standard library are
 

00:29:24.360 --> 00:29:27.020
many lambdas in the standard library are
free abstractions you don't have to pay

00:29:27.020 --> 00:29:27.030
free abstractions you don't have to pay
 

00:29:27.030 --> 00:29:29.180
free abstractions you don't have to pay
for calling them it's just code

00:29:29.180 --> 00:29:29.190
for calling them it's just code
 

00:29:29.190 --> 00:29:32.660
for calling them it's just code
generated for you so functional in

00:29:32.660 --> 00:29:32.670
generated for you so functional in
 

00:29:32.670 --> 00:29:34.970
generated for you so functional in
Catalan is not only convenient but also

00:29:34.970 --> 00:29:34.980
Catalan is not only convenient but also
 

00:29:34.980 --> 00:29:39.160
Catalan is not only convenient but also
quite cheap speaking of cheap by the way

00:29:39.160 --> 00:29:39.170
quite cheap speaking of cheap by the way
 

00:29:39.170 --> 00:29:43.580
quite cheap speaking of cheap by the way
let's look at this example so here I'm

00:29:43.580 --> 00:29:43.590
let's look at this example so here I'm
 

00:29:43.590 --> 00:29:45.980
let's look at this example so here I'm
trying to do a parallel computation well

00:29:45.980 --> 00:29:45.990
trying to do a parallel computation well
 

00:29:45.990 --> 00:29:48.290
trying to do a parallel computation well
it's a stupid sample nobody does

00:29:48.290 --> 00:29:48.300
it's a stupid sample nobody does
 

00:29:48.300 --> 00:29:50.150
it's a stupid sample nobody does
parallel computations and bear thread so

00:29:50.150 --> 00:29:50.160
parallel computations and bear thread so
 

00:29:50.160 --> 00:29:51.800
parallel computations and bear thread so
and so forth but I want to illustrate a

00:29:51.800 --> 00:29:51.810
and so forth but I want to illustrate a
 

00:29:51.810 --> 00:29:54.680
and so forth but I want to illustrate a
point so what i'm doing here is again

00:29:54.680 --> 00:29:54.690
point so what i'm doing here is again
 

00:29:54.690 --> 00:29:57.980
point so what i'm doing here is again
with my old habits in mind I'm creating

00:29:57.980 --> 00:29:57.990
with my old habits in mind I'm creating
 

00:29:57.990 --> 00:30:03.890
with my old habits in mind I'm creating
a hundred thousand threads a hundred

00:30:03.890 --> 00:30:03.900
a hundred thousand threads a hundred
 

00:30:03.900 --> 00:30:05.720
a hundred thousand threads a hundred
thousand threads each of which does some

00:30:05.720 --> 00:30:05.730
thousand threads each of which does some
 

00:30:05.730 --> 00:30:08.180
thousand threads each of which does some
work actually sleeps for one second and

00:30:08.180 --> 00:30:08.190
work actually sleeps for one second and
 

00:30:08.190 --> 00:30:09.740
work actually sleeps for one second and
just prints number and then I have to

00:30:09.740 --> 00:30:09.750
just prints number and then I have to
 

00:30:09.750 --> 00:30:13.120
just prints number and then I have to
join all these threads to my main friend

00:30:13.120 --> 00:30:13.130
join all these threads to my main friend
 

00:30:13.130 --> 00:30:18.260
join all these threads to my main friend
so if I run this oh it was an exception

00:30:18.260 --> 00:30:18.270
so if I run this oh it was an exception
 

00:30:18.270 --> 00:30:22.640
so if I run this oh it was an exception
or was that the Java laying out of

00:30:22.640 --> 00:30:22.650
or was that the Java laying out of
 

00:30:22.650 --> 00:30:26.030
or was that the Java laying out of
memory error basically what it's telling

00:30:26.030 --> 00:30:26.040
memory error basically what it's telling
 

00:30:26.040 --> 00:30:29.690
memory error basically what it's telling
me hey you cannot create a hundred

00:30:29.690 --> 00:30:29.700
me hey you cannot create a hundred
 

00:30:29.700 --> 00:30:32.630
me hey you cannot create a hundred
thousand threads are you crazy there

00:30:32.630 --> 00:30:32.640
thousand threads are you crazy there
 

00:30:32.640 --> 00:30:36.230
thousand threads are you crazy there
it's a hundred thousand stacks it

00:30:36.230 --> 00:30:36.240
it's a hundred thousand stacks it
 

00:30:36.240 --> 00:30:39.950
it's a hundred thousand stacks it
doesn't fit into memory just get

00:30:39.950 --> 00:30:39.960
doesn't fit into memory just get
 

00:30:39.960 --> 00:30:43.610
doesn't fit into memory just get
reasonable and that's there like OS

00:30:43.610 --> 00:30:43.620
reasonable and that's there like OS
 

00:30:43.620 --> 00:30:45.830
reasonable and that's there like OS
threads are not cheap you have to

00:30:45.830 --> 00:30:45.840
threads are not cheap you have to
 

00:30:45.840 --> 00:30:47.960
threads are not cheap you have to
allocate resources for threads so you

00:30:47.960 --> 00:30:47.970
allocate resources for threads so you
 

00:30:47.970 --> 00:30:49.670
allocate resources for threads so you
don't do such things early things with

00:30:49.670 --> 00:30:49.680
don't do such things early things with
 

00:30:49.680 --> 00:30:53.390
don't do such things early things with
threads but I have this example down for

00:30:53.390 --> 00:30:53.400
threads but I have this example down for
 

00:30:53.400 --> 00:30:54.050
threads but I have this example down for
coroutines

00:30:54.050 --> 00:30:54.060
coroutines
 

00:30:54.060 --> 00:30:58.700
coroutines
who knows about quoting Tsukasa oh good

00:30:58.700 --> 00:30:58.710
who knows about quoting Tsukasa oh good
 

00:30:58.710 --> 00:31:01.020
who knows about quoting Tsukasa oh good
who uses them in production

00:31:01.020 --> 00:31:01.030
who uses them in production
 

00:31:01.030 --> 00:31:04.120
who uses them in production
okay soon enough you all will be using

00:31:04.120 --> 00:31:04.130
okay soon enough you all will be using
 

00:31:04.130 --> 00:31:06.070
okay soon enough you all will be using
them I'm sure so I have a look here it's

00:31:06.070 --> 00:31:06.080
them I'm sure so I have a look here it's
 

00:31:06.080 --> 00:31:09.280
them I'm sure so I have a look here it's
very much the same code so I'll just put

00:31:09.280 --> 00:31:09.290
very much the same code so I'll just put
 

00:31:09.290 --> 00:31:11.560
very much the same code so I'll just put
a side-by-side here very much the same

00:31:11.560 --> 00:31:11.570
a side-by-side here very much the same
 

00:31:11.570 --> 00:31:15.130
a side-by-side here very much the same
code but instead of threads here I'm

00:31:15.130 --> 00:31:15.140
code but instead of threads here I'm
 

00:31:15.140 --> 00:31:19.000
code but instead of threads here I'm
creating async tasks which are using

00:31:19.000 --> 00:31:19.010
creating async tasks which are using
 

00:31:19.010 --> 00:31:21.039
creating async tasks which are using
co-routines underneath so I'm still

00:31:21.039 --> 00:31:21.049
co-routines underneath so I'm still
 

00:31:21.049 --> 00:31:22.870
co-routines underneath so I'm still
waiting for one second and printing and

00:31:22.870 --> 00:31:22.880
waiting for one second and printing and
 

00:31:22.880 --> 00:31:26.890
waiting for one second and printing and
if I run this there is no out of memory

00:31:26.890 --> 00:31:26.900
if I run this there is no out of memory
 

00:31:26.900 --> 00:31:29.500
if I run this there is no out of memory
it's bringing all the numbers and I'm

00:31:29.500 --> 00:31:29.510
it's bringing all the numbers and I'm
 

00:31:29.510 --> 00:31:30.539
it's bringing all the numbers and I'm
good

00:31:30.539 --> 00:31:30.549
good
 

00:31:30.549 --> 00:31:34.590
good
so again Cullen introduced coroutines as

00:31:34.590 --> 00:31:34.600
so again Cullen introduced coroutines as
 

00:31:34.600 --> 00:31:37.030
so again Cullen introduced coroutines as
means of making your a synchronous

00:31:37.030 --> 00:31:37.040
means of making your a synchronous
 

00:31:37.040 --> 00:31:40.180
means of making your a synchronous
computations nicer and that works but

00:31:40.180 --> 00:31:40.190
computations nicer and that works but
 

00:31:40.190 --> 00:31:42.880
computations nicer and that works but
what's the cost of that so the cost of

00:31:42.880 --> 00:31:42.890
what's the cost of that so the cost of
 

00:31:42.890 --> 00:31:45.010
what's the cost of that so the cost of
that is at least cheaper than having a

00:31:45.010 --> 00:31:45.020
that is at least cheaper than having a
 

00:31:45.020 --> 00:31:47.049
that is at least cheaper than having a
thread for each computation of course

00:31:47.049 --> 00:31:47.059
thread for each computation of course
 

00:31:47.059 --> 00:31:49.000
thread for each computation of course
nobody does that exactly but still like

00:31:49.000 --> 00:31:49.010
nobody does that exactly but still like
 

00:31:49.010 --> 00:31:51.940
nobody does that exactly but still like
or genes are very cheap you can spin off

00:31:51.940 --> 00:31:51.950
or genes are very cheap you can spin off
 

00:31:51.950 --> 00:31:54.220
or genes are very cheap you can spin off
like a hundred thousand coroutines

00:31:54.220 --> 00:31:54.230
like a hundred thousand coroutines
 

00:31:54.230 --> 00:31:56.320
like a hundred thousand coroutines
milling core genes and doesn't cost you

00:31:56.320 --> 00:31:56.330
milling core genes and doesn't cost you
 

00:31:56.330 --> 00:31:58.810
milling core genes and doesn't cost you
nearly as much as anything like the

00:31:58.810 --> 00:31:58.820
nearly as much as anything like the
 

00:31:58.820 --> 00:32:00.460
nearly as much as anything like the
battle threads let me illustrate

00:32:00.460 --> 00:32:00.470
battle threads let me illustrate
 

00:32:00.470 --> 00:32:03.150
battle threads let me illustrate
something or genes are really good for

00:32:03.150 --> 00:32:03.160
something or genes are really good for
 

00:32:03.160 --> 00:32:10.770
something or genes are really good for
right here so here is a legacy interface

00:32:10.770 --> 00:32:10.780
right here so here is a legacy interface
 

00:32:10.780 --> 00:32:13.570
right here so here is a legacy interface
or I don't know or am ordering interface

00:32:13.570 --> 00:32:13.580
or I don't know or am ordering interface
 

00:32:13.580 --> 00:32:17.260
or I don't know or am ordering interface
whatever so what we very often have to

00:32:17.260 --> 00:32:17.270
whatever so what we very often have to
 

00:32:17.270 --> 00:32:19.990
whatever so what we very often have to
do to make things a synchronous or make

00:32:19.990 --> 00:32:20.000
do to make things a synchronous or make
 

00:32:20.000 --> 00:32:22.360
do to make things a synchronous or make
things like reverse our dependencies

00:32:22.360 --> 00:32:22.370
things like reverse our dependencies
 

00:32:22.370 --> 00:32:26.230
things like reverse our dependencies
Lorentz force is called X right so just

00:32:26.230 --> 00:32:26.240
Lorentz force is called X right so just
 

00:32:26.240 --> 00:32:28.330
Lorentz force is called X right so just
ask me to do something I'll do it for

00:32:28.330 --> 00:32:28.340
ask me to do something I'll do it for
 

00:32:28.340 --> 00:32:29.530
ask me to do something I'll do it for
you and I'll let you know when I'm done

00:32:29.530 --> 00:32:29.540
you and I'll let you know when I'm done
 

00:32:29.540 --> 00:32:33.130
you and I'll let you know when I'm done
so here I have my mock service a request

00:32:33.130 --> 00:32:33.140
so here I have my mock service a request
 

00:32:33.140 --> 00:32:37.030
so here I have my mock service a request
and a callback function that's passed to

00:32:37.030 --> 00:32:37.040
and a callback function that's passed to
 

00:32:37.040 --> 00:32:39.520
and a callback function that's passed to
it so when the work in the comments are

00:32:39.520 --> 00:32:39.530
it so when the work in the comments are
 

00:32:39.530 --> 00:32:40.630
it so when the work in the comments are
done

00:32:40.630 --> 00:32:40.640
done
 

00:32:40.640 --> 00:32:44.110
done
I'm calling the callback and just

00:32:44.110 --> 00:32:44.120
I'm calling the callback and just
 

00:32:44.120 --> 00:32:46.240
I'm calling the callback and just
passing my answer there right so that's

00:32:46.240 --> 00:32:46.250
passing my answer there right so that's
 

00:32:46.250 --> 00:32:47.770
passing my answer there right so that's
that's alright it's working for for

00:32:47.770 --> 00:32:47.780
that's alright it's working for for
 

00:32:47.780 --> 00:32:50.980
that's alright it's working for for
everyone right but this is what the code

00:32:50.980 --> 00:32:50.990
everyone right but this is what the code
 

00:32:50.990 --> 00:32:52.480
everyone right but this is what the code
looks like when I want to exchange

00:32:52.480 --> 00:32:52.490
looks like when I want to exchange
 

00:32:52.490 --> 00:32:55.419
looks like when I want to exchange
messages between two services so I just

00:32:55.419 --> 00:32:55.429
messages between two services so I just
 

00:32:55.429 --> 00:32:58.210
messages between two services so I just
want to basically send two messages in

00:32:58.210 --> 00:32:58.220
want to basically send two messages in
 

00:32:58.220 --> 00:33:00.909
want to basically send two messages in
sequence and here's what I have to have

00:33:00.909 --> 00:33:00.919
sequence and here's what I have to have
 

00:33:00.919 --> 00:33:04.419
sequence and here's what I have to have
to do first request then a callback this

00:33:04.419 --> 00:33:04.429
to do first request then a callback this
 

00:33:04.429 --> 00:33:06.190
to do first request then a callback this
is the result of the request I printed

00:33:06.190 --> 00:33:06.200
is the result of the request I printed
 

00:33:06.200 --> 00:33:09.220
is the result of the request I printed
then next request inside that callback

00:33:09.220 --> 00:33:09.230
then next request inside that callback
 

00:33:09.230 --> 00:33:11.740
then next request inside that callback
and then print inside so you see the

00:33:11.740 --> 00:33:11.750
and then print inside so you see the
 

00:33:11.750 --> 00:33:13.700
and then print inside so you see the
staircase right here right

00:33:13.700 --> 00:33:13.710
staircase right here right
 

00:33:13.710 --> 00:33:17.450
staircase right here right
one step oh sorry one step two steps

00:33:17.450 --> 00:33:17.460
one step oh sorry one step two steps
 

00:33:17.460 --> 00:33:19.910
one step oh sorry one step two steps
three steps and you can actually get

00:33:19.910 --> 00:33:19.920
three steps and you can actually get
 

00:33:19.920 --> 00:33:23.000
three steps and you can actually get
quite deep down this staircase which is

00:33:23.000 --> 00:33:23.010
quite deep down this staircase which is
 

00:33:23.010 --> 00:33:26.120
quite deep down this staircase which is
not nice so what I would really love to

00:33:26.120 --> 00:33:26.130
not nice so what I would really love to
 

00:33:26.130 --> 00:33:28.010
not nice so what I would really love to
do is something a lot more

00:33:28.010 --> 00:33:28.020
do is something a lot more
 

00:33:28.020 --> 00:33:29.840
do is something a lot more
straightforward but so this is kind of

00:33:29.840 --> 00:33:29.850
straightforward but so this is kind of
 

00:33:29.850 --> 00:33:32.570
straightforward but so this is kind of
tolerable but what if just imagine what

00:33:32.570 --> 00:33:32.580
tolerable but what if just imagine what
 

00:33:32.580 --> 00:33:36.140
tolerable but what if just imagine what
if you needed to do like n coals just a

00:33:36.140 --> 00:33:36.150
if you needed to do like n coals just a
 

00:33:36.150 --> 00:33:39.710
if you needed to do like n coals just a
number like make a list of coals so this

00:33:39.710 --> 00:33:39.720
number like make a list of coals so this
 

00:33:39.720 --> 00:33:42.410
number like make a list of coals so this
is the code I came up with which isn't

00:33:42.410 --> 00:33:42.420
is the code I came up with which isn't
 

00:33:42.420 --> 00:33:43.820
is the code I came up with which isn't
nice at all so I definitely need

00:33:43.820 --> 00:33:43.830
nice at all so I definitely need
 

00:33:43.830 --> 00:33:45.470
nice at all so I definitely need
recursion there because I have to nest a

00:33:45.470 --> 00:33:45.480
recursion there because I have to nest a
 

00:33:45.480 --> 00:33:46.700
recursion there because I have to nest a
call back inside a call back inside a

00:33:46.700 --> 00:33:46.710
call back inside a call back inside a
 

00:33:46.710 --> 00:33:48.980
call back inside a call back inside a
call back right so I knew recursion this

00:33:48.980 --> 00:33:48.990
call back right so I knew recursion this
 

00:33:48.990 --> 00:33:50.570
call back right so I knew recursion this
is the shortest code I could come up

00:33:50.570 --> 00:33:50.580
is the shortest code I could come up
 

00:33:50.580 --> 00:33:53.120
is the shortest code I could come up
with it copies arrays don't do that it's

00:33:53.120 --> 00:33:53.130
with it copies arrays don't do that it's
 

00:33:53.130 --> 00:33:55.160
with it copies arrays don't do that it's
wasteful in terms of Mamre places full

00:33:55.160 --> 00:33:55.170
wasteful in terms of Mamre places full
 

00:33:55.170 --> 00:33:56.860
wasteful in terms of Mamre places full
of stuff terms of time it's quadratic

00:33:56.860 --> 00:33:56.870
of stuff terms of time it's quadratic
 

00:33:56.870 --> 00:33:58.910
of stuff terms of time it's quadratic
but basically you have to come up with

00:33:58.910 --> 00:33:58.920
but basically you have to come up with
 

00:33:58.920 --> 00:34:00.830
but basically you have to come up with
something like this like Nascar backs

00:34:00.830 --> 00:34:00.840
something like this like Nascar backs
 

00:34:00.840 --> 00:34:02.900
something like this like Nascar backs
into colics into callbacks and so you

00:34:02.900 --> 00:34:02.910
into colics into callbacks and so you
 

00:34:02.910 --> 00:34:04.640
into colics into callbacks and so you
can't just say okay repeat this five

00:34:04.640 --> 00:34:04.650
can't just say okay repeat this five
 

00:34:04.650 --> 00:34:08.290
can't just say okay repeat this five
times right so what I really want to do

00:34:08.290 --> 00:34:08.300
times right so what I really want to do
 

00:34:08.300 --> 00:34:11.210
times right so what I really want to do
to be able to do a is something like

00:34:11.210 --> 00:34:11.220
to be able to do a is something like
 

00:34:11.220 --> 00:34:15.409
to be able to do a is something like
this I just say okay send one request

00:34:15.409 --> 00:34:15.419
this I just say okay send one request
 

00:34:15.419 --> 00:34:18.310
this I just say okay send one request
wait for results send the other requests

00:34:18.310 --> 00:34:18.320
wait for results send the other requests
 

00:34:18.320 --> 00:34:21.110
wait for results send the other requests
and then if I want to repeat something

00:34:21.110 --> 00:34:21.120
and then if I want to repeat something
 

00:34:21.120 --> 00:34:25.430
and then if I want to repeat something
just repeat it with a for loop right so

00:34:25.430 --> 00:34:25.440
just repeat it with a for loop right so
 

00:34:25.440 --> 00:34:28.040
just repeat it with a for loop right so
this code here is actually using the

00:34:28.040 --> 00:34:28.050
this code here is actually using the
 

00:34:28.050 --> 00:34:30.590
this code here is actually using the
same callbacks only the co-routine

00:34:30.590 --> 00:34:30.600
same callbacks only the co-routine
 

00:34:30.600 --> 00:34:32.930
same callbacks only the co-routine
abstractions are distributing this away

00:34:32.930 --> 00:34:32.940
abstractions are distributing this away
 

00:34:32.940 --> 00:34:37.570
abstractions are distributing this away
from me so actually you can take any

00:34:37.570 --> 00:34:37.580
from me so actually you can take any
 

00:34:37.580 --> 00:34:40.790
from me so actually you can take any
callback based API you have now and turn

00:34:40.790 --> 00:34:40.800
callback based API you have now and turn
 

00:34:40.800 --> 00:34:42.169
callback based API you have now and turn
it into this like make it

00:34:42.169 --> 00:34:42.179
it into this like make it
 

00:34:42.179 --> 00:34:45.530
it into this like make it
straightforward with just a few lines of

00:34:45.530 --> 00:34:45.540
straightforward with just a few lines of
 

00:34:45.540 --> 00:34:45.919
straightforward with just a few lines of
code

00:34:45.919 --> 00:34:45.929
code
 

00:34:45.929 --> 00:34:48.230
code
I'll show you so this is calling the

00:34:48.230 --> 00:34:48.240
I'll show you so this is calling the
 

00:34:48.240 --> 00:34:50.389
I'll show you so this is calling the
same services because I have this

00:34:50.389 --> 00:34:50.399
same services because I have this
 

00:34:50.399 --> 00:34:53.960
same services because I have this
function right here so what I'm doing

00:34:53.960 --> 00:34:53.970
function right here so what I'm doing
 

00:34:53.970 --> 00:34:56.419
function right here so what I'm doing
I'm just turning the request into a

00:34:56.419 --> 00:34:56.429
I'm just turning the request into a
 

00:34:56.429 --> 00:35:00.440
I'm just turning the request into a
suspension function through this simple

00:35:00.440 --> 00:35:00.450
suspension function through this simple
 

00:35:00.450 --> 00:35:02.540
suspension function through this simple
construct it's an extension function of

00:35:02.540 --> 00:35:02.550
construct it's an extension function of
 

00:35:02.550 --> 00:35:05.210
construct it's an extension function of
my callback service I say the first

00:35:05.210 --> 00:35:05.220
my callback service I say the first
 

00:35:05.220 --> 00:35:07.370
my callback service I say the first
thing I say there is suspend my core

00:35:07.370 --> 00:35:07.380
thing I say there is suspend my core
 

00:35:07.380 --> 00:35:08.840
thing I say there is suspend my core
routine so I must I'm assuming I'm in a

00:35:08.840 --> 00:35:08.850
routine so I must I'm assuming I'm in a
 

00:35:08.850 --> 00:35:11.480
routine so I must I'm assuming I'm in a
core team I suspended right away I get

00:35:11.480 --> 00:35:11.490
core team I suspended right away I get
 

00:35:11.490 --> 00:35:13.610
core team I suspended right away I get
my continuation and I do my request

00:35:13.610 --> 00:35:13.620
my continuation and I do my request
 

00:35:13.620 --> 00:35:15.860
my continuation and I do my request
that's it I'm suspended I'm waiting for

00:35:15.860 --> 00:35:15.870
that's it I'm suspended I'm waiting for
 

00:35:15.870 --> 00:35:19.370
that's it I'm suspended I'm waiting for
a request so there it is and when the

00:35:19.370 --> 00:35:19.380
a request so there it is and when the
 

00:35:19.380 --> 00:35:23.180
a request so there it is and when the
request is done I just say resume to my

00:35:23.180 --> 00:35:23.190
request is done I just say resume to my
 

00:35:23.190 --> 00:35:24.230
request is done I just say resume to my
core team that's it

00:35:24.230 --> 00:35:24.240
core team that's it
 

00:35:24.240 --> 00:35:27.460
core team that's it
so this simple lines of code

00:35:27.460 --> 00:35:27.470
so this simple lines of code
 

00:35:27.470 --> 00:35:30.589
so this simple lines of code
turns your call back Bay's API into

00:35:30.589 --> 00:35:30.599
turns your call back Bay's API into
 

00:35:30.599 --> 00:35:33.470
turns your call back Bay's API into
coaching API and makes so it makes this

00:35:33.470 --> 00:35:33.480
coaching API and makes so it makes this
 

00:35:33.480 --> 00:35:34.819
coaching API and makes so it makes this
oh sorry

00:35:34.819 --> 00:35:34.829
oh sorry
 

00:35:34.829 --> 00:35:38.450
oh sorry
makes this code into this which is a lot

00:35:38.450 --> 00:35:38.460
makes this code into this which is a lot
 

00:35:38.460 --> 00:35:40.700
makes this code into this which is a lot
more readable to my sense how do you

00:35:40.700 --> 00:35:40.710
more readable to my sense how do you
 

00:35:40.710 --> 00:35:42.130
more readable to my sense how do you
like it

00:35:42.130 --> 00:35:42.140
like it
 

00:35:42.140 --> 00:35:44.390
like it
okay I see some nods in the audience

00:35:44.390 --> 00:35:44.400
okay I see some nods in the audience
 

00:35:44.400 --> 00:35:48.079
okay I see some nods in the audience
thank you yeah well actually if you want

00:35:48.079 --> 00:35:48.089
thank you yeah well actually if you want
 

00:35:48.089 --> 00:35:51.890
thank you yeah well actually if you want
to do to be a lot more prudent here and

00:35:51.890 --> 00:35:51.900
to do to be a lot more prudent here and
 

00:35:51.900 --> 00:35:54.410
to do to be a lot more prudent here and
I'm sure you want your you need to catch

00:35:54.410 --> 00:35:54.420
I'm sure you want your you need to catch
 

00:35:54.420 --> 00:36:00.589
I'm sure you want your you need to catch
exceptions so you know caching handling

00:36:00.589 --> 00:36:00.599
exceptions so you know caching handling
 

00:36:00.599 --> 00:36:02.539
exceptions so you know caching handling
your exceptions is very important and

00:36:02.539 --> 00:36:02.549
your exceptions is very important and
 

00:36:02.549 --> 00:36:06.470
your exceptions is very important and
that's as easy as this just catch your

00:36:06.470 --> 00:36:06.480
that's as easy as this just catch your
 

00:36:06.480 --> 00:36:09.079
that's as easy as this just catch your
exception whatever happens on the oh not

00:36:09.079 --> 00:36:09.089
exception whatever happens on the oh not
 

00:36:09.089 --> 00:36:11.480
exception whatever happens on the oh not
so sorry not not here of course whatever

00:36:11.480 --> 00:36:11.490
so sorry not not here of course whatever
 

00:36:11.490 --> 00:36:17.120
so sorry not not here of course whatever
happens with your with your request just

00:36:17.120 --> 00:36:17.130
happens with your with your request just
 

00:36:17.130 --> 00:36:21.289
happens with your with your request just
catch it and resume with exception so

00:36:21.289 --> 00:36:21.299
catch it and resume with exception so
 

00:36:21.299 --> 00:36:23.480
catch it and resume with exception so
this will propagate exceptions through

00:36:23.480 --> 00:36:23.490
this will propagate exceptions through
 

00:36:23.490 --> 00:36:25.910
this will propagate exceptions through
your core genes there nicely and you'll

00:36:25.910 --> 00:36:25.920
your core genes there nicely and you'll
 

00:36:25.920 --> 00:36:28.370
your core genes there nicely and you'll
be able to write try catch around here

00:36:28.370 --> 00:36:28.380
be able to write try catch around here
 

00:36:28.380 --> 00:36:31.880
be able to write try catch around here
life surround this with try catch I'm

00:36:31.880 --> 00:36:31.890
life surround this with try catch I'm
 

00:36:31.890 --> 00:36:32.329
life surround this with try catch I'm
sorry

00:36:32.329 --> 00:36:32.339
sorry
 

00:36:32.339 --> 00:36:35.269
sorry
whatever and catch exceptions there as

00:36:35.269 --> 00:36:35.279
whatever and catch exceptions there as
 

00:36:35.279 --> 00:36:37.130
whatever and catch exceptions there as
if it was sequential code but underneath

00:36:37.130 --> 00:36:37.140
if it was sequential code but underneath
 

00:36:37.140 --> 00:36:40.249
if it was sequential code but underneath
it's all asynchronous you can do HTTP

00:36:40.249 --> 00:36:40.259
it's all asynchronous you can do HTTP
 

00:36:40.259 --> 00:36:41.240
it's all asynchronous you can do HTTP
requests like this

00:36:41.240 --> 00:36:41.250
requests like this
 

00:36:41.250 --> 00:36:44.299
requests like this
I think IO file systems you can do

00:36:44.299 --> 00:36:44.309
I think IO file systems you can do
 

00:36:44.309 --> 00:36:46.240
I think IO file systems you can do
background threads everything you need

00:36:46.240 --> 00:36:46.250
background threads everything you need
 

00:36:46.250 --> 00:36:51.470
background threads everything you need
so isn't it nice and I guess the last

00:36:51.470 --> 00:36:51.480
so isn't it nice and I guess the last
 

00:36:51.480 --> 00:36:54.410
so isn't it nice and I guess the last
example I'll be showing you today is

00:36:54.410 --> 00:36:54.420
example I'll be showing you today is
 

00:36:54.420 --> 00:36:57.349
example I'll be showing you today is
this one it's just another show off for

00:36:57.349 --> 00:36:57.359
this one it's just another show off for
 

00:36:57.359 --> 00:37:02.440
this one it's just another show off for
how core genes can help you take a look

00:37:02.440 --> 00:37:02.450
how core genes can help you take a look
 

00:37:02.450 --> 00:37:07.309
how core genes can help you take a look
so what I want to do is to create an

00:37:07.309 --> 00:37:07.319
so what I want to do is to create an
 

00:37:07.319 --> 00:37:09.589
so what I want to do is to create an
infinite stream of numbers collects

00:37:09.589 --> 00:37:09.599
infinite stream of numbers collects
 

00:37:09.599 --> 00:37:11.569
infinite stream of numbers collects
infinite streams of numbers I eat them

00:37:11.569 --> 00:37:11.579
infinite streams of numbers I eat them
 

00:37:11.579 --> 00:37:15.470
infinite streams of numbers I eat them
for breakfast okay so I want just a

00:37:15.470 --> 00:37:15.480
for breakfast okay so I want just a
 

00:37:15.480 --> 00:37:17.539
for breakfast okay so I want just a
Fibonacci sequence to be generated here

00:37:17.539 --> 00:37:17.549
Fibonacci sequence to be generated here
 

00:37:17.549 --> 00:37:20.990
Fibonacci sequence to be generated here
and then I can take 20 of them here just

00:37:20.990 --> 00:37:21.000
and then I can take 20 of them here just
 

00:37:21.000 --> 00:37:24.529
and then I can take 20 of them here just
sequence of 20 I can take 200 mm I can

00:37:24.529 --> 00:37:24.539
sequence of 20 I can take 200 mm I can
 

00:37:24.539 --> 00:37:27.170
sequence of 20 I can take 200 mm I can
filter map slice whatever

00:37:27.170 --> 00:37:27.180
filter map slice whatever
 

00:37:27.180 --> 00:37:29.890
filter map slice whatever
so this both sequence function is a

00:37:29.890 --> 00:37:29.900
so this both sequence function is a
 

00:37:29.900 --> 00:37:32.089
so this both sequence function is a
library function and the card let's call

00:37:32.089 --> 00:37:32.099
library function and the card let's call
 

00:37:32.099 --> 00:37:34.220
library function and the card let's call
in standard library and it's actually

00:37:34.220 --> 00:37:34.230
in standard library and it's actually
 

00:37:34.230 --> 00:37:35.990
in standard library and it's actually
basically the same mechanism as call

00:37:35.990 --> 00:37:36.000
basically the same mechanism as call
 

00:37:36.000 --> 00:37:37.099
basically the same mechanism as call
teams it doesn't do any background

00:37:37.099 --> 00:37:37.109
teams it doesn't do any background
 

00:37:37.109 --> 00:37:39.510
teams it doesn't do any background
processing it's all in the same thread

00:37:39.510 --> 00:37:39.520
processing it's all in the same thread
 

00:37:39.520 --> 00:37:42.390
processing it's all in the same thread
what it does it takes all the yield

00:37:42.390 --> 00:37:42.400
what it does it takes all the yield
 

00:37:42.400 --> 00:37:44.190
what it does it takes all the yield
statements from here and just puts them

00:37:44.190 --> 00:37:44.200
statements from here and just puts them
 

00:37:44.200 --> 00:37:46.560
statements from here and just puts them
in a sequence so if I want to yield

00:37:46.560 --> 00:37:46.570
in a sequence so if I want to yield
 

00:37:46.570 --> 00:37:49.710
in a sequence so if I want to yield
something here I just do it like I

00:37:49.710 --> 00:37:49.720
something here I just do it like I
 

00:37:49.720 --> 00:37:53.870
something here I just do it like I
insert you into my sequence if I want to

00:37:53.870 --> 00:37:53.880
insert you into my sequence if I want to
 

00:37:53.880 --> 00:37:58.980
insert you into my sequence if I want to
say if TMP is greater than 10 continue I

00:37:58.980 --> 00:37:58.990
say if TMP is greater than 10 continue I
 

00:37:58.990 --> 00:38:05.220
say if TMP is greater than 10 continue I
can skip pieces of my logic so that's as

00:38:05.220 --> 00:38:05.230
can skip pieces of my logic so that's as
 

00:38:05.230 --> 00:38:07.110
can skip pieces of my logic so that's as
straightforward as n equal routine it

00:38:07.110 --> 00:38:07.120
straightforward as n equal routine it
 

00:38:07.120 --> 00:38:10.820
straightforward as n equal routine it
gives you a lazy sequence

00:38:10.820 --> 00:38:10.830
gives you a lazy sequence
 

00:38:10.830 --> 00:38:14.810
gives you a lazy sequence
okay so takeaways classes are cheap

00:38:14.810 --> 00:38:14.820
okay so takeaways classes are cheap
 

00:38:14.820 --> 00:38:18.120
okay so takeaways classes are cheap
functions our top level or local no

00:38:18.120 --> 00:38:18.130
functions our top level or local no
 

00:38:18.130 --> 00:38:21.180
functions our top level or local no
overloading to emulate your default

00:38:21.180 --> 00:38:21.190
overloading to emulate your default
 

00:38:21.190 --> 00:38:23.430
overloading to emulate your default
values these properties use delegated

00:38:23.430 --> 00:38:23.440
values these properties use delegated
 

00:38:23.440 --> 00:38:25.460
values these properties use delegated
properties use coroutines

00:38:25.460 --> 00:38:25.470
properties use coroutines
 

00:38:25.470 --> 00:38:29.840
properties use coroutines
have a nice cotton and I want to

00:38:29.840 --> 00:38:29.850
have a nice cotton and I want to
 

00:38:29.850 --> 00:38:33.510
have a nice cotton and I want to
advertise some more activities today so

00:38:33.510 --> 00:38:33.520
advertise some more activities today so
 

00:38:33.520 --> 00:38:35.580
advertise some more activities today so
if you still have questions that

00:38:35.580 --> 00:38:35.590
if you still have questions that
 

00:38:35.590 --> 00:38:37.920
if you still have questions that
couldn't take you can come over to an

00:38:37.920 --> 00:38:37.930
couldn't take you can come over to an
 

00:38:37.930 --> 00:38:41.970
couldn't take you can come over to an
office hour we're having at 12:30 you

00:38:41.970 --> 00:38:41.980
office hour we're having at 12:30 you
 

00:38:41.980 --> 00:38:43.950
office hour we're having at 12:30 you
can come over to the sandbox area see

00:38:43.950 --> 00:38:43.960
can come over to the sandbox area see
 

00:38:43.960 --> 00:38:47.910
can come over to the sandbox area see
where we're at the common booth and some

00:38:47.910 --> 00:38:47.920
where we're at the common booth and some
 

00:38:47.920 --> 00:38:50.430
where we're at the common booth and some
of the day at least and right after my

00:38:50.430 --> 00:38:50.440
of the day at least and right after my
 

00:38:50.440 --> 00:38:51.780
of the day at least and right after my
talk there will be a talk by Jake

00:38:51.780 --> 00:38:51.790
talk there will be a talk by Jake
 

00:38:51.790 --> 00:38:53.790
talk there will be a talk by Jake
Wharton about Android K DX which is very

00:38:53.790 --> 00:38:53.800
Wharton about Android K DX which is very
 

00:38:53.800 --> 00:38:56.400
Wharton about Android K DX which is very
exciting I believe it's on stage too so

00:38:56.400 --> 00:38:56.410
exciting I believe it's on stage too so
 

00:38:56.410 --> 00:38:58.110
exciting I believe it's on stage too so
welcome there thank you very much for

00:38:58.110 --> 00:38:58.120
welcome there thank you very much for
 

00:38:58.120 --> 00:38:58.850
welcome there thank you very much for
your attention

00:38:58.850 --> 00:38:58.860
your attention
 

00:38:58.860 --> 00:39:01.820
your attention
[Applause]

00:39:01.820 --> 00:39:01.830
[Applause]
 

00:39:01.830 --> 00:39:24.270
[Applause]
[Music]

