WEBVTT
Kind: captions
Language: en

00:00:00.260 --> 00:00:03.250
So let's see if we understand
the relationship between SMT and

00:00:03.250 --> 00:00:04.550
cache behavior.

00:00:04.550 --> 00:00:10.130
Let's say we have a program named
a whose working set is 10 kilobits.

00:00:11.180 --> 00:00:15.440
And we have programs B and
C whose working sets are 4 kilobits and

00:00:15.440 --> 00:00:17.700
1 kilobits, respectively.

00:00:17.700 --> 00:00:22.730
Let's say our processor supports
four threads simultaneously

00:00:22.730 --> 00:00:27.750
SMT fashion and
has an 8 kilobyte data level 1 cache.

00:00:27.750 --> 00:00:29.980
In this case, we should run A, B, and

00:00:29.980 --> 00:00:35.090
C together because all of
them can run simultaneously.

00:00:35.090 --> 00:00:39.330
A and B together,
we could run C simultaneously but

00:00:39.330 --> 00:00:42.420
we choose to run it
after we finish A and B.

00:00:42.420 --> 00:00:46.450
Or we do A and B for a while,
then C for a while and so on.

00:00:46.450 --> 00:00:48.970
So pretty much,
we don't run them simultaneously.

00:00:48.970 --> 00:00:50.980
We run C separately from the other two.

00:00:50.980 --> 00:00:57.890
And the next option is, we run A without
using the other three SMT ways.

00:00:57.890 --> 00:01:02.670
Then, we run B and
C in two of the four SMT ways.

00:01:02.670 --> 00:01:05.069
But we don't run A together
with the other two.

00:01:06.120 --> 00:01:11.580
The next option is run A and
C together, then B, but don't

00:01:11.580 --> 00:01:17.300
do B simultaneously using multithreading
when we are doing A and C.

00:01:17.300 --> 00:01:19.980
Or, do them one at a time.

00:01:19.980 --> 00:01:24.180
Although we could run four at a time,
we choose to run one at a time.

