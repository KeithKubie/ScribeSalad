WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.000
Now, we have the last thing that we needed to complete the Garbled Circuit Protocol,

00:00:04.000 --> 00:00:08.000
the way Bob obtains his inputs is using oblivious transfer.

00:00:08.000 --> 00:00:14.000
That could be done at this stage to enable Bob to learn his inputs to the circuit.

00:00:14.000 --> 00:00:18.000
Alice sends the garbled circuit along with her inputs and Bob can evaluate the circuit.

00:00:18.000 --> 00:00:25.000
Then from the encrypted output wires, Bob can obtain the result of the circuit execution,

00:00:25.000 --> 00:00:28.000
and he could share that with Alice or they could flip roles and do it again.

00:00:28.000 --> 00:00:30.000
And then Alice would obtain the output.

00:00:30.000 --> 00:00:33.000
We have one little step in this protocol that we haven't described yet,

00:00:33.000 --> 00:00:36.000
which is how you actually obtain that output value.

00:00:36.000 --> 00:00:39.000
The outputs for the garbled tables are all encrypted,

00:00:39.000 --> 00:00:43.000
so at the end of the execution what Bob has is a list of encrypted wire labels.

00:00:43.000 --> 00:00:48.000
He wants to turn that into semantic output. That's left as the question for the exam.

00:00:48.000 --> 00:00:54.000
I should note that actually executing protocols like this, doing all these encryption is really expensive.

00:00:54.000 --> 00:00:57.000
This works for any function, but it is very expensive.

00:00:57.000 --> 00:01:00.000
It's a very active research area, how to do this faster.

00:01:00.000 --> 00:01:04.000
This is one of the things my research group works on as well as a lots of other researchers

00:01:04.000 --> 00:01:08.000
to try to find ways to provide properties like the one described here

00:01:08.000 --> 99:59:59.000
but without as much computation effort as executing the protocol that I have just described.

