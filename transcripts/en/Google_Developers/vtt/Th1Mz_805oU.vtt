WEBVTT
Kind: captions
Language: en

00:00:01.040 --> 00:00:01.520
KATHRYN HURLEY: Hi, everyone.

00:00:01.520 --> 00:00:02.720
My name is Kathryn Hurley.

00:00:02.720 --> 00:00:05.300
I'm a Developer Programs
Engineer at Google.

00:00:05.300 --> 00:00:07.680
And in this session, I'm going
to show you how to create

00:00:07.680 --> 00:00:12.350
custom images for your Google
Compute Engine instances.

00:00:12.350 --> 00:00:14.780
So when are custom
images useful?

00:00:14.780 --> 00:00:17.890
I find them useful when I'm
creating an application, and

00:00:17.890 --> 00:00:21.510
this application starts
instances on demand, and all

00:00:21.510 --> 00:00:24.800
these instances, they all need
the same packages and software

00:00:24.800 --> 00:00:26.590
installed on them.

00:00:26.590 --> 00:00:29.760
So I actually have two options
for installing the necessary

00:00:29.760 --> 00:00:33.080
packages and software
on my instances.

00:00:33.080 --> 00:00:36.000
I can use the start up script,
and in the start up script do

00:00:36.000 --> 00:00:38.580
an apt-get install to install
the packages that my

00:00:38.580 --> 00:00:40.220
application needs.

00:00:40.220 --> 00:00:42.130
Or I can use the custom image.

00:00:42.130 --> 00:00:46.080
The benefit of using a custom
image is that the boot time is

00:00:46.080 --> 00:00:49.890
a bit faster, since you don't
have to wait for the package

00:00:49.890 --> 00:00:53.530
to install before the machine
does its work.

00:00:53.530 --> 00:00:55.350
A custom image also
gives you more

00:00:55.350 --> 00:00:57.270
control over the instance.

00:00:57.270 --> 00:01:00.400
When you use a start up script
to apt-get install package,

00:01:00.400 --> 00:01:03.360
there might be changes to that
package from time to time.

00:01:03.360 --> 00:01:06.670
With a custom image, you know
exactly what you're getting.

00:01:06.670 --> 00:01:08.840
All right, so let's
jump into a demo.

00:01:08.840 --> 00:01:10.770
In this demo, I'm going to
show you how to start an

00:01:10.770 --> 00:01:15.100
instance, install some software
on that instance,

00:01:15.100 --> 00:01:18.630
create an image of that
instance, and finally start a

00:01:18.630 --> 00:01:22.230
new instance using that image.

00:01:22.230 --> 00:01:24.480
I switched over to
my terminal now.

00:01:24.480 --> 00:01:27.940
I use the gcutil addinstance
command to start up a new

00:01:27.940 --> 00:01:30.410
instance called myinstance.

00:01:30.410 --> 00:01:33.340
And notice how I add a service
account scope flag with a

00:01:33.340 --> 00:01:36.020
value of storage full.

00:01:36.020 --> 00:01:39.290
This flag gives my instance full
access to Google Cloud

00:01:39.290 --> 00:01:41.660
Storage, which will be important
later when I

00:01:41.660 --> 00:01:46.320
transfer the image I create
to Cloud Storage.

00:01:46.320 --> 00:01:49.940
Now, at this point, I select
a zone, a machine type, and

00:01:49.940 --> 00:01:52.996
Compute Engine will start
up that instance.

00:01:52.996 --> 00:01:56.170
Now that the operation
is done, I use gcutil

00:01:56.170 --> 00:01:59.300
listinstances to list
out my instances.

00:01:59.300 --> 00:02:02.320
I have one instance,
myinstance,

00:02:02.320 --> 00:02:04.180
with a status of staging.

00:02:04.180 --> 00:02:07.100
Once the instance is running,
I can SSH into that machine.

00:02:11.050 --> 00:02:12.370
Looks like it's still staging.

00:02:12.370 --> 00:02:13.620
Let's try one more time.

00:02:18.460 --> 00:02:18.760
All right.

00:02:18.760 --> 00:02:21.440
Now that the instance is
running, I SSH into the

00:02:21.440 --> 00:02:26.070
instance using gcutil ssh and
provide the instance name.

00:02:36.630 --> 00:02:39.520
As you can see, this is
a Linux machine called

00:02:39.520 --> 00:02:47.020
myinstance that is running
Ubuntu 12.04, one of the

00:02:47.020 --> 00:02:49.800
default images in
Compute Engine.

00:02:52.770 --> 00:02:56.680
Let's install OpenJDK on this
instance because I want to

00:02:56.680 --> 00:02:59.620
create a custom image
with Java available.

00:02:59.620 --> 00:03:02.580
I can then use this image when
I start up other instances

00:03:02.580 --> 00:03:05.250
that also require
Java installed.

00:03:05.250 --> 00:03:08.240
As you can see, it does take
some time for OpenJDK to

00:03:08.240 --> 00:03:09.980
install on this instance.

00:03:09.980 --> 00:03:11.870
Imagine running this
at the beginning of

00:03:11.870 --> 00:03:13.220
your start up script.

00:03:13.220 --> 00:03:14.850
It would take this long
before the machine

00:03:14.850 --> 00:03:16.870
could do any real work.

00:03:16.870 --> 00:03:19.165
So this is a good reason
to use custom images.

00:03:23.510 --> 00:03:27.100
Now that OpenJDK is installed
on my instance, I can make

00:03:27.100 --> 00:03:30.510
other changes such as adding
users, or downloading files.

00:03:30.510 --> 00:03:33.070
And all these changes would
be available on my image.

00:03:33.070 --> 00:03:35.550
However, I just need Java
installed, so I'm going to

00:03:35.550 --> 00:03:36.780
make the image now.

00:03:36.780 --> 00:03:39.520
To do so, I run the image bundle
program stored on all

00:03:39.520 --> 00:03:41.380
Compute Engine instances.

00:03:41.380 --> 00:03:44.160
This command saves the image
to the temp directory and

00:03:44.160 --> 00:03:46.490
saves the log output to a
file named abc dot log.

00:03:50.180 --> 00:03:52.900
Now that our image has been
created, let's take a look at

00:03:52.900 --> 00:03:55.690
the output of the image
bundle program.

00:03:55.690 --> 00:03:57.310
I'll cd to the temp directory.

00:03:57.310 --> 00:04:01.780
And here you can see the
abc log file and

00:04:01.780 --> 00:04:05.770
the tar image file.

00:04:05.770 --> 00:04:07.970
The tar image file needs
to be uploaded to

00:04:07.970 --> 00:04:09.640
Google Cloud Storage.

00:04:09.640 --> 00:04:12.310
Compute Engine loads the image
from Cloud Storage during

00:04:12.310 --> 00:04:13.560
instance startup.

00:04:13.560 --> 00:04:16.779
Before uploading the file to
Cloud Storage, I'm first going

00:04:16.779 --> 00:04:19.079
to create a bucket
on Cloud Storage.

00:04:19.079 --> 00:04:21.810
And this is the part where my
service account scope flag

00:04:21.810 --> 00:04:23.030
comes in handy.

00:04:23.030 --> 00:04:25.220
I don't need to authenticate
to Cloud Storage.

00:04:25.220 --> 00:04:29.540
I can immediately start using
the gsutil command.

00:04:29.540 --> 00:04:33.445
I run gsutil mb command to
make the bucket, and I'm

00:04:33.445 --> 00:04:34.695
naming the bucket
gce-java-image.

00:04:37.170 --> 00:04:40.370
Once the bucket is created, I
copy the image to the bucket

00:04:40.370 --> 00:04:42.530
using the gsutil cp command.

00:04:46.960 --> 00:04:48.790
I'll give the image
a name that's

00:04:48.790 --> 00:04:51.380
much easier to remember.

00:04:51.380 --> 00:04:53.180
Let's call it java.image.tar.gz.

00:05:03.910 --> 00:05:08.340
As you can see, the transfer
speed is amazingly fast.

00:05:08.340 --> 00:05:10.140
And it completes in
under a minute.

00:05:17.790 --> 00:05:21.020
I'm going to log out
of my instance now.

00:05:21.020 --> 00:05:23.840
And I want to add my new
image to the images

00:05:23.840 --> 00:05:27.080
available for my project.

00:05:27.080 --> 00:05:30.746
I use gcutil addimage
to do so.

00:05:30.746 --> 00:05:32.790
I provide a name
for the image.

00:05:32.790 --> 00:05:34.810
I'll call it java.

00:05:34.810 --> 00:05:39.920
And I specify its location
on Cloud Storage.

00:05:39.920 --> 00:05:43.340
Once the operation is complete,
I can use gcutil

00:05:43.340 --> 00:05:47.550
listimages to see my
list of images.

00:05:47.550 --> 00:05:51.190
I want to now use my new image
when starting an instance and

00:05:51.190 --> 00:05:54.240
run a Java program
on that instance.

00:05:54.240 --> 00:05:57.160
I have a short hello world Java
program that prints out

00:05:57.160 --> 00:06:00.770
"Hello World!" You
can see it here.

00:06:00.770 --> 00:06:03.900
And the compiled Java code
is on Cloud Storage.

00:06:03.900 --> 00:06:06.730
I also created a little start up
script for my instance that

00:06:06.730 --> 00:06:10.120
downloads the compiled Java code
from Cloud Storage, and

00:06:10.120 --> 00:06:11.370
then runs the program.

00:06:14.010 --> 00:06:16.530
So let's fire up this
new instance.

00:06:16.530 --> 00:06:19.920
I use the gcutil addinstance
command again.

00:06:19.920 --> 00:06:23.560
This time, I specify some
metadata, the start up script,

00:06:23.560 --> 00:06:24.540
the image--

00:06:24.540 --> 00:06:25.930
my Java image--

00:06:25.930 --> 00:06:28.840
and finally, service account
scope, which gives this

00:06:28.840 --> 00:06:32.350
instance access to download my
compiled Java hello world code

00:06:32.350 --> 00:06:34.820
from Cloud Storage.

00:06:34.820 --> 00:06:38.890
I choose the zone and the
machine type again.

00:06:38.890 --> 00:06:41.535
And Compute Engine starts
up this instance.

00:06:52.080 --> 00:06:54.735
When the operation is complete,
I list my instances.

00:06:57.520 --> 00:06:59.720
And you can see my new
Java instance in the

00:06:59.720 --> 00:07:02.335
list, and it's staging.

00:07:05.020 --> 00:07:07.115
And I'll try to SSH
into the machine.

00:07:12.520 --> 00:07:15.830
It looks like the instance is
still in staging, so I'm going

00:07:15.830 --> 00:07:17.080
to try again.

00:07:19.950 --> 00:07:22.110
It looks like it's working
this time.

00:07:22.110 --> 00:07:23.750
Now, let's take a look
at the start up

00:07:23.750 --> 00:07:25.270
logs of this instance.

00:07:25.270 --> 00:07:29.740
To do so, I print the tail of
the google.log file in war

00:07:29.740 --> 00:07:33.130
slash log directory.

00:07:33.130 --> 00:07:35.170
Here you can see that the
hello world class was

00:07:35.170 --> 00:07:38.310
downloaded from Cloud Storage,
and it was successfully run

00:07:38.310 --> 00:07:42.180
displaying the message
"Hello World!"

00:07:42.180 --> 00:07:44.280
If you're interested in learning
more about Compute

00:07:44.280 --> 00:07:47.590
Engine images, I've provided
the link here.

00:07:47.590 --> 00:07:50.520
And this was, of course, a very
basic example of what you

00:07:50.520 --> 00:07:52.350
can do with custom images.

00:07:52.350 --> 00:07:55.220
There are so many more cool
things that can be done, and I

00:07:55.220 --> 00:07:57.510
really look forward to seeing
the awesome ideas that you

00:07:57.510 --> 00:07:58.600
come up with.

00:07:58.600 --> 00:07:59.850
Cheers.

