WEBVTT
Kind: captions
Language: en

00:00:00.080 --> 00:00:03.090
So, first, let's talk about performance. Usually, when we

00:00:03.090 --> 00:00:06.620
say performance within processor speed. But even then, there

00:00:06.620 --> 00:00:08.880
are really two aspects of performance that are not

00:00:08.880 --> 00:00:13.483
necessarily identical. One is latency. It's about, how long does

00:00:13.483 --> 00:00:15.923
it take from when we start something until it's

00:00:15.923 --> 00:00:19.195
done. The other is throughput, which is, how many

00:00:19.195 --> 00:00:21.891
things can we do per second. And one would

00:00:21.891 --> 00:00:25.430
think through put is 1 over latency. So for example,

00:00:25.430 --> 00:00:28.238
if it takes a half a second to do something,

00:00:28.238 --> 00:00:31.514
then the number of those things we can do per second

00:00:31.514 --> 00:00:34.010
is going to be 1 over one half and we get 2

00:00:34.010 --> 00:00:38.210
for throughput but this is not always so. Think about a

00:00:38.210 --> 00:00:42.390
car assembly line. We start with just a chassis. We then

00:00:42.390 --> 00:00:45.400
move the car to where its engine is going to be installed.

00:00:45.400 --> 00:00:47.800
We then move the car to where some wheels are going to

00:00:47.800 --> 00:00:50.850
be added to it. We then have some doors installed and

00:00:50.850 --> 00:00:53.370
some hood put together and so on. And now we

00:00:53.370 --> 00:00:56.850
have a car. So the latency is from here to

00:00:56.850 --> 00:00:59.420
here. Here's where we began the car, here's where we

00:00:59.420 --> 00:01:03.040
have a final car. But we have an assembly line so

00:01:03.040 --> 00:01:05.360
when the chassis moves here for the engine to be

00:01:05.360 --> 00:01:09.660
installed. The next chassis gets put together. When we have installed

00:01:09.660 --> 00:01:12.440
the engine, we move the car to the install wheels

00:01:12.440 --> 00:01:16.190
station. Meanwhile the next car is getting its engine installed and

00:01:16.190 --> 00:01:18.760
so on. So let's say that the latency

00:01:18.760 --> 00:01:21.496
is 4 hours, but that it takes something like

00:01:21.496 --> 00:01:27.314
20 steps for a car. If each of these steps takes the same amount of time and the

00:01:27.314 --> 00:01:31.313
cars are just moving through these steps, then our

00:01:31.313 --> 00:01:35.591
throughput is actually 5 cars per hour, not 0.25

00:01:35.591 --> 00:01:38.080
cars per hour. So as you can see the

00:01:38.080 --> 00:01:41.540
throughput and the latency may not be like this.

