WEBVTT
Kind: captions
Language: en

00:00:01.060 --> 00:00:04.195
How to write code in small chunks and
test them.

00:00:04.195 --> 00:00:06.180
Right now, nothing is on the page.

00:00:06.180 --> 00:00:08.087
There is nothing to add on with it.

00:00:08.087 --> 00:00:13.160
So what I would do right now,
is to actually try loading

00:00:13.160 --> 00:00:18.234
up your game and
then put on console.log statements,

00:00:18.234 --> 00:00:23.422
start out with console.log
inside your enemy.update

00:00:23.422 --> 00:00:28.278
function console.log inside
your player function

00:00:28.278 --> 00:00:32.284
just because we
are already calling them.

00:00:32.284 --> 00:00:36.310
So as you can see Anime is
going to render all of this but

00:00:36.310 --> 00:00:41.788
then after JS is aware it actually
runs the code and loads the resources.

00:00:41.788 --> 00:00:46.701
And I'm thinking that you are saying
there are no enemies are bugs

00:00:46.701 --> 00:00:50.390
inside your canvas
that is being rendered.

00:00:50.390 --> 00:00:54.070
So what you can do is if
you don't know how to start

00:00:54.070 --> 00:00:57.530
writing the update function,
just put in console.log.

00:00:57.530 --> 00:01:02.390
Or what you can do is you can just
call your enemy.render function,

00:01:02.390 --> 00:01:04.980
create an object here.

00:01:04.980 --> 00:01:10.660
Like how I showed you how to create
var enemy equals, new enemy off.

00:01:10.660 --> 00:01:12.400
And then you can put in the x and

00:01:12.400 --> 00:01:16.430
y values of the enemy to just
render it on the screen.

00:01:16.430 --> 00:01:20.560
It does not have to move it does
not have to do any functionality.

00:01:20.560 --> 00:01:25.110
So try creating one class for
one object of the enemy.

00:01:25.110 --> 00:01:27.990
And try calling the render
function on it.

00:01:27.990 --> 00:01:31.920
That should be very helpful
console log is very useful so

00:01:31.920 --> 00:01:34.550
use a lot of prince statements around.

00:01:34.550 --> 00:01:38.253
Since i know that inside engine.js.

00:01:38.253 --> 00:01:45.756
You will be calling enemy.update and
enemy.renderfunction here.

00:01:45.756 --> 00:01:51.575
You will obviously need these
functions defined inside your app and

00:01:51.575 --> 00:01:52.910
your as a file.

00:01:55.010 --> 00:02:00.490
&gt;&gt; I wanted to make a green bug, so I
went into Photoshop and altered the hue.

00:02:00.490 --> 00:02:02.400
But I get this error.

00:02:02.400 --> 00:02:08.870
Failed to execute draw image on
canvas rendering context 2D.

00:02:08.870 --> 00:02:13.650
The provided value is not of
type HTML image element, or

00:02:13.650 --> 00:02:19.020
HTML video element or
HTML canvas element.

00:02:19.020 --> 00:02:23.350
&gt;&gt; Okay, so as long as you
save it in a PNG format, and

00:02:23.350 --> 00:02:28.030
put it inside your images repository
it shouldn't have a problem.

00:02:28.030 --> 00:02:35.720
I have known a lot of students actually
putting in different colors to the bug.

00:02:35.720 --> 00:02:40.240
Blue, yellow, green, and
all that they have to do

00:02:40.240 --> 00:02:45.310
is Photoshop the images just saving
inside your images repository.

00:02:45.310 --> 00:02:48.100
And then adding to your resources.

00:02:48.100 --> 00:02:53.600
So, wherever I think sure change
you inside one of your gs finals.

00:02:55.590 --> 00:02:59.140
I believe it is your engine.js file.

00:02:59.140 --> 00:03:02.380
Make sure that you
are morons are right here.

00:03:02.380 --> 00:03:07.730
You can see that you are loading all
these and you have only enemy-bug.png.

00:03:07.730 --> 00:03:13.260
Wait, you can name it yellow-bug,
blue-bug, whatever color you set it in.

00:03:13.260 --> 00:03:16.510
But make sure you add it
into the road function and

00:03:16.510 --> 00:03:19.550
make sure it isn't
your images repository.

00:03:19.550 --> 00:03:22.379
As long as you're doing that,
it should work.

00:03:24.160 --> 00:03:28.860
&gt;&gt; I'm trying to code for P 3 to detect
collision, but when i make every

00:03:28.860 --> 00:03:33.780
from the enemy.x may creating var.enemy.

00:03:33.780 --> 00:03:37.886
Experimenting equal to
the enemy.x minus fifty I get

00:03:37.886 --> 00:03:41.729
an undefined because my
enemy dot X was only 34.

00:03:41.729 --> 00:03:43.738
Thus I got a negative number.

00:03:43.738 --> 00:03:48.290
Please let me know how to avoid this.

00:03:48.290 --> 00:03:49.540
&gt;&gt; Okay, well good question kid.

00:03:49.540 --> 00:03:53.030
This part of the project is very tricky.

00:03:53.030 --> 00:03:57.830
Now, it surprises me a little bit that
you get an undefined error because these

00:03:57.830 --> 00:04:00.290
are in the jurors and so
subtracting them should just.

00:04:00.290 --> 00:04:04.690
Result in the worst case as a negative
number which might be off your canvas

00:04:05.770 --> 00:04:10.220
but what I do have is a great link and
so this page as you can check it out it

00:04:10.220 --> 00:04:13.690
talks of it tells you here exactly
about axis-aligned bounding box.

00:04:14.700 --> 00:04:18.110
And what you can do for
it to test your collisions.

00:04:18.110 --> 00:04:20.959
I don't think you have to worry about
circle collision, but just this top one

00:04:20.959 --> 00:04:23.890
here, axis-aligned bounding box,
should be enough to get you started.

00:04:23.890 --> 00:04:26.880
The other thing to think about too is

00:04:26.880 --> 00:04:31.540
you can think about collision
as in the reverse sense.

00:04:31.540 --> 00:04:35.130
So, you can think about you could write
a function to say what are you not

00:04:35.130 --> 00:04:36.110
colliding.

00:04:36.110 --> 00:04:38.620
And then say what do
you not not colliding.

00:04:38.620 --> 00:04:42.230
That can actually be easier
math than facts and times.

00:04:42.230 --> 00:04:45.570
So if that's at all helpful,
give that whirl.

00:04:45.570 --> 00:04:49.180
If you are having questions
about your specific code and

00:04:49.180 --> 00:04:53.800
this website doesn't help and
the different way of thinking about it

00:04:53.800 --> 00:04:57.920
in terms of doing the opposite
of not collide doesn't help.

00:04:57.920 --> 00:05:02.830
Please post a question to
the discussions and either us or

00:05:02.830 --> 00:05:06.110
one of the students can try to
help look at your exact code

00:05:06.110 --> 00:05:08.540
to see what's going on there.

00:05:09.940 --> 00:05:14.170
&gt;&gt; P 3 is there anything we should set
up for when get an answer user close.

00:05:14.170 --> 00:05:16.220
We know to clear memory allocations.

00:05:16.220 --> 00:05:18.630
No so this is the beauty of JavaScript.

00:05:19.840 --> 00:05:25.204
It has automatic garbage collection and
this is a constant and

00:05:25.204 --> 00:05:31.613
more low level programming languages
such as C, C++ plus or even Java.

00:05:31.613 --> 00:05:37.769
Is that like, the language itself,
JavaScript automatically

00:05:37.769 --> 00:05:42.791
clears the memory for
you like if you have an object.

00:05:42.791 --> 00:05:47.290
And if the object is not being
referenced by anything then the computer

00:05:47.290 --> 00:05:48.060
of the job.

00:05:48.060 --> 00:05:52.410
The language itself, JavaScript is
smart enough to know that okay,

00:05:52.410 --> 00:05:55.340
there's nothing that's referencing
this object anymore in my memory.

00:05:55.340 --> 00:05:56.950
I'm just going to
automatically clear it.

00:05:56.950 --> 00:06:00.080
And you don't have to deal
with garbage collection.

00:06:00.080 --> 00:06:06.730
Unlike a low level programming
language like C, C++.

00:06:06.730 --> 00:06:09.180
&gt;&gt; What goes in the index.html file?

00:06:09.180 --> 00:06:12.970
It appears you have the canvas
drawn from in the engine.js file.

00:06:12.970 --> 00:06:15.578
Is this a place to build
a custom background, thanks.

00:06:15.578 --> 00:06:22.140
&gt;&gt; So the index.html file, you
shouldn't have to add anything to it.

00:06:22.140 --> 00:06:26.020
If you wanted to, maybe let's say
you wanted to have like a title

00:06:26.020 --> 00:06:29.450
If you could but if your custom
background you're referring to.

00:06:29.450 --> 00:06:33.560
If you want to custom background for
your game kind of like a backdrop

00:06:34.690 --> 00:06:39.080
yeah you could edit the CSS and put like
a background image on your body tag.

00:06:39.080 --> 00:06:43.000
But if your background you're
referring to is the game level,

00:06:43.000 --> 00:06:46.289
then you would need to
edit that in engine.js.

00:06:47.830 --> 00:06:53.138
&gt;&gt; Yeah, I mean there should you
shouldn't have to touch the HTML or

00:06:53.138 --> 00:06:54.113
CSS files.

00:06:54.113 --> 00:06:55.160
&gt;&gt; Multi pass.

00:06:55.160 --> 00:06:56.227
&gt;&gt; Yeah if you want to do something.

00:06:56.227 --> 00:06:57.716
&gt;&gt; Yeah.

00:06:57.716 --> 00:07:02.110
&gt;&gt; Cool then you have to
play with them a little bit.

00:07:02.110 --> 00:07:05.348
&gt;&gt; I'm trying to figure out
the with the height of players and

00:07:05.348 --> 00:07:08.050
bugs images are 101 by 171 pixels.

00:07:08.050 --> 00:07:11.090
But that is not how tall a white
the bugging players are.

00:07:11.090 --> 00:07:13.367
Is there a way to figure this out?

00:07:13.367 --> 00:07:16.800
I'm working on collusion and
trying to define the rectangles.

00:07:16.800 --> 00:07:19.896
So actually the suit really good
question and it was something that I

00:07:19.896 --> 00:07:23.390
initially had a little bit of trouble
with i like what my player on the board.

00:07:23.390 --> 00:07:28.283
He ended up kind of police sort
of off the board a little bit.

00:07:28.283 --> 00:07:30.112
And I kind of played around
with the measurements until

00:07:30.112 --> 00:07:30.913
they got good on there.

00:07:30.913 --> 00:07:33.838
And then I realized like my bugs were
hitting my player at these weird angles,

00:07:33.838 --> 00:07:35.053
and I was just like, all right.

00:07:35.053 --> 00:07:38.368
I've just gotta figure
out how big these are.

00:07:38.368 --> 00:07:42.340
So do you have a tip for figuring out,
sort of, the size of the players and

00:07:42.340 --> 00:07:43.240
the bugs?

00:07:43.240 --> 00:07:45.760
&gt;&gt; I'll tell you the reason
it's weird like that,

00:07:45.760 --> 00:07:48.285
Is because it kind of looks
like a top down game.

00:07:48.285 --> 00:07:50.020
&gt;&gt; Mm-hm.
&gt;&gt; But it's really not.

00:07:50.020 --> 00:07:52.003
If you look at the very bottom row.

00:07:52.003 --> 00:07:53.616
It's a square.

00:07:53.616 --> 00:07:54.694
But then it has that.

00:07:54.694 --> 00:07:55.606
You see.

00:07:55.606 --> 00:07:56.520
&gt;&gt; Yeah.

00:07:56.520 --> 00:07:57.386
&gt;&gt; The front of the square.

00:07:57.386 --> 00:07:58.955
Right?

00:07:58.955 --> 00:08:00.558
So what happens is when
the squares are drawn there.

00:08:00.558 --> 00:08:02.087
The top layer is drawn.

00:08:02.087 --> 00:08:03.080
&gt;&gt; Mm-hm?

00:08:03.080 --> 00:08:04.610
&gt;&gt; And then the.
&gt;&gt; At the top row drawn,

00:08:04.610 --> 00:08:09.090
and the second row is drawn on top
of that bottom piece a little bit.

00:08:09.090 --> 00:08:10.970
So, they're oddly stacked.

00:08:10.970 --> 00:08:15.450
I would say that the player and

00:08:15.450 --> 00:08:22.560
the bugs should be sized as to
the top of those images and not look

00:08:22.560 --> 00:08:27.990
what the white actual images kind of
ignore that bottom little piece there.

00:08:27.990 --> 00:08:33.450
What I did in my implementation was
actually defined an object that said

00:08:33.450 --> 00:08:39.309
row one is this Y coordinate
Row two is this Y coordinate.

00:08:39.309 --> 00:08:44.480
And then I use that object of
okay my player is on row one and

00:08:44.480 --> 00:08:45.940
my bugs are on row one.

00:08:45.940 --> 00:08:51.270
So that's now I can actually
work on collision and stuff.

00:08:51.270 --> 00:08:52.970
It is weird, the math can get odd.

00:08:52.970 --> 00:08:56.980
For some reason 73 is in my head.

00:08:56.980 --> 00:09:02.589
I think that was my [LAUGH]
73 pixels was my number.

00:09:02.589 --> 00:09:04.620
&gt;&gt; I don't know what
mine ended up being.

00:09:04.620 --> 00:09:09.615
I think mind ended up being like 30 or

00:09:09.615 --> 00:09:12.276
80 or something.

00:09:12.276 --> 00:09:13.755
I don't remember.

00:09:13.755 --> 00:09:15.801
[LAUGH]
&gt;&gt; Yeah.

00:09:15.801 --> 00:09:17.277
It was one of those things that, I mean,
it really did just take trial and error.

00:09:17.277 --> 00:09:19.474
&gt;&gt; Yeah.
&gt;&gt; To get it right.

00:09:19.474 --> 00:09:22.173
But I guess that's kind
of part of making a game.

00:09:22.173 --> 00:09:24.454
kind of shuffling things a little
bit until they fit together.

00:09:24.454 --> 00:09:25.030
&gt;&gt; Yeah.

00:09:25.030 --> 00:09:30.810
So what I eventually did was I created
a step size variable for the player.

00:09:30.810 --> 00:09:33.270
So I said any time I press up,

00:09:33.270 --> 00:09:37.450
he's going to move
vertically this much space.

00:09:37.450 --> 00:09:41.280
And then I would just constantly be i
would have just that I would step that's

00:09:41.280 --> 00:09:43.980
like sixty pixels and then i reload
the game and president of up.

00:09:43.980 --> 00:09:47.180
And if it looked like he was staying
in the center of the blocks of.

00:09:47.180 --> 00:09:48.580
Boxes all the way up.

00:09:48.580 --> 00:09:50.180
Then i had the right number.

00:09:50.180 --> 00:09:54.490
If he was going too far or not far
enough and i just did that number.

00:09:54.490 --> 00:09:58.450
And then i did the same thing with
watched her back steps you know.

00:09:58.450 --> 00:09:59.580
Horizontal and.

00:09:59.580 --> 00:10:01.640
Just Tweaked it and played with it.

00:10:01.640 --> 00:10:02.383
It didn't take long.

00:10:02.383 --> 00:10:03.210
&gt;&gt; [CROSSTALK] Yeah.

00:10:03.210 --> 00:10:05.920
&gt;&gt; I mean once I just,
because I did the same thing as you.

00:10:05.920 --> 00:10:08.600
I was trying to just
handle these images.

00:10:08.600 --> 00:10:11.950
And so, I mean,
I did the same thing as you.

00:10:11.950 --> 00:10:17.170
I tried to think about it logically and
define it and, it really did for

00:10:17.170 --> 00:10:21.780
me, just become a practice of all
right just define a number and

00:10:21.780 --> 00:10:23.800
tweak it and figure it out.

