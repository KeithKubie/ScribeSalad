WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:08.620
&gt;&gt; [Speaks Foreign Language]
&gt;&gt; [Speaks Foreign Language]

00:00:08.620 --> 00:00:13.039
&gt;&gt; What is PubSubHubbub?
&gt;&gt; [Speaks Foreign Language]

00:00:13.039 --> 00:00:17.460
&gt;&gt; [Speaks Foreign Language]
&gt;&gt; [Speaks Foreign Language]

00:00:17.460 --> 00:00:21.880
&gt;&gt; [Speaks Foreign Language]
&gt;&gt; [Speaks Foreign Language]

00:00:21.880 --> 00:00:27.780
&gt;&gt; [Speaks Foreign Language]
&gt;&gt; Slatkin: Hey, I'm Brett Slatkin.

00:00:27.780 --> 00:00:33.120
&gt;&gt; Fitzpatrick: I'm Brad Fitzpatrick
&gt;&gt; Slatkin: And we're today to tell you about

00:00:33.120 --> 00:00:35.760
a project called PubSubHubbub.
&gt;&gt; Fitzpatrick: It's kind of a dorky name

00:00:35.760 --> 00:00:39.180
but it's really a fun, simple, and useful
technology. We often just call it Hubbub for

00:00:39.180 --> 00:00:41.590
short.
&gt;&gt; Slatkin: So what does it do? Well, it's

00:00:41.590 --> 00:00:44.610
an open protocol for training Atom and RSS
feeds in the real time streams.

00:00:44.610 --> 00:00:48.031
&gt;&gt; Fitzpatrick: That sounds a little dorky,
so why don't you consider this contrived to

00:00:48.031 --> 00:00:52.510
metaphor instead. Let say you're going on
a long road trip and the people in the backseat

00:00:52.510 --> 00:00:57.130
are asking, "Are we there, yet? Are we there
yet? Are we there yet?"

00:00:57.130 --> 00:00:58.820
&gt;&gt; Slatkin: No, not yet.
&gt;&gt; Fitzpatrick: As lame as that is. That's

00:00:58.820 --> 00:01:02.200
actually how Internet Servers talk to each
other nowadays. They say, "Do you have anything

00:01:02.200 --> 00:01:05.920
new for me? Do you have anything new for me?"
&gt;&gt; Slatkin: That's called "pulling" and although

00:01:05.920 --> 00:01:09.590
it works, it's slow and inefficient and about
as annoying as a person at the backseat, asking

00:01:09.590 --> 00:01:11.380
you.
&gt;&gt; Fitzpatrick: Are we there yet? Are we there

00:01:11.380 --> 00:01:15.420
yet? Are we there yet? The alternative is
called "push". It's when the origin publishers

00:01:15.420 --> 00:01:18.942
actually tell all the interested subscribers
when there actually is something new.

00:01:18.942 --> 00:01:23.909
&gt;&gt; Slatkin: Let's see that in action. On the
right is a microblog that serving an Atom

00:01:23.909 --> 00:01:28.530
feed. Here, you can see the entries in a link
that declares that this speed is real-time.

00:01:28.530 --> 00:01:33.480
On the left is a Web application with an Ajax
connection to the server. Let me post the

00:01:33.480 --> 00:01:41.139
new update. And, look, there it is, it's received
by this other Web application within a second.

00:01:41.139 --> 00:01:44.170
These are two completely separate sizes communicating
in real-time through a hub.

00:01:44.170 --> 00:01:48.099
&gt;&gt; Fitzpatrick: Consider you're a publisher
and you're writing in your journal. Naturally,

00:01:48.099 --> 00:01:51.899
people are interested in what you're writing
and they want to know when you have new content.

00:01:51.899 --> 00:01:55.209
To find out about it, they need to keep asking
you if there's something new because that's

00:01:55.209 --> 00:02:00.049
the only way they can get updates. This can
be a considerable distraction, wasting time

00:02:00.049 --> 00:02:08.420
and effort. What if there were a better way?
Instead, what if subscribers registered their

00:02:08.420 --> 00:02:12.549
interest so publishers could tell them when
something is new. When I have something new,

00:02:12.549 --> 00:02:17.090
I could immediately send subscribers my updates.
That way, the subscribers don't have to be

00:02:17.090 --> 00:02:22.439
so annoying asking so often. Unfortunately,
this is still complicated, and not all publishers

00:02:22.439 --> 00:02:26.849
would want to do these themselves, juggling
the separate tasks of publishing and distributing

00:02:26.849 --> 00:02:32.069
content. So even better, all publishers can
have an assistant they delegate to. Here,

00:02:32.069 --> 00:02:36.670
I have Brett, my faithful assistant. I'll
have him take care of my bookkeeping. He'll

00:02:36.670 --> 00:02:41.340
keep track of my current fans and get them
new contents, so I can just write in peace.

00:02:41.340 --> 00:02:47.069
When I have something new, I'll only give
it to him and he can distribute it to everyone

00:02:47.069 --> 00:02:52.610
else. In PubSubHubbub terminology, Brett,
my assistant is what we call a hub. So, we

00:02:52.610 --> 00:02:56.140
hope you enjoyed our cheesy demo, and we hope
you'll check out PubSubHubbub yourself.

00:02:56.140 --> 00:02:59.200
&gt;&gt; Slatkin: You can start publishing and subscribing
to real-time feeds using the protocol today.

00:02:59.200 --> 00:03:04.159
So give it a try. There are also plug-ins
for many CMSs out there and more on the way.

00:03:04.159 --> 00:03:07.319
&gt;&gt; Fitzpatrick: And while this works for feeds
now, imagine the future when this works for

00:03:07.319 --> 00:03:11.709
any content-type on the Web, yet, images,
video, or all HTML pages. Let's make the whole

00:03:11.709 --> 00:03:12.349
Web real-time.

