WEBVTT
Kind: captions
Language: en

00:00:01.289 --> 00:00:02.330
MAJD BAKAR: Hi, everyone.

00:00:02.330 --> 00:00:05.570
My name is Majd Bakar, and
I run the engineering team

00:00:05.570 --> 00:00:07.887
that's possible for
Chrome Casson Cars.

00:00:07.887 --> 00:00:10.470
And this is John Affaki, who is
Engineering Manager for Google

00:00:10.470 --> 00:00:12.546
Cast SDK.

00:00:12.546 --> 00:00:15.170
Today we're going to talk to you
a little bit about Google Cast

00:00:15.170 --> 00:00:17.060
Evolution, and
some of the things

00:00:17.060 --> 00:00:20.740
you should expect from
us in the coming years.

00:00:20.740 --> 00:00:25.540
Nearly a year ago last July,
we announced Chromecast,

00:00:25.540 --> 00:00:27.730
the small little
evolutionary device

00:00:27.730 --> 00:00:30.520
that allows you to extend
your favorite content

00:00:30.520 --> 00:00:32.980
from your mobile device
to the big screen.

00:00:32.980 --> 00:00:38.930
Be it from a phone, tablet,
or laptop to any HDTV, all

00:00:38.930 --> 00:00:41.550
for a mere $35.

00:00:41.550 --> 00:00:44.210
Google Cast is the
technology behind Chromecast.

00:00:44.210 --> 00:00:47.860
It allows developers to enable
multi-screen experiences

00:00:47.860 --> 00:00:52.160
straddling mobile devices
and large screen displays.

00:00:52.160 --> 00:00:54.870
And earlier this
year we also released

00:00:54.870 --> 00:00:58.450
the Google Cast SDK and
the Cast Developer Program,

00:00:58.450 --> 00:01:02.860
which now has over 6,000
developers building application

00:01:02.860 --> 00:01:05.550
forecast around the world.

00:01:05.550 --> 00:01:08.030
Let's talk a little bit
about our vision and goals

00:01:08.030 --> 00:01:09.330
for Google Cast.

00:01:09.330 --> 00:01:11.230
[INAUDIBLE] the
goals we're going

00:01:11.230 --> 00:01:14.850
to see in the game
in a few minutes.

00:01:14.850 --> 00:01:18.400
First off, our goal is to
redefine how people interact

00:01:18.400 --> 00:01:20.430
with their TVs in
the living room,

00:01:20.430 --> 00:01:23.050
and offer them the most
compelling experience

00:01:23.050 --> 00:01:25.560
to bring their favorite
content and application

00:01:25.560 --> 00:01:27.830
to the large screen.

00:01:27.830 --> 00:01:30.530
Second, we wanted to
build an ecosystem

00:01:30.530 --> 00:01:33.930
to proliferate these
experiences-- an ecosystem that

00:01:33.930 --> 00:01:37.110
brings more Cast-ready
devices and more

00:01:37.110 --> 00:01:41.310
Cast-enabled applications
and services to all users.

00:01:41.310 --> 00:01:44.340
And we want that ecosystem
to be open to anyone

00:01:44.340 --> 00:01:47.100
to participate in
and be part of.

00:01:47.100 --> 00:01:50.640
Finally, we wanted to make sure
that wherever Cast is used,

00:01:50.640 --> 00:01:55.000
it's consistent to the user and
consistent for you to develop.

00:01:55.000 --> 00:01:59.260
Users do not need to learn a new
way to use their favorite app.

00:01:59.260 --> 00:02:00.950
And you, the
developer, do not need

00:02:00.950 --> 00:02:05.510
to learn a new
development for that.

00:02:05.510 --> 00:02:09.889
Let's first dive into
the interaction model.

00:02:09.889 --> 00:02:11.900
One of the things
that was obvious to us

00:02:11.900 --> 00:02:15.340
was how hard it is to
interact with the 10 foot UI.

00:02:15.340 --> 00:02:17.910
Whether you're browsing
a large media library,

00:02:17.910 --> 00:02:21.090
trying to decide what to
watch, searching for a show,

00:02:21.090 --> 00:02:24.230
or answering credential for
your favorite application,

00:02:24.230 --> 00:02:27.410
using a traditional
keypad remote or even

00:02:27.410 --> 00:02:29.780
a full-blown keyboard
from the couch,

00:02:29.780 --> 00:02:32.260
make that experience complex.

00:02:32.260 --> 00:02:35.670
On the other hand, technologies
like gyroscope and cameras

00:02:35.670 --> 00:02:39.280
used as remote controls
resulted in a clumsy device

00:02:39.280 --> 00:02:42.220
and still didn't solve the
complexity of interaction

00:02:42.220 --> 00:02:44.680
model.

00:02:44.680 --> 00:02:46.610
With full experiences
to control the TV

00:02:46.610 --> 00:02:49.790
so prevalent in the marketplace,
more and more content

00:02:49.790 --> 00:02:53.160
is being consumed on small
screens such as phone, tablet,

00:02:53.160 --> 00:02:54.590
and laptops.

00:02:54.590 --> 00:02:57.170
At the same time, the
mobile interaction model

00:02:57.170 --> 00:03:01.520
is proving to be great for
navigation and control.

00:03:01.520 --> 00:03:04.890
And while the portability of
the mobile devices and the user

00:03:04.890 --> 00:03:06.730
experience is very convenient.

00:03:06.730 --> 00:03:10.140
The actual consumption of the
video on those small screen

00:03:10.140 --> 00:03:13.020
is subpar, particularly
in shared screen scenarios

00:03:13.020 --> 00:03:14.800
like this, where
you want to show

00:03:14.800 --> 00:03:17.050
your BFF your favorite
summer vacation

00:03:17.050 --> 00:03:20.990
or you want to share the
latest biting movies.

00:03:20.990 --> 00:03:24.340
There's no doubt that users
want to consume their content

00:03:24.340 --> 00:03:26.010
on the largest
and most beautiful

00:03:26.010 --> 00:03:28.200
screen available to them.

00:03:28.200 --> 00:03:31.430
At the same time, rich
and immersive experience

00:03:31.430 --> 00:03:33.710
is the best way to
navigate the UI.

00:03:33.710 --> 00:03:36.980
And users are asking
for such experiences.

00:03:36.980 --> 00:03:39.790
So why not give them
the best of both worlds?

00:03:39.790 --> 00:03:43.020
The ubiquitous presence of the
mobile devices in their homes

00:03:43.020 --> 00:03:45.290
mean that you, the
developer, do not

00:03:45.290 --> 00:03:48.110
have to compromise
on form or function.

00:03:48.110 --> 00:03:50.880
Users can get the same
application that they already

00:03:50.880 --> 00:03:54.310
know and love on their
phones, tablets, and laptops,

00:03:54.310 --> 00:03:56.890
and cast to the best
screen in the house,

00:03:56.890 --> 00:04:00.690
while still using their mobile
device for email, web browsing,

00:04:00.690 --> 00:04:03.400
social activities, or the
selection of the next video

00:04:03.400 --> 00:04:08.450
they want to watch, all
without skipping a beat.

00:04:08.450 --> 00:04:11.630
Let's get to the ecosystem.

00:04:11.630 --> 00:04:13.380
Chromecast is a
tremendous success.

00:04:13.380 --> 00:04:16.519
And it continues to
exceed our expectations.

00:04:16.519 --> 00:04:18.470
Google Cast goes
beyond Chromecast,

00:04:18.470 --> 00:04:21.870
and extends our reach
to more devices.

00:04:21.870 --> 00:04:24.800
We want the consumer to
have a choice of devices

00:04:24.800 --> 00:04:26.580
they use to consume
their content

00:04:26.580 --> 00:04:28.550
in any room in the home.

00:04:28.550 --> 00:04:30.870
And we want developers to
build their application

00:04:30.870 --> 00:04:35.580
using a consistent
model for all devices.

00:04:35.580 --> 00:04:37.950
As you've seen from
yesterday's keynote address,

00:04:37.950 --> 00:04:39.700
in addition to Chromecast,
we've announced

00:04:39.700 --> 00:04:43.340
support for Google Cast
on Android TVs, where

00:04:43.340 --> 00:04:45.300
all the Google Cast
applications already

00:04:45.300 --> 00:04:48.130
developed for Chromecast
would work seamlessly,

00:04:48.130 --> 00:04:51.140
still using the same simple
Cast interaction model.

00:04:53.850 --> 00:04:56.150
Of course, this being
Google, we wanted

00:04:56.150 --> 00:04:58.540
to go big on the ecosystem
play for developers,

00:04:58.540 --> 00:05:01.890
making it as easy as
possible to get your services

00:05:01.890 --> 00:05:04.940
and experiences onto
all Cast devices.

00:05:04.940 --> 00:05:06.550
And give you the
opportunity to reach

00:05:06.550 --> 00:05:10.560
as many users as possible.

00:05:10.560 --> 00:05:13.360
We started out with five
applications at launch.

00:05:13.360 --> 00:05:16.540
And today we have thousands
more that integrate with Cast.

00:05:16.540 --> 00:05:19.360
These apps are available
on Android and iOS,

00:05:19.360 --> 00:05:24.030
as well as web apps in Chrome,
on Windows, Mac, and Chrome OS.

00:05:24.030 --> 00:05:26.670
The SDK is published and
available for all developers

00:05:26.670 --> 00:05:27.630
to integrate with.

00:05:27.630 --> 00:05:30.770
You can Cast-enable
your app very easily.

00:05:30.770 --> 00:05:34.010
All you need to do is
integrate discovery and control

00:05:34.010 --> 00:05:37.120
with the Cast SDK, and
you're up and running.

00:05:37.120 --> 00:05:41.350
We wanted to make the Cast
button ubiquitous in all apps,

00:05:41.350 --> 00:05:43.160
obviously where it makes sense.

00:05:43.160 --> 00:05:45.540
And to make that
possible, we enabled

00:05:45.540 --> 00:05:49.060
the Cast SDK across the three
most popular platforms--

00:05:49.060 --> 00:05:51.020
Android, iOS, and Chrome.

00:05:53.550 --> 00:05:55.830
We do believe it is
critical to support

00:05:55.830 --> 00:05:58.090
the heterogeneous mobile
device ecosystem you

00:05:58.090 --> 00:05:59.680
find in households today.

00:05:59.680 --> 00:06:03.000
And the user's data is proving
that to be a necessity.

00:06:03.000 --> 00:06:06.790
Half of all Chromecast
devices in the last month

00:06:06.790 --> 00:06:10.260
were used with mobile devices
from multiple platforms,

00:06:10.260 --> 00:06:11.750
as you can see here.

00:06:11.750 --> 00:06:14.190
Cross-platform
support does matter,

00:06:14.190 --> 00:06:17.430
as my wife can attest to,
where she uses her iPhone along

00:06:17.430 --> 00:06:20.290
with Chrome on Windows
laptop and an Android tablet

00:06:20.290 --> 00:06:22.300
to watch her favorite
content and play

00:06:22.300 --> 00:06:23.640
music throughout the house.

00:06:23.640 --> 00:06:24.735
All on Chromecast.

00:06:28.360 --> 00:06:31.310
Of course, one of our
most important goals

00:06:31.310 --> 00:06:35.540
was to keep things
consistent and simple.

00:06:35.540 --> 00:06:37.430
For users, we
wanted to make sure

00:06:37.430 --> 00:06:40.390
that everything is
simple and easy to use.

00:06:40.390 --> 00:06:43.400
And we did that by keeping
the casting experience very

00:06:43.400 --> 00:06:45.870
close to your mobile experience.

00:06:45.870 --> 00:06:48.450
And rather than teaching
users new ways to interface

00:06:48.450 --> 00:06:51.130
with your app, we keep
them in the comfort

00:06:51.130 --> 00:06:54.180
of their familiar settings
on their phones, tablets,

00:06:54.180 --> 00:06:55.580
or laptops.

00:06:55.580 --> 00:06:57.910
Whether they are playing
back music on the phone

00:06:57.910 --> 00:07:01.010
or through the TV speakers,
using the Google Play Music

00:07:01.010 --> 00:07:04.360
service, they do so
using the same play music

00:07:04.360 --> 00:07:09.250
app and the same interface
to control that playback.

00:07:09.250 --> 00:07:12.570
For developers we wanted to
keep things simple and easy

00:07:12.570 --> 00:07:16.370
to integrate with by using
HTML5 for development

00:07:16.370 --> 00:07:17.890
on Google Cast devices.

00:07:17.890 --> 00:07:20.770
We harness the power
of Chrome, and the ease

00:07:20.770 --> 00:07:24.520
of JavaScript development
and deployment.

00:07:24.520 --> 00:07:27.310
We've also invested in
our media player library

00:07:27.310 --> 00:07:31.440
to make the most streaming
format supported seamlessly.

00:07:31.440 --> 00:07:35.050
And we continue to invest in
this area, adding more formats

00:07:35.050 --> 00:07:39.110
and more features that opens
up the door for more content.

00:07:39.110 --> 00:07:41.060
On the sender side,
our integration

00:07:41.060 --> 00:07:43.240
on the supported platforms
is straightforward,

00:07:43.240 --> 00:07:46.920
and integrates well with each
platform development model.

00:07:46.920 --> 00:07:49.700
And we continue to invest in
adding more features as we

00:07:49.700 --> 00:07:52.980
expand our application reach.

00:07:52.980 --> 00:07:56.490
Also, we've introduced
strong UX guidelines

00:07:56.490 --> 00:07:59.000
to make sure that the user
experience across applications

00:07:59.000 --> 00:08:01.810
and devices, when you're
interacting with the TV,

00:08:01.810 --> 00:08:05.960
is consistent, familiar, and
easy to understand by the user.

00:08:05.960 --> 00:08:08.620
We never want to get the
user lost, or in a position

00:08:08.620 --> 00:08:12.430
where they don't
know what to do next.

00:08:12.430 --> 00:08:14.010
Let's talk a bit
about what trends

00:08:14.010 --> 00:08:17.270
we're seeing in the field.

00:08:17.270 --> 00:08:19.850
Media applications are
obviously the lion's share

00:08:19.850 --> 00:08:21.260
of applications we're seeing.

00:08:21.260 --> 00:08:24.590
And they straddle
three main facets.

00:08:24.590 --> 00:08:26.200
Video is the first one.

00:08:26.200 --> 00:08:29.140
Whether it's big names,
video streaming services

00:08:29.140 --> 00:08:33.539
like Netflix, Hulu Plus, or HBO,
or smaller content aggregators,

00:08:33.539 --> 00:08:34.990
using the big
screen for video has

00:08:34.990 --> 00:08:38.250
been the obvious
choice for developers.

00:08:38.250 --> 00:08:40.179
Music is the other
type of media that

00:08:40.179 --> 00:08:44.480
is proving to be a great match
for the Cast interaction model.

00:08:44.480 --> 00:08:47.930
It's so natural to control
an extensive playlist using

00:08:47.930 --> 00:08:49.580
the phone.

00:08:49.580 --> 00:08:51.890
And beautiful images
are a perfect candidate

00:08:51.890 --> 00:08:53.480
for the large screen.

00:08:53.480 --> 00:08:55.980
Showing and sharing
photos, whether personal,

00:08:55.980 --> 00:08:59.360
or just beautiful pictures
that make the TV contributor

00:08:59.360 --> 00:09:01.910
to the home decor,
pictures in general

00:09:01.910 --> 00:09:05.330
make for a great
living room experience.

00:09:05.330 --> 00:09:08.400
All of this content can be
served either from the Cloud,

00:09:08.400 --> 00:09:10.530
your mobile device,
or a local cloud

00:09:10.530 --> 00:09:12.520
from other devices in the home.

00:09:12.520 --> 00:09:15.180
And with the ability to
connect multiple mobile devices

00:09:15.180 --> 00:09:17.880
to a single session,
these media apps

00:09:17.880 --> 00:09:20.900
can bring great use
cases such as party mode,

00:09:20.900 --> 00:09:23.040
boarding, and sharing content.

00:09:23.040 --> 00:09:25.520
And with the ease of
use of mobile devices,

00:09:25.520 --> 00:09:27.560
these use cases
would truly shine.

00:09:31.750 --> 00:09:34.840
We've talked a bit about media
apps in the living room, which

00:09:34.840 --> 00:09:37.210
begs the question--
what about games?

00:09:37.210 --> 00:09:40.420
Obviously a big screen is
better than a small one.

00:09:40.420 --> 00:09:43.320
It's more beautiful, more
immersive, and more convenient

00:09:43.320 --> 00:09:44.420
to use.

00:09:44.420 --> 00:09:47.430
And for multiplayer games,
having your mobile device

00:09:47.430 --> 00:09:50.530
being your controller allows
for things that are just not

00:09:50.530 --> 00:09:52.400
possible using
traditional controllers.

00:09:52.400 --> 00:09:54.760
For example, being able
to hide a hand of cards

00:09:54.760 --> 00:09:56.820
from other players in
the room, or entering

00:09:56.820 --> 00:09:59.520
text in a high-paced
trivia game,

00:09:59.520 --> 00:10:02.290
these are things that
become trivially easy

00:10:02.290 --> 00:10:04.340
in the Cast world.

00:10:04.340 --> 00:10:07.010
An example of such
games is Big Web Quiz,

00:10:07.010 --> 00:10:09.320
where multiple players are
competing with each other

00:10:09.320 --> 00:10:11.510
using their phones to
make a selection presented

00:10:11.510 --> 00:10:12.800
by the game.

00:10:12.800 --> 00:10:14.940
We show you here
a quick video just

00:10:14.940 --> 00:10:16.659
explaining how the thing works.

00:10:16.659 --> 00:10:20.331
[MUSIC PLAYING]

00:10:46.640 --> 00:10:48.660
Catchy tune, huh?

00:10:48.660 --> 00:10:52.090
You can also go and play this
game up on the third floor.

00:10:52.090 --> 00:10:55.500
And you might even request
that tune for a ring tone.

00:10:55.500 --> 00:10:57.490
We're seeing a good
number of games going live

00:10:57.490 --> 00:10:58.310
with this model.

00:10:58.310 --> 00:11:00.060
And there are a lot
of great opportunities

00:11:00.060 --> 00:11:03.240
here for multiplayer space.

00:11:03.240 --> 00:11:05.350
One other great
example of multi-center

00:11:05.350 --> 00:11:08.980
is our very own home screen
on Chromecast called Backdrop.

00:11:08.980 --> 00:11:11.520
Here you see a stream
of beautiful pictures

00:11:11.520 --> 00:11:13.020
show up on the TV screen.

00:11:13.020 --> 00:11:15.520
And everyone in the room
who pulls theri phone out

00:11:15.520 --> 00:11:18.330
to interact with
the screen would

00:11:18.330 --> 00:11:21.110
get a card describing
the item on the screen.

00:11:21.110 --> 00:11:23.240
But each person would
get a different set

00:11:23.240 --> 00:11:26.630
of actions associated
with this card based

00:11:26.630 --> 00:11:29.500
on their behavior,
permission, and interest.

00:11:29.500 --> 00:11:32.980
For example, in this
particular card,

00:11:32.980 --> 00:11:35.090
you see here a picture of Paris.

00:11:35.090 --> 00:11:37.250
John, who loves to
cook, might just

00:11:37.250 --> 00:11:39.790
get actions related
to French recipes.

00:11:39.790 --> 00:11:41.820
I, on the hand, love art.

00:11:41.820 --> 00:11:43.480
And Backdrop might
just recommend

00:11:43.480 --> 00:11:47.290
a virtual tour of the Louvre
or a new art exhibition related

00:11:47.290 --> 00:11:49.690
to Paris that is running nearby.

00:11:49.690 --> 00:11:52.220
This allows for a very
personalized experience

00:11:52.220 --> 00:11:54.650
in the same app.

00:11:54.650 --> 00:11:58.760
And now let me give
the stage to John.

00:11:58.760 --> 00:12:00.004
JOHN AFFAKI: Thanks, Majd.

00:12:00.004 --> 00:12:00.670
Thanks everyone.

00:12:05.830 --> 00:12:08.614
I'm John Affaki, and I manage
the Google Cast SDK team.

00:12:08.614 --> 00:12:10.780
And I'm going to talk to
you a little bit about some

00:12:10.780 --> 00:12:13.270
of the features we're
currently working on.

00:12:13.270 --> 00:12:15.709
First, I'd like to talk
about a feature we touched

00:12:15.709 --> 00:12:17.750
on in the keynote yesterday,
which is the ability

00:12:17.750 --> 00:12:19.380
to cast from the
ten nearby devices

00:12:19.380 --> 00:12:21.046
without being on the
same Wi-Fi network.

00:12:23.107 --> 00:12:25.690
One of the key things we've been
striving for while developing

00:12:25.690 --> 00:12:28.640
Google Cast is keeping
things simple for users.

00:12:28.640 --> 00:12:32.510
While casting today is an easy
task, low friction once you're

00:12:32.510 --> 00:12:35.260
properly set up,
the initial step

00:12:35.260 --> 00:12:36.910
of getting on the
same Wi-Fi network

00:12:36.910 --> 00:12:39.224
can be really complicated.

00:12:39.224 --> 00:12:40.890
It doesn't matter if
it's because you're

00:12:40.890 --> 00:12:42.790
worried about the
privacy of your network,

00:12:42.790 --> 00:12:45.560
whether you have 14 random
characters or characters that

00:12:45.560 --> 00:12:47.539
would be really
hard to describe.

00:12:47.539 --> 00:12:49.580
Sometimes you just don't
want to have your guests

00:12:49.580 --> 00:12:51.112
on your Wi-Fi network.

00:12:51.112 --> 00:12:52.820
And you want them to
be able to just cast

00:12:52.820 --> 00:12:55.500
by simply being
in the same room.

00:12:55.500 --> 00:12:57.050
So this new feature allows that.

00:12:57.050 --> 00:13:00.400
It allows Google cast messages
sent through the Google Cast

00:13:00.400 --> 00:13:04.890
SDK to be sent over the Cloud
between Google Cast devices

00:13:04.890 --> 00:13:07.810
in your phones, or
tablets, or laptops,

00:13:07.810 --> 00:13:10.080
without the need to be on
the same Wi-Fi network.

00:13:10.080 --> 00:13:13.490
To enable the feature you
first go to the Chromecast app

00:13:13.490 --> 00:13:16.420
and go to your devices
settings, and find the casting

00:13:16.420 --> 00:13:18.600
from nearby device feature.

00:13:18.600 --> 00:13:20.490
Enabling it allows
your cast device

00:13:20.490 --> 00:13:22.367
to be discoverable
from nearby devices.

00:13:22.367 --> 00:13:24.950
You only need to do this once,
unless you want to turn it off,

00:13:24.950 --> 00:13:27.269
at which point you can go
back there and turn it off.

00:13:27.269 --> 00:13:29.810
The other question everybody's
asking, well, nearby devices--

00:13:29.810 --> 00:13:33.255
my neighbors-- weird
things can start happening.

00:13:33.255 --> 00:13:34.380
But don't worry about that.

00:13:34.380 --> 00:13:37.982
Basically, we have extra things
to protect you from that.

00:13:37.982 --> 00:13:39.440
Let's walk through
an example to go

00:13:39.440 --> 00:13:40.689
into a little bit more detail.

00:13:42.970 --> 00:13:44.710
Let's say Majd, his
phone in his pocket,

00:13:44.710 --> 00:13:47.400
walks into my living room,
where I have a Chromecast set up

00:13:47.400 --> 00:13:49.240
with the feature enabled.

00:13:49.240 --> 00:13:52.220
Now when Majd launches a
Cast-enabled application,

00:13:52.220 --> 00:13:54.910
since the nearby Chromecast
device is detected--

00:13:54.910 --> 00:13:57.370
and we use Android Location
Services with this--

00:13:57.370 --> 00:13:58.980
the Cast icon will appear.

00:13:58.980 --> 00:14:00.720
And when pressed, a
new route is going

00:14:00.720 --> 00:14:05.110
to show up on his device
that says, nearby devices.

00:14:08.980 --> 00:14:12.000
As you can see right there.

00:14:12.000 --> 00:14:14.020
When the route's
selected, a PIN code

00:14:14.020 --> 00:14:17.110
is ultrasonically played
through the TV speakers,

00:14:17.110 --> 00:14:19.970
and my Chromecast gets
automatically connected.

00:14:19.970 --> 00:14:21.540
Now the phone and
Chromecast exchange

00:14:21.540 --> 00:14:25.010
a token via the
ultrasonic pairing,

00:14:25.010 --> 00:14:27.692
and it temporarily
pairs the two devices.

00:14:27.692 --> 00:14:29.400
At that point they
can talk to each other

00:14:29.400 --> 00:14:32.230
through our cloud
over a TLS channel.

00:14:32.230 --> 00:14:34.570
If for some reason,
the ultrasonic token

00:14:34.570 --> 00:14:38.360
couldn't be exchanged, such
as if the TV was off or muted,

00:14:38.360 --> 00:14:40.190
than the PIN code could
be manually entered

00:14:40.190 --> 00:14:46.426
in that dialog to
get the same effect.

00:14:46.426 --> 00:14:48.175
Now the PIN code can
be found on Backdrop.

00:14:48.175 --> 00:14:50.530
You can see it right there.

00:14:50.530 --> 00:14:53.340
But if Backdrop is invisible,
such as, again if the TV's off,

00:14:53.340 --> 00:14:55.770
or if you're in the middle of
casting another application,

00:14:55.770 --> 00:14:57.660
I can get the PIN for
Majd by looking it up

00:14:57.660 --> 00:15:01.140
in my Chromecast app, since
I'm on the Wi-Fi network.

00:15:01.140 --> 00:15:03.610
Now as a developer, this
feature is enabled for you

00:15:03.610 --> 00:15:05.810
without any changes
needed in your app.

00:15:05.810 --> 00:15:08.570
Any data that you send
through the Google Cast SDK

00:15:08.570 --> 00:15:11.030
will be transparently sent
through this cloud channel.

00:15:11.030 --> 00:15:15.032
But if you send other kind of
data, for example, local media,

00:15:15.032 --> 00:15:16.990
then you'll be able to
opt out of this feature,

00:15:16.990 --> 00:15:19.450
because otherwise we
can't send that data

00:15:19.450 --> 00:15:21.535
through our cloud for now.

00:15:21.535 --> 00:15:22.910
So this feature
really allows you

00:15:22.910 --> 00:15:25.760
to build great social
experiences in your apps

00:15:25.760 --> 00:15:28.800
without much worry about what
it takes to hop onto the network

00:15:28.800 --> 00:15:32.370
and get users started.

00:15:32.370 --> 00:15:34.960
Your users can just walk
in, tap the task icon,

00:15:34.960 --> 00:15:37.580
and enjoy your app.

00:15:37.580 --> 00:15:39.750
Second, let's talk about
some of the announcements

00:15:39.750 --> 00:15:43.630
we made related to
Cast on Android TV.

00:15:43.630 --> 00:15:46.760
So Android TV devices have
the exact same functionality

00:15:46.760 --> 00:15:48.800
that you've come to
love with Chromecast.

00:15:48.800 --> 00:15:51.230
Every Google Cast application
written for Chromecast

00:15:51.230 --> 00:15:56.560
will work as is without any
modifications for Android TVs.

00:15:56.560 --> 00:16:00.410
Now Android TVs typically
also have a remote control

00:16:00.410 --> 00:16:02.599
along with Cast support.

00:16:02.599 --> 00:16:04.140
And so let's walk
through an example.

00:16:04.140 --> 00:16:06.150
Let's say my daughter
casts something

00:16:06.150 --> 00:16:08.140
from her tablet
to my Android TV.

00:16:08.140 --> 00:16:11.460
And I wanted to talk to her, but
I don't have my phone with me

00:16:11.460 --> 00:16:13.680
to pause the media.

00:16:13.680 --> 00:16:15.930
Now I can pick up the remote--
the Android TV remote--

00:16:15.930 --> 00:16:18.460
and press a media command
like Pause or Stop,

00:16:18.460 --> 00:16:22.130
and if the receiver application
was coded using the Google Cast

00:16:22.130 --> 00:16:24.280
media name space,
then the application

00:16:24.280 --> 00:16:27.190
would seamlessly receive the
message, the media messages,

00:16:27.190 --> 00:16:29.830
exactly as if it had been
sent from a phone or tablet

00:16:29.830 --> 00:16:34.410
or laptop without any changes
made to your application.

00:16:34.410 --> 00:16:37.020
And the other thing is with more
and more Google Cast devices

00:16:37.020 --> 00:16:39.940
coming up on the market, one of
the main things we wanted to do

00:16:39.940 --> 00:16:41.540
was avoid fragmentation.

00:16:41.540 --> 00:16:44.250
So in every Google Cast
device, whether Chromecast,

00:16:44.250 --> 00:16:47.200
or any Android TV, we're
running the same Cast receiver

00:16:47.200 --> 00:16:49.980
code which will be kept up to
date with background updates

00:16:49.980 --> 00:16:52.696
by Google, which means your
users will always be running

00:16:52.696 --> 00:16:54.320
the latest and greatest
Cast receivers.

00:16:57.130 --> 00:16:59.680
Third, we announced support
for casting your Android screen

00:16:59.680 --> 00:17:01.897
to cast devices.

00:17:01.897 --> 00:17:03.480
Now when we first
launched Chromecast,

00:17:03.480 --> 00:17:05.690
we introduced one of the
most popular features, which

00:17:05.690 --> 00:17:08.050
was the ability to
cast a tab from Chrome.

00:17:08.050 --> 00:17:11.180
Now this provided an easy way
to get all user's web content

00:17:11.180 --> 00:17:13.010
onto Chromecast.

00:17:13.010 --> 00:17:14.760
At the keynote
yesterday, we announced

00:17:14.760 --> 00:17:17.180
that we'll be rolling
out screen casting, which

00:17:17.180 --> 00:17:19.810
allows users to mirror their
Android displays onto Google

00:17:19.810 --> 00:17:21.369
Cast devices.

00:17:21.369 --> 00:17:23.085
Now this means as
a user, you could

00:17:23.085 --> 00:17:25.210
project your native Android
apps, which may not yet

00:17:25.210 --> 00:17:26.780
be Cast-enabled,
to the big screen

00:17:26.780 --> 00:17:29.340
without the developer
needing to do any work.

00:17:29.340 --> 00:17:33.070
However, with some changes,
you, as the developer,

00:17:33.070 --> 00:17:37.580
can also extend your application
to use multiple displays when

00:17:37.580 --> 00:17:40.060
this is enabled with the
secondary display being

00:17:40.060 --> 00:17:42.274
mirrored onto your
Google Cast device.

00:17:42.274 --> 00:17:44.190
You could do this by
opening up a presentation

00:17:44.190 --> 00:17:46.050
display on the
secondary screen when

00:17:46.050 --> 00:17:47.525
your app is being mirrored.

00:17:47.525 --> 00:17:48.900
Now there's a lot
of applications

00:17:48.900 --> 00:17:51.287
that benefit from screen
split experiences,

00:17:51.287 --> 00:17:53.370
and they can now take
advantage of the big screen.

00:17:53.370 --> 00:17:54.930
So for example, here
you can see this

00:17:54.930 --> 00:17:59.265
is us earlier, presentation
apps with speakers notes

00:17:59.265 --> 00:18:01.390
that could be on your phone
while you're projecting

00:18:01.390 --> 00:18:04.170
the full blown
presentation on the TV.

00:18:04.170 --> 00:18:06.100
You can also build
rich dual-screen games

00:18:06.100 --> 00:18:07.870
that take full advantage
of the processing

00:18:07.870 --> 00:18:10.650
power of your mobile device,
but the beautiful display

00:18:10.650 --> 00:18:11.280
on your wall.

00:18:14.027 --> 00:18:16.110
Fourth, let's talk a little
bit about enhancements

00:18:16.110 --> 00:18:19.044
to media applications.

00:18:19.044 --> 00:18:20.710
Now one of the biggest
items we launched

00:18:20.710 --> 00:18:22.580
with the release of
the Google Cast SDK

00:18:22.580 --> 00:18:25.610
was the Media Player Library,
bringing easy integration

00:18:25.610 --> 00:18:27.715
for DASH, HLS, and
Smooth streaming

00:18:27.715 --> 00:18:29.210
to media applications.

00:18:29.210 --> 00:18:30.710
It really reduced
the amount of time

00:18:30.710 --> 00:18:31.930
it takes to build
media applications

00:18:31.930 --> 00:18:34.380
to a fraction of what it took
before during the preview

00:18:34.380 --> 00:18:35.400
phase.

00:18:35.400 --> 00:18:38.480
Now we're making constant
improvements to this library,

00:18:38.480 --> 00:18:40.130
adding more formats
and trying to make

00:18:40.130 --> 00:18:42.422
it even easier to
integrate with your apps.

00:18:42.422 --> 00:18:44.380
Now it's because of this
library that the folks

00:18:44.380 --> 00:18:46.088
on the live stream
right now are probably

00:18:46.088 --> 00:18:49.090
ignoring us and watching the
Live Stream on Chromecast

00:18:49.090 --> 00:18:52.614
for the US World Cup game.

00:18:52.614 --> 00:18:55.030
Now accessibility is something
that we take very seriously

00:18:55.030 --> 00:18:55.630
at Google.

00:18:55.630 --> 00:18:57.486
And we know you guys do too.

00:18:57.486 --> 00:18:58.860
So we're introducing
full support

00:18:58.860 --> 00:19:01.160
for closed captioning
in the Google Cast SDK,

00:19:01.160 --> 00:19:02.620
as well as in our
default players.

00:19:02.620 --> 00:19:04.160
That means that
you, the developer,

00:19:04.160 --> 00:19:07.200
don't need to build any custom
UI to deal with users' caption

00:19:07.200 --> 00:19:08.730
settings, if you don't want to.

00:19:08.730 --> 00:19:11.180
You could, and we'll take
those settings instead,

00:19:11.180 --> 00:19:12.920
but we'll have
defaults in there.

00:19:12.920 --> 00:19:14.630
And you can use
standardized messages

00:19:14.630 --> 00:19:16.440
to manage the on/off settings.

00:19:16.440 --> 00:19:18.940
No need to build a custom
name space to deal with

00:19:18.940 --> 00:19:20.306
closed captioning anymore.

00:19:20.306 --> 00:19:22.680
Now your users will be able
to set their caption settings

00:19:22.680 --> 00:19:24.440
on their mobile
device settings page,

00:19:24.440 --> 00:19:27.940
and they'll be used on
the Google Cast devices.

00:19:27.940 --> 00:19:30.620
And that means that each user
can have personalized caption

00:19:30.620 --> 00:19:33.009
settings and manage
their own preferences.

00:19:33.009 --> 00:19:35.300
They'll persist, regardless
of which Google Cast device

00:19:35.300 --> 00:19:36.036
you cast to.

00:19:36.036 --> 00:19:38.160
Now this will be rolled
out over the next few weeks

00:19:38.160 --> 00:19:41.136
as we roll out the
update to the SDK.

00:19:41.136 --> 00:19:42.510
Now there are some
mobile devices

00:19:42.510 --> 00:19:43.926
that don't support
setting caption

00:19:43.926 --> 00:19:46.010
settings for the mobile device.

00:19:46.010 --> 00:19:48.730
And so the users will be able
to go to the Chromecast app

00:19:48.730 --> 00:19:51.450
to set defaults for the
Google Cast devices.

00:19:51.450 --> 00:19:53.520
And those will be used
if the settings aren't

00:19:53.520 --> 00:19:54.660
available on the phone.

00:19:54.660 --> 00:19:57.715
And that'll come a little
bit later this year.

00:19:57.715 --> 00:19:59.910
Alright, let's
talk about queuing.

00:19:59.910 --> 00:20:03.660
So for most music apps
and many video apps,

00:20:03.660 --> 00:20:05.430
queuing is pretty
much a prerequisite.

00:20:05.430 --> 00:20:08.750
But there hasn't been a
unified way of building queues.

00:20:08.750 --> 00:20:10.920
Every single app that
uses queuing today

00:20:10.920 --> 00:20:12.649
builds them in their own way.

00:20:12.649 --> 00:20:14.690
So we're working on adding
a standardized queuing

00:20:14.690 --> 00:20:18.010
API to our SDK which will handle
the logistics of creating,

00:20:18.010 --> 00:20:20.660
modifying, and managing
queues of media item.

00:20:20.660 --> 00:20:23.740
That means that you as an app
developer can simply add items

00:20:23.740 --> 00:20:26.689
to your queue, and if you're
using our default players,

00:20:26.689 --> 00:20:28.730
will automatically take
care of playing them back

00:20:28.730 --> 00:20:31.720
in the right order, and dealing
with any kind of reorder.

00:20:31.720 --> 00:20:33.630
This will be a full
fledged API which

00:20:33.630 --> 00:20:36.230
allows you to insert,
remove, reorder items,

00:20:36.230 --> 00:20:39.700
and anything you'd
expect from a queue.

00:20:39.700 --> 00:20:41.840
We're also building in
full-featured media controls

00:20:41.840 --> 00:20:43.749
onto mobile devices,
allowing users

00:20:43.749 --> 00:20:45.290
to interact with
whatever's currently

00:20:45.290 --> 00:20:48.790
playing with regards to
media from any device.

00:20:48.790 --> 00:20:50.470
Now, I'll go through an example.

00:20:50.470 --> 00:20:53.560
If I'm playing back media from
an application on my laptop,

00:20:53.560 --> 00:20:55.210
and my wife were to
pick up her tablet,

00:20:55.210 --> 00:20:57.770
which wouldn't have the
corresponding Android or iOS

00:20:57.770 --> 00:21:03.470
app associated with that
app, and she would still

00:21:03.470 --> 00:21:08.650
be able to pause, resume,
seek, and any common media

00:21:08.650 --> 00:21:12.080
action that you'd take simply
because her application was

00:21:12.080 --> 00:21:16.430
built using the standard
media name space.

00:21:16.430 --> 00:21:18.280
Now authentication and
credential exchange

00:21:18.280 --> 00:21:20.446
is another challenge that
the majority of developers

00:21:20.446 --> 00:21:21.806
have to deal with.

00:21:21.806 --> 00:21:23.180
We're also working
on a providing

00:21:23.180 --> 00:21:25.350
a simple, secure way to
deal with the transfer

00:21:25.350 --> 00:21:28.090
of credentials from
senders to receivers,

00:21:28.090 --> 00:21:29.590
so that your services
can seamlessly

00:21:29.590 --> 00:21:31.950
authenticate on Google Cast.

00:21:31.950 --> 00:21:33.710
Now this will be
integrated with queueing

00:21:33.710 --> 00:21:35.376
so that if different
items in your queue

00:21:35.376 --> 00:21:37.040
require different
credentials, you

00:21:37.040 --> 00:21:39.154
could pass the token
at insert time,

00:21:39.154 --> 00:21:41.320
and you won't have to deal
with it at playback time.

00:21:41.320 --> 00:21:44.300
For example, in an app
where, say Majd and I wanted

00:21:44.300 --> 00:21:48.460
to add music to a queue, and the
service required authentication

00:21:48.460 --> 00:21:51.030
for each item, Majd
could add the item

00:21:51.030 --> 00:21:52.630
and his token would
be passed along

00:21:52.630 --> 00:21:53.850
with the item in the queue.

00:21:53.850 --> 00:21:56.000
I would add something
to the queue

00:21:56.000 --> 00:21:57.547
and my credentials
would be passed.

00:21:57.547 --> 00:22:00.130
We could toss our phones out the
window, drive over the phone,

00:22:00.130 --> 00:22:01.660
or whatever, doesn't
really matter.

00:22:01.660 --> 00:22:04.930
And the playback would be
able to go back smoothly

00:22:04.930 --> 00:22:09.470
because the credentials
were already there.

00:22:09.470 --> 00:22:11.260
So we're adding more
features to the SDK,

00:22:11.260 --> 00:22:13.360
but another key area
that we're investing in

00:22:13.360 --> 00:22:15.985
is to make sure that your
users can find your apps.

00:22:15.985 --> 00:22:18.520
I mean APIs are key,
but an app is only great

00:22:18.520 --> 00:22:19.970
if it can reach its users.

00:22:19.970 --> 00:22:24.367
So we're making it easier for
them to find your applications.

00:22:24.367 --> 00:22:26.700
At the keynote yesterday, we
talked about the redesigned

00:22:26.700 --> 00:22:30.290
chromecast.com/apps website,
which allowed users to browse

00:22:30.290 --> 00:22:32.900
and find apps for
all of our platforms.

00:22:32.900 --> 00:22:36.360
Now a few weeks ago, we released
an updated developer console

00:22:36.360 --> 00:22:39.250
which allowed us to gather
information and assets

00:22:39.250 --> 00:22:41.270
to use to feature your apps.

00:22:41.270 --> 00:22:43.360
And as more and more
developers enter their data

00:22:43.360 --> 00:22:46.044
in the console, you'll see
their apps show up on the site.

00:22:46.044 --> 00:22:48.460
But that's just the beginning,
and more discovery features

00:22:48.460 --> 00:22:51.030
are coming to the website.

00:22:51.030 --> 00:22:53.030
We're also making
improvements to the Play Store

00:22:53.030 --> 00:22:55.980
to make it even easier to
search for Cast-enabled apps.

00:22:55.980 --> 00:22:58.850
This will bring relevant
recommended applications

00:22:58.850 --> 00:23:01.590
to Cast users to the forefront.

00:23:01.590 --> 00:23:05.000
We're also going to build in
support in the Chromecast app

00:23:05.000 --> 00:23:07.250
to surface apps that our
users already have installed,

00:23:07.250 --> 00:23:10.250
but actually don't
know are cast-enabled.

00:23:10.250 --> 00:23:15.990
So they'll be able to discover
them from the Chromecast app.

00:23:15.990 --> 00:23:18.240
Finally, I'm going to talk
to you about some use cases

00:23:18.240 --> 00:23:19.434
beyond media.

00:23:19.434 --> 00:23:20.850
As Majd said
earlier, the majority

00:23:20.850 --> 00:23:24.172
of the apps that we're seeing
are media applications.

00:23:24.172 --> 00:23:25.880
And much of that is
because we're heavily

00:23:25.880 --> 00:23:27.636
focused on making that happen.

00:23:27.636 --> 00:23:29.010
Now there are
however, many areas

00:23:29.010 --> 00:23:31.045
where we're seeing quite
a few apps show up.

00:23:31.045 --> 00:23:33.170
And over the next year
we'll be making enhancements

00:23:33.170 --> 00:23:35.420
to the Google Cast
SDK across the board

00:23:35.420 --> 00:23:40.331
to make it even easier for you
guys to enable the scenarios.

00:23:40.331 --> 00:23:42.580
Now the living room TV is
mainly used for two reasons.

00:23:42.580 --> 00:23:44.288
The first one is
obvious, and it's media,

00:23:44.288 --> 00:23:45.540
and we talked about that.

00:23:45.540 --> 00:23:47.570
The second one is gaming.

00:23:47.570 --> 00:23:49.600
Now with the number
of daily active users

00:23:49.600 --> 00:23:51.730
of mobile devices
absolutely dwarfing

00:23:51.730 --> 00:23:54.160
the overall number of
active console users,

00:23:54.160 --> 00:23:57.440
the audience for
multi-screen games is huge.

00:23:57.440 --> 00:23:59.440
Now the interaction model
enabled by the devices

00:23:59.440 --> 00:24:02.700
that users already
have today allow

00:24:02.700 --> 00:24:04.310
you to create games
that simply aren't

00:24:04.310 --> 00:24:06.170
practical to build
on your platform.

00:24:06.170 --> 00:24:08.565
With the phone for example,
users have a controller,

00:24:08.565 --> 00:24:12.960
they have a great touch screen,
a beautiful display, a camera,

00:24:12.960 --> 00:24:15.590
a microphone, a gyroscope,
and an accelerometer.

00:24:15.590 --> 00:24:17.110
And you can create
multiplayer games

00:24:17.110 --> 00:24:18.710
that anyone can join
without the need

00:24:18.710 --> 00:24:20.930
to purchase any
additional custom hardware

00:24:20.930 --> 00:24:24.440
and use all these features.

00:24:24.440 --> 00:24:27.440
Now as a sometime
lazy parent, I'm

00:24:27.440 --> 00:24:30.350
as guilty as anyone of using
the TV as a babysitter, which

00:24:30.350 --> 00:24:31.990
gives it a really bad rap.

00:24:31.990 --> 00:24:34.390
With Google Cast,
you could build

00:24:34.390 --> 00:24:36.650
creative educational
software that

00:24:36.650 --> 00:24:39.380
can now make me look
like a smart babysitter

00:24:39.380 --> 00:24:41.390
for using the TV.

00:24:41.390 --> 00:24:44.720
Now with the big screen being
used to watch video clips

00:24:44.720 --> 00:24:48.000
or images, for example, the
entire surface of my child's

00:24:48.000 --> 00:24:50.220
touchscreen could be
used for interactions,

00:24:50.220 --> 00:24:51.710
either via drawing,
or keyboards,

00:24:51.710 --> 00:24:54.090
or whatever interaction
model you choose to have.

00:24:54.090 --> 00:24:55.880
Those hands may be
little, but they really

00:24:55.880 --> 00:24:59.180
need a lot more
surface than ours do.

00:24:59.180 --> 00:25:00.810
Now, another great
use case would

00:25:00.810 --> 00:25:02.440
be adding in
multi-center capabilities

00:25:02.440 --> 00:25:04.090
into those educational games.

00:25:04.090 --> 00:25:07.020
For example, you can give
the ability for a parent

00:25:07.020 --> 00:25:10.630
to provide help or assistance
to a child from a second device

00:25:10.630 --> 00:25:12.780
while they're playing their
game on the first one,

00:25:12.780 --> 00:25:15.238
so that it doesn't interfere
with your child's touch screen

00:25:15.238 --> 00:25:18.035
experience, and builds
their confidence.

00:25:18.035 --> 00:25:19.410
Now going beyond
the living room,

00:25:19.410 --> 00:25:21.490
the usage of cast
devices in classrooms

00:25:21.490 --> 00:25:24.150
can make for a really
immersive experience.

00:25:24.150 --> 00:25:26.280
In more and more
cases, students are

00:25:26.280 --> 00:25:29.910
encouraged to use tablets or
laptops for their classes.

00:25:29.910 --> 00:25:33.000
Now whether it's for classroom
presentations, real time

00:25:33.000 --> 00:25:35.330
quizzes, or just to drill
deeper into whatever

00:25:35.330 --> 00:25:36.974
the teacher's
currently presenting,

00:25:36.974 --> 00:25:38.890
being able to interact
with the classroom just

00:25:38.890 --> 00:25:41.990
keeps students engaged.

00:25:41.990 --> 00:25:45.550
Now Enterprise is also a space
where using a Cast remote

00:25:45.550 --> 00:25:47.512
is pretty much a
daily occurrence.

00:25:47.512 --> 00:25:49.970
For example, being able to cast
a presentation-- like we're

00:25:49.970 --> 00:25:51.595
doing today, drive
a video conference--

00:25:51.595 --> 00:25:54.190
we do that all the time, or
even simple, obvious use cases

00:25:54.190 --> 00:25:55.690
like digital signage.

00:25:55.690 --> 00:25:57.460
There are thousands
of use cases that

00:25:57.460 --> 00:25:59.515
can be enabled by Google
Cast in the Enterprise.

00:25:59.515 --> 00:26:01.640
For example, this guy
probably would have something

00:26:01.640 --> 00:26:05.650
up on the screen if
he used Google Cast.

00:26:05.650 --> 00:26:07.430
As you can see,
there's a lot of room

00:26:07.430 --> 00:26:10.572
for innovative,
fresh, impactful apps.

00:26:10.572 --> 00:26:11.530
And we're here to help.

00:26:11.530 --> 00:26:14.300
The main thing we want you folks
to get out of this presentation

00:26:14.300 --> 00:26:17.040
is that we're evolving the
Google Cast ecosystem based off

00:26:17.040 --> 00:26:18.640
of what you guys are telling us.

00:26:18.640 --> 00:26:20.700
We're constantly
listening to the feedback,

00:26:20.700 --> 00:26:25.390
trolling the forums, looking at
the developer community on G +.

00:26:25.390 --> 00:26:28.721
And we were looking to see what
you guys want us to improve on.

00:26:28.721 --> 00:26:30.720
And so we want you to
keep that feedback coming,

00:26:30.720 --> 00:26:32.521
because we're really
only just beginning.

00:26:32.521 --> 00:26:34.770
So if you want to learn more
about Google Cast-- well,

00:26:34.770 --> 00:26:36.686
you're here-- you probably
know much about it.

00:26:36.686 --> 00:26:39.380
But if you want to
learn more about it,

00:26:39.380 --> 00:26:42.280
you can find more information
at google.com/cast

00:26:42.280 --> 00:26:45.244
and developer.google.com/cast.

00:26:45.244 --> 00:26:47.660
So we're going to take the
rest of the time for questions.

00:26:47.660 --> 00:26:48.160
Thanks.

00:26:54.142 --> 00:26:55.090
AUDIENCE: Hello.

00:26:55.090 --> 00:26:57.630
Sasha Goldman from
DistinctMEDIA.

00:26:57.630 --> 00:26:59.440
I have two questions.

00:26:59.440 --> 00:27:01.870
First of all, you described
the new great features

00:27:01.870 --> 00:27:06.930
that you will have in the
media player extension,

00:27:06.930 --> 00:27:08.660
like closed captions.

00:27:08.660 --> 00:27:11.710
Does it apply to the
custom receivers as well?

00:27:11.710 --> 00:27:12.460
JOHN AFFAKI: Yeah.

00:27:12.460 --> 00:27:14.850
So with the custom receivers,
you'll be able to access,

00:27:14.850 --> 00:27:16.420
let's take queuing for example.

00:27:16.420 --> 00:27:19.350
You'll have a queue object,
and you will get events

00:27:19.350 --> 00:27:21.511
when an item finishes
playing and there

00:27:21.511 --> 00:27:23.010
will be hooks for
you to do whatever

00:27:23.010 --> 00:27:24.009
it is that you're doing.

00:27:24.009 --> 00:27:27.170
So for example, if you were
to not use a standard video

00:27:27.170 --> 00:27:29.600
tag to play back, you'll get
an event which will tell you,

00:27:29.600 --> 00:27:31.351
hey, you should be
playing back this item.

00:27:31.351 --> 00:27:33.474
So there will be hooks in
order for you to do that.

00:27:33.474 --> 00:27:35.260
We just can't do full
playback because we

00:27:35.260 --> 00:27:37.720
don't know exactly what your
custom application will be,

00:27:37.720 --> 00:27:39.660
how your custom
application interacts.

00:27:39.660 --> 00:27:42.130
But yeah, all of these features
will be usable by that.

00:27:42.130 --> 00:27:44.537
They just need a
little bit more work.

00:27:44.537 --> 00:27:45.370
AUDIENCE: Thank you.

00:27:45.370 --> 00:27:49.060
And second question,
I asked that before.

00:27:49.060 --> 00:27:51.810
And I'm wondering
if anything changed

00:27:51.810 --> 00:27:58.185
in opening your open platform to
other platforms like Microsoft

00:27:58.185 --> 00:28:02.445
on Google Cast SDK site?

00:28:02.445 --> 00:28:04.070
MAJD BAKAR: So we
evaluate the addition

00:28:04.070 --> 00:28:08.790
of a new platform based
on popularity and usage.

00:28:08.790 --> 00:28:10.840
As other platforms
become more popular,

00:28:10.840 --> 00:28:12.597
we'll investigate that.

00:28:12.597 --> 00:28:14.180
JOHN AFFAKI: Yeah,
I mean we obviously

00:28:14.180 --> 00:28:17.209
have support for
Windows on Chrome.

00:28:17.209 --> 00:28:19.500
And we see a lot of applications
being developed there.

00:28:23.810 --> 00:28:25.440
AUDIENCE: Yeah,
Chrome's getting great.

00:28:25.440 --> 00:28:29.690
And I remember take
the Chrome notes

00:28:29.690 --> 00:28:31.550
and embed it in
your application,

00:28:31.550 --> 00:28:33.900
which is impractical.

00:28:33.900 --> 00:28:36.680
Question is, actually
have that dot Net,

00:28:36.680 --> 00:28:39.830
C Sharp SDK that
we can integrate

00:28:39.830 --> 00:28:42.820
in our existing lines
of the products.

00:28:42.820 --> 00:28:45.250
Right now we can't support Roku.

00:28:45.250 --> 00:28:46.880
We can't support Xbox 1.

00:28:46.880 --> 00:28:48.960
We cannot support Chromecast.

00:28:48.960 --> 00:28:53.320
And we support Chromecast on any
other platforms except Windows.

00:28:53.320 --> 00:28:59.560
And basically as products
from our product perspective,

00:28:59.560 --> 00:29:03.090
we're abandoning our customers
on the Windows side, which

00:29:03.090 --> 00:29:06.940
is actually quite
large by popularity

00:29:06.940 --> 00:29:08.250
from our point of view.

00:29:08.250 --> 00:29:11.251
That's the practicality
of that question.

00:29:11.251 --> 00:29:11.750
Thank you.

00:29:11.750 --> 00:29:13.674
JOHN AFFAKI: Thank you.

00:29:13.674 --> 00:29:15.450
AUDIENCE: Have you
guys worked at all

00:29:15.450 --> 00:29:18.320
with the Chrome
remote desktop team?

00:29:18.320 --> 00:29:22.850
Essentially turning
Chromecast into anywhere

00:29:22.850 --> 00:29:25.930
VPNs, to turn any screen
into whatever computer

00:29:25.930 --> 00:29:28.674
you're connecting to?

00:29:28.674 --> 00:29:31.090
JOHN AFFAKI: We constantly are
talking to the Chrome team.

00:29:31.090 --> 00:29:33.490
One of the challenges
there is how you actually

00:29:33.490 --> 00:29:35.060
deal with the extension.

00:29:35.060 --> 00:29:37.390
Do you mean like the
ability to promote

00:29:37.390 --> 00:29:41.792
into your desktop from say,
your mobile device, and--

00:29:41.792 --> 00:29:42.375
AUDIENCE: Yes.

00:29:42.375 --> 00:29:45.130
So if I was to
take my Chromecast,

00:29:45.130 --> 00:29:47.830
plug it in this projector,
remote into my computer

00:29:47.830 --> 00:29:50.307
at home, and have a keyboard
connected to the Chromecast

00:29:50.307 --> 00:29:52.140
essentially turn the
screen into my computer

00:29:52.140 --> 00:29:53.040
from home streaming.

00:29:56.090 --> 00:29:58.719
MAJD BAKAR: It's an
interesting use case.

00:29:58.719 --> 00:30:00.760
We need to discuss it with
the remote staff team.

00:30:00.760 --> 00:30:01.343
AUDIENCE: Yes.

00:30:01.343 --> 00:30:04.300
Dell came out with a USP
HDMI 6 similar to you guys

00:30:04.300 --> 00:30:06.539
that essentially runs an
entire computer on there.

00:30:06.539 --> 00:30:08.330
So you can turn any
screen into a computer.

00:30:08.330 --> 00:30:09.820
But with Chromecast
being so light,

00:30:09.820 --> 00:30:12.570
and the Chrome
remote desktop team

00:30:12.570 --> 00:30:16.280
making such amazing advances
on that side, mending the two

00:30:16.280 --> 00:30:20.470
together could almost turn
that into an anywhere platform.

00:30:20.470 --> 00:30:22.140
MAJD BAKAR: Thanks.

00:30:22.140 --> 00:30:24.180
AUDIENCE: You mentioned
about the devices

00:30:24.180 --> 00:30:26.582
which are not on Wi-Fi.

00:30:26.582 --> 00:30:32.262
Will not be a discovery option
if the content stream is local.

00:30:32.262 --> 00:30:32.970
JOHN AFFAKI: Yes.

00:30:32.970 --> 00:30:37.010
AUDIENCE: So I'm building
an application which

00:30:37.010 --> 00:30:38.950
is streaming local content now.

00:30:38.950 --> 00:30:41.820
Do I need to make any
changes to tell the casting

00:30:41.820 --> 00:30:44.080
service that my content
is local and not

00:30:44.080 --> 00:30:45.727
coming from a foreign location?

00:30:45.727 --> 00:30:47.810
JOHN AFFAKI: So when you
talk about local content,

00:30:47.810 --> 00:30:50.740
you mean content on your phone
or on your tablet, right?

00:30:50.740 --> 00:30:51.570
AUDIENCE: Yes.

00:30:51.570 --> 00:30:53.320
JOHN AFFAKI: So one
of the main challenges

00:30:53.320 --> 00:30:59.840
is the Cloud messaging system
is optimized for the Google Cast

00:30:59.840 --> 00:31:03.320
SDK, which usually is somewhat
short burst messages, which

00:31:03.320 --> 00:31:06.310
is mostly about notifying
your application.

00:31:06.310 --> 00:31:09.635
And so we're not right now
ready to deal with say,

00:31:09.635 --> 00:31:13.021
a five gigabyte file that you'll
be streaming through there.

00:31:13.021 --> 00:31:14.770
Now if you were dealing
with local content

00:31:14.770 --> 00:31:17.130
say, with the ability
to-- you could probably

00:31:17.130 --> 00:31:19.962
pass a URL that may be
accessible from the Cloud,

00:31:19.962 --> 00:31:21.420
and you would be
able to stream it.

00:31:21.420 --> 00:31:24.200
But your URL, in
typical cases, you'd

00:31:24.200 --> 00:31:27.835
be opening up a local port,
say 192 address space.

00:31:27.835 --> 00:31:29.960
You wouldn't be able to
stream your media that way.

00:31:29.960 --> 00:31:31.100
But if you were to
open up something

00:31:31.100 --> 00:31:33.350
that could go through the
NAT and the open internet,

00:31:33.350 --> 00:31:34.320
then you'd be able to stream it.

00:31:34.320 --> 00:31:36.070
We just can't send
large media file.

00:31:36.070 --> 00:31:38.470
Essentially the Google
Cast SDK channels

00:31:38.470 --> 00:31:42.080
are really meant for
notifications and messages.

00:31:42.080 --> 00:31:43.770
AUDIENCE: True, but
so in that case,

00:31:43.770 --> 00:31:45.145
how do I make sure
my application

00:31:45.145 --> 00:31:46.812
to have the opt-out
option for the user.

00:31:46.812 --> 00:31:49.103
JOHN AFFAKI: Well, we won't
be able to have the option.

00:31:49.103 --> 00:31:50.690
Essentially when we
talk about opt out

00:31:50.690 --> 00:31:52.630
of this feature, because
essentially you might end up

00:31:52.630 --> 00:31:54.840
with a somewhat broken
experience, where you think

00:31:54.840 --> 00:31:56.530
your address is 192,
blah, blah, blah,

00:31:56.530 --> 00:31:58.738
and the cast device on the
other side is going to go,

00:31:58.738 --> 00:32:00.410
yeah, it's not.

00:32:00.410 --> 00:32:03.650
And so in the developer portal,
in the developer console,

00:32:03.650 --> 00:32:05.390
you'll be able to
basically opt out

00:32:05.390 --> 00:32:08.230
of local discovery, which
means that in your application,

00:32:08.230 --> 00:32:10.810
the user will not see
the nearby devices.

00:32:10.810 --> 00:32:11.650
AUDIENCE: Fine.

00:32:11.650 --> 00:32:13.097
That's what I was looking for.

00:32:13.097 --> 00:32:14.930
JOHN AFFAKI: As much
as we want to make sure

00:32:14.930 --> 00:32:16.346
that all your use
cases are there,

00:32:16.346 --> 00:32:20.260
we really want to make sure
we protect the end user also.

00:32:20.260 --> 00:32:23.570
AUDIENCE: Thank you.

00:32:23.570 --> 00:32:29.100
AUDIENCE: Any new word on
casting from your desktop,

00:32:29.100 --> 00:32:30.960
but not using Chrome?

00:32:30.960 --> 00:32:34.640
So if you have a DVD
or a Blu-ray disc

00:32:34.640 --> 00:32:39.207
to put in your laptop, and you
want to stream it that way.

00:32:39.207 --> 00:32:41.040
Because I know you guys
are working on that,

00:32:41.040 --> 00:32:43.830
and you're having
audio problems,

00:32:43.830 --> 00:32:46.280
from what I've looked up.

00:32:46.280 --> 00:32:51.296
JOHN AFFAKI: Do you mean the
desktop mirroring feature?

00:32:51.296 --> 00:32:55.600
MAJD BAKAR: You are talking
about mirroring, or casting?

00:32:55.600 --> 00:32:56.620
The commanding control?

00:32:56.620 --> 00:33:00.870
AUDIENCE: Yeah, like casting
your desktop on the screen.

00:33:00.870 --> 00:33:03.340
MAJD BAKAR: So we
continue to investigate.

00:33:03.340 --> 00:33:06.901
This is currently an
experimental feature.

00:33:06.901 --> 00:33:08.150
We're experimenting with that.

00:33:08.150 --> 00:33:11.680
There are challenges into
mirroring the full desktop.

00:33:11.680 --> 00:33:14.211
And we're still working on that.

00:33:14.211 --> 00:33:14.752
AUDIENCE: OK.

00:33:14.752 --> 00:33:16.030
Thank you.

00:33:16.030 --> 00:33:18.250
AUDIENCE: Are you guys
looking into doing primitives

00:33:18.250 --> 00:33:21.671
for images or slide shows?

00:33:21.671 --> 00:33:23.420
JOHN AFFAKI: Do you
mean like for example,

00:33:23.420 --> 00:33:24.960
the equivalent of a
default player for that?

00:33:24.960 --> 00:33:25.560
AUDIENCE: Yeah exactly.

00:33:25.560 --> 00:33:27.350
Like you have a media
player for video.

00:33:27.350 --> 00:33:30.975
Would you have a slide
show player for images?

00:33:30.975 --> 00:33:33.100
JOHN AFFAKI: I believe our
default players actually

00:33:33.100 --> 00:33:36.620
allow you to at least
cast one image right now.

00:33:36.620 --> 00:33:39.580
And as we'll add queuing, we'll
have support for images also,

00:33:39.580 --> 00:33:42.380
as part of those.

00:33:42.380 --> 00:33:46.064
So you'll be able to essentially
add images to a queue.

00:33:46.064 --> 00:33:47.480
AUDIENCE: Without
any other media,

00:33:47.480 --> 00:33:48.860
and it'll cycle through them.

00:33:48.860 --> 00:33:49.609
JOHN AFFAKI: Yeah.

00:33:49.609 --> 00:33:50.430
AUDIENCE: OK.

00:33:50.430 --> 00:33:51.940
Thank you.

00:33:51.940 --> 00:33:55.560
AUDIENCE: Along those lines,
we noticed a lot of apps

00:33:55.560 --> 00:33:59.102
that you can cast
photos and slide shows,

00:33:59.102 --> 00:34:01.600
but one thing about
those, to me at least,

00:34:01.600 --> 00:34:03.410
they're boring without music.

00:34:03.410 --> 00:34:06.520
So it would require
I guess two streams,

00:34:06.520 --> 00:34:10.290
but is there any opportunity
there to be able to cast like,

00:34:10.290 --> 00:34:12.864
photos from a source
and music as well?

00:34:12.864 --> 00:34:14.739
JOHN AFFAKI: You mean
from different sources?

00:34:14.739 --> 00:34:17.330
There's nothing today
preventing any application

00:34:17.330 --> 00:34:20.360
from playing back audio
and showing photos

00:34:20.360 --> 00:34:21.370
at the same time.

00:34:21.370 --> 00:34:23.570
Essentially, if you think
about what Chromecast is,

00:34:23.570 --> 00:34:26.697
you've got the
full power of HTML.

00:34:26.697 --> 00:34:28.280
And as far as I know,
you can actually

00:34:28.280 --> 00:34:31.530
play back audio and video, or
audio and images on the web.

00:34:31.530 --> 00:34:32.030
Right?

00:34:32.030 --> 00:34:32.780
I mean, obviously.

00:34:32.780 --> 00:34:33.420
Sorry.

00:34:33.420 --> 00:34:35.139
And so in this particular
case, if you're

00:34:35.139 --> 00:34:37.190
talking about say, being
able to cast Google Play

00:34:37.190 --> 00:34:39.520
Music while doing
your photos, we

00:34:39.520 --> 00:34:42.090
have no plans of
allowing two applications

00:34:42.090 --> 00:34:43.889
to run in parallel on that.

00:34:43.889 --> 00:34:47.679
Mostly because the
interaction model for users

00:34:47.679 --> 00:34:49.100
might get very complicated.

00:34:49.100 --> 00:34:50.480
AUDIENCE: That's true.

00:34:50.480 --> 00:34:52.938
JOHN AFFAKI: But there's nothing
preventing an application,

00:34:52.938 --> 00:34:55.940
for example, from deciding to
be able to play background music

00:34:55.940 --> 00:35:00.200
or allow you to cast from audio
and photos at the same time.

00:35:00.200 --> 00:35:02.200
AUDIENCE: Is that something
the Android TV would

00:35:02.200 --> 00:35:04.330
be able to solve, if
somebody wanted to cast

00:35:04.330 --> 00:35:08.094
play music and have their photos
streaming at the same time?

00:35:08.094 --> 00:35:10.510
MAJD BAKAR: You still have the
same problem with the user.

00:35:10.510 --> 00:35:12.950
If the user is using their
phone, if they want to pause,

00:35:12.950 --> 00:35:14.283
which one do they want to pause.

00:35:14.283 --> 00:35:17.190
So until we figure out how to
do that on the sender side,

00:35:17.190 --> 00:35:20.125
it's irrelevant of
what receiver it is.

00:35:20.125 --> 00:35:22.480
JOHN AFFAKI: It's not really
a platform limitation.

00:35:22.480 --> 00:35:25.439
We're trying to make sure that
the interaction model is great.

00:35:25.439 --> 00:35:25.980
AUDIENCE: OK.

00:35:25.980 --> 00:35:27.180
Thanks.

00:35:27.180 --> 00:35:29.180
AUDIENCE: What's going
to be the audio and video

00:35:29.180 --> 00:35:31.330
latency for the new mirroring
feature from Android

00:35:31.330 --> 00:35:34.020
to Chromecast?

00:35:34.020 --> 00:35:39.440
MAJD BAKAR: We're trying to make
it as low latency as possible.

00:35:39.440 --> 00:35:43.179
We're not going to publish
a number at this time.

00:35:43.179 --> 00:35:45.345
As was announced yesterday,
it's still beta feature.

00:35:45.345 --> 00:35:47.070
AUDIENCE: So is it
going to be faster

00:35:47.070 --> 00:35:49.617
or slower than from the browser?

00:35:49.617 --> 00:35:50.950
MAJD BAKAR: It should be faster.

00:35:50.950 --> 00:35:52.810
I mean, lower latency.

00:35:52.810 --> 00:35:54.810
JOHN AFFAKI: I mean, you
saw the demo yesterday.

00:35:54.810 --> 00:35:56.490
And you'll be seeing
it very shortly.

00:35:56.490 --> 00:35:57.980
I mean, we've been
play testing it

00:35:57.980 --> 00:35:59.810
with games and all
sorts of things,

00:35:59.810 --> 00:36:02.910
so it's very responsive.

00:36:02.910 --> 00:36:04.621
AUDIENCE: Thank you.

00:36:04.621 --> 00:36:05.620
AUDIENCE: Same question.

00:36:05.620 --> 00:36:07.341
Thank you.

00:36:07.341 --> 00:36:09.332
JOHN AFFAKI: Two-for.

00:36:09.332 --> 00:36:11.540
AUDIENCE: I haven't played
with this in a little bit,

00:36:11.540 --> 00:36:12.831
so it might have gotten better.

00:36:12.831 --> 00:36:15.130
But I remember we were
working on in our office

00:36:15.130 --> 00:36:17.550
having a bunch of
default applications

00:36:17.550 --> 00:36:19.494
running on these
Chromecasts, and then we

00:36:19.494 --> 00:36:21.660
want people to be able to
put something up, and then

00:36:21.660 --> 00:36:24.700
have that application seamlessly
come back when they're done.

00:36:24.700 --> 00:36:26.700
And I remember we were
having some difficulties.

00:36:26.700 --> 00:36:29.260
Kind of like writing our own
screen saver sort of thing.

00:36:29.260 --> 00:36:32.680
Is there any plan to put
in APIs to easily support

00:36:32.680 --> 00:36:35.390
having your own version
of a screen saver

00:36:35.390 --> 00:36:38.080
for the Chromecast?

00:36:38.080 --> 00:36:40.330
JOHN AFFAKI: Yes and no.

00:36:40.330 --> 00:36:43.140
Not as a complete
replacement for Backdrop.

00:36:43.140 --> 00:36:44.626
But as Rishi
announced yesterday,

00:36:44.626 --> 00:36:46.750
we're going to be talking
to third party developers

00:36:46.750 --> 00:36:49.120
to have the ability
for them to add

00:36:49.120 --> 00:36:52.540
their own feeds into Backdrop.

00:36:52.540 --> 00:36:55.115
AUDIENCE: Thanks.

00:36:55.115 --> 00:36:55.980
AUDIENCE: Hi.

00:36:55.980 --> 00:36:57.650
So with the screen
mirroring, is there

00:36:57.650 --> 00:37:00.040
going to be an option for
individual applications

00:37:00.040 --> 00:37:01.089
to turn that off?

00:37:01.089 --> 00:37:03.630
Say for example, for apps that
may have the rights to display

00:37:03.630 --> 00:37:07.620
video on the small screen,
but not on the big screen?

00:37:07.620 --> 00:37:12.280
MAJD BAKAR: So this
is-- on Android,

00:37:12.280 --> 00:37:14.450
it's a system function.

00:37:14.450 --> 00:37:16.760
And depending on the
level of security

00:37:16.760 --> 00:37:20.070
you have in terms of
content protection,

00:37:20.070 --> 00:37:21.580
you'd be able control that.

00:37:21.580 --> 00:37:24.787
This is all part of the
presentation API in Android.

00:37:24.787 --> 00:37:25.620
AUDIENCE: Thank you.

00:37:25.620 --> 00:37:28.900
AUDIENCE: Since you're adding
media control from the Android

00:37:28.900 --> 00:37:30.750
TV remote to
Chromecast, would it

00:37:30.750 --> 00:37:36.760
be possible to do the same with
HDMI CC on the old Chromecast?

00:37:36.760 --> 00:37:38.860
MAJD BAKAR: It's
a great feature.

00:37:38.860 --> 00:37:41.607
We're looking into that.

00:37:41.607 --> 00:37:43.440
AUDIENCE: Do you have
any timeline as far as

00:37:43.440 --> 00:37:46.289
when the queue API and
some of the other things

00:37:46.289 --> 00:37:47.830
that you talked
about are going to be

00:37:47.830 --> 00:37:49.430
actually live on Chromecast?

00:37:49.430 --> 00:37:51.750
JOHN AFFAKI: So the
closed captioning APIs

00:37:51.750 --> 00:37:53.190
are essentially rolled out.

00:37:53.190 --> 00:37:55.980
We talked about rolling
out the new Google Play

00:37:55.980 --> 00:38:00.345
Services with screen
casting and closed

00:38:00.345 --> 00:38:01.470
captioning as part of that.

00:38:01.470 --> 00:38:03.020
So it'll be over
the next few weeks.

00:38:03.020 --> 00:38:05.020
We're talking about
queuing and ID delegation.

00:38:05.020 --> 00:38:06.360
We're currently working on that.

00:38:06.360 --> 00:38:08.979
And it's soon.

00:38:08.979 --> 00:38:10.520
It's going to be an
upcoming release.

00:38:10.520 --> 00:38:11.145
AUDIENCE: Yeah.

00:38:11.145 --> 00:38:12.150
OK, thank you.

00:38:12.150 --> 00:38:15.420
AUDIENCE: I just had a question
about the video file types

00:38:15.420 --> 00:38:17.520
that Chromecast supports.

00:38:17.520 --> 00:38:18.950
Will there be an update to that?

00:38:18.950 --> 00:38:20.330
Or is it a limitation
to the hardware?

00:38:20.330 --> 00:38:21.300
I know currently you
can use something

00:38:21.300 --> 00:38:23.110
like Plex or
something, but you have

00:38:23.110 --> 00:38:24.990
to run a server on a computer.

00:38:24.990 --> 00:38:27.520
Is there going to be an
update to maybe codecs?

00:38:27.520 --> 00:38:30.990
MAJD BAKAR: On the codec
itself, unfortunately it's

00:38:30.990 --> 00:38:32.950
a hardware limitation.

00:38:32.950 --> 00:38:36.590
But on the container
and transport stream,

00:38:36.590 --> 00:38:38.020
that we are adding as we go.

00:38:38.020 --> 00:38:44.500
So codec, it's H.264 up to
high profile as well as VP8

00:38:44.500 --> 00:38:45.380
on video.

00:38:45.380 --> 00:38:49.030
On audio we have a
much larger list.

00:38:49.030 --> 00:38:53.830
In terms of streaming format,
we support the MP4 base

00:38:53.830 --> 00:38:57.040
and the Impact 2TS base,
but we are adding as we go.

00:38:57.040 --> 00:38:59.061
AUDIENCE: Thank you.

00:38:59.061 --> 00:39:00.560
AUDIENCE: When
casting, I would love

00:39:00.560 --> 00:39:03.790
to be able to put my
headphones in my phone,

00:39:03.790 --> 00:39:06.260
and then get the
music from the TV.

00:39:06.260 --> 00:39:08.200
So are you taking that
into consideration?

00:39:08.200 --> 00:39:12.480
And do you have a best practice
or best approach for that?

00:39:12.480 --> 00:39:14.230
MAJD BAKAR: The
trick there is making

00:39:14.230 --> 00:39:18.350
sure you have the
synchronization right.

00:39:18.350 --> 00:39:20.050
Over Wi-Fi, things
become challenging.

00:39:20.050 --> 00:39:23.110
But it is definitely an
area of investment for us.

00:39:23.110 --> 00:39:24.660
We still don't have an answer.

00:39:24.660 --> 00:39:25.430
So I'm sorry.

00:39:25.430 --> 00:39:27.590
I don't have the
silver bullet here.

00:39:27.590 --> 00:39:30.560
But we're looking into
ways to make it easier.

00:39:30.560 --> 00:39:34.980
So we provide you with
some timing information,

00:39:34.980 --> 00:39:37.054
so you can synchronize
audio and video.

00:39:40.690 --> 00:39:44.330
AUDIENCE: Romain from
France, France [INAUDIBLE].

00:39:44.330 --> 00:39:49.670
And we recently released a
Chromecast enabled application

00:39:49.670 --> 00:39:52.410
on Android, which is France 24.

00:39:52.410 --> 00:39:58.560
And we had problems
integrating the live stream

00:39:58.560 --> 00:40:03.945
of our channel because
of cross domain policies.

00:40:03.945 --> 00:40:08.220
Do you plan on lowering
restrictions or giving

00:40:08.220 --> 00:40:12.160
guidelines for standard
streaming solutions,

00:40:12.160 --> 00:40:15.574
like for the media server?

00:40:15.574 --> 00:40:17.906
MAJD BAKAR: Go ahead.

00:40:17.906 --> 00:40:19.280
JOHN AFFAKI: So
cross domain auth

00:40:19.280 --> 00:40:21.670
is something that the web
is dealing with, right?

00:40:21.670 --> 00:40:23.274
And the reason the
majority of apps

00:40:23.274 --> 00:40:24.690
don't run into
this on normal web,

00:40:24.690 --> 00:40:28.750
is because most use Flash--
less and less-- but many

00:40:28.750 --> 00:40:29.920
are using Flash.

00:40:29.920 --> 00:40:32.450
So we want to keep the
development process

00:40:32.450 --> 00:40:34.530
as close as possible
to the web development

00:40:34.530 --> 00:40:37.410
process, which means that at
least for now, cross domain

00:40:37.410 --> 00:40:39.230
auth is staying.

00:40:39.230 --> 00:40:42.581
I think Leon Nichols
posted something

00:40:42.581 --> 00:40:43.580
on the developer forum--

00:40:43.580 --> 00:40:44.454
MAJD BAKAR: Guidelines.

00:40:44.454 --> 00:40:44.891
JOHN AFFAKI: Sorry?

00:40:44.891 --> 00:40:45.330
MAJD BAKAR: Guidelines.

00:40:45.330 --> 00:40:46.746
JOHN AFFAKI: Yeah,
some guidelines

00:40:46.746 --> 00:40:49.200
on how to deal with it.

00:40:49.200 --> 00:40:51.450
We know this is a
challenge for many people,

00:40:51.450 --> 00:40:54.407
particularly during
development, because once you

00:40:54.407 --> 00:40:56.490
go to production, you're
a little bit more set up.

00:40:56.490 --> 00:40:58.570
But developing from
your dev machine,

00:40:58.570 --> 00:41:00.300
it's always harder
to get a live stream.

00:41:00.300 --> 00:41:02.920
So we're looking into
ways of making it easier.

00:41:02.920 --> 00:41:06.600
But cross domain
auth is here to say.

00:41:06.600 --> 00:41:08.910
MAJD BAKAR: And also we're
working with Mint player

00:41:08.910 --> 00:41:11.710
in the industry,
particular CDN providers

00:41:11.710 --> 00:41:14.734
to find alternatives as well.

00:41:14.734 --> 00:41:15.984
Make it easier for developers.

00:41:15.984 --> 00:41:17.600
AUDIENCE: Thank you.

00:41:17.600 --> 00:41:19.160
AUDIENCE: Are you
looking at getting

00:41:19.160 --> 00:41:22.220
five gigahertz or other Wi-Fi
protocols like Enterprise

00:41:22.220 --> 00:41:25.230
security supported
on the hardware,

00:41:25.230 --> 00:41:29.850
either through a Gen
2 or Android TVs?

00:41:29.850 --> 00:41:34.370
MAJD BAKAR: So we can't
talk about future hardware.

00:41:34.370 --> 00:41:39.440
But these are stuff that
are interesting for us.

00:41:39.440 --> 00:41:41.900
AUDIENCE: Since the
hardware capabilities

00:41:41.900 --> 00:41:43.670
of Android TV and
the old Chromecast

00:41:43.670 --> 00:41:45.450
is different,
especially regarding

00:41:45.450 --> 00:41:48.570
codec supported in
encryption, and so on.

00:41:48.570 --> 00:41:51.380
Is there going to be any
difference in support

00:41:51.380 --> 00:41:56.190
of video files in
Chromecast on Android TV?

00:41:56.190 --> 00:42:00.940
MAJD BAKAR: So actually,
it will be identical.

00:42:00.940 --> 00:42:05.220
We are putting all the
hardware requirements

00:42:05.220 --> 00:42:09.840
in terms of codec,
DRM, and streaming

00:42:09.840 --> 00:42:12.450
as part of the Android
TV requirement.

00:42:12.450 --> 00:42:16.190
And whatever runs on Chromecast
would run on Android TV.

00:42:16.190 --> 00:42:18.910
AUDIENCE: So for example,
if I had a 4K source,

00:42:18.910 --> 00:42:21.510
I wouldn't be able to play
through Chromecast on Android

00:42:21.510 --> 00:42:22.217
TV?

00:42:22.217 --> 00:42:22.842
MAJD BAKAR: No.

00:42:25.296 --> 00:42:26.920
So this is the last
question because we

00:42:26.920 --> 00:42:28.174
are running out of time.

00:42:28.174 --> 00:42:29.010
AUDIENCE: OK.

00:42:29.010 --> 00:42:32.630
We are developing an
app for the Kindle Fire,

00:42:32.630 --> 00:42:37.150
and when we are using
the Chromecast SDK,

00:42:37.150 --> 00:42:41.610
it usually Google
Play framework.

00:42:41.610 --> 00:42:49.822
So is there a way to using
other non Google Play--

00:42:49.822 --> 00:42:51.530
MAJD BAKAR: Unfortunately
at this moment,

00:42:51.530 --> 00:42:52.945
that's not possible.

00:42:52.945 --> 00:42:55.570
The SDK is part of the
Google Play services,

00:42:55.570 --> 00:42:56.947
and it's not available.

00:42:56.947 --> 00:42:59.434
AUDIENCE: Oh, OK.

00:42:59.434 --> 00:43:01.600
MAJD BAKAR: So I want to
make one last announcement.

00:43:01.600 --> 00:43:04.330
Before you leave, if you
go at the corner there,

00:43:04.330 --> 00:43:07.531
we're giving away
free Chromecasts.

00:43:07.531 --> 00:43:08.530
Thank you for attending.

00:43:08.530 --> 00:43:10.240
JOHN AFFAKI: Thank you.

