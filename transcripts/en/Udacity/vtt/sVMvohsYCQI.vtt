WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.657
So this is the advantage of streams.

00:00:01.657 --> 00:00:06.422
You can overlap data transferring computation. And there's a subtler issue.

00:00:06.422 --> 00:00:10.967
The ability to launch multiple kernels asynchronously at the same time on the GPU

00:00:10.967 --> 00:00:14.524
can help you fill the GPU with smaller kernels.

00:00:14.524 --> 00:00:17.893
Sometimes you have many problems with limited parallelism

00:00:17.893 --> 00:00:20.599
or sometimes you're doing a computation, such as a reduction,

00:00:20.599 --> 00:00:24.190
where there's sort of a narrow phase, the amount of work gets less and less.

00:00:24.190 --> 00:00:28.140
And in the narrow phases, you just don't have enough work to fill up the GPU.

00:00:28.140 --> 00:00:31.879
Well, maybe you have something else that you can start running on the GPU at the same time

00:00:31.879 --> 00:00:34.823
to help fill up all of those SMs.

00:00:34.823 --> 00:00:37.184
Now, there are some details to be aware of.

00:00:37.184 --> 00:00:41.219
So check out streams and events in the CUDA Programming Guide

00:00:41.219 --> 00:00:43.255
if you're interested in learning more.

