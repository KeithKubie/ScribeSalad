WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.000
So that means finding a hash value with certain properties

00:00:03.000 --> 00:00:06.000
is expected to require an amount of work,

00:00:06.000 --> 00:00:10.000
and by adjusting those properties we can increase the amount of work.

00:00:10.000 --> 00:00:12.000
So this is what Bitcoin does.

00:00:12.000 --> 00:00:14.000
In order to create a new block,

00:00:14.000 --> 00:00:17.000
which would validate the next history of transactions,

00:00:17.000 --> 00:00:20.000
it's necessary to find some value X such that

00:00:20.000 --> 00:00:23.000
the hash of the hash of the state

00:00:23.000 --> 00:00:26.000
concatenated with X is less than some target.

00:00:26.000 --> 00:00:28.000
You keep increasing the value of X

00:00:28.000 --> 00:00:30.000
until you find one that satisifies that property,

00:00:30.000 --> 00:00:32.000
and that provides the timestamp

00:00:32.000 --> 00:00:35.000
that allows a new block to be generated.

00:00:35.000 --> 00:00:39.000
So this is the idea Bitcoin uses to generate a timestamp.

00:00:39.000 --> 00:00:41.000
You have to keep finding new blocks,

00:00:41.000 --> 00:00:45.000
and a block will validate a set of transactions.

00:00:45.000 --> 00:00:48.000
But to generate a new block, you've got to find a new timestamp,

00:00:48.000 --> 00:00:51.000
which is this target.

00:00:51.000 --> 00:00:53.000
So you've got to find a value

00:00:53.000 --> 00:00:58.000
where the hash of the hash of the state concatenated with that value--

00:00:58.000 --> 00:01:00.000
and the state does two important things.

00:01:00.000 --> 00:01:02.000
It includes information about the previous block--

00:01:02.000 --> 00:01:05.000
this is how the timestamps form a chain.

00:01:05.000 --> 00:01:09.000
The state must include the previous block.

00:01:09.000 --> 00:01:12.000
It also includes some information that's likely to be unique

00:01:12.000 --> 00:01:14.000
for each member of the network.

00:01:14.000 --> 00:01:19.000
This is how they avoid it being the case that they're all racing to find the same value X.

00:01:19.000 --> 00:01:21.000
So given those properties,

00:01:21.000 --> 00:01:25.000
then the goal is to find the value X that you can concatenate with that

00:01:25.000 --> 00:01:27.000
to be less than some target.

00:01:27.000 --> 00:01:31.000
And the value of the target controls how hard it is to find.

00:01:31.000 --> 00:01:33.000
And the way the Bitcoin currency is designed to work

00:01:33.000 --> 00:01:37.000
is this value of the target is adjusted in a way

00:01:37.000 --> 00:01:41.000
that makes the time to find X keep about 10 minutes.

00:01:41.000 --> 00:01:45.000
That's the time for the whole network to find the next value

00:01:45.000 --> 00:01:48.000
so that that value of the target

00:01:48.000 --> 00:01:53.000
will keep decreasing as the computing power in the network increases.

00:01:53.000 --> 00:01:57.000
And if you go to the Bitcoin website, you can see the current value of the target,

00:01:57.000 --> 00:02:00.000
which is this value that--

00:02:00.000 --> 00:02:03.000
In order to create a new block, you've gotta find an X value

00:02:03.000 --> 00:02:06.000
such that this property is less than the target.

00:02:06.000 --> 00:02:10.000
And I should emphasize that these 0s are not just 1 bit.

00:02:10.000 --> 00:02:12.000
This is hex.

00:02:12.000 --> 00:02:15.000
So each one of these 0s is 4 bits.

00:02:15.000 --> 00:02:17.000
So if you've got to find a value

00:02:17.000 --> 00:02:20.000
where the hash starts with 54 zeros

00:02:20.000 --> 00:02:24.000
followed by something less than 101 and more--

00:02:24.000 --> 00:02:26.000
so if you found a value that hashed

00:02:26.000 --> 00:02:29.000
where the result started with 55 zeros

00:02:29.000 --> 00:02:32.000
or started with 54 zeros, a 1-0, and 0,

00:02:32.000 --> 00:02:34.000
well then you'd be golden.

00:02:34.000 --> 00:02:37.000
You'd be able to create the next block.

00:02:37.000 --> 00:02:40.000
That would allow you to earn the value

00:02:40.000 --> 00:02:44.000
of a new block, which currently is 50 Bitcoins.

00:02:44.000 --> 00:02:46.000
Each Bitcoin is worth about $5.

00:02:46.000 --> 00:02:51.000
So finding a hash that hashes to this would be worth about $250.

00:02:51.000 --> 00:02:54.000
And the rest of the network can verify that.

00:02:54.000 --> 00:02:56.000
It can compute this same hash function,

00:02:56.000 --> 00:02:59.000
verify that for the X value that you found

00:02:59.000 --> 00:03:01.000
the value is less than target,

00:03:01.000 --> 00:03:04.000
and that will add that block to the Bitcoin network.

00:03:04.000 --> 00:03:08.000
So the difficultly of finding such hashes keeps decreasing.

00:03:08.000 --> 00:03:11.000
The reason it's so low is because of using GPUs.

00:03:11.000 --> 00:03:14.000
If you were using a regular processor,

00:03:14.000 --> 00:03:16.000
it would use far more than $250 in computing power

00:03:16.000 --> 00:03:19.000
to find such a hash value.

00:03:19.000 --> 00:03:21.000
If you have a GPU, there are algorithms

00:03:21.000 --> 00:03:24.000
for implementing the hash function more efficiently.

00:03:24.000 --> 00:03:28.000
That would mean that finding a value that satisfies this property

00:03:28.000 --> 00:03:31.000
should require about that much value in computing power.

00:03:31.000 --> 00:03:33.000
So to see if this makes sense,

00:03:33.000 --> 00:03:36.000
I want to ask why the timestamp function--

00:03:36.000 --> 00:03:38.000
the one here to find the next block--

00:03:38.000 --> 00:03:42.000
uses two hashes instead of one. Here are the choices.

00:03:42.000 --> 00:03:45.000
See if you can figure out which one would make the most sense

00:03:45.000 --> 99:59:59.000
as to why there are two hash functions here.

