WEBVTT
Kind: captions
Language: en

00:00:05.500 --> 00:00:05.730
JJ BEHRENS: Hi.

00:00:05.730 --> 00:00:07.060
My name is JJ Behrens.

00:00:07.060 --> 00:00:09.640
And I'm a developer advocate
at Google.

00:00:09.640 --> 00:00:12.570
And I'm here today to talk to
you about using YouTube for

00:00:12.570 --> 00:00:14.270
your business.

00:00:14.270 --> 00:00:15.930
So YouTube for your business.

00:00:15.930 --> 00:00:17.390
I want to answer a
few questions.

00:00:17.390 --> 00:00:19.700
First of all, why YouTube?

00:00:19.700 --> 00:00:21.470
And then I want to help
you guys get into the

00:00:21.470 --> 00:00:22.870
right state of mind.

00:00:22.870 --> 00:00:25.550
I'm going to show some less
technical examples and then

00:00:25.550 --> 00:00:27.140
some more technical examples.

00:00:27.140 --> 00:00:29.390
And all along the way, I
want to show you guys

00:00:29.390 --> 00:00:31.130
how do you do that.

00:00:31.130 --> 00:00:33.540
And then finally, since Google
I/O is right around the

00:00:33.540 --> 00:00:37.900
corner, I want to talk about
what's coming up next.

00:00:37.900 --> 00:00:40.160
So first of all, why YouTube?

00:00:40.160 --> 00:00:43.790
So think about the number of
views YouTube gets per day.

00:00:43.790 --> 00:00:47.450
It's actually 4 billion
views per day.

00:00:47.450 --> 00:00:50.220
Next, think about the number of
mobile views that YouTube

00:00:50.220 --> 00:00:53.100
gets per day, you know, people
watching YouTube

00:00:53.100 --> 00:00:54.690
on their cell phone.

00:00:54.690 --> 00:00:57.780
It's 600 million
views per day.

00:00:57.780 --> 00:01:02.380
And that's actually up three
times since a year ago.

00:01:02.380 --> 00:01:06.120
Think about the number of video
uploaded to YouTube

00:01:06.120 --> 00:01:07.040
every single minute.

00:01:07.040 --> 00:01:10.850
It turns out that 60 hours worth
of content is uploaded

00:01:10.850 --> 00:01:12.320
to YouTube every minute.

00:01:12.320 --> 00:01:14.175
You might wonder how
we scan for porn.

00:01:14.175 --> 00:01:17.640
Well, actually we hire interns,
and we have a large

00:01:17.640 --> 00:01:20.770
room with monitors all
the way around them.

00:01:20.770 --> 00:01:23.120
And we play all that content
at the same time.

00:01:23.120 --> 00:01:24.670
And the intern, if he sees
something bad, he

00:01:24.670 --> 00:01:26.210
just points it out.

00:01:26.210 --> 00:01:27.380
Not really.

00:01:27.380 --> 00:01:29.810
So think about the percentage
of views coming

00:01:29.810 --> 00:01:31.440
from outside the US.

00:01:31.440 --> 00:01:33.400
It's actually 70%.

00:01:33.400 --> 00:01:37.460
So YouTube is actually
a global phenomenon.

00:01:37.460 --> 00:01:40.110
So now let me help you
guys get into the

00:01:40.110 --> 00:01:42.240
right state of mind.

00:01:42.240 --> 00:01:42.730
[VIDEO PLAYBACK]

00:01:42.730 --> 00:01:43.980
[MUSIC PLAYING - "ENTREPRENEUR
STATE OF MIND - THE NEW DORK"]

00:02:40.381 --> 00:02:40.880
[END VIDEO PLAYBACK]

00:02:40.880 --> 00:02:42.790
JJ BEHRENS: So you might
be wondering what the

00:02:42.790 --> 00:02:44.110
heck did I just do?

00:02:44.110 --> 00:02:46.400
I mean, I'm showing you
guys this video.

00:02:46.400 --> 00:02:48.500
So actually, that's an ad.

00:02:48.500 --> 00:02:51.080
And if you look at the metadata,
there's a link to

00:02:51.080 --> 00:02:52.960
grasshopper.com.

00:02:52.960 --> 00:02:56.290
So the interesting thing about
this ad is that it targets the

00:02:56.290 --> 00:02:57.380
right audience.

00:02:57.380 --> 00:02:59.630
when I was a start-up
guy, I was in the

00:02:59.630 --> 00:03:01.800
market for a VoIP solution.

00:03:01.800 --> 00:03:06.060
And that video gets people
like me excited.

00:03:06.060 --> 00:03:08.250
And it reaches people like me.

00:03:08.250 --> 00:03:11.000
And so the core take-home
message is Be clever.

00:03:11.000 --> 00:03:13.100
YouTube is a great place
to advertise.

00:03:13.100 --> 00:03:16.660
So I have another example from
Original Skateboards.

00:03:16.660 --> 00:03:44.875
[VIDEO PLAYBACK]

00:03:44.875 --> 00:03:45.890
[END VIDEO PLAYBACK]

00:03:45.890 --> 00:03:48.540
So Original Skateboard spent a
lot of money on traditional

00:03:48.540 --> 00:03:49.450
social media.

00:03:49.450 --> 00:03:53.120
But they found out that using
YouTube to connect to their

00:03:53.120 --> 00:03:55.060
community actually worked
out better.

00:03:55.060 --> 00:03:56.600
The way it works is this.

00:03:56.600 --> 00:03:58.400
You create some good videos,
and then you

00:03:58.400 --> 00:03:59.180
put them out there.

00:03:59.180 --> 00:04:01.330
And you let people watch them.

00:04:01.330 --> 00:04:03.370
And then when the users
comment on them, you

00:04:03.370 --> 00:04:04.550
interact with them.

00:04:04.550 --> 00:04:07.840
So Original Skateboards found
that by creating a community

00:04:07.840 --> 00:04:10.230
and interacting with their
community, they were actually

00:04:10.230 --> 00:04:13.240
able to sell skateboards much
more effectively than just

00:04:13.240 --> 00:04:15.330
dumping a bunch of money
on ads on other

00:04:15.330 --> 00:04:17.980
social media sites.

00:04:17.980 --> 00:04:21.690
So the take-home message here is
create interesting content

00:04:21.690 --> 00:04:25.060
and then use YouTube to connect
with your customers.

00:04:25.060 --> 00:04:29.220
OK, now I want to talk about
educating and motivating.

00:04:29.220 --> 00:04:31.550
Salesforce.com actually has a
lot of videos on YouTube.

00:04:31.550 --> 00:04:36.290
In fact, they have 3,000 videos,
14,000 subscribers,

00:04:36.290 --> 00:04:38.820
and 8 1/2 million
views, in total.

00:04:38.820 --> 00:04:42.490
That's roughly equivalent to 35
hyper-efficient sales reps

00:04:42.490 --> 00:04:45.340
on the phone, according to the
Senior Director of Social

00:04:45.340 --> 00:04:48.750
Market Strategy at
Salesforce.com.

00:04:48.750 --> 00:04:51.810
YouTube videos aren't just
for YouTube.com.

00:04:51.810 --> 00:04:54.140
You could also embed them
on your own website.

00:04:54.140 --> 00:04:57.120
And this is a great way to
enrich your website.

00:04:57.120 --> 00:05:00.090
Using a YouTube embed, you could
explain your product and

00:05:00.090 --> 00:05:01.990
it's actually really easy.

00:05:01.990 --> 00:05:04.510
So here we have an iFrame tag.

00:05:04.510 --> 00:05:06.700
And this is normal HTML.

00:05:06.700 --> 00:05:09.110
We have the source for
the YouTube video.

00:05:09.110 --> 00:05:12.010
And if you take this little
chunk of code ad you embed

00:05:12.010 --> 00:05:17.450
this into your HTML page, it's a
great way to bring some life

00:05:17.450 --> 00:05:18.690
to your page.

00:05:18.690 --> 00:05:22.530
When Google+ first came out,
I was checking it out.

00:05:22.530 --> 00:05:24.710
And I'll have to admit
I'm a little bit of a

00:05:24.710 --> 00:05:26.480
social media noob.

00:05:26.480 --> 00:05:28.620
Things never perfectly
make sense to me.

00:05:28.620 --> 00:05:33.210
But Google+ actually had videos,
and so I sat there and

00:05:33.210 --> 00:05:34.880
I watched every one
of those videos.

00:05:34.880 --> 00:05:37.660
And a lot of people like me
learn best when they're

00:05:37.660 --> 00:05:38.940
watching things.

00:05:38.940 --> 00:05:43.270
And so after I watched those
videos, I thought wow, this

00:05:43.270 --> 00:05:46.530
really makes sense to me.

00:05:46.530 --> 00:05:48.120
It's intuitive at this point.

00:05:48.120 --> 00:05:50.750
And so I think that the
take-home message is if you

00:05:50.750 --> 00:05:55.710
use videos on your own site, you
can really help the user

00:05:55.710 --> 00:05:58.330
understand what you're trying
to convey much quicker.

00:05:58.330 --> 00:06:01.200
So next let me talk about
user-contributed videos.

00:06:01.200 --> 00:06:03.980
Instead of just letting users
watch your videos, you could

00:06:03.980 --> 00:06:06.740
also let them upload videos
to your site.

00:06:06.740 --> 00:06:09.930
This is a great way to drive
community engagement.

00:06:09.930 --> 00:06:12.410
Best of all, we have an open
source project called YouTube

00:06:12.410 --> 00:06:15.160
Direct that makes this
really easy.

00:06:15.160 --> 00:06:18.610
YouTube Direct is a platform
for user-generated content.

00:06:18.610 --> 00:06:20.020
It's open source.

00:06:20.020 --> 00:06:21.750
It's built on Google
App Engine,

00:06:21.750 --> 00:06:23.550
using the YouTube APIs.

00:06:23.550 --> 00:06:26.340
And it supports both
web and mobile.

00:06:26.340 --> 00:06:28.970
YouTube Direct has been used by
a number of news agencies,

00:06:28.970 --> 00:06:32.080
such as the New York Times, the
Washington Post, the San

00:06:32.080 --> 00:06:34.660
Francisco Chronicle,
and so forth.

00:06:34.660 --> 00:06:35.550
POV--

00:06:35.550 --> 00:06:38.550
documentaries with a point of
view-- used YouTube Direct to

00:06:38.550 --> 00:06:41.990
solicit video uploads
of adoption stories.

00:06:41.990 --> 00:06:43.530
So imagine this.

00:06:43.530 --> 00:06:45.630
You have a website, and
they want to solicit

00:06:45.630 --> 00:06:47.810
user-generated videos.

00:06:47.810 --> 00:06:49.250
So you use YouTube Direct.

00:06:49.250 --> 00:06:51.980
And users can interact with
your website by uploading

00:06:51.980 --> 00:06:53.720
stories about themselves.

00:06:53.720 --> 00:06:55.860
This is a great way
to increase the

00:06:55.860 --> 00:06:57.410
richness of your site.

00:06:57.410 --> 00:07:00.210
So YouTube Direct also has
an Android and an iPhone

00:07:00.210 --> 00:07:01.260
application.

00:07:01.260 --> 00:07:03.830
This is great, because it allows
users to upload videos

00:07:03.830 --> 00:07:06.420
to your site from their
mobile phones.

00:07:06.420 --> 00:07:08.340
Let's get a little bit
more technical.

00:07:08.340 --> 00:07:11.550
You could control the player
using either JavaScript or

00:07:11.550 --> 00:07:12.290
ActionScript.

00:07:12.290 --> 00:07:14.850
And there's even a Chromeless
version of the player that

00:07:14.850 --> 00:07:17.260
lets you completely take control
over the viewing

00:07:17.260 --> 00:07:18.120
experience.

00:07:18.120 --> 00:07:19.500
Let me show you an example.

00:07:19.500 --> 00:07:22.710
Gaia Online integrated with the
Chromeless player in order

00:07:22.710 --> 00:07:25.470
to create a custom viewing
experience.

00:07:25.470 --> 00:07:26.480
Video DJs--

00:07:26.480 --> 00:07:27.740
or VJs--

00:07:27.740 --> 00:07:30.770
are able to curate videos for
other users to watch.

00:07:30.770 --> 00:07:33.330
And users can watch those videos
from the comfort of

00:07:33.330 --> 00:07:37.090
their own home synchronously
on separate computers.

00:07:37.090 --> 00:07:40.690
Now let me show you an example
of using the JavaScript API.

00:07:40.690 --> 00:07:43.480
The goal here is to play a
video for six seconds.

00:07:43.480 --> 00:07:45.350
We have a script tag here
that's part of an

00:07:45.350 --> 00:07:48.090
overall HTML page.

00:07:48.090 --> 00:07:50.970
Here we create a new player
called player1, where we

00:07:50.970 --> 00:07:53.670
handle two events-- the
onReady event and

00:07:53.670 --> 00:07:55.550
onStateChange event.

00:07:55.550 --> 00:07:58.770
When the player is ready, we
start playing the video.

00:07:58.770 --> 00:08:01.160
When we have a
playerStateChange, StateChange

00:08:01.160 --> 00:08:04.570
such as when the video starts
playing, we set a Timeout that

00:08:04.570 --> 00:08:06.400
will be called later.

00:08:06.400 --> 00:08:09.060
When that Timeout is called, the
stopPlayer function gets

00:08:09.060 --> 00:08:11.480
called, and we stop
playing the video.

00:08:11.480 --> 00:08:14.480
Now let me talk about the
backend APIs for YouTube, the

00:08:14.480 --> 00:08:17.120
GData APIs.

00:08:17.120 --> 00:08:18.420
Using the Google.

00:08:18.420 --> 00:08:22.410
APIs, you could upload videos,
search for videos, rate a

00:08:22.410 --> 00:08:24.490
video, like or dislike.

00:08:24.490 --> 00:08:27.910
You could comment on a video,
add a playlist, retrieve an

00:08:27.910 --> 00:08:32.190
activity feed, retrieve video
analytics, order a beer-- only

00:08:32.190 --> 00:08:34.669
if you have the special license
key for that one--

00:08:34.669 --> 00:08:35.659
and more.

00:08:35.659 --> 00:08:39.110
Best of all, using OAuth2, you
could do all of these things

00:08:39.110 --> 00:08:41.179
with the user's account.

00:08:41.179 --> 00:08:43.490
Now let me show you an example
of using Storify.

00:08:43.490 --> 00:08:47.300
Five When you use Storify, you
try to tell a story using

00:08:47.300 --> 00:08:49.280
different social media.

00:08:49.280 --> 00:08:52.170
In this case, the story is
"Can Twitter Save a Dying

00:08:52.170 --> 00:09:00.990
Language?" We see here various
blog posts and images, as well

00:09:00.990 --> 00:09:02.870
as a tweet.

00:09:02.870 --> 00:09:05.180
And then, finally, most
interestingly, we see a

00:09:05.180 --> 00:09:06.370
YouTube video.

00:09:06.370 --> 00:09:08.860
Interspersed is a
bunch of text.

00:09:08.860 --> 00:09:11.700
So the nice thing is you don't
have to try to tell a story

00:09:11.700 --> 00:09:15.100
just using one form of social
media, but instead you could

00:09:15.100 --> 00:09:16.660
mix and match.

00:09:16.660 --> 00:09:18.790
Next let me show you another
application--

00:09:18.790 --> 00:09:19.880
memoLane.

00:09:19.880 --> 00:09:23.270
memoLane is a curation app for
your digital memories.

00:09:23.270 --> 00:09:26.900
Like Storify, it integrates
multiple data sources, such as

00:09:26.900 --> 00:09:29.170
Twitter, Google Maps,
and YouTube.

00:09:29.170 --> 00:09:33.850
memoLane takes multiple data
sources and overlays them on a

00:09:33.850 --> 00:09:35.310
single timeline.

00:09:35.310 --> 00:09:38.580
Here we are looking at Eric's
digital memories.

00:09:38.580 --> 00:09:46.070
We see images, a tweet, Google
Maps, and a YouTube video.

00:09:46.070 --> 00:09:49.780
Best of all, these are all
overlaid on a single timeline,

00:09:49.780 --> 00:09:52.640
so even though we have multiple
data sources, they

00:09:52.640 --> 00:09:56.110
come together in
a cohesive way.

00:09:56.110 --> 00:09:58.270
Now let's get a little
bit more technical.

00:09:58.270 --> 00:10:01.210
I want to talk about
Google Data APIs.

00:10:01.210 --> 00:10:04.970
We make use of a range of
REST-based protocols, such as

00:10:04.970 --> 00:10:10.530
ATOM, JSON, JSON-C, and RSS.

00:10:10.530 --> 00:10:14.190
We have several standard feeds,
such as Top Rated, Most

00:10:14.190 --> 00:10:16.220
Viewed, et cetera.

00:10:16.220 --> 00:10:19.800
You could download user's
playlists, subscriptions, and

00:10:19.800 --> 00:10:22.610
upload feeds, as well
as user's comments,

00:10:22.610 --> 00:10:25.580
his profile et cetera.

00:10:25.580 --> 00:10:28.770
And if you don't want to have to
parse XML directly, we also

00:10:28.770 --> 00:10:33.350
have client libraries for
Java, PHP, .NET, Python,

00:10:33.350 --> 00:10:35.520
Objective-C, and so forth.

00:10:35.520 --> 00:10:37.840
Now let me show you
an example feed--

00:10:37.840 --> 00:10:40.060
the top rated videos.

00:10:40.060 --> 00:10:41.276
We have a URL here--
gdata.youtube.co

00:10:41.276 --> 00:10:42.526
m/feeds/api/stan
dardfeeds/top_rated.

00:10:48.940 --> 00:10:51.260
And we want to turn on
pretty printing.

00:10:51.260 --> 00:10:53.940
When you hit this URL
with a browser,

00:10:53.940 --> 00:10:56.480
you'll get an ATOM feedback.

00:10:56.480 --> 00:10:58.540
So this is XML, of course.

00:10:58.540 --> 00:11:00.360
Here's a feed tag.

00:11:00.360 --> 00:11:02.640
We have an entry
for the video.

00:11:02.640 --> 00:11:05.370
And each video has
its own entry.

00:11:05.370 --> 00:11:11.620
Here's a video ID, the
URL, and a thumbnail.

00:11:11.620 --> 00:11:13.910
Using all of these you could
put together a custom

00:11:13.910 --> 00:11:17.060
application, using the
GData API, that shows

00:11:17.060 --> 00:11:19.270
the top rated videos.

00:11:19.270 --> 00:11:22.140
Now if you don't look forward
to parsing XML by hand, we

00:11:22.140 --> 00:11:24.470
also have several client
libraries.

00:11:24.470 --> 00:11:27.670
Here, let me show you the
Java client library.

00:11:27.670 --> 00:11:30.940
Here is an example of using
the Java client library.

00:11:30.940 --> 00:11:34.000
Here, we create a new YouTube
service, and we pass in our

00:11:34.000 --> 00:11:35.860
developer key.

00:11:35.860 --> 00:11:37.560
Here, we create a video feed.

00:11:37.560 --> 00:11:41.850
And we could pass whatever
video feed URL we'd like.

00:11:41.850 --> 00:11:45.810
Here we print the video feed
out, and we loop over all of

00:11:45.810 --> 00:11:47.560
the video entries.

00:11:47.560 --> 00:11:50.690
The sample applications that
come with the GData API have a

00:11:50.690 --> 00:11:53.760
full rundown of how
to do this.

00:11:53.760 --> 00:11:56.440
Next let me talk about
another application--

00:11:56.440 --> 00:11:58.180
the History of Jazz.

00:11:58.180 --> 00:12:00.770
The History of Jazz is
an iPad application.

00:12:00.770 --> 00:12:03.630
They call it a coffee table
application, because it's so

00:12:03.630 --> 00:12:06.640
beautiful, you want to just put
it on your coffee table

00:12:06.640 --> 00:12:09.210
and let users pick it
up and play with it.

00:12:09.210 --> 00:12:12.170
What's interesting is that
this application teaches

00:12:12.170 --> 00:12:14.520
people about the history
of jazz.

00:12:14.520 --> 00:12:17.530
It's got beautiful pictures
and music, and it's a very

00:12:17.530 --> 00:12:19.250
immersive experience.

00:12:19.250 --> 00:12:21.820
What's interesting about this
application is that they have

00:12:21.820 --> 00:12:23.750
monetized it very well.

00:12:23.750 --> 00:12:26.510
First of all, you have to
buy the application.

00:12:26.510 --> 00:12:29.040
And second of all, they have
iTunes integration.

00:12:29.040 --> 00:12:31.330
So if you like any of the music
that you're listening to

00:12:31.330 --> 00:12:35.350
while using the application,
you could buy the music.

00:12:35.350 --> 00:12:38.050
Now, let's not forget
about video games.

00:12:38.050 --> 00:12:40.230
Video games could play videos.

00:12:40.230 --> 00:12:42.850
They could upload video
game plays to YouTube.

00:12:42.850 --> 00:12:46.530
And you could even use them
to create machinima.

00:12:46.530 --> 00:12:49.120
Let me show you an example of
what I'm talking about.

00:12:49.120 --> 00:12:51.070
Team Fortress 2 is
a video game.

00:12:51.070 --> 00:12:54.270
And Valve Software decided to
have a contest for this video

00:12:54.270 --> 00:12:57.470
game in which they awarded
prizes to the most interesting

00:12:57.470 --> 00:13:00.770
videos that people could create
using in-game footage.

00:13:00.770 --> 00:13:01.100
[VIDEO PLAYBACK]

00:13:01.100 --> 00:13:06.410
MALE VOICE: In a land without
law, one man will make a stand

00:13:06.410 --> 00:13:09.270
in the name of justice.

00:13:09.270 --> 00:13:12.580
And his name is El Muchacho.

00:13:19.920 --> 00:13:25.460
XLR 105 Production presents
El Muchacho.

00:13:25.460 --> 00:13:27.922
Coming to a theatre near you.

00:13:27.922 --> 00:13:29.738
Valve Time.

00:13:29.738 --> 00:13:30.650
[END VIDEO PLAYBACK]

00:13:30.650 --> 00:13:32.870
JJ BEHRENS: Let me show you
another example of machinima,

00:13:32.870 --> 00:13:35.608
this time using PlayStation
@ Home.

00:13:35.608 --> 00:13:42.778
[VIDEO PLAYBACK]

00:13:42.778 --> 00:13:44.028
[MUSIC PLAYING - "ALORS,
ON DANSE"]

00:14:09.660 --> 00:14:11.410
[END VIDEO PLAYBACK]

00:14:11.410 --> 00:14:13.270
JJ BEHRENS: Now let me talk a
little bit about stuff we're

00:14:13.270 --> 00:14:16.070
launching at Google I/O. Now
I know some of you might be

00:14:16.070 --> 00:14:18.740
watching this after Google I/O,
so the good news for you

00:14:18.740 --> 00:14:21.120
guys is you could just go
watch those videos now.

00:14:21.120 --> 00:14:23.740
But for those of you who are
watching this before Google

00:14:23.740 --> 00:14:24.700
I/O, I'm sorry.

00:14:24.700 --> 00:14:26.490
You have a few more
days to wait.

00:14:26.490 --> 00:14:29.520
Do you want to hear from and
see your site's community?

00:14:29.520 --> 00:14:31.390
We'll be sharing a new
way to solicit

00:14:31.390 --> 00:14:34.000
videos from your users.

00:14:34.000 --> 00:14:36.260
Come and learn about how it
was developed and see an

00:14:36.260 --> 00:14:39.550
example of it put to use as
part of the YouTube Direct

00:14:39.550 --> 00:14:43.140
open source video submission
platform.

00:14:43.140 --> 00:14:46.100
The next talk is YouTube API
plus Cloud Rendering equals

00:14:46.100 --> 00:14:47.650
happy mobile gamers.

00:14:47.650 --> 00:14:50.350
Many console developers already
incorporate video

00:14:50.350 --> 00:14:53.100
recording and uploading directly
into their titles.

00:14:53.100 --> 00:14:56.360
However, uploading to YouTube
from a mobile game presents a

00:14:56.360 --> 00:14:58.170
unique set of challenges.

00:14:58.170 --> 00:15:02.050
We'll present a new Google
compute-based architecture to

00:15:02.050 --> 00:15:05.110
support mobile gameplay
video rendering.

00:15:05.110 --> 00:15:08.350
Come and learn how the YouTube
API combined with cloud

00:15:08.350 --> 00:15:11.060
computing can help enable
video uploads

00:15:11.060 --> 00:15:12.770
in your mobile game.

00:15:12.770 --> 00:15:14.570
Next, we'll be talking
about new YouTube

00:15:14.570 --> 00:15:16.060
Android player tools.

00:15:16.060 --> 00:15:19.180
If you're building an Android
smartphone, tablet, or Google

00:15:19.180 --> 00:15:22.520
TV application, and you'd like
to incorporate YouTube video

00:15:22.520 --> 00:15:25.050
playback into your application,
this session will

00:15:25.050 --> 00:15:26.630
rock your world.

00:15:26.630 --> 00:15:29.160
Next up, we have a Codelab
called Master the Latest

00:15:29.160 --> 00:15:30.520
YouTube Data API.

00:15:30.520 --> 00:15:33.490
The YouTube Data API is
changing, and we're ready to

00:15:33.490 --> 00:15:34.900
give you a preview.

00:15:34.900 --> 00:15:37.430
We'll show you the backend
infrastructure that is used to

00:15:37.430 --> 00:15:39.150
power the new APIs.

00:15:39.150 --> 00:15:41.610
And we'll show you the next
generation client libraries

00:15:41.610 --> 00:15:43.620
that you'll be using to
build the YouTube

00:15:43.620 --> 00:15:45.980
applications of tomorrow.

00:15:45.980 --> 00:15:47.320
If you've made it this
far, I'd like to

00:15:47.320 --> 00:15:48.410
thank you for watching.

00:15:48.410 --> 00:15:53.040
If you'd like to learn more,
go to youtube.com/dev. If

00:15:53.040 --> 00:15:56.420
you'd like to follow us on
Twitter, our Twitter handle is

00:15:56.420 --> 00:16:00.670
YouTubeDev. Finally, on
Google+, my profile is

00:16:00.670 --> 00:16:03.970
gplus.to/jjinux.

00:16:03.970 --> 00:16:05.220
Thanks a lot.

