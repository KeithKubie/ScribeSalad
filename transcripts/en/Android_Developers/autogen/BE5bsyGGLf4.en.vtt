WEBVTT
Kind: captions
Language: en

00:00:02.880 --> 00:00:06.639
 
[Music]

00:00:06.639 --> 00:00:06.649
[Music]
 

00:00:06.649 --> 00:00:09.320
[Music]
hey young Chris Craig from the android

00:00:09.320 --> 00:00:09.330
hey young Chris Craig from the android
 

00:00:09.330 --> 00:00:11.959
hey young Chris Craig from the android
framework team my name is Heath I also

00:00:11.959 --> 00:00:11.969
framework team my name is Heath I also
 

00:00:11.969 --> 00:00:14.169
framework team my name is Heath I also
work in the android framework team and

00:00:14.169 --> 00:00:14.179
work in the android framework team and
 

00:00:14.179 --> 00:00:17.180
work in the android framework team and
today we are going to talk about how to

00:00:17.180 --> 00:00:17.190
today we are going to talk about how to
 

00:00:17.190 --> 00:00:20.000
today we are going to talk about how to
handle large list with paging and

00:00:20.000 --> 00:00:20.010
handle large list with paging and
 

00:00:20.010 --> 00:00:22.029
handle large list with paging and
recyclerview

00:00:22.029 --> 00:00:22.039
recyclerview
 

00:00:22.039 --> 00:00:25.130
recyclerview
now lisa is a very common thing in

00:00:25.130 --> 00:00:25.140
now lisa is a very common thing in
 

00:00:25.140 --> 00:00:26.599
now lisa is a very common thing in
android applications

00:00:26.599 --> 00:00:26.609
android applications
 

00:00:26.609 --> 00:00:29.240
android applications
pretty much every single app has a list

00:00:29.240 --> 00:00:29.250
pretty much every single app has a list
 

00:00:29.250 --> 00:00:32.269
pretty much every single app has a list
of something they want to display so if

00:00:32.269 --> 00:00:32.279
of something they want to display so if
 

00:00:32.279 --> 00:00:34.160
of something they want to display so if
you are using architecture components

00:00:34.160 --> 00:00:34.170
you are using architecture components
 

00:00:34.170 --> 00:00:36.440
you are using architecture components
let's see how you would model a list

00:00:36.440 --> 00:00:36.450
let's see how you would model a list
 

00:00:36.450 --> 00:00:39.290
let's see how you would model a list
like this so you will have a view model

00:00:39.290 --> 00:00:39.300
like this so you will have a view model
 

00:00:39.300 --> 00:00:42.110
like this so you will have a view model
but you keep the list of items so that

00:00:42.110 --> 00:00:42.120
but you keep the list of items so that
 

00:00:42.120 --> 00:00:45.200
but you keep the list of items so that
it survives configuration change you

00:00:45.200 --> 00:00:45.210
it survives configuration change you
 

00:00:45.210 --> 00:00:47.930
it survives configuration change you
will put your data into database so that

00:00:47.930 --> 00:00:47.940
will put your data into database so that
 

00:00:47.940 --> 00:00:50.720
will put your data into database so that
your application works offline and of

00:00:50.720 --> 00:00:50.730
your application works offline and of
 

00:00:50.730 --> 00:00:52.279
your application works offline and of
course you have some server-side

00:00:52.279 --> 00:00:52.289
course you have some server-side
 

00:00:52.289 --> 00:00:55.880
course you have some server-side
component by you pull the data from but

00:00:55.880 --> 00:00:55.890
component by you pull the data from but
 

00:00:55.890 --> 00:01:00.439
component by you pull the data from but
usually data is dynamic it changes so to

00:01:00.439 --> 00:01:00.449
usually data is dynamic it changes so to
 

00:01:00.449 --> 00:01:02.630
usually data is dynamic it changes so to
handle these changes you will ask

00:01:02.630 --> 00:01:02.640
handle these changes you will ask
 

00:01:02.640 --> 00:01:04.939
handle these changes you will ask
database to return your live data of

00:01:04.939 --> 00:01:04.949
database to return your live data of
 

00:01:04.949 --> 00:01:08.390
database to return your live data of
list of things or an old Java observable

00:01:08.390 --> 00:01:08.400
list of things or an old Java observable
 

00:01:08.400 --> 00:01:10.609
list of things or an old Java observable
list of things so that you can handle

00:01:10.609 --> 00:01:10.619
list of things so that you can handle
 

00:01:10.619 --> 00:01:14.630
list of things so that you can handle
the updates for instance if you put the

00:01:14.630 --> 00:01:14.640
the updates for instance if you put the
 

00:01:14.640 --> 00:01:16.760
the updates for instance if you put the
updated version of two records from your

00:01:16.760 --> 00:01:16.770
updated version of two records from your
 

00:01:16.770 --> 00:01:20.539
updated version of two records from your
database and you insert it and then room

00:01:20.539 --> 00:01:20.549
database and you insert it and then room
 

00:01:20.549 --> 00:01:23.749
database and you insert it and then room
realizes oh there's a query observing

00:01:23.749 --> 00:01:23.759
realizes oh there's a query observing
 

00:01:23.759 --> 00:01:26.270
realizes oh there's a query observing
this table let me reveal the result

00:01:26.270 --> 00:01:26.280
this table let me reveal the result
 

00:01:26.280 --> 00:01:29.719
this table let me reveal the result
pasted over to the v-model and then your

00:01:29.719 --> 00:01:29.729
pasted over to the v-model and then your
 

00:01:29.729 --> 00:01:32.929
pasted over to the v-model and then your
UI can pull from the v-model and update

00:01:32.929 --> 00:01:32.939
UI can pull from the v-model and update
 

00:01:32.939 --> 00:01:36.170
UI can pull from the v-model and update
itself with the correct animations this

00:01:36.170 --> 00:01:36.180
itself with the correct animations this
 

00:01:36.180 --> 00:01:39.859
itself with the correct animations this
looks cool but there is actually a

00:01:39.859 --> 00:01:39.869
looks cool but there is actually a
 

00:01:39.869 --> 00:01:41.719
looks cool but there is actually a
problem here there's something we don't

00:01:41.719 --> 00:01:41.729
problem here there's something we don't
 

00:01:41.729 --> 00:01:44.359
problem here there's something we don't
like to better understand the issue

00:01:44.359 --> 00:01:44.369
like to better understand the issue
 

00:01:44.369 --> 00:01:47.300
like to better understand the issue
let's look at the interaction between

00:01:47.300 --> 00:01:47.310
let's look at the interaction between
 

00:01:47.310 --> 00:01:50.810
let's look at the interaction between
the database and the UI so when I

00:01:50.810 --> 00:01:50.820
the database and the UI so when I
 

00:01:50.820 --> 00:01:53.090
the database and the UI so when I
mentioned that database is going to

00:01:53.090 --> 00:01:53.100
mentioned that database is going to
 

00:01:53.100 --> 00:01:56.539
mentioned that database is going to
reveal the result it is going to reveal

00:01:56.539 --> 00:01:56.549
reveal the result it is going to reveal
 

00:01:56.549 --> 00:01:59.389
reveal the result it is going to reveal
all of the results so if you ask for the

00:01:59.389 --> 00:01:59.399
all of the results so if you ask for the
 

00:01:59.399 --> 00:02:03.230
all of the results so if you ask for the
user's order by their last name and if

00:02:03.230 --> 00:02:03.240
user's order by their last name and if
 

00:02:03.240 --> 00:02:06.200
user's order by their last name and if
you have 10,000 users is going to create

00:02:06.200 --> 00:02:06.210
you have 10,000 users is going to create
 

00:02:06.210 --> 00:02:10.490
you have 10,000 users is going to create
10,000 users paste it over to the UI

00:02:10.490 --> 00:02:10.500
10,000 users paste it over to the UI
 

00:02:10.500 --> 00:02:12.860
10,000 users paste it over to the UI
is very inefficient because user only

00:02:12.860 --> 00:02:12.870
is very inefficient because user only
 

00:02:12.870 --> 00:02:15.350
is very inefficient because user only
sees like eight to ten items why would

00:02:15.350 --> 00:02:15.360
sees like eight to ten items why would
 

00:02:15.360 --> 00:02:18.950
sees like eight to ten items why would
you create 10,000 items so we don't like

00:02:18.950 --> 00:02:18.960
you create 10,000 items so we don't like
 

00:02:18.960 --> 00:02:21.920
you create 10,000 items so we don't like
it we want to change this so what are we

00:02:21.920 --> 00:02:21.930
it we want to change this so what are we
 

00:02:21.930 --> 00:02:25.130
it we want to change this so what are we
looking for here first we like that

00:02:25.130 --> 00:02:25.140
looking for here first we like that
 

00:02:25.140 --> 00:02:27.470
looking for here first we like that
convenience is so nice to tell the

00:02:27.470 --> 00:02:27.480
convenience is so nice to tell the
 

00:02:27.480 --> 00:02:30.230
convenience is so nice to tell the
database give me a light date of list of

00:02:30.230 --> 00:02:30.240
database give me a light date of list of
 

00:02:30.240 --> 00:02:34.760
database give me a light date of list of
users we want the same convenience we

00:02:34.760 --> 00:02:34.770
users we want the same convenience we
 

00:02:34.770 --> 00:02:37.010
users we want the same convenience we
wanted to handle multiple layers wanna

00:02:37.010 --> 00:02:37.020
wanted to handle multiple layers wanna
 

00:02:37.020 --> 00:02:39.080
wanted to handle multiple layers wanna
be able to bring data from the server

00:02:39.080 --> 00:02:39.090
be able to bring data from the server
 

00:02:39.090 --> 00:02:41.780
be able to bring data from the server
put in the database and put in the UI

00:02:41.780 --> 00:02:41.790
put in the database and put in the UI
 

00:02:41.790 --> 00:02:43.490
put in the database and put in the UI
and this should be very easy to

00:02:43.490 --> 00:02:43.500
and this should be very easy to
 

00:02:43.500 --> 00:02:47.420
and this should be very easy to
implement we want it to be fast we don't

00:02:47.420 --> 00:02:47.430
implement we want it to be fast we don't
 

00:02:47.430 --> 00:02:49.640
implement we want it to be fast we don't
want to do any unnecessary work we don't

00:02:49.640 --> 00:02:49.650
want to do any unnecessary work we don't
 

00:02:49.650 --> 00:02:51.680
want to do any unnecessary work we don't
want it to do any big chunk of work in

00:02:51.680 --> 00:02:51.690
want it to do any big chunk of work in
 

00:02:51.690 --> 00:02:55.310
want it to do any big chunk of work in
the UI thread it should be efficient we

00:02:55.310 --> 00:02:55.320
the UI thread it should be efficient we
 

00:02:55.320 --> 00:02:57.680
the UI thread it should be efficient we
wanted to be lifecycle of air so if user

00:02:57.680 --> 00:02:57.690
wanted to be lifecycle of air so if user
 

00:02:57.690 --> 00:02:59.330
wanted to be lifecycle of air so if user
is not looking at the screen it

00:02:59.330 --> 00:02:59.340
is not looking at the screen it
 

00:02:59.340 --> 00:03:02.720
is not looking at the screen it
shouldn't do any work last but not least

00:03:02.720 --> 00:03:02.730
shouldn't do any work last but not least
 

00:03:02.730 --> 00:03:05.600
shouldn't do any work last but not least
we wanted to be flexible everybody has

00:03:05.600 --> 00:03:05.610
we wanted to be flexible everybody has
 

00:03:05.610 --> 00:03:07.490
we wanted to be flexible everybody has
their different back-end API is

00:03:07.490 --> 00:03:07.500
their different back-end API is
 

00:03:07.500 --> 00:03:10.430
their different back-end API is
different data structures our solution

00:03:10.430 --> 00:03:10.440
different data structures our solution
 

00:03:10.440 --> 00:03:13.910
different data structures our solution
should work with all of these things now

00:03:13.910 --> 00:03:13.920
should work with all of these things now
 

00:03:13.920 --> 00:03:16.550
should work with all of these things now
if we go back to our first example how

00:03:16.550 --> 00:03:16.560
if we go back to our first example how
 

00:03:16.560 --> 00:03:18.800
if we go back to our first example how
do we implement these lists if we don't

00:03:18.800 --> 00:03:18.810
do we implement these lists if we don't
 

00:03:18.810 --> 00:03:21.890
do we implement these lists if we don't
use Pejic now if you're using room in

00:03:21.890 --> 00:03:21.900
use Pejic now if you're using room in
 

00:03:21.900 --> 00:03:24.259
use Pejic now if you're using room in
your door you specify your query you

00:03:24.259 --> 00:03:24.269
your door you specify your query you
 

00:03:24.269 --> 00:03:26.600
your door you specify your query you
tell it to turn a live data of list of

00:03:26.600 --> 00:03:26.610
tell it to turn a live data of list of
 

00:03:26.610 --> 00:03:30.289
tell it to turn a live data of list of
users thank you in your Wemo dope you

00:03:30.289 --> 00:03:30.299
users thank you in your Wemo dope you
 

00:03:30.299 --> 00:03:32.449
users thank you in your Wemo dope you
hold a reference to it and serve it to

00:03:32.449 --> 00:03:32.459
hold a reference to it and serve it to
 

00:03:32.459 --> 00:03:35.300
hold a reference to it and serve it to
your UI in your activity you would use

00:03:35.300 --> 00:03:35.310
your UI in your activity you would use
 

00:03:35.310 --> 00:03:37.789
your UI in your activity you would use
this list activity list adapter class

00:03:37.789 --> 00:03:37.799
this list activity list adapter class
 

00:03:37.799 --> 00:03:40.280
this list activity list adapter class
but if you're not following our releases

00:03:40.280 --> 00:03:40.290
but if you're not following our releases
 

00:03:40.290 --> 00:03:42.920
but if you're not following our releases
closely you may not heard about it let's

00:03:42.920 --> 00:03:42.930
closely you may not heard about it let's
 

00:03:42.930 --> 00:03:45.830
closely you may not heard about it let's
focus on that one this adapter is a

00:03:45.830 --> 00:03:45.840
focus on that one this adapter is a
 

00:03:45.840 --> 00:03:47.990
focus on that one this adapter is a
recycle of your adapter that displays a

00:03:47.990 --> 00:03:48.000
recycle of your adapter that displays a
 

00:03:48.000 --> 00:03:50.990
recycle of your adapter that displays a
list so if you have the recycle of you

00:03:50.990 --> 00:03:51.000
list so if you have the recycle of you
 

00:03:51.000 --> 00:03:53.690
list so if you have the recycle of you
on the right when you called some and

00:03:53.690 --> 00:03:53.700
on the right when you called some and
 

00:03:53.700 --> 00:03:55.789
on the right when you called some and
this method on the adapter which just

00:03:55.789 --> 00:03:55.799
this method on the adapter which just
 

00:03:55.799 --> 00:03:58.699
this method on the adapter which just
displays it the nice thing is if you

00:03:58.699 --> 00:03:58.709
displays it the nice thing is if you
 

00:03:58.709 --> 00:04:00.770
displays it the nice thing is if you
call the same summit list method with a

00:04:00.770 --> 00:04:00.780
call the same summit list method with a
 

00:04:00.780 --> 00:04:03.020
call the same summit list method with a
different list it's going to calculate

00:04:03.020 --> 00:04:03.030
different list it's going to calculate
 

00:04:03.030 --> 00:04:05.180
different list it's going to calculate
the difference between these two lists

00:04:05.180 --> 00:04:05.190
the difference between these two lists
 

00:04:05.190 --> 00:04:06.380
the difference between these two lists
on a background thread

00:04:06.380 --> 00:04:06.390
on a background thread
 

00:04:06.390 --> 00:04:08.539
on a background thread
and update the UI with the correct

00:04:08.539 --> 00:04:08.549
and update the UI with the correct
 

00:04:08.549 --> 00:04:09.380
and update the UI with the correct
animations

00:04:09.380 --> 00:04:09.390
animations
 

00:04:09.390 --> 00:04:13.009
animations
it's available in recycler we've 27.1

00:04:13.009 --> 00:04:13.019
it's available in recycler we've 27.1
 

00:04:13.019 --> 00:04:15.470
it's available in recycler we've 27.1
and the same functionality also exists

00:04:15.470 --> 00:04:15.480
and the same functionality also exists
 

00:04:15.480 --> 00:04:17.690
and the same functionality also exists
in the asset list defer class if you

00:04:17.690 --> 00:04:17.700
in the asset list defer class if you
 

00:04:17.700 --> 00:04:21.229
in the asset list defer class if you
cannot extend the adapter okay let's go

00:04:21.229 --> 00:04:21.239
cannot extend the adapter okay let's go
 

00:04:21.239 --> 00:04:24.330
cannot extend the adapter okay let's go
back to our example we have our adapter

00:04:24.330 --> 00:04:24.340
back to our example we have our adapter
 

00:04:24.340 --> 00:04:27.060
back to our example we have our adapter
we observe the live data we send the

00:04:27.060 --> 00:04:27.070
we observe the live data we send the
 

00:04:27.070 --> 00:04:30.330
we observe the live data we send the
list to the adapter so for when we

00:04:30.330 --> 00:04:30.340
list to the adapter so for when we
 

00:04:30.340 --> 00:04:32.280
list to the adapter so for when we
initialize a little adapter we need to

00:04:32.280 --> 00:04:32.290
initialize a little adapter we need to
 

00:04:32.290 --> 00:04:34.950
initialize a little adapter we need to
give it a callback it sells to

00:04:34.950 --> 00:04:34.960
give it a callback it sells to
 

00:04:34.960 --> 00:04:38.010
give it a callback it sells to
functionalities first one it can check

00:04:38.010 --> 00:04:38.020
functionalities first one it can check
 

00:04:38.020 --> 00:04:40.890
functionalities first one it can check
if two items are equal identically and

00:04:40.890 --> 00:04:40.900
if two items are equal identically and
 

00:04:40.900 --> 00:04:42.870
if two items are equal identically and
the other one checks whether their

00:04:42.870 --> 00:04:42.880
the other one checks whether their
 

00:04:42.880 --> 00:04:45.060
the other one checks whether their
contents are equal or not so we can

00:04:45.060 --> 00:04:45.070
contents are equal or not so we can
 

00:04:45.070 --> 00:04:47.250
contents are equal or not so we can
decide whether we need to remind those

00:04:47.250 --> 00:04:47.260
decide whether we need to remind those
 

00:04:47.260 --> 00:04:51.540
decide whether we need to remind those
weaves or not once you have that in your

00:04:51.540 --> 00:04:51.550
weaves or not once you have that in your
 

00:04:51.550 --> 00:04:53.580
weaves or not once you have that in your
own bind we older method you can call

00:04:53.580 --> 00:04:53.590
own bind we older method you can call
 

00:04:53.590 --> 00:04:56.610
own bind we older method you can call
the get item function obtain the item in

00:04:56.610 --> 00:04:56.620
the get item function obtain the item in
 

00:04:56.620 --> 00:04:58.560
the get item function obtain the item in
the list and do whatever you want with

00:04:58.560 --> 00:04:58.570
the list and do whatever you want with
 

00:04:58.570 --> 00:05:01.940
the list and do whatever you want with
it super simple

00:05:01.940 --> 00:05:01.950
it super simple
 

00:05:01.950 --> 00:05:04.260
it super simple
all right so we've seen what that looks

00:05:04.260 --> 00:05:04.270
all right so we've seen what that looks
 

00:05:04.270 --> 00:05:07.140
all right so we've seen what that looks
like with a live data of list but you

00:05:07.140 --> 00:05:07.150
like with a live data of list but you
 

00:05:07.150 --> 00:05:09.300
like with a live data of list but you
also started out with this isn't good

00:05:09.300 --> 00:05:09.310
also started out with this isn't good
 

00:05:09.310 --> 00:05:10.890
also started out with this isn't good
enough so let's look at what this looks

00:05:10.890 --> 00:05:10.900
enough so let's look at what this looks
 

00:05:10.900 --> 00:05:12.420
enough so let's look at what this looks
like when you're using the new paging

00:05:12.420 --> 00:05:12.430
like when you're using the new paging
 

00:05:12.430 --> 00:05:15.390
like when you're using the new paging
library so first of all the most

00:05:15.390 --> 00:05:15.400
library so first of all the most
 

00:05:15.400 --> 00:05:16.710
library so first of all the most
important component of the pipe the

00:05:16.710 --> 00:05:16.720
important component of the pipe the
 

00:05:16.720 --> 00:05:18.719
important component of the pipe the
paging library is the paged list and

00:05:18.719 --> 00:05:18.729
paging library is the paged list and
 

00:05:18.729 --> 00:05:21.420
paging library is the paged list and
this is a list that implements the list

00:05:21.420 --> 00:05:21.430
this is a list that implements the list
 

00:05:21.430 --> 00:05:23.850
this is a list that implements the list
at our face but it loads data in pages

00:05:23.850 --> 00:05:23.860
at our face but it loads data in pages
 

00:05:23.860 --> 00:05:26.969
at our face but it loads data in pages
asynchronously it's backed by a class

00:05:26.969 --> 00:05:26.979
asynchronously it's backed by a class
 

00:05:26.979 --> 00:05:28.440
asynchronously it's backed by a class
called the data source that provides

00:05:28.440 --> 00:05:28.450
called the data source that provides
 

00:05:28.450 --> 00:05:31.260
called the data source that provides
data as the page lists needs it swaps it

00:05:31.260 --> 00:05:31.270
data as the page lists needs it swaps it
 

00:05:31.270 --> 00:05:36.780
data as the page lists needs it swaps it
in and updates the list so this serves

00:05:36.780 --> 00:05:36.790
in and updates the list so this serves
 

00:05:36.790 --> 00:05:38.340
in and updates the list so this serves
as a replacement for the list and all

00:05:38.340 --> 00:05:38.350
as a replacement for the list and all
 

00:05:38.350 --> 00:05:40.230
as a replacement for the list and all
the examples that we've done before so

00:05:40.230 --> 00:05:40.240
the examples that we've done before so
 

00:05:40.240 --> 00:05:41.700
the examples that we've done before so
let's go ahead and start swapping it out

00:05:41.700 --> 00:05:41.710
let's go ahead and start swapping it out
 

00:05:41.710 --> 00:05:43.980
let's go ahead and start swapping it out
we have this view model let's swap out

00:05:43.980 --> 00:05:43.990
we have this view model let's swap out
 

00:05:43.990 --> 00:05:47.640
we have this view model let's swap out
the lists with a page list and then we

00:05:47.640 --> 00:05:47.650
the lists with a page list and then we
 

00:05:47.650 --> 00:05:49.200
the lists with a page list and then we
go back to our Dao now what we want to

00:05:49.200 --> 00:05:49.210
go back to our Dao now what we want to
 

00:05:49.210 --> 00:05:50.700
go back to our Dao now what we want to
do here is you want to ask our Dao hey

00:05:50.700 --> 00:05:50.710
do here is you want to ask our Dao hey
 

00:05:50.710 --> 00:05:52.469
do here is you want to ask our Dao hey
can you give me a live data of a paged

00:05:52.469 --> 00:05:52.479
can you give me a live data of a paged
 

00:05:52.479 --> 00:05:54.930
can you give me a live data of a paged
list but there's actually an issue with

00:05:54.930 --> 00:05:54.940
list but there's actually an issue with
 

00:05:54.940 --> 00:05:59.580
list but there's actually an issue with
this so if we look over at what the data

00:05:59.580 --> 00:05:59.590
this so if we look over at what the data
 

00:05:59.590 --> 00:06:02.370
this so if we look over at what the data
looks like on the database side you

00:06:02.370 --> 00:06:02.380
looks like on the database side you
 

00:06:02.380 --> 00:06:04.860
looks like on the database side you
could imagine paging this in one way and

00:06:04.860 --> 00:06:04.870
could imagine paging this in one way and
 

00:06:04.870 --> 00:06:06.510
could imagine paging this in one way and
you could imagine paging this in a

00:06:06.510 --> 00:06:06.520
you could imagine paging this in a
 

00:06:06.520 --> 00:06:08.130
you could imagine paging this in a
different way it is actually some

00:06:08.130 --> 00:06:08.140
different way it is actually some
 

00:06:08.140 --> 00:06:09.390
different way it is actually some
interesting decision here are you

00:06:09.390 --> 00:06:09.400
interesting decision here are you
 

00:06:09.400 --> 00:06:11.130
interesting decision here are you
showing really large items are you

00:06:11.130 --> 00:06:11.140
showing really large items are you
 

00:06:11.140 --> 00:06:12.600
showing really large items are you
showing tiny items where you want to

00:06:12.600 --> 00:06:12.610
showing tiny items where you want to
 

00:06:12.610 --> 00:06:14.460
showing tiny items where you want to
have a lot of data paged at once well

00:06:14.460 --> 00:06:14.470
have a lot of data paged at once well
 

00:06:14.470 --> 00:06:16.650
have a lot of data paged at once well
the page size really needs to be

00:06:16.650 --> 00:06:16.660
the page size really needs to be
 

00:06:16.660 --> 00:06:18.990
the page size really needs to be
configurable to you know serve every

00:06:18.990 --> 00:06:19.000
configurable to you know serve every
 

00:06:19.000 --> 00:06:19.770
configurable to you know serve every
apps needs

00:06:19.770 --> 00:06:19.780
apps needs
 

00:06:19.780 --> 00:06:22.050
apps needs
so instead room can produce this

00:06:22.050 --> 00:06:22.060
so instead room can produce this
 

00:06:22.060 --> 00:06:24.330
so instead room can produce this
datasource class that backs a page list

00:06:24.330 --> 00:06:24.340
datasource class that backs a page list
 

00:06:24.340 --> 00:06:27.000
datasource class that backs a page list
and that way the page list can access it

00:06:27.000 --> 00:06:27.010
and that way the page list can access it
 

00:06:27.010 --> 00:06:29.460
and that way the page list can access it
and say give me item 6 through 12 and

00:06:29.460 --> 00:06:29.470
and say give me item 6 through 12 and
 

00:06:29.470 --> 00:06:32.740
and say give me item 6 through 12 and
load those data directly

00:06:32.740 --> 00:06:32.750
load those data directly
 

00:06:32.750 --> 00:06:34.990
load those data directly
into the page list now because we say

00:06:34.990 --> 00:06:35.000
into the page list now because we say
 

00:06:35.000 --> 00:06:36.340
into the page list now because we say
that we want multiple of them though

00:06:36.340 --> 00:06:36.350
that we want multiple of them though
 

00:06:36.350 --> 00:06:37.540
that we want multiple of them though
remember that we want something that's

00:06:37.540 --> 00:06:37.550
remember that we want something that's
 

00:06:37.550 --> 00:06:39.640
remember that we want something that's
observable so we just wrap that in a

00:06:39.640 --> 00:06:39.650
observable so we just wrap that in a
 

00:06:39.650 --> 00:06:41.260
observable so we just wrap that in a
factory every time that we need a new

00:06:41.260 --> 00:06:41.270
factory every time that we need a new
 

00:06:41.270 --> 00:06:43.810
factory every time that we need a new
page list out of the database we create

00:06:43.810 --> 00:06:43.820
page list out of the database we create
 

00:06:43.820 --> 00:06:44.710
page list out of the database we create
a new data source

00:06:44.710 --> 00:06:44.720
a new data source
 

00:06:44.720 --> 00:06:48.040
a new data source
all right so instead of the live data of

00:06:48.040 --> 00:06:48.050
all right so instead of the live data of
 

00:06:48.050 --> 00:06:50.860
all right so instead of the live data of
page list what the user Dao provides us

00:06:50.860 --> 00:06:50.870
page list what the user Dao provides us
 

00:06:50.870 --> 00:06:55.210
page list what the user Dao provides us
here is a data source factory keyed off

00:06:55.210 --> 00:06:55.220
here is a data source factory keyed off
 

00:06:55.220 --> 00:06:58.200
here is a data source factory keyed off
of integer because we're using positions

00:06:58.200 --> 00:06:58.210
of integer because we're using positions
 

00:06:58.210 --> 00:07:01.660
of integer because we're using positions
so we go back to our our view model here

00:07:01.660 --> 00:07:01.670
so we go back to our our view model here
 

00:07:01.670 --> 00:07:04.660
so we go back to our our view model here
and define how are we going to load this

00:07:04.660 --> 00:07:04.670
and define how are we going to load this
 

00:07:04.670 --> 00:07:06.700
and define how are we going to load this
data well it's not much code we just say

00:07:06.700 --> 00:07:06.710
data well it's not much code we just say
 

00:07:06.710 --> 00:07:08.440
data well it's not much code we just say
get the data source factory that we've

00:07:08.440 --> 00:07:08.450
get the data source factory that we've
 

00:07:08.450 --> 00:07:10.780
get the data source factory that we've
just declared in our user Dao and use

00:07:10.780 --> 00:07:10.790
just declared in our user Dao and use
 

00:07:10.790 --> 00:07:12.970
just declared in our user Dao and use
this live page list builder class from

00:07:12.970 --> 00:07:12.980
this live page list builder class from
 

00:07:12.980 --> 00:07:16.120
this live page list builder class from
the library to create a live data the

00:07:16.120 --> 00:07:16.130
the library to create a live data the
 

00:07:16.130 --> 00:07:17.470
the library to create a live data the
minimum amount of data that you need to

00:07:17.470 --> 00:07:17.480
minimum amount of data that you need to
 

00:07:17.480 --> 00:07:19.780
minimum amount of data that you need to
pass here is page size and here we're

00:07:19.780 --> 00:07:19.790
pass here is page size and here we're
 

00:07:19.790 --> 00:07:22.330
pass here is page size and here we're
passing 30 that's it now you have a live

00:07:22.330 --> 00:07:22.340
passing 30 that's it now you have a live
 

00:07:22.340 --> 00:07:26.440
passing 30 that's it now you have a live
data of page list so now all the

00:07:26.440 --> 00:07:26.450
data of page list so now all the
 

00:07:26.450 --> 00:07:28.360
data of page list so now all the
repository side changes are done the

00:07:28.360 --> 00:07:28.370
repository side changes are done the
 

00:07:28.370 --> 00:07:29.830
repository side changes are done the
view model is updated let's go to the

00:07:29.830 --> 00:07:29.840
view model is updated let's go to the
 

00:07:29.840 --> 00:07:32.530
view model is updated let's go to the
activity so now we were using list

00:07:32.530 --> 00:07:32.540
activity so now we were using list
 

00:07:32.540 --> 00:07:34.360
activity so now we were using list
adapter before well simply you change

00:07:34.360 --> 00:07:34.370
adapter before well simply you change
 

00:07:34.370 --> 00:07:36.460
adapter before well simply you change
this into a paged list adapter a page

00:07:36.460 --> 00:07:36.470
this into a paged list adapter a page
 

00:07:36.470 --> 00:07:38.590
this into a paged list adapter a page
list adapter is the exact same thing is

00:07:38.590 --> 00:07:38.600
list adapter is the exact same thing is
 

00:07:38.600 --> 00:07:40.719
list adapter is the exact same thing is
listed after it just happens to handle

00:07:40.719 --> 00:07:40.729
listed after it just happens to handle
 

00:07:40.729 --> 00:07:43.150
listed after it just happens to handle
the loading of pages as content is

00:07:43.150 --> 00:07:43.160
the loading of pages as content is
 

00:07:43.160 --> 00:07:48.690
the loading of pages as content is
internally updating in those page lists

00:07:48.690 --> 00:07:48.700
 
 

00:07:48.700 --> 00:07:51.400
 
so if we look at how we'd actually

00:07:51.400 --> 00:07:51.410
so if we look at how we'd actually
 

00:07:51.410 --> 00:07:54.969
so if we look at how we'd actually
implement this list adapter though we'd

00:07:54.969 --> 00:07:54.979
implement this list adapter though we'd
 

00:07:54.979 --> 00:07:56.530
implement this list adapter though we'd
have to switch over to the new page list

00:07:56.530 --> 00:07:56.540
have to switch over to the new page list
 

00:07:56.540 --> 00:08:00.550
have to switch over to the new page list
adapter and use the exact same diff call

00:08:00.550 --> 00:08:00.560
adapter and use the exact same diff call
 

00:08:00.560 --> 00:08:01.750
adapter and use the exact same diff call
back we don't have to change any code

00:08:01.750 --> 00:08:01.760
back we don't have to change any code
 

00:08:01.760 --> 00:08:03.610
back we don't have to change any code
there the only thing that changes is

00:08:03.610 --> 00:08:03.620
there the only thing that changes is
 

00:08:03.620 --> 00:08:05.020
there the only thing that changes is
part of implementing this on the adapter

00:08:05.020 --> 00:08:05.030
part of implementing this on the adapter
 

00:08:05.030 --> 00:08:07.180
part of implementing this on the adapter
side is that the user object becomes

00:08:07.180 --> 00:08:07.190
side is that the user object becomes
 

00:08:07.190 --> 00:08:09.760
side is that the user object becomes
nullable and we'll get into why in just

00:08:09.760 --> 00:08:09.770
nullable and we'll get into why in just
 

00:08:09.770 --> 00:08:13.150
nullable and we'll get into why in just
a little bit so let's go through how you

00:08:13.150 --> 00:08:13.160
a little bit so let's go through how you
 

00:08:13.160 --> 00:08:15.370
a little bit so let's go through how you
can do further configuration because we

00:08:15.370 --> 00:08:15.380
can do further configuration because we
 

00:08:15.380 --> 00:08:19.510
can do further configuration because we
don't stop at just page size so the the

00:08:19.510 --> 00:08:19.520
don't stop at just page size so the the
 

00:08:19.520 --> 00:08:21.159
don't stop at just page size so the the
code that we showed before of creating a

00:08:21.159 --> 00:08:21.169
code that we showed before of creating a
 

00:08:21.169 --> 00:08:23.800
code that we showed before of creating a
live page list builder you can simply

00:08:23.800 --> 00:08:23.810
live page list builder you can simply
 

00:08:23.810 --> 00:08:26.080
live page list builder you can simply
just pass a minimum page Sai a page size

00:08:26.080 --> 00:08:26.090
just pass a minimum page Sai a page size
 

00:08:26.090 --> 00:08:27.190
just pass a minimum page Sai a page size
and that's the minimum amount of data

00:08:27.190 --> 00:08:27.200
and that's the minimum amount of data
 

00:08:27.200 --> 00:08:29.050
and that's the minimum amount of data
that you need to pass but you can also

00:08:29.050 --> 00:08:29.060
that you need to pass but you can also
 

00:08:29.060 --> 00:08:31.300
that you need to pass but you can also
create a configuration object where you

00:08:31.300 --> 00:08:31.310
create a configuration object where you
 

00:08:31.310 --> 00:08:33.790
create a configuration object where you
can declare more so one thing that you

00:08:33.790 --> 00:08:33.800
can declare more so one thing that you
 

00:08:33.800 --> 00:08:35.170
can declare more so one thing that you
might want to do is set an initial load

00:08:35.170 --> 00:08:35.180
might want to do is set an initial load
 

00:08:35.180 --> 00:08:37.450
might want to do is set an initial load
size hint and this what this does is it

00:08:37.450 --> 00:08:37.460
size hint and this what this does is it
 

00:08:37.460 --> 00:08:39.279
size hint and this what this does is it
requests that the initial load is larger

00:08:39.279 --> 00:08:39.289
requests that the initial load is larger
 

00:08:39.289 --> 00:08:42.850
requests that the initial load is larger
to make that initial load avoid initial

00:08:42.850 --> 00:08:42.860
to make that initial load avoid initial
 

00:08:42.860 --> 00:08:44.440
to make that initial load avoid initial
page fetches immediately

00:08:44.440 --> 00:08:44.450
page fetches immediately
 

00:08:44.450 --> 00:08:46.720
page fetches immediately
after you you've fetched it another

00:08:46.720 --> 00:08:46.730
after you you've fetched it another
 

00:08:46.730 --> 00:08:48.310
after you you've fetched it another
thing that you can change is prefetch

00:08:48.310 --> 00:08:48.320
thing that you can change is prefetch
 

00:08:48.320 --> 00:08:50.050
thing that you can change is prefetch
distance by default this is the page

00:08:50.050 --> 00:08:50.060
distance by default this is the page
 

00:08:50.060 --> 00:08:51.730
distance by default this is the page
size but you can configure this if you

00:08:51.730 --> 00:08:51.740
size but you can configure this if you
 

00:08:51.740 --> 00:08:53.560
size but you can configure this if you
know that your data source is higher or

00:08:53.560 --> 00:08:53.570
know that your data source is higher or
 

00:08:53.570 --> 00:08:56.830
know that your data source is higher or
lower latency you can also control

00:08:56.830 --> 00:08:56.840
lower latency you can also control
 

00:08:56.840 --> 00:08:58.780
lower latency you can also control
placeholders which are an important part

00:08:58.780 --> 00:08:58.790
placeholders which are an important part
 

00:08:58.790 --> 00:09:00.490
placeholders which are an important part
of this library so let's let's start

00:09:00.490 --> 00:09:00.500
of this library so let's let's start
 

00:09:00.500 --> 00:09:04.090
of this library so let's let's start
talking about those so placeholders

00:09:04.090 --> 00:09:04.100
talking about those so placeholders
 

00:09:04.100 --> 00:09:07.920
talking about those so placeholders
false is kind of the default paging

00:09:07.920 --> 00:09:07.930
false is kind of the default paging
 

00:09:07.930 --> 00:09:09.700
false is kind of the default paging
expectations' that you might have or

00:09:09.700 --> 00:09:09.710
expectations' that you might have or
 

00:09:09.710 --> 00:09:11.290
expectations' that you might have or
typically you load the first page the

00:09:11.290 --> 00:09:11.300
typically you load the first page the
 

00:09:11.300 --> 00:09:13.840
typically you load the first page the
recyclerview has access to the number of

00:09:13.840 --> 00:09:13.850
recyclerview has access to the number of
 

00:09:13.850 --> 00:09:15.220
recyclerview has access to the number of
items that you've loaded and you see

00:09:15.220 --> 00:09:15.230
items that you've loaded and you see
 

00:09:15.230 --> 00:09:17.260
items that you've loaded and you see
well you have a big scrollbar right the

00:09:17.260 --> 00:09:17.270
well you have a big scrollbar right the
 

00:09:17.270 --> 00:09:19.240
well you have a big scrollbar right the
user can scroll through it and once they

00:09:19.240 --> 00:09:19.250
user can scroll through it and once they
 

00:09:19.250 --> 00:09:20.820
user can scroll through it and once they
get to the bottom there's no more data

00:09:20.820 --> 00:09:20.830
get to the bottom there's no more data
 

00:09:20.830 --> 00:09:24.220
get to the bottom there's no more data
once the page loads the scrollbar jumps

00:09:24.220 --> 00:09:24.230
once the page loads the scrollbar jumps
 

00:09:24.230 --> 00:09:26.650
once the page loads the scrollbar jumps
and the user is able to scroll forward

00:09:26.650 --> 00:09:26.660
and the user is able to scroll forward
 

00:09:26.660 --> 00:09:28.600
and the user is able to scroll forward
so we also support a completely

00:09:28.600 --> 00:09:28.610
so we also support a completely
 

00:09:28.610 --> 00:09:29.800
so we also support a completely
different type of paging here that

00:09:29.800 --> 00:09:29.810
different type of paging here that
 

00:09:29.810 --> 00:09:32.050
different type of paging here that
presents this differently if you asked

00:09:32.050 --> 00:09:32.060
presents this differently if you asked
 

00:09:32.060 --> 00:09:33.370
presents this differently if you asked
for placeholders and this is the default

00:09:33.370 --> 00:09:33.380
for placeholders and this is the default
 

00:09:33.380 --> 00:09:35.650
for placeholders and this is the default
in the library we will present your

00:09:35.650 --> 00:09:35.660
in the library we will present your
 

00:09:35.660 --> 00:09:37.900
in the library we will present your
lists like this you notice here that the

00:09:37.900 --> 00:09:37.910
lists like this you notice here that the
 

00:09:37.910 --> 00:09:39.460
lists like this you notice here that the
scrollbar is a little bit smaller and

00:09:39.460 --> 00:09:39.470
scrollbar is a little bit smaller and
 

00:09:39.470 --> 00:09:40.570
scrollbar is a little bit smaller and
that's because we're presenting the

00:09:40.570 --> 00:09:40.580
that's because we're presenting the
 

00:09:40.580 --> 00:09:42.220
that's because we're presenting the
entire data set to the recyclerview

00:09:42.220 --> 00:09:42.230
entire data set to the recyclerview
 

00:09:42.230 --> 00:09:44.740
entire data set to the recyclerview
immediately that scrollbar won't jump

00:09:44.740 --> 00:09:44.750
immediately that scrollbar won't jump
 

00:09:44.750 --> 00:09:46.510
immediately that scrollbar won't jump
while we're scrolling as the user

00:09:46.510 --> 00:09:46.520
while we're scrolling as the user
 

00:09:46.520 --> 00:09:48.490
while we're scrolling as the user
Scrolls down you see that there are

00:09:48.490 --> 00:09:48.500
Scrolls down you see that there are
 

00:09:48.500 --> 00:09:50.560
Scrolls down you see that there are
unloaded items and those are presented

00:09:50.560 --> 00:09:50.570
unloaded items and those are presented
 

00:09:50.570 --> 00:09:53.860
unloaded items and those are presented
as nulls in the adapter these items as

00:09:53.860 --> 00:09:53.870
as nulls in the adapter these items as
 

00:09:53.870 --> 00:09:56.980
as nulls in the adapter these items as
the data eventually loads display and

00:09:56.980 --> 00:09:56.990
the data eventually loads display and
 

00:09:56.990 --> 00:10:00.790
the data eventually loads display and
you'll get a nice animation for that so

00:10:00.790 --> 00:10:00.800
you'll get a nice animation for that so
 

00:10:00.800 --> 00:10:01.990
you'll get a nice animation for that so
let's talk about placeholders because

00:10:01.990 --> 00:10:02.000
let's talk about placeholders because
 

00:10:02.000 --> 00:10:03.340
let's talk about placeholders because
they don't work everywhere but we think

00:10:03.340 --> 00:10:03.350
they don't work everywhere but we think
 

00:10:03.350 --> 00:10:04.450
they don't work everywhere but we think
that they're really useful in a lot of

00:10:04.450 --> 00:10:04.460
that they're really useful in a lot of
 

00:10:04.460 --> 00:10:06.940
that they're really useful in a lot of
cases so one of the big positives of

00:10:06.940 --> 00:10:06.950
cases so one of the big positives of
 

00:10:06.950 --> 00:10:08.470
cases so one of the big positives of
them is that the user can scroll past

00:10:08.470 --> 00:10:08.480
them is that the user can scroll past
 

00:10:08.480 --> 00:10:10.630
them is that the user can scroll past
what's loaded the user doesn't have to

00:10:10.630 --> 00:10:10.640
what's loaded the user doesn't have to
 

00:10:10.640 --> 00:10:12.880
what's loaded the user doesn't have to
hit a block at the very end because you

00:10:12.880 --> 00:10:12.890
hit a block at the very end because you
 

00:10:12.890 --> 00:10:14.920
hit a block at the very end because you
don't have any more data yet the

00:10:14.920 --> 00:10:14.930
don't have any more data yet the
 

00:10:14.930 --> 00:10:17.020
don't have any more data yet the
scrollbar looks correct instantly and

00:10:17.020 --> 00:10:17.030
scrollbar looks correct instantly and
 

00:10:17.030 --> 00:10:18.370
scrollbar looks correct instantly and
also this is very important you can use

00:10:18.370 --> 00:10:18.380
also this is very important you can use
 

00:10:18.380 --> 00:10:20.890
also this is very important you can use
fast scrollers very easily because you

00:10:20.890 --> 00:10:20.900
fast scrollers very easily because you
 

00:10:20.900 --> 00:10:22.870
fast scrollers very easily because you
have the entire data set presented to

00:10:22.870 --> 00:10:22.880
have the entire data set presented to
 

00:10:22.880 --> 00:10:24.940
have the entire data set presented to
the recyclerview so you can jump

00:10:24.940 --> 00:10:24.950
the recyclerview so you can jump
 

00:10:24.950 --> 00:10:27.550
the recyclerview so you can jump
anywhere and then another nice feature

00:10:27.550 --> 00:10:27.560
anywhere and then another nice feature
 

00:10:27.560 --> 00:10:28.960
anywhere and then another nice feature
is that you don't have to implement a

00:10:28.960 --> 00:10:28.970
is that you don't have to implement a
 

00:10:28.970 --> 00:10:30.370
is that you don't have to implement a
loading spinner at the bottom because

00:10:30.370 --> 00:10:30.380
loading spinner at the bottom because
 

00:10:30.380 --> 00:10:31.990
loading spinner at the bottom because
the users can see the placeholder they

00:10:31.990 --> 00:10:32.000
the users can see the placeholder they
 

00:10:32.000 --> 00:10:33.480
the users can see the placeholder they
can see that there's like a gray icon

00:10:33.480 --> 00:10:33.490
can see that there's like a gray icon
 

00:10:33.490 --> 00:10:36.670
can see that there's like a gray icon
instead of a user icon and know that

00:10:36.670 --> 00:10:36.680
instead of a user icon and know that
 

00:10:36.680 --> 00:10:39.190
instead of a user icon and know that
that item is still loading there are

00:10:39.190 --> 00:10:39.200
that item is still loading there are
 

00:10:39.200 --> 00:10:40.780
that item is still loading there are
some downsides though of placeholders

00:10:40.780 --> 00:10:40.790
some downsides though of placeholders
 

00:10:40.790 --> 00:10:42.820
some downsides though of placeholders
first of all it's pretty important that

00:10:42.820 --> 00:10:42.830
first of all it's pretty important that
 

00:10:42.830 --> 00:10:45.100
first of all it's pretty important that
your items stay the same size if you

00:10:45.100 --> 00:10:45.110
your items stay the same size if you
 

00:10:45.110 --> 00:10:46.840
your items stay the same size if you
can't guess what the item height is

00:10:46.840 --> 00:10:46.850
can't guess what the item height is
 

00:10:46.850 --> 00:10:48.640
can't guess what the item height is
going to be before you have content for

00:10:48.640 --> 00:10:48.650
going to be before you have content for
 

00:10:48.650 --> 00:10:50.500
going to be before you have content for
instance if you have say a social media

00:10:50.500 --> 00:10:50.510
instance if you have say a social media
 

00:10:50.510 --> 00:10:52.570
instance if you have say a social media
post with arbitrary amount of text the

00:10:52.570 --> 00:10:52.580
post with arbitrary amount of text the
 

00:10:52.580 --> 00:10:56.180
post with arbitrary amount of text the
crossfade animation doesn't look great

00:10:56.180 --> 00:10:56.190
crossfade animation doesn't look great
 

00:10:56.190 --> 00:10:58.140
crossfade animation doesn't look great
additionally your adapter has to be able

00:10:58.140 --> 00:10:58.150
additionally your adapter has to be able
 

00:10:58.150 --> 00:11:00.090
additionally your adapter has to be able
to handle those items so that's a little

00:11:00.090 --> 00:11:00.100
to handle those items so that's a little
 

00:11:00.100 --> 00:11:01.500
to handle those items so that's a little
bit more code that you have to write to

00:11:01.500 --> 00:11:01.510
bit more code that you have to write to
 

00:11:01.510 --> 00:11:04.890
bit more code that you have to write to
say if this item doesn't exist pass my

00:11:04.890 --> 00:11:04.900
say if this item doesn't exist pass my
 

00:11:04.900 --> 00:11:06.390
say if this item doesn't exist pass my
name D string to the textview that kind

00:11:06.390 --> 00:11:06.400
name D string to the textview that kind
 

00:11:06.400 --> 00:11:06.900
name D string to the textview that kind
of thing

00:11:06.900 --> 00:11:06.910
of thing
 

00:11:06.910 --> 00:11:09.270
of thing
and then your data source has to be able

00:11:09.270 --> 00:11:09.280
and then your data source has to be able
 

00:11:09.280 --> 00:11:11.760
and then your data source has to be able
to count items now room can count items

00:11:11.760 --> 00:11:11.770
to count items now room can count items
 

00:11:11.770 --> 00:11:12.930
to count items now room can count items
out of the box but if you're using

00:11:12.930 --> 00:11:12.940
out of the box but if you're using
 

00:11:12.940 --> 00:11:14.910
out of the box but if you're using
something that is loading data from say

00:11:14.910 --> 00:11:14.920
something that is loading data from say
 

00:11:14.920 --> 00:11:17.160
something that is loading data from say
the network your back-end may not be

00:11:17.160 --> 00:11:17.170
the network your back-end may not be
 

00:11:17.170 --> 00:11:21.720
the network your back-end may not be
able to provide a precise count so we've

00:11:21.720 --> 00:11:21.730
able to provide a precise count so we've
 

00:11:21.730 --> 00:11:23.520
able to provide a precise count so we've
been talking a lot about our of live

00:11:23.520 --> 00:11:23.530
been talking a lot about our of live
 

00:11:23.530 --> 00:11:25.800
been talking a lot about our of live
data this thus far but as you introduced

00:11:25.800 --> 00:11:25.810
data this thus far but as you introduced
 

00:11:25.810 --> 00:11:27.870
data this thus far but as you introduced
at the beginning there's we also want to

00:11:27.870 --> 00:11:27.880
at the beginning there's we also want to
 

00:11:27.880 --> 00:11:31.100
at the beginning there's we also want to
support our RX Java developers so

00:11:31.100 --> 00:11:31.110
support our RX Java developers so
 

00:11:31.110 --> 00:11:33.480
support our RX Java developers so
instead of producing a live data you may

00:11:33.480 --> 00:11:33.490
instead of producing a live data you may
 

00:11:33.490 --> 00:11:36.270
instead of producing a live data you may
want to produce say an observable and we

00:11:36.270 --> 00:11:36.280
want to produce say an observable and we
 

00:11:36.280 --> 00:11:38.400
want to produce say an observable and we
provide the class rx page list builder

00:11:38.400 --> 00:11:38.410
provide the class rx page list builder
 

00:11:38.410 --> 00:11:42.750
provide the class rx page list builder
to do exactly that so you can change the

00:11:42.750 --> 00:11:42.760
to do exactly that so you can change the
 

00:11:42.760 --> 00:11:45.030
to do exactly that so you can change the
return type here use an rx page list

00:11:45.030 --> 00:11:45.040
return type here use an rx page list
 

00:11:45.040 --> 00:11:46.410
return type here use an rx page list
builder and then just specifically

00:11:46.410 --> 00:11:46.420
builder and then just specifically
 

00:11:46.420 --> 00:11:48.630
builder and then just specifically
request unobservable or a flowable out

00:11:48.630 --> 00:11:48.640
request unobservable or a flowable out
 

00:11:48.640 --> 00:11:50.220
request unobservable or a flowable out
of it and you get all the same behavior

00:11:50.220 --> 00:11:50.230
of it and you get all the same behavior
 

00:11:50.230 --> 00:11:51.510
of it and you get all the same behavior
you can use all the same code that we

00:11:51.510 --> 00:11:51.520
you can use all the same code that we
 

00:11:51.520 --> 00:11:53.580
you can use all the same code that we
were we were showing before with a

00:11:53.580 --> 00:11:53.590
were we were showing before with a
 

00:11:53.590 --> 00:11:55.590
were we were showing before with a
little bit of change to switch to rx

00:11:55.590 --> 00:11:55.600
little bit of change to switch to rx
 

00:11:55.600 --> 00:11:58.890
little bit of change to switch to rx
observation now let's go under the hood

00:11:58.890 --> 00:11:58.900
observation now let's go under the hood
 

00:11:58.900 --> 00:12:00.630
observation now let's go under the hood
because we've shown how small of a code

00:12:00.630 --> 00:12:00.640
because we've shown how small of a code
 

00:12:00.640 --> 00:12:02.160
because we've shown how small of a code
change this can be to switch the paging

00:12:02.160 --> 00:12:02.170
change this can be to switch the paging
 

00:12:02.170 --> 00:12:04.190
change this can be to switch the paging
library but how does that work

00:12:04.190 --> 00:12:04.200
library but how does that work
 

00:12:04.200 --> 00:12:08.040
library but how does that work
underneath ok so here on the left you

00:12:08.040 --> 00:12:08.050
underneath ok so here on the left you
 

00:12:08.050 --> 00:12:10.200
underneath ok so here on the left you
have the repository that represents the

00:12:10.200 --> 00:12:10.210
have the repository that represents the
 

00:12:10.210 --> 00:12:11.760
have the repository that represents the
data loading portion of your application

00:12:11.760 --> 00:12:11.770
data loading portion of your application
 

00:12:11.770 --> 00:12:14.040
data loading portion of your application
and then you on the right you have the

00:12:14.040 --> 00:12:14.050
and then you on the right you have the
 

00:12:14.050 --> 00:12:16.080
and then you on the right you have the
view model which is how it communicates

00:12:16.080 --> 00:12:16.090
view model which is how it communicates
 

00:12:16.090 --> 00:12:19.890
view model which is how it communicates
to the UI so inside the repository we

00:12:19.890 --> 00:12:19.900
to the UI so inside the repository we
 

00:12:19.900 --> 00:12:21.660
to the UI so inside the repository we
want to build the source for this live

00:12:21.660 --> 00:12:21.670
want to build the source for this live
 

00:12:21.670 --> 00:12:23.220
want to build the source for this live
data we want to produce something that

00:12:23.220 --> 00:12:23.230
data we want to produce something that
 

00:12:23.230 --> 00:12:26.970
data we want to produce something that
will push updates to the UI so when you

00:12:26.970 --> 00:12:26.980
will push updates to the UI so when you
 

00:12:26.980 --> 00:12:29.040
will push updates to the UI so when you
call live page list builder build we

00:12:29.040 --> 00:12:29.050
call live page list builder build we
 

00:12:29.050 --> 00:12:31.380
call live page list builder build we
create not only a live data that can be

00:12:31.380 --> 00:12:31.390
create not only a live data that can be
 

00:12:31.390 --> 00:12:33.240
create not only a live data that can be
used to funnel information to the UI but

00:12:33.240 --> 00:12:33.250
used to funnel information to the UI but
 

00:12:33.250 --> 00:12:36.600
used to funnel information to the UI but
the producer side as well once someone

00:12:36.600 --> 00:12:36.610
the producer side as well once someone
 

00:12:36.610 --> 00:12:39.690
the producer side as well once someone
starts observing that live data we will

00:12:39.690 --> 00:12:39.700
starts observing that live data we will
 

00:12:39.700 --> 00:12:41.730
starts observing that live data we will
create a new page list because that's

00:12:41.730 --> 00:12:41.740
create a new page list because that's
 

00:12:41.740 --> 00:12:43.860
create a new page list because that's
the that's the that's the way that we

00:12:43.860 --> 00:12:43.870
the that's the that's the way that we
 

00:12:43.870 --> 00:12:46.770
the that's the that's the way that we
start passing information down this

00:12:46.770 --> 00:12:46.780
start passing information down this
 

00:12:46.780 --> 00:12:48.600
start passing information down this
pipeline and to do that we create a new

00:12:48.600 --> 00:12:48.610
pipeline and to do that we create a new
 

00:12:48.610 --> 00:12:51.120
pipeline and to do that we create a new
data source out of the factory that we

00:12:51.120 --> 00:12:51.130
data source out of the factory that we
 

00:12:51.130 --> 00:12:54.750
data source out of the factory that we
prevail to produce now to pass this page

00:12:54.750 --> 00:12:54.760
prevail to produce now to pass this page
 

00:12:54.760 --> 00:12:56.160
prevail to produce now to pass this page
list over though we don't want to send

00:12:56.160 --> 00:12:56.170
list over though we don't want to send
 

00:12:56.170 --> 00:12:58.530
list over though we don't want to send
an empty list if the you I can avoid it

00:12:58.530 --> 00:12:58.540
an empty list if the you I can avoid it
 

00:12:58.540 --> 00:13:00.750
an empty list if the you I can avoid it
we would really like to load data first

00:13:00.750 --> 00:13:00.760
we would really like to load data first
 

00:13:00.760 --> 00:13:03.290
we would really like to load data first
and so we do that on a background thread

00:13:03.290 --> 00:13:03.300
and so we do that on a background thread
 

00:13:03.300 --> 00:13:05.790
and so we do that on a background thread
initialize that data and create a page

00:13:05.790 --> 00:13:05.800
initialize that data and create a page
 

00:13:05.800 --> 00:13:06.620
initialize that data and create a page
list out of it

00:13:06.620 --> 00:13:06.630
list out of it
 

00:13:06.630 --> 00:13:07.970
list out of it
here you can see at the very beginning

00:13:07.970 --> 00:13:07.980
here you can see at the very beginning
 

00:13:07.980 --> 00:13:10.220
here you can see at the very beginning
the first page list that we produce has

00:13:10.220 --> 00:13:10.230
the first page list that we produce has
 

00:13:10.230 --> 00:13:13.400
the first page list that we produce has
data only loaded at the very front we

00:13:13.400 --> 00:13:13.410
data only loaded at the very front we
 

00:13:13.410 --> 00:13:15.140
data only loaded at the very front we
can send that over to the UI thread and

00:13:15.140 --> 00:13:15.150
can send that over to the UI thread and
 

00:13:15.150 --> 00:13:17.420
can send that over to the UI thread and
then if you remember our submit list

00:13:17.420 --> 00:13:17.430
then if you remember our submit list
 

00:13:17.430 --> 00:13:19.940
then if you remember our submit list
call on page list adapter submits this

00:13:19.940 --> 00:13:19.950
call on page list adapter submits this
 

00:13:19.950 --> 00:13:22.730
call on page list adapter submits this
to the adapter and the adapter can start

00:13:22.730 --> 00:13:22.740
to the adapter and the adapter can start
 

00:13:22.740 --> 00:13:25.490
to the adapter and the adapter can start
immediately presenting those items now

00:13:25.490 --> 00:13:25.500
immediately presenting those items now
 

00:13:25.500 --> 00:13:27.470
immediately presenting those items now
as the user Scrolls though we might need

00:13:27.470 --> 00:13:27.480
as the user Scrolls though we might need
 

00:13:27.480 --> 00:13:29.750
as the user Scrolls though we might need
to load more data so the page lists

00:13:29.750 --> 00:13:29.760
to load more data so the page lists
 

00:13:29.760 --> 00:13:32.930
to load more data so the page lists
internally will trigger a data load from

00:13:32.930 --> 00:13:32.940
internally will trigger a data load from
 

00:13:32.940 --> 00:13:36.020
internally will trigger a data load from
its data source and append that data

00:13:36.020 --> 00:13:36.030
its data source and append that data
 

00:13:36.030 --> 00:13:39.770
its data source and append that data
directly to the page list now the

00:13:39.770 --> 00:13:39.780
directly to the page list now the
 

00:13:39.780 --> 00:13:41.720
directly to the page list now the
crossfade animation occurs because we

00:13:41.720 --> 00:13:41.730
crossfade animation occurs because we
 

00:13:41.730 --> 00:13:43.730
crossfade animation occurs because we
have signaled the recyclerview that

00:13:43.730 --> 00:13:43.740
have signaled the recyclerview that
 

00:13:43.740 --> 00:13:47.210
have signaled the recyclerview that
these new items are updated again but

00:13:47.210 --> 00:13:47.220
these new items are updated again but
 

00:13:47.220 --> 00:13:49.220
these new items are updated again but
what happens when a Content update

00:13:49.220 --> 00:13:49.230
what happens when a Content update
 

00:13:49.230 --> 00:13:52.430
what happens when a Content update
occurs so if the database says oh this

00:13:52.430 --> 00:13:52.440
occurs so if the database says oh this
 

00:13:52.440 --> 00:13:54.080
occurs so if the database says oh this
table has been validated something has

00:13:54.080 --> 00:13:54.090
table has been validated something has
 

00:13:54.090 --> 00:13:56.660
table has been validated something has
changed we immediately stop loading from

00:13:56.660 --> 00:13:56.670
changed we immediately stop loading from
 

00:13:56.670 --> 00:13:59.600
changed we immediately stop loading from
the data source we invalidate it so

00:13:59.600 --> 00:13:59.610
the data source we invalidate it so
 

00:13:59.610 --> 00:14:01.430
the data source we invalidate it so
let's look at what happens in order to

00:14:01.430 --> 00:14:01.440
let's look at what happens in order to
 

00:14:01.440 --> 00:14:03.530
let's look at what happens in order to
start pushing those updates though from

00:14:03.530 --> 00:14:03.540
start pushing those updates though from
 

00:14:03.540 --> 00:14:06.710
start pushing those updates though from
the other side so on the other side of

00:14:06.710 --> 00:14:06.720
the other side so on the other side of
 

00:14:06.720 --> 00:14:08.270
the other side so on the other side of
things we can see oh well the database

00:14:08.270 --> 00:14:08.280
things we can see oh well the database
 

00:14:08.280 --> 00:14:10.280
things we can see oh well the database
had an item added to it that's why we

00:14:10.280 --> 00:14:10.290
had an item added to it that's why we
 

00:14:10.290 --> 00:14:12.410
had an item added to it that's why we
invalidated the previous data source and

00:14:12.410 --> 00:14:12.420
invalidated the previous data source and
 

00:14:12.420 --> 00:14:14.420
invalidated the previous data source and
at the same time the producer side is

00:14:14.420 --> 00:14:14.430
at the same time the producer side is
 

00:14:14.430 --> 00:14:16.460
at the same time the producer side is
listening to this signal to know I need

00:14:16.460 --> 00:14:16.470
listening to this signal to know I need
 

00:14:16.470 --> 00:14:18.890
listening to this signal to know I need
to produce a new page list so we use

00:14:18.890 --> 00:14:18.900
to produce a new page list so we use
 

00:14:18.900 --> 00:14:20.990
to produce a new page list so we use
this signal to create a new data source

00:14:20.990 --> 00:14:21.000
this signal to create a new data source
 

00:14:21.000 --> 00:14:23.330
this signal to create a new data source
so that we can create a new page list to

00:14:23.330 --> 00:14:23.340
so that we can create a new page list to
 

00:14:23.340 --> 00:14:25.760
so that we can create a new page list to
send over and when we load the initial

00:14:25.760 --> 00:14:25.770
send over and when we load the initial
 

00:14:25.770 --> 00:14:27.500
send over and when we load the initial
data for that though we're careful to

00:14:27.500 --> 00:14:27.510
data for that though we're careful to
 

00:14:27.510 --> 00:14:29.840
data for that though we're careful to
initialize that based upon the loading

00:14:29.840 --> 00:14:29.850
initialize that based upon the loading
 

00:14:29.850 --> 00:14:31.370
initialize that based upon the loading
position

00:14:31.370 --> 00:14:31.380
position
 

00:14:31.380 --> 00:14:33.320
position
that was signaled by the adapter so the

00:14:33.320 --> 00:14:33.330
that was signaled by the adapter so the
 

00:14:33.330 --> 00:14:35.120
that was signaled by the adapter so the
user is partially scrolled down so let's

00:14:35.120 --> 00:14:35.130
user is partially scrolled down so let's
 

00:14:35.130 --> 00:14:37.040
user is partially scrolled down so let's
Center our load around where the user is

00:14:37.040 --> 00:14:37.050
Center our load around where the user is
 

00:14:37.050 --> 00:14:43.940
Center our load around where the user is
we send that over to the UI and now we

00:14:43.940 --> 00:14:43.950
we send that over to the UI and now we
 

00:14:43.950 --> 00:14:45.950
we send that over to the UI and now we
submit list again but because these are

00:14:45.950 --> 00:14:45.960
submit list again but because these are
 

00:14:45.960 --> 00:14:47.720
submit list again but because these are
two different lists and we really don't

00:14:47.720 --> 00:14:47.730
two different lists and we really don't
 

00:14:47.730 --> 00:14:49.360
two different lists and we really don't
want to call notify data set changed

00:14:49.360 --> 00:14:49.370
want to call notify data set changed
 

00:14:49.370 --> 00:14:51.800
want to call notify data set changed
what happens is that we compute an

00:14:51.800 --> 00:14:51.810
what happens is that we compute an
 

00:14:51.810 --> 00:14:53.420
what happens is that we compute an
asynchronous diff on a background thread

00:14:53.420 --> 00:14:53.430
asynchronous diff on a background thread
 

00:14:53.430 --> 00:14:55.100
asynchronous diff on a background thread
just like with list adapter as he'd

00:14:55.100 --> 00:14:55.110
just like with list adapter as he'd
 

00:14:55.110 --> 00:14:57.500
just like with list adapter as he'd
mentioned earlier once that diff is

00:14:57.500 --> 00:14:57.510
mentioned earlier once that diff is
 

00:14:57.510 --> 00:15:00.470
mentioned earlier once that diff is
computed we passed that dippers alt into

00:15:00.470 --> 00:15:00.480
computed we passed that dippers alt into
 

00:15:00.480 --> 00:15:02.450
computed we passed that dippers alt into
the recycler view and swap the new page

00:15:02.450 --> 00:15:02.460
the recycler view and swap the new page
 

00:15:02.460 --> 00:15:04.790
the recycler view and swap the new page
list in immediately you get a new item

00:15:04.790 --> 00:15:04.800
list in immediately you get a new item
 

00:15:04.800 --> 00:15:07.040
list in immediately you get a new item
showing up a new animation for that and

00:15:07.040 --> 00:15:07.050
showing up a new animation for that and
 

00:15:07.050 --> 00:15:08.750
showing up a new animation for that and
we only have to do the minimal amount of

00:15:08.750 --> 00:15:08.760
we only have to do the minimal amount of
 

00:15:08.760 --> 00:15:09.250
we only have to do the minimal amount of
UI

00:15:09.250 --> 00:15:09.260
UI
 

00:15:09.260 --> 00:15:13.420
UI
to bind and show the new item so

00:15:13.420 --> 00:15:13.430
to bind and show the new item so
 

00:15:13.430 --> 00:15:15.580
to bind and show the new item so
fundamentally under the hood we do a lot

00:15:15.580 --> 00:15:15.590
fundamentally under the hood we do a lot
 

00:15:15.590 --> 00:15:17.950
fundamentally under the hood we do a lot
of trickery to make this work but from

00:15:17.950 --> 00:15:17.960
of trickery to make this work but from
 

00:15:17.960 --> 00:15:19.540
of trickery to make this work but from
the outside we try and make it look as

00:15:19.540 --> 00:15:19.550
the outside we try and make it look as
 

00:15:19.550 --> 00:15:21.490
the outside we try and make it look as
close as possible to a live data of a

00:15:21.490 --> 00:15:21.500
close as possible to a live data of a
 

00:15:21.500 --> 00:15:22.810
close as possible to a live data of a
list because this is a really nice

00:15:22.810 --> 00:15:22.820
list because this is a really nice
 

00:15:22.820 --> 00:15:24.880
list because this is a really nice
experience it lets you keep your UI

00:15:24.880 --> 00:15:24.890
experience it lets you keep your UI
 

00:15:24.890 --> 00:15:27.370
experience it lets you keep your UI
really really simple and avoid all of

00:15:27.370 --> 00:15:27.380
really really simple and avoid all of
 

00:15:27.380 --> 00:15:29.200
really really simple and avoid all of
the information about paging on that

00:15:29.200 --> 00:15:29.210
the information about paging on that
 

00:15:29.210 --> 00:15:31.120
the information about paging on that
side and let you configure and construct

00:15:31.120 --> 00:15:31.130
side and let you configure and construct
 

00:15:31.130 --> 00:15:34.180
side and let you configure and construct
your your flow in one place from the

00:15:34.180 --> 00:15:34.190
your your flow in one place from the
 

00:15:34.190 --> 00:15:36.760
your your flow in one place from the
repository the page list adapter is able

00:15:36.760 --> 00:15:36.770
repository the page list adapter is able
 

00:15:36.770 --> 00:15:38.590
repository the page list adapter is able
to handle both the new page lists as

00:15:38.590 --> 00:15:38.600
to handle both the new page lists as
 

00:15:38.600 --> 00:15:40.930
to handle both the new page lists as
they flow in and also the internal

00:15:40.930 --> 00:15:40.940
they flow in and also the internal
 

00:15:40.940 --> 00:15:47.400
they flow in and also the internal
updates of the page list as it loads

00:15:47.400 --> 00:15:47.410
 
 

00:15:47.410 --> 00:15:51.670
 
okay let's talk about data sources so

00:15:51.670 --> 00:15:51.680
okay let's talk about data sources so
 

00:15:51.680 --> 00:15:53.800
okay let's talk about data sources so
mention that page this is a list

00:15:53.800 --> 00:15:53.810
mention that page this is a list
 

00:15:53.810 --> 00:15:56.020
mention that page this is a list
implementation that works with a data

00:15:56.020 --> 00:15:56.030
implementation that works with a data
 

00:15:56.030 --> 00:15:58.060
implementation that works with a data
source and we have different types of

00:15:58.060 --> 00:15:58.070
source and we have different types of
 

00:15:58.070 --> 00:16:00.730
source and we have different types of
data sources you can have a positional

00:16:00.730 --> 00:16:00.740
data sources you can have a positional
 

00:16:00.740 --> 00:16:03.520
data sources you can have a positional
data source and item keyed data source

00:16:03.520 --> 00:16:03.530
data source and item keyed data source
 

00:16:03.530 --> 00:16:07.930
data source and item keyed data source
and a page keyed data source okay let's

00:16:07.930 --> 00:16:07.940
and a page keyed data source okay let's
 

00:16:07.940 --> 00:16:10.300
and a page keyed data source okay let's
start with the positional data source if

00:16:10.300 --> 00:16:10.310
start with the positional data source if
 

00:16:10.310 --> 00:16:12.040
start with the positional data source if
you have an application like the

00:16:12.040 --> 00:16:12.050
you have an application like the
 

00:16:12.050 --> 00:16:14.710
you have an application like the
contacts application on Android where

00:16:14.710 --> 00:16:14.720
contacts application on Android where
 

00:16:14.720 --> 00:16:17.320
contacts application on Android where
you have the data locally but users may

00:16:17.320 --> 00:16:17.330
you have the data locally but users may
 

00:16:17.330 --> 00:16:20.040
you have the data locally but users may
want to jump into arbitrary positions

00:16:20.040 --> 00:16:20.050
want to jump into arbitrary positions
 

00:16:20.050 --> 00:16:22.780
want to jump into arbitrary positions
positional data source is your best

00:16:22.780 --> 00:16:22.790
positional data source is your best
 

00:16:22.790 --> 00:16:25.990
positional data source is your best
option this is actually what room uses

00:16:25.990 --> 00:16:26.000
option this is actually what room uses
 

00:16:26.000 --> 00:16:29.050
option this is actually what room uses
behind the scenes so if you have a data

00:16:29.050 --> 00:16:29.060
behind the scenes so if you have a data
 

00:16:29.060 --> 00:16:31.570
behind the scenes so if you have a data
source or UI like that you extend this

00:16:31.570 --> 00:16:31.580
source or UI like that you extend this
 

00:16:31.580 --> 00:16:33.970
source or UI like that you extend this
positional data source class and you

00:16:33.970 --> 00:16:33.980
positional data source class and you
 

00:16:33.980 --> 00:16:37.870
positional data source class and you
specify the type of items but to better

00:16:37.870 --> 00:16:37.880
specify the type of items but to better
 

00:16:37.880 --> 00:16:40.330
specify the type of items but to better
understand how this data source behaves

00:16:40.330 --> 00:16:40.340
understand how this data source behaves
 

00:16:40.340 --> 00:16:42.520
understand how this data source behaves
let's look at an example so we have the

00:16:42.520 --> 00:16:42.530
let's look at an example so we have the
 

00:16:42.530 --> 00:16:45.670
let's look at an example so we have the
UI here we'll just zoom out go to the

00:16:45.670 --> 00:16:45.680
UI here we'll just zoom out go to the
 

00:16:45.680 --> 00:16:47.860
UI here we'll just zoom out go to the
bird's eye view and we have our data

00:16:47.860 --> 00:16:47.870
bird's eye view and we have our data
 

00:16:47.870 --> 00:16:51.190
bird's eye view and we have our data
source on the write back by a list the

00:16:51.190 --> 00:16:51.200
source on the write back by a list the
 

00:16:51.200 --> 00:16:53.050
source on the write back by a list the
very first time you come to the recycle

00:16:53.050 --> 00:16:53.060
very first time you come to the recycle
 

00:16:53.060 --> 00:16:55.360
very first time you come to the recycle
Emil page this will call this load

00:16:55.360 --> 00:16:55.370
Emil page this will call this load
 

00:16:55.370 --> 00:16:58.020
Emil page this will call this load
initial method on the data source

00:16:58.020 --> 00:16:58.030
initial method on the data source
 

00:16:58.030 --> 00:17:01.690
initial method on the data source
pesticide start position a page size and

00:17:01.690 --> 00:17:01.700
pesticide start position a page size and
 

00:17:01.700 --> 00:17:04.360
pesticide start position a page size and
in load side initial load size which is

00:17:04.360 --> 00:17:04.370
in load side initial load size which is
 

00:17:04.370 --> 00:17:06.220
in load side initial load size which is
usually larger than the page size

00:17:06.220 --> 00:17:06.230
usually larger than the page size
 

00:17:06.230 --> 00:17:08.170
usually larger than the page size
because you want to have more items at

00:17:08.170 --> 00:17:08.180
because you want to have more items at
 

00:17:08.180 --> 00:17:10.930
because you want to have more items at
the beginning and whether placeholders

00:17:10.930 --> 00:17:10.940
the beginning and whether placeholders
 

00:17:10.940 --> 00:17:14.050
the beginning and whether placeholders
are enabled or not in this example we

00:17:14.050 --> 00:17:14.060
are enabled or not in this example we
 

00:17:14.060 --> 00:17:16.329
are enabled or not in this example we
just assume placeholders are enabled

00:17:16.329 --> 00:17:16.339
just assume placeholders are enabled
 

00:17:16.339 --> 00:17:18.610
just assume placeholders are enabled
so we're data source will return the

00:17:18.610 --> 00:17:18.620
so we're data source will return the
 

00:17:18.620 --> 00:17:22.130
so we're data source will return the
data tell us where the data starts

00:17:22.130 --> 00:17:22.140
data tell us where the data starts
 

00:17:22.140 --> 00:17:23.929
data tell us where the data starts
and it will give us a total number of

00:17:23.929 --> 00:17:23.939
and it will give us a total number of
 

00:17:23.939 --> 00:17:27.049
and it will give us a total number of
items in the data source based on that

00:17:27.049 --> 00:17:27.059
items in the data source based on that
 

00:17:27.059 --> 00:17:29.360
items in the data source based on that
we'll start displaying the data but

00:17:29.360 --> 00:17:29.370
we'll start displaying the data but
 

00:17:29.370 --> 00:17:31.610
we'll start displaying the data but
we'll also display the placeholders so

00:17:31.610 --> 00:17:31.620
we'll also display the placeholders so
 

00:17:31.620 --> 00:17:34.549
we'll also display the placeholders so
that the size of the pages is equal to

00:17:34.549 --> 00:17:34.559
that the size of the pages is equal to
 

00:17:34.559 --> 00:17:36.710
that the size of the pages is equal to
the total number of items in the data

00:17:36.710 --> 00:17:36.720
the total number of items in the data
 

00:17:36.720 --> 00:17:41.330
the total number of items in the data
source now user can start scrolling as

00:17:41.330 --> 00:17:41.340
source now user can start scrolling as
 

00:17:41.340 --> 00:17:44.090
source now user can start scrolling as
soon as you start scrolling pages will

00:17:44.090 --> 00:17:44.100
soon as you start scrolling pages will
 

00:17:44.100 --> 00:17:46.160
soon as you start scrolling pages will
realize that is going to run out of data

00:17:46.160 --> 00:17:46.170
realize that is going to run out of data
 

00:17:46.170 --> 00:17:48.470
realize that is going to run out of data
and it's going to call this load range

00:17:48.470 --> 00:17:48.480
and it's going to call this load range
 

00:17:48.480 --> 00:17:50.870
and it's going to call this load range
method on the positional data source

00:17:50.870 --> 00:17:50.880
method on the positional data source
 

00:17:50.880 --> 00:17:53.390
method on the positional data source
pass it the start position of the first

00:17:53.390 --> 00:17:53.400
pass it the start position of the first
 

00:17:53.400 --> 00:17:57.980
pass it the start position of the first
item is missing and a page size and get

00:17:57.980 --> 00:17:57.990
item is missing and a page size and get
 

00:17:57.990 --> 00:18:01.520
item is missing and a page size and get
the nev data appended to the list so

00:18:01.520 --> 00:18:01.530
the nev data appended to the list so
 

00:18:01.530 --> 00:18:04.220
the nev data appended to the list so
maybe in this case usual user uses the

00:18:04.220 --> 00:18:04.230
maybe in this case usual user uses the
 

00:18:04.230 --> 00:18:06.049
maybe in this case usual user uses the
fast scroller and jumps into an

00:18:06.049 --> 00:18:06.059
fast scroller and jumps into an
 

00:18:06.059 --> 00:18:08.090
fast scroller and jumps into an
arbitrary position where we didn't have

00:18:08.090 --> 00:18:08.100
arbitrary position where we didn't have
 

00:18:08.100 --> 00:18:11.630
arbitrary position where we didn't have
the data yet when this happens it will

00:18:11.630 --> 00:18:11.640
the data yet when this happens it will
 

00:18:11.640 --> 00:18:14.169
the data yet when this happens it will
call the data source load range position

00:18:14.169 --> 00:18:14.179
call the data source load range position
 

00:18:14.179 --> 00:18:17.060
call the data source load range position
we take it a position slight level

00:18:17.060 --> 00:18:17.070
we take it a position slight level
 

00:18:17.070 --> 00:18:21.680
we take it a position slight level
recycle Emil and load that page so that

00:18:21.680 --> 00:18:21.690
recycle Emil and load that page so that
 

00:18:21.690 --> 00:18:23.090
recycle Emil and load that page so that
we can display it to the user

00:18:23.090 --> 00:18:23.100
we can display it to the user
 

00:18:23.100 --> 00:18:25.159
we can display it to the user
this is why positional data source is

00:18:25.159 --> 00:18:25.169
this is why positional data source is
 

00:18:25.169 --> 00:18:27.110
this is why positional data source is
really good if user can jump into

00:18:27.110 --> 00:18:27.120
really good if user can jump into
 

00:18:27.120 --> 00:18:30.340
really good if user can jump into
arbitrary positions you never block them

00:18:30.340 --> 00:18:30.350
arbitrary positions you never block them
 

00:18:30.350 --> 00:18:32.930
arbitrary positions you never block them
let's say something has happened in the

00:18:32.930 --> 00:18:32.940
let's say something has happened in the
 

00:18:32.940 --> 00:18:35.630
let's say something has happened in the
data base data has been in well data so

00:18:35.630 --> 00:18:35.640
data base data has been in well data so
 

00:18:35.640 --> 00:18:37.580
data base data has been in well data so
we will get a Neve data source so each

00:18:37.580 --> 00:18:37.590
we will get a Neve data source so each
 

00:18:37.590 --> 00:18:39.980
we will get a Neve data source so each
data source represents a snapshot of the

00:18:39.980 --> 00:18:39.990
data source represents a snapshot of the
 

00:18:39.990 --> 00:18:43.460
data source represents a snapshot of the
data so we get this new one we'll create

00:18:43.460 --> 00:18:43.470
data so we get this new one we'll create
 

00:18:43.470 --> 00:18:45.919
data so we get this new one we'll create
a new page this for it and we'll load

00:18:45.919 --> 00:18:45.929
a new page this for it and we'll load
 

00:18:45.929 --> 00:18:48.169
a new page this for it and we'll load
the initial page from this data source

00:18:48.169 --> 00:18:48.179
the initial page from this data source
 

00:18:48.179 --> 00:18:51.200
the initial page from this data source
based on where user is in the previous

00:18:51.200 --> 00:18:51.210
based on where user is in the previous
 

00:18:51.210 --> 00:18:54.140
based on where user is in the previous
one we'll bring this one as always on a

00:18:54.140 --> 00:18:54.150
one we'll bring this one as always on a
 

00:18:54.150 --> 00:18:56.060
one we'll bring this one as always on a
background thread we will calculate the

00:18:56.060 --> 00:18:56.070
background thread we will calculate the
 

00:18:56.070 --> 00:18:58.130
background thread we will calculate the
difference between these two lists and

00:18:58.130 --> 00:18:58.140
difference between these two lists and
 

00:18:58.140 --> 00:19:00.680
difference between these two lists and
update the recycle area with the correct

00:19:00.680 --> 00:19:00.690
update the recycle area with the correct
 

00:19:00.690 --> 00:19:05.240
update the recycle area with the correct
animations second one is the item keyed

00:19:05.240 --> 00:19:05.250
animations second one is the item keyed
 

00:19:05.250 --> 00:19:07.610
animations second one is the item keyed
data source so in which you have some

00:19:07.610 --> 00:19:07.620
data source so in which you have some
 

00:19:07.620 --> 00:19:12.260
data source so in which you have some
data like a list of names if you look at

00:19:12.260 --> 00:19:12.270
data like a list of names if you look at
 

00:19:12.270 --> 00:19:14.810
data like a list of names if you look at
the page out of this you could identify

00:19:14.810 --> 00:19:14.820
the page out of this you could identify
 

00:19:14.820 --> 00:19:17.780
the page out of this you could identify
the items before this page by using the

00:19:17.780 --> 00:19:17.790
the items before this page by using the
 

00:19:17.790 --> 00:19:20.570
the items before this page by using the
first item in the list and the next page

00:19:20.570 --> 00:19:20.580
first item in the list and the next page
 

00:19:20.580 --> 00:19:22.400
first item in the list and the next page
by using the last item in the list

00:19:22.400 --> 00:19:22.410
by using the last item in the list
 

00:19:22.410 --> 00:19:25.580
by using the last item in the list
basically every item can identify a page

00:19:25.580 --> 00:19:25.590
basically every item can identify a page
 

00:19:25.590 --> 00:19:29.180
basically every item can identify a page
after or before it if your data sources

00:19:29.180 --> 00:19:29.190
after or before it if your data sources
 

00:19:29.190 --> 00:19:31.610
after or before it if your data sources
like that you should implement the item

00:19:31.610 --> 00:19:31.620
like that you should implement the item
 

00:19:31.620 --> 00:19:34.490
like that you should implement the item
keep data source cause you provide a key

00:19:34.490 --> 00:19:34.500
keep data source cause you provide a key
 

00:19:34.500 --> 00:19:35.550
keep data source cause you provide a key
type in the

00:19:35.550 --> 00:19:35.560
type in the
 

00:19:35.560 --> 00:19:37.740
type in the
case we are using names so strange and

00:19:37.740 --> 00:19:37.750
case we are using names so strange and
 

00:19:37.750 --> 00:19:41.520
case we are using names so strange and
the item type in the list okay let's

00:19:41.520 --> 00:19:41.530
the item type in the list okay let's
 

00:19:41.530 --> 00:19:43.920
the item type in the list okay let's
look at an example so first time you

00:19:43.920 --> 00:19:43.930
look at an example so first time you
 

00:19:43.930 --> 00:19:46.350
look at an example so first time you
come to the recycling wheel it's called

00:19:46.350 --> 00:19:46.360
come to the recycling wheel it's called
 

00:19:46.360 --> 00:19:49.080
come to the recycling wheel it's called
the load initial method pass the initial

00:19:49.080 --> 00:19:49.090
the load initial method pass the initial
 

00:19:49.090 --> 00:19:51.090
the load initial method pass the initial
key which is now because we don't have

00:19:51.090 --> 00:19:51.100
key which is now because we don't have
 

00:19:51.100 --> 00:19:54.210
key which is now because we don't have
it it requests the load size and whether

00:19:54.210 --> 00:19:54.220
it it requests the load size and whether
 

00:19:54.220 --> 00:19:56.610
it it requests the load size and whether
placeholders are enabled or not we'll

00:19:56.610 --> 00:19:56.620
placeholders are enabled or not we'll
 

00:19:56.620 --> 00:19:58.650
placeholders are enabled or not we'll
just assume they're not enabled in this

00:19:58.650 --> 00:19:58.660
just assume they're not enabled in this
 

00:19:58.660 --> 00:20:01.620
just assume they're not enabled in this
example so data source will only return

00:20:01.620 --> 00:20:01.630
example so data source will only return
 

00:20:01.630 --> 00:20:04.320
example so data source will only return
this data it's not going to count it

00:20:04.320 --> 00:20:04.330
this data it's not going to count it
 

00:20:04.330 --> 00:20:07.440
this data it's not going to count it
because there's no placeholders so start

00:20:07.440 --> 00:20:07.450
because there's no placeholders so start
 

00:20:07.450 --> 00:20:09.930
because there's no placeholders so start
displaying it as soon as users start

00:20:09.930 --> 00:20:09.940
displaying it as soon as users start
 

00:20:09.940 --> 00:20:13.470
displaying it as soon as users start
scrolling we will extract a key from the

00:20:13.470 --> 00:20:13.480
scrolling we will extract a key from the
 

00:20:13.480 --> 00:20:16.230
scrolling we will extract a key from the
last item we have and call the data

00:20:16.230 --> 00:20:16.240
last item we have and call the data
 

00:20:16.240 --> 00:20:18.900
last item we have and call the data
source load after method to load another

00:20:18.900 --> 00:20:18.910
source load after method to load another
 

00:20:18.910 --> 00:20:22.940
source load after method to load another
page similarly as user keeps scrolling

00:20:22.940 --> 00:20:22.950
page similarly as user keeps scrolling
 

00:20:22.950 --> 00:20:26.490
page similarly as user keeps scrolling
just extracts a key and then loads

00:20:26.490 --> 00:20:26.500
just extracts a key and then loads
 

00:20:26.500 --> 00:20:30.390
just extracts a key and then loads
another page the same way now at this

00:20:30.390 --> 00:20:30.400
another page the same way now at this
 

00:20:30.400 --> 00:20:32.910
another page the same way now at this
point I say this data was coming from

00:20:32.910 --> 00:20:32.920
point I say this data was coming from
 

00:20:32.920 --> 00:20:35.010
point I say this data was coming from
the database similarly something has

00:20:35.010 --> 00:20:35.020
the database similarly something has
 

00:20:35.020 --> 00:20:38.220
the database similarly something has
changed so we lost the data source spin

00:20:38.220 --> 00:20:38.230
changed so we lost the data source spin
 

00:20:38.230 --> 00:20:40.680
changed so we lost the data source spin
email dated I will get a new data source

00:20:40.680 --> 00:20:40.690
email dated I will get a new data source
 

00:20:40.690 --> 00:20:43.770
email dated I will get a new data source
when we create a new pages for this data

00:20:43.770 --> 00:20:43.780
when we create a new pages for this data
 

00:20:43.780 --> 00:20:46.560
when we create a new pages for this data
source we are going to extract the key

00:20:46.560 --> 00:20:46.570
source we are going to extract the key
 

00:20:46.570 --> 00:20:48.990
source we are going to extract the key
from one of the items that's currently

00:20:48.990 --> 00:20:49.000
from one of the items that's currently
 

00:20:49.000 --> 00:20:50.610
from one of the items that's currently
visible in the recyclerview

00:20:50.610 --> 00:20:50.620
visible in the recyclerview
 

00:20:50.620 --> 00:20:54.030
visible in the recyclerview
closer to the top and load a page from

00:20:54.030 --> 00:20:54.040
closer to the top and load a page from
 

00:20:54.040 --> 00:20:57.570
closer to the top and load a page from
this new data source and we get that

00:20:57.570 --> 00:20:57.580
this new data source and we get that
 

00:20:57.580 --> 00:21:00.840
this new data source and we get that
page we understand these are pages we

00:21:00.840 --> 00:21:00.850
page we understand these are pages we
 

00:21:00.850 --> 00:21:03.300
page we understand these are pages we
will calculate the diff and update UI

00:21:03.300 --> 00:21:03.310
will calculate the diff and update UI
 

00:21:03.310 --> 00:21:07.290
will calculate the diff and update UI
with the correct animations now we don't

00:21:07.290 --> 00:21:07.300
with the correct animations now we don't
 

00:21:07.300 --> 00:21:09.360
with the correct animations now we don't
take the data on top anymore so if user

00:21:09.360 --> 00:21:09.370
take the data on top anymore so if user
 

00:21:09.370 --> 00:21:12.350
take the data on top anymore so if user
tries to scroll up we need more data

00:21:12.350 --> 00:21:12.360
tries to scroll up we need more data
 

00:21:12.360 --> 00:21:15.120
tries to scroll up we need more data
same thing you just extract the key from

00:21:15.120 --> 00:21:15.130
same thing you just extract the key from
 

00:21:15.130 --> 00:21:17.850
same thing you just extract the key from
the first item call load before method

00:21:17.850 --> 00:21:17.860
the first item call load before method
 

00:21:17.860 --> 00:21:20.660
the first item call load before method
on the data source just get that page

00:21:20.660 --> 00:21:20.670
on the data source just get that page
 

00:21:20.670 --> 00:21:24.480
on the data source just get that page
prepended to the page list and now user

00:21:24.480 --> 00:21:24.490
prepended to the page list and now user
 

00:21:24.490 --> 00:21:27.660
prepended to the page list and now user
can scroll outwards so it's all always

00:21:27.660 --> 00:21:27.670
can scroll outwards so it's all always
 

00:21:27.670 --> 00:21:32.040
can scroll outwards so it's all always
lazy always reactive third one is the

00:21:32.040 --> 00:21:32.050
lazy always reactive third one is the
 

00:21:32.050 --> 00:21:33.930
lazy always reactive third one is the
page keyed data source now this is a

00:21:33.930 --> 00:21:33.940
page keyed data source now this is a
 

00:21:33.940 --> 00:21:36.480
page keyed data source now this is a
really common way of paging especially

00:21:36.480 --> 00:21:36.490
really common way of paging especially
 

00:21:36.490 --> 00:21:39.210
really common way of paging especially
on the server-side api's so your client

00:21:39.210 --> 00:21:39.220
on the server-side api's so your client
 

00:21:39.220 --> 00:21:41.490
on the server-side api's so your client
sends the request and when the response

00:21:41.490 --> 00:21:41.500
sends the request and when the response
 

00:21:41.500 --> 00:21:43.800
sends the request and when the response
comes from the server it includes the

00:21:43.800 --> 00:21:43.810
comes from the server it includes the
 

00:21:43.810 --> 00:21:48.120
comes from the server it includes the
data it also includes pointers for the

00:21:48.120 --> 00:21:48.130
data it also includes pointers for the
 

00:21:48.130 --> 00:21:49.890
data it also includes pointers for the
next and pre

00:21:49.890 --> 00:21:49.900
next and pre
 

00:21:49.900 --> 00:21:52.710
next and pre
get up API works this way reddit API

00:21:52.710 --> 00:21:52.720
get up API works this way reddit API
 

00:21:52.720 --> 00:21:55.860
get up API works this way reddit API
works this way is very common so if you

00:21:55.860 --> 00:21:55.870
works this way is very common so if you
 

00:21:55.870 --> 00:21:58.049
works this way is very common so if you
have a data source like that you should

00:21:58.049 --> 00:21:58.059
have a data source like that you should
 

00:21:58.059 --> 00:22:00.380
have a data source like that you should
implement the page key data source

00:22:00.380 --> 00:22:00.390
implement the page key data source
 

00:22:00.390 --> 00:22:03.330
implement the page key data source
specify the type of your keys that you

00:22:03.330 --> 00:22:03.340
specify the type of your keys that you
 

00:22:03.340 --> 00:22:06.350
specify the type of your keys that you
use in the pointers and the item type

00:22:06.350 --> 00:22:06.360
use in the pointers and the item type
 

00:22:06.360 --> 00:22:10.049
use in the pointers and the item type
okay let's look at an example first time

00:22:10.049 --> 00:22:10.059
okay let's look at an example first time
 

00:22:10.059 --> 00:22:12.060
okay let's look at an example first time
user comes to the UI we call load

00:22:12.060 --> 00:22:12.070
user comes to the UI we call load
 

00:22:12.070 --> 00:22:15.299
user comes to the UI we call load
initial we give it a size and we ask

00:22:15.299 --> 00:22:15.309
initial we give it a size and we ask
 

00:22:15.309 --> 00:22:17.040
initial we give it a size and we ask
whether placeholders are enabled or not

00:22:17.040 --> 00:22:17.050
whether placeholders are enabled or not
 

00:22:17.050 --> 00:22:19.830
whether placeholders are enabled or not
they're usually disabled because your

00:22:19.830 --> 00:22:19.840
they're usually disabled because your
 

00:22:19.840 --> 00:22:21.330
they're usually disabled because your
server doesn't give you an accurate

00:22:21.330 --> 00:22:21.340
server doesn't give you an accurate
 

00:22:21.340 --> 00:22:23.630
server doesn't give you an accurate
count we'll just assume they're disabled

00:22:23.630 --> 00:22:23.640
count we'll just assume they're disabled
 

00:22:23.640 --> 00:22:29.280
count we'll just assume they're disabled
easier and then the data source returns

00:22:29.280 --> 00:22:29.290
easier and then the data source returns
 

00:22:29.290 --> 00:22:32.340
easier and then the data source returns
the data but it also gives us pointers

00:22:32.340 --> 00:22:32.350
the data but it also gives us pointers
 

00:22:32.350 --> 00:22:35.190
the data but it also gives us pointers
for the previous key and the next page

00:22:35.190 --> 00:22:35.200
for the previous key and the next page
 

00:22:35.200 --> 00:22:38.700
for the previous key and the next page
key and then we start displaying it if

00:22:38.700 --> 00:22:38.710
key and then we start displaying it if
 

00:22:38.710 --> 00:22:40.640
key and then we start displaying it if
user Scrolls

00:22:40.640 --> 00:22:40.650
user Scrolls
 

00:22:40.650 --> 00:22:43.500
user Scrolls
we need more content so we're going to

00:22:43.500 --> 00:22:43.510
we need more content so we're going to
 

00:22:43.510 --> 00:22:46.560
we need more content so we're going to
call the load after method use the key

00:22:46.560 --> 00:22:46.570
call the load after method use the key
 

00:22:46.570 --> 00:22:48.360
call the load after method use the key
that was returned in the previous

00:22:48.360 --> 00:22:48.370
that was returned in the previous
 

00:22:48.370 --> 00:22:51.660
that was returned in the previous
request to get the next page from the

00:22:51.660 --> 00:22:51.670
request to get the next page from the
 

00:22:51.670 --> 00:22:54.900
request to get the next page from the
data source now this next page comes

00:22:54.900 --> 00:22:54.910
data source now this next page comes
 

00:22:54.910 --> 00:22:57.780
data source now this next page comes
with a field called adjacent page key so

00:22:57.780 --> 00:22:57.790
with a field called adjacent page key so
 

00:22:57.790 --> 00:23:00.060
with a field called adjacent page key so
it always sells okay what is the next

00:23:00.060 --> 00:23:00.070
it always sells okay what is the next
 

00:23:00.070 --> 00:23:02.910
it always sells okay what is the next
page in this direction is literally like

00:23:02.910 --> 00:23:02.920
page in this direction is literally like
 

00:23:02.920 --> 00:23:07.200
page in this direction is literally like
a linked list of pages once you take

00:23:07.200 --> 00:23:07.210
a linked list of pages once you take
 

00:23:07.210 --> 00:23:11.370
a linked list of pages once you take
that user can scroll now a difference in

00:23:11.370 --> 00:23:11.380
that user can scroll now a difference in
 

00:23:11.380 --> 00:23:13.310
that user can scroll now a difference in
this data source is how we handle

00:23:13.310 --> 00:23:13.320
this data source is how we handle
 

00:23:13.320 --> 00:23:16.950
this data source is how we handle
invalidation median user hit the refresh

00:23:16.950 --> 00:23:16.960
invalidation median user hit the refresh
 

00:23:16.960 --> 00:23:19.140
invalidation median user hit the refresh
button on the screen data sources in

00:23:19.140 --> 00:23:19.150
button on the screen data sources in
 

00:23:19.150 --> 00:23:22.740
button on the screen data sources in
well data will get a new data source but

00:23:22.740 --> 00:23:22.750
well data will get a new data source but
 

00:23:22.750 --> 00:23:24.870
well data will get a new data source but
in the lord initial method there is no

00:23:24.870 --> 00:23:24.880
in the lord initial method there is no
 

00:23:24.880 --> 00:23:26.040
in the lord initial method there is no
key anymore

00:23:26.040 --> 00:23:26.050
key anymore
 

00:23:26.050 --> 00:23:28.320
key anymore
this is because I mentioned it's like a

00:23:28.320 --> 00:23:28.330
this is because I mentioned it's like a
 

00:23:28.330 --> 00:23:30.840
this is because I mentioned it's like a
linked list so if the previous list is

00:23:30.840 --> 00:23:30.850
linked list so if the previous list is
 

00:23:30.850 --> 00:23:33.600
linked list so if the previous list is
invalid links in the list doesn't mean

00:23:33.600 --> 00:23:33.610
invalid links in the list doesn't mean
 

00:23:33.610 --> 00:23:36.000
invalid links in the list doesn't mean
anything so you always need to load the

00:23:36.000 --> 00:23:36.010
anything so you always need to load the
 

00:23:36.010 --> 00:23:39.150
anything so you always need to load the
very first page again and display it in

00:23:39.150 --> 00:23:39.160
very first page again and display it in
 

00:23:39.160 --> 00:23:42.270
very first page again and display it in
the UI this is usually not a problem in

00:23:42.270 --> 00:23:42.280
the UI this is usually not a problem in
 

00:23:42.280 --> 00:23:44.640
the UI this is usually not a problem in
practice because you only do this if

00:23:44.640 --> 00:23:44.650
practice because you only do this if
 

00:23:44.650 --> 00:23:46.950
practice because you only do this if
user does swipe the Refresh so they are

00:23:46.950 --> 00:23:46.960
user does swipe the Refresh so they are
 

00:23:46.960 --> 00:23:53.940
user does swipe the Refresh so they are
already on top of the list okay alright

00:23:53.940 --> 00:23:53.950
already on top of the list okay alright
 

00:23:53.950 --> 00:23:56.000
already on top of the list okay alright
so you talk through what we might see

00:23:56.000 --> 00:23:56.010
so you talk through what we might see
 

00:23:56.010 --> 00:23:58.530
so you talk through what we might see
implementing a data source but what

00:23:58.530 --> 00:23:58.540
implementing a data source but what
 

00:23:58.540 --> 00:24:00.150
implementing a data source but what
happens when we

00:24:00.150 --> 00:24:00.160
happens when we
 

00:24:00.160 --> 00:24:03.360
happens when we
load from multiple sources at once so a

00:24:03.360 --> 00:24:03.370
load from multiple sources at once so a
 

00:24:03.370 --> 00:24:07.290
load from multiple sources at once so a
database plus Network solution these two

00:24:07.290 --> 00:24:07.300
database plus Network solution these two
 

00:24:07.300 --> 00:24:08.460
database plus Network solution these two
components can work really nicely

00:24:08.460 --> 00:24:08.470
components can work really nicely
 

00:24:08.470 --> 00:24:10.170
components can work really nicely
together when the database acts as a

00:24:10.170 --> 00:24:10.180
together when the database acts as a
 

00:24:10.180 --> 00:24:13.560
together when the database acts as a
cache for the network you can page from

00:24:13.560 --> 00:24:13.570
cache for the network you can page from
 

00:24:13.570 --> 00:24:15.000
cache for the network you can page from
your back-end that you have with all the

00:24:15.000 --> 00:24:15.010
your back-end that you have with all the
 

00:24:15.010 --> 00:24:17.250
your back-end that you have with all the
benefits of the local cache you can have

00:24:17.250 --> 00:24:17.260
benefits of the local cache you can have
 

00:24:17.260 --> 00:24:19.620
benefits of the local cache you can have
a really nice offline support you can

00:24:19.620 --> 00:24:19.630
a really nice offline support you can
 

00:24:19.630 --> 00:24:23.130
a really nice offline support you can
resume quickly if the application has

00:24:23.130 --> 00:24:23.140
resume quickly if the application has
 

00:24:23.140 --> 00:24:24.600
resume quickly if the application has
been killed and restarted and you can

00:24:24.600 --> 00:24:24.610
been killed and restarted and you can
 

00:24:24.610 --> 00:24:26.310
been killed and restarted and you can
minimize network traffic by taking

00:24:26.310 --> 00:24:26.320
minimize network traffic by taking
 

00:24:26.320 --> 00:24:27.660
minimize network traffic by taking
advantage of data that's already on

00:24:27.660 --> 00:24:27.670
advantage of data that's already on
 

00:24:27.670 --> 00:24:31.110
advantage of data that's already on
device so let's look at what how this

00:24:31.110 --> 00:24:31.120
device so let's look at what how this
 

00:24:31.120 --> 00:24:32.850
device so let's look at what how this
might look compared to what we were we

00:24:32.850 --> 00:24:32.860
might look compared to what we were we
 

00:24:32.860 --> 00:24:35.280
might look compared to what we were we
were showing before with a single source

00:24:35.280 --> 00:24:35.290
were showing before with a single source
 

00:24:35.290 --> 00:24:38.970
were showing before with a single source
of data so how does the network fit into

00:24:38.970 --> 00:24:38.980
of data so how does the network fit into
 

00:24:38.980 --> 00:24:41.820
of data so how does the network fit into
this system so one way that we could do

00:24:41.820 --> 00:24:41.830
this system so one way that we could do
 

00:24:41.830 --> 00:24:43.980
this system so one way that we could do
this is we could basically say well the

00:24:43.980 --> 00:24:43.990
this is we could basically say well the
 

00:24:43.990 --> 00:24:45.540
this is we could basically say well the
network is my source of data when I'm

00:24:45.540 --> 00:24:45.550
network is my source of data when I'm
 

00:24:45.550 --> 00:24:48.000
network is my source of data when I'm
connected and the database is my source

00:24:48.000 --> 00:24:48.010
connected and the database is my source
 

00:24:48.010 --> 00:24:51.410
connected and the database is my source
when I'm not so if I'm connected then I

00:24:51.410 --> 00:24:51.420
when I'm not so if I'm connected then I
 

00:24:51.420 --> 00:24:54.270
when I'm not so if I'm connected then I
iPage data from the network and if I'm

00:24:54.270 --> 00:24:54.280
iPage data from the network and if I'm
 

00:24:54.280 --> 00:24:56.910
iPage data from the network and if I'm
not I page data from the database the

00:24:56.910 --> 00:24:56.920
not I page data from the database the
 

00:24:56.920 --> 00:24:58.950
not I page data from the database the
one problem there is that you don't have

00:24:58.950 --> 00:24:58.960
one problem there is that you don't have
 

00:24:58.960 --> 00:25:00.600
one problem there is that you don't have
anything storing data in your database

00:25:00.600 --> 00:25:00.610
anything storing data in your database
 

00:25:00.610 --> 00:25:02.010
anything storing data in your database
even when you're loading a network but

00:25:02.010 --> 00:25:02.020
even when you're loading a network but
 

00:25:02.020 --> 00:25:04.050
even when you're loading a network but
it's pretty easy as a side effect of

00:25:04.050 --> 00:25:04.060
it's pretty easy as a side effect of
 

00:25:04.060 --> 00:25:05.310
it's pretty easy as a side effect of
loading from the network you can just

00:25:05.310 --> 00:25:05.320
loading from the network you can just
 

00:25:05.320 --> 00:25:07.140
loading from the network you can just
store in the database and there you have

00:25:07.140 --> 00:25:07.150
store in the database and there you have
 

00:25:07.150 --> 00:25:09.690
store in the database and there you have
paging from both however this has a

00:25:09.690 --> 00:25:09.700
paging from both however this has a
 

00:25:09.700 --> 00:25:11.520
paging from both however this has a
couple of really big problems that are

00:25:11.520 --> 00:25:11.530
couple of really big problems that are
 

00:25:11.530 --> 00:25:13.470
couple of really big problems that are
important to discuss so this switching

00:25:13.470 --> 00:25:13.480
important to discuss so this switching
 

00:25:13.480 --> 00:25:15.780
important to discuss so this switching
model has the first problem that this

00:25:15.780 --> 00:25:15.790
model has the first problem that this
 

00:25:15.790 --> 00:25:17.130
model has the first problem that this
connected state is really

00:25:17.130 --> 00:25:17.140
connected state is really
 

00:25:17.140 --> 00:25:20.250
connected state is really
oversimplifying in reality individual

00:25:20.250 --> 00:25:20.260
oversimplifying in reality individual
 

00:25:20.260 --> 00:25:22.320
oversimplifying in reality individual
requests to your servers can succeed and

00:25:22.320 --> 00:25:22.330
requests to your servers can succeed and
 

00:25:22.330 --> 00:25:24.390
requests to your servers can succeed and
fail and a user that's connected like

00:25:24.390 --> 00:25:24.400
fail and a user that's connected like
 

00:25:24.400 --> 00:25:28.170
fail and a user that's connected like
20% some of the packets go through that

00:25:28.170 --> 00:25:28.180
20% some of the packets go through that
 

00:25:28.180 --> 00:25:29.610
20% some of the packets go through that
doesn't really fit really nicely into

00:25:29.610 --> 00:25:29.620
doesn't really fit really nicely into
 

00:25:29.620 --> 00:25:32.340
doesn't really fit really nicely into
this model or the other big problem is

00:25:32.340 --> 00:25:32.350
this model or the other big problem is
 

00:25:32.350 --> 00:25:33.750
this model or the other big problem is
that we're not using local data when

00:25:33.750 --> 00:25:33.760
that we're not using local data when
 

00:25:33.760 --> 00:25:37.440
that we're not using local data when
it's present so let's go about looking

00:25:37.440 --> 00:25:37.450
it's present so let's go about looking
 

00:25:37.450 --> 00:25:41.730
it's present so let's go about looking
at a different way to do this so what if

00:25:41.730 --> 00:25:41.740
at a different way to do this so what if
 

00:25:41.740 --> 00:25:44.040
at a different way to do this so what if
instead we just monitor the database and

00:25:44.040 --> 00:25:44.050
instead we just monitor the database and
 

00:25:44.050 --> 00:25:46.710
instead we just monitor the database and
use that as our local single source of

00:25:46.710 --> 00:25:46.720
use that as our local single source of
 

00:25:46.720 --> 00:25:49.470
use that as our local single source of
truth what we can do then is we can say

00:25:49.470 --> 00:25:49.480
truth what we can do then is we can say
 

00:25:49.480 --> 00:25:51.720
truth what we can do then is we can say
well the only time that I need to load

00:25:51.720 --> 00:25:51.730
well the only time that I need to load
 

00:25:51.730 --> 00:25:53.580
well the only time that I need to load
data is when the database tells me that

00:25:53.580 --> 00:25:53.590
data is when the database tells me that
 

00:25:53.590 --> 00:25:56.160
data is when the database tells me that
it's out of data I can use that as a

00:25:56.160 --> 00:25:56.170
it's out of data I can use that as a
 

00:25:56.170 --> 00:25:57.990
it's out of data I can use that as a
signal to load more data from the

00:25:57.990 --> 00:25:58.000
signal to load more data from the
 

00:25:58.000 --> 00:26:01.520
signal to load more data from the
network store it into the database and

00:26:01.520 --> 00:26:01.530
network store it into the database and
 

00:26:01.530 --> 00:26:05.040
network store it into the database and
then I have my entire solution built I

00:26:05.040 --> 00:26:05.050
then I have my entire solution built I
 

00:26:05.050 --> 00:26:07.530
then I have my entire solution built I
just load data when I need to but I can

00:26:07.530 --> 00:26:07.540
just load data when I need to but I can
 

00:26:07.540 --> 00:26:09.300
just load data when I need to but I can
present only the database which makes

00:26:09.300 --> 00:26:09.310
present only the database which makes
 

00:26:09.310 --> 00:26:12.180
present only the database which makes
things a lot simpler so we get the

00:26:12.180 --> 00:26:12.190
things a lot simpler so we get the
 

00:26:12.190 --> 00:26:14.460
things a lot simpler so we get the
benefits of consistent data for

00:26:14.460 --> 00:26:14.470
benefits of consistent data for
 

00:26:14.470 --> 00:26:17.310
benefits of consistent data for
we have a similarly simple process but

00:26:17.310 --> 00:26:17.320
we have a similarly simple process but
 

00:26:17.320 --> 00:26:19.440
we have a similarly simple process but
importantly this gracefully de creatives

00:26:19.440 --> 00:26:19.450
importantly this gracefully de creatives
 

00:26:19.450 --> 00:26:21.690
importantly this gracefully de creatives
on failures if your can if your user is

00:26:21.690 --> 00:26:21.700
on failures if your can if your user is
 

00:26:21.700 --> 00:26:24.240
on failures if your can if your user is
in that 20% connected state you can

00:26:24.240 --> 00:26:24.250
in that 20% connected state you can
 

00:26:24.250 --> 00:26:26.010
in that 20% connected state you can
still produce you can still present all

00:26:26.010 --> 00:26:26.020
still produce you can still present all
 

00:26:26.020 --> 00:26:27.860
still produce you can still present all
of the data that you have locally and

00:26:27.860 --> 00:26:27.870
of the data that you have locally and
 

00:26:27.870 --> 00:26:31.200
of the data that you have locally and
try and fetch or potentially retry when

00:26:31.200 --> 00:26:31.210
try and fetch or potentially retry when
 

00:26:31.210 --> 00:26:35.220
try and fetch or potentially retry when
the network is around so potentially you

00:26:35.220 --> 00:26:35.230
the network is around so potentially you
 

00:26:35.230 --> 00:26:37.260
the network is around so potentially you
might say well this doesn't keep my data

00:26:37.260 --> 00:26:37.270
might say well this doesn't keep my data
 

00:26:37.270 --> 00:26:38.880
might say well this doesn't keep my data
fresh and an easy way to work around

00:26:38.880 --> 00:26:38.890
fresh and an easy way to work around
 

00:26:38.890 --> 00:26:40.710
fresh and an easy way to work around
that is to just say whenever anyone

00:26:40.710 --> 00:26:40.720
that is to just say whenever anyone
 

00:26:40.720 --> 00:26:43.170
that is to just say whenever anyone
starts observing this stream of data we

00:26:43.170 --> 00:26:43.180
starts observing this stream of data we
 

00:26:43.180 --> 00:26:46.140
starts observing this stream of data we
we start a new fetch we we see if we

00:26:46.140 --> 00:26:46.150
we start a new fetch we we see if we
 

00:26:46.150 --> 00:26:47.790
we start a new fetch we we see if we
need to to refresh our content and

00:26:47.790 --> 00:26:47.800
need to to refresh our content and
 

00:26:47.800 --> 00:26:49.560
need to to refresh our content and
that's especially important usually when

00:26:49.560 --> 00:26:49.570
that's especially important usually when
 

00:26:49.570 --> 00:26:55.380
that's especially important usually when
you have frequently updating data so in

00:26:55.380 --> 00:26:55.390
you have frequently updating data so in
 

00:26:55.390 --> 00:26:57.420
you have frequently updating data so in
so in that proposed model here that we

00:26:57.420 --> 00:26:57.430
so in that proposed model here that we
 

00:26:57.430 --> 00:26:59.850
so in that proposed model here that we
saw we need an out of data signal from

00:26:59.850 --> 00:26:59.860
saw we need an out of data signal from
 

00:26:59.860 --> 00:27:01.290
saw we need an out of data signal from
the database because the rest of that

00:27:01.290 --> 00:27:01.300
the database because the rest of that
 

00:27:01.300 --> 00:27:03.330
the database because the rest of that
we've basically already built in the

00:27:03.330 --> 00:27:03.340
we've basically already built in the
 

00:27:03.340 --> 00:27:06.810
we've basically already built in the
first few slides so when we have that

00:27:06.810 --> 00:27:06.820
first few slides so when we have that
 

00:27:06.820 --> 00:27:09.000
first few slides so when we have that
signal we can trigger loads from the

00:27:09.000 --> 00:27:09.010
signal we can trigger loads from the
 

00:27:09.010 --> 00:27:10.800
signal we can trigger loads from the
network directly into the database and

00:27:10.800 --> 00:27:10.810
network directly into the database and
 

00:27:10.810 --> 00:27:12.690
network directly into the database and
the UI doesn't have to enter into any of

00:27:12.690 --> 00:27:12.700
the UI doesn't have to enter into any of
 

00:27:12.700 --> 00:27:13.580
the UI doesn't have to enter into any of
that

00:27:13.580 --> 00:27:13.590
that
 

00:27:13.590 --> 00:27:16.620
that
so paging built exactly this signal for

00:27:16.620 --> 00:27:16.630
so paging built exactly this signal for
 

00:27:16.630 --> 00:27:18.240
so paging built exactly this signal for
exactly this reason and we call that the

00:27:18.240 --> 00:27:18.250
exactly this reason and we call that the
 

00:27:18.250 --> 00:27:20.160
exactly this reason and we call that the
boundary callback so let's go ahead and

00:27:20.160 --> 00:27:20.170
boundary callback so let's go ahead and
 

00:27:20.170 --> 00:27:23.430
boundary callback so let's go ahead and
look at what that might look like so the

00:27:23.430 --> 00:27:23.440
look at what that might look like so the
 

00:27:23.440 --> 00:27:24.660
look at what that might look like so the
first most important part of the

00:27:24.660 --> 00:27:24.670
first most important part of the
 

00:27:24.670 --> 00:27:27.060
first most important part of the
boundary callback that you that you

00:27:27.060 --> 00:27:27.070
boundary callback that you that you
 

00:27:27.070 --> 00:27:29.100
boundary callback that you that you
implement is that you pass it two

00:27:29.100 --> 00:27:29.110
implement is that you pass it two
 

00:27:29.110 --> 00:27:31.020
implement is that you pass it two
different that you'll want to provide it

00:27:31.020 --> 00:27:31.030
different that you'll want to provide it
 

00:27:31.030 --> 00:27:32.880
different that you'll want to provide it
two different sources of data the

00:27:32.880 --> 00:27:32.890
two different sources of data the
 

00:27:32.890 --> 00:27:34.650
two different sources of data the
database and the network because that's

00:27:34.650 --> 00:27:34.660
database and the network because that's
 

00:27:34.660 --> 00:27:38.220
database and the network because that's
its job so the first that the important

00:27:38.220 --> 00:27:38.230
its job so the first that the important
 

00:27:38.230 --> 00:27:40.440
its job so the first that the important
callback that we have here is on item it

00:27:40.440 --> 00:27:40.450
callback that we have here is on item it
 

00:27:40.450 --> 00:27:42.390
callback that we have here is on item it
unloaded and this signifies the last

00:27:42.390 --> 00:27:42.400
unloaded and this signifies the last
 

00:27:42.400 --> 00:27:44.070
unloaded and this signifies the last
item in the database has been loaded

00:27:44.070 --> 00:27:44.080
item in the database has been loaded
 

00:27:44.080 --> 00:27:46.230
item in the database has been loaded
from the paged list and if there's more

00:27:46.230 --> 00:27:46.240
from the paged list and if there's more
 

00:27:46.240 --> 00:27:49.910
from the paged list and if there's more
from the network it's time to load it so

00:27:49.910 --> 00:27:49.920
from the network it's time to load it so
 

00:27:49.920 --> 00:27:52.140
from the network it's time to load it so
the first thing that we do in response

00:27:52.140 --> 00:27:52.150
the first thing that we do in response
 

00:27:52.150 --> 00:27:53.970
the first thing that we do in response
to this is that we over on a network

00:27:53.970 --> 00:27:53.980
to this is that we over on a network
 

00:27:53.980 --> 00:27:55.860
to this is that we over on a network
thread we can request our service hey

00:27:55.860 --> 00:27:55.870
thread we can request our service hey
 

00:27:55.870 --> 00:27:59.310
thread we can request our service hey
give me more data and in this particular

00:27:59.310 --> 00:27:59.320
give me more data and in this particular
 

00:27:59.320 --> 00:28:02.580
give me more data and in this particular
case we're using the item at the end to

00:28:02.580 --> 00:28:02.590
case we're using the item at the end to
 

00:28:02.590 --> 00:28:04.800
case we're using the item at the end to
feed which data we need more of because

00:28:04.800 --> 00:28:04.810
feed which data we need more of because
 

00:28:04.810 --> 00:28:07.710
feed which data we need more of because
we're in an item keyed case similar to

00:28:07.710 --> 00:28:07.720
we're in an item keyed case similar to
 

00:28:07.720 --> 00:28:09.390
we're in an item keyed case similar to
the item keyed data source that you saw

00:28:09.390 --> 00:28:09.400
the item keyed data source that you saw
 

00:28:09.400 --> 00:28:12.960
the item keyed data source that you saw
before now if that request is successful

00:28:12.960 --> 00:28:12.970
before now if that request is successful
 

00:28:12.970 --> 00:28:16.410
before now if that request is successful
we simply jump over to the database

00:28:16.410 --> 00:28:16.420
we simply jump over to the database
 

00:28:16.420 --> 00:28:19.560
we simply jump over to the database
thread insert that data that we loaded

00:28:19.560 --> 00:28:19.570
thread insert that data that we loaded
 

00:28:19.570 --> 00:28:21.300
thread insert that data that we loaded
from the response into the database and

00:28:21.300 --> 00:28:21.310
from the response into the database and
 

00:28:21.310 --> 00:28:23.580
from the response into the database and
we're basically done we've we've

00:28:23.580 --> 00:28:23.590
we're basically done we've we've
 

00:28:23.590 --> 00:28:25.230
we're basically done we've we've
connected that signal that we needed and

00:28:25.230 --> 00:28:25.240
connected that signal that we needed and
 

00:28:25.240 --> 00:28:26.670
connected that signal that we needed and
now we've added network to something

00:28:26.670 --> 00:28:26.680
now we've added network to something
 

00:28:26.680 --> 00:28:27.400
now we've added network to something
that was purely

00:28:27.400 --> 00:28:27.410
that was purely
 

00:28:27.410 --> 00:28:29.530
that was purely
to base now the one other trick that you

00:28:29.530 --> 00:28:29.540
to base now the one other trick that you
 

00:28:29.540 --> 00:28:30.880
to base now the one other trick that you
need to need to be aware of though is

00:28:30.880 --> 00:28:30.890
need to need to be aware of though is
 

00:28:30.890 --> 00:28:32.980
need to need to be aware of though is
that it's possible when the database is

00:28:32.980 --> 00:28:32.990
that it's possible when the database is
 

00:28:32.990 --> 00:28:35.800
that it's possible when the database is
being invalidated locally for multiple

00:28:35.800 --> 00:28:35.810
being invalidated locally for multiple
 

00:28:35.810 --> 00:28:38.920
being invalidated locally for multiple
at end signals to trigger so what you

00:28:38.920 --> 00:28:38.930
at end signals to trigger so what you
 

00:28:38.930 --> 00:28:40.840
at end signals to trigger so what you
can do is you can just protect this with

00:28:40.840 --> 00:28:40.850
can do is you can just protect this with
 

00:28:40.850 --> 00:28:43.210
can do is you can just protect this with
a simple boolean to say if I'm already

00:28:43.210 --> 00:28:43.220
a simple boolean to say if I'm already
 

00:28:43.220 --> 00:28:49.150
a simple boolean to say if I'm already
loading don't try and then we can reset

00:28:49.150 --> 00:28:49.160
loading don't try and then we can reset
 

00:28:49.160 --> 00:28:51.730
loading don't try and then we can reset
that at the end so using this boundary

00:28:51.730 --> 00:28:51.740
that at the end so using this boundary
 

00:28:51.740 --> 00:28:53.200
that at the end so using this boundary
callback is pretty simple you can just

00:28:53.200 --> 00:28:53.210
callback is pretty simple you can just
 

00:28:53.210 --> 00:28:55.180
callback is pretty simple you can just
add this back into your live page list

00:28:55.180 --> 00:28:55.190
add this back into your live page list
 

00:28:55.190 --> 00:28:57.280
add this back into your live page list
builder or to your rx page list builder

00:28:57.280 --> 00:28:57.290
builder or to your rx page list builder
 

00:28:57.290 --> 00:28:59.890
builder or to your rx page list builder
and then that gives you the database

00:28:59.890 --> 00:28:59.900
and then that gives you the database
 

00:28:59.900 --> 00:29:02.680
and then that gives you the database
plus Network solution all isolated in

00:29:02.680 --> 00:29:02.690
plus Network solution all isolated in
 

00:29:02.690 --> 00:29:06.520
plus Network solution all isolated in
that one callback so let's talk about

00:29:06.520 --> 00:29:06.530
that one callback so let's talk about
 

00:29:06.530 --> 00:29:09.460
that one callback so let's talk about
what the paging library is so the paging

00:29:09.460 --> 00:29:09.470
what the paging library is so the paging
 

00:29:09.470 --> 00:29:11.740
what the paging library is so the paging
library provides paging from database

00:29:11.740 --> 00:29:11.750
library provides paging from database
 

00:29:11.750 --> 00:29:14.200
library provides paging from database
Network and importantly both as we just

00:29:14.200 --> 00:29:14.210
Network and importantly both as we just
 

00:29:14.210 --> 00:29:16.270
Network and importantly both as we just
saw and it can load that data directly

00:29:16.270 --> 00:29:16.280
saw and it can load that data directly
 

00:29:16.280 --> 00:29:17.700
saw and it can load that data directly
into recyclerview

00:29:17.700 --> 00:29:17.710
into recyclerview
 

00:29:17.710 --> 00:29:21.100
into recyclerview
it extends this live data of list this

00:29:21.100 --> 00:29:21.110
it extends this live data of list this
 

00:29:21.110 --> 00:29:22.960
it extends this live data of list this
observable list pattern that we really

00:29:22.960 --> 00:29:22.970
observable list pattern that we really
 

00:29:22.970 --> 00:29:24.880
observable list pattern that we really
like because it keeps our UI incredibly

00:29:24.880 --> 00:29:24.890
like because it keeps our UI incredibly
 

00:29:24.890 --> 00:29:27.100
like because it keeps our UI incredibly
simple and it lets us contain all of the

00:29:27.100 --> 00:29:27.110
simple and it lets us contain all of the
 

00:29:27.110 --> 00:29:30.400
simple and it lets us contain all of the
complex logic on one side it's

00:29:30.400 --> 00:29:30.410
complex logic on one side it's
 

00:29:30.410 --> 00:29:32.530
complex logic on one side it's
configurable we have configurable load

00:29:32.530 --> 00:29:32.540
configurable we have configurable load
 

00:29:32.540 --> 00:29:35.860
configurable we have configurable load
size prefetch and placeholders and it

00:29:35.860 --> 00:29:35.870
size prefetch and placeholders and it
 

00:29:35.870 --> 00:29:37.930
size prefetch and placeholders and it
integrates directly with room with live

00:29:37.930 --> 00:29:37.940
integrates directly with room with live
 

00:29:37.940 --> 00:29:41.890
integrates directly with room with live
data and with rx the paging 1.0 was just

00:29:41.890 --> 00:29:41.900
data and with rx the paging 1.0 was just
 

00:29:41.900 --> 00:29:44.010
data and with rx the paging 1.0 was just
released and so please give it a try

00:29:44.010 --> 00:29:44.020
released and so please give it a try
 

00:29:44.020 --> 00:29:48.060
released and so please give it a try
take it for a spin

00:29:48.060 --> 00:29:48.070
 
 

00:29:48.070 --> 00:29:51.840
 
hi that was a lot of information we know

00:29:51.840 --> 00:29:51.850
hi that was a lot of information we know
 

00:29:51.850 --> 00:29:54.880
hi that was a lot of information we know
so where to go next well we have

00:29:54.880 --> 00:29:54.890
so where to go next well we have
 

00:29:54.890 --> 00:29:57.370
so where to go next well we have
extensive documentation on the web

00:29:57.370 --> 00:29:57.380
extensive documentation on the web
 

00:29:57.380 --> 00:30:00.430
extensive documentation on the web
render it calm so we can just read we

00:30:00.430 --> 00:30:00.440
render it calm so we can just read we
 

00:30:00.440 --> 00:30:02.500
render it calm so we can just read we
provide more details and more samples

00:30:02.500 --> 00:30:02.510
provide more details and more samples
 

00:30:02.510 --> 00:30:05.590
provide more details and more samples
there we have an amazing code lab you

00:30:05.590 --> 00:30:05.600
there we have an amazing code lab you
 

00:30:05.600 --> 00:30:07.090
there we have an amazing code lab you
can just check it out in the code lab

00:30:07.090 --> 00:30:07.100
can just check it out in the code lab
 

00:30:07.100 --> 00:30:11.020
can just check it out in the code lab
area or you can try it online we also

00:30:11.020 --> 00:30:11.030
area or you can try it online we also
 

00:30:11.030 --> 00:30:13.330
area or you can try it online we also
have samples on github where we

00:30:13.330 --> 00:30:13.340
have samples on github where we
 

00:30:13.340 --> 00:30:15.640
have samples on github where we
implement different data sources using

00:30:15.640 --> 00:30:15.650
implement different data sources using
 

00:30:15.650 --> 00:30:18.580
implement different data sources using
reddit API or a different local database

00:30:18.580 --> 00:30:18.590
reddit API or a different local database
 

00:30:18.590 --> 00:30:21.190
reddit API or a different local database
and you can compare and contrast the

00:30:21.190 --> 00:30:21.200
and you can compare and contrast the
 

00:30:21.200 --> 00:30:23.680
and you can compare and contrast the
behavior of different data sources you

00:30:23.680 --> 00:30:23.690
behavior of different data sources you
 

00:30:23.690 --> 00:30:25.480
behavior of different data sources you
can also see how you could handle things

00:30:25.480 --> 00:30:25.490
can also see how you could handle things
 

00:30:25.490 --> 00:30:28.900
can also see how you could handle things
or like errors retries we are all of it

00:30:28.900 --> 00:30:28.910
or like errors retries we are all of it
 

00:30:28.910 --> 00:30:33.610
or like errors retries we are all of it
there but if you be sitting here for the

00:30:33.610 --> 00:30:33.620
there but if you be sitting here for the
 

00:30:33.620 --> 00:30:36.340
there but if you be sitting here for the
last 30 minutes I'm wondering whether

00:30:36.340 --> 00:30:36.350
last 30 minutes I'm wondering whether
 

00:30:36.350 --> 00:30:38.680
last 30 minutes I'm wondering whether
these two guys never heard about cursors

00:30:38.680 --> 00:30:38.690
these two guys never heard about cursors
 

00:30:38.690 --> 00:30:41.680
these two guys never heard about cursors
and its built-in PageRank

00:30:41.680 --> 00:30:41.690
and its built-in PageRank
 

00:30:41.690 --> 00:30:44.830
and its built-in PageRank
lest they should be dead hear about that

00:30:44.830 --> 00:30:44.840
lest they should be dead hear about that
 

00:30:44.840 --> 00:30:47.510
lest they should be dead hear about that
so this is actually what we wanted to

00:30:47.510 --> 00:30:47.520
so this is actually what we wanted to
 

00:30:47.520 --> 00:30:49.430
so this is actually what we wanted to
use initially when we started this

00:30:49.430 --> 00:30:49.440
use initially when we started this
 

00:30:49.440 --> 00:30:51.440
use initially when we started this
project because we already have cursor

00:30:51.440 --> 00:30:51.450
project because we already have cursor
 

00:30:51.450 --> 00:30:53.900
project because we already have cursor
adapter the cursor it takes care of all

00:30:53.900 --> 00:30:53.910
adapter the cursor it takes care of all
 

00:30:53.910 --> 00:30:58.520
adapter the cursor it takes care of all
the work right wrong so we realize it is

00:30:58.520 --> 00:30:58.530
the work right wrong so we realize it is
 

00:30:58.530 --> 00:31:01.370
the work right wrong so we realize it is
very unpredictable and inefficient if

00:31:01.370 --> 00:31:01.380
very unpredictable and inefficient if
 

00:31:01.380 --> 00:31:04.190
very unpredictable and inefficient if
your cursor becomes large so especially

00:31:04.190 --> 00:31:04.200
your cursor becomes large so especially
 

00:31:04.200 --> 00:31:06.710
your cursor becomes large so especially
if your in your application currently if

00:31:06.710 --> 00:31:06.720
if your in your application currently if
 

00:31:06.720 --> 00:31:10.010
if your in your application currently if
you are using cursor for lazy loading be

00:31:10.010 --> 00:31:10.020
you are using cursor for lazy loading be
 

00:31:10.020 --> 00:31:13.880
you are using cursor for lazy loading be
very careful room and paging together

00:31:13.880 --> 00:31:13.890
very careful room and paging together
 

00:31:13.890 --> 00:31:16.310
very careful room and paging together
avoids this problem because we create

00:31:16.310 --> 00:31:16.320
avoids this problem because we create
 

00:31:16.320 --> 00:31:19.970
avoids this problem because we create
much smaller queries not to rely on the

00:31:19.970 --> 00:31:19.980
much smaller queries not to rely on the
 

00:31:19.980 --> 00:31:22.640
much smaller queries not to rely on the
paging behavior of cursors now it's a

00:31:22.640 --> 00:31:22.650
paging behavior of cursors now it's a
 

00:31:22.650 --> 00:31:24.830
paging behavior of cursors now it's a
very complex topic but Chris wrote an

00:31:24.830 --> 00:31:24.840
very complex topic but Chris wrote an
 

00:31:24.840 --> 00:31:27.830
very complex topic but Chris wrote an
amazing blog post about this that you

00:31:27.830 --> 00:31:27.840
amazing blog post about this that you
 

00:31:27.840 --> 00:31:30.560
amazing blog post about this that you
can watch in that link and we will post

00:31:30.560 --> 00:31:30.570
can watch in that link and we will post
 

00:31:30.570 --> 00:31:34.180
can watch in that link and we will post
this URL after the talk it's amazing but

00:31:34.180 --> 00:31:34.190
this URL after the talk it's amazing but
 

00:31:34.190 --> 00:31:38.240
this URL after the talk it's amazing but
TLDR cursors paging is not the right way

00:31:38.240 --> 00:31:38.250
TLDR cursors paging is not the right way
 

00:31:38.250 --> 00:31:42.260
TLDR cursors paging is not the right way
to the paging we did it wrong we awful

00:31:42.260 --> 00:31:42.270
to the paging we did it wrong we awful
 

00:31:42.270 --> 00:31:44.540
to the paging we did it wrong we awful
if he said this time did it wrong ten

00:31:44.540 --> 00:31:44.550
if he said this time did it wrong ten
 

00:31:44.550 --> 00:31:47.480
if he said this time did it wrong ten
years ago at least 10 years ago it's not

00:31:47.480 --> 00:31:47.490
years ago at least 10 years ago it's not
 

00:31:47.490 --> 00:31:54.610
years ago at least 10 years ago it's not
me okay okay so paging is part of

00:31:54.610 --> 00:31:54.620
me okay okay so paging is part of
 

00:31:54.620 --> 00:31:57.830
me okay okay so paging is part of
jetpack our new initiative to accelerate

00:31:57.830 --> 00:31:57.840
jetpack our new initiative to accelerate
 

00:31:57.840 --> 00:31:59.890
jetpack our new initiative to accelerate
Android development

00:31:59.890 --> 00:31:59.900
Android development
 

00:31:59.900 --> 00:32:03.380
Android development
we had great many talks at this i/o this

00:32:03.380 --> 00:32:03.390
we had great many talks at this i/o this
 

00:32:03.390 --> 00:32:05.930
we had great many talks at this i/o this
was the last one so please if you were

00:32:05.930 --> 00:32:05.940
was the last one so please if you were
 

00:32:05.940 --> 00:32:08.570
was the last one so please if you were
not able to attend those sessions check

00:32:08.570 --> 00:32:08.580
not able to attend those sessions check
 

00:32:08.580 --> 00:32:10.630
not able to attend those sessions check
them on YouTube everything is recorded

00:32:10.630 --> 00:32:10.640
them on YouTube everything is recorded
 

00:32:10.640 --> 00:32:13.669
them on YouTube everything is recorded
and goes to learn more about jetpack on

00:32:13.669 --> 00:32:13.679
and goes to learn more about jetpack on
 

00:32:13.679 --> 00:32:15.760
and goes to learn more about jetpack on
our website and provide us feedback

00:32:15.760 --> 00:32:15.770
our website and provide us feedback
 

00:32:15.770 --> 00:32:17.490
our website and provide us feedback
thank you

00:32:17.490 --> 00:32:17.500
thank you
 

00:32:17.500 --> 00:32:18.710
thank you
[Applause]

00:32:18.710 --> 00:32:18.720
[Applause]
 

00:32:18.720 --> 00:32:41.239
[Applause]
[Music]

