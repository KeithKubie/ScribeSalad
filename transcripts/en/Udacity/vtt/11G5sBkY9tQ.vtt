WEBVTT
Kind: captions
Language: en

00:00:00.260 --> 00:00:03.220
Thank you for sharing your responses on the forum. Now,

00:00:03.220 --> 00:00:05.970
in writing all of this code, we've seen a lot of

00:00:05.970 --> 00:00:09.380
new words. Let's review all of them. So here I

00:00:09.380 --> 00:00:11.860
have both of my programming files on the screen at the

00:00:11.860 --> 00:00:15.060
same time. Here's my first programming file where I'm making

00:00:15.060 --> 00:00:18.660
the class movie. And the second one, when I'm defining instances

00:00:18.660 --> 00:00:23.130
of that class, instances like Toy Story and Avatar. Now, you

00:00:23.130 --> 00:00:25.450
may have to go into Full Screen mode to be able

00:00:25.450 --> 00:00:28.080
to read all of the details on the screen.

00:00:28.080 --> 00:00:30.950
Okay, let's start reviewing all of the new words.

00:00:30.950 --> 00:00:33.980
So, we started out by defining a class. The

00:00:33.980 --> 00:00:37.560
class Keyword allows us to make classes. You can think

00:00:37.560 --> 00:00:40.160
of a class as a blueprint. And a class

00:00:40.160 --> 00:00:44.420
can have both data and methods. Now, we can

00:00:44.420 --> 00:00:47.630
create multiple instances of a class. In this case,

00:00:47.630 --> 00:00:50.920
we created instances like Toy Story and Avatar. We could

00:00:50.920 --> 00:00:53.830
have created many more. Now, when we create

00:00:53.830 --> 00:00:56.159
an instance of a class, instance like Toy

00:00:56.159 --> 00:01:00.030
Story, the classes constructor gets called. This is

00:01:00.030 --> 00:01:02.960
essentially the init method inside the class. It is

00:01:02.960 --> 00:01:05.300
here that we initialize all of the data

00:01:05.300 --> 00:01:09.500
associated with the instance. The constructor uses the keyword,

00:01:09.500 --> 00:01:12.430
self. Now, you can think of self as

00:01:12.430 --> 00:01:16.144
itself or the instance in question. So, when the

00:01:16.144 --> 00:01:19.904
instance Toy Story is getting created, self is

00:01:19.904 --> 00:01:23.460
Toy Story. All the variables associated with a specific

00:01:23.460 --> 00:01:27.420
instance are called instance variables. Now, these are

00:01:27.420 --> 00:01:29.860
unique to an object and can be accessed using

00:01:29.860 --> 00:01:32.430
the self keyword inside the class and the

00:01:32.430 --> 00:01:36.100
instance name outside the class. And, finally, all of

00:01:36.100 --> 00:01:38.760
the functions inside the class that are associated

00:01:38.760 --> 00:01:41.200
with an instance and have the first argument as

00:01:41.200 --> 00:01:45.810
self are called instance methods. So there you have it. All of the

00:01:45.810 --> 00:01:48.860
new words that we have learned thus far, right there on one screen.

