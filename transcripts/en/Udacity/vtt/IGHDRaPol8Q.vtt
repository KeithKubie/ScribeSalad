WEBVTT
Kind: captions
Language: en

00:00:01.310 --> 00:00:02.790
Now that we've discussed it from different visual

00:00:02.790 --> 00:00:05.440
cues and different data types, as well as the

00:00:05.440 --> 00:00:07.850
scales to use for those data types, why

00:00:07.850 --> 00:00:10.650
don't we circle back to making graphs with ggplot

00:00:10.650 --> 00:00:14.540
and try to do something a bit more advanced. This time, we'll want to write a

00:00:14.540 --> 00:00:18.775
function lineplot_compare, that will rad in a CSV file called

00:00:18.775 --> 00:00:27.190
hr_by_team_year_sf_la.csv. This file contains 3 columns - yearID, HR,

00:00:27.190 --> 00:00:30.240
and teamID, which represent the total number of

00:00:30.240 --> 00:00:32.490
home runs hit each year by either the San

00:00:32.490 --> 00:00:36.770
Francisco Giants or the LA Dodgers. Why don't you

00:00:36.770 --> 00:00:39.450
produce a visualization comparing the total home runs hit

00:00:39.450 --> 00:00:42.660
by year for the 2 teams. Note that to

00:00:42.660 --> 00:00:45.610
differentiate between multiple categories on the same plot in

00:00:45.610 --> 00:00:48.420
ggplot, we can pass color in with the other

00:00:48.420 --> 00:00:52.900
arguments to aes rather than in our geometry functions.

00:00:52.900 --> 00:00:57.995
For example we could say ggplot data aes xvar, yvar, and then

00:00:57.995 --> 00:01:03.933
color=catetory_var This should help you to make this chart. Your code goes here.

00:01:03.933 --> 00:01:05.620
[BLANK_AUDIO]

