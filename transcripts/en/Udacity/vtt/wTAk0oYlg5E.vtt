WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.160
Big O notation is the final tool for analyzing algorithms

00:00:04.160 --> 00:00:07.730
that you need to know about before we can analyze Alice algorithm.

00:00:07.730 --> 00:00:10.830
As we've just seen even talking about worst-case running time

00:00:10.830 --> 00:00:13.660
can be a bit tricky if we're trying to be very precise.

00:00:13.660 --> 00:00:18.620
We have to identify the worst-case input in detail, which can be counter intuitive

00:00:18.620 --> 00:00:21.180
and then work through a lot of different cases.

00:00:21.180 --> 00:00:26.520
And also as we noticed it's annoying to have to count every single step an algorithm makes.

00:00:26.520 --> 00:00:32.020
So for example if you have two algorithms and one had a running time of 2n²+23 time steps

00:00:32.020 --> 00:00:38.160
and the other one had 2n²+27 time steps, you wouldn't really care about the 23 or the 27.

00:00:38.160 --> 00:00:41.160
You would say that essentially they have the same running time.

00:00:41.160 --> 00:00:45.040
So we are going to introduce a huge simplification

00:00:45.040 --> 00:00:48.540
to stating running times and that is called Big O-notation.

00:00:48.540 --> 00:00:51.920
If you've had an algorithm course before, you should already be familiar with this

00:00:51.920 --> 00:00:55.010
but we'll review it here just to make sure you understand.

00:00:55.010 --> 00:00:59.170
So let's say we have two algorithms, algorithm A and algorithm B,

00:00:59.170 --> 00:01:04.870
and algorithm A has a running time 3n²-n+10 for an input of size n,

00:01:04.870 --> 00:01:12.250
and algorithm B has a running time of 2^n-50n+256.

00:01:12.250 --> 00:01:18.220
So what I would like you think about is which of these two algorithms you would prefer

00:01:18.220 --> 00:01:23.100
if you don't know anything about the input other than that you're going to get different sizes.

00:01:23.100 --> 00:01:27.690
So no other structural assumptions or anything else that you know.

00:01:27.690 --> 00:01:31.510
And I would like you to check this box if you think it's algorithm A that if you take

00:01:31.510 --> 99:59:59.000
in general and this box if you think it's algorithm B.

