WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.640 align:start position:0%
 
I<00:00:00.089><c> don't</c><00:00:00.510><c> know</c><00:00:00.599><c> about</c><00:00:00.719><c> you</c><00:00:00.960><c> but</c><00:00:01.260><c> I</c><00:00:01.469><c> like</c>

00:00:01.640 --> 00:00:01.650 align:start position:0%
I don't know about you but I like
 

00:00:01.650 --> 00:00:03.379 align:start position:0%
I don't know about you but I like
writing<00:00:01.920><c> less</c><00:00:02.250><c> code</c><00:00:02.389><c> particularly</c>

00:00:03.379 --> 00:00:03.389 align:start position:0%
writing less code particularly
 

00:00:03.389 --> 00:00:07.130 align:start position:0%
writing less code particularly
boilerplate<00:00:04.319><c> code</c><00:00:04.609><c> alongside</c><00:00:05.609><c> API</c><00:00:06.120><c> 24</c><00:00:06.720><c> we've</c>

00:00:07.130 --> 00:00:07.140 align:start position:0%
boilerplate code alongside API 24 we've
 

00:00:07.140 --> 00:00:09.440 align:start position:0%
boilerplate code alongside API 24 we've
included<00:00:07.589><c> support</c><00:00:07.919><c> for</c><00:00:08.160><c> a</c><00:00:08.189><c> number</c><00:00:08.429><c> of</c><00:00:08.610><c> Java</c><00:00:09.150><c> 8</c>

00:00:09.440 --> 00:00:09.450 align:start position:0%
included support for a number of Java 8
 

00:00:09.450 --> 00:00:11.690 align:start position:0%
included support for a number of Java 8
language<00:00:10.080><c> features</c><00:00:10.530><c> with</c><00:00:10.889><c> the</c><00:00:11.010><c> help</c><00:00:11.250><c> of</c><00:00:11.400><c> the</c>

00:00:11.690 --> 00:00:11.700 align:start position:0%
language features with the help of the
 

00:00:11.700 --> 00:00:14.629 align:start position:0%
language features with the help of the
Jack<00:00:12.000><c> tool</c><00:00:12.389><c> chain</c><00:00:12.950><c> to</c><00:00:13.950><c> use</c><00:00:14.099><c> any</c><00:00:14.280><c> of</c><00:00:14.370><c> these</c><00:00:14.429><c> new</c>

00:00:14.629 --> 00:00:14.639 align:start position:0%
Jack tool chain to use any of these new
 

00:00:14.639 --> 00:00:16.430 align:start position:0%
Jack tool chain to use any of these new
features<00:00:14.670><c> you'll</c><00:00:15.269><c> need</c><00:00:15.330><c> to</c><00:00:15.570><c> enable</c><00:00:15.839><c> the</c><00:00:16.230><c> Jack</c>

00:00:16.430 --> 00:00:16.440 align:start position:0%
features you'll need to enable the Jack
 

00:00:16.440 --> 00:00:18.800 align:start position:0%
features you'll need to enable the Jack
tool<00:00:16.650><c> chain</c><00:00:16.920><c> all</c><00:00:17.220><c> it</c><00:00:17.910><c> takes</c><00:00:18.119><c> is</c><00:00:18.300><c> just</c><00:00:18.480><c> a</c><00:00:18.600><c> few</c>

00:00:18.800 --> 00:00:18.810 align:start position:0%
tool chain all it takes is just a few
 

00:00:18.810 --> 00:00:20.599 align:start position:0%
tool chain all it takes is just a few
lines<00:00:18.990><c> of</c><00:00:19.140><c> code</c><00:00:19.380><c> in</c><00:00:19.590><c> your</c><00:00:19.800><c> build.gradle</c><00:00:20.070><c> file</c>

00:00:20.599 --> 00:00:20.609 align:start position:0%
lines of code in your build.gradle file
 

00:00:20.609 --> 00:00:22.939 align:start position:0%
lines of code in your build.gradle file
and<00:00:20.850><c> you're</c><00:00:21.359><c> all</c><00:00:21.449><c> set</c><00:00:21.660><c> now</c><00:00:22.380><c> to</c><00:00:22.410><c> cut</c><00:00:22.800><c> that</c>

00:00:22.939 --> 00:00:22.949 align:start position:0%
and you're all set now to cut that
 

00:00:22.949 --> 00:00:25.849 align:start position:0%
and you're all set now to cut that
boilerplate<00:00:23.519><c> code</c><00:00:24.380><c> firstly</c><00:00:25.380><c> you'll</c><00:00:25.650><c> be</c><00:00:25.740><c> able</c>

00:00:25.849 --> 00:00:25.859 align:start position:0%
boilerplate code firstly you'll be able
 

00:00:25.859 --> 00:00:28.310 align:start position:0%
boilerplate code firstly you'll be able
to<00:00:26.039><c> use</c><00:00:26.160><c> lambda</c><00:00:26.730><c> expressions</c><00:00:27.269><c> a</c><00:00:27.449><c> simplified</c>

00:00:28.310 --> 00:00:28.320 align:start position:0%
to use lambda expressions a simplified
 

00:00:28.320 --> 00:00:30.650 align:start position:0%
to use lambda expressions a simplified
way<00:00:28.500><c> of</c><00:00:28.529><c> expressing</c><00:00:29.189><c> functional</c><00:00:30.150><c> interfaces</c>

00:00:30.650 --> 00:00:30.660 align:start position:0%
way of expressing functional interfaces
 

00:00:30.660 --> 00:00:33.100 align:start position:0%
way of expressing functional interfaces
interfaces<00:00:31.619><c> with</c><00:00:32.160><c> just</c><00:00:32.369><c> a</c><00:00:32.489><c> single</c><00:00:32.880><c> method</c>

00:00:33.100 --> 00:00:33.110 align:start position:0%
interfaces with just a single method
 

00:00:33.110 --> 00:00:35.840 align:start position:0%
interfaces with just a single method
this<00:00:34.110><c> allows</c><00:00:34.410><c> us</c><00:00:34.620><c> to</c><00:00:34.770><c> rewrite</c><00:00:34.980><c> our</c><00:00:35.160><c> on-click</c>

00:00:35.840 --> 00:00:35.850 align:start position:0%
this allows us to rewrite our on-click
 

00:00:35.850 --> 00:00:37.910 align:start position:0%
this allows us to rewrite our on-click
listeners<00:00:36.329><c> from</c><00:00:36.690><c> all</c><00:00:36.899><c> this</c><00:00:37.140><c> down</c><00:00:37.800><c> to</c>

00:00:37.910 --> 00:00:37.920 align:start position:0%
listeners from all this down to
 

00:00:37.920 --> 00:00:39.760 align:start position:0%
listeners from all this down to
something<00:00:38.129><c> a</c><00:00:38.280><c> little</c><00:00:38.579><c> easier</c><00:00:39.120><c> to</c><00:00:39.239><c> look</c><00:00:39.390><c> at</c>

00:00:39.760 --> 00:00:39.770 align:start position:0%
something a little easier to look at
 

00:00:39.770 --> 00:00:42.049 align:start position:0%
something a little easier to look at
you'll<00:00:40.770><c> note</c><00:00:41.010><c> that</c><00:00:41.040><c> parameter</c><00:00:41.460><c> types</c><00:00:41.820><c> are</c>

00:00:42.049 --> 00:00:42.059 align:start position:0%
you'll note that parameter types are
 

00:00:42.059 --> 00:00:44.540 align:start position:0%
you'll note that parameter types are
optional<00:00:42.629><c> here</c><00:00:43.440><c> we're</c><00:00:43.620><c> using</c><00:00:43.649><c> braces</c><00:00:44.340><c> to</c>

00:00:44.540 --> 00:00:44.550 align:start position:0%
optional here we're using braces to
 

00:00:44.550 --> 00:00:45.889 align:start position:0%
optional here we're using braces to
allow<00:00:44.730><c> you</c><00:00:44.789><c> to</c><00:00:45.000><c> have</c><00:00:45.120><c> multiple</c><00:00:45.360><c> statements</c>

00:00:45.889 --> 00:00:45.899 align:start position:0%
allow you to have multiple statements
 

00:00:45.899 --> 00:00:48.470 align:start position:0%
allow you to have multiple statements
just<00:00:46.710><c> like</c><00:00:46.860><c> a</c><00:00:46.890><c> normal</c><00:00:47.070><c> method</c><00:00:47.430><c> but</c><00:00:48.180><c> if</c><00:00:48.360><c> you</c>

00:00:48.470 --> 00:00:48.480 align:start position:0%
just like a normal method but if you
 

00:00:48.480 --> 00:00:50.119 align:start position:0%
just like a normal method but if you
only<00:00:48.600><c> have</c><00:00:48.690><c> a</c><00:00:48.780><c> single</c><00:00:48.960><c> expression</c><00:00:49.320><c> you</c><00:00:49.980><c> can</c>

00:00:50.119 --> 00:00:50.129 align:start position:0%
only have a single expression you can
 

00:00:50.129 --> 00:00:53.360 align:start position:0%
only have a single expression you can
leave<00:00:50.250><c> them</c><00:00:50.370><c> out</c><00:00:50.489><c> a</c><00:00:51.379><c> sister</c><00:00:52.379><c> feature</c><00:00:52.649><c> -</c><00:00:52.949><c> lambda</c>

00:00:53.360 --> 00:00:53.370 align:start position:0%
leave them out a sister feature - lambda
 

00:00:53.370 --> 00:00:55.729 align:start position:0%
leave them out a sister feature - lambda
expressions<00:00:53.850><c> method</c><00:00:54.840><c> references</c><00:00:55.020><c> allow</c><00:00:55.680><c> you</c>

00:00:55.729 --> 00:00:55.739 align:start position:0%
expressions method references allow you
 

00:00:55.739 --> 00:00:58.310 align:start position:0%
expressions method references allow you
to<00:00:55.980><c> use</c><00:00:56.070><c> existing</c><00:00:56.550><c> methods</c><00:00:57.210><c> as</c><00:00:57.329><c> lambda</c>

00:00:58.310 --> 00:00:58.320 align:start position:0%
to use existing methods as lambda
 

00:00:58.320 --> 00:01:00.799 align:start position:0%
to use existing methods as lambda
expressions<00:00:58.890><c> making</c><00:00:59.670><c> those</c><00:00:59.820><c> one-line</c><00:01:00.390><c> lambda</c>

00:01:00.799 --> 00:01:00.809 align:start position:0%
expressions making those one-line lambda
 

00:01:00.809 --> 00:01:04.189 align:start position:0%
expressions making those one-line lambda
expressions<00:01:01.289><c> even</c><00:01:01.949><c> shorter</c><00:01:02.629><c> the</c><00:01:03.629><c> best</c><00:01:03.930><c> part</c>

00:01:04.189 --> 00:01:04.199 align:start position:0%
expressions even shorter the best part
 

00:01:04.199 --> 00:01:05.630 align:start position:0%
expressions even shorter the best part
about<00:01:04.229><c> these</c><00:01:04.470><c> features</c><00:01:04.710><c> there</c>

00:01:05.630 --> 00:01:05.640 align:start position:0%
about these features there
 

00:01:05.640 --> 00:01:07.700 align:start position:0%
about these features there
backward-compatible<00:01:06.060><c> down</c><00:01:07.049><c> to</c><00:01:07.229><c> Gingerbread</c>

00:01:07.700 --> 00:01:07.710 align:start position:0%
backward-compatible down to Gingerbread
 

00:01:07.710 --> 00:01:09.649 align:start position:0%
backward-compatible down to Gingerbread
so<00:01:08.520><c> whether</c><00:01:08.729><c> you're</c><00:01:08.909><c> building</c><00:01:09.180><c> for</c><00:01:09.570><c> the</c>

00:01:09.649 --> 00:01:09.659 align:start position:0%
so whether you're building for the
 

00:01:09.659 --> 00:01:11.810 align:start position:0%
so whether you're building for the
latest<00:01:10.080><c> version</c><00:01:10.439><c> of</c><00:01:10.500><c> Android</c><00:01:10.830><c> or</c><00:01:11.040><c> not</c><00:01:11.189><c> you'll</c>

00:01:11.810 --> 00:01:11.820 align:start position:0%
latest version of Android or not you'll
 

00:01:11.820 --> 00:01:13.280 align:start position:0%
latest version of Android or not you'll
be<00:01:11.909><c> able</c><00:01:12.030><c> to</c><00:01:12.299><c> shave</c><00:01:12.540><c> off</c><00:01:12.720><c> some</c><00:01:12.960><c> boilerplate</c>

00:01:13.280 --> 00:01:13.290 align:start position:0%
be able to shave off some boilerplate
 

00:01:13.290 --> 00:01:16.580 align:start position:0%
be able to shave off some boilerplate
code<00:01:14.180><c> this</c><00:01:15.180><c> works</c><00:01:15.479><c> because</c><00:01:15.810><c> the</c><00:01:15.960><c> Jack</c><00:01:16.229><c> tool</c>

00:01:16.580 --> 00:01:16.590 align:start position:0%
code this works because the Jack tool
 

00:01:16.590 --> 00:01:18.200 align:start position:0%
code this works because the Jack tool
chain<00:01:16.860><c> is</c><00:01:17.070><c> able</c><00:01:17.340><c> to</c><00:01:17.460><c> implement</c><00:01:17.759><c> these</c><00:01:18.150><c> new</c>

00:01:18.200 --> 00:01:18.210 align:start position:0%
chain is able to implement these new
 

00:01:18.210 --> 00:01:21.830 align:start position:0%
chain is able to implement these new
features<00:01:18.799><c> using</c><00:01:19.799><c> anonymous</c><00:01:20.130><c> classes</c><00:01:20.729><c> just</c><00:01:21.630><c> as</c>

00:01:21.830 --> 00:01:21.840 align:start position:0%
features using anonymous classes just as
 

00:01:21.840 --> 00:01:23.390 align:start position:0%
features using anonymous classes just as
if<00:01:21.990><c> you</c><00:01:22.170><c> had</c><00:01:22.290><c> written</c><00:01:22.439><c> the</c><00:01:22.680><c> old</c><00:01:22.890><c> version</c><00:01:23.340><c> of</c>

00:01:23.390 --> 00:01:23.400 align:start position:0%
if you had written the old version of
 

00:01:23.400 --> 00:01:26.510 align:start position:0%
if you had written the old version of
the<00:01:23.460><c> code</c><00:01:23.549><c> yourself</c><00:01:24.619><c> that</c><00:01:25.619><c> also</c><00:01:25.890><c> means</c><00:01:26.430><c> you</c>

00:01:26.510 --> 00:01:26.520 align:start position:0%
the code yourself that also means you
 

00:01:26.520 --> 00:01:28.130 align:start position:0%
the code yourself that also means you
shouldn't<00:01:26.820><c> go</c><00:01:26.939><c> overboard</c><00:01:27.330><c> with</c><00:01:27.630><c> using</c><00:01:28.020><c> them</c>

00:01:28.130 --> 00:01:28.140 align:start position:0%
shouldn't go overboard with using them
 

00:01:28.140 --> 00:01:30.200 align:start position:0%
shouldn't go overboard with using them
in<00:01:28.259><c> tight</c><00:01:28.470><c> loops</c><00:01:28.740><c> or</c><00:01:29.009><c> anything</c><00:01:29.189><c> they're</c><00:01:29.909><c> still</c>

00:01:30.200 --> 00:01:30.210 align:start position:0%
in tight loops or anything they're still
 

00:01:30.210 --> 00:01:33.740 align:start position:0%
in tight loops or anything they're still
relatively<00:01:30.960><c> expensive</c><00:01:32.210><c> however</c><00:01:33.210><c> if</c><00:01:33.420><c> you</c><00:01:33.600><c> are</c>

00:01:33.740 --> 00:01:33.750 align:start position:0%
relatively expensive however if you are
 

00:01:33.750 --> 00:01:37.039 align:start position:0%
relatively expensive however if you are
min<00:01:34.439><c> SDK</c><00:01:34.619><c> version</c><00:01:35.400><c> 24</c><00:01:36.090><c> you've</c><00:01:36.630><c> entered</c><00:01:36.960><c> a</c>

00:01:37.039 --> 00:01:37.049 align:start position:0%
min SDK version 24 you've entered a
 

00:01:37.049 --> 00:01:39.560 align:start position:0%
min SDK version 24 you've entered a
magical<00:01:37.680><c> land</c><00:01:37.890><c> you</c><00:01:38.490><c> can</c><00:01:38.670><c> take</c><00:01:38.850><c> advantage</c><00:01:39.270><c> of</c><00:01:39.450><c> a</c>

00:01:39.560 --> 00:01:39.570 align:start position:0%
magical land you can take advantage of a
 

00:01:39.570 --> 00:01:42.380 align:start position:0%
magical land you can take advantage of a
number<00:01:39.930><c> of</c><00:01:40.049><c> additional</c><00:01:40.619><c> features</c><00:01:41.390><c> for</c>

00:01:42.380 --> 00:01:42.390 align:start position:0%
number of additional features for
 

00:01:42.390 --> 00:01:44.749 align:start position:0%
number of additional features for
example<00:01:42.420><c> lambda</c><00:01:43.259><c> expressions</c><00:01:43.950><c> go</c><00:01:44.189><c> perfectly</c>

00:01:44.749 --> 00:01:44.759 align:start position:0%
example lambda expressions go perfectly
 

00:01:44.759 --> 00:01:47.569 align:start position:0%
example lambda expressions go perfectly
with<00:01:45.060><c> the</c><00:01:45.210><c> stream</c><00:01:45.689><c> api's</c><00:01:46.320><c> which</c><00:01:47.159><c> allow</c><00:01:47.369><c> you</c><00:01:47.430><c> to</c>

00:01:47.569 --> 00:01:47.579 align:start position:0%
with the stream api's which allow you to
 

00:01:47.579 --> 00:01:49.969 align:start position:0%
with the stream api's which allow you to
chain<00:01:48.000><c> together</c><00:01:48.270><c> multiple</c><00:01:48.780><c> operations</c><00:01:49.680><c> such</c>

00:01:49.969 --> 00:01:49.979 align:start position:0%
chain together multiple operations such
 

00:01:49.979 --> 00:01:52.550 align:start position:0%
chain together multiple operations such
as<00:01:50.009><c> filtering</c><00:01:50.759><c> mapping</c><00:01:51.630><c> or</c><00:01:51.869><c> converting</c><00:01:52.439><c> into</c>

00:01:52.550 --> 00:01:52.560 align:start position:0%
as filtering mapping or converting into
 

00:01:52.560 --> 00:01:54.410 align:start position:0%
as filtering mapping or converting into
different<00:01:52.920><c> types</c><00:01:53.159><c> before</c><00:01:53.729><c> applying</c><00:01:54.210><c> a</c>

00:01:54.410 --> 00:01:54.420 align:start position:0%
different types before applying a
 

00:01:54.420 --> 00:01:57.319 align:start position:0%
different types before applying a
terminating<00:01:55.079><c> method</c><00:01:55.439><c> such</c><00:01:56.130><c> as</c><00:01:56.159><c> sum</c><00:01:56.850><c> for</c><00:01:57.299><c> a</c>

00:01:57.319 --> 00:01:57.329 align:start position:0%
terminating method such as sum for a
 

00:01:57.329 --> 00:01:59.959 align:start position:0%
terminating method such as sum for a
stream<00:01:57.630><c> events</c><00:01:58.049><c> or</c><00:01:58.500><c> for</c><00:01:58.890><c> each</c><00:01:59.040><c> for</c><00:01:59.490><c> applying</c><00:01:59.820><c> a</c>

00:01:59.959 --> 00:01:59.969 align:start position:0%
stream events or for each for applying a
 

00:01:59.969 --> 00:02:01.789 align:start position:0%
stream events or for each for applying a
lambda<00:02:00.210><c> expression</c><00:02:00.420><c> to</c><00:02:00.930><c> every</c><00:02:01.380><c> remaining</c>

00:02:01.789 --> 00:02:01.799 align:start position:0%
lambda expression to every remaining
 

00:02:01.799 --> 00:02:04.700 align:start position:0%
lambda expression to every remaining
item<00:02:02.040><c> oh</c><00:02:02.450><c> and</c><00:02:03.450><c> it</c><00:02:03.960><c> supports</c><00:02:04.350><c> running</c><00:02:04.619><c> in</c>

00:02:04.700 --> 00:02:04.710 align:start position:0%
item oh and it supports running in
 

00:02:04.710 --> 00:02:07.490 align:start position:0%
item oh and it supports running in
parallel<00:02:04.829><c> out</c><00:02:05.070><c> of</c><00:02:05.490><c> the</c><00:02:05.549><c> box</c><00:02:06.020><c> crazy</c><00:02:07.020><c> powerful</c>

00:02:07.490 --> 00:02:07.500 align:start position:0%
parallel out of the box crazy powerful
 

00:02:07.500 --> 00:02:09.710 align:start position:0%
parallel out of the box crazy powerful
stuff<00:02:07.860><c> and</c><00:02:08.399><c> I'd</c><00:02:08.520><c> encourage</c><00:02:08.910><c> you</c><00:02:09.149><c> to</c><00:02:09.239><c> check</c><00:02:09.509><c> out</c>

00:02:09.710 --> 00:02:09.720 align:start position:0%
stuff and I'd encourage you to check out
 

00:02:09.720 --> 00:02:12.229 align:start position:0%
stuff and I'd encourage you to check out
the<00:02:09.899><c> docs</c><00:02:10.110><c> for</c><00:02:10.410><c> all</c><00:02:10.890><c> the</c><00:02:11.129><c> details</c><00:02:11.520><c> as</c><00:02:11.670><c> there's</c>

00:02:12.229 --> 00:02:12.239 align:start position:0%
the docs for all the details as there's
 

00:02:12.239 --> 00:02:13.539 align:start position:0%
the docs for all the details as there's
a<00:02:12.300><c> lot</c><00:02:12.480><c> of</c><00:02:12.629><c> them</c>

00:02:13.539 --> 00:02:13.549 align:start position:0%
a lot of them
 

00:02:13.549 --> 00:02:15.860 align:start position:0%
a lot of them
interfaces<00:02:14.549><c> also</c><00:02:14.730><c> got</c><00:02:15.180><c> an</c><00:02:15.299><c> upgrade</c><00:02:15.599><c> with</c><00:02:15.840><c> the</c>

00:02:15.860 --> 00:02:15.870 align:start position:0%
interfaces also got an upgrade with the
 

00:02:15.870 --> 00:02:17.530 align:start position:0%
interfaces also got an upgrade with the
ability<00:02:16.290><c> to</c><00:02:16.319><c> add</c><00:02:16.439><c> default</c><00:02:17.250><c> method</c>

00:02:17.530 --> 00:02:17.540 align:start position:0%
ability to add default method
 

00:02:17.540 --> 00:02:20.660 align:start position:0%
ability to add default method
implementations<00:02:18.540><c> and</c><00:02:18.689><c> static</c><00:02:19.560><c> methods</c><00:02:19.980><c> this</c>

00:02:20.660 --> 00:02:20.670 align:start position:0%
implementations and static methods this
 

00:02:20.670 --> 00:02:23.030 align:start position:0%
implementations and static methods this
makes<00:02:20.939><c> it</c><00:02:21.090><c> easy</c><00:02:21.359><c> to</c><00:02:21.569><c> add</c><00:02:21.780><c> new</c><00:02:21.810><c> methods</c><00:02:22.620><c> to</c><00:02:22.829><c> an</c>

00:02:23.030 --> 00:02:23.040 align:start position:0%
makes it easy to add new methods to an
 

00:02:23.040 --> 00:02:25.789 align:start position:0%
makes it easy to add new methods to an
interface<00:02:23.280><c> without</c><00:02:24.269><c> having</c><00:02:24.780><c> to</c><00:02:24.900><c> update</c><00:02:25.200><c> every</c>

00:02:25.789 --> 00:02:25.799 align:start position:0%
interface without having to update every
 

00:02:25.799 --> 00:02:27.580 align:start position:0%
interface without having to update every
implementation<00:02:26.609><c> of</c><00:02:26.700><c> the</c><00:02:26.819><c> interface</c><00:02:27.209><c> and</c>

00:02:27.580 --> 00:02:27.590 align:start position:0%
implementation of the interface and
 

00:02:27.590 --> 00:02:30.229 align:start position:0%
implementation of the interface and
allows<00:02:28.590><c> you</c><00:02:28.739><c> to</c><00:02:28.769><c> play</c><00:02:28.950><c> static</c><00:02:29.579><c> helper</c><00:02:29.879><c> methods</c>

00:02:30.229 --> 00:02:30.239 align:start position:0%
allows you to play static helper methods
 

00:02:30.239 --> 00:02:32.660 align:start position:0%
allows you to play static helper methods
related<00:02:30.720><c> to</c><00:02:31.019><c> an</c><00:02:31.109><c> interface</c><00:02:31.319><c> in</c><00:02:31.650><c> the</c><00:02:32.280><c> interface</c>

00:02:32.660 --> 00:02:32.670 align:start position:0%
related to an interface in the interface
 

00:02:32.670 --> 00:02:35.569 align:start position:0%
related to an interface in the interface
itself<00:02:33.209><c> and</c><00:02:34.129><c> if</c><00:02:35.129><c> you're</c><00:02:35.280><c> a</c><00:02:35.310><c> fan</c><00:02:35.549><c> of</c>

00:02:35.569 --> 00:02:35.579 align:start position:0%
itself and if you're a fan of
 

00:02:35.579 --> 00:02:37.429 align:start position:0%
itself and if you're a fan of
annotations<00:02:36.209><c> and</c><00:02:36.450><c> I</c><00:02:36.750><c> know</c><00:02:36.810><c> some</c><00:02:37.109><c> of</c><00:02:37.140><c> you</c><00:02:37.409><c> are</c>

00:02:37.429 --> 00:02:37.439 align:start position:0%
annotations and I know some of you are
 

00:02:37.439 --> 00:02:39.379 align:start position:0%
annotations and I know some of you are
you'll<00:02:38.310><c> be</c><00:02:38.459><c> able</c><00:02:38.549><c> to</c><00:02:38.730><c> take</c><00:02:38.909><c> advantage</c><00:02:39.030><c> of</c>

00:02:39.379 --> 00:02:39.389 align:start position:0%
you'll be able to take advantage of
 

00:02:39.389 --> 00:02:41.449 align:start position:0%
you'll be able to take advantage of
repeating<00:02:40.019><c> annotations</c><00:02:40.680><c> to</c><00:02:40.980><c> add</c><00:02:41.069><c> the</c><00:02:41.220><c> same</c>

00:02:41.449 --> 00:02:41.459 align:start position:0%
repeating annotations to add the same
 

00:02:41.459 --> 00:02:44.569 align:start position:0%
repeating annotations to add the same
annotation<00:02:42.180><c> more</c><00:02:42.629><c> than</c><00:02:42.870><c> once</c><00:02:43.579><c> particularly</c>

00:02:44.569 --> 00:02:44.579 align:start position:0%
annotation more than once particularly
 

00:02:44.579 --> 00:02:46.009 align:start position:0%
annotation more than once particularly
useful<00:02:44.730><c> if</c><00:02:45.120><c> you</c><00:02:45.209><c> have</c><00:02:45.239><c> an</c><00:02:45.389><c> annotation</c><00:02:45.689><c> that</c>

00:02:46.009 --> 00:02:46.019 align:start position:0%
useful if you have an annotation that
 

00:02:46.019 --> 00:02:50.179 align:start position:0%
useful if you have an annotation that
accepts<00:02:46.560><c> different</c><00:02:47.069><c> type</c><00:02:47.280><c> elements</c><00:02:48.409><c> so</c><00:02:49.409><c> lots</c>

00:02:50.179 --> 00:02:50.189 align:start position:0%
accepts different type elements so lots
 

00:02:50.189 --> 00:02:51.800 align:start position:0%
accepts different type elements so lots
of<00:02:50.370><c> great</c><00:02:50.579><c> new</c><00:02:50.609><c> features</c><00:02:51.090><c> both</c><00:02:51.510><c> in</c><00:02:51.689><c> the</c>

00:02:51.800 --> 00:02:51.810 align:start position:0%
of great new features both in the
 

00:02:51.810 --> 00:02:53.960 align:start position:0%
of great new features both in the
backward<00:02:52.169><c> metal</c><00:02:52.620><c> and</c><00:02:52.769><c> non</c><00:02:53.189><c> dock</c><00:02:53.430><c> work</c><00:02:53.609><c> memo</c>

00:02:53.960 --> 00:02:53.970 align:start position:0%
backward metal and non dock work memo
 

00:02:53.970 --> 00:02:56.420 align:start position:0%
backward metal and non dock work memo
nature<00:02:54.209><c> new</c><00:02:54.959><c> tools</c><00:02:55.260><c> to</c><00:02:55.409><c> help</c><00:02:55.530><c> you</c><00:02:55.919><c> build</c>

00:02:56.420 --> 00:02:56.430 align:start position:0%
nature new tools to help you build
 

00:02:56.430 --> 00:03:02.930 align:start position:0%
nature new tools to help you build
better<00:02:56.700><c> apps</c>

00:03:02.930 --> 00:03:02.940 align:start position:0%
 
 

00:03:02.940 --> 00:03:05.000 align:start position:0%
 
you

