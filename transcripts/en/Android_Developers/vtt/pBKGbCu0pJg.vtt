WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:05:08.210
[MUSIC PLAYING]

00:05:08.210 --> 00:05:10.620
ROMAN NURIK: Hello, and welcome
once again, yet again,

00:05:10.620 --> 00:05:13.150
to Android Design in Action.

00:05:13.150 --> 00:05:14.400
As always, I'm Roman Nurik.

00:05:14.400 --> 00:05:14.725
ADAM KOCH: Hi guys.

00:05:14.725 --> 00:05:16.080
My name's Adam Koch.

00:05:16.080 --> 00:05:18.970
NICK BUTCHER: And hi, my
name's Nick Butcher.

00:05:18.970 --> 00:05:20.640
ROMAN NURIK: And Nick is joining
us from Mountain View

00:05:20.640 --> 00:05:25.160
today, not rainy London, since
he's actually visiting the

00:05:25.160 --> 00:05:26.720
core Android Developer
Relations team

00:05:26.720 --> 00:05:27.912
out in Mountain View.

00:05:27.912 --> 00:05:30.050
Nick, how is Mountain View?

00:05:30.050 --> 00:05:31.580
NICK BUTCHER: I'm in San
Francisco right now, so you've

00:05:31.580 --> 00:05:32.862
got a nice view of
my hotel bedroom.

00:05:32.862 --> 00:05:35.222
Because it's 7:00 AM here.

00:05:35.222 --> 00:05:35.700
ROMAN NURIK: Nice.

00:05:35.700 --> 00:05:38.260
Well, thanks for joining so
early in the morning, Nick.

00:05:38.260 --> 00:05:41.710
So today's episode of Android
Design in Action, we're going

00:05:41.710 --> 00:05:42.850
to talk about news readers.

00:05:42.850 --> 00:05:45.840
We're not going to look at any
specific apps since we're

00:05:45.840 --> 00:05:49.700
still figuring out how we
approach nominations for apps

00:05:49.700 --> 00:05:53.050
that want to get
some redesigns.

00:05:53.050 --> 00:05:56.990
We'll be talking about kind of
hypothetical stuff for news

00:05:56.990 --> 00:05:59.030
readers, and then we'll jump
into units of measures--

00:05:59.030 --> 00:06:01.740
specifically,
density-independent pixels as

00:06:01.740 --> 00:06:04.640
well as some layout grids and
pixel grids and all sorts of

00:06:04.640 --> 00:06:06.880
fun stuff like that.

00:06:06.880 --> 00:06:08.640
With that, shall
we get started?

00:06:08.640 --> 00:06:09.490
ADAM KOCH: Let's do it.

00:06:09.490 --> 00:06:10.060
ROMAN NURIK: All right.

00:06:10.060 --> 00:06:13.280
So let's talk about
news readers.

00:06:13.280 --> 00:06:16.220
So previously on Android Design
in Action, I think a

00:06:16.220 --> 00:06:21.660
few months ago, maybe in
January, actually, we did an

00:06:21.660 --> 00:06:23.030
episode on iterative
improvements.

00:06:23.030 --> 00:06:27.050
Basically starting from a very
bare bones news reader type

00:06:27.050 --> 00:06:32.640
app that basically had a list
very bacon-y articles and a

00:06:32.640 --> 00:06:35.260
details section that let you
kind of view the details or

00:06:35.260 --> 00:06:37.110
read that article.

00:06:37.110 --> 00:06:40.720
And we figured, why not just
kind of use that as a starting

00:06:40.720 --> 00:06:44.460
point and see how we can
improve on the reading

00:06:44.460 --> 00:06:46.600
experience from there?

00:06:46.600 --> 00:06:50.233
So here are some slides from
the last episode of Android

00:06:50.233 --> 00:06:52.760
Design in Action.

00:06:52.760 --> 00:06:57.540
And you can see that you have
this list of articles on the

00:06:57.540 --> 00:07:00.130
left, your news items.

00:07:00.130 --> 00:07:01.970
And then on a tablet, of
course, you have this

00:07:01.970 --> 00:07:04.560
multipane UI, where you have
the list of articles on the

00:07:04.560 --> 00:07:06.100
left and then your details
on the right.

00:07:06.100 --> 00:07:09.580
And then on a phone, you
just have your details.

00:07:09.580 --> 00:07:12.790
Usually a photo, a title, and
then obviously the meat of the

00:07:12.790 --> 00:07:15.200
article, which is a
big block of text.

00:07:15.200 --> 00:07:16.040
NICK BUTCHER: [LAUGHS]

00:07:16.040 --> 00:07:17.168
Meat of the article.

00:07:17.168 --> 00:07:18.512
Was that a joke?

00:07:18.512 --> 00:07:18.960
ROMAN NURIK: What?

00:07:18.960 --> 00:07:19.540
ADAM KOCH: Boom-boom, chhh.

00:07:19.540 --> 00:07:21.140
ROMAN NURIK: Oh, the meat
of the-- oh, right.

00:07:21.140 --> 00:07:21.980
ADAM KOCH: Didn't
even realize it.

00:07:21.980 --> 00:07:24.085
ROMAN NURIK: I said and pun and
didn't even realize it.

00:07:24.085 --> 00:07:25.437
But yes.

00:07:25.437 --> 00:07:27.200
NICK BUTCHER: Sorry.

00:07:27.200 --> 00:07:28.400
ROMAN NURIK: Exactly.

00:07:28.400 --> 00:07:31.450
And then we also did some
alternatives where, let's see,

00:07:31.450 --> 00:07:33.520
we really want to focus
on the photos.

00:07:33.520 --> 00:07:35.140
Here are some things
you can do.

00:07:35.140 --> 00:07:38.530
You can make the photo kind of
full bleed and let the article

00:07:38.530 --> 00:07:41.850
the text be an overlay
on top of that.

00:07:41.850 --> 00:07:43.550
And there are a couple things
that we talked about,

00:07:43.550 --> 00:07:48.170
including background protection
with dark gradients

00:07:48.170 --> 00:07:49.580
and things of that nature.

00:07:49.580 --> 00:07:53.630
So these are just two of the
presentations that we threw

00:07:53.630 --> 00:07:55.710
together for detailed.

00:07:55.710 --> 00:08:00.400
So today I wanted to talk
about alternative

00:08:00.400 --> 00:08:05.120
presentations of these things,
as well as enhancements, I

00:08:05.120 --> 00:08:07.350
guess further iterative
improvements on this

00:08:07.350 --> 00:08:11.610
experience that can really make
news reading a pleasure.

00:08:11.610 --> 00:08:13.360
So let's jump into
some of those.

00:08:13.360 --> 00:08:14.750
The first is--

00:08:14.750 --> 00:08:17.180
and this is actually kind
of a power user feature.

00:08:17.180 --> 00:08:18.580
We probably should've
saved this for last.

00:08:18.580 --> 00:08:26.740
But back with Android 4.1, we
provided this new feature

00:08:26.740 --> 00:08:28.530
called expanded notifications.

00:08:28.530 --> 00:08:31.400
So you have your collapsed
notifications, and then with a

00:08:31.400 --> 00:08:35.299
two-finger gesture, you pull
down to expand a notification

00:08:35.299 --> 00:08:36.679
to see more details.

00:08:36.679 --> 00:08:38.710
With recent versions of Android,
you can actually just

00:08:38.710 --> 00:08:42.700
use a single finger to swipe
down if there aren't that many

00:08:42.700 --> 00:08:44.640
notifications on the list.

00:08:44.640 --> 00:08:47.690
So one of the things that they
were thinking about is as

00:08:47.690 --> 00:08:50.200
you're browsing a set of
stories, as you're browsing

00:08:50.200 --> 00:08:53.900
this list, oftentimes you want
to get a little more.

00:08:53.900 --> 00:08:56.950
You don't want to necessarily
read the entire article or see

00:08:56.950 --> 00:08:57.550
everything.

00:08:57.550 --> 00:09:00.060
You just want to get a slightly
larger preview.

00:09:00.060 --> 00:09:02.720
So there are a couple of ways
of doing that, if that's of

00:09:02.720 --> 00:09:04.830
interest to you in your
news reader app.

00:09:04.830 --> 00:09:08.680
Obviously, you could have a
button within that list item,

00:09:08.680 --> 00:09:10.720
like a preview button.

00:09:10.720 --> 00:09:13.760
You could potentially have
a long-press preview, or

00:09:13.760 --> 00:09:15.920
long-press to show a contextual
action bar, and

00:09:15.920 --> 00:09:16.900
then you could have
a preview there.

00:09:16.900 --> 00:09:20.180
But we thought, this is maybe
a power user thing.

00:09:20.180 --> 00:09:22.970
Once you discover it, you start
using it a little more.

00:09:22.970 --> 00:09:25.410
So why not use a power
user gesture?

00:09:25.410 --> 00:09:27.860
So one way of doing this is,
let's say you use your two

00:09:27.860 --> 00:09:32.940
fingers to swipe down
on an article.

00:09:32.940 --> 00:09:34.130
You'd swipe down and then you'd

00:09:34.130 --> 00:09:35.930
start seeing the preview.

00:09:35.930 --> 00:09:37.430
So in this case, it's a video.

00:09:37.430 --> 00:09:41.060
The video maybe even starts
playing inline automatically.

00:09:41.060 --> 00:09:43.270
And this is something that you
can definitely do as of

00:09:43.270 --> 00:09:44.030
Android 4.0.

00:09:44.030 --> 00:09:45.815
Or actually even Android 3.0.

00:09:45.815 --> 00:09:47.970
Actually, no, it's 4.0 point out
that we had this thing--

00:09:47.970 --> 00:09:49.590
NICK BUTCHER: TextureView's
4.0, yeah.

00:09:49.590 --> 00:09:53.820
ROMAN NURIK: TextureView, that
lets you basically play video

00:09:53.820 --> 00:09:58.740
or do lots of interesting things
inside of a graphical

00:09:58.740 --> 00:10:03.380
object that's composed with
the rest of your window.

00:10:03.380 --> 00:10:05.020
But the idea is that you
can do cool things

00:10:05.020 --> 00:10:06.200
like play video inline.

00:10:06.200 --> 00:10:08.510
You could apply animations
transitions to video.

00:10:08.510 --> 00:10:11.540
But here's one example of where
you could take video and

00:10:11.540 --> 00:10:12.920
make it inline.

00:10:12.920 --> 00:10:17.620
Alternatively, if you just have
text or a photo, as you

00:10:17.620 --> 00:10:20.270
swipe down to expand, you could

00:10:20.270 --> 00:10:21.800
show the text, obviously.

00:10:21.800 --> 00:10:24.100
You could show a photo, maybe
even horizontally swipeable,

00:10:24.100 --> 00:10:26.510
unless you have another
competing gesture for

00:10:26.510 --> 00:10:28.110
horizontal swipe.

00:10:28.110 --> 00:10:32.530
But it's just the idea that
sometimes a simple little

00:10:32.530 --> 00:10:36.180
title that's probably ellipsized
is just not enough.

00:10:36.180 --> 00:10:41.080
So this is one way of
alleviating that.

00:10:41.080 --> 00:10:42.280
NICK BUTCHER: It's a really
fun power gesture.

00:10:42.280 --> 00:10:43.660
I like the use of it in
the list context.

00:10:43.660 --> 00:10:47.260
Because as you say, horizontal
swipe is competing for a lot

00:10:47.260 --> 00:10:48.800
of different gestures that
are going on in the

00:10:48.800 --> 00:10:49.500
space at the moment.

00:10:49.500 --> 00:10:53.380
So this is a very nice way to
act on a single list item.

00:10:53.380 --> 00:10:54.520
ADAM KOCH: It's really
good for power users.

00:10:54.520 --> 00:10:57.300
But then for users that want to
browse normally, it doesn't

00:10:57.300 --> 00:10:58.430
interfere with that
flow either.

00:10:58.430 --> 00:11:00.260
They can just tap and move
into the article as well.

00:11:00.260 --> 00:11:02.120
ROMAN NURIK: Right, it's not
like the only way of exposing

00:11:02.120 --> 00:11:02.640
the content.

00:11:02.640 --> 00:11:06.620
You can actually just touch
to get to the content.

00:11:06.620 --> 00:11:08.540
That's the primary gesture
involved there.

00:11:08.540 --> 00:11:11.190
But for the power users that
discover it, it's maybe an

00:11:11.190 --> 00:11:12.530
additional nice thing.

00:11:12.530 --> 00:11:13.920
NICK BUTCHER: It probably
bootstraps on the rich

00:11:13.920 --> 00:11:15.540
notification as well, right?

00:11:15.540 --> 00:11:17.500
You're probably going to show a
similar amount of content as

00:11:17.500 --> 00:11:19.980
you might be preparing already
and laying out for a rich

00:11:19.980 --> 00:11:20.720
notification.

00:11:20.720 --> 00:11:22.910
And then it builds on that same
gesture, so you kind of

00:11:22.910 --> 00:11:25.590
bootstrap the interaction,
which is cool.

00:11:25.590 --> 00:11:27.910
ROMAN NURIK: As an additional
thing, maybe to kind of hint

00:11:27.910 --> 00:11:29.610
at the gesture-- and this is
something we talked about a

00:11:29.610 --> 00:11:31.920
while ago, with swipe
to dismiss.

00:11:31.920 --> 00:11:37.750
With swipe to dismiss, it's not
necessarily a very, very

00:11:37.750 --> 00:11:39.250
discoverable gesture
on its own.

00:11:39.250 --> 00:11:42.870
But let's say you also provide
the ability to long press on

00:11:42.870 --> 00:11:45.380
an object and then press the
Delete Item in the contextual

00:11:45.380 --> 00:11:47.370
action bar, and it
slides away.

00:11:47.370 --> 00:11:50.240
That hints subtly that hey, I
can do that same thing with my

00:11:50.240 --> 00:11:53.815
finger, not necessarily just
always use the Delete action

00:11:53.815 --> 00:11:54.970
in the contextual action bar.

00:11:54.970 --> 00:11:58.140
But I can actually try this with
my finger, and it works.

00:11:58.140 --> 00:12:00.940
So in this case, what you could
do is as these list

00:12:00.940 --> 00:12:03.640
items populate, you could
animate them in.

00:12:03.640 --> 00:12:06.550
So start with a larger size
and then as they fall into

00:12:06.550 --> 00:12:10.640
place, they shrink into the
collapsed size, just to hint

00:12:10.640 --> 00:12:13.150
that there's actually more under
each list item and that

00:12:13.150 --> 00:12:15.626
you can get to it with your
two-finger swipe.

00:12:15.626 --> 00:12:17.380
But lots of different things
you can do here.

00:12:17.380 --> 00:12:19.660
The basic point is
make the news

00:12:19.660 --> 00:12:21.010
browsing experience great.

00:12:21.010 --> 00:12:23.320
Not only the news reading
experience, but the news

00:12:23.320 --> 00:12:24.570
browsing experience.

00:12:26.700 --> 00:12:31.600
Along the same lines, consider
alternative presentations for

00:12:31.600 --> 00:12:32.730
your collection.

00:12:32.730 --> 00:12:34.740
So when you present a
list of articles--

00:12:34.740 --> 00:12:36.565
or, I guess, a collection of
articles, since it's not

00:12:36.565 --> 00:12:39.050
always a list--

00:12:39.050 --> 00:12:42.410
consider ways to make that
a richer experience.

00:12:42.410 --> 00:12:45.380
So one of the things that we
looked at in the past is

00:12:45.380 --> 00:12:49.170
Pocket, which switches--

00:12:49.170 --> 00:12:50.730
on a phone, it's a list.

00:12:50.730 --> 00:12:52.260
On a 7-inch tablet,
it's a grid.

00:12:52.260 --> 00:12:54.490
On a 10-inch tablet, it's kind
of like a staggered grid,

00:12:54.490 --> 00:12:59.810
where a single cell can
take multiple columns.

00:12:59.810 --> 00:13:02.490
In that same vein, how can you
make this a little more rich?

00:13:02.490 --> 00:13:05.370
So one of the alternatives,
obviously, is to make this

00:13:05.370 --> 00:13:09.230
full bleed, or almost full
bleed photos and

00:13:09.230 --> 00:13:10.570
just the text on top.

00:13:10.570 --> 00:13:13.480
And in cases where you don't
have a photo, you could use a

00:13:13.480 --> 00:13:15.430
standard background like that.

00:13:15.430 --> 00:13:20.920
This works really well for very,
very graphically rich

00:13:20.920 --> 00:13:22.580
news content pieces.

00:13:22.580 --> 00:13:24.150
It doesn't really work
so well for text.

00:13:24.150 --> 00:13:27.150
But certainly, if you have lots
of photos or videos, this

00:13:27.150 --> 00:13:28.940
is a good way of
presenting it.

00:13:28.940 --> 00:13:32.360
NICK BUTCHER: Yeah one of our
core design principles is that

00:13:32.360 --> 00:13:33.650
pictures are faster
than words.

00:13:33.650 --> 00:13:35.560
And this is an excellent
demonstration of it.

00:13:35.560 --> 00:13:37.910
If you have the imagery,
then shout about it.

00:13:37.910 --> 00:13:39.600
Make it as big as you can.

00:13:39.600 --> 00:13:40.730
ADAM KOCH: Yeah, it's definitely
frustrating when a

00:13:40.730 --> 00:13:44.750
news app has really great
imagery, and they even use

00:13:44.750 --> 00:13:47.440
this list view one, and they
have tiny little images there.

00:13:47.440 --> 00:13:50.070
So both of these presentations
look really nice.

00:13:50.070 --> 00:13:50.390
ROMAN NURIK: Yeah.

00:13:50.390 --> 00:13:52.050
Tiny photos is definitely
a pet peeve,

00:13:52.050 --> 00:13:53.460
especially on a tablet.

00:13:53.460 --> 00:13:54.900
It's such a beautiful screen.

00:13:54.900 --> 00:13:56.550
Like a Nexus 10, it's such
a beautiful screen.

00:13:56.550 --> 00:13:59.490
And not using it to show photos
if you have really

00:13:59.490 --> 00:14:03.420
high-res photos is kind of
a missed opportunity.

00:14:03.420 --> 00:14:05.340
NICK BUTCHER: On a side note
to this as it relates to

00:14:05.340 --> 00:14:08.040
pattern as well.

00:14:08.040 --> 00:14:10.230
One of the things I really like
for using this pattern is

00:14:10.230 --> 00:14:12.710
the use of a zoom-up animation
if you click on one of the

00:14:12.710 --> 00:14:13.960
tiles through a tag context.

00:14:13.960 --> 00:14:16.430
Android makes it really easy to
click on of those squares,

00:14:16.430 --> 00:14:17.400
and it zooms up.

00:14:17.400 --> 00:14:19.680
So the picture becomes
the whole screen.

00:14:19.680 --> 00:14:20.790
And that's super-simple
to build.

00:14:20.790 --> 00:14:22.960
It's like two lines of code,
called Activity Options.

00:14:22.960 --> 00:14:24.580
And it really will change
your context.

00:14:24.580 --> 00:14:26.790
You really have that link
between where you came from

00:14:26.790 --> 00:14:28.200
and where you're going to.

00:14:28.200 --> 00:14:30.190
ADAM KOCH: That's
a good point.

00:14:30.190 --> 00:14:32.230
ROMAN NURIK: OK, moving on.

00:14:32.230 --> 00:14:37.620
The next thing we wanted to talk
about was the very much

00:14:37.620 --> 00:14:41.590
commented or buzzed about
navigation drawer pattern.

00:14:41.590 --> 00:14:45.940
So what you could do is, let's
say you have an app that has

00:14:45.940 --> 00:14:46.680
lots of hierarchy.

00:14:46.680 --> 00:14:48.780
What you could do is you
could have a spinner.

00:14:48.780 --> 00:14:51.530
You could have a drill-down
list navigation where

00:14:51.530 --> 00:14:55.870
basically, when you first get to
the app, you have a list of

00:14:55.870 --> 00:14:56.185
categories.

00:14:56.185 --> 00:14:58.080
And then you touch the category
to get into the

00:14:58.080 --> 00:14:59.930
details of that, to see all the

00:14:59.930 --> 00:15:01.710
articles within that category.

00:15:01.710 --> 00:15:05.530
But what we've been using in
some of our apps recently--

00:15:05.530 --> 00:15:07.250
and I'm sure all of you
out there now--

00:15:07.250 --> 00:15:10.632
is this new pattern that we're
calling the navigation drawer.

00:15:10.632 --> 00:15:13.350
So the navigation drawer is
basically this thing that kind

00:15:13.350 --> 00:15:14.490
of slides out from the left.

00:15:14.490 --> 00:15:18.350
It's also called the sliding
menu or the fly-in menu.

00:15:18.350 --> 00:15:20.810
And it can work really
well where you have

00:15:20.810 --> 00:15:23.135
lots of sibling sections.

00:15:23.135 --> 00:15:25.600
It's really primarily
for navigation.

00:15:25.600 --> 00:15:28.180
It'll work really well when
you have lots of adjacent

00:15:28.180 --> 00:15:32.200
sections that don't really work
well as tabs, and maybe

00:15:32.200 --> 00:15:36.130
they're too heavyweight
for a spinner.

00:15:36.130 --> 00:15:37.620
And the other nice thing
about the navigation--

00:15:37.620 --> 00:15:38.500
NICK BUTCHER: Or it gets to
be too many, I think.

00:15:38.500 --> 00:15:38.620
ROMAN NURIK: Sorry.

00:15:38.620 --> 00:15:39.230
Go ahead, Nick.

00:15:39.230 --> 00:15:40.130
NICK BUTCHER: Oh, sorry.

00:15:40.130 --> 00:15:41.450
It's simply too many, as well.

00:15:41.450 --> 00:15:44.320
I think a spinner, you start
maxing out at five, six, seven

00:15:44.320 --> 00:15:46.470
items, right?

00:15:46.470 --> 00:15:48.980
ROMAN NURIK: So one of the
things that we were thinking

00:15:48.980 --> 00:15:51.540
about, and this is something
that comes up frequently, is

00:15:51.540 --> 00:15:53.190
what if I have a really,
really deep,

00:15:53.190 --> 00:15:54.630
heavy hierarchy, right?

00:15:54.630 --> 00:15:57.720
So I have 10 or 20 top-level
sections.

00:15:57.720 --> 00:16:00.360
And then within each
section, I have 10

00:16:00.360 --> 00:16:01.680
subsections or something.

00:16:01.680 --> 00:16:03.510
And if you're a news
organization, you

00:16:03.510 --> 00:16:04.310
probably have this.

00:16:04.310 --> 00:16:04.820
You probably have a--

00:16:04.820 --> 00:16:07.070
ADAM KOCH: It's pretty common
across most news apps, right?

00:16:07.070 --> 00:16:09.590
ROMAN NURIK: Yeah, and also
sports leagues, or any sort of

00:16:09.590 --> 00:16:10.690
sports tracking.

00:16:10.690 --> 00:16:12.810
You have a bunch of different
leagues with different

00:16:12.810 --> 00:16:15.990
subleagues, and categorization
of leagues--

00:16:15.990 --> 00:16:18.020
it can be pretty heavyweight.

00:16:18.020 --> 00:16:19.950
So what we were thinking about
is, and this is actually

00:16:19.950 --> 00:16:22.040
something that we've been
recommending, is letting the

00:16:22.040 --> 00:16:23.100
user customize.

00:16:23.100 --> 00:16:25.070
So a good example of
this is Currents.

00:16:25.070 --> 00:16:30.930
Google Currents has a list of
top-level news categories,

00:16:30.930 --> 00:16:34.140
like Sports and Business
and things like that.

00:16:34.140 --> 00:16:38.040
But then within each section,
you can actually customize

00:16:38.040 --> 00:16:41.210
which news sources you use.

00:16:41.210 --> 00:16:43.110
So we took this one
step further.

00:16:43.110 --> 00:16:45.750
Let's let the user customize
the entire left pane.

00:16:45.750 --> 00:16:49.630
So the navigation drawer is
kind of quick access.

00:16:49.630 --> 00:16:52.480
It's the top level
of hierarchy.

00:16:52.480 --> 00:16:55.340
Let's give the user the full
customization of that.

00:16:55.340 --> 00:16:58.590
So what you see here is an
example of what you could do

00:16:58.590 --> 00:16:59.860
if you allow the user
to customize.

00:16:59.860 --> 00:17:07.670
So at the very top, you see the
user's favorited sections,

00:17:07.670 --> 00:17:10.280
with this Customize button that
lets you change what's

00:17:10.280 --> 00:17:11.500
going on there.

00:17:11.500 --> 00:17:13.260
When you first open up the app--
let's say you haven't

00:17:13.260 --> 00:17:15.690
used it yet--you'd probably just
see Customize, or you'd

00:17:15.690 --> 00:17:19.084
just see some pre-canned
items.

00:17:19.084 --> 00:17:20.380
NICK BUTCHER: Like Top
News, or whatever.

00:17:20.380 --> 00:17:20.680
ROMAN NURIK: Right.

00:17:20.680 --> 00:17:24.800
And then below that, under More
News or et cetera, et

00:17:24.800 --> 00:17:28.280
cetera, you'd see the things
that everybody should see.

00:17:28.280 --> 00:17:29.530
Things like Saved Stories,

00:17:29.530 --> 00:17:30.910
Featured, Top Videos, whatever.

00:17:30.910 --> 00:17:31.640
It's really up to you.

00:17:31.640 --> 00:17:36.010
But at the very top is this
heavily customizable section.

00:17:36.010 --> 00:17:38.140
So let's take a look.

00:17:38.140 --> 00:17:39.940
This is pretty straightforward,
but the more

00:17:39.940 --> 00:17:42.890
interesting part is the actual
Customize screen.

00:17:42.890 --> 00:17:44.570
So when you press Customize,
what do you see?

00:17:44.570 --> 00:17:46.890
This is an example of something
you could build.

00:17:46.890 --> 00:17:48.180
So the first thing you
want to do-- and

00:17:48.180 --> 00:17:49.880
there's a couple things.

00:17:49.880 --> 00:17:52.010
This is basically
list management.

00:17:52.010 --> 00:17:53.700
You want to be able
to delete items.

00:17:53.700 --> 00:17:56.010
You want to be able to
reorder items, make

00:17:56.010 --> 00:17:58.100
things higher than others.

00:17:58.100 --> 00:17:59.630
And you want to obviously
be able to add

00:17:59.630 --> 00:18:00.550
and search for things.

00:18:00.550 --> 00:18:05.120
So we've combined all of
those different tasks

00:18:05.120 --> 00:18:07.040
into a single UI.

00:18:07.040 --> 00:18:09.920
So on the left, you can notice
that you have these drag

00:18:09.920 --> 00:18:11.070
handles for reordering.

00:18:11.070 --> 00:18:14.290
And we've highlighted this
before in previous episodes of

00:18:14.290 --> 00:18:16.940
the show, I think the one
on shopping lists or

00:18:16.940 --> 00:18:18.740
something like that.

00:18:18.740 --> 00:18:22.580
And then you can also remove
items using the standard swipe

00:18:22.580 --> 00:18:23.670
to dismiss.

00:18:23.670 --> 00:18:26.090
We also talked about-- well,
we just mentioned--

00:18:26.090 --> 00:18:29.690
swipe to dismiss may not
be super discoverable.

00:18:29.690 --> 00:18:32.570
You can absolutely also offer
contextual action.

00:18:32.570 --> 00:18:35.900
So if I long press on this
search for Android or long

00:18:35.900 --> 00:18:38.480
press on Food &amp; Health, it'll
select those items, and I'll

00:18:38.480 --> 00:18:41.300
press delete, and it'll get
them out of the way.

00:18:41.300 --> 00:18:42.780
You should also support Undo.

00:18:42.780 --> 00:18:46.540
So if that does happen, show
the user the option to undo

00:18:46.540 --> 00:18:48.650
what they did, either
contextually in line with the

00:18:48.650 --> 00:18:53.590
item or as that bottom bar
that we've shown before.

00:18:53.590 --> 00:18:55.970
Additionally, another important

00:18:55.970 --> 00:18:57.610
part of this is adding.

00:18:57.610 --> 00:18:59.770
Adding a topic or searching
for a topic.

00:18:59.770 --> 00:19:03.850
And this is where I think the
bulk of this UI is different

00:19:03.850 --> 00:19:07.370
from other current
interactions.

00:19:07.370 --> 00:19:09.470
So the idea is that you have
a lot of hierarchy.

00:19:09.470 --> 00:19:12.520
And one of the best
ways to flatten

00:19:12.520 --> 00:19:14.200
hierarchy is through search.

00:19:14.200 --> 00:19:17.430
So you can obviously let the
user drill down into different

00:19:17.430 --> 00:19:19.460
levels of hierarchy.

00:19:19.460 --> 00:19:22.100
And that can be tedious, but
sometimes it's warranted.

00:19:22.100 --> 00:19:25.760
So for that, you would always
see this Browse For More or

00:19:25.760 --> 00:19:27.170
Browse item.

00:19:27.170 --> 00:19:29.860
So as soon as you give focus
to this Add a Topic text

00:19:29.860 --> 00:19:32.730
field, you should
see this Browse.

00:19:32.730 --> 00:19:34.850
But as soon as you start typing
in this text field, it

00:19:34.850 --> 00:19:38.890
does a global search across
all of the different

00:19:38.890 --> 00:19:42.680
categories and subcategories
and sub-subcategories.

00:19:42.680 --> 00:19:47.660
And it basically very easily
lets you find what you want

00:19:47.660 --> 00:19:50.410
without having to drill down.

00:19:50.410 --> 00:19:52.620
The other thing is obviously,
ranking is important here.

00:19:52.620 --> 00:19:55.180
Just a brief note
about ranking.

00:19:55.180 --> 00:20:00.070
You want to make sure that if
you do use this kind of UI,

00:20:00.070 --> 00:20:03.850
you want to make sure that you
rank deeper matches higher

00:20:03.850 --> 00:20:06.610
than higher-level matches.

00:20:06.610 --> 00:20:10.540
So if you have something like
sports and then soccer, if

00:20:10.540 --> 00:20:13.510
you're typing S-O-C, it should
rank higher than the Top

00:20:13.510 --> 00:20:15.810
Social Stories, S-O-C there.

00:20:15.810 --> 00:20:17.960
The reason for that is that
it's more pertinent.

00:20:17.960 --> 00:20:18.720
It's more detailed.

00:20:18.720 --> 00:20:20.560
So you always want to show
the more detailed

00:20:20.560 --> 00:20:22.660
information up top.

00:20:22.660 --> 00:20:28.710
So that's a very fast way
of explaining this.

00:20:28.710 --> 00:20:31.730
That's roughly what this works
like or looks like.

00:20:31.730 --> 00:20:33.920
Do you guys have any other
suggestions or other ways in

00:20:33.920 --> 00:20:35.720
which you can potentially
expose this

00:20:35.720 --> 00:20:36.970
kind of large hierarchy?

00:20:39.230 --> 00:20:41.910
NICK BUTCHER: Well, you
commented on it earlier on,

00:20:41.910 --> 00:20:45.270
but I think in the shopping
episode we did a while back,

00:20:45.270 --> 00:20:47.200
you had a really interesting
presentation, an alternative

00:20:47.200 --> 00:20:47.660
to this way.

00:20:47.660 --> 00:20:50.140
Instead of having the search,
you have a list of art

00:20:50.140 --> 00:20:52.090
schools, and then you had
a little View icon.

00:20:52.090 --> 00:20:53.870
You could toggle it
the View state.

00:20:53.870 --> 00:20:55.710
So that would be an alternative
presentation, if

00:20:55.710 --> 00:20:58.530
you didn't have such a very,
very deep hierarchy and you

00:20:58.530 --> 00:21:02.430
wanted to be able to present
them to the user, to get them

00:21:02.430 --> 00:21:04.590
the knowledge of what
there is available.

00:21:04.590 --> 00:21:07.070
What I really like about this
presentation with the search

00:21:07.070 --> 00:21:10.200
is not only is it easier to
navigate a very large

00:21:10.200 --> 00:21:12.530
structure, but it also makes
it feel more like mine.

00:21:12.530 --> 00:21:14.590
The idea of presenting
me some--

00:21:14.590 --> 00:21:18.235
given this, and then toggling
it, is very much, here's the

00:21:18.235 --> 00:21:19.100
things available to you.

00:21:19.100 --> 00:21:20.760
Whereas Search is like, here's
the things I want.

00:21:20.760 --> 00:21:22.120
It's a bit more person to me.

00:21:22.120 --> 00:21:23.480
I like it.

00:21:23.480 --> 00:21:24.910
And I also very much like
the Customize behavior.

00:21:24.910 --> 00:21:29.180
I think too many people see
navigation as a way to

00:21:29.180 --> 00:21:31.945
advertise every single feature
the app offers.

00:21:31.945 --> 00:21:34.170
But having [INAUDIBLE]

00:21:34.170 --> 00:21:36.620
very, very small list makes
it, again, more relevant.

00:21:36.620 --> 00:21:39.040
So that harks back to our
design principles.

00:21:39.040 --> 00:21:41.970
Show me only what I need, when
I need it, which I really,

00:21:41.970 --> 00:21:43.170
really like.

00:21:43.170 --> 00:21:43.900
ROMAN NURIK: Yeah.

00:21:43.900 --> 00:21:47.440
it's just the way to combat very
heavy navigation drawers.

00:21:47.440 --> 00:21:49.530
And any time you have
navigation, you want to make

00:21:49.530 --> 00:21:50.740
it as light as possible.

00:21:50.740 --> 00:21:53.470
You don't want to overburden the
user with stuff that they

00:21:53.470 --> 00:21:55.760
have to think about before
they actually

00:21:55.760 --> 00:21:57.210
get to their content.

00:21:57.210 --> 00:22:01.440
So this is just one of the
easy ways of doing that.

00:22:01.440 --> 00:22:04.280
ADAM KOCH: I think when
everyone's using a news app,

00:22:04.280 --> 00:22:05.660
not all of the sections
are relevant to you.

00:22:05.660 --> 00:22:07.130
So it's just really
nice to be able to

00:22:07.130 --> 00:22:08.040
bubble them up quickly.

00:22:08.040 --> 00:22:10.630
And if the hierarchy's really,
really deep and really broad,

00:22:10.630 --> 00:22:13.140
then it's just hard to find
those items that you want to

00:22:13.140 --> 00:22:15.230
add into your Favorites.

00:22:15.230 --> 00:22:17.640
I actually haven't seen that
many news apps that really,

00:22:17.640 --> 00:22:21.510
really nail that flow of adding
different topics to

00:22:21.510 --> 00:22:23.790
your Favorites list.

00:22:23.790 --> 00:22:24.705
NICK BUTCHER: Just a
couple notes again

00:22:24.705 --> 00:22:25.430
on the sliding drawer.

00:22:25.430 --> 00:22:27.380
I know we talked about this
quite a lot in our Design

00:22:27.380 --> 00:22:28.190
Hangout, too.

00:22:28.190 --> 00:22:30.200
But just while we're here, a
couple of things I really like

00:22:30.200 --> 00:22:31.650
about this.

00:22:31.650 --> 00:22:35.120
You can see that as the drawer
opens, we change the screen

00:22:35.120 --> 00:22:38.910
title and drop the up
caret, and also drop

00:22:38.910 --> 00:22:39.500
that Refresh icon.

00:22:39.500 --> 00:22:41.640
So it's really important that
you keep the action bar in

00:22:41.640 --> 00:22:44.420
place, but you can dynamically
adjust its options to make it

00:22:44.420 --> 00:22:45.900
appropriate to when you
have your major

00:22:45.900 --> 00:22:47.920
navigation sections open.

00:22:47.920 --> 00:22:49.670
And I think another great thing,
talking about that

00:22:49.670 --> 00:22:51.890
two-finger swipe-down, because
we're not reserving a

00:22:51.890 --> 00:22:55.670
horizontal gesture on the list
view type screen, it means you

00:22:55.670 --> 00:22:57.490
could do a whole content swipe
to open this drawer.

00:22:57.490 --> 00:22:59.640
So it makes the drawer that
much more discoverable.

00:22:59.640 --> 00:23:01.440
So you don't have to just
do an edge type swipe.

00:23:01.440 --> 00:23:03.750
You could swipe from anywhere
horizontally within the page

00:23:03.750 --> 00:23:06.348
and find the drawer, which is
going to help the users get to

00:23:06.348 --> 00:23:09.510
know the app.

00:23:09.510 --> 00:23:10.150
We should push on.

00:23:10.150 --> 00:23:11.000
We're running late.

00:23:11.000 --> 00:23:12.800
ROMAN NURIK: Yeah,
that's true.

00:23:12.800 --> 00:23:14.030
Oh, that clock is
probably wrong.

00:23:14.030 --> 00:23:14.320
OK.

00:23:14.320 --> 00:23:15.120
So let's--

00:23:15.120 --> 00:23:16.290
we talked about that.

00:23:16.290 --> 00:23:18.040
Very quickly, I wanted
to talk about some

00:23:18.040 --> 00:23:19.760
very last items here.

00:23:19.760 --> 00:23:22.460
So the other thing you want to
obviously optimize is the

00:23:22.460 --> 00:23:23.710
article reading experience.

00:23:26.800 --> 00:23:28.750
One of the ways in which you can
look at this is there's a

00:23:28.750 --> 00:23:31.210
beginning of the article, a
middle of the article, where

00:23:31.210 --> 00:23:32.960
you're focusing on the content,
and then the end of

00:23:32.960 --> 00:23:34.760
the article, where you're
winding down.

00:23:34.760 --> 00:23:36.730
So in the beginning of the
article, you want to see

00:23:36.730 --> 00:23:37.070
everything.

00:23:37.070 --> 00:23:38.880
You want to see the
action bar.

00:23:38.880 --> 00:23:41.480
You want to see the title.

00:23:41.480 --> 00:23:43.610
Potentially share options,
it immediately you

00:23:43.610 --> 00:23:44.550
want to share something.

00:23:44.550 --> 00:23:47.530
But once you start reading, once
you start scrolling down,

00:23:47.530 --> 00:23:49.750
one of the things that you could
do is you could actually

00:23:49.750 --> 00:23:52.290
first of all, go into Lights Out
mode, where the status bar

00:23:52.290 --> 00:23:55.740
and navigation bar go
into a dimmed state.

00:23:55.740 --> 00:23:58.240
And potentially, the action
bar can hide.

00:23:58.240 --> 00:24:00.670
And this is kind of similar to
the quick-return pattern,

00:24:00.670 --> 00:24:05.310
where you start scrolling down
maybe a few hundred pixels or

00:24:05.310 --> 00:24:09.870
so, or a few hundred DIPs, and
the action bar slides out of

00:24:09.870 --> 00:24:10.780
the way for you.

00:24:10.780 --> 00:24:14.410
And then as soon as you start
scrolling back up, you maybe,

00:24:14.410 --> 00:24:17.750
going backwards, you may want
to see other options.

00:24:17.750 --> 00:24:19.450
So you can show the
action bar again.

00:24:19.450 --> 00:24:23.230
This could also be coupled
with touch to toggle the

00:24:23.230 --> 00:24:23.930
action bar.

00:24:23.930 --> 00:24:25.280
So lots of different things
you can do here.

00:24:25.280 --> 00:24:28.270
But the idea is that if the user
doesn't really care about

00:24:28.270 --> 00:24:33.240
the actions in that specific
context of reading the text,

00:24:33.240 --> 00:24:36.360
you don't necessarily need
to show it, always.

00:24:36.360 --> 00:24:38.110
And then once you get to the end
of the article, the action

00:24:38.110 --> 00:24:39.790
bar should slide back
in, because it has

00:24:39.790 --> 00:24:41.850
that key Share action.

00:24:41.850 --> 00:24:44.680
And you see here the
presentation with the Share

00:24:44.680 --> 00:24:47.940
action provider that gives you
the most frequently used or

00:24:47.940 --> 00:24:50.330
most recently used shared
destination.

00:24:50.330 --> 00:24:54.140
And then you also see things
like the comments, obviously,

00:24:54.140 --> 00:24:55.780
more in this section.

00:24:55.780 --> 00:24:57.205
And you see here, we
kind of expose a

00:24:57.205 --> 00:24:58.890
little bit of that hierarchy.

00:24:58.890 --> 00:24:59.930
And then Related Stories.

00:24:59.930 --> 00:25:04.710
And the only real point here is
that you don't want to have

00:25:04.710 --> 00:25:07.030
the entire experience
end there.

00:25:07.030 --> 00:25:09.700
If there are things that the
user can really benefit from

00:25:09.700 --> 00:25:13.800
at the end of this detail item,
related items or other

00:25:13.800 --> 00:25:15.920
things, expose them right there
so that they don't have

00:25:15.920 --> 00:25:17.050
to press Back.

00:25:17.050 --> 00:25:18.760
The best experience is when
you don't actually have to

00:25:18.760 --> 00:25:20.730
press Back or Up or anything.

00:25:20.730 --> 00:25:22.560
It's just a continual flow.

00:25:22.560 --> 00:25:24.230
You kind of flow through
the app.

00:25:24.230 --> 00:25:27.160
So definitely consider doing
this if you have the

00:25:27.160 --> 00:25:30.550
opportunity to expose related
items and things like that.

00:25:30.550 --> 00:25:32.840
Before we jump into the next
section, any last comments on

00:25:32.840 --> 00:25:35.440
news readers or anything?

00:25:35.440 --> 00:25:35.570
NICK BUTCHER: No.

00:25:35.570 --> 00:25:36.050
That looks great.

00:25:36.050 --> 00:25:36.200
ADAM KOCH: Nope.

00:25:36.200 --> 00:25:36.860
We should get going.

00:25:36.860 --> 00:25:37.270
ROMAN NURIK: All right.

00:25:37.270 --> 00:25:38.710
Let's do it.

00:25:38.710 --> 00:25:40.850
So let's jump into
units of measure.

00:25:40.850 --> 00:25:44.060
Adam, Nick, do you guys want to
take on units of measure?

00:25:44.060 --> 00:25:44.910
NICK BUTCHER: Sure.

00:25:44.910 --> 00:25:46.225
ROMAN NURIK: So screen
variations.

00:25:46.225 --> 00:25:47.610
Go ahead.

00:25:47.610 --> 00:25:48.730
NICK BUTCHER: Yeah,
absolutely.

00:25:48.730 --> 00:25:51.170
So when we're talk about
designing for Android and the

00:25:51.170 --> 00:25:53.890
wealth of different screens
out there, there's a few

00:25:53.890 --> 00:25:55.910
things you have to think about
when you talk about different

00:25:55.910 --> 00:25:56.610
types of screen.

00:25:56.610 --> 00:25:59.080
And the one that most people
tend to lock onto is

00:25:59.080 --> 00:25:59.850
resolution.

00:25:59.850 --> 00:26:03.520
It's a very well understood
measure, especially coming

00:26:03.520 --> 00:26:04.540
from the desktop world.

00:26:04.540 --> 00:26:07.880
But when we're talking about
mobile, where devices have

00:26:07.880 --> 00:26:11.190
those vastly different
densities of screen,

00:26:11.190 --> 00:26:14.260
resolution actually turns out
to be not that useful a

00:26:14.260 --> 00:26:16.440
number, in its raw numbers.

00:26:16.440 --> 00:26:20.310
Like if you look at two 10-inch
tablets, like the

00:26:20.310 --> 00:26:23.310
Motorola Xoom and the Nexus 10,
they have vastly different

00:26:23.310 --> 00:26:24.080
resolutions.

00:26:24.080 --> 00:26:25.730
Four times the number of
pixels in the Nexus 10.

00:26:25.730 --> 00:26:27.203
But they're pretty much very
similar screens, when you're

00:26:27.203 --> 00:26:30.360
going to design content that's
going to go onto it, right?

00:26:30.360 --> 00:26:32.510
So it turns out that
resolution isn't as

00:26:32.510 --> 00:26:35.430
interesting as talking about
size and density.

00:26:35.430 --> 00:26:37.550
So luckily, Android has embraced
this from the very

00:26:37.550 --> 00:26:39.940
start, and we have this
concept, this kind of

00:26:39.940 --> 00:26:41.780
abstraction layer, if you
want, called this

00:26:41.780 --> 00:26:44.260
density-independent pixel.

00:26:44.260 --> 00:26:46.490
So what this is, as we said
here on the slide, is a

00:26:46.490 --> 00:26:48.760
density-independent pixel,
so DP, or we just

00:26:48.760 --> 00:26:50.080
generally say DIP.

00:26:50.080 --> 00:26:52.790
A DIP is a unit of measure which
keeps things physically

00:26:52.790 --> 00:26:55.480
the same size across various
different screens.

00:26:55.480 --> 00:26:59.580
So things of certain sizes,
like a finger, is 7

00:26:59.580 --> 00:27:01.900
millimeters big on average,
or something like that.

00:27:01.900 --> 00:27:05.290
So you want to size your user
interface elements so that

00:27:05.290 --> 00:27:08.230
they're roughly the same
physical size across devices.

00:27:08.230 --> 00:27:10.920
So that they're easy to tap,
easy to see, and so forth.

00:27:10.920 --> 00:27:15.320
So by using this virtualized
unit, this DIP, you don't have

00:27:15.320 --> 00:27:18.020
to worry about how many pixels
the screen actually lights up

00:27:18.020 --> 00:27:18.760
to display.

00:27:18.760 --> 00:27:22.450
You just slide it so that it's
the right virtual size, and

00:27:22.450 --> 00:27:24.960
the screen will take
care of it.

00:27:24.960 --> 00:27:26.280
ROMAN NURIK: Just one thing I
wanted to mention real quick

00:27:26.280 --> 00:27:30.060
is that the core takeaway, I
think, from the rest of this--

00:27:30.060 --> 00:27:32.910
if you were going to take one
thing away, it's that as

00:27:32.910 --> 00:27:35.830
somebody that's working with
layout or as somebody that's

00:27:35.830 --> 00:27:37.620
working with interaction
design, just

00:27:37.620 --> 00:27:38.440
forget about pixels.

00:27:38.440 --> 00:27:41.120
Pixels don't matter.

00:27:41.120 --> 00:27:42.560
For visual design,
pixels matter.

00:27:42.560 --> 00:27:45.150
But for layout design,
interaction design, pixels

00:27:45.150 --> 00:27:46.300
just don't matter.

00:27:46.300 --> 00:27:49.880
Because DIPs are the way in
which you make this entire

00:27:49.880 --> 00:27:53.342
world of designing for different
densities sane.

00:27:53.342 --> 00:27:53.680
NICK BUTCHER: Yeah.

00:27:53.680 --> 00:27:54.610
I will pick up on that.

00:27:54.610 --> 00:27:58.560
You kind of sacrifice a little
bit of like precise control in

00:27:58.560 --> 00:28:00.720
order to have sanity for dealing
with this vast array

00:28:00.720 --> 00:28:02.790
of different devices
out there.

00:28:02.790 --> 00:28:03.100
So yeah.

00:28:03.100 --> 00:28:07.600
In the example here we're
showing, you have an XHDPI

00:28:07.600 --> 00:28:10.730
device, which might use 400
pixels to display an item, and

00:28:10.730 --> 00:28:13.790
an MDPI device, which might
actually use 200 pixels.

00:28:13.790 --> 00:28:15.080
But they're both the
same physical size,

00:28:15.080 --> 00:28:17.100
this 200 DIP measure.

00:28:17.100 --> 00:28:18.784
I realize we showed the wrong
device in that picture.

00:28:18.784 --> 00:28:19.860
ADAM KOCH: Yeah, it's
worth noting.

00:28:19.860 --> 00:28:21.710
The Xoom is a device
that's MDPI.

00:28:21.710 --> 00:28:24.270
So we've got a Nexus 10 there,
which is actually XHDPI.

00:28:24.270 --> 00:28:27.250
ROMAN NURIK: And the Nexus
S is HDPI, not XHDPI.

00:28:27.250 --> 00:28:30.140
ADAM KOCH: But just forget
about the [? frame ?].

00:28:30.140 --> 00:28:30.540
ROMAN NURIK: All right.

00:28:30.540 --> 00:28:35.396
Should we move on to the next
slide on calculating DIPs?

00:28:35.396 --> 00:28:37.290
You want to talk about
calculating DIPs?

00:28:37.290 --> 00:28:37.540
ADAM KOCH: Yeah.

00:28:37.540 --> 00:28:41.680
So the sort of baseline DIP
value is what we call

00:28:41.680 --> 00:28:44.260
MDPI, or 160 DPI.

00:28:44.260 --> 00:28:48.320
So this is sort of an equation
you can use to calculate

00:28:48.320 --> 00:28:50.150
pixels and DIPs and the
sort of conversion

00:28:50.150 --> 00:28:52.000
between them all.

00:28:52.000 --> 00:28:54.790
So you can basically take
the DPI of a device--

00:28:54.790 --> 00:28:57.920
so it may be 160 but it could
be something else.

00:28:57.920 --> 00:29:01.410
It could, for example,
be HDPI or XHDPI.

00:29:01.410 --> 00:29:05.120
You divide it by the baseline,
which is 160, and then that

00:29:05.120 --> 00:29:09.110
gives you your ratio
of pixels to DIPs.

00:29:09.110 --> 00:29:12.100
So I don't know if I fumbled any
wording there, but don't

00:29:12.100 --> 00:29:14.010
forget-- there's DPI
and there's DIP.

00:29:14.010 --> 00:29:16.390
So they're very closely
related.

00:29:16.390 --> 00:29:18.720
One is the actual density of the
device, and the other is

00:29:18.720 --> 00:29:20.390
these DIP units that we're
talking about.

00:29:20.390 --> 00:29:22.140
So hopefully I didn't
fumble anything.

00:29:22.140 --> 00:29:27.530
ROMAN NURIK: DPI is dots per
inch, or PPD, pixels per inch.

00:29:27.530 --> 00:29:30.850
And then you DIPs, which is
density-independent pixels.

00:29:30.850 --> 00:29:32.250
ADAM KOCH: So I think we've
got some sample

00:29:32.250 --> 00:29:33.280
calculations here.

00:29:33.280 --> 00:29:35.010
NICK BUTCHER: Just to
hammer this home.

00:29:35.010 --> 00:29:35.750
ADAM KOCH: Sorry?

00:29:35.750 --> 00:29:37.120
NICK BUTCHER: Just to
hammer this home.

00:29:37.120 --> 00:29:38.740
ADAM KOCH: Yeah, I guess we've
got to move pretty fast here.

00:29:38.740 --> 00:29:42.960
So of course, if the DPI of the
device is 160, which is

00:29:42.960 --> 00:29:45.730
the standard, then one
pixel equals one DIP.

00:29:45.730 --> 00:29:47.630
Straightforward.

00:29:47.630 --> 00:29:50.820
If the density of the device is
320, so double the standard

00:29:50.820 --> 00:29:54.760
baseline of 160, then one DIP
will equate to two pixels.

00:29:57.290 --> 00:29:59.080
NICK BUTCHER: If you're coming
from an iOS would, it's kind

00:29:59.080 --> 00:30:01.340
of similar to, like, the
retina is at 2x.

00:30:01.340 --> 00:30:04.550
It's the RHDPI.

00:30:04.550 --> 00:30:07.140
ROMAN NURIK: So just
one example--

00:30:07.140 --> 00:30:10.160
this is actually something that
any time we talk about

00:30:10.160 --> 00:30:13.490
DIPs in presentations, we've
asked this question.

00:30:13.490 --> 00:30:16.240
So if you look at the Nexus 7
screen resolution, 1280 by

00:30:16.240 --> 00:30:19.620
800, it's actually the same as
the Motorola Xoom's screen

00:30:19.620 --> 00:30:22.970
resolution, 1280 by 800, and
very similar to the Galaxy

00:30:22.970 --> 00:30:26.450
Nexus and Nexus 4's screen
resolution, 1280 by something.

00:30:26.450 --> 00:30:28.590
768, 720.

00:30:28.590 --> 00:30:30.700
But its DIP resolution
is very different.

00:30:30.700 --> 00:30:35.420
So if you plug in these values,
the fact that the

00:30:35.420 --> 00:30:41.200
Nexus 7 is 213 DPI and 1280 by
800, you'll actually find that

00:30:41.200 --> 00:30:47.710
its DIP resolution roughly
960 by 600 DIPs.

00:30:47.710 --> 00:30:51.920
And that helps you figure out
how much content will fit into

00:30:51.920 --> 00:30:52.500
this space.

00:30:52.500 --> 00:30:53.660
ADAM KOCH: How much screen
real estate is really

00:30:53.660 --> 00:30:56.200
available for you to
work with here.

00:30:56.200 --> 00:30:56.460
ROMAN NURIK: Yeah.

00:30:56.460 --> 00:30:58.870
So when you think about screen
real estate, definitely don't

00:30:58.870 --> 00:30:59.640
think in pixels.

00:30:59.640 --> 00:31:01.950
Think in DIPs.

00:31:01.950 --> 00:31:05.320
So yes, Nexus 7, about
960 by 600 DIPs.

00:31:05.320 --> 00:31:08.340
And if you're doing any sort of
development, a lot of our

00:31:08.340 --> 00:31:12.800
qualifiers, like smallest width,
width and height-- a

00:31:12.800 --> 00:31:15.840
lot of the resource qualifiers
that you use are based on this

00:31:15.840 --> 00:31:18.270
resolution, not the
pixel resolution.

00:31:18.270 --> 00:31:21.740
So make sure that you use this
resolution when looking at the

00:31:21.740 --> 00:31:23.450
screen real estate available
on the device.

00:31:26.410 --> 00:31:30.290
So with grids, let me just
briefly talk about some of the

00:31:30.290 --> 00:31:32.380
grids that you should be using
when you're doing layout.

00:31:32.380 --> 00:31:37.430
So once you are in this world of
DIPs, after that, you need

00:31:37.430 --> 00:31:39.350
to start thinking about laying
out your elements.

00:31:39.350 --> 00:31:41.850
So obviously on Android, you
want to make sure that you use

00:31:41.850 --> 00:31:43.030
constraint-based layouts.

00:31:43.030 --> 00:31:46.240
So don't say, this should be
exactly 200 DIPs, or this

00:31:46.240 --> 00:31:48.370
should be exactly 300,
and that'll be

00:31:48.370 --> 00:31:49.700
roughly fill up the space.

00:31:49.700 --> 00:31:51.190
Make sure that you're using
things like, this should be

00:31:51.190 --> 00:31:56.490
20% of the screen or 20% of
the available real estate.

00:31:56.490 --> 00:31:58.300
And then make sure
that you're using

00:31:58.300 --> 00:31:59.830
constraint-based layout as well.

00:31:59.830 --> 00:32:01.770
Like this should be to the right
of this, and this should

00:32:01.770 --> 00:32:04.010
be below that.

00:32:04.010 --> 00:32:06.870
But also, you want to use
some basic sizes.

00:32:06.870 --> 00:32:10.380
So two of the things that we
generally recommend using, and

00:32:10.380 --> 00:32:11.640
two of the things that
we document on

00:32:11.640 --> 00:32:16.050
developer.android.com/design,
are our 48-DIP rhythm, which

00:32:16.050 --> 00:32:18.380
basically says that roughly,
both vertically and

00:32:18.380 --> 00:32:22.760
horizontally, you should try to
structure items around 48

00:32:22.760 --> 00:32:24.270
DIPs in width and height.

00:32:24.270 --> 00:32:25.410
Especially touch targets.

00:32:25.410 --> 00:32:28.900
Touch targets, the minimum size
should really be 48 DIPs.

00:32:28.900 --> 00:32:33.310
But 48 DIPs, 96 DIPs, multiples
of 48, things like

00:32:33.310 --> 00:32:35.450
that work well.

00:32:35.450 --> 00:32:39.860
But with things like spacing and
margins and padding, you

00:32:39.860 --> 00:32:42.640
want to try to use roughly
a 4-DIP grid.

00:32:42.640 --> 00:32:47.830
So what that means is that the
very smallest amount of space

00:32:47.830 --> 00:32:49.670
between two items should
be about 4 DIPs.

00:32:49.670 --> 00:32:53.200
Or 0, if it's completely
flush.

00:32:53.200 --> 00:32:56.910
But also, it means that you
should use multiples of 4 as

00:32:56.910 --> 00:32:57.930
things like margins.

00:32:57.930 --> 00:33:00.120
So the margins around your
screen should be

00:33:00.120 --> 00:33:02.830
16 DIPs or 32 DIPs.

00:33:02.830 --> 00:33:06.620
And then in some cases, you
want to use 8-DIP spacers.

00:33:06.620 --> 00:33:09.010
So what I generally do
as a designer is I

00:33:09.010 --> 00:33:11.440
use 4 DIPs very rarely.

00:33:11.440 --> 00:33:16.265
I use mostly either 0, 8, or
16 as my primary paddings.

00:33:16.265 --> 00:33:18.850
And then on tablets, I actually
use larger ones.

00:33:18.850 --> 00:33:21.541
So like 16 or 32 or
things like that.

00:33:21.541 --> 00:33:24.700
So in general, think in terms
of multiples of 4.

00:33:24.700 --> 00:33:26.530
And then think about this
48-DIP rhythm, where

00:33:26.530 --> 00:33:29.550
everything should really just
align to multiples of 48, in a

00:33:29.550 --> 00:33:31.022
perfect world.

00:33:31.022 --> 00:33:32.356
NICK BUTCHER: I don't know if
you picked up on it, but a lot

00:33:32.356 --> 00:33:34.170
of the system UI we use
is 48-DIP rhythm.

00:33:34.170 --> 00:33:37.030
So if you've got software
navigation on the Nexus 4, we

00:33:37.030 --> 00:33:38.810
have the Back and
Home buttons.

00:33:38.810 --> 00:33:40.280
That's 48 DIPs high.

00:33:40.280 --> 00:33:42.540
The action bar is
48 DIPs high.

00:33:42.540 --> 00:33:46.380
So falling into the rhythm of
this layout means that your

00:33:46.380 --> 00:33:48.290
app will kind of fit in with the
rhythm of the page, kind

00:33:48.290 --> 00:33:49.590
of gestalt principles.

00:33:49.590 --> 00:33:50.514
ROMAN NURIK: Yep.

00:33:50.514 --> 00:33:51.440
All right.

00:33:51.440 --> 00:33:52.980
Let's move on.

00:33:52.980 --> 00:33:56.580
So here's just a sample of
some of our layouts.

00:33:56.580 --> 00:33:59.070
Nick, you want to talk
about that red line?

00:33:59.070 --> 00:33:59.370
NICK BUTCHER: Yeah.

00:33:59.370 --> 00:34:00.970
So as you were saying earlier,
when you're talking about

00:34:00.970 --> 00:34:02.692
layout, when you're talking
about what you're going to put

00:34:02.692 --> 00:34:04.460
on a page, you want to forget
about physical pixels and you

00:34:04.460 --> 00:34:05.220
want to work in DIPs.

00:34:05.220 --> 00:34:08.460
So say you want to prepare a
layout for like a 10-inch type

00:34:08.460 --> 00:34:10.340
device, that size of screen.

00:34:10.340 --> 00:34:12.040
Then you don't want to think
about the raw pixels.

00:34:12.040 --> 00:34:16.355
You want to create your canvas,
using an Illustrator

00:34:16.355 --> 00:34:19.010
or Photoshop or Fireworks,
whatever it might be, to the

00:34:19.010 --> 00:34:21.780
DIP size and work
at this baseline

00:34:21.780 --> 00:34:22.949
resolution of DIP size.

00:34:22.949 --> 00:34:25.400
So then when you do your layout,
like the red line like

00:34:25.400 --> 00:34:28.530
we're showing here-- the
items are at 1 pixel.

00:34:28.530 --> 00:34:30.520
Therefore, it translates
straight into 1 DIP.

00:34:30.520 --> 00:34:33.179
So it's really, really easy to
do your layout at this to

00:34:33.179 --> 00:34:36.219
resolution and communicate
that to your developers.

00:34:36.219 --> 00:34:38.260
Hand them these red lines and
show them that these are the

00:34:38.260 --> 00:34:40.489
size and depth that
things need to be.

00:34:40.489 --> 00:34:42.409
ROMAN NURIK: It also works well
with red lining tools.

00:34:42.409 --> 00:34:45.810
There are some tools for
Fireworks, like Inspector,

00:34:45.810 --> 00:34:48.070
something like that, that
actually create these red

00:34:48.070 --> 00:34:48.870
lines for you.

00:34:48.870 --> 00:34:49.800
Not these exact ones.

00:34:49.800 --> 00:34:53.159
But the good things is that if
you work with 1 pixel equals 1

00:34:53.159 --> 00:34:55.920
DIP and that baseline
density, than it

00:34:55.920 --> 00:34:57.500
uses the correct values.

00:34:57.500 --> 00:34:59.200
So you don't have to
do any doubling

00:34:59.200 --> 00:35:01.330
or halving or anything.

00:35:01.330 --> 00:35:01.570
NICK BUTCHER: Yeah.

00:35:01.570 --> 00:35:03.730
Yeah, so the thing we're kind
of hammering home here is,

00:35:03.730 --> 00:35:04.710
layout is DIPs.

00:35:04.710 --> 00:35:06.150
Forget about physical pixels.

00:35:06.150 --> 00:35:07.725
Layout equals DIPs.

00:35:07.725 --> 00:35:07.990
ADAM KOCH: Yeah.

00:35:07.990 --> 00:35:09.403
We've said it about five times.

00:35:09.403 --> 00:35:12.870
[LAUGHTER]

00:35:12.870 --> 00:35:15.530
NICK BUTCHER: If we go on to
the next slide, one slight

00:35:15.530 --> 00:35:17.140
variation on DIPs is when we're

00:35:17.140 --> 00:35:20.220
talking about text sizing.

00:35:20.220 --> 00:35:22.790
This is very closely related
to DIPs, but we had to

00:35:22.790 --> 00:35:24.670
introduce the ability
to use it.

00:35:24.670 --> 00:35:27.400
It has the ability to scale the
text up and down as a user

00:35:27.400 --> 00:35:28.850
preference.

00:35:28.850 --> 00:35:31.340
These really are kind of
accessibility features.

00:35:31.340 --> 00:35:34.020
Some users just need to
have larger text.

00:35:34.020 --> 00:35:36.810
So whenever you're sizing any
text for your layouts, you

00:35:36.810 --> 00:35:40.430
need to be using this SP unit,
scale-independent pixel.

00:35:40.430 --> 00:35:45.130
And if the user's not changed
their scale, then 1 SP will

00:35:45.130 --> 00:35:46.530
equal 1 DP.

00:35:46.530 --> 00:35:48.975
But you need to bear in mind
that the user can bump that

00:35:48.975 --> 00:35:50.480
both up and down.

00:35:50.480 --> 00:35:54.550
So you kind of get, like, 1.2x
or 1.4x the size if you're

00:35:54.550 --> 00:35:56.670
bumping it up, or it might
be slightly smaller.

00:35:56.670 --> 00:36:01.340
So you need to respect that
user's chosen setting up and

00:36:01.340 --> 00:36:04.300
scale your text in SPs.

00:36:04.300 --> 00:36:06.760
ROMAN NURIK: So that means if
you actually have two content

00:36:06.760 --> 00:36:10.090
blocks, two pieces of text that
are adjacent, make sure

00:36:10.090 --> 00:36:12.820
that the spacing between them,
for example, scales

00:36:12.820 --> 00:36:14.070
with the text size.

00:36:14.070 --> 00:36:17.900
You also want to use SP units
for the margins, for example.

00:36:17.900 --> 00:36:20.820
Generally we use SP units for
the text size attributes, but

00:36:20.820 --> 00:36:23.070
they're useful in other cases
when you want to be very

00:36:23.070 --> 00:36:28.300
cognizant of spacing between
text and things like that.

00:36:28.300 --> 00:36:29.590
NICK BUTCHER: There's a good
way to test your app.

00:36:29.590 --> 00:36:31.006
If you're worried, you know, you
want to test your layouts

00:36:31.006 --> 00:36:33.240
to the extreme, then change the
language to German and put

00:36:33.240 --> 00:36:36.310
the scaling feature up to
maximum and see how your

00:36:36.310 --> 00:36:37.400
layout handles it.

00:36:37.400 --> 00:36:38.590
ROMAN NURIK: So we gotta
fly through the rest.

00:36:38.590 --> 00:36:39.590
[INTERPOSING VOICES]

00:36:39.590 --> 00:36:41.100
ROMAN NURIK: Let's
fly through.

00:36:41.100 --> 00:36:41.780
So--

00:36:41.780 --> 00:36:44.531
NICK BUTCHER: So last
[INAUDIBLE].

00:36:44.531 --> 00:36:46.280
I was going to say, though, so
yeah, when we're talking about

00:36:46.280 --> 00:36:48.415
layout, then you want to go
about physical pixels.

00:36:48.415 --> 00:36:51.200
But when we're talking about
bitmap assets, then you

00:36:51.200 --> 00:36:53.020
absolutely need to
think in pixels.

00:36:53.020 --> 00:36:56.050
So if there's anything that
changes when you go to, sorf

00:36:56.050 --> 00:36:58.300
of like the zoom from Nexus 10,
which has the same kind of

00:36:58.300 --> 00:37:02.230
layout size in DIPs, is you need
your assets to be crisp.

00:37:02.230 --> 00:37:04.760
If you were just to use the
exact same assets from an MDPI

00:37:04.760 --> 00:37:08.720
advice on an XHDPI device, then
they'll be super blurry.

00:37:08.720 --> 00:37:10.640
So this is where we
introduce this

00:37:10.640 --> 00:37:12.710
concept of density buckets.

00:37:12.710 --> 00:37:15.140
It lets [INAUDIBLE] nothing
about raw density, but kind of

00:37:15.140 --> 00:37:17.830
group them together into these
logical densities here.

00:37:17.830 --> 00:37:19.830
So as we've talked about all
along, we have this MDPI

00:37:19.830 --> 00:37:22.997
bucket, or 160 DPI, is our
baseline, kind of where all

00:37:22.997 --> 00:37:24.560
the first Android devices
came out.

00:37:24.560 --> 00:37:26.720
And slowly that's kind of
drifted upwards until we're at

00:37:26.720 --> 00:37:32.210
the range now where XHDPI is the
normal on most phones, and

00:37:32.210 --> 00:37:35.540
XX seems to be perhaps
coming in.

00:37:35.540 --> 00:37:37.920
So the idea here is if you have
an icon, like we show you

00:37:37.920 --> 00:37:40.850
here in the right-hand column,
which needs to be 32 by 32

00:37:40.850 --> 00:37:43.330
DIPs, on an MDPI device,
that would translate

00:37:43.330 --> 00:37:44.970
into 32 by 32 pixels.

00:37:44.970 --> 00:37:47.670
But on an XHDPI device, that
would actually turn out to be

00:37:47.670 --> 00:37:49.470
64 by 64 pixels.

00:37:49.470 --> 00:37:52.980
So you have complete control
over a pixel-perfect icon in

00:37:52.980 --> 00:37:53.920
an XHDPI device.

00:37:53.920 --> 00:37:58.700
You can draw it at 64 by 64, and
then the device will pick

00:37:58.700 --> 00:38:02.260
the right density version
at run time.

00:38:02.260 --> 00:38:03.150
ADAM KOCH: All right.

00:38:03.150 --> 00:38:03.380
ROMAN NURIK: Go ahead.

00:38:03.380 --> 00:38:03.910
Go ahead.

00:38:03.910 --> 00:38:05.660
ADAM KOCH: The DPI buckets
highlighted in bold, just

00:38:05.660 --> 00:38:08.590
quickly here, they're some of
the key density buckets.

00:38:08.590 --> 00:38:10.560
So you should generally provide
all your assets in

00:38:10.560 --> 00:38:11.570
those densities.

00:38:11.570 --> 00:38:14.660
The other ones are sort of
less common, but you may

00:38:14.660 --> 00:38:16.820
potentially want to provide
key assets in those

00:38:16.820 --> 00:38:17.500
densities as well.

00:38:17.500 --> 00:38:20.070
It's sort of your call there,
especially XXHDPI for your

00:38:20.070 --> 00:38:21.546
[INAUDIBLE].

00:38:21.546 --> 00:38:22.705
All right, let's go.

00:38:22.705 --> 00:38:23.850
NICK BUTCHER: So a lot of people
ask, can I just provide

00:38:23.850 --> 00:38:26.425
the highest-density ones
an have Android scale

00:38:26.425 --> 00:38:27.620
it down and so forth?

00:38:27.620 --> 00:38:29.780
And that is [INAUDIBLE]
you can do.

00:38:29.780 --> 00:38:31.270
There's a slight performance
hit.

00:38:31.270 --> 00:38:33.790
It's not huge, but it's
something to be aware of.

00:38:33.790 --> 00:38:36.650
And Roman's going to come back
to talk about some techniques

00:38:36.650 --> 00:38:38.870
you can use to actually
do this a

00:38:38.870 --> 00:38:40.730
little bit more smartly.

00:38:40.730 --> 00:38:43.180
But moving forward to the next
slide, this is kind of the

00:38:43.180 --> 00:38:44.800
concept I wanted to talk about,
is that you don't

00:38:44.800 --> 00:38:47.860
really want to design your
application specifically

00:38:47.860 --> 00:38:48.790
around a certain device.

00:38:48.790 --> 00:38:51.340
Because the device landscape's
changing all the time, and you

00:38:51.340 --> 00:38:53.540
kind of end up chasing
your tail.

00:38:53.540 --> 00:38:56.400
So using these techniques,
only thinking in DIPs for

00:38:56.400 --> 00:38:59.725
layout and only thinking about
density for pixel assets, for

00:38:59.725 --> 00:39:01.660
bitmap assets, is your route to

00:39:01.660 --> 00:39:04.150
happiness for future devices.

00:39:04.150 --> 00:39:06.120
So the example [INAUDIBLE]

00:39:06.120 --> 00:39:09.320
going back to here is, if you
have provided a layout for

00:39:09.320 --> 00:39:11.000
something like the Motorola
Xoom, the first generation of

00:39:11.000 --> 00:39:14.130
Android tablets that came out,
which was like 1280 by 800,

00:39:14.130 --> 00:39:18.480
and you had provided XHDPI,
these high-density bitmap

00:39:18.480 --> 00:39:21.470
asset for something like the
Galaxy Nexus, all of a sudden,

00:39:21.470 --> 00:39:23.750
when a device like the Nexus 10
comes out-- which you might

00:39:23.750 --> 00:39:25.890
not have heard about a year
ago, when you did this--

00:39:25.890 --> 00:39:27.970
it'll pick the same layouts
as the Motorola Xoom.

00:39:27.970 --> 00:39:32.080
It'll pick the high-density
bitmap assets from the phones

00:39:32.080 --> 00:39:35.290
and I put them together, and
have this optimized-looking

00:39:35.290 --> 00:39:37.630
layout and clear assets.

00:39:37.630 --> 00:39:39.550
So it's a really, really nice
system to be able to think

00:39:39.550 --> 00:39:43.250
about these two things
separately.

00:39:43.250 --> 00:39:44.390
ROMAN NURIK: Moving on.

00:39:44.390 --> 00:39:45.960
Really quick, pixel grid tips.

00:39:45.960 --> 00:39:48.830
So when you're doing asset
production, this is actually

00:39:48.830 --> 00:39:52.700
one general tip, and you can
tweak this as you see fit.

00:39:52.700 --> 00:39:56.520
One thing that I generally do
is I use a 4-pixel grid for

00:39:56.520 --> 00:39:59.880
designing assets, and
I start with XHDPI.

00:39:59.880 --> 00:40:03.280
So you can see here, starting
with XHDPI, lining things up

00:40:03.280 --> 00:40:06.260
to a 4-pixel grid means that
you can actually then scale

00:40:06.260 --> 00:40:09.620
down to HDPI, MDPI, and I'm
not sure about LDPI, but

00:40:09.620 --> 00:40:13.360
probably LDPI as well, and get
really, really crisp borders.

00:40:13.360 --> 00:40:15.220
So this is actually something
that we do

00:40:15.220 --> 00:40:16.220
in our system assets.

00:40:16.220 --> 00:40:20.220
So if you look at the default
button asset, the pressed

00:40:20.220 --> 00:40:24.540
state for the button, you'll
notice that the size of the

00:40:24.540 --> 00:40:29.140
glow around the core
shape is 8 pixels.

00:40:29.140 --> 00:40:31.820
And the reason for that, the
reason it's not 7 pixels or 5

00:40:31.820 --> 00:40:34.760
pixels is that it scales down
really, really nicely.

00:40:34.760 --> 00:40:38.210
So this is just a quick tip if
you're doing asset production.

00:40:38.210 --> 00:40:40.700
Aligning to a 4-pixel grid is
really, really useful for

00:40:40.700 --> 00:40:43.440
scaling down.

00:40:43.440 --> 00:40:43.890
OK.

00:40:43.890 --> 00:40:45.920
So that was it for
units of measure.

00:40:45.920 --> 00:40:47.910
We flew through them.

00:40:47.910 --> 00:40:49.370
We're still over time.

00:40:49.370 --> 00:40:52.890
Let's really briefly talk
about design news.

00:40:52.890 --> 00:40:55.650
Actually, before we jump into
that, any parting thoughts on

00:40:55.650 --> 00:40:58.099
pixels and DIPs and
things like that?

00:40:58.099 --> 00:40:58.522
No?

00:40:58.522 --> 00:40:59.850
ADAM KOCH: Layouts.

00:40:59.850 --> 00:41:00.790
Layouts, DIPs.

00:41:00.790 --> 00:41:02.030
Always use them.

00:41:02.030 --> 00:41:02.380
ROMAN NURIK: Yeah.

00:41:02.380 --> 00:41:04.410
Layouts and DIPs.

00:41:04.410 --> 00:41:04.660
OK.

00:41:04.660 --> 00:41:05.480
So design news.

00:41:05.480 --> 00:41:09.090
The first is we actually have
a New York Android Designers

00:41:09.090 --> 00:41:12.210
Meet-Up coming up next week.

00:41:12.210 --> 00:41:13.960
This is the very first Meet-Up,
and we're hoping to

00:41:13.960 --> 00:41:16.430
have multiple of these
Meet-Ups over

00:41:16.430 --> 00:41:19.130
the next few months.

00:41:19.130 --> 00:41:21.195
I don't know how frequently
we'll do it, but definitely

00:41:21.195 --> 00:41:22.820
something that we're
starting up now.

00:41:22.820 --> 00:41:26.730
This is actually run by Paul
Burke from the Android

00:41:26.730 --> 00:41:29.050
Designers Google+ Community.

00:41:29.050 --> 00:41:31.220
So if you're in New York or the
general area and you're

00:41:31.220 --> 00:41:37.730
free next Thursday at around
6:30 or 7:00 PM Eastern, then

00:41:37.730 --> 00:41:41.036
visit this link and we'll
see you there.

00:41:41.036 --> 00:41:43.011
ADAM KOCH: Looks like
we lost Nick there.

00:41:43.011 --> 00:41:46.170
ROMAN NURIK: Oh. looks like we
lost Nick in the Hangout.

00:41:46.170 --> 00:41:47.610
OK.

00:41:47.610 --> 00:41:48.390
Thanks, Pete.

00:41:48.390 --> 00:41:48.950
Pete's producing.

00:41:48.950 --> 00:41:50.750
Thanks, Pete.

00:41:50.750 --> 00:41:55.100
And the last item in our Design
News is the Android UI

00:41:55.100 --> 00:41:56.140
design kit.

00:41:56.140 --> 00:42:00.420
So Taylor Ling has this design
kit that's a nice starting

00:42:00.420 --> 00:42:04.800
point, a nice template for doing
sorts of visual designs.

00:42:04.800 --> 00:42:06.950
And if you're interested
in doing this--

00:42:06.950 --> 00:42:09.710
and I don't know which
devices he has, but

00:42:09.710 --> 00:42:11.310
probably various devices.

00:42:11.310 --> 00:42:13.950
If you're interested in getting
a nice, easy starting

00:42:13.950 --> 00:42:17.230
point with a couple of patterns
already pre-packaged

00:42:17.230 --> 00:42:20.210
in there, then this is
a nice starter kit.

00:42:20.210 --> 00:42:21.852
I think we see ourselves
twice now.

00:42:21.852 --> 00:42:23.180
It's kind of cool.

00:42:23.180 --> 00:42:23.690
There's Nick.

00:42:23.690 --> 00:42:25.525
ADAM KOCH: This is what we
get for going over time.

00:42:25.525 --> 00:42:26.860
ROMAN NURIK: Yeah.

00:42:26.860 --> 00:42:27.320
So yeah.

00:42:27.320 --> 00:42:31.670
So that's his updated version
of the UI design kit.

00:42:31.670 --> 00:42:31.980
All right.

00:42:31.980 --> 00:42:36.030
And I think that's it for
the content today.

00:42:36.030 --> 00:42:39.720
Any parting thoughts, fellas?

00:42:39.720 --> 00:42:40.110
No?

00:42:40.110 --> 00:42:44.180
Nick is still super frozen.

00:42:44.180 --> 00:42:47.100
Well, thanks again for joining
Android Design in Action.

00:42:47.100 --> 00:42:48.730
I'm your host, Roman Nurik.

00:42:48.730 --> 00:42:49.370
ADAM KOCH: Adam Koch.

00:42:49.370 --> 00:42:51.690
And over in Mountain View, we
have Nick Butcher, who is

00:42:51.690 --> 00:42:52.400
frozen right now.

00:42:52.400 --> 00:42:53.140
ROMAN NURIK: Absolutely
frozen.

00:42:53.140 --> 00:42:53.770
ADAM KOCH: Thanks, guys.

00:42:53.770 --> 00:42:54.480
See you next week.

00:42:54.480 --> 00:42:55.380
ROMAN NURIK: Thanks, see you.

00:42:55.380 --> 00:43:19.403
[MUSIC PLAYING]

