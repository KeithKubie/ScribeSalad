WEBVTT
Kind: captions
Language: en

00:00:08.050 --> 00:00:09.300
IBRAHIM ULUKAYA: Hi, everyone.

00:00:09.300 --> 00:00:12.040
I am Ibrahim Ulukaya from
YouTube API Developer Relations

00:00:12.040 --> 00:00:12.860
team.

00:00:12.860 --> 00:00:15.240
I am joining you
today from New York.

00:00:15.240 --> 00:00:17.480
Today we'll talk about
the live streaming

00:00:17.480 --> 00:00:20.490
implementation called XSplit.

00:00:20.490 --> 00:00:23.580
And I'm sure if you guys are
playing games and streaming

00:00:23.580 --> 00:00:25.430
them live, you are
already familiar

00:00:25.430 --> 00:00:27.450
with this amazing
product XSplit.

00:00:27.450 --> 00:00:31.890
But today we are really lucky to
have Henrik Levring and Miguel

00:00:31.890 --> 00:00:35.900
Molina from XSplit to join us
and talk about the product.

00:00:35.900 --> 00:00:36.400
Hi, guys.

00:00:36.400 --> 00:00:38.957
Thanks so much for joining us.

00:00:38.957 --> 00:00:40.290
HENRIK LEVRING: Good to be here.

00:00:40.290 --> 00:00:41.123
Thank you very much.

00:00:41.123 --> 00:00:42.760
MIGUEL MOLINA: Thanks.

00:00:42.760 --> 00:00:45.390
IBRAHIM ULUKAYA: And today
they'll talk about the product,

00:00:45.390 --> 00:00:47.770
and hopefully, we'll
see a nice live demo.

00:00:47.770 --> 00:00:50.560
But to start, can you talk
about the history of the product

00:00:50.560 --> 00:00:53.680
and what are the
goals behind this?

00:00:53.680 --> 00:00:55.930
HENRIK LEVRING:
Yeah, definitely.

00:00:55.930 --> 00:00:59.895
Well, originally,
SplitmediaLabs was really

00:00:59.895 --> 00:01:03.410
organized as a development
team in a European--

00:01:03.410 --> 00:01:06.020
a privately-owned outsourcing
company called World Partner.

00:01:06.020 --> 00:01:08.170
The team started
off developing a set

00:01:08.170 --> 00:01:12.650
of multimedia applications
for visual communication.

00:01:12.650 --> 00:01:15.415
And the app that we
developed back then

00:01:15.415 --> 00:01:17.570
was called XSplit Capture.

00:01:17.570 --> 00:01:23.370
And that was really more of a
one-to-few video communications

00:01:23.370 --> 00:01:24.659
product.

00:01:24.659 --> 00:01:26.200
And that's the
product based on which

00:01:26.200 --> 00:01:28.790
we got funding and
created SplitmediaLabs

00:01:28.790 --> 00:01:32.670
as a company in Hong
Kong back in 2009.

00:01:32.670 --> 00:01:35.480
This product is totally
different from how

00:01:35.480 --> 00:01:41.660
XSplit Broadcaster is
today, and basically it

00:01:41.660 --> 00:01:42.830
evolved from XSplit Capture.

00:01:42.830 --> 00:01:46.650
XSplit Capture was only
published in an internal beta.

00:01:46.650 --> 00:01:48.182
And from the
feedback we got there

00:01:48.182 --> 00:01:50.390
and through the requirements
we discovered from users

00:01:50.390 --> 00:01:54.920
and so forth, we sort of
changed it from a simple screen

00:01:54.920 --> 00:02:00.489
capture with camera thing into
a real internet TV application

00:02:00.489 --> 00:02:01.280
that we have today.

00:02:05.026 --> 00:02:06.150
IBRAHIM ULUKAYA: OK, great.

00:02:06.150 --> 00:02:09.235
Can you just show us a little
live demo of the product?

00:02:09.235 --> 00:02:10.360
HENRIK LEVRING: Absolutely.

00:02:10.360 --> 00:02:11.810
Absolutely we can do that.

00:02:11.810 --> 00:02:17.740
So I"ll just boot
up XSplit here.

00:02:17.740 --> 00:02:23.570
And probably some people might
note that it doesn't exactly

00:02:23.570 --> 00:02:25.137
look like the XSplit
that they know,

00:02:25.137 --> 00:02:26.970
and that's because the
new version of XSplit

00:02:26.970 --> 00:02:30.850
that we're using
here for this demo.

00:02:30.850 --> 00:02:34.120
So for those who
don't know XSplit,

00:02:34.120 --> 00:02:37.830
XSplit has 12 scenes as you can
see here in the right corner.

00:02:37.830 --> 00:02:41.750
And we've got input
sound and system sounds.

00:02:41.750 --> 00:02:46.950
I can drag, as you can see,
an image to my first scene.

00:02:46.950 --> 00:02:48.920
And on my second
scene, I'm going

00:02:48.920 --> 00:02:54.930
to add StarCraft II, which I'm
playing in the background here.

00:02:54.930 --> 00:02:56.890
So I've now got
two scenes set up,

00:02:56.890 --> 00:02:59.760
and I'm ready to add my
YouTube Live channel.

00:02:59.760 --> 00:03:01.940
I just go to the broadcast
menu at the channel

00:03:01.940 --> 00:03:05.870
and then I just fill in my
credentials, Google YouTube

00:03:05.870 --> 00:03:08.040
credentials.

00:03:08.040 --> 00:03:15.300
And I need to authorize
first using the OAuth 2.0,

00:03:15.300 --> 00:03:19.300
and just typing in my password.

00:03:19.300 --> 00:03:20.930
So this all runs
from Google servers

00:03:20.930 --> 00:03:26.830
and can take a little time, not
because it's Google servers.

00:03:26.830 --> 00:03:31.550
And then, yep, we
got authenticated.

00:03:34.340 --> 00:03:39.360
And we can add a
description, title,

00:03:39.360 --> 00:03:44.030
and we can also
set our category.

00:03:44.030 --> 00:03:46.020
These things we
can change as we go

00:03:46.020 --> 00:03:51.020
live, but now we're done
setting up the channel.

00:03:51.020 --> 00:03:57.800
So when we do go live now, you
can see the title bar changes,

00:03:57.800 --> 00:04:00.160
and we get a prompt here.

00:04:00.160 --> 00:04:03.150
So we can now select whether
we want to do an ad hoc event

00:04:03.150 --> 00:04:06.220
or connect to an
existing scheduled event.

00:04:06.220 --> 00:04:08.050
We can also change
our description tags,

00:04:08.050 --> 00:04:10.630
and so forth, category,
just before we go live.

00:04:10.630 --> 00:04:15.040
So consider the initial setup
as a template, so to speak.

00:04:15.040 --> 00:04:22.450
So once we're live, then we've
got a link in our clipboard,

00:04:22.450 --> 00:04:26.240
and we can try and test that
out to see if we're live.

00:04:29.490 --> 00:04:35.940
And hopefully it's going to
show up in a short while.

00:04:35.940 --> 00:04:38.475
It can take a little time.

00:04:38.475 --> 00:04:39.850
IBRAHIM ULUKAYA:
In the meantime,

00:04:39.850 --> 00:04:44.540
can you talk about the new
features in the new product?

00:04:44.540 --> 00:04:47.195
I assume that you guys have an
upload feature as well, right?

00:04:47.195 --> 00:04:48.570
HENRIK LEVRING:
Actually, you can

00:04:48.570 --> 00:04:53.600
see as I was-- some of the
features in the new product is

00:04:53.600 --> 00:04:55.110
what we're seeing right here.

00:04:55.110 --> 00:04:57.370
Once we hover our mouse
on the top of the scenes,

00:04:57.370 --> 00:05:00.304
we can see a
preview immediately.

00:05:00.304 --> 00:05:02.220
And that's definitely
one of the new features.

00:05:02.220 --> 00:05:04.300
So anyway, now as you
can see, we got live

00:05:04.300 --> 00:05:07.160
and I'm just going to
stop this broadcast now.

00:05:13.440 --> 00:05:15.730
I'll just show you
another new feature here,

00:05:15.730 --> 00:05:23.110
a very interesting thing,
which is our feature that

00:05:23.110 --> 00:05:25.870
allows XSplit to upload videos
and track videos straightly

00:05:25.870 --> 00:05:28.209
on YouTube.

00:05:28.209 --> 00:05:30.000
So as you can see here
the preview-- that's

00:05:30.000 --> 00:05:31.810
one of the features--
we're hovering a mouse

00:05:31.810 --> 00:05:33.230
across the scene and
you can see the preview.

00:05:33.230 --> 00:05:35.500
You can see what's behind
the scene, basically.

00:05:35.500 --> 00:05:39.664
Right now you can see in scene
two my StarCraft was there.

00:05:39.664 --> 00:05:41.080
So that's one of
the things that's

00:05:41.080 --> 00:05:45.810
a brilliant thing with the
new version of the product.

00:05:45.810 --> 00:05:48.360
So now I've made
a small recording,

00:05:48.360 --> 00:05:53.000
and I can then go
to my recordings

00:05:53.000 --> 00:05:55.130
where I can see the
recording I just made.

00:05:55.130 --> 00:05:56.640
I can change the thumbnail view.

00:06:00.920 --> 00:06:04.100
So this recording, I can
share it on Facebook,

00:06:04.100 --> 00:06:06.310
Twitter and in Google+, but
first I need to share it

00:06:06.310 --> 00:06:06.810
on YouTube.

00:06:06.810 --> 00:06:09.130
I need to upload it to YouTube.

00:06:09.130 --> 00:06:12.730
Then I can set my title and
my privacy settings there

00:06:12.730 --> 00:06:15.860
and, I can straightly
go and upload it.

00:06:15.860 --> 00:06:18.430
That also could
take a few seconds,

00:06:18.430 --> 00:06:23.000
but our video's not
that big, so that

00:06:23.000 --> 00:06:24.900
should be up in a few seconds.

00:06:30.284 --> 00:06:32.075
We have to have a little
patience, perhaps.

00:06:36.070 --> 00:06:41.920
So anyway, once it's up, we
can see here it has a link,

00:06:41.920 --> 00:06:44.420
and we can just check it
out to see that it actually

00:06:44.420 --> 00:06:45.430
got uploaded.

00:06:45.430 --> 00:06:51.575
Well, it's being processed
but it certainly-- it'll

00:06:51.575 --> 00:06:54.270
just take a minute.

00:06:54.270 --> 00:06:55.500
It's there already, I think.

00:06:55.500 --> 00:06:56.420
Yup.

00:06:56.420 --> 00:07:00.708
So that's the video we just
recorded a few minutes ago.

00:07:00.708 --> 00:07:01.958
IBRAHIM ULUKAYA: That's great.

00:07:05.949 --> 00:07:07.490
HENRIK LEVRING: So
as you see there's

00:07:07.490 --> 00:07:13.520
a small-- you can see a little
red thing in the video before,

00:07:13.520 --> 00:07:16.350
and that was
uploaded to YouTube.

00:07:16.350 --> 00:07:17.970
Now we're sharing
it on Facebook,

00:07:17.970 --> 00:07:27.820
and we can share it on Twitter
as well and certainly also

00:07:27.820 --> 00:07:28.320
Google+.

00:07:32.107 --> 00:07:33.690
And these sharing
features all require

00:07:33.690 --> 00:07:35.696
is that it's uploaded
to YouTube first.

00:07:35.696 --> 00:07:36.945
IBRAHIM ULUKAYA: That's right.

00:07:42.721 --> 00:07:44.470
HENRIK LEVRING: We
track the videos there.

00:07:44.470 --> 00:07:46.080
So next time you
open XSplit, you

00:07:46.080 --> 00:07:52.945
can see what videos
in my video recordings

00:07:52.945 --> 00:07:56.520
that's already on YouTube.

00:07:56.520 --> 00:07:57.930
IBRAHIM ULUKAYA: Sounds great.

00:07:57.930 --> 00:08:00.637
And thanks for
this amazing demo.

00:08:00.637 --> 00:08:03.220
Can you just talk a little bit
about how this app implemented?

00:08:03.220 --> 00:08:06.587
What programming
languages did you use?

00:08:06.587 --> 00:08:07.920
HENRIK LEVRING: Yeah, certainly.

00:08:07.920 --> 00:08:12.860
So all our core is built in
C++, because we have a lot

00:08:12.860 --> 00:08:16.330
of functions that are very
close to the operating system.

00:08:16.330 --> 00:08:19.060
So that's sort of what
we found most suitable.

00:08:19.060 --> 00:08:22.215
And the UI and other functions
such as, for example,

00:08:22.215 --> 00:08:27.570
the YouTube live broadcast
plug-in, is built using C#.

00:08:27.570 --> 00:08:30.070
IBRAHIM ULUKAYA: Was there any
reason that you guys used C#?

00:08:35.040 --> 00:08:37.039
HENRIK LEVRING: I mean,
a lot of people know C#.

00:08:37.039 --> 00:08:40.780
And it's easier, usually, to
develop interface using C#.

00:08:40.780 --> 00:08:44.390
So I think that's why
we originally chose C#.

00:08:44.390 --> 00:08:45.890
IBRAHIM ULUKAYA:
Maybe, Miguel, talk

00:08:45.890 --> 00:08:49.680
about if you guys used the APIs
through the client libraries

00:08:49.680 --> 00:08:53.418
or just straight to the codes?

00:08:53.418 --> 00:08:55.126
MIGUEL MOLINA: I think
I can answer that.

00:08:55.126 --> 00:08:56.110
HENRIK LEVRING: Yeah, I
wouldn't be able to do that.

00:08:56.110 --> 00:08:59.150
MIGUEL MOLINA: Initially we were
trying to implement it in C++.

00:08:59.150 --> 00:09:02.870
But since when we started
our implementation,

00:09:02.870 --> 00:09:05.770
the live API was
very much in beta,

00:09:05.770 --> 00:09:08.000
and a lot of things
were changing,

00:09:08.000 --> 00:09:13.770
so it was highly impractical for
us to keep rewriting our REST

00:09:13.770 --> 00:09:14.880
code in C++.

00:09:14.880 --> 00:09:19.100
So we just settled for the C#
client library that's provided

00:09:19.100 --> 00:09:20.685
by you guys.

00:09:20.685 --> 00:09:22.310
IBRAHIM ULUKAYA:
Yeah, I should mention

00:09:22.310 --> 00:09:24.760
that you guys were one
of the first implementers

00:09:24.760 --> 00:09:28.440
first using the beta
version as well.

00:09:28.440 --> 00:09:30.310
And by using it, can
you also talk about

00:09:30.310 --> 00:09:34.310
if you're using other APIs
besides live streaming?

00:09:34.310 --> 00:09:35.810
Because I saw you
were doing uploads

00:09:35.810 --> 00:09:38.169
and you were also
tracking the videos.

00:09:38.169 --> 00:09:38.960
MIGUEL MOLINA: Yes.

00:09:38.960 --> 00:09:43.500
We are actually using the
data API, both Version 2

00:09:43.500 --> 00:09:45.100
and Version 3.

00:09:45.100 --> 00:09:47.940
We mainly use the Version 3 API.

00:09:47.940 --> 00:09:52.830
But for tracking our
videos, such as tagging it

00:09:52.830 --> 00:09:56.520
with developer tags, we have
to use the Version 2 data API,

00:09:56.520 --> 00:10:01.250
because that's the only library
that supports developer tags.

00:10:01.250 --> 00:10:04.170
But we do hope that you
will support developer tags

00:10:04.170 --> 00:10:05.102
in the newer version.

00:10:05.102 --> 00:10:06.810
IBRAHIM ULUKAYA: Yeah,
there's definitely

00:10:06.810 --> 00:10:08.580
a request on that end.

00:10:08.580 --> 00:10:11.780
We hope to have the developer
text on [INAUDIBLE] as well.

00:10:11.780 --> 00:10:15.330
And besides that, can you
guys share any other feedback

00:10:15.330 --> 00:10:18.630
or where you guys had
any surprise moments when

00:10:18.630 --> 00:10:21.530
you were implementing this API?

00:10:21.530 --> 00:10:23.650
MIGUEL MOLINA: Well,
back when we started,

00:10:23.650 --> 00:10:27.910
we were actually surprised that
there was no live viewer count.

00:10:27.910 --> 00:10:29.970
That was, I think,
early this year.

00:10:29.970 --> 00:10:34.695
But it's already implemented
now in your latest release, so

00:10:34.695 --> 00:10:36.050
[INAUDIBLE] with that.

00:10:36.050 --> 00:10:39.750
And we were also surprised
with the way broadcasts

00:10:39.750 --> 00:10:44.020
and streams were
kind of different,

00:10:44.020 --> 00:10:49.070
because in our other use
cases, we just kind of stream

00:10:49.070 --> 00:10:52.270
straight to an
endpoint, and that's it.

00:10:52.270 --> 00:10:55.447
They have one end
point and then we

00:10:55.447 --> 00:10:57.030
take note of that
and we stream to it.

00:10:57.030 --> 00:11:01.810
But in your API, you create
multiple stream objects

00:11:01.810 --> 00:11:03.460
and then you bind
them to broadcast

00:11:03.460 --> 00:11:05.610
objects which are
the actual events.

00:11:05.610 --> 00:11:10.210
And from what I understand
is, the stream objects to it

00:11:10.210 --> 00:11:12.310
so that the end points
can be reusable,

00:11:12.310 --> 00:11:17.400
and the settings are
very much preset.

00:11:17.400 --> 00:11:21.060
So you can just select which
particular broadcast resolution

00:11:21.060 --> 00:11:24.190
you're going to be going for and
then just bind it to an event.

00:11:24.190 --> 00:11:25.719
I think that's
how you wanted it.

00:11:25.719 --> 00:11:27.135
IBRAHIM ULUKAYA:
Yeah, definitely.

00:11:27.135 --> 00:11:28.570
You summarized it
for me already.

00:11:31.110 --> 00:11:33.900
And are there any features?

00:11:33.900 --> 00:11:36.745
Or do you guys want
to [INAUDIBLE]?

00:11:40.920 --> 00:11:42.920
MIGUEL MOLINA:
Currently, I guess

00:11:42.920 --> 00:11:48.230
we would like to enable
our broadcasters to be

00:11:48.230 --> 00:11:54.030
able to interact with
our viewers more.

00:11:54.030 --> 00:11:57.980
And to do that, you need
some sort of implementation

00:11:57.980 --> 00:11:59.320
for your live comments.

00:11:59.320 --> 00:12:08.350
But we also noticed a big delay
from the real-time broadcast

00:12:08.350 --> 00:12:11.590
to the actual thing
that you see on YouTube.

00:12:11.590 --> 00:12:14.040
So there's, like, a
40, 45-second delay.

00:12:14.040 --> 00:12:20.090
And that would probably kill any
sort of real-time interaction

00:12:20.090 --> 00:12:24.090
between viewers
and broadcasters.

00:12:24.090 --> 00:12:25.830
HENRIK LEVRING: Yeah,
I think it's right.

00:12:25.830 --> 00:12:27.371
I mean, the big
missing feature right

00:12:27.371 --> 00:12:30.580
now is really low latency
and then real-time comments.

00:12:30.580 --> 00:12:31.840
MIGUEL MOLINA: Yes.

00:12:31.840 --> 00:12:35.740
HENRIK LEVRING: We see a lot
of the big streams in gaming

00:12:35.740 --> 00:12:41.670
where, really, the broadcaster
feeds off the user's comments.

00:12:41.670 --> 00:12:43.510
Do this, go there,
and they really

00:12:43.510 --> 00:12:46.840
have a wonderful
interaction there.

00:12:46.840 --> 00:12:50.340
And so we'd love to see that
on YouTube Live as well.

00:12:50.340 --> 00:12:52.090
That's the biggest
missing feature, right?

00:12:52.090 --> 00:12:53.380
MIGUEL MOLINA:
Yeah, I believe so.

00:12:53.380 --> 00:12:54.720
IBRAHIM ULUKAYA: Yeah, thanks
for the valuable feedback.

00:12:54.720 --> 00:12:56.620
I'm sure, actually,
we are really

00:12:56.620 --> 00:12:59.840
doing our best to get
latency lowest as possible,

00:12:59.840 --> 00:13:02.820
and hopefully we'll
have comments in future.

00:13:02.820 --> 00:13:05.650
And maybe like to summarize,
I heard, actually,

00:13:05.650 --> 00:13:08.250
you guys also have
opportunities in XSplit as well.

00:13:08.250 --> 00:13:11.020
Can you guys talk a little bit?

00:13:11.020 --> 00:13:13.460
HENRIK LEVRING:
Yeah, absolutely.

00:13:13.460 --> 00:13:16.380
So we're definitely
also hiring in XSplit.

00:13:16.380 --> 00:13:19.340
You can go to
XSplit.com/careers.

00:13:19.340 --> 00:13:22.830
And I think we have positions
open both for bus developers,

00:13:22.830 --> 00:13:25.610
shop developers, web
developers, and so forth.

00:13:25.610 --> 00:13:31.020
And our development center
is located in Manila,

00:13:31.020 --> 00:13:32.700
but we're certainly
also accepting

00:13:32.700 --> 00:13:37.600
applications from developers
from other countries, US,

00:13:37.600 --> 00:13:40.179
and so forth.

00:13:40.179 --> 00:13:41.220
So yeah, that'd be great.

00:13:41.220 --> 00:13:44.570
Go to XSplit.com/careers and
see if there might be a position

00:13:44.570 --> 00:13:45.945
you guys would
like to apply for.

00:13:45.945 --> 00:13:48.620
IBRAHIM ULUKAYA: OK, thanks
so much for joining me today,

00:13:48.620 --> 00:13:49.120
guys.

00:13:49.120 --> 00:13:51.210
It was really nice
to see the live demo

00:13:51.210 --> 00:13:55.270
and talk about XSplit
product, and I really

00:13:55.270 --> 00:13:58.080
hope to see the new
features and the new version

00:13:58.080 --> 00:14:00.369
publicly available really soon.

00:14:00.369 --> 00:14:02.410
HENRIK LEVRING: It was
great to be here, Ibrahim.

00:14:02.410 --> 00:14:02.850
Thank you.

00:14:02.850 --> 00:14:04.360
MIGUEL MOLINA: Yeah,
thank you for having us.

00:14:04.360 --> 00:14:05.610
IBRAHIM ULUKAYA: Thanks a lot.

00:14:05.610 --> 00:14:07.660
And lastly, I just
want to finish up

00:14:07.660 --> 00:14:09.920
with saying to the viewers
there's a Google Developer

00:14:09.920 --> 00:14:11.150
Relations team.

00:14:11.150 --> 00:14:13.040
We are hiring almost
everywhere in the world.

00:14:13.040 --> 00:14:18.680
You can always check the options
from developer.google.com/jobs.

00:14:18.680 --> 00:14:20.720
And thanks for joining
me today, guys.

00:14:20.720 --> 00:14:22.260
And have a nice day.

00:14:22.260 --> 00:14:24.810
Ibrahim Ulukaya from New York.

