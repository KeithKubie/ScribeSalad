WEBVTT
Kind: captions
Language: en

00:00:00.701 --> 00:00:01.400
Gundrota: that's moving,

00:00:01.400 --> 00:00:02.701
and it's gonna do that
in the background

00:00:02.701 --> 00:00:04.133
so the app's still responsive.

00:00:04.133 --> 00:00:05.667
Watch this.

00:00:10.667 --> 00:00:13.200
The boxes in the right
are differentials.

00:00:13.200 --> 00:00:14.567
How crazy is that?

00:00:14.567 --> 00:00:17.033
Did you ever think you'd see
background processing--

00:00:17.033 --> 00:00:18.934
Uh, you'd see
video motion detection

00:00:18.934 --> 00:00:20.734
done in JavaScript
in the browser?

00:00:20.734 --> 00:00:21.968
You know, I certainly didn't.

00:00:21.968 --> 00:00:24.133
This is just fantastic,
and a great demonstration

00:00:24.133 --> 00:00:26.367
of these capabilities
all coming together,

00:00:26.367 --> 00:00:29.200
and the kind of rich app
that we can now start to build

00:00:29.200 --> 00:00:30.334
within the browser.

00:00:30.334 --> 00:00:32.434
So I hope you liked that.

00:00:32.434 --> 00:00:35.367
[applause]

00:00:37.567 --> 00:00:39.133
Let's go back to slides.
Very good.

00:00:39.133 --> 00:00:41.133
And once again, that capability,

00:00:41.133 --> 00:00:44.801
broadly available
in these modern browsers.

00:00:44.801 --> 00:00:47.133
So I hope you've enjoyed
that section of the talk.

00:00:47.133 --> 00:00:49.934
That was about
a more powerful web,

00:00:49.934 --> 00:00:54.200
and how as an industry we are
creating new capabilities

00:00:54.200 --> 00:00:56.968
and, uh, but it's still
up to us as a community

00:00:56.968 --> 00:00:58.367
to build the applications

00:00:58.367 --> 00:01:00.501
that take advantage
of that more powerful web.

00:01:00.501 --> 00:01:02.734
I'm going to pivot
at this point,

00:01:02.734 --> 00:01:05.033
and now talk about
making it easier

00:01:05.033 --> 00:01:06.601
to build those kind of apps

00:01:06.601 --> 00:01:08.934
and how Google Services
can help you.

00:01:08.934 --> 00:01:11.901
Obviously if you came to last
year's development conference,

00:01:11.901 --> 00:01:14.167
or attended any
of our Google Campfire Ones

00:01:14.167 --> 00:01:15.400
or watched them online,

00:01:15.400 --> 00:01:17.634
you know that Google's
deeply interested

00:01:17.634 --> 00:01:20.467
in making it easier
for you to build web apps.

00:01:20.467 --> 00:01:22.467
Two of our offerings
in this space

00:01:22.467 --> 00:01:25.767
have been Google App Engine
and Google Web Toolkit.

00:01:25.767 --> 00:01:29.000
Google App Engine's value
proposition was very simple.

00:01:29.000 --> 00:01:32.667
We said, let us provide
the hosting for your app

00:01:32.667 --> 00:01:35.601
so you don't have to worry
about machine instances,

00:01:35.601 --> 00:01:37.767
you don't have to worry
about the app's scaling,

00:01:37.767 --> 00:01:40.901
you don't have to carry a pager;
we'll do that for you.

00:01:40.901 --> 00:01:43.167
And we're gonna give you
an update on that in a moment.

00:01:43.167 --> 00:01:46.033
Google Web Toolkit had
a different, uh, proposition.

00:01:46.033 --> 00:01:49.968
It said, write in Java,
and we'll compile down,

00:01:49.968 --> 00:01:51.767
understand which browser's
being used,

00:01:51.767 --> 00:01:53.667
and push down
the appropriate JavaScript,

00:01:53.667 --> 00:01:55.467
and do it in a fantastic way

00:01:55.467 --> 00:01:57.667
that allows you
to target multiple browsers.

00:01:57.667 --> 00:01:58.868
To give you an update

00:01:58.868 --> 00:02:01.234
on Google App Engine
and Google Web Toolkit,

00:02:01.234 --> 00:02:05.968
let me invite up Andrew Bowers
and Kevin Gibbs.

00:02:05.968 --> 00:02:07.400
[applause]

00:02:07.400 --> 00:02:09.234
Thank you, guys.

00:02:09.234 --> 00:02:11.300
both: Thanks, Vic.

00:02:14.334 --> 00:02:16.601
Gibbs: You know, the interest
in adoption that we've seen

00:02:16.601 --> 00:02:18.534
in Google App Engine
over the past year

00:02:18.534 --> 00:02:20.467
has been truly remarkable.

00:02:20.467 --> 00:02:23.834
We've had over 200,000
developers sign up

00:02:23.834 --> 00:02:25.734
to use Google App Engine,

00:02:25.734 --> 00:02:27.467
and not a single one
of those developers

00:02:27.467 --> 00:02:30.901
had to purchase or provision
a server to get started.

00:02:30.901 --> 00:02:33.534
They were able to develop
their application locally

00:02:33.534 --> 00:02:36.868
on their own machine,
be it Mac, Windows, or Linux,

00:02:36.868 --> 00:02:39.267
and leave the servers to us.

00:02:39.267 --> 00:02:41.367
Now, our SDK is just
three megabytes.

00:02:41.367 --> 00:02:43.100
If you haven't tried out
App Engine before,

00:02:43.100 --> 00:02:46.501
I encourage you to download it.
Give it a shot.

00:02:46.501 --> 00:02:49.567
Now, since we launched
App Engine last year,

00:02:49.567 --> 00:02:52.200
we've also had
over 80,000 applications

00:02:52.200 --> 00:02:54.501
deployed on Google App Engine.

00:02:54.501 --> 00:02:56.801
Now, often these applications
have been created

00:02:56.801 --> 00:02:58.801
by small and agile teams

00:02:58.801 --> 00:03:00.868
like many of you
in the audience here,

00:03:00.868 --> 00:03:03.601
and they can be because
with App Engine

00:03:03.601 --> 00:03:05.868
you don't have to worry
about your configuration,

00:03:05.868 --> 00:03:09.334
your up time, or usage spikes,
or re-architecting

00:03:09.334 --> 00:03:13.300
your application once it
finally starts to get popular.

00:03:13.300 --> 00:03:15.634
In fact, we were able
to put this, uh--

00:03:15.634 --> 00:03:17.834
this policy
to the test ourselves

00:03:17.834 --> 00:03:20.567
when the White House decided
to use Google Moderator,

00:03:20.567 --> 00:03:22.267
which runs on Google App Engine,

00:03:22.267 --> 00:03:25.701
for President Obama's
live town hall event.

00:03:25.701 --> 00:03:29.067
Despite a traffic peak
of 700 requests per second,

00:03:29.067 --> 00:03:32.300
and promotions on all the major
search engines and news sites,

00:03:32.300 --> 00:03:34.100
the application scaled
to meet the traffic,

00:03:34.100 --> 00:03:37.734
and none of the other
applications were affected.

00:03:37.734 --> 00:03:39.400
Now, over the past year
we've also launched

00:03:39.400 --> 00:03:42.834
a number of features
and improvement to App Engine,

00:03:42.834 --> 00:03:46.133
including things
like our SSL support,

00:03:46.133 --> 00:03:50.167
memcache API,
the system status site,

00:03:50.167 --> 00:03:53.267
uh, access to secure data
behind the firewall,

00:03:53.267 --> 00:03:58.567
and the ability to pay for usage
beyond our free quotas.

00:03:58.567 --> 00:04:00.934
Now, we've also found
that there's a number

00:04:00.934 --> 00:04:02.834
of additional things
that we'll launch to you

00:04:02.834 --> 00:04:04.100
in the coming months.

00:04:04.100 --> 00:04:05.367
They include things like

00:04:05.367 --> 00:04:07.801
background processing
for your jobs

00:04:07.801 --> 00:04:10.868
and large object support
for your application.

00:04:10.868 --> 00:04:12.434
If you'd like to learn more,

00:04:12.434 --> 00:04:15.067
I'd urge you to come to our
sessions here at Google I/O

00:04:15.067 --> 00:04:17.501
over the next two days.

00:04:17.501 --> 00:04:19.434
Now, certainly the feature
that we've launched recently

00:04:19.434 --> 00:04:22.000
that's generated the most noise
and the most buzz

00:04:22.000 --> 00:04:24.801
is our Java language support.

00:04:24.801 --> 00:04:27.000
The interest in our Java support
since we launched it

00:04:27.000 --> 00:04:30.501
a month and a half ago
has been remarkable.

00:04:30.501 --> 00:04:31.901
In a matter of days,

00:04:31.901 --> 00:04:34.534
even hours since we launched
our Java support,

00:04:34.534 --> 00:04:38.367
we saw developers--many of you
in the audience here today--

00:04:38.367 --> 00:04:41.400
dive in and get
not only Java frameworks

00:04:41.400 --> 00:04:45.000
working on App Engine,
but also other JVM languages.

00:04:45.000 --> 00:04:48.367
Including things
like JRuby, Groovy,

00:04:48.367 --> 00:04:51.400
Scala, and even PHP.

00:04:51.400 --> 00:04:53.567
And that, we thought,
was truly amazing.

00:04:53.567 --> 00:04:54.834
I'd like to say thank you

00:04:54.834 --> 00:04:57.400
for all of you early adopters
who gave us a try

00:04:57.400 --> 00:05:00.701
and gave us the feedback
with the system.

00:05:00.701 --> 00:05:03.734
Now, we found that the demand
for Java on App Engine

00:05:03.734 --> 00:05:07.801
has been so overwhelming,
and the response so positive,

00:05:07.801 --> 00:05:10.033
we think that we're ready
to take the next step

00:05:10.033 --> 00:05:12.367
with Java on App Engine.

00:05:12.367 --> 00:05:14.501
So I'd like to announce--

00:05:14.501 --> 00:05:15.834
sorry, let's skip this slide.

00:05:15.834 --> 00:05:18.067
I'd like to announce
that we are opening sign-ups

00:05:18.067 --> 00:05:21.067
for Java on App Engine
as of right now.

00:05:21.067 --> 00:05:25.634
Anyone can now log in and create
a Java application immediately.

00:05:25.634 --> 00:05:27.667
[applause]

00:05:27.667 --> 00:05:30.901
Thank you.

00:05:30.901 --> 00:05:33.467
Now with that, I'd like
to stop telling you

00:05:33.467 --> 00:05:35.267
about our Java support
in App Engine,

00:05:35.267 --> 00:05:37.100
and start showing you.

00:05:37.100 --> 00:05:39.467
So I'd like to pull over
Andrew Bowers.

00:05:39.467 --> 00:05:41.434
Andrew is gonna
demonstrate to you

00:05:41.434 --> 00:05:45.100
how we have an NTN Solution
for creating Java applications

00:05:45.100 --> 00:05:49.300
using Google Web Toolkit
and Google App Engine.

00:05:49.300 --> 00:05:50.801
Andrew's gonna demonstrate
to you how we think we have

00:05:50.801 --> 00:05:53.868
a way to make applications
both more scalable

00:05:53.868 --> 00:05:55.834
and easier to use

00:05:55.834 --> 00:05:57.968
with back-ends running
on Google App Engine,

00:05:57.968 --> 00:05:59.868
and front-ends built
with Google Web Toolkit.

00:05:59.868 --> 00:06:00.934
Andrew.

00:06:00.934 --> 00:06:02.367
Bowers: Thanks, Kevin.

00:06:02.367 --> 00:06:04.667
So if any of you have ever
done Java development,

00:06:04.667 --> 00:06:06.901
you've probably experienced
the frustrating lag

00:06:06.901 --> 00:06:09.167
between getting a development
environment set up

00:06:09.167 --> 00:06:11.334
and actually deploying
something to the web.

00:06:11.334 --> 00:06:12.801
And if you're working
on a weekend project,

00:06:12.801 --> 00:06:14.601
maybe you decided to go ahead
and use something

00:06:14.601 --> 00:06:16.601
like Ruby on Rails 'cause you
wanted to actually

00:06:16.601 --> 00:06:17.934
get something out there.

00:06:17.934 --> 00:06:20.267
So we definitely recognize
that pain and frustration

00:06:20.267 --> 00:06:23.000
in our own lives, and tried
to make the on-ramp to a new app

00:06:23.000 --> 00:06:24.567
as quick as possible.

00:06:24.567 --> 00:06:27.167
So to demonstrate, I'm going
to create the starter project

00:06:27.167 --> 00:06:28.501
from the Eclipse plug-in;

00:06:28.501 --> 00:06:30.434
I'm gonna deploy
that to the web.

00:06:30.434 --> 00:06:32.701
And I'm gonna use Google
Web Toolkit and App Engine

00:06:32.701 --> 00:06:35.100
and hopeful--it should take me
about 2 1/2 minutes,

00:06:35.100 --> 00:06:37.000
so somewhere around
there's my goal.

00:06:37.000 --> 00:06:38.868
So here I have the Eclipse
development environment.

00:06:38.868 --> 00:06:40.234
and let's just get started.

00:06:40.234 --> 00:06:43.000
I'm gonna go ahead and open up
the new project wizard.

00:06:43.000 --> 00:06:47.901
I'll create something called
"com.google," create a package.

00:06:47.901 --> 00:06:50.701
And I'm gonna use Google
Web Toolkit and App Engine.

00:06:50.701 --> 00:06:52.901
And this is gonna create
the starter project for me.

00:06:52.901 --> 00:06:54.567
Looks like we already
had something running.

00:06:54.567 --> 00:06:58.067
We'll go ahead and stop that.

00:06:58.067 --> 00:07:00.434
And now I'm gonna start that
on a local server.

00:07:00.434 --> 00:07:02.767
So this is a--

00:07:02.767 --> 00:07:04.734
Has everything I need already.

00:07:04.734 --> 00:07:06.601
I didn't have to install Tomcat,

00:07:06.601 --> 00:07:09.200
all I did was I installed
the Google plug-in for Eclipse

00:07:09.200 --> 00:07:10.400
into my Eclipse
development environment.

00:07:10.400 --> 00:07:12.968
That downloaded
the App Engine SDK,

00:07:12.968 --> 00:07:16.167
the Google Web Toolkit SDK,
and the local development server

00:07:16.167 --> 00:07:17.901
which mimics
the production environment.

00:07:17.901 --> 00:07:20.968
So now I have a, uh,
very simple Ajax application.

00:07:20.968 --> 00:07:22.300
It takes some text here.

00:07:22.300 --> 00:07:24.534
It synchronously sends that
to the server,

00:07:24.534 --> 00:07:26.667
echoes the text back,
as you can see,

00:07:26.667 --> 00:07:28.067
and then gives me
a little information

00:07:28.067 --> 00:07:29.601
about the server
that I'm running.

00:07:29.601 --> 00:07:31.767
Just so we can tell that it's
actually going to the server.

00:07:31.767 --> 00:07:34.367
So if we look
at the code for that...

00:07:34.367 --> 00:07:36.200
Open up the project here.

00:07:36.200 --> 00:07:39.868
You can see I have a client
package and a server package.

00:07:39.868 --> 00:07:41.701
Now, all of the code
inside my client package

00:07:41.701 --> 00:07:43.534
is Google Web Toolkit code

00:07:43.534 --> 00:07:46.367
that's Java code that's going
to be compiled into JavaScript

00:07:46.367 --> 00:07:47.868
in the final step.

00:07:47.868 --> 00:07:49.267
And it's using--

00:07:49.267 --> 00:07:51.300
Uh, it's using widgets
and it's using events

00:07:51.300 --> 00:07:54.033
so they're abstracted away so
that it'll work across browsers.

00:07:54.033 --> 00:07:58.467
So I could change the text
on the button here to "Post."

00:07:58.467 --> 00:08:01.734
Inside my server package
I have Java classes

00:08:01.734 --> 00:08:03.934
that are grown as bytecode
on the server

00:08:03.934 --> 00:08:06.067
and you can see
that I'm getting RPC,

00:08:06.067 --> 00:08:07.234
and I'm echoing it back,

00:08:07.234 --> 00:08:11.434
so we'll say,
"Hello from Google I/O."

00:08:11.434 --> 00:08:13.634
And we'll save that there.

00:08:13.634 --> 00:08:14.634
Now if I go back--

00:08:14.634 --> 00:08:16.634
So I've just edited Java code.

00:08:16.634 --> 00:08:20.167
I'm gonna go back to my browser,
I'll click "Refresh."

00:08:20.167 --> 00:08:21.968
And I see it says "Post,"

00:08:21.968 --> 00:08:24.000
and I see it says,
"Hello from Google I/O."

00:08:24.000 --> 00:08:25.300
So I just edited Java,

00:08:25.300 --> 00:08:27.234
but I'm seeing those changes
now on my browser.

00:08:27.234 --> 00:08:29.400
Okay, so I've got
a-a small, functioning app.

00:08:29.400 --> 00:08:32.434
Let's go ahead and deploy
that out to the web.

00:08:32.434 --> 00:08:34.834
Go back into Eclipse,
I'll go up to the deploy wizard,

00:08:34.834 --> 00:08:37.067
and you'll notice there's
an error here right now.

00:08:37.067 --> 00:08:39.434
That's 'cause I haven't
set an application ID.

00:08:39.434 --> 00:08:42.200
So I'm gonna go
to the App Engine console,

00:08:42.200 --> 00:08:46.834
and I'll create
a new application ID.

00:08:46.834 --> 00:08:50.100
We'll say, "demoforio."

00:08:50.100 --> 00:08:51.801
And we'll save that,

00:08:51.801 --> 00:08:57.334
and hope no one
beat me to it out there.

00:08:57.334 --> 00:09:00.501
Okay. You're not fast enough.

00:09:00.501 --> 00:09:02.567
Great, so we'll go back.

00:09:02.567 --> 00:09:05.501
I had some backups just in case.

00:09:05.501 --> 00:09:08.567
So we'll set the application ID
here in the environment.

00:09:08.567 --> 00:09:09.901
And all I need to do now

00:09:09.901 --> 00:09:12.801
is enter in my username
and password.

00:09:12.801 --> 00:09:14.100
Then hit the "Deploy" button.

00:09:14.100 --> 00:09:15.801
The SDK has taken care
of the rest for me.

00:09:15.801 --> 00:09:18.567
So it's going to convert
that Java code

00:09:18.567 --> 00:09:21.634
from Google Web Toolkit in the
client package to JavaScript,

00:09:21.634 --> 00:09:24.968
it's going to compile the,
uh, Java code to bytecode,

00:09:24.968 --> 00:09:26.601
for the server side stuff,

00:09:26.601 --> 00:09:28.667
package all of that up
into a web archive directory

00:09:28.667 --> 00:09:30.033
and deploy it to the server.

00:09:30.033 --> 00:09:33.367
There's no FTP involved by me,
no server configuration;

00:09:33.367 --> 00:09:35.200
everything's handled
within the SDK.

00:09:35.200 --> 00:09:36.234
And I could do this
from the command line

00:09:36.234 --> 00:09:37.801
if I wanted to as well.

00:09:37.801 --> 00:09:39.601
And so now we should have
a deployed app.

00:09:39.601 --> 00:09:41.701
And hopefully within
a few minutes, here.

00:09:41.701 --> 00:09:46.367
So let's go to that
demoforio.appspot.

00:09:50.300 --> 00:09:52.167
And so I've got
a fully functioning,

00:09:52.167 --> 00:09:54.334
if not very functional,
app out on the web.

00:09:54.334 --> 00:09:57.267
[applause]

