WEBVTT
Kind: captions
Language: en

00:00:05.690 --> 00:00:07.110
IRIS UY: Hi, I'm Iris.

00:00:07.110 --> 00:00:08.140
EMMA YEAP: And I'm Emma.

00:00:08.140 --> 00:00:10.640
IRIS UY: And we're engineering
practicum interns this summer

00:00:10.640 --> 00:00:11.720
at Google Sydney.

00:00:11.720 --> 00:00:13.261
EMMA YEAP: Today,
we're going to talk

00:00:13.261 --> 00:00:15.390
about what we've been
working on over the summer.

00:00:15.390 --> 00:00:18.840
We've added heat maps to the
Google Maps Android API utility

00:00:18.840 --> 00:00:20.180
library.

00:00:20.180 --> 00:00:21.730
IRIS UY: On a map,
we use a heat map

00:00:21.730 --> 00:00:24.920
to visualize the large number
of geographical points.

00:00:24.920 --> 00:00:27.420
Different colors or
opacities represent areas

00:00:27.420 --> 00:00:29.700
with different
intensities of points.

00:00:29.700 --> 00:00:32.240
In general, higher
intensities correspond

00:00:32.240 --> 00:00:34.142
to warmer colors,
hence the name.

00:00:34.142 --> 00:00:36.350
EMMA YEAP: Heat maps, which
are also sometimes called

00:00:36.350 --> 00:00:38.410
intensity maps, are
useful for visualizing

00:00:38.410 --> 00:00:41.480
large geographical data sets
to display overall location

00:00:41.480 --> 00:00:42.510
trends.

00:00:42.510 --> 00:00:44.090
IRIS UY: For
example, here we use

00:00:44.090 --> 00:00:46.490
heat maps to illustrate the
different types of places

00:00:46.490 --> 00:00:48.730
around Sydney's CBD.

00:00:48.730 --> 00:00:51.820
A place is a point of
interest that has a location.

00:00:51.820 --> 00:00:55.134
For example, a restaurant
or shop or attraction.

00:00:55.134 --> 00:00:57.550
EMMA YEAP: This demo uses the
radar search from the Google

00:00:57.550 --> 00:00:59.660
Places API to obtain
search results

00:00:59.660 --> 00:01:01.560
for a user-inputted
keyword and renders

00:01:01.560 --> 00:01:04.000
the location of the
results as a heat map.

00:01:04.000 --> 00:01:05.640
If the user enters
more key words,

00:01:05.640 --> 00:01:08.200
the app creates more heat map
layers with different colors,

00:01:08.200 --> 00:01:10.910
allowing the user to
visually compare the results.

00:01:10.910 --> 00:01:12.760
IRIS UY: Find out more
about the Places API

00:01:12.760 --> 00:01:15.390
from the developer
documentation.

00:01:15.390 --> 00:01:16.850
The heat maps
library is included

00:01:16.850 --> 00:01:21.040
as part of the Google Maps
Android API utility library.

00:01:21.040 --> 00:01:22.780
Instructions on how
to set up the library

00:01:22.780 --> 00:01:25.491
and where you can view the
source code are linked below.

00:01:25.491 --> 00:01:26.990
EMMA YEAP: We've
used a tile overlay

00:01:26.990 --> 00:01:28.840
to display the heat map.

00:01:28.840 --> 00:01:30.480
A tile overlay is
a set of images

00:01:30.480 --> 00:01:31.930
displayed over the map tiles.

00:01:31.930 --> 00:01:34.180
To do this, we first
create a tile provider,

00:01:34.180 --> 00:01:36.850
which creates tile
images client side.

00:01:36.850 --> 00:01:39.230
Then we create a tile overlay
with the tile provider

00:01:39.230 --> 00:01:40.800
and add it to the map.

00:01:40.800 --> 00:01:43.780
IRIS UY: To start off with,
create a new heat map tile

00:01:43.780 --> 00:01:45.175
provider using the builder.

00:01:45.175 --> 00:01:47.720
You must provide a
collection of lat longs

00:01:47.720 --> 00:01:50.427
or weighted lat longs that
represent your input data.

00:01:50.427 --> 00:01:52.760
EMMA YEAP: A weighted lat
long can be created from a lat

00:01:52.760 --> 00:01:54.940
long and, optionally,
has an intensity value

00:01:54.940 --> 00:01:57.190
that you can use
to weight points.

00:01:57.190 --> 00:01:59.890
Other openings are also
configurable at this stage,

00:01:59.890 --> 00:02:02.190
such as which colors
the heat map uses.

00:02:02.190 --> 00:02:05.260
IRIS UY: The colors are defined
using the gradient class.

00:02:05.260 --> 00:02:07.660
The gradient is created
using two arrays.

00:02:07.660 --> 00:02:10.289
An integer array
representing the colors,

00:02:10.289 --> 00:02:12.460
and a float array
representing the values

00:02:12.460 --> 00:02:14.900
that the respective
colors represent.

00:02:14.900 --> 00:02:16.970
These floats are
expressed as fractions

00:02:16.970 --> 00:02:19.350
from zero to one of
the maximum intensity

00:02:19.350 --> 00:02:20.677
value of the heat map.

00:02:20.677 --> 00:02:22.510
EMMA YEAP: For example,
the default heat map

00:02:22.510 --> 00:02:24.710
is generated with
the values shown.

00:02:24.710 --> 00:02:27.410
The gradient class uses these
and interpolates between them

00:02:27.410 --> 00:02:30.165
to generate the colors
used in the heat map.

00:02:30.165 --> 00:02:32.540
You can create the heat map
with your own custom gradient

00:02:32.540 --> 00:02:35.480
by providing it to
the builder as shown.

00:02:35.480 --> 00:02:39.180
IRIS UY: Now, use this provider
to add a new tile overlay

00:02:39.180 --> 00:02:40.630
to your map.

00:02:40.630 --> 00:02:43.880
This is all you need to add
a basic heat map to a map.

00:02:43.880 --> 00:02:46.370
EMMA YEAP: You can change
options such as radius,

00:02:46.370 --> 00:02:50.350
opacity, and gradient both
at and after creation.

00:02:50.350 --> 00:02:53.780
You can also change the data set
to completely different data,

00:02:53.780 --> 00:02:55.780
or to an updated version.

00:02:55.780 --> 00:02:58.140
IRIS UY: To do this,
call the relevant set x

00:02:58.140 --> 00:03:01.460
method on the provider, then
clear the overlay's tile case

00:03:01.460 --> 00:03:04.974
so that it redraws all the tiles
with the new option values.

00:03:04.974 --> 00:03:06.390
EMMA YEAP: Thank
you for watching.

00:03:06.390 --> 00:03:08.723
IRIS UY: Also, if you'd like
to learn more about student

00:03:08.723 --> 00:03:11.370
opportunities and intern
programs at Google,

00:03:11.370 --> 00:03:13.610
visit the link below.

