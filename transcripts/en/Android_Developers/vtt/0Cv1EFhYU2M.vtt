WEBVTT
Kind: captions
Language: en

00:00:01.300 --> 00:00:03.095
JEFF: Hi everybody.

00:00:03.095 --> 00:00:05.220
My name is Jeff Bush and
I'm an engineering manager

00:00:05.220 --> 00:00:06.650
on the Android Auto team.

00:00:06.650 --> 00:00:08.150
So great to see so
many people here.

00:00:08.150 --> 00:00:11.250
I hope people didn't
get too sunburned today.

00:00:11.250 --> 00:00:14.034
So we're going to talk about a
few things in today's session.

00:00:14.034 --> 00:00:15.950
First I'm going to spend
a few minutes talking

00:00:15.950 --> 00:00:18.490
about where we are today
and what we're working on.

00:00:18.490 --> 00:00:20.300
Then a few of my
colleagues are going

00:00:20.300 --> 00:00:22.092
to come up and do
some short demos,

00:00:22.092 --> 00:00:23.550
but the majority
of this session is

00:00:23.550 --> 00:00:26.133
going to be a deep dive into how
to bring your apps to Android

00:00:26.133 --> 00:00:28.210
Auto.

00:00:28.210 --> 00:00:31.021
In 2014 we launched Android
Auto with our partners

00:00:31.021 --> 00:00:32.729
in the Open Automotive
Alliance to create

00:00:32.729 --> 00:00:36.430
a platform for connected
services in the car.

00:00:36.430 --> 00:00:38.880
In the two years since we've
gained a lot of momentum.

00:00:38.880 --> 00:00:40.526
We now have 40
manufacturers signed up

00:00:40.526 --> 00:00:41.900
to support Android
Auto and there

00:00:41.900 --> 00:00:43.780
are over 100 models
of cars on the road

00:00:43.780 --> 00:00:45.447
today that use Android Auto.

00:00:45.447 --> 00:00:47.030
By the end of the
year we're expecting

00:00:47.030 --> 00:00:49.700
to double this number to 200
and support every major car

00:00:49.700 --> 00:00:51.820
manufacturer.

00:00:51.820 --> 00:00:53.787
And developers are
flocking to the platform.

00:00:53.787 --> 00:00:55.620
We currently have
hundreds of apps available

00:00:55.620 --> 00:00:56.870
and more are coming every day.

00:00:56.870 --> 00:00:58.870
So I want to take a
minute to say thank you

00:00:58.870 --> 00:01:02.410
to all the developers who
have supported Android Auto.

00:01:02.410 --> 00:01:04.160
We've also recently
launched Android Auto

00:01:04.160 --> 00:01:07.240
in 19 new countries including
Brazil, Russia, and India

00:01:07.240 --> 00:01:11.267
which brings us to 30 countries
and more are on the way.

00:01:11.267 --> 00:01:13.600
We're really excited about
how far the platform has come

00:01:13.600 --> 00:01:16.070
and we're even more
excited about the future.

00:01:16.070 --> 00:01:18.404
We've gotten a lot of great
feedback from our users

00:01:18.404 --> 00:01:20.570
and I'm pleased to say that
the three most requested

00:01:20.570 --> 00:01:23.030
features are coming soon.

00:01:23.030 --> 00:01:24.740
The first is OK Google.

00:01:24.740 --> 00:01:27.600
Android Auto already supports
a rich voice interface,

00:01:27.600 --> 00:01:29.640
but being able to initiate
commands hands-free

00:01:29.640 --> 00:01:31.090
is a natural for the car.

00:01:31.090 --> 00:01:35.090
So we're bringing OK Google
hotwording to Android Auto.

00:01:35.090 --> 00:01:37.114
The second is Ways.

00:01:37.114 --> 00:01:39.280
As someone who commutes
every day in Silicon Valley,

00:01:39.280 --> 00:01:40.854
I'm pretty excited about this.

00:01:40.854 --> 00:01:43.412
[APPLAUSE] Ways has
an active community

00:01:43.412 --> 00:01:45.870
of millions of users sharing
real time traffic and accident

00:01:45.870 --> 00:01:47.720
information to save
time on the commute.

00:01:47.720 --> 00:01:50.704
And Waysers have been very vocal
about Android Auto support.

00:01:50.704 --> 00:01:52.870
So we've been working with
Ways to make that happen.

00:01:52.870 --> 00:01:54.180
I think they've
done an awesome job

00:01:54.180 --> 00:01:55.900
and you can actually see it
in action in our demo cars

00:01:55.900 --> 00:01:57.560
in the sandbox
right over that way.

00:02:00.160 --> 00:02:02.037
The third is wireless.

00:02:02.037 --> 00:02:03.870
We think Android Auto
is a great experience,

00:02:03.870 --> 00:02:06.980
but wouldn't it be even
better if you could use it

00:02:06.980 --> 00:02:09.539
without even having to take
your phone out of your pocket?

00:02:09.539 --> 00:02:12.080
So the good news is that we're
working with our manufacturing

00:02:12.080 --> 00:02:13.880
partners to bring
support for wireless

00:02:13.880 --> 00:02:16.560
to their WiFi enabled cars.

00:02:16.560 --> 00:02:18.470
So these are three new
exciting new features.

00:02:18.470 --> 00:02:19.760
There are many other
smaller improvements

00:02:19.760 --> 00:02:22.040
that we're working on, but
we can't ignore the fact

00:02:22.040 --> 00:02:23.581
that there are over
a billion drivers

00:02:23.581 --> 00:02:26.924
on the road who don't yet have
cars that support Android Auto.

00:02:26.924 --> 00:02:29.340
We know that many drivers are
already using Android phones

00:02:29.340 --> 00:02:31.410
in their car dock for
turn by turn navigation

00:02:31.410 --> 00:02:32.980
and media streaming.

00:02:32.980 --> 00:02:35.377
We think we can make that
experience easier and safer

00:02:35.377 --> 00:02:37.710
by letting people use Android
Auto on their phone screen

00:02:37.710 --> 00:02:39.610
while docked.

00:02:39.610 --> 00:02:43.280
So coming soon Android
Auto will give access

00:02:43.280 --> 00:02:46.330
to the same features, voice
enabled media, messaging,

00:02:46.330 --> 00:02:49.300
and navigation right on the
phone screen using an interface

00:02:49.300 --> 00:02:51.230
that's designed for driving.

00:02:51.230 --> 00:02:52.809
Paco will be up on
stage to tell us

00:02:52.809 --> 00:02:54.100
more about it in a few minutes.

00:02:58.700 --> 00:03:00.410
We also have this
running in our sandbox

00:03:00.410 --> 00:03:03.320
and I'd recommend
checking that out as well.

00:03:03.320 --> 00:03:05.990
This opens up Android Auto
to a huge number of new users

00:03:05.990 --> 00:03:07.967
and that's a great thing
for developers too.

00:03:07.967 --> 00:03:09.800
So we're excited about
bringing Android Auto

00:03:09.800 --> 00:03:13.500
to old cars and new, but
what about the future?

00:03:13.500 --> 00:03:16.870
A trend that we're seeing is
cars with larger screens, fully

00:03:16.870 --> 00:03:19.830
digital instrument clusters,
and cellular connectivity,

00:03:19.830 --> 00:03:21.330
but to get the
innovation we've seen

00:03:21.330 --> 00:03:23.380
on the web and smartphones,
we need a platform

00:03:23.380 --> 00:03:26.210
and more importantly,
we need an ecosystem.

00:03:26.210 --> 00:03:28.950
In fact, many manufacturers
have recognized this

00:03:28.950 --> 00:03:32.570
and are already choosing Android
Auto for their IVI operating

00:03:32.570 --> 00:03:34.470
system, but they have
to do a lot of work

00:03:34.470 --> 00:03:38.090
to adapt it to an
in-cabin experience.

00:03:38.090 --> 00:03:40.680
So we're putting automotive
support into mainline Android

00:03:40.680 --> 00:03:43.420
to make a great platform
for built-in infotainment.

00:03:43.420 --> 00:03:45.710
This includes support for
vehicle [? networks, ?]

00:03:45.710 --> 00:03:49.054
HVAC, and infotainment user
interface and built-in apps.

00:03:49.054 --> 00:03:50.970
Being built on Android,
it supports everything

00:03:50.970 --> 00:03:53.720
that makes Android great like
multi-user and multitasking

00:03:53.720 --> 00:03:55.345
and it will be
completely free and open

00:03:55.345 --> 00:03:57.400
source, part of the Android
open source project.

00:03:57.400 --> 00:04:00.205
In fact, in the Android end
release coming later this year,

00:04:00.205 --> 00:04:02.869
we will include many of
these features already.

00:04:02.869 --> 00:04:05.160
We're really excited to work
with our car manufacturing

00:04:05.160 --> 00:04:07.118
partners to bring Android
to their future cars.

00:04:07.118 --> 00:04:09.530
And in our sandbox
we have a concept car

00:04:09.530 --> 00:04:12.020
that we've built with Qualcomm
showing off this technology.

00:04:12.020 --> 00:04:13.270
That's one I would
definitely recommend

00:04:13.270 --> 00:04:15.645
you check out although there's
a bit of a line right now.

00:04:17.310 --> 00:04:18.850
But most importantly,
we're working

00:04:18.850 --> 00:04:21.450
to ensure that apps built for
Android Auto work seamlessly

00:04:21.450 --> 00:04:24.067
on our built-in
infotainment systems.

00:04:24.067 --> 00:04:25.900
So there's a lot of
cool stuff in the works.

00:04:25.900 --> 00:04:27.780
And with that, I'd like to
hand it over to Paco, Vincent,

00:04:27.780 --> 00:04:30.196
and Victor to show you some
of demos of some of the things

00:04:30.196 --> 00:04:31.580
I've talked about.

00:04:31.580 --> 00:04:33.310
PACO: Thank you, Jeff.

00:04:33.310 --> 00:04:35.526
Thank you.

00:04:35.526 --> 00:04:38.350
It's good to see so
many of you here today.

00:04:38.350 --> 00:04:40.720
It helps that it's air
conditioned in here.

00:04:40.720 --> 00:04:41.560
It's pretty hot out.

00:04:44.750 --> 00:04:47.090
So I'm Paco Galanes and
I'm an engineering lead

00:04:47.090 --> 00:04:48.620
with Android Auto.

00:04:48.620 --> 00:04:51.400
As Jeff mentioned before, we're
expanding the Android Auto

00:04:51.400 --> 00:04:53.900
platform to create
new experiences

00:04:53.900 --> 00:04:57.940
for existing drivers by
expanding the Android

00:04:57.940 --> 00:05:03.260
platform into the car-- sorry,
by bringing the experience

00:05:03.260 --> 00:05:07.450
that we've shown you in the car
directly into the phone screen.

00:05:07.450 --> 00:05:12.610
We're also expanding
Android directly, natively

00:05:12.610 --> 00:05:13.310
into the car.

00:05:13.310 --> 00:05:18.770
And that is the concept car
that Jeff already announced.

00:05:18.770 --> 00:05:22.240
I'm going to now give you a demo
of how this all works together

00:05:22.240 --> 00:05:24.670
and show some of the
features that Jeff announced.

00:05:24.670 --> 00:05:25.260
All right.

00:05:29.100 --> 00:05:34.090
So we have Vincent
here and he is showing

00:05:34.090 --> 00:05:35.270
the [? desktop head ?] unit.

00:05:35.270 --> 00:05:38.720
This is a tool that all
developers have available

00:05:38.720 --> 00:05:41.740
and it emulates how
the car screen works

00:05:41.740 --> 00:05:43.360
once you plug your phone in.

00:05:46.140 --> 00:05:46.940
All right.

00:05:46.940 --> 00:05:51.940
So once you [? plug ?] in, you
launch into the home screen.

00:05:51.940 --> 00:05:54.650
And that gives you access
to tasks that you may

00:05:54.650 --> 00:05:57.430
perform right to get started.

00:05:57.430 --> 00:06:00.610
We have suggested destinations.

00:06:00.610 --> 00:06:04.120
We know where you are, your
location, your time of day.

00:06:04.120 --> 00:06:06.740
So we can tell you,
you may want to start

00:06:06.740 --> 00:06:08.275
navigating to work today.

00:06:10.950 --> 00:06:13.540
And all this, of course,
uses the same Google smarts

00:06:13.540 --> 00:06:17.399
that we use all
throughout the platform.

00:06:17.399 --> 00:06:19.940
For those of you not familiar
with the platform already let's

00:06:19.940 --> 00:06:21.910
do a quick walk through.

00:06:21.910 --> 00:06:25.120
So the activity at the
bottom of the screen

00:06:25.120 --> 00:06:28.010
gives you access to common
applications that you

00:06:28.010 --> 00:06:29.740
will be using while driving.

00:06:29.740 --> 00:06:30.660
We have media.

00:06:34.330 --> 00:06:37.320
Of course you have
access to your dialer

00:06:37.320 --> 00:06:38.520
and your common contacts.

00:06:45.090 --> 00:06:47.770
That wasn't it.

00:06:47.770 --> 00:06:52.230
Contacts, dialer-- there it is.

00:06:52.230 --> 00:07:00.020
And of course, you have also
access to navigation and Maps.

00:07:00.020 --> 00:07:03.210
All right, perfect.

00:07:03.210 --> 00:07:07.010
Let's go back to the home.

00:07:07.010 --> 00:07:11.650
Notice that the whole
screen is a lot bigger

00:07:11.650 --> 00:07:14.840
than any other application that
runs on your phone and this

00:07:14.840 --> 00:07:19.910
is because this is
the sign for driving.

00:07:19.910 --> 00:07:23.054
You need to tap that
screen while it's

00:07:23.054 --> 00:07:25.257
running at arm's length
on your dashboard.

00:07:28.050 --> 00:07:30.100
All right.

00:07:30.100 --> 00:07:32.118
Let's go into navigation now.

00:07:38.100 --> 00:07:40.215
Of course we have
integrated Google Maps

00:07:40.215 --> 00:07:42.340
with all the great navigation
tools that you're all

00:07:42.340 --> 00:07:44.860
familiar with but
under the platform,

00:07:44.860 --> 00:07:46.810
we're working on also
integrating Ways,

00:07:46.810 --> 00:07:50.240
as Jeff announced, which is a
tremendously popular navigation

00:07:50.240 --> 00:07:52.558
app as you all are aware.

00:07:52.558 --> 00:07:54.750
Let's switch to it.

00:07:54.750 --> 00:07:56.340
There it is.

00:07:56.340 --> 00:07:57.825
All right.

00:07:57.825 --> 00:07:58.325
Whew!

00:08:01.720 --> 00:08:04.580
Vincent is going
to pick directions.

00:08:04.580 --> 00:08:06.790
We're going to the
beach later today

00:08:06.790 --> 00:08:08.440
so he's getting a head start.

00:08:08.440 --> 00:08:12.340
He has the directions right
there in his favorites.

00:08:12.340 --> 00:08:15.050
And off he goes.

00:08:15.050 --> 00:08:16.660
Great.

00:08:16.660 --> 00:08:19.730
As with Google Maps,
the same applies here.

00:08:19.730 --> 00:08:23.190
We display the next turn
right there in this interface

00:08:23.190 --> 00:08:26.570
but you also recognize some
of the Ways specific features

00:08:26.570 --> 00:08:33.419
in the screen, reporting
an incident right there.

00:08:33.419 --> 00:08:35.750
Great.

00:08:35.750 --> 00:08:39.049
We've also integrated messaging,
by the way, though it's mostly

00:08:39.049 --> 00:08:42.820
a voice-driven experience.

00:08:42.820 --> 00:08:45.580
And speaking of
voice, of course,

00:08:45.580 --> 00:08:48.570
we've enabled most
of the common tasks

00:08:48.570 --> 00:08:50.320
that you can perform
while in the platform

00:08:50.320 --> 00:08:52.594
while using Android
Auto via voice.

00:08:56.000 --> 00:08:56.500
All right.

00:08:56.500 --> 00:09:00.396
Let me show you how messaging
actually works in the platform.

00:09:03.600 --> 00:09:06.140
I'm going to text him telling
him that I'll meet him later.

00:09:12.620 --> 00:09:15.570
Of course he gets a
quick notification.

00:09:15.570 --> 00:09:17.475
Messaging is a
notification-driven

00:09:17.475 --> 00:09:19.080
application.

00:09:19.080 --> 00:09:21.280
In the alert we show
you enough information

00:09:21.280 --> 00:09:24.200
to know if you really
need to take it or not,

00:09:24.200 --> 00:09:27.360
but it goes away and it's always
available through the home

00:09:27.360 --> 00:09:28.910
screen.

00:09:28.910 --> 00:09:31.020
He can decide to
listen to the message

00:09:31.020 --> 00:09:32.890
when it's safe to do so.

00:09:32.890 --> 00:09:34.450
All right.

00:09:34.450 --> 00:09:35.880
ANDROID VOICE:
Here's the message.

00:09:35.880 --> 00:09:38.300
Finishing my presentation
at Google I/O.

00:09:38.300 --> 00:09:41.420
Let me know when you get there.

00:09:41.420 --> 00:09:45.120
Now he could use voice to
send me a quick message

00:09:45.120 --> 00:09:50.160
or we always give you a
pre-canned customizable message

00:09:50.160 --> 00:09:53.986
that you can just tap and let
me know that I'm driving now,

00:09:53.986 --> 00:09:54.694
don't disturb me.

00:09:59.090 --> 00:10:01.590
Note that this works with many
messaging [? works ?] and not

00:10:01.590 --> 00:10:03.420
only SMS.

00:10:03.420 --> 00:10:06.150
We have many applications
have already integrated.

00:10:06.150 --> 00:10:08.560
Chances are that your favorite
application is already

00:10:08.560 --> 00:10:10.130
in the platform.

00:10:10.130 --> 00:10:12.810
If you haven't
integrated your app yet,

00:10:12.810 --> 00:10:15.340
we'll show you
later how to do so.

00:10:15.340 --> 00:10:17.950
Thank you, Vincent.

00:10:17.950 --> 00:10:24.304
Let's switch to the
video down below

00:10:24.304 --> 00:10:27.200
and let's see what
Victor has for us there.

00:10:27.200 --> 00:10:28.850
All right.

00:10:28.850 --> 00:10:36.630
So that is a testing
harness for the concept car

00:10:36.630 --> 00:10:38.800
that we have out there in
the sandbox, the Maserati.

00:10:38.800 --> 00:10:42.160
Come see it later
if you get a chance.

00:10:42.160 --> 00:10:45.640
The concept has two screens,
both powered by Android.

00:10:45.640 --> 00:10:48.480
The instrument cluster right
above the steering wheel,

00:10:48.480 --> 00:10:55.690
of course, and the bigger
infotainment system

00:10:55.690 --> 00:10:56.435
to the right.

00:10:59.850 --> 00:11:00.380
Very good.

00:11:04.810 --> 00:11:06.700
Because of the
larger screen that we

00:11:06.700 --> 00:11:13.440
have available here in
instrument infotainment screen,

00:11:13.440 --> 00:11:16.640
we can make use of the
multi-window features

00:11:16.640 --> 00:11:19.270
of Android [? M ?] to display
more than one application

00:11:19.270 --> 00:11:20.760
at the same time.

00:11:20.760 --> 00:11:24.105
You notice at the bottom
we have the climate control

00:11:24.105 --> 00:11:24.605
application.

00:11:27.502 --> 00:11:29.210
Gets hotter today, so
let's cool it down.

00:11:32.700 --> 00:11:35.860
In the middle, we have the
currently running application,

00:11:35.860 --> 00:11:38.800
right now navigation and maps.

00:11:38.800 --> 00:11:41.580
He's already going
to meet us later.

00:11:41.580 --> 00:11:45.100
And at the top we have
a permanent screen

00:11:45.100 --> 00:11:47.950
where we can show you
other running applications,

00:11:47.950 --> 00:11:49.140
other running activities.

00:11:49.140 --> 00:11:51.160
And we can also,
of course, show you

00:11:51.160 --> 00:11:54.850
some content coming
from Google Now

00:11:54.850 --> 00:11:59.355
or other notifications
from the system.

00:11:59.355 --> 00:12:01.862
All right, let's focus on
the cluster for a minute.

00:12:06.210 --> 00:12:11.750
Very traditional-looking cluster
with a fuel gauge, speedometer,

00:12:11.750 --> 00:12:15.421
and something new there which is
the next turn from Google Maps.

00:12:18.307 --> 00:12:22.200
That area can also be used
for other notifications

00:12:22.200 --> 00:12:26.436
like in this case, the next
track from the media player.

00:12:29.540 --> 00:12:31.828
Let's move back to the
big screen, please.

00:12:35.340 --> 00:12:36.320
All right.

00:12:36.320 --> 00:12:41.170
Now here we see how Victor
switched to the media player

00:12:41.170 --> 00:12:43.708
as the main application.

00:12:43.708 --> 00:12:45.790
And notice-- I don't
know if you noticed

00:12:45.790 --> 00:12:49.710
that-- the navigation [? car ?]
went on top to the notification

00:12:49.710 --> 00:12:52.940
area, to the permanent
area right there.

00:12:52.940 --> 00:12:54.350
Perfect, thank you.

00:12:54.350 --> 00:12:56.790
For the media
section he has access

00:12:56.790 --> 00:13:00.780
to all auto-enabled
applications,

00:13:00.780 --> 00:13:03.450
media applications that
are already out there.

00:13:03.450 --> 00:13:06.160
Whatever is in his
car, he'll pick one.

00:13:10.370 --> 00:13:11.682
Great.

00:13:11.682 --> 00:13:13.390
Media applications
have two main screens.

00:13:13.390 --> 00:13:15.389
We saw the first one with
the playback controls.

00:13:18.980 --> 00:13:22.470
Those playback controls are a
standard-- play, pause, skip.

00:13:22.470 --> 00:13:24.770
Some of them are customizable.

00:13:24.770 --> 00:13:27.590
And, of course, we
have a second screen

00:13:27.590 --> 00:13:33.210
which is showing now which is
the menu for browsing content

00:13:33.210 --> 00:13:38.410
where applications show what's
available for the user to pick.

00:13:38.410 --> 00:13:43.820
We recommend that we keep the
hierarchies kind of shallow

00:13:43.820 --> 00:13:50.380
and that we try to surface
on top personalized content--

00:13:50.380 --> 00:13:51.720
frequents, favorites, etc.

00:13:51.720 --> 00:13:55.160
So it's less distracting.

00:13:55.160 --> 00:13:57.240
All right.

00:13:57.240 --> 00:13:59.054
I hope you can hear that.

00:13:59.054 --> 00:14:00.720
PODCAST: This can
help anyone get really

00:14:00.720 --> 00:14:01.840
good at just about anything--

00:14:01.840 --> 00:14:03.589
PACO: I thought he was
going to play salsa

00:14:03.589 --> 00:14:07.410
but he is on a podcast today.

00:14:07.410 --> 00:14:07.910
All right.

00:14:07.910 --> 00:14:09.670
Victor will talk to
you later about how

00:14:09.670 --> 00:14:12.610
to integrate media
applications into the platform

00:14:12.610 --> 00:14:15.110
if you haven't done so already.

00:14:15.110 --> 00:14:15.880
Thank you, Victor.

00:14:15.880 --> 00:14:20.195
Let's move to the
phone area here.

00:14:24.020 --> 00:14:24.760
Great.

00:14:24.760 --> 00:14:29.290
Let me show you how the third
Android Surface will work.

00:14:29.290 --> 00:14:30.960
It's Android Auto on the screen.

00:14:30.960 --> 00:14:32.760
No new car needed.

00:14:32.760 --> 00:14:38.130
All I have to do is bring up
the Android Auto application

00:14:38.130 --> 00:14:41.620
from the icon and here I
am in the Android Auto home

00:14:41.620 --> 00:14:45.420
screen, adapted to the
screen in my phone.

00:14:45.420 --> 00:14:48.890
This should look very
familiar to you already.

00:14:48.890 --> 00:14:51.380
I can also set Android
Auto to auto-launch

00:14:51.380 --> 00:14:53.380
when it detects the
Bluetooth device in my phone

00:14:53.380 --> 00:14:56.040
when I turn it on, for instance.

00:14:56.040 --> 00:14:58.670
From the home
screen, I have access

00:14:58.670 --> 00:15:01.160
to the same suggested
destinations

00:15:01.160 --> 00:15:03.165
we talked about before.

00:15:03.165 --> 00:15:07.550
It's Android Auto,
it's the same platform.

00:15:07.550 --> 00:15:11.960
I also have ongoing
activities like media.

00:15:11.960 --> 00:15:17.690
And it can show me missed
messages or missed calls

00:15:17.690 --> 00:15:20.210
that I may want to return.

00:15:20.210 --> 00:15:23.170
All right, so from
the media card,

00:15:23.170 --> 00:15:27.170
I can always go
to the media app.

00:15:27.170 --> 00:15:31.390
Again, I have access to all
the media applications that

00:15:31.390 --> 00:15:35.350
are running on my phone that
are Android Auto enabled-- books

00:15:35.350 --> 00:15:41.790
on tape, books, podcasts,
several music apps.

00:15:41.790 --> 00:15:44.920
Let me pick one.

00:15:44.920 --> 00:15:48.630
And when we launch
the app, I can

00:15:48.630 --> 00:15:52.590
start playing where I left off.

00:15:52.590 --> 00:15:57.240
[MUSIC PLAYING]

00:15:57.240 --> 00:16:00.920
PACO: But I also have access
to the full menu just one

00:16:00.920 --> 00:16:03.240
swipe away.

00:16:03.240 --> 00:16:09.090
By the way, the customizable
controls are also here.

00:16:09.090 --> 00:16:10.370
All right.

00:16:10.370 --> 00:16:12.460
Another thing that
I wanted to show you

00:16:12.460 --> 00:16:15.450
quickly is how messaging
works in this screen.

00:16:15.450 --> 00:16:19.540
So Vincent is going
to tell me when

00:16:19.540 --> 00:16:23.850
he's up here that he's already
in Santa Cruz waiting for me.

00:16:37.269 --> 00:16:42.010
It's taking him a little
long to get there today.

00:16:42.010 --> 00:16:43.450
All right.

00:16:43.450 --> 00:16:44.450
So here's the message.

00:16:44.450 --> 00:16:46.590
Notice that the notifications
in the phone screen

00:16:46.590 --> 00:16:48.610
are a little larger than usual.

00:16:48.610 --> 00:16:53.670
They are adapted for the smaller
screen size so I can tap them

00:16:53.670 --> 00:16:56.730
while I'm driving.

00:16:56.730 --> 00:17:00.590
As we saw before, I don't
have to tap that notification

00:17:00.590 --> 00:17:02.420
to listen to it.

00:17:02.420 --> 00:17:05.301
It's always in my home screen.

00:17:05.301 --> 00:17:06.800
ANDROID VOICE 1:
Here's the message.

00:17:06.800 --> 00:17:08.210
Hey I'm here now.

00:17:08.210 --> 00:17:11.760
You can press the voice
button and say reply.

00:17:11.760 --> 00:17:15.700
PACO: Of course, I could
try to reply with voice,

00:17:15.700 --> 00:17:20.160
but, as always, the auto
reply message is there

00:17:20.160 --> 00:17:22.470
and I can just tell him,
I'm driving right now,

00:17:22.470 --> 00:17:23.990
I'll catch you later.

00:17:23.990 --> 00:17:25.060
All right.

00:17:25.060 --> 00:17:26.569
The last thing I
wanted to show you

00:17:26.569 --> 00:17:30.090
is how the power of
voice integration

00:17:30.090 --> 00:17:31.340
works with Android Auto.

00:17:31.340 --> 00:17:33.730
I don't know if this will
work in the environment.

00:17:33.730 --> 00:17:36.330
You guys are kind of
quiet so I'm going to try.

00:17:36.330 --> 00:17:38.600
Let me see.

00:17:38.600 --> 00:17:41.970
Navigate to Santa Cruz.

00:17:41.970 --> 00:17:43.350
ANDROID VOICE 1:
Santa Cruz, USA.

00:17:43.350 --> 00:17:43.942
All right.

00:17:46.494 --> 00:17:47.160
PACO: All right.

00:17:47.160 --> 00:17:49.243
ANDROID VOICE 1: You should
reach your destination

00:17:49.243 --> 00:17:51.780
by 7:32 PM.

00:17:51.780 --> 00:17:52.740
PACO: Great.

00:17:52.740 --> 00:17:55.420
So I'm navigating.

00:17:55.420 --> 00:18:00.030
And, of course, the
next turn is always

00:18:00.030 --> 00:18:03.129
available from the home
screen so I don't miss a turn

00:18:03.129 --> 00:18:04.170
no matter what I'm doing.

00:18:04.170 --> 00:18:06.350
ANDROID VOICE 1: Turn right
onto Bill Graham Parkway.

00:18:06.350 --> 00:18:07.849
PACO: Let me stop
this for a second.

00:18:12.990 --> 00:18:17.200
All right, so I hope that
this quick demo gave you

00:18:17.200 --> 00:18:21.970
an idea of how the
platform works together.

00:18:21.970 --> 00:18:26.370
The next thing that
we're going to do

00:18:26.370 --> 00:18:28.830
is-- let's go back
to the slides.

00:18:28.830 --> 00:18:30.990
Perfect.

00:18:30.990 --> 00:18:33.210
We're going to go into
more detail about how

00:18:33.210 --> 00:18:36.132
you integrate your apps into
the Android Auto platform.

00:18:36.132 --> 00:18:37.590
We're going to talk
about messaging

00:18:37.590 --> 00:18:39.740
and we're going to
talk about media.

00:18:39.740 --> 00:18:42.970
And remember that if
you've already integrated,

00:18:42.970 --> 00:18:47.550
it will run seamlessly on
both phone and car screens.

00:18:47.550 --> 00:18:50.590
We use the same interfaces
across all three surfaces.

00:18:50.590 --> 00:18:56.260
If you haven't integrated
yet, stay around

00:18:56.260 --> 00:19:01.318
and Victor is going to tell us
how to integrate with media.

00:19:01.318 --> 00:19:02.193
VICTOR: Thanks, Paco.

00:19:11.600 --> 00:19:13.000
Hi, I'm Victor.

00:19:13.000 --> 00:19:15.750
I'm a software engineer
on the Android Auto team

00:19:15.750 --> 00:19:18.380
and I'm here to talk
about media apps.

00:19:18.380 --> 00:19:20.691
There are a couple things
I want to focus on today.

00:19:20.691 --> 00:19:22.940
First of all, we'll look at
how to make your media app

00:19:22.940 --> 00:19:25.110
compatible with
Android Auto then

00:19:25.110 --> 00:19:27.100
I'll offer some tips
and best practices

00:19:27.100 --> 00:19:30.630
to help you provide a
great media experience

00:19:30.630 --> 00:19:31.482
inside of a vehicle.

00:19:34.780 --> 00:19:36.700
So as you saw
earlier in the demo,

00:19:36.700 --> 00:19:39.220
media content can show up
in many different forms

00:19:39.220 --> 00:19:41.850
in various Android Auto devices.

00:19:41.850 --> 00:19:45.480
On the left here, we
have our media facet

00:19:45.480 --> 00:19:47.370
which is a templated
UI experience where

00:19:47.370 --> 00:19:49.940
the user can control
playback and also we

00:19:49.940 --> 00:19:52.950
offer browsing capabilities.

00:19:52.950 --> 00:19:56.470
On the other hand, media
content can appear more

00:19:56.470 --> 00:20:00.440
passively such as a card
inside of our overview stream

00:20:00.440 --> 00:20:05.460
or as a notification inside
of our instrument cluster.

00:20:05.460 --> 00:20:07.646
I just want to point
out again, across all

00:20:07.646 --> 00:20:09.270
these different
surfaces-- whether it's

00:20:09.270 --> 00:20:11.870
a phone screen or a car
screen-- the developer only

00:20:11.870 --> 00:20:16.360
needs to implement the necessary
APIs for service just once

00:20:16.360 --> 00:20:18.250
and when that's done
Android Auto would

00:20:18.250 --> 00:20:20.210
do all the heavy
lifting to ensure

00:20:20.210 --> 00:20:23.365
a safe and engaging experience
across all these scenarios.

00:20:26.040 --> 00:20:28.980
All right, let's dive into code.

00:20:28.980 --> 00:20:31.110
So first of all, we need
to do a bit of set-up

00:20:31.110 --> 00:20:34.500
because we want Android Auto
to be able to find your app.

00:20:34.500 --> 00:20:36.990
So here in our
Android manifest file,

00:20:36.990 --> 00:20:40.950
I point to a secondary XML
file named Auto App Descriptor.

00:20:40.950 --> 00:20:42.950
And inside the
Auto App Descriptor

00:20:42.950 --> 00:20:44.820
I say that this is
an automotive app

00:20:44.820 --> 00:20:46.850
and it is of the type media.

00:20:46.850 --> 00:20:49.200
So this really lets us know
that your app can provide

00:20:49.200 --> 00:20:50.800
audio content for auto devices.

00:20:53.840 --> 00:20:55.810
Once we can find
you, you'll need

00:20:55.810 --> 00:21:00.030
to implement a service-- in this
case, the MediaBrowserService.

00:21:00.030 --> 00:21:02.240
The MediaBrowserService
does two things.

00:21:02.240 --> 00:21:04.740
First of all, it provides
a content hierarchy

00:21:04.740 --> 00:21:07.070
which is what we use
to create a content

00:21:07.070 --> 00:21:09.920
browser that the user can
then use to find and explore

00:21:09.920 --> 00:21:12.050
audio tracks.

00:21:12.050 --> 00:21:14.020
At the same time,
the MediaBrowser

00:21:14.020 --> 00:21:16.140
should attach a
media session, which

00:21:16.140 --> 00:21:19.540
is what we use to control--
or rather remote control--

00:21:19.540 --> 00:21:21.110
playback inside your app.

00:21:24.240 --> 00:21:27.430
So here is a sample
MediaBrowserService.

00:21:27.430 --> 00:21:30.410
As you can see, we're
implementing-- or rather

00:21:30.410 --> 00:21:33.290
extending
MediaBrowserService compact

00:21:33.290 --> 00:21:36.960
which is available in Support
Library 23.2 and higher.

00:21:36.960 --> 00:21:41.820
And of course this will help
your app run on older devices.

00:21:41.820 --> 00:21:44.000
There are two methods
that we need to implement

00:21:44.000 --> 00:21:46.430
inside the MediaBrowserService.

00:21:46.430 --> 00:21:49.780
The first one is the
onGetRoot [? method. ?]

00:21:49.780 --> 00:21:51.950
Now this is called to
retrieve the browser

00:21:51.950 --> 00:21:54.900
root of your content tree.

00:21:54.900 --> 00:21:58.000
This root itself is not
a media item, however,

00:21:58.000 --> 00:22:01.920
we use this route to retrieve
a list of media items which

00:22:01.920 --> 00:22:06.900
are then used to populate the
top level of our content menu.

00:22:06.900 --> 00:22:09.980
Also note that root hints
may be passed to you.

00:22:09.980 --> 00:22:14.590
These can include things like
offline, recent, or suggested.

00:22:14.590 --> 00:22:17.210
And these are really just
hints that Android Auto wants

00:22:17.210 --> 00:22:19.410
to tell you in terms
of what kind of content

00:22:19.410 --> 00:22:21.210
you should be sending back.

00:22:21.210 --> 00:22:25.997
So try to respect these when
you're exposing your content.

00:22:25.997 --> 00:22:28.080
The second method that you
need to [? overwrite ?]

00:22:28.080 --> 00:22:30.700
is the onload children call.

00:22:30.700 --> 00:22:33.990
Now every Android Auto needs to
display a list of media content

00:22:33.990 --> 00:22:36.410
inside of our media app.

00:22:36.410 --> 00:22:38.460
This method is
invoked and you will

00:22:38.460 --> 00:22:41.250
be passed a parent
ID of the media item

00:22:41.250 --> 00:22:44.560
and we expect you to return
a list of its children.

00:22:48.140 --> 00:22:50.780
Now let's take a closer look
at this [? onload ?] children

00:22:50.780 --> 00:22:52.470
method.

00:22:52.470 --> 00:22:55.820
First of all, I want to say if
you are returning media items

00:22:55.820 --> 00:22:58.220
try to do so from a cache.

00:22:58.220 --> 00:23:00.980
And the reason is, you can
imagine a user is driving down

00:23:00.980 --> 00:23:04.830
the highway, they're
listening to some songs

00:23:04.830 --> 00:23:06.580
and they want to play
a different playlist

00:23:06.580 --> 00:23:09.870
and now, suddenly, your app
needs to go across the network

00:23:09.870 --> 00:23:11.530
to download all those songs.

00:23:11.530 --> 00:23:14.270
And you can imagine if the
cell signal is not great,

00:23:14.270 --> 00:23:16.620
the user is looking at
a screen that's loading

00:23:16.620 --> 00:23:19.050
and their eyes are not
on the road anymore.

00:23:19.050 --> 00:23:20.970
So not only is this
a bad experience,

00:23:20.970 --> 00:23:23.040
it's also not very safe.

00:23:23.040 --> 00:23:26.140
So we really recommend you
to cache your media items

00:23:26.140 --> 00:23:28.100
as you're creating
the content tree,

00:23:28.100 --> 00:23:29.930
so when [? onload ?]
children gets called,

00:23:29.930 --> 00:23:34.510
you're able to return the media
items immediately from memory.

00:23:34.510 --> 00:23:37.390
Now if you have to
go over the network,

00:23:37.390 --> 00:23:39.540
just simply detach
the result object,

00:23:39.540 --> 00:23:41.740
set up your asynchronous
tags, and once you're

00:23:41.740 --> 00:23:43.326
finished loading
just send it back

00:23:43.326 --> 00:23:44.450
through the results object.

00:23:48.300 --> 00:23:51.190
So while we're on the subject
of content hierarchies,

00:23:51.190 --> 00:23:53.690
let's take a look at some of
the common pitfalls or mistakes

00:23:53.690 --> 00:23:55.850
that people tend to make.

00:23:55.850 --> 00:24:00.630
So in this example here we have
a media app that can play radio

00:24:00.630 --> 00:24:04.150
and it separates it
down into local radio

00:24:04.150 --> 00:24:06.910
and further breaks it down
into different genres like jazz

00:24:06.910 --> 00:24:10.600
or pop or other types of music.

00:24:10.600 --> 00:24:12.529
In this case, the
user has to click

00:24:12.529 --> 00:24:15.070
at least three times before they
can reach the first playable

00:24:15.070 --> 00:24:15.980
item.

00:24:15.980 --> 00:24:18.370
So this deep nesting is
actually not very good

00:24:18.370 --> 00:24:21.030
because you can imagine,
again, the user is on the road

00:24:21.030 --> 00:24:22.910
and they're tapping
the screen three times

00:24:22.910 --> 00:24:25.150
before they can do anything.

00:24:25.150 --> 00:24:27.120
So again, in this
case, you should really

00:24:27.120 --> 00:24:29.610
try to surface interesting
content or engaging

00:24:29.610 --> 00:24:33.130
content higher up in the tree so
that it's available to the user

00:24:33.130 --> 00:24:36.020
right away.

00:24:36.020 --> 00:24:39.180
The next thing is we've heard a
lot of feedback from our users

00:24:39.180 --> 00:24:42.780
that they want to be able to get
to all of their media content

00:24:42.780 --> 00:24:45.170
while they are inside the car.

00:24:45.170 --> 00:24:46.750
So we're working
on ways for users

00:24:46.750 --> 00:24:49.760
to browse through large amounts
of media content, of course,

00:24:49.760 --> 00:24:51.500
in a safe manner.

00:24:51.500 --> 00:24:53.770
So what does this mean
for the app developers?

00:24:53.770 --> 00:24:57.590
What this means is you should
not truncate your content trees

00:24:57.590 --> 00:24:59.210
prematurely.

00:24:59.210 --> 00:25:01.130
In this example,
the user has finally

00:25:01.130 --> 00:25:03.600
gotten to the jazz section
and there's actually

00:25:03.600 --> 00:25:07.150
just two stations because
everything else got cut off.

00:25:07.150 --> 00:25:08.752
So let's try not to do that.

00:25:13.500 --> 00:25:16.690
So the last thing I want to
talk about content browsing.

00:25:16.690 --> 00:25:19.760
It's if your data is dynamic--
so for example, you're

00:25:19.760 --> 00:25:22.640
a media app that generates
a playlist based on where

00:25:22.640 --> 00:25:25.920
the user is or the traffic
conditions then when

00:25:25.920 --> 00:25:29.090
that content changes,
you need to notify us

00:25:29.090 --> 00:25:31.667
because we can update the
content browser for the user.

00:25:31.667 --> 00:25:34.000
And you would do this through
the notify children change

00:25:34.000 --> 00:25:34.500
call.

00:25:38.915 --> 00:25:40.260
All right.

00:25:40.260 --> 00:25:42.270
Now that we've talked
about media browsing,

00:25:42.270 --> 00:25:44.420
let's take a look
at media session.

00:25:44.420 --> 00:25:47.490
So the media session
serves two purposes.

00:25:47.490 --> 00:25:52.380
First it lets you send updates
to us about playback states

00:25:52.380 --> 00:25:54.190
or metadata changes.

00:25:54.190 --> 00:25:57.740
Also it allows us to
remote control playback

00:25:57.740 --> 00:25:58.690
inside your media app.

00:26:01.780 --> 00:26:04.950
So here we have our
MediaBrowserService again.

00:26:04.950 --> 00:26:08.190
This time let's take a look
at the [? entree ?] method.

00:26:08.190 --> 00:26:11.280
Inside of [? on ?] [? create ?]
we instantiate a MediaSession

00:26:11.280 --> 00:26:12.600
object.

00:26:12.600 --> 00:26:15.935
And the first thing that we
do is we take its SessionToken

00:26:15.935 --> 00:26:17.720
and we set it as
the SessionToken

00:26:17.720 --> 00:26:20.030
for the MediaBrowserService.

00:26:20.030 --> 00:26:22.510
Now this is important because
when Android Auto connects

00:26:22.510 --> 00:26:25.160
to your media app, the first
thing it does is the retrieve

00:26:25.160 --> 00:26:28.860
this SessionToken and
creates a media controller

00:26:28.860 --> 00:26:33.290
object which is then used to
control playback and receive

00:26:33.290 --> 00:26:36.140
updates.

00:26:36.140 --> 00:26:38.450
Also there is the
media session callback

00:26:38.450 --> 00:26:40.420
which we use to handle
a playback event-- which

00:26:40.420 --> 00:26:43.510
you will implement to handle
playback events from Android

00:26:43.510 --> 00:26:44.100
Auto.

00:26:44.100 --> 00:26:47.950
We will take a closer look
at this in the next slide.

00:26:47.950 --> 00:26:51.080
And, finally, remember
when everything is done,

00:26:51.080 --> 00:26:52.850
release the media session.

00:26:52.850 --> 00:26:54.649
This frees up any
system resources

00:26:54.649 --> 00:26:56.440
and actually tells
Android Auto that you're

00:26:56.440 --> 00:26:59.635
finished playing so we can clean
up any leftover UI elements.

00:27:04.350 --> 00:27:07.940
All right so here's our
sample media session callback.

00:27:07.940 --> 00:27:10.180
So the methods here
allow the callback

00:27:10.180 --> 00:27:13.460
object to handle
various playback events.

00:27:13.460 --> 00:27:15.300
You overwrite them as you need.

00:27:15.300 --> 00:27:20.220
So for example, if your app
is a streaming radio app then

00:27:20.220 --> 00:27:22.520
maybe you don't need the
[? on ?] skip to next button

00:27:22.520 --> 00:27:24.111
because that doesn't
make any sense.

00:27:24.111 --> 00:27:25.860
So in that case, you
can simply leave that

00:27:25.860 --> 00:27:28.890
as the default implementation.

00:27:28.890 --> 00:27:32.880
Now in the case of [? an on ?]
play or [? on ?] resume,

00:27:32.880 --> 00:27:35.072
you should check if your
media session is active.

00:27:35.072 --> 00:27:38.310
If your media session is
not active, set it to active

00:27:38.310 --> 00:27:40.650
and this tells Android Auto
that you are in fact playing

00:27:40.650 --> 00:27:42.480
and that we can
surface your content

00:27:42.480 --> 00:27:47.164
inside of our stream or inside
of our notification area.

00:27:47.164 --> 00:27:48.830
Another method I want
to talk about here

00:27:48.830 --> 00:27:51.460
is the [? onplay ?]
from media ID.

00:27:51.460 --> 00:27:54.530
So this method is invoked when
a user goes through the content

00:27:54.530 --> 00:27:58.210
browser, clicks the
playable media item,

00:27:58.210 --> 00:27:59.920
and expects something to play.

00:27:59.920 --> 00:28:03.300
This method will be invoked and
the media ID will pass it in.

00:28:03.300 --> 00:28:05.580
And this media ID
is the same that you

00:28:05.580 --> 00:28:08.330
have passed to us through the
media item in the [? onload ?]

00:28:08.330 --> 00:28:09.540
children call.

00:28:09.540 --> 00:28:12.374
So you can imagine the
media ID should be unique

00:28:12.374 --> 00:28:13.790
and it should be
persistent so you

00:28:13.790 --> 00:28:17.450
can find the right song to play
when the user clicks on it.

00:28:21.340 --> 00:28:23.190
A note about voice support.

00:28:23.190 --> 00:28:26.480
So if you want your app to
support command through voice

00:28:26.480 --> 00:28:29.740
like play jazz on
my media app, you'll

00:28:29.740 --> 00:28:32.050
first need to specify
an intent filter

00:28:32.050 --> 00:28:34.070
inside your manifest file.

00:28:34.070 --> 00:28:36.980
This basically tells us that
you are able to handle playback

00:28:36.980 --> 00:28:38.280
from search.

00:28:38.280 --> 00:28:40.830
So when the user issues
the actual command,

00:28:40.830 --> 00:28:44.140
we'll launch your app and
the on play from search call

00:28:44.140 --> 00:28:46.020
will be invoked.

00:28:46.020 --> 00:28:50.700
Now you will be passed both
the query and a set of extras.

00:28:50.700 --> 00:28:53.540
So if the query, first
of all, is empty,

00:28:53.540 --> 00:28:55.470
you should still try
to play something back

00:28:55.470 --> 00:28:58.180
because this tells the user
that your app is responsive

00:28:58.180 --> 00:29:01.130
and that their action
has taken place.

00:29:01.130 --> 00:29:03.020
Now if the query
is valid, you can

00:29:03.020 --> 00:29:06.080
try to parse the query
yourself or you can look

00:29:06.080 --> 00:29:09.360
inside the extras and we'll pass
the information such as title,

00:29:09.360 --> 00:29:12.149
album, or artist name.

00:29:12.149 --> 00:29:14.190
And finally, if you can't
actually find the song,

00:29:14.190 --> 00:29:15.330
that's OK.

00:29:15.330 --> 00:29:16.680
Just show an error.

00:29:16.680 --> 00:29:19.245
Again, this is to tell the user
that your app is responsive.

00:29:23.754 --> 00:29:25.420
So now let's look at
some of the updates

00:29:25.420 --> 00:29:28.230
that your apps can send
over to Android Auto.

00:29:28.230 --> 00:29:30.860
First of all, there is
the metadata object.

00:29:30.860 --> 00:29:35.390
This contains things like
title, artist, or album art.

00:29:35.390 --> 00:29:37.650
And let's focus a little
on album art here.

00:29:37.650 --> 00:29:41.160
As you saw earlier in
the demo, the album art

00:29:41.160 --> 00:29:43.040
of the track that's
playing can show up

00:29:43.040 --> 00:29:47.180
as the background image of maybe
a 15 inch, [? 4K ?] screen.

00:29:47.180 --> 00:29:50.230
In this case, resolution
is really important.

00:29:50.230 --> 00:29:52.290
So you can send us that
album art in two ways.

00:29:52.290 --> 00:29:54.882
You can send it to us either
through a bitmap or a URI.

00:29:54.882 --> 00:29:57.720
I recommend you guys
to do it in a URI

00:29:57.720 --> 00:30:00.550
because Android, the
framework, actually scales down

00:30:00.550 --> 00:30:03.770
the bitmap to 320 by 320 DP.

00:30:03.770 --> 00:30:08.360
So if you want a high resolution
image the URI is the way to go.

00:30:12.720 --> 00:30:15.960
So the other state that you can
send us is the playback state.

00:30:15.960 --> 00:30:18.300
This tells us things like
if your app is playing,

00:30:18.300 --> 00:30:20.535
if it's stopped,
and actions that it

00:30:20.535 --> 00:30:23.772
can take-- if it can skip
forward, if it can pause--

00:30:23.772 --> 00:30:25.480
and also tells us the
playback position--

00:30:25.480 --> 00:30:29.960
how far along in the song
you're currently playing.

00:30:29.960 --> 00:30:34.420
A couple of tips here, don't
send us a playback state change

00:30:34.420 --> 00:30:36.640
every second if the only
thing that is changing

00:30:36.640 --> 00:30:39.740
is the playback position
because we don't use this value

00:30:39.740 --> 00:30:42.760
to update the progress bar
instead of our media app.

00:30:42.760 --> 00:30:44.630
In fact, you're just
taxing the system

00:30:44.630 --> 00:30:47.650
and we're ignoring
these updates.

00:30:47.650 --> 00:30:51.050
On a similar note, if your
app is actually stopped,

00:30:51.050 --> 00:30:53.330
don't send playback states
unless they're actually

00:30:53.330 --> 00:30:56.070
changing because, again,
we're just ignoring them

00:30:56.070 --> 00:30:59.070
and you're taxing the system.

00:30:59.070 --> 00:31:01.160
Finally, I want to talk
about the buffering state.

00:31:01.160 --> 00:31:02.860
This is an interesting
one because when

00:31:02.860 --> 00:31:06.540
the user clicks play and you
need to download the song,

00:31:06.540 --> 00:31:09.350
you should send the state to us
right away because we can then

00:31:09.350 --> 00:31:12.300
tell the user through a
spinner or progress bar

00:31:12.300 --> 00:31:14.950
that the track is
being downloaded

00:31:14.950 --> 00:31:17.465
because if you don't do that,
your UI will seem somewhat

00:31:17.465 --> 00:31:18.006
unresponsive.

00:31:22.150 --> 00:31:24.945
And with that I'll hand it over
to Vincent for customizations.

00:31:28.137 --> 00:31:29.137
VINCENT: Thanks, Victor.

00:31:31.940 --> 00:31:32.740
Hi everyone.

00:31:32.740 --> 00:31:35.220
My name is Vincent and
I'm an Engineer Manager

00:31:35.220 --> 00:31:37.200
on the Android Auto team.

00:31:37.200 --> 00:31:38.920
So with Android
Auto we want media

00:31:38.920 --> 00:31:42.440
apps to be able to showcase
the uniqueness their users have

00:31:42.440 --> 00:31:44.990
grown to love and
expect in the car.

00:31:44.990 --> 00:31:47.470
It's also important
that the user experience

00:31:47.470 --> 00:31:50.680
is one that is optimized
and friendly for driving.

00:31:50.680 --> 00:31:53.160
And to be honest, this
is a challenging task.

00:31:53.160 --> 00:31:56.340
Android Auto itself has
undergone extensive user

00:31:56.340 --> 00:31:58.660
studies, driver
distraction testing

00:31:58.660 --> 00:32:01.460
in simulators and in
real-life driving scenarios

00:32:01.460 --> 00:32:06.740
where minimum contrast ratio,
tap target sizes, glance times,

00:32:06.740 --> 00:32:08.930
cognitive load, and
driving performance

00:32:08.930 --> 00:32:11.170
are all factored
into its design.

00:32:11.170 --> 00:32:13.150
As you can imagine,
this isn't something

00:32:13.150 --> 00:32:15.200
that we want or we
think every media

00:32:15.200 --> 00:32:16.907
app should have to get right.

00:32:16.907 --> 00:32:18.490
In the end we thought
that it was best

00:32:18.490 --> 00:32:22.560
for the users and developers to
have an API that abstracts this

00:32:22.560 --> 00:32:26.426
out so developers like you can
focus on making your apps great

00:32:26.426 --> 00:32:27.800
knowing Android
Auto will provide

00:32:27.800 --> 00:32:29.916
an appropriate in-car
user experience.

00:32:29.916 --> 00:32:31.540
So in this section,
I'll be walking you

00:32:31.540 --> 00:32:34.530
through how you can easily
customize your media

00:32:34.530 --> 00:32:37.190
app for Android Auto.

00:32:37.190 --> 00:32:39.830
So media playback controls
are the primary interface

00:32:39.830 --> 00:32:42.840
for users to control their
media playback experience.

00:32:42.840 --> 00:32:45.580
These controls are displayed
throughout Android Auto

00:32:45.580 --> 00:32:47.720
and laid out
differently depending

00:32:47.720 --> 00:32:50.040
on the surface and the
condition that Android Auto is

00:32:50.040 --> 00:32:51.170
running in.

00:32:51.170 --> 00:32:54.370
For example, the audio controls
card on the phone screen

00:32:54.370 --> 00:32:56.830
might look different
than the audio control

00:32:56.830 --> 00:32:59.900
cards on the car
screen and it also

00:32:59.900 --> 00:33:02.642
looks different in night
mode versus in day mode.

00:33:02.642 --> 00:33:04.350
Again, this isn't
something that your app

00:33:04.350 --> 00:33:06.700
needs to be concerned about
since Android Auto will

00:33:06.700 --> 00:33:07.954
handle this behind the scenes.

00:33:10.620 --> 00:33:14.340
So how do you get your app to
surface the appropriate actions

00:33:14.340 --> 00:33:16.890
or the controls for your app?

00:33:16.890 --> 00:33:22.000
In the media session
playback state,

00:33:22.000 --> 00:33:23.800
remember that your
app is actually

00:33:23.800 --> 00:33:27.870
already updating the playback
state for the media session.

00:33:27.870 --> 00:33:31.430
Set the supported actions,
via the actions method

00:33:31.430 --> 00:33:34.620
in the playback state builder.

00:33:34.620 --> 00:33:37.340
The playback state compact
class, if you look into it,

00:33:37.340 --> 00:33:38.910
has a defined set
of standard media

00:33:38.910 --> 00:33:41.860
action constants
like play, pause,

00:33:41.860 --> 00:33:45.130
skip forward, and skip previous.

00:33:45.130 --> 00:33:49.860
Let's look at the action skip
to next constant as an example.

00:33:49.860 --> 00:33:52.580
Because it's listed
as a supported action,

00:33:52.580 --> 00:33:58.940
Android Auto will surface the
button in the controls panel.

00:33:58.940 --> 00:34:00.690
When the user interacts
with this button,

00:34:00.690 --> 00:34:04.850
the media session's call
back on skip to next API

00:34:04.850 --> 00:34:06.400
will get invoked.

00:34:06.400 --> 00:34:08.380
A few things to keep
in mind-- remember

00:34:08.380 --> 00:34:10.620
to always keep the
supported actions up to date

00:34:10.620 --> 00:34:13.330
based on the appropriate
playback state

00:34:13.330 --> 00:34:15.210
that the user may be in.

00:34:15.210 --> 00:34:18.445
For example, if the user is at
the beginning of the playlist,

00:34:18.445 --> 00:34:19.820
it might be a good
idea to remove

00:34:19.820 --> 00:34:22.070
the skip to previous action.

00:34:22.070 --> 00:34:23.530
We also recommend
that apps always

00:34:23.530 --> 00:34:26.319
report all the supported
actions so that the app doesn't

00:34:26.319 --> 00:34:27.277
lose any functionality.

00:34:30.860 --> 00:34:32.810
Now, what if your
media app supports

00:34:32.810 --> 00:34:35.630
additional actions that aren't
defined in the playback state

00:34:35.630 --> 00:34:36.540
compact?

00:34:36.540 --> 00:34:38.530
For example, maybe a thumbs up.

00:34:38.530 --> 00:34:40.989
Well you can create
your own custom action.

00:34:40.989 --> 00:34:44.730
A custom action contains a
few things-- an action string.

00:34:44.730 --> 00:34:46.620
This is very
specific to your app

00:34:46.620 --> 00:34:49.380
and it's unique for
each custom action.

00:34:49.380 --> 00:34:50.679
And action label text.

00:34:50.679 --> 00:34:53.530
This may be displayed
for accessibility.

00:34:53.530 --> 00:34:54.800
A drawable resource.

00:34:54.800 --> 00:34:58.610
This is shown in the
actual playback control.

00:34:58.610 --> 00:35:00.950
Remember to include
transparency in it

00:35:00.950 --> 00:35:04.550
and we also recommend using SVG
so that we can properly display

00:35:04.550 --> 00:35:06.520
it in various screen sizes.

00:35:06.520 --> 00:35:11.420
And lastly there is also an
extras bundle that is optional.

00:35:11.420 --> 00:35:13.940
So when the user interacts
with a custom action playback

00:35:13.940 --> 00:35:16.590
control, the on custom
action method of your media

00:35:16.590 --> 00:35:18.990
session callback gets invoked.

00:35:18.990 --> 00:35:21.560
This is where you can handle
the actual like action.

00:35:24.870 --> 00:35:27.260
We also know product
branding is important

00:35:27.260 --> 00:35:30.490
for you and we want your app's
branding to show through well

00:35:30.490 --> 00:35:31.930
in Android Auto.

00:35:31.930 --> 00:35:34.250
So if your app already uses
the material design color

00:35:34.250 --> 00:35:36.200
theme like the
color primary color

00:35:36.200 --> 00:35:38.920
accent and color primary
dark, Android Auto

00:35:38.920 --> 00:35:41.610
will show these colors
in the appropriate places

00:35:41.610 --> 00:35:44.780
throughout our UI.

00:35:44.780 --> 00:35:47.330
You can also define an
Android Auto specific theme

00:35:47.330 --> 00:35:50.850
in your media app by adding a
metadata element in your apps

00:35:50.850 --> 00:35:54.370
manifest as shown.

00:35:54.370 --> 00:35:58.100
Lastly, Android Auto may show
a media related notification.

00:35:58.100 --> 00:36:00.970
For example, when the next
track is being played,

00:36:00.970 --> 00:36:04.460
a notification with the
track name will be shown.

00:36:04.460 --> 00:36:07.810
So be sure to specify an icon
resource in your manifest so

00:36:07.810 --> 00:36:10.434
that your apps icon is also
displayed in the notification.

00:36:13.280 --> 00:36:14.750
So that's it.

00:36:14.750 --> 00:36:18.060
With a few simple steps you
can customize your media app

00:36:18.060 --> 00:36:20.410
with an Android Auto
that works across all the

00:36:20.410 --> 00:36:23.390
supported surfaces while
getting a driver-tested user

00:36:23.390 --> 00:36:26.860
experience for free.

00:36:26.860 --> 00:36:29.530
So next I want to
talk about messaging.

00:36:29.530 --> 00:36:31.710
We know that staying
connected to people

00:36:31.710 --> 00:36:33.970
that we care about, like
our friends or family,

00:36:33.970 --> 00:36:36.530
is very important to all of
us regardless of whether we're

00:36:36.530 --> 00:36:38.300
in the car or not.

00:36:38.300 --> 00:36:40.050
With driver safety in
mind, it's important

00:36:40.050 --> 00:36:41.770
that users can
access their messages

00:36:41.770 --> 00:36:44.310
in Android Auto with
minimal distractions

00:36:44.310 --> 00:36:47.100
so that drivers can
focus on the road.

00:36:47.100 --> 00:36:48.960
We don't think every
messaging app should

00:36:48.960 --> 00:36:52.390
be burdened with having to do
extensive driver distraction

00:36:52.390 --> 00:36:55.030
testing to achieve this goal.

00:36:55.030 --> 00:36:57.150
So with messaging, we've
taken a similar approach

00:36:57.150 --> 00:36:58.460
as we have with the media.

00:36:58.460 --> 00:37:02.040
We have an API that abstracts
out these things so that you

00:37:02.040 --> 00:37:06.500
don't have to worry about and
focus on getting the messaging

00:37:06.500 --> 00:37:07.602
experience right.

00:37:10.560 --> 00:37:12.830
This is just a recap
of how messaging works.

00:37:12.830 --> 00:37:17.350
As Paco demoed earlier,
it's pretty straightforward.

00:37:17.350 --> 00:37:19.640
We have a notification
that appears when it comes

00:37:19.640 --> 00:37:21.590
and then there's a
messaging card that

00:37:21.590 --> 00:37:24.090
remains in the overview screen.

00:37:24.090 --> 00:37:25.900
The API quite simple.

00:37:25.900 --> 00:37:29.610
It's actually built on top
of Android notifications

00:37:29.610 --> 00:37:33.520
which is something I'm sure
your app is already using.

00:37:33.520 --> 00:37:38.120
So when an incoming
message arrives,

00:37:38.120 --> 00:37:41.670
your messaging app
already will notify

00:37:41.670 --> 00:37:44.390
Android of the notification.

00:37:44.390 --> 00:37:47.600
Now if your notification is
extended with CarExtender,

00:37:47.600 --> 00:37:50.770
Android Auto will be able
to receive the notification

00:37:50.770 --> 00:37:55.690
and display the
notification to the user.

00:37:55.690 --> 00:38:01.190
When the user issues a
read command via voice,

00:38:01.190 --> 00:38:04.600
Read PendingIntent gets
sent back to your app.

00:38:04.600 --> 00:38:08.070
Similarly, when the user
replies to a conversation,

00:38:08.070 --> 00:38:11.630
a Reply PendingIntent
get sent back.

00:38:11.630 --> 00:38:15.540
Like media, before you get
Android Auto to recognize

00:38:15.540 --> 00:38:17.640
your app for messaging,
make sure you

00:38:17.640 --> 00:38:23.470
include the notification usage
in your Android manifest.

00:38:23.470 --> 00:38:26.260
OK, so let's dive into the part
of extending your notification

00:38:26.260 --> 00:38:27.931
with CarExtender.

00:38:27.931 --> 00:38:32.120
The first portion of this
code snippet looks familiar.

00:38:32.120 --> 00:38:33.970
The interesting part
that we care about here

00:38:33.970 --> 00:38:37.651
is where we extend it
with a CarExtender object.

00:38:40.820 --> 00:38:45.770
One tip that I want to pass
on is if your app is actually

00:38:45.770 --> 00:38:50.840
checking to see if Android Auto
is present before extending

00:38:50.840 --> 00:38:53.590
the notification,
we recommend not

00:38:53.590 --> 00:38:56.880
checking for the existence
of the Android Auto package

00:38:56.880 --> 00:38:58.990
since that's not very reliable.

00:38:58.990 --> 00:39:01.160
Instead, you can use
the UI mode manager

00:39:01.160 --> 00:39:03.788
and see if Android Auto
is running in car mode.

00:39:07.040 --> 00:39:10.439
So let's look at the
unread conversation object.

00:39:10.439 --> 00:39:12.230
First, I think it would
be useful to define

00:39:12.230 --> 00:39:14.040
some definitions.

00:39:14.040 --> 00:39:19.310
So a message is essentially
just a short length of text

00:39:19.310 --> 00:39:22.590
that Android Auto will
read out to the user.

00:39:22.590 --> 00:39:25.940
It's best to not make
these messages too long.

00:39:25.940 --> 00:39:27.890
A conversation essentially
is a collection

00:39:27.890 --> 00:39:30.690
of messages that are grouped
together in some way.

00:39:30.690 --> 00:39:34.860
And typically messages between
user and another person

00:39:34.860 --> 00:39:36.420
will be a conversation.

00:39:39.192 --> 00:39:40.900
So with that-- and an
unread conversation

00:39:40.900 --> 00:39:43.240
is actually just a
set of unread messages

00:39:43.240 --> 00:39:45.760
for a particular conversation.

00:39:45.760 --> 00:39:47.880
OK so what goes inside
this conversation--

00:39:47.880 --> 00:39:49.610
this unread conversation.

00:39:49.610 --> 00:39:51.450
You can pass any
conversation name.

00:39:51.450 --> 00:39:54.480
This is the text
that gets presented

00:39:54.480 --> 00:39:58.990
to the user when Android Auto
presents an unread message.

00:39:58.990 --> 00:40:02.190
Obviously you pass in
the actual messages.

00:40:02.190 --> 00:40:04.260
There might be more than one.

00:40:04.260 --> 00:40:06.830
And in this case when
you set the time stamp

00:40:06.830 --> 00:40:10.060
for these messages,
include the time stamp

00:40:10.060 --> 00:40:15.360
for the most recent message.

00:40:15.360 --> 00:40:18.650
There are two remaining
ones, the Read PendingIntent

00:40:18.650 --> 00:40:20.940
and the reply action
that we'll dive

00:40:20.940 --> 00:40:25.890
into more in the next slides.

00:40:25.890 --> 00:40:29.590
Also if there is a message
that only has an image,

00:40:29.590 --> 00:40:32.640
we recommend including
a readable all text so

00:40:32.640 --> 00:40:36.760
that the user doesn't experience
a broken experience when

00:40:36.760 --> 00:40:38.770
reading back through messages.

00:40:38.770 --> 00:40:44.240
Also please do think about how
this works for group chats.

00:40:44.240 --> 00:40:47.460
We recommend actually
just testing out the flow

00:40:47.460 --> 00:40:49.530
and seeing if when the
user is reading back

00:40:49.530 --> 00:40:53.002
the message if it's an actual,
if it's a good user experience.

00:40:56.190 --> 00:40:57.460
All right.

00:40:57.460 --> 00:40:59.910
OK, so the Read
PendingIntent, again,

00:40:59.910 --> 00:41:02.410
is PendingIntent that
Android Auto sends

00:41:02.410 --> 00:41:06.401
back to your messaging app when
the user has invoked a read

00:41:06.401 --> 00:41:06.900
action.

00:41:10.130 --> 00:41:12.940
It's creating the Read
PendingIntent is pretty simple.

00:41:12.940 --> 00:41:14.410
You create the
intent that you want

00:41:14.410 --> 00:41:16.950
the app to that you want
Android Auto to send back

00:41:16.950 --> 00:41:21.290
when the user has
completed a read message.

00:41:21.290 --> 00:41:23.020
To the primary
things to highlight

00:41:23.020 --> 00:41:25.500
is you just want to set
the action string that is

00:41:25.500 --> 00:41:30.420
specific to this read action.

00:41:30.420 --> 00:41:32.730
Be sure to set the
component because we want

00:41:32.730 --> 00:41:34.870
this intent to be explicit.

00:41:34.870 --> 00:41:36.710
This way it's
guaranteed that your app

00:41:36.710 --> 00:41:40.120
will get the PendingIntent.

00:41:40.120 --> 00:41:45.640
And then lastly put the extra--
or put the conversation idea

00:41:45.640 --> 00:41:49.294
as an extra in the intent
that you can then later check.

00:41:49.294 --> 00:41:50.960
And once you have
that then you can just

00:41:50.960 --> 00:41:52.085
wrap it in a PendingIntent.

00:41:55.570 --> 00:42:00.630
So receiving this Read
PendingIntent is pretty simple.

00:42:00.630 --> 00:42:04.263
In your apps manifest
just have a receiver

00:42:04.263 --> 00:42:08.890
that is registered against
the read message action string

00:42:08.890 --> 00:42:11.250
that we defined earlier.

00:42:11.250 --> 00:42:14.720
And this way when the Read
PendingIntent is sent back

00:42:14.720 --> 00:42:17.270
to your app, the
appropriate receiver--

00:42:17.270 --> 00:42:20.700
the appropriate broadcast
receiver is invoked.

00:42:20.700 --> 00:42:22.130
And then the on
received callback,

00:42:22.130 --> 00:42:24.380
this is where you can
process the intent

00:42:24.380 --> 00:42:28.350
and handle the read
message and event.

00:42:31.110 --> 00:42:34.980
So the last part is
the reply action.

00:42:34.980 --> 00:42:36.540
I'll kind of just
glance over this.

00:42:36.540 --> 00:42:39.670
Again, this is sent when
there is a reply event.

00:42:39.670 --> 00:42:42.430
Similar to the
Read PendingIntent,

00:42:42.430 --> 00:42:45.180
you create an intent with
the appropriate action

00:42:45.180 --> 00:42:49.560
stream that is specific
for the reply message.

00:42:49.560 --> 00:42:53.400
And then you can wrap the
intent with Read PendingIntent.

00:42:53.400 --> 00:42:57.040
The remote input object
is just passed along

00:42:57.040 --> 00:42:58.890
with the Pending Intent
that gets sent back

00:42:58.890 --> 00:43:03.850
to your app which will store
the actual string making up

00:43:03.850 --> 00:43:05.580
of the user's reply message.

00:43:08.550 --> 00:43:12.200
And with that, the broadcast
receiver that you've registered

00:43:12.200 --> 00:43:14.540
will get the on receive
callback and then

00:43:14.540 --> 00:43:19.660
you can extract the ID and
then the message reply.

00:43:19.660 --> 00:43:22.810
One hint or one tip is
when you get this just

00:43:22.810 --> 00:43:24.900
don't assume that
the user has read

00:43:24.900 --> 00:43:30.890
any unread messages since the
user can actually send replies

00:43:30.890 --> 00:43:32.510
out of band.

00:43:32.510 --> 00:43:34.740
And then, like media, you
can also customize the look

00:43:34.740 --> 00:43:39.895
and feel in this notification,
the CarExtender object.

00:43:43.080 --> 00:43:46.760
Again, that was a simple way
of making your messaging app

00:43:46.760 --> 00:43:48.320
support Android Auto.

00:43:48.320 --> 00:43:51.384
And next I'm going
to invite Paco back.

00:43:51.384 --> 00:43:52.050
PACO: All right.

00:43:52.050 --> 00:43:52.841
Thank you, Vincent.

00:43:56.570 --> 00:44:00.030
Just wanted to conclude
summarizing what I believe

00:44:00.030 --> 00:44:03.300
are the main three takeaways
of the presentation.

00:44:03.300 --> 00:44:07.112
The first one is that Android
is showing great momentum

00:44:07.112 --> 00:44:08.820
in the number of cars
that are supporting

00:44:08.820 --> 00:44:12.730
Android Auto, the number of
applications that are already

00:44:12.730 --> 00:44:15.850
running on the platform, and
also the number of countries

00:44:15.850 --> 00:44:18.810
where it is already available.

00:44:18.810 --> 00:44:22.230
The second one is that we're
expanding our regional platform

00:44:22.230 --> 00:44:26.030
to give your applications
significantly more reach

00:44:26.030 --> 00:44:29.700
by enabling Android Auto on your
phone screen and, of course,

00:44:29.700 --> 00:44:33.910
bringing the power of Android
M natively into the car.

00:44:33.910 --> 00:44:38.040
And the last point,
still, the same interfaces

00:44:38.040 --> 00:44:40.620
will work across
all three surfaces.

00:44:40.620 --> 00:44:42.700
Your application will
run in a framework that

00:44:42.700 --> 00:44:46.490
has been tested for
driver distraction,

00:44:46.490 --> 00:44:48.890
to minimize driver
distraction including

00:44:48.890 --> 00:44:51.960
voice integration to power
the most common tasks that you

00:44:51.960 --> 00:44:54.300
can perform.

00:44:54.300 --> 00:44:58.330
As for next steps, if you're
ready to start implementing,

00:44:58.330 --> 00:45:02.040
to start integrating
with the platform,

00:45:02.040 --> 00:45:04.630
all the technical details
that we talked about today

00:45:04.630 --> 00:45:08.060
are available on these links.

00:45:08.060 --> 00:45:13.840
Please join the developer
group, Android Auto Dev.

00:45:13.840 --> 00:45:17.110
And if you remember any
link out of this talk,

00:45:17.110 --> 00:45:21.700
developerandroid.com/auto.

00:45:21.700 --> 00:45:23.760
In the meantime, if
you want to learn more,

00:45:23.760 --> 00:45:25.820
you have questions,
come talk to us.

00:45:25.820 --> 00:45:27.540
The sandbox is right
behind the big tent

00:45:27.540 --> 00:45:31.100
here and check out the
cars from our partners,

00:45:31.100 --> 00:45:35.050
check out the concept car
and all of the other ones.

00:45:35.050 --> 00:45:38.970
We also have phones there so
you can see how this works.

00:45:38.970 --> 00:45:42.220
If you have time and want
to give coding a try,

00:45:42.220 --> 00:45:45.110
we also have an Android
Auto-specific code

00:45:45.110 --> 00:45:48.230
lab in the code lab section.

00:45:48.230 --> 00:45:50.280
If you want to hear
from us in the future,

00:45:50.280 --> 00:45:54.836
sign up for news at
android.com/auto.

00:45:54.836 --> 00:45:57.820
And I don't think we
have time for Q&amp;A,

00:45:57.820 --> 00:46:02.190
but again come talk
to us in the sandbox.

00:46:02.190 --> 00:46:07.860
And I don't want to really
take any more time of yours.

00:46:07.860 --> 00:46:09.410
Please, it's been a long day.

00:46:09.410 --> 00:46:15.240
Go enjoy the concert, go
relax, and thank you very much.

