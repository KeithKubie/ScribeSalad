WEBVTT
Kind: captions
Language: en

00:00:01.500 --> 00:00:05.200
 
[Music]

00:00:05.200 --> 00:00:05.210
[Music]
 

00:00:05.210 --> 00:00:09.169
[Music]
good afternoon my name is bill bill ado

00:00:09.169 --> 00:00:09.179
good afternoon my name is bill bill ado
 

00:00:09.179 --> 00:00:15.580
good afternoon my name is bill bill ado
and I'm a developer advocate at Google

00:00:15.580 --> 00:00:15.590
 
 

00:00:15.590 --> 00:00:18.019
 
so today we're going to talk about

00:00:18.019 --> 00:00:18.029
so today we're going to talk about
 

00:00:18.029 --> 00:00:20.750
so today we're going to talk about
improving game performance so that you

00:00:20.750 --> 00:00:20.760
improving game performance so that you
 

00:00:20.760 --> 00:00:23.200
improving game performance so that you
can make high fidelity games on Android

00:00:23.200 --> 00:00:23.210
can make high fidelity games on Android
 

00:00:23.210 --> 00:00:26.240
can make high fidelity games on Android
the first part will be about common

00:00:26.240 --> 00:00:26.250
the first part will be about common
 

00:00:26.250 --> 00:00:28.609
the first part will be about common
performance issues and the profiling

00:00:28.609 --> 00:00:28.619
performance issues and the profiling
 

00:00:28.619 --> 00:00:31.640
performance issues and the profiling
tools you can use to find them next

00:00:31.640 --> 00:00:31.650
tools you can use to find them next
 

00:00:31.650 --> 00:00:34.430
tools you can use to find them next
jung-woo will be talk from Samsung we'll

00:00:34.430 --> 00:00:34.440
jung-woo will be talk from Samsung we'll
 

00:00:34.440 --> 00:00:37.220
jung-woo will be talk from Samsung we'll
be talking about optimization techniques

00:00:37.220 --> 00:00:37.230
be talking about optimization techniques
 

00:00:37.230 --> 00:00:40.520
be talking about optimization techniques
and then finally we'll hear from duke at

00:00:40.520 --> 00:00:40.530
and then finally we'll hear from duke at
 

00:00:40.530 --> 00:00:42.860
and then finally we'll hear from duke at
netmarble about how those techniques

00:00:42.860 --> 00:00:42.870
netmarble about how those techniques
 

00:00:42.870 --> 00:00:45.170
netmarble about how those techniques
were put into practice in one of their

00:00:45.170 --> 00:00:45.180
were put into practice in one of their
 

00:00:45.180 --> 00:00:52.410
were put into practice in one of their
games lineage 2

00:00:52.410 --> 00:00:52.420
 
 

00:00:52.420 --> 00:00:55.319
 
what are the best reasons for making a

00:00:55.319 --> 00:00:55.329
what are the best reasons for making a
 

00:00:55.329 --> 00:00:57.630
what are the best reasons for making a
high-performance game is to have high

00:00:57.630 --> 00:00:57.640
high-performance game is to have high
 

00:00:57.640 --> 00:01:01.349
high-performance game is to have high
fidelity when we say high fidelity we

00:01:01.349 --> 00:01:01.359
fidelity when we say high fidelity we
 

00:01:01.359 --> 00:01:04.649
fidelity when we say high fidelity we
mean high quality realistic immersive

00:01:04.649 --> 00:01:04.659
mean high quality realistic immersive
 

00:01:04.659 --> 00:01:08.160
mean high quality realistic immersive
graphics high fidelity games used to be

00:01:08.160 --> 00:01:08.170
graphics high fidelity games used to be
 

00:01:08.170 --> 00:01:11.249
graphics high fidelity games used to be
limited to just PCs and consoles but

00:01:11.249 --> 00:01:11.259
limited to just PCs and consoles but
 

00:01:11.259 --> 00:01:13.020
limited to just PCs and consoles but
with recent improvements in hardware

00:01:13.020 --> 00:01:13.030
with recent improvements in hardware
 

00:01:13.030 --> 00:01:15.779
with recent improvements in hardware
it's now possible to play these types of

00:01:15.779 --> 00:01:15.789
it's now possible to play these types of
 

00:01:15.789 --> 00:01:20.249
it's now possible to play these types of
games on mobile devices even with the

00:01:20.249 --> 00:01:20.259
games on mobile devices even with the
 

00:01:20.259 --> 00:01:23.160
games on mobile devices even with the
latest hardware developers still need to

00:01:23.160 --> 00:01:23.170
latest hardware developers still need to
 

00:01:23.170 --> 00:01:26.219
latest hardware developers still need to
be aware of performance issues before I

00:01:26.219 --> 00:01:26.229
be aware of performance issues before I
 

00:01:26.229 --> 00:01:28.410
be aware of performance issues before I
talk about that I want to discuss some

00:01:28.410 --> 00:01:28.420
talk about that I want to discuss some
 

00:01:28.420 --> 00:01:32.450
talk about that I want to discuss some
of the basic concepts of rendering

00:01:32.450 --> 00:01:32.460
 
 

00:01:32.460 --> 00:01:35.520
 
rendering commands are built on the CPU

00:01:35.520 --> 00:01:35.530
rendering commands are built on the CPU
 

00:01:35.530 --> 00:01:37.949
rendering commands are built on the CPU
the graphics driver accused these

00:01:37.949 --> 00:01:37.959
the graphics driver accused these
 

00:01:37.959 --> 00:01:41.130
the graphics driver accused these
commands for the GPU to render because

00:01:41.130 --> 00:01:41.140
commands for the GPU to render because
 

00:01:41.140 --> 00:01:44.100
commands for the GPU to render because
the GPU is a separate processor it runs

00:01:44.100 --> 00:01:44.110
the GPU is a separate processor it runs
 

00:01:44.110 --> 00:01:46.949
the GPU is a separate processor it runs
asynchronously with the CPU this means

00:01:46.949 --> 00:01:46.959
asynchronously with the CPU this means
 

00:01:46.959 --> 00:01:50.279
asynchronously with the CPU this means
that the CPU can build commands for the

00:01:50.279 --> 00:01:50.289
that the CPU can build commands for the
 

00:01:50.289 --> 00:01:52.740
that the CPU can build commands for the
current frame while the GPU renders

00:01:52.740 --> 00:01:52.750
current frame while the GPU renders
 

00:01:52.750 --> 00:01:56.910
current frame while the GPU renders
commands from the previous frame to

00:01:56.910 --> 00:01:56.920
commands from the previous frame to
 

00:01:56.920 --> 00:02:00.029
commands from the previous frame to
avoid artifacts frames are displayed at

00:02:00.029 --> 00:02:00.039
avoid artifacts frames are displayed at
 

00:02:00.039 --> 00:02:02.730
avoid artifacts frames are displayed at
vsync intervals this is every sixteen

00:02:02.730 --> 00:02:02.740
vsync intervals this is every sixteen
 

00:02:02.740 --> 00:02:06.749
vsync intervals this is every sixteen
point six seven milliseconds if the GPU

00:02:06.749 --> 00:02:06.759
point six seven milliseconds if the GPU
 

00:02:06.759 --> 00:02:11.190
point six seven milliseconds if the GPU
is if the GPU misses a vsync the frame

00:02:11.190 --> 00:02:11.200
is if the GPU misses a vsync the frame
 

00:02:11.200 --> 00:02:14.390
is if the GPU misses a vsync the frame
buffer is displayed at the next we think

00:02:14.390 --> 00:02:14.400
buffer is displayed at the next we think
 

00:02:14.400 --> 00:02:17.310
buffer is displayed at the next we think
too many missed vsync can cause

00:02:17.310 --> 00:02:17.320
too many missed vsync can cause
 

00:02:17.320 --> 00:02:22.259
too many missed vsync can cause
stuttering or Jencks if the frame is not

00:02:22.259 --> 00:02:22.269
stuttering or Jencks if the frame is not
 

00:02:22.269 --> 00:02:25.289
stuttering or Jencks if the frame is not
a multiple of you sinks you can see

00:02:25.289 --> 00:02:25.299
a multiple of you sinks you can see
 

00:02:25.299 --> 00:02:29.910
a multiple of you sinks you can see
uneven frame times so for example let's

00:02:29.910 --> 00:02:29.920
uneven frame times so for example let's
 

00:02:29.920 --> 00:02:32.039
uneven frame times so for example let's
say we have a frame time that's about 20

00:02:32.039 --> 00:02:32.049
say we have a frame time that's about 20
 

00:02:32.049 --> 00:02:34.470
say we have a frame time that's about 20
milliseconds it will deplete it will

00:02:34.470 --> 00:02:34.480
milliseconds it will deplete it will
 

00:02:34.480 --> 00:02:37.440
milliseconds it will deplete it will
display some of the frames every 2v

00:02:37.440 --> 00:02:37.450
display some of the frames every 2v
 

00:02:37.450 --> 00:02:41.059
display some of the frames every 2v
sinks and some frames every every vsync

00:02:41.059 --> 00:02:41.069
sinks and some frames every every vsync
 

00:02:41.069 --> 00:02:44.009
sinks and some frames every every vsync
to smooth about the frame rate we can

00:02:44.009 --> 00:02:44.019
to smooth about the frame rate we can
 

00:02:44.019 --> 00:02:46.800
to smooth about the frame rate we can
delay the rendering to make the frame

00:02:46.800 --> 00:02:46.810
delay the rendering to make the frame
 

00:02:46.810 --> 00:02:49.920
delay the rendering to make the frame
time and even vsync of intervals as in

00:02:49.920 --> 00:02:49.930
time and even vsync of intervals as in
 

00:02:49.930 --> 00:02:52.110
time and even vsync of intervals as in
this case will now see the display

00:02:52.110 --> 00:02:52.120
this case will now see the display
 

00:02:52.120 --> 00:02:54.470
this case will now see the display
happening every other vsync

00:02:54.470 --> 00:02:54.480
happening every other vsync
 

00:02:54.480 --> 00:02:56.449
happening every other vsync
one of the advantages of doing this is

00:02:56.449 --> 00:02:56.459
one of the advantages of doing this is
 

00:02:56.459 --> 00:02:59.930
one of the advantages of doing this is
also that it saves battery life because

00:02:59.930 --> 00:02:59.940
also that it saves battery life because
 

00:02:59.940 --> 00:03:01.580
also that it saves battery life because
you're doing less work on the CPU and

00:03:01.580 --> 00:03:01.590
you're doing less work on the CPU and
 

00:03:01.590 --> 00:03:04.100
you're doing less work on the CPU and
GPU the trade-off of course is that

00:03:04.100 --> 00:03:04.110
GPU the trade-off of course is that
 

00:03:04.110 --> 00:03:08.630
GPU the trade-off of course is that
you're doing less render so let's look

00:03:08.630 --> 00:03:08.640
you're doing less render so let's look
 

00:03:08.640 --> 00:03:10.550
you're doing less render so let's look
at some of the issues that can cause

00:03:10.550 --> 00:03:10.560
at some of the issues that can cause
 

00:03:10.560 --> 00:03:14.420
at some of the issues that can cause
slow performance CPU activity can be the

00:03:14.420 --> 00:03:14.430
slow performance CPU activity can be the
 

00:03:14.430 --> 00:03:16.850
slow performance CPU activity can be the
cause of slow performance a CPU

00:03:16.850 --> 00:03:16.860
cause of slow performance a CPU
 

00:03:16.860 --> 00:03:19.309
cause of slow performance a CPU
bottleneck is when a CPU can't keep up

00:03:19.309 --> 00:03:19.319
bottleneck is when a CPU can't keep up
 

00:03:19.319 --> 00:03:22.509
bottleneck is when a CPU can't keep up
with the GPU this means that the GPU is

00:03:22.509 --> 00:03:22.519
with the GPU this means that the GPU is
 

00:03:22.519 --> 00:03:25.790
with the GPU this means that the GPU is
waiting an idle waiting for commands to

00:03:25.790 --> 00:03:25.800
waiting an idle waiting for commands to
 

00:03:25.800 --> 00:03:27.740
waiting an idle waiting for commands to
be sent to it this breaks the

00:03:27.740 --> 00:03:27.750
be sent to it this breaks the
 

00:03:27.750 --> 00:03:30.380
be sent to it this breaks the
parallelism between the CPU and a GPU

00:03:30.380 --> 00:03:30.390
parallelism between the CPU and a GPU
 

00:03:30.390 --> 00:03:35.210
parallelism between the CPU and a GPU
which makes it less efficient some of

00:03:35.210 --> 00:03:35.220
which makes it less efficient some of
 

00:03:35.220 --> 00:03:37.610
which makes it less efficient some of
the common causes of CPU bottlenecks

00:03:37.610 --> 00:03:37.620
the common causes of CPU bottlenecks
 

00:03:37.620 --> 00:03:40.820
the common causes of CPU bottlenecks
include too many draw calls and this is

00:03:40.820 --> 00:03:40.830
include too many draw calls and this is
 

00:03:40.830 --> 00:03:42.949
include too many draw calls and this is
because with every draw call there's a

00:03:42.949 --> 00:03:42.959
because with every draw call there's a
 

00:03:42.959 --> 00:03:45.860
because with every draw call there's a
certain amount of driver overhead on the

00:03:45.860 --> 00:03:45.870
certain amount of driver overhead on the
 

00:03:45.870 --> 00:03:50.509
certain amount of driver overhead on the
CPU single threading can also be an

00:03:50.509 --> 00:03:50.519
CPU single threading can also be an
 

00:03:50.519 --> 00:03:53.030
CPU single threading can also be an
issue this is when you put too much on

00:03:53.030 --> 00:03:53.040
issue this is when you put too much on
 

00:03:53.040 --> 00:03:55.490
issue this is when you put too much on
one thread for example rendering thread

00:03:55.490 --> 00:03:55.500
one thread for example rendering thread
 

00:03:55.500 --> 00:03:57.229
one thread for example rendering thread
rendering and game simulation on the

00:03:57.229 --> 00:03:57.239
rendering and game simulation on the
 

00:03:57.239 --> 00:04:00.349
rendering and game simulation on the
same thread now both of these could be

00:04:00.349 --> 00:04:00.359
same thread now both of these could be
 

00:04:00.359 --> 00:04:03.470
same thread now both of these could be
improved with the Vulcan graphics API if

00:04:03.470 --> 00:04:03.480
improved with the Vulcan graphics API if
 

00:04:03.480 --> 00:04:04.819
improved with the Vulcan graphics API if
you remember last year at i/o we

00:04:04.819 --> 00:04:04.829
you remember last year at i/o we
 

00:04:04.829 --> 00:04:07.780
you remember last year at i/o we
announced Vulcan on Android devices

00:04:07.780 --> 00:04:07.790
announced Vulcan on Android devices
 

00:04:07.790 --> 00:04:11.150
announced Vulcan on Android devices
Vulcan is a more explicit API than

00:04:11.150 --> 00:04:11.160
Vulcan is a more explicit API than
 

00:04:11.160 --> 00:04:13.160
Vulcan is a more explicit API than
OpenGL and it's closer to what that

00:04:13.160 --> 00:04:13.170
OpenGL and it's closer to what that
 

00:04:13.170 --> 00:04:15.560
OpenGL and it's closer to what that
hardware is actually doing this means it

00:04:15.560 --> 00:04:15.570
hardware is actually doing this means it
 

00:04:15.570 --> 00:04:18.409
hardware is actually doing this means it
has less overhead per draw call you can

00:04:18.409 --> 00:04:18.419
has less overhead per draw call you can
 

00:04:18.419 --> 00:04:21.050
has less overhead per draw call you can
also do multi-threaded command buffers

00:04:21.050 --> 00:04:21.060
also do multi-threaded command buffers
 

00:04:21.060 --> 00:04:25.640
also do multi-threaded command buffers
of building so another problem that

00:04:25.640 --> 00:04:25.650
of building so another problem that
 

00:04:25.650 --> 00:04:27.560
of building so another problem that
could be causing a CPU bottleneck is too

00:04:27.560 --> 00:04:27.570
could be causing a CPU bottleneck is too
 

00:04:27.570 --> 00:04:29.480
could be causing a CPU bottleneck is too
many state changes and this adds to the

00:04:29.480 --> 00:04:29.490
many state changes and this adds to the
 

00:04:29.490 --> 00:04:33.200
many state changes and this adds to the
driver overhead the GPU can also be a

00:04:33.200 --> 00:04:33.210
driver overhead the GPU can also be a
 

00:04:33.210 --> 00:04:35.600
driver overhead the GPU can also be a
cause of slow performance GPU

00:04:35.600 --> 00:04:35.610
cause of slow performance GPU
 

00:04:35.610 --> 00:04:38.150
cause of slow performance GPU
bottlenecks are when the GPU is taking

00:04:38.150 --> 00:04:38.160
bottlenecks are when the GPU is taking
 

00:04:38.160 --> 00:04:42.650
bottlenecks are when the GPU is taking
too much time to render the driver can

00:04:42.650 --> 00:04:42.660
too much time to render the driver can
 

00:04:42.660 --> 00:04:45.440
too much time to render the driver can
help this by buffering commands and up

00:04:45.440 --> 00:04:45.450
help this by buffering commands and up
 

00:04:45.450 --> 00:04:47.480
help this by buffering commands and up
for a couple of frames but when this cue

00:04:47.480 --> 00:04:47.490
for a couple of frames but when this cue
 

00:04:47.490 --> 00:04:53.540
for a couple of frames but when this cue
gets full the CPU has to just wait as

00:04:53.540 --> 00:04:53.550
gets full the CPU has to just wait as
 

00:04:53.550 --> 00:04:55.879
gets full the CPU has to just wait as
with CPU bottlenecks this breaks the

00:04:55.879 --> 00:04:55.889
with CPU bottlenecks this breaks the
 

00:04:55.889 --> 00:05:00.450
with CPU bottlenecks this breaks the
parallelism between the CPU and the GPU

00:05:00.450 --> 00:05:00.460
 
 

00:05:00.460 --> 00:05:02.850
 
some of the common causes of GPU

00:05:02.850 --> 00:05:02.860
some of the common causes of GPU
 

00:05:02.860 --> 00:05:06.480
some of the common causes of GPU
bottlenecks are fill rate on modern

00:05:06.480 --> 00:05:06.490
bottlenecks are fill rate on modern
 

00:05:06.490 --> 00:05:09.830
bottlenecks are fill rate on modern
phones the resolution is very high and

00:05:09.830 --> 00:05:09.840
phones the resolution is very high and
 

00:05:09.840 --> 00:05:12.960
phones the resolution is very high and
if you it can be worse if you have long

00:05:12.960 --> 00:05:12.970
if you it can be worse if you have long
 

00:05:12.970 --> 00:05:15.719
if you it can be worse if you have long
fragment shaders one thing you can do is

00:05:15.719 --> 00:05:15.729
fragment shaders one thing you can do is
 

00:05:15.729 --> 00:05:17.999
fragment shaders one thing you can do is
render to a lower resolution buffer now

00:05:17.999 --> 00:05:18.009
render to a lower resolution buffer now
 

00:05:18.009 --> 00:05:19.890
render to a lower resolution buffer now
the problem could be high polygon count

00:05:19.890 --> 00:05:19.900
the problem could be high polygon count
 

00:05:19.900 --> 00:05:21.600
the problem could be high polygon count
especially we only have heard complex

00:05:21.600 --> 00:05:21.610
especially we only have heard complex
 

00:05:21.610 --> 00:05:24.659
especially we only have heard complex
geometry buffer synchronization can also

00:05:24.659 --> 00:05:24.669
geometry buffer synchronization can also
 

00:05:24.669 --> 00:05:26.760
geometry buffer synchronization can also
be an issue this is when the GPU has to

00:05:26.760 --> 00:05:26.770
be an issue this is when the GPU has to
 

00:05:26.770 --> 00:05:30.390
be an issue this is when the GPU has to
wait until the CPU is done writing to a

00:05:30.390 --> 00:05:30.400
wait until the CPU is done writing to a
 

00:05:30.400 --> 00:05:33.270
wait until the CPU is done writing to a
buffer that's served between the two and

00:05:33.270 --> 00:05:33.280
buffer that's served between the two and
 

00:05:33.280 --> 00:05:35.490
buffer that's served between the two and
also too many state changes as with CPU

00:05:35.490 --> 00:05:35.500
also too many state changes as with CPU
 

00:05:35.500 --> 00:05:37.500
also too many state changes as with CPU
too many state changes can be a problem

00:05:37.500 --> 00:05:37.510
too many state changes can be a problem
 

00:05:37.510 --> 00:05:40.260
too many state changes can be a problem
these Hardware state changes can cause

00:05:40.260 --> 00:05:40.270
these Hardware state changes can cause
 

00:05:40.270 --> 00:05:42.570
these Hardware state changes can cause
the hardware the graphics hardware to

00:05:42.570 --> 00:05:42.580
the hardware the graphics hardware to
 

00:05:42.580 --> 00:05:45.000
the hardware the graphics hardware to
flush the pipeline which introduces a

00:05:45.000 --> 00:05:45.010
flush the pipeline which introduces a
 

00:05:45.010 --> 00:05:51.810
flush the pipeline which introduces a
stall overheating is a common issue with

00:05:51.810 --> 00:05:51.820
stall overheating is a common issue with
 

00:05:51.820 --> 00:05:54.960
stall overheating is a common issue with
mobile devices as the temperature goes

00:05:54.960 --> 00:05:54.970
mobile devices as the temperature goes
 

00:05:54.970 --> 00:05:57.120
mobile devices as the temperature goes
up the system governor has a governor

00:05:57.120 --> 00:05:57.130
up the system governor has a governor
 

00:05:57.130 --> 00:05:59.550
up the system governor has a governor
that makes the frequency and voltage go

00:05:59.550 --> 00:05:59.560
that makes the frequency and voltage go
 

00:05:59.560 --> 00:06:01.640
that makes the frequency and voltage go
down this is called thermal throttling

00:06:01.640 --> 00:06:01.650
down this is called thermal throttling
 

00:06:01.650 --> 00:06:06.270
down this is called thermal throttling
as the SOC cooled the frequency of the

00:06:06.270 --> 00:06:06.280
as the SOC cooled the frequency of the
 

00:06:06.280 --> 00:06:08.969
as the SOC cooled the frequency of the
voltage go back up again but then this

00:06:08.969 --> 00:06:08.979
voltage go back up again but then this
 

00:06:08.979 --> 00:06:15.320
voltage go back up again but then this
leads to an unstable frame rates

00:06:15.320 --> 00:06:15.330
 
 

00:06:15.330 --> 00:06:18.330
 
developers should not overlook long load

00:06:18.330 --> 00:06:18.340
developers should not overlook long load
 

00:06:18.340 --> 00:06:21.149
developers should not overlook long load
times this can cause people to stop

00:06:21.149 --> 00:06:21.159
times this can cause people to stop
 

00:06:21.159 --> 00:06:25.080
times this can cause people to stop
playing their game cold loads are when

00:06:25.080 --> 00:06:25.090
playing their game cold loads are when
 

00:06:25.090 --> 00:06:27.120
playing their game cold loads are when
the game needs to load assets into

00:06:27.120 --> 00:06:27.130
the game needs to load assets into
 

00:06:27.130 --> 00:06:30.659
the game needs to load assets into
memory immediates of process assets for

00:06:30.659 --> 00:06:30.669
memory immediates of process assets for
 

00:06:30.669 --> 00:06:32.189
memory immediates of process assets for
example you may need to decompress

00:06:32.189 --> 00:06:32.199
example you may need to decompress
 

00:06:32.199 --> 00:06:35.250
example you may need to decompress
assets you also may need to compile

00:06:35.250 --> 00:06:35.260
assets you also may need to compile
 

00:06:35.260 --> 00:06:38.210
assets you also may need to compile
shaders this all takes time on the CPU

00:06:38.210 --> 00:06:38.220
shaders this all takes time on the CPU
 

00:06:38.220 --> 00:06:40.680
shaders this all takes time on the CPU
you might try caching to avoid

00:06:40.680 --> 00:06:40.690
you might try caching to avoid
 

00:06:40.690 --> 00:06:42.360
you might try caching to avoid
duplicating this work every time you

00:06:42.360 --> 00:06:42.370
duplicating this work every time you
 

00:06:42.370 --> 00:06:47.219
duplicating this work every time you
load battery performance is also

00:06:47.219 --> 00:06:47.229
load battery performance is also
 

00:06:47.229 --> 00:06:50.339
load battery performance is also
important this affects how long your

00:06:50.339 --> 00:06:50.349
important this affects how long your
 

00:06:50.349 --> 00:06:52.310
important this affects how long your
users can play the game

00:06:52.310 --> 00:06:52.320
users can play the game
 

00:06:52.320 --> 00:06:54.450
users can play the game
unfortunately high performance games

00:06:54.450 --> 00:06:54.460
unfortunately high performance games
 

00:06:54.460 --> 00:06:58.020
unfortunately high performance games
tend to use more battery Vulcan can also

00:06:58.020 --> 00:06:58.030
tend to use more battery Vulcan can also
 

00:06:58.030 --> 00:07:00.029
tend to use more battery Vulcan can also
help with this because it has it uses

00:07:00.029 --> 00:07:00.039
help with this because it has it uses
 

00:07:00.039 --> 00:07:01.530
help with this because it has it uses
the CPU less

00:07:01.530 --> 00:07:01.540
the CPU less
 

00:07:01.540 --> 00:07:04.260
the CPU less
this is important because the CPU runs

00:07:04.260 --> 00:07:04.270
this is important because the CPU runs
 

00:07:04.270 --> 00:07:06.510
this is important because the CPU runs
at a higher clock speed than the GPU so

00:07:06.510 --> 00:07:06.520
at a higher clock speed than the GPU so
 

00:07:06.520 --> 00:07:11.490
at a higher clock speed than the GPU so
it uses more power to detect issues like

00:07:11.490 --> 00:07:11.500
it uses more power to detect issues like
 

00:07:11.500 --> 00:07:14.810
it uses more power to detect issues like
this there's several tools available

00:07:14.810 --> 00:07:14.820
this there's several tools available
 

00:07:14.820 --> 00:07:18.740
this there's several tools available
unfortunately one tool may not be enough

00:07:18.740 --> 00:07:18.750
unfortunately one tool may not be enough
 

00:07:18.750 --> 00:07:21.590
unfortunately one tool may not be enough
for example if you're doing low-level

00:07:21.590 --> 00:07:21.600
for example if you're doing low-level
 

00:07:21.600 --> 00:07:23.700
for example if you're doing low-level
profiling you may want to see the

00:07:23.700 --> 00:07:23.710
profiling you may want to see the
 

00:07:23.710 --> 00:07:25.740
profiling you may want to see the
hardware counters like on the GPU

00:07:25.740 --> 00:07:25.750
hardware counters like on the GPU
 

00:07:25.750 --> 00:07:30.410
hardware counters like on the GPU
this requires vendors of specific tools

00:07:30.410 --> 00:07:30.420
this requires vendors of specific tools
 

00:07:30.420 --> 00:07:33.030
this requires vendors of specific tools
so the first one we'll look at its its

00:07:33.030 --> 00:07:33.040
so the first one we'll look at its its
 

00:07:33.040 --> 00:07:35.910
so the first one we'll look at its its
trace and this is from Google this trace

00:07:35.910 --> 00:07:35.920
trace and this is from Google this trace
 

00:07:35.920 --> 00:07:38.760
trace and this is from Google this trace
is a system trace viewer and it shows

00:07:38.760 --> 00:07:38.770
is a system trace viewer and it shows
 

00:07:38.770 --> 00:07:41.730
is a system trace viewer and it shows
threads executing on the CPU the longer

00:07:41.730 --> 00:07:41.740
threads executing on the CPU the longer
 

00:07:41.740 --> 00:07:44.180
threads executing on the CPU the longer
the trace the more time is being spent

00:07:44.180 --> 00:07:44.190
the trace the more time is being spent
 

00:07:44.190 --> 00:07:48.120
the trace the more time is being spent
executing you can use custom trace

00:07:48.120 --> 00:07:48.130
executing you can use custom trace
 

00:07:48.130 --> 00:07:51.180
executing you can use custom trace
events in your game to see how different

00:07:51.180 --> 00:07:51.190
events in your game to see how different
 

00:07:51.190 --> 00:07:53.190
events in your game to see how different
sections of the game take how long they

00:07:53.190 --> 00:07:53.200
sections of the game take how long they
 

00:07:53.200 --> 00:07:56.220
sections of the game take how long they
take this can also show you how much

00:07:56.220 --> 00:07:56.230
take this can also show you how much
 

00:07:56.230 --> 00:08:00.470
take this can also show you how much
concurrency there is within your game

00:08:00.470 --> 00:08:00.480
 
 

00:08:00.480 --> 00:08:02.730
 
one thing you can do with systrace to

00:08:02.730 --> 00:08:02.740
one thing you can do with systrace to
 

00:08:02.740 --> 00:08:04.590
one thing you can do with systrace to
see system activity relative to your

00:08:04.590 --> 00:08:04.600
see system activity relative to your
 

00:08:04.600 --> 00:08:06.750
see system activity relative to your
game and see potential dependencies that

00:08:06.750 --> 00:08:06.760
game and see potential dependencies that
 

00:08:06.760 --> 00:08:10.290
game and see potential dependencies that
could be causing things to run slow for

00:08:10.290 --> 00:08:10.300
could be causing things to run slow for
 

00:08:10.300 --> 00:08:12.750
could be causing things to run slow for
more information you should watch this

00:08:12.750 --> 00:08:12.760
more information you should watch this
 

00:08:12.760 --> 00:08:14.970
more information you should watch this
session that was presented earlier at

00:08:14.970 --> 00:08:14.980
session that was presented earlier at
 

00:08:14.980 --> 00:08:17.790
session that was presented earlier at
i/o and we have it recorded on the i/o

00:08:17.790 --> 00:08:17.800
i/o and we have it recorded on the i/o
 

00:08:17.800 --> 00:08:23.520
i/o and we have it recorded on the i/o
website simple perf is a GPU profiler

00:08:23.520 --> 00:08:23.530
website simple perf is a GPU profiler
 

00:08:23.530 --> 00:08:26.070
website simple perf is a GPU profiler
from google it shows the percentages of

00:08:26.070 --> 00:08:26.080
from google it shows the percentages of
 

00:08:26.080 --> 00:08:28.400
from google it shows the percentages of
time spent in various parts of the game

00:08:28.400 --> 00:08:28.410
time spent in various parts of the game
 

00:08:28.410 --> 00:08:32.010
time spent in various parts of the game
for example we can use it to find the

00:08:32.010 --> 00:08:32.020
for example we can use it to find the
 

00:08:32.020 --> 00:08:33.870
for example we can use it to find the
share where the percentage of time spent

00:08:33.870 --> 00:08:33.880
share where the percentage of time spent
 

00:08:33.880 --> 00:08:37.020
share where the percentage of time spent
in shared libraries and that way we can

00:08:37.020 --> 00:08:37.030
in shared libraries and that way we can
 

00:08:37.030 --> 00:08:39.600
in shared libraries and that way we can
tell where most of the time was spent we

00:08:39.600 --> 00:08:39.610
tell where most of the time was spent we
 

00:08:39.610 --> 00:08:41.490
tell where most of the time was spent we
can we can then look at say one of these

00:08:41.490 --> 00:08:41.500
can we can then look at say one of these
 

00:08:41.500 --> 00:08:44.820
can we can then look at say one of these
shared libraries and then see where how

00:08:44.820 --> 00:08:44.830
shared libraries and then see where how
 

00:08:44.830 --> 00:08:46.230
shared libraries and then see where how
much percentage of time we'll spend in

00:08:46.230 --> 00:08:46.240
much percentage of time we'll spend in
 

00:08:46.240 --> 00:08:48.750
much percentage of time we'll spend in
each of the functions now one caveat

00:08:48.750 --> 00:08:48.760
each of the functions now one caveat
 

00:08:48.760 --> 00:08:51.060
each of the functions now one caveat
with simple perf right now it's not very

00:08:51.060 --> 00:08:51.070
with simple perf right now it's not very
 

00:08:51.070 --> 00:08:53.670
with simple perf right now it's not very
easy to use it requires a certain amount

00:08:53.670 --> 00:08:53.680
easy to use it requires a certain amount
 

00:08:53.680 --> 00:08:57.050
easy to use it requires a certain amount
of setup and it's only command-line but

00:08:57.050 --> 00:08:57.060
of setup and it's only command-line but
 

00:08:57.060 --> 00:08:59.040
of setup and it's only command-line but
once you get the hang of it it's

00:08:59.040 --> 00:08:59.050
once you get the hang of it it's
 

00:08:59.050 --> 00:09:01.230
once you get the hang of it it's
actually producing some valuable

00:09:01.230 --> 00:09:01.240
actually producing some valuable
 

00:09:01.240 --> 00:09:05.040
actually producing some valuable
information

00:09:05.040 --> 00:09:05.050
 
 

00:09:05.050 --> 00:09:07.920
 
other profilers include the hardware

00:09:07.920 --> 00:09:07.930
other profilers include the hardware
 

00:09:07.930 --> 00:09:11.160
other profilers include the hardware
vendor profilers for example Qualcomm

00:09:11.160 --> 00:09:11.170
vendor profilers for example Qualcomm
 

00:09:11.170 --> 00:09:13.260
vendor profilers for example Qualcomm
has Snapdragon profiler arm read

00:09:13.260 --> 00:09:13.270
has Snapdragon profiler arm read
 

00:09:13.270 --> 00:09:15.510
has Snapdragon profiler arm read
streamline and NVIDIA has the Tegra

00:09:15.510 --> 00:09:15.520
streamline and NVIDIA has the Tegra
 

00:09:15.520 --> 00:09:18.960
streamline and NVIDIA has the Tegra
system profiling game engines also have

00:09:18.960 --> 00:09:18.970
system profiling game engines also have
 

00:09:18.970 --> 00:09:20.730
system profiling game engines also have
profilers for example unity and real

00:09:20.730 --> 00:09:20.740
profilers for example unity and real
 

00:09:20.740 --> 00:09:23.970
profilers for example unity and real
have built-in profilers and also there

00:09:23.970 --> 00:09:23.980
have built-in profilers and also there
 

00:09:23.980 --> 00:09:26.280
have built-in profilers and also there
are graphics debuggers like render doc

00:09:26.280 --> 00:09:26.290
are graphics debuggers like render doc
 

00:09:26.290 --> 00:09:29.790
are graphics debuggers like render doc
and google's gap it these tools can

00:09:29.790 --> 00:09:29.800
and google's gap it these tools can
 

00:09:29.800 --> 00:09:32.340
and google's gap it these tools can
capture api calls that can help you find

00:09:32.340 --> 00:09:32.350
capture api calls that can help you find
 

00:09:32.350 --> 00:09:39.360
capture api calls that can help you find
inefficiencies in the api so here's an

00:09:39.360 --> 00:09:39.370
inefficiencies in the api so here's an
 

00:09:39.370 --> 00:09:42.270
inefficiencies in the api so here's an
example of profiling the game using the

00:09:42.270 --> 00:09:42.280
example of profiling the game using the
 

00:09:42.280 --> 00:09:45.570
example of profiling the game using the
qualcomm snapdragon profiler let's see

00:09:45.570 --> 00:09:45.580
qualcomm snapdragon profiler let's see
 

00:09:45.580 --> 00:09:47.280
qualcomm snapdragon profiler let's see
if we can find out where the bottleneck

00:09:47.280 --> 00:09:47.290
if we can find out where the bottleneck
 

00:09:47.290 --> 00:09:51.840
if we can find out where the bottleneck
is it shows that cpu traces similar to

00:09:51.840 --> 00:09:51.850
is it shows that cpu traces similar to
 

00:09:51.850 --> 00:09:56.360
is it shows that cpu traces similar to
this trace and it also shows GPU traces

00:09:56.360 --> 00:09:56.370
this trace and it also shows GPU traces
 

00:09:56.370 --> 00:10:00.030
this trace and it also shows GPU traces
so on the lower part of this display

00:10:00.030 --> 00:10:00.040
so on the lower part of this display
 

00:10:00.040 --> 00:10:02.730
so on the lower part of this display
here we can see the CPU scheduling with

00:10:02.730 --> 00:10:02.740
here we can see the CPU scheduling with
 

00:10:02.740 --> 00:10:05.000
here we can see the CPU scheduling with
colors corresponding to each thread on

00:10:05.000 --> 00:10:05.010
colors corresponding to each thread on
 

00:10:05.010 --> 00:10:08.910
colors corresponding to each thread on
the upper part is the GPU activity where

00:10:08.910 --> 00:10:08.920
the upper part is the GPU activity where
 

00:10:08.920 --> 00:10:11.220
the upper part is the GPU activity where
the blue bars represent when the GPU is

00:10:11.220 --> 00:10:11.230
the blue bars represent when the GPU is
 

00:10:11.230 --> 00:10:13.980
the blue bars represent when the GPU is
is rendering now the first thing we'll

00:10:13.980 --> 00:10:13.990
is rendering now the first thing we'll
 

00:10:13.990 --> 00:10:16.290
is rendering now the first thing we'll
notice here is that the GPU is idle for

00:10:16.290 --> 00:10:16.300
notice here is that the GPU is idle for
 

00:10:16.300 --> 00:10:18.500
notice here is that the GPU is idle for
a long time that's bad

00:10:18.500 --> 00:10:18.510
a long time that's bad
 

00:10:18.510 --> 00:10:24.180
a long time that's bad
in contrast the CPU core one is busy

00:10:24.180 --> 00:10:24.190
in contrast the CPU core one is busy
 

00:10:24.190 --> 00:10:27.600
in contrast the CPU core one is busy
almost the whole time this is a classic

00:10:27.600 --> 00:10:27.610
almost the whole time this is a classic
 

00:10:27.610 --> 00:10:32.010
almost the whole time this is a classic
case of a CPU bottleneck now we might be

00:10:32.010 --> 00:10:32.020
case of a CPU bottleneck now we might be
 

00:10:32.020 --> 00:10:33.540
case of a CPU bottleneck now we might be
able to multi thread this but in this

00:10:33.540 --> 00:10:33.550
able to multi thread this but in this
 

00:10:33.550 --> 00:10:35.040
able to multi thread this but in this
case this is the render thread and

00:10:35.040 --> 00:10:35.050
case this is the render thread and
 

00:10:35.050 --> 00:10:36.870
case this is the render thread and
OpenGL you can't do multi-threaded

00:10:36.870 --> 00:10:36.880
OpenGL you can't do multi-threaded
 

00:10:36.880 --> 00:10:39.840
OpenGL you can't do multi-threaded
rendering so let's take a closer look at

00:10:39.840 --> 00:10:39.850
rendering so let's take a closer look at
 

00:10:39.850 --> 00:10:42.180
rendering so let's take a closer look at
what's going on by doing a frame capture

00:10:42.180 --> 00:10:42.190
what's going on by doing a frame capture
 

00:10:42.190 --> 00:10:45.270
what's going on by doing a frame capture
now a frame capture shows us the API

00:10:45.270 --> 00:10:45.280
now a frame capture shows us the API
 

00:10:45.280 --> 00:10:48.360
now a frame capture shows us the API
call similar to debuggers like render

00:10:48.360 --> 00:10:48.370
call similar to debuggers like render
 

00:10:48.370 --> 00:10:51.960
call similar to debuggers like render
doc and if we look at the frame capture

00:10:51.960 --> 00:10:51.970
doc and if we look at the frame capture
 

00:10:51.970 --> 00:10:54.060
doc and if we look at the frame capture
we look at the draw calls there's a lot

00:10:54.060 --> 00:10:54.070
we look at the draw calls there's a lot
 

00:10:54.070 --> 00:10:56.970
we look at the draw calls there's a lot
of draw calls going on here almost 1500

00:10:56.970 --> 00:10:56.980
of draw calls going on here almost 1500
 

00:10:56.980 --> 00:11:00.090
of draw calls going on here almost 1500
draw calls that's actually a lot for too

00:11:00.090 --> 00:11:00.100
draw calls that's actually a lot for too
 

00:11:00.100 --> 00:11:03.720
draw calls that's actually a lot for too
much for a mobile CPU i remember with

00:11:03.720 --> 00:11:03.730
much for a mobile CPU i remember with
 

00:11:03.730 --> 00:11:06.150
much for a mobile CPU i remember with
every draw call there's CPU overhead and

00:11:06.150 --> 00:11:06.160
every draw call there's CPU overhead and
 

00:11:06.160 --> 00:11:09.330
every draw call there's CPU overhead and
that all adds up

00:11:09.330 --> 00:11:09.340
 
 

00:11:09.340 --> 00:11:12.330
 
so one thing we can do is we can draw

00:11:12.330 --> 00:11:12.340
so one thing we can do is we can draw
 

00:11:12.340 --> 00:11:15.720
so one thing we can do is we can draw
less or we can batch these draw calls

00:11:15.720 --> 00:11:15.730
less or we can batch these draw calls
 

00:11:15.730 --> 00:11:17.790
less or we can batch these draw calls
together by the ones that have the same

00:11:17.790 --> 00:11:17.800
together by the ones that have the same
 

00:11:17.800 --> 00:11:18.540
together by the ones that have the same
materials

00:11:18.540 --> 00:11:18.550
materials
 

00:11:18.550 --> 00:11:20.160
materials
that's them together and we'll have

00:11:20.160 --> 00:11:20.170
that's them together and we'll have
 

00:11:20.170 --> 00:11:21.600
that's them together and we'll have
fewer draw calls which will improve

00:11:21.600 --> 00:11:21.610
fewer draw calls which will improve
 

00:11:21.610 --> 00:11:29.519
fewer draw calls which will improve
performance our next speaker is Zhang Lu

00:11:29.519 --> 00:11:29.529
performance our next speaker is Zhang Lu
 

00:11:29.529 --> 00:11:32.160
performance our next speaker is Zhang Lu
Kim and he is a principal engineer at

00:11:32.160 --> 00:11:32.170
Kim and he is a principal engineer at
 

00:11:32.170 --> 00:11:34.800
Kim and he is a principal engineer at
Samsung he will talk about aim

00:11:34.800 --> 00:11:34.810
Samsung he will talk about aim
 

00:11:34.810 --> 00:11:43.970
Samsung he will talk about aim
optimizations thank you

00:11:43.970 --> 00:11:43.980
optimizations thank you
 

00:11:43.980 --> 00:11:47.040
optimizations thank you
well I'm John Kim I'm managing GPU

00:11:47.040 --> 00:11:47.050
well I'm John Kim I'm managing GPU
 

00:11:47.050 --> 00:11:50.250
well I'm John Kim I'm managing GPU
driver graphics performance for Alex

00:11:50.250 --> 00:11:50.260
driver graphics performance for Alex
 

00:11:50.260 --> 00:11:52.769
driver graphics performance for Alex
product and also reading corner standard

00:11:52.769 --> 00:11:52.779
product and also reading corner standard
 

00:11:52.779 --> 00:11:54.660
product and also reading corner standard
and game dev tag in Samsung mobile

00:11:54.660 --> 00:11:54.670
and game dev tag in Samsung mobile
 

00:11:54.670 --> 00:11:57.870
and game dev tag in Samsung mobile
division so I will talk about what

00:11:57.870 --> 00:11:57.880
division so I will talk about what
 

00:11:57.880 --> 00:11:59.820
division so I will talk about what
should be the right direction of the

00:11:59.820 --> 00:11:59.830
should be the right direction of the
 

00:11:59.830 --> 00:12:01.980
should be the right direction of the
gaming optimization and also some best

00:12:01.980 --> 00:12:01.990
gaming optimization and also some best
 

00:12:01.990 --> 00:12:04.110
gaming optimization and also some best
practices from our real experiences I

00:12:04.110 --> 00:12:04.120
practices from our real experiences I
 

00:12:04.120 --> 00:12:07.769
practices from our real experiences I
think you all knows about sometimes good

00:12:07.769 --> 00:12:07.779
think you all knows about sometimes good
 

00:12:07.779 --> 00:12:10.260
think you all knows about sometimes good
phone maker but you may not know about

00:12:10.260 --> 00:12:10.270
phone maker but you may not know about
 

00:12:10.270 --> 00:12:12.120
phone maker but you may not know about
we are not working with many game

00:12:12.120 --> 00:12:12.130
we are not working with many game
 

00:12:12.130 --> 00:12:14.550
we are not working with many game
developer for improving Android

00:12:14.550 --> 00:12:14.560
developer for improving Android
 

00:12:14.560 --> 00:12:19.860
developer for improving Android
ecosystem in Thailand descent so we are

00:12:19.860 --> 00:12:19.870
ecosystem in Thailand descent so we are
 

00:12:19.870 --> 00:12:22.380
ecosystem in Thailand descent so we are
working with over 50 game studios and

00:12:22.380 --> 00:12:22.390
working with over 50 game studios and
 

00:12:22.390 --> 00:12:24.930
working with over 50 game studios and
developers where around study game

00:12:24.930 --> 00:12:24.940
developers where around study game
 

00:12:24.940 --> 00:12:28.140
developers where around study game
titles - with with various kind of way

00:12:28.140 --> 00:12:28.150
titles - with with various kind of way
 

00:12:28.150 --> 00:12:30.870
titles - with with various kind of way
under our new game developer support

00:12:30.870 --> 00:12:30.880
under our new game developer support
 

00:12:30.880 --> 00:12:33.150
under our new game developer support
program Galaxy games app from March last

00:12:33.150 --> 00:12:33.160
program Galaxy games app from March last
 

00:12:33.160 --> 00:12:36.000
program Galaxy games app from March last
year thank you Pottinger then I also

00:12:36.000 --> 00:12:36.010
year thank you Pottinger then I also
 

00:12:36.010 --> 00:12:39.120
year thank you Pottinger then I also
strongly appreciate my team insulin HQ

00:12:39.120 --> 00:12:39.130
strongly appreciate my team insulin HQ
 

00:12:39.130 --> 00:12:43.170
strongly appreciate my team insulin HQ
UK US and Ukraine to support partners

00:12:43.170 --> 00:12:43.180
UK US and Ukraine to support partners
 

00:12:43.180 --> 00:12:46.680
UK US and Ukraine to support partners
with endless overnight work with many

00:12:46.680 --> 00:12:46.690
with endless overnight work with many
 

00:12:46.690 --> 00:12:50.710
with endless overnight work with many
beers

00:12:50.710 --> 00:12:50.720
 
 

00:12:50.720 --> 00:12:53.530
 
during our supporting game developers we

00:12:53.530 --> 00:12:53.540
during our supporting game developers we
 

00:12:53.540 --> 00:12:56.020
during our supporting game developers we
also have question about what would be

00:12:56.020 --> 00:12:56.030
also have question about what would be
 

00:12:56.030 --> 00:12:59.020
also have question about what would be
the real goal of gaming optimization

00:12:59.020 --> 00:12:59.030
the real goal of gaming optimization
 

00:12:59.030 --> 00:13:01.780
the real goal of gaming optimization
just keeping stable frame per second

00:13:01.780 --> 00:13:01.790
just keeping stable frame per second
 

00:13:01.790 --> 00:13:04.840
just keeping stable frame per second
like this small mark but looks like it's

00:13:04.840 --> 00:13:04.850
like this small mark but looks like it's
 

00:13:04.850 --> 00:13:06.850
like this small mark but looks like it's
getting boring by frame by frame and

00:13:06.850 --> 00:13:06.860
getting boring by frame by frame and
 

00:13:06.860 --> 00:13:08.770
getting boring by frame by frame and
doesn't look like it will bring high

00:13:08.770 --> 00:13:08.780
doesn't look like it will bring high
 

00:13:08.780 --> 00:13:12.970
doesn't look like it will bring high
fidelity to any games like this quality

00:13:12.970 --> 00:13:12.980
fidelity to any games like this quality
 

00:13:12.980 --> 00:13:15.460
fidelity to any games like this quality
level also would be another point we

00:13:15.460 --> 00:13:15.470
level also would be another point we
 

00:13:15.470 --> 00:13:18.190
level also would be another point we
have to take care the resolutions in

00:13:18.190 --> 00:13:18.200
have to take care the resolutions in
 

00:13:18.200 --> 00:13:21.040
have to take care the resolutions in
complexity and more visual intensive

00:13:21.040 --> 00:13:21.050
complexity and more visual intensive
 

00:13:21.050 --> 00:13:24.790
complexity and more visual intensive
graphics the games will have more rich

00:13:24.790 --> 00:13:24.800
graphics the games will have more rich
 

00:13:24.800 --> 00:13:27.760
graphics the games will have more rich
content with better quality and this can

00:13:27.760 --> 00:13:27.770
content with better quality and this can
 

00:13:27.770 --> 00:13:32.370
content with better quality and this can
make games fun to play the traditional

00:13:32.370 --> 00:13:32.380
make games fun to play the traditional
 

00:13:32.380 --> 00:13:34.930
make games fun to play the traditional
optimization is just trade-off between

00:13:34.930 --> 00:13:34.940
optimization is just trade-off between
 

00:13:34.940 --> 00:13:38.080
optimization is just trade-off between
quality and performance always we want

00:13:38.080 --> 00:13:38.090
quality and performance always we want
 

00:13:38.090 --> 00:13:40.540
quality and performance always we want
to get more frame per second than should

00:13:40.540 --> 00:13:40.550
to get more frame per second than should
 

00:13:40.550 --> 00:13:43.930
to get more frame per second than should
expect last quality low content quality

00:13:43.930 --> 00:13:43.940
expect last quality low content quality
 

00:13:43.940 --> 00:13:47.140
expect last quality low content quality
is the reason of boring users will leave

00:13:47.140 --> 00:13:47.150
is the reason of boring users will leave
 

00:13:47.150 --> 00:13:50.110
is the reason of boring users will leave
easily even the game is still keeping 60

00:13:50.110 --> 00:13:50.120
easily even the game is still keeping 60
 

00:13:50.120 --> 00:13:54.100
easily even the game is still keeping 60
frames per second some graphics

00:13:54.100 --> 00:13:54.110
frames per second some graphics
 

00:13:54.110 --> 00:13:56.470
frames per second some graphics
potentials will give you way to manage

00:13:56.470 --> 00:13:56.480
potentials will give you way to manage
 

00:13:56.480 --> 00:13:59.140
potentials will give you way to manage
both quality and performance but it

00:13:59.140 --> 00:13:59.150
both quality and performance but it
 

00:13:59.150 --> 00:14:01.930
both quality and performance but it
works only with with some corner cases

00:14:01.930 --> 00:14:01.940
works only with with some corner cases
 

00:14:01.940 --> 00:14:07.390
works only with with some corner cases
only then how we can make this this is

00:14:07.390 --> 00:14:07.400
only then how we can make this this is
 

00:14:07.400 --> 00:14:09.820
only then how we can make this this is
even a year ago bulk and mo protest out

00:14:09.820 --> 00:14:09.830
even a year ago bulk and mo protest out
 

00:14:09.830 --> 00:14:12.520
even a year ago bulk and mo protest out
what we shown to you during our f7

00:14:12.520 --> 00:14:12.530
what we shown to you during our f7
 

00:14:12.530 --> 00:14:15.640
what we shown to you during our f7
unpack now how can we chase both quality

00:14:15.640 --> 00:14:15.650
unpack now how can we chase both quality
 

00:14:15.650 --> 00:14:17.800
unpack now how can we chase both quality
and performance at the same time with

00:14:17.800 --> 00:14:17.810
and performance at the same time with
 

00:14:17.810 --> 00:14:22.120
and performance at the same time with
more general use cases I want to show

00:14:22.120 --> 00:14:22.130
more general use cases I want to show
 

00:14:22.130 --> 00:14:24.640
more general use cases I want to show
one simple example from hardware side

00:14:24.640 --> 00:14:24.650
one simple example from hardware side
 

00:14:24.650 --> 00:14:27.310
one simple example from hardware side
because we're for maker the thermal

00:14:27.310 --> 00:14:27.320
because we're for maker the thermal
 

00:14:27.320 --> 00:14:29.050
because we're for maker the thermal
throttling is one of the critical

00:14:29.050 --> 00:14:29.060
throttling is one of the critical
 

00:14:29.060 --> 00:14:32.260
throttling is one of the critical
problem of phone maker like us Samsung

00:14:32.260 --> 00:14:32.270
problem of phone maker like us Samsung
 

00:14:32.270 --> 00:14:34.360
problem of phone maker like us Samsung
has a good structure of managing Salmo

00:14:34.360 --> 00:14:34.370
has a good structure of managing Salmo
 

00:14:34.370 --> 00:14:38.110
has a good structure of managing Salmo
from AP chipset that stuck in a certain

00:14:38.110 --> 00:14:38.120
from AP chipset that stuck in a certain
 

00:14:38.120 --> 00:14:43.150
from AP chipset that stuck in a certain
level in in nowadays so we optimize the

00:14:43.150 --> 00:14:43.160
level in in nowadays so we optimize the
 

00:14:43.160 --> 00:14:45.790
level in in nowadays so we optimize the
structure of a hip spreader and change

00:14:45.790 --> 00:14:45.800
structure of a hip spreader and change
 

00:14:45.800 --> 00:14:48.220
structure of a hip spreader and change
the interface metal material has the

00:14:48.220 --> 00:14:48.230
the interface metal material has the
 

00:14:48.230 --> 00:14:50.590
the interface metal material has the
nine times bur conductivity between heat

00:14:50.590 --> 00:14:50.600
nine times bur conductivity between heat
 

00:14:50.600 --> 00:14:53.800
nine times bur conductivity between heat
spreader and AV chipset so now galaxy s

00:14:53.800 --> 00:14:53.810
spreader and AV chipset so now galaxy s
 

00:14:53.810 --> 00:14:56.980
spreader and AV chipset so now galaxy s
have eight has seven degree wrap every

00:14:56.980 --> 00:14:56.990
have eight has seven degree wrap every
 

00:14:56.990 --> 00:14:59.079
have eight has seven degree wrap every
chip sasame in worst case scenario and

00:14:59.079 --> 00:14:59.089
chip sasame in worst case scenario and
 

00:14:59.089 --> 00:15:01.600
chip sasame in worst case scenario and
this gives more comfortable experiences

00:15:01.600 --> 00:15:01.610
this gives more comfortable experiences
 

00:15:01.610 --> 00:15:02.680
this gives more comfortable experiences
to user when

00:15:02.680 --> 00:15:02.690
to user when
 

00:15:02.690 --> 00:15:06.130
to user when
play games this is not just trade up but

00:15:06.130 --> 00:15:06.140
play games this is not just trade up but
 

00:15:06.140 --> 00:15:09.010
play games this is not just trade up but
making fundamental changes to back break

00:15:09.010 --> 00:15:09.020
making fundamental changes to back break
 

00:15:09.020 --> 00:15:12.490
making fundamental changes to back break
through jump then how we can do similar

00:15:12.490 --> 00:15:12.500
through jump then how we can do similar
 

00:15:12.500 --> 00:15:16.060
through jump then how we can do similar
thing with software side not hardware

00:15:16.060 --> 00:15:16.070
thing with software side not hardware
 

00:15:16.070 --> 00:15:17.650
thing with software side not hardware
side cheating both quality and

00:15:17.650 --> 00:15:17.660
side cheating both quality and
 

00:15:17.660 --> 00:15:21.130
side cheating both quality and
performance we strongly believe the

00:15:21.130 --> 00:15:21.140
performance we strongly believe the
 

00:15:21.140 --> 00:15:26.010
performance we strongly believe the
answer should be okay

00:15:26.010 --> 00:15:26.020
 
 

00:15:26.020 --> 00:15:28.990
 
Vulcan is open standard cross problem

00:15:28.990 --> 00:15:29.000
Vulcan is open standard cross problem
 

00:15:29.000 --> 00:15:31.630
Vulcan is open standard cross problem
new generation graphics API from Chronos

00:15:31.630 --> 00:15:31.640
new generation graphics API from Chronos
 

00:15:31.640 --> 00:15:35.820
new generation graphics API from Chronos
group it's really thin lightweight

00:15:35.820 --> 00:15:35.830
group it's really thin lightweight
 

00:15:35.830 --> 00:15:39.940
group it's really thin lightweight
predictable horrible and terrible its

00:15:39.940 --> 00:15:39.950
predictable horrible and terrible its
 

00:15:39.950 --> 00:15:42.790
predictable horrible and terrible its
support precise explicit control and

00:15:42.790 --> 00:15:42.800
support precise explicit control and
 

00:15:42.800 --> 00:15:44.500
support precise explicit control and
deliver a bunch of great tools to

00:15:44.500 --> 00:15:44.510
deliver a bunch of great tools to
 

00:15:44.510 --> 00:15:47.770
deliver a bunch of great tools to
optimize your games when many times face

00:15:47.770 --> 00:15:47.780
optimize your games when many times face
 

00:15:47.780 --> 00:15:50.890
optimize your games when many times face
at nothing do more situation except drop

00:15:50.890 --> 00:15:50.900
at nothing do more situation except drop
 

00:15:50.900 --> 00:15:56.590
at nothing do more situation except drop
in quality with old API GL yes OpenGL ES

00:15:56.590 --> 00:15:56.600
in quality with old API GL yes OpenGL ES
 

00:15:56.600 --> 00:15:58.810
in quality with old API GL yes OpenGL ES
is easy to use and can make quick

00:15:58.810 --> 00:15:58.820
is easy to use and can make quick
 

00:15:58.820 --> 00:16:01.360
is easy to use and can make quick
prototyping so it's still usable for

00:16:01.360 --> 00:16:01.370
prototyping so it's still usable for
 

00:16:01.370 --> 00:16:07.360
prototyping so it's still usable for
some use cases but we believe the Buchan

00:16:07.360 --> 00:16:07.370
some use cases but we believe the Buchan
 

00:16:07.370 --> 00:16:12.520
some use cases but we believe the Buchan
is is breakthrough jump like I show to

00:16:12.520 --> 00:16:12.530
is is breakthrough jump like I show to
 

00:16:12.530 --> 00:16:15.040
is is breakthrough jump like I show to
you is the solder example in software

00:16:15.040 --> 00:16:15.050
you is the solder example in software
 

00:16:15.050 --> 00:16:20.950
you is the solder example in software
side first low CPU over half book on

00:16:20.950 --> 00:16:20.960
side first low CPU over half book on
 

00:16:20.960 --> 00:16:23.470
side first low CPU over half book on
your thin structure so primer can has

00:16:23.470 --> 00:16:23.480
your thin structure so primer can has
 

00:16:23.480 --> 00:16:27.010
your thin structure so primer can has
very small overhead in CPU the over

00:16:27.010 --> 00:16:27.020
very small overhead in CPU the over
 

00:16:27.020 --> 00:16:29.290
very small overhead in CPU the over
hundred rovco's can easily spend some no

00:16:29.290 --> 00:16:29.300
hundred rovco's can easily spend some no
 

00:16:29.300 --> 00:16:31.840
hundred rovco's can easily spend some no
seconds with the GL yet but Vulcan

00:16:31.840 --> 00:16:31.850
seconds with the GL yet but Vulcan
 

00:16:31.850 --> 00:16:34.690
seconds with the GL yet but Vulcan
doesn't this will give you some margin

00:16:34.690 --> 00:16:34.700
doesn't this will give you some margin
 

00:16:34.700 --> 00:16:38.440
doesn't this will give you some margin
on resources and you can use it for your

00:16:38.440 --> 00:16:38.450
on resources and you can use it for your
 

00:16:38.450 --> 00:16:40.740
on resources and you can use it for your
own proposals like better performance or

00:16:40.740 --> 00:16:40.750
own proposals like better performance or
 

00:16:40.750 --> 00:16:46.090
own proposals like better performance or
longer battery life we implemented many

00:16:46.090 --> 00:16:46.100
longer battery life we implemented many
 

00:16:46.100 --> 00:16:49.420
longer battery life we implemented many
POC level broken samples to prove broken

00:16:49.420 --> 00:16:49.430
POC level broken samples to prove broken
 

00:16:49.430 --> 00:16:51.520
POC level broken samples to prove broken
is really good thing to our marketing

00:16:51.520 --> 00:16:51.530
is really good thing to our marketing
 

00:16:51.530 --> 00:16:54.670
is really good thing to our marketing
team you may not even imagine how many

00:16:54.670 --> 00:16:54.680
team you may not even imagine how many
 

00:16:54.680 --> 00:16:56.230
team you may not even imagine how many
samples we implemented before after

00:16:56.230 --> 00:16:56.240
samples we implemented before after
 

00:16:56.240 --> 00:16:58.650
samples we implemented before after
launching for convincing internal people

00:16:58.650 --> 00:16:58.660
launching for convincing internal people
 

00:16:58.660 --> 00:17:01.420
launching for convincing internal people
this is a regular MOU which one over

00:17:01.420 --> 00:17:01.430
this is a regular MOU which one over
 

00:17:01.430 --> 00:17:05.290
this is a regular MOU which one over
sample which our team developed for

00:17:05.290 --> 00:17:05.300
sample which our team developed for
 

00:17:05.300 --> 00:17:08.860
sample which our team developed for
around September 2015 you can see lap

00:17:08.860 --> 00:17:08.870
around September 2015 you can see lap
 

00:17:08.870 --> 00:17:11.350
around September 2015 you can see lap
sidewalk and uses similar or last CPU

00:17:11.350 --> 00:17:11.360
sidewalk and uses similar or last CPU
 

00:17:11.360 --> 00:17:14.400
sidewalk and uses similar or last CPU
but Randall's almost double or more

00:17:14.400 --> 00:17:14.410
but Randall's almost double or more
 

00:17:14.410 --> 00:17:20.160
but Randall's almost double or more
per second Dungey Elliot you may think

00:17:20.160 --> 00:17:20.170
per second Dungey Elliot you may think
 

00:17:20.170 --> 00:17:23.130
per second Dungey Elliot you may think
this is just demo sample or Connor Cates

00:17:23.130 --> 00:17:23.140
this is just demo sample or Connor Cates
 

00:17:23.140 --> 00:17:25.470
this is just demo sample or Connor Cates
but broken works with the real games -

00:17:25.470 --> 00:17:25.480
but broken works with the real games -
 

00:17:25.480 --> 00:17:28.440
but broken works with the real games -
here is a bang glory we have been

00:17:28.440 --> 00:17:28.450
here is a bang glory we have been
 

00:17:28.450 --> 00:17:30.510
here is a bang glory we have been
working with super backup since April

00:17:30.510 --> 00:17:30.520
working with super backup since April
 

00:17:30.520 --> 00:17:34.140
working with super backup since April
2016 you can see right side up Vulcan

00:17:34.140 --> 00:17:34.150
2016 you can see right side up Vulcan
 

00:17:34.150 --> 00:17:35.910
2016 you can see right side up Vulcan
shows much stable frame per second

00:17:35.910 --> 00:17:35.920
shows much stable frame per second
 

00:17:35.920 --> 00:17:39.630
shows much stable frame per second
without big frame drops we see around 20

00:17:39.630 --> 00:17:39.640
without big frame drops we see around 20
 

00:17:39.640 --> 00:17:42.450
without big frame drops we see around 20
percent performance gain near 63 percent

00:17:42.450 --> 00:17:42.460
percent performance gain near 63 percent
 

00:17:42.460 --> 00:17:45.150
percent performance gain near 63 percent
60 frames per second in even throttling

00:17:45.150 --> 00:17:45.160
60 frames per second in even throttling
 

00:17:45.160 --> 00:17:50.300
60 frames per second in even throttling
situation with the galaxy s7 second

00:17:50.300 --> 00:17:50.310
situation with the galaxy s7 second
 

00:17:50.310 --> 00:17:53.100
situation with the galaxy s7 second
xsplit control you can manage precise

00:17:53.100 --> 00:17:53.110
xsplit control you can manage precise
 

00:17:53.110 --> 00:17:55.440
xsplit control you can manage precise
command buffer submit from one of each

00:17:55.440 --> 00:17:55.450
command buffer submit from one of each
 

00:17:55.450 --> 00:17:58.410
command buffer submit from one of each
render pass over one for some groups of

00:17:58.410 --> 00:17:58.420
render pass over one for some groups of
 

00:17:58.420 --> 00:18:01.890
render pass over one for some groups of
random faces you also can change the

00:18:01.890 --> 00:18:01.900
random faces you also can change the
 

00:18:01.900 --> 00:18:03.750
random faces you also can change the
pendants between each pattern stage

00:18:03.750 --> 00:18:03.760
pendants between each pattern stage
 

00:18:03.760 --> 00:18:06.330
pendants between each pattern stage
where the pipeline barrier function if

00:18:06.330 --> 00:18:06.340
where the pipeline barrier function if
 

00:18:06.340 --> 00:18:08.250
where the pipeline barrier function if
you give barriers between fragment to

00:18:08.250 --> 00:18:08.260
you give barriers between fragment to
 

00:18:08.260 --> 00:18:11.250
you give barriers between fragment to
birthday stage then every birthday stage

00:18:11.250 --> 00:18:11.260
birthday stage then every birthday stage
 

00:18:11.260 --> 00:18:13.290
birthday stage then every birthday stage
will wait until finishing previous

00:18:13.290 --> 00:18:13.300
will wait until finishing previous
 

00:18:13.300 --> 00:18:16.770
will wait until finishing previous
fragment stage if you change barrier

00:18:16.770 --> 00:18:16.780
fragment stage if you change barrier
 

00:18:16.780 --> 00:18:19.260
fragment stage if you change barrier
between every frame stage fragment stage

00:18:19.260 --> 00:18:19.270
between every frame stage fragment stage
 

00:18:19.270 --> 00:18:21.660
between every frame stage fragment stage
then there will be no waiting between

00:18:21.660 --> 00:18:21.670
then there will be no waiting between
 

00:18:21.670 --> 00:18:24.410
then there will be no waiting between
fragment to birthday stage anymore

00:18:24.410 --> 00:18:24.420
fragment to birthday stage anymore
 

00:18:24.420 --> 00:18:28.110
fragment to birthday stage anymore
you also can manage the memory more

00:18:28.110 --> 00:18:28.120
you also can manage the memory more
 

00:18:28.120 --> 00:18:30.660
you also can manage the memory more
precisely you can use different memory

00:18:30.660 --> 00:18:30.670
precisely you can use different memory
 

00:18:30.670 --> 00:18:33.240
precisely you can use different memory
try for each profiles and this will give

00:18:33.240 --> 00:18:33.250
try for each profiles and this will give
 

00:18:33.250 --> 00:18:38.910
try for each profiles and this will give
you more optimal memory management so

00:18:38.910 --> 00:18:38.920
you more optimal memory management so
 

00:18:38.920 --> 00:18:41.040
you more optimal memory management so
this is the f5 streamline capture all

00:18:41.040 --> 00:18:41.050
this is the f5 streamline capture all
 

00:18:41.050 --> 00:18:42.840
this is the f5 streamline capture all
the searching again we are working with

00:18:42.840 --> 00:18:42.850
the searching again we are working with
 

00:18:42.850 --> 00:18:46.230
the searching again we are working with
first capture show's original GL ES and

00:18:46.230 --> 00:18:46.240
first capture show's original GL ES and
 

00:18:46.240 --> 00:18:49.260
first capture show's original GL ES and
there are wide gap between each around

00:18:49.260 --> 00:18:49.270
there are wide gap between each around
 

00:18:49.270 --> 00:18:51.690
there are wide gap between each around
the fences coming from CPU overhead of

00:18:51.690 --> 00:18:51.700
the fences coming from CPU overhead of
 

00:18:51.700 --> 00:18:53.880
the fences coming from CPU overhead of
some hundred draw holes for each render

00:18:53.880 --> 00:18:53.890
some hundred draw holes for each render
 

00:18:53.890 --> 00:18:56.400
some hundred draw holes for each render
path 12 milliseconds for GPU processing

00:18:56.400 --> 00:18:56.410
path 12 milliseconds for GPU processing
 

00:18:56.410 --> 00:18:59.730
path 12 milliseconds for GPU processing
is required even after we caught

00:18:59.730 --> 00:18:59.740
is required even after we caught
 

00:18:59.740 --> 00:19:01.710
is required even after we caught
everything with the Balkans but can see

00:19:01.710 --> 00:19:01.720
everything with the Balkans but can see
 

00:19:01.720 --> 00:19:05.100
everything with the Balkans but can see
captures number two worst performance

00:19:05.100 --> 00:19:05.110
captures number two worst performance
 

00:19:05.110 --> 00:19:09.030
captures number two worst performance
like 24 seconds millisecond these comes

00:19:09.030 --> 00:19:09.040
like 24 seconds millisecond these comes
 

00:19:09.040 --> 00:19:12.150
like 24 seconds millisecond these comes
from using wrong type mm barrier the

00:19:12.150 --> 00:19:12.160
from using wrong type mm barrier the
 

00:19:12.160 --> 00:19:14.610
from using wrong type mm barrier the
number three is now showing the proper

00:19:14.610 --> 00:19:14.620
number three is now showing the proper
 

00:19:14.620 --> 00:19:17.880
number three is now showing the proper
barrier and then it takes just 12

00:19:17.880 --> 00:19:17.890
barrier and then it takes just 12
 

00:19:17.890 --> 00:19:20.320
barrier and then it takes just 12
milliseconds

00:19:20.320 --> 00:19:20.330
milliseconds
 

00:19:20.330 --> 00:19:24.070
milliseconds
third a uniform uniform is one of a

00:19:24.070 --> 00:19:24.080
third a uniform uniform is one of a
 

00:19:24.080 --> 00:19:25.899
third a uniform uniform is one of a
critical part of graphics programming

00:19:25.899 --> 00:19:25.909
critical part of graphics programming
 

00:19:25.909 --> 00:19:28.690
critical part of graphics programming
this has a basic intention of

00:19:28.690 --> 00:19:28.700
this has a basic intention of
 

00:19:28.700 --> 00:19:31.139
this has a basic intention of
interaction between CPU and GPU

00:19:31.139 --> 00:19:31.149
interaction between CPU and GPU
 

00:19:31.149 --> 00:19:35.079
interaction between CPU and GPU
so you can give quite big impact to

00:19:35.079 --> 00:19:35.089
so you can give quite big impact to
 

00:19:35.089 --> 00:19:37.930
so you can give quite big impact to
performance in many cases but you can

00:19:37.930 --> 00:19:37.940
performance in many cases but you can
 

00:19:37.940 --> 00:19:40.419
performance in many cases but you can
manage uniform buffer in broken to get

00:19:40.419 --> 00:19:40.429
manage uniform buffer in broken to get
 

00:19:40.429 --> 00:19:43.810
manage uniform buffer in broken to get
less or better performance we develop a

00:19:43.810 --> 00:19:43.820
less or better performance we develop a
 

00:19:43.820 --> 00:19:45.279
less or better performance we develop a
four different incremental money

00:19:45.279 --> 00:19:45.289
four different incremental money
 

00:19:45.289 --> 00:19:46.839
four different incremental money
implementation from brute force to

00:19:46.839 --> 00:19:46.849
implementation from brute force to
 

00:19:46.849 --> 00:19:49.239
implementation from brute force to
either condition of dynamic offset way

00:19:49.239 --> 00:19:49.249
either condition of dynamic offset way
 

00:19:49.249 --> 00:19:52.169
either condition of dynamic offset way
and you can see the performance

00:19:52.169 --> 00:19:52.179
and you can see the performance
 

00:19:52.179 --> 00:19:54.699
and you can see the performance
differences from the one frame per

00:19:54.699 --> 00:19:54.709
differences from the one frame per
 

00:19:54.709 --> 00:20:04.080
differences from the one frame per
second to forty three frames per second

00:20:04.080 --> 00:20:04.090
 
 

00:20:04.090 --> 00:20:08.010
 
let's see the video clips from our 1250

00:20:08.010 --> 00:20:08.020
let's see the video clips from our 1250
 

00:20:08.020 --> 00:20:10.680
let's see the video clips from our 1250
draw whole sample implementation like

00:20:10.680 --> 00:20:10.690
draw whole sample implementation like
 

00:20:10.690 --> 00:20:11.250
draw whole sample implementation like
this

00:20:11.250 --> 00:20:11.260
this
 

00:20:11.260 --> 00:20:13.560
this
Buchan gives you ability to control

00:20:13.560 --> 00:20:13.570
Buchan gives you ability to control
 

00:20:13.570 --> 00:20:16.920
Buchan gives you ability to control
things precisely but you may also feel

00:20:16.920 --> 00:20:16.930
things precisely but you may also feel
 

00:20:16.930 --> 00:20:23.880
things precisely but you may also feel
is hard to handle but you don't have to

00:20:23.880 --> 00:20:23.890
is hard to handle but you don't have to
 

00:20:23.890 --> 00:20:26.130
is hard to handle but you don't have to
worry about the handle by yourself all

00:20:26.130 --> 00:20:26.140
worry about the handle by yourself all
 

00:20:26.140 --> 00:20:27.630
worry about the handle by yourself all
the things with the bull pendulum

00:20:27.630 --> 00:20:27.640
the things with the bull pendulum
 

00:20:27.640 --> 00:20:29.730
the things with the bull pendulum
intention but the game engine support

00:20:29.730 --> 00:20:29.740
intention but the game engine support
 

00:20:29.740 --> 00:20:31.490
intention but the game engine support
now okay

00:20:31.490 --> 00:20:31.500
now okay
 

00:20:31.500 --> 00:20:34.400
now okay
we've worked with applicants from these

00:20:34.400 --> 00:20:34.410
we've worked with applicants from these
 

00:20:34.410 --> 00:20:38.450
we've worked with applicants from these
2015 for the Yui for spoken supporting

00:20:38.450 --> 00:20:38.460
2015 for the Yui for spoken supporting
 

00:20:38.460 --> 00:20:41.940
2015 for the Yui for spoken supporting
they release the 412 as first Vulcan RHS

00:20:41.940 --> 00:20:41.950
they release the 412 as first Vulcan RHS
 

00:20:41.950 --> 00:20:44.280
they release the 412 as first Vulcan RHS
for you for and recent release broken

00:20:44.280 --> 00:20:44.290
for you for and recent release broken
 

00:20:44.290 --> 00:20:47.390
for you for and recent release broken
support is now getting better and better

00:20:47.390 --> 00:20:47.400
support is now getting better and better
 

00:20:47.400 --> 00:20:50.130
support is now getting better and better
we've worked with unity for supporting

00:20:50.130 --> 00:20:50.140
we've worked with unity for supporting
 

00:20:50.140 --> 00:20:53.430
we've worked with unity for supporting
working in unity 5 since September 2016

00:20:53.430 --> 00:20:53.440
working in unity 5 since September 2016
 

00:20:53.440 --> 00:20:57.510
working in unity 5 since September 2016
and 5.6 released recently at the first

00:20:57.510 --> 00:20:57.520
and 5.6 released recently at the first
 

00:20:57.520 --> 00:21:00.860
and 5.6 released recently at the first
of fishable contenders for unit version

00:21:00.860 --> 00:21:00.870
of fishable contenders for unit version
 

00:21:00.870 --> 00:21:04.800
of fishable contenders for unit version
to wrap up we believe hookah is the

00:21:04.800 --> 00:21:04.810
to wrap up we believe hookah is the
 

00:21:04.810 --> 00:21:06.750
to wrap up we believe hookah is the
answer for treating both quality and

00:21:06.750 --> 00:21:06.760
answer for treating both quality and
 

00:21:06.760 --> 00:21:08.400
answer for treating both quality and
performance to develop high fidelity

00:21:08.400 --> 00:21:08.410
performance to develop high fidelity
 

00:21:08.410 --> 00:21:10.620
performance to develop high fidelity
game in android from many experiences

00:21:10.620 --> 00:21:10.630
game in android from many experiences
 

00:21:10.630 --> 00:21:12.750
game in android from many experiences
with our patent game companies and

00:21:12.750 --> 00:21:12.760
with our patent game companies and
 

00:21:12.760 --> 00:21:16.200
with our patent game companies and
developers it can give more performance

00:21:16.200 --> 00:21:16.210
developers it can give more performance
 

00:21:16.210 --> 00:21:17.400
developers it can give more performance
wrong battery life

00:21:17.400 --> 00:21:17.410
wrong battery life
 

00:21:17.410 --> 00:21:20.520
wrong battery life
less heat problem more visual quality to

00:21:20.520 --> 00:21:20.530
less heat problem more visual quality to
 

00:21:20.530 --> 00:21:23.430
less heat problem more visual quality to
your game look little bit complicated

00:21:23.430 --> 00:21:23.440
your game look little bit complicated
 

00:21:23.440 --> 00:21:26.250
your game look little bit complicated
but still game engine will help you can

00:21:26.250 --> 00:21:26.260
but still game engine will help you can
 

00:21:26.260 --> 00:21:28.770
but still game engine will help you can
use it even without any understanding of

00:21:28.770 --> 00:21:28.780
use it even without any understanding of
 

00:21:28.780 --> 00:21:34.260
use it even without any understanding of
Vulcan evil notation one more thing

00:21:34.260 --> 00:21:34.270
Vulcan evil notation one more thing
 

00:21:34.270 --> 00:21:37.620
Vulcan evil notation one more thing
Vulcan will help more with mass

00:21:37.620 --> 00:21:37.630
Vulcan will help more with mass
 

00:21:37.630 --> 00:21:40.470
Vulcan will help more with mass
mainstream devices we touched it with

00:21:40.470 --> 00:21:40.480
mainstream devices we touched it with
 

00:21:40.480 --> 00:21:43.740
mainstream devices we touched it with
one of Vulcan games with both Delphia 7

00:21:43.740 --> 00:21:43.750
one of Vulcan games with both Delphia 7
 

00:21:43.750 --> 00:21:47.280
one of Vulcan games with both Delphia 7
and 8 5 2017 model the c-more

00:21:47.280 --> 00:21:47.290
and 8 5 2017 model the c-more
 

00:21:47.290 --> 00:21:49.920
and 8 5 2017 model the c-more
performance gain with the Galaxy s5 it

00:21:49.920 --> 00:21:49.930
performance gain with the Galaxy s5 it
 

00:21:49.930 --> 00:21:51.570
performance gain with the Galaxy s5 it
means flagship show better performance

00:21:51.570 --> 00:21:51.580
means flagship show better performance
 

00:21:51.580 --> 00:21:54.240
means flagship show better performance
but Vulcan will boost more with mass

00:21:54.240 --> 00:21:54.250
but Vulcan will boost more with mass
 

00:21:54.250 --> 00:21:57.270
but Vulcan will boost more with mass
product so Buchan is not only flagship

00:21:57.270 --> 00:21:57.280
product so Buchan is not only flagship
 

00:21:57.280 --> 00:21:58.320
product so Buchan is not only flagship
feature anymore

00:21:58.320 --> 00:21:58.330
feature anymore
 

00:21:58.330 --> 00:22:00.690
feature anymore
we are all ready to develop high

00:22:00.690 --> 00:22:00.700
we are all ready to develop high
 

00:22:00.700 --> 00:22:02.630
we are all ready to develop high
fidelity gaming Android devices

00:22:02.630 --> 00:22:02.640
fidelity gaming Android devices
 

00:22:02.640 --> 00:22:03.810
fidelity gaming Android devices
technologies

00:22:03.810 --> 00:22:03.820
technologies
 

00:22:03.820 --> 00:22:07.740
technologies
platforms are all set it up I want to

00:22:07.740 --> 00:22:07.750
platforms are all set it up I want to
 

00:22:07.750 --> 00:22:11.280
platforms are all set it up I want to
introduce to do about introduced of us

00:22:11.280 --> 00:22:11.290
introduce to do about introduced of us
 

00:22:11.290 --> 00:22:15.000
introduce to do about introduced of us
the religious two levels in case studies

00:22:15.000 --> 00:22:15.010
the religious two levels in case studies
 

00:22:15.010 --> 00:22:23.360
the religious two levels in case studies
[Applause]

00:22:23.360 --> 00:22:23.370
 
 

00:22:23.370 --> 00:22:27.870
 
okay thank you ah yeah develop Indonesia

00:22:27.870 --> 00:22:27.880
okay thank you ah yeah develop Indonesia
 

00:22:27.880 --> 00:22:31.430
okay thank you ah yeah develop Indonesia
- you're a lot in Marblehead long okay

00:22:31.430 --> 00:22:31.440
- you're a lot in Marblehead long okay
 

00:22:31.440 --> 00:22:35.640
- you're a lot in Marblehead long okay
perhaps my name is Chuck I'm a PP over

00:22:35.640 --> 00:22:35.650
perhaps my name is Chuck I'm a PP over
 

00:22:35.650 --> 00:22:37.470
perhaps my name is Chuck I'm a PP over
marketing intelligence in the mobile and

00:22:37.470 --> 00:22:37.480
marketing intelligence in the mobile and
 

00:22:37.480 --> 00:22:40.560
marketing intelligence in the mobile and
I'm here to introduce digital revolution

00:22:40.560 --> 00:22:40.570
I'm here to introduce digital revolution
 

00:22:40.570 --> 00:22:43.500
I'm here to introduce digital revolution
and to share Samsung in Google and then

00:22:43.500 --> 00:22:43.510
and to share Samsung in Google and then
 

00:22:43.510 --> 00:22:46.950
and to share Samsung in Google and then
Marco walking what kind of because we

00:22:46.950 --> 00:22:46.960
Marco walking what kind of because we
 

00:22:46.960 --> 00:22:51.570
Marco walking what kind of because we
made video last year I did a short

00:22:51.570 --> 00:22:51.580
made video last year I did a short
 

00:22:51.580 --> 00:22:54.270
made video last year I did a short
speech like this on random that was a

00:22:54.270 --> 00:22:54.280
speech like this on random that was a
 

00:22:54.280 --> 00:22:57.410
speech like this on random that was a
part over my bad memory so I give time

00:22:57.410 --> 00:22:57.420
part over my bad memory so I give time
 

00:22:57.420 --> 00:23:00.270
part over my bad memory so I give time
not to make that kind of thing again if

00:23:00.270 --> 00:23:00.280
not to make that kind of thing again if
 

00:23:00.280 --> 00:23:02.040
not to make that kind of thing again if
I prepared too many video clips Allah

00:23:02.040 --> 00:23:02.050
I prepared too many video clips Allah
 

00:23:02.050 --> 00:23:05.580
I prepared too many video clips Allah
that we will not make you bored so

00:23:05.580 --> 00:23:05.590
that we will not make you bored so
 

00:23:05.590 --> 00:23:09.330
that we will not make you bored so
before talking least I want to show you

00:23:09.330 --> 00:23:09.340
before talking least I want to show you
 

00:23:09.340 --> 00:23:16.970
before talking least I want to show you
a very short clip over Linda -

00:23:16.970 --> 00:23:16.980
 
 

00:23:16.980 --> 00:23:19.630
 
[Music]

00:23:19.630 --> 00:23:19.640
[Music]
 

00:23:19.640 --> 00:23:25.230
[Music]
[Applause]

00:23:25.230 --> 00:23:25.240
 
 

00:23:25.240 --> 00:23:39.539
 
[Music]

00:23:39.539 --> 00:23:39.549
 
 

00:23:39.549 --> 00:23:46.330
 
yep yeah one thing I want to tell you is

00:23:46.330 --> 00:23:46.340
yep yeah one thing I want to tell you is
 

00:23:46.340 --> 00:23:48.789
yep yeah one thing I want to tell you is
you see the actual gameplay video on a

00:23:48.789 --> 00:23:48.799
you see the actual gameplay video on a
 

00:23:48.799 --> 00:23:49.810
you see the actual gameplay video on a
mobile device

00:23:49.810 --> 00:23:49.820
mobile device
 

00:23:49.820 --> 00:23:54.640
mobile device
maybe Samsung s7 maybe I think our title

00:23:54.640 --> 00:23:54.650
maybe Samsung s7 maybe I think our title
 

00:23:54.650 --> 00:23:56.799
maybe Samsung s7 maybe I think our title
could be a cold or high-performance game

00:23:56.799 --> 00:23:56.809
could be a cold or high-performance game
 

00:23:56.809 --> 00:24:00.490
could be a cold or high-performance game
by graphic quality and list but to my

00:24:00.490 --> 00:24:00.500
by graphic quality and list but to my
 

00:24:00.500 --> 00:24:03.159
by graphic quality and list but to my
boss the most important thing maybe as a

00:24:03.159 --> 00:24:03.169
boss the most important thing maybe as a
 

00:24:03.169 --> 00:24:05.740
boss the most important thing maybe as a
high football most means high KPI so I

00:24:05.740 --> 00:24:05.750
high football most means high KPI so I
 

00:24:05.750 --> 00:24:08.320
high football most means high KPI so I
want to share what kinda KPI we achieved

00:24:08.320 --> 00:24:08.330
want to share what kinda KPI we achieved
 

00:24:08.330 --> 00:24:12.190
want to share what kinda KPI we achieved
in Korea yep

00:24:12.190 --> 00:24:12.200
in Korea yep
 

00:24:12.200 --> 00:24:15.549
in Korea yep
liquid workings of death losing level

00:24:15.549 --> 00:24:15.559
liquid workings of death losing level
 

00:24:15.559 --> 00:24:17.620
liquid workings of death losing level
digital revolution was a huge ease of

00:24:17.620 --> 00:24:17.630
digital revolution was a huge ease of
 

00:24:17.630 --> 00:24:20.049
digital revolution was a huge ease of
the short 30 days after lunch

00:24:20.049 --> 00:24:20.059
the short 30 days after lunch
 

00:24:20.059 --> 00:24:24.789
the short 30 days after lunch
this title achieved over 176 million US

00:24:24.789 --> 00:24:24.799
this title achieved over 176 million US
 

00:24:24.799 --> 00:24:28.810
this title achieved over 176 million US
dollars only in South Korea we just

00:24:28.810 --> 00:24:28.820
dollars only in South Korea we just
 

00:24:28.820 --> 00:24:32.440
dollars only in South Korea we just
opened give title in South Korea yet it

00:24:32.440 --> 00:24:32.450
opened give title in South Korea yet it
 

00:24:32.450 --> 00:24:36.130
opened give title in South Korea yet it
took only 17 days to on 100 billion US

00:24:36.130 --> 00:24:36.140
took only 17 days to on 100 billion US
 

00:24:36.140 --> 00:24:39.580
took only 17 days to on 100 billion US
dollars and if you GTA 5 million monthly

00:24:39.580 --> 00:24:39.590
dollars and if you GTA 5 million monthly
 

00:24:39.590 --> 00:24:43.510
dollars and if you GTA 5 million monthly
active users this is same amount as 10

00:24:43.510 --> 00:24:43.520
active users this is same amount as 10
 

00:24:43.520 --> 00:24:47.590
active users this is same amount as 10
percent of South Korea population every

00:24:47.590 --> 00:24:47.600
percent of South Korea population every
 

00:24:47.600 --> 00:24:49.750
percent of South Korea population every
number selected in a South Korea mobile

00:24:49.750 --> 00:24:49.760
number selected in a South Korea mobile
 

00:24:49.760 --> 00:24:56.289
number selected in a South Korea mobile
game industry and it let coded to over 2

00:24:56.289 --> 00:24:56.299
game industry and it let coded to over 2
 

00:24:56.299 --> 00:24:59.620
game industry and it let coded to over 2
million daily active users we do our

00:24:59.620 --> 00:24:59.630
million daily active users we do our
 

00:24:59.630 --> 00:25:05.799
million daily active users we do our
best to keep this number because the

00:25:05.799 --> 00:25:05.809
best to keep this number because the
 

00:25:05.809 --> 00:25:08.890
best to keep this number because the
lytic tool evolution is an MMORPG the

00:25:08.890 --> 00:25:08.900
lytic tool evolution is an MMORPG the
 

00:25:08.900 --> 00:25:10.840
lytic tool evolution is an MMORPG the
best number were concurrent user is very

00:25:10.840 --> 00:25:10.850
best number were concurrent user is very
 

00:25:10.850 --> 00:25:16.539
best number were concurrent user is very
very important and the electrode 740,000

00:25:16.539 --> 00:25:16.549
very important and the electrode 740,000
 

00:25:16.549 --> 00:25:18.850
very important and the electrode 740,000
five weeks later after lunch if the huge

00:25:18.850 --> 00:25:18.860
five weeks later after lunch if the huge
 

00:25:18.860 --> 00:25:23.560
five weeks later after lunch if the huge
amount of people finally according to

00:25:23.560 --> 00:25:23.570
amount of people finally according to
 

00:25:23.570 --> 00:25:26.529
amount of people finally according to
super data research ninja tool evolution

00:25:26.529 --> 00:25:26.539
super data research ninja tool evolution
 

00:25:26.539 --> 00:25:28.450
super data research ninja tool evolution
was the number one title in global

00:25:28.450 --> 00:25:28.460
was the number one title in global
 

00:25:28.460 --> 00:25:30.460
was the number one title in global
mobile market on February only in

00:25:30.460 --> 00:25:30.470
mobile market on February only in
 

00:25:30.470 --> 00:25:32.710
mobile market on February only in
February just one month but we are proud

00:25:32.710 --> 00:25:32.720
February just one month but we are proud
 

00:25:32.720 --> 00:25:35.830
February just one month but we are proud
of it I said we just opened this title

00:25:35.830 --> 00:25:35.840
of it I said we just opened this title
 

00:25:35.840 --> 00:25:38.200
of it I said we just opened this title
only in Korea and the Korea mobile

00:25:38.200 --> 00:25:38.210
only in Korea and the Korea mobile
 

00:25:38.210 --> 00:25:41.860
only in Korea and the Korea mobile
market is not mobile not big what I want

00:25:41.860 --> 00:25:41.870
market is not mobile not big what I want
 

00:25:41.870 --> 00:25:43.899
market is not mobile not big what I want
to say is number one in Korea doesn't

00:25:43.899 --> 00:25:43.909
to say is number one in Korea doesn't
 

00:25:43.909 --> 00:25:46.539
to say is number one in Korea doesn't
means number one in global but February

00:25:46.539 --> 00:25:46.549
means number one in global but February
 

00:25:46.549 --> 00:25:49.139
means number one in global but February
we make them

00:25:49.139 --> 00:25:49.149
we make them
 

00:25:49.149 --> 00:25:51.970
we make them
to make this kind of a lizard

00:25:51.970 --> 00:25:51.980
to make this kind of a lizard
 

00:25:51.980 --> 00:25:54.399
to make this kind of a lizard
when it landed to develop its title we

00:25:54.399 --> 00:25:54.409
when it landed to develop its title we
 

00:25:54.409 --> 00:25:57.399
when it landed to develop its title we
had three major goals to make it to be

00:25:57.399 --> 00:25:57.409
had three major goals to make it to be
 

00:25:57.409 --> 00:26:02.380
had three major goals to make it to be
the next level title the first thing is

00:26:02.380 --> 00:26:02.390
the next level title the first thing is
 

00:26:02.390 --> 00:26:06.250
the next level title the first thing is
3-play confocal epic quality the ax we

00:26:06.250 --> 00:26:06.260
3-play confocal epic quality the ax we
 

00:26:06.260 --> 00:26:07.960
3-play confocal epic quality the ax we
just wanted a kind of graphics on the

00:26:07.960 --> 00:26:07.970
just wanted a kind of graphics on the
 

00:26:07.970 --> 00:26:09.870
just wanted a kind of graphics on the
porn

00:26:09.870 --> 00:26:09.880
porn
 

00:26:09.880 --> 00:26:13.240
porn
the second thing is best open world

00:26:13.240 --> 00:26:13.250
the second thing is best open world
 

00:26:13.250 --> 00:26:17.049
the second thing is best open world
environment in Korea before least

00:26:17.049 --> 00:26:17.059
environment in Korea before least
 

00:26:17.059 --> 00:26:20.200
environment in Korea before least
LEvolution Toby's generally was action

00:26:20.200 --> 00:26:20.210
LEvolution Toby's generally was action
 

00:26:20.210 --> 00:26:23.620
LEvolution Toby's generally was action
RPG and action RPG means every user

00:26:23.620 --> 00:26:23.630
RPG and action RPG means every user
 

00:26:23.630 --> 00:26:26.889
RPG and action RPG means every user
tried every stage for enjoying game and

00:26:26.889 --> 00:26:26.899
tried every stage for enjoying game and
 

00:26:26.899 --> 00:26:30.159
tried every stage for enjoying game and
that then makes many people boards so a

00:26:30.159 --> 00:26:30.169
that then makes many people boards so a
 

00:26:30.169 --> 00:26:33.519
that then makes many people boards so a
we thought open world will be a answer

00:26:33.519 --> 00:26:33.529
we thought open world will be a answer
 

00:26:33.529 --> 00:26:40.000
we thought open world will be a answer
for them and their status is merciful

00:26:40.000 --> 00:26:40.010
for them and their status is merciful
 

00:26:40.010 --> 00:26:42.490
for them and their status is merciful
captivate city kappa cheese is very

00:26:42.490 --> 00:26:42.500
captivate city kappa cheese is very
 

00:26:42.500 --> 00:26:46.450
captivate city kappa cheese is very
important why that is important is to

00:26:46.450 --> 00:26:46.460
important why that is important is to
 

00:26:46.460 --> 00:26:50.830
important why that is important is to
expand our Tyrell lifespan making new

00:26:50.830 --> 00:26:50.840
expand our Tyrell lifespan making new
 

00:26:50.840 --> 00:26:53.889
expand our Tyrell lifespan making new
content is not enough it takes too much

00:26:53.889 --> 00:26:53.899
content is not enough it takes too much
 

00:26:53.899 --> 00:26:54.250
content is not enough it takes too much
time

00:26:54.250 --> 00:26:54.260
time
 

00:26:54.260 --> 00:26:57.879
time
if it's too much money so are to extend

00:26:57.879 --> 00:26:57.889
if it's too much money so are to extend
 

00:26:57.889 --> 00:27:00.399
if it's too much money so are to extend
our lifespan the most important thing is

00:27:00.399 --> 00:27:00.409
our lifespan the most important thing is
 

00:27:00.409 --> 00:27:04.120
our lifespan the most important thing is
making usual build their community based

00:27:04.120 --> 00:27:04.130
making usual build their community based
 

00:27:04.130 --> 00:27:08.220
making usual build their community based
on our content that content is catechist

00:27:08.220 --> 00:27:08.230
on our content that content is catechist
 

00:27:08.230 --> 00:27:12.159
on our content that content is catechist
I want to show you two clips one clip is

00:27:12.159 --> 00:27:12.169
I want to show you two clips one clip is
 

00:27:12.169 --> 00:27:14.409
I want to show you two clips one clip is
introduction clip and the other is

00:27:14.409 --> 00:27:14.419
introduction clip and the other is
 

00:27:14.419 --> 00:27:31.780
introduction clip and the other is
actual gameplay video

00:27:31.780 --> 00:27:31.790
 
 

00:27:31.790 --> 00:27:34.020
 
[Music]

00:27:34.020 --> 00:27:34.030
[Music]
 

00:27:34.030 --> 00:27:35.170
[Music]
[Applause]

00:27:35.170 --> 00:27:35.180
[Applause]
 

00:27:35.180 --> 00:27:53.430
[Applause]
[Music]

00:27:53.430 --> 00:27:53.440
 
 

00:27:53.440 --> 00:28:03.820
 
you

00:28:03.820 --> 00:28:03.830
 
 

00:28:03.830 --> 00:28:21.210
 
[Music]

00:28:21.210 --> 00:28:21.220
 
 

00:28:21.220 --> 00:28:44.100
 
[Music]

00:28:44.100 --> 00:28:44.110
 
 

00:28:44.110 --> 00:28:52.020
 
[Music]

00:28:52.020 --> 00:28:52.030
 
 

00:28:52.030 --> 00:29:07.440
 
[Music]

00:29:07.440 --> 00:29:07.450
 
 

00:29:07.450 --> 00:29:18.760
 
[Music]

00:29:18.760 --> 00:29:18.770
 
 

00:29:18.770 --> 00:29:25.270
 
[Music]

00:29:25.270 --> 00:29:25.280
 
 

00:29:25.280 --> 00:29:29.310
 
[Applause]

00:29:29.310 --> 00:29:29.320
 
 

00:29:29.320 --> 00:29:29.810
 
[Music]

00:29:29.810 --> 00:29:29.820
[Music]
 

00:29:29.820 --> 00:29:37.440
[Music]
[Applause]

00:29:37.440 --> 00:29:37.450
 
 

00:29:37.450 --> 00:29:41.110
 
yes this is the introduction video over

00:29:41.110 --> 00:29:41.120
yes this is the introduction video over
 

00:29:41.120 --> 00:29:43.630
yes this is the introduction video over
carefully the mode the one thing I want

00:29:43.630 --> 00:29:43.640
carefully the mode the one thing I want
 

00:29:43.640 --> 00:29:46.540
carefully the mode the one thing I want
to tell you is to enjoy it if this kind

00:29:46.540 --> 00:29:46.550
to tell you is to enjoy it if this kind
 

00:29:46.550 --> 00:29:48.760
to tell you is to enjoy it if this kind
of a good content every user have to

00:29:48.760 --> 00:29:48.770
of a good content every user have to
 

00:29:48.770 --> 00:29:52.270
of a good content every user have to
make build their own plan and help to

00:29:52.270 --> 00:29:52.280
make build their own plan and help to
 

00:29:52.280 --> 00:29:54.790
make build their own plan and help to
discuss about how to win how to beat the

00:29:54.790 --> 00:29:54.800
discuss about how to win how to beat the
 

00:29:54.800 --> 00:29:59.770
discuss about how to win how to beat the
others then that means to enjoy this one

00:29:59.770 --> 00:29:59.780
others then that means to enjoy this one
 

00:29:59.780 --> 00:30:02.710
others then that means to enjoy this one
people the users has to make us on their

00:30:02.710 --> 00:30:02.720
people the users has to make us on their
 

00:30:02.720 --> 00:30:07.930
people the users has to make us on their
own community so this is actual play

00:30:07.930 --> 00:30:07.940
own community so this is actual play
 

00:30:07.940 --> 00:30:26.730
own community so this is actual play
video

00:30:26.730 --> 00:30:26.740
 
 

00:30:26.740 --> 00:30:40.730
 
[Music]

00:30:40.730 --> 00:30:40.740
 
 

00:30:40.740 --> 00:30:46.420
 
x2 slightly

00:30:46.420 --> 00:30:46.430
 
 

00:30:46.430 --> 00:30:53.690
 
okay yep it's also you can enjoy this

00:30:53.690 --> 00:30:53.700
okay yep it's also you can enjoy this
 

00:30:53.700 --> 00:30:55.850
okay yep it's also you can enjoy this
kind of content on your mobile phone the

00:30:55.850 --> 00:30:55.860
kind of content on your mobile phone the
 

00:30:55.860 --> 00:30:59.050
kind of content on your mobile phone the
all-time battle wages up to 250 hours

00:30:59.050 --> 00:30:59.060
all-time battle wages up to 250 hours
 

00:30:59.060 --> 00:31:01.850
all-time battle wages up to 250 hours
but that is not easy there are so many

00:31:01.850 --> 00:31:01.860
but that is not easy there are so many
 

00:31:01.860 --> 00:31:04.970
but that is not easy there are so many
problems we have to solve something like

00:31:04.970 --> 00:31:04.980
problems we have to solve something like
 

00:31:04.980 --> 00:31:07.820
problems we have to solve something like
the stable flame light and the thermal

00:31:07.820 --> 00:31:07.830
the stable flame light and the thermal
 

00:31:07.830 --> 00:31:09.680
the stable flame light and the thermal
problem and the battery performance as

00:31:09.680 --> 00:31:09.690
problem and the battery performance as
 

00:31:09.690 --> 00:31:13.580
problem and the battery performance as
we said earlier so how to make it a

00:31:13.580 --> 00:31:13.590
we said earlier so how to make it a
 

00:31:13.590 --> 00:31:17.600
we said earlier so how to make it a
concern we thought or complain via one

00:31:17.600 --> 00:31:17.610
concern we thought or complain via one
 

00:31:17.610 --> 00:31:21.830
concern we thought or complain via one
of our solution so we expect it to be

00:31:21.830 --> 00:31:21.840
of our solution so we expect it to be
 

00:31:21.840 --> 00:31:24.320
of our solution so we expect it to be
the Balcombe we can solve the flame rate

00:31:24.320 --> 00:31:24.330
the Balcombe we can solve the flame rate
 

00:31:24.330 --> 00:31:28.820
the Balcombe we can solve the flame rate
problem and also our Barre problems so

00:31:28.820 --> 00:31:28.830
problem and also our Barre problems so
 

00:31:28.830 --> 00:31:35.900
problem and also our Barre problems so
this actual example the outside user

00:31:35.900 --> 00:31:35.910
this actual example the outside user
 

00:31:35.910 --> 00:31:38.660
this actual example the outside user
using Burcham the downside is reserved

00:31:38.660 --> 00:31:38.670
using Burcham the downside is reserved
 

00:31:38.670 --> 00:31:43.990
using Burcham the downside is reserved
to using our opengl you can check the

00:31:43.990 --> 00:31:44.000
to using our opengl you can check the
 

00:31:44.000 --> 00:31:48.680
to using our opengl you can check the
frame rate the per conversion rules are

00:31:48.680 --> 00:31:48.690
frame rate the per conversion rules are
 

00:31:48.690 --> 00:32:08.370
frame rate the per conversion rules are
both stable this is another example

00:32:08.370 --> 00:32:08.380
 
 

00:32:08.380 --> 00:32:12.659
 
and because of frame rate is more stable

00:32:12.659 --> 00:32:12.669
and because of frame rate is more stable
 

00:32:12.669 --> 00:32:15.480
and because of frame rate is more stable
we can add more effects this is the

00:32:15.480 --> 00:32:15.490
we can add more effects this is the
 

00:32:15.490 --> 00:32:17.549
we can add more effects this is the
original version of a lunatic tool

00:32:17.549 --> 00:32:17.559
original version of a lunatic tool
 

00:32:17.559 --> 00:32:20.250
original version of a lunatic tool
evolution this is are using our open gel

00:32:20.250 --> 00:32:20.260
evolution this is are using our open gel
 

00:32:20.260 --> 00:32:27.870
evolution this is are using our open gel
you can see very clear screen and we as

00:32:27.870 --> 00:32:27.880
you can see very clear screen and we as
 

00:32:27.880 --> 00:32:32.549
you can see very clear screen and we as
they're so cute effects that makes her

00:32:32.549 --> 00:32:32.559
they're so cute effects that makes her
 

00:32:32.559 --> 00:32:49.310
they're so cute effects that makes her
usual feel the depth of the environment

00:32:49.310 --> 00:32:49.320
 
 

00:32:49.320 --> 00:32:52.860
 
so we just get started and we have to

00:32:52.860 --> 00:32:52.870
so we just get started and we have to
 

00:32:52.870 --> 00:32:54.539
so we just get started and we have to
improve our graphics to maintain our

00:32:54.539 --> 00:32:54.549
improve our graphics to maintain our
 

00:32:54.549 --> 00:32:57.240
improve our graphics to maintain our
position in Korea and we've learnt to

00:32:57.240 --> 00:32:57.250
position in Korea and we've learnt to
 

00:32:57.250 --> 00:32:59.520
position in Korea and we've learnt to
launching give titles at Korea and the

00:32:59.520 --> 00:32:59.530
launching give titles at Korea and the
 

00:32:59.530 --> 00:33:01.560
launching give titles at Korea and the
you can enjoy dictated active content

00:33:01.560 --> 00:33:01.570
you can enjoy dictated active content
 

00:33:01.570 --> 00:33:05.909
you can enjoy dictated active content
baby I Indy fear that means we have to

00:33:05.909 --> 00:33:05.919
baby I Indy fear that means we have to
 

00:33:05.919 --> 00:33:08.970
baby I Indy fear that means we have to
make our title on well on low and device

00:33:08.970 --> 00:33:08.980
make our title on well on low and device
 

00:33:08.980 --> 00:33:11.580
make our title on well on low and device
without keeping our edge and the week we

00:33:11.580 --> 00:33:11.590
without keeping our edge and the week we
 

00:33:11.590 --> 00:33:13.320
without keeping our edge and the week we
believe we can do that video welcome

00:33:13.320 --> 00:33:13.330
believe we can do that video welcome
 

00:33:13.330 --> 00:33:15.230
believe we can do that video welcome
thank you

00:33:15.230 --> 00:33:15.240
thank you
 

00:33:15.240 --> 00:33:19.590
thank you
[Applause]

00:33:19.590 --> 00:33:19.600
[Applause]
 

00:33:19.600 --> 00:33:33.529
[Applause]
[Music]

