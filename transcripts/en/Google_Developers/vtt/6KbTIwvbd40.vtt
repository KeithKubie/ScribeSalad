WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.560
[MUSIC]

00:00:04.560 --> 00:00:07.580
MALE SPEAKER 1: Shanghai GDG
is a very interesting

00:00:07.580 --> 00:00:08.530
developer community.

00:00:08.530 --> 00:00:09.470
FEMALE SPEAKER 1: I'm
glad somebody

00:00:09.470 --> 00:00:10.690
has asked this question.

00:00:10.690 --> 00:00:10.900
[INAUDIBLE]

00:00:10.900 --> 00:00:12.120
MALE SPEAKER 2: This is where
the magic happens.

00:00:12.120 --> 00:00:13.432
JENNY MURPHY: This is primarily
a question and

00:00:13.432 --> 00:00:13.950
answer show.

00:00:13.950 --> 00:00:16.260
So if any of you out there would
like to ask questions.

00:00:22.900 --> 00:00:24.020
Hi, everyone.

00:00:24.020 --> 00:00:26.930
Welcome to this week's session
of the Google+

00:00:26.930 --> 00:00:29.110
Platform Office Hours.

00:00:29.110 --> 00:00:32.740
This week we're going to field
your questions and comments

00:00:32.740 --> 00:00:35.970
about the Hangouts API.

00:00:35.970 --> 00:00:38.630
So before we dig into the
questions and answers, let me

00:00:38.630 --> 00:00:41.910
introduce myself, and my
co-hosts, and my other guests.

00:00:41.910 --> 00:00:44.560
So starting with me,
I'm Jenny Murphy.

00:00:44.560 --> 00:00:48.550
I'm a developer programs
engineer here at Google, which

00:00:48.550 --> 00:00:53.650
means I help you build really
cool stuff with Google+ APIs.

00:00:53.650 --> 00:00:58.560
And other Googlers joining me
via the magic of cyberspace,

00:00:58.560 --> 00:01:02.442
we have Jonathan Berry
on the hangout.

00:01:02.442 --> 00:01:04.379
JONATHAN BERRY: Hi, I'm
Jonathan Berry.

00:01:04.379 --> 00:01:07.200
I'm a developer advocate
focusing on hangouts and

00:01:07.200 --> 00:01:08.480
Hangout apps.

00:01:08.480 --> 00:01:09.220
JENNY MURPHY: Umhmm.

00:01:09.220 --> 00:01:11.366
We also have Silvano.

00:01:11.366 --> 00:01:12.320
SILVANO LUCIANI: Hi.

00:01:12.320 --> 00:01:16.080
I'm Silvano Luciani and I'm a
developer programs engineer

00:01:16.080 --> 00:01:19.690
working in London focusing
on Hangouts API and apps.

00:01:19.690 --> 00:01:22.170
JENNY MURPHY: We also have
some developers who have

00:01:22.170 --> 00:01:24.350
joined us through the
same hangout.

00:01:24.350 --> 00:01:26.230
So from left to right.

00:01:26.230 --> 00:01:27.912
Abraham.

00:01:27.912 --> 00:01:29.750
ABRAHAM WILLIAMS: Hi, I'm
Abraham Williams.

00:01:29.750 --> 00:01:32.870
I have a start-up in San
Francisco called Addvocate.

00:01:32.870 --> 00:01:35.210
I'm constantly hacking on

00:01:35.210 --> 00:01:36.590
different and various projects.

00:01:36.590 --> 00:01:40.430
And I've been having fun
watching all the Mars news in

00:01:40.430 --> 00:01:43.242
the last couple of days.

00:01:43.242 --> 00:01:45.000
JENNY MURPHY: And Allen.

00:01:45.000 --> 00:01:45.590
ALLEN FIRSTENBERG: Hi there.

00:01:45.590 --> 00:01:46.780
I'm Allen Firstenberg.

00:01:46.780 --> 00:01:49.650
I'm an independent developer
in New York.

00:01:49.650 --> 00:01:52.820
I tend to work a lot with the
Hangout API, and I've started

00:01:52.820 --> 00:01:55.386
dabbling with the History
API a little bit.

00:01:55.386 --> 00:01:58.145
JENNY MURPHY: Next is Emily.

00:01:58.145 --> 00:02:02.651
EMILY SOLDAL: I'm a software
engineer at Google.

00:02:02.651 --> 00:02:05.350
I've only recently started
there, so I've actually had a

00:02:05.350 --> 00:02:07.690
lot of experience externally
poking at the APIs.

00:02:07.690 --> 00:02:11.420
JENNY MURPHY: And that's the
nature of a lot of our

00:02:11.420 --> 00:02:15.450
favorite developers end up
deciding to join us.

00:02:15.450 --> 00:02:16.710
EMILY SOLDAL: It's
a good place.

00:02:16.710 --> 00:02:19.390
JENNY MURPHY: Yah, not bad.

00:02:19.390 --> 00:02:20.503
Gerwin.

00:02:20.503 --> 00:02:22.880
GERWIN STURM: Ya, hi, I'm
Gerwin from Austria.

00:02:22.880 --> 00:02:26.050
I'm developing all sorts of
stuff with the different

00:02:26.050 --> 00:02:28.574
Google+ APIs.

00:02:28.574 --> 00:02:29.570
JENNY MURPHY: Great.

00:02:29.570 --> 00:02:33.140
And last but not least, Matt
who got an invite about 10

00:02:33.140 --> 00:02:34.390
minutes ago.

00:02:37.100 --> 00:02:38.260
MATT VAN VEENENDAAL:
Hey, guys.

00:02:38.260 --> 00:02:39.060
I'm Matt.

00:02:39.060 --> 00:02:41.150
I work here at Curious Minds.

00:02:41.150 --> 00:02:43.806
I'm just really kind of playing
around with the Google

00:02:43.806 --> 00:02:45.928
Hangouts API and seeing what
we can do with it.

00:02:45.928 --> 00:02:47.840
JENNY MURPHY: That's great.

00:02:47.840 --> 00:02:50.150
So I guess without
further ado--

00:02:50.150 --> 00:02:52.660
Actually, Jonathan, did you
mention you had something you

00:02:52.660 --> 00:02:55.150
wanted to chat about before
we dove into the

00:02:55.150 --> 00:02:56.250
questions and answers?

00:02:56.250 --> 00:02:58.600
JONATHAN BERRY: Oh yeah, sure,
just a brief update on our

00:02:58.600 --> 00:03:00.390
favorite robot friend--

00:03:00.390 --> 00:03:02.670
favorite hangout-enabled
robot friend.

00:03:02.670 --> 00:03:06.910
Today he made Hack a Day,
which was a real treat.

00:03:06.910 --> 00:03:10.920
Of course, he came back, took
down Gus's servers, but

00:03:10.920 --> 00:03:12.030
they're back up.

00:03:12.030 --> 00:03:12.990
[LAUGHTER]

00:03:12.990 --> 00:03:15.960
JONATHAN BERRY: But, it's
a fun use case.

00:03:15.960 --> 00:03:18.780
I think people love robots.

00:03:18.780 --> 00:03:20.703
Clearly people love
hangouts, though.

00:03:20.703 --> 00:03:22.026
It's a match made in heaven.

00:03:22.026 --> 00:03:22.840
JENNY MURPHY: Yes.

00:03:22.840 --> 00:03:26.070
OSCAR was a lot of fun
to show all of you.

00:03:26.070 --> 00:03:28.260
And in case any of you are
wondering, the source code for

00:03:28.260 --> 00:03:31.400
OSCAR was just published to our
Office Hours Repository,

00:03:31.400 --> 00:03:33.950
which I'll link to from the show
notes in case you were

00:03:33.950 --> 00:03:36.230
eagerly awaiting that
source code.

00:03:36.230 --> 00:03:37.460
It is up there.

00:03:37.460 --> 00:03:39.940
And you'll be surprised
how simple it is.

00:03:39.940 --> 00:03:42.260
Maybe.

00:03:42.260 --> 00:03:45.550
Well, without further ado, let's
dive into the questions.

00:03:45.550 --> 00:03:50.970
So I believe Matt, you had
some hangouts questions.

00:03:50.970 --> 00:03:52.450
MATT VAN VEENENDAAL:
Yeah, awesome.

00:03:52.450 --> 00:03:55.170
So I've been working with
hangouts quite a bit over the

00:03:55.170 --> 00:03:57.400
last few weeks, and I have a
couple of questions here that

00:03:57.400 --> 00:03:59.650
I'd really like to kind
of get through.

00:03:59.650 --> 00:04:03.680
The first and possibly most
important one is one of the

00:04:03.680 --> 00:04:06.060
problems I'm having with my
hangout is when people can

00:04:06.060 --> 00:04:09.010
choose Chat, or they choose
another app for example.

00:04:09.010 --> 00:04:11.180
It really kind of kills
my app, and I don't

00:04:11.180 --> 00:04:12.930
know where it goes.

00:04:12.930 --> 00:04:16.810
Is there any way we can have
like a hook or some kind of

00:04:16.810 --> 00:04:18.540
vent that's driven
where my app is

00:04:18.540 --> 00:04:20.209
unloaded on the user side?

00:04:20.209 --> 00:04:23.510
Or perhaps you know of some way
to change the UI so that

00:04:23.510 --> 00:04:26.610
we can notify the user ahead
of time when pressing Chat.

00:04:26.610 --> 00:04:29.700
Or something like that that
would kick out of the app

00:04:29.700 --> 00:04:30.605
that's running.

00:04:30.605 --> 00:04:31.190
JONATHAN BERRY: Sure.

00:04:31.190 --> 00:04:34.090
So there's the two scenarios
you talked about.

00:04:34.090 --> 00:04:34.990
One is about Chat.

00:04:34.990 --> 00:04:36.320
And one is about
switching apps.

00:04:36.320 --> 00:04:38.500
And one is actually about
turning off an app.

00:04:38.500 --> 00:04:40.770
And that's two different
use cases.

00:04:40.770 --> 00:04:43.260
When the Chat is enabled, it
shouldn't have any effect on

00:04:43.260 --> 00:04:45.080
the functionality of
your application.

00:04:45.080 --> 00:04:46.140
And that might just be a bug.

00:04:46.140 --> 00:04:48.140
I have yet to see that or
hear reports of that.

00:04:48.140 --> 00:04:50.010
So if you're able to
repeat it, please,

00:04:50.010 --> 00:04:51.340
let's dive into that.

00:04:51.340 --> 00:04:52.510
MATT VAN VEENENDAAL: Yeah, just
to quickly clarify that

00:04:52.510 --> 00:04:53.060
while we're on that.

00:04:53.060 --> 00:04:55.880
It's actually because my app
runs in the side pane-- like

00:04:55.880 --> 00:04:56.940
it's one of the side
pane apps.

00:04:56.940 --> 00:04:58.270
JONATHAN BERRY: Oh, it's
an extension app.

00:04:58.270 --> 00:04:59.040
Yeah.

00:04:59.040 --> 00:05:02.090
With an extension app, you can
only have the Chat or an

00:05:02.090 --> 00:05:04.930
extension type app running
at the same time.

00:05:04.930 --> 00:05:06.200
That's by design.

00:05:06.200 --> 00:05:09.330
It's just because of real estate
and things like that.

00:05:09.330 --> 00:05:12.150
I was going to say that for our
standard application, we

00:05:12.150 --> 00:05:15.010
have events related to
participants enabling or

00:05:15.010 --> 00:05:15.760
disabling your app.

00:05:15.760 --> 00:05:18.210
So on Participant Enabled we'll
tell you when somebody

00:05:18.210 --> 00:05:20.966
switches to another app or
switches back to the camera.

00:05:23.540 --> 00:05:26.530
And when you close the app,
there's no event for that.

00:05:26.530 --> 00:05:29.430
But in your particular case with
the extension type app,

00:05:29.430 --> 00:05:32.722
it's really an all or nothing.

00:05:32.722 --> 00:05:34.666
There may be an event
listed for that.

00:05:34.666 --> 00:05:37.326
Silvano, do you know?

00:05:37.326 --> 00:05:38.576
SILVANO LUCIANI: No.

00:05:40.686 --> 00:05:42.450
MATT VAN VEENENDAAL: So
let's say I didn't do

00:05:42.450 --> 00:05:43.080
an extension app.

00:05:43.080 --> 00:05:44.860
Let's say I moved into
the main pane.

00:05:44.860 --> 00:05:47.750
I sort of had a similar problem
when people were, for

00:05:47.750 --> 00:05:49.150
example, clicking on
thumbnails and

00:05:49.150 --> 00:05:50.590
bringing up the main view.

00:05:50.590 --> 00:05:53.220
Are you saying that in that
case, these kind of

00:05:53.220 --> 00:05:54.050
[INAUDIBLE]

00:05:54.050 --> 00:05:55.540
Participant Disabled?

00:05:55.540 --> 00:05:57.660
Would that be fired on
the actual client?

00:05:57.660 --> 00:06:00.728
Or would it be fired
on everyone else's?

00:06:00.728 --> 00:06:05.050
JONATHAN BERRY: Ahh, that would
be fired on a client.

00:06:05.050 --> 00:06:05.825
Yeah.

00:06:05.825 --> 00:06:07.780
MATT VAN VEENENDAAL: So with
that, one thing I was looking

00:06:07.780 --> 00:06:11.890
at for that is potentially as
they click the thumbnail

00:06:11.890 --> 00:06:14.810
sending the user an alert or
something like that or some

00:06:14.810 --> 00:06:18.350
kind of visual for you to say,
hey, the Chat's gone away.

00:06:18.350 --> 00:06:19.020
Something happened.

00:06:19.020 --> 00:06:22.565
Would I be able to do that from
Participant Disabled?

00:06:22.565 --> 00:06:23.430
JONATHAN BERRY: Yes.

00:06:23.430 --> 00:06:26.230
Let me just pull up the
particulars of how

00:06:26.230 --> 00:06:28.400
you want to do that.

00:06:28.400 --> 00:06:30.230
Say, if you go to the
documentation, there's the

00:06:30.230 --> 00:06:31.550
Participant Enabled Events.

00:06:31.550 --> 00:06:32.795
MATT VAN VEENENDAAL: Mm-hm.

00:06:32.795 --> 00:06:34.346
JONATHAN BERRY: Right.

00:06:34.346 --> 00:06:36.490
MATT VAN VEENENDAAL: One thing I
noticed about those, though,

00:06:36.490 --> 00:06:38.720
they seem to fire for everyone
in the hangout.

00:06:38.720 --> 00:06:41.710
And in this particular case, I
only want to fire the event

00:06:41.710 --> 00:06:45.280
for the person that actually
clicks on the thumbnail.

00:06:45.280 --> 00:06:46.210
JONATHAN BERRY: Interesting.

00:06:46.210 --> 00:06:51.550
So you have an application and
it's taking up the full frame.

00:06:51.550 --> 00:06:56.440
And that user then clicks on the
thumbnail to view somebody

00:06:56.440 --> 00:06:57.790
and the app gets hidden.

00:06:57.790 --> 00:07:00.000
So you want that particular
user to know that they've

00:07:00.000 --> 00:07:00.590
disabled the app?

00:07:00.590 --> 00:07:01.730
MATT VAN VEENENDAAL:
Yeah, exactly.

00:07:01.730 --> 00:07:03.190
I want them to say like,
hey, you know you've

00:07:03.190 --> 00:07:03.600
disabled the app.

00:07:03.600 --> 00:07:06.000
You're no longer doing
something with

00:07:06.000 --> 00:07:08.274
whatever my app is doing.

00:07:08.274 --> 00:07:10.520
JONATHAN BERRY: Interesting.

00:07:10.520 --> 00:07:12.890
There may not be a hook
for that right now.

00:07:12.890 --> 00:07:13.670
SILVANO LUCIANI: [GRUNT]

00:07:13.670 --> 00:07:14.980
JONATHAN BERRY: That's
something to

00:07:14.980 --> 00:07:15.670
take back to the team.

00:07:15.670 --> 00:07:19.880
GERWIN STURM: I think there
should be an On App visible

00:07:19.880 --> 00:07:21.670
event which might fire.

00:07:21.670 --> 00:07:21.910
I'm not sure.

00:07:21.910 --> 00:07:23.460
I haven't used this event.

00:07:23.460 --> 00:07:27.010
But there's an On App visible
event which might fire.

00:07:27.010 --> 00:07:30.040
But, of course, I think the app
should be running in the

00:07:30.040 --> 00:07:33.490
background, so it should still
be able to respond somehow.

00:07:33.490 --> 00:07:35.060
And then you could just
put out like a

00:07:35.060 --> 00:07:37.150
notification on top.

00:07:37.150 --> 00:07:38.375
Which might work.

00:07:38.375 --> 00:07:39.340
But I'm not sure.

00:07:39.340 --> 00:07:40.240
JONATHAN BERRY: Yeah.

00:07:40.240 --> 00:07:42.225
So there's the On App visible.

00:07:44.835 --> 00:07:47.190
MATT VAN VEENENDAAL: So I guess
that could clarify the

00:07:47.190 --> 00:07:49.880
question then is, when I click
on the thumbnails, does that

00:07:49.880 --> 00:07:51.320
actually put the app
to the background?

00:07:51.320 --> 00:07:52.860
Or does that remove the
app completely?

00:07:52.860 --> 00:07:53.200
JONATHAN BERRY: Correct.

00:07:53.200 --> 00:07:54.100
The iframe is actually
still running.

00:07:54.100 --> 00:07:54.880
MATT VAN VEENENDAAL: OK.

00:07:54.880 --> 00:07:56.900
JONATHAN BERRY: There's really,
as far as I know, only

00:07:56.900 --> 00:07:59.256
one way to really--

00:07:59.256 --> 00:07:59.800
sorry.

00:07:59.800 --> 00:08:00.930
Two ways to stop an app.

00:08:00.930 --> 00:08:02.670
One is to close the hangout
all together.

00:08:02.670 --> 00:08:05.070
And one is to actually go to the
app switch at the bottom,

00:08:05.070 --> 00:08:08.020
and there's a little x that
allows the user to close it.

00:08:08.020 --> 00:08:11.790
And it'll actually delete the
iframe-- essentially ending

00:08:11.790 --> 00:08:12.890
the session for that
application.

00:08:12.890 --> 00:08:13.590
MATT VAN VEENENDAAL: OK.

00:08:13.590 --> 00:08:15.865
ALLEN FIRSTENBERG: If you switch
to a different app, it

00:08:15.865 --> 00:08:18.100
leaves the first app running?

00:08:18.100 --> 00:08:19.272
It leaves the first iframe
in the background?

00:08:19.272 --> 00:08:20.478
JONATHAN BERRY: I believe so.

00:08:20.478 --> 00:08:21.390
MATT VAN VEENENDAAL:
OK, that's cool.

00:08:21.390 --> 00:08:24.410
So what I'll do is I'll try not
using the extension app.

00:08:24.410 --> 00:08:26.210
Because I think the extension
app has different

00:08:26.210 --> 00:08:28.430
functionality where it just
kind of disappears.

00:08:28.430 --> 00:08:29.912
And I don't know
where it goes.

00:08:29.912 --> 00:08:33.150
JONATHAN BERRY: Yeah, the way we
think about extension apps

00:08:33.150 --> 00:08:34.929
is, it's sort of an
enhancement to the

00:08:34.929 --> 00:08:35.640
conversation.

00:08:35.640 --> 00:08:39.012
So if you look at one of Allen's
first apps where he

00:08:39.012 --> 00:08:42.360
had a little text overlay, that
sort of adds to the video

00:08:42.360 --> 00:08:42.980
conversation.

00:08:42.980 --> 00:08:43.860
It's not really [INAUDIBLE]

00:08:43.860 --> 00:08:45.110
with the experience.

00:08:45.110 --> 00:08:49.750
Cameron has a very similar one,
Pro Studio, where the

00:08:49.750 --> 00:08:51.030
conversation is center.

00:08:51.030 --> 00:08:53.370
If you really want to have a
rich application, I'd still

00:08:53.370 --> 00:08:54.180
have the main video.

00:08:54.180 --> 00:08:56.950
We also have the
video overlay.

00:08:56.950 --> 00:08:58.120
ALLEN FIRSTENBERG: My example's
actually a bad

00:08:58.120 --> 00:09:03.250
example, because it is a full
app that embeds its own video

00:09:03.250 --> 00:09:04.970
overlay into it.

00:09:04.970 --> 00:09:07.030
So it has better control
over the videos.

00:09:07.030 --> 00:09:09.376
JONATHAN BERRY: OK.

00:09:09.376 --> 00:09:09.792
Cool.

00:09:09.792 --> 00:09:10.390
MATT VAN VEENENDAAL: Yeah.

00:09:10.390 --> 00:09:12.860
I'm sure I could probably
reproduce my app by just

00:09:12.860 --> 00:09:14.710
putting a video canvas there.

00:09:14.710 --> 00:09:17.110
I just thought the extension
seemed easier.

00:09:17.110 --> 00:09:19.725
JONATHAN BERRY: From an API
point of view, they have the

00:09:19.725 --> 00:09:22.690
exact same functionality, but
there is different behavior on

00:09:22.690 --> 00:09:23.825
the canvas itself.

00:09:23.825 --> 00:09:24.590
MATT VAN VEENENDAAL: OK.

00:09:24.590 --> 00:09:27.460
That answers my question
for that one.

00:09:27.460 --> 00:09:29.430
Should I go ahead and ask
my next questions?

00:09:29.430 --> 00:09:31.630
Or should I let some of the
other guests ask theirs first?

00:09:31.630 --> 00:09:32.810
JONATHAN BERRY: Go for it.

00:09:32.810 --> 00:09:33.730
MATT VAN VEENENDAAL: OK.

00:09:33.730 --> 00:09:35.270
So I have a question that's
kind of been on the

00:09:35.270 --> 00:09:36.160
Discussions.

00:09:36.160 --> 00:09:37.220
It was just brought up.

00:09:37.220 --> 00:09:39.830
Is there any way to disable
the invite system?

00:09:39.830 --> 00:09:43.970
Or disable the invite system
when you're joining?

00:09:43.970 --> 00:09:45.850
A great example of this is--
someone brought it up on the

00:09:45.850 --> 00:09:48.810
Discussions that the NFL fantasy
league has invented

00:09:48.810 --> 00:09:51.720
hangouts now in their
kind of application.

00:09:51.720 --> 00:09:54.420
But they don't let you invite
from other sources.

00:09:54.420 --> 00:09:57.710
Like they don't let anyone from
Google+ kind of invite

00:09:57.710 --> 00:09:59.210
the usual way.

00:09:59.210 --> 00:10:00.960
And the reason why I would want
to do this is, let's say

00:10:00.960 --> 00:10:03.320
I'm embedding it in an
application of my own.

00:10:03.320 --> 00:10:06.400
I don't want to have just random
Google+ users join.

00:10:06.400 --> 00:10:10.534
I just want to make sure
I know who's joined.

00:10:10.534 --> 00:10:12.390
JONATHAN BERRY: Not really.

00:10:12.390 --> 00:10:14.260
ALLEN FIRSTENBERG: And in
particular, make them join

00:10:14.260 --> 00:10:16.260
with a particular app
already running.

00:10:16.260 --> 00:10:16.830
MATT VAN VEENENDAAL: Yeah.

00:10:16.830 --> 00:10:17.920
App [INAUDIBLE] would
be great.

00:10:17.920 --> 00:10:20.270
ALLEN FIRSTENBERG: And this is
something we discussed in the

00:10:20.270 --> 00:10:22.736
past as well.

00:10:22.736 --> 00:10:23.490
JONATHAN BERRY: Yeah.

00:10:23.490 --> 00:10:27.010
So there's no way to disable the
invites of functionality

00:10:27.010 --> 00:10:27.850
of the hangout.

00:10:27.850 --> 00:10:32.100
In general, there's sort of the
core hangout experience.

00:10:32.100 --> 00:10:33.850
It can only be controlled
in some way.

00:10:33.850 --> 00:10:35.317
So, for example, you can
mute the mike, you

00:10:35.317 --> 00:10:37.410
can lower the volume.

00:10:37.410 --> 00:10:40.260
But you can't, let's say,
prevent somebody from unmuting

00:10:40.260 --> 00:10:41.630
themselves.

00:10:41.630 --> 00:10:44.620
And that extends to
the invite flow.

00:10:44.620 --> 00:10:47.960
There is some interesting
solutions to getting people

00:10:47.960 --> 00:10:50.850
into hangout versus
preventing them.

00:10:50.850 --> 00:10:53.920
I think Aces Poker does this
where they use the Hangout

00:10:53.920 --> 00:10:55.980
URL, and they send that
back to their server.

00:10:55.980 --> 00:11:00.180
And they show the active or base
step's algorithm to the

00:11:00.180 --> 00:11:02.070
most interesting hangout
on their site.

00:11:02.070 --> 00:11:05.170
And they guide people to
go to that hangout.

00:11:05.170 --> 00:11:08.260
They actually refresh
the hangout itself.

00:11:08.260 --> 00:11:08.890
MATT VAN VEENENDAAL: Yeah.

00:11:08.890 --> 00:11:12.030
So in terms of that, I have no
problem getting people into

00:11:12.030 --> 00:11:12.500
the hangout.

00:11:12.500 --> 00:11:15.110
Like I can grab the hangout URL,
and I can append my app

00:11:15.110 --> 00:11:16.960
ID, and get people in.

00:11:16.960 --> 00:11:19.940
The question I'm concerned is
from a user point of view.

00:11:19.940 --> 00:11:21.850
I really don't want to have the
users in there, and then

00:11:21.850 --> 00:11:25.588
try to invite people in that
don't have my app open.

00:11:25.588 --> 00:11:26.480
JONATHAN BERRY: Yeah.

00:11:26.480 --> 00:11:29.290
Unfortunately, that's
not available today.

00:11:29.290 --> 00:11:32.320
And it's a great feature
request.

00:11:32.320 --> 00:11:35.110
The first things come to mind--
besides finding that

00:11:35.110 --> 00:11:37.620
bug and trying to get
that prioritized--

00:11:37.620 --> 00:11:40.550
is so now enforcing that in
the app functionality.

00:11:40.550 --> 00:11:44.110
So basically to say, hey, you
don't have access to the app,

00:11:44.110 --> 00:11:45.925
because you're not on some
magical list that you enforce

00:11:45.925 --> 00:11:46.720
on your server side.

00:11:46.720 --> 00:11:49.070
MATT VAN VEENENDAAL: Yes, that's
what I'm doing with

00:11:49.070 --> 00:11:50.780
using that the muting
functionality

00:11:50.780 --> 00:11:51.480
and stuff like that.

00:11:51.480 --> 00:11:55.030
So I'll mute people
who don't have the

00:11:55.030 --> 00:11:56.830
app open, for example.

00:11:56.830 --> 00:11:59.150
But they can still see what's
going on in the app because I

00:11:59.150 --> 00:12:01.380
can't really mute everyone
like that.

00:12:01.380 --> 00:12:03.690
I can only mute what people
come in to see.

00:12:03.690 --> 00:12:04.940
JONATHAN BERRY: Sure.

00:12:07.860 --> 00:12:10.220
What I was actually suggesting
is going one step further.

00:12:10.220 --> 00:12:13.130
So if they have the app running,
to actually disable

00:12:13.130 --> 00:12:14.710
the functionality of
the app entirely?

00:12:14.710 --> 00:12:17.156
MATT VAN VEENENDAAL: Well,
the thing is--

00:12:17.156 --> 00:12:19.360
JONATHAN BERRY: Hey, you're not
allowed to use this app.

00:12:19.360 --> 00:12:20.465
Please go away.

00:12:20.465 --> 00:12:21.290
MATT VAN VEENENDAAL: Yeah.

00:12:21.290 --> 00:12:22.530
I mean that's easy.

00:12:22.530 --> 00:12:24.890
The problem I have is when
people join that don't have

00:12:24.890 --> 00:12:25.740
the app running.

00:12:25.740 --> 00:12:28.620
Because they're still able to
see other people's feeds.

00:12:28.620 --> 00:12:30.470
I can mute them.

00:12:30.470 --> 00:12:32.410
If someone's running the app, I
can mute anyone who doesn't

00:12:32.410 --> 00:12:33.540
have the app.

00:12:33.540 --> 00:12:36.580
But I can't prevent them from
seeing what's going on in the

00:12:36.580 --> 00:12:38.785
mainstream.

00:12:38.785 --> 00:12:41.980
JONATHAN BERRY: Yeah,
that's a great idea.

00:12:41.980 --> 00:12:44.220
MATT VAN VEENENDAAL: So kind
of the best thing for that

00:12:44.220 --> 00:12:44.770
would be, what?

00:12:44.770 --> 00:12:46.145
To file a bug report?

00:12:46.145 --> 00:12:46.750
JONATHAN BERRY: Yeah.

00:12:46.750 --> 00:12:49.880
So we have the Google+
platform bug tracker.

00:12:49.880 --> 00:12:52.860
And of course, we also take the
feedback directly from the

00:12:52.860 --> 00:12:54.090
Office Hours in [INAUDIBLE].

00:12:54.090 --> 00:12:55.030
MATT VAN VEENENDAAL: Awesome.

00:12:55.030 --> 00:12:55.500
OK.

00:12:55.500 --> 00:12:57.875
JONATHAN BERRY: If the bug is in
there, obviously it'll help

00:12:57.875 --> 00:12:59.440
us get it out faster.

00:12:59.440 --> 00:13:02.310
MATT VAN VEENENDAAL: And then
I guess my final question is

00:13:02.310 --> 00:13:04.450
completely related to this.

00:13:04.450 --> 00:13:07.260
This could easily be solved
by like some kind of kick

00:13:07.260 --> 00:13:09.340
functionality or something
like that.

00:13:09.340 --> 00:13:11.190
Is there any plans for
that at the moment?

00:13:11.190 --> 00:13:14.030
Or should I be digging through
issue reports to see if

00:13:14.030 --> 00:13:16.155
someone else has suggested it?

00:13:16.155 --> 00:13:17.000
JONATHAN BERRY: Yeah.

00:13:17.000 --> 00:13:19.580
There's definitely good
suggestions around better

00:13:19.580 --> 00:13:21.620
moderation tools.

00:13:21.620 --> 00:13:24.200
We launched the Cameraman
app as an example

00:13:24.200 --> 00:13:26.640
of moderation tools.

00:13:26.640 --> 00:13:27.920
We're investigating it.

00:13:27.920 --> 00:13:30.970
We have nothing to announce or
anything really concrete to

00:13:30.970 --> 00:13:31.870
talk about today.

00:13:31.870 --> 00:13:33.910
But there's definitely
been feedback around.

00:13:33.910 --> 00:13:37.230
Both for the end-users how
to have a better Hangout

00:13:37.230 --> 00:13:40.120
experience for both
communication and broadcast,

00:13:40.120 --> 00:13:41.610
as well as exposing [INAUDIBLE]
developers.

00:13:41.610 --> 00:13:42.500
MATT VAN VEENENDAAL: Yeah.

00:13:42.500 --> 00:13:45.210
Do you guys have a timeline
for the 1.2 release?

00:13:45.210 --> 00:13:46.990
I know that 1.1's been
around since I've

00:13:46.990 --> 00:13:47.990
started working on it.

00:13:47.990 --> 00:13:50.812
Do you know when anything
like new will be up?

00:13:50.812 --> 00:13:53.300
JONATHAN BERRY: We don't have
a regular release cycle.

00:13:56.570 --> 00:13:59.740
I think we should walk through
how the release cycle happens.

00:13:59.740 --> 00:14:01.570
Which makes it a little
bit more complicated.

00:14:01.570 --> 00:14:04.660
Because there's a
Google+ plug-in.

00:14:04.660 --> 00:14:07.680
Let's say we decide on a new
functionality and we want to

00:14:07.680 --> 00:14:08.460
introduce that.

00:14:08.460 --> 00:14:10.830
So the plug-in-team has to go
in, and decide the best way to

00:14:10.830 --> 00:14:13.210
make it optimal and what
features should be enabled and

00:14:13.210 --> 00:14:14.910
how the API server
should look.

00:14:14.910 --> 00:14:16.880
And it gets built-- deployed.

00:14:16.880 --> 00:14:19.770
At that point, once it's in
staging or whatever, the

00:14:19.770 --> 00:14:22.360
Hangout apps platform team
then goes and starts

00:14:22.360 --> 00:14:23.540
working with it.

00:14:23.540 --> 00:14:26.280
And creates the job surface.

00:14:26.280 --> 00:14:30.190
So that tends to increase the
amount of time it takes to

00:14:30.190 --> 00:14:34.370
release, so things can
be very flexible.

00:14:34.370 --> 00:14:38.260
But in general, we're going
to try to get some low

00:14:38.260 --> 00:14:39.852
[INAUDIBLE] fruit
out pretty soon.

00:14:39.852 --> 00:14:41.088
[INAUDIBLE] hangout.

00:14:41.088 --> 00:14:41.910
MATT VAN VEENENDAAL: Awesome.

00:14:41.910 --> 00:14:43.440
That answers all of
my questions.

00:14:43.440 --> 00:14:43.830
Thank you.

00:14:43.830 --> 00:14:45.086
Thank you, guys, again
for your time.

00:14:45.086 --> 00:14:45.790
JONATHAN BERRY: Sorry.

00:14:45.790 --> 00:14:47.050
I don't know if you're
talking about.

00:14:47.050 --> 00:14:48.390
But can you say what
you're working on?

00:14:48.390 --> 00:14:50.490
Or it's still on the DL?

00:14:50.490 --> 00:14:52.360
MATT VAN VEENENDAAL: It's
still on the DL.

00:14:52.360 --> 00:14:54.780
But hopefully it'll
be done soon.

00:14:54.780 --> 00:14:55.776
JONATHAN BERRY: Cool.

00:14:55.776 --> 00:14:57.270
Cool.

00:14:57.270 --> 00:14:57.780
All right.

00:14:57.780 --> 00:14:58.060
Awesome.

00:14:58.060 --> 00:14:59.916
Thanks for the questions.

00:14:59.916 --> 00:15:00.690
JENNY MURPHY: Great.

00:15:00.690 --> 00:15:02.020
Yeah, thanks for the
great questions.

00:15:02.020 --> 00:15:04.720
So does anyone else in the
hangout have anything they'd

00:15:04.720 --> 00:15:07.190
like to ask Jonathan,
Silvano, or myself?

00:15:10.010 --> 00:15:13.300
ABRAHAM WILLIAMS: This isn't
exactly a Hangout API

00:15:13.300 --> 00:15:16.050
question, but I'm just curious
if you guys know anything

00:15:16.050 --> 00:15:21.935
about the relation of the
Hangout technology and WebRTC?

00:15:24.960 --> 00:15:28.500
JONATHAN BERRY: So WebRTC
and hangouts?

00:15:28.500 --> 00:15:28.870
Yeah.

00:15:28.870 --> 00:15:33.130
So Google and a bunch of other
companies have been pushing

00:15:33.130 --> 00:15:34.970
the WebRTC standard.

00:15:34.970 --> 00:15:37.675
It sort of started with us and
a few of our technologies we

00:15:37.675 --> 00:15:39.360
acquired when we open sourced.

00:15:39.360 --> 00:15:42.690
And it's definitely part of
the open web platform.

00:15:42.690 --> 00:15:45.780
And we're moving towards
making that sort of an

00:15:45.780 --> 00:15:48.170
available standard
for developers.

00:15:48.170 --> 00:15:50.560
Definitely the Hangouts team has
been looking into it and

00:15:50.560 --> 00:15:51.630
talking to our [INAUDIBLE].

00:15:51.630 --> 00:15:54.350
Obviously it's in
Google projects.

00:15:54.350 --> 00:15:56.350
There's some challenges there.

00:15:56.350 --> 00:16:00.070
The spec doesn't have proper
support [INAUDIBLE] video.

00:16:00.070 --> 00:16:03.080
It doesn't have the data channel
thing really baked in.

00:16:03.080 --> 00:16:05.380
There's a proposal for that.

00:16:05.380 --> 00:16:09.240
But that's the future of online
web communication, and

00:16:09.240 --> 00:16:12.036
we hope to allign ourselves
sometime in the future.

00:16:12.036 --> 00:16:12.630
ABRAHAM WILLIAMS: Awesome.

00:16:12.630 --> 00:16:13.120
Thanks.

00:16:13.120 --> 00:16:14.100
JONATHAN BERRY: OK.

00:16:14.100 --> 00:16:14.790
No problem.

00:16:14.790 --> 00:16:15.330
And it's fun.

00:16:15.330 --> 00:16:17.780
I play with getUserMedia
all the time.

00:16:17.780 --> 00:16:20.740
ABRAHAM WILLIAMS: Hah.

00:16:20.740 --> 00:16:21.660
JONATHAN BERRY: I don't
know if you guys saw

00:16:21.660 --> 00:16:23.080
the xylophone demo?

00:16:23.080 --> 00:16:23.680
SILVANO LUCIANI: Yeah.

00:16:23.680 --> 00:16:26.685
That's very, very cool.

00:16:26.685 --> 00:16:28.770
JONATHAN BERRY: For those who
are watching and haven't seen

00:16:28.770 --> 00:16:29.790
it, it's a great--

00:16:29.790 --> 00:16:31.640
I think it's on HTML5 Rocks.

00:16:31.640 --> 00:16:34.410
Or one of the other
HTML sites.

00:16:34.410 --> 00:16:36.630
Where it's using getUserMedia
and some sort of a

00:16:36.630 --> 00:16:38.881
handtracking, and you can
play a xylophone.

00:16:38.881 --> 00:16:40.354
On the screen.

00:16:40.354 --> 00:16:41.340
EMILY SOLDAL: Awesome.

00:16:41.340 --> 00:16:42.396
JONATHAN BERRY: Yeah,
it's fun.

00:16:42.396 --> 00:16:42.930
SILVANO LUCIANI: Yeah.

00:16:42.930 --> 00:16:46.310
If you're interested in the
WebRTC, I think last week,

00:16:46.310 --> 00:16:49.595
there was an Office Hours from
the Chrome Developer relation

00:16:49.595 --> 00:16:50.940
team from London.

00:16:50.940 --> 00:16:53.260
So you should be able to
find it in the GDL.

00:16:53.260 --> 00:16:55.292
In Google Developers slide.

00:16:55.292 --> 00:16:56.230
SEVERAL PERSONS: Excellent.

00:16:56.230 --> 00:16:58.300
JONATHAN BERRY: It was a great
talk with Sam Dutton and I

00:16:58.300 --> 00:16:58.940
think some of the product
managers--

00:16:58.940 --> 00:16:59.450
SILVANO LUCIANI: Yes.

00:16:59.450 --> 00:17:01.106
JONATHAN BERRY: --or
the tech leads.

00:17:01.106 --> 00:17:03.830
SILVANO LUCIANI: Yeah, I think
Bid Labash as well was there.

00:17:08.432 --> 00:17:10.020
ALLEN FIRSTENBERG: This
is more of a best

00:17:10.020 --> 00:17:11.839
practices type question.

00:17:11.839 --> 00:17:16.410
Are there any best suggested
ways for dealing with

00:17:16.410 --> 00:17:17.730
maintaining a--

00:17:17.730 --> 00:17:20.609
one of the things I tend to find
a lot, and I'm sure a lot

00:17:20.609 --> 00:17:24.950
of other developers do as well,
is maintaining a list of

00:17:24.950 --> 00:17:27.369
people who are in a
queue for example.

00:17:27.369 --> 00:17:29.720
For a game or whatever.

00:17:29.720 --> 00:17:36.520
And that queue is stored
in the shared state.

00:17:36.520 --> 00:17:37.980
Occasionally a person
will leave.

00:17:37.980 --> 00:17:40.920
Either quit the app or leave
a hangout or whatever.

00:17:40.920 --> 00:17:43.350
The person needs to be removed
from the shared state.

00:17:43.350 --> 00:17:46.910
Is there any best practice about
figuring out who does

00:17:46.910 --> 00:17:48.150
that removal?

00:17:48.150 --> 00:17:51.470
Or should every client try to
remove it at the same time?

00:17:51.470 --> 00:17:55.630
And you get a cascade of people
all submitting the same

00:17:55.630 --> 00:17:57.000
change to the shared state?

00:17:57.000 --> 00:18:00.670
JONATHAN BERRY: I remember when
we first launched, there

00:18:00.670 --> 00:18:04.320
was a dev, I believe his name
was Matt Center, or still is

00:18:04.320 --> 00:18:08.420
Matt Center, and he built a very
simple JavaScript client

00:18:08.420 --> 00:18:13.135
for client side state machines
that integrated with the

00:18:13.135 --> 00:18:15.860
shared state.

00:18:15.860 --> 00:18:18.780
And I think that the short
answer there is the best

00:18:18.780 --> 00:18:20.920
practice is to figure out.

00:18:20.920 --> 00:18:24.680
So for example, if you have
a leader in a game--

00:18:24.680 --> 00:18:28.360
I mean you just have all the
work done but the leader.

00:18:28.360 --> 00:18:30.370
And the leader could just simply
be the first person to

00:18:30.370 --> 00:18:31.080
join the hangout.

00:18:31.080 --> 00:18:34.620
You just sign that as a leader
and that client does all the

00:18:34.620 --> 00:18:37.148
heavy lifting.

00:18:37.148 --> 00:18:39.136
SILVANO LUCIANI: [INAUDIBLE].

00:18:39.136 --> 00:18:40.130
GERWIN STURM: Ya.

00:18:40.130 --> 00:18:42.860
Then you only have a problem if
the current leader leaves

00:18:42.860 --> 00:18:43.290
the hanger.

00:18:43.290 --> 00:18:44.810
Then you have to decide
[INAUDIBLE] the next one

00:18:44.810 --> 00:18:45.430
[INAUDIBLE].

00:18:45.430 --> 00:18:47.790
That's the problem
[INAUDIBLE].

00:18:47.790 --> 00:18:49.550
JONATHAN BERRY: You
want to queue--

00:18:49.550 --> 00:18:51.540
ALLEN FIRSTENBERG: In this
situation, you've got a queue.

00:18:51.540 --> 00:18:54.940
So if the first person in the
queue does all the work and if

00:18:54.940 --> 00:18:57.650
the first person's not the one
who's there, then the second

00:18:57.650 --> 00:18:58.740
person does all the work.

00:18:58.740 --> 00:19:01.620
So in this case, it's
established.

00:19:01.620 --> 00:19:05.410
But it sounds like with the
general case of best

00:19:05.410 --> 00:19:08.930
practices, having one person
submit deltas instead of

00:19:08.930 --> 00:19:10.910
having everybody submit
a delta--

00:19:10.910 --> 00:19:12.015
the same delta--

00:19:12.015 --> 00:19:14.560
is the better solution.

00:19:14.560 --> 00:19:16.050
JONATHAN BERRY: One of the
functionalities I think we

00:19:16.050 --> 00:19:17.080
added in 1.0--

00:19:17.080 --> 00:19:18.600
or just one of the
pieces of data.

00:19:18.600 --> 00:19:21.510
We had participant order ID.

00:19:21.510 --> 00:19:23.430
Order?

00:19:23.430 --> 00:19:25.020
I forgot the exact--

00:19:25.020 --> 00:19:27.410
it's the order that that person
joints the hangout.

00:19:27.410 --> 00:19:29.280
So that's a lightweight way.

00:19:29.280 --> 00:19:30.640
You can use that
for assigning.

00:19:33.800 --> 00:19:34.490
Display Index.

00:19:34.490 --> 00:19:34.900
Display Index.

00:19:34.900 --> 00:19:36.230
That's what it is.

00:19:36.230 --> 00:19:37.190
So I've used--

00:19:37.190 --> 00:19:39.140
EMILY SOLDAL: [INAUDIBLE].

00:19:39.140 --> 00:19:40.020
And why is the light
going [INAUDIBLE]--

00:19:40.020 --> 00:19:41.490
JENNY MURPHY: Sounds good.

00:19:41.490 --> 00:19:44.130
EMILY SOLDAL: It's really light
here, so all the lights

00:19:44.130 --> 00:19:46.566
keep turning off.

00:19:46.566 --> 00:19:47.730
JENNY MURPHY: That happens.

00:19:47.730 --> 00:19:50.130
That whole environmentalism
thing.

00:19:50.130 --> 00:19:50.580
So great.

00:19:50.580 --> 00:19:51.420
So good to know.

00:19:51.420 --> 00:19:53.160
I'm probably going to pull some
questions in from the

00:19:53.160 --> 00:19:54.940
stream once we come back.

00:19:54.940 --> 00:19:56.800
Once we wrap up that question.

00:19:56.800 --> 00:19:57.760
It's still active.

00:19:57.760 --> 00:19:59.720
I don't think we quite
finished it.

00:19:59.720 --> 00:20:01.300
Sorry?

00:20:01.300 --> 00:20:01.356
Wait.

00:20:01.356 --> 00:20:02.500
We are live again, everyone.

00:20:02.500 --> 00:20:04.900
So hey, everyone
on the stream.

00:20:04.900 --> 00:20:05.980
Thanks for hanging out.

00:20:05.980 --> 00:20:08.880
Sorry, we lost the stream
for a moment.

00:20:08.880 --> 00:20:11.420
And where were we on
that question?

00:20:11.420 --> 00:20:12.670
Would you like to repeat
the question?

00:20:17.154 --> 00:20:19.870
ALLEN FIRSTENBERG: The question
was, I think, under

00:20:19.870 --> 00:20:23.545
what circumstances would
Display Index be No?

00:20:23.545 --> 00:20:24.600
JONATHAN BERRY: Yes.

00:20:24.600 --> 00:20:26.730
Well, we started with
best practices

00:20:26.730 --> 00:20:28.550
for managing a queue.

00:20:28.550 --> 00:20:34.293
And basically, if you have one
operation that we really only

00:20:34.293 --> 00:20:37.410
need to do once, how do you
manage [INAUDIBLE] everybody?

00:20:37.410 --> 00:20:41.120
And one suggestion that I gave
was, I use the Display Index.

00:20:41.120 --> 00:20:44.150
Because that is a simple,
lightweight way to pick who's

00:20:44.150 --> 00:20:46.610
the leader and display zero.

00:20:46.610 --> 00:20:47.270
Index equals zero.

00:20:47.270 --> 00:20:51.490
It could be the person
who always acts.

00:20:51.490 --> 00:20:53.660
So Display Index.

00:20:53.660 --> 00:20:56.237
In the documentation, we
state that Display

00:20:56.237 --> 00:20:58.760
Index can be Null.

00:20:58.760 --> 00:21:00.000
That may be related
to the Cameraman.

00:21:00.000 --> 00:21:03.010
And I think we should have
to figure out on our own.

00:21:03.010 --> 00:21:04.750
Do a little experimentation and
we can update that in the

00:21:04.750 --> 00:21:06.675
show notes.

00:21:06.675 --> 00:21:09.015
SILVANO LUCIANI: Yeah.

00:21:09.015 --> 00:21:10.265
JENNY MURPHY: Great.

00:21:12.675 --> 00:21:13.120
Cool.

00:21:13.120 --> 00:21:16.360
So I have one question from
the YouTube comments.

00:21:16.360 --> 00:21:20.220
PlaidGaming is wondering how
they can improve their

00:21:20.220 --> 00:21:22.990
experience with streaming
game feeds.

00:21:22.990 --> 00:21:24.170
I guess into a hangout.

00:21:24.170 --> 00:21:30.280
So specifically, PlaidGaming
asks, is there a way to make

00:21:30.280 --> 00:21:32.430
the content of their streaming
to the hangout full screen?

00:21:37.400 --> 00:21:42.190
JONATHAN BERRY: So, can you make
your streaming content

00:21:42.190 --> 00:21:43.480
full screen?

00:21:43.480 --> 00:21:47.660
So in general, the hangouts can
be, in certain operating

00:21:47.660 --> 00:21:54.200
systems, maximized to the full
frame of the operating system.

00:21:54.200 --> 00:21:57.180
But the core content cannot
be broken out.

00:21:57.180 --> 00:22:00.880
So as you scale out the full
screen, the hangout

00:22:00.880 --> 00:22:04.095
information at the top and the
line controls, they all go to

00:22:04.095 --> 00:22:04.850
the top of the screen.

00:22:04.850 --> 00:22:05.760
And the [INAUDIBLE]

00:22:05.760 --> 00:22:07.710
goes to the bottom
of the screen.

00:22:07.710 --> 00:22:09.700
And the core camera--

00:22:09.700 --> 00:22:10.860
or core frame--

00:22:10.860 --> 00:22:11.690
gets bigger.

00:22:11.690 --> 00:22:14.310
But that can never be
the full screen.

00:22:17.220 --> 00:22:21.270
That's a good use case for
streaming, but it's less

00:22:21.270 --> 00:22:24.180
interesting when you're talking
about hangout in

00:22:24.180 --> 00:22:25.220
conversation.

00:22:25.220 --> 00:22:27.270
But I understand where
you're coming from.

00:22:27.270 --> 00:22:30.086
But unfortunately, you
can't do that today.

00:22:30.086 --> 00:22:31.820
JENNY MURPHY: So great idea.

00:22:31.820 --> 00:22:35.030
So keep those ideas coming.

00:22:35.030 --> 00:22:37.480
So that's it for our questions
from the stream right now.

00:22:37.480 --> 00:22:39.365
So does anyone else in the
hangout have a question they'd

00:22:39.365 --> 00:22:40.615
like to ask?

00:22:43.172 --> 00:22:45.185
EMILY SOLDAL: Yeah, I do
actually have a question.

00:22:48.250 --> 00:22:50.030
Last week we talked about
the History API.

00:22:53.760 --> 00:22:57.520
I sometimes started thinking
about this, and in moments in

00:22:57.520 --> 00:23:00.080
the History APIs, it's pretty
much the smallest iota of

00:23:00.080 --> 00:23:01.802
shareable data.

00:23:01.802 --> 00:23:06.460
And we talked a little
bit about

00:23:06.460 --> 00:23:09.610
collation of these moments.

00:23:09.610 --> 00:23:14.480
One thing I'm curious about is
if there's likely to be any

00:23:14.480 --> 00:23:22.920
way for us to [INAUDIBLE] those
moments as a set of

00:23:22.920 --> 00:23:23.920
things that happened.

00:23:23.920 --> 00:23:27.180
And produce a story
out of them.

00:23:27.180 --> 00:23:31.380
Like will there be some
sort of way to share

00:23:31.380 --> 00:23:33.640
more than one moment?

00:23:33.640 --> 00:23:36.100
As a collection basically.

00:23:36.100 --> 00:23:39.900
Because as it stands right now,
if you generate a moment,

00:23:39.900 --> 00:23:42.140
that moment without
context doesn't

00:23:42.140 --> 00:23:43.390
have that much meaning.

00:23:46.072 --> 00:23:47.100
JENNY MURPHY: Understood.

00:23:47.100 --> 00:23:51.160
So you're asking about from the
Google+ interface, once we

00:23:51.160 --> 00:23:53.790
have all those moments into your
history, what interesting

00:23:53.790 --> 00:23:55.300
things you'll be able
to do with them.

00:23:55.300 --> 00:23:56.450
Is that right?

00:23:56.450 --> 00:23:57.480
EMILY SOLDAL: Yes.

00:23:57.480 --> 00:24:00.120
But not only that.

00:24:00.120 --> 00:24:01.630
You will have to be
able to supply the

00:24:01.630 --> 00:24:04.800
context from the API.

00:24:04.800 --> 00:24:06.280
So--

00:24:06.280 --> 00:24:10.760
correlation and stuff-- if
you'll be able to use groups

00:24:10.760 --> 00:24:14.184
of moments together.

00:24:14.184 --> 00:24:17.365
JENNY MURPHY: So,
programmatically accessing.

00:24:17.365 --> 00:24:19.280
She's asking about problematical
accessing the

00:24:19.280 --> 00:24:21.540
moments that are part
of the history.

00:24:21.540 --> 00:24:24.980
And accessing them
via aggregation?

00:24:24.980 --> 00:24:25.880
This is an interesting
question.

00:24:25.880 --> 00:24:33.270
So we've talked a little bit on
our Past Office Hours about

00:24:33.270 --> 00:24:35.400
getting feedback from all of
you about what we want the

00:24:35.400 --> 00:24:37.750
Google+ interface and
applications to do with

00:24:37.750 --> 00:24:39.190
moments once they're in there.

00:24:39.190 --> 00:24:42.190
And this is a similar kind of
question, except it's about

00:24:42.190 --> 00:24:44.230
programmatic accessing
of that.

00:24:44.230 --> 00:24:46.040
And this is something
we haven't really

00:24:46.040 --> 00:24:47.870
thought a lot about.

00:24:47.870 --> 00:24:50.385
And one of the things in the
Developer Preview that we'd

00:24:50.385 --> 00:24:51.920
like to hear from you.

00:24:51.920 --> 00:24:54.490
So let me flip this
one back at you.

00:24:54.490 --> 00:24:59.020
Assuming you had a Read API or
a List API of some kind, how

00:24:59.020 --> 00:25:01.620
would you want to be able
to access the moments in

00:25:01.620 --> 00:25:03.630
interesting ways?

00:25:03.630 --> 00:25:06.550
As an application developer, how
would you want to be able

00:25:06.550 --> 00:25:10.532
to group a moments and filter
them and that kind of stuff?

00:25:10.532 --> 00:25:13.950
EMILY SOLDAL: Well, if you're
pulling the raw moments from

00:25:13.950 --> 00:25:16.450
the stream, it's going to be
very much like a firehose.

00:25:16.450 --> 00:25:21.370
You're going to get a lot of
microdata that don't really

00:25:21.370 --> 00:25:22.170
relate to each other.

00:25:22.170 --> 00:25:23.720
Because you're going to
get all the things you

00:25:23.720 --> 00:25:25.540
[INAUDIBLE], and all the things
you viewed, and all the

00:25:25.540 --> 00:25:28.690
things you walked past because
you have the app on that

00:25:28.690 --> 00:25:30.530
tracks things that
you walk past.

00:25:30.530 --> 00:25:31.780
I don't know.

00:25:33.460 --> 00:25:34.830
It's going to be too much.

00:25:34.830 --> 00:25:38.270
So being able to sort of provide
some sort of context.

00:25:38.270 --> 00:25:42.000
Say, for example, I want not
just a search in sort

00:25:42.000 --> 00:25:44.600
of time, but also--

00:25:44.600 --> 00:25:46.940
that would be the logical thing
to say, give me the

00:25:46.940 --> 00:25:47.940
first hundred.

00:25:47.940 --> 00:25:51.630
Or give me the ones for the
past week or something.

00:25:51.630 --> 00:25:54.710
But if you want to say, I want
all the moments that have to

00:25:54.710 --> 00:26:00.680
do with when I was in Barcelona,
for example.

00:26:00.680 --> 00:26:02.580
Like all the moments that were
generated under this

00:26:02.580 --> 00:26:05.160
particular umbrella context.

00:26:05.160 --> 00:26:09.910
And then being able to look at
those and say OK, well, I

00:26:09.910 --> 00:26:15.280
generated a context when I went
on holiday, for example.

00:26:15.280 --> 00:26:17.760
And then all the pictures I
took when I was on holiday

00:26:17.760 --> 00:26:19.550
falls underneath this moments.

00:26:19.550 --> 00:26:22.910
All the music I listened to
become the soundtrack for

00:26:22.910 --> 00:26:23.740
these moments.

00:26:23.740 --> 00:26:26.610
So they show up.

00:26:26.610 --> 00:26:30.080
All the places I
checked in at.

00:26:30.080 --> 00:26:31.990
And the places I reviewed,
and the restaurants that

00:26:31.990 --> 00:26:34.210
I ate at, and stuff.

00:26:34.210 --> 00:26:39.370
And how I can go, well, these
are sort of the contextual

00:26:39.370 --> 00:26:41.390
events that happened.

00:26:41.390 --> 00:26:45.340
And then if I could pull out
those as groups of moments,

00:26:45.340 --> 00:26:46.600
you could do some very
interesting things

00:26:46.600 --> 00:26:47.260
with that, I think.

00:26:47.260 --> 00:26:49.695
JENNY MURPHY: It's a
really cool idea.

00:26:49.695 --> 00:26:52.430
GERWIN STURM: So what I've been
thinking in this regard.

00:26:52.430 --> 00:26:55.970
In the API, you already
have this collection.

00:26:55.970 --> 00:26:59.320
Which at the moment, is
only the [INAUDIBLE].

00:26:59.320 --> 00:27:02.770
So maybe if you just opened
this collection, so it can

00:27:02.770 --> 00:27:04.360
create your own collection.

00:27:04.360 --> 00:27:09.290
So you can make one collection
for your vacation.

00:27:09.290 --> 00:27:11.270
And then you set
the [INAUDIBLE]

00:27:11.270 --> 00:27:14.820
standard for the time when
you're on vacation and all the

00:27:14.820 --> 00:27:18.420
moments are written into this
special collection.

00:27:18.420 --> 00:27:21.930
Because you have this kind of
collection thing planned in

00:27:21.930 --> 00:27:25.520
some way, it seems.

00:27:25.520 --> 00:27:25.800
JENNY MURPHY: Hmm.

00:27:25.800 --> 00:27:26.530
That's a cool point.

00:27:26.530 --> 00:27:29.180
I [INAUDIBLE] like that idea
of using collections.

00:27:29.180 --> 00:27:32.180
Although I'm wondering if that
would be a sufficiently rich

00:27:32.180 --> 00:27:33.250
way to describe them.

00:27:33.250 --> 00:27:35.740
Because a collection of moments
has many different

00:27:35.740 --> 00:27:38.140
kind of contexts on
different axes.

00:27:38.140 --> 00:27:39.800
As Emily mentioned,
kind of an event.

00:27:39.800 --> 00:27:43.020
Which has a geographic location
and potentially like

00:27:43.020 --> 00:27:43.830
time boundaries.

00:27:43.830 --> 00:27:45.330
Like a cluster of moments
that occur in a

00:27:45.330 --> 00:27:47.290
certain period of time.

00:27:47.290 --> 00:27:49.170
But they're also going to be
like all the moments it

00:27:49.170 --> 00:27:51.390
occurred when I was in my car,
and all the moments that

00:27:51.390 --> 00:27:53.050
occurred when I was outside.

00:27:53.050 --> 00:27:55.150
So there's a lot of different
axes that you could use to

00:27:55.150 --> 00:27:58.590
slice and see this data
in interesting ways.

00:27:58.590 --> 00:28:02.110
So I guess this is a call to all
you developers out there

00:28:02.110 --> 00:28:03.220
in general.

00:28:03.220 --> 00:28:04.940
This is the kind of
feedback we want.

00:28:04.940 --> 00:28:07.980
Please share it via
any channel.

00:28:07.980 --> 00:28:11.780
Via hangouts like we're doing
right now, in the discussion

00:28:11.780 --> 00:28:14.360
group, in our issue tracker.

00:28:14.360 --> 00:28:16.540
If there are ways that you'd
like to be able to

00:28:16.540 --> 00:28:19.290
programmatically access and
process all those moments in

00:28:19.290 --> 00:28:21.110
your user's history,
please keep that

00:28:21.110 --> 00:28:22.680
feedback coming to us.

00:28:22.680 --> 00:28:25.130
And we will sort it out, and try
and come up with something

00:28:25.130 --> 00:28:26.980
that will be really interesting
to you guys.

00:28:26.980 --> 00:28:28.645
So you guys can write some
really cool applications.

00:28:32.499 --> 00:28:33.749
So, thanks.

00:28:39.040 --> 00:28:41.050
Let's take a look at the
stream right now.

00:28:41.050 --> 00:28:44.520
We have another comment
also from PlaidGaming.

00:28:44.520 --> 00:28:47.440
It's about the same topic of
streaming content, sharing

00:28:47.440 --> 00:28:49.480
content, into a hangout.

00:28:49.480 --> 00:28:56.050
And PlaidGaming asks, is there
any way to make the latency of

00:28:56.050 --> 00:28:59.280
the stream less latent?

00:28:59.280 --> 00:29:00.970
Make it faster.

00:29:00.970 --> 00:29:04.370
JONATHAN BERRY: Ahh, so as
latency of the stream.

00:29:04.370 --> 00:29:05.620
Improve the latency
of the stream.

00:29:09.720 --> 00:29:11.330
I wish there was a little more
specifics around that.

00:29:11.330 --> 00:29:14.070
Because it is a pretty
complex topic.

00:29:14.070 --> 00:29:17.790
Specifically, if he's doing a
screen share for example,

00:29:17.790 --> 00:29:19.770
that's limited at the FPS.

00:29:19.770 --> 00:29:21.660
If you [INAUDIBLE] application,
[INAUDIBLE]

00:29:21.660 --> 00:29:23.590
screen share, [INAUDIBLE]
the stream.

00:29:23.590 --> 00:29:27.410
So that's a functionality of the
screen share capabilities.

00:29:27.410 --> 00:29:31.750
If he is using a webcam, or a
hardware capture card, or a

00:29:31.750 --> 00:29:38.520
software capture card on a
faster machine, then the

00:29:38.520 --> 00:29:41.930
latency of the stream
basically is

00:29:41.930 --> 00:29:43.120
dependent on two things.

00:29:43.120 --> 00:29:47.050
One, the performance of the
machine and by the connection.

00:29:47.050 --> 00:29:51.920
And Hangouts uses a variable
codec that changes

00:29:51.920 --> 00:29:53.680
dynamically--

00:29:53.680 --> 00:29:56.680
compression and a bunch
of other things--

00:29:56.680 --> 00:29:59.270
so that can go up and down.

00:29:59.270 --> 00:30:03.270
If you're on a fast connection
and you have a fast machine,

00:30:03.270 --> 00:30:07.060
and you're using an external
hardware capture card for

00:30:07.060 --> 00:30:10.270
video game console, the stream
should be very good.

00:30:10.270 --> 00:30:13.290
Especially if you're connecting
with local

00:30:13.290 --> 00:30:14.595
participants.

00:30:14.595 --> 00:30:20.230
If you are in a good
time of the day.

00:30:20.230 --> 00:30:22.930
In general, we've seen pretty
good performance on all those

00:30:22.930 --> 00:30:25.040
forms with all those variables
under control.

00:30:25.040 --> 00:30:28.270
Now if there's something
specific you're saying, hey,

00:30:28.270 --> 00:30:30.300
my particular machine is
not performing well.

00:30:30.300 --> 00:30:32.820
Maybe it's a Linux box and you
have an out-of-date plug-in.

00:30:32.820 --> 00:30:35.090
That could be affecting
things.

00:30:35.090 --> 00:30:38.570
Obviously, if you have a slow
Internet connection, you're

00:30:38.570 --> 00:30:42.370
not getting the best performance
on that codec.

00:30:42.370 --> 00:30:46.950
But I can't think of anything in
particular without specific

00:30:46.950 --> 00:30:48.850
issues to troubleshoot.

00:30:48.850 --> 00:30:52.170
ALLEN FIRSTENBERG: Can you
address briefly the

00:30:52.170 --> 00:30:57.882
differences in latency between
Submit Delta and Send Message?

00:30:57.882 --> 00:31:01.244
JONATHAN BERRY: From the
API point of view?

00:31:01.244 --> 00:31:02.560
ALLEN FIRSTENBERG: Yes.

00:31:02.560 --> 00:31:03.960
JONATHAN BERRY: OK, cool.

00:31:03.960 --> 00:31:06.540
So different direction all
together about API versus the

00:31:06.540 --> 00:31:07.610
video stream.

00:31:07.610 --> 00:31:09.740
So Submits Delta.

00:31:09.740 --> 00:31:11.220
So we have the data
[INAUDIBLE]

00:31:11.220 --> 00:31:15.240
APIs, which is composed of two
types of APIs right now.

00:31:15.240 --> 00:31:18.660
One is a Shared State Model
and one is a High Speed

00:31:18.660 --> 00:31:19.910
UDP-like Model.

00:31:21.770 --> 00:31:24.350
In the Shared State, there's
a few things going on.

00:31:24.350 --> 00:31:28.040
One, you're writing a key value
pair to a small shared

00:31:28.040 --> 00:31:33.360
state's memory somewhere
in the cloud.

00:31:33.360 --> 00:31:37.670
And we guarantee delivery of
that key to the cloud.

00:31:37.670 --> 00:31:40.160
And not only that, we guarantee
delivery of events

00:31:40.160 --> 00:31:41.450
that's been changed
to [INAUDIBLE].

00:31:45.540 --> 00:31:48.000
With all those guarantees,
there's a bit of latency

00:31:48.000 --> 00:31:50.370
associated with it, but it's
going over the same channel

00:31:50.370 --> 00:31:53.620
that the video and the Send
Message or high-speed API's

00:31:53.620 --> 00:31:55.360
going over.

00:31:55.360 --> 00:31:58.970
But that's great for in-game
persistence.

00:31:58.970 --> 00:32:05.420
So a counter, a level,
a type of cursor.

00:32:05.420 --> 00:32:07.980
Anything that's lightweight that
you just want to track

00:32:07.980 --> 00:32:09.310
for that game.

00:32:09.310 --> 00:32:11.520
It's fast-ish.

00:32:11.520 --> 00:32:13.950
That's the best way to put it.

00:32:13.950 --> 00:32:20.460
We're seeing around
300 milliseconds.

00:32:20.460 --> 00:32:21.610
But it's not real time.

00:32:21.610 --> 00:32:25.690
It is fast, but it's
not real time.

00:32:25.690 --> 00:32:26.900
That is [INAUDIBLE].

00:32:26.900 --> 00:32:30.870
Now we introduced in, I believe,
1.1, the Send Message

00:32:30.870 --> 00:32:35.610
API, which is as fast as
we can send an API.

00:32:35.610 --> 00:32:37.400
And that is a different
distribution model.

00:32:37.400 --> 00:32:38.610
There is no shared state.

00:32:38.610 --> 00:32:40.510
But what it actually does is
send a message to every

00:32:40.510 --> 00:32:42.210
participate but yourself.

00:32:42.210 --> 00:32:45.650
And we send that out as quickly
as possible to all

00:32:45.650 --> 00:32:46.990
participants.

00:32:46.990 --> 00:32:51.050
Because it's UDP-like,
it is [INAUDIBLE].

00:32:51.050 --> 00:32:54.460
So there's no guarantee
of packets being sent.

00:32:54.460 --> 00:32:56.590
So if you're sending one packet
and you want to make

00:32:56.590 --> 00:32:59.200
sure that's getting there, Send
Message is probably not

00:32:59.200 --> 00:33:01.220
the best medium.

00:33:01.220 --> 00:33:04.230
Most likely what you're going to
do is, actually use Shared

00:33:04.230 --> 00:33:06.850
State and Send Message
in a lot of cases.

00:33:06.850 --> 00:33:09.050
For example, let's say you have
a drawing app, and you

00:33:09.050 --> 00:33:11.510
have this nice curve.

00:33:11.510 --> 00:33:14.520
You're recording the actual
curve maybe as data points in

00:33:14.520 --> 00:33:18.010
the string, and you keep on
pushing up the shared state.

00:33:18.010 --> 00:33:19.730
But because of the delay, you
want to actually have that

00:33:19.730 --> 00:33:24.420
smoother, so you'll combine that
with the Send Message to

00:33:24.420 --> 00:33:27.270
update every participant while
it's being happening.

00:33:27.270 --> 00:33:29.210
And then do a little bit
of data correction--

00:33:29.210 --> 00:33:31.360
which is a common technique
for video games.

00:33:31.360 --> 00:33:34.670
So if you drop a packet and
then the next frame you'll

00:33:34.670 --> 00:33:36.550
update it and smooth that out.

00:33:36.550 --> 00:33:41.110
And it's usually happening
faster than the eye can see.

00:33:41.110 --> 00:33:43.130
Then you get that smooth curve
[INAUDIBLE] synchronized.

00:33:46.230 --> 00:33:50.030
That's sort of the high-end
detail level description of

00:33:50.030 --> 00:33:51.280
Send Message versus
Shared State.

00:33:54.340 --> 00:33:56.160
ALLEN FIRSTENBERG: I think you
said you were getting about

00:33:56.160 --> 00:34:00.740
300 milliseconds with
the Shared State.

00:34:00.740 --> 00:34:03.870
What kind of latency are you
seeing on the Send Message?

00:34:03.870 --> 00:34:05.150
JONATHAN BERRY: They're both
going to be variable.

00:34:05.150 --> 00:34:06.490
I should say that.

00:34:06.490 --> 00:34:10.620
But we usually see a
factor like 2 to 3.

00:34:10.620 --> 00:34:14.969
So a good machine that has good
connections, I've seen on

00:34:14.969 --> 00:34:16.680
average 300 milliseconds for
Shared State and 100

00:34:16.680 --> 00:34:19.719
milliseconds for Send Message.

00:34:19.719 --> 00:34:21.949
And I have seen that
fluctuate.

00:34:21.949 --> 00:34:27.429
So depending on load in the
system, the particular

00:34:27.429 --> 00:34:29.250
[INAUDIBLE] node you're
connecting to, that

00:34:29.250 --> 00:34:30.840
may go up or down.

00:34:30.840 --> 00:34:34.328
But in general, we're getting
pretty consistent marks that

00:34:34.328 --> 00:34:39.120
100-200 on the Send Message,
and 300-500--

00:34:39.120 --> 00:34:40.989
really, really bad--

00:34:40.989 --> 00:34:41.760
on Shared State.

00:34:41.760 --> 00:34:43.797
And I really haven't seen
very much of that.

00:34:43.797 --> 00:34:45.400
Just some minor reports.

00:34:48.370 --> 00:34:49.810
JENNY MURPHY: Great.

00:34:49.810 --> 00:34:53.969
So I see one other comment
from the feed on YouTube.

00:34:53.969 --> 00:34:56.949
William Brian comments in
regards to the previous

00:34:56.949 --> 00:35:00.640
conversation we just had about
being able to read moments in

00:35:00.640 --> 00:35:02.510
interesting ways
programmatically, he describes

00:35:02.510 --> 00:35:04.660
it as a search problem.

00:35:04.660 --> 00:35:07.220
And describes one potential
option as a special collection

00:35:07.220 --> 00:35:09.160
with a start and end date.

00:35:09.160 --> 00:35:12.270
So, yeah, this is definitely
a great option.

00:35:12.270 --> 00:35:13.530
There are a lot of different
ways you could

00:35:13.530 --> 00:35:14.330
slice or dice these.

00:35:14.330 --> 00:35:17.360
So if you think of specifically
applications you

00:35:17.360 --> 00:35:20.140
want to write, and very specific
use cases, those are

00:35:20.140 --> 00:35:21.750
most helpful to us.

00:35:21.750 --> 00:35:23.560
So when you're thinking about
how you'd like to cluster

00:35:23.560 --> 00:35:27.320
those moments, definitely,
please give us--

00:35:27.320 --> 00:35:28.340
use cases help us a lot.

00:35:28.340 --> 00:35:32.141
Figure out how that fits
in the big picture.

00:35:32.141 --> 00:35:33.391
So thanks.

00:35:35.540 --> 00:35:37.720
And poking around the streams,
I don't see many other

00:35:37.720 --> 00:35:38.970
comments right now.

00:35:41.660 --> 00:35:43.870
So are there any other questions
from people who've

00:35:43.870 --> 00:35:45.120
joined us in the hangout?

00:35:48.050 --> 00:35:49.710
Doesn't sound like it.

00:35:49.710 --> 00:35:52.070
So I guess we will
call it a day.

00:35:52.070 --> 00:35:54.410
So thanks, everyone who's
watching on the stream.

00:35:54.410 --> 00:35:57.130
And thanks everyone who joined
from the hangout.

00:35:57.130 --> 00:35:57.690
JONATHAN BERRY: Thanks, guys.

00:35:57.690 --> 00:35:59.710
JENNY MURPHY: So until next
week, see you later.

00:35:59.710 --> 00:36:00.910
Bye.

00:36:00.910 --> 00:36:23.133
[MUSIC PLAYING]

