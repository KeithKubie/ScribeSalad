WEBVTT
Kind: captions
Language: en

00:00:00.060 --> 00:00:02.720
in this video we'll see a more general

00:00:02.720 --> 00:00:02.730
in this video we'll see a more general
 

00:00:02.730 --> 00:00:04.760
in this video we'll see a more general
algorithm for performing inference in

00:00:04.760 --> 00:00:04.770
algorithm for performing inference in
 

00:00:04.770 --> 00:00:07.099
algorithm for performing inference in
general conditional random fields known

00:00:07.099 --> 00:00:07.109
general conditional random fields known
 

00:00:07.109 --> 00:00:11.990
general conditional random fields known
as belief propagation so we've seen in

00:00:11.990 --> 00:00:12.000
as belief propagation so we've seen in
 

00:00:12.000 --> 00:00:13.959
as belief propagation so we've seen in
the previous video that we could

00:00:13.959 --> 00:00:13.969
the previous video that we could
 

00:00:13.969 --> 00:00:17.540
the previous video that we could
visually illustrate a undirected

00:00:17.540 --> 00:00:17.550
visually illustrate a undirected
 

00:00:17.550 --> 00:00:19.160
visually illustrate a undirected
graphical model like a conditional

00:00:19.160 --> 00:00:19.170
graphical model like a conditional
 

00:00:19.170 --> 00:00:21.410
graphical model like a conditional
random field that can be written as a

00:00:21.410 --> 00:00:21.420
random field that can be written as a
 

00:00:21.420 --> 00:00:24.710
random field that can be written as a
product of factors into a factor graph

00:00:24.710 --> 00:00:24.720
product of factors into a factor graph
 

00:00:24.720 --> 00:00:27.170
product of factors into a factor graph
where we have a graph with notes that

00:00:27.170 --> 00:00:27.180
where we have a graph with notes that
 

00:00:27.180 --> 00:00:29.240
where we have a graph with notes that
correspond to random variables and other

00:00:29.240 --> 00:00:29.250
correspond to random variables and other
 

00:00:29.250 --> 00:00:31.070
correspond to random variables and other
nodes that correspond to the different

00:00:31.070 --> 00:00:31.080
nodes that correspond to the different
 

00:00:31.080 --> 00:00:38.180
nodes that correspond to the different
factors in the model one advantage of

00:00:38.180 --> 00:00:38.190
factors in the model one advantage of
 

00:00:38.190 --> 00:00:40.760
factors in the model one advantage of
the factor graph is that it provides a

00:00:40.760 --> 00:00:40.770
the factor graph is that it provides a
 

00:00:40.770 --> 00:00:43.580
the factor graph is that it provides a
good representation for actually

00:00:43.580 --> 00:00:43.590
good representation for actually
 

00:00:43.590 --> 00:00:45.860
good representation for actually
deriving and illustrating the types of

00:00:45.860 --> 00:00:45.870
deriving and illustrating the types of
 

00:00:45.870 --> 00:00:48.740
deriving and illustrating the types of
computations that we must do to perform

00:00:48.740 --> 00:00:48.750
computations that we must do to perform
 

00:00:48.750 --> 00:00:51.260
computations that we must do to perform
inference in a undirected graphical

00:00:51.260 --> 00:00:51.270
inference in a undirected graphical
 

00:00:51.270 --> 00:00:54.139
inference in a undirected graphical
model like a conditional random field in

00:00:54.139 --> 00:00:54.149
model like a conditional random field in
 

00:00:54.149 --> 00:00:56.479
model like a conditional random field in
fact the forward-backward algorithm that

00:00:56.479 --> 00:00:56.489
fact the forward-backward algorithm that
 

00:00:56.489 --> 00:00:59.299
fact the forward-backward algorithm that
we've seen before for computing the

00:00:59.299 --> 00:00:59.309
we've seen before for computing the
 

00:00:59.309 --> 00:01:01.189
we've seen before for computing the
Alpha and Beta tables which are useful

00:01:01.189 --> 00:01:01.199
Alpha and Beta tables which are useful
 

00:01:01.199 --> 00:01:04.100
Alpha and Beta tables which are useful
for necessary to computing marginals in

00:01:04.100 --> 00:01:04.110
for necessary to computing marginals in
 

00:01:04.110 --> 00:01:05.450
for necessary to computing marginals in
the linear chain conditional random

00:01:05.450 --> 00:01:05.460
the linear chain conditional random
 

00:01:05.460 --> 00:01:08.090
the linear chain conditional random
field can be written in the more general

00:01:08.090 --> 00:01:08.100
field can be written in the more general
 

00:01:08.100 --> 00:01:12.550
field can be written in the more general
form where in it's a specific case it

00:01:12.550 --> 00:01:12.560
form where in it's a specific case it
 

00:01:12.560 --> 00:01:14.810
form where in it's a specific case it
boils down to the forward backward

00:01:14.810 --> 00:01:14.820
boils down to the forward backward
 

00:01:14.820 --> 00:01:17.450
boils down to the forward backward
algorithm but for a general conditional

00:01:17.450 --> 00:01:17.460
algorithm but for a general conditional
 

00:01:17.460 --> 00:01:19.460
algorithm but for a general conditional
random field it provides now an

00:01:19.460 --> 00:01:19.470
random field it provides now an
 

00:01:19.470 --> 00:01:21.560
random field it provides now an
algorithm for these more general cases

00:01:21.560 --> 00:01:21.570
algorithm for these more general cases
 

00:01:21.570 --> 00:01:24.679
algorithm for these more general cases
or performing inference specifically

00:01:24.679 --> 00:01:24.689
or performing inference specifically
 

00:01:24.689 --> 00:01:26.539
or performing inference specifically
believe pilot so this algorithm is known

00:01:26.539 --> 00:01:26.549
believe pilot so this algorithm is known
 

00:01:26.549 --> 00:01:29.450
believe pilot so this algorithm is known
as belief propagation it's a message

00:01:29.450 --> 00:01:29.460
as belief propagation it's a message
 

00:01:29.460 --> 00:01:31.850
as belief propagation it's a message
passing algorithm in the sense that now

00:01:31.850 --> 00:01:31.860
passing algorithm in the sense that now
 

00:01:31.860 --> 00:01:35.359
passing algorithm in the sense that now
in the graph each node the nodes are

00:01:35.359 --> 00:01:35.369
in the graph each node the nodes are
 

00:01:35.369 --> 00:01:38.300
in the graph each node the nodes are
going to exchange messages between them

00:01:38.300 --> 00:01:38.310
going to exchange messages between them
 

00:01:38.310 --> 00:01:40.789
going to exchange messages between them
and the messages are going to be

00:01:40.789 --> 00:01:40.799
and the messages are going to be
 

00:01:40.799 --> 00:01:42.980
and the messages are going to be
exchanged normally until convergence

00:01:42.980 --> 00:01:42.990
exchanged normally until convergence
 

00:01:42.990 --> 00:01:45.319
exchanged normally until convergence
that is until the messages that one node

00:01:45.319 --> 00:01:45.329
that is until the messages that one node
 

00:01:45.329 --> 00:01:47.450
that is until the messages that one node
is sending to another node does not

00:01:47.450 --> 00:01:47.460
is sending to another node does not
 

00:01:47.460 --> 00:01:51.260
is sending to another node does not
change and the idea is that the messages

00:01:51.260 --> 00:01:51.270
change and the idea is that the messages
 

00:01:51.270 --> 00:01:53.780
change and the idea is that the messages
that one node is going to send to

00:01:53.780 --> 00:01:53.790
that one node is going to send to
 

00:01:53.790 --> 00:01:55.639
that one node is going to send to
another node is going to be a

00:01:55.639 --> 00:01:55.649
another node is going to be a
 

00:01:55.649 --> 00:01:59.209
another node is going to be a
combination of things that come from the

00:01:59.209 --> 00:01:59.219
combination of things that come from the
 

00:01:59.219 --> 00:02:01.840
combination of things that come from the
factors associated with that node and

00:02:01.840 --> 00:02:01.850
factors associated with that node and
 

00:02:01.850 --> 00:02:04.580
factors associated with that node and
messages that were received from its

00:02:04.580 --> 00:02:04.590
messages that were received from its
 

00:02:04.590 --> 00:02:07.730
messages that were received from its
neighbors so there are actually going to

00:02:07.730 --> 00:02:07.740
neighbors so there are actually going to
 

00:02:07.740 --> 00:02:09.770
neighbors so there are actually going to
be two types of messages much like there

00:02:09.770 --> 00:02:09.780
be two types of messages much like there
 

00:02:09.780 --> 00:02:11.690
be two types of messages much like there
are two types of nodes in the factor

00:02:11.690 --> 00:02:11.700
are two types of nodes in the factor
 

00:02:11.700 --> 00:02:13.100
are two types of nodes in the factor
graph there are going to be two types of

00:02:13.100 --> 00:02:13.110
graph there are going to be two types of
 

00:02:13.110 --> 00:02:14.899
graph there are going to be two types of
messages

00:02:14.899 --> 00:02:14.909
messages
 

00:02:14.909 --> 00:02:17.179
messages
so there are going to be messages from a

00:02:17.179 --> 00:02:17.189
so there are going to be messages from a
 

00:02:17.189 --> 00:02:20.240
so there are going to be messages from a
variable node which are illustrated as a

00:02:20.240 --> 00:02:20.250
variable node which are illustrated as a
 

00:02:20.250 --> 00:02:23.209
variable node which are illustrated as a
circle in the graph to its neighbor

00:02:23.209 --> 00:02:23.219
circle in the graph to its neighbor
 

00:02:23.219 --> 00:02:26.500
circle in the graph to its neighbor
factor nodes which are the squares the

00:02:26.500 --> 00:02:26.510
factor nodes which are the squares the
 

00:02:26.510 --> 00:02:28.729
factor nodes which are the squares the
messages they are going to be defined in

00:02:28.729 --> 00:02:28.739
messages they are going to be defined in
 

00:02:28.739 --> 00:02:31.660
messages they are going to be defined in
a recursive form so the message from a

00:02:31.660 --> 00:02:31.670
a recursive form so the message from a
 

00:02:31.670 --> 00:02:36.289
a recursive form so the message from a
variable node which is illustrated is

00:02:36.289 --> 00:02:36.299
variable node which is illustrated is
 

00:02:36.299 --> 00:02:41.690
variable node which is illustrated is
noted s to a node that is a factor so we

00:02:41.690 --> 00:02:41.700
noted s to a node that is a factor so we
 

00:02:41.700 --> 00:02:44.809
noted s to a node that is a factor so we
use F to illustrate factor nodes so the

00:02:44.809 --> 00:02:44.819
use F to illustrate factor nodes so the
 

00:02:44.819 --> 00:02:48.470
use F to illustrate factor nodes so the
message from s to F when the node s

00:02:48.470 --> 00:02:48.480
message from s to F when the node s
 

00:02:48.480 --> 00:02:51.440
message from s to F when the node s
takes value I is just going to be the

00:02:51.440 --> 00:02:51.450
takes value I is just going to be the
 

00:02:51.450 --> 00:02:55.069
takes value I is just going to be the
product of the messages that all the

00:02:55.069 --> 00:02:55.079
product of the messages that all the
 

00:02:55.079 --> 00:02:57.349
product of the messages that all the
other factors F prime which are

00:02:57.349 --> 00:02:57.359
other factors F prime which are
 

00:02:57.359 --> 00:03:01.190
other factors F prime which are
connected to s and that are not F so the

00:03:01.190 --> 00:03:01.200
connected to s and that are not F so the
 

00:03:01.200 --> 00:03:02.720
connected to s and that are not F so the
node F will not send messages

00:03:02.720 --> 00:03:02.730
node F will not send messages
 

00:03:02.730 --> 00:03:05.089
node F will not send messages
recursively to itself so it's going to

00:03:05.089 --> 00:03:05.099
recursively to itself so it's going to
 

00:03:05.099 --> 00:03:07.039
recursively to itself so it's going to
receive the messages that other factors

00:03:07.039 --> 00:03:07.049
receive the messages that other factors
 

00:03:07.049 --> 00:03:12.339
receive the messages that other factors
F prime have sent to s fourth again the

00:03:12.339 --> 00:03:12.349
F prime have sent to s fourth again the
 

00:03:12.349 --> 00:03:15.500
F prime have sent to s fourth again the
where we assume that the node s is

00:03:15.500 --> 00:03:15.510
where we assume that the node s is
 

00:03:15.510 --> 00:03:18.740
where we assume that the node s is
taking value I so we take all the

00:03:18.740 --> 00:03:18.750
taking value I so we take all the
 

00:03:18.750 --> 00:03:21.559
taking value I so we take all the
messages that have been sent to s and we

00:03:21.559 --> 00:03:21.569
messages that have been sent to s and we
 

00:03:21.569 --> 00:03:23.509
messages that have been sent to s and we
multiply them together and that becomes

00:03:23.509 --> 00:03:23.519
multiply them together and that becomes
 

00:03:23.519 --> 00:03:26.149
multiply them together and that becomes
the message that s is going to send to F

00:03:26.149 --> 00:03:26.159
the message that s is going to send to F
 

00:03:26.159 --> 00:03:28.069
the message that s is going to send to F
and when we take the product of fad of

00:03:28.069 --> 00:03:28.079
and when we take the product of fad of
 

00:03:28.079 --> 00:03:30.830
and when we take the product of fad of
messages we only take the messages from

00:03:30.830 --> 00:03:30.840
messages we only take the messages from
 

00:03:30.840 --> 00:03:34.520
messages we only take the messages from
factors F Prime's which are not F but

00:03:34.520 --> 00:03:34.530
factors F Prime's which are not F but
 

00:03:34.530 --> 00:03:38.000
factors F Prime's which are not F but
our neighbors are connected to s okay so

00:03:38.000 --> 00:03:38.010
our neighbors are connected to s okay so
 

00:03:38.010 --> 00:03:40.280
our neighbors are connected to s okay so
in this illustration here the message

00:03:40.280 --> 00:03:40.290
in this illustration here the message
 

00:03:40.290 --> 00:03:43.909
in this illustration here the message
from s to F is going to be the product

00:03:43.909 --> 00:03:43.919
from s to F is going to be the product
 

00:03:43.919 --> 00:03:45.890
from s to F is going to be the product
of the messages that come from this and

00:03:45.890 --> 00:03:45.900
of the messages that come from this and
 

00:03:45.900 --> 00:03:48.619
of the messages that come from this and
this node this factor node here in this

00:03:48.619 --> 00:03:48.629
this node this factor node here in this
 

00:03:48.629 --> 00:03:50.479
this node this factor node here in this
factor note here so this would be one of

00:03:50.479 --> 00:03:50.489
factor note here so this would be one of
 

00:03:50.489 --> 00:03:52.280
factor note here so this would be one of
the F Prime's and so will be another F

00:03:52.280 --> 00:03:52.290
the F Prime's and so will be another F
 

00:03:52.290 --> 00:03:54.920
the F Prime's and so will be another F
prime and now the message is from a

00:03:54.920 --> 00:03:54.930
prime and now the message is from a
 

00:03:54.930 --> 00:03:57.949
prime and now the message is from a
factor node to a neighbor variable node

00:03:57.949 --> 00:03:57.959
factor node to a neighbor variable node
 

00:03:57.959 --> 00:03:59.599
factor node to a neighbor variable node
it's going to be slightly more

00:03:59.599 --> 00:03:59.609
it's going to be slightly more
 

00:03:59.609 --> 00:04:04.960
it's going to be slightly more
complicated so the message from F to s

00:04:04.960 --> 00:04:04.970
complicated so the message from F to s
 

00:04:04.970 --> 00:04:08.629
complicated so the message from F to s
where s takes is assumed to take value I

00:04:08.629 --> 00:04:08.639
where s takes is assumed to take value I
 

00:04:08.639 --> 00:04:12.199
where s takes is assumed to take value I
so for instance in if s is a label node

00:04:12.199 --> 00:04:12.209
so for instance in if s is a label node
 

00:04:12.209 --> 00:04:14.449
so for instance in if s is a label node
then I would be a potential label for

00:04:14.449 --> 00:04:14.459
then I would be a potential label for
 

00:04:14.459 --> 00:04:18.289
then I would be a potential label for
that that label node is going to be now

00:04:18.289 --> 00:04:18.299
that that label node is going to be now
 

00:04:18.299 --> 00:04:20.960
that that label node is going to be now
not just a product by the sum so we can

00:04:20.960 --> 00:04:20.970
not just a product by the sum so we can
 

00:04:20.970 --> 00:04:25.370
not just a product by the sum so we can
have a sum over the value of all the

00:04:25.370 --> 00:04:25.380
have a sum over the value of all the
 

00:04:25.380 --> 00:04:26.410
have a sum over the value of all the
other variable

00:04:26.410 --> 00:04:26.420
other variable
 

00:04:26.420 --> 00:04:30.850
other variable
that are involved in the factor f the

00:04:30.850 --> 00:04:30.860
that are involved in the factor f the
 

00:04:30.860 --> 00:04:33.400
that are involved in the factor f the
factor that's sending a message but

00:04:33.400 --> 00:04:33.410
factor that's sending a message but
 

00:04:33.410 --> 00:04:37.330
factor that's sending a message but
where in this sum will keep the value of

00:04:37.330 --> 00:04:37.340
where in this sum will keep the value of
 

00:04:37.340 --> 00:04:39.880
where in this sum will keep the value of
the node s2 which we're sending message

00:04:39.880 --> 00:04:39.890
the node s2 which we're sending message
 

00:04:39.890 --> 00:04:42.400
the node s2 which we're sending message
to its value we're assuming which is I

00:04:42.400 --> 00:04:42.410
to its value we're assuming which is I
 

00:04:42.410 --> 00:04:45.400
to its value we're assuming which is I
which is this here so we take the value

00:04:45.400 --> 00:04:45.410
which is this here so we take the value
 

00:04:45.410 --> 00:04:49.330
which is this here so we take the value
of the factor for all vectors Z where

00:04:49.330 --> 00:04:49.340
of the factor for all vectors Z where
 

00:04:49.340 --> 00:04:51.330
of the factor for all vectors Z where
all the values of all the other

00:04:51.330 --> 00:04:51.340
all the values of all the other
 

00:04:51.340 --> 00:04:54.370
all the values of all the other
variables involved in this factor are

00:04:54.370 --> 00:04:54.380
variables involved in this factor are
 

00:04:54.380 --> 00:04:56.230
variables involved in this factor are
being changed to their potential value

00:04:56.230 --> 00:04:56.240
being changed to their potential value
 

00:04:56.240 --> 00:04:58.300
being changed to their potential value
which right of all these values except

00:04:58.300 --> 00:04:58.310
which right of all these values except
 

00:04:58.310 --> 00:05:01.470
which right of all these values except
for the note S which we keep fixed to I

00:05:01.470 --> 00:05:01.480
for the note S which we keep fixed to I
 

00:05:01.480 --> 00:05:03.790
for the note S which we keep fixed to I
and when you take that value we also

00:05:03.790 --> 00:05:03.800
and when you take that value we also
 

00:05:03.800 --> 00:05:08.400
and when you take that value we also
multiply the messages that all the other

00:05:08.400 --> 00:05:08.410
multiply the messages that all the other
 

00:05:08.410 --> 00:05:11.320
multiply the messages that all the other
neighbor nodes and so the neighbor nodes

00:05:11.320 --> 00:05:11.330
neighbor nodes and so the neighbor nodes
 

00:05:11.330 --> 00:05:13.330
neighbor nodes and so the neighbor nodes
here are going to be variable nodes as

00:05:13.330 --> 00:05:13.340
here are going to be variable nodes as
 

00:05:13.340 --> 00:05:16.360
here are going to be variable nodes as
Prime's that are neighbors of F except

00:05:16.360 --> 00:05:16.370
Prime's that are neighbors of F except
 

00:05:16.370 --> 00:05:18.310
Prime's that are neighbors of F except
the node to which we're sending a

00:05:18.310 --> 00:05:18.320
the node to which we're sending a
 

00:05:18.320 --> 00:05:21.310
the node to which we're sending a
message s so we're going to multiply all

00:05:21.310 --> 00:05:21.320
message s so we're going to multiply all
 

00:05:21.320 --> 00:05:24.490
message s so we're going to multiply all
all the messages that these nodes S

00:05:24.490 --> 00:05:24.500
all the messages that these nodes S
 

00:05:24.500 --> 00:05:29.920
all the messages that these nodes S
Prime's have sent to F and where us also

00:05:29.920 --> 00:05:29.930
Prime's have sent to F and where us also
 

00:05:29.930 --> 00:05:33.070
Prime's have sent to F and where us also
take into account in this sum what is

00:05:33.070 --> 00:05:33.080
take into account in this sum what is
 

00:05:33.080 --> 00:05:36.700
take into account in this sum what is
the value that that a node s prime is

00:05:36.700 --> 00:05:36.710
the value that that a node s prime is
 

00:05:36.710 --> 00:05:39.970
the value that that a node s prime is
taking in the variables involved in the

00:05:39.970 --> 00:05:39.980
taking in the variables involved in the
 

00:05:39.980 --> 00:05:45.370
taking in the variables involved in the
factor so visually the message sent from

00:05:45.370 --> 00:05:45.380
factor so visually the message sent from
 

00:05:45.380 --> 00:05:49.720
factor so visually the message sent from
this factor to that variable node is

00:05:49.720 --> 00:05:49.730
this factor to that variable node is
 

00:05:49.730 --> 00:05:52.720
this factor to that variable node is
going to involve the messages that came

00:05:52.720 --> 00:05:52.730
going to involve the messages that came
 

00:05:52.730 --> 00:05:55.630
going to involve the messages that came
from all other variable nodes that are

00:05:55.630 --> 00:05:55.640
from all other variable nodes that are
 

00:05:55.640 --> 00:05:58.780
from all other variable nodes that are
not s and it's going to be the product

00:05:58.780 --> 00:05:58.790
not s and it's going to be the product
 

00:05:58.790 --> 00:06:02.860
not s and it's going to be the product
of these messages but then they're going

00:06:02.860 --> 00:06:02.870
of these messages but then they're going
 

00:06:02.870 --> 00:06:05.020
of these messages but then they're going
to there we're going to get a message

00:06:05.020 --> 00:06:05.030
to there we're going to get a message
 

00:06:05.030 --> 00:06:07.180
to there we're going to get a message
for each potential value that each of

00:06:07.180 --> 00:06:07.190
for each potential value that each of
 

00:06:07.190 --> 00:06:09.160
for each potential value that each of
these variable node can take and they're

00:06:09.160 --> 00:06:09.170
these variable node can take and they're
 

00:06:09.170 --> 00:06:10.480
these variable node can take and they're
going to be combined together and

00:06:10.480 --> 00:06:10.490
going to be combined together and
 

00:06:10.490 --> 00:06:15.010
going to be combined together and
weighted by the factor associated the

00:06:15.010 --> 00:06:15.020
weighted by the factor associated the
 

00:06:15.020 --> 00:06:16.540
weighted by the factor associated the
sort of factor that is sending the

00:06:16.540 --> 00:06:16.550
sort of factor that is sending the
 

00:06:16.550 --> 00:06:18.370
sort of factor that is sending the
message and we're going to sum over all

00:06:18.370 --> 00:06:18.380
message and we're going to sum over all
 

00:06:18.380 --> 00:06:21.160
message and we're going to sum over all
potential values that these this

00:06:21.160 --> 00:06:21.170
potential values that these this
 

00:06:21.170 --> 00:06:22.780
potential values that these this
variable known and this variable node

00:06:22.780 --> 00:06:22.790
variable known and this variable node
 

00:06:22.790 --> 00:06:26.920
variable known and this variable node
could take so to make this more concrete

00:06:26.920 --> 00:06:26.930
could take so to make this more concrete
 

00:06:26.930 --> 00:06:30.520
could take so to make this more concrete
we're going to do the specify specific

00:06:30.520 --> 00:06:30.530
we're going to do the specify specific
 

00:06:30.530 --> 00:06:32.680
we're going to do the specify specific
case of a linear chain CRF and it's

00:06:32.680 --> 00:06:32.690
case of a linear chain CRF and it's
 

00:06:32.690 --> 00:06:34.840
case of a linear chain CRF and it's
going to be simplified so we won't have

00:06:34.840 --> 00:06:34.850
going to be simplified so we won't have
 

00:06:34.850 --> 00:06:38.050
going to be simplified so we won't have
a context window we'll just have y1 be

00:06:38.050 --> 00:06:38.060
a context window we'll just have y1 be
 

00:06:38.060 --> 00:06:39.700
a context window we'll just have y1 be
connected to x1 and y2

00:06:39.700 --> 00:06:39.710
connected to x1 and y2
 

00:06:39.710 --> 00:06:42.910
connected to x1 and y2
only 2 x2 so here we have our equations

00:06:42.910 --> 00:06:42.920
only 2 x2 so here we have our equations
 

00:06:42.920 --> 00:06:46.660
only 2 x2 so here we have our equations
for the messages and now we'll do a few

00:06:46.660 --> 00:06:46.670
for the messages and now we'll do a few
 

00:06:46.670 --> 00:06:49.150
for the messages and now we'll do a few
iterations of the messages when we

00:06:49.150 --> 00:06:49.160
iterations of the messages when we
 

00:06:49.160 --> 00:06:52.450
iterations of the messages when we
compute a few of them and actually we'll

00:06:52.450 --> 00:06:52.460
compute a few of them and actually we'll
 

00:06:52.460 --> 00:06:54.820
compute a few of them and actually we'll
pull in this example only two from left

00:06:54.820 --> 00:06:54.830
pull in this example only two from left
 

00:06:54.830 --> 00:07:00.250
pull in this example only two from left
to right for now so first we initially

00:07:00.250 --> 00:07:00.260
to right for now so first we initially
 

00:07:00.260 --> 00:07:02.500
to right for now so first we initially
we initialize all the messages to 1 so

00:07:02.500 --> 00:07:02.510
we initialize all the messages to 1 so
 

00:07:02.510 --> 00:07:04.360
we initialize all the messages to 1 so
the new message is all going to be set

00:07:04.360 --> 00:07:04.370
the new message is all going to be set
 

00:07:04.370 --> 00:07:05.770
the new message is all going to be set
to 1 initially that's usually the

00:07:05.770 --> 00:07:05.780
to 1 initially that's usually the
 

00:07:05.780 --> 00:07:09.150
to 1 initially that's usually the
starting condition we use now let's

00:07:09.150 --> 00:07:09.160
starting condition we use now let's
 

00:07:09.160 --> 00:07:11.830
starting condition we use now let's
consider the message that is sent from

00:07:11.830 --> 00:07:11.840
consider the message that is sent from
 

00:07:11.840 --> 00:07:16.530
consider the message that is sent from
x1 to this factor so a message from a

00:07:16.530 --> 00:07:16.540
x1 to this factor so a message from a
 

00:07:16.540 --> 00:07:21.100
x1 to this factor so a message from a
variable node to a factor node should be

00:07:21.100 --> 00:07:21.110
variable node to a factor node should be
 

00:07:21.110 --> 00:07:23.610
variable node to a factor node should be
the product of all the messages that the

00:07:23.610 --> 00:07:23.620
the product of all the messages that the
 

00:07:23.620 --> 00:07:26.470
the product of all the messages that the
variable node has received from other

00:07:26.470 --> 00:07:26.480
variable node has received from other
 

00:07:26.480 --> 00:07:30.520
variable node has received from other
factors except F now in this case X here

00:07:30.520 --> 00:07:30.530
factors except F now in this case X here
 

00:07:30.530 --> 00:07:32.170
factors except F now in this case X here
is only involved in one factor so there

00:07:32.170 --> 00:07:32.180
is only involved in one factor so there
 

00:07:32.180 --> 00:07:33.910
is only involved in one factor so there
are no other messages so in this case

00:07:33.910 --> 00:07:33.920
are no other messages so in this case
 

00:07:33.920 --> 00:07:36.880
are no other messages so in this case
we'll the product of nothing we'll set

00:07:36.880 --> 00:07:36.890
we'll the product of nothing we'll set
 

00:07:36.890 --> 00:07:40.810
we'll the product of nothing we'll set
it to 1 by definition next we'll

00:07:40.810 --> 00:07:40.820
it to 1 by definition next we'll
 

00:07:40.820 --> 00:07:42.970
it to 1 by definition next we'll
consider this message here from this

00:07:42.970 --> 00:07:42.980
consider this message here from this
 

00:07:42.980 --> 00:07:47.680
consider this message here from this
this factor to that variable node so if

00:07:47.680 --> 00:07:47.690
this factor to that variable node so if
 

00:07:47.690 --> 00:07:49.870
this factor to that variable node so if
we look at the formula here from a

00:07:49.870 --> 00:07:49.880
we look at the formula here from a
 

00:07:49.880 --> 00:07:54.100
we look at the formula here from a
factor to a variable node what we have

00:07:54.100 --> 00:07:54.110
factor to a variable node what we have
 

00:07:54.110 --> 00:07:57.340
factor to a variable node what we have
to do is that we have to sum so ok so

00:07:57.340 --> 00:07:57.350
to do is that we have to sum so ok so
 

00:07:57.350 --> 00:08:03.190
to do is that we have to sum so ok so
this factor involves y1 and x1 and then

00:08:03.190 --> 00:08:03.200
this factor involves y1 and x1 and then
 

00:08:03.200 --> 00:08:05.170
this factor involves y1 and x1 and then
while what we have to do is to sum over

00:08:05.170 --> 00:08:05.180
while what we have to do is to sum over
 

00:08:05.180 --> 00:08:09.460
while what we have to do is to sum over
all values involved in the factor that

00:08:09.460 --> 00:08:09.470
all values involved in the factor that
 

00:08:09.470 --> 00:08:13.690
all values involved in the factor that
is x1 and y1 except that we keep the

00:08:13.690 --> 00:08:13.700
is x1 and y1 except that we keep the
 

00:08:13.700 --> 00:08:17.140
is x1 and y1 except that we keep the
value of the node to which we're sending

00:08:17.140 --> 00:08:17.150
value of the node to which we're sending
 

00:08:17.150 --> 00:08:20.080
value of the node to which we're sending
the message so that's s2 it's specified

00:08:20.080 --> 00:08:20.090
the message so that's s2 it's specified
 

00:08:20.090 --> 00:08:22.720
the message so that's s2 it's specified
value in the message so that's I here

00:08:22.720 --> 00:08:22.730
value in the message so that's I here
 

00:08:22.730 --> 00:08:25.600
value in the message so that's I here
and also we only sum over the variable Z

00:08:25.600 --> 00:08:25.610
and also we only sum over the variable Z
 

00:08:25.610 --> 00:08:29.170
and also we only sum over the variable Z
that are unobserved so in this case X 1

00:08:29.170 --> 00:08:29.180
that are unobserved so in this case X 1
 

00:08:29.180 --> 00:08:31.150
that are unobserved so in this case X 1
is given so we keep it fixed also to its

00:08:31.150 --> 00:08:31.160
is given so we keep it fixed also to its
 

00:08:31.160 --> 00:08:34.500
is given so we keep it fixed also to its
given value so in fact in this case we

00:08:34.500 --> 00:08:34.510
given value so in fact in this case we
 

00:08:34.510 --> 00:08:37.240
given value so in fact in this case we
have only one term in the sum and that's

00:08:37.240 --> 00:08:37.250
have only one term in the sum and that's
 

00:08:37.250 --> 00:08:40.570
have only one term in the sum and that's
the term where x1 takes the specified

00:08:40.570 --> 00:08:40.580
the term where x1 takes the specified
 

00:08:40.580 --> 00:08:47.550
the term where x1 takes the specified
value and y1 takes also it's the value I

00:08:47.550 --> 00:08:47.560
 

00:08:47.560 --> 00:08:51.160
so removing the Inc the message being

00:08:51.160 --> 00:08:51.170
so removing the Inc the message being
 

00:08:51.170 --> 00:08:53.710
so removing the Inc the message being
sent to y1

00:08:53.710 --> 00:08:53.720
sent to y1
 

00:08:53.720 --> 00:08:56.439
sent to y1
from this factor is going to be the

00:08:56.439 --> 00:08:56.449
from this factor is going to be the
 

00:08:56.449 --> 00:09:00.340
from this factor is going to be the
value of the factor for x1 and some

00:09:00.340 --> 00:09:00.350
value of the factor for x1 and some
 

00:09:00.350 --> 00:09:03.069
value of the factor for x1 and some
given while you value of y1 being equal

00:09:03.069 --> 00:09:03.079
given while you value of y1 being equal
 

00:09:03.079 --> 00:09:06.730
given while you value of y1 being equal
to I so that's this term times the

00:09:06.730 --> 00:09:06.740
to I so that's this term times the
 

00:09:06.740 --> 00:09:09.340
to I so that's this term times the
message that was received by this factor

00:09:09.340 --> 00:09:09.350
message that was received by this factor
 

00:09:09.350 --> 00:09:13.240
message that was received by this factor
from other value variable nodes than y1

00:09:13.240 --> 00:09:13.250
from other value variable nodes than y1
 

00:09:13.250 --> 00:09:15.400
from other value variable nodes than y1
so the only other message is this

00:09:15.400 --> 00:09:15.410
so the only other message is this
 

00:09:15.410 --> 00:09:17.710
so the only other message is this
message here which is 1 so 1 times that

00:09:17.710 --> 00:09:17.720
message here which is 1 so 1 times that
 

00:09:17.720 --> 00:09:21.119
message here which is 1 so 1 times that
because this will be the expression of

00:09:21.119 --> 00:09:21.129
because this will be the expression of
 

00:09:21.129 --> 00:09:24.519
because this will be the expression of
the message and notice that when I say

00:09:24.519 --> 00:09:24.529
the message and notice that when I say
 

00:09:24.529 --> 00:09:27.759
the message and notice that when I say
that I say for a given value I for the

00:09:27.759 --> 00:09:27.769
that I say for a given value I for the
 

00:09:27.769 --> 00:09:30.340
that I say for a given value I for the
variable node it means that I need to

00:09:30.340 --> 00:09:30.350
variable node it means that I need to
 

00:09:30.350 --> 00:09:33.639
variable node it means that I need to
send what this message is for all values

00:09:33.639 --> 00:09:33.649
send what this message is for all values
 

00:09:33.649 --> 00:09:38.230
send what this message is for all values
I of the variable node in question so in

00:09:38.230 --> 00:09:38.240
I of the variable node in question so in
 

00:09:38.240 --> 00:09:40.710
I of the variable node in question so in
this case when I'm sending a message to

00:09:40.710 --> 00:09:40.720
this case when I'm sending a message to
 

00:09:40.720 --> 00:09:45.610
this case when I'm sending a message to
y1 it can take as many values as the

00:09:45.610 --> 00:09:45.620
y1 it can take as many values as the
 

00:09:45.620 --> 00:09:48.069
y1 it can take as many values as the
number of classes from 1 to see so we

00:09:48.069 --> 00:09:48.079
number of classes from 1 to see so we
 

00:09:48.079 --> 00:09:50.550
number of classes from 1 to see so we
need to compute this expression for I

00:09:50.550 --> 00:09:50.560
need to compute this expression for I
 

00:09:50.560 --> 00:09:55.150
need to compute this expression for I
being 1 2 3 up to capital C so when I'm

00:09:55.150 --> 00:09:55.160
being 1 2 3 up to capital C so when I'm
 

00:09:55.160 --> 00:09:59.410
being 1 2 3 up to capital C so when I'm
sending this I'm can I can think of it

00:09:59.410 --> 00:09:59.420
sending this I'm can I can think of it
 

00:09:59.420 --> 00:10:01.629
sending this I'm can I can think of it
as sending a vector actually where each

00:10:01.629 --> 00:10:01.639
as sending a vector actually where each
 

00:10:01.639 --> 00:10:03.910
as sending a vector actually where each
element of the vector is a different

00:10:03.910 --> 00:10:03.920
element of the vector is a different
 

00:10:03.920 --> 00:10:05.319
element of the vector is a different
value of the message for different

00:10:05.319 --> 00:10:05.329
value of the message for different
 

00:10:05.329 --> 00:10:08.019
value of the message for different
values of I and so I could just take the

00:10:08.019 --> 00:10:08.029
values of I and so I could just take the
 

00:10:08.029 --> 00:10:12.610
values of I and so I could just take the
exponential of the log unary factor for

00:10:12.610 --> 00:10:12.620
exponential of the log unary factor for
 

00:10:12.620 --> 00:10:15.249
exponential of the log unary factor for
all value possible values for I 1 and

00:10:15.249 --> 00:10:15.259
all value possible values for I 1 and
 

00:10:15.259 --> 00:10:19.360
all value possible values for I 1 and
send that as the message of this factor

00:10:19.360 --> 00:10:19.370
send that as the message of this factor
 

00:10:19.370 --> 00:10:25.900
send that as the message of this factor
to the variable node y1 then we have to

00:10:25.900 --> 00:10:25.910
to the variable node y1 then we have to
 

00:10:25.910 --> 00:10:28.509
to the variable node y1 then we have to
send message from y1 to this factor so I

00:10:28.509 --> 00:10:28.519
send message from y1 to this factor so I
 

00:10:28.519 --> 00:10:31.809
send message from y1 to this factor so I
have a message from a variable node to a

00:10:31.809 --> 00:10:31.819
have a message from a variable node to a
 

00:10:31.819 --> 00:10:35.170
have a message from a variable node to a
factor node assuming that our variable

00:10:35.170 --> 00:10:35.180
factor node assuming that our variable
 

00:10:35.180 --> 00:10:38.650
factor node assuming that our variable
takes some given value I and that needs

00:10:38.650 --> 00:10:38.660
takes some given value I and that needs
 

00:10:38.660 --> 00:10:40.990
takes some given value I and that needs
to be the product of all messages that

00:10:40.990 --> 00:10:41.000
to be the product of all messages that
 

00:10:41.000 --> 00:10:45.879
to be the product of all messages that
were sent to the factor 2 the factor

00:10:45.879 --> 00:10:45.889
were sent to the factor 2 the factor
 

00:10:45.889 --> 00:10:50.470
were sent to the factor 2 the factor
sorry - the variable node F except s

00:10:50.470 --> 00:10:50.480
sorry - the variable node F except s
 

00:10:50.480 --> 00:10:55.869
sorry - the variable node F except s
sorry except F so in this case the other

00:10:55.869 --> 00:10:55.879
sorry except F so in this case the other
 

00:10:55.879 --> 00:10:57.129
sorry except F so in this case the other
message that could have come in from

00:10:57.129 --> 00:10:57.139
message that could have come in from
 

00:10:57.139 --> 00:10:59.619
message that could have come in from
other factors would be this message so

00:10:59.619 --> 00:10:59.629
other factors would be this message so
 

00:10:59.629 --> 00:11:02.799
other factors would be this message so
we'll have the product of just this it's

00:11:02.799 --> 00:11:02.809
we'll have the product of just this it's
 

00:11:02.809 --> 00:11:05.079
we'll have the product of just this it's
the only other factor message that this

00:11:05.079 --> 00:11:05.089
the only other factor message that this
 

00:11:05.089 --> 00:11:06.830
the only other factor message that this
is receiving except from

00:11:06.830 --> 00:11:06.840
is receiving except from
 

00:11:06.840 --> 00:11:09.320
is receiving except from
message from this guy this factor note

00:11:09.320 --> 00:11:09.330
message from this guy this factor note
 

00:11:09.330 --> 00:11:14.540
message from this guy this factor note
so the message sent by I y1 to this

00:11:14.540 --> 00:11:14.550
so the message sent by I y1 to this
 

00:11:14.550 --> 00:11:16.430
so the message sent by I y1 to this
factor would just be the exponential of

00:11:16.430 --> 00:11:16.440
factor would just be the exponential of
 

00:11:16.440 --> 00:11:19.580
factor would just be the exponential of
the unary factor for the value of y1

00:11:19.580 --> 00:11:19.590
the unary factor for the value of y1
 

00:11:19.590 --> 00:11:22.190
the unary factor for the value of y1
which would be I so we have the vector

00:11:22.190 --> 00:11:22.200
which would be I so we have the vector
 

00:11:22.200 --> 00:11:25.670
which would be I so we have the vector
of exponential of au 1 exponential au 2

00:11:25.670 --> 00:11:25.680
of exponential of au 1 exponential au 2
 

00:11:25.680 --> 00:11:27.860
of exponential of au 1 exponential au 2
and so on this vector would be sent to

00:11:27.860 --> 00:11:27.870
and so on this vector would be sent to
 

00:11:27.870 --> 00:11:32.990
and so on this vector would be sent to
that back factor next we have the

00:11:32.990 --> 00:11:33.000
that back factor next we have the
 

00:11:33.000 --> 00:11:36.350
that back factor next we have the
message from this factor no to that

00:11:36.350 --> 00:11:36.360
message from this factor no to that
 

00:11:36.360 --> 00:11:39.800
message from this factor no to that
variable node so that's this role here

00:11:39.800 --> 00:11:39.810
variable node so that's this role here
 

00:11:39.810 --> 00:11:45.440
variable node so that's this role here
now we have to sum over all the values

00:11:45.440 --> 00:11:45.450
now we have to sum over all the values
 

00:11:45.450 --> 00:11:47.090
now we have to sum over all the values
of the random variables involved in the

00:11:47.090 --> 00:11:47.100
of the random variables involved in the
 

00:11:47.100 --> 00:11:50.300
of the random variables involved in the
factor f so it's this factor so the

00:11:50.300 --> 00:11:50.310
factor f so it's this factor so the
 

00:11:50.310 --> 00:11:53.540
factor f so it's this factor so the
variables are y 1 and y 2 but we have to

00:11:53.540 --> 00:11:53.550
variables are y 1 and y 2 but we have to
 

00:11:53.550 --> 00:11:57.800
variables are y 1 and y 2 but we have to
keep Z s to its value I so in other

00:11:57.800 --> 00:11:57.810
keep Z s to its value I so in other
 

00:11:57.810 --> 00:11:59.330
keep Z s to its value I so in other
words we have to send the messages for

00:11:59.330 --> 00:11:59.340
words we have to send the messages for
 

00:11:59.340 --> 00:12:01.790
words we have to send the messages for
each value of I where we do the sum and

00:12:01.790 --> 00:12:01.800
each value of I where we do the sum and
 

00:12:01.800 --> 00:12:04.400
each value of I where we do the sum and
we take the variable to which we're

00:12:04.400 --> 00:12:04.410
we take the variable to which we're
 

00:12:04.410 --> 00:12:05.930
we take the variable to which we're
sending a message and we're keeping it

00:12:05.930 --> 00:12:05.940
sending a message and we're keeping it
 

00:12:05.940 --> 00:12:08.870
sending a message and we're keeping it
to that specified value I and otherwise

00:12:08.870 --> 00:12:08.880
to that specified value I and otherwise
 

00:12:08.880 --> 00:12:10.490
to that specified value I and otherwise
for the other variables we sum over

00:12:10.490 --> 00:12:10.500
for the other variables we sum over
 

00:12:10.500 --> 00:12:12.200
for the other variables we sum over
their values so in this case we're

00:12:12.200 --> 00:12:12.210
their values so in this case we're
 

00:12:12.210 --> 00:12:13.970
their values so in this case we're
sending to Y 2 so we're going to sum

00:12:13.970 --> 00:12:13.980
sending to Y 2 so we're going to sum
 

00:12:13.980 --> 00:12:16.610
sending to Y 2 so we're going to sum
over the value of y 1 so we have the sum

00:12:16.610 --> 00:12:16.620
over the value of y 1 so we have the sum
 

00:12:16.620 --> 00:12:21.080
over the value of y 1 so we have the sum
over Y 1 of this factor so the factor

00:12:21.080 --> 00:12:21.090
over Y 1 of this factor so the factor
 

00:12:21.090 --> 00:12:22.820
over Y 1 of this factor so the factor
here which is the pairwise factor so

00:12:22.820 --> 00:12:22.830
here which is the pairwise factor so
 

00:12:22.830 --> 00:12:24.680
here which is the pairwise factor so
it's the exponential of the pairwise

00:12:24.680 --> 00:12:24.690
it's the exponential of the pairwise
 

00:12:24.690 --> 00:12:28.910
it's the exponential of the pairwise
factor here times all the messages that

00:12:28.910 --> 00:12:28.920
factor here times all the messages that
 

00:12:28.920 --> 00:12:31.730
factor here times all the messages that
comes from other variable nodes as prime

00:12:31.730 --> 00:12:31.740
comes from other variable nodes as prime
 

00:12:31.740 --> 00:12:34.070
comes from other variable nodes as prime
that are not s in other words sent to F

00:12:34.070 --> 00:12:34.080
that are not s in other words sent to F
 

00:12:34.080 --> 00:12:38.870
that are not s in other words sent to F
so essentially this message here so that

00:12:38.870 --> 00:12:38.880
so essentially this message here so that
 

00:12:38.880 --> 00:12:40.610
so essentially this message here so that
message here so I have the exponential

00:12:40.610 --> 00:12:40.620
message here so I have the exponential
 

00:12:40.620 --> 00:12:44.840
message here so I have the exponential
of au y 1 times the exponential of AP y1

00:12:44.840 --> 00:12:44.850
of au y 1 times the exponential of AP y1
 

00:12:44.850 --> 00:12:46.730
of au y 1 times the exponential of AP y1
y2 so that's equivalent to the

00:12:46.730 --> 00:12:46.740
y2 so that's equivalent to the
 

00:12:46.740 --> 00:12:50.450
y2 so that's equivalent to the
exponential of a y1 and AP y 1 y 2 and

00:12:50.450 --> 00:12:50.460
exponential of a y1 and AP y 1 y 2 and
 

00:12:50.460 --> 00:12:52.460
exponential of a y1 and AP y 1 y 2 and
then we're summing over the other

00:12:52.460 --> 00:12:52.470
then we're summing over the other
 

00:12:52.470 --> 00:12:55.340
then we're summing over the other
variables that are not y2 so that's in

00:12:55.340 --> 00:12:55.350
variables that are not y2 so that's in
 

00:12:55.350 --> 00:13:01.700
variables that are not y2 so that's in
this case y1 and so that's this message

00:13:01.700 --> 00:13:01.710
this case y1 and so that's this message
 

00:13:01.710 --> 00:13:04.370
this case y1 and so that's this message
that's being sent from that factor to

00:13:04.370 --> 00:13:04.380
that's being sent from that factor to
 

00:13:04.380 --> 00:13:09.350
that's being sent from that factor to
this variable node removes a mink oh and

00:13:09.350 --> 00:13:09.360
this variable node removes a mink oh and
 

00:13:09.360 --> 00:13:12.410
this variable node removes a mink oh and
notice that this is actually the initial

00:13:12.410 --> 00:13:12.420
notice that this is actually the initial
 

00:13:12.420 --> 00:13:15.460
notice that this is actually the initial
value of the first column in the

00:13:15.460 --> 00:13:15.470
value of the first column in the
 

00:13:15.470 --> 00:13:17.960
value of the first column in the
computation of the alpha table in the

00:13:17.960 --> 00:13:17.970
computation of the alpha table in the
 

00:13:17.970 --> 00:13:19.730
computation of the alpha table in the
forward backward outlet so we see we're

00:13:19.730 --> 00:13:19.740
forward backward outlet so we see we're
 

00:13:19.740 --> 00:13:20.550
forward backward outlet so we see we're
starting to recover

00:13:20.550 --> 00:13:20.560
starting to recover
 

00:13:20.560 --> 00:13:23.840
starting to recover
pieces from the forward-backward album

00:13:23.840 --> 00:13:23.850
pieces from the forward-backward album
 

00:13:23.850 --> 00:13:27.750
pieces from the forward-backward album
next we could send the message from here

00:13:27.750 --> 00:13:27.760
next we could send the message from here
 

00:13:27.760 --> 00:13:30.150
next we could send the message from here
to there so with a similar reasoning as

00:13:30.150 --> 00:13:30.160
to there so with a similar reasoning as
 

00:13:30.160 --> 00:13:34.200
to there so with a similar reasoning as
in this case here we get one and with a

00:13:34.200 --> 00:13:34.210
in this case here we get one and with a
 

00:13:34.210 --> 00:13:36.060
in this case here we get one and with a
similar reasoning the message from this

00:13:36.060 --> 00:13:36.070
similar reasoning the message from this
 

00:13:36.070 --> 00:13:39.150
similar reasoning the message from this
factor to this variable node would just

00:13:39.150 --> 00:13:39.160
factor to this variable node would just
 

00:13:39.160 --> 00:13:41.630
factor to this variable node would just
be the exponential of the unary factor

00:13:41.630 --> 00:13:41.640
be the exponential of the unary factor
 

00:13:41.640 --> 00:13:49.140
be the exponential of the unary factor
for the position 2 in the sequence now

00:13:49.140 --> 00:13:49.150
for the position 2 in the sequence now
 

00:13:49.150 --> 00:13:51.810
for the position 2 in the sequence now
the message sends from y2 to this factor

00:13:51.810 --> 00:13:51.820
the message sends from y2 to this factor
 

00:13:51.820 --> 00:13:55.620
the message sends from y2 to this factor
this pairwise factor so we are in this

00:13:55.620 --> 00:13:55.630
this pairwise factor so we are in this
 

00:13:55.630 --> 00:13:59.760
this pairwise factor so we are in this
rule here s to F would be the product of

00:13:59.760 --> 00:13:59.770
rule here s to F would be the product of
 

00:13:59.770 --> 00:14:02.100
rule here s to F would be the product of
all the messages from other factors F

00:14:02.100 --> 00:14:02.110
all the messages from other factors F
 

00:14:02.110 --> 00:14:03.990
all the messages from other factors F
Prime's that are not F and that are

00:14:03.990 --> 00:14:04.000
Prime's that are not F and that are
 

00:14:04.000 --> 00:14:06.300
Prime's that are not F and that are
connected to s so it's the product of

00:14:06.300 --> 00:14:06.310
connected to s so it's the product of
 

00:14:06.310 --> 00:14:10.290
connected to s so it's the product of
that message and that message which is

00:14:10.290 --> 00:14:10.300
that message and that message which is
 

00:14:10.300 --> 00:14:12.390
that message and that message which is
this expression here or equivalently

00:14:12.390 --> 00:14:12.400
this expression here or equivalently
 

00:14:12.400 --> 00:14:15.540
this expression here or equivalently
alpha on y2 we'll use our notation from

00:14:15.540 --> 00:14:15.550
alpha on y2 we'll use our notation from
 

00:14:15.550 --> 00:14:18.360
alpha on y2 we'll use our notation from
the forward backward algorithm which we

00:14:18.360 --> 00:14:18.370
the forward backward algorithm which we
 

00:14:18.370 --> 00:14:20.280
the forward backward algorithm which we
find here it's the product of this time

00:14:20.280 --> 00:14:20.290
find here it's the product of this time
 

00:14:20.290 --> 00:14:25.920
find here it's the product of this time
step and now if we compute the message

00:14:25.920 --> 00:14:25.930
step and now if we compute the message
 

00:14:25.930 --> 00:14:32.520
step and now if we compute the message
to y3 then again what we get is the sum

00:14:32.520 --> 00:14:32.530
to y3 then again what we get is the sum
 

00:14:32.530 --> 00:14:36.120
to y3 then again what we get is the sum
over the other variable that shares the

00:14:36.120 --> 00:14:36.130
over the other variable that shares the
 

00:14:36.130 --> 00:14:39.540
over the other variable that shares the
same factor so that's why two of the

00:14:39.540 --> 00:14:39.550
same factor so that's why two of the
 

00:14:39.550 --> 00:14:43.800
same factor so that's why two of the
pairwise Factor here times all the

00:14:43.800 --> 00:14:43.810
pairwise Factor here times all the
 

00:14:43.810 --> 00:14:47.910
pairwise Factor here times all the
messages that were sent to all the

00:14:47.910 --> 00:14:47.920
messages that were sent to all the
 

00:14:47.920 --> 00:14:51.210
messages that were sent to all the
messages that were sent to F from a

00:14:51.210 --> 00:14:51.220
messages that were sent to F from a
 

00:14:51.220 --> 00:14:52.620
messages that were sent to F from a
variable known as prime which is

00:14:52.620 --> 00:14:52.630
variable known as prime which is
 

00:14:52.630 --> 00:14:56.340
variable known as prime which is
connected to F and which is not s so in

00:14:56.340 --> 00:14:56.350
connected to F and which is not s so in
 

00:14:56.350 --> 00:15:00.060
connected to F and which is not s so in
this case it would be it would be that

00:15:00.060 --> 00:15:00.070
this case it would be it would be that
 

00:15:00.070 --> 00:15:02.940
this case it would be it would be that
message here so we see that we have a

00:15:02.940 --> 00:15:02.950
message here so we see that we have a
 

00:15:02.950 --> 00:15:06.900
message here so we see that we have a
sum over Y to the other variable node of

00:15:06.900 --> 00:15:06.910
sum over Y to the other variable node of
 

00:15:06.910 --> 00:15:12.270
sum over Y to the other variable node of
the exponential of a to y2 which is here

00:15:12.270 --> 00:15:12.280
the exponential of a to y2 which is here
 

00:15:12.280 --> 00:15:16.980
the exponential of a to y2 which is here
times alpha 1 y2 which is here and times

00:15:16.980 --> 00:15:16.990
times alpha 1 y2 which is here and times
 

00:15:16.990 --> 00:15:21.360
times alpha 1 y2 which is here and times
the exponential of the pairwise factor

00:15:21.360 --> 00:15:21.370
the exponential of the pairwise factor
 

00:15:21.370 --> 00:15:22.920
the exponential of the pairwise factor
which we can just put into the same

00:15:22.920 --> 00:15:22.930
which we can just put into the same
 

00:15:22.930 --> 00:15:25.650
which we can just put into the same
exponential here and so this corresponds

00:15:25.650 --> 00:15:25.660
exponential here and so this corresponds
 

00:15:25.660 --> 00:15:28.740
exponential here and so this corresponds
to the pairwise factor in this

00:15:28.740 --> 00:15:28.750
to the pairwise factor in this
 

00:15:28.750 --> 00:15:30.990
to the pairwise factor in this
expression here corresponds to this

00:15:30.990 --> 00:15:31.000
expression here corresponds to this
 

00:15:31.000 --> 00:15:34.439
expression here corresponds to this
factor so if you continue like this

00:15:34.439 --> 00:15:34.449
factor so if you continue like this
 

00:15:34.449 --> 00:15:36.809
factor so if you continue like this
in this sequence in this order of the

00:15:36.809 --> 00:15:36.819
in this sequence in this order of the
 

00:15:36.819 --> 00:15:40.340
in this sequence in this order of the
messages we actually recover all of the

00:15:40.340 --> 00:15:40.350
messages we actually recover all of the
 

00:15:40.350 --> 00:15:43.379
messages we actually recover all of the
equations for the values of the outfit

00:15:43.379 --> 00:15:43.389
equations for the values of the outfit
 

00:15:43.389 --> 00:15:47.939
equations for the values of the outfit
so the column in the alpha tables and so

00:15:47.939 --> 00:15:47.949
so the column in the alpha tables and so
 

00:15:47.949 --> 00:15:50.369
so the column in the alpha tables and so
so this is just you know at the

00:15:50.369 --> 00:15:50.379
so this is just you know at the
 

00:15:50.379 --> 00:15:51.840
so this is just you know at the
beginning of the demonstration that

00:15:51.840 --> 00:15:51.850
beginning of the demonstration that
 

00:15:51.850 --> 00:15:53.699
beginning of the demonstration that
there are equivalent and you know full

00:15:53.699 --> 00:15:53.709
there are equivalent and you know full
 

00:15:53.709 --> 00:15:54.989
there are equivalent and you know full
demonstration will actually show you

00:15:54.989 --> 00:15:54.999
demonstration will actually show you
 

00:15:54.999 --> 00:15:59.369
demonstration will actually show you
that and so will validate that belief

00:15:59.369 --> 00:15:59.379
that and so will validate that belief
 

00:15:59.379 --> 00:16:02.549
that and so will validate that belief
propagation apply from left to right and

00:16:02.549 --> 00:16:02.559
propagation apply from left to right and
 

00:16:02.559 --> 00:16:05.429
propagation apply from left to right and
then right to left actually yields the

00:16:05.429 --> 00:16:05.439
then right to left actually yields the
 

00:16:05.439 --> 00:16:07.530
then right to left actually yields the
computation of all the alpha table and

00:16:07.530 --> 00:16:07.540
computation of all the alpha table and
 

00:16:07.540 --> 00:16:12.619
computation of all the alpha table and
then the computation of the beta table

00:16:12.619 --> 00:16:12.629
 

00:16:12.629 --> 00:16:15.439
so yeah so actually if you look at this

00:16:15.439 --> 00:16:15.449
so yeah so actually if you look at this
 

00:16:15.449 --> 00:16:19.079
so yeah so actually if you look at this
we actually do recover the expression

00:16:19.079 --> 00:16:19.089
we actually do recover the expression
 

00:16:19.089 --> 00:16:21.539
we actually do recover the expression
for the second column of the alpha table

00:16:21.539 --> 00:16:21.549
for the second column of the alpha table
 

00:16:21.549 --> 00:16:24.720
for the second column of the alpha table
and so by proceeding like this we

00:16:24.720 --> 00:16:24.730
and so by proceeding like this we
 

00:16:24.730 --> 00:16:32.669
and so by proceeding like this we
recover all the other table columns so

00:16:32.669 --> 00:16:32.679
recover all the other table columns so
 

00:16:32.679 --> 00:16:35.400
recover all the other table columns so
yeah and for the to sum up for the

00:16:35.400 --> 00:16:35.410
yeah and for the to sum up for the
 

00:16:35.410 --> 00:16:38.159
yeah and for the to sum up for the
linear chain a linear chain graph belief

00:16:38.159 --> 00:16:38.169
linear chain a linear chain graph belief
 

00:16:38.169 --> 00:16:40.079
linear chain a linear chain graph belief
propagation is actually the same as the

00:16:40.079 --> 00:16:40.089
propagation is actually the same as the
 

00:16:40.089 --> 00:16:41.759
propagation is actually the same as the
forward backward algorithm the forward

00:16:41.759 --> 00:16:41.769
forward backward algorithm the forward
 

00:16:41.769 --> 00:16:43.499
forward backward algorithm the forward
pass computes the Alpha table the

00:16:43.499 --> 00:16:43.509
pass computes the Alpha table the
 

00:16:43.509 --> 00:16:47.729
pass computes the Alpha table the
backward pass the better table for the

00:16:47.729 --> 00:16:47.739
backward pass the better table for the
 

00:16:47.739 --> 00:16:49.559
backward pass the better table for the
similar reason for numerical stability

00:16:49.559 --> 00:16:49.569
similar reason for numerical stability
 

00:16:49.569 --> 00:16:52.379
similar reason for numerical stability
we actually usually implement a version

00:16:52.379 --> 00:16:52.389
we actually usually implement a version
 

00:16:52.389 --> 00:16:54.629
we actually usually implement a version
that passes log messages so that's going

00:16:54.629 --> 00:16:54.639
that passes log messages so that's going
 

00:16:54.639 --> 00:16:57.960
that passes log messages so that's going
to be more stable numerically and one

00:16:57.960 --> 00:16:57.970
to be more stable numerically and one
 

00:16:57.970 --> 00:16:59.249
to be more stable numerically and one
advantage of the message passing

00:16:59.249 --> 00:16:59.259
advantage of the message passing
 

00:16:59.259 --> 00:17:01.349
advantage of the message passing
algorithm is that the belief propagation

00:17:01.349 --> 00:17:01.359
algorithm is that the belief propagation
 

00:17:01.359 --> 00:17:03.119
algorithm is that the belief propagation
algorithm is that we can do inference

00:17:03.119 --> 00:17:03.129
algorithm is that we can do inference
 

00:17:03.129 --> 00:17:05.490
algorithm is that we can do inference
now on other types of structure now

00:17:05.490 --> 00:17:05.500
now on other types of structure now
 

00:17:05.500 --> 00:17:08.699
now on other types of structure now
interestingly belief propagation yields

00:17:08.699 --> 00:17:08.709
interestingly belief propagation yields
 

00:17:08.709 --> 00:17:12.389
interestingly belief propagation yields
exact inference if are the structure of

00:17:12.389 --> 00:17:12.399
exact inference if are the structure of
 

00:17:12.399 --> 00:17:15.029
exact inference if are the structure of
our factor graph is a tree an arbitrary

00:17:15.029 --> 00:17:15.039
our factor graph is a tree an arbitrary
 

00:17:15.039 --> 00:17:20.579
our factor graph is a tree an arbitrary
tree actually so if we so we can show

00:17:20.579 --> 00:17:20.589
tree actually so if we so we can show
 

00:17:20.589 --> 00:17:22.439
tree actually so if we so we can show
that belief propagation actually

00:17:22.439 --> 00:17:22.449
that belief propagation actually
 

00:17:22.449 --> 00:17:26.519
that belief propagation actually
eventually converges by computing the if

00:17:26.519 --> 00:17:26.529
eventually converges by computing the if
 

00:17:26.529 --> 00:17:28.649
eventually converges by computing the if
we compute the each of the messages

00:17:28.649 --> 00:17:28.659
we compute the each of the messages
 

00:17:28.659 --> 00:17:31.409
we compute the each of the messages
eventually the messages stop changing

00:17:31.409 --> 00:17:31.419
eventually the messages stop changing
 

00:17:31.419 --> 00:17:35.490
eventually the messages stop changing
and and they actually correspond to what

00:17:35.490 --> 00:17:35.500
and and they actually correspond to what
 

00:17:35.500 --> 00:17:37.620
and and they actually correspond to what
you would like the messages to be so if

00:17:37.620 --> 00:17:37.630
you would like the messages to be so if
 

00:17:37.630 --> 00:17:41.299
you would like the messages to be so if
you log space the locks some of the

00:17:41.299 --> 00:17:41.309
you log space the locks some of the
 

00:17:41.309 --> 00:17:46.860
you log space the locks some of the
factors for all of the variables that's

00:17:46.860 --> 00:17:46.870
factors for all of the variables that's
 

00:17:46.870 --> 00:17:48.460
factors for all of the variables that's
come from

00:17:48.460 --> 00:17:48.470
come from
 

00:17:48.470 --> 00:17:51.760
come from
a given part of the tree and so these

00:17:51.760 --> 00:17:51.770
a given part of the tree and so these
 

00:17:51.770 --> 00:17:54.820
a given part of the tree and so these
log messages can be used then to provide

00:17:54.820 --> 00:17:54.830
log messages can be used then to provide
 

00:17:54.830 --> 00:17:56.500
log messages can be used then to provide
do approximate inference and in

00:17:56.500 --> 00:17:56.510
do approximate inference and in
 

00:17:56.510 --> 00:18:00.789
do approximate inference and in
particular compute marginals the general

00:18:00.789 --> 00:18:00.799
particular compute marginals the general
 

00:18:00.799 --> 00:18:02.500
particular compute marginals the general
algorithm with the same equations can

00:18:02.500 --> 00:18:02.510
algorithm with the same equations can
 

00:18:02.510 --> 00:18:05.260
algorithm with the same equations can
also be applied to a graph which has

00:18:05.260 --> 00:18:05.270
also be applied to a graph which has
 

00:18:05.270 --> 00:18:07.990
also be applied to a graph which has
loops so in this case it would not

00:18:07.990 --> 00:18:08.000
loops so in this case it would not
 

00:18:08.000 --> 00:18:12.159
loops so in this case it would not
correspond to a tree and and then it's

00:18:12.159 --> 00:18:12.169
correspond to a tree and and then it's
 

00:18:12.169 --> 00:18:14.590
correspond to a tree and and then it's
often used in practice to do approximate

00:18:14.590 --> 00:18:14.600
often used in practice to do approximate
 

00:18:14.600 --> 00:18:17.710
often used in practice to do approximate
inference so obtain some approximate

00:18:17.710 --> 00:18:17.720
inference so obtain some approximate
 

00:18:17.720 --> 00:18:20.490
inference so obtain some approximate
estimates of what the marginals could be

00:18:20.490 --> 00:18:20.500
estimates of what the marginals could be
 

00:18:20.500 --> 00:18:23.049
estimates of what the marginals could be
you have to be careful however the

00:18:23.049 --> 00:18:23.059
you have to be careful however the
 

00:18:23.059 --> 00:18:26.409
you have to be careful however the
algorithm could diverge so there are

00:18:26.409 --> 00:18:26.419
algorithm could diverge so there are
 

00:18:26.419 --> 00:18:29.350
algorithm could diverge so there are
certain tricks that are used to make it

00:18:29.350 --> 00:18:29.360
certain tricks that are used to make it
 

00:18:29.360 --> 00:18:33.010
certain tricks that are used to make it
converge so I you know this there's a

00:18:33.010 --> 00:18:33.020
converge so I you know this there's a
 

00:18:33.020 --> 00:18:35.200
converge so I you know this there's a
vast body of literature on message

00:18:35.200 --> 00:18:35.210
vast body of literature on message
 

00:18:35.210 --> 00:18:36.700
vast body of literature on message
passing algorithms and loopy belief

00:18:36.700 --> 00:18:36.710
passing algorithms and loopy belief
 

00:18:36.710 --> 00:18:39.669
passing algorithms and loopy belief
propagation which I won't cover but so

00:18:39.669 --> 00:18:39.679
propagation which I won't cover but so
 

00:18:39.679 --> 00:18:42.039
propagation which I won't cover but so
one trick that is tough time sometimes

00:18:42.039 --> 00:18:42.049
one trick that is tough time sometimes
 

00:18:42.049 --> 00:18:45.070
one trick that is tough time sometimes
uses that instead of updating the

00:18:45.070 --> 00:18:45.080
uses that instead of updating the
 

00:18:45.080 --> 00:18:47.860
uses that instead of updating the
messages by overriding them you instead

00:18:47.860 --> 00:18:47.870
messages by overriding them you instead
 

00:18:47.870 --> 00:18:51.070
messages by overriding them you instead
when you recompute a message at the

00:18:51.070 --> 00:18:51.080
when you recompute a message at the
 

00:18:51.080 --> 00:18:52.930
when you recompute a message at the
second password you computing the same

00:18:52.930 --> 00:18:52.940
second password you computing the same
 

00:18:52.940 --> 00:18:54.760
second password you computing the same
message a second time you actually do

00:18:54.760 --> 00:18:54.770
message a second time you actually do
 

00:18:54.770 --> 00:18:56.350
message a second time you actually do
some sort of weighted average between

00:18:56.350 --> 00:18:56.360
some sort of weighted average between
 

00:18:56.360 --> 00:18:58.360
some sort of weighted average between
the current message and the previous

00:18:58.360 --> 00:18:58.370
the current message and the previous
 

00:18:58.370 --> 00:19:01.980
the current message and the previous
message that's one trick that's used for

00:19:01.980 --> 00:19:01.990
message that's one trick that's used for
 

00:19:01.990 --> 00:19:07.120
message that's one trick that's used for
having a better behaved algorithm so I'm

00:19:07.120 --> 00:19:07.130
having a better behaved algorithm so I'm
 

00:19:07.130 --> 00:19:08.950
having a better behaved algorithm so I'm
not going to the detail in part because

00:19:08.950 --> 00:19:08.960
not going to the detail in part because
 

00:19:08.960 --> 00:19:09.760
not going to the detail in part because
there are actually a lot of

00:19:09.760 --> 00:19:09.770
there are actually a lot of
 

00:19:09.770 --> 00:19:11.409
there are actually a lot of
general-purpose libraries that are

00:19:11.409 --> 00:19:11.419
general-purpose libraries that are
 

00:19:11.419 --> 00:19:13.570
general-purpose libraries that are
publicly available where we just pass

00:19:13.570 --> 00:19:13.580
publicly available where we just pass
 

00:19:13.580 --> 00:19:16.180
publicly available where we just pass
the graph in a certain data structure

00:19:16.180 --> 00:19:16.190
the graph in a certain data structure
 

00:19:16.190 --> 00:19:19.289
the graph in a certain data structure
and then the algorithm will do this

00:19:19.289 --> 00:19:19.299
and then the algorithm will do this
 

00:19:19.299 --> 00:19:21.460
and then the algorithm will do this
message passing to a belief propagation

00:19:21.460 --> 00:19:21.470
message passing to a belief propagation
 

00:19:21.470 --> 00:19:26.169
message passing to a belief propagation
we'll run it over your graph and and

00:19:26.169 --> 00:19:26.179
we'll run it over your graph and and
 

00:19:26.179 --> 00:19:28.120
we'll run it over your graph and and
these are reals quite useful because

00:19:28.120 --> 00:19:28.130
these are reals quite useful because
 

00:19:28.130 --> 00:19:30.039
these are reals quite useful because
then they can be used on arbitrary types

00:19:30.039 --> 00:19:30.049
then they can be used on arbitrary types
 

00:19:30.049 --> 00:19:35.860
then they can be used on arbitrary types
of graphs so it means that now instead

00:19:35.860 --> 00:19:35.870
of graphs so it means that now instead
 

00:19:35.870 --> 00:19:37.960
of graphs so it means that now instead
of constraining ourselves to a linear

00:19:37.960 --> 00:19:37.970
of constraining ourselves to a linear
 

00:19:37.970 --> 00:19:40.230
of constraining ourselves to a linear
chain CRF before doing a sequential

00:19:40.230 --> 00:19:40.240
chain CRF before doing a sequential
 

00:19:40.240 --> 00:19:42.490
chain CRF before doing a sequential
classification we could start

00:19:42.490 --> 00:19:42.500
classification we could start
 

00:19:42.500 --> 00:19:44.919
classification we could start
considering adding lateral connections

00:19:44.919 --> 00:19:44.929
considering adding lateral connections
 

00:19:44.929 --> 00:19:46.960
considering adding lateral connections
between labels that are at two positions

00:19:46.960 --> 00:19:46.970
between labels that are at two positions
 

00:19:46.970 --> 00:19:49.390
between labels that are at two positions
away from each other so I have factors

00:19:49.390 --> 00:19:49.400
away from each other so I have factors
 

00:19:49.400 --> 00:19:54.460
away from each other so I have factors
between YK and YK plus two so even if

00:19:54.460 --> 00:19:54.470
between YK and YK plus two so even if
 

00:19:54.470 --> 00:19:56.770
between YK and YK plus two so even if
this would introduce some loops in the

00:19:56.770 --> 00:19:56.780
this would introduce some loops in the
 

00:19:56.780 --> 00:19:59.080
this would introduce some loops in the
in the model we could still deal with

00:19:59.080 --> 00:19:59.090
in the model we could still deal with
 

00:19:59.090 --> 00:20:01.870
in the model we could still deal with
those we could add all

00:20:01.870 --> 00:20:01.880
those we could add all
 

00:20:01.880 --> 00:20:05.050
those we could add all
so lateral connections for Triplets of

00:20:05.050 --> 00:20:05.060
so lateral connections for Triplets of
 

00:20:05.060 --> 00:20:08.830
so lateral connections for Triplets of
labels as well so really we can just

00:20:08.830 --> 00:20:08.840
labels as well so really we can just
 

00:20:08.840 --> 00:20:10.510
labels as well so really we can just
explore a bunch of different types of

00:20:10.510 --> 00:20:10.520
explore a bunch of different types of
 

00:20:10.520 --> 00:20:14.490
explore a bunch of different types of
graphs by adding factors as we wish and

00:20:14.490 --> 00:20:14.500
graphs by adding factors as we wish and
 

00:20:14.500 --> 00:20:17.860
graphs by adding factors as we wish and
then from these factors we get a factor

00:20:17.860 --> 00:20:17.870
then from these factors we get a factor
 

00:20:17.870 --> 00:20:19.600
then from these factors we get a factor
graph and from the factor graph this

00:20:19.600 --> 00:20:19.610
graph and from the factor graph this
 

00:20:19.610 --> 00:20:22.090
graph and from the factor graph this
would describe the way of passing

00:20:22.090 --> 00:20:22.100
would describe the way of passing
 

00:20:22.100 --> 00:20:24.940
would describe the way of passing
messages between variable notes and fat

00:20:24.940 --> 00:20:24.950
messages between variable notes and fat
 

00:20:24.950 --> 00:20:27.700
messages between variable notes and fat
log n factors and from factors to

00:20:27.700 --> 00:20:27.710
log n factors and from factors to
 

00:20:27.710 --> 00:20:30.310
log n factors and from factors to
variable notes so the idea really is

00:20:30.310 --> 00:20:30.320
variable notes so the idea really is
 

00:20:30.320 --> 00:20:32.890
variable notes so the idea really is
when we do CRF modeling is that you want

00:20:32.890 --> 00:20:32.900
when we do CRF modeling is that you want
 

00:20:32.900 --> 00:20:34.600
when we do CRF modeling is that you want
to add connections between the things

00:20:34.600 --> 00:20:34.610
to add connections between the things
 

00:20:34.610 --> 00:20:37.990
to add connections between the things
that have dependencies are fairly strong

00:20:37.990 --> 00:20:38.000
that have dependencies are fairly strong
 

00:20:38.000 --> 00:20:42.010
that have dependencies are fairly strong
that you want to model directly and in

00:20:42.010 --> 00:20:42.020
that you want to model directly and in
 

00:20:42.020 --> 00:20:44.410
that you want to model directly and in
fact you can have a connectivity that

00:20:44.410 --> 00:20:44.420
fact you can have a connectivity that
 

00:20:44.420 --> 00:20:47.950
fact you can have a connectivity that
varies between examples so if you have

00:20:47.950 --> 00:20:47.960
varies between examples so if you have
 

00:20:47.960 --> 00:20:50.880
varies between examples so if you have
some information that the first between

00:20:50.880 --> 00:20:50.890
some information that the first between
 

00:20:50.890 --> 00:20:53.170
some information that the first between
examples which would tell you that for

00:20:53.170 --> 00:20:53.180
examples which would tell you that for
 

00:20:53.180 --> 00:20:54.940
examples which would tell you that for
one example for instance the first label

00:20:54.940 --> 00:20:54.950
one example for instance the first label
 

00:20:54.950 --> 00:20:57.340
one example for instance the first label
should really be connected to the last

00:20:57.340 --> 00:20:57.350
should really be connected to the last
 

00:20:57.350 --> 00:21:00.250
should really be connected to the last
label for instance but for other maybe

00:21:00.250 --> 00:21:00.260
label for instance but for other maybe
 

00:21:00.260 --> 00:21:02.680
label for instance but for other maybe
for other structures you don't want this

00:21:02.680 --> 00:21:02.690
for other structures you don't want this
 

00:21:02.690 --> 00:21:05.080
for other structures you don't want this
you could actually have a separate

00:21:05.080 --> 00:21:05.090
you could actually have a separate
 

00:21:05.090 --> 00:21:07.300
you could actually have a separate
essentially graph separate factor graph

00:21:07.300 --> 00:21:07.310
essentially graph separate factor graph
 

00:21:07.310 --> 00:21:08.950
essentially graph separate factor graph
for each training example when you're

00:21:08.950 --> 00:21:08.960
for each training example when you're
 

00:21:08.960 --> 00:21:12.190
for each training example when you're
actually and you could actually train

00:21:12.190 --> 00:21:12.200
actually and you could actually train
 

00:21:12.200 --> 00:21:18.190
actually and you could actually train
such a CRF as well so examples of graphs

00:21:18.190 --> 00:21:18.200
such a CRF as well so examples of graphs
 

00:21:18.200 --> 00:21:21.490
such a CRF as well so examples of graphs
that we often see for a computer vision

00:21:21.490 --> 00:21:21.500
that we often see for a computer vision
 

00:21:21.500 --> 00:21:23.500
that we often see for a computer vision
we could have a grid structure so

00:21:23.500 --> 00:21:23.510
we could have a grid structure so
 

00:21:23.510 --> 00:21:25.510
we could have a grid structure so
imagine we were labeling each pixel in

00:21:25.510 --> 00:21:25.520
imagine we were labeling each pixel in
 

00:21:25.520 --> 00:21:29.320
imagine we were labeling each pixel in
image by maybe a segmentation label

00:21:29.320 --> 00:21:29.330
image by maybe a segmentation label
 

00:21:29.330 --> 00:21:31.930
image by maybe a segmentation label
which tells us which maybe separates

00:21:31.930 --> 00:21:31.940
which tells us which maybe separates
 

00:21:31.940 --> 00:21:35.080
which tells us which maybe separates
foreground from background well then we

00:21:35.080 --> 00:21:35.090
foreground from background well then we
 

00:21:35.090 --> 00:21:37.630
foreground from background well then we
if wanted to the labeling to be fairly

00:21:37.630 --> 00:21:37.640
if wanted to the labeling to be fairly
 

00:21:37.640 --> 00:21:39.220
if wanted to the labeling to be fairly
smooth we could have factors between

00:21:39.220 --> 00:21:39.230
smooth we could have factors between
 

00:21:39.230 --> 00:21:44.620
smooth we could have factors between
each pair of pixels like this that are

00:21:44.620 --> 00:21:44.630
each pair of pixels like this that are
 

00:21:44.630 --> 00:21:46.840
each pair of pixels like this that are
adjacent in the grid of pixels so that

00:21:46.840 --> 00:21:46.850
adjacent in the grid of pixels so that
 

00:21:46.850 --> 00:21:51.360
adjacent in the grid of pixels so that
the labeling is somewhat smooth

00:21:51.360 --> 00:21:51.370
the labeling is somewhat smooth
 

00:21:51.370 --> 00:21:54.700
the labeling is somewhat smooth
spatially but really in general we could

00:21:54.700 --> 00:21:54.710
spatially but really in general we could
 

00:21:54.710 --> 00:21:57.760
spatially but really in general we could
have any set of variables connected with

00:21:57.760 --> 00:21:57.770
have any set of variables connected with
 

00:21:57.770 --> 00:22:01.420
have any set of variables connected with
a bunch of different factors in this

00:22:01.420 --> 00:22:01.430
a bunch of different factors in this
 

00:22:01.430 --> 00:22:04.330
a bunch of different factors in this
case only showing pair of factors that

00:22:04.330 --> 00:22:04.340
case only showing pair of factors that
 

00:22:04.340 --> 00:22:06.550
case only showing pair of factors that
are over pairs of variables they but

00:22:06.550 --> 00:22:06.560
are over pairs of variables they but
 

00:22:06.560 --> 00:22:08.710
are over pairs of variables they but
they could be over Triplets or more and

00:22:08.710 --> 00:22:08.720
they could be over Triplets or more and
 

00:22:08.720 --> 00:22:10.840
they could be over Triplets or more and
then the loopy belief propagation

00:22:10.840 --> 00:22:10.850
then the loopy belief propagation
 

00:22:10.850 --> 00:22:13.140
then the loopy belief propagation
algorithm could be applied also on these

00:22:13.140 --> 00:22:13.150
algorithm could be applied also on these
 

00:22:13.150 --> 00:22:15.670
algorithm could be applied also on these
types of graphs

00:22:15.670 --> 00:22:15.680
types of graphs
 

00:22:15.680 --> 00:22:17.650
types of graphs
you have to be careful and doesn't like

00:22:17.650 --> 00:22:17.660
you have to be careful and doesn't like
 

00:22:17.660 --> 00:22:19.390
you have to be careful and doesn't like
I said loopy belief propagation or

00:22:19.390 --> 00:22:19.400
I said loopy belief propagation or
 

00:22:19.400 --> 00:22:21.160
I said loopy belief propagation or
belief propagation on loopy graphs is

00:22:21.160 --> 00:22:21.170
belief propagation on loopy graphs is
 

00:22:21.170 --> 00:22:22.750
belief propagation on loopy graphs is
not this little guarantee to converge

00:22:22.750 --> 00:22:22.760
not this little guarantee to converge
 

00:22:22.760 --> 00:22:24.430
not this little guarantee to converge
unless you're careful that's not

00:22:24.430 --> 00:22:24.440
unless you're careful that's not
 

00:22:24.440 --> 00:22:25.570
unless you're careful that's not
something I'm going to cover but I

00:22:25.570 --> 00:22:25.580
something I'm going to cover but I
 

00:22:25.580 --> 00:22:27.100
something I'm going to cover but I
encourage you to look at the literature

00:22:27.100 --> 00:22:27.110
encourage you to look at the literature
 

00:22:27.110 --> 00:22:29.290
encourage you to look at the literature
if you have you encounter problems where

00:22:29.290 --> 00:22:29.300
if you have you encounter problems where
 

00:22:29.300 --> 00:22:31.360
if you have you encounter problems where
you actually want these more complicated

00:22:31.360 --> 00:22:31.370
you actually want these more complicated
 

00:22:31.370 --> 00:22:39.120
you actually want these more complicated
structure to model your problem and

00:22:39.120 --> 00:22:39.130
structure to model your problem and
 

00:22:39.130 --> 00:22:41.950
structure to model your problem and
finally I just want to show the

00:22:41.950 --> 00:22:41.960
finally I just want to show the
 

00:22:41.960 --> 00:22:43.900
finally I just want to show the
expression for what to do with these

00:22:43.900 --> 00:22:43.910
expression for what to do with these
 

00:22:43.910 --> 00:22:46.150
expression for what to do with these
messages so intuitively these messages

00:22:46.150 --> 00:22:46.160
messages so intuitively these messages
 

00:22:46.160 --> 00:22:50.470
messages so intuitively these messages
correspond to what is the sum of all the

00:22:50.470 --> 00:22:50.480
correspond to what is the sum of all the
 

00:22:50.480 --> 00:22:56.050
correspond to what is the sum of all the
variable nodes that's that's are not the

00:22:56.050 --> 00:22:56.060
variable nodes that's that's are not the
 

00:22:56.060 --> 00:22:57.820
variable nodes that's that's are not the
current variable node that come from a

00:22:57.820 --> 00:22:57.830
current variable node that come from a
 

00:22:57.830 --> 00:23:01.840
current variable node that come from a
certain direction from the graph and so

00:23:01.840 --> 00:23:01.850
certain direction from the graph and so
 

00:23:01.850 --> 00:23:03.400
certain direction from the graph and so
if we wanted to compute the marginal

00:23:03.400 --> 00:23:03.410
if we wanted to compute the marginal
 

00:23:03.410 --> 00:23:05.710
if we wanted to compute the marginal
probability of a label somewhere in the

00:23:05.710 --> 00:23:05.720
probability of a label somewhere in the
 

00:23:05.720 --> 00:23:09.310
probability of a label somewhere in the
graph well to get its approximated

00:23:09.310 --> 00:23:09.320
graph well to get its approximated
 

00:23:09.320 --> 00:23:11.050
graph well to get its approximated
marginal that approximated marginal

00:23:11.050 --> 00:23:11.060
marginal that approximated marginal
 

00:23:11.060 --> 00:23:13.270
marginal that approximated marginal
would just take similarly as we've done

00:23:13.270 --> 00:23:13.280
would just take similarly as we've done
 

00:23:13.280 --> 00:23:15.640
would just take similarly as we've done
before the exponential of the log factor

00:23:15.640 --> 00:23:15.650
before the exponential of the log factor
 

00:23:15.650 --> 00:23:18.670
before the exponential of the log factor
that involves only that variable and

00:23:18.670 --> 00:23:18.680
that involves only that variable and
 

00:23:18.680 --> 00:23:22.510
that involves only that variable and
then plus the messages that come from

00:23:22.510 --> 00:23:22.520
then plus the messages that come from
 

00:23:22.520 --> 00:23:27.960
then plus the messages that come from
all the factors that involve the node YK

00:23:27.960 --> 00:23:27.970
all the factors that involve the node YK
 

00:23:27.970 --> 00:23:32.590
all the factors that involve the node YK
except the factor that's the the factor

00:23:32.590 --> 00:23:32.600
except the factor that's the the factor
 

00:23:32.600 --> 00:23:34.690
except the factor that's the the factor
that only involves YK if you have some

00:23:34.690 --> 00:23:34.700
that only involves YK if you have some
 

00:23:34.700 --> 00:23:38.530
that only involves YK if you have some
and we just sum the log messages from

00:23:38.530 --> 00:23:38.540
and we just sum the log messages from
 

00:23:38.540 --> 00:23:41.110
and we just sum the log messages from
these other factors from other nodes

00:23:41.110 --> 00:23:41.120
these other factors from other nodes
 

00:23:41.120 --> 00:23:43.960
these other factors from other nodes
outside of the in from other sorry for

00:23:43.960 --> 00:23:43.970
outside of the in from other sorry for
 

00:23:43.970 --> 00:23:46.240
outside of the in from other sorry for
other factor nodes that are connected to

00:23:46.240 --> 00:23:46.250
other factor nodes that are connected to
 

00:23:46.250 --> 00:23:48.310
other factor nodes that are connected to
this variable nodes we'd sum all of

00:23:48.310 --> 00:23:48.320
this variable nodes we'd sum all of
 

00:23:48.320 --> 00:23:50.500
this variable nodes we'd sum all of
their log messages and then we just

00:23:50.500 --> 00:23:50.510
their log messages and then we just
 

00:23:50.510 --> 00:23:52.840
their log messages and then we just
normalized the numerator by summing over

00:23:52.840 --> 00:23:52.850
normalized the numerator by summing over
 

00:23:52.850 --> 00:23:55.300
normalized the numerator by summing over
all values that are possible for my

00:23:55.300 --> 00:23:55.310
all values that are possible for my
 

00:23:55.310 --> 00:23:57.790
all values that are possible for my
variable of interests of the numerator

00:23:57.790 --> 00:23:57.800
variable of interests of the numerator
 

00:23:57.800 --> 00:24:01.180
variable of interests of the numerator
so the exponential exponentiate sum of

00:24:01.180 --> 00:24:01.190
so the exponential exponentiate sum of
 

00:24:01.190 --> 00:24:04.450
so the exponential exponentiate sum of
luck factors and log messages so to sum

00:24:04.450 --> 00:24:04.460
luck factors and log messages so to sum
 

00:24:04.460 --> 00:24:06.370
luck factors and log messages so to sum
up approximate inference would

00:24:06.370 --> 00:24:06.380
up approximate inference would
 

00:24:06.380 --> 00:24:08.440
up approximate inference would
correspond to summing over all the log

00:24:08.440 --> 00:24:08.450
correspond to summing over all the log
 

00:24:08.450 --> 00:24:10.840
correspond to summing over all the log
factors that involve only the variable

00:24:10.840 --> 00:24:10.850
factors that involve only the variable
 

00:24:10.850 --> 00:24:14.590
factors that involve only the variable
of interest YK so this is this term here

00:24:14.590 --> 00:24:14.600
of interest YK so this is this term here
 

00:24:14.600 --> 00:24:18.040
of interest YK so this is this term here
in this example I'm showing just one log

00:24:18.040 --> 00:24:18.050
in this example I'm showing just one log
 

00:24:18.050 --> 00:24:19.720
in this example I'm showing just one log
factor but you have you can have more

00:24:19.720 --> 00:24:19.730
factor but you have you can have more
 

00:24:19.730 --> 00:24:22.540
factor but you have you can have more
than one then you sum over all the log

00:24:22.540 --> 00:24:22.550
than one then you sum over all the log
 

00:24:22.550 --> 00:24:25.450
than one then you sum over all the log
messages that come into YK from other

00:24:25.450 --> 00:24:25.460
messages that come into YK from other
 

00:24:25.460 --> 00:24:26.020
messages that come into YK from other
factors

00:24:26.020 --> 00:24:26.030
factors
 

00:24:26.030 --> 00:24:28.810
factors
so it's this sum here then

00:24:28.810 --> 00:24:28.820
so it's this sum here then
 

00:24:28.820 --> 00:24:31.269
so it's this sum here then
and you take the egg spinach the

00:24:31.269 --> 00:24:31.279
and you take the egg spinach the
 

00:24:31.279 --> 00:24:33.759
and you take the egg spinach the
exponential of those sum of log factors

00:24:33.759 --> 00:24:33.769
exponential of those sum of log factors
 

00:24:33.769 --> 00:24:36.940
exponential of those sum of log factors
and log messages and then we normalize

00:24:36.940 --> 00:24:36.950
and log messages and then we normalize
 

00:24:36.950 --> 00:24:39.519
and log messages and then we normalize
by to ensure that we get a valid

00:24:39.519 --> 00:24:39.529
by to ensure that we get a valid
 

00:24:39.529 --> 00:24:42.610
by to ensure that we get a valid
distribution okay so this sums up the

00:24:42.610 --> 00:24:42.620
distribution okay so this sums up the
 

00:24:42.620 --> 00:24:44.980
distribution okay so this sums up the
general belief propagation algorithm for

00:24:44.980 --> 00:24:44.990
general belief propagation algorithm for
 

00:24:44.990 --> 00:24:48.820
general belief propagation algorithm for
general conditional random fields

