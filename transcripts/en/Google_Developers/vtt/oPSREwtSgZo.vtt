WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.310
JOANNA SMITH: Let's
start with Gus.

00:00:01.310 --> 00:00:01.655
GUS CLASS: Yeah.

00:00:01.655 --> 00:00:03.660
So we're going to talk today
about some features of the

00:00:03.660 --> 00:00:05.080
Google+ mobile platform.

00:00:05.080 --> 00:00:09.360
And these are really timely
right now because just last

00:00:09.360 --> 00:00:13.080
week there was the release of
the Google Play services.

00:00:13.080 --> 00:00:16.430
And this lit up these platform
features for

00:00:16.430 --> 00:00:18.280
Google+ within Android.

00:00:18.280 --> 00:00:21.350
And so the three features we're
going to highlight today

00:00:21.350 --> 00:00:28.280
are the +1, and the share, and
then Sign In with Google+.

00:00:28.280 --> 00:00:31.110
So Chirag, do you want to tell
a little bit more on how this

00:00:31.110 --> 00:00:32.540
gets incorporated?

00:00:32.540 --> 00:00:33.460
CHIRAG SHAH: Thank you, Gus.

00:00:33.460 --> 00:00:36.465
So the Google+ Android SDK
actually lives inside Google

00:00:36.465 --> 00:00:37.890
Play services.

00:00:37.890 --> 00:00:40.430
Google Play services is a
platform that lives right next

00:00:40.430 --> 00:00:41.830
to Google Play.

00:00:41.830 --> 00:00:46.040
This means that it is deployed
to all Android devices that

00:00:46.040 --> 00:00:50.292
are Froyo and up and that
contain Google Play on it.

00:00:50.292 --> 00:00:52.450
JOANNA SMITH: Chirag, when you
say is deployed, do you mean

00:00:52.450 --> 00:00:54.700
it's already been deployed,
or it will be?

00:00:54.700 --> 00:00:56.090
CHIRAG SHAH: It has already
been deployed.

00:00:56.090 --> 00:00:57.590
JOANNA SMITH: And users don't
have to do anything to update

00:00:57.590 --> 00:00:58.430
it themselves?

00:00:58.430 --> 00:01:00.230
It's just there and
it's ready to go?

00:01:00.230 --> 00:01:00.940
CHIRAG SHAH: That is correct.

00:01:00.940 --> 00:01:04.010
So you as a developer can assume
that the device already

00:01:04.010 --> 00:01:08.660
has Google Play services on it
if it is Froyo and higher, and

00:01:08.660 --> 00:01:10.930
has Google Play installed.

00:01:10.930 --> 00:01:12.920
JOANNA SMITH: OK.

00:01:12.920 --> 00:01:14.880
CHIRAG SHAH: So what does
this mean for you?

00:01:14.880 --> 00:01:17.790
This means that your APKs are
much smaller when integrating

00:01:17.790 --> 00:01:19.270
with Google+.

00:01:19.270 --> 00:01:23.950
So practically, this means all
of the +1 button assets and

00:01:23.950 --> 00:01:26.320
images live inside Google
Play services.

00:01:26.320 --> 00:01:29.440
And all of the functionality,
regarding +1-ing and signing

00:01:29.440 --> 00:01:32.120
the user in, lives inside
Google Play services.

00:01:32.120 --> 00:01:34.000
And you as a developer just
need to worry about

00:01:34.000 --> 00:01:37.230
integrating the components
into your application.

00:01:39.750 --> 00:01:40.180
GUS CLASS: Awesome.

00:01:40.180 --> 00:01:41.940
So let's talk about share.

00:01:41.940 --> 00:01:44.350
So here's an example
of someone doing a

00:01:44.350 --> 00:01:45.510
share from an app.

00:01:45.510 --> 00:01:48.160
So the first thing that happens
is that they click the

00:01:48.160 --> 00:01:50.120
button that will actually
trigger the share.

00:01:50.120 --> 00:01:52.660
And then they get a form that's
pre-populated with the

00:01:52.660 --> 00:01:55.450
text that will be shared.

00:01:55.450 --> 00:01:57.160
And then they can select the
circles and the people that

00:01:57.160 --> 00:01:58.590
they want to share with.

00:01:58.590 --> 00:02:03.390
And then finally, after they
click Share, then the share

00:02:03.390 --> 00:02:06.660
will happen with the content
that they populated the Share

00:02:06.660 --> 00:02:08.020
interaction with.

00:02:08.020 --> 00:02:12.390
And there will also be an
annotation from the app.

00:02:12.390 --> 00:02:17.670
So Chirag will tell you how
this works out in code.

00:02:17.670 --> 00:02:20.750
CHIRAG SHAH: So basically, the
simplest way you can integrate

00:02:20.750 --> 00:02:23.290
the Share button in your
application is by adding a

00:02:23.290 --> 00:02:23.800
simple button.

00:02:23.800 --> 00:02:27.300
In the example Gus showed you
earlier, we invoke the Share

00:02:27.300 --> 00:02:28.450
through a list item.

00:02:28.450 --> 00:02:31.410
So you can integrate the share
functionality anywhere in your

00:02:31.410 --> 00:02:32.800
application.

00:02:32.800 --> 00:02:35.660
So for this example, we're going
to have a simple button

00:02:35.660 --> 00:02:39.930
incorporated from the Android
SDK, and we're going to have

00:02:39.930 --> 00:02:43.090
simple text saying
Share on Google+.

00:02:43.090 --> 00:02:47.910
Next we're going to find the
simple share button from your

00:02:47.910 --> 00:02:51.910
layout, and set its onClick
handler to invoke the Google+

00:02:51.910 --> 00:02:53.270
Share dialogue.

00:02:53.270 --> 00:02:56.680
So let's deconstruct what's
going on in this sample code.

00:02:56.680 --> 00:03:00.590
First you build a shareIntent
using the shareCompat library.

00:03:00.590 --> 00:03:03.320
This library makes it easier for
you to build shareIntents

00:03:03.320 --> 00:03:07.760
and include rich media for users
to share on Google+.

00:03:07.760 --> 00:03:11.460
Here in this example, I
pass text and a URL

00:03:11.460 --> 00:03:14.150
in the setText method.

00:03:14.150 --> 00:03:18.130
Next, I used the setType method
to identify the type of

00:03:18.130 --> 00:03:21.990
content we're sharing
as text slash plain.

00:03:21.990 --> 00:03:25.480
Finally we call the getIntent
method to get the intent we've

00:03:25.480 --> 00:03:28.510
built with the shareCompat
library.

00:03:28.510 --> 00:03:31.890
And finally, we call the
setPackage method on the

00:03:31.890 --> 00:03:33.620
intent we've obtained.

00:03:33.620 --> 00:03:38.280
And we tell it to specify
the Google+ application.

00:03:38.280 --> 00:03:43.300
And this means that once the
intent is launched, it will

00:03:43.300 --> 00:03:46.150
directly open the Google+
Share dialog.

00:03:46.150 --> 00:03:47.910
JOANNA SMITH: Now Chirag,
forgive me if I'm wrong, but

00:03:47.910 --> 00:03:49.660
Share isn't exactly a
new feature, right?

00:03:49.660 --> 00:03:52.630
That's been around since the
very beginning of G+, right?

00:03:52.630 --> 00:03:53.460
CHIRAG SHAH: Yeah,
that is correct.

00:03:53.460 --> 00:03:56.700
So here we're launching an
attempt to open the Google+

00:03:56.700 --> 00:03:57.850
application.

00:03:57.850 --> 00:04:00.530
And the Google+ application is
responsible for launching the

00:04:00.530 --> 00:04:01.880
Share dialogue.

00:04:01.880 --> 00:04:05.960
And you, as a developer, can
pre-fill the type of text and

00:04:05.960 --> 00:04:09.380
URLs that are pre-populated
in the Share dialogue.

00:04:09.380 --> 00:04:10.990
JOANNA SMITH: OK, so if a
developer has already

00:04:10.990 --> 00:04:13.580
integrated this share experience
into their app, now

00:04:13.580 --> 00:04:15.680
that we've added Google Play
services, will anything be

00:04:15.680 --> 00:04:18.829
affected, or do they need
to make any changes?

00:04:18.829 --> 00:04:19.399
CHIRAG SHAH: That is correct.

00:04:19.399 --> 00:04:21.480
So you won't need to
make any changes.

00:04:21.480 --> 00:04:24.880
So if you want to add Google
Play services, you can get new

00:04:24.880 --> 00:04:27.895
features, such as the +1 button
and Sign In button.

00:04:27.895 --> 00:04:28.111
JOANNA SMITH: OK.

00:04:28.111 --> 00:04:28.330
Good to know.

00:04:28.330 --> 00:04:29.610
Thank you.

00:04:29.610 --> 00:04:30.965
GUS CLASS: Speaking of
new features, here's

00:04:30.965 --> 00:04:33.380
the mobile +1 button.

00:04:33.380 --> 00:04:36.340
Here's an example of the
+1 button in the wild.

00:04:36.340 --> 00:04:39.515
And what you can see in this
example is you can see that

00:04:39.515 --> 00:04:44.350
you and Julia Ferraioli have
+1'd this item inside of the

00:04:44.350 --> 00:04:45.790
Google store.

00:04:45.790 --> 00:04:48.600
And so Chirag will tell you
about how you can incorporate

00:04:48.600 --> 00:04:51.170
this functionality into
your own apps.

00:04:51.170 --> 00:04:54.200
CHIRAG SHAH: So all you need to
do is include the +1 button

00:04:54.200 --> 00:04:55.970
in your Android layout.

00:04:55.970 --> 00:04:59.070
Here the attributes should
look very similar to you

00:04:59.070 --> 00:05:01.320
because it inherits from
a standard button.

00:05:01.320 --> 00:05:03.380
So you can control the
layout width, height.

00:05:03.380 --> 00:05:07.400
But you can also declare the
plus size attribute to declare

00:05:07.400 --> 00:05:08.470
the type of--

00:05:08.470 --> 00:05:11.670
to declare the appearance
of the +1 button.

00:05:11.670 --> 00:05:14.610
And this size attribute is very
similar to what you'll

00:05:14.610 --> 00:05:16.060
see on the web.

00:05:16.060 --> 00:05:20.000
We have the small, standard,
medium, tall.

00:05:20.000 --> 00:05:21.970
Next, you'll initialize
the +1 button in

00:05:21.970 --> 00:05:23.640
your onCreate handler.

00:05:23.640 --> 00:05:26.410
Here, you'll call the initialize
method and pass in

00:05:26.410 --> 00:05:29.980
the URL that should be +1'd.

00:05:29.980 --> 00:05:33.020
JOANNA SMITH: OK, so we have a
button-o-matic, basically,

00:05:33.020 --> 00:05:35.080
that generates all the code
for you for your web.

00:05:35.080 --> 00:05:37.590
Do we have anything similar
for mobile?

00:05:37.590 --> 00:05:39.420
CHIRAG SHAH: So we don't
have a o-matic, per

00:05:39.420 --> 00:05:42.480
se, for the +1 button--

00:05:42.480 --> 00:05:44.930
for the native +1 button
on Android.

00:05:44.930 --> 00:05:48.950
But the appearance demonstrated
through the

00:05:48.950 --> 00:05:52.300
+1-o-matic is very similar to
the appearance of the +1

00:05:52.300 --> 00:05:54.440
button on Android.

00:05:54.440 --> 00:05:58.250
For instance, the tall size will
be very similar on native

00:05:58.250 --> 00:06:00.090
versus the web.

00:06:00.090 --> 00:06:00.410
JOANNA SMITH: OK, so--

00:06:00.410 --> 00:06:01.250
CHIRAG SHAH: That's
a great question.

00:06:01.250 --> 00:06:02.680
JOANNA SMITH: OK, so I don't
have to go film any new

00:06:02.680 --> 00:06:03.760
videos, right?

00:06:03.760 --> 00:06:05.410
We're good on that front?

00:06:05.410 --> 00:06:07.360
Good to know, good to know.

00:06:07.360 --> 00:06:08.270
GUS CLASS: OK, so
let's look at an

00:06:08.270 --> 00:06:11.190
implementation of the activity.

00:06:11.190 --> 00:06:13.920
So this is actually a
full implementation.

00:06:13.920 --> 00:06:16.310
Chirag will actually break
it down into the

00:06:16.310 --> 00:06:18.100
important parts for you.

00:06:18.100 --> 00:06:20.180
CHIRAG SHAH: So Gus showed you
what your activity will look

00:06:20.180 --> 00:06:22.970
like once you integrate
the full--

00:06:22.970 --> 00:06:24.410
you fully integrate
the +1 button.

00:06:24.410 --> 00:06:26.620
But let's deconstruct what's
going on there.

00:06:26.620 --> 00:06:30.190
So in your onCreate handler--

00:06:30.190 --> 00:06:34.420
you will first initialize the
PlusClient object and

00:06:34.420 --> 00:06:36.040
initialize the +1 button.

00:06:36.040 --> 00:06:39.050
And as you can see when we're
+1'ing, or when we're

00:06:39.050 --> 00:06:41.890
initializing a +1 button, we'll
pass in the URL that

00:06:41.890 --> 00:06:44.810
should be +1'd.

00:06:44.810 --> 00:06:47.720
Next we'll integrate the
PlusClient object in the life

00:06:47.720 --> 00:06:50.190
cycle of your Android
activity.

00:06:50.190 --> 00:06:52.600
So in your onStart handler,
you'll call

00:06:52.600 --> 00:06:54.420
PlusClient.connect.

00:06:54.420 --> 00:06:56.950
This will start to establish a
connection between your third

00:06:56.950 --> 00:06:59.820
party application and Google
Play services.

00:06:59.820 --> 00:07:05.430
So your third party application
can start to

00:07:05.430 --> 00:07:08.640
connect to the resources in
Google Play services, and get

00:07:08.640 --> 00:07:11.900
the assets for the correct size
of the +1 button you've

00:07:11.900 --> 00:07:12.620
integrated.

00:07:12.620 --> 00:07:15.560
But also control the
functionality of the +1 button

00:07:15.560 --> 00:07:17.730
you've integrated in
your application.

00:07:17.730 --> 00:07:20.500
And finally, in your onStop
handler, you'll call

00:07:20.500 --> 00:07:22.220
PlusClient.disconnect.

00:07:22.220 --> 00:07:24.690
And this will terminate the
connection between your

00:07:24.690 --> 00:07:26.870
application and Google
Play services.

00:07:26.870 --> 00:07:29.430
And this is a best practice
because it will reduce the

00:07:29.430 --> 00:07:31.980
number of resources incurred
on the device when it's not

00:07:31.980 --> 00:07:33.170
being used.

00:07:33.170 --> 00:07:35.150
JOANNA SMITH: All right, so we
just went through a lot of

00:07:35.150 --> 00:07:36.560
different steps.

00:07:36.560 --> 00:07:38.850
Is there somewhere online where
people can find this

00:07:38.850 --> 00:07:41.030
information so they don't have
to keep pausing the video and

00:07:41.030 --> 00:07:42.430
writing down all the code?

00:07:42.430 --> 00:07:43.060
CHIRAG SHAH: That's
a great point.

00:07:43.060 --> 00:07:44.320
You don't need to take notes.

00:07:44.320 --> 00:07:46.240
Put down your pencils.

00:07:46.240 --> 00:07:50.180
You can visit developers.googl
e.com/plus/mobile.

00:07:50.180 --> 00:07:52.330
And from there, you'll find a
beautiful getting started

00:07:52.330 --> 00:07:55.400
guide and a sample application
that you can

00:07:55.400 --> 00:07:56.630
follow along with.

00:07:56.630 --> 00:07:59.240
And the sample application will
look very similar to what

00:07:59.240 --> 00:08:01.540
we're covering here
in the slides.

00:08:01.540 --> 00:08:03.130
GUS CLASS: Thanks, Chirag.

00:08:03.130 --> 00:08:04.680
So the last thing we're going
to talk about today is going

00:08:04.680 --> 00:08:06.410
to be Sign In with Google+.

00:08:06.410 --> 00:08:08.085
And so here's another
example flow.

00:08:08.085 --> 00:08:10.060
Now, a user clicks a Sign In
button and then they're

00:08:10.060 --> 00:08:11.630
presented with a list
of their accounts on

00:08:11.630 --> 00:08:13.220
their Android device.

00:08:13.220 --> 00:08:15.970
After they select an account,
they don't have to enter their

00:08:15.970 --> 00:08:17.820
mobile password again because
it's saved and

00:08:17.820 --> 00:08:19.310
secure on their device.

00:08:19.310 --> 00:08:22.880
And then finally, after
they're signed in, the

00:08:22.880 --> 00:08:25.100
application can open, and
some information can

00:08:25.100 --> 00:08:26.350
be pulled from Google+.

00:08:29.190 --> 00:08:30.700
So Chirag will actually go--

00:08:30.700 --> 00:08:32.360
Chirag will go into the
integration steps

00:08:32.360 --> 00:08:34.419
for the Sign In button.

00:08:34.419 --> 00:08:36.090
CHIRAG SHAH: So integrating
the Sign In button is very

00:08:36.090 --> 00:08:37.679
similar to integrating
the +1 button.

00:08:37.679 --> 00:08:41.150
But you'll also include the
GET_ACCOUNTS permission in

00:08:41.150 --> 00:08:42.890
your AndroidManifest file.

00:08:42.890 --> 00:08:46.000
This will allow your third party
application to obtain

00:08:46.000 --> 00:08:48.800
the list of accounts
on the device.

00:08:48.800 --> 00:08:49.540
Next you'll add the

00:08:49.540 --> 00:08:51.360
PlusSignInButton to your layout.

00:08:51.360 --> 00:08:54.340
And again, this inherits from a
standard button, so the look

00:08:54.340 --> 00:08:56.575
and feel of the interface should
look very familiar.

00:08:59.600 --> 00:09:01.220
GUS CLASS: So here's actually
a full implementation of the

00:09:01.220 --> 00:09:03.550
Plus Sign In button.

00:09:03.550 --> 00:09:04.360
Don't freak out.

00:09:04.360 --> 00:09:07.280
Chirag will actually break down
the important pieces of

00:09:07.280 --> 00:09:09.624
this code so it's easier
for you to understand.

00:09:12.530 --> 00:09:15.870
CHIRAG SHAH: So the first
important thing you'll do is

00:09:15.870 --> 00:09:17.230
sign the user in.

00:09:17.230 --> 00:09:20.470
And again, you will integrate
the PlusClient object in the

00:09:20.470 --> 00:09:23.500
life cycle of your
Android activity.

00:09:23.500 --> 00:09:26.560
So when your onStart handler
is invoked, you'll call

00:09:26.560 --> 00:09:27.710
PlusClient.connect.

00:09:27.710 --> 00:09:29.890
But now in this case, two
things can happen when

00:09:29.890 --> 00:09:31.890
PlusClient is invoked.

00:09:31.890 --> 00:09:35.210
Google Play services can
go in and invoke your

00:09:35.210 --> 00:09:41.330
onConnectionFailed handler, or
your onConnected handler.

00:09:41.330 --> 00:09:43.170
Next, you will invoke--

00:09:43.170 --> 00:09:45.520
next, you'll implement
your onStop handler.

00:09:45.520 --> 00:09:47.950
And again, you'll call
PlusClient.disconnect to

00:09:47.950 --> 00:09:49.890
terminate the connection between
your application and

00:09:49.890 --> 00:09:51.140
Google Play services.

00:09:53.710 --> 00:09:57.460
So as I mentioned before, either
onConnected is invoked

00:09:57.460 --> 00:10:00.540
from Google Play services, or
onConnectionFailed is involved

00:10:00.540 --> 00:10:02.210
from Google Play services.

00:10:02.210 --> 00:10:05.610
onConnected is analogous to
the user being signed in.

00:10:05.610 --> 00:10:07.990
And when that method is invoked,
you can update your

00:10:07.990 --> 00:10:11.360
user interface to reflect that
the user is signed in.

00:10:11.360 --> 00:10:14.660
If the user is not signed in,
your onConnectionFailed

00:10:14.660 --> 00:10:16.250
handler will be invoked.

00:10:16.250 --> 00:10:20.090
And with that, the Google Play
services will pass in a

00:10:20.090 --> 00:10:21.550
connection result.

00:10:21.550 --> 00:10:24.100
You'll hang on to this
connection result, and you'll

00:10:24.100 --> 00:10:28.790
resolve it when the user presses
the Sign In button.

00:10:28.790 --> 00:10:30.980
Now we save ConnectionResult
as a member

00:10:30.980 --> 00:10:32.660
variable in our activity.

00:10:32.660 --> 00:10:35.840
And when the user presses the
Sign In button, our onClick

00:10:35.840 --> 00:10:38.300
handler will be invoked,
and we'll call--

00:10:38.300 --> 00:10:40.910
we'll start resolving the
connection result we saved in

00:10:40.910 --> 00:10:42.930
the member variable.

00:10:42.930 --> 00:10:44.440
And here we call
mConnectionResul

00:10:44.440 --> 00:10:45.690
t.startResolutionForResult.

00:10:47.990 --> 00:10:51.080
And we pass in a request code,
so we can get a handle on it

00:10:51.080 --> 00:10:53.160
once a response comes back.

00:10:53.160 --> 00:10:57.040
So now let's look at the
onActivityResult handler.

00:10:57.040 --> 00:11:00.280
Whenever the activity comes
back, we'll capture the

00:11:00.280 --> 00:11:03.720
request code and we'll see
if it worked out OK.

00:11:03.720 --> 00:11:07.170
If the resolution worked out
correctly, we'll call

00:11:07.170 --> 00:11:11.650
PlusClient again and complete
the signing in of the user.

00:11:11.650 --> 00:11:12.700
JOANNA SMITH: Now wait.

00:11:12.700 --> 00:11:15.340
So because this is all using
Google Play services, which

00:11:15.340 --> 00:11:17.650
lives inside of the Android--

00:11:17.650 --> 00:11:19.460
or the Android SDK lives
inside of Google Play

00:11:19.460 --> 00:11:23.370
services, they can do all this
without including any of

00:11:23.370 --> 00:11:25.930
Google Play services in
their own ADK, right?

00:11:25.930 --> 00:11:29.250
CHIRAG SHAH: That is
slightly true.

00:11:29.250 --> 00:11:32.490
All of the complicated logic of
Google Play services, and

00:11:32.490 --> 00:11:35.270
all of the image assets of the
+1 button and Sign In button

00:11:35.270 --> 00:11:39.680
will live on the device, but
you'll include a lightweight

00:11:39.680 --> 00:11:42.600
jar to start establishing a
connection between your

00:11:42.600 --> 00:11:45.800
application and Google
Play services.

00:11:45.800 --> 00:11:49.990
So you can obtain that jar from
the Google Android SD--

00:11:49.990 --> 00:11:51.780
from the Android SDK manager.

00:11:51.780 --> 00:11:54.720
And it's a very lightweight jar
that simply connects to

00:11:54.720 --> 00:11:55.390
Google Play services.

00:11:55.390 --> 00:11:59.254
JOANNA SMITH: OK, that
makes sense then.

00:11:59.254 --> 00:11:59.740
GUS CLASS: Great.

00:11:59.740 --> 00:12:03.110
So that's pretty much all we
have to talk to you guys today

00:12:03.110 --> 00:12:08.080
about for updates for Google+
for mobile developers.

00:12:08.080 --> 00:12:11.570
As always, remember you can
get all the resources that

00:12:11.570 --> 00:12:13.300
we've talked about from
the Google Developer

00:12:13.300 --> 00:12:14.880
documentation.

00:12:14.880 --> 00:12:19.170
And you can also ask questions
on our Google+ page.

00:12:19.170 --> 00:12:22.110
And we'll try to get to them
in these office hours.

00:12:22.110 --> 00:12:25.003
And we can also try to get to
them independently of this if

00:12:25.003 --> 00:12:25.470
you guys have questions

00:12:25.470 --> 00:12:26.030
JOANNA SMITH: Exactly.

00:12:26.030 --> 00:12:28.690
So I'm going to monitor for the
next few minutes while we

00:12:28.690 --> 00:12:29.600
continue to talk.

00:12:29.600 --> 00:12:32.310
But if you think of anything
later, if you're watching the

00:12:32.310 --> 00:12:34.990
YouTube video, we'll try to
check back fairly regularly in

00:12:34.990 --> 00:12:38.060
the next few days to see if
we can help you out again.

00:12:38.060 --> 00:12:41.170
In the meantime, so, Lee, you've
been listening with

00:12:41.170 --> 00:12:43.010
rapt attention for
this whole thing.

00:12:43.010 --> 00:12:45.700
Do you have any comments or
questions or just insights

00:12:45.700 --> 00:12:47.780
into what we've been talking
about today?

00:12:47.780 --> 00:12:52.730
LEE DENISON: So one question I
have for you, Chirag, is now,

00:12:52.730 --> 00:12:54.560
with Google Play Services
being deployed to these

00:12:54.560 --> 00:12:58.800
Android devices, you said
earlier that when I embed a

00:12:58.800 --> 00:13:01.190
Share button into my
application, it uses the share

00:13:01.190 --> 00:13:03.660
dialog from the Plus
application.

00:13:03.660 --> 00:13:06.230
Do users still need to have the
Plus application installed

00:13:06.230 --> 00:13:07.850
for me to be able to do that?

00:13:07.850 --> 00:13:08.820
CHIRAG SHAH: Yeah,
that is correct.

00:13:08.820 --> 00:13:12.820
So the user will need to have
the Google+ Android

00:13:12.820 --> 00:13:15.665
application installed on their
device for the Share dialogue

00:13:15.665 --> 00:13:17.060
to prompt up.

00:13:17.060 --> 00:13:20.630
And in Google Play services, we
offer a helper utility to

00:13:20.630 --> 00:13:23.520
check if the Google+ application
is installed.

00:13:23.520 --> 00:13:26.510
If it is installed, you can
continue and create your

00:13:26.510 --> 00:13:30.110
shareIntent using the
shareCompat library, and

00:13:30.110 --> 00:13:33.410
launch the Share dialogue.

00:13:33.410 --> 00:13:37.000
But if the user does not have
the Google+ application

00:13:37.000 --> 00:13:40.420
installed, they can go out to
the market and install it, and

00:13:40.420 --> 00:13:43.240
then go back and resume
sharing the content

00:13:43.240 --> 00:13:44.520
they want to share.

00:13:44.520 --> 00:13:46.500
So that's a good question.

00:13:46.500 --> 00:13:49.820
JOANNA SMITH: And Gus, I know
that we first surfaced some of

00:13:49.820 --> 00:13:53.020
this documentation at Google
I/O this year, and then we

00:13:53.020 --> 00:13:54.130
went into developer preview.

00:13:54.130 --> 00:13:56.130
So what does it mean for
developers now that we're out

00:13:56.130 --> 00:13:57.720
of the developer
preview phase?

00:13:57.720 --> 00:13:59.430
What does that mean for
these features?

00:13:59.430 --> 00:13:59.876
GUS CLASS: One second.

00:13:59.876 --> 00:14:01.214
I have to cough.

00:14:01.214 --> 00:14:02.106
[COUGHS]

00:14:02.106 --> 00:14:03.000
JOANNA SMITH: Not allowed.

00:14:03.000 --> 00:14:06.200
GUS CLASS: But yeah, so the
big difference between the

00:14:06.200 --> 00:14:08.870
functionality that we announced
at I/O and today is

00:14:08.870 --> 00:14:13.910
that at I/O, the Google Play
services had not been out yet.

00:14:13.910 --> 00:14:19.250
And so this functionality, we
knew that it was going to be

00:14:19.250 --> 00:14:22.040
coming, and so we had that
developer preview.

00:14:22.040 --> 00:14:25.230
But now that Google Play
services is out, all of this

00:14:25.230 --> 00:14:26.690
is lit up on devices,
and so the

00:14:26.690 --> 00:14:28.380
functionality is available.

00:14:28.380 --> 00:14:30.750
JOANNA SMITH: And so anybody,
regardless of the preview

00:14:30.750 --> 00:14:33.090
group, is now able to develop
with it, and with the full

00:14:33.090 --> 00:14:34.800
access to the Google
Play services?

00:14:34.800 --> 00:14:35.280
GUS CLASS: Yeah.

00:14:35.280 --> 00:14:39.010
So now, within your apps, that
functionality like the +1

00:14:39.010 --> 00:14:41.390
button is available.

00:14:41.390 --> 00:14:45.510
And up until this release
last week, it was not

00:14:45.510 --> 00:14:46.430
possible to do this.

00:14:46.430 --> 00:14:49.442
JOANNA SMITH: OK, that's
good to know.

00:14:49.442 --> 00:14:51.590
Lee, anything else
while we wait?

00:14:51.590 --> 00:14:52.870
LEE DENISON: One other question
I did have actually,

00:14:52.870 --> 00:14:58.210
is if you use a Sign In button,
and you would like, in

00:14:58.210 --> 00:15:01.070
your application, to maybe
at some critical point

00:15:01.070 --> 00:15:03.720
re-authenticate the user,
is that possible?

00:15:03.720 --> 00:15:06.990
CHIRAG SHAH: So once the user
signs in, they've identified

00:15:06.990 --> 00:15:09.700
themselves with the
application.

00:15:09.700 --> 00:15:13.010
In the application, it's
effectively single sign-on.

00:15:13.010 --> 00:15:17.830
So the onConnected method will
re-trigger if you rotate the

00:15:17.830 --> 00:15:20.700
device, or you put the activity
to sleep for a

00:15:20.700 --> 00:15:26.330
certain amount of time, the
activity will resume and will

00:15:26.330 --> 00:15:29.770
call connect again, and
onConnected will be invoked,

00:15:29.770 --> 00:15:33.270
and the user is authenticated.

00:15:33.270 --> 00:15:35.490
So the only thing--

00:15:35.490 --> 00:15:38.810
if you swap users
on the device.

00:15:38.810 --> 00:15:40.140
Like if I sign out--

00:15:40.140 --> 00:15:44.590
if I remove my Gmail account on
my device, and add Gus on

00:15:44.590 --> 00:15:46.910
it, he would have to re-identify
himself to the

00:15:46.910 --> 00:15:48.720
application.

00:15:48.720 --> 00:15:51.310
And then once he returns
it back, I'd

00:15:51.310 --> 00:15:52.665
add my accounts back.

00:15:52.665 --> 00:15:53.608
LEE DENISON: Cool.

00:15:53.608 --> 00:15:55.012
Thanks.

00:15:55.012 --> 00:15:55.950
JOANNA SMITH: OK.

00:15:55.950 --> 00:15:59.290
So slightly off-topic, we
actually had a question posted

00:15:59.290 --> 00:16:03.990
on the GL event on Google+
a while ago.

00:16:03.990 --> 00:16:07.220
And this person wants to
ask about Hangouts.

00:16:07.220 --> 00:16:10.990
And they didn't know how to get
their app started, so I

00:16:10.990 --> 00:16:13.930
directed them to our forum
so that they could start

00:16:13.930 --> 00:16:15.080
looking into that.

00:16:15.080 --> 00:16:17.210
But one question that seems to
be at the core of this that I

00:16:17.210 --> 00:16:19.150
think it's worth at least
discussing is, they want to

00:16:19.150 --> 00:16:21.120
know about integrating
Google+ Hangouts

00:16:21.120 --> 00:16:23.300
directly into their site.

00:16:23.300 --> 00:16:25.905
Now maybe you can illustrate why
now this is possible with

00:16:25.905 --> 00:16:29.410
the current API, or any insight
you have into how this

00:16:29.410 --> 00:16:30.350
might be done.

00:16:30.350 --> 00:16:33.500
Because I don't-- as far as I
know-- and I'm new-- but I

00:16:33.500 --> 00:16:35.000
don't think that it's
actually possible at

00:16:35.000 --> 00:16:35.730
this point in time.

00:16:35.730 --> 00:16:36.980
Is that correct?

00:16:39.660 --> 00:16:40.500
CHIRAG SHAH: Yeah,
that is correct.

00:16:40.500 --> 00:16:44.940
You can't integrate a Hangout
within your application.

00:16:44.940 --> 00:16:49.060
But you can add the Hangouts
button to invoke a Hangout

00:16:49.060 --> 00:16:50.872
into a new window.

00:16:50.872 --> 00:16:53.700
JOANNA SMITH: OK, so it still
launches from Google+, but the

00:16:53.700 --> 00:16:55.310
button lives on your own site.

00:16:55.310 --> 00:16:57.850
CHIRAG SHAH: Yeah, you can use
the Simple Hangout button.

00:16:57.850 --> 00:17:00.392
And it will create a
new window, or it

00:17:00.392 --> 00:17:01.740
will open a new tab.

00:17:01.740 --> 00:17:03.560
JOANNA SMITH: OK, cool, so
Jeremy, I hope this helps you

00:17:03.560 --> 00:17:05.020
get started, at least
with where to look.

00:17:05.020 --> 00:17:07.390
And as always, please
post in our forum.

00:17:07.390 --> 00:17:10.140
We don't really know how to help
you with implementation

00:17:10.140 --> 00:17:13.069
details, but we would hopefully
like to see other

00:17:13.069 --> 00:17:15.550
people helping you out, and
help you find all the

00:17:15.550 --> 00:17:17.589
information you need.

00:17:17.589 --> 00:17:20.700
I'm not seeing any other
comments appearing on our

00:17:20.700 --> 00:17:21.950
YouTube page.

00:17:26.006 --> 00:17:26.450
[LAUGHS]

00:17:26.450 --> 00:17:29.640
One person comments on our G+
event that they would like a

00:17:29.640 --> 00:17:33.600
suggestion for Google+ where you
can join a streaming event

00:17:33.600 --> 00:17:35.130
from a Nexus tablet.

00:17:35.130 --> 00:17:38.210
So they're looking for mobile
support for joining a

00:17:38.210 --> 00:17:39.950
streaming event.

00:17:39.950 --> 00:17:41.976
We'll work on that.

00:17:41.976 --> 00:17:44.930
In the meantime, we're going to
post this on YouTube after

00:17:44.930 --> 00:17:45.700
we finish recording.

00:17:45.700 --> 00:17:50.220
So you can always go back and
watch it after the fact.

00:17:50.220 --> 00:17:53.860
So anyone else have
anything to say?

00:17:53.860 --> 00:17:55.980
LEE DENISON: Not for me.

00:17:55.980 --> 00:17:56.330
JOANNA SMITH: All right.

00:17:56.330 --> 00:18:00.990
Well then I have, actually, an
announcement about Hangouts,

00:18:00.990 --> 00:18:04.320
which is that version 1.3
was just released.

00:18:04.320 --> 00:18:08.370
This is really exciting, because
it has a normalizing

00:18:08.370 --> 00:18:10.570
feature, which is where you
can mirror yourself.

00:18:10.570 --> 00:18:12.100
So let's say, I go
into a Hangout.

00:18:12.100 --> 00:18:15.070
And my face comes up as I'm
prepping and primping to make

00:18:15.070 --> 00:18:18.570
sure I look cute enough in my
pajamas to talk to my sister.

00:18:18.570 --> 00:18:20.890
But I look weird, because
I'm backwards.

00:18:20.890 --> 00:18:21.920
And I don't like that
flopped image.

00:18:21.920 --> 00:18:23.580
So now I can mirror it.

00:18:23.580 --> 00:18:24.945
And it doesn't mirror
for my sister.

00:18:24.945 --> 00:18:28.330
It just mirrors for myself so
that I look normal to me as

00:18:28.330 --> 00:18:29.620
well as normal to her.

00:18:29.620 --> 00:18:34.160
And I think this is a really
great feature for perspective.

00:18:34.160 --> 00:18:36.980
And I really like playing
with it too.

00:18:36.980 --> 00:18:39.850
So I encourage you to play with
1.3 and start playing

00:18:39.850 --> 00:18:41.850
with that yourself.

00:18:41.850 --> 00:18:44.640
And one last check
at our comments.

00:18:44.640 --> 00:18:48.125
And I'm not seeing anything,
so at the request of our

00:18:48.125 --> 00:18:50.310
visiting guest, I'm going to
make a really bad pun.

00:18:50.310 --> 00:18:52.020
And then we're going
to say goodbye.

00:18:52.020 --> 00:18:55.810
So, how do you get holy water?

00:18:55.810 --> 00:18:56.410
Anyone?

00:18:56.410 --> 00:18:57.620
GUS CLASS: How do you do it?

00:18:57.620 --> 00:18:59.768
JOANNA SMITH: You boil
the hell out of it.

00:18:59.768 --> 00:19:01.230
[WEAK LAUGHTER]

00:19:01.230 --> 00:19:02.400
GUS CLASS: Thanks, everyone.

00:19:02.400 --> 00:19:03.000
JOANNA SMITH: Bye.

00:19:03.000 --> 00:19:04.250
GUS CLASS: Bye.

00:19:13.200 --> 00:19:34.000
[MUSIC PLAYING]

