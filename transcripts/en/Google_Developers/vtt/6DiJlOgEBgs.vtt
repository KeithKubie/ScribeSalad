WEBVTT
Kind: captions
Language: en

00:00:09.980 --> 00:00:10.590
Hi, everyone.

00:00:10.590 --> 00:00:13.590
Welcome to another edition of
"YouTube Developers Live." My

00:00:13.590 --> 00:00:14.880
name is Ikai Lan.

00:00:14.880 --> 00:00:17.540
I'm a member of the YouTube
Developer Relations team.

00:00:17.540 --> 00:00:19.450
And in today's show,
we are going to be

00:00:19.450 --> 00:00:22.300
talking about GitHub.

00:00:22.300 --> 00:00:24.930
Now, GitHub, if you haven't
heard of it before, it's a way

00:00:24.930 --> 00:00:27.660
for people to share open-source
code and to

00:00:27.660 --> 00:00:29.130
contribute to open source.

00:00:29.130 --> 00:00:33.000
And as of very recently, we've
moved our code samples, as

00:00:33.000 --> 00:00:34.780
well as some of our open-source
projects here at

00:00:34.780 --> 00:00:36.680
YouTube, to GitHub.

00:00:36.680 --> 00:00:39.270
So in today's show, we're going
to go over what GitHub

00:00:39.270 --> 00:00:41.900
is, a rough overview of
what it looks like,

00:00:41.900 --> 00:00:43.640
some basic Git commands.

00:00:43.640 --> 00:00:45.460
This is not going to be a Git
tutorial, but I'm going to

00:00:45.460 --> 00:00:48.400
give you enough so that you can
get started, as well as

00:00:48.400 --> 00:00:51.070
some intro to some cool
Git tools like Git

00:00:51.070 --> 00:00:52.710
GUIs that we use.

00:00:52.710 --> 00:00:54.980
And at the end, we're going
to talk about how you can

00:00:54.980 --> 00:00:56.820
contribute to our
Git projects.

00:00:56.820 --> 00:01:00.000
And one final note, which is,
you know, how we like to end

00:01:00.000 --> 00:01:02.800
the show, just a quick
commercial at

00:01:02.800 --> 00:01:03.530
the end of the show.

00:01:03.530 --> 00:01:07.560
So with that, why don't we
go ahead and get started?

00:01:07.560 --> 00:01:09.930
Now, you may or may
not have noticed--

00:01:09.930 --> 00:01:13.290
we haven't really made a lot
of noise around this, but

00:01:13.290 --> 00:01:16.810
we've moved our API code
samples to GitHub.

00:01:16.810 --> 00:01:18.550
They would previously be hosted
at code.google.com/

00:01:18.550 --> 00:01:19.800
p/youtube-api-samples.

00:01:23.170 --> 00:01:25.920
But now, it's much easier
to find them by going to

00:01:25.920 --> 00:01:28.180
github.com/youtube.

00:01:28.180 --> 00:01:31.710
So if you browse to
github.com/youtube, you'll see

00:01:31.710 --> 00:01:35.540
that this is the home for all of
our API samples and some of

00:01:35.540 --> 00:01:36.900
our open source projects.

00:01:36.900 --> 00:01:40.290
So most of our samples follow
the naming convention of

00:01:40.290 --> 00:01:43.350
yt-samples, and then the
name of the project.

00:01:43.350 --> 00:01:45.780
So in this case, you'll see that
we have samples for Go,

00:01:45.780 --> 00:01:48.670
JavaScript, Ruby, Python, and
most of the major programming

00:01:48.670 --> 00:01:50.560
languages that we support.

00:01:50.560 --> 00:01:53.010
So why don't we go ahead and
start looking at how we can

00:01:53.010 --> 00:01:54.770
start working with GitHub.

00:01:54.770 --> 00:01:56.640
Now, let's say that you
want to get at the

00:01:56.640 --> 00:01:58.890
GitHub samples for Java--

00:01:58.890 --> 00:02:00.670
the YouTube API samples.

00:02:00.670 --> 00:02:03.980
You'd go to this page-- again,
that's github.com/youtube,

00:02:03.980 --> 00:02:08.070
click on yt-samples-java, and
you'll see that this is a

00:02:08.070 --> 00:02:11.550
project that we've been
contributing to.

00:02:11.550 --> 00:02:14.660
So if you want to download this
sample code, what you

00:02:14.660 --> 00:02:17.190
would do is you would go over to
the right-hand part of the

00:02:17.190 --> 00:02:19.450
screen, and you'll
see Download ZIP.

00:02:19.450 --> 00:02:22.580
And what's nice about this is
that you don't have to install

00:02:22.580 --> 00:02:23.230
any clients.

00:02:23.230 --> 00:02:24.580
You don't have to install Git.

00:02:24.580 --> 00:02:26.050
You don't have to know
anything about Git.

00:02:26.050 --> 00:02:29.100
You just hit Download, and you
should have code that can

00:02:29.100 --> 00:02:31.810
work, that you can fork off
of and start working on.

00:02:31.810 --> 00:02:33.880
So that's really cool.

00:02:33.880 --> 00:02:36.340
But let's rewind a little bit
and talk about why Git?

00:02:36.340 --> 00:02:39.130
Well, GitHub is where
developers are.

00:02:39.130 --> 00:02:42.640
GitHub has a really good model
where you can create an Open

00:02:42.640 --> 00:02:45.710
Source project, and people can
use what's called forking to

00:02:45.710 --> 00:02:48.820
create a copy of your project
and contribute to that copy.

00:02:48.820 --> 00:02:51.710
And people can recursively
keep doing this.

00:02:51.710 --> 00:02:53.340
They can keep forking
the fork.

00:02:53.340 --> 00:02:57.750
And what typically happens is
you have a canonical copy of a

00:02:57.750 --> 00:02:59.790
project up in Git.

00:02:59.790 --> 00:03:01.740
Like in this case, it's just in
the YouTube account under

00:03:01.740 --> 00:03:04.620
yt-samples.java.

00:03:04.620 --> 00:03:07.120
Someone might fork this, make
some changes, and they would

00:03:07.120 --> 00:03:08.960
send what's called a
pull request to me.

00:03:08.960 --> 00:03:10.840
A pull request is a way
of saying, hey,

00:03:10.840 --> 00:03:12.200
I've made some changes.

00:03:12.200 --> 00:03:13.470
I want you to check these out.

00:03:13.470 --> 00:03:15.750
And I can go through and say,
do I want these changes or

00:03:15.750 --> 00:03:17.850
not, and merge them in
or not merge them in.

00:03:17.850 --> 00:03:21.460
And I think that's really cool
because if you think about the

00:03:21.460 --> 00:03:24.020
old way in which you used to
contribute to open source, you

00:03:24.020 --> 00:03:27.990
used to have to send a patch,
and it was really difficult.

00:03:27.990 --> 00:03:30.300
And what's really nice about
this way is that I've seen

00:03:30.300 --> 00:03:33.650
some projects where a fork has
actually overtaken the

00:03:33.650 --> 00:03:35.960
canonical or main
original project

00:03:35.960 --> 00:03:37.210
and become more popular.

00:03:37.210 --> 00:03:40.210
And that's perfectly fine
because this is open source.

00:03:40.210 --> 00:03:43.860
So more about Git, why
I like Git a lot.

00:03:43.860 --> 00:03:45.140
Git is fast, right?

00:03:45.140 --> 00:03:48.526
And if you come from a world
of SVN, or Subversion, you

00:03:48.526 --> 00:03:53.720
know that Subversion is based
on the idea that you have a

00:03:53.720 --> 00:03:58.160
central repository, and you're
copying from the repository,

00:03:58.160 --> 00:04:01.890
whereas Git is more of a
decentralized system.

00:04:01.890 --> 00:04:06.250
So GitHub is a centralized
system for a decentralized

00:04:06.250 --> 00:04:08.340
SCM, Source Control
Management tool.

00:04:08.340 --> 00:04:12.210
But you can run Git without
using GitHub.

00:04:12.210 --> 00:04:15.370
And if GitHub goes down, you
could have a backup server

00:04:15.370 --> 00:04:17.350
that you push to, and
you could do a lot

00:04:17.350 --> 00:04:18.470
of really cool things.

00:04:18.470 --> 00:04:21.550
So why don't we go ahead
and do a quick

00:04:21.550 --> 00:04:22.770
introduction to Git?

00:04:22.770 --> 00:04:25.200
If you don't have Git installed,
you can go ahead

00:04:25.200 --> 00:04:26.170
and search for Git.

00:04:26.170 --> 00:04:30.650
That's spelled G-I-T. And if
you're using something like

00:04:30.650 --> 00:04:34.990
Ubuntu, and you want to install
the packages git-core.

00:04:34.990 --> 00:04:39.220
So sudo apt-get git-core will
get you the tools you need.

00:04:39.220 --> 00:04:41.020
You can also download some
packages that will make your

00:04:41.020 --> 00:04:41.630
life easier.

00:04:41.630 --> 00:04:43.770
I've downloaded this for Mac.

00:04:43.770 --> 00:04:45.220
Now I've already done, this so
I'm not going to go through

00:04:45.220 --> 00:04:46.410
this process.

00:04:46.410 --> 00:04:48.010
But here I am in a terminal.

00:04:48.010 --> 00:04:49.260
I'm in a temp directory,
so I can

00:04:49.260 --> 00:04:51.420
basically trash this directory.

00:04:51.420 --> 00:04:52.750
Now, I have Git already.

00:04:52.750 --> 00:04:54.900
And if I hit Git, I'm going to
get a bunch of commands.

00:04:54.900 --> 00:04:57.280
So the first thing we're going
to want to do if we want to

00:04:57.280 --> 00:04:59.770
track the project, if we don't
just want to download the zip

00:04:59.770 --> 00:05:04.710
file, is we want to go to
the GitHub page, right?

00:05:04.710 --> 00:05:06.570
And we want to find
the clone URL.

00:05:06.570 --> 00:05:09.210
So right here, this is the
clone URL, right here.

00:05:09.210 --> 00:05:11.540
And I guess you can clone with
Subversion, but typically

00:05:11.540 --> 00:05:13.950
that's not something
I commonly see.

00:05:13.950 --> 00:05:17.970
So I'm going to go ahead and
copy this to my clipboard.

00:05:17.970 --> 00:05:19.310
Now I'm going to go back
into Terminal.

00:05:19.310 --> 00:05:23.620
I'm going to type, "Git clone."
I'm going to paste the

00:05:23.620 --> 00:05:27.680
repository in here,
and there you go.

00:05:27.680 --> 00:05:28.720
I've cloned the whole thing.

00:05:28.720 --> 00:05:29.760
Now, that was pretty quick.

00:05:29.760 --> 00:05:31.680
I have a fast network connection
here, but I

00:05:31.680 --> 00:05:33.720
guarantee you Git
is really fast.

00:05:33.720 --> 00:05:35.200
It's really, really
cool stuff.

00:05:35.200 --> 00:05:38.680
So if I go in here, I'll see
that I have all the projects

00:05:38.680 --> 00:05:40.790
for the Java sample code, and I
can start running this on my

00:05:40.790 --> 00:05:41.900
local machine.

00:05:41.900 --> 00:05:43.950
We're using Maven nowadays, so
is you have Maven, you can

00:05:43.950 --> 00:05:45.930
start building this, running
this, importing it into your

00:05:45.930 --> 00:05:47.780
IDE, all that cool stuff.

00:05:47.780 --> 00:05:52.860
Now, Git is very, very fast,
like I mentioned.

00:05:52.860 --> 00:05:56.010
And one of my favorite commands
is to use a Git Log.

00:05:56.010 --> 00:05:57.090
And a Git Log--

00:05:57.090 --> 00:06:00.055
I'm going to pipe this into more
so I can paginate it--

00:06:00.055 --> 00:06:02.420
a Git Log tells me
all the commits

00:06:02.420 --> 00:06:03.280
that have been happening.

00:06:03.280 --> 00:06:06.010
And it doesn't show me the code,
but there is a verbose

00:06:06.010 --> 00:06:08.060
mode so I can see all the
different diffs of what I've

00:06:08.060 --> 00:06:09.310
been doing in Git.

00:06:09.310 --> 00:06:12.250
But hopefully, you won't need
to be doing this too much if

00:06:12.250 --> 00:06:13.800
you're just getting started.

00:06:13.800 --> 00:06:16.180
And let's say we make an update
to the repository.

00:06:16.180 --> 00:06:18.770
Let's say we push some
new code to fix bugs

00:06:18.770 --> 00:06:19.620
or add a new feature.

00:06:19.620 --> 00:06:20.280
What would you do?

00:06:20.280 --> 00:06:23.280
Well, you would usually
type, "git pull."

00:06:23.280 --> 00:06:25.220
And this is going to check to
see if you have the latest

00:06:25.220 --> 00:06:25.845
version of code.

00:06:25.845 --> 00:06:27.895
And I do have the latest
version of code, and it

00:06:27.895 --> 00:06:28.790
doesn't do anything.

00:06:28.790 --> 00:06:31.020
So this is really cool, and
you can start working with

00:06:31.020 --> 00:06:33.260
things right away.

00:06:33.260 --> 00:06:35.590
When you start to want to make
changes, you want to learn

00:06:35.590 --> 00:06:39.330
about git add as well
as git commit.

00:06:39.330 --> 00:06:41.900
And like I said, this
is not going to be a

00:06:41.900 --> 00:06:43.360
tutorial about Git.

00:06:43.360 --> 00:06:46.760
One of the best books
on Git is actually

00:06:46.760 --> 00:06:47.900
free in open source.

00:06:47.900 --> 00:06:49.030
It's over here.

00:06:49.030 --> 00:06:52.090
Just search for "Git Book." And
you can find this on the

00:06:52.090 --> 00:06:53.400
main Git home page.

00:06:53.400 --> 00:06:57.580
This is written by one of the
founders of GitHub, and it's a

00:06:57.580 --> 00:06:59.490
very, very good,
detailed book.

00:06:59.490 --> 00:07:01.920
But I can understand that
sometimes you just might want

00:07:01.920 --> 00:07:04.040
to get started much quicker.

00:07:04.040 --> 00:07:06.670
So there are a couple of good
Git quick starts on the web.

00:07:06.670 --> 00:07:09.390
But over time, if you're getting
into Git, I would

00:07:09.390 --> 00:07:12.860
highly recommend reading this
book only because there's a

00:07:12.860 --> 00:07:15.190
lot of more advanced usages.

00:07:15.190 --> 00:07:16.590
You want to learn about
how branching works.

00:07:16.590 --> 00:07:18.620
Branches are very, very cool.

00:07:18.620 --> 00:07:21.270
Whereas in something like
Subversion, you want to avoid

00:07:21.270 --> 00:07:23.300
branching, and in Git you always
want to be branching.

00:07:23.300 --> 00:07:25.180
You always want to be merging.

00:07:25.180 --> 00:07:27.990
With Git, since a lot of things
are local, when I do a

00:07:27.990 --> 00:07:30.770
check in, I don't need to be
online to do a Git check in.

00:07:30.770 --> 00:07:34.310
So you could be on a plane, you
could be on a train, and

00:07:34.310 --> 00:07:37.510
you could be writing code and
just making small changes.

00:07:37.510 --> 00:07:40.410
So that's all really
cool stuff.

00:07:40.410 --> 00:07:43.980
Now, I'm going to show you one
more thing, which I think is

00:07:43.980 --> 00:07:44.510
really cool.

00:07:44.510 --> 00:07:46.910
I tend to like use command
line, and I would highly

00:07:46.910 --> 00:07:48.400
recommend you use the
command line.

00:07:48.400 --> 00:07:51.680
But Git has become so popular
that Git has now integrated

00:07:51.680 --> 00:07:53.560
with lots of the popular IDEs.

00:07:53.560 --> 00:07:56.500
For instance, if I'm writing a
project in IntelliJ, that has

00:07:56.500 --> 00:07:58.880
Git integration, it'll
tell me which lines

00:07:58.880 --> 00:07:59.940
have I changed, right?

00:07:59.940 --> 00:08:03.550
Like, which lines have I added
since the last commit.

00:08:03.550 --> 00:08:06.610
And in Git, it is a best
practice to always be

00:08:06.610 --> 00:08:09.450
committing, because commits are
so fast and local that you

00:08:09.450 --> 00:08:12.200
should be committing lots and
lots of small atomic changes

00:08:12.200 --> 00:08:16.170
before essentially merging back
into master head, which

00:08:16.170 --> 00:08:19.710
you could think of this as
merging back into trunk.

00:08:19.710 --> 00:08:20.960
This is something you
do very common.

00:08:20.960 --> 00:08:25.100
So Git doesn't map to other
source controls, like

00:08:25.100 --> 00:08:27.710
Subversion, one to one because
the workflow is a little bit

00:08:27.710 --> 00:08:29.790
different, but it's something
you get used to.

00:08:29.790 --> 00:08:34.770
So I tend to like the Command
Line for doing pulls, doing

00:08:34.770 --> 00:08:37.260
pushes, as well as
doing commits.

00:08:37.260 --> 00:08:41.450
I don't like using GUI tools
for those things.

00:08:41.450 --> 00:08:43.690
But I do like using GUI tools.

00:08:43.690 --> 00:08:46.280
And when you go to Git home
page, you'll see some of the

00:08:46.280 --> 00:08:47.370
many GUI tools.

00:08:47.370 --> 00:08:48.460
Many of these are free.

00:08:48.460 --> 00:08:49.400
Some of these are paid.

00:08:49.400 --> 00:08:53.260
And the one that is becoming
really popular is called

00:08:53.260 --> 00:08:54.300
GitHub for Mac.

00:08:54.300 --> 00:08:57.990
Now, I've got this installed
for you guys, and where I

00:08:57.990 --> 00:09:03.930
really like to use GUI
tools is for Git Log.

00:09:03.930 --> 00:09:07.360
I can very quickly see what's
different, I can scroll up and

00:09:07.360 --> 00:09:09.190
down, and I can do this
much more easily than

00:09:09.190 --> 00:09:10.180
I can in the terminal.

00:09:10.180 --> 00:09:13.030
So you'll see that green is
stuff that we've added, and

00:09:13.030 --> 00:09:15.700
we've just done an import, so
most of the stuff is green.

00:09:15.700 --> 00:09:16.820
But let's see, here
are some changes.

00:09:16.820 --> 00:09:17.770
Oh, what have we done?

00:09:17.770 --> 00:09:19.500
Oh, there was a problem
with the XML file.

00:09:19.500 --> 00:09:21.650
We removed a line and
we added a line.

00:09:21.650 --> 00:09:22.730
I'm not sure what
we did there.

00:09:22.730 --> 00:09:25.310
I think we just deleted a space
or converted tabs to

00:09:25.310 --> 00:09:27.800
spaces, or something
weird like that.

00:09:27.800 --> 00:09:28.910
And what's also nice
is branches.

00:09:28.910 --> 00:09:31.410
And we haven't been doing much
branching here, but the GUI

00:09:31.410 --> 00:09:34.906
will very quickly visualize
where you have branched, where

00:09:34.906 --> 00:09:37.660
you have merged, and [INAUDIBLE]
to diffs quickly.

00:09:37.660 --> 00:09:40.610
So again, if you've never
looked at Git, I highly

00:09:40.610 --> 00:09:41.870
encourage you to do it.

00:09:41.870 --> 00:09:44.300
It's a very, very cool system.

00:09:44.300 --> 00:09:47.150
So that's a Git GUI.

00:09:47.150 --> 00:09:49.260
That's a Git book.

00:09:49.260 --> 00:09:51.590
So I just wanted to go ahead
and introduce all of these

00:09:51.590 --> 00:09:52.010
things to you.

00:09:52.010 --> 00:09:53.720
And again, you don't need
to know how to do this.

00:09:53.720 --> 00:09:56.860
You can just go to
github.com/youtube, click on

00:09:56.860 --> 00:09:58.100
Project, and click
on Download ZIP.

00:09:58.100 --> 00:10:00.980
When we go back GitHub Project,
you'll see that

00:10:00.980 --> 00:10:03.330
mostly what's in here
is sample code.

00:10:03.330 --> 00:10:06.000
But we host the code for YouTube
Direct, YouTube Direct

00:10:06.000 --> 00:10:08.622
Lite in here, as
well as some of

00:10:08.622 --> 00:10:10.430
YouTube's open-source projects.

00:10:10.430 --> 00:10:13.830
So this is where we will be
committing our resources in

00:10:13.830 --> 00:10:15.970
the future, and I encourage
you to look here.

00:10:15.970 --> 00:10:19.885
We will be starting to put
pointers on code.google.com to

00:10:19.885 --> 00:10:21.760
start pointing to
our GitHub page.

00:10:21.760 --> 00:10:26.350
So that's what I have
for you guys today.

00:10:26.350 --> 00:10:28.060
Hopefully I didn't take
too much of your time.

00:10:28.060 --> 00:10:30.990
And there's one last thing that
I wanted to talk about,

00:10:30.990 --> 00:10:32.370
which is I have an announcement
to make.

00:10:32.370 --> 00:10:35.650
And that announcement is that
our team is hiring.

00:10:35.650 --> 00:10:39.250
So if you're interested in
joining Developer Relations,

00:10:39.250 --> 00:10:42.410
come to
developers.google.com/jobs.

00:10:42.410 --> 00:10:44.670
Let me just verify that
that's a working URL.

00:10:44.670 --> 00:10:47.320
It would be really embarrassing
if it weren't.

00:10:47.320 --> 00:10:48.260
Yes, it is.

00:10:48.260 --> 00:10:52.180
So go to our page,
developers.google.com/jobs.

00:10:52.180 --> 00:10:53.690
Again, my name is Ikai Lan.

00:10:53.690 --> 00:10:56.280
Thank you guys for joining in
for the show, and hope to see

00:10:56.280 --> 00:10:58.470
you guys on GitHub soon.

00:10:58.470 --> 00:10:59.720
Take care.

