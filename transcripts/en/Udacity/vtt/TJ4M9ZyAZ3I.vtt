WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.000
This question is simply crying out for recursion.

00:00:04.000 --> 00:00:08.000
We're given a recursive formula for the Stirling numbers,

00:00:08.000 --> 00:00:18.000
which is S(n, k) = kS(n - 1, k) + S(n - 1, k - 1).

00:00:18.000 --> 00:00:21.000
What we need to think about, though, is the base case,

00:00:21.000 --> 00:00:24.000
which isn't given. When do we stop?

00:00:24.000 --> 00:00:28.000
Well, if we have some objects, and we want to split them up,

00:00:28.000 --> 00:00:32.000
if we have more piles that we're going to split them in,

00:00:32.000 --> 00:00:36.000
some pile will be empty. That's not allowed.

00:00:36.000 --> 00:00:39.000
That means that if we have more piles--

00:00:39.000 --> 00:00:42.000
piles is the k and object is the n--

00:00:42.000 --> 00:00:49.000
if we have more piles than objects, we want to return 0. We can't do it.

00:00:49.000 --> 00:00:51.000
That's one case.

00:00:51.000 --> 00:00:57.000
If we look at our formula, we need to stop in other cases as well.

00:00:57.000 --> 00:01:01.000
We can't just return 0 all the time, because then our sum will be 0.

00:01:01.000 --> 00:01:06.000
What happens when these two values are the same?

00:01:06.000 --> 00:01:09.000
Well, if the two values are the same.

00:01:09.000 --> 00:01:15.000
If n equals k, then how many ways are there of splitting up the objects into

00:01:15.000 --> 00:01:19.000
the same number of piles as there are objects? Well, there's just one way.

00:01:19.000 --> 00:01:25.000
The other case we need to consider or we can consider, is if k is 1.

00:01:25.000 --> 00:01:28.000
What if we want to split the objects up into 1 pile?

00:01:28.000 --> 00:01:33.000
Well, there is only one way to do that, so we can return 1 there as well.

00:01:33.000 --> 00:01:40.000
Now to look at the code, I'm just going to code those two conditions.

00:01:40.000 --> 00:01:46.000
If we have fewer objects than piles, then there are no ways to arrange the objects.

00:01:46.000 --> 00:01:54.000
If we have the same number of objects as piles or if we have just one pile,

00:01:54.000 --> 00:01:57.000
then there's one way to do that.

00:01:57.000 --> 00:02:04.000
If we're in neither of those cases, then we're going to return the formula that we were given--

00:02:04.000 --> 00:02:06.000
the recursive formula.

00:02:06.000 --> 00:02:10.000
That completes the Stirling number part of the question.

00:02:10.000 --> 00:02:17.000
For the Bell numbers we just need to sum the Stirling numbers for k equals 1 up to n as stated.

00:02:17.000 --> 00:02:22.000
We need a variable to keep track of the total that we're going to return,

00:02:22.000 --> 00:02:27.000
and then we need to step through the values of key from 1 up to n.

00:02:27.000 --> 00:02:32.000
For k in the range 1 up to n + 1.

00:02:32.000 --> 00:02:37.000
Don't forget the +1 on the end, because range stops one before the second input number.

00:02:37.000 --> 00:02:44.000
Then we just need to add the Stirling number n, k.

00:02:44.000 --> 00:02:47.000
Finally, we need to return the total.

