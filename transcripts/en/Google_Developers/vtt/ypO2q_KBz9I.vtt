WEBVTT
Kind: captions
Language: en

00:00:01.190 --> 00:00:02.164
TIMOTHY JORDAN: Hello.

00:00:02.164 --> 00:00:03.152
AUDIENCE: Hello.

00:00:03.152 --> 00:00:05.130
AUDIENCE: Hey.

00:00:05.130 --> 00:00:07.290
TIMOTHY JORDAN: How are you?

00:00:07.290 --> 00:00:08.270
AUDIENCE: I'm fine.

00:00:08.270 --> 00:00:08.760
How are you?

00:00:08.760 --> 00:00:09.810
TIMOTHY JORDAN: Thanks, Will.

00:00:09.810 --> 00:00:10.740
I'm good, too.

00:00:10.740 --> 00:00:12.060
Thanks for asking.

00:00:12.060 --> 00:00:13.690
So you're here for the
Getting Started with

00:00:13.690 --> 00:00:15.110
Google History talk.

00:00:15.110 --> 00:00:16.079
I hope that you are.

00:00:16.079 --> 00:00:18.980
If you're not, and you just
wandered in here, well, good.

00:00:18.980 --> 00:00:21.090
I think you'll have fun, too.

00:00:21.090 --> 00:00:22.010
I'm Timothy Jordan.

00:00:22.010 --> 00:00:25.620
I'm going to be your developer
advocate for the next hour.

00:00:25.620 --> 00:00:27.070
And it can be afterwards, too.

00:00:27.070 --> 00:00:28.980
Join me online on Google+.

00:00:28.980 --> 00:00:30.230
You can get there by going
to timothyjordan.com/+.

00:00:33.786 --> 00:00:35.640
So let's just dive right in.

00:00:35.640 --> 00:00:40.450
One of my favorite features on
Google+ is Instant Upload.

00:00:40.450 --> 00:00:44.160
It's cool because I just take
photos on my phone, they're

00:00:44.160 --> 00:00:46.730
automatically uploaded
in the background.

00:00:46.730 --> 00:00:50.110
But then when I get to Google+,
I can look at my

00:00:50.110 --> 00:00:54.730
photos, and I can choose when
to share them and with who.

00:00:54.730 --> 00:00:58.070
And this distinction is pretty
cool, and I think really

00:00:58.070 --> 00:01:02.910
important is that I don't
just share everything.

00:01:02.910 --> 00:01:07.130
I get a private space for all
of my photos, and I can go

00:01:07.130 --> 00:01:09.830
back and look at them
whenever I want to.

00:01:09.830 --> 00:01:11.940
But the ones that I do
want to share, I

00:01:11.940 --> 00:01:15.280
share out with circles.

00:01:15.280 --> 00:01:18.900
And that's where Google
History comes in.

00:01:18.900 --> 00:01:22.490
Think about Google History as
sort of an instant upload, but

00:01:22.490 --> 00:01:25.410
for almost everything else.

00:01:25.410 --> 00:01:29.600
Activities that users take on
your websites can be pushed

00:01:29.600 --> 00:01:32.870
into a private space on
Google+ called Google+

00:01:32.870 --> 00:01:35.610
History, and then they can
optionally share them out

00:01:35.610 --> 00:01:36.860
whenever they want.

00:01:39.760 --> 00:01:41.880
And at the end of the day, it
really comes down to this.

00:01:41.880 --> 00:01:44.780
Is your content in
more places?

00:01:44.780 --> 00:01:48.860
Now let's take a look at this
in an actual product.

00:01:48.860 --> 00:01:52.460
We've been playing around with
this for a while, and our

00:01:52.460 --> 00:01:55.330
friends at Last.fm decided to
play along with us, which is

00:01:55.330 --> 00:01:55.990
pretty fun.

00:01:55.990 --> 00:01:58.980
Now, if you're not familiar with
Last.fm, they're really

00:01:58.980 --> 00:02:01.660
great at helping you keep a
record of everything you

00:02:01.660 --> 00:02:04.240
listen to wherever you listen
to it, and they call this

00:02:04.240 --> 00:02:05.490
scrobbling.

00:02:05.490 --> 00:02:07.200
And then based on
your taste, they

00:02:07.200 --> 00:02:10.840
recommend music and concerts.

00:02:10.840 --> 00:02:13.830
And it's a lot of fun just
listening to Last.fm.

00:02:13.830 --> 00:02:17.270
And because of this sort of
saving of your taste, we think

00:02:17.270 --> 00:02:20.340
it's a really good pairing
for Google+ History.

00:02:20.340 --> 00:02:23.580
So together, we whipped up this
demo, which is-- well,

00:02:23.580 --> 00:02:24.730
I'll take you through it.

00:02:24.730 --> 00:02:29.960
So I'm at this page, and you
can tell that it's a test

00:02:29.960 --> 00:02:32.980
page, an example page, if you
will, because we are in early

00:02:32.980 --> 00:02:34.960
developer preview.

00:02:34.960 --> 00:02:36.730
But there's a sign-in
button right there.

00:02:36.730 --> 00:02:40.450
I'm going to click on the Sign
In button, and I get a

00:02:40.450 --> 00:02:41.900
permissions dialogue.

00:02:41.900 --> 00:02:45.820
Now, the user, when they grant
access are granting access to

00:02:45.820 --> 00:02:50.370
their Google+ ID, and the
ability for Last.fm to save

00:02:50.370 --> 00:02:53.390
activity to their
Google+ History.

00:02:53.390 --> 00:02:55.350
So I'll go ahead and
click Connect here.

00:03:01.160 --> 00:03:02.370
And there we go.

00:03:02.370 --> 00:03:05.300
I've now connected my
Last.fm account

00:03:05.300 --> 00:03:07.720
with my Google+ account.

00:03:07.720 --> 00:03:11.230
I'm going to take a jaunt over
here to the radio and listen

00:03:11.230 --> 00:03:11.840
to a track.

00:03:11.840 --> 00:03:15.300
Now, my friend Adai, who is just
over there in the hat,

00:03:15.300 --> 00:03:16.700
was telling me about
this band.

00:03:16.700 --> 00:03:18.220
And I think I'll
check them out.

00:03:18.220 --> 00:03:23.484
Stereo 360.

00:03:23.484 --> 00:03:32.466
[MUSIC PLAYING]

00:03:32.466 --> 00:03:34.260
Let me just turn this
down a little bit.

00:03:34.260 --> 00:03:36.020
We'll listen to that in the
background while we keep

00:03:36.020 --> 00:03:37.040
going, shall we?

00:03:37.040 --> 00:03:40.630
Now, I'm listening to a radio
station as I do on

00:03:40.630 --> 00:03:43.090
Last.fm all the time.

00:03:43.090 --> 00:03:45.840
The one difference here is
that in the background,

00:03:45.840 --> 00:03:50.390
Last.fm is communicating to
Google, writing moments about

00:03:50.390 --> 00:03:52.110
what I listen to.

00:03:52.110 --> 00:03:54.590
Let's actually take a look at
that in Google+ History.

00:03:54.590 --> 00:03:56.970
So this is my History tab.

00:03:56.970 --> 00:03:59.640
This is, again, an early
developer preview.

00:03:59.640 --> 00:04:01.225
This is the developer UI.

00:04:01.225 --> 00:04:03.510
So you're going to see moments
there, and you'll have the

00:04:03.510 --> 00:04:06.100
ability to share them to make
sure that this whole flow is

00:04:06.100 --> 00:04:07.370
working for you.

00:04:07.370 --> 00:04:10.460
I'm going to reload the page.

00:04:10.460 --> 00:04:14.670
And you see right there at the
top is the Last.fm moment.

00:04:14.670 --> 00:04:16.235
[SOME CLAPPING]

00:04:16.235 --> 00:04:16.854
It's a demo.

00:04:16.854 --> 00:04:17.670
It works.

00:04:17.670 --> 00:04:19.610
That's cool.

00:04:19.610 --> 00:04:22.510
So in that moment, let me just
point out a couple things.

00:04:22.510 --> 00:04:25.820
You see the album art right
there at the top.

00:04:25.820 --> 00:04:29.950
And then on the bottom you see
Last.fm's logo, and you see a

00:04:29.950 --> 00:04:32.895
link to the song on Last.fm.

00:04:32.895 --> 00:04:34.940
We'll just open that in a new
tab, so you can see what that

00:04:34.940 --> 00:04:35.810
looks like.

00:04:35.810 --> 00:04:38.860
This is the song page
on Last.fm linked

00:04:38.860 --> 00:04:40.550
right from your moment.

00:04:40.550 --> 00:04:44.010
So this is the area where the
user can go back and look at

00:04:44.010 --> 00:04:45.460
all the things that they've
been listening to--

00:04:45.460 --> 00:04:47.410
I'll go ahead and stop the
song at this point.

00:04:47.410 --> 00:04:48.970
They can look at all the things
that they've been

00:04:48.970 --> 00:04:52.950
listening to in the past day,
week, month, for as long as

00:04:52.950 --> 00:04:54.850
they've had their account
connected.

00:04:54.850 --> 00:04:56.700
It's really neat, right?

00:04:56.700 --> 00:04:59.230
The next step they can take is
to share this out with their

00:04:59.230 --> 00:05:01.110
friends, and they get
to do this with

00:05:01.110 --> 00:05:02.190
the power of circles.

00:05:02.190 --> 00:05:13.500
Which means I can share this
with my friend, Adai, and, if

00:05:13.500 --> 00:05:14.970
I want, no one else.

00:05:14.970 --> 00:05:17.700
Or I can share it with public,
or I can share it with my

00:05:17.700 --> 00:05:20.580
music friends.

00:05:20.580 --> 00:05:23.530
Click Share there, and
let's take a look at

00:05:23.530 --> 00:05:25.555
that post on my profile.

00:05:30.850 --> 00:05:34.060
And you can see, again,
we have the album art.

00:05:34.060 --> 00:05:36.160
We have the link back
to the song.

00:05:36.160 --> 00:05:40.770
We also have attribution
listened to on Last.fm.

00:05:46.100 --> 00:05:49.910
So that's Google+ History.

00:05:49.910 --> 00:05:52.140
Now, I want to take you through,
in this session,

00:05:52.140 --> 00:05:55.600
step-by-step how to do this on
your website, and I think

00:05:55.600 --> 00:05:58.960
you'll find that it's really
straightforward.

00:05:58.960 --> 00:06:00.790
We're going to first look
at how to set up your

00:06:00.790 --> 00:06:01.710
application.

00:06:01.710 --> 00:06:04.180
You're going to tell Google that
you want to develop for

00:06:04.180 --> 00:06:05.600
Google+ History.

00:06:05.600 --> 00:06:08.560
The next step is to authorize
your user.

00:06:08.560 --> 00:06:11.350
And that's when we saw that
permissions dialogue pop up

00:06:11.350 --> 00:06:13.360
and the user said yes.

00:06:13.360 --> 00:06:15.446
And then finally,
write moments.

00:06:18.470 --> 00:06:21.250
And these are technologies that
you're almost certainly

00:06:21.250 --> 00:06:22.670
already familiar with.

00:06:22.670 --> 00:06:25.480
First off, who's heard about the
API console while you've

00:06:25.480 --> 00:06:27.060
been at Google I/O?

00:06:27.060 --> 00:06:27.850
Yeah?

00:06:27.850 --> 00:06:29.630
We use this for all
of our APIs.

00:06:29.630 --> 00:06:32.820
You register your application
there, and you add API

00:06:32.820 --> 00:06:35.060
services to it.

00:06:35.060 --> 00:06:38.780
Who's used OAuth2?

00:06:38.780 --> 00:06:40.440
Great.

00:06:40.440 --> 00:06:41.580
Essentially everyone.

00:06:41.580 --> 00:06:45.790
And who's used a RESTful API?

00:06:45.790 --> 00:06:47.570
There you go.

00:06:47.570 --> 00:06:49.790
So let's set up this
application.

00:06:49.790 --> 00:06:52.020
There's just a few steps.

00:06:52.020 --> 00:06:54.285
First off, you sign up for
the developer preview.

00:06:54.285 --> 00:06:56.340
Now again, this is an early
developer preview.

00:06:56.340 --> 00:06:57.740
It's meant for developers
only.

00:06:57.740 --> 00:06:59.660
It's not ready for
your end users.

00:06:59.660 --> 00:07:02.360
But it is the right time to test
it on your application

00:07:02.360 --> 00:07:05.490
and give us feedback.

00:07:05.490 --> 00:07:08.280
Next, you enable the
history API.

00:07:08.280 --> 00:07:09.810
So you're going to create
an application

00:07:09.810 --> 00:07:13.350
in the API's console.

00:07:13.350 --> 00:07:16.570
And you're going to go to the
services tab and turn on both

00:07:16.570 --> 00:07:20.990
the Google+ API and the
Google+ history API.

00:07:20.990 --> 00:07:24.450
And then finally, you're going
to create an OAuth2 client ID,

00:07:24.450 --> 00:07:25.700
and that's what we use
in our application.

00:07:28.110 --> 00:07:29.920
So to sign up for the developer
preview, head over

00:07:29.920 --> 00:07:31.040
to this URL.

00:07:31.040 --> 00:07:32.610
It's our developer site,
/+/history/preview.

00:07:36.636 --> 00:07:39.180
Enter in your email
that's associated

00:07:39.180 --> 00:07:41.080
with the Google account.

00:07:41.080 --> 00:07:43.700
Now when you use this Google
account to create an

00:07:43.700 --> 00:07:46.280
application in the API's
console, you'll have the

00:07:46.280 --> 00:07:48.440
ability to turn on
the history API.

00:07:48.440 --> 00:07:52.630
And when you use this same
account in Google+, you'll be

00:07:52.630 --> 00:07:56.470
able to see the developer
UI we have there.

00:07:56.470 --> 00:07:59.260
If additional developers on your
team need access and need

00:07:59.260 --> 00:08:01.850
to test, they need to sign up
their accounts as well.

00:08:01.850 --> 00:08:04.110
As long as they're logged in,
everything will work.

00:08:07.780 --> 00:08:11.170
Then we're going to enable
the Google history API.

00:08:11.170 --> 00:08:14.170
And finally create an
OAuth2 client ID.

00:08:14.170 --> 00:08:15.040
And this is so easy.

00:08:15.040 --> 00:08:16.500
I'm just going to
do it right now.

00:08:21.910 --> 00:08:24.470
So here I am in the
API's console.

00:08:24.470 --> 00:08:27.150
I'm going to create
a new project.

00:08:27.150 --> 00:08:30.450
In this case I'm going
to call it--

00:08:30.450 --> 00:08:31.340
oh, I don't know--

00:08:31.340 --> 00:08:32.590
hi mom.

00:08:37.059 --> 00:08:38.500
And we're going to scroll
all the way

00:08:38.500 --> 00:08:42.679
down till we see Google+.

00:08:42.679 --> 00:08:46.790
There we're going to enable
Google+ API, and the Google+

00:08:46.790 --> 00:08:47.810
history API.

00:08:47.810 --> 00:08:50.260
Now this is not the first time
I've turned on these services.

00:08:50.260 --> 00:08:53.800
If it was I'd be presented
with some API terms of

00:08:53.800 --> 00:08:56.540
service, quickly read through,
make sure that I was going to

00:08:56.540 --> 00:08:58.190
comply with all of those,
and agree to them.

00:09:01.570 --> 00:09:04.670
So we've created the
application, we've turned on

00:09:04.670 --> 00:09:05.960
these services.

00:09:05.960 --> 00:09:09.780
The next step is to create
an OAuth2 client ID.

00:09:09.780 --> 00:09:12.630
So we click over to API Access,
and you'll notice this

00:09:12.630 --> 00:09:16.550
really big button that says
exactly what I did.

00:09:16.550 --> 00:09:17.830
When we click on that,
we're going to name

00:09:17.830 --> 00:09:20.450
this product, hi mom--

00:09:20.450 --> 00:09:21.700
she's going to be so happy.

00:09:24.050 --> 00:09:25.860
Click on Next.

00:09:25.860 --> 00:09:28.250
It's going to make a web
application, and I'm going to

00:09:28.250 --> 00:09:31.100
put in my URL here.

00:09:31.100 --> 00:09:33.170
Now this is going to make
it easier, if I use

00:09:33.170 --> 00:09:35.060
the right URL here.

00:09:35.060 --> 00:09:37.940
My URL is example.com.

00:09:37.940 --> 00:09:39.880
Yours is probably going
to be different.

00:09:39.880 --> 00:09:43.460
And we select the right
protocol, HTTPS, which I'd

00:09:43.460 --> 00:09:47.830
recommend, or the insecure
version if you need to.

00:09:47.830 --> 00:09:50.990
We're going to create
this client ID.

00:09:50.990 --> 00:09:52.700
A couple things to
note about this.

00:09:52.700 --> 00:09:56.740
So we have this client ID right
there, and we have an

00:09:56.740 --> 00:09:58.790
email address, and
a client secret.

00:09:58.790 --> 00:09:59.490
That's great.

00:09:59.490 --> 00:10:01.720
We also have the redirect
URIs, and

00:10:01.720 --> 00:10:03.460
the JavaScript origin.

00:10:03.460 --> 00:10:05.420
Let's fill those out.

00:10:05.420 --> 00:10:07.660
Now, if we were using the server
side flow, which I'll

00:10:07.660 --> 00:10:11.480
talk more about, you'll need to
put in your redirect URI.

00:10:11.480 --> 00:10:15.280
And that's where Google is going
to redirect the user

00:10:15.280 --> 00:10:18.270
flow right after they agree to
those permissions in that

00:10:18.270 --> 00:10:20.200
permissions dialogue box.

00:10:20.200 --> 00:10:22.940
You put in all the possible
redirect URIs that you might

00:10:22.940 --> 00:10:24.910
use, and then you're going
to specify that in your

00:10:24.910 --> 00:10:26.240
application as well.

00:10:26.240 --> 00:10:27.280
Google will do a match.

00:10:27.280 --> 00:10:31.210
If it doesn't match, it's
not going to work.

00:10:31.210 --> 00:10:34.340
And then the JavaScript
origin.

00:10:34.340 --> 00:10:37.140
This is especially important
if you're going to use

00:10:37.140 --> 00:10:39.390
authentication through
JavaScript, or you're going to

00:10:39.390 --> 00:10:43.300
use our sign-in button, which
is, again, with JavaScript.

00:10:43.300 --> 00:10:45.820
The JavaScript origin needs
to be two things.

00:10:45.820 --> 00:10:50.210
One, your domain, including the
right protocol and port.

00:10:50.210 --> 00:10:54.430
So it matters if it's HTTPS
versus HTTP, and,

00:10:54.430 --> 00:10:55.470
of course, the port.

00:10:55.470 --> 00:10:57.780
It's probably going to be 80
unless you're testing on a

00:10:57.780 --> 00:10:58.560
staging server.

00:10:58.560 --> 00:11:00.620
It needs to be that
particular port.

00:11:00.620 --> 00:11:05.560
Also, you're going to add a
special origin for the button.

00:11:05.560 --> 00:11:07.540
And this is just early in
the testing period.

00:11:07.540 --> 00:11:11.680
And I'll talk more about the
button in a little bit.

00:11:11.680 --> 00:11:13.740
So let's assume that I added
those, and then we

00:11:13.740 --> 00:11:16.960
use this client ID.

00:11:16.960 --> 00:11:18.220
And I'll tell you where
to do that.

00:11:24.260 --> 00:11:26.700
That's setting up our
application, and the next step

00:11:26.700 --> 00:11:28.170
is to authorize the user.

00:11:32.600 --> 00:11:33.850
I made a flow chart.

00:11:36.670 --> 00:11:39.410
So we start out by initiating
the OAuth flow.

00:11:39.410 --> 00:11:43.290
Now we've done this, if you've
worked with OAuth2, lots of

00:11:43.290 --> 00:11:44.590
times before and lots of ways.

00:11:44.590 --> 00:11:47.280
But I'm going to show you a
really easy way to do it.

00:11:47.280 --> 00:11:50.100
Then we get to permissions
dialogue.

00:11:50.100 --> 00:11:50.835
That's on the user.

00:11:50.835 --> 00:11:52.710
They just say yes.

00:11:52.710 --> 00:11:56.560
Then we have either a client
side or a server side flow.

00:11:56.560 --> 00:12:00.690
I'm going to talk about each,
and then we're done.

00:12:00.690 --> 00:12:04.610
So for initiating the OAuth
flow, we put together this

00:12:04.610 --> 00:12:05.860
little button.

00:12:08.120 --> 00:12:09.630
Just a real quick question.

00:12:09.630 --> 00:12:10.870
Again, who's used OAuth2?

00:12:10.870 --> 00:12:13.200
Let me see those hands, and
just leave them up.

00:12:13.200 --> 00:12:15.380
Now, put them down if
you've never had a

00:12:15.380 --> 00:12:16.630
problem with OAuth.

00:12:19.170 --> 00:12:19.900
Who's lying?

00:12:19.900 --> 00:12:20.830
OK.

00:12:20.830 --> 00:12:22.420
Put them down.

00:12:22.420 --> 00:12:26.150
We're always looking for ways
to make OAuth easier to use,

00:12:26.150 --> 00:12:27.600
and one of the most difficult
things is just

00:12:27.600 --> 00:12:28.900
starting the flow.

00:12:28.900 --> 00:12:30.770
And we have client libraries
to make this

00:12:30.770 --> 00:12:31.940
really easy for you.

00:12:31.940 --> 00:12:34.360
But we thought we'd put together
a button, too.

00:12:34.360 --> 00:12:35.610
And it has a couple
advantages.

00:12:35.610 --> 00:12:38.780
One, all you have to do is add
some attributes, and you've

00:12:38.780 --> 00:12:43.490
got the button to initiate the
OAuth flow on your page and

00:12:43.490 --> 00:12:45.050
configured properly.

00:12:45.050 --> 00:12:47.380
The other thing is that it's
going to look common, so

00:12:47.380 --> 00:12:49.750
people who see this will
recognize this button.

00:12:49.750 --> 00:12:51.600
It's just like the
plus one button.

00:12:51.600 --> 00:12:55.050
You all use the plus one
button itself, because

00:12:55.050 --> 00:12:57.550
whenever a user lands on your
page they know exactly what it

00:12:57.550 --> 00:13:00.420
is and what it's going
to do for them.

00:13:00.420 --> 00:13:03.200
Now, adding the button to your
page is really similar to

00:13:03.200 --> 00:13:04.420
using the plus one button.

00:13:04.420 --> 00:13:07.740
You include the script at the
top, so the same script for

00:13:07.740 --> 00:13:13.930
the plus one button, and then
you add one of these tags.

00:13:13.930 --> 00:13:16.420
Now I'm showing a sample
configuration for both the

00:13:16.420 --> 00:13:19.460
client side and the
server side flow.

00:13:19.460 --> 00:13:24.910
The client side flow just has
a couple fewer attributes.

00:13:24.910 --> 00:13:29.530
For example, it doesn't have the
redirect URI or the state.

00:13:29.530 --> 00:13:32.020
Both of those are required for
the server side flow, but not

00:13:32.020 --> 00:13:35.460
for client side.

00:13:35.460 --> 00:13:37.070
Let's go through those
attributes.

00:13:37.070 --> 00:13:40.100
First off, we have action, and
this just specifies what the

00:13:40.100 --> 00:13:40.770
button's going to be.

00:13:40.770 --> 00:13:41.380
It's easy.

00:13:41.380 --> 00:13:42.730
It has to be connect.

00:13:42.730 --> 00:13:44.980
Add action equals connect,
and you'll get

00:13:44.980 --> 00:13:47.160
this particular button.

00:13:47.160 --> 00:13:48.060
The client ID.

00:13:48.060 --> 00:13:49.870
We saw that when we set
up our application.

00:13:49.870 --> 00:13:51.850
Copy and paste that in here.

00:13:51.850 --> 00:13:53.170
The redirect URI.

00:13:53.170 --> 00:13:55.480
If you're using the server side
flow, this is where you

00:13:55.480 --> 00:13:59.350
want the users to go
after they consent.

00:13:59.350 --> 00:14:01.120
You're just going to do a
couple of quick things.

00:14:01.120 --> 00:14:03.860
The user will likely not even
see the page fully rendered

00:14:03.860 --> 00:14:07.320
before it redirects back
to your application.

00:14:07.320 --> 00:14:08.370
The state.

00:14:08.370 --> 00:14:10.640
Now this is for your own
verification, and it's an

00:14:10.640 --> 00:14:12.340
important security step.

00:14:12.340 --> 00:14:15.320
When you're doing the server
side flow, you're going to set

00:14:15.320 --> 00:14:17.950
a state variable.

00:14:17.950 --> 00:14:20.550
It doesn't matter what it is,
as long as it's unique and

00:14:20.550 --> 00:14:22.400
non-guessable.

00:14:22.400 --> 00:14:24.520
You set that state variable
at the beginning, and

00:14:24.520 --> 00:14:26.230
you check it later.

00:14:26.230 --> 00:14:28.080
If it's the same, you're good.

00:14:28.080 --> 00:14:30.310
If it's not the same, somebody's
trying to attack

00:14:30.310 --> 00:14:33.690
you, and that will be bad.

00:14:33.690 --> 00:14:35.190
The callback.

00:14:35.190 --> 00:14:36.440
This button has a callback.

00:14:36.440 --> 00:14:39.710
So when the user gets back to
the page and everything's

00:14:39.710 --> 00:14:43.150
done, you can call a function
on that page.

00:14:43.150 --> 00:14:45.870
And this is where you're going
to hide the button, show other

00:14:45.870 --> 00:14:49.730
elements, pat them on the back,
that kind of thing.

00:14:49.730 --> 00:14:50.970
And then scope.

00:14:50.970 --> 00:14:55.340
By default, this button will
use the plus.me scope.

00:14:55.340 --> 00:15:00.540
Now that will give you access
to the user's Google+ ID.

00:15:00.540 --> 00:15:02.190
You need an additional
scope, which is the

00:15:02.190 --> 00:15:06.310
plus.moments.write scope, to
actually write moments into

00:15:06.310 --> 00:15:07.560
the History API.

00:15:11.190 --> 00:15:12.980
So that's initiating
the OAuth flow.

00:15:12.980 --> 00:15:15.180
Permissions dialog, again,
looks like this.

00:15:20.720 --> 00:15:24.430
And now, we've got client side
and server side flows.

00:15:24.430 --> 00:15:25.700
Let's start with the
client side.

00:15:28.710 --> 00:15:31.400
It's really easy.

00:15:31.400 --> 00:15:34.420
The client side flow will give
you an access token that will

00:15:34.420 --> 00:15:36.610
last for 60 minutes.

00:15:36.610 --> 00:15:41.030
It's non-renewable, so you
cannot refresh this token.

00:15:41.030 --> 00:15:45.530
So you have access to write
moments while the user's on

00:15:45.530 --> 00:15:47.930
your website.

00:15:47.930 --> 00:15:50.570
Now once the user's gone through
the flow, it'll call

00:15:50.570 --> 00:15:54.060
the callback that you specified
on the button, and

00:15:54.060 --> 00:15:57.260
you want to use this to both
hide the button so they don't

00:15:57.260 --> 00:15:59.250
click it again and go
through again--

00:15:59.250 --> 00:16:02.550
you want to give them feedback
that they're done, and handle

00:16:02.550 --> 00:16:03.990
any error messages.

00:16:03.990 --> 00:16:07.780
Now, I go through, in detail,
error messages in the advanced

00:16:07.780 --> 00:16:09.930
section that's at the
end of the day.

00:16:09.930 --> 00:16:12.980
I hope you can come
to that as well.

00:16:12.980 --> 00:16:16.420
Just a preview of that is, the
one that you really want to

00:16:16.420 --> 00:16:18.870
make sure to handle is if the
user doesn't give you

00:16:18.870 --> 00:16:20.200
authorization.

00:16:20.200 --> 00:16:22.290
If they don't authorize, you're
going to want to handle

00:16:22.290 --> 00:16:24.950
that in a special way, like ask
them why, or tell them to

00:16:24.950 --> 00:16:27.570
try again, or explain what
you're trying to do here.

00:16:30.070 --> 00:16:36.750
Now, for the server side there
are a few more steps.

00:16:36.750 --> 00:16:40.190
Server side gives you a
little bit more, too.

00:16:40.190 --> 00:16:42.900
With the server side, you get
that token the lasts for 60

00:16:42.900 --> 00:16:45.020
minutes, but you can renew it.

00:16:45.020 --> 00:16:48.050
So you can submit moments when
the user is not currently on

00:16:48.050 --> 00:16:50.010
your website.

00:16:50.010 --> 00:16:55.160
And this is really cool if,
let's say, I purchased

00:16:55.160 --> 00:16:57.970
something and I want to write
a moment for when it's

00:16:57.970 --> 00:17:00.800
shipping to the users in their
history, and they see that

00:17:00.800 --> 00:17:02.810
this new product is
coming to them.

00:17:02.810 --> 00:17:04.380
Well the user's not going to
be on the website at that

00:17:04.380 --> 00:17:07.030
time, so you will need to have
done the server side flow.

00:17:07.030 --> 00:17:09.680
And we think, in fact, for most
cases you want to do the

00:17:09.680 --> 00:17:11.819
server side flow.

00:17:11.819 --> 00:17:14.380
And the flow looks like this.

00:17:14.380 --> 00:17:17.530
Once you hit that
redirect URI--

00:17:17.530 --> 00:17:19.230
Google will call that
redirect URI--

00:17:19.230 --> 00:17:22.980
you're going to get a code and
a state via GET params.

00:17:22.980 --> 00:17:24.010
Verify the state.

00:17:24.010 --> 00:17:26.210
This is the one that you made
up, that's unique and

00:17:26.210 --> 00:17:27.960
non-guessable.

00:17:27.960 --> 00:17:33.170
And then send that code to
Google in exchange for

00:17:33.170 --> 00:17:34.420
credentials.

00:17:36.710 --> 00:17:38.980
Store those user's credentials,
and then you're

00:17:38.980 --> 00:17:41.980
going to output a page that
just calls one method,

00:17:41.980 --> 00:17:43.900
gapi.connect.complete.

00:17:43.900 --> 00:17:46.970
You're going to pass it the
credentials, and it will close

00:17:46.970 --> 00:17:48.920
that redirect URI.

00:17:48.920 --> 00:17:51.900
Then when the user goes back
to the original web page,

00:17:51.900 --> 00:17:54.970
it'll make sure that that
callback gets called.

00:17:54.970 --> 00:17:58.340
If you don't call
gapi.connect.complete, then we

00:17:58.340 --> 00:18:01.730
don't know that the flow has
been fully completed, and that

00:18:01.730 --> 00:18:05.010
callback may not be called.

00:18:05.010 --> 00:18:06.260
This is what it looks
like in code.

00:18:11.750 --> 00:18:13.460
Step one is right up
there at the top.

00:18:13.460 --> 00:18:16.630
We get the code and the state.

00:18:16.630 --> 00:18:19.850
And in step two, we're going
to verify that the state is

00:18:19.850 --> 00:18:20.840
what we expect.

00:18:20.840 --> 00:18:22.700
And we're going to store
the credentials

00:18:22.700 --> 00:18:25.330
under step three there.

00:18:25.330 --> 00:18:26.380
I'm sorry.

00:18:26.380 --> 00:18:28.250
Three is exchanging
the credentials.

00:18:28.250 --> 00:18:29.880
And then four is storing them.

00:18:29.880 --> 00:18:33.020
And then five, we're just going
to output that web page.

00:18:33.020 --> 00:18:36.570
Passing it the credentials so
it can put those into the

00:18:36.570 --> 00:18:38.300
gapi.connect.complete
function.

00:18:42.090 --> 00:18:46.130
And then this is what that
page looks like.

00:18:46.130 --> 00:18:48.525
You see we're calling
gapi.connect.complete, and

00:18:48.525 --> 00:18:53.620
we're putting in there the ID
token and the access token.

00:18:53.620 --> 00:18:57.290
So that's the client side and
the server side flow, at which

00:18:57.290 --> 00:18:59.190
point we're done.

00:18:59.190 --> 00:19:01.790
Next step.

00:19:01.790 --> 00:19:03.040
Writing moments.

00:19:08.750 --> 00:19:11.530
The writing moments is all about
getting the activity on

00:19:11.530 --> 00:19:15.730
the left there to be a
moment on the right

00:19:15.730 --> 00:19:17.980
there in Google+ History.

00:19:17.980 --> 00:19:20.150
So you can see, and as you saw
in the demo earlier, is the

00:19:20.150 --> 00:19:21.260
radio station.

00:19:21.260 --> 00:19:24.310
And we are writing that moment
into Google+, and it becomes a

00:19:24.310 --> 00:19:25.970
moment there.

00:19:25.970 --> 00:19:28.720
And the flow looks a little
bit like this.

00:19:28.720 --> 00:19:30.600
And there's two steps here.

00:19:30.600 --> 00:19:32.080
First, we write that moment.

00:19:34.910 --> 00:19:38.450
The next step is that Google
is going to go out to that

00:19:38.450 --> 00:19:41.460
target URL, retrieve that
page, and learn

00:19:41.460 --> 00:19:42.770
something about it.

00:19:42.770 --> 00:19:46.290
And what it learns it's going to
use to render that moment,

00:19:46.290 --> 00:19:48.630
and it's going to use to render
the post if the user

00:19:48.630 --> 00:19:49.880
decides to share.

00:19:52.370 --> 00:19:56.120
Let's start with
the write step.

00:19:56.120 --> 00:19:59.280
These are the different
activity types.

00:19:59.280 --> 00:20:00.260
It's a pretty short list.

00:20:00.260 --> 00:20:01.490
This is what we're
starting with.

00:20:01.490 --> 00:20:04.230
And one of the things that we
definitely want feedback on is

00:20:04.230 --> 00:20:06.390
what are the activity types
that are missing that are

00:20:06.390 --> 00:20:08.760
essential to you and
your website.

00:20:08.760 --> 00:20:10.510
And in fact, if you go to our
documentation, we have an

00:20:10.510 --> 00:20:13.040
issue tracker where you can
submit moment types.

00:20:16.530 --> 00:20:19.720
Now, each of these activities
is going to be

00:20:19.720 --> 00:20:22.330
encapsulated in JSON.

00:20:22.330 --> 00:20:23.900
That's the payload that
you're going to

00:20:23.900 --> 00:20:27.870
transmit in RESTful request.

00:20:27.870 --> 00:20:32.410
And essentially this is a
JSONified schema.org markup.

00:20:32.410 --> 00:20:35.440
We're looking for a
type, a target,

00:20:35.440 --> 00:20:37.640
and sometimes a result.

00:20:37.640 --> 00:20:40.020
Now, the type is the activity
type that is taken.

00:20:40.020 --> 00:20:42.362
This could be a comment, or it
could be a listen activity, it

00:20:42.362 --> 00:20:44.490
could be a buy activity.

00:20:44.490 --> 00:20:46.920
And that's just going to be
a URL that identifies it.

00:20:46.920 --> 00:20:48.100
Next, the target.

00:20:48.100 --> 00:20:51.870
This is the item that
was acted upon.

00:20:51.870 --> 00:20:54.916
So if I listen to something,
this is the song.

00:20:54.916 --> 00:20:56.855
If I bought something,
this is a product.

00:21:00.410 --> 00:21:02.450
And the result is any resulting

00:21:02.450 --> 00:21:04.450
data from that action.

00:21:04.450 --> 00:21:07.090
So if I made a comment,
this is the comment.

00:21:07.090 --> 00:21:09.030
This includes the comment
permalink,

00:21:09.030 --> 00:21:11.460
and the comment text.

00:21:11.460 --> 00:21:15.000
In code it looks like this.

00:21:15.000 --> 00:21:17.010
This is a listen activity.

00:21:17.010 --> 00:21:20.440
And in the JSON there you'll see
the type listen activity,

00:21:20.440 --> 00:21:23.910
and then you'll see a target
URL, which is actually the

00:21:23.910 --> 00:21:27.850
link to this song.

00:21:27.850 --> 00:21:28.910
Really simple.

00:21:28.910 --> 00:21:31.830
The next one, comment activity,
and there's a little

00:21:31.830 --> 00:21:32.960
bit more to this.

00:21:32.960 --> 00:21:34.445
We have the type at the top.

00:21:34.445 --> 00:21:35.820
It's a comment activity.

00:21:35.820 --> 00:21:40.300
And then we have the blog post
that we commented on under

00:21:40.300 --> 00:21:42.370
target URL.

00:21:42.370 --> 00:21:46.000
This third section, result, is
the comment that we wrote.

00:21:46.000 --> 00:21:47.880
It's of type comments.

00:21:47.880 --> 00:21:49.960
There's a URL to the
permalink for the

00:21:49.960 --> 00:21:53.580
comment, and we have text.

00:21:53.580 --> 00:21:55.130
This is the text
of the comment.

00:21:59.470 --> 00:22:04.230
So that's step one, writing
a moment to Google.

00:22:04.230 --> 00:22:07.790
Step two, fetching
the target URL.

00:22:07.790 --> 00:22:09.420
And again, it's about this.

00:22:09.420 --> 00:22:13.350
It's about rendering the moment
and rendering the post

00:22:13.350 --> 00:22:15.230
if the user shares.

00:22:15.230 --> 00:22:19.470
We get the image, and the title,
and whatever else we

00:22:19.470 --> 00:22:23.550
can show in the moment to make
it rich from schema.org markup

00:22:23.550 --> 00:22:25.060
on the page.

00:22:25.060 --> 00:22:29.640
Now, who is familiar with
microdata markup?

00:22:29.640 --> 00:22:30.110
Great.

00:22:30.110 --> 00:22:32.560
Keep those hands up.

00:22:32.560 --> 00:22:36.960
Who is familiar with schema.org,
like how it works?

00:22:36.960 --> 00:22:38.960
It's the same set.

00:22:38.960 --> 00:22:39.780
That's what I'm trying to say.

00:22:39.780 --> 00:22:42.420
Lower your hands.

00:22:42.420 --> 00:22:45.550
Schema.org is microdata
markup.

00:22:45.550 --> 00:22:48.530
The difference is the URL that
defines the type and the

00:22:48.530 --> 00:22:50.195
different properties
that are available.

00:22:52.890 --> 00:22:54.390
For these we're looking
for this.

00:22:54.390 --> 00:22:59.500
We're looking for a type, a
name, a URL, a description,

00:22:59.500 --> 00:23:02.770
and any number of other
properties as per each

00:23:02.770 --> 00:23:05.430
particular type.

00:23:05.430 --> 00:23:07.230
Now, some of these are going
to be required, and some of

00:23:07.230 --> 00:23:08.430
these are going to
be recommended.

00:23:08.430 --> 00:23:11.180
And we have a full listing of
that in our documentation.

00:23:11.180 --> 00:23:14.620
But in general, you should
almost always include the

00:23:14.620 --> 00:23:20.840
type, the name, the description,
and the image.

00:23:20.840 --> 00:23:22.510
Type is always going
to be required.

00:23:22.510 --> 00:23:25.710
The name, the description and
image are what allow us, when

00:23:25.710 --> 00:23:28.990
a user just shares a URL in
Google+, to render that

00:23:28.990 --> 00:23:32.160
snippet in the post.

00:23:32.160 --> 00:23:34.160
And it's also good practice
for your website.

00:23:34.160 --> 00:23:38.230
Remember, schema.org is markup
for the web page that's been

00:23:38.230 --> 00:23:41.350
adopted by Yahoo!,
Bing, and Google.

00:23:41.350 --> 00:23:44.820
And it's the way that you get
to tell these search engines

00:23:44.820 --> 00:23:47.620
what the item is on
your web page.

00:23:47.620 --> 00:23:52.120
Because there's more to a web
page than just the page.

00:23:52.120 --> 00:23:53.990
And schema.org is
how you add that

00:23:53.990 --> 00:23:55.590
intelligence into the markup.

00:23:58.780 --> 00:24:00.920
Now, if we want to take a look
at this in an actual page,

00:24:00.920 --> 00:24:03.490
it's going to look like this.

00:24:03.490 --> 00:24:06.730
This is just HTML with some
added attributes.

00:24:06.730 --> 00:24:09.690
That's the microdata markup, and
we highlight them for you.

00:24:13.100 --> 00:24:16.410
The key take away from this
slide is that you'll notice

00:24:16.410 --> 00:24:19.490
all of this data is encapsulated
in the tag.

00:24:19.490 --> 00:24:21.900
So whether the page has the
markup or doesn't have the

00:24:21.900 --> 00:24:25.480
markup, it looks the
same to your user.

00:24:25.480 --> 00:24:28.990
And in fact, you don't have to
add any content to your page

00:24:28.990 --> 00:24:31.080
to get this markup.

00:24:31.080 --> 00:24:32.470
Dollars to doughnuts,
you already have

00:24:32.470 --> 00:24:33.480
all the data there.

00:24:33.480 --> 00:24:36.800
You just need to tell us
what each item is.

00:24:36.800 --> 00:24:40.040
So going through from the top,
you'll see an item scope and

00:24:40.040 --> 00:24:42.120
an item type.

00:24:42.120 --> 00:24:45.790
Now, those are going to
be on the parent tag.

00:24:45.790 --> 00:24:48.980
All the item props below
that are going to be

00:24:48.980 --> 00:24:52.120
included in this item.

00:24:52.120 --> 00:24:56.130
Now the item type specifies
what it is.

00:24:56.130 --> 00:24:59.080
Now in there you'll see the item
props, and each of those

00:24:59.080 --> 00:25:02.320
has a value that specifies
what property that we're

00:25:02.320 --> 00:25:03.900
indicating here.

00:25:03.900 --> 00:25:06.810
Now the property could be
a description, an image.

00:25:06.810 --> 00:25:11.370
And you'll even notice we have
a sub item here called In

00:25:11.370 --> 00:25:15.340
Album, because schema.org
is hierarchical.

00:25:15.340 --> 00:25:19.330
You can make an In Album
of a music recording.

00:25:23.470 --> 00:25:24.860
And that's pretty much it.

00:25:24.860 --> 00:25:27.040
So again, to markup your page,
what you're going to want to

00:25:27.040 --> 00:25:30.460
do is look at schema.org
markup, and look at our

00:25:30.460 --> 00:25:33.050
activity pages to make sure that
you're including at least

00:25:33.050 --> 00:25:34.250
the required fields.

00:25:34.250 --> 00:25:36.260
And I would recommend the
recommended fields.

00:25:39.180 --> 00:25:40.590
And that's it.

00:25:40.590 --> 00:25:44.550
We've set up our application
using the API console.

00:25:44.550 --> 00:25:48.480
We've authorized the
user using OAuth2.

00:25:48.480 --> 00:25:50.820
And then we've written
moments.

00:25:50.820 --> 00:25:53.720
And by writing these moments
into Google, we also give

00:25:53.720 --> 00:25:55.610
Google the target URL.

00:25:55.610 --> 00:25:59.110
Google goes out, finds out
about that web page, and

00:25:59.110 --> 00:26:04.070
renders this moment for the user
in a rich way in Google+.

00:26:04.070 --> 00:26:09.100
And it was using technologies
that we're all familiar with,

00:26:09.100 --> 00:26:11.040
which is pretty cool.

00:26:11.040 --> 00:26:13.960
That's all there is to actually

00:26:13.960 --> 00:26:16.860
setting up Google+ History.

00:26:16.860 --> 00:26:19.330
But what it can do for your
website and what we think it

00:26:19.330 --> 00:26:22.090
can do for users is
so much more.

00:26:22.090 --> 00:26:26.000
This idea of the user being
able to save all of their

00:26:26.000 --> 00:26:30.190
activity on the web privately
into Google+, and then

00:26:30.190 --> 00:26:34.520
optionally share whatever they
want to share with their

00:26:34.520 --> 00:26:37.572
friends, their family,
or public.

00:26:37.572 --> 00:26:40.310
I think this ability's going
to be really cool.

00:26:40.310 --> 00:26:40.660
Thank you.

00:26:40.660 --> 00:26:47.570
[APPLAUSE]

00:26:47.570 --> 00:26:48.600
That's my favorite part.

00:26:48.600 --> 00:26:49.710
No, I'm kidding.

00:26:49.710 --> 00:26:52.650
So it's a really easy
API to use.

00:26:52.650 --> 00:26:55.470
We have two additional
sessions.

00:26:55.470 --> 00:26:57.770
An advance where I go into
some detail about each of

00:26:57.770 --> 00:27:00.530
these things, and we do some
cool things with the button

00:27:00.530 --> 00:27:01.570
and the API.

00:27:01.570 --> 00:27:04.660
And we also have a code lab
as well, and I've thrown a

00:27:04.660 --> 00:27:07.475
permalink up there to the
Google+ session track.

00:27:07.475 --> 00:27:09.730
So if you want to check out
those sessions and come,

00:27:09.730 --> 00:27:11.230
please follow that URL.

00:27:11.230 --> 00:27:13.220
Now, again, simple API, quick

00:27:13.220 --> 00:27:15.980
presentation, time for questions.

00:27:15.980 --> 00:27:18.140
Please ask me any questions
that you may have.

00:27:18.140 --> 00:27:21.630
And if you want, and you're nice
to me, I'll give you a

00:27:21.630 --> 00:27:23.610
sticker, too.

00:27:23.610 --> 00:27:25.320
What's up?

00:27:25.320 --> 00:27:26.290
AUDIENCE: With the understanding
that this is the

00:27:26.290 --> 00:27:30.280
developers preview, I noticed
that one of the things that's

00:27:30.280 --> 00:27:33.800
common to all of the types is
that they require a reference

00:27:33.800 --> 00:27:38.620
back to your website to fetch
the snippet information.

00:27:38.620 --> 00:27:39.490
TIMOTHY JORDAN: Yeah.

00:27:39.490 --> 00:27:41.720
AUDIENCE: Any possibility that
that's going to be removed in

00:27:41.720 --> 00:27:43.850
the future for, again,
using the

00:27:43.850 --> 00:27:45.840
comparison to instant uploads.

00:27:45.840 --> 00:27:48.780
When you instantly upload a
photo, there's no reference

00:27:48.780 --> 00:27:51.490
back to a picture on
some other website.

00:27:51.490 --> 00:27:53.060
So is there a way to just store

00:27:53.060 --> 00:27:55.940
content on Google's server?

00:27:55.940 --> 00:27:58.030
TIMOTHY JORDAN: It's a great
question, and I actually think

00:27:58.030 --> 00:27:59.660
there's another question
in there, too, for

00:27:59.660 --> 00:28:01.750
the use case of mobile.

00:28:01.750 --> 00:28:04.190
There's the image
that you create.

00:28:04.190 --> 00:28:06.250
And most the time if you have
a website and you have an

00:28:06.250 --> 00:28:09.260
application, that image is
going to exist somewhere.

00:28:09.260 --> 00:28:12.280
And in fact, for creating an
image and it exists somewhere,

00:28:12.280 --> 00:28:13.270
you would use create activity.

00:28:13.270 --> 00:28:14.850
And you can link to that.

00:28:14.850 --> 00:28:19.310
However, if you're doing an
activity that doesn't leave a

00:28:19.310 --> 00:28:22.440
trail on the internet-- so you
don't have an URI or a URL

00:28:22.440 --> 00:28:24.655
that we can go out and fetch
in the created activity--

00:28:24.655 --> 00:28:27.480
we're working on a solution
for just that problem.

00:28:27.480 --> 00:28:28.510
AUDIENCE: OK, great.

00:28:28.510 --> 00:28:29.750
TIMOTHY JORDAN: So look
for that during

00:28:29.750 --> 00:28:33.022
this developer preview.

00:28:33.022 --> 00:28:33.990
Yes.

00:28:33.990 --> 00:28:37.970
AUDIENCE: I noticed that it
adds a moment to their

00:28:37.970 --> 00:28:41.230
account, but then they have to
manually go through and share

00:28:41.230 --> 00:28:41.780
that moment.

00:28:41.780 --> 00:28:45.480
Is there any plans for having
people give the options for

00:28:45.480 --> 00:28:49.140
auto-sharing it in the future?

00:28:49.140 --> 00:28:52.190
TIMOTHY JORDAN: So I recommend
that you play with the UI.

00:28:52.190 --> 00:28:54.850
I mean there is a way to sort of
make some of those moments

00:28:54.850 --> 00:28:57.260
visible on your moments tab.

00:28:57.260 --> 00:28:58.540
And that's pretty interesting.

00:28:58.540 --> 00:29:01.610
But there is no way for
something to be automatically

00:29:01.610 --> 00:29:04.260
shared to your circles
when you make an

00:29:04.260 --> 00:29:05.660
activity somewhere else.

00:29:05.660 --> 00:29:08.660
And I think that's the key thing
about History that I

00:29:08.660 --> 00:29:14.130
think is really cool is that I
want everything in one place

00:29:14.130 --> 00:29:15.220
just for me.

00:29:15.220 --> 00:29:17.650
But there's only a few things
that I want to share with my

00:29:17.650 --> 00:29:18.700
friends and family.

00:29:18.700 --> 00:29:21.940
And almost always, for me
personally, it's never

00:29:21.940 --> 00:29:23.550
consistent.

00:29:23.550 --> 00:29:27.830
Like when I book some travel
and I take some photos,

00:29:27.830 --> 00:29:30.290
sometimes when I go on a trip
I want those photos to be

00:29:30.290 --> 00:29:32.900
shared, and sometimes I want to
keep them just for myself,

00:29:32.900 --> 00:29:35.560
or sometimes I want to keep
them with just my family.

00:29:35.560 --> 00:29:37.860
There was no sort of consistent
I want this always

00:29:37.860 --> 00:29:39.530
to be shared with everybody.

00:29:39.530 --> 00:29:42.530
So that's what we're looking
at with Google+ History.

00:29:42.530 --> 00:29:45.930
AUDIENCE: But there's no way
that even within our own UI we

00:29:45.930 --> 00:29:48.320
can say yes, I want to
share this, too?

00:29:48.320 --> 00:29:50.790
Kind of like how the plus one
button, when you click the

00:29:50.790 --> 00:29:51.920
plus one button, it immediately

00:29:51.920 --> 00:29:53.430
gives you a share option.

00:29:53.430 --> 00:29:56.180
Because it seems kind of
disjointed to say OK, if you

00:29:56.180 --> 00:30:00.070
wanted to actually share this,
go login to Google+, go over

00:30:00.070 --> 00:30:03.030
to your Moments tab, then
manually share it.

00:30:03.030 --> 00:30:05.750
It'd be nice if it could
be done in one flow.

00:30:05.750 --> 00:30:06.270
TIMOTHY JORDAN: Yeah.

00:30:06.270 --> 00:30:09.170
So how would that look like in
an API form, do you think?

00:30:09.170 --> 00:30:11.750
AUDIENCE: My hope would be that
I could pop up a share

00:30:11.750 --> 00:30:13.860
moment right there in my--

00:30:13.860 --> 00:30:15.330
TIMOTHY JORDAN: So you want to
write the moment and then you

00:30:15.330 --> 00:30:16.650
also want to share in your UI?

00:30:16.650 --> 00:30:17.841
AUDIENCE: Yeah.

00:30:17.841 --> 00:30:18.440
TIMOTHY JORDAN: OK.

00:30:18.440 --> 00:30:20.430
Please join us on the discussion
forum, and make

00:30:20.430 --> 00:30:21.570
sure that we hear
that feedback.

00:30:21.570 --> 00:30:22.180
Thank you.

00:30:22.180 --> 00:30:22.665
AUDIENCE: Thank you.

00:30:22.665 --> 00:30:25.200
AUDIENCE: [INAUDIBLE]

00:30:25.200 --> 00:30:25.590
TIMOTHY JORDAN: Yeah.

00:30:25.590 --> 00:30:25.990
That's a good point.

00:30:25.990 --> 00:30:27.460
Joseph just said you
can use the share

00:30:27.460 --> 00:30:28.220
integration on your site.

00:30:28.220 --> 00:30:29.500
We have a sharing link.

00:30:29.500 --> 00:30:31.720
So if you wanted to do it in
flow, you could still pop up

00:30:31.720 --> 00:30:34.030
this JavaScript window that
allow the user to share direct

00:30:34.030 --> 00:30:34.950
within their stream.

00:30:34.950 --> 00:30:37.340
Thank you.

00:30:37.340 --> 00:30:39.330
AUDIENCE: So the sign-in button
you showed, is it

00:30:39.330 --> 00:30:41.860
possible to use it with
more than one scope if

00:30:41.860 --> 00:30:43.430
needed in any app?

00:30:43.430 --> 00:30:46.230
Because the parameter
only said scope.

00:30:46.230 --> 00:30:46.610
TIMOTHY JORDAN: Yeah.

00:30:46.610 --> 00:30:48.400
It's space separated scope.

00:30:48.400 --> 00:30:51.254
So put in as many as you like.

00:30:51.254 --> 00:30:52.504
AUDIENCE: [INAUDIBLE]

00:30:56.920 --> 00:30:59.020
TIMOTHY JORDAN: So you talked
a lot about using it from a

00:30:59.020 --> 00:31:00.480
website, obviously.

00:31:00.480 --> 00:31:03.690
Is there stuff available, like
JARs and things, to use this

00:31:03.690 --> 00:31:05.740
from applications, like Android
apps and things?

00:31:05.740 --> 00:31:07.750
TIMOTHY JORDAN: I'm glad you
asked that question.

00:31:07.750 --> 00:31:08.770
Yes.

00:31:08.770 --> 00:31:11.520
Coming soon you will have the
ability to do this both from

00:31:11.520 --> 00:31:14.320
iOS and Android, and I'll talk
about that in a little bit

00:31:14.320 --> 00:31:15.730
more detailed in the
advanced session.

00:31:15.730 --> 00:31:18.980
But also there's a session on
your schedule about mobile

00:31:18.980 --> 00:31:20.570
specifically where they're
going to go into

00:31:20.570 --> 00:31:21.510
some depth with that.

00:31:21.510 --> 00:31:22.400
So please do come to that.

00:31:22.400 --> 00:31:23.650
AUDIENCE: Great, thank you.

00:31:26.710 --> 00:31:27.960
TIMOTHY JORDAN: Is that
all for questions?

00:31:30.240 --> 00:31:30.830
Nope.

00:31:30.830 --> 00:31:31.867
AUDIENCE: Hey, Timothy.

00:31:31.867 --> 00:31:33.060
TIMOTHY JORDAN: Hey.

00:31:33.060 --> 00:31:37.310
AUDIENCE: So I love microdata,
and I love activity streams.

00:31:37.310 --> 00:31:40.220
And I know that activity streams
was used, obviously,

00:31:40.220 --> 00:31:42.460
for the History API.

00:31:42.460 --> 00:31:46.310
And I'm happy, and I'm sad.

00:31:46.310 --> 00:31:48.830
I'm sad because there's
basically an overlap in

00:31:48.830 --> 00:31:53.050
vocabulary that ends up being
confusing for both of them.

00:31:53.050 --> 00:31:57.640
Is there an open forum where
we can discuss how to

00:31:57.640 --> 00:32:00.190
consolidate the activity streams
specification with

00:32:00.190 --> 00:32:01.430
schema.org?

00:32:01.430 --> 00:32:01.691
TIMOTHY JORDAN: Great.

00:32:01.691 --> 00:32:03.520
And are you talking specifically
about the markup

00:32:03.520 --> 00:32:04.880
on the target URL--

00:32:04.880 --> 00:32:06.060
AUDIENCE: I'm talking about--

00:32:06.060 --> 00:32:07.430
TIMOTHY JORDAN: Or the JSON
that's transmitted?

00:32:07.430 --> 00:32:11.160
AUDIENCE: --the JSON and the
microdata that I just saw.

00:32:11.160 --> 00:32:13.860
TIMOTHY JORDAN: And at Google
we feel very strongly about

00:32:13.860 --> 00:32:16.020
open standards and implementing
them wherever it

00:32:16.020 --> 00:32:16.910
makes sense.

00:32:16.910 --> 00:32:18.910
And we did have this
conversation, and we would

00:32:18.910 --> 00:32:20.330
love to have this conversation
with you.

00:32:20.330 --> 00:32:22.640
A great place to start that
would be with us after the

00:32:22.640 --> 00:32:25.100
session if you want to talk in
person, or on our discussion

00:32:25.100 --> 00:32:27.390
forum that's linked from
the documentation.

00:32:27.390 --> 00:32:28.480
AUDIENCE: Yeah, OK.

00:32:28.480 --> 00:32:32.620
So you guys are working with
schema.org, or are you guys

00:32:32.620 --> 00:32:33.980
schema.org?

00:32:33.980 --> 00:32:35.610
Because I never know who--

00:32:35.610 --> 00:32:37.380
TIMOTHY JORDAN: Well, schema.org
is an open standard

00:32:37.380 --> 00:32:39.760
that was adopted by all three
major search engines and a

00:32:39.760 --> 00:32:41.370
number of other people.

00:32:41.370 --> 00:32:43.820
And we do work closely
with them, yes.

00:32:43.820 --> 00:32:46.980
AUDIENCE: So you are sort of
bringing the activity concepts

00:32:46.980 --> 00:32:48.640
to schema.org?

00:32:48.640 --> 00:32:49.410
TIMOTHY JORDAN: I'm sorry?

00:32:49.410 --> 00:32:51.380
AUDIENCE: You are bringing
the activity concepts to

00:32:51.380 --> 00:32:52.190
schema.org.

00:32:52.190 --> 00:32:56.410
TIMOTHY JORDAN: Oh, I see nods
in the front here, so I guess

00:32:56.410 --> 00:32:57.130
that's a yes.

00:32:57.130 --> 00:32:58.750
But why don't you come up and
we'll talk about this in more

00:32:58.750 --> 00:32:59.410
detail afterwards.

00:32:59.410 --> 00:32:59.950
AUDIENCE: OK.

00:32:59.950 --> 00:33:01.200
TIMOTHY JORDAN: Thank you.

00:33:03.910 --> 00:33:05.060
Yeah, this is a good point.

00:33:05.060 --> 00:33:06.670
I have Joseph and Paul.

00:33:06.670 --> 00:33:08.480
We have a number of engineers
that have worked on the

00:33:08.480 --> 00:33:09.410
Google+ History.

00:33:09.410 --> 00:33:11.370
So if you do have some very
specific or technical

00:33:11.370 --> 00:33:14.040
questions, let's come up and
have a little party.

00:33:14.040 --> 00:33:16.030
It looks like we're ending
early, so we have some time.

00:33:16.030 --> 00:33:17.320
Oh, one more question.

00:33:17.320 --> 00:33:17.366
AUDIENCE: Hi.

00:33:17.366 --> 00:33:21.370
I just had a question if there
was going to be any, in the

00:33:21.370 --> 00:33:26.280
future, the thought of allowing
apps and people to

00:33:26.280 --> 00:33:29.900
read the user's moments, and get
a listing of the moments,

00:33:29.900 --> 00:33:32.150
and stuff like that.

00:33:32.150 --> 00:33:34.700
TIMOTHY JORDAN: I mean we, as
a policy, don't comment on

00:33:34.700 --> 00:33:36.020
future features or that
kind of thing.

00:33:36.020 --> 00:33:38.320
But I definitely want to hear
the feature requests.

00:33:38.320 --> 00:33:40.242
So let's talk about that, and
if you can, make sure to add

00:33:40.242 --> 00:33:42.700
it to the discussion forums
so we have it in place.

00:33:42.700 --> 00:33:43.950
Thank you.

00:33:46.540 --> 00:33:46.706
All right.

00:33:46.706 --> 00:33:47.470
Thank you so much for coming.

00:33:47.470 --> 00:33:55.400
[APPLAUSE]

