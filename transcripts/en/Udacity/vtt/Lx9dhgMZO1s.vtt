WEBVTT
Kind: captions
Language: en

00:00:00.540 --> 00:00:05.490
I wanted to take a brief diversion to quickly cover how the web works.

00:00:05.490 --> 00:00:09.070
What exactly happens when you type a URL into a browser and

00:00:09.070 --> 00:00:11.300
why all of this matters if you want to use D3.

00:00:12.810 --> 00:00:18.320
So far we've been experiencing D3 through our web browser's console, and

00:00:18.320 --> 00:00:21.830
have been manipulating elements that have already been on the page.

00:00:21.830 --> 00:00:23.640
While this is all fine and good,

00:00:23.640 --> 00:00:28.640
this isn't anything we can't do easily with existing libraries of technologies.

00:00:28.640 --> 00:00:33.170
What makes D3 special is the ability to easily load and

00:00:33.170 --> 00:00:37.380
manipulate data, often from external files or sources.

00:00:37.380 --> 00:00:42.098
And in addition to being the way that the D3 data loading functions work.

00:00:42.098 --> 00:00:46.240
What I'm going to cover with the respect to the client-server model is actually

00:00:46.240 --> 00:00:51.170
how most of the internet and the world wide web is possible and work so well.

00:00:51.170 --> 00:00:56.105
Typically everything that happens in the internet, happens between two or

00:00:56.105 --> 00:00:57.820
more computers.

00:00:57.820 --> 00:01:01.950
Most often your laptop, and some external server.

00:01:01.950 --> 00:01:06.040
And without going into too much excruciating detail, the way the world wide

00:01:06.040 --> 00:01:11.240
web works is by creating a network of all the computers on the internet, so

00:01:11.240 --> 00:01:13.330
that they can intercommunicate.

00:01:13.330 --> 00:01:13.980
Let's say, for

00:01:13.980 --> 00:01:21.390
example, that you want to go to the D3 homepage, located at d3js.org.

00:01:21.390 --> 00:01:24.380
And load the index.html page.

00:01:24.380 --> 00:01:27.060
When you type the address into your browser,

00:01:27.060 --> 00:01:33.960
represented here by the blue square, the web browser is local on your laptop.

00:01:33.960 --> 00:01:38.550
And needs to send the request out to the internet, asking for

00:01:38.550 --> 00:01:42.260
the HTML of the d3.js homepage.

00:01:42.260 --> 00:01:48.466
Typically it can be found on one, if not many servers on the world wide web.

00:01:48.466 --> 00:01:52.780
And the good analogy, of how to think about this process,

00:01:52.780 --> 00:01:56.490
is actually quite similar to the way the postal service works.

00:01:56.490 --> 00:01:57.110
Let's pretend for

00:01:57.110 --> 00:02:01.620
a second that phones and actually the internet doesn't exist yet.

00:02:01.620 --> 00:02:07.010
If you wanted a package from a friend in the old days, the really old days,

00:02:07.010 --> 00:02:11.320
you would have to send the letter to your friend, requesting that they send you,

00:02:11.320 --> 00:02:14.980
let's say, a package with your favorite book that they've borrowed.

00:02:14.980 --> 00:02:16.910
You can think of the host name,

00:02:16.910 --> 00:02:23.290
in this case d3js.org, as the address of a building or a hotel.

00:02:23.290 --> 00:02:25.800
Or even in apartment complex and

00:02:25.800 --> 00:02:31.280
the port of a server can be thought of as a room or apartment number.

00:02:31.280 --> 00:02:35.780
So, in this case in the analogy of the really old days where we're sending

00:02:35.780 --> 00:02:42.570
a letter, we would say send the letter to address d3js.org room number 80.

00:02:42.570 --> 00:02:46.640
I wanted to simplify the diagram a little bit,

00:02:46.640 --> 00:02:50.730
to show this process and exchange much more clearly.

00:02:51.900 --> 00:02:57.700
Again, continuing the analogy of requesting your favorite book from a friend,

00:02:57.700 --> 00:02:59.680
assuming that the Internet and

00:02:59.680 --> 00:03:02.870
telephones don't exist, you would have to send the letter.

00:03:02.870 --> 00:03:07.870
Let's assume that you are the client, or in this case, a laptop, and

00:03:07.870 --> 00:03:13.980
you send the letter with both the destination address and the return address.

00:03:13.980 --> 00:03:19.000
In this case your destination is d3js.org port 80.

00:03:19.000 --> 00:03:23.390
And where your friend, in this case the server should send your

00:03:23.390 --> 00:03:27.550
book as in this case a somewhat arbitrary IP.

00:03:27.550 --> 00:03:33.540
So this is just an identifier for your laptop and a somewhat arbitrary

00:03:33.540 --> 00:03:39.600
port number to send that package to or other address and room number.

00:03:39.600 --> 00:03:42.780
Your friend the server receives this request or

00:03:42.780 --> 00:03:46.840
the letter for them to send your favorite book back.

00:03:46.840 --> 00:03:48.710
And this is called the request typically.

00:03:48.710 --> 00:03:51.630
And then the response your friend or

00:03:51.630 --> 00:03:54.680
the server sends you your favorite book back.

00:03:54.680 --> 00:03:55.820
Or in the case of oh,

00:03:55.820 --> 00:04:00.690
web response it'll be a bunch of HTML to the return address.

00:04:00.690 --> 00:04:05.690
And once you receive your favorite book, in the olden days you can start reading

00:04:05.690 --> 00:04:11.490
or in the modern age of computers when you receive the webpage, HTML.

00:04:11.490 --> 00:04:13.420
You can render it on your browser.

00:04:13.420 --> 00:04:17.149
And now hopefully that you have an idea of the general request and

00:04:17.149 --> 00:04:22.120
response model of the client server model where you, the client, or

00:04:22.120 --> 00:04:26.940
your laptop and its web browser requests a webpage which is server on

00:04:26.940 --> 00:04:31.330
the internet located at the address you request, send you back some HTML.

00:04:32.330 --> 00:04:37.360
In the case of D3 code, let's say that we request

00:04:37.360 --> 00:04:41.870
the index page from d3js.org on port 80,

00:04:41.870 --> 00:04:46.630
which is the default for all web communication, or at least HTTP.

00:04:46.630 --> 00:04:53.150
The server sends you back an index.html web page, composed of HTML,

00:04:53.150 --> 00:04:59.580
JavaScript, CSS, and some D3 code, and on that page is a chart for it to render.

00:04:59.580 --> 00:05:04.160
Remember that I mentioned any time D3 loads an external file,

00:05:04.160 --> 00:05:09.257
through its data loading functions, such as json.csv or

00:05:09.257 --> 00:05:13.650
.tsv, it makes a secondary request to some address.

00:05:13.650 --> 00:05:18.170
It doesn't have to be the server that it came from, but it often is, and

00:05:18.170 --> 00:05:23.180
what the server sends back when the web browser makes an AJAXrequest for

00:05:23.180 --> 00:05:27.330
some data file, in this case, data.json,

00:05:27.330 --> 00:05:33.420
the server sends back the data in another response which D3 then

00:05:33.420 --> 00:05:38.150
loads into its callback function to either bind to your HTML or

00:05:38.150 --> 00:05:43.610
SVG and draw a chart, or visualization based on the data sent back.

00:05:43.610 --> 00:05:47.160
So, just to recap, when you initially request a page,

00:05:47.160 --> 00:05:52.010
your browser requests of the host import, some web document,

00:05:52.010 --> 00:05:56.110
in this case, index.html, that the server sends back.

00:05:56.110 --> 00:05:57.860
In that html page,

00:05:57.860 --> 00:06:04.440
if there's an external data loading function in D3 such as d3.json.

00:06:04.440 --> 00:06:10.110
An AJAX request is made, which then goes back to the same server or

00:06:10.110 --> 00:06:15.500
whichever address you specify in the background, once the page has loaded, and

00:06:15.500 --> 00:06:17.840
wait to run its callback function.

00:06:17.840 --> 00:06:20.290
Until the server sends it its data so

00:06:20.290 --> 00:06:23.700
it can then build a visualization with the data and

00:06:23.700 --> 00:06:27.990
the JavaScript, HTML and SVG that was sent in the original response.

