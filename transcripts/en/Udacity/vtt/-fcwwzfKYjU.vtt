WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.000
The answer is we get a smooth path.

00:00:02.000 --> 00:00:06.000
To see why that's the case, let me just simulate the optimization.

00:00:06.000 --> 00:00:10.000
Suppose we're given a solution to the planning problem like this,

00:00:10.000 --> 00:00:13.000
and you run the optimization algorithm. Consider a place like this.

00:00:13.000 --> 00:00:16.000
By shifting this point into that direction,

00:00:16.000 --> 00:00:19.000
and perhaps shifting the other points in other directions,

00:00:19.000 --> 00:00:22.000
we can decrease the second error term,

00:00:22.000 --> 00:00:25.000
both for this pair of points, and this pair of points.

00:00:25.000 --> 00:00:28.000
However, we do this at the expense of the first error term,

00:00:28.000 --> 00:00:32.000
since we're now shifting the point away from the original x.

00:00:32.000 --> 00:00:36.000
Depending on the weight of these error terms, we might arrive with like the following.

00:00:36.000 --> 00:00:42.000
This new path suffers an error of the first type that we moved the points away

00:00:42.000 --> 00:00:48.000
from the original points, but it drastically reduces the inter-point distance

00:00:48.000 --> 00:00:50.000
as in this error term over here.

00:00:50.000 --> 00:00:53.000
If you insist that the original points are not changed,

00:00:53.000 --> 00:00:56.000
then just exclude those from the optimization.

00:00:56.000 --> 00:01:00.000
In fact, in our exercise, we will not consider those points

00:01:00.000 --> 00:01:07.000
Y0 will always been the same as x0, and yn-1 will always be the same as xn-1,

00:01:07.000 --> 00:01:10.000
assuming we have n points starting in x0.

00:01:10.000 --> 09:59:59.000
The optimization is only applied to the intermediary points.

