WEBVTT
Kind: captions
Language: en

00:00:00.450 --> 00:00:02.850
As exciting as our little
one by one widget is,

00:00:02.850 --> 00:00:06.230
there just isn't enough room to
show everything you might want.

00:00:06.230 --> 00:00:10.140
The ability to resize widgets gives
you the flexibility to share almost

00:00:10.140 --> 00:00:14.800
all of your code, yet give users
the flexibility to choose how much space

00:00:14.800 --> 00:00:16.030
they want your widget to take up.

00:00:17.440 --> 00:00:19.160
Remember our design in the beginning?

00:00:19.160 --> 00:00:22.850
A two by one widget would give
our icon the full height.

00:00:22.850 --> 00:00:26.560
And we'll use the same styling
as listItems within sunshine for

00:00:26.560 --> 00:00:28.920
the high and low temperature.

00:00:28.920 --> 00:00:32.009
For wider widgets, we'll show
the description of the weather as well.

00:00:33.550 --> 00:00:38.240
Since we'll be sharing as much code as
we can, make sure common elements, like

00:00:38.240 --> 00:00:43.910
the image and high temperature text us
the same IDs across all three layouts.

00:00:45.340 --> 00:00:46.938
So how do we know what layout to use?

00:00:46.938 --> 00:00:51.140
On Android 4.0 and lower devices, we
know the size will always be our default

00:00:51.140 --> 00:00:56.140
size, but on Android 4.1 and
higher devices, we'll take advantage of

00:00:56.140 --> 00:01:01.630
a new method added to AppWidget Manager,
getAppWidgetOptions.

00:01:01.630 --> 00:01:05.690
This takes a widget ID, and returns it
to bundle, which contains information,

00:01:05.690 --> 00:01:09.610
such as current size
of that widget in dp.

00:01:09.610 --> 00:01:10.720
With that information,

00:01:10.720 --> 00:01:14.390
we can easily switch between layouts
by comparing the widget's width

00:01:14.390 --> 00:01:18.130
to specific values, denoting
the break points between our layouts.

00:01:19.350 --> 00:01:24.340
In fact, we can use two new attributes
added to app widget provider info.

00:01:24.340 --> 00:01:27.020
minResizeHeight and minResizeWidth.

00:01:28.040 --> 00:01:33.410
These let you set a minimum size
that's smaller than the default size.

00:01:33.410 --> 00:01:36.220
With this, we can make our
default the two by one widget,

00:01:36.220 --> 00:01:40.740
and allow users to resize down to a one
by one if they're crunched for space.

00:01:40.740 --> 00:01:45.610
This is great for ensuring that you
put the best experience forward

00:01:45.610 --> 00:01:47.200
while maintaining flexibility.

00:01:48.240 --> 00:01:51.730
We'll also add one more method
to our AppWidgetProvider,

00:01:51.730 --> 00:01:53.420
onAppWidgetOptionsChanged.

00:01:53.420 --> 00:01:57.780
This is called whenever the size
of the widget is changed.

00:01:57.780 --> 00:02:00.130
In our case,
similar to our onReceive and

00:02:00.130 --> 00:02:04.090
onUpdate method, we'll start the intent
service to refresh our widget.

