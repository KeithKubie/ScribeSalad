WEBVTT
Kind: captions
Language: en

00:00:00.530 --> 00:00:05.160
 this capsule we will discuss the case where 

00:00:02.909 --> 00:00:08.940
 our algorithm must take some 

00:00:05.160 --> 00:00:11.099
 decisions in real time so we saw 

00:00:08.940 --> 00:00:13.170
 that the max mini sentry box allows 

00:00:11.099 --> 00:00:15.780
 make decisions that are optimal 

00:00:13.170 --> 00:00:18.029
 however, still slow enough 

00:00:15.780 --> 00:00:22.350
 binds them to the pruning alfa beta that allowed 

00:00:18.029 --> 00:00:23.269
 to accelerate a little the algorithm the 

00:00:22.350 --> 00:00:25.650
 mini map booth 

00:00:23.269 --> 00:00:28.769
 unfortunately in practice it happens 

00:00:25.650 --> 00:00:31.410
 often it's not enough and we have to 

00:00:28.769 --> 00:00:34.170
 so make decisions that will 

00:00:31.410 --> 00:00:35.730
 having to be a perfect to satisfy 

00:00:34.170 --> 00:00:36.960
 some time constraints so 

00:00:35.730 --> 00:00:38.640
 maybe someone tells me that 

00:00:36.960 --> 00:00:40.649
 of applications maybe in a 

00:00:38.640 --> 00:00:44.579
 competition must not take more than 60 

00:00:40.649 --> 00:00:47.550
 seconds to choose which game which 

00:00:44.579 --> 00:00:48.739
 decision take some moves 

00:00:47.550 --> 00:00:53.460
 to do in the game 

00:00:48.739 --> 00:00:54.930
 and ben if we have an algorithm that is 

00:00:53.460 --> 00:00:57.989
 such as an implementation that is 

00:00:54.930 --> 00:00:58.649
 as we can explore 10 minutes by 

00:00:57.989 --> 00:01:03.949
 second 

00:00:58.649 --> 00:01:08.000
 it gives us a budget of 60 minutes 

00:01:03.949 --> 00:01:11.760
 sorry if 5000 by park where eventually 

00:01:08.000 --> 00:01:13.460
 we have to make money and so if 

00:01:11.760 --> 00:01:16.290
 we give ourselves constraints like that 

00:01:13.460 --> 00:01:17.700
 comment is what can happen 

00:01:16.290 --> 00:01:18.920
 still make decisions that 

00:01:17.700 --> 00:01:21.450
 are not too bad 

00:01:18.920 --> 00:01:23.070
 therefore failing to be optimal which will 

00:01:21.450 --> 00:01:27.720
 maybe still good enough for 

00:01:23.070 --> 00:01:29.490
 succeed in gaining dangerous so the 

00:01:27.720 --> 00:01:30.930
 projecting gold consists of two things 

00:01:29.490 --> 00:01:33.060
 the first thing is we are going to cut 

00:01:30.930 --> 00:01:35.579
 the research is to say that we will 

00:01:33.060 --> 00:01:41.010
 not necessarily go one 

00:01:35.579 --> 00:01:43.240
 total exploration for example the watchtower 

00:01:41.010 --> 00:01:44.920
 pruning alphabet time we will not do 

00:01:43.240 --> 00:01:46.570
 the complete exploration that we should 

00:01:44.920 --> 00:01:47.080
 do normally we will cut the 

00:01:46.570 --> 00:01:48.850
 research 

00:01:47.080 --> 00:01:50.710
 when one could make one's limits and 

00:01:48.850 --> 00:01:52.080
 in fact the depth of tears that we are going 

00:01:50.710 --> 00:01:54.549
 to afford to explore 

00:01:52.080 --> 00:01:55.720
 there are other techniques the others 

00:01:54.549 --> 00:01:57.130
 approaches that are discussed in the 

00:01:55.720 --> 00:01:58.869
 pound of euros out of the nine that you 

00:01:57.130 --> 00:02:01.000
 would you go to consult if you want in 

00:01:58.869 --> 00:02:02.649
 learn more so the first thing 

00:02:01.000 --> 00:02:04.659
 it is to say we will cut the search 

00:02:02.649 --> 00:02:08.080
 for example by limiting the depth of 

00:02:04.659 --> 00:02:10.780
 the soul and then we will have to compensate 

00:02:08.080 --> 00:02:12.760
 the fact that we do not explore until the end 

00:02:10.780 --> 00:02:14.519
 all naked in the soul so we count 

00:02:12.760 --> 00:02:17.380
 does not always happen 

00:02:14.519 --> 00:02:19.750
 exploration at nodes that are of a 

00:02:17.380 --> 00:02:22.330
 fine or else compensated by developing 

00:02:19.750 --> 00:02:25.420
 a function of eristic evaluations and 

00:02:22.330 --> 00:02:27.100
 its purpose is essentially the same 

00:02:25.420 --> 00:02:28.959
 thing that in the paintings is said it's going 

00:02:27.100 --> 00:02:31.000
 give an estimate of the calculation 

00:02:28.959 --> 00:02:32.769
 do not confuse that we have not done yet 

00:02:31.000 --> 00:02:35.620
 ie in this case we are going 

00:02:32.769 --> 00:02:38.100
 estimate the utility that would have been obtained 

00:02:35.620 --> 00:02:40.569
 if we had done a complete search 

00:02:38.100 --> 00:02:42.819
 up to nine names up to ends 

00:02:40.569 --> 00:02:45.670
 of part the difference with the stars 

00:02:42.819 --> 00:02:48.160
 it's only with logistic star 

00:02:45.670 --> 00:02:49.900
 allowed to guide that we are 

00:02:48.160 --> 00:02:53.790
 explored first then eventually 

00:02:49.900 --> 00:02:55.750
 in fact we will be a place that is eleven 

00:02:53.790 --> 00:02:58.690
 optimal but also in this case 

00:02:55.750 --> 00:03:00.190
 the way forgiveness reach the path 

00:02:58.690 --> 00:03:02.170
 optimal in that if our function 

00:03:00.190 --> 00:03:05.079
 of evaluations rustic she goes downright 

00:03:02.170 --> 00:03:06.459
 replaced by the calculation that we would have to 

00:03:05.079 --> 00:03:09.100
 to do otherwise it says she'll 

00:03:06.459 --> 00:03:11.950
 replace the calculation of the minimum value 

00:03:09.100 --> 00:03:13.989
 max of a draw to make a species of 

00:03:11.950 --> 00:03:16.090
 cash prediction that would have happened 

00:03:13.989 --> 00:03:19.299
 if I continued the game there until 

00:03:16.090 --> 00:03:22.329
 the end so we can see on a little 

00:03:19.299 --> 00:03:24.190
 as an estimate of the chance that a 

00:03:22.329 --> 00:03:27.390
 state two parts that we reached even 

00:03:24.190 --> 00:03:27.390
 possibly a victory 

00:03:28.730 --> 00:03:32.269
 I will give two examples of function 

00:03:30.739 --> 00:03:35.239
 of eristic evaluations there for 

00:03:32.269 --> 00:03:36.769
 maybe the concept a little more concrete 

00:03:35.239 --> 00:03:40.489
 for the game of chess 

00:03:36.769 --> 00:03:42.680
 a typical assessment function we 

00:03:40.489 --> 00:03:45.769
 will use it's going to be a sum 

00:03:42.680 --> 00:03:49.239
 weighted of fisher or in French 

00:03:45.769 --> 00:03:55.610
 features each shea butter stick and 

00:03:49.239 --> 00:03:59.840
 a clue on an element can be 

00:03:55.610 --> 00:04:03.700
 beneficial beneficial or negative to revisit 

00:03:59.840 --> 00:04:07.150
 the configuration of the current player so 

00:04:03.700 --> 00:04:10.519
 to give a typical example 

00:04:07.150 --> 00:04:12.980
 we will note as function fdn that 

00:04:10.519 --> 00:04:16.910
 could be the number of reindeer that the 

00:04:12.980 --> 00:04:19.359
 player max 1 on the game so we know 

00:04:16.910 --> 00:04:21.260
 also that white pawns are 

00:04:19.359 --> 00:04:24.050
 mastered by mac players are 

00:04:21.260 --> 00:04:26.060
 seized per day max so the number of 

00:04:24.050 --> 00:04:27.530
 reindeer used by the max player who 

00:04:26.060 --> 00:04:30.620
 are still on the board 

00:04:27.530 --> 00:04:33.770
 - the reign name of the mino player yet 

00:04:30.620 --> 00:04:35.360
 on the chessboard so among other things this 

00:04:33.770 --> 00:04:38.120
 would be a number equal to 1 

00:04:35.360 --> 00:04:40.280
 if the max player still had to reindeer 

00:04:38.120 --> 00:04:42.830
 but the player did not have to 

00:04:40.280 --> 00:04:45.349
 reindeer 0 if both still have their 

00:04:42.830 --> 00:04:47.800
 ingredients could reindeer then - well 

00:04:45.349 --> 00:04:51.280
 it is rather the player mines who in 

00:04:47.800 --> 00:04:54.050
 Corsican with reindeer and their masks virgin 

00:04:51.280 --> 00:04:56.930
 and we will weight the importance of this 

00:04:54.050 --> 00:04:58.400
 characteristic by a weight that will 

00:04:56.930 --> 00:05:00.410
 number is it so in this case it 

00:04:58.400 --> 00:05:03.800
 could be new so that's it 

00:05:00.410 --> 00:05:06.680
 would say is that the quality of the 

00:05:03.800 --> 00:05:08.479
 configuration of chichis if it was the 

00:05:06.680 --> 00:05:10.520
 first case that I mentioned earlier 

00:05:08.479 --> 00:05:12.020
 know that it's the max day that in 

00:05:10.520 --> 00:05:15.050
 Corsican to reindeer but the player mines the 

00:05:12.020 --> 00:05:15.500
 so the quality of that would be an x 

00:05:15.050 --> 00:05:17.750
 9 

00:05:15.500 --> 00:05:20.599
 because if it's the opposite it's up to 

00:05:17.750 --> 00:05:21.470
 to say that it was the mines player who 

00:05:20.599 --> 00:05:24.590
 still had his queen 

00:05:21.470 --> 00:05:30.470
 but in this case it would be worth less 9 

00:05:24.590 --> 00:05:32.599
 w 1 time f1 - we would give less then 

00:05:30.470 --> 00:05:35.320
 we could calculate full of evaluation 

00:05:32.599 --> 00:05:39.320
 like that of the quality of the chessboard 

00:05:35.320 --> 00:05:40.760
 for the max player basically more 

00:05:39.320 --> 00:05:42.260
 normal posit and more is good for them 

00:05:40.760 --> 00:05:45.230
 max players and there we could 

00:05:42.260 --> 00:05:47.000
 design and many features 

00:05:45.230 --> 00:05:51.020
 like that there are put together but 

00:05:47.000 --> 00:05:52.640
 with their weighting is so there is 

00:05:51.020 --> 00:05:54.590
 a whole search space both 

00:05:52.640 --> 00:05:57.410
 rustico functions one could have 

00:05:54.590 --> 00:05:59.960
 explored and his long or an expert must 

00:05:57.410 --> 00:06:01.250
 think about finding good functions 

00:05:59.960 --> 00:06:04.790
 characteristics then also to find 

00:06:01.250 --> 00:06:05.690
 good weight values ​​that 

00:06:04.790 --> 00:06:06.260
 would have good 

00:06:05.690 --> 00:06:08.810
 performances 

00:06:06.260 --> 00:06:10.960
 I could imagine 

00:06:08.810 --> 00:06:14.780
 learning techniques for 

00:06:10.960 --> 00:06:16.400
 allow a player to improve himself 

00:06:14.780 --> 00:06:19.640
 even to find good values 

00:06:16.400 --> 00:06:22.790
 weights w given the critics 

00:06:19.640 --> 00:06:24.470
 fixed by playing several parts and on 

00:06:22.790 --> 00:06:26.390
 cd notion that we will start 

00:06:24.470 --> 00:06:28.490
 explore later in others 

00:06:26.390 --> 00:06:29.540
 capsules when we talk between 

00:06:28.490 --> 00:06:34.100
 other learning then 

00:06:29.540 --> 00:06:35.950
 reinforcement learning 

00:06:34.100 --> 00:06:40.910
 function examples a devaluation 

00:06:35.950 --> 00:06:43.580
 heuristic this for the tick to toe that 

00:06:40.910 --> 00:06:47.930
 could work well that would be the 

00:06:43.580 --> 00:06:49.460
 name to avenge columns and diagonal who 

00:06:47.930 --> 00:06:51.170
 are currently available for the 

00:06:49.460 --> 00:06:53.990
 max player minus the same thing but for 

00:06:51.170 --> 00:06:56.690
 the player comes so for example here 

00:06:53.990 --> 00:06:58.520
 for this grid if for the day max one 

00:06:56.690 --> 00:07:02.150
 has six columns hexagonal range 

00:06:58.520 --> 00:07:05.000
 available as his like that like 

00:07:02.150 --> 00:07:07.670
 like this like that and then like that 

00:07:05.000 --> 00:07:10.360
 so these are bothered diagonal columns 

00:07:07.670 --> 00:07:13.820
 which could possibly accommodate 

00:07:10.360 --> 00:07:17.090
 series of 3 x so when 6 players max 

00:07:13.820 --> 00:07:24.980
 1 suppose they use the beds x 

00:07:17.090 --> 00:07:26.360
 is the opposite for the player for the 

00:07:24.980 --> 00:07:28.490
 player mines 

00:07:26.360 --> 00:07:31.280
 we rather have four columns range 

00:07:28.490 --> 00:07:33.710
 hexagonal available this one here 

00:07:31.280 --> 00:07:36.710
 this one is that there is no 

00:07:33.710 --> 00:07:38.630
 diagonal because of his background we have 

00:07:36.710 --> 00:07:40.760
 our example here that I hope in 

00:07:38.630 --> 00:07:42.620
 exercise so that's actually it's 

00:07:40.760 --> 00:07:45.530
 a figure that is going to be more and more 

00:07:42.620 --> 00:07:46.990
 high depending on the quality of the 

00:07:45.530 --> 00:07:48.890
 layout of the grid since 

00:07:46.990 --> 00:07:51.050
 intuitively then orange and the pantyhose 

00:07:48.890 --> 00:07:54.700
 diagonal of more opportunities for the 

00:07:51.050 --> 00:07:58.000
 player eventually to come to 

00:07:54.700 --> 00:08:06.070
 place a series of x or europe for 

00:07:58.000 --> 00:08:08.830
 a mac under mines in the grid and 

00:08:06.070 --> 00:08:11.800
 finally before finishing would like 

00:08:08.830 --> 00:08:13.660
 mention the notion of generalization 

00:08:11.800 --> 00:08:16.540
 random actions how does that 

00:08:13.660 --> 00:08:18.400
 we apply them we adapt our 

00:08:16.540 --> 00:08:22.840
 algorithms to allow games that 

00:08:18.400 --> 00:08:24.370
 for example would involve launching 

00:08:22.840 --> 00:08:25.870
 of a dea to determine what is the 

00:08:24.370 --> 00:08:27.660
 next action so there is one aspect 

00:08:25.870 --> 00:08:29.770
 random stochastic 

00:08:27.660 --> 00:08:31.390
 the solution is actually relatively 

00:08:29.770 --> 00:08:34.090
 simple all we will do is that 

00:08:31.390 --> 00:08:36.850
 in our grave we will shake some knots 

00:08:34.090 --> 00:08:39.640
 chance that you match by 

00:08:36.850 --> 00:08:44.110
 example at the launch of rld and not door 

00:08:39.640 --> 00:08:46.270
 what random aspect and in our 

00:08:44.110 --> 00:08:47.890
 mini max algorithm we will replace the 

00:08:46.270 --> 00:08:50.170
 calculate the value of the mini max where we are going 

00:08:47.890 --> 00:08:53.700
 adapt it to calculate rather a mini 

00:08:50.170 --> 00:08:58.330
 max hope finally a utility 

00:08:53.700 --> 00:09:01.000
 hope associated with each state and therefore 

00:08:58.330 --> 00:09:04.390
 we have an illustration of a graph where we 

00:09:01.000 --> 00:09:07.150
 would have an imac what would have two 

00:09:04.390 --> 00:09:09.580
 successors associated with two actions there 

00:09:07.150 --> 00:09:11.680
 every action to involve a certain 

00:09:09.580 --> 00:09:14.680
 aspect of luck that would say that with a 

00:09:11.680 --> 00:09:16.840
 because if a probity of 90 for that 

00:09:14.680 --> 00:09:19.870
 we would arrive at this success and also 

00:09:16.840 --> 00:09:23.230
 with a quality 2.1 so 10 for that 

00:09:19.870 --> 00:09:25.420
 we would not be able to get there sooner 

00:09:23.230 --> 00:09:30.790
 ok so now we have three types of 

00:09:25.420 --> 00:09:33.310
 max luck and mines and and four knots 

00:09:30.790 --> 00:09:37.750
 if we count the nodes of the states 

00:09:33.310 --> 00:09:40.390
 so ends up in this case we will not 

00:09:37.750 --> 00:09:44.320
 calculate a utility or a min value 

00:09:40.390 --> 00:09:46.930
 max 5 for your calculations and a utility or 

00:09:44.320 --> 00:09:48.010
 by the mini max was hoping so everything 

00:09:46.930 --> 00:09:50.410
 that we actually change in our 

00:09:48.010 --> 00:09:53.320
 definition of the mini max hope that's 

00:09:50.410 --> 00:09:58.060
 that in addition to the three conditions that 

00:09:53.320 --> 00:09:59.200
 had before knowing 1 1 the terminal 1 the 

00:09:58.060 --> 00:10:00.640
 mac are wet 

00:09:59.200 --> 00:10:03.580
 we now have a calculation to do for 

00:10:00.640 --> 00:10:05.500
 9 years old and for 9 years old 

00:10:03.580 --> 00:10:07.900
 do a max on successors or a 

00:10:05.500 --> 00:10:10.450
 of course the successors we will do a 

00:10:07.900 --> 00:10:12.070
 m on successors weighted by the 

00:10:10.450 --> 00:10:15.730
 probability of reaching each 

00:10:12.070 --> 00:10:17.050
 successor from the 1st stream and 

00:10:15.730 --> 00:10:20.170
 so we're going to do a kind of average 

00:10:17.050 --> 00:10:24.580
 weighted mini max associated with each 

00:10:20.170 --> 00:10:27.910
 successors and to do the math 

00:10:24.580 --> 00:10:29.800
 from the mini max to the root we would have a 

00:10:27.910 --> 00:10:32.710
 running a bit similar your 

00:10:29.800 --> 00:10:34.630
 exploration depth similar to this 

00:10:32.710 --> 00:10:37.570
 we saw in the minimax algorithm where 

00:10:34.630 --> 00:10:39.910
 we would reach each of the children who 

00:10:37.570 --> 00:10:41.920
 have shown we would spread the mini max 

00:10:39.910 --> 00:10:44.620
 up until you reach the root 

00:10:41.920 --> 00:10:47.280
 to get our mini max hope at 

00:10:44.620 --> 00:10:47.280
 beginning of the game 

