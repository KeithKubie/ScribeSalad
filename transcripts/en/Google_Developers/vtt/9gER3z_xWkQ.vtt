WEBVTT
Kind: captions
Language: en

00:00:00.499 --> 00:00:01.217
Hey, everybody.

00:00:01.217 --> 00:00:03.800
I'm Andrew Brogdon, and welcome
back to the Mobile Ads Garage,

00:00:03.800 --> 00:00:06.580
where the videos are like my
mother's Christmas cookies,

00:00:06.580 --> 00:00:07.950
chock full of ginger.

00:00:07.950 --> 00:00:10.030
Today we are all
about interstitials,

00:00:10.030 --> 00:00:12.210
which is a word I'm still
not sure how to spell.

00:00:12.210 --> 00:00:16.190
Fortunately, Gary the graphics
guy has no such problems.

00:00:16.190 --> 00:00:17.311
Nice work, Gar.

00:00:17.311 --> 00:00:17.810
All right.

00:00:17.810 --> 00:00:20.268
We're going to cover the basics
of how interstitial ads fit

00:00:20.268 --> 00:00:22.750
into apps, and then we'll code
up a sample implementation

00:00:22.750 --> 00:00:25.100
in iOS and Android.

00:00:25.100 --> 00:00:27.530
Now, most of you are probably
familiar with banner ads.

00:00:27.530 --> 00:00:29.740
They occupy a little
spot in a viewer activity

00:00:29.740 --> 00:00:31.530
and stay visible while
the user interacts

00:00:31.530 --> 00:00:32.930
with the rest of the UI.

00:00:32.930 --> 00:00:34.330
Interstitials, on
the other hand,

00:00:34.330 --> 00:00:36.970
appear briefly in
between user interactions

00:00:36.970 --> 00:00:39.510
and they use all of a
device's screen space.

00:00:39.510 --> 00:00:44.890
So instead of this, the user
sees something like this.

00:00:44.890 --> 00:00:45.919
That's an interstitial.

00:00:45.919 --> 00:00:48.210
The user can spend a second
or two considering the ad's

00:00:48.210 --> 00:00:50.460
message, and either tap on
the ad to click through,

00:00:50.460 --> 00:00:53.420
or use the Close button at
the top to return to the app.

00:00:53.420 --> 00:00:54.952
So that's the basic idea.

00:00:54.952 --> 00:00:56.660
Now, one other thing
I want to talk about

00:00:56.660 --> 00:00:58.410
before we get to
implementation is

00:00:58.410 --> 00:01:00.720
how requests for
interstitials work.

00:01:00.720 --> 00:01:02.650
Requests for banners
are synchronous.

00:01:02.650 --> 00:01:05.920
That means the usual
pattern goes like this.

00:01:05.920 --> 00:01:07.710
You create an ad view.

00:01:07.710 --> 00:01:09.619
You call its method
to load an ad.

00:01:09.619 --> 00:01:11.660
And then when the response
comes from the server,

00:01:11.660 --> 00:01:14.410
it's immediately
displayed in the ad view.

00:01:14.410 --> 00:01:16.180
Interstitials are
a little different.

00:01:16.180 --> 00:01:17.910
Because they cover
the entire UI,

00:01:17.910 --> 00:01:20.750
you don't just want to toss them
on screen whenever they load.

00:01:20.750 --> 00:01:23.030
Instead, you request
them in advance.

00:01:23.030 --> 00:01:26.190
And then when the moment's
right, that's when you display.

00:01:26.190 --> 00:01:29.050
So their request
flow looks like this.

00:01:29.050 --> 00:01:31.570
You construct an
interstitial ad object, call

00:01:31.570 --> 00:01:33.080
a method to load an ad.

00:01:33.080 --> 00:01:34.860
Then when you're
ready, you check

00:01:34.860 --> 00:01:37.540
to make sure it's
loaded, and display.

00:01:37.540 --> 00:01:38.140
All right.

00:01:38.140 --> 00:01:41.050
With that in mind,
let's get to some code.

00:01:41.050 --> 00:01:41.550
All right.

00:01:41.550 --> 00:01:43.550
So here I am in Xcode
with my app right there.

00:01:43.550 --> 00:01:45.049
It's really simple
and I'd just like

00:01:45.049 --> 00:01:47.660
to show an interstitial
when I hit that button.

00:01:47.660 --> 00:01:49.250
And here are the steps to do so.

00:01:49.250 --> 00:01:52.040
First, I need to create
a GADInterstitial object.

00:01:52.040 --> 00:01:54.940
Then I'll request an ad for
it, wait for the right moment,

00:01:54.940 --> 00:01:58.371
check to make sure it's
loaded, and display.

00:01:58.371 --> 00:02:00.870
So first I'm going to add an
import statement for the Google

00:02:00.870 --> 00:02:03.336
Mobile Ads SDK to my
view controller code.

00:02:03.336 --> 00:02:04.704
There we go.

00:02:04.704 --> 00:02:07.581
And I'm going to come down
here and add a new property

00:02:07.581 --> 00:02:08.539
for my GADInterstitial.

00:02:14.690 --> 00:02:18.420
I forgot to make it a pointer.

00:02:18.420 --> 00:02:20.160
There we go.

00:02:20.160 --> 00:02:24.971
Now I need to initialize it,
which I'll do in viewDidLoad.

00:02:24.971 --> 00:02:27.470
And this is a long statement,
but once I get this typed out,

00:02:27.470 --> 00:02:29.730
you'll see that the initializer
takes an ad unit ID.

00:02:35.290 --> 00:02:37.890
Ad units are created
at apps.admob.com.

00:02:37.890 --> 00:02:40.330
And you'll want a unique one
for each spot in your app

00:02:40.330 --> 00:02:42.240
where you show interstitials.

00:02:42.240 --> 00:02:45.260
That way you control things
like mediation and campaigns

00:02:45.260 --> 00:02:46.350
independently.

00:02:46.350 --> 00:02:48.266
So there we go.

00:02:48.266 --> 00:02:49.640
So now my
interstitial's created,

00:02:49.640 --> 00:02:52.160
so I need to request an ad.

00:02:52.160 --> 00:02:55.170
And the first step is to build
a GADRequest object, which

00:02:55.170 --> 00:02:57.850
I can do by calling the static
request method in GADRequest.

00:03:02.786 --> 00:03:04.160
And once I've done
that, I'm also

00:03:04.160 --> 00:03:06.270
going to give it
the simulator's ID

00:03:06.270 --> 00:03:08.620
to make sure that I get
test ads while I'm testing.

00:03:08.620 --> 00:03:09.550
It's very important.

00:03:09.550 --> 00:03:11.230
You should always,
always use test ads

00:03:11.230 --> 00:03:13.870
when you're testing your app.

00:03:13.870 --> 00:03:15.670
Perfect.

00:03:15.670 --> 00:03:16.260
All right.

00:03:16.260 --> 00:03:18.860
Now I just need to call my
GADInterstitials load request

00:03:18.860 --> 00:03:21.200
method, pass it the
request object I just made,

00:03:21.200 --> 00:03:22.230
and I'm all set.

00:03:26.210 --> 00:03:26.710
Cool.

00:03:26.710 --> 00:03:28.920
So the next step is to
wait until the right moment

00:03:28.920 --> 00:03:31.184
in the flow of the app
and then try and display.

00:03:31.184 --> 00:03:33.100
We're going to talk a
lot more about this step

00:03:33.100 --> 00:03:35.630
and how to pick that right
moment in our next video.

00:03:35.630 --> 00:03:37.730
Today though, since I'm
just using a button press,

00:03:37.730 --> 00:03:40.560
waiting for the event
sort of does that for me.

00:03:40.560 --> 00:03:42.790
That means it's on
to the last steps.

00:03:42.790 --> 00:03:45.400
And I just need to add code
to my didReceiveTap method

00:03:45.400 --> 00:03:49.870
to check if the interstitial has
loaded, and if so, display it.

00:03:49.870 --> 00:03:52.600
So you can check to see if your
ad has loaded with the IsReady

00:03:52.600 --> 00:03:53.100
method.

00:03:53.100 --> 00:03:56.120
So I'll use that for
my conditional here.

00:03:56.120 --> 00:03:57.850
And then to display
the ad, I just call

00:03:57.850 --> 00:04:00.680
presentFromRoot ViewController,,
which in this case

00:04:00.680 --> 00:04:04.948
is the current class,
so I can use self.

00:04:04.948 --> 00:04:07.190
Cool.

00:04:07.190 --> 00:04:09.718
Let's make sure everything
builds just fine.

00:04:09.718 --> 00:04:11.140
There we go.

00:04:13.990 --> 00:04:16.100
And hit the button.

00:04:16.100 --> 00:04:17.649
And there's my test ad.

00:04:17.649 --> 00:04:19.579
Perfect.

00:04:19.579 --> 00:04:20.079
All right.

00:04:20.079 --> 00:04:22.700
So we created a GADInterstitial,
requested an ad,

00:04:22.700 --> 00:04:25.410
waited for the right time,
checked, and displayed.

00:04:25.410 --> 00:04:27.186
Job done.

00:04:27.186 --> 00:04:29.810
So that's a basic example of how
to get an interstitial working

00:04:29.810 --> 00:04:30.800
in iOS.

00:04:30.800 --> 00:04:32.990
Now let's take a look at
interstitials in Android.

00:04:32.990 --> 00:04:36.111
As you'll see, it's the same
steps in a different language.

00:04:36.111 --> 00:04:36.610
All right.

00:04:36.610 --> 00:04:37.901
So here I am in Android Studio.

00:04:37.901 --> 00:04:38.630
I've got my app.

00:04:38.630 --> 00:04:39.560
It's got a single button.

00:04:39.560 --> 00:04:41.310
And I'd like to display
an interstitial ad

00:04:41.310 --> 00:04:43.340
when somebody taps on it.

00:04:43.340 --> 00:04:45.210
And here are the steps
to make that happen.

00:04:45.210 --> 00:04:47.620
First, I'm going to create
an interstitial ad object.

00:04:47.620 --> 00:04:50.540
Then I'll request an ad for it,
wait until the right moment,

00:04:50.540 --> 00:04:53.460
check that it's
loaded, and display.

00:04:53.460 --> 00:04:53.960
All right.

00:04:53.960 --> 00:04:56.560
So in my activity, I'll just
drop in a new private member

00:04:56.560 --> 00:04:58.120
to hold my
interstitial ad object.

00:05:00.940 --> 00:05:02.910
There we go.

00:05:02.910 --> 00:05:07.160
And then I'll construct it
inside my onCreate method here.

00:05:07.160 --> 00:05:10.690
Note that interstitials require
a context in their constructor,

00:05:10.690 --> 00:05:12.810
but since I'm in Activity,
I can just use this.

00:05:15.180 --> 00:05:15.680
Cool.

00:05:15.680 --> 00:05:18.240
And last thing, I just need
to give it an ad unit ID.

00:05:18.240 --> 00:05:20.610
You can make your own ad
units at apps.admob.com.

00:05:20.610 --> 00:05:22.345
And it's always a
good idea to have

00:05:22.345 --> 00:05:24.170
a unique one for each
place in your app

00:05:24.170 --> 00:05:26.711
where you show an interstitial
so that you can configure them

00:05:26.711 --> 00:05:28.920
independently.

00:05:28.920 --> 00:05:29.420
All right.

00:05:29.420 --> 00:05:33.410
So creating object's done and
now I need to request an ad.

00:05:33.410 --> 00:05:35.140
Just like with banners,
to request an ad,

00:05:35.140 --> 00:05:40.773
I'll need an ad request
object, so I'll make a builder.

00:05:40.773 --> 00:05:42.240
There we go.

00:05:42.240 --> 00:05:44.940
And I'm going to enter the
emulator as a test device

00:05:44.940 --> 00:05:46.670
to make sure that
I get test ads.

00:05:46.670 --> 00:05:49.080
Remember, always,
always use test ads

00:05:49.080 --> 00:05:50.190
when testing your stuff.

00:05:53.030 --> 00:05:55.286
There's the constant.

00:05:55.286 --> 00:05:57.785
And the I just called the build
method to get my ad request.

00:06:01.280 --> 00:06:01.780
All right.

00:06:01.780 --> 00:06:02.710
Ad request in hand.

00:06:02.710 --> 00:06:05.660
I just need to call the
interstitial ads loadAd method,

00:06:05.660 --> 00:06:08.674
and that'll kick off the load.

00:06:08.674 --> 00:06:09.710
Cool.

00:06:09.710 --> 00:06:10.210
All right.

00:06:10.210 --> 00:06:12.252
So step three is waiting
until the right moment.

00:06:12.252 --> 00:06:14.210
And we're going to spend
more time on this step

00:06:14.210 --> 00:06:16.635
and how to pick that right
moment in our next video,

00:06:16.635 --> 00:06:18.510
but for this example,
I'm just using a button

00:06:18.510 --> 00:06:20.070
to keep things
simple, so waiting

00:06:20.070 --> 00:06:23.815
for the event to fire
kind of does that for me.

00:06:23.815 --> 00:06:25.440
So that brings me to
the last two steps

00:06:25.440 --> 00:06:27.380
then, which are checking
that the ad is loaded

00:06:27.380 --> 00:06:28.270
and displaying.

00:06:28.270 --> 00:06:31.980
And I'll handle those right
in my onclick handler.

00:06:31.980 --> 00:06:33.660
To check if an
interstitial has loaded,

00:06:33.660 --> 00:06:35.320
you can call the
isLoaded method.

00:06:35.320 --> 00:06:38.550
So I'll put that
in my conditional.

00:06:38.550 --> 00:06:40.635
And then to display, I
just need to call show.

00:06:43.671 --> 00:06:44.170
All right.

00:06:44.170 --> 00:06:48.390
Let me run this bad boy
and see what happens.

00:06:48.390 --> 00:06:50.302
And it's running.

00:06:50.302 --> 00:06:52.830
Get a click on here,
and there's my test ad.

00:06:52.830 --> 00:06:54.620
Perfect.

00:06:54.620 --> 00:06:55.120
All right.

00:06:55.120 --> 00:06:56.494
So here are the
steps once again.

00:06:56.494 --> 00:06:59.130
I created an interstitial
ad object, requested an ad,

00:06:59.130 --> 00:07:02.030
waited for the right moment,
checked, and displayed.

00:07:02.030 --> 00:07:04.200
Job done.

00:07:04.200 --> 00:07:06.670
So now we've got a working
ad in both iOS and Android,

00:07:06.670 --> 00:07:08.295
but there's a lot
more to interstitials

00:07:08.295 --> 00:07:09.839
that we haven't
had time to cover.

00:07:09.839 --> 00:07:12.130
Things like how to load a
new interstitial after you've

00:07:12.130 --> 00:07:14.100
finished displaying
the previous one,

00:07:14.100 --> 00:07:15.860
how to pause and resume
game loops so you

00:07:15.860 --> 00:07:19.220
can avoid wasting CPU cycles,
and when's the best time

00:07:19.220 --> 00:07:20.101
show an ad?

00:07:20.101 --> 00:07:22.600
We're going to spend some time
on those in our next episode,

00:07:22.600 --> 00:07:24.150
so be on the lookout for it.

00:07:24.150 --> 00:07:26.570
In the meantime, I've
got some links for you.

00:07:26.570 --> 00:07:29.600
You can check out our guides
for interstitials on both OSes.

00:07:29.600 --> 00:07:31.800
And you can get example
code from our GitHub repos,

00:07:31.800 --> 00:07:35.700
or by using Android Studio's
Import a Sample option.

00:07:35.700 --> 00:07:37.610
You might also like
AdMob's No Nonsense

00:07:37.610 --> 00:07:39.300
Guide to App Monetization.

00:07:39.300 --> 00:07:41.260
It's an overview of
monetization strategies

00:07:41.260 --> 00:07:44.102
that includes code and
tips from other engineers.

00:07:44.102 --> 00:07:46.310
As always, if you've got a
technical question related

00:07:46.310 --> 00:07:48.920
to anything you've just seen,
stop by our support forum.

00:07:48.920 --> 00:07:51.130
And if you've got a question
about this video series,

00:07:51.130 --> 00:07:53.240
or a tip on something
you'd like us to cover,

00:07:53.240 --> 00:07:54.320
leave a comment below.

00:07:54.320 --> 00:07:56.080
And Gary and I will
see you next time.

00:07:56.080 --> 00:07:59.430
[MUSIC PLAYING]

