WEBVTT
Kind: captions
Language: en

00:00:12.275 --> 00:00:15.712
[APPLAUSE]

00:00:15.712 --> 00:00:17.690
ALLEN HUANG: Hi guys.

00:00:17.690 --> 00:00:18.310
Hi everyone.

00:00:18.310 --> 00:00:19.280
My name is Allen Huang.

00:00:19.280 --> 00:00:21.320
I'm a Product Manager
on the Android TV Team.

00:00:21.320 --> 00:00:23.890
And this is John Affaki, one
of the Engineering Managers

00:00:23.890 --> 00:00:26.030
on the Google Cast Team.

00:00:26.030 --> 00:00:27.740
So today we're
here to talk to you

00:00:27.740 --> 00:00:31.067
about developing compelling
applications for the home,

00:00:31.067 --> 00:00:32.400
particularly in the living room.

00:00:32.400 --> 00:00:35.040
Hopefully you guys are
all in the right place.

00:00:35.040 --> 00:00:37.400
So over the past
couple years, Google

00:00:37.400 --> 00:00:39.640
has been building out
an ecosystem of devices

00:00:39.640 --> 00:00:42.650
to make it just easier for
you to take your existing apps

00:00:42.650 --> 00:00:45.220
and extend them to all
living room devices.

00:00:45.220 --> 00:00:48.440
So we started with the launch of
Chromecast, the first endpoint

00:00:48.440 --> 00:00:50.506
of Google Cast.

00:00:50.506 --> 00:00:53.280
So Google Cast has since
extended to the Android TV

00:00:53.280 --> 00:00:56.260
platform, a platform we've
built that extends Android

00:00:56.260 --> 00:00:58.850
to smart TVs and set-top boxes.

00:00:58.850 --> 00:01:01.020
And finally, Google
Cast for audio,

00:01:01.020 --> 00:01:04.989
which extends the reach of apps
beyond televisions and just two

00:01:04.989 --> 00:01:07.390
speakers.

00:01:07.390 --> 00:01:09.849
So then we'll talk a little
bit about the opportunity space

00:01:09.849 --> 00:01:12.306
and why you should be paying
attention at all to the living

00:01:12.306 --> 00:01:12.860
room.

00:01:12.860 --> 00:01:14.440
Hopefully it's not
a huge surprise,

00:01:14.440 --> 00:01:17.740
but good to go over that.

00:01:17.740 --> 00:01:19.360
We'll then move
on to the anatomy

00:01:19.360 --> 00:01:21.700
of Android TV and
Cast applications,

00:01:21.700 --> 00:01:24.000
how to build them,
and how we're trying

00:01:24.000 --> 00:01:26.722
to make it as easy as
possible for you guys.

00:01:26.722 --> 00:01:28.430
And then finally,
we'll talk about making

00:01:28.430 --> 00:01:30.430
your app more discoverable
and just ways for you

00:01:30.430 --> 00:01:33.060
guys to increase engagement.

00:01:33.060 --> 00:01:38.831
All right, so let's-- All
right, so-- sorry about that.

00:01:38.831 --> 00:01:40.330
So let's start with
what we're doing

00:01:40.330 --> 00:01:42.620
and what our goals are
in the living room.

00:01:42.620 --> 00:01:45.160
So we want to enable
sort of rich experiences

00:01:45.160 --> 00:01:47.915
on the wide range of home
entertainment devices,

00:01:47.915 --> 00:01:50.290
but yet we don't want to be
another attempt at the living

00:01:50.290 --> 00:01:50.470
room.

00:01:50.470 --> 00:01:52.511
A lot of people have tried
different things here,

00:01:52.511 --> 00:01:55.077
and it can be tough.

00:01:55.077 --> 00:01:56.660
And we want to make
it easier for you.

00:01:56.660 --> 00:01:59.480
So we understand that not
every user is the same.

00:01:59.480 --> 00:02:02.210
Their homes, living rooms,
their setups are very different.

00:02:02.210 --> 00:02:04.339
And hardware manufacturers
manufacture a lot

00:02:04.339 --> 00:02:05.630
of different types of products.

00:02:05.630 --> 00:02:07.213
So we think that
it's really important

00:02:07.213 --> 00:02:11.009
to give both users and
consumers, OEMs and developers

00:02:11.009 --> 00:02:15.080
different options to get
into the living room.

00:02:15.080 --> 00:02:18.510
So in order to recycle, we built
out Google Cast and Android TV.

00:02:18.510 --> 00:02:20.410
So these are two
complementary ways

00:02:20.410 --> 00:02:23.260
to build applications
for your users.

00:02:23.260 --> 00:02:25.800
Both take advantage of the
work that you've already done,

00:02:25.800 --> 00:02:29.120
particularly on mobile, and on
your existing phone and tablet

00:02:29.120 --> 00:02:31.915
apps to bring that to the full
living room device ecosystem.

00:02:35.030 --> 00:02:36.920
So for those of you
that don't know,

00:02:36.920 --> 00:02:38.450
Chromecast is a
small HDMI dongle.

00:02:38.450 --> 00:02:42.580
It enables any television,
whether it's smart or it's not,

00:02:42.580 --> 00:02:44.770
to run applications
and to get your content

00:02:44.770 --> 00:02:45.995
onto the big screen.

00:02:45.995 --> 00:02:48.120
And it does so by extending
your mobile application

00:02:48.120 --> 00:02:50.770
so that it's communicating
with the television.

00:02:50.770 --> 00:02:53.360
All the interaction happens
on your phone or your tablet

00:02:53.360 --> 00:02:55.160
or even your web
browser, and you

00:02:55.160 --> 00:02:57.720
can build where you're
building the rich interactive

00:02:57.720 --> 00:02:59.800
experiences and you're
not intruding on what's

00:02:59.800 --> 00:03:01.280
going to be on screen.

00:03:01.280 --> 00:03:03.730
So we've been really happy
with the success of Chromecast.

00:03:03.730 --> 00:03:06.070
In fact, it was the number
one selling streaming device

00:03:06.070 --> 00:03:08.220
last year, outselling
all other devices

00:03:08.220 --> 00:03:10.870
in that category combined.

00:03:10.870 --> 00:03:13.270
So we attribute a
lot of that success

00:03:13.270 --> 00:03:15.490
to just how simple the
interaction model is.

00:03:15.490 --> 00:03:17.790
People are already familiar
with using these apps

00:03:17.790 --> 00:03:20.170
on their phones, using
them all the time.

00:03:20.170 --> 00:03:22.002
And we take advantage
of that users

00:03:22.002 --> 00:03:23.460
are going to be
familiar with that,

00:03:23.460 --> 00:03:27.692
and that you just cast
that to the big screen.

00:03:27.692 --> 00:03:29.400
So with the launch of
Chromecast our goal

00:03:29.400 --> 00:03:31.480
was to introduce that
interaction to the world,

00:03:31.480 --> 00:03:33.302
and it's really taken off.

00:03:33.302 --> 00:03:35.260
Users are clicking that
Cast button like crazy.

00:03:35.260 --> 00:03:38.260
So over one and a half
billion times just

00:03:38.260 --> 00:03:40.150
on the Chromecast device itself.

00:03:40.150 --> 00:03:46.770
And since launch, the overall
use per device is up 66%.

00:03:46.770 --> 00:03:48.570
So given the way
Google works, we

00:03:48.570 --> 00:03:49.930
think a lot about ecosystems.

00:03:49.930 --> 00:03:52.020
We wanted to open up
that functionality

00:03:52.020 --> 00:03:54.200
and extend it to different
device manufacturers

00:03:54.200 --> 00:03:58.524
so we could create this
Google Cast ecosystem.

00:03:58.524 --> 00:04:00.190
So the other device
ecosystem that we'll

00:04:00.190 --> 00:04:03.110
be talking about today
and that Google is driving

00:04:03.110 --> 00:04:05.910
and we've been doing for
several years now is Android.

00:04:05.910 --> 00:04:08.930
So at Google I/O last year
we launched the Android TV

00:04:08.930 --> 00:04:13.240
platform which brings
together Cast, Play,

00:04:13.240 --> 00:04:16.420
and traditional television,
and we extend Android

00:04:16.420 --> 00:04:18.040
to these new form factors.

00:04:18.040 --> 00:04:20.709
So we're extending Android
to several form factors.

00:04:20.709 --> 00:04:24.030
We talked about cars and
watches last year as well,

00:04:24.030 --> 00:04:27.420
and running that
connection across all

00:04:27.420 --> 00:04:29.780
of these different
types of devices.

00:04:29.780 --> 00:04:32.440
So by doing this, people
are already familiar

00:04:32.440 --> 00:04:34.580
with Android, both
the combination

00:04:34.580 --> 00:04:36.740
of how to develop
for the platform,

00:04:36.740 --> 00:04:38.480
as well as how you deploy apps.

00:04:38.480 --> 00:04:40.410
And so we're just
extending that.

00:04:40.410 --> 00:04:41.830
When we talk about
making it easy,

00:04:41.830 --> 00:04:43.040
that's really what
we're trying to do.

00:04:43.040 --> 00:04:44.930
You're already familiar
with all of those things,

00:04:44.930 --> 00:04:47.290
so we just want to extend
that to all the different form

00:04:47.290 --> 00:04:47.790
factors.

00:04:50.309 --> 00:04:52.100
Since the launch of
the platform last year,

00:04:52.100 --> 00:04:53.590
we launched the
Nexus Player device

00:04:53.590 --> 00:04:56.950
for Android TV back
in November and that

00:04:56.950 --> 00:04:57.950
was really just a start.

00:04:57.950 --> 00:05:01.630
We're seeing a lot more
smart TVs and set-top boxes

00:05:01.630 --> 00:05:03.130
that are launching this year.

00:05:03.130 --> 00:05:06.250
So just this month, Sony
launched their 2015 line

00:05:06.250 --> 00:05:09.480
of Bravia television, so you
can find in store now running

00:05:09.480 --> 00:05:10.050
Android TV.

00:05:10.050 --> 00:05:11.820
And then NVIDIA and
Razer have launched

00:05:11.820 --> 00:05:14.340
their new entertainment devices.

00:05:14.340 --> 00:05:16.200
We've also seen pay
TV operator, so these

00:05:16.200 --> 00:05:21.192
are the boxes that deliver
paid TV content into homes.

00:05:21.192 --> 00:05:23.150
Several of them are
launching around the world,

00:05:23.150 --> 00:05:26.480
and there's more coming.

00:05:26.480 --> 00:05:29.600
On the app side, we're seeing
a lot of new apps coming

00:05:29.600 --> 00:05:30.930
to the platform.

00:05:30.930 --> 00:05:35.060
Both traditional names from more
traditional TV like CBS, FOX

00:05:35.060 --> 00:05:37.350
and HBO, as well as
streaming content

00:05:37.350 --> 00:05:39.380
from like Vimeo and EPIX.

00:05:39.380 --> 00:05:42.810
So all of these partners,
both across apps and hardware,

00:05:42.810 --> 00:05:46.250
they share this vision that we
have of better living room user

00:05:46.250 --> 00:05:46.840
experience.

00:05:46.840 --> 00:05:49.870
I think all of us have
suffered through just

00:05:49.870 --> 00:05:53.630
lots of remote controls
or difficult TV UI,

00:05:53.630 --> 00:05:55.820
and we want to do better.

00:05:55.820 --> 00:05:58.730
And not only that, we want to
take the existing experience

00:05:58.730 --> 00:06:01.180
of traditional television
and merge that seamlessly

00:06:01.180 --> 00:06:04.640
with the open apps
and games ecosystem.

00:06:04.640 --> 00:06:07.700
So beyond native apps and
games, every Android TV

00:06:07.700 --> 00:06:09.570
also supports Cast.

00:06:09.570 --> 00:06:12.020
Which means that all the apps
that you guys have already

00:06:12.020 --> 00:06:14.330
built for Chromecast, they'll
just work on Android TV.

00:06:14.330 --> 00:06:16.788
You'll be able to Cast to them
without any additional work.

00:06:19.720 --> 00:06:22.050
So we love watching
TV and playing games

00:06:22.050 --> 00:06:25.100
on the big screen,
but home entertainment

00:06:25.100 --> 00:06:27.090
goes beyond displays.

00:06:27.090 --> 00:06:29.350
So earlier this year
at CS, we announced

00:06:29.350 --> 00:06:31.830
the Google Cast for
audio program, which

00:06:31.830 --> 00:06:34.100
extends that Cast ecosystem
that we've talked about,

00:06:34.100 --> 00:06:35.490
to speakers and sound bars.

00:06:35.490 --> 00:06:37.340
And again, there's
just no modifications

00:06:37.340 --> 00:06:41.450
needed to take your app and
bring it to these new devices.

00:06:41.450 --> 00:06:45.030
So Sony and LG were the first
to launch their speakers,

00:06:45.030 --> 00:06:46.810
but as with Android
TV devices we

00:06:46.810 --> 00:06:49.730
have many more announced
and many more coming.

00:06:49.730 --> 00:06:53.350
We have over 17 million
Chromecast devices out there

00:06:53.350 --> 00:06:54.980
and expect to have
tens of millions

00:06:54.980 --> 00:06:56.801
of Cast-enabled
devices and Android TVs

00:06:56.801 --> 00:06:57.800
by the end of this year.

00:07:00.820 --> 00:07:02.420
So with Android TV
and Google Cast,

00:07:02.420 --> 00:07:04.410
there really isn't
a room in the house

00:07:04.410 --> 00:07:06.250
that you as developers
can't reach.

00:07:08.724 --> 00:07:10.140
All right, so why
should you care?

00:07:10.140 --> 00:07:12.340
We have these solutions
that we just talked about,

00:07:12.340 --> 00:07:16.230
but what problem are
we trying to solve?

00:07:16.230 --> 00:07:19.720
So first off on stats, there
are 200 million new televisions

00:07:19.720 --> 00:07:21.709
sold every year worldwide.

00:07:21.709 --> 00:07:23.750
And not only that, there
are a lot of televisions

00:07:23.750 --> 00:07:26.490
already out there, somewhere
around two billion of them

00:07:26.490 --> 00:07:28.300
by our estimates.

00:07:28.300 --> 00:07:30.780
The majority of them don't
have internet connectivity,

00:07:30.780 --> 00:07:32.720
which means they
don't have any ability

00:07:32.720 --> 00:07:34.820
to do much beyond
receiving a signal

00:07:34.820 --> 00:07:38.200
and putting it back on screen.

00:07:38.200 --> 00:07:39.830
People use them a ton, though.

00:07:39.830 --> 00:07:41.690
In the US they're
on for an average

00:07:41.690 --> 00:07:44.160
of about five hours a day.

00:07:44.160 --> 00:07:46.860
And they're, right
now, using them for,

00:07:46.860 --> 00:07:49.250
well, call traditional
TV, watching whether it's

00:07:49.250 --> 00:07:52.759
through a paid TV box or over
there through the antenna,

00:07:52.759 --> 00:07:54.550
or they're playing
games on their consoles.

00:07:57.380 --> 00:07:59.450
Beyond this
traditional television,

00:07:59.450 --> 00:08:03.340
though, streaming video has
been growing like gangbusters.

00:08:03.340 --> 00:08:06.140
And what we found is that
rather than cannibalizing

00:08:06.140 --> 00:08:08.160
that traditional
television watch time,

00:08:08.160 --> 00:08:09.820
people are just
watching more content.

00:08:09.820 --> 00:08:11.403
They have so many
choices now, they're

00:08:11.403 --> 00:08:12.830
just watching more
and more stuff,

00:08:12.830 --> 00:08:17.370
being entertained in new
and more delightful ways.

00:08:17.370 --> 00:08:20.320
And they're mixing both
of these two things.

00:08:20.320 --> 00:08:23.780
For many families, sitting down
around the big screen to watch,

00:08:23.780 --> 00:08:25.640
whether it's sporting
events-- go Warriors

00:08:25.640 --> 00:08:28.770
if there's any Warrior
fans out there-- not

00:08:28.770 --> 00:08:32.289
very many I guess--
their favorite sitcoms

00:08:32.289 --> 00:08:36.110
or torturing themselves watching
the Kardashians-- that guy--

00:08:36.110 --> 00:08:39.690
is a very social event.

00:08:39.690 --> 00:08:41.429
YouTube, Netflix
and Hulu are also

00:08:41.429 --> 00:08:43.585
products that just have
become household names

00:08:43.585 --> 00:08:46.210
in the streaming space, and this
started on desktop and mobile.

00:08:46.210 --> 00:08:48.290
But it only makes
sense that they're also

00:08:48.290 --> 00:08:50.670
going to be on the TV screen.

00:08:50.670 --> 00:08:52.850
So if you have an application
that delivers content

00:08:52.850 --> 00:08:54.760
there's great
opportunity for you here,

00:08:54.760 --> 00:08:56.530
and hopefully that's
why you're all here.

00:08:56.530 --> 00:08:57.750
So here's some
data that we found

00:08:57.750 --> 00:08:59.041
to illustrate that opportunity.

00:09:01.620 --> 00:09:08.380
So we see a 45% increase in
overall watch time on YouTube

00:09:08.380 --> 00:09:12.280
across all devices for users who
start casting to a Chromecast.

00:09:12.280 --> 00:09:13.990
So that's a little
bit of a mouthful.

00:09:13.990 --> 00:09:17.560
So what we're finding is
that overall YouTube usage

00:09:17.560 --> 00:09:19.540
across whatever form
factors, once someone

00:09:19.540 --> 00:09:22.210
has gotten a Chromecast
usage starts increasing.

00:09:22.210 --> 00:09:24.990
And there's three reasons
that we've attributed to that.

00:09:24.990 --> 00:09:29.740
So first is when you share the
experience of a music video,

00:09:29.740 --> 00:09:32.590
it's so much easier
on a television

00:09:32.590 --> 00:09:35.514
than when you're all going
to be crowded around a phone.

00:09:35.514 --> 00:09:36.930
The second is that
if you're going

00:09:36.930 --> 00:09:39.469
to watch extended
amounts of anything

00:09:39.469 --> 00:09:41.760
it's just like easier if
you're going to do around a TV

00:09:41.760 --> 00:09:44.800
rather than on a mobile device.

00:09:44.800 --> 00:09:49.410
And the third is that
watching it on a TV

00:09:49.410 --> 00:09:52.270
enables scenarios like
party queues for example,

00:09:52.270 --> 00:09:54.230
where everyone can
sort of queue up

00:09:54.230 --> 00:09:55.610
different content
for the screen.

00:09:55.610 --> 00:10:00.160
And these things just aren't
possible on a mobile device.

00:10:00.160 --> 00:10:02.550
The other thing that we
found is that the bigger

00:10:02.550 --> 00:10:05.140
the screen size the more
time people spend on them.

00:10:05.140 --> 00:10:08.576
And this applies to both
Cast and Android TV.

00:10:08.576 --> 00:10:10.450
At the rate cell phones
are growing, however,

00:10:10.450 --> 00:10:13.620
so next year's 75" Nexus
phone might be the most

00:10:13.620 --> 00:10:14.870
engaging screen in your house.

00:10:14.870 --> 00:10:16.100
You didn't hear that here.

00:10:16.100 --> 00:10:17.521
And that was also a joke.

00:10:17.521 --> 00:10:19.730
[LAUGHTER]

00:10:19.730 --> 00:10:22.840
Please don't tweet that.

00:10:22.840 --> 00:10:24.585
AUDIENCE: [INAUDIBLE].

00:10:24.585 --> 00:10:26.740
ALLEN HUANG: 100" Nexus phone.

00:10:26.740 --> 00:10:29.242
Starting with your existing
Android or iOS application

00:10:29.242 --> 00:10:30.700
and leveraging a
big screen, you're

00:10:30.700 --> 00:10:32.575
going to increase
engagement, which will just

00:10:32.575 --> 00:10:34.684
increase the overall
opportunities and revenue

00:10:34.684 --> 00:10:35.850
opportunities that you have.

00:10:40.500 --> 00:10:42.430
So given that streaming
and digital downloads

00:10:42.430 --> 00:10:44.980
is how most people are
enjoying their music today,

00:10:44.980 --> 00:10:47.280
it's surprising we
haven't seen that much

00:10:47.280 --> 00:10:50.220
of an evolution in how people
are listening to music.

00:10:50.220 --> 00:10:51.920
So in the US,
people are listening

00:10:51.920 --> 00:10:55.420
to an average of about four
hours per day of audio.

00:10:55.420 --> 00:10:58.872
So that's quite a lot
combined with that TV figure.

00:10:58.872 --> 00:11:00.330
So headphones are
great when you're

00:11:00.330 --> 00:11:02.010
listening to music on a bus.

00:11:02.010 --> 00:11:04.250
But in the home it
doesn't really make sense.

00:11:04.250 --> 00:11:05.940
You want to be
more unencumbered.

00:11:05.940 --> 00:11:07.780
And so Bluetooth and
Bluetooth speakers

00:11:07.780 --> 00:11:09.160
have started to bridge
that gap and you're

00:11:09.160 --> 00:11:10.660
starting to see
some change in that,

00:11:10.660 --> 00:11:14.400
but they're still pretty
significant drawbacks there.

00:11:14.400 --> 00:11:17.440
Besides the lower audio
quality that you get from it,

00:11:17.440 --> 00:11:19.650
it relies on the smarts
being all on your phone

00:11:19.650 --> 00:11:21.230
or on your mobile device.

00:11:21.230 --> 00:11:24.442
It has to be on, it
has to be within range.

00:11:24.442 --> 00:11:26.650
So with Google Cast for
audio, all of that processing

00:11:26.650 --> 00:11:28.580
happens on the Cast device.

00:11:28.580 --> 00:11:30.670
So you can throw your
phone out the window.

00:11:30.670 --> 00:11:32.060
Please don't actually do that.

00:11:32.060 --> 00:11:37.809
And any other device can now
pick up and control that music.

00:11:37.809 --> 00:11:39.850
So you can create really
interesting applications

00:11:39.850 --> 00:11:42.010
here like virtual
DJs where everyone

00:11:42.010 --> 00:11:44.880
puts their favorite songs
on, or build features

00:11:44.880 --> 00:11:47.600
that take advantage of the
mobile device and drive

00:11:47.600 --> 00:11:51.300
revenue, such as interactive
or contextual ads.

00:11:51.300 --> 00:11:52.860
So all of your
favorite music apps

00:11:52.860 --> 00:11:55.144
available in Cast just
work on Cast speakers.

00:11:55.144 --> 00:11:57.060
So you can take your
Pandora, your Google Play

00:11:57.060 --> 00:11:59.500
Music, your iHeartradio
to that next level.

00:12:02.140 --> 00:12:05.780
So we talked about building out
that ecosystem and why we think

00:12:05.780 --> 00:12:07.135
there's an opportunity here.

00:12:07.135 --> 00:12:08.650
But a lot of people
have tried this.

00:12:08.650 --> 00:12:10.130
A lot of different
companies have

00:12:10.130 --> 00:12:13.040
tried to introduce
custom development models

00:12:13.040 --> 00:12:15.307
and enforcing
developers to build

00:12:15.307 --> 00:12:17.640
these apps that will really
only work in a single device

00:12:17.640 --> 00:12:19.220
ecosystem.

00:12:19.220 --> 00:12:21.760
This has led to a
lot of fragmentation,

00:12:21.760 --> 00:12:23.780
both in the development
platform, as well

00:12:23.780 --> 00:12:25.910
as the payment platforms.

00:12:25.910 --> 00:12:28.220
And the challenge that we
see is that it's really

00:12:28.220 --> 00:12:29.800
stifling to innovation.

00:12:29.800 --> 00:12:35.480
We see it like smartphones
before Android and iOS.

00:12:35.480 --> 00:12:38.010
What's happening is that
instead of really focusing

00:12:38.010 --> 00:12:39.960
on building amazing
experiences, you're

00:12:39.960 --> 00:12:41.174
more worried about oh, shoot.

00:12:41.174 --> 00:12:42.590
How am I going to
get this service

00:12:42.590 --> 00:12:45.580
on these types of devices
and this type of device

00:12:45.580 --> 00:12:49.560
and 20 other platforms
that are out there.

00:12:49.560 --> 00:12:51.699
And not only that, a lot
of these new platforms,

00:12:51.699 --> 00:12:52.990
you have to start from scratch.

00:12:52.990 --> 00:12:54.490
It's something
completely unfamiliar

00:12:54.490 --> 00:12:56.310
for a lot of developers.

00:12:56.310 --> 00:13:00.210
So our goal with our open
ecosystem for the living room

00:13:00.210 --> 00:13:03.460
is really trying to bring
some sanity and scale to that.

00:13:03.460 --> 00:13:05.300
Just leverage existing
platforms, again,

00:13:05.300 --> 00:13:07.710
like Android, iOS, web.

00:13:07.710 --> 00:13:12.110
And the development practices
you already know and love.

00:13:12.110 --> 00:13:15.120
So our hope is that you can
take that existing mobile app

00:13:15.120 --> 00:13:17.120
and just expand them
to the living room.

00:13:17.120 --> 00:13:19.530
To tell you a little bit
more about what that means,

00:13:19.530 --> 00:13:22.250
John is going to talk
about building apps

00:13:22.250 --> 00:13:24.165
for Google Cast and Android TV.

00:13:24.165 --> 00:13:27.630
[APPLAUSE]

00:13:29.610 --> 00:13:30.610
JOHN AFFAKI: Thanks.

00:13:30.610 --> 00:13:32.277
So we've talked a lot
about the devices,

00:13:32.277 --> 00:13:33.818
so let's talk a
little bit about what

00:13:33.818 --> 00:13:35.120
it takes to build those apps.

00:13:35.120 --> 00:13:38.170
So our goal, as Allen said, is
to make it as easy as possible

00:13:38.170 --> 00:13:41.090
for you to dive in to building
applications for the living

00:13:41.090 --> 00:13:41.690
room.

00:13:41.690 --> 00:13:43.910
So we're going to start by
talking about Android TV

00:13:43.910 --> 00:13:45.990
first because that's pretty much
straightforward for any of you

00:13:45.990 --> 00:13:48.020
guys who have already
built Android apps.

00:13:48.020 --> 00:13:50.370
The reason it's straightforward
is because Android TV

00:13:50.370 --> 00:13:51.810
is just Android.

00:13:51.810 --> 00:13:54.490
It's the same APIs,
same development model,

00:13:54.490 --> 00:13:56.087
and same distribution model.

00:13:56.087 --> 00:13:57.670
The biggest difference
with these apps

00:13:57.670 --> 00:13:59.300
is how your users
interact with them

00:13:59.300 --> 00:14:01.110
and how they watch the content.

00:14:01.110 --> 00:14:03.235
So that means that you need
to do some small tweaks

00:14:03.235 --> 00:14:06.190
to your application to deal with
maybe a different form factor.

00:14:06.190 --> 00:14:09.810
So instead of being touchscreens
like most Android devices,

00:14:09.810 --> 00:14:14.730
the users interact with Android
TVs using either remote control

00:14:14.730 --> 00:14:16.940
or a game controller,
and that has a four-way D

00:14:16.940 --> 00:14:21.660
pad with center click, a
back button, a home button.

00:14:21.660 --> 00:14:24.870
You can also use voice to
drive data entry or use voice

00:14:24.870 --> 00:14:30.080
commands like "play Beyonce."

00:14:30.080 --> 00:14:33.380
So because of that
interaction model,

00:14:33.380 --> 00:14:36.440
building a UI for remote control
is a little bit different.

00:14:36.440 --> 00:14:39.080
Instead of a user being able
to touch pretty much anywhere

00:14:39.080 --> 00:14:41.820
on the screen, you have
to be able to support

00:14:41.820 --> 00:14:45.040
scrolling or tabbing through
the controls on the screen.

00:14:45.040 --> 00:14:48.090
So if you've built apps, your
Android apps with accessibility

00:14:48.090 --> 00:14:51.290
in mind or keyboard support,
you're already kind of there.

00:14:51.290 --> 00:14:52.890
But if you haven't, please do.

00:14:52.890 --> 00:14:55.512
Accessibility's important.

00:14:55.512 --> 00:14:57.470
So another big difference
in these applications

00:14:57.470 --> 00:15:00.080
is that your users are
essentially leaning back

00:15:00.080 --> 00:15:01.130
and sitting 10 feet away.

00:15:01.130 --> 00:15:04.030
We talk about the 10 feet UI.

00:15:04.030 --> 00:15:05.980
And so even though the
big screen is-- well,

00:15:05.980 --> 00:15:07.835
the screen is much
bigger than on a phone--

00:15:07.835 --> 00:15:09.210
you're really
going to be tempted

00:15:09.210 --> 00:15:12.650
to cram a lot of information on
that screen, but don't, really.

00:15:12.650 --> 00:15:16.340
Your users do not want to read
walls of text on television.

00:15:16.340 --> 00:15:19.560
They really want to
see cinematic action,

00:15:19.560 --> 00:15:21.810
smooth transitions,
and the reality

00:15:21.810 --> 00:15:24.420
is they have a beautiful TV that
they spent a lot of money on

00:15:24.420 --> 00:15:26.620
and they want to see
their content all the time

00:15:26.620 --> 00:15:27.900
uninterrupted.

00:15:27.900 --> 00:15:28.770
It's not a phone.

00:15:28.770 --> 00:15:30.454
It's not a computer.

00:15:30.454 --> 00:15:31.870
So any kind of
complex interaction

00:15:31.870 --> 00:15:34.307
is going to turn them
off and frustrate them.

00:15:34.307 --> 00:15:36.390
So as a developer, you're
going to build your apps

00:15:36.390 --> 00:15:37.820
and you're going to deploy
them like pretty much

00:15:37.820 --> 00:15:40.690
any other application that you
do through the Play Developer

00:15:40.690 --> 00:15:41.530
Console.

00:15:41.530 --> 00:15:44.510
But in this case,
you're going to opt in

00:15:44.510 --> 00:15:46.404
to having them deploy
it to the television.

00:15:46.404 --> 00:15:48.570
So in order to make sure
that the users don't end up

00:15:48.570 --> 00:15:50.111
with a really
frustrating experience,

00:15:50.111 --> 00:15:52.440
we do manually review that
every application works

00:15:52.440 --> 00:15:56.885
well on televisions, instead of
being like a touchscreen app,

00:15:56.885 --> 00:16:00.860
but you try to make
it run on the TV.

00:16:00.860 --> 00:16:03.342
So in order to help you
deal with those differences

00:16:03.342 --> 00:16:04.800
we've actually
introduced a library

00:16:04.800 --> 00:16:07.020
that we called Leanback
Support Library.

00:16:07.020 --> 00:16:09.240
It brings you some
great fragments

00:16:09.240 --> 00:16:12.640
to help you deal with the
navigation experiences

00:16:12.640 --> 00:16:14.800
that most of the
media applications

00:16:14.800 --> 00:16:18.110
that you would build
for televisions use.

00:16:18.110 --> 00:16:20.550
And they support
all the animations,

00:16:20.550 --> 00:16:22.630
the navigation,
the D pad support

00:16:22.630 --> 00:16:24.480
without you needing
to do any work.

00:16:24.480 --> 00:16:28.470
Here's an example of
one of the fragments.

00:16:28.470 --> 00:16:31.970
This is the DailyMotion app
that uses a browse fragment,

00:16:31.970 --> 00:16:35.700
and it showcases videos in
smooth scrolling categories.

00:16:35.700 --> 00:16:37.860
And in this fragment
on the far left,

00:16:37.860 --> 00:16:40.240
you can actually
also optionally use

00:16:40.240 --> 00:16:41.990
the fast lane, which
will provide you

00:16:41.990 --> 00:16:45.570
an overview of all the
categories that are available.

00:16:45.570 --> 00:16:47.920
Now, after browsing
from the browse fragment

00:16:47.920 --> 00:16:50.100
it's pretty natural
to click on something

00:16:50.100 --> 00:16:52.260
and go into the
details fragment.

00:16:52.260 --> 00:16:54.890
So here's an example of
the details fragments

00:16:54.890 --> 00:16:58.540
in the Plex app for one of my
favorite TV shows, "Big Bang

00:16:58.540 --> 00:16:59.396
Theory."

00:16:59.396 --> 00:17:01.270
And what that allows
you to do is essentially

00:17:01.270 --> 00:17:04.849
pick actions that are
associated with that detail.

00:17:04.849 --> 00:17:09.280
Again, all of that's done
by the detail fragment.

00:17:09.280 --> 00:17:11.579
Now, with Android M we're
introducing a new version

00:17:11.579 --> 00:17:14.450
of the detail fragment-- and
we saw the detailed fragment

00:17:14.450 --> 00:17:15.530
in the previous slide.

00:17:15.530 --> 00:17:17.490
This is a full
bleed version of it.

00:17:17.490 --> 00:17:20.140
Now, both this one
and the existing one

00:17:20.140 --> 00:17:23.470
are customizable to show
whatever kind of content-- so

00:17:23.470 --> 00:17:26.069
custom actions-- related to the
content that you want to see.

00:17:26.069 --> 00:17:27.485
So for example,
if you want to put

00:17:27.485 --> 00:17:31.530
more of this particular
version of the fragment

00:17:31.530 --> 00:17:35.530
highlights actions such as buy,
rent, and add to wish list,

00:17:35.530 --> 00:17:37.430
rather than the
metadata which is highly

00:17:37.430 --> 00:17:38.596
visible in the previous one.

00:17:38.596 --> 00:17:41.515
So you'd use this one if you
wanted to focus more on that.

00:17:41.515 --> 00:17:43.890
Now, also when you're browsing
another common destination

00:17:43.890 --> 00:17:45.500
is going to be playback.

00:17:45.500 --> 00:17:48.360
So here's an example of
the playback fragment

00:17:48.360 --> 00:17:51.720
in the YouTube app, which
provides two primary actions

00:17:51.720 --> 00:17:54.500
here, rewind,
play, fast forward.

00:17:54.500 --> 00:17:59.000
But you can pretty much
customize the actions based off

00:17:59.000 --> 00:18:00.560
of what your
application supports.

00:18:00.560 --> 00:18:02.351
And then you can also
see secondary action,

00:18:02.351 --> 00:18:04.426
such as below on the
suggestion section

00:18:04.426 --> 00:18:05.800
where you could
provide more rows

00:18:05.800 --> 00:18:07.300
to provide more
related information,

00:18:07.300 --> 00:18:11.830
or as we have here,
suggestions for content.

00:18:11.830 --> 00:18:13.380
Now, browsing is
likely going to be

00:18:13.380 --> 00:18:15.170
what users are
doing when they're

00:18:15.170 --> 00:18:16.880
leaning back and
deciding what to watch,

00:18:16.880 --> 00:18:18.649
clicking through mindlessly.

00:18:18.649 --> 00:18:20.690
But sometimes users use
search, and actually it's

00:18:20.690 --> 00:18:22.120
fairly common.

00:18:22.120 --> 00:18:25.446
And for that case we actually
provide the search fragment,

00:18:25.446 --> 00:18:27.820
and that has built-in voice
support, as you can see here.

00:18:27.820 --> 00:18:30.630
We've got a little microphone
icon at the top left.

00:18:30.630 --> 00:18:32.470
And this is another
example from DailyMotion

00:18:32.470 --> 00:18:35.970
which shows up when a user has
actually clicked on Search,

00:18:35.970 --> 00:18:39.680
and we have full support
for instant search

00:18:39.680 --> 00:18:41.710
results as the user's typing.

00:18:41.710 --> 00:18:44.880
And this actually uses
exactly the search,

00:18:44.880 --> 00:18:48.717
the same APIs that you would
implement for search and data

00:18:48.717 --> 00:18:50.550
APIs that you would use
for your Android app

00:18:50.550 --> 00:18:54.710
on your phone or tablet.

00:18:54.710 --> 00:18:57.080
So finally, with
the latest release

00:18:57.080 --> 00:18:59.960
of the support
library in April, we

00:18:59.960 --> 00:19:01.770
introduce the guided
step fragments.

00:19:01.770 --> 00:19:05.000
And with Android M we
have an updated version.

00:19:05.000 --> 00:19:07.540
And this updated version
essentially-- this fragment

00:19:07.540 --> 00:19:11.410
allows you to walk through
multistep flows, like set up

00:19:11.410 --> 00:19:14.860
or sign up, and you now have the
option to show previous steps.

00:19:14.860 --> 00:19:17.050
So if you see here we've
got the multiple steps

00:19:17.050 --> 00:19:18.900
getting to picture mode.

00:19:18.900 --> 00:19:20.810
And you can reverse,
or you could

00:19:20.810 --> 00:19:23.940
choose to show only I guess the
latest step, the current step.

00:19:23.940 --> 00:19:26.730
Now, this allows you to also
overlay it over content.

00:19:26.730 --> 00:19:30.870
Remember I said users, as
they're watching content,

00:19:30.870 --> 00:19:32.430
they don't want it interrupted.

00:19:32.430 --> 00:19:34.000
This allows you to
deal with overlays

00:19:34.000 --> 00:19:36.471
and you can tweak
settings in real time

00:19:36.471 --> 00:19:38.970
with the user being able to
keep watching their Kardashians.

00:19:41.580 --> 00:19:44.890
So as we talked about
also, a huge part

00:19:44.890 --> 00:19:49.610
of the Android ecosystem is
gaming, in addition to media.

00:19:49.610 --> 00:19:51.870
And with powerful Android
TV entertainment devices

00:19:51.870 --> 00:19:53.722
by NVIDIA and
Razer, we're seeing

00:19:53.722 --> 00:19:56.180
all sorts of really amazing
games being built. Some of them

00:19:56.180 --> 00:19:59.530
you can see in the
sandbox area today.

00:19:59.530 --> 00:20:02.240
But like phones, the
Android TV device ecosystem

00:20:02.240 --> 00:20:05.860
has a variety of hardware that
supports many flavors of games.

00:20:05.860 --> 00:20:08.110
Now, we see that addictive
and casual games are really

00:20:08.110 --> 00:20:11.650
exploding the size and
diversity of the gamer audience.

00:20:11.650 --> 00:20:15.070
And many of the best
games there on TV

00:20:15.070 --> 00:20:18.730
span all possible
Android TV devices.

00:20:18.730 --> 00:20:20.630
Now, again, because
this is Android

00:20:20.630 --> 00:20:22.430
and you have access
to Google Play Games,

00:20:22.430 --> 00:20:24.304
you have access to the
full array of features

00:20:24.304 --> 00:20:26.360
that that brings you
and that you also have

00:20:26.360 --> 00:20:27.940
when developing
games for mobile.

00:20:27.940 --> 00:20:31.660
So just being able to
track player achievements,

00:20:31.660 --> 00:20:33.810
save games, and resume
on another device,

00:20:33.810 --> 00:20:35.330
browse player profiles.

00:20:35.330 --> 00:20:37.000
But you can also build
multiplayer games

00:20:37.000 --> 00:20:38.990
using the nearby
connections API,

00:20:38.990 --> 00:20:41.510
and that allows you to find
nearby phones and other Android

00:20:41.510 --> 00:20:44.240
devices that are nearby
or on the same network.

00:20:44.240 --> 00:20:46.610
Now, this allows you to deal
with both phone-to-phone

00:20:46.610 --> 00:20:49.950
multiplayer, but
also use your phone

00:20:49.950 --> 00:20:52.057
and communicate with
the Android TV device

00:20:52.057 --> 00:20:53.015
to act as a controller.

00:20:55.630 --> 00:20:59.170
So while it might be easy to
think that Android TV equals

00:20:59.170 --> 00:21:02.780
TV shows, movies
and games, you'd

00:21:02.780 --> 00:21:05.050
really been missing
out on the opportunity

00:21:05.050 --> 00:21:07.620
to build some really great
interactive experiences.

00:21:07.620 --> 00:21:09.370
As example, I love
to cook, and you

00:21:09.370 --> 00:21:11.453
can see it's not particularly
practical to cook it

00:21:11.453 --> 00:21:12.600
with the tablet.

00:21:12.600 --> 00:21:14.350
So I'm parti--
well, that's not me.

00:21:14.350 --> 00:21:14.850
Just FYI.

00:21:17.660 --> 00:21:19.660
So I'm really excited to
see interactive cooking

00:21:19.660 --> 00:21:21.930
apps that'll walk me
through complex recipe.

00:21:21.930 --> 00:21:26.620
Now, I know Allen's crazy about
karaoke, but I heard him sing,

00:21:26.620 --> 00:21:30.782
so please, no karaoke apps.

00:21:30.782 --> 00:21:32.990
So you can learn more about
developing for Android TV

00:21:32.990 --> 00:21:36.850
by checking out the DevBytes or
getting posted online and going

00:21:36.850 --> 00:21:39.986
to developers.android.com/tv.

00:21:39.986 --> 00:21:41.610
Now, remember that
you can also develop

00:21:41.610 --> 00:21:43.770
for Android TV the
same way that you

00:21:43.770 --> 00:21:46.270
would for a Chromecast or
any other Google Cast device.

00:21:46.270 --> 00:21:48.910
So let's talk a little bit about
the Cast development model.

00:21:48.910 --> 00:21:50.910
Now, when we looked at
the living room for Cast,

00:21:50.910 --> 00:21:52.520
it was very important
for us to look

00:21:52.520 --> 00:21:55.770
at what the typical
household's like or wants.

00:21:55.770 --> 00:21:58.740
It would be very easy for
us to stand some ground

00:21:58.740 --> 00:22:01.030
and limit our reach
to Android devices.

00:22:01.030 --> 00:22:03.530
But we really wanted to
build an ecosystem that

00:22:03.530 --> 00:22:09.050
supported choice, particularly
non-homogeneous households.

00:22:09.050 --> 00:22:11.770
And we know that many of
you guys use 3D devices,

00:22:11.770 --> 00:22:15.417
so it was important for us to
support both Android and iOS.

00:22:15.417 --> 00:22:17.875
And for those of you guys who
are using laptops or desktops

00:22:17.875 --> 00:22:20.670
to interact with your TV,
we have full integration

00:22:20.670 --> 00:22:22.640
with Chrome.

00:22:22.640 --> 00:22:24.360
Now, if there are any
iOS developers out

00:22:24.360 --> 00:22:28.350
there who are watching who
are worried about the fact

00:22:28.350 --> 00:22:32.570
that iOS is not a high use
case for us, well, roughly half

00:22:32.570 --> 00:22:35.930
of our mobile usage
with Cast is iOS.

00:22:35.930 --> 00:22:41.260
So out of the 1.5 billion Casts
you've got 40% of that is iOS.

00:22:41.260 --> 00:22:42.800
So there's plenty
of usage on iOS.

00:22:42.800 --> 00:22:44.540
So it's a great
opportunity for you

00:22:44.540 --> 00:22:48.872
to deal with your
multi-platform apps on Cast.

00:22:48.872 --> 00:22:50.330
So now, as Allen
mentioned earlier,

00:22:50.330 --> 00:22:52.750
Cast is really about extending
the mobile experience

00:22:52.750 --> 00:22:54.370
onto the television or speakers.

00:22:54.370 --> 00:22:56.870
So that basically means
that development for Cast

00:22:56.870 --> 00:22:58.720
is about multi-endpoint
development.

00:22:58.720 --> 00:23:01.366
So you now have two components
to your application.

00:23:01.366 --> 00:23:02.740
One that runs on
your Google Cast

00:23:02.740 --> 00:23:04.100
device, such as your
Chromecast, your Android

00:23:04.100 --> 00:23:05.020
TV or your speakers.

00:23:05.020 --> 00:23:07.074
And we'll call that the
receiver application.

00:23:07.074 --> 00:23:08.990
And one that runs on
your mobile device, which

00:23:08.990 --> 00:23:10.664
is the sender application.

00:23:10.664 --> 00:23:13.080
Now, both of those things are
connected by the Google Cast

00:23:13.080 --> 00:23:16.310
SDK, which allows your sender
application to discover,

00:23:16.310 --> 00:23:20.690
connect to, and communicate
with your receiver application.

00:23:20.690 --> 00:23:22.900
So with that, let's start
talking about the receiver

00:23:22.900 --> 00:23:24.140
application.

00:23:24.140 --> 00:23:27.260
So the receiver application
is a small web application

00:23:27.260 --> 00:23:30.100
that runs directly on
the Google Cast device.

00:23:30.100 --> 00:23:31.600
And that's what the user sees.

00:23:31.600 --> 00:23:35.870
It what's outputs the video
to the TV or the sound

00:23:35.870 --> 00:23:38.070
to the speakers.

00:23:38.070 --> 00:23:40.340
So for simple media apps,
we provide, actually,

00:23:40.340 --> 00:23:42.130
a default player
to which you can

00:23:42.130 --> 00:23:44.130
send most video or audio
formats without writing

00:23:44.130 --> 00:23:46.184
a single line of code.

00:23:46.184 --> 00:23:48.350
But you could also make
simple customizations to it,

00:23:48.350 --> 00:23:51.380
such as skinning by just
using CSS and providing us

00:23:51.380 --> 00:23:53.000
with a custom CSS.

00:23:53.000 --> 00:23:54.910
Now, for richer
applications you could

00:23:54.910 --> 00:23:57.400
build your own application
the same way that you

00:23:57.400 --> 00:24:00.120
would build a small web
page, which is basically host

00:24:00.120 --> 00:24:02.200
your own HTML and JavaScript.

00:24:02.200 --> 00:24:04.890
Except that you'd add
the Cast SDK to it.

00:24:04.890 --> 00:24:06.530
Once the Cast SDK
is integrated you

00:24:06.530 --> 00:24:08.510
can now send and
receive commands

00:24:08.510 --> 00:24:11.520
to that web application from
your sender application.

00:24:11.520 --> 00:24:12.895
Now, if you're
playing back media

00:24:12.895 --> 00:24:16.220
that uses DASH, Smooth Streaming
or HLS, or any kind of DRM

00:24:16.220 --> 00:24:18.160
that we support,
the Cast SDK also

00:24:18.160 --> 00:24:20.249
provides a rich
media player which

00:24:20.249 --> 00:24:22.290
makes playback of that
content on any Cast device

00:24:22.290 --> 00:24:24.060
an absolute cinch.

00:24:24.060 --> 00:24:26.870
So within that
receiver, you also

00:24:26.870 --> 00:24:28.766
have access to the
device's properties,

00:24:28.766 --> 00:24:30.140
just like Android
has properties,

00:24:30.140 --> 00:24:31.829
Cast devices have properties.

00:24:31.829 --> 00:24:33.370
One of those
properties, for example,

00:24:33.370 --> 00:24:35.712
is whether or not
there's a display.

00:24:35.712 --> 00:24:38.170
Really there's not much point
spending two or three seconds

00:24:38.170 --> 00:24:40.740
showing a splash
screen on your speaker.

00:24:40.740 --> 00:24:44.752
So you probably want to make
sure that you skip that part.

00:24:44.752 --> 00:24:46.210
Now, remember,
essentially, when we

00:24:46.210 --> 00:24:48.376
talk about Android TV we
talked about the simplicity

00:24:48.376 --> 00:24:53.020
of development and keeping
it simple for the user.

00:24:53.020 --> 00:24:54.566
And so you want
to use the screen

00:24:54.566 --> 00:24:56.190
the same way that we
talked about which

00:24:56.190 --> 00:24:58.410
is keeping it useful
for the things

00:24:58.410 --> 00:25:00.370
that it's great at which
is rendering content,

00:25:00.370 --> 00:25:01.640
not very much data.

00:25:01.640 --> 00:25:04.290
If you want complex
interaction or a lot more data,

00:25:04.290 --> 00:25:07.800
that's when your sender
application comes in.

00:25:07.800 --> 00:25:10.370
So the sender application is
what your users interact with,

00:25:10.370 --> 00:25:12.370
and you're pretty much
quite familiar with them.

00:25:12.370 --> 00:25:14.951
It's your typical Android,
iOS or web application,

00:25:14.951 --> 00:25:16.700
which you could either
build from scratch,

00:25:16.700 --> 00:25:18.420
or if you already
have one that you're

00:25:18.420 --> 00:25:20.757
looking to extend to
the TV you can use that.

00:25:20.757 --> 00:25:22.340
They're developed
exactly the same way

00:25:22.340 --> 00:25:24.048
as you would develop
them if they weren't

00:25:24.048 --> 00:25:26.740
Cast enabled, except you include
the Cast SDK to send messages

00:25:26.740 --> 00:25:28.696
to your receiver application.

00:25:28.696 --> 00:25:30.070
Now, this is great
for your users

00:25:30.070 --> 00:25:33.090
because they don't need to learn
a new kind of user interface.

00:25:33.090 --> 00:25:35.260
If they know how to use
your app without Cast,

00:25:35.260 --> 00:25:38.230
they know how to
use it with Cast.

00:25:38.230 --> 00:25:40.690
So once you integrate
the Cast SDK--

00:25:40.690 --> 00:25:43.390
you can see an example here with
Play Music and Play Movies--

00:25:43.390 --> 00:25:46.980
the Cast icon shows up and once
the user clicks that, it'll

00:25:46.980 --> 00:25:49.960
basically provide a
device picker to pick

00:25:49.960 --> 00:25:52.272
a Cast device to connect to.

00:25:52.272 --> 00:25:54.230
And once that's done,
your receiver application

00:25:54.230 --> 00:25:56.880
gets launched on the Cast device
and you can now send commands

00:25:56.880 --> 00:25:58.790
back and forth between the two.

00:25:58.790 --> 00:26:01.525
Now, we provide
the ability to send

00:26:01.525 --> 00:26:04.580
specifically formatted messages,
such as media commands,

00:26:04.580 --> 00:26:06.990
with our media namespace.

00:26:06.990 --> 00:26:10.030
And those are commands
like play, pause, seek,

00:26:10.030 --> 00:26:11.830
volume, stream volume.

00:26:11.830 --> 00:26:14.370
We now recently introduced
the game manager APIs

00:26:14.370 --> 00:26:17.667
which will allow you to send
custom messages for games.

00:26:17.667 --> 00:26:20.000
But we also say, well, we
don't know exactly what you're

00:26:20.000 --> 00:26:21.500
building for
everything, so we allow

00:26:21.500 --> 00:26:24.510
you to pass back and forth
any kind of generic commands

00:26:24.510 --> 00:26:27.902
for any kind of application
that you might think of.

00:26:27.902 --> 00:26:29.860
So the thing that you
have to also keep in mind

00:26:29.860 --> 00:26:32.470
is that in this case your
mobile device is a lot more

00:26:32.470 --> 00:26:34.890
than a simple remote control,
because with the Cast model

00:26:34.890 --> 00:26:37.550
you can really enable some cool
experiences that you wouldn't

00:26:37.550 --> 00:26:40.540
be able to do with
the traditional D pad

00:26:40.540 --> 00:26:41.800
remote control.

00:26:41.800 --> 00:26:44.540
A great example of that's
the MLB At Bat application.

00:26:44.540 --> 00:26:46.390
It takes advantage
of the big screen

00:26:46.390 --> 00:26:50.230
to display beautiful
content, high def-- there.

00:26:50.230 --> 00:26:52.590
So I'm a big
baseball fan, and one

00:26:52.590 --> 00:26:56.792
of the reasons I love baseball
is because I love stats.

00:26:56.792 --> 00:26:58.750
But at the same time,
when I'm watching a game,

00:26:58.750 --> 00:27:00.666
I really don't want those
stats on the screen.

00:27:00.666 --> 00:27:02.060
I want to see the game.

00:27:02.060 --> 00:27:03.810
So in this case,
using the MLB app

00:27:03.810 --> 00:27:06.620
it's great because I can
watch the game on the screen,

00:27:06.620 --> 00:27:08.890
but then get play by play
analysis on my tablet

00:27:08.890 --> 00:27:12.244
while I'm watching the game
without any interruption.

00:27:12.244 --> 00:27:14.160
Now, the other thing
that you have to remember

00:27:14.160 --> 00:27:17.840
is that in this case your
remote control is a rich device

00:27:17.840 --> 00:27:22.880
and it's got a touch screen, a
camera, a speaker, a gyroscope.

00:27:22.880 --> 00:27:24.680
And it's also likely
that if you've

00:27:24.680 --> 00:27:26.950
got multiple people
in the room with you,

00:27:26.950 --> 00:27:28.940
they probably also have
one in their pocket,

00:27:28.940 --> 00:27:31.180
so they bring their own
controller in this case.

00:27:31.180 --> 00:27:33.180
And we're seeing many
developers leveraging

00:27:33.180 --> 00:27:35.800
the features of mobile
devices to build some really

00:27:35.800 --> 00:27:36.957
innovative apps and games.

00:27:36.957 --> 00:27:39.540
One of the great examples that
you could see today in the area

00:27:39.540 --> 00:27:41.877
outside is a game
called Fitflap.

00:27:41.877 --> 00:27:43.460
It's a fitness game
that really proves

00:27:43.460 --> 00:27:46.640
that pigs can already fly, so
no matter what they tell you.

00:27:46.640 --> 00:27:48.700
And the way that it works
is it takes advantage

00:27:48.700 --> 00:27:51.050
of the camera on your phone,
the front-facing camera,

00:27:51.050 --> 00:27:54.032
and it captures motion
and basically looks

00:27:54.032 --> 00:27:56.490
at your movements to detect
when you want your pigs to flap

00:27:56.490 --> 00:27:58.130
their wings or various actions.

00:27:58.130 --> 00:28:00.990
So you could go and try it out.

00:28:00.990 --> 00:28:03.359
Now Fitflap's not the only
game we have for Cast.

00:28:03.359 --> 00:28:05.150
In fact, many of our
partners have launched

00:28:05.150 --> 00:28:06.750
games over the last few months.

00:28:06.750 --> 00:28:09.550
We brought some popular classics
like Wheel of Fortune, Monopoly

00:28:09.550 --> 00:28:11.810
Dash, but we also bought a
little bit more high action

00:28:11.810 --> 00:28:14.420
and heart-pumping action
with Just Dance Now.

00:28:14.420 --> 00:28:16.730
Now, they're just
great examples of games

00:28:16.730 --> 00:28:18.390
that you could be building.

00:28:18.390 --> 00:28:21.420
And so this week we announced
the Google Cast games manager

00:28:21.420 --> 00:28:25.530
API for the SDK, which makes it
a lot easier to introduce Cast

00:28:25.530 --> 00:28:28.830
into your games, and it manages
game state, player states,

00:28:28.830 --> 00:28:33.664
and communications
with the Cast device.

00:28:33.664 --> 00:28:35.330
With that we're showing
a bunch of games

00:28:35.330 --> 00:28:37.969
that are using these
APIs in the area upstairs

00:28:37.969 --> 00:28:40.010
and you'll be able to
download them from the Play

00:28:40.010 --> 00:28:41.510
Store or the App Store soon.

00:28:41.510 --> 00:28:43.090
One of those is
Catch Phrase Blitz.

00:28:43.090 --> 00:28:46.560
It's kind of interesting to
walk by the section upstairs

00:28:46.560 --> 00:28:48.540
and you hear a lot of
yelling and they're all

00:28:48.540 --> 00:28:49.290
playing this game.

00:28:49.290 --> 00:28:52.120
So it's a very passionate game.

00:28:52.120 --> 00:28:53.630
Also with these
games, you can also

00:28:53.630 --> 00:28:55.469
remember that with,
just like Android TV,

00:28:55.469 --> 00:28:57.760
you're building your games
mostly on the mobile device,

00:28:57.760 --> 00:29:00.000
so you have access
to all the features

00:29:00.000 --> 00:29:01.899
that play games provides you.

00:29:01.899 --> 00:29:04.190
So everything that you could
do building a game mobile,

00:29:04.190 --> 00:29:05.460
you can also extend here.

00:29:05.460 --> 00:29:07.900
So really building
rich multiplayer games

00:29:07.900 --> 00:29:12.390
is absolutely easy on
either Android TV or Cast.

00:29:12.390 --> 00:29:14.040
And so also with
the technologies

00:29:14.040 --> 00:29:15.070
that I just
described, you can see

00:29:15.070 --> 00:29:17.170
that we're really trying
to leverage your existing

00:29:17.170 --> 00:29:20.380
expertise of well-established
platforms with either Android,

00:29:20.380 --> 00:29:22.800
iOS, or web development
for the senders.

00:29:22.800 --> 00:29:24.600
And then we have a
small extra thing

00:29:24.600 --> 00:29:27.290
which is the HTML
app for the receiver.

00:29:27.290 --> 00:29:30.969
So there isn't much
new to learn here.

00:29:30.969 --> 00:29:32.760
But with all that,
there's still some times

00:29:32.760 --> 00:29:34.635
when you want to stick
to native development,

00:29:34.635 --> 00:29:37.410
even for the things that are
running on the Cast device.

00:29:37.410 --> 00:29:39.550
So we launched the
remote display APIs

00:29:39.550 --> 00:29:42.160
for both Android and iOS.

00:29:42.160 --> 00:29:44.250
And so with that you
can now actually build

00:29:44.250 --> 00:29:47.650
all of your UI natively,
draw to a hidden canvas,

00:29:47.650 --> 00:29:50.560
and have that rendered directly
on the Google Cast device,

00:29:50.560 --> 00:29:53.560
which allows you to provide
some rich, fast-paced action

00:29:53.560 --> 00:29:56.285
on the TV, taking advantage
of the really powerful CPU

00:29:56.285 --> 00:29:58.420
and GPU that you
have in your pocket.

00:29:58.420 --> 00:30:01.839
Now, a great example of
that is Autodesk Pixlr,

00:30:01.839 --> 00:30:03.630
which gives you the
ability to do real time

00:30:03.630 --> 00:30:06.160
editing of your
photos on your phone

00:30:06.160 --> 00:30:07.760
and renders the
output on the TV.

00:30:07.760 --> 00:30:10.050
And that way either
everybody in the room or you

00:30:10.050 --> 00:30:11.910
could see the beautiful
photo and what

00:30:11.910 --> 00:30:13.394
the outcome of
that edit would be

00:30:13.394 --> 00:30:15.060
without being obstructed
by the controls

00:30:15.060 --> 00:30:16.350
that you'd see on your phone.

00:30:20.190 --> 00:30:24.359
So Pixlr is a great app.

00:30:24.359 --> 00:30:25.900
But the remote
display feature's also

00:30:25.900 --> 00:30:29.070
particularly relevant to gaming,
where many of your assets

00:30:29.070 --> 00:30:31.640
might be shared between what
you'd show on your phone

00:30:31.640 --> 00:30:34.650
and what you'd
show on the screen.

00:30:34.650 --> 00:30:37.040
And we've had Android
mirroring for a while,

00:30:37.040 --> 00:30:42.087
and that was good, but
fairly limited for gaming.

00:30:42.087 --> 00:30:44.170
But it was important for
us to give iOS developers

00:30:44.170 --> 00:30:47.510
access to the processing
power of those phones.

00:30:47.510 --> 00:30:50.420
Whether you're using-- you can
use Medal, you can use OpenGL,

00:30:50.420 --> 00:30:53.780
or you can even take UI
Kit and specify a surface

00:30:53.780 --> 00:30:56.160
and provide your
audio to the Cast SDK.

00:30:56.160 --> 00:30:57.540
And the Cast SDK
will essentially

00:30:57.540 --> 00:31:01.340
encode stream and render
whatever that surface was

00:31:01.340 --> 00:31:02.960
on the Cast device,
and you can really

00:31:02.960 --> 00:31:04.870
enable some great experiences.

00:31:04.870 --> 00:31:06.670
Now, Fitflap that I
talked about a bit

00:31:06.670 --> 00:31:08.390
was developed using
a remote display.

00:31:08.390 --> 00:31:10.730
But you can also check out
a few other great examples,

00:31:10.730 --> 00:31:14.420
such as Ubisoft's Driver
or Rolocule's Motion Tennis

00:31:14.420 --> 00:31:16.375
on Android and
iOS, and you'll be

00:31:16.375 --> 00:31:18.500
able to find them if you're
not at the sandbox area

00:31:18.500 --> 00:31:20.911
on your mobile
stores pretty soon.

00:31:20.911 --> 00:31:23.160
So you can get a lot more
information about developing

00:31:23.160 --> 00:31:26.520
for gaming with Google, and
many of the online videos

00:31:26.520 --> 00:31:30.015
that'll be posted
with the I/O batch.

00:31:30.015 --> 00:31:32.140
And you could find out a
lot more about development

00:31:32.140 --> 00:31:34.800
for applications for
Chromecast, Cast for Audio,

00:31:34.800 --> 00:31:37.220
as well as Android
TV in our Dev Bytes

00:31:37.220 --> 00:31:40.950
at developers.google.com/cast.

00:31:40.950 --> 00:31:42.413
So Allen?

00:31:42.413 --> 00:31:43.162
ALLEN HUANG: Cool.

00:31:43.162 --> 00:31:45.572
[APPLAUSE]

00:31:48.404 --> 00:31:49.820
So now that you've
built your app,

00:31:49.820 --> 00:31:51.540
how do you help people find it?

00:31:51.540 --> 00:31:55.840
To be frank, your beautiful,
amazing, fluid, teleportation

00:31:55.840 --> 00:31:59.310
app, it's pretty useless if
no one actually ever finds it.

00:31:59.310 --> 00:32:02.060
So for Google Cast,
since the interaction

00:32:02.060 --> 00:32:04.580
with the users on
the mobile device,

00:32:04.580 --> 00:32:06.580
the way people find the
app is pretty familiar.

00:32:06.580 --> 00:32:09.880
It's how people are finding your
app on mobile phones already.

00:32:09.880 --> 00:32:14.616
Millions of users a month
go to g.co/castapps.

00:32:14.616 --> 00:32:16.870
It's a mouthful.

00:32:16.870 --> 00:32:20.290
g.co/castapps, which will list
out all the Cast applications

00:32:20.290 --> 00:32:22.479
and filterable by the
different mobile platforms.

00:32:22.479 --> 00:32:24.270
You can also filter
based on whether or not

00:32:24.270 --> 00:32:27.390
it's something optimized
for an audio device.

00:32:27.390 --> 00:32:29.120
On Android you can
find your Cast apps

00:32:29.120 --> 00:32:31.610
in the Google Play Store
in the Cast section

00:32:31.610 --> 00:32:33.370
there in the Category View.

00:32:33.370 --> 00:32:36.520
And on iOS you'll find
the apps in the App Store.

00:32:36.520 --> 00:32:37.970
We've got some
fun, exciting stuff

00:32:37.970 --> 00:32:40.980
to enhance Cast app discovery
coming up later this year,

00:32:40.980 --> 00:32:43.350
so stay tuned.

00:32:43.350 --> 00:32:45.530
App discovery on Android
TV is similar to how

00:32:45.530 --> 00:32:48.595
you're thinking about it
on other Android devices.

00:32:48.595 --> 00:32:49.970
What you're doing
is you're still

00:32:49.970 --> 00:32:51.904
distributing to
over 100 countries

00:32:51.904 --> 00:32:53.320
through the Play
Developer Console

00:32:53.320 --> 00:32:55.010
and uploading your app there.

00:32:55.010 --> 00:32:57.460
So your app is then available
on Android TV devices

00:32:57.460 --> 00:32:59.670
and found in the Play
Store on television.

00:32:59.670 --> 00:33:02.220
We're rolling out a
big update to our TV

00:33:02.220 --> 00:33:05.190
Play Store in this
coming week-- next week--

00:33:05.190 --> 00:33:08.910
to better expose the hundreds of
apps and games on TV to users.

00:33:08.910 --> 00:33:11.540
Introduce browsing via a
wide set of categories,

00:33:11.540 --> 00:33:14.647
as well as sort of
top apps and games.

00:33:14.647 --> 00:33:16.230
Once users have found
your app, you'll

00:33:16.230 --> 00:33:18.980
want them to engage
and use your app.

00:33:18.980 --> 00:33:21.197
So obviously, the content
that your app provides

00:33:21.197 --> 00:33:23.780
is the number one most important
thing, but there's more to it

00:33:23.780 --> 00:33:24.560
than that.

00:33:24.560 --> 00:33:26.740
So Android TV provides
a couple surfaces

00:33:26.740 --> 00:33:30.090
for you to expose your
great content, helping

00:33:30.090 --> 00:33:31.550
users get entertained.

00:33:31.550 --> 00:33:33.540
And so when users
are at home they're

00:33:33.540 --> 00:33:34.740
sitting down on their couch.

00:33:34.740 --> 00:33:37.839
They don't really want to
think too hard about this.

00:33:37.839 --> 00:33:39.630
So that's why we've
made the recommendation

00:33:39.630 --> 00:33:43.270
or the first thing you
see on the home screen.

00:33:43.270 --> 00:33:45.860
Just a couple days ago I saw
the new Taylor Swift video

00:33:45.860 --> 00:33:48.640
that everyone's talking
about as the first slot

00:33:48.640 --> 00:33:50.392
in the first slide.

00:33:50.392 --> 00:33:52.600
And so we've introduced new
recommendation guidelines

00:33:52.600 --> 00:33:54.790
that we'll be publishing
to our developer site.

00:33:54.790 --> 00:33:56.350
And with M, we'll
have several APIs

00:33:56.350 --> 00:33:59.875
so that you can classify your
recommendations better, as well

00:33:59.875 --> 00:34:04.319
as helper modules for you guys
to refresh your recommendations

00:34:04.319 --> 00:34:06.110
and just make them more
engaging for users.

00:34:06.110 --> 00:34:07.710
The two most important
things are just

00:34:07.710 --> 00:34:09.326
how often people
are using your app,

00:34:09.326 --> 00:34:11.909
as well as how often people are
clicking your recommendations.

00:34:11.909 --> 00:34:14.283
And those are the things that
determine the ranking order

00:34:14.283 --> 00:34:16.150
of the recommendation row.

00:34:16.150 --> 00:34:18.809
So another surface
on TVs that we

00:34:18.809 --> 00:34:21.350
haven't talked that much about
yet is just the traditional TV

00:34:21.350 --> 00:34:22.664
and channels and experience.

00:34:22.664 --> 00:34:25.080
This is where people today are
spending four to five hours

00:34:25.080 --> 00:34:26.314
a day channel surfing.

00:34:26.314 --> 00:34:27.730
There's something
really powerful.

00:34:27.730 --> 00:34:29.438
You sit down at home,
you flip on the TV,

00:34:29.438 --> 00:34:31.280
you're in the middle
of an episode of a show

00:34:31.280 --> 00:34:33.860
or middle of a movie, and
people will still sit down

00:34:33.860 --> 00:34:35.409
and just keep watching.

00:34:35.409 --> 00:34:37.564
And like we mentioned
before, Android TV's

00:34:37.564 --> 00:34:39.980
really about bringing together
that traditional television

00:34:39.980 --> 00:34:41.521
and that streaming
content seamlessly

00:34:41.521 --> 00:34:45.213
without having to wait a while
to switch inputs, et cetera.

00:34:45.213 --> 00:34:47.129
So at home when I'm
watching the NBA playoffs,

00:34:47.129 --> 00:34:50.989
I'll often Cast YouTube
clips of great plays

00:34:50.989 --> 00:34:52.362
during the commercials.

00:34:52.362 --> 00:34:54.070
And what if there were
a channel, though,

00:34:54.070 --> 00:34:57.220
that just had 30 second clips
of great plays happening

00:34:57.220 --> 00:34:58.990
all the time that I
could just flip to.

00:34:58.990 --> 00:35:02.650
So live channels is how we're
going to do that on Android TV.

00:35:02.650 --> 00:35:04.030
So what are live channels?

00:35:04.030 --> 00:35:05.740
I really think of
it as Cast 24/7.

00:35:08.059 --> 00:35:09.850
I'm pretty sure that's
what everyone really

00:35:09.850 --> 00:35:11.430
needs and wants.

00:35:11.430 --> 00:35:15.445
All right, so can we switch
to the demo or the screen?

00:35:18.854 --> 00:35:19.520
All right, cool.

00:35:19.520 --> 00:35:23.230
So developers could
publish these channels

00:35:23.230 --> 00:35:26.780
to something we call
the TV input framework.

00:35:26.780 --> 00:35:29.500
And so it's just a part
of your application

00:35:29.500 --> 00:35:32.200
and you publish the
video content and stream,

00:35:32.200 --> 00:35:34.471
as was metadata about
what's available there.

00:35:34.471 --> 00:35:35.970
And then these get
exposed in the TV

00:35:35.970 --> 00:35:40.550
app that's going to be on
all Android TV devices.

00:35:40.550 --> 00:35:43.940
So on Nexus players, NVIDIA
device, the Razer device,

00:35:43.940 --> 00:35:47.464
what you'll find is the live
channels app that we've built.

00:35:47.464 --> 00:35:49.255
And so this is your
standard TV experience.

00:35:49.255 --> 00:35:51.186
Oh, it's a little frozen.

00:35:51.186 --> 00:35:52.810
And so when there
are new channels that

00:35:52.810 --> 00:35:56.570
have been installed, you
can go to New Channels,

00:35:56.570 --> 00:35:59.980
I find just some new
channels there available,

00:35:59.980 --> 00:36:03.180
and it will start loading
them and adding them

00:36:03.180 --> 00:36:05.700
to that program guide.

00:36:05.700 --> 00:36:09.140
So there are now 113
channels available.

00:36:09.140 --> 00:36:12.287
So when I go back to
the program guide,

00:36:12.287 --> 00:36:14.120
you actually find all
of these new channels,

00:36:14.120 --> 00:36:17.960
so tons of these music channels
available on that guide.

00:36:17.960 --> 00:36:20.810
So the TV framework, it's going
to be available on all Android

00:36:20.810 --> 00:36:23.130
TV devices, and these
new channels that

00:36:23.130 --> 00:36:27.810
are creating great streaming
content, they will get exposed.

00:36:27.810 --> 00:36:29.940
So you can see it on
the Sony TVs upstairs

00:36:29.940 --> 00:36:32.520
alongside your antenna feeds.

00:36:32.520 --> 00:36:35.862
And you'll also
see, on pay TV boxes

00:36:35.862 --> 00:36:38.070
you'll see these alongside
all your paid TV channels.

00:36:38.070 --> 00:36:39.957
And now it's just a
channel switch away.

00:36:39.957 --> 00:36:41.790
When you're channel
surfing, that experience

00:36:41.790 --> 00:36:44.207
is just right there.

00:36:44.207 --> 00:36:45.415
Can we switch back to slides?

00:36:50.400 --> 00:36:53.030
So we have several
partners that we've

00:36:53.030 --> 00:36:54.939
worked with really
closely to publish out

00:36:54.939 --> 00:36:56.480
these initial channels
that are going

00:36:56.480 --> 00:36:57.980
to be available on
Play Store today,

00:36:57.980 --> 00:37:00.410
and we have a lot more coming.

00:37:00.410 --> 00:37:03.240
I just showed Pluto TV, there's
also ZouZous by France TV.

00:37:03.240 --> 00:37:05.847
So lots of different content
from a lot of different places.

00:37:05.847 --> 00:37:08.180
We'll have more coming soon
as we start rolling this out

00:37:08.180 --> 00:37:10.080
for more consumers.

00:37:10.080 --> 00:37:11.402
All right, back to John.

00:37:11.402 --> 00:37:12.360
JOHN AFFAKI: Other one.

00:37:12.360 --> 00:37:14.900
ALLEN HUANG: Yup.

00:37:14.900 --> 00:37:16.630
JOHN AFFAKI: So
speaking of channels,

00:37:16.630 --> 00:37:18.560
in traditional broadcast
TV, after you finish

00:37:18.560 --> 00:37:20.780
watching a show the
next one starts,

00:37:20.780 --> 00:37:22.950
and the next one,
and the next one.

00:37:22.950 --> 00:37:27.030
Once I get started I can
get stuck on HGTV for hours.

00:37:27.030 --> 00:37:29.370
And the reason that happens
is because there's really

00:37:29.370 --> 00:37:32.429
no friction for me to keep
watching what interests me,

00:37:32.429 --> 00:37:34.720
whether it's the next episode
of something or something

00:37:34.720 --> 00:37:36.920
that I'm interested in.

00:37:36.920 --> 00:37:38.719
So Red Bull TV just
introduced a feature

00:37:38.719 --> 00:37:41.010
that we call auto play where
they create a personalized

00:37:41.010 --> 00:37:44.430
virtual channel of content to
watch, once you pick one video,

00:37:44.430 --> 00:37:47.470
and it keeps going,
and going, and going.

00:37:47.470 --> 00:37:50.010
And so we've introduced this
feature on multiple partners

00:37:50.010 --> 00:37:53.610
so far, and after introducing
it we see average session length

00:37:53.610 --> 00:37:55.100
with those
applications increased

00:37:55.100 --> 00:37:56.895
by over 15% for those partners.

00:37:56.895 --> 00:37:58.270
So it's something
that you really

00:37:58.270 --> 00:38:01.250
want to consider if you've
got a media application.

00:38:01.250 --> 00:38:03.760
Now, to help you build that
feature we introduce queuing

00:38:03.760 --> 00:38:06.570
and auto play functionality
in the Cast SDK, which

00:38:06.570 --> 00:38:09.120
makes it really easy for you
to create playlists, but also

00:38:09.120 --> 00:38:11.605
automatically starts buffering
the next piece of media

00:38:11.605 --> 00:38:13.730
before the current one
ends, so that the transition

00:38:13.730 --> 00:38:16.650
between these items is not
a 30 second buffering time.

00:38:16.650 --> 00:38:18.264
It's pretty much instant.

00:38:18.264 --> 00:38:19.680
Now, on Android
TV you can already

00:38:19.680 --> 00:38:23.570
build similar functionality
using the queuing APIs

00:38:23.570 --> 00:38:24.580
and media router.

00:38:24.580 --> 00:38:27.060
So basically with
those two features,

00:38:27.060 --> 00:38:30.881
building your own TV or audio
channel's never been easier.

00:38:30.881 --> 00:38:33.340
Now, with auto play we see
that reducing user friction

00:38:33.340 --> 00:38:35.420
increases user engagement.

00:38:35.420 --> 00:38:37.300
Another source of
friction is things

00:38:37.300 --> 00:38:39.660
that I'll call computery steps.

00:38:39.660 --> 00:38:42.440
A good example of
computery step is sign in.

00:38:42.440 --> 00:38:45.670
No one wants to sign in
into their television.

00:38:45.670 --> 00:38:47.300
Now, we launched
Smart Lock Passwords

00:38:47.300 --> 00:38:49.410
with this release of
Google Play Services,

00:38:49.410 --> 00:38:53.200
and if you integrate Smart Lock
Passwords into your application

00:38:53.200 --> 00:38:57.310
your credentials will carry over
between your mobile version,

00:38:57.310 --> 00:39:01.810
or your web version, or
your Android TV version.

00:39:01.810 --> 00:39:04.720
And so your user will be able
to save their credentials on one

00:39:04.720 --> 00:39:07.760
and not need to sign
in on multiple devices.

00:39:07.760 --> 00:39:10.800
Netflix has been our initial
partners, so what happens

00:39:10.800 --> 00:39:14.280
here is that when you go into
the Netflix application on TV

00:39:14.280 --> 00:39:16.302
once you've signed in
to your mobile device,

00:39:16.302 --> 00:39:18.760
you'll see a dialogue that lets
you know that you're signed

00:39:18.760 --> 00:39:21.490
into the Netflix account
associated with the same Google

00:39:21.490 --> 00:39:23.490
account that you've used
on your mobile devices.

00:39:23.490 --> 00:39:24.404
It's that easy.

00:39:24.404 --> 00:39:25.945
Now, for Google Cast
your credentials

00:39:25.945 --> 00:39:27.890
are probably already
on your mobile device,

00:39:27.890 --> 00:39:30.770
so this feature works great when
you've got multiple senders.

00:39:30.770 --> 00:39:34.040
For example, if I've got a
Tablet on my coffee table,

00:39:34.040 --> 00:39:37.210
I just pick it up, install
the Netflix application.

00:39:37.210 --> 00:39:39.829
I don't even need to sign in.

00:39:39.829 --> 00:39:41.620
All of my credentials
will already be there

00:39:41.620 --> 00:39:42.411
and so it's smooth.

00:39:44.860 --> 00:39:47.050
Now, we talk about friction.

00:39:47.050 --> 00:39:49.080
We briefly talked about
monetization before.

00:39:49.080 --> 00:39:51.540
So we all make great
apps-- hopefully you do.

00:39:51.540 --> 00:39:53.490
There's some not so
great ones, but we're

00:39:53.490 --> 00:39:55.030
going for the good ones.

00:39:55.030 --> 00:39:56.177
You have great content.

00:39:56.177 --> 00:39:58.010
But in the end you've
got to pay some bills,

00:39:58.010 --> 00:40:00.850
and ideally you'd like
to make some money.

00:40:00.850 --> 00:40:02.790
So for your users, if
you think that it's

00:40:02.790 --> 00:40:05.490
a pain to enter a credit
card on your phone,

00:40:05.490 --> 00:40:07.785
it's crazy on the TV.

00:40:07.785 --> 00:40:09.570
But you've got to
understand here

00:40:09.570 --> 00:40:12.240
that you've got all of the
goodness of the Google Play

00:40:12.240 --> 00:40:14.410
Store, including
your user stored

00:40:14.410 --> 00:40:17.120
forms of payment,
purchase histories, APIs

00:40:17.120 --> 00:40:18.866
for in app billing,
subscription.

00:40:18.866 --> 00:40:20.990
Everything's already there
so you could pretty much

00:40:20.990 --> 00:40:22.620
eliminate all of that friction.

00:40:22.620 --> 00:40:24.410
Whether it's building
native apps you're

00:40:24.410 --> 00:40:26.660
running on Android TV directly
where you have the Play

00:40:26.660 --> 00:40:29.720
Store there, or for the apps
for Cast that you're running

00:40:29.720 --> 00:40:31.807
on your mobile devices
either on Android or iOS,

00:40:31.807 --> 00:40:33.640
the friction of collecting
payments is gone.

00:40:33.640 --> 00:40:34.140
Why?

00:40:34.140 --> 00:40:36.254
Because we're reusing
existing technology.

00:40:36.254 --> 00:40:38.420
So in the screenshot that
we have here, for example,

00:40:38.420 --> 00:40:42.236
from Hungry Sharks
Evolution, a big time sink.

00:40:42.236 --> 00:40:44.110
I could buy gems to make
my shark more hungry

00:40:44.110 --> 00:40:47.750
and I could pay for it using
my wallet or play balance here,

00:40:47.750 --> 00:40:50.440
as well as carrier billing that
I might have set up already

00:40:50.440 --> 00:40:51.860
on my phone.

00:40:51.860 --> 00:40:55.509
So because it's Android TV
or if it's on Android or iOS,

00:40:55.509 --> 00:40:57.800
there's really no friction
because we've already set up

00:40:57.800 --> 00:41:01.130
the payment system for you.

00:41:01.130 --> 00:41:02.800
Now, ads are also
a great way where

00:41:02.800 --> 00:41:05.008
you're going to be able to
monetize your application.

00:41:05.008 --> 00:41:06.680
In particular, video
ads are something

00:41:06.680 --> 00:41:08.920
that TV watchers are
very familiar with

00:41:08.920 --> 00:41:09.980
and are expecting.

00:41:09.980 --> 00:41:12.500
Now, because these are
familiar on Android iOS

00:41:12.500 --> 00:41:16.290
apps, your existing video
ad solutions just work.

00:41:16.290 --> 00:41:17.970
If you're already
using the IMA SDK

00:41:17.970 --> 00:41:20.470
to deliver video ads regardless
of what video server you're

00:41:20.470 --> 00:41:23.130
using, they're just work.

00:41:23.130 --> 00:41:25.240
This is one of the biggest
benefits of building

00:41:25.240 --> 00:41:26.670
on top of established platform.

00:41:26.670 --> 00:41:28.730
So here's a
screenshot of YouTube

00:41:28.730 --> 00:41:31.080
where we show TrueView ads
by building as UI on top

00:41:31.080 --> 00:41:34.370
of our playback fragment.

00:41:34.370 --> 00:41:37.660
So what does this
all mean for you?

00:41:37.660 --> 00:41:40.459
So we've talked about the
living room ecosystem,

00:41:40.459 --> 00:41:41.500
and it's growing rapidly.

00:41:41.500 --> 00:41:42.874
And we believe--
that's why we're

00:41:42.874 --> 00:41:45.380
betting on it-- that there's
huge opportunity there.

00:41:45.380 --> 00:41:47.090
Now, Google's
providing solutions

00:41:47.090 --> 00:41:49.520
for the entire ecosystem
to let developers

00:41:49.520 --> 00:41:52.060
like you take advantage of
your existing applications

00:41:52.060 --> 00:41:55.310
and websites to easily
get into the living room.

00:41:55.310 --> 00:41:57.060
If you've got an
Android application

00:41:57.060 --> 00:41:59.740
and your interaction model
benefits a game controller

00:41:59.740 --> 00:42:02.520
or remote control, then getting
it up and running on Android TV

00:42:02.520 --> 00:42:03.690
is super simple.

00:42:03.690 --> 00:42:06.710
And with Razer, NVIDIA and
Sony releasing their devices,

00:42:06.710 --> 00:42:10.160
the size of the market
is growing rapidly.

00:42:10.160 --> 00:42:12.980
If you're building or already
have an Android iOS for Chrome

00:42:12.980 --> 00:42:15.680
applications and want to take
advantage of multiple screens

00:42:15.680 --> 00:42:18.500
and speakers in the home, we
have millions of Cast devices

00:42:18.500 --> 00:42:20.690
out there, and you could
build some truly engaging

00:42:20.690 --> 00:42:23.150
interactive experiences
that could take advantages

00:42:23.150 --> 00:42:25.610
of multiple senders at scale.

00:42:25.610 --> 00:42:29.755
So whether it's games, audio,
video, or recipe sharing apps,

00:42:29.755 --> 00:42:31.130
or whatever you
can imagine, it's

00:42:31.130 --> 00:42:36.150
really never been easier to get
compelling apps on television.

00:42:36.150 --> 00:42:38.780
So whether you choose
Android TV, Cast, or anything

00:42:38.780 --> 00:42:40.970
in our ecosystem, we've
got plenty of support,

00:42:40.970 --> 00:42:43.210
and our dev rel team's really
excited to get folks up

00:42:43.210 --> 00:42:44.724
and running as
quickly as possible.

00:42:44.724 --> 00:42:46.640
You can find more
information about developing

00:42:46.640 --> 00:42:49.015
for Android TV and Google
Cast, and you could take a look

00:42:49.015 --> 00:42:50.780
at the following links.

00:42:50.780 --> 00:42:54.240
And you can also attend some
of our Box Talks during I/O

00:42:54.240 --> 00:42:58.050
or watch the DevBytes online for
Android TV and Cast on YouTube.

00:42:58.050 --> 00:43:01.120
If you've got any feedback,
please provide it online.

00:43:01.120 --> 00:43:03.250
Thanks, everybody,
for attending.

00:43:03.250 --> 00:43:04.150
We're out of time.

00:43:04.150 --> 00:43:06.590
We could take questions outside.

00:43:06.590 --> 00:43:07.310
But thank you.

00:43:07.310 --> 00:43:09.810
We really look forward to seeing
what you guys come up with.

00:43:09.810 --> 00:43:13.650
[APPLAUSE]

