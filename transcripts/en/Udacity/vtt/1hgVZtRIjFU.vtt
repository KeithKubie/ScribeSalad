WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.000
[Narrator] Hi, I'm Kathleen and Sebastian wrote a piece of code for you

00:00:04.000 --> 00:00:07.000
that I am now going to demonstrate.

00:00:07.000 --> 00:00:10.000
So, the main class is a class called robot.

00:00:10.000 --> 00:00:16.000
This robot lives in a 2-dimensional world of size 100 meters X 100 meters.

00:00:16.000 --> 00:00:21.000
It can see 4 different landmarks that are located at the following coordinates:

00:00:21.000 --> 00:00:24.000
20, 20; 80,80; 20,80; 80,20.

00:00:24.000 --> 00:00:26.000
So, here's how we make such a robot.

00:00:26.000 --> 00:00:28.000
It's really easy.

00:00:28.000 --> 00:00:32.000
All you have to do is call a function robot() and assign it to a variable myrobot.

00:00:32.000 --> 00:00:35.000
So, now that we can do things with myrobot.

00:00:35.000 --> 00:00:37.000
For example, we can set a position.

00:00:37.000 --> 00:00:42.000
These 3 values are the X coordinate, the Y coordinate, and the heading in radians,

00:00:42.000 --> 00:00:46.000
and this command assigns those values to the robot.

00:00:46.000 --> 00:00:48.000
So, let's print these things out

00:00:48.000 --> 00:00:52.000
and down here you see the output

00:00:52.000 --> 00:00:57.000
X=10, Y=10, and heading=0.

00:00:57.000 --> 00:01:04.000
Next, let's make the robot move. This robot moves 10 meters forward and doesn't turn.

00:01:04.000 --> 00:01:07.000
So, let's print the resulting position.

00:01:07.000 --> 00:01:11.000
And here we go, you can see that it's now at 20, 10, and 0.

00:01:11.000 --> 00:01:16.000
It moved 10 meters forward from 10,10 to 20,10.

00:01:16.000 --> 00:01:22.000
Now, let's make the robot turn by pi/2 and move 10 meters.

00:01:22.000 --> 00:01:26.000
So, now the robot is heading in the direction of pi/2,

00:01:26.000 --> 00:01:31.000
and it moved forward 10 meters in the Y direction, instead of the X direction.

00:01:31.000 --> 00:01:34.000
So, as you can tell it's really easy to program.

00:01:34.000 --> 00:01:37.000
The last thing I want to show you is how to generate measurements.

00:01:37.000 --> 00:01:40.000
There's a really easy command called sense()

00:01:40.000 --> 00:01:46.000
and all it does is give you the distance to the 4 landmarks, 1, 2, 3, and 4.

00:01:46.000 --> 00:01:49.000
For now this is all you need to know about the class robot

00:01:49.000 --> 00:01:52.000
that Sebastian has programmed for you.

00:01:52.000 --> 00:01:56.000
You might want to spend some time familiarizing yourself with the code

00:01:56.000 --> 00:02:00.279
to see how this is all configured.

