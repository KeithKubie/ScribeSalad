WEBVTT
Kind: captions
Language: en

00:00:01.420 --> 00:00:03.610
[Music]

00:00:03.610 --> 00:00:03.620
[Music]
 

00:00:03.620 --> 00:00:06.440
[Music]
along welcome everybody my name is Z

00:00:06.440 --> 00:00:06.450
along welcome everybody my name is Z
 

00:00:06.450 --> 00:00:08.179
along welcome everybody my name is Z
Boyer and I'm the technical lead for

00:00:08.179 --> 00:00:08.189
Boyer and I'm the technical lead for
 

00:00:08.189 --> 00:00:16.310
Boyer and I'm the technical lead for
architecture components thank you so

00:00:16.310 --> 00:00:16.320
architecture components thank you so
 

00:00:16.320 --> 00:00:18.320
architecture components thank you so
today we are going to talk about what is

00:00:18.320 --> 00:00:18.330
today we are going to talk about what is
 

00:00:18.330 --> 00:00:20.060
today we are going to talk about what is
new in architecture components but

00:00:20.060 --> 00:00:20.070
new in architecture components but
 

00:00:20.070 --> 00:00:22.429
new in architecture components but
before we start with them let's look at

00:00:22.429 --> 00:00:22.439
before we start with them let's look at
 

00:00:22.439 --> 00:00:25.340
before we start with them let's look at
what we have been doing in the last two

00:00:25.340 --> 00:00:25.350
what we have been doing in the last two
 

00:00:25.350 --> 00:00:28.339
what we have been doing in the last two
three years so three years ago were

00:00:28.339 --> 00:00:28.349
three years so three years ago were
 

00:00:28.349 --> 00:00:30.740
three years so three years ago were
talking to developers and they were

00:00:30.740 --> 00:00:30.750
talking to developers and they were
 

00:00:30.750 --> 00:00:32.870
talking to developers and they were
saying oh Android development is so hot

00:00:32.870 --> 00:00:32.880
saying oh Android development is so hot
 

00:00:32.880 --> 00:00:36.410
saying oh Android development is so hot
so hot like what is hot about Android

00:00:36.410 --> 00:00:36.420
so hot like what is hot about Android
 

00:00:36.420 --> 00:00:38.389
so hot like what is hot about Android
development and they started listing

00:00:38.389 --> 00:00:38.399
development and they started listing
 

00:00:38.399 --> 00:00:42.530
development and they started listing
things like life cycles persistence like

00:00:42.530 --> 00:00:42.540
things like life cycles persistence like
 

00:00:42.540 --> 00:00:45.619
things like life cycles persistence like
a lot of things are just hot you know so

00:00:45.619 --> 00:00:45.629
a lot of things are just hot you know so
 

00:00:45.629 --> 00:00:47.420
a lot of things are just hot you know so
we needed to pick something we said okay

00:00:47.420 --> 00:00:47.430
we needed to pick something we said okay
 

00:00:47.430 --> 00:00:48.860
we needed to pick something we said okay
we are going to first create an

00:00:48.860 --> 00:00:48.870
we are going to first create an
 

00:00:48.870 --> 00:00:50.660
we are going to first create an
architecture guidance and we're going to

00:00:50.660 --> 00:00:50.670
architecture guidance and we're going to
 

00:00:50.670 --> 00:00:53.000
architecture guidance and we're going to
tackle some of the major problems we

00:00:53.000 --> 00:00:53.010
tackle some of the major problems we
 

00:00:53.010 --> 00:00:55.100
tackle some of the major problems we
think are important so we started with

00:00:55.100 --> 00:00:55.110
think are important so we started with
 

00:00:55.110 --> 00:00:58.189
think are important so we started with
life cycles and persistence so two years

00:00:58.189 --> 00:00:58.199
life cycles and persistence so two years
 

00:00:58.199 --> 00:01:00.380
life cycles and persistence so two years
ago at i/o being an Austin

00:01:00.380 --> 00:01:00.390
ago at i/o being an Austin
 

00:01:00.390 --> 00:01:02.810
ago at i/o being an Austin
soon after we have added paging because

00:01:02.810 --> 00:01:02.820
soon after we have added paging because
 

00:01:02.820 --> 00:01:04.369
soon after we have added paging because
we realize people struggle with that

00:01:04.369 --> 00:01:04.379
we realize people struggle with that
 

00:01:04.379 --> 00:01:06.859
we realize people struggle with that
making it efficient and then in last

00:01:06.859 --> 00:01:06.869
making it efficient and then in last
 

00:01:06.869 --> 00:01:09.230
making it efficient and then in last
year's i/o we have added work manager

00:01:09.230 --> 00:01:09.240
year's i/o we have added work manager
 

00:01:09.240 --> 00:01:12.469
year's i/o we have added work manager
and navigation to the fog all these five

00:01:12.469 --> 00:01:12.479
and navigation to the fog all these five
 

00:01:12.479 --> 00:01:15.260
and navigation to the fog all these five
libraries together had more than a

00:01:15.260 --> 00:01:15.270
libraries together had more than a
 

00:01:15.270 --> 00:01:17.420
libraries together had more than a
hundred and fifty releases in two years

00:01:17.420 --> 00:01:17.430
hundred and fifty releases in two years
 

00:01:17.430 --> 00:01:21.429
hundred and fifty releases in two years
the second release every five day and

00:01:21.429 --> 00:01:21.439
the second release every five day and
 

00:01:21.439 --> 00:01:24.800
the second release every five day and
based on the latest survey 70% of

00:01:24.800 --> 00:01:24.810
based on the latest survey 70% of
 

00:01:24.810 --> 00:01:27.080
based on the latest survey 70% of
professional developers use one of those

00:01:27.080 --> 00:01:27.090
professional developers use one of those
 

00:01:27.090 --> 00:01:30.800
professional developers use one of those
libraries in their applications so thank

00:01:30.800 --> 00:01:30.810
libraries in their applications so thank
 

00:01:30.810 --> 00:01:32.380
libraries in their applications so thank
you

00:01:32.380 --> 00:01:32.390
you
 

00:01:32.390 --> 00:01:36.740
you
[Applause]

00:01:36.740 --> 00:01:36.750
 

00:01:36.750 --> 00:01:39.840
this is a like very amazing adoption

00:01:39.840 --> 00:01:39.850
this is a like very amazing adoption
 

00:01:39.850 --> 00:01:42.270
this is a like very amazing adoption
number for us and let's look at how we

00:01:42.270 --> 00:01:42.280
number for us and let's look at how we
 

00:01:42.280 --> 00:01:44.790
number for us and let's look at how we
are doing it so every project starts its

00:01:44.790 --> 00:01:44.800
are doing it so every project starts its
 

00:01:44.800 --> 00:01:46.800
are doing it so every project starts its
life with an early access program so

00:01:46.800 --> 00:01:46.810
life with an early access program so
 

00:01:46.810 --> 00:01:48.750
life with an early access program so
once we know what we're playing to do we

00:01:48.750 --> 00:01:48.760
once we know what we're playing to do we
 

00:01:48.760 --> 00:01:51.030
once we know what we're playing to do we
send it to some developers ask for

00:01:51.030 --> 00:01:51.040
send it to some developers ask for
 

00:01:51.040 --> 00:01:53.700
send it to some developers ask for
feedback after we are comfortable with

00:01:53.700 --> 00:01:53.710
feedback after we are comfortable with
 

00:01:53.710 --> 00:01:56.280
feedback after we are comfortable with
that feedback we release a public alpha

00:01:56.280 --> 00:01:56.290
that feedback we release a public alpha
 

00:01:56.290 --> 00:01:58.020
that feedback we release a public alpha
which is when we are still developing it

00:01:58.020 --> 00:01:58.030
which is when we are still developing it
 

00:01:58.030 --> 00:02:00.660
which is when we are still developing it
actively but it is ready for to show

00:02:00.660 --> 00:02:00.670
actively but it is ready for to show
 

00:02:00.670 --> 00:02:03.720
actively but it is ready for to show
everyone after some time we become happy

00:02:03.720 --> 00:02:03.730
everyone after some time we become happy
 

00:02:03.730 --> 00:02:06.180
everyone after some time we become happy
with the functionality and the api's and

00:02:06.180 --> 00:02:06.190
with the functionality and the api's and
 

00:02:06.190 --> 00:02:07.950
with the functionality and the api's and
we call it beta when we call something

00:02:07.950 --> 00:02:07.960
we call it beta when we call something
 

00:02:07.960 --> 00:02:10.590
we call it beta when we call something
beta that means the API will not change

00:02:10.590 --> 00:02:10.600
beta that means the API will not change
 

00:02:10.600 --> 00:02:12.870
beta that means the API will not change
anymore so you can write code and that

00:02:12.870 --> 00:02:12.880
anymore so you can write code and that
 

00:02:12.880 --> 00:02:15.510
anymore so you can write code and that
code will still keep compiling and

00:02:15.510 --> 00:02:15.520
code will still keep compiling and
 

00:02:15.520 --> 00:02:17.550
code will still keep compiling and
eventually the library becomes stable

00:02:17.550 --> 00:02:17.560
eventually the library becomes stable
 

00:02:17.560 --> 00:02:20.250
eventually the library becomes stable
soon after the library becomes stable we

00:02:20.250 --> 00:02:20.260
soon after the library becomes stable we
 

00:02:20.260 --> 00:02:22.650
soon after the library becomes stable we
always go back to alpha and a beta so

00:02:22.650 --> 00:02:22.660
always go back to alpha and a beta so
 

00:02:22.660 --> 00:02:24.780
always go back to alpha and a beta so
this cycle keeps turning

00:02:24.780 --> 00:02:24.790
this cycle keeps turning
 

00:02:24.790 --> 00:02:26.670
this cycle keeps turning
we heard that like many people are

00:02:26.670 --> 00:02:26.680
we heard that like many people are
 

00:02:26.680 --> 00:02:28.830
we heard that like many people are
unhappy because everything is in alpha

00:02:28.830 --> 00:02:28.840
unhappy because everything is in alpha
 

00:02:28.840 --> 00:02:31.050
unhappy because everything is in alpha
all the time this is because of it you

00:02:31.050 --> 00:02:31.060
all the time this is because of it you
 

00:02:31.060 --> 00:02:32.670
all the time this is because of it you
can happily use the latest stable

00:02:32.670 --> 00:02:32.680
can happily use the latest stable
 

00:02:32.680 --> 00:02:34.920
can happily use the latest stable
version but we want to develop in the

00:02:34.920 --> 00:02:34.930
version but we want to develop in the
 

00:02:34.930 --> 00:02:36.900
version but we want to develop in the
open and we want this rapid iteration

00:02:36.900 --> 00:02:36.910
open and we want this rapid iteration
 

00:02:36.910 --> 00:02:40.260
open and we want this rapid iteration
cycle and all of this is possible thanks

00:02:40.260 --> 00:02:40.270
cycle and all of this is possible thanks
 

00:02:40.270 --> 00:02:43.470
cycle and all of this is possible thanks
to the community so we do a lot of user

00:02:43.470 --> 00:02:43.480
to the community so we do a lot of user
 

00:02:43.480 --> 00:02:45.150
to the community so we do a lot of user
experience research we talk to the

00:02:45.150 --> 00:02:45.160
experience research we talk to the
 

00:02:45.160 --> 00:02:47.640
experience research we talk to the
whoppers they keep these the Whopper

00:02:47.640 --> 00:02:47.650
whoppers they keep these the Whopper
 

00:02:47.650 --> 00:02:50.010
whoppers they keep these the Whopper
Diaries while they work they do really

00:02:50.010 --> 00:02:50.020
Diaries while they work they do really
 

00:02:50.020 --> 00:02:53.100
Diaries while they work they do really
regular work at work they look what

00:02:53.100 --> 00:02:53.110
regular work at work they look what
 

00:02:53.110 --> 00:02:54.750
regular work at work they look what
they're doing and tell us how it is

00:02:54.750 --> 00:02:54.760
they're doing and tell us how it is
 

00:02:54.760 --> 00:02:56.430
they're doing and tell us how it is
going we do a lot of one-on-one

00:02:56.430 --> 00:02:56.440
going we do a lot of one-on-one
 

00:02:56.440 --> 00:02:58.320
going we do a lot of one-on-one
interviews with developers to better

00:02:58.320 --> 00:02:58.330
interviews with developers to better
 

00:02:58.330 --> 00:03:00.960
interviews with developers to better
understand the problems we do early

00:03:00.960 --> 00:03:00.970
understand the problems we do early
 

00:03:00.970 --> 00:03:03.180
understand the problems we do early
access program so that before showing it

00:03:03.180 --> 00:03:03.190
access program so that before showing it
 

00:03:03.190 --> 00:03:05.490
access program so that before showing it
to everybody we can talk to a closer

00:03:05.490 --> 00:03:05.500
to everybody we can talk to a closer
 

00:03:05.500 --> 00:03:08.160
to everybody we can talk to a closer
group more in-depth and get initial

00:03:08.160 --> 00:03:08.170
group more in-depth and get initial
 

00:03:08.170 --> 00:03:11.220
group more in-depth and get initial
feedback issue tracker where you report

00:03:11.220 --> 00:03:11.230
feedback issue tracker where you report
 

00:03:11.230 --> 00:03:13.410
feedback issue tracker where you report
your bugs and feature request is very

00:03:13.410 --> 00:03:13.420
your bugs and feature request is very
 

00:03:13.420 --> 00:03:15.120
your bugs and feature request is very
important for us that's what we use to

00:03:15.120 --> 00:03:15.130
important for us that's what we use to
 

00:03:15.130 --> 00:03:19.050
important for us that's what we use to
prioritize features and bugs last but

00:03:19.050 --> 00:03:19.060
prioritize features and bugs last but
 

00:03:19.060 --> 00:03:21.390
prioritize features and bugs last but
not least we close the follow things

00:03:21.390 --> 00:03:21.400
not least we close the follow things
 

00:03:21.400 --> 00:03:23.460
not least we close the follow things
like reddit stack overflow to see what

00:03:23.460 --> 00:03:23.470
like reddit stack overflow to see what
 

00:03:23.470 --> 00:03:27.449
like reddit stack overflow to see what
the community is thinking so yesterday

00:03:27.449 --> 00:03:27.459
the community is thinking so yesterday
 

00:03:27.459 --> 00:03:29.640
the community is thinking so yesterday
we have announced that is going to be a

00:03:29.640 --> 00:03:29.650
we have announced that is going to be a
 

00:03:29.650 --> 00:03:33.630
we have announced that is going to be a
cutting first for Android so this means

00:03:33.630 --> 00:03:33.640
cutting first for Android so this means
 

00:03:33.640 --> 00:03:35.910
cutting first for Android so this means
we are not going to just release KTX

00:03:35.910 --> 00:03:35.920
we are not going to just release KTX
 

00:03:35.920 --> 00:03:37.830
we are not going to just release KTX
libraries we are going to release more

00:03:37.830 --> 00:03:37.840
libraries we are going to release more
 

00:03:37.840 --> 00:03:40.199
libraries we are going to release more
coding focus libraries we some of them

00:03:40.199 --> 00:03:40.209
coding focus libraries we some of them
 

00:03:40.209 --> 00:03:42.600
coding focus libraries we some of them
will be written and Kotlin to take

00:03:42.600 --> 00:03:42.610
will be written and Kotlin to take
 

00:03:42.610 --> 00:03:44.280
will be written and Kotlin to take
advantage of the better language

00:03:44.280 --> 00:03:44.290
advantage of the better language
 

00:03:44.290 --> 00:03:47.130
advantage of the better language
features so it means some of the api's

00:03:47.130 --> 00:03:47.140
features so it means some of the api's
 

00:03:47.140 --> 00:03:49.590
features so it means some of the api's
will first target Kotlin and then we

00:03:49.590 --> 00:03:49.600
will first target Kotlin and then we
 

00:03:49.600 --> 00:03:50.760
will first target Kotlin and then we
also support the java programming

00:03:50.760 --> 00:03:50.770
also support the java programming
 

00:03:50.770 --> 00:03:55.490
also support the java programming
language so during the today in this

00:03:55.490 --> 00:03:55.500
language so during the today in this
 

00:03:55.500 --> 00:03:57.690
language so during the today in this
when you talk about these new features

00:03:57.690 --> 00:03:57.700
when you talk about these new features
 

00:03:57.700 --> 00:04:01.650
when you talk about these new features
you will see a lot of coding okay so

00:04:01.650 --> 00:04:01.660
you will see a lot of coding okay so
 

00:04:01.660 --> 00:04:03.150
you will see a lot of coding okay so
let's start the libraries and we'll

00:04:03.150 --> 00:04:03.160
let's start the libraries and we'll
 

00:04:03.160 --> 00:04:04.830
let's start the libraries and we'll
start with the oldest library we have

00:04:04.830 --> 00:04:04.840
start with the oldest library we have
 

00:04:04.840 --> 00:04:07.980
start with the oldest library we have
data bindings so if you don't know data

00:04:07.980 --> 00:04:07.990
data bindings so if you don't know data
 

00:04:07.990 --> 00:04:10.530
data bindings so if you don't know data
binding data binding is our declarative

00:04:10.530 --> 00:04:10.540
binding data binding is our declarative
 

00:04:10.540 --> 00:04:13.260
binding data binding is our declarative
UI since I'd XML it tries to bridge the

00:04:13.260 --> 00:04:13.270
UI since I'd XML it tries to bridge the
 

00:04:13.270 --> 00:04:16.170
UI since I'd XML it tries to bridge the
gap between your coat and your XML

00:04:16.170 --> 00:04:16.180
gap between your coat and your XML
 

00:04:16.180 --> 00:04:18.779
gap between your coat and your XML
so if you have a layout like this if you

00:04:18.779 --> 00:04:18.789
so if you have a layout like this if you
 

00:04:18.789 --> 00:04:20.820
so if you have a layout like this if you
put these layout tags around it you'll

00:04:20.820 --> 00:04:20.830
put these layout tags around it you'll
 

00:04:20.830 --> 00:04:23.790
put these layout tags around it you'll
get a binding cause if you add variables

00:04:23.790 --> 00:04:23.800
get a binding cause if you add variables
 

00:04:23.800 --> 00:04:26.040
get a binding cause if you add variables
as inputs to that layout they become

00:04:26.040 --> 00:04:26.050
as inputs to that layout they become
 

00:04:26.050 --> 00:04:27.870
as inputs to that layout they become
setters and getters in this binding

00:04:27.870 --> 00:04:27.880
setters and getters in this binding
 

00:04:27.880 --> 00:04:29.700
setters and getters in this binding
class and then you can use these

00:04:29.700 --> 00:04:29.710
class and then you can use these
 

00:04:29.710 --> 00:04:32.250
class and then you can use these
variables in your layout and declare

00:04:32.250 --> 00:04:32.260
variables in your layout and declare
 

00:04:32.260 --> 00:04:34.230
variables in your layout and declare
what you want to show and data binding

00:04:34.230 --> 00:04:34.240
what you want to show and data binding
 

00:04:34.240 --> 00:04:38.070
what you want to show and data binding
takes care of showing it this last one

00:04:38.070 --> 00:04:38.080
takes care of showing it this last one
 

00:04:38.080 --> 00:04:40.469
takes care of showing it this last one
year we've been heavily focused on the

00:04:40.469 --> 00:04:40.479
year we've been heavily focused on the
 

00:04:40.479 --> 00:04:43.050
year we've been heavily focused on the
tooling part of data binding so we've

00:04:43.050 --> 00:04:43.060
tooling part of data binding so we've
 

00:04:43.060 --> 00:04:44.820
tooling part of data binding so we've
significantly improved the compilation

00:04:44.820 --> 00:04:44.830
significantly improved the compilation
 

00:04:44.830 --> 00:04:47.969
significantly improved the compilation
speed it's not 20% faster while we run

00:04:47.969 --> 00:04:47.979
speed it's not 20% faster while we run
 

00:04:47.979 --> 00:04:50.339
speed it's not 20% faster while we run
the annotation processor we had this

00:04:50.339 --> 00:04:50.349
the annotation processor we had this
 

00:04:50.349 --> 00:04:52.680
the annotation processor we had this
support for distributed Gradle cache so

00:04:52.680 --> 00:04:52.690
support for distributed Gradle cache so
 

00:04:52.690 --> 00:04:54.450
support for distributed Gradle cache so
that if you if you're using in your

00:04:54.450 --> 00:04:54.460
that if you if you're using in your
 

00:04:54.460 --> 00:04:56.760
that if you if you're using in your
company you benefit from your peers

00:04:56.760 --> 00:04:56.770
company you benefit from your peers
 

00:04:56.770 --> 00:04:59.850
company you benefit from your peers
compiling the project last but not least

00:04:59.850 --> 00:04:59.860
compiling the project last but not least
 

00:04:59.860 --> 00:05:02.070
compiling the project last but not least
in three point five now we have an

00:05:02.070 --> 00:05:02.080
in three point five now we have an
 

00:05:02.080 --> 00:05:04.740
in three point five now we have an
incremental annotation processor for

00:05:04.740 --> 00:05:04.750
incremental annotation processor for
 

00:05:04.750 --> 00:05:07.170
incremental annotation processor for
data binding it's experimental so you

00:05:07.170 --> 00:05:07.180
data binding it's experimental so you
 

00:05:07.180 --> 00:05:09.300
data binding it's experimental so you
need to turn it on with this flag so

00:05:09.300 --> 00:05:09.310
need to turn it on with this flag so
 

00:05:09.310 --> 00:05:10.350
need to turn it on with this flag so
please give it a try

00:05:10.350 --> 00:05:10.360
please give it a try
 

00:05:10.360 --> 00:05:14.159
please give it a try
and let us know how it works so other

00:05:14.159 --> 00:05:14.169
and let us know how it works so other
 

00:05:14.169 --> 00:05:16.260
and let us know how it works so other
part of data mining is tooling

00:05:16.260 --> 00:05:16.270
part of data mining is tooling
 

00:05:16.270 --> 00:05:20.130
part of data mining is tooling
integration which is studio so we did

00:05:20.130 --> 00:05:20.140
integration which is studio so we did
 

00:05:20.140 --> 00:05:21.870
integration which is studio so we did
out of work here so one of the things

00:05:21.870 --> 00:05:21.880
out of work here so one of the things
 

00:05:21.880 --> 00:05:23.940
out of work here so one of the things
we've improved is how the live cost

00:05:23.940 --> 00:05:23.950
we've improved is how the live cost
 

00:05:23.950 --> 00:05:26.370
we've improved is how the live cost
generation works so on the left here I

00:05:26.370 --> 00:05:26.380
generation works so on the left here I
 

00:05:26.380 --> 00:05:28.500
generation works so on the left here I
have this binding clause associated with

00:05:28.500 --> 00:05:28.510
have this binding clause associated with
 

00:05:28.510 --> 00:05:31.050
have this binding clause associated with
the layout on the right and if I want to

00:05:31.050 --> 00:05:31.060
the layout on the right and if I want to
 

00:05:31.060 --> 00:05:33.240
the layout on the right and if I want to
access this textview I can just go ahead

00:05:33.240 --> 00:05:33.250
access this textview I can just go ahead
 

00:05:33.250 --> 00:05:36.270
access this textview I can just go ahead
and then give it an ID so when he really

00:05:36.270 --> 00:05:36.280
and then give it an ID so when he really
 

00:05:36.280 --> 00:05:38.040
and then give it an ID so when he really
has an ID it becomes a field in the

00:05:38.040 --> 00:05:38.050
has an ID it becomes a field in the
 

00:05:38.050 --> 00:05:40.500
has an ID it becomes a field in the
binding cost and here immediately

00:05:40.500 --> 00:05:40.510
binding cost and here immediately
 

00:05:40.510 --> 00:05:43.050
binding cost and here immediately
without compiling the project I have

00:05:43.050 --> 00:05:43.060
without compiling the project I have
 

00:05:43.060 --> 00:05:45.510
without compiling the project I have
that field in that binding object so you

00:05:45.510 --> 00:05:45.520
that field in that binding object so you
 

00:05:45.520 --> 00:05:50.550
that field in that binding object so you
don't need to wait as

00:05:50.550 --> 00:05:50.560
 

00:05:50.560 --> 00:05:54.100
think so but if you're using data

00:05:54.100 --> 00:05:54.110
think so but if you're using data
 

00:05:54.110 --> 00:05:56.110
think so but if you're using data
whining this is not how we update the

00:05:56.110 --> 00:05:56.120
whining this is not how we update the
 

00:05:56.120 --> 00:05:58.630
whining this is not how we update the
views right you can also do it with a

00:05:58.630 --> 00:05:58.640
views right you can also do it with a
 

00:05:58.640 --> 00:06:00.400
views right you can also do it with a
variable that's actually how you will do

00:06:00.400 --> 00:06:00.410
variable that's actually how you will do
 

00:06:00.410 --> 00:06:02.320
variable that's actually how you will do
it in data wrangling so we go ahead

00:06:02.320 --> 00:06:02.330
it in data wrangling so we go ahead
 

00:06:02.330 --> 00:06:04.480
it in data wrangling so we go ahead
change it we had this header as a

00:06:04.480 --> 00:06:04.490
change it we had this header as a
 

00:06:04.490 --> 00:06:06.670
change it we had this header as a
variable to the layout as you can see

00:06:06.670 --> 00:06:06.680
variable to the layout as you can see
 

00:06:06.680 --> 00:06:09.130
variable to the layout as you can see
all autocomplete works we get rid of the

00:06:09.130 --> 00:06:09.140
all autocomplete works we get rid of the
 

00:06:09.140 --> 00:06:11.410
all autocomplete works we get rid of the
ID because we don't need it instead

00:06:11.410 --> 00:06:11.420
ID because we don't need it instead
 

00:06:11.420 --> 00:06:14.260
ID because we don't need it instead
we're just going to say text this header

00:06:14.260 --> 00:06:14.270
we're just going to say text this header
 

00:06:14.270 --> 00:06:16.240
we're just going to say text this header
as you can see code completion works

00:06:16.240 --> 00:06:16.250
as you can see code completion works
 

00:06:16.250 --> 00:06:19.240
as you can see code completion works
here too on the left it immediately turn

00:06:19.240 --> 00:06:19.250
here too on the left it immediately turn
 

00:06:19.250 --> 00:06:22.420
here too on the left it immediately turn
red so just go ahead and fix it so all

00:06:22.420 --> 00:06:22.430
red so just go ahead and fix it so all
 

00:06:22.430 --> 00:06:24.400
red so just go ahead and fix it so all
of these works without waiting for

00:06:24.400 --> 00:06:24.410
of these works without waiting for
 

00:06:24.410 --> 00:06:32.770
of these works without waiting for
compilation so another important thing

00:06:32.770 --> 00:06:32.780
compilation so another important thing
 

00:06:32.780 --> 00:06:35.560
compilation so another important thing
is refactoring so I have a user object

00:06:35.560 --> 00:06:35.570
is refactoring so I have a user object
 

00:06:35.570 --> 00:06:37.600
is refactoring so I have a user object
here on the left which is a variable on

00:06:37.600 --> 00:06:37.610
here on the left which is a variable on
 

00:06:37.610 --> 00:06:39.610
here on the left which is a variable on
the right and in one of the expressions

00:06:39.610 --> 00:06:39.620
the right and in one of the expressions
 

00:06:39.620 --> 00:06:41.920
the right and in one of the expressions
I access that and call a function on

00:06:41.920 --> 00:06:41.930
I access that and call a function on
 

00:06:41.930 --> 00:06:44.380
I access that and call a function on
that user object now if I go to the

00:06:44.380 --> 00:06:44.390
that user object now if I go to the
 

00:06:44.390 --> 00:06:46.510
that user object now if I go to the
class and say I'm gonna rename this

00:06:46.510 --> 00:06:46.520
class and say I'm gonna rename this
 

00:06:46.520 --> 00:06:49.420
class and say I'm gonna rename this
function I'm gonna call it say combined

00:06:49.420 --> 00:06:49.430
function I'm gonna call it say combined
 

00:06:49.430 --> 00:06:52.660
function I'm gonna call it say combined
name so as soon as I make this change

00:06:52.660 --> 00:06:52.670
name so as soon as I make this change
 

00:06:52.670 --> 00:06:56.230
name so as soon as I make this change
and it entered Andros to do updates my

00:06:56.230 --> 00:06:56.240
and it entered Andros to do updates my
 

00:06:56.240 --> 00:06:58.510
and it entered Andros to do updates my
binding abstraction automatically for me

00:06:58.510 --> 00:06:58.520
binding abstraction automatically for me
 

00:06:58.520 --> 00:07:02.110
binding abstraction automatically for me
and you can do the same thing from XML

00:07:02.110 --> 00:07:02.120
and you can do the same thing from XML
 

00:07:02.120 --> 00:07:05.830
and you can do the same thing from XML
and it will update your code last but

00:07:05.830 --> 00:07:05.840
and it will update your code last but
 

00:07:05.840 --> 00:07:08.020
and it will update your code last but
not least we know data binding error

00:07:08.020 --> 00:07:08.030
not least we know data binding error
 

00:07:08.030 --> 00:07:10.240
not least we know data binding error
messages has been a huge problem that

00:07:10.240 --> 00:07:10.250
messages has been a huge problem that
 

00:07:10.250 --> 00:07:11.920
messages has been a huge problem that
like you will have any problem in your

00:07:11.920 --> 00:07:11.930
like you will have any problem in your
 

00:07:11.930 --> 00:07:13.510
like you will have any problem in your
compilation you will get a thousand

00:07:13.510 --> 00:07:13.520
compilation you will get a thousand
 

00:07:13.520 --> 00:07:16.240
compilation you will get a thousand
errors so we fix that problem we have

00:07:16.240 --> 00:07:16.250
errors so we fix that problem we have
 

00:07:16.250 --> 00:07:19.240
errors so we fix that problem we have
also added a section in your output the

00:07:19.240 --> 00:07:19.250
also added a section in your output the
 

00:07:19.250 --> 00:07:21.130
also added a section in your output the
specific to data binding errors so you

00:07:21.130 --> 00:07:21.140
specific to data binding errors so you
 

00:07:21.140 --> 00:07:26.350
specific to data binding errors so you
can easily discover them so similar to

00:07:26.350 --> 00:07:26.360
can easily discover them so similar to
 

00:07:26.360 --> 00:07:28.330
can easily discover them so similar to
the data binding like how do we access

00:07:28.330 --> 00:07:28.340
the data binding like how do we access
 

00:07:28.340 --> 00:07:30.670
the data binding like how do we access
views on androids let's locate all the

00:07:30.670 --> 00:07:30.680
views on androids let's locate all the
 

00:07:30.680 --> 00:07:33.700
views on androids let's locate all the
options we have we're gonna emulate them

00:07:33.700 --> 00:07:33.710
options we have we're gonna emulate them
 

00:07:33.710 --> 00:07:35.950
options we have we're gonna emulate them
in terms of elegance the compile time

00:07:35.950 --> 00:07:35.960
in terms of elegance the compile time
 

00:07:35.960 --> 00:07:39.190
in terms of elegance the compile time
safety and the build speed impact so

00:07:39.190 --> 00:07:39.200
safety and the build speed impact so
 

00:07:39.200 --> 00:07:41.940
safety and the build speed impact so
first we have the good old find me by ID

00:07:41.940 --> 00:07:41.950
first we have the good old find me by ID
 

00:07:41.950 --> 00:07:45.460
first we have the good old find me by ID
it's not elegance very verbose doesn't

00:07:45.460 --> 00:07:45.470
it's not elegance very verbose doesn't
 

00:07:45.470 --> 00:07:47.290
it's not elegance very verbose doesn't
provide any compile time safety you

00:07:47.290 --> 00:07:47.300
provide any compile time safety you
 

00:07:47.300 --> 00:07:48.580
provide any compile time safety you
don't know what type you are receiving

00:07:48.580 --> 00:07:48.590
don't know what type you are receiving
 

00:07:48.590 --> 00:07:50.620
don't know what type you are receiving
but it doesn't have any build speed

00:07:50.620 --> 00:07:50.630
but it doesn't have any build speed
 

00:07:50.630 --> 00:07:52.990
but it doesn't have any build speed
effects so that's good you could use

00:07:52.990 --> 00:07:53.000
effects so that's good you could use
 

00:07:53.000 --> 00:07:55.210
effects so that's good you could use
data binding which provides a very nice

00:07:55.210 --> 00:07:55.220
data binding which provides a very nice
 

00:07:55.220 --> 00:07:58.420
data binding which provides a very nice
API with the compile time safety but it

00:07:58.420 --> 00:07:58.430
API with the compile time safety but it
 

00:07:58.430 --> 00:08:00.490
API with the compile time safety but it
runs an annotation processor so it does

00:08:00.490 --> 00:08:00.500
runs an annotation processor so it does
 

00:08:00.500 --> 00:08:01.840
runs an annotation processor so it does
slow down your build

00:08:01.840 --> 00:08:01.850
slow down your build
 

00:08:01.850 --> 00:08:03.490
slow down your build
you could be using butter knife

00:08:03.490 --> 00:08:03.500
you could be using butter knife
 

00:08:03.500 --> 00:08:05.170
you could be using butter knife
similarly it's another annotation

00:08:05.170 --> 00:08:05.180
similarly it's another annotation
 

00:08:05.180 --> 00:08:07.240
similarly it's another annotation
processor so it's going to slow down

00:08:07.240 --> 00:08:07.250
processor so it's going to slow down
 

00:08:07.250 --> 00:08:09.970
processor so it's going to slow down
your belt now if you are incontinent

00:08:09.970 --> 00:08:09.980
your belt now if you are incontinent
 

00:08:09.980 --> 00:08:12.070
your belt now if you are incontinent
you could use common synthetic accessors

00:08:12.070 --> 00:08:12.080
you could use common synthetic accessors
 

00:08:12.080 --> 00:08:14.410
you could use common synthetic accessors
that provides partial compile time

00:08:14.410 --> 00:08:14.420
that provides partial compile time
 

00:08:14.420 --> 00:08:17.140
that provides partial compile time
safety is a very beautiful API but it

00:08:17.140 --> 00:08:17.150
safety is a very beautiful API but it
 

00:08:17.150 --> 00:08:18.820
safety is a very beautiful API but it
and also it doesn't have any build speed

00:08:18.820 --> 00:08:18.830
and also it doesn't have any build speed
 

00:08:18.830 --> 00:08:21.460
and also it doesn't have any build speed
impact but we are looking for this like

00:08:21.460 --> 00:08:21.470
impact but we are looking for this like
 

00:08:21.470 --> 00:08:23.860
impact but we are looking for this like
something that has a green checkmark in

00:08:23.860 --> 00:08:23.870
something that has a green checkmark in
 

00:08:23.870 --> 00:08:25.600
something that has a green checkmark in
all of these things they should be

00:08:25.600 --> 00:08:25.610
all of these things they should be
 

00:08:25.610 --> 00:08:28.690
all of these things they should be
possible and we don't need to look far

00:08:28.690 --> 00:08:28.700
possible and we don't need to look far
 

00:08:28.700 --> 00:08:30.970
possible and we don't need to look far
to discover this so if you look at this

00:08:30.970 --> 00:08:30.980
to discover this so if you look at this
 

00:08:30.980 --> 00:08:33.070
to discover this so if you look at this
data mining we see a lot of people using

00:08:33.070 --> 00:08:33.080
data mining we see a lot of people using
 

00:08:33.080 --> 00:08:35.920
data mining we see a lot of people using
data binding like this they put IDs to

00:08:35.920 --> 00:08:35.930
data binding like this they put IDs to
 

00:08:35.930 --> 00:08:38.170
data binding like this they put IDs to
the views just to get this binding

00:08:38.170 --> 00:08:38.180
the views just to get this binding
 

00:08:38.180 --> 00:08:40.060
the views just to get this binding
course on the right no variables no

00:08:40.060 --> 00:08:40.070
course on the right no variables no
 

00:08:40.070 --> 00:08:42.580
course on the right no variables no
expression so what do we just call this

00:08:42.580 --> 00:08:42.590
expression so what do we just call this
 

00:08:42.590 --> 00:08:47.110
expression so what do we just call this
we're binding so real binding is a new

00:08:47.110 --> 00:08:47.120
we're binding so real binding is a new
 

00:08:47.120 --> 00:08:48.970
we're binding so real binding is a new
feature it's going to be available in

00:08:48.970 --> 00:08:48.980
feature it's going to be available in
 

00:08:48.980 --> 00:08:51.820
feature it's going to be available in
Android studio 3.6 that's the next

00:08:51.820 --> 00:08:51.830
Android studio 3.6 that's the next
 

00:08:51.830 --> 00:08:55.170
Android studio 3.6 that's the next
versions

00:08:55.170 --> 00:08:55.180
 

00:08:55.180 --> 00:08:59.310
[Applause]

00:08:59.310 --> 00:08:59.320
[Applause]
 

00:08:59.320 --> 00:09:02.470
[Applause]
so now let's go back to the previous

00:09:02.470 --> 00:09:02.480
so now let's go back to the previous
 

00:09:02.480 --> 00:09:04.180
so now let's go back to the previous
example we had these layout techs

00:09:04.180 --> 00:09:04.190
example we had these layout techs
 

00:09:04.190 --> 00:09:05.830
example we had these layout techs
they're not necessary we don't have

00:09:05.830 --> 00:09:05.840
they're not necessary we don't have
 

00:09:05.840 --> 00:09:08.110
they're not necessary we don't have
variables so we can get rid of it it's

00:09:08.110 --> 00:09:08.120
variables so we can get rid of it it's
 

00:09:08.120 --> 00:09:11.410
variables so we can get rid of it it's
just a regular layer takes a mouse so if

00:09:11.410 --> 00:09:11.420
just a regular layer takes a mouse so if
 

00:09:11.420 --> 00:09:14.080
just a regular layer takes a mouse so if
we had it from our activity we will

00:09:14.080 --> 00:09:14.090
we had it from our activity we will
 

00:09:14.090 --> 00:09:16.240
we had it from our activity we will
access it like this but you don't want

00:09:16.240 --> 00:09:16.250
access it like this but you don't want
 

00:09:16.250 --> 00:09:18.280
access it like this but you don't want
this fine view by this so control all of

00:09:18.280 --> 00:09:18.290
this fine view by this so control all of
 

00:09:18.290 --> 00:09:21.190
this fine view by this so control all of
it out and instead we can use the

00:09:21.190 --> 00:09:21.200
it out and instead we can use the
 

00:09:21.200 --> 00:09:23.530
it out and instead we can use the
generated binding costs inflated and

00:09:23.530 --> 00:09:23.540
generated binding costs inflated and
 

00:09:23.540 --> 00:09:26.680
generated binding costs inflated and
then set the content view and now we are

00:09:26.680 --> 00:09:26.690
then set the content view and now we are
 

00:09:26.690 --> 00:09:29.620
then set the content view and now we are
going to have all of the wheels with IDs

00:09:29.620 --> 00:09:29.630
going to have all of the wheels with IDs
 

00:09:29.630 --> 00:09:33.070
going to have all of the wheels with IDs
as public final fields in that object so

00:09:33.070 --> 00:09:33.080
as public final fields in that object so
 

00:09:33.080 --> 00:09:34.510
as public final fields in that object so
you get perfect compile time safety

00:09:34.510 --> 00:09:34.520
you get perfect compile time safety
 

00:09:34.520 --> 00:09:37.000
you get perfect compile time safety
because if the ID with the correct type

00:09:37.000 --> 00:09:37.010
because if the ID with the correct type
 

00:09:37.010 --> 00:09:39.370
because if the ID with the correct type
doesn't exist your code you've just not

00:09:39.370 --> 00:09:39.380
doesn't exist your code you've just not
 

00:09:39.380 --> 00:09:42.190
doesn't exist your code you've just not
compiled and you can also use it from

00:09:42.190 --> 00:09:42.200
compiled and you can also use it from
 

00:09:42.200 --> 00:09:52.570
compiled and you can also use it from
Java so thank you so we all of these

00:09:52.570 --> 00:09:52.580
Java so thank you so we all of these
 

00:09:52.580 --> 00:09:54.760
Java so thank you so we all of these
binding calluses are generated by the

00:09:54.760 --> 00:09:54.770
binding calluses are generated by the
 

00:09:54.770 --> 00:09:57.610
binding calluses are generated by the
Android Gradle plug-in so it doesn't

00:09:57.610 --> 00:09:57.620
Android Gradle plug-in so it doesn't
 

00:09:57.620 --> 00:09:59.560
Android Gradle plug-in so it doesn't
need to do any extra work unless you

00:09:59.560 --> 00:09:59.570
need to do any extra work unless you
 

00:09:59.570 --> 00:10:00.970
need to do any extra work unless you
change your layout file and if you

00:10:00.970 --> 00:10:00.980
change your layout file and if you
 

00:10:00.980 --> 00:10:03.310
change your layout file and if you
change a layout file only that file gets

00:10:03.310 --> 00:10:03.320
change a layout file only that file gets
 

00:10:03.320 --> 00:10:05.530
change a layout file only that file gets
invalidated so it's very fast during

00:10:05.530 --> 00:10:05.540
invalidated so it's very fast during
 

00:10:05.540 --> 00:10:08.440
invalidated so it's very fast during
incremental compilation it is

00:10:08.440 --> 00:10:08.450
incremental compilation it is
 

00:10:08.450 --> 00:10:10.330
incremental compilation it is
hundred-percent compile time safe so if

00:10:10.330 --> 00:10:10.340
hundred-percent compile time safe so if
 

00:10:10.340 --> 00:10:12.310
hundred-percent compile time safe so if
your code compiles you know those views

00:10:12.310 --> 00:10:12.320
your code compiles you know those views
 

00:10:12.320 --> 00:10:15.460
your code compiles you know those views
exist in the right layouts it has full

00:10:15.460 --> 00:10:15.470
exist in the right layouts it has full
 

00:10:15.470 --> 00:10:17.260
exist in the right layouts it has full
studio integration similar to what I

00:10:17.260 --> 00:10:17.270
studio integration similar to what I
 

00:10:17.270 --> 00:10:19.390
studio integration similar to what I
have shown for data binding earlier and

00:10:19.390 --> 00:10:19.400
have shown for data binding earlier and
 

00:10:19.400 --> 00:10:22.210
have shown for data binding earlier and
speaking speaking of data binding it is

00:10:22.210 --> 00:10:22.220
speaking speaking of data binding it is
 

00:10:22.220 --> 00:10:24.280
speaking speaking of data binding it is
completely compatible with data binding

00:10:24.280 --> 00:10:24.290
completely compatible with data binding
 

00:10:24.290 --> 00:10:26.410
completely compatible with data binding
in fact if you are using data binding

00:10:26.410 --> 00:10:26.420
in fact if you are using data binding
 

00:10:26.420 --> 00:10:29.500
in fact if you are using data binding
just access views you can turn it off

00:10:29.500 --> 00:10:29.510
just access views you can turn it off
 

00:10:29.510 --> 00:10:31.570
just access views you can turn it off
and turn on your binding and your code

00:10:31.570 --> 00:10:31.580
and turn on your binding and your code
 

00:10:31.580 --> 00:10:36.370
and turn on your binding and your code
will compile as is okay now we are going

00:10:36.370 --> 00:10:36.380
will compile as is okay now we are going
 

00:10:36.380 --> 00:10:37.930
will compile as is okay now we are going
to move to lifecycle and I'm going to

00:10:37.930 --> 00:10:37.940
to move to lifecycle and I'm going to
 

00:10:37.940 --> 00:10:40.270
to move to lifecycle and I'm going to
invite Saiga to tell us more about it

00:10:40.270 --> 00:10:40.280
invite Saiga to tell us more about it
 

00:10:40.280 --> 00:10:43.740
invite Saiga to tell us more about it
thank you

00:10:43.740 --> 00:10:43.750
 

00:10:43.750 --> 00:10:48.520
thank thank seed

00:10:48.520 --> 00:10:48.530
thank thank seed
 

00:10:48.530 --> 00:10:50.200
thank thank seed
good morning everyone my name is Sergey

00:10:50.200 --> 00:10:50.210
good morning everyone my name is Sergey
 

00:10:50.210 --> 00:10:52.960
good morning everyone my name is Sergey
and I will give a quick update on life

00:10:52.960 --> 00:10:52.970
and I will give a quick update on life
 

00:10:52.970 --> 00:10:56.010
and I will give a quick update on life
cycles so what we did two years ago is

00:10:56.010 --> 00:10:56.020
cycles so what we did two years ago is
 

00:10:56.020 --> 00:10:58.000
cycles so what we did two years ago is
first of all introduce the way to

00:10:58.000 --> 00:10:58.010
first of all introduce the way to
 

00:10:58.010 --> 00:11:00.970
first of all introduce the way to
observe events from your fragments or

00:11:00.970 --> 00:11:00.980
observe events from your fragments or
 

00:11:00.980 --> 00:11:03.280
observe events from your fragments or
activities so you know we're started or

00:11:03.280 --> 00:11:03.290
activities so you know we're started or
 

00:11:03.290 --> 00:11:04.840
activities so you know we're started or
resumed and so on

00:11:04.840 --> 00:11:04.850
resumed and so on
 

00:11:04.850 --> 00:11:07.240
resumed and so on
we introduced few models that is

00:11:07.240 --> 00:11:07.250
we introduced few models that is
 

00:11:07.250 --> 00:11:09.160
we introduced few models that is
retained state across configuration

00:11:09.160 --> 00:11:09.170
retained state across configuration
 

00:11:09.170 --> 00:11:11.940
retained state across configuration
changes kind of a starting point for

00:11:11.940 --> 00:11:11.950
changes kind of a starting point for
 

00:11:11.950 --> 00:11:15.490
changes kind of a starting point for
your non you iPod and lastly life that

00:11:15.490 --> 00:11:15.500
your non you iPod and lastly life that
 

00:11:15.500 --> 00:11:18.070
your non you iPod and lastly life that
is just observable that have a good

00:11:18.070 --> 00:11:18.080
is just observable that have a good
 

00:11:18.080 --> 00:11:19.900
is just observable that have a good
default behavior

00:11:19.900 --> 00:11:19.910
default behavior
 

00:11:19.910 --> 00:11:23.020
default behavior
so observe replay cycle but before

00:11:23.020 --> 00:11:23.030
so observe replay cycle but before
 

00:11:23.030 --> 00:11:25.330
so observe replay cycle but before
proceeding to new stuff we had to talk

00:11:25.330 --> 00:11:25.340
proceeding to new stuff we had to talk
 

00:11:25.340 --> 00:11:29.860
proceeding to new stuff we had to talk
about that after i/o I read on the

00:11:29.860 --> 00:11:29.870
about that after i/o I read on the
 

00:11:29.870 --> 00:11:31.990
about that after i/o I read on the
internet list and I was like what's

00:11:31.990 --> 00:11:32.000
internet list and I was like what's
 

00:11:32.000 --> 00:11:35.260
internet list and I was like what's
going on I don't agree with that at all

00:11:35.260 --> 00:11:35.270
going on I don't agree with that at all
 

00:11:35.270 --> 00:11:39.760
going on I don't agree with that at all
and I have to explain now like why why

00:11:39.760 --> 00:11:39.770
and I have to explain now like why why
 

00:11:39.770 --> 00:11:41.860
and I have to explain now like why why
this confusion exists and why it's not

00:11:41.860 --> 00:11:41.870
this confusion exists and why it's not
 

00:11:41.870 --> 00:11:45.730
this confusion exists and why it's not
true so the picture is kind of like that

00:11:45.730 --> 00:11:45.740
true so the picture is kind of like that
 

00:11:45.740 --> 00:11:47.800
true so the picture is kind of like that
so it's going to be flat explanation at

00:11:47.800 --> 00:11:47.810
so it's going to be flat explanation at
 

00:11:47.810 --> 00:11:50.140
so it's going to be flat explanation at
the beginning so you have your stuff you

00:11:50.140 --> 00:11:50.150
the beginning so you have your stuff you
 

00:11:50.150 --> 00:11:52.480
the beginning so you have your stuff you
put your stuff into view model or a safe

00:11:52.480 --> 00:11:52.490
put your stuff into view model or a safe
 

00:11:52.490 --> 00:11:55.540
put your stuff into view model or a safe
state configuration change happens you

00:11:55.540 --> 00:11:55.550
state configuration change happens you
 

00:11:55.550 --> 00:11:57.670
state configuration change happens you
go to your view model safe state and

00:11:57.670 --> 00:11:57.680
go to your view model safe state and
 

00:11:57.680 --> 00:11:59.770
go to your view model safe state and
grab your stuff out of there

00:11:59.770 --> 00:11:59.780
grab your stuff out of there
 

00:11:59.780 --> 00:12:02.890
grab your stuff out of there
is it the similar mechanisms well

00:12:02.890 --> 00:12:02.900
is it the similar mechanisms well
 

00:12:02.900 --> 00:12:06.700
is it the similar mechanisms well
actually no so let's take a closer look

00:12:06.700 --> 00:12:06.710
actually no so let's take a closer look
 

00:12:06.710 --> 00:12:10.810
actually no so let's take a closer look
only on safe state part same setup you

00:12:10.810 --> 00:12:10.820
only on safe state part same setup you
 

00:12:10.820 --> 00:12:13.360
only on safe state part same setup you
put your stuff into the safe state when

00:12:13.360 --> 00:12:13.370
put your stuff into the safe state when
 

00:12:13.370 --> 00:12:16.210
put your stuff into the safe state when
we talked about configuration change

00:12:16.210 --> 00:12:16.220
we talked about configuration change
 

00:12:16.220 --> 00:12:19.810
we talked about configuration change
well actual purpose of safe state is not

00:12:19.810 --> 00:12:19.820
well actual purpose of safe state is not
 

00:12:19.820 --> 00:12:23.230
well actual purpose of safe state is not
configuration changes we it is created

00:12:23.230 --> 00:12:23.240
configuration changes we it is created
 

00:12:23.240 --> 00:12:26.800
configuration changes we it is created
to help you with process death because

00:12:26.800 --> 00:12:26.810
to help you with process death because
 

00:12:26.810 --> 00:12:29.290
to help you with process death because
system when your application the

00:12:29.290 --> 00:12:29.300
system when your application the
 

00:12:29.300 --> 00:12:31.750
system when your application the
background may decide well we need this

00:12:31.750 --> 00:12:31.760
background may decide well we need this
 

00:12:31.760 --> 00:12:34.240
background may decide well we need this
memory for some other task and kill your

00:12:34.240 --> 00:12:34.250
memory for some other task and kill your
 

00:12:34.250 --> 00:12:36.610
memory for some other task and kill your
application but because Android wants to

00:12:36.610 --> 00:12:36.620
application but because Android wants to
 

00:12:36.620 --> 00:12:39.790
application but because Android wants to
provide nice user experience what we do

00:12:39.790 --> 00:12:39.800
provide nice user experience what we do
 

00:12:39.800 --> 00:12:42.460
provide nice user experience what we do
is once the application restarted we

00:12:42.460 --> 00:12:42.470
is once the application restarted we
 

00:12:42.470 --> 00:12:45.130
is once the application restarted we
give you hints this a statist with hints

00:12:45.130 --> 00:12:45.140
give you hints this a statist with hints
 

00:12:45.140 --> 00:12:48.850
give you hints this a statist with hints
to you how to recreate the state that he

00:12:48.850 --> 00:12:48.860
to you how to recreate the state that he
 

00:12:48.860 --> 00:12:51.880
to you how to recreate the state that he
had before and the user seen before so

00:12:51.880 --> 00:12:51.890
had before and the user seen before so
 

00:12:51.890 --> 00:12:54.910
had before and the user seen before so
how does it actually work and it once

00:12:54.910 --> 00:12:54.920
how does it actually work and it once
 

00:12:54.920 --> 00:12:56.040
how does it actually work and it once
stabbed

00:12:56.040 --> 00:12:56.050
stabbed
 

00:12:56.050 --> 00:12:58.680
stabbed
so once you put your safe state let's

00:12:58.680 --> 00:12:58.690
so once you put your safe state let's
 

00:12:58.690 --> 00:13:00.600
so once you put your safe state let's
have a vase a state what actually

00:13:00.600 --> 00:13:00.610
have a vase a state what actually
 

00:13:00.610 --> 00:13:02.970
have a vase a state what actually
happens safe state travels to the system

00:13:02.970 --> 00:13:02.980
happens safe state travels to the system
 

00:13:02.980 --> 00:13:04.980
happens safe state travels to the system
server system server is a separate

00:13:04.980 --> 00:13:04.990
server system server is a separate
 

00:13:04.990 --> 00:13:08.640
server system server is a separate
process so varies like this travel

00:13:08.640 --> 00:13:08.650
process so varies like this travel
 

00:13:08.650 --> 00:13:12.060
process so varies like this travel
across process boundaries and this gives

00:13:12.060 --> 00:13:12.070
across process boundaries and this gives
 

00:13:12.070 --> 00:13:14.430
across process boundaries and this gives
us very specific restrictions on what is

00:13:14.430 --> 00:13:14.440
us very specific restrictions on what is
 

00:13:14.440 --> 00:13:16.830
us very specific restrictions on what is
assisted it's not a stuff it's a data

00:13:16.830 --> 00:13:16.840
assisted it's not a stuff it's a data
 

00:13:16.840 --> 00:13:18.750
assisted it's not a stuff it's a data
it's possible data

00:13:18.750 --> 00:13:18.760
it's possible data
 

00:13:18.760 --> 00:13:21.030
it's possible data
it's just what we call sterilizable

00:13:21.030 --> 00:13:21.040
it's just what we call sterilizable
 

00:13:21.040 --> 00:13:24.390
it's just what we call sterilizable
android so our primitive types and i

00:13:24.390 --> 00:13:24.400
android so our primitive types and i
 

00:13:24.400 --> 00:13:27.240
android so our primitive types and i
also we have this data limit on the size

00:13:27.240 --> 00:13:27.250
also we have this data limit on the size
 

00:13:27.250 --> 00:13:30.900
also we have this data limit on the size
of it because otherwise well system can

00:13:30.900 --> 00:13:30.910
of it because otherwise well system can
 

00:13:30.910 --> 00:13:32.850
of it because otherwise well system can
keep like gigabytes of data for every

00:13:32.850 --> 00:13:32.860
keep like gigabytes of data for every
 

00:13:32.860 --> 00:13:35.880
keep like gigabytes of data for every
application and then serialization

00:13:35.880 --> 00:13:35.890
application and then serialization
 

00:13:35.890 --> 00:13:38.730
application and then serialization
actually takes time as well so it just

00:13:38.730 --> 00:13:38.740
actually takes time as well so it just
 

00:13:38.740 --> 00:13:41.760
actually takes time as well so it just
won't work so this is a say state so

00:13:41.760 --> 00:13:41.770
won't work so this is a say state so
 

00:13:41.770 --> 00:13:43.590
won't work so this is a say state so
let's take a look on the view models

00:13:43.590 --> 00:13:43.600
let's take a look on the view models
 

00:13:43.600 --> 00:13:46.680
let's take a look on the view models
well in a country's to say state we

00:13:46.680 --> 00:13:46.690
well in a country's to say state we
 

00:13:46.690 --> 00:13:49.110
well in a country's to say state we
model always live in a process memory

00:13:49.110 --> 00:13:49.120
model always live in a process memory
 

00:13:49.120 --> 00:13:52.440
model always live in a process memory
then it never leaves it so configuration

00:13:52.440 --> 00:13:52.450
then it never leaves it so configuration
 

00:13:52.450 --> 00:13:54.260
then it never leaves it so configuration
change doesn't affect it anyhow at all

00:13:54.260 --> 00:13:54.270
change doesn't affect it anyhow at all
 

00:13:54.270 --> 00:13:57.510
change doesn't affect it anyhow at all
it just memories continuous your view

00:13:57.510 --> 00:13:57.520
it just memories continuous your view
 

00:13:57.520 --> 00:13:59.820
it just memories continuous your view
models still their process doesn't die

00:13:59.820 --> 00:13:59.830
models still their process doesn't die
 

00:13:59.830 --> 00:14:05.400
models still their process doesn't die
so your stuff is there so however one

00:14:05.400 --> 00:14:05.410
so your stuff is there so however one
 

00:14:05.410 --> 00:14:06.690
so your stuff is there so however one
application whether the process is

00:14:06.690 --> 00:14:06.700
application whether the process is
 

00:14:06.700 --> 00:14:11.310
application whether the process is
restarted well it's in process in every

00:14:11.310 --> 00:14:11.320
restarted well it's in process in every
 

00:14:11.320 --> 00:14:14.820
restarted well it's in process in every
process dies everything there goes away

00:14:14.820 --> 00:14:14.830
process dies everything there goes away
 

00:14:14.830 --> 00:14:17.460
process dies everything there goes away
and then your application is restarted

00:14:17.460 --> 00:14:17.470
and then your application is restarted
 

00:14:17.470 --> 00:14:19.500
and then your application is restarted
from a view model perspective you have

00:14:19.500 --> 00:14:19.510
from a view model perspective you have
 

00:14:19.510 --> 00:14:23.130
from a view model perspective you have
nothing so you can see every handle

00:14:23.130 --> 00:14:23.140
nothing so you can see every handle
 

00:14:23.140 --> 00:14:25.440
nothing so you can see every handle
different situations and the model are

00:14:25.440 --> 00:14:25.450
different situations and the model are
 

00:14:25.450 --> 00:14:29.280
different situations and the model are
for like keeping references to your non

00:14:29.280 --> 00:14:29.290
for like keeping references to your non
 

00:14:29.290 --> 00:14:32.040
for like keeping references to your non
serializable things like network

00:14:32.040 --> 00:14:32.050
serializable things like network
 

00:14:32.050 --> 00:14:35.570
serializable things like network
requests and flights or database queries

00:14:35.570 --> 00:14:35.580
requests and flights or database queries
 

00:14:35.580 --> 00:14:37.470
requests and flights or database queries
well it doesn't mean that you actually

00:14:37.470 --> 00:14:37.480
well it doesn't mean that you actually
 

00:14:37.480 --> 00:14:39.450
well it doesn't mean that you actually
have to write these things there but

00:14:39.450 --> 00:14:39.460
have to write these things there but
 

00:14:39.460 --> 00:14:41.250
have to write these things there but
it's kind of a provides the scope for

00:14:41.250 --> 00:14:41.260
it's kind of a provides the scope for
 

00:14:41.260 --> 00:14:44.400
it's kind of a provides the scope for
them and other things that you can keep

00:14:44.400 --> 00:14:44.410
them and other things that you can keep
 

00:14:44.410 --> 00:14:47.820
them and other things that you can keep
there is a big objects like a long list

00:14:47.820 --> 00:14:47.830
there is a big objects like a long list
 

00:14:47.830 --> 00:14:49.590
there is a big objects like a long list
of that I acquired from database and

00:14:49.590 --> 00:14:49.600
of that I acquired from database and
 

00:14:49.600 --> 00:14:51.510
of that I acquired from database and
need to keep somewhere or images that

00:14:51.510 --> 00:14:51.520
need to keep somewhere or images that
 

00:14:51.520 --> 00:14:53.400
need to keep somewhere or images that
are relevant only for that fragments

00:14:53.400 --> 00:14:53.410
are relevant only for that fragments
 

00:14:53.410 --> 00:14:56.400
are relevant only for that fragments
specifically well safe state is this

00:14:56.400 --> 00:14:56.410
specifically well safe state is this
 

00:14:56.410 --> 00:14:58.950
specifically well safe state is this
your eye base like selection on the

00:14:58.950 --> 00:14:58.960
your eye base like selection on the
 

00:14:58.960 --> 00:15:01.890
your eye base like selection on the
scroll State and navigation state this

00:15:01.890 --> 00:15:01.900
scroll State and navigation state this
 

00:15:01.900 --> 00:15:04.410
scroll State and navigation state this
is like more interesting for us what it

00:15:04.410 --> 00:15:04.420
is like more interesting for us what it
 

00:15:04.420 --> 00:15:07.800
is like more interesting for us what it
doesn't mean so once to show let's say a

00:15:07.800 --> 00:15:07.810
doesn't mean so once to show let's say a
 

00:15:07.810 --> 00:15:09.540
doesn't mean so once to show let's say a
screen the future profile

00:15:09.540 --> 00:15:09.550
screen the future profile
 

00:15:09.550 --> 00:15:13.079
screen the future profile
you want to know what user you show last

00:15:13.079 --> 00:15:13.089
you want to know what user you show last
 

00:15:13.089 --> 00:15:15.269
you want to know what user you show last
time so you need to keep user ID in this

00:15:15.269 --> 00:15:15.279
time so you need to keep user ID in this
 

00:15:15.279 --> 00:15:17.280
time so you need to keep user ID in this
negation state so we will see this

00:15:17.280 --> 00:15:17.290
negation state so we will see this
 

00:15:17.290 --> 00:15:20.340
negation state so we will see this
example in a second so as you see we

00:15:20.340 --> 00:15:20.350
example in a second so as you see we
 

00:15:20.350 --> 00:15:24.300
example in a second so as you see we
model and say state work together we not

00:15:24.300 --> 00:15:24.310
model and say state work together we not
 

00:15:24.310 --> 00:15:28.350
model and say state work together we not
we shouldn't like be opposed so let's

00:15:28.350 --> 00:15:28.360
we shouldn't like be opposed so let's
 

00:15:28.360 --> 00:15:32.160
we shouldn't like be opposed so let's
see how this you use your example so

00:15:32.160 --> 00:15:32.170
see how this you use your example so
 

00:15:32.170 --> 00:15:34.290
see how this you use your example so
your view model will look like this you

00:15:34.290 --> 00:15:34.300
your view model will look like this you
 

00:15:34.300 --> 00:15:36.810
your view model will look like this you
have a user I mean you have a life that

00:15:36.810 --> 00:15:36.820
have a user I mean you have a life that
 

00:15:36.820 --> 00:15:40.260
have a user I mean you have a life that
of this information how you would do

00:15:40.260 --> 00:15:40.270
of this information how you would do
 

00:15:40.270 --> 00:15:42.810
of this information how you would do
this remodel plus-sized state and all

00:15:42.810 --> 00:15:42.820
this remodel plus-sized state and all
 

00:15:42.820 --> 00:15:45.900
this remodel plus-sized state and all
the way well this is fairly poor little

00:15:45.900 --> 00:15:45.910
the way well this is fairly poor little
 

00:15:45.910 --> 00:15:48.030
the way well this is fairly poor little
traitors in oncreate who go to the

00:15:48.030 --> 00:15:48.040
traitors in oncreate who go to the
 

00:15:48.040 --> 00:15:49.860
traitors in oncreate who go to the
bundle paths with information from a

00:15:49.860 --> 00:15:49.870
bundle paths with information from a
 

00:15:49.870 --> 00:15:54.060
bundle paths with information from a
bundle down plus the view model on safe

00:15:54.060 --> 00:15:54.070
bundle down plus the view model on safe
 

00:15:54.070 --> 00:15:56.430
bundle down plus the view model on safe
state you go in reverse failure

00:15:56.430 --> 00:15:56.440
state you go in reverse failure
 

00:15:56.440 --> 00:15:59.150
state you go in reverse failure
boilerplate and what we did we

00:15:59.150 --> 00:15:59.160
boilerplate and what we did we
 

00:15:59.160 --> 00:16:02.040
boilerplate and what we did we
introduced a way to contribute to say

00:16:02.040 --> 00:16:02.050
introduced a way to contribute to say
 

00:16:02.050 --> 00:16:03.930
introduced a way to contribute to say
state from the model right away

00:16:03.930 --> 00:16:03.940
state from the model right away
 

00:16:03.940 --> 00:16:06.990
state from the model right away
so now you can receive this state state

00:16:06.990 --> 00:16:07.000
so now you can receive this state state
 

00:16:07.000 --> 00:16:09.300
so now you can receive this state state
handle object right in your view model

00:16:09.300 --> 00:16:09.310
handle object right in your view model
 

00:16:09.310 --> 00:16:12.210
handle object right in your view model
constructor and this object will allow

00:16:12.210 --> 00:16:12.220
constructor and this object will allow
 

00:16:12.220 --> 00:16:14.880
constructor and this object will allow
you to access say State right into your

00:16:14.880 --> 00:16:14.890
you to access say State right into your
 

00:16:14.890 --> 00:16:18.180
you to access say State right into your
view model so what is this it's very

00:16:18.180 --> 00:16:18.190
view model so what is this it's very
 

00:16:18.190 --> 00:16:20.310
view model so what is this it's very
simple it's much like object meaning

00:16:20.310 --> 00:16:20.320
simple it's much like object meaning
 

00:16:20.320 --> 00:16:23.190
simple it's much like object meaning
that it has very straightforward API you

00:16:23.190 --> 00:16:23.200
that it has very straightforward API you
 

00:16:23.200 --> 00:16:26.100
that it has very straightforward API you
just put stuff and get it once you put

00:16:26.100 --> 00:16:26.110
just put stuff and get it once you put
 

00:16:26.110 --> 00:16:29.400
just put stuff and get it once you put
it what later when your application is

00:16:29.400 --> 00:16:29.410
it what later when your application is
 

00:16:29.410 --> 00:16:32.460
it what later when your application is
recreated the model is recreated it

00:16:32.460 --> 00:16:32.470
recreated the model is recreated it
 

00:16:32.470 --> 00:16:36.300
recreated the model is recreated it
receives a state handle the information

00:16:36.300 --> 00:16:36.310
receives a state handle the information
 

00:16:36.310 --> 00:16:38.579
receives a state handle the information
that we put by the key will be available

00:16:38.579 --> 00:16:38.589
that we put by the key will be available
 

00:16:38.589 --> 00:16:40.199
that we put by the key will be available
to you again so you can query by the

00:16:40.199 --> 00:16:40.209
to you again so you can query by the
 

00:16:40.209 --> 00:16:44.550
to you again so you can query by the
same key we also give you nice

00:16:44.550 --> 00:16:44.560
same key we also give you nice
 

00:16:44.560 --> 00:16:47.130
same key we also give you nice
convenience API if you use live data you

00:16:47.130 --> 00:16:47.140
convenience API if you use live data you
 

00:16:47.140 --> 00:16:49.949
convenience API if you use live data you
can instead of just get data you can

00:16:49.949 --> 00:16:49.959
can instead of just get data you can
 

00:16:49.959 --> 00:16:53.160
can instead of just get data you can
observe it in a usual way and because

00:16:53.160 --> 00:16:53.170
observe it in a usual way and because
 

00:16:53.170 --> 00:16:57.150
observe it in a usual way and because
say state is mutable because otherwise

00:16:57.150 --> 00:16:57.160
say state is mutable because otherwise
 

00:16:57.160 --> 00:16:59.360
say state is mutable because otherwise
it will be a constant no need to save it

00:16:59.360 --> 00:16:59.370
it will be a constant no need to save it
 

00:16:59.370 --> 00:17:02.430
it will be a constant no need to save it
we you can we give you immutable like

00:17:02.430 --> 00:17:02.440
we you can we give you immutable like
 

00:17:02.440 --> 00:17:04.290
we you can we give you immutable like
that and you can write as you would do

00:17:04.290 --> 00:17:04.300
that and you can write as you would do
 

00:17:04.300 --> 00:17:08.490
that and you can write as you would do
it usually so last slide on this theme

00:17:08.490 --> 00:17:08.500
it usually so last slide on this theme
 

00:17:08.500 --> 00:17:11.250
it usually so last slide on this theme
is provided by my manager actually say

00:17:11.250 --> 00:17:11.260
is provided by my manager actually say
 

00:17:11.260 --> 00:17:15.360
is provided by my manager actually say
set is not your database no matter which

00:17:15.360 --> 00:17:15.370
set is not your database no matter which
 

00:17:15.370 --> 00:17:18.449
set is not your database no matter which
way you use alt on create an unsafe

00:17:18.449 --> 00:17:18.459
way you use alt on create an unsafe
 

00:17:18.459 --> 00:17:21.329
way you use alt on create an unsafe
instance state or this new convenience

00:17:21.329 --> 00:17:21.339
instance state or this new convenience
 

00:17:21.339 --> 00:17:22.290
instance state or this new convenience
API or

00:17:22.290 --> 00:17:22.300
API or
 

00:17:22.300 --> 00:17:25.500
API or
fragment arguments underlying mechanisms

00:17:25.500 --> 00:17:25.510
fragment arguments underlying mechanisms
 

00:17:25.510 --> 00:17:28.470
fragment arguments underlying mechanisms
are the same so you still have this

00:17:28.470 --> 00:17:28.480
are the same so you still have this
 

00:17:28.480 --> 00:17:30.810
are the same so you still have this
restrictions about what you can put

00:17:30.810 --> 00:17:30.820
restrictions about what you can put
 

00:17:30.820 --> 00:17:34.320
restrictions about what you can put
there on the size limit on in so it

00:17:34.320 --> 00:17:34.330
there on the size limit on in so it
 

00:17:34.330 --> 00:17:39.000
there on the size limit on in so it
won't just work and we go to in our fame

00:17:39.000 --> 00:17:39.010
won't just work and we go to in our fame
 

00:17:39.010 --> 00:17:43.110
won't just work and we go to in our fame
so cotton is everywhere lifecycle aren't

00:17:43.110 --> 00:17:43.120
so cotton is everywhere lifecycle aren't
 

00:17:43.120 --> 00:17:46.170
so cotton is everywhere lifecycle aren't
exceptions yesterday we had a talk about

00:17:46.170 --> 00:17:46.180
exceptions yesterday we had a talk about
 

00:17:46.180 --> 00:17:48.750
exceptions yesterday we had a talk about
coral since a lifecycle if you missed it

00:17:48.750 --> 00:17:48.760
coral since a lifecycle if you missed it
 

00:17:48.760 --> 00:17:51.470
coral since a lifecycle if you missed it
you can find it on the Internet

00:17:51.470 --> 00:17:51.480
you can find it on the Internet
 

00:17:51.480 --> 00:17:54.630
you can find it on the Internet
we introduced a bunch of new place and

00:17:54.630 --> 00:17:54.640
we introduced a bunch of new place and
 

00:17:54.640 --> 00:17:59.930
we introduced a bunch of new place and
looking for a feedback and we kind of

00:17:59.930 --> 00:17:59.940
looking for a feedback and we kind of
 

00:17:59.940 --> 00:18:04.260
looking for a feedback and we kind of
made our depths and other fields of life

00:18:04.260 --> 00:18:04.270
made our depths and other fields of life
 

00:18:04.270 --> 00:18:07.230
made our depths and other fields of life
cycles for example stem conversions were

00:18:07.230 --> 00:18:07.240
cycles for example stem conversions were
 

00:18:07.240 --> 00:18:08.760
cycles for example stem conversions were
broken for a long time

00:18:08.760 --> 00:18:08.770
broken for a long time
 

00:18:08.770 --> 00:18:11.610
broken for a long time
a for life data so you can see it

00:18:11.610 --> 00:18:11.620
a for life data so you can see it
 

00:18:11.620 --> 00:18:14.490
a for life data so you can see it
doesn't look like natural course in code

00:18:14.490 --> 00:18:14.500
doesn't look like natural course in code
 

00:18:14.500 --> 00:18:18.650
doesn't look like natural course in code
and now it does you can have this lambda

00:18:18.650 --> 00:18:18.660
and now it does you can have this lambda
 

00:18:18.660 --> 00:18:21.750
and now it does you can have this lambda
after observe all similarly

00:18:21.750 --> 00:18:21.760
after observe all similarly
 

00:18:21.760 --> 00:18:24.330
after observe all similarly
transformations looked very unnatural

00:18:24.330 --> 00:18:24.340
transformations looked very unnatural
 

00:18:24.340 --> 00:18:26.220
transformations looked very unnatural
because we have a systolic method on

00:18:26.220 --> 00:18:26.230
because we have a systolic method on
 

00:18:26.230 --> 00:18:28.590
because we have a systolic method on
transformations and you know it's just

00:18:28.590 --> 00:18:28.600
transformations and you know it's just
 

00:18:28.600 --> 00:18:30.930
transformations and you know it's just
not the way you do that and cousin

00:18:30.930 --> 00:18:30.940
not the way you do that and cousin
 

00:18:30.940 --> 00:18:32.730
not the way you do that and cousin
instead of that you have extension

00:18:32.730 --> 00:18:32.740
instead of that you have extension
 

00:18:32.740 --> 00:18:36.960
instead of that you have extension
functions we did that and last thing is

00:18:36.960 --> 00:18:36.970
functions we did that and last thing is
 

00:18:36.970 --> 00:18:39.330
functions we did that and last thing is
we model in civilization we kind of a

00:18:39.330 --> 00:18:39.340
we model in civilization we kind of a
 

00:18:39.340 --> 00:18:41.550
we model in civilization we kind of a
force you to have this late in it war

00:18:41.550 --> 00:18:41.560
force you to have this late in it war
 

00:18:41.560 --> 00:18:44.730
force you to have this late in it war
and it's you know a bit of a cold smell

00:18:44.730 --> 00:18:44.740
and it's you know a bit of a cold smell
 

00:18:44.740 --> 00:18:46.350
and it's you know a bit of a cold smell
people are get worried when you see it

00:18:46.350 --> 00:18:46.360
people are get worried when you see it
 

00:18:46.360 --> 00:18:49.710
people are get worried when you see it
ends for for reason or nullable view

00:18:49.710 --> 00:18:49.720
ends for for reason or nullable view
 

00:18:49.720 --> 00:18:52.980
ends for for reason or nullable view
models so now as I said with property

00:18:52.980 --> 00:18:52.990
models so now as I said with property
 

00:18:52.990 --> 00:18:55.380
models so now as I said with property
delegation you have very concise syntax

00:18:55.380 --> 00:18:55.390
delegation you have very concise syntax
 

00:18:55.390 --> 00:18:59.910
delegation you have very concise syntax
you just initialize the view model and

00:18:59.910 --> 00:18:59.920
you just initialize the view model and
 

00:18:59.920 --> 00:19:01.250
you just initialize the view model and
that's it

00:19:01.250 --> 00:19:01.260
that's it
 

00:19:01.260 --> 00:19:05.490
that's it
[Applause]

00:19:05.490 --> 00:19:05.500
[Applause]
 

00:19:05.500 --> 00:19:08.290
[Applause]
and actually that's it for life cycles

00:19:08.290 --> 00:19:08.300
and actually that's it for life cycles
 

00:19:08.300 --> 00:19:12.640
and actually that's it for life cycles
and I hand out for Samir who is going to

00:19:12.640 --> 00:19:12.650
and I hand out for Samir who is going to
 

00:19:12.650 --> 00:19:16.370
and I hand out for Samir who is going to
present a work manager and a bit of it

00:19:16.370 --> 00:19:16.380
present a work manager and a bit of it
 

00:19:16.380 --> 00:19:20.300
present a work manager and a bit of it
[Applause]

00:19:20.300 --> 00:19:20.310
[Applause]
 

00:19:20.310 --> 00:19:23.150
[Applause]
hi everyone my name is Samir Kataria and

00:19:23.150 --> 00:19:23.160
hi everyone my name is Samir Kataria and
 

00:19:23.160 --> 00:19:25.160
hi everyone my name is Samir Kataria and
I am an engineer on the Android team I

00:19:25.160 --> 00:19:25.170
I am an engineer on the Android team I
 

00:19:25.170 --> 00:19:26.420
I am an engineer on the Android team I
want to talk to you a little bit about

00:19:26.420 --> 00:19:26.430
want to talk to you a little bit about
 

00:19:26.430 --> 00:19:29.090
want to talk to you a little bit about
work manager today for those of you who

00:19:29.090 --> 00:19:29.100
work manager today for those of you who
 

00:19:29.100 --> 00:19:31.550
work manager today for those of you who
don't know work manager is a background

00:19:31.550 --> 00:19:31.560
don't know work manager is a background
 

00:19:31.560 --> 00:19:34.070
don't know work manager is a background
processing library for work that is

00:19:34.070 --> 00:19:34.080
processing library for work that is
 

00:19:34.080 --> 00:19:36.350
processing library for work that is
specifically deferrable meaning that it

00:19:36.350 --> 00:19:36.360
specifically deferrable meaning that it
 

00:19:36.360 --> 00:19:38.470
specifically deferrable meaning that it
doesn't have to be executed right away

00:19:38.470 --> 00:19:38.480
doesn't have to be executed right away
 

00:19:38.480 --> 00:19:41.300
doesn't have to be executed right away
this has also work that's persistent so

00:19:41.300 --> 00:19:41.310
this has also work that's persistent so
 

00:19:41.310 --> 00:19:44.180
this has also work that's persistent so
it can go across app restarts it can go

00:19:44.180 --> 00:19:44.190
it can go across app restarts it can go
 

00:19:44.190 --> 00:19:46.760
it can go across app restarts it can go
across device restarts so it needs to be

00:19:46.760 --> 00:19:46.770
across device restarts so it needs to be
 

00:19:46.770 --> 00:19:49.430
across device restarts so it needs to be
persistent this is worth that's

00:19:49.430 --> 00:19:49.440
persistent this is worth that's
 

00:19:49.440 --> 00:19:51.470
persistent this is worth that's
constraint based so you can have work

00:19:51.470 --> 00:19:51.480
constraint based so you can have work
 

00:19:51.480 --> 00:19:53.510
constraint based so you can have work
that only triggers when you have a

00:19:53.510 --> 00:19:53.520
that only triggers when you have a
 

00:19:53.520 --> 00:19:55.310
that only triggers when you have a
network connection for example or other

00:19:55.310 --> 00:19:55.320
network connection for example or other
 

00:19:55.320 --> 00:19:58.250
network connection for example or other
constraints and finally this is work

00:19:58.250 --> 00:19:58.260
constraints and finally this is work
 

00:19:58.260 --> 00:19:59.960
constraints and finally this is work
that's backwards compatible so it goes

00:19:59.960 --> 00:19:59.970
that's backwards compatible so it goes
 

00:19:59.970 --> 00:20:01.460
that's backwards compatible so it goes
all the way back to Ice Cream Sandwich

00:20:01.460 --> 00:20:01.470
all the way back to Ice Cream Sandwich
 

00:20:01.470 --> 00:20:06.620
all the way back to Ice Cream Sandwich
API 14 before I go to actually top

00:20:06.620 --> 00:20:06.630
API 14 before I go to actually top
 

00:20:06.630 --> 00:20:09.590
API 14 before I go to actually top
priorities we released a stable version

00:20:09.590 --> 00:20:09.600
priorities we released a stable version
 

00:20:09.600 --> 00:20:11.990
priorities we released a stable version
of work manager 1.0 a couple of months

00:20:11.990 --> 00:20:12.000
of work manager 1.0 a couple of months
 

00:20:12.000 --> 00:20:13.310
of work manager 1.0 a couple of months
ago so I want to thank everybody who

00:20:13.310 --> 00:20:13.320
ago so I want to thank everybody who
 

00:20:13.320 --> 00:20:15.650
ago so I want to thank everybody who
participated in the alpha beta early

00:20:15.650 --> 00:20:15.660
participated in the alpha beta early
 

00:20:15.660 --> 00:20:18.740
participated in the alpha beta early
access program thank you very much so

00:20:18.740 --> 00:20:18.750
access program thank you very much so
 

00:20:18.750 --> 00:20:19.970
access program thank you very much so
our top priorities moving forward

00:20:19.970 --> 00:20:19.980
our top priorities moving forward
 

00:20:19.980 --> 00:20:20.960
our top priorities moving forward
there's three of them that I'm going to

00:20:20.960 --> 00:20:20.970
there's three of them that I'm going to
 

00:20:20.970 --> 00:20:23.300
there's three of them that I'm going to
talk about today one is performance and

00:20:23.300 --> 00:20:23.310
talk about today one is performance and
 

00:20:23.310 --> 00:20:25.790
talk about today one is performance and
compatibility the next is testing and

00:20:25.790 --> 00:20:25.800
compatibility the next is testing and
 

00:20:25.800 --> 00:20:28.370
compatibility the next is testing and
finally building for the future so

00:20:28.370 --> 00:20:28.380
finally building for the future so
 

00:20:28.380 --> 00:20:30.920
finally building for the future so
things that are more forward-looking so

00:20:30.920 --> 00:20:30.930
things that are more forward-looking so
 

00:20:30.930 --> 00:20:31.970
things that are more forward-looking so
let's talk about performance and

00:20:31.970 --> 00:20:31.980
let's talk about performance and
 

00:20:31.980 --> 00:20:34.910
let's talk about performance and
compatibility the first thing that I

00:20:34.910 --> 00:20:34.920
compatibility the first thing that I
 

00:20:34.920 --> 00:20:36.140
compatibility the first thing that I
want to talk about is on-demand

00:20:36.140 --> 00:20:36.150
want to talk about is on-demand
 

00:20:36.150 --> 00:20:38.480
want to talk about is on-demand
initialization it's available now in

00:20:38.480 --> 00:20:38.490
initialization it's available now in
 

00:20:38.490 --> 00:20:42.230
initialization it's available now in
alpha so please check it out so one of

00:20:42.230 --> 00:20:42.240
alpha so please check it out so one of
 

00:20:42.240 --> 00:20:43.940
alpha so please check it out so one of
the things that you might have noticed

00:20:43.940 --> 00:20:43.950
the things that you might have noticed
 

00:20:43.950 --> 00:20:45.620
the things that you might have noticed
with work manager is that it needs to be

00:20:45.620 --> 00:20:45.630
with work manager is that it needs to be
 

00:20:45.630 --> 00:20:47.810
with work manager is that it needs to be
initialized when your app starts up this

00:20:47.810 --> 00:20:47.820
initialized when your app starts up this
 

00:20:47.820 --> 00:20:49.490
initialized when your app starts up this
is more or less a hard requirement

00:20:49.490 --> 00:20:49.500
is more or less a hard requirement
 

00:20:49.500 --> 00:20:52.460
is more or less a hard requirement
currently and this on-demand

00:20:52.460 --> 00:20:52.470
currently and this on-demand
 

00:20:52.470 --> 00:20:54.140
currently and this on-demand
initialization will allow you to start

00:20:54.140 --> 00:20:54.150
initialization will allow you to start
 

00:20:54.150 --> 00:20:56.540
initialization will allow you to start
work manager only when you need it which

00:20:56.540 --> 00:20:56.550
work manager only when you need it which
 

00:20:56.550 --> 00:20:58.790
work manager only when you need it which
is really good for avoiding critical hot

00:20:58.790 --> 00:20:58.800
is really good for avoiding critical hot
 

00:20:58.800 --> 00:21:01.310
is really good for avoiding critical hot
paths like app startup this is not

00:21:01.310 --> 00:21:01.320
paths like app startup this is not
 

00:21:01.320 --> 00:21:02.540
paths like app startup this is not
something that you need to worry about

00:21:02.540 --> 00:21:02.550
something that you need to worry about
 

00:21:02.550 --> 00:21:04.430
something that you need to worry about
anymore you can just use it when you

00:21:04.430 --> 00:21:04.440
anymore you can just use it when you
 

00:21:04.440 --> 00:21:07.070
anymore you can just use it when you
actually need it let's take a look at

00:21:07.070 --> 00:21:07.080
actually need it let's take a look at
 

00:21:07.080 --> 00:21:08.720
actually need it let's take a look at
how this looks so right now you might

00:21:08.720 --> 00:21:08.730
how this looks so right now you might
 

00:21:08.730 --> 00:21:10.520
how this looks so right now you might
have your application class you might

00:21:10.520 --> 00:21:10.530
have your application class you might
 

00:21:10.530 --> 00:21:12.140
have your application class you might
have customize it so you have a my app

00:21:12.140 --> 00:21:12.150
have customize it so you have a my app
 

00:21:12.150 --> 00:21:16.600
have customize it so you have a my app
and in work manager 2.1 alpha you can

00:21:16.600 --> 00:21:16.610
and in work manager 2.1 alpha you can
 

00:21:16.610 --> 00:21:18.890
and in work manager 2.1 alpha you can
extend or actually implement

00:21:18.890 --> 00:21:18.900
extend or actually implement
 

00:21:18.900 --> 00:21:22.070
extend or actually implement
configuration dot provider override this

00:21:22.070 --> 00:21:22.080
configuration dot provider override this
 

00:21:22.080 --> 00:21:24.170
configuration dot provider override this
method and this returns a work manager

00:21:24.170 --> 00:21:24.180
method and this returns a work manager
 

00:21:24.180 --> 00:21:26.480
method and this returns a work manager
configuration so this is all work

00:21:26.480 --> 00:21:26.490
configuration so this is all work
 

00:21:26.490 --> 00:21:28.490
configuration so this is all work
manager needs to know on where to get

00:21:28.490 --> 00:21:28.500
manager needs to know on where to get
 

00:21:28.500 --> 00:21:31.840
manager needs to know on where to get
the data now currently in

00:21:31.840 --> 00:21:31.850
the data now currently in
 

00:21:31.850 --> 00:21:34.540
the data now currently in
work manager to dot oh you get work

00:21:34.540 --> 00:21:34.550
work manager to dot oh you get work
 

00:21:34.550 --> 00:21:36.790
work manager to dot oh you get work
manager get instance and you don't

00:21:36.790 --> 00:21:36.800
manager get instance and you don't
 

00:21:36.800 --> 00:21:39.400
manager get instance and you don't
provide any arguments in starting in 2.1

00:21:39.400 --> 00:21:39.410
provide any arguments in starting in 2.1
 

00:21:39.410 --> 00:21:40.990
provide any arguments in starting in 2.1
if you provide this context argument

00:21:40.990 --> 00:21:41.000
if you provide this context argument
 

00:21:41.000 --> 00:21:43.990
if you provide this context argument
this is work manager signal okay if I'm

00:21:43.990 --> 00:21:44.000
this is work manager signal okay if I'm
 

00:21:44.000 --> 00:21:45.790
this is work manager signal okay if I'm
not initialized I can go to the

00:21:45.790 --> 00:21:45.800
not initialized I can go to the
 

00:21:45.800 --> 00:21:47.380
not initialized I can go to the
application object get the configuration

00:21:47.380 --> 00:21:47.390
application object get the configuration
 

00:21:47.390 --> 00:21:49.690
application object get the configuration
and do a lazy initialization when I'm

00:21:49.690 --> 00:21:49.700
and do a lazy initialization when I'm
 

00:21:49.700 --> 00:21:51.460
and do a lazy initialization when I'm
needed so that's all it is it's very

00:21:51.460 --> 00:21:51.470
needed so that's all it is it's very
 

00:21:51.470 --> 00:21:54.100
needed so that's all it is it's very
simple the second thing I want to talk

00:21:54.100 --> 00:21:54.110
simple the second thing I want to talk
 

00:21:54.110 --> 00:21:55.630
simple the second thing I want to talk
about here is Google Play services

00:21:55.630 --> 00:21:55.640
about here is Google Play services
 

00:21:55.640 --> 00:21:58.200
about here is Google Play services
integration and this is coming soon so

00:21:58.200 --> 00:21:58.210
integration and this is coming soon so
 

00:21:58.210 --> 00:22:00.400
integration and this is coming soon so
this basically will allow you to have

00:22:00.400 --> 00:22:00.410
this basically will allow you to have
 

00:22:00.410 --> 00:22:01.840
this basically will allow you to have
better performance on pre marshmallow

00:22:01.840 --> 00:22:01.850
better performance on pre marshmallow
 

00:22:01.850 --> 00:22:04.600
better performance on pre marshmallow
devices and it's totally optional you

00:22:04.600 --> 00:22:04.610
devices and it's totally optional you
 

00:22:04.610 --> 00:22:06.400
devices and it's totally optional you
don't really need to integrate it if you

00:22:06.400 --> 00:22:06.410
don't really need to integrate it if you
 

00:22:06.410 --> 00:22:07.570
don't really need to integrate it if you
don't want it and if you do want to

00:22:07.570 --> 00:22:07.580
don't want it and if you do want to
 

00:22:07.580 --> 00:22:08.980
don't want it and if you do want to
integrate it it's just a simple great

00:22:08.980 --> 00:22:08.990
integrate it it's just a simple great
 

00:22:08.990 --> 00:22:10.870
integrate it it's just a simple great
old dependency that you add nothing else

00:22:10.870 --> 00:22:10.880
old dependency that you add nothing else
 

00:22:10.880 --> 00:22:13.660
old dependency that you add nothing else
because there's no API changes under the

00:22:13.660 --> 00:22:13.670
because there's no API changes under the
 

00:22:13.670 --> 00:22:15.610
because there's no API changes under the
hood it'll see if you have Play services

00:22:15.610 --> 00:22:15.620
hood it'll see if you have Play services
 

00:22:15.620 --> 00:22:18.790
hood it'll see if you have Play services
if you're using it it'll use it on pre

00:22:18.790 --> 00:22:18.800
if you're using it it'll use it on pre
 

00:22:18.800 --> 00:22:22.360
if you're using it it'll use it on pre
marshmallow devices and compatibility

00:22:22.360 --> 00:22:22.370
marshmallow devices and compatibility
 

00:22:22.370 --> 00:22:24.550
marshmallow devices and compatibility
improvements this is an ongoing project

00:22:24.550 --> 00:22:24.560
improvements this is an ongoing project
 

00:22:24.560 --> 00:22:26.230
improvements this is an ongoing project
for us and this is not something that

00:22:26.230 --> 00:22:26.240
for us and this is not something that
 

00:22:26.240 --> 00:22:28.300
for us and this is not something that
you'll necessarily see in our code base

00:22:28.300 --> 00:22:28.310
you'll necessarily see in our code base
 

00:22:28.310 --> 00:22:30.760
you'll necessarily see in our code base
or in our releases but it's stuff that

00:22:30.760 --> 00:22:30.770
or in our releases but it's stuff that
 

00:22:30.770 --> 00:22:32.260
or in our releases but it's stuff that
we do behind the scenes and I want to

00:22:32.260 --> 00:22:32.270
we do behind the scenes and I want to
 

00:22:32.270 --> 00:22:34.990
we do behind the scenes and I want to
talk a little bit about it so we've

00:22:34.990 --> 00:22:35.000
talk a little bit about it so we've
 

00:22:35.000 --> 00:22:36.970
talk a little bit about it so we've
noticed that there are a few differences

00:22:36.970 --> 00:22:36.980
noticed that there are a few differences
 

00:22:36.980 --> 00:22:39.250
noticed that there are a few differences
in devices and manufacturers for example

00:22:39.250 --> 00:22:39.260
in devices and manufacturers for example
 

00:22:39.260 --> 00:22:42.790
in devices and manufacturers for example
if you go to the recent of your device

00:22:42.790 --> 00:22:42.800
if you go to the recent of your device
 

00:22:42.800 --> 00:22:45.190
if you go to the recent of your device
and you swipe away an app on a stock

00:22:45.190 --> 00:22:45.200
and you swipe away an app on a stock
 

00:22:45.200 --> 00:22:46.750
and you swipe away an app on a stock
Android device or on a pixel device

00:22:46.750 --> 00:22:46.760
Android device or on a pixel device
 

00:22:46.760 --> 00:22:48.310
Android device or on a pixel device
you'll notice that the process gets

00:22:48.310 --> 00:22:48.320
you'll notice that the process gets
 

00:22:48.320 --> 00:22:50.680
you'll notice that the process gets
killed but on some devices you might see

00:22:50.680 --> 00:22:50.690
killed but on some devices you might see
 

00:22:50.690 --> 00:22:52.630
killed but on some devices you might see
that the app gets for stopped and forced

00:22:52.630 --> 00:22:52.640
that the app gets for stopped and forced
 

00:22:52.640 --> 00:22:54.310
that the app gets for stopped and forced
off is a really destructive action in

00:22:54.310 --> 00:22:54.320
off is a really destructive action in
 

00:22:54.320 --> 00:22:57.190
off is a really destructive action in
the case of for stop your jobs get

00:22:57.190 --> 00:22:57.200
the case of for stop your jobs get
 

00:22:57.200 --> 00:22:59.740
the case of for stop your jobs get
stopped and wiped out actually your

00:22:59.740 --> 00:22:59.750
stopped and wiped out actually your
 

00:22:59.750 --> 00:23:01.450
stopped and wiped out actually your
alarms get wiped out you don't no longer

00:23:01.450 --> 00:23:01.460
alarms get wiped out you don't no longer
 

00:23:01.460 --> 00:23:03.670
alarms get wiped out you don't no longer
receive FCMs for stuff is a very

00:23:03.670 --> 00:23:03.680
receive FCMs for stuff is a very
 

00:23:03.680 --> 00:23:06.040
receive FCMs for stuff is a very
destructive action so we're working with

00:23:06.040 --> 00:23:06.050
destructive action so we're working with
 

00:23:06.050 --> 00:23:07.630
destructive action so we're working with
OEMs to have a consistent app close

00:23:07.630 --> 00:23:07.640
OEMs to have a consistent app close
 

00:23:07.640 --> 00:23:09.280
OEMs to have a consistent app close
behavior here we want to make sure that

00:23:09.280 --> 00:23:09.290
behavior here we want to make sure that
 

00:23:09.290 --> 00:23:11.140
behavior here we want to make sure that
everybody has the same app close

00:23:11.140 --> 00:23:11.150
everybody has the same app close
 

00:23:11.150 --> 00:23:12.460
everybody has the same app close
behavior which is really good for

00:23:12.460 --> 00:23:12.470
behavior which is really good for
 

00:23:12.470 --> 00:23:14.590
behavior which is really good for
libraries like work manager which

00:23:14.590 --> 00:23:14.600
libraries like work manager which
 

00:23:14.600 --> 00:23:18.460
libraries like work manager which
operate in the background the next thing

00:23:18.460 --> 00:23:18.470
operate in the background the next thing
 

00:23:18.470 --> 00:23:21.190
operate in the background the next thing
I want to talk about is testing when we

00:23:21.190 --> 00:23:21.200
I want to talk about is testing when we
 

00:23:21.200 --> 00:23:23.290
I want to talk about is testing when we
launch work manager a couple of months

00:23:23.290 --> 00:23:23.300
launch work manager a couple of months
 

00:23:23.300 --> 00:23:26.740
launch work manager a couple of months
ago we kind of had a problem at Robo

00:23:26.740 --> 00:23:26.750
ago we kind of had a problem at Robo
 

00:23:26.750 --> 00:23:28.360
ago we kind of had a problem at Robo
electric support in that it didn't work

00:23:28.360 --> 00:23:28.370
electric support in that it didn't work
 

00:23:28.370 --> 00:23:30.670
electric support in that it didn't work
we fixed it it's out in stable sorry

00:23:30.670 --> 00:23:30.680
we fixed it it's out in stable sorry
 

00:23:30.680 --> 00:23:34.810
we fixed it it's out in stable sorry
about that and also now we have an alpha

00:23:34.810 --> 00:23:34.820
about that and also now we have an alpha
 

00:23:34.820 --> 00:23:38.080
about that and also now we have an alpha
unit testing for workers so basically

00:23:38.080 --> 00:23:38.090
unit testing for workers so basically
 

00:23:38.090 --> 00:23:39.670
unit testing for workers so basically
you can create your workers using one of

00:23:39.670 --> 00:23:39.680
you can create your workers using one of
 

00:23:39.680 --> 00:23:41.380
you can create your workers using one of
these two classes just worker builder or

00:23:41.380 --> 00:23:41.390
these two classes just worker builder or
 

00:23:41.390 --> 00:23:43.139
these two classes just worker builder or
test listenable worker builder

00:23:43.139 --> 00:23:43.149
test listenable worker builder
 

00:23:43.149 --> 00:23:45.659
test listenable worker builder
and you can just use them by using the

00:23:45.659 --> 00:23:45.669
and you can just use them by using the
 

00:23:45.669 --> 00:23:47.219
and you can just use them by using the
do work or start work method as is

00:23:47.219 --> 00:23:47.229
do work or start work method as is
 

00:23:47.229 --> 00:23:49.229
do work or start work method as is
appropriate so let's take a look at that

00:23:49.229 --> 00:23:49.239
appropriate so let's take a look at that
 

00:23:49.239 --> 00:23:50.879
appropriate so let's take a look at that
in action so let's say you have a work

00:23:50.879 --> 00:23:50.889
in action so let's say you have a work
 

00:23:50.889 --> 00:23:53.310
in action so let's say you have a work
request you can use a test worker

00:23:53.310 --> 00:23:53.320
request you can use a test worker
 

00:23:53.320 --> 00:23:55.889
request you can use a test worker
builder and you can say create that work

00:23:55.889 --> 00:23:55.899
builder and you can say create that work
 

00:23:55.899 --> 00:23:58.950
builder and you can say create that work
request from a given context and a given

00:23:58.950 --> 00:23:58.960
request from a given context and a given
 

00:23:58.960 --> 00:24:01.529
request from a given context and a given
executor - on which it will run you just

00:24:01.529 --> 00:24:01.539
executor - on which it will run you just
 

00:24:01.539 --> 00:24:03.509
executor - on which it will run you just
build it so this gives you a worker

00:24:03.509 --> 00:24:03.519
build it so this gives you a worker
 

00:24:03.519 --> 00:24:05.399
build it so this gives you a worker
class back and then you can call the do

00:24:05.399 --> 00:24:05.409
class back and then you can call the do
 

00:24:05.409 --> 00:24:06.779
class back and then you can call the do
work method which is the method you've

00:24:06.779 --> 00:24:06.789
work method which is the method you've
 

00:24:06.789 --> 00:24:09.479
work method which is the method you've
already overridden to do the and get its

00:24:09.479 --> 00:24:09.489
already overridden to do the and get its
 

00:24:09.489 --> 00:24:11.609
already overridden to do the and get its
result you can assert the result you can

00:24:11.609 --> 00:24:11.619
result you can assert the result you can
 

00:24:11.619 --> 00:24:12.869
result you can assert the result you can
check the state of your app make sure

00:24:12.869 --> 00:24:12.879
check the state of your app make sure
 

00:24:12.879 --> 00:24:14.669
check the state of your app make sure
everything's fine so that's how you

00:24:14.669 --> 00:24:14.679
everything's fine so that's how you
 

00:24:14.679 --> 00:24:17.279
everything's fine so that's how you
would unit test the worker if you're

00:24:17.279 --> 00:24:17.289
would unit test the worker if you're
 

00:24:17.289 --> 00:24:18.839
would unit test the worker if you're
using a listenable worker same thing you

00:24:18.839 --> 00:24:18.849
using a listenable worker same thing you
 

00:24:18.849 --> 00:24:22.139
using a listenable worker same thing you
start with a work request and you use a

00:24:22.139 --> 00:24:22.149
start with a work request and you use a
 

00:24:22.149 --> 00:24:23.940
start with a work request and you use a
test listenable worker builder and you

00:24:23.940 --> 00:24:23.950
test listenable worker builder and you
 

00:24:23.950 --> 00:24:27.180
test listenable worker builder and you
can say create that use creative worker

00:24:27.180 --> 00:24:27.190
can say create that use creative worker
 

00:24:27.190 --> 00:24:30.869
can say create that use creative worker
using that request you build it and same

00:24:30.869 --> 00:24:30.879
using that request you build it and same
 

00:24:30.879 --> 00:24:32.310
using that request you build it and same
thing instead of calling do work in this

00:24:32.310 --> 00:24:32.320
thing instead of calling do work in this
 

00:24:32.320 --> 00:24:34.349
thing instead of calling do work in this
case you call start work remember that

00:24:34.349 --> 00:24:34.359
case you call start work remember that
 

00:24:34.359 --> 00:24:36.619
case you call start work remember that
test that list of all workers are

00:24:36.619 --> 00:24:36.629
test that list of all workers are
 

00:24:36.629 --> 00:24:39.320
test that list of all workers are
asynchronous and to control their own

00:24:39.320 --> 00:24:39.330
asynchronous and to control their own
 

00:24:39.330 --> 00:24:41.399
asynchronous and to control their own
execution so you don't need to specify

00:24:41.399 --> 00:24:41.409
execution so you don't need to specify
 

00:24:41.409 --> 00:24:44.519
execution so you don't need to specify
an executor here and it artwork returns

00:24:44.519 --> 00:24:44.529
an executor here and it artwork returns
 

00:24:44.529 --> 00:24:46.019
an executor here and it artwork returns
a list of all future so you just call a

00:24:46.019 --> 00:24:46.029
a list of all future so you just call a
 

00:24:46.029 --> 00:24:48.359
a list of all future so you just call a
blocking get on in this case and you

00:24:48.359 --> 00:24:48.369
blocking get on in this case and you
 

00:24:48.369 --> 00:24:49.919
blocking get on in this case and you
assert that everything is the way you

00:24:49.919 --> 00:24:49.929
assert that everything is the way you
 

00:24:49.929 --> 00:24:53.190
assert that everything is the way you
want it to be you can even provide more

00:24:53.190 --> 00:24:53.200
want it to be you can even provide more
 

00:24:53.200 --> 00:24:55.079
want it to be you can even provide more
arguments so you can say something like

00:24:55.079 --> 00:24:55.089
arguments so you can say something like
 

00:24:55.089 --> 00:24:57.149
arguments so you can say something like
here's the input data for it here's the

00:24:57.149 --> 00:24:57.159
here's the input data for it here's the
 

00:24:57.159 --> 00:24:59.070
here's the input data for it here's the
run attempt count that you're currently

00:24:59.070 --> 00:24:59.080
run attempt count that you're currently
 

00:24:59.080 --> 00:25:01.440
run attempt count that you're currently
on here's the tags that you have for

00:25:01.440 --> 00:25:01.450
on here's the tags that you have for
 

00:25:01.450 --> 00:25:04.409
on here's the tags that you have for
this worker and the last thing I'm gonna

00:25:04.409 --> 00:25:04.419
this worker and the last thing I'm gonna
 

00:25:04.419 --> 00:25:05.749
this worker and the last thing I'm gonna
talk about is building for the future

00:25:05.749 --> 00:25:05.759
talk about is building for the future
 

00:25:05.759 --> 00:25:09.269
talk about is building for the future
and this is in particular we want to

00:25:09.269 --> 00:25:09.279
and this is in particular we want to
 

00:25:09.279 --> 00:25:10.950
and this is in particular we want to
have foreground service support and work

00:25:10.950 --> 00:25:10.960
have foreground service support and work
 

00:25:10.960 --> 00:25:12.419
have foreground service support and work
manager and this is very much in

00:25:12.419 --> 00:25:12.429
manager and this is very much in
 

00:25:12.429 --> 00:25:13.919
manager and this is very much in
progress so this is not ready this is

00:25:13.919 --> 00:25:13.929
progress so this is not ready this is
 

00:25:13.929 --> 00:25:16.049
progress so this is not ready this is
later in the year you'll probably see

00:25:16.049 --> 00:25:16.059
later in the year you'll probably see
 

00:25:16.059 --> 00:25:18.570
later in the year you'll probably see
something about this but the basic idea

00:25:18.570 --> 00:25:18.580
something about this but the basic idea
 

00:25:18.580 --> 00:25:21.089
something about this but the basic idea
is that what if you could do work in the

00:25:21.089 --> 00:25:21.099
is that what if you could do work in the
 

00:25:21.099 --> 00:25:22.709
is that what if you could do work in the
foreground using the work manager API

00:25:22.709 --> 00:25:22.719
foreground using the work manager API
 

00:25:22.719 --> 00:25:24.810
foreground using the work manager API
and this is particularly useful I was

00:25:24.810 --> 00:25:24.820
and this is particularly useful I was
 

00:25:24.820 --> 00:25:26.070
and this is particularly useful I was
just talking to someone this morning

00:25:26.070 --> 00:25:26.080
just talking to someone this morning
 

00:25:26.080 --> 00:25:28.019
just talking to someone this morning
they wanted to do a long-running upload

00:25:28.019 --> 00:25:28.029
they wanted to do a long-running upload
 

00:25:28.029 --> 00:25:30.599
they wanted to do a long-running upload
work manager and job scheduler both give

00:25:30.599 --> 00:25:30.609
work manager and job scheduler both give
 

00:25:30.609 --> 00:25:33.359
work manager and job scheduler both give
you a 10-minute slice of time to do an

00:25:33.359 --> 00:25:33.369
you a 10-minute slice of time to do an
 

00:25:33.369 --> 00:25:35.609
you a 10-minute slice of time to do an
upload or whatever work you have but

00:25:35.609 --> 00:25:35.619
upload or whatever work you have but
 

00:25:35.619 --> 00:25:37.289
upload or whatever work you have but
what if it goes longer than that you can

00:25:37.289 --> 00:25:37.299
what if it goes longer than that you can
 

00:25:37.299 --> 00:25:39.299
what if it goes longer than that you can
use a program service for that and work

00:25:39.299 --> 00:25:39.309
use a program service for that and work
 

00:25:39.309 --> 00:25:40.909
use a program service for that and work
manager can make it easier for you so

00:25:40.909 --> 00:25:40.919
manager can make it easier for you so
 

00:25:40.919 --> 00:25:43.229
manager can make it easier for you so
because this is a foreground service

00:25:43.229 --> 00:25:43.239
because this is a foreground service
 

00:25:43.239 --> 00:25:46.469
because this is a foreground service
your app will show a notification talk

00:25:46.469 --> 00:25:46.479
your app will show a notification talk
 

00:25:46.479 --> 00:25:47.849
your app will show a notification talk
to us about it in the sandbox if you're

00:25:47.849 --> 00:25:47.859
to us about it in the sandbox if you're
 

00:25:47.859 --> 00:25:49.320
to us about it in the sandbox if you're
interested we want to hear what

00:25:49.320 --> 00:25:49.330
interested we want to hear what
 

00:25:49.330 --> 00:25:51.989
interested we want to hear what
everybody has to contribute to this what

00:25:51.989 --> 00:25:51.999
everybody has to contribute to this what
 

00:25:51.999 --> 00:25:55.499
everybody has to contribute to this what
use cases you have and so forth and now

00:25:55.499 --> 00:25:55.509
use cases you have and so forth and now
 

00:25:55.509 --> 00:25:57.930
use cases you have and so forth and now
I'd like to turn it over to Danny for

00:25:57.930 --> 00:25:57.940
I'd like to turn it over to Danny for
 

00:25:57.940 --> 00:26:05.430
I'd like to turn it over to Danny for
room thank you somewhere hey my name is

00:26:05.430 --> 00:26:05.440
room thank you somewhere hey my name is
 

00:26:05.440 --> 00:26:07.440
room thank you somewhere hey my name is
Daniel Santiago and I'll be talking a

00:26:07.440 --> 00:26:07.450
Daniel Santiago and I'll be talking a
 

00:26:07.450 --> 00:26:10.259
Daniel Santiago and I'll be talking a
little bit about room but before we get

00:26:10.259 --> 00:26:10.269
little bit about room but before we get
 

00:26:10.269 --> 00:26:13.379
little bit about room but before we get
to what's new room what is room well

00:26:13.379 --> 00:26:13.389
to what's new room what is room well
 

00:26:13.389 --> 00:26:15.930
to what's new room what is room well
room is for SQL like object mapping

00:26:15.930 --> 00:26:15.940
room is for SQL like object mapping
 

00:26:15.940 --> 00:26:18.269
room is for SQL like object mapping
library and it basically creates a bunch

00:26:18.269 --> 00:26:18.279
library and it basically creates a bunch
 

00:26:18.279 --> 00:26:20.909
library and it basically creates a bunch
of code for you based on some annotation

00:26:20.909 --> 00:26:20.919
of code for you based on some annotation
 

00:26:20.919 --> 00:26:23.909
of code for you based on some annotation
so that you can easily access your data

00:26:23.909 --> 00:26:23.919
so that you can easily access your data
 

00:26:23.919 --> 00:26:28.319
so that you can easily access your data
objects with a SQLite database let's do

00:26:28.319 --> 00:26:28.329
objects with a SQLite database let's do
 

00:26:28.329 --> 00:26:30.769
objects with a SQLite database let's do
a quick recap on how this looks

00:26:30.769 --> 00:26:30.779
a quick recap on how this looks
 

00:26:30.779 --> 00:26:32.759
a quick recap on how this looks
imagine we're making a music application

00:26:32.759 --> 00:26:32.769
imagine we're making a music application
 

00:26:32.769 --> 00:26:35.940
imagine we're making a music application
we're going to be saving some songs on a

00:26:35.940 --> 00:26:35.950
we're going to be saving some songs on a
 

00:26:35.950 --> 00:26:37.859
we're going to be saving some songs on a
database we start by having a data class

00:26:37.859 --> 00:26:37.869
database we start by having a data class
 

00:26:37.869 --> 00:26:41.940
database we start by having a data class
we call it song it has some ID a URL for

00:26:41.940 --> 00:26:41.950
we call it song it has some ID a URL for
 

00:26:41.950 --> 00:26:43.950
we call it song it has some ID a URL for
a room to let know that you want to have

00:26:43.950 --> 00:26:43.960
a room to let know that you want to have
 

00:26:43.960 --> 00:26:46.200
a room to let know that you want to have
a table for this entity you annotate it

00:26:46.200 --> 00:26:46.210
a table for this entity you annotate it
 

00:26:46.210 --> 00:26:49.379
a table for this entity you annotate it
with the entity annotation you let it

00:26:49.379 --> 00:26:49.389
with the entity annotation you let it
 

00:26:49.389 --> 00:26:52.799
with the entity annotation you let it
know if it's unique identifier now in a

00:26:52.799 --> 00:26:52.809
know if it's unique identifier now in a
 

00:26:52.809 --> 00:26:55.229
know if it's unique identifier now in a
database if you want to get the data out

00:26:55.229 --> 00:26:55.239
database if you want to get the data out
 

00:26:55.239 --> 00:26:56.700
database if you want to get the data out
of it you would write a normal

00:26:56.700 --> 00:26:56.710
of it you would write a normal
 

00:26:56.710 --> 00:26:59.969
of it you would write a normal
SQL query select star from Sun but to

00:26:59.969 --> 00:26:59.979
SQL query select star from Sun but to
 

00:26:59.979 --> 00:27:02.009
SQL query select star from Sun but to
let room know that you want to link this

00:27:02.009 --> 00:27:02.019
let room know that you want to link this
 

00:27:02.019 --> 00:27:03.599
let room know that you want to link this
query with that data class you actually

00:27:03.599 --> 00:27:03.609
query with that data class you actually
 

00:27:03.609 --> 00:27:05.489
query with that data class you actually
put it on a method that returns a list

00:27:05.489 --> 00:27:05.499
put it on a method that returns a list
 

00:27:05.499 --> 00:27:07.259
put it on a method that returns a list
of songs and it's annotated with our

00:27:07.259 --> 00:27:07.269
of songs and it's annotated with our
 

00:27:07.269 --> 00:27:09.509
of songs and it's annotated with our
query now you don't throw these methods

00:27:09.509 --> 00:27:09.519
query now you don't throw these methods
 

00:27:09.519 --> 00:27:11.129
query now you don't throw these methods
all over the place you actually put them

00:27:11.129 --> 00:27:11.139
all over the place you actually put them
 

00:27:11.139 --> 00:27:14.190
all over the place you actually put them
on what we call data as a subject and if

00:27:14.190 --> 00:27:14.200
on what we call data as a subject and if
 

00:27:14.200 --> 00:27:16.200
on what we call data as a subject and if
this is just an interface or an asteroid

00:27:16.200 --> 00:27:16.210
this is just an interface or an asteroid
 

00:27:16.210 --> 00:27:19.229
this is just an interface or an asteroid
class annotated with at thou now to link

00:27:19.229 --> 00:27:19.239
class annotated with at thou now to link
 

00:27:19.239 --> 00:27:21.029
class annotated with at thou now to link
these together you have your music

00:27:21.029 --> 00:27:21.039
these together you have your music
 

00:27:21.039 --> 00:27:23.999
these together you have your music
database it extends room database it has

00:27:23.999 --> 00:27:24.009
database it extends room database it has
 

00:27:24.009 --> 00:27:26.399
database it extends room database it has
a database annotation and then you let

00:27:26.399 --> 00:27:26.409
a database annotation and then you let
 

00:27:26.409 --> 00:27:28.379
a database annotation and then you let
it know if it's entities which in this

00:27:28.379 --> 00:27:28.389
it know if it's entities which in this
 

00:27:28.389 --> 00:27:31.019
it know if it's entities which in this
case will be the song and the dowels are

00:27:31.019 --> 00:27:31.029
case will be the song and the dowels are
 

00:27:31.029 --> 00:27:34.560
case will be the song and the dowels are
just scattered method in a nutshell it

00:27:34.560 --> 00:27:34.570
just scattered method in a nutshell it
 

00:27:34.570 --> 00:27:36.060
just scattered method in a nutshell it
kind of looks like this you have your

00:27:36.060 --> 00:27:36.070
kind of looks like this you have your
 

00:27:36.070 --> 00:27:37.859
kind of looks like this you have your
database your dials and your entities

00:27:37.859 --> 00:27:37.869
database your dials and your entities
 

00:27:37.869 --> 00:27:39.779
database your dials and your entities
and your application interacts with all

00:27:39.779 --> 00:27:39.789
and your application interacts with all
 

00:27:39.789 --> 00:27:42.930
and your application interacts with all
of these tools now let let's get to the

00:27:42.930 --> 00:27:42.940
of these tools now let let's get to the
 

00:27:42.940 --> 00:27:45.989
of these tools now let let's get to the
good stuff so something new that's in

00:27:45.989 --> 00:27:45.999
good stuff so something new that's in
 

00:27:45.999 --> 00:27:49.399
good stuff so something new that's in
room two point one is co-routine support

00:27:49.399 --> 00:27:49.409
room two point one is co-routine support
 

00:27:49.409 --> 00:27:54.869
room two point one is co-routine support
in room 2.0 if you try to add a suspend

00:27:54.869 --> 00:27:54.879
in room 2.0 if you try to add a suspend
 

00:27:54.879 --> 00:27:56.039
in room 2.0 if you try to add a suspend
method to your Dao

00:27:56.039 --> 00:27:56.049
method to your Dao
 

00:27:56.049 --> 00:27:58.180
method to your Dao
because you have a copy not you're using

00:27:58.180 --> 00:27:58.190
because you have a copy not you're using
 

00:27:58.190 --> 00:27:59.740
because you have a copy not you're using
and you probably want to do your heavy

00:27:59.740 --> 00:27:59.750
and you probably want to do your heavy
 

00:27:59.750 --> 00:28:02.860
and you probably want to do your heavy
work i synchronously you usually at your

00:28:02.860 --> 00:28:02.870
work i synchronously you usually at your
 

00:28:02.870 --> 00:28:05.800
work i synchronously you usually at your
husband method room would freak out he

00:28:05.800 --> 00:28:05.810
husband method room would freak out he
 

00:28:05.810 --> 00:28:07.450
husband method room would freak out he
wouldn't he wouldn't know what to do he

00:28:07.450 --> 00:28:07.460
wouldn't he wouldn't know what to do he
 

00:28:07.460 --> 00:28:10.000
wouldn't he wouldn't know what to do he
would no can do that

00:28:10.000 --> 00:28:10.010
would no can do that
 

00:28:10.010 --> 00:28:12.010
would no can do that
and this might let you to create repair

00:28:12.010 --> 00:28:12.020
and this might let you to create repair
 

00:28:12.020 --> 00:28:15.250
and this might let you to create repair
methods that are suspensions that

00:28:15.250 --> 00:28:15.260
methods that are suspensions that
 

00:28:15.260 --> 00:28:17.170
methods that are suspensions that
actually then call the actual dull

00:28:17.170 --> 00:28:17.180
actually then call the actual dull
 

00:28:17.180 --> 00:28:19.150
actually then call the actual dull
function but you can imagine this

00:28:19.150 --> 00:28:19.160
function but you can imagine this
 

00:28:19.160 --> 00:28:21.910
function but you can imagine this
doesn't scale very well but no worries

00:28:21.910 --> 00:28:21.920
doesn't scale very well but no worries
 

00:28:21.920 --> 00:28:23.970
doesn't scale very well but no worries
in room 2.1 you can actually have

00:28:23.970 --> 00:28:23.980
in room 2.1 you can actually have
 

00:28:23.980 --> 00:28:27.550
in room 2.1 you can actually have
diameters are suspended meted room will

00:28:27.550 --> 00:28:27.560
diameters are suspended meted room will
 

00:28:27.560 --> 00:28:29.620
diameters are suspended meted room will
generate the correct code including

00:28:29.620 --> 00:28:29.630
generate the correct code including
 

00:28:29.630 --> 00:28:33.460
generate the correct code including
using a background dispatcher you can

00:28:33.460 --> 00:28:33.470
using a background dispatcher you can
 

00:28:33.470 --> 00:28:35.470
using a background dispatcher you can
also have such methods with insert

00:28:35.470 --> 00:28:35.480
also have such methods with insert
 

00:28:35.480 --> 00:28:38.470
also have such methods with insert
update and delete and even more so you

00:28:38.470 --> 00:28:38.480
update and delete and even more so you
 

00:28:38.480 --> 00:28:41.950
update and delete and even more so you
can have suspend implemented methods

00:28:41.950 --> 00:28:41.960
can have suspend implemented methods
 

00:28:41.960 --> 00:28:44.320
can have suspend implemented methods
that do multiple database operations

00:28:44.320 --> 00:28:44.330
that do multiple database operations
 

00:28:44.330 --> 00:28:46.870
that do multiple database operations
that are annotated with a transaction so

00:28:46.870 --> 00:28:46.880
that are annotated with a transaction so
 

00:28:46.880 --> 00:28:49.510
that are annotated with a transaction so
that these database operations are done

00:28:49.510 --> 00:28:49.520
that these database operations are done
 

00:28:49.520 --> 00:28:53.080
that these database operations are done
atomically even more so there's also an

00:28:53.080 --> 00:28:53.090
atomically even more so there's also an
 

00:28:53.090 --> 00:28:55.210
atomically even more so there's also an
extension function on room database that

00:28:55.210 --> 00:28:55.220
extension function on room database that
 

00:28:55.220 --> 00:28:57.880
extension function on room database that
will allow you to start a transaction it

00:28:57.880 --> 00:28:57.890
will allow you to start a transaction it
 

00:28:57.890 --> 00:29:00.040
will allow you to start a transaction it
creates this special coding context that

00:29:00.040 --> 00:29:00.050
creates this special coding context that
 

00:29:00.050 --> 00:29:02.680
creates this special coding context that
you can use to also perform multiple

00:29:02.680 --> 00:29:02.690
you can use to also perform multiple
 

00:29:02.690 --> 00:29:06.460
you can use to also perform multiple
database operations now another new

00:29:06.460 --> 00:29:06.470
database operations now another new
 

00:29:06.470 --> 00:29:08.650
database operations now another new
feature we added in room is full text

00:29:08.650 --> 00:29:08.660
feature we added in room is full text
 

00:29:08.660 --> 00:29:11.560
feature we added in room is full text
search full text search is an extension

00:29:11.560 --> 00:29:11.570
search full text search is an extension
 

00:29:11.570 --> 00:29:15.520
search full text search is an extension
in SQLite to be able to create tables to

00:29:15.520 --> 00:29:15.530
in SQLite to be able to create tables to
 

00:29:15.530 --> 00:29:18.790
in SQLite to be able to create tables to
efficiently search for data thinking

00:29:18.790 --> 00:29:18.800
efficiently search for data thinking
 

00:29:18.800 --> 00:29:20.740
efficiently search for data thinking
back on our music app imagine we're

00:29:20.740 --> 00:29:20.750
back on our music app imagine we're
 

00:29:20.750 --> 00:29:22.360
back on our music app imagine we're
trying to create a search functionality

00:29:22.360 --> 00:29:22.370
trying to create a search functionality
 

00:29:22.370 --> 00:29:24.790
trying to create a search functionality
we want to search for songs given a

00:29:24.790 --> 00:29:24.800
we want to search for songs given a
 

00:29:24.800 --> 00:29:27.550
we want to search for songs given a
phrase if we were to do this in room 2.0

00:29:27.550 --> 00:29:27.560
phrase if we were to do this in room 2.0
 

00:29:27.560 --> 00:29:29.740
phrase if we were to do this in room 2.0
we will have to write a down method

00:29:29.740 --> 00:29:29.750
we will have to write a down method
 

00:29:29.750 --> 00:29:32.590
we will have to write a down method
kinda like this doesn't look great you

00:29:32.590 --> 00:29:32.600
kinda like this doesn't look great you
 

00:29:32.600 --> 00:29:35.140
kinda like this doesn't look great you
have this huge we're cause it has all

00:29:35.140 --> 00:29:35.150
have this huge we're cause it has all
 

00:29:35.150 --> 00:29:38.320
have this huge we're cause it has all
the columns like it's not great but no

00:29:38.320 --> 00:29:38.330
the columns like it's not great but no
 

00:29:38.330 --> 00:29:42.250
the columns like it's not great but no
worries in room 2.1 if you want an

00:29:42.250 --> 00:29:42.260
worries in room 2.1 if you want an
 

00:29:42.260 --> 00:29:44.560
worries in room 2.1 if you want an
entity to be able to be backed by a

00:29:44.560 --> 00:29:44.570
entity to be able to be backed by a
 

00:29:44.570 --> 00:29:47.050
entity to be able to be backed by a
nucleus table you simply use the FTS

00:29:47.050 --> 00:29:47.060
nucleus table you simply use the FTS
 

00:29:47.060 --> 00:29:49.240
nucleus table you simply use the FTS
annotation and now this greatly

00:29:49.240 --> 00:29:49.250
annotation and now this greatly
 

00:29:49.250 --> 00:29:51.400
annotation and now this greatly
simplifies your query because you can

00:29:51.400 --> 00:29:51.410
simplifies your query because you can
 

00:29:51.410 --> 00:29:54.370
simplifies your query because you can
start using the match expression which

00:29:54.370 --> 00:29:54.380
start using the match expression which
 

00:29:54.380 --> 00:29:57.709
start using the match expression which
is way more efficient

00:29:57.709 --> 00:29:57.719
 

00:29:57.719 --> 00:30:03.299
speaking of yeah thanks

00:30:03.299 --> 00:30:03.309
speaking of yeah thanks
 

00:30:03.309 --> 00:30:05.699
speaking of yeah thanks
thinking of simplifying things database

00:30:05.699 --> 00:30:05.709
thinking of simplifying things database
 

00:30:05.709 --> 00:30:08.669
thinking of simplifying things database
views is another way to simplify your

00:30:08.669 --> 00:30:08.679
views is another way to simplify your
 

00:30:08.679 --> 00:30:11.190
views is another way to simplify your
database separation so lot of reviews

00:30:11.190 --> 00:30:11.200
database separation so lot of reviews
 

00:30:11.200 --> 00:30:13.739
database separation so lot of reviews
are kind of like tables where everywhere

00:30:13.739 --> 00:30:13.749
are kind of like tables where everywhere
 

00:30:13.749 --> 00:30:15.419
are kind of like tables where everywhere
you will reference a table you can

00:30:15.419 --> 00:30:15.429
you will reference a table you can
 

00:30:15.429 --> 00:30:16.859
you will reference a table you can
reference view but they're different

00:30:16.859 --> 00:30:16.869
reference view but they're different
 

00:30:16.869 --> 00:30:18.469
reference view but they're different
because you cannot insert data

00:30:18.469 --> 00:30:18.479
because you cannot insert data
 

00:30:18.479 --> 00:30:21.269
because you cannot insert data
interviews to put it differently they're

00:30:21.269 --> 00:30:21.279
interviews to put it differently they're
 

00:30:21.279 --> 00:30:24.440
interviews to put it differently they're
kind of like queries with a given name

00:30:24.440 --> 00:30:24.450
kind of like queries with a given name
 

00:30:24.450 --> 00:30:27.329
kind of like queries with a given name
let's think about listing again back to

00:30:27.329 --> 00:30:27.339
let's think about listing again back to
 

00:30:27.339 --> 00:30:29.729
let's think about listing again back to
our music application this time we want

00:30:29.729 --> 00:30:29.739
our music application this time we want
 

00:30:29.739 --> 00:30:31.499
our music application this time we want
to show a list of albums and these

00:30:31.499 --> 00:30:31.509
to show a list of albums and these
 

00:30:31.509 --> 00:30:33.619
to show a list of albums and these
albums have some aggregated information

00:30:33.619 --> 00:30:33.629
albums have some aggregated information
 

00:30:33.629 --> 00:30:37.589
albums have some aggregated information
the total number of songs and the total

00:30:37.589 --> 00:30:37.599
the total number of songs and the total
 

00:30:37.599 --> 00:30:40.469
the total number of songs and the total
time in the album and thinking back how

00:30:40.469 --> 00:30:40.479
time in the album and thinking back how
 

00:30:40.479 --> 00:30:42.719
time in the album and thinking back how
we started using room we have a simple

00:30:42.719 --> 00:30:42.729
we started using room we have a simple
 

00:30:42.729 --> 00:30:45.359
we started using room we have a simple
data class with the information that we

00:30:45.359 --> 00:30:45.369
data class with the information that we
 

00:30:45.369 --> 00:30:49.529
data class with the information that we
need now in room 2.1 instead of having a

00:30:49.529 --> 00:30:49.539
need now in room 2.1 instead of having a
 

00:30:49.539 --> 00:30:54.389
need now in room 2.1 instead of having a
big query you can actually make you can

00:30:54.389 --> 00:30:54.399
big query you can actually make you can
 

00:30:54.399 --> 00:30:55.529
big query you can actually make you can
actually annotate your data class

00:30:55.529 --> 00:30:55.539
actually annotate your data class
 

00:30:55.539 --> 00:30:57.359
actually annotate your data class
without directly a database view and

00:30:57.359 --> 00:30:57.369
without directly a database view and
 

00:30:57.369 --> 00:30:59.159
without directly a database view and
instead of making a table we'll create a

00:30:59.159 --> 00:30:59.169
instead of making a table we'll create a
 

00:30:59.169 --> 00:31:01.469
instead of making a table we'll create a
view out of it and then to specify how

00:31:01.469 --> 00:31:01.479
view out of it and then to specify how
 

00:31:01.479 --> 00:31:04.259
view out of it and then to specify how
we get this information you put your big

00:31:04.259 --> 00:31:04.269
we get this information you put your big
 

00:31:04.269 --> 00:31:07.079
we get this information you put your big
query in the annotation and you can see

00:31:07.079 --> 00:31:07.089
query in the annotation and you can see
 

00:31:07.089 --> 00:31:09.239
query in the annotation and you can see
it's a big query it has aggregated

00:31:09.239 --> 00:31:09.249
it's a big query it has aggregated
 

00:31:09.249 --> 00:31:11.069
it's a big query it has aggregated
information but the important thing is

00:31:11.069 --> 00:31:11.079
information but the important thing is
 

00:31:11.079 --> 00:31:15.719
information but the important thing is
that now you can use this view or entity

00:31:15.719 --> 00:31:15.729
that now you can use this view or entity
 

00:31:15.729 --> 00:31:18.419
that now you can use this view or entity
as if it was another table and you can

00:31:18.419 --> 00:31:18.429
as if it was another table and you can
 

00:31:18.429 --> 00:31:20.489
as if it was another table and you can
see here we also have another order by

00:31:20.489 --> 00:31:20.499
see here we also have another order by
 

00:31:20.499 --> 00:31:22.589
see here we also have another order by
which you know makes your operations

00:31:22.589 --> 00:31:22.599
which you know makes your operations
 

00:31:22.599 --> 00:31:25.650
which you know makes your operations
easier

00:31:25.650 --> 00:31:25.660
 

00:31:25.660 --> 00:31:29.470
[Applause]

00:31:29.470 --> 00:31:29.480
[Applause]
 

00:31:29.480 --> 00:31:32.620
[Applause]
nice we've been outside adding more

00:31:32.620 --> 00:31:32.630
nice we've been outside adding more
 

00:31:32.630 --> 00:31:35.730
nice we've been outside adding more
support for our ex in rooms and we know

00:31:35.730 --> 00:31:35.740
support for our ex in rooms and we know
 

00:31:35.740 --> 00:31:40.029
support for our ex in rooms and we know
people like our ex in room 2.1 you can

00:31:40.029 --> 00:31:40.039
people like our ex in room 2.1 you can
 

00:31:40.039 --> 00:31:42.549
people like our ex in room 2.1 you can
have insert update and delete method

00:31:42.549 --> 00:31:42.559
have insert update and delete method
 

00:31:42.559 --> 00:31:45.789
have insert update and delete method
that return completable maybe in single

00:31:45.789 --> 00:31:45.799
that return completable maybe in single
 

00:31:45.799 --> 00:31:48.759
that return completable maybe in single
and even more newer we also added

00:31:48.759 --> 00:31:48.769
and even more newer we also added
 

00:31:48.769 --> 00:31:51.690
and even more newer we also added
support for returning our x-pipe on

00:31:51.690 --> 00:31:51.700
support for returning our x-pipe on
 

00:31:51.700 --> 00:31:54.820
support for returning our x-pipe on
query annotated down methods that

00:31:54.820 --> 00:31:54.830
query annotated down methods that
 

00:31:54.830 --> 00:31:57.789
query annotated down methods that
perform write statements such as update

00:31:57.789 --> 00:31:57.799
perform write statements such as update
 

00:31:57.799 --> 00:32:01.299
perform write statements such as update
insert and delete so for those queries

00:32:01.299 --> 00:32:01.309
insert and delete so for those queries
 

00:32:01.309 --> 00:32:02.769
insert and delete so for those queries
that are more complicated that you still

00:32:02.769 --> 00:32:02.779
that are more complicated that you still
 

00:32:02.779 --> 00:32:07.060
that are more complicated that you still
want to use rx you can do that now

00:32:07.060 --> 00:32:07.070
want to use rx you can do that now
 

00:32:07.070 --> 00:32:08.860
want to use rx you can do that now
that's one of the new things in room but

00:32:08.860 --> 00:32:08.870
that's one of the new things in room but
 

00:32:08.870 --> 00:32:11.289
that's one of the new things in room but
we still have a lot more work to do one

00:32:11.289 --> 00:32:11.299
we still have a lot more work to do one
 

00:32:11.299 --> 00:32:12.519
we still have a lot more work to do one
of the most immediate things we want to

00:32:12.519 --> 00:32:12.529
of the most immediate things we want to
 

00:32:12.529 --> 00:32:14.500
of the most immediate things we want to
do is have an incremental annotation

00:32:14.500 --> 00:32:14.510
do is have an incremental annotation
 

00:32:14.510 --> 00:32:17.889
do is have an incremental annotation
processor this will greatly improve the

00:32:17.889 --> 00:32:17.899
processor this will greatly improve the
 

00:32:17.899 --> 00:32:19.720
processor this will greatly improve the
bill performance for those of you using

00:32:19.720 --> 00:32:19.730
bill performance for those of you using
 

00:32:19.730 --> 00:32:22.570
bill performance for those of you using
room or for those of you who might start

00:32:22.570 --> 00:32:22.580
room or for those of you who might start
 

00:32:22.580 --> 00:32:26.230
room or for those of you who might start
to use room we also know that

00:32:26.230 --> 00:32:26.240
to use room we also know that
 

00:32:26.240 --> 00:32:27.700
to use room we also know that
relationship is another area of

00:32:27.700 --> 00:32:27.710
relationship is another area of
 

00:32:27.710 --> 00:32:30.310
relationship is another area of
improvement we only have a single

00:32:30.310 --> 00:32:30.320
improvement we only have a single
 

00:32:30.320 --> 00:32:34.269
improvement we only have a single
annotation for regulation and it helps

00:32:34.269 --> 00:32:34.279
annotation for regulation and it helps
 

00:32:34.279 --> 00:32:36.100
annotation for regulation and it helps
you with one-to-many but we feel like we

00:32:36.100 --> 00:32:36.110
you with one-to-many but we feel like we
 

00:32:36.110 --> 00:32:38.049
you with one-to-many but we feel like we
can do many too many even maybe using a

00:32:38.049 --> 00:32:38.059
can do many too many even maybe using a
 

00:32:38.059 --> 00:32:40.149
can do many too many even maybe using a
jump table so that's one area we are

00:32:40.149 --> 00:32:40.159
jump table so that's one area we are
 

00:32:40.159 --> 00:32:42.730
jump table so that's one area we are
trying to explore we also know that

00:32:42.730 --> 00:32:42.740
trying to explore we also know that
 

00:32:42.740 --> 00:32:45.850
trying to explore we also know that
migrations are not so great like when

00:32:45.850 --> 00:32:45.860
migrations are not so great like when
 

00:32:45.860 --> 00:32:47.409
migrations are not so great like when
you use room it creates the tables for

00:32:47.409 --> 00:32:47.419
you use room it creates the tables for
 

00:32:47.419 --> 00:32:48.759
you use room it creates the tables for
you but then when you migrate you also

00:32:48.759 --> 00:32:48.769
you but then when you migrate you also
 

00:32:48.769 --> 00:32:51.850
you but then when you migrate you also
have to call the create statement we

00:32:51.850 --> 00:32:51.860
have to call the create statement we
 

00:32:51.860 --> 00:32:53.110
have to call the create statement we
feel like most of the migration

00:32:53.110 --> 00:32:53.120
feel like most of the migration
 

00:32:53.120 --> 00:32:57.310
feel like most of the migration
operations can be done with some code

00:32:57.310 --> 00:32:57.320
operations can be done with some code
 

00:32:57.320 --> 00:32:59.710
operations can be done with some code
generation such as adding a new table

00:32:59.710 --> 00:32:59.720
generation such as adding a new table
 

00:32:59.720 --> 00:33:03.009
generation such as adding a new table
renaming a column things like that last

00:33:03.009 --> 00:33:03.019
renaming a column things like that last
 

00:33:03.019 --> 00:33:05.070
renaming a column things like that last
but not least as we take a look at

00:33:05.070 --> 00:33:05.080
but not least as we take a look at
 

00:33:05.080 --> 00:33:07.149
but not least as we take a look at
Kotlin and co-routines

00:33:07.149 --> 00:33:07.159
Kotlin and co-routines
 

00:33:07.159 --> 00:33:09.690
Kotlin and co-routines
we're keeping our eye on their API and

00:33:09.690 --> 00:33:09.700
we're keeping our eye on their API and
 

00:33:09.700 --> 00:33:11.950
we're keeping our eye on their API and
we'll be able to add support for

00:33:11.950 --> 00:33:11.960
we'll be able to add support for
 

00:33:11.960 --> 00:33:13.950
we'll be able to add support for
channels and flow

00:33:13.950 --> 00:33:13.960
channels and flow
 

00:33:13.960 --> 00:33:17.680
channels and flow
thanks so back to you who will be

00:33:17.680 --> 00:33:17.690
thanks so back to you who will be
 

00:33:17.690 --> 00:33:20.390
thanks so back to you who will be
talking to you about paging

00:33:20.390 --> 00:33:20.400
talking to you about paging
 

00:33:20.400 --> 00:33:25.270
talking to you about paging
[Applause]

00:33:25.270 --> 00:33:25.280
[Applause]
 

00:33:25.280 --> 00:33:27.760
[Applause]
thanks Danny okay let's talk about

00:33:27.760 --> 00:33:27.770
thanks Danny okay let's talk about
 

00:33:27.770 --> 00:33:30.610
thanks Danny okay let's talk about
paging so if you don't know paging

00:33:30.610 --> 00:33:30.620
paging so if you don't know paging
 

00:33:30.620 --> 00:33:34.000
paging so if you don't know paging
paging is our library to load Lively's

00:33:34.000 --> 00:33:34.010
paging is our library to load Lively's
 

00:33:34.010 --> 00:33:37.360
paging is our library to load Lively's
into a recycle of you lazily and it

00:33:37.360 --> 00:33:37.370
into a recycle of you lazily and it
 

00:33:37.370 --> 00:33:39.250
into a recycle of you lazily and it
works with multiple data source it works

00:33:39.250 --> 00:33:39.260
works with multiple data source it works
 

00:33:39.260 --> 00:33:41.980
works with multiple data source it works
with rumor I'm retrofit whatever kind of

00:33:41.980 --> 00:33:41.990
with rumor I'm retrofit whatever kind of
 

00:33:41.990 --> 00:33:44.820
with rumor I'm retrofit whatever kind of
place where you can pull the data from

00:33:44.820 --> 00:33:44.830
place where you can pull the data from
 

00:33:44.830 --> 00:33:47.620
place where you can pull the data from
so for the next version of paging our

00:33:47.620 --> 00:33:47.630
so for the next version of paging our
 

00:33:47.630 --> 00:33:51.159
so for the next version of paging our
focuses on networking and error handling

00:33:51.159 --> 00:33:51.169
focuses on networking and error handling
 

00:33:51.169 --> 00:33:53.110
focuses on networking and error handling
so we heard this loud and clear that is

00:33:53.110 --> 00:33:53.120
so we heard this loud and clear that is
 

00:33:53.120 --> 00:33:56.860
so we heard this loud and clear that is
kind of hard to channel your errors from

00:33:56.860 --> 00:33:56.870
kind of hard to channel your errors from
 

00:33:56.870 --> 00:33:59.620
kind of hard to channel your errors from
your network back into your UI so we are

00:33:59.620 --> 00:33:59.630
your network back into your UI so we are
 

00:33:59.630 --> 00:34:02.010
your network back into your UI so we are
working on a new pipeline to enable this

00:34:02.010 --> 00:34:02.020
working on a new pipeline to enable this
 

00:34:02.020 --> 00:34:04.630
working on a new pipeline to enable this
we also add support to change those

00:34:04.630 --> 00:34:04.640
we also add support to change those
 

00:34:04.640 --> 00:34:06.460
we also add support to change those
pages as you pull them so you can like

00:34:06.460 --> 00:34:06.470
pages as you pull them so you can like
 

00:34:06.470 --> 00:34:09.330
pages as you pull them so you can like
eject headers and footers or filter them

00:34:09.330 --> 00:34:09.340
eject headers and footers or filter them
 

00:34:09.340 --> 00:34:11.619
eject headers and footers or filter them
last but not least you're going to

00:34:11.619 --> 00:34:11.629
last but not least you're going to
 

00:34:11.629 --> 00:34:13.510
last but not least you're going to
improve the support for our it's Java

00:34:13.510 --> 00:34:13.520
improve the support for our it's Java
 

00:34:13.520 --> 00:34:15.730
improve the support for our it's Java
and add support for Cortines

00:34:15.730 --> 00:34:15.740
and add support for Cortines
 

00:34:15.740 --> 00:34:17.980
and add support for Cortines
so these are all in the next version of

00:34:17.980 --> 00:34:17.990
so these are all in the next version of
 

00:34:17.990 --> 00:34:21.490
so these are all in the next version of
paging we are about to start an early XX

00:34:21.490 --> 00:34:21.500
paging we are about to start an early XX
 

00:34:21.500 --> 00:34:23.409
paging we are about to start an early XX
program for it so we are doing an early

00:34:23.409 --> 00:34:23.419
program for it so we are doing an early
 

00:34:23.419 --> 00:34:25.089
program for it so we are doing an early
access program because we significantly

00:34:25.089 --> 00:34:25.099
access program because we significantly
 

00:34:25.099 --> 00:34:27.099
access program because we significantly
change the API so we want to get good

00:34:27.099 --> 00:34:27.109
change the API so we want to get good
 

00:34:27.109 --> 00:34:29.980
change the API so we want to get good
feedback and later in the summer you

00:34:29.980 --> 00:34:29.990
feedback and later in the summer you
 

00:34:29.990 --> 00:34:33.129
feedback and later in the summer you
should expect an alpha version all right

00:34:33.129 --> 00:34:33.139
should expect an alpha version all right
 

00:34:33.139 --> 00:34:36.579
should expect an alpha version all right
navigation navigation is a library we

00:34:36.579 --> 00:34:36.589
navigation navigation is a library we
 

00:34:36.589 --> 00:34:40.270
navigation navigation is a library we
release in previous IO it helps you with

00:34:40.270 --> 00:34:40.280
release in previous IO it helps you with
 

00:34:40.280 --> 00:34:42.849
release in previous IO it helps you with
your in-app UI floss so you can easily

00:34:42.849 --> 00:34:42.859
your in-app UI floss so you can easily
 

00:34:42.859 --> 00:34:45.970
your in-app UI floss so you can easily
show a graph control how the user should

00:34:45.970 --> 00:34:45.980
show a graph control how the user should
 

00:34:45.980 --> 00:34:49.180
show a graph control how the user should
navigate setup so a couple months ago

00:34:49.180 --> 00:34:49.190
navigate setup so a couple months ago
 

00:34:49.190 --> 00:34:52.389
navigate setup so a couple months ago
navigation became stable and we already

00:34:52.389 --> 00:34:52.399
navigation became stable and we already
 

00:34:52.399 --> 00:34:54.570
navigation became stable and we already
started working on the next version

00:34:54.570 --> 00:34:54.580
started working on the next version
 

00:34:54.580 --> 00:34:57.609
started working on the next version
which is already out and in this next

00:34:57.609 --> 00:34:57.619
which is already out and in this next
 

00:34:57.619 --> 00:35:00.280
which is already out and in this next
version we have a new feature for view

00:35:00.280 --> 00:35:00.290
version we have a new feature for view
 

00:35:00.290 --> 00:35:02.530
version we have a new feature for view
models where you can scope them to a

00:35:02.530 --> 00:35:02.540
models where you can scope them to a
 

00:35:02.540 --> 00:35:04.810
models where you can scope them to a
navigation graph this is amazing when

00:35:04.810 --> 00:35:04.820
navigation graph this is amazing when
 

00:35:04.820 --> 00:35:06.490
navigation graph this is amazing when
you have things like signup flows this

00:35:06.490 --> 00:35:06.500
you have things like signup flows this
 

00:35:06.500 --> 00:35:08.800
you have things like signup flows this
composed of multiple screens you can

00:35:08.800 --> 00:35:08.810
composed of multiple screens you can
 

00:35:08.810 --> 00:35:11.640
composed of multiple screens you can
just have one view model for that whole

00:35:11.640 --> 00:35:11.650
just have one view model for that whole
 

00:35:11.650 --> 00:35:18.740
just have one view model for that whole
scope

00:35:18.740 --> 00:35:18.750
 

00:35:18.750 --> 00:35:21.450
and other features you can not navigate

00:35:21.450 --> 00:35:21.460
and other features you can not navigate
 

00:35:21.460 --> 00:35:23.849
and other features you can not navigate
by a URI so you don't need to have the

00:35:23.849 --> 00:35:23.859
by a URI so you don't need to have the
 

00:35:23.859 --> 00:35:28.710
by a URI so you don't need to have the
IDS and you can finally use dialogues as

00:35:28.710 --> 00:35:28.720
IDS and you can finally use dialogues as
 

00:35:28.720 --> 00:35:36.329
IDS and you can finally use dialogues as
navigation destinations so these are all

00:35:36.329 --> 00:35:36.339
navigation destinations so these are all
 

00:35:36.339 --> 00:35:40.289
navigation destinations so these are all
in 2.1 but another big upcoming feature

00:35:40.289 --> 00:35:40.299
in 2.1 but another big upcoming feature
 

00:35:40.299 --> 00:35:42.630
in 2.1 but another big upcoming feature
for navigation is support for

00:35:42.630 --> 00:35:42.640
for navigation is support for
 

00:35:42.640 --> 00:35:45.450
for navigation is support for
dynamically delivered modules now it's

00:35:45.450 --> 00:35:45.460
dynamically delivered modules now it's
 

00:35:45.460 --> 00:35:47.009
dynamically delivered modules now it's
not ready yet this is gonna take a

00:35:47.009 --> 00:35:47.019
not ready yet this is gonna take a
 

00:35:47.019 --> 00:35:49.200
not ready yet this is gonna take a
couple of months to implement but it's

00:35:49.200 --> 00:35:49.210
couple of months to implement but it's
 

00:35:49.210 --> 00:35:51.329
couple of months to implement but it's
going to be available in navigation so

00:35:51.329 --> 00:35:51.339
going to be available in navigation so
 

00:35:51.339 --> 00:35:53.490
going to be available in navigation so
that you can just navigate as if

00:35:53.490 --> 00:35:53.500
that you can just navigate as if
 

00:35:53.500 --> 00:35:55.170
that you can just navigate as if
everything is inside the application

00:35:55.170 --> 00:35:55.180
everything is inside the application
 

00:35:55.180 --> 00:35:59.779
everything is inside the application
without thinking about dynamic features

00:35:59.779 --> 00:35:59.789
 

00:35:59.789 --> 00:36:03.210
so to learn more about all of these join

00:36:03.210 --> 00:36:03.220
so to learn more about all of these join
 

00:36:03.220 --> 00:36:05.730
so to learn more about all of these join
us later today at 1:30 in the jetpack

00:36:05.730 --> 00:36:05.740
us later today at 1:30 in the jetpack
 

00:36:05.740 --> 00:36:12.749
us later today at 1:30 in the jetpack
navigation Talk okay so if you're like

00:36:12.749 --> 00:36:12.759
navigation Talk okay so if you're like
 

00:36:12.759 --> 00:36:15.029
navigation Talk okay so if you're like
maybe leave to these things or trying to

00:36:15.029 --> 00:36:15.039
maybe leave to these things or trying to
 

00:36:15.039 --> 00:36:16.890
maybe leave to these things or trying to
get started with katli and try to get

00:36:16.890 --> 00:36:16.900
get started with katli and try to get
 

00:36:16.900 --> 00:36:19.289
get started with katli and try to get
started with architecture components we

00:36:19.289 --> 00:36:19.299
started with architecture components we
 

00:36:19.299 --> 00:36:21.690
started with architecture components we
just released a new course on Udacity

00:36:21.690 --> 00:36:21.700
just released a new course on Udacity
 

00:36:21.700 --> 00:36:23.990
just released a new course on Udacity
they say like a tank or session

00:36:23.990 --> 00:36:24.000
they say like a tank or session
 

00:36:24.000 --> 00:36:26.519
they say like a tank or session
completely online that teaches you how

00:36:26.519 --> 00:36:26.529
completely online that teaches you how
 

00:36:26.529 --> 00:36:28.529
completely online that teaches you how
to write a modern Android application

00:36:28.529 --> 00:36:28.539
to write a modern Android application
 

00:36:28.539 --> 00:36:31.680
to write a modern Android application
using Coplin and architecture components

00:36:31.680 --> 00:36:31.690
using Coplin and architecture components
 

00:36:31.690 --> 00:36:34.380
using Coplin and architecture components
this is a great resource to get started

00:36:34.380 --> 00:36:34.390
this is a great resource to get started
 

00:36:34.390 --> 00:36:37.019
this is a great resource to get started
with these technologies you can always

00:36:37.019 --> 00:36:37.029
with these technologies you can always
 

00:36:37.029 --> 00:36:39.180
with these technologies you can always
find detailed documentation on our

00:36:39.180 --> 00:36:39.190
find detailed documentation on our
 

00:36:39.190 --> 00:36:42.630
find detailed documentation on our
website and if you want to be involved

00:36:42.630 --> 00:36:42.640
website and if you want to be involved
 

00:36:42.640 --> 00:36:44.490
website and if you want to be involved
further in our process you can go to

00:36:44.490 --> 00:36:44.500
further in our process you can go to
 

00:36:44.500 --> 00:36:46.589
further in our process you can go to
this URL and see how you can participate

00:36:46.589 --> 00:36:46.599
this URL and see how you can participate
 

00:36:46.599 --> 00:36:51.980
this URL and see how you can participate
in our development flow thank you

00:36:51.980 --> 00:36:51.990
in our development flow thank you
 

00:36:51.990 --> 00:37:09.880
in our development flow thank you
[Music]

00:37:09.880 --> 00:37:09.890
[Music]
 

00:37:09.890 --> 00:37:10.350
[Music]
you

00:37:10.350 --> 00:37:10.360
you
 

00:37:10.360 --> 00:37:13.360
you
[Music]

