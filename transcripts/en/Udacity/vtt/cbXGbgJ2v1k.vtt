WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.530
Unit testing is something we're going to
spend a lot of time in this course

00:00:03.530 --> 00:00:05.140
looking at.
And unit testing means

00:00:05.140 --> 00:00:07.800
looking at some
small software module at a time

00:00:07.800 --> 00:00:11.220
and testing it in an isolated fashion.
And so this is what we were doing

00:00:11.220 --> 00:00:13.790
with the bounded buffer example
from the last unit and

00:00:13.790 --> 00:00:17.460
with the square root function that we
were talking about earlier in this unit.

00:00:17.460 --> 00:00:21.000
The main thing that distinguishes
unit testing from other kinds of testing

00:00:21.000 --> 00:00:25.000
is that we're testing a smaller
amount of software.

00:00:25.000 --> 00:00:27.060
Often the person
performing the unit testing

00:00:27.060 --> 00:00:29.300
is the same person
who implemented the module,

00:00:29.300 --> 00:00:32.000
and in that case we may well
be doing white box testing.

00:00:32.200 --> 00:00:35.000
But unit testing can also be
black box testing.

00:00:35.000 --> 00:00:38.070
The goal of unit testing is to find
defects in the internal logic

00:00:38.070 --> 00:00:41.000
of the software under test
as early as possible,

00:00:41.000 --> 00:00:43.780
in order to create
more robust software modules

00:00:43.780 --> 00:00:45.830
that we can compose later
with other modules

00:00:45.830 --> 00:00:48.000
and end up with a system
that actually works.

00:00:48.000 --> 00:00:51.080
Besides the size of the software
under test, the other thing that

00:00:51.080 --> 00:00:54.000
distinguishes unit testing from other
kinds of testing is that

00:00:54.000 --> 00:00:57.000
generally, at this level,
we have no hypothesis

00:00:57.000 --> 00:01:00.000
about the patterns of usage
of the software under test.

00:01:00.000 --> 00:01:03.000
In other words, we're going to try
to test the unit with inputs

00:01:03.000 --> 00:01:05.810
from all different parts of its domain.
Remember,

00:01:05.810 --> 00:01:10.000
the domain is the set of possible inputs
for this piece of software.

00:01:10.000 --> 00:01:12.000
Unit testing is also a kind of testing

00:01:12.000 --> 00:01:14.190
that enjoys a great deal of
good tool support,

00:01:14.190 --> 00:01:17.960
and... so Python, in fact, has a number of
frameworks for unit testing.

00:01:17.960 --> 00:01:21.220
It also has a number of frameworks
for what are called mock objects,

00:01:21.220 --> 00:01:25.000
and what mock objects are is fake objects

00:01:25.000 --> 00:01:28.430
that we can bolt under the software
under test that mock up the behavior

00:01:28.430 --> 00:01:31.000
of the larger software system
in which this unit lives.

00:01:31.450 --> 00:01:34.450
And what we'll do is,
we'll include links to some of these tools

00:01:34.450 --> 00:01:36.545
in the supplemental material
for this course.

