WEBVTT
Kind: captions
Language: en

00:00:00.637 --> 00:00:02.720
HUSAIN BENGALI: Let's talk
about reducing the load

00:00:02.720 --> 00:00:04.810
time of your website
and mobile apps

00:00:04.810 --> 00:00:06.870
through better
image compression.

00:00:06.870 --> 00:00:08.510
WebP is an image
format that delivers

00:00:08.510 --> 00:00:12.010
significantly smaller file sizes
than traditional image formats.

00:00:12.010 --> 00:00:13.987
I'm Husain, the product
manager for WebP,

00:00:13.987 --> 00:00:16.070
and I'm here to tell you
about the format and some

00:00:16.070 --> 00:00:18.430
of the recent improvements
we've delivered.

00:00:18.430 --> 00:00:20.660
Over the past year, the
biggest feature we added

00:00:20.660 --> 00:00:23.590
was support for animated images.

00:00:23.590 --> 00:00:25.900
Now you can create
high-quality animations

00:00:25.900 --> 00:00:28.330
with rich colors
and transparencies,

00:00:28.330 --> 00:00:31.620
all while getting much
better compression than GIF.

00:00:31.620 --> 00:00:33.460
With this addition,
WebP now supports

00:00:33.460 --> 00:00:36.220
the use cases of all major
traditional formats--

00:00:36.220 --> 00:00:39.730
JPEG, PNG, and GIF.

00:00:39.730 --> 00:00:43.500
WebP is already in use across
a number of major websites.

00:00:43.500 --> 00:00:47.010
If you use Chrome or Opera to
access YouTube or Google Play,

00:00:47.010 --> 00:00:50.360
you've already been experiencing
the benefits of WebP.

00:00:50.360 --> 00:00:52.760
When Google Play added
support for WebP,

00:00:52.760 --> 00:00:54.890
the footprint of image
file sizes transferred

00:00:54.890 --> 00:00:57.580
to Chrome and Opera users
dropped by a whole 35%.

00:01:00.150 --> 00:01:02.810
On YouTube, an increasing
number of video thumbnails

00:01:02.810 --> 00:01:06.440
are being served in WebP format,
leading to 10% faster page

00:01:06.440 --> 00:01:07.350
loads.

00:01:07.350 --> 00:01:11.040
With over one billion users
visiting YouTube every month,

00:01:11.040 --> 00:01:14.130
the aggregate time saved
by faster loading images

00:01:14.130 --> 00:01:17.620
will be about 140,000
hours each day

00:01:17.620 --> 00:01:20.170
once this rollout is complete.

00:01:20.170 --> 00:01:23.460
So you might be wondering, how
can I get started with WebP.

00:01:23.460 --> 00:01:25.535
The good news is
getting WebP integrated

00:01:25.535 --> 00:01:28.300
into your app or
website is easy.

00:01:28.300 --> 00:01:30.000
You can start by
downloading the WebP

00:01:30.000 --> 00:01:32.550
library from the URL shown here.

00:01:32.550 --> 00:01:34.540
The included cwebp
tool will allow

00:01:34.540 --> 00:01:36.810
you to convert your
images to the format.

00:01:36.810 --> 00:01:39.510
Note that since not all
browsers support WebP yet,

00:01:39.510 --> 00:01:42.100
you will need to fall back
to the original image format

00:01:42.100 --> 00:01:45.420
when serving to
incompatible browsers.

00:01:45.420 --> 00:01:49.390
WebP is so powerful that many
major CDNs have implemented it

00:01:49.390 --> 00:01:50.600
on their side.

00:01:50.600 --> 00:01:54.190
That is, the CDN will be able
to transcode your images to WebP

00:01:54.190 --> 00:01:57.212
and serve them to compatible
clients on your behalf.

00:01:57.212 --> 00:01:59.420
So check with your provider,
because they may already

00:01:59.420 --> 00:02:02.520
be able to do much of the
heavy lifting for you.

00:02:02.520 --> 00:02:05.580
If you don't use a CDN,
consider the paid speed service

00:02:05.580 --> 00:02:07.940
which, amongst many
other optimizations,

00:02:07.940 --> 00:02:10.419
will automatically
transcode and serve

00:02:10.419 --> 00:02:13.950
WebP images to
compatible browsers.

00:02:13.950 --> 00:02:15.910
If you're the developer
of a mobile app that

00:02:15.910 --> 00:02:18.290
has significant image
content, you too

00:02:18.290 --> 00:02:21.120
can take advantage of
the benefits of WebP.

00:02:21.120 --> 00:02:24.980
Android versions 4.0 and
above natively support lossy

00:02:24.980 --> 00:02:28.430
WebP D code, and full support
across all Android versions

00:02:28.430 --> 00:02:32.500
can be assured by packaging the
WebP D code libs into your app.

00:02:32.500 --> 00:02:36.050
Similarly on iOS, just
package the D code libraries

00:02:36.050 --> 00:02:37.102
as part of your app.

00:02:37.102 --> 00:02:38.935
And you'll be able to
serve the same content

00:02:38.935 --> 00:02:41.790
to apps on both platforms.

00:02:41.790 --> 00:02:44.810
Major native apps such as
Google+ and Facebook for both

00:02:44.810 --> 00:02:49.110
Android and iOS already use
WebP for faster-loading images

00:02:49.110 --> 00:02:51.860
and lower bandwidth consumption.

00:02:51.860 --> 00:02:55.560
Google+ alone saves over 50
terabytes of bandwidth every

00:02:55.560 --> 00:02:59.970
day as a result of serving
WebP to its mobile apps.

00:02:59.970 --> 00:03:02.850
To learn more about WebP,
visit our developers site.

00:03:02.850 --> 00:03:06.710
Faster-loading images might
be less work than you think.

