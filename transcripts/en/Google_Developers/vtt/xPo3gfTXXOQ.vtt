WEBVTT
Kind: captions
Language: en

00:00:01.284 --> 00:00:02.700
ANKUR KOTWAL: Have
you ever wanted

00:00:02.700 --> 00:00:04.840
to share a location
in your apps,

00:00:04.840 --> 00:00:09.480
only to find that you're
dealing with mysterious numbers?

00:00:09.480 --> 00:00:11.200
Users think of
their location based

00:00:11.200 --> 00:00:14.430
on the place they're at, not
latitudes and longitudes.

00:00:14.430 --> 00:00:16.850
The Places API for
Android solves this

00:00:16.850 --> 00:00:18.820
by enabling you to
present locations

00:00:18.820 --> 00:00:20.990
as meaningful entities.

00:00:20.990 --> 00:00:23.900
Google's comprehensive and
trusted places database

00:00:23.900 --> 00:00:27.090
contains businesses, pet stores,
shopping malls, embassies,

00:00:27.090 --> 00:00:30.880
and of course, my
favorite, theme parks.

00:00:30.880 --> 00:00:34.930
Google has more than 100 million
places from all over the world.

00:00:34.930 --> 00:00:38.600
It's the most comprehensive
list of places you'll find.

00:00:38.600 --> 00:00:40.420
I'm Ankur Kotwal, and
I'm going to show you

00:00:40.420 --> 00:00:43.590
how to make location in
your app more personable.

00:00:43.590 --> 00:00:45.490
This can take the
previous experience

00:00:45.490 --> 00:00:48.890
and make it into
something like this.

00:00:48.890 --> 00:00:50.730
The Places API
has been available

00:00:50.730 --> 00:00:52.790
as a Google web
service for some time,

00:00:52.790 --> 00:00:55.990
but it is now available
as a native Android API

00:00:55.990 --> 00:00:58.050
through Google
Play Services 7.0,

00:00:58.050 --> 00:01:00.870
meaning you can use it in
your Android apps right away,

00:01:00.870 --> 00:01:04.510
supporting users all the
way back to Android 2.3

00:01:04.510 --> 00:01:05.850
Gingerbread.

00:01:05.850 --> 00:01:08.990
Being a native Android API
results in a more accurate list

00:01:08.990 --> 00:01:12.300
of returned places, since the
user's current location can

00:01:12.300 --> 00:01:14.630
be more reliably determined.

00:01:14.630 --> 00:01:17.410
Now, perhaps the most
common question users

00:01:17.410 --> 00:01:21.690
want to answer is, where am I?

00:01:21.690 --> 00:01:25.200
The Places API makes it easy
for you to give them that answer

00:01:25.200 --> 00:01:26.780
through the PlacePicker.

00:01:26.780 --> 00:01:29.180
This is a ready-to-use
widget that displays

00:01:29.180 --> 00:01:31.070
a list of nearby places.

00:01:31.070 --> 00:01:34.350
And using it is as simple as
calling the PlacePicker to be

00:01:34.350 --> 00:01:35.700
displayed.

00:01:35.700 --> 00:01:37.960
The result is a
Place object, which

00:01:37.960 --> 00:01:40.550
comes with really useful
details such as addresses,

00:01:40.550 --> 00:01:42.650
phone numbers, and URLs.

00:01:42.650 --> 00:01:46.410
Each Place has a unique place
ID, and you can cache this ID,

00:01:46.410 --> 00:01:49.620
so that if you ever need to
retrieve that same place again,

00:01:49.620 --> 00:01:54.120
you can do so easily using
the getPlaceByID() method.

00:01:54.120 --> 00:01:56.190
If you don't want to
use the PlacePicker,

00:01:56.190 --> 00:01:58.940
nearby places can be
programmatically retrieved

00:01:58.940 --> 00:02:01.210
through the
getCurrentPlace() method.

00:02:01.210 --> 00:02:03.340
Now, this API returns
a list of places

00:02:03.340 --> 00:02:05.900
so that you can present them
in your own custom picker,

00:02:05.900 --> 00:02:07.850
if you choose.

00:02:07.850 --> 00:02:11.460
If you're like me, you don't
enjoy typing long place names

00:02:11.460 --> 00:02:13.000
on mobile keyboards.

00:02:13.000 --> 00:02:16.550
Chances are that your
users feel the same way.

00:02:16.550 --> 00:02:20.170
The Autocomplete API delivers
suggested place names

00:02:20.170 --> 00:02:23.990
and addresses, based on
what's been typed so far.

00:02:23.990 --> 00:02:27.700
If however the user is not able
to find their place in the list

00:02:27.700 --> 00:02:31.690
of results, you can ask
your users to add new places

00:02:31.690 --> 00:02:36.190
and feed this data to Google
through the addPlace() method.

00:02:36.190 --> 00:02:38.270
Now when adding a new
place, you can then

00:02:38.270 --> 00:02:42.390
report that the user is at
that place via a PlaceReport.

00:02:42.390 --> 00:02:45.800
And this captures signals
to identify that place

00:02:45.800 --> 00:02:47.800
automatically in the future.

00:02:47.800 --> 00:02:51.150
Newly added places will be
available to users in your app

00:02:51.150 --> 00:02:54.510
and could ultimately be added
to Google's global places

00:02:54.510 --> 00:02:55.910
database.

00:02:55.910 --> 00:02:58.350
So when it comes to
location, the Places API

00:02:58.350 --> 00:03:00.880
makes it really easy
to free your users

00:03:00.880 --> 00:03:03.780
from a world of long,
mysterious numbers

00:03:03.780 --> 00:03:06.970
by bringing real
entities to your apps.

00:03:06.970 --> 00:03:09.840
The sample code at this
link contains everything

00:03:09.840 --> 00:03:12.670
you need to get started
in dramatically improving

00:03:12.670 --> 00:03:15.280
your users' location
experiences.

00:03:15.280 --> 00:03:19.140
I look forward to seeing
what you build, using Places.

