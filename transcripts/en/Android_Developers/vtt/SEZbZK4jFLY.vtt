WEBVTT
Kind: captions
Language: en

00:00:00.540 --> 00:00:02.420
Hi, my name's
Justin Koh, and I'm

00:00:02.420 --> 00:00:04.650
an engineer on the
Android Wear team.

00:00:04.650 --> 00:00:06.600
Let's look at how
your app can let users

00:00:06.600 --> 00:00:09.170
provide voice input to
notification actions

00:00:09.170 --> 00:00:11.070
with Android Wear.

00:00:11.070 --> 00:00:12.670
Before we jump in,
make sure you've

00:00:12.670 --> 00:00:15.000
checked out the previous
video on the basics

00:00:15.000 --> 00:00:18.100
for developing for Android
Wear, including how to optimize

00:00:18.100 --> 00:00:20.010
your notifications
for the wrist.

00:00:20.010 --> 00:00:22.900
And remember to check
out developer.android.com

00:00:22.900 --> 00:00:24.900
where you can sign up for
the developer preview,

00:00:24.900 --> 00:00:27.400
and browse the documentation.

00:00:27.400 --> 00:00:29.220
So imagine we've built
a messaging app that

00:00:29.220 --> 00:00:32.330
has a reply action in new
message notifications.

00:00:32.330 --> 00:00:34.440
Something like this.

00:00:34.440 --> 00:00:37.122
When a user presses reply
on a phone or tablet,

00:00:37.122 --> 00:00:39.580
you would take them to a screen
that would let them compose

00:00:39.580 --> 00:00:42.260
and send a reply, like this.

00:00:42.260 --> 00:00:45.030
If we don't optimize this
notification for the wrist,

00:00:45.030 --> 00:00:47.700
pressing the reply action
on an Android Wear device

00:00:47.700 --> 00:00:50.080
would simply open the
Reply screen on your phone.

00:00:50.080 --> 00:00:51.650
But we can do better.

00:00:51.650 --> 00:00:55.000
With the remote input feature
of the Android Wear API,

00:00:55.000 --> 00:00:58.920
we can hint Android Wear
devices that our app can accept

00:00:58.920 --> 00:01:03.140
free form voice input in
response to the notification.

00:01:03.140 --> 00:01:04.750
So here's what that looks like.

00:01:04.750 --> 00:01:06.760
Let's show the
notification again,

00:01:06.760 --> 00:01:09.560
and reply from our
Android Wear device.

00:01:09.560 --> 00:01:11.390
The user gets
presented with a voice

00:01:11.390 --> 00:01:14.310
prompt along with a
custom hint, in this case,

00:01:14.310 --> 00:01:15.880
reply to Bugdroid.

00:01:15.880 --> 00:01:18.880
They can then speak a reply
like, I'll be right there,

00:01:18.880 --> 00:01:22.360
and after confirming, the
reply text is sent to the app.

00:01:22.360 --> 00:01:26.130
The key here is that the app
can skip the phone UI entirely,

00:01:26.130 --> 00:01:30.040
simply sending off the reply
text in the background.

00:01:30.040 --> 00:01:32.800
Let's look at the code to
build such a notification.

00:01:32.800 --> 00:01:35.990
First, we use the standard
NotificationCompat Builder

00:01:35.990 --> 00:01:37.770
to create the notification.

00:01:37.770 --> 00:01:41.190
We'll omit the reply action for
now, since we'll add it later.

00:01:41.190 --> 00:01:44.440
Next, we'll build the reply
actions, PendingIntent.

00:01:44.440 --> 00:01:47.350
This intent will be started
when the user presses the Reply

00:01:47.350 --> 00:01:48.890
button on the phone.

00:01:48.890 --> 00:01:51.350
Note that the intent
should be for an activity,

00:01:51.350 --> 00:01:53.510
because otherwise
pressing the action won't

00:01:53.510 --> 00:01:55.670
close the notification shade.

00:01:55.670 --> 00:01:59.150
Finally, we use the remote
input builder and action builder

00:01:59.150 --> 00:02:01.130
classes to construct
an action that

00:02:01.130 --> 00:02:04.320
will be capable of
receiving voice input.

00:02:04.320 --> 00:02:08.150
Extra reply text tells Android
Wear the name of an intent

00:02:08.150 --> 00:02:10.639
extra to add to the
reply intent when

00:02:10.639 --> 00:02:13.110
a voice response was provided.

00:02:13.110 --> 00:02:16.670
And then we simply need to wrap
our NotificationCompat builder

00:02:16.670 --> 00:02:18.550
in a wearable
notification builder.

00:02:18.550 --> 00:02:20.100
That's it!

00:02:20.100 --> 00:02:22.390
To handle voice replies
in your reply activity,

00:02:22.390 --> 00:02:24.890
simply check if the extra
you specified earlier

00:02:24.890 --> 00:02:26.220
has any content.

00:02:26.220 --> 00:02:28.990
If it does, you know that the
user responded with their voice

00:02:28.990 --> 00:02:31.300
from their Android Wear
device and you can simply

00:02:31.300 --> 00:02:34.190
send the response and finish
the activity immediately.

00:02:34.190 --> 00:02:37.280
Otherwise, show that activity
as you normally would.

00:02:37.280 --> 00:02:38.750
And that's all there is to it.

00:02:38.750 --> 00:02:41.170
The remote input feature
of the Android Wear API

00:02:41.170 --> 00:02:43.400
can help you simplify
your user's lives,

00:02:43.400 --> 00:02:46.330
by providing a seamless, wrist
optimized user experience

00:02:46.330 --> 00:02:48.390
for responding to notifications.

00:02:48.390 --> 00:02:50.790
There are even more APIs for
customizing notifications

00:02:50.790 --> 00:02:52.124
for Android Wear devices.

00:02:52.124 --> 00:02:54.290
So be sure to check out the
documentation and sample

00:02:54.290 --> 00:02:58.220
code in the developer preview
on developer.android.com.

00:02:58.220 --> 00:03:00.640
Thanks and happy coding.

