WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.530
DAN HEBERDEN: Hello.

00:00:02.530 --> 00:00:05.700
As you've been looking at for 15
minutes, I'm Dan Heberden,

00:00:05.700 --> 00:00:07.996
so enough about that.

00:00:07.996 --> 00:00:09.246
Get my slides up here--

00:00:11.750 --> 00:00:18.930
So this is Bower, at least the
very basic beginnings of what

00:00:18.930 --> 00:00:21.390
you would start to use,
where you just run

00:00:21.390 --> 00:00:23.790
Bower install jquery.

00:00:23.790 --> 00:00:28.180
And you see that it went and got
jQuery, installed it for

00:00:28.180 --> 00:00:30.910
us in the current folder.

00:00:30.910 --> 00:00:33.080
What we didn't have to do
is specify a version.

00:00:33.080 --> 00:00:36.710
We didn't have to find out what
the latest version is or

00:00:36.710 --> 00:00:38.930
whatever one we wanted.

00:00:38.930 --> 00:00:42.540
And what does getting jQuery
look like for you?

00:00:42.540 --> 00:00:45.105
Or I mean, really any library,
but jQuery's a good example.

00:00:52.600 --> 00:00:55.760
Does that mean going
to jquery.com

00:00:55.760 --> 00:00:57.496
and downloading that?

00:00:57.496 --> 00:01:01.370
Does mean going to the GitHub
repo and looking for maybe a

00:01:01.370 --> 00:01:02.650
built copy?

00:01:02.650 --> 00:01:06.330
Do you have to clone the repo
and then build it with their

00:01:06.330 --> 00:01:07.220
build tools?

00:01:07.220 --> 00:01:11.440
Do you memorize URL and use Wget
or curl to pull it down?

00:01:14.090 --> 00:01:20.920
Bower helps because it makes
installing tools much easier,

00:01:20.920 --> 00:01:23.920
and it uses a manifest file to
declare what it is that you

00:01:23.920 --> 00:01:29.980
actually want to download or
to use in your project.

00:01:29.980 --> 00:01:32.310
And all those downloads are
centralized into a common

00:01:32.310 --> 00:01:33.880
place, which is very helpful.

00:01:33.880 --> 00:01:36.683
And it by itself resolves
dependencies.

00:01:42.900 --> 00:01:48.190
Before I get into all the pieces
of what Bower is, I'd

00:01:48.190 --> 00:01:51.310
like to show you what it looks
like with a canon of other

00:01:51.310 --> 00:01:53.040
tools, a full suite.

00:01:53.040 --> 00:01:56.000
And so, Yeoman and Grunt and
Requirejs are great tools.

00:01:56.000 --> 00:01:59.020
If you haven't gotten a chance
to look at them or learn about

00:01:59.020 --> 00:02:00.940
them, I really recommend
diving into them.

00:02:00.940 --> 00:02:06.560
But we're just going to run a
quick example to just show off

00:02:06.560 --> 00:02:09.280
some stuff that Bower can do.

00:02:09.280 --> 00:02:11.630
First we would do
is get Yeoman.

00:02:11.630 --> 00:02:16.630
Yeoman's just a scaffolding
tool that lets you define

00:02:16.630 --> 00:02:18.510
some-- there's a couple
generators out there, there's

00:02:18.510 --> 00:02:21.240
like 16 that it comes with, and
then a bunch more-- that

00:02:21.240 --> 00:02:23.770
help you scaffold typical
applications.

00:02:23.770 --> 00:02:25.760
And the typical application
we want to scaffold is a

00:02:25.760 --> 00:02:30.920
requirejs app, so we can just
get generator-requirejs.

00:02:30.920 --> 00:02:32.970
You can do this yourself, but
it's kind of nice to get

00:02:32.970 --> 00:02:38.340
everything all ready to
go without having

00:02:38.340 --> 00:02:38.940
to do a lot of work.

00:02:38.940 --> 00:02:41.210
I'll show what that
looks like.

00:02:41.210 --> 00:02:42.460
Just make a quick--

00:02:47.930 --> 00:02:51.190
So assuming that I've gotten
those two things, I can just

00:02:51.190 --> 00:02:56.460
run Yeoman with requirejs, and
it'll do a couple things.

00:02:56.460 --> 00:02:58.860
It'll ask me some questions,
what I want

00:02:58.860 --> 00:02:59.690
the app to be called.

00:02:59.690 --> 00:03:01.180
We're just going to make a quick
weather app, so we'll

00:03:01.180 --> 00:03:05.780
say my-weather-app, and
a default description.

00:03:05.780 --> 00:03:07.740
I'm not going to hit Enter now
just because that's going to

00:03:07.740 --> 00:03:10.170
go through and download
everything from MPM, and

00:03:10.170 --> 00:03:12.820
everything from Bower, and
everything that we need, and I

00:03:12.820 --> 00:03:15.310
don't really trust the Wi-Fi.

00:03:15.310 --> 00:03:24.120
So I'm going to just change to
the baked cake in the oven,

00:03:24.120 --> 00:03:25.100
and we can see actually--

00:03:25.100 --> 00:03:26.870
I'll just do this--

00:03:26.870 --> 00:03:29.240
that it already gave us a lot
of stuff just out the gate.

00:03:29.240 --> 00:03:33.010
It gave us an app directory
with requirejs config file

00:03:33.010 --> 00:03:35.960
that calls the main file here.

00:03:39.500 --> 00:03:41.140
It just has jquery in
there, but we can

00:03:41.140 --> 00:03:43.110
put anything in there.

00:03:43.110 --> 00:03:44.430
But it also did some
other stuff.

00:03:44.430 --> 00:03:48.230
It set us up with Grunt, so
we have concatenation and

00:03:48.230 --> 00:03:51.040
minification, jshinting
and that kind of

00:03:51.040 --> 00:03:52.410
stuff already set up.

00:03:52.410 --> 00:03:56.730
It made a package.json, and it
did put our name in there for

00:03:56.730 --> 00:03:58.050
us, which is really
convenient.

00:03:58.050 --> 00:04:00.540
So just some nice convenience
measures.

00:04:00.540 --> 00:04:04.290
Let's go ahead and actually
write some stuff.

00:04:04.290 --> 00:04:09.860
Now, for making a weather app,
probably someone has done the

00:04:09.860 --> 00:04:11.650
work of getting weather.

00:04:11.650 --> 00:04:13.640
I'm sure actually thousands of
people have probably done that

00:04:13.640 --> 00:04:15.540
all by theirself without
even looking to see if

00:04:15.540 --> 00:04:17.070
anyone has done that.

00:04:17.070 --> 00:04:22.801
So let's just use Bower, and
we'll search for weather.

00:04:22.801 --> 00:04:26.102
Let me make that a little
bit bigger.

00:04:26.102 --> 00:04:27.910
So it looks like
Dan Heberden--

00:04:27.910 --> 00:04:29.580
I don't know who that guy is--

00:04:29.580 --> 00:04:32.162
but he made a weather thing, and
I'm going to trust it for

00:04:32.162 --> 00:04:34.510
the sake of this presentation.

00:04:34.510 --> 00:04:46.700
So I can just use Bower to
install weather, and I'll save

00:04:46.700 --> 00:04:48.220
that to my configuration file.

00:04:48.220 --> 00:04:51.340
If you've used MPM, that's
the same kind of thing.

00:04:51.340 --> 00:04:53.240
We'll talk more about what
these pieces mean.

00:04:53.240 --> 00:04:58.770
But you see here that it went
and it got the weather

00:04:58.770 --> 00:05:01.740
component, but then it also got
the stuff that component

00:05:01.740 --> 00:05:04.180
needs, which is jQuery.

00:05:04.180 --> 00:05:09.500
And so now, if I go back to my
application here, I not only

00:05:09.500 --> 00:05:12.650
have the things that were part
of the original application,

00:05:12.650 --> 00:05:17.420
requirejs and jquery and qunit,
but I also have my

00:05:17.420 --> 00:05:19.420
weather module.

00:05:19.420 --> 00:05:20.510
So let's go ahead
and use that.

00:05:20.510 --> 00:05:23.000
Since this is an AMD module,
I'll just hop over into my

00:05:23.000 --> 00:05:32.460
main file here, and I can just
reference it directly.

00:05:35.612 --> 00:05:37.990
Let me hop back to my slides.

00:05:42.430 --> 00:05:43.897
That is not the right slide.

00:05:53.450 --> 00:05:54.700
There we go, OK.

00:06:02.540 --> 00:06:08.700
So in our app, we would put us
in some HTML for our actual

00:06:08.700 --> 00:06:11.920
weather information, just the
temperature and status, that

00:06:11.920 --> 00:06:13.920
kind of stuff.

00:06:13.920 --> 00:06:17.120
And then inside of that, we can
use that whether component

00:06:17.120 --> 00:06:17.780
that we installed.

00:06:17.780 --> 00:06:22.770
So we'll just use require to get
that and typical AMD stuff

00:06:22.770 --> 00:06:26.900
here, so nothing too crazy,
and make a function that

00:06:26.900 --> 00:06:30.520
actually uses the position
object that the weather API

00:06:30.520 --> 00:06:33.090
returns with temperature,
and condition, and

00:06:33.090 --> 00:06:34.340
that kind of stuff.

00:06:37.340 --> 00:06:39.160
And then actually get our
current position.

00:06:39.160 --> 00:06:43.180
So we'll use geolocation, get
our current position, and pump

00:06:43.180 --> 00:06:46.835
that latitude and longitude
into our weather module.

00:06:50.750 --> 00:06:54.910
I have the finished product
here, and hopefully this will

00:06:54.910 --> 00:06:56.160
work with the connection.

00:07:00.990 --> 00:07:04.440
So I have a connect server
actually part of this whole

00:07:04.440 --> 00:07:06.460
suite here, which is
nice, via Grunt.

00:07:06.460 --> 00:07:09.145
So I can start a web server
on local hosts.

00:07:19.480 --> 00:07:25.420
You see here that that worked
pretty well out of the box,

00:07:25.420 --> 00:07:30.410
and was able to make a network
connection, do all that stuff.

00:07:30.410 --> 00:07:33.460
But we didn't have to worry
about finding this module and

00:07:33.460 --> 00:07:34.890
putting it in.

00:07:34.890 --> 00:07:36.703
We were just able to take
advantage of it.

00:07:40.580 --> 00:07:42.150
Let's look at what actually
happened here.

00:07:42.150 --> 00:07:45.440
This is the bower.json
that was generated

00:07:45.440 --> 00:07:46.500
from what we did.

00:07:46.500 --> 00:07:49.630
And we have a requirejs and
jQuery dependencies that came

00:07:49.630 --> 00:07:50.740
out of the box.

00:07:50.740 --> 00:07:52.750
But when we installed weather,
it also added

00:07:52.750 --> 00:07:54.780
that version here.

00:07:54.780 --> 00:07:57.080
The tilde means it's going to
keep the minor version.

00:07:57.080 --> 00:08:00.120
So if that goes to
0.2.4, it'll go

00:08:00.120 --> 00:08:03.850
ahead and install that.

00:08:03.850 --> 00:08:06.820
We looked at a quick demo of
what that can look like using

00:08:06.820 --> 00:08:08.530
that with other tools.

00:08:08.530 --> 00:08:11.530
I do want to show you one really
neat thing, since I

00:08:11.530 --> 00:08:16.750
have this up, and that
is using all

00:08:16.750 --> 00:08:18.830
of these tools together.

00:08:18.830 --> 00:08:21.950
And this is mostly just a plug
for Grunt and how well it does

00:08:21.950 --> 00:08:23.050
all of this stuff.

00:08:23.050 --> 00:08:26.030
I just ran every task that
set up with this.

00:08:26.030 --> 00:08:30.860
So I'm hinting, I'm running my
test suite, I'm getting all of

00:08:30.860 --> 00:08:33.929
the dependencies via requirejs
and putting them all together,

00:08:33.929 --> 00:08:35.570
and now I'm concatenating and

00:08:35.570 --> 00:08:37.450
minifying all of that together.

00:08:37.450 --> 00:08:44.470
So my original, uncompressed
file of 326K is now 23K.

00:08:44.470 --> 00:08:46.950
That's pretty cool.

00:08:46.950 --> 00:08:49.590
So if you aren't doing this or
haven't looked in these kind

00:08:49.590 --> 00:08:51.610
of tools, I highly suggest
doing that.

00:08:51.610 --> 00:08:54.880
One HTTP request just to get
all of the site running,

00:08:54.880 --> 00:08:56.130
that's pretty neat.

00:08:59.130 --> 00:09:00.950
Why a client-side
package manager?

00:09:04.430 --> 00:09:09.590
Well, using client-side
tools should be easy.

00:09:09.590 --> 00:09:12.400
I mean, sure, going the
hotscripts.com and finding

00:09:12.400 --> 00:09:17.430
some script was really
fun 10 years ago.

00:09:17.430 --> 00:09:19.220
There's a problem with open
and public code being

00:09:19.220 --> 00:09:21.590
committed into repositories.

00:09:21.590 --> 00:09:23.510
And I don't know about you,
but I don't really like

00:09:23.510 --> 00:09:26.070
waiting for GitHub to
download gargantuous

00:09:26.070 --> 00:09:28.210
repositories all the time.

00:09:28.210 --> 00:09:32.080
But what happens is older and
buggy versions of libraries or

00:09:32.080 --> 00:09:34.920
frameworks or plug-ins get stuck
in projects, and it's

00:09:34.920 --> 00:09:38.280
harder to work around getting
a new one in there.

00:09:38.280 --> 00:09:41.860
And then there's a hesitancy
to use an existing solution

00:09:41.860 --> 00:09:43.330
because it's kind of
a pain to go out

00:09:43.330 --> 00:09:45.630
and find what's available.

00:09:45.630 --> 00:09:48.460
And when you do you find out
that there's a great plug-in

00:09:48.460 --> 00:09:51.750
or piece, you have to go find
out what it needs to run, and

00:09:51.750 --> 00:09:53.000
that can be a big hassle.

00:09:55.360 --> 00:09:58.350
But Bower, of course, makes it
awesome, hence this talk.

00:09:58.350 --> 00:09:59.390
So let's look into Bower.

00:09:59.390 --> 00:10:02.980
Let's look at what pieces that
it has that will help you.

00:10:02.980 --> 00:10:04.300
So we saw installation before.

00:10:04.300 --> 00:10:08.090
We could just install a
component, and it'll go ahead

00:10:08.090 --> 00:10:09.750
and grab all of that stuff.

00:10:09.750 --> 00:10:12.770
It'll grab all the pieces,
put that into our folder.

00:10:15.450 --> 00:10:17.280
We can also do that
via manifest file.

00:10:17.280 --> 00:10:21.190
So we can declare what we want,
run Bower install, and

00:10:21.190 --> 00:10:23.890
it'll just go through that
manifest file just like MPM

00:10:23.890 --> 00:10:26.670
and get the pieces that are
required, along with anything

00:10:26.670 --> 00:10:29.720
that those pieces require, and
anything that those pieces

00:10:29.720 --> 00:10:34.290
require, until it has everything
that you need.

00:10:34.290 --> 00:10:36.680
And of course, if you edit the
manifest file, we want to

00:10:36.680 --> 00:10:37.660
change this.

00:10:37.660 --> 00:10:41.520
Say there was a bug, and we want
to force version 0.2.0,

00:10:41.520 --> 00:10:44.010
we can do that.

00:10:44.010 --> 00:10:46.690
And run Bower install, and it'll
go get the right files,

00:10:46.690 --> 00:10:50.570
and make sure everything's OK
as far as dependencies go.

00:10:50.570 --> 00:10:53.030
Now, if you want to do this from
the command line, you can

00:10:53.030 --> 00:10:55.990
do that pretty easily just by
putting in the module name

00:10:55.990 --> 00:10:59.870
that you want, and then a hash
mark, and then the version.

00:10:59.870 --> 00:11:01.830
And that'll do the same thing,
if you need to do that from

00:11:01.830 --> 00:11:02.520
the command line.

00:11:02.520 --> 00:11:08.610
So in this case, we want jQuery
1.8.0, and so we can

00:11:08.610 --> 00:11:09.860
force that.

00:11:12.030 --> 00:11:13.480
And you can manually edit it.

00:11:13.480 --> 00:11:14.090
That's fine.

00:11:14.090 --> 00:11:19.710
But we have this same as MPM,
--save, and --savedev.

00:11:19.710 --> 00:11:23.180
And those let you just express
what you want to install, but

00:11:23.180 --> 00:11:25.850
also put that into your manifest
file, because chances

00:11:25.850 --> 00:11:28.950
are you not only want that now,
you're going to want that

00:11:28.950 --> 00:11:32.825
any time you recreate this
project or someone else clones

00:11:32.825 --> 00:11:36.400
this project and gets that.

00:11:36.400 --> 00:11:39.330
But at this point, Bower
is mostly just a

00:11:39.330 --> 00:11:41.350
glorified URL shortener.

00:11:41.350 --> 00:11:44.190
Like this is nice, but this
isn't what's really

00:11:44.190 --> 00:11:45.610
going to help you.

00:11:45.610 --> 00:11:49.510
And so upgrading is where Bower
also shines in making

00:11:49.510 --> 00:11:51.410
your life a lot easier in
dealing with client-side

00:11:51.410 --> 00:11:53.735
libraries and frameworks
and plug-ins.

00:11:57.080 --> 00:12:00.040
Since required packages don't
have to be committed into your

00:12:00.040 --> 00:12:04.400
repository, it makes
discoverability and it makes

00:12:04.400 --> 00:12:07.830
working with these libraries
much easier.

00:12:07.830 --> 00:12:09.720
Check out Bower ls.

00:12:09.720 --> 00:12:12.920
It gives you a quick look at
what your current project

00:12:12.920 --> 00:12:13.340
looks like.

00:12:13.340 --> 00:12:17.350
And so in this case, we just
installed jquery 1.8.0.

00:12:17.350 --> 00:12:21.430
It's going to let us know that
2.0.0 is out, and that we

00:12:21.430 --> 00:12:23.200
could look into upgrading
to that.

00:12:23.200 --> 00:12:24.920
We didn't have to the jQuery
site or make sure that we

00:12:24.920 --> 00:12:25.820
follow the blog.

00:12:25.820 --> 00:12:28.990
And this is for any particular
plug-in or

00:12:28.990 --> 00:12:30.020
piece that you follow.

00:12:30.020 --> 00:12:32.830
But it also hunts down the
dependencies just to make sure

00:12:32.830 --> 00:12:37.060
that everything's fine as far
as what it requires as well.

00:12:37.060 --> 00:12:39.380
So we have a nice map of what
our project looks like.

00:12:43.600 --> 00:12:47.410
Bower update will take the
current version, install it to

00:12:47.410 --> 00:12:49.410
the highest minor version
possible.

00:12:49.410 --> 00:12:50.750
So in this case, it'll
go to 1.8.3.

00:12:50.750 --> 00:12:54.250
And that's nice if you want to
just make sure that while

00:12:54.250 --> 00:12:57.120
there shouldn't be any problems,
run the test suite,

00:12:57.120 --> 00:12:59.660
give it a run through, and then
make sure that you can

00:12:59.660 --> 00:13:04.690
deploy your site using these
latest versions.

00:13:04.690 --> 00:13:07.710
Let's talk about the power of
bower.json, having something

00:13:07.710 --> 00:13:11.060
that expresses your client-side
needs in your

00:13:11.060 --> 00:13:12.750
application.

00:13:12.750 --> 00:13:17.760
And the easiest way to do that
is this, just obliterate the

00:13:17.760 --> 00:13:18.600
components directory.

00:13:18.600 --> 00:13:21.450
And of course, this would
cripple your app altogether,

00:13:21.450 --> 00:13:25.200
and it's just as easy as running
Bower install to get

00:13:25.200 --> 00:13:26.975
all of that stuff back.

00:13:30.520 --> 00:13:35.800
Now Bower is just a
package manager.

00:13:35.800 --> 00:13:37.450
Bower doesn't give you
minified code.

00:13:37.450 --> 00:13:39.020
Bower doesn't concatenate
things.

00:13:39.020 --> 00:13:44.380
It doesn't load modules
for you, and it won't.

00:13:44.380 --> 00:13:47.050
You say what you want,
and Bower gets it.

00:13:47.050 --> 00:13:48.500
Because there's plenty of
great tools out there.

00:13:48.500 --> 00:13:49.670
There's tons of build tools.

00:13:49.670 --> 00:13:52.670
There's tons of things to help
you do certain tasks.

00:13:52.670 --> 00:13:54.930
Bower doesn't need to
do that for you.

00:13:54.930 --> 00:13:58.200
But what it does need to do
is play well with others.

00:13:58.200 --> 00:14:01.110
And so since it's written in
JavaScript, and since it's a

00:14:01.110 --> 00:14:05.300
node library, you can just
require it and do the same

00:14:05.300 --> 00:14:07.140
things that you can do from
the command line.

00:14:07.140 --> 00:14:10.810
Search, install, look at what
packages are available, and

00:14:10.810 --> 00:14:13.310
control it from maybe a
custom build tool that

00:14:13.310 --> 00:14:14.670
you have, or Grunt.

00:14:20.040 --> 00:14:29.240
Another thing that is really
nice and available for you is

00:14:29.240 --> 00:14:32.510
a plug-in that Ben Schwarz
made for Sublime Text.

00:14:32.510 --> 00:14:35.390
I'm not a Sublime Text user, so
I might bumble around this

00:14:35.390 --> 00:14:37.840
a little bit, but I wanted
to show you what

00:14:37.840 --> 00:14:40.510
this could look like.

00:14:40.510 --> 00:14:42.040
Actually, let me do
that from here.

00:14:53.920 --> 00:14:57.440
And we'll go in here--

00:14:57.440 --> 00:14:59.250
So here's a typical
Sublime project.

00:15:05.492 --> 00:15:09.320
And the typical way that you
run the built-in tools,

00:15:09.320 --> 00:15:13.330
Command-Shift-P, when
you install this

00:15:13.330 --> 00:15:16.890
tool, it adds a Bower--

00:15:16.890 --> 00:15:18.650
you can't really change the
font, unfortunately, of that

00:15:18.650 --> 00:15:20.070
particular part of Sublime.

00:15:20.070 --> 00:15:21.673
I don't think so.

00:15:21.673 --> 00:15:22.620
Nope.

00:15:22.620 --> 00:15:25.390
But what it lists there, if
you can't see it, is Bower

00:15:25.390 --> 00:15:27.870
Install, Bower Configure
Project, and

00:15:27.870 --> 00:15:30.250
Bower Discover Packages.

00:15:30.250 --> 00:15:35.900
And so from here, I could run
Bower Install, and that gives

00:15:35.900 --> 00:15:37.380
me kind of an interactive
search.

00:15:37.380 --> 00:15:42.850
So I could look for "angular,"
and find that package and

00:15:42.850 --> 00:15:44.155
install it right from Sublime.

00:15:44.155 --> 00:15:46.590
So I don't even have to hop
into the command line if I

00:15:46.590 --> 00:15:47.545
don't want to.

00:15:47.545 --> 00:15:49.795
Of course, if you have Little
Snitch running, it'll ask you

00:15:49.795 --> 00:15:52.450
every time, if that's OK.

00:15:52.450 --> 00:15:58.820
So just from Sublime, I was able
to add something into my

00:15:58.820 --> 00:16:02.840
bower.json file, and it
downloaded it into my

00:16:02.840 --> 00:16:06.840
components directory where
I have Angular now.

00:16:06.840 --> 00:16:09.600
So that's pretty nice, but
there's another tool that this

00:16:09.600 --> 00:16:16.230
exposes, or links to, rather,
which is Discover Packages.

00:16:16.230 --> 00:16:18.520
And so Cinder made this,
Cinder Source

00:16:18.520 --> 00:16:23.220
on GitHub and Twitter.

00:16:23.220 --> 00:16:27.780
And this is a search website for
Bower where you can take a

00:16:27.780 --> 00:16:31.320
look, and we can do the same
thing, angular, and get some

00:16:31.320 --> 00:16:35.760
of available metrics about what
matched that search, when

00:16:35.760 --> 00:16:37.830
it was last updated, how
many forks and stars.

00:16:37.830 --> 00:16:40.140
A little bit more information
to help you make a good

00:16:40.140 --> 00:16:43.240
decision about what piece
you want to add in

00:16:43.240 --> 00:16:44.050
and discover things.

00:16:44.050 --> 00:16:50.490
Currently, there's 2,048, so
exactly 2K components, which

00:16:50.490 --> 00:16:51.740
is fantastic.

00:16:53.900 --> 00:16:55.910
Let's look at the Angular
stuff just really quick.

00:16:55.910 --> 00:16:59.860
I have a quick demo about what
that can look like if you want

00:16:59.860 --> 00:17:01.490
to require jsfan.

00:17:01.490 --> 00:17:04.352
or if you just, like, Angular.

00:17:04.352 --> 00:17:05.884
Where did that go?

00:17:09.660 --> 00:17:10.910
There we go.

00:17:13.390 --> 00:17:16.559
So we're making a typical
Angular app.

00:17:16.559 --> 00:17:22.789
We have our name space in the
HTML, myApp, and starting with

00:17:22.789 --> 00:17:25.720
the basic template of HTML.

00:17:25.720 --> 00:17:28.420
And we'll go and install
that Angular

00:17:28.420 --> 00:17:29.715
component that's available.

00:17:33.500 --> 00:17:39.380
So add our Angular script into
our project, and then add some

00:17:39.380 --> 00:17:40.740
basic module code.

00:17:40.740 --> 00:17:44.300
So we'll depend on myApp,
and create a controller.

00:17:44.300 --> 00:17:46.000
And this is going to make
an itemized list.

00:17:46.000 --> 00:17:48.310
So we see the UL
up at the top.

00:17:48.310 --> 00:17:53.205
It's going to make just a
repeatable list item based off

00:17:53.205 --> 00:17:55.860
of this item list.

00:17:55.860 --> 00:17:59.180
But let's say that we want to
make this actually work with

00:17:59.180 --> 00:18:01.410
Markdown instead.

00:18:01.410 --> 00:18:07.230
And I'm sure that there's some
kind of Markdown Angular thing

00:18:07.230 --> 00:18:11.140
that's existing out there, so
we can search for "angular"

00:18:11.140 --> 00:18:14.800
and just parse out anything that
mentions "markdown." And

00:18:14.800 --> 00:18:17.840
we could have also used
this website here

00:18:17.840 --> 00:18:19.110
or use Sublime Text.

00:18:19.110 --> 00:18:28.340
We could Bower install,
angular markdown.

00:18:28.340 --> 00:18:29.360
It brings up the same thing.

00:18:29.360 --> 00:18:33.610
So whichever way you choose
to get there, you can.

00:18:33.610 --> 00:18:37.070
And so at the end of the day,
we install that that Angular

00:18:37.070 --> 00:18:40.140
Markdown directive, and we see
the it installed Showdown.

00:18:40.140 --> 00:18:42.640
That's what it requires for
the Markdown parsing.

00:18:42.640 --> 00:18:46.260
And then we have Angular, of
course, which is the directive

00:18:46.260 --> 00:18:48.740
piece, or what it depends
on to actually run.

00:18:48.740 --> 00:18:51.780
We already installed that,
so it doesn't matter.

00:18:51.780 --> 00:18:53.480
So now we have our three
components that we need to

00:18:53.480 --> 00:18:58.130
add, which is Angular itself,
the Markdown parser, and then

00:18:58.130 --> 00:18:59.865
the Angular Markdown
directive.

00:19:05.820 --> 00:19:08.470
We can add that module
now as a dependency.

00:19:08.470 --> 00:19:09.920
It's already been included
as a script

00:19:09.920 --> 00:19:11.900
tag, so it's now available.

00:19:11.900 --> 00:19:16.580
So we can include it just like
we would in a regular app.

00:19:16.580 --> 00:19:19.690
Make sure that we specify that
this item will be parsed using

00:19:19.690 --> 00:19:22.520
that with the btf-markdown
here, the

00:19:22.520 --> 00:19:24.710
latter part of the li.

00:19:27.750 --> 00:19:29.280
And then just add
some Markdown.

00:19:29.280 --> 00:19:32.130
So in this case, on the last
item, we're just making that

00:19:32.130 --> 00:19:34.800
some pretty basic Markdown.

00:19:34.800 --> 00:19:36.555
And what that looks like--

00:19:50.470 --> 00:19:51.990
this is the full HTML.

00:19:51.990 --> 00:19:53.590
Whoa, that got really big.

00:19:53.590 --> 00:19:57.882
This is the full HTML that we
have now that was generated.

00:19:57.882 --> 00:19:59.920
These are our components
all installed--

00:19:59.920 --> 00:20:01.480
Angular, Angular Markdown
directive, and Showdown.

00:20:04.255 --> 00:20:06.860
Bower is updated with the
two pieces that we need.

00:20:17.820 --> 00:20:19.870
And there it's running those
three items through the

00:20:19.870 --> 00:20:24.160
generator, and it is
parsing Markdown.

00:20:24.160 --> 00:20:25.720
So that didn't take a
lot of work to go

00:20:25.720 --> 00:20:26.790
hunt down these pieces.

00:20:26.790 --> 00:20:30.510
And imagine that part where you
find out, yes, there's an

00:20:30.510 --> 00:20:32.500
Angular directive for
parsing Markdown.

00:20:32.500 --> 00:20:34.550
Oh, now I need to get Showdown,
and now I need to

00:20:34.550 --> 00:20:38.580
find out where they put
their build file.

00:20:38.580 --> 00:20:40.250
And you're well aware that that

00:20:40.250 --> 00:20:41.350
could be on their website.

00:20:41.350 --> 00:20:44.010
That could be in some dist
folder in their GitHub repo,

00:20:44.010 --> 00:20:46.440
or maybe it's the source file,
but you're not quite sure

00:20:46.440 --> 00:20:48.210
which one it is.

00:20:48.210 --> 00:20:50.270
And that gets really
complicated, and that takes

00:20:50.270 --> 00:20:53.460
time, and that is a barrier
of entry to use

00:20:53.460 --> 00:20:56.150
that particular plug-in.

00:20:56.150 --> 00:21:00.450
But that also is just time that
you don't need to spend.

00:21:00.450 --> 00:21:05.380
There's also a really nice
ability of being able to work

00:21:05.380 --> 00:21:08.420
with a directory that's
managed by a tool.

00:21:08.420 --> 00:21:14.215
And that is, if we go back
to our step three here--

00:21:21.460 --> 00:21:24.940
so I have my bower.json file.

00:21:24.940 --> 00:21:28.290
If I want to see what my app
looks like with a particular

00:21:28.290 --> 00:21:30.960
piece, I can just install
any version I want.

00:21:30.960 --> 00:21:35.200
If I want to test [INAUDIBLE]
requirejs 3.0 comes out, and I

00:21:35.200 --> 00:21:37.660
want to test that with my
application, I can just

00:21:37.660 --> 00:21:40.710
install that using Bower.

00:21:40.710 --> 00:21:43.260
And if my whole app just
completely explodes, or I find

00:21:43.260 --> 00:21:48.130
a bug and so I report it to
requirejs, or I install jQuery

00:21:48.130 --> 00:21:52.920
2.0.1 and I find a bug,
I can report that bug.

00:21:52.920 --> 00:21:54.070
I can help the community.

00:21:54.070 --> 00:21:57.390
I can help those projects
that I depend on.

00:21:57.390 --> 00:21:59.170
But then I can just switch back
to the version that I

00:21:59.170 --> 00:22:02.040
need, and it wasn't
a big deal.

00:22:02.040 --> 00:22:06.130
I didn't have to rename
to jquery.old.js and

00:22:06.130 --> 00:22:07.040
put in the new one.

00:22:07.040 --> 00:22:12.620
And if you've ever done that,
and I know you have, you don't

00:22:12.620 --> 00:22:13.870
have to anymore.

00:22:20.160 --> 00:22:22.780
So we never had to hunt
down Angular.

00:22:22.780 --> 00:22:24.820
Able to find everything
really easy.

00:22:24.820 --> 00:22:27.680
And most of all, the scripts
are in a consistent place.

00:22:27.680 --> 00:22:31.670
So we looked at the requirejs
demo earlier, and now I was

00:22:31.670 --> 00:22:35.770
using components as the full
path, components weather and

00:22:35.770 --> 00:22:38.200
then weather.js.

00:22:38.200 --> 00:22:43.040
There's a Grunt contribution
plug-in for that that actually

00:22:43.040 --> 00:22:45.470
adds those to your path
automatically.

00:22:45.470 --> 00:22:47.650
So I could have just had jquery
and weather, and it

00:22:47.650 --> 00:22:48.900
would have just worked.

00:22:48.900 --> 00:22:50.760
So there's tools out there.

00:22:50.760 --> 00:22:54.360
Bower has a lot of pieces to
integrate with Rails, with

00:22:54.360 --> 00:22:57.040
different build tools.

00:22:57.040 --> 00:23:00.100
There's a lot of community
around making it integrate

00:23:00.100 --> 00:23:02.370
with whatever work process
that you have.

00:23:05.580 --> 00:23:06.860
So what's coming up?

00:23:06.860 --> 00:23:10.690
There's a lot of great stuff
that we looked out, but

00:23:10.690 --> 00:23:12.370
obviously there's room
for improvement.

00:23:12.370 --> 00:23:13.480
We're not perfect.

00:23:13.480 --> 00:23:16.440
This is still a new project.

00:23:16.440 --> 00:23:18.450
And so some of the things
that we want to

00:23:18.450 --> 00:23:20.870
do are hosted packages.

00:23:20.870 --> 00:23:22.630
We want you to be able to
authenticate with the

00:23:22.630 --> 00:23:24.920
registration server, and so
we've started work on this, so

00:23:24.920 --> 00:23:28.610
that you could go in and rename
a package if you added

00:23:28.610 --> 00:23:30.720
one or delete it.

00:23:30.720 --> 00:23:34.740
You'd be able to push a copy of
a built file if you don't

00:23:34.740 --> 00:23:37.060
want that, maybe, in
your repository.

00:23:37.060 --> 00:23:39.930
So you could push that
up to us directly.

00:23:39.930 --> 00:23:42.590
And of course, we could
give a cached copy.

00:23:42.590 --> 00:23:45.670
So if you don't have Git or you
want that even faster, we

00:23:45.670 --> 00:23:47.820
can just push the file
that you want down,

00:23:47.820 --> 00:23:51.720
which is really helpful.

00:23:51.720 --> 00:23:57.560
Andre, who is the lead developer
for Bower, Marco and

00:23:57.560 --> 00:24:01.020
him have been working on a
rewrite of Bower to make it

00:24:01.020 --> 00:24:04.060
faster, to make it easier for
us to work on, and to add to

00:24:04.060 --> 00:24:05.720
better features.

00:24:05.720 --> 00:24:08.450
This a quick video he made.

00:24:08.450 --> 00:24:11.532
Let me go full screen here.

00:24:11.532 --> 00:24:13.280
I'm going to probably
pause it.

00:24:13.280 --> 00:24:15.620
It's a really short video.

00:24:15.620 --> 00:24:19.850
So this is his dependencies
list, and these

00:24:19.850 --> 00:24:22.340
are pretty big pieces.

00:24:22.340 --> 00:24:23.830
It needs a lot of pieces.

00:24:23.830 --> 00:24:27.760
So this is a pretty indicative
of a typical, real-world app

00:24:27.760 --> 00:24:29.360
as far as how many components
are there.

00:24:32.440 --> 00:24:37.190
What he has here is, on the
left, is going to be with the

00:24:37.190 --> 00:24:42.630
rewrite, and then on the right
is the current version.

00:24:42.630 --> 00:24:45.420
And so those run.

00:24:45.420 --> 00:24:47.200
Bower just goes to town
getting everything.

00:24:54.560 --> 00:24:57.050
So you see on the left is
already much faster.

00:24:57.050 --> 00:25:01.540
It was able to get all of that
content in just 8.8 seconds,

00:25:01.540 --> 00:25:07.010
whereas the current one is 13.

00:25:07.010 --> 00:25:10.750
And then if you have cache,
which Bower has, once you've

00:25:10.750 --> 00:25:14.580
actually done this once, most
of these repos are probably

00:25:14.580 --> 00:25:17.940
using across different projects,
it's now down to 2.3

00:25:17.940 --> 00:25:23.860
seconds versus 5.7 on
the current version.

00:25:23.860 --> 00:25:26.590
And then that time you're on
a plane, and you need to

00:25:26.590 --> 00:25:28.275
recreate the project, and
you know you have all

00:25:28.275 --> 00:25:31.320
that cached, 1 second.

00:25:31.320 --> 00:25:35.880
So this isn't a big commitment
as far as having a process

00:25:35.880 --> 00:25:38.320
around getting these packages.

00:25:38.320 --> 00:25:40.470
Running even on the current
version, it's

00:25:40.470 --> 00:25:42.170
still pretty fast.

00:25:42.170 --> 00:25:44.710
And it's only going to get
faster, and it's only going to

00:25:44.710 --> 00:25:45.470
get better.

00:25:45.470 --> 00:25:50.480
And so working this tool into
your workflow not only should

00:25:50.480 --> 00:25:53.140
make your life easier, but it
should do a faster job of

00:25:53.140 --> 00:25:54.960
hunting down all these
things for you than

00:25:54.960 --> 00:25:56.520
you possibly could.

00:25:56.520 --> 00:25:58.420
And as developers, that's
the whole point.

00:26:01.370 --> 00:26:02.890
And of course, we're working
on the regular stuff.

00:26:02.890 --> 00:26:05.430
So more docs, less bugs.

00:26:05.430 --> 00:26:06.350
Unless you want more bugs.

00:26:06.350 --> 00:26:08.700
I guess we could put them in.

00:26:08.700 --> 00:26:09.900
And more packages, and
more integration.

00:26:09.900 --> 00:26:14.950
And that's really the biggest
piece of this, is we want to

00:26:14.950 --> 00:26:19.970
make Bower something that is
extendable to work with any

00:26:19.970 --> 00:26:22.960
tools, and we can just write
whatever middleware, whatever

00:26:22.960 --> 00:26:26.070
plug-ins to make it work so that
you can take advantage of

00:26:26.070 --> 00:26:28.080
it in the way that
you see fit.

00:26:28.080 --> 00:26:31.340
And we can focus on just getting
packages, getting

00:26:31.340 --> 00:26:33.850
stuff for you, in a sane way.

00:26:37.150 --> 00:26:38.320
But we need help with that.

00:26:38.320 --> 00:26:39.370
We need help on Bower.

00:26:39.370 --> 00:26:40.820
We need help with
these pieces.

00:26:40.820 --> 00:26:45.150
And so github.com/bower, all the
pieces that we're working

00:26:45.150 --> 00:26:46.430
on, are there.

00:26:46.430 --> 00:26:50.790
Bower IRC channel on freenode,
definitely come in and chat

00:26:50.790 --> 00:26:52.510
with us, and let us
know if you're

00:26:52.510 --> 00:26:53.880
running into any problems.

00:26:53.880 --> 00:26:55.840
We have a Bower Google group.

00:26:55.840 --> 00:27:00.080
And that's it.

00:27:00.080 --> 00:27:02.580
The timer was going pretty
crazy, so I'm not sure exactly

00:27:02.580 --> 00:27:05.190
what it all means for
time, but I think I

00:27:05.190 --> 00:27:06.440
have time for questions.

00:27:08.860 --> 00:27:14.788
[APPLAUSE]

00:27:14.788 --> 00:27:17.890
DAN HEBERDEN: I should note,
too, that if you want to, we

00:27:17.890 --> 00:27:20.970
have a bunch of Bower
stickers.

00:27:20.970 --> 00:27:27.000
And if you liked the logo, which
is pretty new, by Dave

00:27:27.000 --> 00:27:30.510
DeSandro, pretty neat logo.

00:27:30.510 --> 00:27:33.670
So if you want to sport that
on your laptop or child's

00:27:33.670 --> 00:27:39.645
forehead, definitely come up
and get a Bower sticker.

00:27:39.645 --> 00:27:40.639
Go ahead?

00:27:40.639 --> 00:27:43.990
AUDIENCE: So this is awesome,
really awesome.

00:27:43.990 --> 00:27:44.370
I'm looking forward to it.

00:27:44.370 --> 00:27:47.530
I haven't used it yet, but I
definitely would love to start

00:27:47.530 --> 00:27:50.300
using it some of my projects.

00:27:50.300 --> 00:27:54.240
This does all the client-side
components and so on, and

00:27:54.240 --> 00:27:59.010
usually all our projects have
server-side and client-side

00:27:59.010 --> 00:28:00.260
together as their--

00:28:02.980 --> 00:28:06.050
is there any sort of integration
between different

00:28:06.050 --> 00:28:09.060
kinds of server-side packaging
systems as

00:28:09.060 --> 00:28:11.560
well, or packages that--

00:28:11.560 --> 00:28:14.060
DAN HEBERDEN: The integration,
that's where we want to make

00:28:14.060 --> 00:28:15.580
sure that, as a developer,
you're the

00:28:15.580 --> 00:28:17.390
one calling the shots.

00:28:17.390 --> 00:28:25.930
And so a good demo of this is
actually this presentation,

00:28:25.930 --> 00:28:28.230
which ended up not working that
great because there's a

00:28:28.230 --> 00:28:30.220
lot of network connections
in here.

00:28:30.220 --> 00:28:34.130
But I wanted to hook up my phone
so that I could have the

00:28:34.130 --> 00:28:36.400
next slide show up on
my phone, and so I

00:28:36.400 --> 00:28:38.190
wanted to use Socket.IO.

00:28:38.190 --> 00:28:41.390
And so looking at that, I was
like, well, I better use of

00:28:41.390 --> 00:28:46.200
Bower because I'm writing
a talk about Bower.

00:28:46.200 --> 00:28:54.090
And so if I have my node
modules, I have Socket.IO.

00:28:54.090 --> 00:28:56.350
So in this case, I know I need
Socket.IO on the server, so I

00:28:56.350 --> 00:28:59.980
just add that to my
package.json, and then Bower

00:28:59.980 --> 00:29:02.590
search socket.

00:29:02.590 --> 00:29:04.350
Give you a few different ones
that are available, and you

00:29:04.350 --> 00:29:07.690
can see that there's a client
available to get.

00:29:07.690 --> 00:29:09.870
So it's still going to be two
separate pieces because

00:29:09.870 --> 00:29:14.190
they're going to be two
different libs but having the

00:29:14.190 --> 00:29:18.420
ability to hop between the two
really easily and just have

00:29:18.420 --> 00:29:21.040
MPM install and Bower install
as part of your process.

00:29:21.040 --> 00:29:23.690
And when I showed Yeoman
earlier, that actually runs

00:29:23.690 --> 00:29:25.110
both for you as well.

00:29:25.110 --> 00:29:27.150
So even if you're building
something that scaffolds an

00:29:27.150 --> 00:29:30.850
app that you maybe build often,
you can have that as

00:29:30.850 --> 00:29:33.050
part of your workflow of just,
OK, here's my server-side

00:29:33.050 --> 00:29:36.220
components, here's all my
client-side components, go.

00:29:36.220 --> 00:29:37.565
AUDIENCE: I guess we
can always script.

00:29:37.565 --> 00:29:41.160
Like if you want just a single
install, get everything

00:29:41.160 --> 00:29:43.480
running from scratch or
whatever, script that, and

00:29:43.480 --> 00:29:45.450
then you can script these
components as well.

00:29:45.450 --> 00:29:45.900
DAN HEBERDEN: Yes.

00:29:45.900 --> 00:29:48.530
That's why I look at Yeoman
generators or something

00:29:48.530 --> 00:29:49.600
similar to do that.

00:29:49.600 --> 00:29:52.502
AUDIENCE: OK, thanks.

00:29:52.502 --> 00:29:54.510
AUDIENCE: I had a question.

00:29:54.510 --> 00:29:59.210
We use Bower at our company,
and one thing I noticed is

00:29:59.210 --> 00:30:02.890
that when you Bower install
something like Bootstrap, you

00:30:02.890 --> 00:30:10.470
get like 15 ls files and 15 js
files, and it's not built.

00:30:10.470 --> 00:30:15.910
Is there any way to integrate
with Bower to have it

00:30:15.910 --> 00:30:18.500
automatically build that as
soon as I download it?

00:30:18.500 --> 00:30:22.320
I mean, some packages actually
do have the build files in the

00:30:22.320 --> 00:30:27.900
source, but I'm just looking for
a way to kind of improve

00:30:27.900 --> 00:30:29.560
that workflow, I guess.

00:30:29.560 --> 00:30:32.720
DAN HEBERDEN: Yeah.

00:30:32.720 --> 00:30:35.720
So Bower won't be the tool that
builds that, because you

00:30:35.720 --> 00:30:38.920
can imagine that might be a
make file-- in the case of

00:30:38.920 --> 00:30:41.550
Bootstrap, it is a make file--

00:30:41.550 --> 00:30:43.020
that could be node, whatever.

00:30:43.020 --> 00:30:45.130
So there needs to be
a way to make that

00:30:45.130 --> 00:30:46.010
build version available.

00:30:46.010 --> 00:30:48.520
Now the way that Bootstrap does
it, they actually hide it

00:30:48.520 --> 00:30:50.010
in the Docs folder.

00:30:50.010 --> 00:30:53.330
So if you go into Docs, that's
where the built js

00:30:53.330 --> 00:30:54.780
and CSS files are.

00:30:54.780 --> 00:30:58.506
What we've been working on is
there's a main property inside

00:30:58.506 --> 00:31:01.580
of Bower's manifest file, and
so we're working on the spec

00:31:01.580 --> 00:31:05.230
to bring that to more light so
that the actual file that you

00:31:05.230 --> 00:31:09.050
want is not only highlighted to
you, here it is, but even

00:31:09.050 --> 00:31:10.540
like possibly moved to
root, or something

00:31:10.540 --> 00:31:11.740
that makes that easier.

00:31:11.740 --> 00:31:14.180
And also the hosted part will
mean that if you have a

00:31:14.180 --> 00:31:17.860
complicated build process, you
can publish your built copy if

00:31:17.860 --> 00:31:21.080
you don't want that
in your repo.

00:31:21.080 --> 00:31:22.030
Like I like it in the repo.

00:31:22.030 --> 00:31:22.810
I think that's a cool thing.

00:31:22.810 --> 00:31:25.530
But obviously not everyone
agrees with me.

00:31:25.530 --> 00:31:26.680
So we're working on
that for sure.

00:31:26.680 --> 00:31:28.150
AUDIENCE: Great, thanks.

00:31:28.150 --> 00:31:28.880
AUDIENCE: Hi.

00:31:28.880 --> 00:31:32.290
Can I use my own modules that
are not in that directory, for

00:31:32.290 --> 00:31:34.340
example, in the Bower file?

00:31:34.340 --> 00:31:36.540
DAN HEBERDEN: Yeah.

00:31:36.540 --> 00:31:38.180
So if there's something that,
like, maybe in a corporate

00:31:38.180 --> 00:31:41.590
environment, you don't want to
publish certain things, or you

00:31:41.590 --> 00:31:46.120
have private code, you can
reference any Git repository

00:31:46.120 --> 00:31:51.200
and just specify the
Git URL and a tag.

00:31:51.200 --> 00:32:06.250
So actually when I was working
on this-- so codemirror is, I

00:32:06.250 --> 00:32:07.960
was like, man, I really don't
want to have to commit this in

00:32:07.960 --> 00:32:08.610
the project.

00:32:08.610 --> 00:32:10.350
And then of course, I clicked,
I'm writing a talk of about

00:32:10.350 --> 00:32:12.170
Bower, so I could use that.

00:32:12.170 --> 00:32:15.300
And I was just able to point
it to the Git repo for

00:32:15.300 --> 00:32:18.470
codemirror, and it just
pulled it for me.

00:32:18.470 --> 00:32:20.640
So even without someone going
through the work of making

00:32:20.640 --> 00:32:22.910
their project Bower-compatible,
I was still

00:32:22.910 --> 00:32:25.660
able to just throw it in
there and use that.

00:32:25.660 --> 00:32:28.840
So you could use that and
specify a tag if you wanted to

00:32:28.840 --> 00:32:30.420
for a specific version
of that.

00:32:33.920 --> 00:32:37.830
AUDIENCE: On the server-side,
you have the luxury of if two

00:32:37.830 --> 00:32:41.260
modules require the same thing
but have different version

00:32:41.260 --> 00:32:44.480
requirements, you can just load
them as dependencies of

00:32:44.480 --> 00:32:46.890
the dependencies, and each
one gets called in

00:32:46.890 --> 00:32:48.270
for the correct spot.

00:32:48.270 --> 00:32:52.660
On the client, you can't run
jQuery 1.4.2 for one module

00:32:52.660 --> 00:32:54.040
and 2.0 for another module.

00:32:54.040 --> 00:32:58.120
So what's the solution on the
client-side for mismatched

00:32:58.120 --> 00:33:00.280
dependencies?

00:33:00.280 --> 00:33:02.970
DAN HEBERDEN: That will show up
in the bower.ls, but it's

00:33:02.970 --> 00:33:06.340
going to ultimately be your
decision to mitigate that.

00:33:06.340 --> 00:33:09.180
Because like you said, there's
no just easy way out.

00:33:09.180 --> 00:33:14.520
And so that's where you making
the decision of what to do, in

00:33:14.520 --> 00:33:19.510
which library is going to be the
correct one or will work.

00:33:19.510 --> 00:33:22.370
We're working on finding out
the best way to do that.

00:33:22.370 --> 00:33:25.060
Like should our process stop all
together, and say there's

00:33:25.060 --> 00:33:27.010
a conflict, and you have
to resolve this first?

00:33:27.010 --> 00:33:29.590
Or should we just carry on and
hope that you can figure it

00:33:29.590 --> 00:33:30.130
out yourself?

00:33:30.130 --> 00:33:34.810
So we're working on some better
feedback on that, but

00:33:34.810 --> 00:33:37.440
it'll still show you that we
have two different versions,

00:33:37.440 --> 00:33:38.860
and you're going to
have to figure out

00:33:38.860 --> 00:33:41.350
which one to put in.

00:33:41.350 --> 00:33:44.940
But that's where, again, the
developer needs to be the

00:33:44.940 --> 00:33:49.070
decision maker, and Bower
doesn't need to be a tool that

00:33:49.070 --> 00:33:51.630
forces you into a box in
particular situations.

00:33:51.630 --> 00:33:54.140
Because you might be very well
aware, oh, this person just

00:33:54.140 --> 00:33:58.730
didn't update their
dependency list.

00:33:58.730 --> 00:34:00.420
I guess that's it for questions,
so thank you very

00:34:00.420 --> 00:34:01.330
much for you attention.

00:34:01.330 --> 00:34:02.750
And come get a sticker
if you want.

00:34:02.750 --> 00:34:09.253
[APPLAUSE]

