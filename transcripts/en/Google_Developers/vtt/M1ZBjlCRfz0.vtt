WEBVTT
Kind: captions
Language: en

00:00:09.450 --> 00:00:13.590
&gt;&gt;Jim Palmer: Welcome, everyone.
I'm Jim Palmer, head of the Android user experience

00:00:13.590 --> 00:00:16.360
team.
Let me just say, it's so exciting, being a

00:00:16.360 --> 00:00:21.110
designer here at the conference, to see so
many people coming out to see a design session.

00:00:21.110 --> 00:00:25.760
So, wow, thanks for all the support there.
[ Applause ]

00:00:25.760 --> 00:00:34.690
&gt;&gt;Jim Palmer: Our session today is on Android
UI design patterns.

00:00:34.690 --> 00:00:38.430
We're truly excited about the growth of Android
and, of course, all the applications you are

00:00:38.430 --> 00:00:41.770
doing.
But, really, stop by the developer sandbox

00:00:41.770 --> 00:00:46.750
and check out the wall of phones.
Does anyone doubt that touch-based mobile

00:00:46.750 --> 00:00:50.070
devices are going to dominate the next generation
of computing products; right?

00:00:50.070 --> 00:00:53.500
This is where it's at.
So we're really excited to be here and to

00:00:53.500 --> 00:01:00.310
help you guys deliver that vision.
Today, after my intro, we're going to go through

00:01:00.310 --> 00:01:05.080
some of the new patterns that we've been exploring
on your team, give you a few tips on visual

00:01:05.080 --> 00:01:10.149
design and end with a walk-through of an app
that will tie it all together.

00:01:10.149 --> 00:01:13.451
What's in it for you?
Insight about where we're headed, as well

00:01:13.451 --> 00:01:17.069
as some practical advice on creating a better
Android app.

00:01:17.069 --> 00:01:20.049
Of course, this being Google, it wouldn't
be right if we didn't have a little nerdy

00:01:20.049 --> 00:01:23.540
question along the way.
So while we're going through the presentation,

00:01:23.540 --> 00:01:27.469
see if you can spot a term, it's a figure
of speech from classical rhetoric.

00:01:27.469 --> 00:01:31.549
In the Q&amp;A, we'll give out a collectible to
someone who can name that.

00:01:31.549 --> 00:01:38.209
Okay. So let's go into the session here.
Since I/O last year, a lot has happened with

00:01:38.209 --> 00:01:41.229
Android.
You guys are aware of the releases: Donut,

00:01:41.229 --> 00:01:45.459
Eclair, an update of Eclair for the Nexus
One, as well as the upcoming Froyo.

00:01:45.459 --> 00:01:50.479
One of the key things that's happened, however,
from a user experience point of view has been

00:01:50.479 --> 00:01:55.070
the support for more hardware profiles and
specifically for different screen sizes and

00:01:55.070 --> 00:01:59.009
densities.
As you can see, those wall of devices out

00:01:59.009 --> 00:02:03.509
there show why that's been such a great boon
for us.

00:02:03.509 --> 00:02:10.229
From the G1, which is a half-VGA screen at
approximately 180 dpi, we've added two versions

00:02:10.229 --> 00:02:16.100
of WVGA at around 240, 250 dpi.
So as a result, we've tried to optimize the

00:02:16.100 --> 00:02:20.319
system to allow assets to be targeted to each
of those to make them better.

00:02:20.319 --> 00:02:23.970
So we're going to talk about that today.
Another big change, of course, has been the

00:02:23.970 --> 00:02:28.280
explosion of apps in the developer community.
I just want to let you know, we do pay attention

00:02:28.280 --> 00:02:32.860
to what's going on there, both how you're
using the existing tools we're providing as

00:02:32.860 --> 00:02:35.870
well as new challenges that you're trying
to solve and incorporating those.

00:02:35.870 --> 00:02:42.989
I think you'll see with some of our patterns
we're adopting that and moving that forward.

00:02:42.989 --> 00:02:46.180
So, let's give some context before we dive
into the actual session.

00:02:46.180 --> 00:02:51.010
People ask, what is your UI group's philosophy
for design on Android?

00:02:51.010 --> 00:02:56.939
To start, we want to be somewhat heretical
here and challenge the common view that a

00:02:56.939 --> 00:03:02.599
good UI is simple.
While appealing in concept, simple has a negative

00:03:02.599 --> 00:03:06.740
connotation in some ways.
It can mean lack of power, inability to adapt

00:03:06.740 --> 00:03:10.900
or grow.
In particular, this notion is often in UI

00:03:10.900 --> 00:03:15.439
circles operationalized as counting number
of clicking or number of touches as if by

00:03:15.439 --> 00:03:19.340
measuring that, you're going to ensure that
you're going to have a usable product.

00:03:19.340 --> 00:03:26.780
I submit that, in fact, that what makes UIs
usable is being clear, which is being confused

00:03:26.780 --> 00:03:30.769
leads to frustration and a general sense of
I don't know how to use this product.

00:03:30.769 --> 00:03:34.379
And that's what hurts you more than total
number of clicks.

00:03:34.379 --> 00:03:40.099
So, for sure, overloading on features or having
too many complex interactions are bad.

00:03:40.099 --> 00:03:44.999
But by focusing on clarity over simplicity,
we can get products, we think, that are both

00:03:44.999 --> 00:03:48.739
straightforward to use and powerful.
So that's one of the things that we think

00:03:48.739 --> 00:03:52.129
about.
Another part of our philosophy is to use as

00:03:52.129 --> 00:03:57.000
much of the screen as possible to what people
really care about, which is content, and,

00:03:57.000 --> 00:04:03.819
specifically, their content, whether it's
photos, music, status updates, messages.

00:04:03.819 --> 00:04:07.950
You know, of course we want to increase the
clarity of the UI by putting common actions

00:04:07.950 --> 00:04:10.629
on screen as clickable items.
And we're going to talk about that today as

00:04:10.629 --> 00:04:14.069
a pattern.
But more and more, content on the screen itself

00:04:14.069 --> 00:04:17.730
can drive interaction, not just traditional
UI controls.

00:04:17.730 --> 00:04:21.500
And why is this important?
Over time, we're going to try to work on reducing

00:04:21.500 --> 00:04:25.170
the visual complexity of screens, you know,
the boxes within boxes and all the lines.

00:04:25.170 --> 00:04:30.880
So that will help also make it feel lighter.
This tension, then, between content and UI

00:04:30.880 --> 00:04:33.850
Chrome often gets played out in discussions
about consistency.

00:04:33.850 --> 00:04:38.040
Is the UI consistent?
In the worst case this means let's make everything

00:04:38.040 --> 00:04:42.770
the same so people know what to do.
What we're going to promote in our group is

00:04:42.770 --> 00:04:48.380
interaction consistency, that is, making it
clear to users what they can do, without being

00:04:48.380 --> 00:04:51.790
monotonous.
Herb Simon, one of the founders of cognitive

00:04:51.790 --> 00:04:55.140
psychology, once said, "Information consumes
attention."

00:04:55.140 --> 00:05:00.170
And with all the options and choices available
to users today, products need to focus on

00:05:00.170 --> 00:05:04.330
engaging their users.
So by keeping the interaction consistent,

00:05:04.330 --> 00:05:08.530
but varying the treatment and adding visual
expression and visual delight, you can draw

00:05:08.530 --> 00:05:15.320
users in and really engage them in your product.
Finally, mobile devices are the very definition

00:05:15.320 --> 00:05:17.760
of personal.
We have them with you at all times.

00:05:17.760 --> 00:05:21.920
You use them constantly.
So people do a lot of experimenting, both

00:05:21.920 --> 00:05:25.640
trying out new devices, downloading apps,
trying out the app.

00:05:25.640 --> 00:05:31.490
What they don't want to do and don't have
time to do is constantly reorganize the stuff.

00:05:31.490 --> 00:05:35.990
They want to organize their stuff once, and
they expect to be able to use that organization

00:05:35.990 --> 00:05:41.020
in future contexts.
So any time spent adapting a product to a

00:05:41.020 --> 00:05:47.800
user they expect to leverage in the future.
Thus, applications should use the cloud as

00:05:47.800 --> 00:05:53.180
the glue that lets users stay in context and
not constantly recreate their context, you

00:05:53.180 --> 00:05:57.710
know, having to set stuff up and reestablish
what they use on the desktop or in other places.

00:05:57.710 --> 00:06:02.120
So the cloud becomes not just a source of
information, but also a way to enhance the

00:06:02.120 --> 00:06:06.900
user experience by cutting down the amount
of time and focusing on what's important to

00:06:06.900 --> 00:06:11.120
them.
So, to conclude, here's a great insight from

00:06:11.120 --> 00:06:16.560
Socrates, mere knowledge of the truth does
not give you the art of persuasion.

00:06:16.560 --> 00:06:19.320
That obviously applies to how you motivate
people to act.

00:06:19.320 --> 00:06:24.470
In this context, I want you to think of design
as a communication between you and your user

00:06:24.470 --> 00:06:29.410
and help you move beyond just thinking of
mere functionality, but how you persuade people

00:06:29.410 --> 00:06:33.790
to try and then stay engaged in your products.
So how do you do that?

00:06:33.790 --> 00:06:36.300
Let's find out.
Let's dive in and I'm going to bring up Richard

00:06:36.300 --> 00:06:39.241
Fulcher and we're going to start with the
next section on design patterns.

00:06:39.241 --> 00:06:52.590
&gt;&gt;Richard Fulcher: Thank you, Jim.
And thanks to everybody who is here today.

00:06:52.590 --> 00:06:58.410
So design patterns.
What do we mean when we say that?

00:06:58.410 --> 00:07:03.750
Well, a UI design pattern really isn't all
that different from a software design pattern

00:07:03.750 --> 00:07:08.180
as you know it today.
It's just a general solution to a recurring

00:07:08.180 --> 00:07:13.050
problem.
It's not necessarily the perfect solution.

00:07:13.050 --> 00:07:19.080
But it's a good, solid, reliable, broadly
applicable solution.

00:07:19.080 --> 00:07:24.780
These patterns emerge just kind of as a part
of the design process.

00:07:24.780 --> 00:07:29.280
You know, we do a few different things at
Google that help us generate these designs.

00:07:29.280 --> 00:07:33.880
One of them is that we do both formal user
research, and we do what we call internal

00:07:33.880 --> 00:07:40.030
dogfooding, where we'll do an early version
of an application, we'll share it with team

00:07:40.030 --> 00:07:43.750
members kind of outside our immediate team
and we'll generate feedback that way.

00:07:43.750 --> 00:07:49.430
We'll start to see what things work and what
things don't work so well inside the application.

00:07:49.430 --> 00:07:54.550
Another way is that anytime you sit UI designers
together and they can kind of look at each

00:07:54.550 --> 00:08:00.620
other's screens, you tend to get this certain
 -- certain solutions tend to win.

00:08:00.620 --> 00:08:05.310
You know, I might look over at something Chris
or Christian has done, and I'll look at it

00:08:05.310 --> 00:08:13.270
and I'll think to myself, "Somebody call a
doctor, because that is sick!"

00:08:13.270 --> 00:08:21.310
The last, and most important way that we see
patterns emerge is what we see you, the broad

00:08:21.310 --> 00:08:24.850
development community, come up with.
We look at the market.

00:08:24.850 --> 00:08:30.110
We see things within it that challenge us,
that inspire us.

00:08:30.110 --> 00:08:35.240
And those help us to think about, well, either
here's a problem or here's a really interesting

00:08:35.240 --> 00:08:38.890
way of solving it.
So for the patterns that I'm going to go through

00:08:38.890 --> 00:08:41.440
today, we'll just have a little bit of detail
on each.

00:08:41.440 --> 00:08:45.940
We'll give it a title so we can kind of refer
to them in a really strict vocabulary.

00:08:45.940 --> 00:08:51.700
We'll give a couple of on-screen examples.
And these will just be very generic, low-fidelity

00:08:51.700 --> 00:08:55.520
wire frames, because we're focusing on the
interaction at this point, not, ultimately,

00:08:55.520 --> 00:08:59.620
the visual.
We'll state the problem that it's trying to

00:08:59.620 --> 00:09:05.020
address and we'll give a number of recommendations
for each pattern.

00:09:05.020 --> 00:09:12.030
So the five patterns I'm going to cover are
the dashboard, the action bar, the search

00:09:12.030 --> 00:09:21.060
bar, quick actions, and the companion widget.
So first up is the dashboard.

00:09:21.060 --> 00:09:26.070
So for all the examples we'll show here, I've
just kind of created this false, fake application.

00:09:26.070 --> 00:09:31.490
You know, it's some kind of tool for people
who are passionate about Android to get together

00:09:31.490 --> 00:09:36.870
and share updates and share product reviews.
So we've got this Android fanatics application,

00:09:36.870 --> 00:09:39.440
and we're seeing the dashboard here in two
different flavors.

00:09:39.440 --> 00:09:47.840
Portrait on the left; landscape on the right.
The dashboard's trying to address the question

00:09:47.840 --> 00:09:52.440
of what can I do with this app, and what's
new with this app.

00:09:52.440 --> 00:09:59.570
So it's really just a quick introduction to
the app that tries to lay out the key functionality

00:09:59.570 --> 00:10:04.200
and give the user kind of clear waypoints
into the particular subtasks that the app

00:10:04.200 --> 00:10:09.280
can perform for them.
You might think of it in a way as kind of

00:10:09.280 --> 00:10:14.390
the hero screen shot of the application you
a might upload to the market when your app

00:10:14.390 --> 00:10:18.330
is finished.
What's the one picture a user could look at

00:10:18.330 --> 00:10:22.242
as they're kind of quickly flipping through
all the apps in the market that will kind

00:10:22.242 --> 00:10:25.360
of stop them and say, okay, I get what this
is going to do.

00:10:25.360 --> 00:10:30.029
This will do these things for me.
Okay, I kind of got it.

00:10:30.029 --> 00:10:32.940
It's full screen, so you've got lots of real
estate.

00:10:32.940 --> 00:10:34.890
And there's different ways that you can organize
it.

00:10:34.890 --> 00:10:38.390
The example I just showed, it's kind of broken
up by features.

00:10:38.390 --> 00:10:42.490
You're seeing kind of different entry points
to, you know, posting a review or search.

00:10:42.490 --> 00:10:48.000
But you could also imagine doing it if you're
more content-focused, maybe it's by category,

00:10:48.000 --> 00:10:56.200
where your dashboard is talking about top-rated,
or most popular, or recently added.

00:10:56.200 --> 00:11:00.940
Or if you are more kind of productivity-focused,
it might be broken up by account.

00:11:00.940 --> 00:11:05.910
You know, maybe you're an e-mail client or
an IM client that supports multiple accounts.

00:11:05.910 --> 00:11:12.060
And then the dashboard could be used to display
those.

00:11:12.060 --> 00:11:17.740
Recommendations for using a dashboard.
So do highlight what's new.

00:11:17.740 --> 00:11:22.990
A good way to think of it is -- go back to
the example -- you know, think about a restaurant

00:11:22.990 --> 00:11:26.400
that you really enjoy going to.
You go to the restaurant, and you have the

00:11:26.400 --> 00:11:29.220
menu.
And that doesn't tend to change over time.

00:11:29.220 --> 00:11:32.480
But you'll sit down at your table and get
a set of specials.

00:11:32.480 --> 00:11:35.630
The screen is trying to kind of play both
of those.

00:11:35.630 --> 00:11:39.480
You know, the top part is fixed, reliable,
you know where things are, you know how to

00:11:39.480 --> 00:11:43.210
get to it.
The bottom part, show a little update, something

00:11:43.210 --> 00:11:48.500
that's new for this user, back to the notion
of content specific for the user.

00:11:48.500 --> 00:11:53.360
Or if you don't have that, if that's not appropriate
for your application, is there a new feature?

00:11:53.360 --> 00:11:57.360
Is there something new for the kind of broad
community of users of your app that you can

00:11:57.360 --> 00:12:07.300
call their attention to?
Do focus on just the most important choices

00:12:07.300 --> 00:12:11.050
that the user can make.
The guidance we give here is, three to six.

00:12:11.050 --> 00:12:15.920
Internally, we kind of call that set of icons
the six-pack, it's a two by three or two by

00:12:15.920 --> 00:12:22.570
three arrangements of up to six items.
It's trying to convey the most important things

00:12:22.570 --> 00:12:26.040
your app does.
And be flavorful.

00:12:26.040 --> 00:12:31.131
This is one of the rare chances inside your
app where you have a lot of screen real estate

00:12:31.131 --> 00:12:35.130
to play with for kind of showcasing the brand,
the identity.

00:12:35.130 --> 00:12:42.830
Like, if you're a service or you're a companion
app for a service, showcase that.

00:12:42.830 --> 00:12:49.150
The next pattern is the action bar.
You've seen this pattern in the -- the I/O

00:12:49.150 --> 00:12:54.520
conference app, in fact.
So the action bar is that top area of the

00:12:54.520 --> 00:12:59.820
screen, kind of that light blue box on the
far left, you can imagine that being the application

00:12:59.820 --> 00:13:01.790
icon.
It's got a title.

00:13:01.790 --> 00:13:10.029
And then at right, it's got a set of actions.
The action bar is trying to solve the question

00:13:10.029 --> 00:13:19.050
of, well, how can I do app- -- or task A quickly?
It's a fixed set of real estate at the top

00:13:19.050 --> 00:13:25.040
of the screen.
It can -- it should show up through most of

00:13:25.040 --> 00:13:29.270
the content inside your app.
It's not exactly a Toolbar.

00:13:29.270 --> 00:13:34.410
We're not going to put every item on there.
It's also not a replacement for the menu.

00:13:34.410 --> 00:13:39.089
It's really just to take a few items and elevate
them.

00:13:39.089 --> 00:13:42.420
It replaces the title bar.
You can kind of include the title inside of

00:13:42.420 --> 00:13:47.680
that so you kind of swap the quick action
bar for a title bar.

00:13:47.680 --> 00:13:50.560
It's best for actions that span across your
app.

00:13:50.560 --> 00:13:56.610
Some candidates might be things like search
that you want available for a variety of contexts.

00:13:56.610 --> 00:13:59.560
Refresh.
Maybe you always want to have a way to compose

00:13:59.560 --> 00:14:02.790
a new piece of content related to your app
from any context.

00:14:02.790 --> 00:14:08.520
You can also use it to provide a quick link
back up to the dashboard.

00:14:08.520 --> 00:14:13.390
So you can, you know, imagine just users from
the Web are familiar with this notion of kind

00:14:13.390 --> 00:14:19.850
of clicking at the upper left of a page on
a logo to go back to the home of that app.

00:14:19.850 --> 00:14:27.170
We have the same affordance here.
A few recommendations.

00:14:27.170 --> 00:14:30.460
So, again, use it to bring just the key actions
on screen.

00:14:30.460 --> 00:14:35.980
A good litmus test would be, you know, what
are the actions that the user shouldn't have

00:14:35.980 --> 00:14:41.980
to press menu to get at inside of my app?
Just bring those handful forward.

00:14:41.980 --> 00:14:46.510
We tend to try to keep it to three or less
as the guidance, just to make it kind of very

00:14:46.510 --> 00:14:51.440
obvious.
Use the action bar to give a sense of place.

00:14:51.440 --> 00:14:55.860
You know in Android that it's very easy to
kind of teleport from place -- from app to

00:14:55.860 --> 00:15:02.390
app to app following a series of intents.
Using that action bar at the top, just kind

00:15:02.390 --> 00:15:07.490
of brand your app, let the user know where
they've landed after following this intent

00:15:07.490 --> 00:15:13.310
helps give the user a sense of where they
are and where they can back away from.

00:15:13.310 --> 00:15:16.110
Use it consistently.
So if you're going to put the action bar in

00:15:16.110 --> 00:15:18.810
there, it should show up on most screens in
your app.

00:15:18.810 --> 00:15:24.240
And also, if you're going to have actions
in the action bar, you know, order them consistently,

00:15:24.240 --> 00:15:27.610
try to use them in the same pattern.
Don't have search move from here to there

00:15:27.610 --> 00:15:33.410
as we move from one screen to another.
And then, finally, don't use it for contextual

00:15:33.410 --> 00:15:36.300
actions.
We have another pattern that we'd like you

00:15:36.300 --> 00:15:40.839
to consider for that.
And that's quick actions.

00:15:40.839 --> 00:15:46.279
So two examples here for quick actions.
On the left, you're seeing kind of a quick

00:15:46.279 --> 00:15:53.390
action popping up for an update that someone
from the Android fanatics community has posted.

00:15:53.390 --> 00:16:00.040
On the right, you're seeing another quick
actions popup, but this time, coming out of

00:16:00.040 --> 00:16:08.420
the contact frame, the image of the person
that posted it.

00:16:08.420 --> 00:16:13.680
Quick actions are just a quick way to say,
well, what can I do with this thing?

00:16:13.680 --> 00:16:19.770
You have a distinct target on the screen that
the actions are emerging from.

00:16:19.770 --> 00:16:25.459
In the case of the one on the left here, there's
actually a target on the right-hand side that

00:16:25.459 --> 00:16:30.200
just looks like the "more" button that the
user can tap and up come the quick actions.

00:16:30.200 --> 00:16:35.180
On the one on the right, just press on the
user's picture. Up come the quick actions.

00:16:35.180 --> 00:16:39.970
The reason the visual target is important
is we have seen at Android there is immense

00:16:39.970 --> 00:16:46.340
power to contextual actions, and once people
can get I can long press on things to do more

00:16:46.340 --> 00:16:54.250
things with the thing, they enjoy that.
A lot of people never get to that stage or

00:16:54.250 --> 00:16:58.600
they are just not fully conscious of it and
just don't think of it in all the different

00:16:58.600 --> 00:17:03.279
contexts it can appear.
So giving you an on-screen target lets you

00:17:03.279 --> 00:17:09.970
know there's something I can do here.
We try to make them minimally disruptive to

00:17:09.970 --> 00:17:15.289
the screen context. They are kind of popping
above or below the item they are acting on.

00:17:15.289 --> 00:17:21.919
They don't cover up the item like a traditional
contextual items dialogue would.

00:17:21.919 --> 00:17:26.289
And the actions themselves should be pretty
straightforward. Ideally you can communicate

00:17:26.289 --> 00:17:32.289
them with just an icon or with an icon and
just a word or two of labels.

00:17:32.289 --> 00:17:38.460
You want the actions to be really immediate
and obvious, just so as they pop up -- you

00:17:38.460 --> 00:17:41.929
don't want the user to get into this case
of thinking about, well, what are all the

00:17:41.929 --> 00:17:47.269
things I could do? Again, focus on the most
obvious things that they might want to do.

00:17:47.269 --> 00:17:51.779
And it should be fast and fun. If any of you
were in the talk earlier today, there was

00:17:51.779 --> 00:17:58.399
a presentation that a couple of designers
from YouTube gave about a positive user experience

00:17:58.399 --> 00:18:03.989
and they laid out seven principles. And the
first principle was to be fast.

00:18:03.989 --> 00:18:10.570
They actually said that fast is the most important
feature. I wouldn't argue that right now,

00:18:10.570 --> 00:18:14.749
but I think there's a lot of value to fast.
And they kind of made a good argument that

00:18:14.749 --> 00:18:20.480
fast is good for both new users who don't
understand why a product would be slow and

00:18:20.480 --> 00:18:25.779
are ready to just sort of back away if a product
is not responsive as well as for veteran users

00:18:25.779 --> 00:18:35.950
who just want to get through it.
So quick actions hopefully serve both of those.

00:18:35.950 --> 00:18:41.220
Recommendations for quick actions. These are
gait when you have competing internal targets.

00:18:41.220 --> 00:18:47.270
If we go back to the example here, for this
update, you have a lot of, things going on.

00:18:47.270 --> 00:18:51.619
You have the person who updated it, you have
the text of their update, you have the time.

00:18:51.619 --> 00:18:56.450
Their update may contain hyperlink or other
things.

00:18:56.450 --> 00:19:04.080
If we take the example on the right and I
want to tap on Brandi Shaffer's update. The

00:19:04.080 --> 00:19:08.100
fact that that URL there actually is a big
target, so where am I going to press if I

00:19:08.100 --> 00:19:12.230
don't want to follow the link but I actually
want to do something like forward this whole

00:19:12.230 --> 00:19:18.149
update to a friend. Giving a distinct target
on the side for doing something with the update

00:19:18.149 --> 00:19:21.740
and a separate target for an update and a
link on the left for do something with this

00:19:21.740 --> 00:19:32.730
person helps resolve that.
You should only import -- present it for the

00:19:32.730 --> 00:19:39.240
most important and obvious actions. You can
use it when there's no kind of further detail

00:19:39.240 --> 00:19:44.940
view for an item. Something like a list of
songs. If I press on a song, I'm off to now

00:19:44.940 --> 00:19:48.830
playing and the music is starting but there's
kind of no other stuff about the song.

00:19:48.830 --> 00:19:54.390
I could use a quick action to bring up rating
or recommend this to a friend, things like

00:19:54.390 --> 00:19:59.340
that.
And don't use it in contexts where you have

00:19:59.340 --> 00:20:05.052
multiple selection. A good example is maybe
an e-mail client where you have got kind of

00:20:05.052 --> 00:20:09.260
a list of messages. There, if you look at
the way we have approached e-mail and Gmail

00:20:09.260 --> 00:20:13.809
on the devices, we give you a set of leading
check boxes. You can hit those check boxes,

00:20:13.809 --> 00:20:18.549
and then once something is selected, a bottom
button bar appears at the bottom of the screen

00:20:18.549 --> 00:20:23.450
which gives you actions you can take on that
selection state. Either use that system or

00:20:23.450 --> 00:20:28.720
use quick actions, but try not to mix the
two.

00:20:28.720 --> 00:20:33.309
The fourth pattern I would like to talk about
today is the search bar. So two examples here.

00:20:33.309 --> 00:20:39.929
In the left one, an empty search has come
up and the user has just pressed on the icon

00:20:39.929 --> 00:20:44.409
to the left of the search field. And then
they have gotten a pop-up selector, which

00:20:44.409 --> 00:20:49.070
looks a lot like the quick actions pop-up,
for choosing what search mode they would like

00:20:49.070 --> 00:20:54.950
to use, whether they would like to search
friends or add reviews.

00:20:54.950 --> 00:20:59.609
On the right, we have got a query that's in
progress. The user started typing, and suggestions

00:20:59.609 --> 00:21:04.309
are starting to be presented.
So the search bar addresses the problem of

00:21:04.309 --> 00:21:11.279
how can I find something. It anchors to the
top of the screen. So if you are using an

00:21:11.279 --> 00:21:17.769
action bar, the search bar replaces that same
real estate. Just flip it in.

00:21:17.769 --> 00:21:24.139
It should support suggestions. And you can
also use what we call the corpora selector

00:21:24.139 --> 00:21:27.039
to change the search mode. It's the pop-up
I talked about.

00:21:27.039 --> 00:21:31.350
Not all are apps are going to have multiple
search modes, and even those that do, you

00:21:31.350 --> 00:21:36.330
might choose to not use that selector and
instead just have an item up here in the suggestions

00:21:36.330 --> 00:21:42.509
list that offers pivoting to the other search
mode.

00:21:42.509 --> 00:21:49.970
A few suggestions. Do use the search bar for
simple searches. Let's go back to the song

00:21:49.970 --> 00:21:55.700
list we were talking about. That could be
a long list. If you are one of the attendees

00:21:55.700 --> 00:21:59.970
who got a Motorola Droid, you might think
if I am trying to find a particular song I

00:21:59.970 --> 00:22:04.390
can open up the keyboard and start typing
and it will filter to it. And that will work

00:22:04.390 --> 00:22:09.070
if you are on a keyboard.
If you are on the Nexus One, there's a work-around

00:22:09.070 --> 00:22:14.029
for that. You can lean on the menu button
and the keyboard will come up but not everybody

00:22:14.029 --> 00:22:18.749
realizes that. So using the search bar to
just kind of say there's a way you can search,

00:22:18.749 --> 00:22:25.510
even if it just does a simple filter of the
list, can provide value to the user.

00:22:25.510 --> 00:22:30.609
Present rich suggestions. Don't just give
the label. Give some secondary bits of information.

00:22:30.609 --> 00:22:35.360
If I am in that song list, it kind of matters
whether I am getting Pink Floyd's "Money"

00:22:35.360 --> 00:22:40.609
or Eddie Money's "Money." So give that second
bit of info.

00:22:40.609 --> 00:22:44.451
And then use the behavior consistently. You
might have the search button on the screen.

00:22:44.451 --> 00:22:50.831
You might have a search hard key on your device,
depending on the manufacturer. You might even

00:22:50.831 --> 00:22:55.120
have search within the menu. Those should
all go to the same place. They should all

00:22:55.120 --> 00:23:01.119
make the search bar appear.
The last pattern I will cover is the companion

00:23:01.119 --> 00:23:04.070
widget.
So here I have done a kind of four-by-one

00:23:04.070 --> 00:23:10.210
widget for the Android fanatics app. So it
shows you how many new updates you have got,

00:23:10.210 --> 00:23:18.710
the most recent update that's come in, and
there is a quick link for composing a message.

00:23:18.710 --> 00:23:23.529
So the companion widget tries to address the
question of how can I make this app kind of

00:23:23.529 --> 00:23:28.869
a fun part of my home experience? So it's
trying to support the app by bringing some

00:23:28.869 --> 00:23:35.290
of its content and capabilities forward into
the home screen. When the user is at the home

00:23:35.290 --> 00:23:38.609
screen, they don't always necessarily know
what they want to do. Sometimes they are just

00:23:38.609 --> 00:23:46.129
browsing. This is your opportunity for the
app to kind of go, "Pick me, pick me!"

00:23:46.129 --> 00:23:52.479
And also, companion widget makes home feel
more custom, more personalized. We hear repeatedly

00:23:52.479 --> 00:23:57.259
from users that one of the things that they
appreciate most about the Android experience

00:23:57.259 --> 00:24:02.320
is how much control we give them over their
home; that we let them have different wallpapers,

00:24:02.320 --> 00:24:07.249
even live wallpapers; that we let them put
lots of interesting shortcuts; that they have

00:24:07.249 --> 00:24:12.379
folders; that they have widgets; that they
don't have to just kind of put things in a

00:24:12.379 --> 00:24:18.739
square grid that works from left to right.
Anything you can do to kind of foster that

00:24:18.739 --> 00:24:27.450
is playing to something users already value.
So a few recommendations. Do provide value

00:24:27.450 --> 00:24:35.029
above a simple app icon. Bring forward that
user content.

00:24:35.029 --> 00:24:40.450
Don't try to do everything in a widget. It's
okay to have pointers into tasks, but once

00:24:40.450 --> 00:24:45.470
the users pick that, take them into your app
to do that. The compose link is a good example

00:24:45.470 --> 00:24:50.249
there. They hit compose, take them into your
app, take them into the part of the app that

00:24:50.249 --> 00:24:53.700
has the compose activity and let them work
from there.

00:24:53.700 --> 00:25:00.269
Be space efficient. If you want to do a large
widget, cool. But also think about offering

00:25:00.269 --> 00:25:05.609
a smaller variant widget that users are more
concerned about how constrained their space

00:25:05.609 --> 00:25:10.770
is on home. And don't just be a large app
launcher.

00:25:10.770 --> 00:25:16.750
So wrapping these all together. Some of the
interaction that goes into building a really

00:25:16.750 --> 00:25:22.929
good Android app, you've got a widget that
can feed you into your app. You have the dashboard

00:25:22.929 --> 00:25:27.970
that lays out all the things your app can
do. From the dashboard, you may have an action

00:25:27.970 --> 00:25:31.960
bar or you may go into other screens that
support the action bar. Action bar might pivot

00:25:31.960 --> 00:25:39.241
off to search. And then individual screens
can support quick actions for the items the

00:25:39.241 --> 00:25:41.239
items that you display there.
Thank you for your attention.

00:25:41.239 --> 00:25:45.600
Now that we have covered some of the interaction
stuff, I want to welcome Christian Robertson

00:25:45.600 --> 00:25:49.350
to the stage to talk a little bit about visual
design.

00:25:49.350 --> 00:25:58.729
[ Applause ]
&gt;&gt;Christian Robertson: Okay. So Jim started

00:25:58.729 --> 00:26:04.559
off by talking about a lot of things that
have changed since the last I/O with Android,

00:26:04.559 --> 00:26:07.800
and there's a lot of exciting things going
on. And one of the things that we're really

00:26:07.800 --> 00:26:15.669
excited about is the number of new and diversity
of devices that have been launched.

00:26:15.669 --> 00:26:22.580
And at the same time, we're aware that this
causes some challenges for designers and developers,

00:26:22.580 --> 00:26:27.919
creating Android applications.
In particular, there are some new screen sizes

00:26:27.919 --> 00:26:34.009
to consider. Now, if you were in the last
session, you may have heard a bit about the

00:26:34.009 --> 00:26:38.649
idea of pixel density. We find that as we
are talking with developers, this is one of

00:26:38.649 --> 00:26:43.759
the places where we get the most questions,
is how does pixel density work.

00:26:43.759 --> 00:26:48.510
So if you can see this example that I have
up on the screen, you can see that on the

00:26:48.510 --> 00:26:53.419
left, we have a device that the screen size
is about 3.inches, on the right, 3.2 inches,

00:26:53.419 --> 00:26:59.210
but you will also notice that the device on
the left has more than double the number of

00:26:59.210 --> 00:27:04.029
pixels.
So Android is aware of this difference in

00:27:04.029 --> 00:27:10.179
pixel density and classifies devices that
have a lot of pixels in a small space as hdpi,

00:27:10.179 --> 00:27:17.240
or high density devices, and likewise there's
a classification for mdpi, or medium density,

00:27:17.240 --> 00:27:23.539
and even ldpi for low density.
The idea here is we want to keep assets at

00:27:23.539 --> 00:27:30.359
roughly the same physical size. So, for example,
if you design icons to fit human sized fingers

00:27:30.359 --> 00:27:37.191
for -- let's say it's a Hero device and take
and run your application then on a Nexus One,

00:27:37.191 --> 00:27:43.510
you want the icon to be the same physical
size and still match the size of real human

00:27:43.510 --> 00:27:49.009
fingers.
So Android does some things behind the scenes.

00:27:49.009 --> 00:27:56.879
One thing that it does is it will auto scale
assets from an mdpi asset, and scale those

00:27:56.879 --> 00:28:02.479
up for hdpi screens. So you can see we have
two assets here. The left one is hdpi, the

00:28:02.479 --> 00:28:06.860
right one is mdpi. And notice the one on the
right as it's scaled up to the same size is

00:28:06.860 --> 00:28:13.109
a lot blurrier.
So Android has some features that deal with

00:28:13.109 --> 00:28:18.409
that.
What this looks like for developers is, if

00:28:18.409 --> 00:28:24.210
you just take a look here, I have got an additional
directory that I have added for my hdpi drawables.

00:28:24.210 --> 00:28:31.090
And if I name the icons or the assets the
same thing, then Android will do the right

00:28:31.090 --> 00:28:39.899
thing and swap out those higher density assets.
So this adds a little bit of extra work to

00:28:39.899 --> 00:28:49.979
the development process, but we feel it's
worth it to really take advantage of these

00:28:49.979 --> 00:28:55.999
amazing high resolution screens.
So what does the work flow look like from

00:28:55.999 --> 00:29:01.149
an asset production standpoint? It's pretty
straightforward. I'll walk you through and

00:29:01.149 --> 00:29:06.179
point out a couple potential pitfalls.
So let's say that this is my mdpi asset that

00:29:06.179 --> 00:29:18.260
I want to resize. I am going to scale it up.
Now, the magic number here is 150%. So if

00:29:18.260 --> 00:29:25.119
I scale by a factor of 1.5, then my mdpi assets
will be the correct size for hdpi.

00:29:25.119 --> 00:29:30.580
Now, one thing to note is that it's a lot
easier if you are scaling up assets that are

00:29:30.580 --> 00:29:37.059
vector based already. So whether you are using
PhotoShop or Inkscape or whatever, starting

00:29:37.059 --> 00:29:41.570
with vectors makes it easier later on of and
if you have assets where you only have bitmap

00:29:41.570 --> 00:29:47.940
source, you might need to reauthor.
So I am going to scale this up and things

00:29:47.940 --> 00:29:52.999
look pretty good. PhotoShop's sample algorithm
in this case is pretty decent. You will notice,

00:29:52.999 --> 00:30:01.229
though, that sometimes when you scale up one
pixel lines that things might get a little

00:30:01.229 --> 00:30:05.190
bit fuzzy and you might need to clean those
things up. So this is especially true for

00:30:05.190 --> 00:30:09.799
Nine-Patch images. If you scale up the tick
marks, you will have to clean up those tick

00:30:09.799 --> 00:30:13.539
marks; otherwise, your Nine-Patches won't
work.

00:30:13.539 --> 00:30:24.320
And that's it for supporting multiple screen
sizes.

00:30:24.320 --> 00:30:31.379
So another thing that's changed in the last
year is we have launched a new style for our

00:30:31.379 --> 00:30:40.340
icon guidelines.
Now, as we have watched what happened in the

00:30:40.340 --> 00:30:45.639
marketplace, we have seen an amazing increase
in the number of applications. You guys have

00:30:45.639 --> 00:30:50.749
been working really hard, and we're really
excited about that.

00:30:50.749 --> 00:30:57.330
As we were thinking about the new application
style, we wanted to create a -- some guidelines

00:30:57.330 --> 00:31:02.239
that would support the growing diversity of
applications. And to enable that diversity,

00:31:02.239 --> 00:31:08.549
we created an icon system that has diverse
shapes, materials, and colors. And at the

00:31:08.549 --> 00:31:14.840
same time we want to establish a few unifying
elements to help the system fit together,

00:31:14.840 --> 00:31:19.049
and to raise the bar of quality for the visual
design in Android.

00:31:19.049 --> 00:31:25.429
So some of the characteristics are the icons
are tactile. So even the more minimal icons

00:31:25.429 --> 00:31:31.159
feel like they are made out of a material.
They are top-lit, matte, and forward facing,

00:31:31.159 --> 00:31:40.179
which helps them work in some of the new 3D
launcher menus. And also to reduce the visual

00:31:40.179 --> 00:31:46.610
complexity, we use synecdoche, which is where
we will take one component piece of an application

00:31:46.610 --> 00:31:51.100
and use that to represent the whole application.
So for example, the settings icon is simply

00:31:51.100 --> 00:31:57.779
one settings dial and not a picture of a whole
control panel. Or the calculator icon is simply

00:31:57.779 --> 00:32:02.659
the equals key instead of a picture of an
entire calculator.

00:32:02.659 --> 00:32:08.669
So to keep that simplicity. And again, our
highest goal is to support the diversity of

00:32:08.669 --> 00:32:13.349
applications and brands in the marketplace.
So we are excited to see what the community

00:32:13.349 --> 00:32:16.639
adds to the mix.
In fact, when we were designing this icon

00:32:16.639 --> 00:32:22.629
set, we took a representative sample of unique
icons that people were making in the community

00:32:22.629 --> 00:32:29.270
and mixed them together to see if it could
feel cohesive, and we feel like this new style

00:32:29.270 --> 00:32:38.970
really does enable that expansion.
Okay. So to help developers get off the ground

00:32:38.970 --> 00:32:46.609
with this new icon style, we're providing
launcher icon template kit. And let me show

00:32:46.609 --> 00:32:50.999
you how it works.
So let's say that you have a vector-based

00:32:50.999 --> 00:32:56.190
logo. You would like to apply it to your application.
So I am going to grab this square tile and

00:32:56.190 --> 00:33:01.629
I might want to change it to match the color
of my brand. In this case, I like the green.

00:33:01.629 --> 00:33:08.950
I will then simply add my vector art. Maybe
I am importing it from illustrator here. And

00:33:08.950 --> 00:33:15.899
then apply some layer effects that are included
in the kit. And very quickly have a passible

00:33:15.899 --> 00:33:22.879
logo. Or a passible icon based on my logo.
So we acknowledge that there will be a lot

00:33:22.879 --> 00:33:28.299
of brands will want to take the rendering
much further with the icons, but we thought

00:33:28.299 --> 00:33:33.529
that this would be a helpful way to help people
get started.

00:33:33.529 --> 00:33:40.559
So, really, one of Android's strong points
is its flexibility. And we believe that it

00:33:40.559 --> 00:33:47.549
should be true of the visuals as well.
So with enabling an icon system that encourages

00:33:47.549 --> 00:33:55.389
diversity as well as applications that are
distinct and branded, that we can fulfill

00:33:55.389 --> 00:33:59.299
this vision for Android. And I am going to
pass the baton next to Chris who is going

00:33:59.299 --> 00:34:06.279
to show us an example of how these new design
patterns, plus customized branded assets,

00:34:06.279 --> 00:34:09.490
can continue to tell the story.
[ Applause ]

00:34:09.490 --> 00:34:20.409
&gt;&gt;Chris Nesladek: Hello. I am Chris Nesladek,
and I am here today to demo an application

00:34:20.409 --> 00:34:24.929
which many of you probably have downloaded
that shows off the best of these patterns

00:34:24.929 --> 00:34:32.750
and polish techniques that we recently shipped.
Let's get started looking at Twitter for Android,

00:34:32.750 --> 00:34:38.079
shall we?
So we start with the dashboard firmly in place,

00:34:38.079 --> 00:34:42.839
and as you can see, the one twist that we
have done with the dashboard immediately is

00:34:42.839 --> 00:34:48.859
to use the goodness of live wallpapers that
we shipped in Android 2.1 and animate the

00:34:48.859 --> 00:34:52.210
home screen.
Those are Twitter clouds and that's the Twitter

00:34:52.210 --> 00:34:59.029
bird. And if you notice, it's fun and functional
and just a little bit more than just a home

00:34:59.029 --> 00:35:03.039
orientation activity that Richard described
previously.

00:35:03.039 --> 00:35:09.099
That bird is actually look at me right now,
and you can decide if that's strange or weird.

00:35:09.099 --> 00:35:13.859
But I prefer to say that's cute.
Anyway.

00:35:13.859 --> 00:35:18.670
Those are real-time trend bubbles as well.
And again, we have the action bar at the top

00:35:18.670 --> 00:35:22.400
to orient the user.
So the next pattern I am going to demo is

00:35:22.400 --> 00:35:27.980
obviously the action bar. Can someone tell
me what would be a primary activity for any

00:35:27.980 --> 00:35:29.809
Twitter application?
&gt;&gt;&gt; Tweet.

00:35:29.809 --> 00:35:35.510
&gt;&gt;Chris Nesladek: There we go, tweet. So with
the new action bar pattern in place, I can

00:35:35.510 --> 00:35:39.920
tap the tweet icon and get taken to the tweet
compose activity.

00:35:39.920 --> 00:35:46.730
Now, here you can see that those most common
functions are actually on screen for the user,

00:35:46.730 --> 00:35:51.450
like in view. But we haven't given up the
functionality of the main menu.

00:35:51.450 --> 00:35:55.500
What I want to point out is that while you
can surface the most important actions, you

00:35:55.500 --> 00:36:00.680
shouldn't forget about the richness of the
Android UI pattern to use the main menu. Rather,

00:36:00.680 --> 00:36:06.130
using the main menu.
So you can quickly upload a photo if you want.

00:36:06.130 --> 00:36:11.900
You can -- I am not going to do that, though.
You can take a picture, or you can add multiple

00:36:11.900 --> 00:36:20.839
"at" user names with a picker that we implemented
as well, making it easier for you to tweet.

00:36:20.839 --> 00:36:24.260
One other nice feature, by the way, I want
to call out is in the main menu, you can toggle

00:36:24.260 --> 00:36:29.420
switch to direct message through this.
So let's go back to the dashboard, though.

00:36:29.420 --> 00:36:32.980
You don't have to go back to the dashboard.
I will show you a little trick later. But

00:36:32.980 --> 00:36:39.109
tap the Twitter logo which takes us to the
app home, and you are back on the dashboard.

00:36:39.109 --> 00:36:47.970
Now, from the dashboard, the next pattern
is obviously visible, is the search bar.

00:36:47.970 --> 00:36:53.880
Now, when you go to search -- unfortunately,
I should have search suggestions, but I don't,

00:36:53.880 --> 00:36:59.359
as recommended. However, if you tap the upper
left you can pivot between tweets and people.

00:36:59.359 --> 00:37:10.010
So with the new search bar corpora bubble
thingy, as I like to call it, anyway, search

00:37:10.010 --> 00:37:14.950
suggestions are recommended as well as if
I did search for something, it would actually

00:37:14.950 --> 00:37:23.290
hold my -- there it is. So there's suggestions.
Well done, implemented correctly. And then

00:37:23.290 --> 00:37:37.240
if I search for Google I/O for tweets, it
will hold my history.

00:37:37.240 --> 00:37:46.750
As we go back.
Photograph do that and tap. There it is. Implemented

00:37:46.750 --> 00:37:55.520
correctly.
The next thing would be quick actions. My

00:37:55.520 --> 00:38:00.890
favorite pattern. In fact, quick actions has
been a passion because for me, long press

00:38:00.890 --> 00:38:06.349
is so powerful but was very destructive once
we surfaced it as a dialogue on top of the

00:38:06.349 --> 00:38:11.119
data which you were trying to act on. So with
quick actions what we are able to do as you

00:38:11.119 --> 00:38:15.900
can see in this activity there is an on screen
affordance. You tap it, and up pops a rail

00:38:15.900 --> 00:38:19.650
of actions that are not covering the data
that you wish to act on.

00:38:19.650 --> 00:38:25.890
Now, as mentioned previously by Richard, turning
off the ListView button element is recommended

00:38:25.890 --> 00:38:33.279
so you can quickly let a user tap a link and
make that actionable for them, as well as

00:38:33.279 --> 00:38:39.020
in this view don't forget to use the main
menu for any overflow functions that might

00:38:39.020 --> 00:38:44.900
be hard to tap. There is a tweet meta data
link that's inside of this list view, but

00:38:44.900 --> 00:38:50.050
sometimes people find that hard to hit so
as a designer view on map was put into the

00:38:50.050 --> 00:38:54.539
main menu.
So we have done dashboard, action bar, search

00:38:54.539 --> 00:39:03.680
bar, quick actions. Next up -- we are flying
through this. Dashboard, action bar, search

00:39:03.680 --> 00:39:07.440
bar, quick actions, yep.
Next up is the companion widget.

00:39:07.440 --> 00:39:12.760
The companion widget on the Twitter app was
implemented in two ways.

00:39:12.760 --> 00:39:16.559
It was implemented as a large and a small
widget.

00:39:16.559 --> 00:39:22.819
That button, it's not a -- it's not implemented
as just a button, but, rather, you have one

00:39:22.819 --> 00:39:27.660
action associated with it.
For example, in the small widget, you can

00:39:27.660 --> 00:39:31.809
tap this and be taken to a tweet compose to
reply to that tweet.

00:39:31.809 --> 00:39:35.980
Or -- uh-oh.
We just lost it.

00:39:35.980 --> 00:39:41.839
But it's back.
Or on a large widget, you can use that to

00:39:41.839 --> 00:39:48.400
tweet something of your own.
All right.

00:39:48.400 --> 00:39:54.680
So I've covered dashboard, action bar, search
bar, quick actions, as well as the on-screen

00:39:54.680 --> 00:39:57.900
widgets.
The last two points I'd like to make to you

00:39:57.900 --> 00:40:04.020
today before we take your questions is that
if you think about patterns, a good example

00:40:04.020 --> 00:40:07.510
is to think about layering patterns into your
activities.

00:40:07.510 --> 00:40:13.109
So if you look at our tweet -- our profile
section here, what you can see is, I just

00:40:13.109 --> 00:40:16.029
tapped on the tweets in the upper left-hand
portion of the screen.

00:40:16.029 --> 00:40:20.039
And that function is actually the search bar
pattern.

00:40:20.039 --> 00:40:24.829
Ordinarily, as a designer, I might have chosen
to use tabs in this view to pivot on multiple

00:40:24.829 --> 00:40:29.279
points, data sets.
However, when you think about it, that bubble

00:40:29.279 --> 00:40:34.079
is more friendly and faster for some people,
and I don't have to actually ask a developer

00:40:34.079 --> 00:40:39.789
to implement flickable tabs, which are a problem,
because, basically, a user can never know

00:40:39.789 --> 00:40:44.770
how many different data sets exist.
So if you think about using patterns, try

00:40:44.770 --> 00:40:48.589
to use them in creative ways.
Also, you can see that the action bar is laid

00:40:48.589 --> 00:40:52.400
out on screen with quick actions here and
the main menu.

00:40:52.400 --> 00:40:59.329
So we've been able to layer in more functionality
in a rich way, which is the Android user experience

00:40:59.329 --> 00:41:04.289
in a nutshell.
And on top of that, what's even more important

00:41:04.289 --> 00:41:09.210
is to think about, as Christian talked about,
polish.

00:41:09.210 --> 00:41:13.900
And with polish, what you want to do, as you
can see -- we'll actually look at this side

00:41:13.900 --> 00:41:19.070
by side -- you want to support multiple densities.
You're going to have to do a little bit of

00:41:19.070 --> 00:41:25.640
tweakage with the assets, as we talked about.
On the left is the htpi version of the Twitter

00:41:25.640 --> 00:41:28.539
app.
And on the right is the mdpi app.

00:41:28.539 --> 00:41:35.910
The mdpi portion of this was equally challenging.
But basically if you spend the time and the

00:41:35.910 --> 00:41:39.970
pixels, you can get an app to look great on
both densities.

00:41:39.970 --> 00:41:44.359
So with that, I'd like to take all -- we'd
like to take your questions right now and

00:41:44.359 --> 00:41:46.829
see what's on your mind.
Thank you.

00:41:46.829 --> 00:41:55.839
[ Applause ]
&gt;&gt;Jim Palmer: Thanks, Chris.

00:41:55.839 --> 00:42:02.190
We can also invite Mike (saying name) up on
stage to answer questions.

00:42:02.190 --> 00:42:07.789
Before we take questions from the audience,
we want to do the Q&amp;A nerd question.

00:42:07.789 --> 00:42:11.260
Who can identify the rhetorical device?
&gt;&gt;&gt; (inaudible).

00:42:11.260 --> 00:42:19.529
&gt;&gt;Jim Palmer: It is, indeed.
Also a movie by Walter Kaufman.

00:42:19.529 --> 00:42:30.070
Here's your SYNECDOCHE, which is a rhetorical
device for associating something, a part for

00:42:30.070 --> 00:42:34.069
the whole or something closely related to
a part for the whole.

00:42:34.069 --> 00:42:37.819
Great get there.
Let's switch over to questions.

00:42:37.819 --> 00:42:43.859
Let's start with a few from the floor, and
then we'll also -- can you bring up the Wave

00:42:43.859 --> 00:42:44.859
so we can look.
Yes.

00:42:44.859 --> 00:42:46.810
&gt;&gt;&gt; Hello.
Roland Schweitzer.

00:42:46.810 --> 00:42:52.220
I'm App Weather.
I agree that context menus are destructive

00:42:52.220 --> 00:42:57.010
from the point of view that they often cover
up the data that you're trying to act on.

00:42:57.010 --> 00:43:01.210
But from a developer's point of view, they're
nice because they're part of the framework.

00:43:01.210 --> 00:43:08.640
So will action bars, quick action bars and
that sort of pattern become part of the -- the

00:43:08.640 --> 00:43:13.029
underlying Android frameworks to make it easy
for us to implement on those?

00:43:13.029 --> 00:43:22.250
&gt;&gt;Jim Palmer: Let Mike take this one.
&gt;&gt;&gt; Mike: Probably.

00:43:22.250 --> 00:43:26.230
The pattern that we have been following is,
applications are usually a little ahead of

00:43:26.230 --> 00:43:31.430
the framework, because that's where the pioneering
work goes on in terms of UI patterns.

00:43:31.430 --> 00:43:35.690
So the framework then catches up to what we
determine to be sort of the common or emerging

00:43:35.690 --> 00:43:39.099
patterns.
The action bars look like a winner.

00:43:39.099 --> 00:43:42.839
So making that easy to support in applications
is something that we're working on adding

00:43:42.839 --> 00:43:44.410
to the framework.
&gt;&gt;Jim Palmer: Okay.

00:43:44.410 --> 00:43:46.669
Thank you.
Let's take one from this side over here.

00:43:46.669 --> 00:43:50.569
&gt;&gt;&gt; That was it.
&gt;&gt;Jim Palmer: That was it.

00:43:50.569 --> 00:43:53.450
Great.
Let me take one off the Wave.

00:43:53.450 --> 00:43:57.430
The second one here, what's Google's stance
on hardware manufacturers overlaying their

00:43:57.430 --> 00:44:01.619
own UI enhancements over stock Android?
Is this something which will be discouraged

00:44:01.619 --> 00:44:05.390
in the future?
No, actually, we love the fact that Android's

00:44:05.390 --> 00:44:07.810
open and people can do their own things with
it.

00:44:07.810 --> 00:44:12.060
We think it's great for the -- both the products
and for us as designers to see what other

00:44:12.060 --> 00:44:16.730
people do with it.
So, you know, we're perfectly happy with that

00:44:16.730 --> 00:44:18.549
as the plan going forward.
Okay.

00:44:18.549 --> 00:44:20.240
Over here.
&gt;&gt;&gt; Yeah.

00:44:20.240 --> 00:44:25.410
So I do a lot of rapid prototyping on various
devices and lately have been doing a lot on

00:44:25.410 --> 00:44:29.740
Android.
And one of the things I notice is that in

00:44:29.740 --> 00:44:35.030
order to build really rich UIs quickly, I
found it easier just to throw up a Web view

00:44:35.030 --> 00:44:40.750
and use HTML, CSS, and JavaScript to get a
lot of stuff that's available to us on the

00:44:40.750 --> 00:44:43.339
Web.
I'm curious what your thoughts are on that

00:44:43.339 --> 00:44:49.049
approach and if you guys use a lot of the
stuff that's associated with the Web technologies

00:44:49.049 --> 00:44:55.339
and will be bringing it to native code.
&gt;&gt;Jim Palmer: So for sure certainly the UI

00:44:55.339 --> 00:45:00.270
team has done some prototyping using Web views
and certain tools that will allow us to sort

00:45:00.270 --> 00:45:03.450
of put it on the phone in a Web view.
There are definitely some differences in the

00:45:03.450 --> 00:45:06.329
behaviors you get with Web views, obviously,
than the full elements.

00:45:06.329 --> 00:45:11.420
But it's great for doing basic sizing and
seeing how the images look as we go forward.

00:45:11.420 --> 00:45:17.319
I don't know, in the long term, you know,
impact of Web views, I think Mike can step

00:45:17.319 --> 00:45:20.670
in and add color here, too, we certainly do
mix those in our apps today.

00:45:20.670 --> 00:45:24.089
There are certain apps that, you know, are
done with native base framework and we use

00:45:24.089 --> 00:45:28.050
that to get the effect.
I think you'll probably continue to see that

00:45:28.050 --> 00:45:34.970
kind of mixing going forwards.
&gt;&gt;&gt; Mike: If you've used our GMail application,

00:45:34.970 --> 00:45:41.420
when you're viewing a GMail conversation,
you're seeing one big Web view, because so

00:45:41.420 --> 00:45:47.380
much of the content is already HTML formatted.
We use the Web view for that display.

00:45:47.380 --> 00:45:51.530
But it fits well with the rest of the application.
&gt;&gt;Jim Palmer: Okay.

00:45:51.530 --> 00:45:55.650
On this side.
&gt;&gt;&gt; What guidelines would you share with developers

00:45:55.650 --> 00:46:02.750
who are trying to bring an application to
mobile and paring down the feature set so

00:46:02.750 --> 00:46:07.880
that it is mobile-specific but also discoverable?
Because oftentimes if you pack too many things

00:46:07.880 --> 00:46:12.910
in, your users can't -- won't latch onto the
mobile version of it.

00:46:12.910 --> 00:46:16.799
If you back too few things in, again, they
won't use it.

00:46:16.799 --> 00:46:22.040
So what balance or guidelines would you share?
&gt;&gt;Richard Fulcher: I think the first question

00:46:22.040 --> 00:46:26.970
you need to ask yourself is kind of given
that the user's now in this mobile context,

00:46:26.970 --> 00:46:31.619
has the set of tasks kind of changed?
What are the most important things for them,

00:46:31.619 --> 00:46:35.700
given that they may be kind of out and about
and not kind of at home?

00:46:35.700 --> 00:46:40.539
So the recommendation I would make is kind
of think about of all of the things you can

00:46:40.539 --> 00:46:45.779
support, which tasks make the most sense and
provide the most value in the mobile context

00:46:45.779 --> 00:46:49.880
as kind of a first-pass strategy for how you
would scale some of that back.

00:46:49.880 --> 00:46:53.992
I guess the second point would be that, you
know, we have -- a couple of times we have

00:46:53.992 --> 00:46:57.349
mentioned that we want you to bring the most
important things to the forefront.

00:46:57.349 --> 00:47:02.079
You can still wind up supporting kind of a
lot of deep, kind of darker, less frequently

00:47:02.079 --> 00:47:09.369
used stuff, but just kind of don't -- don't
pollute the most classic use cases by kind

00:47:09.369 --> 00:47:13.039
of pushing them forward into the screen.
That's a great reason to use quick actions,

00:47:13.039 --> 00:47:17.250
great reason to use the menu drawer to support
those types of behaviors.

00:47:17.250 --> 00:47:21.000
&gt;&gt;Jim Palmer: Chris, do you have any color?
You took Twitter and turned it into a really

00:47:21.000 --> 00:47:24.200
great app.
Any thoughts on that process for just how

00:47:24.200 --> 00:47:29.170
you did that?
&gt;&gt;Chris Nesladek: Make sure you spend a lot

00:47:29.170 --> 00:47:31.839
of time thinking about what's the most important
thing.

00:47:31.839 --> 00:47:35.640
&gt;&gt;Jim Palmer: Yeah, I mean, I think that really
is what it comes down to, is you have to really

00:47:35.640 --> 00:47:41.410
think hard about what is your primary user
story or user use case and make sure you don't

00:47:41.410 --> 00:47:45.599
end up talking yourself into that.
We have this sort of joke that, you know,

00:47:45.599 --> 00:47:49.960
sometimes, you know, people will argue for
any one particular feature which you can make

00:47:49.960 --> 00:47:54.150
very rational arguments for.
Then you look back, you know, a month later

00:47:54.150 --> 00:47:55.520
and go, whoa, how did we end up adding 20
things?

00:47:55.520 --> 00:48:00.559
If you look at the back from how you ended
up somewhere, sometimes every single step

00:48:00.559 --> 00:48:05.540
looks logical, but when you look at the totality,
it's like, that didn't make sense.

00:48:05.540 --> 00:48:10.900
So really sticking closely to, you know, what
really is the essence of your app, that's

00:48:10.900 --> 00:48:14.910
the best guideline we can give.
&gt;&gt;&gt; Mike: Let me add something to that.

00:48:14.910 --> 00:48:18.500
I don't know the particulars of the problem
you're trying to solve, but Android has a

00:48:18.500 --> 00:48:23.900
couple of unique tools that can help with
the complexity of a user with a small screen

00:48:23.900 --> 00:48:29.109
trying to manage some complex space.
In particular, the widgets and background

00:48:29.109 --> 00:48:35.780
tasks and notifications can help with that.
So by having the device doing the work rather

00:48:35.780 --> 00:48:40.500
than the user doing the work, and only surfacing
the things that are interesting to the user,

00:48:40.500 --> 00:48:43.759
you can prevent the user from having to navigate
a lot of complexity.

00:48:43.759 --> 00:48:48.160
So if something shows up in the notification
bar when something interesting happened, I

00:48:48.160 --> 00:48:52.650
may not have to navigate at all.
I can just let background processing and notifications

00:48:52.650 --> 00:48:58.390
have the content come to me rather than having
to build a rich, complicated navigation experience

00:48:58.390 --> 00:49:00.990
on the device.
That's another thing to consider in the Toolkit.

00:49:00.990 --> 00:49:06.069
&gt;&gt;Jim Palmer: Okay.
Let me address another one from the Wave here.

00:49:06.069 --> 00:49:10.950
How can Android itself help developers design
more stylish UI for apps?

00:49:10.950 --> 00:49:12.670
One thing I think for sure is what Mike was
saying.

00:49:12.670 --> 00:49:16.180
Our pattern here is do a lot of exploration
in the apps.

00:49:16.180 --> 00:49:20.829
And we want to be able to push those innovations
that we think really are meaningful down into

00:49:20.829 --> 00:49:24.740
the framework so that they'll be there.
As Christian was noting, though, as well,

00:49:24.740 --> 00:49:27.630
we are aware that we want to help you guys
more.

00:49:27.630 --> 00:49:31.960
So we are looking at publishing some of the
stuff we use, like his icon library and other

00:49:31.960 --> 00:49:36.832
kinds of things up to the site so that, you
know, what we're doing, you know, we share

00:49:36.832 --> 00:49:39.910
as much as possible with you.
Those are the, you know, two sort of concrete

00:49:39.910 --> 00:49:42.329
things we're doing right now.
Okay.

00:49:42.329 --> 00:49:46.980
Over here.
&gt;&gt;&gt; I have a question about making things

00:49:46.980 --> 00:49:52.089
that are clickable obvious that they're clickable.
So if I have a ListView, maybe some of the

00:49:52.089 --> 00:49:56.140
things have additional detail, some don't.
How do I indicate that?

00:49:56.140 --> 00:50:01.559
Or on the Twitter application, to me, it wasn't
readily apparent that the Twitter logo was

00:50:01.559 --> 00:50:02.559
clickable.
&gt;&gt;&gt; Right.

00:50:02.559 --> 00:50:06.789
&gt;&gt;&gt; Is there some -- is there patterns around
that?

00:50:06.789 --> 00:50:10.500
&gt;&gt;Chris Nesladek: Well, frankly, that's -- this
is the first application that actually ships

00:50:10.500 --> 00:50:15.191
with these patterns that we believe will be,
you know -- come in the future.

00:50:15.191 --> 00:50:21.109
So that upper left-hand portion of the screen
is meant to be clickable and an app home.

00:50:21.109 --> 00:50:25.609
Actually, in a hidden way, if you look at
our market application previous to Froyo,

00:50:25.609 --> 00:50:31.450
it actually was tappable, not visible, again,
exactly well for users, but you can hit that

00:50:31.450 --> 00:50:35.420
and then go back to the first place in the
Market home as well.

00:50:35.420 --> 00:50:41.490
So it's just something we think over time,
you know, it's a Web style of UI innovation

00:50:41.490 --> 00:50:45.710
that we're trying to really push forward here.
So if you think about Web sites, in the left-hand

00:50:45.710 --> 00:50:48.059
portion of the screen is generally where you
return home.

00:50:48.059 --> 00:50:51.770
&gt;&gt;Jim Palmer: Yeah, it's a fine line.
There's partially a genre effect here, which

00:50:51.770 --> 00:50:55.000
is as the patterns become established, that's
what people learn.

00:50:55.000 --> 00:51:00.770
In other products, they have other genres,
things that we thought were obvious had to

00:51:00.770 --> 00:51:04.020
be learned on those other platforms.
I think there's another element to what you're

00:51:04.020 --> 00:51:08.349
talking about, which is the visual -- they
all look clickable.

00:51:08.349 --> 00:51:12.940
And this is one of the things we're talking
about a lot from the visual design perspective,

00:51:12.940 --> 00:51:16.839
as Chris, you know, you saw in the visual
design in the Twitter app, all the icons didn't

00:51:16.839 --> 00:51:20.900
necessarily have big frames around them.
There's a line there between making something

00:51:20.900 --> 00:51:26.480
that looks maybe more like a background or
a piece of art versus, you know, something

00:51:26.480 --> 00:51:29.660
that's clickable.
We think there's a way to cut that that makes

00:51:29.660 --> 00:51:34.390
it still look clickable, as well as not always
requiring it to be completely, you know, buffed

00:51:34.390 --> 00:51:37.800
out with all the Chrome.
So I think, you know, that we're going to

00:51:37.800 --> 00:51:41.940
see some more from us on that going forward.
The direction, I think, though ultimately,

00:51:41.940 --> 00:51:45.470
should be as many things as possible on the
screen should be clickable just because people

00:51:45.470 --> 00:51:47.839
do experiment and expect things to happen
when you touch.

00:51:47.839 --> 00:51:49.800
Okay.
Over here.

00:51:49.800 --> 00:51:54.039
&gt;&gt;&gt; Yes, what are the guidelines around orientation
support?

00:51:54.039 --> 00:51:57.910
And the Twitter app is wonderful, but if you
have a Droid and you look at that home screen

00:51:57.910 --> 00:52:00.750
sideways --
&gt;&gt;Chris Nesladek: I'm glad you're saying that,

00:52:00.750 --> 00:52:04.759
because as a developer, you have a choice.
And so do we.

00:52:04.759 --> 00:52:11.640
We chose not to support that landscape orientation.
&gt;&gt;&gt; And then there's another example in the

00:52:11.640 --> 00:52:17.269
Android, this default dialer that when you're
in call, it's portrait only as well.

00:52:17.269 --> 00:52:20.990
There's some examples on that.
Is it just simply up to a developer design

00:52:20.990 --> 00:52:23.450
decision say you don't have to support the
orientations?

00:52:23.450 --> 00:52:29.930
Or what's the thinking on it?
&gt;&gt;&gt; Mike: Generally, the more you can use

00:52:29.930 --> 00:52:34.460
it in both orientations, the better.
But there are certain applications, a lot

00:52:34.460 --> 00:52:37.079
of games just won't make sense rotated, you
know.

00:52:37.079 --> 00:52:43.559
They need to be in a portrait layout.
For the dialer, there isn't actually a design

00:52:43.559 --> 00:52:49.710
reason why that thing doesn't work in landscape.
It's mostly implementation time.

00:52:49.710 --> 00:52:52.890
We haven't had time to create a quality landscape
experience.

00:52:52.890 --> 00:52:55.640
So we thought portrait only is better than
lame landscape.

00:52:55.640 --> 00:52:59.940
Because that thing is -- it's got a lot of
steps, and it's pretty complex.

00:52:59.940 --> 00:53:05.450
But, in general, users like using the device
in both orientations.

00:53:05.450 --> 00:53:07.460
You saw the wealth of different devices out
there.

00:53:07.460 --> 00:53:10.280
So, you know, people are using these things
in a lot of different ways.

00:53:10.280 --> 00:53:12.369
So the more flexibility you give the user,
probably the better.

00:53:12.369 --> 00:53:14.869
&gt;&gt;&gt; Especially in the case where the device
has a keyboards.

00:53:14.869 --> 00:53:19.700
That's something that we've required with
client requirements, they want to have that

00:53:19.700 --> 00:53:23.411
keyboard and have it shift to landscape.
&gt;&gt;&gt; Mike: Exactly.

00:53:23.411 --> 00:53:31.220
It's not optional, you have to use landscape
to use the keyboard.

00:53:31.220 --> 00:53:35.630
So you have a great experience there.
&gt;&gt;Jim Palmer: Let me address another one from

00:53:35.630 --> 00:53:38.070
the Wave here.
Actually, we get asked this a bunch.

00:53:38.070 --> 00:53:42.930
You know, this one is specifically, how is
Android approaching resolution, scaling, phone,

00:53:42.930 --> 00:53:46.859
the tablet.
So, you know, we spent some time in this session

00:53:46.859 --> 00:53:52.160
talking about mdpi and hdpi.
We're not at this point rolling out a hardware

00:53:52.160 --> 00:53:55.970
profile for larger devices like tablets and
beyond.

00:53:55.970 --> 00:53:59.540
However, we are actively working on that.
And I think one thing I'd like to sort of

00:53:59.540 --> 00:54:02.750
discuss is that there's actually a couple
of complexities in here, which is why we're

00:54:02.750 --> 00:54:07.259
still working on this.
One part of this is more than just a resolution

00:54:07.259 --> 00:54:10.039
scaling.
It has to do with actual layout scaling.

00:54:10.039 --> 00:54:13.650
There are certain apps you can imagine like
a browser where the layout differences are

00:54:13.650 --> 00:54:16.590
very minimal.
Other apps, it's more complex how you might

00:54:16.590 --> 00:54:21.039
want to address that layout change.
In addition, just to add a little wrinkle

00:54:21.039 --> 00:54:25.430
to it all, mdpi and hdpi aren't the only two
things that matter as you move to a tablet

00:54:25.430 --> 00:54:30.540
or larger screen size.
Just merely taking the density, tablets, for

00:54:30.540 --> 00:54:34.240
example, tend to be used further back.
If you just take the same exact images and

00:54:34.240 --> 00:54:37.619
use them, they may not look right even using
the current one.

00:54:37.619 --> 00:54:40.329
So we're trying to evaluate what the right
set of things is.

00:54:40.329 --> 00:54:44.750
Currently, you can already support these devices,
and there are tablets out there today.

00:54:44.750 --> 00:54:48.329
I think, you know, the right thing for us
to do is really look at all the issues and

00:54:48.329 --> 00:54:49.890
come out with what we think the right answer
is.

00:54:49.890 --> 00:54:55.130
So nothing yet to announce now, but, believe
me, we understand, and we're definitely working

00:54:55.130 --> 00:54:56.130
on that.
Okay.

00:54:56.130 --> 00:54:58.770
Question from over here.
&gt;&gt;&gt; First off, Chris, thanks for making a

00:54:58.770 --> 00:55:01.589
decent-looking Twitter app for the Android
platform.

00:55:01.589 --> 00:55:03.301
[ Applause ]
&gt;&gt;&gt; Good job, Chris.

00:55:03.301 --> 00:55:06.400
&gt;&gt;Chris Nesladek: Thanks.
&gt;&gt;&gt; And Virgil.

00:55:06.400 --> 00:55:11.880
&gt;&gt;&gt; And now we can't standstill.
Is conversation view going to happen?

00:55:11.880 --> 00:55:15.569
Because that is the -- that is the key feature
for a lot of us out there.

00:55:15.569 --> 00:55:18.670
&gt;&gt;&gt; What?
&gt;&gt;&gt; Conversation view.

00:55:18.670 --> 00:55:22.319
Tweets aren't an island.
They're just part of a stream.

00:55:22.319 --> 00:55:26.539
&gt;&gt;Chris Nesladek: I can't hear you that well.
&gt;&gt;&gt; I'm sorry.

00:55:26.539 --> 00:55:29.740
This is a short-people mike.
Conversation view inside of a Twitter app

00:55:29.740 --> 00:55:33.329
for Google, is that coming?
&gt;&gt;Chris Nesladek: So the Twitter app, we're

00:55:33.329 --> 00:55:36.519
hoping to open-source this.
We don't know when TBD.

00:55:36.519 --> 00:55:40.630
But you, as developers, will be able to take
that code and use that activity, yes.

00:55:40.630 --> 00:55:41.630
&gt;&gt;&gt; All right.
Thanks.

00:55:41.630 --> 00:55:43.680
That's all I have.
&gt;&gt;Chris Nesladek: You're welcome.

00:55:43.680 --> 00:55:46.170
&gt;&gt;Jim Palmer: Okay.
Over here.

00:55:46.170 --> 00:55:49.079
&gt;&gt;&gt; Yeah.
The Android SDK integration with Eclipse is,

00:55:49.079 --> 00:55:51.740
like, really lousy.
I was wondering if you guys had any plans

00:55:51.740 --> 00:55:54.040
to improve that.
[ Applause ]

00:55:54.040 --> 00:55:59.809
&gt;&gt;&gt; Especially on the XL UI builder is completely
unusable.

00:55:59.809 --> 00:56:02.009
Interface builder is great.
Do you have any plans on doing something like

00:56:02.009 --> 00:56:05.109
that?
&gt;&gt;&gt; Mike: I actually didn't hear.

00:56:05.109 --> 00:56:09.220
That I heard something is lousy, but I didn't
hear what.

00:56:09.220 --> 00:56:13.390
&gt;&gt;&gt; Android SDK integration with Eclipse,
really atrocious.

00:56:13.390 --> 00:56:17.630
&gt;&gt;&gt; Mike: Yes.
We realize that.

00:56:17.630 --> 00:56:24.759
And we -- we have people working on coming
up with more polished and more refined tools.

00:56:24.759 --> 00:56:29.160
But we're not ready to announce those yet.
&gt;&gt;Jim Palmer: Okay.

00:56:29.160 --> 00:56:31.570
We're winding down here.
Just a couple questions to go.

00:56:31.570 --> 00:56:36.940
&gt;&gt;&gt; What's the Android policy on 3D?
Is there any support for 3D coming out?

00:56:36.940 --> 00:56:41.030
Not, you know, the one with the class.
I'm talking more about rich 3D, something

00:56:41.030 --> 00:56:45.280
a little higher than a bird but not on the
glasses kind of thing, but -- do you have

00:56:45.280 --> 00:56:48.010
any --
&gt;&gt;Jim Palmer: Well, so the most recent release,

00:56:48.010 --> 00:56:53.970
you know, we have a couple of examples where
we're using 3D, the gallery, which is the

00:56:53.970 --> 00:56:58.420
photo gallery, there's an effect in there
which does some 3D stuff, as well as the new

00:56:58.420 --> 00:57:05.131
app launcher in Nexus One has a 3D effect.
The tools in there, GL is in there.

00:57:05.131 --> 00:57:09.720
We can go into more about that.
We're all, of course, interested in exploring

00:57:09.720 --> 00:57:13.680
that.
3D is a tricky thing to get right to make

00:57:13.680 --> 00:57:19.310
sure it's still usable and over time something
is delightful up to the first couple times

00:57:19.310 --> 00:57:23.700
doesn't get annoying over multiple use.
But I'll say, yes, we're interested in it.

00:57:23.700 --> 00:57:29.339
And the base technology is in there now.
Mike, is there anything else to add on 3D

00:57:29.339 --> 00:57:30.339
technology?
&gt;&gt;&gt; Mike: No.

00:57:30.339 --> 00:57:32.019
&gt;&gt;Jim Palmer: I think that's it.
One more.

00:57:32.019 --> 00:57:39.589
&gt;&gt;&gt; Lots of Android developers also do other
platform, like iPhone or BlackBerry development.

00:57:39.589 --> 00:57:42.920
But for business side, I also need to support
multiple platforms.

00:57:42.920 --> 00:57:51.779
My question is for the design patterns, is
there any plan to promote to other platform

00:57:51.779 --> 00:57:57.190
beyond Android or just the Android?
&gt;&gt;Jim Palmer: Yeah, I think at this point,

00:57:57.190 --> 00:58:01.859
we're really, you know, looking at developing
the right patterns for our platforms.

00:58:01.859 --> 00:58:05.970
I know for developers, you know, you're developing
for multiple platforms.

00:58:05.970 --> 00:58:09.619
I think our recommendation is, as always,
you know, from a design point of view, it's

00:58:09.619 --> 00:58:13.539
more work, but it's best to fit in with the
platform that you're developing your apps

00:58:13.539 --> 00:58:15.690
for.
So in the cases where there are different

00:58:15.690 --> 00:58:21.019
genres or different, you know, styles in those
platforms, it's better to do that.

00:58:21.019 --> 00:58:24.170
Oftentimes, just moving something over as
is doesn't quite work the same.

00:58:24.170 --> 00:58:28.580
You'll feel a little bit out of sorts.
So, you know, we're not planning right now

00:58:28.580 --> 00:58:32.519
on taking our patterns and exporting them
to other platforms.

00:58:32.519 --> 00:58:34.400
Okay.
Looks like that's it for today.

00:58:34.400 --> 00:58:36.230
So thank you, everyone, for coming.
And for all the support.

00:58:36.230 --> 00:58:37.230
[ Applause ]
&gt;&gt;Chris Nesladek: Hang on, guys.

00:58:37.230 --> 00:58:38.230
Do you guys -- who wants two collectibles?
We have two left.

00:58:38.230 --> 00:58:39.230
When was Android founded?
Who knows?

00:58:39.230 --> 00:58:40.230
&gt;&gt;&gt; (Off mike).
&gt;&gt;Chris Nesladek: No.

00:58:40.230 --> 00:58:41.230
I don't hear it yet.
2005.

00:58:41.230 --> 00:58:42.230
Who said it?
&gt;&gt;&gt; Right here.

00:58:42.230 --> 00:58:43.230
&gt;&gt;Chris Nesladek: All right.
Next.

00:58:43.230 --> 00:58:44.230
One more.
What's a good question?

00:58:44.230 --> 00:58:45.230
Mike, what do you have?
Something about Android.

00:58:45.230 --> 00:58:46.230
&gt;&gt;&gt; Scaling ratio.
&gt;&gt;Christian Robertson: That's it.

00:58:46.230 --> 00:58:47.230
&gt;&gt;Chris Nesladek: What's the magic scaling
ratio?

00:58:47.230 --> 00:58:47.234
All right.
Thank you.

