WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.000
We're going to do that while we introduce graphics.

00:00:04.000 --> 00:00:09.000
Remember our goal is to render a webpage to make a picture that corresponds

00:00:09.000 --> 00:00:10.000
to a webpage.

00:00:10.000 --> 00:00:14.000
That means we need some way to make a picture, and it may not be obvious

00:00:14.000 --> 00:00:15.000
how we'll do that in Python.

00:00:15.000 --> 00:00:21.000
It turns out that just as we used a library for regular expressions and parsing

00:00:21.000 --> 00:00:25.000
and even timing procedures--if you remember that example from before--

00:00:25.000 --> 00:00:29.000
we're going to use a library--someone else's code--to do graphics.

00:00:29.000 --> 00:00:33.000
This ability, by the way, to build on existing off-the-shelf components

00:00:33.000 --> 00:00:36.000
is one of the phenomenal advantages of computer science compared to

00:00:36.000 --> 00:00:38.000
other parts of engineering.

00:00:38.000 --> 00:00:41.000
It's very easy to copy someone else's library and build on top of it--

00:00:41.000 --> 00:00:46.000
much harder to copy someone else's building without actually reconstructing it yourself.

00:00:46.000 --> 00:00:50.000
So there are 4 key functions in our graphics library that are worth knowing about.

00:00:50.000 --> 00:00:55.000
In graphics.word, you pass in a single word, and we'll draw it on the screen

00:00:55.000 --> 00:00:57.000
or on the picture we're making for you.

00:00:57.000 --> 00:01:00.000
Graphics.begtintag is a bit more complicated.

00:01:00.000 --> 00:01:04.000
You have to tell us both the type of the tag and also any arguments it might have.

00:01:04.000 --> 00:01:08.000
For example, suppose it's an anchor tag--a link in a webpage--

00:01:08.000 --> 00:01:11.000
we need to know what the destination of the link is.

00:01:11.000 --> 00:01:16.000
I'll have you pass that in as a dictionary, mapping href to "google".

00:01:16.000 --> 00:01:19.000
Then after that you could call and display a bunch of other words

00:01:19.000 --> 00:01:22.000
and those would all be underlined or they would show up in blue

00:01:22.000 --> 00:01:24.000
or however we draw web links.

00:01:24.000 --> 00:01:26.000
Eventually, we can end the most recent tag,

00:01:26.000 --> 00:01:31.000
and there's also a way to display warnings, which is basically just for your benefit

00:01:31.000 --> 00:01:33.000
if you're trying this out in later assigments.

00:01:33.000 --> 00:01:34.000
This gives you a way of debugging.

00:01:34.000 --> 00:01:38.000
Maybe this will show up in some bold, red color or something like that

00:01:38.000 --> 00:01:39.000
so that you can't miss it.

00:01:39.000 --> 00:01:41.000
So let's imagine that we have the following webpage input.

00:01:41.000 --> 00:01:45.000
Nelson Mandela was elected democratically.

00:01:45.000 --> 00:01:48.000
I'm going to show you the sequence of calls to the graphics library

00:01:48.000 --> 00:01:49.000
that we would want.

00:01:49.000 --> 00:01:52.000
Well, conceptually, the first thing we're going to do is print out the word Nelson

00:01:52.000 --> 00:01:53.000
on the screen.

00:01:53.000 --> 00:01:56.000
Then we'll want to print out the word Mandela on the screen.

00:01:56.000 --> 00:02:01.000
Then we want to tell the graphics library that for while, subsequent words

00:02:01.000 --> 00:02:02.000
should be bolded.

00:02:02.000 --> 00:02:03.000
So we'll begin a bold tag.

00:02:03.000 --> 00:02:07.000
This bold tag doesn't have any arguments, so we'll just pass in the empty dictionary.

00:02:07.000 --> 00:02:10.000
That didn't actually draw anything on the screen.

00:02:10.000 --> 00:02:13.000
It's just a note to begin drawing in bold.

00:02:13.000 --> 00:02:17.000
You can imagine changing out your pen for something that draws in a different color.

00:02:17.000 --> 00:02:21.000
Now we instruct our graphics library to write the word "was,"

00:02:21.000 --> 00:02:22.000
but it's going to be bolded.

00:02:22.000 --> 00:02:26.000
Now we write the world elected, and now we're done with things in bold,

00:02:26.000 --> 00:02:28.000
so we back out of our most recent tag.

00:02:28.000 --> 00:02:32.000
Finally, we'll add the word "democratically" and a period.

00:02:32.000 --> 00:02:35.000
This depends on how our lexer works, but remember that our definition for word

00:02:35.000 --> 00:02:39.000
was sort of anything that's not whitespace or angle brackets,

00:02:39.000 --> 00:02:41.000
so this period will be part of the same word.

00:02:41.000 --> 00:02:45.000
Then it will be the responsibility of our graphics library to do things like wrapping

00:02:45.000 --> 00:02:49.000
when we get to the end of the page to decide what bold looks like.

00:02:49.000 --> 00:02:50.000
And then to display the image back to you.

00:02:50.000 --> 00:02:55.000
So these 1, 2, 3, 4, 5, 6, 7 calls produce this image.

00:02:55.000 --> 00:02:57.000
That's how we're going to make our web browser.

00:02:57.000 --> 00:03:01.000
While we're here, Nelson Mandela was actually the first South African President

00:03:01.000 --> 00:03:04.000
in a fully representative democratic election,

00:03:04.000 --> 09:59:59.000
and he went on to win the 1993 Nobel Peace Prize, plus a host of other honors.

