WEBVTT
Kind: captions
Language: en

00:00:00.270 --> 00:00:04.990
Suppose that the instruction that we fetch here is a jump instruction,

00:00:04.990 --> 00:00:11.780
next cycle this jump moves here. The problem is we fetched this jump but

00:00:11.780 --> 00:00:17.100
in this cycle here, we didn't even know what it is. So when it moves here,

00:00:17.100 --> 00:00:21.850
the next instruction we fetch will be the one that follows this jump in memory.

00:00:21.850 --> 00:00:26.405
So we will have, for example, a subtract that never should have been fetched

00:00:26.405 --> 00:00:30.070
because we should have fetched from the location where the jump is going. But

00:00:30.070 --> 00:00:34.470
at this point where we needed to decide what to fetch, we didn't even know that

00:00:34.470 --> 00:00:38.460
it's a jump. Meanwhile, we are decoding the jump. So at the end of this cycle,

00:00:38.460 --> 00:00:43.720
we will know it's a jump, but we may not know where it's going. So now,

00:00:43.720 --> 00:00:47.750
let's say that here we figure out that this is a jump and where it's going.

00:00:47.750 --> 00:00:52.560
Meanwhile, our subtract has moved here. Something else has been

00:00:52.560 --> 00:00:58.280
fetched from the location where we shouldn't have been fetching things at all.

00:00:58.280 --> 00:01:02.120
And now we figure out that really we should be fetching from somewhere else. So

00:01:02.120 --> 00:01:08.270
what happens now is called a pipeline flush. What we do is we convert this

00:01:08.270 --> 00:01:14.170
fetched instructions into pipeline bubbles. And then, as the jump

00:01:14.170 --> 00:01:19.880
moves on, these two bubbles will also move on. And now we will fetch

00:01:19.880 --> 00:01:23.920
the correct instruction that should have been fetched right after the jump.

00:01:23.920 --> 00:01:28.820
So as you can see, a jump in this case, because it caused the pipeline flush,

00:01:28.820 --> 00:01:33.920
has two bubbles that follow it. And only then we have the next instruction. So

00:01:33.920 --> 00:01:39.950
if we count for these two instructions, what the CPI is, it's actually

00:01:39.950 --> 00:01:44.430
four cycles for only the two instructions. So as you can see, these pipeline

00:01:44.430 --> 00:01:49.560
flushes are going to be an additional source of having a CPI larger than one.

