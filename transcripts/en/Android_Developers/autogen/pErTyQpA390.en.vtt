WEBVTT
Kind: captions
Language: en

00:00:02.880 --> 00:00:06.550
 
[Music]

00:00:06.550 --> 00:00:06.560
[Music]
 

00:00:06.560 --> 00:00:14.180
[Music]
good morning it's great to see everybody

00:00:14.180 --> 00:00:14.190
good morning it's great to see everybody
 

00:00:14.190 --> 00:00:17.870
good morning it's great to see everybody
here hi I'm Lucas Bergstrom product

00:00:17.870 --> 00:00:17.880
here hi I'm Lucas Bergstrom product
 

00:00:17.880 --> 00:00:19.130
here hi I'm Lucas Bergstrom product
manager for Android architecture

00:00:19.130 --> 00:00:19.140
manager for Android architecture
 

00:00:19.140 --> 00:00:21.529
manager for Android architecture
components and before I get started I'm

00:00:21.529 --> 00:00:21.539
components and before I get started I'm
 

00:00:21.539 --> 00:00:24.230
components and before I get started I'm
curious how many of you were here last

00:00:24.230 --> 00:00:24.240
curious how many of you were here last
 

00:00:24.240 --> 00:00:26.689
curious how many of you were here last
year when we announced architecture

00:00:26.689 --> 00:00:26.699
year when we announced architecture
 

00:00:26.699 --> 00:00:30.169
year when we announced architecture
components for the first time awesome

00:00:30.169 --> 00:00:30.179
components for the first time awesome
 

00:00:30.179 --> 00:00:32.420
components for the first time awesome
ok this is a much bigger venue so that's

00:00:32.420 --> 00:00:32.430
ok this is a much bigger venue so that's
 

00:00:32.430 --> 00:00:35.780
ok this is a much bigger venue so that's
actually a decent percentage when we did

00:00:35.780 --> 00:00:35.790
actually a decent percentage when we did
 

00:00:35.790 --> 00:00:37.400
actually a decent percentage when we did
launch architectural components last

00:00:37.400 --> 00:00:37.410
launch architectural components last
 

00:00:37.410 --> 00:00:40.700
launch architectural components last
year we were doing something sort of

00:00:40.700 --> 00:00:40.710
year we were doing something sort of
 

00:00:40.710 --> 00:00:42.680
year we were doing something sort of
different for us for the first time we

00:00:42.680 --> 00:00:42.690
different for us for the first time we
 

00:00:42.690 --> 00:00:45.680
different for us for the first time we
were offering explicit guidance and how

00:00:45.680 --> 00:00:45.690
were offering explicit guidance and how
 

00:00:45.690 --> 00:00:47.900
were offering explicit guidance and how
to architect your app and giving you

00:00:47.900 --> 00:00:47.910
to architect your app and giving you
 

00:00:47.910 --> 00:00:50.889
to architect your app and giving you
components letting you do that and

00:00:50.889 --> 00:00:50.899
components letting you do that and
 

00:00:50.899 --> 00:00:53.240
components letting you do that and
frankly for us it was a little bit of a

00:00:53.240 --> 00:00:53.250
frankly for us it was a little bit of a
 

00:00:53.250 --> 00:00:56.000
frankly for us it was a little bit of a
journey into the unknown so twelve

00:00:56.000 --> 00:00:56.010
journey into the unknown so twelve
 

00:00:56.010 --> 00:00:57.590
journey into the unknown so twelve
months in let's check in on how we're

00:00:57.590 --> 00:00:57.600
months in let's check in on how we're
 

00:00:57.600 --> 00:01:02.510
months in let's check in on how we're
doing so we've shipped 26 releases since

00:01:02.510 --> 00:01:02.520
doing so we've shipped 26 releases since
 

00:01:02.520 --> 00:01:05.179
doing so we've shipped 26 releases since
May last year so we've been constantly

00:01:05.179 --> 00:01:05.189
May last year so we've been constantly
 

00:01:05.189 --> 00:01:07.850
May last year so we've been constantly
iterating and improving on the course at

00:01:07.850 --> 00:01:07.860
iterating and improving on the course at
 

00:01:07.860 --> 00:01:10.700
iterating and improving on the course at
our architecture components in the sign

00:01:10.700 --> 00:01:10.710
our architecture components in the sign
 

00:01:10.710 --> 00:01:12.740
our architecture components in the sign
of any healthy open-source project we

00:01:12.740 --> 00:01:12.750
of any healthy open-source project we
 

00:01:12.750 --> 00:01:14.690
of any healthy open-source project we
have a very active issue tracker I'd

00:01:14.690 --> 00:01:14.700
have a very active issue tracker I'd
 

00:01:14.700 --> 00:01:16.190
have a very active issue tracker I'd
like to thank everybody that's taken

00:01:16.190 --> 00:01:16.200
like to thank everybody that's taken
 

00:01:16.200 --> 00:01:19.580
like to thank everybody that's taken
time to file a feature request or even a

00:01:19.580 --> 00:01:19.590
time to file a feature request or even a
 

00:01:19.590 --> 00:01:23.179
time to file a feature request or even a
bug and we've closed a lot of those we

00:01:23.179 --> 00:01:23.189
bug and we've closed a lot of those we
 

00:01:23.189 --> 00:01:24.920
bug and we've closed a lot of those we
launched a major new library paging

00:01:24.920 --> 00:01:24.930
launched a major new library paging
 

00:01:24.930 --> 00:01:27.440
launched a major new library paging
which is now stable and we'll talk a

00:01:27.440 --> 00:01:27.450
which is now stable and we'll talk a
 

00:01:27.450 --> 00:01:30.350
which is now stable and we'll talk a
little bit more about today and I'm

00:01:30.350 --> 00:01:30.360
little bit more about today and I'm
 

00:01:30.360 --> 00:01:32.060
little bit more about today and I'm
pleased to say that based on our survey

00:01:32.060 --> 00:01:32.070
pleased to say that based on our survey
 

00:01:32.070 --> 00:01:35.600
pleased to say that based on our survey
data over half of you are using or

00:01:35.600 --> 00:01:35.610
data over half of you are using or
 

00:01:35.610 --> 00:01:37.280
data over half of you are using or
planning to use architecture components

00:01:37.280 --> 00:01:37.290
planning to use architecture components
 

00:01:37.290 --> 00:01:40.460
planning to use architecture components
and this survey was done only a few

00:01:40.460 --> 00:01:40.470
and this survey was done only a few
 

00:01:40.470 --> 00:01:43.399
and this survey was done only a few
months after we went stable so this data

00:01:43.399 --> 00:01:43.409
months after we went stable so this data
 

00:01:43.409 --> 00:01:45.830
months after we went stable so this data
is pretty out of date by now but I'm

00:01:45.830 --> 00:01:45.840
is pretty out of date by now but I'm
 

00:01:45.840 --> 00:01:47.510
is pretty out of date by now but I'm
pretty proud of the fact that only a few

00:01:47.510 --> 00:01:47.520
pretty proud of the fact that only a few
 

00:01:47.520 --> 00:01:49.730
pretty proud of the fact that only a few
months after launching to stable over

00:01:49.730 --> 00:01:49.740
months after launching to stable over
 

00:01:49.740 --> 00:01:51.620
months after launching to stable over
half of the Android developers we talked

00:01:51.620 --> 00:01:51.630
half of the Android developers we talked
 

00:01:51.630 --> 00:01:54.429
half of the Android developers we talked
to you were planning to use this stuff

00:01:54.429 --> 00:01:54.439
to you were planning to use this stuff
 

00:01:54.439 --> 00:01:57.700
to you were planning to use this stuff
but more importantly than any of this

00:01:57.700 --> 00:01:57.710
but more importantly than any of this
 

00:01:57.710 --> 00:02:00.109
but more importantly than any of this
you've told us that architecture

00:02:00.109 --> 00:02:00.119
you've told us that architecture
 

00:02:00.119 --> 00:02:01.819
you've told us that architecture
components actually make it easier for

00:02:01.819 --> 00:02:01.829
components actually make it easier for
 

00:02:01.829 --> 00:02:05.300
components actually make it easier for
you to build robust apps that having a

00:02:05.300 --> 00:02:05.310
you to build robust apps that having a
 

00:02:05.310 --> 00:02:07.520
you to build robust apps that having a
clear path on how to architect your app

00:02:07.520 --> 00:02:07.530
clear path on how to architect your app
 

00:02:07.530 --> 00:02:09.350
clear path on how to architect your app
and components that helped you realize

00:02:09.350 --> 00:02:09.360
and components that helped you realize
 

00:02:09.360 --> 00:02:11.930
and components that helped you realize
that has actually made a difference in

00:02:11.930 --> 00:02:11.940
that has actually made a difference in
 

00:02:11.940 --> 00:02:13.180
that has actually made a difference in
the real world and how you

00:02:13.180 --> 00:02:13.190
the real world and how you
 

00:02:13.190 --> 00:02:16.150
the real world and how you
your apps and we've heard that not just

00:02:16.150 --> 00:02:16.160
your apps and we've heard that not just
 

00:02:16.160 --> 00:02:19.090
your apps and we've heard that not just
once but we've heard that over and over

00:02:19.090 --> 00:02:19.100
once but we've heard that over and over
 

00:02:19.100 --> 00:02:21.310
once but we've heard that over and over
from a lot of developers that have taken

00:02:21.310 --> 00:02:21.320
from a lot of developers that have taken
 

00:02:21.320 --> 00:02:28.300
from a lot of developers that have taken
time to speak to us so architecture

00:02:28.300 --> 00:02:28.310
time to speak to us so architecture
 

00:02:28.310 --> 00:02:30.520
time to speak to us so architecture
components has grown and we're going to

00:02:30.520 --> 00:02:30.530
components has grown and we're going to
 

00:02:30.530 --> 00:02:33.060
components has grown and we're going to
continue to invest here this is

00:02:33.060 --> 00:02:33.070
continue to invest here this is
 

00:02:33.070 --> 00:02:36.130
continue to invest here this is
foundational we think for Android apps

00:02:36.130 --> 00:02:36.140
foundational we think for Android apps
 

00:02:36.140 --> 00:02:39.820
foundational we think for Android apps
going forward but not just are we

00:02:39.820 --> 00:02:39.830
going forward but not just are we
 

00:02:39.830 --> 00:02:41.560
going forward but not just are we
investing in architecture components but

00:02:41.560 --> 00:02:41.570
investing in architecture components but
 

00:02:41.570 --> 00:02:44.410
investing in architecture components but
this year with jetpack we're gonna take

00:02:44.410 --> 00:02:44.420
this year with jetpack we're gonna take
 

00:02:44.420 --> 00:02:46.420
this year with jetpack we're gonna take
that same approach that we took with

00:02:46.420 --> 00:02:46.430
that same approach that we took with
 

00:02:46.430 --> 00:02:48.880
that same approach that we took with
architecture components a blank sheet of

00:02:48.880 --> 00:02:48.890
architecture components a blank sheet of
 

00:02:48.890 --> 00:02:51.940
architecture components a blank sheet of
paper approach to how Android developer

00:02:51.940 --> 00:02:51.950
paper approach to how Android developer
 

00:02:51.950 --> 00:02:54.070
paper approach to how Android developer
experience should be and you know how we

00:02:54.070 --> 00:02:54.080
experience should be and you know how we
 

00:02:54.080 --> 00:02:57.340
experience should be and you know how we
can improve things for you and jetpack

00:02:57.340 --> 00:02:57.350
can improve things for you and jetpack
 

00:02:57.350 --> 00:02:59.320
can improve things for you and jetpack
is going to take that and apply that to

00:02:59.320 --> 00:02:59.330
is going to take that and apply that to
 

00:02:59.330 --> 00:03:01.240
is going to take that and apply that to
the rest of the developer API service

00:03:01.240 --> 00:03:01.250
the rest of the developer API service
 

00:03:01.250 --> 00:03:06.340
the rest of the developer API service
that we offer so now I'm going to turn

00:03:06.340 --> 00:03:06.350
that we offer so now I'm going to turn
 

00:03:06.350 --> 00:03:09.280
that we offer so now I'm going to turn
it over to eat to talk about what's new

00:03:09.280 --> 00:03:09.290
it over to eat to talk about what's new
 

00:03:09.290 --> 00:03:12.030
it over to eat to talk about what's new
and architecture components

00:03:12.030 --> 00:03:12.040
and architecture components
 

00:03:12.040 --> 00:03:17.490
and architecture components
[Applause]

00:03:17.490 --> 00:03:17.500
[Applause]
 

00:03:17.500 --> 00:03:21.120
[Applause]
thank you so we will talk about what we

00:03:21.120 --> 00:03:21.130
thank you so we will talk about what we
 

00:03:21.130 --> 00:03:24.120
thank you so we will talk about what we
have been doing in this last one year we

00:03:24.120 --> 00:03:24.130
have been doing in this last one year we
 

00:03:24.130 --> 00:03:26.160
have been doing in this last one year we
look at the existing libraries talk

00:03:26.160 --> 00:03:26.170
look at the existing libraries talk
 

00:03:26.170 --> 00:03:28.410
look at the existing libraries talk
about the improvements and also look at

00:03:28.410 --> 00:03:28.420
about the improvements and also look at
 

00:03:28.420 --> 00:03:31.380
about the improvements and also look at
the new shiny stuff paging navigation

00:03:31.380 --> 00:03:31.390
the new shiny stuff paging navigation
 

00:03:31.390 --> 00:03:34.650
the new shiny stuff paging navigation
and work manager let's start with life

00:03:34.650 --> 00:03:34.660
and work manager let's start with life
 

00:03:34.660 --> 00:03:37.590
and work manager let's start with life
cycles so we have ship life cycles in

00:03:37.590 --> 00:03:37.600
cycles so we have ship life cycles in
 

00:03:37.600 --> 00:03:40.560
cycles so we have ship life cycles in
the last IO but to better understand why

00:03:40.560 --> 00:03:40.570
the last IO but to better understand why
 

00:03:40.570 --> 00:03:43.110
the last IO but to better understand why
we have created this component let's go

00:03:43.110 --> 00:03:43.120
we have created this component let's go
 

00:03:43.120 --> 00:03:46.560
we have created this component let's go
to two years before in 2016 we did a

00:03:46.560 --> 00:03:46.570
to two years before in 2016 we did a
 

00:03:46.570 --> 00:03:48.780
to two years before in 2016 we did a
bunch of developer surveys and asked

00:03:48.780 --> 00:03:48.790
bunch of developer surveys and asked
 

00:03:48.790 --> 00:03:51.330
bunch of developer surveys and asked
developers what is the hardest part of

00:03:51.330 --> 00:03:51.340
developers what is the hardest part of
 

00:03:51.340 --> 00:03:54.630
developers what is the hardest part of
Android development and by far in the

00:03:54.630 --> 00:03:54.640
Android development and by far in the
 

00:03:54.640 --> 00:03:57.870
Android development and by far in the
list big surprise was lifecycle

00:03:57.870 --> 00:03:57.880
list big surprise was lifecycle
 

00:03:57.880 --> 00:03:58.620
list big surprise was lifecycle
management

00:03:58.620 --> 00:03:58.630
management
 

00:03:58.630 --> 00:04:01.140
management
we're wondering like what can be hard

00:04:01.140 --> 00:04:01.150
we're wondering like what can be hard
 

00:04:01.150 --> 00:04:03.210
we're wondering like what can be hard
about I've found rotating or user

00:04:03.210 --> 00:04:03.220
about I've found rotating or user
 

00:04:03.220 --> 00:04:05.850
about I've found rotating or user
switching applications this happens all

00:04:05.850 --> 00:04:05.860
switching applications this happens all
 

00:04:05.860 --> 00:04:08.250
switching applications this happens all
the time on Android Android is built for

00:04:08.250 --> 00:04:08.260
the time on Android Android is built for
 

00:04:08.260 --> 00:04:10.890
the time on Android Android is built for
this but if you look at the problem in

00:04:10.890 --> 00:04:10.900
this but if you look at the problem in
 

00:04:10.900 --> 00:04:12.780
this but if you look at the problem in
detail if you want to handle them

00:04:12.780 --> 00:04:12.790
detail if you want to handle them
 

00:04:12.790 --> 00:04:15.390
detail if you want to handle them
properly in your application you need to

00:04:15.390 --> 00:04:15.400
properly in your application you need to
 

00:04:15.400 --> 00:04:17.940
properly in your application you need to
understand these state graphs where well

00:04:17.940 --> 00:04:17.950
understand these state graphs where well
 

00:04:17.950 --> 00:04:20.580
understand these state graphs where well
and when these two are interleaved it

00:04:20.580 --> 00:04:20.590
and when these two are interleaved it
 

00:04:20.590 --> 00:04:23.610
and when these two are interleaved it
becomes very confusing so we have

00:04:23.610 --> 00:04:23.620
becomes very confusing so we have
 

00:04:23.620 --> 00:04:26.400
becomes very confusing so we have
created life cycles component to get rid

00:04:26.400 --> 00:04:26.410
created life cycles component to get rid
 

00:04:26.410 --> 00:04:28.890
created life cycles component to get rid
of these problems and it seems to be

00:04:28.890 --> 00:04:28.900
of these problems and it seems to be
 

00:04:28.900 --> 00:04:31.770
of these problems and it seems to be
working because many developers give us

00:04:31.770 --> 00:04:31.780
working because many developers give us
 

00:04:31.780 --> 00:04:34.110
working because many developers give us
testimonials were a group of problems

00:04:34.110 --> 00:04:34.120
testimonials were a group of problems
 

00:04:34.120 --> 00:04:36.690
testimonials were a group of problems
just disappeared from their applications

00:04:36.690 --> 00:04:36.700
just disappeared from their applications
 

00:04:36.700 --> 00:04:40.010
just disappeared from their applications
when they started using these libraries

00:04:40.010 --> 00:04:40.020
when they started using these libraries
 

00:04:40.020 --> 00:04:42.900
when they started using these libraries
another important change for life cycles

00:04:42.900 --> 00:04:42.910
another important change for life cycles
 

00:04:42.910 --> 00:04:45.210
another important change for life cycles
was one year ago we have introduced them

00:04:45.210 --> 00:04:45.220
was one year ago we have introduced them
 

00:04:45.220 --> 00:04:48.510
was one year ago we have introduced them
as an optional library but now they are

00:04:48.510 --> 00:04:48.520
as an optional library but now they are
 

00:04:48.520 --> 00:04:50.550
as an optional library but now they are
fundamental part of Android development

00:04:50.550 --> 00:04:50.560
fundamental part of Android development
 

00:04:50.560 --> 00:04:52.880
fundamental part of Android development
you don't need to do any additional

00:04:52.880 --> 00:04:52.890
you don't need to do any additional
 

00:04:52.890 --> 00:04:56.280
you don't need to do any additional
libraries to start using them now both

00:04:56.280 --> 00:04:56.290
libraries to start using them now both
 

00:04:56.290 --> 00:04:58.650
libraries to start using them now both
app compat activity and the fragment

00:04:58.650 --> 00:04:58.660
app compat activity and the fragment
 

00:04:58.660 --> 00:05:01.350
app compat activity and the fragment
class implement lifecycle owner out of

00:05:01.350 --> 00:05:01.360
class implement lifecycle owner out of
 

00:05:01.360 --> 00:05:05.340
class implement lifecycle owner out of
the box another interesting thing that

00:05:05.340 --> 00:05:05.350
the box another interesting thing that
 

00:05:05.350 --> 00:05:07.890
the box another interesting thing that
happened was the community adoption so

00:05:07.890 --> 00:05:07.900
happened was the community adoption so
 

00:05:07.900 --> 00:05:10.230
happened was the community adoption so
we ourselves create new api's that works

00:05:10.230 --> 00:05:10.240
we ourselves create new api's that works
 

00:05:10.240 --> 00:05:12.810
we ourselves create new api's that works
with life cycles but we do other people

00:05:12.810 --> 00:05:12.820
with life cycles but we do other people
 

00:05:12.820 --> 00:05:14.820
with life cycles but we do other people
doing the same in their libraries and

00:05:14.820 --> 00:05:14.830
doing the same in their libraries and
 

00:05:14.830 --> 00:05:17.520
doing the same in their libraries and
this is so much easier because already

00:05:17.520 --> 00:05:17.530
this is so much easier because already
 

00:05:17.530 --> 00:05:20.130
this is so much easier because already
app compat has these dependencies so you

00:05:20.130 --> 00:05:20.140
app compat has these dependencies so you
 

00:05:20.140 --> 00:05:21.630
app compat has these dependencies so you
can easily depend on them in your

00:05:21.630 --> 00:05:21.640
can easily depend on them in your
 

00:05:21.640 --> 00:05:24.600
can easily depend on them in your
libraries one great example of this is

00:05:24.600 --> 00:05:24.610
libraries one great example of this is
 

00:05:24.610 --> 00:05:27.420
libraries one great example of this is
the auto dispose library from uber so if

00:05:27.420 --> 00:05:27.430
the auto dispose library from uber so if
 

00:05:27.430 --> 00:05:29.480
the auto dispose library from uber so if
you are using rx Java but you

00:05:29.480 --> 00:05:29.490
you are using rx Java but you
 

00:05:29.490 --> 00:05:32.390
you are using rx Java but you
the automatic lifecycle management you

00:05:32.390 --> 00:05:32.400
the automatic lifecycle management you
 

00:05:32.400 --> 00:05:34.400
the automatic lifecycle management you
can just add this Auto this force come

00:05:34.400 --> 00:05:34.410
can just add this Auto this force come
 

00:05:34.410 --> 00:05:37.100
can just add this Auto this force come
to your stream give it a lifecycle and

00:05:37.100 --> 00:05:37.110
to your stream give it a lifecycle and
 

00:05:37.110 --> 00:05:39.290
to your stream give it a lifecycle and
it will manage the subscription for you

00:05:39.290 --> 00:05:39.300
it will manage the subscription for you
 

00:05:39.300 --> 00:05:43.670
it will manage the subscription for you
for free now working on these things you

00:05:43.670 --> 00:05:43.680
for free now working on these things you
 

00:05:43.680 --> 00:05:46.450
for free now working on these things you
also discovered more problems we have

00:05:46.450 --> 00:05:46.460
also discovered more problems we have
 

00:05:46.460 --> 00:05:48.890
also discovered more problems we have
one of them is the Frank Mass we have

00:05:48.890 --> 00:05:48.900
one of them is the Frank Mass we have
 

00:05:48.900 --> 00:05:51.260
one of them is the Frank Mass we have
life cycle now Frank mass is a very

00:05:51.260 --> 00:05:51.270
life cycle now Frank mass is a very
 

00:05:51.270 --> 00:05:53.450
life cycle now Frank mass is a very
complicated life cycle let's look at an

00:05:53.450 --> 00:05:53.460
complicated life cycle let's look at an
 

00:05:53.460 --> 00:05:56.779
complicated life cycle let's look at an
example so if you have a fragment that

00:05:56.779 --> 00:05:56.789
example so if you have a fragment that
 

00:05:56.789 --> 00:05:59.390
example so if you have a fragment that
when it's created is observing a live

00:05:59.390 --> 00:05:59.400
when it's created is observing a live
 

00:05:59.400 --> 00:06:02.360
when it's created is observing a live
data I go through the regular creation

00:06:02.360 --> 00:06:02.370
data I go through the regular creation
 

00:06:02.370 --> 00:06:04.909
data I go through the regular creation
we create a wave for it and it goes to

00:06:04.909 --> 00:06:04.919
we create a wave for it and it goes to
 

00:06:04.919 --> 00:06:07.460
we create a wave for it and it goes to
the resume state at this point if you

00:06:07.460 --> 00:06:07.470
the resume state at this point if you
 

00:06:07.470 --> 00:06:09.920
the resume state at this point if you
have new values in your life data your

00:06:09.920 --> 00:06:09.930
have new values in your life data your
 

00:06:09.930 --> 00:06:12.020
have new values in your life data your
UI will start displaying them everything

00:06:12.020 --> 00:06:12.030
UI will start displaying them everything
 

00:06:12.030 --> 00:06:14.629
UI will start displaying them everything
works fine later on user hits a button

00:06:14.629 --> 00:06:14.639
works fine later on user hits a button
 

00:06:14.639 --> 00:06:17.180
works fine later on user hits a button
so you want to detach this fragment

00:06:17.180 --> 00:06:17.190
so you want to detach this fragment
 

00:06:17.190 --> 00:06:18.170
so you want to detach this fragment
because they are going to another

00:06:18.170 --> 00:06:18.180
because they are going to another
 

00:06:18.180 --> 00:06:21.050
because they are going to another
fragment and we're going to stop that

00:06:21.050 --> 00:06:21.060
fragment and we're going to stop that
 

00:06:21.060 --> 00:06:23.120
fragment and we're going to stop that
fragment but once the fragment is

00:06:23.120 --> 00:06:23.130
fragment but once the fragment is
 

00:06:23.130 --> 00:06:25.339
fragment but once the fragment is
stopped we don't need to weave for it we

00:06:25.339 --> 00:06:25.349
stopped we don't need to weave for it we
 

00:06:25.349 --> 00:06:27.469
stopped we don't need to weave for it we
would like to reclaim those resources so

00:06:27.469 --> 00:06:27.479
would like to reclaim those resources so
 

00:06:27.479 --> 00:06:30.800
would like to reclaim those resources so
we destroy the wheel later on user hits

00:06:30.800 --> 00:06:30.810
we destroy the wheel later on user hits
 

00:06:30.810 --> 00:06:32.629
we destroy the wheel later on user hits
the back button you go back to the

00:06:32.629 --> 00:06:32.639
the back button you go back to the
 

00:06:32.639 --> 00:06:34.909
the back button you go back to the
previous fragment we reattach it now

00:06:34.909 --> 00:06:34.919
previous fragment we reattach it now
 

00:06:34.919 --> 00:06:37.459
previous fragment we reattach it now
because we have destroyed the wheel we

00:06:37.459 --> 00:06:37.469
because we have destroyed the wheel we
 

00:06:37.469 --> 00:06:39.589
because we have destroyed the wheel we
need to create a new one we go ahead and

00:06:39.589 --> 00:06:39.599
need to create a new one we go ahead and
 

00:06:39.599 --> 00:06:42.409
need to create a new one we go ahead and
do it but it's a brand new wheel it goes

00:06:42.409 --> 00:06:42.419
do it but it's a brand new wheel it goes
 

00:06:42.419 --> 00:06:44.570
do it but it's a brand new wheel it goes
through the regular creation cycle and

00:06:44.570 --> 00:06:44.580
through the regular creation cycle and
 

00:06:44.580 --> 00:06:48.290
through the regular creation cycle and
now we have a Bart this nivea will never

00:06:48.290 --> 00:06:48.300
now we have a Bart this nivea will never
 

00:06:48.300 --> 00:06:50.149
now we have a Bart this nivea will never
resume the state of that live data

00:06:50.149 --> 00:06:50.159
resume the state of that live data
 

00:06:50.159 --> 00:06:52.339
resume the state of that live data
because you are using the fragments

00:06:52.339 --> 00:06:52.349
because you are using the fragments
 

00:06:52.349 --> 00:06:54.529
because you are using the fragments
lifecycle to observe it so we don't have

00:06:54.529 --> 00:06:54.539
lifecycle to observe it so we don't have
 

00:06:54.539 --> 00:06:56.330
lifecycle to observe it so we don't have
any reason to really dispatch the same

00:06:56.330 --> 00:06:56.340
any reason to really dispatch the same
 

00:06:56.340 --> 00:06:59.120
any reason to really dispatch the same
value of course the flight data receives

00:06:59.120 --> 00:06:59.130
value of course the flight data receives
 

00:06:59.130 --> 00:07:01.610
value of course the flight data receives
a new value do you I will be updated but

00:07:01.610 --> 00:07:01.620
a new value do you I will be updated but
 

00:07:01.620 --> 00:07:03.290
a new value do you I will be updated but
it's kind of too late because on

00:07:03.290 --> 00:07:03.300
it's kind of too late because on
 

00:07:03.300 --> 00:07:05.600
it's kind of too late because on
recreate you don't your UI has a bad

00:07:05.600 --> 00:07:05.610
recreate you don't your UI has a bad
 

00:07:05.610 --> 00:07:09.080
recreate you don't your UI has a bad
state now this left you with two options

00:07:09.080 --> 00:07:09.090
state now this left you with two options
 

00:07:09.090 --> 00:07:11.300
state now this left you with two options
you would either subscribe in oncreate

00:07:11.300 --> 00:07:11.310
you would either subscribe in oncreate
 

00:07:11.310 --> 00:07:14.959
you would either subscribe in oncreate
it looks very clean one-time setup but

00:07:14.959 --> 00:07:14.969
it looks very clean one-time setup but
 

00:07:14.969 --> 00:07:17.360
it looks very clean one-time setup but
it will fail if you recreate the view so

00:07:17.360 --> 00:07:17.370
it will fail if you recreate the view so
 

00:07:17.370 --> 00:07:18.980
it will fail if you recreate the view so
you needed to manually update the wheel

00:07:18.980 --> 00:07:18.990
you needed to manually update the wheel
 

00:07:18.990 --> 00:07:22.070
you needed to manually update the wheel
all your subscribing or create view

00:07:22.070 --> 00:07:22.080
all your subscribing or create view
 

00:07:22.080 --> 00:07:24.680
all your subscribing or create view
which handles in creation but now you

00:07:24.680 --> 00:07:24.690
which handles in creation but now you
 

00:07:24.690 --> 00:07:26.749
which handles in creation but now you
have double subscriptions that you need

00:07:26.749 --> 00:07:26.759
have double subscriptions that you need
 

00:07:26.759 --> 00:07:28.309
have double subscriptions that you need
to remove you lose the automatic

00:07:28.309 --> 00:07:28.319
to remove you lose the automatic
 

00:07:28.319 --> 00:07:31.309
to remove you lose the automatic
lifecycle management so the problem here

00:07:31.309 --> 00:07:31.319
lifecycle management so the problem here
 

00:07:31.319 --> 00:07:33.800
lifecycle management so the problem here
is that Frank may have not one but two

00:07:33.800 --> 00:07:33.810
is that Frank may have not one but two
 

00:07:33.810 --> 00:07:35.990
is that Frank may have not one but two
life cycles and we have decided to

00:07:35.990 --> 00:07:36.000
life cycles and we have decided to
 

00:07:36.000 --> 00:07:38.959
life cycles and we have decided to
embrace it and give the fragment view

00:07:38.959 --> 00:07:38.969
embrace it and give the fragment view
 

00:07:38.969 --> 00:07:42.790
embrace it and give the fragment view
its own life cycle so now start

00:07:42.790 --> 00:07:42.800
its own life cycle so now start
 

00:07:42.800 --> 00:07:45.580
its own life cycle so now start
support library 28 or Android X

00:07:45.580 --> 00:07:45.590
support library 28 or Android X
 

00:07:45.590 --> 00:07:48.969
support library 28 or Android X
fragments 1.0 while observing a live

00:07:48.969 --> 00:07:48.979
fragments 1.0 while observing a live
 

00:07:48.979 --> 00:07:51.640
fragments 1.0 while observing a live
data you can specify the real life cycle

00:07:51.640 --> 00:07:51.650
data you can specify the real life cycle
 

00:07:51.650 --> 00:07:54.129
data you can specify the real life cycle
and if the so while you're observing if

00:07:54.129 --> 00:07:54.139
and if the so while you're observing if
 

00:07:54.139 --> 00:07:56.200
and if the so while you're observing if
it is about the wheel you use the view

00:07:56.200 --> 00:07:56.210
it is about the wheel you use the view
 

00:07:56.210 --> 00:07:58.059
it is about the wheel you use the view
life cycle otherwise use the fragment

00:07:58.059 --> 00:07:58.069
life cycle otherwise use the fragment
 

00:07:58.069 --> 00:08:00.100
life cycle otherwise use the fragment
life cycle and we manage the

00:08:00.100 --> 00:08:00.110
life cycle and we manage the
 

00:08:00.110 --> 00:08:04.600
life cycle and we manage the
subscription for you for free okay data

00:08:04.600 --> 00:08:04.610
subscription for you for free okay data
 

00:08:04.610 --> 00:08:07.119
subscription for you for free okay data
mining so when we started to look at our

00:08:07.119 --> 00:08:07.129
mining so when we started to look at our
 

00:08:07.129 --> 00:08:09.460
mining so when we started to look at our
offerings as part of JPEG we and decided

00:08:09.460 --> 00:08:09.470
offerings as part of JPEG we and decided
 

00:08:09.470 --> 00:08:10.899
offerings as part of JPEG we and decided
to move data binding as part of

00:08:10.899 --> 00:08:10.909
to move data binding as part of
 

00:08:10.909 --> 00:08:12.969
to move data binding as part of
architecture components if you're not

00:08:12.969 --> 00:08:12.979
architecture components if you're not
 

00:08:12.979 --> 00:08:15.249
architecture components if you're not
already using data binding data binding

00:08:15.249 --> 00:08:15.259
already using data binding data binding
 

00:08:15.259 --> 00:08:17.770
already using data binding data binding
is our solution for boilerplate free you

00:08:17.770 --> 00:08:17.780
is our solution for boilerplate free you
 

00:08:17.780 --> 00:08:20.409
is our solution for boilerplate free you
eyes so if you're an object like this in

00:08:20.409 --> 00:08:20.419
eyes so if you're an object like this in
 

00:08:20.419 --> 00:08:23.439
eyes so if you're an object like this in
your application in your binding layers

00:08:23.439 --> 00:08:23.449
your application in your binding layers
 

00:08:23.449 --> 00:08:25.390
your application in your binding layers
you can reference the fees in your

00:08:25.390 --> 00:08:25.400
you can reference the fees in your
 

00:08:25.400 --> 00:08:27.939
you can reference the fees in your
object and we take care of updating the

00:08:27.939 --> 00:08:27.949
object and we take care of updating the
 

00:08:27.949 --> 00:08:31.450
object and we take care of updating the
UI for you in data binding 3.1 we have

00:08:31.450 --> 00:08:31.460
UI for you in data binding 3.1 we have
 

00:08:31.460 --> 00:08:34.959
UI for you in data binding 3.1 we have
added native support for live data so if

00:08:34.959 --> 00:08:34.969
added native support for live data so if
 

00:08:34.969 --> 00:08:37.029
added native support for live data so if
you're a V model like this which has a

00:08:37.029 --> 00:08:37.039
you're a V model like this which has a
 

00:08:37.039 --> 00:08:39.279
you're a V model like this which has a
live date of a user and if you pass it

00:08:39.279 --> 00:08:39.289
live date of a user and if you pass it
 

00:08:39.289 --> 00:08:42.459
live date of a user and if you pass it
as a parameter to your binding you can

00:08:42.459 --> 00:08:42.469
as a parameter to your binding you can
 

00:08:42.469 --> 00:08:44.740
as a parameter to your binding you can
use that live data as if it's a regular

00:08:44.740 --> 00:08:44.750
use that live data as if it's a regular
 

00:08:44.750 --> 00:08:46.930
use that live data as if it's a regular
field in your binding expressions data

00:08:46.930 --> 00:08:46.940
field in your binding expressions data
 

00:08:46.940 --> 00:08:48.610
field in your binding expressions data
binding will understand that is live

00:08:48.610 --> 00:08:48.620
binding will understand that is live
 

00:08:48.620 --> 00:08:51.569
binding will understand that is live
data and generate the correct code

00:08:51.569 --> 00:08:51.579
data and generate the correct code
 

00:08:51.579 --> 00:08:53.860
data and generate the correct code
unfortunately this is not enough for it

00:08:53.860 --> 00:08:53.870
unfortunately this is not enough for it
 

00:08:53.870 --> 00:08:55.600
unfortunately this is not enough for it
to observe it because data binding

00:08:55.600 --> 00:08:55.610
to observe it because data binding
 

00:08:55.610 --> 00:08:58.690
to observe it because data binding
doesn't have a life cycle to fix it when

00:08:58.690 --> 00:08:58.700
doesn't have a life cycle to fix it when
 

00:08:58.700 --> 00:09:00.880
doesn't have a life cycle to fix it when
you get your binding instance you just

00:09:00.880 --> 00:09:00.890
you get your binding instance you just
 

00:09:00.890 --> 00:09:02.740
you get your binding instance you just
tell it which life cycle it should use

00:09:02.740 --> 00:09:02.750
tell it which life cycle it should use
 

00:09:02.750 --> 00:09:05.260
tell it which life cycle it should use
it will start observing the light data I

00:09:05.260 --> 00:09:05.270
it will start observing the light data I
 

00:09:05.270 --> 00:09:07.329
it will start observing the light data I
keep itself up to date you don't need to

00:09:07.329 --> 00:09:07.339
keep itself up to date you don't need to
 

00:09:07.339 --> 00:09:09.930
keep itself up to date you don't need to
write any code for this

00:09:09.930 --> 00:09:09.940
write any code for this
 

00:09:09.940 --> 00:09:13.000
write any code for this
we also rewritten parts of the data

00:09:13.000 --> 00:09:13.010
we also rewritten parts of the data
 

00:09:13.010 --> 00:09:14.710
we also rewritten parts of the data
binding compiler to be a lot more

00:09:14.710 --> 00:09:14.720
binding compiler to be a lot more
 

00:09:14.720 --> 00:09:16.600
binding compiler to be a lot more
incremental so if you have a project

00:09:16.600 --> 00:09:16.610
incremental so if you have a project
 

00:09:16.610 --> 00:09:18.760
incremental so if you have a project
with multiple modules it's going to

00:09:18.760 --> 00:09:18.770
with multiple modules it's going to
 

00:09:18.770 --> 00:09:21.639
with multiple modules it's going to
compile a lot faster we are also working

00:09:21.639 --> 00:09:21.649
compile a lot faster we are also working
 

00:09:21.649 --> 00:09:23.860
compile a lot faster we are also working
on making the compilation even more

00:09:23.860 --> 00:09:23.870
on making the compilation even more
 

00:09:23.870 --> 00:09:27.160
on making the compilation even more
incremental but then I finish yet this

00:09:27.160 --> 00:09:27.170
incremental but then I finish yet this
 

00:09:27.170 --> 00:09:29.410
incremental but then I finish yet this
new compiler also gave us the able to

00:09:29.410 --> 00:09:29.420
new compiler also gave us the able to
 

00:09:29.420 --> 00:09:32.050
new compiler also gave us the able to
support instant tabs now you can use

00:09:32.050 --> 00:09:32.060
support instant tabs now you can use
 

00:09:32.060 --> 00:09:34.210
support instant tabs now you can use
data binding in the future modules of

00:09:34.210 --> 00:09:34.220
data binding in the future modules of
 

00:09:34.220 --> 00:09:39.190
data binding in the future modules of
your instant ABS okay group my favorite

00:09:39.190 --> 00:09:39.200
your instant ABS okay group my favorite
 

00:09:39.200 --> 00:09:40.449
your instant ABS okay group my favorite
architecture confidence

00:09:40.449 --> 00:09:40.459
architecture confidence
 

00:09:40.459 --> 00:09:43.660
architecture confidence
so Ruby server solution for object

00:09:43.660 --> 00:09:43.670
so Ruby server solution for object
 

00:09:43.670 --> 00:09:46.000
so Ruby server solution for object
mapping that finds the gap between the

00:09:46.000 --> 00:09:46.010
mapping that finds the gap between the
 

00:09:46.010 --> 00:09:49.960
mapping that finds the gap between the
SQLite and your Java or Kotlin code one

00:09:49.960 --> 00:09:49.970
SQLite and your Java or Kotlin code one
 

00:09:49.970 --> 00:09:52.840
SQLite and your Java or Kotlin code one
important change we did in room 1.1 was

00:09:52.840 --> 00:09:52.850
important change we did in room 1.1 was
 

00:09:52.850 --> 00:09:55.360
important change we did in room 1.1 was
the support for better multi-threading

00:09:55.360 --> 00:09:55.370
the support for better multi-threading
 

00:09:55.370 --> 00:09:58.510
the support for better multi-threading
so if you're losing one room 1.0 and you

00:09:58.510 --> 00:09:58.520
so if you're losing one room 1.0 and you
 

00:09:58.520 --> 00:10:00.370
so if you're losing one room 1.0 and you
if you have one threat that's trying to

00:10:00.370 --> 00:10:00.380
if you have one threat that's trying to
 

00:10:00.380 --> 00:10:02.470
if you have one threat that's trying to
exert a lot of data into the database

00:10:02.470 --> 00:10:02.480
exert a lot of data into the database
 

00:10:02.480 --> 00:10:04.630
exert a lot of data into the database
and you have another threat that's

00:10:04.630 --> 00:10:04.640
and you have another threat that's
 

00:10:04.640 --> 00:10:07.330
and you have another threat that's
trying to read data while the right is

00:10:07.330 --> 00:10:07.340
trying to read data while the right is
 

00:10:07.340 --> 00:10:10.240
trying to read data while the right is
executing your read will be blocked and

00:10:10.240 --> 00:10:10.250
executing your read will be blocked and
 

00:10:10.250 --> 00:10:12.280
executing your read will be blocked and
it can only execute after the right is

00:10:12.280 --> 00:10:12.290
it can only execute after the right is
 

00:10:12.290 --> 00:10:15.880
it can only execute after the right is
complete in room 1.1 with the right a

00:10:15.880 --> 00:10:15.890
complete in room 1.1 with the right a
 

00:10:15.890 --> 00:10:18.930
complete in room 1.1 with the right a
logging they can run in parallel now and

00:10:18.930 --> 00:10:18.940
logging they can run in parallel now and
 

00:10:18.940 --> 00:10:21.640
logging they can run in parallel now and
another nice feature of this thing your

00:10:21.640 --> 00:10:21.650
another nice feature of this thing your
 

00:10:21.650 --> 00:10:25.810
another nice feature of this thing your
writes run a lot faster than before best

00:10:25.810 --> 00:10:25.820
writes run a lot faster than before best
 

00:10:25.820 --> 00:10:27.880
writes run a lot faster than before best
part of this change you don't need to do

00:10:27.880 --> 00:10:27.890
part of this change you don't need to do
 

00:10:27.890 --> 00:10:29.950
part of this change you don't need to do
anything to take advantage of this if

00:10:29.950 --> 00:10:29.960
anything to take advantage of this if
 

00:10:29.960 --> 00:10:32.710
anything to take advantage of this if
the device is running jelly bean or

00:10:32.710 --> 00:10:32.720
the device is running jelly bean or
 

00:10:32.720 --> 00:10:35.140
the device is running jelly bean or
newer and it's not a low memory device

00:10:35.140 --> 00:10:35.150
newer and it's not a low memory device
 

00:10:35.150 --> 00:10:37.450
newer and it's not a low memory device
we are going to enable writer logging

00:10:37.450 --> 00:10:37.460
we are going to enable writer logging
 

00:10:37.460 --> 00:10:42.340
we are going to enable writer logging
for free okay another important addition

00:10:42.340 --> 00:10:42.350
for free okay another important addition
 

00:10:42.350 --> 00:10:44.380
for free okay another important addition
to room was the support for row carry

00:10:44.380 --> 00:10:44.390
to room was the support for row carry
 

00:10:44.390 --> 00:10:46.450
to room was the support for row carry
but to better understand why we needed

00:10:46.450 --> 00:10:46.460
but to better understand why we needed
 

00:10:46.460 --> 00:10:48.550
but to better understand why we needed
row query let's talk about the query

00:10:48.550 --> 00:10:48.560
row query let's talk about the query
 

00:10:48.560 --> 00:10:51.250
row query let's talk about the query
annotation now when you're using room

00:10:51.250 --> 00:10:51.260
annotation now when you're using room
 

00:10:51.260 --> 00:10:53.860
annotation now when you're using room
you can specify your SQL query in this

00:10:53.860 --> 00:10:53.870
you can specify your SQL query in this
 

00:10:53.870 --> 00:10:56.260
you can specify your SQL query in this
annotation you can use the name bind

00:10:56.260 --> 00:10:56.270
annotation you can use the name bind
 

00:10:56.270 --> 00:10:58.480
annotation you can use the name bind
parameters you could pass those

00:10:58.480 --> 00:10:58.490
parameters you could pass those
 

00:10:58.490 --> 00:11:00.730
parameters you could pass those
parameters as regular function arguments

00:11:00.730 --> 00:11:00.740
parameters as regular function arguments
 

00:11:00.740 --> 00:11:04.090
parameters as regular function arguments
you can tell the rule what to return the

00:11:04.090 --> 00:11:04.100
you can tell the rule what to return the
 

00:11:04.100 --> 00:11:06.670
you can tell the rule what to return the
best part of this setup is that room is

00:11:06.670 --> 00:11:06.680
best part of this setup is that room is
 

00:11:06.680 --> 00:11:08.770
best part of this setup is that room is
going to validate all of this at compile

00:11:08.770 --> 00:11:08.780
going to validate all of this at compile
 

00:11:08.780 --> 00:11:10.750
going to validate all of this at compile
time so if there's a mistake in your

00:11:10.750 --> 00:11:10.760
time so if there's a mistake in your
 

00:11:10.760 --> 00:11:12.850
time so if there's a mistake in your
query if your parameters doesn't measure

00:11:12.850 --> 00:11:12.860
query if your parameters doesn't measure
 

00:11:12.860 --> 00:11:14.620
query if your parameters doesn't measure
what you try to return doesn't make

00:11:14.620 --> 00:11:14.630
what you try to return doesn't make
 

00:11:14.630 --> 00:11:16.720
what you try to return doesn't make
sense it's going to fail the compilation

00:11:16.720 --> 00:11:16.730
sense it's going to fail the compilation
 

00:11:16.730 --> 00:11:20.110
sense it's going to fail the compilation
and let you know what is wrong now this

00:11:20.110 --> 00:11:20.120
and let you know what is wrong now this
 

00:11:20.120 --> 00:11:22.540
and let you know what is wrong now this
is all cool except what if you don't

00:11:22.540 --> 00:11:22.550
is all cool except what if you don't
 

00:11:22.550 --> 00:11:24.850
is all cool except what if you don't
know the query at compile time but if

00:11:24.850 --> 00:11:24.860
know the query at compile time but if
 

00:11:24.860 --> 00:11:26.740
know the query at compile time but if
you're writing a real estate application

00:11:26.740 --> 00:11:26.750
you're writing a real estate application
 

00:11:26.750 --> 00:11:29.590
you're writing a real estate application
by user can search the houses with a

00:11:29.590 --> 00:11:29.600
by user can search the houses with a
 

00:11:29.600 --> 00:11:32.020
by user can search the houses with a
price maybe they want to specify a

00:11:32.020 --> 00:11:32.030
price maybe they want to specify a
 

00:11:32.030 --> 00:11:34.540
price maybe they want to specify a
number of bedrooms bathrooms whether it

00:11:34.540 --> 00:11:34.550
number of bedrooms bathrooms whether it
 

00:11:34.550 --> 00:11:36.970
number of bedrooms bathrooms whether it
has a yard if you needed to query a

00:11:36.970 --> 00:11:36.980
has a yard if you needed to query a
 

00:11:36.980 --> 00:11:39.940
has a yard if you needed to query a
method for each variation of this that

00:11:39.940 --> 00:11:39.950
method for each variation of this that
 

00:11:39.950 --> 00:11:43.120
method for each variation of this that
will be impossible to maintain so what

00:11:43.120 --> 00:11:43.130
will be impossible to maintain so what
 

00:11:43.130 --> 00:11:45.430
will be impossible to maintain so what
you do in this case is you create to be

00:11:45.430 --> 00:11:45.440
you do in this case is you create to be
 

00:11:45.440 --> 00:11:48.370
you do in this case is you create to be
a query at runtime based on the options

00:11:48.370 --> 00:11:48.380
a query at runtime based on the options
 

00:11:48.380 --> 00:11:50.590
a query at runtime based on the options
user provided and you prepare the

00:11:50.590 --> 00:11:50.600
user provided and you prepare the
 

00:11:50.600 --> 00:11:53.320
user provided and you prepare the
arguments for that query now you obtain

00:11:53.320 --> 00:11:53.330
arguments for that query now you obtain
 

00:11:53.330 --> 00:11:55.600
arguments for that query now you obtain
an instance of the room database and use

00:11:55.600 --> 00:11:55.610
an instance of the room database and use
 

00:11:55.610 --> 00:11:58.840
an instance of the room database and use
this query method to get the result so

00:11:58.840 --> 00:11:58.850
this query method to get the result so
 

00:11:58.850 --> 00:11:59.560
this query method to get the result so
far so good

00:11:59.560 --> 00:11:59.570
far so good
 

00:11:59.570 --> 00:12:01.720
far so good
the problem with this approach is that

00:12:01.720 --> 00:12:01.730
the problem with this approach is that
 

00:12:01.730 --> 00:12:05.620
the problem with this approach is that
it returns your cursor who was the

00:12:05.620 --> 00:12:05.630
it returns your cursor who was the
 

00:12:05.630 --> 00:12:06.600
it returns your cursor who was the
cursor your

00:12:06.600 --> 00:12:06.610
cursor your
 

00:12:06.610 --> 00:12:09.449
cursor your
to get the list of houses so this looks

00:12:09.449 --> 00:12:09.459
to get the list of houses so this looks
 

00:12:09.459 --> 00:12:11.610
to get the list of houses so this looks
like a failure of the library has

00:12:11.610 --> 00:12:11.620
like a failure of the library has
 

00:12:11.620 --> 00:12:14.690
like a failure of the library has
decided to introduce Rockwell annotation

00:12:14.690 --> 00:12:14.700
decided to introduce Rockwell annotation
 

00:12:14.700 --> 00:12:18.030
decided to introduce Rockwell annotation
it looks very similar to query except

00:12:18.030 --> 00:12:18.040
it looks very similar to query except
 

00:12:18.040 --> 00:12:19.860
it looks very similar to query except
instead of specifying the query in the

00:12:19.860 --> 00:12:19.870
instead of specifying the query in the
 

00:12:19.870 --> 00:12:23.460
instead of specifying the query in the
annotation you pass it as a parameter to

00:12:23.460 --> 00:12:23.470
annotation you pass it as a parameter to
 

00:12:23.470 --> 00:12:25.560
annotation you pass it as a parameter to
the function and then you tell us what

00:12:25.560 --> 00:12:25.570
the function and then you tell us what
 

00:12:25.570 --> 00:12:28.050
the function and then you tell us what
you want us to return now here room

00:12:28.050 --> 00:12:28.060
you want us to return now here room
 

00:12:28.060 --> 00:12:30.630
you want us to return now here room
cannot relate that query anymore so it's

00:12:30.630 --> 00:12:30.640
cannot relate that query anymore so it's
 

00:12:30.640 --> 00:12:32.100
cannot relate that query anymore so it's
kind of you promised us to send the

00:12:32.100 --> 00:12:32.110
kind of you promised us to send the
 

00:12:32.110 --> 00:12:34.940
kind of you promised us to send the
right query and we'll take care of it

00:12:34.940 --> 00:12:34.950
right query and we'll take care of it
 

00:12:34.950 --> 00:12:37.500
right query and we'll take care of it
once you have that if you go back to our

00:12:37.500 --> 00:12:37.510
once you have that if you go back to our
 

00:12:37.510 --> 00:12:40.560
once you have that if you go back to our
previous example we can get an instance

00:12:40.560 --> 00:12:40.570
previous example we can get an instance
 

00:12:40.570 --> 00:12:42.840
previous example we can get an instance
of our dowel now we need to merge our

00:12:42.840 --> 00:12:42.850
of our dowel now we need to merge our
 

00:12:42.850 --> 00:12:45.360
of our dowel now we need to merge our
parameters and the query in this simple

00:12:45.360 --> 00:12:45.370
parameters and the query in this simple
 

00:12:45.370 --> 00:12:47.639
parameters and the query in this simple
SQLite query class which is basic data

00:12:47.639 --> 00:12:47.649
SQLite query class which is basic data
 

00:12:47.649 --> 00:12:50.069
SQLite query class which is basic data
holder and then you compress it to the

00:12:50.069 --> 00:12:50.079
holder and then you compress it to the
 

00:12:50.079 --> 00:12:52.800
holder and then you compress it to the
dog and get the list of houses normal

00:12:52.800 --> 00:12:52.810
dog and get the list of houses normal
 

00:12:52.810 --> 00:12:57.810
dog and get the list of houses normal
cursors no more boilerplate code ok

00:12:57.810 --> 00:12:57.820
cursors no more boilerplate code ok
 

00:12:57.820 --> 00:13:01.590
cursors no more boilerplate code ok
paging so Beijing is our solution for

00:13:01.590 --> 00:13:01.600
paging so Beijing is our solution for
 

00:13:01.600 --> 00:13:04.319
paging so Beijing is our solution for
laser loading in recycle area but to

00:13:04.319 --> 00:13:04.329
laser loading in recycle area but to
 

00:13:04.329 --> 00:13:06.630
laser loading in recycle area but to
better understand why we develop this

00:13:06.630 --> 00:13:06.640
better understand why we develop this
 

00:13:06.640 --> 00:13:09.690
better understand why we develop this
component or to go through an example so

00:13:09.690 --> 00:13:09.700
component or to go through an example so
 

00:13:09.700 --> 00:13:11.220
component or to go through an example so
you have a list like this is really

00:13:11.220 --> 00:13:11.230
you have a list like this is really
 

00:13:11.230 --> 00:13:13.139
you have a list like this is really
common every single application has this

00:13:13.139 --> 00:13:13.149
common every single application has this
 

00:13:13.149 --> 00:13:16.199
common every single application has this
user can scroll but you know it actually

00:13:16.199 --> 00:13:16.209
user can scroll but you know it actually
 

00:13:16.209 --> 00:13:18.269
user can scroll but you know it actually
represents a much larger list than

00:13:18.269 --> 00:13:18.279
represents a much larger list than
 

00:13:18.279 --> 00:13:20.220
represents a much larger list than
what's on screen and if you're an

00:13:20.220 --> 00:13:20.230
what's on screen and if you're an
 

00:13:20.230 --> 00:13:22.050
what's on screen and if you're an
application like Twitter for instance

00:13:22.050 --> 00:13:22.060
application like Twitter for instance
 

00:13:22.060 --> 00:13:25.829
application like Twitter for instance
it's a really long list so you probably

00:13:25.829 --> 00:13:25.839
it's a really long list so you probably
 

00:13:25.839 --> 00:13:27.840
it's a really long list so you probably
cannot fit it in memory and is also very

00:13:27.840 --> 00:13:27.850
cannot fit it in memory and is also very
 

00:13:27.850 --> 00:13:30.389
cannot fit it in memory and is also very
inefficient to load all of it so what

00:13:30.389 --> 00:13:30.399
inefficient to load all of it so what
 

00:13:30.399 --> 00:13:32.040
inefficient to load all of it so what
you will do is you would keep some of it

00:13:32.040 --> 00:13:32.050
you will do is you would keep some of it
 

00:13:32.050 --> 00:13:34.620
you will do is you would keep some of it
in memory the rest of it in database and

00:13:34.620 --> 00:13:34.630
in memory the rest of it in database and
 

00:13:34.630 --> 00:13:36.509
in memory the rest of it in database and
you also have your server component

00:13:36.509 --> 00:13:36.519
you also have your server component
 

00:13:36.519 --> 00:13:38.850
you also have your server component
where you pull this data from now this

00:13:38.850 --> 00:13:38.860
where you pull this data from now this
 

00:13:38.860 --> 00:13:40.590
where you pull this data from now this
is actually very hard to implement

00:13:40.590 --> 00:13:40.600
is actually very hard to implement
 

00:13:40.600 --> 00:13:43.170
is actually very hard to implement
properly that's why we have created the

00:13:43.170 --> 00:13:43.180
properly that's why we have created the
 

00:13:43.180 --> 00:13:45.750
properly that's why we have created the
paging library to make this common flows

00:13:45.750 --> 00:13:45.760
paging library to make this common flows
 

00:13:45.760 --> 00:13:50.120
paging library to make this common flows
very easy and efficient to implement

00:13:50.120 --> 00:13:50.130
very easy and efficient to implement
 

00:13:50.130 --> 00:13:52.800
very easy and efficient to implement
paging Bible comes with a page this

00:13:52.800 --> 00:13:52.810
paging Bible comes with a page this
 

00:13:52.810 --> 00:13:54.870
paging Bible comes with a page this
class which is an actual Java list

00:13:54.870 --> 00:13:54.880
class which is an actual Java list
 

00:13:54.880 --> 00:13:57.630
class which is an actual Java list
implementation but it works with a data

00:13:57.630 --> 00:13:57.640
implementation but it works with a data
 

00:13:57.640 --> 00:13:58.230
implementation but it works with a data
source

00:13:58.230 --> 00:13:58.240
source
 

00:13:58.240 --> 00:14:00.630
source
every time you access the items in the

00:14:00.630 --> 00:14:00.640
every time you access the items in the
 

00:14:00.640 --> 00:14:03.060
every time you access the items in the
pages it pulls data from the data source

00:14:03.060 --> 00:14:03.070
pages it pulls data from the data source
 

00:14:03.070 --> 00:14:05.910
pages it pulls data from the data source
lazily so if user Scrolls you need more

00:14:05.910 --> 00:14:05.920
lazily so if user Scrolls you need more
 

00:14:05.920 --> 00:14:08.870
lazily so if user Scrolls you need more
data it just brings them more data now

00:14:08.870 --> 00:14:08.880
data it just brings them more data now
 

00:14:08.880 --> 00:14:11.790
data it just brings them more data now
let's look at how we can get an instance

00:14:11.790 --> 00:14:11.800
let's look at how we can get an instance
 

00:14:11.800 --> 00:14:13.740
let's look at how we can get an instance
of these classes it's actually super

00:14:13.740 --> 00:14:13.750
of these classes it's actually super
 

00:14:13.750 --> 00:14:15.460
of these classes it's actually super
easy if you are using room

00:14:15.460 --> 00:14:15.470
easy if you are using room
 

00:14:15.470 --> 00:14:17.710
easy if you are using room
so room or didn't knows how to create a

00:14:17.710 --> 00:14:17.720
so room or didn't knows how to create a
 

00:14:17.720 --> 00:14:19.629
so room or didn't knows how to create a
data service it's a great example of how

00:14:19.629 --> 00:14:19.639
data service it's a great example of how
 

00:14:19.639 --> 00:14:21.699
data service it's a great example of how
these architecture components work very

00:14:21.699 --> 00:14:21.709
these architecture components work very
 

00:14:21.709 --> 00:14:24.160
these architecture components work very
well together so you can just tell the

00:14:24.160 --> 00:14:24.170
well together so you can just tell the
 

00:14:24.170 --> 00:14:26.199
well together so you can just tell the
room to return you a data source or a

00:14:26.199 --> 00:14:26.209
room to return you a data source or a
 

00:14:26.209 --> 00:14:28.600
room to return you a data source or a
data source Factory in this case I'm

00:14:28.600 --> 00:14:28.610
data source Factory in this case I'm
 

00:14:28.610 --> 00:14:31.180
data source Factory in this case I'm
using a data source Factory because data

00:14:31.180 --> 00:14:31.190
using a data source Factory because data
 

00:14:31.190 --> 00:14:33.699
using a data source Factory because data
is something that changes and each data

00:14:33.699 --> 00:14:33.709
is something that changes and each data
 

00:14:33.709 --> 00:14:36.309
is something that changes and each data
source represents a snapshot so we need

00:14:36.309 --> 00:14:36.319
source represents a snapshot so we need
 

00:14:36.319 --> 00:14:38.290
source represents a snapshot so we need
a factory so that we can create new data

00:14:38.290 --> 00:14:38.300
a factory so that we can create new data
 

00:14:38.300 --> 00:14:41.619
a factory so that we can create new data
sources and database changes once you

00:14:41.619 --> 00:14:41.629
sources and database changes once you
 

00:14:41.629 --> 00:14:43.509
sources and database changes once you
have that you can use this live page

00:14:43.509 --> 00:14:43.519
have that you can use this live page
 

00:14:43.519 --> 00:14:46.420
have that you can use this live page
builder class paste the page size and

00:14:46.420 --> 00:14:46.430
builder class paste the page size and
 

00:14:46.430 --> 00:14:48.759
builder class paste the page size and
call build on it it's going to give you

00:14:48.759 --> 00:14:48.769
call build on it it's going to give you
 

00:14:48.769 --> 00:14:51.280
call build on it it's going to give you
a live data of page list of users this

00:14:51.280 --> 00:14:51.290
a live data of page list of users this
 

00:14:51.290 --> 00:14:53.470
a live data of page list of users this
is almost the same thing as live data of

00:14:53.470 --> 00:14:53.480
is almost the same thing as live data of
 

00:14:53.480 --> 00:14:57.129
is almost the same thing as live data of
list of users now in your activity or

00:14:57.129 --> 00:14:57.139
list of users now in your activity or
 

00:14:57.139 --> 00:14:58.900
list of users now in your activity or
fragment you would use this page this

00:14:58.900 --> 00:14:58.910
fragment you would use this page this
 

00:14:58.910 --> 00:15:00.579
fragment you would use this page this
adapter which is a recycling your

00:15:00.579 --> 00:15:00.589
adapter which is a recycling your
 

00:15:00.589 --> 00:15:03.550
adapter which is a recycling your
adapter that works with pages you would

00:15:03.550 --> 00:15:03.560
adapter that works with pages you would
 

00:15:03.560 --> 00:15:05.499
adapter that works with pages you would
observe the live data every time you

00:15:05.499 --> 00:15:05.509
observe the live data every time you
 

00:15:05.509 --> 00:15:07.990
observe the live data every time you
have any pages give it to the adapter

00:15:07.990 --> 00:15:08.000
have any pages give it to the adapter
 

00:15:08.000 --> 00:15:10.509
have any pages give it to the adapter
and inside your adapter you can just

00:15:10.509 --> 00:15:10.519
and inside your adapter you can just
 

00:15:10.519 --> 00:15:12.970
and inside your adapter you can just
call this get item function to obtain

00:15:12.970 --> 00:15:12.980
call this get item function to obtain
 

00:15:12.980 --> 00:15:15.340
call this get item function to obtain
the user object this is a super simple

00:15:15.340 --> 00:15:15.350
the user object this is a super simple
 

00:15:15.350 --> 00:15:17.860
the user object this is a super simple
code to write and we take care of all

00:15:17.860 --> 00:15:17.870
code to write and we take care of all
 

00:15:17.870 --> 00:15:20.110
code to write and we take care of all
the hard work of paging it lazily for

00:15:20.110 --> 00:15:20.120
the hard work of paging it lazily for
 

00:15:20.120 --> 00:15:23.530
the hard work of paging it lazily for
you now even though I've shown all those

00:15:23.530 --> 00:15:23.540
you now even though I've shown all those
 

00:15:23.540 --> 00:15:25.900
you now even though I've shown all those
examples with live data paging supports

00:15:25.900 --> 00:15:25.910
examples with live data paging supports
 

00:15:25.910 --> 00:15:28.420
examples with live data paging supports
our X Java out of the box so if you are

00:15:28.420 --> 00:15:28.430
our X Java out of the box so if you are
 

00:15:28.430 --> 00:15:30.100
our X Java out of the box so if you are
using our Xterra and you want that

00:15:30.100 --> 00:15:30.110
using our Xterra and you want that
 

00:15:30.110 --> 00:15:33.790
using our Xterra and you want that
observable of pages you can just get the

00:15:33.790 --> 00:15:33.800
observable of pages you can just get the
 

00:15:33.800 --> 00:15:36.160
observable of pages you can just get the
same Factory that room generates but

00:15:36.160 --> 00:15:36.170
same Factory that room generates but
 

00:15:36.170 --> 00:15:38.710
same Factory that room generates but
instead use the rx page this builder to

00:15:38.710 --> 00:15:38.720
instead use the rx page this builder to
 

00:15:38.720 --> 00:15:42.939
instead use the rx page this builder to
build your observable or flowable now

00:15:42.939 --> 00:15:42.949
build your observable or flowable now
 

00:15:42.949 --> 00:15:44.470
build your observable or flowable now
paging supports paging from the

00:15:44.470 --> 00:15:44.480
paging supports paging from the
 

00:15:44.480 --> 00:15:46.809
paging supports paging from the
databases I have shown here but it's

00:15:46.809 --> 00:15:46.819
databases I have shown here but it's
 

00:15:46.819 --> 00:15:49.300
databases I have shown here but it's
also supports paging from the network or

00:15:49.300 --> 00:15:49.310
also supports paging from the network or
 

00:15:49.310 --> 00:15:52.150
also supports paging from the network or
you can combine both database and the

00:15:52.150 --> 00:15:52.160
you can combine both database and the
 

00:15:52.160 --> 00:15:54.939
you can combine both database and the
network for the best user experience to

00:15:54.939 --> 00:15:54.949
network for the best user experience to
 

00:15:54.949 --> 00:15:56.920
network for the best user experience to
learn more about it please join mine

00:15:56.920 --> 00:15:56.930
learn more about it please join mine
 

00:15:56.930 --> 00:15:58.960
learn more about it please join mine
Chris Craig tomorrow at 2:30 in the

00:15:58.960 --> 00:15:58.970
Chris Craig tomorrow at 2:30 in the
 

00:15:58.970 --> 00:16:06.660
Chris Craig tomorrow at 2:30 in the
paging session all right more about foo

00:16:06.660 --> 00:16:06.670
 
 

00:16:06.670 --> 00:16:08.769
 
possibly some of the suspense about what

00:16:08.769 --> 00:16:08.779
possibly some of the suspense about what
 

00:16:08.779 --> 00:16:11.650
possibly some of the suspense about what
foo is is gone now but yeah when you

00:16:11.650 --> 00:16:11.660
foo is is gone now but yeah when you
 

00:16:11.660 --> 00:16:13.900
foo is is gone now but yeah when you
think about sort of core problems that

00:16:13.900 --> 00:16:13.910
think about sort of core problems that
 

00:16:13.910 --> 00:16:16.569
think about sort of core problems that
almost every app has to deal with in app

00:16:16.569 --> 00:16:16.579
almost every app has to deal with in app
 

00:16:16.579 --> 00:16:18.999
almost every app has to deal with in app
navigation has to be close to the top of

00:16:18.999 --> 00:16:19.009
navigation has to be close to the top of
 

00:16:19.009 --> 00:16:21.639
navigation has to be close to the top of
the list there right now the framework

00:16:21.639 --> 00:16:21.649
the list there right now the framework
 

00:16:21.649 --> 00:16:24.069
the list there right now the framework
doesn't really offer anything for you to

00:16:24.069 --> 00:16:24.079
doesn't really offer anything for you to
 

00:16:24.079 --> 00:16:27.670
doesn't really offer anything for you to
do anything for you use there other than

00:16:27.670 --> 00:16:27.680
do anything for you use there other than
 

00:16:27.680 --> 00:16:28.720
do anything for you use there other than
start activity

00:16:28.720 --> 00:16:28.730
start activity
 

00:16:28.730 --> 00:16:30.940
start activity
which for various reasons is not the

00:16:30.940 --> 00:16:30.950
which for various reasons is not the
 

00:16:30.950 --> 00:16:34.300
which for various reasons is not the
best option so that means that for

00:16:34.300 --> 00:16:34.310
best option so that means that for
 

00:16:34.310 --> 00:16:36.100
best option so that means that for
navigation there are a bunch of things

00:16:36.100 --> 00:16:36.110
navigation there are a bunch of things
 

00:16:36.110 --> 00:16:37.690
navigation there are a bunch of things
that you have to figure out on your own

00:16:37.690 --> 00:16:37.700
that you have to figure out on your own
 

00:16:37.700 --> 00:16:41.140
that you have to figure out on your own
and that range is from executing a

00:16:41.140 --> 00:16:41.150
and that range is from executing a
 

00:16:41.150 --> 00:16:43.270
and that range is from executing a
fragment transaction without throwing an

00:16:43.270 --> 00:16:43.280
fragment transaction without throwing an
 

00:16:43.280 --> 00:16:46.210
fragment transaction without throwing an
exception hopefully passing arguments

00:16:46.210 --> 00:16:46.220
exception hopefully passing arguments
 

00:16:46.220 --> 00:16:49.180
exception hopefully passing arguments
from place to place possibly even with

00:16:49.180 --> 00:16:49.190
from place to place possibly even with
 

00:16:49.190 --> 00:16:51.510
from place to place possibly even with
type safety if you can figure that out

00:16:51.510 --> 00:16:51.520
type safety if you can figure that out
 

00:16:51.520 --> 00:16:53.950
type safety if you can figure that out
testing the navigation is working and

00:16:53.950 --> 00:16:53.960
testing the navigation is working and
 

00:16:53.960 --> 00:16:55.450
testing the navigation is working and
that the right things are happening when

00:16:55.450 --> 00:16:55.460
that the right things are happening when
 

00:16:55.460 --> 00:16:58.420
that the right things are happening when
you navigate from place to place that

00:16:58.420 --> 00:16:58.430
you navigate from place to place that
 

00:16:58.430 --> 00:16:59.860
you navigate from place to place that
the making sure that the up and back

00:16:59.860 --> 00:16:59.870
the making sure that the up and back
 

00:16:59.870 --> 00:17:02.050
the making sure that the up and back
buttons work correctly and take the user

00:17:02.050 --> 00:17:02.060
buttons work correctly and take the user
 

00:17:02.060 --> 00:17:05.260
buttons work correctly and take the user
where they're supposed to go mapping

00:17:05.260 --> 00:17:05.270
where they're supposed to go mapping
 

00:17:05.270 --> 00:17:07.060
where they're supposed to go mapping
deep links to destinations in your app

00:17:07.060 --> 00:17:07.070
deep links to destinations in your app
 

00:17:07.070 --> 00:17:09.790
deep links to destinations in your app
and having that work and by the time

00:17:09.790 --> 00:17:09.800
and having that work and by the time
 

00:17:09.800 --> 00:17:12.010
and having that work and by the time
you've solved all these problems you've

00:17:12.010 --> 00:17:12.020
you've solved all these problems you've
 

00:17:12.020 --> 00:17:13.740
you've solved all these problems you've
typically gone one of two directions

00:17:13.740 --> 00:17:13.750
typically gone one of two directions
 

00:17:13.750 --> 00:17:16.510
typically gone one of two directions
you've either written 60% of a

00:17:16.510 --> 00:17:16.520
you've either written 60% of a
 

00:17:16.520 --> 00:17:18.640
you've either written 60% of a
navigation framework just for your app

00:17:18.640 --> 00:17:18.650
navigation framework just for your app
 

00:17:18.650 --> 00:17:21.550
navigation framework just for your app
or you've got a lot of error-prone

00:17:21.550 --> 00:17:21.560
or you've got a lot of error-prone
 

00:17:21.560 --> 00:17:24.730
or you've got a lot of error-prone
boilerplate so everywhere navigation

00:17:24.730 --> 00:17:24.740
boilerplate so everywhere navigation
 

00:17:24.740 --> 00:17:25.900
boilerplate so everywhere navigation
needs to happen you've got a bunch of

00:17:25.900 --> 00:17:25.910
needs to happen you've got a bunch of
 

00:17:25.910 --> 00:17:27.579
needs to happen you've got a bunch of
parallel lines of code that need to be

00:17:27.579 --> 00:17:27.589
parallel lines of code that need to be
 

00:17:27.589 --> 00:17:29.770
parallel lines of code that need to be
changed anytime the navigational

00:17:29.770 --> 00:17:29.780
changed anytime the navigational
 

00:17:29.780 --> 00:17:32.290
changed anytime the navigational
structure of the app changes and this is

00:17:32.290 --> 00:17:32.300
structure of the app changes and this is
 

00:17:32.300 --> 00:17:35.110
structure of the app changes and this is
all pretty brittle and can end up being

00:17:35.110 --> 00:17:35.120
all pretty brittle and can end up being
 

00:17:35.120 --> 00:17:38.110
all pretty brittle and can end up being
a headache and individually these

00:17:38.110 --> 00:17:38.120
a headache and individually these
 

00:17:38.120 --> 00:17:40.780
a headache and individually these
problems are pretty tractable but when

00:17:40.780 --> 00:17:40.790
problems are pretty tractable but when
 

00:17:40.790 --> 00:17:42.070
problems are pretty tractable but when
you compose them into a real-world

00:17:42.070 --> 00:17:42.080
you compose them into a real-world
 

00:17:42.080 --> 00:17:45.570
you compose them into a real-world
example so say that I have an item

00:17:45.570 --> 00:17:45.580
example so say that I have an item
 

00:17:45.580 --> 00:17:48.370
example so say that I have an item
screen in my app maybe a product screen

00:17:48.370 --> 00:17:48.380
screen in my app maybe a product screen
 

00:17:48.380 --> 00:17:51.400
screen in my app maybe a product screen
and that screen is accessible via deep

00:17:51.400 --> 00:17:51.410
and that screen is accessible via deep
 

00:17:51.410 --> 00:17:55.840
and that screen is accessible via deep
link but actually there are other pages

00:17:55.840 --> 00:17:55.850
link but actually there are other pages
 

00:17:55.850 --> 00:17:58.360
link but actually there are other pages
that you know if the user had navigated

00:17:58.360 --> 00:17:58.370
that you know if the user had navigated
 

00:17:58.370 --> 00:18:00.280
that you know if the user had navigated
here by opening the app from the home

00:18:00.280 --> 00:18:00.290
here by opening the app from the home
 

00:18:00.290 --> 00:18:02.410
here by opening the app from the home
screen they would have come via the home

00:18:02.410 --> 00:18:02.420
screen they would have come via the home
 

00:18:02.420 --> 00:18:05.230
screen they would have come via the home
screen the category screen and I want

00:18:05.230 --> 00:18:05.240
screen the category screen and I want
 

00:18:05.240 --> 00:18:07.060
screen the category screen and I want
the UP button to take them through those

00:18:07.060 --> 00:18:07.070
the UP button to take them through those
 

00:18:07.070 --> 00:18:09.490
the UP button to take them through those
screens rather than exiting the app

00:18:09.490 --> 00:18:09.500
screens rather than exiting the app
 

00:18:09.500 --> 00:18:13.210
screens rather than exiting the app
right so that means that if someone deep

00:18:13.210 --> 00:18:13.220
right so that means that if someone deep
 

00:18:13.220 --> 00:18:15.160
right so that means that if someone deep
links into the app I need to synthesize

00:18:15.160 --> 00:18:15.170
links into the app I need to synthesize
 

00:18:15.170 --> 00:18:17.890
links into the app I need to synthesize
these screens and add them to the back

00:18:17.890 --> 00:18:17.900
these screens and add them to the back
 

00:18:17.900 --> 00:18:20.280
these screens and add them to the back
stack but only on a deep lake and

00:18:20.280 --> 00:18:20.290
stack but only on a deep lake and
 

00:18:20.290 --> 00:18:22.840
stack but only on a deep lake and
talking to a third-party developer or he

00:18:22.840 --> 00:18:22.850
talking to a third-party developer or he
 

00:18:22.850 --> 00:18:24.640
talking to a third-party developer or he
said you know it's when you're in the

00:18:24.640 --> 00:18:24.650
said you know it's when you're in the
 

00:18:24.650 --> 00:18:27.760
said you know it's when you're in the
middle of writing code to do this you

00:18:27.760 --> 00:18:27.770
middle of writing code to do this you
 

00:18:27.770 --> 00:18:29.530
middle of writing code to do this you
know on any deep link into my app and

00:18:29.530 --> 00:18:29.540
know on any deep link into my app and
 

00:18:29.540 --> 00:18:31.870
know on any deep link into my app and
synthesize the back stack correctly you

00:18:31.870 --> 00:18:31.880
synthesize the back stack correctly you
 

00:18:31.880 --> 00:18:33.550
synthesize the back stack correctly you
start to feel like maybe this is a

00:18:33.550 --> 00:18:33.560
start to feel like maybe this is a
 

00:18:33.560 --> 00:18:37.330
start to feel like maybe this is a
failure of the framework and so that's

00:18:37.330 --> 00:18:37.340
failure of the framework and so that's
 

00:18:37.340 --> 00:18:39.040
failure of the framework and so that's
why we're really happy to be launching

00:18:39.040 --> 00:18:39.050
why we're really happy to be launching
 

00:18:39.050 --> 00:18:40.510
why we're really happy to be launching
navigation

00:18:40.510 --> 00:18:40.520
navigation
 

00:18:40.520 --> 00:18:44.590
navigation
and which is a both a runtime component

00:18:44.590 --> 00:18:44.600
and which is a both a runtime component
 

00:18:44.600 --> 00:18:46.990
and which is a both a runtime component
that performs navigation for you and a

00:18:46.990 --> 00:18:47.000
that performs navigation for you and a
 

00:18:47.000 --> 00:18:50.200
that performs navigation for you and a
visual tool that works with XML to

00:18:50.200 --> 00:18:50.210
visual tool that works with XML to
 

00:18:50.210 --> 00:18:52.030
visual tool that works with XML to
define the navigational structure of

00:18:52.030 --> 00:18:52.040
define the navigational structure of
 

00:18:52.040 --> 00:18:55.000
define the navigational structure of
your app and then you know allows you to

00:18:55.000 --> 00:18:55.010
your app and then you know allows you to
 

00:18:55.010 --> 00:18:56.890
your app and then you know allows you to
just navigate at runtime with a single

00:18:56.890 --> 00:18:56.900
just navigate at runtime with a single
 

00:18:56.900 --> 00:19:01.990
just navigate at runtime with a single
navigate call and so the kinds of things

00:19:01.990 --> 00:19:02.000
navigate call and so the kinds of things
 

00:19:02.000 --> 00:19:04.360
navigate call and so the kinds of things
that you're gonna get for free right

00:19:04.360 --> 00:19:04.370
that you're gonna get for free right
 

00:19:04.370 --> 00:19:06.010
that you're gonna get for free right
that you just simply need to define an

00:19:06.010 --> 00:19:06.020
that you just simply need to define an
 

00:19:06.020 --> 00:19:08.110
that you just simply need to define an
XML and then the navigation framework

00:19:08.110 --> 00:19:08.120
XML and then the navigation framework
 

00:19:08.120 --> 00:19:10.919
XML and then the navigation framework
will handle at runtime for you our

00:19:10.919 --> 00:19:10.929
will handle at runtime for you our
 

00:19:10.929 --> 00:19:15.580
will handle at runtime for you our
animations passing arguments in a type

00:19:15.580 --> 00:19:15.590
animations passing arguments in a type
 

00:19:15.590 --> 00:19:18.580
animations passing arguments in a type
safe way from place to place making sure

00:19:18.580 --> 00:19:18.590
safe way from place to place making sure
 

00:19:18.590 --> 00:19:22.350
safe way from place to place making sure
that up and back work correctly and

00:19:22.350 --> 00:19:22.360
that up and back work correctly and
 

00:19:22.360 --> 00:19:25.419
that up and back work correctly and
mapping deep links to various screens in

00:19:25.419 --> 00:19:25.429
mapping deep links to various screens in
 

00:19:25.429 --> 00:19:28.870
mapping deep links to various screens in
your app and last but not least no more

00:19:28.870 --> 00:19:28.880
your app and last but not least no more
 

00:19:28.880 --> 00:19:38.420
your app and last but not least no more
fragment transactions ever

00:19:38.420 --> 00:19:38.430
 
 

00:19:38.430 --> 00:19:41.580
 
so I'll show you a couple demos of this

00:19:41.580 --> 00:19:41.590
so I'll show you a couple demos of this
 

00:19:41.590 --> 00:19:45.330
so I'll show you a couple demos of this
in action the first one is just to kind

00:19:45.330 --> 00:19:45.340
in action the first one is just to kind
 

00:19:45.340 --> 00:19:47.880
in action the first one is just to kind
of give you an idea of what this all is

00:19:47.880 --> 00:19:47.890
of give you an idea of what this all is
 

00:19:47.890 --> 00:19:49.890
of give you an idea of what this all is
so we're looking at a set of fragment

00:19:49.890 --> 00:19:49.900
so we're looking at a set of fragment
 

00:19:49.900 --> 00:19:51.840
so we're looking at a set of fragment
Trent fragment destinations in my app

00:19:51.840 --> 00:19:51.850
Trent fragment destinations in my app
 

00:19:51.850 --> 00:19:54.600
Trent fragment destinations in my app
and I'm adding a new one and now I'm

00:19:54.600 --> 00:19:54.610
and I'm adding a new one and now I'm
 

00:19:54.610 --> 00:19:57.210
and I'm adding a new one and now I'm
creating an action and this action is

00:19:57.210 --> 00:19:57.220
creating an action and this action is
 

00:19:57.220 --> 00:19:58.530
creating an action and this action is
the thing that I'm actually going to

00:19:58.530 --> 00:19:58.540
the thing that I'm actually going to
 

00:19:58.540 --> 00:20:01.380
the thing that I'm actually going to
call it run time to go from place to

00:20:01.380 --> 00:20:01.390
call it run time to go from place to
 

00:20:01.390 --> 00:20:05.010
call it run time to go from place to
place and you can see that there are a

00:20:05.010 --> 00:20:05.020
place and you can see that there are a
 

00:20:05.020 --> 00:20:06.210
place and you can see that there are a
bunch of other options that we'll get

00:20:06.210 --> 00:20:06.220
bunch of other options that we'll get
 

00:20:06.220 --> 00:20:09.330
bunch of other options that we'll get
into more in the navigation talk but the

00:20:09.330 --> 00:20:09.340
into more in the navigation talk but the
 

00:20:09.340 --> 00:20:10.890
into more in the navigation talk but the
one thing I do want to show you in more

00:20:10.890 --> 00:20:10.900
one thing I do want to show you in more
 

00:20:10.900 --> 00:20:14.460
one thing I do want to show you in more
detail right now is the example we went

00:20:14.460 --> 00:20:14.470
detail right now is the example we went
 

00:20:14.470 --> 00:20:16.919
detail right now is the example we went
through before so this is a simplified

00:20:16.919 --> 00:20:16.929
through before so this is a simplified
 

00:20:16.929 --> 00:20:19.980
through before so this is a simplified
version of that where there isn't a

00:20:19.980 --> 00:20:19.990
version of that where there isn't a
 

00:20:19.990 --> 00:20:21.540
version of that where there isn't a
category screen we just have the home

00:20:21.540 --> 00:20:21.550
category screen we just have the home
 

00:20:21.550 --> 00:20:24.990
category screen we just have the home
screen and then the item screen but I'm

00:20:24.990 --> 00:20:25.000
screen and then the item screen but I'm
 

00:20:25.000 --> 00:20:28.980
screen and then the item screen but I'm
gonna right now configure this to both

00:20:28.980 --> 00:20:28.990
gonna right now configure this to both
 

00:20:28.990 --> 00:20:30.750
gonna right now configure this to both
have a deep link pointing at the item

00:20:30.750 --> 00:20:30.760
have a deep link pointing at the item
 

00:20:30.760 --> 00:20:33.360
have a deep link pointing at the item
screen and make sure that if someone

00:20:33.360 --> 00:20:33.370
screen and make sure that if someone
 

00:20:33.370 --> 00:20:36.210
screen and make sure that if someone
deep links into the app that they go to

00:20:36.210 --> 00:20:36.220
deep links into the app that they go to
 

00:20:36.220 --> 00:20:38.400
deep links into the app that they go to
the home screen first when they hit

00:20:38.400 --> 00:20:38.410
the home screen first when they hit
 

00:20:38.410 --> 00:20:40.740
the home screen first when they hit
upper back rather than just exiting the

00:20:40.740 --> 00:20:40.750
upper back rather than just exiting the
 

00:20:40.750 --> 00:20:44.520
upper back rather than just exiting the
app right away so first I'm just gonna

00:20:44.520 --> 00:20:44.530
app right away so first I'm just gonna
 

00:20:44.530 --> 00:20:47.750
app right away so first I'm just gonna
configure a deep link on this screen and

00:20:47.750 --> 00:20:47.760
configure a deep link on this screen and
 

00:20:47.760 --> 00:20:50.190
configure a deep link on this screen and
the curly braket said I'm gonna put

00:20:50.190 --> 00:20:50.200
the curly braket said I'm gonna put
 

00:20:50.200 --> 00:20:52.590
the curly braket said I'm gonna put
around item ID indicate that I want to

00:20:52.590 --> 00:20:52.600
around item ID indicate that I want to
 

00:20:52.600 --> 00:20:55.230
around item ID indicate that I want to
extract a variable there and pass it as

00:20:55.230 --> 00:20:55.240
extract a variable there and pass it as
 

00:20:55.240 --> 00:20:57.990
extract a variable there and pass it as
an argument into the item screen okay

00:20:57.990 --> 00:20:58.000
an argument into the item screen okay
 

00:20:58.000 --> 00:20:59.549
an argument into the item screen okay
and now that's ready to go and if I

00:20:59.549 --> 00:20:59.559
and now that's ready to go and if I
 

00:20:59.559 --> 00:21:02.250
and now that's ready to go and if I
compile run my app that'll just work and

00:21:02.250 --> 00:21:02.260
compile run my app that'll just work and
 

00:21:02.260 --> 00:21:05.160
compile run my app that'll just work and
navigate to the right destination now I

00:21:05.160 --> 00:21:05.170
navigate to the right destination now I
 

00:21:05.170 --> 00:21:06.870
navigate to the right destination now I
just set the home screen to the start

00:21:06.870 --> 00:21:06.880
just set the home screen to the start
 

00:21:06.880 --> 00:21:09.390
just set the home screen to the start
destination that means that it's the

00:21:09.390 --> 00:21:09.400
destination that means that it's the
 

00:21:09.400 --> 00:21:11.760
destination that means that it's the
hierarchical parent of all the other

00:21:11.760 --> 00:21:11.770
hierarchical parent of all the other
 

00:21:11.770 --> 00:21:14.340
hierarchical parent of all the other
screens in the graph so when someone

00:21:14.340 --> 00:21:14.350
screens in the graph so when someone
 

00:21:14.350 --> 00:21:16.710
screens in the graph so when someone
deep links into the item screen and then

00:21:16.710 --> 00:21:16.720
deep links into the item screen and then
 

00:21:16.720 --> 00:21:19.140
deep links into the item screen and then
hits up they're gonna go directly to

00:21:19.140 --> 00:21:19.150
hits up they're gonna go directly to
 

00:21:19.150 --> 00:21:22.200
hits up they're gonna go directly to
that home screen so now I can now I've

00:21:22.200 --> 00:21:22.210
that home screen so now I can now I've
 

00:21:22.210 --> 00:21:23.730
that home screen so now I can now I've
just solved in 30 seconds what would

00:21:23.730 --> 00:21:23.740
just solved in 30 seconds what would
 

00:21:23.740 --> 00:21:26.340
just solved in 30 seconds what would
have been a really terrible and

00:21:26.340 --> 00:21:26.350
have been a really terrible and
 

00:21:26.350 --> 00:21:28.910
have been a really terrible and
time-consuming task in Java or Kotlin

00:21:28.910 --> 00:21:28.920
time-consuming task in Java or Kotlin
 

00:21:28.920 --> 00:21:33.450
time-consuming task in Java or Kotlin
back in the old world so now I'm gonna

00:21:33.450 --> 00:21:33.460
back in the old world so now I'm gonna
 

00:21:33.460 --> 00:21:34.770
back in the old world so now I'm gonna
pass it off to eat to talk about work

00:21:34.770 --> 00:21:34.780
pass it off to eat to talk about work
 

00:21:34.780 --> 00:21:39.720
pass it off to eat to talk about work
manager I mean using navigation a couple

00:21:39.720 --> 00:21:39.730
manager I mean using navigation a couple
 

00:21:39.730 --> 00:21:41.820
manager I mean using navigation a couple
of weeks for some demos this feels like

00:21:41.820 --> 00:21:41.830
of weeks for some demos this feels like
 

00:21:41.830 --> 00:21:45.240
of weeks for some demos this feels like
magic so I hope you all liked it our

00:21:45.240 --> 00:21:45.250
magic so I hope you all liked it our
 

00:21:45.250 --> 00:21:47.250
magic so I hope you all liked it our
next like takes your component

00:21:47.250 --> 00:21:47.260
next like takes your component
 

00:21:47.260 --> 00:21:50.130
next like takes your component
it's work manager now work major is our

00:21:50.130 --> 00:21:50.140
it's work manager now work major is our
 

00:21:50.140 --> 00:21:52.800
it's work manager now work major is our
solution for deferrable granted

00:21:52.800 --> 00:21:52.810
solution for deferrable granted
 

00:21:52.810 --> 00:21:55.440
solution for deferrable granted
execution what I mean by this you're out

00:21:55.440 --> 00:21:55.450
execution what I mean by this you're out
 

00:21:55.450 --> 00:21:57.870
execution what I mean by this you're out
of actions on Android that you really

00:21:57.870 --> 00:21:57.880
of actions on Android that you really
 

00:21:57.880 --> 00:21:59.660
of actions on Android that you really
really want to do if user does something

00:21:59.660 --> 00:21:59.670
really want to do if user does something
 

00:21:59.670 --> 00:22:02.280
really want to do if user does something
for instance if user sighs so send a

00:22:02.280 --> 00:22:02.290
for instance if user sighs so send a
 

00:22:02.290 --> 00:22:05.310
for instance if user sighs so send a
tweet you want to send it now but if

00:22:05.310 --> 00:22:05.320
tweet you want to send it now but if
 

00:22:05.320 --> 00:22:07.320
tweet you want to send it now but if
there is no network connection you want

00:22:07.320 --> 00:22:07.330
there is no network connection you want
 

00:22:07.330 --> 00:22:09.030
there is no network connection you want
to send it as soon as device is

00:22:09.030 --> 00:22:09.040
to send it as soon as device is
 

00:22:09.040 --> 00:22:12.750
to send it as soon as device is
connected to the internet there's things

00:22:12.750 --> 00:22:12.760
connected to the internet there's things
 

00:22:12.760 --> 00:22:14.610
connected to the internet there's things
like uploading locks you may want to do

00:22:14.610 --> 00:22:14.620
like uploading locks you may want to do
 

00:22:14.620 --> 00:22:17.430
like uploading locks you may want to do
if the device is charging or you may

00:22:17.430 --> 00:22:17.440
if the device is charging or you may
 

00:22:17.440 --> 00:22:19.290
if the device is charging or you may
want to periodically sync your data with

00:22:19.290 --> 00:22:19.300
want to periodically sync your data with
 

00:22:19.300 --> 00:22:22.050
want to periodically sync your data with
your back-end now we know this is not a

00:22:22.050 --> 00:22:22.060
your back-end now we know this is not a
 

00:22:22.060 --> 00:22:24.390
your back-end now we know this is not a
new problem on Android and we had some

00:22:24.390 --> 00:22:24.400
new problem on Android and we had some
 

00:22:24.400 --> 00:22:26.430
new problem on Android and we had some
solutions for this we have introduced

00:22:26.430 --> 00:22:26.440
solutions for this we have introduced
 

00:22:26.440 --> 00:22:27.270
solutions for this we have introduced
jobscheduler

00:22:27.270 --> 00:22:27.280
jobscheduler
 

00:22:27.280 --> 00:22:29.940
jobscheduler
in lollipop and we have fireman's job to

00:22:29.940 --> 00:22:29.950
in lollipop and we have fireman's job to
 

00:22:29.950 --> 00:22:31.230
in lollipop and we have fireman's job to
switcher that back force

00:22:31.230 --> 00:22:31.240
switcher that back force
 

00:22:31.240 --> 00:22:33.240
switcher that back force
dysfunctionality in the devices which

00:22:33.240 --> 00:22:33.250
dysfunctionality in the devices which
 

00:22:33.250 --> 00:22:35.640
dysfunctionality in the devices which
has Google Play services and we also

00:22:35.640 --> 00:22:35.650
has Google Play services and we also
 

00:22:35.650 --> 00:22:38.820
has Google Play services and we also
have alarm manager for exact timing now

00:22:38.820 --> 00:22:38.830
have alarm manager for exact timing now
 

00:22:38.830 --> 00:22:41.430
have alarm manager for exact timing now
each of these has different behaviors

00:22:41.430 --> 00:22:41.440
each of these has different behaviors
 

00:22:41.440 --> 00:22:44.940
each of these has different behaviors
and different api's it becomes very hard

00:22:44.940 --> 00:22:44.950
and different api's it becomes very hard
 

00:22:44.950 --> 00:22:47.700
and different api's it becomes very hard
to implement as we have built work

00:22:47.700 --> 00:22:47.710
to implement as we have built work
 

00:22:47.710 --> 00:22:50.780
to implement as we have built work
manager that sits on top of them and

00:22:50.780 --> 00:22:50.790
manager that sits on top of them and
 

00:22:50.790 --> 00:22:54.360
manager that sits on top of them and
provides a much cleaner API with new

00:22:54.360 --> 00:22:54.370
provides a much cleaner API with new
 

00:22:54.370 --> 00:22:57.390
provides a much cleaner API with new
functionalities work major has two

00:22:57.390 --> 00:22:57.400
functionalities work major has two
 

00:22:57.400 --> 00:22:59.610
functionalities work major has two
simple concepts you have the workers

00:22:59.610 --> 00:22:59.620
simple concepts you have the workers
 

00:22:59.620 --> 00:23:02.820
simple concepts you have the workers
that execute these actions and you have

00:23:02.820 --> 00:23:02.830
that execute these actions and you have
 

00:23:02.830 --> 00:23:04.970
that execute these actions and you have
the work requests which trigger these

00:23:04.970 --> 00:23:04.980
the work requests which trigger these
 

00:23:04.980 --> 00:23:09.120
the work requests which trigger these
workers now if you want to look at the

00:23:09.120 --> 00:23:09.130
workers now if you want to look at the
 

00:23:09.130 --> 00:23:11.430
workers now if you want to look at the
sample worker this is basically all you

00:23:11.430 --> 00:23:11.440
sample worker this is basically all you
 

00:23:11.440 --> 00:23:14.190
sample worker this is basically all you
do you extend the worker cause you

00:23:14.190 --> 00:23:14.200
do you extend the worker cause you
 

00:23:14.200 --> 00:23:16.710
do you extend the worker cause you
implement one function they says do the

00:23:16.710 --> 00:23:16.720
implement one function they says do the
 

00:23:16.720 --> 00:23:19.620
implement one function they says do the
work and that function just needs to

00:23:19.620 --> 00:23:19.630
work and that function just needs to
 

00:23:19.630 --> 00:23:21.960
work and that function just needs to
return us what happened as a result of

00:23:21.960 --> 00:23:21.970
return us what happened as a result of
 

00:23:21.970 --> 00:23:23.730
return us what happened as a result of
that work so you can do whatever you do

00:23:23.730 --> 00:23:23.740
that work so you can do whatever you do
 

00:23:23.740 --> 00:23:26.250
that work so you can do whatever you do
and you returned resolved there's no

00:23:26.250 --> 00:23:26.260
and you returned resolved there's no
 

00:23:26.260 --> 00:23:29.310
and you returned resolved there's no
services no interns no bundles nothing

00:23:29.310 --> 00:23:29.320
services no interns no bundles nothing
 

00:23:29.320 --> 00:23:33.090
services no interns no bundles nothing
like that once we have the worker we

00:23:33.090 --> 00:23:33.100
like that once we have the worker we
 

00:23:33.100 --> 00:23:35.610
like that once we have the worker we
need to create a work request so you can

00:23:35.610 --> 00:23:35.620
need to create a work request so you can
 

00:23:35.620 --> 00:23:37.820
need to create a work request so you can
use this one-time work builder or

00:23:37.820 --> 00:23:37.830
use this one-time work builder or
 

00:23:37.830 --> 00:23:40.320
use this one-time work builder or
there's a product version of this one

00:23:40.320 --> 00:23:40.330
there's a product version of this one
 

00:23:40.330 --> 00:23:43.680
there's a product version of this one
you can specify the worker cost but now

00:23:43.680 --> 00:23:43.690
you can specify the worker cost but now
 

00:23:43.690 --> 00:23:46.530
you can specify the worker cost but now
you can also add constraints you can

00:23:46.530 --> 00:23:46.540
you can also add constraints you can
 

00:23:46.540 --> 00:23:48.420
you can also add constraints you can
tell it only run if there is network

00:23:48.420 --> 00:23:48.430
tell it only run if there is network
 

00:23:48.430 --> 00:23:50.820
tell it only run if there is network
connection if the device is charging or

00:23:50.820 --> 00:23:50.830
connection if the device is charging or
 

00:23:50.830 --> 00:23:53.820
connection if the device is charging or
you can specify a back of criteria so if

00:23:53.820 --> 00:23:53.830
you can specify a back of criteria so if
 

00:23:53.830 --> 00:23:55.830
you can specify a back of criteria so if
the worker is failing how should we

00:23:55.830 --> 00:23:55.840
the worker is failing how should we
 

00:23:55.840 --> 00:23:59.450
the worker is failing how should we
retry it you can also pass input

00:23:59.450 --> 00:23:59.460
retry it you can also pass input
 

00:23:59.460 --> 00:24:02.539
retry it you can also pass input
meters to these workers once you built

00:24:02.539 --> 00:24:02.549
meters to these workers once you built
 

00:24:02.549 --> 00:24:04.850
meters to these workers once you built
that work request you can get an

00:24:04.850 --> 00:24:04.860
that work request you can get an
 

00:24:04.860 --> 00:24:07.399
that work request you can get an
instance of work manager and nqe that

00:24:07.399 --> 00:24:07.409
instance of work manager and nqe that
 

00:24:07.409 --> 00:24:09.680
instance of work manager and nqe that
work manager will take care of executing

00:24:09.680 --> 00:24:09.690
work manager will take care of executing
 

00:24:09.690 --> 00:24:13.639
work manager will take care of executing
it one of the important distinctive

00:24:13.639 --> 00:24:13.649
it one of the important distinctive
 

00:24:13.649 --> 00:24:16.010
it one of the important distinctive
features of work manager is that it has

00:24:16.010 --> 00:24:16.020
features of work manager is that it has
 

00:24:16.020 --> 00:24:18.590
features of work manager is that it has
input and output semantics so your

00:24:18.590 --> 00:24:18.600
input and output semantics so your
 

00:24:18.600 --> 00:24:21.320
input and output semantics so your
workers can receive input but they can

00:24:21.320 --> 00:24:21.330
workers can receive input but they can
 

00:24:21.330 --> 00:24:24.470
workers can receive input but they can
also output some data you can observe

00:24:24.470 --> 00:24:24.480
also output some data you can observe
 

00:24:24.480 --> 00:24:26.779
also output some data you can observe
this data through work manager was

00:24:26.779 --> 00:24:26.789
this data through work manager was
 

00:24:26.789 --> 00:24:29.000
this data through work manager was
actually very useful to chain your

00:24:29.000 --> 00:24:29.010
actually very useful to chain your
 

00:24:29.010 --> 00:24:31.940
actually very useful to chain your
workers so imagine you have an

00:24:31.940 --> 00:24:31.950
workers so imagine you have an
 

00:24:31.950 --> 00:24:34.430
workers so imagine you have an
application where user picks an image

00:24:34.430 --> 00:24:34.440
application where user picks an image
 

00:24:34.440 --> 00:24:36.289
application where user picks an image
from their device then you want to some

00:24:36.289 --> 00:24:36.299
from their device then you want to some
 

00:24:36.299 --> 00:24:38.180
from their device then you want to some
run some image processing on that

00:24:38.180 --> 00:24:38.190
run some image processing on that
 

00:24:38.190 --> 00:24:41.330
run some image processing on that
picture and now once it's done you want

00:24:41.330 --> 00:24:41.340
picture and now once it's done you want
 

00:24:41.340 --> 00:24:43.850
picture and now once it's done you want
to upload it to your server now these

00:24:43.850 --> 00:24:43.860
to upload it to your server now these
 

00:24:43.860 --> 00:24:46.159
to upload it to your server now these
are two different units of work like you

00:24:46.159 --> 00:24:46.169
are two different units of work like you
 

00:24:46.169 --> 00:24:48.080
are two different units of work like you
can process the image maybe you want to

00:24:48.080 --> 00:24:48.090
can process the image maybe you want to
 

00:24:48.090 --> 00:24:49.850
can process the image maybe you want to
do it when the device is idle or you can

00:24:49.850 --> 00:24:49.860
do it when the device is idle or you can
 

00:24:49.860 --> 00:24:52.399
do it when the device is idle or you can
do it anytime but to upload it to a

00:24:52.399 --> 00:24:52.409
do it anytime but to upload it to a
 

00:24:52.409 --> 00:24:54.740
do it anytime but to upload it to a
server you need internet connection but

00:24:54.740 --> 00:24:54.750
server you need internet connection but
 

00:24:54.750 --> 00:24:56.899
server you need internet connection but
you don't want to wait the processing

00:24:56.899 --> 00:24:56.909
you don't want to wait the processing
 

00:24:56.909 --> 00:24:58.669
you don't want to wait the processing
for the internet relation because it

00:24:58.669 --> 00:24:58.679
for the internet relation because it
 

00:24:58.679 --> 00:25:01.430
for the internet relation because it
doesn't need it this is super easy to

00:25:01.430 --> 00:25:01.440
doesn't need it this is super easy to
 

00:25:01.440 --> 00:25:04.850
doesn't need it this is super easy to
implement in work manager so have two

00:25:04.850 --> 00:25:04.860
implement in work manager so have two
 

00:25:04.860 --> 00:25:05.659
implement in work manager so have two
different workers

00:25:05.659 --> 00:25:05.669
different workers
 

00:25:05.669 --> 00:25:08.240
different workers
they'll have single functionality one of

00:25:08.240 --> 00:25:08.250
they'll have single functionality one of
 

00:25:08.250 --> 00:25:10.340
they'll have single functionality one of
them does the image processing the other

00:25:10.340 --> 00:25:10.350
them does the image processing the other
 

00:25:10.350 --> 00:25:13.399
them does the image processing the other
one does the upload to server well

00:25:13.399 --> 00:25:13.409
one does the upload to server well
 

00:25:13.409 --> 00:25:15.409
one does the upload to server well
create a helper function that receives

00:25:15.409 --> 00:25:15.419
create a helper function that receives
 

00:25:15.419 --> 00:25:17.690
create a helper function that receives
an image file and creates the process in

00:25:17.690 --> 00:25:17.700
an image file and creates the process in
 

00:25:17.700 --> 00:25:20.299
an image file and creates the process in
which work requests so it prepares the

00:25:20.299 --> 00:25:20.309
which work requests so it prepares the
 

00:25:20.309 --> 00:25:22.580
which work requests so it prepares the
input just uses the same builder to

00:25:22.580 --> 00:25:22.590
input just uses the same builder to
 

00:25:22.590 --> 00:25:26.630
input just uses the same builder to
produce the request now we get that now

00:25:26.630 --> 00:25:26.640
produce the request now we get that now
 

00:25:26.640 --> 00:25:29.450
produce the request now we get that now
we wanted our network upload to wait for

00:25:29.450 --> 00:25:29.460
we wanted our network upload to wait for
 

00:25:29.460 --> 00:25:31.580
we wanted our network upload to wait for
the internet connection so we set a

00:25:31.580 --> 00:25:31.590
the internet connection so we set a
 

00:25:31.590 --> 00:25:33.889
the internet connection so we set a
constraint we say ok wait for internet

00:25:33.889 --> 00:25:33.899
constraint we say ok wait for internet
 

00:25:33.899 --> 00:25:35.570
constraint we say ok wait for internet
connection before trying to run this

00:25:35.570 --> 00:25:35.580
connection before trying to run this
 

00:25:35.580 --> 00:25:39.019
connection before trying to run this
work request and then create the upload

00:25:39.019 --> 00:25:39.029
work request and then create the upload
 

00:25:39.029 --> 00:25:42.260
work request and then create the upload
image were using that constraint once we

00:25:42.260 --> 00:25:42.270
image were using that constraint once we
 

00:25:42.270 --> 00:25:44.180
image were using that constraint once we
have them you can tell work manager ok

00:25:44.180 --> 00:25:44.190
have them you can tell work manager ok
 

00:25:44.190 --> 00:25:46.389
have them you can tell work manager ok
begin with the processing which work

00:25:46.389 --> 00:25:46.399
begin with the processing which work
 

00:25:46.399 --> 00:25:49.909
begin with the processing which work
once you are done then run the upload to

00:25:49.909 --> 00:25:49.919
once you are done then run the upload to
 

00:25:49.919 --> 00:25:52.639
once you are done then run the upload to
server work and then you in queue - both

00:25:52.639 --> 00:25:52.649
server work and then you in queue - both
 

00:25:52.649 --> 00:25:55.010
server work and then you in queue - both
of these as an atomic operation - the

00:25:55.010 --> 00:25:55.020
of these as an atomic operation - the
 

00:25:55.020 --> 00:25:57.409
of these as an atomic operation - the
work manager then your device can

00:25:57.409 --> 00:25:57.419
work manager then your device can
 

00:25:57.419 --> 00:25:59.330
work manager then your device can
restart anything can happen in between

00:25:59.330 --> 00:25:59.340
restart anything can happen in between
 

00:25:59.340 --> 00:26:03.220
restart anything can happen in between
we will take care of running the tool

00:26:03.220 --> 00:26:03.230
we will take care of running the tool
 

00:26:03.230 --> 00:26:06.289
we will take care of running the tool
you can also use this API excessively

00:26:06.289 --> 00:26:06.299
you can also use this API excessively
 

00:26:06.299 --> 00:26:08.330
you can also use this API excessively
like you could run image processing in

00:26:08.330 --> 00:26:08.340
like you could run image processing in
 

00:26:08.340 --> 00:26:10.519
like you could run image processing in
parallel the same way so if user pick

00:26:10.519 --> 00:26:10.529
parallel the same way so if user pick
 

00:26:10.529 --> 00:26:12.060
parallel the same way so if user pick
multiple photos you want to

00:26:12.060 --> 00:26:12.070
multiple photos you want to
 

00:26:12.070 --> 00:26:15.060
multiple photos you want to
all of them but upload it to server was

00:26:15.060 --> 00:26:15.070
all of them but upload it to server was
 

00:26:15.070 --> 00:26:17.279
all of them but upload it to server was
all off tomorrow none you can easily do

00:26:17.279 --> 00:26:17.289
all off tomorrow none you can easily do
 

00:26:17.289 --> 00:26:19.769
all off tomorrow none you can easily do
that with work manager we will just use

00:26:19.769 --> 00:26:19.779
that with work manager we will just use
 

00:26:19.779 --> 00:26:22.680
that with work manager we will just use
the same function or create three work

00:26:22.680 --> 00:26:22.690
the same function or create three work
 

00:26:22.690 --> 00:26:24.810
the same function or create three work
requests for each of the images user

00:26:24.810 --> 00:26:24.820
requests for each of the images user
 

00:26:24.820 --> 00:26:27.719
requests for each of the images user
picked we create the upload work in much

00:26:27.719 --> 00:26:27.729
picked we create the upload work in much
 

00:26:27.729 --> 00:26:30.570
picked we create the upload work in much
the same way we did before and then we

00:26:30.570 --> 00:26:30.580
the same way we did before and then we
 

00:26:30.580 --> 00:26:32.849
the same way we did before and then we
say okay begin with all these three work

00:26:32.849 --> 00:26:32.859
say okay begin with all these three work
 

00:26:32.859 --> 00:26:36.570
say okay begin with all these three work
items once all of them are done then run

00:26:36.570 --> 00:26:36.580
items once all of them are done then run
 

00:26:36.580 --> 00:26:39.029
items once all of them are done then run
the upload work and then you include it

00:26:39.029 --> 00:26:39.039
the upload work and then you include it
 

00:26:39.039 --> 00:26:41.879
the upload work and then you include it
as an atomic operation and it takes care

00:26:41.879 --> 00:26:41.889
as an atomic operation and it takes care
 

00:26:41.889 --> 00:26:45.749
as an atomic operation and it takes care
of running it another important feature

00:26:45.749 --> 00:26:45.759
of running it another important feature
 

00:26:45.759 --> 00:26:48.060
of running it another important feature
of work manager is that it is not just a

00:26:48.060 --> 00:26:48.070
of work manager is that it is not just a
 

00:26:48.070 --> 00:26:50.399
of work manager is that it is not just a
wrapper for job scheduler or 5s job

00:26:50.399 --> 00:26:50.409
wrapper for job scheduler or 5s job
 

00:26:50.409 --> 00:26:53.009
wrapper for job scheduler or 5s job
dispatcher it's actually an executor

00:26:53.009 --> 00:26:53.019
dispatcher it's actually an executor
 

00:26:53.019 --> 00:26:56.489
dispatcher it's actually an executor
itself so let's get why opportunistic

00:26:56.489 --> 00:26:56.499
itself so let's get why opportunistic
 

00:26:56.499 --> 00:26:58.919
itself so let's get why opportunistic
execution is important so if you an

00:26:58.919 --> 00:26:58.929
execution is important so if you an
 

00:26:58.929 --> 00:27:00.869
execution is important so if you an
application rail user can send an email

00:27:00.869 --> 00:27:00.879
application rail user can send an email
 

00:27:00.879 --> 00:27:03.869
application rail user can send an email
so user hits the send button you send

00:27:03.869 --> 00:27:03.879
so user hits the send button you send
 

00:27:03.879 --> 00:27:06.749
so user hits the send button you send
the job info to the job scheduler or to

00:27:06.749 --> 00:27:06.759
the job info to the job scheduler or to
 

00:27:06.759 --> 00:27:08.729
the job info to the job scheduler or to
the firebase job dispatcher and it will

00:27:08.729 --> 00:27:08.739
the firebase job dispatcher and it will
 

00:27:08.739 --> 00:27:11.389
the firebase job dispatcher and it will
eventually call you to execute it back

00:27:11.389 --> 00:27:11.399
eventually call you to execute it back
 

00:27:11.399 --> 00:27:14.249
eventually call you to execute it back
the problem here is that you don't know

00:27:14.249 --> 00:27:14.259
the problem here is that you don't know
 

00:27:14.259 --> 00:27:17.219
the problem here is that you don't know
how long it will take even if your

00:27:17.219 --> 00:27:17.229
how long it will take even if your
 

00:27:17.229 --> 00:27:19.409
how long it will take even if your
device kernel has network connection it

00:27:19.409 --> 00:27:19.419
device kernel has network connection it
 

00:27:19.419 --> 00:27:21.810
device kernel has network connection it
may take a couple of minutes for job

00:27:21.810 --> 00:27:21.820
may take a couple of minutes for job
 

00:27:21.820 --> 00:27:23.609
may take a couple of minutes for job
scheduler to call you back and you have

00:27:23.609 --> 00:27:23.619
scheduler to call you back and you have
 

00:27:23.619 --> 00:27:24.839
scheduler to call you back and you have
no control over it

00:27:24.839 --> 00:27:24.849
no control over it
 

00:27:24.849 --> 00:27:27.389
no control over it
you just don't know and it results in a

00:27:27.389 --> 00:27:27.399
you just don't know and it results in a
 

00:27:27.399 --> 00:27:30.269
you just don't know and it results in a
bad user experience to work around it

00:27:30.269 --> 00:27:30.279
bad user experience to work around it
 

00:27:30.279 --> 00:27:32.399
bad user experience to work around it
what you usually do is you also have

00:27:32.399 --> 00:27:32.409
what you usually do is you also have
 

00:27:32.409 --> 00:27:34.830
what you usually do is you also have
your own thread pool whenever user hits

00:27:34.830 --> 00:27:34.840
your own thread pool whenever user hits
 

00:27:34.840 --> 00:27:37.019
your own thread pool whenever user hits
and you try to run the same thing there

00:27:37.019 --> 00:27:37.029
and you try to run the same thing there
 

00:27:37.029 --> 00:27:38.940
and you try to run the same thing there
as well and you take care of the

00:27:38.940 --> 00:27:38.950
as well and you take care of the
 

00:27:38.950 --> 00:27:41.039
as well and you take care of the
duplicating random work minute when the

00:27:41.039 --> 00:27:41.049
duplicating random work minute when the
 

00:27:41.049 --> 00:27:43.589
duplicating random work minute when the
job scheduler calls you back if you are

00:27:43.589 --> 00:27:43.599
job scheduler calls you back if you are
 

00:27:43.599 --> 00:27:45.509
job scheduler calls you back if you are
using word manager you don't need to

00:27:45.509 --> 00:27:45.519
using word manager you don't need to
 

00:27:45.519 --> 00:27:47.999
using word manager you don't need to
think about it because when you send a

00:27:47.999 --> 00:27:48.009
think about it because when you send a
 

00:27:48.009 --> 00:27:50.609
think about it because when you send a
work request to the work manager it puts

00:27:50.609 --> 00:27:50.619
work request to the work manager it puts
 

00:27:50.619 --> 00:27:53.549
work request to the work manager it puts
it into its own database then it tells

00:27:53.549 --> 00:27:53.559
it into its own database then it tells
 

00:27:53.559 --> 00:27:55.589
it into its own database then it tells
job scheduler or whichever scheduler it

00:27:55.589 --> 00:27:55.599
job scheduler or whichever scheduler it
 

00:27:55.599 --> 00:27:57.960
job scheduler or whichever scheduler it
has on the device ok I need to be

00:27:57.960 --> 00:27:57.970
has on the device ok I need to be
 

00:27:57.970 --> 00:27:59.969
has on the device ok I need to be
invoked when these constraints are met

00:27:59.969 --> 00:27:59.979
invoked when these constraints are met
 

00:27:59.979 --> 00:28:02.909
invoked when these constraints are met
but it also checks those constraints

00:28:02.909 --> 00:28:02.919
but it also checks those constraints
 

00:28:02.919 --> 00:28:05.609
but it also checks those constraints
itself and if they're already ready it

00:28:05.609 --> 00:28:05.619
itself and if they're already ready it
 

00:28:05.619 --> 00:28:07.909
itself and if they're already ready it
will instantly start executing the job

00:28:07.909 --> 00:28:07.919
will instantly start executing the job
 

00:28:07.919 --> 00:28:11.129
will instantly start executing the job
and later on if job scheduler comes and

00:28:11.129 --> 00:28:11.139
and later on if job scheduler comes and
 

00:28:11.139 --> 00:28:13.499
and later on if job scheduler comes and
asks is the execute now work manager

00:28:13.499 --> 00:28:13.509
asks is the execute now work manager
 

00:28:13.509 --> 00:28:15.690
asks is the execute now work manager
knows whether it is executed or not and

00:28:15.690 --> 00:28:15.700
knows whether it is executed or not and
 

00:28:15.700 --> 00:28:19.529
knows whether it is executed or not and
handles the requests properly to learn

00:28:19.529 --> 00:28:19.539
handles the requests properly to learn
 

00:28:19.539 --> 00:28:21.389
handles the requests properly to learn
more about work manager please join us

00:28:21.389 --> 00:28:21.399
more about work manager please join us
 

00:28:21.399 --> 00:28:22.630
more about work manager please join us
today at five

00:28:22.630 --> 00:28:22.640
today at five
 

00:28:22.640 --> 00:28:26.110
today at five
thirty in the work manager session right

00:28:26.110 --> 00:28:26.120
thirty in the work manager session right
 

00:28:26.120 --> 00:28:31.090
thirty in the work manager session right
what's next okay so I think it's been a

00:28:31.090 --> 00:28:31.100
what's next okay so I think it's been a
 

00:28:31.100 --> 00:28:33.039
what's next okay so I think it's been a
pretty great year in Android app

00:28:33.039 --> 00:28:33.049
pretty great year in Android app
 

00:28:33.049 --> 00:28:35.910
pretty great year in Android app
development hopefully you agree we

00:28:35.910 --> 00:28:35.920
development hopefully you agree we
 

00:28:35.920 --> 00:28:38.770
development hopefully you agree we
launched the set of great new components

00:28:38.770 --> 00:28:38.780
launched the set of great new components
 

00:28:38.780 --> 00:28:40.900
launched the set of great new components
last year and we kept working on those

00:28:40.900 --> 00:28:40.910
last year and we kept working on those
 

00:28:40.910 --> 00:28:42.730
last year and we kept working on those
and iterating on those we've launched

00:28:42.730 --> 00:28:42.740
and iterating on those we've launched
 

00:28:42.740 --> 00:28:45.430
and iterating on those we've launched
three new major components work manager

00:28:45.430 --> 00:28:45.440
three new major components work manager
 

00:28:45.440 --> 00:28:48.250
three new major components work manager
and navigation and paging since then so

00:28:48.250 --> 00:28:48.260
and navigation and paging since then so
 

00:28:48.260 --> 00:28:49.980
and navigation and paging since then so
does that mean we're done

00:28:49.980 --> 00:28:49.990
does that mean we're done
 

00:28:49.990 --> 00:28:52.990
does that mean we're done
obviously not we have a lot more to do

00:28:52.990 --> 00:28:53.000
obviously not we have a lot more to do
 

00:28:53.000 --> 00:28:54.669
obviously not we have a lot more to do
and the first thing that we want to do

00:28:54.669 --> 00:28:54.679
and the first thing that we want to do
 

00:28:54.679 --> 00:28:56.020
and the first thing that we want to do
is we want to make architecture

00:28:56.020 --> 00:28:56.030
is we want to make architecture
 

00:28:56.030 --> 00:28:58.870
is we want to make architecture
components the default way that people

00:28:58.870 --> 00:28:58.880
components the default way that people
 

00:28:58.880 --> 00:29:02.230
components the default way that people
build Android apps and that doesn't mean

00:29:02.230 --> 00:29:02.240
build Android apps and that doesn't mean
 

00:29:02.240 --> 00:29:04.600
build Android apps and that doesn't mean
that it's going to be required but it

00:29:04.600 --> 00:29:04.610
that it's going to be required but it
 

00:29:04.610 --> 00:29:07.080
that it's going to be required but it
does mean that we want to make sure that

00:29:07.080 --> 00:29:07.090
does mean that we want to make sure that
 

00:29:07.090 --> 00:29:10.360
does mean that we want to make sure that
as many people as possible you know get

00:29:10.360 --> 00:29:10.370
as many people as possible you know get
 

00:29:10.370 --> 00:29:12.190
as many people as possible you know get
architecture components regardless of

00:29:12.190 --> 00:29:12.200
architecture components regardless of
 

00:29:12.200 --> 00:29:13.419
architecture components regardless of
how they get into into Android

00:29:13.419 --> 00:29:13.429
how they get into into Android
 

00:29:13.429 --> 00:29:15.789
how they get into into Android
development so that means that not only

00:29:15.789 --> 00:29:15.799
development so that means that not only
 

00:29:15.799 --> 00:29:17.320
development so that means that not only
are we going to be building more tools

00:29:17.320 --> 00:29:17.330
are we going to be building more tools
 

00:29:17.330 --> 00:29:19.780
are we going to be building more tools
like the navigation editor into Android

00:29:19.780 --> 00:29:19.790
like the navigation editor into Android
 

00:29:19.790 --> 00:29:22.780
like the navigation editor into Android
studio that are sort of architecture

00:29:22.780 --> 00:29:22.790
studio that are sort of architecture
 

00:29:22.790 --> 00:29:25.270
studio that are sort of architecture
components aware but we'll also be

00:29:25.270 --> 00:29:25.280
components aware but we'll also be
 

00:29:25.280 --> 00:29:27.190
components aware but we'll also be
adding more templates that include

00:29:27.190 --> 00:29:27.200
adding more templates that include
 

00:29:27.200 --> 00:29:30.070
adding more templates that include
things like view models so that you know

00:29:30.070 --> 00:29:30.080
things like view models so that you know
 

00:29:30.080 --> 00:29:32.230
things like view models so that you know
people starting a new project have the

00:29:32.230 --> 00:29:32.240
people starting a new project have the
 

00:29:32.240 --> 00:29:34.870
people starting a new project have the
easiest possible kind of on-ramp into

00:29:34.870 --> 00:29:34.880
easiest possible kind of on-ramp into
 

00:29:34.880 --> 00:29:38.860
easiest possible kind of on-ramp into
Android development and in terms of

00:29:38.860 --> 00:29:38.870
Android development and in terms of
 

00:29:38.870 --> 00:29:40.659
Android development and in terms of
libraries you know not only we're going

00:29:40.659 --> 00:29:40.669
libraries you know not only we're going
 

00:29:40.669 --> 00:29:41.830
libraries you know not only we're going
to be building more architecture

00:29:41.830 --> 00:29:41.840
to be building more architecture
 

00:29:41.840 --> 00:29:44.169
to be building more architecture
components and not only are we going to

00:29:44.169 --> 00:29:44.179
components and not only are we going to
 

00:29:44.179 --> 00:29:46.630
components and not only are we going to
be building in more of the kind of core

00:29:46.630 --> 00:29:46.640
be building in more of the kind of core
 

00:29:46.640 --> 00:29:48.940
be building in more of the kind of core
architecture components goodness like

00:29:48.940 --> 00:29:48.950
architecture components goodness like
 

00:29:48.950 --> 00:29:52.510
architecture components goodness like
lifecycle awareness into jetpack but we

00:29:52.510 --> 00:29:52.520
lifecycle awareness into jetpack but we
 

00:29:52.520 --> 00:29:55.090
lifecycle awareness into jetpack but we
want to look at other Google API as well

00:29:55.090 --> 00:29:55.100
want to look at other Google API as well
 

00:29:55.100 --> 00:29:57.669
want to look at other Google API as well
and see you know how we can make those

00:29:57.669 --> 00:29:57.679
and see you know how we can make those
 

00:29:57.679 --> 00:30:00.039
and see you know how we can make those
sort of our contextual components aware

00:30:00.039 --> 00:30:00.049
sort of our contextual components aware
 

00:30:00.049 --> 00:30:02.169
sort of our contextual components aware
so that for example if you're calling

00:30:02.169 --> 00:30:02.179
so that for example if you're calling
 

00:30:02.179 --> 00:30:04.360
so that for example if you're calling
another Google API that's asynchronous

00:30:04.360 --> 00:30:04.370
another Google API that's asynchronous
 

00:30:04.370 --> 00:30:07.510
another Google API that's asynchronous
right it already has that built in so

00:30:07.510 --> 00:30:07.520
right it already has that built in so
 

00:30:07.520 --> 00:30:09.490
right it already has that built in so
that you're kind of getting architecture

00:30:09.490 --> 00:30:09.500
that you're kind of getting architecture
 

00:30:09.500 --> 00:30:10.900
that you're kind of getting architecture
components benefits whether you know

00:30:10.900 --> 00:30:10.910
components benefits whether you know
 

00:30:10.910 --> 00:30:13.870
components benefits whether you know
you're using it or not and then finally

00:30:13.870 --> 00:30:13.880
you're using it or not and then finally
 

00:30:13.880 --> 00:30:16.600
you're using it or not and then finally
we've heard from everybody that you want

00:30:16.600 --> 00:30:16.610
we've heard from everybody that you want
 

00:30:16.610 --> 00:30:18.400
we've heard from everybody that you want
us to speak with a single voice you want

00:30:18.400 --> 00:30:18.410
us to speak with a single voice you want
 

00:30:18.410 --> 00:30:20.310
us to speak with a single voice you want
us to give clear and consistent guidance

00:30:20.310 --> 00:30:20.320
us to give clear and consistent guidance
 

00:30:20.320 --> 00:30:23.049
us to give clear and consistent guidance
so that means that in terms of education

00:30:23.049 --> 00:30:23.059
so that means that in terms of education
 

00:30:23.059 --> 00:30:25.450
so that means that in terms of education
and that means not just documentation

00:30:25.450 --> 00:30:25.460
and that means not just documentation
 

00:30:25.460 --> 00:30:29.320
and that means not just documentation
but it also means sample apps

00:30:29.320 --> 00:30:29.330
but it also means sample apps
 

00:30:29.330 --> 00:30:32.649
but it also means sample apps
code labs that all this stuff is going

00:30:32.649 --> 00:30:32.659
code labs that all this stuff is going
 

00:30:32.659 --> 00:30:34.450
code labs that all this stuff is going
to be refactor to kind of be built on

00:30:34.450 --> 00:30:34.460
to be refactor to kind of be built on
 

00:30:34.460 --> 00:30:36.580
to be refactor to kind of be built on
top of architecture components so that

00:30:36.580 --> 00:30:36.590
top of architecture components so that
 

00:30:36.590 --> 00:30:38.139
top of architecture components so that
whether you you know start with the

00:30:38.139 --> 00:30:38.149
whether you you know start with the
 

00:30:38.149 --> 00:30:40.299
whether you you know start with the
guide app architecture or you just

00:30:40.299 --> 00:30:40.309
guide app architecture or you just
 

00:30:40.309 --> 00:30:43.269
guide app architecture or you just
download a you know sample media player

00:30:43.269 --> 00:30:43.279
download a you know sample media player
 

00:30:43.279 --> 00:30:46.479
download a you know sample media player
app and to start customizing it that you

00:30:46.479 --> 00:30:46.489
app and to start customizing it that you
 

00:30:46.489 --> 00:30:48.580
app and to start customizing it that you
kind of regardless of what you're on

00:30:48.580 --> 00:30:48.590
kind of regardless of what you're on
 

00:30:48.590 --> 00:30:50.919
kind of regardless of what you're on
rampion Android development is that we

00:30:50.919 --> 00:30:50.929
rampion Android development is that we
 

00:30:50.929 --> 00:30:54.279
rampion Android development is that we
get you to the best possible place we

00:30:54.279 --> 00:30:54.289
get you to the best possible place we
 

00:30:54.289 --> 00:30:55.989
get you to the best possible place we
know that we still have some areas left

00:30:55.989 --> 00:30:55.999
know that we still have some areas left
 

00:30:55.999 --> 00:30:58.960
know that we still have some areas left
to address in the core and you could see

00:30:58.960 --> 00:30:58.970
to address in the core and you could see
 

00:30:58.970 --> 00:31:01.509
to address in the core and you could see
some of those here so this is just to

00:31:01.509 --> 00:31:01.519
some of those here so this is just to
 

00:31:01.519 --> 00:31:03.070
some of those here so this is just to
say that we are definitely not going to

00:31:03.070 --> 00:31:03.080
say that we are definitely not going to
 

00:31:03.080 --> 00:31:05.349
say that we are definitely not going to
stop investing in the original set of

00:31:05.349 --> 00:31:05.359
stop investing in the original set of
 

00:31:05.359 --> 00:31:08.229
stop investing in the original set of
architecture components and there's some

00:31:08.229 --> 00:31:08.239
architecture components and there's some
 

00:31:08.239 --> 00:31:10.119
architecture components and there's some
you know not just problem solving here

00:31:10.119 --> 00:31:10.129
you know not just problem solving here
 

00:31:10.129 --> 00:31:11.590
you know not just problem solving here
but some exciting stuff that we can do

00:31:11.590 --> 00:31:11.600
but some exciting stuff that we can do
 

00:31:11.600 --> 00:31:13.389
but some exciting stuff that we can do
around how can we make architecture

00:31:13.389 --> 00:31:13.399
around how can we make architecture
 

00:31:13.399 --> 00:31:16.539
around how can we make architecture
components as idiomatic and fun to use

00:31:16.539 --> 00:31:16.549
components as idiomatic and fun to use
 

00:31:16.549 --> 00:31:19.720
components as idiomatic and fun to use
as possible for people using Kotlin so

00:31:19.720 --> 00:31:19.730
as possible for people using Kotlin so
 

00:31:19.730 --> 00:31:21.879
as possible for people using Kotlin so
there's a lot to be done still in sort

00:31:21.879 --> 00:31:21.889
there's a lot to be done still in sort
 

00:31:21.889 --> 00:31:24.119
there's a lot to be done still in sort
of I think the core set of app

00:31:24.119 --> 00:31:24.129
of I think the core set of app
 

00:31:24.129 --> 00:31:26.229
of I think the core set of app
architecture and life cycle problem

00:31:26.229 --> 00:31:26.239
architecture and life cycle problem
 

00:31:26.239 --> 00:31:29.999
architecture and life cycle problem
areas so we'll keep working there but

00:31:29.999 --> 00:31:30.009
areas so we'll keep working there but
 

00:31:30.009 --> 00:31:32.979
areas so we'll keep working there but
beyond that I think you'll see something

00:31:32.979 --> 00:31:32.989
beyond that I think you'll see something
 

00:31:32.989 --> 00:31:34.570
beyond that I think you'll see something
interesting about our trajectory if we

00:31:34.570 --> 00:31:34.580
interesting about our trajectory if we
 

00:31:34.580 --> 00:31:35.680
interesting about our trajectory if we
look at all the components we've

00:31:35.680 --> 00:31:35.690
look at all the components we've
 

00:31:35.690 --> 00:31:39.549
look at all the components we've
launched the date so last year kind of

00:31:39.549 --> 00:31:39.559
launched the date so last year kind of
 

00:31:39.559 --> 00:31:41.499
launched the date so last year kind of
this set of architectural components was

00:31:41.499 --> 00:31:41.509
this set of architectural components was
 

00:31:41.509 --> 00:31:43.840
this set of architectural components was
you know these are relatively small

00:31:43.840 --> 00:31:43.850
you know these are relatively small
 

00:31:43.850 --> 00:31:47.289
you know these are relatively small
pieces relatively small api's that are

00:31:47.289 --> 00:31:47.299
pieces relatively small api's that are
 

00:31:47.299 --> 00:31:48.279
pieces relatively small api's that are
designed to be used in a lot of

00:31:48.279 --> 00:31:48.289
designed to be used in a lot of
 

00:31:48.289 --> 00:31:50.859
designed to be used in a lot of
different places in your app and then if

00:31:50.859 --> 00:31:50.869
different places in your app and then if
 

00:31:50.869 --> 00:31:54.129
different places in your app and then if
you look at room navigation work manager

00:31:54.129 --> 00:31:54.139
you look at room navigation work manager
 

00:31:54.139 --> 00:31:56.710
you look at room navigation work manager
these are much larger and richer api's

00:31:56.710 --> 00:31:56.720
these are much larger and richer api's
 

00:31:56.720 --> 00:31:59.529
these are much larger and richer api's
but they're still relatively sort of

00:31:59.529 --> 00:31:59.539
but they're still relatively sort of
 

00:31:59.539 --> 00:32:01.960
but they're still relatively sort of
self-contained right they solve a single

00:32:01.960 --> 00:32:01.970
self-contained right they solve a single
 

00:32:01.970 --> 00:32:05.220
self-contained right they solve a single
problem they do it really well

00:32:05.220 --> 00:32:05.230
 
 

00:32:05.230 --> 00:32:08.320
 
paging also solves a single problem and

00:32:08.320 --> 00:32:08.330
paging also solves a single problem and
 

00:32:08.330 --> 00:32:10.509
paging also solves a single problem and
solves it well but in this case we took

00:32:10.509 --> 00:32:10.519
solves it well but in this case we took
 

00:32:10.519 --> 00:32:13.539
solves it well but in this case we took
a very specific use case right so lazy

00:32:13.539 --> 00:32:13.549
a very specific use case right so lazy
 

00:32:13.549 --> 00:32:16.840
a very specific use case right so lazy
loading for recyclerview and we're

00:32:16.840 --> 00:32:16.850
loading for recyclerview and we're
 

00:32:16.850 --> 00:32:18.669
loading for recyclerview and we're
actually in this case orchestrating

00:32:18.669 --> 00:32:18.679
actually in this case orchestrating
 

00:32:18.679 --> 00:32:20.379
actually in this case orchestrating
multiple architecture components and

00:32:20.379 --> 00:32:20.389
multiple architecture components and
 

00:32:20.389 --> 00:32:22.359
multiple architecture components and
pieces of Jetpack to solve that problem

00:32:22.359 --> 00:32:22.369
pieces of Jetpack to solve that problem
 

00:32:22.369 --> 00:32:25.570
pieces of Jetpack to solve that problem
so paging is a little bit higher level

00:32:25.570 --> 00:32:25.580
so paging is a little bit higher level
 

00:32:25.580 --> 00:32:28.479
so paging is a little bit higher level
it's not just sort of here's your you

00:32:28.479 --> 00:32:28.489
it's not just sort of here's your you
 

00:32:28.489 --> 00:32:30.700
it's not just sort of here's your you
know object mapping layer right it

00:32:30.700 --> 00:32:30.710
know object mapping layer right it
 

00:32:30.710 --> 00:32:32.710
know object mapping layer right it
actually takes a very specific I know I

00:32:32.710 --> 00:32:32.720
actually takes a very specific I know I
 

00:32:32.720 --> 00:32:34.720
actually takes a very specific I know I
have or cycler view with more data that

00:32:34.720 --> 00:32:34.730
have or cycler view with more data that
 

00:32:34.730 --> 00:32:37.450
have or cycler view with more data that
I can fit in memory and uses multiple

00:32:37.450 --> 00:32:37.460
I can fit in memory and uses multiple
 

00:32:37.460 --> 00:32:39.580
I can fit in memory and uses multiple
pieces of architecture components to

00:32:39.580 --> 00:32:39.590
pieces of architecture components to
 

00:32:39.590 --> 00:32:42.099
pieces of architecture components to
make that as easy as possible and we

00:32:42.099 --> 00:32:42.109
make that as easy as possible and we
 

00:32:42.109 --> 00:32:43.100
make that as easy as possible and we
want to continue

00:32:43.100 --> 00:32:43.110
want to continue
 

00:32:43.110 --> 00:32:45.350
want to continue
to you know build more stuff like that

00:32:45.350 --> 00:32:45.360
to you know build more stuff like that
 

00:32:45.360 --> 00:32:47.810
to you know build more stuff like that
so not just or we're not just gonna keep

00:32:47.810 --> 00:32:47.820
so not just or we're not just gonna keep
 

00:32:47.820 --> 00:32:49.430
so not just or we're not just gonna keep
investing in the core areas of app

00:32:49.430 --> 00:32:49.440
investing in the core areas of app
 

00:32:49.440 --> 00:32:51.710
investing in the core areas of app
architecture and life cycle but we want

00:32:51.710 --> 00:32:51.720
architecture and life cycle but we want
 

00:32:51.720 --> 00:32:53.390
architecture and life cycle but we want
to start solving you know higher level

00:32:53.390 --> 00:32:53.400
to start solving you know higher level
 

00:32:53.400 --> 00:32:56.210
to start solving you know higher level
problems and you know make more and more

00:32:56.210 --> 00:32:56.220
problems and you know make more and more
 

00:32:56.220 --> 00:33:00.799
problems and you know make more and more
as easy as possible but I can't leave

00:33:00.799 --> 00:33:00.809
as easy as possible but I can't leave
 

00:33:00.809 --> 00:33:02.390
as easy as possible but I can't leave
today without thanking everybody that

00:33:02.390 --> 00:33:02.400
today without thanking everybody that
 

00:33:02.400 --> 00:33:04.520
today without thanking everybody that
helped us get here the reason that we

00:33:04.520 --> 00:33:04.530
helped us get here the reason that we
 

00:33:04.530 --> 00:33:06.080
helped us get here the reason that we
were able to have a really high quality

00:33:06.080 --> 00:33:06.090
were able to have a really high quality
 

00:33:06.090 --> 00:33:08.810
were able to have a really high quality
bar for architecture components was

00:33:08.810 --> 00:33:08.820
bar for architecture components was
 

00:33:08.820 --> 00:33:11.060
bar for architecture components was
because a lot of people many of whom are

00:33:11.060 --> 00:33:11.070
because a lot of people many of whom are
 

00:33:11.070 --> 00:33:13.220
because a lot of people many of whom are
here today we're really generous with

00:33:13.220 --> 00:33:13.230
here today we're really generous with
 

00:33:13.230 --> 00:33:15.530
here today we're really generous with
their time and that includes not just

00:33:15.530 --> 00:33:15.540
their time and that includes not just
 

00:33:15.540 --> 00:33:18.140
their time and that includes not just
filing issues on the issue tracker but

00:33:18.140 --> 00:33:18.150
filing issues on the issue tracker but
 

00:33:18.150 --> 00:33:20.000
filing issues on the issue tracker but
also you know testing pre-release

00:33:20.000 --> 00:33:20.010
also you know testing pre-release
 

00:33:20.010 --> 00:33:21.680
also you know testing pre-release
components having one-on-one

00:33:21.680 --> 00:33:21.690
components having one-on-one
 

00:33:21.690 --> 00:33:24.200
components having one-on-one
conversations with us to you know tell

00:33:24.200 --> 00:33:24.210
conversations with us to you know tell
 

00:33:24.210 --> 00:33:26.240
conversations with us to you know tell
you tell us what your biggest problem

00:33:26.240 --> 00:33:26.250
you tell us what your biggest problem
 

00:33:26.250 --> 00:33:28.240
you tell us what your biggest problem
areas with Android app development were

00:33:28.240 --> 00:33:28.250
areas with Android app development were
 

00:33:28.250 --> 00:33:30.680
areas with Android app development were
this has been critical to us and making

00:33:30.680 --> 00:33:30.690
this has been critical to us and making
 

00:33:30.690 --> 00:33:32.720
this has been critical to us and making
sure that we're kind of focusing on the

00:33:32.720 --> 00:33:32.730
sure that we're kind of focusing on the
 

00:33:32.730 --> 00:33:34.430
sure that we're kind of focusing on the
right problems and delivering solutions

00:33:34.430 --> 00:33:34.440
right problems and delivering solutions
 

00:33:34.440 --> 00:33:36.890
right problems and delivering solutions
ago that are gonna work for you so I

00:33:36.890 --> 00:33:36.900
ago that are gonna work for you so I
 

00:33:36.900 --> 00:33:38.390
ago that are gonna work for you so I
really have to thank everybody in the

00:33:38.390 --> 00:33:38.400
really have to thank everybody in the
 

00:33:38.400 --> 00:33:41.650
really have to thank everybody in the
community that's been so helpful

00:33:41.650 --> 00:33:41.660
community that's been so helpful
 

00:33:41.660 --> 00:33:45.250
community that's been so helpful
[Applause]

00:33:45.250 --> 00:33:45.260
[Applause]
 

00:33:45.260 --> 00:34:06.559
[Applause]
[Music]

