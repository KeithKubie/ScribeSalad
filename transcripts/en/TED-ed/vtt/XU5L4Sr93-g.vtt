WEBVTT
Kind: captions
Language: en

00:00:06.820 --> 00:00:08.490
After years of experiments,

00:00:08.490 --> 00:00:11.480
you’ve finally created 
the pets of the future–

00:00:11.480 --> 00:00:12.930
nano-rabbits!

00:00:12.930 --> 00:00:14.780
They’re tiny, they’re fuzzy…

00:00:14.780 --> 00:00:18.210
and they multiply faster 
than the eye can see.

00:00:18.210 --> 00:00:21.470
In your lab there are 36 habitat cells,

00:00:21.470 --> 00:00:23.730
arranged in an inverted pyramid,

00:00:23.730 --> 00:00:26.230
with 8 cells in the top row.

00:00:26.230 --> 00:00:28.020
The first has one rabbit,

00:00:28.020 --> 00:00:30.760
the second has two, and so on,

00:00:30.760 --> 00:00:33.270
with eight rabbits in the last one.

00:00:33.270 --> 00:00:35.810
The other rows of cells are empty…

00:00:35.810 --> 00:00:37.060
for now.

00:00:37.060 --> 00:00:39.100
The rabbits are hermaphroditic,

00:00:39.100 --> 00:00:42.080
and each rabbit in a given 
cell will breed once

00:00:42.080 --> 00:00:45.820
with every rabbit in the horizontally 
adjacent cells,

00:00:45.820 --> 00:00:49.620
producing exactly one offspring each time.

00:00:49.620 --> 00:00:51.970
The newborn rabbits will 
drop into the cell

00:00:51.970 --> 00:00:55.180
directly below the 
two cells of its parents,

00:00:55.180 --> 00:00:59.460
and within minutes will mature 
and reproduce in turn.

00:00:59.460 --> 00:01:03.385
Each cell can hold 10^80 nano-rabbits –

00:01:03.385 --> 00:01:06.095
that’s a 1 followed by 80 zeros –

00:01:06.095 --> 00:01:10.085
before they break free 
and overrun the world.

00:01:10.085 --> 00:01:13.916
Your calculations have given you a 
46-digit number

00:01:13.916 --> 00:01:16.426
for the count of rabbits 
in the bottom cell–

00:01:16.426 --> 00:01:19.166
plenty of room to spare.

00:01:19.166 --> 00:01:22.246
But just as you pull the lever 
to start the experiment,

00:01:22.246 --> 00:01:25.106
your assistant runs in with terrible news.

00:01:25.106 --> 00:01:27.906
A rival lab has sabotaged your code

00:01:27.906 --> 00:01:32.124
so that all the zeros at the end 
of your results got cut off.

00:01:32.124 --> 00:01:34.224
That means you don’t actually know

00:01:34.224 --> 00:01:37.284
if the bottom cell will be able to hold 
all the rabbits –

00:01:37.284 --> 00:01:40.464
and the reproduction is already underway!

00:01:40.464 --> 00:01:41.834
To make matters worse,

00:01:41.834 --> 00:01:45.174
your devices and calculators 
are all malfunctioning,

00:01:45.174 --> 00:01:49.514
so you only have a few minutes 
to work it out by hand.

00:01:49.514 --> 00:01:52.048
How many trailing zeros should there be

00:01:52.048 --> 00:01:55.418
at the end of the count of rabbits 
in the bottom habitat?

00:01:55.418 --> 00:01:59.108
And do you need to pull the emergency 
shut-down lever?

00:01:59.108 --> 00:02:02.068
Pause the video now if you want 
to figure it out for yourself.

00:02:02.068 --> 00:02:05.078
Answer in 3

00:02:05.078 --> 00:02:07.868
Answer in 2

00:02:07.868 --> 00:02:08.528
Answer in 1

00:02:08.528 --> 00:02:13.378
There isn’t enough time to calculate the 
exact number of rabbits in the final cell.

00:02:13.378 --> 00:02:15.408
The good news is we don’t need to.

00:02:15.408 --> 00:02:16.778
All we need to figure out

00:02:16.778 --> 00:02:19.948
is how many trailing zeros it has.

00:02:19.948 --> 00:02:23.218
But how can we know how many trailing 
zeros a number has

00:02:23.218 --> 00:02:25.958
without calculating the number itself?

00:02:25.958 --> 00:02:29.988
What we do know is that we arrive at the
number of rabbits in the bottom cell

00:02:29.988 --> 00:02:32.268
through a process of multiplication –

00:02:32.268 --> 00:02:33.258
literally.

00:02:33.258 --> 00:02:34.928
The number of rabbits in each cell

00:02:34.928 --> 00:02:38.998
is the product of the number of rabbits 
in each of the two cells above it.

00:02:38.998 --> 00:02:40.507
And there are only two ways

00:02:40.507 --> 00:02:43.737
to get numbers with trailing zeros 
through multiplication:

00:02:43.737 --> 00:02:47.847
either multiplying a number ending in 5 
by any even number,

00:02:47.847 --> 00:02:52.147
or by multiplying numbers that have 
trailing zeroes themselves.

00:02:52.147 --> 00:02:55.068
Let’s calculate the number of rabbits 
in the second row

00:02:55.068 --> 00:02:57.288
and see what patterns emerge.

00:02:57.288 --> 00:02:59.578
Two of the numbers have trailing zeros –

00:02:59.578 --> 00:03:03.248
20 rabbits in the fourth cell 
and 30 in the fifth cell.

00:03:03.248 --> 00:03:05.638
But there are no numbers ending in 5.

00:03:05.638 --> 00:03:09.408
And since the only way to get a number 
ending in 5 through multiplication

00:03:09.408 --> 00:03:11.888
is by starting with a number ending in 5,

00:03:11.888 --> 00:03:15.458
there won’t be any more 
down the line either.

00:03:15.458 --> 00:03:16.988
That means we only need to worry

00:03:16.988 --> 00:03:20.378
about the numbers that have 
trailing zeros themselves.

00:03:20.378 --> 00:03:24.218
And a neat trick to figure out the amount
of trailing zeros in a product

00:03:24.218 --> 00:03:28.518
is to count and add the trailing zeros 
in each of the factors –

00:03:28.518 --> 00:03:32.681
for example, 10 x 100 = 1,000.

00:03:32.681 --> 00:03:35.759
So let’s take the numbers in the fourth 
and fifth cells

00:03:35.759 --> 00:03:38.229
and multiply down from there.

00:03:38.229 --> 00:03:40.749
20 and 30 each have one zero,

00:03:40.749 --> 00:03:44.259
so the product of both cells will have 
two trailing zeros,

00:03:44.259 --> 00:03:48.619
while the product of either cell and 
an adjacent non-zero-ending cell

00:03:48.619 --> 00:03:50.909
will have only one.

00:03:50.909 --> 00:03:52.929
When we continue all the way down,

00:03:52.929 --> 00:03:56.439
we end up with 35 zeros 
in the bottom cell.

00:03:56.439 --> 00:04:00.609
And if you’re not too stressed about 
the potential nano-rabbit apocalypse,

00:04:00.609 --> 00:04:03.501
you might notice that counting 
the zeros this way

00:04:03.501 --> 00:04:06.461
forms part of Pascal’s triangle.

00:04:06.461 --> 00:04:11.141
Adding those 35 zeros to the 
46 digit number we had before

00:04:11.141 --> 00:04:13.751
yields an 81 digit number –

00:04:13.751 --> 00:04:16.081
too big for the habitat to contain!

00:04:16.081 --> 00:04:18.831
You rush over and pull 
the emergency switch

00:04:18.831 --> 00:04:22.701
just as the seventh generation of rabbits 
was about to mature –

00:04:22.701 --> 00:04:26.058
hare-raisingly close to disaster.

