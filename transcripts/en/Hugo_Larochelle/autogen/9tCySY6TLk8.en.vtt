WEBVTT
Kind: captions
Language: en

00:00:00.050 --> 00:00:05.819
 in this capsule we will see this 

00:00:02.190 --> 00:00:07.740
 what is a genetic algorithm then a 

00:00:05.819 --> 00:00:09.090
 genetic algorithm as we fly thanks 

00:00:07.740 --> 00:00:12.420
 to an algorithm that makes it very 

00:00:09.090 --> 00:00:15.690
 similar to the bing search algorithm 

00:00:12.420 --> 00:00:18.119
 either local or stochastic so we have 

00:00:15.690 --> 00:00:19.560
 here a description quite high level 2 

00:00:18.119 --> 00:00:20.119
 what is another group 

00:00:19.560 --> 00:00:22.890
 genetic 

00:00:20.119 --> 00:00:24.600
 firstly in a genetic group one 

00:00:22.890 --> 00:00:26.789
 will have a bit like in the bing 

00:00:24.600 --> 00:00:27.930
 search a set of known that we are going 

00:00:26.789 --> 00:00:30.890
 maintain as and when 

00:00:27.930 --> 00:00:33.120
 searches this set has finally sent 

00:00:30.890 --> 00:00:35.399
 refer to this together by committing the 

00:00:33.120 --> 00:00:37.219
 population that will evolve as 

00:00:35.399 --> 00:00:39.540
 measuring the execution of the algorithm 

00:00:37.219 --> 00:00:42.420
 now in a genetic group 

00:00:39.540 --> 00:00:44.850
 the successor of successor names 

00:00:42.420 --> 00:00:47.579
 that will replace the nodes in our 

00:00:44.850 --> 00:00:49.860
 generation population to water are going to 

00:00:47.579 --> 00:00:51.899
 to be generated by combining father so 

00:00:49.860 --> 00:00:54.660
 it's a bit like two 

00:00:51.899 --> 00:00:56.250
 parents was breeding could has generated 

00:00:54.660 --> 00:00:58.980
 a new node in the generation 

00:00:56.250 --> 00:01:00.960
 next a level also be 

00:00:58.980 --> 00:01:04.559
 represented by a good one makes a 

00:01:00.960 --> 00:01:06.720
 string that is based on a 

00:01:04.559 --> 00:01:08.460
 some alphabet it can be a fab and 

00:01:06.720 --> 00:01:10.290
 binary or with multiple letters 

00:01:08.460 --> 00:01:12.900
 so that actually corresponds a little to 

00:01:10.290 --> 00:01:14.310
 code of analogy with genetics 

00:01:12.900 --> 00:01:17.670
 is that it fits genetic code 

00:01:14.310 --> 00:01:20.070
 from the north in question and the function 

00:01:17.670 --> 00:01:20.939
 objectives that we try to optimize in 

00:01:20.070 --> 00:01:22.890
 local search 

00:01:20.939 --> 00:01:24.479
 in fact in the context of a goal 

00:01:22.890 --> 00:01:26.400
 genetics on the fly called fitness 

00:01:24.479 --> 00:01:30.240
 works or in finland or french 

00:01:26.400 --> 00:01:32.130
 the adaptation function and there are three 

00:01:30.240 --> 00:01:33.600
 very important aspects in the galleys 

00:01:32.130 --> 00:01:35.520
 genetics that must be defined for 

00:01:33.600 --> 00:01:38.070
 define an algorithm developed a 

00:01:35.520 --> 00:01:39.659
 genetic otherness that's the part 

00:01:38.070 --> 00:01:42.170
 commented selection what we select 

00:01:39.659 --> 00:01:44.729
 two parents to annoy revival does not 

00:01:42.170 --> 00:01:46.649
 commented on what we are doing 

00:01:44.729 --> 00:01:48.210
 of these two words and finally 

00:01:46.649 --> 00:01:55.380
 commented on what is being applied a mutation 

00:01:48.210 --> 00:01:57.180
 on a child so obviously the 

00:01:55.380 --> 00:01:59.060
 genetic hayot are inspired from 

00:01:57.180 --> 00:02:01.979
 natural evolution process 

00:01:59.060 --> 00:02:03.149
 in fact the motivation is also that 

00:02:01.979 --> 00:02:04.860
 given that people are suffering 

00:02:03.149 --> 00:02:06.840
 and made the result the process of 

00:02:04.860 --> 00:02:09.479
 pollution such as we know thanks 

00:02:06.840 --> 00:02:12.360
 to the work of researchers like darwin 

00:02:09.479 --> 00:02:13.440
 - Mendel week so why not 

00:02:12.360 --> 00:02:16.590
 use a lawsuit 

00:02:13.440 --> 00:02:18.090
 model and implement this process 

00:02:16.590 --> 00:02:20.390
 on a machine to generate a 

00:02:18.090 --> 00:02:22.410
 behavior a human intelligence 

00:02:20.390 --> 00:02:25.980
 an artificial intelligence in this 

00:02:22.410 --> 00:02:27.450
 koh seah is a disadvantage of doing that 

00:02:25.980 --> 00:02:31.980
 on a computer is that in this case 

00:02:27.450 --> 00:02:34.260
 rather than having a generation that 

00:02:31.980 --> 00:02:37.920
 takes 25 years we actually have 

00:02:34.260 --> 00:02:39.720
 generations that can span out 

00:02:37.920 --> 00:02:41.310
 a shorter amount of time so we 

00:02:39.720 --> 00:02:43.440
 will not need millions of years 

00:02:41.310 --> 00:02:45.120
 to get several generate 

00:02:43.440 --> 00:02:46.560
 generations so maybe we can 

00:02:45.120 --> 00:02:48.740
 hope to converge a lot more 

00:02:46.560 --> 00:02:56.210
 quickly the green an intelligence that 

00:02:48.740 --> 00:02:58.560
 natural evolution has allowed gold 

00:02:56.210 --> 00:03:01.110
 so we will represent our space of 

00:02:58.560 --> 00:03:03.450
 solution by a population 

00:03:01.110 --> 00:03:04.890
 this population offers it corresponds 

00:03:03.450 --> 00:03:06.930
 all of our every nova facts 

00:03:04.890 --> 00:03:09.000
 correspond to the equivalent of a 

00:03:06.930 --> 00:03:11.370
 chromosome so a chromosome it's going to be 

00:03:09.000 --> 00:03:13.500
 a string of characters or 

00:03:11.370 --> 00:03:14.850
 characters so match who encodes 

00:03:13.500 --> 00:03:18.330
 essentially information about 

00:03:14.850 --> 00:03:21.330
 our genes are only used a 

00:03:18.330 --> 00:03:24.660
 set of characters a vocabulary 

00:03:21.330 --> 00:03:26.520
 for an alphabet so goes for our 

00:03:24.660 --> 00:03:30.390
 binary characters you will get a 

00:03:26.520 --> 00:03:32.100
 binary string like that 

00:03:30.390 --> 00:03:35.550
 then in a population to generate 

00:03:32.100 --> 00:03:38.400
 children with simple procedures 

00:03:35.550 --> 00:03:41.130
 crossover of two per year followed 

00:03:38.400 --> 00:03:45.150
 a mutation applied to the child 

00:03:41.130 --> 00:03:47.490
 generate and all this process there is going to have 

00:03:45.150 --> 00:03:48.810
 a random aspect actually it's going to be at 

00:03:47.490 --> 00:03:50.640
 the place in the parents section 

00:03:48.810 --> 00:03:54.570
 then in the application or not of the 

00:03:50.640 --> 00:03:58.230
 mutation and the children who are going to be 

00:03:54.570 --> 00:03:59.580
 preserved will then be able to 

00:03:58.230 --> 00:04:00.300
 reproduce according to their 

00:03:59.580 --> 00:04:01.319
 adaptation 

00:04:00.300 --> 00:04:03.330
 that's how it will be selected 

00:04:01.319 --> 00:04:06.110
 to become parents in turn 

00:04:03.330 --> 00:04:09.180
 to generate the next generation 

00:04:06.110 --> 00:04:11.640
 so in fact the fitness function or 

00:04:09.180 --> 00:04:14.930
 of adapting your correspondents our 

00:04:11.640 --> 00:04:14.930
 function mdn we are trying to optimize 

00:04:15.290 --> 00:04:21.690
 so here is absolute to the general code sure 

00:04:18.239 --> 00:04:22.650
 that I am the vast majority of 

00:04:21.690 --> 00:04:24.840
 genetic algorithms 

00:04:22.650 --> 00:04:26.520
 so we start with a population that 

00:04:24.840 --> 00:04:28.140
 is going to be a set of not generating 

00:04:26.520 --> 00:04:30.180
 randomly that is to say that 

00:04:28.140 --> 00:04:31.620
 whole healthy bodies our 

00:04:30.180 --> 00:04:33.840
 population are going to be chromosomes 

00:04:31.620 --> 00:04:35.280
 randomly generated so strings 

00:04:33.840 --> 00:04:37.860
 characters eventually generated 

00:04:35.280 --> 00:04:39.630
 randomly afterwards of one's must 

00:04:37.860 --> 00:04:41.250
 specify a number of iterations so that 

00:04:39.630 --> 00:04:43.320
 is going to be the number of generations that is going 

00:04:41.250 --> 00:04:45.840
 be generated by the algorithm is to 

00:04:43.320 --> 00:04:48.620
 each iteration initializes a 

00:04:45.840 --> 00:04:51.120
 new population to the whole city 

00:04:48.620 --> 00:04:53.100
 and when we're going to do that we're going 

00:04:51.120 --> 00:04:56.940
 fill that population up by adding 

00:04:53.100 --> 00:04:59.669
 1 to 1 2 1 until a child a new 

00:04:56.940 --> 00:05:01.500
 element of the new generation for 

00:04:59.669 --> 00:05:04.100
 do that we choose a first 

00:05:01.500 --> 00:05:07.229
 Hate chromosomes that will be chosen 

00:05:04.100 --> 00:05:08.729
 with a probability that is going to have to 

00:05:07.229 --> 00:05:12.750
 grow that needs to increase depending 

00:05:08.729 --> 00:05:13.400
 of fitness adaptation of the name in 

00:05:12.750 --> 00:05:16.380
 question 

00:05:13.400 --> 00:05:17.070
 to that we will choose a second parent 

00:05:16.380 --> 00:05:19.470
 bonus 

00:05:17.070 --> 00:05:22.590
 so it's a different chromosome that 

00:05:19.470 --> 00:05:24.750
 loving the people we subtracted 

00:05:22.590 --> 00:05:29.130
 the first hate chromosome that was 

00:05:24.750 --> 00:05:31.680
 then choose from that we will make a 

00:05:29.130 --> 00:05:33.919
 cross between seniors as a bonus that goes 

00:05:31.680 --> 00:05:36.450
 give us the new born n canvas 

00:05:33.919 --> 00:05:38.130
 the child with some probability 

00:05:36.450 --> 00:05:40.740
 which typically will be relatively 

00:05:38.130 --> 00:05:42.600
 little we will apply a mutation on 

00:05:40.740 --> 00:05:45.630
 a star give me us 

00:05:42.600 --> 00:05:47.910
 of alters 1 modified from chromosome one 

00:05:45.630 --> 00:05:50.670
 star and this is your vote is 

00:05:47.910 --> 00:05:52.470
 added to the population and so this 

00:05:50.670 --> 00:05:53.670
 process there we repeat it until 

00:05:52.470 --> 00:05:55.860
 we have filled our population 

00:05:53.670 --> 00:05:59.400
 until having known in the new 

00:05:55.860 --> 00:06:00.990
 population and finally to racing 

00:05:59.400 --> 00:06:03.480
 assigns the population to the new 

00:06:00.990 --> 00:06:05.340
 population and continue the iterations 

00:06:03.480 --> 00:06:07.110
 like that so we generated a new 

00:06:05.340 --> 00:06:11.550
 generation and then we continue until 

00:06:07.110 --> 00:06:14.670
 we reached number iteration 

00:06:11.550 --> 00:06:15.900
 of iterations and finally we're going 

00:06:14.670 --> 00:06:18.780
 return to the very end 

00:06:15.900 --> 00:06:20.910
 the node n among the last population 

00:06:18.780 --> 00:06:22.920
 which is the value the function 

00:06:20.910 --> 00:06:28.590
 adaptation the objective function the 

00:06:22.920 --> 00:06:30.180
 higher so here's an example of 

00:06:28.590 --> 00:06:33.900
 crossover that could be applied in 

00:06:30.180 --> 00:06:35.550
 the context of the problem of a queen a 

00:06:33.900 --> 00:06:37.350
 way of doing a cross it would be 

00:06:35.550 --> 00:06:39.900
 to take back both of our parents so this 

00:06:37.350 --> 00:06:42.900
 would be our own our first 

00:06:39.900 --> 00:06:45.930
 parents n this is it would be our 

00:06:42.900 --> 00:06:49.890
 second parent n prime the way of a 

00:06:45.930 --> 00:06:51.630
 side so in the form of chromosomes this 

00:06:49.890 --> 00:06:53.970
 state there it's a bit like the decree 

00:06:51.630 --> 00:06:56.670
 before we know we are going for each 

00:06:53.970 --> 00:06:58.320
 column indicated that the number of the 

00:06:56.670 --> 00:07:01.530
 row where is the queen on this 

00:06:58.320 --> 00:07:03.060
 column there and to make the crossing 

00:07:01.530 --> 00:07:07.560
 by the way, what are we going to do? 

00:07:03.060 --> 00:07:11.570
 randomly choose a separation a 

00:07:07.560 --> 00:07:15.090
 two-part separation view table 

00:07:11.570 --> 00:07:17.010
 so columns and then we'll take 

00:07:15.090 --> 00:07:19.470
 in this case if we take the part to 

00:07:17.010 --> 00:07:21.510
 right of a hate and we will merge it 

00:07:19.470 --> 00:07:24.690
 with the left side of a premium hate 

00:07:21.510 --> 00:07:27.620
 so in fact we choose seven years this 

00:07:24.690 --> 00:07:32.070
 first under that of the hate chromosome 

00:07:27.620 --> 00:07:34.830
 so we're going to hold with on the right of the 

00:07:32.070 --> 00:07:37.440
 the left part of the chromosome ndp nothing 

00:07:34.830 --> 00:07:39.270
 and that gives us a new chromosome 

00:07:37.440 --> 00:07:40.620
 which is added to the new population 

00:07:39.270 --> 00:07:43.170
 so this is an example of application 

00:07:40.620 --> 00:07:45.660
 crossing that could be used 

00:07:43.170 --> 00:07:49.590
 to try to solve the problem of 

00:07:45.660 --> 00:07:51.690
 showcases now that we've seen how 

00:07:49.590 --> 00:07:54.240
 crossing two parents commented what we 

00:07:51.690 --> 00:07:55.400
 could in the case of the problem of 

00:07:54.240 --> 00:07:57.419
 showcases 

00:07:55.400 --> 00:07:58.669
 select his two parents there from 

00:07:57.419 --> 00:08:02.460
 random way 

00:07:58.669 --> 00:08:06.060
 when if we will define our function 

00:08:02.460 --> 00:08:08.729
 of adaptation as being the name of 

00:08:06.060 --> 00:08:10.500
 reindeer that does not attack so before 

00:08:08.729 --> 00:08:13.050
 we had a functions function 

00:08:10.500 --> 00:08:15.150
 goal which was the number of reindeer 

00:08:13.050 --> 00:08:16.949
 who of reindeer father who are attacking 

00:08:15.150 --> 00:08:20.130
 it was because in this case if we 

00:08:16.949 --> 00:08:21.660
 was trying to minimize that number so 

00:08:20.130 --> 00:08:23.280
 if we want to maximize ben we can 

00:08:21.660 --> 00:08:24.860
 use as adaptation function the 

00:08:23.280 --> 00:08:28.440
 number of reindeer that do not attack 

00:08:24.860 --> 00:08:30.120
 so the minimum is zero then the 

00:08:28.440 --> 00:08:33.080
 maximum is the number of bettors 

00:08:30.120 --> 00:08:38.700
 finally know 28 in the code of 8.5 

00:08:33.080 --> 00:08:39.990
 and a choice for the selection of the first 

00:08:38.700 --> 00:08:42.870
 chromosomes it would be to use a 

00:08:39.990 --> 00:08:44.310
 probability that is proportional to the 

00:08:42.870 --> 00:08:46.500
 adaptation function 

00:08:44.310 --> 00:08:48.810
 so we have an example here we have we had 

00:08:46.500 --> 00:08:52.430
 a population with 4 as chromosomes 

00:08:48.810 --> 00:08:54.600
 and there for each one we would take the number 

00:08:52.430 --> 00:08:56.250
 the value of the function the adaptation 

00:08:54.600 --> 00:08:58.470
 so the number of fathers who does not attack 

00:08:56.250 --> 00:08:59.670
 not in this configuration there so I 

00:08:58.470 --> 00:09:02.670
 will not do the derivation but you can 

00:08:59.670 --> 00:09:04.700
 check that when 6 24 23 20 and 11 

00:09:02.670 --> 00:09:08.300
 for the caps three men who at the top 

00:09:04.700 --> 00:09:10.589
 and we finally normalize its 

00:09:08.300 --> 00:09:12.240
 functions the adaptation the its values ​​of 

00:09:10.589 --> 00:09:14.160
 adaptation functions to get some 

00:09:12.240 --> 00:09:16.529
 probabilities to get so from 

00:09:14.160 --> 00:09:17.940
 percentages that are 100 for that and 

00:09:16.529 --> 00:09:21.330
 that's going to give us actually the 

00:09:17.940 --> 00:09:23.970
 probability of selecting the first 

00:09:21.330 --> 00:09:27.089
 chromosomes so we got 2 31% of 

00:09:23.970 --> 00:09:31.500
 choose the first 29 the 2nd 26 the 

00:09:27.089 --> 00:09:34.230
 third and 14 for the fourth so 

00:09:31.500 --> 00:09:35.850
 we see that more than one chromosome 

00:09:34.230 --> 00:09:37.260
 is a good solution to our 

00:09:35.850 --> 00:09:39.990
 more problem to enjoy the 10 

00:09:37.260 --> 00:09:43.950
 selected to generate a child in 

00:09:39.990 --> 00:09:46.800
 the next generation is high and 

00:09:43.950 --> 00:09:48.410
 so we see a process itie or for 

00:09:46.800 --> 00:09:51.630
 the first child 

00:09:48.410 --> 00:09:53.880
 in fact sorry the first parent who has 

00:09:51.630 --> 00:09:56.010
 generated the first child 

00:09:53.880 --> 00:09:58.590
 we chose this one here that come 

00:09:56.010 --> 00:10:00.000
 still enjoy quite high 29% 

00:09:58.590 --> 00:10:03.240
 to then select from yourself the 

00:10:00.000 --> 00:10:05.430
 second by chance it was the first 

00:10:03.240 --> 00:10:08.010
 element of our original population in 

00:10:05.430 --> 00:10:10.950
 above that we chose a point or 

00:10:08.010 --> 00:10:12.270
 divide the chromosomes and there in this 

00:10:10.950 --> 00:10:15.690
 case also for this variant the hour this 

00:10:12.270 --> 00:10:18.180
 who is a variant who who is 

00:10:15.690 --> 00:10:20.700
 reasonable to use we will generate in 

00:10:18.180 --> 00:10:23.760
 makes two children by doing an exchange 

00:10:20.700 --> 00:10:25.500
 between the left part of a chromosome 

00:10:23.760 --> 00:10:27.930
 parents with the party to the right of 

00:10:25.500 --> 00:10:30.240
 the other so this is generating this child there 

00:10:27.930 --> 00:10:33.660
 here to generate the second child 

00:10:30.240 --> 00:10:35.720
 we make the selection of the other two 

00:10:33.660 --> 00:10:39.510
 parties are the conquests a whole 

00:10:35.720 --> 00:10:48.980
 so that's the selection part of 

00:10:39.510 --> 00:10:51.240
 cross of parents followed by crossing and 

00:10:48.980 --> 00:10:52.950
 I'm pointed out that in fact we 

00:10:51.240 --> 00:10:54.000
 could have chosen several more 

00:10:52.950 --> 00:10:56.430
 selection process 

00:10:54.000 --> 00:10:58.980
 so there was where there is 

00:10:56.430 --> 00:11:00.740
 a lot of freedom in the design of a 

00:10:58.980 --> 00:11:02.790
 algorithm is genetic 

00:11:00.740 --> 00:11:05.550
 the important thing is that the 

00:11:02.790 --> 00:11:07.740
 probability of a chromosome there be 

00:11:05.550 --> 00:11:11.910
 chosen increases according to its 

00:11:07.740 --> 00:11:14.730
 adaptation function so in others 

00:11:11.910 --> 00:11:17.760
 words the policy is chosen for 

00:11:14.730 --> 00:11:19.770
 generate a child must go up 

00:11:17.760 --> 00:11:21.750
 as the function 

00:11:19.770 --> 00:11:24.120
 finally 2 how bad they are 

00:11:21.750 --> 00:11:27.990
 corresponds a good solution to our 

00:11:24.120 --> 00:11:30.000
 optimization problem and I would add 

00:11:27.990 --> 00:11:33.210
 also the mutation part in this case 

00:11:30.000 --> 00:11:35.960
 so what we could do is 

00:11:33.210 --> 00:11:40.260
 simply with some probability 

00:11:35.960 --> 00:11:41.400
 randomly choose one of the 

00:11:40.260 --> 00:11:45.690
 elements of our chain 

00:11:41.400 --> 00:11:48.090
 and then change its value randomly 

00:11:45.690 --> 00:11:48.830
 also so we have the example here at pau 

00:11:48.090 --> 00:11:52.590
 a mutation 

00:11:48.830 --> 00:11:53.090
 but maybe at a priority I know 

00:11:52.590 --> 00:11:55.620
 not me 

00:11:53.090 --> 00:11:57.600
 25% we had a chance to have a 

00:11:55.620 --> 00:12:00.780
 mutation here we would not have had here 

00:11:57.600 --> 00:12:02.880
 would have had a more dense mutation 

00:12:00.780 --> 00:12:04.830
 surety will not randomly choose one of 

00:12:02.880 --> 00:12:07.110
 elements of the chromosome 

00:12:04.830 --> 00:12:09.420
 then we changed it to the canvas so in 

00:12:07.110 --> 00:12:12.210
 this case we went from 5 to 1 

00:12:09.420 --> 00:12:13.080
 still there for the mutation yet another 

00:12:12.210 --> 00:12:14.880
 times there are several possible choices 

00:12:13.080 --> 00:12:18.930
 then from one application to another the 

00:12:14.880 --> 00:12:23.670
 choice which is appropriate your charges and 

00:12:18.930 --> 00:12:25.620
 then when we design genetic we 

00:12:23.670 --> 00:12:26.850
 must think a little about quesques 

00:12:25.620 --> 00:12:29.520
 what would be good 

00:12:26.850 --> 00:12:34.050
 imitations the for our problem at 

00:12:29.520 --> 00:12:35.990
 questions I want to finish with an example 

00:12:34.050 --> 00:12:37.800
 who threads result of a student project 

00:12:35.990 --> 00:12:39.540
 University of Sherbrooke 

00:12:37.800 --> 00:12:42.120
 gabriel girard marc side elections and 

00:12:39.540 --> 00:12:45.330
 symonds renault who actually have 

00:12:42.120 --> 00:12:49.380
 developed a genetic algorithm for 

00:12:45.330 --> 00:12:50.310
 an example an optimization we want 

00:12:49.380 --> 00:12:52.380
 move forward 

00:12:50.310 --> 00:12:55.650
 super mario as far as possible in 

00:12:52.380 --> 00:12:57.360
 one of the super mario tables in this 

00:12:55.650 --> 00:13:00.750
 case also the state end that will correspond 

00:12:57.360 --> 00:13:05.130
 to the list of actions that mario does to 

00:13:00.750 --> 00:13:07.830
 every moment of his life actually in the 

00:13:05.130 --> 00:13:09.570
 chart so in fact the actions that 

00:13:07.830 --> 00:13:13.220
 corresponds to each possible button of 

00:13:09.570 --> 00:13:15.780
 the joystick and the adaptation function 

00:13:13.220 --> 00:13:18.480
 it would be a function that will increase in 

00:13:15.780 --> 00:13:22.050
 function of the distance traveled by 

00:13:18.480 --> 00:13:22.980
 mario if he performs the actions in the 

00:13:22.050 --> 00:13:25.110
 chromosome m 

00:13:22.980 --> 00:13:27.060
 so for more details I invite you 

00:13:25.110 --> 00:13:30.360
 to see the report they generated 

00:13:27.060 --> 00:13:31.290
 following their project and here we have a 

00:13:30.360 --> 00:13:33.389
 example of a 

00:13:31.290 --> 00:13:35.190
 actually part of the table chart and in 

00:13:33.389 --> 00:13:37.709
 did so much higher than so what 

00:13:35.190 --> 00:13:40.019
 wants to do is find the list of 

00:13:37.709 --> 00:13:41.519
 actions that will allow super bo to 

00:13:40.019 --> 00:13:44.009
 to go as far as possible in the 

00:13:41.519 --> 00:13:46.170
 chart then ideally to finish and 

00:13:44.009 --> 00:13:47.839
 finally function fdn the way they 

00:13:46.170 --> 00:13:50.279
 have defined in their projects 

00:13:47.839 --> 00:13:53.779
 encourage and super mario to finish the 

00:13:50.279 --> 00:13:53.779
 as soon as possible legally 

00:13:55.190 --> 00:14:02.779
 so here we see an example of 

00:13:57.889 --> 00:14:04.949
 the execution of the first generation 

00:14:02.779 --> 00:14:06.600
 of war or genetic so as one 

00:14:04.949 --> 00:14:07.800
 can see here since initialize 

00:14:06.600 --> 00:14:08.220
 randomly it's not going big 

00:14:07.800 --> 00:14:11.160
 thing 

00:14:08.220 --> 00:14:12.449
 mario before his sentence but here it is 

00:14:11.160 --> 00:14:15.569
 second generation writing but that's 

00:14:12.449 --> 00:14:18.420
 in fact after several generations we 

00:14:15.569 --> 00:14:20.130
 sees that mario advance more and more he 

00:14:18.420 --> 00:14:21.300
 there is a little hesitation but we see that 

00:14:20.130 --> 00:14:23.370
 it is a solution that is already not bad 

00:14:21.300 --> 00:14:25.380
 by the way and that super mario 

00:14:23.370 --> 00:14:27.870
 so my wheel will be much further in 

00:14:25.380 --> 00:14:29.970
 done in the table after several 

00:14:27.870 --> 00:14:32.339
 other generations we come to a 

00:14:29.970 --> 00:14:34.319
 even better solution or the bari ace 

00:14:32.339 --> 00:14:39.260
 to the advances a little more decided 

00:14:34.319 --> 00:14:39.260
 without hesitation and will not be unhappy 

00:14:41.930 --> 00:14:49.350
 Mario car managed to finish the 

00:14:46.230 --> 00:14:51.209
 array is ultimately the generation 

00:14:49.350 --> 00:14:53.639
 final the final solution returned by 

00:14:51.209 --> 00:14:58.199
 the algorithm actually matches mario 

00:14:53.639 --> 00:15:02.089
 that goes very, very quickly without any 

00:14:58.199 --> 00:15:02.089
 hesitation until the end of the stable 

00:15:18.040 --> 00:15:22.990
 then finally we see here a test of 

00:15:21.459 --> 00:15:28.959
 their algorithms in a table we have 

00:15:22.990 --> 00:15:30.269
 added an exaggerated fingernail of kompa and so 

00:15:28.959 --> 00:15:33.759
 we see that there is still some 

00:15:30.269 --> 00:15:35.740
 hesitation but still we have you 

00:15:33.759 --> 00:15:38.110
 got a solution or mario succeeded to 

00:15:35.740 --> 00:15:40.800
 get out and then get killed 

00:15:38.110 --> 00:15:40.800
 speak as loudly 

