WEBVTT
Kind: captions
Language: en

00:00:09.360 --> 00:00:10.360
[techno music plays]
[keyboard keys click]

00:00:10.360 --> 00:00:11.360
&gt;&gt;Male: Go ahead.

00:00:11.360 --> 00:00:12.530
&gt;&gt;Joe: Hello, welcome once again to Android
Developer Office Hours.

00:00:12.530 --> 00:00:16.010
I'm Joe Malin, your moderator, next to me
is Trevor Johns.

00:00:16.010 --> 00:00:17.010
&gt;&gt;Trevor: Hello everyone.

00:00:17.010 --> 00:00:18.980
&gt;&gt;Joe: One of our developer engineers.

00:00:18.980 --> 00:00:21.090
We also have Alex Lucas in the studio.

00:00:21.090 --> 00:00:23.210
Daniel Pham is our Engineer.

00:00:23.210 --> 00:00:28.770
And we have a special guest today Chirag,
who is going to be talking about Google Play

00:00:28.770 --> 00:00:34.090
services API and what you can use it to do
with.

00:00:34.090 --> 00:00:35.840
Or something like that.

00:00:35.840 --> 00:00:36.840
[Trevor laughs]

00:00:36.840 --> 00:00:37.840
&gt;&gt;Joe: That was flaky.

00:00:37.840 --> 00:00:38.840
OK, Chirag, please.

00:00:38.840 --> 00:00:41.860
&gt;&gt;Chirag: Hi, my name is Chirag Shah and I'm
a developer programs engineer on Google Plus.

00:00:41.860 --> 00:00:47.760
I'm here to talk about the brand new Google
Plus APIs and Coolpix services which help

00:00:47.760 --> 00:00:55.030
you create a more personalized experience
for your users with the native Plus One button

00:00:55.030 --> 00:00:56.030
and Sign in button.

00:00:56.030 --> 00:00:59.580
So let's jump into the Plus One button.

00:00:59.580 --> 00:01:02.040
Generally the plus one button offers a way
for users to recommend content within your

00:01:02.040 --> 00:01:03.040
application.

00:01:03.040 --> 00:01:05.449
With the new APIs in Google Play Services.

00:01:05.449 --> 00:01:09.159
you can integrate a native plus one button
in your app.

00:01:09.159 --> 00:01:10.159
[Loud chime]

00:01:10.159 --> 00:01:11.159
&gt;&gt;Chirag: So how do you do this?

00:01:11.159 --> 00:01:18.180
First, include the Plus One button in your
layouts.

00:01:18.180 --> 00:01:21.840
Next integrate the Plus client object in the
life cycle of your activity.

00:01:21.840 --> 00:01:27.010
This means you'll initialize the plus client
object in your on create handler and then

00:01:27.010 --> 00:01:32.090
call up plus client dot connect during your
on start handler and finally call plus client

00:01:32.090 --> 00:01:34.240
dot disconnect in your on stop handler.

00:01:34.240 --> 00:01:37.960
So why do we do this?

00:01:37.960 --> 00:01:41.670
During your on start handler, you'll call
plus client dot connect which establishes

00:01:41.670 --> 00:01:43.760
a connection between your application and
Google Play services.

00:01:43.760 --> 00:01:56.940
And we call disconnect to terminate the connection
and just to be a good citizen and have a decent

00:01:56.940 --> 00:01:57.940
battery life.

00:01:57.940 --> 00:02:00.979
Finally, initialize the plus one button in
your on create handler and plus the url that

00:02:00.979 --> 00:02:03.450
should be plus one when initializing the plus
one button.

00:02:03.450 --> 00:02:05.409
So now let's jump into the sign in button.

00:02:05.409 --> 00:02:07.890
Have you ever tried to enter a username and
password on the mobile device?

00:02:07.890 --> 00:02:08.890
It's really difficult.

00:02:08.890 --> 00:02:15.310
[chuckles] The sign in with Google plus button
authenticates the user and manages OAuth two

00:02:15.310 --> 00:02:25.920
dot 0 flow and helps simplify the integration
with Google plus APIs.

00:02:25.920 --> 00:02:29.290
Furthermore users will get a single sign on
experience and won't need to reenter their

00:02:29.290 --> 00:02:32.450
Google credentials to use your application.

00:02:32.450 --> 00:02:36.080
The steps to integrate the sign in button
are very similar to integrating the plus one

00:02:36.080 --> 00:02:37.080
button.

00:02:37.080 --> 00:02:38.080
First, you'll include the plus sign in button
in your layout, next integrate the plus client

00:02:38.080 --> 00:02:42.790
object in the life cycle of your activity
like you did before.

00:02:42.790 --> 00:02:51.350
But when initializing the plus client object,
you'll pass an array of OAuth 2 dot 0s code,

00:02:51.350 --> 00:02:54.830
which basically declare the types of information
you're requesting.

00:02:54.830 --> 00:02:57.140
So let's take a look at what we just talked
about.

00:02:57.140 --> 00:03:00.220
What does the plus one button and sign in
button actually look like on a device?

00:03:00.220 --> 00:03:10.150
So here this is the 
Google plus sample application we have on

00:03:10.150 --> 00:03:13.489
the Google SDK manager.

00:03:13.489 --> 00:03:19.500
&gt;&gt;Dan: Hey Chirag, this is engineer Dan, can
you make sure that the connection on the device

00:03:19.500 --> 00:03:21.060
is all the way plugged in?

00:03:21.060 --> 00:03:26.660
I'm not getting anything out of the screen
right now.

00:03:26.660 --> 00:03:35.630
[pause] I think it's the power cord may have
got unplugged out the MHL connector so make

00:03:35.630 --> 00:03:36.630
sure that the-

00:03:36.630 --> 00:03:37.630
&gt;&gt;Trevor: Yeah, MHL is not plugged in.

00:03:37.630 --> 00:03:50.760
[Pause] [whispering indistinctly off camera]
&gt;&gt;Chirag: Having a bit of technical difficulties

00:03:50.760 --> 00:04:05.849
in projecting the phone.

00:04:05.849 --> 00:04:09.590
&gt;&gt;Trevor: The fun of doing things live.

00:04:09.590 --> 00:04:12.580
&gt;&gt;Joe: Right.

00:04:12.580 --> 00:04:15.810
Someday we'll learn how to use our equipment
properly.

00:04:15.810 --> 00:04:20.910
[chuckles]
&gt;&gt;Trevor: Yeah, you can leave that plugged

00:04:20.910 --> 00:04:28.419
in, there is signal getting down to the box.

00:04:28.419 --> 00:04:44.340
&gt;&gt;Dan: Unplug the MHL connector from the phone
and plug it back in.

00:04:44.340 --> 00:04:45.770
[pause]
&gt;&gt;Dan: Swear to God [inaudible] in there too.

00:04:45.770 --> 00:04:46.770
[Trevor laughs]
&gt;&gt;Joe: Yes?

00:04:46.770 --> 00:04:47.770
No?

00:04:47.770 --> 00:04:48.770
&gt;&gt;Dan: No luck.

00:04:48.770 --> 00:04:49.770
&gt;&gt;Joe: Still nothing.

00:04:49.770 --> 00:04:50.770
&gt;&gt;Dan: Alright guys why don't we move on?

00:04:50.770 --> 00:04:51.770
&gt;&gt;Trevor: Alright, yeah let's move to Plan
B.

00:04:51.770 --> 00:04:53.379
&gt;&gt;Chirag: OK so, basically you can emulate
what we've done here by going to developers

00:04:53.379 --> 00:04:57.099
dot Google dot com slash plus, slash mobile,
slash Android.

00:04:57.099 --> 00:05:04.319
From there you'll see some instructions instructing
you to grab the Google Plus SDK within the

00:05:04.319 --> 00:05:08.960
Google Android SDK manager and you'll be able
to run the sample application yourself.

00:05:08.960 --> 00:05:11.729
&gt;&gt;Trevor: We'll see if we can--.

00:05:11.729 --> 00:05:17.080
Pass the phone over here, let me see if I
can demo the sample app live for folks.

00:05:17.080 --> 00:05:20.169
Let's see, we'll unhook this cable.

00:05:20.169 --> 00:05:26.009
So Dan, can you get a camera on me by any
chance?

00:05:26.009 --> 00:05:28.169
Let's hold it up here.

00:05:28.169 --> 00:05:33.319
For those of you watching, let's see if we
can get this focused.

00:05:33.319 --> 00:05:35.360
Alright
&gt;&gt;Dan: You're good.

00:05:35.360 --> 00:05:39.900
&gt;&gt;Trevor: Yeah, so Chirag if you wanna come
over and play with the floating phone.

00:05:39.900 --> 00:05:40.900
&gt;&gt;Chirag: OK thank you Trevor.

00:05:40.900 --> 00:05:46.419
You can press sign in here and as you can
see here, this is what the Google Plus sign

00:05:46.419 --> 00:05:47.569
in button looks like.

00:05:47.569 --> 00:05:53.919
So we'll press the sign in button and now
it's going to ask you to grant access to the

00:05:53.919 --> 00:05:59.770
sample application and the permissions are
know who you are on Google, and send your

00:05:59.770 --> 00:06:02.500
activity to your private Google Plus history.

00:06:02.500 --> 00:06:04.060
I'm gonna press allow.

00:06:04.060 --> 00:06:05.539
And now we're signed in.

00:06:05.539 --> 00:06:11.150
So now let's take a look at the plus one button.

00:06:11.150 --> 00:06:16.179
Here you can see the native Plus one button
in various configurations; small, medium,

00:06:16.179 --> 00:06:23.909
tall standard and with - in my annotation--
demonstrating who else Plus one knew.

00:06:23.909 --> 00:06:29.229
We can un-plus one'd it here- my finger.

00:06:29.229 --> 00:06:34.749
Here you can see the plus one dialogue and
it says "you publicly plus one'd this' and

00:06:34.749 --> 00:06:40.939
it shows your name and the application you
plus one'd it from.

00:06:40.939 --> 00:06:44.039
And that's about it.

00:06:44.039 --> 00:06:45.039
Thank you, Trevor.

00:06:45.039 --> 00:06:46.509
&gt;&gt;Trevor: Hopefully you could make that out,
everyone watching it on the camera.

00:06:46.509 --> 00:06:48.389
I know it's a little bit blurry.

00:06:48.389 --> 00:06:50.599
Making the best- making do with what you can
here.

00:06:50.599 --> 00:06:51.599
Right.

00:06:51.599 --> 00:06:53.020
&gt;&gt;Chirag: And that's it.

00:06:53.020 --> 00:06:55.839
&gt;&gt;Trevor: Alright I think that's it for Chirag.

00:06:55.839 --> 00:06:57.069
&gt;&gt;Joe: Thank you, Chirag.

00:06:57.069 --> 00:06:58.309
&gt;&gt;Trevor: Yeah, thank you.

00:06:58.309 --> 00:07:04.199
&gt;&gt;Joe: Great, our next guest is Tim Bray and
what is Tim gonna be talking about?

00:07:04.199 --> 00:07:07.749
&gt;&gt;Trevor: Tim is going to be talking about
it looks like OAuth, correct?

00:07:07.749 --> 00:07:08.999
Are you there, Tim?

00:07:08.999 --> 00:07:09.999
&gt;&gt;Tim: That's right.

00:07:09.999 --> 00:07:10.999
&gt;&gt;Joe: Tim?

00:07:10.999 --> 00:07:11.999
&gt;&gt;Tim: I'm here!

00:07:11.999 --> 00:07:12.999
&gt;&gt;Trevor: There you are.

00:07:12.999 --> 00:07:15.569
&gt;&gt;Joe: So you're gonna be talking about OAuth,
is that correct?

00:07:15.569 --> 00:07:19.719
&gt;&gt;Tim: Well, I'm going to be talking about
OAuth in the context of Google Play services.

00:07:19.719 --> 00:07:20.719
Yeah.

00:07:20.719 --> 00:07:21.719
&gt;&gt;Joe: OK, great.

00:07:21.719 --> 00:07:22.719
Go ahead Tim.

00:07:22.719 --> 00:07:23.719
&gt;&gt;Tim: Take it away.

00:07:23.719 --> 00:07:29.530
So anyhow, so Google play services started
rolling out last week and one of the big goodies

00:07:29.530 --> 00:07:32.520
that's in there is access to OAuth two stuff.

00:07:32.520 --> 00:07:37.530
Now, the other big goodie was the Google plus
stuff that Chirag just showed you and in fact,

00:07:37.530 --> 00:07:41.639
if you look underneath the code that he was
running, the OAuth code was also being used

00:07:41.639 --> 00:07:43.710
to handle the authorization stuff.

00:07:43.710 --> 00:07:47.240
And we're gonna be using it for lots of other
stuff.

00:07:47.240 --> 00:07:53.429
So the problem is that OAuth 2 is a great
big messy complicated standard and that's

00:07:53.429 --> 00:07:57.089
gonna give us a whole set of issues around
accessing resources online.

00:07:57.089 --> 00:08:00.050
It's big and messy and complicated.

00:08:00.050 --> 00:08:03.229
And OAuth 2 is hard to understand and you
shouldn't have to.

00:08:03.229 --> 00:08:07.789
So what we're trying to do is make that goodness
available with a reasonably sane tractable

00:08:07.789 --> 00:08:08.789
API.

00:08:08.789 --> 00:08:12.169
And the upside's pretty good.

00:08:12.169 --> 00:08:16.490
The upside is nobody ever has to type a password.

00:08:16.490 --> 00:08:18.909
Like Chirag said, that sucks.

00:08:18.909 --> 00:08:21.389
It's really hard to type passwords on mobile
devices.

00:08:21.389 --> 00:08:22.620
But even though they don't have to have a
password they still get good security, they

00:08:22.620 --> 00:08:28.379
always get prompted by the system in whether
they want to give access via their email address

00:08:28.379 --> 00:08:30.129
and they only get prompted once.

00:08:30.129 --> 00:08:33.050
If they change their minds they can revoke
that later.

00:08:33.050 --> 00:08:34.800
And it really works pretty well.

00:08:34.800 --> 00:08:37.310
It's a much better user experience.

00:08:37.310 --> 00:08:42.050
Now if you're using a Google API like Calendar,
YouTube or Google Plus there's a nice Java

00:08:42.050 --> 00:08:44.839
language library that just takes care of all
this stuff for you.

00:08:44.839 --> 00:08:48.470
But if you wanna work on a lower level, at
the rest level, you're doing HTTP gets and

00:08:48.470 --> 00:08:53.380
puts; you can also do that directly.

00:08:53.380 --> 00:09:00.069
I find actually that the Google plus API works
really terrifically well at the rest level.

00:09:00.069 --> 00:09:02.800
Just doing you know, gets to pull JSON and
deal with those.

00:09:02.800 --> 00:09:07.300
So the way it works is you look at the SDK
that came with Google play services and there's

00:09:07.300 --> 00:09:13.560
a class in there called Google auth util and
you work it and eventually it gives you a

00:09:13.560 --> 00:09:18.139
thing called a token, which is just a string,
a bearer token which is just a string that

00:09:18.139 --> 00:09:19.690
you put in a HTTP header.

00:09:19.690 --> 00:09:25.649
You do that and you magically get access to
your stuff, any stuff you're entitled to have

00:09:25.649 --> 00:09:26.910
on Google Plus.

00:09:26.910 --> 00:09:32.860
Anybody out there who already knows what OAuth
2 is gonna be wondering about token expiration

00:09:32.860 --> 00:09:34.740
and refreshing and so on.

00:09:34.740 --> 00:09:35.920
But don't worry.

00:09:35.920 --> 00:09:40.070
The Google client services library just takes
care of all that for you.

00:09:40.070 --> 00:09:44.240
And it's a little bit complicated because
it's asynchronous, because when you use OAuth

00:09:44.240 --> 00:09:49.480
it's quite possible the phone's gonna have
to go out and prompt the person to say you

00:09:49.480 --> 00:09:52.250
know is it OK to use your address for this
and then there's gonna be lots of network

00:09:52.250 --> 00:09:53.250
traffic.

00:09:53.250 --> 00:09:58.481
So you totally can't ever do that on the IO
thread and, in fact, if you need to prompt

00:09:58.481 --> 00:10:03.750
it'll be- do an attempt that you'll have to
launch and you know act on it in your on activity

00:10:03.750 --> 00:10:06.220
result method and so on and so forth.

00:10:06.220 --> 00:10:10.800
And there's a little bit of other extra work
as well which that is if you're using OAuth

00:10:10.800 --> 00:10:15.440
2, the system, the server side wants to know
what app it's talking to.

00:10:15.440 --> 00:10:17.029
So you'll have to go and register your app.

00:10:17.029 --> 00:10:20.500
There's a thing called the API console that
you'd do that.

00:10:20.500 --> 00:10:24.720
Just type Google API console into Google and
it'll take you straight there.

00:10:24.720 --> 00:10:28.180
So as I said, there's a little bit of extra
work but the upside is really good.

00:10:28.180 --> 00:10:33.240
Higher security, lower irritation and-
[Inaudible chatter over Tim talking]

00:10:33.240 --> 00:10:39.490
&gt;&gt;Tim: Finally, I want to say something about
[inaudible] triggers, that's the story up

00:10:39.490 --> 00:10:40.550
to now.

00:10:40.550 --> 00:10:42.279
But working on some other goodies.

00:10:42.279 --> 00:10:46.160
If you think about it, most Android apps are
hybrid which is to say they have a mobile

00:10:46.160 --> 00:10:51.930
app and they'll have a web back end where
it provides things like persistence and shared

00:10:51.930 --> 00:10:53.379
user data and so on.

00:10:53.379 --> 00:10:57.550
And you’ve got an interesting authentication
problem there which is how does the backend

00:10:57.550 --> 00:11:01.250
know what app it is talking to it and what
person it's talking to?

00:11:01.250 --> 00:11:08.120
And you don’t want the person to be typing
in a password just so that your own server

00:11:08.120 --> 00:11:10.300
knows that it's talking to your own app.

00:11:10.300 --> 00:11:14.839
So we've got some stuff coming down the road
that will make further mileage out of the

00:11:14.839 --> 00:11:16.089
Google play services OAuth stuff.

00:11:16.089 --> 00:11:23.650
So this is really a interesting time to be
working on identity stuff and I think that

00:11:23.650 --> 00:11:26.410
with you know, by adopting the stuff and doing
a little extra work you can, first of all

00:11:26.410 --> 00:11:31.540
boost security and secondly really improve
the general user experience that you're offered.

00:11:31.540 --> 00:11:34.769
So that's the OAuth story.

00:11:34.769 --> 00:11:38.899
&gt;&gt;Joe: Great, thank you very much Tim.

00:11:38.899 --> 00:11:44.110
Do we have any questions online or coming
through and anything in Google plus on this?

00:11:44.110 --> 00:11:47.459
OK Alright.

00:11:47.459 --> 00:11:54.480
So if there aren't, we'll leave the lines
open, if you've got any questions either type

00:11:54.480 --> 00:11:57.009
them in or get into the Hangout.

00:11:57.009 --> 00:11:58.259
&gt;&gt;Trevor: Either way I think they'll have
to get onto the Hangout.

00:11:58.259 --> 00:11:59.259
&gt;&gt;Joe: That's true.

00:11:59.259 --> 00:12:00.259
Yes.

00:12:00.259 --> 00:12:01.259
&gt;&gt;Trevor: Yes.

00:12:01.259 --> 00:12:04.500
&gt;&gt;Joe: So if you have questions, get into
the Hangout, ask the question and we'll get

00:12:04.500 --> 00:12:05.639
to you as soon as we can.

00:12:05.639 --> 00:12:10.160
Meanwhile, we're gonna move to Google Moderator
and take some questions off of there.

00:12:10.160 --> 00:12:14.510
&gt;&gt;Trevor: Yep, so these were questions submitted
before the show and voted on by viewers.

00:12:14.510 --> 00:12:15.510
&gt;&gt;Joe: Right.

00:12:15.510 --> 00:12:21.870
&gt;&gt;Trevor: So the first question is from Palo
Alto, California from a name I can't quite

00:12:21.870 --> 00:12:25.160
read but, do you wanna go ahead and read that,
Joe?

00:12:25.160 --> 00:12:26.160
&gt;&gt;Joe: Yeah sure.

00:12:26.160 --> 00:12:31.660
"I'm using loaders from support library however
I found when the device is rotated the activity

00:12:31.660 --> 00:12:37.070
gets recreated and inits the existing loader,
but on load finish never gets called.

00:12:37.070 --> 00:12:39.220
Some say it's a bug and support lib.

00:12:39.220 --> 00:12:40.610
What's the solution or the work around?"

00:12:40.610 --> 00:12:44.971
&gt;&gt;Trevor: OK, so I looked into this a little
bit before the show and so yeah, the issue

00:12:44.971 --> 00:12:52.230
in question here is specific to the support
library and exactly what was described.

00:12:52.230 --> 00:12:58.670
When on pause is called on load finished is
not getting called for the loader and this

00:12:58.670 --> 00:13:03.870
is not the behavior exhibited by the system
frameworks.

00:13:03.870 --> 00:13:06.920
And because of that that pretty much says,
yeah, this is a bug.

00:13:06.920 --> 00:13:09.389
It's something that we need to address in
the support library.

00:13:09.389 --> 00:13:12.990
I'll go ahead and make sure the team that
works on that is aware of it and I will try

00:13:12.990 --> 00:13:15.680
and get it fixed in there for you for the
next version.

00:13:15.680 --> 00:13:21.629
Unfortunately I'm not aware of a work around
off the top of my head on this so, for now,

00:13:21.629 --> 00:13:28.589
I think you'll just need to be real careful
whenever your app is using the support library

00:13:28.589 --> 00:13:33.379
in loaders and you fall into this particular
case.

00:13:33.379 --> 00:13:35.600
But we'll try to improve it for the next release.

00:13:35.600 --> 00:13:36.600
&gt;&gt;Joe: Great.

00:13:36.600 --> 00:13:37.870
Thank you very much.

00:13:37.870 --> 00:13:42.540
Next question out of Moderator is from David
in Utah.

00:13:42.540 --> 00:13:48.879
"I've implemented standard lock screen controls
via remote control client; the controls don't

00:13:48.879 --> 00:13:52.149
appear if the screen is locked while media
is paused.

00:13:52.149 --> 00:13:53.540
Is that a feature?

00:13:53.540 --> 00:13:54.880
Is there a way to get around it?"

00:13:54.880 --> 00:14:00.259
&gt;&gt;Trevor: I believe it is a feature because
when your media is not playing, the user probably

00:14:00.259 --> 00:14:04.069
wants to see- or doesn't want the media controls
up.

00:14:04.069 --> 00:14:07.759
That's sort of the way most of the media services
in Android work.

00:14:07.759 --> 00:14:13.220
Whenever media playback is paused since there
is no quit command anywhere in the system,

00:14:13.220 --> 00:14:17.319
we just have to assume that your application
is- treat your application as if it's no longer

00:14:17.319 --> 00:14:20.199
running regardless of what's going on under
the covers.

00:14:20.199 --> 00:14:24.749
And that gives the correct user experience.

00:14:24.749 --> 00:14:28.830
Now as far as ways to get around, I can't
really think of one.

00:14:28.830 --> 00:14:32.839
Cause again this is actually by design, again
if you're not actually playing sound your

00:14:32.839 --> 00:14:36.639
media player shouldn’t be visible to the
user.

00:14:36.639 --> 00:14:40.339
So I think it's working as intended.

00:14:40.339 --> 00:14:45.370
&gt;&gt;Joe: Right, I would say certainly on the
lock screen, that's true.

00:14:45.370 --> 00:14:48.740
&gt;&gt;Trevor: Yeah, we've added- for the notifications-

00:14:48.740 --> 00:14:49.889
&gt;&gt;Joe: Notifications, right.

00:14:49.889 --> 00:14:52.310
&gt;&gt;Trevor: That also used to be actually the
way it worked, too.

00:14:52.310 --> 00:14:56.370
On recent builds we've added the ability to
have extra controls up there-

00:14:56.370 --> 00:14:57.370
&gt;&gt;Joe: Right.

00:14:57.370 --> 00:14:58.370
Yeah.

00:14:58.370 --> 00:14:59.370
&gt;&gt;Trevor: Like the close button, things like
that.

00:14:59.370 --> 00:15:00.819
But that's only in the most recent builds.

00:15:00.819 --> 00:15:02.339
&gt;&gt;Joe: Yep.

00:15:02.339 --> 00:15:03.860
I agree.

00:15:03.860 --> 00:15:09.060
The next question is from Jason Robinson in
Tennessee.

00:15:09.060 --> 00:15:13.680
"I'm writing a camera app that captures both
pictures and video, when I start capturing

00:15:13.680 --> 00:15:17.269
video with a Galaxy S 3, the preview display
turns to garbage.

00:15:17.269 --> 00:15:23.180
It works and looks fine on other devices"
There's a link here to a stack overflow question.

00:15:23.180 --> 00:15:28.490
&gt;&gt;Trevor: So in general, whenever you see
something that's not working as intended on

00:15:28.490 --> 00:15:33.050
one device and it works fine everywhere else,
that's what we call a compatibility bug.

00:15:33.050 --> 00:15:37.939
It's something we definitely take very serious
and for those of you who are long time watchers

00:15:37.939 --> 00:15:44.009
of the show we've mentioned both the CTS and
CDD but as a recap the CDD is the compatibility

00:15:44.009 --> 00:15:48.079
definition document which defines how everything
should work on Android.

00:15:48.079 --> 00:15:52.991
And the Compatibility Test Suite is the set
of automated tests that actually- that we

00:15:52.991 --> 00:15:57.339
run on every new device to verify that it
actually meets the requirements set forth

00:15:57.339 --> 00:15:59.509
in the CDD.

00:15:59.509 --> 00:16:05.569
If you see a bug like this, that likely means
there is a gap in our CTS coverage so something

00:16:05.569 --> 00:16:10.129
somehow didn't make it through, wasn't tested
for in the automated tests.

00:16:10.129 --> 00:16:14.230
The good news is all of that is open source
and is very easy to go and modify and add

00:16:14.230 --> 00:16:19.529
additional tests so if you are a developer
and most people watching probably are, we

00:16:19.529 --> 00:16:24.089
definitely like to encourage you to go and
submit new patches and add in any missing

00:16:24.089 --> 00:16:25.720
coverage into the CTS.

00:16:25.720 --> 00:16:32.050
That being said, maybe you're busy, you are
of course welcome to file bugs and we'll go

00:16:32.050 --> 00:16:35.249
ahead and add update the CTS as well.

00:16:35.249 --> 00:16:39.850
Our issue tracker is at b dot Android dot
com just let us know as much detail as you

00:16:39.850 --> 00:16:44.600
can, which specific devices you're having
issues with and our engineers will go ahead

00:16:44.600 --> 00:16:47.630
and triage that and update our test suite
as appropriate.

00:16:47.630 --> 00:16:48.939
&gt;&gt;Joe: Great, thank you.

00:16:48.939 --> 00:16:50.769
Did you happen to look at stack overflow?

00:16:50.769 --> 00:16:54.160
&gt;&gt;Trevor: I did and it looks really actually
bad.

00:16:54.160 --> 00:16:55.160
[laughs]

00:16:55.160 --> 00:16:59.420
&gt;&gt;Joe: Did anybody respond and say they'd
run into the same or make any more comments?

00:16:59.420 --> 00:17:01.459
&gt;&gt;Trevor: No, it's just the question right
now.

00:17:01.459 --> 00:17:04.699
So I can go ahead and hold it up on screen
here.

00:17:04.699 --> 00:17:11.339
This is what the developer is seeing on a
normal device and then this is what they're

00:17:11.339 --> 00:17:13.000
seeing on that one particular device.

00:17:13.000 --> 00:17:14.199
&gt;&gt;Joe: Well, that's not good.

00:17:14.199 --> 00:17:18.850
&gt;&gt;Trevor: This is something that's definitely
broken on that phone.

00:17:18.850 --> 00:17:22.929
If I didn't know better, I'd say the phone
itself was damaged but I imagine the camera

00:17:22.929 --> 00:17:24.799
probably works fine in other apps.

00:17:24.799 --> 00:17:29.940
&gt;&gt;Joe: The only thing I can think of is that
someone in stack over flow land can try and

00:17:29.940 --> 00:17:35.799
see if they can reproduce the problem and
see if it's a phone or a class of phones.

00:17:35.799 --> 00:17:40.640
&gt;&gt;Trevor: Yeah, my guess is it's probably
something, some odd bug in the camera driver

00:17:40.640 --> 00:17:42.750
on that device.

00:17:42.750 --> 00:17:46.460
&gt;&gt;Joe: Yeah.

00:17:46.460 --> 00:17:47.640
Please file a bug.

00:17:47.640 --> 00:17:48.640
&gt;&gt;Trevor: Yes.

00:17:48.640 --> 00:17:54.830
&gt;&gt;Joe: And if you've got time to work on the
CTS and the CDD please do that as well, that

00:17:54.830 --> 00:17:57.320
would be very helpful.

00:17:57.320 --> 00:18:01.429
Daniel anything out there in Hangout land
yet?

00:18:01.429 --> 00:18:02.429
No.

00:18:02.429 --> 00:18:05.630
OK We'll move on then.

00:18:05.630 --> 00:18:11.830
X the unknown, asks "Can you clarify the main
differences in use case between account manager

00:18:11.830 --> 00:18:13.460
and Google play services?"

00:18:13.460 --> 00:18:18.450
&gt;&gt;Trevor: OK, Tim or Chirag, I think one of
you probably be the best people to ask this.

00:18:18.450 --> 00:18:19.450
&gt;&gt;Joe: Yeah, absolutely.

00:18:19.450 --> 00:18:20.620
&gt;&gt;Trevor: Do either wanna take this?

00:18:20.620 --> 00:18:23.250
&gt;&gt;Tim: Can I speak to that?

00:18:23.250 --> 00:18:26.280
This is Tim, can you hear me?

00:18:26.280 --> 00:18:27.559
&gt;&gt;Joe: Yeah.

00:18:27.559 --> 00:18:31.490
&gt;&gt;Tim: OK so account manager is older, it's
been around for a while.

00:18:31.490 --> 00:18:34.559
And it is, as the name suggests, an account
manager and it manages all sorts of accounts.

00:18:34.559 --> 00:18:40.200
If I pull up the accounts in my preferences
on my own phone, I see accounts from Dropbox,

00:18:40.200 --> 00:18:43.929
Google, Twoogle, Twitter and so on.

00:18:43.929 --> 00:18:48.500
So it's sort of a general purpose for apps
to stash accounts and for people to use them.

00:18:48.500 --> 00:18:56.100
It turns out that account manager has always
had the ability of generating tokens of various

00:18:56.100 --> 00:19:01.900
sorts but it was never really very fully worked
out and never really became popular.

00:19:01.900 --> 00:19:02.900
&gt;&gt;Joe: Right.

00:19:02.900 --> 00:19:09.779
&gt;&gt;Tim: And Google play services has a new
class called Google auth util, I was talking

00:19:09.779 --> 00:19:14.190
about, it's specifically aimed at doing some
extra OAuth magic, specifically with Google

00:19:14.190 --> 00:19:17.030
accounts because that's what it's called Google
accounts services.

00:19:17.030 --> 00:19:22.690
So if you want to look up the accounts that
are on the phone, ask the apps user for access

00:19:22.690 --> 00:19:26.160
to them that kind of stuff, account manager
is still what you wanna use.

00:19:26.160 --> 00:19:31.529
If you wanna do special magic with OAuth 2
and Google accounts, the new stuff in Google

00:19:31.529 --> 00:19:34.210
play services is what you need.

00:19:34.210 --> 00:19:35.230
&gt;&gt;Joe: OK.

00:19:35.230 --> 00:19:37.880
Chirag, any additions to that?

00:19:37.880 --> 00:19:43.500
&gt;&gt;Chirag: And with the plus sign in button,
it wraps around the complexities of taking

00:19:43.500 --> 00:19:46.940
in account on the phone and granting access
from the user.

00:19:46.940 --> 00:19:52.870
So if you have three or four accounts on the
phone, Google plus sign in button will first

00:19:52.870 --> 00:19:56.880
prompt the user to select an account and then
ask them for authorization.

00:19:56.880 --> 00:19:57.880
&gt;&gt;Joe: Right.

00:19:57.880 --> 00:19:59.420
Uses the Google accounts though?

00:19:59.420 --> 00:20:01.730
&gt;&gt;Chirag: Yes, this would be Google accounts.

00:20:01.730 --> 00:20:02.730
&gt;&gt;Joe: OK

00:20:02.730 --> 00:20:05.299
&gt;&gt;Chirag: And it would take care of the magic
for you.

00:20:05.299 --> 00:20:06.299
&gt;&gt;Joe: OK, great.

00:20:06.299 --> 00:20:10.140
We'll move to the next question from Daniel
"I have a strange problem here that puzzles

00:20:10.140 --> 00:20:11.140
me.

00:20:11.140 --> 00:20:16.720
After rotating the device, an edit text dot
get texting on pause returns text that was

00:20:16.720 --> 00:20:18.769
never assigned to it.

00:20:18.769 --> 00:20:21.540
When pausing from back key, it doesn't happen.

00:20:21.540 --> 00:20:23.720
I have no idea what's going on here."

00:20:23.720 --> 00:20:30.470
&gt;&gt;Trevor: Alright, Alex have you had a chance
to take a look into this at all?

00:20:30.470 --> 00:20:38.350
&gt;&gt;Alex: I looked at the stack overflow error
but I wasn't able to see what was going on.

00:20:38.350 --> 00:20:42.070
In the example that he uses-
&gt;&gt;Trevor: By the way Alex, you might want

00:20:42.070 --> 00:20:43.070
to stand up and hop on camera.

00:20:43.070 --> 00:20:44.310
&gt;&gt;Alex: Right, actually be on camera.

00:20:44.310 --> 00:20:45.310
&gt;&gt;Joe: Oh what the heck.

00:20:45.310 --> 00:20:48.700
&gt;&gt;Alex: I prefer being a you know, disembodied
voice, but OK

00:20:48.700 --> 00:20:49.899
&gt;&gt;Joe: And..

00:20:49.899 --> 00:20:51.720
&gt;&gt;Alex: Stand on the X?

00:20:51.720 --> 00:20:52.720
OK So-

00:20:52.720 --> 00:20:54.529
&gt;&gt;Trevor: There he is.

00:20:54.529 --> 00:20:55.529
&gt;&gt;Alex: Hello.

00:20:55.529 --> 00:20:56.539
&gt;&gt;Trevor: How'd that happen?

00:20:56.539 --> 00:20:57.539
&gt;&gt;Joe: Magic of TV.

00:20:57.539 --> 00:21:03.130
&gt;&gt;Alex: Within this specific example what's
happening is the text box has a default value

00:21:03.130 --> 00:21:06.269
of hello world and they type z-z-z into the
box.

00:21:06.269 --> 00:21:11.840
So it's hello the world z-z-z, rotate the
device, call get text on that edit box and

00:21:11.840 --> 00:21:16.809
what they see is just the z-z-z so just the
part that was concatenated to the default

00:21:16.809 --> 00:21:18.049
value.

00:21:18.049 --> 00:21:24.140
I'm absolutely puzzled by what would be causing
the behavior, actually.

00:21:24.140 --> 00:21:27.740
&gt;&gt;Trevor: OK, we'll look into it a bit more
and see if we can get an answer and update

00:21:27.740 --> 00:21:29.000
the stack overflow for you.

00:21:29.000 --> 00:21:35.210
So just keep an eye on there, we'll also provide
an update through next week's broadcast to

00:21:35.210 --> 00:21:39.899
let everyone watching, who is not following
the stack overflow, know what the resolution

00:21:39.899 --> 00:21:40.899
was.

00:21:40.899 --> 00:21:43.039
Alright, let's move on.

00:21:43.039 --> 00:21:44.919
&gt;&gt;Joe: Great, thanks.

00:21:44.919 --> 00:21:45.919
From A.S.

00:21:45.919 --> 00:21:52.120
Hughes in San Luis Obispo, "My app's sqlite
db has more than 1 megabyte of data, it's

00:21:52.120 --> 00:21:56.860
a protobuf, and the single row's blob column
and cursor crashes when trying to retrieve

00:21:56.860 --> 00:21:58.120
it.

00:21:58.120 --> 00:22:03.001
Now that cursor has a 1 megabyte limit but
my app has been in use for a while, how do

00:22:03.001 --> 00:22:05.320
I retrieve the user's data?"

00:22:05.320 --> 00:22:07.200
&gt;&gt;Trevor: Oh boy.

00:22:07.200 --> 00:22:12.840
[laughs] That's gonna be a bit of a problem.

00:22:12.840 --> 00:22:19.399
So, general guidance for working with databases
of what using the blob storage types they

00:22:19.399 --> 00:22:24.840
tend- it's not just an Android thing, over
and over again I've seen developers on all

00:22:24.840 --> 00:22:28.390
platforms shoot themselves in the foot by
trying to store really large things in the

00:22:28.390 --> 00:22:31.830
databases that's not really designed to do
so.

00:22:31.830 --> 00:22:35.669
A better option in pretty much every single
instance in every single instance where you're

00:22:35.669 --> 00:22:40.330
tempted to use a blob is just to write the
blob to a regular file somewhere on disk and

00:22:40.330 --> 00:22:42.490
store- store the file name, store a [unintelligible]
file in the database-

00:22:42.490 --> 00:22:43.490
&gt;&gt;Joe: Right.

00:22:43.490 --> 00:22:47.159
&gt;&gt;Trevor: -and then just go and load it as
a standard file.

00:22:47.159 --> 00:22:51.850
Now getting back to the original question
is how do you recover from this once you've-

00:22:51.850 --> 00:22:57.539
it's grown beyond one megabyte?

00:22:57.539 --> 00:23:04.230
Unfortunately all of the sqlite methods in
Android, that at least I'm aware of will return

00:23:04.230 --> 00:23:05.790
a cursor.

00:23:05.790 --> 00:23:10.710
And I'm also not familiar with any ways to
go and just request a range within that blob.

00:23:10.710 --> 00:23:17.610
So I think if you really want to go and solve
this problem, you're going to have to go and

00:23:17.610 --> 00:23:23.000
grab the source code sqlite, compile it into
your application and then access it directly

00:23:23.000 --> 00:23:24.000
without using cursors.

00:23:24.000 --> 00:23:27.940
Keep in mind that you do have to watch out
for the devices own memory limit.

00:23:27.940 --> 00:23:32.559
You're going to be loading this blob into
memory essentially and you don’t want to

00:23:32.559 --> 00:23:35.300
go to streaming out to disk as quickly as
possible to go and avoid running out of memory.

00:23:35.300 --> 00:23:36.770
It's going to be ugly.

00:23:36.770 --> 00:23:43.149
I'm sorry that I don’t have a better answer
for you, I really wish I did.

00:23:43.149 --> 00:23:48.870
But I think that's pretty much- or the other
option, too, is there's the nuclear approach

00:23:48.870 --> 00:23:52.909
you can tell users that they're gonna have
to wipe their data.

00:23:52.909 --> 00:23:56.919
In some limited cases it actually is OK, very
limited.

00:23:56.919 --> 00:24:00.860
Most apps I think that actually is a pretty
cruddy user experience.

00:24:00.860 --> 00:24:04.970
Especially most apps that would have one megabyte
files attached to them.

00:24:04.970 --> 00:24:11.380
So I think pretty much what you're gonna have
to do is compile a custom copy of sqlite into

00:24:11.380 --> 00:24:12.380
your app.

00:24:12.380 --> 00:24:13.440
Alex, do you want to say something?

00:24:13.440 --> 00:24:19.649
&gt;&gt;Alex: I have in the past written some very
bad code when I was learning how to use cursors

00:24:19.649 --> 00:24:24.632
and it was apparent that sqlite isn't amazing
at type safety which means if there- even

00:24:24.632 --> 00:24:30.429
if there is no way to check, to pull ranges
of blob data you might be able to treat it

00:24:30.429 --> 00:24:33.539
as a string and then pull a sub string.

00:24:33.539 --> 00:24:38.870
This would only be really useful if it was
between one and two megabytes.

00:24:38.870 --> 00:24:42.960
I would say try to pull the first half of
the blob as a substring and then try to pull

00:24:42.960 --> 00:24:43.960
the second half-

00:24:43.960 --> 00:24:44.960
&gt;&gt;Trevor: But then you'd still have a string
that's larger than megabyte

00:24:44.960 --> 00:24:45.960
&gt;&gt;Alex: as a substring.

00:24:45.960 --> 00:24:47.780
Would you?

00:24:47.780 --> 00:24:54.340
If the cursor- if the sql query itself only
returned like the first half of the blob-

00:24:54.340 --> 00:24:55.380
&gt;&gt;Trevor: There you go.

00:24:55.380 --> 00:24:56.380
&gt;&gt;Alex: Right?

00:24:56.380 --> 00:24:57.460
I don't know if this would work.

00:24:57.460 --> 00:25:02.549
This is sort of a last ditch thing that I
would try before giving up completely.

00:25:02.549 --> 00:25:09.490
Also I would say Trevor's probably right,
you might have to take the nuclear approach

00:25:09.490 --> 00:25:14.800
but I would recommend also being sure to build
in an option or build in a migration of path

00:25:14.800 --> 00:25:21.220
for users who haven’t hit a one megabyte
row yet so that their stuff can be migrated

00:25:21.220 --> 00:25:24.010
safely and they don't have to have anything
disappear unnecessarily.

00:25:24.010 --> 00:25:26.529
&gt;&gt;Joe: That's a good point.

00:25:26.529 --> 00:25:27.529
Thanks.

00:25:27.529 --> 00:25:31.620
&gt;&gt;Trevor: Another thing you might be able
to do to rather than building in a full copy

00:25:31.620 --> 00:25:36.930
of sqlite since you know specifically what
you're trying to get at, you might be able

00:25:36.930 --> 00:25:43.090
to go and just look up the docs on the sqlite
website as to how their file format is structured.

00:25:43.090 --> 00:25:47.030
It is a database and it's gonna be a bit complicated
but you might actually just be able to go

00:25:47.030 --> 00:25:51.480
and read the data doc manually without going
to all the trouble of porting sqlite.

00:25:51.480 --> 00:25:53.350
That might be easier and that's probably what
I'd try first

00:25:53.350 --> 00:25:55.080
&gt;&gt;Alex: Yeah.

00:25:55.080 --> 00:25:59.409
&gt;&gt;Joe: OK, thank you, gentlemen.

00:25:59.409 --> 00:26:00.409
Anything else?

00:26:00.409 --> 00:26:01.409
No?

00:26:01.409 --> 00:26:04.190
Alright, next question is from Jehudi in Colombia.

00:26:04.190 --> 00:26:08.779
"Is it possible to set a proxy to all the
system from my app?

00:26:08.779 --> 00:26:13.710
If can be done without root even better, on
Chrome you have a very nice API for this"

00:26:13.710 --> 00:26:16.889
and then he quotes the API link.

00:26:16.889 --> 00:26:22.899
&gt;&gt;Trevor: This question comes up periodically
and as far as I can remember the answer is

00:26:22.899 --> 00:26:23.899
actually no.

00:26:23.899 --> 00:26:28.580
As a application developer there is no way
to go and set a proxy.

00:26:28.580 --> 00:26:32.820
I believe it can be set- can it be set via
DHCP?

00:26:32.820 --> 00:26:38.000
Yeah, in any case as an app developer that's
not available to you regardless.

00:26:38.000 --> 00:26:46.480
Now what you can do is create a VPN provider
and implement your proxy as a VPN service.

00:26:46.480 --> 00:26:49.730
Implementing a VPN provider requires a bunch
of special permissions and the user will get

00:26:49.730 --> 00:26:55.500
a very scary warning which basically says
your app's going to have access to all data

00:26:55.500 --> 00:27:01.899
and press no unless you're absolutely, positively
sure this app's trusted.

00:27:01.899 --> 00:27:04.970
So writing a VPN provider isn't something
to take lightly.

00:27:04.970 --> 00:27:08.820
But if this is something you absolutely need
to do, that's probably the best way to go

00:27:08.820 --> 00:27:12.530
and intercept network traffic and to note
off to a proxy.

00:27:12.530 --> 00:27:17.029
Keep in mind also that Android devices are
pretty mobile and if you're trying to do this

00:27:17.029 --> 00:27:20.130
to make something work in a corporate environment
you have to consider what happens when the

00:27:20.130 --> 00:27:25.010
user's phone switches over to a different
Wi-Fi network or it switches over to 3G.

00:27:25.010 --> 00:27:27.909
What happens if it switches network while
they're in the building?

00:27:27.909 --> 00:27:32.440
Maybe they just have a weak connection; the
phone decides that it likes the mobile network

00:27:32.440 --> 00:27:34.490
better than your Wi-Fi, right?

00:27:34.490 --> 00:27:40.330
Relying on proxies on mobile devices tends
to not work so well.

00:27:40.330 --> 00:27:41.330
&gt;&gt;Joe: OK

00:27:41.330 --> 00:27:47.590
&gt;&gt;Trevor: Just keep that in mind with whatever
you wind up doing.

00:27:47.590 --> 00:27:51.380
&gt;&gt;Joe: Alright, next question.

00:27:51.380 --> 00:27:54.230
This is from Hidden Android in Croatia.

00:27:54.230 --> 00:27:59.259
"Should (and I think actually he means can)
devices with back-lit hardware keys turn the

00:27:59.259 --> 00:28:01.570
lights off using an API call?

00:28:01.570 --> 00:28:06.929
I have an HTC One X and the lights are controlled
only through a sensor.

00:28:06.929 --> 00:28:11.890
This is making astronomy apps where dark adaptation
is needed impossible."

00:28:11.890 --> 00:28:19.360
&gt;&gt;Trevor: So there is an API called the go
and hide the bottom row of buttons on your

00:28:19.360 --> 00:28:20.360
device ability.

00:28:20.360 --> 00:28:23.259
Is that called the system bar, right?

00:28:23.259 --> 00:28:24.259
&gt;&gt;Alex: Yeah.

00:28:24.259 --> 00:28:30.049
&gt;&gt;Trevor: So you can go and- you know we like
to call it light sack mode but you can either

00:28:30.049 --> 00:28:34.070
make those buttons dim down to small little
dots.

00:28:34.070 --> 00:28:39.840
So say you're doing something full screen
like a game and you don't want to go and bother

00:28:39.840 --> 00:28:43.700
the user or any book reader, is actually probably
even a better use case.

00:28:43.700 --> 00:28:47.899
And then also another mode that you can take
it even further that will and hide everything

00:28:47.899 --> 00:28:48.899
completely.

00:28:48.899 --> 00:28:51.309
So YouTube is the good example of where that's
done.

00:28:51.309 --> 00:28:55.380
The catch being is when you completely hide
the system bar, any user interaction with

00:28:55.380 --> 00:28:56.590
the screen will bring it back.

00:28:56.590 --> 00:29:01.110
Cause the user does need to have a way to
get back to the home button, it's very important.

00:29:01.110 --> 00:29:05.720
Now I’m not sure what the implementation
is on the HTC One X and I believe that's actually

00:29:05.720 --> 00:29:09.710
something that's left up to HTC how they want
to implement.

00:29:09.710 --> 00:29:13.420
But if there is a way to turn off those lights,
that would be the way to do it.

00:29:13.420 --> 00:29:17.880
So in any case you shouldn’t be designing
just for that one particular phone.

00:29:17.880 --> 00:29:21.850
So if having these extra controls on screen
is an issue, you might want to go and dim

00:29:21.850 --> 00:29:22.929
the system bar regardless.

00:29:22.929 --> 00:29:26.220
&gt;&gt;Alex: I actually interpreted the question
as there being a hardware keyboard.

00:29:26.220 --> 00:29:27.220
&gt;&gt;Joe: Yeah.

00:29:27.220 --> 00:29:29.299
&gt;&gt;Trevor: Oh so not just the home button.

00:29:29.299 --> 00:29:32.870
&gt;&gt;Alex: But backlit like a G One or something
with backlit keys.

00:29:32.870 --> 00:29:36.039
&gt;&gt;Trevor: OK, I don't think there's a separate
API call for that.

00:29:36.039 --> 00:29:39.100
If there is a way it would probably be the
same one as the system bar.

00:29:39.100 --> 00:29:40.100
&gt;&gt;Alex: Right.

00:29:40.100 --> 00:29:45.399
&gt;&gt;Trevor: Yeah, I don’t think there's any
way- anything that actually controls keyboard

00:29:45.399 --> 00:29:46.919
lighting.

00:29:46.919 --> 00:29:51.679
&gt;&gt;Joe: OK, next question.

00:29:51.679 --> 00:29:55.390
This is from Anuj who's in Mumbai in India
obviously.

00:29:55.390 --> 00:30:00.289
"How many more years will it take to sell
apps on Google Play from India?

00:30:00.289 --> 00:30:03.990
Can you give some answer other 'we are working
on it'?

00:30:03.990 --> 00:30:06.669
It's been years, we getting the same reply.

00:30:06.669 --> 00:30:11.180
Does Google want Indian developers to develop
free apps only forever?"

00:30:11.180 --> 00:30:18.759
&gt;&gt;Trevor: OK, so in general we wanna go and
offer the ability to go buy and sell paid

00:30:18.759 --> 00:30:19.759
apps, globally.

00:30:19.759 --> 00:30:24.389
Of course, it's important to developers and
it's important for users to have a wide range

00:30:24.389 --> 00:30:26.760
of applications available to them.

00:30:26.760 --> 00:30:33.840
That said, the world's a very large, very
complicated place and trying- and then whenever

00:30:33.840 --> 00:30:36.500
you have money involved, things get even more
complicated.

00:30:36.500 --> 00:30:41.610
We're trying to go and offer these services
to everyone as quickly as we can.

00:30:41.610 --> 00:30:43.880
Some places are taking us longer than others.

00:30:43.880 --> 00:30:47.870
Unfortunately, I can't speak to the road map
as to when anything will happen.

00:30:47.870 --> 00:30:51.049
It's the same as anything else having to do
with the Android road map; we just can't talk

00:30:51.049 --> 00:30:53.289
about it on the air here.

00:30:53.289 --> 00:31:01.340
So all I can say is be patient, we're trying
to get to everywhere as quickly as we can.

00:31:01.340 --> 00:31:09.700
And hopefully we'll get to India soon, but
again I actually honestly don't know the answer,

00:31:09.700 --> 00:31:14.279
but if I did I couldn't actually tell you
any specifics.

00:31:14.279 --> 00:31:20.610
&gt;&gt;Joe: OK thanks, and I think the answer pretty
much is Google does not want Indian developers

00:31:20.610 --> 00:31:23.780
to develop free apps only forever.

00:31:23.780 --> 00:31:27.820
So we are surely working on it for every country.

00:31:27.820 --> 00:31:29.440
&gt;&gt;Trevor: Right.

00:31:29.440 --> 00:31:32.570
&gt;&gt;Joe: Next question is from Akhil in Ashburn,
Virginia.

00:31:32.570 --> 00:31:36.730
"Is there a support library for the calendar
contract content provider?

00:31:36.730 --> 00:31:41.299
I see that is supported from SDK 14 and upwards."

00:31:41.299 --> 00:31:47.779
&gt;&gt;Trevor: No. [chuckles] So that's not something
I believe we can actually offer via the support

00:31:47.779 --> 00:31:53.370
library because it would require elevated
permissions, it needs be able to read from

00:31:53.370 --> 00:31:54.980
the calendar data based on the phone.

00:31:54.980 --> 00:31:58.909
So the only service that can provide that
is the calendar application itself.

00:31:58.909 --> 00:32:05.240
So short of having a new version of the calendar
that you've downloaded from Google play, which

00:32:05.240 --> 00:32:09.960
doesn't really make much sense in that case
since it's one of the system apps which we

00:32:09.960 --> 00:32:12.560
always update via OTA.

00:32:12.560 --> 00:32:16.029
Yeah, there is really not any way to go and
load that new code on there.

00:32:16.029 --> 00:32:21.120
So short answer the only way that can be done
is via OTA.

00:32:21.120 --> 00:32:25.450
&gt;&gt;Joe: Alright, thank you.

00:32:25.450 --> 00:32:33.670
Another question about the market or Google
play services or I'm sorry, Google play store.

00:32:33.670 --> 00:32:38.600
From Danny in the Netherlands "How long should
it take before an app is back on the market

00:32:38.600 --> 00:32:42.720
after the complaining party of a trademark
infringement has mailed Google the app can

00:32:42.720 --> 00:32:43.720
go back?

00:32:43.720 --> 00:32:46.279
It's been waiting for 16 days and counting."

00:32:46.279 --> 00:32:49.240
&gt;&gt;Trevor: 16 days is definitely-

00:32:49.240 --> 00:32:52.190
&gt;&gt;Dan: Before we go on,Joe, can you adjust
your mic to make sure it's not rubbing against

00:32:52.190 --> 00:32:53.190
your collar too much?

00:32:53.190 --> 00:32:54.740
I'm getting a little feedback from you.

00:32:54.740 --> 00:32:55.740
&gt;&gt;Joe: OK.

00:32:55.740 --> 00:33:00.679
&gt;&gt;Trevor: 16 days is definitely on the long
side, that's said I'm not sure what the specifics

00:33:00.679 --> 00:33:03.600
are in your particular case.

00:33:03.600 --> 00:33:08.490
What I'd recommend in this case is send us
an email via Google Plus or you know directly

00:33:08.490 --> 00:33:09.490
to our account.

00:33:09.490 --> 00:33:13.070
Feel free to send it to me or Android developers.

00:33:13.070 --> 00:33:18.380
I'm Trevor Johns, Android developers is Android
developers, of course.

00:33:18.380 --> 00:33:23.080
Make sure you let us know the name of your
application and then the ticket number you

00:33:23.080 --> 00:33:27.960
have when you contacted support and we can
find out why this has taken so long.

00:33:27.960 --> 00:33:33.470
Again, 16 days, that's much longer than I'd
expect it to take but I'm not sure why.

00:33:33.470 --> 00:33:38.309
It's possible that there's some missing information
or it possibly got routed to the wrong address.

00:33:38.309 --> 00:33:42.900
In fact even sure if it was submitted via
email or via postal mail, so there's a lot

00:33:42.900 --> 00:33:45.160
of information that we're not sure just based
on your question.

00:33:45.160 --> 00:33:48.529
Send us more details; we'll get to the bottom
of it for you.

00:33:48.529 --> 00:33:51.870
&gt;&gt;Joe: OK, thanks.

00:33:51.870 --> 00:33:53.840
Question from Shane in Wisconsin.

00:33:53.840 --> 00:33:58.331
"Is there anywhere to get more information
regarding an update to the Android SDK for

00:33:58.331 --> 00:34:02.860
Google Maps or just someone to contact about
the possibility of it?"

00:34:02.860 --> 00:34:08.360
&gt;&gt;Trevor: So, we're aware that developers
want this; I don't think you need to contact

00:34:08.360 --> 00:34:09.540
us to tell us.

00:34:09.540 --> 00:34:13.550
We know developers want more features in the
maps SDK.

00:34:13.550 --> 00:34:18.250
That said, just like the previous question
on India, we can't talk about the road map

00:34:18.250 --> 00:34:19.250
on air.

00:34:19.250 --> 00:34:24.690
So we can't actually tell you what, if anything
is happening with this.

00:34:24.690 --> 00:34:29.420
But again, we are very much aware that developers
want an updated maps SDK.

00:34:29.420 --> 00:34:34.550
&gt;&gt;Alex: I would also add places to watch for
updates Android Developers Plus page and the

00:34:34.550 --> 00:34:35.550
Android Developer blog.

00:34:35.550 --> 00:34:36.550
&gt;&gt;Trevor: YES.

00:34:36.550 --> 00:34:37.550
&gt;&gt;Joe: Right.

00:34:37.550 --> 00:34:43.990
&gt;&gt;Alex: Are the first two places that we will
post when, if and when, updates to the Maps

00:34:43.990 --> 00:34:44.990
SDK go live.

00:34:44.990 --> 00:34:46.280
&gt;&gt;Trevor: And Reto's show, too.

00:34:46.280 --> 00:34:47.420
&gt;&gt;Alex: And Reto's show.

00:34:47.420 --> 00:34:52.830
&gt;&gt;Trevor: So yeah, I believe it's every Monday
Reto Meier does a quick, it's 5 minutes, I

00:34:52.830 --> 00:34:53.830
think?

00:34:53.830 --> 00:34:59.050
A quick few minute update on what's new in
the Android world.

00:34:59.050 --> 00:35:03.890
So if you prefer video content, you are watching
a video show right now, of course, that's

00:35:03.890 --> 00:35:05.310
certainly and good place to go.

00:35:05.310 --> 00:35:12.280
Three locations: Google Plus, Google Developer
blog and This Week in Android on YouTube.

00:35:12.280 --> 00:35:14.160
So that'd be on the Android developers channel.

00:35:14.160 --> 00:35:23.380
&gt;&gt;Joe: OK, so that covers all the questions
we had this week in moderator and I'm assuming

00:35:23.380 --> 00:35:27.820
since Daniel hasn't been urgently waving his
hands in the corner that we don't have anybody

00:35:27.820 --> 00:35:30.570
in the Hangout asking questions.

00:35:30.570 --> 00:35:36.040
&gt;&gt;Trevor: Yeah, I think if there's no more
questions.

00:35:36.040 --> 00:35:38.690
&gt;&gt;Joe: Alright, we will bore you no longer.

00:35:38.690 --> 00:35:39.850
&gt;&gt;Trevor: Alright.

00:35:39.850 --> 00:35:47.070
&gt;&gt;Joe: Please send your questions in and contact
us and having said all of that, thank you,

00:35:47.070 --> 00:35:50.860
Chirag, and thank you, Tim, who's probably
not online anymore.

00:35:50.860 --> 00:35:53.150
Thank you Alex and Trevor and Daniel and-

00:35:53.150 --> 00:35:55.380
&gt;&gt;Trevor: Actually one more thing before you
sign off.

00:35:55.380 --> 00:35:56.760
&gt;&gt;Joe: He's always like that.

00:35:56.760 --> 00:35:59.600
&gt;&gt;Trevor: I always have a last word to fit
in there.

00:35:59.600 --> 00:36:03.750
I don't know if you guys watching saw the
post we made yesterday or not, but we're trying

00:36:03.750 --> 00:36:05.740
something new with this show.

00:36:05.740 --> 00:36:12.350
We're trying to get people to go to send us
video questions in advance that way if you're

00:36:12.350 --> 00:36:17.680
not in our time zone to join us live, you
can actually go and record a actual video

00:36:17.680 --> 00:36:19.410
segment we can play on the air.

00:36:19.410 --> 00:36:20.830
So everyone can participate.

00:36:20.830 --> 00:36:24.740
But also will give us more time to formulate
answers for the more tougher questions you

00:36:24.740 --> 00:36:26.690
guys send into us.

00:36:26.690 --> 00:36:31.630
We still have the Moderate queue available,
we still are taking live questions, but we're

00:36:31.630 --> 00:36:36.020
really encouraging people try sending us video
questions.

00:36:36.020 --> 00:36:40.060
Please make sure you do it at least 24 hours
before the show so that way we have a chance

00:36:40.060 --> 00:36:43.560
to go and get you nice well prepared answers.

00:36:43.560 --> 00:36:48.210
The format for sending us video questions,
just go to Google Plus and click on the share

00:36:48.210 --> 00:36:51.500
button and there's an attach video link down
there in the corner.

00:36:51.500 --> 00:36:54.160
And there's an option to just record video
from your webcam.

00:36:54.160 --> 00:37:00.930
So, record a video, ask your question, address
it to the Android Developers account and we'll

00:37:00.930 --> 00:37:04.940
go ahead and look through those and play them
on the air just like any other questions.

00:37:04.940 --> 00:37:10.480
So give it a try, it is a new thing, we're
not sure how well it will work so we're definitely

00:37:10.480 --> 00:37:12.650
interested in your feedback.

00:37:12.650 --> 00:37:14.410
Hopefully it works out well and you guys like
it.

00:37:14.410 --> 00:37:17.930
So with that said, I think now we can sign
off.

00:37:17.930 --> 00:37:19.390
&gt;&gt;Joe: OK, we can sign off.

00:37:19.390 --> 00:37:21.260
&gt;&gt;Trevor: Thanks, everyone see you next week.

00:37:21.260 --> 00:37:21.920
&gt;&gt;Joe: See you soon.

