WEBVTT
Kind: captions
Language: en

00:00:00.310 --> 00:00:03.090
Since having multiple tapes makes
programming with Turing machines more

00:00:03.090 --> 00:00:06.810
convenient, and since it provides a nice
intermediate step for getting into more

00:00:06.810 --> 00:00:11.190
complicated models, we'll look at this
Turing machine variant in some detail.

00:00:11.190 --> 00:00:14.540
As shown in the figure here,
each tape has its own head.

00:00:14.540 --> 00:00:17.990
And what the Turing machine does
at each step is determined solely

00:00:17.990 --> 00:00:19.350
by its current state.

00:00:19.350 --> 00:00:21.370
And the symbols under these heads.

00:00:22.460 --> 00:00:26.330
At each step, it can change
the symbol under the heads, and

00:00:26.330 --> 00:00:30.100
move each head to the right or
the left, or just keep it where it is.

00:00:30.100 --> 00:00:32.759
With the one tape machine,
we always force the head to move.

00:00:32.759 --> 00:00:34.260
But if we required that condition for

00:00:34.260 --> 00:00:38.470
multitape machines, the differences in
head positions would always be even,

00:00:38.470 --> 00:00:40.470
which leads to awkwardness
in programming.

00:00:40.470 --> 00:00:42.930
So it's better to allow
the heads to stay put.

00:00:42.930 --> 00:00:46.460
Except for those differences, multitape
Turing machines are the same as single

00:00:46.460 --> 00:00:50.340
tape ones, we only need to
redefine the transition function.

00:00:50.340 --> 00:00:55.120
For a machine with k tapes,
the new transition function is from

00:00:55.120 --> 00:00:59.480
the Cartesian product of the possible
states of the machine, and the possible

00:00:59.480 --> 00:01:06.160
symbols under the tape heads to the new
states of the machine times the symbols

00:01:06.160 --> 00:01:11.120
to write under the heads times the
possible directions to move the heads.

00:01:11.120 --> 00:01:12.320
Everything else stays the same.

