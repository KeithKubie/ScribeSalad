WEBVTT
Kind: captions
Language: en

00:00:03.869 --> 00:00:05.910
TODD KERPELMAN: Hello,
and welcome to "Route 85,"

00:00:05.910 --> 00:00:07.860
our new show for
you iOS developers.

00:00:07.860 --> 00:00:08.610
Thanks for coming.

00:00:08.610 --> 00:00:09.960
Glad you could join us.

00:00:09.960 --> 00:00:12.020
So for this episode, I
wanted to present you

00:00:12.020 --> 00:00:14.970
with a quick tip that was shared
by Tom Van Lenten on the Google

00:00:14.970 --> 00:00:15.984
Maps team.

00:00:15.984 --> 00:00:18.400
Now I would love to call this
our tip of the week segment,

00:00:18.400 --> 00:00:20.608
but I don't think I can
commit to making these videos

00:00:20.608 --> 00:00:22.520
that often, so it's "Quick Tip."

00:00:22.520 --> 00:00:24.870
And thanks to Tom
for sending it in.

00:00:24.870 --> 00:00:27.690
So for this example, let's say
that I'm building a card game

00:00:27.690 --> 00:00:29.780
app that uses standard
playing cards.

00:00:29.780 --> 00:00:32.159
And within my
PlayingCard.h file I

00:00:32.159 --> 00:00:34.100
decide to create an
enum for the suit.

00:00:34.100 --> 00:00:35.170
So here we go.

00:00:35.170 --> 00:00:37.050
Looks pretty normal
so far, right?

00:00:37.050 --> 00:00:40.164
And down below, we'll
store this as a property.

00:00:40.164 --> 00:00:41.830
Now let's say I wanted
to write a method

00:00:41.830 --> 00:00:43.770
to do something
based on this suit.

00:00:43.770 --> 00:00:46.570
Maybe different suits give me
different point multipliers

00:00:46.570 --> 00:00:48.782
in our card game when we
get to the scoring section.

00:00:48.782 --> 00:00:50.240
And so we'll need
to write a method

00:00:50.240 --> 00:00:53.100
to convert these suits
into point multipliers.

00:00:53.100 --> 00:00:55.010
Well, this seems like
a pretty obvious case

00:00:55.010 --> 00:00:56.660
for a switch statement.

00:00:56.660 --> 00:00:58.810
So we'll start to
type it in here.

00:00:58.810 --> 00:01:00.940
We'll add in the
case for spades,

00:01:00.940 --> 00:01:04.402
for hearts, diamonds, and clubs.

00:01:04.402 --> 00:01:06.610
And then we get to this
default statement at the end.

00:01:06.610 --> 00:01:08.812
And huh, well, what
should we do here?

00:01:08.812 --> 00:01:10.770
I mean, gosh, I can't
think of a time we'd ever

00:01:10.770 --> 00:01:11.570
get to this, right?

00:01:11.570 --> 00:01:13.612
Like, we've got all of
our suits covered above,

00:01:13.612 --> 00:01:15.320
so it seems like if
we get to this point,

00:01:15.320 --> 00:01:16.940
something bad is going on.

00:01:16.940 --> 00:01:19.400
But still, we should
code defensively, right?

00:01:19.400 --> 00:01:21.570
So maybe we'll throw
an exception here.

00:01:21.570 --> 00:01:24.200
I'm going to add the comment
"this should never happen."

00:01:24.200 --> 00:01:26.530
and then right below,
we'll throw an exception,

00:01:26.530 --> 00:01:29.510
because clearly our
game is in a bad state.

00:01:29.510 --> 00:01:31.300
Well, anybody who's
worked in software

00:01:31.300 --> 00:01:33.690
knows that simply adding the
comment "this should never

00:01:33.690 --> 00:01:35.880
happen" to your code
magically ensures

00:01:35.880 --> 00:01:39.930
that at some point in the future
that exact thing will happen.

00:01:39.930 --> 00:01:41.380
So let's go back
to our card game.

00:01:41.380 --> 00:01:43.230
And our lead designer
suddenly decides

00:01:43.230 --> 00:01:44.850
we need to have
jokers in our game.

00:01:44.850 --> 00:01:46.820
Well, jokers are going
to need their own suit.

00:01:46.820 --> 00:01:49.450
And so maybe the engineer
assigned to this task,

00:01:49.450 --> 00:01:52.110
well, they see that we need
to add a joker to our enum.

00:01:52.110 --> 00:01:54.740
But our code base has grown
and maybe our engineer

00:01:54.740 --> 00:01:57.040
doesn't notice that
the getPointMultiplier

00:01:57.040 --> 00:02:00.970
method, among all of our other
code, also needs that enum,

00:02:00.970 --> 00:02:02.690
so it doesn't get updated.

00:02:02.690 --> 00:02:03.900
Well, what happens?

00:02:03.900 --> 00:02:04.490
That's right.

00:02:04.490 --> 00:02:06.072
We hit the default statement.

00:02:06.072 --> 00:02:07.280
Our code raises an exception.

00:02:07.280 --> 00:02:09.442
And the whole thing crashes.

00:02:09.442 --> 00:02:10.900
Now, if you're
lucky, this will get

00:02:10.900 --> 00:02:13.050
caught in testing
while in development.

00:02:13.050 --> 00:02:14.640
If you're slightly
less lucky, this'll

00:02:14.640 --> 00:02:17.060
get caught by Apple during
the approval process.

00:02:17.060 --> 00:02:18.940
And if you're not
lucky at all, it

00:02:18.940 --> 00:02:20.420
won't get noticed
until it starts

00:02:20.420 --> 00:02:22.510
crashing on all of
your players, probably

00:02:22.510 --> 00:02:25.581
at the time the press decides
to start reviewing your game.

00:02:25.581 --> 00:02:26.080
Huh.

00:02:26.080 --> 00:02:27.170
That's unfortunate.

00:02:27.170 --> 00:02:28.230
So what can you do here?

00:02:28.230 --> 00:02:29.938
Well, the answer might
be to do something

00:02:29.938 --> 00:02:31.970
that seems a little
counter-intuitive at first.

00:02:31.970 --> 00:02:34.150
I'm going to go and
remove this default block

00:02:34.150 --> 00:02:36.340
from the end of our
switch statement.

00:02:36.340 --> 00:02:37.740
I know it seems weird, right?

00:02:37.740 --> 00:02:38.930
Like, I'm all nervous.

00:02:38.930 --> 00:02:41.670
My immediate reaction is I
want to put that thing back.

00:02:41.670 --> 00:02:44.420
But now look what happens
now that I have done this.

00:02:44.420 --> 00:02:46.380
Xcode is warning
me before I even

00:02:46.380 --> 00:02:49.070
run this thing that the switch
statement is now incomplete

00:02:49.070 --> 00:02:50.610
and I might want to fix it.

00:02:50.610 --> 00:02:53.290
It's smart enough to know that I
haven't covered all my options.

00:02:53.290 --> 00:02:55.160
And it'll give me
this nice warning.

00:02:55.160 --> 00:02:58.090
And in fact, in this
case, ha, no pun intended,

00:02:58.090 --> 00:02:59.740
I not only get a
warning, but I also

00:02:59.740 --> 00:03:01.480
get an error because
there are times

00:03:01.480 --> 00:03:03.500
my method no longer
returns a float

00:03:03.500 --> 00:03:05.860
and my app won't even build.

00:03:05.860 --> 00:03:07.980
By the way, even better
if you're using AppCode,

00:03:07.980 --> 00:03:10.700
hitting Alt-Enter will give
you this "create missing switch

00:03:10.700 --> 00:03:13.220
cases statement," which
will automatically spec out

00:03:13.220 --> 00:03:14.750
those missing code
branches for you.

00:03:14.750 --> 00:03:16.240
That's pretty nice, huh?

00:03:16.240 --> 00:03:17.700
Oh, and for you
Swiftees out there,

00:03:17.700 --> 00:03:18.820
Swift is even more harsh.

00:03:18.820 --> 00:03:20.730
It upgrades that
warning to an error.

00:03:20.730 --> 00:03:23.260
And it won't let you
create any switch

00:03:23.260 --> 00:03:25.099
statement that isn't exhaustive.

00:03:25.099 --> 00:03:26.640
Of course, their
recommended solution

00:03:26.640 --> 00:03:28.000
is to add a default clause.

00:03:28.000 --> 00:03:31.060
But as we've seen, that
isn't always the best advice.

00:03:31.060 --> 00:03:33.782
Now obviously you can't
do this in all situations.

00:03:33.782 --> 00:03:36.115
If you're writing a switch
statement based on an integer

00:03:36.115 --> 00:03:38.560
or say a text
character, Xcode won't

00:03:38.560 --> 00:03:41.270
know whether you've covered
all these cases are not.

00:03:41.270 --> 00:03:44.310
And in fact, in these
kinds of situations,

00:03:44.310 --> 00:03:46.200
Xcode will complain
correctly that you

00:03:46.200 --> 00:03:48.210
do need to add a default case.

00:03:48.210 --> 00:03:50.619
But if your switch statement
is based on an enum

00:03:50.619 --> 00:03:52.660
and you don't think that
default case should ever

00:03:52.660 --> 00:03:56.750
happen, drop it and let Xcode
catch those errors for you

00:03:56.750 --> 00:03:58.510
before your players do.

00:03:58.510 --> 00:03:59.730
So there you go.

00:03:59.730 --> 00:04:02.200
Thanks again to Tom on the
Google Maps for iOS team

00:04:02.200 --> 00:04:03.290
for sending me the tip.

00:04:03.290 --> 00:04:04.224
But what about you?

00:04:04.224 --> 00:04:05.640
Do you have an
idea that you think

00:04:05.640 --> 00:04:06.973
would make for good "Quick Tip"?

00:04:06.973 --> 00:04:07.800
Send it in.

00:04:07.800 --> 00:04:09.680
You can email me at
the address here.

00:04:09.680 --> 00:04:12.072
If we use it on the air, I
will send you some schwag.

00:04:12.072 --> 00:04:13.530
I'm not sure what
it's going to be,

00:04:13.530 --> 00:04:16.144
maybe a t-shirt or a
key chain or an iPhone 6

00:04:16.144 --> 00:04:17.209
or-- what's that?

00:04:17.209 --> 00:04:17.720
I'm sorry.

00:04:17.720 --> 00:04:18.220
OK.

00:04:18.220 --> 00:04:18.769
OK.

00:04:18.769 --> 00:04:20.980
I've been told we don't have
the budget for an iPhone 6.

00:04:20.980 --> 00:04:22.646
But we do have the
budget for a t-shirt,

00:04:22.646 --> 00:04:24.140
so maybe it'll be that.

00:04:24.140 --> 00:04:25.970
Anyway, thanks for tuning in.

00:04:25.970 --> 00:04:26.750
You keep coding.

00:04:26.750 --> 00:04:29.750
And I'll see you next
time on "Route 85."

