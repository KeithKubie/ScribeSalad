WEBVTT
Kind: captions
Language: en

00:00:00.500 --> 00:00:02.220
DAN GALPIN: Android
P Developer Preview 2

00:00:02.220 --> 00:00:04.740
is here, providing a
significantly updated

00:00:04.740 --> 00:00:06.720
snapshot of what the
next release of Android

00:00:06.720 --> 00:00:09.390
is ultimately going to
bring to developers.

00:00:09.390 --> 00:00:12.450
Slices allow you to
surface rich templated UI

00:00:12.450 --> 00:00:15.720
from your app in places like
Google Search and Assistant.

00:00:15.720 --> 00:00:18.900
They can be interactive as
well, with support for actions,

00:00:18.900 --> 00:00:21.300
toggles, sliders, and more.

00:00:21.300 --> 00:00:23.430
Slices are part
of Jetpack, which

00:00:23.430 --> 00:00:25.650
means they are backwards
compatible and fully

00:00:25.650 --> 00:00:28.860
updateable, including
new template types.

00:00:28.860 --> 00:00:32.020
App actions are closely
related to slices.

00:00:32.020 --> 00:00:34.960
Slices essentially provide
a UI for embedded app

00:00:34.960 --> 00:00:37.690
functionality, while actions
are a new way for your app

00:00:37.690 --> 00:00:39.910
to provide a list of intends
to expose functionality

00:00:39.910 --> 00:00:43.060
within Google Assistant, with
possibilities such as watching

00:00:43.060 --> 00:00:47.360
a video, reading a book,
hailing a ride, and more.

00:00:47.360 --> 00:00:49.430
Android is adding
notification animations

00:00:49.430 --> 00:00:51.890
to allow for seamless
transitions from notification

00:00:51.890 --> 00:00:52.744
to app.

00:00:52.744 --> 00:00:55.410
You don't have to do anything to
take advantage of this feature.

00:00:55.410 --> 00:00:57.020
But it will be so
much better if you

00:00:57.020 --> 00:00:59.270
make your app start
quickly, particularly when

00:00:59.270 --> 00:01:01.160
cold starting.

00:01:01.160 --> 00:01:04.220
Typing a reply from within
a notification is great,

00:01:04.220 --> 00:01:06.830
but not having to type
at all is even better.

00:01:06.830 --> 00:01:08.330
Smart replies allow
you to present

00:01:08.330 --> 00:01:12.280
quick choices that can be acted
upon right in the notification.

00:01:12.280 --> 00:01:14.260
Text measurement
is expensive, which

00:01:14.260 --> 00:01:15.910
is why the new,
pre-computed text

00:01:15.910 --> 00:01:20.200
API can offload a large chunk
of this work to a worker thread.

00:01:20.200 --> 00:01:23.560
Pre-computed text does
require more memory per glyph.

00:01:23.560 --> 00:01:27.310
But in many cases, this trade
off will be well worth it.

00:01:27.310 --> 00:01:30.250
Android is also adding
a new magnifier widget

00:01:30.250 --> 00:01:32.740
designed for improved
text selection and cursor

00:01:32.740 --> 00:01:34.090
manipulation.

00:01:34.090 --> 00:01:37.060
By default, classes that
extend TextView automatically

00:01:37.060 --> 00:01:38.470
support the magnifier.

00:01:38.470 --> 00:01:40.270
But you can use
the magnifier API

00:01:40.270 --> 00:01:42.970
to attach it to any custom
view, which opens it up

00:01:42.970 --> 00:01:45.250
to a variety of uses.

00:01:45.250 --> 00:01:48.640
There are new API to make
your app more accessible.

00:01:48.640 --> 00:01:51.700
Accessibility pane titles
allow accessibility services

00:01:51.700 --> 00:01:53.950
to determine when specific
sections of the screen

00:01:53.950 --> 00:01:55.780
have updated, which
is particularly

00:01:55.780 --> 00:01:58.330
helpful for supporting
fragment transitions.

00:01:58.330 --> 00:02:00.910
You can specify a title for
a pane, such as the content

00:02:00.910 --> 00:02:03.160
area of a fragment,
with the Android colon

00:02:03.160 --> 00:02:05.170
accessibilityPaneTitle
attribute,

00:02:05.170 --> 00:02:09.039
or change it at runtime with
setAccessibilityPaneTitle.

00:02:09.039 --> 00:02:11.350
Similarly, you can
now identify TextViews

00:02:11.350 --> 00:02:13.420
as being headers,
which allows TalkBack

00:02:13.420 --> 00:02:15.100
to navigate between them.

00:02:15.100 --> 00:02:17.440
Previously, the
attribute for Focusable

00:02:17.440 --> 00:02:19.720
could be used either to
optimize your app, or keyboard

00:02:19.720 --> 00:02:22.600
accessibility, or for
TalkBack accessibility.

00:02:22.600 --> 00:02:25.220
We have now added
isScreenReaderFocusable,

00:02:25.220 --> 00:02:27.700
so you can make sure that
your app navigates optimally

00:02:27.700 --> 00:02:31.150
for both keyboards
and screen readers.

00:02:31.150 --> 00:02:34.150
In display cutouts, we've
made a few minor API changes

00:02:34.150 --> 00:02:35.650
since the first preview.

00:02:35.650 --> 00:02:37.930
Namely, layout in
display cutout mode

00:02:37.930 --> 00:02:41.920
always has become short edges
to reflect that P only supports

00:02:41.920 --> 00:02:44.140
cutouts on the short edges.

00:02:44.140 --> 00:02:46.540
Since the API supports
cutouts on both edges

00:02:46.540 --> 00:02:48.730
simultaneously
now, you get a list

00:02:48.730 --> 00:02:53.200
of all cutout boundingRects
instead of a single bounds.

00:02:53.200 --> 00:02:54.790
We now have a theme
attribute to tell

00:02:54.790 --> 00:02:57.730
Android to lay out your
activity in the cutout area.

00:02:57.730 --> 00:03:00.070
This attribute will also be
available on some Android O

00:03:00.070 --> 00:03:01.600
devices that have cutouts.

00:03:01.600 --> 00:03:03.400
So it's a backwards
compatible way

00:03:03.400 --> 00:03:06.550
to declare that your app
can utilize the cutout area.

00:03:06.550 --> 00:03:08.770
Also, the developer
options now support

00:03:08.770 --> 00:03:11.380
emulation of more cutout
types, such as corner

00:03:11.380 --> 00:03:14.410
and top-bottom duel cutout.

00:03:14.410 --> 00:03:16.580
Android is continuing
to invest to improve

00:03:16.580 --> 00:03:18.890
battery life and system health.

00:03:18.890 --> 00:03:21.230
App standby buckets
puts running apps

00:03:21.230 --> 00:03:23.300
into groups with
different restrictions

00:03:23.300 --> 00:03:25.370
based upon usage patterns.

00:03:25.370 --> 00:03:27.380
Apps will change
buckets over time.

00:03:27.380 --> 00:03:29.246
And apps not in
the active bucket

00:03:29.246 --> 00:03:30.620
will have additional
restrictions

00:03:30.620 --> 00:03:34.190
around jobs, alarms, network,
and high priority Firebase

00:03:34.190 --> 00:03:35.900
Cloud messages.

00:03:35.900 --> 00:03:37.970
As a developer, you
can test how your app

00:03:37.970 --> 00:03:40.370
operates under each of
four defined buckets

00:03:40.370 --> 00:03:42.020
using ADB commands.

00:03:42.020 --> 00:03:44.630
Check out the documentation
on app standby buckets

00:03:44.630 --> 00:03:46.600
for details.

00:03:46.600 --> 00:03:48.970
From our work on
Android Vitals, Android

00:03:48.970 --> 00:03:51.520
can detect battery
draining app behaviors.

00:03:51.520 --> 00:03:53.230
Within battery
settings, Android will

00:03:53.230 --> 00:03:56.470
flag the list of these apps and
let the user apply restrictions

00:03:56.470 --> 00:03:58.930
to the app's
background activities.

00:03:58.930 --> 00:04:02.350
You can manually apply
background restrictions via ADB

00:04:02.350 --> 00:04:04.990
to test how your app
behaves and performs.

00:04:04.990 --> 00:04:07.750
You can use activity manager,
isBackgroundRestricted,

00:04:07.750 --> 00:04:10.210
to determine at runtime if
background restrictions have

00:04:10.210 --> 00:04:12.290
been applied.

00:04:12.290 --> 00:04:15.620
Biometric prompt was added
to Developer Preview 2,

00:04:15.620 --> 00:04:18.436
replacing the fingerprint
dialog from DP 1.

00:04:18.436 --> 00:04:20.060
In addition to
supporting fingerprints,

00:04:20.060 --> 00:04:23.330
including in display sensors,
it supports face and iris

00:04:23.330 --> 00:04:26.210
authentication, providing
a system-wide consistent

00:04:26.210 --> 00:04:27.560
experience.

00:04:27.560 --> 00:04:29.840
There is a single use
biometrics permission

00:04:29.840 --> 00:04:32.930
that covers all device
supported biometrics.

00:04:32.930 --> 00:04:35.390
Fingerprint manager and the
corresponding used fingerprint

00:04:35.390 --> 00:04:37.140
permission are deprecated.

00:04:37.140 --> 00:04:41.280
So please switch to biometric
prompt as soon as possible.

00:04:41.280 --> 00:04:44.120
We've added strongbox as
a new key store backend,

00:04:44.120 --> 00:04:46.280
providing API
support for devices

00:04:46.280 --> 00:04:48.680
that provide key storage and
tamper resistant hardware

00:04:48.680 --> 00:04:51.542
with isolated CPU,
RAM, and flash.

00:04:51.542 --> 00:04:53.000
You can set whether
your key should

00:04:53.000 --> 00:04:55.100
be protected by a
strongbox security chip

00:04:55.100 --> 00:04:58.390
in your keygen parameter spec.

00:04:58.390 --> 00:05:00.940
Autofill has added an API
that allows it to work

00:05:00.940 --> 00:05:02.950
well inside of recycler view.

00:05:02.950 --> 00:05:05.380
getNextAutofillId is
used to manage views

00:05:05.380 --> 00:05:07.000
whose content is recycled.

00:05:07.000 --> 00:05:09.820
It returns an ID that is
unique in the activity, which

00:05:09.820 --> 00:05:12.040
you can associate with
every item in your adapter

00:05:12.040 --> 00:05:13.960
as they are initially viewed.

00:05:13.960 --> 00:05:18.550
You can then call setAutofillId
on each view as it is re-used.

00:05:18.550 --> 00:05:20.740
In the first preview, we
displayed a toast warning

00:05:20.740 --> 00:05:22.810
when an app used a
non SDK interface

00:05:22.810 --> 00:05:24.130
that we plan to restrict.

00:05:24.130 --> 00:05:26.050
But in the second
preview, we are

00:05:26.050 --> 00:05:27.970
enforcing these
restrictions, which

00:05:27.970 --> 00:05:30.160
means it will get
exceptions thrown or nulls

00:05:30.160 --> 00:05:32.230
returned instead of a warning.

00:05:32.230 --> 00:05:35.080
If the non SDK interface
is required for your app

00:05:35.080 --> 00:05:37.660
to function and there
aren't SDK alternatives,

00:05:37.660 --> 00:05:41.080
please file an issue
with us immediately.

00:05:41.080 --> 00:05:43.240
Also, StrictMode now
supports a warning

00:05:43.240 --> 00:05:45.460
when it detects reflective
usage of APIs that

00:05:45.460 --> 00:05:47.800
aren't part of the
public Android SDK,

00:05:47.800 --> 00:05:49.990
even if they still
work in the preview.

00:05:49.990 --> 00:05:54.790
So you can plan for the future
and eliminate non SDK API use.

00:05:54.790 --> 00:05:58.210
The preview includes Vulkan
1.1, a substantial update

00:05:58.210 --> 00:06:00.220
to the industry standard
cross-platform graphics

00:06:00.220 --> 00:06:01.540
and compute API.

00:06:01.540 --> 00:06:03.340
And here are some highlights.

00:06:03.340 --> 00:06:06.820
Multi-view is great for VR,
allowing efficient generation

00:06:06.820 --> 00:06:08.590
of left and right eye views.

00:06:08.590 --> 00:06:11.020
External memory
and YCBCR formats

00:06:11.020 --> 00:06:13.910
enable processing of
video and camera images,

00:06:13.910 --> 00:06:16.380
while a collection of
additional shader capabilities

00:06:16.380 --> 00:06:18.460
improve compatibility,
with shaders

00:06:18.460 --> 00:06:22.500
written in HLSL and Open CLC.

00:06:22.500 --> 00:06:25.150
Thanks to the support of device
manufacturers and the work

00:06:25.150 --> 00:06:26.640
we did in Oreo
with Project Treble

00:06:26.640 --> 00:06:28.620
to enable faster
system upgrades,

00:06:28.620 --> 00:06:30.600
you can test the
preview on more devices

00:06:30.600 --> 00:06:33.420
than ever before, including
devices from manufacturers

00:06:33.420 --> 00:06:39.420
such as Xiaomi, Sony, Essential,
Vivo, Oppo, Nokia, and others.

00:06:39.420 --> 00:06:42.570
Also, Developer Preview 2 is
available through Android beta

00:06:42.570 --> 00:06:45.630
on Pixel and Pixel 2
series devices so consumers

00:06:45.630 --> 00:06:47.130
can try it out as well.

00:06:47.130 --> 00:06:49.290
As always, your
feedback is critical.

00:06:49.290 --> 00:06:51.061
So please let us
know what you think.

00:06:51.061 --> 00:06:53.310
The sooner we hear from you,
the more of your feedback

00:06:53.310 --> 00:06:54.420
we can integrate.

00:06:54.420 --> 00:06:56.240
Look in the video
description for details

00:06:56.240 --> 00:06:59.750
on how to report issues, and
enjoy Developer Preview 2.

00:06:59.750 --> 00:07:02.500
[MUSIC PLAYING]

