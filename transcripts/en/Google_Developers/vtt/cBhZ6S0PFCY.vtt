WEBVTT
Kind: captions
Language: en

00:00:01.230 --> 00:00:02.480
PIERRE FAR: My name is Pierre.

00:00:02.480 --> 00:00:03.504
I work in web search.

00:00:03.504 --> 00:00:05.170
ILYA GRIGORIK: And
I'm Ilya, a developer

00:00:05.170 --> 00:00:06.449
advocate for the Chrome team.

00:00:06.449 --> 00:00:08.240
PIERRE FAR: We're here
today to talk to you

00:00:08.240 --> 00:00:10.690
about why HTTPS matters.

00:00:10.690 --> 00:00:15.900
And we want to convince you
that all communication should

00:00:15.900 --> 00:00:18.510
be secure by default.

00:00:18.510 --> 00:00:20.954
I know there may be
some skeptics here.

00:00:20.954 --> 00:00:22.620
We're going to talk
about the motivation

00:00:22.620 --> 00:00:24.816
to explain to you
why that's the case,

00:00:24.816 --> 00:00:26.940
we're going to talk you
about some common questions

00:00:26.940 --> 00:00:29.140
and misconceptions
that we've seen.

00:00:29.140 --> 00:00:31.470
And we're going to give
you some hands on tips

00:00:31.470 --> 00:00:36.279
and best practices about
how to go about doing that.

00:00:36.279 --> 00:00:38.070
ILYA GRIGORIK: So
Pierre, I'm glad that you

00:00:38.070 --> 00:00:39.111
mentioned those skeptics.

00:00:39.111 --> 00:00:41.020
Because I think most
of us will agree

00:00:41.020 --> 00:00:44.130
that secure by default
and HTTPS matters

00:00:44.130 --> 00:00:46.150
for things like
e-commerce and banking.

00:00:46.150 --> 00:00:47.597
But I think what
we're saying here

00:00:47.597 --> 00:00:48.930
is actually much, much stronger.

00:00:48.930 --> 00:00:49.100
Right?

00:00:49.100 --> 00:00:50.850
There's a reason why
the title of our talk

00:00:50.850 --> 00:00:53.850
is "HTTPS Everywhere,"
and that is, we

00:00:53.850 --> 00:00:55.890
should be using secure
by default communication

00:00:55.890 --> 00:00:58.320
for all communication,
everywhere.

00:00:58.320 --> 00:01:01.265
And that includes my playlists,
the news articles I read,

00:01:01.265 --> 00:01:04.470
and where I read them, and all
other things that I do online.

00:01:04.470 --> 00:01:06.830
Because while it seems
like, individually,

00:01:06.830 --> 00:01:10.630
the metadata that is
available that you can gather

00:01:10.630 --> 00:01:12.370
by looking at these
unencrypted sites

00:01:12.370 --> 00:01:14.940
is benign, when you actually
put it all together,

00:01:14.940 --> 00:01:16.640
it reveals a lot
about my intent.

00:01:16.640 --> 00:01:18.527
It can actually
compromise my privacy.

00:01:18.527 --> 00:01:20.860
PIERRE FAR: So that's actually
a very interesting point.

00:01:20.860 --> 00:01:21.818
I see my website there.

00:01:21.818 --> 00:01:23.410
I didn't ask for
that, by the way.

00:01:23.410 --> 00:01:27.290
And I write about
tech news stuff.

00:01:27.290 --> 00:01:29.350
It doesn't sound sensitive.

00:01:29.350 --> 00:01:31.610
Does that mean I really
need to encrypt it, too?

00:01:31.610 --> 00:01:33.450
ILYA GRIGORIK: Well,
I think my answer.

00:01:33.450 --> 00:01:34.207
The answer is yes.

00:01:34.207 --> 00:01:36.040
And there are actually
two reasons for that.

00:01:36.040 --> 00:01:37.730
The first reason is
you want to protect

00:01:37.730 --> 00:01:39.830
the privacy of the visitors
coming to your site.

00:01:39.830 --> 00:01:41.455
So as we said, it's
not just your site.

00:01:41.455 --> 00:01:42.600
It's also others' sites.

00:01:42.600 --> 00:01:45.480
And second is you want to
protect your site as well.

00:01:45.480 --> 00:01:47.440
So all of us are
developers here.

00:01:47.440 --> 00:01:49.260
We're building
sites and services.

00:01:49.260 --> 00:01:52.510
And we want to make sure
that we don't give out access

00:01:52.510 --> 00:01:53.990
to malicious participants.

00:01:53.990 --> 00:01:56.430
For example, maybe you have
an admin section of your site,

00:01:56.430 --> 00:01:58.471
or you want to make sure
that your service is not

00:01:58.471 --> 00:02:03.410
compromised by a
malicious attacker.

00:02:03.410 --> 00:02:05.220
So when we talk about
security, we actually

00:02:05.220 --> 00:02:06.970
mean three specific things.

00:02:06.970 --> 00:02:09.120
We're talking about
authentication, data integrity,

00:02:09.120 --> 00:02:09.960
and encryption.

00:02:09.960 --> 00:02:12.330
Authentication makes
sure that the servers

00:02:12.330 --> 00:02:14.720
that we are talking to
are who they claim to be.

00:02:14.720 --> 00:02:16.210
So for example, if you're
talking to your bank,

00:02:16.210 --> 00:02:16.900
you want to make
sure that you're

00:02:16.900 --> 00:02:18.532
talking to the right entity.

00:02:18.532 --> 00:02:20.240
Data integrity means
that the data is not

00:02:20.240 --> 00:02:24.370
modified while it's in
transit between your client

00:02:24.370 --> 00:02:25.750
and the servers.

00:02:25.750 --> 00:02:27.760
And encryption, of
course, protects

00:02:27.760 --> 00:02:30.510
the actual communication
from eavesdroppers

00:02:30.510 --> 00:02:33.194
such that they can't figure
out what's going on here.

00:02:33.194 --> 00:02:35.360
PIERRE FAR: And this is
actually an important point,

00:02:35.360 --> 00:02:39.310
because when I'm talking with
people, when we say HTTPS,

00:02:39.310 --> 00:02:41.770
people immediately think
it's only about encryption.

00:02:41.770 --> 00:02:43.410
But in reality,
you need all three.

00:02:43.410 --> 00:02:45.110
They're equally critical.

00:02:45.110 --> 00:02:47.220
Because just to give
you a simple example

00:02:47.220 --> 00:02:49.420
is that you can actually
have an encrypted channel

00:02:49.420 --> 00:02:50.766
to an attacker.

00:02:50.766 --> 00:02:52.140
And you wouldn't
know any better.

00:02:52.140 --> 00:02:53.765
And that's not actually
protecting you.

00:02:53.765 --> 00:02:56.300
That's why authentication
and data integrity kick in.

00:02:56.300 --> 00:02:59.900
And all three of them are
what form a secure website.

00:02:59.900 --> 00:03:00.800
ILYA GRIGORIK: Right.

00:03:00.800 --> 00:03:03.650
So the good is, this is
actually all taken care for us

00:03:03.650 --> 00:03:05.380
by the transport
layer of security.

00:03:05.380 --> 00:03:06.840
So for those that
are not familiar,

00:03:06.840 --> 00:03:08.464
transport layer
security is a protocol.

00:03:08.464 --> 00:03:10.515
And when we talk about
HTTPS, we actually

00:03:10.515 --> 00:03:13.312
are just talking about
HTTP running on top of TLS.

00:03:13.312 --> 00:03:14.770
And of course, TLS
is actually used

00:03:14.770 --> 00:03:16.620
for a variety of other
applications as well.

00:03:16.620 --> 00:03:21.139
For example, the Gmail team uses
TLS to secure mail delivery.

00:03:21.139 --> 00:03:22.680
But in this particular
session, we're

00:03:22.680 --> 00:03:26.400
going to focus on HTTPS, and
on the web in particular.

00:03:26.400 --> 00:03:29.375
So I think a lot of this
sounds very abstract.

00:03:29.375 --> 00:03:31.500
Authentication, data
integrity, and all the things.

00:03:31.500 --> 00:03:34.260
So let's actually take a
look at a hands-on example.

00:03:34.260 --> 00:03:37.280
So we've been scheming
this kind of crazy idea.

00:03:37.280 --> 00:03:40.050
We want to launch a new
service, tasktip.com,

00:03:40.050 --> 00:03:43.295
where you can come and
create guides and find

00:03:43.295 --> 00:03:44.420
guides for everyday things.

00:03:44.420 --> 00:03:46.970
Anything from how do I make
a great omelette to how do I

00:03:46.970 --> 00:03:48.890
configure my Wi-Fi router.

00:03:48.890 --> 00:03:51.480
So let's actually step
through the exact steps

00:03:51.480 --> 00:03:53.610
of how we would make
it secure by default.

00:03:53.610 --> 00:03:57.110
PIERRE FAR: So before we get
into this-- like tasktip.com,

00:03:57.110 --> 00:04:01.890
what we're saying-- one
of the examples we had is

00:04:01.890 --> 00:04:04.390
that we're going to tell people
how to make a good omelette.

00:04:04.390 --> 00:04:07.530
And that doesn't
sound that sensitive.

00:04:07.530 --> 00:04:09.120
So I wanted to go
back to what we

00:04:09.120 --> 00:04:13.120
said earlier-- do we need
to bother with HTTPS here?

00:04:13.120 --> 00:04:15.620
ILYA GRIGORIK: Well, once again,
I think you know my answer.

00:04:15.620 --> 00:04:16.290
But I'm curious.

00:04:16.290 --> 00:04:17.120
What do you guys think?

00:04:17.120 --> 00:04:18.495
A show of hands--
how many people

00:04:18.495 --> 00:04:20.350
think that we should
encrypt and deliver

00:04:20.350 --> 00:04:23.240
all of the content via HTTPS?

00:04:23.240 --> 00:04:23.740
All right.

00:04:23.740 --> 00:04:25.520
So there's definitely
some skeptics here.

00:04:25.520 --> 00:04:27.260
So let's work
through some examples

00:04:27.260 --> 00:04:29.150
and see how things can go wrong.

00:04:29.150 --> 00:04:31.090
So first of all, Pierre,
I know that you're

00:04:31.090 --> 00:04:32.340
coming from the London office.

00:04:32.340 --> 00:04:34.131
So you're probably a
little bit jet lagged.

00:04:34.131 --> 00:04:36.956
You came here for
I/O. And I'm guessing

00:04:36.956 --> 00:04:38.330
you had to pay a
couple of visits

00:04:38.330 --> 00:04:39.462
to your local coffee shop.

00:04:39.462 --> 00:04:40.670
PIERRE FAR: That's true, yes.

00:04:40.670 --> 00:04:41.510
ILYA GRIGORIK: OK.

00:04:41.510 --> 00:04:43.426
You're also coming from
London, which tells me

00:04:43.426 --> 00:04:46.440
that you probably have
roaming charges on your phone.

00:04:46.440 --> 00:04:49.200
And let's face it, those
are pretty high still.

00:04:49.200 --> 00:04:51.740
So you're probably pretty happy
to use their Wi-Fi, as well.

00:04:51.740 --> 00:04:53.080
PIERRE FAR: That's
true, too, yes.

00:04:53.080 --> 00:04:53.829
ILYA GRIGORIK: OK.

00:04:53.829 --> 00:04:57.400
Well, when you use
unauthenticated Wi-Fi or

00:04:57.400 --> 00:05:00.130
unsecure Wi-Fi,
passive attackers

00:05:00.130 --> 00:05:02.820
can actually just listen
in and gather data

00:05:02.820 --> 00:05:03.860
about what you're doing.

00:05:03.860 --> 00:05:05.490
So they can see which
sites you're browsing to,

00:05:05.490 --> 00:05:06.770
what you're doing,
how much time you're

00:05:06.770 --> 00:05:07.811
spending on each article.

00:05:07.811 --> 00:05:10.772
And that includes all
guides on tasktip.com.

00:05:10.772 --> 00:05:11.980
So that's a problem.

00:05:11.980 --> 00:05:14.320
So the combination of
all of these signals

00:05:14.320 --> 00:05:16.850
actually reveals quite a
bit about what you're up to.

00:05:19.222 --> 00:05:20.680
And that's kind of
scary, isn't it?

00:05:20.680 --> 00:05:21.346
PIERRE FAR: Yes.

00:05:21.346 --> 00:05:22.230
That is very scary.

00:05:22.230 --> 00:05:24.021
But the other thing is
that-- the key point

00:05:24.021 --> 00:05:27.877
is what Ilya was saying, is
that any individual visit is not

00:05:27.877 --> 00:05:28.835
interesting on its own.

00:05:28.835 --> 00:05:31.910
It's when you start looking
at an aggregate-- about all

00:05:31.910 --> 00:05:34.240
the behavior that
somebody eavesdropping

00:05:34.240 --> 00:05:36.700
on that unsecure connection--
that you can start

00:05:36.700 --> 00:05:39.010
to build a bigger
picture and a better idea

00:05:39.010 --> 00:05:41.350
about what that person is doing.

00:05:41.350 --> 00:05:43.625
And this is why you need
to secure everything,

00:05:43.625 --> 00:05:45.000
because you don't
want to be part

00:05:45.000 --> 00:05:49.115
of that pile of information that
your users are inadvertently

00:05:49.115 --> 00:05:49.990
showing to the world.

00:05:49.990 --> 00:05:50.865
ILYA GRIGORIK: Right.

00:05:50.865 --> 00:05:54.320
So as owners of the
tasktip.com site,

00:05:54.320 --> 00:05:56.330
we want to protect the
data of our visitors,

00:05:56.330 --> 00:05:57.490
right, to protect them.

00:05:57.490 --> 00:05:59.230
But also, as good
citizens of the web,

00:05:59.230 --> 00:06:00.810
you want to make sure that
the web is getting better,

00:06:00.810 --> 00:06:01.768
is getting more secure.

00:06:01.768 --> 00:06:03.490
So that's a good thing, too.

00:06:03.490 --> 00:06:06.020
Now compare this
scenario if we had

00:06:06.020 --> 00:06:08.300
HTTPS deployed on
all of the sites.

00:06:08.300 --> 00:06:10.427
So instead, when you're
using this public Wi-Fi,

00:06:10.427 --> 00:06:13.010
all of the communication would
be done over encrypted channels

00:06:13.010 --> 00:06:14.330
with each of the servers.

00:06:14.330 --> 00:06:17.080
So the attacker couldn't
just listen in and figure out

00:06:17.080 --> 00:06:17.880
what we're up to.

00:06:17.880 --> 00:06:19.800
So this sort of passive
attack, where you just

00:06:19.800 --> 00:06:22.660
take a seat back and just
listen to what's happening,

00:06:22.660 --> 00:06:26.430
is basically impossible, which
makes the web more secure.

00:06:26.430 --> 00:06:27.620
Now this is great.

00:06:27.620 --> 00:06:28.120
Right?

00:06:28.120 --> 00:06:29.470
This protects our users.

00:06:29.470 --> 00:06:33.100
But HTTPS also provides
important features for us

00:06:33.100 --> 00:06:34.840
as site owners to
protect our site.

00:06:34.840 --> 00:06:36.920
So let's talk about
another example.

00:06:36.920 --> 00:06:39.015
Instead of just being
a passive attacker

00:06:39.015 --> 00:06:41.000
and just listening in
on what's happening,

00:06:41.000 --> 00:06:42.970
an attacker can actually
target your site.

00:06:42.970 --> 00:06:43.470
Right?

00:06:43.470 --> 00:06:45.320
So perhaps you have
a particular user

00:06:45.320 --> 00:06:47.570
that the attacker
is interested in.

00:06:47.570 --> 00:06:50.050
They could actually
trick the user

00:06:50.050 --> 00:06:54.190
into visiting a site that is
hosted by them-- at which point

00:06:54.190 --> 00:06:56.024
all bets are off as
to what they could do.

00:06:56.024 --> 00:06:56.690
PIERRE FAR: Yes.

00:06:56.690 --> 00:06:58.240
And this is actually
quite scary.

00:06:58.240 --> 00:07:02.390
If somebody's actively attacking
your users like that, what that

00:07:02.390 --> 00:07:05.140
means is that they get to
change every single bit

00:07:05.140 --> 00:07:08.040
about your website, and you
wouldn't know any better.

00:07:08.040 --> 00:07:10.350
They could change the text.

00:07:10.350 --> 00:07:11.470
They can steal passwords.

00:07:11.470 --> 00:07:13.355
They can do whatever they want.

00:07:13.355 --> 00:07:14.230
ILYA GRIGORIK: Right.

00:07:14.230 --> 00:07:16.430
And that's why we have
server authentication.

00:07:16.430 --> 00:07:19.820
So when you install an HTTPS
certificate, what you're

00:07:19.820 --> 00:07:22.100
actually doing is
providing a guarantee

00:07:22.100 --> 00:07:25.120
that when the client actually
connects to your server,

00:07:25.120 --> 00:07:26.810
they are talking to
the right server.

00:07:26.810 --> 00:07:26.970
Right?

00:07:26.970 --> 00:07:28.260
So somebody else
can't come along.

00:07:28.260 --> 00:07:29.790
They can get your
public certificate,

00:07:29.790 --> 00:07:31.331
but they don't have
your private key.

00:07:31.331 --> 00:07:33.156
So they can't complete
that handshake.

00:07:33.156 --> 00:07:35.030
And that is why, when
you get that green lock

00:07:35.030 --> 00:07:38.060
icon in your browser, that you
get that warm fuzzy feeling,

00:07:38.060 --> 00:07:40.640
because you know you're
talking to the right entity.

00:07:40.640 --> 00:07:42.409
So that's very important.

00:07:42.409 --> 00:07:44.450
PIERRE FAR: And this is
why we have certificates,

00:07:44.450 --> 00:07:47.400
because they add this extra
authentication that you know

00:07:47.400 --> 00:07:50.180
who you're talking
to, and your users

00:07:50.180 --> 00:07:51.555
would know if
something is wrong,

00:07:51.555 --> 00:07:54.350
if somebody's trying to actively
intercept their connection.

00:07:54.350 --> 00:07:54.580
ILYA GRIGORIK: Right.

00:07:54.580 --> 00:07:56.080
And that's why we need
the three properties

00:07:56.080 --> 00:07:57.454
that we mentioned
earlier, right?

00:07:57.454 --> 00:07:58.960
It's not just encryption.

00:07:58.960 --> 00:08:01.446
So as a summary
here, TLS provides

00:08:01.446 --> 00:08:02.570
three important properties.

00:08:02.570 --> 00:08:04.570
First of all, attackers
can't listen in,

00:08:04.570 --> 00:08:07.432
because we're encrypting
the data that's in flight.

00:08:07.432 --> 00:08:09.140
The attackers can't
tamper with the data,

00:08:09.140 --> 00:08:10.764
because we're
checksumming all the data

00:08:10.764 --> 00:08:12.010
as it's being transferred.

00:08:12.010 --> 00:08:14.020
And the attackers can't
impersonate to the site

00:08:14.020 --> 00:08:16.420
or service, and they
can't use our site

00:08:16.420 --> 00:08:20.822
as an attack vector against our
site, and our users as well.

00:08:20.822 --> 00:08:22.030
PIERRE FAR: So I'm convinced.

00:08:22.030 --> 00:08:25.212
We're going to make tasktip.com
to be completely encrypted.

00:08:25.212 --> 00:08:26.670
What we'd like to
do now is to look

00:08:26.670 --> 00:08:30.324
at some practical tips about
how to go about doing that.

00:08:30.324 --> 00:08:31.740
Between Ilya and
I, when we talked

00:08:31.740 --> 00:08:33.350
with developers and
webmasters, we've

00:08:33.350 --> 00:08:37.369
seen a pattern about what
kind of questions people ask

00:08:37.369 --> 00:08:39.140
and what kind of
concerns we have.

00:08:39.140 --> 00:08:41.950
And so what we've seen
is this uncertainty,

00:08:41.950 --> 00:08:43.190
and people are afraid.

00:08:43.190 --> 00:08:45.266
In reality, once you
know what you need to do,

00:08:45.266 --> 00:08:46.390
it's actually quite simple.

00:08:46.390 --> 00:08:49.040
So to help you think
through these things,

00:08:49.040 --> 00:08:52.450
we've come up with
this list of tips

00:08:52.450 --> 00:08:53.820
about what you need to be doing.

00:08:53.820 --> 00:08:55.692
We've broken it into two parts.

00:08:55.692 --> 00:08:57.150
One is about the
operational stuff.

00:08:57.150 --> 00:08:58.480
How do you buy a certificate?

00:08:58.480 --> 00:09:00.370
How do you set it
up on your website?

00:09:00.370 --> 00:09:02.490
And the other one is that
most content right now

00:09:02.490 --> 00:09:03.690
is not secure on the web.

00:09:03.690 --> 00:09:08.181
So how do you migrate
to a secure website?

00:09:08.181 --> 00:09:10.180
Ilya's going to talk about
the operations stuff.

00:09:10.180 --> 00:09:14.450
I'm going to talk about how
you'd make it HTTPS friendly,

00:09:14.450 --> 00:09:15.850
and how do you migrate there.

00:09:15.850 --> 00:09:17.933
And I'm also going to talk
about how you make sure

00:09:17.933 --> 00:09:20.130
that Google's algorithms
will index that and show it

00:09:20.130 --> 00:09:22.250
in search results,
so that you don't

00:09:22.250 --> 00:09:24.405
lose any search
referred traffic.

00:09:24.405 --> 00:09:25.280
ILYA GRIGORIK: Right.

00:09:25.280 --> 00:09:27.917
So this actually is a
fairly simple process,

00:09:27.917 --> 00:09:29.250
once you know what you're doing.

00:09:29.250 --> 00:09:31.000
So we're going to give
you some checklists

00:09:31.000 --> 00:09:34.530
that you can follow along later,
and make your site be secure

00:09:34.530 --> 00:09:35.400
by default.

00:09:35.400 --> 00:09:36.800
So here's my
sys-admin checklist.

00:09:36.800 --> 00:09:38.300
We'll go through
these step by step,

00:09:38.300 --> 00:09:40.090
so don't worry about
writing them down.

00:09:40.090 --> 00:09:41.280
I think the most
important takeaway

00:09:41.280 --> 00:09:43.810
about this particular checklist
is that you should actually

00:09:43.810 --> 00:09:45.002
follow it in order.

00:09:45.002 --> 00:09:47.460
The biggest mistake I find is
that people just skip a step.

00:09:47.460 --> 00:09:49.330
So for example, they
get the certificate,

00:09:49.330 --> 00:09:51.370
but then they don't
really verify their server

00:09:51.370 --> 00:09:51.953
configuration.

00:09:51.953 --> 00:09:53.926
They're just going to
drop it in and let it go.

00:09:53.926 --> 00:09:55.550
Or they do their
verification, but they

00:09:55.550 --> 00:09:58.400
forgot to test for
performance in other things.

00:09:58.400 --> 00:09:59.930
So go in order.

00:09:59.930 --> 00:10:04.170
But having said that, let's
start at the beginning.

00:10:04.170 --> 00:10:05.870
So first things first.

00:10:05.870 --> 00:10:08.700
You should be using
2,048-bit certificates.

00:10:08.700 --> 00:10:11.460
If you already have HTTPS on
your site and you're using

00:10:11.460 --> 00:10:15.470
1,024-bit certificate, that
is no longer strong enough.

00:10:15.470 --> 00:10:18.170
So please upgrade and
get a new certificate.

00:10:18.170 --> 00:10:20.220
And speaking of getting
new certificates, perhaps

00:10:20.220 --> 00:10:22.290
the biggest and the
first question that I get

00:10:22.290 --> 00:10:23.810
is, well, what about cost?

00:10:23.810 --> 00:10:26.260
Aren't these things
super, super expensive?

00:10:26.260 --> 00:10:28.560
And the answer is, it
depends on the use case.

00:10:28.560 --> 00:10:31.150
If you have a non-commercial
use case-- for example,

00:10:31.150 --> 00:10:32.790
I run a personal
tech blog, that's

00:10:32.790 --> 00:10:35.109
a non-commercial site-- you
can actually get a free TLS

00:10:35.109 --> 00:10:37.150
certificate from a number
of different providers.

00:10:37.150 --> 00:10:38.650
If you have an open
source project,

00:10:38.650 --> 00:10:40.050
you can also get
free certificate

00:10:40.050 --> 00:10:41.430
from a variety of providers.

00:10:41.430 --> 00:10:43.680
Use your favorite search
engine to look for those,

00:10:43.680 --> 00:10:45.070
and you'll find them.

00:10:45.070 --> 00:10:47.590
Now, if you have a
commercial use case,

00:10:47.590 --> 00:10:50.050
then you need to think about
what type of certificate

00:10:50.050 --> 00:10:51.392
you actually need for your site.

00:10:51.392 --> 00:10:53.100
PIERRE FAR: And that's
actually something

00:10:53.100 --> 00:10:54.710
that I've always
been confused about.

00:10:54.710 --> 00:10:57.080
How do I know which
one do I need?

00:10:57.080 --> 00:10:58.330
And so, can you help me there?

00:10:58.330 --> 00:10:58.610
ILYA GRIGORIK: Right.

00:10:58.610 --> 00:10:59.901
So it's actually pretty simple.

00:10:59.901 --> 00:11:02.770
The single host certificate
is the cheapest one,

00:11:02.770 --> 00:11:04.160
and it's exactly as it sounds.

00:11:04.160 --> 00:11:06.630
You have a fairly simple
site, where all your content

00:11:06.630 --> 00:11:09.320
resides at example.com,
for example.

00:11:09.320 --> 00:11:09.820
Right?

00:11:09.820 --> 00:11:11.950
And you serve all your
content from there,

00:11:11.950 --> 00:11:14.320
and that's all you need,
then you need a single host

00:11:14.320 --> 00:11:14.840
certificate.

00:11:14.840 --> 00:11:16.030
That'll cost you $10.

00:11:16.030 --> 00:11:17.957
And you're off to the races.

00:11:17.957 --> 00:11:20.290
Now if you have a slightly
more advanced use case where,

00:11:20.290 --> 00:11:22.320
for example, you have
the site localized--

00:11:22.320 --> 00:11:24.690
you have a .com and a .co.uk.

00:11:24.690 --> 00:11:26.480
Or maybe you have a
couple of subdomains,

00:11:26.480 --> 00:11:30.750
because you're using a
CDN to serve your content,

00:11:30.750 --> 00:11:33.660
you will need a
multi-domain certificate,

00:11:33.660 --> 00:11:35.820
or the multi-domain is
probably the best one

00:11:35.820 --> 00:11:37.444
that you should use.

00:11:37.444 --> 00:11:39.110
And the key observation
here is that you

00:11:39.110 --> 00:11:40.370
know all of the subdomains.

00:11:40.370 --> 00:11:40.560
Right?

00:11:40.560 --> 00:11:41.935
So you can list
them out, and you

00:11:41.935 --> 00:11:44.430
can get a certificate that
will cover multiple domains.

00:11:44.430 --> 00:11:45.990
And then finally,
the wild card one

00:11:45.990 --> 00:11:47.640
is definitely an
advanced use case,

00:11:47.640 --> 00:11:50.150
where you perhaps don't
know all of the subdomains

00:11:50.150 --> 00:11:51.860
or all of the origins
that you will need.

00:11:51.860 --> 00:11:54.030
And that one can be quite
a bit more expensive.

00:11:54.030 --> 00:11:56.650
So it's up and north of $100.

00:11:56.650 --> 00:11:58.882
But basically,
it's not that bad.

00:11:58.882 --> 00:11:59.590
PIERRE FAR: Yeah.

00:11:59.590 --> 00:12:00.340
And that's the thing.

00:12:00.340 --> 00:12:02.420
It's not that bad for
the most common use cases

00:12:02.420 --> 00:12:04.740
that most of the
developers here would face.

00:12:04.740 --> 00:12:07.400
And the amounts we're
talking about money wise

00:12:07.400 --> 00:12:08.825
are not that expensive.

00:12:08.825 --> 00:12:09.700
ILYA GRIGORIK: Right.

00:12:09.700 --> 00:12:11.750
So somewhere
between $10 and $30,

00:12:11.750 --> 00:12:15.397
and even for a commercial site,
you should be up and running.

00:12:15.397 --> 00:12:16.480
So that's step number one.

00:12:16.480 --> 00:12:18.080
Once you've got
your certificate,

00:12:18.080 --> 00:12:19.630
you need to configure
your server.

00:12:19.630 --> 00:12:21.190
And let's be
honest, for somebody

00:12:21.190 --> 00:12:23.714
who has not spent a lot of time
kind of looking and getting

00:12:23.714 --> 00:12:25.130
familiarized with
all the options,

00:12:25.130 --> 00:12:26.140
it can be a little bit daunting.

00:12:26.140 --> 00:12:27.160
Because first of
all, let's face it,

00:12:27.160 --> 00:12:28.870
a security can be complicated.

00:12:28.870 --> 00:12:30.540
As an example,
this cryptic string

00:12:30.540 --> 00:12:34.330
here is actually the
recommended cipher suite list

00:12:34.330 --> 00:12:36.964
that your server should be
advertising as of today.

00:12:36.964 --> 00:12:38.380
That's the requirement
list today.

00:12:38.380 --> 00:12:40.310
But please don't try
and write it down,

00:12:40.310 --> 00:12:44.230
because the biggest
problem that I find

00:12:44.230 --> 00:12:46.867
is that a lot of developers
try to piece together

00:12:46.867 --> 00:12:49.200
their configuration from a
variety of different sources.

00:12:49.200 --> 00:12:50.408
Some of them may be outdated.

00:12:50.408 --> 00:12:54.120
Some of them are maybe are not
recommending the best things.

00:12:54.120 --> 00:12:56.910
So instead, please go to
one canonical source that

00:12:56.910 --> 00:12:59.180
is up to date, and use
that as a starting point.

00:12:59.180 --> 00:13:01.540
And the good news is, there
is such a destination.

00:13:01.540 --> 00:13:04.700
The Mozilla guys actually
have a great wiki page,

00:13:04.700 --> 00:13:08.010
which they keep up to date
with all of the best practices.

00:13:08.010 --> 00:13:09.890
And that includes
configuration tips

00:13:09.890 --> 00:13:11.414
for all of the most
popular servers.

00:13:11.414 --> 00:13:14.080
So if you just follow that link,
and that's a great place to get

00:13:14.080 --> 00:13:14.880
started.

00:13:14.880 --> 00:13:15.880
So yeah.

00:13:15.880 --> 00:13:18.260
PIERRE FAR: I'm glad you
didn't read this, by the way.

00:13:18.260 --> 00:13:20.780
So it's still a bit scary.

00:13:20.780 --> 00:13:23.082
But how do I know that
I've done it correctly?

00:13:23.082 --> 00:13:25.290
How do I know that I've
actually followed the Mozilla

00:13:25.290 --> 00:13:26.625
recommendations correctly?

00:13:26.625 --> 00:13:27.500
ILYA GRIGORIK: Right.

00:13:27.500 --> 00:13:29.660
So once you've enabled
all the 55 flags

00:13:29.660 --> 00:13:31.035
and configured
your sector suite,

00:13:31.035 --> 00:13:32.719
and all the rest-- right?

00:13:32.719 --> 00:13:33.760
I have the same question.

00:13:33.760 --> 00:13:36.440
And the tool that I use that
I like to use, and recommend

00:13:36.440 --> 00:13:39.670
that you guys try, is
the Qualys SSL Labs test.

00:13:39.670 --> 00:13:42.330
So they actually provide a
service where you can go in

00:13:42.330 --> 00:13:43.990
and type in the
name of your site

00:13:43.990 --> 00:13:45.550
or the IP address
of your server.

00:13:45.550 --> 00:13:48.670
And they will scan the
server, and they'll

00:13:48.670 --> 00:13:51.040
run a whole battery of tests,
and verify all the latest

00:13:51.040 --> 00:13:52.330
settings, all the
recommendations, and all

00:13:52.330 --> 00:13:52.830
the rest.

00:13:52.830 --> 00:13:54.340
They'll give you a score.

00:13:54.340 --> 00:13:56.270
And they'll give you
hands on tips for things

00:13:56.270 --> 00:13:57.660
like, hey, we
found this problem,

00:13:57.660 --> 00:13:58.960
you should look into this.

00:13:58.960 --> 00:14:01.190
So this is a great
tool to use anytime

00:14:01.190 --> 00:14:02.890
you update your
server configuration.

00:14:02.890 --> 00:14:04.834
Anytime you change it,
please use this tool.

00:14:04.834 --> 00:14:05.500
PIERRE FAR: Yep.

00:14:05.500 --> 00:14:07.900
So this is a very
nice tool, by the way.

00:14:07.900 --> 00:14:09.450
You can use it to
test any websites.

00:14:09.450 --> 00:14:11.890
So for example, if you're
trying to buy from a website,

00:14:11.890 --> 00:14:14.920
and you're not sure that
the security's that great,

00:14:14.920 --> 00:14:16.450
you can use it to test that.

00:14:16.450 --> 00:14:18.709
Also, you can use it
to test your own server

00:14:18.709 --> 00:14:19.750
and see what you've done.

00:14:19.750 --> 00:14:21.010
And because it tells
you what you're

00:14:21.010 --> 00:14:22.718
missing or things that
could be improved,

00:14:22.718 --> 00:14:24.815
you know what you can
go about doing next.

00:14:24.815 --> 00:14:25.690
ILYA GRIGORIK: Right.

00:14:25.690 --> 00:14:26.750
That's actually a
great point, right?

00:14:26.750 --> 00:14:28.750
So we talking about
configuring your own server.

00:14:28.750 --> 00:14:30.740
But of course you
can use this tool

00:14:30.740 --> 00:14:34.180
and some other similar tools to
also test your favorite sites.

00:14:34.180 --> 00:14:39.130
And perhaps if you find
an issue, talk to them.

00:14:39.130 --> 00:14:40.920
Send a bug.

00:14:40.920 --> 00:14:41.980
Get them to fix it.

00:14:41.980 --> 00:14:45.660
So next, once you've got
your server configured,

00:14:45.660 --> 00:14:47.220
the next question
I get is, well,

00:14:47.220 --> 00:14:49.860
what about the CPU
resources on the server?

00:14:49.860 --> 00:14:52.240
I heard that all this
cryptography work

00:14:52.240 --> 00:14:55.270
adds a lot of overhead
and all other stuff.

00:14:55.270 --> 00:14:56.750
So the thing to
recognize here is

00:14:56.750 --> 00:14:59.260
there are two steps to
establishing the TLS tunnel.

00:14:59.260 --> 00:15:01.040
There is the asymmetric
cryptography,

00:15:01.040 --> 00:15:03.980
which is the step where we
verified the certificate

00:15:03.980 --> 00:15:05.140
and do the public crypto.

00:15:05.140 --> 00:15:06.890
And then there's a
symmetric cryptography,

00:15:06.890 --> 00:15:11.400
which is where and how we
encrypt the actual application

00:15:11.400 --> 00:15:12.070
data.

00:15:12.070 --> 00:15:13.860
The first part is
the expensive part.

00:15:13.860 --> 00:15:17.440
And as Jacob points out
here, it is very important

00:15:17.440 --> 00:15:19.790
that you leverage things
like keepalives and session

00:15:19.790 --> 00:15:21.930
resumption to optimize
for this step.

00:15:21.930 --> 00:15:25.620
So keepalives allow you to
reuse the same connection

00:15:25.620 --> 00:15:27.140
between different requests.

00:15:27.140 --> 00:15:30.820
Which means that you will only
need to do that handshake once,

00:15:30.820 --> 00:15:33.840
and then the actual
overhead is much, much less.

00:15:33.840 --> 00:15:35.480
And session resumption
actually means

00:15:35.480 --> 00:15:38.365
that we can reuse the
negotiated parameters

00:15:38.365 --> 00:15:40.444
of our secure session
from a previous session

00:15:40.444 --> 00:15:41.610
when we establish a new one.

00:15:41.610 --> 00:15:44.110
So once again, we can
skip that handshake,

00:15:44.110 --> 00:15:45.790
and significantly
reduce the overhead.

00:15:45.790 --> 00:15:47.790
So as you can see, the
experience at Twitter

00:15:47.790 --> 00:15:50.890
is that it basically added
negligible CPU overhead

00:15:50.890 --> 00:15:52.530
when they deployed it correctly.

00:15:52.530 --> 00:15:54.904
And the emphasis, of
course, is on correctly.

00:15:54.904 --> 00:15:55.820
PIERRE FAR: Correctly.

00:15:55.820 --> 00:15:56.810
Exactly-- yeah.

00:15:56.810 --> 00:15:59.770
ILYA GRIGORIK: So after that,
the next question is, well, OK,

00:15:59.770 --> 00:16:00.440
great.

00:16:00.440 --> 00:16:01.760
But I'm still not
convinced, because there's

00:16:01.760 --> 00:16:03.884
a bunch of vendors, and
there's a lot of literature

00:16:03.884 --> 00:16:06.620
that I've read about things
like dedicated hardware, and TLS

00:16:06.620 --> 00:16:08.920
offloading, and all
of this other stuff.

00:16:08.920 --> 00:16:10.870
And the answer
there is, it is true

00:16:10.870 --> 00:16:13.800
that about a decade ago, these
handshakes were so expensive

00:16:13.800 --> 00:16:16.520
that we actually needed extra
and dedicated hardware that you

00:16:16.520 --> 00:16:17.466
had to buy.

00:16:17.466 --> 00:16:18.590
That is no longer the case.

00:16:18.590 --> 00:16:21.170
Modern CPUs are well optimized
for the kinds of work

00:16:21.170 --> 00:16:25.970
that we do in the TLS stack,
such that Facebook, Google,

00:16:25.970 --> 00:16:28.970
Twitter, and others all
run TLS purely in software

00:16:28.970 --> 00:16:30.840
without any
specialized hardware.

00:16:30.840 --> 00:16:32.340
This is all just
commodity hardware.

00:16:32.340 --> 00:16:35.710
And that should work
for you guys as well.

00:16:35.710 --> 00:16:37.470
PIERRE FAR: So that
makes things easier.

00:16:37.470 --> 00:16:40.450
Basically, get a
2,048-bit certificate.

00:16:40.450 --> 00:16:42.150
Configure and test your servers.

00:16:42.150 --> 00:16:44.120
And you get to use
the currently hardware

00:16:44.120 --> 00:16:45.800
that you're already
using now anyway.

00:16:45.800 --> 00:16:46.415
Anything else?

00:16:46.415 --> 00:16:47.290
ILYA GRIGORIK: Right.

00:16:47.290 --> 00:16:48.804
So yes, there is, actually.

00:16:48.804 --> 00:16:50.970
And one of the most exciting
things to me personally

00:16:50.970 --> 00:16:53.630
that's happened in
the last couple years

00:16:53.630 --> 00:16:56.860
is the development of
protocols like SPDY and HTTP 2.

00:16:56.860 --> 00:16:59.570
So for those that are not
familiar with SPDY and HTTP 2,

00:16:59.570 --> 00:17:02.920
it's a new initiative to
address some of the performance

00:17:02.920 --> 00:17:06.240
bottlenecks in the
existing HTTP 1.1 protocol.

00:17:06.240 --> 00:17:08.954
And when we enable
SPDY-- so first of all,

00:17:08.954 --> 00:17:11.430
it turns out that you
need TLS in practice

00:17:11.430 --> 00:17:14.569
to deploy these new protocols,
for a variety of reasons.

00:17:14.569 --> 00:17:17.221
But once you have TLS, this is
just basically a config flag

00:17:17.221 --> 00:17:17.720
away.

00:17:17.720 --> 00:17:20.400
Most of the popular servers--
Apache, Nginx, Jetty--

00:17:20.400 --> 00:17:22.730
all support SPDY so that it's
something you can enable.

00:17:22.730 --> 00:17:24.146
And you can see
some numbers here.

00:17:24.146 --> 00:17:28.380
This is data for some of the
most popular Google services

00:17:28.380 --> 00:17:29.880
after they've enabled SPDY.

00:17:29.880 --> 00:17:31.440
And this is compared to HTTPS.

00:17:31.440 --> 00:17:34.750
So we're making the
performance much, much better

00:17:34.750 --> 00:17:37.970
for the actual page load time
by enabling these things.

00:17:37.970 --> 00:17:39.770
So that's pretty awesome.

00:17:39.770 --> 00:17:42.186
But it's not just making
performance better

00:17:42.186 --> 00:17:43.810
for the users who
are visiting the site

00:17:43.810 --> 00:17:45.185
and improving the
page load time.

00:17:45.185 --> 00:17:47.550
It's actually also improving
performance on the server.

00:17:47.550 --> 00:17:50.380
Because one of the key
features of SPDY and HTTP

00:17:50.380 --> 00:17:53.800
2 is that its goal is actually
to use a single connection,

00:17:53.800 --> 00:17:56.230
instead of having many
connections open to the server.

00:17:56.230 --> 00:17:57.920
And by having a
single connection,

00:17:57.920 --> 00:18:00.400
it means that there
are fewer handshakes,

00:18:00.400 --> 00:18:02.310
there are fewer
sockets, there are

00:18:02.310 --> 00:18:04.060
fewer buffers that
we need to allocate.

00:18:04.060 --> 00:18:06.950
And all that means that we
consume less amount of memory,

00:18:06.950 --> 00:18:09.089
CPU usage, and other
things on the server.

00:18:09.089 --> 00:18:11.130
So for example, in this
study-- this was actually

00:18:11.130 --> 00:18:13.230
done with mod-spdy
and Apache-- there

00:18:13.230 --> 00:18:16.221
was a server workload that was
run comparing HTTPS and SPDY.

00:18:16.221 --> 00:18:18.220
And they found that, when
they ran it over SPDY,

00:18:18.220 --> 00:18:20.830
because there's
fewer connections,

00:18:20.830 --> 00:18:23.287
the load on the server
was actually much less.

00:18:23.287 --> 00:18:24.870
Because we're just
much more efficient

00:18:24.870 --> 00:18:26.030
about reusing the stuff.

00:18:26.030 --> 00:18:28.780
So truth of the matter
is, enabling TLS and SPDY

00:18:28.780 --> 00:18:30.850
may actually decrease
your ops cost-- which

00:18:30.850 --> 00:18:32.570
by itself is a really
nice selling point.

00:18:32.570 --> 00:18:33.048
PIERRE FAR: Yeah.

00:18:33.048 --> 00:18:33.548
Exactly.

00:18:33.548 --> 00:18:34.482
Just do it.

00:18:34.482 --> 00:18:35.440
ILYA GRIGORIK: Yeah.

00:18:35.440 --> 00:18:36.960
So as a quick summary, right?

00:18:36.960 --> 00:18:38.460
Certificates are
not that expensive.

00:18:38.460 --> 00:18:39.710
It really depends
on your use case.

00:18:39.710 --> 00:18:41.260
So make sure you pick
the right use case.

00:18:41.260 --> 00:18:42.843
Don't just assume
that you need to get

00:18:42.843 --> 00:18:44.710
the most expensive
certificate out there.

00:18:44.710 --> 00:18:46.250
You don't really
benefit from that.

00:18:46.250 --> 00:18:47.750
There are great
tools that will help

00:18:47.750 --> 00:18:49.019
you verify your configuration.

00:18:49.019 --> 00:18:49.810
I mentioned Qualys.

00:18:49.810 --> 00:18:51.190
There's a bunch of others.

00:18:51.190 --> 00:18:52.920
They're all very good.

00:18:52.920 --> 00:18:54.460
You don't need
dedicated hardware.

00:18:54.460 --> 00:18:56.170
And there's a lot
of optimization

00:18:56.170 --> 00:18:58.400
that you can do to
optimize your stack.

00:18:58.400 --> 00:19:01.200
Now, unfortunately, we
don't have the full day

00:19:01.200 --> 00:19:04.230
that we really need to really
go into the details of how

00:19:04.230 --> 00:19:06.590
to tweak and optimize
each and every bit.

00:19:06.590 --> 00:19:08.890
But I've put together a
site-- isTLSfastyet.com.

00:19:08.890 --> 00:19:11.529
By the way, the answer is yes.

00:19:11.529 --> 00:19:13.070
And you can go there
and you can just

00:19:13.070 --> 00:19:15.000
follow the links to
learn more about how

00:19:15.000 --> 00:19:16.160
to configure your servers.

00:19:16.160 --> 00:19:19.022
So if you're a
sys-admin, or if you

00:19:19.022 --> 00:19:21.480
need to talk to your sys-admin,
point him to that resource.

00:19:21.480 --> 00:19:24.380
And hopefully it'll help
you to make it fast.

00:19:24.380 --> 00:19:25.130
PIERRE FAR: Right.

00:19:25.130 --> 00:19:27.072
So I see we've
figured out everything

00:19:27.072 --> 00:19:28.280
you need to do on the server.

00:19:30.950 --> 00:19:33.370
How do you make it be as
friendly for both your visitors

00:19:33.370 --> 00:19:35.140
and for search engines?

00:19:35.140 --> 00:19:38.440
There are a lot of
misconceptions in this space.

00:19:38.440 --> 00:19:41.210
And I hope I'm going to
clear up quite a few of them.

00:19:41.210 --> 00:19:43.460
So the first I want to
start with is actually

00:19:43.460 --> 00:19:44.410
the most basic one.

00:19:44.410 --> 00:19:48.520
We don't treat, currently,
HTTPS sites any differently

00:19:48.520 --> 00:19:49.140
in search.

00:19:49.140 --> 00:19:52.120
They get indexed and ranked
like any other website.

00:19:52.120 --> 00:19:53.030
OK?

00:19:53.030 --> 00:19:55.760
But what we're seeing
is that webmasters

00:19:55.760 --> 00:20:02.110
can break their secure websites
in many different ways.

00:20:02.110 --> 00:20:03.680
Doing it right is easy.

00:20:03.680 --> 00:20:06.280
And I'm going to show
you how to do it now.

00:20:06.280 --> 00:20:08.940
The general pattern of
breakages that we're seeing

00:20:08.940 --> 00:20:10.900
is that the indexing
signals that we

00:20:10.900 --> 00:20:13.420
see on the website-- both
technically on the pages

00:20:13.420 --> 00:20:16.060
and in servers-- they
are inconsistent.

00:20:16.060 --> 00:20:16.610
OK?

00:20:16.610 --> 00:20:21.710
So the one thing you need to
do to make your websites be

00:20:21.710 --> 00:20:23.910
indexed correctly
as secure websites--

00:20:23.910 --> 00:20:25.350
make sure that all
the signals you

00:20:25.350 --> 00:20:28.157
are sending us are
consistent, and all of them

00:20:28.157 --> 00:20:30.240
point to the fact that you
want the secure website

00:20:30.240 --> 00:20:31.740
to be indexed.

00:20:31.740 --> 00:20:35.260
Now a lot of the signals
that we talk about,

00:20:35.260 --> 00:20:38.040
you're going to be need doing
them for your users anyway.

00:20:38.040 --> 00:20:42.060
So let's talk about
them in detail.

00:20:42.060 --> 00:20:43.460
This is the checklist.

00:20:43.460 --> 00:20:45.820
It's actually very simple.

00:20:45.820 --> 00:20:48.960
This is roughly in the order
that you need to do it anyway.

00:20:48.960 --> 00:20:52.510
The first thing is that you set
it up on your server correctly.

00:20:52.510 --> 00:20:55.240
And then you set up all the
signals, in terms of-- we'll

00:20:55.240 --> 00:20:56.800
talk about these in a second.

00:20:56.800 --> 00:21:00.270
About the page resources,
like JavaScript and CSS,

00:21:00.270 --> 00:21:04.410
how you link to other
content on your website.

00:21:04.410 --> 00:21:05.430
Fix those up.

00:21:05.430 --> 00:21:08.320
Then you give us some signals
that are not visible directly

00:21:08.320 --> 00:21:08.920
to the user.

00:21:08.920 --> 00:21:12.240
But our algorithms will
help them decide and pick

00:21:12.240 --> 00:21:13.400
the right one.

00:21:13.400 --> 00:21:16.009
And once you have
it all done, we'll

00:21:16.009 --> 00:21:17.800
talk about how Webmaster
Tools can actually

00:21:17.800 --> 00:21:21.270
help you to figure out-- keep
monitoring that everything is

00:21:21.270 --> 00:21:24.320
humming along nicely, and
also some error reporting

00:21:24.320 --> 00:21:25.540
that we see there.

00:21:25.540 --> 00:21:27.150
So first things first.

00:21:27.150 --> 00:21:29.670
Make sure that the
certificate is not broken.

00:21:29.670 --> 00:21:31.560
Now what do we mean by that?

00:21:31.560 --> 00:21:33.694
There are quite a few
ways they can break.

00:21:33.694 --> 00:21:36.110
The most common one is that
we see that the server returns

00:21:36.110 --> 00:21:38.520
the incorrect host name for
the certificate-- there's

00:21:38.520 --> 00:21:39.680
a mismatch.

00:21:39.680 --> 00:21:40.410
OK?

00:21:40.410 --> 00:21:42.590
So verify that the
server's not doing that.

00:21:42.590 --> 00:21:44.690
Verify that what
you're trying to secure

00:21:44.690 --> 00:21:47.394
is actually what it claimed
to be wanting secure.

00:21:47.394 --> 00:21:48.810
The other thing
is that we've seen

00:21:48.810 --> 00:21:51.350
that the certificate itself
has an incomplete certificate

00:21:51.350 --> 00:21:52.420
chain.

00:21:52.420 --> 00:21:53.830
OK?

00:21:53.830 --> 00:21:54.590
Don't do that.

00:21:54.590 --> 00:21:57.570
The way you do it--
when I set up HTTPS

00:21:57.570 --> 00:22:01.400
on my website, where I bought
the certificate made it very

00:22:01.400 --> 00:22:03.730
easy to actually tell me
this is the certificate chain

00:22:03.730 --> 00:22:05.120
that you need to do.

00:22:05.120 --> 00:22:07.062
The other one is that
certificates expire.

00:22:07.062 --> 00:22:08.770
When you buy a
certificate, it's actually

00:22:08.770 --> 00:22:11.320
for a certain period of time.

00:22:11.320 --> 00:22:13.550
One of the things that
we see is that people

00:22:13.550 --> 00:22:15.330
forget to renew them.

00:22:15.330 --> 00:22:16.540
So here's a tip.

00:22:16.540 --> 00:22:18.470
Put it in your calendar
a week in advance,

00:22:18.470 --> 00:22:20.820
so you can renew your
certificate before it expires,

00:22:20.820 --> 00:22:22.282
so you get the continuity.

00:22:22.282 --> 00:22:24.740
And the other thing is that
keep an eye on Webmaster Tools,

00:22:24.740 --> 00:22:26.590
because we do try to
send you a message when

00:22:26.590 --> 00:22:29.240
we see a problem with these,
like the certificate expired,

00:22:29.240 --> 00:22:31.740
or there's a mismatch in the
host name with the certificate.

00:22:31.740 --> 00:22:33.010
We try to alert you for these.

00:22:33.010 --> 00:22:35.691
So we'll talk a little bit
more about Webmaster Tools.

00:22:35.691 --> 00:22:36.190
Right?

00:22:36.190 --> 00:22:36.580
ILYA GRIGORIK: Right.

00:22:36.580 --> 00:22:38.830
And tools like Qualys would
actually catch some of those

00:22:38.830 --> 00:22:39.190
as well.

00:22:39.190 --> 00:22:39.600
PIERRE FAR: Exactly, yeah.

00:22:39.600 --> 00:22:41.170
ILYA GRIGORIK: So
please use that.

00:22:41.170 --> 00:22:42.545
PIERRE FAR: So
the first thing is

00:22:42.545 --> 00:22:44.845
that-- this example
is JavaScript,

00:22:44.845 --> 00:22:48.330
but it applies also to CSS-- is
that we've seen some websites

00:22:48.330 --> 00:22:54.800
actually hard code HTTP
resources on secure pages.

00:22:54.800 --> 00:22:56.330
That's a problem.

00:22:56.330 --> 00:22:58.520
And the reason for
that is two-fold.

00:22:58.520 --> 00:23:02.330
Because sometimes browsers
will block insecure resources

00:23:02.330 --> 00:23:03.470
from being downloaded.

00:23:03.470 --> 00:23:06.990
So your web page will
not work as intended.

00:23:06.990 --> 00:23:09.780
And the other thing is that,
if the browser doesn't block

00:23:09.780 --> 00:23:12.810
that download-- actually
downloads it insecurely--

00:23:12.810 --> 00:23:14.390
you're opening up
a security hole

00:23:14.390 --> 00:23:16.100
in your website for your users.

00:23:16.100 --> 00:23:18.940
So fixing that is
very, very important.

00:23:18.940 --> 00:23:22.510
And the other thing is that it's
one of those inconsistencies

00:23:22.510 --> 00:23:24.480
that we can pick up
on in our indexing.

00:23:24.480 --> 00:23:26.440
If we see that a secure
website doesn't quite

00:23:26.440 --> 00:23:30.630
know what it's doing with
their page resources,

00:23:30.630 --> 00:23:33.020
we might be indexing your
website inconsistently.

00:23:33.020 --> 00:23:34.770
ILYA GRIGORIK: So
Pierre, just to clarify.

00:23:34.770 --> 00:23:35.478
PIERRE FAR: Yeah.

00:23:35.478 --> 00:23:37.790
ILYA GRIGORIK: That slash
slash kind of looks weird.

00:23:37.790 --> 00:23:38.890
Is that correct syntax?

00:23:38.890 --> 00:23:40.598
PIERRE FAR: That's
actually a good point.

00:23:40.598 --> 00:23:41.975
So look at this.

00:23:41.975 --> 00:23:44.380
Who knows relative URLs here?

00:23:44.380 --> 00:23:45.560
You have all done it.

00:23:45.560 --> 00:23:48.700
This is a special
kind of relative URL.

00:23:48.700 --> 00:23:51.010
It's a protocol relative URL.

00:23:51.010 --> 00:23:54.120
Now we're all developers
here, and we all

00:23:54.120 --> 00:23:56.000
develop on own workstations.

00:23:56.000 --> 00:23:59.100
When you have this, that
means you can actually

00:23:59.100 --> 00:24:01.867
develop and test your website
as you're building it,

00:24:01.867 --> 00:24:04.200
without having the certificates
installed on your server

00:24:04.200 --> 00:24:04.941
locally.

00:24:04.941 --> 00:24:05.440
OK?

00:24:05.440 --> 00:24:06.981
So when you have it
this way, it will

00:24:06.981 --> 00:24:09.114
work on your
development machine.

00:24:09.114 --> 00:24:10.530
And when you deploy
it live, it'll

00:24:10.530 --> 00:24:13.010
actually be secure and use
the server configuration.

00:24:13.010 --> 00:24:13.885
ILYA GRIGORIK: Right.

00:24:13.885 --> 00:24:16.380
So if the page is rendered
on a non-secure origin, that

00:24:16.380 --> 00:24:18.380
will just say,
well, I want to load

00:24:18.380 --> 00:24:20.700
the unencrypted
version of script.js.

00:24:20.700 --> 00:24:22.220
PIERRE FAR: Exactly.

00:24:22.220 --> 00:24:22.790
Right.

00:24:22.790 --> 00:24:24.580
So the other thing
that we see is

00:24:24.580 --> 00:24:26.640
that sometimes we have
a secure web page,

00:24:26.640 --> 00:24:29.220
but then it has
a hard coded HTTP

00:24:29.220 --> 00:24:32.990
link to other pages
on the same website.

00:24:32.990 --> 00:24:34.780
So again, this is
an inconsistent one.

00:24:34.780 --> 00:24:35.380
OK?

00:24:35.380 --> 00:24:37.020
You're securing this
page, but you're

00:24:37.020 --> 00:24:38.941
linking to the insecure page.

00:24:38.941 --> 00:24:40.440
And we'll talk about
why that's bad,

00:24:40.440 --> 00:24:44.500
because it will incur redirects
and it will hurt performance.

00:24:44.500 --> 00:24:47.260
But also it's something that
our algorithms can pick up on.

00:24:47.260 --> 00:24:50.400
If you're being inconsistent
about how you're linking,

00:24:50.400 --> 00:24:54.320
it might actually
be a problem for us.

00:24:54.320 --> 00:24:57.070
And again, if you use the
protocol relative URLs,

00:24:57.070 --> 00:25:01.410
it's actually useful for
you when you're developing.

00:25:01.410 --> 00:25:04.340
So these are the basics.

00:25:04.340 --> 00:25:06.080
This is the answer
about how you can

00:25:06.080 --> 00:25:09.390
get your secure website indexed.

00:25:09.390 --> 00:25:12.230
If you know about
how this works,

00:25:12.230 --> 00:25:14.170
there's nothing
magical about it.

00:25:14.170 --> 00:25:16.180
It simply is two steps.

00:25:16.180 --> 00:25:19.390
The first one is that you make
sure that any insecure URLs

00:25:19.390 --> 00:25:23.090
redirect to the
secure counterparts.

00:25:23.090 --> 00:25:23.830
OK?

00:25:23.830 --> 00:25:25.940
And you use that with
the 301 redirect.

00:25:25.940 --> 00:25:27.770
And the other thing
is that you emphasize

00:25:27.770 --> 00:25:30.440
that signal to our
algorithms by having

00:25:30.440 --> 00:25:32.140
a rel canonical on
that page itself--

00:25:32.140 --> 00:25:35.140
the secure page itself--
the rel canonical will

00:25:35.140 --> 00:25:36.360
point to the page itself.

00:25:36.360 --> 00:25:39.170
So it's a self-reference
rel canonical,

00:25:39.170 --> 00:25:41.100
which emphasizes the
signal that you're

00:25:41.100 --> 00:25:43.040
sending us with the redirect.

00:25:43.040 --> 00:25:44.260
OK?

00:25:44.260 --> 00:25:47.050
And remember here, both
Googlebot and the users

00:25:47.050 --> 00:25:48.530
are getting this redirect.

00:25:48.530 --> 00:25:52.112
Treat them the same way,
and everything will be fine.

00:25:52.112 --> 00:25:53.570
Redirects are very,
very important.

00:25:53.570 --> 00:25:54.270
OK?

00:25:54.270 --> 00:25:56.700
Because that means when
the page is being shared,

00:25:56.700 --> 00:25:59.460
when it's being emailed,
when it's being bookmarked,

00:25:59.460 --> 00:26:02.840
that it's the secure
version of the page

00:26:02.840 --> 00:26:05.500
that is being used here.

00:26:05.500 --> 00:26:09.180
The other thing is that the
redirect is an important signal

00:26:09.180 --> 00:26:12.860
for our algorithms that say,
don't index the insecure URL,

00:26:12.860 --> 00:26:14.390
index the secure URL.

00:26:14.390 --> 00:26:15.000
OK?

00:26:15.000 --> 00:26:17.465
And again, treat Googlebot
and users in the same way.

00:26:17.465 --> 00:26:18.340
ILYA GRIGORIK: Right.

00:26:18.340 --> 00:26:20.298
And this is also important
because chances are,

00:26:20.298 --> 00:26:22.869
you've had your content
linked by many other sites.

00:26:22.869 --> 00:26:25.410
And you want to make sure that
those links, or the users that

00:26:25.410 --> 00:26:27.810
are following those links,
end up on the secure version.

00:26:27.810 --> 00:26:29.730
Which is once again why
redirects are so important.

00:26:29.730 --> 00:26:30.180
PIERRE FAR: Exactly.

00:26:30.180 --> 00:26:32.570
And this is especially true
for established websites.

00:26:32.570 --> 00:26:35.100
It's easier when you're starting
from scratch being secure.

00:26:35.100 --> 00:26:37.160
But established websites
that are migrating,

00:26:37.160 --> 00:26:38.870
that will not be the case.

00:26:38.870 --> 00:26:40.152
OK?

00:26:40.152 --> 00:26:41.110
Here's the other thing.

00:26:41.110 --> 00:26:42.910
There's a tip for redirects.

00:26:42.910 --> 00:26:45.500
We've seen this, and I was
personally guilty of this,

00:26:45.500 --> 00:26:48.030
is that sometimes we see
the insecure redirects go

00:26:48.030 --> 00:26:49.130
in a chain.

00:26:49.130 --> 00:26:51.840
So in this example
here, so the insecure--

00:26:51.840 --> 00:26:54.896
the HTTP URL without
subdomain WWW--

00:26:54.896 --> 00:26:58.090
actually redirects to the
insecure WWW subdomain,

00:26:58.090 --> 00:27:00.953
which, in turn, redirects to
the secure version of that.

00:27:00.953 --> 00:27:03.900
That's extra latency
for your users.

00:27:03.900 --> 00:27:07.630
The browser and Googlebot are
OK with short redirect chains.

00:27:07.630 --> 00:27:08.360
That's fine.

00:27:08.360 --> 00:27:12.920
But you're actually incurring
extra latency for your users.

00:27:12.920 --> 00:27:14.160
What do you do about this?

00:27:14.160 --> 00:27:15.890
You already know the answer.

00:27:15.890 --> 00:27:17.730
You know where they're
going to end up in.

00:27:17.730 --> 00:27:18.230
OK?

00:27:18.230 --> 00:27:22.200
So just send them
there directly,

00:27:22.200 --> 00:27:26.130
and then you don't
incur any extra latency.

00:27:26.130 --> 00:27:27.940
And this is doubly
important, especially

00:27:27.940 --> 00:27:29.116
for your mobile users.

00:27:29.116 --> 00:27:29.990
ILYA GRIGORIK: Right.

00:27:29.990 --> 00:27:31.640
And I was actually
just going to say,

00:27:31.640 --> 00:27:33.240
for mobile users
is where I actually

00:27:33.240 --> 00:27:35.650
find this to be the
biggest problem,

00:27:35.650 --> 00:27:37.800
because you end up with
the mobile redirect that

00:27:37.800 --> 00:27:41.100
goes to the-- first you
have the domain, that

00:27:41.100 --> 00:27:43.690
goes to the mobile site, that
then takes you to the HTTPS

00:27:43.690 --> 00:27:44.330
site, right?

00:27:44.330 --> 00:27:46.890
And this is extremely
expensive, especially in mobile,

00:27:46.890 --> 00:27:48.547
because the latency is so high.

00:27:48.547 --> 00:27:50.630
So I have one tip for you
guys that would actually

00:27:50.630 --> 00:27:52.360
help you eliminate a
lot of that latency.

00:27:52.360 --> 00:27:57.160
And that's HSTS, or the HTTP
Strict Transport Security.

00:27:57.160 --> 00:27:58.720
So this is a header
that your server

00:27:58.720 --> 00:28:01.790
can return when it returns
the page which actually

00:28:01.790 --> 00:28:04.860
sets a policy on the browser.

00:28:04.860 --> 00:28:06.669
And it consists of two parts.

00:28:06.669 --> 00:28:08.460
First there's the
max-age, and then there's

00:28:08.460 --> 00:28:09.695
the includeSubDomains.

00:28:09.695 --> 00:28:12.170
The max-age basically
says, remember this policy

00:28:12.170 --> 00:28:13.390
for this amount of seconds.

00:28:13.390 --> 00:28:15.460
So this is just like
a caching header.

00:28:15.460 --> 00:28:18.300
And the includeSubDomains
does exactly what it implies.

00:28:18.300 --> 00:28:20.830
It just means that also apply
this policy to subdomains.

00:28:20.830 --> 00:28:22.600
When this policy
is set, the browser

00:28:22.600 --> 00:28:26.790
will remember that you want this
site to be accessed over HTTPS.

00:28:26.790 --> 00:28:29.250
And every time the user
tries to request your site,

00:28:29.250 --> 00:28:32.160
it will automatically take
them to the HTTPS site.

00:28:32.160 --> 00:28:34.560
So it will actually
skip that redirect.

00:28:34.560 --> 00:28:36.940
It'll apply that
rewrite on the client

00:28:36.940 --> 00:28:38.849
before it even
sends the request.

00:28:38.849 --> 00:28:40.390
So this is important
for performance,

00:28:40.390 --> 00:28:42.360
because obviously it
eliminates the redirects, which

00:28:42.360 --> 00:28:43.568
is what Pierre is describing.

00:28:43.568 --> 00:28:45.580
But also, it eliminates
an entire class

00:28:45.580 --> 00:28:47.570
of downgrade attacks
against your user.

00:28:47.570 --> 00:28:52.634
So those two things combined is
what makes HSTS so important.

00:28:52.634 --> 00:28:53.300
PIERRE FAR: Yep.

00:28:53.300 --> 00:28:54.250
And not just that.

00:28:54.250 --> 00:28:58.180
I mean, serving HSTS is another
signal that our algorithms can

00:28:58.180 --> 00:29:00.250
potentially look to, to
see that you actually

00:29:00.250 --> 00:29:02.520
really, really want us
to index the secure page.

00:29:02.520 --> 00:29:03.640
ILYA GRIGORIK: Right.

00:29:03.640 --> 00:29:05.230
PIERRE FAR: So here's
the other thing.

00:29:05.230 --> 00:29:08.550
So those class of signals
we've talked about now

00:29:08.550 --> 00:29:10.240
are kind of visible to users.

00:29:10.240 --> 00:29:15.250
Now redirects for
Googlebot-- Googlebot

00:29:15.250 --> 00:29:18.180
obeys the robot exclusion
protocol, which in this case,

00:29:18.180 --> 00:29:20.500
we're talking about
the robots.txt file.

00:29:20.500 --> 00:29:23.050
You could actually
be-- because browsers

00:29:23.050 --> 00:29:25.160
don't look at the
robots.txt file,

00:29:25.160 --> 00:29:27.070
you could actually be
inadvertently blocking

00:29:27.070 --> 00:29:29.250
Googlebot from
accessing either or both

00:29:29.250 --> 00:29:31.460
of your insecure
and secure website.

00:29:31.460 --> 00:29:32.390
OK?

00:29:32.390 --> 00:29:34.620
These are directives.

00:29:34.620 --> 00:29:37.440
So we would follow them once we
discover those rules that says,

00:29:37.440 --> 00:29:40.790
do not access the
secure or insecure page.

00:29:40.790 --> 00:29:43.190
This can lead to
serious inconsistencies

00:29:43.190 --> 00:29:44.720
about the indexing
of your website.

00:29:44.720 --> 00:29:47.450
So the first thing to look
at is whether Googlebot

00:29:47.450 --> 00:29:51.760
is allowed to crawl both the
insecure and the secure URL.

00:29:51.760 --> 00:29:55.950
So that means we are able to
discover the redirect and also

00:29:55.950 --> 00:29:57.770
index the secure content.

00:29:57.770 --> 00:29:58.870
OK?

00:29:58.870 --> 00:30:01.230
And you can use that
with-- in Webmaster Tools,

00:30:01.230 --> 00:30:02.970
there's a tool called
Fetch as Google.

00:30:02.970 --> 00:30:05.520
And if you give it a
URL, it will tell you

00:30:05.520 --> 00:30:07.160
whether Googlebot
is able to access it

00:30:07.160 --> 00:30:09.640
or not, and what the
content that is returned.

00:30:09.640 --> 00:30:10.140
OK?

00:30:10.140 --> 00:30:12.309
So that's the first program
you need to check out.

00:30:12.309 --> 00:30:14.600
The other thing is that,
supposed you've done all this,

00:30:14.600 --> 00:30:16.970
and you've allowed Googlebot
to crawl the pages.

00:30:16.970 --> 00:30:20.570
We've seen webmasters
inadvertently add

00:30:20.570 --> 00:30:25.010
the noindex that directs us
to not index the secure page.

00:30:25.010 --> 00:30:28.330
So that they've got us to
crawl it, and then they say

00:30:28.330 --> 00:30:29.620
don't index it.

00:30:29.620 --> 00:30:35.610
Now, there are two
ways to put a noindex.

00:30:35.610 --> 00:30:37.070
You can do it
either in the HTML,

00:30:37.070 --> 00:30:39.284
and you can do it either
as an HTTP header.

00:30:39.284 --> 00:30:40.450
This is what they look like.

00:30:40.450 --> 00:30:41.908
Remember, this is
not what you want

00:30:41.908 --> 00:30:43.740
to be doing if you
want the page indexed.

00:30:43.740 --> 00:30:44.240
OK?

00:30:44.240 --> 00:30:45.885
So don't copy and paste this.

00:30:45.885 --> 00:30:47.510
This is what you need
to be looking for

00:30:47.510 --> 00:30:50.740
to make sure that it's
not there on the page.

00:30:50.740 --> 00:30:53.460
And again you can use Fetch
as Google in Webmaster Tools

00:30:53.460 --> 00:30:56.630
to see if that HTML or the
HTTP header is being returned.

00:30:56.630 --> 00:30:58.070
OK?

00:30:58.070 --> 00:31:01.020
Now the other thing
is that the rel

00:31:01.020 --> 00:31:02.620
canonical-- we've
talked about that.

00:31:02.620 --> 00:31:04.649
And we've seen
inconsistencies, again,

00:31:04.649 --> 00:31:07.190
where the secure page-- although
it redirects and everything,

00:31:07.190 --> 00:31:10.970
it will actually say,
the rel canonical

00:31:10.970 --> 00:31:12.985
references the
insecure counterpart.

00:31:12.985 --> 00:31:16.630
So it references the
HTTP version of the URL.

00:31:16.630 --> 00:31:19.260
And the problem with this is
that, a, it's an inconsistency,

00:31:19.260 --> 00:31:22.450
and can lead us to index
your content inconsistently.

00:31:22.450 --> 00:31:22.950
OK?

00:31:22.950 --> 00:31:25.390
But also, if you do it right,
it emphasizes the signal

00:31:25.390 --> 00:31:27.445
that you're already
standing with the redirect.

00:31:27.445 --> 00:31:28.320
ILYA GRIGORIK: Right.

00:31:28.320 --> 00:31:30.000
So what I found
when I was migrating

00:31:30.000 --> 00:31:32.630
my site is I had to audit
both my past content,

00:31:32.630 --> 00:31:35.715
because I had examples of
where I hard coded HTTP links

00:31:35.715 --> 00:31:39.980
and I had hard coded HTTP
resources in other places.

00:31:39.980 --> 00:31:42.449
And you mentioned Fetch
as Googlebot, right?

00:31:42.449 --> 00:31:43.990
So using Webmaster
Tools was actually

00:31:43.990 --> 00:31:45.570
very helpful to
find these problems.

00:31:45.570 --> 00:31:47.370
And I know that you
guys have been working

00:31:47.370 --> 00:31:49.800
on a lot of awesome
stuff to improve it.

00:31:49.800 --> 00:31:51.290
PIERRE FAR: Yep.

00:31:51.290 --> 00:31:52.920
Thank you.

00:31:52.920 --> 00:31:55.300
Webmaster Tools is a
developer's friend.

00:31:55.300 --> 00:31:56.700
Use it.

00:31:56.700 --> 00:31:58.830
The way it works
is that you verify

00:31:58.830 --> 00:32:00.570
ownership of your website.

00:32:00.570 --> 00:32:03.190
And once you verify ownership,
we share with you data

00:32:03.190 --> 00:32:04.710
that you don't want
others to know,

00:32:04.710 --> 00:32:09.060
like indexing and ranking
information about your website.

00:32:09.060 --> 00:32:10.454
It has a ton of features.

00:32:10.454 --> 00:32:12.120
I'm not going to go
through all of them.

00:32:12.120 --> 00:32:12.619
OK?

00:32:12.619 --> 00:32:17.110
So please verify your
slides and start exploring.

00:32:17.110 --> 00:32:18.634
For secure websites
in particular,

00:32:18.634 --> 00:32:20.300
I'd like to highlight
a couple of things

00:32:20.300 --> 00:32:21.550
and give you a couple of tips.

00:32:21.550 --> 00:32:24.080
So let's dig in for here.

00:32:24.080 --> 00:32:25.680
The first thing is
that I would like

00:32:25.680 --> 00:32:27.580
to verify all variants
of your websites.

00:32:27.580 --> 00:32:29.960
And we'll talk about what
that means in a second.

00:32:29.960 --> 00:32:32.520
There's also two reports
that you need to be checking.

00:32:32.520 --> 00:32:35.820
One is called "Index Status" and
one is called "Crawl Errors."

00:32:35.820 --> 00:32:36.960
What are these?

00:32:36.960 --> 00:32:39.890
Let's start with verifying
all versions of your websites.

00:32:39.890 --> 00:32:44.470
Now these four here that I've
listed-- the HTTP, HTTPS,

00:32:44.470 --> 00:32:48.840
and WWW, and without the WWW,
are treated as different sites.

00:32:48.840 --> 00:32:50.850
Now if you're doing
things correctly,

00:32:50.850 --> 00:32:53.680
you're redirect to
just the one version.

00:32:53.680 --> 00:32:55.492
OK?

00:32:55.492 --> 00:32:56.950
But you need to
verify all of them.

00:32:56.950 --> 00:32:58.400
Because what we've
seen sometimes

00:32:58.400 --> 00:33:01.830
is that the protocol and
subdomain-- the protocol

00:33:01.830 --> 00:33:03.820
and host name
combination-- can actually

00:33:03.820 --> 00:33:05.340
have different problems.

00:33:05.340 --> 00:33:07.340
And you wouldn't know
about that unless you

00:33:07.340 --> 00:33:09.540
keep checking all
of them separately.

00:33:09.540 --> 00:33:10.130
OK?

00:33:10.130 --> 00:33:11.220
So verify all of them.

00:33:11.220 --> 00:33:14.060
And yes, by all means, check
the canonical version most,

00:33:14.060 --> 00:33:16.350
because that's what your
users are interacting with.

00:33:16.350 --> 00:33:18.510
And that's where you're
redirecting everyone.

00:33:18.510 --> 00:33:20.010
But keep an eye
on the other ones.

00:33:20.010 --> 00:33:21.590
ILYA GRIGORIK: So this is
actually very important.

00:33:21.590 --> 00:33:23.006
I just want to
highlight this one,

00:33:23.006 --> 00:33:25.810
because this is something that
caught me off guard as well.

00:33:25.810 --> 00:33:29.380
I didn't realize that each of
these sites is a different one.

00:33:29.380 --> 00:33:31.860
So when I migrated
my content-- you'll

00:33:31.860 --> 00:33:35.640
see this in the next slide--
and you see my indexing go down.

00:33:35.640 --> 00:33:38.100
I was like, oh, my
god, I broke the web.

00:33:38.100 --> 00:33:39.590
And it turns out
that I just needed

00:33:39.590 --> 00:33:43.270
to add the other profile, and
I saw everything spike up.

00:33:43.270 --> 00:33:45.130
So it's a different profile.

00:33:45.130 --> 00:33:47.710
PIERRE FAR: And speaking
of different profiles,

00:33:47.710 --> 00:33:51.579
lots of websites have a separate
mobile URL-- separate sites.

00:33:51.579 --> 00:33:53.370
While you're doing all
these verifications,

00:33:53.370 --> 00:33:55.220
make sure you're also
verifying the mobile site,

00:33:55.220 --> 00:33:56.761
because, again, it's
a different one.

00:33:56.761 --> 00:33:59.250
And just to see if there
are any problems with that.

00:33:59.250 --> 00:34:02.140
Now this is what Ilya
was talking about.

00:34:02.140 --> 00:34:03.570
This is the index status report.

00:34:03.570 --> 00:34:06.180
And these are actually
two separate reports.

00:34:06.180 --> 00:34:08.130
I took them from
the same web site.

00:34:08.130 --> 00:34:08.949
OK?

00:34:08.949 --> 00:34:12.469
And what you can see is that--
this is the basic report.

00:34:12.469 --> 00:34:14.860
Index status has
basic and advanced.

00:34:14.860 --> 00:34:16.860
And what index status
does is that it tells you

00:34:16.860 --> 00:34:18.560
about the number
of URLs we know,

00:34:18.560 --> 00:34:21.060
and the number of URLs
that have been indexed.

00:34:21.060 --> 00:34:22.280
OK?

00:34:22.280 --> 00:34:24.060
Historically, that
wasn't the best report.

00:34:24.060 --> 00:34:25.393
So we've improved that recently.

00:34:25.393 --> 00:34:27.000
And you see that's
still in the graph.

00:34:27.000 --> 00:34:29.530
There's the vertical
line that says update.

00:34:29.530 --> 00:34:31.840
Now on the left is
the insecure version--

00:34:31.840 --> 00:34:33.810
the HTTP profile of the site.

00:34:33.810 --> 00:34:36.130
Notice that we've
historically said,

00:34:36.130 --> 00:34:38.570
there are lots of, like,
10, 15 pages indexed,

00:34:38.570 --> 00:34:40.310
and then it drops to zero.

00:34:40.310 --> 00:34:42.989
What's happened in this
site is that the site has

00:34:42.989 --> 00:34:46.244
moved to the HTTPS version
quite a while back,

00:34:46.244 --> 00:34:48.400
but Webmaster Tools
wasn't reporting it.

00:34:48.400 --> 00:34:50.330
And so when we did
that update and started

00:34:50.330 --> 00:34:53.570
reporting the data
accurately, that says,

00:34:53.570 --> 00:34:57.210
you're looking at the HTTP
URLs instead of the HTTPS URLs.

00:34:57.210 --> 00:34:58.180
OK?

00:34:58.180 --> 00:34:59.970
The indexing dropped.

00:34:59.970 --> 00:35:02.200
And this is what you
want, because if you're

00:35:02.200 --> 00:35:04.270
doing everything
right by telling us

00:35:04.270 --> 00:35:08.170
that we should index
the secure website,

00:35:08.170 --> 00:35:10.695
and if you're giving us
enough time for the algorithms

00:35:10.695 --> 00:35:14.840
to update the indexing, the
insecure site has to flatline.

00:35:14.840 --> 00:35:15.340
OK?

00:35:15.340 --> 00:35:17.860
You want this insecure
website to go to zero,

00:35:17.860 --> 00:35:19.920
and not have a heart
attack like Ilya did.

00:35:19.920 --> 00:35:20.450
OK?

00:35:20.450 --> 00:35:23.540
But what you want to look at is
the secure version of the site,

00:35:23.540 --> 00:35:26.397
and see the way that the
pages are being indexed.

00:35:26.397 --> 00:35:27.980
ILYA GRIGORIK: And
chances are, if you

00:35:27.980 --> 00:35:29.611
do have-- if it's
not flatlining,

00:35:29.611 --> 00:35:32.110
then you're probably missing a
few redirects or other things

00:35:32.110 --> 00:35:33.060
that you should
hunt down and fix.

00:35:33.060 --> 00:35:33.768
PIERRE FAR: Yeah.

00:35:33.768 --> 00:35:36.142
Or actually, a common one
is also robots.txt blocked,

00:35:36.142 --> 00:35:38.225
so we actually don't know
that there's a redirect.

00:35:38.225 --> 00:35:38.900
ILYA GRIGORIK: Right.

00:35:38.900 --> 00:35:39.580
PIERRE FAR: OK?

00:35:39.580 --> 00:35:41.600
And this is why you need
to verify both of them

00:35:41.600 --> 00:35:44.040
and see if there's
a problem or not.

00:35:44.040 --> 00:35:47.060
Similarly, we have something
called "Crawl Alerts."

00:35:47.060 --> 00:35:49.600
And just like index
status, keep checking

00:35:49.600 --> 00:35:52.780
and see if there are any
problems that you don't expect.

00:35:52.780 --> 00:35:55.810
If you see that the host name
and the protocol combinations,

00:35:55.810 --> 00:35:59.300
there's something
unexpected going on.

00:35:59.300 --> 00:36:02.450
We break it into sites wide
and URL the specific ones.

00:36:02.450 --> 00:36:06.470
And we have smartphone and
desktop specific errors.

00:36:06.470 --> 00:36:09.110
So again, something
to keep an eye on.

00:36:09.110 --> 00:36:13.210
And the last thing is, a
couple weeks ago, we massively

00:36:13.210 --> 00:36:16.120
improved our documentation
for how to move a website.

00:36:16.120 --> 00:36:19.530
And to move to secure websites
from insecure websites

00:36:19.530 --> 00:36:21.800
is a site move-- it's
a type of site move.

00:36:21.800 --> 00:36:24.450
And so I'm not going to go
through the recommendations

00:36:24.450 --> 00:36:25.355
right now.

00:36:25.355 --> 00:36:26.980
If you follow that
link, or if you just

00:36:26.980 --> 00:36:29.300
search for making
site moves easier,

00:36:29.300 --> 00:36:31.440
you'll find this documentation.

00:36:31.440 --> 00:36:33.660
And it's very, very detailed
about all the things

00:36:33.660 --> 00:36:35.900
you need to be
thinking about when

00:36:35.900 --> 00:36:38.999
you're migrating to secure URLs.

00:36:38.999 --> 00:36:41.290
It covers all of the stuff
we've talked about and quite

00:36:41.290 --> 00:36:42.390
a bit more.

00:36:42.390 --> 00:36:43.435
So in summary--

00:36:43.435 --> 00:36:43.720
ILYA GRIGORIK: Yeah.

00:36:43.720 --> 00:36:45.636
And that resource is
actually very, very good.

00:36:45.636 --> 00:36:47.990
It helped me quite a bit
when I was migrating my site.

00:36:47.990 --> 00:36:50.950
So we talked about a
lot in the session.

00:36:50.950 --> 00:36:52.410
So just a quick recap.

00:36:52.410 --> 00:36:53.970
When we talk about
TLS, really, we're

00:36:53.970 --> 00:36:56.053
talking about encryption,
authentication, and data

00:36:56.053 --> 00:36:57.060
integrity.

00:36:57.060 --> 00:36:58.120
TLS is not slow.

00:36:58.120 --> 00:36:58.620
Right?

00:36:58.620 --> 00:36:59.710
We've talked about
a lot of things

00:36:59.710 --> 00:37:01.240
that we can do to optimize it.

00:37:01.240 --> 00:37:04.290
And TLS can actually be used
to make your sites both faster,

00:37:04.290 --> 00:37:07.740
and your operations,
actually, use fewer resources.

00:37:07.740 --> 00:37:09.120
So that's all important.

00:37:09.120 --> 00:37:11.010
We should be using
HTTPS on all sites.

00:37:11.010 --> 00:37:11.990
HTTPS everywhere.

00:37:11.990 --> 00:37:12.490
Right?

00:37:12.490 --> 00:37:14.650
That is our message here.

00:37:14.650 --> 00:37:16.420
And there is some
work that you guys

00:37:16.420 --> 00:37:17.836
need to do to
update your content.

00:37:17.836 --> 00:37:21.070
You need to audit your
content, fix mixed content,

00:37:21.070 --> 00:37:22.744
fix your links,
and other things.

00:37:22.744 --> 00:37:24.910
And make sure that you're
sending the right signals.

00:37:24.910 --> 00:37:26.796
Webmaster Tools,
Qualys, and there's

00:37:26.796 --> 00:37:28.420
all this infrastructure
that is already

00:37:28.420 --> 00:37:32.100
in place that is available to
you guys to make this work.

00:37:32.100 --> 00:37:32.850
PIERRE FAR: Right.

00:37:32.850 --> 00:37:35.260
And there's more
here at I/O. Tomorrow

00:37:35.260 --> 00:37:39.520
there's a talk at 3:00 PM
about how we deploy security

00:37:39.520 --> 00:37:41.010
at large scales at Google.

00:37:41.010 --> 00:37:43.930
So if you're interested in doing
this and see our experience,

00:37:43.930 --> 00:37:45.230
please come to that.

00:37:45.230 --> 00:37:48.680
And also at 3:30
PM tomorrow, we're

00:37:48.680 --> 00:37:52.622
doing a sandbox session-- I
think it's on level two here--

00:37:52.622 --> 00:37:54.080
to talk about some
common mistakes,

00:37:54.080 --> 00:37:56.163
and talk about if you have
any SEO questions which

00:37:56.163 --> 00:37:58.010
cover some of this.

00:37:58.010 --> 00:38:01.120
You can also come and
find us, ask us questions.

00:38:01.120 --> 00:38:03.060
And we'd love to have
your feedback, please.

00:38:03.060 --> 00:38:04.810
If you scan this QR
code, it will take you

00:38:04.810 --> 00:38:08.010
straight to the feedback
form, or you can just

00:38:08.010 --> 00:38:09.290
follow that link.

00:38:09.290 --> 00:38:12.274
And thank you for coming.

00:38:12.274 --> 00:38:16.603
[APPLAUSE]

00:38:20.824 --> 00:38:21.740
We have a few minutes.

00:38:21.740 --> 00:38:23.760
If you have any questions,
you can ask us now

00:38:23.760 --> 00:38:25.360
or you can come afterwards.

00:38:29.087 --> 00:38:30.094
AUDIENCE: [INAUDIBLE].

00:38:30.094 --> 00:38:31.760
PIERRE FAR: Can you
actually go to the--

00:38:31.760 --> 00:38:33.218
ILYA GRIGORIK: Can
you use the mic?

00:38:33.218 --> 00:38:35.910
PIERRE FAR: If you go to
the microphone and then ask.

00:38:35.910 --> 00:38:39.900
AUDIENCE: Is there any talk
that will cover blacklisting

00:38:39.900 --> 00:38:43.980
of certificates,
specifically in Android?

00:38:43.980 --> 00:38:46.560
ILYA GRIGORIK: Can
you elaborate on that?

00:38:46.560 --> 00:38:48.960
AUDIENCE: Well, I
believe since Jelly Bean,

00:38:48.960 --> 00:38:52.540
there is a facility
to blacklist CA and EE

00:38:52.540 --> 00:38:53.865
certificates in Android.

00:38:53.865 --> 00:38:56.240
ILYA GRIGORIK: So I'm not
familiar with the exact process

00:38:56.240 --> 00:38:57.820
in Android for blacklisting.

00:38:57.820 --> 00:39:06.630
There are things in TLS, things
like revocation checks, that

00:39:06.630 --> 00:39:10.320
are used to revoke
bad certificates.

00:39:10.320 --> 00:39:13.950
I'm not sure abut denying
access to the entire CA.

00:39:13.950 --> 00:39:15.733
If you want, we can
follow up later.

00:39:15.733 --> 00:39:16.477
PIERRE FAR: Eric?

00:39:16.477 --> 00:39:17.685
Do you know the answer, Eric?

00:39:26.750 --> 00:39:27.340
ERIC: Yes.

00:39:27.340 --> 00:39:30.880
In general, one thing we might
add to the recommendations

00:39:30.880 --> 00:39:35.180
there is to do OCSP stapling,
because online certificate

00:39:35.180 --> 00:39:37.090
revocation is not reliable.

00:39:37.090 --> 00:39:41.120
So what we do at
Google is push out

00:39:41.120 --> 00:39:45.000
changes directly to
Chrome or to Android

00:39:45.000 --> 00:39:48.430
to try to blacklist some very
particular famous certificates

00:39:48.430 --> 00:39:51.772
that are actively being
misused in the wild.

00:39:51.772 --> 00:39:53.865
PIERRE FAR: Thank you.

00:39:53.865 --> 00:39:55.365
AUDIENCE: What about
those of us who

00:39:55.365 --> 00:39:56.823
make our money
through advertising,

00:39:56.823 --> 00:39:59.150
and therefore may have
some significant revenue

00:39:59.150 --> 00:40:01.016
in advertising that
we can't control

00:40:01.016 --> 00:40:03.140
that's coming through a
DSP or something like that,

00:40:03.140 --> 00:40:05.180
and therefore lose
a lot of money?

00:40:05.180 --> 00:40:06.680
PIERRE FAR: That's
a great question.

00:40:06.680 --> 00:40:09.210
So this is something we care
about quite a bit at Google.

00:40:09.210 --> 00:40:09.835
AUDIENCE: Yeah.

00:40:09.835 --> 00:40:11.327
You guys have the--

00:40:11.327 --> 00:40:12.660
PIERRE FAR: And that's in Steam.

00:40:12.660 --> 00:40:16.000
It's actually enabled--
there's an ad unit that

00:40:16.000 --> 00:40:17.830
works now with secure pages.

00:40:17.830 --> 00:40:19.694
So you can use AdSense
for those pages.

00:40:19.694 --> 00:40:21.110
And I think more
and more networks

00:40:21.110 --> 00:40:23.905
are starting to support
advertising on secure pages.

00:40:23.905 --> 00:40:24.530
AUDIENCE: Yeah.

00:40:24.530 --> 00:40:26.140
But I think the
best policy should

00:40:26.140 --> 00:40:28.551
be to have your
advertisers make sure they

00:40:28.551 --> 00:40:29.550
do support secure pages.

00:40:29.550 --> 00:40:30.350
PIERRE FAR: That's
the other thing,

00:40:30.350 --> 00:40:32.800
is that if you're not using
an ad network-- if you're

00:40:32.800 --> 00:40:34.660
talking to
advertisers directly--

00:40:34.660 --> 00:40:36.801
make sure that their
infrastructure supports that.

00:40:36.801 --> 00:40:38.300
Because otherwise
you'd be including

00:40:38.300 --> 00:40:40.270
an insecure JavaScript ad unit.

00:40:40.270 --> 00:40:41.212
AUDIENCE: Or a DSP.

00:40:41.212 --> 00:40:41.920
PIERRE FAR: Yeah.

00:40:41.920 --> 00:40:44.562
And then that won't
work, or it might not

00:40:44.562 --> 00:40:46.270
give you the results
you are looking for.

00:40:46.270 --> 00:40:46.720
ILYA GRIGORIK: Right.

00:40:46.720 --> 00:40:48.344
But just to highlight
what Pierre said,

00:40:48.344 --> 00:40:50.940
there is now an ad
code that you can

00:40:50.940 --> 00:40:53.540
install which is TLS friendly,
which was not the case before.

00:40:53.540 --> 00:40:55.165
So that was released
earlier this year.

00:40:55.165 --> 00:40:56.769
So please take a look at that.

00:40:56.769 --> 00:40:57.310
AUDIENCE: Hi.

00:40:57.310 --> 00:40:59.540
So I've got a large site
with millions of pages.

00:40:59.540 --> 00:41:04.070
And out of fear of a
search traffic catastrophe,

00:41:04.070 --> 00:41:07.645
I've decided to move just a
small fraction of the pages

00:41:07.645 --> 00:41:08.550
at a time to SSL.

00:41:08.550 --> 00:41:09.355
But I believe the
recommendations

00:41:09.355 --> 00:41:10.900
say to move the
whole site at once.

00:41:10.900 --> 00:41:11.330
PIERRE FAR: Yes.

00:41:11.330 --> 00:41:12.810
AUDIENCE: And I was wondering
if you could comment on that.

00:41:12.810 --> 00:41:13.620
Is this a bad approach?

00:41:13.620 --> 00:41:16.078
I don't want to do all of this
at once, and all of a sudden

00:41:16.078 --> 00:41:17.900
find out there's no
crawling happening,

00:41:17.900 --> 00:41:20.325
or I've made a huge mistake
and I'm losing money everyday.

00:41:20.325 --> 00:41:22.700
PIERRE FAR: So this goes back
to the fear and uncertainty

00:41:22.700 --> 00:41:24.000
that webmasters go through.

00:41:24.000 --> 00:41:25.850
And I agree with you.

00:41:25.850 --> 00:41:28.520
Now the best thing
to do is actually

00:41:28.520 --> 00:41:29.710
bite the bullet and jump in.

00:41:29.710 --> 00:41:30.380
OK?

00:41:30.380 --> 00:41:31.670
Do it all in one go.

00:41:31.670 --> 00:41:33.100
Now before you do
that, of course,

00:41:33.100 --> 00:41:35.380
you need to set up and make sure
that the infrastructure does

00:41:35.380 --> 00:41:36.546
exactly what you need to do.

00:41:36.546 --> 00:41:38.420
So if you look at
the recommendations,

00:41:38.420 --> 00:41:41.550
they'll say, set up a separate
copy and test that properly.

00:41:41.550 --> 00:41:42.160
OK?

00:41:42.160 --> 00:41:43.826
And make sure that
everything is working

00:41:43.826 --> 00:41:45.060
on that before you move.

00:41:45.060 --> 00:41:48.800
But once you move, we've
seen some really badly

00:41:48.800 --> 00:41:51.740
implemented site moves that
way, that when you move pieces

00:41:51.740 --> 00:41:54.507
at a time, that doesn't quite
work out as you intended.

00:41:54.507 --> 00:41:56.090
AUDIENCE: Can you
explain why that is?

00:41:56.090 --> 00:41:58.090
ILYA GRIGORIK: There are
quite a few edge cases.

00:41:58.090 --> 00:42:00.400
So if you like, to go
back to the example

00:42:00.400 --> 00:42:03.640
where you would have--
for example, if you use

00:42:03.640 --> 00:42:06.430
the protocol relative URLs
to link to other content

00:42:06.430 --> 00:42:07.150
on your site.

00:42:07.150 --> 00:42:08.566
If you're on a
secure page, you're

00:42:08.566 --> 00:42:11.580
actually linking to another
place that's secure.

00:42:11.580 --> 00:42:14.600
But if you're not serving
that already as secure,

00:42:14.600 --> 00:42:17.950
you're basically sending them
to a page that's supposed to be

00:42:17.950 --> 00:42:18.820
secure, but isn't.

00:42:18.820 --> 00:42:21.000
And the browser can throw an
error or something like that.

00:42:21.000 --> 00:42:21.220
AUDIENCE: Right.

00:42:21.220 --> 00:42:24.050
Well, so my case, I will have an
access volume of 301 redirects.

00:42:24.050 --> 00:42:27.330
I'll have more 301 redirects
than I think I would like.

00:42:27.330 --> 00:42:29.844
But I'm weighing that
against the fear.

00:42:29.844 --> 00:42:31.260
PIERRE FAR: So
that's the thing is

00:42:31.260 --> 00:42:32.950
that, if you follow
the guidelines--

00:42:32.950 --> 00:42:35.810
the recommendations-- and if you
have any questions about them,

00:42:35.810 --> 00:42:36.960
please come to our forums.

00:42:36.960 --> 00:42:38.820
And we also have
webmaster office hours.

00:42:38.820 --> 00:42:42.150
You can come and join and
ask questions directly.

00:42:42.150 --> 00:42:43.730
And don't have the fear.

00:42:43.730 --> 00:42:46.410
Just make sure that you
follow the guidelines.

00:42:46.410 --> 00:42:49.320
And make sure you follow all the
steps-- what Ilya was saying.

00:42:49.320 --> 00:42:53.060
Make sure you think about every
step that has been highlighted.

00:42:53.060 --> 00:42:54.294
And you should be fine.

00:42:54.294 --> 00:42:54.835
AUDIENCE: OK.

00:42:54.835 --> 00:42:55.160
Thanks.

00:42:55.160 --> 00:42:55.868
PIERRE FAR: Yeah.

00:42:55.868 --> 00:42:57.395
Good luck.

00:42:57.395 --> 00:42:58.770
AUDIENCE: I imagine
that you need

00:42:58.770 --> 00:43:02.590
to have both HTTP and
HTTPS in your sitemap.xml.

00:43:05.175 --> 00:43:05.800
PIERRE FAR: No.

00:43:05.800 --> 00:43:07.480
You'd need only the HTTPS.

00:43:07.480 --> 00:43:12.280
So does everybody know what a
sitemap is here, by the way?

00:43:12.280 --> 00:43:12.781
Yeah?

00:43:12.781 --> 00:43:14.905
OK, so a sitemap is basically
exactly what it says.

00:43:14.905 --> 00:43:16.390
It's like here's
a list of links,

00:43:16.390 --> 00:43:18.670
URLs that are on my site.

00:43:18.670 --> 00:43:21.070
What we recommend is actually
have just the one version,

00:43:21.070 --> 00:43:25.960
which is the secure version
of your site, in the sitemaps.

00:43:25.960 --> 00:43:29.540
Now during the transition,
it's OK to actually have

00:43:29.540 --> 00:43:30.160
an HTTP one.

00:43:30.160 --> 00:43:32.500
Just produce one to
monitor indexing.

00:43:32.500 --> 00:43:34.840
Because if you look at
the recommendations,

00:43:34.840 --> 00:43:36.510
we report the
number of URLs that

00:43:36.510 --> 00:43:38.420
are indexed for each sitemap.

00:43:38.420 --> 00:43:40.850
So if you have the
HTTP one, you would

00:43:40.850 --> 00:43:43.020
start with like 100% indexed.

00:43:43.020 --> 00:43:45.160
And you want it, over
time, to drop to zero.

00:43:45.160 --> 00:43:47.732
And if there are still ones
that are still indexed,

00:43:47.732 --> 00:43:49.940
it would be good to look at
why they're still indexed

00:43:49.940 --> 00:43:51.352
and what's going on there.

00:43:51.352 --> 00:43:53.310
So during the transition,
it's OK to have both.

00:43:53.310 --> 00:43:56.500
But in the long run, you'd want
to move to just HTTPS URLs.

00:43:56.500 --> 00:43:59.240
AUDIENCE: And once it flatlines,
then get rid of all the HTTP--

00:43:59.240 --> 00:43:59.540
PIERRE FAR: Yeah.

00:43:59.540 --> 00:44:00.020
And that's the thing.

00:44:00.020 --> 00:44:01.436
It's like you don't
need sitemaps.

00:44:01.436 --> 00:44:05.480
So if you want to skip the
monitoring using sitemaps

00:44:05.480 --> 00:44:08.290
with insecure URLs, that's
also perfectly fine.

00:44:08.290 --> 00:44:11.050
So by all means go ahead
and just submit sitemaps

00:44:11.050 --> 00:44:13.007
with HTTPS URLs only,
and you'll be good.

00:44:13.007 --> 00:44:13.840
AUDIENCE: Thank you.

00:44:13.840 --> 00:44:17.860
And just to be clear--
I intend to do this--

00:44:17.860 --> 00:44:21.414
we switch over to HTTPS
in the canonicals.

00:44:21.414 --> 00:44:22.080
PIERRE FAR: Yes.

00:44:22.080 --> 00:44:24.357
AUDIENCE: And we
set up the 301s.

00:44:24.357 --> 00:44:26.690
We're going to retain all our
indexing in Google search?

00:44:26.690 --> 00:44:27.356
PIERRE FAR: Yes.

00:44:27.356 --> 00:44:29.430
So it's a per URL process.

00:44:29.430 --> 00:44:31.700
It's an organic
process for each URL.

00:44:31.700 --> 00:44:34.251
So it's not like the site will
move million of pages in one

00:44:34.251 --> 00:44:34.750
go.

00:44:34.750 --> 00:44:38.040
It's as we process-- as we
crawl and process each URL.

00:44:38.040 --> 00:44:40.460
So it's a move over time.

00:44:40.460 --> 00:44:42.640
It's not like everything
moves in one go.

00:44:42.640 --> 00:44:48.330
So the indexing signals will
be consolidated and everything.

00:44:48.330 --> 00:44:51.021
So if you do that
correctly, you'll be fine.

00:44:51.021 --> 00:44:51.520
OK?

00:44:51.520 --> 00:44:52.894
You might see a
bit of hiccuping,

00:44:52.894 --> 00:44:54.787
but you shouldn't be
worried about that.

00:44:54.787 --> 00:44:55.620
AUDIENCE: Thank you.

00:44:55.620 --> 00:44:56.815
ILYA GRIGORIK: So I think
we're almost out of time,

00:44:56.815 --> 00:44:58.050
so maybe just one more.

00:44:58.050 --> 00:44:58.758
PIERRE FAR: Yeah.

00:44:58.758 --> 00:44:59.719
Last question, please.

00:44:59.719 --> 00:45:00.260
AUDIENCE: Hi.

00:45:00.260 --> 00:45:02.051
So I just wanted to
know that you guys have

00:45:02.051 --> 00:45:03.820
any suggestions
for older browsers.

00:45:03.820 --> 00:45:05.630
Is there something?

00:45:05.630 --> 00:45:07.820
Like for instance,
Android 2.3.6 browser

00:45:07.820 --> 00:45:10.250
does not let you install
[INAUDIBLE] certificates

00:45:10.250 --> 00:45:11.300
and stuff for that.

00:45:11.300 --> 00:45:14.897
So is there anything
I can do for that?

00:45:14.897 --> 00:45:16.730
ILYA GRIGORIK: I'm not
sure about installing

00:45:16.730 --> 00:45:17.631
the certificates.

00:45:17.631 --> 00:45:19.880
I thought you were going to
ask about things like SNI.

00:45:19.880 --> 00:45:22.500
So if you need to
support older clients,

00:45:22.500 --> 00:45:25.134
you will need a
dedicated IP address.

00:45:25.134 --> 00:45:27.550
That's something that you need
to look into-- so if you're

00:45:27.550 --> 00:45:29.450
targeting older browsers.

00:45:29.450 --> 00:45:31.950
But I do believe there
is a way to load--

00:45:31.950 --> 00:45:35.060
like if you need to test,
you can load and whitelist

00:45:35.060 --> 00:45:38.707
certificates on Android,
even on the older versions.

00:45:38.707 --> 00:45:39.248
AUDIENCE: OK.

00:45:39.248 --> 00:45:40.532
Thanks.

00:45:40.532 --> 00:45:41.240
PIERRE FAR: Cool.

00:45:41.240 --> 00:45:43.290
Thank you, guys.

