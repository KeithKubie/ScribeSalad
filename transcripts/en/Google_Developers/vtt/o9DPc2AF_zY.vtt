WEBVTT
Kind: captions
Language: en

00:00:00.880 --> 00:00:02.812
MARCUS SMITH: My
name is Marcus Smith.

00:00:02.812 --> 00:00:04.270
ERIK RAHTJEN: And
I'm Erik Rahtjen.

00:00:04.270 --> 00:00:06.610
MARCUS SMITH: And we are
both the software developers

00:00:06.610 --> 00:00:10.510
at Stable Kernel, which is a
mobile consultancy in Atlanta.

00:00:10.510 --> 00:00:13.350
We've both done full stat
Dart applications for clients

00:00:13.350 --> 00:00:15.059
that we've got live now.

00:00:15.059 --> 00:00:16.600
For the web, we're
using AngularDart,

00:00:16.600 --> 00:00:18.280
which you're all familiar with.

00:00:18.280 --> 00:00:20.050
For the back end,
we're using Aqueduct,

00:00:20.050 --> 00:00:24.260
which is a back end framework
that we've developed for Dart.

00:00:24.260 --> 00:00:27.790
It's HTTP multithreaded
object-oriented.

00:00:27.790 --> 00:00:29.230
We've got our own ORM.

00:00:29.230 --> 00:00:31.960
It's got built-in
OAuth 2 and [INAUDIBLE]

00:00:31.960 --> 00:00:34.570
runs just kind of
Dart VM on the server.

00:00:34.570 --> 00:00:36.730
We're here today to kind
of go over briefly how

00:00:36.730 --> 00:00:38.620
we are deploying
these full stack Dart

00:00:38.620 --> 00:00:44.400
applications on Google Cloud
using Docker and Kubernetes.

00:00:44.400 --> 00:00:46.150
So Docker, if you're
not familiar with it,

00:00:46.150 --> 00:00:48.510
is a containerization service.

00:00:48.510 --> 00:00:53.170
It's a lightweight way of
packaging up your code and all

00:00:53.170 --> 00:00:56.140
of its dependencies in a way
that can be consistently run

00:00:56.140 --> 00:00:57.120
on any kind of machine.

00:00:57.120 --> 00:00:59.661
So you don't need to worry if
it's Linux, or Windows, or Mac,

00:00:59.661 --> 00:01:00.670
or anything else.

00:01:00.670 --> 00:01:03.850
And to build your application
into a Docker image,

00:01:03.850 --> 00:01:05.650
you just use a Docker file.

00:01:05.650 --> 00:01:08.740
And this is extremely easy
for both Angular and Aqueduct

00:01:08.740 --> 00:01:11.590
applications, because
Google provides a base Dart

00:01:11.590 --> 00:01:14.960
image, which for Angular, you
can use as a build environment.

00:01:14.960 --> 00:01:17.980
And then we tend to run ours
in an Nginx Docker image

00:01:17.980 --> 00:01:18.940
after that.

00:01:18.940 --> 00:01:22.720
And Aqueduct is able to just
use the Dart base image.

00:01:22.720 --> 00:01:24.700
And all of this is fairly
boilerplate to where

00:01:24.700 --> 00:01:26.680
we tend to use the same
one for every project

00:01:26.680 --> 00:01:28.870
with maybe just a
minor tweak or so.

00:01:28.870 --> 00:01:33.030
And then Erik is going to
tell you about Kubernetes.

00:01:33.030 --> 00:01:37.500
ERIK RAHTJEN: So Kubernetes
is a container orchestration

00:01:37.500 --> 00:01:39.560
service.

00:01:39.560 --> 00:01:45.630
It basically takes your
applications in Docker images

00:01:45.630 --> 00:01:47.400
and deploys them
out onto a series

00:01:47.400 --> 00:01:50.220
of nodes called a cluster.

00:01:50.220 --> 00:01:51.890
It Manages the deployment rules.

00:01:51.890 --> 00:01:56.640
So say, if you didn't ever
want a container of yours

00:01:56.640 --> 00:01:58.830
to be using more
than 50% CPU, it

00:01:58.830 --> 00:02:00.930
would go ahead and
launch another one.

00:02:00.930 --> 00:02:03.310
Or if it needed to
provision a new node,

00:02:03.310 --> 00:02:05.580
it could go ahead
and handle that, too.

00:02:05.580 --> 00:02:07.920
Additionally, it handles
internal networking

00:02:07.920 --> 00:02:09.747
between your applications.

00:02:09.747 --> 00:02:11.580
So it'll go ahead and
set up all the routing

00:02:11.580 --> 00:02:13.920
between those for you.

00:02:13.920 --> 00:02:17.920
And it also handles all
external communications as well.

00:02:17.920 --> 00:02:19.260
MARCUS SMITH: I think--

00:02:19.260 --> 00:02:20.266
ERIK RAHTJEN: So--

00:02:20.266 --> 00:02:21.601
MARCUS SMITH: I'll take it.

00:02:21.601 --> 00:02:22.600
ERIK RAHTJEN: All right.

00:02:22.600 --> 00:02:25.120
MARCUS SMITH: I think the most
appealing thing for me about

00:02:25.120 --> 00:02:27.820
Kubernetes is you're just
defining the rules for how

00:02:27.820 --> 00:02:29.230
you want your deployment to be.

00:02:29.230 --> 00:02:32.217
So in programming terms, it'd
be all declarative instead

00:02:32.217 --> 00:02:32.800
of imperative.

00:02:32.800 --> 00:02:35.310
You just tell it, here's how
I want my deployment to be.

00:02:35.310 --> 00:02:39.370
I want it to have three Aqueduct
servers running, or no more

00:02:39.370 --> 00:02:41.350
than five, no less than three.

00:02:41.350 --> 00:02:43.360
And here's the parameters
I want it to run in.

00:02:43.360 --> 00:02:46.150
And it manages all the hard
parts of getting them set up

00:02:46.150 --> 00:02:48.400
and getting the right state.

00:02:48.400 --> 00:02:50.080
And what this really
boils down to is

00:02:50.080 --> 00:02:53.620
you get to spend more time
developing your applications

00:02:53.620 --> 00:02:55.960
and less time doing
DevOps, while still

00:02:55.960 --> 00:02:59.550
getting all the benefits of
professional DevOps engineers

00:02:59.550 --> 00:03:01.820
who put together Kubernetes,
and Google Cloud,

00:03:01.820 --> 00:03:03.190
and whatever else.

00:03:03.190 --> 00:03:05.440
ERIK RAHTJEN: One of the
great things about Kubernetes

00:03:05.440 --> 00:03:06.530
is it's open source.

00:03:06.530 --> 00:03:08.050
It's already super
robust, so it's

00:03:08.050 --> 00:03:10.450
easy to define a lot
of complex rules.

00:03:10.450 --> 00:03:12.100
But if it doesn't
meet your demands,

00:03:12.100 --> 00:03:15.790
you can go ahead and
extend it yourself.

00:03:15.790 --> 00:03:18.700
It is usable by any
cloud provider, not just

00:03:18.700 --> 00:03:19.302
Google Cloud.

00:03:19.302 --> 00:03:21.760
But I don't know why you'd be
a traitor, especially when it

00:03:21.760 --> 00:03:23.350
works out so well
with Google Cloud.

00:03:26.310 --> 00:03:29.080
So one of the things that
that enables you to do

00:03:29.080 --> 00:03:32.680
is it's consistent across
any of these providers

00:03:32.680 --> 00:03:34.120
or across your own bare metal.

00:03:34.120 --> 00:03:37.780
So maybe Google Cloud doesn't
provide a database server

00:03:37.780 --> 00:03:41.090
that has 10,000 gigs
of RAM, or whatever,

00:03:41.090 --> 00:03:42.269
and you want to use that.

00:03:42.269 --> 00:03:44.560
You can go ahead and do that,
and Kubernetes can manage

00:03:44.560 --> 00:03:48.550
doing those types of things.

00:03:48.550 --> 00:03:50.780
It's self-healing,
which is really neat.

00:03:50.780 --> 00:03:52.660
So if your applications
crash, it's

00:03:52.660 --> 00:03:55.340
going to go ahead and
relaunch the application.

00:03:55.340 --> 00:03:59.110
And additionally, it can kind
of take different applications

00:03:59.110 --> 00:04:02.590
and figure out, can a node
have eight of them running?

00:04:02.590 --> 00:04:03.860
Is it capable of doing that?

00:04:03.860 --> 00:04:04.360
OK.

00:04:04.360 --> 00:04:06.020
I'll pack eight onto that one.

00:04:06.020 --> 00:04:07.960
Or maybe this node
can only have four.

00:04:07.960 --> 00:04:11.440
So it can figure all
that out for you.

00:04:11.440 --> 00:04:13.510
It handles SSL
certificates as well,

00:04:13.510 --> 00:04:15.730
and TLS termination using
native load balancers

00:04:15.730 --> 00:04:19.329
to the cloud providers.

00:04:19.329 --> 00:04:23.950
MARCUS SMITH: So we know it's
kind of a lot to really cover

00:04:23.950 --> 00:04:25.520
in depth in a five-minute talk.

00:04:25.520 --> 00:04:28.510
But on our blog at
stablekernel.com/blog,

00:04:28.510 --> 00:04:31.690
we've kind of got some
walkthroughs on setting up

00:04:31.690 --> 00:04:35.260
Kubernetes and running all
the way through Google Cloud.

00:04:35.260 --> 00:04:38.636
We've got documentation
up for Aqueduct as well.

00:04:38.636 --> 00:04:39.940
ERIK RAHTJEN: Yep.

00:04:39.940 --> 00:04:41.920
MARCUS SMITH: And
then we're also--

00:04:41.920 --> 00:04:44.740
if you want to develop Dart
full time, we are hiring.

00:04:44.740 --> 00:04:47.680
So end on the good news.

00:04:47.680 --> 00:04:49.180
ERIK RAHTJEN: Yep.

00:04:49.180 --> 00:04:53.130
[APPLAUSE]

