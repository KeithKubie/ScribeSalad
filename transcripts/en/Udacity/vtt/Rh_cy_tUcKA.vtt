WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.000
So there are lots of different ways we could solve this.

00:00:02.000 --> 00:00:05.000
Here's one: so we're going to define the procedure, is_friend.

00:00:05.000 --> 00:00:09.000
First, we need to check if the name starts with a "D".

00:00:09.000 --> 00:00:12.354
If it does, then our result is True, and we can return True right away.

00:00:12.354 --> 00:00:14.446
If it's not, we're not done yet.

00:00:14.446 --> 00:00:18.000
We need to check if the name starts with the letter, "N".

00:00:18.000 --> 00:00:20.277
If it does, we return True.

00:00:20.277 --> 00:00:23.462
If we got to here, it didn't start with either a "D" or an "N",

00:00:23.462 --> 00:00:25.523
so that means we should return False.

00:00:25.523 --> 00:00:28.000
Let's see how that works.

00:00:28.000 --> 00:00:31.000
So we have 3 tests.

00:00:31.000 --> 00:00:33.000
The first one starts with a "D", so it should be True.

00:00:33.000 --> 00:00:36.000
The second one starts with an "N", should be True,

00:00:36.000 --> 00:00:39.400
and the third one starts with an "F", so it should be False.

00:00:39.400 --> 00:00:42.000
So there are lots of different ways we could have solved this.

00:00:42.000 --> 00:00:45.000
We could have used an "else" here--so we could have had an "else",

00:00:45.000 --> 00:00:47.000
and inside the "else" have the "if".

00:00:47.000 --> 00:00:52.000
And if it's not, then we could have an "else" here and the return, False.

00:00:52.000 --> 00:00:54.000
That will work, just the same--

00:00:54.000 --> 00:00:57.000
a bit more code, but it also shows the structure

00:00:57.000 --> 00:00:59.000
perhaps a little better than the first one.

00:00:59.000 --> 00:01:02.000
The other thing we could do is return the result right away.

00:01:02.000 --> 00:01:06.000
To do that, we need to introduce a new Python operator that we haven't used yet,

00:01:06.000 --> 00:01:08.000
and that's the "or" operator.

00:01:08.000 --> 00:01:10.000
So we could do just this.

00:01:10.000 --> 00:01:13.000
This would be the equivalent of the long procedure we had before,

00:01:13.000 --> 00:01:17.000
where checking if the name at position zero is equal to "D"

00:01:17.000 --> 00:01:22.000
or the result of name at position zero is equal to "N".

00:01:22.000 --> 00:01:24.000
That produces the same result.

00:01:24.000 --> 00:01:24.500
And we've introduced the new construct, "or",

00:01:24.500 --> 00:01:25.000
which gives us the logical "or" of the 2 operands on its left and right.

