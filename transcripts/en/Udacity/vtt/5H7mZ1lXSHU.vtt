WEBVTT
Kind: captions
Language: en

00:00:02.000 --> 00:00:02.730
Hi everyone.

00:00:02.730 --> 00:00:06.360
Welcome again to today's
intro to programming webcast.

00:00:06.360 --> 00:00:09.250
My name is Mark and to my left is-
&gt;&gt; My name is Jonah.

00:00:09.250 --> 00:00:10.696
We're coaches here at Udacity.

00:00:10.696 --> 00:00:13.490
&gt;&gt; I hope everyone is doing well today.

00:00:13.490 --> 00:00:19.520
This is an August month so hopefully for
some of you it's sunny weather.

00:00:19.520 --> 00:00:21.150
I know it's sunny weather here,
[LAUGH] in California.

00:00:21.150 --> 00:00:24.346
&gt;&gt; It was raining in L.A.
&gt;&gt; It was raining in L.A.

00:00:24.346 --> 00:00:25.052
&gt;&gt; It was pretty crazy.

00:00:25.052 --> 00:00:25.970
&gt;&gt; There was flooding so.

00:00:25.970 --> 00:00:30.772
[LAUGH] Hopefully we can get more
rain but not in the flooding kind and

00:00:30.772 --> 00:00:32.718
more in California.

00:00:32.718 --> 00:00:37.650
Today we're going to be talking about
the topic of planning an entire website

00:00:37.650 --> 00:00:38.580
from front to back.

00:00:39.910 --> 00:00:43.970
And this is a more
higher-level presentation.

00:00:43.970 --> 00:00:47.125
We're not going to dive
too much into code.

00:00:47.125 --> 00:00:51.730
Not too much into implementation of
this code because that deserves a whole

00:00:51.730 --> 00:00:55.673
lecture, even a whole series
of lectures in itself.

00:00:55.673 --> 00:01:01.235
What we're going to do is we're going to
give you an overview of the lay of

00:01:01.235 --> 00:01:02.437
the land like the force.

00:01:02.437 --> 00:01:07.620
We're going to show you the bigger
picture of how you start thinking

00:01:07.620 --> 00:01:11.882
about a website and what are the things
that you need to think about and

00:01:11.882 --> 00:01:16.360
plan for.

00:01:16.360 --> 00:01:19.898
And these are the three things that
we're going to be really learning is

00:01:19.898 --> 00:01:23.131
that when you walk away from this
presentation, you're going to

00:01:23.131 --> 00:01:27.096
learn the crucial components that make
up a website and then you'll be able to

00:01:27.096 --> 00:01:30.207
answer the big questions
involved in planning out website.

00:01:30.207 --> 00:01:33.661
You're going to know the technologies
required in order to deliver

00:01:33.661 --> 00:01:36.548
content to the Internet user and
you'll be able to know

00:01:36.548 --> 00:01:40.838
how to research what technology you need
to implement after this presentation.

00:01:40.838 --> 00:01:45.680
So basically, it's after this
presentation you'll be able to walk

00:01:45.680 --> 00:01:50.035
away knowing on a good general
level of what needs to get done.

00:01:50.035 --> 00:01:55.174
You, yourself as a program you may not
know everything that you need to do but

00:01:55.174 --> 00:01:57.984
you at least know what
needs to get done and

00:01:57.984 --> 00:02:01.790
then you'll be able to research,
get help.

00:02:01.790 --> 00:02:07.223
Hire someone, contract out some work and
you'll be able to at least know,

00:02:07.223 --> 00:02:11.967
at the minimum, when you're
talking with another programmer,

00:02:11.967 --> 00:02:16.940
you could talk with them and
relay to them what you need to do.

00:02:16.940 --> 00:02:20.090
&gt;&gt; That's really half to battle
is knowing what you need to do,

00:02:20.090 --> 00:02:23.690
it's like once you have an idea
of everything you need to do and

00:02:23.690 --> 00:02:30.180
the steps to do, executing is not nearly
as hard as figuring all that out.

00:02:30.180 --> 00:02:34.210
So making sure that you have these
frameworks set up beforehand

00:02:34.210 --> 00:02:35.710
makes life a lot easier later on.

00:02:35.710 --> 00:02:36.923
&gt;&gt; I totally agree, and

00:02:36.923 --> 00:02:40.840
I dare say 90% percent of
the programmer's job is just research.

00:02:40.840 --> 00:02:42.028
&gt;&gt; Yeah.
&gt;&gt; You're just researching,

00:02:42.028 --> 00:02:44.660
you're just figuring out how to
orchestrate and put things together.

00:02:47.090 --> 00:02:49.450
Before we start even further let's,
we have a couple questions-

00:02:49.450 --> 00:02:50.065
&gt;&gt; Yeah, [CROSSTALK] let's take a look.

00:02:50.065 --> 00:02:52.305
&gt;&gt; [CROSSTALK] It's sad.

00:02:52.305 --> 00:02:53.020
Answer Brandon's.

00:02:53.020 --> 00:02:56.435
&gt;&gt; Brandon Hastings has
aa interesting question.

00:02:56.435 --> 00:02:59.145
Will it be possible
to get this recorded?

00:02:59.145 --> 00:03:02.035
And yes, we are currently recording.

00:03:02.035 --> 00:03:05.725
If you're watching right now, you're
probably, it's recorded most likely.

00:03:05.725 --> 00:03:09.514
So it will be on the Google+ page and
you can access it at any time.

00:03:09.514 --> 00:03:12.107
It also will be put on the chorus
later at some date and

00:03:12.107 --> 00:03:16.117
then there's a whole list of them a link
to which will be on a Google+ page.

00:03:16.117 --> 00:03:19.097
&gt;&gt; Yeah,
also we'll post our transcripts and

00:03:19.097 --> 00:03:21.357
our notes in the discussion
forums as well, so

00:03:21.357 --> 00:03:25.557
there's there will be plenty of ways for
you to access this video recording.

00:03:27.060 --> 00:03:31.350
&gt;&gt; And then we have another interesting
question, very practical question from

00:03:31.350 --> 00:03:35.945
Cam Su Jung and they ask, in general
which job is more highly paid,

00:03:35.945 --> 00:03:39.640
a front end developer or
backend developer?

00:03:39.640 --> 00:03:44.052
&gt;&gt; That's, you can't really
answer that question because-

00:03:44.052 --> 00:03:45.570
&gt;&gt; It's tough, there's so

00:03:45.570 --> 00:03:51.070
many other variables just because you
have a skill set in front-end technology

00:03:51.070 --> 00:03:55.650
or back end technology because depends
on how good you are as a person.

00:03:55.650 --> 00:04:00.298
[LAUGH] Depends on how much you know and
depends on what's important for

00:04:00.298 --> 00:04:02.440
the current company right now.

00:04:03.450 --> 00:04:06.750
If they have an army of
back-end engineers, well, and

00:04:06.750 --> 00:04:12.618
if they only have one and
they need one lead front-end engineer,

00:04:12.618 --> 00:04:16.690
your position may be more valuable and
vice versa.

00:04:16.690 --> 00:04:18.906
So it also depends on your region, too.

00:04:18.906 --> 00:04:20.062
Where you live.

00:04:20.062 --> 00:04:25.959
If you're talking about corporations
who need a Java back-end developer,

00:04:25.959 --> 00:04:31.127
then they may pay a little more but
then if you'll look at a startup,

00:04:31.127 --> 00:04:35.411
they may pay in equity,
they make pay in stock options.

00:04:35.411 --> 00:04:39.509
So it really depends.

00:04:39.509 --> 00:04:43.096
There is no answer to this question.

00:04:43.096 --> 00:04:47.516
&gt;&gt; It's tough and I think that if you're
trying to decide between being front-end

00:04:47.516 --> 00:04:51.416
and back-end, hopefully this
presentation should actually help you

00:04:51.416 --> 00:04:54.861
since we're going to cover both
sides and maybe you can look and

00:04:54.861 --> 00:04:58.241
be like, I'm a little bit
better at designing things and

00:04:58.241 --> 00:05:00.910
understanding how users
interact with things.

00:05:00.910 --> 00:05:03.972
Or maybe you're like, I'm a lot
better at understanding databases and

00:05:03.972 --> 00:05:05.287
how things connect together.

00:05:05.287 --> 00:05:08.125
Then in that case, you'd probably
want to be a back-end engineer.

00:05:08.125 --> 00:05:14.242
So this might help you think about
which path you want to go down.

00:05:14.242 --> 00:05:19.769
&gt;&gt; Yeah, and, Jobah, I like your
comment of using what you like and

00:05:19.769 --> 00:05:21.689
what you're good at.

00:05:21.689 --> 00:05:22.211
&gt;&gt; Yeah.

00:05:22.211 --> 00:05:25.144
&gt;&gt; And what's your natural tendency?

00:05:25.144 --> 00:05:30.324
And honestly, at the end of the day,
you work up to the,

00:05:30.324 --> 00:05:36.831
and you gain enough expertise that
it's more about liking your job and

00:05:36.831 --> 00:05:41.037
liking what you do versus
just getting paid.

00:05:41.037 --> 00:05:41.884
&gt;&gt; Exactly.

00:05:41.884 --> 00:05:42.638
&gt;&gt; And being good at it.

00:05:42.638 --> 00:05:45.064
You're good at it,
you'll probably be paid better.

00:05:45.064 --> 00:05:46.515
&gt;&gt; The money will follow, honestly.

00:05:46.515 --> 00:05:49.730
If you like and you're really good
at it, the money will just follow.

00:05:49.730 --> 00:05:52.331
But it shouldn't be just
about purely money.

00:05:52.331 --> 00:05:53.470
&gt;&gt; I agree.

00:05:53.470 --> 00:05:55.173
&gt;&gt; All right, let's move on.

00:05:55.173 --> 00:05:56.740
All right, so can you screenshare?

00:05:58.640 --> 00:05:59.240
&gt;&gt; Yeah, you're live.

00:05:59.240 --> 00:05:59.950
&gt;&gt; All right, I'm live.

00:05:59.950 --> 00:06:03.310
So we're going to use Prezi to present.

00:06:03.310 --> 00:06:05.460
Yeah.
So let's just get started.

00:06:05.460 --> 00:06:07.170
Planning a website from front to back.

00:06:07.170 --> 00:06:11.120
Understanding the big questions
to help you plan your website.

00:06:11.120 --> 00:06:15.543
And the first thing we need to [LAUGH]
actually really align everyone on,

00:06:15.543 --> 00:06:19.522
I think, is to make sure that,
okay, let's align everyone and

00:06:19.522 --> 00:06:21.750
ask ourselves, what is a website?

00:06:23.200 --> 00:06:25.569
Well, what really is a website, Jonah?

00:06:25.569 --> 00:06:31.322
So for most people a lot of people think
a website is just a page of information.

00:06:31.322 --> 00:06:33.226
There's pictures and there's text.

00:06:33.226 --> 00:06:38.762
I just put a URL, like I go to
Google.com, I go to Yahoo.com,

00:06:38.762 --> 00:06:43.359
NewYorkTimes.com to get information and
it did and

00:06:43.359 --> 00:06:48.908
there's a lot of magic,
magic happens and I get information.

00:06:48.908 --> 00:06:52.130
It's like my universal library, right.

00:06:52.130 --> 00:06:53.163
So that's what a lot
of people think about.

00:06:53.163 --> 00:06:55.171
&gt;&gt; I mean back in the 90s
that what it was like.

00:06:55.171 --> 00:07:00.524
&gt;&gt; It was just a way for us to
access information from the library,

00:07:00.524 --> 00:07:06.896
but the Internet has brought so much
that it's more than static pages now.

00:07:06.896 --> 00:07:13.023
I would like to talk line with everyone
about the definition of a website and

00:07:13.023 --> 00:07:17.495
really, the definition that I think,
this is for me,

00:07:17.495 --> 00:07:22.261
from a programming side,
not just like a normal user, but

00:07:22.261 --> 00:07:25.887
it's a framework for delivering content.

00:07:25.887 --> 00:07:28.116
[BLANK_AUDIO]

00:07:28.116 --> 00:07:31.605
Whatever we want to deliver.

00:07:31.605 --> 00:07:34.110
Music, videos, news.

00:07:34.110 --> 00:07:35.960
Whatever it is,
whatever information it is.

00:07:35.960 --> 00:07:37.266
It's a framework.

00:07:37.266 --> 00:07:39.051
It is a system.

00:07:39.051 --> 00:07:41.829
It's a system made of a series of small,

00:07:41.829 --> 00:07:46.000
little components that deliver
this content to our users and

00:07:46.000 --> 00:07:50.825
that's really I want to line everyone
about this definition of website

00:07:50.825 --> 00:07:55.262
because it makes it easy for
us this understand the components.

00:07:55.262 --> 00:07:56.190
Of a website and

00:07:56.190 --> 00:08:00.408
in therefore it makes us understand
the variables that's involved in

00:08:00.408 --> 00:08:04.980
planning on making a website because
in the end, we are orchestrating.

00:08:04.980 --> 00:08:07.120
You could think about
us as orchestrators.

00:08:07.120 --> 00:08:11.939
We're here to orchestrate and
also in basely

00:08:11.939 --> 00:08:17.470
link small look of components
together that deliver our website.

00:08:19.470 --> 00:08:22.130
Let's see.
Whoops, let's go back here.

00:08:22.130 --> 00:08:26.830
Yeah, and I'll just tell you right now.

00:08:26.830 --> 00:08:29.190
What are the crucial
components of a website?

00:08:29.190 --> 00:08:31.710
And these are the things that come
off the top of my head, really.

00:08:31.710 --> 00:08:36.559
These are the main basic components,
like HTML, CSS, User Design,

00:08:36.559 --> 00:08:42.409
JavaScript, Web Server Administration,
Databases, Caching, Server End Points.

00:08:42.409 --> 00:08:46.160
These are all big time

00:08:46.160 --> 00:08:49.210
components that you want to think
about when you're designing a website.

00:08:49.210 --> 00:08:52.770
And these are the components
to actually help you deliver

00:08:52.770 --> 00:08:55.353
the content of your website.

00:08:55.353 --> 00:09:00.980
And really,
there's a lot of components and so

00:09:00.980 --> 00:09:06.430
there's a lot and to help us as
programmers to categorize and

00:09:06.430 --> 00:09:10.790
figure out okay how to
organize this information,

00:09:10.790 --> 00:09:14.800
we often tend to put these
components into two categorize.

00:09:14.800 --> 00:09:17.990
The front-end and the back-end.

00:09:17.990 --> 00:09:23.050
And this is will be the most common
terminology that you will ever hear

00:09:23.050 --> 00:09:27.312
in your web development programming
career, even programmers in general.

00:09:27.312 --> 00:09:30.168
The front-end and the back-end, and

00:09:30.168 --> 00:09:36.040
the front-end really involves the case
of anything that the user sees.

00:09:36.040 --> 00:09:40.500
The browser, the design of the page,
the JavaScripting of the page,

00:09:40.500 --> 00:09:43.490
anything that the user sees in
the browser, that's front-end design.

00:09:43.490 --> 00:09:46.510
Like all those components such as HTML,
CSS,

00:09:46.510 --> 00:09:49.790
User Design,
that's front-end development.

00:09:51.890 --> 00:09:54.830
Now, there's another
side called the back-end.

00:09:54.830 --> 00:09:56.730
And that's where no one sees.

00:09:58.160 --> 00:09:59.510
Your users, they don't really see that.

00:09:59.510 --> 00:10:02.680
They don't really see the servers and
the computers that's actually

00:10:02.680 --> 00:10:06.570
pushing this information and
delivering this content to your users.

00:10:06.570 --> 00:10:10.100
Because for back-end development
it's all about making

00:10:10.100 --> 00:10:12.200
sure that the servers
are running correctly,

00:10:12.200 --> 00:10:16.760
the servers can actually deliver content
to your browser to the front-end.

00:10:16.760 --> 00:10:21.517
The back-end accesses the database and
makes sure that it

00:10:21.517 --> 00:10:26.760
returns the appropriate
requests that the front-end or

00:10:26.760 --> 00:10:30.070
the user will have towards our server.

00:10:30.070 --> 00:10:34.980
So basically that's really two
categories that you really need

00:10:34.980 --> 00:10:37.088
to think about internationalists
the front-end and back.

00:10:37.088 --> 00:10:41.320
Well, let's see.

00:10:41.320 --> 00:10:47.790
And now we're going to move on to the
front-end and I'm going to let Jonah to

00:10:47.790 --> 00:10:51.950
explain more about the front and all the
components that we should think about.

00:10:51.950 --> 00:10:55.380
&gt;&gt; So
the front-end is usually what you know.

00:10:55.380 --> 00:10:58.330
As Mark said, the first thing that you
see when you're planning your website

00:10:58.330 --> 00:11:01.970
and as such it's also the first thing
you want to start thinking about

00:11:01.970 --> 00:11:03.095
when you're on your website.

00:11:03.095 --> 00:11:04.490
It's the most visual component.

00:11:06.470 --> 00:11:08.840
It's where everyone's familiar with

00:11:08.840 --> 00:11:11.820
like is design when they
communicate with your website.

00:11:11.820 --> 00:11:13.460
It's always through the front-end.

00:11:13.460 --> 00:11:16.960
So you want to make sure it's clean,
it's well designed and

00:11:16.960 --> 00:11:20.580
everything works from
the user's perspective.

00:11:20.580 --> 00:11:25.610
So the questions you want to think about
are how are we going to lay it out?

00:11:25.610 --> 00:11:27.150
Where are the images going to be?

00:11:27.150 --> 00:11:30.070
Where are the techs going to be?

00:11:30.070 --> 00:11:35.020
How is everything going to
be laid out basically.

00:11:35.020 --> 00:11:38.850
Another thing you want to think
about is what sort of content.

00:11:38.850 --> 00:11:42.750
So if you have a news site,
you want to think about I want to put

00:11:42.750 --> 00:11:47.740
articles in and
videos in put maybe user responses in.

00:11:47.740 --> 00:11:51.810
Another thing to think about is how
is he going to interact at this page.

00:11:51.810 --> 00:11:56.500
So if it's Facebook, they're just
going to log in, they're going to

00:11:56.500 --> 00:11:59.620
comment on their friends' posts, they're
going to like somebody's pictures.

00:11:59.620 --> 00:12:03.660
That's what they think about when we
talk about user flow and interaction.

00:12:03.660 --> 00:12:07.990
And then last component, I don't want to
say last because it's definitely

00:12:07.990 --> 00:12:10.760
very important is the color and
graphic design.

00:12:10.760 --> 00:12:14.560
And we'll talk a little bit more
about why it's important later.

00:12:14.560 --> 00:12:18.680
So one of the most important
tools that you want to start with

00:12:18.680 --> 00:12:20.870
before you do anything is.

00:12:23.510 --> 00:12:26.400
These two these, two things pen paper.

00:12:27.740 --> 00:12:30.800
You can do it on your computer,
you can design things, but

00:12:30.800 --> 00:12:34.300
I find it's really easy to get
distracted on a computer at this stage.

00:12:34.300 --> 00:12:38.950
So, it's best sometimes to just
grab a piece of blank paper and

00:12:38.950 --> 00:12:43.400
start drawing things and when I talk
about trying things I mean trying boxes.

00:12:43.400 --> 00:12:48.470
So, you talked earlier about how
HTML is all made up of boxes

00:12:48.470 --> 00:12:53.030
their nested boxes, but everything is
laid out in these the square things.

00:12:53.030 --> 00:12:57.372
So, what I have here,

00:12:57.372 --> 00:13:03.990
there it is let's look
at the New York Times.

00:13:05.230 --> 00:13:06.550
This is the average website.

00:13:06.550 --> 00:13:08.700
You'll go to it, and it looks cool.

00:13:08.700 --> 00:13:10.300
You have some information.

00:13:10.300 --> 00:13:11.540
But if you look a little bit deeper,

00:13:11.540 --> 00:13:15.230
you can see that it's actually made
up of boxes like everything else.

00:13:15.230 --> 00:13:18.810
I use this tool called Wirify
to make this all together.

00:13:18.810 --> 00:13:21.014
So you'll see that
the header here is a box.

00:13:21.014 --> 00:13:25.450
The video on the front page is a box.

00:13:25.450 --> 00:13:30.720
The article title is a box and
it's all laid out in this fashion so

00:13:30.720 --> 00:13:35.450
that it's easy for
us to think about things abstractly.

00:13:35.450 --> 00:13:39.090
Because it's easy to get caught
up in small details when you're

00:13:39.090 --> 00:13:42.350
planning a website, so
you want to start big scale.

00:13:42.350 --> 00:13:43.900
Where do I put things?

00:13:43.900 --> 00:13:49.170
And then once you have these things you

00:13:49.170 --> 00:13:51.750
want to think about what
goes in each of these boxes.

00:13:51.750 --> 00:13:55.240
So the top is probably
the most important thing

00:13:55.240 --> 00:13:56.530
that the user is going to look at.

00:13:57.720 --> 00:14:00.350
So we put the header there
like the New York Times.

00:14:01.380 --> 00:14:03.160
Column X.

00:14:03.160 --> 00:14:06.260
So put the header there and
then the next thing that's probably

00:14:06.260 --> 00:14:09.020
you're going to look at the thing
right in the middle of the page.

00:14:09.020 --> 00:14:10.860
That's going to be like your video or

00:14:10.860 --> 00:14:15.570
something and next you're going to
think about where you put your article.

00:14:15.570 --> 00:14:21.340
So it's important to think about where
the user's going to look when he or

00:14:21.340 --> 00:14:22.480
she lands on your page.

00:14:23.690 --> 00:14:27.710
And this is sort of part of the visual
flow and you want to think about putting

00:14:27.710 --> 00:14:31.910
the important parts central and
then auxiliary parts on the side.

00:14:31.910 --> 00:14:34.880
So you notice that New York Times
does this really well and

00:14:34.880 --> 00:14:40.280
it's actually based really closely on
the actual New York Times newspaper.

00:14:40.280 --> 00:14:43.980
And that's not just because they're
trying to emulate print media.

00:14:43.980 --> 00:14:47.760
People of thought about this before and
web design sort of has

00:14:47.760 --> 00:14:51.520
followed in the footsteps of
print design to some extent.

00:14:51.520 --> 00:14:53.900
So it's important think about

00:14:53.900 --> 00:14:58.440
how you can relate to print design
when you're designing a web page, and

00:14:58.440 --> 00:15:00.895
New York Times, I think,
is a great example of this.

00:15:00.895 --> 00:15:05.593
So let's see.

00:15:05.593 --> 00:15:11.870
Yeah so when you have a little bit more
complex things like popular posts,

00:15:11.870 --> 00:15:13.830
this isn't something that you
can just put on your page.

00:15:13.830 --> 00:15:17.340
So you have to start thinking
about what each box is going to do

00:15:17.340 --> 00:15:18.650
in terms of the back-end.

00:15:18.650 --> 00:15:20.740
So you can see that we're
already starting to transition

00:15:20.740 --> 00:15:23.630
from the front-end to
the back-end at this point, and

00:15:23.630 --> 00:15:29.655
you have to think about what sort
code each element is going to use.

00:15:29.655 --> 00:15:33.458
So I put in HTML five for
the video right there and

00:15:33.458 --> 00:15:38.227
that might be a way that you can
put in a video into your page.

00:15:38.227 --> 00:15:43.123
And I'm going throw around a method or
on some terms here that you might not be

00:15:43.123 --> 00:15:48.095
familiar with, but if you learn them as
you go through or just sort of thinking

00:15:48.095 --> 00:15:53.540
about things in a higher level right
now and if you look at popular posts.

00:15:53.540 --> 00:15:57.872
You can't just write out the post and
expect it to refresh automatically.

00:15:57.872 --> 00:16:01.592
It's going to have to connect to
a database in the background so,

00:16:01.592 --> 00:16:03.430
as you go through, make notes.

00:16:03.430 --> 00:16:06.510
And be like okay, I have this
popular post box in the right.

00:16:06.510 --> 00:16:08.920
I'm going to have to have it
connect to a database later on, and

00:16:08.920 --> 00:16:11.380
I should start thinking
about how I want to do that.

00:16:12.680 --> 00:16:17.385
and then, as far as user interaction,
you want to to put login box,

00:16:17.385 --> 00:16:22.010
maybe somewhere where the user's
going to see it quickly.

00:16:22.010 --> 00:16:25.190
So, the top right is a great place
that the New York Times puts it,

00:16:25.190 --> 00:16:29.000
and then you want to think about, also,
what sort of code this is going to use?

00:16:29.000 --> 00:16:31.380
Probably use some JavaScript, some CSS,

00:16:31.380 --> 00:16:35.410
and then, you want to keep this in
mind as you're planning these things.

00:16:37.490 --> 00:16:38.000
Cool.

00:16:38.000 --> 00:16:43.490
So, the wireframing stage is really
useful for thinking about colors.

00:16:43.490 --> 00:16:47.480
You'll see that right now,
everything's in grayscale.

00:16:47.480 --> 00:16:50.220
And as you're writing out these boxes,

00:16:50.220 --> 00:16:53.650
you can put things in different
shades as you put them in.

00:16:54.700 --> 00:16:59.120
And so lighter shades will be lighter
colors, darker shades be darker colors.

00:16:59.120 --> 00:17:02.070
And you might not think that colors are
that important and going into your page,

00:17:02.070 --> 00:17:08.060
is like it's just cosmetic, but
the colors in the layout and the graphic

00:17:08.060 --> 00:17:13.167
design and everything is very important,
when you're looking at a page.

00:17:13.167 --> 00:17:18.170
When I land on a page that's
not that important and

00:17:18.170 --> 00:17:21.859
there's bad graphic design,
I want to leave it.

00:17:21.859 --> 00:17:26.622
So, if you have run into [CROSSTALK]
&gt;&gt; This is sides or

00:17:26.622 --> 00:17:29.035
the colors are just awful.

00:17:29.035 --> 00:17:30.350
&gt;&gt; Yes exactly.

00:17:30.350 --> 00:17:37.270
So companies spend millions of dollars
sometimes redesigning their websites.

00:17:37.270 --> 00:17:38.410
Yahoo has gone through it.

00:17:38.410 --> 00:17:43.490
Spotify just did a redesign,
it's best to start with the good design,

00:17:43.490 --> 00:17:47.610
so that you don't have to go back and
redesign everything, and

00:17:47.610 --> 00:17:53.020
it makes the navigation easier, it will
make your website more pleasant to use.

00:17:53.020 --> 00:17:55.670
It will make it more likely that people
will come back and use it later,

00:17:55.670 --> 00:17:59.230
which is really just
the goal in the end.

00:17:59.230 --> 00:18:03.510
So as I said, you can shape things
to make sure the contrast is good.

00:18:03.510 --> 00:18:05.220
A good rule is to.

00:18:05.220 --> 00:18:09.450
Group things that are similar shaded
with each other, so you'll have

00:18:09.450 --> 00:18:13.710
dark things on the right as you say and
then the gray thing in the middle.

00:18:13.710 --> 00:18:15.260
And then darkening the top.

00:18:15.260 --> 00:18:18.250
And contrast is good,
it will draw your eye to it,

00:18:18.250 --> 00:18:22.970
but you don't want to overuse contrast.

00:18:22.970 --> 00:18:26.490
So once you have this all laid out and
you're basically done with your

00:18:26.490 --> 00:18:30.710
wireframe, you can sort of see how
this comes together in a neat way and

00:18:30.710 --> 00:18:32.350
at this point, you have to think about,

00:18:32.350 --> 00:18:37.070
whether you want to design
things yourself or outsource it.

00:18:40.100 --> 00:18:43.700
because it can take a lot of time to
do it yourself, so it might be more

00:18:43.700 --> 00:18:47.100
valuable to ask somebody else
who's better at graphic design.

00:18:47.100 --> 00:18:50.550
Or you might be more personally
invested in your product, so

00:18:50.550 --> 00:18:52.180
you want to design it yourself.

00:18:52.180 --> 00:18:58.300
How you run into having to delegate
things and do insights, or.

00:18:58.300 --> 00:19:00.840
&gt;&gt; Yeah,
I'm the person who actually likes to do

00:19:00.840 --> 00:19:02.100
&gt;&gt; Anything in the house.

00:19:02.100 --> 00:19:07.570
So if sometimes fire see fire
up Adobe Illustrator to actually

00:19:07.570 --> 00:19:12.570
design my own logo or just create
my own graphics but most are for

00:19:12.570 --> 00:19:15.710
me, I like complete
control of my own website.

00:19:15.710 --> 00:19:17.270
&gt;&gt; Absolutely,
I mean that's that's cool.

00:19:18.650 --> 00:19:23.790
&gt;&gt; And if you want to have control over
it, that's that's a crucial thing for.

00:19:23.790 --> 00:19:26.972
&gt;&gt; A lot of people and
then other people maybe their,

00:19:26.972 --> 00:19:32.360
their time they want to spend it more
on making sure that the backhand works.

00:19:33.590 --> 00:19:39.630
So, that's sort of about as much as
you can do in the front end stage and,

00:19:39.630 --> 00:19:43.090
this will set you up
really well to do more.

00:19:43.090 --> 00:19:44.520
Things later on.

00:19:44.520 --> 00:19:48.150
So something else is pretty important

00:19:48.150 --> 00:19:52.170
in front end planning is thinking
about what frameworks you might use.

00:19:53.320 --> 00:19:56.410
So you can build a site from scratch.

00:19:56.410 --> 00:20:00.670
You can build a New York Times
just by coding yourself,

00:20:00.670 --> 00:20:06.030
doing every single line or make Reddit,
but there are this thing called

00:20:06.030 --> 00:20:11.220
software frameworks and it really helps
us to speed up the development process.

00:20:11.220 --> 00:20:15.910
Basically it takes all the things
that other people it used before, and

00:20:15.910 --> 00:20:20.737
puts it into a prepackaged
set of code so

00:20:20.737 --> 00:20:26.490
CSS, we have frameworks like Bootstrap,
Pure CSS, and Cascade,.

00:20:26.490 --> 00:20:29.690
And these are sort of like prepackaged.

00:20:32.550 --> 00:20:34.960
What are some examples of things
that frameworks can give you?

00:20:34.960 --> 00:20:36.250
Like login buttons.

00:20:36.250 --> 00:20:38.190
&gt;&gt; Login buttons
&gt;&gt; Color schemes

00:20:38.190 --> 00:20:38.850
&gt;&gt; Color schemes, yeah.

00:20:38.850 --> 00:20:39.860
&gt;&gt; [INAUDIBLE] Layouts,
that's a big thing.

00:20:39.860 --> 00:20:40.710
&gt;&gt; Print
&gt;&gt; Yeah.

00:20:40.710 --> 00:20:42.450
&gt;&gt; Responsive to the design too,
as well.

00:20:42.450 --> 00:20:43.670
&gt;&gt; Definitely.

00:20:43.670 --> 00:20:46.700
&gt;&gt; It's all like put the breakpoints for

00:20:46.700 --> 00:20:49.610
like your phone tablet and.desktop,
&gt;&gt; Yes.

00:20:49.610 --> 00:20:50.806
&gt;&gt; Its all programmed in for you.

00:20:50.806 --> 00:20:56.740
&gt;&gt; Yeah, great, so Mark made a really
good point there about mobile design.

00:20:56.740 --> 00:21:01.260
So when your programming's on on your
computer., it's easy to just get

00:21:01.260 --> 00:21:03.750
caught up in programming things just for
the computer.

00:21:03.750 --> 00:21:08.690
But using these frameworks like
Bootstrap helped you to think

00:21:08.690 --> 00:21:13.670
ahead about making your website look
good on a phone or a tablet, which

00:21:13.670 --> 00:21:17.060
is going to be huge in the coming years,
and it's already huge right now so.

00:21:17.060 --> 00:21:18.770
&gt;&gt; Yeah.
I actually recommend,

00:21:18.770 --> 00:21:24.040
if you're starting off your
career doing front end stuff like

00:21:24.040 --> 00:21:28.170
up this nano degree, you may want to
create your own personal website.

00:21:28.170 --> 00:21:31.130
I really recommend you just
start off mobile first.

00:21:31.130 --> 00:21:34.360
And that's actually a big
mantra right now in

00:21:34.360 --> 00:21:36.790
the front ended web
development communities.

00:21:36.790 --> 00:21:41.720
So we're telling you right now,
it's all about mobile first design.

00:21:41.720 --> 00:21:43.760
I'm starting to design
my own personal site.

00:21:43.760 --> 00:21:44.470
&gt;&gt; Cool.

00:21:44.470 --> 00:21:45.610
And it's mobile for us.

00:21:45.610 --> 00:21:51.330
I'm actually starting with the width and
height for an iPhone 4.

00:21:51.330 --> 00:21:55.600
I just want to say,
okay how does this look on a phone.

00:21:55.600 --> 00:21:59.210
I'll start there, and then I'll blow up.

00:21:59.210 --> 00:22:03.360
And it's easier for me to start small,
because I will have limited amount of

00:22:03.360 --> 00:22:07.270
space, I need to focus on
exactly what I need to display.

00:22:07.270 --> 00:22:08.410
&gt;&gt; Being efficient in space.

00:22:08.410 --> 00:22:09.550
&gt;&gt; And get very efficient, and

00:22:09.550 --> 00:22:14.469
then once I blow up, what I have I
go on to design for the desktop.

00:22:14.469 --> 00:22:15.010
&gt;&gt; Yeah.

00:22:15.010 --> 00:22:18.790
&gt;&gt; Ten 24 pixels then have all this
real estate then I can figure out okay,

00:22:18.790 --> 00:22:22.340
I have all my important things.

00:22:22.340 --> 00:22:25.750
Now what else can I add, when I blow up?

00:22:25.750 --> 00:22:26.540
&gt;&gt; Right.

00:22:26.540 --> 00:22:29.150
&gt;&gt; And we have a couple questions,
so let's answer these questions.

00:22:29.150 --> 00:22:31.835
&gt;&gt; Yes, definitely.
&gt;&gt; I'm going to get to these.

00:22:31.835 --> 00:22:35.785
S,o when you're designing
things Daniel asks.

00:22:35.785 --> 00:22:37.613
They had to allow for
all the ads in a design.

00:22:37.613 --> 00:22:39.055
That's good thinking.

00:22:39.055 --> 00:22:40.201
&gt;&gt; It's really good actually.

00:22:40.201 --> 00:22:41.915
&gt;&gt; Yeah.
&gt;&gt; It's a very good thinking.

00:22:41.915 --> 00:22:45.775
Monetization is important and yeah,

00:22:45.775 --> 00:22:49.845
thinking about where you want to
place adds is important.

00:22:49.845 --> 00:22:53.330
You don't want to have pop ups,
What is this, 1998?.

00:22:53.330 --> 00:22:57.170
You don't want to have banner
ads that flash at you.

00:22:57.170 --> 00:22:59.860
You want to think about
ways to incorporate ads, so

00:22:59.860 --> 00:23:03.540
that it's unobtrusive but still useful.

00:23:04.990 --> 00:23:07.740
So yeah, when you're boxing
things out maybe have a box for

00:23:07.740 --> 00:23:12.580
an ad, and just put it on the top right,
so it's still focal but

00:23:12.580 --> 00:23:16.030
not the main focus of your site.

00:23:16.030 --> 00:23:18.950
So yeah, think about ads,
think about monetization.

00:23:20.270 --> 00:23:22.060
I'm using this word.

00:23:22.060 --> 00:23:25.620
Monetization is just like how are you
going to make money from your site?

00:23:25.620 --> 00:23:26.940
&gt;&gt; Easily, yeah.

00:23:26.940 --> 00:23:29.890
&gt;&gt; If you're, let's say, a blog, right?

00:23:29.890 --> 00:23:31.700
&gt;&gt; Yeah.
&gt;&gt; You're a blogger.

00:23:31.700 --> 00:23:34.970
You want to make some money
off your hard earned work,

00:23:34.970 --> 00:23:40.395
well the ads is actually a very
viable option for a blogger.

00:23:40.395 --> 00:23:40.930
&gt;&gt; Mmm hmm.

00:23:40.930 --> 00:23:43.324
And you know,
you don't have to sell out.

00:23:43.324 --> 00:23:48.866
You know you can link to maybe
something that's related to your blog.

00:23:48.866 --> 00:23:53.197
If you're doing a blog about
travel maybe you can Lead to

00:23:53.197 --> 00:23:58.000
something that some company
that makes travel accessories.

00:23:59.020 --> 00:24:02.403
Maybe help your readers out,
be like, yeah,

00:24:02.403 --> 00:24:07.698
when I was traveling I used this cool
key chain that lets me charge my iPhone.

00:24:07.698 --> 00:24:08.521
Shout out.

00:24:08.521 --> 00:24:15.230
[LAUGH] Okay, so we have another
question here from [INAUDIBLE].

00:24:15.230 --> 00:24:19.151
And they ask, is a full-stack developer
job scope mean that the person will

00:24:19.151 --> 00:24:22.330
cover both front-end and
back-end job tasks?

00:24:22.330 --> 00:24:25.240
If it is, does it mean that the
full-stack developer logically should

00:24:25.240 --> 00:24:26.548
be more well paid?

00:24:26.548 --> 00:24:29.260
Than the front and back-end alone?

00:24:29.260 --> 00:24:32.570
Actually, I was thinking about this,
when you asked that question earlier.

00:24:33.960 --> 00:24:38.200
And, that's that's still a really
difficult question to answer.

00:24:38.200 --> 00:24:41.720
&gt;&gt; Still a little difficult because
a full-stack developer can never be as

00:24:41.720 --> 00:24:47.300
good as a front-end who's just cost
trying to focus on the front-end.

00:24:47.300 --> 00:24:51.210
And at back end person like who is just
a wizard in database administration and

00:24:51.210 --> 00:24:52.041
looking some things up.

00:24:53.220 --> 00:24:55.020
You can never be as good as that.

00:24:55.020 --> 00:24:58.240
So again, it comes down to

00:24:58.240 --> 00:25:02.830
the variability of what this company
needs now and how good are you.

00:25:02.830 --> 00:25:04.430
And if you can say,

00:25:04.430 --> 00:25:09.632
I could be a full-stack developer
that is amazing at front and

00:25:09.632 --> 00:25:14.946
back, which, we started calling
them unicorns a little bit.

00:25:14.946 --> 00:25:18.100
It's a little bit,
it's hard for a reason.

00:25:18.100 --> 00:25:23.530
And if you feel like that, your skills
can often exceed a full front-end person

00:25:23.530 --> 00:25:25.260
and a full back-end person,
then yeah, yeah.

00:25:25.260 --> 00:25:26.230
&gt;&gt; Go for it.

00:25:26.230 --> 00:25:28.010
&gt;&gt; Go for it.
You'll get paid more.

00:25:28.010 --> 00:25:31.150
But then,
that depends on your own skill level and

00:25:31.150 --> 00:25:36.695
your own experience not necessarily
you being a full-stack developer.

00:25:36.695 --> 00:25:41.896
So, I do not have the statistics
to back up my claim,

00:25:41.896 --> 00:25:47.220
I do not have any numbers to tell you,
but you can you can probably

00:25:47.220 --> 00:25:52.970
find it on the say, US Census, if you
want to get more granular information.

00:25:52.970 --> 00:25:54.190
&gt;&gt; Glassdoor probably?

00:25:54.190 --> 00:25:54.700
&gt;&gt; Glassdoor.

00:25:54.700 --> 00:25:56.680
&gt;&gt; They'll probably give you-
&gt;&gt; I'll say Census.

00:25:56.680 --> 00:25:57.844
I'll say Census, like the government.

00:25:57.844 --> 00:26:00.096
&gt;&gt; Does it have a spot for
front-end developments?

00:26:00.096 --> 00:26:02.993
&gt;&gt; They have software developers, so

00:26:02.993 --> 00:26:07.831
I hope they'll give that out
to back-end, full-stack.

00:26:07.831 --> 00:26:12.420
But I will say Census is
more statistically relevant.

00:26:12.420 --> 00:26:13.250
&gt;&gt; That's true.

00:26:13.250 --> 00:26:17.150
&gt;&gt; Versus Glassdoor when
you're just cherry picking.

00:26:17.150 --> 00:26:20.660
&gt;&gt; That's true.
&gt;&gt; A lot of your hosts and

00:26:20.660 --> 00:26:22.690
articles that you're reading off.

00:26:22.690 --> 00:26:24.290
So again, it's hard, it still depends.

00:26:24.290 --> 00:26:28.493
So if you have further
questions on full-stack,

00:26:28.493 --> 00:26:32.896
we actually had a webcast
on full-stack last week,

00:26:32.896 --> 00:26:36.509
so I highly suggest you
take a look at that.

00:26:36.509 --> 00:26:41.526
And if you have further
questions on that sort of stuff,

00:26:41.526 --> 00:26:46.331
we can definitely post your
questions on the forum and

00:26:46.331 --> 00:26:51.777
we'll find a full-stack coach
who get you the resources and

00:26:51.777 --> 00:26:54.375
information that you need.

00:26:54.375 --> 00:26:55.734
&gt;&gt; I have a couple more questions.

00:26:55.734 --> 00:26:58.126
Do you want to move on or
actually address these quick?

00:26:58.126 --> 00:26:59.171
&gt;&gt; Let's move on a little bit.

00:26:59.171 --> 00:26:59.810
&gt;&gt; Okay.

00:26:59.810 --> 00:27:01.156
We'll come back to
the questions in a little bit.

00:27:01.156 --> 00:27:02.510
&gt;&gt; Yeah.

00:27:02.510 --> 00:27:04.647
All right, so that's the front-end.

00:27:04.647 --> 00:27:10.430
So again, take away from the front-end,
we have design and we have frameworks.

00:27:10.430 --> 00:27:14.469
So, when you think about your front-end,
think about design first,

00:27:14.469 --> 00:27:18.510
how you're going to lay out everything,
and how from a general picture,

00:27:18.510 --> 00:27:21.024
a bigger level,
how does everything look?

00:27:21.024 --> 00:27:25.231
How do you plan on everything looking
out, because then you could then figure

00:27:25.231 --> 00:27:29.260
out the technology, the frameworks
that can help you drive that design.

00:27:29.260 --> 00:27:31.139
Now, let's move on to the back-end.

00:27:32.750 --> 00:27:37.547
And, if you're going to walk away
from the back-end, one lesson or

00:27:37.547 --> 00:27:43.440
one thing that we should all walk away
with is this is crucial question.

00:27:43.440 --> 00:27:46.634
Will our content be static or dynamic?

00:27:46.634 --> 00:27:48.893
What does that mean, static, dynamic?

00:27:48.893 --> 00:27:56.054
And static is just the information will
not change, depending on any user.

00:27:56.054 --> 00:28:02.472
Like, I just want to just write a blog,
write an article.

00:28:02.472 --> 00:28:04.850
That article will never change.

00:28:04.850 --> 00:28:09.317
You may, of course, you may edit, proof
read it, add some addendums to it, but

00:28:09.317 --> 00:28:13.392
for the most part it will not change
much throughout the life of that blog or

00:28:13.392 --> 00:28:14.800
the life of the article.

00:28:14.800 --> 00:28:19.670
So, do you need technology,
do you need programming

00:28:19.670 --> 00:28:24.326
interface servers to
actually change that article

00:28:24.326 --> 00:28:29.390
depending on whatever inputs,
whatever factors?

00:28:29.390 --> 00:28:32.266
Probably not, because you
write an article, it's static.

00:28:32.266 --> 00:28:35.540
It doesn't change, it's not dynamic.

00:28:35.540 --> 00:28:39.813
So, if all of your content will
indeed be static then that

00:28:39.813 --> 00:28:44.620
makes the next questions
a whole lot easier to answer.

00:28:44.620 --> 00:28:49.475
Because these questions
will involve in how

00:28:49.475 --> 00:28:53.810
much horsepower and how much dynamic.

00:28:53.810 --> 00:28:54.473
&gt;&gt; Interactivity, yeah.

00:28:54.473 --> 00:28:57.180
&gt;&gt; Interactivity,
that you need from the back-end.

00:28:57.180 --> 00:29:02.107
because, again, if it's static,
you could just literally write your

00:29:02.107 --> 00:29:05.659
code in HTML and
then just find a simple web host.

00:29:05.659 --> 00:29:06.239
&gt;&gt; Yeah.

00:29:06.239 --> 00:29:08.010
&gt;&gt; Actually a host.server.

00:29:08.010 --> 00:29:09.970
Yeah, host your files on a server,
and then you're done.

00:29:09.970 --> 00:29:16.696
That you don't need any
other support technology.

00:29:16.696 --> 00:29:22.433
Now, if the question is dynamic
then that will actually help

00:29:22.433 --> 00:29:27.505
drive us further on how much
dynamic power do we need?

00:29:27.505 --> 00:29:28.284
So let's move on.

00:29:28.284 --> 00:29:31.879
So, that's a first crucial question,
is it static or dynamic?

00:29:31.879 --> 00:29:35.437
because basically, we're going to
talk about three things now.

00:29:35.437 --> 00:29:37.970
Let me look at my notes.

00:29:39.380 --> 00:29:44.092
Basically, we're going to
talk about server hosting.

00:29:44.092 --> 00:29:46.310
Now, where can we find a server
that could host our web pages?

00:29:46.310 --> 00:29:48.354
And there's tons of them.

00:29:48.354 --> 00:29:53.880
And what type of hosting is there,
is provided?

00:29:53.880 --> 00:29:58.204
And the type of services,
the type of dynamic services, or

00:29:58.204 --> 00:30:00.799
even static services that we need,

00:30:00.799 --> 00:30:05.980
like does our back-end server need
to put in and accept API requests?

00:30:05.980 --> 00:30:11.602
Or does the back-end server need to host
a database as well access some data for

00:30:11.602 --> 00:30:14.167
a user and then give it to that user?

00:30:14.167 --> 00:30:16.628
Example, a banking website.

00:30:16.628 --> 00:30:19.717
I'll tell you right now,
a banking website has a very,

00:30:19.717 --> 00:30:21.636
very powerful back-end server.

00:30:21.636 --> 00:30:25.152
Because guess what,
there's a lot of money involved.

00:30:25.152 --> 00:30:29.926
It has to access very secure
databases to access your money,

00:30:29.926 --> 00:30:34.605
and it has a ton of services for
you to be able to go in ahead and

00:30:34.605 --> 00:30:39.752
change your address, do a wire transfer,
withdraw some money,

00:30:39.752 --> 00:30:45.120
deposit some money, add in a check,
schedule recurring charges.

00:30:45.120 --> 00:30:47.410
That's a lot of services, and

00:30:47.410 --> 00:30:52.430
that requires a back-end technology
data that has to be very secure.

00:30:52.430 --> 00:30:53.280
It has to be very robust.

00:30:53.280 --> 00:30:56.336
&gt;&gt; Has to be secure,
also has to be easily usable.

00:30:56.336 --> 00:30:59.170
&gt;&gt; Exactly, for the back-end,
also for the front-end people.

00:30:59.170 --> 00:31:00.560
So basically, usually,

00:31:00.560 --> 00:31:03.200
you have a front-end person who takes
care of all the front-end stuff.

00:31:03.200 --> 00:31:07.243
And then he or she will talk with the
back-end person who takes care of all

00:31:07.243 --> 00:31:11.969
the databases and they talk with another
and say, hey, what's your API endpoint?

00:31:11.969 --> 00:31:16.213
And, I need some documentation of
when I set off my AJAX request,

00:31:16.213 --> 00:31:20.764
sent off my requests on my front-end
to be able to get the data I need for

00:31:20.764 --> 00:31:22.920
what I need to do.

00:31:22.920 --> 00:31:25.216
So, there's constant communication
between the front and

00:31:25.216 --> 00:31:26.123
the back-end person.

00:31:26.123 --> 00:31:29.380
If that person's not a full-stack
person who's doing both.

00:31:30.750 --> 00:31:34.334
And, the third thing I'm going to be
talking about is the technology stack.

00:31:34.334 --> 00:31:38.435
I'll say it's an important
thing to understand.

00:31:38.435 --> 00:31:42.230
It's also an important thing to
understand the vocabulary at the lingo

00:31:42.230 --> 00:31:44.837
when we're talking with
other web developers.

00:31:44.837 --> 00:31:46.608
Okay, so, server hosting.

00:31:46.608 --> 00:31:51.191
There's three Categories of hosting.

00:31:51.191 --> 00:31:53.600
One, I call this easy hosting.

00:31:53.600 --> 00:31:58.520
This is a combination of free
hosting and shared hosting.

00:31:58.520 --> 00:32:02.900
Now let me backtrack and
let's define what hosting is.

00:32:02.900 --> 00:32:03.600
&gt;&gt; Yeah.

00:32:03.600 --> 00:32:08.880
&gt;&gt; Hosting is basically, I create my
web page on my own local computer,

00:32:08.880 --> 00:32:13.120
but now I want to be
able to go ahead and

00:32:13.120 --> 00:32:18.340
upload my files so everyone else
can access on the Internet.

00:32:19.550 --> 00:32:23.090
Usually it's a big pain if you
only want to do it ourself.

00:32:23.090 --> 00:32:28.100
If we want to hook up our own local
server in our own house to serve,

00:32:28.100 --> 00:32:31.150
which, you could still do that.

00:32:31.150 --> 00:32:32.150
But we don't recommend it.

00:32:32.150 --> 00:32:37.550
That's more for an advanced user to
actually set up their own hosting.

00:32:37.550 --> 00:32:43.010
&gt;&gt; Also more prone to error and
rainstorms.

00:32:43.010 --> 00:32:48.730
&gt;&gt; Rainstorms, your cable shuts off,
or your computer.

00:32:49.920 --> 00:32:51.190
Your computer shuts down,

00:32:51.190 --> 00:32:55.480
well then guess what your server, no one
will be able to access your website.

00:32:55.480 --> 00:32:59.060
And if you want to make some money off
your website it's good to actually

00:33:01.260 --> 00:33:04.010
hostess out and find a host to actually.

00:33:04.010 --> 00:33:08.920
You pay them because you
pay them a nominal fee for

00:33:08.920 --> 00:33:10.980
them to take care of the servers.

00:33:10.980 --> 00:33:15.258
If the servers go down,
you have someone 24 seven,

00:33:15.258 --> 00:33:19.770
365 days a week to make sure that
the servers are always running.

00:33:19.770 --> 00:33:25.330
And they also have the bandwidth that
you need because basically your own

00:33:25.330 --> 00:33:31.500
little internet provider on,
in your house won't be enough

00:33:31.500 --> 00:33:35.960
to move say serve thousands of people
who may be accessing your website.

00:33:35.960 --> 00:33:37.870
So that's the advantage of the hosting.

00:33:37.870 --> 00:33:41.410
So basically recommend five hosts yeah.

00:33:41.410 --> 00:33:43.140
&gt;&gt; So
actually somebody question about that.

00:33:43.140 --> 00:33:45.110
&gt;&gt; Yeah.
&gt;&gt; You just answered it is great and

00:33:45.110 --> 00:33:48.400
there are some, there are some.

00:33:48.400 --> 00:33:51.820
I feel like there's some places where
you can host for free aren't there?

00:33:51.820 --> 00:33:52.410
&gt;&gt; Yeah.

00:33:52.410 --> 00:33:56.580
Host for free, but then they force
you to either host their own ads.

00:33:56.580 --> 00:33:57.480
&gt;&gt; Ads, right.

00:33:57.480 --> 00:33:59.270
So you have ad-supported hosting.

00:33:59.270 --> 00:34:01.610
&gt;&gt; Yeah, that's ad-supported hosting.

00:34:01.610 --> 00:34:07.127
So the ads you don't necessarily
want them to show well, l tough luck

00:34:07.127 --> 00:34:13.150
because they'll force you to host
those ads instead of you paying.

00:34:13.150 --> 00:34:17.100
And I recommend that you
just go ahead and pay.

00:34:17.100 --> 00:34:22.409
Pay them if you want more
streamlined user experience.

00:34:22.409 --> 00:34:26.320
Yeah, there's some great.

00:34:26.320 --> 00:34:29.320
Smaller hosting sites,
we'll go to that later,

00:34:29.320 --> 00:34:32.800
but Squarespace I think-
&gt;&gt; Yeah.

00:34:32.800 --> 00:34:34.500
&gt;&gt; Is it free?

00:34:34.500 --> 00:34:35.179
&gt;&gt; Squarespace?

00:34:35.179 --> 00:34:36.260
&gt;&gt; I don't know if they're free.

00:34:36.260 --> 00:34:37.500
&gt;&gt; Is it free?
&gt;&gt; I don't think so.

00:34:37.500 --> 00:34:39.370
&gt;&gt; Okay.
&gt;&gt; For sure GitHub is free.

00:34:39.370 --> 00:34:40.130
&gt;&gt; GitHub is free.

00:34:40.130 --> 00:34:42.030
&gt;&gt; Yeah, the github.io page is free.

00:34:42.030 --> 00:34:43.790
&gt;&gt; Yeah.
&gt;&gt; That is completely free for

00:34:43.790 --> 00:34:46.050
developers, and if just want
to host your own website and

00:34:46.050 --> 00:34:47.554
if it's static perfect.

00:34:47.554 --> 00:34:48.670
&gt;&gt; Yeah.

00:34:48.670 --> 00:34:51.920
&gt;&gt; I actually personally will
do that myself if I were to just

00:34:51.920 --> 00:34:53.630
host static web pages.

00:34:53.630 --> 00:34:57.470
I don't need to do any,
I don't need any backend support.

00:34:57.470 --> 00:34:58.815
Yeah I'll just going to GitHub.

00:34:58.815 --> 00:35:01.720
&gt;&gt; Cool.
&gt;&gt; Push my changes and there to go.

00:35:03.330 --> 00:35:08.440
So that's easy hosting, and
that's really good for static web pages.

00:35:08.440 --> 00:35:13.280
Now once you level up,
let's assume that we need some more

00:35:14.380 --> 00:35:19.330
technology to create a forum host or

00:35:19.330 --> 00:35:22.630
like a formation page,
like Reddit or any other forum star.

00:35:22.630 --> 00:35:28.480
You gotta see discussion forums or
even say a banking website, right?

00:35:28.480 --> 00:35:29.370
&gt;&gt; Yeah.
&gt;&gt; You're going to need some

00:35:29.370 --> 00:35:30.210
more horsepower.

00:35:30.210 --> 00:35:33.660
You're going to need to actually
have access to the server itself and

00:35:33.660 --> 00:35:34.720
actually install and

00:35:34.720 --> 00:35:38.220
set up all the software that's needed
to actually host the server, and

00:35:38.220 --> 00:35:42.140
host the web pages like virtual private
server or a dedicated hosting site.

00:35:44.040 --> 00:35:46.808
This is actually for people.

00:35:46.808 --> 00:35:50.410
These are peoples full time jobs,
like these Linux administrator and

00:35:50.410 --> 00:35:54.370
these are people who actually
set up things for other people.

00:35:54.370 --> 00:35:57.410
This can be a full time job for
a lot of people and

00:35:57.410 --> 00:36:01.410
if your if you feel like you
want to get into this space and

00:36:01.410 --> 00:36:03.930
learn how to do that and
by all means I encourage you.

00:36:03.930 --> 00:36:08.890
And yeah there's tons of the tutorials
out there to learn how to set up

00:36:08.890 --> 00:36:13.245
a server like a web server like using
Apache and setting that up in Linux.

00:36:13.245 --> 00:36:18.380
Basically that's the second tier and

00:36:18.380 --> 00:36:20.720
if this is the cover you need
to set up everything yourself.

00:36:21.980 --> 00:36:28.590
All they give you is just a server
a box some were In the world.

00:36:28.590 --> 00:36:30.430
&gt;&gt; Arizona.

00:36:30.430 --> 00:36:33.870
&gt;&gt; Arizona, New York whatever and
you have route access,

00:36:33.870 --> 00:36:36.480
you have access to that
server 24/7 remotely and

00:36:36.480 --> 00:36:42.110
you'll go to type in a lot of basically
a lot of terminal commands to be

00:36:42.110 --> 00:36:46.800
able to actually set up the server FTP,
upload your files to the server and

00:36:46.800 --> 00:36:49.750
just be set everything
&gt;&gt; And

00:36:49.750 --> 00:36:53.680
that of course that cost money
because you're basically renting

00:36:55.670 --> 00:36:58.640
a server,
a whole computer too by chance and

00:36:58.640 --> 00:37:01.350
this actually if you having more
than a couple thousand people,

00:37:01.350 --> 00:37:04.370
yeah that's when you started
needing some more horsepower.

00:37:04.370 --> 00:37:05.710
&gt;&gt; Yeah.
To actually serve.

00:37:07.040 --> 00:37:10.485
And then third,
this is called Platform as a Service.

00:37:10.485 --> 00:37:13.520
This is actually a combination
of Easy Hosting and

00:37:13.520 --> 00:37:17.060
also dedicated,
I'll say Virtual Private Server.

00:37:17.060 --> 00:37:18.290
I must say.

00:37:18.290 --> 00:37:23.085
And if you're a programmer,
your developer and you want to be

00:37:23.085 --> 00:37:28.200
able to create a forum or
a create a banking website.

00:37:28.200 --> 00:37:32.520
You need some backend
support that actually

00:37:32.520 --> 00:37:33.910
handles all the database requests.

00:37:33.910 --> 00:37:38.190
Well that means that you've got or set
up some things up yourself or actually

00:37:38.190 --> 00:37:41.610
just use a platform as a service where
they actually tell you, okay we're

00:37:41.610 --> 00:37:44.900
going to set up everything for you or
you need to do is just upload your code.

00:37:46.450 --> 00:37:49.440
This is google app engine, and
so for the people who are at.

00:37:49.440 --> 00:37:53.300
At the stage four what you're using
is called a platform as a service and

00:37:53.300 --> 00:37:55.870
hosting and that's that's call.

00:37:55.870 --> 00:37:58.270
Yes that's hosting your you host it.

00:37:58.270 --> 00:38:03.620
And yet, for one day you have like
this basically I think a gigabyte

00:38:03.620 --> 00:38:05.220
worth of free bandwidth.

00:38:05.220 --> 00:38:07.060
Anything else and
they'll start charging you.

00:38:07.060 --> 00:38:08.030
&gt;&gt; I know that.

00:38:08.030 --> 00:38:12.470
&gt;&gt; Yeah, so like it's free to
just play around to use for

00:38:12.470 --> 00:38:14.210
the first yeah for a few thousand.

00:38:14.210 --> 00:38:15.640
&gt;&gt; Yeah.
&gt;&gt; People who will access it,

00:38:15.640 --> 00:38:19.420
it will be free and that's a platform
as a service where you just

00:38:19.420 --> 00:38:21.670
upload your Python code
your back end code.

00:38:21.670 --> 00:38:25.420
Which we'll talk about next
in our back end technology.

00:38:26.620 --> 00:38:31.780
They take care of all the server set up,
you don't need to even touch a terminal

00:38:31.780 --> 00:38:33.470
they take care of all
the data base set up and

00:38:33.470 --> 00:38:38.350
they take care of the redundancy
the redundancies that's needed.

00:38:38.350 --> 00:38:40.220
All you need to do this,

00:38:40.220 --> 00:38:42.630
upload your code focus on
developing your application and

00:38:42.630 --> 00:38:45.718
then that's it you pay them a nominal
fee and if you blow up that's great.

00:38:45.718 --> 00:38:47.210
&gt;&gt; You scale up.

00:38:47.210 --> 00:38:50.940
&gt;&gt; You just scale up and
you know hopefully if you make

00:38:50.940 --> 00:38:54.340
more money of the new bill to pay
off more of the server costs.

00:38:54.340 --> 00:38:55.990
&gt;&gt; Created Strout.

00:38:55.990 --> 00:38:57.130
&gt;&gt; Yeah.

00:38:57.130 --> 00:38:59.250
Great so that's server hosting.

00:38:59.250 --> 00:39:03.890
So depends on again, the question of
is a static is a dynamic content?

00:39:05.070 --> 00:39:07.110
What level of dynamic
content do I really need?

00:39:07.110 --> 00:39:09.700
What level of horsepower do I need for
my website?

00:39:10.740 --> 00:39:13.100
&gt;&gt; Mike, before we move on could
we answer a couple questions?

00:39:13.100 --> 00:39:13.900
&gt;&gt; Go ahead.

00:39:13.900 --> 00:39:18.210
&gt;&gt; One question about
the night degree itself.

00:39:18.210 --> 00:39:21.680
Is this niche certifications in this,
or just experience only?

00:39:22.940 --> 00:39:25.716
For what we're talking about?

00:39:25.716 --> 00:39:27.535
&gt;&gt; I'm not quite sure.

00:39:27.535 --> 00:39:28.780
&gt;&gt; Yeah I think.

00:39:28.780 --> 00:39:29.490
&gt;&gt; What is this?

00:39:29.490 --> 00:39:30.460
&gt;&gt; Yeah yeah yeah.

00:39:30.460 --> 00:39:31.789
&gt;&gt; I think this.

00:39:31.789 --> 00:39:36.749
&gt;&gt; I think he is talking
about front-end and

00:39:36.749 --> 00:39:39.590
backend development.

00:39:39.590 --> 00:39:42.780
&gt;&gt; That's what there
are two nano degrees called

00:39:42.780 --> 00:39:47.214
the front-end nano degree and
then the full stack nano degree.

00:39:47.214 --> 00:39:52.935
They're actually You'll dive into
detail about develop the front end and

00:39:52.935 --> 00:39:54.530
the back end yeah.

00:39:54.530 --> 00:39:59.225
Yeah I really suggest you just
if you're more interested,

00:39:59.225 --> 00:40:01.190
investigate the full stack and

00:40:01.190 --> 00:40:06.560
the front end Nanodegree to go to get
to figure out how you should do this.

00:40:06.560 --> 00:40:10.440
Now all these how because what
we're tell you is what and why.

00:40:10.440 --> 00:40:15.540
What we're not going to cover is
the how, that that takes a whole-

00:40:15.540 --> 00:40:16.340
&gt;&gt; That's the degree.

00:40:16.340 --> 00:40:17.020
&gt;&gt; That's the degree.

00:40:17.020 --> 00:40:20.250
That's the whole certification
process for you to take.

00:40:20.250 --> 00:40:22.990
So hopefully that will help guide you.

00:40:22.990 --> 00:40:25.070
&gt;&gt; And as far as getting experience,

00:40:25.070 --> 00:40:28.750
you can do it sort of on your
own start building websites.

00:40:28.750 --> 00:40:32.000
That's really the best way to gain
experience without being in a job,

00:40:33.530 --> 00:40:35.050
and yeah.

00:40:35.050 --> 00:40:36.680
So, let's see who else.

00:40:38.240 --> 00:40:41.320
Cover more questions on the framework.

00:40:41.320 --> 00:40:44.510
Is Ruby on Rails considered
a front end or back end tool?

00:40:44.510 --> 00:40:45.100
&gt;&gt; Select that.

00:40:46.820 --> 00:40:48.900
&gt;&gt; Ruby on Rails is a backend tool.

00:40:48.900 --> 00:40:53.050
It serves websites, but
it doesn't handle the HTML,

00:40:53.050 --> 00:40:55.416
the actual designing of the HTML,
CSS, and JavaScript.

00:40:55.416 --> 00:40:58.710
It's just basically like your
Python that you're learning and

00:40:58.710 --> 00:41:01.170
stage four to serve your websites.

00:41:01.170 --> 00:41:01.890
&gt;&gt; Cool stuff.

00:41:01.890 --> 00:41:03.900
&gt;&gt; Ruby is the programming language and
Rails is the frame work.

00:41:05.530 --> 00:41:06.480
&gt;&gt; Okay I get it.
&gt;&gt; WebApp 2

00:41:06.480 --> 00:41:08.220
is your frame work that
we're using Python.

00:41:08.220 --> 00:41:08.720
&gt;&gt; Interesting.

00:41:11.970 --> 00:41:14.000
&gt;&gt; As far as the ads go.

00:41:14.000 --> 00:41:17.210
Yes, the sites have ads everywhere
because they want to make

00:41:17.210 --> 00:41:17.800
a lot of money.

00:41:17.800 --> 00:41:23.230
So it just depends how many ads
do you want to put on your page.

00:41:23.230 --> 00:41:27.720
It's how much money you're
going to make off of them.

00:41:27.720 --> 00:41:29.580
Also the user experience.

00:41:29.580 --> 00:41:32.550
How much how say,

00:41:32.550 --> 00:41:37.820
my question is, how well do you
want the user experience to be?

00:41:38.920 --> 00:41:42.556
And I understand the ads are necessary
if you want to make some money.

00:41:42.556 --> 00:41:44.790
It's just that you can
still be smart about it.

00:41:44.790 --> 00:41:49.310
You can still try to integrate those
ads into your website and then,

00:41:49.310 --> 00:41:53.060
as far as like ads that the hosting
company puts on a web page.

00:41:53.060 --> 00:41:57.850
You have less control over how many
go on and it depends on the hosting

00:41:57.850 --> 00:42:01.265
company as to whether you can
control where to put those ads.

00:42:01.265 --> 00:42:04.875
But then again just depends.

00:42:04.875 --> 00:42:06.515
&gt;&gt; Good question,
there's a lot of questions today.

00:42:06.515 --> 00:42:09.715
&gt;&gt; A lot of really practical questions.

00:42:09.715 --> 00:42:13.625
So Connor asks, does the use of
frameworks reduce the need to know

00:42:13.625 --> 00:42:15.190
the DOM like the back of your palm?

00:42:15.190 --> 00:42:15.943
Yes.

00:42:15.943 --> 00:42:20.695
So mapping everything

00:42:20.695 --> 00:42:24.890
out is a way to reduce
memorizing everything.

00:42:24.890 --> 00:42:28.670
And it's so you have everything
on one page you can refer to this

00:42:28.670 --> 00:42:31.171
when you're going through and
building your website.

00:42:31.171 --> 00:42:34.982
You are like, okay,
I'm going to start with my top most div,

00:42:34.982 --> 00:42:38.160
like this is that box and then I'm
going to start with the header div and

00:42:38.160 --> 00:42:41.970
that's this box, so
when you go back to it your like.

00:42:41.970 --> 00:42:44.830
This divs within that div and
you can find it in your code.

00:42:44.830 --> 00:42:46.690
You don't have to memorize things or

00:42:46.690 --> 00:42:49.510
dig really too deep and
it saves a lot of time.

00:42:49.510 --> 00:42:50.820
So great question.

00:42:50.820 --> 00:42:56.420
&gt;&gt; Yeah I'll say don't
depend on the front row so

00:42:56.420 --> 00:42:57.560
much they will become a crux.

00:42:57.560 --> 00:43:02.040
I tell you right now if

00:43:02.040 --> 00:43:07.070
a lot of a lot of people say they know,
say, the front end stuff.

00:43:07.070 --> 00:43:10.430
I've heard this talk among Mike and
some other front end people.

00:43:10.430 --> 00:43:14.610
A lot of people say they know JCORE but
they don't know JavaScript.

00:43:14.610 --> 00:43:16.025
That should be reversed, actually.

00:43:16.025 --> 00:43:18.117
&gt;&gt; Interesting.
&gt;&gt; If they say if you study enough

00:43:18.117 --> 00:43:21.610
JCORE, you can basically
do a lot of stuff.

00:43:21.610 --> 00:43:25.660
With JCORE, but then if the need
arises that this framework

00:43:25.660 --> 00:43:30.040
doesn't quite do what it can do,
because it's just a framework,

00:43:30.040 --> 00:43:34.810
it's just a way for you to do things
in some sort of idealized environment.

00:43:34.810 --> 00:43:39.970
You have to resort to
actual learning JavaScript.

00:43:39.970 --> 00:43:43.100
Knowing the actual JavaScript and
knowing how to access the DOM in

00:43:43.100 --> 00:43:46.080
JavaScript, and
know how to access those notes.

00:43:46.080 --> 00:43:51.620
So I will say, yeah it does reduce
the need for you to know the DOM or

00:43:51.620 --> 00:43:55.660
the document objects models like the
back of your hand, and highly recommend.

00:43:55.660 --> 00:44:00.400
I use frameworks all the time for
myself, but you should not depend on it

00:44:02.100 --> 00:44:04.520
too much, or else it will be a crux.

00:44:04.520 --> 00:44:09.900
And if you're trying to find a job
in front end or back end, what

00:44:09.900 --> 00:44:15.540
developer they expect you to
know the DOM and they expect

00:44:15.540 --> 00:44:20.380
you to know how to manipulate the DOM
using just plain straight JavaScript.

00:44:20.380 --> 00:44:22.338
&gt;&gt; Straight JavaScript, CSS, and HTML.

00:44:22.338 --> 00:44:24.493
&gt;&gt; Yeah, good point.

00:44:24.493 --> 00:44:25.490
&gt;&gt; Mm-hm.

00:44:25.490 --> 00:44:26.890
All right.
&gt;&gt; All right, let's move on.

00:44:26.890 --> 00:44:29.700
&gt;&gt; Let's move on.
So the next thing that

00:44:29.700 --> 00:44:34.132
I'm going to talk about is-
&gt;&gt; Services.

00:44:34.132 --> 00:44:39.920
&gt;&gt; Basically, this is based
like once we've chosen our host

00:44:39.920 --> 00:44:43.490
our type of host we need to figure out
what is it exactly that we need to do?

00:44:43.490 --> 00:44:44.820
What's this service?

00:44:44.820 --> 00:44:50.337
When I say service I mean what is it
that does the back end server supposed

00:44:50.337 --> 00:44:54.320
to take in from the front end and
was this supposed output?

00:44:55.910 --> 00:45:00.300
If there's a running theme in this issue
of the programming now degree is it is

00:45:01.310 --> 00:45:05.770
what you always need to ask the question
what's the input and what's the output?

00:45:05.770 --> 00:45:09.220
What the input to the server like
what are the what's that type of

00:45:09.220 --> 00:45:12.200
information that are back in
service getting from the front end?

00:45:14.270 --> 00:45:16.220
Okay, this is the type
of information I need.

00:45:16.220 --> 00:45:19.520
Let's draw this down, let's say,
a banking website site.

00:45:21.620 --> 00:45:23.850
I need to know your account information.

00:45:23.850 --> 00:45:26.178
I need to know your login information.

00:45:26.178 --> 00:45:28.950
I need to know,
how much money do you want to transfer?

00:45:28.950 --> 00:45:32.650
All those little inputs, and
then at the output, okay.

00:45:32.650 --> 00:45:33.780
What's my output?

00:45:33.780 --> 00:45:34.930
What am I producing?

00:45:34.930 --> 00:45:35.640
What am I trying to do?

00:45:37.740 --> 00:45:41.440
And let's say for
a banking website, for my output I

00:45:41.440 --> 00:45:46.270
most likely need to access some sort of
database to change that account balance.

00:45:46.270 --> 00:45:50.710
If someone needs to get
me an input withdrawal or

00:45:50.710 --> 00:45:56.640
deposit $200,
I need to basically plus one.

00:45:56.640 --> 00:46:01.450
When a person logs into my website I
need to process their password and

00:46:01.450 --> 00:46:05.870
compare it to a password database and
make sure that is correct.

00:46:05.870 --> 00:46:10.205
If it's correct then I let them

00:46:10.205 --> 00:46:15.480
log in and send them a valid cookie and
then they'll be able to log in..

00:46:16.650 --> 00:46:21.070
So those are the big things
that you need to consider.

00:46:21.070 --> 00:46:23.960
What are your big services that
your back end is trying to do?

00:46:23.960 --> 00:46:28.310
Again if your back end is just
sort of static web pages,

00:46:28.310 --> 00:46:32.500
then that's really the one service
just serving the web page.

00:46:32.500 --> 00:46:35.410
The input is a request
from the browser and

00:46:35.410 --> 00:46:38.670
the output is it will just
send you the HTML code.

00:46:38.670 --> 00:46:42.160
That's your input and output for
your backend for a static webpage.

00:46:42.160 --> 00:46:45.900
Now, dynamics, there's a lot of things
that's happening and then you're

00:46:45.900 --> 00:46:50.860
going to need a programming language
to actually help process the inputs and

00:46:50.860 --> 00:46:56.397
outputs, which is actually next
things called the Technology Stack.

00:46:56.397 --> 00:46:59.330
So we have three things in
the Technology Stack so

00:46:59.330 --> 00:47:02.990
the first thing is some people
mentioned programming languages.

00:47:04.340 --> 00:47:07.445
What is the program language
that we want to use?

00:47:07.445 --> 00:47:09.110
What's that basic technology?

00:47:09.110 --> 00:47:10.380
&gt;&gt; Yeah.

00:47:10.380 --> 00:47:11.960
&gt;&gt; You're learning Python.

00:47:11.960 --> 00:47:15.040
In stage four and
that's your of course stack.

00:47:15.040 --> 00:47:18.840
That's your core technology that you'll
using to process inputs and outputs, but

00:47:18.840 --> 00:47:22.360
then there's a lot of other programming
languages that other people used too

00:47:22.360 --> 00:47:27.660
called Java, .NET, Ruby,
Node.JS, PHP, a lot of people.

00:47:27.660 --> 00:47:31.873
I'll see PHP ASP and
PHP is actually really old.

00:47:31.873 --> 00:47:36.834
[CROSSTALK] It's actually is
a server side technology you

00:47:36.834 --> 00:47:41.806
run code on the server and
then it's a spits out the HTML.

00:47:41.806 --> 00:47:44.763
Again what's your step what's
your programing language?

00:47:44.763 --> 00:47:47.088
Which was once you figure that out.

00:47:47.088 --> 00:47:51.568
You could then figure out,
okay depending on my services,

00:47:51.568 --> 00:47:53.279
what's my database?

00:47:53.279 --> 00:47:58.061
There are two big types of databases
right now they should really just

00:47:58.061 --> 00:48:02.068
need to think about as
conversational databases.

00:48:02.068 --> 00:48:06.868
mySQL, PostGresSQL,
those are two free databases that

00:48:06.868 --> 00:48:10.269
you can install and your server and use.

00:48:10.269 --> 00:48:15.310
And then there's non relational
databases called NoSQL,

00:48:15.310 --> 00:48:18.140
MongoDB, Hadoop, Cassandra.

00:48:18.140 --> 00:48:23.772
And those are other type of
databases that do not depend

00:48:23.772 --> 00:48:30.770
on putting your data into
a traditional spreadsheet-like table.

00:48:30.770 --> 00:48:36.170
Then, based on your experience and
based on what you need, you may choose,

00:48:36.170 --> 00:48:38.805
let's say, a MongoDB server.

00:48:38.805 --> 00:48:43.100
Because you just want to
read things really fast, and

00:48:43.100 --> 00:48:52.590
you just want to be able to go ahead and
just store information like in objects.

00:48:52.590 --> 00:48:56.460
Then that's what we're using
in Google's Datastore.

00:48:56.460 --> 00:48:59.240
It's NoSQL type of database.

00:49:00.280 --> 00:49:01.890
Course is a more relational database.

00:49:01.890 --> 00:49:04.460
And now, relational databases,
they're old school.

00:49:04.460 --> 00:49:09.480
They are older, but they're very
reliable, and they're very normalized.

00:49:09.480 --> 00:49:12.660
Meaning that they actually,
if you organize your data very well,

00:49:12.660 --> 00:49:16.300
it works very well, and
the performance is decent as well.

00:49:17.600 --> 00:49:22.590
Though once you scale up, relational
databases start hitting a wall.

00:49:22.590 --> 00:49:26.153
And especially if you try
to do joins in your tables.

00:49:26.153 --> 00:49:30.901
It gets really slow if you're trying
to do outer joins, inner joins,

00:49:30.901 --> 00:49:35.270
or anything like that,
like off a 2 million record database.

00:49:35.270 --> 00:49:36.280
Things start slowing down.

00:49:37.740 --> 00:49:38.860
So I will say, yeah.

00:49:38.860 --> 00:49:40.730
Depends on what you're familiar with and

00:49:40.730 --> 00:49:43.200
what type of database
system that you want.

00:49:43.200 --> 00:49:46.276
And, like how are you going to scale up?

00:49:46.276 --> 00:49:47.720
You may even use a combination.

00:49:48.810 --> 00:49:54.993
One part I'm going to use NoSQL,
MongoDB to host my user accounts.

00:49:54.993 --> 00:49:59.978
And then another part, relational,
I'm going to use that to store in

00:49:59.978 --> 00:50:05.640
the rest of the information I have
about my users so well, it depends.

00:50:05.640 --> 00:50:10.058
There's most tradeoffs on relational and
NoSQL database.

00:50:10.058 --> 00:50:12.990
And then the next is
Server Operating System.

00:50:12.990 --> 00:50:16.860
Now this is really what
you're familiar with.

00:50:16.860 --> 00:50:19.473
A lot of servers operate on Linux, but

00:50:19.473 --> 00:50:23.733
there is a sizable number of
servers that operate on Windows.

00:50:23.733 --> 00:50:25.900
And why should you care?

00:50:25.900 --> 00:50:30.209
Well, it just makes it
apparent that you need to

00:50:30.209 --> 00:50:34.860
know the type of technology
that you can work with.

00:50:34.860 --> 00:50:35.660
Say, if it's a Linux,

00:50:35.660 --> 00:50:40.500
then expect to work a lot in
the terminal, the command prompt.

00:50:40.500 --> 00:50:44.050
But with Linux, you have a lot of free
software that you can just install on

00:50:44.050 --> 00:50:46.140
your computer and run with it.

00:50:46.140 --> 00:50:51.420
Versus Windows, most likely you're going
to use a Windows software called IIS.

00:50:51.420 --> 00:50:53.137
&gt;&gt; It's is all proprietary.

00:50:53.137 --> 00:51:00.130
Internet Information Server
is called Microsoft IIS.

00:51:00.130 --> 00:51:05.174
I forgot the acronym what it stands for,
but yet it's all for proprietary.

00:51:05.174 --> 00:51:06.905
&gt;&gt; Is it INS?

00:51:06.905 --> 00:51:07.706
&gt;&gt; I think it is IIS.

00:51:07.706 --> 00:51:13.650
Look that up an update our notes,
but yeah it's all proprietary.

00:51:13.650 --> 00:51:17.272
Other servers Oracle, HP, Dell,

00:51:17.272 --> 00:51:21.830
they may have their own special system.

00:51:21.830 --> 00:51:27.590
But again, it depends on how much
you're familiar with your server and

00:51:29.000 --> 00:51:34.350
how flexible do you
want your server to be?

00:51:34.350 --> 00:51:37.938
So we're about the end of our
little presentation here so

00:51:37.938 --> 00:51:40.730
let's just have a little summary here.

00:51:40.730 --> 00:51:43.307
So John, can you just summarize
the front-end a little bit?

00:51:43.307 --> 00:51:48.248
&gt;&gt; Yeah, so we covered the big ideas
in design about making a website look

00:51:48.248 --> 00:51:52.853
good and work well, which is laying
out all the boxes that you have

00:51:52.853 --> 00:51:57.570
either on paper or some sort of
graphics program on your computer.

00:51:57.570 --> 00:51:59.380
We laid out the user interface.

00:51:59.380 --> 00:52:02.600
So, where do you want
the users to login?

00:52:02.600 --> 00:52:04.540
Where you want the users
to post comments?

00:52:04.540 --> 00:52:07.600
We talked about which boxes
you want to put those and

00:52:07.600 --> 00:52:10.980
what sort of technologies you
want to connect to those.

00:52:10.980 --> 00:52:14.834
And we also talked a little bit about
graphics about whether you want to

00:52:14.834 --> 00:52:17.331
design things in-house, outsource them.

00:52:17.331 --> 00:52:22.153
And if you decide to design them
in-house, what sort of things do you

00:52:22.153 --> 00:52:26.892
want think about as far as ease of
looking at it in terms of contrast,

00:52:26.892 --> 00:52:31.930
and how to lay that out in your
in your sketch and fire frame.

00:52:31.930 --> 00:52:34.437
We also covered JavaScript and
CSS frameworks.

00:52:34.437 --> 00:52:39.548
And these are sort of pre bundled
software that you can use

00:52:39.548 --> 00:52:44.554
to help your development move faster and
work better and

00:52:44.554 --> 00:52:50.967
work with a lot more capabilities
than you probably even knew existed.

00:52:50.967 --> 00:52:54.263
And that sort of wrapped up all the
things that you want to think about when

00:52:54.263 --> 00:52:57.400
you're planning the front-end
side of your web page.

00:52:57.400 --> 00:52:59.840
And then we sort of
transitioned into Back-End.

00:52:59.840 --> 00:53:02.018
Yeah, so three things that you
need to know about the Back-End.

00:53:02.018 --> 00:53:06.430
How are you going to host your content?

00:53:07.590 --> 00:53:09.300
Is your content static, or dynamic?

00:53:09.300 --> 00:53:13.860
That will really drive the rest of
your decisions on trying to figure out

00:53:13.860 --> 00:53:17.663
the Back-End part of your website,
the type of services.

00:53:17.663 --> 00:53:20.733
Do you need a database,
do you need to have API end points,

00:53:20.733 --> 00:53:24.070
do you need to have user accounts
like to allow people to log in?

00:53:24.070 --> 00:53:25.980
Do you need all of that?

00:53:25.980 --> 00:53:29.140
What's up with things that
will to Surat actually do?

00:53:30.260 --> 00:53:33.223
And then last is the technology stack.

00:53:33.223 --> 00:53:37.396
Really, what the programming language is
what are frameworks that you're going to

00:53:37.396 --> 00:53:39.590
use, what type of
databases will you use?

00:53:39.590 --> 00:53:43.853
And also what type of environment server
operating system environment will

00:53:43.853 --> 00:53:44.415
you use?

00:53:44.415 --> 00:53:49.280
because all developers will actually
asked you so what's your stack?

00:53:49.280 --> 00:53:50.390
What's your technology stack?

00:53:50.390 --> 00:53:55.866
And, I'll give you an example,
a classic stack is called Map.

00:53:55.866 --> 00:54:01.830
Linux, Apache, MySQL,
PHP, so I'm using Linux.

00:54:01.830 --> 00:54:03.830
I'm using Apache.

00:54:03.830 --> 00:54:07.300
Apache is the software to actually-
&gt;&gt; On a server?

00:54:07.300 --> 00:54:08.890
&gt;&gt; Actually, serves the website.

00:54:10.030 --> 00:54:10.820
I'm using MySQL.

00:54:10.820 --> 00:54:11.530
That's my database.

00:54:11.530 --> 00:54:13.870
I'm using PHP is my
programming language.

00:54:16.090 --> 00:54:19.030
A lot of people to say they love Pearl,
you can use Pearl.

00:54:19.030 --> 00:54:20.160
You can also use Python too.

00:54:20.160 --> 00:54:21.580
&gt;&gt; Perl, yeah.

00:54:21.580 --> 00:54:23.490
&gt;&gt; As your text stack as well.

00:54:23.490 --> 00:54:29.040
Another text stack is model database
express framework angler JS.

00:54:29.040 --> 00:54:33.920
And is no JS, no JS is your back end.

00:54:33.920 --> 00:54:37.180
It's actually written in JavaScript so
you're using JavaScript actually serve

00:54:37.180 --> 00:54:41.650
your web pages as well in addition
to actually using JavaScript to

00:54:43.670 --> 00:54:50.252
manipulate your web pages
from the front end.

00:54:50.252 --> 00:54:54.710
&gt;&gt; Talking about manipulating web pages,
there is a question actually about what

00:54:54.710 --> 00:54:57.820
that means to manipulate
the DOM through JavaScript.

00:54:57.820 --> 00:55:00.800
&gt;&gt; Right, so the DOM basically
is called the doc object model.

00:55:00.800 --> 00:55:03.658
And it's basically you can
think of a tree, right?

00:55:03.658 --> 00:55:08.080
It's like an abstract tree where
you have elements belonging

00:55:08.080 --> 00:55:11.840
to other elements in your HTML.

00:55:12.930 --> 00:55:19.507
And if you think about it,
without JavaScript, there is no way for

00:55:19.507 --> 00:55:24.336
you to manipulate the DOM or
change the DOM live.

00:55:24.336 --> 00:55:29.449
The only way for you to change
the relationship or change want,

00:55:29.449 --> 00:55:34.852
like add in a paragraph, right into
a division, there is no way for

00:55:34.852 --> 00:55:39.870
you to do that without actually
having to open up your editor,

00:55:39.870 --> 00:55:44.510
edit the HTML code, and
then reload the webpage.

00:55:44.510 --> 00:55:45.540
&gt;&gt; Can't do that every single time.

00:55:45.540 --> 00:55:47.480
&gt;&gt; You can't do it every single time,
especially for use.

00:55:47.480 --> 00:55:50.210
But let's that say that you want to
program something interactive or

00:55:50.210 --> 00:55:55.210
you want to dynamically add in
a paragraph in the website, you will

00:55:55.210 --> 00:55:59.610
use JavaScript actually manipulate
the DOM to make sure you manipulate any

00:55:59.610 --> 00:56:04.880
actually add in a paragraph
inside the web site itself live.

00:56:04.880 --> 00:56:08.525
So when the person
loads up your web page,

00:56:08.525 --> 00:56:11.971
they may not have to paragraph insert.

00:56:11.971 --> 00:56:17.740
But then if they do, if they click
a button, then the button will actually

00:56:17.740 --> 00:56:23.232
launch a JavaScript function that
will actually go ahead, and insert

00:56:23.232 --> 00:56:29.300
a paragraph element inside some sort
of a div elementary container element.

00:56:30.670 --> 00:56:34.661
So that's what we mean when
we say manipulate the DOM.

00:56:34.661 --> 00:56:35.920
&gt;&gt; Yeah, sounds great.

00:56:35.920 --> 00:56:40.180
This is a really nice diagram that
really sort of pulls together

00:56:40.180 --> 00:56:43.230
everything that you can think
about planning a website.

00:56:43.230 --> 00:56:44.130
&gt;&gt; Yeah.
Thank you, thank you.

00:56:44.130 --> 00:56:50.110
&gt;&gt; So again, these notes will be posted,
hopefully, by tonight or tomorrow.

00:56:50.110 --> 00:56:52.480
So they will be posted
on the discussion forum.

00:56:52.480 --> 00:56:56.020
So please just log onto the discussion
forums and look at the categories and

00:56:56.020 --> 00:57:01.470
then look for
the Office Hour Notes category.

00:57:01.470 --> 00:57:04.440
And you'll be able to go ahead and
look at our notes.

00:57:05.850 --> 00:57:08.690
Highlight them, read them,
reflect on them, digest them.

00:57:08.690 --> 00:57:11.640
And then yeah,
if you have any further questions on

00:57:11.640 --> 00:57:16.630
whatever we presented today,
please post it in the discussion forums.

00:57:16.630 --> 00:57:17.820
Thank you very much for your time.

00:57:17.820 --> 00:57:18.920
&gt;&gt; Thanks so much for coming.

00:57:18.920 --> 00:57:19.506
&gt;&gt; All right, thank you.

00:57:19.506 --> 00:57:20.006
Bye.
&gt;&gt; Bye.

00:57:20.006 --> 00:57:25.530
[BLANK_AUDIO]

