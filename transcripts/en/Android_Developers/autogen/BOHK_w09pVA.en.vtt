WEBVTT
Kind: captions
Language: en

00:00:01.420 --> 00:00:04.510 align:start position:0%
 
[Music]

00:00:04.510 --> 00:00:04.520 align:start position:0%
[Music]
 

00:00:04.520 --> 00:00:07.550 align:start position:0%
[Music]
my<00:00:05.520><c> name</c><00:00:05.730><c> is</c><00:00:05.879><c> Igor</c><00:00:06.330><c> I'm</c><00:00:06.750><c> an</c><00:00:06.899><c> engineer</c><00:00:07.319><c> in</c><00:00:07.410><c> the</c>

00:00:07.550 --> 00:00:07.560 align:start position:0%
my name is Igor I'm an engineer in the
 

00:00:07.560 --> 00:00:10.339 align:start position:0%
my name is Igor I'm an engineer in the
Android<00:00:07.919><c> team</c><00:00:08.160><c> hey</c><00:00:08.940><c> my</c><00:00:09.179><c> name</c><00:00:09.330><c> is</c><00:00:09.389><c> Sergey</c><00:00:09.750><c> and</c><00:00:10.019><c> I</c>

00:00:10.339 --> 00:00:10.349 align:start position:0%
Android team hey my name is Sergey and I
 

00:00:10.349 --> 00:00:12.830 align:start position:0%
Android team hey my name is Sergey and I
work<00:00:10.559><c> in</c><00:00:10.740><c> the</c><00:00:10.830><c> same</c><00:00:11.040><c> team</c><00:00:11.280><c> hi</c><00:00:11.910><c> I'm</c><00:00:12.240><c> Sean</c><00:00:12.660><c> I'm</c>

00:00:12.830 --> 00:00:12.840 align:start position:0%
work in the same team hi I'm Sean I'm
 

00:00:12.840 --> 00:00:15.440 align:start position:0%
work in the same team hi I'm Sean I'm
from<00:00:13.049><c> Android</c><00:00:13.320><c> dev</c><00:00:13.469><c> rel</c><00:00:13.590><c> okay</c><00:00:14.400><c> today</c><00:00:15.150><c> we</c><00:00:15.389><c> are</c>

00:00:15.440 --> 00:00:15.450 align:start position:0%
from Android dev rel okay today we are
 

00:00:15.450 --> 00:00:17.750 align:start position:0%
from Android dev rel okay today we are
going<00:00:15.630><c> to</c><00:00:15.750><c> talk</c><00:00:16.139><c> about</c><00:00:16.369><c> qualities</c><00:00:17.369><c> on</c>

00:00:17.750 --> 00:00:17.760 align:start position:0%
going to talk about qualities on
 

00:00:17.760 --> 00:00:20.990 align:start position:0%
going to talk about qualities on
androids<00:00:18.890><c> but</c><00:00:19.890><c> before</c><00:00:20.279><c> we</c><00:00:20.369><c> talk</c><00:00:20.580><c> about</c><00:00:20.609><c> that</c>

00:00:20.990 --> 00:00:21.000 align:start position:0%
androids but before we talk about that
 

00:00:21.000 --> 00:00:22.490 align:start position:0%
androids but before we talk about that
let's<00:00:21.150><c> try</c><00:00:21.330><c> to</c><00:00:21.420><c> figure</c><00:00:21.630><c> out</c><00:00:21.750><c> like</c><00:00:21.840><c> why</c><00:00:22.260><c> do</c><00:00:22.320><c> you</c>

00:00:22.490 --> 00:00:22.500 align:start position:0%
let's try to figure out like why do you
 

00:00:22.500 --> 00:00:25.250 align:start position:0%
let's try to figure out like why do you
even<00:00:22.680><c> need</c><00:00:23.039><c> some</c><00:00:23.430><c> qualities</c><00:00:23.970><c> and</c><00:00:24.420><c> to</c>

00:00:25.250 --> 00:00:25.260 align:start position:0%
even need some qualities and to
 

00:00:25.260 --> 00:00:27.380 align:start position:0%
even need some qualities and to
understand<00:00:25.769><c> that</c><00:00:25.890><c> let's</c><00:00:26.160><c> get</c><00:00:26.400><c> how</c><00:00:26.760><c> you</c><00:00:26.820><c> write</c>

00:00:27.380 --> 00:00:27.390 align:start position:0%
understand that let's get how you write
 

00:00:27.390 --> 00:00:31.429 align:start position:0%
understand that let's get how you write
UI<00:00:27.720><c> code</c><00:00:28.080><c> on</c><00:00:28.380><c> Android</c><00:00:29.420><c> so</c><00:00:30.420><c> this</c><00:00:30.840><c> is</c><00:00:30.990><c> the</c><00:00:31.170><c> dream</c>

00:00:31.429 --> 00:00:31.439 align:start position:0%
UI code on Android so this is the dream
 

00:00:31.439 --> 00:00:34.010 align:start position:0%
UI code on Android so this is the dream
code<00:00:31.859><c> we</c><00:00:32.130><c> want</c><00:00:32.340><c> to</c><00:00:32.550><c> write</c><00:00:32.730><c> you</c><00:00:33.239><c> like</c><00:00:33.450><c> color</c>

00:00:34.010 --> 00:00:34.020 align:start position:0%
code we want to write you like color
 

00:00:34.020 --> 00:00:36.319 align:start position:0%
code we want to write you like color
function<00:00:34.680><c> makes</c><00:00:35.309><c> a</c><00:00:35.489><c> network</c><00:00:35.910><c> request</c>

00:00:36.319 --> 00:00:36.329 align:start position:0%
function makes a network request
 

00:00:36.329 --> 00:00:39.380 align:start position:0%
function makes a network request
whatever<00:00:36.780><c> you</c><00:00:37.710><c> get</c><00:00:37.890><c> the</c><00:00:38.100><c> user</c><00:00:38.309><c> set</c><00:00:39.000><c> it</c><00:00:39.149><c> on</c><00:00:39.270><c> the</c>

00:00:39.380 --> 00:00:39.390 align:start position:0%
whatever you get the user set it on the
 

00:00:39.390 --> 00:00:41.479 align:start position:0%
whatever you get the user set it on the
text<00:00:39.690><c> view</c><00:00:39.719><c> this</c><00:00:40.379><c> is</c><00:00:40.590><c> what</c><00:00:40.770><c> you</c><00:00:40.920><c> want</c><00:00:41.219><c> to</c><00:00:41.370><c> write</c>

00:00:41.479 --> 00:00:41.489 align:start position:0%
text view this is what you want to write
 

00:00:41.489 --> 00:00:43.850 align:start position:0%
text view this is what you want to write
but<00:00:42.450><c> if</c><00:00:42.540><c> you</c><00:00:42.660><c> write</c><00:00:42.870><c> that</c><00:00:43.079><c> you</c><00:00:43.530><c> get</c><00:00:43.710><c> an</c>

00:00:43.850 --> 00:00:43.860 align:start position:0%
but if you write that you get an
 

00:00:43.860 --> 00:00:45.650 align:start position:0%
but if you write that you get an
exception<00:00:44.250><c> because</c><00:00:44.640><c> you</c><00:00:45.090><c> cannot</c><00:00:45.390><c> make</c><00:00:45.450><c> a</c>

00:00:45.650 --> 00:00:45.660 align:start position:0%
exception because you cannot make a
 

00:00:45.660 --> 00:00:48.590 align:start position:0%
exception because you cannot make a
network<00:00:46.110><c> request</c><00:00:46.260><c> on</c><00:00:46.649><c> the</c><00:00:46.800><c> main</c><00:00:46.950><c> thread</c><00:00:47.600><c> easy</c>

00:00:48.590 --> 00:00:48.600 align:start position:0%
network request on the main thread easy
 

00:00:48.600 --> 00:00:51.619 align:start position:0%
network request on the main thread easy
we<00:00:49.140><c> just</c><00:00:49.350><c> put</c><00:00:49.530><c> an</c><00:00:49.649><c> insider</c><00:00:50.010><c> threat</c><00:00:50.280><c> and</c><00:00:50.760><c> run</c>

00:00:51.619 --> 00:00:51.629 align:start position:0%
we just put an insider threat and run
 

00:00:51.629 --> 00:00:54.410 align:start position:0%
we just put an insider threat and run
the<00:00:51.809><c> code</c><00:00:52.020><c> now</c><00:00:52.739><c> you're</c><00:00:52.949><c> going</c><00:00:53.219><c> to</c><00:00:53.399><c> complain</c><00:00:54.180><c> is</c>

00:00:54.410 --> 00:00:54.420 align:start position:0%
the code now you're going to complain is
 

00:00:54.420 --> 00:00:56.150 align:start position:0%
the code now you're going to complain is
the<00:00:54.570><c> text</c><00:00:54.899><c> view</c><00:00:55.110><c> which</c><00:00:55.320><c> is</c><00:00:55.590><c> like</c><00:00:55.739><c> you</c><00:00:55.890><c> cannot</c>

00:00:56.150 --> 00:00:56.160 align:start position:0%
the text view which is like you cannot
 

00:00:56.160 --> 00:00:57.770 align:start position:0%
the text view which is like you cannot
touch<00:00:56.430><c> the</c><00:00:56.670><c> UI</c><00:00:56.820><c> thread</c><00:00:57.120><c> from</c><00:00:57.390><c> a</c><00:00:57.570><c> background</c>

00:00:57.770 --> 00:00:57.780 align:start position:0%
touch the UI thread from a background
 

00:00:57.780 --> 00:01:01.880 align:start position:0%
touch the UI thread from a background
thread<00:00:58.109><c> and</c><00:00:59.390><c> okay</c><00:01:00.390><c> go</c><00:01:00.989><c> write</c><00:01:01.289><c> this</c><00:01:01.530><c> kind</c><00:01:01.710><c> of</c>

00:01:01.880 --> 00:01:01.890 align:start position:0%
thread and okay go write this kind of
 

00:01:01.890 --> 00:01:04.520 align:start position:0%
thread and okay go write this kind of
code<00:01:01.949><c> where</c><00:01:02.520><c> you</c><00:01:03.210><c> make</c><00:01:03.480><c> it</c><00:01:03.510><c> a</c><00:01:03.750><c> synchronous</c><00:01:04.320><c> you</c>

00:01:04.520 --> 00:01:04.530 align:start position:0%
code where you make it a synchronous you
 

00:01:04.530 --> 00:01:06.830 align:start position:0%
code where you make it a synchronous you
provide<00:01:04.949><c> a</c><00:01:04.979><c> callback</c><00:01:05.369><c> it</c><00:01:06.270><c> runs</c><00:01:06.630><c> on</c><00:01:06.780><c> the</c>

00:01:06.830 --> 00:01:06.840 align:start position:0%
provide a callback it runs on the
 

00:01:06.840 --> 00:01:08.390 align:start position:0%
provide a callback it runs on the
background<00:01:07.350><c> thread</c><00:01:07.590><c> and</c><00:01:07.890><c> cause</c><00:01:08.159><c> your</c>

00:01:08.390 --> 00:01:08.400 align:start position:0%
background thread and cause your
 

00:01:08.400 --> 00:01:11.090 align:start position:0%
background thread and cause your
callback<00:01:08.700><c> on</c><00:01:09.090><c> the</c><00:01:09.360><c> UI</c><00:01:09.540><c> thread</c><00:01:09.869><c> and</c><00:01:10.260><c> this</c><00:01:10.920><c> code</c>

00:01:11.090 --> 00:01:11.100 align:start position:0%
callback on the UI thread and this code
 

00:01:11.100 --> 00:01:13.940 align:start position:0%
callback on the UI thread and this code
works<00:01:11.310><c> fine</c><00:01:11.869><c> except</c><00:01:12.869><c> if</c><00:01:13.110><c> you're</c><00:01:13.320><c> writing</c><00:01:13.590><c> code</c>

00:01:13.940 --> 00:01:13.950 align:start position:0%
works fine except if you're writing code
 

00:01:13.950 --> 00:01:16.130 align:start position:0%
works fine except if you're writing code
like<00:01:13.979><c> this</c><00:01:14.430><c> you're</c><00:01:15.090><c> gonna</c><00:01:15.240><c> receive</c><00:01:15.630><c> out</c><00:01:15.840><c> of</c>

00:01:16.130 --> 00:01:16.140 align:start position:0%
like this you're gonna receive out of
 

00:01:16.140 --> 00:01:18.140 align:start position:0%
like this you're gonna receive out of
out<00:01:16.350><c> of</c><00:01:16.409><c> memory</c><00:01:16.890><c> exceptions</c><00:01:17.610><c> because</c><00:01:17.939><c> you're</c>

00:01:18.140 --> 00:01:18.150 align:start position:0%
out of memory exceptions because you're
 

00:01:18.150 --> 00:01:20.179 align:start position:0%
out of memory exceptions because you're
going<00:01:18.360><c> to</c><00:01:18.450><c> be</c><00:01:18.570><c> leaking</c><00:01:18.869><c> those</c><00:01:19.320><c> callbacks</c><00:01:19.650><c> left</c>

00:01:20.179 --> 00:01:20.189 align:start position:0%
going to be leaking those callbacks left
 

00:01:20.189 --> 00:01:22.850 align:start position:0%
going to be leaking those callbacks left
and<00:01:20.400><c> right</c><00:01:20.810><c> there's</c><00:01:21.810><c> a</c><00:01:21.900><c> solution</c><00:01:22.409><c> to</c><00:01:22.560><c> this</c><00:01:22.680><c> as</c>

00:01:22.850 --> 00:01:22.860 align:start position:0%
and right there's a solution to this as
 

00:01:22.860 --> 00:01:25.460 align:start position:0%
and right there's a solution to this as
well<00:01:23.600><c> where</c><00:01:24.600><c> we</c><00:01:24.630><c> can</c><00:01:25.020><c> like</c><00:01:25.170><c> have</c><00:01:25.380><c> an</c>

00:01:25.460 --> 00:01:25.470 align:start position:0%
well where we can like have an
 

00:01:25.470 --> 00:01:27.560 align:start position:0%
well where we can like have an
understanding<00:01:26.159><c> of</c><00:01:26.250><c> a</c><00:01:26.400><c> subscription</c><00:01:27.270><c> that</c>

00:01:27.560 --> 00:01:27.570 align:start position:0%
understanding of a subscription that
 

00:01:27.570 --> 00:01:29.899 align:start position:0%
understanding of a subscription that
keeps<00:01:27.960><c> his</c><00:01:28.170><c> chain</c><00:01:28.470><c> and</c><00:01:28.770><c> whenever</c><00:01:29.640><c> you're</c><00:01:29.850><c> a</c>

00:01:29.899 --> 00:01:29.909 align:start position:0%
keeps his chain and whenever you're a
 

00:01:29.909 --> 00:01:31.929 align:start position:0%
keeps his chain and whenever you're a
stop<00:01:30.360><c> we</c><00:01:30.600><c> can</c><00:01:30.780><c> just</c><00:01:30.960><c> cancel</c><00:01:31.259><c> the</c><00:01:31.560><c> subscription</c>

00:01:31.929 --> 00:01:31.939 align:start position:0%
stop we can just cancel the subscription
 

00:01:31.939 --> 00:01:35.149 align:start position:0%
stop we can just cancel the subscription
that<00:01:32.939><c> one</c><00:01:33.119><c> works</c><00:01:33.360><c> but</c><00:01:34.290><c> then</c><00:01:34.470><c> you</c><00:01:34.619><c> end</c><00:01:34.770><c> up</c>

00:01:35.149 --> 00:01:35.159 align:start position:0%
that one works but then you end up
 

00:01:35.159 --> 00:01:38.690 align:start position:0%
that one works but then you end up
something<00:01:35.460><c> like</c><00:01:35.790><c> this</c><00:01:36.560><c> and</c><00:01:37.560><c> I'm</c><00:01:38.220><c> not</c><00:01:38.310><c> making</c>

00:01:38.690 --> 00:01:38.700 align:start position:0%
something like this and I'm not making
 

00:01:38.700 --> 00:01:40.850 align:start position:0%
something like this and I'm not making
this<00:01:39.090><c> up</c><00:01:39.299><c> by</c><00:01:39.509><c> the</c><00:01:39.570><c> way</c><00:01:39.750><c> three</c><00:01:40.079><c> years</c><00:01:40.320><c> ago</c><00:01:40.530><c> when</c>

00:01:40.850 --> 00:01:40.860 align:start position:0%
this up by the way three years ago when
 

00:01:40.860 --> 00:01:42.889 align:start position:0%
this up by the way three years ago when
we<00:01:41.009><c> started</c><00:01:41.040><c> architecture</c><00:01:42.000><c> components</c><00:01:42.630><c> I</c><00:01:42.720><c> was</c>

00:01:42.889 --> 00:01:42.899 align:start position:0%
we started architecture components I was
 

00:01:42.899 --> 00:01:45.410 align:start position:0%
we started architecture components I was
looking<00:01:43.229><c> at</c><00:01:43.409><c> the</c><00:01:43.560><c> Google</c><00:01:43.890><c> app</c><00:01:44.040><c> code</c><00:01:44.430><c> and</c><00:01:44.759><c> I</c>

00:01:45.410 --> 00:01:45.420 align:start position:0%
looking at the Google app code and I
 

00:01:45.420 --> 00:01:48.080 align:start position:0%
looking at the Google app code and I
found<00:01:45.780><c> one</c><00:01:45.990><c> application</c><00:01:46.649><c> that</c><00:01:46.829><c> had</c><00:01:47.070><c> 26</c><00:01:47.729><c> lines</c>

00:01:48.080 --> 00:01:48.090 align:start position:0%
found one application that had 26 lines
 

00:01:48.090 --> 00:01:50.990 align:start position:0%
found one application that had 26 lines
of<00:01:48.420><c> amount</c><00:01:48.840><c> math</c><00:01:49.020><c> unregister</c><00:01:49.860><c> so</c><00:01:50.729><c> if</c><00:01:50.850><c> it</c>

00:01:50.990 --> 00:01:51.000 align:start position:0%
of amount math unregister so if it
 

00:01:51.000 --> 00:01:53.179 align:start position:0%
of amount math unregister so if it
happens<00:01:51.299><c> at</c><00:01:51.689><c> Google</c><00:01:52.110><c> it</c><00:01:52.290><c> happens</c><00:01:52.770><c> everywhere</c>

00:01:53.179 --> 00:01:53.189 align:start position:0%
happens at Google it happens everywhere
 

00:01:53.189 --> 00:01:55.999 align:start position:0%
happens at Google it happens everywhere
like<00:01:53.430><c> we'd</c><00:01:53.610><c> always</c><00:01:53.700><c> write</c><00:01:54.119><c> the</c><00:01:54.270><c> base</c><00:01:54.420><c> code</c><00:01:55.009><c> but</c>

00:01:55.999 --> 00:01:56.009 align:start position:0%
like we'd always write the base code but
 

00:01:56.009 --> 00:01:58.370 align:start position:0%
like we'd always write the base code but
there's<00:01:56.189><c> a</c><00:01:56.280><c> solution</c><00:01:56.520><c> to</c><00:01:56.850><c> this</c><00:01:57.090><c> as</c><00:01:57.299><c> well</c><00:01:57.479><c> which</c>

00:01:58.370 --> 00:01:58.380 align:start position:0%
there's a solution to this as well which
 

00:01:58.380 --> 00:02:00.350 align:start position:0%
there's a solution to this as well which
if<00:01:58.710><c> you</c><00:01:59.040><c> are</c><00:01:59.100><c> using</c><00:01:59.280><c> something</c><00:01:59.700><c> like</c><00:01:59.880><c> Eric's</c>

00:02:00.350 --> 00:02:00.360 align:start position:0%
if you are using something like Eric's
 

00:02:00.360 --> 00:02:03.260 align:start position:0%
if you are using something like Eric's
Java<00:02:00.750><c> and</c><00:02:01.079><c> so</c><00:02:02.070><c> this</c><00:02:02.399><c> function</c><00:02:02.579><c> returns</c><00:02:03.119><c> an</c>

00:02:03.260 --> 00:02:03.270 align:start position:0%
Java and so this function returns an
 

00:02:03.270 --> 00:02:06.200 align:start position:0%
Java and so this function returns an
observable<00:02:03.990><c> you</c><00:02:04.799><c> can</c><00:02:04.979><c> just</c><00:02:05.219><c> use</c><00:02:05.670><c> the</c><00:02:06.000><c> auto</c>

00:02:06.200 --> 00:02:06.210 align:start position:0%
observable you can just use the auto
 

00:02:06.210 --> 00:02:09.410 align:start position:0%
observable you can just use the auto
dispose<00:02:06.750><c> library</c><00:02:07.670><c> associated</c><00:02:08.670><c> subscription</c>

00:02:09.410 --> 00:02:09.420 align:start position:0%
dispose library associated subscription
 

00:02:09.420 --> 00:02:12.619 align:start position:0%
dispose library associated subscription
with<00:02:09.810><c> your</c><00:02:10.050><c> real</c><00:02:10.289><c> life</c><00:02:10.500><c> cycle</c><00:02:11.039><c> and</c><00:02:11.629><c> safely</c>

00:02:12.619 --> 00:02:12.629 align:start position:0%
with your real life cycle and safely
 

00:02:12.629 --> 00:02:13.820 align:start position:0%
with your real life cycle and safely
subscribe

00:02:13.820 --> 00:02:13.830 align:start position:0%
subscribe
 

00:02:13.830 --> 00:02:16.580 align:start position:0%
subscribe
and<00:02:13.920><c> this</c><00:02:14.280><c> works</c><00:02:14.550><c> perfectly</c><00:02:15.380><c> similarly</c><00:02:16.380><c> you</c>

00:02:16.580 --> 00:02:16.590 align:start position:0%
and this works perfectly similarly you
 

00:02:16.590 --> 00:02:18.530 align:start position:0%
and this works perfectly similarly you
could<00:02:16.770><c> be</c><00:02:16.920><c> using</c><00:02:17.220><c> live</c><00:02:17.430><c> data</c><00:02:17.700><c> which</c><00:02:18.000><c> enforces</c>

00:02:18.530 --> 00:02:18.540 align:start position:0%
could be using live data which enforces
 

00:02:18.540 --> 00:02:20.600 align:start position:0%
could be using live data which enforces
you<00:02:18.810><c> to</c><00:02:18.960><c> have</c><00:02:19.110><c> a</c><00:02:19.170><c> life</c><00:02:19.410><c> cycle</c><00:02:19.620><c> to</c><00:02:19.980><c> observe</c><00:02:20.340><c> and</c>

00:02:20.600 --> 00:02:20.610 align:start position:0%
you to have a life cycle to observe and
 

00:02:20.610 --> 00:02:24.470 align:start position:0%
you to have a life cycle to observe and
this<00:02:21.270><c> also</c><00:02:21.540><c> works</c><00:02:22.730><c> so</c><00:02:23.730><c> this</c><00:02:24.000><c> whole</c><00:02:24.180><c> problem</c>

00:02:24.470 --> 00:02:24.480 align:start position:0%
this also works so this whole problem
 

00:02:24.480 --> 00:02:26.570 align:start position:0%
this also works so this whole problem
right<00:02:24.870><c> why</c><00:02:25.230><c> are</c><00:02:25.260><c> we</c><00:02:25.440><c> even</c><00:02:25.740><c> talking</c><00:02:26.070><c> here</c><00:02:26.550><c> about</c>

00:02:26.570 --> 00:02:26.580 align:start position:0%
right why are we even talking here about
 

00:02:26.580 --> 00:02:29.890 align:start position:0%
right why are we even talking here about
this<00:02:27.030><c> if</c><00:02:27.450><c> there's</c><00:02:27.810><c> already</c><00:02:27.990><c> good</c><00:02:28.350><c> solutions</c>

00:02:29.890 --> 00:02:29.900 align:start position:0%
this if there's already good solutions
 

00:02:29.900 --> 00:02:32.630 align:start position:0%
this if there's already good solutions
every<00:02:30.900><c> year</c><00:02:31.260><c> we</c><00:02:31.440><c> run</c><00:02:31.650><c> these</c><00:02:31.890><c> developer</c>

00:02:32.630 --> 00:02:32.640 align:start position:0%
every year we run these developer
 

00:02:32.640 --> 00:02:34.520 align:start position:0%
every year we run these developer
benchmark<00:02:33.150><c> service</c><00:02:33.510><c> we</c><00:02:33.690><c> ask</c><00:02:33.840><c> the</c><00:02:34.020><c> voters</c><00:02:34.140><c> how</c>

00:02:34.520 --> 00:02:34.530 align:start position:0%
benchmark service we ask the voters how
 

00:02:34.530 --> 00:02:36.050 align:start position:0%
benchmark service we ask the voters how
are<00:02:34.680><c> they</c><00:02:34.830><c> doing</c><00:02:35.040><c> but</c><00:02:35.460><c> are</c><00:02:35.610><c> there</c><00:02:35.760><c> problems</c>

00:02:36.050 --> 00:02:36.060 align:start position:0%
are they doing but are there problems
 

00:02:36.060 --> 00:02:39.470 align:start position:0%
are they doing but are there problems
and<00:02:36.600><c> the</c><00:02:37.020><c> service</c><00:02:37.410><c> we</c><00:02:37.590><c> run</c><00:02:37.800><c> last</c><00:02:38.040><c> year</c><00:02:38.450><c> one</c><00:02:39.450><c> of</c>

00:02:39.470 --> 00:02:39.480 align:start position:0%
and the service we run last year one of
 

00:02:39.480 --> 00:02:41.630 align:start position:0%
and the service we run last year one of
the<00:02:39.750><c> top</c><00:02:40.080><c> cop</c><00:02:40.410><c> plays</c><00:02:40.680><c> was</c><00:02:40.980><c> threading</c><00:02:41.490><c> and</c>

00:02:41.630 --> 00:02:41.640 align:start position:0%
the top cop plays was threading and
 

00:02:41.640 --> 00:02:44.360 align:start position:0%
the top cop plays was threading and
concurrency<00:02:42.240><c> developer</c><00:02:42.900><c> says</c><00:02:43.200><c> this</c><00:02:43.860><c> is</c><00:02:44.040><c> hard</c>

00:02:44.360 --> 00:02:44.370 align:start position:0%
concurrency developer says this is hard
 

00:02:44.370 --> 00:02:47.690 align:start position:0%
concurrency developer says this is hard
on<00:02:44.490><c> Android</c><00:02:44.940><c> and</c><00:02:45.540><c> one</c><00:02:46.470><c> of</c><00:02:46.620><c> the</c><00:02:46.770><c> top</c><00:02:46.980><c> Lucas</c><00:02:47.400><c> was</c>

00:02:47.690 --> 00:02:47.700 align:start position:0%
on Android and one of the top Lucas was
 

00:02:47.700 --> 00:02:49.640 align:start position:0%
on Android and one of the top Lucas was
this<00:02:48.030><c> week</c><00:02:48.270><c> what</c><00:02:48.480><c> we</c><00:02:48.600><c> call</c><00:02:48.810><c> live</c><00:02:49.050><c> data</c><00:02:49.290><c> plus</c>

00:02:49.640 --> 00:02:49.650 align:start position:0%
this week what we call live data plus
 

00:02:49.650 --> 00:02:52.250 align:start position:0%
this week what we call live data plus
once<00:02:49.950><c> the</c><00:02:50.190><c> people</c><00:02:50.640><c> want</c><00:02:50.970><c> us</c><00:02:51.150><c> to</c><00:02:51.480><c> extend</c><00:02:52.020><c> live</c>

00:02:52.250 --> 00:02:52.260 align:start position:0%
once the people want us to extend live
 

00:02:52.260 --> 00:02:55.730 align:start position:0%
once the people want us to extend live
data<00:02:52.530><c> make</c><00:02:53.220><c> it</c><00:02:53.400><c> more</c><00:02:53.610><c> like</c><00:02:53.820><c> Eric's</c><00:02:54.120><c> Chara</c><00:02:54.740><c> and</c>

00:02:55.730 --> 00:02:55.740 align:start position:0%
data make it more like Eric's Chara and
 

00:02:55.740 --> 00:02:59.210 align:start position:0%
data make it more like Eric's Chara and
you're<00:02:56.310><c> like</c><00:02:56.490><c> why</c><00:02:57.180><c> why</c><00:02:58.050><c> do</c><00:02:58.110><c> you</c><00:02:58.320><c> want</c><00:02:58.500><c> this</c><00:02:58.680><c> we</c>

00:02:59.210 --> 00:02:59.220 align:start position:0%
you're like why why do you want this we
 

00:02:59.220 --> 00:03:01.160 align:start position:0%
you're like why why do you want this we
have<00:02:59.340><c> good</c><00:02:59.520><c> solutions</c><00:02:59.910><c> just</c><00:03:00.180><c> use</c><00:03:00.540><c> one</c><00:03:00.810><c> of</c><00:03:00.840><c> them</c>

00:03:01.160 --> 00:03:01.170 align:start position:0%
have good solutions just use one of them
 

00:03:01.170 --> 00:03:03.530 align:start position:0%
have good solutions just use one of them
so<00:03:01.890><c> we</c><00:03:02.340><c> didn't</c><00:03:02.550><c> bother</c><00:03:02.580><c> we</c><00:03:02.790><c> do</c><00:03:02.940><c> best</c><00:03:03.150><c> when</c><00:03:03.390><c> we</c>

00:03:03.530 --> 00:03:03.540 align:start position:0%
so we didn't bother we do best when we
 

00:03:03.540 --> 00:03:06.650 align:start position:0%
so we didn't bother we do best when we
don't<00:03:03.750><c> know</c><00:03:03.900><c> we</c><00:03:04.170><c> did</c><00:03:04.380><c> a</c><00:03:04.500><c> UX</c><00:03:04.950><c> research</c><00:03:05.570><c> this</c><00:03:06.570><c> is</c>

00:03:06.650 --> 00:03:06.660 align:start position:0%
don't know we did a UX research this is
 

00:03:06.660 --> 00:03:08.150 align:start position:0%
don't know we did a UX research this is
a<00:03:06.720><c> user</c><00:03:06.960><c> experience</c><00:03:07.170><c> research</c><00:03:07.890><c> on</c>

00:03:08.150 --> 00:03:08.160 align:start position:0%
a user experience research on
 

00:03:08.160 --> 00:03:11.720 align:start position:0%
a user experience research on
concurrency<00:03:09.740><c> so</c><00:03:10.740><c> we</c><00:03:10.980><c> did</c><00:03:11.160><c> in-depth</c>

00:03:11.720 --> 00:03:11.730 align:start position:0%
concurrency so we did in-depth
 

00:03:11.730 --> 00:03:13.760 align:start position:0%
concurrency so we did in-depth
interviews<00:03:12.360><c> with</c><00:03:12.390><c> nine</c><00:03:12.840><c> developers</c><00:03:13.470><c> what</c>

00:03:13.760 --> 00:03:13.770 align:start position:0%
interviews with nine developers what
 

00:03:13.770 --> 00:03:16.250 align:start position:0%
interviews with nine developers what
they<00:03:13.920><c> do</c><00:03:13.980><c> is</c><00:03:14.280><c> they</c><00:03:14.910><c> do</c><00:03:14.970><c> the</c><00:03:15.300><c> regular</c><00:03:15.750><c> work</c><00:03:15.990><c> for</c>

00:03:16.250 --> 00:03:16.260 align:start position:0%
they do is they do the regular work for
 

00:03:16.260 --> 00:03:18.650 align:start position:0%
they do is they do the regular work for
a<00:03:16.290><c> couple</c><00:03:16.500><c> of</c><00:03:16.680><c> weeks</c><00:03:16.740><c> in</c><00:03:17.730><c> their</c><00:03:18.000><c> own</c><00:03:18.150><c> company</c>

00:03:18.650 --> 00:03:18.660 align:start position:0%
a couple of weeks in their own company
 

00:03:18.660 --> 00:03:20.770 align:start position:0%
a couple of weeks in their own company
and<00:03:18.840><c> every</c><00:03:19.470><c> time</c><00:03:19.680><c> they</c><00:03:19.860><c> see</c><00:03:20.070><c> a</c><00:03:20.100><c> problem</c><00:03:20.370><c> about</c>

00:03:20.770 --> 00:03:20.780 align:start position:0%
and every time they see a problem about
 

00:03:20.780 --> 00:03:24.560 align:start position:0%
and every time they see a problem about
concurrency<00:03:21.920><c> like</c><00:03:22.920><c> this</c><00:03:23.100><c> observable</c><00:03:23.760><c> T</c><00:03:24.000><c> they</c>

00:03:24.560 --> 00:03:24.570 align:start position:0%
concurrency like this observable T they
 

00:03:24.570 --> 00:03:26.479 align:start position:0%
concurrency like this observable T they
just<00:03:24.780><c> write</c><00:03:25.200><c> it</c><00:03:25.380><c> down</c><00:03:25.590><c> this</c><00:03:25.830><c> was</c><00:03:26.070><c> the</c><00:03:26.220><c> problem</c>

00:03:26.479 --> 00:03:26.489 align:start position:0%
just write it down this was the problem
 

00:03:26.489 --> 00:03:28.699 align:start position:0%
just write it down this was the problem
this<00:03:26.850><c> is</c><00:03:26.970><c> I</c><00:03:27.090><c> sold</c><00:03:27.480><c> it</c><00:03:27.720><c> and</c><00:03:27.900><c> this</c><00:03:28.080><c> is</c><00:03:28.230><c> how</c><00:03:28.260><c> I</c><00:03:28.380><c> feel</c>

00:03:28.699 --> 00:03:28.709 align:start position:0%
this is I sold it and this is how I feel
 

00:03:28.709 --> 00:03:31.460 align:start position:0%
this is I sold it and this is how I feel
about<00:03:28.830><c> it</c><00:03:29.160><c> and</c><00:03:29.459><c> in</c><00:03:30.209><c> this</c><00:03:30.360><c> study</c><00:03:30.600><c> we</c><00:03:30.840><c> focused</c><00:03:31.260><c> on</c>

00:03:31.460 --> 00:03:31.470 align:start position:0%
about it and in this study we focused on
 

00:03:31.470 --> 00:03:33.500 align:start position:0%
about it and in this study we focused on
three<00:03:31.650><c> main</c><00:03:31.920><c> things</c><00:03:32.190><c> focused</c><00:03:32.880><c> on</c><00:03:33.000><c> live</c><00:03:33.239><c> data</c>

00:03:33.500 --> 00:03:33.510 align:start position:0%
three main things focused on live data
 

00:03:33.510 --> 00:03:36.260 align:start position:0%
three main things focused on live data
which<00:03:33.930><c> is</c><00:03:34.080><c> our</c><00:03:34.230><c> observable</c><00:03:34.920><c> date</c><00:03:35.130><c> older</c><00:03:35.580><c> we</c>

00:03:36.260 --> 00:03:36.270 align:start position:0%
which is our observable date older we
 

00:03:36.270 --> 00:03:38.449 align:start position:0%
which is our observable date older we
focused<00:03:36.720><c> on</c><00:03:36.900><c> Eric</c><00:03:37.230><c> Shaw</c><00:03:37.470><c> with</c><00:03:37.830><c> the</c><00:03:37.950><c> reactive</c>

00:03:38.449 --> 00:03:38.459 align:start position:0%
focused on Eric Shaw with the reactive
 

00:03:38.459 --> 00:03:40.970 align:start position:0%
focused on Eric Shaw with the reactive
Sims<00:03:38.760><c> library</c><00:03:39.270><c> and</c><00:03:39.709><c> qualities</c><00:03:40.709><c> which</c>

00:03:40.970 --> 00:03:40.980 align:start position:0%
Sims library and qualities which
 

00:03:40.980 --> 00:03:43.660 align:start position:0%
Sims library and qualities which
provides<00:03:41.459><c> suspend</c><00:03:42.000><c> of</c><00:03:42.150><c> all</c><00:03:42.239><c> computations</c><00:03:43.020><c> and</c>

00:03:43.660 --> 00:03:43.670 align:start position:0%
provides suspend of all computations and
 

00:03:43.670 --> 00:03:46.580 align:start position:0%
provides suspend of all computations and
in<00:03:44.670><c> the</c><00:03:44.790><c> result</c><00:03:45.150><c> of</c><00:03:45.300><c> that</c><00:03:45.450><c> study</c><00:03:45.780><c> this</c><00:03:46.230><c> was</c><00:03:46.470><c> the</c>

00:03:46.580 --> 00:03:46.590 align:start position:0%
in the result of that study this was the
 

00:03:46.590 --> 00:03:49.220 align:start position:0%
in the result of that study this was the
conclusion<00:03:47.070><c> for</c><00:03:47.489><c> live</c><00:03:47.700><c> data</c><00:03:47.970><c> people</c><00:03:48.330><c> say</c><00:03:48.660><c> we</c>

00:03:49.220 --> 00:03:49.230 align:start position:0%
conclusion for live data people say we
 

00:03:49.230 --> 00:03:51.620 align:start position:0%
conclusion for live data people say we
love<00:03:49.470><c> it</c><00:03:49.620><c> but</c><00:03:50.280><c> we</c><00:03:50.430><c> want</c><00:03:50.640><c> a</c><00:03:50.730><c> complete</c><00:03:51.239><c> solution</c>

00:03:51.620 --> 00:03:51.630 align:start position:0%
love it but we want a complete solution
 

00:03:51.630 --> 00:03:54.080 align:start position:0%
love it but we want a complete solution
in<00:03:52.080><c> fact</c><00:03:52.140><c> is</c><00:03:52.530><c> funny</c><00:03:52.800><c> live</c><00:03:53.190><c> data</c><00:03:53.400><c> doesn't</c><00:03:53.730><c> even</c>

00:03:54.080 --> 00:03:54.090 align:start position:0%
in fact is funny live data doesn't even
 

00:03:54.090 --> 00:03:56.630 align:start position:0%
in fact is funny live data doesn't even
support<00:03:54.870><c> anything</c><00:03:55.410><c> but</c><00:03:55.739><c> a</c><00:03:55.770><c> main</c><00:03:56.070><c> thread</c><00:03:56.400><c> but</c>

00:03:56.630 --> 00:03:56.640 align:start position:0%
support anything but a main thread but
 

00:03:56.640 --> 00:03:59.350 align:start position:0%
support anything but a main thread but
we<00:03:56.790><c> talked</c><00:03:57.030><c> about</c><00:03:57.209><c> it</c><00:03:57.480><c> in</c><00:03:57.600><c> a</c><00:03:57.720><c> concurrent</c><00:03:58.500><c> study</c>

00:03:59.350 --> 00:03:59.360 align:start position:0%
we talked about it in a concurrent study
 

00:03:59.360 --> 00:04:02.780 align:start position:0%
we talked about it in a concurrent study
for<00:04:00.360><c> our</c><00:04:00.510><c> Xterra</c><00:04:00.959><c> it</c><00:04:01.410><c> is</c><00:04:01.650><c> amazing</c><00:04:02.100><c> people</c><00:04:02.280><c> love</c>

00:04:02.780 --> 00:04:02.790 align:start position:0%
for our Xterra it is amazing people love
 

00:04:02.790 --> 00:04:06.229 align:start position:0%
for our Xterra it is amazing people love
and<00:04:03.120><c> hate</c><00:04:03.750><c> it</c><00:04:03.989><c> they</c><00:04:04.770><c> love</c><00:04:05.040><c> how</c><00:04:05.310><c> powerful</c><00:04:05.940><c> it</c><00:04:06.090><c> is</c>

00:04:06.229 --> 00:04:06.239 align:start position:0%
and hate it they love how powerful it is
 

00:04:06.239 --> 00:04:08.479 align:start position:0%
and hate it they love how powerful it is
but<00:04:06.840><c> the</c><00:04:06.989><c> common</c><00:04:07.350><c> complaint</c><00:04:07.770><c> we</c><00:04:07.920><c> always</c><00:04:08.250><c> heard</c>

00:04:08.479 --> 00:04:08.489 align:start position:0%
but the common complaint we always heard
 

00:04:08.489 --> 00:04:10.850 align:start position:0%
but the common complaint we always heard
was<00:04:08.790><c> well</c><00:04:09.030><c> as</c><00:04:09.120><c> always</c><00:04:09.330><c> misused</c><00:04:09.989><c> it</c><00:04:10.290><c> feels</c><00:04:10.620><c> like</c>

00:04:10.850 --> 00:04:10.860 align:start position:0%
was well as always misused it feels like
 

00:04:10.860 --> 00:04:14.120 align:start position:0%
was well as always misused it feels like
an<00:04:11.040><c> overkill</c><00:04:11.489><c> and</c><00:04:12.050><c> for</c><00:04:13.050><c> qualities</c><00:04:13.620><c> this</c><00:04:13.920><c> was</c>

00:04:14.120 --> 00:04:14.130 align:start position:0%
an overkill and for qualities this was
 

00:04:14.130 --> 00:04:16.940 align:start position:0%
an overkill and for qualities this was
like<00:04:14.340><c> it</c><00:04:15.209><c> really</c><00:04:15.540><c> looks</c><00:04:16.019><c> like</c><00:04:16.290><c> the</c><00:04:16.680><c> best</c>

00:04:16.940 --> 00:04:16.950 align:start position:0%
like it really looks like the best
 

00:04:16.950 --> 00:04:19.789 align:start position:0%
like it really looks like the best
solution<00:04:17.609><c> but</c><00:04:18.150><c> I'm</c><00:04:18.299><c> not</c><00:04:18.480><c> sure</c><00:04:18.810><c> it's</c><00:04:19.230><c> very</c><00:04:19.440><c> new</c>

00:04:19.789 --> 00:04:19.799 align:start position:0%
solution but I'm not sure it's very new
 

00:04:19.799 --> 00:04:22.580 align:start position:0%
solution but I'm not sure it's very new
it's<00:04:20.190><c> not</c><00:04:20.400><c> major</c><00:04:20.669><c> so</c><00:04:21.570><c> this</c><00:04:21.660><c> was</c><00:04:21.870><c> the</c><00:04:22.049><c> overall</c>

00:04:22.580 --> 00:04:22.590 align:start position:0%
it's not major so this was the overall
 

00:04:22.590 --> 00:04:25.600 align:start position:0%
it's not major so this was the overall
conclusion<00:04:23.400><c> we</c><00:04:23.729><c> said</c><00:04:23.970><c> we</c><00:04:24.180><c> need</c><00:04:24.330><c> a</c><00:04:24.360><c> solution</c>

00:04:25.600 --> 00:04:25.610 align:start position:0%
conclusion we said we need a solution
 

00:04:25.610 --> 00:04:27.470 align:start position:0%
conclusion we said we need a solution
that<00:04:26.610><c> is</c><00:04:26.669><c> simple</c>

00:04:27.470 --> 00:04:27.480 align:start position:0%
that is simple
 

00:04:27.480 --> 00:04:29.720 align:start position:0%
that is simple
it<00:04:27.570><c> shouldn't</c><00:04:27.930><c> be</c><00:04:28.590><c> hard</c><00:04:28.950><c> to</c><00:04:29.190><c> learn</c><00:04:29.430><c> that</c>

00:04:29.720 --> 00:04:29.730 align:start position:0%
it shouldn't be hard to learn that
 

00:04:29.730 --> 00:04:32.600 align:start position:0%
it shouldn't be hard to learn that
solution<00:04:30.330><c> it</c><00:04:31.200><c> should</c><00:04:31.470><c> be</c><00:04:31.590><c> compressive</c><00:04:32.400><c> so</c><00:04:32.550><c> you</c>

00:04:32.600 --> 00:04:32.610 align:start position:0%
solution it should be compressive so you
 

00:04:32.610 --> 00:04:34.310 align:start position:0%
solution it should be compressive so you
should<00:04:32.760><c> be</c><00:04:32.850><c> able</c><00:04:32.910><c> to</c><00:04:33.120><c> scale</c><00:04:33.510><c> to</c><00:04:33.540><c> different</c><00:04:34.140><c> use</c>

00:04:34.310 --> 00:04:34.320 align:start position:0%
should be able to scale to different use
 

00:04:34.320 --> 00:04:37.190 align:start position:0%
should be able to scale to different use
cases<00:04:34.620><c> and</c><00:04:35.310><c> it</c><00:04:36.240><c> should</c><00:04:36.480><c> be</c><00:04:36.660><c> robots</c><00:04:37.020><c> that</c>

00:04:37.190 --> 00:04:37.200 align:start position:0%
cases and it should be robots that
 

00:04:37.200 --> 00:04:40.250 align:start position:0%
cases and it should be robots that
should<00:04:37.380><c> be</c><00:04:37.470><c> built</c><00:04:37.740><c> in</c><00:04:38.010><c> testing</c><00:04:38.520><c> stories</c><00:04:39.260><c> so</c>

00:04:40.250 --> 00:04:40.260 align:start position:0%
should be built in testing stories so
 

00:04:40.260 --> 00:04:43.070 align:start position:0%
should be built in testing stories so
made<00:04:40.500><c> two</c><00:04:40.710><c> decisions</c><00:04:41.240><c> we</c><00:04:42.240><c> said</c><00:04:42.510><c> okay</c><00:04:42.840><c> we</c><00:04:42.990><c> are</c>

00:04:43.070 --> 00:04:43.080 align:start position:0%
made two decisions we said okay we are
 

00:04:43.080 --> 00:04:44.990 align:start position:0%
made two decisions we said okay we are
going<00:04:43.290><c> to</c><00:04:43.590><c> have</c><00:04:43.890><c> first-class</c><00:04:44.640><c> quality</c>

00:04:44.990 --> 00:04:45.000 align:start position:0%
going to have first-class quality
 

00:04:45.000 --> 00:04:48.800 align:start position:0%
going to have first-class quality
support<00:04:45.840><c> in</c><00:04:46.050><c> jetpack</c><00:04:46.700><c> and</c><00:04:47.700><c> we</c><00:04:48.240><c> are</c><00:04:48.360><c> going</c><00:04:48.630><c> to</c>

00:04:48.800 --> 00:04:48.810 align:start position:0%
support in jetpack and we are going to
 

00:04:48.810 --> 00:04:51.290 align:start position:0%
support in jetpack and we are going to
have<00:04:49.080><c> more</c><00:04:49.500><c> support</c><00:04:49.860><c> for</c><00:04:50.250><c> rxjava</c><00:04:50.820><c> in</c><00:04:51.120><c> our</c>

00:04:51.290 --> 00:04:51.300 align:start position:0%
have more support for rxjava in our
 

00:04:51.300 --> 00:04:54.860 align:start position:0%
have more support for rxjava in our
documentation<00:04:52.260><c> but</c><00:04:53.100><c> today</c><00:04:53.490><c> it</c><00:04:53.790><c> is</c><00:04:54.330><c> all</c><00:04:54.630><c> about</c>

00:04:54.860 --> 00:04:54.870 align:start position:0%
documentation but today it is all about
 

00:04:54.870 --> 00:04:56.000 align:start position:0%
documentation but today it is all about
Cortese

00:04:56.000 --> 00:04:56.010 align:start position:0%
Cortese
 

00:04:56.010 --> 00:04:58.070 align:start position:0%
Cortese
so<00:04:56.220><c> shut</c><00:04:56.760><c> why</c><00:04:57.120><c> don't</c><00:04:57.360><c> you</c><00:04:57.510><c> tell</c><00:04:57.840><c> us</c><00:04:57.990><c> a</c><00:04:58.020><c> little</c>

00:04:58.070 --> 00:04:58.080 align:start position:0%
so shut why don't you tell us a little
 

00:04:58.080 --> 00:05:01.040 align:start position:0%
so shut why don't you tell us a little
bit<00:04:58.320><c> more</c><00:04:58.560><c> about</c><00:04:58.800><c> what</c><00:04:59.070><c> qualities</c><00:04:59.580><c> are</c><00:05:00.050><c> thanks</c>

00:05:01.040 --> 00:05:01.050 align:start position:0%
bit more about what qualities are thanks
 

00:05:01.050 --> 00:05:03.440 align:start position:0%
bit more about what qualities are thanks
you<00:05:01.430><c> so</c><00:05:02.430><c> I</c><00:05:02.460><c> want</c><00:05:02.730><c> to</c><00:05:02.760><c> just</c><00:05:02.940><c> take</c><00:05:03.060><c> five</c><00:05:03.420><c> minutes</c>

00:05:03.440 --> 00:05:03.450 align:start position:0%
you so I want to just take five minutes
 

00:05:03.450 --> 00:05:06.020 align:start position:0%
you so I want to just take five minutes
and<00:05:04.050><c> talk</c><00:05:04.530><c> a</c><00:05:04.590><c> little</c><00:05:04.830><c> bit</c><00:05:05.010><c> about</c><00:05:05.040><c> what</c><00:05:05.580><c> problem</c>

00:05:06.020 --> 00:05:06.030 align:start position:0%
and talk a little bit about what problem
 

00:05:06.030 --> 00:05:08.600 align:start position:0%
and talk a little bit about what problem
carotenes<00:05:06.600><c> are</c><00:05:06.840><c> great</c><00:05:07.110><c> at</c><00:05:07.260><c> solving</c><00:05:07.470><c> so</c><00:05:08.220><c> in</c><00:05:08.520><c> a</c>

00:05:08.600 --> 00:05:08.610 align:start position:0%
carotenes are great at solving so in a
 

00:05:08.610 --> 00:05:10.670 align:start position:0%
carotenes are great at solving so in a
sentence<00:05:09.030><c> the</c><00:05:09.240><c> main</c><00:05:09.630><c> problem</c><00:05:10.110><c> the</c><00:05:10.230><c> correcting</c>

00:05:10.670 --> 00:05:10.680 align:start position:0%
sentence the main problem the correcting
 

00:05:10.680 --> 00:05:12.500 align:start position:0%
sentence the main problem the correcting
solve<00:05:10.980><c> is</c><00:05:11.190><c> simplifying</c><00:05:11.880><c> async</c><00:05:12.360><c> programming</c>

00:05:12.500 --> 00:05:12.510 align:start position:0%
solve is simplifying async programming
 

00:05:12.510 --> 00:05:15.410 align:start position:0%
solve is simplifying async programming
by<00:05:13.080><c> replacing</c><00:05:13.590><c> callbacks</c><00:05:14.130><c> which</c><00:05:14.610><c> is</c><00:05:14.820><c> quite</c>

00:05:15.410 --> 00:05:15.420 align:start position:0%
by replacing callbacks which is quite
 

00:05:15.420 --> 00:05:17.240 align:start position:0%
by replacing callbacks which is quite
abstract<00:05:15.660><c> so</c><00:05:16.140><c> let's</c><00:05:16.470><c> look</c><00:05:16.620><c> at</c><00:05:16.740><c> some</c><00:05:16.920><c> samples</c>

00:05:17.240 --> 00:05:17.250 align:start position:0%
abstract so let's look at some samples
 

00:05:17.250 --> 00:05:19.280 align:start position:0%
abstract so let's look at some samples
and<00:05:17.400><c> see</c><00:05:17.460><c> what</c><00:05:17.580><c> that</c><00:05:17.670><c> looks</c><00:05:17.730><c> like</c><00:05:18.080><c> I'm</c><00:05:19.080><c> gonna</c>

00:05:19.280 --> 00:05:19.290 align:start position:0%
and see what that looks like I'm gonna
 

00:05:19.290 --> 00:05:21.320 align:start position:0%
and see what that looks like I'm gonna
make<00:05:19.440><c> an</c><00:05:19.590><c> imaginary</c><00:05:19.860><c> Network</c><00:05:20.520><c> request</c><00:05:20.910><c> three</c>

00:05:21.320 --> 00:05:21.330 align:start position:0%
make an imaginary Network request three
 

00:05:21.330 --> 00:05:23.420 align:start position:0%
make an imaginary Network request three
ways<00:05:21.510><c> the</c><00:05:21.990><c> first</c><00:05:22.260><c> style</c><00:05:22.500><c> is</c><00:05:22.740><c> what's</c><00:05:22.950><c> called</c><00:05:23.160><c> a</c>

00:05:23.420 --> 00:05:23.430 align:start position:0%
ways the first style is what's called a
 

00:05:23.430 --> 00:05:25.430 align:start position:0%
ways the first style is what's called a
blocking<00:05:23.820><c> style</c><00:05:24.090><c> this</c><00:05:24.690><c> is</c><00:05:24.750><c> where</c><00:05:25.020><c> the</c><00:05:25.140><c> result</c>

00:05:25.430 --> 00:05:25.440 align:start position:0%
blocking style this is where the result
 

00:05:25.440 --> 00:05:27.410 align:start position:0%
blocking style this is where the result
is<00:05:25.590><c> returned</c><00:05:25.980><c> directly</c><00:05:26.370><c> from</c><00:05:26.910><c> the</c><00:05:27.060><c> function</c>

00:05:27.410 --> 00:05:27.420 align:start position:0%
is returned directly from the function
 

00:05:27.420 --> 00:05:30.200 align:start position:0%
is returned directly from the function
let's<00:05:27.990><c> see</c><00:05:28.110><c> how</c><00:05:28.200><c> that</c><00:05:28.380><c> executes</c><00:05:28.800><c> and</c><00:05:29.100><c> for</c><00:05:29.970><c> fun</c>

00:05:30.200 --> 00:05:30.210 align:start position:0%
let's see how that executes and for fun
 

00:05:30.210 --> 00:05:32.560 align:start position:0%
let's see how that executes and for fun
I'm<00:05:30.480><c> gonna</c><00:05:30.690><c> run</c><00:05:30.930><c> that</c><00:05:31.050><c> on</c><00:05:31.230><c> the</c><00:05:31.320><c> main</c><00:05:31.440><c> thread</c>

00:05:32.560 --> 00:05:32.570 align:start position:0%
I'm gonna run that on the main thread
 

00:05:32.570 --> 00:05:34.040 align:start position:0%
I'm gonna run that on the main thread
when<00:05:33.570><c> called</c>

00:05:34.040 --> 00:05:34.050 align:start position:0%
when called
 

00:05:34.050 --> 00:05:35.930 align:start position:0%
when called
a<00:05:34.110><c> blocking</c><00:05:34.740><c> network</c><00:05:35.010><c> Hall</c><00:05:35.250><c> will</c><00:05:35.490><c> block</c><00:05:35.760><c> the</c>

00:05:35.930 --> 00:05:35.940 align:start position:0%
a blocking network Hall will block the
 

00:05:35.940 --> 00:05:37.730 align:start position:0%
a blocking network Hall will block the
thread<00:05:36.180><c> that</c><00:05:36.300><c> called</c><00:05:36.540><c> it</c><00:05:36.720><c> so</c><00:05:37.110><c> the</c><00:05:37.290><c> entire</c><00:05:37.680><c> time</c>

00:05:37.730 --> 00:05:37.740 align:start position:0%
thread that called it so the entire time
 

00:05:37.740 --> 00:05:40.820 align:start position:0%
thread that called it so the entire time
that<00:05:38.280><c> Network</c><00:05:38.550><c> request</c><00:05:38.940><c> is</c><00:05:39.270><c> running</c><00:05:40.050><c> the</c><00:05:40.590><c> main</c>

00:05:40.820 --> 00:05:40.830 align:start position:0%
that Network request is running the main
 

00:05:40.830 --> 00:05:42.320 align:start position:0%
that Network request is running the main
thread<00:05:41.100><c> will</c><00:05:41.220><c> be</c><00:05:41.340><c> blocked</c><00:05:41.580><c> and</c><00:05:41.970><c> that's</c><00:05:42.180><c> the</c>

00:05:42.320 --> 00:05:42.330 align:start position:0%
thread will be blocked and that's the
 

00:05:42.330 --> 00:05:44.060 align:start position:0%
thread will be blocked and that's the
thread<00:05:42.600><c> that</c><00:05:42.840><c> has</c><00:05:43.020><c> to</c><00:05:43.170><c> update</c><00:05:43.440><c> the</c><00:05:43.560><c> UI</c><00:05:43.590><c> and</c>

00:05:44.060 --> 00:05:44.070 align:start position:0%
thread that has to update the UI and
 

00:05:44.070 --> 00:05:46.100 align:start position:0%
thread that has to update the UI and
handle<00:05:44.400><c> user</c><00:05:44.550><c> touches</c><00:05:45.060><c> so</c><00:05:45.480><c> the</c><00:05:45.600><c> user</c><00:05:45.750><c> will</c><00:05:45.990><c> see</c>

00:05:46.100 --> 00:05:46.110 align:start position:0%
handle user touches so the user will see
 

00:05:46.110 --> 00:05:47.660 align:start position:0%
handle user touches so the user will see
your<00:05:46.260><c> app</c><00:05:46.410><c> is</c><00:05:46.590><c> frozen</c><00:05:46.860><c> or</c><00:05:47.280><c> it</c><00:05:47.460><c> might</c><00:05:47.580><c> even</c>

00:05:47.660 --> 00:05:47.670 align:start position:0%
your app is frozen or it might even
 

00:05:47.670 --> 00:05:50.180 align:start position:0%
your app is frozen or it might even
crash<00:05:48.030><c> now</c><00:05:48.960><c> I</c><00:05:49.140><c> do</c><00:05:49.260><c> want</c><00:05:49.440><c> to</c><00:05:49.560><c> pause</c><00:05:49.740><c> and</c><00:05:50.040><c> say</c>

00:05:50.180 --> 00:05:50.190 align:start position:0%
crash now I do want to pause and say
 

00:05:50.190 --> 00:05:51.440 align:start position:0%
crash now I do want to pause and say
there's<00:05:50.370><c> nothing</c><00:05:50.610><c> wrong</c><00:05:50.790><c> with</c><00:05:51.000><c> a</c><00:05:51.030><c> blocking</c>

00:05:51.440 --> 00:05:51.450 align:start position:0%
there's nothing wrong with a blocking
 

00:05:51.450 --> 00:05:53.450 align:start position:0%
there's nothing wrong with a blocking
style<00:05:51.660><c> of</c><00:05:51.780><c> network</c><00:05:52.020><c> api's</c><00:05:52.440><c> but</c><00:05:53.040><c> it's</c><00:05:53.190><c> not</c><00:05:53.310><c> what</c>

00:05:53.450 --> 00:05:53.460 align:start position:0%
style of network api's but it's not what
 

00:05:53.460 --> 00:05:55.340 align:start position:0%
style of network api's but it's not what
we<00:05:53.610><c> want</c><00:05:53.790><c> to</c><00:05:53.850><c> do</c><00:05:53.940><c> on</c><00:05:54.060><c> android</c><00:05:54.570><c> so</c><00:05:54.870><c> to</c><00:05:54.960><c> fix</c><00:05:55.170><c> that</c>

00:05:55.340 --> 00:05:55.350 align:start position:0%
we want to do on android so to fix that
 

00:05:55.350 --> 00:05:57.440 align:start position:0%
we want to do on android so to fix that
as<00:05:55.560><c> he'd</c><00:05:55.740><c> already</c><00:05:55.890><c> talked</c><00:05:56.190><c> about</c><00:05:56.490><c> we</c><00:05:57.030><c> commonly</c>

00:05:57.440 --> 00:05:57.450 align:start position:0%
as he'd already talked about we commonly
 

00:05:57.450 --> 00:06:00.110 align:start position:0%
as he'd already talked about we commonly
introduce<00:05:57.930><c> callbacks</c><00:05:58.650><c> so</c><00:05:59.460><c> let's</c><00:05:59.640><c> see</c><00:05:59.730><c> how</c><00:05:59.880><c> bad</c>

00:06:00.110 --> 00:06:00.120 align:start position:0%
introduce callbacks so let's see how bad
 

00:06:00.120 --> 00:06:02.150 align:start position:0%
introduce callbacks so let's see how bad
executes<00:06:00.630><c> we're</c><00:06:01.200><c> still</c><00:06:01.560><c> gonna</c><00:06:01.680><c> call</c><00:06:01.980><c> this</c>

00:06:02.150 --> 00:06:02.160 align:start position:0%
executes we're still gonna call this
 

00:06:02.160 --> 00:06:04.520 align:start position:0%
executes we're still gonna call this
from<00:06:02.340><c> the</c><00:06:02.460><c> main</c><00:06:02.610><c> thread</c><00:06:03.000><c> but</c><00:06:03.600><c> now</c><00:06:03.840><c> when</c><00:06:04.290><c> fetch</c>

00:06:04.520 --> 00:06:04.530 align:start position:0%
from the main thread but now when fetch
 

00:06:04.530 --> 00:06:06.770 align:start position:0%
from the main thread but now when fetch
user<00:06:04.740><c> is</c><00:06:04.980><c> called</c><00:06:05.250><c> the</c><00:06:05.820><c> main</c><00:06:06.030><c> thread</c><00:06:06.330><c> is</c><00:06:06.450><c> free</c>

00:06:06.770 --> 00:06:06.780 align:start position:0%
user is called the main thread is free
 

00:06:06.780 --> 00:06:09.290 align:start position:0%
user is called the main thread is free
to<00:06:06.900><c> perform</c><00:06:07.260><c> other</c><00:06:07.500><c> work</c><00:06:07.980><c> it</c><00:06:08.640><c> can</c><00:06:08.820><c> handle</c><00:06:09.120><c> on</c>

00:06:09.290 --> 00:06:09.300 align:start position:0%
to perform other work it can handle on
 

00:06:09.300 --> 00:06:12.260 align:start position:0%
to perform other work it can handle on
draw<00:06:09.660><c> or</c><00:06:09.990><c> respond</c><00:06:10.650><c> to</c><00:06:10.710><c> user</c><00:06:10.920><c> touches</c><00:06:11.430><c> and</c><00:06:11.670><c> the</c>

00:06:12.260 --> 00:06:12.270 align:start position:0%
draw or respond to user touches and the
 

00:06:12.270 --> 00:06:14.150 align:start position:0%
draw or respond to user touches and the
networking<00:06:12.630><c> library</c><00:06:12.930><c> is</c><00:06:13.320><c> responsible</c><00:06:14.130><c> for</c>

00:06:14.150 --> 00:06:14.160 align:start position:0%
networking library is responsible for
 

00:06:14.160 --> 00:06:16.460 align:start position:0%
networking library is responsible for
finding<00:06:14.610><c> another</c><00:06:15.270><c> thread</c><00:06:15.660><c> to</c><00:06:15.780><c> actually</c><00:06:16.230><c> run</c>

00:06:16.460 --> 00:06:16.470 align:start position:0%
finding another thread to actually run
 

00:06:16.470 --> 00:06:19.610 align:start position:0%
finding another thread to actually run
the<00:06:16.590><c> request</c><00:06:16.980><c> when</c><00:06:17.910><c> the</c><00:06:18.000><c> result</c><00:06:18.330><c> is</c><00:06:18.450><c> ready</c><00:06:18.620><c> the</c>

00:06:19.610 --> 00:06:19.620 align:start position:0%
the request when the result is ready the
 

00:06:19.620 --> 00:06:21.050 align:start position:0%
the request when the result is ready the
network<00:06:19.920><c> library</c><00:06:20.250><c> can</c><00:06:20.400><c> then</c><00:06:20.520><c> use</c><00:06:20.760><c> with</c><00:06:21.030><c> a</c>

00:06:21.050 --> 00:06:21.060 align:start position:0%
network library can then use with a
 

00:06:21.060 --> 00:06:23.510 align:start position:0%
network library can then use with a
callback<00:06:21.360><c> I</c><00:06:21.690><c> gave</c><00:06:21.960><c> it</c><00:06:22.140><c> to</c><00:06:22.410><c> callback</c><00:06:22.950><c> into</c><00:06:23.370><c> my</c>

00:06:23.510 --> 00:06:23.520 align:start position:0%
callback I gave it to callback into my
 

00:06:23.520 --> 00:06:25.570 align:start position:0%
callback I gave it to callback into my
code<00:06:23.850><c> and</c><00:06:24.090><c> let</c><00:06:24.300><c> me</c><00:06:24.420><c> know</c><00:06:24.540><c> that</c><00:06:24.570><c> it's</c><00:06:24.870><c> ready</c>

00:06:25.570 --> 00:06:25.580 align:start position:0%
code and let me know that it's ready
 

00:06:25.580 --> 00:06:28.640 align:start position:0%
code and let me know that it's ready
let's<00:06:26.580><c> rewrite</c><00:06:26.910><c> that</c><00:06:26.970><c> exact</c><00:06:27.570><c> same</c><00:06:27.840><c> code</c><00:06:28.170><c> with</c>

00:06:28.640 --> 00:06:28.650 align:start position:0%
let's rewrite that exact same code with
 

00:06:28.650 --> 00:06:29.510 align:start position:0%
let's rewrite that exact same code with
co-routines

00:06:29.510 --> 00:06:29.520 align:start position:0%
co-routines
 

00:06:29.520 --> 00:06:31.670 align:start position:0%
co-routines
it<00:06:30.030><c> looks</c><00:06:30.270><c> just</c><00:06:30.720><c> like</c><00:06:30.900><c> the</c><00:06:31.050><c> blocking</c><00:06:31.410><c> style</c>

00:06:31.670 --> 00:06:31.680 align:start position:0%
it looks just like the blocking style
 

00:06:31.680 --> 00:06:34.130 align:start position:0%
it looks just like the blocking style
the<00:06:32.310><c> result</c><00:06:32.700><c> of</c><00:06:32.850><c> fetch</c><00:06:33.030><c> user</c><00:06:33.270><c> is</c><00:06:33.540><c> available</c>

00:06:34.130 --> 00:06:34.140 align:start position:0%
the result of fetch user is available
 

00:06:34.140 --> 00:06:35.900 align:start position:0%
the result of fetch user is available
immediately<00:06:34.530><c> and</c><00:06:35.070><c> I</c><00:06:35.280><c> don't</c><00:06:35.340><c> have</c><00:06:35.760><c> to</c>

00:06:35.900 --> 00:06:35.910 align:start position:0%
immediately and I don't have to
 

00:06:35.910 --> 00:06:38.450 align:start position:0%
immediately and I don't have to
introduce<00:06:36.060><c> a</c><00:06:36.330><c> callback</c><00:06:36.690><c> to</c><00:06:37.050><c> tell</c><00:06:37.890><c> Collin</c><00:06:38.340><c> I</c>

00:06:38.450 --> 00:06:38.460 align:start position:0%
introduce a callback to tell Collin I
 

00:06:38.460 --> 00:06:39.010 align:start position:0%
introduce a callback to tell Collin I
want<00:06:38.670><c> to</c>

00:06:39.010 --> 00:06:39.020 align:start position:0%
want to
 

00:06:39.020 --> 00:06:40.420 align:start position:0%
want to
keep<00:06:39.199><c> this</c><00:06:39.349><c> with</c><00:06:39.500><c> co-routines</c><00:06:40.039><c> it</c><00:06:40.250><c> has</c><00:06:40.400><c> a</c>

00:06:40.420 --> 00:06:40.430 align:start position:0%
keep this with co-routines it has a
 

00:06:40.430 --> 00:06:42.610 align:start position:0%
keep this with co-routines it has a
suspend<00:06:41.000><c> modifier</c><00:06:41.539><c> on</c><00:06:41.750><c> the</c><00:06:41.960><c> function</c><00:06:42.349><c> and</c>

00:06:42.610 --> 00:06:42.620 align:start position:0%
suspend modifier on the function and
 

00:06:42.620 --> 00:06:45.189 align:start position:0%
suspend modifier on the function and
when<00:06:43.310><c> we</c><00:06:43.460><c> run</c><00:06:43.610><c> it</c><00:06:43.789><c> still</c><00:06:44.360><c> on</c><00:06:44.599><c> the</c><00:06:44.840><c> main</c><00:06:44.990><c> thread</c>

00:06:45.189 --> 00:06:45.199 align:start position:0%
when we run it still on the main thread
 

00:06:45.199 --> 00:06:48.100 align:start position:0%
when we run it still on the main thread
the<00:06:46.129><c> main</c><00:06:46.370><c> thread</c><00:06:46.669><c> is</c><00:06:46.789><c> unblocked</c><00:06:47.389><c> just</c><00:06:47.900><c> like</c>

00:06:48.100 --> 00:06:48.110 align:start position:0%
the main thread is unblocked just like
 

00:06:48.110 --> 00:06:50.950 align:start position:0%
the main thread is unblocked just like
with<00:06:48.289><c> callbacks</c><00:06:48.740><c> and</c><00:06:49.180><c> this</c><00:06:50.180><c> is</c><00:06:50.360><c> a</c><00:06:50.389><c> key</c><00:06:50.659><c> concept</c>

00:06:50.950 --> 00:06:50.960 align:start position:0%
with callbacks and this is a key concept
 

00:06:50.960 --> 00:06:54.100 align:start position:0%
with callbacks and this is a key concept
of<00:06:51.289><c> carotenes</c><00:06:51.800><c> the</c><00:06:52.789><c> networking</c><00:06:53.449><c> request</c>

00:06:54.100 --> 00:06:54.110 align:start position:0%
of carotenes the networking request
 

00:06:54.110 --> 00:06:57.070 align:start position:0%
of carotenes the networking request
still<00:06:54.680><c> runs</c><00:06:54.979><c> on</c><00:06:55.250><c> another</c><00:06:55.669><c> thread</c><00:06:56.030><c> when</c><00:06:56.990><c> the</c>

00:06:57.070 --> 00:06:57.080 align:start position:0%
still runs on another thread when the
 

00:06:57.080 --> 00:06:59.260 align:start position:0%
still runs on another thread when the
result<00:06:57.409><c> is</c><00:06:57.560><c> ready</c><00:06:57.620><c> it</c><00:06:58.370><c> resumes</c><00:06:58.789><c> the</c><00:06:59.060><c> curry</c>

00:06:59.260 --> 00:06:59.270 align:start position:0%
result is ready it resumes the curry
 

00:06:59.270 --> 00:07:02.260 align:start position:0%
result is ready it resumes the curry
team<00:06:59.569><c> where</c><00:06:59.870><c> it</c><00:06:59.960><c> left</c><00:07:00.110><c> off</c><00:07:00.460><c> this</c><00:07:01.460><c> code</c><00:07:01.759><c> is</c><00:07:01.909><c> much</c>

00:07:02.260 --> 00:07:02.270 align:start position:0%
team where it left off this code is much
 

00:07:02.270 --> 00:07:04.629 align:start position:0%
team where it left off this code is much
simpler<00:07:02.750><c> than</c><00:07:03.080><c> the</c><00:07:03.710><c> callback</c><00:07:04.069><c> style</c><00:07:04.370><c> while</c>

00:07:04.629 --> 00:07:04.639 align:start position:0%
simpler than the callback style while
 

00:07:04.639 --> 00:07:06.640 align:start position:0%
simpler than the callback style while
still<00:07:04.970><c> ensuring</c><00:07:05.210><c> that</c><00:07:05.599><c> I</c><00:07:05.840><c> can</c><00:07:06.199><c> write</c><00:07:06.500><c> my</c>

00:07:06.640 --> 00:07:06.650 align:start position:0%
still ensuring that I can write my
 

00:07:06.650 --> 00:07:08.589 align:start position:0%
still ensuring that I can write my
Android<00:07:07.129><c> app</c><00:07:07.250><c> and</c><00:07:07.490><c> make</c><00:07:07.610><c> it</c><00:07:07.639><c> never</c><00:07:08.030><c> freeze</c><00:07:08.360><c> for</c>

00:07:08.589 --> 00:07:08.599 align:start position:0%
Android app and make it never freeze for
 

00:07:08.599 --> 00:07:11.710 align:start position:0%
Android app and make it never freeze for
the<00:07:08.629><c> user</c><00:07:09.310><c> this</c><00:07:10.310><c> is</c><00:07:10.490><c> the</c><00:07:10.580><c> key</c><00:07:10.849><c> mechanism</c><00:07:11.509><c> here</c>

00:07:11.710 --> 00:07:11.720 align:start position:0%
the user this is the key mechanism here
 

00:07:11.720 --> 00:07:14.980 align:start position:0%
the user this is the key mechanism here
of<00:07:11.870><c> correcting</c><00:07:12.440><c> suspend</c><00:07:13.039><c> and</c><00:07:13.280><c> resume</c><00:07:14.000><c> when</c><00:07:14.509><c> a</c>

00:07:14.980 --> 00:07:14.990 align:start position:0%
of correcting suspend and resume when a
 

00:07:14.990 --> 00:07:16.870 align:start position:0%
of correcting suspend and resume when a
KO<00:07:15.229><c> routine</c><00:07:15.530><c> is</c><00:07:15.680><c> suspended</c><00:07:16.250><c> it's</c><00:07:16.430><c> not</c><00:07:16.610><c> running</c>

00:07:16.870 --> 00:07:16.880 align:start position:0%
KO routine is suspended it's not running
 

00:07:16.880 --> 00:07:19.899 align:start position:0%
KO routine is suspended it's not running
it's<00:07:17.270><c> paused</c><00:07:17.599><c> and</c><00:07:18.050><c> when</c><00:07:18.800><c> it</c><00:07:18.889><c> resumes</c><00:07:19.220><c> it</c><00:07:19.639><c> picks</c>

00:07:19.899 --> 00:07:19.909 align:start position:0%
it's paused and when it resumes it picks
 

00:07:19.909 --> 00:07:22.180 align:start position:0%
it's paused and when it resumes it picks
up<00:07:20.090><c> from</c><00:07:20.330><c> where</c><00:07:20.479><c> it</c><00:07:20.569><c> left</c><00:07:20.599><c> off</c><00:07:20.900><c> you</c><00:07:21.800><c> can</c><00:07:21.949><c> think</c>

00:07:22.180 --> 00:07:22.190 align:start position:0%
up from where it left off you can think
 

00:07:22.190 --> 00:07:24.969 align:start position:0%
up from where it left off you can think
of<00:07:22.280><c> suspending</c><00:07:22.849><c> ko</c><00:07:23.569><c> routine</c><00:07:23.870><c> as</c><00:07:24.080><c> taking</c><00:07:24.889><c> a</c>

00:07:24.969 --> 00:07:24.979 align:start position:0%
of suspending ko routine as taking a
 

00:07:24.979 --> 00:07:26.830 align:start position:0%
of suspending ko routine as taking a
callback<00:07:25.310><c> from</c><00:07:25.819><c> the</c><00:07:26.030><c> rest</c><00:07:26.210><c> of</c><00:07:26.330><c> the</c><00:07:26.449><c> function</c>

00:07:26.830 --> 00:07:26.840 align:start position:0%
callback from the rest of the function
 

00:07:26.840 --> 00:07:29.350 align:start position:0%
callback from the rest of the function
so<00:07:27.020><c> you've</c><00:07:27.830><c> put</c><00:07:28.039><c> it</c><00:07:28.130><c> together</c><00:07:28.280><c> suspend</c><00:07:29.210><c> and</c>

00:07:29.350 --> 00:07:29.360 align:start position:0%
so you've put it together suspend and
 

00:07:29.360 --> 00:07:31.629 align:start position:0%
so you've put it together suspend and
resume<00:07:29.449><c> replaced</c><00:07:30.110><c> callbacks</c><00:07:30.620><c> we</c><00:07:31.310><c> can</c><00:07:31.430><c> even</c>

00:07:31.629 --> 00:07:31.639 align:start position:0%
resume replaced callbacks we can even
 

00:07:31.639 --> 00:07:33.760 align:start position:0%
resume replaced callbacks we can even
visualize<00:07:31.789><c> that</c><00:07:32.240><c> the</c><00:07:32.690><c> callback</c><00:07:33.110><c> version</c><00:07:33.560><c> and</c>

00:07:33.760 --> 00:07:33.770 align:start position:0%
visualize that the callback version and
 

00:07:33.770 --> 00:07:36.100 align:start position:0%
visualize that the callback version and
the<00:07:34.159><c> co-routine</c><00:07:34.610><c> version</c><00:07:34.940><c> execute</c><00:07:35.630><c> almost</c>

00:07:36.100 --> 00:07:36.110 align:start position:0%
the co-routine version execute almost
 

00:07:36.110 --> 00:07:38.619 align:start position:0%
the co-routine version execute almost
exactly<00:07:36.770><c> the</c><00:07:37.159><c> same</c><00:07:37.430><c> way</c><00:07:37.639><c> let's</c><00:07:38.389><c> switch</c><00:07:38.599><c> back</c>

00:07:38.619 --> 00:07:38.629 align:start position:0%
exactly the same way let's switch back
 

00:07:38.629 --> 00:07:41.649 align:start position:0%
exactly the same way let's switch back
and<00:07:39.169><c> take</c><00:07:39.590><c> a</c><00:07:39.620><c> look</c><00:07:39.860><c> at</c><00:07:39.979><c> fetch</c><00:07:40.190><c> user</c><00:07:40.430><c> how</c><00:07:41.330><c> can</c><00:07:41.509><c> we</c>

00:07:41.649 --> 00:07:41.659 align:start position:0%
and take a look at fetch user how can we
 

00:07:41.659 --> 00:07:43.149 align:start position:0%
and take a look at fetch user how can we
call<00:07:41.810><c> a</c><00:07:41.870><c> function</c><00:07:42.349><c> that</c><00:07:42.379><c> makes</c><00:07:42.740><c> a</c><00:07:42.830><c> network</c>

00:07:43.149 --> 00:07:43.159 align:start position:0%
call a function that makes a network
 

00:07:43.159 --> 00:07:46.540 align:start position:0%
call a function that makes a network
request<00:07:43.280><c> from</c><00:07:44.180><c> the</c><00:07:44.419><c> main</c><00:07:44.599><c> thread</c><00:07:45.219><c> to</c><00:07:46.219><c> start</c>

00:07:46.540 --> 00:07:46.550 align:start position:0%
request from the main thread to start
 

00:07:46.550 --> 00:07:48.730 align:start position:0%
request from the main thread to start
we'll<00:07:47.120><c> need</c><00:07:47.210><c> to</c><00:07:47.330><c> make</c><00:07:47.479><c> fetch</c><00:07:47.750><c> user</c><00:07:48.080><c> another</c>

00:07:48.730 --> 00:07:48.740 align:start position:0%
we'll need to make fetch user another
 

00:07:48.740 --> 00:07:50.050 align:start position:0%
we'll need to make fetch user another
suspending<00:07:49.400><c> function</c>

00:07:50.050 --> 00:07:50.060 align:start position:0%
suspending function
 

00:07:50.060 --> 00:07:51.909 align:start position:0%
suspending function
this<00:07:50.389><c> tells</c><00:07:50.630><c> Kotlin</c><00:07:51.110><c> that</c><00:07:51.349><c> it</c><00:07:51.440><c> works</c><00:07:51.740><c> with</c>

00:07:51.909 --> 00:07:51.919 align:start position:0%
this tells Kotlin that it works with
 

00:07:51.919 --> 00:07:54.459 align:start position:0%
this tells Kotlin that it works with
care<00:07:52.099><c> routines</c><00:07:52.430><c> and</c><00:07:52.719><c> inside</c><00:07:53.719><c> will</c><00:07:54.229><c> call</c>

00:07:54.459 --> 00:07:54.469 align:start position:0%
care routines and inside will call
 

00:07:54.469 --> 00:07:56.290 align:start position:0%
care routines and inside will call
another<00:07:54.710><c> suspending</c><00:07:55.550><c> function</c><00:07:55.909><c> called</c>

00:07:56.290 --> 00:07:56.300 align:start position:0%
another suspending function called
 

00:07:56.300 --> 00:07:58.629 align:start position:0%
another suspending function called
with<00:07:56.479><c> context</c><00:07:57.139><c> well</c><00:07:57.680><c> pass</c><00:07:57.889><c> it</c><00:07:58.069><c> dispatchers</c>

00:07:58.629 --> 00:07:58.639 align:start position:0%
with context well pass it dispatchers
 

00:07:58.639 --> 00:08:00.580 align:start position:0%
with context well pass it dispatchers
done<00:07:58.819><c> I</c><00:07:58.849><c> am</c><00:07:59.150><c> zooming</c><00:08:00.080><c> in</c><00:08:00.349><c> on</c><00:08:00.440><c> those</c>

00:08:00.580 --> 00:08:00.590 align:start position:0%
done I am zooming in on those
 

00:08:00.590 --> 00:08:02.800 align:start position:0%
done I am zooming in on those
dispatchers<00:08:01.219><c> calling</c><00:08:02.090><c> gives</c><00:08:02.300><c> us</c><00:08:02.449><c> three</c>

00:08:02.800 --> 00:08:02.810 align:start position:0%
dispatchers calling gives us three
 

00:08:02.810 --> 00:08:06.100 align:start position:0%
dispatchers calling gives us three
dispatchers<00:08:03.469><c> default</c><00:08:04.279><c> IO</c><00:08:04.880><c> and</c><00:08:05.300><c> main</c><00:08:05.840><c> and</c>

00:08:06.100 --> 00:08:06.110 align:start position:0%
dispatchers default IO and main and
 

00:08:06.110 --> 00:08:08.219 align:start position:0%
dispatchers default IO and main and
they're<00:08:06.560><c> used</c><00:08:06.830><c> for</c><00:08:07.039><c> different</c><00:08:07.190><c> things</c>

00:08:08.219 --> 00:08:08.229 align:start position:0%
they're used for different things
 

00:08:08.229 --> 00:08:11.050 align:start position:0%
they're used for different things
default<00:08:09.229><c> should</c><00:08:09.560><c> be</c><00:08:09.710><c> used</c><00:08:09.949><c> for</c><00:08:10.279><c> CPU</c><00:08:10.789><c> intensive</c>

00:08:11.050 --> 00:08:11.060 align:start position:0%
default should be used for CPU intensive
 

00:08:11.060 --> 00:08:13.450 align:start position:0%
default should be used for CPU intensive
work<00:08:11.449><c> things</c><00:08:12.110><c> like</c><00:08:12.289><c> transforming</c><00:08:13.009><c> a</c><00:08:13.099><c> list</c><00:08:13.310><c> of</c>

00:08:13.450 --> 00:08:13.460 align:start position:0%
work things like transforming a list of
 

00:08:13.460 --> 00:08:15.850 align:start position:0%
work things like transforming a list of
a<00:08:13.550><c> hundred</c><00:08:13.669><c> elements</c><00:08:14.090><c> calling</c><00:08:15.080><c> des</c><00:08:15.199><c> futile</c><00:08:15.620><c> or</c>

00:08:15.850 --> 00:08:15.860 align:start position:0%
a hundred elements calling des futile or
 

00:08:15.860 --> 00:08:18.999 align:start position:0%
a hundred elements calling des futile or
pre<00:08:16.759><c> computing</c><00:08:17.150><c> text</c><00:08:17.569><c> anything</c><00:08:18.409><c> that</c><00:08:18.770><c> takes</c>

00:08:18.999 --> 00:08:19.009 align:start position:0%
pre computing text anything that takes
 

00:08:19.009 --> 00:08:20.680 align:start position:0%
pre computing text anything that takes
too<00:08:19.340><c> long</c><00:08:19.370><c> to</c><00:08:19.639><c> run</c><00:08:19.940><c> on</c><00:08:20.090><c> the</c><00:08:20.180><c> main</c><00:08:20.360><c> thread</c>

00:08:20.680 --> 00:08:20.690 align:start position:0%
too long to run on the main thread
 

00:08:20.690 --> 00:08:23.740 align:start position:0%
too long to run on the main thread
should<00:08:21.169><c> run</c><00:08:21.409><c> on</c><00:08:21.560><c> the</c><00:08:21.650><c> default</c><00:08:21.979><c> dispatcher</c><00:08:22.750><c> IO</c>

00:08:23.740 --> 00:08:23.750 align:start position:0%
should run on the default dispatcher IO
 

00:08:23.750 --> 00:08:26.230 align:start position:0%
should run on the default dispatcher IO
is<00:08:24.229><c> a</c><00:08:24.560><c> dispatcher</c><00:08:25.039><c> that's</c><00:08:25.279><c> optimized</c><00:08:25.940><c> for</c>

00:08:26.230 --> 00:08:26.240 align:start position:0%
is a dispatcher that's optimized for
 

00:08:26.240 --> 00:08:28.959 align:start position:0%
is a dispatcher that's optimized for
blocking<00:08:26.810><c> Network</c><00:08:27.199><c> in</c><00:08:27.380><c> disk</c><00:08:27.620><c> IO</c><00:08:27.830><c> you</c><00:08:28.759><c> should</c>

00:08:28.959 --> 00:08:28.969 align:start position:0%
blocking Network in disk IO you should
 

00:08:28.969 --> 00:08:30.730 align:start position:0%
blocking Network in disk IO you should
use<00:08:29.090><c> it</c><00:08:29.270><c> anytime</c><00:08:29.750><c> you</c><00:08:30.110><c> need</c><00:08:30.229><c> to</c><00:08:30.259><c> write</c><00:08:30.500><c> code</c>

00:08:30.730 --> 00:08:30.740 align:start position:0%
use it anytime you need to write code
 

00:08:30.740 --> 00:08:34.060 align:start position:0%
use it anytime you need to write code
that<00:08:30.800><c> blocks</c><00:08:31.430><c> an</c><00:08:32.000><c> API</c><00:08:32.419><c> like</c><00:08:33.110><c> writing</c><00:08:33.560><c> a</c><00:08:33.770><c> file</c>

00:08:34.060 --> 00:08:34.070 align:start position:0%
that blocks an API like writing a file
 

00:08:34.070 --> 00:08:37.899 align:start position:0%
that blocks an API like writing a file
or<00:08:34.399><c> reading</c><00:08:34.760><c> from</c><00:08:34.789><c> a</c><00:08:35.029><c> socket</c><00:08:35.300><c> and</c><00:08:36.279><c> main</c><00:08:37.279><c> this</c>

00:08:37.899 --> 00:08:37.909 align:start position:0%
or reading from a socket and main this
 

00:08:37.909 --> 00:08:39.779 align:start position:0%
or reading from a socket and main this
is<00:08:38.120><c> the</c><00:08:38.240><c> main</c><00:08:38.510><c> thread</c><00:08:38.870><c> on</c><00:08:39.020><c> Android</c><00:08:39.440><c> and</c>

00:08:39.779 --> 00:08:39.789 align:start position:0%
is the main thread on Android and
 

00:08:39.789 --> 00:08:42.279 align:start position:0%
is the main thread on Android and
surprisingly<00:08:40.789><c> it's</c><00:08:41.149><c> our</c><00:08:41.419><c> recommendation</c><00:08:41.599><c> as</c>

00:08:42.279 --> 00:08:42.289 align:start position:0%
surprisingly it's our recommendation as
 

00:08:42.289 --> 00:08:44.290 align:start position:0%
surprisingly it's our recommendation as
the<00:08:42.560><c> right</c><00:08:42.800><c> place</c><00:08:43.070><c> to</c><00:08:43.279><c> start</c><00:08:43.310><c> co-routines</c><00:08:44.089><c> in</c>

00:08:44.290 --> 00:08:44.300 align:start position:0%
the right place to start co-routines in
 

00:08:44.300 --> 00:08:46.090 align:start position:0%
the right place to start co-routines in
response<00:08:44.720><c> to</c><00:08:44.899><c> UI</c><00:08:45.050><c> events</c>

00:08:46.090 --> 00:08:46.100 align:start position:0%
response to UI events
 

00:08:46.100 --> 00:08:47.920 align:start position:0%
response to UI events
since<00:08:46.550><c> you're</c><00:08:46.670><c> usually</c><00:08:47.150><c> starting</c><00:08:47.480><c> para</c><00:08:47.690><c> teens</c>

00:08:47.920 --> 00:08:47.930 align:start position:0%
since you're usually starting para teens
 

00:08:47.930 --> 00:08:50.230 align:start position:0%
since you're usually starting para teens
from<00:08:48.260><c> the</c><00:08:48.470><c> main</c><00:08:48.620><c> thread</c><00:08:48.950><c> staying</c><00:08:49.670><c> there</c><00:08:50.000><c> will</c>

00:08:50.230 --> 00:08:50.240 align:start position:0%
from the main thread staying there will
 

00:08:50.240 --> 00:08:52.420 align:start position:0%
from the main thread staying there will
avoid<00:08:50.510><c> extra</c><00:08:50.960><c> work</c><00:08:51.140><c> for</c><00:08:51.350><c> simple</c><00:08:51.890><c> operations</c>

00:08:52.420 --> 00:08:52.430 align:start position:0%
avoid extra work for simple operations
 

00:08:52.430 --> 00:08:55.120 align:start position:0%
avoid extra work for simple operations
then<00:08:53.300><c> when</c><00:08:53.840><c> you</c><00:08:53.930><c> need</c><00:08:54.080><c> to</c><00:08:54.230><c> transform</c><00:08:54.770><c> a</c><00:08:54.920><c> list</c>

00:08:55.120 --> 00:08:55.130 align:start position:0%
then when you need to transform a list
 

00:08:55.130 --> 00:08:58.270 align:start position:0%
then when you need to transform a list
or<00:08:55.450><c> write</c><00:08:56.450><c> a</c><00:08:56.480><c> file</c><00:08:56.890><c> co-routines</c><00:08:57.890><c> let</c><00:08:58.160><c> you</c>

00:08:58.270 --> 00:08:58.280 align:start position:0%
or write a file co-routines let you
 

00:08:58.280 --> 00:08:59.980 align:start position:0%
or write a file co-routines let you
switch<00:08:58.610><c> to</c><00:08:58.820><c> one</c><00:08:58.970><c> of</c><00:08:59.090><c> the</c><00:08:59.150><c> other</c><00:08:59.300><c> dispatchers</c>

00:08:59.980 --> 00:08:59.990 align:start position:0%
switch to one of the other dispatchers
 

00:08:59.990 --> 00:09:03.610 align:start position:0%
switch to one of the other dispatchers
by<00:09:00.290><c> using</c><00:09:00.560><c> with</c><00:09:01.100><c> context</c><00:09:01.930><c> with</c><00:09:02.930><c> context</c><00:09:03.500><c> will</c>

00:09:03.610 --> 00:09:03.620 align:start position:0%
by using with context with context will
 

00:09:03.620 --> 00:09:06.040 align:start position:0%
by using with context with context will
run<00:09:03.890><c> the</c><00:09:04.130><c> block</c><00:09:04.670><c> that</c><00:09:04.940><c> you</c><00:09:05.000><c> pass</c><00:09:05.270><c> it</c><00:09:05.510><c> on</c><00:09:05.690><c> the</c>

00:09:06.040 --> 00:09:06.050 align:start position:0%
run the block that you pass it on the
 

00:09:06.050 --> 00:09:08.140 align:start position:0%
run the block that you pass it on the
dispatcher<00:09:06.440><c> you</c><00:09:06.680><c> tell</c><00:09:06.890><c> it</c><00:09:07.010><c> to</c><00:09:07.190><c> so</c><00:09:07.760><c> this</c><00:09:07.910><c> block</c>

00:09:08.140 --> 00:09:08.150 align:start position:0%
dispatcher you tell it to so this block
 

00:09:08.150 --> 00:09:10.420 align:start position:0%
dispatcher you tell it to so this block
here<00:09:08.540><c> is</c><00:09:08.720><c> gonna</c><00:09:09.050><c> run</c><00:09:09.350><c> on</c><00:09:09.530><c> dispatchers</c><00:09:10.100><c> dot</c><00:09:10.280><c> IO</c>

00:09:10.420 --> 00:09:10.430 align:start position:0%
here is gonna run on dispatchers dot IO
 

00:09:10.430 --> 00:09:12.970 align:start position:0%
here is gonna run on dispatchers dot IO
and<00:09:10.880><c> I'm</c><00:09:11.420><c> free</c><00:09:11.840><c> to</c><00:09:11.990><c> make</c><00:09:12.110><c> blocking</c><00:09:12.620><c> Network</c>

00:09:12.970 --> 00:09:12.980 align:start position:0%
and I'm free to make blocking Network
 

00:09:12.980 --> 00:09:16.090 align:start position:0%
and I'm free to make blocking Network
calls<00:09:13.480><c> this</c><00:09:14.480><c> allows</c><00:09:14.840><c> us</c><00:09:14.870><c> to</c><00:09:15.290><c> provide</c><00:09:15.440><c> main</c>

00:09:16.090 --> 00:09:16.100 align:start position:0%
calls this allows us to provide main
 

00:09:16.100 --> 00:09:18.880 align:start position:0%
calls this allows us to provide main
safe<00:09:16.430><c> api's</c><00:09:16.880><c> you</c><00:09:17.660><c> can</c><00:09:17.870><c> just</c><00:09:18.170><c> make</c><00:09:18.350><c> a</c><00:09:18.380><c> function</c>

00:09:18.880 --> 00:09:18.890 align:start position:0%
safe api's you can just make a function
 

00:09:18.890 --> 00:09:20.290 align:start position:0%
safe api's you can just make a function
that<00:09:18.920><c> reads</c><00:09:19.340><c> and</c><00:09:19.610><c> writes</c><00:09:19.700><c> from</c><00:09:19.940><c> the</c><00:09:20.030><c> network</c>

00:09:20.290 --> 00:09:20.300 align:start position:0%
that reads and writes from the network
 

00:09:20.300 --> 00:09:22.660 align:start position:0%
that reads and writes from the network
like<00:09:20.630><c> this</c><00:09:20.840><c> and</c><00:09:21.470><c> call</c><00:09:22.040><c> it</c><00:09:22.220><c> from</c><00:09:22.400><c> the</c><00:09:22.490><c> main</c>

00:09:22.660 --> 00:09:22.670 align:start position:0%
like this and call it from the main
 

00:09:22.670 --> 00:09:25.000 align:start position:0%
like this and call it from the main
thread<00:09:23.000><c> and</c><00:09:23.270><c> this</c><00:09:23.750><c> is</c><00:09:23.900><c> a</c><00:09:23.930><c> huge</c><00:09:24.440><c> benefit</c><00:09:24.890><c> on</c>

00:09:25.000 --> 00:09:25.010 align:start position:0%
thread and this is a huge benefit on
 

00:09:25.010 --> 00:09:26.740 align:start position:0%
thread and this is a huge benefit on
Android<00:09:25.400><c> now</c><00:09:25.910><c> I</c><00:09:25.940><c> don't</c><00:09:26.120><c> have</c><00:09:26.330><c> to</c><00:09:26.450><c> worry</c><00:09:26.630><c> about</c>

00:09:26.740 --> 00:09:26.750 align:start position:0%
Android now I don't have to worry about
 

00:09:26.750 --> 00:09:29.050 align:start position:0%
Android now I don't have to worry about
what<00:09:26.990><c> every</c><00:09:27.440><c> single</c><00:09:27.860><c> function</c><00:09:28.280><c> what</c><00:09:28.760><c> thread</c>

00:09:29.050 --> 00:09:29.060 align:start position:0%
what every single function what thread
 

00:09:29.060 --> 00:09:31.660 align:start position:0%
what every single function what thread
it<00:09:29.180><c> needs</c><00:09:29.360><c> to</c><00:09:29.540><c> run</c><00:09:29.750><c> on</c><00:09:29.930><c> instead</c><00:09:30.830><c> I</c><00:09:31.190><c> can</c><00:09:31.490><c> just</c>

00:09:31.660 --> 00:09:31.670 align:start position:0%
it needs to run on instead I can just
 

00:09:31.670 --> 00:09:33.400 align:start position:0%
it needs to run on instead I can just
call<00:09:31.940><c> it</c><00:09:32.120><c> and</c><00:09:32.330><c> the</c><00:09:32.420><c> function</c><00:09:32.780><c> itself</c><00:09:33.140><c> can</c>

00:09:33.400 --> 00:09:33.410 align:start position:0%
call it and the function itself can
 

00:09:33.410 --> 00:09:34.900 align:start position:0%
call it and the function itself can
ensure<00:09:33.770><c> that</c><00:09:33.800><c> it's</c><00:09:34.100><c> safe</c><00:09:34.310><c> to</c><00:09:34.490><c> be</c><00:09:34.580><c> called</c><00:09:34.790><c> from</c>

00:09:34.900 --> 00:09:34.910 align:start position:0%
ensure that it's safe to be called from
 

00:09:34.910 --> 00:09:38.530 align:start position:0%
ensure that it's safe to be called from
the<00:09:35.090><c> main</c><00:09:35.210><c> thread</c><00:09:36.550><c> to</c><00:09:37.550><c> finish</c><00:09:37.700><c> up</c><00:09:37.970><c> introducing</c>

00:09:38.530 --> 00:09:38.540 align:start position:0%
the main thread to finish up introducing
 

00:09:38.540 --> 00:09:40.060 align:start position:0%
the main thread to finish up introducing
pair<00:09:38.750><c> routines</c><00:09:39.050><c> let's</c><00:09:39.440><c> take</c><00:09:39.590><c> a</c><00:09:39.620><c> look</c><00:09:39.860><c> at</c><00:09:39.950><c> how</c>

00:09:40.060 --> 00:09:40.070 align:start position:0%
pair routines let's take a look at how
 

00:09:40.070 --> 00:09:42.340 align:start position:0%
pair routines let's take a look at how
Kotlin<00:09:40.490><c> implements</c><00:09:40.910><c> them</c><00:09:41.060><c> every</c><00:09:41.900><c> thread</c><00:09:42.170><c> has</c>

00:09:42.340 --> 00:09:42.350 align:start position:0%
Kotlin implements them every thread has
 

00:09:42.350 --> 00:09:44.170 align:start position:0%
Kotlin implements them every thread has
a<00:09:42.380><c> call</c><00:09:42.680><c> stack</c><00:09:42.950><c> it's</c><00:09:43.550><c> what</c><00:09:43.760><c> you</c><00:09:43.820><c> see</c><00:09:44.000><c> in</c><00:09:44.090><c> the</c>

00:09:44.170 --> 00:09:44.180 align:start position:0%
a call stack it's what you see in the
 

00:09:44.180 --> 00:09:46.210 align:start position:0%
a call stack it's what you see in the
debugger<00:09:44.480><c> or</c><00:09:44.780><c> a</c><00:09:44.840><c> stack</c><00:09:45.350><c> trace</c><00:09:45.530><c> it's</c><00:09:46.070><c> how</c>

00:09:46.210 --> 00:09:46.220 align:start position:0%
debugger or a stack trace it's how
 

00:09:46.220 --> 00:09:48.220 align:start position:0%
debugger or a stack trace it's how
collin<00:09:46.670><c> keeps</c><00:09:46.970><c> track</c><00:09:47.300><c> of</c><00:09:47.330><c> which</c><00:09:47.750><c> function</c><00:09:48.140><c> is</c>

00:09:48.220 --> 00:09:48.230 align:start position:0%
collin keeps track of which function is
 

00:09:48.230 --> 00:09:50.770 align:start position:0%
collin keeps track of which function is
running<00:09:48.560><c> and</c><00:09:48.710><c> its</c><00:09:49.130><c> local</c><00:09:49.400><c> variables</c><00:09:49.940><c> when</c><00:09:50.690><c> you</c>

00:09:50.770 --> 00:09:50.780 align:start position:0%
running and its local variables when you
 

00:09:50.780 --> 00:09:52.660 align:start position:0%
running and its local variables when you
call<00:09:51.050><c> us</c><00:09:51.230><c> to</c><00:09:51.350><c> spend</c><00:09:51.590><c> function</c><00:09:52.040><c> Collin</c><00:09:52.520><c> needs</c>

00:09:52.660 --> 00:09:52.670 align:start position:0%
call us to spend function Collin needs
 

00:09:52.670 --> 00:09:54.460 align:start position:0%
call us to spend function Collin needs
to<00:09:52.790><c> keep</c><00:09:52.940><c> track</c><00:09:53.270><c> of</c><00:09:53.480><c> the</c><00:09:53.540><c> fact</c><00:09:53.780><c> it's</c><00:09:54.020><c> running</c><00:09:54.380><c> a</c>

00:09:54.460 --> 00:09:54.470 align:start position:0%
to keep track of the fact it's running a
 

00:09:54.470 --> 00:09:56.530 align:start position:0%
to keep track of the fact it's running a
KO<00:09:54.650><c> routine</c><00:09:54.980><c> instead</c><00:09:55.820><c> of</c><00:09:55.910><c> a</c><00:09:55.970><c> regular</c><00:09:56.150><c> function</c>

00:09:56.530 --> 00:09:56.540 align:start position:0%
KO routine instead of a regular function
 

00:09:56.540 --> 00:09:59.080 align:start position:0%
KO routine instead of a regular function
I'm<00:09:57.110><c> gonna</c><00:09:57.380><c> represent</c><00:09:57.680><c> this</c><00:09:58.040><c> as</c><00:09:58.310><c> a</c><00:09:58.370><c> suspend</c>

00:09:59.080 --> 00:09:59.090 align:start position:0%
I'm gonna represent this as a suspend
 

00:09:59.090 --> 00:09:59.620 align:start position:0%
I'm gonna represent this as a suspend
marker

00:09:59.620 --> 00:09:59.630 align:start position:0%
marker
 

00:09:59.630 --> 00:10:01.570 align:start position:0%
marker
everything<00:10:00.230><c> above</c><00:10:00.530><c> the</c><00:10:00.770><c> suspend</c><00:10:01.130><c> marker</c><00:10:01.430><c> will</c>

00:10:01.570 --> 00:10:01.580 align:start position:0%
everything above the suspend marker will
 

00:10:01.580 --> 00:10:03.310 align:start position:0%
everything above the suspend marker will
be<00:10:01.700><c> a</c><00:10:01.730><c> couraging</c><00:10:02.240><c> and</c><00:10:02.420><c> everything</c><00:10:02.810><c> below</c><00:10:02.960><c> will</c>

00:10:03.310 --> 00:10:03.320 align:start position:0%
be a couraging and everything below will
 

00:10:03.320 --> 00:10:06.610 align:start position:0%
be a couraging and everything below will
be<00:10:03.350><c> a</c><00:10:03.470><c> regular</c><00:10:03.680><c> function</c><00:10:04.390><c> then</c><00:10:05.390><c> Kotlin</c><00:10:05.990><c> calls</c>

00:10:06.610 --> 00:10:06.620 align:start position:0%
be a regular function then Kotlin calls
 

00:10:06.620 --> 00:10:08.380 align:start position:0%
be a regular function then Kotlin calls
load<00:10:06.830><c> user</c><00:10:07.040><c> just</c><00:10:07.520><c> like</c><00:10:07.670><c> a</c><00:10:07.700><c> normal</c><00:10:08.060><c> function</c>

00:10:08.380 --> 00:10:08.390 align:start position:0%
load user just like a normal function
 

00:10:08.390 --> 00:10:10.420 align:start position:0%
load user just like a normal function
it's<00:10:08.630><c> gonna</c><00:10:08.750><c> put</c><00:10:08.960><c> a</c><00:10:08.990><c> stack</c><00:10:09.500><c> entry</c><00:10:09.920><c> onto</c><00:10:10.100><c> the</c>

00:10:10.420 --> 00:10:10.430 align:start position:0%
it's gonna put a stack entry onto the
 

00:10:10.430 --> 00:10:12.700 align:start position:0%
it's gonna put a stack entry onto the
call<00:10:10.790><c> stack</c><00:10:11.060><c> and</c><00:10:11.420><c> this</c><00:10:11.810><c> is</c><00:10:11.930><c> where</c><00:10:12.050><c> any</c><00:10:12.230><c> local</c>

00:10:12.700 --> 00:10:12.710 align:start position:0%
call stack and this is where any local
 

00:10:12.710 --> 00:10:14.380 align:start position:0%
call stack and this is where any local
variables<00:10:13.130><c> for</c><00:10:13.310><c> load</c><00:10:13.430><c> user</c><00:10:13.670><c> would</c><00:10:13.940><c> be</c><00:10:14.090><c> stored</c>

00:10:14.380 --> 00:10:14.390 align:start position:0%
variables for load user would be stored
 

00:10:14.390 --> 00:10:17.320 align:start position:0%
variables for load user would be stored
and<00:10:14.810><c> then</c><00:10:15.680><c> it</c><00:10:15.830><c> just</c><00:10:15.980><c> executes</c><00:10:16.400><c> until</c><00:10:16.970><c> it</c><00:10:17.120><c> finds</c>

00:10:17.320 --> 00:10:17.330 align:start position:0%
and then it just executes until it finds
 

00:10:17.330 --> 00:10:20.740 align:start position:0%
and then it just executes until it finds
another<00:10:17.540><c> suspend</c><00:10:18.290><c> function</c><00:10:18.710><c> call</c><00:10:19.270><c> now</c><00:10:20.270><c> Kotlin</c>

00:10:20.740 --> 00:10:20.750 align:start position:0%
another suspend function call now Kotlin
 

00:10:20.750 --> 00:10:22.660 align:start position:0%
another suspend function call now Kotlin
has<00:10:20.930><c> to</c><00:10:21.080><c> implement</c><00:10:21.260><c> suspend</c><00:10:21.860><c> how</c><00:10:22.370><c> does</c><00:10:22.490><c> it</c><00:10:22.580><c> do</c>

00:10:22.660 --> 00:10:22.670 align:start position:0%
has to implement suspend how does it do
 

00:10:22.670 --> 00:10:23.370 align:start position:0%
has to implement suspend how does it do
that

00:10:23.370 --> 00:10:23.380 align:start position:0%
that
 

00:10:23.380 --> 00:10:25.900 align:start position:0%
that
what's<00:10:24.380><c> kind</c><00:10:24.800><c> of</c><00:10:24.890><c> simple</c><00:10:25.190><c> once</c><00:10:25.430><c> you</c><00:10:25.550><c> figure</c><00:10:25.820><c> it</c>

00:10:25.900 --> 00:10:25.910 align:start position:0%
what's kind of simple once you figure it
 

00:10:25.910 --> 00:10:28.840 align:start position:0%
what's kind of simple once you figure it
out<00:10:26.060><c> all</c><00:10:26.510><c> Kotlin</c><00:10:27.230><c> has</c><00:10:27.410><c> to</c><00:10:27.560><c> do</c><00:10:27.710><c> is</c><00:10:27.950><c> copy</c><00:10:28.490><c> the</c>

00:10:28.840 --> 00:10:28.850 align:start position:0%
out all Kotlin has to do is copy the
 

00:10:28.850 --> 00:10:31.630 align:start position:0%
out all Kotlin has to do is copy the
state<00:10:29.180><c> of</c><00:10:29.390><c> the</c><00:10:29.660><c> function</c><00:10:30.080><c> from</c><00:10:30.620><c> the</c><00:10:30.890><c> stack</c><00:10:31.190><c> to</c>

00:10:31.630 --> 00:10:31.640 align:start position:0%
state of the function from the stack to
 

00:10:31.640 --> 00:10:33.510 align:start position:0%
state of the function from the stack to
a<00:10:31.670><c> place</c><00:10:32.030><c> where</c><00:10:32.300><c> it</c><00:10:32.420><c> can</c><00:10:32.570><c> save</c><00:10:32.870><c> it</c><00:10:33.020><c> for</c><00:10:33.170><c> later</c>

00:10:33.510 --> 00:10:33.520 align:start position:0%
a place where it can save it for later
 

00:10:33.520 --> 00:10:35.950 align:start position:0%
a place where it can save it for later
it'll<00:10:34.520><c> put</c><00:10:34.700><c> all</c><00:10:34.940><c> suspended</c><00:10:35.420><c> coverage</c><00:10:35.810><c> scenes</c>

00:10:35.950 --> 00:10:35.960 align:start position:0%
it'll put all suspended coverage scenes
 

00:10:35.960 --> 00:10:37.810 align:start position:0%
it'll put all suspended coverage scenes
out<00:10:36.080><c> here</c><00:10:36.320><c> and</c><00:10:36.500><c> it's</c><00:10:36.770><c> not</c><00:10:37.160><c> structured</c><00:10:37.640><c> like</c><00:10:37.790><c> a</c>

00:10:37.810 --> 00:10:37.820 align:start position:0%
out here and it's not structured like a
 

00:10:37.820 --> 00:10:40.390 align:start position:0%
out here and it's not structured like a
stack<00:10:38.200><c> then</c><00:10:39.200><c> Collin</c><00:10:39.830><c> will</c><00:10:39.950><c> actually</c><00:10:40.220><c> call</c>

00:10:40.390 --> 00:10:40.400 align:start position:0%
stack then Collin will actually call
 

00:10:40.400 --> 00:10:42.340 align:start position:0%
stack then Collin will actually call
fetch<00:10:40.610><c> user</c><00:10:40.850><c> creates</c><00:10:41.450><c> another</c><00:10:41.660><c> stack</c><00:10:41.960><c> entry</c>

00:10:42.340 --> 00:10:42.350 align:start position:0%
fetch user creates another stack entry
 

00:10:42.350 --> 00:10:44.830 align:start position:0%
fetch user creates another stack entry
and<00:10:42.560><c> when</c><00:10:42.980><c> it</c><00:10:43.070><c> calls</c><00:10:43.280><c> with</c><00:10:43.550><c> context</c><00:10:44.060><c> suspends</c>

00:10:44.830 --> 00:10:44.840 align:start position:0%
and when it calls with context suspends
 

00:10:44.840 --> 00:10:49.829 align:start position:0%
and when it calls with context suspends
that<00:10:44.990><c> as</c><00:10:45.140><c> well</c><00:10:45.700><c> so</c><00:10:46.700><c> at</c><00:10:46.850><c> this</c><00:10:47.210><c> point</c>

00:10:49.829 --> 00:10:49.839 align:start position:0%
 
 

00:10:49.839 --> 00:10:52.629 align:start position:0%
 
so<00:10:50.839><c> at</c><00:10:50.990><c> this</c><00:10:51.170><c> point</c><00:10:51.410><c> all</c><00:10:51.649><c> of</c><00:10:51.709><c> the</c><00:10:52.160><c> curry</c><00:10:52.370><c> teams</c>

00:10:52.629 --> 00:10:52.639 align:start position:0%
so at this point all of the curry teams
 

00:10:52.639 --> 00:10:54.430 align:start position:0%
so at this point all of the curry teams
on<00:10:52.820><c> the</c><00:10:52.910><c> main</c><00:10:53.089><c> thread</c><00:10:53.300><c> are</c><00:10:53.600><c> suspended</c><00:10:54.230><c> and</c>

00:10:54.430 --> 00:10:54.440 align:start position:0%
on the main thread are suspended and
 

00:10:54.440 --> 00:10:56.560 align:start position:0%
on the main thread are suspended and
this<00:10:55.010><c> means</c><00:10:55.220><c> the</c><00:10:55.519><c> main</c><00:10:55.700><c> thread</c><00:10:55.970><c> is</c><00:10:56.089><c> free</c><00:10:56.329><c> to</c><00:10:56.480><c> do</c>

00:10:56.560 --> 00:10:56.570 align:start position:0%
this means the main thread is free to do
 

00:10:56.570 --> 00:10:58.660 align:start position:0%
this means the main thread is free to do
other<00:10:56.810><c> work</c><00:10:56.959><c> like</c><00:10:57.500><c> handle</c><00:10:58.010><c> on</c><00:10:58.130><c> draw</c><00:10:58.399><c> or</c>

00:10:58.660 --> 00:10:58.670 align:start position:0%
other work like handle on draw or
 

00:10:58.670 --> 00:11:00.730 align:start position:0%
other work like handle on draw or
respond<00:10:59.089><c> to</c><00:10:59.180><c> user</c><00:10:59.329><c> touches</c><00:10:59.630><c> and</c><00:11:00.410><c> this</c><00:11:00.529><c> is</c>

00:11:00.730 --> 00:11:00.740 align:start position:0%
respond to user touches and this is
 

00:11:00.740 --> 00:11:03.100 align:start position:0%
respond to user touches and this is
really<00:11:01.190><c> really</c><00:11:01.370><c> important</c><00:11:01.970><c> when</c><00:11:02.480><c> all</c><00:11:02.779><c> of</c><00:11:02.990><c> the</c>

00:11:03.100 --> 00:11:03.110 align:start position:0%
really really important when all of the
 

00:11:03.110 --> 00:11:05.259 align:start position:0%
really really important when all of the
curry<00:11:03.290><c> teens</c><00:11:03.560><c> on</c><00:11:03.709><c> a</c><00:11:03.740><c> thread</c><00:11:04.100><c> are</c><00:11:04.430><c> suspended</c>

00:11:05.259 --> 00:11:05.269 align:start position:0%
curry teens on a thread are suspended
 

00:11:05.269 --> 00:11:07.870 align:start position:0%
curry teens on a thread are suspended
the<00:11:05.510><c> thread</c><00:11:06.139><c> is</c><00:11:06.260><c> free</c><00:11:06.529><c> to</c><00:11:06.680><c> do</c><00:11:06.800><c> other</c><00:11:06.980><c> work</c><00:11:07.070><c> if</c>

00:11:07.870 --> 00:11:07.880 align:start position:0%
the thread is free to do other work if
 

00:11:07.880 --> 00:11:09.400 align:start position:0%
the thread is free to do other work if
we<00:11:08.029><c> fast</c><00:11:08.269><c> forward</c><00:11:08.630><c> a</c><00:11:08.690><c> few</c><00:11:08.720><c> seconds</c><00:11:09.290><c> the</c>

00:11:09.400 --> 00:11:09.410 align:start position:0%
we fast forward a few seconds the
 

00:11:09.410 --> 00:11:12.579 align:start position:0%
we fast forward a few seconds the
network<00:11:09.649><c> result</c><00:11:09.980><c> will</c><00:11:10.130><c> be</c><00:11:10.220><c> ready</c><00:11:10.430><c> and</c><00:11:11.589><c> Colin</c>

00:11:12.579 --> 00:11:12.589 align:start position:0%
network result will be ready and Colin
 

00:11:12.589 --> 00:11:14.889 align:start position:0%
network result will be ready and Colin
will<00:11:12.709><c> have</c><00:11:12.860><c> to</c><00:11:13.010><c> call</c><00:11:13.190><c> resume</c><00:11:13.579><c> in</c><00:11:14.449><c> order</c><00:11:14.540><c> to</c><00:11:14.779><c> do</c>

00:11:14.889 --> 00:11:14.899 align:start position:0%
will have to call resume in order to do
 

00:11:14.899 --> 00:11:16.420 align:start position:0%
will have to call resume in order to do
that<00:11:15.050><c> it</c><00:11:15.199><c> just</c><00:11:15.380><c> takes</c><00:11:15.529><c> the</c><00:11:15.769><c> save</c><00:11:15.949><c> state</c><00:11:16.250><c> and</c>

00:11:16.420 --> 00:11:16.430 align:start position:0%
that it just takes the save state and
 

00:11:16.430 --> 00:11:17.980 align:start position:0%
that it just takes the save state and
copies<00:11:16.760><c> it</c><00:11:16.790><c> backs</c><00:11:17.029><c> over</c><00:11:17.209><c> puts</c><00:11:17.660><c> it</c><00:11:17.779><c> on</c><00:11:17.870><c> the</c>

00:11:17.980 --> 00:11:17.990 align:start position:0%
copies it backs over puts it on the
 

00:11:17.990 --> 00:11:21.100 align:start position:0%
copies it backs over puts it on the
stack<00:11:18.230><c> and</c><00:11:18.529><c> resumes</c><00:11:18.860><c> the</c><00:11:19.100><c> function</c><00:11:20.019><c> when</c><00:11:21.019><c> it</c>

00:11:21.100 --> 00:11:21.110 align:start position:0%
stack and resumes the function when it
 

00:11:21.110 --> 00:11:23.379 align:start position:0%
stack and resumes the function when it
resumes<00:11:21.230><c> load</c><00:11:21.620><c> user</c><00:11:21.860><c> it'll</c><00:11:22.370><c> just</c><00:11:22.610><c> go</c><00:11:23.240><c> ahead</c>

00:11:23.379 --> 00:11:23.389 align:start position:0%
resumes load user it'll just go ahead
 

00:11:23.389 --> 00:11:26.160 align:start position:0%
resumes load user it'll just go ahead
and<00:11:23.870><c> continue</c><00:11:24.230><c> executing</c><00:11:24.949><c> just</c><00:11:25.430><c> like</c><00:11:25.610><c> normal</c>

00:11:26.160 --> 00:11:26.170 align:start position:0%
and continue executing just like normal
 

00:11:26.170 --> 00:11:28.840 align:start position:0%
and continue executing just like normal
load<00:11:27.170><c> user</c><00:11:27.380><c> head</c><00:11:27.709><c> aired</c><00:11:28.190><c> it</c><00:11:28.639><c> would</c><00:11:28.760><c> have</c>

00:11:28.840 --> 00:11:28.850 align:start position:0%
load user head aired it would have
 

00:11:28.850 --> 00:11:30.939 align:start position:0%
load user head aired it would have
thrown<00:11:29.029><c> an</c><00:11:29.209><c> exception</c><00:11:29.660><c> right</c><00:11:29.810><c> there</c><00:11:30.019><c> the</c>

00:11:30.939 --> 00:11:30.949 align:start position:0%
thrown an exception right there the
 

00:11:30.949 --> 00:11:32.740 align:start position:0%
thrown an exception right there the
suspend<00:11:31.490><c> and</c><00:11:31.639><c> resume</c><00:11:31.730><c> mechanism</c><00:11:32.449><c> is</c><00:11:32.600><c> the</c>

00:11:32.740 --> 00:11:32.750 align:start position:0%
suspend and resume mechanism is the
 

00:11:32.750 --> 00:11:34.509 align:start position:0%
suspend and resume mechanism is the
magic<00:11:33.199><c> behind</c><00:11:33.320><c> co-routines</c><00:11:33.949><c> and</c><00:11:34.130><c> we</c><00:11:34.250><c> wanted</c>

00:11:34.509 --> 00:11:34.519 align:start position:0%
magic behind co-routines and we wanted
 

00:11:34.519 --> 00:11:35.829 align:start position:0%
magic behind co-routines and we wanted
to<00:11:34.610><c> show</c><00:11:34.820><c> it</c><00:11:34.970><c> to</c><00:11:35.089><c> you</c><00:11:35.209><c> so</c><00:11:35.600><c> you</c><00:11:35.630><c> could</c>

00:11:35.829 --> 00:11:35.839 align:start position:0%
to show it to you so you could
 

00:11:35.839 --> 00:11:37.389 align:start position:0%
to show it to you so you could
understand<00:11:36.199><c> how</c><00:11:36.260><c> they</c><00:11:36.649><c> work</c><00:11:36.860><c> as</c><00:11:37.010><c> you</c><00:11:37.190><c> start</c>

00:11:37.389 --> 00:11:37.399 align:start position:0%
understand how they work as you start
 

00:11:37.399 --> 00:11:42.189 align:start position:0%
understand how they work as you start
using<00:11:37.519><c> them</c><00:11:37.790><c> in</c><00:11:37.970><c> your</c><00:11:38.089><c> code</c><00:11:38.329><c> that</c><00:11:41.019><c> wraps</c><00:11:42.019><c> up</c>

00:11:42.189 --> 00:11:42.199 align:start position:0%
using them in your code that wraps up
 

00:11:42.199 --> 00:11:43.990 align:start position:0%
using them in your code that wraps up
the<00:11:42.290><c> core</c><00:11:42.470><c> routines</c><00:11:42.740><c> intro</c><00:11:43.040><c> hurry</c><00:11:43.519><c> teams</c><00:11:43.850><c> on</c>

00:11:43.990 --> 00:11:44.000 align:start position:0%
the core routines intro hurry teams on
 

00:11:44.000 --> 00:11:46.030 align:start position:0%
the core routines intro hurry teams on
android<00:11:44.360><c> offer</c><00:11:44.630><c> us</c><00:11:44.959><c> the</c><00:11:45.139><c> ability</c><00:11:45.260><c> to</c><00:11:45.470><c> simplify</c>

00:11:46.030 --> 00:11:46.040 align:start position:0%
android offer us the ability to simplify
 

00:11:46.040 --> 00:11:47.980 align:start position:0%
android offer us the ability to simplify
our<00:11:46.070><c> code</c><00:11:46.399><c> by</c><00:11:46.670><c> replacing</c><00:11:47.120><c> callbacks</c><00:11:47.750><c> and</c>

00:11:47.980 --> 00:11:47.990 align:start position:0%
our code by replacing callbacks and
 

00:11:47.990 --> 00:11:50.139 align:start position:0%
our code by replacing callbacks and
allow<00:11:48.709><c> us</c><00:11:48.889><c> the</c><00:11:49.040><c> ability</c><00:11:49.399><c> to</c><00:11:49.430><c> create</c><00:11:49.730><c> main</c>

00:11:50.139 --> 00:11:50.149 align:start position:0%
allow us the ability to create main
 

00:11:50.149 --> 00:11:52.629 align:start position:0%
allow us the ability to create main
safety<00:11:50.540><c> to</c><00:11:51.199><c> ensure</c><00:11:51.320><c> we</c><00:11:51.649><c> never</c><00:11:51.980><c> block</c><00:11:52.310><c> the</c><00:11:52.519><c> main</c>

00:11:52.629 --> 00:11:52.639 align:start position:0%
safety to ensure we never block the main
 

00:11:52.639 --> 00:11:54.460 align:start position:0%
safety to ensure we never block the main
thread<00:11:52.720><c> now</c><00:11:53.720><c> I'm</c><00:11:53.779><c> going</c><00:11:53.930><c> to</c><00:11:53.990><c> hand</c><00:11:54.170><c> it</c><00:11:54.230><c> over</c><00:11:54.320><c> to</c>

00:11:54.460 --> 00:11:54.470 align:start position:0%
thread now I'm going to hand it over to
 

00:11:54.470 --> 00:11:55.750 align:start position:0%
thread now I'm going to hand it over to
Sergey<00:11:54.890><c> who</c><00:11:55.160><c> will</c><00:11:55.279><c> talk</c><00:11:55.459><c> a</c><00:11:55.490><c> bit</c><00:11:55.730><c> about</c>

00:11:55.750 --> 00:11:55.760 align:start position:0%
Sergey who will talk a bit about
 

00:11:55.760 --> 00:11:57.370 align:start position:0%
Sergey who will talk a bit about
libraries<00:11:56.390><c> you</c><00:11:56.660><c> can</c><00:11:56.810><c> use</c><00:11:56.930><c> today</c><00:11:57.199><c> with</c>

00:11:57.370 --> 00:11:57.380 align:start position:0%
libraries you can use today with
 

00:11:57.380 --> 00:12:03.009 align:start position:0%
libraries you can use today with
heritance<00:11:59.440><c> thanks</c><00:12:00.440><c> John</c><00:12:00.709><c> yeah</c><00:12:01.550><c> those</c><00:12:02.510><c> very</c>

00:12:03.009 --> 00:12:03.019 align:start position:0%
heritance thanks John yeah those very
 

00:12:03.019 --> 00:12:04.840 align:start position:0%
heritance thanks John yeah those very
cool<00:12:03.230><c> bits</c><00:12:03.410><c> on</c><00:12:03.529><c> ice</c><00:12:03.649><c> but</c><00:12:03.920><c> we</c><00:12:04.160><c> really</c><00:12:04.519><c> want</c><00:12:04.760><c> to</c>

00:12:04.840 --> 00:12:04.850 align:start position:0%
cool bits on ice but we really want to
 

00:12:04.850 --> 00:12:07.000 align:start position:0%
cool bits on ice but we really want to
benefit<00:12:05.329><c> in</c><00:12:05.540><c> our</c><00:12:05.690><c> real</c><00:12:06.079><c> application</c><00:12:06.709><c> from</c><00:12:06.829><c> it</c>

00:12:07.000 --> 00:12:07.010 align:start position:0%
benefit in our real application from it
 

00:12:07.010 --> 00:12:09.819 align:start position:0%
benefit in our real application from it
and<00:12:07.240><c> despite</c><00:12:08.240><c> a</c><00:12:08.269><c> very</c><00:12:08.510><c> young</c><00:12:08.779><c> age</c><00:12:09.019><c> of</c><00:12:09.199><c> curtains</c>

00:12:09.819 --> 00:12:09.829 align:start position:0%
and despite a very young age of curtains
 

00:12:09.829 --> 00:12:11.980 align:start position:0%
and despite a very young age of curtains
there<00:12:10.250><c> are</c><00:12:10.339><c> libraries</c><00:12:10.579><c> that</c><00:12:10.970><c> already</c><00:12:11.180><c> support</c>

00:12:11.980 --> 00:12:11.990 align:start position:0%
there are libraries that already support
 

00:12:11.990 --> 00:12:14.949 align:start position:0%
there are libraries that already support
them<00:12:12.260><c> in</c><00:12:12.500><c> very</c><00:12:13.010><c> stable</c><00:12:13.610><c> orbit</c><00:12:14.240><c> artifacts</c><00:12:14.750><c> and</c>

00:12:14.949 --> 00:12:14.959 align:start position:0%
them in very stable orbit artifacts and
 

00:12:14.959 --> 00:12:17.079 align:start position:0%
them in very stable orbit artifacts and
I<00:12:15.050><c> want</c><00:12:15.290><c> to</c><00:12:15.410><c> start</c><00:12:15.620><c> with</c><00:12:15.800><c> work</c><00:12:16.160><c> manager</c><00:12:16.699><c> that</c>

00:12:17.079 --> 00:12:17.089 align:start position:0%
I want to start with work manager that
 

00:12:17.089 --> 00:12:19.810 align:start position:0%
I want to start with work manager that
is<00:12:17.300><c> Payoneer</c><00:12:18.140><c> for</c><00:12:18.470><c> us</c><00:12:18.560><c> in</c><00:12:18.860><c> Android</c><00:12:19.130><c> X</c><00:12:19.370><c> because</c>

00:12:19.810 --> 00:12:19.820 align:start position:0%
is Payoneer for us in Android X because
 

00:12:19.820 --> 00:12:22.470 align:start position:0%
is Payoneer for us in Android X because
it's<00:12:20.420><c> already</c><00:12:20.870><c> supports</c><00:12:21.350><c> car</c><00:12:21.529><c> scenes</c><00:12:21.769><c> in</c><00:12:21.949><c> its</c>

00:12:22.470 --> 00:12:22.480 align:start position:0%
it's already supports car scenes in its
 

00:12:22.480 --> 00:12:25.269 align:start position:0%
it's already supports car scenes in its
stable<00:12:23.480><c> release</c><00:12:23.779><c> and</c><00:12:24.079><c> you</c><00:12:24.740><c> can</c><00:12:24.890><c> use</c><00:12:25.040><c> this</c>

00:12:25.269 --> 00:12:25.279 align:start position:0%
stable release and you can use this
 

00:12:25.279 --> 00:12:28.389 align:start position:0%
stable release and you can use this
curtain<00:12:25.910><c> worker</c><00:12:26.149><c> but</c><00:12:26.690><c> let's</c><00:12:27.170><c> make</c><00:12:27.829><c> a</c><00:12:27.890><c> step</c>

00:12:28.389 --> 00:12:28.399 align:start position:0%
curtain worker but let's make a step
 

00:12:28.399 --> 00:12:32.019 align:start position:0%
curtain worker but let's make a step
back<00:12:28.640><c> and</c><00:12:29.470><c> try</c><00:12:30.470><c> to</c><00:12:30.589><c> figure</c><00:12:30.800><c> out</c><00:12:30.980><c> why</c><00:12:31.190><c> we</c><00:12:31.370><c> do</c>

00:12:32.019 --> 00:12:32.029 align:start position:0%
back and try to figure out why we do
 

00:12:32.029 --> 00:12:35.050 align:start position:0%
back and try to figure out why we do
that<00:12:32.180><c> we</c><00:12:32.660><c> use</c><00:12:32.839><c> it</c><00:12:33.019><c> so</c><00:12:33.170><c> this</c><00:12:34.130><c> is</c><00:12:34.190><c> a</c><00:12:34.370><c> typical</c><00:12:34.550><c> flow</c>

00:12:35.050 --> 00:12:35.060 align:start position:0%
that we use it so this is a typical flow
 

00:12:35.060 --> 00:12:38.230 align:start position:0%
that we use it so this is a typical flow
of<00:12:35.529><c> workers</c><00:12:36.529><c> so</c><00:12:37.220><c> if</c><00:12:37.399><c> you</c><00:12:37.519><c> are</c><00:12:37.579><c> not</c><00:12:37.699><c> familiar</c><00:12:37.850><c> of</c>

00:12:38.230 --> 00:12:38.240 align:start position:0%
of workers so if you are not familiar of
 

00:12:38.240 --> 00:12:39.850 align:start position:0%
of workers so if you are not familiar of
work<00:12:38.600><c> manager</c><00:12:39.019><c> you</c><00:12:39.140><c> can</c><00:12:39.290><c> think</c><00:12:39.500><c> of</c><00:12:39.620><c> worker</c>

00:12:39.850 --> 00:12:39.860 align:start position:0%
work manager you can think of worker
 

00:12:39.860 --> 00:12:42.759 align:start position:0%
work manager you can think of worker
just<00:12:40.220><c> something</c><00:12:40.790><c> that</c><00:12:41.000><c> does</c><00:12:41.240><c> long</c><00:12:41.990><c> pink</c><00:12:42.440><c> round</c>

00:12:42.759 --> 00:12:42.769 align:start position:0%
just something that does long pink round
 

00:12:42.769 --> 00:12:45.939 align:start position:0%
just something that does long pink round
job<00:12:43.130><c> it</c><00:12:43.670><c> may</c><00:12:44.029><c> have</c><00:12:44.209><c> some</c><00:12:44.390><c> constraints</c><00:12:45.139><c> but</c>

00:12:45.939 --> 00:12:45.949 align:start position:0%
job it may have some constraints but
 

00:12:45.949 --> 00:12:48.930 align:start position:0%
job it may have some constraints but
it's<00:12:46.639><c> very</c><00:12:47.029><c> simple</c><00:12:47.329><c> just</c><00:12:47.839><c> some</c><00:12:48.199><c> work</c><00:12:48.440><c> and</c>

00:12:48.930 --> 00:12:48.940 align:start position:0%
it's very simple just some work and
 

00:12:48.940 --> 00:12:51.160 align:start position:0%
it's very simple just some work and
typical<00:12:49.940><c> use</c><00:12:50.089><c> case</c><00:12:50.300><c> for</c><00:12:50.329><c> that</c><00:12:50.569><c> you</c><00:12:50.959><c> need</c><00:12:51.139><c> to</c>

00:12:51.160 --> 00:12:51.170 align:start position:0%
typical use case for that you need to
 

00:12:51.170 --> 00:12:54.129 align:start position:0%
typical use case for that you need to
synchronize<00:12:51.740><c> some</c><00:12:52.100><c> local</c><00:12:52.550><c> data</c><00:12:52.959><c> with</c><00:12:53.959><c> your</c>

00:12:54.129 --> 00:12:54.139 align:start position:0%
synchronize some local data with your
 

00:12:54.139 --> 00:12:56.470 align:start position:0%
synchronize some local data with your
web<00:12:54.380><c> server</c><00:12:54.680><c> and</c><00:12:55.040><c> this</c><00:12:55.610><c> flow</c><00:12:55.910><c> would</c><00:12:56.089><c> look</c><00:12:56.300><c> like</c>

00:12:56.470 --> 00:12:56.480 align:start position:0%
web server and this flow would look like
 

00:12:56.480 --> 00:12:58.470 align:start position:0%
web server and this flow would look like
you<00:12:57.110><c> query</c><00:12:57.380><c> your</c>

00:12:58.470 --> 00:12:58.480 align:start position:0%
you query your
 

00:12:58.480 --> 00:13:02.220 align:start position:0%
you query your
new<00:12:59.019><c> notes</c><00:12:59.290><c> from</c><00:13:00.250><c> your</c><00:13:00.399><c> database</c><00:13:00.699><c> then</c><00:13:01.480><c> upload</c>

00:13:02.220 --> 00:13:02.230 align:start position:0%
new notes from your database then upload
 

00:13:02.230 --> 00:13:05.930 align:start position:0%
new notes from your database then upload
it<00:13:02.260><c> to</c><00:13:02.529><c> the</c><00:13:02.589><c> web</c><00:13:02.709><c> server</c><00:13:03.720><c> lastly</c><00:13:04.720><c> you</c><00:13:04.899><c> just</c>

00:13:05.930 --> 00:13:05.940 align:start position:0%
it to the web server lastly you just
 

00:13:05.940 --> 00:13:09.060 align:start position:0%
it to the web server lastly you just
mark<00:13:06.940><c> those</c><00:13:07.240><c> notes</c><00:13:07.540><c> is</c><00:13:07.839><c> successfully</c><00:13:08.800><c> singing</c>

00:13:09.060 --> 00:13:09.070 align:start position:0%
mark those notes is successfully singing
 

00:13:09.070 --> 00:13:11.960 align:start position:0%
mark those notes is successfully singing
well<00:13:09.310><c> you</c><00:13:09.610><c> see</c><00:13:09.820><c> no</c><00:13:10.209><c> need</c><00:13:10.389><c> for</c><00:13:10.449><c> curtsies</c><00:13:11.079><c> well</c>

00:13:11.960 --> 00:13:11.970 align:start position:0%
well you see no need for curtsies well
 

00:13:11.970 --> 00:13:14.730 align:start position:0%
well you see no need for curtsies well
actually<00:13:12.970><c> we</c><00:13:13.660><c> didn't</c><00:13:13.899><c> start</c><00:13:14.170><c> to</c><00:13:14.320><c> talk</c><00:13:14.500><c> about</c>

00:13:14.730 --> 00:13:14.740 align:start position:0%
actually we didn't start to talk about
 

00:13:14.740 --> 00:13:17.519 align:start position:0%
actually we didn't start to talk about
translation<00:13:15.070><c> because</c><00:13:16.199><c> translation</c><00:13:17.199><c> may</c>

00:13:17.519 --> 00:13:17.529 align:start position:0%
translation because translation may
 

00:13:17.529 --> 00:13:20.129 align:start position:0%
translation because translation may
happen<00:13:18.010><c> tea</c><00:13:18.310><c> variety</c><00:13:18.880><c> reasons</c><00:13:19.000><c> for</c><00:13:19.690><c> example</c>

00:13:20.129 --> 00:13:20.139 align:start position:0%
happen tea variety reasons for example
 

00:13:20.139 --> 00:13:22.500 align:start position:0%
happen tea variety reasons for example
constraints<00:13:20.980><c> for</c><00:13:21.130><c> this</c><00:13:21.279><c> worker</c><00:13:21.550><c> aren't</c><00:13:22.269><c> met</c>

00:13:22.500 --> 00:13:22.510 align:start position:0%
constraints for this worker aren't met
 

00:13:22.510 --> 00:13:26.129 align:start position:0%
constraints for this worker aren't met
anymore<00:13:23.079><c> or</c><00:13:23.699><c> user</c><00:13:24.699><c> explicitly</c><00:13:25.240><c> cancel</c><00:13:26.019><c> this</c>

00:13:26.129 --> 00:13:26.139 align:start position:0%
anymore or user explicitly cancel this
 

00:13:26.139 --> 00:13:28.650 align:start position:0%
anymore or user explicitly cancel this
job<00:13:26.410><c> if</c><00:13:26.589><c> you</c><00:13:26.680><c> provided</c><00:13:26.980><c> this</c><00:13:27.370><c> UI</c><00:13:27.639><c> so</c><00:13:28.149><c> how</c><00:13:28.600><c> you</c>

00:13:28.650 --> 00:13:28.660 align:start position:0%
job if you provided this UI so how you
 

00:13:28.660 --> 00:13:30.389 align:start position:0%
job if you provided this UI so how you
would<00:13:28.839><c> support</c><00:13:29.050><c> cancellation</c><00:13:29.800><c> well</c><00:13:30.070><c> you</c><00:13:30.220><c> can</c>

00:13:30.389 --> 00:13:30.399 align:start position:0%
would support cancellation well you can
 

00:13:30.399 --> 00:13:32.310 align:start position:0%
would support cancellation well you can
try<00:13:30.579><c> to</c><00:13:30.639><c> do</c><00:13:30.820><c> something</c><00:13:31.149><c> like</c><00:13:31.209><c> that</c><00:13:31.449><c> you</c><00:13:31.959><c> try</c><00:13:32.290><c> to</c>

00:13:32.310 --> 00:13:32.320 align:start position:0%
try to do something like that you try to
 

00:13:32.320 --> 00:13:34.860 align:start position:0%
try to do something like that you try to
put<00:13:32.709><c> like</c><00:13:32.860><c> every</c><00:13:33.220><c> other</c><00:13:33.339><c> line</c><00:13:33.670><c> this</c><00:13:34.060><c> if</c><00:13:34.449><c> check</c>

00:13:34.860 --> 00:13:34.870 align:start position:0%
put like every other line this if check
 

00:13:34.870 --> 00:13:38.009 align:start position:0%
put like every other line this if check
and<00:13:35.139><c> it</c><00:13:35.410><c> starts</c><00:13:35.829><c> to</c><00:13:35.889><c> look</c><00:13:36.010><c> silly</c><00:13:36.399><c> and</c><00:13:37.019><c> even</c>

00:13:38.009 --> 00:13:38.019 align:start position:0%
and it starts to look silly and even
 

00:13:38.019 --> 00:13:39.569 align:start position:0%
and it starts to look silly and even
more<00:13:38.199><c> it</c><00:13:38.470><c> doesn't</c><00:13:38.709><c> actually</c><00:13:38.949><c> work</c><00:13:39.370><c> because</c>

00:13:39.569 --> 00:13:39.579 align:start position:0%
more it doesn't actually work because
 

00:13:39.579 --> 00:13:42.170 align:start position:0%
more it doesn't actually work because
this<00:13:40.060><c> call</c><00:13:40.360><c> which</c><00:13:40.930><c> is</c><00:13:41.110><c> probably</c><00:13:41.529><c> most</c>

00:13:42.170 --> 00:13:42.180 align:start position:0%
this call which is probably most
 

00:13:42.180 --> 00:13:44.280 align:start position:0%
this call which is probably most
expensive<00:13:43.180><c> call</c><00:13:43.420><c> because</c><00:13:43.750><c> it</c><00:13:43.870><c> goes</c><00:13:44.050><c> to</c><00:13:44.199><c> the</c>

00:13:44.280 --> 00:13:44.290 align:start position:0%
expensive call because it goes to the
 

00:13:44.290 --> 00:13:46.980 align:start position:0%
expensive call because it goes to the
network<00:13:44.680><c> and</c><00:13:44.889><c> do</c><00:13:45.339><c> some</c><00:13:45.550><c> work</c><00:13:45.760><c> there</c><00:13:45.990><c> it</c>

00:13:46.980 --> 00:13:46.990 align:start position:0%
network and do some work there it
 

00:13:46.990 --> 00:13:49.590 align:start position:0%
network and do some work there it
doesn't<00:13:47.170><c> have</c><00:13:47.440><c> any</c><00:13:47.680><c> consolation</c><00:13:48.600><c> signal</c>

00:13:49.590 --> 00:13:49.600 align:start position:0%
doesn't have any consolation signal
 

00:13:49.600 --> 00:13:51.900 align:start position:0%
doesn't have any consolation signal
propagation<00:13:50.050><c> because</c><00:13:50.440><c> well</c><00:13:51.310><c> if</c><00:13:51.579><c> it</c><00:13:51.730><c> was</c>

00:13:51.900 --> 00:13:51.910 align:start position:0%
propagation because well if it was
 

00:13:51.910 --> 00:13:54.360 align:start position:0%
propagation because well if it was
started<00:13:52.360><c> it</c><00:13:52.510><c> will</c><00:13:52.750><c> run</c><00:13:53.199><c> till</c><00:13:53.560><c> its</c><00:13:53.829><c> end</c><00:13:54.070><c> no</c>

00:13:54.360 --> 00:13:54.370 align:start position:0%
started it will run till its end no
 

00:13:54.370 --> 00:13:59.150 align:start position:0%
started it will run till its end no
matter<00:13:54.639><c> what</c><00:13:55.000><c> and</c><00:13:55.680><c> this</c><00:13:57.510><c> actually</c><00:13:58.510><c> will</c>

00:13:59.150 --> 00:13:59.160 align:start position:0%
matter what and this actually will
 

00:13:59.160 --> 00:14:02.280 align:start position:0%
matter what and this actually will
curtail<00:14:00.160><c> worker</c><00:14:00.579><c> will</c><00:14:00.790><c> help</c><00:14:01.060><c> us</c><00:14:01.269><c> with</c><00:14:01.540><c> that</c><00:14:01.720><c> we</c>

00:14:02.280 --> 00:14:02.290 align:start position:0%
curtail worker will help us with that we
 

00:14:02.290 --> 00:14:04.769 align:start position:0%
curtail worker will help us with that we
didn't<00:14:02.529><c> talk</c><00:14:02.829><c> about</c><00:14:02.889><c> that</c><00:14:03.279><c> yet</c><00:14:03.579><c> but</c><00:14:03.779><c> curtains</c>

00:14:04.769 --> 00:14:04.779 align:start position:0%
didn't talk about that yet but curtains
 

00:14:04.779 --> 00:14:07.980 align:start position:0%
didn't talk about that yet but curtains
don't<00:14:05.589><c> really</c><00:14:06.010><c> don't</c><00:14:06.550><c> only</c><00:14:06.819><c> ruff</c><00:14:07.449><c> callbacks</c>

00:14:07.980 --> 00:14:07.990 align:start position:0%
don't really don't only ruff callbacks
 

00:14:07.990 --> 00:14:10.970 align:start position:0%
don't really don't only ruff callbacks
nicely<00:14:08.470><c> it</c><00:14:08.680><c> also</c><00:14:08.949><c> provides</c><00:14:09.550><c> nice</c><00:14:09.790><c> consolation</c>

00:14:10.970 --> 00:14:10.980 align:start position:0%
nicely it also provides nice consolation
 

00:14:10.980 --> 00:14:14.430 align:start position:0%
nicely it also provides nice consolation
property<00:14:11.980><c> so</c><00:14:12.699><c> every</c><00:14:13.269><c> system</c><00:14:13.540><c> function</c><00:14:14.079><c> can</c><00:14:14.290><c> be</c>

00:14:14.430 --> 00:14:14.440 align:start position:0%
property so every system function can be
 

00:14:14.440 --> 00:14:16.530 align:start position:0%
property so every system function can be
cancelled<00:14:14.949><c> it</c><00:14:15.550><c> can</c><00:14:15.910><c> react</c><00:14:16.300><c> on</c><00:14:16.389><c> this</c>

00:14:16.530 --> 00:14:16.540 align:start position:0%
cancelled it can react on this
 

00:14:16.540 --> 00:14:18.420 align:start position:0%
cancelled it can react on this
cancellation<00:14:17.019><c> and</c><00:14:17.350><c> also</c><00:14:17.769><c> it</c><00:14:17.829><c> propagates</c><00:14:18.279><c> to</c>

00:14:18.420 --> 00:14:18.430 align:start position:0%
cancellation and also it propagates to
 

00:14:18.430 --> 00:14:21.870 align:start position:0%
cancellation and also it propagates to
all<00:14:18.639><c> inner</c><00:14:18.970><c> calls</c><00:14:19.420><c> this</c><00:14:20.350><c> cancellation</c><00:14:21.310><c> signal</c>

00:14:21.870 --> 00:14:21.880 align:start position:0%
all inner calls this cancellation signal
 

00:14:21.880 --> 00:14:26.430 align:start position:0%
all inner calls this cancellation signal
well<00:14:22.389><c> you</c><00:14:22.660><c> may</c><00:14:22.839><c> say</c><00:14:23.370><c> our</c><00:14:24.370><c> code</c><00:14:24.790><c> inside</c><00:14:25.440><c> those</c>

00:14:26.430 --> 00:14:26.440 align:start position:0%
well you may say our code inside those
 

00:14:26.440 --> 00:14:28.530 align:start position:0%
well you may say our code inside those
calls<00:14:26.949><c> are</c><00:14:27.160><c> still</c><00:14:27.519><c> blocking</c><00:14:27.790><c> we</c><00:14:28.360><c> don't</c>

00:14:28.530 --> 00:14:28.540 align:start position:0%
calls are still blocking we don't
 

00:14:28.540 --> 00:14:30.660 align:start position:0%
calls are still blocking we don't
benefit<00:14:28.930><c> from</c><00:14:28.990><c> that</c><00:14:29.199><c> anyhow</c><00:14:29.829><c> this</c><00:14:30.279><c> is</c><00:14:30.459><c> true</c>

00:14:30.660 --> 00:14:30.670 align:start position:0%
benefit from that anyhow this is true
 

00:14:30.670 --> 00:14:34.379 align:start position:0%
benefit from that anyhow this is true
however<00:14:31.000><c> if</c><00:14:31.810><c> you</c><00:14:32.350><c> use</c><00:14:32.380><c> room</c><00:14:33.310><c> as</c><00:14:33.519><c> your</c><00:14:33.760><c> database</c>

00:14:34.379 --> 00:14:34.389 align:start position:0%
however if you use room as your database
 

00:14:34.389 --> 00:14:37.350 align:start position:0%
however if you use room as your database
solution<00:14:35.110><c> you</c><00:14:35.949><c> can</c><00:14:36.130><c> mark</c><00:14:36.399><c> your</c><00:14:36.490><c> queries</c><00:14:37.120><c> and</c>

00:14:37.350 --> 00:14:37.360 align:start position:0%
solution you can mark your queries and
 

00:14:37.360 --> 00:14:40.920 align:start position:0%
solution you can mark your queries and
suspense<00:14:37.810><c> functions</c><00:14:38.380><c> and</c><00:14:38.709><c> then</c><00:14:39.750><c> room</c><00:14:40.750><c> will</c>

00:14:40.920 --> 00:14:40.930 align:start position:0%
suspense functions and then room will
 

00:14:40.930 --> 00:14:43.470 align:start position:0%
suspense functions and then room will
take<00:14:41.139><c> care</c><00:14:41.319><c> of</c><00:14:41.380><c> consolation</c><00:14:42.069><c> for</c><00:14:42.250><c> you</c><00:14:42.430><c> as</c><00:14:42.639><c> well</c>

00:14:43.470 --> 00:14:43.480 align:start position:0%
take care of consolation for you as well
 

00:14:43.480 --> 00:14:45.930 align:start position:0%
take care of consolation for you as well
as<00:14:43.690><c> fretting</c><00:14:44.170><c> as</c><00:14:44.319><c> Sean</c><00:14:45.010><c> mentioned</c><00:14:45.310><c> that</c><00:14:45.730><c> in</c>

00:14:45.930 --> 00:14:45.940 align:start position:0%
as fretting as Sean mentioned that in
 

00:14:45.940 --> 00:14:48.300 align:start position:0%
as fretting as Sean mentioned that in
multiple<00:14:46.120><c> times</c><00:14:46.600><c> this</c><00:14:47.440><c> thing</c><00:14:47.500><c> will</c><00:14:47.949><c> be</c><00:14:48.130><c> main</c>

00:14:48.300 --> 00:14:48.310 align:start position:0%
multiple times this thing will be main
 

00:14:48.310 --> 00:14:51.180 align:start position:0%
multiple times this thing will be main
safe<00:14:48.639><c> room</c><00:14:49.389><c> takes</c><00:14:49.660><c> care</c><00:14:50.290><c> of</c><00:14:50.319><c> reading</c><00:14:50.860><c> it</c><00:14:51.010><c> will</c>

00:14:51.180 --> 00:14:51.190 align:start position:0%
safe room takes care of reading it will
 

00:14:51.190 --> 00:14:54.889 align:start position:0%
safe room takes care of reading it will
run<00:14:51.370><c> the</c><00:14:51.399><c> query</c><00:14:51.819><c> on</c><00:14:52.269><c> a</c><00:14:52.600><c> background</c><00:14:52.930><c> thread</c>

00:14:54.889 --> 00:14:54.899 align:start position:0%
run the query on a background thread
 

00:14:54.899 --> 00:14:59.069 align:start position:0%
run the query on a background thread
then<00:14:55.899><c> well</c><00:14:56.260><c> nice</c><00:14:56.680><c> our</c><00:14:57.100><c> database</c><00:14:57.970><c> calls</c><00:14:58.779><c> are</c>

00:14:59.069 --> 00:14:59.079 align:start position:0%
then well nice our database calls are
 

00:14:59.079 --> 00:15:02.009 align:start position:0%
then well nice our database calls are
canceled<00:14:59.680><c> now</c><00:14:59.800><c> but</c><00:15:00.100><c> as</c><00:15:00.399><c> we</c><00:15:00.699><c> discussed</c><00:15:01.600><c> before</c>

00:15:02.009 --> 00:15:02.019 align:start position:0%
canceled now but as we discussed before
 

00:15:02.019 --> 00:15:05.040 align:start position:0%
canceled now but as we discussed before
the<00:15:02.500><c> main</c><00:15:02.680><c> call</c><00:15:02.949><c> is</c><00:15:03.130><c> this</c><00:15:03.310><c> one</c><00:15:03.579><c> and</c><00:15:04.050><c> actually</c>

00:15:05.040 --> 00:15:05.050 align:start position:0%
the main call is this one and actually
 

00:15:05.050 --> 00:15:07.860 align:start position:0%
the main call is this one and actually
if<00:15:05.260><c> you</c><00:15:05.440><c> use</c><00:15:05.589><c> retrofit</c><00:15:06.339><c> you</c><00:15:06.910><c> can</c><00:15:07.089><c> make</c><00:15:07.660><c> it</c>

00:15:07.860 --> 00:15:07.870 align:start position:0%
if you use retrofit you can make it
 

00:15:07.870 --> 00:15:10.230 align:start position:0%
if you use retrofit you can make it
suspend<00:15:08.319><c> as</c><00:15:08.470><c> well</c><00:15:08.649><c> because</c><00:15:08.980><c> retrofit</c><00:15:09.519><c> already</c>

00:15:10.230 --> 00:15:10.240 align:start position:0%
suspend as well because retrofit already
 

00:15:10.240 --> 00:15:11.040 align:start position:0%
suspend as well because retrofit already
for

00:15:11.040 --> 00:15:11.050 align:start position:0%
for
 

00:15:11.050 --> 00:15:15.600 align:start position:0%
for
suspend<00:15:12.240><c> modifier</c><00:15:13.240><c> for</c><00:15:13.600><c> its</c><00:15:14.310><c> Network</c><00:15:15.310><c> calls</c>

00:15:15.600 --> 00:15:15.610 align:start position:0%
suspend modifier for its Network calls
 

00:15:15.610 --> 00:15:18.570 align:start position:0%
suspend modifier for its Network calls
and<00:15:15.910><c> I</c><00:15:16.810><c> want</c><00:15:17.170><c> to</c><00:15:17.350><c> highlight</c><00:15:17.590><c> that</c><00:15:17.830><c> a</c><00:15:18.130><c> retrofit</c>

00:15:18.570 --> 00:15:18.580 align:start position:0%
and I want to highlight that a retrofit
 

00:15:18.580 --> 00:15:21.480 align:start position:0%
and I want to highlight that a retrofit
isn't<00:15:18.880><c> part</c><00:15:19.090><c> of</c><00:15:19.180><c> Android</c><00:15:19.420><c> X</c><00:15:19.720><c> it's</c><00:15:20.680><c> a</c><00:15:20.920><c> just</c><00:15:21.160><c> job</c>

00:15:21.480 --> 00:15:21.490 align:start position:0%
isn't part of Android X it's a just job
 

00:15:21.490 --> 00:15:23.370 align:start position:0%
isn't part of Android X it's a just job
that's<00:15:21.730><c> done</c><00:15:22.000><c> via</c><00:15:22.210><c> a</c><00:15:22.480><c> community</c><00:15:23.110><c> Android</c>

00:15:23.370 --> 00:15:23.380 align:start position:0%
that's done via a community Android
 

00:15:23.380 --> 00:15:25.620 align:start position:0%
that's done via a community Android
Android<00:15:24.220><c> a</c><00:15:24.370><c> cotton</c><00:15:24.730><c> community</c><00:15:25.150><c> embraces</c>

00:15:25.620 --> 00:15:25.630 align:start position:0%
Android a cotton community embraces
 

00:15:25.630 --> 00:15:27.930 align:start position:0%
Android a cotton community embraces
college<00:15:26.050><c> scenes</c><00:15:26.230><c> and</c><00:15:26.440><c> we</c><00:15:26.980><c> like</c><00:15:27.160><c> it</c><00:15:27.190><c> at</c><00:15:27.610><c> the</c><00:15:27.820><c> end</c>

00:15:27.930 --> 00:15:27.940 align:start position:0%
college scenes and we like it at the end
 

00:15:27.940 --> 00:15:32.850 align:start position:0%
college scenes and we like it at the end
of<00:15:28.030><c> a</c><00:15:28.060><c> day</c><00:15:28.180><c> it's</c><00:15:28.510><c> less</c><00:15:28.780><c> work</c><00:15:28.990><c> for</c><00:15:29.020><c> us</c><00:15:29.290><c> so</c><00:15:31.860><c> nice</c>

00:15:32.850 --> 00:15:32.860 align:start position:0%
of a day it's less work for us so nice
 

00:15:32.860 --> 00:15:36.510 align:start position:0%
of a day it's less work for us so nice
now<00:15:33.600><c> this</c><00:15:34.600><c> code</c><00:15:34.870><c> supports</c><00:15:35.530><c> constellation</c><00:15:36.220><c> and</c>

00:15:36.510 --> 00:15:36.520 align:start position:0%
now this code supports constellation and
 

00:15:36.520 --> 00:15:41.030 align:start position:0%
now this code supports constellation and
it<00:15:37.480><c> looks</c><00:15:37.780><c> as</c><00:15:38.100><c> as</c><00:15:39.100><c> easy</c><00:15:39.640><c> as</c><00:15:39.970><c> it</c><00:15:40.330><c> looked</c><00:15:40.540><c> before</c>

00:15:41.030 --> 00:15:41.040 align:start position:0%
it looks as as easy as it looked before
 

00:15:41.040 --> 00:15:44.160 align:start position:0%
it looks as as easy as it looked before
so<00:15:42.040><c> we</c><00:15:42.430><c> got</c><00:15:42.730><c> a</c><00:15:42.760><c> constellation</c><00:15:43.120><c> for</c><00:15:43.450><c> free</c><00:15:43.660><c> so</c>

00:15:44.160 --> 00:15:44.170 align:start position:0%
so we got a constellation for free so
 

00:15:44.170 --> 00:15:46.230 align:start position:0%
so we got a constellation for free so
this<00:15:44.380><c> was</c><00:15:44.560><c> a</c><00:15:44.590><c> quick</c><00:15:44.950><c> look</c><00:15:45.160><c> on</c><00:15:45.340><c> the</c><00:15:45.430><c> things</c><00:15:46.060><c> that</c>

00:15:46.230 --> 00:15:46.240 align:start position:0%
this was a quick look on the things that
 

00:15:46.240 --> 00:15:49.710 align:start position:0%
this was a quick look on the things that
were<00:15:46.450><c> available</c><00:15:46.660><c> today</c><00:15:47.380><c> and</c><00:15:47.890><c> it</c><00:15:48.760><c> will</c><00:15:49.300><c> present</c>

00:15:49.710 --> 00:15:49.720 align:start position:0%
were available today and it will present
 

00:15:49.720 --> 00:15:55.500 align:start position:0%
were available today and it will present
you<00:15:49.930><c> a</c><00:15:50.170><c> lot</c><00:15:50.980><c> of</c><00:15:51.160><c> new</c><00:15:51.340><c> price</c><00:15:51.700><c> that</c><00:15:52.300><c> we</c><00:15:52.510><c> just</c><00:15:52.780><c> made</c>

00:15:55.500 --> 00:15:55.510 align:start position:0%
 
 

00:15:55.510 --> 00:15:58.500 align:start position:0%
 
so<00:15:55.960><c> so</c><00:15:56.380><c> far</c><00:15:56.620><c> we</c><00:15:57.010><c> talked</c><00:15:57.310><c> about</c><00:15:57.490><c> what</c><00:15:58.180><c> you</c><00:15:58.330><c> could</c>

00:15:58.500 --> 00:15:58.510 align:start position:0%
so so far we talked about what you could
 

00:15:58.510 --> 00:16:00.300 align:start position:0%
so so far we talked about what you could
do<00:15:58.630><c> with</c><00:15:58.660><c> qualities</c><00:15:59.320><c> and</c><00:15:59.590><c> for</c><00:15:59.890><c> the</c><00:16:00.010><c> rest</c><00:16:00.160><c> part</c>

00:16:00.300 --> 00:16:00.310 align:start position:0%
do with qualities and for the rest part
 

00:16:00.310 --> 00:16:02.070 align:start position:0%
do with qualities and for the rest part
of<00:16:00.490><c> this</c><00:16:00.670><c> talk</c><00:16:00.970><c> we</c><00:16:01.270><c> are</c><00:16:01.330><c> going</c><00:16:01.420><c> to</c><00:16:01.690><c> talk</c><00:16:01.900><c> about</c>

00:16:02.070 --> 00:16:02.080 align:start position:0%
of this talk we are going to talk about
 

00:16:02.080 --> 00:16:05.610 align:start position:0%
of this talk we are going to talk about
new<00:16:02.590><c> stuff</c><00:16:03.150><c> so</c><00:16:04.150><c> first</c><00:16:04.540><c> one</c><00:16:04.780><c> is</c><00:16:04.810><c> live</c><00:16:05.200><c> data</c><00:16:05.470><c> and</c>

00:16:05.610 --> 00:16:05.620 align:start position:0%
new stuff so first one is live data and
 

00:16:05.620 --> 00:16:09.390 align:start position:0%
new stuff so first one is live data and
qualities<00:16:07.020><c> now</c><00:16:08.020><c> just</c><00:16:08.470><c> to</c><00:16:08.560><c> be</c><00:16:08.590><c> very</c><00:16:08.740><c> clear</c><00:16:08.890><c> live</c>

00:16:09.390 --> 00:16:09.400 align:start position:0%
qualities now just to be very clear live
 

00:16:09.400 --> 00:16:12.120 align:start position:0%
qualities now just to be very clear live
data<00:16:09.760><c> is</c><00:16:10.000><c> not</c><00:16:10.450><c> designed</c><00:16:11.170><c> for</c><00:16:11.260><c> concurrency</c>

00:16:12.120 --> 00:16:12.130 align:start position:0%
data is not designed for concurrency
 

00:16:12.130 --> 00:16:14.730 align:start position:0%
data is not designed for concurrency
it's<00:16:12.430><c> an</c><00:16:12.670><c> observable</c><00:16:13.540><c> value</c><00:16:13.900><c> holder</c><00:16:14.380><c> and</c><00:16:14.590><c> you</c>

00:16:14.730 --> 00:16:14.740 align:start position:0%
it's an observable value holder and you
 

00:16:14.740 --> 00:16:16.830 align:start position:0%
it's an observable value holder and you
are<00:16:14.830><c> expected</c><00:16:15.520><c> to</c><00:16:15.640><c> be</c><00:16:15.730><c> able</c><00:16:16.120><c> to</c><00:16:16.270><c> access</c><00:16:16.420><c> the</c>

00:16:16.830 --> 00:16:16.840 align:start position:0%
are expected to be able to access the
 

00:16:16.840 --> 00:16:18.570 align:start position:0%
are expected to be able to access the
value<00:16:17.170><c> from</c><00:16:17.350><c> the</c><00:16:17.560><c> main</c><00:16:17.800><c> thread</c><00:16:18.160><c> that's</c><00:16:18.400><c> like</c>

00:16:18.570 --> 00:16:18.580 align:start position:0%
value from the main thread that's like
 

00:16:18.580 --> 00:16:24.120 align:start position:0%
value from the main thread that's like
intentional<00:16:22.140><c> but</c><00:16:23.140><c> that</c><00:16:23.290><c> doesn't</c><00:16:23.680><c> mean</c><00:16:23.860><c> it</c>

00:16:24.120 --> 00:16:24.130 align:start position:0%
intentional but that doesn't mean it
 

00:16:24.130 --> 00:16:26.850 align:start position:0%
intentional but that doesn't mean it
should<00:16:24.400><c> not</c><00:16:24.640><c> be</c><00:16:24.910><c> interoperable</c><00:16:25.450><c> so</c><00:16:26.290><c> this</c><00:16:26.740><c> is</c>

00:16:26.850 --> 00:16:26.860 align:start position:0%
should not be interoperable so this is
 

00:16:26.860 --> 00:16:28.680 align:start position:0%
should not be interoperable so this is
what<00:16:27.040><c> we</c><00:16:27.190><c> are</c><00:16:27.280><c> going</c><00:16:27.490><c> to</c><00:16:27.670><c> provide</c><00:16:28.120><c> you</c><00:16:28.180><c> today</c>

00:16:28.680 --> 00:16:28.690 align:start position:0%
what we are going to provide you today
 

00:16:28.690 --> 00:16:30.600 align:start position:0%
what we are going to provide you today
there<00:16:28.960><c> will</c><00:16:29.080><c> be</c><00:16:29.140><c> easy</c><00:16:29.470><c> way</c><00:16:29.710><c> to</c><00:16:29.800><c> use</c><00:16:30.070><c> live</c><00:16:30.340><c> data</c>

00:16:30.600 --> 00:16:30.610 align:start position:0%
there will be easy way to use live data
 

00:16:30.610 --> 00:16:34.020 align:start position:0%
there will be easy way to use live data
with<00:16:31.060><c> Cortese</c><00:16:31.980><c> so</c><00:16:32.980><c> the</c><00:16:33.100><c> most</c><00:16:33.250><c> common</c><00:16:33.370><c> use</c><00:16:33.730><c> case</c>

00:16:34.020 --> 00:16:34.030 align:start position:0%
with Cortese so the most common use case
 

00:16:34.030 --> 00:16:36.240 align:start position:0%
with Cortese so the most common use case
is<00:16:34.390><c> you</c><00:16:34.840><c> have</c><00:16:35.050><c> some</c><00:16:35.290><c> value</c><00:16:35.710><c> you</c><00:16:35.890><c> want</c><00:16:36.130><c> to</c>

00:16:36.240 --> 00:16:36.250 align:start position:0%
is you have some value you want to
 

00:16:36.250 --> 00:16:38.310 align:start position:0%
is you have some value you want to
compute<00:16:36.580><c> in</c><00:16:36.820><c> a</c><00:16:36.910><c> quarantine</c><00:16:37.270><c> but</c><00:16:37.660><c> smart</c><00:16:38.170><c> to</c>

00:16:38.310 --> 00:16:38.320 align:start position:0%
compute in a quarantine but smart to
 

00:16:38.320 --> 00:16:41.670 align:start position:0%
compute in a quarantine but smart to
serve<00:16:38.560><c> the</c><00:16:38.770><c> result</c><00:16:39.100><c> is</c><00:16:39.280><c> a</c><00:16:39.370><c> live</c><00:16:39.850><c> data</c><00:16:40.620><c> so</c><00:16:41.620><c> to</c>

00:16:41.670 --> 00:16:41.680 align:start position:0%
serve the result is a live data so to
 

00:16:41.680 --> 00:16:44.190 align:start position:0%
serve the result is a live data so to
turn<00:16:42.010><c> starting</c><00:16:42.640><c> today</c><00:16:42.970><c> with</c><00:16:43.420><c> the</c><00:16:43.600><c> lifecycles</c>

00:16:44.190 --> 00:16:44.200 align:start position:0%
turn starting today with the lifecycles
 

00:16:44.200 --> 00:16:47.370 align:start position:0%
turn starting today with the lifecycles
2.2<00:16:44.860><c> of</c><00:16:45.190><c> a</c><00:16:45.460><c> one</c><00:16:45.640><c> artifact</c><00:16:46.090><c> you</c><00:16:46.630><c> get</c><00:16:46.810><c> this</c><00:16:47.050><c> new</c>

00:16:47.370 --> 00:16:47.380 align:start position:0%
2.2 of a one artifact you get this new
 

00:16:47.380 --> 00:16:51.150 align:start position:0%
2.2 of a one artifact you get this new
one<00:16:47.890><c> new</c><00:16:48.280><c> API</c><00:16:48.760><c> called</c><00:16:49.060><c> live</c><00:16:49.540><c> data</c><00:16:49.950><c> so</c><00:16:50.950><c> it's</c><00:16:51.070><c> a</c>

00:16:51.150 --> 00:16:51.160 align:start position:0%
one new API called live data so it's a
 

00:16:51.160 --> 00:16:53.010 align:start position:0%
one new API called live data so it's a
builder<00:16:51.580><c> function</c><00:16:52.030><c> very</c><00:16:52.330><c> similar</c><00:16:52.720><c> to</c><00:16:52.900><c> the</c>

00:16:53.010 --> 00:16:53.020 align:start position:0%
builder function very similar to the
 

00:16:53.020 --> 00:16:55.980 align:start position:0%
builder function very similar to the
sickness<00:16:53.290><c> wielders</c><00:16:53.860><c> in</c><00:16:54.100><c> Cortland</c><00:16:54.990><c> inside</c>

00:16:55.980 --> 00:16:55.990 align:start position:0%
sickness wielders in Cortland inside
 

00:16:55.990 --> 00:16:59.640 align:start position:0%
sickness wielders in Cortland inside
that<00:16:56.230><c> you</c><00:16:56.500><c> pass</c><00:16:56.740><c> a</c><00:16:57.390><c> quality</c><00:16:58.390><c> block</c><00:16:58.660><c> and</c><00:16:59.290><c> he</c>

00:16:59.640 --> 00:16:59.650 align:start position:0%
that you pass a quality block and he
 

00:16:59.650 --> 00:17:01.050 align:start position:0%
that you pass a quality block and he
said<00:16:59.860><c> you</c><00:16:59.950><c> could</c><00:17:00.100><c> do</c><00:17:00.220><c> whatever</c><00:17:00.400><c> you</c><00:17:00.670><c> want</c><00:17:00.880><c> and</c>

00:17:01.050 --> 00:17:01.060 align:start position:0%
said you could do whatever you want and
 

00:17:01.060 --> 00:17:03.600 align:start position:0%
said you could do whatever you want and
call<00:17:01.390><c> this</c><00:17:01.570><c> amid</c><00:17:01.810><c> function</c><00:17:02.590><c> to</c><00:17:03.160><c> dispatch</c>

00:17:03.600 --> 00:17:03.610 align:start position:0%
call this amid function to dispatch
 

00:17:03.610 --> 00:17:06.720 align:start position:0%
call this amid function to dispatch
values<00:17:04.240><c> so</c><00:17:05.170><c> if</c><00:17:05.500><c> you</c><00:17:05.680><c> look</c><00:17:05.920><c> at</c><00:17:06.070><c> this</c><00:17:06.220><c> data</c><00:17:06.459><c> with</c>

00:17:06.720 --> 00:17:06.730 align:start position:0%
values so if you look at this data with
 

00:17:06.730 --> 00:17:10.580 align:start position:0%
values so if you look at this data with
load<00:17:06.970><c> function</c><00:17:07.209><c> it</c><00:17:07.660><c> is</c><00:17:07.690><c> HLS</c><00:17:08.380><c> husband</c><00:17:08.950><c> function</c>

00:17:10.580 --> 00:17:10.590 align:start position:0%
load function it is HLS husband function
 

00:17:10.590 --> 00:17:12.470 align:start position:0%
load function it is HLS husband function
and<00:17:11.070><c> because</c><00:17:11.520><c> you</c><00:17:11.640><c> are</c><00:17:11.670><c> calling</c><00:17:12.090><c> the</c><00:17:12.210><c> image</c>

00:17:12.470 --> 00:17:12.480 align:start position:0%
and because you are calling the image
 

00:17:12.480 --> 00:17:15.200 align:start position:0%
and because you are calling the image
with<00:17:12.990><c> a</c><00:17:13.020><c> user</c><00:17:13.380><c> in</c><00:17:13.620><c> this</c><00:17:13.740><c> case</c><00:17:13.800><c> we</c><00:17:14.550><c> can</c><00:17:14.700><c> infer</c>

00:17:15.200 --> 00:17:15.210 align:start position:0%
with a user in this case we can infer
 

00:17:15.210 --> 00:17:17.120 align:start position:0%
with a user in this case we can infer
that<00:17:15.240><c> type</c><00:17:15.720><c> for</c><00:17:15.990><c> you</c><00:17:16.140><c> so</c><00:17:16.440><c> you</c><00:17:16.500><c> don't</c><00:17:16.830><c> even</c><00:17:16.950><c> need</c>

00:17:17.120 --> 00:17:17.130 align:start position:0%
that type for you so you don't even need
 

00:17:17.130 --> 00:17:19.640 align:start position:0%
that type for you so you don't even need
to<00:17:17.190><c> specify</c><00:17:17.820><c> this</c><00:17:18.020><c> so</c><00:17:19.020><c> this</c><00:17:19.170><c> very</c><00:17:19.560><c> simple</c>

00:17:19.640 --> 00:17:19.650 align:start position:0%
to specify this so this very simple
 

00:17:19.650 --> 00:17:22.010 align:start position:0%
to specify this so this very simple
light<00:17:20.370><c> that</c><00:17:20.580><c> the</c><00:17:20.700><c> API</c><00:17:21.090><c> bridges</c><00:17:21.840><c> the</c><00:17:21.990><c> gap</c>

00:17:22.010 --> 00:17:22.020 align:start position:0%
light that the API bridges the gap
 

00:17:22.020 --> 00:17:25.040 align:start position:0%
light that the API bridges the gap
between<00:17:22.260><c> your</c><00:17:23.130><c> live</c><00:17:23.400><c> data</c><00:17:23.700><c> elements</c><00:17:24.240><c> and</c><00:17:24.420><c> your</c>

00:17:25.040 --> 00:17:25.050 align:start position:0%
between your live data elements and your
 

00:17:25.050 --> 00:17:28.220 align:start position:0%
between your live data elements and your
qualities<00:17:26.150><c> so</c><00:17:27.150><c> you</c><00:17:27.210><c> get</c><00:17:27.450><c> that</c><00:17:27.630><c> ap</c><00:17:27.930><c> a</c><00:17:27.960><c> little</c>

00:17:28.220 --> 00:17:28.230 align:start position:0%
qualities so you get that ap a little
 

00:17:28.230 --> 00:17:30.620 align:start position:0%
qualities so you get that ap a little
bit<00:17:28.350><c> more</c><00:17:28.530><c> in</c><00:17:28.680><c> detail</c><00:17:29.000><c> so</c><00:17:30.000><c> it</c><00:17:30.090><c> receives</c><00:17:30.360><c> three</c>

00:17:30.620 --> 00:17:30.630 align:start position:0%
bit more in detail so it receives three
 

00:17:30.630 --> 00:17:32.450 align:start position:0%
bit more in detail so it receives three
parameters<00:17:31.200><c> and</c><00:17:31.410><c> the</c><00:17:31.710><c> first</c><00:17:31.950><c> one</c><00:17:32.190><c> is</c><00:17:32.400><c> a</c>

00:17:32.450 --> 00:17:32.460 align:start position:0%
parameters and the first one is a
 

00:17:32.460 --> 00:17:36.620 align:start position:0%
parameters and the first one is a
contact<00:17:33.060><c> so</c><00:17:33.300><c> why</c><00:17:33.750><c> do</c><00:17:33.810><c> we</c><00:17:34.050><c> need</c><00:17:34.380><c> a</c><00:17:34.440><c> context</c><00:17:35.630><c> well</c>

00:17:36.620 --> 00:17:36.630 align:start position:0%
contact so why do we need a context well
 

00:17:36.630 --> 00:17:39.590 align:start position:0%
contact so why do we need a context well
if<00:17:37.350><c> this</c><00:17:37.620><c> data</c><00:17:37.920><c> is</c><00:17:38.100><c> loaded</c><00:17:38.460><c> user</c><00:17:38.790><c> function</c><00:17:39.390><c> is</c>

00:17:39.590 --> 00:17:39.600 align:start position:0%
if this data is loaded user function is
 

00:17:39.600 --> 00:17:41.990 align:start position:0%
if this data is loaded user function is
not<00:17:40.200><c> less</c><00:17:40.650><c> than</c><00:17:40.680><c> the</c><00:17:41.010><c> sass</c><00:17:41.430><c> file</c><00:17:41.610><c> function</c>

00:17:41.990 --> 00:17:42.000 align:start position:0%
not less than the sass file function
 

00:17:42.000 --> 00:17:43.550 align:start position:0%
not less than the sass file function
which<00:17:42.120><c> is</c><00:17:42.210><c> a</c><00:17:42.270><c> regular</c><00:17:42.600><c> function</c><00:17:42.870><c> and</c><00:17:43.290><c> you</c>

00:17:43.550 --> 00:17:43.560 align:start position:0%
which is a regular function and you
 

00:17:43.560 --> 00:17:46.160 align:start position:0%
which is a regular function and you
write<00:17:43.860><c> this</c><00:17:44.070><c> code</c><00:17:44.370><c> you</c><00:17:45.360><c> are</c><00:17:45.390><c> going</c><00:17:45.750><c> to</c><00:17:45.900><c> receive</c>

00:17:46.160 --> 00:17:46.170 align:start position:0%
write this code you are going to receive
 

00:17:46.170 --> 00:17:48.740 align:start position:0%
write this code you are going to receive
an<00:17:46.320><c> eye</c><00:17:46.500><c> on</c><00:17:46.770><c> main</c><00:17:47.160><c> thread</c><00:17:47.490><c> exception</c><00:17:48.090><c> because</c>

00:17:48.740 --> 00:17:48.750 align:start position:0%
an eye on main thread exception because
 

00:17:48.750 --> 00:17:51.710 align:start position:0%
an eye on main thread exception because
this<00:17:49.350><c> vlog</c><00:17:49.710><c> by</c><00:17:49.980><c> default</c><00:17:50.460><c> resume</c><00:17:51.090><c> dispatchers</c>

00:17:51.710 --> 00:17:51.720 align:start position:0%
this vlog by default resume dispatchers
 

00:17:51.720 --> 00:17:54.350 align:start position:0%
this vlog by default resume dispatchers
main<00:17:51.990><c> but</c><00:17:52.830><c> you</c><00:17:52.920><c> can</c><00:17:53.070><c> change</c><00:17:53.280><c> that</c><00:17:53.550><c> we</c><00:17:53.910><c> can</c><00:17:53.940><c> tell</c>

00:17:54.350 --> 00:17:54.360 align:start position:0%
main but you can change that we can tell
 

00:17:54.360 --> 00:17:57.320 align:start position:0%
main but you can change that we can tell
it<00:17:54.540><c> give</c><00:17:55.470><c> it</c><00:17:55.530><c> a</c><00:17:55.650><c> context</c><00:17:56.160><c> as</c><00:17:56.370><c> dispatchers</c><00:17:57.150><c> IO</c>

00:17:57.320 --> 00:17:57.330 align:start position:0%
it give it a context as dispatchers IO
 

00:17:57.330 --> 00:18:00.560 align:start position:0%
it give it a context as dispatchers IO
and<00:17:57.720><c> now</c><00:17:58.380><c> this</c><00:17:58.980><c> code</c><00:17:59.250><c> will</c><00:17:59.550><c> work</c><00:17:59.730><c> perfectly</c><00:18:00.270><c> I</c>

00:18:00.560 --> 00:18:00.570 align:start position:0%
and now this code will work perfectly I
 

00:18:00.570 --> 00:18:03.140 align:start position:0%
and now this code will work perfectly I
want<00:18:01.260><c> you</c><00:18:01.380><c> to</c><00:18:01.500><c> notice</c><00:18:01.710><c> that</c><00:18:02.070><c> I</c><00:18:02.340><c> didn't</c><00:18:02.850><c> change</c>

00:18:03.140 --> 00:18:03.150 align:start position:0%
want you to notice that I didn't change
 

00:18:03.150 --> 00:18:05.480 align:start position:0%
want you to notice that I didn't change
any<00:18:03.630><c> contents</c><00:18:04.200><c> of</c><00:18:04.320><c> the</c><00:18:04.470><c> code</c><00:18:04.680><c> because</c><00:18:05.130><c> you</c><00:18:05.310><c> can</c>

00:18:05.480 --> 00:18:05.490 align:start position:0%
any contents of the code because you can
 

00:18:05.490 --> 00:18:07.850 align:start position:0%
any contents of the code because you can
omit<00:18:05.730><c> from</c><00:18:06.000><c> whatever</c><00:18:06.600><c> dispatcher</c><00:18:07.230><c> you</c><00:18:07.560><c> want</c>

00:18:07.850 --> 00:18:07.860 align:start position:0%
omit from whatever dispatcher you want
 

00:18:07.860 --> 00:18:09.800 align:start position:0%
omit from whatever dispatcher you want
you<00:18:08.400><c> don't</c><00:18:08.640><c> need</c><00:18:08.820><c> to</c><00:18:09.030><c> be</c><00:18:09.150><c> on</c><00:18:09.360><c> the</c><00:18:09.600><c> main</c>

00:18:09.800 --> 00:18:09.810 align:start position:0%
you don't need to be on the main
 

00:18:09.810 --> 00:18:14.660 align:start position:0%
you don't need to be on the main
dispatcher<00:18:10.380><c> to</c><00:18:10.680><c> change</c><00:18:10.950><c> the</c><00:18:11.250><c> values</c><00:18:13.250><c> now</c><00:18:14.250><c> the</c>

00:18:14.660 --> 00:18:14.670 align:start position:0%
dispatcher to change the values now the
 

00:18:14.670 --> 00:18:16.580 align:start position:0%
dispatcher to change the values now the
second<00:18:15.030><c> one</c><00:18:15.210><c> is</c><00:18:15.300><c> a</c><00:18:15.330><c> really</c><00:18:15.630><c> awkward</c><00:18:15.960><c> parameter</c>

00:18:16.580 --> 00:18:16.590 align:start position:0%
second one is a really awkward parameter
 

00:18:16.590 --> 00:18:20.360 align:start position:0%
second one is a really awkward parameter
called<00:18:16.920><c> timeout</c><00:18:17.780><c> and</c><00:18:18.780><c> to</c><00:18:19.320><c> understand</c><00:18:19.920><c> why</c><00:18:20.160><c> we</c>

00:18:20.360 --> 00:18:20.370 align:start position:0%
called timeout and to understand why we
 

00:18:20.370 --> 00:18:22.940 align:start position:0%
called timeout and to understand why we
needed<00:18:20.730><c> a</c><00:18:20.970><c> timeout</c><00:18:21.420><c> parameter</c><00:18:22.020><c> let's</c><00:18:22.650><c> look</c><00:18:22.860><c> at</c>

00:18:22.940 --> 00:18:22.950 align:start position:0%
needed a timeout parameter let's look at
 

00:18:22.950 --> 00:18:25.520 align:start position:0%
needed a timeout parameter let's look at
the<00:18:23.100><c> a</c><00:18:23.130><c> famous</c><00:18:23.790><c> rotation</c><00:18:24.360><c> problem</c><00:18:24.810><c> on</c><00:18:25.020><c> Android</c>

00:18:25.520 --> 00:18:25.530 align:start position:0%
the a famous rotation problem on Android
 

00:18:25.530 --> 00:18:29.060 align:start position:0%
the a famous rotation problem on Android
so<00:18:26.420><c> on</c><00:18:27.420><c> the</c><00:18:27.540><c> Left</c><00:18:27.780><c> I</c><00:18:27.990><c> have</c><00:18:28.020><c> a</c><00:18:28.200><c> view</c><00:18:28.470><c> model</c><00:18:28.680><c> that</c>

00:18:29.060 --> 00:18:29.070 align:start position:0%
so on the Left I have a view model that
 

00:18:29.070 --> 00:18:30.710 align:start position:0%
so on the Left I have a view model that
serves<00:18:29.340><c> a</c><00:18:29.460><c> live</c><00:18:29.670><c> data</c><00:18:29.940><c> and</c><00:18:30.120><c> on</c><00:18:30.450><c> the</c><00:18:30.570><c> right</c><00:18:30.690><c> I</c>

00:18:30.710 --> 00:18:30.720 align:start position:0%
serves a live data and on the right I
 

00:18:30.720 --> 00:18:33.650 align:start position:0%
serves a live data and on the right I
have<00:18:30.960><c> an</c><00:18:31.230><c> activity</c><00:18:31.800><c> that's</c><00:18:32.070><c> observing</c><00:18:32.850><c> it</c><00:18:33.060><c> so</c>

00:18:33.650 --> 00:18:33.660 align:start position:0%
have an activity that's observing it so
 

00:18:33.660 --> 00:18:35.750 align:start position:0%
have an activity that's observing it so
when<00:18:33.870><c> my</c><00:18:34.050><c> activity</c><00:18:34.530><c> goes</c><00:18:34.740><c> to</c><00:18:34.920><c> started</c><00:18:35.490><c> state</c>

00:18:35.750 --> 00:18:35.760 align:start position:0%
when my activity goes to started state
 

00:18:35.760 --> 00:18:38.420 align:start position:0%
when my activity goes to started state
the<00:18:36.540><c> live</c><00:18:36.750><c> data</c><00:18:36.930><c> will</c><00:18:37.260><c> become</c><00:18:37.380><c> active</c><00:18:38.100><c> which</c>

00:18:38.420 --> 00:18:38.430 align:start position:0%
the live data will become active which
 

00:18:38.430 --> 00:18:40.670 align:start position:0%
the live data will become active which
means<00:18:38.670><c> ok</c><00:18:39.000><c> you're</c><00:18:39.210><c> an</c><00:18:39.360><c> observer</c><00:18:39.660><c> visible</c><00:18:40.530><c> to</c>

00:18:40.670 --> 00:18:40.680 align:start position:0%
means ok you're an observer visible to
 

00:18:40.680 --> 00:18:42.800 align:start position:0%
means ok you're an observer visible to
the<00:18:40.800><c> user</c><00:18:40.980><c> you</c><00:18:41.370><c> are</c><00:18:41.820><c> better</c><00:18:42.060><c> off</c><00:18:42.180><c> creating</c>

00:18:42.800 --> 00:18:42.810 align:start position:0%
the user you are better off creating
 

00:18:42.810 --> 00:18:45.890 align:start position:0%
the user you are better off creating
some<00:18:43.020><c> values</c><00:18:43.520><c> but</c><00:18:44.520><c> during</c><00:18:44.910><c> that</c><00:18:44.940><c> time</c><00:18:45.120><c> what</c><00:18:45.720><c> if</c>

00:18:45.890 --> 00:18:45.900 align:start position:0%
some values but during that time what if
 

00:18:45.900 --> 00:18:49.610 align:start position:0%
some values but during that time what if
our<00:18:46.320><c> activity</c><00:18:47.130><c> rotates</c><00:18:47.490><c> and</c><00:18:48.270><c> so</c><00:18:48.600><c> it's</c><00:18:49.380><c> going</c>

00:18:49.610 --> 00:18:49.620 align:start position:0%
our activity rotates and so it's going
 

00:18:49.620 --> 00:18:50.390 align:start position:0%
our activity rotates and so it's going
to<00:18:49.710><c> be</c><00:18:49.860><c> stopped</c>

00:18:50.390 --> 00:18:50.400 align:start position:0%
to be stopped
 

00:18:50.400 --> 00:18:53.390 align:start position:0%
to be stopped
my<00:18:51.330><c> data</c><00:18:51.600><c> will</c><00:18:51.900><c> become</c><00:18:52.020><c> inactive</c><00:18:52.770><c> be</c>

00:18:53.390 --> 00:18:53.400 align:start position:0%
my data will become inactive be
 

00:18:53.400 --> 00:18:55.730 align:start position:0%
my data will become inactive be
destroyed<00:18:53.910><c> and</c><00:18:54.180><c> a</c><00:18:54.360><c> new</c><00:18:54.390><c> activity</c><00:18:55.110><c> will</c><00:18:55.470><c> come</c>

00:18:55.730 --> 00:18:55.740 align:start position:0%
destroyed and a new activity will come
 

00:18:55.740 --> 00:18:58.100 align:start position:0%
destroyed and a new activity will come
so<00:18:56.460><c> right</c><00:18:56.670><c> now</c><00:18:56.850><c> there</c><00:18:57.150><c> is</c><00:18:57.240><c> no</c><00:18:57.420><c> one</c><00:18:57.570><c> observing</c>

00:18:58.100 --> 00:18:58.110 align:start position:0%
so right now there is no one observing
 

00:18:58.110 --> 00:18:59.540 align:start position:0%
so right now there is no one observing
live<00:18:58.290><c> data</c><00:18:58.560><c> so</c><00:18:58.770><c> there's</c><00:18:58.980><c> no</c><00:18:59.190><c> reason</c><00:18:59.520><c> to</c>

00:18:59.540 --> 00:18:59.550 align:start position:0%
live data so there's no reason to
 

00:18:59.550 --> 00:19:02.900 align:start position:0%
live data so there's no reason to
produce<00:18:59.880><c> results</c><00:19:00.560><c> except</c><00:19:01.560><c> after</c><00:19:02.160><c> the</c><00:19:02.520><c> new</c><00:19:02.670><c> one</c>

00:19:02.900 --> 00:19:02.910 align:start position:0%
produce results except after the new one
 

00:19:02.910 --> 00:19:05.390 align:start position:0%
produce results except after the new one
goes<00:19:03.150><c> started</c><00:19:03.690><c> again</c><00:19:03.960><c> it</c><00:19:04.530><c> becomes</c><00:19:05.130><c> active</c>

00:19:05.390 --> 00:19:05.400 align:start position:0%
goes started again it becomes active
 

00:19:05.400 --> 00:19:07.370 align:start position:0%
goes started again it becomes active
again<00:19:05.940><c> so</c><00:19:06.240><c> the</c><00:19:06.360><c> problem</c><00:19:06.840><c> we</c><00:19:06.960><c> are</c><00:19:06.990><c> trying</c><00:19:07.200><c> to</c>

00:19:07.370 --> 00:19:07.380 align:start position:0%
again so the problem we are trying to
 

00:19:07.380 --> 00:19:10.220 align:start position:0%
again so the problem we are trying to
solve<00:19:07.710><c> here</c><00:19:08.100><c> is</c><00:19:08.250><c> this</c><00:19:08.670><c> gap</c><00:19:09.000><c> where</c><00:19:09.660><c> live</c><00:19:09.930><c> data</c>

00:19:10.220 --> 00:19:10.230 align:start position:0%
solve here is this gap where live data
 

00:19:10.230 --> 00:19:13.400 align:start position:0%
solve here is this gap where live data
quickly<00:19:10.650><c> becomes</c><00:19:11.220><c> inactive</c><00:19:11.640><c> and</c><00:19:12.090><c> active</c><00:19:12.260><c> in</c><00:19:13.260><c> a</c>

00:19:13.400 --> 00:19:13.410 align:start position:0%
quickly becomes inactive and active in a
 

00:19:13.410 --> 00:19:15.470 align:start position:0%
quickly becomes inactive and active in a
very<00:19:13.710><c> quick</c><00:19:13.950><c> succession</c><00:19:14.430><c> like</c><00:19:14.820><c> usual</c><00:19:15.270><c> less</c>

00:19:15.470 --> 00:19:15.480 align:start position:0%
very quick succession like usual less
 

00:19:15.480 --> 00:19:17.400 align:start position:0%
very quick succession like usual less
than<00:19:15.720><c> one</c><00:19:15.900><c> second</c>

00:19:17.400 --> 00:19:17.410 align:start position:0%
than one second
 

00:19:17.410 --> 00:19:21.250 align:start position:0%
than one second
so<00:19:18.410><c> how</c><00:19:19.130><c> do</c><00:19:19.190><c> we</c><00:19:19.340><c> fix</c><00:19:19.580><c> that</c><00:19:19.780><c> let's</c><00:19:20.780><c> look</c><00:19:20.990><c> at</c><00:19:21.110><c> the</c>

00:19:21.250 --> 00:19:21.260 align:start position:0%
so how do we fix that let's look at the
 

00:19:21.260 --> 00:19:25.750 align:start position:0%
so how do we fix that let's look at the
detail<00:19:21.680><c> how</c><00:19:22.010><c> we</c><00:19:22.460><c> run</c><00:19:23.000><c> that</c><00:19:23.300><c> code</c><00:19:23.750><c> block</c><00:19:24.050><c> and</c><00:19:24.760><c> to</c>

00:19:25.750 --> 00:19:25.760 align:start position:0%
detail how we run that code block and to
 

00:19:25.760 --> 00:19:26.770 align:start position:0%
detail how we run that code block and to
understand<00:19:26.270><c> it</c><00:19:26.420><c> better</c>

00:19:26.770 --> 00:19:26.780 align:start position:0%
understand it better
 

00:19:26.780 --> 00:19:28.690 align:start position:0%
understand it better
we're<00:19:27.050><c> just</c><00:19:27.230><c> going</c><00:19:27.440><c> to</c><00:19:27.530><c> write</c><00:19:27.740><c> a</c><00:19:27.800><c> timer</c>

00:19:28.690 --> 00:19:28.700 align:start position:0%
we're just going to write a timer
 

00:19:28.700 --> 00:19:30.910 align:start position:0%
we're just going to write a timer
function<00:19:29.480><c> it's</c><00:19:29.750><c> basically</c><00:19:30.140><c> creates</c><00:19:30.530><c> a</c><00:19:30.620><c> timer</c>

00:19:30.910 --> 00:19:30.920 align:start position:0%
function it's basically creates a timer
 

00:19:30.920 --> 00:19:32.710 align:start position:0%
function it's basically creates a timer
for<00:19:31.130><c> live</c><00:19:31.460><c> data</c>

00:19:32.710 --> 00:19:32.720 align:start position:0%
for live data
 

00:19:32.720 --> 00:19:36.160 align:start position:0%
for live data
it<00:19:33.020><c> gets</c><00:19:33.350><c> the</c><00:19:33.470><c> current</c><00:19:33.830><c> time</c><00:19:34.840><c> returns</c><00:19:35.840><c> a</c><00:19:35.960><c> live</c>

00:19:36.160 --> 00:19:36.170 align:start position:0%
it gets the current time returns a live
 

00:19:36.170 --> 00:19:39.910 align:start position:0%
it gets the current time returns a live
data<00:19:36.440><c> builder</c><00:19:37.040><c> and</c><00:19:37.430><c> in</c><00:19:38.390><c> an</c><00:19:38.540><c> infinite</c><00:19:39.200><c> loop</c><00:19:39.230><c> it</c>

00:19:39.910 --> 00:19:39.920 align:start position:0%
data builder and in an infinite loop it
 

00:19:39.920 --> 00:19:42.970 align:start position:0%
data builder and in an infinite loop it
just<00:19:40.190><c> missed</c><00:19:40.910><c> the</c><00:19:41.060><c> time</c><00:19:41.270><c> the</c><00:19:42.080><c> last</c><00:19:42.230><c> one</c><00:19:42.470><c> second</c>

00:19:42.970 --> 00:19:42.980 align:start position:0%
just missed the time the last one second
 

00:19:42.980 --> 00:19:44.770 align:start position:0%
just missed the time the last one second
a<00:19:43.010><c> miss</c><00:19:43.250><c> the</c><00:19:43.430><c> time</c><00:19:43.610><c> delays</c><00:19:44.000><c> one</c><00:19:44.210><c> second</c><00:19:44.570><c> and</c>

00:19:44.770 --> 00:19:44.780 align:start position:0%
a miss the time delays one second and
 

00:19:44.780 --> 00:19:47.800 align:start position:0%
a miss the time delays one second and
never<00:19:45.110><c> ends</c><00:19:45.530><c> and</c><00:19:45.740><c> this</c><00:19:46.520><c> code</c><00:19:46.790><c> I'm</c><00:19:47.030><c> showing</c><00:19:47.630><c> is</c>

00:19:47.800 --> 00:19:47.810 align:start position:0%
never ends and this code I'm showing is
 

00:19:47.810 --> 00:19:51.790 align:start position:0%
never ends and this code I'm showing is
hundred<00:19:48.440><c> percent</c><00:19:48.470><c> okay</c><00:19:49.280><c> to</c><00:19:49.340><c> write</c><00:19:50.590><c> how</c><00:19:51.590><c> does</c>

00:19:51.790 --> 00:19:51.800 align:start position:0%
hundred percent okay to write how does
 

00:19:51.800 --> 00:19:55.450 align:start position:0%
hundred percent okay to write how does
it<00:19:51.950><c> actually</c><00:19:52.100><c> work</c><00:19:53.830><c> when</c><00:19:54.830><c> the</c><00:19:55.040><c> live</c><00:19:55.280><c> data</c>

00:19:55.450 --> 00:19:55.460 align:start position:0%
it actually work when the live data
 

00:19:55.460 --> 00:19:58.480 align:start position:0%
it actually work when the live data
returned<00:19:56.030><c> by</c><00:19:56.120><c> this</c><00:19:56.390><c> blog</c><00:19:56.690><c> becomes</c><00:19:57.320><c> active</c><00:19:57.920><c> we</c>

00:19:58.480 --> 00:19:58.490 align:start position:0%
returned by this blog becomes active we
 

00:19:58.490 --> 00:20:01.390 align:start position:0%
returned by this blog becomes active we
check<00:19:58.730><c> okay</c><00:19:59.090><c> did</c><00:19:59.420><c> we</c><00:19:59.450><c> run</c><00:19:59.750><c> this</c><00:19:59.900><c> block</c><00:20:00.170><c> and</c><00:20:00.530><c> if</c>

00:20:01.390 --> 00:20:01.400 align:start position:0%
check okay did we run this block and if
 

00:20:01.400 --> 00:20:04.300 align:start position:0%
check okay did we run this block and if
we<00:20:01.580><c> didn't</c><00:20:01.970><c> run</c><00:20:02.180><c> that</c><00:20:02.210><c> block</c><00:20:02.890><c> now</c><00:20:03.890><c> we</c><00:20:03.950><c> start</c>

00:20:04.300 --> 00:20:04.310 align:start position:0%
we didn't run that block now we start
 

00:20:04.310 --> 00:20:07.720 align:start position:0%
we didn't run that block now we start
executing<00:20:04.580><c> it</c><00:20:05.230><c> while</c><00:20:06.230><c> we're</c><00:20:06.560><c> executing</c><00:20:07.010><c> it</c><00:20:07.550><c> if</c>

00:20:07.720 --> 00:20:07.730 align:start position:0%
executing it while we're executing it if
 

00:20:07.730 --> 00:20:10.150 align:start position:0%
executing it while we're executing it if
that<00:20:07.760><c> block</c><00:20:08.450><c> becomes</c><00:20:08.870><c> inactive</c><00:20:09.230><c> like</c><00:20:09.680><c> if</c><00:20:10.040><c> the</c>

00:20:10.150 --> 00:20:10.160 align:start position:0%
that block becomes inactive like if the
 

00:20:10.160 --> 00:20:11.530 align:start position:0%
that block becomes inactive like if the
live<00:20:10.340><c> data</c><00:20:10.490><c> becomes</c><00:20:10.970><c> inactive</c>

00:20:11.530 --> 00:20:11.540 align:start position:0%
live data becomes inactive
 

00:20:11.540 --> 00:20:13.360 align:start position:0%
live data becomes inactive
we<00:20:12.110><c> check</c><00:20:12.320><c> okay</c><00:20:12.590><c> is</c><00:20:12.680><c> this</c><00:20:12.830><c> block</c><00:20:13.070><c> still</c>

00:20:13.360 --> 00:20:13.370 align:start position:0%
we check okay is this block still
 

00:20:13.370 --> 00:20:15.880 align:start position:0%
we check okay is this block still
running<00:20:13.760><c> and</c><00:20:14.030><c> if</c><00:20:14.540><c> it</c><00:20:14.690><c> is</c><00:20:14.840><c> still</c><00:20:15.080><c> running</c><00:20:15.260><c> we</c>

00:20:15.880 --> 00:20:15.890 align:start position:0%
running and if it is still running we
 

00:20:15.890 --> 00:20:19.090 align:start position:0%
running and if it is still running we
give<00:20:16.070><c> it</c><00:20:16.160><c> some</c><00:20:16.400><c> time</c><00:20:16.670><c> to</c><00:20:17.270><c> finish</c><00:20:17.740><c> but</c><00:20:18.740><c> even</c>

00:20:19.090 --> 00:20:19.100 align:start position:0%
give it some time to finish but even
 

00:20:19.100 --> 00:20:20.980 align:start position:0%
give it some time to finish but even
after<00:20:19.250><c> the</c><00:20:19.490><c> timeout</c><00:20:19.940><c> if</c><00:20:20.240><c> it</c><00:20:20.390><c> is</c><00:20:20.510><c> still</c><00:20:20.750><c> running</c>

00:20:20.980 --> 00:20:20.990 align:start position:0%
after the timeout if it is still running
 

00:20:20.990 --> 00:20:23.260 align:start position:0%
after the timeout if it is still running
and<00:20:21.410><c> we</c><00:20:21.800><c> are</c><00:20:21.890><c> inactive</c><00:20:22.550><c> that's</c><00:20:22.850><c> basically</c>

00:20:23.260 --> 00:20:23.270 align:start position:0%
and we are inactive that's basically
 

00:20:23.270 --> 00:20:25.600 align:start position:0%
and we are inactive that's basically
unnecessary<00:20:24.260><c> computation</c><00:20:24.950><c> there</c><00:20:25.160><c> is</c><00:20:25.250><c> no</c><00:20:25.430><c> one</c>

00:20:25.600 --> 00:20:25.610 align:start position:0%
unnecessary computation there is no one
 

00:20:25.610 --> 00:20:27.340 align:start position:0%
unnecessary computation there is no one
observing<00:20:26.090><c> the</c><00:20:26.210><c> live</c><00:20:26.360><c> data</c><00:20:26.570><c> but</c><00:20:26.990><c> the</c><00:20:27.140><c> block</c>

00:20:27.340 --> 00:20:27.350 align:start position:0%
observing the live data but the block
 

00:20:27.350 --> 00:20:30.850 align:start position:0%
observing the live data but the block
keeps<00:20:27.650><c> running</c><00:20:28.480><c> so</c><00:20:29.480><c> we</c><00:20:29.600><c> just</c><00:20:29.780><c> cancel</c><00:20:30.260><c> the</c>

00:20:30.850 --> 00:20:30.860 align:start position:0%
keeps running so we just cancel the
 

00:20:30.860 --> 00:20:34.870 align:start position:0%
keeps running so we just cancel the
continuation<00:20:31.370><c> the</c><00:20:32.330><c> recording</c><00:20:32.980><c> so</c><00:20:33.980><c> if</c><00:20:34.250><c> the</c>

00:20:34.870 --> 00:20:34.880 align:start position:0%
continuation the recording so if the
 

00:20:34.880 --> 00:20:36.970 align:start position:0%
continuation the recording so if the
like<00:20:35.090><c> that'</c><00:20:35.300><c> becomes</c><00:20:35.750><c> active</c><00:20:36.230><c> again</c><00:20:36.320><c> we're</c>

00:20:36.970 --> 00:20:36.980 align:start position:0%
like that' becomes active again we're
 

00:20:36.980 --> 00:20:39.280 align:start position:0%
like that' becomes active again we're
just<00:20:37.010><c> going</c><00:20:37.160><c> to</c><00:20:37.370><c> restart</c><00:20:37.730><c> it</c><00:20:38.000><c> and</c><00:20:38.630><c> we</c><00:20:38.780><c> only</c><00:20:39.020><c> do</c>

00:20:39.280 --> 00:20:39.290 align:start position:0%
just going to restart it and we only do
 

00:20:39.290 --> 00:20:41.440 align:start position:0%
just going to restart it and we only do
it<00:20:39.410><c> once</c><00:20:39.680><c> so</c><00:20:39.920><c> if</c><00:20:40.130><c> it</c><00:20:40.370><c> finished</c><00:20:40.730><c> the</c><00:20:40.880><c> completion</c>

00:20:41.440 --> 00:20:41.450 align:start position:0%
it once so if it finished the completion
 

00:20:41.450 --> 00:20:45.250 align:start position:0%
it once so if it finished the completion
there<00:20:41.840><c> is</c><00:20:41.930><c> no</c><00:20:42.080><c> reason</c><00:20:42.380><c> to</c><00:20:42.410><c> restart</c><00:20:42.860><c> it</c><00:20:44.200><c> now</c><00:20:45.200><c> you</c>

00:20:45.250 --> 00:20:45.260 align:start position:0%
there is no reason to restart it now you
 

00:20:45.260 --> 00:20:48.750 align:start position:0%
there is no reason to restart it now you
can<00:20:45.650><c> also</c><00:20:45.800><c> emit</c><00:20:46.400><c> more</c><00:20:46.700><c> than</c><00:20:46.970><c> one</c><00:20:47.360><c> value</c><00:20:47.840><c> so</c>

00:20:48.750 --> 00:20:48.760 align:start position:0%
can also emit more than one value so
 

00:20:48.760 --> 00:20:51.310 align:start position:0%
can also emit more than one value so
this<00:20:49.760><c> was</c><00:20:49.970><c> some</c><00:20:50.150><c> structure</c><00:20:50.690><c> around</c><00:20:50.840><c> this</c>

00:20:51.310 --> 00:20:51.320 align:start position:0%
this was some structure around this
 

00:20:51.320 --> 00:20:53.470 align:start position:0%
this was some structure around this
sample<00:20:51.770><c> we</c><00:20:51.890><c> had</c><00:20:52.040><c> before</c><00:20:52.250><c> where</c><00:20:52.760><c> we</c><00:20:53.330><c> have</c><00:20:53.450><c> a</c>

00:20:53.470 --> 00:20:53.480 align:start position:0%
sample we had before where we have a
 

00:20:53.480 --> 00:20:55.870 align:start position:0%
sample we had before where we have a
repository<00:20:53.840><c> that</c><00:20:54.500><c> has</c><00:20:54.680><c> a</c><00:20:54.710><c> get</c><00:20:55.010><c> user</c><00:20:55.250><c> function</c>

00:20:55.870 --> 00:20:55.880 align:start position:0%
repository that has a get user function
 

00:20:55.880 --> 00:20:58.330 align:start position:0%
repository that has a get user function
a<00:20:56.150><c> lot</c><00:20:56.600><c> user</c><00:20:56.870><c> function</c><00:20:57.470><c> and</c><00:20:57.740><c> the</c><00:20:57.920><c> loss</c><00:20:58.160><c> from</c>

00:20:58.330 --> 00:20:58.340 align:start position:0%
a lot user function and the loss from
 

00:20:58.340 --> 00:21:01.510 align:start position:0%
a lot user function and the loss from
the<00:20:58.550><c> database</c><00:20:59.030><c> and</c><00:20:59.270><c> a</c><00:20:59.450><c> Miss</c><00:20:59.630><c> Tattaglia</c><00:21:00.520><c> now</c>

00:21:01.510 --> 00:21:01.520 align:start position:0%
the database and a Miss Tattaglia now
 

00:21:01.520 --> 00:21:03.700 align:start position:0%
the database and a Miss Tattaglia now
most<00:21:02.270><c> of</c><00:21:02.450><c> the</c><00:21:02.600><c> time</c><00:21:02.810><c> this</c><00:21:03.110><c> is</c><00:21:03.230><c> not</c><00:21:03.320><c> the</c><00:21:03.380><c> code</c>

00:21:03.700 --> 00:21:03.710 align:start position:0%
most of the time this is not the code
 

00:21:03.710 --> 00:21:05.500 align:start position:0%
most of the time this is not the code
you<00:21:03.860><c> write</c><00:21:04.100><c> you</c><00:21:04.520><c> need</c><00:21:04.700><c> to</c><00:21:04.850><c> go</c><00:21:05.060><c> to</c><00:21:05.120><c> the</c><00:21:05.360><c> web</c>

00:21:05.500 --> 00:21:05.510 align:start position:0%
you write you need to go to the web
 

00:21:05.510 --> 00:21:08.680 align:start position:0%
you write you need to go to the web
service<00:21:05.920><c> fetch</c><00:21:06.920><c> an</c><00:21:07.100><c> updated</c><00:21:07.580><c> user</c><00:21:07.820><c> update</c><00:21:08.540><c> the</c>

00:21:08.680 --> 00:21:08.690 align:start position:0%
service fetch an updated user update the
 

00:21:08.690 --> 00:21:11.440 align:start position:0%
service fetch an updated user update the
database<00:21:09.080><c> and</c><00:21:09.500><c> omit</c><00:21:09.920><c> that</c><00:21:10.070><c> value</c><00:21:10.460><c> again</c><00:21:10.520><c> so</c>

00:21:11.440 --> 00:21:11.450 align:start position:0%
database and omit that value again so
 

00:21:11.450 --> 00:21:13.780 align:start position:0%
database and omit that value again so
you<00:21:11.510><c> could</c><00:21:11.840><c> call</c><00:21:12.110><c> emit</c><00:21:12.620><c> as</c><00:21:12.800><c> many</c><00:21:13.190><c> times</c><00:21:13.400><c> as</c><00:21:13.610><c> you</c>

00:21:13.780 --> 00:21:13.790 align:start position:0%
you could call emit as many times as you
 

00:21:13.790 --> 00:21:15.820 align:start position:0%
you could call emit as many times as you
want<00:21:13.970><c> as</c><00:21:14.240><c> long</c><00:21:14.300><c> as</c><00:21:14.720><c> you're</c><00:21:15.020><c> inside</c><00:21:15.560><c> that</c>

00:21:15.820 --> 00:21:15.830 align:start position:0%
want as long as you're inside that
 

00:21:15.830 --> 00:21:19.360 align:start position:0%
want as long as you're inside that
quarantine<00:21:16.730><c> block</c><00:21:17.650><c> but</c><00:21:18.650><c> you</c><00:21:18.740><c> might</c><00:21:18.920><c> say</c><00:21:19.100><c> well</c>

00:21:19.360 --> 00:21:19.370 align:start position:0%
quarantine block but you might say well
 

00:21:19.370 --> 00:21:21.370 align:start position:0%
quarantine block but you might say well
most<00:21:19.670><c> of</c><00:21:19.910><c> the</c><00:21:20.090><c> time</c><00:21:20.270><c> the</c><00:21:20.450><c> database</c><00:21:20.780><c> doesn't</c>

00:21:21.370 --> 00:21:21.380 align:start position:0%
most of the time the database doesn't
 

00:21:21.380 --> 00:21:23.140 align:start position:0%
most of the time the database doesn't
return<00:21:21.650><c> you</c><00:21:21.830><c> a</c><00:21:21.860><c> user</c><00:21:22.130><c> it</c><00:21:22.400><c> returns</c><00:21:22.730><c> your</c><00:21:22.880><c> live</c>

00:21:23.140 --> 00:21:23.150 align:start position:0%
return you a user it returns your live
 

00:21:23.150 --> 00:21:24.940 align:start position:0%
return you a user it returns your live
data<00:21:23.450><c> for</c><00:21:23.780><c> user</c><00:21:23.960><c> because</c><00:21:24.440><c> you</c><00:21:24.620><c> want</c><00:21:24.800><c> to</c><00:21:24.860><c> be</c>

00:21:24.940 --> 00:21:24.950 align:start position:0%
data for user because you want to be
 

00:21:24.950 --> 00:21:27.600 align:start position:0%
data for user because you want to be
notified<00:21:25.280><c> about</c><00:21:25.640><c> the</c><00:21:26.060><c> changes</c>

00:21:27.600 --> 00:21:27.610 align:start position:0%
notified about the changes
 

00:21:27.610 --> 00:21:31.320 align:start position:0%
notified about the changes
well<00:21:29.130><c> all</c><00:21:30.130><c> you</c><00:21:30.280><c> can</c><00:21:30.460><c> say</c><00:21:30.640><c> is</c><00:21:30.670><c> you</c><00:21:31.030><c> could</c><00:21:31.180><c> just</c>

00:21:31.320 --> 00:21:31.330 align:start position:0%
well all you can say is you could just
 

00:21:31.330 --> 00:21:33.570 align:start position:0%
well all you can say is you could just
call<00:21:31.480><c> a</c><00:21:31.690><c> meat</c><00:21:31.870><c> source</c><00:21:32.140><c> if</c><00:21:32.770><c> you</c><00:21:32.830><c> ever</c><00:21:33.070><c> used</c>

00:21:33.570 --> 00:21:33.580 align:start position:0%
call a meat source if you ever used
 

00:21:33.580 --> 00:21:35.670 align:start position:0%
call a meat source if you ever used
mediator<00:21:34.150><c> live</c><00:21:34.480><c> data</c><00:21:34.750><c> this</c><00:21:34.990><c> is</c><00:21:35.170><c> very</c><00:21:35.410><c> similar</c>

00:21:35.670 --> 00:21:35.680 align:start position:0%
mediator live data this is very similar
 

00:21:35.680 --> 00:21:38.640 align:start position:0%
mediator live data this is very similar
to<00:21:35.800><c> at</c><00:21:36.040><c> source</c><00:21:36.400><c> where</c><00:21:37.180><c> it</c><00:21:37.480><c> says</c><00:21:37.810><c> whatever</c>

00:21:38.640 --> 00:21:38.650 align:start position:0%
to at source where it says whatever
 

00:21:38.650 --> 00:21:41.250 align:start position:0%
to at source where it says whatever
value<00:21:39.280><c> comes</c><00:21:39.550><c> from</c><00:21:39.760><c> the</c><00:21:39.940><c> slide</c><00:21:40.180><c> data</c><00:21:40.420><c> just</c>

00:21:41.250 --> 00:21:41.260 align:start position:0%
value comes from the slide data just
 

00:21:41.260 --> 00:21:43.410 align:start position:0%
value comes from the slide data just
make<00:21:41.410><c> it</c><00:21:41.560><c> my</c><00:21:41.710><c> value</c><00:21:42.100><c> and</c><00:21:42.580><c> you</c><00:21:42.700><c> can</c><00:21:42.730><c> run</c><00:21:43.090><c> things</c>

00:21:43.410 --> 00:21:43.420 align:start position:0%
make it my value and you can run things
 

00:21:43.420 --> 00:21:47.070 align:start position:0%
make it my value and you can run things
like<00:21:43.570><c> transformations</c><00:21:44.530><c> here</c><00:21:44.860><c> oh</c><00:21:45.180><c> also</c><00:21:46.180><c> now</c><00:21:47.020><c> we</c>

00:21:47.070 --> 00:21:47.080 align:start position:0%
like transformations here oh also now we
 

00:21:47.080 --> 00:21:49.680 align:start position:0%
like transformations here oh also now we
don't<00:21:47.290><c> need</c><00:21:47.500><c> this</c><00:21:47.740><c> extra</c><00:21:47.980><c> emit</c><00:21:48.550><c> because</c><00:21:49.210><c> we</c>

00:21:49.680 --> 00:21:49.690 align:start position:0%
don't need this extra emit because we
 

00:21:49.690 --> 00:21:51.900 align:start position:0%
don't need this extra emit because we
already<00:21:49.780><c> observing</c><00:21:50.380><c> the</c><00:21:50.500><c> database</c><00:21:50.980><c> so</c><00:21:51.850><c> you</c>

00:21:51.900 --> 00:21:51.910 align:start position:0%
already observing the database so you
 

00:21:51.910 --> 00:21:55.950 align:start position:0%
already observing the database so you
can<00:21:52.150><c> get</c><00:21:52.330><c> rid</c><00:21:52.450><c> of</c><00:21:52.540><c> it</c><00:21:54.120><c> so</c><00:21:55.120><c> this</c><00:21:55.420><c> slide</c><00:21:55.630><c> at</c><00:21:55.870><c> the</c>

00:21:55.950 --> 00:21:55.960 align:start position:0%
can get rid of it so this slide at the
 

00:21:55.960 --> 00:21:58.350 align:start position:0%
can get rid of it so this slide at the
API<00:21:56.350><c> basically</c><00:21:56.890><c> provides</c><00:21:57.610><c> us</c><00:21:57.790><c> a</c><00:21:57.820><c> very</c><00:21:58.090><c> nice</c>

00:21:58.350 --> 00:21:58.360 align:start position:0%
API basically provides us a very nice
 

00:21:58.360 --> 00:22:00.390 align:start position:0%
API basically provides us a very nice
way<00:21:58.570><c> to</c><00:21:58.600><c> make</c><00:21:59.290><c> likely</c><00:21:59.710><c> to</c><00:21:59.770><c> work</c><00:22:00.160><c> with</c>

00:22:00.390 --> 00:22:00.400 align:start position:0%
way to make likely to work with
 

00:22:00.400 --> 00:22:05.370 align:start position:0%
way to make likely to work with
qualities<00:22:01.110><c> but</c><00:22:02.110><c> how</c><00:22:02.440><c> what</c><00:22:02.620><c> we</c><00:22:02.830><c> models</c><00:22:04.380><c> thank</c>

00:22:05.370 --> 00:22:05.380 align:start position:0%
qualities but how what we models thank
 

00:22:05.380 --> 00:22:07.980 align:start position:0%
qualities but how what we models thank
you<00:22:05.670><c> so</c><00:22:06.670><c> let's</c><00:22:07.060><c> talk</c><00:22:07.180><c> a</c><00:22:07.240><c> little</c><00:22:07.330><c> bit</c><00:22:07.630><c> about</c><00:22:07.660><c> how</c>

00:22:07.980 --> 00:22:07.990 align:start position:0%
you so let's talk a little bit about how
 

00:22:07.990 --> 00:22:10.200 align:start position:0%
you so let's talk a little bit about how
to<00:22:08.050><c> integrate</c><00:22:08.320><c> into</c><00:22:08.740><c> integrate</c><00:22:09.700><c> carotenes</c>

00:22:10.200 --> 00:22:10.210 align:start position:0%
to integrate into integrate carotenes
 

00:22:10.210 --> 00:22:11.610 align:start position:0%
to integrate into integrate carotenes
into<00:22:10.420><c> your</c><00:22:10.510><c> view</c><00:22:10.690><c> models</c><00:22:10.960><c> but</c><00:22:11.140><c> first</c><00:22:11.410><c> I'm</c>

00:22:11.610 --> 00:22:11.620 align:start position:0%
into your view models but first I'm
 

00:22:11.620 --> 00:22:12.720 align:start position:0%
into your view models but first I'm
gonna<00:22:11.710><c> talk</c><00:22:11.950><c> a</c><00:22:11.980><c> little</c><00:22:12.220><c> bit</c><00:22:12.370><c> about</c>

00:22:12.720 --> 00:22:12.730 align:start position:0%
gonna talk a little bit about
 

00:22:12.730 --> 00:22:15.750 align:start position:0%
gonna talk a little bit about
Gleeks<00:22:13.800><c> specifically</c><00:22:14.800><c> co-routine</c><00:22:15.550><c> leaks</c>

00:22:15.750 --> 00:22:15.760 align:start position:0%
Gleeks specifically co-routine leaks
 

00:22:15.760 --> 00:22:18.060 align:start position:0%
Gleeks specifically co-routine leaks
these<00:22:16.420><c> are</c><00:22:16.600><c> very</c><00:22:16.840><c> serious</c><00:22:17.410><c> problem</c><00:22:17.770><c> they're</c>

00:22:18.060 --> 00:22:18.070 align:start position:0%
these are very serious problem they're
 

00:22:18.070 --> 00:22:19.740 align:start position:0%
these are very serious problem they're
kind<00:22:18.580><c> of</c><00:22:18.670><c> like</c><00:22:18.820><c> a</c><00:22:18.880><c> memory</c><00:22:19.240><c> leak</c><00:22:19.420><c> that</c><00:22:19.660><c> we're</c>

00:22:19.740 --> 00:22:19.750 align:start position:0%
kind of like a memory leak that we're
 

00:22:19.750 --> 00:22:23.130 align:start position:0%
kind of like a memory leak that we're
all<00:22:19.840><c> familiar</c><00:22:20.020><c> with</c><00:22:20.290><c> but</c><00:22:20.790><c> way</c><00:22:21.790><c> worse</c><00:22:22.090><c> a</c><00:22:22.480><c> cover</c>

00:22:23.130 --> 00:22:23.140 align:start position:0%
all familiar with but way worse a cover
 

00:22:23.140 --> 00:22:25.440 align:start position:0%
all familiar with but way worse a cover
team<00:22:23.440><c> can</c><00:22:23.620><c> resume</c><00:22:23.980><c> itself</c><00:22:24.430><c> and</c><00:22:24.700><c> in</c><00:22:25.090><c> addition</c>

00:22:25.440 --> 00:22:25.450 align:start position:0%
team can resume itself and in addition
 

00:22:25.450 --> 00:22:27.900 align:start position:0%
team can resume itself and in addition
to<00:22:25.480><c> using</c><00:22:25.660><c> memory</c><00:22:26.110><c> it</c><00:22:26.410><c> can</c><00:22:26.500><c> use</c><00:22:26.740><c> CPU</c><00:22:27.250><c> it</c><00:22:27.610><c> could</c>

00:22:27.900 --> 00:22:27.910 align:start position:0%
to using memory it can use CPU it could
 

00:22:27.910 --> 00:22:30.120 align:start position:0%
to using memory it can use CPU it could
write<00:22:28.360><c> a</c><00:22:28.390><c> file</c><00:22:28.840><c> it</c><00:22:29.440><c> could</c><00:22:29.620><c> make</c><00:22:29.770><c> a</c><00:22:29.800><c> network</c>

00:22:30.120 --> 00:22:30.130 align:start position:0%
write a file it could make a network
 

00:22:30.130 --> 00:22:33.750 align:start position:0%
write a file it could make a network
request<00:22:30.640><c> that</c><00:22:30.850><c> doesn't</c><00:22:31.210><c> need</c><00:22:31.330><c> to</c><00:22:31.390><c> happen</c><00:22:32.760><c> to</c>

00:22:33.750 --> 00:22:33.760 align:start position:0%
request that doesn't need to happen to
 

00:22:33.760 --> 00:22:35.340 align:start position:0%
request that doesn't need to happen to
help<00:22:33.940><c> us</c><00:22:34.060><c> deal</c><00:22:34.330><c> with</c><00:22:34.360><c> care</c><00:22:34.750><c> routine</c><00:22:35.050><c> leaks</c>

00:22:35.340 --> 00:22:35.350 align:start position:0%
help us deal with care routine leaks
 

00:22:35.350 --> 00:22:37.230 align:start position:0%
help us deal with care routine leaks
Kotlin<00:22:36.130><c> introduced</c><00:22:36.550><c> this</c><00:22:36.700><c> idea</c><00:22:36.850><c> of</c>

00:22:37.230 --> 00:22:37.240 align:start position:0%
Kotlin introduced this idea of
 

00:22:37.240 --> 00:22:40.140 align:start position:0%
Kotlin introduced this idea of
co-routine<00:22:37.990><c> scopes</c><00:22:38.340><c> so</c><00:22:39.340><c> what</c><00:22:39.550><c> is</c><00:22:39.700><c> this</c><00:22:39.850><c> scope</c>

00:22:40.140 --> 00:22:40.150 align:start position:0%
co-routine scopes so what is this scope
 

00:22:40.150 --> 00:22:42.420 align:start position:0%
co-routine scopes so what is this scope
well<00:22:40.660><c> it's</c><00:22:40.810><c> really</c><00:22:41.140><c> just</c><00:22:41.290><c> a</c><00:22:41.650><c> way</c><00:22:41.830><c> of</c><00:22:42.100><c> keeping</c>

00:22:42.420 --> 00:22:42.430 align:start position:0%
well it's really just a way of keeping
 

00:22:42.430 --> 00:22:44.400 align:start position:0%
well it's really just a way of keeping
track<00:22:42.670><c> of</c><00:22:43.270><c> your</c><00:22:43.660><c> co-routines</c>

00:22:44.400 --> 00:22:44.410 align:start position:0%
track of your co-routines
 

00:22:44.410 --> 00:22:46.740 align:start position:0%
track of your co-routines
all<00:22:44.890><c> care</c><00:22:45.310><c> routines</c><00:22:45.610><c> must</c><00:22:45.970><c> run</c><00:22:46.150><c> in</c><00:22:46.360><c> a</c><00:22:46.390><c> scope</c>

00:22:46.740 --> 00:22:46.750 align:start position:0%
all care routines must run in a scope
 

00:22:46.750 --> 00:22:49.530 align:start position:0%
all care routines must run in a scope
and<00:22:46.930><c> a</c><00:22:47.620><c> scope</c><00:22:47.950><c> gets</c><00:22:48.160><c> the</c><00:22:48.460><c> ability</c><00:22:48.850><c> to</c><00:22:48.880><c> cancel</c>

00:22:49.530 --> 00:22:49.540 align:start position:0%
and a scope gets the ability to cancel
 

00:22:49.540 --> 00:22:51.810 align:start position:0%
and a scope gets the ability to cancel
all<00:22:49.720><c> of</c><00:22:49.960><c> the</c><00:22:50.080><c> carotenes</c><00:22:50.560><c> inside</c><00:22:50.980><c> of</c><00:22:51.130><c> it</c><00:22:51.250><c> in</c>

00:22:51.810 --> 00:22:51.820 align:start position:0%
all of the carotenes inside of it in
 

00:22:51.820 --> 00:22:53.760 align:start position:0%
all of the carotenes inside of it in
addition<00:22:52.480><c> they're</c><00:22:52.900><c> also</c><00:22:53.050><c> the</c><00:22:53.320><c> place</c><00:22:53.500><c> that</c>

00:22:53.760 --> 00:22:53.770 align:start position:0%
addition they're also the place that
 

00:22:53.770 --> 00:22:55.500 align:start position:0%
addition they're also the place that
uncaught<00:22:54.220><c> exceptions</c><00:22:54.730><c> formica</c><00:22:55.090><c> routine</c><00:22:55.360><c> gets</c>

00:22:55.500 --> 00:22:55.510 align:start position:0%
uncaught exceptions formica routine gets
 

00:22:55.510 --> 00:22:57.420 align:start position:0%
uncaught exceptions formica routine gets
shuffled<00:22:55.720><c> off</c><00:22:55.990><c> to</c><00:22:56.260><c> now</c><00:22:56.890><c> you</c><00:22:56.950><c> put</c><00:22:57.160><c> that</c><00:22:57.280><c> all</c>

00:22:57.420 --> 00:22:57.430 align:start position:0%
shuffled off to now you put that all
 

00:22:57.430 --> 00:22:59.880 align:start position:0%
shuffled off to now you put that all
together<00:22:57.550><c> and</c><00:22:57.910><c> you</c><00:22:58.150><c> can</c><00:22:58.630><c> use</c><00:22:58.930><c> scopes</c><00:22:59.410><c> to</c><00:22:59.710><c> help</c>

00:22:59.880 --> 00:22:59.890 align:start position:0%
together and you can use scopes to help
 

00:22:59.890 --> 00:23:01.710 align:start position:0%
together and you can use scopes to help
ensure<00:23:00.160><c> that</c><00:23:00.190><c> you</c><00:23:00.460><c> never</c><00:23:00.730><c> leaked</c><00:23:01.240><c> occur</c>

00:23:01.710 --> 00:23:01.720 align:start position:0%
ensure that you never leaked occur
 

00:23:01.720 --> 00:23:04.530 align:start position:0%
ensure that you never leaked occur
routine<00:23:02.280><c> work</c><00:23:03.280><c> manager</c><00:23:03.760><c> that</c><00:23:03.970><c> Sergei</c><00:23:04.180><c> talked</c>

00:23:04.530 --> 00:23:04.540 align:start position:0%
routine work manager that Sergei talked
 

00:23:04.540 --> 00:23:06.330 align:start position:0%
routine work manager that Sergei talked
about<00:23:04.810><c> provides</c><00:23:05.170><c> a</c><00:23:05.350><c> scope</c><00:23:05.560><c> so</c><00:23:05.770><c> does</c><00:23:06.070><c> the</c><00:23:06.190><c> live</c>

00:23:06.330 --> 00:23:06.340 align:start position:0%
about provides a scope so does the live
 

00:23:06.340 --> 00:23:07.890 align:start position:0%
about provides a scope so does the live
data<00:23:06.520><c> builder</c><00:23:06.940><c> that</c><00:23:07.120><c> yet</c><00:23:07.270><c> just</c><00:23:07.480><c> talked</c><00:23:07.780><c> about</c>

00:23:07.890 --> 00:23:07.900 align:start position:0%
data builder that yet just talked about
 

00:23:07.900 --> 00:23:11.160 align:start position:0%
data builder that yet just talked about
view<00:23:08.770><c> model</c><00:23:09.070><c> scope</c><00:23:09.370><c> is</c><00:23:09.670><c> a</c><00:23:09.940><c> scope</c><00:23:10.390><c> it's</c><00:23:11.020><c> an</c>

00:23:11.160 --> 00:23:11.170 align:start position:0%
view model scope is a scope it's an
 

00:23:11.170 --> 00:23:13.290 align:start position:0%
view model scope is a scope it's an
extension<00:23:11.590><c> property</c><00:23:12.220><c> on</c><00:23:12.430><c> view</c><00:23:12.850><c> model</c><00:23:13.120><c> from</c>

00:23:13.290 --> 00:23:13.300 align:start position:0%
extension property on view model from
 

00:23:13.300 --> 00:23:16.170 align:start position:0%
extension property on view model from
the<00:23:13.450><c> KTX</c><00:23:13.870><c> library</c><00:23:14.320><c> I'm</c><00:23:15.280><c> gonna</c><00:23:15.520><c> do</c><00:23:15.700><c> another</c><00:23:15.940><c> one</c>

00:23:16.170 --> 00:23:16.180 align:start position:0%
the KTX library I'm gonna do another one
 

00:23:16.180 --> 00:23:18.210 align:start position:0%
the KTX library I'm gonna do another one
of<00:23:16.210><c> those</c><00:23:16.450><c> scary</c><00:23:17.080><c> infinite</c><00:23:17.560><c> loop</c><00:23:17.710><c> things</c><00:23:17.980><c> that</c>

00:23:18.210 --> 00:23:18.220 align:start position:0%
of those scary infinite loop things that
 

00:23:18.220 --> 00:23:19.740 align:start position:0%
of those scary infinite loop things that
Yeats<00:23:18.370><c> showed</c><00:23:18.640><c> but</c><00:23:19.090><c> this</c><00:23:19.240><c> time</c><00:23:19.510><c> in</c><00:23:19.690><c> a</c>

00:23:19.740 --> 00:23:19.750 align:start position:0%
Yeats showed but this time in a
 

00:23:19.750 --> 00:23:21.510 align:start position:0%
Yeats showed but this time in a
quarantine<00:23:20.050><c> that</c><00:23:20.200><c> I</c><00:23:20.350><c> start</c><00:23:20.650><c> myself</c><00:23:20.770><c> interview</c>

00:23:21.510 --> 00:23:21.520 align:start position:0%
quarantine that I start myself interview
 

00:23:21.520 --> 00:23:23.910 align:start position:0%
quarantine that I start myself interview
model<00:23:21.820><c> it</c><00:23:22.330><c> uses</c><00:23:22.690><c> view</c><00:23:22.960><c> model</c><00:23:23.200><c> scope</c><00:23:23.440><c> to</c><00:23:23.710><c> launch</c>

00:23:23.910 --> 00:23:23.920 align:start position:0%
model it uses view model scope to launch
 

00:23:23.920 --> 00:23:26.040 align:start position:0%
model it uses view model scope to launch
a<00:23:24.070><c> quarantine</c><00:23:24.490><c> in</c><00:23:24.700><c> the</c><00:23:24.910><c> scope</c><00:23:25.180><c> and</c><00:23:25.390><c> by</c><00:23:25.900><c> default</c>

00:23:26.040 --> 00:23:26.050 align:start position:0%
a quarantine in the scope and by default
 

00:23:26.050 --> 00:23:28.800 align:start position:0%
a quarantine in the scope and by default
this<00:23:26.380><c> launches</c><00:23:26.770><c> on</c><00:23:26.890><c> main</c><00:23:27.130><c> then</c><00:23:28.030><c> it</c><00:23:28.270><c> starts</c><00:23:28.690><c> an</c>

00:23:28.800 --> 00:23:28.810 align:start position:0%
this launches on main then it starts an
 

00:23:28.810 --> 00:23:30.690 align:start position:0%
this launches on main then it starts an
infinite<00:23:29.380><c> loop</c><00:23:29.530><c> that</c><00:23:30.010><c> doesn't</c><00:23:30.460><c> know</c><00:23:30.550><c> how</c><00:23:30.670><c> to</c>

00:23:30.690 --> 00:23:30.700 align:start position:0%
infinite loop that doesn't know how to
 

00:23:30.700 --> 00:23:33.450 align:start position:0%
infinite loop that doesn't know how to
stop<00:23:30.850><c> itself</c><00:23:31.360><c> and</c><00:23:31.690><c> every</c><00:23:32.410><c> second</c><00:23:32.860><c> it's</c><00:23:33.340><c> gonna</c>

00:23:33.450 --> 00:23:33.460 align:start position:0%
stop itself and every second it's gonna
 

00:23:33.460 --> 00:23:35.700 align:start position:0%
stop itself and every second it's gonna
go<00:23:33.640><c> ahead</c><00:23:33.850><c> and</c><00:23:33.940><c> write</c><00:23:34.180><c> a</c><00:23:34.360><c> file</c><00:23:34.750><c> now</c><00:23:35.470><c> that's</c>

00:23:35.700 --> 00:23:35.710 align:start position:0%
go ahead and write a file now that's
 

00:23:35.710 --> 00:23:38.850 align:start position:0%
go ahead and write a file now that's
pretty<00:23:36.370><c> expensive</c><00:23:36.960><c> it's</c><00:23:37.960><c> cover</c><00:23:38.470><c> teams</c><00:23:38.680><c> don't</c>

00:23:38.850 --> 00:23:38.860 align:start position:0%
pretty expensive it's cover teams don't
 

00:23:38.860 --> 00:23:40.360 align:start position:0%
pretty expensive it's cover teams don't
make<00:23:39.070><c> writing</c><00:23:39.430><c> files</c><00:23:39.640><c> faster</c>

00:23:40.360 --> 00:23:40.370 align:start position:0%
make writing files faster
 

00:23:40.370 --> 00:23:42.909 align:start position:0%
make writing files faster
cheaper<00:23:40.789><c> and</c><00:23:41.480><c> we</c><00:23:41.600><c> definitely</c><00:23:42.230><c> don't</c><00:23:42.470><c> want</c><00:23:42.770><c> to</c>

00:23:42.909 --> 00:23:42.919 align:start position:0%
cheaper and we definitely don't want to
 

00:23:42.919 --> 00:23:46.240 align:start position:0%
cheaper and we definitely don't want to
leak<00:23:43.100><c> this</c><00:23:43.309><c> work</c><00:23:44.320><c> human</c><00:23:45.320><c> scope</c><00:23:45.620><c> lets</c><00:23:45.950><c> us</c><00:23:46.070><c> write</c>

00:23:46.240 --> 00:23:46.250 align:start position:0%
leak this work human scope lets us write
 

00:23:46.250 --> 00:23:48.310 align:start position:0%
leak this work human scope lets us write
code<00:23:46.520><c> like</c><00:23:46.549><c> this</c><00:23:46.909><c> safely</c><00:23:47.510><c> when</c><00:23:48.110><c> the</c><00:23:48.200><c> user</c>

00:23:48.310 --> 00:23:48.320 align:start position:0%
code like this safely when the user
 

00:23:48.320 --> 00:23:50.470 align:start position:0%
code like this safely when the user
navigates<00:23:48.409><c> away</c><00:23:48.980><c> from</c><00:23:49.159><c> the</c><00:23:49.279><c> screen</c><00:23:49.610><c> the</c><00:23:50.150><c> scope</c>

00:23:50.470 --> 00:23:50.480 align:start position:0%
navigates away from the screen the scope
 

00:23:50.480 --> 00:23:52.480 align:start position:0%
navigates away from the screen the scope
will<00:23:50.779><c> be</c><00:23:50.929><c> canceled</c><00:23:51.409><c> which</c><00:23:51.650><c> guarantees</c><00:23:52.190><c> this</c>

00:23:52.480 --> 00:23:52.490 align:start position:0%
will be canceled which guarantees this
 

00:23:52.490 --> 00:23:55.960 align:start position:0%
will be canceled which guarantees this
very<00:23:52.850><c> expensive</c><00:23:53.299><c> work</c><00:23:53.720><c> one</c><00:23:54.289><c> week</c><00:23:54.789><c> so</c><00:23:55.789><c> if</c><00:23:55.850><c> you</c>

00:23:55.960 --> 00:23:55.970 align:start position:0%
very expensive work one week so if you
 

00:23:55.970 --> 00:23:57.310 align:start position:0%
very expensive work one week so if you
model<00:23:56.240><c> scope</c><00:23:56.450><c> can</c><00:23:56.690><c> help</c><00:23:56.870><c> you</c><00:23:56.990><c> avoid</c>

00:23:57.310 --> 00:23:57.320 align:start position:0%
model scope can help you avoid
 

00:23:57.320 --> 00:23:59.230 align:start position:0%
model scope can help you avoid
co-routine<00:23:57.950><c> leaks</c><00:23:58.130><c> by</c><00:23:58.370><c> guaranteeing</c><00:23:58.970><c> all</c>

00:23:59.230 --> 00:23:59.240 align:start position:0%
co-routine leaks by guaranteeing all
 

00:23:59.240 --> 00:24:01.630 align:start position:0%
co-routine leaks by guaranteeing all
your<00:23:59.659><c> cover</c><00:23:59.900><c> teens</c><00:24:00.110><c> are</c><00:24:00.260><c> canceled</c><00:24:00.860><c> whenever</c><00:24:01.580><c> a</c>

00:24:01.630 --> 00:24:01.640 align:start position:0%
your cover teens are canceled whenever a
 

00:24:01.640 --> 00:24:03.970 align:start position:0%
your cover teens are canceled whenever a
user<00:24:01.909><c> leaves</c><00:24:02.210><c> the</c><00:24:02.539><c> screen</c><00:24:02.720><c> I'm</c><00:24:03.470><c> gonna</c><00:24:03.620><c> pass</c><00:24:03.830><c> it</c>

00:24:03.970 --> 00:24:03.980 align:start position:0%
user leaves the screen I'm gonna pass it
 

00:24:03.980 --> 00:24:05.500 align:start position:0%
user leaves the screen I'm gonna pass it
over<00:24:04.100><c> to</c><00:24:04.309><c> Sergei</c><00:24:04.760><c> he's</c><00:24:04.970><c> gonna</c><00:24:05.120><c> talk</c><00:24:05.360><c> about</c>

00:24:05.500 --> 00:24:05.510 align:start position:0%
over to Sergei he's gonna talk about
 

00:24:05.510 --> 00:24:07.390 align:start position:0%
over to Sergei he's gonna talk about
some<00:24:05.720><c> other</c><00:24:05.840><c> scopes</c><00:24:06.140><c> writing</c><00:24:06.590><c> yeah</c><00:24:06.950><c> thanks</c>

00:24:07.390 --> 00:24:07.400 align:start position:0%
some other scopes writing yeah thanks
 

00:24:07.400 --> 00:24:10.060 align:start position:0%
some other scopes writing yeah thanks
Jon<00:24:07.960><c> yep</c><00:24:08.960><c> another</c><00:24:09.409><c> thing</c><00:24:09.830><c> that's</c><00:24:09.950><c> very</c>

00:24:10.060 --> 00:24:10.070 align:start position:0%
Jon yep another thing that's very
 

00:24:10.070 --> 00:24:12.610 align:start position:0%
Jon yep another thing that's very
naturally<00:24:10.700><c> provides</c><00:24:11.029><c> scope</c><00:24:11.450><c> is</c><00:24:11.690><c> lifecycle</c>

00:24:12.610 --> 00:24:12.620 align:start position:0%
naturally provides scope is lifecycle
 

00:24:12.620 --> 00:24:14.350 align:start position:0%
naturally provides scope is lifecycle
because<00:24:13.010><c> as</c><00:24:13.429><c> you</c><00:24:13.549><c> can</c><00:24:13.669><c> say</c><00:24:13.880><c> from</c><00:24:14.090><c> his</c><00:24:14.179><c> name</c>

00:24:14.350 --> 00:24:14.360 align:start position:0%
because as you can say from his name
 

00:24:14.360 --> 00:24:16.269 align:start position:0%
because as you can say from his name
something<00:24:15.020><c> that</c><00:24:15.289><c> has</c><00:24:15.440><c> a</c><00:24:15.470><c> start</c><00:24:15.830><c> and</c><00:24:15.980><c> the</c><00:24:16.250><c> end</c>

00:24:16.269 --> 00:24:16.279 align:start position:0%
something that has a start and the end
 

00:24:16.279 --> 00:24:18.279 align:start position:0%
something that has a start and the end
and<00:24:16.640><c> if</c><00:24:17.419><c> you</c><00:24:17.510><c> think</c><00:24:17.720><c> you</c><00:24:17.840><c> are</c><00:24:17.929><c> not</c><00:24:18.080><c> familiar</c>

00:24:18.279 --> 00:24:18.289 align:start position:0%
and if you think you are not familiar
 

00:24:18.289 --> 00:24:20.560 align:start position:0%
and if you think you are not familiar
face<00:24:18.950><c> lifecycle</c><00:24:19.490><c> owner</c><00:24:19.669><c> interface</c><00:24:20.270><c> you're</c>

00:24:20.560 --> 00:24:20.570 align:start position:0%
face lifecycle owner interface you're
 

00:24:20.570 --> 00:24:23.409 align:start position:0%
face lifecycle owner interface you're
actually<00:24:20.960><c> are</c><00:24:21.260><c> because</c><00:24:21.740><c> it</c><00:24:22.520><c> is</c><00:24:22.580><c> your</c><00:24:22.880><c> activity</c>

00:24:23.409 --> 00:24:23.419 align:start position:0%
actually are because it is your activity
 

00:24:23.419 --> 00:24:26.049 align:start position:0%
actually are because it is your activity
it<00:24:23.690><c> is</c><00:24:23.750><c> your</c><00:24:24.140><c> fragment</c><00:24:24.770><c> and</c><00:24:25.190><c> don't</c><00:24:25.789><c> forget</c>

00:24:26.049 --> 00:24:26.059 align:start position:0%
it is your fragment and don't forget
 

00:24:26.059 --> 00:24:28.539 align:start position:0%
it is your fragment and don't forget
that<00:24:26.299><c> fragment</c><00:24:26.980><c> conveniently</c><00:24:27.980><c> has</c><00:24:28.220><c> two</c>

00:24:28.539 --> 00:24:28.549 align:start position:0%
that fragment conveniently has two
 

00:24:28.549 --> 00:24:30.130 align:start position:0%
that fragment conveniently has two
different<00:24:28.760><c> life</c><00:24:29.059><c> cycles</c><00:24:29.480><c> and</c><00:24:29.539><c> the</c><00:24:29.750><c> second</c><00:24:30.020><c> one</c>

00:24:30.130 --> 00:24:30.140 align:start position:0%
different life cycles and the second one
 

00:24:30.140 --> 00:24:32.620 align:start position:0%
different life cycles and the second one
is<00:24:30.320><c> associated</c><00:24:30.620><c> with</c><00:24:31.070><c> views</c><00:24:31.850><c> inside</c><00:24:32.360><c> of</c><00:24:32.510><c> it</c>

00:24:32.620 --> 00:24:32.630 align:start position:0%
is associated with views inside of it
 

00:24:32.630 --> 00:24:34.450 align:start position:0%
is associated with views inside of it
and<00:24:32.779><c> fortunately</c><00:24:33.529><c> for</c><00:24:33.649><c> me</c><00:24:33.799><c> I</c><00:24:33.980><c> don't</c><00:24:34.220><c> have</c><00:24:34.340><c> to</c>

00:24:34.450 --> 00:24:34.460 align:start position:0%
and fortunately for me I don't have to
 

00:24:34.460 --> 00:24:39.490 align:start position:0%
and fortunately for me I don't have to
talk<00:24:34.610><c> about</c><00:24:34.669><c> that</c><00:24:35.360><c> but</c><00:24:36.169><c> let's</c><00:24:37.240><c> defined</c><00:24:38.500><c> scope</c>

00:24:39.490 --> 00:24:39.500 align:start position:0%
talk about that but let's defined scope
 

00:24:39.500 --> 00:24:41.740 align:start position:0%
talk about that but let's defined scope
more<00:24:39.830><c> precise</c><00:24:40.130><c> there</c><00:24:40.399><c> so</c><00:24:40.970><c> as</c><00:24:41.210><c> you</c><00:24:41.419><c> know</c><00:24:41.539><c> your</c>

00:24:41.740 --> 00:24:41.750 align:start position:0%
more precise there so as you know your
 

00:24:41.750 --> 00:24:45.310 align:start position:0%
more precise there so as you know your
fragments<00:24:42.169><c> are</c><00:24:42.350><c> get</c><00:24:42.620><c> recreated</c><00:24:43.309><c> over</c><00:24:43.700><c> with</c><00:24:44.320><c> do</c>

00:24:45.310 --> 00:24:45.320 align:start position:0%
fragments are get recreated over with do
 

00:24:45.320 --> 00:24:47.320 align:start position:0%
fragments are get recreated over with do
you<00:24:45.440><c> configuration</c><00:24:45.950><c> changes</c><00:24:46.370><c> so</c><00:24:46.610><c> it's</c><00:24:47.000><c> life</c>

00:24:47.320 --> 00:24:47.330 align:start position:0%
you configuration changes so it's life
 

00:24:47.330 --> 00:24:49.659 align:start position:0%
you configuration changes so it's life
cycle<00:24:47.480><c> can</c><00:24:47.840><c> lifetime</c><00:24:48.470><c> can</c><00:24:48.679><c> be</c><00:24:48.830><c> shorter</c><00:24:49.279><c> it</c><00:24:49.520><c> can</c>

00:24:49.659 --> 00:24:49.669 align:start position:0%
cycle can lifetime can be shorter it can
 

00:24:49.669 --> 00:24:53.080 align:start position:0%
cycle can lifetime can be shorter it can
be<00:24:49.789><c> longer</c><00:24:50.000><c> and</c><00:24:50.590><c> lexical</c><00:24:51.590><c> scope</c><00:24:51.919><c> just</c><00:24:52.100><c> mirrors</c>

00:24:53.080 --> 00:24:53.090 align:start position:0%
be longer and lexical scope just mirrors
 

00:24:53.090 --> 00:24:56.590 align:start position:0%
be longer and lexical scope just mirrors
that<00:24:53.419><c> meaning</c><00:24:54.409><c> that</c><00:24:54.860><c> once</c><00:24:55.250><c> your</c><00:24:55.940><c> lifecycle</c>

00:24:56.590 --> 00:24:56.600 align:start position:0%
that meaning that once your lifecycle
 

00:24:56.600 --> 00:25:00.580 align:start position:0%
that meaning that once your lifecycle
owner<00:24:57.080><c> receives</c><00:24:58.070><c> destroy</c><00:24:58.789><c> event</c><00:24:59.590><c> lifecycle</c>

00:25:00.580 --> 00:25:00.590 align:start position:0%
owner receives destroy event lifecycle
 

00:25:00.590 --> 00:25:03.070 align:start position:0%
owner receives destroy event lifecycle
scope<00:25:00.770><c> gets</c><00:25:01.100><c> cancelled</c><00:25:01.580><c> and</c><00:25:01.820><c> all</c><00:25:02.299><c> its</c><00:25:02.720><c> energy</c>

00:25:03.070 --> 00:25:03.080 align:start position:0%
scope gets cancelled and all its energy
 

00:25:03.080 --> 00:25:07.240 align:start position:0%
scope gets cancelled and all its energy
ups<00:25:03.470><c> are</c><00:25:03.649><c> canceled</c><00:25:04.159><c> as</c><00:25:04.309><c> well</c><00:25:04.570><c> so</c><00:25:05.570><c> as</c><00:25:06.100><c> you</c><00:25:07.100><c> can</c>

00:25:07.240 --> 00:25:07.250 align:start position:0%
ups are canceled as well so as you can
 

00:25:07.250 --> 00:25:09.700 align:start position:0%
ups are canceled as well so as you can
see<00:25:07.460><c> the</c><00:25:08.149><c> recycle</c><00:25:08.630><c> scope</c><00:25:08.809><c> is</c><00:25:08.990><c> very</c><00:25:09.440><c> tightly</c>

00:25:09.700 --> 00:25:09.710 align:start position:0%
see the recycle scope is very tightly
 

00:25:09.710 --> 00:25:13.000 align:start position:0%
see the recycle scope is very tightly
coupled<00:25:10.039><c> with</c><00:25:10.279><c> UI</c><00:25:10.549><c> and</c><00:25:10.940><c> it</c><00:25:11.330><c> works</c><00:25:12.140><c> best</c><00:25:12.440><c> in</c>

00:25:13.000 --> 00:25:13.010 align:start position:0%
coupled with UI and it works best in
 

00:25:13.010 --> 00:25:15.490 align:start position:0%
coupled with UI and it works best in
situation<00:25:13.700><c> like</c><00:25:13.730><c> that</c><00:25:14.120><c> so</c><00:25:14.390><c> previously</c><00:25:15.320><c> you</c>

00:25:15.490 --> 00:25:15.500 align:start position:0%
situation like that so previously you
 

00:25:15.500 --> 00:25:18.159 align:start position:0%
situation like that so previously you
would<00:25:15.620><c> have</c><00:25:15.890><c> you</c><00:25:16.190><c> do</c><00:25:16.850><c> something</c><00:25:17.750><c> like</c><00:25:17.990><c> this</c>

00:25:18.159 --> 00:25:18.169 align:start position:0%
would have you do something like this
 

00:25:18.169 --> 00:25:20.799 align:start position:0%
would have you do something like this
when<00:25:18.500><c> you</c><00:25:18.529><c> decide</c><00:25:19.309><c> to</c><00:25:19.490><c> show</c><00:25:19.760><c> some</c><00:25:20.090><c> UI</c><00:25:20.270><c> will</c>

00:25:20.799 --> 00:25:20.809 align:start position:0%
when you decide to show some UI will
 

00:25:20.809 --> 00:25:24.490 align:start position:0%
when you decide to show some UI will
delay<00:25:21.320><c> and</c><00:25:21.850><c> well</c><00:25:22.850><c> this</c><00:25:23.059><c> looks</c><00:25:23.240><c> pretty</c><00:25:23.500><c> simple</c>

00:25:24.490 --> 00:25:24.500 align:start position:0%
delay and well this looks pretty simple
 

00:25:24.500 --> 00:25:27.250 align:start position:0%
delay and well this looks pretty simple
so<00:25:25.039><c> we</c><00:25:25.429><c> can</c><00:25:25.549><c> make</c><00:25:25.760><c> it</c><00:25:25.880><c> a</c><00:25:25.940><c> bit</c><00:25:26.029><c> harder</c><00:25:26.090><c> and</c><00:25:26.899><c> if</c><00:25:27.080><c> we</c>

00:25:27.250 --> 00:25:27.260 align:start position:0%
so we can make it a bit harder and if we
 

00:25:27.260 --> 00:25:31.000 align:start position:0%
so we can make it a bit harder and if we
have<00:25:27.620><c> a</c><00:25:27.649><c> two</c><00:25:27.950><c> steps</c><00:25:28.279><c> it</c><00:25:29.179><c> becomes</c><00:25:29.600><c> to</c><00:25:30.559><c> look</c><00:25:30.740><c> very</c>

00:25:31.000 --> 00:25:31.010 align:start position:0%
have a two steps it becomes to look very
 

00:25:31.010 --> 00:25:33.760 align:start position:0%
have a two steps it becomes to look very
ugly<00:25:31.279><c> because</c><00:25:31.610><c> of</c><00:25:32.270><c> this</c><00:25:32.539><c> deep</c><00:25:33.080><c> nesting</c><00:25:33.289><c> and</c>

00:25:33.760 --> 00:25:33.770 align:start position:0%
ugly because of this deep nesting and
 

00:25:33.770 --> 00:25:35.950 align:start position:0%
ugly because of this deep nesting and
actually<00:25:34.730><c> if</c><00:25:34.789><c> you</c><00:25:34.880><c> take</c><00:25:35.029><c> a</c><00:25:35.059><c> closer</c><00:25:35.390><c> look</c><00:25:35.539><c> you</c>

00:25:35.950 --> 00:25:35.960 align:start position:0%
actually if you take a closer look you
 

00:25:35.960 --> 00:25:38.380 align:start position:0%
actually if you take a closer look you
have<00:25:36.380><c> some</c><00:25:36.710><c> real</c><00:25:36.980><c> issues</c><00:25:37.250><c> here</c><00:25:37.760><c> because</c><00:25:38.120><c> this</c>

00:25:38.380 --> 00:25:38.390 align:start position:0%
have some real issues here because this
 

00:25:38.390 --> 00:25:41.289 align:start position:0%
have some real issues here because this
main<00:25:38.659><c> Handler</c><00:25:39.140><c> and</c><00:25:39.289><c> those</c><00:25:40.250><c> functions</c><00:25:41.120><c> that</c>

00:25:41.289 --> 00:25:41.299 align:start position:0%
main Handler and those functions that
 

00:25:41.299 --> 00:25:43.630 align:start position:0%
main Handler and those functions that
touch<00:25:41.720><c> you</c><00:25:41.960><c> I</c><00:25:42.020><c> don't</c><00:25:42.679><c> really</c><00:25:42.919><c> work</c><00:25:43.220><c> nicely</c>

00:25:43.630 --> 00:25:43.640 align:start position:0%
touch you I don't really work nicely
 

00:25:43.640 --> 00:25:46.299 align:start position:0%
touch you I don't really work nicely
together<00:25:44.120><c> because</c><00:25:45.110><c> main</c><00:25:45.440><c> handler</c><00:25:45.770><c> is</c><00:25:46.010><c> kind</c><00:25:46.250><c> of</c>

00:25:46.299 --> 00:25:46.309 align:start position:0%
together because main handler is kind of
 

00:25:46.309 --> 00:25:47.710 align:start position:0%
together because main handler is kind of
a<00:25:46.399><c> global</c><00:25:46.730><c> scope</c><00:25:46.940><c> it</c><00:25:47.149><c> doesn't</c><00:25:47.539><c> care</c><00:25:47.690><c> about</c>

00:25:47.710 --> 00:25:47.720 align:start position:0%
a global scope it doesn't care about
 

00:25:47.720 --> 00:25:50.230 align:start position:0%
a global scope it doesn't care about
your<00:25:48.049><c> lifecycle</c><00:25:48.440><c> at</c><00:25:48.799><c> all</c><00:25:49.010><c> and</c><00:25:49.340><c> those</c>

00:25:50.230 --> 00:25:50.240 align:start position:0%
your lifecycle at all and those
 

00:25:50.240 --> 00:25:53.520 align:start position:0%
your lifecycle at all and those
functions<00:25:50.740><c> have</c><00:25:51.740><c> reference</c><00:25:52.250><c> to</c><00:25:52.340><c> fragments</c>

00:25:53.520 --> 00:25:53.530 align:start position:0%
functions have reference to fragments
 

00:25:53.530 --> 00:25:56.010 align:start position:0%
functions have reference to fragments
or<00:25:53.590><c> activities</c><00:25:54.370><c> so</c><00:25:54.790><c> if</c><00:25:55.090><c> your</c><00:25:55.270><c> delay</c><00:25:55.570><c> is</c><00:25:55.750><c> long</c>

00:25:56.010 --> 00:25:56.020 align:start position:0%
or activities so if your delay is long
 

00:25:56.020 --> 00:25:59.550 align:start position:0%
or activities so if your delay is long
enough<00:25:56.350><c> you</c><00:25:56.980><c> can</c><00:25:57.010><c> easily</c><00:25:57.370><c> leak</c><00:25:58.330><c> a</c><00:25:58.660><c> lot</c><00:25:59.230><c> of</c><00:25:59.350><c> them</c>

00:25:59.550 --> 00:25:59.560 align:start position:0%
enough you can easily leak a lot of them
 

00:25:59.560 --> 00:26:02.960 align:start position:0%
enough you can easily leak a lot of them
and<00:25:59.800><c> receive</c><00:26:00.430><c> out</c><00:26:00.640><c> of</c><00:26:00.910><c> memory</c><00:26:01.150><c> exception</c><00:26:01.840><c> well</c>

00:26:02.960 --> 00:26:02.970 align:start position:0%
and receive out of memory exception well
 

00:26:02.970 --> 00:26:07.400 align:start position:0%
and receive out of memory exception well
my<00:26:03.970><c> second</c><00:26:04.330><c> scope</c><00:26:04.570><c> will</c><00:26:04.960><c> cancel</c><00:26:05.640><c> all</c><00:26:06.640><c> those</c>

00:26:07.400 --> 00:26:07.410 align:start position:0%
my second scope will cancel all those
 

00:26:07.410 --> 00:26:10.410 align:start position:0%
my second scope will cancel all those
callbacks<00:26:08.410><c> we</c><00:26:08.860><c> are</c><00:26:09.010><c> so</c><00:26:09.880><c> for</c><00:26:10.090><c> us</c><00:26:10.210><c> is</c><00:26:10.390><c> a</c>

00:26:10.410 --> 00:26:10.420 align:start position:0%
callbacks we are so for us is a
 

00:26:10.420 --> 00:26:11.940 align:start position:0%
callbacks we are so for us is a
kind<00:26:10.630><c> of</c><00:26:10.750><c> a</c><00:26:10.840><c> callback</c><00:26:11.020><c> because</c><00:26:11.320><c> it's</c><00:26:11.590><c> suspend</c>

00:26:11.940 --> 00:26:11.950 align:start position:0%
kind of a callback because it's suspend
 

00:26:11.950 --> 00:26:14.190 align:start position:0%
kind of a callback because it's suspend
function<00:26:12.370><c> it</c><00:26:13.030><c> will</c><00:26:13.180><c> cancel</c><00:26:13.420><c> it</c><00:26:13.660><c> automatically</c>

00:26:14.190 --> 00:26:14.200 align:start position:0%
function it will cancel it automatically
 

00:26:14.200 --> 00:26:17.190 align:start position:0%
function it will cancel it automatically
once<00:26:14.890><c> your</c><00:26:15.100><c> life</c><00:26:15.250><c> cycle</c><00:26:15.580><c> is</c><00:26:15.730><c> destroyed</c><00:26:16.390><c> so</c>

00:26:17.190 --> 00:26:17.200 align:start position:0%
once your life cycle is destroyed so
 

00:26:17.200 --> 00:26:19.770 align:start position:0%
once your life cycle is destroyed so
this<00:26:17.500><c> code</c><00:26:17.770><c> looks</c><00:26:18.280><c> nicely</c><00:26:18.580><c> because</c><00:26:19.300><c> it's</c><00:26:19.570><c> very</c>

00:26:19.770 --> 00:26:19.780 align:start position:0%
this code looks nicely because it's very
 

00:26:19.780 --> 00:26:22.460 align:start position:0%
this code looks nicely because it's very
sequential<00:26:20.230><c> and</c><00:26:20.680><c> it</c><00:26:21.130><c> is</c><00:26:21.310><c> actually</c><00:26:21.820><c> safer</c>

00:26:22.460 --> 00:26:22.470 align:start position:0%
sequential and it is actually safer
 

00:26:22.470 --> 00:26:25.470 align:start position:0%
sequential and it is actually safer
however<00:26:23.470><c> I</c><00:26:23.800><c> have</c><00:26:24.070><c> to</c><00:26:24.220><c> say</c><00:26:24.430><c> that</c><00:26:24.880><c> life</c><00:26:25.240><c> cycle</c>

00:26:25.470 --> 00:26:25.480 align:start position:0%
however I have to say that life cycle
 

00:26:25.480 --> 00:26:28.680 align:start position:0%
however I have to say that life cycle
scope<00:26:25.870><c> is</c><00:26:26.050><c> a</c><00:26:26.080><c> bit</c><00:26:26.350><c> of</c><00:26:26.470><c> a</c><00:26:26.560><c> danger</c><00:26:26.860><c> zone</c><00:26:27.030><c> so</c><00:26:28.030><c> let's</c>

00:26:28.680 --> 00:26:28.690 align:start position:0%
scope is a bit of a danger zone so let's
 

00:26:28.690 --> 00:26:30.120 align:start position:0%
scope is a bit of a danger zone so let's
rewind<00:26:28.840><c> a</c><00:26:29.080><c> little</c><00:26:29.140><c> bit</c><00:26:29.320><c> I</c><00:26:29.530><c> was</c><00:26:29.680><c> the</c><00:26:29.800><c> one</c><00:26:29.920><c> who</c>

00:26:30.120 --> 00:26:30.130 align:start position:0%
rewind a little bit I was the one who
 

00:26:30.130 --> 00:26:32.730 align:start position:0%
rewind a little bit I was the one who
show<00:26:30.310><c> you</c><00:26:30.370><c> that</c><00:26:30.670><c> retrofit</c><00:26:31.240><c> and</c><00:26:31.480><c> room</c><00:26:32.140><c> supports</c>

00:26:32.730 --> 00:26:32.740 align:start position:0%
show you that retrofit and room supports
 

00:26:32.740 --> 00:26:35.820 align:start position:0%
show you that retrofit and room supports
suspend<00:26:33.400><c> functions</c><00:26:33.990><c> it</c><00:26:34.990><c> shows</c><00:26:35.350><c> you</c><00:26:35.530><c> something</c>

00:26:35.820 --> 00:26:35.830 align:start position:0%
suspend functions it shows you something
 

00:26:35.830 --> 00:26:38.910 align:start position:0%
suspend functions it shows you something
look<00:26:36.340><c> that</c><00:26:36.910><c> very</c><00:26:37.180><c> family</c><00:26:37.560><c> looks</c><00:26:38.560><c> like</c><00:26:38.740><c> that</c>

00:26:38.910 --> 00:26:38.920 align:start position:0%
look that very family looks like that
 

00:26:38.920 --> 00:26:42.080 align:start position:0%
look that very family looks like that
when<00:26:39.610><c> you</c><00:26:39.790><c> say</c><00:26:40.480><c> okay</c><00:26:40.870><c> I</c><00:26:41.110><c> will</c><00:26:41.320><c> combine</c><00:26:41.590><c> those</c>

00:26:42.080 --> 00:26:42.090 align:start position:0%
when you say okay I will combine those
 

00:26:42.090 --> 00:26:44.550 align:start position:0%
when you say okay I will combine those
functions<00:26:43.090><c> to</c><00:26:43.210><c> network</c><00:26:43.630><c> and</c><00:26:43.810><c> database</c><00:26:43.870><c> into</c>

00:26:44.550 --> 00:26:44.560 align:start position:0%
functions to network and database into
 

00:26:44.560 --> 00:26:47.070 align:start position:0%
functions to network and database into
some<00:26:45.130><c> repository</c><00:26:45.670><c> pattern</c><00:26:45.910><c> and</c><00:26:46.690><c> I'll</c><00:26:46.840><c> have</c>

00:26:47.070 --> 00:26:47.080 align:start position:0%
some repository pattern and I'll have
 

00:26:47.080 --> 00:26:48.870 align:start position:0%
some repository pattern and I'll have
just<00:26:47.230><c> one</c><00:26:47.470><c> function</c><00:26:47.950><c> which</c><00:26:48.220><c> is</c><00:26:48.370><c> suspend</c>

00:26:48.870 --> 00:26:48.880 align:start position:0%
just one function which is suspend
 

00:26:48.880 --> 00:26:51.810 align:start position:0%
just one function which is suspend
function<00:26:49.470><c> that</c><00:26:50.470><c> orchestrate</c><00:26:51.400><c> all</c><00:26:51.580><c> of</c><00:26:51.730><c> this</c>

00:26:51.810 --> 00:26:51.820 align:start position:0%
function that orchestrate all of this
 

00:26:51.820 --> 00:26:54.480 align:start position:0%
function that orchestrate all of this
work<00:26:52.030><c> so</c><00:26:52.390><c> I</c><00:26:52.420><c> just</c><00:26:52.720><c> need</c><00:26:52.960><c> the</c><00:26:53.080><c> scope</c><00:26:53.410><c> to</c><00:26:53.710><c> call</c><00:26:54.340><c> it</c>

00:26:54.480 --> 00:26:54.490 align:start position:0%
work so I just need the scope to call it
 

00:26:54.490 --> 00:26:57.600 align:start position:0%
work so I just need the scope to call it
so<00:26:55.180><c> why</c><00:26:55.450><c> wouldn't</c><00:26:55.720><c> I</c><00:26:55.960><c> just</c><00:26:56.260><c> call</c><00:26:56.950><c> it</c><00:26:56.980><c> in</c><00:26:57.370><c> my</c>

00:26:57.600 --> 00:26:57.610 align:start position:0%
so why wouldn't I just call it in my
 

00:26:57.610 --> 00:27:00.150 align:start position:0%
so why wouldn't I just call it in my
life<00:26:57.790><c> cycle</c><00:26:58.150><c> scope</c><00:26:58.360><c> and</c><00:26:58.690><c> it's</c><00:26:59.230><c> actually</c><00:26:59.860><c> not</c><00:27:00.100><c> a</c>

00:27:00.150 --> 00:27:00.160 align:start position:0%
life cycle scope and it's actually not a
 

00:27:00.160 --> 00:27:02.360 align:start position:0%
life cycle scope and it's actually not a
brightest<00:27:00.730><c> idea</c>

00:27:02.360 --> 00:27:02.370 align:start position:0%
brightest idea
 

00:27:02.370 --> 00:27:07.290 align:start position:0%
brightest idea
well<00:27:03.510><c> why</c><00:27:04.510><c> and</c><00:27:05.040><c> don't</c><00:27:06.040><c> get</c><00:27:06.400><c> me</c><00:27:06.550><c> wrong</c><00:27:06.580><c> you</c><00:27:07.030><c> can</c>

00:27:07.290 --> 00:27:07.300 align:start position:0%
well why and don't get me wrong you can
 

00:27:07.300 --> 00:27:09.780 align:start position:0%
well why and don't get me wrong you can
Sean<00:27:07.570><c> told</c><00:27:08.200><c> you</c><00:27:08.410><c> everything</c><00:27:08.980><c> correctly</c><00:27:09.370><c> it</c>

00:27:09.780 --> 00:27:09.790 align:start position:0%
Sean told you everything correctly it
 

00:27:09.790 --> 00:27:12.180 align:start position:0%
Sean told you everything correctly it
won't<00:27:10.480><c> lock</c><00:27:10.660><c> main</c><00:27:10.900><c> thread</c><00:27:11.230><c> it</c><00:27:11.560><c> wants</c><00:27:12.070><c> the</c>

00:27:12.180 --> 00:27:12.190 align:start position:0%
won't lock main thread it wants the
 

00:27:12.190 --> 00:27:14.160 align:start position:0%
won't lock main thread it wants the
curtains<00:27:12.790><c> however</c><00:27:13.450><c> do</c><00:27:13.690><c> remember</c><00:27:14.020><c> this</c>

00:27:14.160 --> 00:27:14.170 align:start position:0%
curtains however do remember this
 

00:27:14.170 --> 00:27:17.640 align:start position:0%
curtains however do remember this
picture<00:27:14.550><c> lexical</c><00:27:15.550><c> scope</c><00:27:15.730><c> get</c><00:27:15.910><c> canceled</c><00:27:16.650><c> on</c>

00:27:17.640 --> 00:27:17.650 align:start position:0%
picture lexical scope get canceled on
 

00:27:17.650 --> 00:27:20.010 align:start position:0%
picture lexical scope get canceled on
every<00:27:18.160><c> configuration</c><00:27:18.430><c> change</c><00:27:19.090><c> meaning</c><00:27:19.870><c> that</c>

00:27:20.010 --> 00:27:20.020 align:start position:0%
every configuration change meaning that
 

00:27:20.020 --> 00:27:23.010 align:start position:0%
every configuration change meaning that
your<00:27:20.230><c> main</c><00:27:20.440><c> that</c><00:27:21.400><c> your</c><00:27:21.550><c> network</c><00:27:21.670><c> request</c><00:27:22.240><c> gets</c>

00:27:23.010 --> 00:27:23.020 align:start position:0%
your main that your network request gets
 

00:27:23.020 --> 00:27:25.500 align:start position:0%
your main that your network request gets
canceled<00:27:23.620><c> every</c><00:27:24.070><c> time</c><00:27:24.340><c> so</c><00:27:25.060><c> it</c><00:27:25.180><c> is</c><00:27:25.210><c> just</c>

00:27:25.500 --> 00:27:25.510 align:start position:0%
canceled every time so it is just
 

00:27:25.510 --> 00:27:27.900 align:start position:0%
canceled every time so it is just
wasteful<00:27:26.140><c> you're</c><00:27:26.440><c> wasting</c><00:27:26.800><c> users</c><00:27:27.370><c> resources</c>

00:27:27.900 --> 00:27:27.910 align:start position:0%
wasteful you're wasting users resources
 

00:27:27.910 --> 00:27:30.000 align:start position:0%
wasteful you're wasting users resources
to<00:27:28.060><c> battle</c><00:27:28.360><c> resources</c><00:27:28.810><c> it's</c><00:27:29.290><c> just</c><00:27:29.560><c> bad</c><00:27:29.740><c> for</c>

00:27:30.000 --> 00:27:30.010 align:start position:0%
to battle resources it's just bad for
 

00:27:30.010 --> 00:27:36.420 align:start position:0%
to battle resources it's just bad for
environment<00:27:30.520><c> so</c><00:27:33.390><c> so</c><00:27:34.860><c> how</c><00:27:35.860><c> you</c><00:27:35.920><c> would</c><00:27:36.160><c> do</c><00:27:36.280><c> it</c>

00:27:36.420 --> 00:27:36.430 align:start position:0%
environment so so how you would do it
 

00:27:36.430 --> 00:27:38.070 align:start position:0%
environment so so how you would do it
properly<00:27:36.850><c> well</c><00:27:37.180><c> one</c><00:27:37.570><c> of</c><00:27:37.690><c> the</c><00:27:37.750><c> things</c><00:27:37.930><c> actually</c>

00:27:38.070 --> 00:27:38.080 align:start position:0%
properly well one of the things actually
 

00:27:38.080 --> 00:27:40.140 align:start position:0%
properly well one of the things actually
was<00:27:38.290><c> presented</c><00:27:38.680><c> by</c><00:27:38.800><c> get</c><00:27:39.100><c> like</c><00:27:39.580><c> this</c><00:27:39.760><c> life</c><00:27:39.970><c> that</c>

00:27:40.140 --> 00:27:40.150 align:start position:0%
was presented by get like this life that
 

00:27:40.150 --> 00:27:42.600 align:start position:0%
was presented by get like this life that
builder<00:27:40.780><c> will</c><00:27:41.050><c> work</c><00:27:41.290><c> very</c><00:27:41.800><c> nice</c><00:27:41.980><c> in</c><00:27:42.220><c> this</c><00:27:42.370><c> kind</c>

00:27:42.600 --> 00:27:42.610 align:start position:0%
builder will work very nice in this kind
 

00:27:42.610 --> 00:27:44.610 align:start position:0%
builder will work very nice in this kind
of<00:27:42.670><c> situations</c><00:27:43.210><c> I'll</c><00:27:43.600><c> present</c><00:27:43.960><c> you</c><00:27:44.230><c> like</c><00:27:44.440><c> an</c>

00:27:44.610 --> 00:27:44.620 align:start position:0%
of situations I'll present you like an
 

00:27:44.620 --> 00:27:47.280 align:start position:0%
of situations I'll present you like an
hour<00:27:44.740><c> way</c><00:27:45.010><c> how</c><00:27:45.280><c> you</c><00:27:45.310><c> can</c><00:27:45.430><c> approach</c><00:27:45.910><c> this</c><00:27:46.290><c> so</c>

00:27:47.280 --> 00:27:47.290 align:start position:0%
hour way how you can approach this so
 

00:27:47.290 --> 00:27:49.680 align:start position:0%
hour way how you can approach this so
your<00:27:48.040><c> starting</c><00:27:48.520><c> point</c><00:27:48.730><c> from</c><00:27:49.180><c> this</c><00:27:49.360><c> kind</c><00:27:49.570><c> of</c>

00:27:49.680 --> 00:27:49.690 align:start position:0%
your starting point from this kind of
 

00:27:49.690 --> 00:27:51.960 align:start position:0%
your starting point from this kind of
task<00:27:49.930><c> is</c><00:27:50.440><c> a</c><00:27:50.500><c> view</c><00:27:50.860><c> model</c><00:27:50.980><c> scope</c><00:27:51.400><c> so</c><00:27:51.640><c> you</c><00:27:51.700><c> just</c>

00:27:51.960 --> 00:27:51.970 align:start position:0%
task is a view model scope so you just
 

00:27:51.970 --> 00:27:54.720 align:start position:0%
task is a view model scope so you just
run<00:27:52.300><c> this</c><00:27:53.200><c> load</c><00:27:53.470><c> function</c><00:27:53.920><c> in</c><00:27:54.250><c> this</c><00:27:54.400><c> femoral</c>

00:27:54.720 --> 00:27:54.730 align:start position:0%
run this load function in this femoral
 

00:27:54.730 --> 00:27:57.390 align:start position:0%
run this load function in this femoral
scope<00:27:55.090><c> then</c><00:27:55.930><c> we</c><00:27:56.260><c> introduce</c><00:27:56.680><c> a</c><00:27:56.800><c> function</c><00:27:56.980><c> in</c>

00:27:57.390 --> 00:27:57.400 align:start position:0%
scope then we introduce a function in
 

00:27:57.400 --> 00:28:00.000 align:start position:0%
scope then we introduce a function in
the<00:27:57.550><c> model</c><00:27:57.820><c> that</c><00:27:58.030><c> you</c><00:27:58.300><c> connect</c><00:27:58.990><c> our</c><00:27:59.230><c> UI</c><00:27:59.500><c> nav</c>

00:28:00.000 --> 00:28:00.010 align:start position:0%
the model that you connect our UI nav
 

00:28:00.010 --> 00:28:00.450 align:start position:0%
the model that you connect our UI nav
model

00:28:00.450 --> 00:28:00.460 align:start position:0%
model
 

00:28:00.460 --> 00:28:02.550 align:start position:0%
model
third<00:28:00.640><c> when</c><00:28:00.940><c> you</c><00:28:01.030><c> grab</c><00:28:01.240><c> a</c><00:28:01.270><c> node</c><00:28:01.750><c> well</c><00:28:02.170><c> as</c><00:28:02.320><c> we</c>

00:28:02.550 --> 00:28:02.560 align:start position:0%
third when you grab a node well as we
 

00:28:02.560 --> 00:28:05.520 align:start position:0%
third when you grab a node well as we
discussed<00:28:03.100><c> it's</c><00:28:03.760><c> a</c><00:28:03.850><c> network</c><00:28:04.210><c> call</c><00:28:04.530><c> somewhere</c>

00:28:05.520 --> 00:28:05.530 align:start position:0%
discussed it's a network call somewhere
 

00:28:05.530 --> 00:28:06.990 align:start position:0%
discussed it's a network call somewhere
inside<00:28:05.890><c> of</c><00:28:05.950><c> his</c><00:28:06.220><c> load</c><00:28:06.400><c> node</c>

00:28:06.990 --> 00:28:07.000 align:start position:0%
inside of his load node
 

00:28:07.000 --> 00:28:09.390 align:start position:0%
inside of his load node
so<00:28:07.179><c> it's</c><00:28:07.360><c> I</c><00:28:07.630><c> seen</c><00:28:07.900><c> Fran</c><00:28:08.140><c> separation</c><00:28:08.799><c> so</c><00:28:09.309><c> it</c>

00:28:09.390 --> 00:28:09.400 align:start position:0%
so it's I seen Fran separation so it
 

00:28:09.400 --> 00:28:12.750 align:start position:0%
so it's I seen Fran separation so it
should<00:28:09.580><c> be</c><00:28:09.669><c> suspended</c><00:28:10.030><c> and</c><00:28:10.980><c> well</c><00:28:11.980><c> now</c><00:28:12.460><c> we</c><00:28:12.520><c> need</c>

00:28:12.750 --> 00:28:12.760 align:start position:0%
should be suspended and well now we need
 

00:28:12.760 --> 00:28:15.600 align:start position:0%
should be suspended and well now we need
somehow<00:28:13.360><c> connect</c><00:28:13.720><c> this</c><00:28:13.900><c> note</c><00:28:14.140><c> that</c><00:28:14.169><c> is</c><00:28:14.620><c> loaded</c>

00:28:15.600 --> 00:28:15.610 align:start position:0%
somehow connect this note that is loaded
 

00:28:15.610 --> 00:28:18.330 align:start position:0%
somehow connect this note that is loaded
in<00:28:15.730><c> one</c><00:28:16.120><c> scope</c><00:28:16.630><c> and</c><00:28:16.840><c> load</c><00:28:17.470><c> not</c><00:28:17.710><c> functions</c><00:28:18.159><c> will</c>

00:28:18.330 --> 00:28:18.340 align:start position:0%
in one scope and load not functions will
 

00:28:18.340 --> 00:28:21.120 align:start position:0%
in one scope and load not functions will
be<00:28:18.370><c> called</c><00:28:18.970><c> in</c><00:28:19.179><c> some</c><00:28:19.360><c> other</c><00:28:19.600><c> scope</c><00:28:19.990><c> well</c><00:28:20.890><c> I</c>

00:28:21.120 --> 00:28:21.130 align:start position:0%
be called in some other scope well I
 

00:28:21.130 --> 00:28:23.580 align:start position:0%
be called in some other scope well I
will<00:28:21.460><c> use</c><00:28:21.640><c> complete</c><00:28:22.390><c> deferrable</c><00:28:22.870><c> well</c><00:28:23.350><c> it</c>

00:28:23.580 --> 00:28:23.590 align:start position:0%
will use complete deferrable well it
 

00:28:23.590 --> 00:28:25.950 align:start position:0%
will use complete deferrable well it
sounds<00:28:23.980><c> a</c><00:28:24.070><c> bit</c><00:28:24.100><c> scary</c><00:28:24.549><c> but</c><00:28:24.850><c> it's</c><00:28:25.630><c> actually</c><00:28:25.929><c> a</c>

00:28:25.950 --> 00:28:25.960 align:start position:0%
sounds a bit scary but it's actually a
 

00:28:25.960 --> 00:28:27.539 align:start position:0%
sounds a bit scary but it's actually a
very<00:28:26.080><c> simple</c><00:28:26.320><c> thing</c><00:28:26.620><c> you</c><00:28:26.860><c> will</c><00:28:27.250><c> see</c><00:28:27.400><c> in</c><00:28:27.460><c> a</c>

00:28:27.539 --> 00:28:27.549 align:start position:0%
very simple thing you will see in a
 

00:28:27.549 --> 00:28:30.810 align:start position:0%
very simple thing you will see in a
second<00:28:27.909><c> so</c><00:28:28.450><c> how</c><00:28:28.750><c> we</c><00:28:28.809><c> use</c><00:28:29.140><c> it</c><00:28:29.289><c> we</c><00:28:29.830><c> complete</c><00:28:30.700><c> our</c>

00:28:30.810 --> 00:28:30.820 align:start position:0%
second so how we use it we complete our
 

00:28:30.820 --> 00:28:32.940 align:start position:0%
second so how we use it we complete our
deferred<00:28:31.360><c> with</c><00:28:31.720><c> a</c><00:28:31.750><c> note</c><00:28:32.020><c> that</c><00:28:32.200><c> we</c><00:28:32.350><c> loaded</c><00:28:32.530><c> it</c>

00:28:32.940 --> 00:28:32.950 align:start position:0%
deferred with a note that we loaded it
 

00:28:32.950 --> 00:28:35.190 align:start position:0%
deferred with a note that we loaded it
just<00:28:33.250><c> put</c><00:28:34.030><c> the</c><00:28:34.299><c> note</c><00:28:34.480><c> into</c><00:28:34.780><c> this</c><00:28:34.990><c> object</c>

00:28:35.190 --> 00:28:35.200 align:start position:0%
just put the note into this object
 

00:28:35.200 --> 00:28:41.159 align:start position:0%
just put the note into this object
nothing<00:28:36.270><c> happens</c><00:28:37.270><c> and</c><00:28:38.250><c> readers</c><00:28:39.840><c> request</c><00:28:40.840><c> the</c>

00:28:41.159 --> 00:28:41.169 align:start position:0%
nothing happens and readers request the
 

00:28:41.169 --> 00:28:43.620 align:start position:0%
nothing happens and readers request the
note<00:28:41.380><c> like</c><00:28:42.130><c> with</c><00:28:42.340><c> a</c><00:28:42.520><c> weight</c><00:28:42.789><c> function</c><00:28:43.030><c> from</c>

00:28:43.620 --> 00:28:43.630 align:start position:0%
note like with a weight function from
 

00:28:43.630 --> 00:28:46.700 align:start position:0%
note like with a weight function from
this<00:28:43.900><c> deferred</c><00:28:44.289><c> if</c><00:28:44.590><c> a</c><00:28:45.190><c> note</c><00:28:45.370><c> isn't</c><00:28:45.760><c> ready</c><00:28:46.000><c> yet</c>

00:28:46.700 --> 00:28:46.710 align:start position:0%
this deferred if a note isn't ready yet
 

00:28:46.710 --> 00:28:51.779 align:start position:0%
this deferred if a note isn't ready yet
then<00:28:48.270><c> the</c><00:28:49.270><c> reader</c><00:28:49.600><c> will</c><00:28:50.470><c> be</c><00:28:50.590><c> suspended</c><00:28:50.980><c> if</c><00:28:51.580><c> it</c>

00:28:51.779 --> 00:28:51.789 align:start position:0%
then the reader will be suspended if it
 

00:28:51.789 --> 00:28:55.740 align:start position:0%
then the reader will be suspended if it
is<00:28:51.909><c> ready</c><00:28:52.240><c> we</c><00:28:52.990><c> will</c><00:28:53.020><c> resumed</c><00:28:53.799><c> right</c><00:28:54.700><c> away</c><00:28:54.970><c> so</c>

00:28:55.740 --> 00:28:55.750 align:start position:0%
is ready we will resumed right away so
 

00:28:55.750 --> 00:28:58.560 align:start position:0%
is ready we will resumed right away so
this<00:28:55.990><c> is</c><00:28:56.280><c> how</c><00:28:57.280><c> implemented</c><00:28:57.850><c> our</c><00:28:58.030><c> review</c><00:28:58.299><c> model</c>

00:28:58.560 --> 00:28:58.570 align:start position:0%
this is how implemented our review model
 

00:28:58.570 --> 00:29:01.710 align:start position:0%
this is how implemented our review model
and<00:28:58.750><c> last</c><00:28:59.620><c> step</c><00:28:59.830><c> we</c><00:29:00.159><c> just</c><00:29:00.190><c> call</c><00:29:00.669><c> that</c><00:29:00.880><c> in</c><00:29:01.090><c> our</c>

00:29:01.710 --> 00:29:01.720 align:start position:0%
and last step we just call that in our
 

00:29:01.720 --> 00:29:05.399 align:start position:0%
and last step we just call that in our
lifecycle<00:29:02.230><c> scope</c><00:29:02.679><c> this</c><00:29:03.460><c> load</c><00:29:04.240><c> note</c><00:29:04.510><c> function</c>

00:29:05.399 --> 00:29:05.409 align:start position:0%
lifecycle scope this load note function
 

00:29:05.409 --> 00:29:07.580 align:start position:0%
lifecycle scope this load note function
that<00:29:05.530><c> we</c><00:29:05.710><c> introduced</c><00:29:06.100><c> in</c><00:29:06.250><c> a</c><00:29:06.370><c> view</c><00:29:06.549><c> model</c><00:29:06.730><c> and</c>

00:29:07.580 --> 00:29:07.590 align:start position:0%
that we introduced in a view model and
 

00:29:07.590 --> 00:29:11.700 align:start position:0%
that we introduced in a view model and
our<00:29:08.700><c> network</c><00:29:09.700><c> called</c><00:29:10.289><c> properly</c><00:29:11.289><c> is</c><00:29:11.440><c> is</c>

00:29:11.700 --> 00:29:11.710 align:start position:0%
our network called properly is is
 

00:29:11.710 --> 00:29:15.000 align:start position:0%
our network called properly is is
properly<00:29:12.250><c> executed</c><00:29:12.820><c> in</c><00:29:13.030><c> view</c><00:29:13.480><c> model</c><00:29:13.809><c> scope</c><00:29:14.740><c> so</c>

00:29:15.000 --> 00:29:15.010 align:start position:0%
properly executed in view model scope so
 

00:29:15.010 --> 00:29:17.010 align:start position:0%
properly executed in view model scope so
it's<00:29:15.190><c> not</c><00:29:15.340><c> affected</c><00:29:16.299><c> by</c><00:29:16.390><c> configuration</c>

00:29:17.010 --> 00:29:17.020 align:start position:0%
it's not affected by configuration
 

00:29:17.020 --> 00:29:19.980 align:start position:0%
it's not affected by configuration
changes<00:29:17.380><c> and</c><00:29:17.590><c> our</c><00:29:18.429><c> update</c><00:29:19.000><c> UI</c><00:29:19.299><c> function</c>

00:29:19.980 --> 00:29:19.990 align:start position:0%
changes and our update UI function
 

00:29:19.990 --> 00:29:23.549 align:start position:0%
changes and our update UI function
doesn't<00:29:20.770><c> leak</c><00:29:21.220><c> once</c><00:29:22.000><c> your</c><00:29:22.390><c> life</c><00:29:22.720><c> cycle</c><00:29:23.260><c> one</c>

00:29:23.549 --> 00:29:23.559 align:start position:0%
doesn't leak once your life cycle one
 

00:29:23.559 --> 00:29:27.180 align:start position:0%
doesn't leak once your life cycle one
cycle<00:29:23.590><c> owner</c><00:29:24.039><c> gets</c><00:29:24.669><c> destroyed</c><00:29:25.500><c> however</c><00:29:26.500><c> once</c>

00:29:27.180 --> 00:29:27.190 align:start position:0%
cycle owner gets destroyed however once
 

00:29:27.190 --> 00:29:28.529 align:start position:0%
cycle owner gets destroyed however once
we<00:29:27.370><c> add</c><00:29:27.520><c> the</c><00:29:27.640><c> fragment</c><00:29:28.059><c> into</c><00:29:28.270><c> the</c><00:29:28.330><c> picture</c>

00:29:28.529 --> 00:29:28.539 align:start position:0%
we add the fragment into the picture
 

00:29:28.539 --> 00:29:31.529 align:start position:0%
we add the fragment into the picture
things<00:29:29.320><c> get</c><00:29:29.559><c> complicated</c><00:29:29.860><c> as</c><00:29:30.280><c> always</c><00:29:30.850><c> so</c>

00:29:31.529 --> 00:29:31.539 align:start position:0%
things get complicated as always so
 

00:29:31.539 --> 00:29:33.570 align:start position:0%
things get complicated as always so
right<00:29:32.320><c> we</c><00:29:32.590><c> decided</c><00:29:32.919><c> to</c><00:29:32.980><c> run</c><00:29:33.100><c> the</c><00:29:33.220><c> fragment</c>

00:29:33.570 --> 00:29:33.580 align:start position:0%
right we decided to run the fragment
 

00:29:33.580 --> 00:29:36.120 align:start position:0%
right we decided to run the fragment
transaction<00:29:34.090><c> and</c><00:29:34.270><c> you</c><00:29:34.780><c> will</c><00:29:34.929><c> get</c><00:29:35.230><c> a</c><00:29:35.500><c> legal</c>

00:29:36.120 --> 00:29:36.130 align:start position:0%
transaction and you will get a legal
 

00:29:36.130 --> 00:29:38.070 align:start position:0%
transaction and you will get a legal
state<00:29:36.429><c> exception</c><00:29:36.909><c> because</c><00:29:37.210><c> nothing</c>

00:29:38.070 --> 00:29:38.080 align:start position:0%
state exception because nothing
 

00:29:38.080 --> 00:29:40.020 align:start position:0%
state exception because nothing
guarantees<00:29:38.530><c> you</c><00:29:38.710><c> that</c><00:29:38.890><c> you</c><00:29:39.669><c> are</c><00:29:39.789><c> in</c><00:29:39.909><c> the</c>

00:29:40.020 --> 00:29:40.030 align:start position:0%
guarantees you that you are in the
 

00:29:40.030 --> 00:29:43.680 align:start position:0%
guarantees you that you are in the
correct<00:29:40.270><c> state</c><00:29:40.780><c> that</c><00:29:41.559><c> allows</c><00:29:42.039><c> you</c><00:29:42.370><c> to</c><00:29:42.850><c> execute</c>

00:29:43.680 --> 00:29:43.690 align:start position:0%
correct state that allows you to execute
 

00:29:43.690 --> 00:29:46.289 align:start position:0%
correct state that allows you to execute
fragment<00:29:44.289><c> transaction</c><00:29:44.799><c> and</c><00:29:45.090><c> we</c><00:29:46.090><c> did</c>

00:29:46.289 --> 00:29:46.299 align:start position:0%
fragment transaction and we did
 

00:29:46.299 --> 00:29:48.720 align:start position:0%
fragment transaction and we did
something<00:29:46.870><c> smart</c><00:29:47.409><c> and</c><00:29:47.650><c> introduced</c><00:29:48.429><c> some</c>

00:29:48.720 --> 00:29:48.730 align:start position:0%
something smart and introduced some
 

00:29:48.730 --> 00:29:51.330 align:start position:0%
something smart and introduced some
special<00:29:49.179><c> function</c><00:29:49.600><c> that</c><00:29:49.960><c> help</c><00:29:50.860><c> you</c><00:29:50.980><c> to</c><00:29:51.130><c> deal</c>

00:29:51.330 --> 00:29:51.340 align:start position:0%
special function that help you to deal
 

00:29:51.340 --> 00:29:54.480 align:start position:0%
special function that help you to deal
with<00:29:51.580><c> these</c><00:29:51.789><c> kind</c><00:29:52.150><c> of</c><00:29:52.210><c> situations</c><00:29:52.450><c> and</c><00:29:53.490><c> this</c>

00:29:54.480 --> 00:29:54.490 align:start position:0%
with these kind of situations and this
 

00:29:54.490 --> 00:29:56.399 align:start position:0%
with these kind of situations and this
is<00:29:54.640><c> going</c><00:29:54.820><c> to</c><00:29:54.909><c> be</c><00:29:55.000><c> a</c><00:29:55.030><c> bit</c><00:29:55.179><c> tricky</c><00:29:55.450><c> because</c><00:29:56.020><c> it's</c>

00:29:56.399 --> 00:29:56.409 align:start position:0%
is going to be a bit tricky because it's
 

00:29:56.409 --> 00:29:59.310 align:start position:0%
is going to be a bit tricky because it's
actually<00:29:57.419><c> fairly</c><00:29:58.419><c> complicated</c><00:29:58.690><c> things</c><00:29:59.200><c> but</c>

00:29:59.310 --> 00:29:59.320 align:start position:0%
actually fairly complicated things but
 

00:29:59.320 --> 00:30:03.029 align:start position:0%
actually fairly complicated things but
what<00:30:00.250><c> it</c><00:30:00.370><c> does</c><00:30:00.580><c> this</c><00:30:01.419><c> block</c><00:30:01.780><c> will</c><00:30:02.080><c> run</c><00:30:02.350><c> only</c>

00:30:03.029 --> 00:30:03.039 align:start position:0%
what it does this block will run only
 

00:30:03.039 --> 00:30:05.880 align:start position:0%
what it does this block will run only
when<00:30:03.580><c> your</c><00:30:03.850><c> application</c><00:30:04.630><c> is</c><00:30:04.840><c> started</c><00:30:05.500><c> or</c>

00:30:05.880 --> 00:30:05.890 align:start position:0%
when your application is started or
 

00:30:05.890 --> 00:30:08.130 align:start position:0%
when your application is started or
resumed<00:30:06.460><c> meaning</c><00:30:07.360><c> that</c><00:30:07.510><c> is</c><00:30:07.659><c> enough</c><00:30:07.929><c> for</c><00:30:08.110><c> a</c>

00:30:08.130 --> 00:30:08.140 align:start position:0%
resumed meaning that is enough for a
 

00:30:08.140 --> 00:30:11.430 align:start position:0%
resumed meaning that is enough for a
ground<00:30:08.470><c> and</c><00:30:09.270><c> this</c><00:30:10.270><c> block</c><00:30:10.510><c> will</c><00:30:10.690><c> be</c><00:30:10.840><c> suspended</c>

00:30:11.430 --> 00:30:11.440 align:start position:0%
ground and this block will be suspended
 

00:30:11.440 --> 00:30:14.310 align:start position:0%
ground and this block will be suspended
when<00:30:12.340><c> the</c><00:30:12.520><c> application</c><00:30:13.000><c> is</c><00:30:13.210><c> when</c><00:30:13.840><c> your</c><00:30:14.049><c> life</c>

00:30:14.310 --> 00:30:14.320 align:start position:0%
when the application is when your life
 

00:30:14.320 --> 00:30:17.310 align:start position:0%
when the application is when your life
cycle<00:30:14.650><c> is</c><00:30:14.770><c> just</c><00:30:15.100><c> created</c><00:30:15.880><c> so</c><00:30:16.780><c> let's</c><00:30:17.020><c> take</c><00:30:17.289><c> a</c>

00:30:17.310 --> 00:30:17.320 align:start position:0%
cycle is just created so let's take a
 

00:30:17.320 --> 00:30:18.990 align:start position:0%
cycle is just created so let's take a
look<00:30:17.500><c> on</c><00:30:17.590><c> an</c><00:30:17.770><c> example</c><00:30:18.520><c> what</c><00:30:18.730><c> it</c><00:30:18.850><c> actually</c>

00:30:18.990 --> 00:30:19.000 align:start position:0%
look on an example what it actually
 

00:30:19.000 --> 00:30:20.470 align:start position:0%
look on an example what it actually
means<00:30:19.299><c> so</c>

00:30:20.470 --> 00:30:20.480 align:start position:0%
means so
 

00:30:20.480 --> 00:30:23.920 align:start position:0%
means so
you<00:30:20.780><c> have</c><00:30:20.930><c> this</c><00:30:21.050><c> function</c><00:30:21.560><c> I</c><00:30:21.770><c> read</c><00:30:22.730><c> it</c><00:30:23.690><c> is</c>

00:30:23.920 --> 00:30:23.930 align:start position:0%
you have this function I read it is
 

00:30:23.930 --> 00:30:26.710 align:start position:0%
you have this function I read it is
called<00:30:24.200><c> probably</c><00:30:25.040><c> in</c><00:30:25.250><c> the</c><00:30:25.400><c> beginning</c><00:30:25.790><c> your</c>

00:30:26.710 --> 00:30:26.720 align:start position:0%
called probably in the beginning your
 

00:30:26.720 --> 00:30:29.080 align:start position:0%
called probably in the beginning your
block<00:30:27.680><c> will</c><00:30:27.860><c> be</c><00:30:27.890><c> suspended</c><00:30:28.490><c> because</c><00:30:28.580><c> note</c><00:30:28.940><c> is</c>

00:30:29.080 --> 00:30:29.090 align:start position:0%
block will be suspended because note is
 

00:30:29.090 --> 00:30:33.940 align:start position:0%
block will be suspended because note is
not<00:30:29.270><c> ready</c><00:30:29.560><c> then</c><00:30:30.560><c> once</c><00:30:31.430><c> is</c><00:30:31.760><c> ready</c><00:30:32.030><c> in</c><00:30:32.950><c> usual</c>

00:30:33.940 --> 00:30:33.950 align:start position:0%
not ready then once is ready in usual
 

00:30:33.950 --> 00:30:37.990 align:start position:0%
not ready then once is ready in usual
situation<00:30:35.200><c> we</c><00:30:36.200><c> would</c><00:30:36.350><c> resume</c><00:30:37.250><c> execution</c><00:30:37.400><c> and</c>

00:30:37.990 --> 00:30:38.000 align:start position:0%
situation we would resume execution and
 

00:30:38.000 --> 00:30:39.220 align:start position:0%
situation we would resume execution and
proceed<00:30:38.390><c> to</c><00:30:38.480><c> the</c><00:30:38.570><c> next</c><00:30:38.720><c> line</c>

00:30:39.220 --> 00:30:39.230 align:start position:0%
proceed to the next line
 

00:30:39.230 --> 00:30:41.440 align:start position:0%
proceed to the next line
but<00:30:39.710><c> with</c><00:30:39.920><c> lunch</c><00:30:40.430><c> when</c><00:30:40.610><c> started</c><00:30:41.030><c> function</c>

00:30:41.440 --> 00:30:41.450 align:start position:0%
but with lunch when started function
 

00:30:41.450 --> 00:30:45.130 align:start position:0%
but with lunch when started function
we're<00:30:42.290><c> going</c><00:30:42.590><c> to</c><00:30:42.950><c> go</c><00:30:43.430><c> and</c><00:30:43.700><c> check</c><00:30:44.090><c> life</c><00:30:44.720><c> cycle</c>

00:30:45.130 --> 00:30:45.140 align:start position:0%
we're going to go and check life cycle
 

00:30:45.140 --> 00:30:48.190 align:start position:0%
we're going to go and check life cycle
if<00:30:45.320><c> it</c><00:30:45.530><c> is</c><00:30:45.740><c> not</c><00:30:45.980><c> started</c><00:30:46.310><c> we</c><00:30:47.270><c> going</c><00:30:47.480><c> suspend</c>

00:30:48.190 --> 00:30:48.200 align:start position:0%
if it is not started we going suspend
 

00:30:48.200 --> 00:30:50.800 align:start position:0%
if it is not started we going suspend
forever<00:30:48.830><c> until</c><00:30:49.310><c> the</c><00:30:49.460><c> life</c><00:30:49.610><c> cycle</c><00:30:50.030><c> will</c><00:30:50.390><c> become</c>

00:30:50.800 --> 00:30:50.810 align:start position:0%
forever until the life cycle will become
 

00:30:50.810 --> 00:30:53.770 align:start position:0%
forever until the life cycle will become
started<00:30:51.380><c> again</c><00:30:51.800><c> and</c><00:30:52.010><c> once</c><00:30:52.880><c> it</c><00:30:53.060><c> is</c><00:30:53.090><c> started</c>

00:30:53.770 --> 00:30:53.780 align:start position:0%
started again and once it is started
 

00:30:53.780 --> 00:30:56.350 align:start position:0%
started again and once it is started
when<00:30:54.530><c> we're</c><00:30:54.980><c> going</c><00:30:55.160><c> to</c><00:30:55.280><c> proceed</c><00:30:55.820><c> to</c><00:30:56.000><c> the</c><00:30:56.090><c> next</c>

00:30:56.350 --> 00:30:56.360 align:start position:0%
when we're going to proceed to the next
 

00:30:56.360 --> 00:30:57.910 align:start position:0%
when we're going to proceed to the next
line<00:30:56.540><c> and</c><00:30:56.780><c> in</c><00:30:56.930><c> the</c><00:30:56.960><c> execute</c><00:30:57.410><c> this</c><00:30:57.530><c> transaction</c>

00:30:57.910 --> 00:30:57.920 align:start position:0%
line and in the execute this transaction
 

00:30:57.920 --> 00:31:02.320 align:start position:0%
line and in the execute this transaction
so<00:30:58.790><c> we</c><00:30:58.970><c> won't</c><00:30:59.240><c> run</c><00:30:59.570><c> into</c><00:30:59.840><c> this</c><00:31:01.330><c> exception</c>

00:31:02.320 --> 00:31:02.330 align:start position:0%
so we won't run into this exception
 

00:31:02.330 --> 00:31:05.320 align:start position:0%
so we won't run into this exception
situation<00:31:02.840><c> so</c><00:31:03.580><c> one</c><00:31:04.580><c> thing</c><00:31:04.790><c> I</c><00:31:04.940><c> want</c><00:31:05.150><c> to</c>

00:31:05.320 --> 00:31:05.330 align:start position:0%
situation so one thing I want to
 

00:31:05.330 --> 00:31:10.000 align:start position:0%
situation so one thing I want to
highlight<00:31:05.990><c> that</c><00:31:07.000><c> this</c><00:31:08.000><c> block</c><00:31:08.840><c> is</c><00:31:09.110><c> suspended</c>

00:31:10.000 --> 00:31:10.010 align:start position:0%
highlight that this block is suspended
 

00:31:10.010 --> 00:31:11.770 align:start position:0%
highlight that this block is suspended
during<00:31:10.130><c> creation</c><00:31:10.520><c> and</c><00:31:11.000><c> it's</c><00:31:11.180><c> a</c><00:31:11.330><c> different</c>

00:31:11.770 --> 00:31:11.780 align:start position:0%
during creation and it's a different
 

00:31:11.780 --> 00:31:14.200 align:start position:0%
during creation and it's a different
frame<00:31:11.990><c> from</c><00:31:12.350><c> being</c><00:31:12.620><c> canceled</c><00:31:13.430><c> because</c>

00:31:14.200 --> 00:31:14.210 align:start position:0%
frame from being canceled because
 

00:31:14.210 --> 00:31:16.840 align:start position:0%
frame from being canceled because
cancellation<00:31:15.200><c> is</c><00:31:15.380><c> still</c><00:31:15.770><c> provided</c><00:31:16.370><c> where</c>

00:31:16.840 --> 00:31:16.850 align:start position:0%
cancellation is still provided where
 

00:31:16.850 --> 00:31:19.300 align:start position:0%
cancellation is still provided where
lifecycle<00:31:17.420><c> scope</c><00:31:17.690><c> when</c><00:31:18.350><c> destroy</c><00:31:19.040><c> haven't</c>

00:31:19.300 --> 00:31:19.310 align:start position:0%
lifecycle scope when destroy haven't
 

00:31:19.310 --> 00:31:24.220 align:start position:0%
lifecycle scope when destroy haven't
happen<00:31:19.730><c> and</c><00:31:20.920><c> now</c><00:31:21.920><c> as</c><00:31:22.370><c> you</c><00:31:22.760><c> can</c><00:31:23.120><c> see</c><00:31:23.300><c> we</c><00:31:23.870><c> it's</c>

00:31:24.220 --> 00:31:24.230 align:start position:0%
happen and now as you can see we it's
 

00:31:24.230 --> 00:31:25.510 align:start position:0%
happen and now as you can see we it's
something<00:31:24.620><c> that</c><00:31:24.740><c> we</c><00:31:24.860><c> definitely</c><00:31:25.100><c> need</c><00:31:25.400><c> to</c>

00:31:25.510 --> 00:31:25.520 align:start position:0%
something that we definitely need to
 

00:31:25.520 --> 00:31:26.590 align:start position:0%
something that we definitely need to
test<00:31:25.820><c> and</c><00:31:26.060><c> Chango</c>

00:31:26.590 --> 00:31:26.600 align:start position:0%
test and Chango
 

00:31:26.600 --> 00:31:30.850 align:start position:0%
test and Chango
how<00:31:26.930><c> do</c><00:31:26.990><c> that</c><00:31:28.030><c> thanks</c><00:31:29.030><c> Sergey</c><00:31:29.500><c> so</c><00:31:30.500><c> we</c><00:31:30.590><c> talk</c><00:31:30.770><c> to</c>

00:31:30.850 --> 00:31:30.860 align:start position:0%
how do that thanks Sergey so we talk to
 

00:31:30.860 --> 00:31:32.200 align:start position:0%
how do that thanks Sergey so we talk to
you<00:31:30.920><c> a</c><00:31:30.980><c> lot</c><00:31:31.220><c> about</c><00:31:31.250><c> car</c><00:31:31.640><c> routines</c><00:31:31.880><c> today</c><00:31:32.090><c> we</c>

00:31:32.200 --> 00:31:32.210 align:start position:0%
you a lot about car routines today we
 

00:31:32.210 --> 00:31:33.730 align:start position:0%
you a lot about car routines today we
talked<00:31:32.420><c> about</c><00:31:32.540><c> how</c><00:31:32.840><c> they</c><00:31:33.110><c> can</c><00:31:33.260><c> help</c><00:31:33.440><c> clean</c><00:31:33.710><c> up</c>

00:31:33.730 --> 00:31:33.740 align:start position:0%
talked about how they can help clean up
 

00:31:33.740 --> 00:31:35.770 align:start position:0%
talked about how they can help clean up
api's<00:31:34.250><c> by</c><00:31:34.640><c> replacing</c><00:31:35.270><c> callbacks</c><00:31:35.630><c> with</c>

00:31:35.770 --> 00:31:35.780 align:start position:0%
api's by replacing callbacks with
 

00:31:35.780 --> 00:31:37.030 align:start position:0%
api's by replacing callbacks with
suspend<00:31:36.110><c> and</c><00:31:36.260><c> resume</c><00:31:36.320><c> we</c><00:31:36.710><c> talked</c><00:31:36.920><c> about</c>

00:31:37.030 --> 00:31:37.040 align:start position:0%
suspend and resume we talked about
 

00:31:37.040 --> 00:31:39.160 align:start position:0%
suspend and resume we talked about
different<00:31:37.730><c> ways</c><00:31:37.760><c> they</c><00:31:38.240><c> can</c><00:31:38.300><c> be</c><00:31:38.480><c> used</c><00:31:38.660><c> in</c>

00:31:39.160 --> 00:31:39.170 align:start position:0%
different ways they can be used in
 

00:31:39.170 --> 00:31:41.410 align:start position:0%
different ways they can be used in
different<00:31:39.290><c> situations</c><00:31:39.590><c> and</c><00:31:40.400><c> that's</c><00:31:41.180><c> all</c>

00:31:41.410 --> 00:31:41.420 align:start position:0%
different situations and that's all
 

00:31:41.420 --> 00:31:43.330 align:start position:0%
different situations and that's all
great<00:31:41.600><c> that's</c><00:31:41.990><c> awesome</c><00:31:42.380><c> but</c><00:31:43.010><c> if</c><00:31:43.130><c> they</c><00:31:43.280><c> were</c>

00:31:43.330 --> 00:31:43.340 align:start position:0%
great that's awesome but if they were
 

00:31:43.340 --> 00:31:45.400 align:start position:0%
great that's awesome but if they were
difficult<00:31:43.850><c> to</c><00:31:43.970><c> test</c><00:31:44.240><c> that</c><00:31:45.080><c> just</c><00:31:45.140><c> be</c><00:31:45.380><c> a</c>

00:31:45.400 --> 00:31:45.410 align:start position:0%
difficult to test that just be a
 

00:31:45.410 --> 00:31:46.690 align:start position:0%
difficult to test that just be a
non-starter<00:31:45.890><c> it</c><00:31:46.220><c> wouldn't</c><00:31:46.460><c> be</c><00:31:46.520><c> something</c>

00:31:46.690 --> 00:31:46.700 align:start position:0%
non-starter it wouldn't be something
 

00:31:46.700 --> 00:31:48.460 align:start position:0%
non-starter it wouldn't be something
that<00:31:47.000><c> I</c><00:31:47.030><c> would</c><00:31:47.180><c> take</c><00:31:47.420><c> very</c><00:31:47.630><c> seriously</c><00:31:48.110><c> as</c><00:31:48.440><c> a</c>

00:31:48.460 --> 00:31:48.470 align:start position:0%
that I would take very seriously as a
 

00:31:48.470 --> 00:31:52.300 align:start position:0%
that I would take very seriously as a
thing<00:31:49.010><c> to</c><00:31:49.130><c> use</c><00:31:50.200><c> so</c><00:31:51.200><c> what</c><00:31:51.830><c> I</c><00:31:51.890><c> want</c><00:31:52.040><c> to</c><00:31:52.100><c> talk</c><00:31:52.160><c> to</c>

00:31:52.300 --> 00:31:52.310 align:start position:0%
thing to use so what I want to talk to
 

00:31:52.310 --> 00:31:54.400 align:start position:0%
thing to use so what I want to talk to
you<00:31:52.400><c> about</c><00:31:52.460><c> right</c><00:31:52.760><c> now</c><00:31:52.970><c> is</c><00:31:53.240><c> Kotlin</c><00:31:53.840><c> XK</c><00:31:54.140><c> routine</c>

00:31:54.400 --> 00:31:54.410 align:start position:0%
you about right now is Kotlin XK routine
 

00:31:54.410 --> 00:31:56.800 align:start position:0%
you about right now is Kotlin XK routine
test<00:31:54.620><c> it's</c><00:31:55.340><c> a</c><00:31:55.520><c> new</c><00:31:55.850><c> library</c><00:31:56.060><c> came</c><00:31:56.450><c> out</c><00:31:56.570><c> about</c><00:31:56.690><c> a</c>

00:31:56.800 --> 00:31:56.810 align:start position:0%
test it's a new library came out about a
 

00:31:56.810 --> 00:31:59.140 align:start position:0%
test it's a new library came out about a
week<00:31:57.050><c> and</c><00:31:57.170><c> a</c><00:31:57.230><c> half</c><00:31:57.260><c> ago</c><00:31:57.730><c> that's</c><00:31:58.730><c> currently</c>

00:31:59.140 --> 00:31:59.150 align:start position:0%
week and a half ago that's currently
 

00:31:59.150 --> 00:32:02.350 align:start position:0%
week and a half ago that's currently
marked<00:32:00.370><c> experimental</c><00:32:01.370><c> car</c><00:32:01.610><c> routines</c><00:32:01.940><c> API</c>

00:32:02.350 --> 00:32:02.360 align:start position:0%
marked experimental car routines API
 

00:32:02.360 --> 00:32:04.630 align:start position:0%
marked experimental car routines API
because<00:32:03.260><c> it</c><00:32:03.470><c> needs</c><00:32:03.680><c> it</c><00:32:04.130><c> needs</c><00:32:04.190><c> more</c><00:32:04.400><c> feedback</c>

00:32:04.630 --> 00:32:04.640 align:start position:0%
because it needs it needs more feedback
 

00:32:04.640 --> 00:32:05.860 align:start position:0%
because it needs it needs more feedback
before<00:32:04.910><c> it</c><00:32:05.150><c> makes</c><00:32:05.240><c> it</c><00:32:05.420><c> all</c><00:32:05.540><c> the</c><00:32:05.630><c> way</c><00:32:05.690><c> to</c><00:32:05.750><c> the</c>

00:32:05.860 --> 00:32:05.870 align:start position:0%
before it makes it all the way to the
 

00:32:05.870 --> 00:32:07.840 align:start position:0%
before it makes it all the way to the
stable<00:32:06.230><c> it's</c><00:32:06.710><c> a</c><00:32:06.860><c> collaboration</c><00:32:07.430><c> between</c>

00:32:07.840 --> 00:32:07.850 align:start position:0%
stable it's a collaboration between
 

00:32:07.850 --> 00:32:10.870 align:start position:0%
stable it's a collaboration between
Google<00:32:08.300><c> and</c><00:32:08.600><c> JetBrains</c><00:32:09.020><c> to</c><00:32:09.260><c> make</c><00:32:09.880><c> testing</c>

00:32:10.870 --> 00:32:10.880 align:start position:0%
Google and JetBrains to make testing
 

00:32:10.880 --> 00:32:14.410 align:start position:0%
Google and JetBrains to make testing
cover<00:32:11.120><c> teens</c><00:32:11.390><c> on</c><00:32:11.540><c> Android</c><00:32:11.990><c> very</c><00:32:12.800><c> easy</c><00:32:13.270><c> so</c><00:32:14.270><c> it's</c>

00:32:14.410 --> 00:32:14.420 align:start position:0%
cover teens on Android very easy so it's
 

00:32:14.420 --> 00:32:17.020 align:start position:0%
cover teens on Android very easy so it's
not<00:32:14.630><c> coupled</c><00:32:15.200><c> to</c><00:32:15.320><c> any</c><00:32:15.560><c> testing</c><00:32:16.220><c> libraries</c><00:32:16.670><c> so</c>

00:32:17.020 --> 00:32:17.030 align:start position:0%
not coupled to any testing libraries so
 

00:32:17.030 --> 00:32:19.420 align:start position:0%
not coupled to any testing libraries so
you<00:32:17.060><c> can</c><00:32:17.450><c> use</c><00:32:17.660><c> J</c><00:32:18.020><c> unifor</c><00:32:18.470><c> you</c><00:32:18.740><c> can</c><00:32:18.890><c> use</c><00:32:19.010><c> J</c><00:32:19.280><c> unit</c>

00:32:19.420 --> 00:32:19.430 align:start position:0%
you can use J unifor you can use J unit
 

00:32:19.430 --> 00:32:21.880 align:start position:0%
you can use J unifor you can use J unit
5<00:32:19.760><c> you</c><00:32:20.360><c> can</c><00:32:20.510><c> use</c><00:32:20.660><c> your</c><00:32:20.990><c> own</c><00:32:21.140><c> custom</c><00:32:21.440><c> test</c>

00:32:21.880 --> 00:32:21.890 align:start position:0%
5 you can use your own custom test
 

00:32:21.890 --> 00:32:23.650 align:start position:0%
5 you can use your own custom test
runner<00:32:22.100><c> that</c><00:32:22.190><c> you've</c><00:32:22.580><c> built</c><00:32:22.820><c> and</c><00:32:23.150><c> this</c>

00:32:23.650 --> 00:32:23.660 align:start position:0%
runner that you've built and this
 

00:32:23.660 --> 00:32:24.910 align:start position:0%
runner that you've built and this
library<00:32:23.840><c> is</c><00:32:24.020><c> going</c><00:32:24.140><c> to</c><00:32:24.200><c> help</c><00:32:24.380><c> you</c><00:32:24.470><c> test</c><00:32:24.680><c> pair</c>

00:32:24.910 --> 00:32:24.920 align:start position:0%
library is going to help you test pair
 

00:32:24.920 --> 00:32:25.990 align:start position:0%
library is going to help you test pair
routines

00:32:25.990 --> 00:32:26.000 align:start position:0%
routines
 

00:32:26.000 --> 00:32:28.900 align:start position:0%
routines
so<00:32:26.750><c> I'm</c><00:32:26.900><c> gonna</c><00:32:27.050><c> focus</c><00:32:27.560><c> in</c><00:32:27.950><c> on</c><00:32:28.160><c> that</c><00:32:28.400><c> live</c><00:32:28.640><c> data</c>

00:32:28.900 --> 00:32:28.910 align:start position:0%
so I'm gonna focus in on that live data
 

00:32:28.910 --> 00:32:30.400 align:start position:0%
so I'm gonna focus in on that live data
builder<00:32:29.210><c> that</c><00:32:29.480><c> each</c><00:32:29.690><c> showed</c><00:32:30.020><c> and</c><00:32:30.230><c> we're</c><00:32:30.320><c> gonna</c>

00:32:30.400 --> 00:32:30.410 align:start position:0%
builder that each showed and we're gonna
 

00:32:30.410 --> 00:32:31.810 align:start position:0%
builder that each showed and we're gonna
talk<00:32:30.590><c> about</c><00:32:30.620><c> how</c><00:32:30.950><c> to</c><00:32:31.010><c> write</c><00:32:31.190><c> a</c><00:32:31.250><c> test</c><00:32:31.340><c> for</c><00:32:31.640><c> that</c>

00:32:31.810 --> 00:32:31.820 align:start position:0%
talk about how to write a test for that
 

00:32:31.820 --> 00:32:33.970 align:start position:0%
talk about how to write a test for that
so<00:32:32.750><c> I'm</c><00:32:32.810><c> just</c><00:32:32.930><c> gonna</c><00:32:33.020><c> omit</c><00:32:33.440><c> one</c>

00:32:33.970 --> 00:32:33.980 align:start position:0%
so I'm just gonna omit one
 

00:32:33.980 --> 00:32:35.440 align:start position:0%
so I'm just gonna omit one
I'm<00:32:34.130><c> gonna</c><00:32:34.340><c> wait</c><00:32:34.580><c> a</c><00:32:34.610><c> second</c><00:32:35.120><c> and</c><00:32:35.240><c> then</c><00:32:35.390><c> I'm</c>

00:32:35.440 --> 00:32:35.450 align:start position:0%
I'm gonna wait a second and then I'm
 

00:32:35.450 --> 00:32:37.510 align:start position:0%
I'm gonna wait a second and then I'm
gonna<00:32:35.570><c> admit</c><00:32:35.750><c> to</c><00:32:35.840><c> so</c><00:32:36.230><c> this</c><00:32:36.320><c> is</c><00:32:36.410><c> a</c><00:32:36.520><c> relatively</c>

00:32:37.510 --> 00:32:37.520 align:start position:0%
gonna admit to so this is a relatively
 

00:32:37.520 --> 00:32:39.430 align:start position:0%
gonna admit to so this is a relatively
simple<00:32:37.850><c> live</c><00:32:38.210><c> data</c><00:32:38.480><c> so</c><00:32:38.630><c> I</c><00:32:38.690><c> can</c><00:32:38.840><c> focus</c><00:32:39.020><c> in</c><00:32:39.410><c> on</c>

00:32:39.430 --> 00:32:39.440 align:start position:0%
simple live data so I can focus in on
 

00:32:39.440 --> 00:32:42.880 align:start position:0%
simple live data so I can focus in on
how<00:32:40.310><c> to</c><00:32:40.370><c> write</c><00:32:40.610><c> the</c><00:32:40.730><c> test</c><00:32:40.940><c> for</c><00:32:41.210><c> it</c><00:32:41.680><c> so</c><00:32:42.680><c> to</c><00:32:42.770><c> get</c>

00:32:42.880 --> 00:32:42.890 align:start position:0%
how to write the test for it so to get
 

00:32:42.890 --> 00:32:45.010 align:start position:0%
how to write the test for it so to get
started<00:32:43.100><c> we</c><00:32:43.880><c> need</c><00:32:43.910><c> to</c><00:32:44.150><c> mock</c><00:32:44.360><c> out</c><00:32:44.570><c> that</c><00:32:44.780><c> main</c>

00:32:45.010 --> 00:32:45.020 align:start position:0%
started we need to mock out that main
 

00:32:45.020 --> 00:32:48.400 align:start position:0%
started we need to mock out that main
dispatcher<00:32:45.820><c> the</c><00:32:46.820><c> wipe</c><00:32:47.270><c> data</c><00:32:47.510><c> builder</c><00:32:47.840><c> uses</c>

00:32:48.400 --> 00:32:48.410 align:start position:0%
dispatcher the wipe data builder uses
 

00:32:48.410 --> 00:32:50.530 align:start position:0%
dispatcher the wipe data builder uses
dispatchers<00:32:49.010><c> not</c><00:32:49.190><c> mean</c><00:32:49.400><c> by</c><00:32:49.610><c> default</c><00:32:50.060><c> which</c><00:32:50.330><c> is</c>

00:32:50.530 --> 00:32:50.540 align:start position:0%
dispatchers not mean by default which is
 

00:32:50.540 --> 00:32:53.020 align:start position:0%
dispatchers not mean by default which is
the<00:32:50.750><c> actual</c><00:32:51.080><c> main</c><00:32:51.260><c> threat</c><00:32:51.500><c> on</c><00:32:51.620><c> Android</c><00:32:52.040><c> we</c><00:32:52.910><c> can</c>

00:32:53.020 --> 00:32:53.030 align:start position:0%
the actual main threat on Android we can
 

00:32:53.030 --> 00:32:55.090 align:start position:0%
the actual main threat on Android we can
replace<00:32:53.360><c> it</c><00:32:53.480><c> with</c><00:32:53.870><c> a</c><00:32:53.990><c> test</c><00:32:54.560><c> co-routine</c>

00:32:55.090 --> 00:32:55.100 align:start position:0%
replace it with a test co-routine
 

00:32:55.100 --> 00:32:57.340 align:start position:0%
replace it with a test co-routine
dispatcher<00:32:55.460><c> this</c><00:32:56.000><c> is</c><00:32:56.210><c> a</c><00:32:56.240><c> special</c><00:32:56.990><c> dispatcher</c>

00:32:57.340 --> 00:32:57.350 align:start position:0%
dispatcher this is a special dispatcher
 

00:32:57.350 --> 00:33:00.130 align:start position:0%
dispatcher this is a special dispatcher
designed<00:32:57.890><c> for</c><00:32:58.220><c> testing</c><00:32:58.670><c> carotenes</c><00:32:59.120><c> and</c><00:32:59.270><c> we</c>

00:33:00.130 --> 00:33:00.140 align:start position:0%
designed for testing carotenes and we
 

00:33:00.140 --> 00:33:02.440 align:start position:0%
designed for testing carotenes and we
can<00:33:00.290><c> make</c><00:33:00.410><c> a</c><00:33:00.440><c> test</c><00:33:00.920><c> correcting</c><00:33:01.460><c> scope</c><00:33:01.760><c> this</c><00:33:02.240><c> is</c>

00:33:02.440 --> 00:33:02.450 align:start position:0%
can make a test correcting scope this is
 

00:33:02.450 --> 00:33:04.180 align:start position:0%
can make a test correcting scope this is
a<00:33:02.480><c> scope</c><00:33:02.990><c> designed</c><00:33:03.470><c> for</c><00:33:03.650><c> testing</c><00:33:03.830><c> care</c>

00:33:04.180 --> 00:33:04.190 align:start position:0%
a scope designed for testing care
 

00:33:04.190 --> 00:33:07.510 align:start position:0%
a scope designed for testing care
routines<00:33:04.570><c> so</c><00:33:05.570><c> then</c><00:33:05.720><c> in</c><00:33:05.840><c> setup</c><00:33:06.380><c> you</c><00:33:06.980><c> can</c><00:33:07.160><c> switch</c>

00:33:07.510 --> 00:33:07.520 align:start position:0%
routines so then in setup you can switch
 

00:33:07.520 --> 00:33:10.300 align:start position:0%
routines so then in setup you can switch
out<00:33:07.730><c> dispatchers</c><00:33:08.360><c> that</c><00:33:08.390><c> main</c><00:33:08.810><c> for</c><00:33:09.530><c> a</c><00:33:09.830><c> testing</c>

00:33:10.300 --> 00:33:10.310 align:start position:0%
out dispatchers that main for a testing
 

00:33:10.310 --> 00:33:12.250 align:start position:0%
out dispatchers that main for a testing
dispatcher<00:33:10.670><c> this</c><00:33:11.330><c> will</c><00:33:11.510><c> change</c><00:33:11.780><c> the</c><00:33:12.050><c> global</c>

00:33:12.250 --> 00:33:12.260 align:start position:0%
dispatcher this will change the global
 

00:33:12.260 --> 00:33:13.780 align:start position:0%
dispatcher this will change the global
value<00:33:12.740><c> for</c><00:33:12.950><c> dispatchers</c><00:33:13.400><c> that</c><00:33:13.430><c> mean</c>

00:33:13.780 --> 00:33:13.790 align:start position:0%
value for dispatchers that mean
 

00:33:13.790 --> 00:33:16.090 align:start position:0%
value for dispatchers that mean
immediately<00:33:14.270><c> so</c><00:33:15.020><c> the</c><00:33:15.230><c> live</c><00:33:15.440><c> data</c><00:33:15.680><c> builder</c>

00:33:16.090 --> 00:33:16.100 align:start position:0%
immediately so the live data builder
 

00:33:16.100 --> 00:33:18.790 align:start position:0%
immediately so the live data builder
will<00:33:16.280><c> use</c><00:33:16.520><c> the</c><00:33:16.760><c> dispatcher</c><00:33:17.120><c> we</c><00:33:17.390><c> give</c><00:33:17.600><c> it</c><00:33:17.800><c> and</c>

00:33:18.790 --> 00:33:18.800 align:start position:0%
will use the dispatcher we give it and
 

00:33:18.800 --> 00:33:21.130 align:start position:0%
will use the dispatcher we give it and
then<00:33:19.010><c> in</c><00:33:19.100><c> teardown</c><00:33:19.550><c> reset</c><00:33:20.480><c> main</c><00:33:20.720><c> to</c><00:33:21.020><c> the</c>

00:33:21.130 --> 00:33:21.140 align:start position:0%
then in teardown reset main to the
 

00:33:21.140 --> 00:33:23.350 align:start position:0%
then in teardown reset main to the
default<00:33:21.470><c> value</c><00:33:21.800><c> and</c><00:33:22.100><c> then</c><00:33:22.580><c> this</c><00:33:22.700><c> last</c><00:33:23.120><c> line</c>

00:33:23.350 --> 00:33:23.360 align:start position:0%
default value and then this last line
 

00:33:23.360 --> 00:33:24.880 align:start position:0%
default value and then this last line
here<00:33:23.600><c> on</c><00:33:23.630><c> the</c><00:33:23.780><c> bottom</c><00:33:23.930><c> is</c><00:33:24.230><c> really</c><00:33:24.650><c> really</c>

00:33:24.880 --> 00:33:24.890 align:start position:0%
here on the bottom is really really
 

00:33:24.890 --> 00:33:26.920 align:start position:0%
here on the bottom is really really
important<00:33:25.370><c> it</c><00:33:25.460><c> says</c><00:33:25.640><c> test</c><00:33:26.030><c> scope</c><00:33:26.300><c> cleanup</c>

00:33:26.920 --> 00:33:26.930 align:start position:0%
important it says test scope cleanup
 

00:33:26.930 --> 00:33:28.840 align:start position:0%
important it says test scope cleanup
test<00:33:27.170><c> care</c><00:33:27.380><c> routines</c><00:33:27.710><c> if</c><00:33:28.400><c> you</c><00:33:28.520><c> think</c><00:33:28.760><c> about</c>

00:33:28.840 --> 00:33:28.850 align:start position:0%
test care routines if you think about
 

00:33:28.850 --> 00:33:31.090 align:start position:0%
test care routines if you think about
what<00:33:29.120><c> a</c><00:33:29.180><c> dispatcher</c><00:33:29.840><c> and</c><00:33:30.320><c> a</c><00:33:30.410><c> scope</c><00:33:30.680><c> are</c><00:33:30.830><c> doing</c>

00:33:31.090 --> 00:33:31.100 align:start position:0%
what a dispatcher and a scope are doing
 

00:33:31.100 --> 00:33:32.740 align:start position:0%
what a dispatcher and a scope are doing
their<00:33:31.490><c> very</c><00:33:31.610><c> stateful</c><00:33:32.210><c> right</c><00:33:32.450><c> they</c><00:33:32.570><c> have</c><00:33:32.690><c> to</c>

00:33:32.740 --> 00:33:32.750 align:start position:0%
their very stateful right they have to
 

00:33:32.750 --> 00:33:34.000 align:start position:0%
their very stateful right they have to
keep<00:33:32.930><c> track</c><00:33:33.170><c> of</c><00:33:33.290><c> your</c><00:33:33.350><c> Co</c><00:33:33.530><c> routines</c><00:33:33.830><c> and</c>

00:33:34.000 --> 00:33:34.010 align:start position:0%
keep track of your Co routines and
 

00:33:34.010 --> 00:33:35.740 align:start position:0%
keep track of your Co routines and
actually<00:33:34.280><c> run</c><00:33:34.460><c> them</c><00:33:34.700><c> so</c><00:33:35.120><c> you</c><00:33:35.210><c> don't</c><00:33:35.390><c> call</c><00:33:35.570><c> this</c>

00:33:35.740 --> 00:33:35.750 align:start position:0%
actually run them so you don't call this
 

00:33:35.750 --> 00:33:37.690 align:start position:0%
actually run them so you don't call this
it's<00:33:35.930><c> very</c><00:33:36.350><c> easy</c><00:33:36.710><c> to</c><00:33:36.890><c> leak</c><00:33:37.160><c> state</c><00:33:37.490><c> between</c>

00:33:37.690 --> 00:33:37.700 align:start position:0%
it's very easy to leak state between
 

00:33:37.700 --> 00:33:41.500 align:start position:0%
it's very easy to leak state between
tests<00:33:38.300><c> so</c><00:33:39.080><c> that's</c><00:33:39.800><c> a</c><00:33:39.890><c> lot</c><00:33:40.100><c> of</c><00:33:40.130><c> boilerplate</c><00:33:40.510><c> so</c>

00:33:41.500 --> 00:33:41.510 align:start position:0%
tests so that's a lot of boilerplate so
 

00:33:41.510 --> 00:33:43.150 align:start position:0%
tests so that's a lot of boilerplate so
you<00:33:41.960><c> can</c><00:33:42.110><c> go</c><00:33:42.230><c> ahead</c><00:33:42.350><c> and</c><00:33:42.680><c> put</c><00:33:42.860><c> that</c><00:33:43.010><c> together</c>

00:33:43.150 --> 00:33:43.160 align:start position:0%
you can go ahead and put that together
 

00:33:43.160 --> 00:33:45.760 align:start position:0%
you can go ahead and put that together
in<00:33:43.580><c> maybe</c><00:33:43.880><c> a</c><00:33:43.970><c> J</c><00:33:44.180><c> unit</c><00:33:44.450><c> for</c><00:33:44.660><c> role</c><00:33:44.840><c> this</c><00:33:45.410><c> doesn't</c>

00:33:45.760 --> 00:33:45.770 align:start position:0%
in maybe a J unit for role this doesn't
 

00:33:45.770 --> 00:33:48.010 align:start position:0%
in maybe a J unit for role this doesn't
come<00:33:45.950><c> in</c><00:33:46.100><c> the</c><00:33:46.130><c> library</c><00:33:46.340><c> but</c><00:33:47.150><c> you</c><00:33:47.660><c> can</c><00:33:47.810><c> write</c>

00:33:48.010 --> 00:33:48.020 align:start position:0%
come in the library but you can write
 

00:33:48.020 --> 00:33:49.840 align:start position:0%
come in the library but you can write
all<00:33:48.260><c> of</c><00:33:48.290><c> that</c><00:33:48.440><c> code</c><00:33:48.740><c> into</c><00:33:48.920><c> a</c><00:33:49.010><c> rule</c><00:33:49.250><c> and</c><00:33:49.490><c> I</c><00:33:49.700><c> would</c>

00:33:49.840 --> 00:33:49.850 align:start position:0%
all of that code into a rule and I would
 

00:33:49.850 --> 00:33:51.250 align:start position:0%
all of that code into a rule and I would
expect<00:33:50.090><c> to</c><00:33:50.210><c> see</c><00:33:50.360><c> a</c><00:33:50.390><c> library</c><00:33:50.600><c> that</c><00:33:50.810><c> does</c><00:33:51.080><c> this</c>

00:33:51.250 --> 00:33:51.260 align:start position:0%
expect to see a library that does this
 

00:33:51.260 --> 00:33:54.850 align:start position:0%
expect to see a library that does this
relatively<00:33:51.800><c> shortly</c><00:33:52.990><c> so</c><00:33:53.990><c> whatever</c><00:33:54.470><c> testing</c>

00:33:54.850 --> 00:33:54.860 align:start position:0%
relatively shortly so whatever testing
 

00:33:54.860 --> 00:33:56.680 align:start position:0%
relatively shortly so whatever testing
framework<00:33:55.250><c> you're</c><00:33:55.490><c> using</c><00:33:55.730><c> however</c><00:33:56.210><c> you</c>

00:33:56.680 --> 00:33:56.690 align:start position:0%
framework you're using however you
 

00:33:56.690 --> 00:33:57.880 align:start position:0%
framework you're using however you
should<00:33:56.900><c> build</c><00:33:57.020><c> an</c><00:33:57.200><c> abstraction</c><00:33:57.620><c> that's</c>

00:33:57.880 --> 00:33:57.890 align:start position:0%
should build an abstraction that's
 

00:33:57.890 --> 00:33:59.320 align:start position:0%
should build an abstraction that's
appropriate<00:33:58.310><c> for</c><00:33:58.430><c> your</c><00:33:58.520><c> testing</c><00:33:58.940><c> framework</c>

00:33:59.320 --> 00:33:59.330 align:start position:0%
appropriate for your testing framework
 

00:33:59.330 --> 00:34:01.600 align:start position:0%
appropriate for your testing framework
to<00:33:59.540><c> do</c><00:33:59.660><c> that</c><00:33:59.870><c> code</c><00:34:00.130><c> the</c><00:34:01.130><c> rule</c><00:34:01.340><c> that</c><00:34:01.490><c> I'm</c>

00:34:01.600 --> 00:34:01.610 align:start position:0%
to do that code the rule that I'm
 

00:34:01.610 --> 00:34:03.790 align:start position:0%
to do that code the rule that I'm
defining<00:34:01.910><c> here</c><00:34:02.300><c> exposes</c><00:34:03.050><c> test</c><00:34:03.320><c> care</c><00:34:03.560><c> routine</c>

00:34:03.790 --> 00:34:03.800 align:start position:0%
defining here exposes test care routine
 

00:34:03.800 --> 00:34:06.610 align:start position:0%
defining here exposes test care routine
scope<00:34:04.100><c> interface</c><00:34:04.550><c> which</c><00:34:05.510><c> lets</c><00:34:05.840><c> me</c><00:34:06.020><c> call</c><00:34:06.260><c> run</c>

00:34:06.610 --> 00:34:06.620 align:start position:0%
scope interface which lets me call run
 

00:34:06.620 --> 00:34:09.010 align:start position:0%
scope interface which lets me call run
blocking<00:34:06.890><c> tests</c><00:34:07.340><c> this</c><00:34:08.210><c> is</c><00:34:08.390><c> a</c><00:34:08.420><c> cover</c><00:34:08.810><c> team</c>

00:34:09.010 --> 00:34:09.020 align:start position:0%
blocking tests this is a cover team
 

00:34:09.020 --> 00:34:11.710 align:start position:0%
blocking tests this is a cover team
builder<00:34:09.350><c> that's</c><00:34:09.530><c> optimized</c><00:34:10.250><c> for</c><00:34:10.580><c> testing</c><00:34:11.150><c> it</c>

00:34:11.710 --> 00:34:11.720 align:start position:0%
builder that's optimized for testing it
 

00:34:11.720 --> 00:34:14.230 align:start position:0%
builder that's optimized for testing it
works<00:34:12.020><c> kind</c><00:34:12.530><c> of</c><00:34:12.650><c> like</c><00:34:12.830><c> run</c><00:34:13.070><c> blocking</c><00:34:13.550><c> but</c><00:34:14.120><c> it</c>

00:34:14.230 --> 00:34:14.240 align:start position:0%
works kind of like run blocking but it
 

00:34:14.240 --> 00:34:16.090 align:start position:0%
works kind of like run blocking but it
makes<00:34:14.420><c> writing</c><00:34:14.690><c> a</c><00:34:14.870><c> lot</c><00:34:15.050><c> of</c><00:34:15.170><c> tests</c><00:34:15.500><c> easier</c><00:34:15.860><c> oh</c>

00:34:16.090 --> 00:34:16.100 align:start position:0%
makes writing a lot of tests easier oh
 

00:34:16.100 --> 00:34:19.660 align:start position:0%
makes writing a lot of tests easier oh
and<00:34:16.580><c> it</c><00:34:17.150><c> returns</c><00:34:17.510><c> unit</c><00:34:17.990><c> so</c><00:34:18.950><c> you</c><00:34:19.010><c> can</c><00:34:19.250><c> use</c><00:34:19.400><c> it</c><00:34:19.430><c> in</c>

00:34:19.660 --> 00:34:19.670 align:start position:0%
and it returns unit so you can use it in
 

00:34:19.670 --> 00:34:22.580 align:start position:0%
and it returns unit so you can use it in
single<00:34:19.880><c> expression</c><00:34:20.270><c> style</c><00:34:20.750><c> in</c><00:34:20.960><c> your</c><00:34:21.080><c> test</c>

00:34:22.580 --> 00:34:22.590 align:start position:0%
single expression style in your test
 

00:34:22.590 --> 00:34:25.280 align:start position:0%
single expression style in your test
then<00:34:23.220><c> we</c><00:34:23.400><c> get</c><00:34:23.550><c> the</c><00:34:23.700><c> subject</c><00:34:23.970><c> and</c><00:34:24.450><c> then</c><00:34:25.050><c> we</c><00:34:25.140><c> need</c>

00:34:25.280 --> 00:34:25.290 align:start position:0%
then we get the subject and then we need
 

00:34:25.290 --> 00:34:27.290 align:start position:0%
then we get the subject and then we need
to<00:34:25.380><c> start</c><00:34:25.620><c> observing</c><00:34:25.980><c> the</c><00:34:26.280><c> live</c><00:34:26.460><c> data</c><00:34:26.730><c> so</c><00:34:27.180><c> it</c>

00:34:27.290 --> 00:34:27.300 align:start position:0%
to start observing the live data so it
 

00:34:27.300 --> 00:34:29.240 align:start position:0%
to start observing the live data so it
will<00:34:27.420><c> execute</c><00:34:27.750><c> remember</c><00:34:28.740><c> the</c><00:34:28.860><c> live</c><00:34:29.040><c> data</c>

00:34:29.240 --> 00:34:29.250 align:start position:0%
will execute remember the live data
 

00:34:29.250 --> 00:34:30.980 align:start position:0%
will execute remember the live data
builder<00:34:29.640><c> won't</c><00:34:29.910><c> run</c><00:34:30.180><c> until</c><00:34:30.480><c> someone's</c>

00:34:30.980 --> 00:34:30.990 align:start position:0%
builder won't run until someone's
 

00:34:30.990 --> 00:34:32.660 align:start position:0%
builder won't run until someone's
observing<00:34:31.440><c> it</c><00:34:31.560><c> I'll</c><00:34:31.770><c> define</c><00:34:32.070><c> a</c><00:34:32.100><c> little</c><00:34:32.430><c> test</c>

00:34:32.660 --> 00:34:32.670 align:start position:0%
observing it I'll define a little test
 

00:34:32.670 --> 00:34:34.370 align:start position:0%
observing it I'll define a little test
helper<00:34:33.030><c> called</c><00:34:33.210><c> observe</c><00:34:33.600><c> for</c><00:34:33.720><c> testing</c><00:34:34.140><c> this</c>

00:34:34.370 --> 00:34:34.380 align:start position:0%
helper called observe for testing this
 

00:34:34.380 --> 00:34:35.930 align:start position:0%
helper called observe for testing this
is<00:34:34.590><c> just</c><00:34:34.830><c> my</c><00:34:34.980><c> test</c><00:34:35.220><c> code</c><00:34:35.400><c> it's</c><00:34:35.610><c> not</c><00:34:35.760><c> in</c><00:34:35.880><c> a</c>

00:34:35.930 --> 00:34:35.940 align:start position:0%
is just my test code it's not in a
 

00:34:35.940 --> 00:34:38.150 align:start position:0%
is just my test code it's not in a
library<00:34:36.120><c> anywhere</c><00:34:36.540><c> it's</c><00:34:37.470><c> just</c><00:34:37.530><c> gonna</c><00:34:37.770><c> start</c>

00:34:38.150 --> 00:34:38.160 align:start position:0%
library anywhere it's just gonna start
 

00:34:38.160 --> 00:34:39.920 align:start position:0%
library anywhere it's just gonna start
an<00:34:38.310><c> observer</c><00:34:38.640><c> and</c><00:34:38.940><c> then</c><00:34:39.210><c> call</c><00:34:39.450><c> the</c><00:34:39.570><c> block</c><00:34:39.780><c> that</c>

00:34:39.920 --> 00:34:39.930 align:start position:0%
an observer and then call the block that
 

00:34:39.930 --> 00:34:44.660 align:start position:0%
an observer and then call the block that
I<00:34:39.990><c> passed</c><00:34:40.290><c> it</c><00:34:40.820><c> and</c><00:34:42.380><c> back</c><00:34:43.380><c> to</c><00:34:43.560><c> the</c><00:34:43.680><c> test</c><00:34:43.920><c> the</c>

00:34:44.660 --> 00:34:44.670 align:start position:0%
I passed it and back to the test the
 

00:34:44.670 --> 00:34:46.430 align:start position:0%
I passed it and back to the test the
first<00:34:44.880><c> value</c><00:34:45.180><c> has</c><00:34:45.480><c> already</c><00:34:45.960><c> been</c><00:34:46.110><c> emitted</c>

00:34:46.430 --> 00:34:46.440 align:start position:0%
first value has already been emitted
 

00:34:46.440 --> 00:34:47.330 align:start position:0%
first value has already been emitted
because<00:34:46.650><c> I've</c><00:34:46.890><c> made</c><00:34:47.100><c> everything</c>

00:34:47.330 --> 00:34:47.340 align:start position:0%
because I've made everything
 

00:34:47.340 --> 00:34:49.490 align:start position:0%
because I've made everything
deterministic<00:34:48.210><c> with</c><00:34:48.420><c> this</c><00:34:48.600><c> this</c><00:34:48.960><c> test</c><00:34:49.200><c> rule</c>

00:34:49.490 --> 00:34:49.500 align:start position:0%
deterministic with this this test rule
 

00:34:49.500 --> 00:34:51.530 align:start position:0%
deterministic with this this test rule
that<00:34:49.620><c> I'm</c><00:34:49.740><c> using</c><00:34:49.920><c> I'm</c><00:34:50.550><c> gonna</c><00:34:50.940><c> use</c><00:34:51.090><c> fluent</c>

00:34:51.530 --> 00:34:51.540 align:start position:0%
that I'm using I'm gonna use fluent
 

00:34:51.540 --> 00:34:52.760 align:start position:0%
that I'm using I'm gonna use fluent
assertions<00:34:52.020><c> to</c><00:34:52.140><c> check</c><00:34:52.440><c> that</c><00:34:52.590><c> the</c><00:34:52.680><c> value</c>

00:34:52.760 --> 00:34:52.770 align:start position:0%
assertions to check that the value
 

00:34:52.770 --> 00:34:54.860 align:start position:0%
assertions to check that the value
should<00:34:53.160><c> equal</c><00:34:53.430><c> one</c><00:34:53.670><c> and</c><00:34:53.910><c> then</c><00:34:54.480><c> I'm</c><00:34:54.570><c> going</c><00:34:54.780><c> to</c>

00:34:54.860 --> 00:34:54.870 align:start position:0%
should equal one and then I'm going to
 

00:34:54.870 --> 00:34:57.200 align:start position:0%
should equal one and then I'm going to
advance<00:34:55.170><c> the</c><00:34:55.350><c> time</c><00:34:55.710><c> by</c><00:34:55.950><c> one</c><00:34:56.160><c> second</c><00:34:56.700><c> this</c><00:34:57.060><c> is</c>

00:34:57.200 --> 00:34:57.210 align:start position:0%
advance the time by one second this is
 

00:34:57.210 --> 00:34:59.210 align:start position:0%
advance the time by one second this is
one<00:34:57.390><c> of</c><00:34:57.510><c> the</c><00:34:57.660><c> big</c><00:34:57.900><c> advantages</c><00:34:58.020><c> of</c><00:34:58.530><c> test</c><00:34:59.010><c> cut</c>

00:34:59.210 --> 00:34:59.220 align:start position:0%
one of the big advantages of test cut
 

00:34:59.220 --> 00:35:00.950 align:start position:0%
one of the big advantages of test cut
routine<00:34:59.490><c> dispatcher</c><00:34:59.850><c> you</c><00:35:00.240><c> can</c><00:35:00.450><c> control</c>

00:35:00.950 --> 00:35:00.960 align:start position:0%
routine dispatcher you can control
 

00:35:00.960 --> 00:35:03.770 align:start position:0%
routine dispatcher you can control
virtual<00:35:01.410><c> time</c><00:35:01.680><c> so</c><00:35:02.610><c> advance</c><00:35:03.090><c> time</c><00:35:03.360><c> by</c><00:35:03.570><c> it</c><00:35:03.630><c> will</c>

00:35:03.770 --> 00:35:03.780 align:start position:0%
virtual time so advance time by it will
 

00:35:03.780 --> 00:35:05.270 align:start position:0%
virtual time so advance time by it will
cause<00:35:03.960><c> that</c><00:35:04.230><c> delay</c><00:35:04.590><c> to</c><00:35:04.860><c> return</c><00:35:05.130><c> immediately</c>

00:35:05.270 --> 00:35:05.280 align:start position:0%
cause that delay to return immediately
 

00:35:05.280 --> 00:35:08.990 align:start position:0%
cause that delay to return immediately
and<00:35:06.000><c> I</c><00:35:06.120><c> have</c><00:35:06.270><c> control</c><00:35:06.660><c> over</c><00:35:06.690><c> it</c><00:35:07.050><c> in</c><00:35:07.170><c> my</c><00:35:07.320><c> test</c><00:35:08.000><c> so</c>

00:35:08.990 --> 00:35:09.000 align:start position:0%
and I have control over it in my test so
 

00:35:09.000 --> 00:35:10.850 align:start position:0%
and I have control over it in my test so
the<00:35:09.120><c> second</c><00:35:09.450><c> image</c><00:35:09.660><c> is</c><00:35:09.720><c> already</c><00:35:10.050><c> done</c><00:35:10.620><c> when</c><00:35:10.800><c> I</c>

00:35:10.850 --> 00:35:10.860 align:start position:0%
the second image is already done when I
 

00:35:10.860 --> 00:35:12.680 align:start position:0%
the second image is already done when I
get<00:35:11.040><c> to</c><00:35:11.130><c> this</c><00:35:11.250><c> line</c><00:35:11.460><c> of</c><00:35:11.490><c> code</c><00:35:11.790><c> there's</c><00:35:12.300><c> no</c><00:35:12.480><c> need</c>

00:35:12.680 --> 00:35:12.690 align:start position:0%
get to this line of code there's no need
 

00:35:12.690 --> 00:35:15.140 align:start position:0%
get to this line of code there's no need
to<00:35:12.810><c> spin</c><00:35:13.410><c> and</c><00:35:13.740><c> wait</c><00:35:13.920><c> for</c><00:35:14.160><c> a</c><00:35:14.190><c> result</c><00:35:14.580><c> and</c><00:35:14.790><c> this</c>

00:35:15.140 --> 00:35:15.150 align:start position:0%
to spin and wait for a result and this
 

00:35:15.150 --> 00:35:17.090 align:start position:0%
to spin and wait for a result and this
test<00:35:15.360><c> won't</c><00:35:15.630><c> be</c><00:35:15.750><c> flaky</c><00:35:16.170><c> I</c><00:35:16.440><c> can</c><00:35:16.860><c> just</c><00:35:16.950><c> say</c>

00:35:17.090 --> 00:35:17.100 align:start position:0%
test won't be flaky I can just say
 

00:35:17.100 --> 00:35:19.040 align:start position:0%
test won't be flaky I can just say
subject<00:35:17.610><c> that</c><00:35:17.790><c> value</c><00:35:18.150><c> should</c><00:35:18.180><c> equal</c><00:35:18.660><c> two</c>

00:35:19.040 --> 00:35:19.050 align:start position:0%
subject that value should equal two
 

00:35:19.050 --> 00:35:21.590 align:start position:0%
subject that value should equal two
and<00:35:19.950><c> if</c><00:35:20.010><c> we</c><00:35:20.130><c> run</c><00:35:20.340><c> it</c><00:35:20.490><c> we</c><00:35:20.670><c> see</c><00:35:20.880><c> that</c><00:35:21.240><c> our</c><00:35:21.360><c> test</c>

00:35:21.590 --> 00:35:21.600 align:start position:0%
and if we run it we see that our test
 

00:35:21.600 --> 00:35:24.200 align:start position:0%
and if we run it we see that our test
passes<00:35:22.170><c> the</c><00:35:22.950><c> test</c><00:35:23.190><c> runs</c><00:35:23.370><c> instantly</c><00:35:23.940><c> in</c><00:35:24.030><c> tape</c>

00:35:24.200 --> 00:35:24.210 align:start position:0%
passes the test runs instantly in tape
 

00:35:24.210 --> 00:35:26.810 align:start position:0%
passes the test runs instantly in tape
instead<00:35:24.390><c> of</c><00:35:24.630><c> taking</c><00:35:24.960><c> an</c><00:35:25.080><c> entire</c><00:35:25.380><c> second</c><00:35:25.890><c> so</c><00:35:26.400><c> go</c>

00:35:26.810 --> 00:35:26.820 align:start position:0%
instead of taking an entire second so go
 

00:35:26.820 --> 00:35:28.730 align:start position:0%
instead of taking an entire second so go
check<00:35:27.030><c> out</c><00:35:27.180><c> the</c><00:35:27.300><c> library</c><00:35:27.630><c> be</c><00:35:28.080><c> sure</c><00:35:28.350><c> to</c><00:35:28.500><c> file</c>

00:35:28.730 --> 00:35:28.740 align:start position:0%
check out the library be sure to file
 

00:35:28.740 --> 00:35:30.620 align:start position:0%
check out the library be sure to file
any<00:35:29.040><c> bugs</c><00:35:29.280><c> that</c><00:35:29.430><c> you</c><00:35:29.490><c> find</c><00:35:29.790><c> it's</c><00:35:30.150><c> currently</c>

00:35:30.620 --> 00:35:30.630 align:start position:0%
any bugs that you find it's currently
 

00:35:30.630 --> 00:35:32.630 align:start position:0%
any bugs that you find it's currently
marked<00:35:30.930><c> experimental</c><00:35:31.530><c> carotenes</c><00:35:31.950><c> api</c><00:35:32.220><c> until</c>

00:35:32.630 --> 00:35:32.640 align:start position:0%
marked experimental carotenes api until
 

00:35:32.640 --> 00:35:34.610 align:start position:0%
marked experimental carotenes api until
it's<00:35:32.790><c> had</c><00:35:33.000><c> enough</c><00:35:33.150><c> feedback</c><00:35:33.540><c> to</c><00:35:34.110><c> elevate</c><00:35:34.500><c> this</c>

00:35:34.610 --> 00:35:34.620 align:start position:0%
it's had enough feedback to elevate this
 

00:35:34.620 --> 00:35:36.890 align:start position:0%
it's had enough feedback to elevate this
table<00:35:35.040><c> and</c><00:35:35.790><c> now</c><00:35:36.000><c> I'm</c><00:35:36.270><c> gonna</c><00:35:36.450><c> hand</c><00:35:36.660><c> the</c><00:35:36.750><c> mic</c>

00:35:36.890 --> 00:35:36.900 align:start position:0%
table and now I'm gonna hand the mic
 

00:35:36.900 --> 00:35:41.630 align:start position:0%
table and now I'm gonna hand the mic
back<00:35:37.110><c> to</c><00:35:37.290><c> you</c><00:35:37.470><c> just</c><00:35:37.830><c> suspend</c><00:35:38.310><c> the</c><00:35:38.430><c> talk</c><00:35:40.640><c> thanks</c>

00:35:41.630 --> 00:35:41.640 align:start position:0%
back to you just suspend the talk thanks
 

00:35:41.640 --> 00:35:42.010 align:start position:0%
back to you just suspend the talk thanks
yeah

00:35:42.010 --> 00:35:42.020 align:start position:0%
yeah
 

00:35:42.020 --> 00:35:46.070 align:start position:0%
yeah
okay<00:35:43.020><c> so</c><00:35:43.530><c> I</c><00:35:43.890><c> want</c><00:35:44.280><c> just</c><00:35:44.520><c> need</c><00:35:44.670><c> stuff</c><00:35:45.050><c> what</c><00:35:46.050><c> is</c>

00:35:46.070 --> 00:35:46.080 align:start position:0%
okay so I want just need stuff what is
 

00:35:46.080 --> 00:35:49.250 align:start position:0%
okay so I want just need stuff what is
next<00:35:46.610><c> so</c><00:35:47.610><c> today</c><00:35:48.000><c> we</c><00:35:48.270><c> talked</c><00:35:48.510><c> about</c><00:35:48.540><c> how</c><00:35:48.960><c> you</c>

00:35:49.250 --> 00:35:49.260 align:start position:0%
next so today we talked about how you
 

00:35:49.260 --> 00:35:51.920 align:start position:0%
next so today we talked about how you
can<00:35:49.500><c> already</c><00:35:50.010><c> use</c><00:35:50.160><c> qualities</c><00:35:51.030><c> in</c><00:35:51.360><c> Android</c>

00:35:51.920 --> 00:35:51.930 align:start position:0%
can already use qualities in Android
 

00:35:51.930 --> 00:35:55.040 align:start position:0%
can already use qualities in Android
eggs<00:35:52.140><c> and</c><00:35:52.440><c> other</c><00:35:52.710><c> Android</c><00:35:53.220><c> libraries</c><00:35:54.050><c> we</c>

00:35:55.040 --> 00:35:55.050 align:start position:0%
eggs and other Android libraries we
 

00:35:55.050 --> 00:35:57.170 align:start position:0%
eggs and other Android libraries we
introduced<00:35:55.590><c> a</c><00:35:55.770><c> new</c><00:35:55.800><c> live</c><00:35:56.190><c> data</c><00:35:56.460><c> builder</c><00:35:56.940><c> that</c>

00:35:57.170 --> 00:35:57.180 align:start position:0%
introduced a new live data builder that
 

00:35:57.180 --> 00:35:59.240 align:start position:0%
introduced a new live data builder that
lets<00:35:57.450><c> you</c><00:35:57.600><c> integrate</c><00:35:57.870><c> live</c><00:35:58.320><c> data</c><00:35:58.650><c> with</c>

00:35:59.240 --> 00:35:59.250 align:start position:0%
lets you integrate live data with
 

00:35:59.250 --> 00:36:02.480 align:start position:0%
lets you integrate live data with
qualities<00:35:59.820><c> and</c><00:36:00.180><c> the</c><00:36:00.990><c> new</c><00:36:01.200><c> life</c><00:36:01.590><c> cycle</c><00:36:02.100><c> scopes</c>

00:36:02.480 --> 00:36:02.490 align:start position:0%
qualities and the new life cycle scopes
 

00:36:02.490 --> 00:36:04.850 align:start position:0%
qualities and the new life cycle scopes
for<00:36:02.700><c> your</c><00:36:02.880><c> view</c><00:36:03.090><c> model</c><00:36:03.480><c> so</c><00:36:03.930><c> Cora</c><00:36:04.350><c> this</c><00:36:04.590><c> goes</c>

00:36:04.850 --> 00:36:04.860 align:start position:0%
for your view model so Cora this goes
 

00:36:04.860 --> 00:36:08.650 align:start position:0%
for your view model so Cora this goes
for<00:36:05.070><c> your</c><00:36:05.160><c> via</c><00:36:05.430><c> model</c><00:36:05.850><c> and</c><00:36:06.090><c> your</c><00:36:06.930><c> life</c><00:36:07.170><c> cycles</c>

00:36:08.650 --> 00:36:08.660 align:start position:0%
for your via model and your life cycles
 

00:36:08.660 --> 00:36:11.150 align:start position:0%
for your via model and your life cycles
now<00:36:09.660><c> we</c><00:36:09.720><c> also</c><00:36:09.900><c> introduced</c><00:36:10.470><c> this</c><00:36:10.770><c> new</c>

00:36:11.150 --> 00:36:11.160 align:start position:0%
now we also introduced this new
 

00:36:11.160 --> 00:36:13.220 align:start position:0%
now we also introduced this new
functional<00:36:11.730><c> to</c><00:36:11.910><c> my</c><00:36:12.060><c> started</c><00:36:12.600><c> which</c><00:36:12.780><c> allows</c>

00:36:13.220 --> 00:36:13.230 align:start position:0%
functional to my started which allows
 

00:36:13.230 --> 00:36:15.890 align:start position:0%
functional to my started which allows
you<00:36:13.410><c> to</c><00:36:13.470><c> run</c><00:36:13.860><c> qualities</c><00:36:14.700><c> based</c><00:36:15.510><c> on</c><00:36:15.780><c> your</c>

00:36:15.890 --> 00:36:15.900 align:start position:0%
you to run qualities based on your
 

00:36:15.900 --> 00:36:19.070 align:start position:0%
you to run qualities based on your
lifecycle<00:36:16.410><c> state</c><00:36:17.030><c> and</c><00:36:18.030><c> last</c><00:36:18.420><c> but</c><00:36:18.570><c> not</c><00:36:18.780><c> least</c>

00:36:19.070 --> 00:36:19.080 align:start position:0%
lifecycle state and last but not least
 

00:36:19.080 --> 00:36:21.650 align:start position:0%
lifecycle state and last but not least
we<00:36:19.350><c> have</c><00:36:19.380><c> introduced</c><00:36:20.190><c> a</c><00:36:20.340><c> new</c><00:36:20.370><c> testing</c><00:36:21.150><c> library</c>

00:36:21.650 --> 00:36:21.660 align:start position:0%
we have introduced a new testing library
 

00:36:21.660 --> 00:36:24.840 align:start position:0%
we have introduced a new testing library
for<00:36:21.960><c> Cortese</c>

00:36:24.840 --> 00:36:24.850 align:start position:0%
 
 

00:36:24.850 --> 00:36:29.110 align:start position:0%
 
okay<00:36:26.120><c> so</c><00:36:26.720><c> earlier</c><00:36:27.500><c> today</c><00:36:27.590><c> we</c><00:36:28.070><c> announced</c><00:36:28.640><c> call</c>

00:36:29.110 --> 00:36:29.120 align:start position:0%
okay so earlier today we announced call
 

00:36:29.120 --> 00:36:32.350 align:start position:0%
okay so earlier today we announced call
him<00:36:29.300><c> first</c><00:36:29.510><c> and</c><00:36:29.990><c> for</c><00:36:30.650><c> Android</c><00:36:31.340><c> X</c><00:36:31.730><c> and</c><00:36:31.910><c> jetpack</c>

00:36:32.350 --> 00:36:32.360 align:start position:0%
him first and for Android X and jetpack
 

00:36:32.360 --> 00:36:36.130 align:start position:0%
him first and for Android X and jetpack
is<00:36:32.780><c> more</c><00:36:33.080><c> like</c><00:36:33.260><c> Courtis</c><00:36:34.010><c> first</c><00:36:34.750><c> this</c><00:36:35.750><c> is</c><00:36:35.810><c> a</c>

00:36:36.130 --> 00:36:36.140 align:start position:0%
is more like Courtis first this is a
 

00:36:36.140 --> 00:36:38.560 align:start position:0%
is more like Courtis first this is a
recommendation<00:36:36.860><c> we</c><00:36:37.610><c> believe</c><00:36:37.970><c> qualities</c>

00:36:38.560 --> 00:36:38.570 align:start position:0%
recommendation we believe qualities
 

00:36:38.570 --> 00:36:42.040 align:start position:0%
recommendation we believe qualities
provides<00:36:39.020><c> the</c><00:36:39.200><c> best</c><00:36:40.240><c> functionality</c><00:36:41.240><c> and</c><00:36:41.450><c> ease</c>

00:36:42.040 --> 00:36:42.050 align:start position:0%
provides the best functionality and ease
 

00:36:42.050 --> 00:36:46.210 align:start position:0%
provides the best functionality and ease
of<00:36:42.080><c> use</c><00:36:42.290><c> for</c><00:36:43.250><c> concurrency</c><00:36:43.970><c> on</c><00:36:44.150><c> Android</c><00:36:45.010><c> but</c><00:36:46.010><c> we</c>

00:36:46.210 --> 00:36:46.220 align:start position:0%
of use for concurrency on Android but we
 

00:36:46.220 --> 00:36:47.980 align:start position:0%
of use for concurrency on Android but we
acknowledge<00:36:46.940><c> that</c><00:36:46.970><c> this</c><00:36:47.390><c> is</c><00:36:47.600><c> work</c><00:36:47.780><c> in</c>

00:36:47.980 --> 00:36:47.990 align:start position:0%
acknowledge that this is work in
 

00:36:47.990 --> 00:36:48.430 align:start position:0%
acknowledge that this is work in
progress

00:36:48.430 --> 00:36:48.440 align:start position:0%
progress
 

00:36:48.440 --> 00:36:50.500 align:start position:0%
progress
most<00:36:48.710><c> of</c><00:36:48.860><c> these</c><00:36:49.010><c> libraries</c><00:36:49.610><c> we</c><00:36:49.760><c> own</c><00:36:50.210><c> are</c>

00:36:50.500 --> 00:36:50.510 align:start position:0%
most of these libraries we own are
 

00:36:50.510 --> 00:36:54.010 align:start position:0%
most of these libraries we own are
either<00:36:50.840><c> experimental</c><00:36:51.830><c> or</c><00:36:52.130><c> alpha</c><00:36:52.670><c> one</c><00:36:52.850><c> but</c><00:36:53.840><c> we</c>

00:36:54.010 --> 00:36:54.020 align:start position:0%
either experimental or alpha one but we
 

00:36:54.020 --> 00:36:56.320 align:start position:0%
either experimental or alpha one but we
want<00:36:54.230><c> to</c><00:36:54.380><c> develop</c><00:36:54.710><c> this</c><00:36:55.010><c> with</c><00:36:55.550><c> the</c><00:36:55.730><c> community</c>

00:36:56.320 --> 00:36:56.330 align:start position:0%
want to develop this with the community
 

00:36:56.330 --> 00:36:58.090 align:start position:0%
want to develop this with the community
the<00:36:56.510><c> same</c><00:36:56.720><c> way</c><00:36:56.960><c> we</c><00:36:57.350><c> do</c><00:36:57.410><c> with</c><00:36:57.620><c> architecture</c>

00:36:58.090 --> 00:36:58.100 align:start position:0%
the same way we do with architecture
 

00:36:58.100 --> 00:37:00.430 align:start position:0%
the same way we do with architecture
components<00:36:59.090><c> and</c><00:36:59.240><c> other</c><00:36:59.360><c> jetpack</c><00:36:59.930><c> libraries</c>

00:37:00.430 --> 00:37:00.440 align:start position:0%
components and other jetpack libraries
 

00:37:00.440 --> 00:37:03.400 align:start position:0%
components and other jetpack libraries
so<00:37:01.040><c> you</c><00:37:01.070><c> can</c><00:37:01.340><c> either</c><00:37:01.490><c> join</c><00:37:01.790><c> us</c><00:37:02.060><c> or</c><00:37:02.330><c> wait</c><00:37:02.990><c> six</c>

00:37:03.400 --> 00:37:03.410 align:start position:0%
so you can either join us or wait six
 

00:37:03.410 --> 00:37:05.560 align:start position:0%
so you can either join us or wait six
months<00:37:03.500><c> and</c><00:37:04.010><c> then</c><00:37:04.310><c> that's</c><00:37:04.730><c> not</c><00:37:04.850><c> using</c><00:37:05.360><c> them</c>

00:37:05.560 --> 00:37:05.570 align:start position:0%
months and then that's not using them
 

00:37:05.570 --> 00:37:09.430 align:start position:0%
months and then that's not using them
and<00:37:06.850><c> as</c><00:37:07.850><c> part</c><00:37:08.180><c> of</c><00:37:08.270><c> this</c><00:37:08.510><c> you</c><00:37:08.780><c> will</c><00:37:08.870><c> see</c><00:37:09.110><c> more</c>

00:37:09.430 --> 00:37:09.440 align:start position:0%
and as part of this you will see more
 

00:37:09.440 --> 00:37:11.440 align:start position:0%
and as part of this you will see more
and<00:37:09.470><c> more</c><00:37:09.860><c> of</c><00:37:10.010><c> coupling</c><00:37:10.580><c> and</c><00:37:10.880><c> qualities</c>

00:37:11.440 --> 00:37:11.450 align:start position:0%
and more of coupling and qualities
 

00:37:11.450 --> 00:37:15.220 align:start position:0%
and more of coupling and qualities
coming<00:37:12.050><c> out</c><00:37:12.260><c> of</c><00:37:12.440><c> jetpack</c><00:37:13.540><c> so</c><00:37:14.540><c> all</c><00:37:14.900><c> of</c><00:37:15.050><c> these</c>

00:37:15.220 --> 00:37:15.230 align:start position:0%
coming out of jetpack so all of these
 

00:37:15.230 --> 00:37:17.650 align:start position:0%
coming out of jetpack so all of these
are<00:37:15.410><c> available</c><00:37:15.500><c> in</c><00:37:16.010><c> lifecycle</c><00:37:16.970><c> to</c><00:37:17.180><c> point</c><00:37:17.450><c> to</c>

00:37:17.650 --> 00:37:17.660 align:start position:0%
are available in lifecycle to point to
 

00:37:17.660 --> 00:37:21.040 align:start position:0%
are available in lifecycle to point to
offer<00:37:17.900><c> 0</c><00:37:18.290><c> 1</c><00:37:18.530><c> starting</c><00:37:19.250><c> today</c><00:37:19.550><c> so</c><00:37:20.210><c> please</c><00:37:20.630><c> take</c>

00:37:21.040 --> 00:37:21.050 align:start position:0%
offer 0 1 starting today so please take
 

00:37:21.050 --> 00:37:22.870 align:start position:0%
offer 0 1 starting today so please take
a<00:37:21.110><c> look</c><00:37:21.260><c> at</c><00:37:21.560><c> it</c><00:37:21.740><c> and</c><00:37:21.950><c> let</c><00:37:22.190><c> us</c><00:37:22.400><c> know</c><00:37:22.610><c> how</c><00:37:22.820><c> you</c>

00:37:22.870 --> 00:37:22.880 align:start position:0%
a look at it and let us know how you
 

00:37:22.880 --> 00:37:26.260 align:start position:0%
a look at it and let us know how you
feel<00:37:23.060><c> about</c><00:37:23.360><c> them</c><00:37:24.070><c> also</c><00:37:25.070><c> we</c><00:37:25.490><c> really</c><00:37:25.760><c> really</c>

00:37:26.260 --> 00:37:26.270 align:start position:0%
feel about them also we really really
 

00:37:26.270 --> 00:37:29.140 align:start position:0%
feel about them also we really really
like<00:37:26.600><c> Curtis</c><00:37:27.320><c> thank</c><00:37:28.250><c> you</c>

00:37:29.140 --> 00:37:29.150 align:start position:0%
like Curtis thank you
 

00:37:29.150 --> 00:37:50.519 align:start position:0%
like Curtis thank you
[Music]

