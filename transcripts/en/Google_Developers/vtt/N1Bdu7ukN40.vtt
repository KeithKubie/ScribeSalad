WEBVTT
Kind: captions
Language: en

00:00:10.990 --> 00:00:13.560
PETE LePAGE: This calculator
might look familiar.

00:00:13.560 --> 00:00:16.670
It's a demo web app from
the Polymer project.

00:00:16.670 --> 00:00:20.980
With just a few changes to the
code-- like adding theme, color

00:00:20.980 --> 00:00:24.820
and a meta tag, and adding
a manifest.json file--

00:00:24.820 --> 00:00:27.410
I've made this web
app look and feel

00:00:27.410 --> 00:00:29.670
like an installed native app.

00:00:29.670 --> 00:00:30.960
Here's how I did it.

00:00:30.960 --> 00:00:32.870
Let's start with theme color.

00:00:32.870 --> 00:00:36.030
It gives you an easy way
to add a primary brand

00:00:36.030 --> 00:00:40.190
color to your site or app, and
provides an extra visual pop

00:00:40.190 --> 00:00:42.830
in the address bar
and tab switcher.

00:00:42.830 --> 00:00:45.390
When your app has been
added to the home screen,

00:00:45.390 --> 00:00:48.330
it also sets the
status bar color.

00:00:48.330 --> 00:00:50.215
The syntax is pretty easy.

00:00:50.215 --> 00:00:53.930
Add a meta tag to the
head element of each page,

00:00:53.930 --> 00:00:57.320
with name equals theme
color, and set the content

00:00:57.320 --> 00:00:59.030
to the color you want.

00:00:59.030 --> 00:01:02.700
In the past, getting users to
add your web app to their home

00:01:02.700 --> 00:01:05.230
screen has been a bit of a pain.

00:01:05.230 --> 00:01:09.650
But in Chrome 42, we
introduced app install banners.

00:01:09.650 --> 00:01:11.970
App install banners
allow your users

00:01:11.970 --> 00:01:15.890
to quickly and seamlessly add
your web app to their home

00:01:15.890 --> 00:01:18.720
screen with just a single tap.

00:01:18.720 --> 00:01:21.490
In order for Chrome to show
the app install banner,

00:01:21.490 --> 00:01:24.760
it looks for a manifest
file, a service worker,

00:01:24.760 --> 00:01:28.100
and a set of other heuristics
about how often the user has

00:01:28.100 --> 00:01:29.750
visited the site.

00:01:29.750 --> 00:01:32.720
The manifest.json file
provides the browser

00:01:32.720 --> 00:01:35.210
with details about
your application

00:01:35.210 --> 00:01:38.200
that it might not be able
to get from elsewhere.

00:01:38.200 --> 00:01:40.490
Like theme color,
every page needs

00:01:40.490 --> 00:01:44.030
to include a link element
with rel equals manifest,

00:01:44.030 --> 00:01:48.310
and an href pointing to
the manifest.json file.

00:01:48.310 --> 00:01:51.260
Inside the manifest,
I've defined short name,

00:01:51.260 --> 00:01:54.050
which is used in
space-constrained locations

00:01:54.050 --> 00:01:57.940
such as the app name under
the icon on the home screen.

00:01:57.940 --> 00:02:02.080
But the full app name may
be used in other locations.

00:02:02.080 --> 00:02:04.940
To make sure your
icons look their best,

00:02:04.940 --> 00:02:08.410
Chrome first looks
for a 48-dip image.

00:02:08.410 --> 00:02:11.610
Remember, dips are
device-independent pixels.

00:02:11.610 --> 00:02:14.410
So on a 2x display, it's
going to try and use

00:02:14.410 --> 00:02:19.840
a 96x96 pixel image, or
a 144x144 pixel image

00:02:19.840 --> 00:02:21.710
for a 3x display.

00:02:21.710 --> 00:02:25.380
If it can't find one of those,
it will use the closest match.

00:02:25.380 --> 00:02:28.730
For the paper calculator,
I've created four icons.

00:02:28.730 --> 00:02:35.540
A 1x at 48 pixels, a 2x at 96
pixels, a 3x at 144 pixels,

00:02:35.540 --> 00:02:38.510
and a 4x at 192 pixels.

00:02:38.510 --> 00:02:42.410
I've specified the icon source,
the size, and the MIME type

00:02:42.410 --> 00:02:43.980
for each.

00:02:43.980 --> 00:02:46.580
Adding the start URL
parameter is helpful,

00:02:46.580 --> 00:02:49.130
since it tells Chrome
which page to load

00:02:49.130 --> 00:02:51.320
when the app is initialized.

00:02:51.320 --> 00:02:54.730
It also has the added
benefit of stat tracking.

00:02:54.730 --> 00:02:56.830
By pointing this to
a unique page that

00:02:56.830 --> 00:02:59.070
uses Google Analytics,
we can track

00:02:59.070 --> 00:03:03.380
how many users are opening this
app from their home screen.

00:03:03.380 --> 00:03:06.990
This also means that your
manifest can span many files,

00:03:06.990 --> 00:03:09.960
but always start
with the same URL.

00:03:09.960 --> 00:03:14.250
By setting display:standalone,
Chrome hides the address bar

00:03:14.250 --> 00:03:15.710
on launch.

00:03:15.710 --> 00:03:18.760
Let's see what happens
when we open the site.

00:03:18.760 --> 00:03:22.050
There's my blue theme color
applied to the address bar,

00:03:22.050 --> 00:03:24.160
and the app install
banner shows up.

00:03:24.160 --> 00:03:25.000
Simple as that.

00:03:28.900 --> 00:03:30.942
PUPPET: OK, hold on a sec.

00:03:30.942 --> 00:03:31.854
Time out.

00:03:31.854 --> 00:03:35.240
He glossed over some things
that need to happen for app

00:03:35.240 --> 00:03:37.452
install banners to appear.

00:03:37.452 --> 00:03:40.192
He mentioned earlier
that Chrome looks

00:03:40.192 --> 00:03:43.145
for several heuristics, the
manifest and a service worker.

00:03:43.145 --> 00:03:45.620
Chrome will then show
the app install banner

00:03:45.620 --> 00:03:49.290
if the user visits the app
on at least two separate days

00:03:49.290 --> 00:03:51.886
over a period of two weeks.

00:03:51.886 --> 00:03:55.653
Without those, the app install
banner will not appear.

00:03:55.653 --> 00:03:59.092
For this video, I've used
a little puppet magic

00:03:59.092 --> 00:04:01.465
and added a simple
service worker.

00:04:01.465 --> 00:04:05.602
For testing, I've enabled the
bypass app banner engagement

00:04:05.602 --> 00:04:06.544
checks flag.

00:04:06.544 --> 00:04:08.899
Say that one 10 times fast.

00:04:08.899 --> 00:04:11.540
What that does is
bypass the checks

00:04:11.540 --> 00:04:14.976
on how many visits are
required before the app install

00:04:14.976 --> 00:04:18.040
banner is shown.

00:04:18.040 --> 00:04:19.680
PETE LePAGE: Woah,
that was weird.

00:04:19.680 --> 00:04:22.430
Feels like I was frozen in
time there for a second.

00:04:22.430 --> 00:04:24.500
As I said, there's
the theme color

00:04:24.500 --> 00:04:26.170
applied to the address bar.

00:04:26.170 --> 00:04:28.700
But I also get the app
install banner appearing

00:04:28.700 --> 00:04:30.910
at the bottom of the
screen, prompting

00:04:30.910 --> 00:04:33.920
me to add the calculator
to my home screen.

00:04:33.920 --> 00:04:36.660
Let's click Add and
see what happens.

00:04:36.660 --> 00:04:38.360
Yep, there it is.

00:04:38.360 --> 00:04:41.670
Notice it used short name
we defined in the manifest,

00:04:41.670 --> 00:04:44.720
and the correct icon specified
in the manifest file.

00:04:44.720 --> 00:04:46.090
Sweet.

00:04:46.090 --> 00:04:49.970
When I click on the app, it
loads as a standalone app.

00:04:49.970 --> 00:04:52.340
There's no address
bar, the status bar

00:04:52.340 --> 00:04:54.770
is the color we
expect, and our app

00:04:54.770 --> 00:04:57.590
feels like an
installed native app.

00:04:57.590 --> 00:05:00.700
And remember, I cheated
with my service worker.

00:05:00.700 --> 00:05:03.120
This calculator doesn't
really work offline

00:05:03.120 --> 00:05:04.650
because the service
worker doesn't

00:05:04.650 --> 00:05:06.660
provide an offline experience.

00:05:06.660 --> 00:05:09.970
But you could that with
just a little bit more work.

00:05:09.970 --> 00:05:11.260
So there you have it.

00:05:11.260 --> 00:05:15.095
I've shown you how you can
use theme color, the manifest,

00:05:15.095 --> 00:05:18.410
and service workers to
make your app feel more

00:05:18.410 --> 00:05:20.780
like an installed native app.

00:05:20.780 --> 00:05:21.980
Thanks for watching.

00:05:21.980 --> 00:05:26.060
I'm Pete LePage, and I/O out.

00:05:26.060 --> 00:05:29.710
[MUSIC PLAYING]

