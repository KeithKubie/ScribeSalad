WEBVTT
Kind: captions
Language: en

00:00:00.570 --> 00:00:02.540
Google Maps provides
a suite of APIs

00:00:02.540 --> 00:00:05.460
to let developers
access location data.

00:00:05.460 --> 00:00:08.086
Each of the APIs packages
up unique functionality.

00:00:08.086 --> 00:00:09.960
And today, I'm going to
give you a quick tour

00:00:09.960 --> 00:00:11.810
through all those APIs.

00:00:11.810 --> 00:00:14.460
So let's start
with the Roads API.

00:00:14.460 --> 00:00:16.540
Roads API provides
an important service

00:00:16.540 --> 00:00:19.690
that can clean up any
collected GPS data produced

00:00:19.690 --> 00:00:21.620
by your mobile application.

00:00:21.620 --> 00:00:24.080
Say, for example, you
collect about 10 GPS points

00:00:24.080 --> 00:00:26.760
from your app while
driving around in a car.

00:00:26.760 --> 00:00:28.850
They are more than likely
a poor representation

00:00:28.850 --> 00:00:30.560
of the path you drove.

00:00:30.560 --> 00:00:32.280
Some points are
in a park, others

00:00:32.280 --> 00:00:33.880
are in the neighboring street

00:00:33.880 --> 00:00:37.410
By using the Roads API, you can
turn those 10 inaccurate GPS

00:00:37.410 --> 00:00:41.260
points from this to this without
the need for a higher sample

00:00:41.260 --> 00:00:43.880
rate, which will
increase battery drain.

00:00:43.880 --> 00:00:45.880
The Roads API uses
Google Maps data

00:00:45.880 --> 00:00:47.450
to ensure the
points are actually

00:00:47.450 --> 00:00:49.540
on roads you've traversed.

00:00:49.540 --> 00:00:52.440
Another feature of the
Roads API is speed limits.

00:00:52.440 --> 00:00:54.360
Now, that feature's for
paying customers only,

00:00:54.360 --> 00:00:56.770
but the value of it for,
say, speed or fastest

00:00:56.770 --> 00:00:58.560
route estimating is immense.

00:00:58.560 --> 00:01:00.990
So you might want
to check it out.

00:01:00.990 --> 00:01:03.450
Imagine you're managing
a number of pizza stores.

00:01:03.450 --> 00:01:06.270
When an order comes in, you
could use the Distance Matrix

00:01:06.270 --> 00:01:09.050
API to find out the distance
from the customer to all

00:01:09.050 --> 00:01:10.269
of your shops at once.

00:01:10.269 --> 00:01:11.810
Then you can choose
the closest store

00:01:11.810 --> 00:01:13.790
to deliver the pizza from.

00:01:13.790 --> 00:01:15.340
When it's time to
deliver the pizza

00:01:15.340 --> 00:01:19.150
from the shop to the customer,
you can use the Directions API.

00:01:19.150 --> 00:01:21.940
This API allows you to pass
in addresses or lat/long

00:01:21.940 --> 00:01:25.180
pairs as the input, and retrieve
driving, walking, cycling,

00:01:25.180 --> 00:01:27.480
or public transport directions.

00:01:27.480 --> 00:01:30.680
This API also supports
route optimization.

00:01:30.680 --> 00:01:33.420
So say the driver is using
your pizza delivery app.

00:01:33.420 --> 00:01:36.320
You can use the Directions
API to get the shortest path

00:01:36.320 --> 00:01:38.850
between all the delivery stops.

00:01:38.850 --> 00:01:41.610
In addition, you can give the
customers approximate arrival

00:01:41.610 --> 00:01:44.700
time of their delicious meal,
using the API to estimate

00:01:44.700 --> 00:01:47.750
travel time in current traffic.

00:01:47.750 --> 00:01:49.680
Places API lets you
convert coordinates

00:01:49.680 --> 00:01:51.129
into meaningful place names.

00:01:51.129 --> 00:01:53.587
So next time you want to invite
your buddies to 3.14159265,

00:01:53.587 --> 00:01:59.890
2.718281828, just
stop, and tell them

00:01:59.890 --> 00:02:02.617
you'll meet at
O'Shea's Irish pub.

00:02:02.617 --> 00:02:04.200
Other times, you
might have an address

00:02:04.200 --> 00:02:05.764
but need its coordinates.

00:02:05.764 --> 00:02:07.430
Say you're building
a house hunting app,

00:02:07.430 --> 00:02:09.699
and you want to plot a bunch
of properties on a map.

00:02:09.699 --> 00:02:12.660
You could use the Geocoding
API to convert addresses

00:02:12.660 --> 00:02:14.450
to lat/longs.

00:02:14.450 --> 00:02:17.920
Reverse geocoding is also
supported, converting lat/longs

00:02:17.920 --> 00:02:18.937
back into addresses.

00:02:18.937 --> 00:02:21.270
This is useful, for example,
if you're writing something

00:02:21.270 --> 00:02:22.960
like a weather widget app.

00:02:22.960 --> 00:02:25.530
Grabbing the GPS coordinates
from the user's phone,

00:02:25.530 --> 00:02:28.220
you can display the
country, suburb, or street

00:02:28.220 --> 00:02:32.440
they're currently at by passing
the data received from the API.

00:02:32.440 --> 00:02:35.590
Other related APIs we provide
include the Elevation API

00:02:35.590 --> 00:02:37.190
and the Timezone API.

00:02:37.190 --> 00:02:39.220
For full details
about all web service

00:02:39.220 --> 00:02:41.390
APIs available to
extend your app,

00:02:41.390 --> 00:02:45.020
see the Google Maps APIs
developer docs at this link.

00:02:45.020 --> 00:02:47.530
Each of those APIs is
really powerful on its own.

00:02:47.530 --> 00:02:49.510
But when used together,
they bring synergy

00:02:49.510 --> 00:02:52.580
into your app that gives
it that extra edge.

00:02:52.580 --> 00:02:55.330
[MUSIC PLAYING]

