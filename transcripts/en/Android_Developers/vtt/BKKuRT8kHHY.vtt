WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.110
DAN GALPIN: Hi.

00:00:01.110 --> 00:00:03.450
I'm Dan Galpin, Android
developer advocate.

00:00:03.450 --> 00:00:07.080
And we're here to talk about
the Android 7.1 preview.

00:00:07.080 --> 00:00:08.580
A couple of weeks
ago, we announced

00:00:08.580 --> 00:00:11.220
that a developer preview
of Android 7.1 Nougat

00:00:11.220 --> 00:00:12.330
was on the way.

00:00:12.330 --> 00:00:15.790
And just in case you haven't
noticed, it's available now.

00:00:15.790 --> 00:00:17.790
There's a few differences
between this preview

00:00:17.790 --> 00:00:19.170
and others in the program.

00:00:19.170 --> 00:00:21.840
Since 7.1 is already
launched on Pixel,

00:00:21.840 --> 00:00:23.800
we're delivering the
initial developer preview

00:00:23.800 --> 00:00:26.790
at beta quality for the
Nexus lineup of devices.

00:00:26.790 --> 00:00:30.190
The goal is to tease out
any device-specific issues.

00:00:30.190 --> 00:00:33.360
This means we've already
finalized the new APIs as API

00:00:33.360 --> 00:00:36.120
level 25, and we've
opened up publishing

00:00:36.120 --> 00:00:38.820
on Google Play for apps
targeting the new API level.

00:00:38.820 --> 00:00:41.550
So you can update your apps
as soon as you're ready.

00:00:41.550 --> 00:00:43.300
So what's new?

00:00:43.300 --> 00:00:46.080
First of all, Android 7.1
features a few changes

00:00:46.080 --> 00:00:47.790
specific to the launcher.

00:00:47.790 --> 00:00:50.880
App shortcuts allow you to add
both static and dynamic links

00:00:50.880 --> 00:00:52.770
to key actions within your app.

00:00:52.770 --> 00:00:55.290
Users simply long press
your Apps Launcher icon

00:00:55.290 --> 00:00:57.060
to reveal the app
shortcuts, then

00:00:57.060 --> 00:01:00.390
tap on a shortcut to jump
to the associated action.

00:01:00.390 --> 00:01:02.910
Each shortcut references
an intent, each of which

00:01:02.910 --> 00:01:05.010
launches a specific
action or task.

00:01:05.010 --> 00:01:07.020
And you can create a
shortcut for any action

00:01:07.020 --> 00:01:08.820
that you can express
as an intent.

00:01:08.820 --> 00:01:10.620
For example, you
can create intents

00:01:10.620 --> 00:01:13.800
for sending a new text
message, making a reservation,

00:01:13.800 --> 00:01:17.070
playing a video, continue
game, loading a map

00:01:17.070 --> 00:01:19.500
location, and much more.

00:01:19.500 --> 00:01:21.660
You can create shortcuts
for your app statically

00:01:21.660 --> 00:01:24.390
by adding them to a
resource file in the APK,

00:01:24.390 --> 00:01:27.330
or you can add them
dynamically at runtime.

00:01:27.330 --> 00:01:29.820
Static shortcuts are
ideal for common actions,

00:01:29.820 --> 00:01:31.710
and dynamic shortcuts
let you highlight

00:01:31.710 --> 00:01:33.690
actions based on
user's preferences,

00:01:33.690 --> 00:01:36.150
behavior, location, and so on.

00:01:36.150 --> 00:01:39.420
You can offer up to five
shortcuts in each of your apps.

00:01:39.420 --> 00:01:41.220
After your app adds
shortcuts, they're

00:01:41.220 --> 00:01:43.526
available on any launcher
that supports them,

00:01:43.526 --> 00:01:45.150
such as the Pixel
Launcher, the default

00:01:45.150 --> 00:01:47.970
launcher on Pixel devices,
the Now Launcher, the default

00:01:47.970 --> 00:01:50.430
launcher on Nexus devices,
and other launchers that

00:01:50.430 --> 00:01:52.110
provide support.

00:01:52.110 --> 00:01:55.260
Any app can create shortcuts,
and any launcher app

00:01:55.260 --> 00:01:57.150
can add support for shortcuts.

00:01:57.150 --> 00:01:59.580
Android 7.1 provides
an API for apps

00:01:59.580 --> 00:02:01.410
to register shortcuts
and launchers

00:02:01.410 --> 00:02:04.050
to read the
registered shortcuts.

00:02:04.050 --> 00:02:06.780
Apps can now define circular
launcher icons which

00:02:06.780 --> 00:02:09.330
are used on devices that
support them, and much of this

00:02:09.330 --> 00:02:10.800
happens automatically.

00:02:10.800 --> 00:02:12.810
When a launcher
requests an app icon,

00:02:12.810 --> 00:02:15.480
the framework returns
either Android colon icon

00:02:15.480 --> 00:02:18.060
or Android colon round icon,
depending on the device

00:02:18.060 --> 00:02:19.560
build configuration.

00:02:19.560 --> 00:02:23.310
You can use Image Asset
Studio to design round icons.

00:02:23.310 --> 00:02:26.280
You can test your circular
icons on a Google Pixel device

00:02:26.280 --> 00:02:29.130
or by running the Android
emulator with the Google API's

00:02:29.130 --> 00:02:33.117
emulator system image
targeting API level 25.

00:02:33.117 --> 00:02:34.950
Something that feels
related to the launcher

00:02:34.950 --> 00:02:37.620
is enhanced live
wallpaper metadata.

00:02:37.620 --> 00:02:39.900
In addition to the existing
metadata attributes,

00:02:39.900 --> 00:02:42.360
such as label,
description, and author,

00:02:42.360 --> 00:02:45.810
there are new attributes
for a context URL and title

00:02:45.810 --> 00:02:47.370
to link users to
more information

00:02:47.370 --> 00:02:48.690
about the wallpaper.

00:02:48.690 --> 00:02:51.240
This allows for a better,
richer user experience

00:02:51.240 --> 00:02:53.580
when choosing live wallpapers.

00:02:53.580 --> 00:02:57.000
Another 7.1 feature makes
stickers and other rich content

00:02:57.000 --> 00:02:59.520
available through soft
keyboards, otherwise known

00:02:59.520 --> 00:03:01.770
as input method editors or IMEs.

00:03:01.770 --> 00:03:05.370
The 7.1 SDK includes
the Commit Content API,

00:03:05.370 --> 00:03:07.710
which provides a universal
way to send images

00:03:07.710 --> 00:03:09.600
and other rich
content from an IME

00:03:09.600 --> 00:03:12.150
directly to a text
editor in an app.

00:03:12.150 --> 00:03:16.200
The API i also available in the
revision 25 version of the V13

00:03:16.200 --> 00:03:17.880
support library.

00:03:17.880 --> 00:03:20.250
With this API, you can
build messaging apps

00:03:20.250 --> 00:03:22.470
that accept rich content
from any keyboard

00:03:22.470 --> 00:03:26.250
as well as keyboards that can
send rich content to any app.

00:03:26.250 --> 00:03:28.620
There are two other
cool things in 7.1

00:03:28.620 --> 00:03:31.050
that you might want to
consider taking advantage of.

00:03:31.050 --> 00:03:33.480
The first of them is the
storage manager intent.

00:03:33.480 --> 00:03:36.540
Apps can now fire the action
manage storage intent,

00:03:36.540 --> 00:03:39.660
taking the user to the
system's Free Up Space screen.

00:03:39.660 --> 00:03:42.610
If your app requires more space
than is currently available,

00:03:42.610 --> 00:03:45.150
it can use this intent to
let the user delete unneeded

00:03:45.150 --> 00:03:48.250
apps and content to free
up sufficient space.

00:03:48.250 --> 00:03:50.379
Another thing you can take
advantage of in your app

00:03:50.379 --> 00:03:52.170
is checking to see if
the device is running

00:03:52.170 --> 00:03:55.020
as the demo user using
the new user manager

00:03:55.020 --> 00:03:56.670
is demo user method.

00:03:56.670 --> 00:03:58.200
This allows your
app to customize

00:03:58.200 --> 00:04:00.600
the starting experience
to a potential customer.

00:04:00.600 --> 00:04:02.130
When running as a
demo user, an app

00:04:02.130 --> 00:04:04.350
might provide more
assistance to the user

00:04:04.350 --> 00:04:07.180
or explain its features
in more detail.

00:04:07.180 --> 00:04:09.690
There are a bunch of
other features in 7.1,

00:04:09.690 --> 00:04:12.030
such as support for additional
Android Wear [INAUDIBLE]

00:04:12.030 --> 00:04:14.070
and some important
telephony features.

00:04:14.070 --> 00:04:18.390
Check the Android 7.1 page
out on developer.android.com

00:04:18.390 --> 00:04:20.040
for all the details.

00:04:20.040 --> 00:04:22.590
If you're already enrolled
in the Android beta program,

00:04:22.590 --> 00:04:24.090
then your eligible
enrolled devices

00:04:24.090 --> 00:04:26.700
will get the Android 7.1
developer preview update

00:04:26.700 --> 00:04:27.660
right away.

00:04:27.660 --> 00:04:29.800
No action is needed
on your part.

00:04:29.800 --> 00:04:31.680
If you aren't yet
enrolled in Android beta,

00:04:31.680 --> 00:04:34.980
the easiest way to get started
is to visit Android.com/beta

00:04:34.980 --> 00:04:37.410
and opt in your eligible
Android phone or tablet.

00:04:37.410 --> 00:04:39.090
You'll soon receive
this and later

00:04:39.090 --> 00:04:40.890
preview updates over the air.

00:04:40.890 --> 00:04:42.660
If you have an enrolled
device and do not

00:04:42.660 --> 00:04:45.150
want to receive the update,
just visit Android Beta

00:04:45.150 --> 00:04:46.560
and unenroll the device.

00:04:46.560 --> 00:04:49.920
You can also download in
flash this update manually.

00:04:49.920 --> 00:04:52.940
We welcome your feedback in the
developer preview issue tracker

00:04:52.940 --> 00:04:55.770
and preview developer community
or Android beta community

00:04:55.770 --> 00:04:58.980
as we work towards the
consumer release in December.

00:04:58.980 --> 00:05:02.930
[MUSIC PLAYING]

