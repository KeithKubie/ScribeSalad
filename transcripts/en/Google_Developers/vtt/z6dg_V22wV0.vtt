WEBVTT
Kind: captions
Language: en

00:00:01.896 --> 00:00:04.270
[APPLAUSE]

00:00:04.270 --> 00:00:06.279
Oddly enough, that is
still a vast improvement

00:00:06.279 --> 00:00:08.570
over my introduction last
year from Jake, where it was,

00:00:08.570 --> 00:00:11.300
you're going to vomit
information onto the audience.

00:00:11.300 --> 00:00:12.715
So you're doing good, Jake.

00:00:12.715 --> 00:00:14.810
You're learning.

00:00:14.810 --> 00:00:16.470
So my name's Matt Gaunt.

00:00:16.470 --> 00:00:21.237
I'm sort of an advocate
on the Google team, yeah?

00:00:21.237 --> 00:00:22.070
And I'm from London.

00:00:22.070 --> 00:00:23.810
Hence the accent.

00:00:23.810 --> 00:00:25.240
I'm not Rob Dodson.

00:00:25.240 --> 00:00:27.820
And I'm going to talk about
fundamentals of mobile web

00:00:27.820 --> 00:00:30.100
development.

00:00:30.100 --> 00:00:31.840
So the way I want
to frame this talk

00:00:31.840 --> 00:00:33.730
is just really briefly
looking at what

00:00:33.730 --> 00:00:35.640
we've been hearing about today.

00:00:35.640 --> 00:00:38.980
So we've looked at performance
from the SILK team-- hitting

00:00:38.980 --> 00:00:42.670
60 FPS all the time,
ServiceWorker, and the ability

00:00:42.670 --> 00:00:44.675
to actually offline
your web page.

00:00:44.675 --> 00:00:46.050
Some of the things
that are going

00:00:46.050 --> 00:00:48.216
to be coming off the back
of that-- background sync,

00:00:48.216 --> 00:00:51.370
push notifications, the fact
that all of this needs TLS,

00:00:51.370 --> 00:00:56.769
and Polymer-- a timely new
way of building your web apps.

00:00:56.769 --> 00:00:58.560
And this is actually
a really exciting time

00:00:58.560 --> 00:00:59.850
to build for the web, right?

00:00:59.850 --> 00:01:02.614
Like, all these new
APIs are awesome.

00:01:02.614 --> 00:01:04.780
And then when you add all
of that on what we already

00:01:04.780 --> 00:01:08.000
have with WebRTC, Web
Audio, WebGL, like,

00:01:08.000 --> 00:01:09.000
this is really exciting.

00:01:11.800 --> 00:01:15.680
But if you're actually
new to web development,

00:01:15.680 --> 00:01:18.180
or let's say you've been doing
web development for a while,

00:01:18.180 --> 00:01:20.790
but the idea of
responsive web design

00:01:20.790 --> 00:01:24.940
or developing for mobile is
actually a bit scary to you,

00:01:24.940 --> 00:01:26.900
then all these new
APIs is probably

00:01:26.900 --> 00:01:28.762
going to be pretty daunting.

00:01:28.762 --> 00:01:30.220
I mean, I think it
was Paul Kennan,

00:01:30.220 --> 00:01:34.536
he did some research over the
top 1,000 websites on Alexis.

00:01:34.536 --> 00:01:35.910
And the thing of
it was, over 30%

00:01:35.910 --> 00:01:38.062
didn't have a mobile viewport.

00:01:38.062 --> 00:01:40.520
And when you talk to some of
these agencies, and companies,

00:01:40.520 --> 00:01:43.450
and developers, the thought
of responsive web design

00:01:43.450 --> 00:01:44.770
is still really new to them.

00:01:44.770 --> 00:01:46.520
They don't quite understand it.

00:01:46.520 --> 00:01:49.509
And for them, if you take
all of these new features,

00:01:49.509 --> 00:01:51.675
building for the web probably
feels a bit like this.

00:01:54.872 --> 00:01:56.330
And you can kind
of understand why.

00:01:56.330 --> 00:01:57.479
Like, you're new to it.

00:01:57.479 --> 00:02:00.020
You kind of feel like you might
have your feet on the ground,

00:02:00.020 --> 00:02:01.061
but you completely don't.

00:02:01.061 --> 00:02:02.160
You're completely fresh.

00:02:02.160 --> 00:02:03.690
But this is overwhelming.

00:02:03.690 --> 00:02:06.250
And nobody wants this
to happen to them, ever.

00:02:08.889 --> 00:02:10.889
And it's kind of interesting
because we're still

00:02:10.889 --> 00:02:12.930
building on top of this
core set of technologies.

00:02:12.930 --> 00:02:14.940
It's still HTML,
CSS, and JavaScript.

00:02:14.940 --> 00:02:18.950
We're just using it in different
ways or different scenarios.

00:02:18.950 --> 00:02:22.275
And I mean, even if you take
a step back from all of this,

00:02:22.275 --> 00:02:24.650
and you think about how you're
going to process new APIs,

00:02:24.650 --> 00:02:26.410
everyone's going to
do the same thing.

00:02:26.410 --> 00:02:28.422
You're going to
learn about them.

00:02:28.422 --> 00:02:30.880
You're probably going to start
building something using it.

00:02:30.880 --> 00:02:33.213
And then you're going to
iterate on that thing, probably

00:02:33.213 --> 00:02:37.510
changing it to fit your use
case or whatever it might be.

00:02:37.510 --> 00:02:40.860
And we started thinking, well,
if someone actually came to us

00:02:40.860 --> 00:02:45.240
and said, well, how do I build
a responsive mobile site?

00:02:45.240 --> 00:02:46.529
And they said, where do I go?

00:02:46.529 --> 00:02:47.070
What do I do?

00:02:47.070 --> 00:02:47.736
What do I learn?

00:02:47.736 --> 00:02:48.910
How do I do this?

00:02:48.910 --> 00:02:49.744
What's the approach?

00:02:49.744 --> 00:02:51.160
We kind of thought
about it and we

00:02:51.160 --> 00:02:52.860
realized we didn't
have a good answer.

00:02:52.860 --> 00:02:54.960
Like, realistically,
you've got specs.

00:02:54.960 --> 00:02:56.370
There's blog posts.

00:02:56.370 --> 00:02:59.095
Some of them might be up to
date, some of the might not.

00:02:59.095 --> 00:03:00.470
And we figured,
actually, there's

00:03:00.470 --> 00:03:03.530
something we can
do here to help.

00:03:03.530 --> 00:03:05.890
So back at the very
start of this year,

00:03:05.890 --> 00:03:09.490
we came up with the notion
of Web Fundamentals.

00:03:09.490 --> 00:03:11.670
And this is basically
a set of documentation

00:03:11.670 --> 00:03:14.090
which is built around use cases.

00:03:14.090 --> 00:03:19.460
So for example, how do you
build a responsive mobile site?

00:03:19.460 --> 00:03:21.590
And the idea with this
is that we basically

00:03:21.590 --> 00:03:23.810
get someone who wanted to
learn a particular thing,

00:03:23.810 --> 00:03:26.540
jump in, learn the best
practices as fast as possible,

00:03:26.540 --> 00:03:29.190
and just get running with it.

00:03:29.190 --> 00:03:31.245
So start this year, we
started working on it.

00:03:31.245 --> 00:03:34.252
And we started iterating
really, really fast.

00:03:34.252 --> 00:03:35.960
And we kind of got a
couple of months in,

00:03:35.960 --> 00:03:36.950
and we realized
we were at a point

00:03:36.950 --> 00:03:38.340
where we could
release something.

00:03:38.340 --> 00:03:40.220
And we really wanted to
do it as soon as possible

00:03:40.220 --> 00:03:41.640
to figure out
whether we were kind

00:03:41.640 --> 00:03:44.850
of answering a question
no one was answering.

00:03:44.850 --> 00:03:46.690
So we got to a stage
where, yeah, we're

00:03:46.690 --> 00:03:47.640
going to release it.

00:03:47.640 --> 00:03:50.310
And what we did was we
just published the website.

00:03:50.310 --> 00:03:52.720
We made no noise because we
didn't want the attention

00:03:52.720 --> 00:03:54.910
because, if it was a point
where no one actually

00:03:54.910 --> 00:03:56.727
wanted this stuff and
they didn't like it,

00:03:56.727 --> 00:03:57.810
then it could be like, OK.

00:03:57.810 --> 00:03:58.685
It was an experiment.

00:03:58.685 --> 00:04:01.182
We tried it and it
didn't quite pan out.

00:04:01.182 --> 00:04:03.640
And we were doing some work
with our GA, who were basically

00:04:03.640 --> 00:04:06.480
designing the site for us
and building it for us,

00:04:06.480 --> 00:04:08.290
so we could focus
on the content.

00:04:08.290 --> 00:04:10.250
And I think Phil Hawksworth
kind of summed up

00:04:10.250 --> 00:04:13.130
how the launch went
in this respect,

00:04:13.130 --> 00:04:16.260
"discovering that not all 'soft
launches' are equally soft,

00:04:16.260 --> 00:04:20.170
and embracing the resulting
crowd-sourced QA."

00:04:20.170 --> 00:04:22.830
And basically, what happened
with this was the fact

00:04:22.830 --> 00:04:24.770
that we launched the site.

00:04:24.770 --> 00:04:28.220
It very quickly got picked up
by Twitter, blogs, Hacker News.

00:04:28.220 --> 00:04:31.140
We got a ton of traffic
that we weren't expecting.

00:04:31.140 --> 00:04:33.560
You'll also notice that
it's largely me, Kennan,

00:04:33.560 --> 00:04:38.810
and Paul Lewis taunting
him with, what do you mean?

00:04:38.810 --> 00:04:40.330
And it was really
great because what

00:04:40.330 --> 00:04:43.060
we found is that we had a
GitHub link at the top to just

00:04:43.060 --> 00:04:45.387
basically encourage
people to raise issues.

00:04:45.387 --> 00:04:46.970
And what we got was
people complaining

00:04:46.970 --> 00:04:49.910
about typos, where we've
done stupid things, also

00:04:49.910 --> 00:04:51.660
a lot of people
complaining about the fact

00:04:51.660 --> 00:04:54.585
that we'd written it
in British English.

00:04:57.170 --> 00:04:59.130
But then we also
had a ton of issues

00:04:59.130 --> 00:05:02.046
around people who are actually
experts in their field.

00:05:02.046 --> 00:05:04.420
So one of the scenarios is
I'd written some documentation

00:05:04.420 --> 00:05:05.760
around Touch.

00:05:05.760 --> 00:05:07.720
And I was writing
guidance around,

00:05:07.720 --> 00:05:10.230
if you're supporting
mouse and touch,

00:05:10.230 --> 00:05:14.250
you should probably be using
active Hover and Focus.

00:05:14.250 --> 00:05:15.160
Good practices.

00:05:15.160 --> 00:05:17.050
You should do it.

00:05:17.050 --> 00:05:20.000
And PPK read through
this documentation

00:05:20.000 --> 00:05:21.440
and she sat there
and said, you've

00:05:21.440 --> 00:05:23.110
said people should
be using Hover.

00:05:23.110 --> 00:05:24.240
That's fine.

00:05:24.240 --> 00:05:28.200
But you don't mention the fact
that if you touch something,

00:05:28.200 --> 00:05:32.080
when you actually let go,
the hover state sticks.

00:05:32.080 --> 00:05:34.690
Now my first thought was WTF?

00:05:34.690 --> 00:05:36.346
Why is that sticking?

00:05:36.346 --> 00:05:37.970
But the other part,
I hadn't noticed it

00:05:37.970 --> 00:05:40.554
because I'd always
used Focus, as well.

00:05:40.554 --> 00:05:42.220
So this is really
handy for two reasons.

00:05:42.220 --> 00:05:44.226
One, he was an
expert in the field.

00:05:44.226 --> 00:05:45.600
He just jumped in
said, actually,

00:05:45.600 --> 00:05:46.710
you need to add this in.

00:05:46.710 --> 00:05:49.410
It's best practices, and you
have to tell people about this.

00:05:49.410 --> 00:05:51.816
Update the docs,
it's in, good to go.

00:05:51.816 --> 00:05:53.690
The other part is, then
I can go and complain

00:05:53.690 --> 00:05:56.600
to Chrome engineering and
go, why are we doing this?

00:05:56.600 --> 00:05:59.510
Is there any way we cannot
do it because I can't hover

00:05:59.510 --> 00:06:01.510
on my mobile phone, and
do something with it.

00:06:04.750 --> 00:06:08.290
So the whole point of Web
Fundamentals is best practices.

00:06:08.290 --> 00:06:12.689
And we're still adding
documentation on to it.

00:06:12.689 --> 00:06:14.230
But one of the
important distinctions

00:06:14.230 --> 00:06:15.688
to make with all
this documentation

00:06:15.688 --> 00:06:17.940
is its fundamental practices.

00:06:17.940 --> 00:06:20.240
So if you take something
like ServiceWorker,

00:06:20.240 --> 00:06:23.800
that's not going to land on
Web Fundamentals anytime soon--

00:06:23.800 --> 00:06:26.280
purely for the fact that it's
brand spanking new, which

00:06:26.280 --> 00:06:28.730
means that there
aren't best practices.

00:06:28.730 --> 00:06:30.425
I think every one
that's actually

00:06:30.425 --> 00:06:32.800
played with ServiceWorker has
done something a little bit

00:06:32.800 --> 00:06:34.950
different, something
that works of them.

00:06:34.950 --> 00:06:36.930
So, to be honest, the
idea of best practices,

00:06:36.930 --> 00:06:39.382
and defining them right
now, they don't exist.

00:06:39.382 --> 00:06:40.840
People are still
figuring them out.

00:06:43.854 --> 00:06:46.520
But it's also important to point
out that they're use case lead.

00:06:46.520 --> 00:06:49.090
So you would never really
land on Web Fundamentals

00:06:49.090 --> 00:06:50.260
and say, ah.

00:06:50.260 --> 00:06:53.160
There's a doc on how to
implement ServiceWorker.

00:06:53.160 --> 00:06:56.590
What it would be is, how to
implement offline web apps.

00:06:56.590 --> 00:06:58.700
So the main reason
I say this is,

00:06:58.700 --> 00:07:02.610
if someone wrote an article
like Jake did for App Cash,

00:07:02.610 --> 00:07:04.890
and there's a new API that
we can actually swap out,

00:07:04.890 --> 00:07:07.730
and then-- as time
changes-- APIs come and go.

00:07:07.730 --> 00:07:09.950
We can have the same
document structure,

00:07:09.950 --> 00:07:11.950
and change the best
practices over time.

00:07:14.159 --> 00:07:16.450
And one of the main reasons
we wanted this really quick

00:07:16.450 --> 00:07:20.310
feedback loop is because we were
opinionated in all the docs.

00:07:20.310 --> 00:07:22.680
If you read something
like the tooling section,

00:07:22.680 --> 00:07:25.647
and you take a typical
kind of heated discussion,

00:07:25.647 --> 00:07:27.730
shall we say, within the
web development community

00:07:27.730 --> 00:07:31.780
like Gulp versus Grunt,
we just pick one.

00:07:31.780 --> 00:07:34.445
We make an informed decision out
of all of the available tools

00:07:34.445 --> 00:07:35.820
and we pick the
one that we think

00:07:35.820 --> 00:07:37.972
is going to fit most use cases.

00:07:37.972 --> 00:07:40.430
Now, the main reason for this
is, if you're a new developer

00:07:40.430 --> 00:07:42.138
and you don't know
what Gulp or Grunt is,

00:07:42.138 --> 00:07:44.790
you've never had a build
process of your own.

00:07:44.790 --> 00:07:46.560
Chances are you
don't want the choice

00:07:46.560 --> 00:07:48.310
because you'll quickly
land in this choice

00:07:48.310 --> 00:07:52.692
paralysis of everyone telling
you one thing versus the other.

00:07:52.692 --> 00:07:55.150
And the flip side of this is,
well, if you land on the docs

00:07:55.150 --> 00:07:58.207
and you go, I disagree with
you right here, chances

00:07:58.207 --> 00:07:59.790
are you know enough
about this to make

00:07:59.790 --> 00:08:01.520
an informed decision anyway.

00:08:01.520 --> 00:08:04.860
So you should run with that.

00:08:04.860 --> 00:08:07.850
But there's one
massive issue with what

00:08:07.850 --> 00:08:10.510
we've done with Web Fundamentals
and that was the fact

00:08:10.510 --> 00:08:13.174
that we didn't help
with building stuff.

00:08:13.174 --> 00:08:14.340
It's a set of documentation.

00:08:14.340 --> 00:08:18.070
You can still get really
overwhelmed by all of this.

00:08:18.070 --> 00:08:23.330
And this is where we came
up with Web Starter Kit.

00:08:23.330 --> 00:08:26.190
And the idea behind this was
that all the best practices

00:08:26.190 --> 00:08:32.214
that we can actually just hand
over to a developer go in here.

00:08:32.214 --> 00:08:34.130
And it's kind of interesting
talking to people

00:08:34.130 --> 00:08:36.520
because they get a bit--
it's difficult to define what

00:08:36.520 --> 00:08:38.520
Web Starter Kit is because
we didn't necessarily

00:08:38.520 --> 00:08:41.049
do a great job of explaining
it because we basically wanted

00:08:41.049 --> 00:08:43.590
to get the feedback to figure
out what people wanted us to do

00:08:43.590 --> 00:08:45.285
with it.

00:08:45.285 --> 00:08:46.660
And the way I kind
of think of it

00:08:46.660 --> 00:08:48.970
is, if you create
a new web project,

00:08:48.970 --> 00:08:52.450
there's probably a couple
of things you do by default.

00:08:52.450 --> 00:08:54.480
For me, it's always I
end up building something

00:08:54.480 --> 00:08:55.390
with Grunt and Gulp.

00:08:55.390 --> 00:08:57.500
I just start adding
that in because it just

00:08:57.500 --> 00:08:59.520
takes care of a ton
of tasks for me.

00:08:59.520 --> 00:09:02.620
And it's good to use.

00:09:02.620 --> 00:09:04.780
I also just end up copying
and pasting something

00:09:04.780 --> 00:09:07.470
from an old website, in terms
of the header and the footer,

00:09:07.470 --> 00:09:11.420
just because I can't be
bothered to remember it.

00:09:11.420 --> 00:09:13.194
It's true.

00:09:13.194 --> 00:09:14.610
But the other side
of it is then I

00:09:14.610 --> 00:09:16.720
probably either
define a set of styles

00:09:16.720 --> 00:09:19.220
just to make things look OK,
or I just go and grab something

00:09:19.220 --> 00:09:22.800
like Bootstrap or Foundation
because, ultimately, I

00:09:22.800 --> 00:09:25.140
just want something that kick
starts the look and feel.

00:09:25.140 --> 00:09:28.840
And then I'll change it
afterwards if I want to.

00:09:28.840 --> 00:09:31.620
So this was the aim
of Web Starter Kit.

00:09:31.620 --> 00:09:34.192
So out of the box,
we come with Gulp.

00:09:34.192 --> 00:09:35.650
And we do a set of
tasks with this.

00:09:35.650 --> 00:09:39.210
So with your styles, we
have CSS and Sass support.

00:09:39.210 --> 00:09:42.020
And we concatenate, which means
just two files, smash them

00:09:42.020 --> 00:09:44.910
together, which means when the
browser has to go and fetch

00:09:44.910 --> 00:09:47.950
a CSS, it's fetching one
file rather than five.

00:09:47.950 --> 00:09:49.870
It's just easier
and more efficient,

00:09:49.870 --> 00:09:52.350
in terms of getting
everything to the browser.

00:09:52.350 --> 00:09:54.930
And we minify it so the files
are actually smaller, faster,

00:09:54.930 --> 00:09:57.170
to actually get to the device.

00:09:57.170 --> 00:09:59.280
And it's been really
interesting because, while I

00:09:59.280 --> 00:10:03.699
use Sass every day, most
people actually get to a point,

00:10:03.699 --> 00:10:05.990
when they're new to this,
they don't want install Ruby.

00:10:05.990 --> 00:10:08.711
They don't want to install
Sass on top of that.

00:10:08.711 --> 00:10:10.460
So in the next version
of Web Starter Kit,

00:10:10.460 --> 00:10:12.520
we're going to drop the
requirement for Sass

00:10:12.520 --> 00:10:13.112
altogether.

00:10:13.112 --> 00:10:14.820
We're going to make
it an optional thing.

00:10:14.820 --> 00:10:15.905
So by default, no Sass.

00:10:15.905 --> 00:10:18.340
But if you add it in,
we'll be using node Sass.

00:10:18.340 --> 00:10:20.150
So basically, it's
an NPM module.

00:10:20.150 --> 00:10:23.460
There's no additional
dependency.

00:10:23.460 --> 00:10:26.010
JavaScript minify
and concatenate again

00:10:26.010 --> 00:10:27.720
because it's efficient.

00:10:27.720 --> 00:10:29.702
We also use JSON out of the box.

00:10:29.702 --> 00:10:31.160
So if you're a
brand new developer,

00:10:31.160 --> 00:10:32.987
I think this is probably
a little bit scary

00:10:32.987 --> 00:10:35.320
because you suddenly get this
thing that goes, actually,

00:10:35.320 --> 00:10:36.100
in JavaScript

00:10:36.100 --> 00:10:38.585
you need to fix
these set of issues.

00:10:38.585 --> 00:10:39.710
But it's incredibly useful.

00:10:39.710 --> 00:10:41.239
It catches really simple errors.

00:10:41.239 --> 00:10:43.530
And plus, it encourages the
education of best practices

00:10:43.530 --> 00:10:44.113
in JavaScript.

00:10:47.800 --> 00:10:50.497
Images is an interesting
one because, how many of you

00:10:50.497 --> 00:10:52.080
guys have heard of
PageSpeed Insights?

00:10:55.070 --> 00:10:56.330
OK.A fair few.

00:10:56.330 --> 00:10:58.190
So PageSpeed Insights
looks at your site

00:10:58.190 --> 00:11:01.710
and basically
analyzes, essentially,

00:11:01.710 --> 00:11:03.650
the load time
performance of your page.

00:11:03.650 --> 00:11:07.350
And one of the things it looks
for is image compression.

00:11:07.350 --> 00:11:09.944
And at Google I/O,
we had a device lab

00:11:09.944 --> 00:11:11.360
like we had, and
we got to a point

00:11:11.360 --> 00:11:12.735
where people kind
of said, I want

00:11:12.735 --> 00:11:14.550
to see my website
across all the things.

00:11:14.550 --> 00:11:16.280
And we kind of,
me and Pete LePage

00:11:16.280 --> 00:11:16.950
were manning the station.

00:11:16.950 --> 00:11:18.200
We got to the point
where we said, OK.

00:11:18.200 --> 00:11:19.600
We'll put it on
all these devices

00:11:19.600 --> 00:11:21.766
if you let us analyze every
single part of your site

00:11:21.766 --> 00:11:24.960
and kind of point out where
you could be doing better.

00:11:24.960 --> 00:11:26.990
And images, it was
horrifying the number

00:11:26.990 --> 00:11:28.710
of people that just
didn't minify images.

00:11:28.710 --> 00:11:30.668
And these aren't even,
like, just pet projects.

00:11:30.668 --> 00:11:33.750
These are like proper
companies spending lots of time

00:11:33.750 --> 00:11:36.750
on their mobile sites.

00:11:36.750 --> 00:11:39.290
And this thing could
save you 50%, 60%, 70%

00:11:39.290 --> 00:11:41.070
on just a single image.

00:11:41.070 --> 00:11:42.570
So yeah.

00:11:42.570 --> 00:11:43.875
We just put that in there.

00:11:43.875 --> 00:11:46.170
It's best practice.

00:11:46.170 --> 00:11:48.920
And then, we've also
got a style guide.

00:11:48.920 --> 00:11:51.747
And the initial intention
with this was, out of the box,

00:11:51.747 --> 00:11:53.330
if you just wanted
to get going, you'd

00:11:53.330 --> 00:11:55.070
have a good set of styles.

00:11:55.070 --> 00:11:57.750
And then, over time, we'd hope
the you'd jump in Style Guide,

00:11:57.750 --> 00:11:59.530
customize it, do
whatever you want,

00:11:59.530 --> 00:12:03.222
rip bits out, put stuff
in, and it would be yours.

00:12:03.222 --> 00:12:04.930
And developers actually
really like this.

00:12:04.930 --> 00:12:08.274
They like the notion of
splitting content from style.

00:12:08.274 --> 00:12:10.690
I don't know whether it's a
[INAUDIBLE] style guide driven

00:12:10.690 --> 00:12:12.200
development, but
that's generally

00:12:12.200 --> 00:12:14.850
how people come to refer to it.

00:12:14.850 --> 00:12:16.900
But the problem with the
current version of this

00:12:16.900 --> 00:12:18.982
is it's horrible
to actually change.

00:12:18.982 --> 00:12:19.690
Like, it's great.

00:12:19.690 --> 00:12:21.170
A lot of people would
just jump in and use it.

00:12:21.170 --> 00:12:22.810
But tweaking it is
a pain because we've

00:12:22.810 --> 00:12:25.460
got all these
dependencies on Sass.

00:12:25.460 --> 00:12:26.770
And it's not all that good.

00:12:26.770 --> 00:12:28.186
I'm going to talk
about what we're

00:12:28.186 --> 00:12:30.120
going to change with
that in a minute.

00:12:30.120 --> 00:12:31.670
But first, there's
two other tools

00:12:31.670 --> 00:12:35.720
that we added in to
the Web Starter Kit.

00:12:35.720 --> 00:12:38.740
And basically, the minute you
start a development server

00:12:38.740 --> 00:12:42.490
with Gulp Serv, it
adds in LiveReload.

00:12:42.490 --> 00:12:44.490
Now, if you've seen any
of my talks in the past,

00:12:44.490 --> 00:12:46.340
I frigging love LiveReload.

00:12:46.340 --> 00:12:49.080
I still occasionally see
professional web developers

00:12:49.080 --> 00:12:51.111
make a change, go into
the browser, hit Refresh,

00:12:51.111 --> 00:12:52.860
occasionally hit Control
+ Shift + Refresh

00:12:52.860 --> 00:12:54.370
because the cache
is taking effect.

00:12:58.010 --> 00:12:58.510
Yeah.

00:12:58.510 --> 00:12:59.930
It drives me insane.

00:12:59.930 --> 00:13:02.785
But basically, what it does is
you make a change in HTML, CSS,

00:13:02.785 --> 00:13:05.020
or JavaScript, and
then it'll instantly

00:13:05.020 --> 00:13:06.130
reload the page for you.

00:13:06.130 --> 00:13:08.257
You get this really nice
development workflow

00:13:08.257 --> 00:13:09.840
because you can just
stay in your edit

00:13:09.840 --> 00:13:11.256
to make the changes
that you want.

00:13:11.256 --> 00:13:14.990
And you immediately
see them take effect.

00:13:14.990 --> 00:13:19.630
But one of the other tools that
we've added in is BrowserSync.

00:13:19.630 --> 00:13:22.752
Now, BrowserSync is
this weird little thing.

00:13:22.752 --> 00:13:25.240
If you have a set of
devices and browsers

00:13:25.240 --> 00:13:27.600
pointing to your local
development server,

00:13:27.600 --> 00:13:29.980
any interaction that you
do on one of those pages

00:13:29.980 --> 00:13:32.850
gets synced across
all the other devices.

00:13:32.850 --> 00:13:34.990
So this is like
tapping, scrolling.

00:13:34.990 --> 00:13:36.810
You can input text.

00:13:36.810 --> 00:13:39.584
And all of them get
matched across the devices.

00:13:39.584 --> 00:13:41.000
Now this is really
handy if you've

00:13:41.000 --> 00:13:43.046
got like different platforms,
different browsers,

00:13:43.046 --> 00:13:45.420
different screen sizes just
sat next to you at your desk.

00:13:45.420 --> 00:13:48.220
Maybe like a tablet and a
couple of different versions

00:13:48.220 --> 00:13:49.626
of different OSes.

00:13:49.626 --> 00:13:51.000
This is really
useful because you

00:13:51.000 --> 00:13:54.130
can just stay at your computer,
doing whatever you need to do,

00:13:54.130 --> 00:13:57.490
and then checking all the part
of your page, just from your,

00:13:57.490 --> 00:13:58.930
like, development machine.

00:13:58.930 --> 00:14:00.888
So you don't have to muck
around with each one.

00:14:04.030 --> 00:14:07.334
So that's what we have
in Web Starter Kit today.

00:14:07.334 --> 00:14:08.750
And I kind of
mentioned that we're

00:14:08.750 --> 00:14:09.875
going to drop Sass support.

00:14:09.875 --> 00:14:13.960
That seems to be quite a big
one that people want to change.

00:14:13.960 --> 00:14:16.880
The other one was
the style guide.

00:14:16.880 --> 00:14:19.840
And the biggest issue with this,
the IC, is the fact that A,

00:14:19.840 --> 00:14:23.550
it's super unfriendly, and
B, we get to this point

00:14:23.550 --> 00:14:27.280
where it was getting
unmanageable, even for us.

00:14:27.280 --> 00:14:29.730
So we needed to
properly strip it back.

00:14:29.730 --> 00:14:30.990
And just figure out, OK.

00:14:30.990 --> 00:14:33.020
We need to undo all
this dependency.

00:14:33.020 --> 00:14:35.186
And we've got to a point,
we're like, we should just

00:14:35.186 --> 00:14:36.099
start again.

00:14:36.099 --> 00:14:37.640
Because basically,
it's a style guide

00:14:37.640 --> 00:14:41.195
that we inherited
from Web Fundamentals.

00:14:41.195 --> 00:14:43.570
And we got to this point where
we realized that actually,

00:14:43.570 --> 00:14:45.740
a lot of the people
using Web Starter Kit,

00:14:45.740 --> 00:14:47.410
they also had a
lot of requirements

00:14:47.410 --> 00:14:48.990
around browser support.

00:14:48.990 --> 00:14:51.380
A lot of these developers
were at a point

00:14:51.380 --> 00:14:53.882
where they need to
support all the browsers.

00:14:53.882 --> 00:14:55.340
And then we kind
of realized, well,

00:14:55.340 --> 00:14:58.250
that's normally a gating
factor in Polymer.

00:14:58.250 --> 00:15:00.700
And we figured, well, if we're
going to do a style guide,

00:15:00.700 --> 00:15:03.249
we could use the
material design spec

00:15:03.249 --> 00:15:05.040
and bring it to some
of the older browsers.

00:15:06.720 --> 00:15:11.130
So this is like a super early
cut of what we currently have.

00:15:11.130 --> 00:15:15.540
And essentially, it's
just a material design

00:15:15.540 --> 00:15:16.930
inspired style guide.

00:15:16.930 --> 00:15:18.430
It's got the usual
things that you'd

00:15:18.430 --> 00:15:23.390
expect-- typography,
lists, of course.

00:15:23.390 --> 00:15:26.865
I really like this bit
because it's like a rainbow.

00:15:26.865 --> 00:15:28.990
Obviously, because you've
got material design spec,

00:15:28.990 --> 00:15:32.310
you have to have all the
buttons with all the ripples.

00:15:32.310 --> 00:15:33.940
My personal favorite
is the text field.

00:15:33.940 --> 00:15:36.266
And I just love the animations
with the underlines.

00:15:36.266 --> 00:15:38.640
And then when you get to the
next one, the label goes up.

00:15:41.710 --> 00:15:45.040
And we just basically have
a set of default boilerplate

00:15:45.040 --> 00:15:46.500
components.

00:15:46.500 --> 00:15:48.810
But the really nice thing
with this is behind the hood,

00:15:48.810 --> 00:15:51.270
it's so much easier
than what we had before.

00:15:51.270 --> 00:15:55.000
You can literally jump
into this and understand,

00:15:55.000 --> 00:16:02.421
if you wanted to change
something with the buttons,

00:16:02.421 --> 00:16:03.920
you can actually
just find it really

00:16:03.920 --> 00:16:06.336
clearly in this new structure
because it's literally like,

00:16:06.336 --> 00:16:08.210
button folder-- button.sass.

00:16:08.210 --> 00:16:10.749
Easy.

00:16:10.749 --> 00:16:12.540
But it's really
interesting, in the process

00:16:12.540 --> 00:16:15.620
of this, what we realized,
the material spec

00:16:15.620 --> 00:16:19.230
isn't necessarily geared
towards standard web design.

00:16:19.230 --> 00:16:22.390
Like, if you think of a
stereotypical website-- header,

00:16:22.390 --> 00:16:23.530
set of links.

00:16:23.530 --> 00:16:26.500
That's pretty much
Web Design 101.

00:16:26.500 --> 00:16:29.289
I guarantee all of you have
implemented a website exactly

00:16:29.289 --> 00:16:30.830
like that at some
point in your life.

00:16:33.216 --> 00:16:35.340
And yet, there wasn't
anything in the material spec

00:16:35.340 --> 00:16:36.892
that just did this.

00:16:36.892 --> 00:16:38.600
So we've been working
the Material Design

00:16:38.600 --> 00:16:41.690
team, just kind of like,
what does this pattern

00:16:41.690 --> 00:16:44.130
look like in material design?

00:16:44.130 --> 00:16:46.635
And they've been great because,
something as simple as this,

00:16:46.635 --> 00:16:48.260
we've just got a
couple of variations--

00:16:48.260 --> 00:16:50.540
so just standard kind
of bar with the links

00:16:50.540 --> 00:16:53.270
on the right, Centered
Horizontal Navigation where

00:16:53.270 --> 00:16:56.874
we've got kind of like the
content embedded within it.

00:16:56.874 --> 00:16:58.540
If you look at the
material design spec,

00:16:58.540 --> 00:17:00.270
you also have, like,
static navigation,

00:17:00.270 --> 00:17:04.630
which is where you have the left
nav bar hidden away on mobile.

00:17:04.630 --> 00:17:08.756
But then it's constantly pulled
out when you're on desktop.

00:17:08.756 --> 00:17:10.339
And the idea with
all of this is then,

00:17:10.339 --> 00:17:12.460
you obviously get back
into the standard hamburger

00:17:12.460 --> 00:17:16.107
menu with the side nav.

00:17:16.107 --> 00:17:18.440
But it's been interesting,
the fact that we actually hit

00:17:18.440 --> 00:17:23.079
this problem where it wasn't
built for content sites.

00:17:23.079 --> 00:17:25.660
So it's been an
interesting kind of process

00:17:25.660 --> 00:17:26.997
getting to that point.

00:17:26.997 --> 00:17:29.580
And I wouldn't be surprised if
we hit another couple of points

00:17:29.580 --> 00:17:32.380
like this where actually we
need to work the Material Design

00:17:32.380 --> 00:17:35.730
team to actually bring in these
new kind of design patterns.

00:17:38.240 --> 00:17:39.990
And we've been really
fortunate because we

00:17:39.990 --> 00:17:44.370
have a couple of Chrome
UX designers in London.

00:17:44.370 --> 00:17:46.320
And they happen to
unfortunately sit near us.

00:17:46.320 --> 00:17:47.780
So we can basically
tempt them in

00:17:47.780 --> 00:17:49.860
to come and help us with things.

00:17:49.860 --> 00:17:51.620
And they, Hannah and
Ed have been great

00:17:51.620 --> 00:17:53.020
because they took one
look at our style guide

00:17:53.020 --> 00:17:55.560
and they kind of, they probably
died a little bit inside,

00:17:55.560 --> 00:17:57.470
like, what are you doing?

00:17:57.470 --> 00:17:59.850
But Hannah's put together
this amazing mock

00:17:59.850 --> 00:18:01.700
which is basically
how she thinks

00:18:01.700 --> 00:18:03.530
the style guide will be used.

00:18:03.530 --> 00:18:05.720
So rather than have, like,
check boxes and buttons,

00:18:05.720 --> 00:18:07.470
that should really be
grouped into a form.

00:18:07.470 --> 00:18:10.240
That's how it's
going to be used.

00:18:10.240 --> 00:18:12.350
And I very roughly started
putting this together,

00:18:12.350 --> 00:18:14.990
hence the bacon ipsum.

00:18:14.990 --> 00:18:17.867
But it's an interesting
point, the fact

00:18:17.867 --> 00:18:20.450
that Style Guide should be kind
of getting to this point where

00:18:20.450 --> 00:18:23.434
it helps you and encourages you
to use it in a particular way.

00:18:23.434 --> 00:18:25.600
So we're going to be including
things like just copy

00:18:25.600 --> 00:18:27.400
to clipboard, so you don't
have to worry about finding

00:18:27.400 --> 00:18:29.490
a particular snippet
hidden away somewhere else.

00:18:34.470 --> 00:18:38.280
And that brings us
onto this iterate step.

00:18:38.280 --> 00:18:40.720
Because Web Fundamentals
should help you with learning,

00:18:40.720 --> 00:18:43.670
Web Starter Kit should help
you with building and starting

00:18:43.670 --> 00:18:46.140
a brand new project.

00:18:46.140 --> 00:18:48.700
And the minute you
get to iterating,

00:18:48.700 --> 00:18:53.130
this is where DevTools
basically comes into its own.

00:18:53.130 --> 00:18:54.690
And I guarantee
all of you probably

00:18:54.690 --> 00:18:55.690
have opened up DevTools.

00:18:58.800 --> 00:19:03.200
So the DevTools team
have been making

00:19:03.200 --> 00:19:08.840
a ton of changes that basically
help you with mobile web

00:19:08.840 --> 00:19:12.560
development, as well figure
out what the browser's doing.

00:19:12.560 --> 00:19:16.610
So the first one is
this Device mode,

00:19:16.610 --> 00:19:21.340
which is basically this blue
mobile icon on the top left.

00:19:21.340 --> 00:19:25.360
Now, the first thing to
call out are these bars just

00:19:25.360 --> 00:19:26.565
above where the website is.

00:19:26.565 --> 00:19:27.940
These are basically
an indication

00:19:27.940 --> 00:19:30.640
of just where you media
queries are on the page.

00:19:30.640 --> 00:19:32.265
Now, the really useful
thing with this,

00:19:32.265 --> 00:19:33.180
if you get to a
point where you've

00:19:33.180 --> 00:19:34.888
got a ton of media
queries in your page--

00:19:34.888 --> 00:19:36.700
perhaps you're doing
it by component--

00:19:36.700 --> 00:19:38.430
you can actually
realize where you might

00:19:38.430 --> 00:19:40.250
have conflicting media
queries, and things

00:19:40.250 --> 00:19:42.060
might get a bit messy.

00:19:42.060 --> 00:19:43.560
And there's a good
chance that there

00:19:43.560 --> 00:19:45.435
might be something wrong
within those patches

00:19:45.435 --> 00:19:48.500
because you've got so
many things overlapping.

00:19:48.500 --> 00:19:50.730
The other part of this that
you've probably all seen

00:19:50.730 --> 00:19:54.450
before, just put in a nicer
way, is this Device selection,

00:19:54.450 --> 00:19:57.110
where basically select
a particular device.

00:19:57.110 --> 00:19:58.610
And it will set the
width and height

00:19:58.610 --> 00:20:01.787
of that particular device,
including the screen density,

00:20:01.787 --> 00:20:03.870
which is really nice because
you get to this point

00:20:03.870 --> 00:20:05.740
where, if you're using
responsive images,

00:20:05.740 --> 00:20:08.260
you'll actually see all of it.

00:20:08.260 --> 00:20:10.890
But one of my
particular favorites

00:20:10.890 --> 00:20:15.430
is this new network throttling.

00:20:15.430 --> 00:20:17.502
Now what this is,
is you can basically

00:20:17.502 --> 00:20:19.210
select a particular
network type that you

00:20:19.210 --> 00:20:21.460
want to emulate
within your browser.

00:20:21.460 --> 00:20:23.680
And then it will just
apply it for you.

00:20:23.680 --> 00:20:28.494
So here, if I select 2G,
do a refresh of the page.

00:20:28.494 --> 00:20:30.035
And this is a pretty
solid indication

00:20:30.035 --> 00:20:32.360
that I need to do something
with that image at the top

00:20:32.360 --> 00:20:36.107
because that's kind of
painful for a 2G user.

00:20:36.107 --> 00:20:38.690
But the nice thing with this is
actually embedded in DevTools.

00:20:38.690 --> 00:20:39.740
So this is the point
where you're already

00:20:39.740 --> 00:20:41.249
trying different things out.

00:20:41.249 --> 00:20:43.290
Before, you'd have to pull
out a different, like,

00:20:43.290 --> 00:20:45.940
application, depending
on which one you use,

00:20:45.940 --> 00:20:48.260
sometimes they're actually
a bit fiddly to work.

00:20:48.260 --> 00:20:50.375
I actually once managed
nearly to lock myself out

00:20:50.375 --> 00:20:53.530
of my machine because I'd
applied it to my entire machine

00:20:53.530 --> 00:20:55.030
to actually have
the slowest network

00:20:55.030 --> 00:20:56.380
connection I could think of.

00:20:56.380 --> 00:20:58.290
At that point, my
machine decided to lock,

00:20:58.290 --> 00:21:00.165
and then also decided
it needed to phone home

00:21:00.165 --> 00:21:02.880
to make sure that I was actually
still legitimately working

00:21:02.880 --> 00:21:05.449
here.

00:21:05.449 --> 00:21:06.990
I can't remember
how I got out of it,

00:21:06.990 --> 00:21:10.110
but it was not a pleasant
experience, I can tell you.

00:21:10.110 --> 00:21:12.290
But at least with this,
it's just built straight in.

00:21:12.290 --> 00:21:15.330
And it's really easy to change.

00:21:15.330 --> 00:21:20.250
So the other area of a ton
of changes in timeline,

00:21:20.250 --> 00:21:22.770
in DevTools, is timeline.

00:21:22.770 --> 00:21:25.793
So, if I just refresh the
page, what I've got is just,

00:21:25.793 --> 00:21:29.200
essentially, a timeline of
what the current page rendering

00:21:29.200 --> 00:21:30.670
is doing.

00:21:30.670 --> 00:21:33.050
And we always get
this typical waterfall

00:21:33.050 --> 00:21:35.280
of what the browser's done.

00:21:35.280 --> 00:21:39.591
But one of the first new
additions is Paint Profiler.

00:21:39.591 --> 00:21:41.590
So here I've just selected
the paint on the page

00:21:41.590 --> 00:21:44.530
and it looks fairly hefty.

00:21:44.530 --> 00:21:49.850
But down below, what you've got
is this new Paint Profiler tab.

00:21:49.850 --> 00:21:53.160
Now what this is
is, along the left,

00:21:53.160 --> 00:21:54.890
we have a set of draw commands.

00:21:54.890 --> 00:21:56.390
This is basically
what the browser's

00:21:56.390 --> 00:21:59.150
doing to paint these particular
things to the screen.

00:21:59.150 --> 00:22:01.380
So as I scroll down, we
should get to a point

00:22:01.380 --> 00:22:03.680
where you can actually start
to see where these paint

00:22:03.680 --> 00:22:06.700
commands are actually
painting stuff on the page.

00:22:06.700 --> 00:22:08.850
Along the top here, we
also have representation

00:22:08.850 --> 00:22:11.480
of how each one of those
commands have happened,

00:22:11.480 --> 00:22:14.990
and how long they took
to actually occur.

00:22:14.990 --> 00:22:17.570
And then right in the center,
we have this big bad boy,

00:22:17.570 --> 00:22:21.470
which is basically what the
browser's actually painted.

00:22:21.470 --> 00:22:23.870
Now, the really
nice thing with this

00:22:23.870 --> 00:22:26.650
is, if I select a small
chunk of the instructions

00:22:26.650 --> 00:22:29.781
from the Paint, as I
start to scrub along,

00:22:29.781 --> 00:22:31.780
you can actually see what
the browser's painting

00:22:31.780 --> 00:22:33.512
and how it's painting it.

00:22:33.512 --> 00:22:34.970
So if you ever get
to a point where

00:22:34.970 --> 00:22:37.094
you've got this huge, long
paint and actually, it's

00:22:37.094 --> 00:22:39.210
really causing you issues,
this is the first time

00:22:39.210 --> 00:22:40.960
you can actually really
dig down into what

00:22:40.960 --> 00:22:44.480
the browser's doing
under the hood.

00:22:44.480 --> 00:22:47.600
But admittedly, you have
to have an issue that

00:22:47.600 --> 00:22:50.740
warrants that huge paint.

00:22:50.740 --> 00:22:54.260
But what happens if the
browser could tell you

00:22:54.260 --> 00:22:57.270
where this paint has happened,
and then also give you

00:22:57.270 --> 00:23:01.020
an idea of why the hell
it's actually done it?

00:23:01.020 --> 00:23:05.380
So if I go to our trusty
Chrome developer website,

00:23:05.380 --> 00:23:07.760
I should hopefully
find a paint that

00:23:07.760 --> 00:23:10.510
looks a little
something like that.

00:23:10.510 --> 00:23:16.077
Now, I genuinely find timeline
confusing at the best of times.

00:23:16.077 --> 00:23:17.660
And I also find it
even more confusing

00:23:17.660 --> 00:23:20.600
to figure out what the browser's
doing when it decides to do it.

00:23:20.600 --> 00:23:22.725
So when I see a paint like
this, where there's just

00:23:22.725 --> 00:23:24.560
a blue block,
there's a bit of me

00:23:24.560 --> 00:23:27.660
that questions why it's painting
a blue block when it's probably

00:23:27.660 --> 00:23:29.550
always been there.

00:23:29.550 --> 00:23:32.530
So, in the Paint Profiler,
this is all you'd get.

00:23:32.530 --> 00:23:34.950
But if you move to Details,
right down at the bottom,

00:23:34.950 --> 00:23:38.012
we have this Style
and Validations.

00:23:38.012 --> 00:23:39.470
And basically, what
this is telling

00:23:39.470 --> 00:23:42.320
you now is the fact that
it's this particular element

00:23:42.320 --> 00:23:44.820
on the page that
has been painted.

00:23:44.820 --> 00:23:48.470
And the reason why it's
been painted is animation.

00:23:48.470 --> 00:23:51.840
Now this is really nice because
before, you'd run a timeline.

00:23:51.840 --> 00:23:53.665
You'd have to be a
master of the dark art--

00:23:53.665 --> 00:23:56.930
like Mr. Paul Lewis-- understand
what the hell is going on

00:23:56.930 --> 00:23:59.490
because you know what the
browser's doing under the hood.

00:23:59.490 --> 00:24:01.573
This is the first time
DevTools is actually going,

00:24:01.573 --> 00:24:02.310
I've painted.

00:24:02.310 --> 00:24:04.980
Here's the reason
why I've done it.

00:24:04.980 --> 00:24:06.480
And it's kind of
nice with this demo

00:24:06.480 --> 00:24:07.980
because I can
actually click on this

00:24:07.980 --> 00:24:09.330
and you see Styles being added.

00:24:09.330 --> 00:24:11.467
So you can actually see
the style and validation

00:24:11.467 --> 00:24:12.550
when the paint's happened.

00:24:15.200 --> 00:24:17.420
But still thinking
along those lines,

00:24:17.420 --> 00:24:22.010
if we go back to another
part of this timeline,

00:24:22.010 --> 00:24:25.480
you can see we've got this
recalculate and this layout.

00:24:25.480 --> 00:24:29.280
Now, again, not being a master
of the dark art of timeline,

00:24:29.280 --> 00:24:33.390
I genuinely still don't
know why that would happen.

00:24:33.390 --> 00:24:35.910
So if I scroll down to
the bottom of this layout,

00:24:35.910 --> 00:24:38.329
we've also got Layout
and Validations.

00:24:38.329 --> 00:24:40.620
And this is another scenario
where DevTools is actually

00:24:40.620 --> 00:24:42.910
saying, this particular
thing has happened.

00:24:42.910 --> 00:24:45.440
Here's why.

00:24:45.440 --> 00:24:48.700
So here we can actually get a
stack trace that's basically

00:24:48.700 --> 00:24:52.520
saying,
CDS.card.coolproperties is

00:24:52.520 --> 00:24:55.400
resulting in this
particular layout happening.

00:24:55.400 --> 00:24:59.120
And it also has a list of the
components that's basically

00:24:59.120 --> 00:25:02.775
being laid out as
a result of this.

00:25:02.775 --> 00:25:04.817
Now this is really useful
because before, you

00:25:04.817 --> 00:25:06.650
were kind of left high
and dry to figure out

00:25:06.650 --> 00:25:08.290
what was going on.

00:25:08.290 --> 00:25:10.170
Now, you can actually
get a bit more

00:25:10.170 --> 00:25:12.530
of an indication of where
your code is resulting

00:25:12.530 --> 00:25:16.450
in the browser's doing
some kind of action.

00:25:16.450 --> 00:25:19.920
Now, I don't know about
you, but there comes a point

00:25:19.920 --> 00:25:26.060
where, if I'm looking at a
waterfall, it kind of just

00:25:26.060 --> 00:25:27.975
becomes a lot of
pretty colored bricks.

00:25:30.480 --> 00:25:32.700
And the thing that
really kind of confuses

00:25:32.700 --> 00:25:36.060
me is, if I take
something like this,

00:25:36.060 --> 00:25:39.630
I kind of see the layout and
the recalc style have happened.

00:25:39.630 --> 00:25:41.640
And this yellow block
kind of tells me

00:25:41.640 --> 00:25:44.419
that it's my JavaScript
that's done something.

00:25:44.419 --> 00:25:46.210
But this isn't a really
good, clear picture

00:25:46.210 --> 00:25:47.570
of what's happening,
why it's happening,

00:25:47.570 --> 00:25:48.990
and how long each
piece is taking.

00:25:48.990 --> 00:25:51.870
It's just a colored brick.

00:25:51.870 --> 00:25:55.350
And this is where the new
Flame Chart Viewer comes in.

00:25:58.120 --> 00:26:00.390
And basically, as
you zoom in, you

00:26:00.390 --> 00:26:04.520
get a bit of a better
picture as to Animation Frame

00:26:04.520 --> 00:26:05.940
took this amount of time.

00:26:05.940 --> 00:26:07.700
Within that, your
JavaScript was actually

00:26:07.700 --> 00:26:10.590
the majority of the
time spent in it.

00:26:10.590 --> 00:26:12.100
And something
inside this resulted

00:26:12.100 --> 00:26:15.030
in recalculate style and layout.

00:26:15.030 --> 00:26:17.640
Now, it's exactly
the same information,

00:26:17.640 --> 00:26:20.190
but it's just displayed
in a different way.

00:26:20.190 --> 00:26:22.190
But the nice thing with
this is you can actually

00:26:22.190 --> 00:26:24.509
start seeing a bit more
of a cause and effect.

00:26:24.509 --> 00:26:26.300
But admittedly, this
still doesn't actually

00:26:26.300 --> 00:26:29.870
help me figure out what
is it in CDS.min that

00:26:29.870 --> 00:26:33.272
caused calculate Style,
followed by a layout.

00:26:33.272 --> 00:26:35.480
So wouldn't it be kind of
handy if you could actually

00:26:35.480 --> 00:26:38.680
figure out a bit more
about what's going on?

00:26:38.680 --> 00:26:42.000
And this is where JS
Profiler comes in.

00:26:42.000 --> 00:26:45.345
So if I go back and
repeat this same thing.

00:26:49.150 --> 00:26:53.870
So here, I've now enabled the
JS Profiler along the top.

00:26:53.870 --> 00:26:57.834
If I go and find this Animation
Frame again, some of you

00:26:57.834 --> 00:26:59.750
may have noticed that
the thing looks suddenly

00:26:59.750 --> 00:27:03.210
a lot, lot longer
and scarier now.

00:27:03.210 --> 00:27:06.130
But here, we've got the
Animation Frame fired, followed

00:27:06.130 --> 00:27:09.462
by that exact same function call
of something in our JavaScript.

00:27:09.462 --> 00:27:10.920
But you notice a
couple of bars in,

00:27:10.920 --> 00:27:14.462
and suddenly, we've got this
CDS.card.expand, followed

00:27:14.462 --> 00:27:15.670
by CDS.cardcollectproperties.

00:27:19.970 --> 00:27:21.470
And it's that method
that's actually

00:27:21.470 --> 00:27:25.894
resulted in the recalc
style and the layout.

00:27:25.894 --> 00:27:28.560
So this is really useful because
now, you're actually at a point

00:27:28.560 --> 00:27:31.120
where you don't have this
magical black box of,

00:27:31.120 --> 00:27:33.989
you did something, and
now I did something, too.

00:27:33.989 --> 00:27:35.780
It actually goes, well,
you did some stuff.

00:27:35.780 --> 00:27:36.530
This was all fine.

00:27:36.530 --> 00:27:39.990
The minute you hit this
method, this is what happened.

00:27:39.990 --> 00:27:42.330
So it's actually starting to
serve us up a ton of stuff.

00:27:42.330 --> 00:27:42.790
[APPLAUSE]

00:27:42.790 --> 00:27:43.539
Yeah, there we go.

00:27:48.060 --> 00:27:50.080
And this is really nice
because, normally, you'd

00:27:50.080 --> 00:27:52.080
get to this point where
actually, you'd realize,

00:27:52.080 --> 00:27:54.699
maybe you measured
offset top or something.

00:27:54.699 --> 00:27:56.240
But unless you know
that's a problem,

00:27:56.240 --> 00:27:58.580
it's pretty hard to diagnose
that, whereas this goes,

00:27:58.580 --> 00:27:59.180
this method.

00:27:59.180 --> 00:28:01.690
Something here did
something fishy.

00:28:01.690 --> 00:28:04.337
And that, at least, reduces
your entire search down

00:28:04.337 --> 00:28:06.920
to a much, much smaller surface
area to try and figure it out.

00:28:13.840 --> 00:28:17.970
So one of the other
new cool things,

00:28:17.970 --> 00:28:23.900
again, still in the vein of
DevTools servicing information,

00:28:23.900 --> 00:28:27.510
is you notice in the Flame
Viewer, we get to this point

00:28:27.510 --> 00:28:32.420
where we have these
kind of weird bubbly

00:28:32.420 --> 00:28:35.470
things along the top, with
some kind of time in it.

00:28:35.470 --> 00:28:39.340
Now what these
represent are frames.

00:28:39.340 --> 00:28:41.550
Admittedly, my website is
awful because by the looks

00:28:41.550 --> 00:28:44.290
of those frames, it's
definitely not hitting 60 FPS.

00:28:44.290 --> 00:28:46.685
But we'll look past
that, just for a minute.

00:28:46.685 --> 00:28:48.810
But when you actually click
on one of these frames,

00:28:48.810 --> 00:28:52.860
you get this Layers
panel down the bottom.

00:28:52.860 --> 00:28:55.500
Now, how many of you guys
are happy when I say,

00:28:55.500 --> 00:28:59.570
the notion of composite layers?

00:28:59.570 --> 00:29:01.150
Oh, wow.

00:29:01.150 --> 00:29:04.020
So Jake actually
gave amazing analogy

00:29:04.020 --> 00:29:07.170
of this of-- if you
had a wall and you

00:29:07.170 --> 00:29:10.180
had to paint a stick man
moving from left to right,

00:29:10.180 --> 00:29:14.230
you could draw with a marker
on the wall a stick man,

00:29:14.230 --> 00:29:18.240
paint over it, draw the stick
man again, paint over it,

00:29:18.240 --> 00:29:21.300
and repeat until you get
to your final destination.

00:29:21.300 --> 00:29:24.870
What you could do is have
transparent plastic on wheels,

00:29:24.870 --> 00:29:27.120
draw the stick man once,
and then just move it

00:29:27.120 --> 00:29:28.926
across the wall.

00:29:28.926 --> 00:29:30.300
And the idea of
a composite layer

00:29:30.300 --> 00:29:33.080
is you basically draw everything
on a transparent layer

00:29:33.080 --> 00:29:34.341
to move across.

00:29:34.341 --> 00:29:35.340
And it's more efficient.

00:29:35.340 --> 00:29:38.830
It just loads it in the
GPU and you're good to go.

00:29:38.830 --> 00:29:41.420
So what this Layers
panel does is it actually

00:29:41.420 --> 00:29:45.430
tells you everything that's
been promoted to a layer,

00:29:45.430 --> 00:29:47.040
whereas before, it
was kind of, you'd

00:29:47.040 --> 00:29:49.230
have some orange borders
that might tell you.

00:29:49.230 --> 00:29:52.240
Now it's really explicit.

00:29:52.240 --> 00:29:53.890
Now the other side
of this, as well,

00:29:53.890 --> 00:29:59.270
as you can see, on the right
hand side, Composite Reasons.

00:29:59.270 --> 00:30:01.520
Now this is great because
sometimes you get to a point

00:30:01.520 --> 00:30:02.490
where something
would be promoted

00:30:02.490 --> 00:30:04.075
to a layer you
didn't mean it to.

00:30:04.075 --> 00:30:06.200
Other times, you want it
to be promoted to a layer.

00:30:06.200 --> 00:30:07.527
This tells you it's not.

00:30:07.527 --> 00:30:09.610
But if you have something
and you don't know quite

00:30:09.610 --> 00:30:11.860
why it's being promoted to
a layer-- like this thing--

00:30:11.860 --> 00:30:15.010
Composite Reasons will tell you
why it's made that decision.

00:30:15.010 --> 00:30:18.600
So in this case, "overlaps with
other composite content cannot

00:30:18.600 --> 00:30:20.880
be squashed, since this
layer scrolls with respect

00:30:20.880 --> 00:30:23.060
to the squashing layer."

00:30:23.060 --> 00:30:24.820
I didn't intend
for this to happen.

00:30:24.820 --> 00:30:27.550
Ironically, this causes a
bug on Android for Chrome

00:30:27.550 --> 00:30:29.260
where, when you scroll
it off the screen,

00:30:29.260 --> 00:30:30.820
it doesn't become
a layer anymore,

00:30:30.820 --> 00:30:32.152
and things go a bit funky.

00:30:32.152 --> 00:30:33.610
But this is actually
the first time

00:30:33.610 --> 00:30:37.045
I've debugged it because you
can actually see all the layers.

00:30:37.045 --> 00:30:38.670
And the nice thing
with this is, if you

00:30:38.670 --> 00:30:41.230
start clicking through
each of the frames,

00:30:41.230 --> 00:30:44.260
you should start
seeing the layers move.

00:30:44.260 --> 00:30:46.620
But because I'm so
janktastic, of course

00:30:46.620 --> 00:30:48.700
you don't see the frames.

00:30:48.700 --> 00:30:52.770
But if it was good demo,
it would've worked.

00:30:52.770 --> 00:30:54.960
But again, the nice thing
with the Composite Reasons

00:30:54.960 --> 00:30:58.060
is, again, DevTools is actually
explaining what it's done

00:30:58.060 --> 00:30:59.670
and why it's done it.

00:30:59.670 --> 00:31:02.690
Now, as good speaker, I
have backups to all of these

00:31:02.690 --> 00:31:04.670
because, when you have
Polaris telling you,

00:31:04.670 --> 00:31:06.880
don't update Canary,
it'll break your demos,

00:31:06.880 --> 00:31:09.760
you have videos of backups.

00:31:09.760 --> 00:31:10.270
So, yeah.

00:31:10.270 --> 00:31:12.237
That's what we're doing
on the Chrome team.

00:31:12.237 --> 00:31:14.695
Web Fundamentals to help you
with learning, Web Starter Kit

00:31:14.695 --> 00:31:17.539
to help you build new
projects, and DevTools

00:31:17.539 --> 00:31:19.830
is adding a ton of new features
to help your mobile web

00:31:19.830 --> 00:31:21.371
development, as well
as understanding

00:31:21.371 --> 00:31:22.627
what the browser's doing.

00:31:22.627 --> 00:31:24.460
So that, that way, when
you hit this problem

00:31:24.460 --> 00:31:27.120
of not hitting 60 FPS, it's
actually easier for you

00:31:27.120 --> 00:31:29.200
to diagnose the problem.

00:31:29.200 --> 00:31:30.990
So, thank you very
much for listening.

00:31:30.990 --> 00:31:32.550
Hope it's something useful.

00:31:32.550 --> 00:31:33.750
Cheers.

00:31:33.750 --> 00:31:35.300
[APPLAUSE]

