WEBVTT
Kind: captions
Language: en

00:00:03.311 --> 00:00:05.060
DAN SANDLER: All right,
let's get started.

00:00:05.060 --> 00:00:09.800
Thank you everybody for showing
up at 9:00 on Thursday morning.

00:00:09.800 --> 00:00:13.510
I very much appreciate it,
it's great to see you here.

00:00:13.510 --> 00:00:15.590
Weather is a little
better, so hopefully today

00:00:15.590 --> 00:00:18.700
is more fun for everyone.

00:00:18.700 --> 00:00:21.200
I guess we've already jumped
ahead to our extended version

00:00:21.200 --> 00:00:23.760
of the title of this
talk-- we just stuck with,

00:00:23.760 --> 00:00:26.590
"What's New in Notifications
in Android N"-- ooh, OK.

00:00:26.590 --> 00:00:28.070
I see what it is,
I'm just resting

00:00:28.070 --> 00:00:31.010
my thumb on the advancer,
and so that's the problem.

00:00:31.010 --> 00:00:34.885
We definitely rehearsed this--
I swear, I promise to everybody.

00:00:34.885 --> 00:00:36.510
But back here for a
little bit and just

00:00:36.510 --> 00:00:38.050
say that we're going to talk
about notifications today,

00:00:38.050 --> 00:00:39.580
but we're going to spend
about half our time talking

00:00:39.580 --> 00:00:42.610
about Android Wear 2.0, because
that got a great big reveal

00:00:42.610 --> 00:00:45.690
yesterday at the keynote, and--

00:00:45.690 --> 00:00:47.175
[LAUGHTER]

00:00:49.160 --> 00:00:52.801
I thought the comedy session
was this evening, not right now.

00:00:52.801 --> 00:00:54.300
All right, well,
we'll deal with it.

00:00:54.300 --> 00:00:56.250
My name is Dan Sandler,
I'm the lead engineer

00:00:56.250 --> 00:00:57.940
on the Android
System UI team, which

00:00:57.940 --> 00:00:59.981
is all the stuff you can
see on the screen that's

00:00:59.981 --> 00:01:01.222
not any other app.

00:01:01.222 --> 00:01:02.513
ALEX HILLS: And I'm Alex Hills.

00:01:02.513 --> 00:01:04.860
I'm an engineer on the
Wear System UI team, which

00:01:04.860 --> 00:01:07.247
has the exact same description.

00:01:07.247 --> 00:01:09.413
DAN SANDLER: But smaller,
and attached to your body.

00:01:09.413 --> 00:01:10.100
ALEX HILLS: Still
advancing some, too.

00:01:10.100 --> 00:01:11.020
DAN SANDLER: Still
advancing-- oh, man.

00:01:11.020 --> 00:01:12.660
This thing, it's on its own.

00:01:12.660 --> 00:01:14.480
All right, we're just
going to keep moving.

00:01:14.480 --> 00:01:17.340
So we've made some changes
in Android notifications

00:01:17.340 --> 00:01:18.007
this year.

00:01:18.007 --> 00:01:19.340
We make some changes every year.

00:01:19.340 --> 00:01:20.964
This is kind of a
big change this year,

00:01:20.964 --> 00:01:22.792
because we've messed
with the templates.

00:01:22.792 --> 00:01:24.250
I mean, you see
here we've actually

00:01:24.250 --> 00:01:25.060
messed with the templates.

00:01:25.060 --> 00:01:26.810
Many times in the
past, this is probably

00:01:26.810 --> 00:01:30.737
our first big-- I'm just
going to set this down.

00:01:30.737 --> 00:01:32.320
I'm just going to
set that thing down.

00:01:32.320 --> 00:01:34.760
We'll advance, maybe, by
hitting the air buttons.

00:01:34.760 --> 00:01:35.886
And we've changed it again.

00:01:35.886 --> 00:01:37.843
But the reason we've
changed is to bring things

00:01:37.843 --> 00:01:39.280
more in line with
material design,

00:01:39.280 --> 00:01:42.270
and to make things a
little more scannable.

00:01:42.270 --> 00:01:45.300
Generally, we've got room
for a little more text.

00:01:45.300 --> 00:01:48.030
You have the ability
to-- I actually do need

00:01:48.030 --> 00:01:49.043
to do the builds now.

00:01:49.043 --> 00:01:57.300
[LAUGHS] All right,
OK, fantastic.

00:01:57.300 --> 00:01:59.016
OK, so we've cleaned things up.

00:01:59.016 --> 00:02:00.140
They're a little less busy.

00:02:00.140 --> 00:02:02.640
We've hit our material key lines
now, instead of winging it,

00:02:02.640 --> 00:02:04.230
like we did before.

00:02:04.230 --> 00:02:06.899
You now see that we
can tell you exactly

00:02:06.899 --> 00:02:08.690
which app posted each
notification-- that's

00:02:08.690 --> 00:02:10.820
accountability for you, the
end user, which we never really

00:02:10.820 --> 00:02:13.403
had before, unless you knew to
long press in the notification.

00:02:13.403 --> 00:02:14.390
So that's good.

00:02:14.390 --> 00:02:16.350
And we've taken the
icons out of actions,

00:02:16.350 --> 00:02:20.070
mostly so that you've got more
room for those long labels that

00:02:20.070 --> 00:02:21.540
might show up in
some translations.

00:02:21.540 --> 00:02:23.164
And then finally, my
personal pet peeve

00:02:23.164 --> 00:02:24.870
about notifications,
since we introduced

00:02:24.870 --> 00:02:27.120
expandable notifications
in Jelly Bean

00:02:27.120 --> 00:02:29.370
is that you can now
tell what's expandable.

00:02:29.370 --> 00:02:31.440
There's an expansion
widget-- the little chevron

00:02:31.440 --> 00:02:33.710
that appears next to the
app name that lets you see,

00:02:33.710 --> 00:02:34.850
oh, there's more text here.

00:02:34.850 --> 00:02:36.808
And if I touch that, you
can actually click it,

00:02:36.808 --> 00:02:39.552
and it expands the notification.

00:02:39.552 --> 00:02:41.010
This slide here--
is there anything

00:02:41.010 --> 00:02:43.460
that we can do to
avoid racing through?

00:02:43.460 --> 00:02:46.824
I mean, I race through stuff
anyway, but this is ridiculous.

00:02:46.824 --> 00:02:48.740
All right, we're going
to hold it right there.

00:02:48.740 --> 00:02:49.698
Let's see what happens.

00:02:49.698 --> 00:02:51.065
I moved the mouse around.

00:02:51.065 --> 00:02:53.670
I'll turn around three times
and spit, if that doesn't work.

00:02:53.670 --> 00:02:55.100
This is a slide that
you're not supposed

00:02:55.100 --> 00:02:57.470
to be able to follow-- it's
like a London tube map, which

00:02:57.470 --> 00:02:58.300
I certainly can't follow.

00:02:58.300 --> 00:03:00.520
I just want to motivate that
all of the old information

00:03:00.520 --> 00:03:02.820
is still here in the temple,
it's just moved down around

00:03:02.820 --> 00:03:03.445
to a new place.

00:03:03.445 --> 00:03:06.100
So if you're already using
the Notification Builder APIs,

00:03:06.100 --> 00:03:07.600
we'll take care of
all that for you.

00:03:07.600 --> 00:03:08.808
We'll move it into new spots.

00:03:12.229 --> 00:03:14.270
Another thing that's useful
to note, particularly

00:03:14.270 --> 00:03:17.394
as an end user, is where you
can actually touch on things.

00:03:17.394 --> 00:03:18.560
So here are the hit targets.

00:03:18.560 --> 00:03:20.851
I just want to make a note
that even though that expand

00:03:20.851 --> 00:03:22.610
indicator is really
small, the hit target

00:03:22.610 --> 00:03:23.310
for it is really big.

00:03:23.310 --> 00:03:24.700
You touch anywhere
on that top row,

00:03:24.700 --> 00:03:26.120
you expand the
whole notification.

00:03:26.120 --> 00:03:28.300
So if you, as a developer,
have been using expanded

00:03:28.300 --> 00:03:30.466
notifications, and you're
worried that no user knows

00:03:30.466 --> 00:03:32.270
how to find it, this is how.

00:03:32.270 --> 00:03:35.320
There's a button you can touch,
finally, after three years.

00:03:35.320 --> 00:03:35.990
ALEX HILLS: A button that you
can touch that advances a slide

00:03:35.990 --> 00:03:36.940
without meaning to?

00:03:36.940 --> 00:03:40.045
DAN SANDLER: Seriously, I don't
know what-- this thing really

00:03:40.045 --> 00:03:40.670
likes me to do.

00:03:40.670 --> 00:03:41.460
So what do you have to do?

00:03:41.460 --> 00:03:43.010
If you're using the
Builder, like I said,

00:03:43.010 --> 00:03:44.260
you don't have to do anything.

00:03:44.260 --> 00:03:46.330
Everything is already
going to be moved

00:03:46.330 --> 00:03:47.600
to the new templates for you.

00:03:47.600 --> 00:03:49.500
If you're doing
custom RemoteViews,

00:03:49.500 --> 00:03:51.000
you have a lot of
work to do, as you

00:03:51.000 --> 00:03:53.830
have every single other
release, because RemoteViews,

00:03:53.830 --> 00:03:56.290
you have to re-sculpt
everything from scratch

00:03:56.290 --> 00:03:59.060
to make sure that it matches
the new template design.

00:03:59.060 --> 00:04:01.530
But help is finally on the
way-- for the very first time,

00:04:01.530 --> 00:04:04.520
we have a new template that
is just designed to say,

00:04:04.520 --> 00:04:05.960
hey, I've got some
custom content

00:04:05.960 --> 00:04:07.535
to put in the
middle of this view,

00:04:07.535 --> 00:04:09.660
but please, system, decorate
the rest of it exactly

00:04:09.660 --> 00:04:11.035
the way it's
supposed to be done.

00:04:11.035 --> 00:04:14.010
So we call it Decorated
Custom View style.

00:04:14.010 --> 00:04:16.029
And what you can see
here is essentially

00:04:16.029 --> 00:04:18.240
a schematic of the
orange section-- you just

00:04:18.240 --> 00:04:20.140
do whatever you want,
inside our RemoteViews,

00:04:20.140 --> 00:04:22.181
just like you did before
with custom RemoteViews.

00:04:22.181 --> 00:04:26.514
But the system will then put in
the expanded indicator, the app

00:04:26.514 --> 00:04:28.180
accountability, the
app name at the top,

00:04:28.180 --> 00:04:30.263
and even put in the actions
for you at the bottom.

00:04:30.263 --> 00:04:32.542
So if you've got a custom
weather widget, or something

00:04:32.542 --> 00:04:35.000
like that, that you want to
have it match the system style,

00:04:35.000 --> 00:04:35.798
you're good to go.

00:04:38.630 --> 00:04:40.790
Another big new thing
that is new in N--

00:04:40.790 --> 00:04:42.200
we didn't talk about it much
at the keynote yesterday,

00:04:42.200 --> 00:04:44.970
but if you've been playing along
at home with the N developer

00:04:44.970 --> 00:04:48.080
preview, you've seen this--
is that we are now finally,

00:04:48.080 --> 00:04:51.124
finally, finally supporting
groups on the phone.

00:04:51.124 --> 00:04:52.290
You want me to use this one?

00:04:52.290 --> 00:04:53.982
All right, thanks a lot, man.

00:04:53.982 --> 00:04:55.440
We have an amazing
crew here today.

00:04:55.440 --> 00:04:57.701
Thank you very much.

00:04:57.701 --> 00:04:59.950
We actually added notification
groups all the way back

00:04:59.950 --> 00:05:01.609
in API 24 Android Wear.

00:05:01.609 --> 00:05:03.650
And of course, you've got
this awesome screenshot

00:05:03.650 --> 00:05:06.130
from centuries ago
showing the original Wear

00:05:06.130 --> 00:05:08.820
1.0 view of how
notification groups look,

00:05:08.820 --> 00:05:10.090
as a stack of cards.

00:05:10.090 --> 00:05:12.480
And on the phone, yeah, you
just see a summary-- you just

00:05:12.480 --> 00:05:14.217
see one thing, usually
you do inbox style

00:05:14.217 --> 00:05:15.800
to mask over what
would have otherwise

00:05:15.800 --> 00:05:18.260
been a group of really
nice notifications.

00:05:18.260 --> 00:05:20.010
Now you can do this
on the phone, as well.

00:05:20.010 --> 00:05:23.360
And on tablets, the exact
same APIs move forward.

00:05:23.360 --> 00:05:25.260
So if previously,
your app was doing

00:05:25.260 --> 00:05:26.960
some sort of looking
around to see

00:05:26.960 --> 00:05:28.764
if the Wear companion
was installed--

00:05:28.764 --> 00:05:29.680
don't do that anymore.

00:05:29.680 --> 00:05:31.138
Just post all of
your notifications

00:05:31.138 --> 00:05:33.240
in that group, which you
associate by group key,

00:05:33.240 --> 00:05:35.170
and they'll show up this way.

00:05:35.170 --> 00:05:38.000
Each one of those notifications
is its own full notification,

00:05:38.000 --> 00:05:40.590
so it can be expanded, it
can have its own actions,

00:05:40.590 --> 00:05:41.270
and everything.

00:05:41.270 --> 00:05:43.525
It's really, really outstanding.

00:05:43.525 --> 00:05:46.025
If you haven't used this API
before, it's really easy to do.

00:05:46.025 --> 00:05:48.560
You say Set Group when you're
building a notification

00:05:48.560 --> 00:05:49.890
with Builder.

00:05:49.890 --> 00:05:51.540
The string that
you pass basically

00:05:51.540 --> 00:05:55.890
becomes a co-location key
that we use to collect groups

00:05:55.890 --> 00:05:57.000
together by name.

00:05:57.000 --> 00:06:00.590
You still want to use a summary
notification, for two reasons.

00:06:00.590 --> 00:06:03.486
One, this is what will
show on phones pre-N,

00:06:03.486 --> 00:06:05.360
because we don't know
how to do groups pre-N,

00:06:05.360 --> 00:06:07.010
so we just show the summary.

00:06:07.010 --> 00:06:08.454
But in N, we'll
take that summary

00:06:08.454 --> 00:06:10.370
and we'll extract little
bits and pieces of it

00:06:10.370 --> 00:06:13.010
to make-- do you see that little
header row, right at the top,

00:06:13.010 --> 00:06:14.002
above the bundle?

00:06:14.002 --> 00:06:16.210
We actually pulled that
information from the summary.

00:06:16.210 --> 00:06:17.793
So if, for example,
you are displaying

00:06:17.793 --> 00:06:20.580
the group that
represents one inbox,

00:06:20.580 --> 00:06:22.347
or one account in
your chat app, that

00:06:22.347 --> 00:06:24.430
might be the place that--
because of the summary--

00:06:24.430 --> 00:06:26.204
we know, OK, that's
the account name,

00:06:26.204 --> 00:06:28.120
and that's what we'll
put in that summary row.

00:06:28.120 --> 00:06:29.710
But then each
individual conversation,

00:06:29.710 --> 00:06:31.550
or each individual
email thread, then

00:06:31.550 --> 00:06:33.747
goes into its own
notification in the group.

00:06:33.747 --> 00:06:36.330
And finally, if you want to make
sure that those things appear

00:06:36.330 --> 00:06:38.080
in the correct order,
use Set Sort key,

00:06:38.080 --> 00:06:39.871
will just sort them,
again, on that string,

00:06:39.871 --> 00:06:41.880
lexicographically to make
sure the notifications

00:06:41.880 --> 00:06:45.370
show up exactly the way
you want them to see.

00:06:45.370 --> 00:06:48.354
The other big end-user feature--
oh, now it's not going.

00:06:48.354 --> 00:06:49.270
All right, here we go.

00:06:49.270 --> 00:06:51.490
The other big end-user
feature for notifications in N

00:06:51.490 --> 00:06:54.920
that you developers need to
know about is direct reply.

00:06:54.920 --> 00:06:59.210
And we had this
on Wear, as well,

00:06:59.210 --> 00:07:01.599
where you could, essentially,
post a notification

00:07:01.599 --> 00:07:03.390
that somebody could
then talk to the watch,

00:07:03.390 --> 00:07:04.530
and then that text
would immediately

00:07:04.530 --> 00:07:06.960
be sent back to the app, and
you can send and SMS with it.

00:07:06.960 --> 00:07:08.126
Now we have it on the phone.

00:07:08.126 --> 00:07:11.120
And in fact, you just type
directly into the notification

00:07:11.120 --> 00:07:11.786
shade, itself.

00:07:11.786 --> 00:07:13.160
It's really awesome,
particularly

00:07:13.160 --> 00:07:14.109
from the lock screen.

00:07:14.109 --> 00:07:15.650
So I've got a nice
little build here,

00:07:15.650 --> 00:07:17.820
you can see you've got a new
message, you touch Reply,

00:07:17.820 --> 00:07:19.200
and you're just
typing right in there,

00:07:19.200 --> 00:07:20.140
even if it's on the lock screen.

00:07:20.140 --> 00:07:20.840
It's fantastic.

00:07:23.337 --> 00:07:25.670
If you've never used this API
before-- because again, it

00:07:25.670 --> 00:07:27.290
was introduced with
API [? 24 Wear-- ?]

00:07:27.290 --> 00:07:28.430
if you've never
used it before, you

00:07:28.430 --> 00:07:30.370
want to build something
called RemoteInput.

00:07:30.370 --> 00:07:32.010
RemoteInput is
something you hang off

00:07:32.010 --> 00:07:34.090
of an action that says,
by the way, if you

00:07:34.090 --> 00:07:36.970
know how to send me text back,
please do it in this way.

00:07:36.970 --> 00:07:38.820
And so you set up
a specific key,

00:07:38.820 --> 00:07:42.000
so that when you get your intent
back from that action click,

00:07:42.000 --> 00:07:44.679
you can extract out the
text that was entered.

00:07:44.679 --> 00:07:47.220
Something I want to point your
attention to if you've already

00:07:47.220 --> 00:07:48.860
been using RemoteInput,
you probably

00:07:48.860 --> 00:07:54.110
have an activity there as the
pending intent on the input.

00:07:54.110 --> 00:07:56.532
And it really, really needs
to be-- sot that action--

00:07:56.532 --> 00:07:58.490
it needs to be a service
or broadcast receiver.

00:07:58.490 --> 00:08:01.442
And here's why-- if you have
an action with an activity

00:08:01.442 --> 00:08:03.900
intent on the lock screen, the
lock screen is going to say,

00:08:03.900 --> 00:08:05.450
oh, the user wants
to go somewhere

00:08:05.450 --> 00:08:06.470
when I click this thing.

00:08:06.470 --> 00:08:08.400
And it's going to pop up that
authentication challenge--

00:08:08.400 --> 00:08:10.640
it's going to pop up the
PIN pad, or the pattern,

00:08:10.640 --> 00:08:12.490
or fingerprint,
or what have you.

00:08:12.490 --> 00:08:14.491
But what you want to do
for a RemoteInput, where

00:08:14.491 --> 00:08:16.198
you want the user to
be able to just type

00:08:16.198 --> 00:08:18.070
straightaway on the
lock screen is make sure

00:08:18.070 --> 00:08:20.190
it goes to a background
thing, like a broadcast

00:08:20.190 --> 00:08:22.140
receiver or a service,
so that there's

00:08:22.140 --> 00:08:24.107
no authentication required.

00:08:24.107 --> 00:08:26.440
Now, if you're panicking and
going, whoa, whoa, hang on.

00:08:26.440 --> 00:08:28.730
I don't want my
users to allow people

00:08:28.730 --> 00:08:31.460
to send SMSs on their
behalf from the lock screen.

00:08:31.460 --> 00:08:33.287
That is an end-user setting.

00:08:33.287 --> 00:08:35.370
So if you go into Settings
as a user, you can say,

00:08:35.370 --> 00:08:37.951
do I want to be able to type
into things on my lock screen

00:08:37.951 --> 00:08:38.450
or not?

00:08:38.450 --> 00:08:40.100
So that's covered
by system settings.

00:08:40.100 --> 00:08:41.080
You don't have to
worry about it.

00:08:41.080 --> 00:08:43.350
All you have to do is make
sure that that RemoteInput

00:08:43.350 --> 00:08:45.850
is available for users who do
want to opt into that feature,

00:08:45.850 --> 00:08:50.640
to just type away from the
lock screen or anywhere else.

00:08:50.640 --> 00:08:52.490
One last thing I just
wanted to point out--

00:08:52.490 --> 00:08:56.607
when you set up that-- wow.

00:08:56.607 --> 00:08:57.190
You know what?

00:08:57.190 --> 00:08:58.940
I'm glad this is happening
here in this room,

00:08:58.940 --> 00:09:00.940
as opposed to like yesterday
during the keynote.

00:09:00.940 --> 00:09:03.119
I'm cool with that.

00:09:03.119 --> 00:09:04.910
So when you've got your
broadcast receiver,

00:09:04.910 --> 00:09:06.870
you just want to make sure you
use this method-- RemoteInput

00:09:06.870 --> 00:09:07.920
Get Results from Intent.

00:09:07.920 --> 00:09:10.045
That's the way that you
extract that text back out.

00:09:10.045 --> 00:09:13.500
And all of this sample code
is just stolen mercilessly

00:09:13.500 --> 00:09:14.890
from our developer docs.

00:09:14.890 --> 00:09:17.206
So particularly if you
download DP3, the developer

00:09:17.206 --> 00:09:19.830
preview for Android, all of this
stuff is going to be in there.

00:09:19.830 --> 00:09:20.890
You don't have to
copy it down-- you

00:09:20.890 --> 00:09:22.910
can sketch it now
if you want-- you'll

00:09:22.910 --> 00:09:24.900
be able to pull this
directly into your app

00:09:24.900 --> 00:09:26.170
and get RemoteInput running.

00:09:28.517 --> 00:09:30.100
Another thing that
I wanted to mention

00:09:30.100 --> 00:09:33.282
is, after you get a
reply-- so here's the flow.

00:09:33.282 --> 00:09:34.990
You post a notification,
the user touches

00:09:34.990 --> 00:09:37.580
Reply, it types directly in
it, you get the intent back,

00:09:37.580 --> 00:09:38.962
extract the text--
great, this is

00:09:38.962 --> 00:09:41.170
what the user wanted to send
as a comment, or an SMS,

00:09:41.170 --> 00:09:41.930
or whatever.

00:09:41.930 --> 00:09:43.350
What do you do now?

00:09:43.350 --> 00:09:45.450
So, previously, when
people do direct reply,

00:09:45.450 --> 00:09:47.079
our pattern was that
you just dismiss

00:09:47.079 --> 00:09:49.370
the notification-- you assume
the user is done with it.

00:09:49.370 --> 00:09:49.940
Not anymore.

00:09:49.940 --> 00:09:52.140
We assume now that
in N, a user is

00:09:52.140 --> 00:09:54.840
going to decide to dismiss
that notification whenever

00:09:54.840 --> 00:09:55.640
they want.

00:09:55.640 --> 00:09:58.120
This way they can post
one or two quick messages

00:09:58.120 --> 00:10:01.420
in rapid succession without
losing that context.

00:10:01.420 --> 00:10:04.080
So after you get a
RemoteInput direct reply,

00:10:04.080 --> 00:10:05.200
leave the notification up.

00:10:05.200 --> 00:10:07.390
And more than that, you
actually want to re-notify

00:10:07.390 --> 00:10:08.970
to signify, oh, yeah, we got it.

00:10:08.970 --> 00:10:10.090
We got this.

00:10:10.090 --> 00:10:11.080
It's been posted.

00:10:11.080 --> 00:10:13.060
And we have this API
called Set RemoteInput

00:10:13.060 --> 00:10:14.522
History that
basically all it does

00:10:14.522 --> 00:10:16.980
is draw a little line underneath
your existing notification

00:10:16.980 --> 00:10:20.467
content, whatever it was, and
then puts in any reply text

00:10:20.467 --> 00:10:21.050
that you want.

00:10:21.050 --> 00:10:23.730
So you can make a UI like
this where you say, oh, you've

00:10:23.730 --> 00:10:24.520
left that comment.

00:10:24.520 --> 00:10:26.900
And the user knows, OK, this
transaction has been completed,

00:10:26.900 --> 00:10:28.900
I don't have to wonder
whether it's been posted.

00:10:28.900 --> 00:10:30.136
I'm set.

00:10:30.136 --> 00:10:31.760
So this works really
well for something

00:10:31.760 --> 00:10:34.218
like leaving a comment on a
picture or something like that,

00:10:34.218 --> 00:10:37.110
where you have the original
notification content,

00:10:37.110 --> 00:10:39.150
and then you've got
replies that sit after it.

00:10:39.150 --> 00:10:40.899
But that doesn't really
work all that well

00:10:40.899 --> 00:10:43.060
for a chat, because chats
are back and forth--

00:10:43.060 --> 00:10:45.435
you say something, they say
something, you say something,

00:10:45.435 --> 00:10:46.440
they say something.

00:10:46.440 --> 00:10:48.950
Set RemoteInput History
doesn't quite cover that case.

00:10:48.950 --> 00:10:50.110
We've got something
even better for you,

00:10:50.110 --> 00:10:52.610
but I'm going to hold that off
and let Alex talk about that,

00:10:52.610 --> 00:10:54.481
because that's real fun.

00:10:54.481 --> 00:10:56.480
In fact, why don't you
go ahead and get started.

00:10:56.480 --> 00:10:59.050
The clicker's fidgety, maybe
it likes you better than me.

00:10:59.050 --> 00:10:59.180
Let's try it.

00:10:59.180 --> 00:11:00.555
ALEX HILLS: It
might, or maybe it

00:11:00.555 --> 00:11:02.520
will advance seven times
for each time I click.

00:11:02.520 --> 00:11:03.700
DAN SANDLER: That's right.

00:11:03.700 --> 00:11:04.450
ALEX HILLS: Great.

00:11:04.450 --> 00:11:06.590
All right, so Dan's
told you a little bit

00:11:06.590 --> 00:11:09.800
about how N brings some pretty
big changes to the visual style

00:11:09.800 --> 00:11:11.540
of notifications on the phone.

00:11:11.540 --> 00:11:13.290
Well, I think that I'm
going to one up him

00:11:13.290 --> 00:11:17.030
and say that Android Wear 2.0
is the biggest notification

00:11:17.030 --> 00:11:19.370
redesign in the history
of Android Wear.

00:11:19.370 --> 00:11:21.584
Which also happens to
be the only notification

00:11:21.584 --> 00:11:23.250
redesign in the history
of Android Wear,

00:11:23.250 --> 00:11:27.367
but I'm going to one-up Dan
anyway, so I'll take it.

00:11:27.367 --> 00:11:29.200
Before I start, I do
want to mention briefly

00:11:29.200 --> 00:11:33.450
that while this section applies
to all notifications on Wear,

00:11:33.450 --> 00:11:35.740
it's mostly geared towards
bridge notifications coming

00:11:35.740 --> 00:11:36.449
from a phone app.

00:11:36.449 --> 00:11:38.698
If you want to learn some
other ways to approach this,

00:11:38.698 --> 00:11:40.810
for notifications coming
from a local Wear app,

00:11:40.810 --> 00:11:43.335
you can go to the Making Wear
Apps More Standalone talk

00:11:43.335 --> 00:11:44.460
at 2:00 PM, or viewer.docs.

00:11:47.120 --> 00:11:48.910
It doesn't like me.

00:11:48.910 --> 00:11:50.300
Here we go.

00:11:50.300 --> 00:11:52.050
So the very first
impression that a user

00:11:52.050 --> 00:11:54.550
gets of your app's
notification is the card itself

00:11:54.550 --> 00:11:57.230
in the context stream.

00:11:57.230 --> 00:11:59.010
Let's talk a little
bit of history.

00:11:59.010 --> 00:12:01.540
In Android Wear 1.x,
cards were cool.

00:12:01.540 --> 00:12:03.280
You could specify
different card heights,

00:12:03.280 --> 00:12:05.850
add big background images
for visual context,

00:12:05.850 --> 00:12:08.790
you could toss in or hide a
small icon or a content icon,

00:12:08.790 --> 00:12:11.155
and get all sorts of different
fonts and treatments.

00:12:11.155 --> 00:12:12.530
All these features
provided a lot

00:12:12.530 --> 00:12:15.730
of visual richness and impact
to the cards, themselves.

00:12:15.730 --> 00:12:17.780
That said, the richness
could sometimes

00:12:17.780 --> 00:12:20.800
backfire, like when the
background image itself

00:12:20.800 --> 00:12:24.080
was mostly obscured by the
card, itself, or diverse font

00:12:24.080 --> 00:12:26.820
treatments made it hard for
a user to actually determine

00:12:26.820 --> 00:12:29.970
what was most important for
a notification at a glance.

00:12:29.970 --> 00:12:31.354
We thought about
this, about what

00:12:31.354 --> 00:12:32.770
the purpose of a
notification card

00:12:32.770 --> 00:12:35.700
is, about the importance of
high glanceability-- and changed

00:12:35.700 --> 00:12:39.100
things around a little
bit in Wear 2.0.

00:12:39.100 --> 00:12:41.810
Notification cards now
look a little different.

00:12:41.810 --> 00:12:43.470
Visually, all the
same components

00:12:43.470 --> 00:12:45.820
are there-- like with N, I
promise they're all there.

00:12:45.820 --> 00:12:48.028
But we've made them a little
more consistent and more

00:12:48.028 --> 00:12:48.992
information first.

00:12:48.992 --> 00:12:50.700
We've switched from
our card-based design

00:12:50.700 --> 00:12:53.320
to a dark, bold, material theme.

00:12:53.320 --> 00:12:55.820
We now use color to start
telling the story-- the color

00:12:55.820 --> 00:12:58.670
that your app sets
in the notification

00:12:58.670 --> 00:13:00.980
now applies to the entire
notification surface,

00:13:00.980 --> 00:13:03.000
immersing the user
in your content.

00:13:03.000 --> 00:13:05.730
Explicit typography and
intentional treatment help

00:13:05.730 --> 00:13:09.634
give the user focus for the most
important information first.

00:13:09.634 --> 00:13:11.300
The color treatment
also serves to bring

00:13:11.300 --> 00:13:14.730
a bit of visual consistency and
coherence to the notification,

00:13:14.730 --> 00:13:16.720
because you set the
color from your app.

00:13:16.720 --> 00:13:18.212
Notifications
coming from you look

00:13:18.212 --> 00:13:20.170
like they're coming from
you, and notifications

00:13:20.170 --> 00:13:21.878
coming from another
app look like they're

00:13:21.878 --> 00:13:24.427
coming from another app.

00:13:24.427 --> 00:13:26.010
The other part of
this material update

00:13:26.010 --> 00:13:30.330
is a set of changes to the
layout of the card, itself.

00:13:30.330 --> 00:13:32.930
Remember though, like I said
before, all the same content is

00:13:32.930 --> 00:13:35.614
there-- you can look at this
right over there, and trust me,

00:13:35.614 --> 00:13:37.530
I've got it listed out
and broken out for you.

00:13:37.530 --> 00:13:39.320
It's just switched
around a little bit.

00:13:39.320 --> 00:13:41.940
First off, we take a
one-size-fits-all approach

00:13:41.940 --> 00:13:44.880
to the actual notification-
all notifications are the same

00:13:44.880 --> 00:13:46.540
size, one screen.

00:13:46.540 --> 00:13:48.350
No more different card heights.

00:13:48.350 --> 00:13:50.740
Second, we've taken the large
icon in the background--

00:13:50.740 --> 00:13:53.770
that nice, rich icon there--
and we've brought it front

00:13:53.770 --> 00:13:55.454
and center of the notification.

00:13:55.454 --> 00:13:57.370
It's no longer partially
obscured by the card,

00:13:57.370 --> 00:13:58.590
or anything like that.

00:13:58.590 --> 00:14:02.740
We've also brought, yes, we've
also brought the small icon

00:14:02.740 --> 00:14:05.324
from the card itself to--
well, it's still actually

00:14:05.324 --> 00:14:07.240
on the notification, but
we've brought it down

00:14:07.240 --> 00:14:10.630
to the bottom right
of that large icon.

00:14:10.630 --> 00:14:13.989
Finally, the content text
and title are centered.

00:14:13.989 --> 00:14:16.280
We've made the font treatment
a little more consistent,

00:14:16.280 --> 00:14:17.696
with an emphasis
on glanceability.

00:14:19.624 --> 00:14:21.790
Now that you know what your
notification looks like,

00:14:21.790 --> 00:14:25.320
I'm going to put it in the
context of the actual system.

00:14:25.320 --> 00:14:28.855
A little bit more history-- in
Android Wear 1.x, the context

00:14:28.855 --> 00:14:31.140
stream could be a bit
confusing to navigate.

00:14:31.140 --> 00:14:34.550
The stream was, ostensibly, a
single, n-length vertical list

00:14:34.550 --> 00:14:36.420
of your notifications.

00:14:36.420 --> 00:14:38.610
However, each of
those n notifications

00:14:38.610 --> 00:14:41.490
could also have an m length
vertical list of cards--

00:14:41.490 --> 00:14:44.115
creating a sort of m by x
like big scrollable space,

00:14:44.115 --> 00:14:46.240
you could just watch the
interaction on the screen,

00:14:46.240 --> 00:14:47.630
and kind of realize.

00:14:47.630 --> 00:14:50.294
You could page down the
stream one, two, three,

00:14:50.294 --> 00:14:51.710
a couple more
times, and then page

00:14:51.710 --> 00:14:53.370
to the right a couple times.

00:14:53.370 --> 00:14:54.970
At that point,
remembering how to get

00:14:54.970 --> 00:14:58.010
back to where you were-- going
from, say, row 5 column 1

00:14:58.010 --> 00:15:01.060
to row 2 column 1--
became a mental exercise

00:15:01.060 --> 00:15:02.530
in memory and pathfinding.

00:15:02.530 --> 00:15:04.170
Which is not exactly
ideal when you

00:15:04.170 --> 00:15:06.240
are trying to rapidly
triage your notifications

00:15:06.240 --> 00:15:08.410
on your tiny little
wrist computer.

00:15:08.410 --> 00:15:11.460
On the other hand, the context
stream in Android Wear 2.0

00:15:11.460 --> 00:15:13.250
is pretty simple to navigate.

00:15:13.250 --> 00:15:15.090
Like in 1.x, the
stream is ostensibly

00:15:15.090 --> 00:15:19.060
a single n-length
list of notifications.

00:15:19.060 --> 00:15:24.100
Unlike in 1.x, that's it--
simple, easy, no pathfinding.

00:15:24.100 --> 00:15:26.050
Also, just a quick
note, we fixed

00:15:26.050 --> 00:15:28.675
one of the things that bugged me
the most about the old stream,

00:15:28.675 --> 00:15:30.960
where you could flick from
card, to card, to card.

00:15:30.960 --> 00:15:32.390
But if you had say
seven, or eight, or nine,

00:15:32.390 --> 00:15:33.764
or 10 notifications,
you actually

00:15:33.764 --> 00:15:36.164
can only go one at once,
paginating through them.

00:15:36.164 --> 00:15:37.830
Now we've made it
possible to vertically

00:15:37.830 --> 00:15:39.290
fling through those
notifications from top

00:15:39.290 --> 00:15:41.010
to bottom, bottom
to top, et cetera.

00:15:41.010 --> 00:15:45.120
Again, sort of a big old point
there for rapid usability.

00:15:48.960 --> 00:15:51.750
Now if you've been thinking
about the implications of what

00:15:51.750 --> 00:15:53.680
I've been saying here,
you've realized that

00:15:53.680 --> 00:15:57.330
a one-size-fits-all approach
might not actually fit all

00:15:57.330 --> 00:15:58.540
of your content.

00:15:58.540 --> 00:16:00.500
In fact, because smart
watches are very small,

00:16:00.500 --> 00:16:02.999
it probably will not fit all
of your content, and some of it

00:16:02.999 --> 00:16:03.700
will be clipped.

00:16:03.700 --> 00:16:05.950
To solve this problem,
Android Wear 2.0

00:16:05.950 --> 00:16:09.310
introduces expanded
notifications.

00:16:09.310 --> 00:16:11.900
Now, in the news stream,
the entire notification

00:16:11.900 --> 00:16:13.160
is a tap target.

00:16:13.160 --> 00:16:15.490
Tapping that notification
launches the expanded

00:16:15.490 --> 00:16:16.730
notification experience.

00:16:16.730 --> 00:16:20.080
This is automatically rendered
with Wear 2.0's new material

00:16:20.080 --> 00:16:21.900
guidelines, which
allows you to provide

00:16:21.900 --> 00:16:24.850
a lightweight, app-like
experience to your users

00:16:24.850 --> 00:16:26.480
with minimal effort.

00:16:26.480 --> 00:16:28.940
All of the notification
content is arranged vertically

00:16:28.940 --> 00:16:31.880
in a single screen surface,
with the content first, followed

00:16:31.880 --> 00:16:33.607
by the primary
action at the end.

00:16:33.607 --> 00:16:35.940
All the other actions that
you add to your notification,

00:16:35.940 --> 00:16:37.930
are put in the
WearableActionDrawer component,

00:16:37.930 --> 00:16:40.030
which is a new component
you can learn more about,

00:16:40.030 --> 00:16:43.150
by going to the Android Wear
2.0 Material Design session

00:16:43.150 --> 00:16:45.010
at 3:00 PM.

00:16:45.010 --> 00:16:48.580
Now, what do you need to do
to enhance your notifications

00:16:48.580 --> 00:16:51.510
with this new, rich experience?

00:16:51.510 --> 00:16:52.410
Nothing.

00:16:52.410 --> 00:16:53.920
You get it all for free.

00:16:53.920 --> 00:16:56.700
This example here is one of
the simpler notifications

00:16:56.700 --> 00:17:00.714
that you can build-- it has a
text, title, icons, an action.

00:17:00.714 --> 00:17:02.130
Three of those
things are actually

00:17:02.130 --> 00:17:03.560
necessary to even
build a notification

00:17:03.560 --> 00:17:04.490
in the first place.

00:17:04.490 --> 00:17:07.140
And you do this, and all of
that nice material richness

00:17:07.140 --> 00:17:09.230
just comes along for the ride.

00:17:09.230 --> 00:17:12.510
That said, if you want your
notifications to really pop--

00:17:12.510 --> 00:17:15.589
to be information-rich and
visually impactful-- you may

00:17:15.589 --> 00:17:18.050
need to take full advantage
of the notification styles

00:17:18.050 --> 00:17:20.050
and templates.

00:17:20.050 --> 00:17:22.550
As you can see here,
expanded notifications

00:17:22.550 --> 00:17:25.690
can be both information-dense
and visually engaging.

00:17:25.690 --> 00:17:28.170
You can use templates like
Big Text or Big Picture,

00:17:28.170 --> 00:17:30.780
and you can add extra pages
to get even more information

00:17:30.780 --> 00:17:32.749
into the notification itself.

00:17:32.749 --> 00:17:34.790
I'm going to dive into
each of these in a second,

00:17:34.790 --> 00:17:36.760
but you can see here
the level of richness

00:17:36.760 --> 00:17:39.110
and visual diversity that
you can get in an expanded

00:17:39.110 --> 00:17:40.590
notification.

00:17:40.590 --> 00:17:42.990
The first example there was
a big text notification,

00:17:42.990 --> 00:17:45.290
which you can see here, with
the text content rendered

00:17:45.290 --> 00:17:48.510
in the stream, and on the
expanded notification surface.

00:17:48.510 --> 00:17:50.676
However, that
notification also has

00:17:50.676 --> 00:17:52.300
an action with the
RemoteInput that Dan

00:17:52.300 --> 00:17:54.500
was talking-- that we have
had for a couple years--

00:17:54.500 --> 00:17:57.250
and choices which are rendered
directly on the expanded

00:17:57.250 --> 00:18:00.290
notification itself, which
allows users to take action

00:18:00.290 --> 00:18:02.990
directly, or even respond
without having to talk

00:18:02.990 --> 00:18:06.310
or type from the
notification surface.

00:18:06.310 --> 00:18:08.070
The next example
was a notification

00:18:08.070 --> 00:18:10.360
with two Big Picture
cards added to it,

00:18:10.360 --> 00:18:12.870
whose images get put straight
on the expanded notification

00:18:12.870 --> 00:18:16.070
surface, which creates a sort
of immersive photo-viewing

00:18:16.070 --> 00:18:18.457
experience, just
from a notification.

00:18:18.457 --> 00:18:20.290
Now, I'm about to show
you some code for all

00:18:20.290 --> 00:18:22.831
of this, so just look closely
to remember what we're actually

00:18:22.831 --> 00:18:24.000
going to be building.

00:18:24.000 --> 00:18:26.070
This is most of the code.

00:18:26.070 --> 00:18:29.620
Now, those two images are extra
pages in the notification,

00:18:29.620 --> 00:18:31.930
and extra pages are
actually notifications

00:18:31.930 --> 00:18:33.110
in their own right.

00:18:33.110 --> 00:18:35.840
So we're going to create
a notification first.

00:18:35.840 --> 00:18:38.280
Then we're going to set that
notification style to a Big

00:18:38.280 --> 00:18:41.200
Picture style, and
then attach your image

00:18:41.200 --> 00:18:45.580
to the style with a simple
chain method call on it.

00:18:45.580 --> 00:18:47.900
To make the second big
picture, copy/paste

00:18:47.900 --> 00:18:50.210
works just as well in
code as it does in slides,

00:18:50.210 --> 00:18:52.550
so just do that.

00:18:52.550 --> 00:18:54.397
And then, to actually
add those pages,

00:18:54.397 --> 00:18:56.480
we're going to need to
create a wearable extender,

00:18:56.480 --> 00:18:59.860
and add those two
notifications as pages to it.

00:18:59.860 --> 00:19:02.580
Finally, we're going to build
the notification, itself,

00:19:02.580 --> 00:19:05.200
by creating a builder,
setting the title, text,

00:19:05.200 --> 00:19:07.029
and icons, and
finally, extending

00:19:07.029 --> 00:19:08.820
the notification with
the wearable extender

00:19:08.820 --> 00:19:10.620
that we built earlier.

00:19:10.620 --> 00:19:13.400
The rest is as simple as calling
notificationManager Notify,

00:19:13.400 --> 00:19:15.800
and you'll end up with an
expanded notification, just

00:19:15.800 --> 00:19:19.840
like that, with this rich
photo-viewing experience.

00:19:19.840 --> 00:19:22.510
Now, I do also want to
mention that extra pages can

00:19:22.510 --> 00:19:25.290
be heterogeneous, and you
can mix and match them

00:19:25.290 --> 00:19:26.855
to get exactly what you want.

00:19:26.855 --> 00:19:28.480
This lets you make
rich notifications--

00:19:28.480 --> 00:19:30.170
like this one--
for a user's ticket

00:19:30.170 --> 00:19:33.400
to see "Space Fights VII."

00:19:33.400 --> 00:19:35.550
Notification has
three extra pages

00:19:35.550 --> 00:19:39.440
containing a QR ticket, movie
details, and the plot synopsis.

00:19:39.440 --> 00:19:41.582
As you can see here,
all of those pages

00:19:41.582 --> 00:19:43.040
are stacked vertically
in the order

00:19:43.040 --> 00:19:44.831
that you add them,
which essentially allows

00:19:44.831 --> 00:19:47.460
you to use extra pages
as building blocks

00:19:47.460 --> 00:19:49.770
to construct the expanded
notification exactly

00:19:49.770 --> 00:19:50.770
as you want.

00:19:50.770 --> 00:19:54.610
This makes it easy to create
an engaging and useful wear

00:19:54.610 --> 00:19:58.480
experience without actually
having to make an app.

00:19:58.480 --> 00:20:00.500
Finally, I want
to talk about one

00:20:00.500 --> 00:20:04.920
of the keynotes of Wear 2.0's
communications improvements--

00:20:04.920 --> 00:20:07.260
MessagingStyle.

00:20:07.260 --> 00:20:10.080
MessagingStyle is an entirely
new notification style,

00:20:10.080 --> 00:20:12.350
introduced with
Android Wear 2.0,

00:20:12.350 --> 00:20:15.730
which gives users a full
back-and-forth chat experience

00:20:15.730 --> 00:20:19.050
right within the notification.

00:20:19.050 --> 00:20:21.900
When a user taps into the
expanded notification itself,

00:20:21.900 --> 00:20:23.900
they're going to have
access to the full context

00:20:23.900 --> 00:20:26.130
of their conversation,
letting them get, say,

00:20:26.130 --> 00:20:28.620
right back to the work
chat from the day before,

00:20:28.620 --> 00:20:31.161
or the conversation with their
friends about how "Space Fight

00:20:31.161 --> 00:20:34.220
VII" was really awesome, way
better than the prequels,

00:20:34.220 --> 00:20:36.929
and maybe even lived
up to the originals.

00:20:36.929 --> 00:20:38.970
You'll also notice that
the chat history includes

00:20:38.970 --> 00:20:41.750
sender names there, meaning that
group conversations work well,

00:20:41.750 --> 00:20:42.740
too.

00:20:42.740 --> 00:20:46.760
That said, MessagingStyle is
not just about formatting.

00:20:46.760 --> 00:20:49.150
You could theoretically
do all of this yourself,

00:20:49.150 --> 00:20:50.460
with a Big Text.

00:20:50.460 --> 00:20:53.110
And actually, most of you who
have messaging apps already

00:20:53.110 --> 00:20:55.580
are, and just adding
it as an extra page

00:20:55.580 --> 00:20:59.030
with Wearable Extender.

00:20:59.030 --> 00:21:01.030
The real key to
MessagingStyle is actually

00:21:01.030 --> 00:21:02.570
how MessagingStyle
and RepoteInput

00:21:02.570 --> 00:21:05.820
work in concert to give
the user this experience.

00:21:05.820 --> 00:21:09.280
Unlike the other
uses of RemoteInput,

00:21:09.280 --> 00:21:11.350
the user replying won't
actually drop them out

00:21:11.350 --> 00:21:12.910
of the expanded notification.

00:21:12.910 --> 00:21:14.600
Instead, their response
is going to show

00:21:14.600 --> 00:21:18.265
up immediately, in line, on the
notification surface itself.

00:21:18.265 --> 00:21:20.890
This means that users are going
to see their messages instantly

00:21:20.890 --> 00:21:23.570
in front of them, before
a round-trip to the phone

00:21:23.570 --> 00:21:25.340
and your app has completed.

00:21:25.340 --> 00:21:27.840
This makes the user
experience very responsive,

00:21:27.840 --> 00:21:30.680
and fast, and feels
just very good all out.

00:21:30.680 --> 00:21:33.130
If your app reposts the
notification with new content,

00:21:33.130 --> 00:21:34.990
it will also update
in place, meaning

00:21:34.990 --> 00:21:37.440
that responses and
replies by other users

00:21:37.440 --> 00:21:40.220
also show up in this surface,
without the user having

00:21:40.220 --> 00:21:43.730
to, say, go out and back
in, or retap a notification

00:21:43.730 --> 00:21:44.310
or anything.

00:21:44.310 --> 00:21:47.220
It's all right there, giving
that full back-and-forth chat

00:21:47.220 --> 00:21:51.050
experience in the notification.

00:21:51.050 --> 00:21:53.150
Now, you're all
savvy developers,

00:21:53.150 --> 00:21:55.400
and have probably noticed
that these RemoteInput

00:21:55.400 --> 00:22:00.665
choices have been really good--
way better than they should be.

00:22:00.665 --> 00:22:02.460
You also may actually
have mentally linked

00:22:02.460 --> 00:22:04.740
that to David's talk in
the keynote, if you're

00:22:04.740 --> 00:22:06.185
especially savvy.

00:22:06.185 --> 00:22:07.810
But the summary is
that, in the future,

00:22:07.810 --> 00:22:10.190
we are going to be
bringing the Smart Reply

00:22:10.190 --> 00:22:14.330
feature from Inbox and Allo to
MessagingStyle notifications

00:22:14.330 --> 00:22:15.370
on Wear.

00:22:15.370 --> 00:22:17.260
Meaning that you,
as a developer,

00:22:17.260 --> 00:22:19.630
can optionally give
your users dynamically

00:22:19.630 --> 00:22:22.830
generated, quality,
contextual responses

00:22:22.830 --> 00:22:25.783
to pick from, all for free.

00:22:25.783 --> 00:22:28.310
[WHISTLE]

00:22:28.310 --> 00:22:29.680
Good, yeah, it's very cool.

00:22:29.680 --> 00:22:32.960
Let's be clear.

00:22:32.960 --> 00:22:35.440
Now I'm going to talk
about a little bit of code.

00:22:35.440 --> 00:22:37.192
To actually use
MessagingStyle, and to get

00:22:37.192 --> 00:22:38.650
it to work end-to-end,
you're going

00:22:38.650 --> 00:22:41.700
to need to create a reply
action with a RemoteInput.

00:22:41.700 --> 00:22:43.630
While technically
not necessary, as I

00:22:43.630 --> 00:22:46.506
mentioned before, the real
goodness of MessagingStyle

00:22:46.506 --> 00:22:47.880
comes from how
the MessagingStyle

00:22:47.880 --> 00:22:49.540
and RemoteInput work together.

00:22:49.540 --> 00:22:51.640
Just one on their own
just only gives you

00:22:51.640 --> 00:22:53.090
half of the experience.

00:22:53.090 --> 00:22:55.394
Now this slide is actually
completely shamelessly

00:22:55.394 --> 00:22:56.810
copied from Dan's
slide, which is,

00:22:56.810 --> 00:22:59.352
in turn, shamelessly copied from
our developer documentation,

00:22:59.352 --> 00:23:01.018
including the Android
version call-outs.

00:23:01.018 --> 00:23:02.670
So all I'm going to
say now is that you

00:23:02.670 --> 00:23:06.150
need to do this, and move on.

00:23:06.150 --> 00:23:09.360
Creating the MessagingStyle
itself is actually very simple.

00:23:09.360 --> 00:23:11.900
You simply need to create a
new instance of MessagingStyle,

00:23:11.900 --> 00:23:13.691
with the reply name
that's going to show up

00:23:13.691 --> 00:23:15.690
when the user replies in place.

00:23:15.690 --> 00:23:18.500
And then add all of the previous
messages from the conversation

00:23:18.500 --> 00:23:20.130
to the style by
calling add message,

00:23:20.130 --> 00:23:24.700
with the text, time, and sender.

00:23:24.700 --> 00:23:27.520
Finally, you just need to
build the notification itself.

00:23:27.520 --> 00:23:30.560
Build it as normal, set the
style to MessagingStyle,

00:23:30.560 --> 00:23:32.410
and add the action that
I completely glossed

00:23:32.410 --> 00:23:34.340
over, and call Notify.

00:23:34.340 --> 00:23:36.582
That's really, actually,
all there is to it.

00:23:36.582 --> 00:23:38.290
If you notice, and
were paying attention,

00:23:38.290 --> 00:23:40.120
that's a little
bit easier, even,

00:23:40.120 --> 00:23:42.590
than just adding two
pictures to a notification

00:23:42.590 --> 00:23:44.300
in the first place.

00:23:44.300 --> 00:23:47.490
Now, with that code we've just
gone through on your phone app,

00:23:47.490 --> 00:23:51.430
you are able to give your users
a full back-and-forth chat

00:23:51.430 --> 00:23:53.340
experience on Android Wear.

00:23:53.340 --> 00:23:55.130
That's it-- nothing else.

00:23:55.130 --> 00:23:58.220
Now, to go back to
about 10-ish minutes

00:23:58.220 --> 00:24:00.820
ago, when Dan mentioned that
there was a better way of doing

00:24:00.820 --> 00:24:03.950
chat notifications on the phone
than using set RemoteInput

00:24:03.950 --> 00:24:06.624
history, I have some good news.

00:24:06.624 --> 00:24:09.040
We learned from the path that
RemoteInput and notification

00:24:09.040 --> 00:24:10.414
groups took, and
this time, we're

00:24:10.414 --> 00:24:12.580
going to be bringing a
Wear feature to the phone

00:24:12.580 --> 00:24:15.020
immediately, instead of
waiting a year or two for it

00:24:15.020 --> 00:24:15.980
to show up.

00:24:15.980 --> 00:24:19.070
MessagingStyle on the phone
works just like on Wear,

00:24:19.070 --> 00:24:22.650
using RemoteInput for direct
replies, as you can see here.

00:24:22.650 --> 00:24:25.380
Additionally, if the user does
still want that full, great app

00:24:25.380 --> 00:24:27.760
experience that you've built--
and I'm sure they will--

00:24:27.760 --> 00:24:30.170
they just have to tap the
notification to deep link

00:24:30.170 --> 00:24:31.800
into your app, just like before.

00:24:34.740 --> 00:24:38.800
Now, a quick note here is
that we've put a lot of effort

00:24:38.800 --> 00:24:42.250
into making MessagingStyle
work on Android 2.0 devices,

00:24:42.250 --> 00:24:45.390
no matter what version of
Android they are paired to.

00:24:45.390 --> 00:24:48.340
This means that users
running phones with an OS

00:24:48.340 --> 00:24:51.690
as early as Jelly Bean still
get MessagingStyle goodness

00:24:51.690 --> 00:24:53.020
on Android Wear.

00:24:53.020 --> 00:24:56.550
All you have to do is these
three things in your phone app.

00:24:56.550 --> 00:24:59.440
First, you have to use
NotificationCompat.Builder, as

00:24:59.440 --> 00:25:01.070
opposed to NotificationBuilder.

00:25:01.070 --> 00:25:03.430
Second, you have to
use NotificationCompat

00:25:03.430 --> 00:25:05.764
MessagingStyle, instead of
Notification MessagingStyle--

00:25:05.764 --> 00:25:08.013
to be fair, these are both
things that you're probably

00:25:08.013 --> 00:25:09.540
already doing,
because compatibility

00:25:09.540 --> 00:25:11.050
is pretty important here.

00:25:11.050 --> 00:25:14.060
And then third-- and you're
probably already doing this,

00:25:14.060 --> 00:25:16.980
if you're a messaging app, which
I mentioned before-- you need

00:25:16.980 --> 00:25:20.550
to add the user's chat
history as an extra page

00:25:20.550 --> 00:25:22.630
with wearableExtender,
to continue

00:25:22.630 --> 00:25:25.320
to support Android Wear 1.x.

00:25:25.320 --> 00:25:26.950
If you've done
these things, you're

00:25:26.950 --> 00:25:28.500
going to end up
with the following,

00:25:28.500 --> 00:25:31.400
as shown by these handy
tiny little charts.

00:25:31.400 --> 00:25:34.284
First, on Android Wear 2.0,
regardless of what version

00:25:34.284 --> 00:25:35.700
the phone is
running, you're going

00:25:35.700 --> 00:25:38.080
to get MessagingStyle,
everything that I showed you,

00:25:38.080 --> 00:25:40.580
full chat experience,
right in the notification.

00:25:40.580 --> 00:25:42.687
On Wear 1.x, pairs
to any phone, you're

00:25:42.687 --> 00:25:44.270
going to get the
standard notification

00:25:44.270 --> 00:25:48.120
card in the stream, and because
you added that extra page,

00:25:48.120 --> 00:25:49.870
it's going to show
up and your users

00:25:49.870 --> 00:25:51.700
are still going to get
their chat history.

00:25:51.700 --> 00:25:54.030
Because MessagingStyle
is a bespoke experience

00:25:54.030 --> 00:25:56.030
on Android Wear 2.0,
we don't actually

00:25:56.030 --> 00:25:57.890
show those extra pages.

00:25:57.890 --> 00:26:00.789
Finally, on the phone,
if your user's running N,

00:26:00.789 --> 00:26:02.830
they're going to get
MessagingStyle notification.

00:26:02.830 --> 00:26:04.642
And if they're not,
NotificationCompat

00:26:04.642 --> 00:26:06.850
ensures that they still get
the standard notification

00:26:06.850 --> 00:26:07.980
experience.

00:26:07.980 --> 00:26:09.630
All these things
summed up together

00:26:09.630 --> 00:26:11.680
mean that if you use
MessagingStyle and these two

00:26:11.680 --> 00:26:14.990
other things that I said, you
get the best of all worlds,

00:26:14.990 --> 00:26:17.520
no matter what device is
paired, no matter what version

00:26:17.520 --> 00:26:20.680
those devices are running.

00:26:20.680 --> 00:26:23.240
So what actual steps
do you, a developer,

00:26:23.240 --> 00:26:25.890
need to take to work
with the changes

00:26:25.890 --> 00:26:28.200
that we've made in
Android Wear 2.0?

00:26:28.200 --> 00:26:30.540
First, you need to make
sure that the notification

00:26:30.540 --> 00:26:33.570
in the stream itself is rapidly
glanceable-- which basically

00:26:33.570 --> 00:26:35.780
means, focus on the text.

00:26:35.780 --> 00:26:38.410
Second, to get all of this
expanded notification goodness,

00:26:38.410 --> 00:26:40.250
and really take full
advantage of it,

00:26:40.250 --> 00:26:43.170
use extra content pages
with wearableExtender

00:26:43.170 --> 00:26:45.740
to really structure
those building blocks,

00:26:45.740 --> 00:26:48.320
and build the experience
out for your users.

00:26:48.320 --> 00:26:50.390
Third-- and this is also
pretty important-- is

00:26:50.390 --> 00:26:53.300
that notifications, as
you noticed, are dark now.

00:26:53.300 --> 00:26:57.000
That means that color
spannables and display

00:26:57.000 --> 00:26:59.904
intents for your notifications
are actually maybe not going

00:26:59.904 --> 00:27:01.320
to work as well
as you would like,

00:27:01.320 --> 00:27:04.240
because you need to support
dark backgrounds on 2.0,

00:27:04.240 --> 00:27:06.210
and light backgrounds on 1.x.

00:27:06.210 --> 00:27:08.650
Kind of hard to find
colors that work on both.

00:27:08.650 --> 00:27:10.760
That said, quick
call-out here, if you

00:27:10.760 --> 00:27:13.860
have a standalone app,
a Wear app at all,

00:27:13.860 --> 00:27:16.430
all you have to do to
make this work is just

00:27:16.430 --> 00:27:19.470
check the API level at
runtime, or use a resource

00:27:19.470 --> 00:27:21.920
qualifier to adjust your
colors as necessary.

00:27:21.920 --> 00:27:24.250
You can still use
them as normal.

00:27:24.250 --> 00:27:26.630
Finally, the last bit--
if you're a messaging app,

00:27:26.630 --> 00:27:28.570
make sure that you use
NotificiationCompat

00:27:28.570 --> 00:27:30.530
and MessagingStyle
to give your users

00:27:30.530 --> 00:27:32.760
an awesome Wear
experience, without having

00:27:32.760 --> 00:27:35.950
to write the Wear app.

00:27:35.950 --> 00:27:38.770
If any of this stuff interests
you, and it probably should,

00:27:38.770 --> 00:27:42.620
just go to g.co/wearpreview,
and you can get the preview SDK,

00:27:42.620 --> 00:27:45.170
device images, and more
information about the new APIs

00:27:45.170 --> 00:27:47.994
that we're going
to be launching.

00:27:47.994 --> 00:27:49.410
DAN SANDLER: All
right, fantastic.

00:27:49.410 --> 00:27:50.076
Thank you, Alex.

00:27:50.076 --> 00:27:51.510
Is everybody still awake?

00:27:51.510 --> 00:27:55.614
Do we need to stand up, shake
a leg, drink coffee, anything?

00:27:55.614 --> 00:27:57.030
We've got a few
more things that I

00:27:57.030 --> 00:27:58.696
want to cover here--
let's switch places

00:27:58.696 --> 00:28:01.290
so I can poke the computer--
a few more things we

00:28:01.290 --> 00:28:02.190
want to talk about.

00:28:02.190 --> 00:28:03.606
And then if we
have time, I'd love

00:28:03.606 --> 00:28:04.980
to open it up for questions.

00:28:04.980 --> 00:28:06.750
Let's get through it.

00:28:06.750 --> 00:28:09.310
First, I want to draw
your attention-- OK, let's

00:28:09.310 --> 00:28:11.290
make sure the keyboard works.

00:28:11.290 --> 00:28:15.290
So this guy here-- he
had a lot less hair--

00:28:15.290 --> 00:28:18.430
answered the question at Google
I/O 2012, when they first

00:28:18.430 --> 00:28:21.860
introduced rich notifications
with Jelly Bean,

00:28:21.860 --> 00:28:24.620
and at the same time,
introduced the ability for users

00:28:24.620 --> 00:28:28.120
to block notifications that
they found inappropriate,

00:28:28.120 --> 00:28:30.380
or spammy, or what have you.

00:28:30.380 --> 00:28:33.400
And somebody got up at the mic
and said, excuse me, as an app,

00:28:33.400 --> 00:28:35.990
can I find out when the user
has blocked my notifications?

00:28:35.990 --> 00:28:38.410
And this guy got up
there and said, no.

00:28:41.861 --> 00:28:44.820
[LAUGHS]

00:28:44.820 --> 00:28:48.800
So actually, this is
pretty easy to do.

00:28:48.800 --> 00:28:51.220
The initial implementation,
actually you couldn't do it.

00:28:51.220 --> 00:28:52.990
But when App Ops
came along, which

00:28:52.990 --> 00:28:55.670
you may know is the foundation
of our permissions system,

00:28:55.670 --> 00:28:57.630
we moved notification
blocking over to App Ops,

00:28:57.630 --> 00:29:00.670
because, hey, it's a
new system facility

00:29:00.670 --> 00:29:02.560
for exactly this sort of thing.

00:29:02.560 --> 00:29:04.930
And it turns out that,
because of some performance

00:29:04.930 --> 00:29:09.090
optimizations in App Ops, you
can, from any app, at runtime,

00:29:09.090 --> 00:29:12.467
do some funky introspection
and just check

00:29:12.467 --> 00:29:14.050
to see whether an
operation is allowed

00:29:14.050 --> 00:29:14.990
before even invoking it.

00:29:14.990 --> 00:29:17.406
It makes it much faster to do
certain kinds of operations.

00:29:17.406 --> 00:29:19.660
So yeah, you can find out
whether your notifications

00:29:19.660 --> 00:29:22.060
have been blocked by
reflecting in Java.

00:29:22.060 --> 00:29:24.710
So, at the time we
were really worried

00:29:24.710 --> 00:29:27.070
that if apps knew when their
notifications were being

00:29:27.070 --> 00:29:29.630
blocked, the world would end.

00:29:29.630 --> 00:29:32.569
It's 2016, four years later,
the world has not ended.

00:29:32.569 --> 00:29:33.860
So we said fine, you know what?

00:29:33.860 --> 00:29:35.530
Let's just make a
real API for this,

00:29:35.530 --> 00:29:37.010
because we think
there are actually

00:29:37.010 --> 00:29:38.150
some legitimate uses of it.

00:29:38.150 --> 00:29:39.610
So I'll get to that in a second.

00:29:39.610 --> 00:29:42.920
You can say, NotificationMana
ger.areNotificationsEnabled.

00:29:42.920 --> 00:29:45.780
Real easy-- like,
has the user blocked

00:29:45.780 --> 00:29:46.870
my notifications or not?

00:29:46.870 --> 00:29:48.620
And you don't have to
do those ugly hacks,

00:29:48.620 --> 00:29:53.930
and you don't have to go
online and look that stuff up.

00:29:53.930 --> 00:29:55.660
And the reason we
introduced this,

00:29:55.660 --> 00:29:57.990
in addition to wanting to
reduce the number of places

00:29:57.990 --> 00:29:59.490
that people had to
resort to those hacks,

00:29:59.490 --> 00:30:01.656
is that you can actually
create a better experience.

00:30:01.656 --> 00:30:03.870
Here's the situation-- a
user feels like they're not

00:30:03.870 --> 00:30:05.230
getting notifications
from your app,

00:30:05.230 --> 00:30:06.150
and they don't understand why.

00:30:06.150 --> 00:30:08.230
So they go into the app,
they go into Settings,

00:30:08.230 --> 00:30:09.680
they see all the
boxes are ticked,

00:30:09.680 --> 00:30:10.810
notifications are turned on.

00:30:10.810 --> 00:30:11.893
I don't know what's wrong.

00:30:11.893 --> 00:30:13.019
One star.

00:30:13.019 --> 00:30:15.310
So now, what you can do in
your app, in your settings--

00:30:15.310 --> 00:30:18.022
this is a mock-up, that I used
Gmail as a guinea pig here,

00:30:18.022 --> 00:30:19.980
but obviously you can do
this in your own app--

00:30:19.980 --> 00:30:22.800
if a user goes in to modify
notification settings,

00:30:22.800 --> 00:30:25.630
your app could go and say,
well, hang on a second,

00:30:25.630 --> 00:30:28.072
you blocked notifications
at the system level.

00:30:28.072 --> 00:30:30.530
There's nothing we can do until
you go in and unblock that.

00:30:30.530 --> 00:30:32.330
So you can alert users
to those conflicts,

00:30:32.330 --> 00:30:34.260
and I think that's a
great user experience.

00:30:34.260 --> 00:30:36.980
If you do use this in
some sort of abusive way,

00:30:36.980 --> 00:30:39.230
if you use this API to
create some kind of arms race

00:30:39.230 --> 00:30:41.519
with the user-- oh, you
blocked my notifications,

00:30:41.519 --> 00:30:43.560
I'm going to use a top-level
system alert window,

00:30:43.560 --> 00:30:45.185
or whatever-- I will
come and find you.

00:30:45.185 --> 00:30:46.574
So don't do it.

00:30:46.574 --> 00:30:47.975
[LAUGHTER]

00:30:48.925 --> 00:30:50.550
Let's see, other
stuff you want to know

00:30:50.550 --> 00:30:53.160
about-- if you use Builder--
and if you're not using Builder,

00:30:53.160 --> 00:30:54.868
we have to have another
dot conversation,

00:30:54.868 --> 00:30:57.140
because Set Latest Event
Info doesn't work anymore.

00:30:57.140 --> 00:30:59.265
If you're using Builder,
we've changed a little bit

00:30:59.265 --> 00:31:00.477
how the memory works.

00:31:00.477 --> 00:31:02.060
It used to, whenever
you called Build,

00:31:02.060 --> 00:31:03.750
it would construct
a new notification

00:31:03.750 --> 00:31:06.299
object that was a
snapshot of its state

00:31:06.299 --> 00:31:07.340
and hand that off to you.

00:31:07.340 --> 00:31:09.570
Now it actually retains that
object internally, and just

00:31:09.570 --> 00:31:10.500
gives you a pointer.

00:31:10.500 --> 00:31:13.187
That big reason for this is
that notifications are huge.

00:31:13.187 --> 00:31:14.770
They didn't used to
be, but now people

00:31:14.770 --> 00:31:17.410
adding wearable extenders,
and car extenders,

00:31:17.410 --> 00:31:18.920
and lots of big
bitmaps and things

00:31:18.920 --> 00:31:20.822
like that-- they're
big objects, and we

00:31:20.822 --> 00:31:23.030
didn't want you to have to
suffer that in your memory

00:31:23.030 --> 00:31:25.370
partition every time
you constructed up

00:31:25.370 --> 00:31:26.190
a new notification.

00:31:26.190 --> 00:31:28.150
So when you're
using Builder, it is

00:31:28.150 --> 00:31:31.150
holding onto that prototypical
embryonic notification,

00:31:31.150 --> 00:31:33.560
and when you call Build, you
just get a pointer to it.

00:31:33.560 --> 00:31:36.000
If you're not expecting
that kind of behavior,

00:31:36.000 --> 00:31:38.609
the way things work in N
is going to be possibly

00:31:38.609 --> 00:31:39.400
a little confusing.

00:31:39.400 --> 00:31:41.483
But this actually will
make memory better for you.

00:31:41.483 --> 00:31:44.420
It makes memory better
on the system overall.

00:31:44.420 --> 00:31:47.130
This is also important when
you are posting updates

00:31:47.130 --> 00:31:47.950
to notifications.

00:31:47.950 --> 00:31:49.610
We see a lot of
people in the field

00:31:49.610 --> 00:31:51.360
caching their
notification object,

00:31:51.360 --> 00:31:53.690
and then using either
poking directly

00:31:53.690 --> 00:31:57.765
into the slots on that POJO
or using RemoteViews methods

00:31:57.765 --> 00:31:59.890
to try to update progress
bars and things like that

00:31:59.890 --> 00:32:00.850
in the notification.

00:32:00.850 --> 00:32:02.127
You can't do that anymore.

00:32:02.127 --> 00:32:03.710
I mean, you can,
it's not really going

00:32:03.710 --> 00:32:05.900
to work because--
well, I'll get to what

00:32:05.900 --> 00:32:08.210
happens to those
RemoteViews in a second.

00:32:08.210 --> 00:32:10.220
What you want to do, if
you are posting updates

00:32:10.220 --> 00:32:12.290
to your notification and you
want to keep some memory around

00:32:12.290 --> 00:32:14.830
as long as your app is still
live, is hold onto the Builder.

00:32:14.830 --> 00:32:16.520
The Builder will hold
onto the notification.

00:32:16.520 --> 00:32:18.810
It'll will be nice and fast to
just go and talk to the Builder

00:32:18.810 --> 00:32:21.066
and make your changes
there, and call Build again.

00:32:24.484 --> 00:32:25.900
This is a good
bully pulpit for me

00:32:25.900 --> 00:32:27.130
to remind you about
features we've

00:32:27.130 --> 00:32:28.838
introduced over the
last couple of years,

00:32:28.838 --> 00:32:30.520
that you may not be using yet.

00:32:30.520 --> 00:32:32.770
Since L notifications
have been available

00:32:32.770 --> 00:32:36.412
on the lock screen on
all L Android devices,

00:32:36.412 --> 00:32:37.870
but users have
different tolerances

00:32:37.870 --> 00:32:40.680
for what kind of content is
appropriate on the lock screen.

00:32:40.680 --> 00:32:42.970
The lock screen is kind
of a public place--

00:32:42.970 --> 00:32:45.480
if they've got PIN
password fingerprint

00:32:45.480 --> 00:32:48.590
security, potentially anybody
can pick your phone up

00:32:48.590 --> 00:32:50.910
off a cab seat, and
take a look at it.

00:32:50.910 --> 00:32:54.090
So if a user has
opted into what we

00:32:54.090 --> 00:32:57.270
call "hide sensitive
content" notifications

00:32:57.270 --> 00:33:00.907
on the lock screen, your
notification is just really

00:33:00.907 --> 00:33:02.490
not going to say
anything interesting,

00:33:02.490 --> 00:33:05.180
unless you specifically say,
oh, here's a public version.

00:33:05.180 --> 00:33:07.307
Here's a version that's
safe for the phone that's

00:33:07.307 --> 00:33:09.140
found in the backseat
of a cab, or even just

00:33:09.140 --> 00:33:11.550
laying face-up on your
desk when somebody else is

00:33:11.550 --> 00:33:12.730
sitting in the same room.

00:33:12.730 --> 00:33:14.260
So go ahead and use
setPublicVersion

00:33:14.260 --> 00:33:16.290
to supply a version of
that notification that's

00:33:16.290 --> 00:33:18.270
OK for users who are
security conscious.

00:33:18.270 --> 00:33:20.830
Or if it's something like
a weather widget, or media

00:33:20.830 --> 00:33:22.750
playback, when you want it to
be available at all times-- say,

00:33:22.750 --> 00:33:23.330
you know what?

00:33:23.330 --> 00:33:25.320
I'm just going to set the
visibility of this notification

00:33:25.320 --> 00:33:27.236
to public, and then it's
appropriate anywhere,

00:33:27.236 --> 00:33:29.920
and you don't have to make
a separate version for it.

00:33:29.920 --> 00:33:31.340
Something else I
wanted to mention

00:33:31.340 --> 00:33:33.060
is the way the Do
Not Disturb works.

00:33:33.060 --> 00:33:35.880
So hopefully, you've had
a chance to play around

00:33:35.880 --> 00:33:38.980
with the Do No Disturb
that we made really, really

00:33:38.980 --> 00:33:41.410
good in Marshmallow.

00:33:41.410 --> 00:33:45.250
The way that it knows what
things are phone calls

00:33:45.250 --> 00:33:48.170
or alarms, to allow
the user to put

00:33:48.170 --> 00:33:50.400
the phone into alarms-only
mode and get those alarms,

00:33:50.400 --> 00:33:52.240
or into priority
mode and get phone

00:33:52.240 --> 00:33:54.400
calls from important people,
is with your metadata

00:33:54.400 --> 00:33:55.200
in the Builder.

00:33:55.200 --> 00:33:57.560
And the two big ones are
setCategory and addPerson.

00:33:57.560 --> 00:33:59.200
SetCategory allows
you to say, this

00:33:59.200 --> 00:34:03.400
is an alarm-- I know I'm
not the built-in alarm clock

00:34:03.400 --> 00:34:05.540
app, or the OEM's
built-in alarm clock app,

00:34:05.540 --> 00:34:08.989
but I've got this cool
app called Timely,

00:34:08.989 --> 00:34:10.489
and it's got an
alarm, and it should

00:34:10.489 --> 00:34:12.650
be treated as alarms
when the user says,

00:34:12.650 --> 00:34:13.860
go into alarms-only mode.

00:34:13.860 --> 00:34:16.570
Use setCategory to
mark it that way.

00:34:16.570 --> 00:34:19.030
Similarly, addPerson
is the way that users

00:34:19.030 --> 00:34:22.449
are allowed to opt
certain human beings in

00:34:22.449 --> 00:34:25.370
to be able to break through
their priority settings.

00:34:25.370 --> 00:34:27.750
And so you say,
addPerson-- and we

00:34:27.750 --> 00:34:30.610
accept anything that we could
use to look that person up

00:34:30.610 --> 00:34:32.300
in the system contacts database.

00:34:32.300 --> 00:34:33.716
So you can throw--
yeah, if you've

00:34:33.716 --> 00:34:38.770
got a content URI
for that person

00:34:38.770 --> 00:34:40.408
in the contacts
database, awesome.

00:34:40.408 --> 00:34:41.699
We'll just look it straight up.

00:34:41.699 --> 00:34:44.073
But you can also just supply
an email address, or a phone

00:34:44.073 --> 00:34:44.610
number.

00:34:44.610 --> 00:34:46.966
And we'll go ahead and look
that up and in contacts DB.

00:34:46.966 --> 00:34:48.590
Particularly if your
app doesn't really

00:34:48.590 --> 00:34:50.350
want to interact with the
Android contacts database,

00:34:50.350 --> 00:34:51.560
but it is
phone-number-based, you

00:34:51.560 --> 00:34:53.420
can give us the phone
number in the notification,

00:34:53.420 --> 00:34:54.190
we'll look it up.

00:34:54.190 --> 00:34:56.090
If the user has
starred that contact,

00:34:56.090 --> 00:34:58.784
that notification can bust
through priority mode.

00:34:58.784 --> 00:35:00.200
Which is a great
feature for users

00:35:00.200 --> 00:35:01.741
that want to tune
out of most things,

00:35:01.741 --> 00:35:03.480
but there are some
people that should

00:35:03.480 --> 00:35:06.638
be able to get a hold
of them at any time.

00:35:06.638 --> 00:35:09.040
I just want to remind you
that MediaStyle exists--

00:35:09.040 --> 00:35:11.690
that was the new template that
we introduced last time around.

00:35:11.690 --> 00:35:13.340
If you are building a
music player, or anything

00:35:13.340 --> 00:35:15.780
that kind is like a music
player-- such as background

00:35:15.780 --> 00:35:18.830
control of some sort
remote playback thing,

00:35:18.830 --> 00:35:20.830
or video player, what
have you-- use MediaStyle,

00:35:20.830 --> 00:35:23.163
and we'll take care of all
the details of making it look

00:35:23.163 --> 00:35:24.590
good on every platform version.

00:35:24.590 --> 00:35:27.980
And I mentioned earlier, there
was the Decorating Custom View

00:35:27.980 --> 00:35:30.520
Style-- if you feel like
you really need a custom

00:35:30.520 --> 00:35:34.572
RemoteViews, there's a decorated
MediaStyle style-- I forget

00:35:34.572 --> 00:35:37.040
what it's called-- look in
the API docs, I have to,

00:35:37.040 --> 00:35:40.360
as well-- to be able to get the
system annotation of the app

00:35:40.360 --> 00:35:43.380
name, and so forth, and the
actions along with the media.

00:35:43.380 --> 00:35:45.588
The other thing that I wanted
to mention specifically

00:35:45.588 --> 00:35:48.379
about MediaStyle is
that if you were worried

00:35:48.379 --> 00:35:50.920
about using setColor-- which is
the notification accent color

00:35:50.920 --> 00:35:53.295
feature-- if you were worried
about using that because it

00:35:53.295 --> 00:35:55.770
made your media playback
notification look garish,

00:35:55.770 --> 00:35:56.940
it doesn't do that anymore.

00:35:56.940 --> 00:35:59.390
So in N, we are only
using that color

00:35:59.390 --> 00:36:01.130
to tint some of the
playback controls.

00:36:01.130 --> 00:36:02.546
So it should be a
little bit safer

00:36:02.546 --> 00:36:04.800
to take your media
player's brand colors--

00:36:04.800 --> 00:36:07.506
whether it's some livid green,
or orange, or what have you--

00:36:07.506 --> 00:36:09.380
and set that as the
color on your MediaStyle,

00:36:09.380 --> 00:36:14.250
and it should look
really good on N.

00:36:14.250 --> 00:36:17.720
This is where we have a very,
very brief moment of silence

00:36:17.720 --> 00:36:20.760
for APIs that are no longer
with us-- specifically

00:36:20.760 --> 00:36:23.429
all of the direct access to
RemoteViews on notification.

00:36:23.429 --> 00:36:25.470
They're not going to work,
because we're not even

00:36:25.470 --> 00:36:26.060
creating them.

00:36:26.060 --> 00:36:27.870
Time was when you created
a notification even

00:36:27.870 --> 00:36:29.286
with the Builder
and called Build,

00:36:29.286 --> 00:36:31.690
we would generate a whole
RemoteViews that looked exactly

00:36:31.690 --> 00:36:34.312
like that notification is going
to appear on the other side,

00:36:34.312 --> 00:36:36.520
and then we would stuff that
thing into a parcelable,

00:36:36.520 --> 00:36:38.540
and push it all through
binder to the system server,

00:36:38.540 --> 00:36:39.730
push all the system
you want-- yeah,

00:36:39.730 --> 00:36:40.980
we just don't do that anymore.

00:36:40.980 --> 00:36:42.480
The RemoteViews is not there.

00:36:42.480 --> 00:36:44.160
If you have a custom
RemoteViews and you set it,

00:36:44.160 --> 00:36:45.243
those slots will be there.

00:36:45.243 --> 00:36:48.070
But if you use the Builder
methods, these APIs--

00:36:48.070 --> 00:36:50.650
contentView, bigContentView,
headsUpContentView

00:36:50.650 --> 00:36:51.530
are not there.

00:36:51.530 --> 00:36:52.881
So you use Builder.setContent.

00:36:52.881 --> 00:36:54.380
And actually, we
renamed that method

00:36:54.380 --> 00:36:56.810
to setCustomContentView
to make it better match

00:36:56.810 --> 00:36:59.060
the other stuff that's been
developed in the meantime.

00:37:02.312 --> 00:37:04.020
All right, so this is
for like two of you

00:37:04.020 --> 00:37:06.480
in the room who are using
NotificationListenerService--

00:37:06.480 --> 00:37:09.940
one of them is you, because
that's how Wear works-- if you

00:37:09.940 --> 00:37:11.789
have a
NotificationListenerService,

00:37:11.789 --> 00:37:13.830
one of the things that we
noticed after releasing

00:37:13.830 --> 00:37:17.350
this API, 86 years
ago, is that when

00:37:17.350 --> 00:37:19.630
we bind them from system
UI, or binding them

00:37:19.630 --> 00:37:21.130
from the Notification
Manager, we've

00:37:21.130 --> 00:37:24.120
been binding for the
lifetime of the system,

00:37:24.120 --> 00:37:27.980
because we thought of them as
an extension of the system UI.

00:37:27.980 --> 00:37:29.530
They are really expensive.

00:37:29.530 --> 00:37:30.990
So now, if you have
a listener that

00:37:30.990 --> 00:37:33.585
only needs to listen
occasionally-- like we're only

00:37:33.585 --> 00:37:34.960
listening when
you're in the car,

00:37:34.960 --> 00:37:36.560
or we're only listening
when you're on a run,

00:37:36.560 --> 00:37:38.851
or only listening when you're
using this particular app

00:37:38.851 --> 00:37:40.724
or experience-- you
can say, requestUnbind.

00:37:40.724 --> 00:37:43.140
Like, the user has approved
me as a notification listener,

00:37:43.140 --> 00:37:44.540
but I don't need to
be bound right now.

00:37:44.540 --> 00:37:46.250
I'll let you know when
it's important to bind me

00:37:46.250 --> 00:37:47.999
again, and start sending
me notifications.

00:37:47.999 --> 00:37:50.970
So this can really improve
performance of the device,

00:37:50.970 --> 00:37:54.620
it can improve memory pressure.

00:37:54.620 --> 00:37:56.020
I think that's all the sundries.

00:37:56.020 --> 00:37:57.780
There's lots and lots
of resources online.

00:37:57.780 --> 00:37:59.580
Obviously DP3 is out--
you should go get

00:37:59.580 --> 00:38:02.490
that APK, go get that package.

00:38:02.490 --> 00:38:04.540
We also have sample
code, we've updated

00:38:04.540 --> 00:38:06.160
them to show off
groups and summaries,

00:38:06.160 --> 00:38:08.880
our standard active
notification sample, and GitHub.

00:38:08.880 --> 00:38:11.140
And then the Messaging
Service update

00:38:11.140 --> 00:38:15.330
demos RemoteInput-- I don't know
if it demos MessagingStyle yet,

00:38:15.330 --> 00:38:19.800
I think that's still
damp with how new it is.

00:38:19.800 --> 00:38:22.559
So it's not in Messaging
Service yet, but it will be.

00:38:22.559 --> 00:38:24.350
ALEX HILLS: The Wear
docs do call that out.

00:38:24.350 --> 00:38:25.325
DAN SANDLER: The
Wear docs mission?

00:38:25.325 --> 00:38:25.825
OK.

00:38:25.825 --> 00:38:27.930
So, as developers, what do?

00:38:27.930 --> 00:38:30.621
Test your existing
notifications on N, definitely.

00:38:30.621 --> 00:38:31.995
If you have lots
of notifications

00:38:31.995 --> 00:38:33.880
that you're already posting,
and you're not grouping them,

00:38:33.880 --> 00:38:35.120
please, please group them.

00:38:35.120 --> 00:38:37.050
Nobody likes to turn on
a phone in the morning

00:38:37.050 --> 00:38:39.900
and get 36 notifications
of all the stuff that

00:38:39.900 --> 00:38:41.256
happened while you were asleep.

00:38:41.256 --> 00:38:43.190
Add direct reply where
it's appropriate, where

00:38:43.190 --> 00:38:44.730
you can accept reply text.

00:38:44.730 --> 00:38:46.730
And then if you're using
custom notifications,

00:38:46.730 --> 00:38:48.604
do you look at that
DecoratedCustomViewStyle,

00:38:48.604 --> 00:38:50.840
so users will get the benefit
of the app attribution,

00:38:50.840 --> 00:38:53.820
and the expand affordance.

00:38:53.820 --> 00:38:55.750
And now, there's Wear stuff.

00:38:55.750 --> 00:38:58.208
ALEX HILLS: Back to Wear just
a little bit-- we're actually

00:38:58.208 --> 00:38:59.580
holding a lot of sessions.

00:38:59.580 --> 00:39:01.580
So this is a list, if you
want to come see more,

00:39:01.580 --> 00:39:03.980
starting with the big one--
What's New in Android Wear

00:39:03.980 --> 00:39:06.190
2.0-- and then a
couple of the others

00:39:06.190 --> 00:39:08.900
that I actually mentioned
during my portion of the talk.

00:39:08.900 --> 00:39:11.020
Also, as you know, if
you've missed anything,

00:39:11.020 --> 00:39:13.390
all of these talks are going
to be available on YouTube.

00:39:13.390 --> 00:39:15.056
DAN SANDLER: Kind of
shockingly quickly.

00:39:15.056 --> 00:39:19.000
ALEX HILLS: Yeah, and finally,
the Android Wear sandbox,

00:39:19.000 --> 00:39:20.760
you can go to it
for more questions

00:39:20.760 --> 00:39:24.250
and live demos-- it is the
green square on this map.

00:39:24.250 --> 00:39:27.500
It also is just through this
wall, and a little bit further.

00:39:27.500 --> 00:39:31.119
Though, probably go around
instead of actually through.

00:39:31.119 --> 00:39:33.160
DAN SANDLER: So we have
time maybe for one or two

00:39:33.160 --> 00:39:35.100
live questions, if you want
to get up on the mic and ask.

00:39:35.100 --> 00:39:36.840
Otherwise, we're
going to be outside.

00:39:36.840 --> 00:39:39.410
And also, we've enabled
the new Google Spaces

00:39:39.410 --> 00:39:41.256
app for this talk--
many of the talks today

00:39:41.256 --> 00:39:42.630
have Spaces
associated with them,

00:39:42.630 --> 00:39:45.090
or you can go and communicate
with the people in this room,

00:39:45.090 --> 00:39:47.480
and everybody else
that came to IO

00:39:47.480 --> 00:39:49.914
to talk about this
topic, post your examples

00:39:49.914 --> 00:39:51.580
of your favorite
notifications and least

00:39:51.580 --> 00:39:52.370
favorite notifications.

00:39:52.370 --> 00:39:53.790
But we've got a couple
minutes, let's go ahead

00:39:53.790 --> 00:39:55.373
and take some questions
from the room.

00:39:55.373 --> 00:39:57.200
Yes, go ahead.

00:39:57.200 --> 00:39:59.380
AUDIENCE: On the Wear
notifications, the new style,

00:39:59.380 --> 00:40:01.310
you said you can
set the background

00:40:01.310 --> 00:40:03.170
color of those cards?

00:40:03.170 --> 00:40:05.040
ALEX HILLS: Correct,
using the setColor API,

00:40:05.040 --> 00:40:06.970
which is actually what
Dan talked about--

00:40:06.970 --> 00:40:08.947
with regards to
MediaStyle specifically--

00:40:08.947 --> 00:40:10.530
calling setColor for
your notification

00:40:10.530 --> 00:40:12.650
will tint things on
big Android, and will

00:40:12.650 --> 00:40:15.920
also on the littlest
of Androids,

00:40:15.920 --> 00:40:18.230
set the background color
for all of those cards.

00:40:18.230 --> 00:40:21.420
AUDIENCE: Does it set it
directly, or just tint it?

00:40:21.420 --> 00:40:23.560
ALEX HILLS: We use a
darkened version of it.

00:40:23.560 --> 00:40:24.560
AUDIENCE: Great, thanks.

00:40:27.428 --> 00:40:30.150
AUDIENCE: For the
list groups, is there

00:40:30.150 --> 00:40:31.822
a limit for how big
that group could be?

00:40:31.822 --> 00:40:33.530
DAN SANDLER: So there's
a practical limit

00:40:33.530 --> 00:40:36.979
that no package can post
more than 50 notifications.

00:40:36.979 --> 00:40:39.020
You shouldn't really be
posting that many at all,

00:40:39.020 --> 00:40:41.400
but you can imagine a situation
where you've got five accounts,

00:40:41.400 --> 00:40:43.025
and you want to have
10 messages-- that

00:40:43.025 --> 00:40:44.030
seems reasonable.

00:40:44.030 --> 00:40:47.002
I don't remember if we actually
ended up creating a limit,

00:40:47.002 --> 00:40:48.460
but you'll notice
that you'll start

00:40:48.460 --> 00:40:51.506
to see system performance
suffer if you're posting all 50

00:40:51.506 --> 00:40:52.880
into that group
at the same time.

00:40:52.880 --> 00:40:54.397
Not least, because
it's not useful--

00:40:54.397 --> 00:40:56.730
the user is not going to want
to triage that much stuff.

00:40:56.730 --> 00:40:58.250
Our recommendation
is on the order

00:40:58.250 --> 00:41:02.010
of five, maybe as many as 10.

00:41:02.010 --> 00:41:03.740
Only your observation
of user behavior

00:41:03.740 --> 00:41:06.894
will tell you what is actually
going to be useful to people.

00:41:06.894 --> 00:41:07.602
AUDIENCE: Thanks.

00:41:07.602 --> 00:41:08.870
DAN SANDLER: Thanks.

00:41:08.870 --> 00:41:10.670
AUDIENCE: I have
a music streaming

00:41:10.670 --> 00:41:12.560
app that supports Chromecast.

00:41:12.560 --> 00:41:16.560
And we actually had to drop
the MediaStyle notification

00:41:16.560 --> 00:41:22.050
to match the requirements of the
Chromecast user best practices.

00:41:22.050 --> 00:41:26.345
Is there any plans
to add a Chromecast

00:41:26.345 --> 00:41:29.160
icon, or a disconnect
button to that media stuff?

00:41:29.160 --> 00:41:31.270
DAN SANDLER: So I don't
know what the underlap is

00:41:31.270 --> 00:41:34.200
between those two APIs.

00:41:34.200 --> 00:41:35.864
So we should talk
after, and that

00:41:35.864 --> 00:41:37.280
sounds like the
kind of thing that

00:41:37.280 --> 00:41:40.000
would be good-- there's a bug
tracker specifically dedicated

00:41:40.000 --> 00:41:41.610
to Android N previews.

00:41:41.610 --> 00:41:43.610
That's a good place to
raise that kind of issue,

00:41:43.610 --> 00:41:45.950
because we are triaging those
bugs pretty aggressively,

00:41:45.950 --> 00:41:47.385
and taking action on them.

00:41:47.385 --> 00:41:48.260
AUDIENCE: OK, thanks.

00:41:48.260 --> 00:41:51.010
DAN SANDLER: Thank you.

00:41:51.010 --> 00:41:53.450
AUDIENCE: When does
the app get to know

00:41:53.450 --> 00:41:54.914
notifications are disabled?

00:41:54.914 --> 00:41:57.137
Is there any listener,
or only when it resumes?

00:41:57.137 --> 00:41:58.720
DAN SANDLER: No,
there's no broadcast.

00:41:58.720 --> 00:42:02.490
So you can't find
out-- what we really

00:42:02.490 --> 00:42:05.420
don't want you to do is to try
to min/max the user's behavior,

00:42:05.420 --> 00:42:11.100
and try to respond in real
time to when the user becomes

00:42:11.100 --> 00:42:12.930
so enraged that they
block notifications.

00:42:12.930 --> 00:42:16.099
It's expressly created so
that you can do things like I

00:42:16.099 --> 00:42:17.140
showed in the screenshot.

00:42:17.140 --> 00:42:19.060
When the user has problems,
you can say, well,

00:42:19.060 --> 00:42:20.100
here's one of the
reasons that you

00:42:20.100 --> 00:42:21.552
might be having those problems.

00:42:21.552 --> 00:42:22.510
So there's no listener.

00:42:22.510 --> 00:42:24.093
AUDIENCE: But the
app will detect when

00:42:24.093 --> 00:42:25.820
it is in the foreground, right?

00:42:25.820 --> 00:42:30.490
DAN SANDLER: Yeah, I mean, you
can check at any time, yeah.

00:42:30.490 --> 00:42:32.750
AUDIENCE: What [INAUDIBLE]
Wear in the market?

00:42:32.750 --> 00:42:36.320
Are all Android Wear
accounts upgradeable 2.0?

00:42:36.320 --> 00:42:38.546
If yes, when?

00:42:38.546 --> 00:42:40.670
DAN SANDLER: It's a Wear
2.0 availability question.

00:42:40.670 --> 00:42:42.086
ALEX HILLS: All
right, so Wear 2.0

00:42:42.086 --> 00:42:45.090
is going to be available
later this fall.

00:42:45.090 --> 00:42:47.680
To be fair, also, the developer
preview is available right now

00:42:47.680 --> 00:42:51.114
on the site that I linked--
g.code/wearpreview.

00:42:51.114 --> 00:42:52.530
AUDIENCE: OK, thank
you very much.

00:42:52.530 --> 00:42:53.300
DAN SANDLER: Thank you.

00:42:53.300 --> 00:42:54.561
All right, I think that's it.

00:42:54.561 --> 00:42:55.310
Thank you so much.

00:42:55.310 --> 00:42:58.320
We'll see you on Spaces, and
thank you for showing up.

00:42:58.320 --> 00:43:00.770
[MUSIC PLAYING]

