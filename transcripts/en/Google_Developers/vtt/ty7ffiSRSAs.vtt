WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.449
[TEST PATTERN SIGNAL]

00:00:01.449 --> 00:00:03.864
[THEME MUSIC]

00:00:06.885 --> 00:00:08.260
ANDREW BROGDON:
We mentioned this

00:00:08.260 --> 00:00:09.551
in one of our earlier episodes.

00:00:09.551 --> 00:00:12.520
We have Flutter
samples, and I just

00:00:12.520 --> 00:00:14.800
wanted to make
sure everybody knew

00:00:14.800 --> 00:00:16.630
that we have an
index for it that

00:00:16.630 --> 00:00:18.580
is a curated list of samples.

00:00:18.580 --> 00:00:21.210
So we're working on a
ton of samples right now.

00:00:21.210 --> 00:00:23.710
I think I have two or three
in the pipeline myself,

00:00:23.710 --> 00:00:26.377
and other people are always
making more on the team.

00:00:26.377 --> 00:00:28.960
But there's also the community--
the Flutter community is also

00:00:28.960 --> 00:00:32.524
cranking out samples,
which is great.

00:00:32.524 --> 00:00:34.690
And so I wanted to have an
index in our samples repo

00:00:34.690 --> 00:00:38.230
that had not just the stuff that
the Flutter developer relations

00:00:38.230 --> 00:00:40.360
team was working on,
but also just good stuff

00:00:40.360 --> 00:00:42.760
that the community has made
that people should also

00:00:42.760 --> 00:00:45.230
be looking at.

00:00:45.230 --> 00:00:46.860
And so we put
together this index.

00:00:46.860 --> 00:00:48.480
It's in our samples repo--

00:00:48.480 --> 00:00:51.010
you know,
GitHub.com/Fluttersamples,

00:00:51.010 --> 00:00:54.080
and then look for the index.

00:00:54.080 --> 00:00:56.600
And you can see a bunch
of things in here.

00:00:56.600 --> 00:00:59.170
There's Flutter
examples from Nashad,

00:00:59.170 --> 00:01:01.660
there's another
Flutter examples--

00:01:01.660 --> 00:01:05.319
it's a collection of things
from one of our GDEs.

00:01:05.319 --> 00:01:08.800
And we have just a
ton of stuff in here--

00:01:08.800 --> 00:01:10.370
Brian Egan's
architectural samples

00:01:10.370 --> 00:01:12.250
that I've pointed a
zillion people to.

00:01:12.250 --> 00:01:15.401
So if you're looking for
more sample code-- you know,

00:01:15.401 --> 00:01:16.900
you're watching
something like this,

00:01:16.900 --> 00:01:18.850
you're probably interested
in Flutter code--

00:01:18.850 --> 00:01:20.680
and you're looking
for more code that's

00:01:20.680 --> 00:01:22.420
made by people who really
know what they're doing,

00:01:22.420 --> 00:01:24.920
check out this index, because
you'll see a lot of stuff made

00:01:24.920 --> 00:01:27.620
by a lot of good people.

00:01:27.620 --> 00:01:28.170
OK.

00:01:28.170 --> 00:01:28.560
EMILY FORTUNA: OK.

00:01:28.560 --> 00:01:29.050
ANDREW BROGDON: We'll switch.

00:01:29.050 --> 00:01:29.883
EMILY FORTUNA: Yeah.

00:01:29.883 --> 00:01:32.760
You'll take a look at the
questions, answer them,

00:01:32.760 --> 00:01:35.274
and I will continue to
investigate this bug.

00:01:35.274 --> 00:01:36.690
ANDREW BROGDON:
Yeah, there we go.

00:01:36.690 --> 00:01:36.900
OK.

00:01:36.900 --> 00:01:37.858
I'm going to take Dash.

00:01:37.858 --> 00:01:39.285
There we go.

00:01:39.285 --> 00:01:43.340
EMILY FORTUNA: Dash can assist
with question answering.

00:01:43.340 --> 00:01:48.845
ANDREW BROGDON: And this brings
up an important question.

00:01:48.845 --> 00:01:51.039
Where are-- over there,
right in front of me.

00:01:51.039 --> 00:01:52.830
So this open window is
where the question--

00:01:52.830 --> 00:01:53.477
OK.

00:01:53.477 --> 00:01:55.060
EMILY FORTUNA: Set
you up for success.

00:01:55.060 --> 00:01:56.184
ANDREW BROGDON: Smart lady.

00:01:56.184 --> 00:01:58.190
All right.

00:01:58.190 --> 00:02:01.487
So we had a few come in.

00:02:01.487 --> 00:02:03.320
We talked about the
comment that was helping

00:02:03.320 --> 00:02:05.780
me find the censors page and
the Emulator settings-- thanks

00:02:05.780 --> 00:02:07.800
again for that.

00:02:07.800 --> 00:02:08.300
Let's see.

00:02:11.709 --> 00:02:13.910
We had somebody ask
about whether it's

00:02:13.910 --> 00:02:17.840
possible to use the BLoC
pattern with Angular Dart.

00:02:17.840 --> 00:02:21.020
And yes, it is.

00:02:21.020 --> 00:02:23.210
One of the things
people like about BLoC,

00:02:23.210 --> 00:02:25.376
and one of the things it
was designed for, actually,

00:02:25.376 --> 00:02:29.690
was code reuse between
Dart for Web and Flutter.

00:02:29.690 --> 00:02:33.160
So BLoC generally will be just
business logic components--

00:02:33.160 --> 00:02:35.930
it's taking an input on a
stream and it's outputting

00:02:35.930 --> 00:02:37.700
its output on another stream.

00:02:37.700 --> 00:02:40.940
There's not widgets involved,
generally, in a BLoC--

00:02:40.940 --> 00:02:42.980
it's just pure Dart code.

00:02:42.980 --> 00:02:45.380
And so one of the
benefits of that

00:02:45.380 --> 00:02:47.610
is that it can run
on both platforms.

00:02:47.610 --> 00:02:49.131
It can run both
on mobile and web,

00:02:49.131 --> 00:02:50.880
and that's part of
what it's designed for.

00:02:50.880 --> 00:02:55.160
So to answer your question, yes.

00:02:55.160 --> 00:02:56.570
All right.

00:02:56.570 --> 00:02:59.870
We had another question
come in from someone

00:02:59.870 --> 00:03:02.210
whose YouTube account
has "locationservices"

00:03:02.210 --> 00:03:02.840
as their name.

00:03:02.840 --> 00:03:06.170
It's "locationservices."

00:03:06.170 --> 00:03:10.130
Well, Mr. or Miss
Services, thank you

00:03:10.130 --> 00:03:12.170
for commenting,
asking about importing

00:03:12.170 --> 00:03:16.690
a file as a file versus
importing a file as a package.

00:03:16.690 --> 00:03:20.600
So if you-- do you mind
flipping real quick just

00:03:20.600 --> 00:03:23.390
to any file in Android Studio or
something just so we can look?

00:03:23.390 --> 00:03:27.060
So all the way at the
top-- oh, sorry, Dart file.

00:03:27.060 --> 00:03:28.140
Here we go.

00:03:28.140 --> 00:03:30.980
So at the top here, we
have "import package

00:03:30.980 --> 00:03:35.660
Flutter/services.dart," which
is being imported as a package--

00:03:35.660 --> 00:03:39.020
that's how it's
being recognized.

00:03:39.020 --> 00:03:41.946
You can import things
like in that same way,

00:03:41.946 --> 00:03:43.445
even if they're in
your own project.

00:03:43.445 --> 00:03:46.070
So if you're working on an
app and you have two files,

00:03:46.070 --> 00:03:48.278
you know, one that's called
main.dart and another one

00:03:48.278 --> 00:03:53.450
called widgets.dart, you can
import that one as a project,

00:03:53.450 --> 00:03:56.000
even though it's a local file
just sitting in your project,

00:03:56.000 --> 00:03:57.541
or you can import
it as a local file.

00:03:57.541 --> 00:03:59.990
There's two ways to do it.

00:03:59.990 --> 00:04:02.987
It doesn't really matter
which way you do it--

00:04:02.987 --> 00:04:05.570
the only important thing is that
you pick one and stick to it.

00:04:08.320 --> 00:04:12.080
And the reason is if you
import a file as package,

00:04:12.080 --> 00:04:15.290
you know, colon, your app name,
slash, and then the file in one

00:04:15.290 --> 00:04:17.345
place, and then
import it as import--

00:04:17.345 --> 00:04:18.470
EMILY FORTUNA: Direct path.

00:04:18.470 --> 00:04:21.529
ANDREW BROGDON: --just
direct path in another, Dart

00:04:21.529 --> 00:04:25.550
actually considers those
two separate name spaces.

00:04:25.550 --> 00:04:28.970
And so it will create two
sets of class definitions

00:04:28.970 --> 00:04:31.760
and everything else,
even though all the code

00:04:31.760 --> 00:04:33.590
is in the same file.

00:04:33.590 --> 00:04:35.914
It has to do with the way
it handles the imports.

00:04:35.914 --> 00:04:38.330
That's something they're looking
at maybe changing further

00:04:38.330 --> 00:04:38.940
down the line.

00:04:38.940 --> 00:04:40.800
But for right now,
that is the case.

00:04:40.800 --> 00:04:42.960
It considers them two
separate name spaces.

00:04:42.960 --> 00:04:46.582
So if you have an object
that you allocated

00:04:46.582 --> 00:04:48.290
in one of those files
and you're using it

00:04:48.290 --> 00:04:51.950
in some code that was
using the import that

00:04:51.950 --> 00:04:54.860
was done in a different way,
you can get a type conflict,

00:04:54.860 --> 00:04:56.180
and it'll look really weird.

00:04:56.180 --> 00:04:59.297
It'll be like, "type
customer record

00:04:59.297 --> 00:05:00.880
is not equal to type
customer record,"

00:05:00.880 --> 00:05:03.167
and you're like, what
are you talking about?

00:05:03.167 --> 00:05:04.250
You know, this came from--

00:05:04.250 --> 00:05:06.400
I only have one customer
record class declaration

00:05:06.400 --> 00:05:07.542
in my whole project.

00:05:07.542 --> 00:05:09.500
But because it's imported
in two separate ways,

00:05:09.500 --> 00:05:11.130
it counts as two.

00:05:11.130 --> 00:05:14.540
Personally, I just do the
package way for everything.

00:05:14.540 --> 00:05:15.560
Everybody, you know--

00:05:15.560 --> 00:05:18.230
EMILY FORTUNA: And I actually
like to do the direct pathway.

00:05:18.230 --> 00:05:20.010
ANDREW BROGDON: You
do the exact opposite.

00:05:20.010 --> 00:05:21.510
EMILY FORTUNA: But
the reason I like

00:05:21.510 --> 00:05:24.560
that is it helps for me to
distinguish between the files

00:05:24.560 --> 00:05:28.520
that I'm writing and other
packages that I import.

00:05:28.520 --> 00:05:30.795
But it comes down to personal
preference, I suppose.

00:05:30.795 --> 00:05:31.670
ANDREW BROGDON: Yeah.

00:05:31.670 --> 00:05:33.710
Like I said, it's
really pick one way--

00:05:33.710 --> 00:05:34.280
EMILY FORTUNA:
But be consistent.

00:05:34.280 --> 00:05:34.550
ANDREW BROGDON: Yeah.

00:05:34.550 --> 00:05:35.758
Pick one away and go with it.

00:05:35.758 --> 00:05:38.250
It's like when you're chopping
up vegetables to roast them,

00:05:38.250 --> 00:05:38.750
you know?

00:05:38.750 --> 00:05:40.250
You just pick a
size and go with it.

00:05:40.250 --> 00:05:42.910
So.

00:05:42.910 --> 00:05:45.660
[THEME MUSIC]

