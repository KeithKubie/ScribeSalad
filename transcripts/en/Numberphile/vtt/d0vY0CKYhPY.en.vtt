WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:00.880
HOLLY KRIEGER: So what I want to talk about

00:00:01.000 --> 00:00:02.240
is what is maybe

00:00:02.280 --> 00:00:04.520
the least efficient way possible

00:00:04.520 --> 00:00:06.040
to approximate the number pi.

00:00:06.040 --> 00:00:08.520
BRADY HARAN: Well, that's not a good sell!

00:00:08.520 --> 00:00:09.240
HOLLY KRIEGER: It's not a good sell

00:00:09.240 --> 00:00:10.520
but it's really interesting.

00:00:10.520 --> 00:00:14.280
So I wanna talk about approximating pi in the Mandelbrot set

00:00:14.280 --> 00:00:16.800
Maybe it's best to do a bit of a reminder about

00:00:16.800 --> 00:00:17.960
what the Mandelbrot set is.

00:00:17.960 --> 00:00:20.200
So, remember, the Mandelbrot set

00:00:20.200 --> 00:00:21.440
was this object that we have in the

00:00:21.440 --> 00:00:22.440
complex plane.

00:00:22.440 --> 00:00:23.960
So, here are the real numbers.

00:00:25.280 --> 00:00:27.600
And here are the imaginary numbers.

00:00:27.600 --> 00:00:30.660
And the Mandelbrot set  was a collection of

00:00:30.660 --> 00:00:33.040
complex numbers, so I'll try and sort of

00:00:33.040 --> 00:00:34.480
draw a nice version of this here.

00:00:34.480 --> 00:00:36.640
And-- it's complicated, right?

00:00:37.560 --> 00:00:39.480
And it was this collection of

00:00:39.480 --> 00:00:41.880
complex numbers that had the property

00:00:42.360 --> 00:00:44.520
that when we look at the function

00:00:44.520 --> 00:00:46.360
z squared plus c and we apply

00:00:46.880 --> 00:00:49.840
it to zero, so zero plugged into this function

00:00:50.320 --> 00:00:52.240
is c, and then we do that again

00:00:52.240 --> 00:00:52.960
with the output.

00:00:52.960 --> 00:00:56.080
So c plugged into this function is c squared plus c .

00:00:56.320 --> 00:00:56.960
And so on.

00:00:57.160 --> 00:00:59.960
A number c is in the Mandelbrot set exactly

00:00:59.960 --> 00:01:02.880
when when we do this process and repeat and repeat and repeat

00:01:02.880 --> 00:01:05.640
The number stays smaller than or equal to two.

00:01:05.640 --> 00:01:07.360
But today I'm not too worried about complex numbers.

00:01:07.360 --> 00:01:09.000
I just want to talk about real numbers in the Mandelbrot set.

00:01:09.000 --> 00:01:12.760
BRADY HARAN: Does that mean we're just talking about things along the line?

00:01:12.760 --> 00:01:14.160
HOLLY KRIEGER: Exactly, exactly.

00:01:14.160 --> 00:01:16.160
And in fact I'm just gonna be interested in what happens

00:01:16.500 --> 00:01:17.660
On this portion of the real line here.

00:01:17.660 --> 00:01:19.760
So, one thing that I should say first

00:01:19.760 --> 00:01:22.840
is that this point, this point is called the cusp

00:01:22.840 --> 00:01:24.280
of the Mandelbrot set.

00:01:24.280 --> 00:01:26.400
And this point is exactly the value where

00:01:26.520 --> 00:01:28.280
c is one quarter.

00:01:28.280 --> 00:01:33.040
BRADY HARAN: That's the last point on the real line-- in that direction.

00:01:33.040 --> 00:01:36.160
That's in the Mandelbrot set. And pi is here somewhere presumably.

00:01:37.680 --> 00:01:39.920
So pi is not in the Mandelbrot set.

00:01:39.920 --> 00:01:41.320
HOLLY KRIEGER: Pi is not in the Mandelbrot set.

00:01:41.320 --> 00:01:42.680
That's absolutely right.

00:01:42.680 --> 00:01:45.800
And when I say that I'm going to approximate pi in the Mandelbrot set

00:01:45.800 --> 00:01:49.680
I don't mean I am just gonna approximate pi on this picture here

00:01:49.680 --> 00:01:52.320
I mean that I'm gonna cook up a bunch of numbers that have to do

00:01:52.320 --> 00:01:52.820
with the Mandelbrot set

00:01:52.820 --> 00:01:54.240
that approximate pi.

00:01:54.240 --> 00:01:57.400
BRADY HARAN: So you're going to use the Mandelbrot set as a tool.

00:01:57.400 --> 00:01:58.880
HOLLY KRIEGER: As a tool to approximate pi, exactly.

00:01:59.480 --> 00:02:03.300
And, of course, you know, looking at this you can say "well, it looks

00:02:03.380 --> 00:02:04.540
like there's a circle in there".

00:02:04.540 --> 00:02:06.640
Which, indeed, this is a circle.

00:02:06.640 --> 00:02:07.440
Inside of the Mandelbrot set.

00:02:07.440 --> 00:02:09.240
But I'm not gonna use that one,

00:02:09.240 --> 00:02:11.440
that's a little too straightforward of a way to get pi.

00:02:11.800 --> 00:02:13.160
So, here's the idea.

00:02:13.160 --> 00:02:14.800
What happens if we take a real number

00:02:14.800 --> 00:02:16.680
That's larger than one fourth.

00:02:16.680 --> 00:02:19.160
So, as you said, it's not in the Mandelbrot set.

00:02:19.320 --> 00:02:20.120
Right?

00:02:20.120 --> 00:02:22.720
And what that means-- let's call this number...

00:02:22.720 --> 00:02:23.560
Say... uh....

00:02:23.560 --> 00:02:26.880
Well, I've already used c, but let's call it c anyways

00:02:27.040 --> 00:02:30.960
Whatever this number c is, when we start doing this process

00:02:31.440 --> 00:02:35.200
for this number c, we look at the function z squared plus c

00:02:35.200 --> 00:02:37.320
and we plug in zero and we output c.

00:02:37.320 --> 00:02:38.600
Then we plug in the output

00:02:38.600 --> 00:02:40.360
and we get c squared plus c, then we plug

00:02:40.480 --> 00:02:42.080
in that output and so on.

00:02:42.400 --> 00:02:46.240
At some point, these numbers are gonna be larger than two.

00:02:46.240 --> 00:02:48.440
Right, because that was our restriction

00:02:48.440 --> 00:02:50.920
that you're not in the Mandelbrot set if these numbers

00:02:50.920 --> 00:02:51.840
are eventually larger than two.

00:02:52.580 --> 00:02:53.080
Okay?

00:02:53.080 --> 00:02:54.960
So what we're gonna do is to each

00:02:55.220 --> 00:02:57.200
number c

00:02:57.200 --> 00:03:01.360
we're gonna associate this number, say, N of c.

00:03:02.240 --> 00:03:04.240
And this is equal to the number

00:03:04.240 --> 00:03:08.080
of steps of iterating zero under z squared plus c

00:03:08.160 --> 00:03:11.120
--So exactly the process I was describing before--

00:03:11.280 --> 00:03:13.920
Until we get something larger than two.

00:03:14.600 --> 00:03:17.240
BRADY HARAN: Any number after the cusp?

00:03:17.240 --> 00:03:18.160
HOLLY KRIEGER: Yes.

00:03:18.160 --> 00:03:20.120
BRADY HARAN: Is a killer? It's gonna kill the Mandelbrot set?

00:03:20.120 --> 00:03:22.000
HOLLY KRIEGER: That's right, it eventually gets big.

00:03:22.000 --> 00:03:24.640
BRADY HARAN: The thing you're interested in now

00:03:24.640 --> 00:03:26.720
is how quickly that number will kill us?

00:03:26.720 --> 00:03:28.680
HOLLY KRIEGER: Exactly. And this is something

00:03:28.680 --> 00:03:30.280
that's totally natural to be interested in

00:03:30.280 --> 00:03:32.520
This is how people draw pictures of the Mandelbrot set

00:03:32.520 --> 00:03:35.640
for example, is exactly counting these kinds of steps.

00:03:35.640 --> 00:03:38.120
So if we start with the real number c that's larger than two

00:03:38.120 --> 00:03:39.560
then after the first step

00:03:40.000 --> 00:03:43.840
of iteration here we get c itself which is larger than two.

00:03:43.840 --> 00:03:45.320
And so we know that after just one step

00:03:45.320 --> 00:03:48.000
that that parameter cannot possibly be in the Mandelbrot set.

00:03:48.240 --> 00:03:50.400
So in that case, N of c is just equal to one.

00:03:50.440 --> 00:03:52.920
And we have this very small value of N.

00:03:52.920 --> 00:03:55.360
BRADY HARAN: And that applies to all numbers above two.

00:03:55.360 --> 00:03:56.240
HOLLY KRIEGER: That's right, but as you might

00:03:56.280 --> 00:03:59.640
imagine,  the closer you get into the cusp, the more

00:03:59.640 --> 00:04:02.400
steps it takes to get larger than two, right?

00:04:02.400 --> 00:04:05.280
We're starting with the smaller number here and so it takes

00:04:05.280 --> 00:04:05.920
more steps to get there.

00:04:06.120 --> 00:04:09.480
All right. So let's make this a little bit precise.

00:04:09.480 --> 00:04:11.960
We start with a number really close to one fourth, say...

00:04:12.400 --> 00:04:14.960
Say, c equals one fourth plus epsilon.

00:04:15.840 --> 00:04:19.520
Where this is some very small positive and real number.

00:04:19.520 --> 00:04:21.120
BRADY HARAN: So we're just after the cusp.

00:04:21.120 --> 00:04:22.800
HOLLY KRIEGER: That's right, you're just to the right of the cusp.

00:04:22.800 --> 00:04:24.880
On the real axis there. And then we

00:04:24.880 --> 00:04:27.640
count the number of steps it takes us to escape

00:04:27.640 --> 00:04:31.400
This is something you can do in, say, you know, Wolfram|Alpha or Sage or whatever.

00:04:31.400 --> 00:04:34.280
Can be the program you wanna use. So if you draw

00:04:35.040 --> 00:04:38.320
a table of how this number N of c depends as epsilon

00:04:38.640 --> 00:04:40.720
is coming in and getting smaller and smaller,

00:04:40.720 --> 00:04:42.600
we're coming in towards the cusp with c

00:04:42.600 --> 00:04:46.160
you can actually count, just by iterating, how long does it take to have

00:04:46.160 --> 00:04:47.800
a number that's larger than two.

00:04:47.800 --> 00:04:54.480
So for example, if epsilon is one, then c is one plus one fourth, which is one point two five.

00:04:54.560 --> 00:04:56.000
Then N of c is just two.

00:04:56.000 --> 00:04:57.880
It only takes two steps to get larger than two.

00:04:57.880 --> 00:04:59.720
BRADY HARAN: Well that was, uh, that was over quickly.

00:04:59.720 --> 00:05:02.240
HOLLY KRIEGER: That's right. On the other hand if we

00:05:02.240 --> 00:05:05.360
take some much more reasonable value of epsilon, say like

00:05:05.840 --> 00:05:09.280
One one-hundredth, and so c is point two six, say...

00:05:09.280 --> 00:05:11.360
Then the number of steps it takes to escape turns out to be

00:05:11.400 --> 00:05:12.680
Thirty, actually.

00:05:16.660 --> 00:05:18.740
And if we take epsilon to be, say

00:05:19.320 --> 00:05:29.800
Even smaller, and so c is even closer to one quarter, then the value we get in that case is three fifteen.

00:05:29.800 --> 00:05:31.040
BRADY HARAN: Oh, wow, that's a lot of steps.

00:05:31.040 --> 00:05:32.280
HOLLY KRIEGER: It's a lot of steps, right, but we're really

00:05:32.280 --> 00:05:35.520
close to the cusp here, it should take a lot of steps to escape.

00:05:35.520 --> 00:05:40.000
And if we take epsilon even smaller, so that c is even closer to the cusp

00:05:40.480 --> 00:05:42.480
We get something even better.

00:05:43.760 --> 00:05:45.520
Even larger value of N of c.

00:05:45.520 --> 00:05:46.920
BRADY HARAN: Ooooh...

00:05:46.920 --> 00:05:49.180
HOLLY KRIEGER: But you can see something suspicious happening here, right?

00:05:49.680 --> 00:05:51.360
BRADY HARAN: I can see it. We can all see it.

00:05:51.360 --> 00:05:52.560
HOLLY KRIEGER: Everyone can see it.

00:05:52.840 --> 00:05:56.680
So, what's happening here is as long as you put the decimal

00:05:56.680 --> 00:05:59.960
point in the right place

00:06:01.340 --> 00:06:05.760
And as you can see, I've changed my epsilon sort of regularly here, so the decimal

00:06:05.760 --> 00:06:07.400
point kind of moves regularly, too.

00:06:07.400 --> 00:06:08.940
As long as you put the decimal point

00:06:09.140 --> 00:06:11.600
in the right place, these values N of c

00:06:12.520 --> 00:06:14.600
are actually converging to pi.

00:06:14.600 --> 00:06:15.600
BRADY HARAN: That's cool!

00:06:15.600 --> 00:06:18.120
HOLLY KRIEGER: Yeah, yeah! So you get these approximations of pi

00:06:18.120 --> 00:06:20.360
right, okay, three point one five is not such a good approximation

00:06:20.360 --> 00:06:24.080
three point one four is a little better, it turns out the next one

00:06:24.340 --> 00:06:28.120
is something like three one four one four.

00:06:28.120 --> 00:06:28.880
Which is even better

00:06:29.440 --> 00:06:30.080
and so on.

00:06:31.400 --> 00:06:35.880
And so, this tremendously inefficient method of taking some value

00:06:35.880 --> 00:06:39.480
of c that's really close to the cusp of the Mandelbrot set and iterating

00:06:39.480 --> 00:06:43.360
it many thousands of times until you get a number that's larger than two

00:06:43.360 --> 00:06:46.080
will give you approximates of pi.

