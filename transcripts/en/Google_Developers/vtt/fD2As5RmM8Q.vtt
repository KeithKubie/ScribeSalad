WEBVTT
Kind: captions
Language: en

00:00:08.279 --> 00:00:10.227
MATTHEW MCNULTY: Hi there.

00:00:10.227 --> 00:00:13.636
[APPLAUSE]

00:00:17.070 --> 00:00:19.080
So my name is Matthew
McNulty and this talk

00:00:19.080 --> 00:00:20.550
is going to be
all about Polymer,

00:00:20.550 --> 00:00:23.520
so this is sort of our
Polymer keynote, if you will.

00:00:23.520 --> 00:00:25.820
So before yesterday, how
many of you, show of hands,

00:00:25.820 --> 00:00:27.790
have heard of Polymer?

00:00:27.790 --> 00:00:28.915
Excellent.

00:00:28.915 --> 00:00:29.470
All right.

00:00:29.470 --> 00:00:30.790
So you're going to be
excited because we've

00:00:30.790 --> 00:00:33.110
got some new stuff to show
today that we didn't even

00:00:33.110 --> 00:00:34.232
show yesterday.

00:00:34.232 --> 00:00:35.940
And then if you haven't,
for those of you

00:00:35.940 --> 00:00:36.960
that don't know
about Polymer, I'm

00:00:36.960 --> 00:00:39.043
going to do a little bit
of an introduction first.

00:00:39.043 --> 00:00:43.410
So Polymer is part of the
web platform team on Chrome,

00:00:43.410 --> 00:00:45.040
and as part of the
web platform team,

00:00:45.040 --> 00:00:47.020
it's our job to make
web developers like

00:00:47.020 --> 00:00:51.506
you more successful and the
apps you build more awesome.

00:00:51.506 --> 00:00:53.880
The Polymer team does that by
bringing app-like immersive

00:00:53.880 --> 00:00:56.920
experiences to the web
on mobile and desktop.

00:00:56.920 --> 00:00:59.530
So Polymer officially began
about three years ago, just

00:00:59.530 --> 00:01:01.750
under, but it began a
little bit earlier than that

00:01:01.750 --> 00:01:04.190
with the invention of Web
Components a few years

00:01:04.190 --> 00:01:05.500
before that.

00:01:05.500 --> 00:01:09.326
We've talked about Polymer at
I/O for a couple of years now

00:01:09.326 --> 00:01:10.950
but we've always used
a lot of caveats,

00:01:10.950 --> 00:01:13.020
like Developer
Preview and Pre-Alpha,

00:01:13.020 --> 00:01:15.370
and basically whatever we
could make up to say please

00:01:15.370 --> 00:01:19.720
don't judge just too harshly
because it's still baking.

00:01:19.720 --> 00:01:22.920
So today, to the terror
of my engineering team,

00:01:22.920 --> 00:01:24.240
those caveats are gone.

00:01:24.240 --> 00:01:26.400
So today, we
introduced Polymer 1.0.

00:01:26.400 --> 00:01:29.232
[APPLAUSE]

00:01:33.020 --> 00:01:34.750
And Polymer is now
ready for production

00:01:34.750 --> 00:01:37.104
and it's entirely
new in the last year.

00:01:37.104 --> 00:01:39.270
So if you looked before,
we've rewritten it entirely

00:01:39.270 --> 00:01:40.400
from scratch.

00:01:40.400 --> 00:01:43.450
So we kept what developers
loved but made it much smaller,

00:01:43.450 --> 00:01:44.920
faster, and simpler.

00:01:44.920 --> 00:01:46.740
And I'm going to tell
you all about it,

00:01:46.740 --> 00:01:49.530
Taylor's going to show you
it in use today across Google

00:01:49.530 --> 00:01:52.850
and elsewhere, Eric's going to
deep dive into Google scale,

00:01:52.850 --> 00:01:55.390
production applications
built with Polymer,

00:01:55.390 --> 00:01:58.140
and Addy is going to show you
how you can get started today.

00:01:58.140 --> 00:02:01.630
That's a lot to cover,
so let's dive right in.

00:02:01.630 --> 00:02:04.050
So Polymer isn't simply a
better version of something else

00:02:04.050 --> 00:02:04.550
out there.

00:02:04.550 --> 00:02:06.710
It's not like things
that came before.

00:02:06.710 --> 00:02:08.860
So that 1.0 after it has
a deeper meaning than just

00:02:08.860 --> 00:02:09.660
a version number.

00:02:09.660 --> 00:02:12.510
So it signifies
something totally new.

00:02:12.510 --> 00:02:14.302
So starting out at
Google a few years ago,

00:02:14.302 --> 00:02:15.760
we were given a
really bold mission

00:02:15.760 --> 00:02:18.300
to do something totally
new and build on something

00:02:18.300 --> 00:02:21.352
revolutionary and dramatically
change web development,

00:02:21.352 --> 00:02:23.560
so to get right out on the
bleeding edge of standards

00:02:23.560 --> 00:02:26.500
and start pushing and
vetting new concepts.

00:02:26.500 --> 00:02:28.770
And from out here, looking
at the landscape of web

00:02:28.770 --> 00:02:30.853
development, we see the
world a little differently

00:02:30.853 --> 00:02:32.440
with a different perspective.

00:02:32.440 --> 00:02:35.240
Web developers don't generally
have the freedom to spend time

00:02:35.240 --> 00:02:38.510
out on the bleeding edge
because you've got stuff to do.

00:02:38.510 --> 00:02:40.860
And browser implementers who
come up with the standards

00:02:40.860 --> 00:02:41.776
aren't web developers.

00:02:43.784 --> 00:02:45.950
And from this perspective,
web development right now

00:02:45.950 --> 00:02:46.780
is pretty crazy.

00:02:46.780 --> 00:02:48.910
Everyone's fighting
all the time.

00:02:48.910 --> 00:02:51.670
So there's tons and tons of
frameworks and tons of choice

00:02:51.670 --> 00:02:54.100
but it's all different and
none of it works together.

00:02:54.100 --> 00:02:56.890
It's a complicated world
and everyone's fighting.

00:02:56.890 --> 00:02:59.900
So all these frameworks
have an idea of components,

00:02:59.900 --> 00:03:02.919
little bits of apps that can be
used in different applications,

00:03:02.919 --> 00:03:05.210
but they're all different
and they don't work together,

00:03:05.210 --> 00:03:08.560
and working together is the key.

00:03:08.560 --> 00:03:10.810
So I can explain this a
little better with an analogy.

00:03:10.810 --> 00:03:12.780
So we sit in the San
Francisco office of Google.

00:03:12.780 --> 00:03:14.610
We're kind of lucky that
way, and it's right down

00:03:14.610 --> 00:03:15.770
the street here on the Bay.

00:03:15.770 --> 00:03:16.920
This is actually our view.

00:03:16.920 --> 00:03:19.770
I took this picture
a couple months ago.

00:03:19.770 --> 00:03:22.100
And ever since we moved
into this office, about 60%

00:03:22.100 --> 00:03:23.770
of the casual
conversation in the office

00:03:23.770 --> 00:03:25.760
has revolved around
container ships

00:03:25.760 --> 00:03:29.305
because it's what we see going
by all day, the entire time.

00:03:29.305 --> 00:03:30.930
And it turns out the
shipping container

00:03:30.930 --> 00:03:34.352
is a really interesting thing.

00:03:34.352 --> 00:03:36.560
So before shipping containers,
everything was custom.

00:03:36.560 --> 00:03:38.480
You made a thing and if you
wanted to move a lot of them,

00:03:38.480 --> 00:03:41.270
you built a pallet for it, and
at every stage of the journey,

00:03:41.270 --> 00:03:43.584
everything was done by hand.

00:03:43.584 --> 00:03:45.500
And to fix this, they
didn't standardize boats

00:03:45.500 --> 00:03:48.872
or standardize trucks to be
exactly the same in silos.

00:03:48.872 --> 00:03:50.580
They standardized the
containers and made

00:03:50.580 --> 00:03:52.790
everything that carries
them able to carry

00:03:52.790 --> 00:03:55.804
the same container.

00:03:55.804 --> 00:03:57.470
And the same container
can go from truck

00:03:57.470 --> 00:04:00.630
to train to boat all
without ever being unpacked

00:04:00.630 --> 00:04:03.060
with maximum efficiency, and
this makes the whole system

00:04:03.060 --> 00:04:05.230
work together, and
these boats can carry

00:04:05.230 --> 00:04:06.910
an enormous amount of cargo.

00:04:06.910 --> 00:04:09.150
So we actually looked it
up because we were curious

00:04:09.150 --> 00:04:12.350
as to how much cargo-- what's
the value of cargo of every

00:04:12.350 --> 00:04:15.440
ship we see go buy, and it turns
out on average about $1 billion

00:04:15.440 --> 00:04:18.829
to $1 1/2 billion
and a half dollars.

00:04:18.829 --> 00:04:21.240
So what's this got to
do with web development?

00:04:21.240 --> 00:04:23.930
Building a web app today
is also really challenging.

00:04:23.930 --> 00:04:25.740
It takes an enormous
amount of expertise

00:04:25.740 --> 00:04:29.810
to get right, especially
across multiple platforms

00:04:29.810 --> 00:04:32.210
and multiple form factors.

00:04:32.210 --> 00:04:34.550
So the web isn't any less
capable than other platforms.

00:04:34.550 --> 00:04:36.930
It's just a lot harder
to get exactly right.

00:04:36.930 --> 00:04:40.400
It's really easy to get on
board but difficult to master.

00:04:40.400 --> 00:04:42.470
So the answer to this
is Web Components.

00:04:42.470 --> 00:04:44.270
Web Components fix
this the same way

00:04:44.270 --> 00:04:48.969
that shipping containers did
as well, interoperability.

00:04:48.969 --> 00:04:50.260
Let me explain what that means.

00:04:50.260 --> 00:04:53.185
HTML works everywhere
in every framework.

00:04:53.185 --> 00:04:56.770
If you stick a Button tag in
your code, it works everywhere.

00:04:56.770 --> 00:04:58.540
If you build a button
in Angular or React,

00:04:58.540 --> 00:05:01.100
it only works in an
Angular or React app.

00:05:01.100 --> 00:05:03.800
The same goes for all of
the existing frameworks.

00:05:03.800 --> 00:05:06.530
They're all silos and that's
been the state of the art.

00:05:06.530 --> 00:05:08.226
That doesn't mean
that these are bad.

00:05:08.226 --> 00:05:09.600
It just means that
Web Components

00:05:09.600 --> 00:05:11.310
are a different thing.

00:05:11.310 --> 00:05:13.810
So the Button tag works
everywhere that would be great,

00:05:13.810 --> 00:05:17.390
but Button is pretty lame
and apps demand better.

00:05:17.390 --> 00:05:20.770
Web Components introduce custom
elements, so no longer just

00:05:20.770 --> 00:05:26.060
a button, but fancy buttons,
like material design buttons.

00:05:26.060 --> 00:05:28.620
And not just fancy buttons,
but headers and drop downs

00:05:28.620 --> 00:05:32.050
and switches and
sliders, everything

00:05:32.050 --> 00:05:34.432
you need to build up into a
really cool app like the I/O

00:05:34.432 --> 00:05:36.390
web app I'm pretty sure
every single one of you

00:05:36.390 --> 00:05:37.764
used that was
written in Polymer.

00:05:41.095 --> 00:05:42.720
And unlike fancy
custom elements you've

00:05:42.720 --> 00:05:46.160
seen before, Web Components
are interoperable.

00:05:46.160 --> 00:05:48.040
So existing HTML
is a set of tools

00:05:48.040 --> 00:05:51.800
useful 20 years ago for building
documents, not applications.

00:05:51.800 --> 00:05:54.870
Web Components now add
another layer functionality

00:05:54.870 --> 00:05:58.380
above the platform but below
other frameworks, new elements

00:05:58.380 --> 00:06:00.500
you can add and you
can use everywhere.

00:06:00.500 --> 00:06:03.860
This dramatically
changes the web platform.

00:06:03.860 --> 00:06:05.990
And it unlocks this future
of web development today

00:06:05.990 --> 00:06:08.156
that we've been talking
about, a future where we all

00:06:08.156 --> 00:06:10.160
work together.

00:06:10.160 --> 00:06:11.900
You don't have to
roll your own UI

00:06:11.900 --> 00:06:14.650
or choose from an array
of siloed frameworks.

00:06:14.650 --> 00:06:17.390
You can pick from off
the shelf, from this ever

00:06:17.390 --> 00:06:19.500
increasing collection of
custom bits and pieces

00:06:19.500 --> 00:06:22.030
to build your app, or
even make your own.

00:06:22.030 --> 00:06:24.570
If you build something awesome,
anyone can use it anywhere.

00:06:28.427 --> 00:06:30.010
So Web Components
are this revolution.

00:06:30.010 --> 00:06:31.740
Web Components are
the shipping container

00:06:31.740 --> 00:06:33.410
that standardizes everything.

00:06:33.410 --> 00:06:36.350
And Polymer is a library
for building Web Components

00:06:36.350 --> 00:06:38.590
and makes it faster and
easier to build standard Web

00:06:38.590 --> 00:06:40.210
Components you can
use everywhere.

00:06:42.860 --> 00:06:43.900
So Polymer is different.

00:06:43.900 --> 00:06:45.324
Polymer isn't a framework.

00:06:45.324 --> 00:06:46.240
Let me say that again.

00:06:46.240 --> 00:06:49.490
Polymer is not a framework,
and that's not some distinction

00:06:49.490 --> 00:06:51.015
without a difference.

00:06:51.015 --> 00:06:53.140
Polymer is not a framework
because the very premise

00:06:53.140 --> 00:06:56.025
of Web Components is that
they are not a framework.

00:06:56.025 --> 00:06:58.150
It isn't just here to
replace some other framework.

00:06:58.150 --> 00:07:00.342
It's not about Polymer
versus something else

00:07:00.342 --> 00:07:02.050
because Web Components
built with Polymer

00:07:02.050 --> 00:07:03.510
can work with everything else.

00:07:11.816 --> 00:07:14.190
So we've been saying this
about Web Components in Polymer

00:07:14.190 --> 00:07:17.030
for a little while now, but
even if you listened before,

00:07:17.030 --> 00:07:19.090
to those of you who
have seen it before,

00:07:19.090 --> 00:07:21.800
there's reason to look again.

00:07:21.800 --> 00:07:24.300
That's because Polymer
1.0 is brand new.

00:07:24.300 --> 00:07:26.380
We spent the last
year rebuilding it.

00:07:26.380 --> 00:07:28.880
So building something that the
biggest and the best web apps

00:07:28.880 --> 00:07:32.012
can depend on demands
a really high bar.

00:07:32.012 --> 00:07:33.470
About partway
through last year, we

00:07:33.470 --> 00:07:35.770
realized we could do better
than what we have already,

00:07:35.770 --> 00:07:38.977
so we rewrote a new Polymer,
a production ready Polymer.

00:07:38.977 --> 00:07:41.560
It's one that maintains the same
great features and ergonomics

00:07:41.560 --> 00:07:45.170
developers love most but
in a new package rewritten

00:07:45.170 --> 00:07:48.480
with a laser focus on speed
and reduced complexity.

00:07:48.480 --> 00:07:50.950
So let's take a look at how
we did, starting with speed.

00:07:54.860 --> 00:07:56.990
So it's three times
faster on Chrome

00:07:56.990 --> 00:08:01.095
than the previous version, four
times faster on mobile Safari.

00:08:01.095 --> 00:08:03.105
So Safari is still slower
overall than Chrome

00:08:03.105 --> 00:08:05.140
because it doesn't have
native Web Components

00:08:05.140 --> 00:08:07.660
but it's a lot closer now.

00:08:07.660 --> 00:08:12.030
In terms of code complexity,
1.0 is 35% less code overall.

00:08:12.030 --> 00:08:15.150
That's only 42k gzipped,
including all the polyfills

00:08:15.150 --> 00:08:16.760
and everything.

00:08:16.760 --> 00:08:19.020
And in fact, thanks to a new
modular design, as little

00:08:19.020 --> 00:08:22.150
as 19k can get you
started with Polymer.

00:08:22.150 --> 00:08:24.910
That's really, really
small, and over 60% less

00:08:24.910 --> 00:08:27.187
code than it was originally.

00:08:27.187 --> 00:08:29.270
And all of this comes with
the same great features

00:08:29.270 --> 00:08:30.730
that Polymer had before.

00:08:30.730 --> 00:08:33.809
It sugars the underlying
Web Components syntax

00:08:33.809 --> 00:08:36.767
and adds features to make them
easier and simpler to use.

00:08:36.767 --> 00:08:38.350
It adds new features
to make it easier

00:08:38.350 --> 00:08:40.584
to build whole systems
out of components.

00:08:40.584 --> 00:08:42.500
This makes components
easier to click together

00:08:42.500 --> 00:08:46.700
into more complex
components or even apps.

00:08:46.700 --> 00:08:48.310
And 1.0 brings a
lot of new features,

00:08:48.310 --> 00:08:51.210
but I'm just going to talk about
two of the bigger ones today.

00:08:51.210 --> 00:08:53.090
So a lot of what
developers told us

00:08:53.090 --> 00:08:55.810
they didn't like about Polymer
was actually the Shadow DOM

00:08:55.810 --> 00:08:57.480
Polyfill, not Polymer.

00:08:57.480 --> 00:08:59.880
You see this today
all over the web.

00:08:59.880 --> 00:09:02.100
So the polyfill was technically
awesome but complex.

00:09:02.100 --> 00:09:04.875
It was globally intrusive,
and if you weren't careful,

00:09:04.875 --> 00:09:06.809
it could be slow on
mobile platforms.

00:09:06.809 --> 00:09:08.600
And it was never actually
meant to be fast.

00:09:08.600 --> 00:09:11.550
It was meant to be complete.

00:09:11.550 --> 00:09:13.660
So we replaced it in
1.0 with a simpler shim

00:09:13.660 --> 00:09:17.890
that we called Shady
DOM, sort of Shadow DOM.

00:09:17.890 --> 00:09:20.310
So it uses Shadow DOM on
platforms like Chrome that

00:09:20.310 --> 00:09:22.620
support it and a simpler,
less capable mechanism

00:09:22.620 --> 00:09:24.560
on less capable browsers.

00:09:24.560 --> 00:09:26.645
So it's not a
perfect replacement

00:09:26.645 --> 00:09:29.145
in terms of API compatibility
like the Shadow DOM Polyfill--

00:09:29.145 --> 00:09:31.987
it makes some trade
offs for performance--

00:09:31.987 --> 00:09:34.570
but it's meant to disappear as
soon as other browsers ship Web

00:09:34.570 --> 00:09:36.867
Components.

00:09:36.867 --> 00:09:38.450
And the other major
new feature in 1.0

00:09:38.450 --> 00:09:41.520
is theming and styling
with CSS custom properties.

00:09:41.520 --> 00:09:44.430
So Web Components introduced
scoping to the DOM tree

00:09:44.430 --> 00:09:48.140
and CSS was built assuming
a single unscoped tree,

00:09:48.140 --> 00:09:49.820
and that's made the
intersection of CSS

00:09:49.820 --> 00:09:52.600
and Web Components fit
together really oddly

00:09:52.600 --> 00:09:56.245
with special selectors made to
crash Shadow DOM like Deep that

00:09:56.245 --> 00:09:59.140
are clumsy and
actually really slow.

00:09:59.140 --> 00:10:01.140
So custom CSS properties
are the answer

00:10:01.140 --> 00:10:03.014
to this problem we've
actually been searching

00:10:03.014 --> 00:10:04.810
for a couple of years now.

00:10:04.810 --> 00:10:06.940
They allow the targeting
of nodes across boundaries

00:10:06.940 --> 00:10:08.750
and even mix-ins of
sets of properties

00:10:08.750 --> 00:10:10.570
that can apply to
specific nodes.

00:10:10.570 --> 00:10:13.460
So Addy is going to talk more
about this in a little bit.

00:10:13.460 --> 00:10:15.300
And even better, CSS
custom properties

00:10:15.300 --> 00:10:17.720
are a standard and
already being implemented

00:10:17.720 --> 00:10:19.510
across multiple browsers.

00:10:19.510 --> 00:10:22.240
Mix-ins are a new part of
the proposal, that's new,

00:10:22.240 --> 00:10:24.130
but Polymer 1.0
introduces a shim

00:10:24.130 --> 00:10:26.640
for this emerging standard.

00:10:26.640 --> 00:10:29.220
And 1.0 has got a number
of other, smaller features,

00:10:29.220 --> 00:10:31.010
and most but not
all of the features

00:10:31.010 --> 00:10:32.680
that Polymer had previously.

00:10:32.680 --> 00:10:37.320
But Polymer itself is just
one part of the story.

00:10:37.320 --> 00:10:39.030
So the existing web
platform is the basis

00:10:39.030 --> 00:10:41.071
of all web apps today,
and now it's more capable.

00:10:41.071 --> 00:10:43.370
We have this new layer
of Web Components,

00:10:43.370 --> 00:10:46.050
and these components form a
new ecosystem on top of which

00:10:46.050 --> 00:10:47.995
frameworks and apps exist.

00:10:47.995 --> 00:10:49.370
So now when you
build an app, you

00:10:49.370 --> 00:10:53.460
have a whole new set of
building blocks to choose from.

00:10:53.460 --> 00:10:55.550
For whatever problem
you have as a developer,

00:10:55.550 --> 00:10:58.125
there's an element for that,
and if there isn't, you

00:10:58.125 --> 00:11:00.940
can use Polymer to build your
own so that all the developers

00:11:00.940 --> 00:11:03.082
after you don't have to.

00:11:03.082 --> 00:11:04.540
But what elements
are there and how

00:11:04.540 --> 00:11:06.744
do you navigate this ecosystem?

00:11:06.744 --> 00:11:08.910
So to answer that, I'd like
to invite onto the stage

00:11:08.910 --> 00:11:11.912
Taylor Savage, product
manager for Polymer.

00:11:11.912 --> 00:11:14.768
[APPLAUSE]

00:11:16.969 --> 00:11:18.010
TAYLOR SAVAGE: All right.

00:11:18.010 --> 00:11:18.700
Thank you, Matt.

00:11:18.700 --> 00:11:20.420
So as Matt said,
my name's Taylor.

00:11:20.420 --> 00:11:22.370
I'm the product manager
on the Polymer team

00:11:22.370 --> 00:11:24.536
and I'm going to talk today
about some of the things

00:11:24.536 --> 00:11:28.020
that you can build with
Polymer, namely elements.

00:11:28.020 --> 00:11:29.920
First to step back a little bit.

00:11:29.920 --> 00:11:31.750
Our mission on the
Polymer team is

00:11:31.750 --> 00:11:33.700
to make it easy
for any developer

00:11:33.700 --> 00:11:36.156
to create a high quality
application on the web,

00:11:36.156 --> 00:11:37.530
and the raw material
that we use,

00:11:37.530 --> 00:11:40.071
the raw ingredients that we use
to create these applications,

00:11:40.071 --> 00:11:41.341
are elements.

00:11:41.341 --> 00:11:42.840
Now, with Web
Components in Polymer,

00:11:42.840 --> 00:11:46.167
we go from having a very small,
limited subset of elements

00:11:46.167 --> 00:11:47.750
to just about anything
we can imagine,

00:11:47.750 --> 00:11:49.590
and that's really,
really powerful,

00:11:49.590 --> 00:11:51.680
but it's also a
big responsibility.

00:11:51.680 --> 00:11:54.800
And as we know, the
quality of your end result

00:11:54.800 --> 00:11:57.240
is going to be directly
reflective of the quality

00:11:57.240 --> 00:11:59.157
of the ingredients
that you put in.

00:11:59.157 --> 00:12:00.740
So this is why we
on the Polymer team,

00:12:00.740 --> 00:12:02.980
in addition to the
library, have built

00:12:02.980 --> 00:12:04.720
sets of high quality
elements for you

00:12:04.720 --> 00:12:07.820
to use in your applications.

00:12:07.820 --> 00:12:09.840
So previously, we had
two sets of elements.

00:12:09.840 --> 00:12:12.180
We had the core elements
and the paper elements.

00:12:12.180 --> 00:12:14.662
We recently renamed the core
elements to the iron elements.

00:12:14.662 --> 00:12:16.120
They are the strong
building blocks

00:12:16.120 --> 00:12:18.561
that you use for just
about any application.

00:12:18.561 --> 00:12:20.060
And we also have
the paper elements,

00:12:20.060 --> 00:12:22.185
which are the reference
implementation for material

00:12:22.185 --> 00:12:23.330
design.

00:12:23.330 --> 00:12:25.660
Well, today, we're going to
introduce a few new element

00:12:25.660 --> 00:12:26.780
product lines.

00:12:26.780 --> 00:12:28.700
The goal of each of
these product lines

00:12:28.700 --> 00:12:31.300
is to solve a very
specific set of problems

00:12:31.300 --> 00:12:35.300
that web developers
commonly run into.

00:12:35.300 --> 00:12:38.260
So our first product line is
the Google Web Components.

00:12:38.260 --> 00:12:41.520
So at Google, we have a wide
array of different services

00:12:41.520 --> 00:12:43.960
and APIs that you could add
into your application that

00:12:43.960 --> 00:12:47.220
are really, really powerful,
things like Maps and Analytics

00:12:47.220 --> 00:12:49.880
and YouTube and Translate,
but they can also

00:12:49.880 --> 00:12:51.290
be a little bit hard to use.

00:12:51.290 --> 00:12:52.910
The APIs can be a
little bit finicky

00:12:52.910 --> 00:12:56.054
and there can be a lot of
boilerplate to get started.

00:12:56.054 --> 00:12:57.470
So with the Google
Web Components,

00:12:57.470 --> 00:13:00.850
we've wrapped every single one
of these APIs as an element.

00:13:00.850 --> 00:13:03.039
If you need to add a
Google Map to your page,

00:13:03.039 --> 00:13:04.830
drop the Google Map
element onto your page.

00:13:04.830 --> 00:13:06.910
If you need to get data
out of a spreadsheet,

00:13:06.910 --> 00:13:09.050
drop the Google Sheet
element onto your page.

00:13:09.050 --> 00:13:11.870
We've standardized the way
you interact with these APIs

00:13:11.870 --> 00:13:14.677
with elements and we've
created kind of a Google SDK

00:13:14.677 --> 00:13:16.135
for the web through
these elements.

00:13:19.138 --> 00:13:21.150
The second product line
I'd like to talk about

00:13:21.150 --> 00:13:23.320
are the Platinum elements.

00:13:23.320 --> 00:13:25.960
So as you've probably heard
a lot at this conference,

00:13:25.960 --> 00:13:28.059
the web has some really
amazing new primitives

00:13:28.059 --> 00:13:30.600
that we've introduced that let
you do things that we've never

00:13:30.600 --> 00:13:32.599
been able to do before
as web developers, things

00:13:32.599 --> 00:13:35.670
like offline caching and
things like push notifications

00:13:35.670 --> 00:13:37.264
with Service Worker.

00:13:37.264 --> 00:13:38.680
And with the
Platinum elements, we

00:13:38.680 --> 00:13:41.540
want to again bring these
really powerful features to you

00:13:41.540 --> 00:13:44.434
in the easiest way to use
possible with elements.

00:13:44.434 --> 00:13:46.100
So we've wrapped
Service Worker features

00:13:46.100 --> 00:13:47.920
and all of these new
re-engagement features

00:13:47.920 --> 00:13:49.950
on the web as elements.

00:13:49.950 --> 00:13:52.490
If you want to drop a push
notification onto your page,

00:13:52.490 --> 00:13:53.865
drop a Push
Notification element.

00:13:53.865 --> 00:13:55.500
If you want to get
offline caching,

00:13:55.500 --> 00:13:57.770
you can declaratively
set up offline caching

00:13:57.770 --> 00:14:00.790
with a Platinum element,
and so much more.

00:14:00.790 --> 00:14:04.100
These features that we as web
developers only six months ago

00:14:04.100 --> 00:14:07.110
could only have dreamed about
are now just a single element

00:14:07.110 --> 00:14:08.402
away.

00:14:08.402 --> 00:14:11.378
[APPLAUSE]

00:14:15.350 --> 00:14:17.360
And finally, the Gold elements.

00:14:17.360 --> 00:14:20.060
So e-commerce is a really
hugely important part of the web

00:14:20.060 --> 00:14:21.980
platform but it can
be hard to get right,

00:14:21.980 --> 00:14:23.832
especially on mobile.

00:14:23.832 --> 00:14:25.540
Those big, long checkout
screens were not

00:14:25.540 --> 00:14:28.282
meant for a five inch device.

00:14:28.282 --> 00:14:30.490
So with the Gold elements,
we've introduced a new set

00:14:30.490 --> 00:14:33.500
of product lines specifically
to help developers build really

00:14:33.500 --> 00:14:36.330
high quality check out flows,
so things like auto validating

00:14:36.330 --> 00:14:38.850
credit card fields, auto
validating name input fields,

00:14:38.850 --> 00:14:41.216
CVCs, expiration dates.

00:14:41.216 --> 00:14:42.840
And with these, it
makes it really easy

00:14:42.840 --> 00:14:45.860
to build a mobile
first check out flow.

00:14:45.860 --> 00:14:49.820
So we have the Iron elements,
the Paper elements, the Google

00:14:49.820 --> 00:14:52.170
Web Components, the
Platinum elements,

00:14:52.170 --> 00:14:53.500
and the Gold elements.

00:14:53.500 --> 00:14:55.745
Each of these solves a
specific set of problems

00:14:55.745 --> 00:14:58.950
that developers run into when
building web applications.

00:14:58.950 --> 00:15:01.040
And many times, that's
exactly what you want.

00:15:01.040 --> 00:15:03.420
You have a problem and you
need a specific solution

00:15:03.420 --> 00:15:05.690
to be able to fix that problem.

00:15:05.690 --> 00:15:07.914
But other times, we just
want to be inspired.

00:15:07.914 --> 00:15:10.080
We just want to come across
maybe a design we hadn't

00:15:10.080 --> 00:15:12.390
thought about or a feature
or application that we

00:15:12.390 --> 00:15:14.070
hadn't considered.

00:15:14.070 --> 00:15:15.640
And we want our
element product lines

00:15:15.640 --> 00:15:16.870
to help you do that
too, to help you just

00:15:16.870 --> 00:15:18.995
be inspired by new things
that are available to you

00:15:18.995 --> 00:15:19.800
on the web.

00:15:19.800 --> 00:15:22.480
So to help with this, to help
with the problem solving,

00:15:22.480 --> 00:15:25.080
and also to help with
just the inspiration,

00:15:25.080 --> 00:15:27.190
we're releasing a brand
new element catalog

00:15:27.190 --> 00:15:30.100
for all of these elements
where you can browse and find

00:15:30.100 --> 00:15:32.160
and play with these elements.

00:15:32.160 --> 00:15:34.740
In the catalog, you can
search for elements,

00:15:34.740 --> 00:15:38.190
you can browse by element
product line, play with demos,

00:15:38.190 --> 00:15:40.360
you can read element
documentation,

00:15:40.360 --> 00:15:42.870
and you can even add
elements to a cart,

00:15:42.870 --> 00:15:47.082
download the cart to use
directly in your application.

00:15:47.082 --> 00:15:48.790
Our hope is that for
any feature that you

00:15:48.790 --> 00:15:50.790
might want to create on
the web, that there's

00:15:50.790 --> 00:15:53.120
an element for that.

00:15:53.120 --> 00:15:55.370
And we think the idea of
related element product lines

00:15:55.370 --> 00:15:56.860
is really powerful,
and what's great is

00:15:56.860 --> 00:15:58.310
we're not the only
people that think that.

00:15:58.310 --> 00:16:00.500
There are tons of companies
out there building

00:16:00.500 --> 00:16:02.360
incredible elements
with Polymer,

00:16:02.360 --> 00:16:06.420
and we'd like to highlight
a few of those today.

00:16:06.420 --> 00:16:07.790
The first is Atavist.

00:16:07.790 --> 00:16:09.270
So Atavist is a
publishing company

00:16:09.270 --> 00:16:12.550
that recently released a brand
new platform for storytellers

00:16:12.550 --> 00:16:15.890
to tell really engaging
stories on that web.

00:16:15.890 --> 00:16:18.050
And the heart of an
Atavist story is text,

00:16:18.050 --> 00:16:19.740
but it goes so far beyond that.

00:16:19.740 --> 00:16:21.790
You can bring in all
kinds of different media

00:16:21.790 --> 00:16:24.230
into your Atavist story,
things like movies and pictures

00:16:24.230 --> 00:16:26.470
and video, but other
things like music

00:16:26.470 --> 00:16:28.690
and maps and
charts, anything you

00:16:28.690 --> 00:16:31.880
might need to tell just
a really engaging story.

00:16:31.880 --> 00:16:33.860
And the web is a perfect
platform for that.

00:16:33.860 --> 00:16:35.360
It's a perfect
platform for bringing

00:16:35.360 --> 00:16:37.760
in different kinds of
media from all over the web

00:16:37.760 --> 00:16:39.640
into one place.

00:16:39.640 --> 00:16:41.920
But Atavist needed a
common way to refer

00:16:41.920 --> 00:16:44.607
to these different components,
to these different blocks,

00:16:44.607 --> 00:16:46.690
and the web has a great
language for that as well.

00:16:46.690 --> 00:16:47.890
It's elements.

00:16:47.890 --> 00:16:49.579
And so the Atavist
team used Polymer

00:16:49.579 --> 00:16:51.870
to build each of these
different blocks and components.

00:16:51.870 --> 00:16:55.110
It makes them really easy to
work into the Atavist platform

00:16:55.110 --> 00:16:58.089
and it makes it really easy
for the team to build more.

00:16:58.089 --> 00:16:59.630
It's a poetic use
of the web platform

00:16:59.630 --> 00:17:01.475
and a really perfect
example of Polymer,

00:17:01.475 --> 00:17:03.850
and it's a really just well
designed application to boot.

00:17:06.790 --> 00:17:09.599
So we've talked about
creativity and publishing.

00:17:09.599 --> 00:17:13.050
Now let's talk about enterprise.

00:17:13.050 --> 00:17:17.069
So the Vaadin team has one
of the most popular Java

00:17:17.069 --> 00:17:19.153
frameworks for building
enterprise applications,

00:17:19.153 --> 00:17:21.569
and they're building now all
of their front end components

00:17:21.569 --> 00:17:23.204
out as Polymer elements.

00:17:23.204 --> 00:17:25.079
And with an enterprise
focus, the Vaadin team

00:17:25.079 --> 00:17:29.630
focuses very specifically on
how to show big sets of data.

00:17:29.630 --> 00:17:32.090
So they've built some
incredibly impressive elements

00:17:32.090 --> 00:17:34.260
that I'd like to show off today.

00:17:34.260 --> 00:17:35.470
The first is the V-grid.

00:17:35.470 --> 00:17:38.670
So grids of data can
be really, really hard

00:17:38.670 --> 00:17:40.520
to get right on the
web, so the Vaadin

00:17:40.520 --> 00:17:43.581
team has done all of the
hard work for web developers.

00:17:43.581 --> 00:17:45.080
They've built this
V-grid component.

00:17:45.080 --> 00:17:46.810
It's got all the
features you'd expect--

00:17:46.810 --> 00:17:49.870
lazy loading, multi select
rows, rows and columns,

00:17:49.870 --> 00:17:52.130
and it's fully accessible.

00:17:52.130 --> 00:17:54.875
Again, Vaadin team doing
the hard work of this grid.

00:17:54.875 --> 00:17:57.250
And you'll notice that the
markup inside is just a table.

00:17:57.250 --> 00:17:58.958
It's just what we'd
expect as developers.

00:17:58.958 --> 00:18:01.870
It's the component
that makes the magic.

00:18:01.870 --> 00:18:03.420
They also are
working on and soon

00:18:03.420 --> 00:18:05.430
to release a set
of chart elements

00:18:05.430 --> 00:18:07.060
for all kinds of
different charts,

00:18:07.060 --> 00:18:09.940
similarly doing the hard work
to get this data visualization

00:18:09.940 --> 00:18:10.650
right.

00:18:10.650 --> 00:18:13.239
You can see markup
inside is very similar.

00:18:13.239 --> 00:18:14.780
It's the element
that does the magic.

00:18:17.290 --> 00:18:18.690
And finally, Salesforce.

00:18:18.690 --> 00:18:21.960
So Salesforce wants to ship
and is shipping an SDK, an API,

00:18:21.960 --> 00:18:24.900
for developers to easily
build applications using

00:18:24.900 --> 00:18:27.720
the Salesforce platform, and
they want to make it as easy

00:18:27.720 --> 00:18:30.340
as possible to leverage
the Salesforce information

00:18:30.340 --> 00:18:31.040
and data.

00:18:31.040 --> 00:18:34.010
So naturally, they ship
the Salesforce APIs

00:18:34.010 --> 00:18:35.952
as Polymer elements.

00:18:35.952 --> 00:18:38.160
You can use these Salesforce
elements, in addition to

00:18:38.160 --> 00:18:40.300
other Polymer elements that
you might find or any element

00:18:40.300 --> 00:18:42.390
out there, to just build
a really high quality

00:18:42.390 --> 00:18:44.394
application using
the Salesforce data

00:18:44.394 --> 00:18:45.560
and the Salesforce platform.

00:18:49.080 --> 00:18:51.430
So we get asked a lot
on the Polymer team,

00:18:51.430 --> 00:18:53.120
does Google use Polymer?

00:18:53.120 --> 00:18:55.230
And of course, the answer
is a resounding yes,

00:18:55.230 --> 00:18:57.479
and I'd like to talk about
a few applications that are

00:18:57.479 --> 00:18:59.370
using Polymer at Google today.

00:18:59.370 --> 00:19:01.190
The first is Translate.

00:19:01.190 --> 00:19:02.890
So not that long ago,
the Translate team

00:19:02.890 --> 00:19:04.431
wanted to build this
new product that

00:19:04.431 --> 00:19:06.880
let community members contribute
different translations

00:19:06.880 --> 00:19:09.680
to the Translate engine to make
it better and more effective,

00:19:09.680 --> 00:19:12.480
especially for low
volume languages,

00:19:12.480 --> 00:19:14.380
and so they built
Translate Community.

00:19:14.380 --> 00:19:17.074
It's entirely material designed,
it looks and feels great,

00:19:17.074 --> 00:19:19.490
it's got all the animations
and ripples that you'd expect,

00:19:19.490 --> 00:19:21.573
and it's built entirely
out of the Paper elements,

00:19:21.573 --> 00:19:23.430
and it's live today.

00:19:23.430 --> 00:19:26.420
So this was built from start
to finish in just a few months

00:19:26.420 --> 00:19:28.914
by two front end engineers
using the Paper elements,

00:19:28.914 --> 00:19:30.330
and by using those
Paper elements,

00:19:30.330 --> 00:19:32.780
it allowed those developers
to focus on just building

00:19:32.780 --> 00:19:36.030
a really great application and
not on the nitty gritty of how

00:19:36.030 --> 00:19:37.280
to implement material design.

00:19:39.910 --> 00:19:43.840
The Play team also shipped
a brand new product

00:19:43.840 --> 00:19:46.180
using Polymer Paper
elements, Play Music.

00:19:46.180 --> 00:19:49.040
So the new Play Music front end
uses Paper ripples and Paper

00:19:49.040 --> 00:19:50.310
toolbars and buttons.

00:19:50.310 --> 00:19:52.250
Again, this allowed
the Play Music team

00:19:52.250 --> 00:19:55.330
to focus on just building a
great application experience

00:19:55.330 --> 00:19:57.410
and leave the nitty
gritty material design up

00:19:57.410 --> 00:19:59.064
to the Paper elements.

00:19:59.064 --> 00:20:00.730
The Play Properties
are also now working

00:20:00.730 --> 00:20:03.500
on their own overarching
set of Polymer elements

00:20:03.500 --> 00:20:05.350
specific to the Play
Properties so they

00:20:05.350 --> 00:20:09.660
can use those across all
the different Play websites.

00:20:09.660 --> 00:20:13.660
And finally, a lot of uses
of Polymer are still internal

00:20:13.660 --> 00:20:16.790
but we'd like to
tease one today.

00:20:16.790 --> 00:20:18.975
So this is a version of
the YouTube mobile front

00:20:18.975 --> 00:20:21.230
end built entirely out
of Polymer elements.

00:20:21.230 --> 00:20:24.061
And as you can see, they've
achieved a pretty cool

00:20:24.061 --> 00:20:24.560
interface.

00:20:24.560 --> 00:20:25.590
It's really snappy.

00:20:25.590 --> 00:20:28.600
It's got all these great
animations and transitions,

00:20:28.600 --> 00:20:30.730
and it's even got some
features that you'd never

00:20:30.730 --> 00:20:33.415
expect to see on the web,
like this dragging video

00:20:33.415 --> 00:20:35.540
to the corner of the screen
with the smooth playing

00:20:35.540 --> 00:20:37.450
while the video plays.

00:20:37.450 --> 00:20:39.610
Again, it's using
Polymer to build

00:20:39.610 --> 00:20:44.390
a top notch, app-like
experience on the web.

00:20:44.390 --> 00:20:46.681
So elements are pretty cool.

00:20:46.681 --> 00:20:48.680
You can do a lot of really
cool stuff with them.

00:20:48.680 --> 00:20:50.054
We're excited on
the Polymer team

00:20:50.054 --> 00:20:52.240
to continue to build great
element product lines,

00:20:52.240 --> 00:20:54.710
but we're even more excited to
see what you, the community,

00:20:54.710 --> 00:20:57.325
can build, because the
sky is truly the limit.

00:20:57.325 --> 00:20:58.950
So with that, I'll
hand it off to Eric,

00:20:58.950 --> 00:21:00.825
who's going to talk a
little bit about taking

00:21:00.825 --> 00:21:02.568
these elements to production.

00:21:02.568 --> 00:21:05.382
[APPLAUSE]

00:21:09.140 --> 00:21:10.080
ERIC BIEDELMAN: Hello.

00:21:10.080 --> 00:21:12.270
So I've been on the Polymer
team now for over three years,

00:21:12.270 --> 00:21:13.640
ever since the project
started, and I've

00:21:13.640 --> 00:21:15.389
talked to a lot of
developers in that time

00:21:15.389 --> 00:21:17.590
about how to do things
in Web Components.

00:21:17.590 --> 00:21:19.160
I get asked very
similar questions.

00:21:19.160 --> 00:21:22.550
How do I create a single page
application in Web Components?

00:21:22.550 --> 00:21:24.710
How do I do things like
internationalization?

00:21:24.710 --> 00:21:26.260
How do I do lazy loading?

00:21:26.260 --> 00:21:28.360
How do I do URL routing?

00:21:28.360 --> 00:21:31.560
You can pretty much insert
anything curious Polymer

00:21:31.560 --> 00:21:33.280
developers ask me
about, and how do I

00:21:33.280 --> 00:21:36.046
do that thing in a web
platform using Web Components?

00:21:36.046 --> 00:21:38.170
On the Polymer team, we
usually have this response,

00:21:38.170 --> 00:21:40.892
"there's an element
for that," but I

00:21:40.892 --> 00:21:42.100
wanted to really bunker down.

00:21:42.100 --> 00:21:44.880
I wanted to experiment and build
some solutions myself, try out

00:21:44.880 --> 00:21:47.700
and build apps on google.com,
productionize them,

00:21:47.700 --> 00:21:49.140
see if this stuff was viable.

00:21:49.140 --> 00:21:51.100
So last year, I got really busy.

00:21:51.100 --> 00:21:53.350
Last year at I/O, I was
speaking about Web Components.

00:21:53.350 --> 00:21:54.900
I got super lazy
in the summertime,

00:21:54.900 --> 00:21:56.670
didn't do much on GitHub then.

00:21:56.670 --> 00:21:58.630
But then if you fast
forward to the fall time,

00:21:58.630 --> 00:22:00.050
I want to talk
about two projects

00:22:00.050 --> 00:22:01.830
that we launched
on google.com that

00:22:01.830 --> 00:22:03.595
are both written in Polymer.

00:22:03.595 --> 00:22:05.470
So it's important to
note the things that I'm

00:22:05.470 --> 00:22:07.178
going to be talking
about in this section

00:22:07.178 --> 00:22:09.720
of the presentation, they don't
use the new, hot Polymer 1.0.

00:22:09.720 --> 00:22:11.280
They use an older
version of Polymer.

00:22:11.280 --> 00:22:12.821
So it's a little
slower, but we still

00:22:12.821 --> 00:22:16.020
use this version to
productionize on Google.

00:22:16.020 --> 00:22:19.470
All the hard work, totally
obsolete now, right?

00:22:19.470 --> 00:22:20.570
Just kidding.

00:22:20.570 --> 00:22:23.530
So the version of Polymer that
these components we created

00:22:23.530 --> 00:22:25.530
is using doesn't matter
if it's an old version.

00:22:25.530 --> 00:22:27.279
We can port it to a
new version of Polymer

00:22:27.279 --> 00:22:30.120
because that's an implementation
detail of the component.

00:22:30.120 --> 00:22:31.850
And we also created
a really nice set

00:22:31.850 --> 00:22:33.650
of libraries for
the kinds of things

00:22:33.650 --> 00:22:36.582
that we tackled during
these two projects.

00:22:36.582 --> 00:22:37.290
So let's dive in.

00:22:37.290 --> 00:22:38.748
Let's talk about
the first project.

00:22:38.748 --> 00:22:41.270
Google Santa Tracker 2014
launched on Google.com

00:22:41.270 --> 00:22:42.510
during the month of December.

00:22:42.510 --> 00:22:44.400
If you've never seen Santa
Tracker, it's very cute.

00:22:44.400 --> 00:22:46.941
So you can visit Santa's Village
during the month of December

00:22:46.941 --> 00:22:49.720
and play a new game is
as each day goes along,

00:22:49.720 --> 00:22:50.750
highly interactive.

00:22:50.750 --> 00:22:55.840
You can change the sun,
change the moon, really mess

00:22:55.840 --> 00:22:58.880
up the snowman, too.

00:22:58.880 --> 00:23:00.380
So during the month,
again, each one

00:23:00.380 --> 00:23:01.754
of these scenes,
as we call them,

00:23:01.754 --> 00:23:03.830
launches, and each one
is a Web Component.

00:23:03.830 --> 00:23:05.410
A couple examples of scenes.

00:23:05.410 --> 00:23:06.990
It all works on touch.

00:23:06.990 --> 00:23:08.280
It works on mobile.

00:23:08.280 --> 00:23:09.700
Jam Band is one of my favorites.

00:23:09.700 --> 00:23:11.850
It uses Web Audio API.

00:23:11.850 --> 00:23:14.080
And this one's using WebGL.

00:23:14.080 --> 00:23:16.205
Again, each one of those
scenes is a web component.

00:23:16.205 --> 00:23:17.663
And of course, the
bread and butter

00:23:17.663 --> 00:23:18.865
is when you get to the end.

00:23:18.865 --> 00:23:21.170
The night before, you can
see Santa delivering presents

00:23:21.170 --> 00:23:24.742
around the globe and
explore those cities.

00:23:24.742 --> 00:23:26.950
So the team really took
"there's an element for that"

00:23:26.950 --> 00:23:28.970
to heart for this project.

00:23:28.970 --> 00:23:31.670
We created an element for Santa.

00:23:31.670 --> 00:23:34.120
Santa-app is responsible
for orchestrating

00:23:34.120 --> 00:23:35.120
the entire application.

00:23:35.120 --> 00:23:36.536
It's responsible
for firing events

00:23:36.536 --> 00:23:39.360
to analytics, starting
and stopping sound.

00:23:39.360 --> 00:23:42.402
Inside of it, it has a bunch
of declarative web components.

00:23:42.402 --> 00:23:43.610
So how do you do URL routing?

00:23:43.610 --> 00:23:46.276
Well, you create a Web Component
for it, and that's what we did.

00:23:46.276 --> 00:23:48.400
Santa has a URL router.

00:23:48.400 --> 00:23:50.850
We tied that to an element
we created for lazy loading.

00:23:50.850 --> 00:23:53.070
We created this
Lazy Pages element.

00:23:53.070 --> 00:23:55.096
When a user selects a
new scene, we dynamically

00:23:55.096 --> 00:23:56.720
load that scene, so
all the JavaScript,

00:23:56.720 --> 00:23:59.770
all the CSS comes
along on the fly.

00:23:59.770 --> 00:24:02.740
We were also super declarative
throughout the entire project.

00:24:02.740 --> 00:24:05.800
So the loading sequence
when you load a new scene,

00:24:05.800 --> 00:24:08.180
we're allowing the scene to
define its own background

00:24:08.180 --> 00:24:10.840
image and its loading color,
so we're being declarative

00:24:10.840 --> 00:24:13.570
with HTML attributes.

00:24:13.570 --> 00:24:14.570
So that's Santa Tracker.

00:24:14.570 --> 00:24:17.500
I want to focus the rest of my
time on the Google I/O Web App.

00:24:17.500 --> 00:24:19.041
How many people have
used the web app

00:24:19.041 --> 00:24:20.481
in the last couple of days?

00:24:20.481 --> 00:24:20.980
A lot.

00:24:20.980 --> 00:24:23.240
Great.

00:24:23.240 --> 00:24:26.040
We call it IOWA, so I/O Web App.

00:24:26.040 --> 00:24:28.839
It's a great state in the
Midwest where I'm from.

00:24:28.839 --> 00:24:30.380
But if you hear me
say "IOWA," that's

00:24:30.380 --> 00:24:32.554
what I'm referring
to, not the state.

00:24:32.554 --> 00:24:34.970
So IOWA is a really good example
of a modern web platform.

00:24:34.970 --> 00:24:37.374
It works on desktop, it
works on mobile really well.

00:24:37.374 --> 00:24:39.040
You can see some of
this material design

00:24:39.040 --> 00:24:41.600
take effect, where content
is first and foremost,

00:24:41.600 --> 00:24:45.046
huge transition in
between pages and content.

00:24:45.046 --> 00:24:46.920
If you click a video,
it goes to full screen,

00:24:46.920 --> 00:24:48.880
both on desktop and mobile.

00:24:48.880 --> 00:24:50.619
And so we pretty much
used every new API

00:24:50.619 --> 00:24:52.535
possible on the web
platform for this project.

00:24:52.535 --> 00:24:53.953
It's a single page
app, so you can

00:24:53.953 --> 00:24:56.250
see I'm transitioning
between pages

00:24:56.250 --> 00:24:58.790
and things are loading
dynamically on the fly.

00:24:58.790 --> 00:25:00.000
Content slides out.

00:25:00.000 --> 00:25:02.840
We also created a
custom element just

00:25:02.840 --> 00:25:04.600
to render this WebGL 3D globe.

00:25:04.600 --> 00:25:07.410
So WebGL-globe
allows you to search

00:25:07.410 --> 00:25:09.720
across the globe for
I/O Extended Events

00:25:09.720 --> 00:25:10.750
around the world.

00:25:10.750 --> 00:25:12.990
Very cool stuff.

00:25:12.990 --> 00:25:15.250
Like I said, this project
used every new API

00:25:15.250 --> 00:25:16.420
you could possibly imagine.

00:25:16.420 --> 00:25:18.050
So we touched all
the new stuff--

00:25:18.050 --> 00:25:20.520
Service Worker, Polymer,
material design,

00:25:20.520 --> 00:25:22.380
using some of the new
APIs that Google has.

00:25:22.380 --> 00:25:24.690
Google Sign-in 2.0 is a new API.

00:25:24.690 --> 00:25:27.040
We have an extensive
back end written in Go

00:25:27.040 --> 00:25:29.450
in App Engine, web
animations and promises

00:25:29.450 --> 00:25:31.184
for the material design effects.

00:25:31.184 --> 00:25:33.600
I really want to highlight the
team that created this app.

00:25:33.600 --> 00:25:35.080
It was in a very
short period of time,

00:25:35.080 --> 00:25:37.704
and I think that's testament to
some of the reusable components

00:25:37.704 --> 00:25:39.770
the Polymer team
is created for us,

00:25:39.770 --> 00:25:41.930
but it wasn't a software
engineering team at Google

00:25:41.930 --> 00:25:42.430
at all.

00:25:42.430 --> 00:25:44.160
It was our Developer
Relations team,

00:25:44.160 --> 00:25:45.680
and a couple people built this.

00:25:45.680 --> 00:25:47.430
We didn't use any
special Google sauce.

00:25:47.430 --> 00:25:49.150
We used all the
tools and techniques

00:25:49.150 --> 00:25:52.800
that you have available to you
as a third party developer.

00:25:52.800 --> 00:25:54.556
So how do you do
client side templating?

00:25:54.556 --> 00:25:56.180
How do you do a single
page application

00:25:56.180 --> 00:25:57.520
using Web Components?

00:25:57.520 --> 00:26:00.462
Well, there's an
element for that.

00:26:00.462 --> 00:26:02.120
But this was actually baked in.

00:26:02.120 --> 00:26:03.530
This one's not a custom element.

00:26:03.530 --> 00:26:05.240
This is the Template tag.

00:26:05.240 --> 00:26:07.186
So a Template tag you
can drop in a page.

00:26:07.186 --> 00:26:08.560
You can put some
markup in there.

00:26:08.560 --> 00:26:10.310
In Polymer, we have
data binding features,

00:26:10.310 --> 00:26:12.394
so you can see the
double mustaches.

00:26:12.394 --> 00:26:14.310
And you can drop a bunch
of these on your page

00:26:14.310 --> 00:26:17.400
ready to go when
you activate them.

00:26:17.400 --> 00:26:20.550
In Polymer, we extended this
with this Ref attribute.

00:26:20.550 --> 00:26:23.030
And so what happens is when
you change that Ref attribute

00:26:23.030 --> 00:26:25.960
to an idea of another
template that's on the page,

00:26:25.960 --> 00:26:29.165
that content gets used instead
of the original content.

00:26:29.165 --> 00:26:30.540
So we said, this
is kind of cool.

00:26:30.540 --> 00:26:31.998
We can change out
parts of the page

00:26:31.998 --> 00:26:34.650
on the fly using this element
that we have available to us

00:26:34.650 --> 00:26:35.370
now.

00:26:35.370 --> 00:26:37.560
Let's not have all these
templates on a single page.

00:26:37.560 --> 00:26:39.510
Let's break them out
into multiple pages

00:26:39.510 --> 00:26:41.220
and load those dynamically.

00:26:41.220 --> 00:26:42.720
So what we created
was a system that

00:26:42.720 --> 00:26:46.451
used template plus HTML imports
to dynamically load content.

00:26:46.451 --> 00:26:48.200
It's a different system
than Santa Tracker

00:26:48.200 --> 00:26:50.090
but also a really cool one.

00:26:50.090 --> 00:26:52.450
So if you load the Schedule
page in IOWA, what happens

00:26:52.450 --> 00:26:54.780
is that the server
responds with a full page.

00:26:54.780 --> 00:26:56.240
It has two
placeholder templates,

00:26:56.240 --> 00:27:00.800
one for this main
masthead area where

00:27:00.800 --> 00:27:03.866
the title of the page, and one
for the main content in blue.

00:27:03.866 --> 00:27:05.240
So by default,
you load the page,

00:27:05.240 --> 00:27:07.380
you get SEO friendly
static page.

00:27:07.380 --> 00:27:09.756
The server just gives
you a bunch of markup.

00:27:09.756 --> 00:27:11.130
Now, if you're
already in the app

00:27:11.130 --> 00:27:13.140
and you navigate to
this page, we basically

00:27:13.140 --> 00:27:16.690
take over and become a single
page application at that point.

00:27:16.690 --> 00:27:18.320
So instead of
getting a full page,

00:27:18.320 --> 00:27:21.390
we append this Partial
URL property to the URL,

00:27:21.390 --> 00:27:24.070
and that says, server, give me
template partials for that page

00:27:24.070 --> 00:27:26.530
instead of the full blown page.

00:27:26.530 --> 00:27:28.030
You can see what
the server responds

00:27:28.030 --> 00:27:30.760
with is that template
content for the masthead

00:27:30.760 --> 00:27:33.670
and the template content for
the main area in the blue.

00:27:33.670 --> 00:27:36.270
This is cool too because
the Template tag allows

00:27:36.270 --> 00:27:38.130
you to define
JavaScript, so we're

00:27:38.130 --> 00:27:41.460
allowing the page itself
to define its own load

00:27:41.460 --> 00:27:46.420
handler, anything it needs to do
to set up itself and get ready.

00:27:46.420 --> 00:27:48.840
This is a little bit of Polymer
1.0 code that does this.

00:27:48.840 --> 00:27:50.690
Is a one liner in Polymer.

00:27:50.690 --> 00:27:54.132
So you can think of this as
a dynamic script tag right

00:27:54.132 --> 00:27:55.840
where you load that
on a page on the fly,

00:27:55.840 --> 00:27:59.160
but instead of JavaScript,
we're loading an HTML file using

00:27:59.160 --> 00:28:01.130
dynamic HTML imports.

00:28:01.130 --> 00:28:02.990
So Polymer importHref
and you give it

00:28:02.990 --> 00:28:05.890
the URL of the page of the
HTML file you want to load,

00:28:05.890 --> 00:28:08.100
and you can see we're
appending that Partial URL

00:28:08.100 --> 00:28:11.740
property on the URL.

00:28:11.740 --> 00:28:14.910
So how did we achieve
material design?

00:28:14.910 --> 00:28:17.207
Well, we really
studied the spec.

00:28:17.207 --> 00:28:19.290
You see all the cool videos
in the material design

00:28:19.290 --> 00:28:22.450
specification and it really
assumes zero latency.

00:28:22.450 --> 00:28:25.090
And as web developers, we
know zero latency is just

00:28:25.090 --> 00:28:26.129
not a thing.

00:28:26.129 --> 00:28:27.670
You're going to be
dealing with jank.

00:28:27.670 --> 00:28:30.295
You're going to be dealing with
network requests, a single page

00:28:30.295 --> 00:28:31.220
application.

00:28:31.220 --> 00:28:33.270
So how did we achieve all
these fluid animations

00:28:33.270 --> 00:28:35.450
where cards are taking
over the screen,

00:28:35.450 --> 00:28:37.629
pages are transitioning
in between things,

00:28:37.629 --> 00:28:39.670
very cool ripple effects
that the material design

00:28:39.670 --> 00:28:41.480
spec has in it?

00:28:41.480 --> 00:28:45.100
What we did is we constructed
a logical animation sequence

00:28:45.100 --> 00:28:47.195
using promises and
web animations.

00:28:47.195 --> 00:28:49.070
So here's an example of
what happens when you

00:28:49.070 --> 00:28:51.540
transition to new page in IOWA.

00:28:51.540 --> 00:28:54.670
First thing we do is we run
this Run Exit Animation promise.

00:28:54.670 --> 00:28:57.660
You can see what happens is
that the top masthead area

00:28:57.660 --> 00:28:59.750
transitions between
colors of the pages

00:28:59.750 --> 00:29:02.260
and that content slides out
and fades out at the same time,

00:29:02.260 --> 00:29:04.641
so that's what
that promise does.

00:29:04.641 --> 00:29:06.390
Next one we'll call
the import page method

00:29:06.390 --> 00:29:07.431
that I just talked about.

00:29:07.431 --> 00:29:09.820
This is where that network
request is actually fetching

00:29:09.820 --> 00:29:11.490
the new content using Ajax.

00:29:13.884 --> 00:29:16.300
Next thing that happens, once
that content is ready to go,

00:29:16.300 --> 00:29:19.320
it's on the page already,
we run the enter animation.

00:29:19.320 --> 00:29:22.450
And this animation basically
slides in the new content

00:29:22.450 --> 00:29:24.890
and the content just below
it at 200 milliseconds, also

00:29:24.890 --> 00:29:27.442
fades in with that
slight parallax effect.

00:29:27.442 --> 00:29:29.400
And the last thing we
did, one these animations

00:29:29.400 --> 00:29:32.692
and dynamic content's loaded, we
allow the page to run anything

00:29:32.692 --> 00:29:34.650
it needs to so it can do
additional JavaScript.

00:29:34.650 --> 00:29:38.060
It knows at this point that
all those animations are done.

00:29:38.060 --> 00:29:41.350
So by using promises and
wrapping some calls in the Web

00:29:41.350 --> 00:29:44.500
Animations API, we were able
to logically synchronize

00:29:44.500 --> 00:29:46.989
all of this asynchronous
stuff that was going on,

00:29:46.989 --> 00:29:49.030
whether it's CSS animations
running, whether it's

00:29:49.030 --> 00:29:50.390
network requests being made.

00:29:50.390 --> 00:29:52.765
And so that's how we achieved
some of the material design

00:29:52.765 --> 00:29:54.770
effects in the app.

00:29:54.770 --> 00:29:56.240
Offline first.

00:29:56.240 --> 00:29:59.360
Really wanted to highlight
this feature in IOWA.

00:29:59.360 --> 00:30:01.770
So Service Worker really
unlocks a whole new set

00:30:01.770 --> 00:30:03.487
of capabilities
for web developers,

00:30:03.487 --> 00:30:04.945
whether it's page
caching and being

00:30:04.945 --> 00:30:07.860
able to do proper offline
push notifications

00:30:07.860 --> 00:30:08.891
for the first time ever.

00:30:08.891 --> 00:30:10.640
Something cool that
we're taking advantage

00:30:10.640 --> 00:30:14.015
of in IOWA is fact that you
can intercept network requests.

00:30:14.015 --> 00:30:16.650
So even though the user's
offline in our app,

00:30:16.650 --> 00:30:19.437
we're stashing those
requests to Analytics,

00:30:19.437 --> 00:30:21.270
storing those in Index
Database, and then we

00:30:21.270 --> 00:30:22.900
replay those when
the user's online.

00:30:22.900 --> 00:30:25.820
So we're not losing out that
valuable insight when the users

00:30:25.820 --> 00:30:28.377
don't have a network request.

00:30:28.377 --> 00:30:29.710
So first rule of Service Worker.

00:30:29.710 --> 00:30:32.420
You have to let people
know about Service Worker.

00:30:32.420 --> 00:30:35.300
What I mean by that is that
offline is totally new.

00:30:35.300 --> 00:30:37.240
People don't expect
apps to work offline.

00:30:37.240 --> 00:30:38.990
So if you load our app
for the first time,

00:30:38.990 --> 00:30:40.073
we actually tell you that.

00:30:40.073 --> 00:30:43.360
We want to you to know as a
user that this thing is going

00:30:43.360 --> 00:30:45.410
to work, so we
show a little toast

00:30:45.410 --> 00:30:48.027
that says, "future visits
will work offline."

00:30:48.027 --> 00:30:49.610
The second thing you
have to deal with

00:30:49.610 --> 00:30:52.445
is what happens if you're
at a flaky Wi-Fi connection

00:30:52.445 --> 00:30:54.320
in a conference or you
go into Airplane mode?

00:30:54.320 --> 00:30:57.040
Well, you should be able
to work offline as well.

00:30:57.040 --> 00:30:59.570
So in IOWA, we detect that
and we send a toast that says,

00:30:59.570 --> 00:31:00.316
hey, don't worry.

00:31:00.316 --> 00:31:01.690
Changes you make
to your schedule

00:31:01.690 --> 00:31:04.074
are still going to work
while you're offline.

00:31:04.074 --> 00:31:05.990
So you can browse the
schedule even though I'm

00:31:05.990 --> 00:31:06.906
in Airplane mode here.

00:31:06.906 --> 00:31:10.090
We can actually navigate to new
pages because all of the pages

00:31:10.090 --> 00:31:12.020
are pre-cached, all
the important URLs,

00:31:12.020 --> 00:31:14.440
even though I haven't
visited them before.

00:31:14.440 --> 00:31:17.000
So I can navigate to another
page, the Schedule page.

00:31:17.000 --> 00:31:18.940
I can even try to
bookmark a session.

00:31:18.940 --> 00:31:19.980
Of course, I'm offline.

00:31:19.980 --> 00:31:22.420
That's not going to work,
but we'll tell the user that.

00:31:22.420 --> 00:31:24.940
We'll store that information
in Indexed Database,

00:31:24.940 --> 00:31:26.647
and then when
they're back online,

00:31:26.647 --> 00:31:28.980
all that information is going
to be sent to our service.

00:31:28.980 --> 00:31:30.714
All that stuff you
just did totally

00:31:30.714 --> 00:31:32.880
will just work and will
inform the user that it did.

00:31:35.710 --> 00:31:38.420
Last API I want to talk
about is Notifications, also

00:31:38.420 --> 00:31:39.675
thanks to Service Worker.

00:31:39.675 --> 00:31:42.509
If you haven't seen a web page
send a notification before,

00:31:42.509 --> 00:31:43.300
it's a new feature.

00:31:43.300 --> 00:31:44.470
That's totally all right.

00:31:44.470 --> 00:31:45.636
This is what they look like.

00:31:45.636 --> 00:31:47.490
So a proper
notification integrated

00:31:47.490 --> 00:31:50.030
at the Property System level,
whether it's on desktop

00:31:50.030 --> 00:31:51.459
or whether it's on mobile.

00:31:51.459 --> 00:31:53.000
And your app doesn't
have to be open,

00:31:53.000 --> 00:31:54.150
as seen in the screenshot.

00:31:54.150 --> 00:31:56.450
You can still get
a notification.

00:31:56.450 --> 00:31:58.880
So first rule of this new
API, you have to let users

00:31:58.880 --> 00:32:00.840
know what's going on.

00:32:00.840 --> 00:32:03.070
So if you visit our
site in an app that

00:32:03.070 --> 00:32:06.210
doesn't support notifications,
the UI is pretty plain,

00:32:06.210 --> 00:32:08.150
the Settings panel doesn't
have much going on,

00:32:08.150 --> 00:32:11.160
the main page doesn't have
any special call to actions.

00:32:11.160 --> 00:32:13.090
If you visit in a
browser like Chrome 42,

00:32:13.090 --> 00:32:15.122
we actually adapt
our UI, we feature

00:32:15.122 --> 00:32:16.580
detect that you
have notifications,

00:32:16.580 --> 00:32:19.690
and we give you the option to
toggle on and off notifications

00:32:19.690 --> 00:32:20.980
across the site.

00:32:20.980 --> 00:32:23.450
We explain what that feature
is going to give to you,

00:32:23.450 --> 00:32:26.090
and we can also enable other
features like set a reminder

00:32:26.090 --> 00:32:27.270
for when Google I/O starts.

00:32:27.270 --> 00:32:30.040
That button sends
a notification.

00:32:30.040 --> 00:32:33.004
We carefully constructed
this notification experience

00:32:33.004 --> 00:32:34.920
because we know that
users probably have never

00:32:34.920 --> 00:32:36.480
gone through this
flow before so we

00:32:36.480 --> 00:32:38.410
wanted to get it right in IOWA.

00:32:38.410 --> 00:32:40.250
So if you try to
bookmark a session,

00:32:40.250 --> 00:32:41.930
say you want a reminder
when the keynote happens,

00:32:41.930 --> 00:32:43.310
we basically have
to log you in first.

00:32:43.310 --> 00:32:45.040
You have to go through
our OAuth flow.

00:32:45.040 --> 00:32:47.660
We have to know who to
send the notification to.

00:32:47.660 --> 00:32:50.790
Once that's done, we can prompt
the user's browser permission.

00:32:50.790 --> 00:32:54.260
You have to enable this
feature at the browser level.

00:32:54.260 --> 00:32:56.110
And once that's done,
the user is allowing

00:32:56.110 --> 00:32:57.360
us to send them notifications.

00:32:57.360 --> 00:33:00.300
We'll tell them that that thing
was added to their schedule

00:33:00.300 --> 00:33:04.580
and that they'll receive a
notification when I/O starts.

00:33:04.580 --> 00:33:07.030
What happens when
users disable this?

00:33:07.030 --> 00:33:09.280
They don't want to be sent
notifications from our app.

00:33:09.280 --> 00:33:13.429
Well, in this case, we'll try
to do the same exact thing,

00:33:13.429 --> 00:33:15.720
but of course, we'll modify
our messaging in that case.

00:33:15.720 --> 00:33:17.910
We'll say, hey, that thing
was added to your schedule,

00:33:17.910 --> 00:33:20.040
but maybe you want to learn
more how to enable this feature.

00:33:20.040 --> 00:33:20.945
We think it's a great feature.

00:33:20.945 --> 00:33:23.111
It's very useful to be
reminded when the I/O starts,

00:33:23.111 --> 00:33:24.970
so we give them a link
to say how to change

00:33:24.970 --> 00:33:27.030
this in the browser level.

00:33:27.030 --> 00:33:29.590
So sending notifications,
super easy.

00:33:29.590 --> 00:33:32.120
Add an event listener
for the push event.

00:33:32.120 --> 00:33:34.479
You give it a title, you
give it a body in JavaScript,

00:33:34.479 --> 00:33:36.520
and once you call the Show
Notification function,

00:33:36.520 --> 00:33:38.728
that's the thing that actually
shows the notification

00:33:38.728 --> 00:33:40.690
in the browser.

00:33:40.690 --> 00:33:43.320
In I/O, we also are listening
for the notification click.

00:33:43.320 --> 00:33:45.500
We want to reengage
users back to the site

00:33:45.500 --> 00:33:47.250
from this notification.

00:33:47.250 --> 00:33:50.050
So by doing, that we construct
a URL to their Schedule page so

00:33:50.050 --> 00:33:52.490
they can see what's
changed in the schedule.

00:33:52.490 --> 00:33:54.500
And pro tip, we're using
analytics here as well.

00:33:54.500 --> 00:33:56.594
We want to track how many
people actually reengage

00:33:56.594 --> 00:33:58.760
from that click so we know
if this feature is useful

00:33:58.760 --> 00:34:00.579
and people are using it.

00:34:00.579 --> 00:34:01.870
So I know that was really fast.

00:34:01.870 --> 00:34:03.660
That's six months'
worth of work.

00:34:03.660 --> 00:34:06.544
Both of these apps are still
up on their Google.com URLs.

00:34:06.544 --> 00:34:07.710
They're built using Polymer.

00:34:07.710 --> 00:34:10.739
They're open source today so you
can check them out on GitHub.

00:34:10.739 --> 00:34:12.489
I'm going to throw it
over to Addy Osmani.

00:34:12.489 --> 00:34:14.822
It's his first Google I/O.
Please give him warm welcome.

00:34:14.822 --> 00:34:17.155
[APPLAUSE]

00:34:22.832 --> 00:34:23.790
ADDY OSMANI: Hey, guys.

00:34:23.790 --> 00:34:25.070
My name is Addy Osmani.

00:34:25.070 --> 00:34:27.960
I work on developer
tooling for Polymer.

00:34:27.960 --> 00:34:30.750
So the other week,
my friend had a baby

00:34:30.750 --> 00:34:32.550
and I thought I'd
do something nice,

00:34:32.550 --> 00:34:35.060
like maybe draw a
sketch of their baby.

00:34:35.060 --> 00:34:37.670
So I went to Google.com
and I looked up,

00:34:37.670 --> 00:34:40.330
how do I draw a baby?

00:34:40.330 --> 00:34:42.914
Now, if you take a look
at most of the tutorials

00:34:42.914 --> 00:34:45.330
for drawing a baby, they start
off a little bit like this.

00:34:45.330 --> 00:34:47.969
Just draw a circle
and you'll be fine.

00:34:47.969 --> 00:34:50.725
Now, once you see this,
you're like, I can do this.

00:34:50.725 --> 00:34:52.570
This is pretty achievable.

00:34:52.570 --> 00:34:54.880
And with all the hope in
the world in your eyes,

00:34:54.880 --> 00:34:57.499
you scroll down to step two.

00:34:57.499 --> 00:34:58.540
You're like, oh, come on.

00:34:58.540 --> 00:34:59.617
I can do this.

00:34:59.617 --> 00:35:00.700
This is going to be great.

00:35:00.700 --> 00:35:06.170
And then you get to step two,
and when you get to step two,

00:35:06.170 --> 00:35:08.280
it looks like this
baby is mocking you.

00:35:11.880 --> 00:35:13.980
This isn't setting
you up for success.

00:35:13.980 --> 00:35:16.060
You want better rails
than that because when

00:35:16.060 --> 00:35:18.640
your getting started experience
looks a little bit like this,

00:35:18.640 --> 00:35:21.560
the end product looks like this.

00:35:21.560 --> 00:35:25.630
This is more like what
I would end up drawing.

00:35:25.630 --> 00:35:28.630
Now on the Polymer team,
we wanted to do better,

00:35:28.630 --> 00:35:30.760
so we took a look at
all of the work we've

00:35:30.760 --> 00:35:33.900
been doing over the last year
in projects like the Google I/O

00:35:33.900 --> 00:35:37.440
app, Google Web Starter Kit,
and the Google Santa Tracker.

00:35:37.440 --> 00:35:39.570
And we took all of
our learnings and we

00:35:39.570 --> 00:35:43.690
put it into a brand new project
that we're releasing today.

00:35:43.690 --> 00:35:46.580
We're calling it
Polymer Starter Kit.

00:35:46.580 --> 00:35:50.420
Now, Polymer Starter Kit is
an opinionated starting point

00:35:50.420 --> 00:35:54.291
for building ambitious
apps using Polymer.

00:35:54.291 --> 00:35:56.280
It looks a little bit like this.

00:35:56.280 --> 00:35:59.510
You can go and download it
today on developers.google.com

00:35:59.510 --> 00:36:03.290
in the brand new Tooling
section we've got there.

00:36:03.290 --> 00:36:06.830
Let's dive into what Polymer
Starter Kit comes with.

00:36:06.830 --> 00:36:09.160
Now, Polymer Starter Kit
comes with first class support

00:36:09.160 --> 00:36:10.236
for material design.

00:36:10.236 --> 00:36:12.110
When you're trying to
build a mobile web app,

00:36:12.110 --> 00:36:13.980
there are few specific
pieces you always

00:36:13.980 --> 00:36:16.130
end up needing,
things like toolbars,

00:36:16.130 --> 00:36:19.320
header panels, all
of that awesomeness.

00:36:19.320 --> 00:36:21.370
Now, Polymer Starter
Kit comes with support

00:36:21.370 --> 00:36:24.040
for routing and
multiple views as well.

00:36:24.040 --> 00:36:26.090
Earlier, Matt talked
about our brand

00:36:26.090 --> 00:36:30.280
new theming system using
CSS Custom Properties.

00:36:30.280 --> 00:36:32.020
Now, everybody's
got a color scheme

00:36:32.020 --> 00:36:34.740
that they love using, and
using CSS Custom Properties,

00:36:34.740 --> 00:36:38.050
you can easily go and re-theme
your entire application

00:36:38.050 --> 00:36:39.990
in just a few lines of code.

00:36:39.990 --> 00:36:41.740
This is a really,
really powerful system.

00:36:41.740 --> 00:36:43.865
We think it's going to make
it super simple for you

00:36:43.865 --> 00:36:46.630
to customize your apps.

00:36:46.630 --> 00:36:50.980
Google is really big on mobile,
and with Polymer Starter Kit,

00:36:50.980 --> 00:36:52.480
we wanted to make
sure that you have

00:36:52.480 --> 00:36:54.094
good rails for the
mobile web, which

00:36:54.094 --> 00:36:56.510
is why we include first class
support for things like Meta

00:36:56.510 --> 00:36:59.570
Theme Color, so colorizing
the address bar,

00:36:59.570 --> 00:37:01.860
and Web App Install Banners
so your users can stay

00:37:01.860 --> 00:37:03.960
engaged with your application.

00:37:03.960 --> 00:37:06.060
That's already set up for you.

00:37:06.060 --> 00:37:09.420
We also include good defaults
for icons cross-device.

00:37:09.420 --> 00:37:12.489
So whether you're on Android,
iOS, or Windows phone,

00:37:12.489 --> 00:37:14.780
you've got good defaults
there that you can go and then

00:37:14.780 --> 00:37:16.480
customize.

00:37:16.480 --> 00:37:18.940
Now this year, the
material design team

00:37:18.940 --> 00:37:21.990
published their brand new
guidelines on adaptive design.

00:37:21.990 --> 00:37:24.110
This builds on
responses and tries

00:37:24.110 --> 00:37:27.670
to look at how we can customize
interactions that also

00:37:27.670 --> 00:37:29.870
work great depending on
the context and the device

00:37:29.870 --> 00:37:31.020
that we're on.

00:37:31.020 --> 00:37:33.100
So what are Polymer doing there?

00:37:33.100 --> 00:37:35.390
Well, the first thing
we're looking at

00:37:35.390 --> 00:37:38.770
is how we can improve
support for responsiveness.

00:37:38.770 --> 00:37:40.360
The material design
guidelines now

00:37:40.360 --> 00:37:44.390
give you good guidelines around
media queries and breakpoints,

00:37:44.390 --> 00:37:47.440
so Polymer Starter Kit includes
all of these defaults set up

00:37:47.440 --> 00:37:48.250
for you.

00:37:48.250 --> 00:37:49.910
Now, these defaults
are just one set

00:37:49.910 --> 00:37:52.340
of breakpoints that work well
for us based on the devices

00:37:52.340 --> 00:37:54.580
that we support, but
you can go in and easily

00:37:54.580 --> 00:37:57.860
customize them for your needs.

00:37:57.860 --> 00:37:59.520
How many people
here love templates?

00:37:59.520 --> 00:38:00.520
You guys like templates?

00:38:00.520 --> 00:38:01.700
Everybody likes templates.

00:38:01.700 --> 00:38:03.820
I love templates because they're
a little bit like a coloring

00:38:03.820 --> 00:38:04.370
book.

00:38:04.370 --> 00:38:06.540
You can go in and
very easily start just

00:38:06.540 --> 00:38:08.190
putting in your
content and building up

00:38:08.190 --> 00:38:11.800
your app, which is why with 1.0,
we're also introducing a brand

00:38:11.800 --> 00:38:14.370
new set of templates
for your applications,

00:38:14.370 --> 00:38:16.990
things like navigation
card layouts,

00:38:16.990 --> 00:38:19.940
navigation list details for
building things like contact

00:38:19.940 --> 00:38:22.209
apps, as well as
wider card views.

00:38:22.209 --> 00:38:24.250
Now, this is only a small
subset of the templates

00:38:24.250 --> 00:38:26.620
that are available today.

00:38:26.620 --> 00:38:30.980
Now earlier, Eric talked about
the importance of offline.

00:38:30.980 --> 00:38:35.350
In 2015, the reality is if
your app doesn't work offline,

00:38:35.350 --> 00:38:38.440
you really don't have a
good mobile web experience.

00:38:38.440 --> 00:38:40.770
The good news is the
Polymer Starter Kit

00:38:40.770 --> 00:38:43.612
is offline first by default.

00:38:43.612 --> 00:38:46.070
You load an application built
using Polymer Starter Kit up,

00:38:46.070 --> 00:38:49.450
you go into Airplane mode,
go offline, load it up,

00:38:49.450 --> 00:38:52.520
and you can still access
your entire application.

00:38:52.520 --> 00:38:54.420
This is with zero
configuration necessary.

00:38:54.420 --> 00:38:56.380
It's already set up for you.

00:38:56.380 --> 00:38:59.690
Go in, navigate any of your
routes, and the content all

00:38:59.690 --> 00:39:00.360
still works.

00:39:03.519 --> 00:39:05.060
Now, when it comes
to Service Worker,

00:39:05.060 --> 00:39:07.990
it's a fantastic set of
APIs, but there's still

00:39:07.990 --> 00:39:11.990
a lot of configuration
required to get this set up.

00:39:11.990 --> 00:39:14.380
Thankfully, there's
an element for that.

00:39:17.040 --> 00:39:20.220
We dive into the
Polymer Elements Catalog

00:39:20.220 --> 00:39:22.137
that Taylor was
talking about earlier.

00:39:22.137 --> 00:39:24.220
We can see that we've got
access to Service Worker

00:39:24.220 --> 00:39:26.740
Caching with the
Platinum set of elements.

00:39:26.740 --> 00:39:29.860
So here, we're declaratively
registering our Service Worker

00:39:29.860 --> 00:39:33.577
and setting up caching strategy
in just a few lines of code.

00:39:33.577 --> 00:39:35.285
Here, I'm saying that
my caching strategy

00:39:35.285 --> 00:39:37.210
is going to be
network first and just

00:39:37.210 --> 00:39:39.430
passing in a list
of the files that I

00:39:39.430 --> 00:39:41.590
would like to be pre-cached.

00:39:41.590 --> 00:39:43.600
Let's talk about
productionizing apps.

00:39:43.600 --> 00:39:45.320
Now, we all know
about the importance

00:39:45.320 --> 00:39:46.930
of the build process.

00:39:46.930 --> 00:39:49.245
A build process is a
promise to your users

00:39:49.245 --> 00:39:51.370
that you're going to make
sure that whatever you're

00:39:51.370 --> 00:39:55.680
shipping down the line is as
small and as fast as possible.

00:39:55.680 --> 00:39:58.150
Now, on the Polymer team,
we're big fans of Gulp.

00:39:58.150 --> 00:40:01.540
it's a fantastic
streaming build system.

00:40:01.540 --> 00:40:03.230
And so out of the
box, we include

00:40:03.230 --> 00:40:06.370
support for unit testing using
a brand new version of Web

00:40:06.370 --> 00:40:09.680
Component Tester, quality
and testing, minification

00:40:09.680 --> 00:40:13.200
using tools like Vulcanize,
and cross-device reload using

00:40:13.200 --> 00:40:14.610
Browser Sync.

00:40:14.610 --> 00:40:16.530
Now, Browser Sync is
particularly awesome

00:40:16.530 --> 00:40:18.113
because it means
that if you're making

00:40:18.113 --> 00:40:20.390
any changes to your Polymer
Starter Kit application,

00:40:20.390 --> 00:40:22.860
you'll get to see those
changes propagate across all

00:40:22.860 --> 00:40:24.930
of your devices at once.

00:40:24.930 --> 00:40:28.326
It'll also synchronize things
like clicks and scrolls,

00:40:28.326 --> 00:40:29.700
making it really,
really pleasant

00:40:29.700 --> 00:40:32.720
to cross-device development.

00:40:32.720 --> 00:40:34.280
Now, you've seen
Polymer Starter Kit,

00:40:34.280 --> 00:40:36.280
but you might be wondering,
well, this is great,

00:40:36.280 --> 00:40:38.780
but has anyone actually tried
building a real app with it,

00:40:38.780 --> 00:40:41.110
something that's nontrivial?

00:40:41.110 --> 00:40:43.200
So let's dive into
our chemistry set.

00:40:43.200 --> 00:40:45.220
We've got a lot of elements
that are available.

00:40:45.220 --> 00:40:47.610
Let's see what they can do.

00:40:47.610 --> 00:40:50.070
What if we were to put
together an application then

00:40:50.070 --> 00:40:54.090
we would use on the go,
something like an RSS reader?

00:40:54.090 --> 00:40:55.050
So we did.

00:40:55.050 --> 00:40:56.150
This is Paper Reader.

00:40:56.150 --> 00:40:57.980
It's built using
Polymer Starter Kit.

00:40:57.980 --> 00:41:00.070
It allows you to log
in using your Google

00:41:00.070 --> 00:41:01.910
account, your GitHub
account, any service

00:41:01.910 --> 00:41:03.880
that you have an
existing account with,

00:41:03.880 --> 00:41:06.180
and you can go and
view all the stories

00:41:06.180 --> 00:41:07.740
that you love following along.

00:41:07.740 --> 00:41:10.510
Here we can see there's a ton
of I/O news out at the moment.

00:41:10.510 --> 00:41:12.570
I can also go and
favorite feeds.

00:41:12.570 --> 00:41:15.200
I can set feeds to
be read or unread,

00:41:15.200 --> 00:41:17.240
and all the actions
that you would expect

00:41:17.240 --> 00:41:19.235
to see in a normal RSS reader.

00:41:19.235 --> 00:41:20.880
Now, for this type
of application,

00:41:20.880 --> 00:41:23.160
one of the first things
you need is the ability

00:41:23.160 --> 00:41:25.430
to pull in Google Feeds.

00:41:25.430 --> 00:41:27.390
Thankfully, there's
a Google Feeds API,

00:41:27.390 --> 00:41:31.510
and I'm glad to say that
there's an element that as well.

00:41:31.510 --> 00:41:33.820
The Google Feeds element,
which declaratively

00:41:33.820 --> 00:41:35.970
allows you to go
and say, download me

00:41:35.970 --> 00:41:39.550
this particular RSS,
Atom, or Media RSS feed,

00:41:39.550 --> 00:41:42.450
to specify the URL and the count
of entries you'd like returned,

00:41:42.450 --> 00:41:44.760
and it can go and
help you very quickly

00:41:44.760 --> 00:41:48.180
add content to your page.

00:41:48.180 --> 00:41:50.075
Now, I mentioned the
idea of favoriting

00:41:50.075 --> 00:41:51.950
inside this application
and setting something

00:41:51.950 --> 00:41:53.160
to Read or Unread.

00:41:53.160 --> 00:41:56.050
That requires a back
end of some sort.

00:41:56.050 --> 00:41:58.450
Now, on the Polymer
team, we love

00:41:58.450 --> 00:42:00.700
using Firebase,
which is why there's

00:42:00.700 --> 00:42:03.740
a brand new set of elements
aside the Google Web Components

00:42:03.740 --> 00:42:08.030
product catalog for
Firebase as well.

00:42:08.030 --> 00:42:11.490
The Firebase element allows you
to authenticate using Google,

00:42:11.490 --> 00:42:12.675
GitHub, and other services.

00:42:12.675 --> 00:42:14.550
So here, for example,
in a few lines of code,

00:42:14.550 --> 00:42:17.610
I'm connecting up to a Firebase
instance, setting a provider,

00:42:17.610 --> 00:42:20.010
so I want to use
my Google account,

00:42:20.010 --> 00:42:22.180
and this just allows
me to authenticate.

00:42:22.180 --> 00:42:25.800
I can then use other elements
in this set to get and set data

00:42:25.800 --> 00:42:26.724
from Firebase, too.

00:42:26.724 --> 00:42:28.640
So here, I'm just
connecting up to an instance

00:42:28.640 --> 00:42:31.110
and I'm able to loop over
that data and just output

00:42:31.110 --> 00:42:32.800
it to the page.

00:42:32.800 --> 00:42:34.550
We talked about the
importance of offline.

00:42:34.550 --> 00:42:37.990
Here I've got offline and
Airplane mode in Paper Reader.

00:42:37.990 --> 00:42:40.185
I'm going to refresh
the page and I'm

00:42:40.185 --> 00:42:41.990
able to see all of my stories.

00:42:41.990 --> 00:42:44.880
I'm able to browse through
stories I haven't seen before.

00:42:44.880 --> 00:42:48.050
I'm able to go in and
view individual entries.

00:42:48.050 --> 00:42:50.280
And this just means
that as I'm on the go,

00:42:50.280 --> 00:42:52.570
I can easily use this stuff.

00:42:52.570 --> 00:42:55.010
And there's, of course, an
element for this as well,

00:42:55.010 --> 00:42:58.430
the Platinum Service Workaround,
as we showed you earlier.

00:42:58.430 --> 00:43:00.490
Now, push
notifications are huge.

00:43:00.490 --> 00:43:02.740
They allow your users
to opt in to getting

00:43:02.740 --> 00:43:07.340
timely messages about
things that they care about.

00:43:07.340 --> 00:43:11.280
Here, we've got Polymer Starter
Kit receiving a notification

00:43:11.280 --> 00:43:12.950
about new stories.

00:43:12.950 --> 00:43:15.200
I can go in just tap
this notification,

00:43:15.200 --> 00:43:17.220
and I can view any
of the new stories

00:43:17.220 --> 00:43:20.700
that I haven't read just yet,
and they'll just show up.

00:43:20.700 --> 00:43:23.110
Now, there's an
element for this, too,

00:43:23.110 --> 00:43:25.990
the Push Notification Platinum
elements, which declaratively

00:43:25.990 --> 00:43:27.990
allow me to set up
push notifications

00:43:27.990 --> 00:43:30.535
and trigger them inside my
application's life cycle.

00:43:30.535 --> 00:43:32.410
In just a few lines of
code, we get something

00:43:32.410 --> 00:43:35.214
that's really, really powerful.

00:43:35.214 --> 00:43:36.630
So we've seen
Polymer Starter Kit.

00:43:36.630 --> 00:43:39.550
It comes with
components, layout,

00:43:39.550 --> 00:43:41.510
theming and build
tools, everything

00:43:41.510 --> 00:43:43.590
you need to get started.

00:43:43.590 --> 00:43:45.780
So you're in the driving now.

00:43:45.780 --> 00:43:47.430
You've got a whole
lot of elements

00:43:47.430 --> 00:43:50.010
available at your disposal.

00:43:50.010 --> 00:43:52.590
There's an element
for many things.

00:43:52.590 --> 00:43:54.550
What are you going to build?

00:43:54.550 --> 00:43:57.068
With that, I'd like to
hand it back to Matt.

00:43:57.068 --> 00:44:00.062
[APPLAUSE]

00:44:06.389 --> 00:44:08.180
MATTHEW MCNULTY: So
for the last two years,

00:44:08.180 --> 00:44:11.410
Polymer has been about promise--
the promise of Web Components,

00:44:11.410 --> 00:44:13.700
the promise of
interoperability, the promise

00:44:13.700 --> 00:44:16.090
of this declarative renaissance.

00:44:16.090 --> 00:44:17.930
Now that promise is reality.

00:44:17.930 --> 00:44:20.660
Web Components have been
shipping in Chrome for a year.

00:44:20.660 --> 00:44:24.430
There's a brand new, production
ready Polymer out today.

00:44:24.430 --> 00:44:26.740
Google is using Polymer,
and Taylor showed you

00:44:26.740 --> 00:44:29.530
a selection of major Google
properties using it today,

00:44:29.530 --> 00:44:31.840
like YouTube, Play
Music, and Translate,

00:44:31.840 --> 00:44:34.446
and there's a whole lot more.

00:44:34.446 --> 00:44:36.320
Third parties are using
Polymer in production

00:44:36.320 --> 00:44:39.732
today, like Salesforce,
Atavist, and Vaadin.

00:44:39.732 --> 00:44:41.940
The Santa Tracker and I/O
Web App are offline enabled

00:44:41.940 --> 00:44:45.340
and totally awesome,
and Polymer Starter Kit

00:44:45.340 --> 00:44:47.369
can get you started today.

00:44:47.369 --> 00:44:48.660
And this is just the beginning.

00:44:48.660 --> 00:44:50.993
So we've got a lot more
features coming at a rapid pace,

00:44:50.993 --> 00:44:53.450
ones we had to leave on the
cutting room floor for 1.0,

00:44:53.450 --> 00:44:56.907
as well as more product
lines and elements.

00:44:56.907 --> 00:44:58.490
For the very latest
and to learn more,

00:44:58.490 --> 00:45:00.760
go to polymer-project.org
or our Slack channel,

00:45:00.760 --> 00:45:02.700
where you can talk
to the team itself.

00:45:02.700 --> 00:45:04.510
And we're almost out of time,
but we've got so much more

00:45:04.510 --> 00:45:07.134
to show that we almost need our
own conference just for Polymer

00:45:07.134 --> 00:45:08.330
and the web.

00:45:08.330 --> 00:45:11.527
[APPLAUSE]

00:45:11.527 --> 00:45:12.860
And there's an element for that.

00:45:12.860 --> 00:45:13.550
Oh wait, sorry.

00:45:13.550 --> 00:45:16.760
There's a conference for that.

00:45:16.760 --> 00:45:19.410
So join us for the Polymer
Summit on September 15

00:45:19.410 --> 00:45:20.080
in Amsterdam.

00:45:20.080 --> 00:45:22.535
[APPLAUSE]

00:45:25.970 --> 00:45:27.220
That's a picture of the venue.

00:45:27.220 --> 00:45:28.761
It's this awesome
venue on the water.

00:45:28.761 --> 00:45:31.070
So join us for a full day
of learning about Polymer

00:45:31.070 --> 00:45:33.569
and cutting edge web development
from the people who know it

00:45:33.569 --> 00:45:34.970
best, the Polymer Chrome teams.

00:45:34.970 --> 00:45:37.320
So we'll have more info
on that in the next month.

00:45:37.320 --> 00:45:40.110
There's a bit.ly link on
there, bit.ly/polymer-summit,

00:45:40.110 --> 00:45:43.834
if you want to register
for information today.

00:45:43.834 --> 00:45:45.625
Just for a brief moment
before we conclude,

00:45:45.625 --> 00:45:47.541
I'd like to take a moment
to thank the Polymer

00:45:47.541 --> 00:45:50.260
team for making today possible
with a whole lot a late nights

00:45:50.260 --> 00:45:52.930
and weekends, especially
lately, even last night.

00:45:52.930 --> 00:45:55.035
So please join me
in thanking them.

00:45:55.035 --> 00:45:58.430
[APPLAUSE]

00:46:03.280 --> 00:46:07.860
And more importantly, be
nice if you find bugs.

00:46:07.860 --> 00:46:09.617
So that's all the time we have.

00:46:09.617 --> 00:46:11.200
Thanks and enjoy the
rest of the show.

00:46:11.200 --> 00:46:12.610
We have to get out of
here really quickly,

00:46:12.610 --> 00:46:14.860
but if you find us out there,
we can answer questions.

00:46:14.860 --> 00:46:15.910
Thanks.

