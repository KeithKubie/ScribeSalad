WEBVTT
Kind: captions
Language: en

00:00:04.150 --> 00:00:07.560
Now, the video tag is not going to be alone
on the screen.

00:00:07.560 --> 00:00:12.740
Here I have added a few more things. Except
from the video, though, there are no images

00:00:12.740 --> 00:00:20.289
on this screen.
The heading here is Web font, selectable font.

00:00:20.289 --> 00:00:27.699
The graphics here is SVG. And you can see
that he nods in approval for WebM here. This

00:00:27.699 --> 00:00:33.090
is done with CSS transitions.
This is also CSS transitions down here. We

00:00:33.090 --> 00:00:37.090
can do a whole lot declaratively now without
the need for JavaScript.

00:00:37.090 --> 00:00:41.510
There is some JavaScript higher, though. You
can see the national anthem has been rendered

00:00:41.510 --> 00:00:46.180
at the bottom here and that's done in the
canvas element with a little JavaScript library

00:00:46.180 --> 00:00:52.400
to render musical notation.
So all of this is coming together now.

00:00:52.400 --> 00:00:59.550
We think video, being a first-class citizen
will join the other content types we have

00:00:59.550 --> 00:01:04.939
and we will have very rich Web pages in HTML
and CSS 3.

00:01:04.939 --> 00:01:10.940
My prediction is if we use these techniques
right we can get rid of half of the images

00:01:10.940 --> 00:01:15.430
for the Web, because they are mostly there
for styling purposes, but by adding all this

00:01:15.430 --> 00:01:26.550
video stuff, there are still going to be lots
of images out there.

00:01:26.550 --> 00:01:32.990
So to the Web community, I'd like to say start
using this. We need to go out with our video

00:01:32.990 --> 00:01:37.170
cameras. We all have video cameras in our
pockets, and we should do it.

00:01:37.170 --> 00:01:43.280
This guy in Germany just went to his local
zoo and filmed the octopus, and it's fantastic

00:01:43.280 --> 00:01:50.370
how this video really increases the educational
value of Wikipedia or whatever kind of content

00:01:50.370 --> 00:01:58.590
you are doing. The video is truly amazing.
To Google, I would like to say thank you.

00:01:58.590 --> 00:02:05.470
It's very civil of to you spend time and money
getting WebM off the ground, releasing it

00:02:05.470 --> 00:02:11.090
to the open. And I look forward to working
with Google in the future to make sure that

00:02:11.090 --> 00:02:17.749
the Web remains open, to be used for all sorts
of browser, with all sorts of content.

00:02:17.749 --> 00:02:25.639
At Opera, we put the Web into all sorts of
phones. We are on hundreds of different phone

00:02:25.639 --> 00:02:30.900
sets, reaching millions of people who would
never otherwise have video access. And we

00:02:30.900 --> 00:02:36.840
truly believe that Web access is going to
be one of the human rights of the century.

00:02:36.840 --> 00:02:40.510
Thank you.
[ Applause ]

00:02:40.510 --> 00:02:51.510
&gt;&gt;Sundar Pichai: Thanks, Mike and Hakon.
So it's really exciting. One of the core tenets

00:02:51.510 --> 00:02:57.989
which underlies the Web success is that it's
based on open standards like HTML, TCP/IP,

00:02:57.989 --> 00:03:03.150
JavaScript, et cetera and it's great to see
video get that option as well.

00:03:03.150 --> 00:03:11.239
So for an effort like this to be successful,
we really need the support of the entire industry

00:03:11.239 --> 00:03:14.779
to make this happen. So I guess I am on the
wrong slide.

00:03:14.779 --> 00:03:19.650
So we have been reaching out to many, many
partners. And we have received overwhelming

00:03:19.650 --> 00:03:23.930
support, so we are very grateful for that.
I want to call out a few people.

00:03:23.930 --> 00:03:29.290
First of all, we wouldn't be able to do this
today without the support of people like the

00:03:29.290 --> 00:03:33.279
open source efforts like Vorbis and Theora.
So we are very grateful to what they have

00:03:33.279 --> 00:03:42.200
done, and we are looking forward to working
with them.

00:03:42.200 --> 00:03:48.349
Secondly, for VP8 and WebM to succeed, it's
really important that we have hardware support.

00:03:48.349 --> 00:03:53.419
Especially given how many mobile devices are
getting connected to the Web and serving videos.

00:03:53.419 --> 00:03:58.209
So hardware is very, very important, and we
are working with many, many hardware partners

00:03:58.209 --> 00:04:02.949
and publishers. You can see the names on the
list. And we are working very hard to make

00:04:02.949 --> 00:04:10.559
a highly optimized RTL freely available soon
to our hardware partners.

00:04:10.559 --> 00:04:17.820
So we have talked about HTML5 APIs. How modern
browsers are supporting these APIs and given

00:04:17.820 --> 00:04:22.420
you examples of real-world applications.
We have more examples on the way but at this

00:04:22.420 --> 00:04:27.690
point I would like to invite Kevin Lynch,
CTO of Adobe. Adobe has been doing a lot of

00:04:27.690 --> 00:04:33.590
work to support HTML5, including providing
tools which are really important for developers.

00:04:33.590 --> 00:04:36.730
So let me invite Kevin Lynch to the stage.
[ Applause ]

00:04:36.730 --> 00:04:49.460
&gt;&gt;Kevin Lynch: It's great to be here with
all of you today at Google I/O. HTML5 is great.

00:04:49.460 --> 00:04:53.360
It's a great move forward for HTML on the
Web. And seeing the examples here this morning

00:04:53.360 --> 00:04:59.090
it was a lot of fun seeing it come along and
what's possible now in HTML.

00:04:59.090 --> 00:05:03.620
At Adobe we have been for 25 years now enabling
people to express themselves using a variety

00:05:03.620 --> 00:05:07.870
of technologies. And it's really fun to see
new technologies come out like this that people

00:05:07.870 --> 00:05:11.680
with take advantage of in expressing themselves,
and we are really excited to work on enabling

00:05:11.680 --> 00:05:15.509
that to happen.
Of course we work on a variety of technologies

00:05:15.509 --> 00:05:21.289
at Adobe, and today I want to focus on HTML5
and what we are doing around that technology.

00:05:21.289 --> 00:05:24.361
And I am going to give you three examples
of some of the work we are doing in support

00:05:24.361 --> 00:05:28.120
of HTML5.
So the first thing I want to show you is what

00:05:28.120 --> 00:05:34.849
we are doing in Dreamweaver. And Dreamweaver
is the most popular pro HTML editing tool

00:05:34.849 --> 00:05:39.259
besides Notepad.
And I would like to show you some stuff we

00:05:39.259 --> 00:05:43.550
are doing in here. This is a Web site we have
mocked up, and one of the areas that we have

00:05:43.550 --> 00:05:48.639
been really looking at here in support of
HTML is how do you actually do this with HTML5

00:05:48.639 --> 00:05:52.199
across screens? Because now, obviously, we
are all start to go target multiple devices.

00:05:52.199 --> 00:05:58.030
So we are working here with HTML5 and a new
capability that we're adding to Dreamweaver

00:05:58.030 --> 00:06:04.090
CS5, and it's called Multiscreen Preview.
What this enables you to do is see a three-up

00:06:04.090 --> 00:06:07.439
of your Web site design so you can understand
how it's going to look across these devices.

00:06:07.439 --> 00:06:12.060
You can see right now it doesn't look that
good across these devices, but you can use

00:06:12.060 --> 00:06:16.069
CSS to customize your design. So what we are
doing is making it really easy to hook up

00:06:16.069 --> 00:06:21.629
alternate CSS style sheets based on media
queries. So if I want to have a phone-sized

00:06:21.629 --> 00:06:27.969
one, a tablet-sized one, and maybe a desktop-sized
one, I can set the width of each of these

00:06:27.969 --> 00:06:32.090
different style sheets so when it hits that
width, it will show that particular style

00:06:32.090 --> 00:06:36.710
sheet with the design. And now you can see
your design in three different formats. The

00:06:36.710 --> 00:06:41.590
same HTML5 code underneath, but now you are
able to see three different renditions with

00:06:41.590 --> 00:06:44.009
CSS.
In fact, doing this production right now,

00:06:44.009 --> 00:06:47.009
it's hard to understand how your stuff is
working. You have to keep trying it on all

00:06:47.009 --> 00:06:51.610
these different devices. We support navigation
here, so if I want to click, I can start playing

00:06:51.610 --> 00:06:54.590
through my site and see where I still need
to work on my site some more.

00:06:54.590 --> 00:06:59.090
This is going to be a big productivity increase
for people trying to do HTML5 across devices.

00:06:59.090 --> 00:07:07.999
In addition to HTML5 work across devices,
you can also do code editing. Code completion,

00:07:07.999 --> 00:07:13.849
supporting things like the nav tag and other
areas of HTML5, but also doing CSS things.

00:07:13.849 --> 00:07:18.249
For example, when I am changing this page
here, and you can see it changing between

00:07:18.249 --> 00:07:21.530
the different style sheets now, even live
design view. So as you are editing the code,

00:07:21.530 --> 00:07:25.509
you can see the different views live while
you are doing it. And say I want to edit this

00:07:25.509 --> 00:07:30.039
tablet one, I can open up the CSS for it,
and right now there is not much of an effect

00:07:30.039 --> 00:07:37.290
on these, but if I want to, I can actually
make this go bigger here, if I want to. Let

00:07:37.290 --> 00:07:43.009
me get the tablet one. There you go. It's
popping up right there, but it's not very

00:07:43.009 --> 00:07:47.509
smooth. So I can add transition. Part of the
new work that's going on in CSS is support

00:07:47.509 --> 00:07:51.849
for transitions. You can see I have got code
completion for all the new attributes in CSS.

00:07:51.849 --> 00:07:58.699
So I can do a Web kit transition here. If
I want to make it do maybe half a second transition,

00:07:58.699 --> 00:08:02.500
I can go and roll over, and now you can see
I get a smooth rollover rather than the jerky

00:08:02.500 --> 00:08:05.599
one from before.
That's supporting all the new transition effects

00:08:05.599 --> 00:08:10.030
in CSS in live view inside Dreamweaver so
you can start editing, and of course this

00:08:10.030 --> 00:08:14.139
does gradual enhancement as you have browsers
that support these versus ones that don't.

00:08:14.139 --> 00:08:17.639
But it works consistently now in the authoring
tool.

00:08:17.639 --> 00:08:21.889
The other thing we have been looking at is
how do we support enabling graphics inside

00:08:21.889 --> 00:08:25.850
the authoring environment some more. Let me
show you another page in the site. And this

00:08:25.850 --> 00:08:30.540
is a table that has some availability for
the one table that's in this cafÃ©. And

00:08:30.540 --> 00:08:34.430
you can see it's booked or its free. It would
be better if I had a picture showing the availability

00:08:34.430 --> 00:08:39.780
here so let's go over to illustrator. And
illustrator already supports SVG.

00:08:39.780 --> 00:08:44.610
We're working on some enhancements, though.
And here is a graphic of a time clock, it's

00:08:44.610 --> 00:08:48.980
just a bunch of shapes and colors. And I am
going to actually connect this with JavaScript

00:08:48.980 --> 00:08:53.420
and CSS and make it a dynamic clock that shows
the free and busy times at the cafÃ©.

00:08:53.420 --> 00:08:59.030
And to first set the two different states,
I'm going to select the fill color here in

00:08:59.030 --> 00:09:02.560
illustrator. And from illustrator I am going
to create a CSS style. And this is going to

00:09:02.560 --> 00:09:06.540
represent the busy times, so I will name it
"busy." Now I am going to select this other

00:09:06.540 --> 00:09:11.230
one over here, the green one, and I am going
to make that a CSS style that says "free."

00:09:11.230 --> 00:09:14.880
And now my JavaScript code can use those CSS
styles and apply the right color to each of

00:09:14.880 --> 00:09:24.150
the different wedges.
Let me export this as an SVG file.

00:09:24.150 --> 00:09:29.180
Okay. Now I am going to be able to go back
into Dreamweaver and I am going to be able

00:09:29.180 --> 00:09:33.270
to insert this on the page. So here is where
the table is and the JavaScript code reads

00:09:33.270 --> 00:09:39.960
the table and updates the SVG based on that.
So let's insert the SVG. Click, insert SVG,

00:09:39.960 --> 00:09:46.450
get my image, there's the clock, import it,
there's the object in SVG. And now when I

00:09:46.450 --> 00:09:50.971
preview this inside the browser, it should
show the clock. So we have the free busy times

00:09:50.971 --> 00:09:55.040
now showing with JavaScript updating the SVG
with CSS style sheets, and of course it's

00:09:55.040 --> 00:09:58.200
showing the current time, too.
So that's an example of how we are working

00:09:58.200 --> 00:10:04.970
to smoothly integrate graphics editing and
HTML5 in a really seamless way. This is something

00:10:04.970 --> 00:10:05.910
we are working on inside Illustrator.

