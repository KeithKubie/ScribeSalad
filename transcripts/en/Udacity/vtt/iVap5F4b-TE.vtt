WEBVTT
Kind: captions
Language: en

00:00:00.250 --> 00:00:02.680
So to summarize the facilities of the

00:00:02.680 --> 00:00:04.886
perimeters available in the spring system. Object

00:00:04.886 --> 00:00:09.534
orientation, object technology permeates the entire operating

00:00:09.534 --> 00:00:13.090
system design. Its used as a system structuring

00:00:13.090 --> 00:00:17.700
mechanism in constructing a network operating system.

00:00:17.700 --> 00:00:19.670
To break it down, in the spring system

00:00:19.670 --> 00:00:21.650
you have the nucleus which provides you

00:00:21.650 --> 00:00:26.180
threads. And IPC among threads. And the microkernel

00:00:26.180 --> 00:00:31.480
prescription of lead k is accomplished by the combination of nucleus, plus the

00:00:31.480 --> 00:00:34.020
address space management that is part

00:00:34.020 --> 00:00:37.321
of the Spring System's kernel boundary. And

00:00:37.321 --> 00:00:40.489
everything else lives above. This kernel,

00:00:40.489 --> 00:00:44.425
meaning all the services you normally associate

00:00:44.425 --> 00:00:50.953
with an operating system such as file system, network communication and so on,

00:00:50.953 --> 00:00:57.079
were all provided as objects that live outside of this kernel. And the way you

00:00:57.079 --> 00:01:03.600
access those objects is through doors. And in every domain there is a door table

00:01:03.600 --> 00:01:05.450
that has a set of capabilities that

00:01:05.450 --> 00:01:10.220
a partiuclar domain has for accessing doors on

00:01:10.220 --> 00:01:13.700
different domains. And this door and door table

00:01:13.700 --> 00:01:16.150
is the the basis for cross domain calls.

00:01:16.150 --> 00:01:21.980
And through the object orientation, and through the network proxies you can have

00:01:21.980 --> 00:01:24.780
object invocation implemented as protected procedure

00:01:24.780 --> 00:01:27.250
calls both on the same node and

00:01:27.250 --> 00:01:30.320
across machines. And finally, it does

00:01:30.320 --> 00:01:34.170
virtual memory management by providing certain basic

00:01:34.170 --> 00:01:37.560
parameters, such as the linear address space,

00:01:37.560 --> 00:01:41.180
the memory object, external pages, and cached

00:01:41.180 --> 00:01:46.590
object representation. Now to contrast this to Tornado. In Tornado also we saw

00:01:46.590 --> 00:01:51.770
that it was using object technology, but the contrast is pretty distinct. In

00:01:51.770 --> 00:01:54.930
Tornado it uses clustered object as

00:01:54.930 --> 00:01:59.470
an optimization for implementing services. For example,

00:01:59.470 --> 00:02:03.560
weather a particular object is singleton representation,

00:02:03.560 --> 00:02:06.390
or it has multiple representation for each

00:02:06.390 --> 00:02:09.038
processor, etc. Those are the kinds

00:02:09.038 --> 00:02:11.590
of optimizations that are being accomplished using

00:02:11.590 --> 00:02:14.920
the clustered object in the Tornado system.

00:02:14.920 --> 00:02:18.420
Whereas in the Spring system, object technology

00:02:18.420 --> 00:02:23.120
permeates the entire operating system design in that it is used as a system

00:02:23.120 --> 00:02:26.400
structuring mechanism, not as just an optimization

00:02:26.400 --> 00:02:29.550
mechanism. In constructing a network operating system.

