WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.860
[MUSIC PLAYING]

00:00:05.860 --> 00:00:07.830
Hello and welcome back.

00:00:07.830 --> 00:00:10.130
So as you recall
in our last lesson,

00:00:10.130 --> 00:00:12.670
we went ahead and created
these awesome leaderboards.

00:00:12.670 --> 00:00:15.910
But it turns out that they're
pretty boring because nobody

00:00:15.910 --> 00:00:17.916
has submitted any
scores to any of them.

00:00:17.916 --> 00:00:19.540
And that's because
we haven't hooked up

00:00:19.540 --> 00:00:20.990
the logic do that yet.

00:00:20.990 --> 00:00:23.180
So, gosh, we should fix that.

00:00:23.180 --> 00:00:24.820
Let's do that in this lesson.

00:00:24.820 --> 00:00:27.140
So I'm going to stop
our application here--

00:00:27.140 --> 00:00:28.230
or I guess it is stopped.

00:00:32.080 --> 00:00:37.690
So like in the last chapter, we
created an achievement manager

00:00:37.690 --> 00:00:40.490
class that basically
dealt with achievements.

00:00:40.490 --> 00:00:45.040
I'm going to go ahead and create
our own leaderboard manager

00:00:45.040 --> 00:00:45.540
class.

00:00:49.650 --> 00:00:56.330
It's going to be a subclass
of NSObject, and here we go.

00:00:56.330 --> 00:00:58.770
Now I'm actually going to
do kind of a hacky thing

00:00:58.770 --> 00:01:01.940
that we did in the last lesson,
where we're going to start off

00:01:01.940 --> 00:01:04.470
by submitting a hard-coded
string representing

00:01:04.470 --> 00:01:05.800
our leaderboard.

00:01:05.800 --> 00:01:08.050
I'm doing that mostly just
because I think it's easier

00:01:08.050 --> 00:01:11.610
to understand the creation
of our score object this way,

00:01:11.610 --> 00:01:15.090
and then we'll go ahead and
clean up in the next lesson.

00:01:15.090 --> 00:01:19.500
So this is going to have
one public method-- at least

00:01:19.500 --> 00:01:24.000
for now-- and that
will be submit score.

00:01:24.000 --> 00:01:27.810
And there's our int that
represents our score

00:01:27.810 --> 00:01:30.030
to leaderboard.

00:01:30.030 --> 00:01:33.470
And this is our
NSString that's going

00:01:33.470 --> 00:01:35.010
to represent our leaderboard ID.

00:01:38.100 --> 00:01:39.210
Now to implement this.

00:01:44.430 --> 00:01:46.260
There it is.

00:01:46.260 --> 00:01:49.024
Now, as you recall in
our achievement manager,

00:01:49.024 --> 00:01:50.440
the way we dealt
with achievements

00:01:50.440 --> 00:01:54.330
was by creating a GPGAchievement
object that we created

00:01:54.330 --> 00:01:56.996
using the class method
achievement with ID,

00:01:56.996 --> 00:01:59.670
and we passed in our
unique string associated

00:01:59.670 --> 00:02:00.890
with our achievement.

00:02:00.890 --> 00:02:02.440
Basically going to
do the same thing

00:02:02.440 --> 00:02:04.200
with our leaderboard manager.

00:02:04.200 --> 00:02:06.880
Although we don't actually
create a Leaderboard object,

00:02:06.880 --> 00:02:09.400
we create a Score
object, and the score

00:02:09.400 --> 00:02:13.630
is associated with a
specific leaderboard

00:02:13.630 --> 00:02:15.810
that the score's going
to be submitted to.

00:02:15.810 --> 00:02:18.350
So let me show you what I mean.

00:02:18.350 --> 00:02:23.070
So we're going to call it
GPGScore, score to submit,

00:02:23.070 --> 00:02:26.230
equals GPGScore, score
with leaderboard ID.

00:02:30.240 --> 00:02:32.900
At this point we
can say score submit

00:02:32.900 --> 00:02:38.250
dot value equals the score
that we've passed in.

00:02:38.250 --> 00:02:40.550
And then we tell our
score to submit itself

00:02:40.550 --> 00:02:42.140
to the leaderboard.

00:02:42.140 --> 00:02:44.600
So we would say,
score to submit,

00:02:44.600 --> 00:02:46.735
submit score with
Completion Handler.

00:02:49.750 --> 00:02:52.840
We get back in our Completion
Handler two things.

00:02:52.840 --> 00:02:56.110
We get an Error object
and GPGScore report.

00:02:56.110 --> 00:02:57.950
The Error object is
what you would expect,

00:02:57.950 --> 00:03:00.990
it would display an error
if something shows up.

00:03:00.990 --> 00:03:03.350
The GPGScore report
is fairly interesting.

00:03:03.350 --> 00:03:04.850
Let's take a look at this.

00:03:04.850 --> 00:03:11.990
So first we'll do if error,
NSLog, "This is terrible."

00:03:11.990 --> 00:03:16.780
And we'll have our error
localize message-- there

00:03:16.780 --> 00:03:19.490
we go-- localized description.

00:03:19.490 --> 00:03:34.210
Otherwise let's just display,
This is your score report."

00:03:34.210 --> 00:03:37.530
But if you notice here, we could
actually look at the report

00:03:37.530 --> 00:03:38.030
itself.

00:03:38.030 --> 00:03:43.020
It's got a bunch of interesting
properties you can see here.

00:03:43.020 --> 00:03:46.430
See it's got a few Booleans
for, is the high score

00:03:46.430 --> 00:03:48.000
for the local
player for all time?

00:03:48.000 --> 00:03:50.500
Is this player's high
score for this week?

00:03:50.500 --> 00:03:53.470
Is it the high score for
this player for today?

00:03:53.470 --> 00:03:55.710
And if it isn't any
of those things,

00:03:55.710 --> 00:03:58.600
if the player had submitted
a higher score earlier,

00:03:58.600 --> 00:04:00.890
we can then ask, what
was that high score

00:04:00.890 --> 00:04:02.800
that the player
submitted earlier?

00:04:02.800 --> 00:04:05.260
And so if we wanted
to, for instance,

00:04:05.260 --> 00:04:07.340
bring up our own
notification that said,

00:04:07.340 --> 00:04:09.800
hey congratulations,
you beat your old score,

00:04:09.800 --> 00:04:11.080
we could do that here.

00:04:11.080 --> 00:04:13.610
We could do that by basically
analyzing the score report

00:04:13.610 --> 00:04:16.334
and doing something
interesting with it.

00:04:16.334 --> 00:04:18.000
In this case, I'm not
going to, I'm just

00:04:18.000 --> 00:04:20.440
going to put it out
to the log, but that's

00:04:20.440 --> 00:04:24.120
still pretty
interesting, I suppose.

00:04:24.120 --> 00:04:26.760
And then I'm going to jump
into our game model here.

00:04:30.780 --> 00:04:32.740
And, I suppose, after
we've gone ahead

00:04:32.740 --> 00:04:35.130
and incremented and
unlocked our achievements,

00:04:35.130 --> 00:04:38.710
this would be good time
to submit our score,

00:04:38.710 --> 00:04:40.510
at this point in the
game when we've won.

00:04:40.510 --> 00:04:43.690
So it looks like I probably
have to go up here and import

00:04:43.690 --> 00:04:46.500
our leaderboard manager.

00:04:46.500 --> 00:04:47.640
There we go.

00:04:47.640 --> 00:04:51.810
And then, let's create
our own little property

00:04:51.810 --> 00:04:55.510
for our leaderboard manager.

00:04:55.510 --> 00:04:58.600
Leaderboard manager,
there we go.

00:04:58.600 --> 00:05:00.930
And like our
achievement manager,

00:05:00.930 --> 00:05:02.450
we can some Lazy Instantiation.

00:05:19.370 --> 00:05:21.630
There we go.

00:05:21.630 --> 00:05:23.480
Fantastic stuff.

00:05:23.480 --> 00:05:26.410
And now we can go
down here and say,

00:05:26.410 --> 00:05:28.490
hey self dot
leaderboard manager,

00:05:28.490 --> 00:05:31.900
let's submit our score, and this
will be our number of guesses,

00:05:31.900 --> 00:05:33.650
to our leaderboard.

00:05:33.650 --> 00:05:36.910
And since I am going to be
replacing all this with an Enum

00:05:36.910 --> 00:05:38.860
very shortly, I'm
just going to go

00:05:38.860 --> 00:05:42.750
and hard code in the leaderboard
ID for our easy difficulty

00:05:42.750 --> 00:05:43.900
level.

00:05:43.900 --> 00:05:48.620
So let's go find our
developer console here,

00:05:48.620 --> 00:05:50.540
and go back into
our leaderboards,

00:05:50.540 --> 00:05:52.600
and here's our ID for easy.

00:05:52.600 --> 00:05:54.820
So I'm going to copy this.

00:05:54.820 --> 00:06:00.910
And we'll just, create it
right here, so there we go.

00:06:00.910 --> 00:06:02.620
So now we're all
set up here, let's

00:06:02.620 --> 00:06:04.930
run this and see what happens.

00:06:04.930 --> 00:06:07.300
Going to get into my game.

00:06:07.300 --> 00:06:09.600
I can see that, hey
look, my leaderboards,

00:06:09.600 --> 00:06:13.140
they're still, empty
and that's fantastic.

00:06:13.140 --> 00:06:15.530
And let's go in and
play an easy game.

00:06:20.110 --> 00:06:21.036
Higher than 25.

00:06:26.460 --> 00:06:28.170
Hey, look at that, four guesses.

00:06:28.170 --> 00:06:29.507
Actually, that's pretty good.

00:06:29.507 --> 00:06:31.590
I don't know if I'm going
to be able to beat that.

00:06:31.590 --> 00:06:33.580
But we can look at
the log here, and we

00:06:33.580 --> 00:06:38.720
can see that we've got
our score report back.

00:06:38.720 --> 00:06:41.490
And our Boolean is
reporting, yes, this

00:06:41.490 --> 00:06:44.150
is the high score for
this player for today.

00:06:44.150 --> 00:06:46.100
And similar for, this
is the high scorer

00:06:46.100 --> 00:06:48.750
for the player for this
week, and for all time.

00:06:48.750 --> 00:06:51.565
And if we're to look at the high
score for local player today,

00:06:51.565 --> 00:06:53.830
these values are all null.

00:06:53.830 --> 00:06:56.075
I don't believe this is
indicative of the fact

00:06:56.075 --> 00:06:58.370
that this is the first time
I've submitted a score.

00:06:58.370 --> 00:06:59.810
I believe these
values are always

00:06:59.810 --> 00:07:03.330
set to null if what you've
submitted is a new high score.

00:07:03.330 --> 00:07:06.380
So you'll either get the
Booleans equaled a yes,

00:07:06.380 --> 00:07:10.160
or you will get, hey, this
is the current high score

00:07:10.160 --> 00:07:12.950
for the player that
you do not beat.

00:07:12.950 --> 00:07:15.925
Now, if we were to go back
and play this again-- let

00:07:15.925 --> 00:07:18.300
me just show you something
here, let me play really fast.

00:07:25.100 --> 00:07:28.060
Now, you'll notice that my
score report came back as null.

00:07:28.060 --> 00:07:29.286
The entire thing is null.

00:07:29.286 --> 00:07:30.910
This is a little
quirk with the system.

00:07:30.910 --> 00:07:32.200
I've talked with
the team, I think

00:07:32.200 --> 00:07:33.790
we're going to
change this behavior.

00:07:33.790 --> 00:07:35.670
But what's happening
right now is

00:07:35.670 --> 00:07:38.110
the system is smart
enough to know, one,

00:07:38.110 --> 00:07:40.810
that this is a leaderboard
where the lower score is better,

00:07:40.810 --> 00:07:43.610
and that I have just attempted
to submit a score that's

00:07:43.610 --> 00:07:47.010
higher than what I
submitted just before.

00:07:47.010 --> 00:07:48.994
In this case, the
system says, well, I'm

00:07:48.994 --> 00:07:51.410
not going to bother submitting
this score of five guesses,

00:07:51.410 --> 00:07:54.790
because I know that it's not
any better than the score four

00:07:54.790 --> 00:07:58.150
that I submitted
just a minute ago.

00:07:58.150 --> 00:08:00.070
The unfortunate
side effect of that,

00:08:00.070 --> 00:08:03.260
is that I do not get a score
report when the library decides

00:08:03.260 --> 00:08:05.210
that it's not going
to submit it for me.

00:08:05.210 --> 00:08:09.470
I'd like to see us generate
a fake score report any way,

00:08:09.470 --> 00:08:10.960
and hopefully that will happen.

00:08:10.960 --> 00:08:14.030
But I guess that maybe the
main lesson to take away here

00:08:14.030 --> 00:08:18.990
is, don't count on a score
report always existing.

00:08:18.990 --> 00:08:22.560
You might need to check and
see if it's nil, and if it is,

00:08:22.560 --> 00:08:24.870
take the appropriate actions.

00:08:24.870 --> 00:08:26.090
So there you go.

00:08:26.090 --> 00:08:31.070
If I were to stop this, by the
way, and run it again-- let's

00:08:31.070 --> 00:08:33.140
try it again.

00:08:33.140 --> 00:08:36.610
By the way, I can see myself
here, on the easy leaderboard,

00:08:36.610 --> 00:08:39.250
both in my circles, and
in the public leaderboard.

00:08:39.250 --> 00:08:42.200
I happen to be first,
that's fantastic.

00:08:42.200 --> 00:08:43.750
So, let's play an
easy game here.

00:08:53.460 --> 00:08:56.950
Now I do get back to
full score report.

00:08:56.950 --> 00:08:58.870
And you can see that
my, hey, is this

00:08:58.870 --> 00:09:01.740
a new high score for this player
for today, this week, all time,

00:09:01.740 --> 00:09:03.730
are all set to zero.

00:09:03.730 --> 00:09:06.240
And the high score for
the local player today

00:09:06.240 --> 00:09:08.760
is now a GPGScore
object that has

00:09:08.760 --> 00:09:11.110
things such as the
leaderboard ID, value,

00:09:11.110 --> 00:09:13.890
and the formatted score,
and so on and so forth.

00:09:13.890 --> 00:09:16.314
So you can take a look
at that, if you'd like.

00:09:16.314 --> 00:09:18.480
Again, you can kind of raise
some interesting alerts

00:09:18.480 --> 00:09:20.500
in your game based on that.

00:09:20.500 --> 00:09:22.275
But, at least for
now until we change

00:09:22.275 --> 00:09:24.310
the behavior of the
library, you can't

00:09:24.310 --> 00:09:27.730
count on that score report
always existing, all the time.

00:09:27.730 --> 00:09:29.820
So, anyway, there we go.

00:09:29.820 --> 00:09:31.990
We've now submitted
scores to our leaderboard.

00:09:31.990 --> 00:09:33.140
This is fantastic.

00:09:33.140 --> 00:09:34.870
And if I had other
friends playing,

00:09:34.870 --> 00:09:37.694
I'd start seeing them
in leaderboards as well.

00:09:37.694 --> 00:09:39.860
Let's look at the next step
here in our application,

00:09:39.860 --> 00:09:43.720
and that's going to be removing
this hard-coded string,

00:09:43.720 --> 00:09:44.980
replacing it with an Enum.

00:09:44.980 --> 00:09:46.870
Sort of like what we
did in the last chapter,

00:09:46.870 --> 00:09:48.590
but I guess with one
minor difference,

00:09:48.590 --> 00:09:51.780
and you'll find about that in
the next lesson See you soon.

00:09:51.780 --> 00:10:02.092
[MUSIC PLAYING]

