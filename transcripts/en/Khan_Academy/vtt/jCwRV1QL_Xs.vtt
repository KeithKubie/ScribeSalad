WEBVTT
Kind: captions
Language: en

00:00:00.620 --> 00:00:03.940
Let's review our notions
of subspaces again.

00:00:03.940 --> 00:00:05.870
And then let's see if we can
define some interesting

00:00:05.870 --> 00:00:09.230
subspaces dealing with
matrices and vectors.

00:00:09.230 --> 00:00:16.040
So a subspace-- let's say that I
have some subspace-- oh, let

00:00:16.040 --> 00:00:18.210
me just call it some
subspace s.

00:00:18.210 --> 00:00:20.560
This is a subspace if the
following are true-- and this

00:00:20.560 --> 00:00:25.670
is all a review-- that the 0
vector-- I'll just do it like

00:00:25.670 --> 00:00:28.330
that-- the 0 vector,
is a member of s.

00:00:28.330 --> 00:00:30.190
So it contains the 0 vector.

00:00:30.190 --> 00:00:37.480
Then if v1 and v2 are both
members of my subspace, then

00:00:37.480 --> 00:00:43.330
v1 plus v2 is also a member
of my subspace.

00:00:43.330 --> 00:00:45.580
So that's just saying that
the subspaces are

00:00:45.580 --> 00:00:46.530
closed under addition.

00:00:46.530 --> 00:00:48.680
You can add any of their two
members and you'll get another

00:00:48.680 --> 00:00:50.280
member of the subspace.

00:00:50.280 --> 00:00:52.560
And then the last requirement,
if you remember, is that

00:00:52.560 --> 00:00:54.950
subspaces are closed under
multiplication.

00:00:54.950 --> 00:01:00.320
So that if c is real number,
and it's just a scalar.

00:01:00.320 --> 00:01:05.400
And if I multiply, and v1 is a
member of my subspace, then if

00:01:05.400 --> 00:01:10.250
I multiply that arbitrary real
number times my member of my

00:01:10.250 --> 00:01:13.380
subspace, v1, I'm going
to get another

00:01:13.380 --> 00:01:14.110
member of the subspace.

00:01:14.110 --> 00:01:16.150
So it's closed under
multiplication.

00:01:16.150 --> 00:01:18.340
These were all of what
a subspace is.

00:01:18.340 --> 00:01:20.110
This is our definition
of a subspace.

00:01:20.110 --> 00:01:21.440
If you call something
a subspace,

00:01:21.440 --> 00:01:22.940
these need to be true.

00:01:22.940 --> 00:01:25.280
Now let's see if we can do
something interesting with

00:01:25.280 --> 00:01:28.720
what we understand about matrix
vector multiplication.

00:01:28.720 --> 00:01:34.340
Let's say I have the matrix
a-- I'll make it nice and

00:01:34.340 --> 00:01:38.060
bold-- and it's an
m by n matrix.

00:01:38.060 --> 00:01:40.510
And I'm interested in the
following situation; I want to

00:01:40.510 --> 00:01:44.280
set up the homogeneous
equation.

00:01:44.280 --> 00:01:46.660
And we'll talk about why
it's homogeneous.

00:01:46.660 --> 00:01:47.760
Well, I'll tell you
in a second.

00:01:47.760 --> 00:01:49.500
So let's say we set
up the equation.

00:01:49.500 --> 00:02:00.400
My matrix a times vector x
is equal to the 0 vector.

00:02:00.400 --> 00:02:02.390
This is a homogeneous equation,

00:02:02.390 --> 00:02:03.740
because we have a 0 there.

00:02:07.480 --> 00:02:08.740
And I want to ask
the question-- I

00:02:08.740 --> 00:02:10.870
talked about subspaces.

00:02:10.870 --> 00:02:15.650
If I take all of the x's--
if I take the world, the

00:02:15.650 --> 00:02:20.360
universe, the set of all of
the x's that satisfy this

00:02:20.360 --> 00:02:24.420
equation, do I have
a valid subspace?

00:02:24.420 --> 00:02:25.470
Let's think about this.

00:02:25.470 --> 00:02:30.540
I want to take all of the x's
that are a member of Rn.

00:02:30.540 --> 00:02:35.450
Remember, if our matrix a has
n columns, then I've only

00:02:35.450 --> 00:02:39.090
defined this matrix vector
multiplication.

00:02:39.090 --> 00:02:42.620
If x is a member of r, and if
x has to have exactly n

00:02:42.620 --> 00:02:44.720
components, only then
is it defined.

00:02:44.720 --> 00:02:47.720
So let me define a set of all
the vectors that are a member

00:02:47.720 --> 00:02:54.420
of Rn where they satisfy the
equation a times my vector x

00:02:54.420 --> 00:02:57.600
is equal to the 0 vector.

00:02:57.600 --> 00:03:00.820
So my question is, is
this a subspace?

00:03:00.820 --> 00:03:04.580
Is this a valid subspace?

00:03:04.580 --> 00:03:07.730
So the first question is, does
it contain the 0 vector?

00:03:07.730 --> 00:03:10.430
Well in order for this to
contain the 0 vector, the 0

00:03:10.430 --> 00:03:13.390
vector must satisfy
this equation.

00:03:13.390 --> 00:03:19.890
So what is any m by n matrix
a times the 0 vector?

00:03:22.920 --> 00:03:27.770
Let's write out my matrix
a-- my matrix a, a[1,1]

00:03:27.770 --> 00:03:28.820
a[1,2]

00:03:28.820 --> 00:03:31.580
all the way to a[1,n]

00:03:31.580 --> 00:03:33.810
and then this, as we go down
a column, we go all

00:03:33.810 --> 00:03:35.470
the way down to a[m,1]

00:03:35.470 --> 00:03:37.110
and then as we go all the
way to the bottom

00:03:37.110 --> 00:03:39.100
right, we go to a[m,n]

00:03:39.100 --> 00:03:45.740
and I'm going to multiply that
times the 0 vector that has

00:03:45.740 --> 00:03:48.850
exactly n components.

00:03:48.850 --> 00:03:52.680
So the 0 vector with n
components is 0, 0, and you're

00:03:52.680 --> 00:03:53.940
going to have n of these.

00:03:53.940 --> 00:03:56.165
The number of components here
has to be the exact same

00:03:56.165 --> 00:03:58.560
number of the number of columns
you have. But when you

00:03:58.560 --> 00:04:02.100
take this product, this
matrix vector

00:04:02.100 --> 00:04:04.370
product, what do you get?

00:04:04.370 --> 00:04:06.790
What do we get?

00:04:06.790 --> 00:04:09.500
Well, this first term up here
is going to be a[1,1]

00:04:09.500 --> 00:04:11.000
time 0, plus a[1,2]

00:04:11.000 --> 00:04:13.820
times 0, plus each of
these terms times 0.

00:04:13.820 --> 00:04:15.780
And you add them
all up. a[1,1]

00:04:15.780 --> 00:04:16.500
times 0, plus a[1,2]

00:04:16.500 --> 00:04:16.800
plus a[1,2]

00:04:16.800 --> 00:04:18.959
times 0, all the way to a[1,n]

00:04:18.959 --> 00:04:20.470
and times 0.

00:04:20.470 --> 00:04:22.130
So you get 0.

00:04:22.130 --> 00:04:25.540
Now this term is going
to be a[2,1]

00:04:25.540 --> 00:04:27.990
times 0, plus a[2,2]

00:04:27.990 --> 00:04:29.770
times 0, plus a[2,3]

00:04:29.770 --> 00:04:31.850
times 0, all the way to a[2,n]

00:04:31.850 --> 00:04:32.560
times 0.

00:04:32.560 --> 00:04:33.880
That's, obviously,
going to be 0.

00:04:33.880 --> 00:04:36.630
And you're going to keep doing
that because all of these are,

00:04:36.630 --> 00:04:39.880
essentially,-- you can kind of
view it as the dot product

00:04:39.880 --> 00:04:43.800
of-- I haven't defined dot
products with row vectors and

00:04:43.800 --> 00:04:47.710
column vectors, but I think you
get the idea-- the sum of

00:04:47.710 --> 00:04:50.370
each of these elements,
multiplied with the

00:04:50.370 --> 00:04:52.890
corresponding component
in this vector.

00:04:52.890 --> 00:04:54.860
And, of course, you're just
always multiplying by 0 and

00:04:54.860 --> 00:04:55.340
then adding up.

00:04:55.340 --> 00:04:58.270
So you're going to get nothing
but a bunch of 0's.

00:04:58.270 --> 00:05:01.280
So the 0 vector does satisfied
the equation.

00:05:01.280 --> 00:05:04.860
A times the 0 vector is
equal to the 0 vector.

00:05:04.860 --> 00:05:06.510
And this is a very
unconventional notation.

00:05:06.510 --> 00:05:08.210
I'm just writing it like that,
because I don't feel like

00:05:08.210 --> 00:05:10.710
bolding out my 0's all the time
to make you realize that

00:05:10.710 --> 00:05:11.740
that's a vector.

00:05:11.740 --> 00:05:14.550
So we meet our first
requirement.

00:05:14.550 --> 00:05:17.360
The 0 vector is a member
of the set.

00:05:17.360 --> 00:05:21.710
So let me define my set here.

00:05:21.710 --> 00:05:22.500
Let me define it n.

00:05:22.500 --> 00:05:25.120
And I'll tell you in a second
why I'm calling it n.

00:05:25.120 --> 00:05:29.730
So we now know that
the 0 vector is a

00:05:29.730 --> 00:05:32.440
member of my set n.

00:05:32.440 --> 00:05:37.230
Now let's say I have two
vectors, v1 and v2 that are

00:05:37.230 --> 00:05:39.080
members-- let me write this.

00:05:39.080 --> 00:05:45.750
So let's say I have two factors,
v1, and v2, that are

00:05:45.750 --> 00:05:48.620
both members of our set.

00:05:48.620 --> 00:05:49.740
What does that mean?

00:05:49.740 --> 00:05:51.950
That means that they both
satisfy this equation.

00:05:51.950 --> 00:05:57.360
So that means that a-- my matrix
a-- times vector 1 is

00:05:57.360 --> 00:05:58.160
equal to 0.

00:05:58.160 --> 00:05:59.520
This is by definition.

00:05:59.520 --> 00:06:01.440
I'm saying that they're a member
of the set, which means

00:06:01.440 --> 00:06:02.910
they must satisfy this.

00:06:02.910 --> 00:06:07.280
And that also means that
a times vector 2 is

00:06:07.280 --> 00:06:10.070
equal to our 0 vector.

00:06:10.070 --> 00:06:17.720
So in order for this to be
closed under addition, a times

00:06:17.720 --> 00:06:22.470
vector 1 plus vector 2, the
sum of these two vectors

00:06:22.470 --> 00:06:23.910
should also be a member of n.

00:06:23.910 --> 00:06:25.340
But let's figure out
what this is.

00:06:25.340 --> 00:06:28.010
The sum of these two vectors
is this vector right here.

00:06:28.010 --> 00:06:29.060
This is equal to--
and I haven't

00:06:29.060 --> 00:06:30.130
proven this to you yet.

00:06:30.130 --> 00:06:31.710
I haven't made a video
where I prove this.

00:06:31.710 --> 00:06:34.110
But it's very easy to prove just
using the definition of

00:06:34.110 --> 00:06:36.510
matrix vector multiplication,
that matrix vector

00:06:36.510 --> 00:06:40.030
multiplication does display
the distributive property.

00:06:40.030 --> 00:06:42.740
And maybe I'll make a video on
that, but literally, you just

00:06:42.740 --> 00:06:44.270
have to go through the mechanics
of each of the

00:06:44.270 --> 00:06:45.340
terms.

00:06:45.340 --> 00:06:48.580
This is equal to a[v,1]

00:06:48.580 --> 00:06:50.720
plus a[v,2]

00:06:50.720 --> 00:06:53.360
And we know that this is
equal to the 0 vector.

00:06:53.360 --> 00:06:55.460
And this is equal
to the 0 vector.

00:06:55.460 --> 00:06:58.770
And if you add the 0 vector to
itself, this whole thing is

00:06:58.770 --> 00:07:01.900
going to be equal
to the 0 vector.

00:07:01.900 --> 00:07:05.940
So if v1 is a member of n, and
v2 is a member of n, which

00:07:05.940 --> 00:07:09.680
means they both satisfy this
equation, then v1 plus v2 is

00:07:09.680 --> 00:07:10.940
definitely still
a member of n.

00:07:10.940 --> 00:07:13.110
Because when I multiply
a times that, I get

00:07:13.110 --> 00:07:14.830
the 0 vector again.

00:07:14.830 --> 00:07:18.120
So let me write that
result, as well.

00:07:25.390 --> 00:07:31.140
So we now know that v1 plus
v2 is also a member of n.

00:07:31.140 --> 00:07:33.780
And the last thing we have to
show is that it's closed under

00:07:33.780 --> 00:07:35.420
multiplication.

00:07:35.420 --> 00:07:41.930
Let's say that v1 is a member
of our space that I defined

00:07:41.930 --> 00:07:44.440
here, where they satisfy
this equation.

00:07:44.440 --> 00:07:51.240
What about c times v1?

00:07:51.240 --> 00:07:53.370
Is that a member of n?

00:07:53.370 --> 00:07:54.350
Well let's think about it.

00:07:54.350 --> 00:07:59.400
What's our matrix a times
the vector-- right?

00:07:59.400 --> 00:08:00.690
I'm just multiplying this
times the scale.

00:08:00.690 --> 00:08:02.940
I'm just going to get
another vector.

00:08:02.940 --> 00:08:04.580
I don't want to write
a capital v there.

00:08:04.580 --> 00:08:06.850
Lowercase v, so it's a vector.

00:08:06.850 --> 00:08:08.300
What's this equal to?

00:08:08.300 --> 00:08:10.600
Well, once again, I haven't
prove it to you yet, but it's

00:08:10.600 --> 00:08:12.660
actually a very straightforward
thing to do,

00:08:12.660 --> 00:08:16.820
to show that when you're dealing
with scalars, if you

00:08:16.820 --> 00:08:19.140
have a scalar here, it doesn't
matter if you multiply the

00:08:19.140 --> 00:08:23.750
scalar times the vector before
multiplying it times the

00:08:23.750 --> 00:08:25.860
matrix or multiplying the matrix
times the vector, and

00:08:25.860 --> 00:08:26.790
then doing the scalar.

00:08:26.790 --> 00:08:31.210
So it's fairly straightforward
to prove that this is equal to

00:08:31.210 --> 00:08:36.360
c times our matrix a-- I'll make
that nice and bold, times

00:08:36.360 --> 00:08:37.980
our vector v.

00:08:37.980 --> 00:08:39.720
That these two things
are equivalent.

00:08:39.720 --> 00:08:42.940
Maybe I should just churn out
the video that does this, but

00:08:42.940 --> 00:08:44.210
I'll leave it to you.

00:08:44.210 --> 00:08:45.890
You, literally, just go
through the mechanics

00:08:45.890 --> 00:08:46.620
component by component.

00:08:46.620 --> 00:08:48.560
And you show this.

00:08:48.560 --> 00:08:56.130
But clearly, if there's is true,
we already know that v1

00:08:56.130 --> 00:09:00.460
is a member of our set, which
means that a times v1 is equal

00:09:00.460 --> 00:09:02.130
to the 0 vector.

00:09:02.130 --> 00:09:06.410
And so that means this will
reduce to c times the 0

00:09:06.410 --> 00:09:09.000
vector, which is still
the 0 vector.

00:09:09.000 --> 00:09:10.860
So c[v,1]

00:09:10.860 --> 00:09:13.430
is definitely a member of n.

00:09:13.430 --> 00:09:15.150
So it's closed under
multiplication.

00:09:15.150 --> 00:09:17.960
And I kind of assumed
this right here.

00:09:17.960 --> 00:09:19.660
But maybe I'll prove that
in a different video.

00:09:19.660 --> 00:09:23.110
But I want to do all this to
show that this set n is a

00:09:23.110 --> 00:09:25.380
valid subspace.

00:09:25.380 --> 00:09:26.640
This is a valid subspace.

00:09:26.640 --> 00:09:28.190
It contains a 0 vector.

00:09:28.190 --> 00:09:29.560
It's close under addition.

00:09:29.560 --> 00:09:31.380
It's close under
multiplication.

00:09:31.380 --> 00:09:33.380
And we actually have a special
name for this.

00:09:33.380 --> 00:09:46.240
We call this right here, we call
n, the null space of a.

00:09:46.240 --> 00:09:49.590
Or we could write n is equal
to-- maybe I shouldn't have

00:09:49.590 --> 00:09:50.090
written an n.

00:09:50.090 --> 00:09:52.550
Let me write orange in there.

00:09:52.550 --> 00:09:58.430
Our orange n is equal to-- the
notation is just the null

00:09:58.430 --> 00:09:59.360
space of a.

00:09:59.360 --> 00:10:01.180
Or we could write the null space
is equal to the orange

00:10:01.180 --> 00:10:04.050
notation of n, and literally,
if I just give you some

00:10:04.050 --> 00:10:08.010
arbitrary matrix a, and
I say, hey, find me n

00:10:08.010 --> 00:10:09.810
of a, what is that?

00:10:09.810 --> 00:10:16.500
Literally, your goal is to find
the set of all x's that

00:10:16.500 --> 00:10:20.020
satisfy the equation a times
x is equal to 0.

00:10:20.020 --> 00:10:22.790
And I'm going to do that
in the next video.

