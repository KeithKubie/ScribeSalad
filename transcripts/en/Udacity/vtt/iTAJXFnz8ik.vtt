WEBVTT
Kind: captions
Language: en

00:00:00.630 --> 00:00:03.600
The resource needs of the applications include

00:00:03.600 --> 00:00:06.250
time on the CPU, the memory that it

00:00:06.250 --> 00:00:09.680
needs for holding its instructions and data, and

00:00:09.680 --> 00:00:12.010
peripheral devices that it may have to access

00:00:12.010 --> 00:00:14.970
during the course of its execution and so

00:00:14.970 --> 00:00:17.190
on. Now, are the resource requirements of a

00:00:17.190 --> 00:00:21.500
program known to the operating system before you

00:00:21.500 --> 00:00:25.700
launch it? Well, yes and no. The operating

00:00:25.700 --> 00:00:32.485
system knows enough about the program, at the time of launch, so that from the

00:00:32.485 --> 00:00:36.130
disk, it can create a memory footprint

00:00:36.130 --> 00:00:39.570
for this application. So for instance, on your

00:00:39.570 --> 00:00:45.010
favorite platform, when you click on an icon, what is going on is, a piece

00:00:45.010 --> 00:00:46.660
of the operating system called the operating

00:00:46.660 --> 00:00:51.370
system loader is reading in the disk resident

00:00:51.370 --> 00:00:56.050
image off that application, and creating a memory

00:00:56.050 --> 00:00:58.490
resident image of that application. So this is

00:00:58.490 --> 00:01:00.670
what is called the memory footprint. And the

00:01:00.670 --> 00:01:05.160
memory footprint of the program contains the code that

00:01:05.160 --> 00:01:07.980
needs to get executed on the processor, global

00:01:07.980 --> 00:01:11.140
data that it might be accessing, the stack that

00:01:11.140 --> 00:01:14.140
is needed when the program is making procedure

00:01:14.140 --> 00:01:16.710
calls and the heap which is the dynamic memory

00:01:16.710 --> 00:01:19.050
that it might be needing during the course of

00:01:19.050 --> 00:01:20.680
its execution. So this is what is called the

00:01:20.680 --> 00:01:23.570
memory footprint of the program. Then that's what is

00:01:23.570 --> 00:01:26.770
created by the operating system loader at the point

00:01:26.770 --> 00:01:30.370
where you click on an icon. Once a program

00:01:30.370 --> 00:01:35.060
starts running, can the application ask for additional resources

00:01:35.060 --> 00:01:38.630
at run time? Of course. This is exactly the

00:01:38.630 --> 00:01:42.460
service that is provided by the operating system. For example,

00:01:42.460 --> 00:01:49.090
if the application needs more memory, it can make an operating system call

00:01:49.090 --> 00:01:55.630
and similarly if it needs to make a connection to access a web server it makes

00:01:55.630 --> 00:01:58.520
an operating system call. The operating system

00:01:58.520 --> 00:02:01.690
then performs the service on behalf of

00:02:01.690 --> 00:02:04.530
the application and the application can then

00:02:04.530 --> 00:02:07.370
continue with whatever it needs to get done.

00:02:07.370 --> 00:02:09.669
That's how an operating system caters

00:02:09.669 --> 00:02:12.930
to the resource requirements of applications. So

00:02:12.930 --> 00:02:15.680
in other words, in addition to catering

00:02:15.680 --> 00:02:18.500
to the initial requirements of an application

00:02:18.500 --> 00:02:22.388
at the point of launching it, the operating system is also the broker

00:02:22.388 --> 00:02:26.240
through which a running application can request

00:02:26.240 --> 00:02:30.000
and get additional resources during its execution.

