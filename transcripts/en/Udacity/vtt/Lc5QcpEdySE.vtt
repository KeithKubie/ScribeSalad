WEBVTT
Kind: captions
Language: en

00:00:00.360 --> 00:00:02.120
Okay Michael have you thought about it? Do you know what the answer is?

00:00:02.120 --> 00:00:05.060
&gt;&gt; Yeah. I think, you know, you asked it in a

00:00:05.060 --> 00:00:07.520
funny way, but I think, what you're asking maybe was pretty

00:00:07.520 --> 00:00:09.320
simple. So let, let me, let me see if I can

00:00:09.320 --> 00:00:13.080
talk it through. So ,we've got n data points, each learner is

00:00:13.080 --> 00:00:16.100
a zeroth order polynomial. So you, you said the ensemble rule

00:00:16.100 --> 00:00:19.620
is that you learn over a subset, a zeroth order polynomial

00:00:19.620 --> 00:00:21.690
is just (no period) Well, we said that the thing that

00:00:21.690 --> 00:00:26.570
minimizes the average. Sorry, that minimizes the expected error, or the squared

00:00:26.570 --> 00:00:30.000
error [INAUDIBLE] it's just the average. So, if

00:00:30.000 --> 00:00:33.510
the sets are indistinct sets, with one data point

00:00:33.510 --> 00:00:37.530
each, then each, of the individual learners, is

00:00:37.530 --> 00:00:40.190
just going to learn the average. Then they get, not

00:00:40.190 --> 00:00:42.350
the average sorry. The actual output value of

00:00:42.350 --> 00:00:44.880
each individual point is the average, and then the

00:00:44.880 --> 00:00:48.170
combining algorithm, to combine all the pieces of

00:00:48.170 --> 00:00:51.580
the ensemble into one answer, combines with the mean.

00:00:51.580 --> 00:00:52.900
So ,it's going to combine the mean of those

00:00:52.900 --> 00:00:54.700
each of which is the data point, so it's

00:00:54.700 --> 00:00:57.270
the mean of the data points. So, the ensemble

00:00:57.270 --> 00:01:00.510
outputs, I don't know, I'd say average or mean?

00:01:00.510 --> 00:01:01.358
&gt;&gt; Yes.

00:01:01.358 --> 00:01:06.180
&gt;&gt; Or zeroth order polynomial of the data set,

00:01:06.180 --> 00:01:10.840
or, you know, one node decision tree, or ,uh.

00:01:10.840 --> 00:01:12.970
&gt;&gt; A constant? Which happens to be the

00:01:12.970 --> 00:01:15.870
mean of the data. Haven't we seen this before?

00:01:15.870 --> 00:01:16.780
&gt;&gt; It seems to come up a lot,

00:01:16.780 --> 00:01:18.930
when we are outputting very simple hypotheses.

00:01:18.930 --> 00:01:23.390
&gt;&gt; Right. And the last time we did this, if I recall correctly, this is what

00:01:23.390 --> 00:01:29.020
happens ,if you do an unweighted average with kNN where k is equal to n.

00:01:29.020 --> 00:01:35.242
&gt;&gt; Oh, right. Like, like, right. An N-NN.

00:01:35.242 --> 00:01:37.085
&gt;&gt; N-NN.

00:01:37.085 --> 00:01:37.605
&gt;&gt; Mm.

00:01:37.605 --> 00:01:39.220
&gt;&gt; Mm, so we should probably do

00:01:39.220 --> 00:01:41.800
something a little smarter than this then. And,

00:01:41.800 --> 00:01:45.650
I thought that we might look at some of the housing data, because, no

00:01:45.650 --> 00:01:46.900
one's started looking at the housing data

00:01:46.900 --> 00:01:49.340
yet. [LAUGH] Okay, so let's look at that

00:01:49.340 --> 00:01:51.340
right quick and see if we can figure out how this works. And then

00:01:51.340 --> 00:01:54.040
see if we can do something a little bit better, even better than that. Okay?

