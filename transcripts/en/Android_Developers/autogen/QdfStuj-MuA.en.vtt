WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:02.659
 
friction it's good for rock climbing and

00:00:02.659 --> 00:00:02.669
friction it's good for rock climbing and
 

00:00:02.669 --> 00:00:04.220
friction it's good for rock climbing and
opening jars but in the world of app

00:00:04.220 --> 00:00:04.230
opening jars but in the world of app
 

00:00:04.230 --> 00:00:05.630
opening jars but in the world of app
development it's a force that we seek to

00:00:05.630 --> 00:00:05.640
development it's a force that we seek to
 

00:00:05.640 --> 00:00:07.940
development it's a force that we seek to
minimize app installation is a major

00:00:07.940 --> 00:00:07.950
minimize app installation is a major
 

00:00:07.950 --> 00:00:10.129
minimize app installation is a major
source of friction even for small apps

00:00:10.129 --> 00:00:10.139
source of friction even for small apps
 

00:00:10.139 --> 00:00:11.900
source of friction even for small apps
the installation screen can lose you

00:00:11.900 --> 00:00:11.910
the installation screen can lose you
 

00:00:11.910 --> 00:00:13.970
the installation screen can lose you
five to ten percent of your users and

00:00:13.970 --> 00:00:13.980
five to ten percent of your users and
 

00:00:13.980 --> 00:00:15.499
five to ten percent of your users and
the numbers just get worse as the app

00:00:15.499 --> 00:00:15.509
the numbers just get worse as the app
 

00:00:15.509 --> 00:00:18.050
the numbers just get worse as the app
size gets larger for example 20 percent

00:00:18.050 --> 00:00:18.060
size gets larger for example 20 percent
 

00:00:18.060 --> 00:00:19.760
size gets larger for example 20 percent
of app installs over a hundred megabytes

00:00:19.760 --> 00:00:19.770
of app installs over a hundred megabytes
 

00:00:19.770 --> 00:00:21.890
of app installs over a hundred megabytes
are canceled by the user this is where

00:00:21.890 --> 00:00:21.900
are canceled by the user this is where
 

00:00:21.900 --> 00:00:24.500
are canceled by the user this is where
Android incidents really shines instant

00:00:24.500 --> 00:00:24.510
Android incidents really shines instant
 

00:00:24.510 --> 00:00:26.300
Android incidents really shines instant
apps are native Android apps that

00:00:26.300 --> 00:00:26.310
apps are native Android apps that
 

00:00:26.310 --> 00:00:28.460
apps are native Android apps that
require no installation but what the

00:00:28.460 --> 00:00:28.470
require no installation but what the
 

00:00:28.470 --> 00:00:30.050
require no installation but what the
heck does that actually mean let's go

00:00:30.050 --> 00:00:30.060
heck does that actually mean let's go
 

00:00:30.060 --> 00:00:31.790
heck does that actually mean let's go
ahead and take a look here I've got a

00:00:31.790 --> 00:00:31.800
ahead and take a look here I've got a
 

00:00:31.800 --> 00:00:33.170
ahead and take a look here I've got a
link from a friend about the Google

00:00:33.170 --> 00:00:33.180
link from a friend about the Google
 

00:00:33.180 --> 00:00:35.030
link from a friend about the Google
trips app I press it and I'm immediately

00:00:35.030 --> 00:00:35.040
trips app I press it and I'm immediately
 

00:00:35.040 --> 00:00:37.760
trips app I press it and I'm immediately
taken into an instep experience it feels

00:00:37.760 --> 00:00:37.770
taken into an instep experience it feels
 

00:00:37.770 --> 00:00:39.260
taken into an instep experience it feels
like a native app because it is one

00:00:39.260 --> 00:00:39.270
like a native app because it is one
 

00:00:39.270 --> 00:00:41.510
like a native app because it is one
instant apps can be associated with any

00:00:41.510 --> 00:00:41.520
instant apps can be associated with any
 

00:00:41.520 --> 00:00:44.299
instant apps can be associated with any
URL that you own so you can associated

00:00:44.299 --> 00:00:44.309
URL that you own so you can associated
 

00:00:44.309 --> 00:00:47.060
URL that you own so you can associated
snap with a search result a tweet a text

00:00:47.060 --> 00:00:47.070
snap with a search result a tweet a text
 

00:00:47.070 --> 00:00:49.310
snap with a search result a tweet a text
message or a try now button on your Play

00:00:49.310 --> 00:00:49.320
message or a try now button on your Play
 

00:00:49.320 --> 00:00:51.380
message or a try now button on your Play
Store listing let's go ahead and take a

00:00:51.380 --> 00:00:51.390
Store listing let's go ahead and take a
 

00:00:51.390 --> 00:00:52.819
Store listing let's go ahead and take a
look at how you'd actually go about

00:00:52.819 --> 00:00:52.829
look at how you'd actually go about
 

00:00:52.829 --> 00:00:54.290
look at how you'd actually go about
structuring your app to be instant

00:00:54.290 --> 00:00:54.300
structuring your app to be instant
 

00:00:54.300 --> 00:00:55.910
structuring your app to be instant
you're most likely used to having a

00:00:55.910 --> 00:00:55.920
you're most likely used to having a
 

00:00:55.920 --> 00:00:58.010
you're most likely used to having a
single app module like this when you

00:00:58.010 --> 00:00:58.020
single app module like this when you
 

00:00:58.020 --> 00:00:59.990
single app module like this when you
compile your app it becomes an apk that

00:00:59.990 --> 00:01:00.000
compile your app it becomes an apk that
 

00:01:00.000 --> 00:01:02.720
compile your app it becomes an apk that
you can upload to Google Play as you add

00:01:02.720 --> 00:01:02.730
you can upload to Google Play as you add
 

00:01:02.730 --> 00:01:04.280
you can upload to Google Play as you add
different features and assets to your

00:01:04.280 --> 00:01:04.290
different features and assets to your
 

00:01:04.290 --> 00:01:05.990
different features and assets to your
app that apk size is going to grow

00:01:05.990 --> 00:01:06.000
app that apk size is going to grow
 

00:01:06.000 --> 00:01:08.420
app that apk size is going to grow
eventually your single app module is

00:01:08.420 --> 00:01:08.430
eventually your single app module is
 

00:01:08.430 --> 00:01:10.340
eventually your single app module is
going to take minutes to download now

00:01:10.340 --> 00:01:10.350
going to take minutes to download now
 

00:01:10.350 --> 00:01:11.719
going to take minutes to download now
you haven't really taken the friction

00:01:11.719 --> 00:01:11.729
you haven't really taken the friction
 

00:01:11.729 --> 00:01:13.550
you haven't really taken the friction
out of the app experience if your users

00:01:13.550 --> 00:01:13.560
out of the app experience if your users
 

00:01:13.560 --> 00:01:14.660
out of the app experience if your users
will spend the same amount of time

00:01:14.660 --> 00:01:14.670
will spend the same amount of time
 

00:01:14.670 --> 00:01:16.370
will spend the same amount of time
staring at that instant app splash

00:01:16.370 --> 00:01:16.380
staring at that instant app splash
 

00:01:16.380 --> 00:01:17.570
staring at that instant app splash
screen that they would have spent

00:01:17.570 --> 00:01:17.580
screen that they would have spent
 

00:01:17.580 --> 00:01:19.999
screen that they would have spent
looking at the installing screen so in

00:01:19.999 --> 00:01:20.009
looking at the installing screen so in
 

00:01:20.009 --> 00:01:21.499
looking at the installing screen so in
such apps enable you to keep all of the

00:01:21.499 --> 00:01:21.509
such apps enable you to keep all of the
 

00:01:21.509 --> 00:01:23.149
such apps enable you to keep all of the
features that your users love but

00:01:23.149 --> 00:01:23.159
features that your users love but
 

00:01:23.159 --> 00:01:25.640
features that your users love but
download them one at a time to do this

00:01:25.640 --> 00:01:25.650
download them one at a time to do this
 

00:01:25.650 --> 00:01:27.289
download them one at a time to do this
you need to take that one big app module

00:01:27.289 --> 00:01:27.299
you need to take that one big app module
 

00:01:27.299 --> 00:01:29.840
you need to take that one big app module
and split it into smaller modules called

00:01:29.840 --> 00:01:29.850
and split it into smaller modules called
 

00:01:29.850 --> 00:01:32.480
and split it into smaller modules called
feature modules each feature module

00:01:32.480 --> 00:01:32.490
feature modules each feature module
 

00:01:32.490 --> 00:01:34.730
feature modules each feature module
contains the code and resources for a

00:01:34.730 --> 00:01:34.740
contains the code and resources for a
 

00:01:34.740 --> 00:01:36.740
contains the code and resources for a
different distinct thing that your users

00:01:36.740 --> 00:01:36.750
different distinct thing that your users
 

00:01:36.750 --> 00:01:38.749
different distinct thing that your users
could do with your app so for example

00:01:38.749 --> 00:01:38.759
could do with your app so for example
 

00:01:38.759 --> 00:01:40.520
could do with your app so for example
let's say that I have a travel app I

00:01:40.520 --> 00:01:40.530
let's say that I have a travel app I
 

00:01:40.530 --> 00:01:42.560
let's say that I have a travel app I
might have a different feature module

00:01:42.560 --> 00:01:42.570
might have a different feature module
 

00:01:42.570 --> 00:01:44.389
might have a different feature module
for the code for renting hotel rooms

00:01:44.389 --> 00:01:44.399
for the code for renting hotel rooms
 

00:01:44.399 --> 00:01:46.609
for the code for renting hotel rooms
booking flights and rating those hotel

00:01:46.609 --> 00:01:46.619
booking flights and rating those hotel
 

00:01:46.619 --> 00:01:49.100
booking flights and rating those hotel
rooms now usually these feature modules

00:01:49.100 --> 00:01:49.110
rooms now usually these feature modules
 

00:01:49.110 --> 00:01:50.749
rooms now usually these feature modules
won't have completely independent code

00:01:50.749 --> 00:01:50.759
won't have completely independent code
 

00:01:50.759 --> 00:01:52.850
won't have completely independent code
resources you probably use the same

00:01:52.850 --> 00:01:52.860
resources you probably use the same
 

00:01:52.860 --> 00:01:55.190
resources you probably use the same
themes and utility code in each you also

00:01:55.190 --> 00:01:55.200
themes and utility code in each you also
 

00:01:55.200 --> 00:01:56.840
themes and utility code in each you also
probably use the support library and all

00:01:56.840 --> 00:01:56.850
probably use the support library and all
 

00:01:56.850 --> 00:01:58.819
probably use the support library and all
of the feature modules all of this

00:01:58.819 --> 00:01:58.829
of the feature modules all of this
 

00:01:58.829 --> 00:02:00.560
of the feature modules all of this
shared coded resources is there for

00:02:00.560 --> 00:02:00.570
shared coded resources is there for
 

00:02:00.570 --> 00:02:02.840
shared coded resources is there for
extract it out into another module which

00:02:02.840 --> 00:02:02.850
extract it out into another module which
 

00:02:02.850 --> 00:02:05.179
extract it out into another module which
is called the base feature module when

00:02:05.179 --> 00:02:05.189
is called the base feature module when
 

00:02:05.189 --> 00:02:06.920
is called the base feature module when
your user opens your app they don't

00:02:06.920 --> 00:02:06.930
your user opens your app they don't
 

00:02:06.930 --> 00:02:08.479
your user opens your app they don't
download the whole app they only

00:02:08.479 --> 00:02:08.489
download the whole app they only
 

00:02:08.489 --> 00:02:10.100
download the whole app they only
download the code for the base feature

00:02:10.100 --> 00:02:10.110
download the code for the base feature
 

00:02:10.110 --> 00:02:11.780
download the code for the base feature
module and the future module that

00:02:11.780 --> 00:02:11.790
module and the future module that
 

00:02:11.790 --> 00:02:13.790
module and the future module that
they're currently using this means that

00:02:13.790 --> 00:02:13.800
they're currently using this means that
 

00:02:13.800 --> 00:02:15.140
they're currently using this means that
if your user is booking a hotel room

00:02:15.140 --> 00:02:15.150
if your user is booking a hotel room
 

00:02:15.150 --> 00:02:16.490
if your user is booking a hotel room
they're not necessarily going to

00:02:16.490 --> 00:02:16.500
they're not necessarily going to
 

00:02:16.500 --> 00:02:18.140
they're not necessarily going to
download the code for flights or rating

00:02:18.140 --> 00:02:18.150
download the code for flights or rating
 

00:02:18.150 --> 00:02:20.540
download the code for flights or rating
if your user that navigates to another

00:02:20.540 --> 00:02:20.550
if your user that navigates to another
 

00:02:20.550 --> 00:02:22.310
if your user that navigates to another
feature of yours the base feature isn't

00:02:22.310 --> 00:02:22.320
feature of yours the base feature isn't
 

00:02:22.320 --> 00:02:24.470
feature of yours the base feature isn't
read outlet it and because you've

00:02:24.470 --> 00:02:24.480
read outlet it and because you've
 

00:02:24.480 --> 00:02:26.330
read outlet it and because you've
modularized your code you can use the

00:02:26.330 --> 00:02:26.340
modularized your code you can use the
 

00:02:26.340 --> 00:02:28.130
modularized your code you can use the
same code base for your installable app

00:02:28.130 --> 00:02:28.140
same code base for your installable app
 

00:02:28.140 --> 00:02:30.050
same code base for your installable app
as your instead app now behind the

00:02:30.050 --> 00:02:30.060
as your instead app now behind the
 

00:02:30.060 --> 00:02:31.460
as your instead app now behind the
scenes when you compile as an

00:02:31.460 --> 00:02:31.470
scenes when you compile as an
 

00:02:31.470 --> 00:02:33.170
scenes when you compile as an
installable app these different feature

00:02:33.170 --> 00:02:33.180
installable app these different feature
 

00:02:33.180 --> 00:02:35.060
installable app these different feature
modules will act like a collection of

00:02:35.060 --> 00:02:35.070
modules will act like a collection of
 

00:02:35.070 --> 00:02:37.400
modules will act like a collection of
Android libraries but when you're ther

00:02:37.400 --> 00:02:37.410
Android libraries but when you're ther
 

00:02:37.410 --> 00:02:38.930
Android libraries but when you're ther
compiled as an instep you're going to

00:02:38.930 --> 00:02:38.940
compiled as an instep you're going to
 

00:02:38.940 --> 00:02:40.640
compiled as an instep you're going to
get a zip file which you'd then upload

00:02:40.640 --> 00:02:40.650
get a zip file which you'd then upload
 

00:02:40.650 --> 00:02:42.860
get a zip file which you'd then upload
to Google Play this zip file contains

00:02:42.860 --> 00:02:42.870
to Google Play this zip file contains
 

00:02:42.870 --> 00:02:45.440
to Google Play this zip file contains
separate apks for each feature module at

00:02:45.440 --> 00:02:45.450
separate apks for each feature module at
 

00:02:45.450 --> 00:02:45.950
separate apks for each feature module at
runtime

00:02:45.950 --> 00:02:45.960
runtime
 

00:02:45.960 --> 00:02:48.110
runtime
these apks are loaded and composited

00:02:48.110 --> 00:02:48.120
these apks are loaded and composited
 

00:02:48.120 --> 00:02:49.550
these apks are loaded and composited
together to provide the adapts

00:02:49.550 --> 00:02:49.560
together to provide the adapts
 

00:02:49.560 --> 00:02:52.490
together to provide the adapts
experience Android studio 3.0 has been

00:02:52.490 --> 00:02:52.500
experience Android studio 3.0 has been
 

00:02:52.500 --> 00:02:54.110
experience Android studio 3.0 has been
designed with tools to help you modular

00:02:54.110 --> 00:02:54.120
designed with tools to help you modular
 

00:02:54.120 --> 00:02:56.150
designed with tools to help you modular
eyes and create instant apps it includes

00:02:56.150 --> 00:02:56.160
eyes and create instant apps it includes
 

00:02:56.160 --> 00:02:57.830
eyes and create instant apps it includes
a refactoring tool for splitting code

00:02:57.830 --> 00:02:57.840
a refactoring tool for splitting code
 

00:02:57.840 --> 00:03:00.770
a refactoring tool for splitting code
into modules the app links assistant

00:03:00.770 --> 00:03:00.780
into modules the app links assistant
 

00:03:00.780 --> 00:03:02.150
into modules the app links assistant
makes it easy to generate the code

00:03:02.150 --> 00:03:02.160
makes it easy to generate the code
 

00:03:02.160 --> 00:03:04.160
makes it easy to generate the code
needed to associate the URLs like you

00:03:04.160 --> 00:03:04.170
needed to associate the URLs like you
 

00:03:04.170 --> 00:03:05.660
needed to associate the URLs like you
own with your instant app feature

00:03:05.660 --> 00:03:05.670
own with your instant app feature
 

00:03:05.670 --> 00:03:07.820
own with your instant app feature
modules

00:03:07.820 --> 00:03:07.830
modules
 

00:03:07.830 --> 00:03:10.890
modules
there's also an in steps SDK with MDK

00:03:10.890 --> 00:03:10.900
there's also an in steps SDK with MDK
 

00:03:10.900 --> 00:03:13.050
there's also an in steps SDK with MDK
support and ap is for showing install

00:03:13.050 --> 00:03:13.060
support and ap is for showing install
 

00:03:13.060 --> 00:03:16.320
support and ap is for showing install
prompts the cookie API makes it easy to

00:03:16.320 --> 00:03:16.330
prompts the cookie API makes it easy to
 

00:03:16.330 --> 00:03:18.450
prompts the cookie API makes it easy to
transfer data from the incident app to

00:03:18.450 --> 00:03:18.460
transfer data from the incident app to
 

00:03:18.460 --> 00:03:21.330
transfer data from the incident app to
the installable app and configuration

00:03:21.330 --> 00:03:21.340
the installable app and configuration
 

00:03:21.340 --> 00:03:23.490
the installable app and configuration
apk support helps you reduce module size

00:03:23.490 --> 00:03:23.500
apk support helps you reduce module size
 

00:03:23.500 --> 00:03:26.070
apk support helps you reduce module size
more details on all of this are the docs

00:03:26.070 --> 00:03:26.080
more details on all of this are the docs
 

00:03:26.080 --> 00:03:29.070
more details on all of this are the docs
linked below the 3.0 Android Gradle

00:03:29.070 --> 00:03:29.080
linked below the 3.0 Android Gradle
 

00:03:29.080 --> 00:03:31.170
linked below the 3.0 Android Gradle
plugin was built with multi module apps

00:03:31.170 --> 00:03:31.180
plugin was built with multi module apps
 

00:03:31.180 --> 00:03:33.000
plugin was built with multi module apps
in mind and it compiles multi module

00:03:33.000 --> 00:03:33.010
in mind and it compiles multi module
 

00:03:33.010 --> 00:03:35.130
in mind and it compiles multi module
projects fast this table shows speeds

00:03:35.130 --> 00:03:35.140
projects fast this table shows speeds
 

00:03:35.140 --> 00:03:38.250
projects fast this table shows speeds
for a project with 130 modules finally

00:03:38.250 --> 00:03:38.260
for a project with 130 modules finally
 

00:03:38.260 --> 00:03:39.570
for a project with 130 modules finally
there are two new plugin types

00:03:39.570 --> 00:03:39.580
there are two new plugin types
 

00:03:39.580 --> 00:03:41.250
there are two new plugin types
specifically for building instant apps

00:03:41.250 --> 00:03:41.260
specifically for building instant apps
 

00:03:41.260 --> 00:03:43.020
specifically for building instant apps
the feature plugin for your feature

00:03:43.020 --> 00:03:43.030
the feature plugin for your feature
 

00:03:43.030 --> 00:03:45.660
the feature plugin for your feature
modules and the instant at plugin okay

00:03:45.660 --> 00:03:45.670
modules and the instant at plugin okay
 

00:03:45.670 --> 00:03:47.820
modules and the instant at plugin okay
so as we saw before you have modules for

00:03:47.820 --> 00:03:47.830
so as we saw before you have modules for
 

00:03:47.830 --> 00:03:49.290
so as we saw before you have modules for
all of your features and the base

00:03:49.290 --> 00:03:49.300
all of your features and the base
 

00:03:49.300 --> 00:03:51.060
all of your features and the base
feature module you're also good to

00:03:51.060 --> 00:03:51.070
feature module you're also good to
 

00:03:51.070 --> 00:03:53.130
feature module you're also good to
include two additional modules just for

00:03:53.130 --> 00:03:53.140
include two additional modules just for
 

00:03:53.140 --> 00:03:55.020
include two additional modules just for
building the app the installable app

00:03:55.020 --> 00:03:55.030
building the app the installable app
 

00:03:55.030 --> 00:03:56.670
building the app the installable app
module which builds your installable app

00:03:56.670 --> 00:03:56.680
module which builds your installable app
 

00:03:56.680 --> 00:03:58.410
module which builds your installable app
and the internet module which builds

00:03:58.410 --> 00:03:58.420
and the internet module which builds
 

00:03:58.420 --> 00:04:00.630
and the internet module which builds
your insta the install the app module

00:04:00.630 --> 00:04:00.640
your insta the install the app module
 

00:04:00.640 --> 00:04:03.090
your insta the install the app module
uses the Gradle application plugin but

00:04:03.090 --> 00:04:03.100
uses the Gradle application plugin but
 

00:04:03.100 --> 00:04:05.010
uses the Gradle application plugin but
the instant app module uses the new

00:04:05.010 --> 00:04:05.020
the instant app module uses the new
 

00:04:05.020 --> 00:04:07.560
the instant app module uses the new
Gradle in step plugin your feature

00:04:07.560 --> 00:04:07.570
Gradle in step plugin your feature
 

00:04:07.570 --> 00:04:09.600
Gradle in step plugin your feature
modules then use the new feature plugin

00:04:09.600 --> 00:04:09.610
modules then use the new feature plugin
 

00:04:09.610 --> 00:04:11.640
modules then use the new feature plugin
the feature plugin is kind of cool

00:04:11.640 --> 00:04:11.650
the feature plugin is kind of cool
 

00:04:11.650 --> 00:04:13.350
the feature plugin is kind of cool
because it will make either an APK

00:04:13.350 --> 00:04:13.360
because it will make either an APK
 

00:04:13.360 --> 00:04:15.150
because it will make either an APK
versus a library depending on whether

00:04:15.150 --> 00:04:15.160
versus a library depending on whether
 

00:04:15.160 --> 00:04:16.800
versus a library depending on whether
it's being built by the instant app or

00:04:16.800 --> 00:04:16.810
it's being built by the instant app or
 

00:04:16.810 --> 00:04:19.020
it's being built by the instant app or
the installable app module now after

00:04:19.020 --> 00:04:19.030
the installable app module now after
 

00:04:19.030 --> 00:04:20.340
the installable app module now after
using the correct Gradle plug-ins for

00:04:20.340 --> 00:04:20.350
using the correct Gradle plug-ins for
 

00:04:20.350 --> 00:04:22.050
using the correct Gradle plug-ins for
each of your build files you just have

00:04:22.050 --> 00:04:22.060
each of your build files you just have
 

00:04:22.060 --> 00:04:23.490
each of your build files you just have
to set up the dependencies between the

00:04:23.490 --> 00:04:23.500
to set up the dependencies between the
 

00:04:23.500 --> 00:04:25.350
to set up the dependencies between the
modules then you're ready to build both

00:04:25.350 --> 00:04:25.360
modules then you're ready to build both
 

00:04:25.360 --> 00:04:27.300
modules then you're ready to build both
instant and installed apps for some

00:04:27.300 --> 00:04:27.310
instant and installed apps for some
 

00:04:27.310 --> 00:04:28.950
instant and installed apps for some
hands-on experience converting a regular

00:04:28.950 --> 00:04:28.960
hands-on experience converting a regular
 

00:04:28.960 --> 00:04:30.900
hands-on experience converting a regular
app to an instant app check out the

00:04:30.900 --> 00:04:30.910
app to an instant app check out the
 

00:04:30.910 --> 00:04:33.450
app to an instant app check out the
Android in synapse code lab now if you

00:04:33.450 --> 00:04:33.460
Android in synapse code lab now if you
 

00:04:33.460 --> 00:04:35.040
Android in synapse code lab now if you
are itching to convert your own app we

00:04:35.040 --> 00:04:35.050
are itching to convert your own app we
 

00:04:35.050 --> 00:04:36.570
are itching to convert your own app we
also have tons of documentation and

00:04:36.570 --> 00:04:36.580
also have tons of documentation and
 

00:04:36.580 --> 00:04:38.070
also have tons of documentation and
resources about the requirements and

00:04:38.070 --> 00:04:38.080
resources about the requirements and
 

00:04:38.080 --> 00:04:40.260
resources about the requirements and
processes for getting started and if you

00:04:40.260 --> 00:04:40.270
processes for getting started and if you
 

00:04:40.270 --> 00:04:41.820
processes for getting started and if you
ever find yourself stuck you could reach

00:04:41.820 --> 00:04:41.830
ever find yourself stuck you could reach
 

00:04:41.830 --> 00:04:43.770
ever find yourself stuck you could reach
out on Stack Overflow with the Android

00:04:43.770 --> 00:04:43.780
out on Stack Overflow with the Android
 

00:04:43.780 --> 00:04:46.350
out on Stack Overflow with the Android
in stabs tag that's it for today happy

00:04:46.350 --> 00:04:46.360
in stabs tag that's it for today happy
 

00:04:46.360 --> 00:04:47.420
in stabs tag that's it for today happy
building

00:04:47.420 --> 00:04:47.430
building
 

00:04:47.430 --> 00:04:57.879
building
[Music]

