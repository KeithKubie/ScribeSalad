WEBVTT
Kind: captions
Language: en

00:00:00.130 --> 00:00:03.690
So when there's more than one way of
doing something, well of course we have

00:00:03.690 --> 00:00:07.370
to decide if you're implementing
an operating system or

00:00:07.370 --> 00:00:11.810
something like that, should I go
with ACLs or should I use C-lists?

00:00:11.810 --> 00:00:15.650
I said most operating systems
use access control lists, but

00:00:15.650 --> 00:00:19.090
some were done capability oriented or
capability based.

00:00:19.090 --> 00:00:21.830
So there must be some pros and cons.

00:00:21.830 --> 00:00:26.190
One must have some nice things that
perhaps the other one doesn't offer and

00:00:26.190 --> 00:00:28.690
then you have to see what is
more important to you and

00:00:28.690 --> 00:00:30.840
based on that you're
going to make a decision.

00:00:30.840 --> 00:00:33.240
Let's look at couple of
these possibilities.

00:00:33.240 --> 00:00:37.786
Metrics that you perhaps can use
to decide whether you want to go

00:00:37.786 --> 00:00:42.166
with ACL or C-list based
implementation access control.

00:00:42.166 --> 00:00:45.806
The first thing we worry
about is efficiency.

00:00:45.806 --> 00:00:46.971
So in this context,

00:00:46.971 --> 00:00:50.950
I said the couple of things when
we're talking about implementation

00:00:50.950 --> 00:00:55.160
with ACLs and C-lists, with ACL I
said you have to traverse the list.

00:00:55.160 --> 00:00:59.240
You have to go down the list looking for
an Access Control Entry, or ACE, for

00:00:59.240 --> 00:01:01.270
the user who made the request.

00:01:01.270 --> 00:01:05.385
Traversing a list is there is some
processing overhead required and

00:01:05.385 --> 00:01:07.360
the compute time it's going to take.

00:01:07.360 --> 00:01:11.920
Capability list I said it's a handle,
shouldn't be able to forge it but

00:01:11.920 --> 00:01:13.990
once you have it it's
been propagated to you.

00:01:13.990 --> 00:01:17.790
You present it to the system and
system knows that by mere possession of

00:01:17.790 --> 00:01:20.380
this capability, you should be
able to access the resource.

00:01:20.380 --> 00:01:24.930
So when comes to efficiency,
C-Lists is faster.

00:01:24.930 --> 00:01:27.295
We don't need to traverse anything but

00:01:27.295 --> 00:01:31.660
ACLs have this negative thing
were we have to go down the list.

00:01:31.660 --> 00:01:34.930
So efficiency would say
c-lists are better.

00:01:34.930 --> 00:01:39.380
But let's look at another thing that's
good to have, and that's accountability.

00:01:39.380 --> 00:01:44.740
So let's say if I ask you who all
have access to this sensitive file?

00:01:44.740 --> 00:01:48.050
With ACL, what you're going to do
is you're going to find the ACL,

00:01:48.050 --> 00:01:51.240
you'll go down the access control list,
and

00:01:51.240 --> 00:01:55.540
you have every user and what kind
of access they have for this file.

00:01:55.540 --> 00:01:59.940
So information about who can
access this file is available.

00:01:59.940 --> 00:02:02.930
All of it is available in
one place which is the ACL.

00:02:02.930 --> 00:02:06.860
So ACLs are actually good when it
comes to accountability because

00:02:06.860 --> 00:02:10.328
we can go look in one place and
be able to answer that question.

00:02:10.328 --> 00:02:12.490
How about C-list?

00:02:12.490 --> 00:02:16.600
Remember we said C-lists are stored
either in objects or catalogs for

00:02:16.600 --> 00:02:17.890
different users and so on.

00:02:17.890 --> 00:02:22.190
So to find out who all have the
capabilities, who are all the users who

00:02:22.190 --> 00:02:26.030
hold the capability for resource,
I have to look on every user backlog.

00:02:26.030 --> 00:02:30.600
I have to look into every object that
may store this capability, for example,

00:02:30.600 --> 00:02:33.820
if you want that capability to be to
be used from that particular object.

00:02:33.820 --> 00:02:38.240
So now accountability is going to be
hard because as we said we may have to

00:02:38.240 --> 00:02:40.720
look at all of the catalogs and
things like that.

00:02:40.720 --> 00:02:44.890
So C-lists are not so
great when it comes to accountability.

00:02:44.890 --> 00:02:49.410
Revocation is essentially you give
someone permission to access a resource

00:02:49.410 --> 00:02:53.630
but in the future you don't need to
share the resource with them anymore.

00:02:53.630 --> 00:02:57.320
So at that point you will revoke
their access, remove their access.

00:02:57.320 --> 00:02:59.040
With ACL, how can we do it?

00:02:59.040 --> 00:03:05.080
So let's say Alice decides to
revoke Bob's access for file foo.

00:03:05.080 --> 00:03:06.280
Well, it's easy.

00:03:06.280 --> 00:03:08.830
We know that there's an ACL for foo.

00:03:08.830 --> 00:03:13.680
And Alice makes a call to the system
saying remove ops permission.

00:03:13.680 --> 00:03:17.730
The system locates the ACL,
finds the ACE for Bob and

00:03:17.730 --> 00:03:21.260
in there removes whatever
permission that's been revoked.

00:03:21.260 --> 00:03:24.140
So the ACL revocation is actually easy.

00:03:24.140 --> 00:03:28.470
They have this desirable positive
property because we know how to go turn

00:03:28.470 --> 00:03:32.380
of the access right in the ACE,
and all the ACEs are in one place.

00:03:32.380 --> 00:03:33.350
How about C-List?

00:03:33.350 --> 00:03:35.410
How do we revoke with capabilities?

00:03:35.410 --> 00:03:36.250
Well that's interesting,

00:03:36.250 --> 00:03:39.990
it's actually hard because we know
the capability sits in Bob's catalog,

00:03:39.990 --> 00:03:43.285
and Alice can't go remove capabilities
from Bob's catalog at will.

00:03:43.285 --> 00:03:45.400
How exactly does she do it?

00:03:45.400 --> 00:03:48.290
There are interesting ways in
which you may be able to do it and

00:03:48.290 --> 00:03:49.100
things like that.

00:03:49.100 --> 00:03:53.010
But with C-lists actually
revocation is not easy.

00:03:53.010 --> 00:03:56.330
So if you look at accountability,
of course, C-list look better.

00:03:56.330 --> 00:03:59.840
If you look at efficiency,
C-List look better.

00:03:59.840 --> 00:04:03.910
But if you look at accountability and
revocation, ACLs look better.

00:04:03.910 --> 00:04:06.990
So there obviously these trade
offs we have to worry about and

00:04:06.990 --> 00:04:11.670
because of that I said most operating
systems actually choose to go the ACL

00:04:11.670 --> 00:04:15.880
route but we're going to see how maybe
we can get the best of both worlds.

