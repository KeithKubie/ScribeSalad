WEBVTT
Kind: captions
Language: en

00:00:00.260 --> 00:00:05.610
PTS provides simple abstractions, namely channel

00:00:05.610 --> 00:00:08.140
and simple perimeters to manipulate these abstractions,

00:00:08.140 --> 00:00:10.860
namely get and put. And these channels

00:00:10.860 --> 00:00:13.110
can be anywhere in the distributed system,

00:00:13.110 --> 00:00:15.850
just like UNIX sockets, these are named

00:00:15.850 --> 00:00:20.970
entitities. That are network-wide unique and therefore,

00:00:20.970 --> 00:00:22.600
you can have a large scale distributed

00:00:22.600 --> 00:00:25.990
computation in which handles exist everywhere and

00:00:25.990 --> 00:00:31.630
you can discover them and connect to them and do I/O on them using get and put.

00:00:31.630 --> 00:00:38.420
All the heavy lifting that is the systems work that needs to happen. In order

00:00:38.420 --> 00:00:42.670
to support this channel abstraction and the operations

00:00:42.670 --> 00:00:45.710
that you do want channel abstractions like the

00:00:45.710 --> 00:00:49.120
get and put operations, are all managed under

00:00:49.120 --> 00:00:51.540
the cover by the the run time system

00:00:51.540 --> 00:00:57.720
of pts. So PTS channels can be anywhere, just like unix sockets,

00:00:57.720 --> 00:01:02.950
can be accessed from anywhere, and they are network wide unqiue, and this is

00:01:02.950 --> 00:01:09.140
a similarity of the channels to unix sockets, in terms of the ubiquity,in

00:01:09.140 --> 00:01:11.530
the entire distributive system. But what

00:01:11.530 --> 00:01:16.930
makes PTS channels particularly attractive for situation

00:01:16.930 --> 00:01:22.020
awareness applications is that the run time system and the APIs,

00:01:22.020 --> 00:01:27.130
provided for manipulating the channel Treats time as a first class

00:01:27.130 --> 00:01:32.030
entity. What we mean by that is time is manipulatable by

00:01:32.030 --> 00:01:36.780
the application, in the way it specifies items to the runtime

00:01:36.780 --> 00:01:42.110
system. And it queries the runtime system using time as

00:01:42.110 --> 00:01:46.720
index into the channel, and that's what is unique about the PTS channels.

00:01:48.050 --> 00:01:54.110
The second unique property of the PTS extraction is that, it allows streams

00:01:54.110 --> 00:01:58.210
to be persistent under application control.

00:01:58.210 --> 00:02:01.005
Remember that these sensors are producing data

00:02:01.005 --> 00:02:04.880
24/7. Therefore continuously data is being

00:02:04.880 --> 00:02:07.550
produced, and all of it cannot obviously

00:02:07.550 --> 00:02:12.630
be held in the memory of the CPU, so they have to be persisted

00:02:12.630 --> 00:02:17.760
on more archival storage like a disc, and PTS

00:02:17.760 --> 00:02:23.040
provides the ability to persist the streams under application control.

00:02:23.040 --> 00:02:27.920
The flip side of persisting streams is that when a query

00:02:27.920 --> 00:02:32.700
comes in. For a particular channel, it is actually

00:02:32.700 --> 00:02:37.910
saying get me items from a lower bound to an upper bound, and the lower bound

00:02:37.910 --> 00:02:43.590
may be yesterday, which means that we are asking for data that are historical in

00:02:43.590 --> 00:02:49.530
nature in addition to live data. So the PTS run time system and the semantics

00:02:49.530 --> 00:02:54.380
of channels, allows seamlessly handling live and historical

00:02:54.380 --> 00:02:57.600
data. The perimeters are just get and put,

00:02:57.600 --> 00:03:01.160
whether we are accessing data that is current or

00:03:01.160 --> 00:03:04.610
historical. You give a lower bone marker and an upper

00:03:04.610 --> 00:03:07.620
bone marker and the run time system gets to

00:03:07.620 --> 00:03:10.890
work in doing whatever heavy lifting that needs to be

00:03:10.890 --> 00:03:13.850
done. To bring the data that you're looking for

00:03:13.850 --> 00:03:17.710
between the lower bond marker and the upper bond marker.

00:03:17.710 --> 00:03:20.220
So that's the power of the PTS channel perimeter.

00:03:20.220 --> 00:03:23.310
It is simple to use, but at the same time

00:03:23.310 --> 00:03:29.710
it provides handles that will make the life of the domain expert that is

00:03:29.710 --> 00:03:33.690
developing. A situation awareness application, so much

00:03:33.690 --> 00:03:36.590
easier because it allows time to be

00:03:36.590 --> 00:03:39.550
manipulated as a first class entity recognized

00:03:39.550 --> 00:03:42.469
by the programming system. And it allows

00:03:42.469 --> 00:03:45.762
persistence for data beyond the lifetime of

00:03:45.762 --> 00:03:48.521
a computation by moving it to archive

00:03:48.521 --> 00:03:52.474
storage under application control. And thirdly, it

00:03:52.474 --> 00:03:56.816
allows for seamlessly integrating live and historical data.

