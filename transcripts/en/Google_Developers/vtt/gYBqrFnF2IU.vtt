WEBVTT
Kind: captions
Language: en

00:00:00.860 --> 00:00:03.025
ROB DODSON: ES6 generators
will take the pain out

00:00:03.025 --> 00:00:04.590
of asynchronous programming.

00:00:04.590 --> 00:00:08.910
And what happens when you ask
a neural network what it sees?

00:00:08.910 --> 00:00:09.940
I'm Rob Dodson.

00:00:09.940 --> 00:00:10.870
This is LazyWeb.

00:00:14.710 --> 00:00:17.350
ES6 generators will
dramatically simplify the way

00:00:17.350 --> 00:00:19.040
we write asynchronous code.

00:00:19.040 --> 00:00:20.010
JAFAR HUSAIN: How many
people understand them?

00:00:20.010 --> 00:00:22.260
ROB DODSON: But first, we
have to understand them.

00:00:22.260 --> 00:00:25.100
Jafar Husein breaks down the
concepts that power generators,

00:00:25.100 --> 00:00:28.040
like iterators and observers,
and demonstrates the power

00:00:28.040 --> 00:00:29.970
of asynchronous iteration.

00:00:29.970 --> 00:00:32.950
You'll want to watch the video a
few times to grok the examples,

00:00:32.950 --> 00:00:35.190
but once it clicks,
you're golden.

00:00:35.190 --> 00:00:37.675
MARCY SUTTON: Let's do one
cheese and one pepperoni.

00:00:37.675 --> 00:00:39.300
ROB DODSON: Learn
accessibility testing

00:00:39.300 --> 00:00:41.580
in the time it takes
to order a pizza.

00:00:41.580 --> 00:00:44.330
Marcy Sutton introduces us to
semi-automated accessibility

00:00:44.330 --> 00:00:47.180
tools, like Chrome's
a11y audit tool, which

00:00:47.180 --> 00:00:49.830
will give your site an
accessibility report card,

00:00:49.830 --> 00:00:51.850
as well as fully
automated solutions,

00:00:51.850 --> 00:00:54.090
like Angular's
Protractor test runner.

00:00:54.090 --> 00:00:56.700
The talk also demonstrates
what a unit test for accessible

00:00:56.700 --> 00:00:58.430
attributes should look like.

00:00:58.430 --> 00:01:01.270
You can find more info
down in the show notes.

00:01:01.270 --> 00:01:03.430
Why should I use SVG?

00:01:03.430 --> 00:01:07.250
Because it's a
rainbow of awesome!

00:01:07.250 --> 00:01:09.500
In this talk, Chris
Coyier explains the basics

00:01:09.500 --> 00:01:12.060
of SVG, and how to
use it for the web.

00:01:12.060 --> 00:01:14.220
SVG is a vector
image format that

00:01:14.220 --> 00:01:16.300
uses markup instead
of pixels, making

00:01:16.300 --> 00:01:19.680
it extremely easy to compress,
and also programmable.

00:01:19.680 --> 00:01:22.730
The talk highlights useful
libraries for working with SVG,

00:01:22.730 --> 00:01:25.520
tools to incorporate SVG
into your build process,

00:01:25.520 --> 00:01:28.200
and a ton of really
awesome CodePen demos.

00:01:28.200 --> 00:01:32.020
You can grab the links
down in the show notes.

00:01:32.020 --> 00:01:33.500
Artificial neural
networks help us

00:01:33.500 --> 00:01:35.820
classify and search for images.

00:01:35.820 --> 00:01:40.000
But what happens when
you run them backwards?

00:01:40.000 --> 00:01:41.840
A post on the
Google research blog

00:01:41.840 --> 00:01:43.420
highlights what
happens when you ask

00:01:43.420 --> 00:01:45.280
different layers
of a neural network

00:01:45.280 --> 00:01:48.050
to amplify what they
see in a picture.

00:01:48.050 --> 00:01:49.810
By switching to
higher level layers,

00:01:49.810 --> 00:01:53.750
whole objects seem to emerge,
similar to the human phenomenon

00:01:53.750 --> 00:01:57.450
of pareidolia, or
seeing shapes in clouds.

00:01:57.450 --> 00:01:59.520
You can get the full
article plus a gallery

00:01:59.520 --> 00:02:04.240
of generated images
down in the show notes.

00:02:04.240 --> 00:02:06.020
Offline caching means
content is instantly

00:02:06.020 --> 00:02:08.289
available on any connection,
but what about pages

00:02:08.289 --> 00:02:09.699
that aren't in the cache yet?

00:02:12.840 --> 00:02:15.590
In this video, Jake Archibald
demonstrates the new background

00:02:15.590 --> 00:02:17.662
sync feature in Chrome Canary.

00:02:17.662 --> 00:02:19.620
Background sync let's
you download content even

00:02:19.620 --> 00:02:21.510
when the page is not
running in the browser,

00:02:21.510 --> 00:02:24.810
and then later notify the user
that their content is ready.

00:02:24.810 --> 00:02:28.260
The offline web wins again.

00:02:28.260 --> 00:02:29.510
That's it for this week folks.

00:02:29.510 --> 00:02:31.310
Links to everything are
down in the show notes.

00:02:31.310 --> 00:02:32.780
Click that little
subscribe button.

00:02:32.780 --> 00:02:36.810
And to all you lazywebbers out
there, thanks for watching.

