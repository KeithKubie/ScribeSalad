WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.000
So now we've modified our get_next_target procedure,

00:00:04.000 --> 00:00:09.000
and it will return None as the first output if there's no next target.

00:00:09.000 --> 00:00:12.000
Otherwise it will return the URL and the end_quote.

00:00:12.000 --> 00:00:15.000
And now all we have to do is figure out how to keep going.

00:00:15.000 --> 00:00:17.000
Let's look at what we were doing before.

00:00:17.000 --> 00:00:19.000
We turned these 4 lines into our procedure

00:00:19.000 --> 00:00:22.000
so now we can--instead of having all this code,

00:00:22.000 --> 00:00:25.000
we're going to call the get_next_target

00:00:25.000 --> 00:00:27.000
and assign the results.

00:00:27.000 --> 00:00:30.000
Now we've got the value of URL, which we do on a print out,

00:00:30.000 --> 00:00:32.000
so we're still going to print that out as before.

00:00:32.000 --> 00:00:34.000
And we still want to update the value of page,

00:00:34.000 --> 00:00:37.000
but we don't want to use end_quote now.

00:00:37.000 --> 00:00:40.000
What we want to use is the value that was returned here,

00:00:40.000 --> 00:00:43.000
which we assigned to the variable endpos.

00:00:43.000 --> 00:00:46.000
And then, well, we're doing it all again.

00:00:46.000 --> 00:00:51.000
So, all of the code here is just another call to get_next_target,

00:00:51.000 --> 00:00:54.000
and similarly, this would be endpos instead of end_quote.

00:00:54.000 --> 00:00:58.000
And we want to keep going until we get to the end,

00:00:58.000 --> 00:01:00.000
so how do we decide when we've gotten to the end?

00:01:00.000 --> 00:01:03.000
Well, we got to the end when the URL

00:01:03.000 --> 00:01:05.000
that's returned is None.

00:01:05.000 --> 00:01:09.000
And when the call to get_next_target returns None for the URL,

00:01:09.000 --> 00:01:12.000
we know we're done.

00:01:12.000 --> 00:01:14.000
We've seen a way to keep going. That's a while loop.

00:01:14.000 --> 00:01:16.000
We've seen a way to do a test.

00:01:16.000 --> 00:01:18.000
We want to test the URL.

00:01:18.000 --> 00:01:21.000
And we have everything we need now to print all the links on the page.

00:01:21.000 --> 00:01:24.000
I'm going to give you a start for how to write this procedure,

00:01:24.000 --> 00:01:26.000
and then you're going to finish it.

00:01:26.000 --> 00:01:29.000
What we're going to do is define a procedure

00:01:29.000 --> 00:01:31.000
that will print all the links on the page,

00:01:31.000 --> 00:01:36.000
and it takes the page as input, and so we want to use a while loop to keep going,

00:01:36.000 --> 00:01:41.000
and I am going to leave blank the test condition for the while loop.

00:01:41.000 --> 00:01:43.000
We'll leave that as something for you to figure out.

00:01:43.000 --> 00:01:46.000
In the body of the while loop, what we're going to call get_next_target,

00:01:46.000 --> 00:01:50.000
assigning URL and endpos to the result.

00:01:50.000 --> 00:01:54.000
This is just like what we were doing in the example code.

00:01:54.000 --> 00:01:57.000
Now what we need to do is check whether we got a valid URL,

00:01:57.000 --> 00:02:00.000
so what we were doing here,

00:02:00.000 --> 00:02:04.000
we assumed that we always got a valid URL,

00:02:04.000 --> 00:02:07.000
and we printed it out, and we kept going, but we need to do something to test

00:02:07.000 --> 00:02:11.000
whether the URL that we got back is None.

00:02:11.000 --> 00:02:13.000
That's what we'll do.

00:02:13.000 --> 00:02:17.000
We have if URL, and if that's true, that means we found a valid URL.

00:02:17.000 --> 00:02:20.000
We didn't get the value None as the result from get_next_target.

00:02:20.000 --> 00:02:24.000
And so we want to print that out as we were doing before.

00:02:24.000 --> 00:02:28.000
We'll print the URL, and we'll advance the page

00:02:28.000 --> 00:02:30.000
to the next position.

00:02:30.000 --> 00:02:32.000
If we didn't get a valid URL,

00:02:32.000 --> 00:02:37.000
that means that get_next_target did not find a link.

00:02:37.000 --> 00:02:39.000
There were no more links on the page,

00:02:39.000 --> 00:02:43.000
and we need to do something else, and I will leave blank

00:02:43.000 --> 00:02:45.000
what we need to do here.

00:02:45.000 --> 00:02:47.000
So, this is all we need for the code to print_all_links.

00:02:47.000 --> 00:02:50.000
There are 2 parts left for you to do as the quiz here.

00:02:50.000 --> 00:02:53.000
See if you can figure out what should go as the test condition for the while

00:02:53.000 --> 00:02:56.000
and in the block for the else.

00:02:56.000 --> 00:02:59.000
And if that's correct, you'll be able to print all the links on the page.

