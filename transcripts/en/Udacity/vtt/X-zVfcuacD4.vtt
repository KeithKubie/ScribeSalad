WEBVTT
Kind: captions
Language: en

00:00:00.320 --> 00:00:04.350
We can make sure this will never happen simply by sorting our data,

00:00:04.350 --> 00:00:09.500
using the built in JavaScript.sort function to find on all arrays, and

00:00:09.500 --> 00:00:13.950
make sure that our nested data set is in the correct order before we bind it

00:00:13.950 --> 00:00:16.030
in our data binding function.

00:00:16.030 --> 00:00:20.030
To sort our data, the elements I've nested get passed to

00:00:20.030 --> 00:00:25.120
our call back accessor function two at a time, a and b.

00:00:25.120 --> 00:00:28.330
And based on the return value from this function,

00:00:28.330 --> 00:00:32.299
either a gets placed before b or b gets placed before a.

00:00:32.299 --> 00:00:37.740
If the return value is less than zero, a gets placed first or

00:00:37.740 --> 00:00:40.530
rather, the first argument to the function.

00:00:40.530 --> 00:00:44.650
If the return value is greater than zero, b gets placed first.

00:00:44.650 --> 00:00:47.890
Or rather, the second argument to the function gets placed first.

00:00:47.890 --> 00:00:51.550
And if what gets returned is zero then there's no change.

00:00:51.550 --> 00:00:55.880
Simply leave a and b in the order that they originally were in.

00:00:55.880 --> 00:00:59.860
In our case, if the attendance of b is greater than the attendance of a,

00:00:59.860 --> 00:01:04.830
the return value will be positive and b will get placed first.

00:01:04.830 --> 00:01:08.730
Thus having the effect of drawing the larger attendances first.

00:01:08.730 --> 00:01:11.410
If a happens to have a larger attendance.

00:01:11.410 --> 00:01:14.740
Then b, the return value will be negative.

00:01:14.740 --> 00:01:16.810
In this case, a will get placed first.

00:01:16.810 --> 00:01:21.080
And again, this is correct since a would have the larger attendance.

00:01:21.080 --> 00:01:22.890
And now that our map is on a take shape,

00:01:22.890 --> 00:01:27.110
we have geographies of countries plotted as well as data,

00:01:27.110 --> 00:01:31.490
we can begin adding animation to encode the passage of time.

