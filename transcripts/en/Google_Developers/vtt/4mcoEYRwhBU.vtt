WEBVTT
Kind: captions
Language: en

00:00:09.040 --> 00:00:09.790
IBRAHIM ULUKAYA: Hi, everyone.

00:00:09.790 --> 00:00:11.680
I am Ibrahim Ulukaya from
YouTube API Developer

00:00:11.680 --> 00:00:12.840
Relations Team.

00:00:12.840 --> 00:00:16.660
And joining me, Roman Nurik
from Android API Developer

00:00:16.660 --> 00:00:17.120
Relations Team.

00:00:17.120 --> 00:00:17.460
ROMAN NURIK: Hey, guys.

00:00:17.460 --> 00:00:18.130
How's it going?

00:00:18.130 --> 00:00:21.110
IBRAHIM ULUKAYA: And today, as
you guys already figured out,

00:00:21.110 --> 00:00:25.000
we'll talk about the YouTube API
integration with Android.

00:00:25.000 --> 00:00:26.670
And so it'll be like
an Android app.

00:00:26.670 --> 00:00:29.910
We just open sourced YouTube
Direct Lite Android app.

00:00:29.910 --> 00:00:32.800
And we'll talk about the design
principles going on

00:00:32.800 --> 00:00:36.170
with it, as well as the YouTube
APIs we used and the

00:00:36.170 --> 00:00:37.870
YouTube Direct Lite.

00:00:37.870 --> 00:00:39.190
So maybe let's get it started.

00:00:39.190 --> 00:00:41.430
What is YouTube Direct Lite?

00:00:41.430 --> 00:00:44.760
As you guys are always asking
in Stack Overflow, you ask

00:00:44.760 --> 00:00:48.570
about how I can actually get
videos from other people.

00:00:48.570 --> 00:00:52.610
How can I let other people
upload videos to my account?

00:00:52.610 --> 00:00:55.370
Actually, for the privacy
issues, we don't actually want

00:00:55.370 --> 00:00:58.745
you to share your password or
share your YouTube account and

00:00:58.745 --> 00:01:02.040
let everyone upload into
your YouTube channel.

00:01:02.040 --> 00:01:05.840
So rather than that, we just
created YouTube Direct Lite.

00:01:05.840 --> 00:01:10.640
What YouTube Direct Lite is, it
lets people upload to their

00:01:10.640 --> 00:01:14.930
own channel but sends a
notification for your

00:01:14.930 --> 00:01:18.360
playlists so that you can
moderate that playlist, and

00:01:18.360 --> 00:01:20.440
you can approve which
videos you want

00:01:20.440 --> 00:01:22.860
to be on your playlist.

00:01:22.860 --> 00:01:26.430
So once they upload it, they
actually come to a pending and

00:01:26.430 --> 00:01:30.280
moderation playlist, and you
approve any video you want.

00:01:30.280 --> 00:01:32.950
And they actually come to
the real playlist you

00:01:32.950 --> 00:01:34.430
want to show the world.

00:01:34.430 --> 00:01:36.890
So this way, you have the
first [INAUDIBLE]

00:01:36.890 --> 00:01:39.870
moderation before
they go public.

00:01:39.870 --> 00:01:44.990
And for this one, we also want
to create, a mobile app.

00:01:44.990 --> 00:01:47.940
This way, we actually started
with the YouTube Direct Lite

00:01:47.940 --> 00:01:49.380
Android project.

00:01:49.380 --> 00:01:53.910
And so separate from the
project, we actually want to

00:01:53.910 --> 00:01:56.880
gather the best YouTube API use
cases, as well as the best

00:01:56.880 --> 00:02:01.480
YouTube Android design cases, so
that you guys can use as a

00:02:01.480 --> 00:02:03.210
reference project.

00:02:03.210 --> 00:02:06.040
All of this project is open
sourced on GitHub,

00:02:06.040 --> 00:02:07.290
github/youtube/ytd-android.

00:02:10.630 --> 00:02:15.300
And you guys, feel free to
contribute back, as well as

00:02:15.300 --> 00:02:19.010
customize it and use it
for your own use case.

00:02:19.010 --> 00:02:23.940
Like use cases could be, you
could request your fans to

00:02:23.940 --> 00:02:26.880
upload videos for your website
or your service.

00:02:26.880 --> 00:02:30.390
And then you can create a
YouTube competition and let

00:02:30.390 --> 00:02:32.440
people upload the best videos.

00:02:32.440 --> 00:02:35.940
And you can just moderate it
and show it on your site.

00:02:35.940 --> 00:02:37.320
So let's get started, maybe.

00:02:37.320 --> 00:02:43.160
I'll just show a little demo, if
we can show up the screen.

00:02:43.160 --> 00:02:46.770
So in the first menu, we
actually have the YouTube

00:02:46.770 --> 00:02:47.860
authentication.

00:02:47.860 --> 00:02:51.700
It actually requests both from
YouTube, to manage my YouTube

00:02:51.700 --> 00:02:54.610
account, as well as my
Google+ account.

00:02:54.610 --> 00:02:58.660
We will actually talk about
which APIs are we using and

00:02:58.660 --> 00:03:00.410
why we are using them.

00:03:00.410 --> 00:03:03.980
And starting with that, the
actual proof for authorization

00:03:03.980 --> 00:03:06.070
is the OAuth 2.0 flow.

00:03:06.070 --> 00:03:09.190
And once I make sure we're
authorized, it will start

00:03:09.190 --> 00:03:12.700
showing all my videos,
previous videos and

00:03:12.700 --> 00:03:15.900
[INAUDIBLE], like some
funny videos inside.

00:03:15.900 --> 00:03:19.300
And so I have three basic
options here.

00:03:19.300 --> 00:03:22.970
One option is, I can easily
send any of my

00:03:22.970 --> 00:03:25.160
YouTube videos here.

00:03:25.160 --> 00:03:27.060
I can select any of them.

00:03:27.060 --> 00:03:29.140
I can let them play.

00:03:29.140 --> 00:03:31.960
And once they're actually
played--

00:03:31.960 --> 00:03:34.960
and I want to really
show that video.

00:03:34.960 --> 00:03:36.050
Bear with me.

00:03:36.050 --> 00:03:38.720
There's slow internet here--

00:03:38.720 --> 00:03:41.870
I can actually send
them to YouTube.

00:03:41.870 --> 00:03:42.680
So yeah.

00:03:42.680 --> 00:03:44.650
The video already
started playing.

00:03:44.650 --> 00:03:47.830
And then I actually send
it that playlist.

00:03:47.830 --> 00:03:49.230
I can submit.

00:03:49.230 --> 00:03:51.850
And the video's already
submitted to that playlist I

00:03:51.850 --> 00:03:53.130
want to submit.

00:03:53.130 --> 00:03:59.370
I actually, in this one, I
created a constant file.

00:03:59.370 --> 00:04:01.310
So you can actually, quick,
put your [INAUDIBLE]

00:04:01.310 --> 00:04:02.100
file list.

00:04:02.100 --> 00:04:05.650
You can burn in the playlist
ID you want to send.

00:04:05.650 --> 00:04:09.660
And all the submissions
go to that playlist.

00:04:09.660 --> 00:04:13.060
The second one, you can actually
use any of the

00:04:13.060 --> 00:04:15.130
pre-recorded videos.

00:04:15.130 --> 00:04:15.840
We have some videos.

00:04:15.840 --> 00:04:16.895
ROMAN NURIK: A lot
of my own videos.

00:04:16.895 --> 00:04:18.079
IBRAHIM ULUKAYA: Oh, OK.

00:04:18.079 --> 00:04:19.120
Great.

00:04:19.120 --> 00:04:21.589
And use that uploads.

00:04:21.589 --> 00:04:26.490
And actually, there's already an
upload started, and we can

00:04:26.490 --> 00:04:27.550
actually track the process.

00:04:27.550 --> 00:04:31.110
If there was a longer
video, it would show

00:04:31.110 --> 00:04:32.310
the progress better.

00:04:32.310 --> 00:04:35.310
Or as a third option, you can
even start recording a video

00:04:35.310 --> 00:04:36.940
from scratch.

00:04:36.940 --> 00:04:39.290
We can have a nice
video and maybe--

00:04:39.290 --> 00:04:39.630
yeah.

00:04:39.630 --> 00:04:40.630
ROMAN NURIK: Wah!

00:04:40.630 --> 00:04:43.306
IBRAHIM ULUKAYA: Yeah, that
shows something like us.

00:04:43.306 --> 00:04:47.050
And maybe the cameras were
nothing else, so I've used

00:04:47.050 --> 00:04:48.930
Android's camera as well.

00:04:48.930 --> 00:04:49.970
And I'll just [INAUDIBLE]

00:04:49.970 --> 00:04:51.880
and let it [INAUDIBLE] elements,
so you can see the

00:04:51.880 --> 00:04:54.090
progress bar working for real.

00:04:54.090 --> 00:04:57.430
We'll record a little
bit longer video.

00:04:57.430 --> 00:05:00.170
For [INAUDIBLE] to
explain, we use--

00:05:00.170 --> 00:05:01.960
there are three use cases.

00:05:01.960 --> 00:05:04.720
First one, you can submit one
of your already uploaded

00:05:04.720 --> 00:05:08.190
YouTube videos to
the submission.

00:05:08.190 --> 00:05:14.230
You can record a new video, as
well as you can send any of

00:05:14.230 --> 00:05:17.640
your recorded videos from
your Android device.

00:05:17.640 --> 00:05:19.840
And they will all be
sent to YouTube.

00:05:19.840 --> 00:05:23.760
So by using that, we use either
YouTube uploading, or

00:05:23.760 --> 00:05:27.650
we just put an extra tag for it
so that YouTube Direct Lite

00:05:27.650 --> 00:05:32.210
knows which playlist it will
actually send the video.

00:05:32.210 --> 00:05:34.640
I think that's enough,
almost one minute.

00:05:34.640 --> 00:05:36.930
Yeah.

00:05:36.930 --> 00:05:38.130
Let's try to send this video.

00:05:38.130 --> 00:05:41.060
And we can always
show the video.

00:05:41.060 --> 00:05:43.210
And you already started.

00:05:43.210 --> 00:05:46.590
So as you see, we have a
notification bar here.

00:05:46.590 --> 00:05:49.990
It is just saying that the
initiation is completed.

00:05:49.990 --> 00:05:52.260
It will show us the progress.

00:05:52.260 --> 00:05:55.210
And one it's done, we will
actually be able to see.

00:05:55.210 --> 00:05:58.130
And as another reminder, while
the video is already

00:05:58.130 --> 00:06:01.730
processed, we will have a nice
notification saying that our

00:06:01.730 --> 00:06:03.170
video is ready.

00:06:03.170 --> 00:06:06.130
You can just go and
watch your video.

00:06:06.130 --> 00:06:09.630
Now I'm on my own video
manager on my account.

00:06:09.630 --> 00:06:14.420
And I see actually my rejected
YTDL submissions, as well as

00:06:14.420 --> 00:06:19.040
my real playlist that I want
to send my videos on.

00:06:19.040 --> 00:06:25.610
It has three videos, so my
videos that I shared before.

00:06:25.610 --> 00:06:29.560
And I will actually go to
my moderation tool.

00:06:29.560 --> 00:06:31.785
My moderation is hosted on
AppSpot, ytdirectlite.app

00:06:31.785 --> 00:06:39.270
spot.com/static-min/admin.html.

00:06:39.270 --> 00:06:41.260
From there, I will actually--

00:06:41.260 --> 00:06:44.132
I already logged in with
my own account.

00:06:44.132 --> 00:06:47.210
And I see my playlist.

00:06:47.210 --> 00:06:50.230
And when I actually go, I
actually see those three

00:06:50.230 --> 00:06:53.380
videos that were already
approved, as well as the

00:06:53.380 --> 00:06:56.810
pending video that
I just submitted.

00:06:56.810 --> 00:07:00.020
So all I need to do is actually
approve a video.

00:07:00.020 --> 00:07:04.370
And once they approve it, if we
actually go to "Success!"

00:07:04.370 --> 00:07:08.575
And I will be able to see the
video already in my playlist.

00:07:08.575 --> 00:07:14.510
And if I go back to my old video
here, to my playlist, I

00:07:14.510 --> 00:07:18.510
see that it's already uploaded
on my playlist here.

00:07:18.510 --> 00:07:21.230
It was like the YouTube
Direct Lite app.

00:07:21.230 --> 00:07:24.210
And by saying that, I will hand
off to Roman Nurik here

00:07:24.210 --> 00:07:27.180
to talk about the design
principles we used, because

00:07:27.180 --> 00:07:28.770
this app was like
real [INAUDIBLE]

00:07:28.770 --> 00:07:29.310
at first.

00:07:29.310 --> 00:07:31.750
I take it to Roman, and
Roman helped me a lot.

00:07:31.750 --> 00:07:33.045
And let's see what he says.

00:07:36.700 --> 00:07:39.220
ROMAN NURIK: OK, so let's talk
a little bit about the design

00:07:39.220 --> 00:07:39.820
of this app.

00:07:39.820 --> 00:07:43.180
So there's a couple of things
I wanted to talk about here.

00:07:43.180 --> 00:07:46.940
The first is that the most
important part of this app is

00:07:46.940 --> 00:07:50.750
that there's a single primary
general flow.

00:07:50.750 --> 00:07:53.300
You have some sort of video
content, or you want to record

00:07:53.300 --> 00:07:55.040
that video content.

00:07:55.040 --> 00:07:57.470
And then you want to take it
into kind of a staging or

00:07:57.470 --> 00:07:58.640
preview area.

00:07:58.640 --> 00:08:01.380
And then from there, you want
to upload that video that

00:08:01.380 --> 00:08:04.390
you've chosen or taken.

00:08:04.390 --> 00:08:06.900
And then from there,
it basically just--

00:08:06.900 --> 00:08:11.770
all the additional interaction
goes through the status bar

00:08:11.770 --> 00:08:12.890
notification.

00:08:12.890 --> 00:08:15.990
So there's a couple ways
you could do this.

00:08:15.990 --> 00:08:18.510
The first thing to note is
actually that there's three

00:08:18.510 --> 00:08:20.790
different ways to
ingest video.

00:08:20.790 --> 00:08:24.100
You can choose from an existing
YouTube video that's

00:08:24.100 --> 00:08:24.760
in your account.

00:08:24.760 --> 00:08:28.830
You can pick an item from your
gallery, basically a video

00:08:28.830 --> 00:08:31.390
that you've previously recorded,
kind of just on the

00:08:31.390 --> 00:08:33.059
phone, without uploading
anywhere.

00:08:33.059 --> 00:08:35.679
Or you can record on the fly.

00:08:35.679 --> 00:08:38.470
So in the original version of
this app, I remember that you

00:08:38.470 --> 00:08:41.659
had two or three big buttons.

00:08:41.659 --> 00:08:45.020
And those buttons were Pick
a Video or Choose

00:08:45.020 --> 00:08:46.770
From Gallery or Record.

00:08:46.770 --> 00:08:50.800
So the issue with just
immediately throwing the user

00:08:50.800 --> 00:08:53.910
into a place where they just
have three big buttons is that

00:08:53.910 --> 00:08:56.940
they then immediately have to
make the decision, and it's

00:08:56.940 --> 00:08:57.930
very static.

00:08:57.930 --> 00:09:01.150
It's also very hard, from a
design standpoint, to make

00:09:01.150 --> 00:09:05.560
that look really good without
compromising basic visual

00:09:05.560 --> 00:09:08.230
design principles, like
use of white space

00:09:08.230 --> 00:09:09.450
and things like that.

00:09:09.450 --> 00:09:12.960
So one of the things that we
decided to do was, let's take

00:09:12.960 --> 00:09:18.890
the most common or potentially
most common form of input, one

00:09:18.890 --> 00:09:23.220
of the most common form of
ingestion techniques, and make

00:09:23.220 --> 00:09:26.340
that immediately available
right as soon as

00:09:26.340 --> 00:09:27.085
you open the app.

00:09:27.085 --> 00:09:30.260
So as soon as you open the
app, you see your list of

00:09:30.260 --> 00:09:32.670
existing uploads on YouTube.

00:09:32.670 --> 00:09:36.820
And that's basically your
number one kind

00:09:36.820 --> 00:09:39.820
of ingestion option.

00:09:39.820 --> 00:09:42.790
If you don't really want to
choose something that you've

00:09:42.790 --> 00:09:44.780
already uploaded, you basically
have the additional

00:09:44.780 --> 00:09:50.320
options, which are the maybe 20%
use case, or maybe 15% use

00:09:50.320 --> 00:09:51.160
case, or something like that.

00:09:51.160 --> 00:09:54.210
You have those as additional
options along the bottom.

00:09:54.210 --> 00:09:56.850
Or, if you were to do this in
your own app, you could put

00:09:56.850 --> 00:09:59.060
this as an action at the top
right of the screen, in the

00:09:59.060 --> 00:10:01.060
action bar.

00:10:01.060 --> 00:10:03.820
And then the nice thing about
this is that no matter which

00:10:03.820 --> 00:10:07.920
ingestion technique you choose,
you basically get

00:10:07.920 --> 00:10:10.280
thrown into the same
preview flow.

00:10:10.280 --> 00:10:13.870
You get that same big preview
view, and then with that

00:10:13.870 --> 00:10:17.010
button, Upload to YouTube
Direct Lite.

00:10:17.010 --> 00:10:19.400
And from there, the same
thing happens.

00:10:19.400 --> 00:10:22.210
So it's very immediately
obvious to the user

00:10:22.210 --> 00:10:24.270
what's going on.

00:10:24.270 --> 00:10:27.110
So a couple of interesting
things we did here, in

00:10:27.110 --> 00:10:29.100
addition to, obviously,
changing

00:10:29.100 --> 00:10:31.650
around the overall flow.

00:10:31.650 --> 00:10:35.820
First, we spent a lot of
time with the visuals.

00:10:35.820 --> 00:10:37.660
Obviously, we're using
interesting things like

00:10:37.660 --> 00:10:38.660
topography.

00:10:38.660 --> 00:10:40.190
We're using Roboto Light here.

00:10:40.190 --> 00:10:42.930
We're using Roboto Condensed
in a couple of areas.

00:10:42.930 --> 00:10:49.170
We're using Roboto Condensed
Bold All Caps, I believe, as

00:10:49.170 --> 00:10:51.030
the captions for
these buttons.

00:10:51.030 --> 00:10:55.740
And that follows some of the
standard Holo design aesthetic

00:10:55.740 --> 00:10:59.490
that you would see in
other system apps.

00:10:59.490 --> 00:11:03.760
We are also employing some
responsive design techniques.

00:11:03.760 --> 00:11:07.680
So it actually lives a little
better on the Nexus 7.

00:11:07.680 --> 00:11:10.120
But the difference between here,
this screen, and Nexus

00:11:10.120 --> 00:11:13.160
7, and say, Nexus 4, is that
on Nexus 7, you'd have a

00:11:13.160 --> 00:11:14.370
two-column grid.

00:11:14.370 --> 00:11:15.990
Or in this case, on a
Nexus 10, you have

00:11:15.990 --> 00:11:17.230
a two-column grid.

00:11:17.230 --> 00:11:19.050
Probably here, you could even
do more, like a four-column

00:11:19.050 --> 00:11:21.010
grid or something.

00:11:21.010 --> 00:11:23.790
But on a Nexus 4, it's
a single-column list.

00:11:23.790 --> 00:11:26.700
And that helps mitigate some of
the white space issues that

00:11:26.700 --> 00:11:27.820
you would run into.

00:11:27.820 --> 00:11:30.136
So for example, if you had just
shown a list on a Nexus

00:11:30.136 --> 00:11:34.050
10 in landscape, you'd notice
that things were very, very

00:11:34.050 --> 00:11:36.570
long and incredibly strange
aspect ratios.

00:11:36.570 --> 00:11:40.970
So using kind of a multi-column
grid on tablets

00:11:40.970 --> 00:11:43.380
can help you kind of have a
much better responsively

00:11:43.380 --> 00:11:45.370
designed app.

00:11:45.370 --> 00:11:47.850
So outside of that,
we also used the

00:11:47.850 --> 00:11:51.000
standard metrics on Android.

00:11:51.000 --> 00:11:55.970
So there's the standard 48dp
rhythm and the 16dp margins.

00:11:55.970 --> 00:11:59.430
So notice that the margins
almost everywhere along this

00:11:59.430 --> 00:12:01.780
left edge are 16 dps.

00:12:01.780 --> 00:12:04.950
The spacing throughout
is using 16 dps

00:12:04.950 --> 00:12:06.700
or 8 dps or 4 dps.

00:12:06.700 --> 00:12:09.500
That's kind of the standard
spacing model that we use.

00:12:09.500 --> 00:12:11.330
And also, the iconography.

00:12:11.330 --> 00:12:13.970
So originally, we had very big,

00:12:13.970 --> 00:12:17.230
colorful, gradienty buttons.

00:12:17.230 --> 00:12:21.450
And we switched to a more muted,
subdued, flatter style

00:12:21.450 --> 00:12:22.060
for the icons.

00:12:22.060 --> 00:12:25.620
So you'll notice here that the
Gallery icon is a very

00:12:25.620 --> 00:12:27.000
standard gallery icon.

00:12:27.000 --> 00:12:29.260
It's very flat, using
the standard--

00:12:29.260 --> 00:12:33.190
I think it's the Holo Light
action bar style.

00:12:33.190 --> 00:12:36.100
And then for the Record, which
record is very often

00:12:36.100 --> 00:12:38.290
associated with the color red,
we decided to give it a

00:12:38.290 --> 00:12:40.010
slightly different treatment.

00:12:40.010 --> 00:12:42.470
The interesting thing about
the design aspects here is

00:12:42.470 --> 00:12:45.520
that, actually, for these icons,
we didn't have to go

00:12:45.520 --> 00:12:46.910
into Photoshop or anything.

00:12:46.910 --> 00:12:49.670
We just used the Android Asset
Studio, and we went into the

00:12:49.670 --> 00:12:51.580
generic icons generator.

00:12:51.580 --> 00:12:54.680
We plugged in which icons from
a set of clip art that we

00:12:54.680 --> 00:12:57.840
wanted, gave it the color that
we needed, and just exported

00:12:57.840 --> 00:12:59.650
them to all the different
densities.

00:12:59.650 --> 00:13:02.830
So a lot of this, we didn't
really need any sort of

00:13:02.830 --> 00:13:05.660
special Photoshop work for.

00:13:05.660 --> 00:13:08.810
We just kind of did the design
in the XML editor--

00:13:08.810 --> 00:13:10.900
in the Layout Editor
in Android Studio.

00:13:10.900 --> 00:13:12.770
Actually, it was in
Eclipse, right?

00:13:12.770 --> 00:13:14.020
IBRAHIM ULUKAYA: Yeah, it
was in Eclipse, yeah.

00:13:14.020 --> 00:13:14.350
ROMAN NURIK: Yeah.

00:13:14.350 --> 00:13:19.550
So we did the design in the
Eclipse ADT plug-in, and then

00:13:19.550 --> 00:13:22.580
all the icons are from the
Android Asset Studio.

00:13:22.580 --> 00:13:25.140
So overall, the design is
very straightforward.

00:13:25.140 --> 00:13:29.580
We use a lot of the solid
techniques that we have

00:13:29.580 --> 00:13:31.130
readily available.

00:13:31.130 --> 00:13:33.950
So overall, it's a solid design
for a sample app.

00:13:33.950 --> 00:13:35.950
It's really good.

00:13:35.950 --> 00:13:38.860
IBRAHIM ULUKAYA: And actually,
plus the design, you also use

00:13:38.860 --> 00:13:40.470
a few Android techniques.

00:13:40.470 --> 00:13:43.360
Like here, you're actually
able to use the

00:13:43.360 --> 00:13:44.960
NotificationCompat.

00:13:44.960 --> 00:13:47.420
And from that, you're able
to show our progress.

00:13:47.420 --> 00:13:50.010
As well as when the video is
ready, you are able to show

00:13:50.010 --> 00:13:52.280
them, it's ready to
watch your video.

00:13:52.280 --> 00:13:55.280
You click, and you will be
able to see your video.

00:13:55.280 --> 00:13:57.130
On top, we also--

00:13:57.130 --> 00:13:59.420
maybe we can talk
about compat.

00:13:59.420 --> 00:14:01.180
ROMAN NURIK: Actually, really
quickly, we wanted to talk

00:14:01.180 --> 00:14:02.380
about NotificationCompat.

00:14:02.380 --> 00:14:08.070
So I forgot which API levels the
YouTube player supports.

00:14:08.070 --> 00:14:11.830
But notifications, there's some
notification features

00:14:11.830 --> 00:14:14.360
that are only available in
Android 4.1 or later.

00:14:14.360 --> 00:14:18.280
So for example, if you wanted to
have additional actions or

00:14:18.280 --> 00:14:22.040
a big image in your
notification, you wouldn't be

00:14:22.040 --> 00:14:25.610
able to use some of
those new APIs.

00:14:25.610 --> 00:14:29.050
So we have this class called
NotificationCompat.

00:14:29.050 --> 00:14:30.220
It's in the support library.

00:14:30.220 --> 00:14:33.730
It basically lets you use some
of those newer APIs on any

00:14:33.730 --> 00:14:34.860
version of Android.

00:14:34.860 --> 00:14:37.300
So here, for the notifications,
I believe you

00:14:37.300 --> 00:14:40.610
used the NotificationCompat
class for that.

00:14:40.610 --> 00:14:43.280
IBRAHIM ULUKAYA: And by also
using NotificationCompat, a

00:14:43.280 --> 00:14:44.060
separate thing.

00:14:44.060 --> 00:14:47.370
When I want to actually start
the upload, I didn't want to

00:14:47.370 --> 00:14:49.260
upload to interfere
with the app.

00:14:49.260 --> 00:14:53.070
So if the user is anywhere,
using the app, and starts the

00:14:53.070 --> 00:14:56.045
upload, and if the user goes out
of the app or just closes

00:14:56.045 --> 00:14:59.710
the app, I really want the
upload to still continue.

00:14:59.710 --> 00:15:01.800
So I create as an
IntentService.

00:15:01.800 --> 00:15:04.580
So actually, the IntentService
are like the ones that are

00:15:04.580 --> 00:15:07.590
actually using the
Compat here.

00:15:07.590 --> 00:15:11.830
And by using that, it feels much
more lightweight than if

00:15:11.830 --> 00:15:13.760
it was a separate thread,
basically,

00:15:13.760 --> 00:15:14.690
going the whole process.

00:15:14.690 --> 00:15:16.330
ROMAN NURIK: Yeah,
IntentServices are great for

00:15:16.330 --> 00:15:17.140
something like this.

00:15:17.140 --> 00:15:19.810
IntentServices are basically--
so a service is just something

00:15:19.810 --> 00:15:21.690
that runs in the background.

00:15:21.690 --> 00:15:24.350
It doesn't have a
UI, obviously.

00:15:24.350 --> 00:15:27.190
But the service, it actually
runs on the same

00:15:27.190 --> 00:15:29.030
thread as your UI.

00:15:29.030 --> 00:15:32.080
So if you do nothing with
threading and just simply use

00:15:32.080 --> 00:15:34.530
a service, it will actually be
doing its work on the same

00:15:34.530 --> 00:15:36.690
thread as your UI, so
it can hang your UI.

00:15:36.690 --> 00:15:39.790
An IntentService is actually
a very, very nice thing.

00:15:39.790 --> 00:15:45.030
What it basically does is it
spawns a thread to do its job.

00:15:45.030 --> 00:15:47.710
And after its job is done,
basically after the

00:15:47.710 --> 00:15:51.500
onHandleIntent method is
completed, it stops the

00:15:51.500 --> 00:15:54.650
service, it stops itself,
and it kills the thread.

00:15:54.650 --> 00:15:55.830
So it's a very nice way.

00:15:55.830 --> 00:15:59.720
And actually, also, it does
queuing built in.

00:15:59.720 --> 00:16:03.220
So if you call an IntentService
three times, and

00:16:03.220 --> 00:16:06.950
it's in the middle of doing its
first task, it'll actually

00:16:06.950 --> 00:16:09.040
queue up the other two,
and it'll then

00:16:09.040 --> 00:16:10.510
finish the other two.

00:16:10.510 --> 00:16:12.850
After it's done with those,
it'll then kill itself.

00:16:12.850 --> 00:16:15.440
So it's a really, really great,
handy class for doing

00:16:15.440 --> 00:16:19.180
any sort of downloading or
uploading, things like that.

00:16:19.180 --> 00:16:21.430
Very, very good class to use.

00:16:21.430 --> 00:16:22.430
IBRAHIM ULUKAYA: OK.

00:16:22.430 --> 00:16:24.060
Thanks, Roman, for going
over the design.

00:16:24.060 --> 00:16:26.270
Now actually, I also want to
talk about a little of the

00:16:26.270 --> 00:16:29.880
YouTube APIs we used and
how we utilized them.

00:16:29.880 --> 00:16:31.960
So we basically started
with the

00:16:31.960 --> 00:16:33.430
authentication, as you guys saw.

00:16:33.430 --> 00:16:35.500
It was OAuth 2.0.

00:16:35.500 --> 00:16:38.170
For that, we used the Google
OAuth credential.

00:16:38.170 --> 00:16:41.460
It's really handy [INAUDIBLE] so
that you don't need to deal

00:16:41.460 --> 00:16:42.220
with tokens.

00:16:42.220 --> 00:16:43.790
You don't need to
refresh them.

00:16:43.790 --> 00:16:48.930
Or if there's an exception,
the exceptions are all

00:16:48.930 --> 00:16:53.360
covered, and you're able to
handle them much easier than

00:16:53.360 --> 00:16:55.730
if it was a [INAUDIBLE]
exception.

00:16:55.730 --> 00:17:00.080
So the OAuth 2.0 for the Google
OAuth credential was

00:17:00.080 --> 00:17:01.820
easy to go through,
the OAuth 2.0.

00:17:01.820 --> 00:17:04.420
As well as if there's an
exception, like Play service

00:17:04.420 --> 00:17:07.310
is not available, it'll be
able to understand that.

00:17:07.310 --> 00:17:11.310
Or if there's something, like
a recordable exception, like

00:17:11.310 --> 00:17:15.966
maybe you just lose your
authorization, it will

00:17:15.966 --> 00:17:18.200
actually pop up an [INAUDIBLE],
if it will be

00:17:18.200 --> 00:17:22.005
under its own authorization
screen that will show up, and

00:17:22.005 --> 00:17:25.630
you will be just able to go
through it without any error.

00:17:25.630 --> 00:17:27.010
It's way cleaner.

00:17:27.010 --> 00:17:30.430
It actually helped clean half
of my code, basically.

00:17:30.430 --> 00:17:33.910
It was just authentication, but
it was a really big deal.

00:17:33.910 --> 00:17:37.310
And I definitely suggest to
use Google OAuth account

00:17:37.310 --> 00:17:39.480
credential for that.

00:17:39.480 --> 00:17:43.030
And on top of that, we used
resumable uploads.

00:17:43.030 --> 00:17:46.010
Resumable uploads are actually
in the Data API, which lets

00:17:46.010 --> 00:17:48.210
you do the uploads
piece by piece.

00:17:48.210 --> 00:17:51.090
If the upload fails, [INAUDIBLE]
try, so that your

00:17:51.090 --> 00:17:54.440
upload can start where it was
left off, in the closest place

00:17:54.440 --> 00:17:57.880
where it was left off, rather
than going all the way back

00:17:57.880 --> 00:18:01.450
and starting from scratch.

00:18:01.450 --> 00:18:03.900
If you are uploading a
big file, it's super.

00:18:03.900 --> 00:18:07.450
And even if you upload a smaller
file, it's actually a

00:18:07.450 --> 00:18:09.920
really good approach
to do the uploads.

00:18:09.920 --> 00:18:12.960
And I actually used the normal
Java resumable uploads with

00:18:12.960 --> 00:18:16.020
the Java library for it, and
just plugged it into Android,

00:18:16.020 --> 00:18:18.630
and everything worked perfect.

00:18:18.630 --> 00:18:21.830
In the uploads, we actually
use a pull processing.

00:18:21.830 --> 00:18:25.310
What we do is actually using
Data API, once we've started

00:18:25.310 --> 00:18:29.400
uploading, with an exponential
backoff we've introduced, we

00:18:29.400 --> 00:18:31.420
just keep--

00:18:31.420 --> 00:18:33.290
pull the processing status.

00:18:33.290 --> 00:18:37.830
And once the video is ready,
then we just show that you can

00:18:37.830 --> 00:18:39.080
now watch our video.

00:18:39.080 --> 00:18:42.610
We just throw another progress
notification using

00:18:42.610 --> 00:18:43.860
NotificationCompat.

00:18:45.680 --> 00:18:49.560
We definitely use a lot of the
Data API here, just to

00:18:49.560 --> 00:18:52.820
actually grab your own videos
from your uploads playlist.

00:18:52.820 --> 00:18:56.660
And then your actual uploading
is the Data API as well.

00:18:56.660 --> 00:19:00.440
And the actual YouTube Direct
Lite submission is basically

00:19:00.440 --> 00:19:03.930
just adding a [INAUDIBLE] tag,
adding the playlist YouTube

00:19:03.930 --> 00:19:07.530
Direct Lite dash playlist
ID, kind of tag.

00:19:07.530 --> 00:19:09.670
So once we upload, [INAUDIBLE]
will understand which playlist

00:19:09.670 --> 00:19:12.620
you want to submit
those videos.

00:19:12.620 --> 00:19:15.090
And it was like a Data API.

00:19:15.090 --> 00:19:19.800
We use a little bit on the
Google+ API so that, from the

00:19:19.800 --> 00:19:22.940
Google+, we really want
to see who you are.

00:19:22.940 --> 00:19:27.170
And we really want to show
actually who you are, and we

00:19:27.170 --> 00:19:29.240
really want to show that we
understand you, actually.

00:19:29.240 --> 00:19:32.520
We know who you are, and we
want to make sure that,

00:19:32.520 --> 00:19:34.350
actually, you are the right
user to send that.

00:19:34.350 --> 00:19:37.340
You're not using someone's
account.

00:19:37.340 --> 00:19:41.530
In that, we actually grab your
profile picture from Google+

00:19:41.530 --> 00:19:43.350
as your identity.

00:19:43.350 --> 00:19:46.300
And if you just go back to
the demo a little bit.

00:19:46.300 --> 00:19:49.890
And on the demo, which you can
see, actually, there, like

00:19:49.890 --> 00:19:52.500
Google+ share buttons, the
Google +1 buttons.

00:19:52.500 --> 00:19:53.970
And so [INAUDIBLE]

00:19:53.970 --> 00:19:56.890
I actually went here.

00:19:56.890 --> 00:19:58.780
And in the meantime, I actually
am reminded of one

00:19:58.780 --> 00:20:01.190
thing that I should have
just said before.

00:20:01.190 --> 00:20:03.760
So when you actually click the
Google+, you can actually

00:20:03.760 --> 00:20:05.405
publicly share the button.

00:20:05.405 --> 00:20:09.190
Or you can just undo it.

00:20:09.190 --> 00:20:10.480
And an Android [INAUDIBLE]

00:20:10.480 --> 00:20:14.980
I just forgot to tell before, we
also use the Up navigation.

00:20:14.980 --> 00:20:17.610
So if you're on any of the
pages, and you are like

00:20:17.610 --> 00:20:19.800
reviewing, you want
to go back.

00:20:19.800 --> 00:20:23.310
Rather than always using the
normal Back button, you

00:20:23.310 --> 00:20:27.650
actually have a really
nice Up navigation.

00:20:27.650 --> 00:20:29.480
So it will take you to
the home screen.

00:20:29.480 --> 00:20:33.050
You create like a navigation
tree for that, and so your

00:20:33.050 --> 00:20:36.200
actual activity knows
which app to back

00:20:36.200 --> 00:20:37.870
over once your activity--

00:20:37.870 --> 00:20:38.270
ROMAN NURIK: Yeah.

00:20:38.270 --> 00:20:40.100
And actually, it used
to be very difficult

00:20:40.100 --> 00:20:40.890
to implement Up.

00:20:40.890 --> 00:20:42.930
Well, not really difficult, but
it used to require a lot

00:20:42.930 --> 00:20:45.120
of effort to implement
Up correctly.

00:20:45.120 --> 00:20:48.410
But now literally with just a
couple of additional things in

00:20:48.410 --> 00:20:50.920
your manifest, you can basically
say that this

00:20:50.920 --> 00:20:52.310
preview activity--

00:20:52.310 --> 00:20:54.060
kind of the staging area,
as I call it--

00:20:54.060 --> 00:20:55.740
this preview activity,
its parent

00:20:55.740 --> 00:20:57.980
activity is the home activity.

00:20:57.980 --> 00:21:00.860
So then Android knows that when
the user presses the Up

00:21:00.860 --> 00:21:03.920
button, it basically reads that
manifest and says, hey, I

00:21:03.920 --> 00:21:05.250
want to be taken to
the home activity.

00:21:05.250 --> 00:21:07.070
And it will just do
all that for you.

00:21:07.070 --> 00:21:10.180
In the past, you'd have to
actually implement the

00:21:10.180 --> 00:21:11.870
onOptionsItemSelected call.

00:21:11.870 --> 00:21:13.640
And that was just
too much work.

00:21:13.640 --> 00:21:16.130
So we very much simplified
that.

00:21:16.130 --> 00:21:17.560
And this uses it quite a lot.

00:21:17.560 --> 00:21:18.630
IBRAHIM ULUKAYA: Glad
that's so simple.

00:21:18.630 --> 00:21:22.540
Took me like five minutes,
and I really enjoyed it.

00:21:22.540 --> 00:21:25.420
And also, we used the Android
Player API to play those

00:21:25.420 --> 00:21:29.300
videos on the Play SDK, so that
we don't need to create a

00:21:29.300 --> 00:21:32.450
whole new UI view for that.

00:21:32.450 --> 00:21:35.770
Just using the player, we just
customized it a little bit.

00:21:35.770 --> 00:21:37.710
And the player's [INAUDIBLE]

00:21:37.710 --> 00:21:41.200
how to handle all the
actions on it.

00:21:41.200 --> 00:21:44.180
Like we can go all the
way to full screen.

00:21:44.180 --> 00:21:47.570
And we're able to watch the
video from the [INAUDIBLE]

00:21:47.570 --> 00:21:50.230
where it was left off.

00:21:50.230 --> 00:21:52.950
And going back, and it
[INAUDIBLE] taken just like

00:21:52.950 --> 00:21:54.170
something from that.

00:21:54.170 --> 00:21:59.130
ROMAN NURIK: And this preview
or staging area, it supports

00:21:59.130 --> 00:22:03.310
both the video view for things
like stuff that was taken from

00:22:03.310 --> 00:22:07.610
your camera or the gallery, or
the YouTube Player API, which

00:22:07.610 --> 00:22:08.950
is for something that
you chose from

00:22:08.950 --> 00:22:10.740
that grid in the beginning.

00:22:10.740 --> 00:22:12.780
IBRAHIM ULUKAYA: Yeah, so we
really wanted to make a

00:22:12.780 --> 00:22:16.070
complete similar interface
for both of them.

00:22:16.070 --> 00:22:19.000
So you actually understand that
this is a second step.

00:22:19.000 --> 00:22:23.370
You are not lost in which
step you are.

00:22:23.370 --> 00:22:25.840
You really known there is a main
step that you can use,

00:22:25.840 --> 00:22:28.720
choose either record,
pick any of your

00:22:28.720 --> 00:22:31.190
existing videos, or play.

00:22:31.190 --> 00:22:33.830
And then second step,
you just approve it.

00:22:33.830 --> 00:22:37.120
And it comes to the main stage,
and it will just tell

00:22:37.120 --> 00:22:39.420
you that you're either
uploading, or

00:22:39.420 --> 00:22:41.760
it's already submitted.

00:22:41.760 --> 00:22:48.700
And I guess that was all about
the YouTube Direct Lite for

00:22:48.700 --> 00:22:50.100
Android app.

00:22:50.100 --> 00:22:51.960
And thanks a lot for joining
me today, Roman.

00:22:51.960 --> 00:22:53.370
ROMAN NURIK: Yeah,
glad to help.

00:22:53.370 --> 00:22:55.190
IBRAHIM ULUKAYA: And I think we
always want to plug that as

00:22:55.190 --> 00:22:58.710
a developer relations team, both
YouTube and Android, we

00:22:58.710 --> 00:23:01.040
are hiring almost everywhere
in the world.

00:23:01.040 --> 00:23:01.880
ROMAN NURIK: Always hiring.

00:23:01.880 --> 00:23:03.080
IBRAHIM ULUKAYA: We're
always hiring.

00:23:03.080 --> 00:23:04.630
I hope you join us.

00:23:04.630 --> 00:23:07.110
And to remind again, you
can always apply from

00:23:07.110 --> 00:23:12.960
developer.google.com/jobs, as
well as I just want to mind

00:23:12.960 --> 00:23:18.630
the open source project is
github.com/youtube is the

00:23:18.630 --> 00:23:23.070
YouTube repository, slash
ytd dash android.

00:23:23.070 --> 00:23:25.120
And thanks for joining
[INAUDIBLE].

00:23:25.120 --> 00:23:26.990
Ibrahim Ulukaya and Roman
Nurik from New York.

00:23:26.990 --> 00:23:28.240
ROMAN NURIK: See you guys.

