WEBVTT
Kind: captions
Language: en

00:00:00.450 --> 00:00:02.890
What I want to do in this video
-- and it'll probably

00:00:02.890 --> 00:00:05.980
occur over several videos -- is
really integrate everything

00:00:05.980 --> 00:00:08.990
we know about matrices, and
null spaces, and column

00:00:08.990 --> 00:00:11.960
spaces, and linear
independence.

00:00:11.960 --> 00:00:15.100
So I have this matrix
here, this matrix A.

00:00:15.100 --> 00:00:17.510
And I guess a good place to
start is, let's figure out its

00:00:17.510 --> 00:00:19.380
column space and
its null space.

00:00:19.380 --> 00:00:22.510
The column space is actually
super easy to figure out.

00:00:22.510 --> 00:00:25.070
It's just the span of the
column vectors of A.

00:00:25.070 --> 00:00:27.940
So we can right from the get-go
write that the column

00:00:27.940 --> 00:00:34.240
space of our matrix A-- Let
me do it over here.

00:00:34.240 --> 00:00:38.700
I can write the column space of
my matrix A is equal to the

00:00:38.700 --> 00:00:46.050
span of the vectors 1, 2, 3.

00:00:46.050 --> 00:00:48.490
1, 1, 4.

00:00:52.550 --> 00:00:54.410
1, 4, 1.

00:00:54.410 --> 00:00:56.130
And 1, 3, 2.

00:00:56.130 --> 00:00:56.730
I'm done.

00:00:56.730 --> 00:00:58.410
That was pretty straightforward,
a lot easier

00:00:58.410 --> 00:01:00.290
than finding null spaces.

00:01:00.290 --> 00:01:03.220
Now this may or may not
be satisfying to you.

00:01:03.220 --> 00:01:04.660
And there's a lot of
open questions.

00:01:04.660 --> 00:01:07.940
Is this a basis for the
space, for example?

00:01:07.940 --> 00:01:10.640
Is this a linear independent
set of vectors?

00:01:10.640 --> 00:01:12.580
How can we visualize
this space?

00:01:12.580 --> 00:01:14.260
And I haven't answered
any of those yet.

00:01:14.260 --> 00:01:16.750
But if someone just says, hey
what's the column space of A?

00:01:16.750 --> 00:01:18.460
This is the column space of A.

00:01:18.460 --> 00:01:20.090
And then we can answer some
of those other questions.

00:01:23.390 --> 00:01:27.330
If this is a linearly
independent set of vectors,

00:01:27.330 --> 00:01:31.340
then these vectors would
be a basis for the

00:01:31.340 --> 00:01:32.170
column space of A.

00:01:32.170 --> 00:01:33.040
We don't know that yet.

00:01:33.040 --> 00:01:35.220
We don't know whether these
are linearly independent.

00:01:35.220 --> 00:01:37.700
But we can figure out if they're
linearly independent

00:01:37.700 --> 00:01:40.070
by looking at the
null space of A.

00:01:40.070 --> 00:01:42.530
Remember these are linearly
independent if the null space

00:01:42.530 --> 00:01:44.780
of A only contains
the 0 vector.

00:01:44.780 --> 00:01:47.110
So let's figure out what
the null space of A is.

00:01:47.110 --> 00:01:49.190
And remember, we can do a
little shortcut here.

00:01:49.190 --> 00:01:54.580
The null space of A is equal to
the null space of the row,

00:01:54.580 --> 00:01:58.140
the reduced row echelon
form of A.

00:01:58.140 --> 00:02:01.050
And I showed you that when we
first calculated the null

00:02:01.050 --> 00:02:04.200
space of a vector, because when
you performed these --

00:02:04.200 --> 00:02:06.580
essentially if you want to solve
for the null space of A,

00:02:06.580 --> 00:02:07.980
you create an augmented
matrix.

00:02:07.980 --> 00:02:11.490
And you put the augmented matrix
in reduced row echelon

00:02:11.490 --> 00:02:13.520
form, but the 0's
never change.

00:02:13.520 --> 00:02:15.300
So essentially you're just
taking A and putting it in

00:02:15.300 --> 00:02:16.630
reduced row echelon form.

00:02:16.630 --> 00:02:18.340
Let's do that.

00:02:18.340 --> 00:02:25.250
So I'll keep row one the
same, 1, 1, 1, 1.

00:02:25.250 --> 00:02:28.570
And then let me replace
row two with, row

00:02:28.570 --> 00:02:31.580
two minus row one.

00:02:34.390 --> 00:02:36.510
So what do I get?

00:02:36.510 --> 00:02:39.120
No, actually I want to
zero this out here.

00:02:39.120 --> 00:02:42.720
So row two minus,
2 times row one.

00:02:42.720 --> 00:02:44.130
Actually even better because
I eventually

00:02:44.130 --> 00:02:44.950
want to get a 1 here.

00:02:44.950 --> 00:02:48.700
So let me do 2 times row
one, minus row two.

00:02:48.700 --> 00:02:52.150
So let me say 2 times row
one, and I'm going

00:02:52.150 --> 00:02:53.170
to minus row two.

00:02:53.170 --> 00:02:57.670
So 2 times 1 minus 2 is
0, which is exactly

00:02:57.670 --> 00:02:58.800
what I wanted there.

00:02:58.800 --> 00:03:02.950
2 times 1 minus 1 is 1.

00:03:02.950 --> 00:03:04.680
That's nice to have
right there.

00:03:04.680 --> 00:03:10.300
2 times 1 minus 4 is minus 2.

00:03:10.300 --> 00:03:15.530
2 times 1 minus 3 is minus 1.

00:03:15.530 --> 00:03:20.240
All right, now let me see if I
can zero out this guy here.

00:03:20.240 --> 00:03:21.490
So what can I do?

00:03:26.960 --> 00:03:29.510
I could do any combination,
anything that essentially

00:03:29.510 --> 00:03:30.710
zeroes this guy out.

00:03:30.710 --> 00:03:33.640
But I want to minimize my number
of negative numbers.

00:03:33.640 --> 00:03:38.590
So let me take this third row,
minus 3 times this first row.

00:03:38.590 --> 00:03:43.060
So I'm going take minus 3 times
that first row and add

00:03:43.060 --> 00:03:45.250
it to this third row.

00:03:45.250 --> 00:03:49.336
So 3 minus 3 times 1 is 0.

00:03:52.250 --> 00:03:53.370
These are just going to
be a bunch of 3's.

00:03:53.370 --> 00:03:55.920
4 minus 3 times 1 is 1.

00:03:55.920 --> 00:03:58.990
1 minus 3 times 1 is minus 2.

00:03:58.990 --> 00:04:02.510
And 2 minus 3 times
1 is minus 1.

00:04:02.510 --> 00:04:05.290
Now if we want to get this into
reduced row echelon form

00:04:05.290 --> 00:04:08.970
we need to target that one
there and that one there.

00:04:08.970 --> 00:04:09.870
And what can we do?

00:04:09.870 --> 00:04:13.270
So let's keep my middle
row the same.

00:04:13.270 --> 00:04:16.000
My middle row is not
going to change.

00:04:16.000 --> 00:04:21.610
1, 1, minus 2, minus 1.

00:04:21.610 --> 00:04:24.550
And to get rid of this one up
here I can just replace my

00:04:24.550 --> 00:04:27.950
first row with my first row
minus my second row.

00:04:27.950 --> 00:04:29.460
Because then this
won't change.

00:04:29.460 --> 00:04:31.370
I'll have 1 minus 0 is 1.

00:04:31.370 --> 00:04:33.280
1 minus 1 is 0.

00:04:33.280 --> 00:04:34.140
That's what we wanted.

00:04:34.140 --> 00:04:39.210
1 minus minus 2 is 3.

00:04:39.210 --> 00:04:40.120
That's 1 plus 2.

00:04:40.120 --> 00:04:42.060
1 minus minus 1.

00:04:42.060 --> 00:04:43.000
That's 1 plus 1.

00:04:43.000 --> 00:04:44.700
That is 2.

00:04:44.700 --> 00:04:45.690
Fair enough?

00:04:45.690 --> 00:04:47.805
Now let me do my third row.

00:04:51.950 --> 00:04:55.000
Let me replace my third row with
my third row subtracted

00:04:55.000 --> 00:04:56.190
from my first row.

00:04:56.190 --> 00:04:57.240
They are obviously
the same thing.

00:04:57.240 --> 00:05:01.220
So if I subtract the third row
from the second row I'm just

00:05:01.220 --> 00:05:02.260
going to get a bunch of 0's.

00:05:02.260 --> 00:05:04.610
0 minus 0 is 0.

00:05:04.610 --> 00:05:07.060
1 minus 1 is 0.

00:05:07.060 --> 00:05:11.500
Minus 2 minus minus 2 is 0.

00:05:11.500 --> 00:05:13.070
And minus 1 minus minus 1.

00:05:13.070 --> 00:05:14.430
That's minus 1 plus 1.

00:05:14.430 --> 00:05:16.020
That's equal to 0.

00:05:16.020 --> 00:05:17.900
And just like that
we have it now in

00:05:17.900 --> 00:05:19.480
reduced row echelon form.

00:05:19.480 --> 00:05:24.690
So this right here is the
reduced row echelon form of A.

00:05:24.690 --> 00:05:26.030
That straightforward.

00:05:26.030 --> 00:05:29.450
Now the whole the reason why
we even went through this

00:05:29.450 --> 00:05:31.460
exercise is we wanted
to figure out the

00:05:31.460 --> 00:05:32.460
null space of A.

00:05:32.460 --> 00:05:34.740
And we already know that the
null space of A is equal to

00:05:34.740 --> 00:05:38.400
the null space of the reduced
row echelon form of A.

00:05:38.400 --> 00:05:41.360
So if this is the reduce row
echelon form of A, let's

00:05:41.360 --> 00:05:42.930
figure out its null space.

00:05:42.930 --> 00:05:48.030
So the null space is the set
of all of vectors in R4,

00:05:48.030 --> 00:05:50.170
because we have 4
columns here.

00:05:50.170 --> 00:05:54.170
1, 2, 3, 4.

00:05:54.170 --> 00:05:57.380
The null space is the set of
all of vectors that satisfy

00:05:57.380 --> 00:05:59.780
this equation, where
we're going to have

00:05:59.780 --> 00:06:01.770
three 0's right here.

00:06:01.770 --> 00:06:04.570
That's the 0 vector in R3,
because we have three rows

00:06:04.570 --> 00:06:06.250
right there, and you
can figure it out.

00:06:06.250 --> 00:06:08.760
This times this has
to equal that 0.

00:06:08.760 --> 00:06:10.745
That dotted with that
essentially is going

00:06:10.745 --> 00:06:11.780
to equal that 0.

00:06:11.780 --> 00:06:13.600
That dotted with that
is equal to that 0.

00:06:13.600 --> 00:06:17.970
I say essentially because I
didn't define a row vector dot

00:06:17.970 --> 00:06:19.340
a column vector.

00:06:19.340 --> 00:06:21.410
I've only defined column vectors
dotted with other

00:06:21.410 --> 00:06:21.850
column vectors.

00:06:21.850 --> 00:06:24.320
But we've been over that in a
previous video, where you can

00:06:24.320 --> 00:06:27.720
say this is a transpose
of a column vector.

00:06:27.720 --> 00:06:29.800
So let's just take this,
and write a system of

00:06:29.800 --> 00:06:31.290
equations with this.

00:06:31.290 --> 00:06:34.480
So we get 1 times x1.

00:06:34.480 --> 00:06:37.840
So this times this is going
to be equal to that 0.

00:06:37.840 --> 00:06:41.740
So one times x1, that is x1.

00:06:41.740 --> 00:06:44.330
Plus 0 times x2.

00:06:44.330 --> 00:06:46.500
Let me just write that out.

00:06:46.500 --> 00:06:49.740
Plus 3 times x3.

00:06:49.740 --> 00:06:55.870
Plus 2 times x4 is
equal to that 0.

00:06:55.870 --> 00:06:59.730
And then -- I'll do it in
yellow right here -- I

00:06:59.730 --> 00:07:03.200
have 0 times x1.

00:07:03.200 --> 00:07:07.410
Plus 1 times x2.

00:07:07.410 --> 00:07:10.450
Minus 2 times x3.

00:07:10.450 --> 00:07:14.040
Minus x4 is equal to 0.

00:07:14.040 --> 00:07:15.440
And then this gives
me no information.

00:07:15.440 --> 00:07:17.400
0 times all this
is equal to 0.

00:07:17.400 --> 00:07:19.540
So it just turns into
0 equals 0.

00:07:19.540 --> 00:07:22.640
So let's see if we can solve for
our pivot entries, or our

00:07:22.640 --> 00:07:23.570
pivot variables.

00:07:23.570 --> 00:07:24.930
What are our pivot entries?

00:07:24.930 --> 00:07:26.160
This is a pivot entry.

00:07:26.160 --> 00:07:27.470
That's a pivot entry.

00:07:27.470 --> 00:07:29.730
That's what reduced row echelon
form is all about,

00:07:29.730 --> 00:07:31.740
getting these entries that are
1 and they're the only

00:07:31.740 --> 00:07:34.860
non-zero term in their
respective columns.

00:07:34.860 --> 00:07:37.060
And that every pivot entry
is to the right of a

00:07:37.060 --> 00:07:38.370
pivot entry above it.

00:07:38.370 --> 00:07:42.140
And then the columns that don't
have pivot entries?

00:07:42.140 --> 00:07:45.210
These columns represent
the free variables.

00:07:45.210 --> 00:07:48.260
So this column has
no pivot entry.

00:07:48.260 --> 00:07:51.610
And so when you take the dot
product, this column turned

00:07:51.610 --> 00:07:54.290
into this column in our
system of equations.

00:07:54.290 --> 00:07:57.190
So we know that x3 is
a free variable.

00:07:57.190 --> 00:07:58.890
x3 is free.

00:07:58.890 --> 00:08:00.730
We can set it equal
to anything.

00:08:00.730 --> 00:08:07.690
Likewise x4 is a
free variable.

00:08:07.690 --> 00:08:11.140
X1 and x2 are pivot variables,
because their corresponding

00:08:11.140 --> 00:08:14.360
columns in our reduced row
echelon form have pivot

00:08:14.360 --> 00:08:15.500
entries in them.

00:08:15.500 --> 00:08:16.140
Fair enough.

00:08:16.140 --> 00:08:17.580
So let's see if we
can simplify this

00:08:17.580 --> 00:08:18.920
into a form we know.

00:08:18.920 --> 00:08:21.440
And we've seen this before.

00:08:21.440 --> 00:08:25.080
So if I solve for x1 --
this 0 I can ignore.

00:08:25.080 --> 00:08:32.000
That 0 I can ignore -- I could
say that x1 is equal to minus

00:08:32.000 --> 00:08:36.650
3x3 minus 2x4.

00:08:36.650 --> 00:08:38.856
I just subtracted these two
from both sides of the

00:08:38.856 --> 00:08:49.720
equation and I can say that x2
is equal to 2x3 plus x4.

00:08:49.720 --> 00:08:52.750
And if we want to write our
solution set now, so if I

00:08:52.750 --> 00:09:00.540
wanted to find the null space of
A, which is the same thing

00:09:00.540 --> 00:09:05.400
as the null space of the reduced
row echelon form of A,

00:09:05.400 --> 00:09:09.730
is equal to all of the vectors
-- let me do a new color.

00:09:09.730 --> 00:09:15.050
Maybe I'll do blue -- is equal
to all of the vectors x1, x2,

00:09:15.050 --> 00:09:19.070
x3, x4 that are equal to --

00:09:19.070 --> 00:09:20.620
So what are they going
to be equal to?

00:09:20.620 --> 00:09:24.390
X1 has to be equal to
minus 3x3 minus 2x4.

00:09:24.390 --> 00:09:26.440
Just to be clear, these are free
variables because I can

00:09:26.440 --> 00:09:28.490
set these to be anything.

00:09:28.490 --> 00:09:30.560
And these are pivot variables
because I can't just set them

00:09:30.560 --> 00:09:31.450
to anything.

00:09:31.450 --> 00:09:34.390
When I determine what my x3's
and my x4's are, they

00:09:34.390 --> 00:09:37.060
determine what my x1's and
my x2's have to be.

00:09:37.060 --> 00:09:38.350
So these are pivoted
variables.

00:09:38.350 --> 00:09:39.470
These are free variables.

00:09:39.470 --> 00:09:40.750
I can make this guy pi.

00:09:40.750 --> 00:09:42.830
And I can make this
guy minus 2.

00:09:42.830 --> 00:09:44.680
We can set them to anything.

00:09:44.680 --> 00:09:47.805
So x1 is equal to -- let's see,
let me write it this way

00:09:47.805 --> 00:09:51.655
-- they're equal to x3 -- let me
do it in a different color

00:09:51.655 --> 00:09:53.850
-- do x3 like this.

00:09:53.850 --> 00:10:04.420
So it's equal to x3 times some
vector plus x4 times some

00:10:04.420 --> 00:10:06.080
other vector.

00:10:06.080 --> 00:10:08.910
So any solution set in my null
space is going to be a linear

00:10:08.910 --> 00:10:10.240
combination of these
two vectors.

00:10:10.240 --> 00:10:13.230
We can figure out what these
two vectors are just from

00:10:13.230 --> 00:10:16.830
these two constraints
right here.

00:10:16.830 --> 00:10:22.910
So -- let me do it in a neutral
color -- x1 is equal

00:10:22.910 --> 00:10:29.460
to minus 3 times x3
minus 2 times x4.

00:10:29.460 --> 00:10:30.980
Straightforward enough.

00:10:30.980 --> 00:10:37.500
x2 is equal to 2 times
x3 plus x4.

00:10:37.500 --> 00:10:39.410
What's x3 equal to?

00:10:39.410 --> 00:10:40.690
Well x3 is equal to itself.

00:10:40.690 --> 00:10:42.870
Whatever we set x3 equal to,
that's going to be x3.

00:10:42.870 --> 00:10:47.200
So x3 is going to be 1 times
x3 plus 0 times x4.

00:10:47.200 --> 00:10:48.580
It is not going to have
any x4 in it.

00:10:48.580 --> 00:10:51.460
X3 is going to be kind of
an independent variable.

00:10:51.460 --> 00:10:52.200
It's going to be free.

00:10:52.200 --> 00:10:53.390
We can set whatever it is.

00:10:53.390 --> 00:10:55.240
We set it and then that's
going to be x3 in

00:10:55.240 --> 00:10:56.900
our solution set.

00:10:56.900 --> 00:10:58.990
x4 is not going to have
any x3 in it.

00:10:58.990 --> 00:11:01.140
It's just going to
be 1 times x4.

00:11:01.140 --> 00:11:03.980
And so our null space is
essentially all of the linear

00:11:03.980 --> 00:11:06.410
combinations of these
two vectors.

00:11:06.410 --> 00:11:07.740
This can be any real number.

00:11:07.740 --> 00:11:12.420
This is just any real number and
x4 is just a member of the

00:11:12.420 --> 00:11:13.140
real space.

00:11:13.140 --> 00:11:18.700
So all of these, the set of all
of the valid solutions to

00:11:18.700 --> 00:11:21.220
Ax is equal to 0 -- where
did I write that.

00:11:21.220 --> 00:11:22.300
Did I even write that down?

00:11:22.300 --> 00:11:23.930
No I haven't even written
that anywhere.

00:11:23.930 --> 00:11:29.130
The set of all Ax is equal to
0, where this is my x, it

00:11:29.130 --> 00:11:33.250
equals all the linear
combinations of this vector

00:11:33.250 --> 00:11:34.590
and that vector right there.

00:11:34.590 --> 00:11:37.540
And we know what all of the
linear combinations mean.

00:11:37.540 --> 00:11:45.460
It means my null space is equal
to the span of these two

00:11:45.460 --> 00:11:51.230
guys, the span of minus
3, 2, 1, 0.

00:11:51.230 --> 00:12:00.500
And minus 2, 1, 0, 1.

00:12:00.500 --> 00:12:02.675
Now let me ask you a question.

00:12:08.030 --> 00:12:13.070
Are the columns in A, are they
a linearly independent set?

00:12:13.070 --> 00:12:16.980
Are they a linearly
independent set?

00:12:16.980 --> 00:12:22.100
So if we write these vectors
right there, these are the

00:12:22.100 --> 00:12:24.170
column vectors of A.

00:12:24.170 --> 00:12:25.220
So let me write that down.

00:12:25.220 --> 00:12:29.400
So are the column vectors of
A -- so what were they?

00:12:29.400 --> 00:12:29.790
Let's see.

00:12:29.790 --> 00:12:34.750
1, 3, 2.

00:12:34.750 --> 00:12:36.380
No it's 1, 2, 3.

00:12:40.480 --> 00:12:44.740
1, 1, 4.

00:12:44.740 --> 00:12:47.350
1, 4, 1.

00:12:47.350 --> 00:12:50.260
And 1, 3, 2.

00:12:50.260 --> 00:12:51.770
So this is just the column
vectors of A.

00:12:51.770 --> 00:12:54.600
I could just write A is just
this much of columns, but my

00:12:54.600 --> 00:12:57.940
question is, is this a linearly
independent set?

00:13:04.620 --> 00:13:08.690
And here you might immediately
start thinking, well when we

00:13:08.690 --> 00:13:11.010
said that something is linearly
independent -- so

00:13:11.010 --> 00:13:19.485
linearly independence implies
that there's only one solution

00:13:19.485 --> 00:13:22.010
-- we saw this I think two
videos ago, that there's only

00:13:22.010 --> 00:13:31.100
one solution -- one solution
to Ax is equal to 0.

00:13:31.100 --> 00:13:33.710
And that is the 0 solution,
that x is

00:13:33.710 --> 00:13:35.550
equal to the 0 vector.

00:13:35.550 --> 00:13:40.020
Or another way to say that is
that the null space of my

00:13:40.020 --> 00:13:44.840
matrix A is equal to
just the 0 vector.

00:13:44.840 --> 00:13:46.220
That's what linear independence
implies.

00:13:46.220 --> 00:13:47.430
And it goes both ways.

00:13:47.430 --> 00:13:50.160
If my null space is just a 0
vector, then I know it's

00:13:50.160 --> 00:13:51.430
linearly independent.

00:13:51.430 --> 00:13:54.800
If my null space includes other
vectors, then I am not

00:13:54.800 --> 00:13:56.180
linearly independent.

00:13:56.180 --> 00:13:58.400
Now my null space of A,
what does it include?

00:13:58.400 --> 00:14:00.080
Is it just the 0 vector?

00:14:00.080 --> 00:14:01.810
Well, no it includes
every linear

00:14:01.810 --> 00:14:03.200
combination of these guys.

00:14:03.200 --> 00:14:05.590
It includes actually an infinite
number of vectors,

00:14:05.590 --> 00:14:07.110
not just one solution.

00:14:07.110 --> 00:14:09.180
Obviously 0 vector is contained
here, if you just

00:14:09.180 --> 00:14:11.950
multiply both of these -- if you
pick 0 for that and that.

00:14:11.950 --> 00:14:14.820
It's contained, but you can get
a whole set of vectors.

00:14:14.820 --> 00:14:25.850
So because the null span of A,
the null space, sorry, the

00:14:25.850 --> 00:14:29.720
null space of A does not just
contain the 0 vector.

00:14:29.720 --> 00:14:33.730
So it has more than just 0.

00:14:37.510 --> 00:14:38.950
So what does that mean?

00:14:38.950 --> 00:14:40.170
Well that means that
there's more than

00:14:40.170 --> 00:14:41.300
one solution to this.

00:14:41.300 --> 00:14:44.220
And that means that this is
a linearly dependent set.

00:14:51.620 --> 00:14:52.950
And what does that mean?

00:14:52.950 --> 00:14:54.940
At the very beginning of the
video I said, what's the

00:14:54.940 --> 00:14:56.250
column space of A.

00:14:56.250 --> 00:14:59.400
And we said, the column space
of A is just the span of the

00:14:59.400 --> 00:15:00.490
column vectors.

00:15:00.490 --> 00:15:01.950
I just wrote it out like that.

00:15:01.950 --> 00:15:04.410
And I said, well it's not clear
whether this is a valid

00:15:04.410 --> 00:15:06.680
basis for the column
space of A.

00:15:06.680 --> 00:15:07.630
And what's a basis?

00:15:07.630 --> 00:15:13.590
A basis is a set of vectors that
span a subspace, and they

00:15:13.590 --> 00:15:14.970
are also linearly independent.

00:15:14.970 --> 00:15:19.230
And we just showed that these
guys are not linearly

00:15:19.230 --> 00:15:21.910
independent.

00:15:21.910 --> 00:15:28.070
So that means that they are
not a basis for the column

00:15:28.070 --> 00:15:30.360
space of A.

00:15:30.360 --> 00:15:33.720
They do span the column space
of A, by definition really.

00:15:33.720 --> 00:15:34.780
But they're not a basis.

00:15:34.780 --> 00:15:36.620
They need to be linearly
independent for

00:15:36.620 --> 00:15:38.020
them to be a basis.

00:15:38.020 --> 00:15:41.120
So let's see if we can figure
out what a basis for this

00:15:41.120 --> 00:15:42.040
column space would be.

00:15:42.040 --> 00:15:44.000
And to do that we just
have to get rid of

00:15:44.000 --> 00:15:45.380
some redundant vectors.

00:15:45.380 --> 00:15:49.340
If I can show you that this guy
can be represented by some

00:15:49.340 --> 00:15:50.810
combination of these two
guys, then I can

00:15:50.810 --> 00:15:51.650
get rid of that guy.

00:15:51.650 --> 00:15:53.480
He's not adding any
new information.

00:15:53.480 --> 00:15:54.370
Same with that guy.

00:15:54.370 --> 00:15:55.400
Who knows?

00:15:55.400 --> 00:15:59.890
So let's see if we can figure
this piece of the puzzle out.

00:15:59.890 --> 00:16:06.770
So we know already that x1, let
me write it this way, that

00:16:06.770 --> 00:16:11.010
x1 times -- Maybe I'll just kind
of leave you hanging and

00:16:11.010 --> 00:16:12.270
continue this in
the next video.

00:16:12.270 --> 00:16:18.780
But we know that x1
times 1, 2, 3.

00:16:18.780 --> 00:16:23.470
Plus x2 times 1, 1, 4.

00:16:23.470 --> 00:16:28.040
Plus x3 times 1, 4, 1.

00:16:28.040 --> 00:16:32.250
Plus x4 times 1, 3, 2.

00:16:32.250 --> 00:16:35.600
We know that this
is equal to 0.

00:16:35.600 --> 00:16:41.260
Now if we are able to solve for
x4 in terms of -- let me

00:16:41.260 --> 00:16:47.540
just think that I can solve
for the vectors that are

00:16:47.540 --> 00:16:49.300
associated with my
free variables

00:16:49.300 --> 00:16:50.600
using the other vectors.

00:16:50.600 --> 00:16:52.080
Let me see if I can do that.

00:16:52.080 --> 00:16:55.060
And you'll see it's actually
pretty straightforward.

00:16:55.060 --> 00:16:58.820
So let's say I want
to solve for x4.

00:16:58.820 --> 00:17:01.450
So if I subtract this from
both sides of this

00:17:01.450 --> 00:17:04.819
equation, I get what?

00:17:04.819 --> 00:17:07.690
Let me put it this way, let
me set x3 equal to 0.

00:17:07.690 --> 00:17:08.640
It was a free variable.

00:17:08.640 --> 00:17:09.290
I can do that.

00:17:09.290 --> 00:17:16.290
So if I set x3 is equal to 0,
then what do I get here?

00:17:16.290 --> 00:17:18.710
If I said x3 equals 0,
this guy disappears.

00:17:18.710 --> 00:17:21.780
And if I subtract this from both
sides of this equation, I

00:17:21.780 --> 00:17:27.230
get x1 times 1, 2, 3.

00:17:27.230 --> 00:17:31.940
Plus x2 times 1, 1, 4.

00:17:31.940 --> 00:17:34.430
Is equal to -- I'm just
setting x3 equal to 0.

00:17:34.430 --> 00:17:35.880
That was a free variable.

00:17:35.880 --> 00:17:36.930
So I'm setting x3 equal to 0.

00:17:36.930 --> 00:17:38.940
So this whole thing
disappears.

00:17:38.940 --> 00:17:47.490
So that is equal to minus
x4 times 1, 3, 2.

00:17:47.490 --> 00:17:48.900
Now I set x3 equal to 0.

00:17:48.900 --> 00:17:55.050
Let me set x4 to be
equal to minus 1.

00:17:55.050 --> 00:17:58.440
If x4 is equal to minus
1, what is minus x4?

00:17:58.440 --> 00:18:01.300
Well then this thing will
just be equal to 1.

00:18:01.300 --> 00:18:03.500
And I'll have x1
times 1, 2, 3.

00:18:03.500 --> 00:18:07.560
Plus x2 times 1, 1, 4 will
equal this fourth

00:18:07.560 --> 00:18:08.980
vector right here.

00:18:08.980 --> 00:18:11.350
And can I always find
things like this?

00:18:11.350 --> 00:18:13.250
Well sure I can actually find
the particular ones.

00:18:13.250 --> 00:18:17.340
If x3 is equal to 0, and x4 is
minus 1 -- Let me copy and

00:18:17.340 --> 00:18:35.790
paste this that I have up
here -- Let me scroll

00:18:35.790 --> 00:18:37.000
down a little bit.

00:18:37.000 --> 00:18:39.890
This is what we got when we
figured out our null space,

00:18:39.890 --> 00:18:41.440
right there.

00:18:41.440 --> 00:18:44.582
So if I'm setting -- remember
these are the free variables

00:18:44.582 --> 00:18:47.590
-- if I set x3 equal to
0 and x4 is equal to

00:18:47.590 --> 00:18:50.070
minus 1, what is x1?

00:18:50.070 --> 00:18:54.700
Then this will imply that x1 is
equal to minus 3 times x3,

00:18:54.700 --> 00:18:58.350
that's just 0, minus
2 times x4.

00:18:58.350 --> 00:19:01.450
If x4 is minus 1, minus
2 times minus 1,

00:19:01.450 --> 00:19:02.820
x1 will equal 2.

00:19:02.820 --> 00:19:05.350
And then what will
x2 be equal to?

00:19:05.350 --> 00:19:10.370
x2 is equal to 2 times x3,
which is 0, plus x4.

00:19:10.370 --> 00:19:12.010
So it's equal to minus 1.

00:19:12.010 --> 00:19:15.450
So I just showed you that if I
set this equal to 2 and this

00:19:15.450 --> 00:19:19.000
equal to minus 1, I have a
linear combination of this

00:19:19.000 --> 00:19:21.340
vector and this vector
that can add up

00:19:21.340 --> 00:19:22.190
to this fourth vector.

00:19:22.190 --> 00:19:23.140
And you can even verify it.

00:19:23.140 --> 00:19:25.430
2 times 1 minus 1
is equal to 1.

00:19:25.430 --> 00:19:29.290
2 times 2 minus 1
is equal to 3.

00:19:29.290 --> 00:19:32.340
2 times 3 is 6, minus
4 is equal to 2.

00:19:32.340 --> 00:19:33.520
So it checks out.

00:19:33.520 --> 00:19:37.820
So I just showed you using,
really, our definitions

00:19:37.820 --> 00:19:40.730
looking at what were
our free variables

00:19:40.730 --> 00:19:42.110
versus our pivot variables.

00:19:42.110 --> 00:19:46.210
We were able to show you, kind
of just very simply solve for

00:19:46.210 --> 00:19:48.310
this third, this fourth
vector, in terms

00:19:48.310 --> 00:19:49.540
of these first two.

00:19:49.540 --> 00:19:52.860
So we know, if we go back to
the set that this fourth

00:19:52.860 --> 00:19:58.430
vector is really unnecessary,
really not adding anything to

00:19:58.430 --> 00:20:00.330
the span of the set
of vectors.

00:20:00.330 --> 00:20:02.910
Because this guy can be written
as a combination of

00:20:02.910 --> 00:20:04.730
this guy and this guy.

00:20:04.730 --> 00:20:07.320
Now let's see if this guy, this
third guy, we can do the

00:20:07.320 --> 00:20:08.340
same exercise.

00:20:08.340 --> 00:20:10.350
This is also dictated
by a free variable.

00:20:10.350 --> 00:20:11.990
So let's see if I can write
him as a combination

00:20:11.990 --> 00:20:13.430
of these first two.

00:20:13.430 --> 00:20:15.450
Well we'll do the exact
same thing.

00:20:15.450 --> 00:20:22.030
Instead of setting x3 equal to 0
and x4 equal to minus 1, let

00:20:22.030 --> 00:20:27.445
us set x4 is equal to
0 because I want

00:20:27.445 --> 00:20:28.760
to cross that out.

00:20:28.760 --> 00:20:33.000
And let me set x3 is
equal to minus 1.

00:20:33.000 --> 00:20:38.360
If x3 is equal to minus
1, what does this

00:20:38.360 --> 00:20:39.900
equation reduce to?

00:20:39.900 --> 00:20:44.480
We get x1 times 1, 2, 3.

00:20:44.480 --> 00:20:48.760
Plus x2 times 1, 1, 4.

00:20:48.760 --> 00:20:51.640
Is equal to -- if this is
minus 1 times 1, 4, 1.

00:20:51.640 --> 00:20:54.620
And then we add it to both sides
of this equation, we get

00:20:54.620 --> 00:20:58.960
plus 1 times 1, 4, 1.

00:20:58.960 --> 00:21:01.710
And once again we can just
solve for our x1 and x2.

00:21:01.710 --> 00:21:06.940
If x4 is 0 and x3 is minus
1, then x1 x4 is 0.

00:21:06.940 --> 00:21:10.220
So x3 is just minus 3,
times x3, so x1 would

00:21:10.220 --> 00:21:11.430
be equal to 3, right?

00:21:11.430 --> 00:21:13.950
Minus 3 times minus 1.

00:21:13.950 --> 00:21:16.120
And what would x2 be equal to?

00:21:16.120 --> 00:21:17.730
x4 is 0, we can ignore that.

00:21:17.730 --> 00:21:19.700
x2 would be equal to minus 2.

00:21:19.700 --> 00:21:23.250
So this would be 3, and then
this would be minus 2.

00:21:23.250 --> 00:21:23.830
Let's see if it works out.

00:21:23.830 --> 00:21:26.500
3 times 1 minus 2 is 1.

00:21:26.500 --> 00:21:28.620
3 times 2 minus 2 is 4.

00:21:28.620 --> 00:21:30.620
3 times 3 minus 8 is 1.

00:21:30.620 --> 00:21:31.800
It checks out.

00:21:31.800 --> 00:21:35.120
So I'm able to write this
vector, that was associated

00:21:35.120 --> 00:21:36.980
with the free variable,
as a linear

00:21:36.980 --> 00:21:39.180
combination of these two.

00:21:39.180 --> 00:21:41.990
So we can get rid of
him from our set.

00:21:41.990 --> 00:21:44.290
So now I've shown that this guy
can be written as a linear

00:21:44.290 --> 00:21:45.240
combination of these two.

00:21:45.240 --> 00:21:46.880
This guy can be written
as a linear

00:21:46.880 --> 00:21:47.690
combination of these two.

00:21:47.690 --> 00:21:51.710
So the span of all of those guys
should be equal to the

00:21:51.710 --> 00:21:54.120
span -- So let me write
it this way.

00:21:56.690 --> 00:22:00.630
The column space of A,
I can now re-write.

00:22:00.630 --> 00:22:02.520
Before it was the span of
all of those vectors.

00:22:02.520 --> 00:22:05.150
It was the span of all of
the column vectors,

00:22:05.150 --> 00:22:10.850
v1, v2, v3, and v4.

00:22:10.850 --> 00:22:13.470
Now I just showed you that v3
and v4 can be rewritten in

00:22:13.470 --> 00:22:15.240
terms of v1 and v2.

00:22:15.240 --> 00:22:16.160
So they're redundant.

00:22:16.160 --> 00:22:20.270
So that is equal to the span
of v1 and v2 which are just

00:22:20.270 --> 00:22:23.140
those two vectors.

00:22:23.140 --> 00:22:29.450
Vector 1, 2, 3, and
vector 1, 1, 4.

00:22:29.450 --> 00:22:32.800
Now are any of these
guys redundant?

00:22:32.800 --> 00:22:35.150
Can I express one of
them as a linear

00:22:35.150 --> 00:22:36.690
combination of the other?

00:22:36.690 --> 00:22:38.250
Essentially when I'm talking
about the linear combination

00:22:38.250 --> 00:22:39.550
of only one other
vector it's just

00:22:39.550 --> 00:22:40.930
multiplying it by a scalar.

00:22:40.930 --> 00:22:43.330
Well let's think about that.

00:22:43.330 --> 00:22:45.510
There are multiple ways you can
show this, but the easiest

00:22:45.510 --> 00:22:48.730
way is well look, to go from
this entry to that entry I'm

00:22:48.730 --> 00:22:50.320
just multiplying by 1.

00:22:50.320 --> 00:22:53.525
But if I multiply this whole
vector times 1, then I'm going

00:22:53.525 --> 00:22:55.980
to get a 2 here and I'm
going to get a 3 here.

00:22:55.980 --> 00:22:57.230
So it won't work.

00:22:59.840 --> 00:23:01.940
If I want to represent this guy
as a scalar multiple of

00:23:01.940 --> 00:23:05.960
that guy, so any scalar multiple
of 1, 2, 3 is going

00:23:05.960 --> 00:23:14.810
to be equal to 1c, 2c, 3c.

00:23:14.810 --> 00:23:15.460
Right?

00:23:15.460 --> 00:23:18.030
And so we're saying this guy has
to be represented somehow

00:23:18.030 --> 00:23:21.110
like that, if we say that this
guy is somehow a scalar,

00:23:21.110 --> 00:23:22.580
somehow can be represented
by that guy.

00:23:22.580 --> 00:23:26.600
So that would have to
be equal to 1, 1, 4.

00:23:26.600 --> 00:23:29.250
When you look at this top entry
it implies that c would

00:23:29.250 --> 00:23:31.940
have to be equal to 1.

00:23:31.940 --> 00:23:34.150
But when you look at this second
entry you think that c

00:23:34.150 --> 00:23:37.020
would have to be equal to 1/2.

00:23:37.020 --> 00:23:38.030
So you get a contradiction.

00:23:38.030 --> 00:23:40.390
Over here c would have
to be equal to 4/3.

00:23:40.390 --> 00:23:42.530
So there's no c where
this will work.

00:23:42.530 --> 00:23:43.740
There's no multiple of c.

00:23:43.740 --> 00:23:45.650
And you can work
that both ways.

00:23:45.650 --> 00:23:48.240
So there's no way that you can
represent one of these guys as

00:23:48.240 --> 00:23:49.560
a linear combination
of the other.

00:23:49.560 --> 00:23:52.040
And you can actually prove
other ways, maybe more

00:23:52.040 --> 00:23:54.120
formally, that this is
linearly independent.

00:23:54.120 --> 00:23:55.810
But given that this is linearly
independent -- I

00:23:55.810 --> 00:24:01.710
think you're satisfied with that
-- we can then say that

00:24:01.710 --> 00:24:19.820
the set of vectors 1, 2, 3, and
1, 1, 4, this is a basis

00:24:19.820 --> 00:24:23.720
for the column span of A.

00:24:23.720 --> 00:24:26.000
Now I'm going to let you go in
this video because I think

00:24:26.000 --> 00:24:27.200
I've gone well over time.

00:24:27.200 --> 00:24:28.870
But what I'm going to do in
the next few videos is now

00:24:28.870 --> 00:24:32.180
that I've established that this
is a basis for the column

00:24:32.180 --> 00:24:34.780
span of A, we can attempt
to visualize it.

00:24:34.780 --> 00:24:39.140
Because we can say that the
column span of A is equal to

00:24:39.140 --> 00:24:42.100
the span of these two vectors.

00:24:42.100 --> 00:24:43.840
And we can think about
what the span of

00:24:43.840 --> 00:24:44.850
those two vectors are.

00:24:44.850 --> 00:24:47.280
We're going to see that
it's a plane in R3.

00:24:47.280 --> 00:24:49.180
Span of 1, 1, 4.

00:24:49.180 --> 00:24:50.910
And this is a quick reminder,
I've said a couple times.

00:24:50.910 --> 00:24:53.760
When I say it's a basis all I'm
saying is that these guys,

00:24:53.760 --> 00:24:56.510
they both span the column
space of A.

00:24:56.510 --> 00:24:58.275
When I had four vectors,
they also spanned the

00:24:58.275 --> 00:24:59.190
column space of A.

00:24:59.190 --> 00:25:02.460
But what makes them a basis is
that these guys are linearly

00:25:02.460 --> 00:25:02.980
independent.

00:25:02.980 --> 00:25:05.910
There's no extra information, or
redundant vectors that can

00:25:05.910 --> 00:25:09.260
be represented by other vectors
within the basis.

00:25:09.260 --> 00:25:10.360
They are linearly independent.

00:25:10.360 --> 00:25:12.510
Anyway, I'll let
you go for now.

