WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.000
Welcome to homework assignment #5.

00:00:04.000 --> 00:00:11.000
Today I only have programming assignments. One on smoothing and one on control.

00:00:11.000 --> 00:00:21.000
In both cases, we are trying to drive a car on a racetrack as fast as we can.

00:00:21.000 --> 00:00:24.000
Okay? You'll see in a minute what I mean by this.

00:00:24.000 --> 00:00:28.000
But think of the car going on an oval just like that.

00:00:28.000 --> 00:00:32.000
So in this first exercise, you're going to go through a sequence of improvements

00:00:32.000 --> 00:00:34.000
of the code smooth.PI.

00:00:34.000 --> 00:00:36.000
I'm giving you a path that is very much a box path.

00:00:36.000 --> 00:00:41.000
It starts at 0,0, cranks up the estimation all the way to 6,

00:00:41.000 --> 00:00:44.000
then increases the y all the way to 3.

00:00:44.000 --> 00:00:51.000
It goes down on x all the way down to 0, and then uses the y all the way down to almost 0.

00:00:51.000 --> 00:00:55.000
If I draw this, the way this looks like--

00:00:55.000 --> 00:01:05.000
we start at 0,0, all the way to 6,0, then we go up here to 6,3, and you go left to 0,3,

00:01:05.000 --> 00:01:07.000
and down to 0,1.

00:01:07.000 --> 00:01:14.000
This is a cyclic course so we're smoothing before what's for an open path.

00:01:14.000 --> 00:01:19.000
I'd now like you to modify smoothing, so it can smooth this path over here.

00:01:19.000 --> 00:01:25.000
So I want you to run the function smooth with path as an input--

00:01:25.000 --> 00:01:33.000
the weight_data of 0.1 and the smoothing parameter of 0.1 and tolerance of 0.000001.

00:01:33.000 --> 00:01:38.000
When you run it, what it should produce is a path like this, that when you plot it,

00:01:38.000 --> 00:01:40.000
it looks a little bit like an oval.

00:01:40.000 --> 00:01:42.000
You can look at these numbers carefully.

00:01:42.000 --> 00:01:45.000
It ranks the corner points more into the interior.

00:01:45.000 --> 00:01:49.000
I want to do it in a way that is cyclic, so that the last point connects smoothly

00:01:49.000 --> 00:01:51.000
to the initial point over here.

00:01:51.000 --> 00:01:56.000
So please modify the code just to be a cyclic smoother as opposed to before

00:01:56.000 --> 00:02:00.000
it wasn't a cyclic smoother, and make it so each point get uprooted.

00:02:00.000 --> 09:59:59.000
You don't keep 2 of the points fixed.

