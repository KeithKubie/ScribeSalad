WEBVTT
Kind: captions
Language: en

00:00:07.679 --> 00:00:08.970
MANO MARKS: Hi, I'm Mano Marks.

00:00:08.970 --> 00:00:12.540
I'm a developer advocate on
the Google Maps API team.

00:00:12.540 --> 00:00:16.030
I'm happy to announce the latest
version of the Google Maps SDK

00:00:16.030 --> 00:00:18.810
for iOS version 1.7.

00:00:18.810 --> 00:00:21.690
In 1.7, we introduce
two new features--

00:00:21.690 --> 00:00:25.290
gradient polylines and
structured reverse geocoding.

00:00:25.290 --> 00:00:28.469
Let's start with
gradient polylines.

00:00:28.469 --> 00:00:30.760
Gradient polylines allow you
to fill different segments

00:00:30.760 --> 00:00:32.509
of a polyline with
different colors.

00:00:32.509 --> 00:00:35.470
This is a useful feature
for data visualization.

00:00:35.470 --> 00:00:38.600
You can use different colors
to show different variables,

00:00:38.600 --> 00:00:40.630
like, say, elevation.

00:00:40.630 --> 00:00:43.130
It's also useful for things
like routing-- for instance,

00:00:43.130 --> 00:00:46.310
to indicate different
speed limits along a route.

00:00:46.310 --> 00:00:48.535
What you see here is the
gradient polylines demo

00:00:48.535 --> 00:00:52.820
from the SDK demos project
that comes with the SDK.

00:00:52.820 --> 00:00:54.930
This example uses
gradient polylines

00:00:54.930 --> 00:00:56.970
to show the elevation
of a walking

00:00:56.970 --> 00:00:59.420
track on the coast of Italy.

00:00:59.420 --> 00:01:01.990
The green part of the line
represents the highest

00:01:01.990 --> 00:01:05.950
altitude, and then graduates
towards orange to red,

00:01:05.950 --> 00:01:09.287
representing the lowest
altitude in the center.

00:01:09.287 --> 00:01:10.370
The code is pretty simple.

00:01:10.370 --> 00:01:12.550
Take a look at the
documentation and the demos

00:01:12.550 --> 00:01:14.970
that come with the SDK download.

00:01:14.970 --> 00:01:18.130
Now, let's look at
structured reverse geocoding.

00:01:18.130 --> 00:01:21.540
Since we released the
Google Maps SDK in 2012,

00:01:21.540 --> 00:01:23.120
we've had reverse
geocoding, which

00:01:23.120 --> 00:01:26.320
takes a latitude longitude
pair and returns an address.

00:01:26.320 --> 00:01:28.540
This is useful for
getting an address

00:01:28.540 --> 00:01:30.710
of someone's current
location or the place

00:01:30.710 --> 00:01:32.135
that they tap on a map.

00:01:32.135 --> 00:01:35.840
In the past, a reverse
geocoder, GMS Geocoder,

00:01:35.840 --> 00:01:39.130
has responded to a
latitude longitude request

00:01:39.130 --> 00:01:42.260
with the address as
a formatted string.

00:01:42.260 --> 00:01:44.260
With structured
reverse geocoding,

00:01:44.260 --> 00:01:46.620
we return an address
object with properties

00:01:46.620 --> 00:01:49.860
that allow you to easily
access its component parts.

00:01:49.860 --> 00:01:52.860
In this demo, which also
comes with the SDK demos,

00:01:52.860 --> 00:01:55.060
you can see if I
do a long press,

00:01:55.060 --> 00:01:57.970
I get detailed information about
the locality-- in this case,

00:01:57.970 --> 00:02:01.280
Sydney-- the administrative
area-- New South Wales--

00:02:01.280 --> 00:02:03.290
and the country-- Australia.

00:02:03.290 --> 00:02:05.380
In addition to
these two features,

00:02:05.380 --> 00:02:08.070
1.7 includes some bug fixes.

00:02:08.070 --> 00:02:11.840
So to see a complete list
of what's included in 1.7,

00:02:11.840 --> 00:02:13.250
check out the release notes.

00:02:13.250 --> 00:02:16.030
And as always, we're really
excited to hear your experience

00:02:16.030 --> 00:02:17.500
using the SDK.

00:02:17.500 --> 00:02:20.320
Please leave comments here
or on our Google+ page.

00:02:20.320 --> 00:02:22.480
And as always, if
you need any help,

00:02:22.480 --> 00:02:23.920
go over to Stack Overflow.

00:02:23.920 --> 00:02:27.760
Our support page has all
the tags that you need.

