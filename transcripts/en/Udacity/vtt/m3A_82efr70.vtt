WEBVTT
Kind: captions
Language: en

00:00:00.669 --> 00:00:02.621
So now you know,
where fragments are used

00:00:02.621 --> 00:00:05.566
and where we're going
to use them in our app.

00:00:05.566 --> 00:00:09.008
You're probably starting to ask,
why use fragments at all?

00:00:09.008 --> 00:00:10.673
If we want to group UI components,

00:00:10.673 --> 00:00:12.647
couldn't we just create
a View Group,

00:00:12.647 --> 00:00:15.603
or maybe a re-usable
XML layout definition?

00:00:15.603 --> 00:00:19.113
Yes, but the real power in fragments

00:00:19.113 --> 00:00:21.163
goes beyond grouping UI elements.

00:00:21.163 --> 00:00:23.779
They allow us to fully modularize
our activities,

00:00:23.779 --> 00:00:26.296
including the life cycle
events they receive

00:00:26.296 --> 00:00:28.392
in the app state that they maintain.

00:00:28.392 --> 00:00:30.699
Fragments were first introduced
in Honeycomb

00:00:30.699 --> 00:00:32.470
to solve a particular problem.

00:00:32.470 --> 00:00:36.010
Honeycomb was the first Android release
to support tablet's

00:00:36.010 --> 00:00:38.639
and it turned out,
the best way for most apps

00:00:38.639 --> 00:00:42.682
to create a great tablet UI
was to put two or more

00:00:42.682 --> 00:00:45.644
of their phone activities
alongside each other.

00:00:45.644 --> 00:00:47.985
For example, if you had a phone app

00:00:47.985 --> 00:00:50.116
that started with a list activity
like this,

00:00:50.116 --> 00:00:53.280
which you then clicked an item,
would open a detailed activity

00:00:53.280 --> 00:00:54.526
like this one.

00:00:54.526 --> 00:00:56.929
What we call a Master Detail Flow.

00:00:56.929 --> 00:01:01.019
A good tablet UI would put them
side by side like this.

00:01:01.019 --> 00:01:03.482
Functionally, clicking an item
on this list,

00:01:03.482 --> 00:01:05.827
now replaces this activity on the right,

00:01:05.827 --> 00:01:08.118
rather than starting a new one,
as it would have done

00:01:08.118 --> 00:01:09.726
here on the phone.

00:01:09.726 --> 00:01:12.212
Now, unfortunately,
Android didn't always support

00:01:12.212 --> 00:01:15.433
embedding activities
within other activities.

00:01:15.433 --> 00:01:18.207
At least, it didn't,
until we introduced fragments.

00:01:18.207 --> 00:01:20.099
Now, if you just look
at the UI elements,

00:01:20.099 --> 00:01:22.525
you could be excused for thinking
that you could achieve

00:01:22.525 --> 00:01:24.942
much the same thing
using an activity

00:01:24.942 --> 00:01:27.720
that was built using
U Groups and layouts,

00:01:27.720 --> 00:01:29.857
without bothering with fragments,

00:01:29.857 --> 00:01:32.387
which is true,
up to a point.

00:01:32.387 --> 00:01:34.081
But then you'd have to pass through

00:01:34.081 --> 00:01:36.305
all of the activity life cycle events,

00:01:36.305 --> 00:01:38.450
manage the state
of each piece of the UI,

00:01:38.450 --> 00:01:41.242
keep track of the state of each
of the portions as they changed,

00:01:41.242 --> 00:01:43.007
and remember
which screen elements

00:01:43.007 --> 00:01:45.222
were on screen
at any given time,

00:01:45.222 --> 00:01:47.638
in order to maintain app state.

00:01:47.638 --> 00:01:49.934
All of which, is exactly
what the Fragment Manager

00:01:49.934 --> 00:01:52.904
does for you,
when you use Fragments.

00:01:52.904 --> 00:01:54.572
And that let's you
take a step back

00:01:54.572 --> 00:01:58.181
and treat each fragment
as though it were a mini activity.

00:01:58.181 --> 00:02:00.006
For example, in the world of activities,

00:02:00.006 --> 00:02:02.109
you start one activity from the other,

00:02:02.109 --> 00:02:04.675
and that transaction
is recorded on the back stack.

00:02:04.675 --> 00:02:07.763
So, hitting the Back button,
will undo that transaction

00:02:07.763 --> 00:02:10.455
and bring the first activity
to the front.

00:02:10.455 --> 00:02:13.214
Now, the same thing can happen
with fragment transactions.

00:02:13.214 --> 00:02:15.525
In this case, rather than starting
a new activity,

00:02:15.525 --> 00:02:18.894
we simply replace the list fragment
with the detail fragment.

00:02:18.894 --> 00:02:21.283
And then, the Back button
will undo that transaction

00:02:21.283 --> 00:02:22.373
and reverse it.

00:02:22.373 --> 00:02:24.200
So in theory, you can really take

00:02:24.200 --> 00:02:26.217
any app with multiple activities

00:02:26.217 --> 00:02:28.204
and replace it with a single activity

00:02:28.204 --> 00:02:30.554
that's host to multiple fragments.

