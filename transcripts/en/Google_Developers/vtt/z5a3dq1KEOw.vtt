WEBVTT
Kind: captions
Language: en

00:00:09.082 --> 00:00:11.700
PENG YING: Hi, and welcome
to Google Developers Live.

00:00:11.700 --> 00:00:13.960
My name is Peng Ying,
and with me today

00:00:13.960 --> 00:00:16.375
is the newest member
of our team, Maru.

00:00:16.375 --> 00:00:17.000
MARU AHUES: Hi.

00:00:17.000 --> 00:00:18.344
Happy to be here.

00:00:18.344 --> 00:00:20.260
PENG YING: So for this
Google Developers Live,

00:00:20.260 --> 00:00:22.850
we'll be talking
about Wallet Objects.

00:00:22.850 --> 00:00:26.460
And specifically, we'll be
talking about how to get you up

00:00:26.460 --> 00:00:29.720
and started with our
Quick Start samples.

00:00:29.720 --> 00:00:31.340
We have several
Quick Start samples,

00:00:31.340 --> 00:00:34.870
and the one we're going to
be focusing on today is Java.

00:00:34.870 --> 00:00:36.800
What the Quick
Start does is it's

00:00:36.800 --> 00:00:38.930
designed to help you
hit the ground running

00:00:38.930 --> 00:00:40.140
in your integration.

00:00:40.140 --> 00:00:42.620
And it showcases several things.

00:00:42.620 --> 00:00:45.170
One is authorizing
access, and two

00:00:45.170 --> 00:00:47.730
is inserting a new
Wallet Objects class.

00:00:47.730 --> 00:00:50.640
Three is using the
Save To Wallet API

00:00:50.640 --> 00:00:54.420
to insert a Wallet
Object, and then lastly,

00:00:54.420 --> 00:00:58.730
using the Web Services API
to enable instant sign-up

00:00:58.730 --> 00:01:01.480
and linking from the
Google Wallet app.

00:01:01.480 --> 00:01:03.620
You can find
detailed instructions

00:01:03.620 --> 00:01:06.450
on setting this up in
our documentation, which

00:01:06.450 --> 00:01:08.550
you'll see on the
screen right now.

00:01:08.550 --> 00:01:11.400
And to walk you through these
instructions, here is Maru.

00:01:11.400 --> 00:01:12.790
MARU AHUES: Thank you, Peng.

00:01:12.790 --> 00:01:17.080
So as Peng mentioned, and you
can see on my screen right now,

00:01:17.080 --> 00:01:20.960
we have the Java Quick
Start documentation.

00:01:20.960 --> 00:01:25.900
And here, we have detailed steps
on how to get your credentials,

00:01:25.900 --> 00:01:29.280
download the project,
configure it, and run it.

00:01:29.280 --> 00:01:31.650
What we'll do today is go
through all of the steps

00:01:31.650 --> 00:01:34.770
and show you a demo on the
phone on how this works.

00:01:34.770 --> 00:01:37.840
So to start, the first
thing that we need to do

00:01:37.840 --> 00:01:39.300
is get our credentials.

00:01:39.300 --> 00:01:43.230
To do that, I recommend
that you watch a previously

00:01:43.230 --> 00:01:44.910
recorded GDL.

00:01:44.910 --> 00:01:48.440
It's called Wallet
Object API Account Setup,

00:01:48.440 --> 00:01:51.940
and this will show you
how to create your account

00:01:51.940 --> 00:01:53.780
and how to get your credentials.

00:01:53.780 --> 00:01:55.960
And once you have that
set up, all you need to do

00:01:55.960 --> 00:02:01.340
is just go into-- first let
me go here-- get your issuer

00:02:01.340 --> 00:02:04.920
ID from your Merchant
Dashboard, and also make sure

00:02:04.920 --> 00:02:09.330
that you have your service
account created on the Google

00:02:09.330 --> 00:02:10.060
Cloud Console.

00:02:10.060 --> 00:02:12.070
So go to the Google
Cloud Console,

00:02:12.070 --> 00:02:16.480
click on Register Apps, then you
can click on Service Account.

00:02:16.480 --> 00:02:20.240
And this is my Service
Account, test, and then

00:02:20.240 --> 00:02:21.690
this is my email address.

00:02:21.690 --> 00:02:24.270
So I'll need my email
address, my merchant

00:02:24.270 --> 00:02:26.440
account ID, and
also the private key

00:02:26.440 --> 00:02:28.950
that you downloaded when you
created your credentials.

00:02:28.950 --> 00:02:30.840
So once you have
those three things,

00:02:30.840 --> 00:02:34.480
we can go and download
the Quick Start.

00:02:34.480 --> 00:02:37.720
To do that, the Quick
Start code is open source,

00:02:37.720 --> 00:02:39.980
and you can find it on GitHub.

00:02:39.980 --> 00:02:42.790
To do that, go to
github.com/googlewallet,

00:02:42.790 --> 00:02:45.290
and you can find it on
 googlewalletobjects-quickstart-java.

00:02:49.160 --> 00:02:52.250
So once you're here,
you'll see that you

00:02:52.250 --> 00:02:55.710
have the option, of course,
to either clone or download

00:02:55.710 --> 00:02:56.720
the code.

00:02:56.720 --> 00:02:59.990
We're going to clone it
locally here to show you.

00:02:59.990 --> 00:03:02.580
So I'm going to
open my terminal,

00:03:02.580 --> 00:03:04.422
and just going to do--

00:03:04.422 --> 00:03:06.130
PENG YING: You also
didn't get installed,

00:03:06.130 --> 00:03:07.940
but there's not a
tutorial for that.

00:03:07.940 --> 00:03:10.480
MARU AHUES: Or you
can just download it,

00:03:10.480 --> 00:03:12.330
and that would be
easier, probably.

00:03:12.330 --> 00:03:15.290
Then just clone here.

00:03:15.290 --> 00:03:20.669
And it's going to take a
couple of seconds, or more.

00:03:20.669 --> 00:03:21.460
PENG YING: Oh, man.

00:03:21.460 --> 00:03:23.760
The internet is a
little bit slow today.

00:03:23.760 --> 00:03:28.280
MARU AHUES: So while we wait for
the clone, then the next step,

00:03:28.280 --> 00:03:32.190
we need to make sure that
you have Eclipse installed.

00:03:32.190 --> 00:03:34.930
So if you don't have
it, then pause this

00:03:34.930 --> 00:03:37.150
and then go install
and then come back.

00:03:37.150 --> 00:03:41.331
And once this is done--
OK, this is done now.

00:03:41.331 --> 00:03:44.050
PENG YING: You also
need the Google Plugin.

00:03:44.050 --> 00:03:44.750
MARU AHUES: Yes.

00:03:44.750 --> 00:03:48.050
So let's go into
our Eclipse now.

00:03:48.050 --> 00:03:50.250
So now that we
have it downloaded,

00:03:50.250 --> 00:03:52.042
let's see where it is.

00:03:52.042 --> 00:03:56.100
I'm just going to go
into my directory.

00:03:56.100 --> 00:03:58.339
We have the code in here.

00:03:58.339 --> 00:03:59.505
We're going to open Eclipse.

00:04:03.200 --> 00:04:05.910
And I'm just going to create
a new workspace for today,

00:04:05.910 --> 00:04:09.420
just to test, to make sure that
I don't have anything there.

00:04:14.627 --> 00:04:15.710
PENG YING: Workspace four.

00:04:18.870 --> 00:04:21.120
MARU AHUES: So now that we're
here, what we need to do

00:04:21.120 --> 00:04:24.830
is first import the
Quick Start into Eclipse.

00:04:24.830 --> 00:04:27.520
So as Peng mentioned,
we also need

00:04:27.520 --> 00:04:29.270
to have the Google
Eclipse Plugin.

00:04:29.270 --> 00:04:32.410
So let's do that first.

00:04:32.410 --> 00:04:33.910
First check if you
already have it.

00:04:33.910 --> 00:04:36.035
Maybe you have already used
it for another project.

00:04:36.035 --> 00:04:40.530
Just go into Help,
Install New Software,

00:04:40.530 --> 00:04:45.260
and then check here where it
says what's already installed.

00:04:45.260 --> 00:04:49.400
And on my list, I have it--
Google Plugin for Eclipse.

00:04:49.400 --> 00:04:51.170
But if you don't
have it, then all you

00:04:51.170 --> 00:04:53.780
need to do is go into
our documentation,

00:04:53.780 --> 00:04:56.750
and it has the link
for the site where

00:04:56.750 --> 00:04:58.250
it needs to be downloaded from.

00:04:58.250 --> 00:04:59.315
I already have it here.

00:05:02.050 --> 00:05:06.300
So it's
 dl.google.com/eclipse/plugin/4.3.

00:05:06.300 --> 00:05:08.925
And this is, of course,
related to the Eclipse version

00:05:08.925 --> 00:05:10.070
that I'm running.

00:05:10.070 --> 00:05:11.710
So for a different
version, you will

00:05:11.710 --> 00:05:13.770
need to use a different URL.

00:05:13.770 --> 00:05:16.670
So once you click
this, just click Enter,

00:05:16.670 --> 00:05:19.440
and this will load a list of
all of the plugins or tools

00:05:19.440 --> 00:05:22.340
that we have available
on that site.

00:05:22.340 --> 00:05:26.350
For this project, you only need
the Google Plugin for Eclipse,

00:05:26.350 --> 00:05:27.125
right?

00:05:27.125 --> 00:05:27.750
PENG YING: Yep.

00:05:27.750 --> 00:05:31.550
MARU AHUES: So you just click
on that, and then click Next.

00:05:31.550 --> 00:05:35.040
PENG YING: We've actually
included the App Engine

00:05:35.040 --> 00:05:38.230
dependencies, or a specific
version of App Engine

00:05:38.230 --> 00:05:41.700
within our GitHub project,
which is why you don't also

00:05:41.700 --> 00:05:43.845
need to download a
version of App Engine

00:05:43.845 --> 00:05:45.400
when you're installing
this plugin.

00:05:45.400 --> 00:05:46.774
MARU AHUES: That's
great to know.

00:05:46.774 --> 00:05:49.230
So the only thing we need to
worry about to make it easier

00:05:49.230 --> 00:05:51.800
for you guys is just to
download this plugin.

00:05:51.800 --> 00:05:53.110
So we'll do that.

00:05:53.110 --> 00:05:54.750
In my case, because
I have it, it

00:05:54.750 --> 00:05:57.030
says that I need to update it.

00:05:57.030 --> 00:05:58.910
So I click Next, and
it will update it.

00:05:58.910 --> 00:06:01.540
For you guys, it will
probably just say Finish,

00:06:01.540 --> 00:06:02.820
and then you will install it.

00:06:02.820 --> 00:06:04.903
I'm not going to update
it right now, to make sure

00:06:04.903 --> 00:06:07.630
that we don't spend
too much time on that.

00:06:07.630 --> 00:06:08.590
So we have that.

00:06:08.590 --> 00:06:10.720
And now let's import the code.

00:06:10.720 --> 00:06:16.820
To do that, all we do is
just click on File, Import.

00:06:16.820 --> 00:06:20.770
And then from here, we're going
to select General, and then

00:06:20.770 --> 00:06:24.420
Existing Projects
Into Workspace.

00:06:24.420 --> 00:06:26.250
For our root
directory, we're going

00:06:26.250 --> 00:06:30.030
to use the same directory where
we cloned our code from GitHub,

00:06:30.030 --> 00:06:32.390
or where we downloaded it.

00:06:32.390 --> 00:06:37.210
So in my case, I have that
under Development, quickstarts,

00:06:37.210 --> 00:06:39.940
and then
walletobjects-quickstart-java.

00:06:39.940 --> 00:06:42.790
So I'm just going
to click on Open.

00:06:42.790 --> 00:06:45.460
And as you can see here,
it has the project,

00:06:45.460 --> 00:06:47.461
and that's all what
I need to do here.

00:06:47.461 --> 00:06:48.960
I don't need to
check anything else.

00:06:48.960 --> 00:06:52.190
I just need to click on Finish.

00:06:52.190 --> 00:06:54.110
So now this is going
to import the code.

00:06:58.740 --> 00:07:05.470
And once it's done--
OK, so we're done here.

00:07:05.470 --> 00:07:07.880
What do we need to do next?

00:07:07.880 --> 00:07:10.390
So now, what we want
to do is configure

00:07:10.390 --> 00:07:12.810
the project with
our credentials.

00:07:12.810 --> 00:07:15.620
To do that, we have two steps.

00:07:15.620 --> 00:07:18.950
The first step is to
copy our private key

00:07:18.950 --> 00:07:21.870
into the war WEB-INF directory.

00:07:21.870 --> 00:07:23.970
So let's do that here.

00:07:23.970 --> 00:07:27.730
I'm into the directory here, and
I have my key on the directory

00:07:27.730 --> 00:07:33.630
above, so wobs-privatekey,
and I'm going to copy it

00:07:33.630 --> 00:07:35.730
into war/WEB-INF.

00:07:39.770 --> 00:07:48.240
Once I have it there--
let me refresh here--

00:07:48.240 --> 00:07:49.420
so my key's there.

00:07:49.420 --> 00:07:50.890
So that's the first step.

00:07:50.890 --> 00:07:52.740
And the second is we're
going to configure

00:07:52.740 --> 00:07:54.890
our credentials in the web.xml.

00:07:54.890 --> 00:07:59.240
So just double click the
WEB-INF web.xml file,

00:07:59.240 --> 00:08:01.670
and click on Source
so we can edit it.

00:08:01.670 --> 00:08:03.521
Let me close out Outline here.

00:08:06.820 --> 00:08:10.950
And if you scroll
down, you'll see

00:08:10.950 --> 00:08:14.320
that we have here
four configuration

00:08:14.320 --> 00:08:16.200
parameters that
we need to change.

00:08:16.200 --> 00:08:18.830
The first one is the
service account ID.

00:08:18.830 --> 00:08:22.140
And this, as it says here is
your OAuth service account

00:08:22.140 --> 00:08:23.010
email.

00:08:23.010 --> 00:08:25.465
So let me go back to the
browser to copy that.

00:08:28.130 --> 00:08:33.809
And this is my email, and I'm
just going to copy that here.

00:08:33.809 --> 00:08:38.035
My private key, in this case, I
called my key wobs-privatekey.

00:08:40.556 --> 00:08:43.289
PENG YING: Very descriptive.

00:08:43.289 --> 00:08:45.080
MARU AHUES: I try
to be descriptive.

00:08:45.080 --> 00:08:48.540
And then the issuer ID, I'm
going to also come and copy

00:08:48.540 --> 00:08:54.215
paste that from the
Merchant Dashboard.

00:08:58.200 --> 00:09:01.560
And I also need to enter
my application name.

00:09:01.560 --> 00:09:04.150
So for the application
name, don't worry.

00:09:04.150 --> 00:09:05.750
This doesn't need
to match anything

00:09:05.750 --> 00:09:09.010
that you've already
created before.

00:09:09.010 --> 00:09:11.300
This is used only
for OAuth purposes.

00:09:11.300 --> 00:09:14.710
So when the user logs in,
it says on the pop-up,

00:09:14.710 --> 00:09:17.300
you're logging in and
you're giving permission

00:09:17.300 --> 00:09:20.030
to this application to
use your information.

00:09:20.030 --> 00:09:22.030
So of course, this needs
to be application name,

00:09:22.030 --> 00:09:25.780
but it doesn't match anything
that you've previously created.

00:09:25.780 --> 00:09:28.805
So in here, I'm going
to put Maru's Test.

00:09:31.780 --> 00:09:34.261
And so that's it, pretty much.

00:09:34.261 --> 00:09:34.760
We're done.

00:09:34.760 --> 00:09:35.426
PENG YING: Yeah.

00:09:35.426 --> 00:09:36.134
Let's run it.

00:09:36.134 --> 00:09:37.550
MARU AHUES: So
fairly easy, right?

00:09:37.550 --> 00:09:38.799
So now, what do we want to do?

00:09:38.799 --> 00:09:40.270
We want to run it.

00:09:40.270 --> 00:09:43.337
The next thing we do is we're
going to click on the Run,

00:09:43.337 --> 00:09:45.795
and then we're going to run
this as a web application using

00:09:45.795 --> 00:09:48.990
our Google Eclipse Plugin.

00:09:48.990 --> 00:09:53.927
Once we do that, let me
open this so you can see it.

00:09:53.927 --> 00:09:55.010
PENG YING: That was quick.

00:09:55.010 --> 00:09:57.050
MARU AHUES: It was fast.

00:09:57.050 --> 00:09:58.530
And it's already running.

00:09:58.530 --> 00:10:00.350
And now, you can
see it's running

00:10:00.350 --> 00:10:05.303
on local host, port 8888.

00:10:05.303 --> 00:10:07.310
That's not an easy one.

00:10:07.310 --> 00:10:12.170
So what we're going to
do is open another window

00:10:12.170 --> 00:10:15.710
and run this here.

00:10:15.710 --> 00:10:20.390
So what you see now on my
screen is the Quick Start code

00:10:20.390 --> 00:10:21.160
running.

00:10:21.160 --> 00:10:26.720
And like Peng says,
we are showing you

00:10:26.720 --> 00:10:30.360
three different functionalities
with the Quick Start.

00:10:30.360 --> 00:10:32.820
The first one would
be to insert classes,

00:10:32.820 --> 00:10:35.710
which is what you're going
to do with these two buttons.

00:10:35.710 --> 00:10:38.470
The second one is to
insert the objects,

00:10:38.470 --> 00:10:42.810
and we're going to do that using
the Save To Wallet buttons.

00:10:42.810 --> 00:10:45.450
And then the third one is
the web service integration.

00:10:45.450 --> 00:10:47.380
That's going to let
you test and work

00:10:47.380 --> 00:10:49.380
with the Google
Wallet application.

00:10:49.380 --> 00:10:51.150
We'll show you that
one afterwards,

00:10:51.150 --> 00:10:52.460
after we're done with this.

00:10:52.460 --> 00:10:53.160
PENG YING: Typically,
you wouldn't

00:10:53.160 --> 00:10:54.945
want to have a button
to insert a class.

00:10:54.945 --> 00:10:56.695
Typically you just do
it on your back end.

00:10:56.695 --> 00:11:00.000
But because we're demonstrating
how to issue that request,

00:11:00.000 --> 00:11:02.800
we have the button here to tell
our server to take that action.

00:11:02.800 --> 00:11:04.300
MARU AHUES: And
that's good to know.

00:11:04.300 --> 00:11:08.320
So these buttons, you won't
have those on your site.

00:11:08.320 --> 00:11:10.980
But they're good for
testing and for debugging.

00:11:10.980 --> 00:11:15.390
So we're going to click
Insert Loyalty Class.

00:11:15.390 --> 00:11:20.160
And once we do that,
let's look here.

00:11:20.160 --> 00:11:23.130
It's going to show me
that the class already

00:11:23.130 --> 00:11:27.240
exists because we've already
inserted it testing the Quick

00:11:27.240 --> 00:11:28.320
Start before.

00:11:28.320 --> 00:11:28.950
So that's good.

00:11:28.950 --> 00:11:30.700
If you keep clicking
on that, it will just

00:11:30.700 --> 00:11:33.390
give you this error message,
which is not an error.

00:11:33.390 --> 00:11:37.220
The class is unique, so we
can only insert it once.

00:11:37.220 --> 00:11:40.620
And after that, once
we insert the class,

00:11:40.620 --> 00:11:44.430
we can go ahead and use the
Save To Wallet button and insert

00:11:44.430 --> 00:11:48.940
the object or associate
the card with my user.

00:11:48.940 --> 00:11:50.490
If I mouse over
the button, you'll

00:11:50.490 --> 00:11:53.260
see that I'm signed
in here as John Smith.

00:11:53.260 --> 00:11:57.390
If I wasn't logged in, it
would tell me to log in,

00:11:57.390 --> 00:11:59.170
I would click on it,
and it will allow

00:11:59.170 --> 00:12:03.210
me to log in as a Google
user with a Google account.

00:12:03.210 --> 00:12:06.980
So now I'm going to click
on Save Card To Google.

00:12:06.980 --> 00:12:09.990
PENG YING: And if you
look at your Wallet App,

00:12:09.990 --> 00:12:14.070
you can actually see the card
inserted into this Google

00:12:14.070 --> 00:12:16.300
Wallet demo account.

00:12:16.300 --> 00:12:19.940
And then we can actually take a
look at what the card contains.

00:12:19.940 --> 00:12:21.670
So if we click into
Baconrista Rewards--

00:12:21.670 --> 00:12:25.220
this is our demo merchant, of
course, a demo loyalty card.

00:12:25.220 --> 00:12:28.090
You can see that we've
created a bar code, that we've

00:12:28.090 --> 00:12:30.950
given this user points, that
we have a tier for the user,

00:12:30.950 --> 00:12:33.660
and the additional information
about the user associated

00:12:33.660 --> 00:12:35.260
with the account.

00:12:35.260 --> 00:12:37.070
And if you want to
take a look at that,

00:12:37.070 --> 00:12:41.070
you can check out the
Loyalty Vertical class,

00:12:41.070 --> 00:12:43.697
which will show you how
we've defined all of that.

00:12:43.697 --> 00:12:45.530
And I think Maru will
go through it as well.

00:12:45.530 --> 00:12:47.654
MARU AHUES: And we can go
through it in detail now.

00:12:51.630 --> 00:12:54.210
So now, we have the
class and the object.

00:12:54.210 --> 00:12:58.270
And let's look at
some of the code then.

00:12:58.270 --> 00:12:59.970
So we go back into Eclipse.

00:13:03.130 --> 00:13:05.485
I'm going to stop it just
so we can look at the code.

00:13:11.850 --> 00:13:15.500
So the first thing we should
look at is the index.html.

00:13:15.500 --> 00:13:18.490
So when we load the
Quick Start, you'll

00:13:18.490 --> 00:13:20.830
see this is our index page.

00:13:20.830 --> 00:13:24.220
And what we have is, like we
said, the buttons to insert

00:13:24.220 --> 00:13:26.800
the classes, and also a
Save To Wallet button.

00:13:26.800 --> 00:13:28.690
So we're going to
see here in our code

00:13:28.690 --> 00:13:32.300
that we have those
buttons here, and also we

00:13:32.300 --> 00:13:35.450
have the step two buttons
for the Save To Wallet.

00:13:35.450 --> 00:13:41.340
We're also including the
JavaScript here in this file.

00:13:41.340 --> 00:13:43.570
Let me open it so
you can see it.

00:13:43.570 --> 00:13:45.175
What it's doing is
that it's mapping.

00:13:48.700 --> 00:13:49.900
So it's mapping.

00:13:49.900 --> 00:13:53.590
The Save To Wallet
buttons are being mapped

00:13:53.590 --> 00:14:00.330
to the JWT or the
"jot" handler, and what

00:14:00.330 --> 00:14:01.820
this is going to
be doing is it's

00:14:01.820 --> 00:14:03.670
going to be generated
in the code that's

00:14:03.670 --> 00:14:06.140
going to render the button.

00:14:06.140 --> 00:14:08.630
And we'll show you in
detail how this works.

00:14:08.630 --> 00:14:14.040
Also, we have the code here for
the Insert Loyalty and Insert

00:14:14.040 --> 00:14:15.490
Offer buttons.

00:14:15.490 --> 00:14:16.980
And so they're also linked.

00:14:16.980 --> 00:14:18.640
When you click on
them, they're going

00:14:18.640 --> 00:14:23.690
to be calling the insert handler
here, or the insert servlet.

00:14:23.690 --> 00:14:26.110
So now, let's see
what those are doing

00:14:26.110 --> 00:14:32.060
if we go back into our web.xml.

00:14:32.060 --> 00:14:35.230
Let's look for
Insert first in here.

00:14:35.230 --> 00:14:40.580
We're mapping this
path to the WOB insert

00:14:40.580 --> 00:14:43.360
servlet, which is here.

00:14:43.360 --> 00:14:46.310
And we're mapping
the JWT or the "jot"

00:14:46.310 --> 00:14:51.500
to WOB generate JWT servlet.

00:14:51.500 --> 00:14:55.120
So if we go now
into the source, we

00:14:55.120 --> 00:14:57.900
have a package for our servlets.

00:14:57.900 --> 00:15:02.710
And then let's look
first at the insert.

00:15:05.810 --> 00:15:06.974
So in here, what do we do?

00:15:06.974 --> 00:15:09.390
When you click on the button,
the first thing that happens

00:15:09.390 --> 00:15:12.820
is that we're going to create
an object with the credentials

00:15:12.820 --> 00:15:16.990
that you defined
in your web.xml.

00:15:16.990 --> 00:15:19.190
And then we're
going to check which

00:15:19.190 --> 00:15:23.680
is the type which we're
sending in the URL

00:15:23.680 --> 00:15:25.380
from when you click
on the button.

00:15:25.380 --> 00:15:27.630
So in our case, we're
testing loyalty.

00:15:27.630 --> 00:15:30.200
So type is loyalty.

00:15:30.200 --> 00:15:32.140
So we check if the
type is loyalty,

00:15:32.140 --> 00:15:35.340
we're generating
a loyalty class.

00:15:35.340 --> 00:15:38.800
And once we do
that, we are calling

00:15:38.800 --> 00:15:42.230
the API to insert
that loyalty class.

00:15:42.230 --> 00:15:46.350
When we do this, first we
use our loyalty object here.

00:15:46.350 --> 00:15:47.310
And let me look at it.

00:15:47.310 --> 00:15:49.590
And this is what Peng
was referring to.

00:15:49.590 --> 00:15:53.390
When you want to modify what
are we have in the Quick Start,

00:15:53.390 --> 00:15:56.290
all of the fields and
parameters and the information

00:15:56.290 --> 00:15:59.990
that we're displaying in our
loyalty class and object test,

00:15:59.990 --> 00:16:02.390
you come into the
loyalty vertical.

00:16:02.390 --> 00:16:05.925
And this can be found
under the verticals--

00:16:05.925 --> 00:16:09.630
let me open it-- the
vertical package.

00:16:12.610 --> 00:16:15.890
So let's look at
the loyalty class.

00:16:15.890 --> 00:16:18.360
So in here, you can see
we're setting the header,

00:16:18.360 --> 00:16:20.600
we're setting the body,
we're sitting an image

00:16:20.600 --> 00:16:22.484
for "back-in-rista"?

00:16:22.484 --> 00:16:23.400
PENG YING: Baconrista.

00:16:23.400 --> 00:16:25.010
MARU AHUES: Baconrista.

00:16:25.010 --> 00:16:28.810
We're putting some header
details and some messages,

00:16:28.810 --> 00:16:32.460
so all of the information that
you can set on a loyalty class.

00:16:32.460 --> 00:16:35.200
And you can find more details
about this in our documentation

00:16:35.200 --> 00:16:39.150
if you go to the templates
or our loyalty tutorial

00:16:39.150 --> 00:16:41.175
you're able to do through
our loyalty class.

00:16:44.510 --> 00:16:48.750
If we go back here, when we're
calling client loyalty class

00:16:48.750 --> 00:16:51.660
insert, we're calling
our client library

00:16:51.660 --> 00:16:56.110
that is making the API call
to insert that loyalty class.

00:16:56.110 --> 00:16:59.380
And the same happens
for our other verticals.

00:16:59.380 --> 00:17:03.330
Once we do that, then
that servlet's inserted,

00:17:03.330 --> 00:17:05.829
and then responds back to us.

00:17:05.829 --> 00:17:07.714
Anything you want to add here?

00:17:07.714 --> 00:17:09.016
PENG YING: No.

00:17:09.016 --> 00:17:11.470
MARU AHUES: Great, so
then for the JWT servlet,

00:17:11.470 --> 00:17:13.680
it's very similar.

00:17:13.680 --> 00:17:16.800
We're also going to
create our credentials.

00:17:16.800 --> 00:17:21.220
And then in here, we
have a list of origins.

00:17:21.220 --> 00:17:27.381
And it's adding
your URL or the site

00:17:27.381 --> 00:17:29.130
where you're running--
so you really don't

00:17:29.130 --> 00:17:33.710
need to modify this-- and also
checks the type, which we're

00:17:33.710 --> 00:17:37.010
also sending from
the JavaScript here.

00:17:37.010 --> 00:17:42.870
If we see here, we
have the type loyalty.

00:17:42.870 --> 00:17:45.040
And once we have the
type, we check the type.

00:17:45.040 --> 00:17:48.430
And then in this case, instead
of generating a loyalty class,

00:17:48.430 --> 00:17:51.640
we're now going to be
generating a loyalty object.

00:17:51.640 --> 00:17:54.740
So the difference here is
that we are creating a JWT.

00:17:54.740 --> 00:17:59.250
So we create a JWT, and we
add the object to the payload.

00:17:59.250 --> 00:18:04.190
And once we do that,
here, we generate the JWT,

00:18:04.190 --> 00:18:07.620
and we are signing it
and sending it back

00:18:07.620 --> 00:18:09.880
to the page and the button.

00:18:09.880 --> 00:18:14.000
PENG YING: A JWT is basically
base 64-encoded JSON

00:18:14.000 --> 00:18:18.350
with a signature from some
sort of HMAC-SHA1 hash,

00:18:18.350 --> 00:18:21.650
or whatever encryption
algorithm you want to use.

00:18:21.650 --> 00:18:23.730
MARU AHUES: In these
JWTs, what's important

00:18:23.730 --> 00:18:26.910
is that we are generating
them on the fly for testing.

00:18:26.910 --> 00:18:29.680
But you can pre-generate
these and save it

00:18:29.680 --> 00:18:32.230
on your button in
the HTML directly.

00:18:32.230 --> 00:18:35.350
So that would save, of
course, the time of processing

00:18:35.350 --> 00:18:37.350
when the page is loading.

00:18:37.350 --> 00:18:40.300
But for this demo, we do
this so you can very easily

00:18:40.300 --> 00:18:45.470
modify the servlet or
any of the information

00:18:45.470 --> 00:18:48.180
that you have on the vertical,
on the loyalty object,

00:18:48.180 --> 00:18:50.450
and then test it without
having to change your index

00:18:50.450 --> 00:18:53.370
HTML every time.

00:18:53.370 --> 00:18:59.186
Once we have that, what
else do we have in here?

00:18:59.186 --> 00:19:00.810
We also have the web
service, but we're

00:19:00.810 --> 00:19:03.310
going to talk about the
web service in detail

00:19:03.310 --> 00:19:06.270
after we finish this
part of the demo.

00:19:06.270 --> 00:19:09.390
Now that we've gone through the
process of inserting a class

00:19:09.390 --> 00:19:14.810
and also generating the WT to
save the object to your Wallet

00:19:14.810 --> 00:19:17.440
using the Save To
Wallet button, Peng

00:19:17.440 --> 00:19:20.730
is going to show us how we
integrate your discoverable

00:19:20.730 --> 00:19:24.080
with the Google Wallet app
using the Web Services API.

00:19:24.080 --> 00:19:24.980
PENG YING: Yep.

00:19:24.980 --> 00:19:28.840
So what the Web Service API does
is it enables instant sign-up

00:19:28.840 --> 00:19:32.560
or linking from within
the Google Wallet app.

00:19:32.560 --> 00:19:34.710
For example, I could
sign up for Walgreens,

00:19:34.710 --> 00:19:38.870
or I could link my Belly
rewards with a simple click.

00:19:38.870 --> 00:19:41.700
And right now, what I'm going
to show you is signing up

00:19:41.700 --> 00:19:45.430
for Baconrista Rewards,
our demo rewards

00:19:45.430 --> 00:19:47.440
merchant, or loyalty merchant.

00:19:47.440 --> 00:19:50.087
So I have my programs here,
and to add a new program,

00:19:50.087 --> 00:19:51.670
to sign up or link
from a new program,

00:19:51.670 --> 00:19:53.960
I click the plus button.

00:19:53.960 --> 00:19:56.480
And I scroll down to
my rewards program,

00:19:56.480 --> 00:19:59.380
which is-- its easy, Baconista
Rewards that we've enabled.

00:19:59.380 --> 00:20:02.210
I click into it, and I
have sign-up or linking.

00:20:02.210 --> 00:20:05.610
And both of these are
powered by Web Service API.

00:20:05.610 --> 00:20:08.260
So I can click Join Now.

00:20:08.260 --> 00:20:10.540
And these fields that you
see on the screen right now

00:20:10.540 --> 00:20:12.500
are actually defined
by the merchant

00:20:12.500 --> 00:20:13.750
inside the discoverable.

00:20:13.750 --> 00:20:15.370
So if you're a
merchant, and then

00:20:15.370 --> 00:20:17.080
you don't require
all of these fields,

00:20:17.080 --> 00:20:19.540
or you require a few
additional fields,

00:20:19.540 --> 00:20:22.190
you can choose the specific
ones that you need.

00:20:22.190 --> 00:20:23.880
For example, if I
need the phone number,

00:20:23.880 --> 00:20:26.320
I would request the phone
number from the user as well.

00:20:26.320 --> 00:20:28.440
And typically, all
of this data is

00:20:28.440 --> 00:20:30.090
stored within the
user's account,

00:20:30.090 --> 00:20:32.200
so they never have to
enter any information.

00:20:32.200 --> 00:20:36.910
They can just scroll
down, accept the terms,

00:20:36.910 --> 00:20:42.727
and click-- if I had less fatty
fingers, click Create Account.

00:20:42.727 --> 00:20:43.310
And that's it.

00:20:43.310 --> 00:20:44.601
I've signed up for the program.

00:20:44.601 --> 00:20:45.440
I'm now a member.

00:20:45.440 --> 00:20:48.150
I can go into my
objects and take a look

00:20:48.150 --> 00:20:50.180
at my rewards details.

00:20:50.180 --> 00:20:51.910
And to tell you
how it works, Maru

00:20:51.910 --> 00:20:55.160
will show you the handlers
on the server side

00:20:55.160 --> 00:20:58.330
and the configuration
of the discoverable.

00:20:58.330 --> 00:21:04.610
MARU AHUES: So how this magic
works, it's some very simple.

00:21:04.610 --> 00:21:10.370
The idea is that whenever
you click on the app

00:21:10.370 --> 00:21:13.240
Google will load
the discoverable

00:21:13.240 --> 00:21:15.580
that you have set in live mode.

00:21:15.580 --> 00:21:18.490
And once that's loaded on
the phone and someone clicks

00:21:18.490 --> 00:21:21.960
on either Join or
Link, I'm a member,

00:21:21.960 --> 00:21:25.010
or join the program,
what's going to happen

00:21:25.010 --> 00:21:29.020
is that Google will send you the
information, the JSON request,

00:21:29.020 --> 00:21:31.050
to your Web Service API.

00:21:31.050 --> 00:21:33.070
And how do we do that?

00:21:33.070 --> 00:21:36.480
We can define what that
web service endpoint

00:21:36.480 --> 00:21:38.920
is by going into the
Merchant Dashboard

00:21:38.920 --> 00:21:41.590
and going to Merchant
Callback Configuration.

00:21:41.590 --> 00:21:44.370
And here, you can
see we have the host,

00:21:44.370 --> 00:21:47.620
we also have the port, and then
the path is the web service.

00:21:47.620 --> 00:21:50.250
And this is what we have
defined on our Quick Start.

00:21:50.250 --> 00:21:54.600
Of course, this could change
based on your implementation.

00:21:54.600 --> 00:21:58.820
So for us, now we have our
Quick Start running on this App

00:21:58.820 --> 00:22:03.310
Engine site, under
wobs-maru.appspot.com And when

00:22:03.310 --> 00:22:08.390
Google sends the JSON request
to my web service endpoint,

00:22:08.390 --> 00:22:13.170
we send back a payload that
includes the object information

00:22:13.170 --> 00:22:17.150
that we want to save
on that for that user.

00:22:17.150 --> 00:22:21.760
So based on either whether it's
a linking, when the user said

00:22:21.760 --> 00:22:23.580
that they were
already a member, we

00:22:23.580 --> 00:22:27.180
will receive the member ID
and the request from Google.

00:22:27.180 --> 00:22:31.140
Or if it's a new
member, then you'll

00:22:31.140 --> 00:22:32.800
get all the new
member information.

00:22:32.800 --> 00:22:35.754
So then you can create a
new Google Wallet object.

00:22:35.754 --> 00:22:37.170
PENG YING: And the
auth token here

00:22:37.170 --> 00:22:40.459
is actually a token
to authenticate

00:22:40.459 --> 00:22:42.750
that this is coming from
Google, that the messages sent

00:22:42.750 --> 00:22:46.150
to your server are
being sent from Google.

00:22:46.150 --> 00:22:48.600
And it'll actually
be a header element

00:22:48.600 --> 00:22:49.762
within the HTTP request.

00:22:49.762 --> 00:22:51.220
MARU AHUES: And
you can, of course,

00:22:51.220 --> 00:22:53.360
use that for authentication
and security.

00:22:53.360 --> 00:22:56.600
PENG YING: And if you want to
just test the discoverable,

00:22:56.600 --> 00:22:58.490
you can set the
discoverable status

00:22:58.490 --> 00:23:03.130
to draft, which will enforce the
white list of only the accounts

00:23:03.130 --> 00:23:05.250
that you've shared your
merchant account with.

00:23:05.250 --> 00:23:07.720
So in this case, we've
shared this merchant account

00:23:07.720 --> 00:23:09.636
with our test account,
gwallet.demo@gmail.com.

00:23:11.676 --> 00:23:13.050
MARU AHUES: So
once we have that,

00:23:13.050 --> 00:23:16.750
let's look at how we
can then take your Quick

00:23:16.750 --> 00:23:20.650
Start that you've already
had running locally

00:23:20.650 --> 00:23:23.082
to test your own discoverable.

00:23:23.082 --> 00:23:24.790
So we're going to
assume that, of course,

00:23:24.790 --> 00:23:26.200
you've created
your discoverable.

00:23:26.200 --> 00:23:29.010
And if you haven't, you can
go to the documentation,

00:23:29.010 --> 00:23:31.590
find information
on how to do that.

00:23:31.590 --> 00:23:39.640
And take your Quick
Start, and an easy way

00:23:39.640 --> 00:23:43.370
would be to go to
appspot.com and create your

00:23:43.370 --> 00:23:45.510
on App Engine site from here.

00:23:45.510 --> 00:23:47.110
So just create a
new application.

00:23:47.110 --> 00:23:48.960
Click on Create Application.

00:23:48.960 --> 00:23:51.870
And that's going to give
you an application ID.

00:23:51.870 --> 00:23:55.290
Once you do that, again,
going to the web.xml.

00:23:57.960 --> 00:23:59.187
PENG YING: Oh, it's app XML.

00:23:59.187 --> 00:24:00.520
MARU AHUES: Oh, not the web.xml.

00:24:00.520 --> 00:24:01.430
I'm sorry.

00:24:01.430 --> 00:24:07.060
Go into the appengine-web.xml
Thank you, Peng.

00:24:07.060 --> 00:24:11.140
And let me see where it is.

00:24:11.140 --> 00:24:14.160
PENG YING: It's at the
very top-- application.

00:24:14.160 --> 00:24:15.320
MARU AHUES: Here.

00:24:15.320 --> 00:24:18.000
So in here, let's say
that I'm using wobs-maru.

00:24:18.000 --> 00:24:21.310
Then I'll just put the
application name in there.

00:24:21.310 --> 00:24:25.110
Once I have that, then I can go
into my Google Eclipse Plugin

00:24:25.110 --> 00:24:30.060
here and click on
Deploy to App Engine.

00:24:30.060 --> 00:24:33.670
When I do that, you can
just click on Deploy.

00:24:36.560 --> 00:24:39.540
And that's going to take all
our code that we have locally

00:24:39.540 --> 00:24:41.160
and deploy to App Engine.

00:24:41.160 --> 00:24:46.240
So now you'll be able to
access the same site that we

00:24:46.240 --> 00:24:47.925
were running locally
on App Engine.

00:24:51.039 --> 00:24:52.330
PENG YING: Takes a few seconds.

00:24:55.359 --> 00:24:56.650
MARU AHUES: But it's very easy.

00:24:56.650 --> 00:24:58.230
It can't get any
easier than this.

00:24:58.230 --> 00:25:00.520
So once it's running
here, we should

00:25:00.520 --> 00:25:05.780
be able to go to
wobs-maru, and then I

00:25:05.780 --> 00:25:08.740
have here my Quick
Start running.

00:25:08.740 --> 00:25:10.650
It's going to take
a couple seconds,

00:25:10.650 --> 00:25:12.440
because it's still loading.

00:25:12.440 --> 00:25:13.920
Great.

00:25:13.920 --> 00:25:15.530
So now we have it running.

00:25:15.530 --> 00:25:20.510
So now, I use the URL
on my Merchant Callback

00:25:20.510 --> 00:25:23.360
Configuration, as I
showed you before.

00:25:23.360 --> 00:25:27.910
And this is how Peng was
testing using the application.

00:25:27.910 --> 00:25:30.480
So when he's doing a
request from the phone,

00:25:30.480 --> 00:25:35.020
that's hitting my web service
here at wobs-maru.appspot.com.

00:25:35.020 --> 00:25:38.630
And we're returning back
the object for that user.

00:25:38.630 --> 00:25:40.880
So let's see how this works.

00:25:40.880 --> 00:25:44.170
Let's look for web
service in the web.xml.

00:25:44.170 --> 00:25:47.990
And web service is mapped to
the WOB web service handler

00:25:47.990 --> 00:25:49.080
servlet.

00:25:49.080 --> 00:25:51.610
If we look at that,
at the servlet,

00:25:51.610 --> 00:25:54.370
we'll see that we are also
creating a WOB credentials

00:25:54.370 --> 00:25:57.960
object with the credentials
that we set for this project.

00:25:57.960 --> 00:26:01.070
We get the JSON
request from Google,

00:26:01.070 --> 00:26:04.170
and then we generate a response.

00:26:04.170 --> 00:26:08.740
The response will either be
an approved or a rejected

00:26:08.740 --> 00:26:09.360
response.

00:26:09.360 --> 00:26:11.960
In our testing, we
have it approved,

00:26:11.960 --> 00:26:16.110
but you can also uncomment
and send a rejected response.

00:26:16.110 --> 00:26:19.300
In here, we also, for
an approved response,

00:26:19.300 --> 00:26:22.400
we have to send back
the loyalty object,

00:26:22.400 --> 00:26:27.570
and we do that using the same
loyalty vertical class that we

00:26:27.570 --> 00:26:30.740
showed before when we were
creating the Save To Wallet

00:26:30.740 --> 00:26:31.840
object.

00:26:31.840 --> 00:26:36.440
Once we do that, we generate
the JWT with the response,

00:26:36.440 --> 00:26:38.350
and we send it back to Google.

00:26:38.350 --> 00:26:42.550
Google gets the response,
and then shows the object

00:26:42.550 --> 00:26:44.710
on the Google Wallet App.

00:26:44.710 --> 00:26:46.505
So that's it.

00:26:46.505 --> 00:26:47.630
PENG YING: Yeah, that's it.

00:26:47.630 --> 00:26:49.440
It's really easy.

00:26:49.440 --> 00:26:51.990
We hope that this has been
informative, and gets you up

00:26:51.990 --> 00:26:54.780
and started with the
Google Wallet Objects API

00:26:54.780 --> 00:26:56.500
as quickly as possible.

00:26:56.500 --> 00:26:58.890
This is just one more
video in a series

00:26:58.890 --> 00:27:01.900
of GDLs about the
Wallet Objects API.

00:27:01.900 --> 00:27:03.530
If you have
additional questions,

00:27:03.530 --> 00:27:06.850
or if you want to find out more,
stay tuned to Google Developers

00:27:06.850 --> 00:27:09.500
Live, or take a look
at our documentation.

00:27:09.500 --> 00:27:12.920
We'll have deeper dives into
all of the different aspects

00:27:12.920 --> 00:27:16.130
of Google Wallet Objects
within our series.

00:27:16.130 --> 00:27:18.617
And that concludes this
Google Developers Live.

00:27:18.617 --> 00:27:20.700
Thanks for tuning in, and
we'll see you next time.

00:27:20.700 --> 00:27:21.741
MARU AHUES: See you soon.

00:27:21.741 --> 00:27:23.370
Thank you.

