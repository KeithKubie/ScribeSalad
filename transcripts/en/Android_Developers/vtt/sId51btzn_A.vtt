WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.170
[MUSIC PLAYING]

00:00:02.170 --> 00:00:04.790
One word that's the bane of
both the novice and expert

00:00:04.790 --> 00:00:07.190
programmer alike: threads.

00:00:07.190 --> 00:00:09.860
I'm Joanna Smith and threading
can be one of the greatest

00:00:09.860 --> 00:00:12.240
perf improvements you make,
but it will also likely

00:00:12.240 --> 00:00:13.600
drive you crazy.

00:00:13.600 --> 00:00:16.340
Tom Sawyer illustrated threading
perfectly a long time ago

00:00:16.340 --> 00:00:17.990
when he needed to
paint that fence.

00:00:17.990 --> 00:00:20.390
Because when you've got a
large chunk of work to do

00:00:20.390 --> 00:00:22.310
and it's the same work
over and over again,

00:00:22.310 --> 00:00:24.110
you call on some friends
to get it done quickly.

00:00:24.110 --> 00:00:26.360
So for computations that
are taking a long time,

00:00:26.360 --> 00:00:28.680
consider calling in
reinforcements with threads.

00:00:28.680 --> 00:00:30.690
By allowing multiple
threads of execution

00:00:30.690 --> 00:00:32.850
to operate on your
data set in parallel,

00:00:32.850 --> 00:00:36.240
you reduce the overall time
required to complete the task.

00:00:36.240 --> 00:00:38.710
With Android, threading
becomes especially important

00:00:38.710 --> 00:00:41.200
because the entire app runs
on the main thread, which

00:00:41.200 --> 00:00:44.440
is also called the UI thread
because it updates the UI.

00:00:44.440 --> 00:00:46.090
And when the UI
stops responding,

00:00:46.090 --> 00:00:48.130
users stop using your app.

00:00:48.130 --> 00:00:50.920
So when you want to perform
some complex action in response

00:00:50.920 --> 00:00:52.710
to a button being
pushed, for example,

00:00:52.710 --> 00:00:54.820
you'll want to move
that off the main thread

00:00:54.820 --> 00:00:57.750
until it is finished so that the
user can continue to interact

00:00:57.750 --> 00:01:00.080
with your app, because
there are few things worse

00:01:00.080 --> 00:01:03.350
than the dreaded
"application not responding" dialog.

00:01:03.350 --> 00:01:05.500
However, integrating
threads into your system

00:01:05.500 --> 00:01:06.950
is not for the faint of heart.

00:01:06.950 --> 00:01:09.400
You're going to have to
rethink your entire approach

00:01:09.400 --> 00:01:12.160
to computational complexity
and to your memory model

00:01:12.160 --> 00:01:14.260
in order to properly
integrate threads.

00:01:14.260 --> 00:01:16.270
So to avoid the
rabbit hole, take

00:01:16.270 --> 00:01:17.870
advantage of the
Android framework

00:01:17.870 --> 00:01:19.590
which has been built
to help you out.

00:01:19.590 --> 00:01:21.970
Careful thought and planning
about your app structure

00:01:21.970 --> 00:01:23.720
and flow will enable
you to determine

00:01:23.720 --> 00:01:27.280
whether a thread should affect
the UI or be entirely hidden.

00:01:27.280 --> 00:01:29.900
APIs like AsyncTask and Thread
both help you manage the work

00:01:29.900 --> 00:01:31.381
and keep your app from hanging.

00:01:31.381 --> 00:01:32.902
But AsyncTask will
also allow you

00:01:32.902 --> 00:01:34.530
to affect the UI
like when you want

00:01:34.530 --> 00:01:35.932
to display a progress dialog.

00:01:35.932 --> 00:01:37.430
So take a walk
through your own app

00:01:37.430 --> 00:01:39.768
and see if there are places
where it stops responding

00:01:39.768 --> 00:01:42.350
or gets exceptionally slow
in response to a user action.

00:01:42.350 --> 00:01:45.290
And then, move all of that
extra work off the main thread,

00:01:45.290 --> 00:01:46.690
but, you know, thoughtfully.

00:01:46.690 --> 00:01:48.460
Don't just change
things willy-nilly.

00:01:48.460 --> 00:01:50.420
Because while threading
may be intimidating,

00:01:50.420 --> 00:01:51.534
it shouldn't scare you.

00:01:51.534 --> 00:01:53.900
What is scary though is bad
performance, which is why you

00:01:53.900 --> 00:01:55.720
should check out the rest of
our Android Performance Patterns

00:01:55.720 --> 00:01:58.320
content and consider joining
our G+ community for tips,

00:01:58.320 --> 00:01:59.140
tricks, and help.

00:01:59.140 --> 00:02:01.760
But most importantly, keep
calm, profile your code

00:02:01.760 --> 00:02:04.550
and always remember,
perf matters!

00:02:04.550 --> 00:02:09.408
[MUSIC PLAYING]

