WEBVTT
Kind: captions
Language: en

00:00:01.234 --> 00:00:02.501
Onorato: I'm Joe Onorato.
This is Romain Guy.

00:00:02.501 --> 00:00:06.434
We're both framework engineers
on the Android team.

00:00:06.434 --> 00:00:09.234
We're gonna talk about
supporting multiple devices.

00:00:09.234 --> 00:00:10.601
Guy: But not quite.
Onorato: But not quite.

00:00:10.601 --> 00:00:13.400
Well, if the code's gonna run
on more than one device,

00:00:13.400 --> 00:00:16.367
we've got some--well, we're
gonna do it on the emulator.

00:00:16.367 --> 00:00:19.167
And the reason
I sort of didn't want

00:00:19.167 --> 00:00:22.133
to talk too much
about multiple devices

00:00:22.133 --> 00:00:25.267
is all the devices we have now
are pretty much the same.

00:00:25.267 --> 00:00:26.601
There's--

00:00:26.601 --> 00:00:28.234
Guy: I also didn't really
know the subject, so.

00:00:28.234 --> 00:00:29.234
Onorato: Well, that too.

00:00:29.234 --> 00:00:31.100
[laughter]

00:00:31.100 --> 00:00:32.501
So it's--

00:00:32.501 --> 00:00:35.767
There's the Dre--the G1.

00:00:35.767 --> 00:00:37.234
I'll probably call it
the Dream at some point.

00:00:37.234 --> 00:00:38.334
Guy: That's okay,
you can call it the Dream.

00:00:38.334 --> 00:00:39.467
Onorato: We're used to that.

00:00:39.467 --> 00:00:40.834
Then there's the Ion,
or the Magic,

00:00:40.834 --> 00:00:41.834
or whatever
we're calling that,

00:00:41.834 --> 00:00:43.767
and, um...

00:00:43.767 --> 00:00:47.133
they're almost identical
in terms of hardware.

00:00:47.133 --> 00:00:50.534
One has a keyboard, obviously,
but other than that,

00:00:50.534 --> 00:00:51.767
the screen size
is the same.

00:00:51.767 --> 00:00:52.767
That's far and away
the hardest thing

00:00:52.767 --> 00:00:53.934
that you guys
have to deal with.

00:00:53.934 --> 00:00:56.334
Guy: The same physical
screen size and physi--

00:00:56.334 --> 00:00:58.434
resolution and same density,
so the same screen.

00:00:58.434 --> 00:01:02.100
Onorato: Same part number
for the screen, so.

00:01:02.100 --> 00:01:03.868
Okay.

00:01:03.868 --> 00:01:08.200
Oh, I'm supposed to say that if
you want to provide feedback--

00:01:08.200 --> 00:01:11.100
Or please provide feedback
on this presentation

00:01:11.100 --> 00:01:13.701
at haveasec.com/IO.

00:01:13.701 --> 00:01:16.267
Guy: And I was supposed to say
that for my previous session,

00:01:16.267 --> 00:01:18.033
so now you know.

00:01:18.033 --> 00:01:20.200
[laughter]

00:01:20.200 --> 00:01:21.634
Onorato: How many of you--

00:01:21.634 --> 00:01:24.200
How many of you guys came
from Romain's previous--oh, God.

00:01:24.200 --> 00:01:26.100
Okay.
[laughter]

00:01:26.100 --> 00:01:29.834
Well, good--
good plugging, I guess.

00:01:29.834 --> 00:01:33.467
All right, so our motto
is "write once."

00:01:33.467 --> 00:01:35.534
No, that's not.

00:01:35.534 --> 00:01:38.767
But we do have--

00:01:38.767 --> 00:01:40.067
We do want you to not
have to write

00:01:40.067 --> 00:01:43.567
a different version of your app
for every single thing.

00:01:43.567 --> 00:01:46.968
Guy: Except we don't promise
that you will have nothing to do

00:01:46.968 --> 00:01:49.133
to make your app work
across the bases.

00:01:49.133 --> 00:01:50.334
You can write it once,

00:01:50.334 --> 00:01:53.000
but you might have
more work the first time.

00:01:53.000 --> 00:01:54.968
Onorato: In fact,
right now the market--

00:01:54.968 --> 00:01:58.100
You can actually load--
upload one copy of your app,

00:01:58.100 --> 00:01:59.567
so you actually do
have to have it working

00:01:59.567 --> 00:02:02.567
with one binary
for the whole--whole world.

00:02:02.567 --> 00:02:04.601
But I know
they're working on that too.

00:02:04.601 --> 00:02:07.234
So here's some--

00:02:07.234 --> 00:02:09.167
some of the things
you have to worry about.

00:02:09.167 --> 00:02:12.200
There's OS versions 1.0, 1.1, 

00:02:12.200 --> 00:02:14.534
it's on there,
Cupcake, Donut, so.

00:02:14.534 --> 00:02:17.367
I think we let it loose that
it's called Eclair last night.

00:02:17.367 --> 00:02:19.534
Guy: Not just last night.
It's public.

00:02:19.534 --> 00:02:21.133
Do you guys know
what Eclair is?

00:02:21.133 --> 00:02:22.334
Onorato: It's E.

00:02:22.334 --> 00:02:24.234
Guy: I'm not talking
about the pastry.

00:02:24.234 --> 00:02:25.601
Okay, good.

00:02:25.601 --> 00:02:27.000
Onorato: They had eclairs
at the party last night too.

00:02:27.000 --> 00:02:28.667
So I think that
that gave it away too.

00:02:28.667 --> 00:02:29.934
The...

00:02:29.934 --> 00:02:32.734
So there's Donut,
and luckily most people--

00:02:32.734 --> 00:02:34.200
All the devices,
as far as I know of,

00:02:34.200 --> 00:02:35.767
are getting
updated to cupcake.

00:02:35.767 --> 00:02:37.901
So we don't have
too much of this

00:02:37.901 --> 00:02:41.033
multiple version thing
to worry about yet,

00:02:41.033 --> 00:02:44.467
but this is the mobile industry;
the phones don't last forever.

00:02:44.467 --> 00:02:46.534
So at some point people
will have old versions.

00:02:46.534 --> 00:02:47.767
Guy: Well, and let's
admit it.

00:02:47.767 --> 00:02:49.968
You like to change phones
every now and then.

00:02:49.968 --> 00:02:52.133
Onorato: You know, I have one
every, like, two months or so.

00:02:52.133 --> 00:02:55.567
Then I drop it
or break it or something.

00:02:55.567 --> 00:02:57.601
Guy: Yeah, you drop it.

00:02:57.601 --> 00:02:59.901
Onorato: Drop it.

00:02:59.901 --> 00:03:01.133
Cupc--

00:03:01.133 --> 00:03:03.601
Okay, so the other thing
we have is configuration.

00:03:03.601 --> 00:03:04.601
So there's--

00:03:04.601 --> 00:03:06.167
Let me get the--

00:03:06.167 --> 00:03:09.634
There's locales, orientations,
which operator--that's carrier.

00:03:09.634 --> 00:03:10.968
A lot of other stuff.

00:03:10.968 --> 00:03:12.701
Guy: Actually, we have
good documentation on that.

00:03:12.701 --> 00:03:13.801
Onorato: We do, actually.

00:03:13.801 --> 00:03:15.033
That's the other reason

00:03:15.033 --> 00:03:16.267
I didn't want to talk
too much about this.

00:03:16.267 --> 00:03:18.634
Because the docs on this
are actually pretty good.

00:03:18.634 --> 00:03:20.200
I have a slide
for that later, so.

00:03:20.200 --> 00:03:24.300
As the URL.

00:03:24.300 --> 00:03:26.934
You know, these animations
are, like, killer.

00:03:26.934 --> 00:03:29.501
Guy: Powerpoint.

00:03:29.501 --> 00:03:31.033
Onorato: So this is
configuration object.

00:03:31.033 --> 00:03:36.000
It's "android.content.
res.configuration"

00:03:36.000 --> 00:03:37.367
in the docs.

00:03:37.367 --> 00:03:41.200
And it's got these
different parameters here.

00:03:41.200 --> 00:03:43.033
These are the--

00:03:43.033 --> 00:03:45.601
I'm not gonna read them all,
but you can--

00:03:45.601 --> 00:03:48.033
you can see them whether
it's a portrait, or a landscape,

00:03:48.033 --> 00:03:50.200
or just density of the screen;
we'll get to density.

00:03:50.200 --> 00:03:51.501
Guy: Yes, basically
what you see here

00:03:51.501 --> 00:03:53.133
like the values on the right,
yeah, like you said,

00:03:53.133 --> 00:03:56.133
it's for the G1, but that should
give you a fair--

00:03:56.133 --> 00:03:57.334
a fairly good idea
of, you know,

00:03:57.334 --> 00:03:58.467
the kind of things
that might change

00:03:58.467 --> 00:03:59.868
from one device
to the other.

00:03:59.868 --> 00:04:01.868
So you know,
obviously maybe you don't care,

00:04:01.868 --> 00:04:03.100
but when another keyboard
is visible

00:04:03.100 --> 00:04:04.701
when you want
to display button on screen,

00:04:04.701 --> 00:04:07.667
but then maybe
the resolution will matter.

00:04:07.667 --> 00:04:08.934
Onorato: Might need
to make a smaller button.

00:04:08.934 --> 00:04:09.934
Guy: Yeah.
Onorato: Or a bigger button.

00:04:09.934 --> 00:04:11.834
Guy: It depends
on your app.

00:04:11.834 --> 00:04:16.501
And we're gonna focus primarily
on density and screen resolution

00:04:16.501 --> 00:04:18.968
'cause those are the ones
we think that, you know,

00:04:18.968 --> 00:04:21.868
will be the most difficult
for you guys to handle.

00:04:21.868 --> 00:04:25.968
Onorato: Yeah,
so for the stuff like locale,

00:04:25.968 --> 00:04:27.534
just read the docs;
it's in there.

00:04:27.534 --> 00:04:29.133
And I have a URL
for that later.

00:04:29.133 --> 00:04:32.367
All right, so this is the app
that we're gonna work with.

00:04:32.367 --> 00:04:34.534
Looks kind of like
the launcher.

00:04:34.534 --> 00:04:35.667
It's based on the code
that Romain had--

00:04:35.667 --> 00:04:37.767
Guy: It's a very
useful app.

00:04:37.767 --> 00:04:41.267
Onorato: Well, it has
little bug droids on there.

00:04:41.267 --> 00:04:43.067
All right, so this
is running in HVGA.

00:04:43.067 --> 00:04:45.033
That's 320x480.

00:04:45.033 --> 00:04:46.767
Guy: So that's G1.
Onorato: This is what G1 is.

00:04:46.767 --> 00:04:50.968
Guy: On the phone
that you got yesterday.

00:04:50.968 --> 00:04:54.734
Onorato: And so what if
it ran on a QVG device?

00:04:54.734 --> 00:04:56.601
That's...

00:04:56.601 --> 00:04:59.400
Oh, AbsoluteLayout.
Okay.

00:04:59.400 --> 00:05:02.000
You could've written that
with AbsoluteLayout.

00:05:02.000 --> 00:05:03.501
I don't even know why
we have AbsoluteLayout--

00:05:03.501 --> 00:05:06.267
Guy: But if you do that,
I'm gonna hurt you, so don't.

00:05:06.267 --> 00:05:07.801
[laughter]

00:05:07.801 --> 00:05:09.334
Onorato: The worst part
about it, though,

00:05:09.334 --> 00:05:11.501
is that it's got this--if you
see down there at the bottom,

00:05:11.501 --> 00:05:15.834
you have to list the position
of every single view.

00:05:15.834 --> 00:05:17.767
So that's tedious, right?

00:05:17.767 --> 00:05:21.834
For this view here, that's--
what is that--

00:05:21.834 --> 00:05:23.334
12 different coordinates
you have to come up

00:05:23.334 --> 00:05:25.567
just for that one thing.

00:05:25.567 --> 00:05:28.300
This file's
sort of annoying to write.

00:05:28.300 --> 00:05:30.000
All right, so this is what
it would look like with QVGA

00:05:30.000 --> 00:05:32.534
if you used
AbsoluteLayout.

00:05:32.534 --> 00:05:34.567
You can see that we're
missing one of them.

00:05:34.567 --> 00:05:35.767
So that's pretty much
what we're gonna talk about

00:05:35.767 --> 00:05:37.801
is how to write--
how to write this view,

00:05:37.801 --> 00:05:40.634
and have all of your
bug droids show up.

00:05:40.634 --> 00:05:41.734
Guy: Yeah, how to
do it correctly.

00:05:41.734 --> 00:05:45.400
Onorato: How to
do it correctly.

00:05:45.400 --> 00:05:48.567
Another thing.

00:05:48.567 --> 00:05:50.801
For Donut,
one of the--

00:05:50.801 --> 00:05:52.067
Well, for Donut
we're gonna be

00:05:52.067 --> 00:05:55.400
supporting three different
screen resolutions.

00:05:55.400 --> 00:05:57.234
Guy: Well, we haven't
decided yet.

00:05:57.234 --> 00:05:58.234
Let's say densities.

00:05:58.234 --> 00:05:59.534
Onorato: Densities. Okay.

00:05:59.534 --> 00:06:01.400
But for all these,
the screen is gonna be

00:06:01.400 --> 00:06:02.567
about the same
physical size,

00:06:02.567 --> 00:06:03.667
so we're not gonna--

00:06:03.667 --> 00:06:06.701
If we have a WVGA device
that's 480x800,

00:06:06.701 --> 00:06:08.467
it's, you know, gonna be
about this big still.

00:06:08.467 --> 00:06:11.167
It might be--it'll be prettier
because it's got more pixels,

00:06:11.167 --> 00:06:14.133
but it's--it's not
gonna be this big.

00:06:14.133 --> 00:06:16.133
So if you use
that AbsoluteLayout,

00:06:16.133 --> 00:06:18.567
what you'd see
is tiny, little ones

00:06:18.567 --> 00:06:20.801
that might be too small
to hit with your finger.

00:06:20.801 --> 00:06:22.467
And they didn't
wrap correctly, either.

00:06:22.467 --> 00:06:25.200
Guy: Yeah, and if you
use a QVGA device,

00:06:25.200 --> 00:06:27.434
then you have
the opposite problem

00:06:27.434 --> 00:06:29.334
where everything
is too big.

00:06:29.334 --> 00:06:31.834
So if you think the buttons
are too big already on the G1,

00:06:31.834 --> 00:06:34.434
wait till you try that
on a QVGA device--

00:06:34.434 --> 00:06:37.667
Onorato: You get
two emails per screen, yeah.

00:06:37.667 --> 00:06:43.167
Guy: So screen density is--
is a complex issue.

00:06:43.167 --> 00:06:45.200
And actually in the framework,
we built a bunch of things

00:06:45.200 --> 00:06:46.667
to help you
deal with that.

00:06:46.667 --> 00:06:50.000
You probably already encountered
something called DIPs

00:06:50.000 --> 00:06:51.300
that we're gonna
talk about.

00:06:51.300 --> 00:06:54.701
The DIPs are--are our special
way to define pixels

00:06:54.701 --> 00:06:58.968
that will scale correctly
across all the densities,

00:06:58.968 --> 00:07:00.634
and everything will
look the same size--

00:07:00.634 --> 00:07:04.200
the same physical size,
across the devices.

00:07:04.200 --> 00:07:05.734
But let's get going.

00:07:05.734 --> 00:07:08.067
Onorato: All right.
Absolutely, that sucks, okay.

00:07:08.067 --> 00:07:09.667
Guy: Yeah, and actually you
can't really use AbsoluteLayout

00:07:09.667 --> 00:07:13.601
anymore 'cause
I duplicated it in Cupcake,

00:07:13.601 --> 00:07:16.467
and people already
hate me for that.

00:07:16.467 --> 00:07:20.300
The layout will not disappear,
so you can keep using it,

00:07:20.300 --> 00:07:24.934
but it's there to show you that
it's probably not what you want.

00:07:24.934 --> 00:07:26.234
Onorato: All right.

00:07:26.234 --> 00:07:28.067
So Romain talked a bit
in his last talk

00:07:28.067 --> 00:07:29.968
about writing a custom--
custom view.

00:07:29.968 --> 00:07:31.334
He called it
custom view layout.

00:07:31.334 --> 00:07:32.534
Or what did you call it?

00:07:32.534 --> 00:07:34.167
Guy: Custom view,
and then custom ViewGroup.

00:07:34.167 --> 00:07:35.567
So here it's
a custom ViewGroup.

00:07:35.567 --> 00:07:36.634
Onorato: This is actually
gonna be a custom ViewGroup.

00:07:36.634 --> 00:07:37.834
Guy: Or custom layout.

00:07:37.834 --> 00:07:39.200
Onorato: They're all
subclasses of views,

00:07:39.200 --> 00:07:40.968
so what are you
gonna do?

00:07:40.968 --> 00:07:42.868
All right,
these are the links.

00:07:42.868 --> 00:07:44.667
These are all on
developer.android.com,

00:07:44.667 --> 00:07:48.834
which is the homepage
for all the developer--

00:07:48.834 --> 00:07:51.434
all the SDK docs
and stuff.

00:07:51.434 --> 00:07:53.501
And you have a pretty much
complete copy of that

00:07:53.501 --> 00:07:55.767
in the SDK itself, too, so if
you're on a plane or something

00:07:55.767 --> 00:07:56.834
it still works.

00:07:56.834 --> 00:07:59.000
Guy: And also
if you look, we did--

00:07:59.000 --> 00:08:01.133
sometimes we do write
good documentation.

00:08:01.133 --> 00:08:03.934
So if you look at the Java doc
for the view class,

00:08:03.934 --> 00:08:07.200
there's actually a huge block
of text at the beginning,

00:08:07.200 --> 00:08:12.100
and it explains many things
about layouts and custom views.

00:08:12.100 --> 00:08:14.868
But apparently people
ignore that kind of stuff.

00:08:14.868 --> 00:08:17.868
So that's why we have our docs.
Onorato: But it is there, yeah.

00:08:17.868 --> 00:08:21.467
All right, so...

00:08:21.467 --> 00:08:25.033
All right, so we're gonna
go and write our custom view.

00:08:25.033 --> 00:08:26.701
Four things we're
gonna worry about.

00:08:26.701 --> 00:08:28.000
The first thing,

00:08:28.000 --> 00:08:30.501
we got to figure out
how big our view wants to be.

00:08:30.501 --> 00:08:34.167
How big it's gonna tell
its parent that it wants to be.

00:08:34.167 --> 00:08:37.234
Although its parent
is free to ignore that.

00:08:37.234 --> 00:08:40.167
Guy: Yeah, often they do.
Onorato: Often they do.

00:08:40.167 --> 00:08:41.767
The lay--Then we're gonna
do the layout,

00:08:41.767 --> 00:08:43.334
and the first iteration here
we're actually gonna

00:08:43.334 --> 00:08:45.234
ignore what our children said
and just do what we want,

00:08:45.234 --> 00:08:47.734
which is valid.

00:08:47.734 --> 00:08:49.734
Then there's units,
and the last thing,

00:08:49.734 --> 00:08:53.100
we want to make sure that you
guys can use your view--

00:08:53.100 --> 00:08:55.834
this custom view
from an XML file.

00:08:55.834 --> 00:08:57.234
It's not hard,

00:08:57.234 --> 00:08:58.834
it's actually less lines of code
than I thought it was.

00:08:58.834 --> 00:09:00.334
Guy: It's not hard,
you just--It's--

00:09:00.334 --> 00:09:01.734
Onorato: It's just
ten lines of code

00:09:01.734 --> 00:09:02.934
that you have to know
what they are.

00:09:02.934 --> 00:09:04.434
Guy: They're confusing.

00:09:04.434 --> 00:09:07.234
Even, you know, ourselves, like,
we can't remember what they are,

00:09:07.234 --> 00:09:09.734
and we always have to
look at samples that we wrote.

00:09:09.734 --> 00:09:11.934
Onorato: But luckily now we can
watch the YouTube video of it.

00:09:11.934 --> 00:09:14.834
Guy: Yeah, or other sites.

00:09:14.834 --> 00:09:17.200
Onorato: Okay,
let's talk about units.

00:09:17.200 --> 00:09:18.434
Actually, no, let's not
talk about units.

00:09:18.434 --> 00:09:19.601
Let's write the code.

00:09:19.601 --> 00:09:21.567
Guy: Yeah, units are boring.
Onorato: Okay.

00:09:21.567 --> 00:09:24.167
All right.

00:09:24.167 --> 00:09:27.567
So first thing we're gonna do--
I've got my little script here--

00:09:27.567 --> 00:09:32.934
is go into our SDK folder,
which is--

00:09:32.934 --> 00:09:34.868
it's one on my desktop
right here.

00:09:34.868 --> 00:09:38.200
And create the project...

00:09:38.200 --> 00:09:41.033
Guy: So we're gonna take you
through the different steps

00:09:41.033 --> 00:09:44.968
of creating a new layout, and
we'll start with the--you know,

00:09:44.968 --> 00:09:49.067
The basic, dumb layout,
and we'll iterate on that

00:09:49.067 --> 00:09:51.033
until we get something
that actually works

00:09:51.033 --> 00:09:53.901
and that can be reused,
and that works across devices.

00:09:53.901 --> 00:09:57.000
And at the end we're gonna
submit that

00:09:57.000 --> 00:09:58.767
to the Android
open source project,

00:09:58.767 --> 00:10:01.834
and we're gonna commit it
in the actual source code base.

00:10:01.834 --> 00:10:03.567
So you can see
how it's done,

00:10:03.567 --> 00:10:05.934
and also see
what kind of stuff you have

00:10:05.934 --> 00:10:08.334
to do--if you ever want to, you
know,

00:10:08.334 --> 00:10:09.834
commit code that ends up
in your project,

00:10:09.834 --> 00:10:12.701
like, shat kind of things
you have to support.

00:10:12.701 --> 00:10:14.701
Onorato: So, uh...

00:10:14.701 --> 00:10:19.267
It didn't work.
Perfect.

00:10:19.267 --> 00:10:20.501
Guy: [clicks tongue]

00:10:20.501 --> 00:10:21.734
Onorato: "-Target."

00:10:21.734 --> 00:10:23.434
Is it working?
audience member: Can't see.

00:10:23.434 --> 00:10:24.601
Onorato: You can't see that?

00:10:24.601 --> 00:10:26.667
Is it too low
or is it too small?

00:10:26.667 --> 00:10:28.000
Guy: Too low.

00:10:28.000 --> 00:10:31.167
Onorato: How's that?

00:10:31.167 --> 00:10:34.567
There we go. Okay.
We created our file.

00:10:34.567 --> 00:10:37.400
So we're gonna go in there.
That's back here.

00:10:37.400 --> 00:10:40.501
I'll move that
up for you.

00:10:40.501 --> 00:10:42.300
All right, do you want
to talk while I'm typing?

00:10:42.300 --> 00:10:43.300
Guy: Yeah.
Onorato: Okay.

00:10:43.300 --> 00:10:45.167
Guy: So yeah, so Joe--

00:10:45.167 --> 00:10:48.400
I don't know if you've used
the Generate 1.5 SDK

00:10:48.400 --> 00:10:50.100
You probably used the Eclipse
plug-in 'cause, you know,

00:10:50.100 --> 00:10:52.734
it's easy, it's shiny,
you click buttons and stuff.

00:10:52.734 --> 00:10:55.400
But Joe just created the project
from the comment line,

00:10:55.400 --> 00:10:57.334
so we have
this historical Android,

00:10:57.334 --> 00:10:59.834
a simple executable that will
generate the project for you.

00:10:59.834 --> 00:11:02.734
Or the directories,
the ant build file,

00:11:02.734 --> 00:11:07.767
uh, the Manifest, and even,
I think, a couple of Java files.

00:11:07.767 --> 00:11:10.834
So now that we have
the project created,

00:11:10.834 --> 00:11:14.534
we can, you know, go ahead
and just add back ant install

00:11:14.534 --> 00:11:17.400
or entry install and it's gonna
compile the project,

00:11:17.400 --> 00:11:20.667
ship it to whatever device you
have connected to the computer.

00:11:20.667 --> 00:11:23.167
And when I say device,
it can also be the emulator.

00:11:23.167 --> 00:11:25.367
Like anything we do,
it's the same

00:11:25.367 --> 00:11:28.100
for the actual physical phones
and the emulator.

00:11:28.100 --> 00:11:29.434
Onorato: So I just started
the emulator, here.

00:11:29.434 --> 00:11:31.601
Guy: So we're starting
the emulator.

00:11:31.601 --> 00:11:33.701
And hopefully it's not
gonna take too long.

00:11:33.701 --> 00:11:39.000
'Cause we have
nice machines at Google.

00:11:39.000 --> 00:11:41.334
Next time start it
before the talk.

00:11:41.334 --> 00:11:42.767
Onorato: I know, I meant to.
Sorry.

00:11:42.767 --> 00:11:45.934
And once--See, the command here
is "ant reinstall."

00:11:45.934 --> 00:11:47.000
I don't know why
it's reinstall.

00:11:47.000 --> 00:11:49.601
Guy: It is reinstall
because--

00:11:49.601 --> 00:11:51.467
Okay, there's a difference
between installing the APK

00:11:51.467 --> 00:11:52.934
and reinstalling it.

00:11:52.934 --> 00:11:55.300
If you try to install an APK
that's already on the phone

00:11:55.300 --> 00:11:58.534
it's gonna fail, so you have to
use a flag called -r

00:11:58.534 --> 00:12:01.067
if you use the ADB install
command and reinstall.

00:12:01.067 --> 00:12:02.534
Make sure that
even if the application

00:12:02.534 --> 00:12:05.834
is already on the phone,
the install will work.

00:12:05.834 --> 00:12:09.167
Usually when you're in Eclipse
and you click the "Run" button,

00:12:09.167 --> 00:12:10.801
that's actually
what Eclipse does.

00:12:10.801 --> 00:12:15.734
It trans--it's reinstall command
behind the scene.

00:12:17.133 --> 00:12:19.067
Onorato: All right,
well, I was gonna run

00:12:19.067 --> 00:12:22.000
the project we just created, but
it's taking its time to boot up.

00:12:22.000 --> 00:12:25.267
So it's the hello world one that
you guys have probably all seen.

00:12:25.267 --> 00:12:26.567
Guy: Yeah, let's go
to next step.

00:12:26.567 --> 00:12:28.834
Onorato: Yeah, let's just
go to the next step.

00:12:28.834 --> 00:12:33.067
I'm gonna get--I'm gonna
open up my file, here.

00:12:33.067 --> 00:12:36.100
This is the image.
Our little, like, bug droid guy.

00:12:36.100 --> 00:12:41.267
And I'm gonna copy that
as "drawable."

00:12:41.267 --> 00:12:46.400
Copy that
into my "drawable."

00:12:48.634 --> 00:12:50.167
Into there.

00:12:50.167 --> 00:12:52.033
And...

00:12:52.033 --> 00:12:54.467
Same thing with the...

00:12:54.467 --> 00:13:00.467
XML layout file.

00:13:02.334 --> 00:13:05.801
So you guys have seen this,
probably from the GUI, there.

00:13:05.801 --> 00:13:09.400
Let's open that up now.

00:13:09.400 --> 00:13:11.501
And for this--
just to get started,

00:13:11.501 --> 00:13:13.734
I always like to start
with just a, you know,

00:13:13.734 --> 00:13:15.033
some simple layout
that's already there.

00:13:15.033 --> 00:13:16.567
So we picked
linear layout.

00:13:16.567 --> 00:13:17.901
It's got these...

00:13:17.901 --> 00:13:19.734
Should be up
by now. Good.

00:13:19.734 --> 00:13:25.734
We can run it,
so let's ant reinstall.

00:13:25.734 --> 00:13:27.100
It's compiling it.

00:13:27.100 --> 00:13:29.567
And it wor--failed.

00:13:29.567 --> 00:13:31.701
Guy: Device not found.
Interesting.

00:13:31.701 --> 00:13:33.834
Try again.
Onorato: Perfect.

00:13:33.834 --> 00:13:39.100
Oh, you know what,
let's do...

00:13:39.100 --> 00:13:41.400
Guy: Yeah, that always works.
Onorato: This always happens.

00:13:41.400 --> 00:13:45.200
I don't know why ADB doesn't
work, but it doesn't, so.

00:13:45.200 --> 00:13:48.033
Let's--let's kill
the server.

00:13:48.033 --> 00:13:50.634
Guy: But you--At least you
get to learn, you know, how--

00:13:50.634 --> 00:13:52.033
Onorato: This is my life.

00:13:52.033 --> 00:13:54.801
Guy: Yeah, this is actually how
we do things on the Android team

00:13:54.801 --> 00:13:58.701
'cause we don't have the luxury
of using the Eclipse plug-in.

00:13:58.701 --> 00:14:00.467
Pardon me?
audience member: [indistinct]

00:14:00.467 --> 00:14:02.367
Onorato: That's what I'm doing.
Oh, there we go. Kill all ADB.

00:14:02.367 --> 00:14:06.868
Guy: Or ADB kill-server.
Your best friend.

00:14:06.868 --> 00:14:08.601
So, yeah, I was saying,
we don't have the--

00:14:08.601 --> 00:14:09.968
you know,
the fancy Eclipse plug-in,

00:14:09.968 --> 00:14:12.000
and I'm always jealous
of you guys whenever, you know,

00:14:12.000 --> 00:14:13.434
I see a demo
of the Eclipse plug-in

00:14:13.434 --> 00:14:15.634
'cause it's so easy.

00:14:15.634 --> 00:14:19.100
And we have to do all that crap
in the command line.

00:14:19.100 --> 00:14:21.367
But it works.
Onorato: Okay.

00:14:21.367 --> 00:14:23.300
Should be here now.

00:14:23.300 --> 00:14:24.400
Guy: Yay.

00:14:24.400 --> 00:14:26.701
Onorato: Let's put it
on our desktop.

00:14:26.701 --> 00:14:28.801
There it is.
They're in a row. All right.

00:14:28.801 --> 00:14:31.534
That took a while, but...

00:14:31.534 --> 00:14:34.334
Okay, so the next--
the next thing--

00:14:34.334 --> 00:14:36.767
Guy: You wanted a grid,
not a column.

00:14:36.767 --> 00:14:38.501
Onorato: Yeah, we want a grid.

00:14:38.501 --> 00:14:40.100
So let me--

00:14:40.100 --> 00:14:45.834
Let me copy
that other file over.

00:14:47.367 --> 00:14:48.701
Guy: Now you get to
see the code.

00:14:48.701 --> 00:14:50.167
Onorato: Yeah, now you get
to see the code.

00:14:50.167 --> 00:14:53.200
That was--Maybe we should've
done that beforehand. Sorry.

00:14:53.200 --> 00:14:55.100
We wanted to show you the--
sort of the whole step.

00:14:55.100 --> 00:14:57.734
I mean,
it's a little boring, but...

00:14:57.734 --> 00:14:59.100
All right,
here's the view.

00:14:59.100 --> 00:15:01.133
Guy: Feel our pain,
damn it.

00:15:01.133 --> 00:15:02.467
Onorato: You want
to talk about these?

00:15:02.467 --> 00:15:04.667
Guy: Yeah, so that's--
for those of you

00:15:04.667 --> 00:15:06.701
who were
at the previous session,

00:15:06.701 --> 00:15:09.534
this is, like,
how you create a layout.

00:15:09.534 --> 00:15:11.467
So you extend
the ViewGroup class.

00:15:11.467 --> 00:15:14.434
So for some weird reason--
it's probably his fault--

00:15:14.434 --> 00:15:15.934
we have this
classical ViewGroup,

00:15:15.934 --> 00:15:18.133
and the children--I mean,
the subclasses of ViewGroup

00:15:18.133 --> 00:15:21.100
are called BlahLayout.

00:15:21.100 --> 00:15:25.234
That makes no sense at all,
but that's how it is.

00:15:25.234 --> 00:15:26.634
So you extend
the ViewGroup class

00:15:26.634 --> 00:15:28.300
when you want to create
your layout class--

00:15:28.300 --> 00:15:29.501
Onorato: That is actually
my fault. Yeah, sorry.

00:15:29.501 --> 00:15:31.300
Guy: Yeah, I'm pretty
sure it is.

00:15:31.300 --> 00:15:33.767
[laughter]

00:15:33.767 --> 00:15:36.834
And you need at least
two constructors

00:15:36.834 --> 00:15:38.767
if you want to use
the layout from XML.

00:15:38.767 --> 00:15:41.234
Which is what we want
'cause we all love XML.

00:15:41.234 --> 00:15:42.734
It's so easy and nice.

00:15:42.734 --> 00:15:44.767
The first constructor
is the one you have to use

00:15:44.767 --> 00:15:47.968
when you want to instantiate
a view or ViewGroup from code.

00:15:47.968 --> 00:15:49.367
But we don't care about that.
Like, you know.

00:15:49.367 --> 00:15:51.901
Writing code for UI is bad;
we want everything in XML

00:15:51.901 --> 00:15:54.868
because from XML we can support
different configurations.

00:15:54.868 --> 00:15:57.467
And, you know, if you don't know
what I'm talking about,

00:15:57.467 --> 00:16:01.267
refer to the documentation to
the links that Joe talked about.

00:16:01.267 --> 00:16:04.534
So the constructor that you're
interested in is the second one.

00:16:04.534 --> 00:16:07.701
So you have a second parameter
called the attribute set,

00:16:07.701 --> 00:16:10.834
and it's basically
just a big bag of values

00:16:10.834 --> 00:16:12.801
that come from XML.

00:16:12.801 --> 00:16:15.000
So later we're gonna
use those attributes

00:16:15.000 --> 00:16:18.300
to extract the information
we want from the XML file.

00:16:18.300 --> 00:16:19.567
Right now we're gonna,
you know,

00:16:19.567 --> 00:16:21.167
keep using the attributes
from the parent class,

00:16:21.167 --> 00:16:24.033
so we have nothing to do,
which is always nice.

00:16:24.033 --> 00:16:26.634
And that fixed grid layout
is pretty dumb.

00:16:26.634 --> 00:16:30.100
You have to specify the width
and the height of each cell,

00:16:30.100 --> 00:16:31.834
and we're gonna
force the children

00:16:31.834 --> 00:16:33.801
to have those
dimensions.

00:16:33.801 --> 00:16:35.000
So here you have
two methods.

00:16:35.000 --> 00:16:37.100
Set cell width,
and set cell height.

00:16:37.100 --> 00:16:39.667
You specify the dimension pixel,
and you can see that we have

00:16:39.667 --> 00:16:41.767
this request layout call.

00:16:41.767 --> 00:16:45.200
So whenever you change
the size of the cells,

00:16:45.200 --> 00:16:47.534
we want the screen
to be refreshed

00:16:47.534 --> 00:16:49.634
so we call a request layout
that will trigger

00:16:49.634 --> 00:16:51.400
a re-layout
of the whole screen,

00:16:51.400 --> 00:16:53.267
and of that layout
in particular.

00:16:53.267 --> 00:16:56.934
And if we scroll down,
we have--

00:16:56.934 --> 00:16:58.634
We have the fun part.

00:16:58.634 --> 00:16:59.934
So onMeasure--

00:16:59.934 --> 00:17:02.868
We said before that before you
want to do a layout,

00:17:02.868 --> 00:17:04.300
you have to measure
the children

00:17:04.300 --> 00:17:06.934
because you want to know
how big they want to be.

00:17:06.934 --> 00:17:09.000
It can actually matter.

00:17:09.000 --> 00:17:11.400
In that case, you can see
the middle with the loop

00:17:11.400 --> 00:17:12.901
that go through
all the children

00:17:12.901 --> 00:17:14.667
and call measure
on the children.

00:17:14.667 --> 00:17:17.000
So we--we--
So we said that before.

00:17:17.000 --> 00:17:19.734
Then at the end
we have the usual

00:17:19.734 --> 00:17:22.934
setMeasuredDimension
that tells our parents

00:17:22.934 --> 00:17:24.634
how big we want to be.

00:17:24.634 --> 00:17:25.968
And you can see
a lot of, you know,

00:17:25.968 --> 00:17:27.834
weird stuff going on
with the MeasureSpec

00:17:27.834 --> 00:17:31.501
and the makeMeasureSpec.

00:17:31.501 --> 00:17:32.767
And do we want
to go into details

00:17:32.767 --> 00:17:34.968
about that right now
or later?

00:17:34.968 --> 00:17:37.601
So basically--
So let's talk about--

00:17:37.601 --> 00:17:38.634
a little bit
about the MeasureSpec.

00:17:38.634 --> 00:17:40.200
So when you--
In the onMeasure method,

00:17:40.200 --> 00:17:43.067
what you get are actually
not just dimensions.

00:17:43.067 --> 00:17:45.767
Like the two parameters
widthMeasureSpec

00:17:45.767 --> 00:17:47.133
and heightMeasureSpec,

00:17:47.133 --> 00:17:50.801
are not how many pixels
your parents want you to be.

00:17:50.801 --> 00:17:53.901
They're hints
from your parent

00:17:53.901 --> 00:17:57.968
telling you what size
you should be.

00:17:57.968 --> 00:18:01.100
So--And we have to do
the same with our children.

00:18:01.100 --> 00:18:03.167
So let's ignore
the parameter for now,

00:18:03.167 --> 00:18:04.767
and look at the--
look at the first two lines.

00:18:04.767 --> 00:18:06.467
So we create
two new specs.

00:18:06.467 --> 00:18:08.400
So we use
the makeMeasureSpec method

00:18:08.400 --> 00:18:11.100
and we use the cellWidth
and the cellHeight

00:18:11.100 --> 00:18:13.234
that are defined
by the two setter methods

00:18:13.234 --> 00:18:14.701
that we just saw before.

00:18:14.701 --> 00:18:16.200
And we pass--

00:18:16.200 --> 00:18:19.767
as a second parameter
to the makeMeasureSpec method,

00:18:19.767 --> 00:18:24.400
the operation we want to use
with these dimensions,

00:18:24.400 --> 00:18:26.300
there are three
in Android.

00:18:26.300 --> 00:18:27.901
That's three,
that's two.

00:18:27.901 --> 00:18:29.300
Three operations
in Android.

00:18:29.300 --> 00:18:33.200
We have EXACTLY,
AT_MOST, and UNDEFINED.

00:18:33.200 --> 00:18:37.000
So here, we know
the size of the cells,

00:18:37.000 --> 00:18:38.634
so we want to tell our children

00:18:38.634 --> 00:18:41.634
that they can be
AT_MOST 80 pixels, for instance,

00:18:41.634 --> 00:18:46.267
or AT_MOST, you know,
whatever the user specified.

00:18:46.267 --> 00:18:47.901
If we wanted
to force the children

00:18:47.901 --> 00:18:50.067
to be exactly 80 pixels,

00:18:50.067 --> 00:18:52.534
we would say,
"MeasureSpec.EXACTLY."

00:18:52.534 --> 00:18:54.300
And if we don't know
what we want--

00:18:54.300 --> 00:18:55.868
it actually happens
sometimes;

00:18:55.868 --> 00:18:58.200
the Internet loves to do
that kind of stuff--

00:18:58.200 --> 00:18:59.734
we would just say,
"UNSPECIFIED,"

00:18:59.734 --> 00:19:02.667
and then the size you pass
doesn't matter.

00:19:02.667 --> 00:19:05.033
So here we just
create our MeasureSpec,

00:19:05.033 --> 00:19:06.734
and we say, please be
AT_MOST, you know,

00:19:06.734 --> 00:19:09.200
whatever cell width
and cell height have.

00:19:09.200 --> 00:19:11.167
We call measure
on the children,

00:19:11.167 --> 00:19:14.133
the children will look
at those units,

00:19:14.133 --> 00:19:18.234
and will set their dimension
according to that.

00:19:18.234 --> 00:19:21.300
And the way you do it is
at the end of your onMeasure

00:19:21.300 --> 00:19:23.567
you can see
that we call resolveSize.

00:19:23.567 --> 00:19:27.300
So resolveSize is a method
of the view class.

00:19:27.300 --> 00:19:30.534
You pass it the size
that you want to be,

00:19:30.534 --> 00:19:35.000
so here the grid layout
is saying, okay,

00:19:35.000 --> 00:19:38.434
I have a number of--
I have N children,

00:19:38.434 --> 00:19:39.968
so that's
the count variable--

00:19:39.968 --> 00:19:45.767
I know that each child can be
AT_MOST cell width in pixels,

00:19:45.767 --> 00:19:47.868
and so that's the size
I want to have.

00:19:47.868 --> 00:19:49.067
Onorato: What we're
telling here, though,

00:19:49.067 --> 00:19:51.167
is we're telling
the children that--that--

00:19:51.167 --> 00:19:52.968
that--what would
they like--

00:19:52.968 --> 00:19:55.501
We're asking them,
"What would you guys like

00:19:55.501 --> 00:19:56.868
"if these were
your constraints?

00:19:56.868 --> 00:19:59.934
"So if you could be
AT_MOST 80 pixels, in this case,

00:19:59.934 --> 00:20:01.167
what would you do?"

00:20:01.167 --> 00:20:02.968
And we're giving them
a chance to sort of

00:20:02.968 --> 00:20:04.968
traverse down the hierarchy
and figure out

00:20:04.968 --> 00:20:08.701
what they would do in that case,
and then we'll bubble up.

00:20:08.701 --> 00:20:11.501
Guy: Yeah, but so at the end we
do what our children do with us.

00:20:11.501 --> 00:20:14.133
Like we tell our parents, you
know, what size we want to be.

00:20:14.133 --> 00:20:15.701
And the resolveSize--

00:20:15.701 --> 00:20:17.734
Yeah, I know, it's...

00:20:17.734 --> 00:20:19.300
Onorato: So the one--
So this is a simple one

00:20:19.300 --> 00:20:21.434
'cause we're sort of
ignoring all the details,

00:20:21.434 --> 00:20:23.467
but for a linear layout
it's actually--

00:20:23.467 --> 00:20:25.968
takes into consideration
what its children say,

00:20:25.968 --> 00:20:28.467
and comes up
with a size for itself.

00:20:28.467 --> 00:20:30.033
And that's--
that's how you--

00:20:30.033 --> 00:20:32.968
That's how the wrap content
mode is implemented.

00:20:32.968 --> 00:20:35.467
Guy: And so this
resolveSize thing--

00:20:35.467 --> 00:20:37.634
we pass the widths
that we think we want to be,

00:20:37.634 --> 00:20:41.667
and we also pass the MeasureSpec
that our parent gave us.

00:20:41.667 --> 00:20:44.100
And that MeasureSpec can be
AT_MOST, EXACTLY, whatever.

00:20:44.100 --> 00:20:48.000
And the resolveSize, we simply
look at those two values

00:20:48.000 --> 00:20:50.634
and figure out
what we should be.

00:20:50.634 --> 00:20:52.968
So you can ignore
the magic that's inside,

00:20:52.968 --> 00:20:54.901
basically always
use resolveSize,

00:20:54.901 --> 00:20:57.033
pass the MeasureSpec
that your parent gave you,

00:20:57.033 --> 00:20:59.300
and just indicate what
you think you would like to be.

00:20:59.300 --> 00:21:02.367
It will, you know, figure out
some magic value that works.

00:21:02.367 --> 00:21:03.934
Onorato: So if they
said EXACTLY,

00:21:03.934 --> 00:21:08.968
you'll get exactly what--
it'll, you know, use that one.

00:21:08.968 --> 00:21:10.667
Guy: So when you're
done with the measurements--

00:21:10.667 --> 00:21:12.901
and I know the measurements
is very confusing.

00:21:12.901 --> 00:21:14.901
Believe me, the first two months
I was on Android,

00:21:14.901 --> 00:21:16.434
my first task
was to write layouts,

00:21:16.434 --> 00:21:19.634
and I was like,
oh, God, I don't understand.

00:21:19.634 --> 00:21:21.133
So when you're done
with the measurement

00:21:21.133 --> 00:21:22.434
we can do the layout,

00:21:22.434 --> 00:21:24.767
so we need to position
all the children on screen,

00:21:24.767 --> 00:21:26.767
and we need
to give them a size

00:21:26.767 --> 00:21:28.334
so it can be
the size they wanted,

00:21:28.334 --> 00:21:31.634
or, you know, the size
that we think is best for them.

00:21:31.634 --> 00:21:33.934
So here it's
a very simple algorithm.

00:21:33.934 --> 00:21:36.634
We go through
all the children,

00:21:36.634 --> 00:21:38.434
and we simply--

00:21:38.434 --> 00:21:40.501
we simply
wrap the children.

00:21:40.501 --> 00:21:43.300
So we put as many children
as we can on the row,

00:21:43.300 --> 00:21:45.934
and at the end of the row
we go to the next row.

00:21:45.934 --> 00:21:49.467
Actually, here we only put
three children per row.

00:21:49.467 --> 00:21:51.000
So you just
call layout on the child,

00:21:51.000 --> 00:21:54.367
you give it--you give the child
the X and Y coordinates,

00:21:54.367 --> 00:21:57.601
and you also give it the size
you want the child to be.

00:21:57.601 --> 00:22:00.801
And here,
as you can see,

00:22:00.801 --> 00:22:03.167
we're passing
the cell width

00:22:03.167 --> 00:22:06.400
that we got from the setter
methods at the beginning,

00:22:06.400 --> 00:22:09.100
so we are totally
ignoring the size

00:22:09.100 --> 00:22:11.734
that the children figured out
when we called Measure.

00:22:11.734 --> 00:22:14.968
So that layout will always
lay out the children

00:22:14.968 --> 00:22:17.968
with a very--with an exact size
no matter what the child wanted.

00:22:17.968 --> 00:22:19.434
Onorato: But keep in mind
that that might be okay.

00:22:19.434 --> 00:22:21.267
If all of these views
are your views,

00:22:21.267 --> 00:22:24.167
and you know exactly how big
the bitmaps are,

00:22:24.167 --> 00:22:25.334
like, just go ahead
and use it.

00:22:25.334 --> 00:22:27.634
Guy: Yes, like I was saying
before, like,

00:22:27.634 --> 00:22:29.834
if you can, if you want,
take shortcuts.

00:22:29.834 --> 00:22:32.434
Like, if that's all you need,
then stop right there,

00:22:32.434 --> 00:22:33.868
and, you know, your code
will be more efficient

00:22:33.868 --> 00:22:35.667
because it does
less work.

00:22:35.667 --> 00:22:37.467
So that's actually okay
to, you know,

00:22:37.467 --> 00:22:41.267
fix the size of the children
and ignore what they told you.

00:22:41.267 --> 00:22:44.234
But that's not correct, like,
we can't cheat that on Android,

00:22:44.234 --> 00:22:45.400
so we need
to improve it.

00:22:45.400 --> 00:22:47.734
And also that's not gonna
work really well

00:22:47.734 --> 00:22:50.067
across different resolutions
and different screens.

00:22:50.067 --> 00:22:51.334
So let's see the--
the next step.

00:22:51.334 --> 00:22:52.434
Onorato: The other thing
we're missing here,

00:22:52.434 --> 00:22:54.200
I actually realized
during your talk,

00:22:54.200 --> 00:22:56.434
is we're not
skipping the gone ones.

00:22:56.434 --> 00:22:58.901
But we don't have any gone ones,
so that's not a problem.

00:22:58.901 --> 00:23:02.400
Guy: We need bugs,
you know.

00:23:02.400 --> 00:23:03.634
Onorato: All right.

00:23:03.634 --> 00:23:05.200
So the other thing
to get this actually running

00:23:05.200 --> 00:23:10.434
is we have to go into our--
our view here, and use--

00:23:10.434 --> 00:23:13.000
and use the right one,
com.example.android...

00:23:13.000 --> 00:23:14.868
Guy: So if you ever
wondered how to use

00:23:14.868 --> 00:23:16.901
your custom views in the XML,
that's how you do it.

00:23:16.901 --> 00:23:18.400
Onorato: You type in
class name.

00:23:18.400 --> 00:23:20.701
Guy: Yeah, but the fully
qualified class name--

00:23:20.701 --> 00:23:22.434
how do they say
in Java--

00:23:22.434 --> 00:23:26.067
so you need to prefix
with the packaging.

00:23:26.067 --> 00:23:29.534
And to make things easier,
when you use the standard views,

00:23:29.534 --> 00:23:31.267
you don't have to say
android.widget.ListView.

00:23:31.267 --> 00:23:32.667
But you can
if you want.

00:23:32.667 --> 00:23:36.200
Onorato: All we do is search in
those packages for those things.

00:23:36.200 --> 00:23:37.534
Makes it a little bit
slower, actually,

00:23:37.534 --> 00:23:40.100
but this thing isn't
linear layout anymore,

00:23:40.100 --> 00:23:42.367
so we'll
take that out.

00:23:42.367 --> 00:23:43.701
Guy: So let's run them.

00:23:43.701 --> 00:23:48.100
Onorato: Get a--
down here too.

00:23:48.100 --> 00:23:50.634
This is one thing I always
forget to do, actually, in XML.

00:23:50.634 --> 00:23:54.767
Guy: Ah, the beauty of XML.
Onorato: Every single time.

00:23:54.767 --> 00:23:56.434
And one more thing.

00:23:56.434 --> 00:24:00.300
In here--
Shouldn't be too bad.

00:24:00.300 --> 00:24:02.434
Is we actually have to set
the size of the cell.

00:24:02.434 --> 00:24:04.067
It starts out at zero.

00:24:04.067 --> 00:24:05.601
So we'll d--
Guy: Oh, yeah.

00:24:05.601 --> 00:24:10.567
You want to say the--
Onorato: Yeah.

00:24:10.567 --> 00:24:12.367
Guy: So here,
because we can't specify

00:24:12.367 --> 00:24:16.734
the width and the height
of the cells in XML yet,

00:24:16.734 --> 00:24:18.601
we're doing that
from code.

00:24:18.601 --> 00:24:20.901
So the usual, you know,
boilerplate of finding

00:24:20.901 --> 00:24:23.067
the ViewById,
casting it,

00:24:23.067 --> 00:24:27.868
and then calling
some methods on it.

00:24:27.868 --> 00:24:30.000
Onorato: Okay.

00:24:30.000 --> 00:24:35.033
So we'll run it again.

00:24:35.033 --> 00:24:36.801
Guy: [imitates small explosion]

00:24:36.801 --> 00:24:39.334
You did not specify
the ID in the XML file.

00:24:39.334 --> 00:24:44.834
Onorato: That is what I did.

00:24:44.834 --> 00:24:47.767
So the syntax--

00:24:47.767 --> 00:24:49.801
Don't forget android.id,
too, that's another--

00:24:49.801 --> 00:24:50.968
that's another common one.

00:24:50.968 --> 00:24:52.567
If you just say ID,
it doesn't--

00:24:52.567 --> 00:24:53.968
Guy: Well, at least
it's not too painful

00:24:53.968 --> 00:24:55.701
when you do that
in a project

00:24:55.701 --> 00:24:57.234
'cause when you
forget the ID

00:24:57.234 --> 00:25:00.467
and you're working on the source
code of Android itself,

00:25:00.467 --> 00:25:03.767
you have to reveal
the whole tree.

00:25:03.767 --> 00:25:07.167
You know, take some time,
and your ID goes all crazy

00:25:07.167 --> 00:25:08.701
because it has to
refresh all the, like,

00:25:08.701 --> 00:25:11.601
tens of thousands of files
we have.

00:25:11.601 --> 00:25:14.033
So usually we're better
at not forgetting that.

00:25:14.033 --> 00:25:16.267
Onorato: Yeah.

00:25:16.267 --> 00:25:18.567
Guy: Okay.
Onorato: So here we have it.

00:25:18.567 --> 00:25:22.234
Guy: But, uh, so they are
exactly 80 pixels across--

00:25:22.234 --> 00:25:23.901
Onorato: And ImageView
stretches by default.

00:25:23.901 --> 00:25:25.267
Guy: Yeah,
so I don't know

00:25:25.267 --> 00:25:28.000
if it's really visible
on the projector,

00:25:28.000 --> 00:25:30.033
but you can see that
the droids are much bigger

00:25:30.033 --> 00:25:31.567
than the original picture.

00:25:31.567 --> 00:25:34.300
And they don't look really good,
like, you know, their scale.

00:25:34.300 --> 00:25:37.667
And we don't want that,
so we need to honor

00:25:37.667 --> 00:25:40.200
the measured dimensions
from the children.

00:25:40.200 --> 00:25:43.234
Onorato: So we'll do that.
This is a little bit of typing.

00:25:43.234 --> 00:25:44.934
Guy: As long as you do
the typing, it's okay.

00:25:44.934 --> 00:25:46.901
Onorato: That's fine.

00:25:46.901 --> 00:25:49.334
All right, so this is all, uh,
all in a layout here.

00:25:49.334 --> 00:25:51.200
Guy: Yeah, so we don't have
to chance the measure--

00:25:51.200 --> 00:25:54.267
the measure method
because we've already done it.

00:25:54.267 --> 00:25:56.934
And usually, actually,
you will probably end up

00:25:56.934 --> 00:25:59.100
not doing much work
in the measure method

00:25:59.100 --> 00:26:00.434
because all you want to do,
really,

00:26:00.434 --> 00:26:02.133
is you measure the children.

00:26:02.133 --> 00:26:04.167
The hardest parts usually
is to figure out

00:26:04.167 --> 00:26:06.400
whether you want the children
to be AT_MOST, EXACTLY,

00:26:06.400 --> 00:26:08.133
UNSPECIFIED,
and all that stuff.

00:26:08.133 --> 00:26:09.534
And if you're really
courageous,

00:26:09.534 --> 00:26:10.734
you can go look
at the source code

00:26:10.734 --> 00:26:12.801
of LinearLayout.

00:26:12.801 --> 00:26:16.467
And if you're still reading it
after a couple minutes,

00:26:16.467 --> 00:26:20.067
then please apply for a job
and we'd love to give you

00:26:20.067 --> 00:26:23.534
LinearLayout to maintain.

00:26:23.534 --> 00:26:27.133
And so here, Droid's modifying
the layout method

00:26:27.133 --> 00:26:29.501
so we're actually asking
the children

00:26:29.501 --> 00:26:32.167
"What are the measured widths
and measured height?"

00:26:32.167 --> 00:26:34.234
And that's something
that you have to keep in mind.

00:26:34.234 --> 00:26:36.767
When you want to know
the width and the height

00:26:36.767 --> 00:26:39.701
of a view for some reason,
you're on your Y,

00:26:39.701 --> 00:26:41.467
you have two different
methods.

00:26:41.467 --> 00:26:43.734
You have get Width
and get measuredWidth.

00:26:43.734 --> 00:26:45.968
And they
can actually be different.

00:26:45.968 --> 00:26:48.467
In many situations,
the value will be the same,

00:26:48.467 --> 00:26:50.234
but they may be different.

00:26:50.234 --> 00:26:52.501
So the one you want
most of the time is get Width

00:26:52.501 --> 00:26:55.501
because it gives you
the actual size on screen.

00:26:55.501 --> 00:26:57.968
Uh, get measuredWidths
is really useful

00:26:57.968 --> 00:27:00.534
only for layouts

00:27:00.534 --> 00:27:02.767
because they're the ones
who care

00:27:02.767 --> 00:27:05.000
about what the child thinks--

00:27:05.000 --> 00:27:07.734
thinks it wants to be.

00:27:07.734 --> 00:27:09.634
Yeah, so here, Joe
is just updating

00:27:09.634 --> 00:27:10.834
the call to layouts.

00:27:10.834 --> 00:27:12.167
Onorato: I'm going
to have it centered

00:27:12.167 --> 00:27:13.467
in the view too.

00:27:13.467 --> 00:27:14.968
Guy: Yeah, and you're actually
centering it.

00:27:14.968 --> 00:27:17.067
So because we said
to the children, "okay,

00:27:17.067 --> 00:27:20.000
we want you to be at most
80 pixels large,"

00:27:20.000 --> 00:27:21.667
they might be smaller.

00:27:21.667 --> 00:27:23.400
So we have a couple lines
of code here

00:27:23.400 --> 00:27:25.834
"int left" and "int top" =

00:27:25.834 --> 00:27:28.334
that center the child
within the cell

00:27:28.334 --> 00:27:31.200
if they're smaller
than the 80 pixels

00:27:31.200 --> 00:27:32.567
that we specified.

00:27:32.567 --> 00:27:34.033
Onorato: And we'll make it
wrap correctly

00:27:34.033 --> 00:27:35.634
instead of hardcoding it
to four columns too.

00:27:35.634 --> 00:27:37.734
Guy: Which is always nice.
So let's give that a try.

00:27:37.734 --> 00:27:39.934
Onorato:
See if that actually runs.

00:27:44.601 --> 00:27:49.133
Guy: Just "ant reinstall."
Onorato: Yeah.

00:27:49.133 --> 00:27:51.434
Guy: The padding.
Onorato: Again?

00:27:51.434 --> 00:27:54.200
Guy: Okay, no, you don't
take care of the padding

00:27:54.200 --> 00:27:55.801
of your children
in the layout

00:27:55.801 --> 00:27:58.701
'cause the padding
is inside the child.

00:27:58.701 --> 00:28:00.000
So it's part
of the measured width.

00:28:00.000 --> 00:28:01.767
Onorato: Well, if the layout
itself had padding,

00:28:01.767 --> 00:28:02.767
then we would.

00:28:02.767 --> 00:28:04.067
Guy: Yeah, if the layout
has padding,

00:28:04.067 --> 00:28:05.868
you have to, you know,
deal with it.

00:28:05.868 --> 00:28:09.701
What you will deal with
is the margin of the children.

00:28:09.701 --> 00:28:11.334
'Cause the margins
are outside of the bounds

00:28:11.334 --> 00:28:12.400
of the children.

00:28:12.400 --> 00:28:13.667
If you want a good example
of that,

00:28:13.667 --> 00:28:16.033
you can look at FrameLayout,
LinearLayout,

00:28:16.033 --> 00:28:17.667
RelativeLayout, I think,

00:28:17.667 --> 00:28:19.267
to deal with that kind
of stuff.

00:28:19.267 --> 00:28:21.000
And usually, you know,
if you don't care

00:28:21.000 --> 00:28:22.767
about padding and margin,

00:28:22.767 --> 00:28:23.767
just forget about them.

00:28:23.767 --> 00:28:25.067
Like, take the shortcut.

00:28:25.067 --> 00:28:27.067
'Cause as soon as you start
taking the padding

00:28:27.067 --> 00:28:28.234
in the margin into account--

00:28:28.234 --> 00:28:29.634
Onorato: It doubles
the amount of code.

00:28:29.634 --> 00:28:32.067
Guy: Yeah, the code
becomes much more complicated.

00:28:32.067 --> 00:28:35.968
So be glad that we do
that kind of stuff for you.

00:28:35.968 --> 00:28:37.801
Onorato: So here they are,
the right size and centered

00:28:37.801 --> 00:28:39.901
in their cells.

00:28:39.901 --> 00:28:41.834
Guy: Okay, and, yeah,
and if we're to inspect

00:28:41.834 --> 00:28:44.400
that layout
in Hierarchy Viewer,

00:28:44.400 --> 00:28:46.868
we would see that the items
are smaller

00:28:46.868 --> 00:28:48.767
than the cells
in which they're contained.

00:28:48.767 --> 00:28:50.734
Onorato:
You want to do that?

00:28:50.734 --> 00:28:52.133
Guy: Yeah, no.
Let's go ahead.

00:28:52.133 --> 00:28:53.634
Onorato: Okay.

00:28:53.634 --> 00:28:56.267
All right, so next, we're going
to actually make the density.

00:28:56.267 --> 00:28:58.534
So if we ran this
in wide VGA,

00:28:58.534 --> 00:29:00.100
what we would see--

00:29:00.100 --> 00:29:02.167
I won't do it 'cause it takes
so long to start the emulator--

00:29:02.167 --> 00:29:04.801
but what we would see
is all six of these androids

00:29:04.801 --> 00:29:06.300
right in a line.

00:29:06.300 --> 00:29:07.367
Guy: Yeah.

00:29:07.367 --> 00:29:09.000
Yeah, that's exactly--

00:29:09.000 --> 00:29:11.501
the screenshots that you saw
at the beginning,

00:29:11.501 --> 00:29:13.200
we specified--

00:29:13.200 --> 00:29:16.934
in this example, we specified
the size of the cells in pixels.

00:29:16.934 --> 00:29:19.601
So there are actually
80 pixels.

00:29:19.601 --> 00:29:23.234
And if you want to devise it
as a higher density,

00:29:23.234 --> 00:29:25.334
then 80 pixels
are much smaller, physically,

00:29:25.334 --> 00:29:26.667
for you as the user.

00:29:26.667 --> 00:29:28.534
And that's what we want
to fix.

00:29:28.534 --> 00:29:29.834
It's not an issue
right now,

00:29:29.834 --> 00:29:30.968
but it's going
to become an issue

00:29:30.968 --> 00:29:33.734
for all of your applications
really quickly.

00:29:33.734 --> 00:29:36.801
We have stuff in the framework
that take care of compatibility

00:29:36.801 --> 00:29:39.167
for older applications.

00:29:39.167 --> 00:29:42.000
But it's best
if you guys do it.

00:29:42.000 --> 00:29:44.234
Onorato: So we were going--
what we're going to do

00:29:44.234 --> 00:29:46.100
is sort of show you how
to hardcode it.

00:29:46.100 --> 00:29:47.434
But I think I want
to just skip that.

00:29:47.434 --> 00:29:48.601
Guy: You want to skip that?
Okay.

00:29:48.601 --> 00:29:50.000
Onorato: 'Cause it takes
a little while.

00:29:50.000 --> 00:29:52.434
So while this is going,

00:29:52.434 --> 00:29:55.167
I'll--when I restart
the emulator here...

00:29:55.167 --> 00:29:56.968
Guy: Yeah, I'm pretty sure
you will have the slides

00:29:56.968 --> 00:29:58.033
available somewhere.

00:29:58.033 --> 00:29:59.834
So we can--
it's not much code.

00:29:59.834 --> 00:30:01.133
It's like two lines of code.

00:30:01.133 --> 00:30:02.667
Onorato:
It's like 54 lines of code.

00:30:02.667 --> 00:30:04.667
Guy: Yeah, and if you want
to know more

00:30:04.667 --> 00:30:07.434
about supporting the density

00:30:07.434 --> 00:30:08.834
and how to compute
the right size,

00:30:08.834 --> 00:30:10.200
then, you know,
just send us emails.

00:30:10.200 --> 00:30:12.133
We'll point you
to the examples.

00:30:12.133 --> 00:30:14.667
And we'll probably talk
about it really soon

00:30:14.667 --> 00:30:17.300
on the blog,
on the forums.

00:30:17.300 --> 00:30:18.467
Onorato: So I think
what well do

00:30:18.467 --> 00:30:20.067
is show you how to use resources
then instead.

00:30:20.067 --> 00:30:21.133
Guy: Yeah.
The attributes one?

00:30:21.133 --> 00:30:22.467
Onorato: Yeah. Attributes.

00:30:22.467 --> 00:30:23.868
Guy: So let's see--
so again, so let's see

00:30:23.868 --> 00:30:26.000
how to get the attributes
from XML.

00:30:26.000 --> 00:30:27.667
Onorato: So I said
it was about ten lines of code.

00:30:27.667 --> 00:30:29.000
It's really about that.

00:30:29.000 --> 00:30:30.834
So there's res--this is--
you have to add a file

00:30:30.834 --> 00:30:33.467
called res/values/attrs.xml.

00:30:33.467 --> 00:30:36.501
Guy: It doesn't have
to be called attrs.xml.

00:30:36.501 --> 00:30:38.200
Onorato: Really?
Guy: Yeah. It's a convention.

00:30:38.200 --> 00:30:39.534
Onorato: Okay.

00:30:39.534 --> 00:30:41.334
Guy: And I would love
that we change this convention

00:30:41.334 --> 00:30:43.734
'cause I can never
pronounce attrs.xml.

00:30:43.734 --> 00:30:45.834
[laughter]

00:30:45.834 --> 00:30:47.501
I--you should try
with a French accent.

00:30:47.501 --> 00:30:48.701
You'll see.

00:30:48.701 --> 00:30:50.033
[laughter]

00:30:50.033 --> 00:30:51.968
Onorato: You don't want me
to do my French accent.

00:30:51.968 --> 00:30:54.367
Guy: No, you don't.

00:30:54.367 --> 00:30:55.767
Onorato: So there's--
go ahead.

00:30:55.767 --> 00:30:57.801
Guy: Yeah. Well, yeah,
so Joe here is just creating

00:30:57.801 --> 00:31:01.467
a new resources--
new series of resources.

00:31:01.467 --> 00:31:04.467
And something that called
the "styleable"

00:31:04.467 --> 00:31:08.133
is basically a set of resources
that can be modified

00:31:08.133 --> 00:31:09.534
by the theme.

00:31:09.534 --> 00:31:12.100
So if you ever created a theme
and you changed, you know,

00:31:12.100 --> 00:31:15.334
like, the fullscreen mode,
the window background,

00:31:15.334 --> 00:31:18.868
the appearance of your text
views or stuff like that,

00:31:18.868 --> 00:31:23.968
that's because they are declared
as styleables in the framework.

00:31:23.968 --> 00:31:26.300
And then in the styleable,
you define all the attributes

00:31:26.300 --> 00:31:28.734
that you want to be able
to use in XML.

00:31:28.734 --> 00:31:30.033
So just a name and a format.

00:31:30.033 --> 00:31:31.467
So here dimension.

00:31:31.467 --> 00:31:34.701
So dimension is a fancy name
for all the units we support.

00:31:34.701 --> 00:31:36.734
So that means that when you have
a dimension attribute,

00:31:36.734 --> 00:31:38.801
you can say 1 px
for pixel,

00:31:38.801 --> 00:31:41.000
1 dip for device
independent pixel.

00:31:41.000 --> 00:31:44.033
You can say 1 mm
for millimeter.

00:31:44.033 --> 00:31:45.234
You can use 1 inch.

00:31:45.234 --> 00:31:47.234
We have a bunch
of different units.

00:31:47.234 --> 00:31:48.467
And we support a bunch
of formats

00:31:48.467 --> 00:31:49.701
so you can--
you can have floats,

00:31:49.701 --> 00:31:51.701
you can have enums,
you can have flags,

00:31:51.701 --> 00:31:56.400
integers, booleans,
strings, references.

00:31:56.400 --> 00:31:57.868
Onorato: Enums are kind of fun,
actually.

00:31:57.868 --> 00:31:59.601
They--they let you--they--
I mean, they do exactly

00:31:59.601 --> 00:32:00.634
what enums would do.

00:32:00.634 --> 00:32:02.901
They give you a name
in the XML file,

00:32:02.901 --> 00:32:04.901
but it becomes an integer.

00:32:04.901 --> 00:32:06.501
Actually becom--yeah,
becomes any integer

00:32:06.501 --> 00:32:07.801
in the--
in the data structure.

00:32:07.801 --> 00:32:10.767
Guy: So if you ever use
a LinearLayout, for instance,

00:32:10.767 --> 00:32:12.000
and you specify
the orientation,

00:32:12.000 --> 00:32:15.100
you say orientation equals
vertical or horizontal,

00:32:15.100 --> 00:32:17.734
that's an enum defined
as a--as an attribute.

00:32:17.734 --> 00:32:19.234
So here we just defined
the two attributes

00:32:19.234 --> 00:32:22.367
we need to specify the width
and the height of our cells.

00:32:22.367 --> 00:32:24.501
And let's see how to use
that from code.

00:32:24.501 --> 00:32:26.467
Onorato: Well, we'll add
to the XML too.

00:32:26.467 --> 00:32:28.734
Guy: Yeah, the XML.

00:32:28.734 --> 00:32:31.934
Onorato: So this is the--
this is the magic part that I...

00:32:31.934 --> 00:32:33.801
Guy: Always forget about.
Onorato: Always forget.

00:32:33.801 --> 00:32:35.467
So, yeah, you--
you probably always--

00:32:35.467 --> 00:32:38.434
you've already seen
that namespace in the root tag

00:32:38.434 --> 00:32:39.767
of all your XML layout files.

00:32:39.767 --> 00:32:40.901
And you probably wonder,

00:32:40.901 --> 00:32:42.834
like, "why do I have
to have that thing

00:32:42.834 --> 00:32:45.400
that, you know,
it's pretty weird to look at?"

00:32:45.400 --> 00:32:47.033
Onorato: So there's actually
two parts to it.

00:32:47.033 --> 00:32:50.534
This is just the prefix
that tells us

00:32:50.534 --> 00:32:53.067
that this is going
to be an Android...

00:32:53.067 --> 00:32:54.767
Guy: Attribute.
Onorato: Attribute, yeah.

00:32:54.767 --> 00:32:56.234
And then there's
your packaging.

00:32:56.234 --> 00:32:59.067
You know, Android is the one
that it's sort of regularly in.

00:32:59.067 --> 00:33:00.934
Guy: Yeah. And you want
to change the namespace now.

00:33:00.934 --> 00:33:02.367
Onorato: Oh, yeah.

00:33:02.367 --> 00:33:04.868
Guy: And so when you create
your own attributes from XML,

00:33:04.868 --> 00:33:06.734
because the name
of your attributes

00:33:06.734 --> 00:33:08.200
could potentially,
you know,

00:33:08.200 --> 00:33:09.968
get in conflict
with the attributes

00:33:09.968 --> 00:33:12.033
that we define,

00:33:12.033 --> 00:33:14.701
you have to specify a namespace
for your application

00:33:14.701 --> 00:33:17.434
just like you have to use
the Android namespace.

00:33:17.434 --> 00:33:18.767
So, you know, does--

00:33:18.767 --> 00:33:21.334
this will prefix then
the package name of your app.

00:33:21.334 --> 00:33:22.667
Then when you specify
the attribute,

00:33:22.667 --> 00:33:25.467
instead of using
android:whatever,

00:33:25.467 --> 00:33:27.300
you use the name
of the namespace

00:33:27.300 --> 00:33:28.467
you just used.

00:33:28.467 --> 00:33:32.133
Here Joe just declared
the widths of the cells

00:33:32.133 --> 00:33:35.834
to be 80 device
independent pixels,

00:33:35.834 --> 00:33:38.801
which will scale automatically
with the density of the device.

00:33:38.801 --> 00:33:40.267
That's some framework magic.

00:33:40.267 --> 00:33:41.501
And the height is just 100.

00:33:41.501 --> 00:33:43.334
Onorato: Yeah.

00:33:43.334 --> 00:33:45.200
Guy: So it's, you know,
like we said,

00:33:45.200 --> 00:33:46.267
it's actually pretty easy

00:33:46.267 --> 00:33:47.601
to create your own
XML attributes.

00:33:47.601 --> 00:33:50.868
The only thing is that you have
to remember the syntax.

00:33:50.868 --> 00:33:52.534
And I don't know
how you can--

00:33:52.534 --> 00:33:54.467
you might not even remember
the syntax.

00:33:54.467 --> 00:33:56.734
So it's nice to have--
to have examples.

00:33:56.734 --> 00:33:58.634
In the--actually, in the SDK,
you have a bunch

00:33:58.634 --> 00:34:00.300
of examples
that--that use that.

00:34:00.300 --> 00:34:02.567
So if you look
at the home sample,

00:34:02.567 --> 00:34:04.067
for instance, we use heav--

00:34:04.067 --> 00:34:06.667
we use custom attributes
heavily.

00:34:06.667 --> 00:34:07.901
Have you recompiled the...

00:34:07.901 --> 00:34:09.267
Onorato: I haven't yet
'cause we needed

00:34:09.267 --> 00:34:10.267
to put the Java code in too.

00:34:10.267 --> 00:34:11.601
Guy: Okay.

00:34:11.601 --> 00:34:13.300
Onorato: So I'm just going
to copy and paste it.

00:34:13.300 --> 00:34:16.501
Guy: So now this--yeah,
there's some more width syntax.

00:34:16.501 --> 00:34:18.501
Onorato:
So what--what this--

00:34:18.501 --> 00:34:19.934
so we're going to add
this big hunk of code

00:34:19.934 --> 00:34:20.968
to the constructor here.

00:34:20.968 --> 00:34:24.300
And what that--
what all that XML did,

00:34:24.300 --> 00:34:26.501
there's your--
your R.java file.

00:34:26.501 --> 00:34:28.400
and that generated--
inside--inside that,

00:34:28.400 --> 00:34:31.000
it generated a static,
final array

00:34:31.000 --> 00:34:33.901
of resource IDs

00:34:33.901 --> 00:34:35.467
that can then be used

00:34:35.467 --> 00:34:39.968
to this obtainStyledAttributes
function.

00:34:39.968 --> 00:34:42.434
And it--and it'll get you
this thing

00:34:42.434 --> 00:34:45.267
called the typed array,
which is--is magic.

00:34:45.267 --> 00:34:46.868
Guy: So the typed array
is--is basically

00:34:46.868 --> 00:34:48.300
all the attributes
and all the values

00:34:48.300 --> 00:34:49.701
that you've defined in XML.

00:34:49.701 --> 00:34:52.667
Onorato: But just for this one--
just for this one thing.

00:34:52.667 --> 00:34:53.868
Guy: Styleable.

00:34:53.868 --> 00:34:55.534
Onorato: One--
for this one styleable, yeah.

00:34:55.534 --> 00:34:57.334
And then we're going to get
the width and the height

00:34:57.334 --> 00:34:58.767
out of that.

00:34:58.767 --> 00:35:04.067
The thing we skipped
was the pixel size thing.

00:35:04.067 --> 00:35:06.567
Just briefly, there's--there's--
this typed array thing

00:35:06.567 --> 00:35:09.834
has four or so
different versions

00:35:09.834 --> 00:35:12.434
of getPixel--
or getDimension.

00:35:12.434 --> 00:35:15.100
And the one we have here
is used for widths.

00:35:15.100 --> 00:35:18.801
So if you--if the rounding
would cause your pixel

00:35:18.801 --> 00:35:19.868
to go down to zero,

00:35:19.868 --> 00:35:20.868
it actually...

00:35:20.868 --> 00:35:21.901
Guys: Forces it to be--

00:35:21.901 --> 00:35:23.267
Onorato: It actually forces it
to be 1

00:35:23.267 --> 00:35:26.000
just so your widget doesn't
completely disappear.

00:35:26.000 --> 00:35:27.667
It's--it's not so much useful
for the width

00:35:27.667 --> 00:35:28.734
of your actual widget.

00:35:28.734 --> 00:35:29.934
But if you're going
to do something

00:35:29.934 --> 00:35:30.934
like draw a border,

00:35:30.934 --> 00:35:32.234
you probably still want
to have a border

00:35:32.234 --> 00:35:33.634
even if it's
a really small border.

00:35:33.634 --> 00:35:35.367
Guy: Yeah, it's
the second-worst API name ever.

00:35:35.367 --> 00:35:36.767
Onorato: Yes.
What's the...

00:35:36.767 --> 00:35:38.934
Guy: [indistinct]

00:35:38.934 --> 00:35:42.267
That's the first one.

00:35:42.267 --> 00:35:43.901
Again, so you saw
that it's pretty easy

00:35:43.901 --> 00:35:45.234
to get the attributes
from XML.

00:35:45.234 --> 00:35:47.434
But we have to admit that,
you know, the API

00:35:47.434 --> 00:35:49.601
like TypedArray,
getStyleable,

00:35:49.601 --> 00:35:51.501
it's under intuitive,

00:35:51.501 --> 00:35:53.567
so we wanted
to--to show you guys,

00:35:53.567 --> 00:35:54.934
you know, the code
that you have to type

00:35:54.934 --> 00:35:56.100
so that at least
you can remember

00:35:56.100 --> 00:35:57.234
what it looks like
and, you know,

00:35:57.234 --> 00:35:58.601
so that you can know
what to look at

00:35:58.601 --> 00:36:00.534
in the source code
of the examples

00:36:00.534 --> 00:36:03.434
when you want to do the same
in your applications.

00:36:03.434 --> 00:36:05.100
Onorato: So here,
while we were doing all that,

00:36:05.100 --> 00:36:06.501
we restarted
the emulator here.

00:36:06.501 --> 00:36:10.501
And it's running at wide VGA,
which is 400--480x800.

00:36:10.501 --> 00:36:12.334
And you can see that Android
isn't really ready

00:36:12.334 --> 00:36:14.634
for it yet either.

00:36:14.634 --> 00:36:17.400
The home screen
sort of ends.

00:36:17.400 --> 00:36:21.834
[laughter]

00:36:21.834 --> 00:36:25.267
And the icons are small.

00:36:25.267 --> 00:36:28.801
So here's our little button.

00:36:28.801 --> 00:36:30.801
Guy: My androids are small too.
Onorato: What?

00:36:30.801 --> 00:36:31.968
Guy: The androids
are small too.

00:36:31.968 --> 00:36:34.267
Onorato: Yeah, the androids
are small too.

00:36:34.267 --> 00:36:35.534
Well, shouldn't be,
actually.

00:36:35.534 --> 00:36:38.701
Guy: You have to modify
the DPI property of the system.

00:36:38.701 --> 00:36:40.200
Onorato: I should've done that.
Guy: Yeah.

00:36:40.200 --> 00:36:41.367
Onorato: Crap.
Guy: That's okay.

00:36:41.367 --> 00:36:42.567
Onorato: All right.

00:36:42.567 --> 00:36:45.300
Well, if this were to run
on a real device,

00:36:45.300 --> 00:36:46.567
which don't exist,

00:36:46.567 --> 00:36:49.033
which is why this talk
is all theoretical anyway,

00:36:49.033 --> 00:36:50.634
then this would've
looked right.

00:36:50.634 --> 00:36:52.300
There--there--there's a way
to get the emulator

00:36:52.300 --> 00:36:53.300
to build it.

00:36:53.300 --> 00:36:54.601
I'm not going to show it

00:36:54.601 --> 00:36:56.200
'cause it took me
about 20 minutes to figure out.

00:36:56.200 --> 00:36:57.300
Guy: Yeah,
so one of these days,

00:36:57.300 --> 00:36:58.400
I'll write an article
on the blog

00:36:58.400 --> 00:37:00.033
to show you how you can
start the emulator

00:37:00.033 --> 00:37:01.667
with the appropriate density.

00:37:01.667 --> 00:37:03.501
And you will see that things
actually work correctly

00:37:03.501 --> 00:37:05.133
so that you can at least test
your application.

00:37:05.133 --> 00:37:06.167
It's not that hard.

00:37:06.167 --> 00:37:07.434
It's another one
of those things

00:37:07.434 --> 00:37:09.634
where you have to find
a weird configuration file

00:37:09.634 --> 00:37:10.667
somewhere in the system

00:37:10.667 --> 00:37:12.267
and change
one of the properties.

00:37:12.267 --> 00:37:13.701
So we'll document that.

00:37:13.701 --> 00:37:15.968
Onorato: And if--if somebody
were actually making a device

00:37:15.968 --> 00:37:17.400
that was--
that was that size,

00:37:17.400 --> 00:37:19.000
they would've done that,
obviously.

00:37:19.000 --> 00:37:20.167
Guy: Yes.

00:37:20.167 --> 00:37:24.367
If they want to ship
with device.

00:37:24.367 --> 00:37:25.767
So we're done with the code?

00:37:25.767 --> 00:37:27.501
Onorato: So I think we're done
with the code, yeah.

00:37:27.501 --> 00:37:28.601
Guy: So let's go
to the fun part.

00:37:28.601 --> 00:37:29.667
Onorato: The fun part.
Yeah.

00:37:29.667 --> 00:37:30.667
Guy: Okay.

00:37:30.667 --> 00:37:31.934
So now we'll show you how--

00:37:31.934 --> 00:37:33.701
you know, like, this code
is awesome, obviously,

00:37:33.701 --> 00:37:36.267
'cause we just wrote it.

00:37:36.267 --> 00:37:38.467
Joe's a great developer.

00:37:38.467 --> 00:37:41.701
And we're going to now com--
you know, submit that for review

00:37:41.701 --> 00:37:43.667
to the Android
Open Source Project.

00:37:43.667 --> 00:37:46.534
So Joe will show you
the commands

00:37:46.534 --> 00:37:48.000
that you have to do
on your side

00:37:48.000 --> 00:37:49.701
to submit a patch.

00:37:49.701 --> 00:37:51.534
And then I will show you
how on our side,

00:37:51.534 --> 00:37:54.133
we look at your patches
and how we approve them.

00:37:54.133 --> 00:37:57.000
And the cool thing about it
is everything that we do right--

00:37:57.000 --> 00:37:58.801
that we're going to do
right now,

00:37:58.801 --> 00:38:01.467
it's exactly what we do
every day, several times a day,

00:38:01.467 --> 00:38:02.467
and so on.

00:38:02.467 --> 00:38:03.567
So we use
the exact same tools.

00:38:03.567 --> 00:38:05.033
We have to do the exact
same process.

00:38:05.033 --> 00:38:07.367
The only difference
between you and us

00:38:07.367 --> 00:38:10.834
is that you don't have the right
to submit something

00:38:10.834 --> 00:38:14.167
in the tree whenever you want
and we do.

00:38:14.167 --> 00:38:15.501
You'll see.
It will be obvious.

00:38:15.501 --> 00:38:17.100
We have a cool button
that you will never see

00:38:17.100 --> 00:38:18.367
on your screen.

00:38:18.367 --> 00:38:19.868
[laughter]

00:38:19.868 --> 00:38:21.634
We--we got to have some perks,
you know,

00:38:21.634 --> 00:38:23.234
working on the Android team.

00:38:23.234 --> 00:38:24.501
Onorato: So we're going
to check this

00:38:24.501 --> 00:38:27.033
into the samples directory
on the tree.

00:38:27.033 --> 00:38:28.934
And we're actually really going
to check it in right now.

00:38:28.934 --> 00:38:31.801
So if we break everything,
then--the build is broken?

00:38:31.801 --> 00:38:33.234
Guy: I think the build
is broken already.

00:38:33.234 --> 00:38:34.334
So that's okay.

00:38:34.334 --> 00:38:35.901
Onorato: I think
the public one isn't.

00:38:35.901 --> 00:38:37.200
All right.
So we copied it in there.

00:38:37.200 --> 00:38:38.334
And now we're going to go

00:38:38.334 --> 00:38:43.334
into development/samples/

00:38:43.334 --> 00:38:44.934
This whole thing is completely
command line

00:38:44.934 --> 00:38:46.701
in our--in our world.

00:38:46.701 --> 00:38:49.033
And we're going
to show you Git.

00:38:49.033 --> 00:38:50.801
Guy: I won't say anything bad
about Git today.

00:38:50.801 --> 00:38:53.801
Onorato: Git is great.

00:38:53.801 --> 00:38:55.067
Actually, you know what,

00:38:55.067 --> 00:38:57.000
Linus had a nice talk
at Google

00:38:57.000 --> 00:38:59.000
where he slammed everybody
but Git.

00:38:59.000 --> 00:39:02.400
Linus is a jerk
and Git is annoying.

00:39:02.400 --> 00:39:04.133
Guy: Can I say that Git
is a pain in the butt?

00:39:04.133 --> 00:39:05.767
Onorato: Yeah. Cool.

00:39:05.767 --> 00:39:08.367
Guy: So Git is a pain
in the butt.

00:39:08.367 --> 00:39:10.200
No, it is actually awesome.

00:39:10.200 --> 00:39:12.234
Let's just say that to me,
you know,

00:39:12.234 --> 00:39:15.267
as a user that likes Macs,

00:39:15.267 --> 00:39:17.567
they forgot
about the user part.

00:39:17.567 --> 00:39:20.934
So it's not very
user friendly.

00:39:20.934 --> 00:39:22.601
And we're currently
transitioning internally.

00:39:22.601 --> 00:39:24.934
We used to be on Perforce
and we're switching to Git

00:39:24.934 --> 00:39:27.767
so that we use the same tools
that we--you do.

00:39:27.767 --> 00:39:29.934
You know, so that we can also
feel your pain.

00:39:29.934 --> 00:39:32.467
And believe me,
we do feel it.

00:39:32.467 --> 00:39:34.167
Onorato:
So I just deleted--

00:39:34.167 --> 00:39:35.667
what I had just done
is deleted all the files

00:39:35.667 --> 00:39:37.667
that we don't actually
want to check in.

00:39:37.667 --> 00:39:39.434
Our sample structure
doesn't have all the build...

00:39:39.434 --> 00:39:40.868
Guy: Yeah.

00:39:40.868 --> 00:39:42.934
Onorato: 'Cause they have
hardcoded paths and everything.

00:39:42.934 --> 00:39:43.968
Guy: Okay, let's send
the repo.

00:39:43.968 --> 00:39:45.634
Onorato: Yeah.

00:39:45.634 --> 00:39:47.868
Guy: So we have this tool
called repo.

00:39:47.868 --> 00:39:50.367
It's basically a smart wrapper
on Git

00:39:50.367 --> 00:39:52.734
because the Android project
is, you know--

00:39:52.734 --> 00:39:54.467
we like to make things
complicated.

00:39:54.467 --> 00:39:56.467
So instead of having
one repository,

00:39:56.467 --> 00:39:59.868
we have currently 152
or something like that.

00:39:59.868 --> 00:40:01.567
Oh, and obviously,
you know,

00:40:01.567 --> 00:40:04.634
handling 152 Git repositories
by hand would be,

00:40:04.634 --> 00:40:07.834
you know, quite tedious
to really impolite.

00:40:07.834 --> 00:40:09.901
So we created this tool
called repo

00:40:09.901 --> 00:40:11.734
that takes care of mo--most
of the work for you.

00:40:11.734 --> 00:40:13.501
So when you type "repo sync,"

00:40:13.501 --> 00:40:19.033
it goes through the hundreds
of repositories

00:40:19.033 --> 00:40:20.567
and syncs them.

00:40:20.567 --> 00:40:24.534
So when you do "repo start"--
let's back up a little.

00:40:24.534 --> 00:40:25.868
Onorato: It's way back
up here, yeah.

00:40:25.868 --> 00:40:27.033
Guy: Yeah.
Stop typing stuff.

00:40:27.033 --> 00:40:28.200
So when you do "repo start,"

00:40:28.200 --> 00:40:30.000
you're just starting
a new branch

00:40:30.000 --> 00:40:31.200
shown here called "simple."

00:40:31.200 --> 00:40:32.467
So when you want
to commit something

00:40:32.467 --> 00:40:33.467
to the Android Project,

00:40:33.467 --> 00:40:34.968
you have to start
a new branch.

00:40:34.968 --> 00:40:36.133
Don't ask me why.

00:40:36.133 --> 00:40:37.701
Onorato: This is all
documented somewhere.

00:40:37.701 --> 00:40:39.734
Guy: Yeah, it's because
of the way Git works.

00:40:39.734 --> 00:40:41.434
Anyway, so you have
to start a branch.

00:40:41.434 --> 00:40:44.434
And if you don't,
I can't help you.

00:40:44.434 --> 00:40:45.801
Onorato:
It's about ten commands

00:40:45.801 --> 00:40:47.968
and you have to rebase something
somewhere.

00:40:47.968 --> 00:40:49.801
Guy: Yeah, so just create
the branch.

00:40:49.801 --> 00:40:51.767
Never forget about creating
a branch.

00:40:51.767 --> 00:40:53.834
Onorato: So we're going
to add the file to Git.

00:40:53.834 --> 00:40:55.167
Guy:
Yeah, so now that we--

00:40:55.167 --> 00:40:57.200
Onorato: Or add
the directory rather.

00:40:57.200 --> 00:40:58.300
Guy: Yeah, so--

00:40:58.300 --> 00:40:59.801
Onorato: Status shows us
all our new files.

00:40:59.801 --> 00:41:01.267
Guy: Let's back up
right now.

00:41:01.267 --> 00:41:02.801
Onorato: Oh, we didn't do that.
Guy: No.

00:41:02.801 --> 00:41:04.734
Oh, did you show
the [indistinct]?

00:41:04.734 --> 00:41:05.934
Onorato: Yeah,
we did the commit.

00:41:05.934 --> 00:41:07.200
It's just that's all
we had to do.

00:41:07.200 --> 00:41:08.968
Guy: Okay. Anyway,
for those of you who know Git,

00:41:08.968 --> 00:41:11.234
we just staged the files
in UNIX.

00:41:11.234 --> 00:41:13.734
For those who don't,
just, I don't know,

00:41:13.734 --> 00:41:15.634
go read a book about Git
and you'll understand.

00:41:15.634 --> 00:41:17.934
Anyway, so the--the point is,
you know,

00:41:17.934 --> 00:41:19.100
in Git,
there are several stages

00:41:19.100 --> 00:41:20.234
where your files live.

00:41:20.234 --> 00:41:21.534
So you modify the files.

00:41:21.534 --> 00:41:23.534
Then you have to go Git add
to put them in something

00:41:23.534 --> 00:41:24.767
called the index.

00:41:24.767 --> 00:41:27.033
So you repo start,
my branch,

00:41:27.033 --> 00:41:29.133
then you--you--you modify
your files.

00:41:29.133 --> 00:41:30.601
You do Git add.

00:41:30.601 --> 00:41:32.534
You put them in the index.

00:41:32.534 --> 00:41:34.434
And when you're ready,
you do a Git commit.

00:41:34.434 --> 00:41:36.033
The fun part
about a Git commit

00:41:36.033 --> 00:41:39.133
is that it commits the files
on your machine.

00:41:39.133 --> 00:41:41.167
So they're still
on your machine

00:41:41.167 --> 00:41:42.434
for some reason.

00:41:42.434 --> 00:41:44.801
So here, Joe is just adding
the commitments edge

00:41:44.801 --> 00:41:46.901
and you can see the comments
at the bottom,

00:41:46.901 --> 00:41:47.934
everything that we did.

00:41:47.934 --> 00:41:50.067
So we just added
a bunch of files.

00:41:50.067 --> 00:41:52.501
That's all the files
in the project.

00:41:52.501 --> 00:41:55.400
And when we're ready,
we can finish the commit.

00:41:55.400 --> 00:41:57.901
So now files
are committed locally.

00:41:57.901 --> 00:42:01.200
And we need to upload them
to the Android Project.

00:42:01.200 --> 00:42:04.234
So for that, we use the comment
called "repo upload."

00:42:04.234 --> 00:42:06.300
And repo upload is really smart
and figures out

00:42:06.300 --> 00:42:09.067
that you have commits
in your current branch.

00:42:09.067 --> 00:42:10.367
It backs--
Onorato: It asks you--

00:42:10.367 --> 00:42:12.000
it says, "would you like
to upload those?"

00:42:12.000 --> 00:42:13.934
Guy: Yes. So yes.

00:42:13.934 --> 00:42:17.033
And then--go ahead.

00:42:17.033 --> 00:42:19.901
Onorato:
That's interesting.

00:42:19.901 --> 00:42:23.467
Guy: The remote--oh, do you have
the SSH key?

00:42:23.467 --> 00:42:26.167
Onorato: Yeah.
Guy: Huh. Try again.

00:42:26.167 --> 00:42:28.167
[laughter]

00:42:28.167 --> 00:42:29.667
Isn't working out.

00:42:29.667 --> 00:42:31.300
Onorato: Huh. All right.
Well, uh...

00:42:31.300 --> 00:42:32.634
Guy: Uh, you don't have
the key.

00:42:32.634 --> 00:42:33.734
Onorato: I don't have
the key.

00:42:33.734 --> 00:42:34.934
Guy: Well, let's do that
right now.

00:42:34.934 --> 00:42:36.400
Go to the web site
and put the key in.

00:42:36.400 --> 00:42:37.934
Onorato: Oh, yeah.
Guy: Uh...

00:42:37.934 --> 00:42:41.467
Onorato: Here's my public key
if you guys all want to see it.

00:42:41.467 --> 00:42:42.767
[laughter]

00:42:42.767 --> 00:42:43.801
Guy: I'm pretty sure
the country--

00:42:43.801 --> 00:42:45.000
Oh, but they will have
the video.

00:42:45.000 --> 00:42:47.767
They'll show your key.

00:42:47.767 --> 00:42:49.534
Onorato: I'm not going
to open my private key.

00:42:49.534 --> 00:42:52.267
Just the public one.

00:42:52.267 --> 00:42:54.767
I hope that's the public one.
Yeah.

00:42:54.767 --> 00:42:58.501
[laughter]

00:42:58.501 --> 00:42:59.934
Guy: You'll have
to do that yourself.

00:42:59.934 --> 00:43:02.501
So when you want
to--to--to deal with repo--

00:43:02.501 --> 00:43:03.968
and I'm sure
there's a good reason,

00:43:03.968 --> 00:43:05.801
but I was never told
the reason--

00:43:05.801 --> 00:43:08.601
you need
to put your public SSH key

00:43:08.601 --> 00:43:10.801
in your account.

00:43:10.801 --> 00:43:12.033
So let's do that.

00:43:12.033 --> 00:43:14.701
Onorato: So, yeah,
if you go to the settings tab...

00:43:14.701 --> 00:43:15.968
Guy: So let's review the--
Onorato: SSH Keys...

00:43:15.968 --> 00:43:17.701
Guy: Yeah,
review.source.android.com.

00:43:17.701 --> 00:43:20.868
Onorato: Oh, yeah,
or r.android.com also works too.

00:43:20.868 --> 00:43:23.701
Paste that in there.

00:43:23.701 --> 00:43:26.200
Click "Add."

00:43:26.200 --> 00:43:29.868
Let's go back
and try that again.

00:43:29.868 --> 00:43:32.100
Guy: So all the--
all of that, like, you know,

00:43:32.100 --> 00:43:33.501
the SSH Keys
that explain--

00:43:33.501 --> 00:43:35.067
if you go to
source.android.com

00:43:35.067 --> 00:43:36.567
they explain everything.

00:43:36.567 --> 00:43:39.434
Onorato: Here we go.
Okay, it worked.

00:43:39.434 --> 00:43:42.567
Guy: Okay, it worked. So now
the code review is online.

00:43:42.567 --> 00:43:44.334
Onorato: The code review's
online, yeah.

00:43:44.334 --> 00:43:45.901
If anybody here wants
to go comment on it,

00:43:45.901 --> 00:43:47.968
you can heckle me.

00:43:47.968 --> 00:43:49.167
Guy: Actually you can.

00:43:49.167 --> 00:43:50.434
Onorato: Yeah, you really can.
This is live.

00:43:50.434 --> 00:43:51.734
Guy: We welcome comments.

00:43:51.734 --> 00:43:53.934
You know, you can look
at changes from other people

00:43:53.934 --> 00:43:56.667
and say that you disagree with
them, that you agree with them,

00:43:56.667 --> 00:43:57.968
so, you know,
if we see, like,

00:43:57.968 --> 00:44:00.701
that 20 people from the outside
said yes to a change,

00:44:00.701 --> 00:44:03.834
then, you know, maybe it's a
good idea to accept the change.

00:44:03.834 --> 00:44:05.801
So now it's my turn.
Joe's work is done.

00:44:05.801 --> 00:44:07.501
Onorato: Actually I need
to add you as a reviewer.

00:44:07.501 --> 00:44:08.801
Guy: Oh, yeah.

00:44:08.801 --> 00:44:09.901
Well--
Onorato: So this--

00:44:09.901 --> 00:44:10.901
Guy: You don't re--
Okay, you can.

00:44:10.901 --> 00:44:12.000
Onorato:
Yeah, let me do it.

00:44:12.000 --> 00:44:13.334
Because this is
what you guys would do.

00:44:13.334 --> 00:44:15.133
You'd see it's up--
I've uploaded it.

00:44:15.133 --> 00:44:16.934
The owner is me.

00:44:16.934 --> 00:44:19.167
And I'm gonna
put in...

00:44:19.167 --> 00:44:20.667
in here.

00:44:20.667 --> 00:44:23.834
Guy: And if you don't know who
should be reviewing your change,

00:44:23.834 --> 00:44:25.000
just don't
put anything.

00:44:25.000 --> 00:44:27.200
We do receive emails,
we know that, you know,

00:44:27.200 --> 00:44:28.534
new changes
are coming in.

00:44:28.534 --> 00:44:30.467
And from time to time
we go look at them,

00:44:30.467 --> 00:44:32.234
and we add ourselves
as reviewers.

00:44:32.234 --> 00:44:33.601
Anyway, so--

00:44:33.601 --> 00:44:34.667
Onorato: I'll add him;
it'll send him an email.

00:44:34.667 --> 00:44:36.200
Guy: So add reviewer.
There you go.

00:44:36.200 --> 00:44:37.200
Onorato: All right.
Go ahead.

00:44:37.200 --> 00:44:39.067
Guy: I'm now a reviewer.

00:44:39.067 --> 00:44:40.701
So I switch to my machine.

00:44:40.701 --> 00:44:42.801
I'm already logged in
on Gerrit,

00:44:42.801 --> 00:44:44.367
so the exact same tool.

00:44:44.367 --> 00:44:47.234
And if I go
to my changes...

00:44:47.234 --> 00:44:50.834
Reviewable...

00:44:50.834 --> 00:44:52.701
Yeah, it doesn't
like Safari sometimes.

00:44:52.701 --> 00:44:53.901
Anyway.

00:44:53.901 --> 00:44:55.067
Onorato: Oh, this whole thing,
by the way,

00:44:55.067 --> 00:44:57.100
is written using
Google Web Toolkit, too.

00:44:57.100 --> 00:44:59.067
It's by a guy,
Sean Pierce.

00:44:59.067 --> 00:45:01.067
He's on our team,
he's fantastic.

00:45:01.067 --> 00:45:06.000
Guy: Okay, so where is
your change?

00:45:06.000 --> 00:45:07.133
Here we go.

00:45:07.133 --> 00:45:09.334
So that's Joe's change,
and you can see

00:45:09.334 --> 00:45:11.734
that all those
other changes are changes

00:45:11.734 --> 00:45:15.534
that people made
to the framework

00:45:15.534 --> 00:45:17.133
that I could review,

00:45:17.133 --> 00:45:19.133
but it's not necessarily my job
to review those changes.

00:45:19.133 --> 00:45:22.133
But they still appear for me
as changes I can review.

00:45:22.133 --> 00:45:25.701
So let's go
look at Joe's change.

00:45:25.701 --> 00:45:28.701
And it looks exactly the same
as Joe's UIs.

00:45:28.701 --> 00:45:32.234
And actually, someone commented
on the--on the change

00:45:32.234 --> 00:45:33.501
and gave it a +1.

00:45:33.501 --> 00:45:34.567
Onorato: Good for you.

00:45:34.567 --> 00:45:36.334
Guy: Thanks,
whoever you are, Frank.

00:45:36.334 --> 00:45:37.701
[laughter]

00:45:37.701 --> 00:45:39.033
But actually, you know,
that's nice 'cause--

00:45:39.033 --> 00:45:40.033
Oh, you can see that--

00:45:40.033 --> 00:45:41.267
So his comment says,

00:45:41.267 --> 00:45:42.868
"Looks good to me,
but someone else must approve."

00:45:42.868 --> 00:45:44.000
It's a canned comment.

00:45:44.000 --> 00:45:45.434
So that means
he thinks that, you know,

00:45:45.434 --> 00:45:46.834
it's a good thing to have
in the platform,

00:45:46.834 --> 00:45:48.934
but he doesn't have
the approval rights.

00:45:48.934 --> 00:45:52.200
So somebody like,
you know, Joe or I,

00:45:52.200 --> 00:45:54.300
have to go ahead
and give the approval.

00:45:54.300 --> 00:45:57.634
So here now I can look
at all the files I have--

00:45:57.634 --> 00:45:59.534
Looks good.

00:45:59.534 --> 00:46:04.534
But actually I see here that
Joe forgot to put the makefile.

00:46:04.534 --> 00:46:06.701
'Cause we use Make
in the open source project,

00:46:06.701 --> 00:46:08.334
so it probably tells me

00:46:08.334 --> 00:46:11.234
that Joe never built that code
in our platform.

00:46:11.234 --> 00:46:14.634
[laughter]

00:46:14.634 --> 00:46:17.501
I promise
we never do that.

00:46:17.501 --> 00:46:18.934
So let's--

00:46:18.934 --> 00:46:22.067
I will say "no score" because
I do appreciate the patch,

00:46:22.067 --> 00:46:24.300
I want the patch to end up
in the--in the buil--

00:46:24.300 --> 00:46:25.868
in the framework,
so I say "no score,"

00:46:25.868 --> 00:46:26.868
and I will
leave a comment.

00:46:26.868 --> 00:46:28.567
Here I could say
that I would prefer

00:46:28.567 --> 00:46:29.734
that you didn't
submit this.

00:46:29.734 --> 00:46:31.400
That means I disagree with you,
but, you know,

00:46:31.400 --> 00:46:32.667
you could
convince me otherwise.

00:46:32.667 --> 00:46:34.234
"Do not submit"--

00:46:34.234 --> 00:46:37.000
You're really wrong and I don't
want to hear about it anymore.

00:46:37.000 --> 00:46:38.634
Onorato: And actually, the
"do not submit" actually force--

00:46:38.634 --> 00:46:40.200
the system won't allow it
to be submitted

00:46:40.200 --> 00:46:41.200
if somebody's
reviewed it that way.

00:46:41.200 --> 00:46:42.367
Guy: It's gone.

00:46:42.367 --> 00:46:44.701
We have total control
over your stuff.

00:46:44.701 --> 00:46:45.868
Okay.

00:46:45.868 --> 00:46:47.100
Joe,

00:46:47.100 --> 00:46:50.667
geez, you didn't even
compile your stuff.

00:46:50.667 --> 00:46:55.033
Add the makefile.

00:46:55.033 --> 00:46:56.634
So I publish my comment.

00:46:56.634 --> 00:46:59.501
You can see here
that my comment was added.

00:46:59.501 --> 00:47:02.667
And the score is still zero.
Let's go back to Joe's machine.

00:47:02.667 --> 00:47:06.934
Onorato: So I've got
my makefile all ready.

00:47:06.934 --> 00:47:08.367
Guy: Yeah,
especially because

00:47:08.367 --> 00:47:11.701
maybe you know how to write
a makefile, but I have no idea.

00:47:11.701 --> 00:47:14.000
Onorato: If you guys use the
build system that's my fault.

00:47:14.000 --> 00:47:15.601
If home screen is his fault,
the build scr--

00:47:15.601 --> 00:47:19.033
build system is my fault.

00:47:19.033 --> 00:47:22.100
Here's what
the app make files look like.

00:47:22.100 --> 00:47:25.200
This is sample code,
here's the name of the app.

00:47:25.200 --> 00:47:28.501
This one here says it's being
built against the SDK

00:47:28.501 --> 00:47:31.200
as opposed
to the private APIs.

00:47:31.200 --> 00:47:34.100
Guy: Which is a good thing.
Onorato: Which is a good thing.

00:47:34.100 --> 00:47:35.567
Guy: Okay, so now
we've done that.

00:47:35.567 --> 00:47:39.834
We need to modify the--
the patch that Joe applauded,

00:47:39.834 --> 00:47:43.634
and that's where many people
make the mistake.

00:47:43.634 --> 00:47:46.400
And I do the same
quite often, actually.

00:47:46.400 --> 00:47:49.567
Because of the way Git works,
if you create--

00:47:49.567 --> 00:47:52.100
if you do a new commit to commit
the changes you just did,

00:47:52.100 --> 00:47:55.334
then repo will treat
the old commit and the new one

00:47:55.334 --> 00:47:57.734
as two different changes,
which is not what we want.

00:47:57.734 --> 00:48:00.400
Onorato: So we're
gonna amend this.

00:48:00.400 --> 00:48:02.334
We're just gonna do git--

00:48:02.334 --> 00:48:04.767
Guy: So we add the file
to the staging area,

00:48:04.767 --> 00:48:09.334
and then we do commit with
the magic flag called "--amend."

00:48:09.334 --> 00:48:13.334
And that modifies the previous
commit with those new changes.

00:48:13.334 --> 00:48:16.901
So we still have only one commit
with all of our changes.

00:48:16.901 --> 00:48:19.501
And there's still one mistake
we can make after that.

00:48:19.501 --> 00:48:20.934
And that we often do.

00:48:20.934 --> 00:48:22.267
Onorato: We'll see
if we make it,

00:48:22.267 --> 00:48:23.834
'cause I don't know
what he's talking about.

00:48:23.834 --> 00:48:25.701
Guy: I'm sure you do.
Repo upload replace?

00:48:25.701 --> 00:48:26.868
Onorato: Oh, yeah.

00:48:26.868 --> 00:48:28.367
Guy: So if you do
a repo upload right now,

00:48:28.367 --> 00:48:31.100
it will create
another change,

00:48:31.100 --> 00:48:32.834
and, you know,
that will piss us off

00:48:32.834 --> 00:48:35.100
'cause now we have two changes
that are pretty much the same

00:48:35.100 --> 00:48:36.267
and we have to
go ahead and--

00:48:36.267 --> 00:48:37.567
Onorato: Figure out
what the other one is.

00:48:37.567 --> 00:48:39.400
Guy: Yeah, figure out
what the other one is, you know,

00:48:39.400 --> 00:48:41.667
take care of rejecting
one of them.

00:48:41.667 --> 00:48:44.000
So what you have to do is
"repo upload --replace."

00:48:44.000 --> 00:48:46.868
That means that you want
to modify the current change

00:48:46.868 --> 00:48:48.033
that you--
that you have on repo.

00:48:48.033 --> 00:48:49.801
Onorato: And you say
which project you want,

00:48:49.801 --> 00:48:52.000
which is the one
we're in right now.

00:48:52.000 --> 00:48:54.834
Guy: So here
you can indicate--

00:48:54.834 --> 00:48:56.667
You can see that
the number between brackets

00:48:56.667 --> 00:48:58.367
is the number
of the change

00:48:58.367 --> 00:49:00.300
in the Gerrit tool
on the web.

00:49:00.300 --> 00:49:01.634
It's prepopulated for you.

00:49:01.634 --> 00:49:03.934
Just make sure
that it's the right number.

00:49:03.934 --> 00:49:05.968
Onorato: It usually is.
Guy: It usually is.

00:49:05.968 --> 00:49:07.133
Onorato: It guesses, though.

00:49:07.133 --> 00:49:09.534
It's heuristic,
so it's not 100%.

00:49:09.534 --> 00:49:11.467
Now it's re-uploaded.
Guy: Now it's re-uploaded.

00:49:11.467 --> 00:49:14.634
My turn.

00:49:14.634 --> 00:49:19.167
And if I refresh the page...

00:49:19.167 --> 00:49:23.100
If Gerrit refreshes.

00:49:23.100 --> 00:49:25.734
Popular. A bunch of people
like to comment on bugs.

00:49:25.734 --> 00:49:26.934
Onorato: You can
see it reset the--

00:49:26.934 --> 00:49:28.200
Go back up
to the grid, there.

00:49:28.200 --> 00:49:31.734
You can see it reset the--
all the statuses.

00:49:31.734 --> 00:49:33.234
Guy: Yeah, because
we changed the code,

00:49:33.234 --> 00:49:36.734
we contrast, you know,
what people said the last time.

00:49:36.734 --> 00:49:39.734
And here you can see that
we have the patch set number 2,

00:49:39.734 --> 00:49:41.400
so we can look
at the patch set number 1,

00:49:41.400 --> 00:49:43.801
and we can look at
the difference between the two.

00:49:43.801 --> 00:49:46.234
So now the patch set number two
has the makefile,

00:49:46.234 --> 00:49:48.133
so I am happy with it.

00:49:48.133 --> 00:49:49.634
I won't go through
the whole code.

00:49:49.634 --> 00:49:52.400
So when I'm happy
with it, I--

00:49:52.400 --> 00:49:56.100
I publish comments, and I say,
"Looks good to me, approved."

00:49:56.100 --> 00:49:57.267
Onorato: We're gonna
have to verify it too.

00:49:57.267 --> 00:49:59.200
Guy: Yes, but let's
approve first.

00:49:59.200 --> 00:50:02.300
So now it's approved.
It just means we can submit it.

00:50:02.300 --> 00:50:06.000
That doesn't mean that the code
will compile, or, you know,

00:50:06.000 --> 00:50:09.634
that--that it's not gonna
do bad things to the build.

00:50:09.634 --> 00:50:13.601
So at this stage,
what we're doing internally

00:50:13.601 --> 00:50:16.067
is we want to try
the patch locally.

00:50:16.067 --> 00:50:18.234
So here we have
those two comments we can use,

00:50:18.234 --> 00:50:21.100
either repo download
or the Git pull.

00:50:21.100 --> 00:50:24.200
And all I would have to do
is copy that,

00:50:24.200 --> 00:50:25.534
paste into my shell...

00:50:25.534 --> 00:50:27.734
Like, for instance,
here I'm in my source tree,

00:50:27.734 --> 00:50:29.834
I just paste
the comment I executed.

00:50:29.834 --> 00:50:33.133
This will bring the change that
Joe made into my source tree.

00:50:33.133 --> 00:50:36.234
I can compile it, I can run it,
I can see if it works,

00:50:36.234 --> 00:50:38.701
I can see if the build
is still going.

00:50:38.701 --> 00:50:41.200
And when it does,
I go back to "Publish Comment,"

00:50:41.200 --> 00:50:42.634
and I say "Verified."

00:50:42.634 --> 00:50:45.033
So I verified
that the change is correct.

00:50:45.033 --> 00:50:46.834
Onorato: This is actually
the big bottleneck process.

00:50:46.834 --> 00:50:48.234
It's not looking at the code,
it's actually downloading it all

00:50:48.234 --> 00:50:49.667
and building it.

00:50:49.667 --> 00:50:53.801
Guy: And now that the change
is both approved and verified,

00:50:53.801 --> 00:50:55.000
I have a new,
fancy button here

00:50:55.000 --> 00:50:57.300
that you will never
see on your machine,

00:50:57.300 --> 00:51:00.100
unless we start,
you know,

00:51:00.100 --> 00:51:03.801
trusting you guys
to become contributors.

00:51:03.801 --> 00:51:05.200
Proof contributors.

00:51:05.200 --> 00:51:07.334
So this is
a new submit button.

00:51:07.334 --> 00:51:09.734
So the cool thing here is that
once we are on the website,

00:51:09.734 --> 00:51:11.300
I don't have to,
you know, grab the code,

00:51:11.300 --> 00:51:14.734
do the patches locally
on my machine to patch our tree

00:51:14.734 --> 00:51:16.434
and then, you know,
do another commit.

00:51:16.434 --> 00:51:18.000
Joe doesn't have
anything to do.

00:51:18.000 --> 00:51:20.534
I just press this button
and that's it.

00:51:20.534 --> 00:51:22.701
The code is in the tree.

00:51:22.701 --> 00:51:24.300
We can see here,

00:51:24.300 --> 00:51:26.000
"Change has been
successfully merged,"

00:51:26.000 --> 00:51:30.501
and Joe's code is now available
on source.android.com.

00:51:30.501 --> 00:51:32.300
There's one last thing that
you want to do on your machine.

00:51:32.300 --> 00:51:34.934
The abandon.
Onorato: The abandon. Oh, yes.

00:51:34.934 --> 00:51:36.934
So, remember,
we started a branch.

00:51:36.934 --> 00:51:39.734
and if I continue
working on that branch,

00:51:39.734 --> 00:51:43.868
Oh, God, I don't even know what
happens. It just doesn't work.

00:51:43.868 --> 00:51:47.300
What happens is that I work
for about two weeks

00:51:47.300 --> 00:51:48.934
and then realize
that I'm on a branch

00:51:48.934 --> 00:51:50.067
and try to submit and...

00:51:50.067 --> 00:51:51.300
Guy: And you're screwed.

00:51:51.300 --> 00:51:52.767
Onorato: Then I'm completely
screwed, yeah.

00:51:52.767 --> 00:51:57.634
So this is repo abandon--this
project was called "sample,"

00:51:57.634 --> 00:52:00.100
and it's
in this project, so dot.

00:52:00.100 --> 00:52:02.267
And it did it, I guess.

00:52:02.267 --> 00:52:04.100
Guy: And now--
Can you go to the Git web?

00:52:04.100 --> 00:52:06.133
To see your code?
Onorato: Uh, yeah.

00:52:06.133 --> 00:52:07.901
Guy: So now everything's fine
on Joe's machine,

00:52:07.901 --> 00:52:09.033
we accepted the change.

00:52:09.033 --> 00:52:10.834
When you abandon
your change,

00:52:10.834 --> 00:52:12.467
the change really disappears
from your machine,

00:52:12.467 --> 00:52:14.033
so you want
to do a repo sync

00:52:14.033 --> 00:52:16.567
to bring back the change
that you just sent,

00:52:16.567 --> 00:52:18.534
and remove
from your machines.

00:52:18.534 --> 00:52:20.934
It's weird at first,
but that's how it works.

00:52:20.934 --> 00:52:25.934
So if we go
to development samples...

00:52:25.934 --> 00:52:28.667
So that's
the Web interface to Git.

00:52:28.667 --> 00:52:30.667
And you want to look
at the master tree.

00:52:30.667 --> 00:52:31.934
Onorato: This is master,
I think.

00:52:31.934 --> 00:52:33.200
Guy: Okay.

00:52:33.200 --> 00:52:37.133
Onorato: Tree, samples.

00:52:37.133 --> 00:52:38.834
And, uh...

00:52:38.834 --> 00:52:40.367
Guy: Are you sure
you're in master?

00:52:40.367 --> 00:52:41.634
Onorato: No.

00:52:41.634 --> 00:52:44.834
Well, anyway,
it's probably there.

00:52:44.834 --> 00:52:46.434
Guy: Let's prove
it's there.

00:52:46.434 --> 00:52:47.434
Onorato: Do you know
how to find it?

00:52:47.434 --> 00:52:50.167
Guy: Go back.

00:52:50.167 --> 00:52:51.701
Scroll down.

00:52:51.701 --> 00:52:53.234
Uh...

00:52:53.234 --> 00:52:55.667
Are you in master?

00:52:55.667 --> 00:52:57.067
Onorato: So this is
another thing.

00:52:57.067 --> 00:52:59.334
I worked for about three weeks,
and I was submitting to master,

00:52:59.334 --> 00:53:01.667
and I thought
I was working on Donut.

00:53:01.667 --> 00:53:03.167
So that was
a little bit hard, too.

00:53:03.167 --> 00:53:06.767
Guy: There we go, master.
Onorato: Oh, look at that.

00:53:06.767 --> 00:53:10.400
Guy: Doesn't even know
how to use a tool he wrote.

00:53:10.400 --> 00:53:12.100
Uh, well, somewhere.

00:53:12.100 --> 00:53:13.300
Onorato: Well,
there's some code somewhere.

00:53:13.300 --> 00:53:14.801
Guy: [laughs]

00:53:14.801 --> 00:53:16.467
This may be in Donut,
this may be in...

00:53:16.467 --> 00:53:17.801
Onorato: I wonder
if I put it in Donut.

00:53:17.801 --> 00:53:20.767
[laughter]

00:53:20.767 --> 00:53:24.467
Onorato: Huh. Well, I have
some homework to do after this.

00:53:24.467 --> 00:53:25.968
And find out
what build I broke.

00:53:25.968 --> 00:53:27.067
Guy: Well,
like we said,

00:53:27.067 --> 00:53:29.567
we are in the transition
to the new tools,

00:53:29.567 --> 00:53:31.067
but at least, you know,
that gives you an idea

00:53:31.067 --> 00:53:32.334
of what the workflow is.

00:53:32.334 --> 00:53:34.767
And again, this is exactly
what we do internally.

00:53:34.767 --> 00:53:37.100
The only difference is that
we don't use the public website.

00:53:37.100 --> 00:53:39.300
We have another instance
of this Gerrit thing,

00:53:39.300 --> 00:53:41.734
and we have another
Git tree internally,

00:53:41.734 --> 00:53:44.467
but the tools are the same,
the workflow's the same...

00:53:44.467 --> 00:53:46.734
Onorato: The scratching
of our heads is the same, so...

00:53:46.734 --> 00:53:48.300
Guy: The only difference
is that, you know,

00:53:48.300 --> 00:53:52.000
Joe could just upload his patch
and say, "Hey, I trust myself,"

00:53:52.000 --> 00:53:53.234
and submit it.

00:53:53.234 --> 00:53:55.601
Onorato: Yeah, and then
I break some branch. Okay.

00:53:55.601 --> 00:53:57.868
Guy: Like I did today.

00:53:57.868 --> 00:53:59.033
Onorato: So we're
just about out of time,

00:53:59.033 --> 00:54:00.934
but if you guys
have any questions...

00:54:00.934 --> 00:54:03.501
Guy: Why has nobody left us?
Onorato: Come up to the mic.

00:54:03.501 --> 00:54:07.067
Guy: Yeah, go to the mic
for the questions.

00:54:07.067 --> 00:54:13.000
[man speaking indistinctly]

00:54:15.968 --> 00:54:17.434
Okay, so it's--

00:54:17.434 --> 00:54:19.267
Yeah, it's a Git rip,
so use Git-fetch.

00:54:19.267 --> 00:54:20.267
[man speaking indistinctly]

00:54:20.267 --> 00:54:22.834
Tesh.
Stage? Stash?

00:54:22.834 --> 00:54:28.467
[man speaking indistinctly]

00:54:28.467 --> 00:54:30.634
Onorato: Oh, you mean you saw
how I was doing that there.

00:54:30.634 --> 00:54:31.667
Yeah, yeah.

00:54:31.667 --> 00:54:33.167
Guy: Okay.

00:54:33.167 --> 00:54:36.634
man: Um, when you've submitted
your first patch,

00:54:36.634 --> 00:54:40.267
and you're waiting
to get approved or not,

00:54:40.267 --> 00:54:42.868
is there a way that
you can do additional work,

00:54:42.868 --> 00:54:46.100
or are you kind of frozen in
case you have to amend it later?

00:54:46.100 --> 00:54:47.434
Onorato: That's actually--
Guy: The nice thing about Git.

00:54:47.434 --> 00:54:49.367
Onorato: What you don't
have to do in that case

00:54:49.367 --> 00:54:50.934
is do repo abandon.

00:54:50.934 --> 00:54:53.834
You can continue working
on top of your changes.

00:54:53.834 --> 00:54:55.667
The only thing is it gets
a little bit hairy

00:54:55.667 --> 00:54:56.868
if you have to
make changes.

00:54:56.868 --> 00:54:58.334
Guy: Well, you can
switch to another branch.

00:54:58.334 --> 00:54:59.334
Onorato: Or you could switch--
If it's totally unrelated,

00:54:59.334 --> 00:55:00.701
you can switch
to another branch.

00:55:00.701 --> 00:55:02.100
man: Okay,
I just want to make sure

00:55:02.100 --> 00:55:04.334
you get in a state where
you can amend without adding...

00:55:04.334 --> 00:55:05.701
Onorato: Yeah, you can--

00:55:05.701 --> 00:55:07.167
What you end up having to do--
and I've done this--

00:55:07.167 --> 00:55:09.133
is you--

00:55:09.133 --> 00:55:10.534
instead of doing amend,

00:55:10.534 --> 00:55:12.501
you make changes and you rebase
them into a different order

00:55:12.501 --> 00:55:15.501
and squash them
and everything and it works.

00:55:15.501 --> 00:55:17.200
All right.
Thank you.

00:55:17.200 --> 00:55:20.133
[applause]

