WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.962
[MUSIC PLAYING]

00:00:01.962 --> 00:00:03.087
NATHAN MARTZ: Hello, hello.

00:00:03.087 --> 00:00:04.930
How's it going, everybody?

00:00:04.930 --> 00:00:09.430
Thank you so much for coming to
Developer Day at this GDC 2018.

00:00:09.430 --> 00:00:10.560
I'm Nathan Martz.

00:00:10.560 --> 00:00:13.320
I'm a product lead on the
immersive computing platform

00:00:13.320 --> 00:00:14.232
team at Google.

00:00:14.232 --> 00:00:15.690
And we're going to
talk to you guys

00:00:15.690 --> 00:00:18.390
a little bit about
augmented reality.

00:00:18.390 --> 00:00:20.790
Before I do that though,
I'd like to ask everyone,

00:00:20.790 --> 00:00:23.190
please silence your
portable telephonic

00:00:23.190 --> 00:00:25.140
noisemakers so
that everyone else

00:00:25.140 --> 00:00:26.700
can hear the talk
just as clearly

00:00:26.700 --> 00:00:27.930
as you can hear your phone.

00:00:27.930 --> 00:00:29.840
So thank you so much.

00:00:29.840 --> 00:00:31.350
Again, my name is Nathan.

00:00:31.350 --> 00:00:34.410
And I want to start with a
very basic observation, which

00:00:34.410 --> 00:00:37.440
is that phones have become
dramatically more powerful

00:00:37.440 --> 00:00:38.610
over the last decade, right?

00:00:38.610 --> 00:00:40.230
We've all seen this happen.

00:00:40.230 --> 00:00:42.600
We have dramatically
faster multicore

00:00:42.600 --> 00:00:46.980
CPUs, programmable GPUs, more
storage, faster connections.

00:00:46.980 --> 00:00:49.320
And all these things have
dramatically changed the way

00:00:49.320 --> 00:00:51.226
that we build games on mobile.

00:00:51.226 --> 00:00:53.850
But one thing that hasn't really
changed very much in that time

00:00:53.850 --> 00:00:55.680
span is actually the
phone's understanding

00:00:55.680 --> 00:00:56.799
of the world itself.

00:00:56.799 --> 00:00:59.340
If you think about the sensors
that we have on phones today--

00:00:59.340 --> 00:01:02.300
camera, GPS, accelerometer--
that's basically

00:01:02.300 --> 00:01:04.500
what phones had a decade ago.

00:01:04.500 --> 00:01:07.260
Except until actually
very recently, which,

00:01:07.260 --> 00:01:09.660
thanks to the
confluence of increasing

00:01:09.660 --> 00:01:12.901
onboard compute and
increasing quality in sensors,

00:01:12.901 --> 00:01:14.400
we're at the cusp
of what we believe

00:01:14.400 --> 00:01:17.460
is going to be the next major
shift in mobile computing,

00:01:17.460 --> 00:01:19.020
and that's augmented reality.

00:01:19.020 --> 00:01:22.290
By combining the power
of a modern mobile CPU

00:01:22.290 --> 00:01:25.050
with advances in machine
learning and computer vision,

00:01:25.050 --> 00:01:28.260
we can actually help phones
see and understand the world

00:01:28.260 --> 00:01:30.060
the same way that we do.

00:01:30.060 --> 00:01:32.400
And as game developers,
that means you finally have

00:01:32.400 --> 00:01:35.430
an opportunity to leverage that
understanding to bring digital

00:01:35.430 --> 00:01:37.950
information-- your
characters and your IP--

00:01:37.950 --> 00:01:40.650
into the real world, right
where it's most accessible

00:01:40.650 --> 00:01:42.990
and useful for your players.

00:01:42.990 --> 00:01:44.640
So as a game developer,
this is going

00:01:44.640 --> 00:01:46.680
to open a lot of
awesome opportunities.

00:01:46.680 --> 00:01:48.780
You can fundamentally
blur the boundaries

00:01:48.780 --> 00:01:51.090
between the real
world and your game.

00:01:51.090 --> 00:01:53.970
You can bring your characters
into the same world

00:01:53.970 --> 00:01:55.799
that your players
already inhabit.

00:01:55.799 --> 00:01:57.840
You're going to be able
to let players experience

00:01:57.840 --> 00:01:59.430
the game from a
different perspective

00:01:59.430 --> 00:02:02.610
and actually leverage things
like the position of a device

00:02:02.610 --> 00:02:05.430
in space, the physical
structure of the environment

00:02:05.430 --> 00:02:07.830
that your player is in, to
create brand new mechanics,

00:02:07.830 --> 00:02:09.329
and mechanics that,
in turn, we hope

00:02:09.329 --> 00:02:12.240
will spawn entirely new genres.

00:02:12.240 --> 00:02:14.160
And because AR is
about the real world,

00:02:14.160 --> 00:02:17.100
it's not just about the places,
it's about the people in it.

00:02:17.100 --> 00:02:19.680
And you can leverage an
understanding of people

00:02:19.680 --> 00:02:21.840
to create interactive
experiences based

00:02:21.840 --> 00:02:24.750
on identity expression,
emotional context,

00:02:24.750 --> 00:02:28.044
and weave that into the larger
narrative for your game.

00:02:28.044 --> 00:02:30.210
We know this to be true
because actually, at Google,

00:02:30.210 --> 00:02:33.180
we've been doing smartphone
AR for about four years

00:02:33.180 --> 00:02:35.070
now, since 2014.

00:02:35.070 --> 00:02:37.695
The challenge, though, is that
historically, smartphones AR

00:02:37.695 --> 00:02:39.870
has required a custom
hardware sensor--

00:02:39.870 --> 00:02:41.490
we call it Project Tango.

00:02:41.490 --> 00:02:44.760
And that custom hardware sensor
limited the rate of adoption

00:02:44.760 --> 00:02:47.550
and the rate at which the
ecosystem could scale.

00:02:47.550 --> 00:02:50.670
But today, I'm here to talk
to you about a really exciting

00:02:50.670 --> 00:02:54.550
opportunity of doing augmented
reality at Android scale,

00:02:54.550 --> 00:02:58.050
thanks to a new
technology we call ARCore.

00:02:58.050 --> 00:03:01.740
And ARCore is a brand new
augmented reality library

00:03:01.740 --> 00:03:02.940
for Android.

00:03:02.940 --> 00:03:05.280
And as a developer, it
gives you three foundational

00:03:05.280 --> 00:03:07.630
and very powerful capabilities.

00:03:07.630 --> 00:03:09.570
The first of them
is motion tracking.

00:03:09.570 --> 00:03:12.870
ARCore actually combines
data from the color camera

00:03:12.870 --> 00:03:17.010
on your phone with the IMU
to compute a 3D position

00:03:17.010 --> 00:03:19.032
and orientation of
the phone in space.

00:03:19.032 --> 00:03:20.490
And that's what
actually allows you

00:03:20.490 --> 00:03:24.330
to place a digital character and
walk around it, get closer, get

00:03:24.330 --> 00:03:27.000
further away, and have that
character feel anchored

00:03:27.000 --> 00:03:30.960
in the real world, just like any
other piece of the environment.

00:03:30.960 --> 00:03:32.460
But even though
motion tracking lets

00:03:32.460 --> 00:03:33.918
you place objects
in the world, you

00:03:33.918 --> 00:03:36.450
need to understand the
world itself in order

00:03:36.450 --> 00:03:37.860
to create rich interactions.

00:03:37.860 --> 00:03:39.318
And so the second
thing we provide,

00:03:39.318 --> 00:03:41.040
we call environmental
understanding.

00:03:41.040 --> 00:03:43.150
And this is a set
of algorithms that

00:03:43.150 --> 00:03:45.330
allow you to do things
like get a sparse point

00:03:45.330 --> 00:03:47.970
cloud for the scene, do
ray casts against it,

00:03:47.970 --> 00:03:50.040
and even detect really
important components

00:03:50.040 --> 00:03:53.680
of the scene, like the
ground, or the table planes.

00:03:53.680 --> 00:03:56.340
And with that, you can actually
create your interactions,

00:03:56.340 --> 00:04:00.990
do physics, UI, all in a
3D spatially aware context.

00:04:00.990 --> 00:04:04.840
The last thing that we provide
is called lighting estimation.

00:04:04.840 --> 00:04:06.390
And this is a set
of algorithms that

00:04:06.390 --> 00:04:09.900
allows you to understand the
ambient lighting in the room.

00:04:09.900 --> 00:04:12.060
So you actually allow
your virtual objects

00:04:12.060 --> 00:04:13.770
to feel like they're
lit and shaded

00:04:13.770 --> 00:04:15.690
in a way that integrates
with the real world.

00:04:15.690 --> 00:04:17.606
And you could even use
it for behavioral cues,

00:04:17.606 --> 00:04:19.200
allowing your
characters to respond

00:04:19.200 --> 00:04:23.630
to changes in brightness in
the lighting environment.

00:04:23.630 --> 00:04:25.160
We know though
that, as developers,

00:04:25.160 --> 00:04:26.900
you care not just
about a technology,

00:04:26.900 --> 00:04:28.124
you need an audience.

00:04:28.124 --> 00:04:29.540
And so I'm very,
very proud to say

00:04:29.540 --> 00:04:32.990
that ARCore today runs on
more than 100 million Android

00:04:32.990 --> 00:04:33.920
phones.

00:04:33.920 --> 00:04:35.300
Many of these are
flagship phones

00:04:35.300 --> 00:04:37.611
from all of the major
ODMs in the ecosystem.

00:04:37.611 --> 00:04:39.110
So if you build an
ARCore app today,

00:04:39.110 --> 00:04:41.630
you can already reach
an audience at scale.

00:04:41.630 --> 00:04:44.000
And we're not content to
stop with 100 million phones.

00:04:44.000 --> 00:04:47.070
This year, we're partnering with
the entire Android ecosystem,

00:04:47.070 --> 00:04:49.310
many more OEMs, to
significantly increase

00:04:49.310 --> 00:04:53.072
that number of supported devices
over the course of the year.

00:04:53.072 --> 00:04:54.530
And we know also,
that a lot of you

00:04:54.530 --> 00:04:56.900
are now thinking about
bringing your games not

00:04:56.900 --> 00:04:59.490
just to the established
developed markets,

00:04:59.490 --> 00:05:01.680
but to China, which may
be new for a lot of you,

00:05:01.680 --> 00:05:03.092
but seen as a new opportunity.

00:05:03.092 --> 00:05:04.550
And so we're very
happy to announce

00:05:04.550 --> 00:05:06.770
that we're going to be
bringing ARCore to China

00:05:06.770 --> 00:05:10.010
later this year, in partnership
with three really key OEMs,

00:05:10.010 --> 00:05:13.014
Huawei, Xiaomi, and Samsung.

00:05:13.014 --> 00:05:14.180
Now all this stuff is great.

00:05:14.180 --> 00:05:15.638
But you're developers,
you actually

00:05:15.638 --> 00:05:17.420
want to make apps and games.

00:05:17.420 --> 00:05:19.640
And to do that, you need SDKs.

00:05:19.640 --> 00:05:23.400
And we have SDKs for every
IDE that you care about.

00:05:23.400 --> 00:05:25.820
So if you're a C programmer
working on your own game

00:05:25.820 --> 00:05:27.220
engine, we've got you covered.

00:05:27.220 --> 00:05:28.720
You want to do Java
app development,

00:05:28.720 --> 00:05:30.170
we've got an SDK for that.

00:05:30.170 --> 00:05:33.240
Or if you like a commercial game
engine like Unity or Unreal,

00:05:33.240 --> 00:05:35.330
we have really high
quality native integrations

00:05:35.330 --> 00:05:38.245
built in close partnerships
with both Unity and Epic.

00:05:38.245 --> 00:05:39.620
And all of this
is going to allow

00:05:39.620 --> 00:05:43.050
you to build your own app
really efficiently, effectively,

00:05:43.050 --> 00:05:45.140
and deploy it to an
audience that's already

00:05:45.140 --> 00:05:47.960
over 100 million devices large.

00:05:47.960 --> 00:05:51.080
Speaking of that, I want to talk
a little bit about some tips

00:05:51.080 --> 00:05:52.730
and tricks, things
that we've learned

00:05:52.730 --> 00:05:55.280
about how to build
AR-enabled apps efficiently

00:05:55.280 --> 00:05:56.082
and effectively.

00:05:56.082 --> 00:05:58.040
And these are all things
that I hope all of you

00:05:58.040 --> 00:06:00.530
are thinking about, ready to
get started building an app.

00:06:00.530 --> 00:06:03.170
And these will hopefully help
you avoid some common pitfalls,

00:06:03.170 --> 00:06:05.820
save you time, make
you more effective.

00:06:05.820 --> 00:06:08.570
So on the design side, a
few tips we want to share.

00:06:08.570 --> 00:06:09.950
The first and most
fundamental is

00:06:09.950 --> 00:06:12.110
that anyone building an
ARCore app really, really

00:06:12.110 --> 00:06:14.840
wants to think about
your onboarding flow.

00:06:14.840 --> 00:06:17.390
For your players, ARCore
is a brand new modality.

00:06:17.390 --> 00:06:20.170
Even basic things like,
you can walk around,

00:06:20.170 --> 00:06:21.980
are new ideas to your players.

00:06:21.980 --> 00:06:23.660
So make sure that
you really invest

00:06:23.660 --> 00:06:25.910
in onboarding that's
natural for your game,

00:06:25.910 --> 00:06:28.100
so that your players feel
comfortable and at home,

00:06:28.100 --> 00:06:30.989
and actually get the most
out of this new modality.

00:06:30.989 --> 00:06:32.530
The other-- the
second thing you want

00:06:32.530 --> 00:06:34.410
to think about a
lot in design is

00:06:34.410 --> 00:06:36.330
the scale of your experience.

00:06:36.330 --> 00:06:38.010
And most ARCore
experiences are going

00:06:38.010 --> 00:06:40.920
to fall into one of two buckets,
either a table scale or room

00:06:40.920 --> 00:06:42.150
scale.

00:06:42.150 --> 00:06:45.210
Table scale is great for,
basically, tabletop gaming.

00:06:45.210 --> 00:06:47.250
It's a very predictable
environment, right?

00:06:47.250 --> 00:06:49.212
Most people's tables
are of a similar size.

00:06:49.212 --> 00:06:50.670
They tend to not
have much clutter.

00:06:50.670 --> 00:06:52.309
They're all at a uniform height.

00:06:52.309 --> 00:06:54.600
And if you want a very, kind
of predictable experience,

00:06:54.600 --> 00:06:56.970
tabletop is a natural way to go.

00:06:56.970 --> 00:06:58.830
Room scale is kind
of the opposite.

00:06:58.830 --> 00:07:01.020
Rooms have a greater
diversity of objects.

00:07:01.020 --> 00:07:02.940
They have multiple planes
at multiple heights.

00:07:02.940 --> 00:07:04.648
There might be a table
in the room that's

00:07:04.648 --> 00:07:06.249
just part of the play surface.

00:07:06.249 --> 00:07:08.040
And this has a lot of
creative opportunity,

00:07:08.040 --> 00:07:10.680
in the same way that it
has technical complexity.

00:07:10.680 --> 00:07:11.910
And so when you think
about your experience,

00:07:11.910 --> 00:07:14.076
try to decide upfront, are
we fundamentally building

00:07:14.076 --> 00:07:17.550
a room scale, or fundamentally
building a table scale

00:07:17.550 --> 00:07:19.714
experience?

00:07:19.714 --> 00:07:21.630
As you think about either
one of these things,

00:07:21.630 --> 00:07:24.150
you're going to wind up
placing virtual objects that

00:07:24.150 --> 00:07:26.730
need to feel anchored
in the real world.

00:07:26.730 --> 00:07:29.370
And there's actually a
technical concept called anchors

00:07:29.370 --> 00:07:31.530
in all of our ARCore SDKs.

00:07:31.530 --> 00:07:34.136
And for you developers and
programmers in the room, what

00:07:34.136 --> 00:07:35.760
you want to really
be careful about is,

00:07:35.760 --> 00:07:38.730
every time you say, ah, this
is a virtual object that

00:07:38.730 --> 00:07:41.790
needs to make a really tight
connection to something

00:07:41.790 --> 00:07:43.290
in the physical
world, you always

00:07:43.290 --> 00:07:45.900
want to programmatically
create an anchor at that point.

00:07:45.900 --> 00:07:48.360
And once you do that, our
underlying motion tracking

00:07:48.360 --> 00:07:51.360
algorithms will make sure
that it stays fixed in space,

00:07:51.360 --> 00:07:54.540
even as the camera moves, even
as the lighting changes, all

00:07:54.540 --> 00:07:57.350
that sort of stuff.

00:07:57.350 --> 00:07:59.350
And of course, once you've
placed these objects,

00:07:59.350 --> 00:08:00.910
you want them to be believable.

00:08:00.910 --> 00:08:04.570
A lot of what we do is we create
believable synthetic realities.

00:08:04.570 --> 00:08:07.870
And in AR, that means that your
characters need to not just be

00:08:07.870 --> 00:08:10.840
lit well, they need to
be lit well in a way that

00:08:10.840 --> 00:08:12.130
matches the environment.

00:08:12.130 --> 00:08:14.980
You need to establish a
physical and visual identity

00:08:14.980 --> 00:08:17.230
consistent with the environment
that the player is in.

00:08:17.230 --> 00:08:19.210
And players can be
in any environment

00:08:19.210 --> 00:08:21.460
in the real world, which
is a pretty amazing amount

00:08:21.460 --> 00:08:22.330
of diversity.

00:08:22.330 --> 00:08:24.580
So there's really two things
you want to think about--

00:08:24.580 --> 00:08:26.820
shadowing and lighting,
in that order.

00:08:26.820 --> 00:08:29.230
With shadowing,
fundamentally, contact shadows

00:08:29.230 --> 00:08:31.960
are what establish
the visual connection

00:08:31.960 --> 00:08:34.282
between a virtual object
and the physical world.

00:08:34.282 --> 00:08:35.740
And so you really
want to make sure

00:08:35.740 --> 00:08:38.198
that you think about a good
contact shadow, or self shadow,

00:08:38.198 --> 00:08:40.018
in your ambient
occlusion solution,

00:08:40.018 --> 00:08:41.809
so that wherever your
character's feet are,

00:08:41.809 --> 00:08:45.070
or tentacles, or you know,
paws, whatever they are,

00:08:45.070 --> 00:08:46.570
that they're actually
making contact

00:08:46.570 --> 00:08:48.610
with the ground and
the world around them.

00:08:48.610 --> 00:08:51.580
And the second is the shading
on that character itself.

00:08:51.580 --> 00:08:53.770
You want to think about
physically-based rendering

00:08:53.770 --> 00:08:55.540
and image-based
lighting as a way

00:08:55.540 --> 00:08:57.700
to ensure that the shading
model on the object

00:08:57.700 --> 00:08:59.970
matches the real world
and that the lighting

00:08:59.970 --> 00:09:02.740
that the real world sees
is the same one that's

00:09:02.740 --> 00:09:03.940
applied to your character.

00:09:03.940 --> 00:09:08.000
And we've got some great samples
of all this stuff online.

00:09:08.000 --> 00:09:09.866
So now to get into
building your app,

00:09:09.866 --> 00:09:11.240
a few things I
want to highlight.

00:09:11.240 --> 00:09:12.650
First off, we know
for many of you,

00:09:12.650 --> 00:09:14.108
especially when
you're prototyping,

00:09:14.108 --> 00:09:17.110
or if you're an indie developer,
mobile-friendly 3D assets

00:09:17.110 --> 00:09:18.030
are a big challenge.

00:09:18.030 --> 00:09:20.710
Well, we have an entire
site called Poly,

00:09:20.710 --> 00:09:24.200
with thousands of free very,
very royalty-friendly--

00:09:24.200 --> 00:09:26.189
I'm sorry,
license-friendly 3D assets.

00:09:26.189 --> 00:09:28.730
Bruno, after me, is going to go
into this in a lot of detail.

00:09:28.730 --> 00:09:30.271
But definitely check
out Poly to help

00:09:30.271 --> 00:09:31.530
yourself get off the ground.

00:09:31.530 --> 00:09:33.520
We have runtime SDKS
and APIs for it.

00:09:33.520 --> 00:09:35.482
It's pretty awesome.

00:09:35.482 --> 00:09:36.940
You need to iterate
quickly, right?

00:09:36.940 --> 00:09:38.712
You actually want to
try your ideas out.

00:09:38.712 --> 00:09:41.170
And in some cases, you want to
try your ideas out in a room

00:09:41.170 --> 00:09:44.290
that you don't have available
to you at your desk.

00:09:44.290 --> 00:09:46.330
So we've actually extended
the Android Emulator

00:09:46.330 --> 00:09:49.420
that comes with Android Studio
with support for ARCore.

00:09:49.420 --> 00:09:53.170
So you can actually build an app
and test on a virtual AR device

00:09:53.170 --> 00:09:55.120
without leaving the
comfort of your desk,

00:09:55.120 --> 00:09:57.619
even though it takes you
to an entirely other place.

00:09:57.619 --> 00:09:59.410
And this lets you
iterate in your core game

00:09:59.410 --> 00:10:02.140
loop, your core ideas, within
seconds, rather than minutes.

00:10:02.140 --> 00:10:04.550
It's pretty awesome.

00:10:04.550 --> 00:10:07.740
And then the last two I'll talk
about is graphics debugging.

00:10:07.740 --> 00:10:10.000
AR is a fundamentally
visual medium,

00:10:10.000 --> 00:10:12.610
and as you get into especially
the lighting and shading,

00:10:12.610 --> 00:10:14.776
you're going to want to
debug your graphics pipeline

00:10:14.776 --> 00:10:16.940
and understand what's
going on under the hood.

00:10:16.940 --> 00:10:18.910
So we've built a
tool called GAPID,

00:10:18.910 --> 00:10:21.340
which allows you to
quickly visualize, inspect,

00:10:21.340 --> 00:10:24.520
and diagnose your rendering
in a way that's independent

00:10:24.520 --> 00:10:26.390
of the underlying hardware.

00:10:26.390 --> 00:10:29.470
So regardless of whether you
have an Exynos or Qualcomm,

00:10:29.470 --> 00:10:32.170
or whatever-based phone,
GAPID will work on it,

00:10:32.170 --> 00:10:34.347
with ARCore active.

00:10:34.347 --> 00:10:35.930
So the last thing I
want to talk about

00:10:35.930 --> 00:10:37.600
is actually launching your app.

00:10:37.600 --> 00:10:39.350
Of course, that's the
most important part,

00:10:39.350 --> 00:10:41.910
and there's two main
modalities in ARCore.

00:10:41.910 --> 00:10:44.690
We call them AR Required
and AR Optional.

00:10:44.690 --> 00:10:46.910
So the simplest model
is an AR Required app.

00:10:46.910 --> 00:10:50.950
And if you say, no matter what,
my app fundamentally requires

00:10:50.950 --> 00:10:52.970
ARCore, doesn't make
sense without it,

00:10:52.970 --> 00:10:54.860
you're an AR Required app.

00:10:54.860 --> 00:10:58.075
And for you, when you configure
your manifest for AR Required,

00:10:58.075 --> 00:10:59.450
on the Play Store,
we'll actually

00:10:59.450 --> 00:11:02.660
make sure that only
ARCore certified devices

00:11:02.660 --> 00:11:03.952
can see that app listing entry.

00:11:03.952 --> 00:11:05.535
So you don't have
to worry about users

00:11:05.535 --> 00:11:07.382
downloading it and not
being able to use it.

00:11:07.382 --> 00:11:08.840
And in fact, for
those users, we'll

00:11:08.840 --> 00:11:12.545
bundle the core AR services in
with the download of your app,

00:11:12.545 --> 00:11:14.420
so that as soon as that
download is finished,

00:11:14.420 --> 00:11:15.503
the user is ready to play.

00:11:15.503 --> 00:11:18.350
You don't need to do any extra
initialization or checking.

00:11:18.350 --> 00:11:20.007
You can just get started.

00:11:20.007 --> 00:11:21.590
Many of you, though,
are going to want

00:11:21.590 --> 00:11:24.800
to use AR in an optional
fashion as an enhancement

00:11:24.800 --> 00:11:27.020
to an app that runs on a
wider variety of platforms,

00:11:27.020 --> 00:11:29.455
maybe the entirety of
the Android ecosystem.

00:11:29.455 --> 00:11:31.580
And for you, we have the
similar manifest settings,

00:11:31.580 --> 00:11:34.320
where you can say, I support
ARCore, but it's optional.

00:11:34.320 --> 00:11:38.210
And what you'll need to
use is some APIs in our SDK

00:11:38.210 --> 00:11:42.350
that allow you to check to see,
is this device ARCore capable,

00:11:42.350 --> 00:11:44.600
are the ARCore
services installed?

00:11:44.600 --> 00:11:46.790
And if it is capable, but
they're not installed,

00:11:46.790 --> 00:11:48.770
we actually have a
nice pop-up dialog box

00:11:48.770 --> 00:11:51.200
where users can
install those services

00:11:51.200 --> 00:11:53.070
without leaving your app.

00:11:53.070 --> 00:11:55.670
So you're not giving up traffic,
you're not losing engagement.

00:11:55.670 --> 00:11:58.210
You're still able to
add ARCore at scale.

00:11:58.210 --> 00:12:00.044
Kind of whichever
modality you want to use.

00:12:00.044 --> 00:12:02.210
And of course we're all
gamers here, right, not just

00:12:02.210 --> 00:12:03.020
game developers.

00:12:03.020 --> 00:12:05.890
And if you want to experience
ARCore for yourself,

00:12:05.890 --> 00:12:09.200
live today, we have over
100 apps on the Play Store

00:12:09.200 --> 00:12:10.976
that are all built
on top of ARCore,

00:12:10.976 --> 00:12:12.600
built from some of
the best developers.

00:12:12.600 --> 00:12:14.600
In fact, I think a number
of people in this room

00:12:14.600 --> 00:12:15.750
are part of this list.

00:12:15.750 --> 00:12:17.900
So go to the Play
Store, check out ARCore,

00:12:17.900 --> 00:12:20.510
and you'll find a number
of great, really, really

00:12:20.510 --> 00:12:22.890
exciting, innovative apps
and games to check out.

00:12:22.890 --> 00:12:24.723
So with that, I want
to thank you very much,

00:12:24.723 --> 00:12:26.374
and hand it over to Bruno.

00:12:26.374 --> 00:12:28.734
[APPLAUSE]

00:12:32.510 --> 00:12:34.210
BRUNO OLIVEIRA: Thanks, Nathan.

00:12:34.210 --> 00:12:34.900
All right.

00:12:34.900 --> 00:12:38.217
So we're going to talk
about the Poly API.

00:12:38.217 --> 00:12:40.300
When I was a kid, I always
liked to develop games.

00:12:40.300 --> 00:12:43.000
I think games is something
that I've always been doing.

00:12:43.000 --> 00:12:46.180
And, well, this was back
in the times of BASIC.

00:12:46.180 --> 00:12:47.920
And my friends and
I would get together

00:12:47.920 --> 00:12:50.470
and we would try to
make a bunch of games.

00:12:50.470 --> 00:12:52.450
We kind of knew the
programming part,

00:12:52.450 --> 00:12:54.520
but we really had some
difficulty with the art.

00:12:54.520 --> 00:12:56.560
So often, we would
come up with a game,

00:12:56.560 --> 00:12:59.980
and then we would have
like this nice code,

00:12:59.980 --> 00:13:01.890
but then we would
imagine-- oh, imagine

00:13:01.890 --> 00:13:04.450
this really epic
dragon comes out

00:13:04.450 --> 00:13:05.740
at the player on this scene.

00:13:05.740 --> 00:13:08.416
But the reality of our graphics
were something more like that.

00:13:08.416 --> 00:13:09.982
[LAUGHTER]

00:13:09.982 --> 00:13:11.440
Sometimes you can
work around that.

00:13:11.440 --> 00:13:14.140
You know, sometimes you can
say, oh, that's not a dragon.

00:13:14.140 --> 00:13:16.300
That's more like
a slug like thing.

00:13:16.300 --> 00:13:19.180
Sometimes you can work
around that stuff.

00:13:19.180 --> 00:13:20.560
But other times, you can't.

00:13:20.560 --> 00:13:23.080
So I'm the kind of developer
who really likes cubes.

00:13:23.080 --> 00:13:24.919
So with my skills,
I could develop

00:13:24.919 --> 00:13:27.460
a game that's about a cube that
shoots other cubes to protect

00:13:27.460 --> 00:13:28.835
those bigger cubes
from being hit

00:13:28.835 --> 00:13:33.010
by the smaller cubes against
a background of cubes.

00:13:33.010 --> 00:13:35.860
You should think that there's no
way that that's a viable game.

00:13:35.860 --> 00:13:36.950
You would be wrong.

00:13:36.950 --> 00:13:40.940
I introduce you to Cubic Pilot.

00:13:40.940 --> 00:13:43.460
Not only is this thing
a thing, but Google,

00:13:43.460 --> 00:13:45.230
in some official
capacity, actually

00:13:45.230 --> 00:13:49.730
endorsed it, because it's a
sample for the Play Games API.

00:13:49.730 --> 00:13:51.290
What I'm saying
with this is that,

00:13:51.290 --> 00:13:54.140
we, as developers,
we all have the book.

00:13:54.140 --> 00:13:55.940
And we have all read that book.

00:13:55.940 --> 00:13:57.470
And I have that--

00:13:57.470 --> 00:14:00.750
and we know that sometimes
the best way to do--

00:14:00.750 --> 00:14:02.450
sometimes the only
way to do games

00:14:02.450 --> 00:14:05.850
is to apologize for
some lack of graphics.

00:14:05.850 --> 00:14:07.540
So some people,
when I show this,

00:14:07.540 --> 00:14:09.800
what they tell me is, have
you heard about something

00:14:09.800 --> 00:14:11.420
called money?

00:14:11.420 --> 00:14:14.892
And I'm like, no,
tell me about it.

00:14:14.892 --> 00:14:16.850
And they say, well, money
is this magical thing

00:14:16.850 --> 00:14:20.310
that you can exchange
for goods and services.

00:14:20.310 --> 00:14:22.790
For example, if you don't
have assets, then instead

00:14:22.790 --> 00:14:25.130
of reading that book, you can
go and exchange your money

00:14:25.130 --> 00:14:27.170
for some assets that
somebody else has made.

00:14:27.170 --> 00:14:28.670
That's how the economy works.

00:14:28.670 --> 00:14:30.260
And I say, well,
that's interesting,

00:14:30.260 --> 00:14:33.600
but this is a traditional
asset acquisition model.

00:14:33.600 --> 00:14:36.020
And there are some problems
with that traditional asset

00:14:36.020 --> 00:14:37.130
acquisition model.

00:14:37.130 --> 00:14:41.190
One of them is that
it requires money.

00:14:41.190 --> 00:14:43.730
The second problem with
that asset acquisition model

00:14:43.730 --> 00:14:45.679
is cats.

00:14:45.679 --> 00:14:47.470
And by that, of course,
I mean, if you ever

00:14:47.470 --> 00:14:49.900
actually tried to
buy assets online,

00:14:49.900 --> 00:14:51.610
you can't just buy one cat.

00:14:51.610 --> 00:14:52.570
That's not a thing.

00:14:52.570 --> 00:14:54.460
You have to buy
Super Deluxe Cat Pack

00:14:54.460 --> 00:14:58.180
2000 with 700 fully-rigged
animated cats for a very

00:14:58.180 --> 00:14:59.320
high price.

00:14:59.320 --> 00:15:03.970
And I have nothing against cats,
but 700 might be a bit much.

00:15:03.970 --> 00:15:07.030
Third reason is prototyping.

00:15:07.030 --> 00:15:09.795
Sometimes, you're still in the
prototyping phase of your game.

00:15:09.795 --> 00:15:11.170
At this point, I
might not really

00:15:11.170 --> 00:15:14.170
know if I want to make
a game about cats,

00:15:14.170 --> 00:15:17.020
or spaceships, or maybe
cats that fly spaceships.

00:15:17.020 --> 00:15:17.860
Who knows?

00:15:17.860 --> 00:15:20.620
But anyway, I'm not ready to
commit to any particular cat,

00:15:20.620 --> 00:15:23.020
much less 700 of them.

00:15:23.020 --> 00:15:24.746
And the fourth
reason is runtime.

00:15:24.746 --> 00:15:26.620
What happens if you've
never actually thought

00:15:26.620 --> 00:15:29.020
about cats at all during
development, and now

00:15:29.020 --> 00:15:31.270
at runtime, the
user wants a cat?

00:15:31.270 --> 00:15:33.490
Of all times, now they want it.

00:15:33.490 --> 00:15:37.740
So how do you actually
load a cat at runtime?

00:15:37.740 --> 00:15:39.140
This is why I like Poly.

00:15:39.140 --> 00:15:42.230
So Poly is Google's
gallery of 3D assets,

00:15:42.230 --> 00:15:44.010
and there's everything there.

00:15:44.010 --> 00:15:46.640
So if you are a developer
making a game, you can go there,

00:15:46.640 --> 00:15:48.765
and you can find assets
for pretty much everything.

00:15:48.765 --> 00:15:51.310
If your game has cups of
coffee, if your game has knives,

00:15:51.310 --> 00:15:54.500
if your game has cameras,
space shuttle capsules,

00:15:54.500 --> 00:15:56.930
if your game in any
way involves mustaches,

00:15:56.930 --> 00:15:59.360
you're going to find
everything there.

00:15:59.360 --> 00:16:01.310
And how do those awesome
assets get there?

00:16:01.310 --> 00:16:03.220
Well, users can upload
them from Blocks--

00:16:03.220 --> 00:16:07.820
which is our 3D VR
asset creation app--

00:16:07.820 --> 00:16:10.550
from Tilt Brush, and people
can also upload OBJ files

00:16:10.550 --> 00:16:13.520
that they've made using Blender,
Maya, and other programs.

00:16:13.520 --> 00:16:16.310
Even I made my own contribution
there, as you can see.

00:16:16.310 --> 00:16:18.700
So if you ever need a
cube, you're covered.

00:16:18.700 --> 00:16:20.250
Just use that one.

00:16:20.250 --> 00:16:22.575
[LAUGHTER]

00:16:25.220 --> 00:16:27.170
And all of that comes at the--

00:16:27.170 --> 00:16:29.450
I'm sure you'll find
very reasonable price--

00:16:29.450 --> 00:16:31.760
of nothing, zero dollars.

00:16:31.760 --> 00:16:34.190
And if you mention this
talk, you get a 50% discount.

00:16:34.190 --> 00:16:35.420
[LAUGHTER]

00:16:35.420 --> 00:16:38.019
And the assets are free,
and they are licensed.

00:16:38.019 --> 00:16:40.310
Most of them are licensed
under Creative Commons, which

00:16:40.310 --> 00:16:42.830
means you can use them
for free in your app,

00:16:42.830 --> 00:16:45.080
and then all you have to do
is give appropriate credit

00:16:45.080 --> 00:16:47.420
to the authors.

00:16:47.420 --> 00:16:49.440
So Poly is great.

00:16:49.440 --> 00:16:51.380
How do we get that
stuff in your app?

00:16:51.380 --> 00:16:54.650
So it came to our attention
that developers love APIs.

00:16:54.650 --> 00:16:56.720
So we decided, why don't
we have an API for Poly?

00:16:56.720 --> 00:16:57.940
That makes sense, right?

00:16:57.940 --> 00:16:59.690
So we put together our
most creative minds

00:16:59.690 --> 00:17:01.023
to come up with a name for this.

00:17:01.023 --> 00:17:04.190
What are we going to
call this API for Poly?

00:17:04.190 --> 00:17:07.200
And what we came up
with was Poly API.

00:17:07.200 --> 00:17:08.950
So you can find all
about it on that URL.

00:17:08.950 --> 00:17:11.220
So it's an API
that lets you load

00:17:11.220 --> 00:17:13.859
those assets into your app.

00:17:13.859 --> 00:17:15.380
But what can that API do?

00:17:15.380 --> 00:17:18.050
So for example, this is
an example from ANIMVR.

00:17:18.050 --> 00:17:20.450
As you can see, you
can, at runtime,

00:17:20.450 --> 00:17:21.680
find out a bunch of assets.

00:17:21.680 --> 00:17:23.388
And then it can import
them into a scene,

00:17:23.388 --> 00:17:27.609
and then let the user use
them to create the scene.

00:17:27.609 --> 00:17:29.094
So how does the
API actually work?

00:17:29.094 --> 00:17:30.760
Whenever you make a
request to that API,

00:17:30.760 --> 00:17:32.800
it's going to be handled
by one of our blue robots

00:17:32.800 --> 00:17:33.490
in the data center.

00:17:33.490 --> 00:17:35.865
That's an actual picture of
what's going on in the server

00:17:35.865 --> 00:17:37.340
right now.

00:17:37.340 --> 00:17:40.030
And so you can use that API
to find the assets you want.

00:17:40.030 --> 00:17:42.160
You can specify
keyword, you can specify

00:17:42.160 --> 00:17:45.217
category type, complexity
of any format that you want.

00:17:45.217 --> 00:17:47.800
And then of course-- and this
is probably the important part--

00:17:47.800 --> 00:17:49.300
you can download
the assets and then

00:17:49.300 --> 00:17:50.540
import them into your scene.

00:17:53.320 --> 00:17:54.880
There's also a curation flag.

00:17:54.880 --> 00:17:56.290
So the curation
flag is something

00:17:56.290 --> 00:17:59.140
that indicates that the
asset has been evaluated

00:17:59.140 --> 00:18:02.620
by a human being in our
team, not a blue robot,

00:18:02.620 --> 00:18:05.470
and that it has been
determined to be a good asset.

00:18:05.470 --> 00:18:08.170
So if you want to filter
for only good assets,

00:18:08.170 --> 00:18:10.210
you can use that curation flag.

00:18:10.210 --> 00:18:13.870
It's the same flag that
filters the web page.

00:18:13.870 --> 00:18:16.576
The API is naturally
cross-platform.

00:18:16.576 --> 00:18:17.950
It's basically a
REST API, so you

00:18:17.950 --> 00:18:20.110
can access it from
basically any device that

00:18:20.110 --> 00:18:22.420
can do internet connections.

00:18:22.420 --> 00:18:24.730
If you're using
Unity or Unreal, we

00:18:24.730 --> 00:18:27.870
do have Poly Toolkit, which
is a full fledged tool

00:18:27.870 --> 00:18:30.130
kit for the engine
that wraps up the API

00:18:30.130 --> 00:18:33.640
and has some convenience helper
methods that can do everything

00:18:33.640 --> 00:18:36.430
from the queries to
importing and downloading.

00:18:36.430 --> 00:18:39.530
And if you're not
using Unity or Unreal,

00:18:39.530 --> 00:18:42.500
we also have samples for
many of the other platforms.

00:18:42.500 --> 00:18:46.840
So Android, ARCore, iOS,
SceneKit, ARKit, Web--

00:18:46.840 --> 00:18:49.862
so we have samples
for all of those.

00:18:49.862 --> 00:18:51.320
So this is what
the API looks like.

00:18:51.320 --> 00:18:52.730
It's basically
just a GET request.

00:18:52.730 --> 00:18:53.938
It has a bunch of parameters.

00:18:53.938 --> 00:18:57.670
So you can specify the key words
that you want to search for,

00:18:57.670 --> 00:19:00.120
if you want curated stuff or
not, and so on and so forth,

00:19:00.120 --> 00:19:02.510
just a GET API.

00:19:02.510 --> 00:19:06.624
What you get back is a JSON
file containing a description

00:19:06.624 --> 00:19:07.790
of the assets that we found.

00:19:07.790 --> 00:19:10.100
And then it has URLs to
download the actual files that

00:19:10.100 --> 00:19:12.140
make up that asset.

00:19:12.140 --> 00:19:13.250
So this is the workflow.

00:19:13.250 --> 00:19:16.209
Just list the assets, find
out the kind of assets

00:19:16.209 --> 00:19:17.750
that you want, then
decide which ones

00:19:17.750 --> 00:19:20.210
you want to import, then
download the asset files,

00:19:20.210 --> 00:19:22.190
and display the
asset in your scene.

00:19:22.190 --> 00:19:23.900
It's a pretty
straightforward workflow.

00:19:23.900 --> 00:19:26.140
This is an example of
Poly Toolkit running.

00:19:26.140 --> 00:19:27.890
So you're going to see
that, in Unity, you

00:19:27.890 --> 00:19:30.681
have this editor window
where you can select assets.

00:19:30.681 --> 00:19:32.930
And then you can click and
import them into your scene

00:19:32.930 --> 00:19:34.724
directly from the Unity UI.

00:19:34.724 --> 00:19:36.890
This is an example of
importing this garden directly

00:19:36.890 --> 00:19:37.730
from the Unity UI.

00:19:37.730 --> 00:19:40.080
It takes about three
clicks to do that,

00:19:40.080 --> 00:19:43.359
and then you have that
garden in your scene.

00:19:43.359 --> 00:19:45.400
There's also the runtime
API on the Poly Toolkit.

00:19:45.400 --> 00:19:48.830
So it's pretty much what you
would expect a C# API to be

00:19:48.830 --> 00:19:49.850
like.

00:19:49.850 --> 00:19:52.769
This is a request, for example,
to get some random cats.

00:19:52.769 --> 00:19:54.560
And if you run that
with the keyword "cat,"

00:19:54.560 --> 00:19:56.450
you get random cats.

00:19:56.450 --> 00:19:57.740
You can also be very specific.

00:19:57.740 --> 00:20:01.160
Like if you're very, very
picky in your taste for cats,

00:20:01.160 --> 00:20:03.470
you can specify any of
the filters you want,

00:20:03.470 --> 00:20:07.490
and then you're going to get
such gems as fancy, fancy cat,

00:20:07.490 --> 00:20:09.100
space cat, creative
cat, galactic cat,

00:20:09.100 --> 00:20:12.290
and a bunch of other ones.

00:20:12.290 --> 00:20:15.140
And there's a lot of
flexibility on the kinds of apps

00:20:15.140 --> 00:20:15.950
that you can build.

00:20:15.950 --> 00:20:17.850
For example, you can
build standalone apps,

00:20:17.850 --> 00:20:20.040
you can build VR apps,
you can build AR apps.

00:20:20.040 --> 00:20:23.965
So these low poly models
are great for AR apps.

00:20:23.965 --> 00:20:25.340
So if you're using
ARCore, that's

00:20:25.340 --> 00:20:29.180
a great way to load assets.

00:20:29.180 --> 00:20:31.130
We actually made a couple
of games with this.

00:20:31.130 --> 00:20:33.588
This is an escape-the-room game
that we made with this API.

00:20:33.588 --> 00:20:36.030
So it's pretty much like,
you're stuck in a room in VR,

00:20:36.030 --> 00:20:38.022
and then you have to
go and escape the room

00:20:38.022 --> 00:20:38.980
by solving the puzzles.

00:20:38.980 --> 00:20:41.165
It's a very cheesy game.

00:20:41.165 --> 00:20:43.040
And you can see that
you can use the objects,

00:20:43.040 --> 00:20:44.790
and add some lighting,
and you can already

00:20:44.790 --> 00:20:48.107
create some very
interesting effects with it.

00:20:48.107 --> 00:20:48.940
This is another one.

00:20:48.940 --> 00:20:51.100
You might want to create
this atmospheric VR

00:20:51.100 --> 00:20:53.470
game where you have to--
like, in this misty landscape.

00:20:53.470 --> 00:20:56.410
And then you have to go up
the stairs and find this cat.

00:20:56.410 --> 00:20:57.694
And then, I'm not sure.

00:20:57.694 --> 00:20:59.360
I didn't really think
this came through.

00:20:59.360 --> 00:20:59.860
[LAUGHTER]

00:20:59.860 --> 00:21:04.780
But presumably, the cat will
ignore you at that point.

00:21:04.780 --> 00:21:07.080
I'm just illustrating
the wide breadth of games

00:21:07.080 --> 00:21:09.610
that you can make.

00:21:09.610 --> 00:21:11.270
So what this means
for me, of course,

00:21:11.270 --> 00:21:13.270
is that I can stop
making games like that.

00:21:13.270 --> 00:21:16.510
And hopefully, I can
step up my art assets

00:21:16.510 --> 00:21:19.520
and start making games
that are more like that,

00:21:19.520 --> 00:21:20.680
all using the Poly API.

00:21:20.680 --> 00:21:23.590
So go ahead and check out
developers.google.com/poly

00:21:23.590 --> 00:21:26.350
so you can find more
information about our API.

00:21:26.350 --> 00:21:28.300
And I'm sure that your
players will like it.

00:21:28.300 --> 00:21:30.091
And speaking about
players, you know what's

00:21:30.091 --> 00:21:31.480
even better than one player?

00:21:31.480 --> 00:21:32.680
More than one player.

00:21:32.680 --> 00:21:34.222
So up next, I'd like
to invite Aaron,

00:21:34.222 --> 00:21:36.305
who's going to talk about
multiplayer game design.

00:21:36.305 --> 00:21:37.244
Thank you very much.

00:21:37.244 --> 00:21:38.055
[APPLAUSE]

00:21:38.055 --> 00:21:39.180
AARON CAMMARATA: All right.

00:21:39.180 --> 00:21:39.700
Nice job.

00:21:39.700 --> 00:21:40.825
Thanks for warming them up.

00:21:45.740 --> 00:21:47.300
Here's a question.

00:21:47.300 --> 00:21:50.570
Why do we play?

00:21:50.570 --> 00:21:54.770
Why do humans and hundreds
of other species play games?

00:21:54.770 --> 00:21:57.050
I mean, games are fun
and they're relaxing.

00:21:57.050 --> 00:22:00.980
But why have we
evolved to enjoy games?

00:22:00.980 --> 00:22:05.480
Well, for decades, scientists
thought the answer was that,

00:22:05.480 --> 00:22:08.060
by playing, young animals were
learning the skills that they

00:22:08.060 --> 00:22:11.330
would need as adults, hunting,
and stalking, fighting,

00:22:11.330 --> 00:22:13.280
and fleeing.

00:22:13.280 --> 00:22:16.190
And in the '80s, a
researcher testing this

00:22:16.190 --> 00:22:18.410
took some tiger cubs
and separated them

00:22:18.410 --> 00:22:21.080
while they were young and
kept them from playing.

00:22:21.080 --> 00:22:24.752
And as adults, those cats
could hunt just fine.

00:22:24.752 --> 00:22:26.960
But what they could not do,
and what they could never

00:22:26.960 --> 00:22:30.260
learn to do, was to be social.

00:22:30.260 --> 00:22:36.480
You see, play is not how
we learn physical skills.

00:22:36.480 --> 00:22:39.110
Play is how we
learn social skills.

00:22:39.110 --> 00:22:42.270
You see, survival is not
a single player game.

00:22:42.270 --> 00:22:45.450
A strong social system
is critical to succeeding

00:22:45.450 --> 00:22:48.060
in the wild, and play
offers us a safe place

00:22:48.060 --> 00:22:50.910
to build and nurture
our relationships.

00:22:50.910 --> 00:22:53.250
Ask anyone in a long-term
relationship and they

00:22:53.250 --> 00:22:57.250
will tell you, play
is critical to love.

00:22:57.250 --> 00:22:59.930
So if social skills
are the "why" of play,

00:22:59.930 --> 00:23:03.180
then as designers, we need to
deeply understand the "how"

00:23:03.180 --> 00:23:05.160
of human relationships.

00:23:05.160 --> 00:23:08.490
And that journey
starts with a number.

00:23:08.490 --> 00:23:12.180
Our social networks are
surprisingly consistent.

00:23:12.180 --> 00:23:15.090
Around the world, we
all have about 150

00:23:15.090 --> 00:23:17.100
stable and meaningful
relationships.

00:23:17.100 --> 00:23:19.440
And after that, we actually
run out of brainpower.

00:23:19.440 --> 00:23:21.510
Each new person
that we try to add

00:23:21.510 --> 00:23:23.700
pushes somebody
else out the back.

00:23:23.700 --> 00:23:25.890
It's known as Dunbar's number--

00:23:25.890 --> 00:23:28.080
and I see a few of you
nodding in recognition--

00:23:28.080 --> 00:23:31.350
after the scientist
who discovered it.

00:23:31.350 --> 00:23:33.780
Of course, not all friendships
are created equally.

00:23:33.780 --> 00:23:36.840
We separate our relationships
into different levels,

00:23:36.840 --> 00:23:39.000
and they're sorted by trust.

00:23:39.000 --> 00:23:40.650
The more I trust
you, the more I'm

00:23:40.650 --> 00:23:42.870
willing to invest
in our relationship,

00:23:42.870 --> 00:23:47.100
and the more willing I am to
show you my innermost self.

00:23:47.100 --> 00:23:49.590
This has the somewhat
unfortunate name

00:23:49.590 --> 00:23:51.870
of the social
penetration theory,

00:23:51.870 --> 00:23:55.170
and it too is remarkably
consistent around the world.

00:23:55.170 --> 00:23:57.570
All of us have about
five best friends

00:23:57.570 --> 00:23:59.730
that we trust implicitly.

00:23:59.730 --> 00:24:01.950
Around that, we have a
larger ring of friends,

00:24:01.950 --> 00:24:04.920
about 15, who we trust,
but not quite as much.

00:24:04.920 --> 00:24:09.700
And then a ring of 45 to 50,
and then that final ring of 150.

00:24:09.700 --> 00:24:11.910
And these layers are
very clearly separated

00:24:11.910 --> 00:24:14.070
from their neighbors,
defined by how much we

00:24:14.070 --> 00:24:17.590
trust the people in each group.

00:24:17.590 --> 00:24:21.090
This is the fundamental
truth of our social lives.

00:24:21.090 --> 00:24:23.850
First, we explore
safe topics together,

00:24:23.850 --> 00:24:29.070
to see if we like the same
food, or music, or games.

00:24:29.070 --> 00:24:31.120
Then we learn to
rely on one another.

00:24:31.120 --> 00:24:33.420
And finally, we learn
to trust one another.

00:24:33.420 --> 00:24:37.170
And trust is the lifeblood
of a relationship.

00:24:37.170 --> 00:24:40.980
So I wondered, if this is
the scientifically proven arc

00:24:40.980 --> 00:24:43.410
and structure of
human relationships,

00:24:43.410 --> 00:24:46.440
then as designers,
could we learn

00:24:46.440 --> 00:24:49.630
to use this to build a
better multiplayer game?

00:24:49.630 --> 00:24:52.590
Well, I've actually been at
Google for around two years,

00:24:52.590 --> 00:24:54.450
working on this problem.

00:24:54.450 --> 00:24:58.260
Along the way, I asked
Raph Koster about this,

00:24:58.260 --> 00:25:00.300
and he was intrigued
by the concept

00:25:00.300 --> 00:25:03.270
and agreed to join me in
trying to find an answer.

00:25:03.270 --> 00:25:06.180
Together, we made a list of
about 200 game mechanics.

00:25:06.180 --> 00:25:10.800
And for each one, we asked, how
much trust does this call for?

00:25:10.800 --> 00:25:13.230
The result, based
on the answer, we

00:25:13.230 --> 00:25:16.290
mapped it to each of the
stages of human relationship.

00:25:16.290 --> 00:25:18.955
And the result is a map
from real human trust

00:25:18.955 --> 00:25:21.700
to game mechanics.

00:25:21.700 --> 00:25:23.610
It's a brand new
design lens that I'm

00:25:23.610 --> 00:25:26.615
proud to share with you today
for the first time ever,

00:25:26.615 --> 00:25:30.810
and we call it the
trust spectrum.

00:25:30.810 --> 00:25:34.770
By building games that support
relationships at all levels,

00:25:34.770 --> 00:25:38.400
we found we could provide much
stickier and more compelling

00:25:38.400 --> 00:25:40.080
games for our players.

00:25:40.080 --> 00:25:42.810
What's more, because we
worked with the grain

00:25:42.810 --> 00:25:47.730
of human relationships as they
truly exist in the real world,

00:25:47.730 --> 00:25:49.410
people left the
games feeling more

00:25:49.410 --> 00:25:52.330
connected than they did before.

00:25:52.330 --> 00:25:54.010
So let me show you how.

00:25:54.010 --> 00:25:57.720
First, we took these stages
that become more intimate as you

00:25:57.720 --> 00:26:00.750
move up the scale, and laid
that across a new chart, left

00:26:00.750 --> 00:26:03.830
to right, like this.

00:26:03.830 --> 00:26:06.470
As we started to analyze
this big pile of mechanics

00:26:06.470 --> 00:26:09.890
we had made, we found that
they clustered into families,

00:26:09.890 --> 00:26:11.600
like this.

00:26:11.600 --> 00:26:15.740
Remember, each design axis
represents dozens of mechanics

00:26:15.740 --> 00:26:19.250
that impact player
trust in similar ways.

00:26:19.250 --> 00:26:22.100
For example, let's take
that top row, symmetry,

00:26:22.100 --> 00:26:24.530
which is the amount of
overlap in capabilities

00:26:24.530 --> 00:26:26.630
that players have in-game.

00:26:26.630 --> 00:26:31.240
Now, I'm talking about the rules
of the game, not player skill,

00:26:31.240 --> 00:26:32.060
here.

00:26:32.060 --> 00:26:33.560
Symmetry is about
whether we can all

00:26:33.560 --> 00:26:37.160
do the same things in-game,
or very different things.

00:26:37.160 --> 00:26:39.350
At low levels of trust,
everyone can pretty much

00:26:39.350 --> 00:26:41.070
do the same thing.

00:26:41.070 --> 00:26:43.550
Some of us might have
advantages in different areas,

00:26:43.550 --> 00:26:47.210
but any player in any role can
pretty much finish the game.

00:26:47.210 --> 00:26:48.740
At the medium
levels of trust, we

00:26:48.740 --> 00:26:50.960
get to things like
team-based shooters.

00:26:50.960 --> 00:26:53.090
We can all run and
gun, but each character

00:26:53.090 --> 00:26:55.640
brings something
unique to the team.

00:26:55.640 --> 00:26:57.680
At the highest
levels of trust, you

00:26:57.680 --> 00:27:00.680
have almost unique abilities,
like character classes

00:27:00.680 --> 00:27:02.490
in RPGs and MOBAs.

00:27:02.490 --> 00:27:05.210
At this extreme
level of asymmetry,

00:27:05.210 --> 00:27:07.070
you get interdependent
play strategies

00:27:07.070 --> 00:27:10.460
like tank, healer, and DPS.

00:27:10.460 --> 00:27:12.890
Now remember, every
one of these rows

00:27:12.890 --> 00:27:16.640
has the same level of
detail and complexity.

00:27:16.640 --> 00:27:19.070
And what's more, they
interact with each other

00:27:19.070 --> 00:27:21.990
in subtle and non-linear ways.

00:27:21.990 --> 00:27:23.990
So for example, let's
go back to symmetry.

00:27:23.990 --> 00:27:26.420
Think of a relaxing
puzzle game where

00:27:26.420 --> 00:27:29.300
each player can do something
unique, like open doors,

00:27:29.300 --> 00:27:30.620
or pull levers.

00:27:30.620 --> 00:27:32.510
And the players can
work together as a team

00:27:32.510 --> 00:27:34.700
to solve puzzles
and win the game.

00:27:34.700 --> 00:27:37.250
Now contrast that
with an RPG, which

00:27:37.250 --> 00:27:40.880
requires strict timing
and precise coordination.

00:27:40.880 --> 00:27:43.550
These are both highly
asymmetric games,

00:27:43.550 --> 00:27:45.890
but one is a very
low trust experience,

00:27:45.890 --> 00:27:48.800
and the other is
extremely high trust.

00:27:48.800 --> 00:27:51.440
So I hope by now
you're inspired to go

00:27:51.440 --> 00:27:54.260
try some of these ideas
in your multiplayer games.

00:27:54.260 --> 00:27:57.690
So let me give you a few
tips on how to get started.

00:27:57.690 --> 00:28:00.470
First and most important,
build your game

00:28:00.470 --> 00:28:02.750
so that players can
succeed no matter

00:28:02.750 --> 00:28:05.450
what stage their relationship.

00:28:05.450 --> 00:28:10.160
However, do not incentivize them
to move beyond the playstyle

00:28:10.160 --> 00:28:11.360
that suits them.

00:28:11.360 --> 00:28:13.730
The goal of the
trust spectrum is not

00:28:13.730 --> 00:28:16.310
for players to advance up it.

00:28:16.310 --> 00:28:18.500
If you give them points
or otherwise incentivize

00:28:18.500 --> 00:28:22.190
them to move up the scale, they
will, and this doesn't work.

00:28:22.190 --> 00:28:26.430
We are not wired to be best
friends with everybody.

00:28:26.430 --> 00:28:28.960
Second, try to cover
the full spectrum

00:28:28.960 --> 00:28:31.800
so there's things to do
for all kinds of players.

00:28:31.800 --> 00:28:34.320
If I can play your game
with all of my friends,

00:28:34.320 --> 00:28:36.160
then I probably will.

00:28:36.160 --> 00:28:39.390
However, be careful not to
mix high trust and low trust

00:28:39.390 --> 00:28:42.300
experiences together
at the same time.

00:28:42.300 --> 00:28:45.930
It will absolutely
confuse your players.

00:28:45.930 --> 00:28:48.790
Third, if you're at a loss
about where to get started,

00:28:48.790 --> 00:28:52.270
think about the ways that
players connect in your game,

00:28:52.270 --> 00:28:55.267
whether it be through friends
lists, or different game modes.

00:28:55.267 --> 00:28:57.600
And then for each of those,
think about how many players

00:28:57.600 --> 00:28:59.400
are interacting at once.

00:28:59.400 --> 00:29:00.960
If you have, say,
a big boss battle

00:29:00.960 --> 00:29:04.860
scene where 150 players can
all pile on and contribute,

00:29:04.860 --> 00:29:07.020
you're going to want to
use low trust interactions

00:29:07.020 --> 00:29:08.620
between the players.

00:29:08.620 --> 00:29:11.520
But if the team sizes
are more like 15, or 5,

00:29:11.520 --> 00:29:15.240
then use higher trust mechanics
to create a deeper connection

00:29:15.240 --> 00:29:16.980
between those players.

00:29:16.980 --> 00:29:19.410
So basically, don't use
high trust mechanics

00:29:19.410 --> 00:29:20.430
in large groups.

00:29:20.430 --> 00:29:22.680
It's not appropriate
for a big group.

00:29:22.680 --> 00:29:24.900
But also, don't use
low trust mechanics

00:29:24.900 --> 00:29:27.000
in tight and intimate gameplay.

00:29:27.000 --> 00:29:29.760
It's too shallow an experience,
and your players will basically

00:29:29.760 --> 00:29:32.010
get bored and disengage.

00:29:32.010 --> 00:29:36.960
Finally, for all my producers
out there, be warned.

00:29:36.960 --> 00:29:39.360
The higher you go up
the trust spectrum,

00:29:39.360 --> 00:29:41.640
the longer it's going to
take to make your game.

00:29:41.640 --> 00:29:43.530
A high trust game, we
found, can take three

00:29:43.530 --> 00:29:46.860
to four times as long to
make as a low trust game.

00:29:46.860 --> 00:29:48.810
And this largely comes
from that asymmetry

00:29:48.810 --> 00:29:50.160
that I was talking about.

00:29:50.160 --> 00:29:52.230
A fully asymmetric
game is like building

00:29:52.230 --> 00:29:54.990
multiple single-player
experiences, each of which

00:29:54.990 --> 00:29:56.790
needs to be balanced
and perfect.

00:29:56.790 --> 00:30:00.010
But they also need to
work together as a system.

00:30:00.010 --> 00:30:02.670
And finally, don't forget
to check for interactions

00:30:02.670 --> 00:30:04.170
between your systems.

00:30:04.170 --> 00:30:08.130
We actually found it was pretty
easy to use two low trust

00:30:08.130 --> 00:30:10.800
systems or mechanics that
interfered with one another,

00:30:10.800 --> 00:30:15.730
and accidentally created
high trust experiences.

00:30:15.730 --> 00:30:18.070
So here's a few more
resources to keep you going.

00:30:18.070 --> 00:30:21.100
First, Raph has graciously
agreed to share,

00:30:21.100 --> 00:30:22.660
in great detail--

00:30:22.660 --> 00:30:25.660
I'm talking 11,000
word blog post

00:30:25.660 --> 00:30:29.290
on his site, raphkoster.com.

00:30:29.290 --> 00:30:31.780
Of course, others have
gone before on this path,

00:30:31.780 --> 00:30:33.880
in particular I call out
the Project Horseshoe

00:30:33.880 --> 00:30:36.760
report on this topic, which
takes a slightly different

00:30:36.760 --> 00:30:38.530
angle on the same subject.

00:30:38.530 --> 00:30:41.500
And I also hear Dan Cook is
giving a talk on this topic

00:30:41.500 --> 00:30:45.670
at 4:00 PM on Thursday,
which I know I will be at.

00:30:45.670 --> 00:30:48.420
Multiplayer makes
games stickier.

00:30:48.420 --> 00:30:52.340
Stickier games have higher
engagement and more replay.

00:30:52.340 --> 00:30:54.340
So using the trust spectrum,
you can build games

00:30:54.340 --> 00:30:56.530
that help players
meet new people

00:30:56.530 --> 00:30:58.250
and nurture their relationships.

00:30:58.250 --> 00:31:00.250
So I'd like to leave you
with the question, what

00:31:00.250 --> 00:31:02.140
if you could build
games that are not

00:31:02.140 --> 00:31:05.282
just good for your bottom
line, they're good for gamers?

00:31:05.282 --> 00:31:07.240
And if you'd like to talk
about this some more,

00:31:07.240 --> 00:31:11.020
I will be at the Google booth
on Thursday from 12:00 to 3:00.

00:31:11.020 --> 00:31:14.080
And up next, I'd like to
welcome Maria to the stage,

00:31:14.080 --> 00:31:14.720
from Daydream.

00:31:14.720 --> 00:31:16.660
She's going to bring up
some of our partners,

00:31:16.660 --> 00:31:19.159
and they're going to share their
experience making AR games.

00:31:19.159 --> 00:31:21.234
And I thank you very
much for listening

00:31:21.234 --> 00:31:23.704
[APPLAUSE]

00:31:53.838 --> 00:31:54.826
MARIA ESSIG: Thank you.

00:31:54.826 --> 00:31:55.814
Thank you so much.

00:32:00.770 --> 00:32:01.782
Hi, everyone.

00:32:01.782 --> 00:32:02.740
SAMANTHA GORMAN: Hello.

00:32:02.740 --> 00:32:05.620
MARIA ESSIG: Really excited to
see all of you joining us today

00:32:05.620 --> 00:32:07.030
for our wonderful conversation.

00:32:07.030 --> 00:32:08.890
Thanks for making time.

00:32:08.890 --> 00:32:10.420
My name is Maria Essig.

00:32:10.420 --> 00:32:15.610
I work at Daydream team focusing
on gaming vertical across VR

00:32:15.610 --> 00:32:17.320
and AR platforms.

00:32:17.320 --> 00:32:21.820
And actually, today, our
team shaped an AR destination

00:32:21.820 --> 00:32:26.020
on Google Play Store, where you
can find multiple experiences

00:32:26.020 --> 00:32:30.010
across gaming utilities,
self-expression,

00:32:30.010 --> 00:32:34.210
and other verticals,
highlighting new developers

00:32:34.210 --> 00:32:36.400
and someone who actually
has experience working

00:32:36.400 --> 00:32:40.690
in this space to delight
you, to bring new characters

00:32:40.690 --> 00:32:44.500
and interest in games
to the world around you.

00:32:44.500 --> 00:32:47.390
I'm honored to introduce
my speaker to you today.

00:32:47.390 --> 00:32:49.720
Her name is Samantha Gorman.

00:32:49.720 --> 00:32:54.580
Samantha's works extends across
narrative, cinema, games,

00:32:54.580 --> 00:32:58.120
virtual reality, and
media scholarship.

00:32:58.120 --> 00:33:01.450
Samantha is a co-founder
on the indie art

00:33:01.450 --> 00:33:03.940
collective Tender
Claws, who are working

00:33:03.940 --> 00:33:09.730
on mobile apps such as PRY, who
delivered a wonderful mobile VR

00:33:09.730 --> 00:33:13.120
experience called Virtual,
Virtual Reality, actually

00:33:13.120 --> 00:33:17.740
one of the most acknowledged
mobile VR games today.

00:33:17.740 --> 00:33:21.910
And besides being busy
at Tender Claws, shaping

00:33:21.910 --> 00:33:24.190
all the great
experiences, Samantha

00:33:24.190 --> 00:33:27.040
holds a master of
Fine Arts degree

00:33:27.040 --> 00:33:29.410
in writing for
digital media, and can

00:33:29.410 --> 00:33:32.780
be found at the University
of Southern California

00:33:32.780 --> 00:33:38.390
completing her PHD in
media arts and practice.

00:33:38.390 --> 00:33:42.280
So we're all talking that AR
is quite new, that it's just

00:33:42.280 --> 00:33:43.690
coming to the market.

00:33:43.690 --> 00:33:46.180
But you, Samantha, actually
worked with this medium

00:33:46.180 --> 00:33:48.340
for quite a long time.

00:33:48.340 --> 00:33:50.960
Can you share with the audience
what originally brought

00:33:50.960 --> 00:33:55.330
to you to this medium, and share
your probably first project?

00:33:55.330 --> 00:33:55.930
What was it?

00:33:55.930 --> 00:33:57.040
SAMANTHA GORMAN: Yeah.

00:33:57.040 --> 00:33:58.280
Thanks for having me.

00:33:58.280 --> 00:34:00.910
So when Google Glass
was first announced,

00:34:00.910 --> 00:34:03.250
I actually did a
performance piece

00:34:03.250 --> 00:34:06.520
at the Geffen Contemporary,
which is this museum in LA,

00:34:06.520 --> 00:34:09.159
with this poet
named Vanessa Place.

00:34:09.159 --> 00:34:12.520
And we used the capabilities of
Glass to record the audience,

00:34:12.520 --> 00:34:14.830
project it back to
themselves, and then augment

00:34:14.830 --> 00:34:19.150
that projection with funny
search queries for, like,

00:34:19.150 --> 00:34:23.830
"OK, Glass," that we're in the
text of what we were using.

00:34:23.830 --> 00:34:29.409
And I think my interest in
AR was coming from the fact

00:34:29.409 --> 00:34:31.480
that I think there's a
lot of really awesome use

00:34:31.480 --> 00:34:36.560
cases for, you know, room scale
and environmental storytelling.

00:34:36.560 --> 00:34:39.550
But what does it mean when you
can be in the room with someone

00:34:39.550 --> 00:34:42.760
live, and you can actually
have an AR layer of information

00:34:42.760 --> 00:34:44.956
about that person, or
maybe some thoughts

00:34:44.956 --> 00:34:46.330
about what they
could be feeling?

00:34:46.330 --> 00:34:48.340
How does that change
the dynamics of you

00:34:48.340 --> 00:34:51.070
and the other person in
your actual physical space

00:34:51.070 --> 00:34:52.650
as a player?

00:34:52.650 --> 00:34:54.850
MARIA ESSIG: Wow, that's
really interesting.

00:34:54.850 --> 00:34:58.780
And your team was constantly
experimenting with this medium,

00:34:58.780 --> 00:35:01.180
and actually emphasizing
this connection

00:35:01.180 --> 00:35:06.040
between live dialogue, people,
and the new technology.

00:35:06.040 --> 00:35:09.010
Speaking of which, you've
just premiered your new title,

00:35:09.010 --> 00:35:12.610
called TendAR, during
Sundance festival.

00:35:12.610 --> 00:35:14.080
Can you tell us
a little bit more

00:35:14.080 --> 00:35:17.950
what inspired you here,
more about this project

00:35:17.950 --> 00:35:19.154
and your plans for it?

00:35:19.154 --> 00:35:20.320
SAMANTHA GORMAN: Yeah, sure.

00:35:20.320 --> 00:35:25.660
So TendAR is actually
a social AR experience,

00:35:25.660 --> 00:35:27.520
sort of going off of
the original interest

00:35:27.520 --> 00:35:29.800
with that Google Glass project.

00:35:29.800 --> 00:35:31.810
And it uses a
front-facing camera

00:35:31.810 --> 00:35:34.750
to put a filter on the face
of you and your partner,

00:35:34.750 --> 00:35:38.050
give some kind of
information about the room

00:35:38.050 --> 00:35:40.480
and what you're feeling.

00:35:40.480 --> 00:35:43.360
And then that is turned
into fish food, which

00:35:43.360 --> 00:35:46.480
is fed to an AI fish
that evolves over time,

00:35:46.480 --> 00:35:49.385
depending on the emotion
flakes you feed it.

00:35:49.385 --> 00:35:50.260
MARIA ESSIG: Oh, wow.

00:35:50.260 --> 00:35:51.430
So much emotion.

00:35:51.430 --> 00:35:54.580
How does fish react to
different experiences?

00:35:54.580 --> 00:35:55.735
How it goes with the flow?

00:35:55.735 --> 00:35:57.651
SAMANTHA GORMAN: Yeah,
it depends on what mood

00:35:57.651 --> 00:35:58.826
he's in at the time.

00:35:58.826 --> 00:36:02.320
MARIA ESSIG: Wait, so
technically, we have AR cat

00:36:02.320 --> 00:36:03.790
version, but in the fish.

00:36:03.790 --> 00:36:05.757
SAMANTHA GORMAN: Yes.

00:36:05.757 --> 00:36:07.340
MARIA ESSIG: By the
way, for everyone,

00:36:07.340 --> 00:36:10.660
we have TendAR as
one of the AR demos

00:36:10.660 --> 00:36:12.910
at Google booth
in southern hall.

00:36:12.910 --> 00:36:14.680
Booth number 823.

00:36:14.680 --> 00:36:16.510
So if you have time,
highly recommend

00:36:16.510 --> 00:36:19.750
you to check it out and
see how AR brings people

00:36:19.750 --> 00:36:20.740
closer to each other.

00:36:23.250 --> 00:36:26.200
Speaking of the technological
part of the game,

00:36:26.200 --> 00:36:31.780
it's pretty much packed with
different new platform features

00:36:31.780 --> 00:36:33.310
and design decisions.

00:36:33.310 --> 00:36:36.490
How was your experience
working with ARCore?

00:36:36.490 --> 00:36:38.890
Was the toolset actually
helpful to deliver

00:36:38.890 --> 00:36:40.575
on your creative vision?

00:36:40.575 --> 00:36:41.950
SAMANTHA GORMAN:
I meant to say--

00:36:41.950 --> 00:36:44.050
and this is actually
related to that question--

00:36:44.050 --> 00:36:46.300
that the TendAR
version at the booth

00:36:46.300 --> 00:36:49.750
is a companion piece to the full
app, which is single player,

00:36:49.750 --> 00:36:54.080
and has AR content that unfolds
over multiple play sessions.

00:36:54.080 --> 00:36:56.470
And that is related because
we had to really think

00:36:56.470 --> 00:36:59.880
about how to put the characters
and models into the space that

00:36:59.880 --> 00:37:03.600
was meaningful for the
player's environment.

00:37:03.600 --> 00:37:06.690
And ARCore actually took
care of that technology

00:37:06.690 --> 00:37:08.250
really easy and simply for us.

00:37:08.250 --> 00:37:11.220
Which then made it so that a
lot of the outstanding questions

00:37:11.220 --> 00:37:14.310
were actually design decisions
in terms of like, OK,

00:37:14.310 --> 00:37:16.860
we have a character in space.

00:37:16.860 --> 00:37:20.320
But we just don't want
it to think about the--

00:37:20.320 --> 00:37:22.170
we want it to know
that the space it's in

00:37:22.170 --> 00:37:24.540
is the player's
world space, and not

00:37:24.540 --> 00:37:26.310
imagine it as anything else.

00:37:26.310 --> 00:37:28.470
So how do we have that
character meaningfully

00:37:28.470 --> 00:37:30.510
interact with the
player's world, and what

00:37:30.510 --> 00:37:32.520
type of knowledge
can we give it about,

00:37:32.520 --> 00:37:34.150
not just the dimensions
of the space,

00:37:34.150 --> 00:37:37.230
but what might be in-- like,
what objects or things might

00:37:37.230 --> 00:37:39.135
be in the world of the player.

00:37:39.135 --> 00:37:40.620
MARIA ESSIG: Oh, great.

00:37:40.620 --> 00:37:42.540
Yeah, that's fantastic.

00:37:42.540 --> 00:37:45.240
So given your current
experience and all the knowledge

00:37:45.240 --> 00:37:49.320
in this space, what do you
think the best and most exciting

00:37:49.320 --> 00:37:53.100
applications of AR in,
like, short term, mid term,

00:37:53.100 --> 00:37:54.875
long term?

00:37:54.875 --> 00:37:56.250
SAMANTHA GORMAN:
I would say I've

00:37:56.250 --> 00:37:58.710
seen some really cool, like--

00:37:58.710 --> 00:38:01.350
there's been some really
cool tabletop games.

00:38:01.350 --> 00:38:04.770
But a lot of the really
interesting things I've seen

00:38:04.770 --> 00:38:07.590
are about, like, enterprise,
designing for enterprise,

00:38:07.590 --> 00:38:09.570
and being able to really
pick apart and get

00:38:09.570 --> 00:38:12.680
the dimensions of objects.

00:38:12.680 --> 00:38:15.810
And in the long
term, I think how

00:38:15.810 --> 00:38:17.790
we've adapted cell phone use.

00:38:17.790 --> 00:38:19.860
In the US, sort of
overnight, it seems

00:38:19.860 --> 00:38:23.209
like it's become a mode of
how we interact with our world

00:38:23.209 --> 00:38:25.500
and engage with our world,
without us thinking about it

00:38:25.500 --> 00:38:26.490
too much.

00:38:26.490 --> 00:38:28.530
I think in long term,
they'll probably

00:38:28.530 --> 00:38:31.230
be elements of AR
applications or hardware

00:38:31.230 --> 00:38:33.750
that will be able to
do that, and we'll just

00:38:33.750 --> 00:38:35.640
have informational
layers, you know,

00:38:35.640 --> 00:38:38.007
without even analyzing it.

00:38:38.007 --> 00:38:39.840
MARIA ESSIG: Yeah, it's
always inspirational

00:38:39.840 --> 00:38:42.910
to hear about your
work and your thoughts.

00:38:42.910 --> 00:38:46.740
Thanks a lot for joining
us today and for your time.

00:38:46.740 --> 00:38:49.500
For everyone, once
again, stop by our booth,

00:38:49.500 --> 00:38:50.830
play some great games.

00:38:50.830 --> 00:38:53.280
And if you have any
questions to me or Samantha,

00:38:53.280 --> 00:38:55.920
feel free to stop
by after the talk.

00:38:55.920 --> 00:38:57.510
Thank you, and
right now, I would

00:38:57.510 --> 00:39:00.330
like to welcome
Clementine on stage

00:39:00.330 --> 00:39:03.840
from our Maps Team, who will
tell you a little bit more

00:39:03.840 --> 00:39:07.361
what are other ways to
bring games to real world.

00:39:07.361 --> 00:39:07.860
Thank you.

00:39:07.860 --> 00:39:08.350
[APPLAUSE]

00:39:08.350 --> 00:39:09.350
SAMANTHA GORMAN: Thanks.

00:39:21.182 --> 00:39:22.390
CLEMENTINE JACOBY: All right.

00:39:22.390 --> 00:39:23.940
Does my mic work?

00:39:23.940 --> 00:39:25.120
Now it does.

00:39:25.120 --> 00:39:27.930
Hello, my name is Clementine.

00:39:27.930 --> 00:39:30.450
And as the slide says,
I work for Google Maps.

00:39:35.580 --> 00:39:36.340
All right.

00:39:36.340 --> 00:39:40.140
Raise your hand if you
have ever played Pong.

00:39:40.140 --> 00:39:41.340
Excellent.

00:39:41.340 --> 00:39:43.500
OK, now I want you
to think in your head

00:39:43.500 --> 00:39:47.370
about how you would describe
the game world in Pong.

00:39:47.370 --> 00:39:50.310
Not the game, but
the game world.

00:39:50.310 --> 00:39:52.890
So this is really
where gaming started,

00:39:52.890 --> 00:39:54.750
with two-dimensional
experiences,

00:39:54.750 --> 00:39:59.460
where the game world was
really a single screen.

00:39:59.460 --> 00:40:02.610
Later, we evolved to still
two-dimensional, but much more

00:40:02.610 --> 00:40:06.150
complex game worlds,
where that single screen

00:40:06.150 --> 00:40:10.830
became one of many, part
of a larger game world.

00:40:10.830 --> 00:40:14.370
And today, there is an
ever increasing demand

00:40:14.370 --> 00:40:18.112
for realistically-modeled
3D environments

00:40:18.112 --> 00:40:19.320
on a bigger and bigger scale.

00:40:22.390 --> 00:40:26.320
Now over the last 40 years,
innovations in technology

00:40:26.320 --> 00:40:30.580
have enabled a huge
increase in the ambition

00:40:30.580 --> 00:40:33.850
in scope and detail of the
game worlds that we see.

00:40:33.850 --> 00:40:37.090
And in response,
games and game worlds

00:40:37.090 --> 00:40:40.990
have dramatically increased in
interactivity, in complexity,

00:40:40.990 --> 00:40:44.560
and in just sheer
breadth and size.

00:40:44.560 --> 00:40:47.170
Some of those games, like you
saw, have become era defining

00:40:47.170 --> 00:40:49.870
and brought the industry
along with them.

00:40:49.870 --> 00:40:51.370
But fundamentally,
game developers

00:40:51.370 --> 00:40:55.390
spend a lot of time and energy
and money modeling game worlds.

00:40:55.390 --> 00:40:57.460
And they do this
because, in part,

00:40:57.460 --> 00:41:00.280
the detail and dynamism
of your game world

00:41:00.280 --> 00:41:04.060
defines how good your
game will end up being.

00:41:04.060 --> 00:41:06.370
So as it turns out,
at Google Maps,

00:41:06.370 --> 00:41:09.190
we also spend a lot
of time modeling

00:41:09.190 --> 00:41:11.350
a world for our
users to explore.

00:41:11.350 --> 00:41:12.880
We spend a lot of
time doing this,

00:41:12.880 --> 00:41:15.400
and we know it really well.

00:41:15.400 --> 00:41:17.410
And we know that when
you do this by hand,

00:41:17.410 --> 00:41:19.840
it can produce
breathtaking results,

00:41:19.840 --> 00:41:23.020
but it's also
breathtakingly expensive.

00:41:23.020 --> 00:41:25.120
And it's getting more
and more expensive

00:41:25.120 --> 00:41:27.940
as we try to do this on
bigger and bigger scales.

00:41:27.940 --> 00:41:32.290
So think about, for example,
the world in Grand Theft Auto

00:41:32.290 --> 00:41:35.140
5, which is still one of the
biggest and richest game worlds

00:41:35.140 --> 00:41:38.110
that's ever been created.

00:41:38.110 --> 00:41:41.680
At launch, that game
world was about as big

00:41:41.680 --> 00:41:44.760
as downtown Manhattan.

00:41:44.760 --> 00:41:48.420
So what if we could scale the
art of creating game worlds?

00:41:48.420 --> 00:41:51.900
What if there could be game
worlds in which detailed didn't

00:41:51.900 --> 00:41:55.680
have to be balanced with size?

00:41:55.680 --> 00:41:58.380
All right, now hold that
thought for a moment.

00:41:58.380 --> 00:42:00.517
In parallel to that
whole progression,

00:42:00.517 --> 00:42:02.100
mobile phones have
gotten really good,

00:42:02.100 --> 00:42:05.940
which you've seen in
other talks today, right?

00:42:05.940 --> 00:42:09.000
They're getting so
good that developers

00:42:09.000 --> 00:42:11.760
can begin to sort of blur
the lines between a game

00:42:11.760 --> 00:42:14.120
world and the real world.

00:42:14.120 --> 00:42:15.750
And across the mobile
ecosystem, we're

00:42:15.750 --> 00:42:21.610
seeing digital content brought
into the physical world.

00:42:21.610 --> 00:42:24.330
And this is being
done by smartphones

00:42:24.330 --> 00:42:26.520
that are so powerful that
they can convincingly

00:42:26.520 --> 00:42:27.780
blend realities.

00:42:27.780 --> 00:42:30.130
And at Google Maps, we
specialize in reality.

00:42:30.130 --> 00:42:33.300
So for over a decade now,
we've been relentlessly combing

00:42:33.300 --> 00:42:34.950
the world, finding
all of its details,

00:42:34.950 --> 00:42:37.620
and delivering those
details to you on your phone

00:42:37.620 --> 00:42:40.710
so that you can explore,
no matter where you are.

00:42:40.710 --> 00:42:41.850
All right, so backing up.

00:42:41.850 --> 00:42:44.790
Looking at these two
progressions, we at Google Maps

00:42:44.790 --> 00:42:48.020
decided we could help.

00:42:48.020 --> 00:42:50.690
And that's why we set out to
create an offering specifically

00:42:50.690 --> 00:42:54.530
for gaming, to help developers
build game worlds based

00:42:54.530 --> 00:42:58.580
on the real world, powered
by Google Maps data

00:42:58.580 --> 00:43:01.539
and backed by Google
Maps infrastructure.

00:43:01.539 --> 00:43:03.830
Our goal is to turn the real
world into your playground

00:43:03.830 --> 00:43:05.780
so that you can take
that richness of reality

00:43:05.780 --> 00:43:08.730
as your starting point
and go from there.

00:43:08.730 --> 00:43:11.360
So I'm going to show you a
short video to sort of kick off

00:43:11.360 --> 00:43:12.925
what this means.

00:43:12.925 --> 00:43:13.591
[VIDEO PLAYBACK]

00:43:13.591 --> 00:43:16.076
[MUSIC PLAYING]

00:43:46.307 --> 00:43:46.890
[END PLAYBACK]

00:43:46.890 --> 00:43:47.879
All right.

00:43:47.879 --> 00:43:48.920
I really like the dragon.

00:43:48.920 --> 00:43:52.220
So with this product, we
wanted to both help developers

00:43:52.220 --> 00:43:54.290
take their game worlds
to the next level,

00:43:54.290 --> 00:43:56.240
but also make it
easy to get started,

00:43:56.240 --> 00:43:58.970
because geodata is
really complicated.

00:43:58.970 --> 00:44:02.090
So we went and talked to
tons and tons of developers

00:44:02.090 --> 00:44:05.060
and we built a product
based on what we heard.

00:44:05.060 --> 00:44:06.770
And what we heard,
loud and clear,

00:44:06.770 --> 00:44:10.170
was that you basically wanted
help with three things.

00:44:10.170 --> 00:44:14.420
So first, you need access
to Google Maps data,

00:44:14.420 --> 00:44:18.390
that rich and accurate and
living model of the real world.

00:44:18.390 --> 00:44:20.660
So critically, our
data is really fresh.

00:44:20.660 --> 00:44:23.930
We make about 25
million updates a day

00:44:23.930 --> 00:44:27.230
to reflect the pace at
which the world is changing.

00:44:27.230 --> 00:44:30.080
And that data relies on
the same infrastructure,

00:44:30.080 --> 00:44:33.440
in this case, as the
billions of requests

00:44:33.440 --> 00:44:36.810
made to Google Maps a day.

00:44:36.810 --> 00:44:40.730
Second-- and this was something
that we heard resoundingly--

00:44:40.730 --> 00:44:42.790
you wanted that data in Unity.

00:44:42.790 --> 00:44:46.240
So we built an SDK that does
all the heavy lifting for you,

00:44:46.240 --> 00:44:49.810
no Google Maps expertise
needed to get started.

00:44:49.810 --> 00:44:51.700
And this allows
your team to focus

00:44:51.700 --> 00:44:54.760
on doing what they do
best, which is creating

00:44:54.760 --> 00:44:58.530
a rich and immersive game.

00:44:58.530 --> 00:45:00.450
And third-- and this
one's really important,

00:45:00.450 --> 00:45:02.190
because it's really hard--

00:45:02.190 --> 00:45:05.400
we help you design interactions
around real world places.

00:45:05.400 --> 00:45:08.790
So note that this is a
monumental challenge.

00:45:08.790 --> 00:45:11.250
Like, think for a
moment about where

00:45:11.250 --> 00:45:14.760
you would end a
mission in a suburb

00:45:14.760 --> 00:45:16.880
that you had never
been to before

00:45:16.880 --> 00:45:19.050
on the other side of the world.

00:45:19.050 --> 00:45:20.730
It's really hard,
and doing it well

00:45:20.730 --> 00:45:24.330
requires knowing a lot about the
player's immediate environment

00:45:24.330 --> 00:45:27.280
and also their larger context.

00:45:27.280 --> 00:45:30.210
So we help you design gameplay
around real world locations

00:45:30.210 --> 00:45:34.187
so that you can choose places
that are appropriate, unique,

00:45:34.187 --> 00:45:36.270
and fun to play, no matter
where your players are.

00:45:39.061 --> 00:45:41.310
Now we're going to take a
look at how to build a game.

00:45:41.310 --> 00:45:44.210
So I'm going to bring Patrick
up on stage to show you.

00:45:47.626 --> 00:45:50.066
[APPLAUSE]

00:45:53.970 --> 00:45:55.010
Hi, everyone.

00:45:55.010 --> 00:45:58.667
I'm Patrick Donelan, engineering
lead for Google Maps APIs.

00:45:58.667 --> 00:46:00.500
I'm super excited to
be talking to you today

00:46:00.500 --> 00:46:03.580
about what we've
been working on.

00:46:03.580 --> 00:46:06.160
So imagine that you're building
your very own location-based

00:46:06.160 --> 00:46:07.002
game.

00:46:07.002 --> 00:46:08.710
The first thing that
you're going to need

00:46:08.710 --> 00:46:10.716
is high-quality map data.

00:46:10.716 --> 00:46:12.340
As Clementine mentioned,
we're bringing

00:46:12.340 --> 00:46:15.400
Google's rich, accurate,
living model of the real world

00:46:15.400 --> 00:46:16.377
into Unity.

00:46:16.377 --> 00:46:18.460
I'd like to show you exactly
what that looks like.

00:46:22.870 --> 00:46:28.070
So if we roll the video,
what you're seeing here

00:46:28.070 --> 00:46:31.640
is Manhattan rendered
by the Maps Unity SDK

00:46:31.640 --> 00:46:34.786
inside of a demo app that we
put together for this talk.

00:46:34.786 --> 00:46:38.030
Our SDK makes it really easy
to turn this blank canvas

00:46:38.030 --> 00:46:40.090
into a stylized
game environment.

00:46:40.090 --> 00:46:42.540
Here's an example.

00:46:42.540 --> 00:46:44.150
So notice how
custom textures have

00:46:44.150 --> 00:46:46.910
been applied to buildings,
parks, and roads

00:46:46.910 --> 00:46:50.880
to create a futuristic
look and feel.

00:46:50.880 --> 00:46:53.300
Our SDK gives you fine grained
control of this process

00:46:53.300 --> 00:46:56.730
by modeling each map feature
as a separate game object.

00:46:56.730 --> 00:46:58.970
So what was previously
a bland street corner

00:46:58.970 --> 00:47:01.220
is now the setting for
a sci-fi adventure.

00:47:01.220 --> 00:47:04.880
Or, if you prefer fantasy,
the same real world location

00:47:04.880 --> 00:47:08.210
could be just as easily
turned into a medieval scene,

00:47:08.210 --> 00:47:11.060
or anything else
that you dream up.

00:47:11.060 --> 00:47:14.060
Every game object is
annotated with rich metadata,

00:47:14.060 --> 00:47:15.980
allowing you to make
styling decisions based

00:47:15.980 --> 00:47:19.000
on the real world.

00:47:19.000 --> 00:47:21.550
For example, if we
roll the video--

00:47:27.050 --> 00:47:28.060
here we go.

00:47:28.060 --> 00:47:31.280
OK, so you can turn, for
example, shops into chocolate

00:47:31.280 --> 00:47:33.800
bars, or buildings
into restaurants,

00:47:33.800 --> 00:47:36.890
or change the
heights of buildings.

00:47:36.890 --> 00:47:39.399
Through simple
customizations such as these,

00:47:39.399 --> 00:47:41.690
you can create unique game
environments that still feel

00:47:41.690 --> 00:47:42.950
connected to the real world.

00:47:45.530 --> 00:47:47.250
OK, so now that
we've established

00:47:47.250 --> 00:47:49.050
the look and feel
of our game, let's

00:47:49.050 --> 00:47:51.240
add some location-based
gameplay.

00:47:51.240 --> 00:47:53.670
For example, let's add
missions and spawn points

00:47:53.670 --> 00:47:56.640
at prominent locations
around the world.

00:47:56.640 --> 00:47:58.440
The playable
locations API lets you

00:47:58.440 --> 00:48:01.950
build your game once and have it
work anywhere around the world.

00:48:01.950 --> 00:48:03.600
We use a vast array
of Google Maps

00:48:03.600 --> 00:48:07.050
signals to determine the best
places for gameplay and AR

00:48:07.050 --> 00:48:10.160
experiences ranked by
prominence and popularity.

00:48:10.160 --> 00:48:11.910
You can request points
at whatever density

00:48:11.910 --> 00:48:14.242
your game requires
and fine tune the way

00:48:14.242 --> 00:48:16.200
that those points are
distributed in a way that

00:48:16.200 --> 00:48:18.752
is unique to your game.

00:48:18.752 --> 00:48:20.835
Let me show you a visualization
of how this works.

00:48:23.610 --> 00:48:25.560
So the green dots that
you are seeing here

00:48:25.560 --> 00:48:28.100
are playable locations
around the player.

00:48:28.100 --> 00:48:30.869
Lets turn the most prominent
of these into mission points

00:48:30.869 --> 00:48:32.660
so that people have
somewhere nearby that's

00:48:32.660 --> 00:48:35.570
recognizable to play.

00:48:35.570 --> 00:48:38.070
Here, we are going to represent
missions as rainbow arches,

00:48:38.070 --> 00:48:40.220
just to fit with the
theme of the game.

00:48:40.220 --> 00:48:40.730
OK.

00:48:40.730 --> 00:48:43.960
The playable locations API
also includes rich metadata,

00:48:43.960 --> 00:48:45.950
so you can customize
the type of game play

00:48:45.950 --> 00:48:48.230
that you associate
with each location.

00:48:48.230 --> 00:48:51.030
For example, you could
put virtual candy stands

00:48:51.030 --> 00:48:53.660
in real world store locations.

00:48:53.660 --> 00:48:56.840
Or as another example, you could
spawn gummy bear characters

00:48:56.840 --> 00:48:57.694
at restaurants.

00:48:57.694 --> 00:48:59.360
And these might be a
really great choice

00:48:59.360 --> 00:49:00.734
for your multiplayer
experiences,

00:49:00.734 --> 00:49:03.660
since people tend to meet
up in groups at restaurants.

00:49:03.660 --> 00:49:06.380
And if instead you are
creating a fantasy game,

00:49:06.380 --> 00:49:09.560
these could instead have been
dragons and treasure chests.

00:49:09.560 --> 00:49:11.840
Or if it was a
futuristic game, it

00:49:11.840 --> 00:49:14.180
could be spaceships
and floating loot.

00:49:14.180 --> 00:49:15.950
Whatever your game,
you get to focus

00:49:15.950 --> 00:49:18.350
on the fun part of creating
rich, engaging gameplay

00:49:18.350 --> 00:49:19.400
based on the real world.

00:49:22.870 --> 00:49:26.160
Keep in mind that all of this
is happening inside of Unity.

00:49:26.160 --> 00:49:28.872
And so if I was
to press stop, you

00:49:28.872 --> 00:49:31.080
would see that the scene is
empty, because everything

00:49:31.080 --> 00:49:34.110
is generated on the fly.

00:49:34.110 --> 00:49:35.520
We include lots
of other features

00:49:35.520 --> 00:49:38.130
to help you build your
game, such as nine-slicing

00:49:38.130 --> 00:49:41.490
for applying custom textures
to arbitrarily sized buildings,

00:49:41.490 --> 00:49:43.830
and decorators for adding
parapets and other geometry

00:49:43.830 --> 00:49:46.050
the tops of
buildings, or borders

00:49:46.050 --> 00:49:48.630
around roads and buildings for
simulating ambient occlusion

00:49:48.630 --> 00:49:50.140
contact shadows.

00:49:50.140 --> 00:49:53.430
We give you access to the
names of roads and buildings,

00:49:53.430 --> 00:49:55.830
and integrate with Unity's
lighting and skybox systems

00:49:55.830 --> 00:49:59.070
so you can create a
beautiful day night cycle.

00:49:59.070 --> 00:50:01.310
We also support Unity's
level of detail system,

00:50:01.310 --> 00:50:03.620
automatically fading
out distant geometry

00:50:03.620 --> 00:50:06.090
to maximize mobile performance.

00:50:06.090 --> 00:50:10.610
And finally, you have access
to Unity's physics engine,

00:50:10.610 --> 00:50:13.100
allowing you to use the
world's geometry in any 3D

00:50:13.100 --> 00:50:15.890
physics-based game.

00:50:15.890 --> 00:50:18.209
OK, enough about features.

00:50:18.209 --> 00:50:19.750
Next I want to show
you some examples

00:50:19.750 --> 00:50:21.880
of just how far you can push
this platform that we've

00:50:21.880 --> 00:50:22.380
created.

00:50:27.840 --> 00:50:29.590
So the technique used
to create this scene

00:50:29.590 --> 00:50:32.360
is a little different to
the previous examples.

00:50:32.360 --> 00:50:34.300
Instead of applying
custom textures,

00:50:34.300 --> 00:50:37.030
procedural rules were used
to assemble a high resolution

00:50:37.030 --> 00:50:39.550
city out of modular
asset packs, based

00:50:39.550 --> 00:50:41.290
on the real world's layout.

00:50:41.290 --> 00:50:44.750
Down below, you can see cars
driving along roads, bus stops,

00:50:44.750 --> 00:50:48.010
lampposts, power lines.

00:50:48.010 --> 00:50:51.280
As we zoom in, you start to see
just how detailed the street

00:50:51.280 --> 00:50:52.265
level is.

00:50:52.265 --> 00:50:56.110
There's trees, cafe
tables, shopfronts,

00:50:56.110 --> 00:50:58.282
people walking around.

00:50:58.282 --> 00:50:59.740
Even though the
technique used here

00:50:59.740 --> 00:51:03.370
is much more sophisticated, it's
the same rich, semantic model

00:51:03.370 --> 00:51:06.310
of the real world provided
by the Maps Unity SDK that

00:51:06.310 --> 00:51:08.570
makes all this possible.

00:51:08.570 --> 00:51:09.820
Let's look at another example.

00:51:15.304 --> 00:51:16.970
So even though this
scene looks a little

00:51:16.970 --> 00:51:18.380
different to the
previous one, it's

00:51:18.380 --> 00:51:20.004
actually using the
same technique, just

00:51:20.004 --> 00:51:22.094
with a different set of assets.

00:51:22.094 --> 00:51:24.260
The way that the buildings
work here is really cool.

00:51:24.260 --> 00:51:26.990
They self-assemble themselves
out of modular components

00:51:26.990 --> 00:51:30.320
using all of the metadata
provided by the Maps Unity SDK,

00:51:30.320 --> 00:51:32.690
creating, in essence, a
stylistic interpretation

00:51:32.690 --> 00:51:33.710
of the real world.

00:51:33.710 --> 00:51:36.380
Or to put it another
way, the cityscape

00:51:36.380 --> 00:51:39.350
is grown organically to
match the real world.

00:51:39.350 --> 00:51:40.970
What's amazing is
that these examples

00:51:40.970 --> 00:51:43.820
were created by a single
developer in only a few weeks.

00:51:43.820 --> 00:51:46.820
His name is Adam Goodrich
of Procedural Worlds.

00:51:46.820 --> 00:51:48.800
As you can see, he
was able to achieve

00:51:48.800 --> 00:51:53.899
an incredible level of detail
in such a short amount of time.

00:51:53.899 --> 00:51:55.940
Let's look at one more
example before we move on.

00:52:02.377 --> 00:52:04.460
So this is a road running
through Glacier National

00:52:04.460 --> 00:52:06.200
Park in Montana.

00:52:06.200 --> 00:52:08.430
The trees, rocks, and
clumps of vegetation

00:52:08.430 --> 00:52:10.310
were procedurally
generated down to the level

00:52:10.310 --> 00:52:12.590
of individual blades of grass.

00:52:12.590 --> 00:52:14.945
Elevation data was combined
with the Maps Unity SDK

00:52:14.945 --> 00:52:18.860
to create a vast open world,
complete with rivers and lakes,

00:52:18.860 --> 00:52:21.410
mountains, towns
in the distance,

00:52:21.410 --> 00:52:23.510
animals, wilderness areas.

00:52:23.510 --> 00:52:25.127
What I love about
this final example

00:52:25.127 --> 00:52:27.710
is it shows that you're not just
limited to busy urban centers

00:52:27.710 --> 00:52:30.350
when creating rich,
engaging game worlds.

00:52:30.350 --> 00:52:32.940
And with that, I'm going to
hand you back to Clementine.

00:52:32.940 --> 00:52:35.365
[APPLAUSE]

00:52:41.124 --> 00:52:41.790
Thanks, Patrick.

00:52:44.500 --> 00:52:47.530
We need to go back one slide.

00:52:47.530 --> 00:52:48.070
Excellent.

00:52:48.070 --> 00:52:50.830
So to summarize,
Patrick sort of--

00:52:50.830 --> 00:52:53.470
he showed you four
things that we

00:52:53.470 --> 00:52:55.450
want to help developers with.

00:52:55.450 --> 00:52:58.660
The first is we want you to be
able to build your game once

00:52:58.660 --> 00:53:01.150
and then make it
interesting everywhere

00:53:01.150 --> 00:53:03.230
in the world at global scale.

00:53:03.230 --> 00:53:04.660
So you'll have
access to hundreds

00:53:04.660 --> 00:53:08.320
of millions of 3D buildings,
points of interest, roads,

00:53:08.320 --> 00:53:10.780
rivers, landmarks,
cafes, et cetera,

00:53:10.780 --> 00:53:13.090
to form the foundation
of your game world.

00:53:13.090 --> 00:53:15.440
And this all relies on that
same model of the world

00:53:15.440 --> 00:53:18.970
that Google Maps has
been building since 2005.

00:53:18.970 --> 00:53:21.580
So you'll have accurate and
fresh data, no matter where

00:53:21.580 --> 00:53:23.770
your players are.

00:53:23.770 --> 00:53:25.270
The second piece
is that we want you

00:53:25.270 --> 00:53:28.690
to be able to completely
customize this game world.

00:53:28.690 --> 00:53:31.000
So you can turn rivers
into lava flows,

00:53:31.000 --> 00:53:33.670
or fill parks with trees,
or oceans with waves.

00:53:33.670 --> 00:53:35.800
You just saw a huge range
of examples of things

00:53:35.800 --> 00:53:37.870
that have already been done.

00:53:37.870 --> 00:53:41.020
You can do simple things, like
customize colors or textures,

00:53:41.020 --> 00:53:43.870
but you can also swap
in entire prefabs

00:53:43.870 --> 00:53:46.670
like you're seeing here.

00:53:46.670 --> 00:53:49.210
Third, we want to help
you design gameplay

00:53:49.210 --> 00:53:51.070
around real world places.

00:53:51.070 --> 00:53:54.280
Find the right locations
for each type and category

00:53:54.280 --> 00:53:57.700
of mission, or player,
or in-game reward.

00:53:57.700 --> 00:54:00.310
You could drive your
players to popular places

00:54:00.310 --> 00:54:02.050
like restaurants,
and town squares,

00:54:02.050 --> 00:54:03.610
or take them off
the beaten path.

00:54:03.610 --> 00:54:04.840
And the choice is yours.

00:54:04.840 --> 00:54:07.900
Either way, we want to help you
deliver an experience that's

00:54:07.900 --> 00:54:09.970
unique to your game
and fits your gameplay

00:54:09.970 --> 00:54:12.880
anywhere in the world.

00:54:12.880 --> 00:54:15.130
And finally, we want to help
deliver these really rich

00:54:15.130 --> 00:54:17.390
experiences at global scale.

00:54:17.390 --> 00:54:19.630
So relying on Google's
infrastructure

00:54:19.630 --> 00:54:23.620
will mean faster response
times, scale on demand,

00:54:23.620 --> 00:54:25.420
and also just the
peace of mind that

00:54:25.420 --> 00:54:29.510
comes with knowing that
your game will just work.

00:54:29.510 --> 00:54:30.730
So that's an overview.

00:54:30.730 --> 00:54:32.500
The last video I
want to show you

00:54:32.500 --> 00:54:35.560
is a bit of what developers
are already doing with this.

00:54:35.560 --> 00:54:39.520
So last year, we started
a trusted tester program.

00:54:39.520 --> 00:54:42.400
And we've been working with some
of the top mobile developers

00:54:42.400 --> 00:54:44.290
in this space who wanted
to launch real world

00:54:44.290 --> 00:54:46.407
games starting this year.

00:54:46.407 --> 00:54:48.490
Today, I'm going to show
you three of those games.

00:54:51.760 --> 00:54:56.780
So first up, we have
Jurassic World Alive.

00:54:56.780 --> 00:54:59.480
This is the second installment
of Ludia's Jurassic World

00:54:59.480 --> 00:55:02.330
Series, and it's been
created in partnership

00:55:02.330 --> 00:55:05.070
with Universal Studios.

00:55:05.070 --> 00:55:07.640
So in this game, as
you explore the world,

00:55:07.640 --> 00:55:09.980
you're also hunting dinosaurs.

00:55:09.980 --> 00:55:12.140
And you're collecting
their DNA so

00:55:12.140 --> 00:55:15.500
that you can clone them and
create your own dinosaurs.

00:55:24.410 --> 00:55:26.885
[MUSIC - RAY PARKER JR.,
 "GHOSTBUSTERS"]

00:55:27.875 --> 00:55:29.860
[PHONE RINGING]

00:55:29.860 --> 00:55:34.150
So next up, we have
Ghostbusters World.

00:55:34.150 --> 00:55:38.720
This is a location-based
AR collection game.

00:55:38.720 --> 00:55:42.610
So this game features
first-person shooter mechanics,

00:55:42.610 --> 00:55:46.120
and you can also interact with
other players in real time

00:55:46.120 --> 00:55:48.985
as you explore the world and
collect and capture ghosts.

00:56:08.497 --> 00:56:10.962
[MUSIC PLAYING]

00:56:12.460 --> 00:56:15.660
All right, last up, we have
the Walking Dead, Our World,

00:56:15.660 --> 00:56:18.780
which is based on AMC's
mega-hit and being

00:56:18.780 --> 00:56:21.270
built by an Next Games.

00:56:21.270 --> 00:56:25.490
This is a location-based
AR survival game.

00:56:25.490 --> 00:56:27.960
In this game, players
explore the world,

00:56:27.960 --> 00:56:31.740
fight walkers, form alliances
with other survivors,

00:56:31.740 --> 00:56:32.820
and build safe havens.

00:56:38.130 --> 00:56:39.870
All of these games
are coming soon

00:56:39.870 --> 00:56:44.200
to the real world near you,
along with many others.

00:56:44.200 --> 00:56:48.600
So expect 2018 to be a big
year for real world gaming.

00:56:48.600 --> 00:56:50.310
We're really excited
to play these games

00:56:50.310 --> 00:56:52.440
and also to see
what you will build.

00:56:52.440 --> 00:56:55.740
For every game, we're going to
be bringing the full support

00:56:55.740 --> 00:56:57.210
of Google to bear.

00:56:57.210 --> 00:57:01.110
Google is very invested in AR
technology and betting big.

00:57:01.110 --> 00:57:03.450
We're really excited
to partner with ARCore

00:57:03.450 --> 00:57:06.880
to bring their expertise
to our gaming partners.

00:57:06.880 --> 00:57:09.120
In fact, all of the three
games that you just saw

00:57:09.120 --> 00:57:12.360
have ARCore powered gameplay.

00:57:12.360 --> 00:57:14.490
We're also collaborating
with other key teams

00:57:14.490 --> 00:57:16.980
at Google who are focused
on gaming-- for example,

00:57:16.980 --> 00:57:19.470
Google Cloud for your
game server needs

00:57:19.470 --> 00:57:22.710
and YouTube and Play
for promotional help.

00:57:22.710 --> 00:57:25.200
Fundamentally, we
want to make it easier

00:57:25.200 --> 00:57:27.690
to launch games that move
the industry forward,

00:57:27.690 --> 00:57:29.620
and the rest of
Google wants to help.

00:57:29.620 --> 00:57:31.380
So if you're
building a game that

00:57:31.380 --> 00:57:35.820
features real world elements,
please come talk to us.

00:57:35.820 --> 00:57:39.540
You can head over to our
website, which is listed here,

00:57:39.540 --> 00:57:41.970
and fill out the
contact sales form,

00:57:41.970 --> 00:57:45.180
and our team will get in
touch to get you started.

00:57:45.180 --> 00:57:46.830
There's also a lot
of opportunities

00:57:46.830 --> 00:57:50.340
to talk to our team
during this week at GDC.

00:57:50.340 --> 00:57:52.410
If you want to learn
more and get a chance

00:57:52.410 --> 00:57:55.860
to talk in more detail,
please stop by our talk

00:57:55.860 --> 00:57:59.460
on the expo floor on Thursday.

00:57:59.460 --> 00:58:02.640
Our team will be there and
we'll be doing Q&amp;A afterwards.

00:58:02.640 --> 00:58:04.470
You can also find us
at the Google booth,

00:58:04.470 --> 00:58:06.420
where we'll have
demos to play with,

00:58:06.420 --> 00:58:08.520
and developers who have
built games with Maps

00:58:08.520 --> 00:58:12.630
that you can talk to,
as well as our team.

00:58:12.630 --> 00:58:13.650
All right, that's it.

00:58:13.650 --> 00:58:17.730
So before we break for lunch,
please copy down this URL

00:58:17.730 --> 00:58:21.480
and give us some feedback
on the morning sessions.

00:58:21.480 --> 00:58:23.640
And we'll see you
back here after lunch.

00:58:23.640 --> 00:58:24.450
Thank you.

00:58:24.450 --> 00:58:25.050
[APPLAUSE]

00:58:25.050 --> 00:58:27.800
[MUSIC PLAYING]

