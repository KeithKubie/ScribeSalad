WEBVTT
Kind: captions
Language: en

00:00:01.180 --> 00:00:02.930
YACINE REZGUI:
Android Studio 3.3

00:00:02.930 --> 00:00:05.810
is now available for download
on the Stable channel.

00:00:05.810 --> 00:00:09.470
Along with version 3.3 are the
Android plugins for Gradle.

00:00:09.470 --> 00:00:11.420
With this release, we
are delivering features

00:00:11.420 --> 00:00:14.060
that we previewed this year,
including the Navigation

00:00:14.060 --> 00:00:16.760
Editor, new tracking
option for the profiler,

00:00:16.760 --> 00:00:20.930
improvement on the build system,
and lazy task configuration.

00:00:20.930 --> 00:00:24.050
The Navigation Editor allows
you to create a destination,

00:00:24.050 --> 00:00:27.600
define parameters, and specify
transition between them.

00:00:27.600 --> 00:00:29.600
It's a big improvement
to be able to see

00:00:29.600 --> 00:00:32.509
your whole application flow,
if you're using the Navigation

00:00:32.509 --> 00:00:33.320
architecture.

00:00:33.320 --> 00:00:35.180
You can link them
with drag-and-drop

00:00:35.180 --> 00:00:36.890
and specify the
type of transition

00:00:36.890 --> 00:00:37.970
for each user action.

00:00:37.970 --> 00:00:40.610
The profiler now lets
you select the level

00:00:40.610 --> 00:00:43.790
of data collection for live
memory allocation on devices

00:00:43.790 --> 00:00:46.490
running API 26 or higher.

00:00:46.490 --> 00:00:49.250
You can choose between
the full or simple mode.

00:00:49.250 --> 00:00:51.140
This can improve
your app performance

00:00:51.140 --> 00:00:53.300
while profiling, which
helps you to get closer

00:00:53.300 --> 00:00:55.430
to a real-life user experience.

00:00:55.430 --> 00:00:58.610
The CPU profiler lets you
see how long each frame takes

00:00:58.610 --> 00:01:00.674
to render on the UI thread.

00:01:00.674 --> 00:01:02.090
The profiler
highlights frame that

00:01:02.090 --> 00:01:05.180
takes more than 16
milliseconds, letting you easily

00:01:05.180 --> 00:01:08.720
identify when your UI
is not running smoothly.

00:01:08.720 --> 00:01:11.770
If your application is
using obsolete APIs,

00:01:11.770 --> 00:01:14.840
Android Studio now provides more
detailed debugging information

00:01:14.840 --> 00:01:17.600
on which part of your
code is calling them.

00:01:17.600 --> 00:01:20.570
You need to enable this option
by adding this line of code

00:01:20.570 --> 00:01:22.130
to a Gradle file.

00:01:22.130 --> 00:01:25.200
Build time reduction is
a continued focus for us.

00:01:25.200 --> 00:01:27.770
We have improved incremental
Java compilation when

00:01:27.770 --> 00:01:29.870
using annotation processors.

00:01:29.870 --> 00:01:33.530
We also included a preview
of a new code shrinker, R8,

00:01:33.530 --> 00:01:35.300
which is faster than ProGuard.

00:01:35.300 --> 00:01:37.940
It doesn't even require
any code changes.

00:01:37.940 --> 00:01:41.820
Give a try by adding this line
of code to your Gradle file.

00:01:41.820 --> 00:01:45.320
If your project is configured
with multiple build variances,

00:01:45.320 --> 00:01:48.620
the IDA will prompt you to
sync only the current build,

00:01:48.620 --> 00:01:50.090
saving you time.

00:01:50.090 --> 00:01:53.280
You can enable it manually
in the Experimental menu.

00:01:53.280 --> 00:01:58.100
Android Gradle plugin now uses
a lazy task configuration API.

00:01:58.100 --> 00:02:02.120
This avoids the cost of creating
unused tasks during Gradle

00:02:02.120 --> 00:02:03.770
configuration phase.

00:02:03.770 --> 00:02:07.460
Instant Apps are now fully
supported with app bundles.

00:02:07.460 --> 00:02:10.430
You can create an instant
app and installed app

00:02:10.430 --> 00:02:12.140
from the same project.

00:02:12.140 --> 00:02:14.360
It makes it super
easy to split your app

00:02:14.360 --> 00:02:17.570
and reduce its size for
a better user experience.

00:02:17.570 --> 00:02:19.940
To deploy your app
as an instant app,

00:02:19.940 --> 00:02:23.390
edit your Run configuration
and enable the option.

00:02:23.390 --> 00:02:25.860
Enjoy Android Studio 3.3.

00:02:25.860 --> 00:02:28.730
We are listening to your
feedback on our bug tracker.

00:02:28.730 --> 00:02:31.570
You can test early
builds of the 3.4 version

00:02:31.570 --> 00:02:32.720
on the Canary channel.

00:02:32.720 --> 00:02:33.590
See you soon.

00:02:33.590 --> 00:02:36.940
[MUSIC PLAYING]

