WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.490
 in this capsule we will see 

00:00:01.260 --> 00:00:06.899
 the local search algorithm closed 

00:00:04.490 --> 00:00:08.550
 then the climbing algorithm is 

00:00:06.899 --> 00:00:12.179
 probably the simplest sentry box 

00:00:08.550 --> 00:00:15.150
 local search to run 

00:00:12.179 --> 00:00:18.180
 the algorithm we must specify a node 

00:00:15.150 --> 00:00:20.220
 initial one must obviously also 

00:00:18.180 --> 00:00:22.529
 specify the objectives function we 

00:00:20.220 --> 00:00:25.890
 wish to optimize i want the tf of 

00:00:22.529 --> 00:00:28.710
 hate in the slides and we have to 

00:00:25.890 --> 00:00:31.679
 also determine for the hand 

00:00:28.710 --> 00:00:34.800
 what are his naked successor we're going 

00:00:31.679 --> 00:00:36.239
 sometimes called our neighbors so we can 

00:00:34.800 --> 00:00:37.800
 do that by specifying a function that 

00:00:36.239 --> 00:00:40.800
 we return the list of naked 

00:00:37.800 --> 00:00:44.910
 successor given a current node 

00:00:40.800 --> 00:00:47.430
 n is the method will run as 

00:00:44.910 --> 00:00:50.070
 therefore follows the notion of a current one 

00:00:47.430 --> 00:00:52.710
 which will be updated as and when 

00:00:50.070 --> 00:00:54.420
 measurement as we execute the algorithm is this 

00:00:52.710 --> 00:00:57.329
 we go there we will initiate it read 

00:00:54.420 --> 00:00:59.520
 initial unu that was given as input to 

00:00:57.329 --> 00:01:01.469
 the algorithm is then from her to a 

00:00:59.520 --> 00:01:04.680
 iteration to the other the current node is going 

00:01:01.469 --> 00:01:06.990
 be updated the following way one 

00:01:04.680 --> 00:01:08.460
 will actually compare it to the nude 

00:01:06.990 --> 00:01:10.710
 successor in order to see if we can not 

00:01:08.460 --> 00:01:12.689
 transfer a new node 1 our 

00:01:10.710 --> 00:01:16.830
 neighbors our successors who is a 

00:01:12.689 --> 00:01:21.360
 best for the function of by the 

00:01:16.830 --> 00:01:24.720
 objective function so among other things if 

00:01:21.360 --> 00:01:26.850
 there is a neighbor a premium who has the 

00:01:24.720 --> 00:01:30.840
 better value of hate and who in 

00:01:26.850 --> 00:01:33.150
 more has a prime f2m value which is more 

00:01:30.840 --> 00:01:35.220
 great that fdn so the discussion 

00:01:33.150 --> 00:01:37.110
 guess we're maximizing 

00:01:35.220 --> 00:01:39.210
 our objective function otherwise we 

00:01:37.110 --> 00:01:40.049
 would not have smaller ones are minimized the 

00:01:39.210 --> 00:01:41.970
 goal function 

00:01:40.049 --> 00:01:45.689
 so if we find a new neighbor a 

00:01:41.970 --> 00:01:47.610
 premium that has the best value f2m 

00:01:45.689 --> 00:01:49.500
 premium among all the neighbors and who 

00:01:47.610 --> 00:01:51.810
 improves in addition to the 

00:01:49.500 --> 00:01:54.180
 objective function for the nuc current n 

00:01:51.810 --> 00:01:56.790
 we will sign the current node at this 

00:01:54.180 --> 00:01:58.860
 new zero at a premium 

00:01:56.790 --> 00:02:00.560
 otherwise if there is not a neighbor who 

00:01:58.860 --> 00:02:03.149
 improves the function 

00:02:00.560 --> 00:02:05.159
 the value of the objective function we are going 

00:02:03.149 --> 00:02:08.509
 stop running the algorithm and 

00:02:05.159 --> 00:02:08.509
 we will return the current name 

00:02:09.149 --> 00:02:15.510
 here is a description hope solo cote de 

00:02:12.209 --> 00:02:18.180
 the algorithm we will give as input 

00:02:15.510 --> 00:02:20.730
 united sial said two hours the name 

00:02:18.180 --> 00:02:23.930
 current then to our neighbors a bonus that 

00:02:20.730 --> 00:02:27.420
 is considered initializes our null 

00:02:23.930 --> 00:02:30.329
 initial we assign the crown nose 

00:02:27.420 --> 00:02:33.290
 initial being so long that we have not 

00:02:30.329 --> 00:02:36.090
 a condition of arriving we will identify 

00:02:33.290 --> 00:02:38.310
 the 2nd bonus that the successor 

00:02:36.090 --> 00:02:41.030
 the highest value of f2m prime so 

00:02:38.310 --> 00:02:44.400
 water here we have a variant that maximizes 

00:02:41.030 --> 00:02:48.680
 otherwise we would rather be minimized this 

00:02:44.400 --> 00:02:52.310
 would be the smallest value the most 

00:02:48.680 --> 00:02:56.220
 small values 

00:02:52.310 --> 00:02:58.319
 now if our potential neighbor in 

00:02:56.220 --> 00:03:00.689
 premium had a value that is more 

00:02:58.319 --> 00:03:02.359
 small or equal to the objective function 

00:03:00.689 --> 00:03:04.739
 evaluate to n 

00:03:02.359 --> 00:03:06.689
 it would mean that we will not have succeeded 

00:03:04.739 --> 00:03:08.489
 to improve in relation to our function 

00:03:06.689 --> 00:03:10.409
 goal in that if we would return 

00:03:08.489 --> 00:03:13.980
 the current then if not we have one thing 

00:03:10.409 --> 00:03:15.359
 of neighboring current between and on 

00:03:13.980 --> 00:03:17.639
 continue like this until 

00:03:15.359 --> 00:03:19.290
 eventually we enter this 

00:03:17.639 --> 00:03:26.040
 part of the algorithm and we go back 

00:03:19.290 --> 00:03:26.760
 the name runs so more 

00:03:26.040 --> 00:03:29.010
 intuitive 

00:03:26.760 --> 00:03:31.919
 we can see the execution of this 

00:03:29.010 --> 00:03:35.010
 northern algorithm as someone who gets 

00:03:31.919 --> 00:03:38.129
 moves in a kind of valley or 

00:03:35.010 --> 00:03:41.400
 lands or f2m would correspond to 

00:03:38.129 --> 00:03:43.500
 the elevation of the land and our goal 

00:03:41.400 --> 00:03:46.319
 if they have maximized this function there this 

00:03:43.500 --> 00:03:48.900
 would find a summit in the 

00:03:46.319 --> 00:03:51.090
 hill that we are exploring and 

00:03:48.900 --> 00:03:53.489
 but now imagine that we are 

00:03:51.090 --> 00:03:54.959
 in a region there are a lot of 

00:03:53.489 --> 00:03:58.620
 fog and we only see 

00:03:54.959 --> 00:04:00.269
 hours no distance and well the 

00:03:58.620 --> 00:04:02.970
 elkaim bing method correspond to a 

00:04:00.269 --> 00:04:04.829
 strategy we would try to get 

00:04:02.970 --> 00:04:07.500
 move would take the step in the 

00:04:04.829 --> 00:04:10.560
 direction they increase the altitude 

00:04:07.500 --> 00:04:12.239
 as quickly as possible so in 

00:04:10.560 --> 00:04:14.489
 taking the poc that corresponds to a step 

00:04:12.239 --> 00:04:16.760
 which immediately increases us the most 

00:04:14.489 --> 00:04:20.190
 possible our altitude 

00:04:16.760 --> 00:04:21.440
 this algorithm years it is not guaranteed 

00:04:20.190 --> 00:04:23.360
 to find 

00:04:21.440 --> 00:04:27.260
 the global maximum one maximizes one 

00:04:23.360 --> 00:04:30.080
 overall way the overall optima so by 

00:04:27.260 --> 00:04:33.230
 example if the name we are the function 

00:04:30.080 --> 00:04:36.980
 fdn which corresponds to this function 

00:04:33.230 --> 00:04:39.640
 here that go up like this the institute is 

00:04:36.980 --> 00:04:44.180
 that our state simply corresponds to 

00:04:39.640 --> 00:04:46.280
 an integer value n 1 or a real that 

00:04:44.180 --> 00:04:49.580
 determines where are we on 

00:04:46.280 --> 00:04:52.750
 this curve there imagine that we 

00:04:49.580 --> 00:04:55.130
 do not initialize the search at this point here 

00:04:52.750 --> 00:04:58.220
 the clan's algorithm but actually 

00:04:55.130 --> 00:05:01.310
 you will move quietly to this 

00:04:58.220 --> 00:05:02.150
 summit if of the function one observes that 

00:05:01.310 --> 00:05:04.520
 locally 

00:05:02.150 --> 00:05:06.890
 if we look at just lotto of the function 

00:05:04.520 --> 00:05:09.560
 it is indeed a maximum on the other hand 

00:05:06.890 --> 00:05:11.810
 there is another place where we have a 

00:05:09.560 --> 00:05:15.020
 value of the hdr function which is more 

00:05:11.810 --> 00:05:17.450
 big so here it would be the maximum 

00:05:15.020 --> 00:05:19.750
 overall it would have reached 6 instead 

00:05:17.450 --> 00:05:23.030
 like the initials we had provided this 

00:05:19.750 --> 00:05:25.970
 suniula here so this hate value 

00:05:23.030 --> 00:05:28.520
 here actually despite two bing clubs 

00:05:25.970 --> 00:05:31.610
 you'll have to move like that until you 

00:05:28.520 --> 00:05:34.910
 f2m value that would have brought us to this 

00:05:31.610 --> 00:05:38.780
 value so so we found out as no 

00:05:34.910 --> 00:05:40.850
 final this here here other types of 

00:05:38.780 --> 00:05:42.740
 solutions we could get is 

00:05:40.850 --> 00:05:45.620
 for example if we had initialize here 

00:05:42.740 --> 00:05:47.090
 we would have stopped the sentry once 

00:05:45.620 --> 00:05:49.130
 we would have reached the bar their dream of 

00:05:47.090 --> 00:05:52.340
 hate right here who's right at the bar in 

00:05:49.130 --> 00:05:55.010
 made of a kind of trays the plateau 

00:05:52.340 --> 00:05:57.050
 is to be locally a garden 

00:05:55.010 --> 00:05:59.830
 maximum as far as his look of 

00:05:57.050 --> 00:06:01.910
 here or here we come to their lowest 

00:05:59.830 --> 00:06:06.280
 but we could also reach a 

00:06:01.910 --> 00:06:10.040
 plateau that actually is not a maximum 

00:06:06.280 --> 00:06:12.290
 locally ie if we were 

00:06:10.040 --> 00:06:14.930
 arrived at this place if the search is 

00:06:12.290 --> 00:06:16.940
 stopped since we do not have a name right 

00:06:14.930 --> 00:06:18.830
 next to value right next to them 

00:06:16.940 --> 00:06:20.930
 allows to improve the apn function 

00:06:18.830 --> 00:06:22.700
 on the other hand if we had crossed the 

00:06:20.930 --> 00:06:24.830
 plateau are cited allowed to do that one 

00:06:22.700 --> 00:06:27.110
 could have reached that point here and 

00:06:24.830 --> 00:06:29.240
 continue to increase in fact so 

00:06:27.110 --> 00:06:31.780
 locally this point the eye not even a 

00:06:29.240 --> 00:06:34.210
 local maximum but it's a point that 

00:06:31.780 --> 00:06:36.460
 would have stopped the war 

00:06:34.210 --> 00:06:38.590
 still okay so this is one of 

00:06:36.460 --> 00:06:43.840
 properties certain disadvantage we want 

00:06:38.590 --> 00:06:46.680
 of the method he raves goodbye a 

00:06:43.840 --> 00:06:49.120
 example of running the algorithm 

00:06:46.680 --> 00:06:51.400
 imagine that we are the function f of 

00:06:49.120 --> 00:06:53.319
 hate that has the following values ​​being 

00:06:51.400 --> 00:06:55.870
 given all the values ​​of hatred that we 

00:06:53.319 --> 00:06:58.930
 a strange dance here and we'll be there 

00:06:55.870 --> 00:07:03.430
 that our space corresponds to integers 

00:06:58.930 --> 00:07:06.729
 from senegal to 1 up to an equal to 5 is 

00:07:03.430 --> 00:07:08.229
 so here we are interested in what would 

00:07:06.729 --> 00:07:10.120
 the output of the algorithm is what 

00:07:08.229 --> 00:07:12.940
 would have returned if we gave as the 

00:07:10.120 --> 00:07:14.560
 initials n equals 6 and the neighbors 

00:07:12.940 --> 00:07:17.560
 the successor nees would be given in 

00:07:14.560 --> 00:07:22.690
 looking at the value of a hate - hour 

00:07:17.560 --> 00:07:24.490
 and 1,200 and 6 obviously if we find 

00:07:22.690 --> 00:07:26.889
 an equal 1 in this case we will look 

00:07:24.490 --> 00:07:29.050
 not be less if we were to n 

00:07:26.889 --> 00:07:34.360
 equal one would not look at the value 

00:07:29.050 --> 00:07:37.539
 of m more and more that we look at 

00:07:34.360 --> 00:07:39.190
 running the algorithm then at the 

00:07:37.539 --> 00:07:41.380
 first northern iteration is initialized 

00:07:39.190 --> 00:07:44.680
 n attend what would be associated with a 

00:07:41.380 --> 00:07:47.889
 value of f2 so what is two if we 

00:07:44.680 --> 00:07:51.820
 look at the two neighbors 5 and 7 

00:07:47.889 --> 00:07:55.120
 the neighbor that the value f2m prime the 

00:07:51.820 --> 00:07:58.449
 higher these seven so f27 it's equal 

00:07:55.120 --> 00:08:01.270
 at 4 and in this case also actually 

00:07:58.449 --> 00:08:03.039
 f27 is larger than f26 so the 

00:08:01.270 --> 00:08:03.820
 new no current would correspond to a 

00:08:03.039 --> 00:08:09.370
 equal 

00:08:03.820 --> 00:08:12.699
 this next alteration we looked at 

00:08:09.370 --> 00:08:14.740
 the neighbors of 7 namely 8 and 6 think 

00:08:12.699 --> 00:08:17.289
 that if a wood that the value of f 

00:08:14.740 --> 00:08:18.610
 objective function the most objective 

00:08:17.289 --> 00:08:22.180
 highest forgiveness 

00:08:18.610 --> 00:08:23.229
 these eight actually worth f / 2 8 

00:08:22.180 --> 00:08:25.719
 who is 5 

00:08:23.229 --> 00:08:28.539
 this value the 5th largest than fdn 

00:08:25.719 --> 00:08:30.490
 for the non current which is at 4 and so 

00:08:28.539 --> 00:08:34.680
 we would make a transition by assigning the 

00:08:30.490 --> 00:08:38.560
 bare current to l of 8 

00:08:34.680 --> 00:08:40.360
 we will continue then is legal 8 on 

00:08:38.560 --> 00:08:43.930
 would look at the neighbors who are a 

00:08:40.360 --> 00:08:45.339
 premium equals nine or between meygal 7 because 

00:08:43.930 --> 00:08:47.100
 that if it's an equal premium 9 that's 

00:08:45.339 --> 00:08:51.690
 associated with f2 as a bonus 

00:08:47.100 --> 00:08:56.370
 which is the highest at 6 and in addition f2 

00:08:51.690 --> 00:09:00.089
 prints rent a premium is equal to 6 to 9 

00:08:56.370 --> 00:09:03.209
 talk and associates is bigger than 

00:09:00.089 --> 00:09:07.110
 f2m where was born the runner who is 8 so 

00:09:03.209 --> 00:09:09.180
 to be 8 is equal to 5 and so we will do 

00:09:07.110 --> 00:09:12.750
 again a transition from eight to 

00:09:09.180 --> 00:09:17.240
 nine and six in a row until we 

00:09:12.750 --> 00:09:21.139
 arrives at menu twelve where we observe that 

00:09:17.240 --> 00:09:24.180
 for an equal 12 on f2 n equals 10 

00:09:21.139 --> 00:09:27.000
 and in this case also the two neighbors 13 

00:09:24.180 --> 00:09:30.149
 and 11 are associated with values ​​of the 

00:09:27.000 --> 00:09:32.670
 objective function which is lower 

00:09:30.149 --> 00:09:36.420
 ie nine and eight in what if 

00:09:32.670 --> 00:09:38.310
 our algorithm that would be advanced then 

00:09:36.420 --> 00:09:40.920
 will return the crown hate value 

00:09:38.310 --> 00:09:46.290
 which is doubt so we had a return of 

00:09:40.920 --> 00:09:47.550
 hate values ​​that would be a doubt 

00:09:46.290 --> 00:09:50.310
 another example maybe a little bit more 

00:09:47.550 --> 00:09:54.029
 interesting would be the example of the points 

00:09:50.310 --> 00:09:56.899
 d and game one queen's that I have 

00:09:54.029 --> 00:10:00.259
 previously described 

00:09:56.899 --> 00:10:02.579
 so in this case also a node n 

00:10:00.259 --> 00:10:05.329
 would correspond to a configuration of 

00:10:02.579 --> 00:10:07.709
 the chessboard a way configure 

00:10:05.329 --> 00:10:13.019
 to encode a configuration would be to 

00:10:07.709 --> 00:10:14.610
 list the position of each 

00:10:13.019 --> 00:10:17.819
 annuities in each of the columns 

00:10:14.610 --> 00:10:20.339
 so in this case also the first queen 

00:10:17.819 --> 00:10:23.490
 for the first column is at the 

00:10:20.339 --> 00:10:25.560
 position 5 at the fifth rank I have here 

00:10:23.490 --> 00:10:33.449
 it would be 6.7 

00:10:25.560 --> 00:10:36.139
 they fell to 4 5 6 7 6 6 6 so that 

00:10:33.449 --> 00:10:40.230
 it would be the 2nd crown value for 

00:10:36.139 --> 00:10:42.089
 this this board as a function 

00:10:40.230 --> 00:10:44.699
 goal we could use the number 

00:10:42.089 --> 00:10:46.199
 pairs of reindeer 

00:10:44.699 --> 00:10:48.569
 mutually directly or 

00:10:46.199 --> 00:10:50.550
 indirectly so indirectly it wants 

00:10:48.569 --> 00:10:53.459
 say for example take the water here 

00:10:50.550 --> 00:10:54.779
 directly attack that one the attak not 

00:10:53.459 --> 00:10:56.529
 directly because it is blocked by 

00:10:54.779 --> 00:10:59.470
 this rule is here by cons are there 

00:10:56.529 --> 00:11:02.139
 and here the queen here will attack that one 

00:10:59.470 --> 00:11:03.519
 and vice versa it will be against is also 

00:11:02.139 --> 00:11:06.610
 as a pair who knows maybe because 

00:11:03.519 --> 00:11:09.040
 that if indirectly it would be a 

00:11:06.610 --> 00:11:11.350
 example of a poem of optimization of 

00:11:09.040 --> 00:11:12.639
 minimization so we want to decrease the 

00:11:11.350 --> 00:11:14.040
 more possible the number of pairs of 

00:11:12.639 --> 00:11:16.389
 reindeer who is attacking to get 

00:11:14.040 --> 00:11:20.529
 finally the little male who 

00:11:16.389 --> 00:11:21.699
 would correspond to f2 n equals zero so the 

00:11:20.529 --> 00:11:24.040
 better than one can think that none 

00:11:21.699 --> 00:11:25.629
 ream that are attacking and for the 

00:11:24.040 --> 00:11:27.639
 configuration that we see here 

00:11:25.629 --> 00:11:30.249
 in fact we have a value of f which 

00:11:27.639 --> 00:11:31.930
 corresponds to 17 I will not do the math 

00:11:30.249 --> 00:11:37.059
 explicitly but could do it there 

00:11:31.930 --> 00:11:38.410
 to check and the successors we 

00:11:37.059 --> 00:11:40.139
 could define that would be the whole 

00:11:38.410 --> 00:11:42.249
 chessboard configurations 

00:11:40.139 --> 00:11:44.199
 would correspond to take a single queen 

00:11:42.249 --> 00:11:46.180
 in a row in a column sorry 

00:11:44.199 --> 00:11:49.120
 and move it to the same symposium 

00:11:46.180 --> 00:11:54.129
 for example we could take it is 36 

00:11:49.120 --> 00:11:57.309
 and then moved it here or here or here and if 

00:11:54.129 --> 00:12:00.490
 you are the figure that is illustrated in 

00:11:57.309 --> 00:12:03.370
 this image here makes it worth f2 

00:12:00.490 --> 00:12:06.040
 end if we took the queen of the column 

00:12:03.370 --> 00:12:09.309
 and I was moving this rule to aso 

00:12:06.040 --> 00:12:12.459
 this new box there so 14 it wants 

00:12:09.309 --> 00:12:13.930
 to say that if I took a failure whose 

00:12:12.459 --> 00:12:16.180
 configuration would be the same for all 

00:12:13.930 --> 00:12:18.910
 the reindeer waves except this one which 

00:12:16.180 --> 00:12:21.850
 would be moved here we would have a value 

00:12:18.910 --> 00:12:25.149
 from fdn wayne primeau 

00:12:21.850 --> 00:12:25.870
 it would be a neighbor who would correspond to 

00:12:25.149 --> 00:12:28.389
 14 

00:12:25.870 --> 00:12:30.129
 the same way if I took this train there 

00:12:28.389 --> 00:12:31.809
 and that it was rather that train that I 

00:12:30.129 --> 00:12:33.730
 move and that I brought it here on 

00:12:31.809 --> 00:12:34.839
 would have a function value 

00:12:33.730 --> 00:12:37.029
 goal of 12 

00:12:34.839 --> 00:12:39.449
 because if we notice that the best 

00:12:37.029 --> 00:12:43.870
 we can do is reach our 

00:12:39.449 --> 00:12:44.860
 neighbors that would correspond to f function 

00:12:43.870 --> 00:12:48.339
 goal of 12 

00:12:44.860 --> 00:12:50.019
 Moreover, we have several 

00:12:48.339 --> 00:12:52.569
 several breaks that correspond to 

00:12:50.019 --> 00:12:53.589
 move the queen from that column there and 

00:12:52.569 --> 00:12:55.420
 which corresponds to a function 

00:12:53.589 --> 00:12:57.129
 of goals of 12 in this case also he 

00:12:55.420 --> 00:12:59.829
 that we would have a good equality 

00:12:57.129 --> 00:13:02.230
 could do is take as not 

00:12:59.829 --> 00:13:03.850
 Preferred choice 

00:13:02.230 --> 00:13:07.560
 a priori we do not take anything 

00:13:03.850 --> 00:13:07.560
 choosing them randomly 

00:13:08.970 --> 00:13:13.990
 now here is the description that 

00:13:12.760 --> 00:13:15.400
 I come to give a description of 

00:13:13.990 --> 00:13:16.990
 comment on what we would do 

00:13:15.400 --> 00:13:19.210
 gatehouse but a chronicle to solve 

00:13:16.990 --> 00:13:21.520
 the problem of Le Havre we could 

00:13:19.210 --> 00:13:23.800
 reach risks too rather than 

00:13:21.520 --> 00:13:26.020
 local maxim had a maximum 

00:13:23.800 --> 00:13:29.550
 local we would have a local minimum 

00:13:26.020 --> 00:13:32.890
 we have succeeded that corresponds to a draw 

00:13:29.550 --> 00:13:34.470
 and frankly this configuration there and 

00:13:32.890 --> 00:13:36.790
 whose objective value would be a 

00:13:34.470 --> 00:13:38.950
 victims in a single pair in that 

00:13:36.790 --> 00:13:41.260
 six to tax it's very slow here these 

00:13:38.950 --> 00:13:42.760
 prelates and I hope the exercise but 

00:13:41.260 --> 00:13:44.920
 in fact if we move any 

00:13:42.760 --> 00:13:49.750
 queen in his column did we go 

00:13:44.920 --> 00:13:53.020
 necessarily increase or get 

00:13:49.750 --> 00:13:55.000
 an objective function equal to 1 

00:13:53.020 --> 00:13:56.620
 so it will not be possible from 

00:13:55.000 --> 00:13:57.940
 this configuration the place sound a 

00:13:56.620 --> 00:13:59.970
 only queen in his water column 

00:13:57.940 --> 00:14:04.360
 maybe to get a better value 

00:13:59.970 --> 00:14:06.850
 and in this case if the rumor tells so 

00:14:04.360 --> 00:14:09.390
 we have reached the equivalent of a minimum 

00:14:06.850 --> 00:14:12.130
 local since by doing a single 

00:14:09.390 --> 00:14:16.830
 change to a neighbor one can 

00:14:12.130 --> 00:14:16.830
 only worsen the objective function 

