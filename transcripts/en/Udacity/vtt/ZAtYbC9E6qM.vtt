WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.000
Up to this point in the unit, we've been talking about very, very structured graphs,

00:00:03.000 --> 00:00:10.000
very clean and organized graphs--things like chains or rings or grids, hypercubes--

00:00:10.000 --> 00:00:13.000
that have a great deal of structure, and they look very different from the kids of actual

00:00:13.000 --> 00:00:16.000
social network graphs that you see in the wild.

00:00:16.000 --> 00:00:19.000
Regular graphs tend to have little bits of clustering in them

00:00:19.000 --> 00:00:22.000
and some people who are more sparsely connected to some other cluster,

00:00:22.000 --> 00:00:26.000
and they start to look a little bit more randomly generated

00:00:26.000 --> 00:00:29.000
or at least not generated according to a very simple, straightforward rule.

00:00:29.000 --> 00:00:33.000
It's worthwhile to think about some different ways of randomly generating graphs.

00:00:33.000 --> 00:00:37.000
The classic kind of randomly generated graph that's been studied in the mathematics literature

00:00:37.000 --> 00:00:40.000
is generated according to what's called the ErdĹ‘sâ€“RĂŠnyi model.

00:00:40.000 --> 00:00:42.000
Let me say a little bit about that now.

00:00:42.000 --> 00:00:44.000
We start off and we imagine we have some graph with n nodes

00:00:44.000 --> 00:00:48.000
or we have some set of n nodes, and we have some probability p,

00:00:48.000 --> 00:00:50.000
which we'll call the connectivity probability

00:00:50.000 --> 00:00:52.000
and the generation process works like this.

00:00:52.000 --> 00:00:55.000
We start off by generating a set of n nodes with no edges at all.

00:00:55.000 --> 00:00:58.000
Then we loop through all possible pairs of nodes--i, j--

00:00:58.000 --> 00:01:02.000
and we connect i, j, but we only connect them after we flip a coin

00:01:02.000 --> 00:01:04.000
that comes up heads with probability p.

00:01:04.000 --> 00:01:06.000
If it does come up heads, we connect the pair. Otherwise, we don't.

00:01:06.000 --> 00:01:08.000
We can do this for four nodes.

00:01:08.000 --> 00:01:11.000
We have to decide whether to connect the first two nodes.

00:01:11.000 --> 00:01:14.000
We flip a coin, comes up heads, so we connect them.

00:01:14.000 --> 00:01:18.000
Now, we look at the second pair--this one and this one--that also came up heads.

00:01:18.000 --> 00:01:21.000
The third pair-- this on and this one--also came up heads.

00:01:21.000 --> 00:01:24.000
The next pair is this one and this one--tails. No edge.

00:01:24.000 --> 00:01:26.000
This one and this one--heads.

00:01:26.000 --> 00:01:30.000
Finally, this one and this one--heads. I think I have a broken coin.

00:01:30.000 --> 00:01:32.000
But anyway, you get the idea that you end up with a graph

00:01:32.000 --> 00:01:35.000
with some of the edges including and some of the edges not included.

00:01:35.000 --> 00:01:38.000
Now, there's lots of interesting mathematical properties that you can derive

00:01:38.000 --> 00:01:41.000
given the simplicity of this generation process.

00:01:41.000 --> 00:01:44.000
You can say--well, what should the probability p be

00:01:44.000 --> 00:01:47.000
so that the graph is very likely to be connected?

00:01:47.000 --> 00:01:49.000
There's no disconnected nodes floating off into space

00:01:49.000 --> 00:01:53.000
or that there's relatively short paths from one node to the next.

00:01:53.000 --> 00:01:55.000
This has been fairly well studied.

00:01:55.000 --> 00:01:57.000
Researchers have found, however, that these kinds of randomly generated graphs

00:01:57.000 --> 00:02:01.000
don't seem to match very well the kinds of social network graphs

00:02:01.000 --> 00:02:04.000
that you see in practice in the real world.

