WEBVTT
Kind: captions
Language: en

00:00:00.280 --> 00:00:01.960
&gt;&gt; Okay, Michael. You got an answer for me?

00:00:01.960 --> 00:00:06.890
&gt;&gt; Yeah, I think so. I kind of like the method of dropping features

00:00:06.890 --> 00:00:10.580
that we don't need. So I'm going to see if I can apply that idea.

00:00:10.580 --> 00:00:10.980
&gt;&gt; OK.

00:00:10.980 --> 00:00:13.625
&gt;&gt; So, for the decision tree case, if I had all

00:00:13.625 --> 00:00:17.720
4 features, could I even learn this thing? I think I

00:00:17.720 --> 00:00:22.290
could. Let's see, I could do A. And if A is

00:00:22.290 --> 00:00:25.210
true, then I can split on B. And if B is true,

00:00:25.210 --> 00:00:28.410
then I output A plus, otherwise I output minuses.

00:00:28.410 --> 00:00:32.330
&gt;&gt; So, hm. Is that a function? Do you know what function that is?

00:00:32.330 --> 00:00:33.740
&gt;&gt; It's a decision tree.

00:00:33.740 --> 00:00:34.915
&gt;&gt; Yes, but what, do you know if

00:00:34.915 --> 00:00:37.420
there's a Boolean function that decision tree represents?

00:00:37.420 --> 00:00:39.870
&gt;&gt; I don't know. Do you want to draw it and I can look at it?

00:00:39.870 --> 00:00:44.530
&gt;&gt; Yeah, sure. Let's do that. So first you split on A. Then you said A is

00:00:44.530 --> 00:00:50.350
either zero or 1. And then in the case where it was a 1,

00:00:50.350 --> 00:00:57.720
you split on B. And if that were a zero, you output no, and if that is

00:00:57.720 --> 00:01:02.795
a 1, you output yes. And over here, you output no. That's what you said, right?

00:01:02.795 --> 00:01:04.920
&gt;&gt; Yep. And that works for this example.

00:01:04.920 --> 00:01:05.780
&gt;&gt; Mm hm.

00:01:05.780 --> 00:01:10.840
&gt;&gt; Or this set of examples. And, let's see, so with 1 plus, oh

00:01:10.840 --> 00:01:15.410
I see. So it's it's AND right? So it, if A and B are true,

00:01:15.410 --> 00:01:16.960
then the output's true, otherwise not.

00:01:16.960 --> 00:01:21.490
&gt;&gt; Right. And in fact that is exactly the function that I was thinking of.

00:01:21.490 --> 00:01:22.040
&gt;&gt; Oh.

00:01:22.040 --> 00:01:26.480
&gt;&gt; So this, the true underlying function here is in fact AND of A and B.

00:01:26.480 --> 00:01:30.850
&gt;&gt; All right. And oh, I see, so in particular, now we've

00:01:30.850 --> 00:01:34.820
answered the first question. Because I, I need, well okay I, I, I

00:01:34.820 --> 00:01:37.950
only need A and B. And in fact, having just one of them

00:01:37.950 --> 00:01:40.430
alone isn't going to be enough. If I just had A then the

00:01:40.430 --> 00:01:42.730
decision tree can't learn it. And if I just had B,

00:01:42.730 --> 00:01:45.092
then the decision tree can't learn it. It needs more information.

00:01:45.092 --> 00:01:47.110
&gt;&gt; Right, and even in these examples you haven't,

00:01:47.110 --> 00:01:50.030
you can't really luck up and have picked C or

00:01:50.030 --> 00:01:53.300
D to learn this. Because C is always 1, and

00:01:53.300 --> 00:01:56.200
so you can't output the correct answer for all cases.

00:01:56.200 --> 00:01:59.400
And D is 1 in the wrong place, and

00:01:59.400 --> 00:02:01.220
zero in the wrong place, but zero in the right

00:02:01.220 --> 00:02:03.140
place a couple of times. So you can't do something

00:02:03.140 --> 00:02:05.380
like take the not of D and haven't gotten lucky.

00:02:05.380 --> 00:02:05.660
&gt;&gt; I see.

00:02:05.660 --> 00:02:08.870
Well yeah, and C in particular seems exceptionally useless.

00:02:08.870 --> 00:02:10.050
&gt;&gt; Ooh, I like that word.

00:02:10.050 --> 00:02:10.219
&gt;&gt; [LAUGH]

00:02:10.219 --> 00:02:15.280
&gt;&gt; I am going to say useless. Useless. Okay, fine.

00:02:15.280 --> 00:02:17.480
So, that's right. So, it, and maybe this helps you

00:02:17.480 --> 00:02:19.370
a little bit with the next one. I know that

00:02:19.370 --> 00:02:21.430
you now know what the true function is. It's AND

00:02:21.430 --> 00:02:23.820
A or B. And you've decided that D doesn't help

00:02:23.820 --> 00:02:25.910
a lot, and C is completely useless. Why'd you say

00:02:25.910 --> 00:02:28.000
it was useless, by the way? Because it's the same

00:02:28.000 --> 00:02:30.900
in all the cases. It doesn't discriminate between the positive and

00:02:30.900 --> 00:02:31.610
the negative labels.

00:02:31.610 --> 00:02:35.830
&gt;&gt; That's right. So it is useless in that regard. So, good. This is

00:02:35.830 --> 00:02:37.820
the answer I was looking for, for

00:02:37.820 --> 00:02:39.780
decision trees. What about for the simple perceptron?

00:02:39.780 --> 00:02:42.700
&gt;&gt; Okay, right. So I'm not great at doing this kind of

00:02:42.700 --> 00:02:45.505
thing in my head. But I guess the good news is, oh, how

00:02:45.505 --> 00:02:48.020
about this? How about this? Since we got it down to only these

00:02:48.020 --> 00:02:52.380
two features matter, we can draw it as a two dimensional plane, right?

00:02:52.380 --> 00:02:52.840
&gt;&gt; OK.

00:02:52.840 --> 00:02:55.670
&gt;&gt; So mark 0,0. Put a minus at 0, 0.

00:02:55.670 --> 00:02:55.860
&gt;&gt; OK.

00:02:55.860 --> 00:02:56.680
&gt;&gt; Put

00:03:01.220 --> 00:03:02.492
a minus at 0,1.

00:03:02.492 --> 00:03:02.894
&gt;&gt; Mmhm.

00:03:02.894 --> 00:03:04.604
&gt;&gt; Put a minus at 1,0.

00:03:04.604 --> 00:03:05.006
&gt;&gt; Mmhm.

00:03:05.006 --> 00:03:07.980
&gt;&gt; And put a plus at 1,1. So that's

00:03:07.980 --> 00:03:09.860
when we're using the A and the B features.

00:03:09.860 --> 00:03:09.950
&gt;&gt; Yep.

00:03:09.950 --> 00:03:14.640
&gt;&gt; And this is great, because it's linearly separable. So we just need to,

00:03:14.640 --> 00:03:17.350
yeah, we just need a set of weights that can do that. And let's

00:03:17.350 --> 00:03:20.530
see. So, how do we do that? So, if we add, let's see. If

00:03:20.530 --> 00:03:23.420
we do a weight of 1 on A, and a weight of 1 on B.

00:03:23.420 --> 00:03:24.040
&gt;&gt; Mm-hm.

00:03:24.040 --> 00:03:24.456
&gt;&gt; Then.

00:03:24.456 --> 00:03:24.872
&gt;&gt;
&gt;&gt; Then.

00:03:24.872 --> 00:03:26.504
&gt;&gt; Let me, let me draw it.

00:03:26.504 --> 00:03:29.845
Maybe that will, that will help. So, you want to pick a

00:03:29.845 --> 00:03:33.360
weight vector which is, you said, 1 for A and 1 for B.

00:03:33.360 --> 00:03:34.686
&gt;&gt; Mm-hm.

00:03:34.686 --> 00:03:37.546
&gt;&gt; Okay, all right. Go.

00:03:37.546 --> 00:03:41.240
&gt;&gt; And that will give us for the first example, that gives us an

00:03:41.240 --> 00:03:44.250
output of zero. For the next one an output of 1, the next one

00:03:44.250 --> 00:03:47.940
an output of 1, and the last one an output of 2. So, we

00:03:47.940 --> 00:03:51.510
would like, if it was like, uh-oh. Wait. So, if it, if the weight

00:03:51.510 --> 00:03:54.290
vector was that, then what we really want it to be

00:03:54.290 --> 00:03:58.830
is WTX greater than 1. But we can't. It says zero there.

00:03:58.830 --> 00:04:05.500
&gt;&gt; Mm hmm. In fact, wait, isn't it the case that if you don't have, if it's

00:04:05.500 --> 00:04:07.300
greater than or equal to zero, it's, we're

00:04:07.300 --> 00:04:09.100
really talking about lines that go through the origin.

00:04:09.100 --> 00:04:11.860
&gt;&gt; Yep that's right. This is an origin limited perceptron.

00:04:11.860 --> 00:04:16.800
&gt;&gt; So it seems like we're hosed, right? There isn't going to be a separator

00:04:16.800 --> 00:04:19.870
that goes to the origin that lops off the plus.

00:04:19.870 --> 00:04:20.711
&gt;&gt; That's right.

00:04:21.990 --> 00:04:25.310
&gt;&gt; So, I guess what we usually do in

00:04:25.310 --> 00:04:29.950
perceptrons is we include, was it like a bias

00:04:29.950 --> 00:04:33.350
unit, like a, like a, something that's all 1's.

00:04:33.350 --> 00:04:35.270
And then that let's us move the threshold around.

00:04:35.270 --> 00:04:37.815
&gt;&gt; Right. So normally this would look like

00:04:37.815 --> 00:04:41.930
this. W transpose X plus B is greater

00:04:41.930 --> 00:04:45.810
than zero. But I didn't let you have that, so you can't have that.

00:04:48.110 --> 00:04:50.930
&gt;&gt; But maybe I can. You say I can add B in.

00:04:50.930 --> 00:04:53.850
What if I could add C in? Because if you look at this

00:04:53.850 --> 00:04:54.680
&gt;&gt; Well, what would that give you?

00:04:54.680 --> 00:04:57.050
&gt;&gt; Well, look at the C column, it's all 1's. It's the same as if

00:04:57.050 --> 00:04:59.950
it was, it like, the thing that you called B a moment ago, the, this,

00:04:59.950 --> 00:05:04.200
this bias unit. So if we actually include A, B, and C as our features,

00:05:04.200 --> 00:05:05.970
then we can represent this with a,

00:05:05.970 --> 00:05:08.589
what did you call it, origin limited perceptron.

00:05:08.589 --> 00:05:10.630
&gt;&gt; Right. So then, and I'll even draw it in a

00:05:10.630 --> 00:05:13.050
different color, if we had WB, what did you have? 1, 1,

00:05:13.050 --> 00:05:13.280
and.

00:05:13.280 --> 00:05:17.560
&gt;&gt; I'm going to say negative 1.

00:05:17.560 --> 00:05:20.230
&gt;&gt; Negative 1, and that's A, B, and C.

00:05:20.230 --> 00:05:23.270
Then what would that give you, in the first case?

00:05:23.270 --> 00:05:29.600
&gt;&gt; So negative 1, zero, zero, 1.

00:05:29.600 --> 00:05:30.390
&gt;&gt; Yep.

00:05:30.390 --> 00:05:32.300
&gt;&gt; So it's only, the positive example is the

00:05:32.300 --> 00:05:35.190
only one that's greater than zero, strictly greater than zero.

00:05:35.190 --> 00:05:37.710
&gt;&gt; Yep, that's exactly right. So,

00:05:38.960 --> 00:05:40.210
you still think C is useless?

00:05:40.210 --> 00:05:42.749
&gt;&gt; I see. Well, when I said useless.

00:05:42.749 --> 00:05:45.820
&gt;&gt; Mm-hm.

00:05:45.820 --> 00:05:49.080
&gt;&gt; I meant it didn't give any information.

00:05:49.080 --> 00:05:50.740
&gt;&gt; And that's exactly right. It doesn't give

00:05:50.740 --> 00:05:52.970
any information. But that does not make it useless.

00:05:52.970 --> 00:05:56.890
&gt;&gt; Interesting. Okay, well, I now regret that word choice.

00:05:56.890 --> 00:06:00.957
&gt;&gt; C's everywhere across the world are thanking you. [LAUGH]

00:06:00.957 --> 00:06:02.400
&gt;&gt; So this actually brings me to the

00:06:02.400 --> 00:06:04.050
last point that I want to make about feature

00:06:04.050 --> 00:06:08.780
selection, which really gets down to noticing the difference between useless

00:06:08.780 --> 00:06:11.440
and what I'm going to call relevant. So let's dive into that, okay?

00:06:11.440 --> 00:06:14.120
&gt;&gt; Yeah, that, that would be really helpful. Is

00:06:14.120 --> 00:06:16.050
that, and that's the right answer? The first three?

00:06:16.050 --> 00:06:17.390
&gt;&gt; Yes, that's the right answer.

00:06:17.390 --> 00:06:17.930
&gt;&gt; Cool.

