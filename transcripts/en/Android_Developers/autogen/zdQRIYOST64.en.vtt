WEBVTT
Kind: captions
Language: en

00:00:02.880 --> 00:00:06.070
[Music]

00:00:06.070 --> 00:00:06.080
[Music]
 

00:00:06.080 --> 00:00:10.879
[Music]
hi welcome to our talk drawn out how

00:00:10.879 --> 00:00:10.889
hi welcome to our talk drawn out how
 

00:00:10.889 --> 00:00:13.970
hi welcome to our talk drawn out how
Android renders the UI it was almost

00:00:13.970 --> 00:00:13.980
Android renders the UI it was almost
 

00:00:13.980 --> 00:00:15.890
Android renders the UI it was almost
called something else we called it this

00:00:15.890 --> 00:00:15.900
called something else we called it this
 

00:00:15.900 --> 00:00:19.630
called something else we called it this
and then somebody in some administration

00:00:19.630 --> 00:00:19.640
and then somebody in some administration
 

00:00:19.640 --> 00:00:21.950
and then somebody in some administration
position decided it was actually going

00:00:21.950 --> 00:00:21.960
position decided it was actually going
 

00:00:21.960 --> 00:00:25.009
position decided it was actually going
to be called how to optimize your app

00:00:25.009 --> 00:00:25.019
to be called how to optimize your app
 

00:00:25.019 --> 00:00:27.439
to be called how to optimize your app
for top rendering performance or

00:00:27.439 --> 00:00:27.449
for top rendering performance or
 

00:00:27.449 --> 00:00:29.599
for top rendering performance or
something that wasn't what the talk was

00:00:29.599 --> 00:00:29.609
something that wasn't what the talk was
 

00:00:29.609 --> 00:00:31.099
something that wasn't what the talk was
about so fortunately we changed back

00:00:31.099 --> 00:00:31.109
about so fortunately we changed back
 

00:00:31.109 --> 00:00:33.440
about so fortunately we changed back
instead since we're gonna tell you the

00:00:33.440 --> 00:00:33.450
instead since we're gonna tell you the
 

00:00:33.450 --> 00:00:36.530
instead since we're gonna tell you the
details of how actually stuff works I'm

00:00:36.530 --> 00:00:36.540
details of how actually stuff works I'm
 

00:00:36.540 --> 00:00:38.270
details of how actually stuff works I'm
Chet Haase I'm from the Android toolkit

00:00:38.270 --> 00:00:38.280
Chet Haase I'm from the Android toolkit
 

00:00:38.280 --> 00:00:39.860
Chet Haase I'm from the Android toolkit
team and then little Mikey I'm on the

00:00:39.860 --> 00:00:39.870
team and then little Mikey I'm on the
 

00:00:39.870 --> 00:00:41.180
team and then little Mikey I'm on the
inter-atomic team and I do real-time

00:00:41.180 --> 00:00:41.190
inter-atomic team and I do real-time
 

00:00:41.190 --> 00:00:44.090
inter-atomic team and I do real-time
graphics and that's kind of what we're

00:00:44.090 --> 00:00:44.100
graphics and that's kind of what we're
 

00:00:44.100 --> 00:00:45.950
graphics and that's kind of what we're
talking about today so we have given

00:00:45.950 --> 00:00:45.960
talking about today so we have given
 

00:00:45.960 --> 00:00:48.200
talking about today so we have given
versions of this talk before and we

00:00:48.200 --> 00:00:48.210
versions of this talk before and we
 

00:00:48.210 --> 00:00:49.400
versions of this talk before and we
thought we were done and then we

00:00:49.400 --> 00:00:49.410
thought we were done and then we
 

00:00:49.410 --> 00:00:51.709
thought we were done and then we
realized that enough stuff has changed

00:00:51.709 --> 00:00:51.719
realized that enough stuff has changed
 

00:00:51.719 --> 00:00:54.020
realized that enough stuff has changed
inside the system that maybe it was time

00:00:54.020 --> 00:00:54.030
inside the system that maybe it was time
 

00:00:54.030 --> 00:00:55.729
inside the system that maybe it was time
to go through this again and see where

00:00:55.729 --> 00:00:55.739
to go through this again and see where
 

00:00:55.739 --> 00:00:58.939
to go through this again and see where
we're at so this is our attempt to do

00:00:58.939 --> 00:00:58.949
we're at so this is our attempt to do
 

00:00:58.949 --> 00:01:02.240
we're at so this is our attempt to do
that let's go so first of all there's

00:01:02.240 --> 00:01:02.250
that let's go so first of all there's
 

00:01:02.250 --> 00:01:03.889
that let's go so first of all there's
this word wondering what do we mean by

00:01:03.889 --> 00:01:03.899
this word wondering what do we mean by
 

00:01:03.899 --> 00:01:07.399
this word wondering what do we mean by
that normally it means melting fat in

00:01:07.399 --> 00:01:07.409
that normally it means melting fat in
 

00:01:07.409 --> 00:01:10.160
that normally it means melting fat in
order to clarify it it's not quite what

00:01:10.160 --> 00:01:10.170
order to clarify it it's not quite what
 

00:01:10.170 --> 00:01:11.719
order to clarify it it's not quite what
we're gonna talk about today instead

00:01:11.719 --> 00:01:11.729
we're gonna talk about today instead
 

00:01:11.729 --> 00:01:13.070
we're gonna talk about today instead
we're talking about the process of

00:01:13.070 --> 00:01:13.080
we're talking about the process of
 

00:01:13.080 --> 00:01:15.230
we're talking about the process of
actually turning all that stuff like

00:01:15.230 --> 00:01:15.240
actually turning all that stuff like
 

00:01:15.240 --> 00:01:17.030
actually turning all that stuff like
buttons and checkboxes and everything on

00:01:17.030 --> 00:01:17.040
buttons and checkboxes and everything on
 

00:01:17.040 --> 00:01:19.820
buttons and checkboxes and everything on
the screen into pixels that the user can

00:01:19.820 --> 00:01:19.830
the screen into pixels that the user can
 

00:01:19.830 --> 00:01:21.289
the screen into pixels that the user can
look at and there's a lot of things

00:01:21.289 --> 00:01:21.299
look at and there's a lot of things
 

00:01:21.299 --> 00:01:22.820
look at and there's a lot of things
going on there's a lot of details that

00:01:22.820 --> 00:01:22.830
going on there's a lot of details that
 

00:01:22.830 --> 00:01:25.880
going on there's a lot of details that
we aren't glossing over today because we

00:01:25.880 --> 00:01:25.890
we aren't glossing over today because we
 

00:01:25.890 --> 00:01:28.280
we aren't glossing over today because we
only have 40 minutes to do this but

00:01:28.280 --> 00:01:28.290
only have 40 minutes to do this but
 

00:01:28.290 --> 00:01:30.440
only have 40 minutes to do this but
we'll dump a lot of details on you along

00:01:30.440 --> 00:01:30.450
we'll dump a lot of details on you along
 

00:01:30.450 --> 00:01:32.450
we'll dump a lot of details on you along
the way so first of all I'm going to

00:01:32.450 --> 00:01:32.460
the way so first of all I'm going to
 

00:01:32.460 --> 00:01:33.590
the way so first of all I'm going to
take you through there's gonna be a

00:01:33.590 --> 00:01:33.600
take you through there's gonna be a
 

00:01:33.600 --> 00:01:35.179
take you through there's gonna be a
bunch of colored dots on the top and

00:01:35.179 --> 00:01:35.189
bunch of colored dots on the top and
 

00:01:35.189 --> 00:01:36.890
bunch of colored dots on the top and
these will be sort of a visual cue for a

00:01:36.890 --> 00:01:36.900
these will be sort of a visual cue for a
 

00:01:36.900 --> 00:01:38.929
these will be sort of a visual cue for a
lot of the rest of the talk so I'm gonna

00:01:38.929 --> 00:01:38.939
lot of the rest of the talk so I'm gonna
 

00:01:38.939 --> 00:01:40.670
lot of the rest of the talk so I'm gonna
walk through sort of the life of what

00:01:40.670 --> 00:01:40.680
walk through sort of the life of what
 

00:01:40.680 --> 00:01:42.560
walk through sort of the life of what
happens in the flow of information down

00:01:42.560 --> 00:01:42.570
happens in the flow of information down
 

00:01:42.570 --> 00:01:44.300
happens in the flow of information down
to the pixels on the screen really

00:01:44.300 --> 00:01:44.310
to the pixels on the screen really
 

00:01:44.310 --> 00:01:45.859
to the pixels on the screen really
quickly we have this thing called the

00:01:45.859 --> 00:01:45.869
quickly we have this thing called the
 

00:01:45.869 --> 00:01:48.770
quickly we have this thing called the
choreographer and that kicks in usually

00:01:48.770 --> 00:01:48.780
choreographer and that kicks in usually
 

00:01:48.780 --> 00:01:51.350
choreographer and that kicks in usually
60 times a second and it says hey vsync

00:01:51.350 --> 00:01:51.360
60 times a second and it says hey vsync
 

00:01:51.360 --> 00:01:53.749
60 times a second and it says hey vsync
this is the interval at which the frame

00:01:53.749 --> 00:01:53.759
this is the interval at which the frame
 

00:01:53.759 --> 00:01:56.630
this is the interval at which the frame
is being synced buffers flip onto the

00:01:56.630 --> 00:01:56.640
is being synced buffers flip onto the
 

00:01:56.640 --> 00:01:58.130
is being synced buffers flip onto the
screen it's a good time for us to

00:01:58.130 --> 00:01:58.140
screen it's a good time for us to
 

00:01:58.140 --> 00:02:00.350
screen it's a good time for us to
process a lot of information and then

00:02:00.350 --> 00:02:00.360
process a lot of information and then
 

00:02:00.360 --> 00:02:02.209
process a lot of information and then
handle rendering that information as a

00:02:02.209 --> 00:02:02.219
handle rendering that information as a
 

00:02:02.219 --> 00:02:03.679
handle rendering that information as a
result of that so we get a vsync

00:02:03.679 --> 00:02:03.689
result of that so we get a vsync
 

00:02:03.689 --> 00:02:08.930
result of that so we get a vsync
operation that's sent up to the Java SDK

00:02:08.930 --> 00:02:08.940
operation that's sent up to the Java SDK
 

00:02:08.940 --> 00:02:11.360
operation that's sent up to the Java SDK
Lan's and we're on the UI thread and all

00:02:11.360 --> 00:02:11.370
Lan's and we're on the UI thread and all
 

00:02:11.370 --> 00:02:12.770
Lan's and we're on the UI thread and all
of a sudden we need to process input

00:02:12.770 --> 00:02:12.780
of a sudden we need to process input
 

00:02:12.780 --> 00:02:15.350
of a sudden we need to process input
events which can trigger changes in

00:02:15.350 --> 00:02:15.360
events which can trigger changes in
 

00:02:15.360 --> 00:02:18.830
events which can trigger changes in
properties we also run any animations so

00:02:18.830 --> 00:02:18.840
properties we also run any animations so
 

00:02:18.840 --> 00:02:20.510
properties we also run any animations so
we change property values again that may

00:02:20.510 --> 00:02:20.520
we change property values again that may
 

00:02:20.520 --> 00:02:21.950
we change property values again that may
trigger things like layouts and

00:02:21.950 --> 00:02:21.960
trigger things like layouts and
 

00:02:21.960 --> 00:02:24.770
trigger things like layouts and
invalidation we do then the whole

00:02:24.770 --> 00:02:24.780
invalidation we do then the whole
 

00:02:24.780 --> 00:02:27.020
invalidation we do then the whole
traversal path which is measuring views

00:02:27.020 --> 00:02:27.030
traversal path which is measuring views
 

00:02:27.030 --> 00:02:29.060
traversal path which is measuring views
to figure out how large they are laying

00:02:29.060 --> 00:02:29.070
to figure out how large they are laying
 

00:02:29.070 --> 00:02:30.740
to figure out how large they are laying
them out which is actually positioning

00:02:30.740 --> 00:02:30.750
them out which is actually positioning
 

00:02:30.750 --> 00:02:32.810
them out which is actually positioning
them to where they need to be and then

00:02:32.810 --> 00:02:32.820
them to where they need to be and then
 

00:02:32.820 --> 00:02:34.430
them to where they need to be and then
drawing them once all of that

00:02:34.430 --> 00:02:34.440
drawing them once all of that
 

00:02:34.440 --> 00:02:36.590
drawing them once all of that
information is done we sync the result

00:02:36.590 --> 00:02:36.600
information is done we sync the result
 

00:02:36.600 --> 00:02:38.300
information is done we sync the result
of that information over to this thing

00:02:38.300 --> 00:02:38.310
of that information over to this thing
 

00:02:38.310 --> 00:02:40.970
of that information over to this thing
called the render thread and the render

00:02:40.970 --> 00:02:40.980
called the render thread and the render
 

00:02:40.980 --> 00:02:44.000
called the render thread and the render
thread takes that and says okay well I'm

00:02:44.000 --> 00:02:44.010
thread takes that and says okay well I'm
 

00:02:44.010 --> 00:02:47.450
thread takes that and says okay well I'm
going to then execute these I'm going to

00:02:47.450 --> 00:02:47.460
going to then execute these I'm going to
 

00:02:47.460 --> 00:02:49.670
going to then execute these I'm going to
basically turn these into native

00:02:49.670 --> 00:02:49.680
basically turn these into native
 

00:02:49.680 --> 00:02:51.890
basically turn these into native
versions of all that information we

00:02:51.890 --> 00:02:51.900
versions of all that information we
 

00:02:51.900 --> 00:02:53.990
versions of all that information we
produce at the Java layer and then I'm

00:02:53.990 --> 00:02:54.000
produce at the Java layer and then I'm
 

00:02:54.000 --> 00:02:56.360
produce at the Java layer and then I'm
going to get a buffer from the GPU so

00:02:56.360 --> 00:02:56.370
going to get a buffer from the GPU so
 

00:02:56.370 --> 00:02:57.290
going to get a buffer from the GPU so
that I have a place to write this

00:02:57.290 --> 00:02:57.300
that I have a place to write this
 

00:02:57.300 --> 00:02:59.090
that I have a place to write this
information and then I'm going to

00:02:59.090 --> 00:02:59.100
information and then I'm going to
 

00:02:59.100 --> 00:03:01.340
information and then I'm going to
actually issue all these GPU commands as

00:03:01.340 --> 00:03:01.350
actually issue all these GPU commands as
 

00:03:01.350 --> 00:03:03.440
actually issue all these GPU commands as
OpenGL stuff over there and then I'm

00:03:03.440 --> 00:03:03.450
OpenGL stuff over there and then I'm
 

00:03:03.450 --> 00:03:04.910
OpenGL stuff over there and then I'm
gonna say okay it's time to swap the

00:03:04.910 --> 00:03:04.920
gonna say okay it's time to swap the
 

00:03:04.920 --> 00:03:06.650
gonna say okay it's time to swap the
buffer and then I turn it over the GPU

00:03:06.650 --> 00:03:06.660
buffer and then I turn it over the GPU
 

00:03:06.660 --> 00:03:08.600
buffer and then I turn it over the GPU
and then the graphic system does

00:03:08.600 --> 00:03:08.610
and then the graphic system does
 

00:03:08.610 --> 00:03:10.100
and then the graphic system does
something called compositing and we're

00:03:10.100 --> 00:03:10.110
something called compositing and we're
 

00:03:10.110 --> 00:03:11.960
something called compositing and we're
gonna talk about most of these steps

00:03:11.960 --> 00:03:11.970
gonna talk about most of these steps
 

00:03:11.970 --> 00:03:13.699
gonna talk about most of these steps
today so compositing is I think

00:03:13.699 --> 00:03:13.709
today so compositing is I think
 

00:03:13.709 --> 00:03:15.470
today so compositing is I think
something we've never explained before

00:03:15.470 --> 00:03:15.480
something we've never explained before
 

00:03:15.480 --> 00:03:17.120
something we've never explained before
so we're gonna go in a little bit of

00:03:17.120 --> 00:03:17.130
so we're gonna go in a little bit of
 

00:03:17.130 --> 00:03:19.190
so we're gonna go in a little bit of
details but it's part of the end or the

00:03:19.190 --> 00:03:19.200
details but it's part of the end or the
 

00:03:19.200 --> 00:03:21.440
details but it's part of the end or the
rendering a picture so the little

00:03:21.440 --> 00:03:21.450
rendering a picture so the little
 

00:03:21.450 --> 00:03:22.880
rendering a picture so the little
colored dots on the top of the screen

00:03:22.880 --> 00:03:22.890
colored dots on the top of the screen
 

00:03:22.890 --> 00:03:24.560
colored dots on the top of the screen
will be sort of noting where we are in

00:03:24.560 --> 00:03:24.570
will be sort of noting where we are in
 

00:03:24.570 --> 00:03:26.210
will be sort of noting where we are in
the process as we work through a few

00:03:26.210 --> 00:03:26.220
the process as we work through a few
 

00:03:26.220 --> 00:03:28.280
the process as we work through a few
examples so that we can understand this

00:03:28.280 --> 00:03:28.290
examples so that we can understand this
 

00:03:28.290 --> 00:03:28.610
examples so that we can understand this
better

00:03:28.610 --> 00:03:28.620
better
 

00:03:28.620 --> 00:03:30.949
better
speaking of examples here's a simple one

00:03:30.949 --> 00:03:30.959
speaking of examples here's a simple one
 

00:03:30.959 --> 00:03:33.890
speaking of examples here's a simple one
so let's suppose that we have a user and

00:03:33.890 --> 00:03:33.900
so let's suppose that we have a user and
 

00:03:33.900 --> 00:03:35.990
so let's suppose that we have a user and
the user clicks on an item I wrote this

00:03:35.990 --> 00:03:36.000
the user clicks on an item I wrote this
 

00:03:36.000 --> 00:03:37.970
the user clicks on an item I wrote this
awesome recycler view application that

00:03:37.970 --> 00:03:37.980
awesome recycler view application that
 

00:03:37.980 --> 00:03:40.130
awesome recycler view application that
looks exactly like this I know it is

00:03:40.130 --> 00:03:40.140
looks exactly like this I know it is
 

00:03:40.140 --> 00:03:42.290
looks exactly like this I know it is
because that's a screenshot from my

00:03:42.290 --> 00:03:42.300
because that's a screenshot from my
 

00:03:42.300 --> 00:03:44.390
because that's a screenshot from my
awesome application it's a recycler view

00:03:44.390 --> 00:03:44.400
awesome application it's a recycler view
 

00:03:44.400 --> 00:03:46.880
awesome application it's a recycler view
with a bunch of items in it and when the

00:03:46.880 --> 00:03:46.890
with a bunch of items in it and when the
 

00:03:46.890 --> 00:03:49.009
with a bunch of items in it and when the
user clicks on when this amazing thing

00:03:49.009 --> 00:03:49.019
user clicks on when this amazing thing
 

00:03:49.019 --> 00:03:51.920
user clicks on when this amazing thing
happens it turns into a random color on

00:03:51.920 --> 00:03:51.930
happens it turns into a random color on
 

00:03:51.930 --> 00:03:54.199
happens it turns into a random color on
background it's incredible I could give

00:03:54.199 --> 00:03:54.209
background it's incredible I could give
 

00:03:54.209 --> 00:03:56.120
background it's incredible I could give
you the source but I don't know it's

00:03:56.120 --> 00:03:56.130
you the source but I don't know it's
 

00:03:56.130 --> 00:03:57.620
you the source but I don't know it's
pretty complicated I'm not sure you'd

00:03:57.620 --> 00:03:57.630
pretty complicated I'm not sure you'd
 

00:03:57.630 --> 00:03:59.479
pretty complicated I'm not sure you'd
understand it so here's the amazing

00:03:59.479 --> 00:03:59.489
understand it so here's the amazing
 

00:03:59.489 --> 00:04:01.699
understand it so here's the amazing
layout for my amazing demo application

00:04:01.699 --> 00:04:01.709
layout for my amazing demo application
 

00:04:01.709 --> 00:04:03.320
layout for my amazing demo application
there's a constraint layout there's a

00:04:03.320 --> 00:04:03.330
there's a constraint layout there's a
 

00:04:03.330 --> 00:04:05.300
there's a constraint layout there's a
recycler view inside of it and then I

00:04:05.300 --> 00:04:05.310
recycler view inside of it and then I
 

00:04:05.310 --> 00:04:07.130
recycler view inside of it and then I
populated it runtime with a bunch of

00:04:07.130 --> 00:04:07.140
populated it runtime with a bunch of
 

00:04:07.140 --> 00:04:08.150
populated it runtime with a bunch of
random items in there

00:04:08.150 --> 00:04:08.160
random items in there
 

00:04:08.160 --> 00:04:09.890
random items in there
all right the view hierarchy for this

00:04:09.890 --> 00:04:09.900
all right the view hierarchy for this
 

00:04:09.900 --> 00:04:12.259
all right the view hierarchy for this
thing looks basically like this in fact

00:04:12.259 --> 00:04:12.269
thing looks basically like this in fact
 

00:04:12.269 --> 00:04:13.940
thing looks basically like this in fact
it doesn't look basically like this it

00:04:13.940 --> 00:04:13.950
it doesn't look basically like this it
 

00:04:13.950 --> 00:04:16.430
it doesn't look basically like this it
looks exactly like this so you walk down

00:04:16.430 --> 00:04:16.440
looks exactly like this so you walk down
 

00:04:16.440 --> 00:04:18.050
looks exactly like this so you walk down
from the decor of you and you've got it

00:04:18.050 --> 00:04:18.060
from the decor of you and you've got it
 

00:04:18.060 --> 00:04:20.009
from the decor of you and you've got it
linear layout and frame layout

00:04:20.009 --> 00:04:20.019
linear layout and frame layout
 

00:04:20.019 --> 00:04:21.479
linear layout and frame layout
actually you sure why but we have the

00:04:21.479 --> 00:04:21.489
actually you sure why but we have the
 

00:04:21.489 --> 00:04:23.700
actually you sure why but we have the
deep nesting there but whatever history

00:04:23.700 --> 00:04:23.710
deep nesting there but whatever history
 

00:04:23.710 --> 00:04:25.920
deep nesting there but whatever history
we have a bunch of stuff for action bar

00:04:25.920 --> 00:04:25.930
we have a bunch of stuff for action bar
 

00:04:25.930 --> 00:04:27.749
we have a bunch of stuff for action bar
in there none of that really matters

00:04:27.749 --> 00:04:27.759
in there none of that really matters
 

00:04:27.759 --> 00:04:29.430
in there none of that really matters
what we're concerned about here is

00:04:29.430 --> 00:04:29.440
what we're concerned about here is
 

00:04:29.440 --> 00:04:31.170
what we're concerned about here is
what's actually going on in the content

00:04:31.170 --> 00:04:31.180
what's actually going on in the content
 

00:04:31.180 --> 00:04:32.820
what's actually going on in the content
hierarchy because that's what you can

00:04:32.820 --> 00:04:32.830
hierarchy because that's what you can
 

00:04:32.830 --> 00:04:34.680
hierarchy because that's what you can
affect with your application so we have

00:04:34.680 --> 00:04:34.690
affect with your application so we have
 

00:04:34.690 --> 00:04:35.999
affect with your application so we have
content frame layout we have the

00:04:35.999 --> 00:04:36.009
content frame layout we have the
 

00:04:36.009 --> 00:04:37.260
content frame layout we have the
constraint layout on the outside

00:04:37.260 --> 00:04:37.270
constraint layout on the outside
 

00:04:37.270 --> 00:04:38.369
constraint layout on the outside
wrapping the recyclerview

00:04:38.369 --> 00:04:38.379
wrapping the recyclerview
 

00:04:38.379 --> 00:04:40.619
wrapping the recyclerview
and then all of the items specifically

00:04:40.619 --> 00:04:40.629
and then all of the items specifically
 

00:04:40.629 --> 00:04:42.180
and then all of the items specifically
these are the items that are on screen

00:04:42.180 --> 00:04:42.190
these are the items that are on screen
 

00:04:42.190 --> 00:04:44.010
these are the items that are on screen
because those are the only ones that are

00:04:44.010 --> 00:04:44.020
because those are the only ones that are
 

00:04:44.020 --> 00:04:46.260
because those are the only ones that are
actually being measured and laid out and

00:04:46.260 --> 00:04:46.270
actually being measured and laid out and
 

00:04:46.270 --> 00:04:50.010
actually being measured and laid out and
drawn alright so what happens we will

00:04:50.010 --> 00:04:50.020
drawn alright so what happens we will
 

00:04:50.020 --> 00:04:51.629
drawn alright so what happens we will
walk through this example and walk

00:04:51.629 --> 00:04:51.639
walk through this example and walk
 

00:04:51.639 --> 00:04:53.550
walk through this example and walk
through that entire flow that we went

00:04:53.550 --> 00:04:53.560
through that entire flow that we went
 

00:04:53.560 --> 00:04:55.770
through that entire flow that we went
through at the beginning so user clicks

00:04:55.770 --> 00:04:55.780
through at the beginning so user clicks
 

00:04:55.780 --> 00:04:58.740
through at the beginning so user clicks
there's a vsync operation that gets sent

00:04:58.740 --> 00:04:58.750
there's a vsync operation that gets sent
 

00:04:58.750 --> 00:05:01.080
there's a vsync operation that gets sent
up and we process input during the input

00:05:01.080 --> 00:05:01.090
up and we process input during the input
 

00:05:01.090 --> 00:05:03.330
up and we process input during the input
phase and we notice that this is a click

00:05:03.330 --> 00:05:03.340
phase and we notice that this is a click
 

00:05:03.340 --> 00:05:05.550
phase and we notice that this is a click
I'm glossing over some details here

00:05:05.550 --> 00:05:05.560
I'm glossing over some details here
 

00:05:05.560 --> 00:05:07.290
I'm glossing over some details here
actually we're gonna notice first that

00:05:07.290 --> 00:05:07.300
actually we're gonna notice first that
 

00:05:07.300 --> 00:05:08.550
actually we're gonna notice first that
there was it down and then there was an

00:05:08.550 --> 00:05:08.560
there was it down and then there was an
 

00:05:08.560 --> 00:05:10.159
there was it down and then there was an
up and then I guess processes to click

00:05:10.159 --> 00:05:10.169
up and then I guess processes to click
 

00:05:10.169 --> 00:05:12.270
up and then I guess processes to click
just take it for granted we're

00:05:12.270 --> 00:05:12.280
just take it for granted we're
 

00:05:12.280 --> 00:05:13.499
just take it for granted we're
eventually going to process it click

00:05:13.499 --> 00:05:13.509
eventually going to process it click
 

00:05:13.509 --> 00:05:16.080
eventually going to process it click
here alright that ends up in this item

00:05:16.080 --> 00:05:16.090
here alright that ends up in this item
 

00:05:16.090 --> 00:05:17.999
here alright that ends up in this item
clicked method that I haven't may amaze

00:05:17.999 --> 00:05:18.009
clicked method that I haven't may amaze
 

00:05:18.009 --> 00:05:20.790
clicked method that I haven't may amaze
Allah complex example and in there we're

00:05:20.790 --> 00:05:20.800
Allah complex example and in there we're
 

00:05:20.800 --> 00:05:22.320
Allah complex example and in there we're
going to set the background color on

00:05:22.320 --> 00:05:22.330
going to set the background color on
 

00:05:22.330 --> 00:05:24.689
going to set the background color on
this item to a random color that's why I

00:05:24.689 --> 00:05:24.699
this item to a random color that's why I
 

00:05:24.699 --> 00:05:28.020
this item to a random color that's why I
call the method random all right that

00:05:28.020 --> 00:05:28.030
call the method random all right that
 

00:05:28.030 --> 00:05:29.879
call the method random all right that
gets sent over to the set background

00:05:29.879 --> 00:05:29.889
gets sent over to the set background
 

00:05:29.889 --> 00:05:32.730
gets sent over to the set background
color in view Java which does a bunch of

00:05:32.730 --> 00:05:32.740
color in view Java which does a bunch of
 

00:05:32.740 --> 00:05:35.159
color in view Java which does a bunch of
stuff to set the color on the background

00:05:35.159 --> 00:05:35.169
stuff to set the color on the background
 

00:05:35.169 --> 00:05:37.140
stuff to set the color on the background
drawable and then eventually calls this

00:05:37.140 --> 00:05:37.150
drawable and then eventually calls this
 

00:05:37.150 --> 00:05:40.350
drawable and then eventually calls this
method called invalidate invalidation is

00:05:40.350 --> 00:05:40.360
method called invalidate invalidation is
 

00:05:40.360 --> 00:05:42.629
method called invalidate invalidation is
the process it doesn't actually redraw

00:05:42.629 --> 00:05:42.639
the process it doesn't actually redraw
 

00:05:42.639 --> 00:05:44.550
the process it doesn't actually redraw
the views it's the process of telling

00:05:44.550 --> 00:05:44.560
the views it's the process of telling
 

00:05:44.560 --> 00:05:46.260
the views it's the process of telling
the view hierarchy that something needs

00:05:46.260 --> 00:05:46.270
the view hierarchy that something needs
 

00:05:46.270 --> 00:05:51.029
the view hierarchy that something needs
to be redrawn so you get a click that

00:05:51.029 --> 00:05:51.039
to be redrawn so you get a click that
 

00:05:51.039 --> 00:05:54.059
to be redrawn so you get a click that
happens on the item down at the bottom

00:05:54.059 --> 00:05:54.069
happens on the item down at the bottom
 

00:05:54.069 --> 00:05:56.219
happens on the item down at the bottom
so that item to you see it's surrounded

00:05:56.219 --> 00:05:56.229
so that item to you see it's surrounded
 

00:05:56.229 --> 00:05:58.110
so that item to you see it's surrounded
by green we have a little invalidate

00:05:58.110 --> 00:05:58.120
by green we have a little invalidate
 

00:05:58.120 --> 00:06:00.120
by green we have a little invalidate
method that gets called on that and that

00:06:00.120 --> 00:06:00.130
method that gets called on that and that
 

00:06:00.130 --> 00:06:02.100
method that gets called on that and that
basically walks up the tree it calls a

00:06:02.100 --> 00:06:02.110
basically walks up the tree it calls a
 

00:06:02.110 --> 00:06:03.839
basically walks up the tree it calls a
series of methods all the way up to

00:06:03.839 --> 00:06:03.849
series of methods all the way up to
 

00:06:03.849 --> 00:06:06.059
series of methods all the way up to
treat because the view needs knows that

00:06:06.059 --> 00:06:06.069
treat because the view needs knows that
 

00:06:06.069 --> 00:06:07.680
treat because the view needs knows that
it needs to be redrawn but it actually

00:06:07.680 --> 00:06:07.690
it needs to be redrawn but it actually
 

00:06:07.690 --> 00:06:09.600
it needs to be redrawn but it actually
needs to propagate that information all

00:06:09.600 --> 00:06:09.610
needs to propagate that information all
 

00:06:09.610 --> 00:06:11.519
needs to propagate that information all
the way up the hierarchy so that then we

00:06:11.519 --> 00:06:11.529
the way up the hierarchy so that then we
 

00:06:11.529 --> 00:06:13.260
the way up the hierarchy so that then we
can redraw all the things on the way

00:06:13.260 --> 00:06:13.270
can redraw all the things on the way
 

00:06:13.270 --> 00:06:14.070
can redraw all the things on the way
down later

00:06:14.070 --> 00:06:14.080
down later
 

00:06:14.080 --> 00:06:16.769
down later
so we call invalid a child all the way

00:06:16.769 --> 00:06:16.779
so we call invalid a child all the way
 

00:06:16.779 --> 00:06:19.230
so we call invalid a child all the way
up the hierarchy that eventually ends up

00:06:19.230 --> 00:06:19.240
up the hierarchy that eventually ends up
 

00:06:19.240 --> 00:06:22.260
up the hierarchy that eventually ends up
in a massive class that we have called

00:06:22.260 --> 00:06:22.270
in a massive class that we have called
 

00:06:22.270 --> 00:06:24.870
in a massive class that we have called
view route in pull Java and we have this

00:06:24.870 --> 00:06:24.880
view route in pull Java and we have this
 

00:06:24.880 --> 00:06:27.600
view route in pull Java and we have this
invalidate child method there and that

00:06:27.600 --> 00:06:27.610
invalidate child method there and that
 

00:06:27.610 --> 00:06:29.939
invalidate child method there and that
basically does nothing except says okay

00:06:29.939 --> 00:06:29.949
basically does nothing except says okay
 

00:06:29.949 --> 00:06:31.469
basically does nothing except says okay
I need to schedule a traversal which

00:06:31.469 --> 00:06:31.479
I need to schedule a traversal which
 

00:06:31.479 --> 00:06:32.040
I need to schedule a traversal which
means

00:06:32.040 --> 00:06:32.050
means
 

00:06:32.050 --> 00:06:33.629
means
okay I've taken information that

00:06:33.629 --> 00:06:33.639
okay I've taken information that
 

00:06:33.639 --> 00:06:35.640
okay I've taken information that
somebody got invalidated somewhere that

00:06:35.640 --> 00:06:35.650
somebody got invalidated somewhere that
 

00:06:35.650 --> 00:06:37.320
somebody got invalidated somewhere that
means that I need to run my traversal

00:06:37.320 --> 00:06:37.330
means that I need to run my traversal
 

00:06:37.330 --> 00:06:40.309
means that I need to run my traversal
code later at the end of this process

00:06:40.309 --> 00:06:40.319
code later at the end of this process
 

00:06:40.319 --> 00:06:43.320
code later at the end of this process
traversal is the process of doing all

00:06:43.320 --> 00:06:43.330
traversal is the process of doing all
 

00:06:43.330 --> 00:06:44.730
traversal is the process of doing all
the phases that are necessary for

00:06:44.730 --> 00:06:44.740
the phases that are necessary for
 

00:06:44.740 --> 00:06:46.110
the phases that are necessary for
actually rendering that frame

00:06:46.110 --> 00:06:46.120
actually rendering that frame
 

00:06:46.120 --> 00:06:49.619
actually rendering that frame
specifically it does measure how big the

00:06:49.619 --> 00:06:49.629
specifically it does measure how big the
 

00:06:49.629 --> 00:06:52.439
specifically it does measure how big the
views are layout setting the views

00:06:52.439 --> 00:06:52.449
views are layout setting the views
 

00:06:52.449 --> 00:06:54.659
views are layout setting the views
position and size and drawing the views

00:06:54.659 --> 00:06:54.669
position and size and drawing the views
 

00:06:54.669 --> 00:06:57.270
position and size and drawing the views
all of that is called traversal so we've

00:06:57.270 --> 00:06:57.280
all of that is called traversal so we've
 

00:06:57.280 --> 00:06:58.800
all of that is called traversal so we've
scheduled a traversal that's going to

00:06:58.800 --> 00:06:58.810
scheduled a traversal that's going to
 

00:06:58.810 --> 00:07:01.230
scheduled a traversal that's going to
happen at some later time and that later

00:07:01.230 --> 00:07:01.240
happen at some later time and that later
 

00:07:01.240 --> 00:07:04.050
happen at some later time and that later
time is now so in the same frame we end

00:07:04.050 --> 00:07:04.060
time is now so in the same frame we end
 

00:07:04.060 --> 00:07:06.149
time is now so in the same frame we end
up in the traversal code in this perform

00:07:06.149 --> 00:07:06.159
up in the traversal code in this perform
 

00:07:06.159 --> 00:07:08.189
up in the traversal code in this perform
traversals method it's going to do a

00:07:08.189 --> 00:07:08.199
traversals method it's going to do a
 

00:07:08.199 --> 00:07:11.610
traversals method it's going to do a
perform trah which ends up calling a

00:07:11.610 --> 00:07:11.620
perform trah which ends up calling a
 

00:07:11.620 --> 00:07:13.680
perform trah which ends up calling a
draw method onto core view and basically

00:07:13.680 --> 00:07:13.690
draw method onto core view and basically
 

00:07:13.690 --> 00:07:15.480
draw method onto core view and basically
that's going to propagate all the way

00:07:15.480 --> 00:07:15.490
that's going to propagate all the way
 

00:07:15.490 --> 00:07:17.909
that's going to propagate all the way
down so the draw method actually ends up

00:07:17.909 --> 00:07:17.919
down so the draw method actually ends up
 

00:07:17.919 --> 00:07:20.339
down so the draw method actually ends up
in an optimization that we implemented

00:07:20.339 --> 00:07:20.349
in an optimization that we implemented
 

00:07:20.349 --> 00:07:24.330
in an optimization that we implemented
back in Monaco called get display list

00:07:24.330 --> 00:07:24.340
back in Monaco called get display list
 

00:07:24.340 --> 00:07:26.640
back in Monaco called get display list
so a display list is a structure that

00:07:26.640 --> 00:07:26.650
so a display list is a structure that
 

00:07:26.650 --> 00:07:29.040
so a display list is a structure that
stores the rendering information right

00:07:29.040 --> 00:07:29.050
stores the rendering information right
 

00:07:29.050 --> 00:07:31.800
stores the rendering information right
so if you look at the way the button

00:07:31.800 --> 00:07:31.810
so if you look at the way the button
 

00:07:31.810 --> 00:07:33.959
so if you look at the way the button
code is written or you know view code in

00:07:33.959 --> 00:07:33.969
code is written or you know view code in
 

00:07:33.969 --> 00:07:36.059
code is written or you know view code in
general we call graphics commands in

00:07:36.059 --> 00:07:36.069
general we call graphics commands in
 

00:07:36.069 --> 00:07:37.920
general we call graphics commands in
canvas like I don't know draw

00:07:37.920 --> 00:07:37.930
canvas like I don't know draw
 

00:07:37.930 --> 00:07:40.050
canvas like I don't know draw
backgrounds draw drawable draw a line

00:07:40.050 --> 00:07:40.060
backgrounds draw drawable draw a line
 

00:07:40.060 --> 00:07:43.469
backgrounds draw drawable draw a line
whatever but these end up as operations

00:07:43.469 --> 00:07:43.479
whatever but these end up as operations
 

00:07:43.479 --> 00:07:45.330
whatever but these end up as operations
in a display list this is a compact way

00:07:45.330 --> 00:07:45.340
in a display list this is a compact way
 

00:07:45.340 --> 00:07:47.999
in a display list this is a compact way
of representing those operations as well

00:07:47.999 --> 00:07:48.009
of representing those operations as well
 

00:07:48.009 --> 00:07:49.790
of representing those operations as well
as the parameters to the option up to

00:07:49.790 --> 00:07:49.800
as the parameters to the option up to
 

00:07:49.800 --> 00:07:52.529
as the parameters to the option up to
operations so we call get display list

00:07:52.529 --> 00:07:52.539
operations so we call get display list
 

00:07:52.539 --> 00:07:55.080
operations so we call get display list
the decor of you did not change in fact

00:07:55.080 --> 00:07:55.090
the decor of you did not change in fact
 

00:07:55.090 --> 00:07:57.089
the decor of you did not change in fact
so it's going to say well I didn't

00:07:57.089 --> 00:07:57.099
so it's going to say well I didn't
 

00:07:57.099 --> 00:07:58.290
so it's going to say well I didn't
change but I can certainly get the

00:07:58.290 --> 00:07:58.300
change but I can certainly get the
 

00:07:58.300 --> 00:08:00.809
change but I can certainly get the
display was for my child and then on all

00:08:00.809 --> 00:08:00.819
display was for my child and then on all
 

00:08:00.819 --> 00:08:02.610
display was for my child and then on all
the way down the tree until he gets to

00:08:02.610 --> 00:08:02.620
the way down the tree until he gets to
 

00:08:02.620 --> 00:08:04.890
the way down the tree until he gets to
item two and it says oh I did change

00:08:04.890 --> 00:08:04.900
item two and it says oh I did change
 

00:08:04.900 --> 00:08:07.320
item two and it says oh I did change
like when invalidate was called on me

00:08:07.320 --> 00:08:07.330
like when invalidate was called on me
 

00:08:07.330 --> 00:08:08.670
like when invalidate was called on me
that triggered something so that I know

00:08:08.670 --> 00:08:08.680
that triggered something so that I know
 

00:08:08.680 --> 00:08:10.950
that triggered something so that I know
I need to redraw myself so get display

00:08:10.950 --> 00:08:10.960
I need to redraw myself so get display
 

00:08:10.960 --> 00:08:12.899
I need to redraw myself so get display
list actually ends up being a draw call

00:08:12.899 --> 00:08:12.909
list actually ends up being a draw call
 

00:08:12.909 --> 00:08:15.839
list actually ends up being a draw call
on the view where it regenerates its own

00:08:15.839 --> 00:08:15.849
on the view where it regenerates its own
 

00:08:15.849 --> 00:08:20.279
on the view where it regenerates its own
display list so now it so ends up in the

00:08:20.279 --> 00:08:20.289
display list so now it so ends up in the
 

00:08:20.289 --> 00:08:21.930
display list so now it so ends up in the
salon draw method that ends up in the

00:08:21.930 --> 00:08:21.940
salon draw method that ends up in the
 

00:08:21.940 --> 00:08:23.610
salon draw method that ends up in the
operations in the display was for that

00:08:23.610 --> 00:08:23.620
operations in the display was for that
 

00:08:23.620 --> 00:08:26.219
operations in the display was for that
display was consists of you know for

00:08:26.219 --> 00:08:26.229
display was consists of you know for
 

00:08:26.229 --> 00:08:28.439
display was consists of you know for
this item basically rect information and

00:08:28.439 --> 00:08:28.449
this item basically rect information and
 

00:08:28.449 --> 00:08:31.529
this item basically rect information and
text information pretty basic and then

00:08:31.529 --> 00:08:31.539
text information pretty basic and then
 

00:08:31.539 --> 00:08:34.079
text information pretty basic and then
we have the display list for basically

00:08:34.079 --> 00:08:34.089
we have the display list for basically
 

00:08:34.089 --> 00:08:36.209
we have the display list for basically
the entire hierarchy right so it wasn't

00:08:36.209 --> 00:08:36.219
the entire hierarchy right so it wasn't
 

00:08:36.219 --> 00:08:37.949
the entire hierarchy right so it wasn't
just the view itself but we have the

00:08:37.949 --> 00:08:37.959
just the view itself but we have the
 

00:08:37.959 --> 00:08:39.899
just the view itself but we have the
view hierarchy itself is reproduced in

00:08:39.899 --> 00:08:39.909
view hierarchy itself is reproduced in
 

00:08:39.909 --> 00:08:41.939
view hierarchy itself is reproduced in
this hierarchy of display lists all the

00:08:41.939 --> 00:08:41.949
this hierarchy of display lists all the
 

00:08:41.949 --> 00:08:42.870
this hierarchy of display lists all the
way down

00:08:42.870 --> 00:08:42.880
way down
 

00:08:42.880 --> 00:08:44.970
way down
so now we have to display was for the

00:08:44.970 --> 00:08:44.980
so now we have to display was for the
 

00:08:44.980 --> 00:08:47.220
so now we have to display was for the
entire tree and that's all that we need

00:08:47.220 --> 00:08:47.230
entire tree and that's all that we need
 

00:08:47.230 --> 00:08:48.809
entire tree and that's all that we need
to do on the UI thread now we need to

00:08:48.809 --> 00:08:48.819
to do on the UI thread now we need to
 

00:08:48.819 --> 00:08:50.970
to do on the UI thread now we need to
sync that information over to the render

00:08:50.970 --> 00:08:50.980
sync that information over to the render
 

00:08:50.980 --> 00:08:52.410
sync that information over to the render
thread and the render thread is a

00:08:52.410 --> 00:08:52.420
thread and the render thread is a
 

00:08:52.420 --> 00:08:53.879
thread and the render thread is a
separate thread that's actually dealing

00:08:53.879 --> 00:08:53.889
separate thread that's actually dealing
 

00:08:53.889 --> 00:08:56.189
separate thread that's actually dealing
with the GPU side of this operation on

00:08:56.189 --> 00:08:56.199
with the GPU side of this operation on
 

00:08:56.199 --> 00:08:57.660
with the GPU side of this operation on
the Java site we produced all the

00:08:57.660 --> 00:08:57.670
the Java site we produced all the
 

00:08:57.670 --> 00:09:00.180
the Java site we produced all the
information on the native side then we

00:09:00.180 --> 00:09:00.190
information on the native side then we
 

00:09:00.190 --> 00:09:02.069
information on the native side then we
actually produce we take that

00:09:02.069 --> 00:09:02.079
actually produce we take that
 

00:09:02.079 --> 00:09:03.689
actually produce we take that
information then sync it over to the GPU

00:09:03.689 --> 00:09:03.699
information then sync it over to the GPU
 

00:09:03.699 --> 00:09:06.600
information then sync it over to the GPU
so we have the sync operation where

00:09:06.600 --> 00:09:06.610
so we have the sync operation where
 

00:09:06.610 --> 00:09:08.790
so we have the sync operation where
basically we copy a handle over there

00:09:08.790 --> 00:09:08.800
basically we copy a handle over there
 

00:09:08.800 --> 00:09:11.490
basically we copy a handle over there
and we also copy some related

00:09:11.490 --> 00:09:11.500
and we also copy some related
 

00:09:11.500 --> 00:09:13.319
and we also copy some related
information we copy the damaged area

00:09:13.319 --> 00:09:13.329
information we copy the damaged area
 

00:09:13.329 --> 00:09:15.120
information we copy the damaged area
because it's important to know that that

00:09:15.120 --> 00:09:15.130
because it's important to know that that
 

00:09:15.130 --> 00:09:17.160
because it's important to know that that
item - that's the only thing that

00:09:17.160 --> 00:09:17.170
item - that's the only thing that
 

00:09:17.170 --> 00:09:19.319
item - that's the only thing that
changed during that frame which means we

00:09:19.319 --> 00:09:19.329
changed during that frame which means we
 

00:09:19.329 --> 00:09:20.999
changed during that frame which means we
don't need to redraw anything else

00:09:20.999 --> 00:09:21.009
don't need to redraw anything else
 

00:09:21.009 --> 00:09:23.100
don't need to redraw anything else
outside of that area so we're gonna copy

00:09:23.100 --> 00:09:23.110
outside of that area so we're gonna copy
 

00:09:23.110 --> 00:09:24.749
outside of that area so we're gonna copy
over the clip bounds there so that we

00:09:24.749 --> 00:09:24.759
over the clip bounds there so that we
 

00:09:24.759 --> 00:09:27.150
over the clip bounds there so that we
know what needs to be redrawn and we're

00:09:27.150 --> 00:09:27.160
know what needs to be redrawn and we're
 

00:09:27.160 --> 00:09:29.129
know what needs to be redrawn and we're
also going to do some optimization stuff

00:09:29.129 --> 00:09:29.139
also going to do some optimization stuff
 

00:09:29.139 --> 00:09:31.530
also going to do some optimization stuff
like uploading bitmaps so this is a good

00:09:31.530 --> 00:09:31.540
like uploading bitmaps so this is a good
 

00:09:31.540 --> 00:09:32.730
like uploading bitmaps so this is a good
time to do it at the beginning of the

00:09:32.730 --> 00:09:32.740
time to do it at the beginning of the
 

00:09:32.740 --> 00:09:34.079
time to do it at the beginning of the
frame give them some time to actually

00:09:34.079 --> 00:09:34.089
frame give them some time to actually
 

00:09:34.089 --> 00:09:36.300
frame give them some time to actually
turn those into textures along the way

00:09:36.300 --> 00:09:36.310
turn those into textures along the way
 

00:09:36.310 --> 00:09:37.470
turn those into textures along the way
while we're doing the other stuff it

00:09:37.470 --> 00:09:37.480
while we're doing the other stuff it
 

00:09:37.480 --> 00:09:39.090
while we're doing the other stuff it
mentions here that we're uploading the

00:09:39.090 --> 00:09:39.100
mentions here that we're uploading the
 

00:09:39.100 --> 00:09:40.559
mentions here that we're uploading the
known hardware bitmaps so how are

00:09:40.559 --> 00:09:40.569
known hardware bitmaps so how are
 

00:09:40.569 --> 00:09:41.970
known hardware bitmaps so how are
bitmaps is a new type of bitmap

00:09:41.970 --> 00:09:41.980
bitmaps is a new type of bitmap
 

00:09:41.980 --> 00:09:43.680
bitmaps is a new type of bitmap
configuration that was added in Android

00:09:43.680 --> 00:09:43.690
configuration that was added in Android
 

00:09:43.690 --> 00:09:44.160
configuration that was added in Android
Oh

00:09:44.160 --> 00:09:44.170
Oh
 

00:09:44.170 --> 00:09:45.930
Oh
so typically when you have a bitmap we

00:09:45.930 --> 00:09:45.940
so typically when you have a bitmap we
 

00:09:45.940 --> 00:09:47.579
so typically when you have a bitmap we
have to allocate the memory on the Java

00:09:47.579 --> 00:09:47.589
have to allocate the memory on the Java
 

00:09:47.589 --> 00:09:49.499
have to allocate the memory on the Java
side and then when it comes time to draw

00:09:49.499 --> 00:09:49.509
side and then when it comes time to draw
 

00:09:49.509 --> 00:09:51.120
side and then when it comes time to draw
we have to make a copy of the bitmap on

00:09:51.120 --> 00:09:51.130
we have to make a copy of the bitmap on
 

00:09:51.130 --> 00:09:53.579
we have to make a copy of the bitmap on
the GPU this is expensive in text time

00:09:53.579 --> 00:09:53.589
the GPU this is expensive in text time
 

00:09:53.589 --> 00:09:55.199
the GPU this is expensive in text time
it doubles the amount of RAM we are

00:09:55.199 --> 00:09:55.209
it doubles the amount of RAM we are
 

00:09:55.209 --> 00:09:57.179
it doubles the amount of RAM we are
using so using the hardware bitmaps that

00:09:57.179 --> 00:09:57.189
using so using the hardware bitmaps that
 

00:09:57.189 --> 00:09:59.670
using so using the hardware bitmaps that
are available in Oreo you can skip the

00:09:59.670 --> 00:09:59.680
are available in Oreo you can skip the
 

00:09:59.680 --> 00:10:01.889
are available in Oreo you can skip the
Java side of the equation and you can

00:10:01.889 --> 00:10:01.899
Java side of the equation and you can
 

00:10:01.899 --> 00:10:03.780
Java side of the equation and you can
have a bitmap that leaves only on the

00:10:03.780 --> 00:10:03.790
have a bitmap that leaves only on the
 

00:10:03.790 --> 00:10:05.040
have a bitmap that leaves only on the
GPUs which we're not going to modify

00:10:05.040 --> 00:10:05.050
GPUs which we're not going to modify
 

00:10:05.050 --> 00:10:07.170
GPUs which we're not going to modify
this bitmap ever again this is a really

00:10:07.170 --> 00:10:07.180
this bitmap ever again this is a really
 

00:10:07.180 --> 00:10:09.540
this bitmap ever again this is a really
efficient way memory wise to store your

00:10:09.540 --> 00:10:09.550
efficient way memory wise to store your
 

00:10:09.550 --> 00:10:12.389
efficient way memory wise to store your
bitmaps memory we have mentioned the

00:10:12.389 --> 00:10:12.399
bitmaps memory we have mentioned the
 

00:10:12.399 --> 00:10:13.949
bitmaps memory we have mentioned the
render thread before this is something

00:10:13.949 --> 00:10:13.959
render thread before this is something
 

00:10:13.959 --> 00:10:15.389
render thread before this is something
that we introduced in the lollipop

00:10:15.389 --> 00:10:15.399
that we introduced in the lollipop
 

00:10:15.399 --> 00:10:17.759
that we introduced in the lollipop
release it is a separate thread that

00:10:17.759 --> 00:10:17.769
release it is a separate thread that
 

00:10:17.769 --> 00:10:19.860
release it is a separate thread that
only talks to the GPU it's native code

00:10:19.860 --> 00:10:19.870
only talks to the GPU it's native code
 

00:10:19.870 --> 00:10:21.420
only talks to the GPU it's native code
there's no call-out so after Java code

00:10:21.420 --> 00:10:21.430
there's no call-out so after Java code
 

00:10:21.430 --> 00:10:23.189
there's no call-out so after Java code
there's certainly no call-outs out to

00:10:23.189 --> 00:10:23.199
there's certainly no call-outs out to
 

00:10:23.199 --> 00:10:25.410
there's certainly no call-outs out to
application code it just talks to the

00:10:25.410 --> 00:10:25.420
application code it just talks to the
 

00:10:25.420 --> 00:10:28.050
application code it just talks to the
GPU we did this so we still need to do

00:10:28.050 --> 00:10:28.060
GPU we did this so we still need to do
 

00:10:28.060 --> 00:10:29.550
GPU we did this so we still need to do
basically the same thing we did pre

00:10:29.550 --> 00:10:29.560
basically the same thing we did pre
 

00:10:29.560 --> 00:10:31.379
basically the same thing we did pre
render thread which is we produce all

00:10:31.379 --> 00:10:31.389
render thread which is we produce all
 

00:10:31.389 --> 00:10:33.269
render thread which is we produce all
the display list information and then we

00:10:33.269 --> 00:10:33.279
the display list information and then we
 

00:10:33.279 --> 00:10:36.689
the display list information and then we
sink or we send that display list

00:10:36.689 --> 00:10:36.699
sink or we send that display list
 

00:10:36.699 --> 00:10:38.879
sink or we send that display list
information to the GPU so it's sort of

00:10:38.879 --> 00:10:38.889
information to the GPU so it's sort of
 

00:10:38.889 --> 00:10:40.980
information to the GPU so it's sort of
serial but the render thread is able to

00:10:40.980 --> 00:10:40.990
serial but the render thread is able to
 

00:10:40.990 --> 00:10:44.699
serial but the render thread is able to
do things atomically like the circular

00:10:44.699 --> 00:10:44.709
do things atomically like the circular
 

00:10:44.709 --> 00:10:46.530
do things atomically like the circular
reveal animations as well as the ripple

00:10:46.530 --> 00:10:46.540
reveal animations as well as the ripple
 

00:10:46.540 --> 00:10:48.629
reveal animations as well as the ripple
animations as well as vector drawable

00:10:48.629 --> 00:10:48.639
animations as well as vector drawable
 

00:10:48.639 --> 00:10:51.449
animations as well as vector drawable
animations can happen atomically on the

00:10:51.449 --> 00:10:51.459
animations can happen atomically on the
 

00:10:51.459 --> 00:10:52.799
animations can happen atomically on the
render thread so that's something that

00:10:52.799 --> 00:10:52.809
render thread so that's something that
 

00:10:52.809 --> 00:10:54.569
render thread so that's something that
can happen without stalling the UI

00:10:54.569 --> 00:10:54.579
can happen without stalling the UI
 

00:10:54.579 --> 00:10:55.500
can happen without stalling the UI
thread and in the

00:10:55.500 --> 00:10:55.510
thread and in the
 

00:10:55.510 --> 00:10:57.420
thread and in the
I'm the UI thread can be doing other

00:10:57.420 --> 00:10:57.430
I'm the UI thread can be doing other
 

00:10:57.430 --> 00:10:59.700
I'm the UI thread can be doing other
things while it's idle after it's synced

00:10:59.700 --> 00:10:59.710
things while it's idle after it's synced
 

00:10:59.710 --> 00:11:02.280
things while it's idle after it's synced
like maybe some of the the idle prefetch

00:11:02.280 --> 00:11:02.290
like maybe some of the the idle prefetch
 

00:11:02.290 --> 00:11:04.200
like maybe some of the the idle prefetch
worked for recyclerview that was done

00:11:04.200 --> 00:11:04.210
worked for recyclerview that was done
 

00:11:04.210 --> 00:11:07.200
worked for recyclerview that was done
last year so render thread kicks in

00:11:07.200 --> 00:11:07.210
last year so render thread kicks in
 

00:11:07.210 --> 00:11:09.090
last year so render thread kicks in
we've synced everything we have the

00:11:09.090 --> 00:11:09.100
we've synced everything we have the
 

00:11:09.100 --> 00:11:11.640
we've synced everything we have the
display list we have the damage area and

00:11:11.640 --> 00:11:11.650
display list we have the damage area and
 

00:11:11.650 --> 00:11:14.430
display list we have the damage area and
then we do we turn the display list into

00:11:14.430 --> 00:11:14.440
then we do we turn the display list into
 

00:11:14.440 --> 00:11:17.190
then we do we turn the display list into
something that we call DL ops display

00:11:17.190 --> 00:11:17.200
something that we call DL ops display
 

00:11:17.200 --> 00:11:19.170
something that we call DL ops display
list operations so you can see that we

00:11:19.170 --> 00:11:19.180
list operations so you can see that we
 

00:11:19.180 --> 00:11:20.730
list operations so you can see that we
have that fill operation in the middle

00:11:20.730 --> 00:11:20.740
have that fill operation in the middle
 

00:11:20.740 --> 00:11:21.990
have that fill operation in the middle
that's the thing that we turn green

00:11:21.990 --> 00:11:22.000
that's the thing that we turn green
 

00:11:22.000 --> 00:11:24.810
that's the thing that we turn green
there and then we have some

00:11:24.810 --> 00:11:24.820
there and then we have some
 

00:11:24.820 --> 00:11:26.700
there and then we have some
optimizations that we perform so we have

00:11:26.700 --> 00:11:26.710
optimizations that we perform so we have
 

00:11:26.710 --> 00:11:28.830
optimizations that we perform so we have
largest optimizations we we do here so

00:11:28.830 --> 00:11:28.840
largest optimizations we we do here so
 

00:11:28.840 --> 00:11:30.300
largest optimizations we we do here so
for instance if you do alpha rendering

00:11:30.300 --> 00:11:30.310
for instance if you do alpha rendering
 

00:11:30.310 --> 00:11:32.160
for instance if you do alpha rendering
by calling set alpha on the view or if

00:11:32.160 --> 00:11:32.170
by calling set alpha on the view or if
 

00:11:32.170 --> 00:11:34.290
by calling set alpha on the view or if
you set a hardware layer on the view we

00:11:34.290 --> 00:11:34.300
you set a hardware layer on the view we
 

00:11:34.300 --> 00:11:36.360
you set a hardware layer on the view we
try to identify the drawing commands

00:11:36.360 --> 00:11:36.370
try to identify the drawing commands
 

00:11:36.370 --> 00:11:38.430
try to identify the drawing commands
that that need to be targeted to those

00:11:38.430 --> 00:11:38.440
that that need to be targeted to those
 

00:11:38.440 --> 00:11:39.870
that that need to be targeted to those
layers and we move them as at the

00:11:39.870 --> 00:11:39.880
layers and we move them as at the
 

00:11:39.880 --> 00:11:41.730
layers and we move them as at the
beginning of the frame these votes do

00:11:41.730 --> 00:11:41.740
beginning of the frame these votes do
 

00:11:41.740 --> 00:11:43.890
beginning of the frame these votes do
state changes inside the GPU which are

00:11:43.890 --> 00:11:43.900
state changes inside the GPU which are
 

00:11:43.900 --> 00:11:45.960
state changes inside the GPU which are
extremely expensive so without doing

00:11:45.960 --> 00:11:45.970
extremely expensive so without doing
 

00:11:45.970 --> 00:11:47.280
extremely expensive so without doing
this kind of optimization you would see

00:11:47.280 --> 00:11:47.290
this kind of optimization you would see
 

00:11:47.290 --> 00:11:49.110
this kind of optimization you would see
like horrible horrible performance and

00:11:49.110 --> 00:11:49.120
like horrible horrible performance and
 

00:11:49.120 --> 00:11:51.090
like horrible horrible performance and
it's not that because the GPU itself

00:11:51.090 --> 00:11:51.100
it's not that because the GPU itself
 

00:11:51.100 --> 00:11:52.560
it's not that because the GPU itself
will be slow that if you would just give

00:11:52.560 --> 00:11:52.570
will be slow that if you would just give
 

00:11:52.570 --> 00:11:54.150
will be slow that if you would just give
waiting for the CPU to give its

00:11:54.150 --> 00:11:54.160
waiting for the CPU to give its
 

00:11:54.160 --> 00:11:56.070
waiting for the CPU to give its
instructions the other one we're doing

00:11:56.070 --> 00:11:56.080
instructions the other one we're doing
 

00:11:56.080 --> 00:11:57.150
instructions the other one we're doing
and we're going to show you an actual

00:11:57.150 --> 00:11:57.160
and we're going to show you an actual
 

00:11:57.160 --> 00:11:58.500
and we're going to show you an actual
practical example

00:11:58.500 --> 00:11:58.510
practical example
 

00:11:58.510 --> 00:12:01.110
practical example
let's go reordering and batching we look

00:12:01.110 --> 00:12:01.120
let's go reordering and batching we look
 

00:12:01.120 --> 00:12:02.550
let's go reordering and batching we look
at all those operations and you can see

00:12:02.550 --> 00:12:02.560
at all those operations and you can see
 

00:12:02.560 --> 00:12:03.690
at all those operations and you can see
in this example because we have list

00:12:03.690 --> 00:12:03.700
in this example because we have list
 

00:12:03.700 --> 00:12:05.670
in this example because we have list
items we ensure leave a lot of

00:12:05.670 --> 00:12:05.680
items we ensure leave a lot of
 

00:12:05.680 --> 00:12:07.260
items we ensure leave a lot of
operations that are similar so we're

00:12:07.260 --> 00:12:07.270
operations that are similar so we're
 

00:12:07.270 --> 00:12:08.490
operations that are similar so we're
going to draw a rectangle then we're

00:12:08.490 --> 00:12:08.500
going to draw a rectangle then we're
 

00:12:08.500 --> 00:12:10.020
going to draw a rectangle then we're
gonna go draw text and we're gonna draw

00:12:10.020 --> 00:12:10.030
gonna go draw text and we're gonna draw
 

00:12:10.030 --> 00:12:11.820
gonna go draw text and we're gonna draw
a rectangle and text again and again

00:12:11.820 --> 00:12:11.830
a rectangle and text again and again
 

00:12:11.830 --> 00:12:14.040
a rectangle and text again and again
here we're changing the state of the GPU

00:12:14.040 --> 00:12:14.050
here we're changing the state of the GPU
 

00:12:14.050 --> 00:12:16.770
here we're changing the state of the GPU
several times but instead what we can do

00:12:16.770 --> 00:12:16.780
several times but instead what we can do
 

00:12:16.780 --> 00:12:18.510
several times but instead what we can do
is if the comments don't overlap we can

00:12:18.510 --> 00:12:18.520
is if the comments don't overlap we can
 

00:12:18.520 --> 00:12:20.010
is if the comments don't overlap we can
draw all the rectangles together then we

00:12:20.010 --> 00:12:20.020
draw all the rectangles together then we
 

00:12:20.020 --> 00:12:21.390
draw all the rectangles together then we
can draw all the text together so this

00:12:21.390 --> 00:12:21.400
can draw all the text together so this
 

00:12:21.400 --> 00:12:23.130
can draw all the text together so this
is part of the reordering and batching

00:12:23.130 --> 00:12:23.140
is part of the reordering and batching
 

00:12:23.140 --> 00:12:25.050
is part of the reordering and batching
and sometimes what we do we say look if

00:12:25.050 --> 00:12:25.060
and sometimes what we do we say look if
 

00:12:25.060 --> 00:12:27.330
and sometimes what we do we say look if
we see no a bunch of tags that use the

00:12:27.330 --> 00:12:27.340
we see no a bunch of tags that use the
 

00:12:27.340 --> 00:12:29.460
we see no a bunch of tags that use the
same color in the same font they don't

00:12:29.460 --> 00:12:29.470
same color in the same font they don't
 

00:12:29.470 --> 00:12:31.200
same color in the same font they don't
have to be different draw text calls

00:12:31.200 --> 00:12:31.210
have to be different draw text calls
 

00:12:31.210 --> 00:12:32.580
have to be different draw text calls
they can be just a single one that

00:12:32.580 --> 00:12:32.590
they can be just a single one that
 

00:12:32.590 --> 00:12:34.860
they can be just a single one that
covers the entire screen you can see

00:12:34.860 --> 00:12:34.870
covers the entire screen you can see
 

00:12:34.870 --> 00:12:37.920
covers the entire screen you can see
here the original TL wops has a fill

00:12:37.920 --> 00:12:37.930
here the original TL wops has a fill
 

00:12:37.930 --> 00:12:39.390
here the original TL wops has a fill
operation and then it wanted to draw

00:12:39.390 --> 00:12:39.400
operation and then it wanted to draw
 

00:12:39.400 --> 00:12:40.830
operation and then it wanted to draw
some text which is going to be end up

00:12:40.830 --> 00:12:40.840
some text which is going to be end up
 

00:12:40.840 --> 00:12:42.630
some text which is going to be end up
being texture map copies from the glyph

00:12:42.630 --> 00:12:42.640
being texture map copies from the glyph
 

00:12:42.640 --> 00:12:46.110
being texture map copies from the glyph
cache then it's got a fill operation and

00:12:46.110 --> 00:12:46.120
cache then it's got a fill operation and
 

00:12:46.120 --> 00:12:47.670
cache then it's got a fill operation and
then some more text and a fill and so

00:12:47.670 --> 00:12:47.680
then some more text and a fill and so
 

00:12:47.680 --> 00:12:48.840
then some more text and a fill and so
we've got all these operations

00:12:48.840 --> 00:12:48.850
we've got all these operations
 

00:12:48.850 --> 00:12:50.250
we've got all these operations
interleaved so after the reordering

00:12:50.250 --> 00:12:50.260
interleaved so after the reordering
 

00:12:50.260 --> 00:12:52.080
interleaved so after the reordering
operation then it looks a little more

00:12:52.080 --> 00:12:52.090
operation then it looks a little more
 

00:12:52.090 --> 00:12:53.580
operation then it looks a little more
like this we've got a series of fills

00:12:53.580 --> 00:12:53.590
like this we've got a series of fills
 

00:12:53.590 --> 00:12:55.860
like this we've got a series of fills
and a series of text operations they can

00:12:55.860 --> 00:12:55.870
and a series of text operations they can
 

00:12:55.870 --> 00:12:57.780
and a series of text operations they can
even be batched together to be more

00:12:57.780 --> 00:12:57.790
even be batched together to be more
 

00:12:57.790 --> 00:13:01.200
even be batched together to be more
optimal which we will see here so this

00:13:01.200 --> 00:13:01.210
optimal which we will see here so this
 

00:13:01.210 --> 00:13:03.240
optimal which we will see here so this
is an example of Gmail's that was in the

00:13:03.240 --> 00:13:03.250
is an example of Gmail's that was in the
 

00:13:03.250 --> 00:13:03.910
is an example of Gmail's that was in the
honey

00:13:03.910 --> 00:13:03.920
honey
 

00:13:03.920 --> 00:13:07.030
honey
era you can see how here we modified the

00:13:07.030 --> 00:13:07.040
era you can see how here we modified the
 

00:13:07.040 --> 00:13:08.710
era you can see how here we modified the
pipeline to slow down the rendering and

00:13:08.710 --> 00:13:08.720
pipeline to slow down the rendering and
 

00:13:08.720 --> 00:13:10.210
pipeline to slow down the rendering and
you can see exactly how Gmail was

00:13:10.210 --> 00:13:10.220
you can see exactly how Gmail was
 

00:13:10.220 --> 00:13:11.680
you can see exactly how Gmail was
drawing so we have a lot of list item

00:13:11.680 --> 00:13:11.690
drawing so we have a lot of list item
 

00:13:11.690 --> 00:13:13.540
drawing so we have a lot of list item
and we just draw them in the exact order

00:13:13.540 --> 00:13:13.550
and we just draw them in the exact order
 

00:13:13.550 --> 00:13:15.430
and we just draw them in the exact order
that they are they exist in if you hark

00:13:15.430 --> 00:13:15.440
that they are they exist in if you hark
 

00:13:15.440 --> 00:13:17.350
that they are they exist in if you hark
in the order of your code actually

00:13:17.350 --> 00:13:17.360
in the order of your code actually
 

00:13:17.360 --> 00:13:19.449
in the order of your code actually
they're called the drop calls that you

00:13:19.449 --> 00:13:19.459
they're called the drop calls that you
 

00:13:19.459 --> 00:13:21.389
they're called the drop calls that you
make on the canvas or respect that order

00:13:21.389 --> 00:13:21.399
make on the canvas or respect that order
 

00:13:21.399 --> 00:13:22.990
make on the canvas or respect that order
unfortunately like I said it's very

00:13:22.990 --> 00:13:23.000
unfortunately like I said it's very
 

00:13:23.000 --> 00:13:25.060
unfortunately like I said it's very
inefficient so instead after batching

00:13:25.060 --> 00:13:25.070
inefficient so instead after batching
 

00:13:25.070 --> 00:13:26.560
inefficient so instead after batching
and merging and reordering

00:13:26.560 --> 00:13:26.570
and merging and reordering
 

00:13:26.570 --> 00:13:29.350
and merging and reordering
we get this you can see in particular

00:13:29.350 --> 00:13:29.360
we get this you can see in particular
 

00:13:29.360 --> 00:13:31.240
we get this you can see in particular
that all the stars were drawn at the

00:13:31.240 --> 00:13:31.250
that all the stars were drawn at the
 

00:13:31.250 --> 00:13:33.250
that all the stars were drawn at the
same time and most of the texts occur

00:13:33.250 --> 00:13:33.260
same time and most of the texts occur
 

00:13:33.260 --> 00:13:36.009
same time and most of the texts occur
all at once what's interesting is we we

00:13:36.009 --> 00:13:36.019
all at once what's interesting is we we
 

00:13:36.019 --> 00:13:37.090
all at once what's interesting is we we
are drawing all the list item

00:13:37.090 --> 00:13:37.100
are drawing all the list item
 

00:13:37.100 --> 00:13:38.620
are drawing all the list item
backgrounds one after the other so

00:13:38.620 --> 00:13:38.630
backgrounds one after the other so
 

00:13:38.630 --> 00:13:40.540
backgrounds one after the other so
that's good the reordering worked the

00:13:40.540 --> 00:13:40.550
that's good the reordering worked the
 

00:13:40.550 --> 00:13:42.189
that's good the reordering worked the
batching didn't work and it's partly

00:13:42.189 --> 00:13:42.199
batching didn't work and it's partly
 

00:13:42.199 --> 00:13:43.689
batching didn't work and it's partly
because the list items are slightly

00:13:43.689 --> 00:13:43.699
because the list items are slightly
 

00:13:43.699 --> 00:13:46.000
because the list items are slightly
overlapping so when comments overlap we

00:13:46.000 --> 00:13:46.010
overlapping so when comments overlap we
 

00:13:46.010 --> 00:13:47.889
overlapping so when comments overlap we
have to draw them one after the other to

00:13:47.889 --> 00:13:47.899
have to draw them one after the other to
 

00:13:47.899 --> 00:13:50.079
have to draw them one after the other to
honor the blending to make sure the

00:13:50.079 --> 00:13:50.089
honor the blending to make sure the
 

00:13:50.089 --> 00:13:54.120
honor the blending to make sure the
Alpha values are correct and so the

00:13:54.120 --> 00:13:54.130
Alpha values are correct and so the
 

00:13:54.130 --> 00:13:56.370
Alpha values are correct and so the
effect really depends on the application

00:13:56.370 --> 00:13:56.380
effect really depends on the application
 

00:13:56.380 --> 00:13:59.439
effect really depends on the application
if I remember correctly in KitKat the

00:13:59.439 --> 00:13:59.449
if I remember correctly in KitKat the
 

00:13:59.449 --> 00:14:02.230
if I remember correctly in KitKat the
settings application was we could draw

00:14:02.230 --> 00:14:02.240
settings application was we could draw
 

00:14:02.240 --> 00:14:03.939
settings application was we could draw
the whole screen in about six draw calls

00:14:03.939 --> 00:14:03.949
the whole screen in about six draw calls
 

00:14:03.949 --> 00:14:06.519
the whole screen in about six draw calls
instead of dozens and dozens as invested

00:14:06.519 --> 00:14:06.529
instead of dozens and dozens as invested
 

00:14:06.529 --> 00:14:07.300
instead of dozens and dozens as invested
by the view heart

00:14:07.300 --> 00:14:07.310
by the view heart
 

00:14:07.310 --> 00:14:08.800
by the view heart
so this is a very important optimization

00:14:08.800 --> 00:14:08.810
so this is a very important optimization
 

00:14:08.810 --> 00:14:10.840
so this is a very important optimization
for us I think this work at the time on

00:14:10.840 --> 00:14:10.850
for us I think this work at the time on
 

00:14:10.850 --> 00:14:12.970
for us I think this work at the time on
current devices saves something like a

00:14:12.970 --> 00:14:12.980
current devices saves something like a
 

00:14:12.980 --> 00:14:14.620
current devices saves something like a
millisecond which doesn't sound like

00:14:14.620 --> 00:14:14.630
millisecond which doesn't sound like
 

00:14:14.630 --> 00:14:16.810
millisecond which doesn't sound like
much unless you realized that we have to

00:14:16.810 --> 00:14:16.820
much unless you realized that we have to
 

00:14:16.820 --> 00:14:19.120
much unless you realized that we have to
do everything within 16 so it was

00:14:19.120 --> 00:14:19.130
do everything within 16 so it was
 

00:14:19.130 --> 00:14:20.680
do everything within 16 so it was
actually a huge improvement that allowed

00:14:20.680 --> 00:14:20.690
actually a huge improvement that allowed
 

00:14:20.690 --> 00:14:22.689
actually a huge improvement that allowed
Gmail to be less janky because then it

00:14:22.689 --> 00:14:22.699
Gmail to be less janky because then it
 

00:14:22.699 --> 00:14:24.220
Gmail to be less janky because then it
wasn't pushed out into the next frame as

00:14:24.220 --> 00:14:24.230
wasn't pushed out into the next frame as
 

00:14:24.230 --> 00:14:26.470
wasn't pushed out into the next frame as
often all right so back to our

00:14:26.470 --> 00:14:26.480
often all right so back to our
 

00:14:26.480 --> 00:14:28.030
often all right so back to our
explanation of everything then we have

00:14:28.030 --> 00:14:28.040
explanation of everything then we have
 

00:14:28.040 --> 00:14:29.710
explanation of everything then we have
the clip reject so this is where we feed

00:14:29.710 --> 00:14:29.720
the clip reject so this is where we feed
 

00:14:29.720 --> 00:14:32.019
the clip reject so this is where we feed
in the information about the damage area

00:14:32.019 --> 00:14:32.029
in the information about the damage area
 

00:14:32.029 --> 00:14:34.210
in the information about the damage area
right so we know where item two was on

00:14:34.210 --> 00:14:34.220
right so we know where item two was on
 

00:14:34.220 --> 00:14:35.829
right so we know where item two was on
the screen and we know that we don't

00:14:35.829 --> 00:14:35.839
the screen and we know that we don't
 

00:14:35.839 --> 00:14:37.480
the screen and we know that we don't
need to draw anything outside of that

00:14:37.480 --> 00:14:37.490
need to draw anything outside of that
 

00:14:37.490 --> 00:14:40.150
need to draw anything outside of that
so as we're processing these DL opps we

00:14:40.150 --> 00:14:40.160
so as we're processing these DL opps we
 

00:14:40.160 --> 00:14:41.620
so as we're processing these DL opps we
know that we can basically throw away

00:14:41.620 --> 00:14:41.630
know that we can basically throw away
 

00:14:41.630 --> 00:14:43.540
know that we can basically throw away
anything that is drawing outside of that

00:14:43.540 --> 00:14:43.550
anything that is drawing outside of that
 

00:14:43.550 --> 00:14:45.009
anything that is drawing outside of that
area and graphics that's called a

00:14:45.009 --> 00:14:45.019
area and graphics that's called a
 

00:14:45.019 --> 00:14:47.740
area and graphics that's called a
trivial reject so we trivially reject

00:14:47.740 --> 00:14:47.750
trivial reject so we trivially reject
 

00:14:47.750 --> 00:14:49.030
trivial reject so we trivially reject
all the deal opps that weren't

00:14:49.030 --> 00:14:49.040
all the deal opps that weren't
 

00:14:49.040 --> 00:14:51.009
all the deal opps that weren't
intersecting with that area and now all

00:14:51.009 --> 00:14:51.019
intersecting with that area and now all
 

00:14:51.019 --> 00:14:53.199
intersecting with that area and now all
we have to do is draw a fill and some

00:14:53.199 --> 00:14:53.209
we have to do is draw a fill and some
 

00:14:53.209 --> 00:14:58.180
we have to do is draw a fill and some
text and a line so we do that in the

00:14:58.180 --> 00:14:58.190
text and a line so we do that in the
 

00:14:58.190 --> 00:15:00.220
text and a line so we do that in the
process of doing that we do a get buffer

00:15:00.220 --> 00:15:00.230
process of doing that we do a get buffer
 

00:15:00.230 --> 00:15:02.050
process of doing that we do a get buffer
this is usually an implicit operation we

00:15:02.050 --> 00:15:02.060
this is usually an implicit operation we
 

00:15:02.060 --> 00:15:03.939
this is usually an implicit operation we
don't request a buffer it's more that as

00:15:03.939 --> 00:15:03.949
don't request a buffer it's more that as
 

00:15:03.949 --> 00:15:05.889
don't request a buffer it's more that as
soon as we start doing GPU operations

00:15:05.889 --> 00:15:05.899
soon as we start doing GPU operations
 

00:15:05.899 --> 00:15:08.800
soon as we start doing GPU operations
then the GPU hands us the buffer more

00:15:08.800 --> 00:15:08.810
then the GPU hands us the buffer more
 

00:15:08.810 --> 00:15:10.449
then the GPU hands us the buffer more
particularly surface flinger hands us

00:15:10.449 --> 00:15:10.459
particularly surface flinger hands us
 

00:15:10.459 --> 00:15:12.040
particularly surface flinger hands us
the buffer that we can then put these

00:15:12.040 --> 00:15:12.050
the buffer that we can then put these
 

00:15:12.050 --> 00:15:13.120
the buffer that we can then put these
commands into

00:15:13.120 --> 00:15:13.130
commands into
 

00:15:13.130 --> 00:15:14.920
commands into
then we issue the commands this is a

00:15:14.920 --> 00:15:14.930
then we issue the commands this is a
 

00:15:14.930 --> 00:15:18.370
then we issue the commands this is a
series of GL commands as you can see on

00:15:18.370 --> 00:15:18.380
series of GL commands as you can see on
 

00:15:18.380 --> 00:15:20.350
series of GL commands as you can see on
the slide it says JL commands basically

00:15:20.350 --> 00:15:20.360
the slide it says JL commands basically
 

00:15:20.360 --> 00:15:22.000
the slide it says JL commands basically
the equivalent of what we need for

00:15:22.000 --> 00:15:22.010
the equivalent of what we need for
 

00:15:22.010 --> 00:15:23.800
the equivalent of what we need for
whatever doing the fill where the text

00:15:23.800 --> 00:15:23.810
whatever doing the fill where the text
 

00:15:23.810 --> 00:15:27.070
whatever doing the fill where the text
bitmap copies lines whatever and then we

00:15:27.070 --> 00:15:27.080
bitmap copies lines whatever and then we
 

00:15:27.080 --> 00:15:29.530
bitmap copies lines whatever and then we
swap the buffers so this is us saying we

00:15:29.530 --> 00:15:29.540
swap the buffers so this is us saying we
 

00:15:29.540 --> 00:15:30.820
swap the buffers so this is us saying we
are done with all of our rendering

00:15:30.820 --> 00:15:30.830
are done with all of our rendering
 

00:15:30.830 --> 00:15:32.740
are done with all of our rendering
operations we're ready to display this

00:15:32.740 --> 00:15:32.750
operations we're ready to display this
 

00:15:32.750 --> 00:15:34.690
operations we're ready to display this
frame on the screen it's a request to

00:15:34.690 --> 00:15:34.700
frame on the screen it's a request to
 

00:15:34.700 --> 00:15:36.760
frame on the screen it's a request to
surface flinger to then swap the buffer

00:15:36.760 --> 00:15:36.770
surface flinger to then swap the buffer
 

00:15:36.770 --> 00:15:38.380
surface flinger to then swap the buffer
basically we're done drawing to the

00:15:38.380 --> 00:15:38.390
basically we're done drawing to the
 

00:15:38.390 --> 00:15:39.820
basically we're done drawing to the
buffer you can swap this with the one

00:15:39.820 --> 00:15:39.830
buffer you can swap this with the one
 

00:15:39.830 --> 00:15:41.650
buffer you can swap this with the one
that's in front and it'll put it on the

00:15:41.650 --> 00:15:41.660
that's in front and it'll put it on the
 

00:15:41.660 --> 00:15:44.890
that's in front and it'll put it on the
screen meanwhile in surface flinger then

00:15:44.890 --> 00:15:44.900
screen meanwhile in surface flinger then
 

00:15:44.900 --> 00:15:46.690
screen meanwhile in surface flinger then
we have the composite step which Ramon

00:15:46.690 --> 00:15:46.700
we have the composite step which Ramon
 

00:15:46.700 --> 00:15:48.580
we have the composite step which Ramon
is gonna talk a lot about later but

00:15:48.580 --> 00:15:48.590
is gonna talk a lot about later but
 

00:15:48.590 --> 00:15:50.650
is gonna talk a lot about later but
basically it takes all of the windows on

00:15:50.650 --> 00:15:50.660
basically it takes all of the windows on
 

00:15:50.660 --> 00:15:52.270
basically it takes all of the windows on
the screen we see here the navigation

00:15:52.270 --> 00:15:52.280
the screen we see here the navigation
 

00:15:52.280 --> 00:15:54.070
the screen we see here the navigation
bar the status bar and the actual

00:15:54.070 --> 00:15:54.080
bar the status bar and the actual
 

00:15:54.080 --> 00:15:56.680
bar the status bar and the actual
content window for our application it

00:15:56.680 --> 00:15:56.690
content window for our application it
 

00:15:56.690 --> 00:15:58.420
content window for our application it
combines all of those in the hardware

00:15:58.420 --> 00:15:58.430
combines all of those in the hardware
 

00:15:58.430 --> 00:16:01.030
combines all of those in the hardware
compositor puts them on screen and then

00:16:01.030 --> 00:16:01.040
compositor puts them on screen and then
 

00:16:01.040 --> 00:16:04.720
compositor puts them on screen and then
tada we're done alright so that was a

00:16:04.720 --> 00:16:04.730
tada we're done alright so that was a
 

00:16:04.730 --> 00:16:06.730
tada we're done alright so that was a
really simple example let's look at a

00:16:06.730 --> 00:16:06.740
really simple example let's look at a
 

00:16:06.740 --> 00:16:08.590
really simple example let's look at a
super complicated example this one's

00:16:08.590 --> 00:16:08.600
super complicated example this one's
 

00:16:08.600 --> 00:16:10.510
super complicated example this one's
gonna be in two phases one so we're

00:16:10.510 --> 00:16:10.520
gonna be in two phases one so we're
 

00:16:10.520 --> 00:16:12.610
gonna be in two phases one so we're
gonna drag the list up so we're gonna

00:16:12.610 --> 00:16:12.620
gonna drag the list up so we're gonna
 

00:16:12.620 --> 00:16:14.530
gonna drag the list up so we're gonna
drag it and then as we drag it we're

00:16:14.530 --> 00:16:14.540
drag it and then as we drag it we're
 

00:16:14.540 --> 00:16:16.750
drag it and then as we drag it we're
going to move the items a little bit and

00:16:16.750 --> 00:16:16.760
going to move the items a little bit and
 

00:16:16.760 --> 00:16:18.280
going to move the items a little bit and
then eventually if we keep moving them

00:16:18.280 --> 00:16:18.290
then eventually if we keep moving them
 

00:16:18.290 --> 00:16:20.080
then eventually if we keep moving them
we're gonna have a new item appeared so

00:16:20.080 --> 00:16:20.090
we're gonna have a new item appeared so
 

00:16:20.090 --> 00:16:21.880
we're gonna have a new item appeared so
we're gonna look at two versions of this

00:16:21.880 --> 00:16:21.890
we're gonna look at two versions of this
 

00:16:21.890 --> 00:16:25.000
we're gonna look at two versions of this
there's the move only version so as we

00:16:25.000 --> 00:16:25.010
there's the move only version so as we
 

00:16:25.010 --> 00:16:27.460
there's the move only version so as we
drag it up a new item not a new item

00:16:27.460 --> 00:16:27.470
drag it up a new item not a new item
 

00:16:27.470 --> 00:16:29.380
drag it up a new item not a new item
appears everything just shifts a little

00:16:29.380 --> 00:16:29.390
appears everything just shifts a little
 

00:16:29.390 --> 00:16:31.390
appears everything just shifts a little
bit up so first of all we need to

00:16:31.390 --> 00:16:31.400
bit up so first of all we need to
 

00:16:31.400 --> 00:16:33.670
bit up so first of all we need to
process the down so we have a vsync it

00:16:33.670 --> 00:16:33.680
process the down so we have a vsync it
 

00:16:33.680 --> 00:16:36.370
process the down so we have a vsync it
says time to process input events so we

00:16:36.370 --> 00:16:36.380
says time to process input events so we
 

00:16:36.380 --> 00:16:38.710
says time to process input events so we
do that and we end up in code like this

00:16:38.710 --> 00:16:38.720
do that and we end up in code like this
 

00:16:38.720 --> 00:16:40.810
do that and we end up in code like this
on touch event in recycler view it says

00:16:40.810 --> 00:16:40.820
on touch event in recycler view it says
 

00:16:40.820 --> 00:16:42.970
on touch event in recycler view it says
well there was a down operation and all

00:16:42.970 --> 00:16:42.980
well there was a down operation and all
 

00:16:42.980 --> 00:16:45.490
well there was a down operation and all
it needs to do is register where that

00:16:45.490 --> 00:16:45.500
it needs to do is register where that
 

00:16:45.500 --> 00:16:47.140
it needs to do is register where that
down happened it doesn't need to process

00:16:47.140 --> 00:16:47.150
down happened it doesn't need to process
 

00:16:47.150 --> 00:16:49.000
down happened it doesn't need to process
anything nothing changed on the screen

00:16:49.000 --> 00:16:49.010
anything nothing changed on the screen
 

00:16:49.010 --> 00:16:50.260
anything nothing changed on the screen
we just registered that the user

00:16:50.260 --> 00:16:50.270
we just registered that the user
 

00:16:50.270 --> 00:16:52.480
we just registered that the user
actually pressed down so we record that

00:16:52.480 --> 00:16:52.490
actually pressed down so we record that
 

00:16:52.490 --> 00:16:54.700
actually pressed down so we record that
for later and there's no op we don't do

00:16:54.700 --> 00:16:54.710
for later and there's no op we don't do
 

00:16:54.710 --> 00:16:55.990
for later and there's no op we don't do
any of the rest of the stuff we talked

00:16:55.990 --> 00:16:56.000
any of the rest of the stuff we talked
 

00:16:56.000 --> 00:16:58.390
any of the rest of the stuff we talked
about because nothing changed all right

00:16:58.390 --> 00:16:58.400
about because nothing changed all right
 

00:16:58.400 --> 00:17:01.570
about because nothing changed all right
they keep dragging then we end up in

00:17:01.570 --> 00:17:01.580
they keep dragging then we end up in
 

00:17:01.580 --> 00:17:03.550
they keep dragging then we end up in
similar code so we process input on the

00:17:03.550 --> 00:17:03.560
similar code so we process input on the
 

00:17:03.560 --> 00:17:05.050
similar code so we process input on the
next frame and we say okay on touch

00:17:05.050 --> 00:17:05.060
next frame and we say okay on touch
 

00:17:05.060 --> 00:17:06.579
next frame and we say okay on touch
event oh now we know that they've

00:17:06.579 --> 00:17:06.589
event oh now we know that they've
 

00:17:06.589 --> 00:17:08.650
event oh now we know that they've
actually moved when we know how much

00:17:08.650 --> 00:17:08.660
actually moved when we know how much
 

00:17:08.660 --> 00:17:10.809
actually moved when we know how much
they move because we saved the old X&amp;Y

00:17:10.809 --> 00:17:10.819
they move because we saved the old X&amp;Y
 

00:17:10.819 --> 00:17:13.720
they move because we saved the old X&amp;Y
and we calculate the Delta and now we

00:17:13.720 --> 00:17:13.730
and we calculate the Delta and now we
 

00:17:13.730 --> 00:17:15.790
and we calculate the Delta and now we
call this thing called offset top and

00:17:15.790 --> 00:17:15.800
call this thing called offset top and
 

00:17:15.800 --> 00:17:17.860
call this thing called offset top and
bottom we basically for all the views on

00:17:17.860 --> 00:17:17.870
bottom we basically for all the views on
 

00:17:17.870 --> 00:17:20.770
bottom we basically for all the views on
the screen we simply move them in Y and

00:17:20.770 --> 00:17:20.780
the screen we simply move them in Y and
 

00:17:20.780 --> 00:17:23.380
the screen we simply move them in Y and
offset top and bottom call something

00:17:23.380 --> 00:17:23.390
offset top and bottom call something
 

00:17:23.390 --> 00:17:25.330
offset top and bottom call something
it's an invalidation method

00:17:25.330 --> 00:17:25.340
it's an invalidation method
 

00:17:25.340 --> 00:17:26.440
it's an invalidation method
but it's slightly different it says

00:17:26.440 --> 00:17:26.450
but it's slightly different it says
 

00:17:26.450 --> 00:17:28.720
but it's slightly different it says
invalidate view property this is an

00:17:28.720 --> 00:17:28.730
invalidate view property this is an
 

00:17:28.730 --> 00:17:30.700
invalidate view property this is an
optimization that we put in in probably

00:17:30.700 --> 00:17:30.710
optimization that we put in in probably
 

00:17:30.710 --> 00:17:33.450
optimization that we put in in probably
honeycomb second release or something

00:17:33.450 --> 00:17:33.460
honeycomb second release or something
 

00:17:33.460 --> 00:17:36.610
honeycomb second release or something
with displaylist properties so when I

00:17:36.610 --> 00:17:36.620
with displaylist properties so when I
 

00:17:36.620 --> 00:17:38.950
with displaylist properties so when I
talked about this playlist earlier there

00:17:38.950 --> 00:17:38.960
talked about this playlist earlier there
 

00:17:38.960 --> 00:17:40.600
talked about this playlist earlier there
was one nuance that I left out we have

00:17:40.600 --> 00:17:40.610
was one nuance that I left out we have
 

00:17:40.610 --> 00:17:42.250
was one nuance that I left out we have
the information about the operations and

00:17:42.250 --> 00:17:42.260
the information about the operations and
 

00:17:42.260 --> 00:17:43.450
the information about the operations and
the parameters for the graphics

00:17:43.450 --> 00:17:43.460
the parameters for the graphics
 

00:17:43.460 --> 00:17:45.220
the parameters for the graphics
operations but we also have the

00:17:45.220 --> 00:17:45.230
operations but we also have the
 

00:17:45.230 --> 00:17:46.810
operations but we also have the
information about some core displaylist

00:17:46.810 --> 00:17:46.820
information about some core displaylist
 

00:17:46.820 --> 00:17:48.880
information about some core displaylist
properties which are basically

00:17:48.880 --> 00:17:48.890
properties which are basically
 

00:17:48.890 --> 00:17:50.350
properties which are basically
properties of the view like the

00:17:50.350 --> 00:17:50.360
properties of the view like the
 

00:17:50.360 --> 00:17:52.960
properties of the view like the
translation property rotation alpha and

00:17:52.960 --> 00:17:52.970
translation property rotation alpha and
 

00:17:52.970 --> 00:17:55.720
translation property rotation alpha and
these are properties which we don't need

00:17:55.720 --> 00:17:55.730
these are properties which we don't need
 

00:17:55.730 --> 00:17:57.760
these are properties which we don't need
to re-render the view to change we can

00:17:57.760 --> 00:17:57.770
to re-render the view to change we can
 

00:17:57.770 --> 00:17:59.290
to re-render the view to change we can
simply change them in the display with

00:17:59.290 --> 00:17:59.300
simply change them in the display with
 

00:17:59.300 --> 00:18:00.850
simply change them in the display with
structure itself and then they get

00:18:00.850 --> 00:18:00.860
structure itself and then they get
 

00:18:00.860 --> 00:18:03.250
structure itself and then they get
picked up at GPU issue time so it's a

00:18:03.250 --> 00:18:03.260
picked up at GPU issue time so it's a
 

00:18:03.260 --> 00:18:06.070
picked up at GPU issue time so it's a
very fast operation for us to do that so

00:18:06.070 --> 00:18:06.080
very fast operation for us to do that so
 

00:18:06.080 --> 00:18:07.780
very fast operation for us to do that so
instead of invalidating a view and

00:18:07.780 --> 00:18:07.790
instead of invalidating a view and
 

00:18:07.790 --> 00:18:09.940
instead of invalidating a view and
redrawing everything in that view all we

00:18:09.940 --> 00:18:09.950
redrawing everything in that view all we
 

00:18:09.950 --> 00:18:11.560
redrawing everything in that view all we
do is say change the translation

00:18:11.560 --> 00:18:11.570
do is say change the translation
 

00:18:11.570 --> 00:18:13.810
do is say change the translation
property in this view so the way that

00:18:13.810 --> 00:18:13.820
property in this view so the way that
 

00:18:13.820 --> 00:18:15.880
property in this view so the way that
happens is we call invalidate view

00:18:15.880 --> 00:18:15.890
happens is we call invalidate view
 

00:18:15.890 --> 00:18:17.680
happens is we call invalidate view
property that propagates all the way up

00:18:17.680 --> 00:18:17.690
property that propagates all the way up
 

00:18:17.690 --> 00:18:18.910
property that propagates all the way up
the tree because we still need to know

00:18:18.910 --> 00:18:18.920
the tree because we still need to know
 

00:18:18.920 --> 00:18:21.220
the tree because we still need to know
at the top layer what happens but it's a

00:18:21.220 --> 00:18:21.230
at the top layer what happens but it's a
 

00:18:21.230 --> 00:18:23.530
at the top layer what happens but it's a
much more optimal step so this ends up

00:18:23.530 --> 00:18:23.540
much more optimal step so this ends up
 

00:18:23.540 --> 00:18:25.630
much more optimal step so this ends up
in schedule traversals as it did before

00:18:25.630 --> 00:18:25.640
in schedule traversals as it did before
 

00:18:25.640 --> 00:18:28.000
in schedule traversals as it did before
in the draw it ends up in perform

00:18:28.000 --> 00:18:28.010
in the draw it ends up in perform
 

00:18:28.010 --> 00:18:30.130
in the draw it ends up in perform
traversals but perform draw can do a

00:18:30.130 --> 00:18:30.140
traversals but perform draw can do a
 

00:18:30.140 --> 00:18:32.440
traversals but perform draw can do a
much simpler version of this because the

00:18:32.440 --> 00:18:32.450
much simpler version of this because the
 

00:18:32.450 --> 00:18:34.540
much simpler version of this because the
display was didn't actually change all

00:18:34.540 --> 00:18:34.550
display was didn't actually change all
 

00:18:34.550 --> 00:18:36.490
display was didn't actually change all
we did was change display was properties

00:18:36.490 --> 00:18:36.500
we did was change display was properties
 

00:18:36.500 --> 00:18:38.710
we did was change display was properties
inside of it so we can immediately sync

00:18:38.710 --> 00:18:38.720
inside of it so we can immediately sync
 

00:18:38.720 --> 00:18:40.300
inside of it so we can immediately sync
that information over to the renter

00:18:40.300 --> 00:18:40.310
that information over to the renter
 

00:18:40.310 --> 00:18:43.030
that information over to the renter
thread we can then execute that turn

00:18:43.030 --> 00:18:43.040
thread we can then execute that turn
 

00:18:43.040 --> 00:18:44.350
thread we can then execute that turn
that into display list ops

00:18:44.350 --> 00:18:44.360
that into display list ops
 

00:18:44.360 --> 00:18:46.600
that into display list ops
get the buffer basically everything is

00:18:46.600 --> 00:18:46.610
get the buffer basically everything is
 

00:18:46.610 --> 00:18:48.580
get the buffer basically everything is
as before all right let's go through the

00:18:48.580 --> 00:18:48.590
as before all right let's go through the
 

00:18:48.590 --> 00:18:50.470
as before all right let's go through the
second phase of that super complicated

00:18:50.470 --> 00:18:50.480
second phase of that super complicated
 

00:18:50.480 --> 00:18:53.740
second phase of that super complicated
example user keeps dragging and as they

00:18:53.740 --> 00:18:53.750
example user keeps dragging and as they
 

00:18:53.750 --> 00:18:55.860
example user keeps dragging and as they
drag a new item appears on the bottom

00:18:55.860 --> 00:18:55.870
drag a new item appears on the bottom
 

00:18:55.870 --> 00:18:58.840
drag a new item appears on the bottom
sophie sink we process the input we end

00:18:58.840 --> 00:18:58.850
sophie sink we process the input we end
 

00:18:58.850 --> 00:19:00.130
sophie sink we process the input we end
up in and method something like this

00:19:00.130 --> 00:19:00.140
up in and method something like this
 

00:19:00.140 --> 00:19:02.710
up in and method something like this
okay we know that they've moved oh but

00:19:02.710 --> 00:19:02.720
okay we know that they've moved oh but
 

00:19:02.720 --> 00:19:04.060
okay we know that they've moved oh but
that means that we need to trigger the

00:19:04.060 --> 00:19:04.070
that means that we need to trigger the
 

00:19:04.070 --> 00:19:06.250
that means that we need to trigger the
creation and the bind of that new item

00:19:06.250 --> 00:19:06.260
creation and the bind of that new item
 

00:19:06.260 --> 00:19:08.230
creation and the bind of that new item
there that ends up in code like this

00:19:08.230 --> 00:19:08.240
there that ends up in code like this
 

00:19:08.240 --> 00:19:10.030
there that ends up in code like this
where we actually add a view to the

00:19:10.030 --> 00:19:10.040
where we actually add a view to the
 

00:19:10.040 --> 00:19:11.980
where we actually add a view to the
parent so the recycler view is going to

00:19:11.980 --> 00:19:11.990
parent so the recycler view is going to
 

00:19:11.990 --> 00:19:14.470
parent so the recycler view is going to
get a new view and it's going to call

00:19:14.470 --> 00:19:14.480
get a new view and it's going to call
 

00:19:14.480 --> 00:19:17.380
get a new view and it's going to call
request layout so request layout is kind

00:19:17.380 --> 00:19:17.390
request layout so request layout is kind
 

00:19:17.390 --> 00:19:19.150
request layout so request layout is kind
of like invalidation but instead of

00:19:19.150 --> 00:19:19.160
of like invalidation but instead of
 

00:19:19.160 --> 00:19:21.220
of like invalidation but instead of
saying I need to be redrawn it says I

00:19:21.220 --> 00:19:21.230
saying I need to be redrawn it says I
 

00:19:21.230 --> 00:19:23.440
saying I need to be redrawn it says I
need to be remarried and relayed out and

00:19:23.440 --> 00:19:23.450
need to be remarried and relayed out and
 

00:19:23.450 --> 00:19:25.450
need to be remarried and relayed out and
that could side effect everybody there

00:19:25.450 --> 00:19:25.460
that could side effect everybody there
 

00:19:25.460 --> 00:19:27.250
that could side effect everybody there
so we basically propagate or request

00:19:27.250 --> 00:19:27.260
so we basically propagate or request
 

00:19:27.260 --> 00:19:28.570
so we basically propagate or request
layout all the way up the tree like

00:19:28.570 --> 00:19:28.580
layout all the way up the tree like
 

00:19:28.580 --> 00:19:31.210
layout all the way up the tree like
invalidation and then we do measure and

00:19:31.210 --> 00:19:31.220
invalidation and then we do measure and
 

00:19:31.220 --> 00:19:32.980
invalidation and then we do measure and
layout on the entire tree just to see

00:19:32.980 --> 00:19:32.990
layout on the entire tree just to see
 

00:19:32.990 --> 00:19:34.930
layout on the entire tree just to see
what change there so request layout

00:19:34.930 --> 00:19:34.940
what change there so request layout
 

00:19:34.940 --> 00:19:37.090
what change there so request layout
happens on the parent and then that

00:19:37.090 --> 00:19:37.100
happens on the parent and then that
 

00:19:37.100 --> 00:19:39.160
happens on the parent and then that
propagates all the way up

00:19:39.160 --> 00:19:39.170
propagates all the way up
 

00:19:39.170 --> 00:19:42.110
propagates all the way up
and that ends up again in schedule

00:19:42.110 --> 00:19:42.120
and that ends up again in schedule
 

00:19:42.120 --> 00:19:44.570
and that ends up again in schedule
traversals our friend and then perform

00:19:44.570 --> 00:19:44.580
traversals our friend and then perform
 

00:19:44.580 --> 00:19:45.890
traversals our friend and then perform
traversals we're not talking about the

00:19:45.890 --> 00:19:45.900
traversals we're not talking about the
 

00:19:45.900 --> 00:19:47.570
traversals we're not talking about the
draw stuff now we're gonna do a perform

00:19:47.570 --> 00:19:47.580
draw stuff now we're gonna do a perform
 

00:19:47.580 --> 00:19:49.850
draw stuff now we're gonna do a perform
measure and a perform layout measure is

00:19:49.850 --> 00:19:49.860
measure and a perform layout measure is
 

00:19:49.860 --> 00:19:52.039
measure and a perform layout measure is
basically asking all of the views how

00:19:52.039 --> 00:19:52.049
basically asking all of the views how
 

00:19:52.049 --> 00:19:54.560
basically asking all of the views how
big they would like to be it's a request

00:19:54.560 --> 00:19:54.570
big they would like to be it's a request
 

00:19:54.570 --> 00:19:57.080
big they would like to be it's a request
and then layout says this is how big

00:19:57.080 --> 00:19:57.090
and then layout says this is how big
 

00:19:57.090 --> 00:19:58.400
and then layout says this is how big
you're going to be and this is where

00:19:58.400 --> 00:19:58.410
you're going to be and this is where
 

00:19:58.410 --> 00:20:00.020
you're going to be and this is where
you're going to be positioned it's a

00:20:00.020 --> 00:20:00.030
you're going to be positioned it's a
 

00:20:00.030 --> 00:20:01.910
you're going to be positioned it's a
negotiation between the views and all of

00:20:01.910 --> 00:20:01.920
negotiation between the views and all of
 

00:20:01.920 --> 00:20:03.080
negotiation between the views and all of
their parents according to all the

00:20:03.080 --> 00:20:03.090
their parents according to all the
 

00:20:03.090 --> 00:20:06.410
their parents according to all the
constraints in the system so we do a

00:20:06.410 --> 00:20:06.420
constraints in the system so we do a
 

00:20:06.420 --> 00:20:08.150
constraints in the system so we do a
perform measure that basically calls

00:20:08.150 --> 00:20:08.160
perform measure that basically calls
 

00:20:08.160 --> 00:20:09.830
perform measure that basically calls
measure at the top and that propagates

00:20:09.830 --> 00:20:09.840
measure at the top and that propagates
 

00:20:09.840 --> 00:20:12.440
measure at the top and that propagates
all the way down and then we have all

00:20:12.440 --> 00:20:12.450
all the way down and then we have all
 

00:20:12.450 --> 00:20:14.480
all the way down and then we have all
the information about how big all the

00:20:14.480 --> 00:20:14.490
the information about how big all the
 

00:20:14.490 --> 00:20:16.580
the information about how big all the
views want to be and that is good enough

00:20:16.580 --> 00:20:16.590
views want to be and that is good enough
 

00:20:16.590 --> 00:20:18.080
views want to be and that is good enough
for us to calculate the layout

00:20:18.080 --> 00:20:18.090
for us to calculate the layout
 

00:20:18.090 --> 00:20:20.030
for us to calculate the layout
information then we propagate layout all

00:20:20.030 --> 00:20:20.040
information then we propagate layout all
 

00:20:20.040 --> 00:20:21.740
information then we propagate layout all
the way down the tree and once that

00:20:21.740 --> 00:20:21.750
the way down the tree and once that
 

00:20:21.750 --> 00:20:23.960
the way down the tree and once that
happens on the item and the parent that

00:20:23.960 --> 00:20:23.970
happens on the item and the parent that
 

00:20:23.970 --> 00:20:25.730
happens on the item and the parent that
changed then we actually layout that

00:20:25.730 --> 00:20:25.740
changed then we actually layout that
 

00:20:25.740 --> 00:20:27.710
changed then we actually layout that
item and we're ready to go now we can

00:20:27.710 --> 00:20:27.720
item and we're ready to go now we can
 

00:20:27.720 --> 00:20:30.680
item and we're ready to go now we can
actually draw things and everything is

00:20:30.680 --> 00:20:30.690
actually draw things and everything is
 

00:20:30.690 --> 00:20:33.680
actually draw things and everything is
as before so the nuance here was just

00:20:33.680 --> 00:20:33.690
as before so the nuance here was just
 

00:20:33.690 --> 00:20:35.960
as before so the nuance here was just
the layout side except an important

00:20:35.960 --> 00:20:35.970
the layout side except an important
 

00:20:35.970 --> 00:20:38.720
the layout side except an important
nuance is we're talking about all of

00:20:38.720 --> 00:20:38.730
nuance is we're talking about all of
 

00:20:38.730 --> 00:20:40.220
nuance is we're talking about all of
this request layout and measure and

00:20:40.220 --> 00:20:40.230
this request layout and measure and
 

00:20:40.230 --> 00:20:42.440
this request layout and measure and
layout happening for this recyclerview

00:20:42.440 --> 00:20:42.450
layout happening for this recyclerview
 

00:20:42.450 --> 00:20:45.560
layout happening for this recyclerview
situation however rick recyclerview

00:20:45.560 --> 00:20:45.570
situation however rick recyclerview
 

00:20:45.570 --> 00:20:48.200
situation however rick recyclerview
optimizes this it knows enough about its

00:20:48.200 --> 00:20:48.210
optimizes this it knows enough about its
 

00:20:48.210 --> 00:20:50.210
optimizes this it knows enough about its
own parent and its children that it

00:20:50.210 --> 00:20:50.220
own parent and its children that it
 

00:20:50.220 --> 00:20:51.770
own parent and its children that it
actually can just offset the views

00:20:51.770 --> 00:20:51.780
actually can just offset the views
 

00:20:51.780 --> 00:20:53.990
actually can just offset the views
instead of doing the request layout it

00:20:53.990 --> 00:20:54.000
instead of doing the request layout it
 

00:20:54.000 --> 00:20:55.520
instead of doing the request layout it
can actually just move the views out of

00:20:55.520 --> 00:20:55.530
can actually just move the views out of
 

00:20:55.530 --> 00:20:57.110
can actually just move the views out of
the way and create the new item so

00:20:57.110 --> 00:20:57.120
the way and create the new item so
 

00:20:57.120 --> 00:20:59.060
the way and create the new item so
optimization for a recycler view as well

00:20:59.060 --> 00:20:59.070
optimization for a recycler view as well
 

00:20:59.070 --> 00:21:02.150
optimization for a recycler view as well
as the older ListView alright so now

00:21:02.150 --> 00:21:02.160
as the older ListView alright so now
 

00:21:02.160 --> 00:21:03.620
as the older ListView alright so now
we're going to talk about how surface

00:21:03.620 --> 00:21:03.630
we're going to talk about how surface
 

00:21:03.630 --> 00:21:05.060
we're going to talk about how surface
flinger our window composites or

00:21:05.060 --> 00:21:05.070
flinger our window composites or
 

00:21:05.070 --> 00:21:06.880
flinger our window composites or
composites all the windows on the screen

00:21:06.880 --> 00:21:06.890
composites all the windows on the screen
 

00:21:06.890 --> 00:21:08.600
composites all the windows on the screen
this is interesting

00:21:08.600 --> 00:21:08.610
this is interesting
 

00:21:08.610 --> 00:21:09.770
this is interesting
well first of all because it's always

00:21:09.770 --> 00:21:09.780
well first of all because it's always
 

00:21:09.780 --> 00:21:11.000
well first of all because it's always
interesting to learn something new about

00:21:11.000 --> 00:21:11.010
interesting to learn something new about
 

00:21:11.010 --> 00:21:12.650
interesting to learn something new about
technology but also because you will

00:21:12.650 --> 00:21:12.660
technology but also because you will
 

00:21:12.660 --> 00:21:14.690
technology but also because you will
understand some concepts that are behind

00:21:14.690 --> 00:21:14.700
understand some concepts that are behind
 

00:21:14.700 --> 00:21:17.180
understand some concepts that are behind
some of the public API is like surface

00:21:17.180 --> 00:21:17.190
some of the public API is like surface
 

00:21:17.190 --> 00:21:20.450
some of the public API is like surface
surface texture surface view or in the

00:21:20.450 --> 00:21:20.460
surface texture surface view or in the
 

00:21:20.460 --> 00:21:23.270
surface texture surface view or in the
media the media codec so before we can

00:21:23.270 --> 00:21:23.280
media the media codec so before we can
 

00:21:23.280 --> 00:21:25.490
media the media codec so before we can
understand composition we have to

00:21:25.490 --> 00:21:25.500
understand composition we have to
 

00:21:25.500 --> 00:21:27.590
understand composition we have to
understand a very important concept on

00:21:27.590 --> 00:21:27.600
understand a very important concept on
 

00:21:27.600 --> 00:21:29.450
understand a very important concept on
Android called the buffer queue so the

00:21:29.450 --> 00:21:29.460
Android called the buffer queue so the
 

00:21:29.460 --> 00:21:31.370
Android called the buffer queue so the
buffer queue as the name suggests it's

00:21:31.370 --> 00:21:31.380
buffer queue as the name suggests it's
 

00:21:31.380 --> 00:21:33.140
buffer queue as the name suggests it's
just a queue of buffers they're where

00:21:33.140 --> 00:21:33.150
just a queue of buffers they're where
 

00:21:33.150 --> 00:21:35.060
just a queue of buffers they're where
our graphics buffers live

00:21:35.060 --> 00:21:35.070
our graphics buffers live
 

00:21:35.070 --> 00:21:37.039
our graphics buffers live
typically we're gonna have one two three

00:21:37.039 --> 00:21:37.049
typically we're gonna have one two three
 

00:21:37.049 --> 00:21:38.570
typically we're gonna have one two three
buffers there are different options

00:21:38.570 --> 00:21:38.580
buffers there are different options
 

00:21:38.580 --> 00:21:40.640
buffers there are different options
internally where when we set up a buffer

00:21:40.640 --> 00:21:40.650
internally where when we set up a buffer
 

00:21:40.650 --> 00:21:42.370
internally where when we set up a buffer
queue we can request how many buffers

00:21:42.370 --> 00:21:42.380
queue we can request how many buffers
 

00:21:42.380 --> 00:21:45.790
queue we can request how many buffers
wants and and very importantly a buffer

00:21:45.790 --> 00:21:45.800
wants and and very importantly a buffer
 

00:21:45.800 --> 00:21:47.590
wants and and very importantly a buffer
queue has two endpoints we have the

00:21:47.590 --> 00:21:47.600
queue has two endpoints we have the
 

00:21:47.600 --> 00:21:50.140
queue has two endpoints we have the
producer and we have the consumer so

00:21:50.140 --> 00:21:50.150
producer and we have the consumer so
 

00:21:50.150 --> 00:21:51.460
producer and we have the consumer so
typically the way we use a buffer queue

00:21:51.460 --> 00:21:51.470
typically the way we use a buffer queue
 

00:21:51.470 --> 00:21:54.370
typically the way we use a buffer queue
the producer calls a method called DQ

00:21:54.370 --> 00:21:54.380
the producer calls a method called DQ
 

00:21:54.380 --> 00:21:56.650
the producer calls a method called DQ
buffer on the queue it grabs a buffer

00:21:56.650 --> 00:21:56.660
buffer on the queue it grabs a buffer
 

00:21:56.660 --> 00:21:58.930
buffer on the queue it grabs a buffer
from the queue now it owns it it can do

00:21:58.930 --> 00:21:58.940
from the queue now it owns it it can do
 

00:21:58.940 --> 00:22:01.420
from the queue now it owns it it can do
any kind of rendering it can be sending

00:22:01.420 --> 00:22:01.430
any kind of rendering it can be sending
 

00:22:01.430 --> 00:22:03.130
any kind of rendering it can be sending
the pixel data directly can be using

00:22:03.130 --> 00:22:03.140
the pixel data directly can be using
 

00:22:03.140 --> 00:22:06.220
the pixel data directly can be using
OpenGL it can be using canvas it doesn't

00:22:06.220 --> 00:22:06.230
OpenGL it can be using canvas it doesn't
 

00:22:06.230 --> 00:22:08.170
OpenGL it can be using canvas it doesn't
really matter and and when use OpenGL

00:22:08.170 --> 00:22:08.180
really matter and and when use OpenGL
 

00:22:08.180 --> 00:22:09.880
really matter and and when use OpenGL
this is basically what happens when you

00:22:09.880 --> 00:22:09.890
this is basically what happens when you
 

00:22:09.890 --> 00:22:11.980
this is basically what happens when you
call swap buffers at the end that's when

00:22:11.980 --> 00:22:11.990
call swap buffers at the end that's when
 

00:22:11.990 --> 00:22:13.240
call swap buffers at the end that's when
we're producing the content inside the

00:22:13.240 --> 00:22:13.250
we're producing the content inside the
 

00:22:13.250 --> 00:22:15.100
we're producing the content inside the
buffer so when the producer is done

00:22:15.100 --> 00:22:15.110
buffer so when the producer is done
 

00:22:15.110 --> 00:22:17.980
buffer so when the producer is done
producing the content it calls Q buffer

00:22:17.980 --> 00:22:17.990
producing the content it calls Q buffer
 

00:22:17.990 --> 00:22:20.650
producing the content it calls Q buffer
and gives the buffer back to the to the

00:22:20.650 --> 00:22:20.660
and gives the buffer back to the to the
 

00:22:20.660 --> 00:22:23.500
and gives the buffer back to the to the
perfect shoe now consumer can grab the

00:22:23.500 --> 00:22:23.510
perfect shoe now consumer can grab the
 

00:22:23.510 --> 00:22:26.010
perfect shoe now consumer can grab the
next buffer in the queue using acquire

00:22:26.010 --> 00:22:26.020
next buffer in the queue using acquire
 

00:22:26.020 --> 00:22:28.990
next buffer in the queue using acquire
so in calls acquire buffer it takes the

00:22:28.990 --> 00:22:29.000
so in calls acquire buffer it takes the
 

00:22:29.000 --> 00:22:30.880
so in calls acquire buffer it takes the
first available but for in the queue it

00:22:30.880 --> 00:22:30.890
first available but for in the queue it
 

00:22:30.890 --> 00:22:32.530
first available but for in the queue it
does whatever it has to do with it and

00:22:32.530 --> 00:22:32.540
does whatever it has to do with it and
 

00:22:32.540 --> 00:22:35.650
does whatever it has to do with it and
when it's done it puts it back by

00:22:35.650 --> 00:22:35.660
when it's done it puts it back by
 

00:22:35.660 --> 00:22:38.650
when it's done it puts it back by
calling release so it's a pretty simple

00:22:38.650 --> 00:22:38.660
calling release so it's a pretty simple
 

00:22:38.660 --> 00:22:40.300
calling release so it's a pretty simple
concept of course if you were to look at

00:22:40.300 --> 00:22:40.310
concept of course if you were to look at
 

00:22:40.310 --> 00:22:41.920
concept of course if you were to look at
the code you know all the header files

00:22:41.920 --> 00:22:41.930
the code you know all the header files
 

00:22:41.930 --> 00:22:43.480
the code you know all the header files
and all the knife code involved it's

00:22:43.480 --> 00:22:43.490
and all the knife code involved it's
 

00:22:43.490 --> 00:22:45.790
and all the knife code involved it's
pretty complicated in part because the

00:22:45.790 --> 00:22:45.800
pretty complicated in part because the
 

00:22:45.800 --> 00:22:47.560
pretty complicated in part because the
two end points of a perfect you can live

00:22:47.560 --> 00:22:47.570
two end points of a perfect you can live
 

00:22:47.570 --> 00:22:49.270
two end points of a perfect you can live
in different processes and this is

00:22:49.270 --> 00:22:49.280
in different processes and this is
 

00:22:49.280 --> 00:22:50.830
in different processes and this is
exactly what happens this is how our

00:22:50.830 --> 00:22:50.840
exactly what happens this is how our
 

00:22:50.840 --> 00:22:53.530
exactly what happens this is how our
surface compositor works so when you

00:22:53.530 --> 00:22:53.540
surface compositor works so when you
 

00:22:53.540 --> 00:22:55.210
surface compositor works so when you
create a window in the system you have

00:22:55.210 --> 00:22:55.220
create a window in the system you have
 

00:22:55.220 --> 00:22:56.950
create a window in the system you have
the window manager and you have surface

00:22:56.950 --> 00:22:56.960
the window manager and you have surface
 

00:22:56.960 --> 00:22:59.170
the window manager and you have surface
fingers we the window manager is

00:22:59.170 --> 00:22:59.180
fingers we the window manager is
 

00:22:59.180 --> 00:23:01.120
fingers we the window manager is
effectively the producer in the scenario

00:23:01.120 --> 00:23:01.130
effectively the producer in the scenario
 

00:23:01.130 --> 00:23:03.820
effectively the producer in the scenario
and surface flinger is our consumer so

00:23:03.820 --> 00:23:03.830
and surface flinger is our consumer so
 

00:23:03.830 --> 00:23:05.140
and surface flinger is our consumer so
when you call window manager that ad

00:23:05.140 --> 00:23:05.150
when you call window manager that ad
 

00:23:05.150 --> 00:23:06.550
when you call window manager that ad
view and this is what's done

00:23:06.550 --> 00:23:06.560
view and this is what's done
 

00:23:06.560 --> 00:23:08.170
view and this is what's done
automatically for you when you create a

00:23:08.170 --> 00:23:08.180
automatically for you when you create a
 

00:23:08.180 --> 00:23:10.420
automatically for you when you create a
dialog when you create a toast I believe

00:23:10.420 --> 00:23:10.430
dialog when you create a toast I believe
 

00:23:10.430 --> 00:23:12.790
dialog when you create a toast I believe
when you create an activity instantly we

00:23:12.790 --> 00:23:12.800
when you create an activity instantly we
 

00:23:12.800 --> 00:23:14.350
when you create an activity instantly we
create a window object that window

00:23:14.350 --> 00:23:14.360
create a window object that window
 

00:23:14.360 --> 00:23:16.900
create a window object that window
object has a sibling on the surface

00:23:16.900 --> 00:23:16.910
object has a sibling on the surface
 

00:23:16.910 --> 00:23:19.360
object has a sibling on the surface
flinger upside called a layer the names

00:23:19.360 --> 00:23:19.370
flinger upside called a layer the names
 

00:23:19.370 --> 00:23:21.490
flinger upside called a layer the names
can be a little confusing because in

00:23:21.490 --> 00:23:21.500
can be a little confusing because in
 

00:23:21.500 --> 00:23:23.050
can be a little confusing because in
graphics we have to deal with buffers

00:23:23.050 --> 00:23:23.060
graphics we have to deal with buffers
 

00:23:23.060 --> 00:23:24.820
graphics we have to deal with buffers
and queues and that's all we do and we

00:23:24.820 --> 00:23:24.830
and queues and that's all we do and we
 

00:23:24.830 --> 00:23:27.700
and queues and that's all we do and we
quickly run out of names and the

00:23:27.700 --> 00:23:27.710
quickly run out of names and the
 

00:23:27.710 --> 00:23:29.980
quickly run out of names and the
graphics team I thought of so that's

00:23:29.980 --> 00:23:29.990
graphics team I thought of so that's
 

00:23:29.990 --> 00:23:31.030
graphics team I thought of so that's
what we have surface and surface

00:23:31.030 --> 00:23:31.040
what we have surface and surface
 

00:23:31.040 --> 00:23:32.680
what we have surface and surface
textures and buffer queue and layer and

00:23:32.680 --> 00:23:32.690
textures and buffer queue and layer and
 

00:23:32.690 --> 00:23:34.780
textures and buffer queue and layer and
window and yeah so it's a little bit

00:23:34.780 --> 00:23:34.790
window and yeah so it's a little bit
 

00:23:34.790 --> 00:23:36.790
window and yeah so it's a little bit
messy so we have a layer surface flinger

00:23:36.790 --> 00:23:36.800
messy so we have a layer surface flinger
 

00:23:36.800 --> 00:23:40.690
messy so we have a layer surface flinger
it's basically a window and the layer is

00:23:40.690 --> 00:23:40.700
it's basically a window and the layer is
 

00:23:40.700 --> 00:23:42.700
it's basically a window and the layer is
the components in the system that

00:23:42.700 --> 00:23:42.710
the components in the system that
 

00:23:42.710 --> 00:23:45.400
the components in the system that
creates an own the buffer queue for your

00:23:45.400 --> 00:23:45.410
creates an own the buffer queue for your
 

00:23:45.410 --> 00:23:46.870
creates an own the buffer queue for your
application so it creates a buffer queue

00:23:46.870 --> 00:23:46.880
application so it creates a buffer queue
 

00:23:46.880 --> 00:23:49.300
application so it creates a buffer queue
and we have a way to send and

00:23:49.300 --> 00:23:49.310
and we have a way to send and
 

00:23:49.310 --> 00:23:51.160
and we have a way to send and
to your application by creating a

00:23:51.160 --> 00:23:51.170
to your application by creating a
 

00:23:51.170 --> 00:23:53.380
to your application by creating a
surface so whatever you see a surface in

00:23:53.380 --> 00:23:53.390
surface so whatever you see a surface in
 

00:23:53.390 --> 00:23:55.810
surface so whatever you see a surface in
one of our API is you really have the

00:23:55.810 --> 00:23:55.820
one of our API is you really have the
 

00:23:55.820 --> 00:23:57.820
one of our API is you really have the
producer endpoint of a perfect cube that

00:23:57.820 --> 00:23:57.830
producer endpoint of a perfect cube that
 

00:23:57.830 --> 00:23:59.080
producer endpoint of a perfect cube that
lives somewhere else in the system

00:23:59.080 --> 00:23:59.090
lives somewhere else in the system
 

00:23:59.090 --> 00:24:01.180
lives somewhere else in the system
either in your process or in some other

00:24:01.180 --> 00:24:01.190
either in your process or in some other
 

00:24:01.190 --> 00:24:03.010
either in your process or in some other
process most of the time it's gonna be

00:24:03.010 --> 00:24:03.020
process most of the time it's gonna be
 

00:24:03.020 --> 00:24:06.760
process most of the time it's gonna be
inside surface flinger so now when the

00:24:06.760 --> 00:24:06.770
inside surface flinger so now when the
 

00:24:06.770 --> 00:24:08.470
inside surface flinger so now when the
typical use case for you as an

00:24:08.470 --> 00:24:08.480
typical use case for you as an
 

00:24:08.480 --> 00:24:10.090
typical use case for you as an
application the application developer

00:24:10.090 --> 00:24:10.100
application the application developer
 

00:24:10.100 --> 00:24:12.160
application the application developer
you're gonna see you're going to deal

00:24:12.160 --> 00:24:12.170
you're gonna see you're going to deal
 

00:24:12.170 --> 00:24:13.660
you're gonna see you're going to deal
with the surface API when you create a

00:24:13.660 --> 00:24:13.670
with the surface API when you create a
 

00:24:13.670 --> 00:24:16.090
with the surface API when you create a
surface you so the worst of SEO works is

00:24:16.090 --> 00:24:16.100
surface you so the worst of SEO works is
 

00:24:16.100 --> 00:24:17.920
surface you so the worst of SEO works is
your window as its own surface that we

00:24:17.920 --> 00:24:17.930
your window as its own surface that we
 

00:24:17.930 --> 00:24:20.170
your window as its own surface that we
see here then we cut a hole through that

00:24:20.170 --> 00:24:20.180
see here then we cut a hole through that
 

00:24:20.180 --> 00:24:22.690
see here then we cut a hole through that
surface effectively and we ask the

00:24:22.690 --> 00:24:22.700
surface effectively and we ask the
 

00:24:22.700 --> 00:24:24.310
surface effectively and we ask the
window manager an surface flinger to

00:24:24.310 --> 00:24:24.320
window manager an surface flinger to
 

00:24:24.320 --> 00:24:26.020
window manager an surface flinger to
create a second surface and we just

00:24:26.020 --> 00:24:26.030
create a second surface and we just
 

00:24:26.030 --> 00:24:28.690
create a second surface and we just
slide it underneath and we pretend that

00:24:28.690 --> 00:24:28.700
slide it underneath and we pretend that
 

00:24:28.700 --> 00:24:30.460
slide it underneath and we pretend that
they're part of the same window but they

00:24:30.460 --> 00:24:30.470
they're part of the same window but they
 

00:24:30.470 --> 00:24:32.560
they're part of the same window but they
are not they have two different there

00:24:32.560 --> 00:24:32.570
are not they have two different there
 

00:24:32.570 --> 00:24:33.730
are not they have two different there
are two different surfaces they have two

00:24:33.730 --> 00:24:33.740
are two different surfaces they have two
 

00:24:33.740 --> 00:24:35.710
are two different surfaces they have two
different buffer queues and they can be

00:24:35.710 --> 00:24:35.720
different buffer queues and they can be
 

00:24:35.720 --> 00:24:37.180
different buffer queues and they can be
completely independent from one another

00:24:37.180 --> 00:24:37.190
completely independent from one another
 

00:24:37.190 --> 00:24:39.490
completely independent from one another
so if user surface view your polygons I

00:24:39.490 --> 00:24:39.500
so if user surface view your polygons I
 

00:24:39.500 --> 00:24:42.550
so if user surface view your polygons I
use a OpenGL or volcano or a media

00:24:42.550 --> 00:24:42.560
use a OpenGL or volcano or a media
 

00:24:42.560 --> 00:24:44.440
use a OpenGL or volcano or a media
player to generate content so for

00:24:44.440 --> 00:24:44.450
player to generate content so for
 

00:24:44.450 --> 00:24:46.210
player to generate content so for
instance in this case we have OpenGL yes

00:24:46.210 --> 00:24:46.220
instance in this case we have OpenGL yes
 

00:24:46.220 --> 00:24:48.790
instance in this case we have OpenGL yes
it's gonna acquire a DQ a buffer it's

00:24:48.790 --> 00:24:48.800
it's gonna acquire a DQ a buffer it's
 

00:24:48.800 --> 00:24:50.590
it's gonna acquire a DQ a buffer it's
gonna do some rendering it's gonna Cuba

00:24:50.590 --> 00:24:50.600
gonna do some rendering it's gonna Cuba
 

00:24:50.600 --> 00:24:52.390
gonna do some rendering it's gonna Cuba
the buffer back into the surface and

00:24:52.390 --> 00:24:52.400
the buffer back into the surface and
 

00:24:52.400 --> 00:24:54.070
the buffer back into the surface and
therefore into the surface the buffer

00:24:54.070 --> 00:24:54.080
therefore into the surface the buffer
 

00:24:54.080 --> 00:24:58.630
therefore into the surface the buffer
queue if you use a surface texture so

00:24:58.630 --> 00:24:58.640
queue if you use a surface texture so
 

00:24:58.640 --> 00:25:01.090
queue if you use a surface texture so
your producer you saw your consumer will

00:25:01.090 --> 00:25:01.100
your producer you saw your consumer will
 

00:25:01.100 --> 00:25:03.790
your producer you saw your consumer will
be OpenGL so you create a surface

00:25:03.790 --> 00:25:03.800
be OpenGL so you create a surface
 

00:25:03.800 --> 00:25:06.520
be OpenGL so you create a surface
texture by giving me the texture ID in

00:25:06.520 --> 00:25:06.530
texture by giving me the texture ID in
 

00:25:06.530 --> 00:25:09.130
texture by giving me the texture ID in
that case the surface texture creates

00:25:09.130 --> 00:25:09.140
that case the surface texture creates
 

00:25:09.140 --> 00:25:10.990
that case the surface texture creates
and owns the buffer queue so that will

00:25:10.990 --> 00:25:11.000
and owns the buffer queue so that will
 

00:25:11.000 --> 00:25:13.840
and owns the buffer queue so that will
often be in your own process then you

00:25:13.840 --> 00:25:13.850
often be in your own process then you
 

00:25:13.850 --> 00:25:16.420
often be in your own process then you
have to pass that surface texture to

00:25:16.420 --> 00:25:16.430
have to pass that surface texture to
 

00:25:16.430 --> 00:25:18.490
have to pass that surface texture to
some producer and to do this you create

00:25:18.490 --> 00:25:18.500
some producer and to do this you create
 

00:25:18.500 --> 00:25:20.590
some producer and to do this you create
the endpoints yourself by creating by

00:25:20.590 --> 00:25:20.600
the endpoints yourself by creating by
 

00:25:20.600 --> 00:25:22.210
the endpoints yourself by creating by
creating a surface there's a constructor

00:25:22.210 --> 00:25:22.220
creating a surface there's a constructor
 

00:25:22.220 --> 00:25:24.100
creating a surface there's a constructor
of surface that takes a surface texture

00:25:24.100 --> 00:25:24.110
of surface that takes a surface texture
 

00:25:24.110 --> 00:25:27.310
of surface that takes a surface texture
so you create your surface you send it

00:25:27.310 --> 00:25:27.320
so you create your surface you send it
 

00:25:27.320 --> 00:25:30.190
so you create your surface you send it
to some other application and then when

00:25:30.190 --> 00:25:30.200
to some other application and then when
 

00:25:30.200 --> 00:25:32.320
to some other application and then when
your OpenGL code is ready to render it

00:25:32.320 --> 00:25:32.330
your OpenGL code is ready to render it
 

00:25:32.330 --> 00:25:34.540
your OpenGL code is ready to render it
goes acquire to get a buffer from the

00:25:34.540 --> 00:25:34.550
goes acquire to get a buffer from the
 

00:25:34.550 --> 00:25:36.040
goes acquire to get a buffer from the
from the buffer queue it does its

00:25:36.040 --> 00:25:36.050
from the buffer queue it does its
 

00:25:36.050 --> 00:25:38.650
from the buffer queue it does its
rendering it's gonna itself produce a

00:25:38.650 --> 00:25:38.660
rendering it's gonna itself produce a
 

00:25:38.660 --> 00:25:40.510
rendering it's gonna itself produce a
buffer inside another queue and then

00:25:40.510 --> 00:25:40.520
buffer inside another queue and then
 

00:25:40.520 --> 00:25:44.170
buffer inside another queue and then
when it's done it can call release text

00:25:44.170 --> 00:25:44.180
when it's done it can call release text
 

00:25:44.180 --> 00:25:46.930
when it's done it can call release text
review is the widget that's part of a UI

00:25:46.930 --> 00:25:46.940
review is the widget that's part of a UI
 

00:25:46.940 --> 00:25:48.730
review is the widget that's part of a UI
tolki that you can use to benefit from

00:25:48.730 --> 00:25:48.740
tolki that you can use to benefit from
 

00:25:48.740 --> 00:25:51.250
tolki that you can use to benefit from
surface surface texture in that patio in

00:25:51.250 --> 00:25:51.260
surface surface texture in that patio in
 

00:25:51.260 --> 00:25:52.540
surface surface texture in that patio in
case the render thread that we talked

00:25:52.540 --> 00:25:52.550
case the render thread that we talked
 

00:25:52.550 --> 00:25:54.460
case the render thread that we talked
about is the consumer of the surface

00:25:54.460 --> 00:25:54.470
about is the consumer of the surface
 

00:25:54.470 --> 00:25:56.890
about is the consumer of the surface
texture and you're still responsible for

00:25:56.890 --> 00:25:56.900
texture and you're still responsible for
 

00:25:56.900 --> 00:25:59.020
texture and you're still responsible for
are getting the surface from the texture

00:25:59.020 --> 00:25:59.030
are getting the surface from the texture
 

00:25:59.030 --> 00:26:01.240
are getting the surface from the texture
of you and giving it to a producer of

00:26:01.240 --> 00:26:01.250
of you and giving it to a producer of
 

00:26:01.250 --> 00:26:03.640
of you and giving it to a producer of
your choosing you can think of it as a

00:26:03.640 --> 00:26:03.650
your choosing you can think of it as a
 

00:26:03.650 --> 00:26:05.290
your choosing you can think of it as a
fancy image you effectively its own

00:26:05.290 --> 00:26:05.300
fancy image you effectively its own
 

00:26:05.300 --> 00:26:06.970
fancy image you effectively its own
image you that you can update really

00:26:06.970 --> 00:26:06.980
image you that you can update really
 

00:26:06.980 --> 00:26:08.230
image you that you can update really
efficiently using a hardware

00:26:08.230 --> 00:26:08.240
efficiently using a hardware
 

00:26:08.240 --> 00:26:12.820
efficiently using a hardware
acceleration in recent years we we used

00:26:12.820 --> 00:26:12.830
acceleration in recent years we we used
 

00:26:12.830 --> 00:26:14.770
acceleration in recent years we we used
to tell you that six of you why is the

00:26:14.770 --> 00:26:14.780
to tell you that six of you why is the
 

00:26:14.780 --> 00:26:16.900
to tell you that six of you why is the
solution instead of surface you when you

00:26:16.900 --> 00:26:16.910
solution instead of surface you when you
 

00:26:16.910 --> 00:26:19.270
solution instead of surface you when you
want it to integrate you know a video or

00:26:19.270 --> 00:26:19.280
want it to integrate you know a video or
 

00:26:19.280 --> 00:26:21.490
want it to integrate you know a video or
OpenGL rendering inside the complex

00:26:21.490 --> 00:26:21.500
OpenGL rendering inside the complex
 

00:26:21.500 --> 00:26:22.900
OpenGL rendering inside the complex
application for instance if you had a

00:26:22.900 --> 00:26:22.910
application for instance if you had a
 

00:26:22.910 --> 00:26:25.000
application for instance if you had a
list view or count view or anything that

00:26:25.000 --> 00:26:25.010
list view or count view or anything that
 

00:26:25.010 --> 00:26:26.980
list view or count view or anything that
was animated surface view because it's

00:26:26.980 --> 00:26:26.990
was animated surface view because it's
 

00:26:26.990 --> 00:26:28.360
was animated surface view because it's
made of two different windows was not

00:26:28.360 --> 00:26:28.370
made of two different windows was not
 

00:26:28.370 --> 00:26:30.670
made of two different windows was not
really efficient for that and it was not

00:26:30.670 --> 00:26:30.680
really efficient for that and it was not
 

00:26:30.680 --> 00:26:32.530
really efficient for that and it was not
synchronized with the rendering of your

00:26:32.530 --> 00:26:32.540
synchronized with the rendering of your
 

00:26:32.540 --> 00:26:34.570
synchronized with the rendering of your
own application this has been fixed in

00:26:34.570 --> 00:26:34.580
own application this has been fixed in
 

00:26:34.580 --> 00:26:36.640
own application this has been fixed in
the recent versions of Android so most

00:26:36.640 --> 00:26:36.650
the recent versions of Android so most
 

00:26:36.650 --> 00:26:37.930
the recent versions of Android so most
of the time on recent versions of

00:26:37.930 --> 00:26:37.940
of the time on recent versions of
 

00:26:37.940 --> 00:26:39.190
of the time on recent versions of
Android you should use a surface view

00:26:39.190 --> 00:26:39.200
Android you should use a surface view
 

00:26:39.200 --> 00:26:40.810
Android you should use a surface view
instead of a texture view user text

00:26:40.810 --> 00:26:40.820
instead of a texture view user text
 

00:26:40.820 --> 00:26:43.270
instead of a texture view user text
review only when you have to maybe send

00:26:43.270 --> 00:26:43.280
review only when you have to maybe send
 

00:26:43.280 --> 00:26:45.250
review only when you have to maybe send
which between other views or use an

00:26:45.250 --> 00:26:45.260
which between other views or use an
 

00:26:45.260 --> 00:26:46.780
which between other views or use an
animation that's not supported by the

00:26:46.780 --> 00:26:46.790
animation that's not supported by the
 

00:26:46.790 --> 00:26:48.340
animation that's not supported by the
surface I think that was the Oh release

00:26:48.340 --> 00:26:48.350
surface I think that was the Oh release
 

00:26:48.350 --> 00:26:51.370
surface I think that was the Oh release
there was oh maybe and maybe what are

00:26:51.370 --> 00:26:51.380
there was oh maybe and maybe what are
 

00:26:51.380 --> 00:26:53.410
there was oh maybe and maybe what are
the two you have to test I would say

00:26:53.410 --> 00:26:53.420
the two you have to test I would say
 

00:26:53.420 --> 00:26:55.720
the two you have to test I would say
reason so and here's a list of different

00:26:55.720 --> 00:26:55.730
reason so and here's a list of different
 

00:26:55.730 --> 00:26:57.580
reason so and here's a list of different
producers and consumers in the platform

00:26:57.580 --> 00:26:57.590
producers and consumers in the platform
 

00:26:57.590 --> 00:26:59.320
producers and consumers in the platform
so we looked at surface view and surface

00:26:59.320 --> 00:26:59.330
so we looked at surface view and surface
 

00:26:59.330 --> 00:27:02.560
so we looked at surface view and surface
texture OpenGL ES is a producer it can

00:27:02.560 --> 00:27:02.570
texture OpenGL ES is a producer it can
 

00:27:02.570 --> 00:27:04.540
texture OpenGL ES is a producer it can
also be a consumer so remember when Chet

00:27:04.540 --> 00:27:04.550
also be a consumer so remember when Chet
 

00:27:04.550 --> 00:27:06.820
also be a consumer so remember when Chet
waste art was saying that that lifecycle

00:27:06.820 --> 00:27:06.830
waste art was saying that that lifecycle
 

00:27:06.830 --> 00:27:08.260
waste art was saying that that lifecycle
of a frame at some point we'd get a

00:27:08.260 --> 00:27:08.270
of a frame at some point we'd get a
 

00:27:08.270 --> 00:27:11.020
of a frame at some point we'd get a
buffer that's when we called DQ buffer

00:27:11.020 --> 00:27:11.030
buffer that's when we called DQ buffer
 

00:27:11.030 --> 00:27:13.210
buffer that's when we called DQ buffer
from the render thread and this is done

00:27:13.210 --> 00:27:13.220
from the render thread and this is done
 

00:27:13.220 --> 00:27:15.190
from the render thread and this is done
typically when we do the first draw call

00:27:15.190 --> 00:27:15.200
typically when we do the first draw call
 

00:27:15.200 --> 00:27:16.990
typically when we do the first draw call
and at the end when we call it just a

00:27:16.990 --> 00:27:17.000
and at the end when we call it just a
 

00:27:17.000 --> 00:27:18.910
and at the end when we call it just a
buffer to tell the driver that were done

00:27:18.910 --> 00:27:18.920
buffer to tell the driver that were done
 

00:27:18.920 --> 00:27:21.580
buffer to tell the driver that were done
with our frame it will actually produce

00:27:21.580 --> 00:27:21.590
with our frame it will actually produce
 

00:27:21.590 --> 00:27:22.810
with our frame it will actually produce
their frame and put it back in the

00:27:22.810 --> 00:27:22.820
their frame and put it back in the
 

00:27:22.820 --> 00:27:24.550
their frame and put it back in the
buffer queue you can also use things

00:27:24.550 --> 00:27:24.560
buffer queue you can also use things
 

00:27:24.560 --> 00:27:26.260
buffer queue you can also use things
like Vulcan the media player and media

00:27:26.260 --> 00:27:26.270
like Vulcan the media player and media
 

00:27:26.270 --> 00:27:27.550
like Vulcan the media player and media
codec and we have many many more

00:27:27.550 --> 00:27:27.560
codec and we have many many more
 

00:27:27.560 --> 00:27:30.100
codec and we have many many more
throughout the platform now the actual

00:27:30.100 --> 00:27:30.110
throughout the platform now the actual
 

00:27:30.110 --> 00:27:31.930
throughout the platform now the actual
composition so we have created multiple

00:27:31.930 --> 00:27:31.940
composition so we have created multiple
 

00:27:31.940 --> 00:27:33.780
composition so we have created multiple
windows that each have their own layer

00:27:33.780 --> 00:27:33.790
windows that each have their own layer
 

00:27:33.790 --> 00:27:36.190
windows that each have their own layer
surface flinger knows about all those

00:27:36.190 --> 00:27:36.200
surface flinger knows about all those
 

00:27:36.200 --> 00:27:38.590
surface flinger knows about all those
layers and to talk to the display

00:27:38.590 --> 00:27:38.600
layers and to talk to the display
 

00:27:38.600 --> 00:27:40.120
layers and to talk to the display
surface figure actually talks to

00:27:40.120 --> 00:27:40.130
surface figure actually talks to
 

00:27:40.130 --> 00:27:41.770
surface figure actually talks to
something called a hardware competitor

00:27:41.770 --> 00:27:41.780
something called a hardware competitor
 

00:27:41.780 --> 00:27:44.260
something called a hardware competitor
the holo composer hardware composer is a

00:27:44.260 --> 00:27:44.270
the holo composer hardware composer is a
 

00:27:44.270 --> 00:27:47.320
the holo composer hardware composer is a
hardware abstraction layer that we use

00:27:47.320 --> 00:27:47.330
hardware abstraction layer that we use
 

00:27:47.330 --> 00:27:49.630
hardware abstraction layer that we use
because we want to avoid using the GPU

00:27:49.630 --> 00:27:49.640
because we want to avoid using the GPU
 

00:27:49.640 --> 00:27:50.980
because we want to avoid using the GPU
and we need to compose it all those

00:27:50.980 --> 00:27:50.990
and we need to compose it all those
 

00:27:50.990 --> 00:27:52.900
and we need to compose it all those
windows on screen one of the reason is

00:27:52.900 --> 00:27:52.910
windows on screen one of the reason is
 

00:27:52.910 --> 00:27:54.160
windows on screen one of the reason is
to save battery it's more power

00:27:54.160 --> 00:27:54.170
to save battery it's more power
 

00:27:54.170 --> 00:27:55.960
to save battery it's more power
efficient that way it's also to make

00:27:55.960 --> 00:27:55.970
efficient that way it's also to make
 

00:27:55.970 --> 00:27:57.520
efficient that way it's also to make
sure that your application has access to

00:27:57.520 --> 00:27:57.530
sure that your application has access to
 

00:27:57.530 --> 00:27:59.440
sure that your application has access to
basically all the capabilities of the

00:27:59.440 --> 00:27:59.450
basically all the capabilities of the
 

00:27:59.450 --> 00:28:01.150
basically all the capabilities of the
GPU we don't take it away from you and

00:28:01.150 --> 00:28:01.160
GPU we don't take it away from you and
 

00:28:01.160 --> 00:28:03.640
GPU we don't take it away from you and
in the best you may have heard that that

00:28:03.640 --> 00:28:03.650
in the best you may have heard that that
 

00:28:03.650 --> 00:28:04.430
in the best you may have heard that that
you need

00:28:04.430 --> 00:28:04.440
you need
 

00:28:04.440 --> 00:28:05.870
you need
number view windows you put on screen

00:28:05.870 --> 00:28:05.880
number view windows you put on screen
 

00:28:05.880 --> 00:28:08.330
number view windows you put on screen
and you'll see why in a few slides

00:28:08.330 --> 00:28:08.340
and you'll see why in a few slides
 

00:28:08.340 --> 00:28:09.740
and you'll see why in a few slides
so we have the holo composer it's

00:28:09.740 --> 00:28:09.750
so we have the holo composer it's
 

00:28:09.750 --> 00:28:11.330
so we have the holo composer it's
effectivity of block of hardware that

00:28:11.330 --> 00:28:11.340
effectivity of block of hardware that
 

00:28:11.340 --> 00:28:13.790
effectivity of block of hardware that
that's really fast and taking multiple

00:28:13.790 --> 00:28:13.800
that's really fast and taking multiple
 

00:28:13.800 --> 00:28:15.830
that's really fast and taking multiple
bitmaps and compositing them together on

00:28:15.830 --> 00:28:15.840
bitmaps and compositing them together on
 

00:28:15.840 --> 00:28:19.160
bitmaps and compositing them together on
screen we just talked about this so the

00:28:19.160 --> 00:28:19.170
screen we just talked about this so the
 

00:28:19.170 --> 00:28:20.690
screen we just talked about this so the
way it actually works the hover composer

00:28:20.690 --> 00:28:20.700
way it actually works the hover composer
 

00:28:20.700 --> 00:28:23.420
way it actually works the hover composer
is really a kind of a protocol here I'm

00:28:23.420 --> 00:28:23.430
is really a kind of a protocol here I'm
 

00:28:23.430 --> 00:28:24.800
is really a kind of a protocol here I'm
gonna describe the older hardware

00:28:24.800 --> 00:28:24.810
gonna describe the older hardware
 

00:28:24.810 --> 00:28:28.220
gonna describe the older hardware
composer it's called hot octopus r10

00:28:28.220 --> 00:28:28.230
composer it's called hot octopus r10
 

00:28:28.230 --> 00:28:29.780
composer it's called hot octopus r10
moist confuse now we use one called the

00:28:29.780 --> 00:28:29.790
moist confuse now we use one called the
 

00:28:29.790 --> 00:28:31.310
moist confuse now we use one called the
ha composer - but it's much more

00:28:31.310 --> 00:28:31.320
ha composer - but it's much more
 

00:28:31.320 --> 00:28:33.440
ha composer - but it's much more
complicated so I'm not gonna describe it

00:28:33.440 --> 00:28:33.450
complicated so I'm not gonna describe it
 

00:28:33.450 --> 00:28:36.230
complicated so I'm not gonna describe it
here but it basically works the same way

00:28:36.230 --> 00:28:36.240
here but it basically works the same way
 

00:28:36.240 --> 00:28:37.700
here but it basically works the same way
so stuff is sitting here has a bunch of

00:28:37.700 --> 00:28:37.710
so stuff is sitting here has a bunch of
 

00:28:37.710 --> 00:28:40.220
so stuff is sitting here has a bunch of
layers and we're gonna call prepare on

00:28:40.220 --> 00:28:40.230
layers and we're gonna call prepare on
 

00:28:40.230 --> 00:28:41.810
layers and we're gonna call prepare on
this on the hop composer and we're gonna

00:28:41.810 --> 00:28:41.820
this on the hop composer and we're gonna
 

00:28:41.820 --> 00:28:44.330
this on the hop composer and we're gonna
send all the layers to the hardrock

00:28:44.330 --> 00:28:44.340
send all the layers to the hardrock
 

00:28:44.340 --> 00:28:46.580
send all the layers to the hardrock
composer and ask it to tell us what he

00:28:46.580 --> 00:28:46.590
composer and ask it to tell us what he
 

00:28:46.590 --> 00:28:49.010
composer and ask it to tell us what he
wants to do with every layer every hard

00:28:49.010 --> 00:28:49.020
wants to do with every layer every hard
 

00:28:49.020 --> 00:28:51.350
wants to do with every layer every hard
rock composer is the proprietary piece

00:28:51.350 --> 00:28:51.360
rock composer is the proprietary piece
 

00:28:51.360 --> 00:28:53.090
rock composer is the proprietary piece
of hardware in you know the phone or

00:28:53.090 --> 00:28:53.100
of hardware in you know the phone or
 

00:28:53.100 --> 00:28:55.310
of hardware in you know the phone or
tablet you're using and there is no way

00:28:55.310 --> 00:28:55.320
tablet you're using and there is no way
 

00:28:55.320 --> 00:28:56.870
tablet you're using and there is no way
that we can write the drivers for all

00:28:56.870 --> 00:28:56.880
that we can write the drivers for all
 

00:28:56.880 --> 00:28:58.460
that we can write the drivers for all
the different other composers out there

00:28:58.460 --> 00:28:58.470
the different other composers out there
 

00:28:58.470 --> 00:29:01.040
the different other composers out there
so instead the professor's gonna tell us

00:29:01.040 --> 00:29:01.050
so instead the professor's gonna tell us
 

00:29:01.050 --> 00:29:02.420
so instead the professor's gonna tell us
what he wants to do so in this case we

00:29:02.420 --> 00:29:02.430
what he wants to do so in this case we
 

00:29:02.430 --> 00:29:04.400
what he wants to do so in this case we
have a layer the heart composer replies

00:29:04.400 --> 00:29:04.410
have a layer the heart composer replies
 

00:29:04.410 --> 00:29:06.320
have a layer the heart composer replies
overlay that means you have our composer

00:29:06.320 --> 00:29:06.330
overlay that means you have our composer
 

00:29:06.330 --> 00:29:08.540
overlay that means you have our composer
understands the pixel format of that

00:29:08.540 --> 00:29:08.550
understands the pixel format of that
 

00:29:08.550 --> 00:29:10.610
understands the pixel format of that
window and tells us that it can handle

00:29:10.610 --> 00:29:10.620
window and tells us that it can handle
 

00:29:10.620 --> 00:29:12.260
window and tells us that it can handle
it and it's gonna do the composition for

00:29:12.260 --> 00:29:12.270
it and it's gonna do the composition for
 

00:29:12.270 --> 00:29:14.120
it and it's gonna do the composition for
that window so we keep going it's

00:29:14.120 --> 00:29:14.130
that window so we keep going it's
 

00:29:14.130 --> 00:29:15.590
that window so we keep going it's
telling us overlay for the second layer

00:29:15.590 --> 00:29:15.600
telling us overlay for the second layer
 

00:29:15.600 --> 00:29:17.510
telling us overlay for the second layer
it's telling us overlays for the third

00:29:17.510 --> 00:29:17.520
it's telling us overlays for the third
 

00:29:17.520 --> 00:29:19.910
it's telling us overlays for the third
layer so that's great that means all the

00:29:19.910 --> 00:29:19.920
layer so that's great that means all the
 

00:29:19.920 --> 00:29:21.440
layer so that's great that means all the
composition can be done automatically

00:29:21.440 --> 00:29:21.450
composition can be done automatically
 

00:29:21.450 --> 00:29:23.750
composition can be done automatically
for us on our behalf in a very efficient

00:29:23.750 --> 00:29:23.760
for us on our behalf in a very efficient
 

00:29:23.760 --> 00:29:26.570
for us on our behalf in a very efficient
way so now all our layers are matched to

00:29:26.570 --> 00:29:26.580
way so now all our layers are matched to
 

00:29:26.580 --> 00:29:29.390
way so now all our layers are matched to
overlays we call set we send all the

00:29:29.390 --> 00:29:29.400
overlays we call set we send all the
 

00:29:29.400 --> 00:29:30.890
overlays we call set we send all the
layers to the hardrock composer this

00:29:30.890 --> 00:29:30.900
layers to the hardrock composer this
 

00:29:30.900 --> 00:29:32.990
layers to the hardrock composer this
time for actual composition and the hot

00:29:32.990 --> 00:29:33.000
time for actual composition and the hot
 

00:29:33.000 --> 00:29:34.250
time for actual composition and the hot
dog composer sends everything to the

00:29:34.250 --> 00:29:34.260
dog composer sends everything to the
 

00:29:34.260 --> 00:29:37.970
dog composer sends everything to the
screen now a more complex example so we

00:29:37.970 --> 00:29:37.980
screen now a more complex example so we
 

00:29:37.980 --> 00:29:39.790
screen now a more complex example so we
have a number of layers we call prepare

00:29:39.790 --> 00:29:39.800
have a number of layers we call prepare
 

00:29:39.800 --> 00:29:41.960
have a number of layers we call prepare
for the first one everything goes fine

00:29:41.960 --> 00:29:41.970
for the first one everything goes fine
 

00:29:41.970 --> 00:29:44.480
for the first one everything goes fine
the whole composer says overlay can

00:29:44.480 --> 00:29:44.490
the whole composer says overlay can
 

00:29:44.490 --> 00:29:46.700
the whole composer says overlay can
handle it but for some reason for the

00:29:46.700 --> 00:29:46.710
handle it but for some reason for the
 

00:29:46.710 --> 00:29:48.740
handle it but for some reason for the
next one it says frame buffer so that

00:29:48.740 --> 00:29:48.750
next one it says frame buffer so that
 

00:29:48.750 --> 00:29:50.810
next one it says frame buffer so that
can happen when you're using a pixel

00:29:50.810 --> 00:29:50.820
can happen when you're using a pixel
 

00:29:50.820 --> 00:29:52.490
can happen when you're using a pixel
format that's not supported it could be

00:29:52.490 --> 00:29:52.500
format that's not supported it could be
 

00:29:52.500 --> 00:29:54.530
format that's not supported it could be
because you're using a rotation and

00:29:54.530 --> 00:29:54.540
because you're using a rotation and
 

00:29:54.540 --> 00:29:56.360
because you're using a rotation and
occupational doesn't know how to handle

00:29:56.360 --> 00:29:56.370
occupational doesn't know how to handle
 

00:29:56.370 --> 00:29:58.550
occupational doesn't know how to handle
rotation or we have too many layers on

00:29:58.550 --> 00:29:58.560
rotation or we have too many layers on
 

00:29:58.560 --> 00:30:01.790
rotation or we have too many layers on
the screen or any number of reasons that

00:30:01.790 --> 00:30:01.800
the screen or any number of reasons that
 

00:30:01.800 --> 00:30:03.230
the screen or any number of reasons that
are specific to that type of composer

00:30:03.230 --> 00:30:03.240
are specific to that type of composer
 

00:30:03.240 --> 00:30:05.990
are specific to that type of composer
this was much more common in devices

00:30:05.990 --> 00:30:06.000
this was much more common in devices
 

00:30:06.000 --> 00:30:08.270
this was much more common in devices
probably a three or four or a long right

00:30:08.270 --> 00:30:08.280
probably a three or four or a long right
 

00:30:08.280 --> 00:30:11.840
probably a three or four or a long right
used to have about four Hardware layers

00:30:11.840 --> 00:30:11.850
used to have about four Hardware layers
 

00:30:11.850 --> 00:30:13.730
used to have about four Hardware layers
that you could use that's four that's

00:30:13.730 --> 00:30:13.740
that you could use that's four that's
 

00:30:13.740 --> 00:30:14.190
that you could use that's four that's
five

00:30:14.190 --> 00:30:14.200
five
 

00:30:14.200 --> 00:30:15.990
five
so we here used to have four and on

00:30:15.990 --> 00:30:16.000
so we here used to have four and on
 

00:30:16.000 --> 00:30:18.540
so we here used to have four and on
pixel two without going into too much

00:30:18.540 --> 00:30:18.550
pixel two without going into too much
 

00:30:18.550 --> 00:30:21.360
pixel two without going into too much
detail you have basically seven so it's

00:30:21.360 --> 00:30:21.370
detail you have basically seven so it's
 

00:30:21.370 --> 00:30:23.040
detail you have basically seven so it's
much better than it used to be but if

00:30:23.040 --> 00:30:23.050
much better than it used to be but if
 

00:30:23.050 --> 00:30:25.320
much better than it used to be but if
you have a pixel through Excel we use

00:30:25.320 --> 00:30:25.330
you have a pixel through Excel we use
 

00:30:25.330 --> 00:30:27.000
you have a pixel through Excel we use
two of those layers to draw the rounded

00:30:27.000 --> 00:30:27.010
two of those layers to draw the rounded
 

00:30:27.010 --> 00:30:28.980
two of those layers to draw the rounded
corners so you don't really have seven

00:30:28.980 --> 00:30:28.990
corners so you don't really have seven
 

00:30:28.990 --> 00:30:31.620
corners so you don't really have seven
you have five it's actually more six

00:30:31.620 --> 00:30:31.630
you have five it's actually more six
 

00:30:31.630 --> 00:30:32.700
you have five it's actually more six
because they can be merged by the

00:30:32.700 --> 00:30:32.710
because they can be merged by the
 

00:30:32.710 --> 00:30:34.680
because they can be merged by the
composer anyway lots of details it can

00:30:34.680 --> 00:30:34.690
composer anyway lots of details it can
 

00:30:34.690 --> 00:30:36.060
composer anyway lots of details it can
be really complicated you don't need to

00:30:36.060 --> 00:30:36.070
be really complicated you don't need to
 

00:30:36.070 --> 00:30:37.920
be really complicated you don't need to
know about all those details anyway in

00:30:37.920 --> 00:30:37.930
know about all those details anyway in
 

00:30:37.930 --> 00:30:39.450
know about all those details anyway in
this case we have one year that can go

00:30:39.450 --> 00:30:39.460
this case we have one year that can go
 

00:30:39.460 --> 00:30:41.190
this case we have one year that can go
directly to the hardrock composer but we

00:30:41.190 --> 00:30:41.200
directly to the hardrock composer but we
 

00:30:41.200 --> 00:30:42.540
directly to the hardrock composer but we
have two layers that have been marked

00:30:42.540 --> 00:30:42.550
have two layers that have been marked
 

00:30:42.550 --> 00:30:44.940
have two layers that have been marked
frame buffer so and that's what the hard

00:30:44.940 --> 00:30:44.950
frame buffer so and that's what the hard
 

00:30:44.950 --> 00:30:48.000
frame buffer so and that's what the hard
part starts for us because when we have

00:30:48.000 --> 00:30:48.010
part starts for us because when we have
 

00:30:48.010 --> 00:30:49.260
part starts for us because when we have
layers that are not handled by the

00:30:49.260 --> 00:30:49.270
layers that are not handled by the
 

00:30:49.270 --> 00:30:51.240
layers that are not handled by the
hardrock composer we need to use the GPU

00:30:51.240 --> 00:30:51.250
hardrock composer we need to use the GPU
 

00:30:51.250 --> 00:30:53.100
hardrock composer we need to use the GPU
to composite them ourselves

00:30:53.100 --> 00:30:53.110
to composite them ourselves
 

00:30:53.110 --> 00:30:55.170
to composite them ourselves
so surface flinger has to be able to do

00:30:55.170 --> 00:30:55.180
so surface flinger has to be able to do
 

00:30:55.180 --> 00:30:57.180
so surface flinger has to be able to do
everything that the hardware can do and

00:30:57.180 --> 00:30:57.190
everything that the hardware can do and
 

00:30:57.190 --> 00:30:58.800
everything that the hardware can do and
in that situation we need to create

00:30:58.800 --> 00:30:58.810
in that situation we need to create
 

00:30:58.810 --> 00:31:01.170
in that situation we need to create
basically a scratch buffer another layer

00:31:01.170 --> 00:31:01.180
basically a scratch buffer another layer
 

00:31:01.180 --> 00:31:03.060
basically a scratch buffer another layer
in the format that we know the hardware

00:31:03.060 --> 00:31:03.070
in the format that we know the hardware
 

00:31:03.070 --> 00:31:05.490
in the format that we know the hardware
composer can accept and then we use

00:31:05.490 --> 00:31:05.500
composer can accept and then we use
 

00:31:05.500 --> 00:31:07.890
composer can accept and then we use
custom OpenGL code to do the composition

00:31:07.890 --> 00:31:07.900
custom OpenGL code to do the composition
 

00:31:07.900 --> 00:31:10.740
custom OpenGL code to do the composition
ourselves of those two layers so then

00:31:10.740 --> 00:31:10.750
ourselves of those two layers so then
 

00:31:10.750 --> 00:31:12.690
ourselves of those two layers so then
once we're done with that part were left

00:31:12.690 --> 00:31:12.700
once we're done with that part were left
 

00:31:12.700 --> 00:31:14.310
once we're done with that part were left
with only two layers and we know that

00:31:14.310 --> 00:31:14.320
with only two layers and we know that
 

00:31:14.320 --> 00:31:15.390
with only two layers and we know that
those can be send it to the other

00:31:15.390 --> 00:31:15.400
those can be send it to the other
 

00:31:15.400 --> 00:31:18.000
those can be send it to the other
composers so that's what we do we call

00:31:18.000 --> 00:31:18.010
composers so that's what we do we call
 

00:31:18.010 --> 00:31:21.390
composers so that's what we do we call
set and then they show up on screen so

00:31:21.390 --> 00:31:21.400
set and then they show up on screen so
 

00:31:21.400 --> 00:31:23.790
set and then they show up on screen so
if you if you're curious sometime you

00:31:23.790 --> 00:31:23.800
if you if you're curious sometime you
 

00:31:23.800 --> 00:31:27.210
if you if you're curious sometime you
can run this command adb shell dumps

00:31:27.210 --> 00:31:27.220
can run this command adb shell dumps
 

00:31:27.220 --> 00:31:29.370
can run this command adb shell dumps
this surface flinger and circuit is

00:31:29.370 --> 00:31:29.380
this surface flinger and circuit is
 

00:31:29.380 --> 00:31:33.240
this surface flinger and circuit is
capital F okay very important and it'll

00:31:33.240 --> 00:31:33.250
capital F okay very important and it'll
 

00:31:33.250 --> 00:31:35.370
capital F okay very important and it'll
spit out way way way more information

00:31:35.370 --> 00:31:35.380
spit out way way way more information
 

00:31:35.380 --> 00:31:37.110
spit out way way way more information
than you want but one of the things that

00:31:37.110 --> 00:31:37.120
than you want but one of the things that
 

00:31:37.120 --> 00:31:39.270
than you want but one of the things that
it's going to show you is a table of the

00:31:39.270 --> 00:31:39.280
it's going to show you is a table of the
 

00:31:39.280 --> 00:31:42.090
it's going to show you is a table of the
windows on the screen and whether they

00:31:42.090 --> 00:31:42.100
windows on the screen and whether they
 

00:31:42.100 --> 00:31:44.190
windows on the screen and whether they
are currently represented as overlays or

00:31:44.190 --> 00:31:44.200
are currently represented as overlays or
 

00:31:44.200 --> 00:31:46.350
are currently represented as overlays or
frame buffer although you have to run

00:31:46.350 --> 00:31:46.360
frame buffer although you have to run
 

00:31:46.360 --> 00:31:47.550
frame buffer although you have to run
this command pretty quickly because

00:31:47.550 --> 00:31:47.560
this command pretty quickly because
 

00:31:47.560 --> 00:31:49.290
this command pretty quickly because
there are tons of optimizations in

00:31:49.290 --> 00:31:49.300
there are tons of optimizations in
 

00:31:49.300 --> 00:31:52.080
there are tons of optimizations in
slowly so what can happen sometimes is

00:31:52.080 --> 00:31:52.090
slowly so what can happen sometimes is
 

00:31:52.090 --> 00:31:55.380
slowly so what can happen sometimes is
if layers have been on screen for a

00:31:55.380 --> 00:31:55.390
if layers have been on screen for a
 

00:31:55.390 --> 00:31:56.840
if layers have been on screen for a
while and we know they are not changing

00:31:56.840 --> 00:31:56.850
while and we know they are not changing
 

00:31:56.850 --> 00:31:59.580
while and we know they are not changing
the octopus room might be collapsing

00:31:59.580 --> 00:31:59.590
the octopus room might be collapsing
 

00:31:59.590 --> 00:32:01.080
the octopus room might be collapsing
them into a single layer until they

00:32:01.080 --> 00:32:01.090
them into a single layer until they
 

00:32:01.090 --> 00:32:02.670
them into a single layer until they
change again so the output of that

00:32:02.670 --> 00:32:02.680
change again so the output of that
 

00:32:02.680 --> 00:32:04.140
change again so the output of that
command is sometime a little bit

00:32:04.140 --> 00:32:04.150
command is sometime a little bit
 

00:32:04.150 --> 00:32:05.280
command is sometime a little bit
misleading because you might be seeing

00:32:05.280 --> 00:32:05.290
misleading because you might be seeing
 

00:32:05.290 --> 00:32:07.140
misleading because you might be seeing
the result of optimizations based on

00:32:07.140 --> 00:32:07.150
the result of optimizations based on
 

00:32:07.150 --> 00:32:09.600
the result of optimizations based on
time so the best thing to do is use each

00:32:09.600 --> 00:32:09.610
time so the best thing to do is use each
 

00:32:09.610 --> 00:32:10.830
time so the best thing to do is use each
one this when you're running an

00:32:10.830 --> 00:32:10.840
one this when you're running an
 

00:32:10.840 --> 00:32:12.390
one this when you're running an
animation or something is changing on

00:32:12.390 --> 00:32:12.400
animation or something is changing on
 

00:32:12.400 --> 00:32:14.190
animation or something is changing on
screen that's going to be the most

00:32:14.190 --> 00:32:14.200
screen that's going to be the most
 

00:32:14.200 --> 00:32:16.440
screen that's going to be the most
variable information for you so a few

00:32:16.440 --> 00:32:16.450
variable information for you so a few
 

00:32:16.450 --> 00:32:17.670
variable information for you so a few
other things that we haven't talked

00:32:17.670 --> 00:32:17.680
other things that we haven't talked
 

00:32:17.680 --> 00:32:20.730
other things that we haven't talked
about we used to tell you to use the

00:32:20.730 --> 00:32:20.740
about we used to tell you to use the
 

00:32:20.740 --> 00:32:22.310
about we used to tell you to use the
variant of that

00:32:22.310 --> 00:32:22.320
variant of that
 

00:32:22.320 --> 00:32:24.350
variant of that
detector detects a rectangle so you

00:32:24.350 --> 00:32:24.360
detector detects a rectangle so you
 

00:32:24.360 --> 00:32:26.480
detector detects a rectangle so you
could vary that only part of your view

00:32:26.480 --> 00:32:26.490
could vary that only part of your view
 

00:32:26.490 --> 00:32:28.399
could vary that only part of your view
that you knew needed to be repainted

00:32:28.399 --> 00:32:28.409
that you knew needed to be repainted
 

00:32:28.409 --> 00:32:30.649
that you knew needed to be repainted
that was particularly important with

00:32:30.649 --> 00:32:30.659
that was particularly important with
 

00:32:30.659 --> 00:32:32.570
that was particularly important with
older Android devices because bandwidth

00:32:32.570 --> 00:32:32.580
older Android devices because bandwidth
 

00:32:32.580 --> 00:32:34.039
older Android devices because bandwidth
was extremely limited we are using

00:32:34.039 --> 00:32:34.049
was extremely limited we are using
 

00:32:34.049 --> 00:32:36.049
was extremely limited we are using
software rendering and even in the early

00:32:36.049 --> 00:32:36.059
software rendering and even in the early
 

00:32:36.059 --> 00:32:38.120
software rendering and even in the early
days of GPU rendering for us we were

00:32:38.120 --> 00:32:38.130
days of GPU rendering for us we were
 

00:32:38.130 --> 00:32:40.100
days of GPU rendering for us we were
pretty much pretty easily maxing out the

00:32:40.100 --> 00:32:40.110
pretty much pretty easily maxing out the
 

00:32:40.110 --> 00:32:42.320
pretty much pretty easily maxing out the
GPU so those were really important

00:32:42.320 --> 00:32:42.330
GPU so those were really important
 

00:32:42.330 --> 00:32:44.180
GPU so those were really important
savings you don't need to do this

00:32:44.180 --> 00:32:44.190
savings you don't need to do this
 

00:32:44.190 --> 00:32:44.769
savings you don't need to do this
anymore

00:32:44.769 --> 00:32:44.779
anymore
 

00:32:44.779 --> 00:32:47.210
anymore
and even on recent versions of Android

00:32:47.210 --> 00:32:47.220
and even on recent versions of Android
 

00:32:47.220 --> 00:32:49.070
and even on recent versions of Android
before this was deprecated it was

00:32:49.070 --> 00:32:49.080
before this was deprecated it was
 

00:32:49.080 --> 00:32:50.870
before this was deprecated it was
actually ignored by the system now what

00:32:50.870 --> 00:32:50.880
actually ignored by the system now what
 

00:32:50.880 --> 00:32:52.549
actually ignored by the system now what
happens every time you call in validate

00:32:52.549 --> 00:32:52.559
happens every time you call in validate
 

00:32:52.559 --> 00:32:54.710
happens every time you call in validate
or invalidate with a rectangle on a view

00:32:54.710 --> 00:32:54.720
or invalidate with a rectangle on a view
 

00:32:54.720 --> 00:32:56.629
or invalidate with a rectangle on a view
the render thread is going to re-render

00:32:56.629 --> 00:32:56.639
the render thread is going to re-render
 

00:32:56.639 --> 00:32:58.669
the render thread is going to re-render
that of you or we computed so damaged

00:32:58.669 --> 00:32:58.679
that of you or we computed so damaged
 

00:32:58.679 --> 00:33:00.019
that of you or we computed so damaged
area you don't have to worry about it

00:33:00.019 --> 00:33:00.029
area you don't have to worry about it
 

00:33:00.029 --> 00:33:01.549
area you don't have to worry about it
and one of the reasons we're getting rid

00:33:01.549 --> 00:33:01.559
and one of the reasons we're getting rid
 

00:33:01.559 --> 00:33:03.379
and one of the reasons we're getting rid
of it is not only is it not that

00:33:03.379 --> 00:33:03.389
of it is not only is it not that
 

00:33:03.389 --> 00:33:06.049
of it is not only is it not that
necessary anymore for savings it's also

00:33:06.049 --> 00:33:06.059
necessary anymore for savings it's also
 

00:33:06.059 --> 00:33:07.789
necessary anymore for savings it's also
because it's error prone it's real easy

00:33:07.789 --> 00:33:07.799
because it's error prone it's real easy
 

00:33:07.799 --> 00:33:10.279
because it's error prone it's real easy
to have enough buy one error or rounding

00:33:10.279 --> 00:33:10.289
to have enough buy one error or rounding
 

00:33:10.289 --> 00:33:12.230
to have enough buy one error or rounding
error and to get artifacts on screen and

00:33:12.230 --> 00:33:12.240
error and to get artifacts on screen and
 

00:33:12.240 --> 00:33:14.210
error and to get artifacts on screen and
certain I can attest that because we

00:33:14.210 --> 00:33:14.220
certain I can attest that because we
 

00:33:14.220 --> 00:33:17.210
certain I can attest that because we
fixed so many bugs linked to this to the

00:33:17.210 --> 00:33:17.220
fixed so many bugs linked to this to the
 

00:33:17.220 --> 00:33:18.529
fixed so many bugs linked to this to the
use of those aps and the framework

00:33:18.529 --> 00:33:18.539
use of those aps and the framework
 

00:33:18.539 --> 00:33:20.659
use of those aps and the framework
itself I still has bugs I believe around

00:33:20.659 --> 00:33:20.669
itself I still has bugs I believe around
 

00:33:20.669 --> 00:33:21.980
itself I still has bugs I believe around
that so now we don't have to worry about

00:33:21.980 --> 00:33:21.990
that so now we don't have to worry about
 

00:33:21.990 --> 00:33:23.029
that so now we don't have to worry about
it

00:33:23.029 --> 00:33:23.039
it
 

00:33:23.039 --> 00:33:25.460
it
recyclerview is now able to do

00:33:25.460 --> 00:33:25.470
recyclerview is now able to do
 

00:33:25.470 --> 00:33:28.399
recyclerview is now able to do
prefetching of item ahead of time yeah

00:33:28.399 --> 00:33:28.409
prefetching of item ahead of time yeah
 

00:33:28.409 --> 00:33:30.169
prefetching of item ahead of time yeah
we mentioned this earlier this is one of

00:33:30.169 --> 00:33:30.179
we mentioned this earlier this is one of
 

00:33:30.179 --> 00:33:31.519
we mentioned this earlier this is one of
the wins that we're now getting out of

00:33:31.519 --> 00:33:31.529
the wins that we're now getting out of
 

00:33:31.529 --> 00:33:33.649
the wins that we're now getting out of
having a separate render thread because

00:33:33.649 --> 00:33:33.659
having a separate render thread because
 

00:33:33.659 --> 00:33:36.110
having a separate render thread because
now well there's idle time the UI thread

00:33:36.110 --> 00:33:36.120
now well there's idle time the UI thread
 

00:33:36.120 --> 00:33:37.820
now well there's idle time the UI thread
was done with its work after it's inked

00:33:37.820 --> 00:33:37.830
was done with its work after it's inked
 

00:33:37.830 --> 00:33:40.190
was done with its work after it's inked
we can use that idle time productively

00:33:40.190 --> 00:33:40.200
we can use that idle time productively
 

00:33:40.200 --> 00:33:42.619
we can use that idle time productively
for doing other things like fetching

00:33:42.619 --> 00:33:42.629
for doing other things like fetching
 

00:33:42.629 --> 00:33:44.210
for doing other things like fetching
things that it know it might need in the

00:33:44.210 --> 00:33:44.220
things that it know it might need in the
 

00:33:44.220 --> 00:33:46.249
things that it know it might need in the
next few frames for composition

00:33:46.249 --> 00:33:46.259
next few frames for composition
 

00:33:46.259 --> 00:33:47.570
next few frames for composition
internally we have a concept of virtual

00:33:47.570 --> 00:33:47.580
internally we have a concept of virtual
 

00:33:47.580 --> 00:33:49.820
internally we have a concept of virtual
display design API you can use for

00:33:49.820 --> 00:33:49.830
display design API you can use for
 

00:33:49.830 --> 00:33:51.169
display design API you can use for
instance that's what we use when we take

00:33:51.169 --> 00:33:51.179
instance that's what we use when we take
 

00:33:51.179 --> 00:33:52.940
instance that's what we use when we take
a screenshot or when we record a video

00:33:52.940 --> 00:33:52.950
a screenshot or when we record a video
 

00:33:52.950 --> 00:33:56.299
a screenshot or when we record a video
or when we do casting Chrome casting for

00:33:56.299 --> 00:33:56.309
or when we do casting Chrome casting for
 

00:33:56.309 --> 00:33:58.430
or when we do casting Chrome casting for
instance what we effectively doing is

00:33:58.430 --> 00:33:58.440
instance what we effectively doing is
 

00:33:58.440 --> 00:34:00.230
instance what we effectively doing is
asking so first finger to perform a

00:34:00.230 --> 00:34:00.240
asking so first finger to perform a
 

00:34:00.240 --> 00:34:02.450
asking so first finger to perform a
composition but not to display directly

00:34:02.450 --> 00:34:02.460
composition but not to display directly
 

00:34:02.460 --> 00:34:04.159
composition but not to display directly
just into another surface so it's

00:34:04.159 --> 00:34:04.169
just into another surface so it's
 

00:34:04.169 --> 00:34:06.259
just into another surface so it's
another way of producing a surface if

00:34:06.259 --> 00:34:06.269
another way of producing a surface if
 

00:34:06.269 --> 00:34:08.059
another way of producing a surface if
you're interested there's a next silent

00:34:08.059 --> 00:34:08.069
you're interested there's a next silent
 

00:34:08.069 --> 00:34:11.149
you're interested there's a next silent
a simple application called grafica with

00:34:11.149 --> 00:34:11.159
a simple application called grafica with
 

00:34:11.159 --> 00:34:12.889
a simple application called grafica with
a k' available on github it was written

00:34:12.889 --> 00:34:12.899
a k' available on github it was written
 

00:34:12.899 --> 00:34:14.389
a k' available on github it was written
by a member of the graphics team a few

00:34:14.389 --> 00:34:14.399
by a member of the graphics team a few
 

00:34:14.399 --> 00:34:16.430
by a member of the graphics team a few
years ago it's basically a collection of

00:34:16.430 --> 00:34:16.440
years ago it's basically a collection of
 

00:34:16.440 --> 00:34:17.060
years ago it's basically a collection of
old

00:34:17.060 --> 00:34:17.070
old
 

00:34:17.070 --> 00:34:18.500
old
you can do with surface flinger with

00:34:18.500 --> 00:34:18.510
you can do with surface flinger with
 

00:34:18.510 --> 00:34:20.090
you can do with surface flinger with
surfaces with surface view with the

00:34:20.090 --> 00:34:20.100
surfaces with surface view with the
 

00:34:20.100 --> 00:34:22.700
surfaces with surface view with the
media encoder with virtual displays it's

00:34:22.700 --> 00:34:22.710
media encoder with virtual displays it's
 

00:34:22.710 --> 00:34:24.890
media encoder with virtual displays it's
a very interesting piece of code to look

00:34:24.890 --> 00:34:24.900
a very interesting piece of code to look
 

00:34:24.900 --> 00:34:28.300
a very interesting piece of code to look
at color transform so in in Android all

00:34:28.300 --> 00:34:28.310
at color transform so in in Android all
 

00:34:28.310 --> 00:34:30.560
at color transform so in in Android all
we introduce color management and that's

00:34:30.560 --> 00:34:30.570
we introduce color management and that's
 

00:34:30.570 --> 00:34:32.210
we introduce color management and that's
one of the core transforms we can apply

00:34:32.210 --> 00:34:32.220
one of the core transforms we can apply
 

00:34:32.220 --> 00:34:35.090
one of the core transforms we can apply
things like nightlight are also color

00:34:35.090 --> 00:34:35.100
things like nightlight are also color
 

00:34:35.100 --> 00:34:37.040
things like nightlight are also color
transforms we also have color blindness

00:34:37.040 --> 00:34:37.050
transforms we also have color blindness
 

00:34:37.050 --> 00:34:39.590
transforms we also have color blindness
simulation those can be handled by the

00:34:39.590 --> 00:34:39.600
simulation those can be handled by the
 

00:34:39.600 --> 00:34:41.890
simulation those can be handled by the
hardware composer in specific situations

00:34:41.890 --> 00:34:41.900
hardware composer in specific situations
 

00:34:41.900 --> 00:34:45.680
hardware composer in specific situations
and they can either cause for for

00:34:45.680 --> 00:34:45.690
and they can either cause for for
 

00:34:45.690 --> 00:34:47.570
and they can either cause for for
performance issues for instance a while

00:34:47.570 --> 00:34:47.580
performance issues for instance a while
 

00:34:47.580 --> 00:34:48.140
performance issues for instance a while
back

00:34:48.140 --> 00:34:48.150
back
 

00:34:48.150 --> 00:34:50.570
back
nightlight was not supported I believe

00:34:50.570 --> 00:34:50.580
nightlight was not supported I believe
 

00:34:50.580 --> 00:34:53.360
nightlight was not supported I believe
on the n5 x or the n6p one of the

00:34:53.360 --> 00:34:53.370
on the n5 x or the n6p one of the
 

00:34:53.370 --> 00:34:55.460
on the n5 x or the n6p one of the
reasons was the hardware we didn't add

00:34:55.460 --> 00:34:55.470
reasons was the hardware we didn't add
 

00:34:55.470 --> 00:34:56.930
reasons was the hardware we didn't add
the drivers that could do the color

00:34:56.930 --> 00:34:56.940
the drivers that could do the color
 

00:34:56.940 --> 00:34:58.610
the drivers that could do the color
transform so we had to fall back to g3

00:34:58.610 --> 00:34:58.620
transform so we had to fall back to g3
 

00:34:58.620 --> 00:35:00.800
transform so we had to fall back to g3
composition it was really expensive it

00:35:00.800 --> 00:35:00.810
composition it was really expensive it
 

00:35:00.810 --> 00:35:02.540
composition it was really expensive it
was hurting the battery so we didn't

00:35:02.540 --> 00:35:02.550
was hurting the battery so we didn't
 

00:35:02.550 --> 00:35:03.770
was hurting the battery so we didn't
have the feature on the device and

00:35:03.770 --> 00:35:03.780
have the feature on the device and
 

00:35:03.780 --> 00:35:05.540
have the feature on the device and
lecture said there are many many more

00:35:05.540 --> 00:35:05.550
lecture said there are many many more
 

00:35:05.550 --> 00:35:07.400
lecture said there are many many more
details that our rendering pipeline this

00:35:07.400 --> 00:35:07.410
details that our rendering pipeline this
 

00:35:07.410 --> 00:35:09.380
details that our rendering pipeline this
was just a very high level overview we

00:35:09.380 --> 00:35:09.390
was just a very high level overview we
 

00:35:09.390 --> 00:35:11.420
was just a very high level overview we
gave a number of talks in the past that

00:35:11.420 --> 00:35:11.430
gave a number of talks in the past that
 

00:35:11.430 --> 00:35:14.120
gave a number of talks in the past that
gives explaining more details what we do

00:35:14.120 --> 00:35:14.130
gives explaining more details what we do
 

00:35:14.130 --> 00:35:16.610
gives explaining more details what we do
for instance in the UI Runner itself how

00:35:16.610 --> 00:35:16.620
for instance in the UI Runner itself how
 

00:35:16.620 --> 00:35:18.020
for instance in the UI Runner itself how
we do the batching and emerging that

00:35:18.020 --> 00:35:18.030
we do the batching and emerging that
 

00:35:18.030 --> 00:35:19.190
we do the batching and emerging that
kind of optimization so if you're

00:35:19.190 --> 00:35:19.200
kind of optimization so if you're
 

00:35:19.200 --> 00:35:20.360
kind of optimization so if you're
interested you can research at our

00:35:20.360 --> 00:35:20.370
interested you can research at our
 

00:35:20.370 --> 00:35:22.040
interested you can research at our
calculation is interesting I think we

00:35:22.040 --> 00:35:22.050
calculation is interesting I think we
 

00:35:22.050 --> 00:35:23.750
calculation is interesting I think we
had a talk where we talked about some of

00:35:23.750 --> 00:35:23.760
had a talk where we talked about some of
 

00:35:23.760 --> 00:35:25.220
had a talk where we talked about some of
those details but exactly where does

00:35:25.220 --> 00:35:25.230
those details but exactly where does
 

00:35:25.230 --> 00:35:26.840
those details but exactly where does
that fit the rendering pipeline is sort

00:35:26.840 --> 00:35:26.850
that fit the rendering pipeline is sort
 

00:35:26.850 --> 00:35:30.500
that fit the rendering pipeline is sort
of clever but yes lots more going on

00:35:30.500 --> 00:35:30.510
of clever but yes lots more going on
 

00:35:30.510 --> 00:35:31.820
of clever but yes lots more going on
there but hopefully this gives you a

00:35:31.820 --> 00:35:31.830
there but hopefully this gives you a
 

00:35:31.830 --> 00:35:34.160
there but hopefully this gives you a
general sense of how things work on

00:35:34.160 --> 00:35:34.170
general sense of how things work on
 

00:35:34.170 --> 00:35:37.490
general sense of how things work on
Android and that's cool done so we'll

00:35:37.490 --> 00:35:37.500
Android and that's cool done so we'll
 

00:35:37.500 --> 00:35:43.560
Android and that's cool done so we'll
stop it there thank you

00:35:43.560 --> 00:35:43.570
 

00:35:43.570 --> 00:35:57.590
you

00:35:57.590 --> 00:35:57.600
 

00:35:57.600 --> 00:36:02.670
[Music]

