WEBVTT
Kind: captions
Language: en

00:00:02.389 --> 00:00:07.210 align:start position:0%
 
thanks<00:00:03.350><c> T</c><00:00:03.500><c> so</c><00:00:04.540><c> I'm</c><00:00:05.540><c> Jean</c><00:00:05.810><c> Ching</c><00:00:05.990><c> and</c><00:00:06.229><c> I'm</c><00:00:06.740><c> like</c>

00:00:07.210 --> 00:00:07.220 align:start position:0%
thanks T so I'm Jean Ching and I'm like
 

00:00:07.220 --> 00:00:09.549 align:start position:0%
thanks T so I'm Jean Ching and I'm like
the<00:00:07.370><c> also</c><00:00:07.819><c> at</c><00:00:08.000><c> Google</c><00:00:08.629><c> Cambridge</c><00:00:08.809><c> office</c><00:00:09.260><c> and</c>

00:00:09.549 --> 00:00:09.559 align:start position:0%
the also at Google Cambridge office and
 

00:00:09.559 --> 00:00:11.770 align:start position:0%
the also at Google Cambridge office and
I'm<00:00:10.190><c> one</c><00:00:10.429><c> of</c><00:00:10.519><c> the</c><00:00:10.610><c> authors</c><00:00:10.940><c> of</c><00:00:10.969><c> tensor</c><00:00:11.360><c> flow</c><00:00:11.480><c> so</c>

00:00:11.770 --> 00:00:11.780 align:start position:0%
I'm one of the authors of tensor flow so
 

00:00:11.780 --> 00:00:12.999 align:start position:0%
I'm one of the authors of tensor flow so
we're<00:00:11.929><c> going</c><00:00:12.049><c> to</c><00:00:12.139><c> change</c><00:00:12.320><c> topic</c><00:00:12.710><c> and</c><00:00:12.860><c> talk</c>

00:00:12.999 --> 00:00:13.009 align:start position:0%
we're going to change topic and talk
 

00:00:13.009 --> 00:00:15.579 align:start position:0%
we're going to change topic and talk
about<00:00:13.160><c> tensor</c><00:00:13.519><c> flow</c><00:00:13.610><c> so</c><00:00:14.389><c> I</c><00:00:14.780><c> read</c><00:00:15.139><c> your</c><00:00:15.320><c> course</c>

00:00:15.579 --> 00:00:15.589 align:start position:0%
about tensor flow so I read your course
 

00:00:15.589 --> 00:00:17.200 align:start position:0%
about tensor flow so I read your course
material<00:00:16.099><c> a</c><00:00:16.129><c> little</c><00:00:16.219><c> bit</c><00:00:16.430><c> and</c><00:00:16.670><c> I</c><00:00:16.730><c> gathered</c>

00:00:17.200 --> 00:00:17.210 align:start position:0%
material a little bit and I gathered
 

00:00:17.210 --> 00:00:18.910 align:start position:0%
material a little bit and I gathered
that<00:00:17.240><c> you</c><00:00:17.480><c> all</c><00:00:17.720><c> use</c><00:00:17.900><c> tensor</c><00:00:18.200><c> flow</c><00:00:18.290><c> in</c><00:00:18.529><c> previous</c>

00:00:18.910 --> 00:00:18.920 align:start position:0%
that you all use tensor flow in previous
 

00:00:18.920 --> 00:00:20.140 align:start position:0%
that you all use tensor flow in previous
parts<00:00:19.130><c> of</c><00:00:19.220><c> the</c><00:00:19.400><c> lecture</c><00:00:19.760><c> is</c><00:00:19.910><c> there</c><00:00:20.029><c> right</c>

00:00:20.140 --> 00:00:20.150 align:start position:0%
parts of the lecture is there right
 

00:00:20.150 --> 00:00:21.480 align:start position:0%
parts of the lecture is there right
great

00:00:21.480 --> 00:00:21.490 align:start position:0%
great
 

00:00:21.490 --> 00:00:25.900 align:start position:0%
great
ok<00:00:22.490><c> so</c><00:00:23.000><c> my</c><00:00:23.269><c> focus</c><00:00:23.480><c> will</c><00:00:24.109><c> be</c><00:00:24.490><c> how</c><00:00:25.490><c> to</c><00:00:25.550><c> more</c>

00:00:25.900 --> 00:00:25.910 align:start position:0%
ok so my focus will be how to more
 

00:00:25.910 --> 00:00:27.730 align:start position:0%
ok so my focus will be how to more
efficiently<00:00:26.330><c> write</c><00:00:26.660><c> and</c><00:00:26.960><c> debug</c><00:00:27.349><c> machine</c>

00:00:27.730 --> 00:00:27.740 align:start position:0%
efficiently write and debug machine
 

00:00:27.740 --> 00:00:30.160 align:start position:0%
efficiently write and debug machine
learning<00:00:27.980><c> models</c><00:00:28.310><c> in</c><00:00:28.460><c> tensor</c><00:00:28.760><c> flow</c><00:00:29.050><c> so</c><00:00:30.050><c> the</c>

00:00:30.160 --> 00:00:30.170 align:start position:0%
learning models in tensor flow so the
 

00:00:30.170 --> 00:00:32.560 align:start position:0%
learning models in tensor flow so the
question<00:00:30.439><c> is</c><00:00:30.560><c> um</c><00:00:30.800><c> whether</c><00:00:31.609><c> you</c><00:00:31.759><c> need</c><00:00:31.939><c> to</c><00:00:32.059><c> debug</c>

00:00:32.560 --> 00:00:32.570 align:start position:0%
question is um whether you need to debug
 

00:00:32.570 --> 00:00:34.509 align:start position:0%
question is um whether you need to debug
a<00:00:32.780><c> machine</c><00:00:33.050><c> learning</c><00:00:33.140><c> model</c><00:00:33.290><c> I</c><00:00:33.800><c> think</c><00:00:34.430><c> the</c>

00:00:34.509 --> 00:00:34.519 align:start position:0%
a machine learning model I think the
 

00:00:34.519 --> 00:00:36.430 align:start position:0%
a machine learning model I think the
answer<00:00:34.760><c> is</c><00:00:34.790><c> yes</c><00:00:35.089><c> of</c><00:00:35.360><c> course</c><00:00:35.870><c> machine</c><00:00:36.170><c> learning</c>

00:00:36.430 --> 00:00:36.440 align:start position:0%
answer is yes of course machine learning
 

00:00:36.440 --> 00:00:37.450 align:start position:0%
answer is yes of course machine learning
models<00:00:36.710><c> are</c><00:00:36.799><c> very</c><00:00:36.830><c> different</c><00:00:37.190><c> from</c>

00:00:37.450 --> 00:00:37.460 align:start position:0%
models are very different from
 

00:00:37.460 --> 00:00:40.149 align:start position:0%
models are very different from
traditional<00:00:37.729><c> programs</c><00:00:38.420><c> but</c><00:00:39.110><c> they</c><00:00:40.040><c> are</c>

00:00:40.149 --> 00:00:40.159 align:start position:0%
traditional programs but they are
 

00:00:40.159 --> 00:00:41.979 align:start position:0%
traditional programs but they are
software<00:00:40.549><c> and</c><00:00:40.729><c> they're</c><00:00:40.820><c> code</c><00:00:41.089><c> and</c><00:00:41.330><c> if</c><00:00:41.780><c> they're</c>

00:00:41.979 --> 00:00:41.989 align:start position:0%
software and they're code and if they're
 

00:00:41.989 --> 00:00:43.299 align:start position:0%
software and they're code and if they're
software<00:00:42.350><c> and</c><00:00:42.500><c> code</c><00:00:42.620><c> they</c><00:00:42.769><c> will</c><00:00:42.890><c> have</c><00:00:43.040><c> bugs</c>

00:00:43.299 --> 00:00:43.309 align:start position:0%
software and code they will have bugs
 

00:00:43.309 --> 00:00:45.490 align:start position:0%
software and code they will have bugs
and<00:00:43.549><c> you</c><00:00:44.269><c> need</c><00:00:44.390><c> to</c><00:00:44.479><c> debug</c><00:00:44.780><c> your</c><00:00:44.930><c> models</c><00:00:45.290><c> from</c>

00:00:45.490 --> 00:00:45.500 align:start position:0%
and you need to debug your models from
 

00:00:45.500 --> 00:00:47.710 align:start position:0%
and you need to debug your models from
time<00:00:45.739><c> to</c><00:00:45.860><c> time</c><00:00:45.890><c> so</c><00:00:46.400><c> hopefully</c><00:00:47.000><c> after</c><00:00:47.390><c> this</c>

00:00:47.710 --> 00:00:47.720 align:start position:0%
time to time so hopefully after this
 

00:00:47.720 --> 00:00:49.119 align:start position:0%
time to time so hopefully after this
lecture<00:00:47.930><c> you</c><00:00:48.199><c> will</c><00:00:48.320><c> know</c><00:00:48.470><c> a</c><00:00:48.500><c> little</c><00:00:48.739><c> bit</c><00:00:48.860><c> more</c>

00:00:49.119 --> 00:00:49.129 align:start position:0%
lecture you will know a little bit more
 

00:00:49.129 --> 00:00:51.009 align:start position:0%
lecture you will know a little bit more
about<00:00:49.309><c> how</c><00:00:49.640><c> to</c><00:00:49.670><c> more</c><00:00:50.030><c> efficiently</c><00:00:50.420><c> debug</c><00:00:50.869><c> your</c>

00:00:51.009 --> 00:00:51.019 align:start position:0%
about how to more efficiently debug your
 

00:00:51.019 --> 00:00:54.399 align:start position:0%
about how to more efficiently debug your
machine<00:00:51.350><c> healing</c><00:00:51.589><c> models</c><00:00:52.220><c> in</c><00:00:52.400><c> tensorflow</c><00:00:53.409><c> so</c>

00:00:54.399 --> 00:00:54.409 align:start position:0%
machine healing models in tensorflow so
 

00:00:54.409 --> 00:00:57.250 align:start position:0%
machine healing models in tensorflow so
before<00:00:55.220><c> we</c><00:00:55.309><c> dive</c><00:00:55.909><c> into</c><00:00:56.119><c> debugging</c><00:00:56.629><c> I</c><00:00:56.780><c> want</c><00:00:57.170><c> to</c>

00:00:57.250 --> 00:00:57.260 align:start position:0%
before we dive into debugging I want to
 

00:00:57.260 --> 00:00:58.600 align:start position:0%
before we dive into debugging I want to
talk<00:00:57.379><c> about</c><00:00:57.470><c> how</c><00:00:57.769><c> machine</c><00:00:58.070><c> learning</c><00:00:58.309><c> models</c>

00:00:58.600 --> 00:00:58.610 align:start position:0%
talk about how machine learning models
 

00:00:58.610 --> 00:01:02.259 align:start position:0%
talk about how machine learning models
are<00:00:59.409><c> represented</c><00:01:00.409><c> in</c><00:01:01.129><c> a</c><00:01:01.369><c> computer</c><00:01:01.460><c> because</c>

00:01:02.259 --> 00:01:02.269 align:start position:0%
are represented in a computer because
 

00:01:02.269 --> 00:01:04.240 align:start position:0%
are represented in a computer because
that<00:01:02.570><c> turns</c><00:01:02.750><c> out</c><00:01:02.900><c> to</c><00:01:03.019><c> be</c><00:01:03.049><c> important</c><00:01:03.650><c> for</c><00:01:04.129><c> how</c>

00:01:04.240 --> 00:01:04.250 align:start position:0%
that turns out to be important for how
 

00:01:04.250 --> 00:01:06.700 align:start position:0%
that turns out to be important for how
you<00:01:04.309><c> write</c><00:01:04.640><c> and</c><00:01:04.850><c> debug</c><00:01:05.210><c> your</c><00:01:05.269><c> programs</c><00:01:05.710><c> so</c>

00:01:06.700 --> 00:01:06.710 align:start position:0%
you write and debug your programs so
 

00:01:06.710 --> 00:01:08.290 align:start position:0%
you write and debug your programs so
there<00:01:07.040><c> are</c><00:01:07.130><c> two</c><00:01:07.280><c> ways</c><00:01:07.430><c> in</c><00:01:07.460><c> which</c><00:01:07.610><c> a</c><00:01:07.970><c> machine</c>

00:01:08.290 --> 00:01:08.300 align:start position:0%
there are two ways in which a machine
 

00:01:08.300 --> 00:01:10.720 align:start position:0%
there are two ways in which a machine
learning<00:01:08.450><c> model</c><00:01:08.930><c> can</c><00:01:09.320><c> be</c><00:01:09.350><c> represented</c><00:01:10.010><c> so</c>

00:01:10.720 --> 00:01:10.730 align:start position:0%
learning model can be represented so
 

00:01:10.730 --> 00:01:12.510 align:start position:0%
learning model can be represented so
it's<00:01:10.880><c> either</c><00:01:11.030><c> a</c><00:01:11.120><c> data</c><00:01:11.390><c> structure</c><00:01:11.750><c> or</c><00:01:12.050><c> program</c>

00:01:12.510 --> 00:01:12.520 align:start position:0%
it's either a data structure or program
 

00:01:12.520 --> 00:01:15.730 align:start position:0%
it's either a data structure or program
so<00:01:13.520><c> if</c><00:01:13.610><c> it's</c><00:01:13.730><c> a</c><00:01:13.820><c> data</c><00:01:14.480><c> structure</c><00:01:14.780><c> then</c><00:01:15.200><c> when</c>

00:01:15.730 --> 00:01:15.740 align:start position:0%
so if it's a data structure then when
 

00:01:15.740 --> 00:01:17.650 align:start position:0%
so if it's a data structure then when
you<00:01:15.830><c> write</c><00:01:16.040><c> code</c><00:01:16.310><c> to</c><00:01:16.490><c> for</c><00:01:16.850><c> example</c><00:01:16.910><c> define</c><00:01:17.450><c> a</c>

00:01:17.650 --> 00:01:17.660 align:start position:0%
you write code to for example define a
 

00:01:17.660 --> 00:01:20.170 align:start position:0%
you write code to for example define a
layer<00:01:18.170><c> of</c><00:01:18.410><c> neural</c><00:01:18.680><c> network</c><00:01:19.010><c> you're</c><00:01:19.880><c> actually</c>

00:01:20.170 --> 00:01:20.180 align:start position:0%
layer of neural network you're actually
 

00:01:20.180 --> 00:01:22.480 align:start position:0%
layer of neural network you're actually
building<00:01:20.360><c> a</c><00:01:20.570><c> graph</c><00:01:20.780><c> and</c><00:01:21.110><c> those</c><00:01:21.920><c> lines</c><00:01:22.160><c> of</c><00:01:22.280><c> code</c>

00:01:22.480 --> 00:01:22.490 align:start position:0%
building a graph and those lines of code
 

00:01:22.490 --> 00:01:23.920 align:start position:0%
building a graph and those lines of code
when<00:01:22.820><c> they're</c><00:01:22.970><c> executed</c><00:01:23.510><c> they</c><00:01:23.750><c> don't</c>

00:01:23.920 --> 00:01:23.930 align:start position:0%
when they're executed they don't
 

00:01:23.930 --> 00:01:25.390 align:start position:0%
when they're executed they don't
actually<00:01:24.020><c> do</c><00:01:24.350><c> the</c><00:01:24.380><c> computation</c><00:01:24.710><c> they're</c><00:01:25.190><c> just</c>

00:01:25.390 --> 00:01:25.400 align:start position:0%
actually do the computation they're just
 

00:01:25.400 --> 00:01:27.040 align:start position:0%
actually do the computation they're just
building<00:01:25.580><c> the</c><00:01:25.730><c> graph</c><00:01:25.910><c> and</c><00:01:26.180><c> the</c><00:01:26.600><c> graph</c><00:01:26.810><c> means</c>

00:01:27.040 --> 00:01:27.050 align:start position:0%
building the graph and the graph means
 

00:01:27.050 --> 00:01:28.960 align:start position:0%
building the graph and the graph means
to<00:01:27.200><c> be</c><00:01:27.290><c> later</c><00:01:27.530><c> fed</c><00:01:28.010><c> into</c><00:01:28.430><c> some</c><00:01:28.730><c> kind</c><00:01:28.910><c> of</c>

00:01:28.960 --> 00:01:28.970 align:start position:0%
to be later fed into some kind of
 

00:01:28.970 --> 00:01:31.390 align:start position:0%
to be later fed into some kind of
machinery<00:01:29.360><c> kind</c><00:01:29.870><c> of</c><00:01:29.960><c> execution</c><00:01:30.500><c> engine</c><00:01:30.860><c> to</c>

00:01:31.390 --> 00:01:31.400 align:start position:0%
machinery kind of execution engine to
 

00:01:31.400 --> 00:01:33.640 align:start position:0%
machinery kind of execution engine to
actually<00:01:31.880><c> run</c><00:01:32.090><c> the</c><00:01:32.210><c> model</c><00:01:32.510><c> and</c><00:01:32.720><c> the</c><00:01:33.409><c> second</c>

00:01:33.640 --> 00:01:33.650 align:start position:0%
actually run the model and the second
 

00:01:33.650 --> 00:01:35.410 align:start position:0%
actually run the model and the second
way<00:01:33.770><c> in</c><00:01:33.920><c> which</c><00:01:34.040><c> you</c><00:01:34.190><c> can</c><00:01:34.430><c> define</c><00:01:34.640><c> a</c><00:01:35.060><c> machine</c><00:01:35.330><c> in</c>

00:01:35.410 --> 00:01:35.420 align:start position:0%
way in which you can define a machine in
 

00:01:35.420 --> 00:01:37.300 align:start position:0%
way in which you can define a machine in
a<00:01:35.510><c> model</c><00:01:35.750><c> is</c><00:01:35.840><c> to</c><00:01:36.080><c> write</c><00:01:36.409><c> it</c><00:01:36.440><c> as</c><00:01:36.710><c> a</c><00:01:36.740><c> program</c><00:01:37.100><c> so</c>

00:01:37.300 --> 00:01:37.310 align:start position:0%
a model is to write it as a program so
 

00:01:37.310 --> 00:01:38.920 align:start position:0%
a model is to write it as a program so
that's<00:01:37.460><c> more</c><00:01:37.700><c> straightforward</c><00:01:38.210><c> so</c><00:01:38.690><c> those</c>

00:01:38.920 --> 00:01:38.930 align:start position:0%
that's more straightforward so those
 

00:01:38.930 --> 00:01:41.140 align:start position:0%
that's more straightforward so those
lines<00:01:39.140><c> of</c><00:01:39.260><c> lines</c><00:01:40.010><c> of</c><00:01:40.130><c> code</c><00:01:40.370><c> will</c><00:01:40.610><c> actually</c><00:01:40.640><c> do</c>

00:01:41.140 --> 00:01:41.150 align:start position:0%
lines of lines of code will actually do
 

00:01:41.150 --> 00:01:43.630 align:start position:0%
lines of lines of code will actually do
the<00:01:41.300><c> competition</c><00:01:41.840><c> on</c><00:01:42.200><c> either</c><00:01:42.380><c> the</c><00:01:42.560><c> CPU</c><00:01:42.920><c> or</c><00:01:42.980><c> GPU</c>

00:01:43.630 --> 00:01:43.640 align:start position:0%
the competition on either the CPU or GPU
 

00:01:43.640 --> 00:01:45.399 align:start position:0%
the competition on either the CPU or GPU
depending<00:01:44.360><c> on</c><00:01:44.450><c> whether</c><00:01:44.659><c> you</c><00:01:44.750><c> have</c><00:01:44.780><c> a</c><00:01:44.900><c> GPU</c><00:01:45.229><c> or</c>

00:01:45.399 --> 00:01:45.409 align:start position:0%
depending on whether you have a GPU or
 

00:01:45.409 --> 00:01:49.000 align:start position:0%
depending on whether you have a GPU or
not<00:01:45.790><c> um</c><00:01:46.810><c> so</c><00:01:47.810><c> the</c><00:01:48.020><c> first</c><00:01:48.050><c> paradigm</c><00:01:48.590><c> is</c><00:01:48.800><c> also</c>

00:01:49.000 --> 00:01:49.010 align:start position:0%
not um so the first paradigm is also
 

00:01:49.010 --> 00:01:50.560 align:start position:0%
not um so the first paradigm is also
called<00:01:49.220><c> arm</c><00:01:49.430><c> symbolic</c><00:01:49.880><c> execution</c><00:01:50.090><c> or</c>

00:01:50.560 --> 00:01:50.570 align:start position:0%
called arm symbolic execution or
 

00:01:50.570 --> 00:01:52.780 align:start position:0%
called arm symbolic execution or
deferred<00:01:51.020><c> execution</c><00:01:51.560><c> and</c><00:01:51.740><c> the</c><00:01:52.310><c> second</c><00:01:52.550><c> one</c><00:01:52.670><c> is</c>

00:01:52.780 --> 00:01:52.790 align:start position:0%
deferred execution and the second one is
 

00:01:52.790 --> 00:01:54.730 align:start position:0%
deferred execution and the second one is
also<00:01:53.030><c> called</c><00:01:53.270><c> eager</c><00:01:53.960><c> execution</c><00:01:54.530><c> or</c>

00:01:54.730 --> 00:01:54.740 align:start position:0%
also called eager execution or
 

00:01:54.740 --> 00:01:57.580 align:start position:0%
also called eager execution or
imperative<00:01:55.220><c> execution</c><00:01:55.820><c> so</c><00:01:56.409><c> now</c><00:01:57.409><c> the</c><00:01:57.470><c> question</c>

00:01:57.580 --> 00:01:57.590 align:start position:0%
imperative execution so now the question
 

00:01:57.590 --> 00:01:59.410 align:start position:0%
imperative execution so now the question
for<00:01:57.920><c> you</c><00:01:57.979><c> is</c><00:01:58.159><c> whether</c><00:01:58.460><c> tensorflow</c><00:01:58.880><c> is</c><00:01:59.240><c> the</c>

00:01:59.410 --> 00:01:59.420 align:start position:0%
for you is whether tensorflow is the
 

00:01:59.420 --> 00:02:03.670 align:start position:0%
for you is whether tensorflow is the
first<00:01:59.659><c> paradigm</c><00:02:00.080><c> or</c><00:02:00.290><c> the</c><00:02:00.440><c> second</c><00:02:00.740><c> paradigm</c><00:02:02.680><c> so</c>

00:02:03.670 --> 00:02:03.680 align:start position:0%
first paradigm or the second paradigm so
 

00:02:03.680 --> 00:02:08.949 align:start position:0%
first paradigm or the second paradigm so
I<00:02:03.710><c> heard</c><00:02:03.890><c> someone</c><00:02:04.100><c> said</c><00:02:04.310><c> first</c><00:02:06.340><c> second</c><00:02:07.959><c> both</c>

00:02:08.949 --> 00:02:08.959 align:start position:0%
I heard someone said first second both
 

00:02:08.959 --> 00:02:10.510 align:start position:0%
I heard someone said first second both
yeah<00:02:09.289><c> so</c><00:02:09.500><c> I</c><00:02:09.530><c> think</c><00:02:09.709><c> it's</c><00:02:10.250><c> a</c><00:02:10.310><c> trick</c><00:02:10.490><c> question</c>

00:02:10.510 --> 00:02:10.520 align:start position:0%
yeah so I think it's a trick question
 

00:02:10.520 --> 00:02:13.300 align:start position:0%
yeah so I think it's a trick question
right<00:02:10.789><c> so</c><00:02:11.030><c> and</c><00:02:11.180><c> the</c><00:02:11.390><c> answer</c><00:02:11.569><c> is</c><00:02:11.690><c> both</c><00:02:12.350><c> so</c><00:02:13.040><c> if</c>

00:02:13.300 --> 00:02:13.310 align:start position:0%
right so and the answer is both so if
 

00:02:13.310 --> 00:02:14.380 align:start position:0%
right so and the answer is both so if
you<00:02:13.400><c> ask</c><00:02:13.550><c> the</c><00:02:13.610><c> question</c><00:02:13.670><c> like</c><00:02:14.030><c> half</c><00:02:14.240><c> a</c><00:02:14.360><c> year</c>

00:02:14.380 --> 00:02:14.390 align:start position:0%
you ask the question like half a year
 

00:02:14.390 --> 00:02:16.390 align:start position:0%
you ask the question like half a year
ago<00:02:14.750><c> then</c><00:02:15.020><c> the</c><00:02:15.110><c> answer</c><00:02:15.350><c> will</c><00:02:15.470><c> be</c><00:02:15.530><c> only</c><00:02:15.800><c> the</c>

00:02:16.390 --> 00:02:16.400 align:start position:0%
ago then the answer will be only the
 

00:02:16.400 --> 00:02:18.580 align:start position:0%
ago then the answer will be only the
but<00:02:16.880><c> in</c><00:02:17.450><c> the</c><00:02:17.600><c> latest</c><00:02:17.870><c> version</c><00:02:18.200><c> of</c><00:02:18.290><c> tensorflow</c>

00:02:18.580 --> 00:02:18.590 align:start position:0%
but in the latest version of tensorflow
 

00:02:18.590 --> 00:02:20.920 align:start position:0%
but in the latest version of tensorflow
we<00:02:18.980><c> support</c><00:02:19.310><c> both</c><00:02:19.580><c> modes</c><00:02:19.880><c> and</c><00:02:20.570><c> I'm</c><00:02:20.660><c> going</c><00:02:20.840><c> to</c>

00:02:20.920 --> 00:02:20.930 align:start position:0%
we support both modes and I'm going to
 

00:02:20.930 --> 00:02:21.850 align:start position:0%
we support both modes and I'm going to
give<00:02:21.050><c> some</c><00:02:21.200><c> examples</c><00:02:21.590><c> in</c><00:02:21.740><c> the</c><00:02:21.770><c> following</c>

00:02:21.850 --> 00:02:21.860 align:start position:0%
give some examples in the following
 

00:02:21.860 --> 00:02:25.240 align:start position:0%
give some examples in the following
slides<00:02:23.020><c> so</c><00:02:24.020><c> by</c><00:02:24.770><c> default</c>

00:02:25.240 --> 00:02:25.250 align:start position:0%
slides so by default
 

00:02:25.250 --> 00:02:27.100 align:start position:0%
slides so by default
tensorflow<00:02:25.550><c> is</c><00:02:25.820><c> the</c><00:02:25.970><c> first</c><00:02:26.180><c> mode</c><00:02:26.420><c> so</c><00:02:26.660><c> that's</c>

00:02:27.100 --> 00:02:27.110 align:start position:0%
tensorflow is the first mode so that's
 

00:02:27.110 --> 00:02:31.060 align:start position:0%
tensorflow is the first mode so that's
the<00:02:27.290><c> classical</c><00:02:28.270><c> traditional</c><00:02:29.860><c> kinds</c><00:02:30.860><c> of</c><00:02:30.950><c> low</c>

00:02:31.060 --> 00:02:31.070 align:start position:0%
the classical traditional kinds of low
 

00:02:31.070 --> 00:02:34.180 align:start position:0%
the classical traditional kinds of low
style<00:02:31.280><c> so</c><00:02:32.120><c> just</c><00:02:32.990><c> to</c><00:02:33.110><c> give</c><00:02:33.350><c> you</c><00:02:33.380><c> a</c><00:02:33.500><c> refresher</c><00:02:33.920><c> of</c>

00:02:34.180 --> 00:02:34.190 align:start position:0%
style so just to give you a refresher of
 

00:02:34.190 --> 00:02:36.010 align:start position:0%
style so just to give you a refresher of
how<00:02:34.310><c> to</c><00:02:34.370><c> use</c><00:02:34.700><c> tensorflow</c><00:02:35.090><c> to</c><00:02:35.360><c> define</c><00:02:35.720><c> a</c><00:02:35.750><c> simple</c>

00:02:36.010 --> 00:02:36.020 align:start position:0%
how to use tensorflow to define a simple
 

00:02:36.020 --> 00:02:38.950 align:start position:0%
how to use tensorflow to define a simple
model<00:02:36.530><c> you</c><00:02:36.710><c> import</c><00:02:37.100><c> tensorflow</c><00:02:37.460><c> stf</c><00:02:38.090><c> and</c><00:02:38.330><c> then</c>

00:02:38.950 --> 00:02:38.960 align:start position:0%
model you import tensorflow stf and then
 

00:02:38.960 --> 00:02:40.780 align:start position:0%
model you import tensorflow stf and then
you<00:02:39.050><c> define</c><00:02:39.710><c> some</c><00:02:39.890><c> constants</c><00:02:40.310><c> or</c><00:02:40.460><c> maybe</c><00:02:40.610><c> some</c>

00:02:40.780 --> 00:02:40.790 align:start position:0%
you define some constants or maybe some
 

00:02:40.790 --> 00:02:42.820 align:start position:0%
you define some constants or maybe some
variables<00:02:41.210><c> as</c><00:02:41.330><c> inputs</c><00:02:41.720><c> and</c><00:02:41.960><c> then</c><00:02:42.530><c> you</c><00:02:42.620><c> write</c><00:02:42.800><c> a</c>

00:02:42.820 --> 00:02:42.830 align:start position:0%
variables as inputs and then you write a
 

00:02:42.830 --> 00:02:44.950 align:start position:0%
variables as inputs and then you write a
line<00:02:43.130><c> to</c><00:02:43.520><c> say</c><00:02:43.670><c> like</c><00:02:43.880><c> you</c><00:02:44.030><c> want</c><00:02:44.180><c> to</c><00:02:44.240><c> multiply</c><00:02:44.390><c> x</c>

00:02:44.950 --> 00:02:44.960 align:start position:0%
line to say like you want to multiply x
 

00:02:44.960 --> 00:02:48.070 align:start position:0%
line to say like you want to multiply x
MW<00:02:45.380><c> and</c><00:02:45.740><c> you</c><00:02:46.220><c> want</c><00:02:46.460><c> to</c><00:02:46.550><c> add</c><00:02:47.150><c> the</c><00:02:47.480><c> result</c><00:02:47.780><c> of</c><00:02:47.960><c> the</c>

00:02:48.070 --> 00:02:48.080 align:start position:0%
MW and you want to add the result of the
 

00:02:48.080 --> 00:02:50.410 align:start position:0%
MW and you want to add the result of the
multiplication<00:02:48.200><c> to</c><00:02:49.010><c> two</c><00:02:49.760><c> another</c><00:02:50.000><c> thing</c><00:02:50.210><c> B</c>

00:02:50.410 --> 00:02:50.420 align:start position:0%
multiplication to two another thing B
 

00:02:50.420 --> 00:02:52.270 align:start position:0%
multiplication to two another thing B
right<00:02:51.140><c> so</c><00:02:51.230><c> you</c><00:02:51.320><c> can</c><00:02:51.440><c> think</c><00:02:51.560><c> of</c><00:02:51.710><c> this</c><00:02:51.830><c> as</c><00:02:51.890><c> a</c><00:02:52.040><c> very</c>

00:02:52.270 --> 00:02:52.280 align:start position:0%
right so you can think of this as a very
 

00:02:52.280 --> 00:02:53.950 align:start position:0%
right so you can think of this as a very
simple<00:02:52.640><c> linear</c><00:02:52.880><c> regression</c><00:02:53.030><c> model</c><00:02:53.420><c> if</c><00:02:53.930><c> you</c>

00:02:53.950 --> 00:02:53.960 align:start position:0%
simple linear regression model if you
 

00:02:53.960 --> 00:02:56.230 align:start position:0%
simple linear regression model if you
will<00:02:54.430><c> now</c><00:02:55.430><c> the</c><00:02:55.490><c> important</c><00:02:55.880><c> thing</c><00:02:55.910><c> here</c><00:02:56.210><c> is</c>

00:02:56.230 --> 00:02:56.240 align:start position:0%
will now the important thing here is
 

00:02:56.240 --> 00:02:59.560 align:start position:0%
will now the important thing here is
when<00:02:56.960><c> this</c><00:02:57.170><c> line</c><00:02:57.380><c> is</c><00:02:57.620><c> executed</c><00:02:58.210><c> it's</c><00:02:59.210><c> actually</c>

00:02:59.560 --> 00:02:59.570 align:start position:0%
when this line is executed it's actually
 

00:02:59.570 --> 00:03:02.380 align:start position:0%
when this line is executed it's actually
not<00:02:59.690><c> doing</c><00:03:00.050><c> the</c><00:03:00.880><c> computation</c><00:03:01.880><c> so</c><00:03:02.180><c> the</c>

00:03:02.380 --> 00:03:02.390 align:start position:0%
not doing the computation so the
 

00:03:02.390 --> 00:03:04.210 align:start position:0%
not doing the computation so the
multiplication<00:03:03.290><c> will</c><00:03:03.410><c> not</c><00:03:03.590><c> happen</c><00:03:03.950><c> at</c><00:03:04.130><c> this</c>

00:03:04.210 --> 00:03:04.220 align:start position:0%
multiplication will not happen at this
 

00:03:04.220 --> 00:03:06.250 align:start position:0%
multiplication will not happen at this
point<00:03:04.490><c> if</c><00:03:04.700><c> you</c><00:03:04.820><c> print</c><00:03:05.060><c> the</c><00:03:05.270><c> results</c><00:03:05.600><c> of</c><00:03:05.750><c> this</c>

00:03:06.250 --> 00:03:06.260 align:start position:0%
point if you print the results of this
 

00:03:06.260 --> 00:03:08.680 align:start position:0%
point if you print the results of this
line<00:03:06.500><c> why</c><00:03:06.740><c> there</c><00:03:07.430><c> you</c><00:03:07.520><c> will</c><00:03:07.640><c> see</c><00:03:07.700><c> it's</c><00:03:08.000><c> not</c><00:03:08.210><c> 40</c>

00:03:08.680 --> 00:03:08.690 align:start position:0%
line why there you will see it's not 40
 

00:03:08.690 --> 00:03:10.930 align:start position:0%
line why there you will see it's not 40
it's<00:03:08.870><c> not</c><00:03:09.050><c> 10</c><00:03:09.320><c> times</c><00:03:09.530><c> 4</c><00:03:09.740><c> equals</c><00:03:09.980><c> 40</c><00:03:10.250><c> instead</c>

00:03:10.930 --> 00:03:10.940 align:start position:0%
it's not 10 times 4 equals 40 instead
 

00:03:10.940 --> 00:03:13.420 align:start position:0%
it's not 10 times 4 equals 40 instead
it's<00:03:11.150><c> um</c><00:03:11.570><c> it's</c><00:03:11.750><c> like</c><00:03:11.810><c> a</c><00:03:11.930><c> abstract</c><00:03:12.890><c> symbolic</c>

00:03:13.420 --> 00:03:13.430 align:start position:0%
it's um it's like a abstract symbolic
 

00:03:13.430 --> 00:03:16.090 align:start position:0%
it's um it's like a abstract symbolic
thing<00:03:13.730><c> so</c><00:03:14.090><c> it's</c><00:03:14.600><c> called</c><00:03:14.810><c> a</c><00:03:14.870><c> tensor</c><00:03:15.230><c> and</c><00:03:15.410><c> it</c>

00:03:16.090 --> 00:03:16.100 align:start position:0%
thing so it's called a tensor and it
 

00:03:16.100 --> 00:03:17.740 align:start position:0%
thing so it's called a tensor and it
knows<00:03:16.340><c> what</c><00:03:16.580><c> kind</c><00:03:16.760><c> of</c><00:03:16.790><c> operation</c><00:03:17.330><c> it</c><00:03:17.450><c> needs</c><00:03:17.660><c> to</c>

00:03:17.740 --> 00:03:17.750 align:start position:0%
knows what kind of operation it needs to
 

00:03:17.750 --> 00:03:19.120 align:start position:0%
knows what kind of operation it needs to
do<00:03:17.840><c> when</c><00:03:18.080><c> it's</c><00:03:18.200><c> actually</c><00:03:18.320><c> executed</c><00:03:18.950><c> in</c><00:03:19.070><c> the</c>

00:03:19.120 --> 00:03:19.130 align:start position:0%
do when it's actually executed in the
 

00:03:19.130 --> 00:03:22.570 align:start position:0%
do when it's actually executed in the
future<00:03:19.430><c> so</c><00:03:19.970><c> mall</c><00:03:20.360><c> is</c><00:03:20.870><c> that</c><00:03:21.080><c> operation</c><00:03:21.800><c> it</c><00:03:22.340><c> also</c>

00:03:22.570 --> 00:03:22.580 align:start position:0%
future so mall is that operation it also
 

00:03:22.580 --> 00:03:24.490 align:start position:0%
future so mall is that operation it also
needs<00:03:22.910><c> some</c><00:03:23.120><c> information</c><00:03:23.690><c> about</c><00:03:24.110><c> it</c><00:03:24.260><c> also</c>

00:03:24.490 --> 00:03:24.500 align:start position:0%
needs some information about it also
 

00:03:24.500 --> 00:03:26.080 align:start position:0%
needs some information about it also
knows<00:03:24.740><c> information</c><00:03:25.250><c> about</c><00:03:25.460><c> like</c><00:03:25.700><c> what</c><00:03:25.910><c> its</c>

00:03:26.080 --> 00:03:26.090 align:start position:0%
knows information about like what its
 

00:03:26.090 --> 00:03:28.600 align:start position:0%
knows information about like what its
dependencies<00:03:26.660><c> are</c><00:03:26.840><c> which</c><00:03:27.350><c> are</c><00:03:27.530><c> X</c><00:03:27.830><c> and</c><00:03:28.070><c> W</c><00:03:28.250><c> in</c>

00:03:28.600 --> 00:03:28.610 align:start position:0%
dependencies are which are X and W in
 

00:03:28.610 --> 00:03:31.060 align:start position:0%
dependencies are which are X and W in
this<00:03:28.730><c> case</c><00:03:29.170><c> but</c><00:03:30.170><c> it's</c><00:03:30.320><c> not</c><00:03:30.380><c> shown</c><00:03:30.770><c> in</c><00:03:30.980><c> the</c>

00:03:31.060 --> 00:03:31.070 align:start position:0%
this case but it's not shown in the
 

00:03:31.070 --> 00:03:33.370 align:start position:0%
this case but it's not shown in the
printed<00:03:31.400><c> message</c><00:03:31.970><c> here</c><00:03:32.210><c> and</c><00:03:32.360><c> likewise</c><00:03:32.720><c> when</c>

00:03:33.370 --> 00:03:33.380 align:start position:0%
printed message here and likewise when
 

00:03:33.380 --> 00:03:35.860 align:start position:0%
printed message here and likewise when
you<00:03:33.470><c> do</c><00:03:33.590><c> a</c><00:03:33.770><c> TV</c><00:03:33.980><c> ad</c><00:03:34.760><c> when</c><00:03:35.030><c> that</c><00:03:35.180><c> line</c><00:03:35.420><c> of</c><00:03:35.540><c> code</c><00:03:35.720><c> is</c>

00:03:35.860 --> 00:03:35.870 align:start position:0%
you do a TV ad when that line of code is
 

00:03:35.870 --> 00:03:37.930 align:start position:0%
you do a TV ad when that line of code is
executed<00:03:36.020><c> the</c><00:03:36.890><c> addition</c><00:03:37.220><c> will</c><00:03:37.370><c> not</c><00:03:37.520><c> happen</c><00:03:37.700><c> is</c>

00:03:37.930 --> 00:03:37.940 align:start position:0%
executed the addition will not happen is
 

00:03:37.940 --> 00:03:38.980 align:start position:0%
executed the addition will not happen is
going<00:03:38.120><c> to</c><00:03:38.210><c> happen</c><00:03:38.480><c> later</c>

00:03:38.980 --> 00:03:38.990 align:start position:0%
going to happen later
 

00:03:38.990 --> 00:03:42.280 align:start position:0%
going to happen later
so<00:03:39.440><c> by</c><00:03:39.590><c> later</c><00:03:39.800><c> I</c><00:03:40.010><c> mean</c><00:03:40.160><c> a</c><00:03:40.340><c> case</c><00:03:40.930><c> the</c><00:03:41.930><c> point</c><00:03:42.140><c> at</c>

00:03:42.280 --> 00:03:42.290 align:start position:0%
so by later I mean a case the point at
 

00:03:42.290 --> 00:03:44.530 align:start position:0%
so by later I mean a case the point at
which<00:03:42.440><c> you</c><00:03:42.590><c> create</c><00:03:42.920><c> a</c><00:03:42.950><c> session</c><00:03:43.220><c> by</c><00:03:43.970><c> calling</c><00:03:44.300><c> TF</c>

00:03:44.530 --> 00:03:44.540 align:start position:0%
which you create a session by calling TF
 

00:03:44.540 --> 00:03:47.020 align:start position:0%
which you create a session by calling TF
dot<00:03:44.720><c> session</c><00:03:45.380><c> and</c><00:03:45.530><c> when</c><00:03:46.190><c> TF</c><00:03:46.430><c> duck</c><00:03:46.580><c> session</c><00:03:46.790><c> is</c>

00:03:47.020 --> 00:03:47.030 align:start position:0%
dot session and when TF duck session is
 

00:03:47.030 --> 00:03:49.090 align:start position:0%
dot session and when TF duck session is
created<00:03:47.180><c> it</c><00:03:47.810><c> will</c><00:03:47.840><c> basically</c><00:03:48.440><c> automatically</c>

00:03:49.090 --> 00:03:49.100 align:start position:0%
created it will basically automatically
 

00:03:49.100 --> 00:03:50.470 align:start position:0%
created it will basically automatically
pull<00:03:49.400><c> in</c><00:03:49.610><c> the</c><00:03:49.700><c> graph</c><00:03:49.910><c> you</c><00:03:49.940><c> have</c><00:03:50.270><c> already</c>

00:03:50.470 --> 00:03:50.480 align:start position:0%
pull in the graph you have already
 

00:03:50.480 --> 00:03:52.810 align:start position:0%
pull in the graph you have already
already<00:03:51.290><c> built</c><00:03:51.590><c> in</c><00:03:51.920><c> the</c><00:03:52.070><c> previous</c><00:03:52.400><c> lines</c><00:03:52.670><c> of</c>

00:03:52.810 --> 00:03:52.820 align:start position:0%
already built in the previous lines of
 

00:03:52.820 --> 00:03:55.270 align:start position:0%
already built in the previous lines of
code<00:03:53.000><c> and</c><00:03:53.300><c> then</c><00:03:53.810><c> you</c><00:03:54.350><c> tell</c><00:03:54.590><c> the</c><00:03:54.740><c> session</c><00:03:55.100><c> like</c>

00:03:55.270 --> 00:03:55.280 align:start position:0%
code and then you tell the session like
 

00:03:55.280 --> 00:03:57.520 align:start position:0%
code and then you tell the session like
which<00:03:55.850><c> tensor</c><00:03:56.300><c> which</c><00:03:56.510><c> abstract</c><00:03:56.990><c> symbol</c><00:03:57.350><c> in</c>

00:03:57.520 --> 00:03:57.530 align:start position:0%
which tensor which abstract symbol in
 

00:03:57.530 --> 00:03:59.200 align:start position:0%
which tensor which abstract symbol in
the<00:03:57.620><c> graph</c><00:03:57.800><c> you</c><00:03:57.830><c> want</c><00:03:58.040><c> to</c><00:03:58.160><c> execute</c><00:03:58.430><c> and</c><00:03:58.760><c> then</c>

00:03:59.200 --> 00:03:59.210 align:start position:0%
the graph you want to execute and then
 

00:03:59.210 --> 00:04:01.000 align:start position:0%
the graph you want to execute and then
it's<00:03:59.330><c> going</c><00:03:59.480><c> to</c><00:03:59.570><c> basically</c><00:04:00.440><c> analyze</c><00:04:00.830><c> the</c>

00:04:01.000 --> 00:04:01.010 align:start position:0%
it's going to basically analyze the
 

00:04:01.010 --> 00:04:03.040 align:start position:0%
it's going to basically analyze the
structure<00:04:01.340><c> of</c><00:04:01.460><c> the</c><00:04:01.550><c> graph</c><00:04:01.670><c> sort</c><00:04:02.480><c> out</c><00:04:02.660><c> all</c><00:04:02.690><c> the</c>

00:04:03.040 --> 00:04:03.050 align:start position:0%
structure of the graph sort out all the
 

00:04:03.050 --> 00:04:05.170 align:start position:0%
structure of the graph sort out all the
dependencies<00:04:03.410><c> and</c><00:04:03.860><c> topple</c><00:04:04.180><c> logically</c>

00:04:05.170 --> 00:04:05.180 align:start position:0%
dependencies and topple logically
 

00:04:05.180 --> 00:04:07.120 align:start position:0%
dependencies and topple logically
execute<00:04:05.660><c> all</c><00:04:05.870><c> the</c><00:04:05.900><c> nodes</c><00:04:06.530><c> in</c><00:04:06.590><c> the</c><00:04:06.680><c> graph</c><00:04:06.800><c> to</c><00:04:07.040><c> do</c>

00:04:07.120 --> 00:04:07.130 align:start position:0%
execute all the nodes in the graph to do
 

00:04:07.130 --> 00:04:08.470 align:start position:0%
execute all the nodes in the graph to do
the<00:04:07.250><c> multiplication</c><00:04:07.700><c> first</c><00:04:07.970><c> and</c><00:04:08.150><c> undo</c><00:04:08.390><c> the</c>

00:04:08.470 --> 00:04:08.480 align:start position:0%
the multiplication first and undo the
 

00:04:08.480 --> 00:04:10.080 align:start position:0%
the multiplication first and undo the
addition<00:04:08.570><c> next</c><00:04:08.930><c> and</c><00:04:09.290><c> then</c><00:04:09.710><c> it's</c><00:04:09.800><c> going</c><00:04:09.920><c> to</c>

00:04:10.080 --> 00:04:10.090 align:start position:0%
addition next and then it's going to
 

00:04:10.090 --> 00:04:12.810 align:start position:0%
addition next and then it's going to
give<00:04:11.090><c> you</c><00:04:11.180><c> the</c><00:04:11.330><c> final</c><00:04:11.480><c> result</c><00:04:11.840><c> so</c><00:04:11.870><c> which</c><00:04:12.050><c> is</c><00:04:12.170><c> 42</c>

00:04:12.810 --> 00:04:12.820 align:start position:0%
give you the final result so which is 42
 

00:04:12.820 --> 00:04:15.160 align:start position:0%
give you the final result so which is 42
so<00:04:13.820><c> you</c><00:04:13.880><c> can</c><00:04:14.030><c> think</c><00:04:14.150><c> of</c><00:04:14.300><c> TF</c><00:04:14.600><c> da</c><00:04:14.690><c> station</c><00:04:15.020><c> as</c><00:04:15.140><c> a</c>

00:04:15.160 --> 00:04:15.170 align:start position:0%
so you can think of TF da station as a
 

00:04:15.170 --> 00:04:17.950 align:start position:0%
so you can think of TF da station as a
ng<00:04:15.770><c> so</c><00:04:16.280><c> it's</c><00:04:16.370><c> going</c><00:04:16.489><c> to</c><00:04:16.609><c> run</c><00:04:16.880><c> the</c><00:04:17.060><c> model</c><00:04:17.299><c> on</c><00:04:17.600><c> CPU</c>

00:04:17.950 --> 00:04:17.960 align:start position:0%
ng so it's going to run the model on CPU
 

00:04:17.960 --> 00:04:19.690 align:start position:0%
ng so it's going to run the model on CPU
if<00:04:18.109><c> you</c><00:04:18.230><c> only</c><00:04:18.470><c> have</c><00:04:18.650><c> a</c><00:04:18.680><c> CPU</c><00:04:18.980><c> it's</c><00:04:19.220><c> going</c><00:04:19.430><c> to</c><00:04:19.520><c> run</c>

00:04:19.690 --> 00:04:19.700 align:start position:0%
if you only have a CPU it's going to run
 

00:04:19.700 --> 00:04:25.230 align:start position:0%
if you only have a CPU it's going to run
the<00:04:19.790><c> model</c><00:04:19.880><c> on</c><00:04:20.120><c> GPU</c><00:04:20.480><c> if</c><00:04:20.600><c> you</c><00:04:20.690><c> have</c><00:04:20.810><c> a</c><00:04:20.840><c> GPU</c><00:04:24.130><c> now</c>

00:04:25.230 --> 00:04:25.240 align:start position:0%
the model on GPU if you have a GPU now
 

00:04:25.240 --> 00:04:28.659 align:start position:0%
the model on GPU if you have a GPU now
obviously<00:04:26.240><c> um</c><00:04:26.540><c> this</c><00:04:27.229><c> paradigm</c><00:04:27.620><c> of</c><00:04:27.830><c> defining</c>

00:04:28.659 --> 00:04:28.669 align:start position:0%
obviously um this paradigm of defining
 

00:04:28.669 --> 00:04:29.800 align:start position:0%
obviously um this paradigm of defining
our<00:04:28.790><c> motto</c><00:04:28.940><c> is</c><00:04:29.120><c> not</c><00:04:29.270><c> a</c><00:04:29.300><c> most</c>

00:04:29.800 --> 00:04:29.810 align:start position:0%
our motto is not a most
 

00:04:29.810 --> 00:04:31.450 align:start position:0%
our motto is not a most
straightforward<00:04:30.620><c> because</c><00:04:30.770><c> those</c><00:04:31.070><c> lines</c><00:04:31.280><c> of</c>

00:04:31.450 --> 00:04:31.460 align:start position:0%
straightforward because those lines of
 

00:04:31.460 --> 00:04:32.980 align:start position:0%
straightforward because those lines of
codes<00:04:31.669><c> that</c><00:04:31.880><c> look</c><00:04:32.060><c> like</c><00:04:32.210><c> doing</c><00:04:32.540><c> competition</c>

00:04:32.980 --> 00:04:32.990 align:start position:0%
codes that look like doing competition
 

00:04:32.990 --> 00:04:35.710 align:start position:0%
codes that look like doing competition
is<00:04:33.110><c> not</c><00:04:33.290><c> doing</c><00:04:33.800><c> any</c><00:04:34.040><c> actual</c><00:04:34.610><c> competition</c><00:04:35.419><c> and</c>

00:04:35.710 --> 00:04:35.720 align:start position:0%
is not doing any actual competition and
 

00:04:35.720 --> 00:04:37.750 align:start position:0%
is not doing any actual competition and
you<00:04:36.290><c> need</c><00:04:36.440><c> to</c><00:04:36.560><c> learn</c><00:04:36.740><c> a</c><00:04:36.919><c> new</c><00:04:36.950><c> API</c><00:04:37.310><c> card</c><00:04:37.580><c> here</c>

00:04:37.750 --> 00:04:37.760 align:start position:0%
you need to learn a new API card here
 

00:04:37.760 --> 00:04:40.120 align:start position:0%
you need to learn a new API card here
that<00:04:38.030><c> session</c><00:04:38.600><c> so</c><00:04:38.930><c> why</c><00:04:39.290><c> does</c><00:04:39.470><c> tensorflow</c><00:04:39.800><c> do</c>

00:04:40.120 --> 00:04:40.130 align:start position:0%
that session so why does tensorflow do
 

00:04:40.130 --> 00:04:43.300 align:start position:0%
that session so why does tensorflow do
it<00:04:40.250><c> this</c><00:04:40.730><c> way</c><00:04:40.910><c> so</c><00:04:42.130><c> obviously</c><00:04:43.130><c> it's</c><00:04:43.220><c> because</c>

00:04:43.300 --> 00:04:43.310 align:start position:0%
it this way so obviously it's because
 

00:04:43.310 --> 00:04:46.690 align:start position:0%
it this way so obviously it's because
there<00:04:43.910><c> are</c><00:04:43.970><c> some</c><00:04:44.150><c> advantages</c><00:04:44.840><c> you</c><00:04:45.650><c> can</c><00:04:45.680><c> get</c><00:04:46.070><c> so</c>

00:04:46.690 --> 00:04:46.700 align:start position:0%
there are some advantages you can get so
 

00:04:46.700 --> 00:04:48.280 align:start position:0%
there are some advantages you can get so
the<00:04:46.820><c> first</c><00:04:47.000><c> advantage</c><00:04:47.330><c> is</c><00:04:47.480><c> because</c><00:04:47.810><c> the</c><00:04:47.990><c> model</c>

00:04:48.280 --> 00:04:48.290 align:start position:0%
the first advantage is because the model
 

00:04:48.290 --> 00:04:50.200 align:start position:0%
the first advantage is because the model
is<00:04:48.440><c> a</c><00:04:48.470><c> data</c><00:04:48.710><c> structure</c><00:04:48.980><c> it's</c><00:04:49.610><c> relatively</c><00:04:50.150><c> easy</c>

00:04:50.200 --> 00:04:50.210 align:start position:0%
is a data structure it's relatively easy
 

00:04:50.210 --> 00:04:52.870 align:start position:0%
is a data structure it's relatively easy
to<00:04:50.540><c> serialize</c><00:04:50.990><c> this</c><00:04:51.260><c> and</c><00:04:52.130><c> then</c><00:04:52.310><c> deserialize</c>

00:04:52.870 --> 00:04:52.880 align:start position:0%
to serialize this and then deserialize
 

00:04:52.880 --> 00:04:54.790 align:start position:0%
to serialize this and then deserialize
this<00:04:53.030><c> somewhere</c><00:04:53.600><c> else</c><00:04:53.750><c> you</c><00:04:54.290><c> can</c><00:04:54.350><c> train</c><00:04:54.710><c> your</c>

00:04:54.790 --> 00:04:54.800 align:start position:0%
this somewhere else you can train your
 

00:04:54.800 --> 00:04:56.620 align:start position:0%
this somewhere else you can train your
model<00:04:55.100><c> and</c><00:04:55.220><c> you</c><00:04:55.400><c> can</c><00:04:55.550><c> load</c><00:04:55.700><c> your</c><00:04:55.730><c> model</c><00:04:56.210><c> onto</c>

00:04:56.620 --> 00:04:56.630 align:start position:0%
model and you can load your model onto
 

00:04:56.630 --> 00:04:58.810 align:start position:0%
model and you can load your model onto
some<00:04:57.080><c> kind</c><00:04:57.260><c> of</c><00:04:57.320><c> other</c><00:04:57.560><c> devices</c><00:04:58.220><c> like</c><00:04:58.460><c> mobile</c>

00:04:58.810 --> 00:04:58.820 align:start position:0%
some kind of other devices like mobile
 

00:04:58.820 --> 00:05:00.790 align:start position:0%
some kind of other devices like mobile
devices<00:04:59.450><c> or</c><00:04:59.690><c> embedded</c><00:05:00.139><c> devices</c><00:05:00.530><c> like</c>

00:05:00.790 --> 00:05:00.800 align:start position:0%
devices or embedded devices like
 

00:05:00.800 --> 00:05:04.690 align:start position:0%
devices or embedded devices like
raspberry<00:05:01.220><c> pie</c><00:05:01.400><c> or</c><00:05:01.669><c> car</c><00:05:02.000><c> or</c><00:05:02.210><c> robot</c><00:05:03.400><c> and</c><00:05:04.400><c> you</c>

00:05:04.690 --> 00:05:04.700 align:start position:0%
raspberry pie or car or robot and you
 

00:05:04.700 --> 00:05:07.060 align:start position:0%
raspberry pie or car or robot and you
can<00:05:04.880><c> also</c><00:05:05.030><c> serialize</c><00:05:05.960><c> the</c><00:05:06.169><c> model</c><00:05:06.770><c> and</c><00:05:06.950><c> then</c>

00:05:07.060 --> 00:05:07.070 align:start position:0%
can also serialize the model and then
 

00:05:07.070 --> 00:05:09.040 align:start position:0%
can also serialize the model and then
load<00:05:07.310><c> the</c><00:05:07.490><c> model</c><00:05:07.760><c> on</c><00:05:07.880><c> like</c><00:05:08.120><c> a</c><00:05:08.150><c> faster</c><00:05:08.660><c> hardware</c>

00:05:09.040 --> 00:05:09.050 align:start position:0%
load the model on like a faster hardware
 

00:05:09.050 --> 00:05:10.590 align:start position:0%
load the model on like a faster hardware
like<00:05:09.200><c> Google's</c><00:05:10.010><c> TPU</c>

00:05:10.590 --> 00:05:10.600 align:start position:0%
like Google's TPU
 

00:05:10.600 --> 00:05:13.210 align:start position:0%
like Google's TPU
so<00:05:11.600><c> these</c><00:05:11.960><c> things</c><00:05:12.139><c> are</c><00:05:12.290><c> hard</c><00:05:12.530><c> hard</c><00:05:12.830><c> to</c><00:05:12.919><c> do</c><00:05:13.010><c> if</c>

00:05:13.210 --> 00:05:13.220 align:start position:0%
so these things are hard hard to do if
 

00:05:13.220 --> 00:05:14.650 align:start position:0%
so these things are hard hard to do if
your<00:05:13.370><c> model</c><00:05:13.580><c> is</c><00:05:13.790><c> a</c><00:05:13.820><c> Python</c><00:05:14.270><c> right</c><00:05:14.419><c> if</c><00:05:14.540><c> your</c>

00:05:14.650 --> 00:05:14.660 align:start position:0%
your model is a Python right if your
 

00:05:14.660 --> 00:05:16.420 align:start position:0%
your model is a Python right if your
model<00:05:14.780><c> has</c><00:05:14.930><c> a</c><00:05:15.050><c> Python</c><00:05:15.380><c> program</c><00:05:15.650><c> because</c><00:05:15.919><c> those</c>

00:05:16.420 --> 00:05:16.430 align:start position:0%
model has a Python program because those
 

00:05:16.430 --> 00:05:18.010 align:start position:0%
model has a Python program because those
devices<00:05:16.850><c> may</c><00:05:17.000><c> not</c><00:05:17.120><c> have</c><00:05:17.270><c> Python</c><00:05:17.540><c> and</c><00:05:17.780><c> running</c>

00:05:18.010 --> 00:05:18.020 align:start position:0%
devices may not have Python and running
 

00:05:18.020 --> 00:05:20.560 align:start position:0%
devices may not have Python and running
on<00:05:18.110><c> them</c><00:05:18.290><c> and</c><00:05:18.470><c> even</c><00:05:19.160><c> if</c><00:05:19.370><c> those</c><00:05:20.090><c> devices</c><00:05:20.389><c> have</c>

00:05:20.560 --> 00:05:20.570 align:start position:0%
on them and even if those devices have
 

00:05:20.570 --> 00:05:21.940 align:start position:0%
on them and even if those devices have
Python<00:05:20.870><c> running</c><00:05:21.200><c> on</c><00:05:21.440><c> them</c><00:05:21.620><c> that's</c><00:05:21.800><c> probably</c>

00:05:21.940 --> 00:05:21.950 align:start position:0%
Python running on them that's probably
 

00:05:21.950 --> 00:05:24.490 align:start position:0%
Python running on them that's probably
not<00:05:22.340><c> what</c><00:05:23.090><c> you</c><00:05:23.210><c> want</c><00:05:23.360><c> to</c><00:05:23.419><c> use</c><00:05:23.600><c> because</c><00:05:24.080><c> python</c>

00:05:24.490 --> 00:05:24.500 align:start position:0%
not what you want to use because python
 

00:05:24.500 --> 00:05:28.690 align:start position:0%
not what you want to use because python
is<00:05:24.669><c> slow</c><00:05:25.669><c> sometimes</c><00:05:26.740><c> so</c><00:05:27.740><c> I</c><00:05:27.770><c> have</c><00:05:28.070><c> those</c><00:05:28.490><c> links</c>

00:05:28.690 --> 00:05:28.700 align:start position:0%
is slow sometimes so I have those links
 

00:05:28.700 --> 00:05:31.210 align:start position:0%
is slow sometimes so I have those links
here<00:05:29.030><c> in</c><00:05:29.180><c> the</c><00:05:29.300><c> slide</c><00:05:29.510><c> so</c><00:05:29.810><c> I'm</c><00:05:29.930><c> going</c><00:05:30.110><c> to</c><00:05:30.220><c> send</c>

00:05:31.210 --> 00:05:31.220 align:start position:0%
here in the slide so I'm going to send
 

00:05:31.220 --> 00:05:32.830 align:start position:0%
here in the slide so I'm going to send
those<00:05:31.310><c> flies</c><00:05:31.550><c> to</c><00:05:31.760><c> the</c><00:05:31.880><c> course</c><00:05:32.090><c> of</c><00:05:32.240><c> own</c><00:05:32.540><c> answers</c>

00:05:32.830 --> 00:05:32.840 align:start position:0%
those flies to the course of own answers
 

00:05:32.840 --> 00:05:34.659 align:start position:0%
those flies to the course of own answers
and<00:05:33.080><c> you</c><00:05:33.380><c> can</c><00:05:33.560><c> click</c><00:05:33.890><c> on</c><00:05:34.070><c> those</c><00:05:34.220><c> links</c><00:05:34.460><c> if</c>

00:05:34.659 --> 00:05:34.669 align:start position:0%
and you can click on those links if
 

00:05:34.669 --> 00:05:36.100 align:start position:0%
and you can click on those links if
you're<00:05:34.820><c> interested</c><00:05:35.180><c> in</c><00:05:35.270><c> any</c><00:05:35.390><c> of</c><00:05:35.720><c> those</c><00:05:35.840><c> topics</c>

00:05:36.100 --> 00:05:36.110 align:start position:0%
you're interested in any of those topics
 

00:05:36.110 --> 00:05:37.930 align:start position:0%
you're interested in any of those topics
like<00:05:36.410><c> deployments</c><00:05:37.010><c> on</c><00:05:37.100><c> mobile</c><00:05:37.370><c> devices</c><00:05:37.760><c> and</c>

00:05:37.930 --> 00:05:37.940 align:start position:0%
like deployments on mobile devices and
 

00:05:37.940 --> 00:05:43.840 align:start position:0%
like deployments on mobile devices and
so<00:05:38.090><c> on</c><00:05:40.510><c> so</c><00:05:41.510><c> the</c><00:05:41.960><c> next</c><00:05:42.260><c> advantage</c><00:05:42.590><c> is</c><00:05:43.039><c> because</c>

00:05:43.840 --> 00:05:43.850 align:start position:0%
so on so the next advantage is because
 

00:05:43.850 --> 00:05:45.340 align:start position:0%
so on so the next advantage is because
your<00:05:44.180><c> model</c><00:05:44.479><c> is</c><00:05:44.539><c> a</c><00:05:44.570><c> data</c><00:05:44.780><c> structure</c><00:05:45.050><c> you</c><00:05:45.320><c> are</c>

00:05:45.340 --> 00:05:45.350 align:start position:0%
your model is a data structure you are
 

00:05:45.350 --> 00:05:46.930 align:start position:0%
your model is a data structure you are
not<00:05:45.560><c> tied</c><00:05:45.860><c> down</c><00:05:45.890><c> to</c><00:05:46.280><c> the</c><00:05:46.400><c> language</c><00:05:46.729><c> in</c><00:05:46.880><c> which</c>

00:05:46.930 --> 00:05:46.940 align:start position:0%
not tied down to the language in which
 

00:05:46.940 --> 00:05:49.240 align:start position:0%
not tied down to the language in which
the<00:05:47.300><c> model</c><00:05:47.479><c> is</c><00:05:47.630><c> defined</c><00:05:47.780><c> so</c><00:05:48.560><c> nowadays</c><00:05:48.770><c> most</c>

00:05:49.240 --> 00:05:49.250 align:start position:0%
the model is defined so nowadays most
 

00:05:49.250 --> 00:05:50.440 align:start position:0%
the model is defined so nowadays most
machine<00:05:49.580><c> learning</c><00:05:49.789><c> models</c><00:05:50.060><c> are</c><00:05:50.150><c> written</c><00:05:50.360><c> in</c>

00:05:50.440 --> 00:05:50.450 align:start position:0%
machine learning models are written in
 

00:05:50.450 --> 00:05:52.960 align:start position:0%
machine learning models are written in
Python<00:05:50.780><c> but</c><00:05:51.350><c> maybe</c><00:05:51.800><c> your</c><00:05:52.010><c> application</c><00:05:52.729><c> server</c>

00:05:52.960 --> 00:05:52.970 align:start position:0%
Python but maybe your application server
 

00:05:52.970 --> 00:05:54.850 align:start position:0%
Python but maybe your application server
may<00:05:53.330><c> be</c><00:05:53.390><c> a</c><00:05:53.450><c> web</c><00:05:53.630><c> server</c><00:05:53.870><c> is</c><00:05:54.050><c> running</c><00:05:54.080><c> Java</c><00:05:54.560><c> or</c>

00:05:54.850 --> 00:05:54.860 align:start position:0%
may be a web server is running Java or
 

00:05:54.860 --> 00:05:57.130 align:start position:0%
may be a web server is running Java or
C++<00:05:55.130><c> and</c><00:05:55.700><c> you</c><00:05:55.880><c> don't</c><00:05:56.030><c> want</c><00:05:56.150><c> to</c><00:05:56.270><c> really</c><00:05:56.930><c> write</c>

00:05:57.130 --> 00:05:57.140 align:start position:0%
C++ and you don't want to really write
 

00:05:57.140 --> 00:06:00.100 align:start position:0%
C++ and you don't want to really write
the<00:05:57.229><c> whole</c><00:05:57.350><c> stack</c><00:05:57.680><c> in</c><00:05:58.340><c> in</c><00:05:58.760><c> Python</c><00:05:59.210><c> just</c><00:05:59.930><c> to</c><00:05:59.990><c> be</c>

00:06:00.100 --> 00:06:00.110 align:start position:0%
the whole stack in in Python just to be
 

00:06:00.110 --> 00:06:01.420 align:start position:0%
the whole stack in in Python just to be
able<00:06:00.200><c> to</c><00:06:00.320><c> add</c><00:06:00.620><c> some</c><00:06:00.800><c> machine</c><00:06:01.070><c> learning</c><00:06:01.100><c> to</c>

00:06:01.420 --> 00:06:01.430 align:start position:0%
able to add some machine learning to
 

00:06:01.430 --> 00:06:04.029 align:start position:0%
able to add some machine learning to
your<00:06:01.610><c> stack</c><00:06:01.880><c> right</c><00:06:02.210><c> so</c><00:06:02.360><c> if</c><00:06:03.110><c> a</c><00:06:03.229><c> model</c><00:06:03.500><c> is</c><00:06:03.620><c> a</c><00:06:03.650><c> data</c>

00:06:04.029 --> 00:06:04.039 align:start position:0%
your stack right so if a model is a data
 

00:06:04.039 --> 00:06:05.469 align:start position:0%
your stack right so if a model is a data
structure<00:06:04.280><c> that</c><00:06:04.520><c> you</c><00:06:04.639><c> can</c><00:06:04.789><c> save</c><00:06:05.060><c> the</c><00:06:05.210><c> model</c>

00:06:05.469 --> 00:06:05.479 align:start position:0%
structure that you can save the model
 

00:06:05.479 --> 00:06:06.940 align:start position:0%
structure that you can save the model
after<00:06:05.750><c> training</c><00:06:05.960><c> and</c><00:06:06.110><c> you</c><00:06:06.260><c> can</c><00:06:06.440><c> load</c><00:06:06.620><c> it</c><00:06:06.650><c> into</c>

00:06:06.940 --> 00:06:06.950 align:start position:0%
after training and you can load it into
 

00:06:06.950 --> 00:06:09.610 align:start position:0%
after training and you can load it into
Java<00:06:07.280><c> or</c><00:06:07.520><c> C++</c><00:06:07.700><c> or</c><00:06:08.210><c> C</c><00:06:08.270><c> sharp</c><00:06:08.600><c> or</c><00:06:08.780><c> any</c><00:06:09.080><c> of</c><00:06:09.500><c> the</c>

00:06:09.610 --> 00:06:09.620 align:start position:0%
Java or C++ or C sharp or any of the
 

00:06:09.620 --> 00:06:11.860 align:start position:0%
Java or C++ or C sharp or any of the
some<00:06:10.130><c> supporting</c><00:06:10.669><c> languages</c><00:06:11.389><c> and</c><00:06:11.570><c> you</c><00:06:11.750><c> will</c>

00:06:11.860 --> 00:06:11.870 align:start position:0%
some supporting languages and you will
 

00:06:11.870 --> 00:06:14.050 align:start position:0%
some supporting languages and you will
be<00:06:11.990><c> ready</c><00:06:12.650><c> to</c><00:06:12.830><c> serve</c><00:06:13.070><c> the</c><00:06:13.280><c> train</c><00:06:13.520><c> model</c><00:06:13.880><c> from</c>

00:06:14.050 --> 00:06:14.060 align:start position:0%
be ready to serve the train model from
 

00:06:14.060 --> 00:06:15.820 align:start position:0%
be ready to serve the train model from
your<00:06:14.300><c> web</c><00:06:14.720><c> server</c><00:06:14.930><c> or</c><00:06:15.020><c> application</c><00:06:15.289><c> server</c>

00:06:15.820 --> 00:06:15.830 align:start position:0%
your web server or application server
 

00:06:15.830 --> 00:06:19.240 align:start position:0%
your web server or application server
and<00:06:17.320><c> the</c><00:06:18.320><c> other</c><00:06:18.800><c> nice</c><00:06:19.010><c> thing</c><00:06:19.039><c> about</c>

00:06:19.240 --> 00:06:19.250 align:start position:0%
and the other nice thing about
 

00:06:19.250 --> 00:06:21.670 align:start position:0%
and the other nice thing about
representing<00:06:20.240><c> data</c><00:06:20.419><c> as</c><00:06:20.630><c> a</c><00:06:20.660><c> the</c><00:06:21.320><c> model</c><00:06:21.530><c> as</c><00:06:21.650><c> a</c>

00:06:21.670 --> 00:06:21.680 align:start position:0%
representing data as a the model as a
 

00:06:21.680 --> 00:06:24.250 align:start position:0%
representing data as a the model as a
data<00:06:22.250><c> structure</c><00:06:22.520><c> is</c><00:06:22.820><c> you</c><00:06:22.970><c> can</c><00:06:23.150><c> distribute</c><00:06:23.720><c> the</c>

00:06:24.250 --> 00:06:24.260 align:start position:0%
data structure is you can distribute the
 

00:06:24.260 --> 00:06:25.870 align:start position:0%
data structure is you can distribute the
model<00:06:24.590><c> very</c><00:06:24.770><c> easily</c><00:06:24.979><c> onto</c><00:06:25.280><c> a</c><00:06:25.430><c> number</c><00:06:25.760><c> of</c>

00:06:25.870 --> 00:06:25.880 align:start position:0%
model very easily onto a number of
 

00:06:25.880 --> 00:06:27.760 align:start position:0%
model very easily onto a number of
machines<00:06:26.150><c> called</c><00:06:26.600><c> workers</c><00:06:27.020><c> and</c><00:06:27.200><c> those</c>

00:06:27.760 --> 00:06:27.770 align:start position:0%
machines called workers and those
 

00:06:27.770 --> 00:06:29.680 align:start position:0%
machines called workers and those
workers<00:06:28.070><c> will</c><00:06:28.460><c> basically</c><00:06:29.030><c> use</c><00:06:29.360><c> the</c><00:06:29.510><c> same</c>

00:06:29.680 --> 00:06:29.690 align:start position:0%
workers will basically use the same
 

00:06:29.690 --> 00:06:31.360 align:start position:0%
workers will basically use the same
graph<00:06:29.930><c> and</c><00:06:30.229><c> they're</c><00:06:30.470><c> going</c><00:06:30.590><c> to</c><00:06:30.710><c> do</c><00:06:30.860><c> the</c><00:06:31.039><c> exact</c>

00:06:31.360 --> 00:06:31.370 align:start position:0%
graph and they're going to do the exact
 

00:06:31.370 --> 00:06:34.510 align:start position:0%
graph and they're going to do the exact
the<00:06:31.639><c> same</c><00:06:32.889><c> competition</c><00:06:33.889><c> but</c><00:06:34.220><c> they're</c><00:06:34.340><c> going</c>

00:06:34.510 --> 00:06:34.520 align:start position:0%
the same competition but they're going
 

00:06:34.520 --> 00:06:35.980 align:start position:0%
the same competition but they're going
to<00:06:34.610><c> do</c><00:06:34.760><c> it</c><00:06:34.880><c> on</c><00:06:35.060><c> different</c><00:06:35.270><c> slices</c><00:06:35.780><c> of</c><00:06:35.900><c> the</c>

00:06:35.980 --> 00:06:35.990 align:start position:0%
to do it on different slices of the
 

00:06:35.990 --> 00:06:37.990 align:start position:0%
to do it on different slices of the
training<00:06:36.289><c> data</c><00:06:36.410><c> so</c><00:06:36.680><c> this</c><00:06:37.010><c> kind</c><00:06:37.190><c> of</c><00:06:37.250><c> training</c>

00:06:37.990 --> 00:06:38.000 align:start position:0%
training data so this kind of training
 

00:06:38.000 --> 00:06:40.779 align:start position:0%
training data so this kind of training
in<00:06:38.599><c> a</c><00:06:38.710><c> distributed</c><00:06:39.710><c> way</c><00:06:39.919><c> is</c><00:06:40.159><c> very</c><00:06:40.310><c> important</c>

00:06:40.779 --> 00:06:40.789 align:start position:0%
in a distributed way is very important
 

00:06:40.789 --> 00:06:43.140 align:start position:0%
in a distributed way is very important
for<00:06:41.060><c> cases</c><00:06:41.419><c> in</c><00:06:41.510><c> which</c><00:06:41.630><c> you</c><00:06:41.659><c> need</c><00:06:41.900><c> to</c><00:06:42.039><c> train</c>

00:06:43.140 --> 00:06:43.150 align:start position:0%
for cases in which you need to train
 

00:06:43.150 --> 00:06:45.900 align:start position:0%
for cases in which you need to train
a very<00:06:43.810><c> large</c><00:06:43.960><c> amount</c><00:06:44.200><c> of</c><00:06:44.530><c> data</c><00:06:44.800><c> quickly</c><00:06:45.460><c> the</c>

00:06:45.900 --> 00:06:45.910 align:start position:0%
a very large amount of data quickly the
 

00:06:45.910 --> 00:06:47.310 align:start position:0%
a very large amount of data quickly the
kind<00:06:46.090><c> of</c><00:06:46.120><c> problem</c><00:06:46.480><c> that</c><00:06:46.510><c> Google</c><00:06:47.110><c> sometimes</c>

00:06:47.310 --> 00:06:47.320 align:start position:0%
kind of problem that Google sometimes
 

00:06:47.320 --> 00:06:51.570 align:start position:0%
kind of problem that Google sometimes
has<00:06:47.620><c> to</c><00:06:47.740><c> deal</c><00:06:48.310><c> with</c><00:06:49.260><c> so</c><00:06:50.260><c> of</c><00:06:50.980><c> course</c><00:06:51.280><c> you</c><00:06:51.400><c> have</c>

00:06:51.570 --> 00:06:51.580 align:start position:0%
has to deal with so of course you have
 

00:06:51.580 --> 00:06:53.670 align:start position:0%
has to deal with so of course you have
to<00:06:51.700><c> slightly</c><00:06:51.910><c> modify</c><00:06:52.450><c> your</c><00:06:52.570><c> model</c><00:06:52.930><c> graph</c><00:06:53.140><c> so</c>

00:06:53.670 --> 00:06:53.680 align:start position:0%
to slightly modify your model graph so
 

00:06:53.680 --> 00:06:55.440 align:start position:0%
to slightly modify your model graph so
that<00:06:53.860><c> the</c><00:06:54.070><c> shared</c><00:06:54.490><c> things</c><00:06:54.820><c> like</c><00:06:55.060><c> the</c><00:06:55.210><c> weights</c>

00:06:55.440 --> 00:06:55.450 align:start position:0%
that the shared things like the weights
 

00:06:55.450 --> 00:06:57.540 align:start position:0%
that the shared things like the weights
variables<00:06:55.930><c> in</c><00:06:56.140><c> the</c><00:06:56.380><c> model</c><00:06:56.500><c> are</c><00:06:56.740><c> shared</c><00:06:57.040><c> on</c><00:06:57.490><c> a</c>

00:06:57.540 --> 00:06:57.550 align:start position:0%
variables in the model are shared on a
 

00:06:57.550 --> 00:07:00.900 align:start position:0%
variables in the model are shared on a
server<00:06:57.940><c> called</c><00:06:58.680><c> parameter</c><00:06:59.680><c> server</c><00:06:59.890><c> here</c><00:07:00.130><c> but</c>

00:07:00.900 --> 00:07:00.910 align:start position:0%
server called parameter server here but
 

00:07:00.910 --> 00:07:02.700 align:start position:0%
server called parameter server here but
that's<00:07:01.000><c> basically</c><00:07:01.410><c> distributed</c><00:07:02.410><c> training</c>

00:07:02.700 --> 00:07:02.710 align:start position:0%
that's basically distributed training
 

00:07:02.710 --> 00:07:04.380 align:start position:0%
that's basically distributed training
intensive<00:07:03.130><c> flow</c><00:07:03.280><c> in</c><00:07:03.490><c> a</c><00:07:03.610><c> nutshell</c>

00:07:04.380 --> 00:07:04.390 align:start position:0%
intensive flow in a nutshell
 

00:07:04.390 --> 00:07:05.880 align:start position:0%
intensive flow in a nutshell
so<00:07:04.900><c> again</c><00:07:05.110><c> if</c><00:07:05.230><c> you're</c><00:07:05.350><c> interested</c><00:07:05.470><c> you</c><00:07:05.740><c> can</c>

00:07:05.880 --> 00:07:05.890 align:start position:0%
so again if you're interested you can
 

00:07:05.890 --> 00:07:07.620 align:start position:0%
so again if you're interested you can
look<00:07:06.490><c> at</c><00:07:06.610><c> the</c><00:07:06.670><c> slide</c><00:07:06.880><c> and</c><00:07:07.090><c> can</c><00:07:07.210><c> click</c><00:07:07.510><c> that</c>

00:07:07.620 --> 00:07:07.630 align:start position:0%
look at the slide and can click that
 

00:07:07.630 --> 00:07:09.810 align:start position:0%
look at the slide and can click that
link<00:07:07.690><c> to</c><00:07:08.080><c> learn</c><00:07:08.290><c> more</c><00:07:08.500><c> about</c><00:07:08.820><c> distributive</c>

00:07:09.810 --> 00:07:09.820 align:start position:0%
link to learn more about distributive
 

00:07:09.820 --> 00:07:14.840 align:start position:0%
link to learn more about distributive
training<00:07:10.710><c> any</c><00:07:11.710><c> questions</c><00:07:12.010><c> so</c><00:07:12.130><c> far</c>

00:07:14.840 --> 00:07:14.850 align:start position:0%
 
 

00:07:14.850 --> 00:07:19.920 align:start position:0%
 
okay<00:07:16.890><c> okay</c><00:07:17.890><c> so</c><00:07:18.100><c> also</c><00:07:19.090><c> because</c><00:07:19.750><c> you</c><00:07:19.900><c> are</c>

00:07:19.920 --> 00:07:19.930 align:start position:0%
okay okay so also because you are
 

00:07:19.930 --> 00:07:21.210 align:start position:0%
okay okay so also because you are
representing<00:07:20.470><c> your</c><00:07:20.530><c> model</c><00:07:20.800><c> as</c><00:07:20.920><c> a</c><00:07:20.950><c> data</c>

00:07:21.210 --> 00:07:21.220 align:start position:0%
representing your model as a data
 

00:07:21.220 --> 00:07:23.670 align:start position:0%
representing your model as a data
structure<00:07:21.490><c> you're</c><00:07:22.450><c> not</c><00:07:22.630><c> limited</c><00:07:23.470><c> by</c><00:07:23.500><c> the</c>

00:07:23.670 --> 00:07:23.680 align:start position:0%
structure you're not limited by the
 

00:07:23.680 --> 00:07:25.770 align:start position:0%
structure you're not limited by the
speed<00:07:24.130><c> or</c><00:07:24.340><c> the</c><00:07:24.490><c> concurrency</c><00:07:25.060><c> of</c><00:07:25.270><c> the</c><00:07:25.450><c> language</c>

00:07:25.770 --> 00:07:25.780 align:start position:0%
speed or the concurrency of the language
 

00:07:25.780 --> 00:07:27.360 align:start position:0%
speed or the concurrency of the language
in<00:07:25.930><c> which</c><00:07:25.990><c> the</c><00:07:26.050><c> model</c><00:07:26.380><c> is</c><00:07:26.470><c> defined</c><00:07:26.890><c> we</c><00:07:27.280><c> know</c>

00:07:27.360 --> 00:07:27.370 align:start position:0%
in which the model is defined we know
 

00:07:27.370 --> 00:07:28.950 align:start position:0%
in which the model is defined we know
that<00:07:27.520><c> um</c><00:07:27.700><c> python</c><00:07:28.060><c> is</c><00:07:28.180><c> slow</c><00:07:28.390><c> sometimes</c><00:07:28.780><c> and</c>

00:07:28.950 --> 00:07:28.960 align:start position:0%
that um python is slow sometimes and
 

00:07:28.960 --> 00:07:31.560 align:start position:0%
that um python is slow sometimes and
even<00:07:29.650><c> if</c><00:07:29.950><c> you</c><00:07:30.010><c> try</c><00:07:30.250><c> to</c><00:07:30.310><c> make</c><00:07:30.850><c> python</c><00:07:31.330><c> or</c>

00:07:31.560 --> 00:07:31.570 align:start position:0%
even if you try to make python or
 

00:07:31.570 --> 00:07:33.900 align:start position:0%
even if you try to make python or
parallel<00:07:32.050><c> parallel</c><00:07:32.770><c> as</c><00:07:32.950><c> by</c><00:07:33.220><c> writing</c>

00:07:33.900 --> 00:07:33.910 align:start position:0%
parallel parallel as by writing
 

00:07:33.910 --> 00:07:35.700 align:start position:0%
parallel parallel as by writing
multi-threading<00:07:34.780><c> you</c><00:07:35.260><c> will</c><00:07:35.410><c> run</c><00:07:35.560><c> into</c><00:07:35.620><c> the</c>

00:07:35.700 --> 00:07:35.710 align:start position:0%
multi-threading you will run into the
 

00:07:35.710 --> 00:07:37.140 align:start position:0%
multi-threading you will run into the
issue<00:07:35.800><c> called</c><00:07:36.100><c> python</c><00:07:36.490><c> global</c><00:07:36.820><c> interpreter</c>

00:07:37.140 --> 00:07:37.150 align:start position:0%
issue called python global interpreter
 

00:07:37.150 --> 00:07:39.390 align:start position:0%
issue called python global interpreter
lock<00:07:37.270><c> and</c><00:07:37.870><c> that</c><00:07:38.530><c> will</c><00:07:38.680><c> slow</c><00:07:38.890><c> your</c><00:07:39.010><c> model</c><00:07:39.310><c> down</c>

00:07:39.390 --> 00:07:39.400 align:start position:0%
lock and that will slow your model down
 

00:07:39.400 --> 00:07:41.760 align:start position:0%
lock and that will slow your model down
especially<00:07:39.880><c> for</c><00:07:40.090><c> the</c><00:07:40.210><c> kind</c><00:07:40.390><c> of</c><00:07:40.770><c> competition</c>

00:07:41.760 --> 00:07:41.770 align:start position:0%
especially for the kind of competition
 

00:07:41.770 --> 00:07:43.310 align:start position:0%
especially for the kind of competition
that<00:07:41.920><c> a</c><00:07:41.950><c> deep</c><00:07:42.220><c> learning</c><00:07:42.400><c> model</c><00:07:42.850><c> needs</c><00:07:42.910><c> to</c><00:07:43.060><c> do</c>

00:07:43.310 --> 00:07:43.320 align:start position:0%
that a deep learning model needs to do
 

00:07:43.320 --> 00:07:45.390 align:start position:0%
that a deep learning model needs to do
so<00:07:44.320><c> the</c><00:07:44.440><c> way</c><00:07:44.560><c> in</c><00:07:44.710><c> which</c><00:07:44.860><c> we</c><00:07:45.070><c> solve</c><00:07:45.310><c> this</c>

00:07:45.390 --> 00:07:45.400 align:start position:0%
so the way in which we solve this
 

00:07:45.400 --> 00:07:48.260 align:start position:0%
so the way in which we solve this
problem<00:07:45.460><c> in</c><00:07:46.000><c> symbolic</c><00:07:46.510><c> execution</c><00:07:46.690><c> is</c><00:07:47.260><c> by</c>

00:07:48.260 --> 00:07:48.270 align:start position:0%
problem in symbolic execution is by
 

00:07:48.270 --> 00:07:50.340 align:start position:0%
problem in symbolic execution is by
sending<00:07:49.270><c> the</c><00:07:49.360><c> model</c><00:07:49.660><c> as</c><00:07:49.780><c> a</c><00:07:49.810><c> data</c><00:07:50.050><c> structure</c>

00:07:50.340 --> 00:07:50.350 align:start position:0%
sending the model as a data structure
 

00:07:50.350 --> 00:07:52.950 align:start position:0%
sending the model as a data structure
from<00:07:50.680><c> the</c><00:07:50.920><c> layer</c><00:07:51.100><c> of</c><00:07:51.280><c> Python</c><00:07:51.640><c> into</c><00:07:51.850><c> C++</c><00:07:52.120><c> so</c>

00:07:52.950 --> 00:07:52.960 align:start position:0%
from the layer of Python into C++ so
 

00:07:52.960 --> 00:07:55.860 align:start position:0%
from the layer of Python into C++ so
there<00:07:53.590><c> are</c><00:07:53.830><c> other</c><00:07:54.100><c> layer</c><00:07:54.640><c> of</c><00:07:54.820><c> C++</c><00:07:55.060><c> you</c><00:07:55.510><c> can</c><00:07:55.720><c> use</c>

00:07:55.860 --> 00:07:55.870 align:start position:0%
there are other layer of C++ you can use
 

00:07:55.870 --> 00:07:58.320 align:start position:0%
there are other layer of C++ you can use
to<00:07:56.500><c> concurrency</c><00:07:57.130><c> you</c><00:07:57.460><c> can</c><00:07:57.610><c> fully</c><00:07:57.790><c> parallel</c>

00:07:58.320 --> 00:07:58.330 align:start position:0%
to concurrency you can fully parallel
 

00:07:58.330 --> 00:08:00.000 align:start position:0%
to concurrency you can fully parallel
those<00:07:58.630><c> things</c><00:07:58.930><c> and</c><00:07:59.110><c> that</c><00:07:59.200><c> can</c><00:07:59.410><c> benefits</c><00:07:59.860><c> the</c>

00:08:00.000 --> 00:08:00.010 align:start position:0%
those things and that can benefits the
 

00:08:00.010 --> 00:08:03.570 align:start position:0%
those things and that can benefits the
speed<00:08:00.250><c> of</c><00:08:00.370><c> the</c><00:08:00.520><c> model</c><00:08:02.190><c> okay</c><00:08:03.190><c> so</c><00:08:03.250><c> obviously</c>

00:08:03.570 --> 00:08:03.580 align:start position:0%
speed of the model okay so obviously
 

00:08:03.580 --> 00:08:05.820 align:start position:0%
speed of the model okay so obviously
there<00:08:04.240><c> are</c><00:08:04.330><c> all</c><00:08:04.450><c> those</c><00:08:04.630><c> advantages</c><00:08:05.170><c> but</c><00:08:05.710><c> there</c>

00:08:05.820 --> 00:08:05.830 align:start position:0%
there are all those advantages but there
 

00:08:05.830 --> 00:08:08.220 align:start position:0%
there are all those advantages but there
are<00:08:05.920><c> also</c><00:08:06.070><c> those</c><00:08:06.400><c> like</c><00:08:06.700><c> um</c><00:08:07.050><c> shortcomings</c><00:08:08.050><c> of</c>

00:08:08.220 --> 00:08:08.230 align:start position:0%
are also those like um shortcomings of
 

00:08:08.230 --> 00:08:10.020 align:start position:0%
are also those like um shortcomings of
symbolic<00:08:08.740><c> execution</c><00:08:08.920><c> for</c><00:08:09.430><c> example</c><00:08:09.760><c> it's</c><00:08:09.880><c> less</c>

00:08:10.020 --> 00:08:10.030 align:start position:0%
symbolic execution for example it's less
 

00:08:10.030 --> 00:08:12.390 align:start position:0%
symbolic execution for example it's less
intuitive<00:08:10.510><c> it's</c><00:08:11.020><c> harder</c><00:08:11.320><c> to</c><00:08:11.440><c> learn</c><00:08:11.620><c> so</c><00:08:12.310><c> you</c>

00:08:12.390 --> 00:08:12.400 align:start position:0%
intuitive it's harder to learn so you
 

00:08:12.400 --> 00:08:14.490 align:start position:0%
intuitive it's harder to learn so you
need<00:08:12.760><c> to</c><00:08:12.880><c> spend</c><00:08:13.570><c> some</c><00:08:13.690><c> time</c><00:08:13.750><c> getting</c><00:08:14.080><c> used</c><00:08:14.350><c> to</c>

00:08:14.490 --> 00:08:14.500 align:start position:0%
need to spend some time getting used to
 

00:08:14.500 --> 00:08:16.950 align:start position:0%
need to spend some time getting used to
the<00:08:14.890><c> idea</c><00:08:14.920><c> of</c><00:08:15.250><c> you</c><00:08:15.460><c> you</c><00:08:16.090><c> you're</c><00:08:16.450><c> defining</c><00:08:16.780><c> our</c>

00:08:16.950 --> 00:08:16.960 align:start position:0%
the idea of you you you're defining our
 

00:08:16.960 --> 00:08:18.480 align:start position:0%
the idea of you you you're defining our
model<00:08:17.200><c> first</c><00:08:17.380><c> and</c><00:08:17.530><c> then</c><00:08:17.770><c> run</c><00:08:17.980><c> the</c><00:08:18.100><c> model</c><00:08:18.370><c> later</c>

00:08:18.480 --> 00:08:18.490 align:start position:0%
model first and then run the model later
 

00:08:18.490 --> 00:08:21.210 align:start position:0%
model first and then run the model later
with<00:08:18.790><c> TF</c><00:08:19.150><c> data</c><00:08:19.360><c> session</c><00:08:19.810><c> and</c><00:08:20.770><c> it's</c><00:08:20.920><c> harder</c><00:08:21.190><c> to</c>

00:08:21.210 --> 00:08:21.220 align:start position:0%
with TF data session and it's harder to
 

00:08:21.220 --> 00:08:23.670 align:start position:0%
with TF data session and it's harder to
debug<00:08:21.550><c> when</c><00:08:22.090><c> your</c><00:08:22.180><c> model</c><00:08:22.330><c> goes</c><00:08:22.690><c> wrong</c><00:08:22.960><c> that's</c>

00:08:23.670 --> 00:08:23.680 align:start position:0%
debug when your model goes wrong that's
 

00:08:23.680 --> 00:08:25.380 align:start position:0%
debug when your model goes wrong that's
because<00:08:23.890><c> everything</c><00:08:24.220><c> every</c><00:08:25.030><c> actual</c>

00:08:25.380 --> 00:08:25.390 align:start position:0%
because everything every actual
 

00:08:25.390 --> 00:08:27.090 align:start position:0%
because everything every actual
computation<00:08:25.960><c> happens</c><00:08:26.110><c> inside</c><00:08:26.560><c> the</c><00:08:26.710><c> TF</c><00:08:26.920><c> dot</c>

00:08:27.090 --> 00:08:27.100 align:start position:0%
computation happens inside the TF dot
 

00:08:27.100 --> 00:08:28.440 align:start position:0%
computation happens inside the TF dot
session<00:08:27.580><c> and</c><00:08:27.730><c> that's</c><00:08:27.820><c> a</c><00:08:27.970><c> single</c><00:08:28.270><c> line</c><00:08:28.420><c> of</c>

00:08:28.440 --> 00:08:28.450 align:start position:0%
session and that's a single line of
 

00:08:28.450 --> 00:08:30.960 align:start position:0%
session and that's a single line of
Python<00:08:29.440><c> code</c><00:08:29.470><c> calling</c><00:08:29.950><c> out</c><00:08:30.040><c> to</c><00:08:30.160><c> C++</c><00:08:30.400><c> so</c><00:08:30.880><c> you</c>

00:08:30.960 --> 00:08:30.970 align:start position:0%
Python code calling out to C++ so you
 

00:08:30.970 --> 00:08:33.480 align:start position:0%
Python code calling out to C++ so you
can't<00:08:31.180><c> use</c><00:08:31.450><c> usual</c><00:08:31.930><c> kinds</c><00:08:32.170><c> of</c><00:08:32.290><c> Python</c><00:08:33.100><c> debugger</c>

00:08:33.480 --> 00:08:33.490 align:start position:0%
can't use usual kinds of Python debugger
 

00:08:33.490 --> 00:08:35.460 align:start position:0%
can't use usual kinds of Python debugger
to<00:08:33.640><c> debug</c><00:08:33.910><c> that</c><00:08:34.060><c> but</c><00:08:34.930><c> I'm</c><00:08:35.020><c> going</c><00:08:35.200><c> to</c><00:08:35.230><c> show</c><00:08:35.440><c> you</c>

00:08:35.460 --> 00:08:35.470 align:start position:0%
to debug that but I'm going to show you
 

00:08:35.470 --> 00:08:36.660 align:start position:0%
to debug that but I'm going to show you
that<00:08:35.710><c> they're</c><00:08:35.860><c> actually</c><00:08:35.980><c> very</c><00:08:36.310><c> good</c><00:08:36.430><c> tools</c>

00:08:36.660 --> 00:08:36.670 align:start position:0%
that they're actually very good tools
 

00:08:36.670 --> 00:08:38.340 align:start position:0%
that they're actually very good tools
intensive<00:08:37.210><c> flow</c><00:08:37.300><c> that</c><00:08:37.450><c> you</c><00:08:37.540><c> can</c><00:08:37.690><c> use</c><00:08:37.840><c> to</c><00:08:38.050><c> debug</c>

00:08:38.340 --> 00:08:38.350 align:start position:0%
intensive flow that you can use to debug
 

00:08:38.350 --> 00:08:40.610 align:start position:0%
intensive flow that you can use to debug
things<00:08:38.500><c> that</c><00:08:38.740><c> happen</c><00:08:39.010><c> in</c><00:08:39.190><c> TF</c><00:08:39.910><c> that</c><00:08:40.060><c> session</c>

00:08:40.610 --> 00:08:40.620 align:start position:0%
things that happen in TF that session
 

00:08:40.620 --> 00:08:45.120 align:start position:0%
things that happen in TF that session
and<00:08:41.620><c> another</c><00:08:42.450><c> shortcoming</c><00:08:43.450><c> of</c><00:08:44.130><c> symbolic</c>

00:08:45.120 --> 00:08:45.130 align:start position:0%
and another shortcoming of symbolic
 

00:08:45.130 --> 00:08:46.620 align:start position:0%
and another shortcoming of symbolic
execution<00:08:45.220><c> is</c><00:08:45.640><c> that</c><00:08:45.790><c> it's</c><00:08:46.000><c> harder</c><00:08:46.300><c> to</c><00:08:46.450><c> write</c>

00:08:46.620 --> 00:08:46.630 align:start position:0%
execution is that it's harder to write
 

00:08:46.630 --> 00:08:48.510 align:start position:0%
execution is that it's harder to write
control<00:08:46.930><c> flow</c><00:08:47.140><c> structures</c><00:08:47.560><c> so</c><00:08:47.830><c> by</c><00:08:48.310><c> that</c><00:08:48.460><c> I</c>

00:08:48.510 --> 00:08:48.520 align:start position:0%
control flow structures so by that I
 

00:08:48.520 --> 00:08:50.910 align:start position:0%
control flow structures so by that I
mean<00:08:48.790><c> structures</c><00:08:49.450><c> like</c><00:08:49.570><c> looping</c><00:08:50.350><c> over</c><00:08:50.470><c> a</c>

00:08:50.910 --> 00:08:50.920 align:start position:0%
mean structures like looping over a
 

00:08:50.920 --> 00:08:53.700 align:start position:0%
mean structures like looping over a
number<00:08:51.310><c> of</c><00:08:51.490><c> things</c><00:08:51.670><c> or</c><00:08:51.940><c> if-else</c><00:08:52.600><c> branches</c><00:08:53.110><c> so</c>

00:08:53.700 --> 00:08:53.710 align:start position:0%
number of things or if-else branches so
 

00:08:53.710 --> 00:08:54.720 align:start position:0%
number of things or if-else branches so
the<00:08:53.800><c> kind</c><00:08:53.950><c> of</c><00:08:53.980><c> thing</c><00:08:54.130><c> that</c><00:08:54.280><c> we</c><00:08:54.430><c> encounter</c>

00:08:54.720 --> 00:08:54.730 align:start position:0%
the kind of thing that we encounter
 

00:08:54.730 --> 00:08:56.370 align:start position:0%
the kind of thing that we encounter
every<00:08:55.000><c> day</c><00:08:55.120><c> in</c><00:08:55.420><c> programming</c><00:08:55.810><c> languages</c><00:08:56.230><c> but</c>

00:08:56.370 --> 00:08:56.380 align:start position:0%
every day in programming languages but
 

00:08:56.380 --> 00:08:58.020 align:start position:0%
every day in programming languages but
some<00:08:56.890><c> machine</c><00:08:57.160><c> learning</c><00:08:57.400><c> models</c><00:08:57.670><c> also</c><00:08:57.880><c> need</c>

00:08:58.020 --> 00:08:58.030 align:start position:0%
some machine learning models also need
 

00:08:58.030 --> 00:08:59.460 align:start position:0%
some machine learning models also need
to<00:08:58.120><c> do</c><00:08:58.240><c> that</c><00:08:58.390><c> right</c><00:08:58.690><c> so</c><00:08:58.840><c> like</c><00:08:58.990><c> recurrent</c>

00:08:59.460 --> 00:08:59.470 align:start position:0%
to do that right so like recurrent
 

00:08:59.470 --> 00:09:01.110 align:start position:0%
to do that right so like recurrent
neural<00:08:59.620><c> networks</c><00:09:00.070><c> need</c><00:09:00.220><c> to</c><00:09:00.340><c> loop</c><00:09:00.610><c> over</c><00:09:00.760><c> things</c>

00:09:01.110 --> 00:09:01.120 align:start position:0%
neural networks need to loop over things
 

00:09:01.120 --> 00:09:04.470 align:start position:0%
neural networks need to loop over things
and<00:09:01.360><c> some</c><00:09:01.990><c> kind</c><00:09:02.140><c> of</c><00:09:02.170><c> like</c><00:09:02.410><c> fancy</c><00:09:02.650><c> um</c><00:09:03.480><c> dynamic</c>

00:09:04.470 --> 00:09:04.480 align:start position:0%
and some kind of like fancy um dynamic
 

00:09:04.480 --> 00:09:06.330 align:start position:0%
and some kind of like fancy um dynamic
models<00:09:04.810><c> need</c><00:09:04.960><c> to</c><00:09:05.020><c> do</c><00:09:05.260><c> if</c><00:09:05.530><c> else</c><00:09:05.770><c> branches</c><00:09:06.220><c> and</c>

00:09:06.330 --> 00:09:06.340 align:start position:0%
models need to do if else branches and
 

00:09:06.340 --> 00:09:08.190 align:start position:0%
models need to do if else branches and
so<00:09:06.460><c> on</c><00:09:06.580><c> I'm</c><00:09:06.730><c> also</c><00:09:06.940><c> going</c><00:09:07.120><c> to</c><00:09:07.180><c> show</c><00:09:07.450><c> some</c><00:09:07.600><c> slides</c>

00:09:08.190 --> 00:09:08.200 align:start position:0%
so on I'm also going to show some slides
 

00:09:08.200 --> 00:09:11.190 align:start position:0%
so on I'm also going to show some slides
to<00:09:08.470><c> show</c><00:09:08.710><c> those</c><00:09:08.860><c> concrete</c><00:09:09.100><c> examples</c><00:09:10.020><c> so</c><00:09:11.020><c> it's</c>

00:09:11.190 --> 00:09:11.200 align:start position:0%
to show those concrete examples so it's
 

00:09:11.200 --> 00:09:13.290 align:start position:0%
to show those concrete examples so it's
very<00:09:11.410><c> hard</c><00:09:11.650><c> to</c><00:09:11.710><c> it's</c><00:09:12.490><c> sometimes</c><00:09:12.790><c> very</c><00:09:13.000><c> hard</c><00:09:13.060><c> to</c>

00:09:13.290 --> 00:09:13.300 align:start position:0%
very hard to it's sometimes very hard to
 

00:09:13.300 --> 00:09:14.460 align:start position:0%
very hard to it's sometimes very hard to
write<00:09:13.510><c> that</c><00:09:13.870><c> kind</c><00:09:14.020><c> of</c><00:09:14.050><c> control</c><00:09:14.320><c> flow</c>

00:09:14.460 --> 00:09:14.470 align:start position:0%
write that kind of control flow
 

00:09:14.470 --> 00:09:16.680 align:start position:0%
write that kind of control flow
structures<00:09:14.890><c> in</c><00:09:15.100><c> symbolic</c><00:09:16.000><c> execution</c><00:09:16.090><c> but</c>

00:09:16.680 --> 00:09:16.690 align:start position:0%
structures in symbolic execution but
 

00:09:16.690 --> 00:09:20.600 align:start position:0%
structures in symbolic execution but
it's<00:09:16.810><c> much</c><00:09:17.020><c> easier</c><00:09:17.350><c> in</c><00:09:17.560><c> ego</c><00:09:18.190><c> execution</c><00:09:19.350><c> so</c>

00:09:20.600 --> 00:09:20.610 align:start position:0%
it's much easier in ego execution so
 

00:09:20.610 --> 00:09:23.520 align:start position:0%
it's much easier in ego execution so
with<00:09:21.610><c> eager</c><00:09:21.880><c> execution</c><00:09:22.300><c> your</c><00:09:22.570><c> program</c><00:09:23.320><c> can</c><00:09:23.500><c> be</c>

00:09:23.520 --> 00:09:23.530 align:start position:0%
with eager execution your program can be
 

00:09:23.530 --> 00:09:25.140 align:start position:0%
with eager execution your program can be
more<00:09:23.770><c> pythonic</c><00:09:24.280><c> and</c><00:09:24.430><c> it's</c><00:09:24.610><c> easier</c><00:09:24.880><c> to</c><00:09:24.970><c> learn</c>

00:09:25.140 --> 00:09:25.150 align:start position:0%
more pythonic and it's easier to learn
 

00:09:25.150 --> 00:09:27.090 align:start position:0%
more pythonic and it's easier to learn
and<00:09:25.420><c> easier</c><00:09:25.690><c> to</c><00:09:25.720><c> read</c><00:09:25.960><c> so</c><00:09:26.230><c> here's</c><00:09:26.920><c> an</c><00:09:27.040><c> example</c>

00:09:27.090 --> 00:09:27.100 align:start position:0%
and easier to read so here's an example
 

00:09:27.100 --> 00:09:29.280 align:start position:0%
and easier to read so here's an example
so<00:09:27.550><c> on</c><00:09:28.180><c> the</c><00:09:28.360><c> Left</c><00:09:28.540><c> you're</c><00:09:28.750><c> seeing</c><00:09:29.050><c> the</c><00:09:29.140><c> same</c>

00:09:29.280 --> 00:09:29.290 align:start position:0%
so on the Left you're seeing the same
 

00:09:29.290 --> 00:09:31.410 align:start position:0%
so on the Left you're seeing the same
code<00:09:29.530><c> as</c><00:09:29.680><c> before</c><00:09:29.710><c> so</c><00:09:30.280><c> we</c><00:09:30.790><c> are</c><00:09:30.910><c> using</c><00:09:31.090><c> the</c>

00:09:31.410 --> 00:09:31.420 align:start position:0%
code as before so we are using the
 

00:09:31.420 --> 00:09:33.510 align:start position:0%
code as before so we are using the
default<00:09:31.720><c> symbolic</c><00:09:32.380><c> execution</c><00:09:32.530><c> of</c><00:09:33.010><c> tensorflow</c>

00:09:33.510 --> 00:09:33.520 align:start position:0%
default symbolic execution of tensorflow
 

00:09:33.520 --> 00:09:36.750 align:start position:0%
default symbolic execution of tensorflow
no<00:09:34.210><c> now</c><00:09:34.570><c> how</c><00:09:34.780><c> do</c><00:09:34.840><c> we</c><00:09:34.930><c> switch</c><00:09:35.590><c> to</c><00:09:35.950><c> the</c><00:09:36.100><c> new</c><00:09:36.340><c> eager</c>

00:09:36.750 --> 00:09:36.760 align:start position:0%
no now how do we switch to the new eager
 

00:09:36.760 --> 00:09:38.520 align:start position:0%
no now how do we switch to the new eager
execution<00:09:37.210><c> so</c><00:09:37.450><c> you</c><00:09:37.510><c> just</c><00:09:37.690><c> add</c><00:09:37.870><c> two</c><00:09:38.230><c> lines</c><00:09:38.350><c> of</c>

00:09:38.520 --> 00:09:38.530 align:start position:0%
execution so you just add two lines of
 

00:09:38.530 --> 00:09:40.950 align:start position:0%
execution so you just add two lines of
code<00:09:38.710><c> you</c><00:09:38.920><c> imports</c><00:09:39.880><c> the</c><00:09:40.060><c> eager</c><00:09:40.330><c> module</c><00:09:40.810><c> and</c>

00:09:40.950 --> 00:09:40.960 align:start position:0%
code you imports the eager module and
 

00:09:40.960 --> 00:09:42.720 align:start position:0%
code you imports the eager module and
then<00:09:41.080><c> you</c><00:09:41.200><c> call</c><00:09:41.440><c> a</c><00:09:41.470><c> method</c><00:09:41.860><c> called</c><00:09:42.070><c> enable</c>

00:09:42.720 --> 00:09:42.730 align:start position:0%
then you call a method called enable
 

00:09:42.730 --> 00:09:44.430 align:start position:0%
then you call a method called enable
eager<00:09:42.940><c> execution</c><00:09:43.420><c> and</c><00:09:43.540><c> you</c><00:09:44.050><c> don't</c><00:09:44.230><c> have</c><00:09:44.320><c> to</c>

00:09:44.430 --> 00:09:44.440 align:start position:0%
eager execution and you don't have to
 

00:09:44.440 --> 00:09:45.990 align:start position:0%
eager execution and you don't have to
make<00:09:44.620><c> any</c><00:09:44.800><c> other</c><00:09:44.920><c> change</c><00:09:45.190><c> to</c><00:09:45.370><c> your</c><00:09:45.430><c> program</c><00:09:45.850><c> in</c>

00:09:45.990 --> 00:09:46.000 align:start position:0%
make any other change to your program in
 

00:09:46.000 --> 00:09:48.690 align:start position:0%
make any other change to your program in
this<00:09:46.090><c> case</c><00:09:46.270><c> but</c><00:09:47.260><c> you</c><00:09:47.500><c> will</c><00:09:47.770><c> because</c><00:09:48.490><c> of</c><00:09:48.610><c> these</c>

00:09:48.690 --> 00:09:48.700 align:start position:0%
this case but you will because of these
 

00:09:48.700 --> 00:09:50.730 align:start position:0%
this case but you will because of these
few<00:09:48.940><c> lines</c><00:09:49.060><c> you</c><00:09:49.330><c> changed</c><00:09:49.690><c> the</c><00:09:49.990><c> semantics</c><00:09:50.590><c> of</c>

00:09:50.730 --> 00:09:50.740 align:start position:0%
few lines you changed the semantics of
 

00:09:50.740 --> 00:09:53.220 align:start position:0%
few lines you changed the semantics of
these<00:09:50.920><c> two</c><00:09:51.190><c> lines</c><00:09:51.430><c> multiply</c><00:09:52.000><c> and</c><00:09:52.240><c> add</c><00:09:52.420><c> so</c><00:09:53.080><c> now</c>

00:09:53.220 --> 00:09:53.230 align:start position:0%
these two lines multiply and add so now
 

00:09:53.230 --> 00:09:55.320 align:start position:0%
these two lines multiply and add so now
instead<00:09:53.440><c> of</c><00:09:53.650><c> building</c><00:09:54.100><c> a</c><00:09:54.160><c> graph</c><00:09:54.370><c> this</c><00:09:55.000><c> line</c><00:09:55.060><c> is</c>

00:09:55.320 --> 00:09:55.330 align:start position:0%
instead of building a graph this line is
 

00:09:55.330 --> 00:09:57.210 align:start position:0%
instead of building a graph this line is
actually<00:09:55.510><c> doing</c><00:09:55.930><c> the</c><00:09:56.080><c> multiplication</c><00:09:56.440><c> of</c><00:09:56.830><c> ten</c>

00:09:57.210 --> 00:09:57.220 align:start position:0%
actually doing the multiplication of ten
 

00:09:57.220 --> 00:09:58.800 align:start position:0%
actually doing the multiplication of ten
four<00:09:57.520><c> and</c><00:09:57.730><c> if</c><00:09:57.790><c> you</c><00:09:57.910><c> print</c><00:09:58.150><c> while</c><00:09:58.390><c> you</c><00:09:58.480><c> will</c><00:09:58.630><c> see</c>

00:09:58.800 --> 00:09:58.810 align:start position:0%
four and if you print while you will see
 

00:09:58.810 --> 00:10:01.350 align:start position:0%
four and if you print while you will see
the<00:09:58.930><c> value</c><00:09:59.020><c> and</c><00:09:59.380><c> if</c><00:10:00.340><c> you</c><00:10:00.490><c> print</c><00:10:00.850><c> a</c><00:10:00.910><c> value</c><00:10:01.090><c> of</c><00:10:01.180><c> Z</c>

00:10:01.350 --> 00:10:01.360 align:start position:0%
the value and if you print a value of Z
 

00:10:01.360 --> 00:10:02.520 align:start position:0%
the value and if you print a value of Z
you<00:10:01.510><c> will</c><00:10:01.630><c> also</c><00:10:01.810><c> see</c><00:10:02.050><c> the</c><00:10:02.140><c> value</c><00:10:02.350><c> so</c>

00:10:02.520 --> 00:10:02.530 align:start position:0%
you will also see the value so
 

00:10:02.530 --> 00:10:05.070 align:start position:0%
you will also see the value so
everything<00:10:03.040><c> is</c><00:10:03.250><c> like</c><00:10:03.880><c> a</c><00:10:04.090><c> flatter</c><00:10:04.420><c> and</c><00:10:04.720><c> easier</c>

00:10:05.070 --> 00:10:05.080 align:start position:0%
everything is like a flatter and easier
 

00:10:05.080 --> 00:10:09.780 align:start position:0%
everything is like a flatter and easier
to<00:10:05.110><c> understand</c><00:10:07.530><c> now</c><00:10:08.530><c> as</c><00:10:09.250><c> I</c><00:10:09.430><c> mentioned</c><00:10:09.760><c> before</c>

00:10:09.780 --> 00:10:09.790 align:start position:0%
to understand now as I mentioned before
 

00:10:09.790 --> 00:10:12.060 align:start position:0%
to understand now as I mentioned before
ego<00:10:10.540><c> mode</c><00:10:10.690><c> also</c><00:10:10.930><c> makes</c><00:10:11.410><c> it</c><00:10:11.530><c> easier</c><00:10:11.770><c> to</c><00:10:11.800><c> write</c>

00:10:12.060 --> 00:10:12.070 align:start position:0%
ego mode also makes it easier to write
 

00:10:12.070 --> 00:10:15.900 align:start position:0%
ego mode also makes it easier to write
control<00:10:12.460><c> flow</c><00:10:12.700><c> dependency</c><00:10:13.570><c> and</c><00:10:14.910><c> dynamic</c>

00:10:15.900 --> 00:10:15.910 align:start position:0%
control flow dependency and dynamic
 

00:10:15.910 --> 00:10:18.960 align:start position:0%
control flow dependency and dynamic
models<00:10:16.270><c> so</c><00:10:17.130><c> here's</c><00:10:18.130><c> an</c><00:10:18.250><c> example</c><00:10:18.310><c> so</c><00:10:18.700><c> suppose</c>

00:10:18.960 --> 00:10:18.970 align:start position:0%
models so here's an example so suppose
 

00:10:18.970 --> 00:10:20.550 align:start position:0%
models so here's an example so suppose
you<00:10:19.090><c> want</c><00:10:19.120><c> to</c><00:10:19.360><c> write</c><00:10:19.600><c> a</c><00:10:19.870><c> recurrent</c><00:10:20.380><c> neural</c>

00:10:20.550 --> 00:10:20.560 align:start position:0%
you want to write a recurrent neural
 

00:10:20.560 --> 00:10:21.960 align:start position:0%
you want to write a recurrent neural
network<00:10:20.950><c> which</c><00:10:21.130><c> I</c><00:10:21.220><c> think</c><00:10:21.400><c> you</c><00:10:21.460><c> have</c><00:10:21.580><c> seen</c><00:10:21.790><c> in</c>

00:10:21.960 --> 00:10:21.970 align:start position:0%
network which I think you have seen in
 

00:10:21.970 --> 00:10:23.730 align:start position:0%
network which I think you have seen in
previous<00:10:22.300><c> parts</c><00:10:22.510><c> of</c><00:10:22.540><c> the</c><00:10:22.660><c> lecture</c><00:10:22.840><c> before</c><00:10:23.200><c> in</c>

00:10:23.730 --> 00:10:23.740 align:start position:0%
previous parts of the lecture before in
 

00:10:23.740 --> 00:10:25.860 align:start position:0%
previous parts of the lecture before in
in<00:10:24.610><c> the</c><00:10:24.790><c> default</c><00:10:25.120><c> mode</c><00:10:25.270><c> of</c><00:10:25.330><c> tensorflow</c>

00:10:25.860 --> 00:10:25.870 align:start position:0%
in the default mode of tensorflow
 

00:10:25.870 --> 00:10:27.630 align:start position:0%
in the default mode of tensorflow
here<00:10:26.260><c> is</c><00:10:26.380><c> about</c><00:10:26.950><c> the</c><00:10:27.070><c> amount</c><00:10:27.190><c> of</c><00:10:27.310><c> code</c><00:10:27.520><c> you</c>

00:10:27.630 --> 00:10:27.640 align:start position:0%
here is about the amount of code you
 

00:10:27.640 --> 00:10:30.150 align:start position:0%
here is about the amount of code you
need<00:10:27.730><c> to</c><00:10:27.790><c> write</c><00:10:27.850><c> so</c><00:10:28.780><c> you</c><00:10:29.440><c> cannot</c><00:10:29.680><c> use</c><00:10:29.740><c> the</c>

00:10:30.150 --> 00:10:30.160 align:start position:0%
need to write so you cannot use the
 

00:10:30.160 --> 00:10:32.970 align:start position:0%
need to write so you cannot use the
default<00:10:30.580><c> native</c><00:10:31.360><c> for</c><00:10:32.110><c> loop</c><00:10:32.290><c> or</c><00:10:32.500><c> while</c><00:10:32.710><c> loop</c><00:10:32.860><c> in</c>

00:10:32.970 --> 00:10:32.980 align:start position:0%
default native for loop or while loop in
 

00:10:32.980 --> 00:10:34.830 align:start position:0%
default native for loop or while loop in
Python<00:10:33.370><c> you</c><00:10:33.550><c> have</c><00:10:34.000><c> to</c><00:10:34.120><c> use</c><00:10:34.300><c> the</c><00:10:34.510><c> tensorflow</c>

00:10:34.830 --> 00:10:34.840 align:start position:0%
Python you have to use the tensorflow
 

00:10:34.840 --> 00:10:37.890 align:start position:0%
Python you have to use the tensorflow
special<00:10:35.770><c> while</c><00:10:35.920><c> loop</c><00:10:36.240><c> and</c><00:10:37.240><c> in</c><00:10:37.540><c> order</c><00:10:37.690><c> to</c><00:10:37.780><c> use</c>

00:10:37.890 --> 00:10:37.900 align:start position:0%
special while loop and in order to use
 

00:10:37.900 --> 00:10:39.990 align:start position:0%
special while loop and in order to use
it<00:10:37.930><c> you</c><00:10:38.140><c> have</c><00:10:38.200><c> to</c><00:10:38.380><c> define</c><00:10:38.590><c> two</c><00:10:38.740><c> functions</c><00:10:39.000><c> one</c>

00:10:39.990 --> 00:10:40.000 align:start position:0%
it you have to define two functions one
 

00:10:40.000 --> 00:10:41.430 align:start position:0%
it you have to define two functions one
for<00:10:40.330><c> the</c><00:10:40.450><c> termination</c><00:10:40.750><c> condition</c><00:10:41.230><c> of</c><00:10:41.350><c> the</c>

00:10:41.430 --> 00:10:41.440 align:start position:0%
for the termination condition of the
 

00:10:41.440 --> 00:10:43.770 align:start position:0%
for the termination condition of the
loop<00:10:41.560><c> and</c><00:10:41.860><c> one</c><00:10:42.130><c> for</c><00:10:42.460><c> the</c><00:10:42.490><c> body</c><00:10:43.390><c> of</c><00:10:43.510><c> the</c><00:10:43.600><c> loop</c>

00:10:43.770 --> 00:10:43.780 align:start position:0%
loop and one for the body of the loop
 

00:10:43.780 --> 00:10:45.840 align:start position:0%
loop and one for the body of the loop
and<00:10:44.200><c> then</c><00:10:44.530><c> you</c><00:10:44.590><c> need</c><00:10:44.770><c> to</c><00:10:44.860><c> feed</c><00:10:45.220><c> those</c><00:10:45.460><c> two</c>

00:10:45.840 --> 00:10:45.850 align:start position:0%
and then you need to feed those two
 

00:10:45.850 --> 00:10:48.000 align:start position:0%
and then you need to feed those two
functions<00:10:46.390><c> into</c><00:10:46.900><c> in</c><00:10:47.050><c> the</c><00:10:47.140><c> while</c><00:10:47.500><c> loop</c><00:10:47.530><c> and</c><00:10:47.800><c> get</c>

00:10:48.000 --> 00:10:48.010 align:start position:0%
functions into in the while loop and get
 

00:10:48.010 --> 00:10:49.890 align:start position:0%
functions into in the while loop and get
tensors<00:10:48.370><c> back</c><00:10:48.550><c> and</c><00:10:48.790><c> remember</c><00:10:49.270><c> those</c><00:10:49.510><c> tensors</c>

00:10:49.890 --> 00:10:49.900 align:start position:0%
tensors back and remember those tensors
 

00:10:49.900 --> 00:10:52.140 align:start position:0%
tensors back and remember those tensors
are<00:10:49.990><c> not</c><00:10:50.200><c> actual</c><00:10:50.710><c> values</c><00:10:51.160><c> you</c><00:10:51.340><c> have</c><00:10:51.460><c> to</c><00:10:51.640><c> send</c>

00:10:52.140 --> 00:10:52.150 align:start position:0%
are not actual values you have to send
 

00:10:52.150 --> 00:10:53.820 align:start position:0%
are not actual values you have to send
those<00:10:52.210><c> tensors</c><00:10:52.690><c> into</c><00:10:53.290><c> your</c><00:10:53.410><c> session</c><00:10:53.560><c> don't</c>

00:10:53.820 --> 00:10:53.830 align:start position:0%
those tensors into your session don't
 

00:10:53.830 --> 00:10:54.420 align:start position:0%
those tensors into your session don't
run<00:10:53.980><c> together</c>

00:10:54.420 --> 00:10:54.430 align:start position:0%
run together
 

00:10:54.430 --> 00:10:55.860 align:start position:0%
run together
actual<00:10:54.670><c> data</c><00:10:54.820><c> so</c><00:10:55.000><c> there</c><00:10:55.150><c> are</c><00:10:55.240><c> a</c><00:10:55.300><c> few</c><00:10:55.420><c> hoops</c><00:10:55.660><c> to</c>

00:10:55.860 --> 00:10:55.870 align:start position:0%
actual data so there are a few hoops to
 

00:10:55.870 --> 00:10:57.330 align:start position:0%
actual data so there are a few hoops to
jump<00:10:55.900><c> through</c><00:10:56.320><c> you</c><00:10:56.440><c> know</c><00:10:56.560><c> if</c><00:10:56.740><c> you</c><00:10:57.100><c> want</c><00:10:57.250><c> to</c>

00:10:57.330 --> 00:10:57.340 align:start position:0%
jump through you know if you want to
 

00:10:57.340 --> 00:10:59.910 align:start position:0%
jump through you know if you want to
write<00:10:57.550><c> an</c><00:10:57.700><c> RNN</c><00:10:58.450><c> from</c><00:10:58.750><c> scratch</c><00:10:59.050><c> in</c><00:10:59.380><c> the</c><00:10:59.590><c> default</c>

00:10:59.910 --> 00:10:59.920 align:start position:0%
write an RNN from scratch in the default
 

00:10:59.920 --> 00:11:00.660 align:start position:0%
write an RNN from scratch in the default
mode<00:11:00.100><c> of</c><00:11:00.130><c> tensorflow</c>

00:11:00.660 --> 00:11:00.670 align:start position:0%
mode of tensorflow
 

00:11:00.670 --> 00:11:02.880 align:start position:0%
mode of tensorflow
but<00:11:01.390><c> with</c><00:11:01.570><c> execution</c><00:11:02.260><c> the</c><00:11:02.470><c> things</c><00:11:02.620><c> becomes</c>

00:11:02.880 --> 00:11:02.890 align:start position:0%
but with execution the things becomes
 

00:11:02.890 --> 00:11:05.130 align:start position:0%
but with execution the things becomes
much<00:11:03.100><c> simpler</c><00:11:03.450><c> so</c><00:11:04.450><c> you</c><00:11:04.540><c> can</c><00:11:04.690><c> use</c><00:11:04.810><c> the</c><00:11:04.990><c> native</c>

00:11:05.130 --> 00:11:05.140 align:start position:0%
much simpler so you can use the native
 

00:11:05.140 --> 00:11:06.530 align:start position:0%
much simpler so you can use the native
for<00:11:05.590><c> loop</c><00:11:05.740><c> in</c><00:11:05.920><c> python</c>

00:11:06.530 --> 00:11:06.540 align:start position:0%
for loop in python
 

00:11:06.540 --> 00:11:09.470 align:start position:0%
for loop in python
to<00:11:06.810><c> loop</c><00:11:06.990><c> over</c><00:11:07.200><c> time</c><00:11:08.130><c> steps</c><00:11:08.400><c> in</c><00:11:08.610><c> the</c><00:11:08.700><c> input</c><00:11:09.030><c> and</c>

00:11:09.470 --> 00:11:09.480 align:start position:0%
to loop over time steps in the input and
 

00:11:09.480 --> 00:11:10.970 align:start position:0%
to loop over time steps in the input and
you<00:11:09.540><c> don't</c><00:11:09.930><c> have</c><00:11:09.990><c> to</c><00:11:10.140><c> worry</c><00:11:10.530><c> about</c><00:11:10.620><c> those</c>

00:11:10.970 --> 00:11:10.980 align:start position:0%
you don't have to worry about those
 

00:11:10.980 --> 00:11:13.610 align:start position:0%
you don't have to worry about those
symbolic<00:11:11.520><c> tensors</c><00:11:12.000><c> or</c><00:11:12.210><c> sessions</c><00:11:12.750><c> on</c><00:11:12.870><c> run</c><00:11:13.050><c> the</c>

00:11:13.610 --> 00:11:13.620 align:start position:0%
symbolic tensors or sessions on run the
 

00:11:13.620 --> 00:11:16.520 align:start position:0%
symbolic tensors or sessions on run the
the<00:11:13.980><c> the</c><00:11:14.970><c> variables</c><00:11:15.360><c> you</c><00:11:15.420><c> get</c><00:11:15.630><c> from</c><00:11:15.930><c> this</c><00:11:16.140><c> for</c>

00:11:16.520 --> 00:11:16.530 align:start position:0%
the the variables you get from this for
 

00:11:16.530 --> 00:11:22.090 align:start position:0%
the the variables you get from this for
loop<00:11:16.650><c> is</c><00:11:16.860><c> the</c><00:11:16.920><c> result</c><00:11:17.400><c> of</c><00:11:17.610><c> the</c><00:11:17.790><c> commutation</c><00:11:20.570><c> so</c>

00:11:22.090 --> 00:11:22.100 align:start position:0%
loop is the result of the commutation so
 

00:11:22.100 --> 00:11:24.410 align:start position:0%
loop is the result of the commutation so
eager<00:11:23.100><c> mode</c><00:11:23.250><c> makes</c><00:11:23.490><c> it</c><00:11:23.610><c> much</c><00:11:23.730><c> easier</c><00:11:23.940><c> to</c><00:11:24.210><c> write</c>

00:11:24.410 --> 00:11:24.420 align:start position:0%
eager mode makes it much easier to write
 

00:11:24.420 --> 00:11:26.330 align:start position:0%
eager mode makes it much easier to write
the<00:11:24.540><c> so-called</c><00:11:24.870><c> dynamic</c><00:11:25.170><c> models</c><00:11:25.710><c> so</c><00:11:25.980><c> what</c><00:11:26.250><c> do</c>

00:11:26.330 --> 00:11:26.340 align:start position:0%
the so-called dynamic models so what do
 

00:11:26.340 --> 00:11:28.580 align:start position:0%
the so-called dynamic models so what do
we<00:11:26.400><c> mean</c><00:11:26.520><c> by</c><00:11:26.580><c> static</c><00:11:27.060><c> models</c><00:11:27.390><c> in</c><00:11:27.480><c> the</c><00:11:27.720><c> dynamic</c>

00:11:28.580 --> 00:11:28.590 align:start position:0%
we mean by static models in the dynamic
 

00:11:28.590 --> 00:11:30.530 align:start position:0%
we mean by static models in the dynamic
models<00:11:28.920><c> so</c><00:11:29.520><c> by</c><00:11:29.640><c> static</c><00:11:29.910><c> models</c><00:11:30.240><c> we</c><00:11:30.390><c> mean</c>

00:11:30.530 --> 00:11:30.540 align:start position:0%
models so by static models we mean
 

00:11:30.540 --> 00:11:33.410 align:start position:0%
models so by static models we mean
models<00:11:31.470><c> whose</c><00:11:32.040><c> structure</c><00:11:32.490><c> don't</c><00:11:32.730><c> change</c><00:11:33.030><c> with</c>

00:11:33.410 --> 00:11:33.420 align:start position:0%
models whose structure don't change with
 

00:11:33.420 --> 00:11:35.720 align:start position:0%
models whose structure don't change with
the<00:11:33.600><c> input</c><00:11:33.900><c> data</c><00:11:34.290><c> and</c><00:11:34.740><c> I</c><00:11:35.010><c> think</c><00:11:35.250><c> you</c><00:11:35.370><c> have</c><00:11:35.520><c> seen</c>

00:11:35.720 --> 00:11:35.730 align:start position:0%
the input data and I think you have seen
 

00:11:35.730 --> 00:11:37.790 align:start position:0%
the input data and I think you have seen
examples<00:11:36.540><c> like</c><00:11:36.630><c> that</c><00:11:36.690><c> in</c><00:11:37.080><c> the</c><00:11:37.260><c> image</c><00:11:37.530><c> model</c>

00:11:37.790 --> 00:11:37.800 align:start position:0%
examples like that in the image model
 

00:11:37.800 --> 00:11:40.310 align:start position:0%
examples like that in the image model
sections<00:11:38.310><c> of</c><00:11:38.460><c> this</c><00:11:38.580><c> lecture</c><00:11:38.880><c> so</c><00:11:39.050><c> the</c><00:11:40.050><c> guitar</c>

00:11:40.310 --> 00:11:40.320 align:start position:0%
sections of this lecture so the guitar
 

00:11:40.320 --> 00:11:42.500 align:start position:0%
sections of this lecture so the guitar
gram<00:11:40.500><c> here</c><00:11:40.650><c> shows</c><00:11:40.950><c> the</c><00:11:41.550><c> inception</c><00:11:41.880><c> model</c><00:11:42.300><c> in</c>

00:11:42.500 --> 00:11:42.510 align:start position:0%
gram here shows the inception model in
 

00:11:42.510 --> 00:11:44.930 align:start position:0%
gram here shows the inception model in
tensorflow<00:11:42.870><c> so</c><00:11:43.710><c> the</c><00:11:44.310><c> model</c><00:11:44.520><c> can</c><00:11:44.610><c> be</c><00:11:44.640><c> very</c>

00:11:44.930 --> 00:11:44.940 align:start position:0%
tensorflow so the model can be very
 

00:11:44.940 --> 00:11:46.550 align:start position:0%
tensorflow so the model can be very
complicated<00:11:45.270><c> can</c><00:11:45.630><c> have</c><00:11:45.810><c> like</c><00:11:45.990><c> hundreds</c><00:11:46.440><c> of</c>

00:11:46.550 --> 00:11:46.560 align:start position:0%
complicated can have like hundreds of
 

00:11:46.560 --> 00:11:48.710 align:start position:0%
complicated can have like hundreds of
layers<00:11:46.800><c> and</c><00:11:47.190><c> it</c><00:11:47.460><c> can</c><00:11:47.640><c> do</c><00:11:47.760><c> can</c><00:11:48.210><c> do</c><00:11:48.510><c> like</c><00:11:48.690><c> a</c>

00:11:48.710 --> 00:11:48.720 align:start position:0%
layers and it can do can do like a
 

00:11:48.720 --> 00:11:50.840 align:start position:0%
layers and it can do can do like a
complicated<00:11:49.200><c> competition</c><00:11:49.710><c> like</c><00:11:49.890><c> combination</c>

00:11:50.840 --> 00:11:50.850 align:start position:0%
complicated competition like combination
 

00:11:50.850 --> 00:11:53.270 align:start position:0%
complicated competition like combination
pooling<00:11:51.660><c> and</c><00:11:51.900><c> dense</c><00:11:52.380><c> multiplication</c><00:11:53.010><c> and</c><00:11:53.130><c> so</c>

00:11:53.270 --> 00:11:53.280 align:start position:0%
pooling and dense multiplication and so
 

00:11:53.280 --> 00:11:55.340 align:start position:0%
pooling and dense multiplication and so
on<00:11:53.430><c> but</c><00:11:53.940><c> the</c><00:11:54.450><c> structure</c><00:11:54.810><c> of</c><00:11:54.900><c> the</c><00:11:54.990><c> model</c><00:11:55.110><c> is</c>

00:11:55.340 --> 00:11:55.350 align:start position:0%
on but the structure of the model is
 

00:11:55.350 --> 00:11:57.200 align:start position:0%
on but the structure of the model is
always<00:11:55.560><c> the</c><00:11:55.740><c> same</c><00:11:55.980><c> no</c><00:11:56.520><c> matter</c><00:11:56.610><c> how</c><00:11:56.760><c> the</c><00:11:56.910><c> image</c>

00:11:57.200 --> 00:11:57.210 align:start position:0%
always the same no matter how the image
 

00:11:57.210 --> 00:11:59.270 align:start position:0%
always the same no matter how the image
changes<00:11:57.630><c> the</c><00:11:58.110><c> image</c><00:11:58.230><c> always</c><00:11:58.530><c> has</c><00:11:58.830><c> the</c><00:11:59.010><c> same</c>

00:11:59.270 --> 00:11:59.280 align:start position:0%
changes the image always has the same
 

00:11:59.280 --> 00:12:02.480 align:start position:0%
changes the image always has the same
size<00:11:59.580><c> and</c><00:11:59.850><c> the</c><00:11:59.940><c> same</c><00:12:00.120><c> color</c><00:12:00.360><c> depth</c><00:12:01.220><c> but</c><00:12:02.220><c> the</c>

00:12:02.480 --> 00:12:02.490 align:start position:0%
size and the same color depth but the
 

00:12:02.490 --> 00:12:04.250 align:start position:0%
size and the same color depth but the
model<00:12:02.730><c> will</c><00:12:02.850><c> always</c><00:12:03.150><c> compute</c><00:12:03.420><c> the</c><00:12:03.570><c> same</c><00:12:03.840><c> I</c>

00:12:04.250 --> 00:12:04.260 align:start position:0%
model will always compute the same I
 

00:12:04.260 --> 00:12:05.540 align:start position:0%
model will always compute the same I
mean<00:12:04.410><c> it</c><00:12:04.650><c> will</c><00:12:04.830><c> always</c><00:12:05.010><c> do</c><00:12:05.220><c> the</c><00:12:05.280><c> same</c>

00:12:05.540 --> 00:12:05.550 align:start position:0%
mean it will always do the same
 

00:12:05.550 --> 00:12:07.040 align:start position:0%
mean it will always do the same
competition<00:12:05.790><c> regardless</c><00:12:06.570><c> how</c><00:12:06.690><c> the</c><00:12:06.750><c> image</c>

00:12:07.040 --> 00:12:07.050 align:start position:0%
competition regardless how the image
 

00:12:07.050 --> 00:12:09.260 align:start position:0%
competition regardless how the image
changes<00:12:07.740><c> so</c><00:12:08.340><c> that's</c><00:12:08.580><c> what</c><00:12:08.730><c> we</c><00:12:08.850><c> mean</c><00:12:09.030><c> by</c><00:12:09.090><c> a</c>

00:12:09.260 --> 00:12:09.270 align:start position:0%
changes so that's what we mean by a
 

00:12:09.270 --> 00:12:11.150 align:start position:0%
changes so that's what we mean by a
static<00:12:09.630><c> model</c><00:12:09.780><c> but</c><00:12:10.560><c> there</c><00:12:10.650><c> are</c><00:12:10.740><c> also</c><00:12:10.860><c> models</c>

00:12:11.150 --> 00:12:11.160 align:start position:0%
static model but there are also models
 

00:12:11.160 --> 00:12:13.820 align:start position:0%
static model but there are also models
whose<00:12:11.430><c> structure</c><00:12:11.910><c> change</c><00:12:12.240><c> with</c><00:12:13.020><c> input</c><00:12:13.500><c> data</c>

00:12:13.820 --> 00:12:13.830 align:start position:0%
whose structure change with input data
 

00:12:13.830 --> 00:12:15.800 align:start position:0%
whose structure change with input data
so<00:12:14.310><c> the</c><00:12:14.670><c> recurrence</c><00:12:14.970><c> neural</c><00:12:15.360><c> network</c><00:12:15.630><c> we</c><00:12:15.750><c> have</c>

00:12:15.800 --> 00:12:15.810 align:start position:0%
so the recurrence neural network we have
 

00:12:15.810 --> 00:12:17.090 align:start position:0%
so the recurrence neural network we have
seen<00:12:16.110><c> it's</c><00:12:16.290><c> actually</c><00:12:16.500><c> an</c><00:12:16.560><c> example</c><00:12:16.650><c> of</c><00:12:16.980><c> that</c>

00:12:17.090 --> 00:12:17.100 align:start position:0%
seen it's actually an example of that
 

00:12:17.100 --> 00:12:18.830 align:start position:0%
seen it's actually an example of that
and<00:12:17.610><c> the</c><00:12:17.880><c> reason</c><00:12:18.120><c> why</c><00:12:18.210><c> it's</c><00:12:18.330><c> changes</c><00:12:18.720><c> is</c>

00:12:18.830 --> 00:12:18.840 align:start position:0%
and the reason why it's changes is
 

00:12:18.840 --> 00:12:21.110 align:start position:0%
and the reason why it's changes is
because<00:12:19.110><c> it</c><00:12:19.950><c> needs</c><00:12:20.010><c> to</c><00:12:20.220><c> loop</c><00:12:20.400><c> over</c><00:12:20.520><c> things</c><00:12:20.850><c> so</c>

00:12:21.110 --> 00:12:21.120 align:start position:0%
because it needs to loop over things so
 

00:12:21.120 --> 00:12:22.970 align:start position:0%
because it needs to loop over things so
in<00:12:21.360><c> the</c><00:12:21.450><c> simplest</c><00:12:21.750><c> kind</c><00:12:22.140><c> of</c><00:12:22.260><c> recurrent</c><00:12:22.800><c> neural</c>

00:12:22.970 --> 00:12:22.980 align:start position:0%
in the simplest kind of recurrent neural
 

00:12:22.980 --> 00:12:25.190 align:start position:0%
in the simplest kind of recurrent neural
network<00:12:23.400><c> it</c><00:12:23.730><c> will</c><00:12:24.000><c> loop</c><00:12:24.180><c> over</c><00:12:24.510><c> items</c><00:12:24.900><c> in</c><00:12:25.110><c> the</c>

00:12:25.190 --> 00:12:25.200 align:start position:0%
network it will loop over items in the
 

00:12:25.200 --> 00:12:28.550 align:start position:0%
network it will loop over items in the
sequence<00:12:25.530><c> like</c><00:12:25.830><c> words</c><00:12:26.340><c> in</c><00:12:26.490><c> a</c><00:12:26.550><c> sentence</c><00:12:27.230><c> so</c><00:12:28.230><c> you</c>

00:12:28.550 --> 00:12:28.560 align:start position:0%
sequence like words in a sentence so you
 

00:12:28.560 --> 00:12:29.930 align:start position:0%
sequence like words in a sentence so you
can<00:12:28.680><c> say</c><00:12:28.800><c> that</c><00:12:28.980><c> that</c><00:12:29.190><c> the</c><00:12:29.430><c> length</c><00:12:29.640><c> of</c><00:12:29.850><c> the</c>

00:12:29.930 --> 00:12:29.940 align:start position:0%
can say that that the length of the
 

00:12:29.940 --> 00:12:31.430 align:start position:0%
can say that that the length of the
model<00:12:30.120><c> is</c><00:12:30.330><c> proportional</c><00:12:30.870><c> to</c><00:12:30.930><c> the</c><00:12:31.080><c> length</c><00:12:31.230><c> of</c>

00:12:31.430 --> 00:12:31.440 align:start position:0%
model is proportional to the length of
 

00:12:31.440 --> 00:12:33.710 align:start position:0%
model is proportional to the length of
the<00:12:31.560><c> input</c><00:12:31.710><c> sentence</c><00:12:32.190><c> but</c><00:12:32.880><c> there</c><00:12:33.030><c> are</c><00:12:33.120><c> also</c>

00:12:33.710 --> 00:12:33.720 align:start position:0%
the input sentence but there are also
 

00:12:33.720 --> 00:12:35.720 align:start position:0%
the input sentence but there are also
more<00:12:34.170><c> complicated</c><00:12:34.530><c> changes</c><00:12:35.160><c> of</c><00:12:35.340><c> the</c><00:12:35.490><c> model</c>

00:12:35.720 --> 00:12:35.730 align:start position:0%
more complicated changes of the model
 

00:12:35.730 --> 00:12:38.750 align:start position:0%
more complicated changes of the model
structure<00:12:36.030><c> with</c><00:12:36.270><c> input</c><00:12:36.630><c> data</c><00:12:36.930><c> so</c><00:12:37.650><c> some</c><00:12:37.950><c> of</c><00:12:37.980><c> the</c>

00:12:38.750 --> 00:12:38.760 align:start position:0%
structure with input data so some of the
 

00:12:38.760 --> 00:12:39.440 align:start position:0%
structure with input data so some of the
state-of-the-art

00:12:39.440 --> 00:12:39.450 align:start position:0%
state-of-the-art
 

00:12:39.450 --> 00:12:41.000 align:start position:0%
state-of-the-art
models<00:12:40.050><c> that</c><00:12:40.230><c> deal</c><00:12:40.380><c> with</c><00:12:40.560><c> natural</c><00:12:40.770><c> language</c>

00:12:41.000 --> 00:12:41.010 align:start position:0%
models that deal with natural language
 

00:12:41.010 --> 00:12:43.430 align:start position:0%
models that deal with natural language
will<00:12:41.790><c> actually</c><00:12:42.060><c> take</c><00:12:42.300><c> a</c><00:12:42.540><c> parse</c><00:12:42.930><c> tree</c><00:12:42.990><c> of</c><00:12:43.350><c> a</c>

00:12:43.430 --> 00:12:43.440 align:start position:0%
will actually take a parse tree of a
 

00:12:43.440 --> 00:12:46.190 align:start position:0%
will actually take a parse tree of a
sentence<00:12:44.100><c> as</c><00:12:44.220><c> the</c><00:12:44.370><c> input</c><00:12:44.670><c> and</c><00:12:44.870><c> the</c><00:12:45.870><c> structure</c>

00:12:46.190 --> 00:12:46.200 align:start position:0%
sentence as the input and the structure
 

00:12:46.200 --> 00:12:48.230 align:start position:0%
sentence as the input and the structure
of<00:12:46.290><c> the</c><00:12:46.350><c> model</c><00:12:46.500><c> will</c><00:12:46.740><c> reflect</c><00:12:46.980><c> that</c><00:12:47.580><c> parse</c>

00:12:48.230 --> 00:12:48.240 align:start position:0%
of the model will reflect that parse
 

00:12:48.240 --> 00:12:51.410 align:start position:0%
of the model will reflect that parse
tree<00:12:48.890><c> so</c><00:12:49.890><c> as</c><00:12:50.610><c> we</c><00:12:50.820><c> have</c><00:12:50.940><c> seen</c><00:12:51.060><c> before</c><00:12:51.300><c> it's</c>

00:12:51.410 --> 00:12:51.420 align:start position:0%
tree so as we have seen before it's
 

00:12:51.420 --> 00:12:53.150 align:start position:0%
tree so as we have seen before it's
complicated<00:12:51.960><c> to</c><00:12:52.050><c> write</c><00:12:52.290><c> our</c><00:12:52.530><c> while</c><00:12:52.740><c> loops</c><00:12:52.920><c> or</c>

00:12:53.150 --> 00:12:53.160 align:start position:0%
complicated to write our while loops or
 

00:12:53.160 --> 00:12:55.070 align:start position:0%
complicated to write our while loops or
control<00:12:53.550><c> flow</c><00:12:53.730><c> structures</c><00:12:54.120><c> in</c><00:12:54.300><c> in</c><00:12:54.930><c> the</c>

00:12:55.070 --> 00:12:55.080 align:start position:0%
control flow structures in in the
 

00:12:55.080 --> 00:12:57.320 align:start position:0%
control flow structures in in the
default<00:12:55.650><c> symbolic</c><00:12:56.040><c> mode</c><00:12:56.220><c> now</c><00:12:56.760><c> if</c><00:12:56.880><c> you</c><00:12:56.970><c> want</c><00:12:57.270><c> to</c>

00:12:57.320 --> 00:12:57.330 align:start position:0%
default symbolic mode now if you want to
 

00:12:57.330 --> 00:12:59.480 align:start position:0%
default symbolic mode now if you want to
write<00:12:57.570><c> that</c><00:12:57.720><c> kind</c><00:12:57.900><c> of</c><00:12:57.930><c> model</c><00:12:58.110><c> it</c><00:12:58.320><c> gets</c><00:12:59.250><c> even</c>

00:12:59.480 --> 00:12:59.490 align:start position:0%
write that kind of model it gets even
 

00:12:59.490 --> 00:13:01.220 align:start position:0%
write that kind of model it gets even
more<00:12:59.520><c> complicated</c><00:12:59.910><c> because</c><00:13:00.570><c> there</c><00:13:00.930><c> you</c><00:13:01.110><c> will</c>

00:13:01.220 --> 00:13:01.230 align:start position:0%
more complicated because there you will
 

00:13:01.230 --> 00:13:03.770 align:start position:0%
more complicated because there you will
need<00:13:01.380><c> to</c><00:13:01.530><c> nest</c><00:13:02.270><c> conditional</c><00:13:03.270><c> branches</c><00:13:03.630><c> and</c>

00:13:03.770 --> 00:13:03.780 align:start position:0%
need to nest conditional branches and
 

00:13:03.780 --> 00:13:05.750 align:start position:0%
need to nest conditional branches and
the<00:13:03.990><c> while</c><00:13:04.140><c> loops</c><00:13:04.350><c> but</c><00:13:05.100><c> it's</c><00:13:05.250><c> much</c><00:13:05.400><c> easier</c><00:13:05.700><c> to</c>

00:13:05.750 --> 00:13:05.760 align:start position:0%
the while loops but it's much easier to
 

00:13:05.760 --> 00:13:07.940 align:start position:0%
the while loops but it's much easier to
write<00:13:06.000><c> in</c><00:13:06.300><c> the</c><00:13:06.570><c> ego</c><00:13:06.780><c> remote</c><00:13:07.080><c> because</c><00:13:07.530><c> you</c><00:13:07.740><c> can</c>

00:13:07.940 --> 00:13:07.950 align:start position:0%
write in the ego remote because you can
 

00:13:07.950 --> 00:13:10.220 align:start position:0%
write in the ego remote because you can
just<00:13:08.220><c> use</c><00:13:08.700><c> the</c><00:13:08.910><c> native</c><00:13:09.210><c> for</c><00:13:09.540><c> loops</c><00:13:09.750><c> and</c><00:13:10.080><c> while</c>

00:13:10.220 --> 00:13:10.230 align:start position:0%
just use the native for loops and while
 

00:13:10.230 --> 00:13:11.750 align:start position:0%
just use the native for loops and while
loops<00:13:10.290><c> and</c><00:13:10.590><c> if-else</c><00:13:10.980><c> statements</c><00:13:11.460><c> in</c><00:13:11.550><c> Python</c>

00:13:11.750 --> 00:13:11.760 align:start position:0%
loops and if-else statements in Python
 

00:13:11.760 --> 00:13:15.020 align:start position:0%
loops and if-else statements in Python
so<00:13:12.120><c> we</c><00:13:12.720><c> actually</c><00:13:12.840><c> have</c><00:13:13.140><c> an</c><00:13:13.860><c> example</c><00:13:14.130><c> to</c><00:13:14.400><c> show</c>

00:13:15.020 --> 00:13:15.030 align:start position:0%
so we actually have an example to show
 

00:13:15.030 --> 00:13:16.540 align:start position:0%
so we actually have an example to show
you<00:13:15.060><c> how</c><00:13:15.300><c> to</c><00:13:15.330><c> write</c>

00:13:16.540 --> 00:13:16.550 align:start position:0%
you how to write
 

00:13:16.550 --> 00:13:18.940 align:start position:0%
you how to write
model<00:13:17.270><c> starts</c><00:13:17.540><c> take</c><00:13:17.779><c> parse</c><00:13:18.260><c> trees</c><00:13:18.500><c> as</c><00:13:18.649><c> input</c>

00:13:18.940 --> 00:13:18.950 align:start position:0%
model starts take parse trees as input
 

00:13:18.950 --> 00:13:20.829 align:start position:0%
model starts take parse trees as input
and<00:13:19.160><c> the</c><00:13:19.370><c> process</c><00:13:19.640><c> natural</c><00:13:19.940><c> language</c><00:13:20.209><c> so</c>

00:13:20.829 --> 00:13:20.839 align:start position:0%
and the process natural language so
 

00:13:20.839 --> 00:13:22.660 align:start position:0%
and the process natural language so
please<00:13:21.010><c> check</c><00:13:22.010><c> that</c><00:13:22.040><c> out</c><00:13:22.160><c> if</c><00:13:22.370><c> you</c><00:13:22.430><c> want</c><00:13:22.459><c> you</c>

00:13:22.660 --> 00:13:22.670 align:start position:0%
please check that out if you want you
 

00:13:22.670 --> 00:13:26.130 align:start position:0%
please check that out if you want you
have<00:13:22.790><c> a</c><00:13:22.820><c> question</c>

00:13:26.130 --> 00:13:26.140 align:start position:0%
 
 

00:13:26.140 --> 00:13:34.000 align:start position:0%
 
the<00:13:27.140><c> tree</c><00:13:27.350><c> is</c><00:13:27.470><c> static</c><00:13:32.500><c> yeah</c><00:13:33.500><c> the</c><00:13:33.620><c> tree</c><00:13:33.830><c> is</c>

00:13:34.000 --> 00:13:34.010 align:start position:0%
the tree is static yeah the tree is
 

00:13:34.010 --> 00:13:36.250 align:start position:0%
the tree is static yeah the tree is
static<00:13:34.339><c> in</c><00:13:34.490><c> this</c><00:13:34.610><c> particular</c><00:13:34.880><c> input</c><00:13:35.870><c> but</c><00:13:36.110><c> you</c>

00:13:36.250 --> 00:13:36.260 align:start position:0%
static in this particular input but you
 

00:13:36.260 --> 00:13:37.750 align:start position:0%
static in this particular input but you
can<00:13:36.410><c> have</c><00:13:36.589><c> a</c><00:13:36.620><c> longer</c><00:13:36.860><c> sentence</c><00:13:37.250><c> right</c><00:13:37.550><c> it's</c>

00:13:37.750 --> 00:13:37.760 align:start position:0%
can have a longer sentence right it's
 

00:13:37.760 --> 00:13:40.180 align:start position:0%
can have a longer sentence right it's
the<00:13:38.029><c> the</c><00:13:38.270><c> the</c><00:13:38.810><c> grammar</c><00:13:39.500><c> of</c><00:13:39.620><c> the</c><00:13:39.800><c> armed</c>

00:13:40.180 --> 00:13:40.190 align:start position:0%
the the the grammar of the armed
 

00:13:40.190 --> 00:13:42.070 align:start position:0%
the the the grammar of the armed
sentence<00:13:40.490><c> the</c><00:13:40.550><c> parts</c><00:13:40.790><c> of</c><00:13:40.880><c> the</c><00:13:40.970><c> of</c><00:13:41.930><c> the</c>

00:13:42.070 --> 00:13:42.080 align:start position:0%
sentence the parts of the of the
 

00:13:42.080 --> 00:13:43.540 align:start position:0%
sentence the parts of the of the
sentence<00:13:42.380><c> can</c><00:13:42.470><c> change</c><00:13:42.770><c> from</c><00:13:42.920><c> one</c><00:13:43.010><c> sentence</c><00:13:43.520><c> to</c>

00:13:43.540 --> 00:13:43.550 align:start position:0%
sentence can change from one sentence to
 

00:13:43.550 --> 00:13:45.340 align:start position:0%
sentence can change from one sentence to
another<00:13:43.760><c> right</c><00:13:44.240><c> so</c><00:13:44.390><c> that</c><00:13:44.720><c> won't</c><00:13:44.899><c> make</c><00:13:45.140><c> the</c>

00:13:45.340 --> 00:13:45.350 align:start position:0%
another right so that won't make the
 

00:13:45.350 --> 00:13:47.800 align:start position:0%
another right so that won't make the
model<00:13:45.680><c> structure</c><00:13:46.010><c> change</c><00:13:46.220><c> as</c><00:13:46.370><c> well</c><00:13:46.810><c> so</c>

00:13:47.800 --> 00:13:47.810 align:start position:0%
model structure change as well so
 

00:13:47.810 --> 00:13:49.210 align:start position:0%
model structure change as well so
basically<00:13:48.170><c> you</c><00:13:48.440><c> can't</c><00:13:48.649><c> hard-code</c><00:13:49.070><c> the</c>

00:13:49.210 --> 00:13:49.220 align:start position:0%
basically you can't hard-code the
 

00:13:49.220 --> 00:13:50.680 align:start position:0%
basically you can't hard-code the
structure<00:13:49.550><c> of</c><00:13:49.730><c> the</c><00:13:49.880><c> model</c><00:13:50.029><c> you</c><00:13:50.240><c> have</c><00:13:50.390><c> to</c><00:13:50.510><c> like</c>

00:13:50.680 --> 00:13:50.690 align:start position:0%
structure of the model you have to like
 

00:13:50.690 --> 00:13:53.769 align:start position:0%
structure of the model you have to like
look<00:13:51.200><c> at</c><00:13:51.350><c> a</c><00:13:51.380><c> parse</c><00:13:51.620><c> tree</c><00:13:51.649><c> and</c><00:13:52.040><c> then</c><00:13:52.160><c> like</c><00:13:52.779><c> do</c>

00:13:53.769 --> 00:13:53.779 align:start position:0%
look at a parse tree and then like do
 

00:13:53.779 --> 00:13:54.519 align:start position:0%
look at a parse tree and then like do
some<00:13:53.959><c> kind</c><00:13:54.110><c> of</c><00:13:54.170><c> like</c>

00:13:54.519 --> 00:13:54.529 align:start position:0%
some kind of like
 

00:13:54.529 --> 00:13:56.769 align:start position:0%
some kind of like
if-else<00:13:54.980><c> statements</c><00:13:55.490><c> and</c><00:13:55.670><c> wild</c><00:13:56.300><c> loops</c><00:13:56.450><c> in</c>

00:13:56.769 --> 00:13:56.779 align:start position:0%
if-else statements and wild loops in
 

00:13:56.779 --> 00:13:58.510 align:start position:0%
if-else statements and wild loops in
order<00:13:56.930><c> to</c><00:13:57.110><c> like</c><00:13:57.260><c> turn</c><00:13:57.860><c> the</c><00:13:57.920><c> parse</c><00:13:58.220><c> tree</c><00:13:58.250><c> into</c>

00:13:58.510 --> 00:13:58.520 align:start position:0%
order to like turn the parse tree into
 

00:13:58.520 --> 00:14:04.870 align:start position:0%
order to like turn the parse tree into
the<00:13:58.610><c> model</c><00:14:02.230><c> okay</c><00:14:03.230><c> so</c><00:14:03.440><c> we</c><00:14:04.279><c> have</c><00:14:04.399><c> seen</c><00:14:04.610><c> that</c><00:14:04.700><c> the</c>

00:14:04.870 --> 00:14:04.880 align:start position:0%
the model okay so we have seen that the
 

00:14:04.880 --> 00:14:07.360 align:start position:0%
the model okay so we have seen that the
eager<00:14:05.089><c> mode</c><00:14:05.240><c> is</c><00:14:05.360><c> very</c><00:14:05.540><c> good</c><00:14:05.720><c> for</c><00:14:06.190><c> learning</c><00:14:07.190><c> and</c>

00:14:07.360 --> 00:14:07.370 align:start position:0%
eager mode is very good for learning and
 

00:14:07.370 --> 00:14:09.570 align:start position:0%
eager mode is very good for learning and
debugging<00:14:07.850><c> and</c><00:14:08.000><c> for</c><00:14:08.570><c> writing</c><00:14:08.870><c> control</c><00:14:09.350><c> flow</c>

00:14:09.570 --> 00:14:09.580 align:start position:0%
debugging and for writing control flow
 

00:14:09.580 --> 00:14:12.460 align:start position:0%
debugging and for writing control flow
structures<00:14:10.580><c> but</c><00:14:11.240><c> sometimes</c><00:14:11.600><c> you</c><00:14:11.750><c> may</c><00:14:12.290><c> still</c>

00:14:12.460 --> 00:14:12.470 align:start position:0%
structures but sometimes you may still
 

00:14:12.470 --> 00:14:14.110 align:start position:0%
structures but sometimes you may still
want<00:14:12.529><c> to</c><00:14:12.709><c> debug</c><00:14:13.100><c> tensorflow</c><00:14:13.640><c> programs</c>

00:14:14.110 --> 00:14:14.120 align:start position:0%
want to debug tensorflow programs
 

00:14:14.120 --> 00:14:16.090 align:start position:0%
want to debug tensorflow programs
running<00:14:14.390><c> in</c><00:14:14.570><c> the</c><00:14:14.720><c> default</c><00:14:15.050><c> symbolic</c><00:14:15.500><c> mode</c><00:14:15.860><c> and</c>

00:14:16.090 --> 00:14:16.100 align:start position:0%
running in the default symbolic mode and
 

00:14:16.100 --> 00:14:17.590 align:start position:0%
running in the default symbolic mode and
there<00:14:16.279><c> are</c><00:14:16.370><c> a</c><00:14:16.399><c> few</c><00:14:16.610><c> reasons</c><00:14:16.820><c> for</c><00:14:17.000><c> that</c><00:14:17.209><c> first</c>

00:14:17.590 --> 00:14:17.600 align:start position:0%
there are a few reasons for that first
 

00:14:17.600 --> 00:14:20.019 align:start position:0%
there are a few reasons for that first
you<00:14:18.110><c> may</c><00:14:18.260><c> be</c><00:14:18.320><c> using</c><00:14:19.040><c> some</c><00:14:19.370><c> kind</c><00:14:19.490><c> of</c><00:14:19.580><c> old</c><00:14:19.820><c> code</c>

00:14:20.019 --> 00:14:20.029 align:start position:0%
you may be using some kind of old code
 

00:14:20.029 --> 00:14:21.940 align:start position:0%
you may be using some kind of old code
of<00:14:20.240><c> tensorflow</c><00:14:20.660><c> that</c><00:14:21.020><c> hasn't</c><00:14:21.200><c> been</c><00:14:21.350><c> reported</c>

00:14:21.940 --> 00:14:21.950 align:start position:0%
of tensorflow that hasn't been reported
 

00:14:21.950 --> 00:14:23.920 align:start position:0%
of tensorflow that hasn't been reported
to<00:14:22.070><c> you</c><00:14:22.339><c> remote</c><00:14:22.579><c> yet</c><00:14:22.820><c> and</c><00:14:23.029><c> some</c><00:14:23.660><c> high</c><00:14:23.899><c> level</c>

00:14:23.920 --> 00:14:23.930 align:start position:0%
to you remote yet and some high level
 

00:14:23.930 --> 00:14:25.780 align:start position:0%
to you remote yet and some high level
API<00:14:24.380><c> is</c><00:14:24.500><c> you</c><00:14:24.620><c> might</c><00:14:24.770><c> be</c><00:14:24.860><c> using</c><00:14:25.040><c> like</c><00:14:25.279><c> TF</c><00:14:25.550><c> learn</c>

00:14:25.780 --> 00:14:25.790 align:start position:0%
API is you might be using like TF learn
 

00:14:25.790 --> 00:14:28.810 align:start position:0%
API is you might be using like TF learn
or<00:14:26.060><c> Kara's</c><00:14:26.630><c> or</c><00:14:26.959><c> TF</c><00:14:27.290><c> slim</c><00:14:27.620><c> have</c><00:14:28.190><c> not</c><00:14:28.370><c> been</c><00:14:28.550><c> put</c>

00:14:28.810 --> 00:14:28.820 align:start position:0%
or Kara's or TF slim have not been put
 

00:14:28.820 --> 00:14:31.240 align:start position:0%
or Kara's or TF slim have not been put
into<00:14:28.940><c> your</c><00:14:29.060><c> mode</c><00:14:29.420><c> yet</c><00:14:30.020><c> and</c><00:14:30.350><c> you</c><00:14:30.800><c> may</c><00:14:31.010><c> want</c><00:14:31.190><c> to</c>

00:14:31.240 --> 00:14:31.250 align:start position:0%
into your mode yet and you may want to
 

00:14:31.250 --> 00:14:32.889 align:start position:0%
into your mode yet and you may want to
stick<00:14:31.490><c> to</c><00:14:31.610><c> the</c><00:14:31.820><c> default</c><00:14:32.089><c> symbolic</c><00:14:32.660><c> mode</c>

00:14:32.889 --> 00:14:32.899 align:start position:0%
stick to the default symbolic mode
 

00:14:32.899 --> 00:14:34.600 align:start position:0%
stick to the default symbolic mode
because<00:14:33.290><c> you</c><00:14:33.470><c> care</c><00:14:33.649><c> about</c><00:14:33.829><c> speed</c><00:14:34.070><c> because</c>

00:14:34.600 --> 00:14:34.610 align:start position:0%
because you care about speed because
 

00:14:34.610 --> 00:14:36.130 align:start position:0%
because you care about speed because
eager<00:14:34.880><c> mode</c><00:14:35.000><c> is</c><00:14:35.120><c> sometimes</c><00:14:35.420><c> slower</c><00:14:35.660><c> than</c><00:14:35.870><c> then</c>

00:14:36.130 --> 00:14:36.140 align:start position:0%
eager mode is sometimes slower than then
 

00:14:36.140 --> 00:14:39.310 align:start position:0%
eager mode is sometimes slower than then
the<00:14:36.950><c> default</c><00:14:37.550><c> mode</c><00:14:37.670><c> so</c><00:14:38.390><c> um</c><00:14:38.690><c> the</c><00:14:38.839><c> good</c><00:14:38.930><c> news</c><00:14:39.079><c> is</c>

00:14:39.310 --> 00:14:39.320 align:start position:0%
the default mode so um the good news is
 

00:14:39.320 --> 00:14:40.840 align:start position:0%
the default mode so um the good news is
that<00:14:39.350><c> we</c><00:14:39.770><c> have</c><00:14:39.890><c> a</c><00:14:39.950><c> tool</c><00:14:40.250><c> in</c><00:14:40.459><c> terms</c><00:14:40.579><c> of</c><00:14:40.730><c> flow</c>

00:14:40.840 --> 00:14:40.850 align:start position:0%
that we have a tool in terms of flow
 

00:14:40.850 --> 00:14:43.180 align:start position:0%
that we have a tool in terms of flow
that<00:14:41.000><c> can</c><00:14:41.209><c> help</c><00:14:41.510><c> you</c><00:14:41.750><c> like</c><00:14:42.020><c> debug</c><00:14:42.440><c> attends</c><00:14:43.130><c> to</c>

00:14:43.180 --> 00:14:43.190 align:start position:0%
that can help you like debug attends to
 

00:14:43.190 --> 00:14:45.760 align:start position:0%
that can help you like debug attends to
flow<00:14:43.339><c> model</c><00:14:44.029><c> running</c><00:14:44.329><c> in</c><00:14:44.480><c> the</c><00:14:44.839><c> theater</c><00:14:45.320><c> um</c><00:14:45.470><c> TF</c>

00:14:45.760 --> 00:14:45.770 align:start position:0%
flow model running in the theater um TF
 

00:14:45.770 --> 00:14:48.370 align:start position:0%
flow model running in the theater um TF
that<00:14:45.920><c> session</c><00:14:46.550><c> in</c><00:14:46.910><c> the</c><00:14:47.089><c> default</c><00:14:47.750><c> mode</c><00:14:47.870><c> and</c>

00:14:48.370 --> 00:14:48.380 align:start position:0%
that session in the default mode and
 

00:14:48.380 --> 00:14:49.840 align:start position:0%
that session in the default mode and
that's<00:14:48.529><c> always</c><00:14:48.860><c> called</c><00:14:49.070><c> TF</c><00:14:49.310><c> d</c><00:14:49.459><c> BG</c><00:14:49.730><c> or</c>

00:14:49.840 --> 00:14:49.850 align:start position:0%
that's always called TF d BG or
 

00:14:49.850 --> 00:14:50.500 align:start position:0%
that's always called TF d BG or
tensorflow

00:14:50.500 --> 00:14:50.510 align:start position:0%
tensorflow
 

00:14:50.510 --> 00:14:54.040 align:start position:0%
tensorflow
debugger<00:14:51.850><c> so</c><00:14:52.850><c> the</c><00:14:52.970><c> way</c><00:14:53.060><c> in</c><00:14:53.209><c> which</c><00:14:53.329><c> you</c><00:14:53.480><c> you</c><00:14:53.839><c> use</c>

00:14:54.040 --> 00:14:54.050 align:start position:0%
debugger so the way in which you you use
 

00:14:54.050 --> 00:14:55.600 align:start position:0%
debugger so the way in which you you use
it<00:14:54.200><c> is</c><00:14:54.350><c> kind</c><00:14:54.649><c> of</c><00:14:54.709><c> similar</c><00:14:54.980><c> to</c><00:14:55.250><c> the</c><00:14:55.339><c> way</c><00:14:55.459><c> in</c>

00:14:55.600 --> 00:14:55.610 align:start position:0%
it is kind of similar to the way in
 

00:14:55.610 --> 00:14:58.210 align:start position:0%
it is kind of similar to the way in
which<00:14:55.640><c> use</c><00:14:55.940><c> eager</c><00:14:56.360><c> execution</c><00:14:57.230><c> we</c><00:14:57.740><c> import</c><00:14:58.040><c> an</c>

00:14:58.210 --> 00:14:58.220 align:start position:0%
which use eager execution we import an
 

00:14:58.220 --> 00:15:00.430 align:start position:0%
which use eager execution we import an
additional<00:14:58.640><c> module</c><00:14:59.000><c> and</c><00:14:59.149><c> after</c><00:15:00.110><c> you</c><00:15:00.260><c> have</c>

00:15:00.430 --> 00:15:00.440 align:start position:0%
additional module and after you have
 

00:15:00.440 --> 00:15:02.500 align:start position:0%
additional module and after you have
created<00:15:00.649><c> the</c><00:15:01.130><c> session</c><00:15:01.459><c> object</c><00:15:01.579><c> you</c><00:15:02.089><c> will</c><00:15:02.300><c> wrap</c>

00:15:02.500 --> 00:15:02.510 align:start position:0%
created the session object you will wrap
 

00:15:02.510 --> 00:15:04.240 align:start position:0%
created the session object you will wrap
the<00:15:02.690><c> session</c><00:15:02.959><c> object</c><00:15:03.110><c> where</c><00:15:03.560><c> the</c><00:15:03.589><c> wrapper</c><00:15:03.890><c> in</c>

00:15:04.240 --> 00:15:04.250 align:start position:0%
the session object where the wrapper in
 

00:15:04.250 --> 00:15:05.829 align:start position:0%
the session object where the wrapper in
this<00:15:04.670><c> case</c><00:15:04.850><c> is</c><00:15:05.000><c> called</c><00:15:05.149><c> local</c><00:15:05.510><c> command</c><00:15:05.750><c> line</c>

00:15:05.829 --> 00:15:05.839 align:start position:0%
this case is called local command line
 

00:15:05.839 --> 00:15:08.590 align:start position:0%
this case is called local command line
interface<00:15:06.200><c> debug</c><00:15:06.740><c> wrapper</c><00:15:07.040><c> so</c><00:15:07.760><c> you</c><00:15:08.300><c> don't</c>

00:15:08.590 --> 00:15:08.600 align:start position:0%
interface debug wrapper so you don't
 

00:15:08.600 --> 00:15:10.030 align:start position:0%
interface debug wrapper so you don't
need<00:15:08.690><c> to</c><00:15:08.810><c> make</c><00:15:09.050><c> any</c><00:15:09.290><c> other</c><00:15:09.470><c> change</c><00:15:09.800><c> to</c><00:15:09.920><c> your</c>

00:15:10.030 --> 00:15:10.040 align:start position:0%
need to make any other change to your
 

00:15:10.040 --> 00:15:12.370 align:start position:0%
need to make any other change to your
code<00:15:10.279><c> because</c><00:15:10.730><c> this</c><00:15:11.240><c> wrapped</c><00:15:11.540><c> object</c><00:15:12.020><c> has</c><00:15:12.260><c> the</c>

00:15:12.370 --> 00:15:12.380 align:start position:0%
code because this wrapped object has the
 

00:15:12.380 --> 00:15:14.590 align:start position:0%
code because this wrapped object has the
same<00:15:12.649><c> interface</c><00:15:13.130><c> as</c><00:15:13.339><c> the</c><00:15:13.399><c> unwrapped</c><00:15:14.149><c> object</c>

00:15:14.590 --> 00:15:14.600 align:start position:0%
same interface as the unwrapped object
 

00:15:14.600 --> 00:15:16.900 align:start position:0%
same interface as the unwrapped object
but<00:15:15.200><c> basically</c><00:15:15.529><c> you</c><00:15:15.709><c> can</c><00:15:15.920><c> you</c><00:15:16.550><c> can</c><00:15:16.670><c> think</c><00:15:16.700><c> of</c>

00:15:16.900 --> 00:15:16.910 align:start position:0%
but basically you can you can think of
 

00:15:16.910 --> 00:15:19.240 align:start position:0%
but basically you can you can think of
this<00:15:17.060><c> as</c><00:15:17.300><c> like</c><00:15:17.329><c> an</c><00:15:17.630><c> otoscope</c><00:15:18.079><c> some</c><00:15:19.070><c> kind</c><00:15:19.220><c> of</c>

00:15:19.240 --> 00:15:19.250 align:start position:0%
this as like an otoscope some kind of
 

00:15:19.250 --> 00:15:21.579 align:start position:0%
this as like an otoscope some kind of
instrument<00:15:19.520><c> on</c><00:15:20.180><c> your</c><00:15:20.480><c> TF</c><00:15:20.930><c> dart</c><00:15:21.110><c> session</c><00:15:21.470><c> which</c>

00:15:21.579 --> 00:15:21.589 align:start position:0%
instrument on your TF dart session which
 

00:15:21.589 --> 00:15:24.850 align:start position:0%
instrument on your TF dart session which
is<00:15:21.620><c> otherwise</c><00:15:21.920><c> opaque</c><00:15:22.570><c> so</c><00:15:23.570><c> now</c><00:15:23.899><c> once</c><00:15:24.680><c> you</c><00:15:24.829><c> have</c>

00:15:24.850 --> 00:15:24.860 align:start position:0%
is otherwise opaque so now once you have
 

00:15:24.860 --> 00:15:27.640 align:start position:0%
is otherwise opaque so now once you have
wrapped<00:15:25.370><c> that</c><00:15:25.699><c> session</c><00:15:26.449><c> when</c><00:15:27.230><c> sessions</c><00:15:27.560><c> are</c>

00:15:27.640 --> 00:15:27.650 align:start position:0%
wrapped that session when sessions are
 

00:15:27.650 --> 00:15:29.590 align:start position:0%
wrapped that session when sessions are
run<00:15:27.860><c> is</c><00:15:28.070><c> called</c><00:15:28.339><c> your</c><00:15:28.910><c> going</c><00:15:29.089><c> to</c><00:15:29.180><c> drop</c><00:15:29.360><c> into</c>

00:15:29.590 --> 00:15:29.600 align:start position:0%
run is called your going to drop into
 

00:15:29.600 --> 00:15:30.160 align:start position:0%
run is called your going to drop into
the<00:15:29.779><c> command</c><00:15:30.020><c> line</c>

00:15:30.160 --> 00:15:30.170 align:start position:0%
the command line
 

00:15:30.170 --> 00:15:31.780 align:start position:0%
the command line
interface<00:15:30.500><c> you're</c><00:15:30.889><c> going</c><00:15:31.040><c> to</c><00:15:31.160><c> see</c><00:15:31.430><c> basically</c>

00:15:31.780 --> 00:15:31.790 align:start position:0%
interface you're going to see basically
 

00:15:31.790 --> 00:15:34.449 align:start position:0%
interface you're going to see basically
a<00:15:31.910><c> presentation</c><00:15:32.660><c> of</c><00:15:32.870><c> what</c>

00:15:34.449 --> 00:15:34.459 align:start position:0%
a presentation of what
 

00:15:34.459 --> 00:15:36.430 align:start position:0%
a presentation of what
intermediate<00:15:34.850><c> answers</c><00:15:35.300><c> are</c><00:15:35.480><c> executed</c><00:15:36.019><c> in</c><00:15:36.050><c> the</c>

00:15:36.430 --> 00:15:36.440 align:start position:0%
intermediate answers are executed in the
 

00:15:36.440 --> 00:15:38.319 align:start position:0%
intermediate answers are executed in the
sessions<00:15:36.740><c> are</c><00:15:36.829><c> run</c><00:15:37.010><c> and</c><00:15:37.279><c> the</c><00:15:37.550><c> structure</c><00:15:38.240><c> in</c>

00:15:38.319 --> 00:15:38.329 align:start position:0%
sessions are run and the structure in
 

00:15:38.329 --> 00:15:41.680 align:start position:0%
sessions are run and the structure in
the<00:15:38.420><c> graph</c><00:15:38.600><c> and</c><00:15:38.870><c> so</c><00:15:39.019><c> on</c><00:15:39.170><c> so</c><00:15:39.380><c> I</c><00:15:40.480><c> encourage</c><00:15:41.480><c> you</c>

00:15:41.680 --> 00:15:41.690 align:start position:0%
the graph and so on so I encourage you
 

00:15:41.690 --> 00:15:44.129 align:start position:0%
the graph and so on so I encourage you
to<00:15:41.839><c> play</c><00:15:42.079><c> with</c><00:15:42.110><c> that</c><00:15:42.290><c> after</c><00:15:42.950><c> the</c><00:15:43.100><c> lecture</c>

00:15:44.129 --> 00:15:44.139 align:start position:0%
to play with that after the lecture
 

00:15:44.139 --> 00:15:49.389 align:start position:0%
to play with that after the lecture
so<00:15:46.720><c> the</c><00:15:47.720><c> TF</c><00:15:48.230><c> debugger</c><00:15:48.589><c> is</c><00:15:48.740><c> also</c><00:15:49.040><c> very</c><00:15:49.250><c> useful</c>

00:15:49.389 --> 00:15:49.399 align:start position:0%
so the TF debugger is also very useful
 

00:15:49.399 --> 00:15:51.460 align:start position:0%
so the TF debugger is also very useful
for<00:15:49.820><c> debugging</c><00:15:49.970><c> a</c><00:15:50.240><c> kind</c><00:15:50.449><c> of</c><00:15:50.540><c> bugs</c><00:15:50.870><c> in</c><00:15:51.110><c> your</c>

00:15:51.460 --> 00:15:51.470 align:start position:0%
for debugging a kind of bugs in your
 

00:15:51.470 --> 00:15:52.540 align:start position:0%
for debugging a kind of bugs in your
machine<00:15:51.649><c> learning</c><00:15:51.920><c> models</c><00:15:52.220><c> which</c><00:15:52.399><c> will</c>

00:15:52.540 --> 00:15:52.550 align:start position:0%
machine learning models which will
 

00:15:52.550 --> 00:15:54.250 align:start position:0%
machine learning models which will
probably<00:15:52.970><c> occur</c><00:15:53.300><c> those</c><00:15:53.930><c> are</c><00:15:54.050><c> called</c>

00:15:54.250 --> 00:15:54.260 align:start position:0%
probably occur those are called
 

00:15:54.260 --> 00:15:56.170 align:start position:0%
probably occur those are called
numerical<00:15:54.740><c> instability</c><00:15:55.370><c> issues</c><00:15:55.490><c> so</c><00:15:55.880><c> by</c><00:15:56.029><c> that</c>

00:15:56.170 --> 00:15:56.180 align:start position:0%
numerical instability issues so by that
 

00:15:56.180 --> 00:15:58.480 align:start position:0%
numerical instability issues so by that
I<00:15:56.329><c> mean</c><00:15:56.480><c> sometimes</c><00:15:57.079><c> values</c><00:15:57.769><c> in</c><00:15:57.920><c> the</c><00:15:58.010><c> network</c>

00:15:58.480 --> 00:15:58.490 align:start position:0%
I mean sometimes values in the network
 

00:15:58.490 --> 00:16:00.670 align:start position:0%
I mean sometimes values in the network
will<00:15:58.730><c> become</c><00:15:59.029><c> Nan's</c><00:15:59.389><c> or</c><00:15:59.570><c> infinities</c><00:15:59.959><c> so</c><00:16:00.470><c> nan</c>

00:16:00.670 --> 00:16:00.680 align:start position:0%
will become Nan's or infinities so nan
 

00:16:00.680 --> 00:16:02.680 align:start position:0%
will become Nan's or infinities so nan
stands<00:16:01.070><c> R</c><00:16:01.220><c> stands</c><00:16:01.610><c> for</c><00:16:01.670><c> not</c><00:16:02.180><c> a</c><00:16:02.329><c> number</c>

00:16:02.680 --> 00:16:02.690 align:start position:0%
stands R stands for not a number
 

00:16:02.690 --> 00:16:04.960 align:start position:0%
stands R stands for not a number
Nan's<00:16:03.260><c> and</c><00:16:03.470><c> infinities</c><00:16:03.920><c> are</c><00:16:04.130><c> like</c><00:16:04.370><c> bad</c><00:16:04.610><c> float</c>

00:16:04.960 --> 00:16:04.970 align:start position:0%
Nan's and infinities are like bad float
 

00:16:04.970 --> 00:16:07.990 align:start position:0%
Nan's and infinities are like bad float
values<00:16:05.480><c> that</c><00:16:05.690><c> will</c><00:16:05.810><c> sometimes</c><00:16:05.990><c> happen</c><00:16:06.320><c> now</c><00:16:07.100><c> if</c>

00:16:07.990 --> 00:16:08.000 align:start position:0%
values that will sometimes happen now if
 

00:16:08.000 --> 00:16:09.370 align:start position:0%
values that will sometimes happen now if
you<00:16:08.180><c> don't</c><00:16:08.329><c> have</c><00:16:08.420><c> a</c><00:16:08.480><c> specialized</c><00:16:08.930><c> tool</c><00:16:09.170><c> in</c>

00:16:09.370 --> 00:16:09.380 align:start position:0%
you don't have a specialized tool in
 

00:16:09.380 --> 00:16:10.689 align:start position:0%
you don't have a specialized tool in
terms<00:16:09.500><c> of</c><00:16:09.620><c> law</c><00:16:09.769><c> it</c><00:16:09.949><c> can</c><00:16:10.100><c> be</c><00:16:10.190><c> difficult</c><00:16:10.399><c> to</c>

00:16:10.689 --> 00:16:10.699 align:start position:0%
terms of law it can be difficult to
 

00:16:10.699 --> 00:16:13.600 align:start position:0%
terms of law it can be difficult to
pinpoint<00:16:11.089><c> the</c><00:16:11.839><c> exact</c><00:16:12.199><c> node</c><00:16:12.470><c> which</c><00:16:13.130><c> generates</c>

00:16:13.600 --> 00:16:13.610 align:start position:0%
pinpoint the exact node which generates
 

00:16:13.610 --> 00:16:14.980 align:start position:0%
pinpoint the exact node which generates
the<00:16:13.970><c> lens</c><00:16:14.240><c> and</c><00:16:14.420><c> infinities</c>

00:16:14.980 --> 00:16:14.990 align:start position:0%
the lens and infinities
 

00:16:14.990 --> 00:16:16.870 align:start position:0%
the lens and infinities
but<00:16:15.440><c> the</c><00:16:15.709><c> debugger</c><00:16:16.040><c> has</c><00:16:16.070><c> a</c><00:16:16.220><c> special</c><00:16:16.639><c> command</c>

00:16:16.870 --> 00:16:16.880 align:start position:0%
but the debugger has a special command
 

00:16:16.880 --> 00:16:18.910 align:start position:0%
but the debugger has a special command
with<00:16:17.449><c> which</c><00:16:17.630><c> you</c><00:16:17.810><c> can</c><00:16:17.930><c> run</c><00:16:18.199><c> the</c><00:16:18.320><c> model</c><00:16:18.440><c> until</c>

00:16:18.910 --> 00:16:18.920 align:start position:0%
with which you can run the model until
 

00:16:18.920 --> 00:16:21.340 align:start position:0%
with which you can run the model until
any<00:16:19.269><c> nodes</c><00:16:20.269><c> in</c><00:16:20.420><c> the</c><00:16:20.510><c> graph</c><00:16:20.630><c> contains</c><00:16:21.079><c> an</c><00:16:21.199><c> ends</c>

00:16:21.340 --> 00:16:21.350 align:start position:0%
any nodes in the graph contains an ends
 

00:16:21.350 --> 00:16:24.639 align:start position:0%
any nodes in the graph contains an ends
or<00:16:21.589><c> infinities</c><00:16:21.949><c> so</c><00:16:22.820><c> in</c><00:16:23.510><c> our</c><00:16:23.660><c> experience</c><00:16:24.079><c> that</c>

00:16:24.639 --> 00:16:24.649 align:start position:0%
or infinities so in our experience that
 

00:16:24.649 --> 00:16:26.829 align:start position:0%
or infinities so in our experience that
happens<00:16:24.949><c> quite</c><00:16:25.459><c> often</c><00:16:25.670><c> and</c><00:16:25.970><c> the</c><00:16:26.360><c> most</c><00:16:26.480><c> common</c>

00:16:26.829 --> 00:16:26.839 align:start position:0%
happens quite often and the most common
 

00:16:26.839 --> 00:16:29.170 align:start position:0%
happens quite often and the most common
causes<00:16:27.019><c> of</c><00:16:27.199><c> Nan's</c><00:16:27.620><c> and</c><00:16:28.040><c> infinities</c><00:16:28.519><c> are</c><00:16:28.699><c> in</c>

00:16:29.170 --> 00:16:29.180 align:start position:0%
causes of Nan's and infinities are in
 

00:16:29.180 --> 00:16:31.540 align:start position:0%
causes of Nan's and infinities are in
the<00:16:29.269><c> flow</c><00:16:29.480><c> and</c><00:16:29.510><c> overflow</c><00:16:30.050><c> so</c><00:16:30.649><c> for</c><00:16:31.010><c> example</c><00:16:31.339><c> if</c>

00:16:31.540 --> 00:16:31.550 align:start position:0%
the flow and overflow so for example if
 

00:16:31.550 --> 00:16:33.310 align:start position:0%
the flow and overflow so for example if
there's<00:16:32.120><c> under</c><00:16:32.360><c> flow</c><00:16:32.570><c> then</c><00:16:32.810><c> a</c><00:16:32.930><c> number</c><00:16:33.170><c> will</c>

00:16:33.310 --> 00:16:33.320 align:start position:0%
there's under flow then a number will
 

00:16:33.320 --> 00:16:35.319 align:start position:0%
there's under flow then a number will
become<00:16:33.410><c> zero</c><00:16:33.800><c> and</c><00:16:34.070><c> when</c><00:16:34.550><c> you</c><00:16:34.640><c> use</c><00:16:34.790><c> that</c><00:16:34.970><c> number</c>

00:16:35.319 --> 00:16:35.329 align:start position:0%
become zero and when you use that number
 

00:16:35.329 --> 00:16:36.850 align:start position:0%
become zero and when you use that number
in<00:16:35.480><c> division</c><00:16:35.870><c> or</c><00:16:36.079><c> lock</c><00:16:36.350><c> you</c><00:16:36.589><c> will</c><00:16:36.709><c> get</c>

00:16:36.850 --> 00:16:36.860 align:start position:0%
in division or lock you will get
 

00:16:36.860 --> 00:16:39.189 align:start position:0%
in division or lock you will get
infinities<00:16:37.370><c> and</c><00:16:37.600><c> overflow</c><00:16:38.600><c> can</c><00:16:38.810><c> be</c><00:16:38.899><c> caused</c><00:16:39.110><c> by</c>

00:16:39.189 --> 00:16:39.199 align:start position:0%
infinities and overflow can be caused by
 

00:16:39.199 --> 00:16:42.250 align:start position:0%
infinities and overflow can be caused by
learning<00:16:39.620><c> rates</c><00:16:39.769><c> being</c><00:16:39.920><c> too</c><00:16:40.070><c> high</c><00:16:40.279><c> or</c><00:16:40.959><c> by</c><00:16:41.959><c> some</c>

00:16:42.250 --> 00:16:42.260 align:start position:0%
learning rates being too high or by some
 

00:16:42.260 --> 00:16:43.689 align:start position:0%
learning rates being too high or by some
kind<00:16:42.410><c> of</c><00:16:42.470><c> bad</c><00:16:42.680><c> training</c><00:16:43.040><c> example</c><00:16:43.399><c> that</c><00:16:43.579><c> you</c>

00:16:43.689 --> 00:16:43.699 align:start position:0%
kind of bad training example that you
 

00:16:43.699 --> 00:16:46.660 align:start position:0%
kind of bad training example that you
haven't<00:16:44.029><c> sanitized</c><00:16:44.660><c> or</c><00:16:44.959><c> pre-processed</c><00:16:45.920><c> but</c>

00:16:46.660 --> 00:16:46.670 align:start position:0%
haven't sanitized or pre-processed but
 

00:16:46.670 --> 00:16:48.430 align:start position:0%
haven't sanitized or pre-processed but
under<00:16:47.029><c> the</c><00:16:47.089><c> debugger</c><00:16:47.690><c> should</c><00:16:47.870><c> help</c><00:16:48.050><c> you</c><00:16:48.140><c> find</c>

00:16:48.430 --> 00:16:48.440 align:start position:0%
under the debugger should help you find
 

00:16:48.440 --> 00:16:49.630 align:start position:0%
under the debugger should help you find
the<00:16:48.529><c> root</c><00:16:48.680><c> cause</c><00:16:48.890><c> of</c><00:16:48.920><c> that</c><00:16:49.220><c> kind</c><00:16:49.370><c> of</c><00:16:49.430><c> issues</c>

00:16:49.630 --> 00:16:49.640 align:start position:0%
the root cause of that kind of issues
 

00:16:49.640 --> 00:16:55.180 align:start position:0%
the root cause of that kind of issues
more<00:16:49.820><c> more</c><00:16:50.089><c> quickly</c><00:16:52.480><c> so</c><00:16:53.480><c> the</c><00:16:53.870><c> TF</c><00:16:54.320><c> debugger</c><00:16:55.010><c> is</c>

00:16:55.180 --> 00:16:55.190 align:start position:0%
more more quickly so the TF debugger is
 

00:16:55.190 --> 00:16:57.310 align:start position:0%
more more quickly so the TF debugger is
a<00:16:55.220><c> command-line</c><00:16:55.610><c> tool</c><00:16:55.910><c> it's</c><00:16:56.480><c> nice</c><00:16:56.690><c> it's</c><00:16:57.050><c> low</c>

00:16:57.310 --> 00:16:57.320 align:start position:0%
a command-line tool it's nice it's low
 

00:16:57.320 --> 00:16:59.920 align:start position:0%
a command-line tool it's nice it's low
footprint<00:16:57.680><c> you</c><00:16:57.920><c> can</c><00:16:58.399><c> use</c><00:16:59.240><c> it</c><00:16:59.390><c> if</c><00:16:59.630><c> you</c><00:16:59.750><c> have</c>

00:16:59.920 --> 00:16:59.930 align:start position:0%
footprint you can use it if you have
 

00:16:59.930 --> 00:17:01.389 align:start position:0%
footprint you can use it if you have
access<00:17:00.199><c> to</c><00:17:00.350><c> a</c><00:17:00.380><c> computer</c><00:17:00.500><c> only</c><00:17:00.829><c> via</c><00:17:01.130><c> a</c><00:17:01.190><c> terminal</c>

00:17:01.389 --> 00:17:01.399 align:start position:0%
access to a computer only via a terminal
 

00:17:01.399 --> 00:17:04.179 align:start position:0%
access to a computer only via a terminal
but<00:17:02.060><c> obviously</c><00:17:02.480><c> it's</c><00:17:02.660><c> going</c><00:17:02.810><c> to</c><00:17:02.899><c> be</c><00:17:03.189><c> even</c>

00:17:04.179 --> 00:17:04.189 align:start position:0%
but obviously it's going to be even
 

00:17:04.189 --> 00:17:05.740 align:start position:0%
but obviously it's going to be even
nicer<00:17:04.400><c> if</c><00:17:04.699><c> we</c><00:17:04.760><c> can</c><00:17:05.030><c> debug</c><00:17:05.360><c> the</c><00:17:05.480><c> tensorflow</c>

00:17:05.740 --> 00:17:05.750 align:start position:0%
nicer if we can debug the tensorflow
 

00:17:05.750 --> 00:17:08.890 align:start position:0%
nicer if we can debug the tensorflow
models<00:17:06.199><c> in</c><00:17:06.380><c> a</c><00:17:06.799><c> graphical</c><00:17:07.549><c> user</c><00:17:07.669><c> interface</c><00:17:08.240><c> so</c>

00:17:08.890 --> 00:17:08.900 align:start position:0%
models in a graphical user interface so
 

00:17:08.900 --> 00:17:11.380 align:start position:0%
models in a graphical user interface so
I'm<00:17:09.110><c> excited</c><00:17:09.319><c> to</c><00:17:09.589><c> tell</c><00:17:10.100><c> you</c><00:17:10.220><c> about</c><00:17:10.339><c> a</c><00:17:10.669><c> feature</c>

00:17:11.380 --> 00:17:11.390 align:start position:0%
I'm excited to tell you about a feature
 

00:17:11.390 --> 00:17:12.610 align:start position:0%
I'm excited to tell you about a feature
of<00:17:11.540><c> tensorflow</c><00:17:11.900><c> that's</c><00:17:12.199><c> upcoming</c>

00:17:12.610 --> 00:17:12.620 align:start position:0%
of tensorflow that's upcoming
 

00:17:12.620 --> 00:17:14.559 align:start position:0%
of tensorflow that's upcoming
so<00:17:13.160><c> it's</c><00:17:13.280><c> called</c><00:17:13.459><c> tensor</c><00:17:13.939><c> board</c><00:17:14.150><c> debugger</c>

00:17:14.559 --> 00:17:14.569 align:start position:0%
so it's called tensor board debugger
 

00:17:14.569 --> 00:17:17.110 align:start position:0%
so it's called tensor board debugger
plugin<00:17:14.870><c> or</c><00:17:14.990><c> visual</c><00:17:15.709><c> graphical</c><00:17:16.520><c> debugger</c><00:17:16.730><c> for</c>

00:17:17.110 --> 00:17:17.120 align:start position:0%
plugin or visual graphical debugger for
 

00:17:17.120 --> 00:17:19.120 align:start position:0%
plugin or visual graphical debugger for
tensorflow<00:17:17.780><c> so</c><00:17:18.110><c> it's</c><00:17:18.230><c> not</c><00:17:18.350><c> included</c><00:17:18.620><c> in</c><00:17:19.010><c> the</c>

00:17:19.120 --> 00:17:19.130 align:start position:0%
tensorflow so it's not included in the
 

00:17:19.130 --> 00:17:20.819 align:start position:0%
tensorflow so it's not included in the
latest<00:17:19.400><c> release</c><00:17:19.760><c> of</c>

00:17:20.819 --> 00:17:20.829 align:start position:0%
latest release of
 

00:17:20.829 --> 00:17:23.409 align:start position:0%
latest release of
tensorflow<00:17:21.829><c> which</c><00:17:22.100><c> is</c><00:17:22.220><c> 1.5</c><00:17:22.610><c> but</c><00:17:22.970><c> it's</c><00:17:23.089><c> coming</c>

00:17:23.409 --> 00:17:23.419 align:start position:0%
tensorflow which is 1.5 but it's coming
 

00:17:23.419 --> 00:17:26.049 align:start position:0%
tensorflow which is 1.5 but it's coming
in<00:17:23.660><c> the</c><00:17:23.900><c> next</c><00:17:24.079><c> release</c><00:17:24.290><c> 1.6</c><00:17:24.980><c> it's</c><00:17:25.819><c> available</c>

00:17:26.049 --> 00:17:26.059 align:start position:0%
in the next release 1.6 it's available
 

00:17:26.059 --> 00:17:28.810 align:start position:0%
in the next release 1.6 it's available
for<00:17:26.419><c> preview</c><00:17:26.809><c> in</c><00:17:26.990><c> Knightley's</c><00:17:27.410><c> so</c><00:17:27.709><c> you</c><00:17:28.669><c> can</c>

00:17:28.810 --> 00:17:28.820 align:start position:0%
for preview in Knightley's so you can
 

00:17:28.820 --> 00:17:30.370 align:start position:0%
for preview in Knightley's so you can
copy<00:17:29.030><c> and</c><00:17:29.150><c> paste</c><00:17:29.270><c> the</c><00:17:29.690><c> code</c><00:17:29.840><c> from</c><00:17:30.080><c> here</c>

00:17:30.370 --> 00:17:30.380 align:start position:0%
copy and paste the code from here
 

00:17:30.380 --> 00:17:31.960 align:start position:0%
copy and paste the code from here
install<00:17:31.010><c> those</c><00:17:31.160><c> nightly</c><00:17:31.580><c> builds</c><00:17:31.850><c> of</c>

00:17:31.960 --> 00:17:31.970 align:start position:0%
install those nightly builds of
 

00:17:31.970 --> 00:17:34.690 align:start position:0%
install those nightly builds of
tensorflow<00:17:32.240><c> and</c><00:17:32.600><c> pencil</c><00:17:33.500><c> board</c><00:17:33.650><c> and</c><00:17:33.830><c> you</c><00:17:34.520><c> can</c>

00:17:34.690 --> 00:17:34.700 align:start position:0%
tensorflow and pencil board and you can
 

00:17:34.700 --> 00:17:36.460 align:start position:0%
tensorflow and pencil board and you can
use<00:17:34.820><c> the</c><00:17:34.970><c> feature</c><00:17:35.150><c> so</c><00:17:35.840><c> after</c><00:17:36.260><c> you</c><00:17:36.320><c> have</c>

00:17:36.460 --> 00:17:36.470 align:start position:0%
use the feature so after you have
 

00:17:36.470 --> 00:17:39.310 align:start position:0%
use the feature so after you have
installed<00:17:36.740><c> these</c><00:17:37.730><c> packages</c><00:17:38.270><c> you</c><00:17:38.510><c> can</c><00:17:38.720><c> run</c><00:17:39.290><c> a</c>

00:17:39.310 --> 00:17:39.320 align:start position:0%
installed these packages you can run a
 

00:17:39.320 --> 00:17:41.530 align:start position:0%
installed these packages you can run a
command<00:17:39.559><c> so</c><00:17:39.830><c> all</c><00:17:40.549><c> the</c><00:17:40.760><c> code</c><00:17:40.909><c> in</c><00:17:41.059><c> my</c><00:17:41.150><c> slides</c><00:17:41.390><c> are</c>

00:17:41.530 --> 00:17:41.540 align:start position:0%
command so all the code in my slides are
 

00:17:41.540 --> 00:17:43.540 align:start position:0%
command so all the code in my slides are
copy<00:17:41.720><c> paste</c><00:17:41.990><c> executables</c>

00:17:43.540 --> 00:17:43.550 align:start position:0%
copy paste executables
 

00:17:43.550 --> 00:17:44.800 align:start position:0%
copy paste executables
yeah<00:17:43.670><c> so</c><00:17:43.850><c> these</c><00:17:44.030><c> are</c><00:17:44.150><c> about</c><00:17:44.330><c> the</c><00:17:44.540><c> main</c>

00:17:44.800 --> 00:17:44.810 align:start position:0%
yeah so these are about the main
 

00:17:44.810 --> 00:17:48.100 align:start position:0%
yeah so these are about the main
features<00:17:44.840><c> of</c><00:17:45.140><c> upcoming</c><00:17:45.830><c> tool</c><00:17:46.370><c> so</c><00:17:46.970><c> if</c><00:17:47.960><c> you're</c>

00:17:48.100 --> 00:17:48.110 align:start position:0%
features of upcoming tool so if you're
 

00:17:48.110 --> 00:17:49.540 align:start position:0%
features of upcoming tool so if you're
interested<00:17:48.470><c> please</c><00:17:48.500><c> copy</c><00:17:49.040><c> and</c><00:17:49.220><c> paste</c><00:17:49.400><c> these</c>

00:17:49.540 --> 00:17:49.550 align:start position:0%
interested please copy and paste these
 

00:17:49.550 --> 00:17:52.990 align:start position:0%
interested please copy and paste these
code<00:17:49.790><c> and</c><00:17:50.030><c> try</c><00:17:50.390><c> it</c><00:17:50.450><c> out</c><00:17:51.430><c> this</c><00:17:52.430><c> light</c><00:17:52.640><c> here</c><00:17:52.820><c> is</c>

00:17:52.990 --> 00:17:53.000 align:start position:0%
code and try it out this light here is
 

00:17:53.000 --> 00:17:54.820 align:start position:0%
code and try it out this light here is
just<00:17:53.390><c> a</c><00:17:53.510><c> reminder</c><00:17:53.750><c> of</c><00:17:53.930><c> the</c><00:17:54.200><c> main</c><00:17:54.350><c> features</c><00:17:54.680><c> in</c>

00:17:54.820 --> 00:17:54.830 align:start position:0%
just a reminder of the main features in
 

00:17:54.830 --> 00:17:58.870 align:start position:0%
just a reminder of the main features in
here<00:17:55.540><c> ok</c><00:17:56.540><c> so</c><00:17:56.570><c> as</c><00:17:56.930><c> a</c><00:17:57.280><c> summary</c><00:17:58.280><c> we</c><00:17:58.340><c> see</c><00:17:58.760><c> that</c>

00:17:58.870 --> 00:17:58.880 align:start position:0%
here ok so as a summary we see that
 

00:17:58.880 --> 00:18:00.490 align:start position:0%
here ok so as a summary we see that
there<00:17:59.060><c> are</c><00:17:59.150><c> two</c><00:17:59.300><c> ways</c><00:17:59.480><c> to</c><00:17:59.690><c> represent</c><00:17:59.930><c> machine</c>

00:18:00.490 --> 00:18:00.500 align:start position:0%
there are two ways to represent machine
 

00:18:00.500 --> 00:18:02.740 align:start position:0%
there are two ways to represent machine
learning<00:18:00.710><c> models</c><00:18:01.010><c> intensive</c><00:18:01.400><c> flow</c><00:18:01.550><c> or</c><00:18:02.330><c> in</c><00:18:02.540><c> any</c>

00:18:02.740 --> 00:18:02.750 align:start position:0%
learning models intensive flow or in any
 

00:18:02.750 --> 00:18:04.870 align:start position:0%
learning models intensive flow or in any
deep<00:18:03.260><c> learning</c><00:18:03.380><c> framework</c><00:18:03.830><c> either</c><00:18:04.130><c> as</c><00:18:04.370><c> a</c><00:18:04.400><c> as</c><00:18:04.850><c> a</c>

00:18:04.870 --> 00:18:04.880 align:start position:0%
deep learning framework either as a as a
 

00:18:04.880 --> 00:18:07.360 align:start position:0%
deep learning framework either as a as a
data<00:18:05.180><c> structure</c><00:18:05.480><c> or</c><00:18:05.750><c> as</c><00:18:06.110><c> a</c><00:18:06.140><c> program</c><00:18:06.650><c> if</c><00:18:06.950><c> it's</c><00:18:07.280><c> a</c>

00:18:07.360 --> 00:18:07.370 align:start position:0%
data structure or as a program if it's a
 

00:18:07.370 --> 00:18:08.380 align:start position:0%
data structure or as a program if it's a
data<00:18:07.550><c> structure</c><00:18:07.820><c> then</c><00:18:08.090><c> you</c><00:18:08.150><c> will</c><00:18:08.270><c> get</c>

00:18:08.380 --> 00:18:08.390 align:start position:0%
data structure then you will get
 

00:18:08.390 --> 00:18:10.750 align:start position:0%
data structure then you will get
symbolic<00:18:09.320><c> execution</c><00:18:09.440><c> and</c><00:18:09.950><c> symbolic</c>

00:18:10.750 --> 00:18:10.760 align:start position:0%
symbolic execution and symbolic
 

00:18:10.760 --> 00:18:12.510 align:start position:0%
symbolic execution and symbolic
execution<00:18:10.910><c> is</c><00:18:11.330><c> good</c><00:18:11.510><c> for</c><00:18:11.720><c> deployment</c>

00:18:12.510 --> 00:18:12.520 align:start position:0%
execution is good for deployment
 

00:18:12.520 --> 00:18:15.430 align:start position:0%
execution is good for deployment
distribution<00:18:13.520><c> and</c><00:18:13.760><c> optimization</c><00:18:14.540><c> and</c><00:18:14.750><c> if</c>

00:18:15.430 --> 00:18:15.440 align:start position:0%
distribution and optimization and if
 

00:18:15.440 --> 00:18:17.170 align:start position:0%
distribution and optimization and if
it's<00:18:15.590><c> a</c><00:18:15.650><c> program</c><00:18:15.950><c> that</c><00:18:15.980><c> you</c><00:18:16.190><c> will</c><00:18:16.700><c> get</c><00:18:16.850><c> eager</c>

00:18:17.170 --> 00:18:17.180 align:start position:0%
it's a program that you will get eager
 

00:18:17.180 --> 00:18:18.430 align:start position:0%
it's a program that you will get eager
execution<00:18:17.660><c> it's</c><00:18:17.840><c> good</c><00:18:17.990><c> for</c><00:18:18.170><c> prototyping</c>

00:18:18.430 --> 00:18:18.440 align:start position:0%
execution it's good for prototyping
 

00:18:18.440 --> 00:18:21.010 align:start position:0%
execution it's good for prototyping
debugging<00:18:19.340><c> and</c><00:18:19.600><c> writing</c><00:18:20.600><c> control</c><00:18:20.870><c> flow</c>

00:18:21.010 --> 00:18:21.020 align:start position:0%
debugging and writing control flow
 

00:18:21.020 --> 00:18:24.070 align:start position:0%
debugging and writing control flow
structures<00:18:21.470><c> and</c><00:18:22.340><c> it's</c><00:18:22.520><c> also</c><00:18:23.120><c> easier</c><00:18:23.870><c> to</c><00:18:23.960><c> learn</c>

00:18:24.070 --> 00:18:24.080 align:start position:0%
structures and it's also easier to learn
 

00:18:24.080 --> 00:18:26.230 align:start position:0%
structures and it's also easier to learn
and<00:18:24.500><c> the</c><00:18:25.160><c> currently</c><00:18:25.490><c> tensorflow</c><00:18:25.760><c> supports</c>

00:18:26.230 --> 00:18:26.240 align:start position:0%
and the currently tensorflow supports
 

00:18:26.240 --> 00:18:27.640 align:start position:0%
and the currently tensorflow supports
both<00:18:26.510><c> modes</c><00:18:26.780><c> so</c><00:18:27.050><c> you</c><00:18:27.140><c> can</c><00:18:27.290><c> pick</c><00:18:27.470><c> and</c><00:18:27.500><c> choose</c>

00:18:27.640 --> 00:18:27.650 align:start position:0%
both modes so you can pick and choose
 

00:18:27.650 --> 00:18:29.410 align:start position:0%
both modes so you can pick and choose
the<00:18:28.010><c> best</c><00:18:28.370><c> mode</c><00:18:28.640><c> for</c><00:18:28.820><c> you</c><00:18:28.910><c> depending</c><00:18:29.270><c> on</c><00:18:29.330><c> your</c>

00:18:29.410 --> 00:18:29.420 align:start position:0%
the best mode for you depending on your
 

00:18:29.420 --> 00:18:33.010 align:start position:0%
the best mode for you depending on your
need<00:18:29.630><c> and</c><00:18:30.550><c> we</c><00:18:31.550><c> also</c><00:18:31.730><c> went</c><00:18:32.210><c> over</c><00:18:32.360><c> tens</c><00:18:32.780><c> of</c><00:18:32.870><c> load</c>

00:18:33.010 --> 00:18:33.020 align:start position:0%
need and we also went over tens of load
 

00:18:33.020 --> 00:18:34.900 align:start position:0%
need and we also went over tens of load
debugger<00:18:33.980><c> both</c><00:18:34.250><c> the</c><00:18:34.490><c> command</c><00:18:34.730><c> line</c><00:18:34.820><c> interface</c>

00:18:34.900 --> 00:18:34.910 align:start position:0%
debugger both the command line interface
 

00:18:34.910 --> 00:18:37.540 align:start position:0%
debugger both the command line interface
and<00:18:35.360><c> the</c><00:18:35.420><c> browser</c><00:18:36.170><c> version</c><00:18:36.440><c> which</c><00:18:37.100><c> will</c><00:18:37.250><c> help</c>

00:18:37.540 --> 00:18:37.550 align:start position:0%
and the browser version which will help
 

00:18:37.550 --> 00:18:40.660 align:start position:0%
and the browser version which will help
you<00:18:37.670><c> debug</c><00:18:38.390><c> your</c><00:18:38.600><c> model</c><00:18:38.990><c> more</c><00:18:39.110><c> efficiently</c><00:18:39.670><c> so</c>

00:18:40.660 --> 00:18:40.670 align:start position:0%
you debug your model more efficiently so
 

00:18:40.670 --> 00:18:42.360 align:start position:0%
you debug your model more efficiently so
with<00:18:41.000><c> that</c><00:18:41.090><c> I'm</c><00:18:41.330><c> going</c><00:18:41.450><c> to</c><00:18:41.510><c> thank</c><00:18:41.780><c> my</c>

00:18:42.360 --> 00:18:42.370 align:start position:0%
with that I'm going to thank my
 

00:18:42.370 --> 00:18:44.650 align:start position:0%
with that I'm going to thank my
colleagues<00:18:43.370><c> on</c><00:18:43.640><c> the</c><00:18:43.700><c> Google</c><00:18:44.030><c> brain</c><00:18:44.120><c> team</c><00:18:44.360><c> both</c>

00:18:44.650 --> 00:18:44.660 align:start position:0%
colleagues on the Google brain team both
 

00:18:44.660 --> 00:18:45.940 align:start position:0%
colleagues on the Google brain team both
in<00:18:44.840><c> the</c><00:18:44.960><c> Mountain</c><00:18:45.200><c> View</c><00:18:45.230><c> headquarters</c><00:18:45.470><c> and</c>

00:18:45.940 --> 00:18:45.950 align:start position:0%
in the Mountain View headquarters and
 

00:18:45.950 --> 00:18:48.550 align:start position:0%
in the Mountain View headquarters and
here<00:18:46.220><c> in</c><00:18:46.370><c> Cambridge</c><00:18:46.720><c> Qi</c><00:18:47.720><c> and</c><00:18:47.960><c> Mahima</c><00:18:48.260><c> are</c><00:18:48.500><c> the</c>

00:18:48.550 --> 00:18:48.560 align:start position:0%
here in Cambridge Qi and Mahima are the
 

00:18:48.560 --> 00:18:50.530 align:start position:0%
here in Cambridge Qi and Mahima are the
two<00:18:48.830><c> collaborators</c><00:18:49.460><c> with</c><00:18:49.700><c> me</c><00:18:49.850><c> on</c><00:18:50.030><c> the</c><00:18:50.240><c> tensor</c>

00:18:50.530 --> 00:18:50.540 align:start position:0%
two collaborators with me on the tensor
 

00:18:50.540 --> 00:18:52.530 align:start position:0%
two collaborators with me on the tensor
board<00:18:50.750><c> debugger</c><00:18:51.110><c> plug-in</c><00:18:51.500><c> project</c><00:18:51.920><c> and</c>

00:18:52.530 --> 00:18:52.540 align:start position:0%
board debugger plug-in project and
 

00:18:52.540 --> 00:18:54.400 align:start position:0%
board debugger plug-in project and
tensorflow<00:18:53.540><c> is</c><00:18:53.750><c> an</c><00:18:53.870><c> open</c><00:18:54.050><c> source</c><00:18:54.230><c> project</c>

00:18:54.400 --> 00:18:54.410 align:start position:0%
tensorflow is an open source project
 

00:18:54.410 --> 00:18:57.070 align:start position:0%
tensorflow is an open source project
there<00:18:54.860><c> have</c><00:18:54.980><c> been</c><00:18:55.100><c> over</c><00:18:55.670><c> 1,000</c><00:18:56.480><c> contributors</c>

00:18:57.070 --> 00:18:57.080 align:start position:0%
there have been over 1,000 contributors
 

00:18:57.080 --> 00:18:58.750 align:start position:0%
there have been over 1,000 contributors
like<00:18:57.110><c> you</c><00:18:57.410><c> who</c><00:18:57.680><c> have</c><00:18:57.860><c> arm</c><00:18:58.100><c> fixed</c><00:18:58.370><c> bugs</c><00:18:58.550><c> and</c>

00:18:58.750 --> 00:18:58.760 align:start position:0%
like you who have arm fixed bugs and
 

00:18:58.760 --> 00:19:00.280 align:start position:0%
like you who have arm fixed bugs and
contributed<00:18:59.210><c> new</c><00:18:59.270><c> features</c><00:18:59.600><c> so</c><00:18:59.870><c> if</c><00:18:59.990><c> you</c><00:19:00.110><c> see</c>

00:19:00.280 --> 00:19:00.290 align:start position:0%
contributed new features so if you see
 

00:19:00.290 --> 00:19:02.020 align:start position:0%
contributed new features so if you see
any<00:19:00.440><c> interesting</c><00:19:01.280><c> things</c><00:19:01.430><c> that</c><00:19:01.490><c> you</c><00:19:01.700><c> can</c><00:19:01.880><c> do</c>

00:19:02.020 --> 00:19:02.030 align:start position:0%
any interesting things that you can do
 

00:19:02.030 --> 00:19:03.460 align:start position:0%
any interesting things that you can do
feel<00:19:02.480><c> free</c><00:19:02.600><c> to</c><00:19:02.660><c> contribute</c><00:19:03.110><c> to</c><00:19:03.200><c> the</c><00:19:03.260><c> tensor</c>

00:19:03.460 --> 00:19:03.470 align:start position:0%
feel free to contribute to the tensor
 

00:19:03.470 --> 00:19:05.680 align:start position:0%
feel free to contribute to the tensor
flow<00:19:03.530><c> on</c><00:19:03.770><c> github</c><00:19:04.040><c> if</c><00:19:04.700><c> it</c><00:19:04.820><c> has</c><00:19:04.940><c> have</c><00:19:05.300><c> questions</c>

00:19:05.680 --> 00:19:05.690 align:start position:0%
flow on github if it has have questions
 

00:19:05.690 --> 00:19:09.130 align:start position:0%
flow on github if it has have questions
please<00:19:06.260><c> email</c><00:19:06.620><c> me</c><00:19:06.830><c> and</c><00:19:07.130><c> if</c><00:19:07.730><c> you</c><00:19:07.820><c> see</c><00:19:08.450><c> any</c><00:19:08.600><c> bugs</c>

00:19:09.130 --> 00:19:09.140 align:start position:0%
please email me and if you see any bugs
 

00:19:09.140 --> 00:19:10.990 align:start position:0%
please email me and if you see any bugs
or<00:19:09.350><c> feature</c><00:19:09.620><c> requests</c><00:19:10.040><c> about</c><00:19:10.220><c> tensor</c><00:19:10.700><c> flow</c><00:19:10.790><c> or</c>

00:19:10.990 --> 00:19:11.000 align:start position:0%
or feature requests about tensor flow or
 

00:19:11.000 --> 00:19:13.120 align:start position:0%
or feature requests about tensor flow or
tensor<00:19:11.240><c> boards</c><00:19:11.480><c> you</c><00:19:11.930><c> can</c><00:19:11.990><c> follow</c><00:19:12.290><c> the</c><00:19:12.710><c> bugs</c><00:19:12.920><c> on</c>

00:19:13.120 --> 00:19:13.130 align:start position:0%
tensor boards you can follow the bugs on
 

00:19:13.130 --> 00:19:16.450 align:start position:0%
tensor boards you can follow the bugs on
these<00:19:13.430><c> links</c><00:19:14.950><c> thank</c><00:19:15.950><c> you</c><00:19:16.040><c> very</c><00:19:16.160><c> much</c><00:19:16.280><c> for</c><00:19:16.370><c> your</c>

00:19:16.450 --> 00:19:16.460 align:start position:0%
these links thank you very much for your
 

00:19:16.460 --> 00:19:16.930 align:start position:0%
these links thank you very much for your
attention

00:19:16.930 --> 00:19:16.940 align:start position:0%
attention
 

00:19:16.940 --> 00:19:17.710 align:start position:0%
attention
questions

00:19:17.710 --> 00:19:17.720 align:start position:0%
questions
 

00:19:17.720 --> 00:19:20.910 align:start position:0%
questions
[Applause]

