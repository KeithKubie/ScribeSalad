WEBVTT
Kind: captions
Language: en

00:00:00.150 --> 00:00:02.210
So I think that is a clever idea, random research.

00:00:02.210 --> 00:00:04.740
That was one of the ways that we got unstuck

00:00:04.740 --> 00:00:07.320
when we were in local optima when we were doing

00:00:07.320 --> 00:00:11.510
optimization. Maybe this will also come in handy, in this setting.

00:00:11.510 --> 00:00:14.450
&gt;&gt; Yeah I like the idea because I came up with it but I can

00:00:14.450 --> 00:00:17.910
see a couple, you know, but I can see a couple of problems with it.

00:00:17.910 --> 00:00:19.730
&gt;&gt; But well you can't see a problem with it yet because

00:00:19.730 --> 00:00:22.920
it's not even clear what you meant. Or maybe that's the first problem.

00:00:22.920 --> 00:00:25.280
&gt;&gt; Well it was clear what I meant in my head,

00:00:25.280 --> 00:00:27.080
now if you're going to want my mouth to understand what my head

00:00:27.080 --> 00:00:29.630
meant, well then your just asking for too much, so I really kind

00:00:29.630 --> 00:00:32.229
of meant, random restarts where you just kind of start it over,

00:00:32.229 --> 00:00:34.770
over, over, and over again, the problem with that, the problem with that

00:00:34.770 --> 00:00:38.520
is, it's already going to take a long time, you know, infinity

00:00:38.520 --> 00:00:41.580
to get to a good answer. And we thought we might have this

00:00:41.580 --> 00:00:44.170
issue with randomized optimization, certainly this

00:00:44.170 --> 00:00:45.440
is going to be a problem here,

00:00:45.440 --> 00:00:51.590
but it still feels like there's something we could do with the randomness

00:00:51.590 --> 00:00:56.160
idea that would help us to overcome this problem with

00:00:56.160 --> 00:00:58.890
using what we know. And only using what we know.

00:00:58.890 --> 00:01:02.820
&gt;&gt; Alright, alright, so I, I like that direction. So let's think a little

00:01:02.820 --> 00:01:06.260
bit about what that could mean. So random restarts was one idea that we had

00:01:06.260 --> 00:01:07.900
when we were talking in optimization about

00:01:07.900 --> 00:01:09.860
getting unstuck, which is, let yourself get

00:01:09.860 --> 00:01:11.450
stuck, and then once you realize you're

00:01:11.450 --> 00:01:13.990
stuck, throw everything out and start over again.

00:01:13.990 --> 00:01:14.590
&gt;&gt; Right.

00:01:14.590 --> 00:01:16.620
&gt;&gt; And you're right. That's going to end up being really slow, but we

00:01:16.620 --> 00:01:18.600
had a different way of Of using randomness

00:01:18.600 --> 00:01:22.130
to get unstuck. In, for example, algorithms like

00:01:22.130 --> 00:01:23.390
&gt;&gt; Simulating annealing

00:01:23.390 --> 00:01:26.040
&gt;&gt; That's what I was thinking about. Yeah, so

00:01:26.040 --> 00:01:28.720
Simulating annealing. The idea is Simulating annealing is

00:01:28.720 --> 00:01:32.090
that you tend to, you take up hill steps. But

00:01:32.090 --> 00:01:34.330
occassionally, you're willing to take a random down hill step.

00:01:34.330 --> 00:01:35.140
&gt;&gt; Right.

00:01:35.140 --> 00:01:37.160
&gt;&gt; So, it's kind of this mixture

00:01:37.160 --> 00:01:41.900
of choosing randomly. And using what you know,

00:01:41.900 --> 00:01:44.650
what seems to be the best. Right, and so, yeah,

00:01:44.650 --> 00:01:46.580
yeah, I can see that. So then the random restarts thing

00:01:46.580 --> 00:01:48.730
kind of works if instead of it being a random restart,

00:01:48.730 --> 00:01:51.910
it's, it's just a random action every once in a while.

00:01:51.910 --> 00:01:56.592
&gt;&gt; Yeah, excellent alright. So simulated annealing like-approach

00:01:56.592 --> 00:02:00.670
says we're going to take a random action sometimes.

00:02:00.670 --> 00:02:03.280
So then our exploration policy, our approximate policy,

00:02:03.280 --> 00:02:07.640
is going to be. To, we're in state s.

00:02:07.640 --> 00:02:11.280
Figure out the best action in that state according to our estimate

00:02:11.280 --> 00:02:14.940
and take that with probability I don't know. let's say one minus epsilon.

00:02:14.940 --> 00:02:15.685
&gt;&gt; Mm-hm.

00:02:15.685 --> 00:02:18.630
&gt;&gt; In otherwise take a random action and see what happens.

00:02:18.630 --> 00:02:22.470
&gt;&gt; I have a probability of epsilon. Yeah that's whats left over so.

00:02:22.470 --> 00:02:24.010
&gt;&gt; Right so that's why you had one minus

00:02:24.010 --> 00:02:26.840
epsilon because you want epsilon to be small. So epsilon

00:02:26.840 --> 00:02:28.800
is going to be. So every once in a while

00:02:28.800 --> 00:02:32.740
you will randomly act, oh and then that'll, that'll solve

00:02:32.740 --> 00:02:36.220
the sim annealing problem. Or do what sim annealing helps you with

00:02:36.220 --> 00:02:39.170
by just taking a random action in what looks like a bad direction,

00:02:39.170 --> 00:02:44.040
comparatively, sometimes. But it also means that you get to explore the whole

00:02:44.040 --> 00:02:47.220
space. And so you have a chance of actually learning the true Q.

00:02:47.220 --> 00:02:51.450
&gt;&gt; Exactly. So, and yet most of the time,

00:02:51.450 --> 00:02:53.390
you know, we're spending, assuming Epsilon is small, we're

00:02:53.390 --> 00:02:55.880
spending a lot of our time taking good actions,

00:02:55.880 --> 00:02:57.830
or actions that we think are good. But we're always

00:02:57.830 --> 00:02:59.500
holding out some probability of taking other

00:02:59.500 --> 00:03:02.050
actions to help us improve our Q hat.

00:03:02.050 --> 00:03:06.040
&gt;&gt; Mm, so if you do that infinitely long, and you've, this will, so this will

00:03:06.040 --> 00:03:09.100
let you visit SA. An infinite number of

00:03:09.100 --> 00:03:11.380
times, as long as epsilon is greater than zero.

00:03:11.380 --> 00:03:14.250
&gt;&gt; That's right and that the mdp is connected, right?

00:03:14.250 --> 00:03:16.760
So, there could be state action pairs, that just can't ever

00:03:16.760 --> 00:03:18.890
be reached, in which case you won't reach them. But that's

00:03:18.890 --> 00:03:21.750
okay, because since you can't reach them, they really don't matter.

00:03:21.750 --> 00:03:23.350
&gt;&gt; Yeah, they sort of don't exist.

00:03:23.350 --> 00:03:26.060
&gt;&gt; Exactly. Alright so let's let's focus in on this a

00:03:26.060 --> 00:03:27.690
little bit more because I think that this is now the

00:03:27.690 --> 00:03:30.560
first idea that we've had for choosing actions that has the

00:03:30.560 --> 00:03:34.250
property that it will learn and it will use what it learns.

00:03:34.250 --> 00:03:35.460
&gt;&gt; Mm, I like that.

