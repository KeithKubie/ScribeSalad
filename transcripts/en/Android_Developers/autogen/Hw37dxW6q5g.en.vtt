WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:03.740
hey everybody really glad that you could

00:00:03.740 --> 00:00:03.750
hey everybody really glad that you could
 

00:00:03.750 --> 00:00:07.160
hey everybody really glad that you could
join us here today I'm Kenny Stoltz I'm

00:00:07.160 --> 00:00:07.170
join us here today I'm Kenny Stoltz I'm
 

00:00:07.170 --> 00:00:09.919
join us here today I'm Kenny Stoltz I'm
a product manager on we're and I lead

00:00:09.919 --> 00:00:09.929
a product manager on we're and I lead
 

00:00:09.929 --> 00:00:11.930
a product manager on we're and I lead
product for some of the standalone and

00:00:11.930 --> 00:00:11.940
product for some of the standalone and
 

00:00:11.940 --> 00:00:15.470
product for some of the standalone and
iOS features and I'm Griff Hazen I'm a

00:00:15.470 --> 00:00:15.480
iOS features and I'm Griff Hazen I'm a
 

00:00:15.480 --> 00:00:16.939
iOS features and I'm Griff Hazen I'm a
software engineer and tech lead for

00:00:16.939 --> 00:00:16.949
software engineer and tech lead for
 

00:00:16.949 --> 00:00:19.580
software engineer and tech lead for
'where's developer platform so both of

00:00:19.580 --> 00:00:19.590
'where's developer platform so both of
 

00:00:19.590 --> 00:00:21.320
'where's developer platform so both of
us have been working on Android wear

00:00:21.320 --> 00:00:21.330
us have been working on Android wear
 

00:00:21.330 --> 00:00:24.529
us have been working on Android wear
since before 1.0 and today we're gonna

00:00:24.529 --> 00:00:24.539
since before 1.0 and today we're gonna
 

00:00:24.539 --> 00:00:26.150
since before 1.0 and today we're gonna
take you through a couple of the things

00:00:26.150 --> 00:00:26.160
take you through a couple of the things
 

00:00:26.160 --> 00:00:27.470
take you through a couple of the things
that you'll want to consider when you're

00:00:27.470 --> 00:00:27.480
that you'll want to consider when you're
 

00:00:27.480 --> 00:00:29.660
that you'll want to consider when you're
designing and building sandal own apps

00:00:29.660 --> 00:00:29.670
designing and building sandal own apps
 

00:00:29.670 --> 00:00:35.389
designing and building sandal own apps
in wear 2.0 okay so first a question why

00:00:35.389 --> 00:00:35.399
in wear 2.0 okay so first a question why
 

00:00:35.399 --> 00:00:37.340
in wear 2.0 okay so first a question why
would you build a standalone app there

00:00:37.340 --> 00:00:37.350
would you build a standalone app there
 

00:00:37.350 --> 00:00:39.350
would you build a standalone app there
are three reasons and the first is the

00:00:39.350 --> 00:00:39.360
are three reasons and the first is the
 

00:00:39.360 --> 00:00:41.869
are three reasons and the first is the
most obvious sometimes you just don't

00:00:41.869 --> 00:00:41.879
most obvious sometimes you just don't
 

00:00:41.879 --> 00:00:44.030
most obvious sometimes you just don't
have your phone with you the running is

00:00:44.030 --> 00:00:44.040
have your phone with you the running is
 

00:00:44.040 --> 00:00:46.250
have your phone with you the running is
an obvious use case where you might want

00:00:46.250 --> 00:00:46.260
an obvious use case where you might want
 

00:00:46.260 --> 00:00:48.319
an obvious use case where you might want
not to have some phone strapped to your

00:00:48.319 --> 00:00:48.329
not to have some phone strapped to your
 

00:00:48.329 --> 00:00:50.000
not to have some phone strapped to your
wrist and a bunch of other fitness

00:00:50.000 --> 00:00:50.010
wrist and a bunch of other fitness
 

00:00:50.010 --> 00:00:52.520
wrist and a bunch of other fitness
scenarios are similar but standalone

00:00:52.520 --> 00:00:52.530
scenarios are similar but standalone
 

00:00:52.530 --> 00:00:54.500
scenarios are similar but standalone
offers the opportunity to free you from

00:00:54.500 --> 00:00:54.510
offers the opportunity to free you from
 

00:00:54.510 --> 00:00:56.420
offers the opportunity to free you from
your phone in a lot of other situations

00:00:56.420 --> 00:00:56.430
your phone in a lot of other situations
 

00:00:56.430 --> 00:00:57.950
your phone in a lot of other situations
that you might find yourself in

00:00:57.950 --> 00:00:57.960
that you might find yourself in
 

00:00:57.960 --> 00:01:00.349
that you might find yourself in
throughout the day so if you run to the

00:01:00.349 --> 00:01:00.359
throughout the day so if you run to the
 

00:01:00.359 --> 00:01:01.939
throughout the day so if you run to the
store and you forget your phone if

00:01:01.939 --> 00:01:01.949
store and you forget your phone if
 

00:01:01.949 --> 00:01:03.380
store and you forget your phone if
you're doing chores around the house you

00:01:03.380 --> 00:01:03.390
you're doing chores around the house you
 

00:01:03.390 --> 00:01:05.060
you're doing chores around the house you
don't want to have it in your pocket if

00:01:05.060 --> 00:01:05.070
don't want to have it in your pocket if
 

00:01:05.070 --> 00:01:08.300
don't want to have it in your pocket if
your phone dies etc standalone will let

00:01:08.300 --> 00:01:08.310
your phone dies etc standalone will let
 

00:01:08.310 --> 00:01:10.730
your phone dies etc standalone will let
you still use that small screen on your

00:01:10.730 --> 00:01:10.740
you still use that small screen on your
 

00:01:10.740 --> 00:01:12.830
you still use that small screen on your
watch between the times when you've got

00:01:12.830 --> 00:01:12.840
watch between the times when you've got
 

00:01:12.840 --> 00:01:17.570
watch between the times when you've got
your phone with you second is extend the

00:01:17.570 --> 00:01:17.580
your phone with you second is extend the
 

00:01:17.580 --> 00:01:20.120
your phone with you second is extend the
building standalone apps is a lot more

00:01:20.120 --> 00:01:20.130
building standalone apps is a lot more
 

00:01:20.130 --> 00:01:22.520
building standalone apps is a lot more
like building mobile apps it's

00:01:22.520 --> 00:01:22.530
like building mobile apps it's
 

00:01:22.530 --> 00:01:25.310
like building mobile apps it's
particularly faster and easier to build

00:01:25.310 --> 00:01:25.320
particularly faster and easier to build
 

00:01:25.320 --> 00:01:27.170
particularly faster and easier to build
them if you already have an existing

00:01:27.170 --> 00:01:27.180
them if you already have an existing
 

00:01:27.180 --> 00:01:30.469
them if you already have an existing
mobile app so you'll spend less time

00:01:30.469 --> 00:01:30.479
mobile app so you'll spend less time
 

00:01:30.479 --> 00:01:32.780
mobile app so you'll spend less time
rewriting the basic infrastructure for

00:01:32.780 --> 00:01:32.790
rewriting the basic infrastructure for
 

00:01:32.790 --> 00:01:34.490
rewriting the basic infrastructure for
your app which means that you can spend

00:01:34.490 --> 00:01:34.500
your app which means that you can spend
 

00:01:34.500 --> 00:01:36.679
your app which means that you can spend
more time making your app better on

00:01:36.679 --> 00:01:36.689
more time making your app better on
 

00:01:36.689 --> 00:01:40.789
more time making your app better on
wearables the last reason is that

00:01:40.789 --> 00:01:40.799
wearables the last reason is that
 

00:01:40.799 --> 00:01:43.100
wearables the last reason is that
standalone apps will work on watches

00:01:43.100 --> 00:01:43.110
standalone apps will work on watches
 

00:01:43.110 --> 00:01:45.289
standalone apps will work on watches
connected to both Android and iOS

00:01:45.289 --> 00:01:45.299
connected to both Android and iOS
 

00:01:45.299 --> 00:01:48.859
connected to both Android and iOS
devices so you want to make your app as

00:01:48.859 --> 00:01:48.869
devices so you want to make your app as
 

00:01:48.869 --> 00:01:51.020
devices so you want to make your app as
you want to offer your app to as many

00:01:51.020 --> 00:01:51.030
you want to offer your app to as many
 

00:01:51.030 --> 00:01:53.179
you want to offer your app to as many
people as possible and if you follow the

00:01:53.179 --> 00:01:53.189
people as possible and if you follow the
 

00:01:53.189 --> 00:01:54.440
people as possible and if you follow the
design patterns that we'll share with

00:01:54.440 --> 00:01:54.450
design patterns that we'll share with
 

00:01:54.450 --> 00:01:57.109
design patterns that we'll share with
you you can write one wearable app that

00:01:57.109 --> 00:01:57.119
you you can write one wearable app that
 

00:01:57.119 --> 00:01:58.910
you you can write one wearable app that
will work on watches connected to both

00:01:58.910 --> 00:01:58.920
will work on watches connected to both
 

00:01:58.920 --> 00:02:03.020
will work on watches connected to both
devices okay so now we'll go through a

00:02:03.020 --> 00:02:03.030
devices okay so now we'll go through a
 

00:02:03.030 --> 00:02:04.370
devices okay so now we'll go through a
couple of things that you'll want to

00:02:04.370 --> 00:02:04.380
couple of things that you'll want to
 

00:02:04.380 --> 00:02:07.320
couple of things that you'll want to
consider before you start coding

00:02:07.320 --> 00:02:07.330
consider before you start coding
 

00:02:07.330 --> 00:02:10.930
consider before you start coding
so first of all what should a standalone

00:02:10.930 --> 00:02:10.940
so first of all what should a standalone
 

00:02:10.940 --> 00:02:13.870
so first of all what should a standalone
app do the easiest way to start is to

00:02:13.870 --> 00:02:13.880
app do the easiest way to start is to
 

00:02:13.880 --> 00:02:16.000
app do the easiest way to start is to
think about what your phone app does and

00:02:16.000 --> 00:02:16.010
think about what your phone app does and
 

00:02:16.010 --> 00:02:18.940
think about what your phone app does and
then distill that down so think about

00:02:18.940 --> 00:02:18.950
then distill that down so think about
 

00:02:18.950 --> 00:02:21.610
then distill that down so think about
what the most important tasks that you

00:02:21.610 --> 00:02:21.620
what the most important tasks that you
 

00:02:21.620 --> 00:02:23.320
what the most important tasks that you
are asked allows the user to accomplish

00:02:23.320 --> 00:02:23.330
are asked allows the user to accomplish
 

00:02:23.330 --> 00:02:25.810
are asked allows the user to accomplish
and then what flows are absolutely

00:02:25.810 --> 00:02:25.820
and then what flows are absolutely
 

00:02:25.820 --> 00:02:27.640
and then what flows are absolutely
necessary for these or to go through in

00:02:27.640 --> 00:02:27.650
necessary for these or to go through in
 

00:02:27.650 --> 00:02:31.510
necessary for these or to go through in
order to accomplish those tasks now you

00:02:31.510 --> 00:02:31.520
order to accomplish those tasks now you
 

00:02:31.520 --> 00:02:33.160
order to accomplish those tasks now you
want to think a little bit about your

00:02:33.160 --> 00:02:33.170
want to think a little bit about your
 

00:02:33.170 --> 00:02:34.990
want to think a little bit about your
user and how they'll be using your app

00:02:34.990 --> 00:02:35.000
user and how they'll be using your app
 

00:02:35.000 --> 00:02:37.930
user and how they'll be using your app
they're likely to be on the go so you

00:02:37.930 --> 00:02:37.940
they're likely to be on the go so you
 

00:02:37.940 --> 00:02:39.370
they're likely to be on the go so you
don't want to hold their attention for

00:02:39.370 --> 00:02:39.380
don't want to hold their attention for
 

00:02:39.380 --> 00:02:40.720
don't want to hold their attention for
too long and you want to make sure that

00:02:40.720 --> 00:02:40.730
too long and you want to make sure that
 

00:02:40.730 --> 00:02:42.010
too long and you want to make sure that
you're making it fast and easy to

00:02:42.010 --> 00:02:42.020
you're making it fast and easy to
 

00:02:42.020 --> 00:02:47.080
you're making it fast and easy to
complete those tasks keep in mind that

00:02:47.080 --> 00:02:47.090
complete those tasks keep in mind that
 

00:02:47.090 --> 00:02:49.180
complete those tasks keep in mind that
you don't want to let the user get

00:02:49.180 --> 00:02:49.190
you don't want to let the user get
 

00:02:49.190 --> 00:02:51.430
you don't want to let the user get
halfway through a task and then ask them

00:02:51.430 --> 00:02:51.440
halfway through a task and then ask them
 

00:02:51.440 --> 00:02:54.120
halfway through a task and then ask them
to switch from the watch to the phone

00:02:54.120 --> 00:02:54.130
to switch from the watch to the phone
 

00:02:54.130 --> 00:02:56.620
to switch from the watch to the phone
first of all obviously that might not

00:02:56.620 --> 00:02:56.630
first of all obviously that might not
 

00:02:56.630 --> 00:02:58.449
first of all obviously that might not
have their phone with them and second of

00:02:58.449 --> 00:02:58.459
have their phone with them and second of
 

00:02:58.459 --> 00:03:00.040
have their phone with them and second of
all they might get frustrated or lose

00:03:00.040 --> 00:03:00.050
all they might get frustrated or lose
 

00:03:00.050 --> 00:03:01.990
all they might get frustrated or lose
their place so you want to try to

00:03:01.990 --> 00:03:02.000
their place so you want to try to
 

00:03:02.000 --> 00:03:04.420
their place so you want to try to
support every flow that you can from end

00:03:04.420 --> 00:03:04.430
support every flow that you can from end
 

00:03:04.430 --> 00:03:08.320
support every flow that you can from end
to end on just the wear of them that's

00:03:08.320 --> 00:03:08.330
to end on just the wear of them that's
 

00:03:08.330 --> 00:03:11.530
to end on just the wear of them that's
said your user often has two awesome

00:03:11.530 --> 00:03:11.540
said your user often has two awesome
 

00:03:11.540 --> 00:03:14.320
said your user often has two awesome
devices with them at the same time so

00:03:14.320 --> 00:03:14.330
devices with them at the same time so
 

00:03:14.330 --> 00:03:16.840
devices with them at the same time so
it's great to make the to work and

00:03:16.840 --> 00:03:16.850
it's great to make the to work and
 

00:03:16.850 --> 00:03:19.330
it's great to make the to work and
harmony and have appropriate and useful

00:03:19.330 --> 00:03:19.340
harmony and have appropriate and useful
 

00:03:19.340 --> 00:03:22.660
harmony and have appropriate and useful
content on each screen the data layer

00:03:22.660 --> 00:03:22.670
content on each screen the data layer
 

00:03:22.670 --> 00:03:25.150
content on each screen the data layer
API is that we really that we released

00:03:25.150 --> 00:03:25.160
API is that we really that we released
 

00:03:25.160 --> 00:03:27.520
API is that we really that we released
with Android wear 1.0 will continue to

00:03:27.520 --> 00:03:27.530
with Android wear 1.0 will continue to
 

00:03:27.530 --> 00:03:29.590
with Android wear 1.0 will continue to
work and you can use those to build

00:03:29.590 --> 00:03:29.600
work and you can use those to build
 

00:03:29.600 --> 00:03:32.440
work and you can use those to build
multi-screen experiences with Android

00:03:32.440 --> 00:03:32.450
multi-screen experiences with Android
 

00:03:32.450 --> 00:03:38.050
multi-screen experiences with Android
phones finally you want to consider both

00:03:38.050 --> 00:03:38.060
phones finally you want to consider both
 

00:03:38.060 --> 00:03:40.330
phones finally you want to consider both
types of phone that your user might have

00:03:40.330 --> 00:03:40.340
types of phone that your user might have
 

00:03:40.340 --> 00:03:42.610
types of phone that your user might have
while they're using your app so we're

00:03:42.610 --> 00:03:42.620
while they're using your app so we're
 

00:03:42.620 --> 00:03:45.220
while they're using your app so we're
2.0 Developer Preview will allow you to

00:03:45.220 --> 00:03:45.230
2.0 Developer Preview will allow you to
 

00:03:45.230 --> 00:03:47.770
2.0 Developer Preview will allow you to
pair with an iOS phone once you've

00:03:47.770 --> 00:03:47.780
pair with an iOS phone once you've
 

00:03:47.780 --> 00:03:49.900
pair with an iOS phone once you've
paired with the phone you can side load

00:03:49.900 --> 00:03:49.910
paired with the phone you can side load
 

00:03:49.910 --> 00:03:52.930
paired with the phone you can side load
your app onto the watch and then test it

00:03:52.930 --> 00:03:52.940
your app onto the watch and then test it
 

00:03:52.940 --> 00:03:55.330
your app onto the watch and then test it
there are performance differences

00:03:55.330 --> 00:03:55.340
there are performance differences
 

00:03:55.340 --> 00:03:57.070
there are performance differences
particularly the amount of bandwidth

00:03:57.070 --> 00:03:57.080
particularly the amount of bandwidth
 

00:03:57.080 --> 00:03:59.290
particularly the amount of bandwidth
that you'll have so you really should

00:03:59.290 --> 00:03:59.300
that you'll have so you really should
 

00:03:59.300 --> 00:04:01.330
that you'll have so you really should
test and it's a great way to make sure

00:04:01.330 --> 00:04:01.340
test and it's a great way to make sure
 

00:04:01.340 --> 00:04:06.430
test and it's a great way to make sure
that you've got a standalone app

00:04:06.430 --> 00:04:06.440
 

00:04:06.440 --> 00:04:08.830
if you're already familiar with how to

00:04:08.830 --> 00:04:08.840
if you're already familiar with how to
 

00:04:08.840 --> 00:04:11.320
if you're already familiar with how to
architect an Android phone app you'll be

00:04:11.320 --> 00:04:11.330
architect an Android phone app you'll be
 

00:04:11.330 --> 00:04:13.390
architect an Android phone app you'll be
glad to learn that we're apps can now be

00:04:13.390 --> 00:04:13.400
glad to learn that we're apps can now be
 

00:04:13.400 --> 00:04:17.110
glad to learn that we're apps can now be
written in a very similar way sure the

00:04:17.110 --> 00:04:17.120
written in a very similar way sure the
 

00:04:17.120 --> 00:04:18.850
written in a very similar way sure the
user interface may need to be scoped

00:04:18.850 --> 00:04:18.860
user interface may need to be scoped
 

00:04:18.860 --> 00:04:20.740
user interface may need to be scoped
down to the most important user flows

00:04:20.740 --> 00:04:20.750
down to the most important user flows
 

00:04:20.750 --> 00:04:22.720
down to the most important user flows
and delimited real estate but the

00:04:22.720 --> 00:04:22.730
and delimited real estate but the
 

00:04:22.730 --> 00:04:24.760
and delimited real estate but the
underlying coding services can be

00:04:24.760 --> 00:04:24.770
underlying coding services can be
 

00:04:24.770 --> 00:04:26.530
underlying coding services can be
written in the same way and even shared

00:04:26.530 --> 00:04:26.540
written in the same way and even shared
 

00:04:26.540 --> 00:04:29.050
written in the same way and even shared
between phone and wear apps you can

00:04:29.050 --> 00:04:29.060
between phone and wear apps you can
 

00:04:29.060 --> 00:04:30.250
between phone and wear apps you can
you'll practice the cloud in the same

00:04:30.250 --> 00:04:30.260
you'll practice the cloud in the same
 

00:04:30.260 --> 00:04:32.530
you'll practice the cloud in the same
way use similar authentication methods

00:04:32.530 --> 00:04:32.540
way use similar authentication methods
 

00:04:32.540 --> 00:04:35.640
way use similar authentication methods
in the same cloud to device messaging

00:04:35.640 --> 00:04:35.650
in the same cloud to device messaging
 

00:04:35.650 --> 00:04:38.740
in the same cloud to device messaging
let's dig in to a few areas where we are

00:04:38.740 --> 00:04:38.750
let's dig in to a few areas where we are
 

00:04:38.750 --> 00:04:40.630
let's dig in to a few areas where we are
providing additional help for standalone

00:04:40.630 --> 00:04:40.640
providing additional help for standalone
 

00:04:40.640 --> 00:04:43.090
providing additional help for standalone
apps will also go through some Android

00:04:43.090 --> 00:04:43.100
apps will also go through some Android
 

00:04:43.100 --> 00:04:45.040
apps will also go through some Android
API s you may be familiar with on the

00:04:45.040 --> 00:04:45.050
API s you may be familiar with on the
 

00:04:45.050 --> 00:04:46.960
API s you may be familiar with on the
phone and how they can be applicable and

00:04:46.960 --> 00:04:46.970
phone and how they can be applicable and
 

00:04:46.970 --> 00:04:50.770
phone and how they can be applicable and
useful and we're first off we'll take a

00:04:50.770 --> 00:04:50.780
useful and we're first off we'll take a
 

00:04:50.780 --> 00:04:52.480
useful and we're first off we'll take a
look at how standalone wear apps can

00:04:52.480 --> 00:04:52.490
look at how standalone wear apps can
 

00:04:52.490 --> 00:04:54.070
look at how standalone wear apps can
communicate with cloud services and

00:04:54.070 --> 00:04:54.080
communicate with cloud services and
 

00:04:54.080 --> 00:04:57.820
communicate with cloud services and
store data one of the most important

00:04:57.820 --> 00:04:57.830
store data one of the most important
 

00:04:57.830 --> 00:04:59.710
store data one of the most important
platform changes to enable standalone

00:04:59.710 --> 00:04:59.720
platform changes to enable standalone
 

00:04:59.720 --> 00:05:02.200
platform changes to enable standalone
apps is the expansion of direct network

00:05:02.200 --> 00:05:02.210
apps is the expansion of direct network
 

00:05:02.210 --> 00:05:05.050
apps is the expansion of direct network
access where apps will now be able to

00:05:05.050 --> 00:05:05.060
access where apps will now be able to
 

00:05:05.060 --> 00:05:06.910
access where apps will now be able to
communicate directly with cloud services

00:05:06.910 --> 00:05:06.920
communicate directly with cloud services
 

00:05:06.920 --> 00:05:09.070
communicate directly with cloud services
and can also schedule background work

00:05:09.070 --> 00:05:09.080
and can also schedule background work
 

00:05:09.080 --> 00:05:13.060
and can also schedule background work
that requires network access when the

00:05:13.060 --> 00:05:13.070
that requires network access when the
 

00:05:13.070 --> 00:05:14.380
that requires network access when the
phone is connected over Bluetooth

00:05:14.380 --> 00:05:14.390
phone is connected over Bluetooth
 

00:05:14.390 --> 00:05:16.420
phone is connected over Bluetooth
network traffic proxy through the

00:05:16.420 --> 00:05:16.430
network traffic proxy through the
 

00:05:16.430 --> 00:05:19.030
network traffic proxy through the
phone's connections when the watch is

00:05:19.030 --> 00:05:19.040
phone's connections when the watch is
 

00:05:19.040 --> 00:05:21.310
phone's connections when the watch is
outside of phone range Wi-Fi and

00:05:21.310 --> 00:05:21.320
outside of phone range Wi-Fi and
 

00:05:21.320 --> 00:05:23.440
outside of phone range Wi-Fi and
cellular networks are used depending on

00:05:23.440 --> 00:05:23.450
cellular networks are used depending on
 

00:05:23.450 --> 00:05:26.680
cellular networks are used depending on
hardware support the wear platform takes

00:05:26.680 --> 00:05:26.690
hardware support the wear platform takes
 

00:05:26.690 --> 00:05:27.850
hardware support the wear platform takes
care of the transitioning between

00:05:27.850 --> 00:05:27.860
care of the transitioning between
 

00:05:27.860 --> 00:05:34.780
care of the transitioning between
networks an existing wearable apps data

00:05:34.780 --> 00:05:34.790
networks an existing wearable apps data
 

00:05:34.790 --> 00:05:36.520
networks an existing wearable apps data
stored in the cloud was often relayed to

00:05:36.520 --> 00:05:36.530
stored in the cloud was often relayed to
 

00:05:36.530 --> 00:05:39.820
stored in the cloud was often relayed to
the wearable via an Android phone on an

00:05:39.820 --> 00:05:39.830
the wearable via an Android phone on an
 

00:05:39.830 --> 00:05:41.320
the wearable via an Android phone on an
Android app on the phone using data

00:05:41.320 --> 00:05:41.330
Android app on the phone using data
 

00:05:41.330 --> 00:05:43.350
Android app on the phone using data
items in the wearable data layer api's

00:05:43.350 --> 00:05:43.360
items in the wearable data layer api's
 

00:05:43.360 --> 00:05:45.880
items in the wearable data layer api's
the wearable data layer is still useful

00:05:45.880 --> 00:05:45.890
the wearable data layer is still useful
 

00:05:45.890 --> 00:05:47.740
the wearable data layer is still useful
when coordinating between watch and

00:05:47.740 --> 00:05:47.750
when coordinating between watch and
 

00:05:47.750 --> 00:05:50.440
when coordinating between watch and
phone but with standalone it may be

00:05:50.440 --> 00:05:50.450
phone but with standalone it may be
 

00:05:50.450 --> 00:05:52.420
phone but with standalone it may be
simpler to go directly to the cloud for

00:05:52.420 --> 00:05:52.430
simpler to go directly to the cloud for
 

00:05:52.430 --> 00:05:55.210
simpler to go directly to the cloud for
many use cases in addition to simplicity

00:05:55.210 --> 00:05:55.220
many use cases in addition to simplicity
 

00:05:55.220 --> 00:05:57.400
many use cases in addition to simplicity
it also works when the phone is not

00:05:57.400 --> 00:05:57.410
it also works when the phone is not
 

00:05:57.410 --> 00:05:59.320
it also works when the phone is not
available or when paired to an iOS

00:05:59.320 --> 00:05:59.330
available or when paired to an iOS
 

00:05:59.330 --> 00:06:02.530
available or when paired to an iOS
device when talking to the cloud you can

00:06:02.530 --> 00:06:02.540
device when talking to the cloud you can
 

00:06:02.540 --> 00:06:03.700
device when talking to the cloud you can
use protocols that you're already

00:06:03.700 --> 00:06:03.710
use protocols that you're already
 

00:06:03.710 --> 00:06:09.940
use protocols that you're already
familiar with like HTTP TCP or UDP once

00:06:09.940 --> 00:06:09.950
familiar with like HTTP TCP or UDP once
 

00:06:09.950 --> 00:06:11.650
familiar with like HTTP TCP or UDP once
your data is fetched you can store

00:06:11.650 --> 00:06:11.660
your data is fetched you can store
 

00:06:11.660 --> 00:06:13.360
your data is fetched you can store
locally on the device just like on

00:06:13.360 --> 00:06:13.370
locally on the device just like on
 

00:06:13.370 --> 00:06:16.000
locally on the device just like on
phones using shared preferences sequel

00:06:16.000 --> 00:06:16.010
phones using shared preferences sequel
 

00:06:16.010 --> 00:06:18.820
phones using shared preferences sequel
Lite or internal storage

00:06:18.820 --> 00:06:18.830
Lite or internal storage
 

00:06:18.830 --> 00:06:21.290
Lite or internal storage
if your and art phone app is well

00:06:21.290 --> 00:06:21.300
if your and art phone app is well
 

00:06:21.300 --> 00:06:23.300
if your and art phone app is well
maintained and tested you may be better

00:06:23.300 --> 00:06:23.310
maintained and tested you may be better
 

00:06:23.310 --> 00:06:25.220
maintained and tested you may be better
off starting from your existing code

00:06:25.220 --> 00:06:25.230
off starting from your existing code
 

00:06:25.230 --> 00:06:27.410
off starting from your existing code
base and cutting things out as opposed

00:06:27.410 --> 00:06:27.420
base and cutting things out as opposed
 

00:06:27.420 --> 00:06:30.200
base and cutting things out as opposed
to starting from scratch common coding

00:06:30.200 --> 00:06:30.210
to starting from scratch common coding
 

00:06:30.210 --> 00:06:32.930
to starting from scratch common coding
services like your networking data model

00:06:32.930 --> 00:06:32.940
services like your networking data model
 

00:06:32.940 --> 00:06:35.120
services like your networking data model
and business logic can be shared between

00:06:35.120 --> 00:06:35.130
and business logic can be shared between
 

00:06:35.130 --> 00:06:38.000
and business logic can be shared between
your phone app and where app using a

00:06:38.000 --> 00:06:38.010
your phone app and where app using a
 

00:06:38.010 --> 00:06:41.030
your phone app and where app using a
shared library form factors specific

00:06:41.030 --> 00:06:41.040
shared library form factors specific
 

00:06:41.040 --> 00:06:42.920
shared library form factors specific
code and resources can remain in

00:06:42.920 --> 00:06:42.930
code and resources can remain in
 

00:06:42.930 --> 00:06:44.990
code and resources can remain in
separate build flavors for phone and

00:06:44.990 --> 00:06:45.000
separate build flavors for phone and
 

00:06:45.000 --> 00:06:47.420
separate build flavors for phone and
wear this type of structure is already

00:06:47.420 --> 00:06:47.430
wear this type of structure is already
 

00:06:47.430 --> 00:06:49.490
wear this type of structure is already
supported natively in Android studio and

00:06:49.490 --> 00:06:49.500
supported natively in Android studio and
 

00:06:49.500 --> 00:06:53.780
supported natively in Android studio and
Gradle when fetching data from the cloud

00:06:53.780 --> 00:06:53.790
Gradle when fetching data from the cloud
 

00:06:53.790 --> 00:06:55.760
Gradle when fetching data from the cloud
it's important to fetch only the data

00:06:55.760 --> 00:06:55.770
it's important to fetch only the data
 

00:06:55.770 --> 00:06:57.280
it's important to fetch only the data
that your wearable app will need

00:06:57.280 --> 00:06:57.290
that your wearable app will need
 

00:06:57.290 --> 00:07:00.680
that your wearable app will need
otherwise you may introduce lazy memory

00:07:00.680 --> 00:07:00.690
otherwise you may introduce lazy memory
 

00:07:00.690 --> 00:07:04.640
otherwise you may introduce lazy memory
use or battery use unnecessarily in some

00:07:04.640 --> 00:07:04.650
use or battery use unnecessarily in some
 

00:07:04.650 --> 00:07:06.650
use or battery use unnecessarily in some
cases for example when over a Bluetooth

00:07:06.650 --> 00:07:06.660
cases for example when over a Bluetooth
 

00:07:06.660 --> 00:07:09.020
cases for example when over a Bluetooth
le connection your ad may have access to

00:07:09.020 --> 00:07:09.030
le connection your ad may have access to
 

00:07:09.030 --> 00:07:10.580
le connection your ad may have access to
just 10 kilobytes per second of

00:07:10.580 --> 00:07:10.590
just 10 kilobytes per second of
 

00:07:10.590 --> 00:07:14.150
just 10 kilobytes per second of
bandwidth we recommend auditing your

00:07:14.150 --> 00:07:14.160
bandwidth we recommend auditing your
 

00:07:14.160 --> 00:07:16.490
bandwidth we recommend auditing your
network traffic works both requests and

00:07:16.490 --> 00:07:16.500
network traffic works both requests and
 

00:07:16.500 --> 00:07:18.800
network traffic works both requests and
responses for extra data that perhaps is

00:07:18.800 --> 00:07:18.810
responses for extra data that perhaps is
 

00:07:18.810 --> 00:07:21.040
responses for extra data that perhaps is
only intended for phones

00:07:21.040 --> 00:07:21.050
only intended for phones
 

00:07:21.050 --> 00:07:23.150
only intended for phones
shrinking large images server-side

00:07:23.150 --> 00:07:23.160
shrinking large images server-side
 

00:07:23.160 --> 00:07:24.800
shrinking large images server-side
before sending them to the wearable is

00:07:24.800 --> 00:07:24.810
before sending them to the wearable is
 

00:07:24.810 --> 00:07:26.870
before sending them to the wearable is
another great way to reduce network

00:07:26.870 --> 00:07:26.880
another great way to reduce network
 

00:07:26.880 --> 00:07:31.250
another great way to reduce network
traffic in Android background services

00:07:31.250 --> 00:07:31.260
traffic in Android background services
 

00:07:31.260 --> 00:07:33.350
traffic in Android background services
are a powerful tool but should be used

00:07:33.350 --> 00:07:33.360
are a powerful tool but should be used
 

00:07:33.360 --> 00:07:35.120
are a powerful tool but should be used
wisely in order to preserve battery life

00:07:35.120 --> 00:07:35.130
wisely in order to preserve battery life
 

00:07:35.130 --> 00:07:38.660
wisely in order to preserve battery life
in Android 6.0 doze and half stand via

00:07:38.660 --> 00:07:38.670
in Android 6.0 doze and half stand via
 

00:07:38.670 --> 00:07:40.790
in Android 6.0 doze and half stand via
resulted in significant improvements to

00:07:40.790 --> 00:07:40.800
resulted in significant improvements to
 

00:07:40.800 --> 00:07:43.040
resulted in significant improvements to
battery life by allowing devices to

00:07:43.040 --> 00:07:43.050
battery life by allowing devices to
 

00:07:43.050 --> 00:07:45.140
battery life by allowing devices to
enter a deep sleep when idle or

00:07:45.140 --> 00:07:45.150
enter a deep sleep when idle or
 

00:07:45.150 --> 00:07:48.440
enter a deep sleep when idle or
stationary dose has been extended in

00:07:48.440 --> 00:07:48.450
stationary dose has been extended in
 

00:07:48.450 --> 00:07:51.170
stationary dose has been extended in
Android and an Android wear 2.0 to

00:07:51.170 --> 00:07:51.180
Android and an Android wear 2.0 to
 

00:07:51.180 --> 00:07:52.850
Android and an Android wear 2.0 to
enable some lighter optimizations

00:07:52.850 --> 00:07:52.860
enable some lighter optimizations
 

00:07:52.860 --> 00:07:54.380
enable some lighter optimizations
whenever the screen is in low-power

00:07:54.380 --> 00:07:54.390
whenever the screen is in low-power
 

00:07:54.390 --> 00:07:58.700
whenever the screen is in low-power
ambient mode or off here's an overview

00:07:58.700 --> 00:07:58.710
ambient mode or off here's an overview
 

00:07:58.710 --> 00:08:01.460
ambient mode or off here's an overview
of the new doze lifecycle after the

00:08:01.460 --> 00:08:01.470
of the new doze lifecycle after the
 

00:08:01.470 --> 00:08:03.380
of the new doze lifecycle after the
screen turns off or enters ambient mode

00:08:03.380 --> 00:08:03.390
screen turns off or enters ambient mode
 

00:08:03.390 --> 00:08:05.660
screen turns off or enters ambient mode
for long enough lightweight doze can

00:08:05.660 --> 00:08:05.670
for long enough lightweight doze can
 

00:08:05.670 --> 00:08:09.290
for long enough lightweight doze can
kick in during doze background tasks may

00:08:09.290 --> 00:08:09.300
kick in during doze background tasks may
 

00:08:09.300 --> 00:08:11.570
kick in during doze background tasks may
be deferred to execute during periodic

00:08:11.570 --> 00:08:11.580
be deferred to execute during periodic
 

00:08:11.580 --> 00:08:14.330
be deferred to execute during periodic
maintenance windows if the device later

00:08:14.330 --> 00:08:14.340
maintenance windows if the device later
 

00:08:14.340 --> 00:08:16.340
maintenance windows if the device later
becomes stationary for long enough a

00:08:16.340 --> 00:08:16.350
becomes stationary for long enough a
 

00:08:16.350 --> 00:08:19.070
becomes stationary for long enough a
deeper doze mode kicks in similar to

00:08:19.070 --> 00:08:19.080
deeper doze mode kicks in similar to
 

00:08:19.080 --> 00:08:22.730
deeper doze mode kicks in similar to
doze in Android 6.0 to ensure your

00:08:22.730 --> 00:08:22.740
doze in Android 6.0 to ensure your
 

00:08:22.740 --> 00:08:24.560
doze in Android 6.0 to ensure your
background tests are executed as desired

00:08:24.560 --> 00:08:24.570
background tests are executed as desired
 

00:08:24.570 --> 00:08:26.720
background tests are executed as desired
it's important to write them in a dose

00:08:26.720 --> 00:08:26.730
it's important to write them in a dose
 

00:08:26.730 --> 00:08:30.500
it's important to write them in a dose
safe manner the jobscheduler api allows

00:08:30.500 --> 00:08:30.510
safe manner the jobscheduler api allows
 

00:08:30.510 --> 00:08:31.580
safe manner the jobscheduler api allows
an app to

00:08:31.580 --> 00:08:31.590
an app to
 

00:08:31.590 --> 00:08:34.190
an app to
mr. Frodo saved code execution and is

00:08:34.190 --> 00:08:34.200
mr. Frodo saved code execution and is
 

00:08:34.200 --> 00:08:37.220
mr. Frodo saved code execution and is
recommended for background work various

00:08:37.220 --> 00:08:37.230
recommended for background work various
 

00:08:37.230 --> 00:08:38.540
recommended for background work various
constraints can be selected when

00:08:38.540 --> 00:08:38.550
constraints can be selected when
 

00:08:38.550 --> 00:08:41.120
constraints can be selected when
scheduling jobs for example the need for

00:08:41.120 --> 00:08:41.130
scheduling jobs for example the need for
 

00:08:41.130 --> 00:08:43.760
scheduling jobs for example the need for
connectivity device charging or periodic

00:08:43.760 --> 00:08:43.770
connectivity device charging or periodic
 

00:08:43.770 --> 00:08:46.610
connectivity device charging or periodic
execution it's important to be

00:08:46.610 --> 00:08:46.620
execution it's important to be
 

00:08:46.620 --> 00:08:49.880
execution it's important to be
conservative when scheduling jobs and to

00:08:49.880 --> 00:08:49.890
conservative when scheduling jobs and to
 

00:08:49.890 --> 00:08:51.590
conservative when scheduling jobs and to
avoid execution in ways that could

00:08:51.590 --> 00:08:51.600
avoid execution in ways that could
 

00:08:51.600 --> 00:08:56.300
avoid execution in ways that could
adversely impact battery life jobs

00:08:56.300 --> 00:08:56.310
adversely impact battery life jobs
 

00:08:56.310 --> 00:08:58.430
adversely impact battery life jobs
scheduled with the job scheduler API use

00:08:58.430 --> 00:08:58.440
scheduled with the job scheduler API use
 

00:08:58.440 --> 00:09:00.650
scheduled with the job scheduler API use
the job info builder object to provide

00:09:00.650 --> 00:09:00.660
the job info builder object to provide
 

00:09:00.660 --> 00:09:03.530
the job info builder object to provide
constraints and metadata we'll go over a

00:09:03.530 --> 00:09:03.540
constraints and metadata we'll go over a
 

00:09:03.540 --> 00:09:05.000
constraints and metadata we'll go over a
few useful constraints that are

00:09:05.000 --> 00:09:05.010
few useful constraints that are
 

00:09:05.010 --> 00:09:08.390
few useful constraints that are
available to request networking use the

00:09:08.390 --> 00:09:08.400
available to request networking use the
 

00:09:08.400 --> 00:09:10.160
available to request networking use the
set required network type method and

00:09:10.160 --> 00:09:10.170
set required network type method and
 

00:09:10.170 --> 00:09:13.430
set required network type method and
specify any or unmetered network type

00:09:13.430 --> 00:09:13.440
specify any or unmetered network type
 

00:09:13.440 --> 00:09:15.080
specify any or unmetered network type
unmetered is appropriate choice for

00:09:15.080 --> 00:09:15.090
unmetered is appropriate choice for
 

00:09:15.090 --> 00:09:17.750
unmetered is appropriate choice for
large data transfers while network type

00:09:17.750 --> 00:09:17.760
large data transfers while network type
 

00:09:17.760 --> 00:09:19.670
large data transfers while network type
in e is more appropriate for smaller

00:09:19.670 --> 00:09:19.680
in e is more appropriate for smaller
 

00:09:19.680 --> 00:09:23.180
in e is more appropriate for smaller
transfers note that in where 2.0 some

00:09:23.180 --> 00:09:23.190
transfers note that in where 2.0 some
 

00:09:23.190 --> 00:09:24.950
transfers note that in where 2.0 some
low bandwidth networks like Bluetooth le

00:09:24.950 --> 00:09:24.960
low bandwidth networks like Bluetooth le
 

00:09:24.960 --> 00:09:26.900
low bandwidth networks like Bluetooth le
are considered on meters sorry I'm

00:09:26.900 --> 00:09:26.910
are considered on meters sorry I'm
 

00:09:26.910 --> 00:09:28.900
are considered on meters sorry I'm
considered metered

00:09:28.900 --> 00:09:28.910
considered metered
 

00:09:28.910 --> 00:09:31.340
considered metered
to schedule a task that requires the

00:09:31.340 --> 00:09:31.350
to schedule a task that requires the
 

00:09:31.350 --> 00:09:33.380
to schedule a task that requires the
device to be on the charge of ER use the

00:09:33.380 --> 00:09:33.390
device to be on the charge of ER use the
 

00:09:33.390 --> 00:09:36.020
device to be on the charge of ER use the
set requires charging method or to be

00:09:36.020 --> 00:09:36.030
set requires charging method or to be
 

00:09:36.030 --> 00:09:37.670
set requires charging method or to be
currently idle by calling the set

00:09:37.670 --> 00:09:37.680
currently idle by calling the set
 

00:09:37.680 --> 00:09:40.250
currently idle by calling the set
requires device idle method using both

00:09:40.250 --> 00:09:40.260
requires device idle method using both
 

00:09:40.260 --> 00:09:42.410
requires device idle method using both
of these together can be useful for

00:09:42.410 --> 00:09:42.420
of these together can be useful for
 

00:09:42.420 --> 00:09:44.060
of these together can be useful for
lower priority background work or

00:09:44.060 --> 00:09:44.070
lower priority background work or
 

00:09:44.070 --> 00:09:48.440
lower priority background work or
synchronization here's an example of a

00:09:48.440 --> 00:09:48.450
synchronization here's an example of a
 

00:09:48.450 --> 00:09:49.880
synchronization here's an example of a
job being scheduled that requires

00:09:49.880 --> 00:09:49.890
job being scheduled that requires
 

00:09:49.890 --> 00:09:51.830
job being scheduled that requires
unmetered networking at the time the job

00:09:51.830 --> 00:09:51.840
unmetered networking at the time the job
 

00:09:51.840 --> 00:09:54.020
unmetered networking at the time the job
is run in addition to the device being

00:09:54.020 --> 00:09:54.030
is run in addition to the device being
 

00:09:54.030 --> 00:09:56.720
is run in addition to the device being
on the charger job schedule will

00:09:56.720 --> 00:09:56.730
on the charger job schedule will
 

00:09:56.730 --> 00:09:58.670
on the charger job schedule will
activate my job service when both of

00:09:58.670 --> 00:09:58.680
activate my job service when both of
 

00:09:58.680 --> 00:10:01.100
activate my job service when both of
these constraints are met the builder

00:10:01.100 --> 00:10:01.110
these constraints are met the builder
 

00:10:01.110 --> 00:10:03.530
these constraints are met the builder
method set extras can be used to provide

00:10:03.530 --> 00:10:03.540
method set extras can be used to provide
 

00:10:03.540 --> 00:10:06.770
method set extras can be used to provide
additional metadata this bundle will be

00:10:06.770 --> 00:10:06.780
additional metadata this bundle will be
 

00:10:06.780 --> 00:10:10.700
additional metadata this bundle will be
passed to the job when executed note

00:10:10.700 --> 00:10:10.710
passed to the job when executed note
 

00:10:10.710 --> 00:10:12.740
passed to the job when executed note
that my job ID value passed to the job

00:10:12.740 --> 00:10:12.750
that my job ID value passed to the job
 

00:10:12.750 --> 00:10:15.260
that my job ID value passed to the job
info builder constructor this is an

00:10:15.260 --> 00:10:15.270
info builder constructor this is an
 

00:10:15.270 --> 00:10:17.260
info builder constructor this is an
application specific identifier

00:10:17.260 --> 00:10:17.270
application specific identifier
 

00:10:17.270 --> 00:10:20.060
application specific identifier
subsequent calls to cancel jobs or

00:10:20.060 --> 00:10:20.070
subsequent calls to cancel jobs or
 

00:10:20.070 --> 00:10:22.010
subsequent calls to cancel jobs or
create a new job at the same job ID will

00:10:22.010 --> 00:10:22.020
create a new job at the same job ID will
 

00:10:22.020 --> 00:10:26.600
create a new job at the same job ID will
update the existing job here's an

00:10:26.600 --> 00:10:26.610
update the existing job here's an
 

00:10:26.610 --> 00:10:28.670
update the existing job here's an
implementation of a job service to

00:10:28.670 --> 00:10:28.680
implementation of a job service to
 

00:10:28.680 --> 00:10:30.190
implementation of a job service to
handle the job from the previous slide

00:10:30.190 --> 00:10:30.200
handle the job from the previous slide
 

00:10:30.200 --> 00:10:33.350
handle the job from the previous slide
when the job executes the on start job

00:10:33.350 --> 00:10:33.360
when the job executes the on start job
 

00:10:33.360 --> 00:10:35.030
when the job executes the on start job
method is called with the job parameters

00:10:35.030 --> 00:10:35.040
method is called with the job parameters
 

00:10:35.040 --> 00:10:37.790
method is called with the job parameters
object passed in the job parameter

00:10:37.790 --> 00:10:37.800
object passed in the job parameter
 

00:10:37.800 --> 00:10:39.890
object passed in the job parameter
object allows you to get the job ID and

00:10:39.890 --> 00:10:39.900
object allows you to get the job ID and
 

00:10:39.900 --> 00:10:42.200
object allows you to get the job ID and
also any extras bundle provided when

00:10:42.200 --> 00:10:42.210
also any extras bundle provided when
 

00:10:42.210 --> 00:10:43.400
also any extras bundle provided when
scheduling the job

00:10:43.400 --> 00:10:43.410
scheduling the job
 

00:10:43.410 --> 00:10:46.279
scheduling the job
the unsub method is called on the main

00:10:46.279 --> 00:10:46.289
the unsub method is called on the main
 

00:10:46.289 --> 00:10:49.159
the unsub method is called on the main
application thread so therefore if any

00:10:49.159 --> 00:10:49.169
application thread so therefore if any
 

00:10:49.169 --> 00:10:50.869
application thread so therefore if any
expensive logic needs to be run it

00:10:50.869 --> 00:10:50.879
expensive logic needs to be run it
 

00:10:50.879 --> 00:10:53.239
expensive logic needs to be run it
should be pushed to a separate thread in

00:10:53.239 --> 00:10:53.249
should be pushed to a separate thread in
 

00:10:53.249 --> 00:10:55.999
should be pushed to a separate thread in
this example an async task is used to

00:10:55.999 --> 00:10:56.009
this example an async task is used to
 

00:10:56.009 --> 00:10:58.369
this example an async task is used to
run code in the background once your

00:10:58.369 --> 00:10:58.379
run code in the background once your
 

00:10:58.379 --> 00:11:00.829
run code in the background once your
work is completed call the job finished

00:11:00.829 --> 00:11:00.839
work is completed call the job finished
 

00:11:00.839 --> 00:11:02.839
work is completed call the job finished
method to notify job scheduler that the

00:11:02.839 --> 00:11:02.849
method to notify job scheduler that the
 

00:11:02.849 --> 00:11:08.629
method to notify job scheduler that the
task is done okay so now we'll go over a

00:11:08.629 --> 00:11:08.639
task is done okay so now we'll go over a
 

00:11:08.639 --> 00:11:10.309
task is done okay so now we'll go over a
couple of different options that you

00:11:10.309 --> 00:11:10.319
couple of different options that you
 

00:11:10.319 --> 00:11:13.819
couple of different options that you
have for authentication the reason that

00:11:13.819 --> 00:11:13.829
have for authentication the reason that
 

00:11:13.829 --> 00:11:14.899
have for authentication the reason that
you need to start thinking about

00:11:14.899 --> 00:11:14.909
you need to start thinking about
 

00:11:14.909 --> 00:11:17.599
you need to start thinking about
authenticating is that now your app is

00:11:17.599 --> 00:11:17.609
authenticating is that now your app is
 

00:11:17.609 --> 00:11:19.909
authenticating is that now your app is
running entirely on the wearable so

00:11:19.909 --> 00:11:19.919
running entirely on the wearable so
 

00:11:19.919 --> 00:11:21.319
running entirely on the wearable so
whenever it makes your request to the

00:11:21.319 --> 00:11:21.329
whenever it makes your request to the
 

00:11:21.329 --> 00:11:23.989
whenever it makes your request to the
cloud on behalf of the user it's going

00:11:23.989 --> 00:11:23.999
cloud on behalf of the user it's going
 

00:11:23.999 --> 00:11:25.969
cloud on behalf of the user it's going
to need to have a valid auth token that

00:11:25.969 --> 00:11:25.979
to need to have a valid auth token that
 

00:11:25.979 --> 00:11:27.529
to need to have a valid auth token that
shows that web service that it has

00:11:27.529 --> 00:11:27.539
shows that web service that it has
 

00:11:27.539 --> 00:11:31.429
shows that web service that it has
access to that private data but before

00:11:31.429 --> 00:11:31.439
access to that private data but before
 

00:11:31.439 --> 00:11:34.669
access to that private data but before
you rush to ask the user to login please

00:11:34.669 --> 00:11:34.679
you rush to ask the user to login please
 

00:11:34.679 --> 00:11:36.739
you rush to ask the user to login please
consider what you can do with an

00:11:36.739 --> 00:11:36.749
consider what you can do with an
 

00:11:36.749 --> 00:11:39.319
consider what you can do with an
anonymous user you want to try to avoid

00:11:39.319 --> 00:11:39.329
anonymous user you want to try to avoid
 

00:11:39.329 --> 00:11:41.479
anonymous user you want to try to avoid
authentication where it's not necessary

00:11:41.479 --> 00:11:41.489
authentication where it's not necessary
 

00:11:41.489 --> 00:11:44.929
authentication where it's not necessary
and if you need to record data you

00:11:44.929 --> 00:11:44.939
and if you need to record data you
 

00:11:44.939 --> 00:11:47.119
and if you need to record data you
should try to record it locally instead

00:11:47.119 --> 00:11:47.129
should try to record it locally instead
 

00:11:47.129 --> 00:11:49.039
should try to record it locally instead
of writing it to the cloud by default

00:11:49.039 --> 00:11:49.049
of writing it to the cloud by default
 

00:11:49.049 --> 00:11:51.619
of writing it to the cloud by default
you have to remember that the user might

00:11:51.619 --> 00:11:51.629
you have to remember that the user might
 

00:11:51.629 --> 00:11:53.629
you have to remember that the user might
not have access to the network at the

00:11:53.629 --> 00:11:53.639
not have access to the network at the
 

00:11:53.639 --> 00:11:56.359
not have access to the network at the
time when your app is running finally

00:11:56.359 --> 00:11:56.369
time when your app is running finally
 

00:11:56.369 --> 00:11:58.009
time when your app is running finally
when you do need to authenticate the

00:11:58.009 --> 00:11:58.019
when you do need to authenticate the
 

00:11:58.019 --> 00:12:00.319
when you do need to authenticate the
user you want to focus on the fastest

00:12:00.319 --> 00:12:00.329
user you want to focus on the fastest
 

00:12:00.329 --> 00:12:02.479
user you want to focus on the fastest
and easiest methods from the users

00:12:02.479 --> 00:12:02.489
and easiest methods from the users
 

00:12:02.489 --> 00:12:07.189
and easiest methods from the users
perspective so the simplest way from a

00:12:07.189 --> 00:12:07.199
perspective so the simplest way from a
 

00:12:07.199 --> 00:12:09.559
perspective so the simplest way from a
developer perspective is the same as on

00:12:09.559 --> 00:12:09.569
developer perspective is the same as on
 

00:12:09.569 --> 00:12:11.840
developer perspective is the same as on
the phone you can create a login

00:12:11.840 --> 00:12:11.850
the phone you can create a login
 

00:12:11.850 --> 00:12:14.239
the phone you can create a login
activity and you can ask the user to

00:12:14.239 --> 00:12:14.249
activity and you can ask the user to
 

00:12:14.249 --> 00:12:16.849
activity and you can ask the user to
type in their username and password now

00:12:16.849 --> 00:12:16.859
type in their username and password now
 

00:12:16.859 --> 00:12:19.219
type in their username and password now
this activity is a normal activity and

00:12:19.219 --> 00:12:19.229
this activity is a normal activity and
 

00:12:19.229 --> 00:12:22.609
this activity is a normal activity and
if it has an input field with the input

00:12:22.609 --> 00:12:22.619
if it has an input field with the input
 

00:12:22.619 --> 00:12:26.179
if it has an input field with the input
type text password then we're 2.0 will

00:12:26.179 --> 00:12:26.189
type text password then we're 2.0 will
 

00:12:26.189 --> 00:12:28.999
type text password then we're 2.0 will
show a special password style keyboard

00:12:28.999 --> 00:12:29.009
show a special password style keyboard
 

00:12:29.009 --> 00:12:31.009
show a special password style keyboard
that will allow the user to type in

00:12:31.009 --> 00:12:31.019
that will allow the user to type in
 

00:12:31.019 --> 00:12:33.649
that will allow the user to type in
their password on the watch now this

00:12:33.649 --> 00:12:33.659
their password on the watch now this
 

00:12:33.659 --> 00:12:36.529
their password on the watch now this
keyboard is optimized for the watch but

00:12:36.529 --> 00:12:36.539
keyboard is optimized for the watch but
 

00:12:36.539 --> 00:12:38.960
keyboard is optimized for the watch but
it is still very small so you should try

00:12:38.960 --> 00:12:38.970
it is still very small so you should try
 

00:12:38.970 --> 00:12:41.269
it is still very small so you should try
to keep from having to show that

00:12:41.269 --> 00:12:41.279
to keep from having to show that
 

00:12:41.279 --> 00:12:44.149
to keep from having to show that
keyboard where you can a couple of ways

00:12:44.149 --> 00:12:44.159
keyboard where you can a couple of ways
 

00:12:44.159 --> 00:12:45.529
keyboard where you can a couple of ways
that you can do that which are better

00:12:45.529 --> 00:12:45.539
that you can do that which are better
 

00:12:45.539 --> 00:12:48.559
that you can do that which are better
and avoid that typing are to use our

00:12:48.559 --> 00:12:48.569
and avoid that typing are to use our
 

00:12:48.569 --> 00:12:50.689
and avoid that typing are to use our
sign-in technologies like Google sign-in

00:12:50.689 --> 00:12:50.699
sign-in technologies like Google sign-in
 

00:12:50.699 --> 00:12:53.840
sign-in technologies like Google sign-in
or smart lock for passwords so both of

00:12:53.840 --> 00:12:53.850
or smart lock for passwords so both of
 

00:12:53.850 --> 00:12:56.690
or smart lock for passwords so both of
those technologies use the existing

00:12:56.690 --> 00:12:56.700
those technologies use the existing
 

00:12:56.700 --> 00:12:59.240
those technologies use the existing
that user already has to Google and

00:12:59.240 --> 00:12:59.250
that user already has to Google and
 

00:12:59.250 --> 00:13:02.180
that user already has to Google and
exchange that for a token that's valid

00:13:02.180 --> 00:13:02.190
exchange that for a token that's valid
 

00:13:02.190 --> 00:13:04.730
exchange that for a token that's valid
for your web service smart lock for

00:13:04.730 --> 00:13:04.740
for your web service smart lock for
 

00:13:04.740 --> 00:13:07.790
for your web service smart lock for
passwords in particular is very simple

00:13:07.790 --> 00:13:07.800
passwords in particular is very simple
 

00:13:07.800 --> 00:13:09.800
passwords in particular is very simple
to add to your existing client app it

00:13:09.800 --> 00:13:09.810
to add to your existing client app it
 

00:13:09.810 --> 00:13:12.410
to add to your existing client app it
only requires client-side changes and it

00:13:12.410 --> 00:13:12.420
only requires client-side changes and it
 

00:13:12.420 --> 00:13:14.210
only requires client-side changes and it
works with existing users who have

00:13:14.210 --> 00:13:14.220
works with existing users who have
 

00:13:14.220 --> 00:13:16.850
works with existing users who have
already registered using whatever IDP

00:13:16.850 --> 00:13:16.860
already registered using whatever IDP
 

00:13:16.860 --> 00:13:18.860
already registered using whatever IDP
they are using so both of these options

00:13:18.860 --> 00:13:18.870
they are using so both of these options
 

00:13:18.870 --> 00:13:20.780
they are using so both of these options
will be available in some future

00:13:20.780 --> 00:13:20.790
will be available in some future
 

00:13:20.790 --> 00:13:22.730
will be available in some future
developer previews that we'll be

00:13:22.730 --> 00:13:22.740
developer previews that we'll be
 

00:13:22.740 --> 00:13:24.140
developer previews that we'll be
releasing throughout the summer so

00:13:24.140 --> 00:13:24.150
releasing throughout the summer so
 

00:13:24.150 --> 00:13:27.260
releasing throughout the summer so
please keep an eye on so if you're

00:13:27.260 --> 00:13:27.270
please keep an eye on so if you're
 

00:13:27.270 --> 00:13:29.870
please keep an eye on so if you're
familiar with writing where on the data

00:13:29.870 --> 00:13:29.880
familiar with writing where on the data
 

00:13:29.880 --> 00:13:31.730
familiar with writing where on the data
layer you might have already thought of

00:13:31.730 --> 00:13:31.740
layer you might have already thought of
 

00:13:31.740 --> 00:13:34.100
layer you might have already thought of
one way that you can get a token over to

00:13:34.100 --> 00:13:34.110
one way that you can get a token over to
 

00:13:34.110 --> 00:13:36.710
one way that you can get a token over to
the watch that's to request that token

00:13:36.710 --> 00:13:36.720
the watch that's to request that token
 

00:13:36.720 --> 00:13:39.110
the watch that's to request that token
on the phone and then pass it over to

00:13:39.110 --> 00:13:39.120
on the phone and then pass it over to
 

00:13:39.120 --> 00:13:41.900
on the phone and then pass it over to
the watch via the data layer so this

00:13:41.900 --> 00:13:41.910
the watch via the data layer so this
 

00:13:41.910 --> 00:13:44.420
the watch via the data layer so this
method has some benefits it's fast and

00:13:44.420 --> 00:13:44.430
method has some benefits it's fast and
 

00:13:44.430 --> 00:13:47.480
method has some benefits it's fast and
easy for the user but it may have some

00:13:47.480 --> 00:13:47.490
easy for the user but it may have some
 

00:13:47.490 --> 00:13:50.210
easy for the user but it may have some
problems if you're off provider doesn't

00:13:50.210 --> 00:13:50.220
problems if you're off provider doesn't
 

00:13:50.220 --> 00:13:52.070
problems if you're off provider doesn't
like the fact that you're requesting a

00:13:52.070 --> 00:13:52.080
like the fact that you're requesting a
 

00:13:52.080 --> 00:13:56.120
like the fact that you're requesting a
token for the watch on the phone so a

00:13:56.120 --> 00:13:56.130
token for the watch on the phone so a
 

00:13:56.130 --> 00:13:57.680
token for the watch on the phone so a
token that's destined for a different

00:13:57.680 --> 00:13:57.690
token that's destined for a different
 

00:13:57.690 --> 00:14:00.320
token that's destined for a different
device it also does require the user to

00:14:00.320 --> 00:14:00.330
device it also does require the user to
 

00:14:00.330 --> 00:14:01.970
device it also does require the user to
have their phone with them and have it

00:14:01.970 --> 00:14:01.980
have their phone with them and have it
 

00:14:01.980 --> 00:14:03.620
have their phone with them and have it
on and connected when they're running

00:14:03.620 --> 00:14:03.630
on and connected when they're running
 

00:14:03.630 --> 00:14:05.960
on and connected when they're running
your app and finally it doesn't work on

00:14:05.960 --> 00:14:05.970
your app and finally it doesn't work on
 

00:14:05.970 --> 00:14:08.660
your app and finally it doesn't work on
iOS so if you do choose to use this

00:14:08.660 --> 00:14:08.670
iOS so if you do choose to use this
 

00:14:08.670 --> 00:14:11.060
iOS so if you do choose to use this
method in your app make sure that you

00:14:11.060 --> 00:14:11.070
method in your app make sure that you
 

00:14:11.070 --> 00:14:12.890
method in your app make sure that you
have at least one backup method that

00:14:12.890 --> 00:14:12.900
have at least one backup method that
 

00:14:12.900 --> 00:14:16.400
have at least one backup method that
does work so one final method that we'll

00:14:16.400 --> 00:14:16.410
does work so one final method that we'll
 

00:14:16.410 --> 00:14:18.410
does work so one final method that we'll
also be bringing to a future developer

00:14:18.410 --> 00:14:18.420
also be bringing to a future developer
 

00:14:18.420 --> 00:14:21.290
also be bringing to a future developer
preview is the ability to open an OAuth

00:14:21.290 --> 00:14:21.300
preview is the ability to open an OAuth
 

00:14:21.300 --> 00:14:24.560
preview is the ability to open an OAuth
URL on a phone so this oath URL points

00:14:24.560 --> 00:14:24.570
URL on a phone so this oath URL points
 

00:14:24.570 --> 00:14:27.080
URL on a phone so this oath URL points
to an OAuth 2.0 authentication service

00:14:27.080 --> 00:14:27.090
to an OAuth 2.0 authentication service
 

00:14:27.090 --> 00:14:29.450
to an OAuth 2.0 authentication service
the user will then switch to their phone

00:14:29.450 --> 00:14:29.460
the user will then switch to their phone
 

00:14:29.460 --> 00:14:32.540
the user will then switch to their phone
follow through the OAuth login flow and

00:14:32.540 --> 00:14:32.550
follow through the OAuth login flow and
 

00:14:32.550 --> 00:14:35.060
follow through the OAuth login flow and
then when they complete the auth service

00:14:35.060 --> 00:14:35.070
then when they complete the auth service
 

00:14:35.070 --> 00:14:37.160
then when they complete the auth service
will return a token destined for the

00:14:37.160 --> 00:14:37.170
will return a token destined for the
 

00:14:37.170 --> 00:14:39.350
will return a token destined for the
wearable which is sent by a callback to

00:14:39.350 --> 00:14:39.360
wearable which is sent by a callback to
 

00:14:39.360 --> 00:14:41.240
wearable which is sent by a callback to
the same call that you used to open that

00:14:41.240 --> 00:14:41.250
the same call that you used to open that
 

00:14:41.250 --> 00:14:45.020
the same call that you used to open that
URL so this option will work on iOS but

00:14:45.020 --> 00:14:45.030
URL so this option will work on iOS but
 

00:14:45.030 --> 00:14:47.690
URL so this option will work on iOS but
it does require the user to have their

00:14:47.690 --> 00:14:47.700
it does require the user to have their
 

00:14:47.700 --> 00:14:50.530
it does require the user to have their
phone with them when they need to log in

00:14:50.530 --> 00:14:50.540
phone with them when they need to log in
 

00:14:50.540 --> 00:14:53.030
phone with them when they need to log in
so there are a lot of options here so

00:14:53.030 --> 00:14:53.040
so there are a lot of options here so
 

00:14:53.040 --> 00:14:55.010
so there are a lot of options here so
here's a quick table showing some of the

00:14:55.010 --> 00:14:55.020
here's a quick table showing some of the
 

00:14:55.020 --> 00:14:58.190
here's a quick table showing some of the
trade-offs as you can see Google sign-in

00:14:58.190 --> 00:14:58.200
trade-offs as you can see Google sign-in
 

00:14:58.200 --> 00:15:01.280
trade-offs as you can see Google sign-in
and smart lock for passwords both work

00:15:01.280 --> 00:15:01.290
and smart lock for passwords both work
 

00:15:01.290 --> 00:15:03.110
and smart lock for passwords both work
if the watch is connected or

00:15:03.110 --> 00:15:03.120
if the watch is connected or
 

00:15:03.120 --> 00:15:04.760
if the watch is connected or
disconnected from the phone and they

00:15:04.760 --> 00:15:04.770
disconnected from the phone and they
 

00:15:04.770 --> 00:15:07.190
disconnected from the phone and they
work on iOS and Android and they're fast

00:15:07.190 --> 00:15:07.200
work on iOS and Android and they're fast
 

00:15:07.200 --> 00:15:08.040
work on iOS and Android and they're fast
and easy for the user

00:15:08.040 --> 00:15:08.050
and easy for the user
 

00:15:08.050 --> 00:15:10.530
and easy for the user
the middle two options both require the

00:15:10.530 --> 00:15:10.540
the middle two options both require the
 

00:15:10.540 --> 00:15:12.119
the middle two options both require the
user to have their phone with them and

00:15:12.119 --> 00:15:12.129
user to have their phone with them and
 

00:15:12.129 --> 00:15:14.729
user to have their phone with them and
the final option is a good fallback

00:15:14.729 --> 00:15:14.739
the final option is a good fallback
 

00:15:14.739 --> 00:15:17.819
the final option is a good fallback
option if all else fails if you follow

00:15:17.819 --> 00:15:17.829
option if all else fails if you follow
 

00:15:17.829 --> 00:15:19.710
option if all else fails if you follow
along with the previews we'll be sharing

00:15:19.710 --> 00:15:19.720
along with the previews we'll be sharing
 

00:15:19.720 --> 00:15:21.809
along with the previews we'll be sharing
these methods throughout the preview

00:15:21.809 --> 00:15:21.819
these methods throughout the preview
 

00:15:21.819 --> 00:15:23.939
these methods throughout the preview
cycle and that'll help you to build apps

00:15:23.939 --> 00:15:23.949
cycle and that'll help you to build apps
 

00:15:23.949 --> 00:15:26.160
cycle and that'll help you to build apps
udders fast and easy to log onto as

00:15:26.160 --> 00:15:26.170
udders fast and easy to log onto as
 

00:15:26.170 --> 00:15:32.129
udders fast and easy to log onto as
possible a third area of focus for

00:15:32.129 --> 00:15:32.139
possible a third area of focus for
 

00:15:32.139 --> 00:15:33.989
possible a third area of focus for
standalone wear apps is how to retrieve

00:15:33.989 --> 00:15:33.999
standalone wear apps is how to retrieve
 

00:15:33.999 --> 00:15:36.359
standalone wear apps is how to retrieve
notification from the cloud either for

00:15:36.359 --> 00:15:36.369
notification from the cloud either for
 

00:15:36.369 --> 00:15:38.340
notification from the cloud either for
display to the user as date or as data

00:15:38.340 --> 00:15:38.350
display to the user as date or as data
 

00:15:38.350 --> 00:15:41.340
display to the user as date or as data
for your wearable app to use Google

00:15:41.340 --> 00:15:41.350
for your wearable app to use Google
 

00:15:41.350 --> 00:15:43.379
for your wearable app to use Google
Cloud messaging now known as firebase

00:15:43.379 --> 00:15:43.389
Cloud messaging now known as firebase
 

00:15:43.389 --> 00:15:46.049
Cloud messaging now known as firebase
Cloud messaging or fcm is now supported

00:15:46.049 --> 00:15:46.059
Cloud messaging or fcm is now supported
 

00:15:46.059 --> 00:15:48.929
Cloud messaging or fcm is now supported
by where FCM allows you to public to

00:15:48.929 --> 00:15:48.939
by where FCM allows you to public to
 

00:15:48.939 --> 00:15:51.150
by where FCM allows you to public to
push data and notifications directly to

00:15:51.150 --> 00:15:51.160
push data and notifications directly to
 

00:15:51.160 --> 00:15:54.479
push data and notifications directly to
where devices from the cloud example

00:15:54.479 --> 00:15:54.489
where devices from the cloud example
 

00:15:54.489 --> 00:15:56.220
where devices from the cloud example
uses include delivering sync tickles

00:15:56.220 --> 00:15:56.230
uses include delivering sync tickles
 

00:15:56.230 --> 00:15:58.650
uses include delivering sync tickles
small data payloads and user visible

00:15:58.650 --> 00:15:58.660
small data payloads and user visible
 

00:15:58.660 --> 00:16:01.109
small data payloads and user visible
notification it works well with those

00:16:01.109 --> 00:16:01.119
notification it works well with those
 

00:16:01.119 --> 00:16:04.109
notification it works well with those
and is cross-platform the same reasons

00:16:04.109 --> 00:16:04.119
and is cross-platform the same reasons
 

00:16:04.119 --> 00:16:06.179
and is cross-platform the same reasons
to use this service on phones apply to

00:16:06.179 --> 00:16:06.189
to use this service on phones apply to
 

00:16:06.189 --> 00:16:07.489
to use this service on phones apply to
standalone wear apps

00:16:07.489 --> 00:16:07.499
standalone wear apps
 

00:16:07.499 --> 00:16:10.499
standalone wear apps
it's the recommended way to push events

00:16:10.499 --> 00:16:10.509
it's the recommended way to push events
 

00:16:10.509 --> 00:16:13.980
it's the recommended way to push events
to watches to send messages using FCM

00:16:13.980 --> 00:16:13.990
to watches to send messages using FCM
 

00:16:13.990 --> 00:16:16.619
to watches to send messages using FCM
first collect a registration token when

00:16:16.619 --> 00:16:16.629
first collect a registration token when
 

00:16:16.629 --> 00:16:18.689
first collect a registration token when
your wearable app runs and include it as

00:16:18.689 --> 00:16:18.699
your wearable app runs and include it as
 

00:16:18.699 --> 00:16:21.030
your wearable app runs and include it as
a destination when posting messages to

00:16:21.030 --> 00:16:21.040
a destination when posting messages to
 

00:16:21.040 --> 00:16:23.569
a destination when posting messages to
the FCM rest endpoint from your server

00:16:23.569 --> 00:16:23.579
the FCM rest endpoint from your server
 

00:16:23.579 --> 00:16:25.980
the FCM rest endpoint from your server
those messages will then be delivered to

00:16:25.980 --> 00:16:25.990
those messages will then be delivered to
 

00:16:25.990 --> 00:16:29.939
those messages will then be delivered to
that device FCM messages can include two

00:16:29.939 --> 00:16:29.949
that device FCM messages can include two
 

00:16:29.949 --> 00:16:32.309
that device FCM messages can include two
types of payloads here's an example of

00:16:32.309 --> 00:16:32.319
types of payloads here's an example of
 

00:16:32.319 --> 00:16:34.439
types of payloads here's an example of
JSON format a message they will deliver

00:16:34.439 --> 00:16:34.449
JSON format a message they will deliver
 

00:16:34.449 --> 00:16:36.600
JSON format a message they will deliver
a user visible notification directly to

00:16:36.600 --> 00:16:36.610
a user visible notification directly to
 

00:16:36.610 --> 00:16:39.049
a user visible notification directly to
the stream when received by aware device

00:16:39.049 --> 00:16:39.059
the stream when received by aware device
 

00:16:39.059 --> 00:16:41.069
the stream when received by aware device
when the user taps this notification

00:16:41.069 --> 00:16:41.079
when the user taps this notification
 

00:16:41.079 --> 00:16:45.569
when the user taps this notification
your app is launched the second type of

00:16:45.569 --> 00:16:45.579
your app is launched the second type of
 

00:16:45.579 --> 00:16:47.819
your app is launched the second type of
payload is a data payload with a set of

00:16:47.819 --> 00:16:47.829
payload is a data payload with a set of
 

00:16:47.829 --> 00:16:50.549
payload is a data payload with a set of
custom key value pairs you can include

00:16:50.549 --> 00:16:50.559
custom key value pairs you can include
 

00:16:50.559 --> 00:16:52.079
custom key value pairs you can include
both of these types of payloads in the

00:16:52.079 --> 00:16:52.089
both of these types of payloads in the
 

00:16:52.089 --> 00:16:56.639
both of these types of payloads in the
same message as well where FCM is for

00:16:56.639 --> 00:16:56.649
same message as well where FCM is for
 

00:16:56.649 --> 00:16:58.769
same message as well where FCM is for
notifications from cloud to device will

00:16:58.769 --> 00:16:58.779
notifications from cloud to device will
 

00:16:58.779 --> 00:17:00.119
notifications from cloud to device will
now talk a little bit about Android

00:17:00.119 --> 00:17:00.129
now talk a little bit about Android
 

00:17:00.129 --> 00:17:02.639
now talk a little bit about Android
notifications one of the most useful

00:17:02.639 --> 00:17:02.649
notifications one of the most useful
 

00:17:02.649 --> 00:17:04.829
notifications one of the most useful
features of a wear device is the ability

00:17:04.829 --> 00:17:04.839
features of a wear device is the ability
 

00:17:04.839 --> 00:17:07.049
features of a wear device is the ability
to see your phone notifications bridge

00:17:07.049 --> 00:17:07.059
to see your phone notifications bridge
 

00:17:07.059 --> 00:17:09.600
to see your phone notifications bridge
to the wrist with standalone wear apps

00:17:09.600 --> 00:17:09.610
to the wrist with standalone wear apps
 

00:17:09.610 --> 00:17:11.970
to the wrist with standalone wear apps
both phone and watch may receive a

00:17:11.970 --> 00:17:11.980
both phone and watch may receive a
 

00:17:11.980 --> 00:17:13.799
both phone and watch may receive a
similar cloud event and decide

00:17:13.799 --> 00:17:13.809
similar cloud event and decide
 

00:17:13.809 --> 00:17:15.449
similar cloud event and decide
independently to display a notification

00:17:15.449 --> 00:17:15.459
independently to display a notification
 

00:17:15.459 --> 00:17:18.389
independently to display a notification
for that content this may result in

00:17:18.389 --> 00:17:18.399
for that content this may result in
 

00:17:18.399 --> 00:17:20.399
for that content this may result in
duplicate notifications showing in the

00:17:20.399 --> 00:17:20.409
duplicate notifications showing in the
 

00:17:20.409 --> 00:17:21.230
duplicate notifications showing in the
stream

00:17:21.230 --> 00:17:21.240
stream
 

00:17:21.240 --> 00:17:23.149
stream
one for the wear side notification and

00:17:23.149 --> 00:17:23.159
one for the wear side notification and
 

00:17:23.159 --> 00:17:27.049
one for the wear side notification and
one for the phone side notification you

00:17:27.049 --> 00:17:27.059
one for the phone side notification you
 

00:17:27.059 --> 00:17:28.700
one for the phone side notification you
can stop a notification from bridging

00:17:28.700 --> 00:17:28.710
can stop a notification from bridging
 

00:17:28.710 --> 00:17:31.340
can stop a notification from bridging
phone side using the set local only API

00:17:31.340 --> 00:17:31.350
phone side using the set local only API
 

00:17:31.350 --> 00:17:33.289
phone side using the set local only API
but that would also prevent it from

00:17:33.289 --> 00:17:33.299
but that would also prevent it from
 

00:17:33.299 --> 00:17:35.000
but that would also prevent it from
displaying on wear devices that don't

00:17:35.000 --> 00:17:35.010
displaying on wear devices that don't
 

00:17:35.010 --> 00:17:36.970
displaying on wear devices that don't
have your wearable app installed

00:17:36.970 --> 00:17:36.980
have your wearable app installed
 

00:17:36.980 --> 00:17:40.039
have your wearable app installed
therefore we're introducing a new API to

00:17:40.039 --> 00:17:40.049
therefore we're introducing a new API to
 

00:17:40.049 --> 00:17:42.590
therefore we're introducing a new API to
disable notification bridging only when

00:17:42.590 --> 00:17:42.600
disable notification bridging only when
 

00:17:42.600 --> 00:17:43.990
disable notification bridging only when
the wear app is installed on the device

00:17:43.990 --> 00:17:44.000
the wear app is installed on the device
 

00:17:44.000 --> 00:17:46.610
the wear app is installed on the device
by adding the notification bridge mode

00:17:46.610 --> 00:17:46.620
by adding the notification bridge mode
 

00:17:46.620 --> 00:17:48.649
by adding the notification bridge mode
metadata element to your wear apps

00:17:48.649 --> 00:17:48.659
metadata element to your wear apps
 

00:17:48.659 --> 00:17:50.930
metadata element to your wear apps
manifest and setting it to no bridging

00:17:50.930 --> 00:17:50.940
manifest and setting it to no bridging
 

00:17:50.940 --> 00:17:53.539
manifest and setting it to no bridging
phone notifications will be ignored and

00:17:53.539 --> 00:17:53.549
phone notifications will be ignored and
 

00:17:53.549 --> 00:17:55.340
phone notifications will be ignored and
not displayed in the watch when your app

00:17:55.340 --> 00:17:55.350
not displayed in the watch when your app
 

00:17:55.350 --> 00:17:59.810
not displayed in the watch when your app
is present another API were adding for

00:17:59.810 --> 00:17:59.820
is present another API were adding for
 

00:17:59.820 --> 00:18:02.210
is present another API were adding for
and notifications is the ability to link

00:18:02.210 --> 00:18:02.220
and notifications is the ability to link
 

00:18:02.220 --> 00:18:04.460
and notifications is the ability to link
a phone side and a wear side

00:18:04.460 --> 00:18:04.470
a phone side and a wear side
 

00:18:04.470 --> 00:18:06.860
a phone side and a wear side
notification together so they dismiss at

00:18:06.860 --> 00:18:06.870
notification together so they dismiss at
 

00:18:06.870 --> 00:18:09.289
notification together so they dismiss at
the same time even if they were posted

00:18:09.289 --> 00:18:09.299
the same time even if they were posted
 

00:18:09.299 --> 00:18:11.870
the same time even if they were posted
independently this is useful if the

00:18:11.870 --> 00:18:11.880
independently this is useful if the
 

00:18:11.880 --> 00:18:15.139
independently this is useful if the
content is for the same topic the new

00:18:15.139 --> 00:18:15.149
content is for the same topic the new
 

00:18:15.149 --> 00:18:18.260
content is for the same topic the new
API set dismissal ID allows you to tag

00:18:18.260 --> 00:18:18.270
API set dismissal ID allows you to tag
 

00:18:18.270 --> 00:18:20.510
API set dismissal ID allows you to tag
notifications on both watch and phone as

00:18:20.510 --> 00:18:20.520
notifications on both watch and phone as
 

00:18:20.520 --> 00:18:23.419
notifications on both watch and phone as
dismissing together this API is now

00:18:23.419 --> 00:18:23.429
dismissing together this API is now
 

00:18:23.429 --> 00:18:25.549
dismissing together this API is now
available in the wearable extender class

00:18:25.549 --> 00:18:25.559
available in the wearable extender class
 

00:18:25.559 --> 00:18:28.330
available in the wearable extender class
in Android ends preview support library

00:18:28.330 --> 00:18:28.340
in Android ends preview support library
 

00:18:28.340 --> 00:18:30.950
in Android ends preview support library
you can see how to add a dismissal ID

00:18:30.950 --> 00:18:30.960
you can see how to add a dismissal ID
 

00:18:30.960 --> 00:18:34.519
you can see how to add a dismissal ID
string to a notification here if your

00:18:34.519 --> 00:18:34.529
string to a notification here if your
 

00:18:34.529 --> 00:18:36.350
string to a notification here if your
app on watch and phone each post a

00:18:36.350 --> 00:18:36.360
app on watch and phone each post a
 

00:18:36.360 --> 00:18:38.029
app on watch and phone each post a
notification with the same dismissal ID

00:18:38.029 --> 00:18:38.039
notification with the same dismissal ID
 

00:18:38.039 --> 00:18:40.100
notification with the same dismissal ID
and the user dismisses either one of

00:18:40.100 --> 00:18:40.110
and the user dismisses either one of
 

00:18:40.110 --> 00:18:41.659
and the user dismisses either one of
them the other will dismiss

00:18:41.659 --> 00:18:41.669
them the other will dismiss
 

00:18:41.669 --> 00:18:46.159
them the other will dismiss
automatically a fourth area of focus for

00:18:46.159 --> 00:18:46.169
automatically a fourth area of focus for
 

00:18:46.169 --> 00:18:48.169
automatically a fourth area of focus for
standalone wear apps is how to get them

00:18:48.169 --> 00:18:48.179
standalone wear apps is how to get them
 

00:18:48.179 --> 00:18:50.240
standalone wear apps is how to get them
installed and distributed and we have

00:18:50.240 --> 00:18:50.250
installed and distributed and we have
 

00:18:50.250 --> 00:18:51.680
installed and distributed and we have
some exciting changes coming in where

00:18:51.680 --> 00:18:51.690
some exciting changes coming in where
 

00:18:51.690 --> 00:18:56.360
some exciting changes coming in where
2.0 and where 2.0 wear apps are

00:18:56.360 --> 00:18:56.370
2.0 and where 2.0 wear apps are
 

00:18:56.370 --> 00:18:58.430
2.0 and where 2.0 wear apps are
downloaded directly to devices from Play

00:18:58.430 --> 00:18:58.440
downloaded directly to devices from Play
 

00:18:58.440 --> 00:19:00.680
downloaded directly to devices from Play
Store you no longer need to bundle them

00:19:00.680 --> 00:19:00.690
Store you no longer need to bundle them
 

00:19:00.690 --> 00:19:03.080
Store you no longer need to bundle them
inside of your phone app we are

00:19:03.080 --> 00:19:03.090
inside of your phone app we are
 

00:19:03.090 --> 00:19:05.000
inside of your phone app we are
expanding the multi apk feature of

00:19:05.000 --> 00:19:05.010
expanding the multi apk feature of
 

00:19:05.010 --> 00:19:07.070
expanding the multi apk feature of
Google Play Developer console to support

00:19:07.070 --> 00:19:07.080
Google Play Developer console to support
 

00:19:07.080 --> 00:19:10.399
Google Play Developer console to support
wear multi apk allows you to publish

00:19:10.399 --> 00:19:10.409
wear multi apk allows you to publish
 

00:19:10.409 --> 00:19:13.430
wear multi apk allows you to publish
separate apks for your application for

00:19:13.430 --> 00:19:13.440
separate apks for your application for
 

00:19:13.440 --> 00:19:15.470
separate apks for your application for
different device configurations you'll

00:19:15.470 --> 00:19:15.480
different device configurations you'll
 

00:19:15.480 --> 00:19:17.480
different device configurations you'll
now be able to have one more one or more

00:19:17.480 --> 00:19:17.490
now be able to have one more one or more
 

00:19:17.490 --> 00:19:20.360
now be able to have one more one or more
phone tablet wear or other apks in your

00:19:20.360 --> 00:19:20.370
phone tablet wear or other apks in your
 

00:19:20.370 --> 00:19:23.120
phone tablet wear or other apks in your
Play Store listing at the same time this

00:19:23.120 --> 00:19:23.130
Play Store listing at the same time this
 

00:19:23.130 --> 00:19:24.769
Play Store listing at the same time this
change brings with it a number of

00:19:24.769 --> 00:19:24.779
change brings with it a number of
 

00:19:24.779 --> 00:19:27.970
change brings with it a number of
benefits including smaller phone apks a

00:19:27.970 --> 00:19:27.980
benefits including smaller phone apks a
 

00:19:27.980 --> 00:19:30.560
benefits including smaller phone apks a
decoupled release process where your

00:19:30.560 --> 00:19:30.570
decoupled release process where your
 

00:19:30.570 --> 00:19:32.269
decoupled release process where your
phone app and where app can be updated

00:19:32.269 --> 00:19:32.279
phone app and where app can be updated
 

00:19:32.279 --> 00:19:33.739
phone app and where app can be updated
independently

00:19:33.739 --> 00:19:33.749
independently
 

00:19:33.749 --> 00:19:36.539
independently
support for per application apks when

00:19:36.539 --> 00:19:36.549
support for per application apks when
 

00:19:36.549 --> 00:19:39.119
support for per application apks when
using the per architecture apks when

00:19:39.119 --> 00:19:39.129
using the per architecture apks when
 

00:19:39.129 --> 00:19:43.289
using the per architecture apks when
using native libraries and more to give

00:19:43.289 --> 00:19:43.299
using native libraries and more to give
 

00:19:43.299 --> 00:19:45.690
using native libraries and more to give
you a taste for how multi-apk support

00:19:45.690 --> 00:19:45.700
you a taste for how multi-apk support
 

00:19:45.700 --> 00:19:47.669
you a taste for how multi-apk support
will work for where here's an Android

00:19:47.669 --> 00:19:47.679
will work for where here's an Android
 

00:19:47.679 --> 00:19:49.759
will work for where here's an Android
manifest file for a typical wear block

00:19:49.759 --> 00:19:49.769
manifest file for a typical wear block
 

00:19:49.769 --> 00:19:52.560
manifest file for a typical wear block
it includes a uses feature element set

00:19:52.560 --> 00:19:52.570
it includes a uses feature element set
 

00:19:52.570 --> 00:19:54.899
it includes a uses feature element set
to hardware type watch because of this

00:19:54.899 --> 00:19:54.909
to hardware type watch because of this
 

00:19:54.909 --> 00:19:57.149
to hardware type watch because of this
feature istrict apks bolt from this

00:19:57.149 --> 00:19:57.159
feature istrict apks bolt from this
 

00:19:57.159 --> 00:19:59.459
feature istrict apks bolt from this
manifest will target only wear devices

00:19:59.459 --> 00:19:59.469
manifest will target only wear devices
 

00:19:59.469 --> 00:20:03.060
manifest will target only wear devices
in Google Play similarly apks built

00:20:03.060 --> 00:20:03.070
in Google Play similarly apks built
 

00:20:03.070 --> 00:20:04.949
in Google Play similarly apks built
without this restrict will not target

00:20:04.949 --> 00:20:04.959
without this restrict will not target
 

00:20:04.959 --> 00:20:07.799
without this restrict will not target
wear devices wear device targeting can

00:20:07.799 --> 00:20:07.809
wear devices wear device targeting can
 

00:20:07.809 --> 00:20:09.959
wear devices wear device targeting can
be combined with other criteria such as

00:20:09.959 --> 00:20:09.969
be combined with other criteria such as
 

00:20:09.969 --> 00:20:13.019
be combined with other criteria such as
SDK version screen resolution and CPU

00:20:13.019 --> 00:20:13.029
SDK version screen resolution and CPU
 

00:20:13.029 --> 00:20:15.569
SDK version screen resolution and CPU
architecture let's walk through an

00:20:15.569 --> 00:20:15.579
architecture let's walk through an
 

00:20:15.579 --> 00:20:17.669
architecture let's walk through an
example of how this may work in Google

00:20:17.669 --> 00:20:17.679
example of how this may work in Google
 

00:20:17.679 --> 00:20:21.419
example of how this may work in Google
Play Developer console say you've built

00:20:21.419 --> 00:20:21.429
Play Developer console say you've built
 

00:20:21.429 --> 00:20:23.519
Play Developer console say you've built
both a phone apk and a wearable apk for

00:20:23.519 --> 00:20:23.529
both a phone apk and a wearable apk for
 

00:20:23.529 --> 00:20:25.709
both a phone apk and a wearable apk for
your application in Android studio you

00:20:25.709 --> 00:20:25.719
your application in Android studio you
 

00:20:25.719 --> 00:20:27.329
your application in Android studio you
then go to the Google Play Developer

00:20:27.329 --> 00:20:27.339
then go to the Google Play Developer
 

00:20:27.339 --> 00:20:29.789
then go to the Google Play Developer
console to upload both of them one at a

00:20:29.789 --> 00:20:29.799
console to upload both of them one at a
 

00:20:29.799 --> 00:20:32.399
console to upload both of them one at a
time you'll need to select advanced mode

00:20:32.399 --> 00:20:32.409
time you'll need to select advanced mode
 

00:20:32.409 --> 00:20:34.529
time you'll need to select advanced mode
in order to have more than one apk in

00:20:34.529 --> 00:20:34.539
in order to have more than one apk in
 

00:20:34.539 --> 00:20:39.239
in order to have more than one apk in
your application at once after uploading

00:20:39.239 --> 00:20:39.249
your application at once after uploading
 

00:20:39.249 --> 00:20:41.789
your application at once after uploading
the Webley cave apk first we'd expect

00:20:41.789 --> 00:20:41.799
the Webley cave apk first we'd expect
 

00:20:41.799 --> 00:20:43.859
the Webley cave apk first we'd expect
the list of supported devices for this

00:20:43.859 --> 00:20:43.869
the list of supported devices for this
 

00:20:43.869 --> 00:20:47.239
the list of supported devices for this
application to be just watch devices and

00:20:47.239 --> 00:20:47.249
application to be just watch devices and
 

00:20:47.249 --> 00:20:49.709
application to be just watch devices and
by clicking the supported devices link

00:20:49.709 --> 00:20:49.719
by clicking the supported devices link
 

00:20:49.719 --> 00:20:52.259
by clicking the supported devices link
you'd be able to verify that only watch

00:20:52.259 --> 00:20:52.269
you'd be able to verify that only watch
 

00:20:52.269 --> 00:20:55.589
you'd be able to verify that only watch
devices are shown now you upload the

00:20:55.589 --> 00:20:55.599
devices are shown now you upload the
 

00:20:55.599 --> 00:20:59.519
devices are shown now you upload the
phone apk to developer console the setup

00:20:59.519 --> 00:20:59.529
phone apk to developer console the setup
 

00:20:59.529 --> 00:21:01.259
phone apk to developer console the setup
supported devices for this app has now

00:21:01.259 --> 00:21:01.269
supported devices for this app has now
 

00:21:01.269 --> 00:21:04.079
supported devices for this app has now
increased to over 2,000 and includes

00:21:04.079 --> 00:21:04.089
increased to over 2,000 and includes
 

00:21:04.089 --> 00:21:04.699
increased to over 2,000 and includes
phones

00:21:04.699 --> 00:21:04.709
phones
 

00:21:04.709 --> 00:21:07.409
phones
you'll also notice at the bottom of the

00:21:07.409 --> 00:21:07.419
you'll also notice at the bottom of the
 

00:21:07.419 --> 00:21:10.409
you'll also notice at the bottom of the
screen there are two apks listed one for

00:21:10.409 --> 00:21:10.419
screen there are two apks listed one for
 

00:21:10.419 --> 00:21:13.229
screen there are two apks listed one for
watch and one for found the watch entry

00:21:13.229 --> 00:21:13.239
watch and one for found the watch entry
 

00:21:13.239 --> 00:21:15.769
watch and one for found the watch entry
shows the features took being present

00:21:15.769 --> 00:21:15.779
shows the features took being present
 

00:21:15.779 --> 00:21:18.869
shows the features took being present
multi apk support requires you to use a

00:21:18.869 --> 00:21:18.879
multi apk support requires you to use a
 

00:21:18.879 --> 00:21:21.539
multi apk support requires you to use a
unique version code for each upload apk

00:21:21.539 --> 00:21:21.549
unique version code for each upload apk
 

00:21:21.549 --> 00:21:24.839
unique version code for each upload apk
in this example the wearable apk was set

00:21:24.839 --> 00:21:24.849
in this example the wearable apk was set
 

00:21:24.849 --> 00:21:26.999
in this example the wearable apk was set
to version code 2 while the phone apk

00:21:26.999 --> 00:21:27.009
to version code 2 while the phone apk
 

00:21:27.009 --> 00:21:31.949
to version code 2 while the phone apk
used version code one since we're 1.0

00:21:31.949 --> 00:21:31.959
used version code one since we're 1.0
 

00:21:31.959 --> 00:21:34.379
used version code one since we're 1.0
and our studio and Gradle have provided

00:21:34.379 --> 00:21:34.389
and our studio and Gradle have provided
 

00:21:34.389 --> 00:21:36.119
and our studio and Gradle have provided
a very simple way to automatically

00:21:36.119 --> 00:21:36.129
a very simple way to automatically
 

00:21:36.129 --> 00:21:38.940
a very simple way to automatically
bundle where apks inside of phone apks

00:21:38.940 --> 00:21:38.950
bundle where apks inside of phone apks
 

00:21:38.950 --> 00:21:42.440
bundle where apks inside of phone apks
as shown you can turn this bundling off

00:21:42.440 --> 00:21:42.450
as shown you can turn this bundling off
 

00:21:42.450 --> 00:21:44.879
as shown you can turn this bundling off
by removing the wear app to project

00:21:44.879 --> 00:21:44.889
by removing the wear app to project
 

00:21:44.889 --> 00:21:46.409
by removing the wear app to project
dependency from your phone apps Gradle

00:21:46.409 --> 00:21:46.419
dependency from your phone apps Gradle
 

00:21:46.419 --> 00:21:47.190
dependency from your phone apps Gradle
file

00:21:47.190 --> 00:21:47.200
file
 

00:21:47.200 --> 00:21:51.149
file
while testing stand-alone ops multi-apk

00:21:51.149 --> 00:21:51.159
while testing stand-alone ops multi-apk
 

00:21:51.159 --> 00:21:54.149
while testing stand-alone ops multi-apk
support for where 2.0 is coming soon and

00:21:54.149 --> 00:21:54.159
support for where 2.0 is coming soon and
 

00:21:54.159 --> 00:21:55.409
support for where 2.0 is coming soon and
we'll have more announcements on this

00:21:55.409 --> 00:21:55.419
we'll have more announcements on this
 

00:21:55.419 --> 00:21:58.230
we'll have more announcements on this
over the summer for now simply sideload

00:21:58.230 --> 00:21:58.240
over the summer for now simply sideload
 

00:21:58.240 --> 00:22:00.870
over the summer for now simply sideload
your application just send Landwehr app

00:22:00.870 --> 00:22:00.880
your application just send Landwehr app
 

00:22:00.880 --> 00:22:03.690
your application just send Landwehr app
directly to your device for testing now

00:22:03.690 --> 00:22:03.700
directly to your device for testing now
 

00:22:03.700 --> 00:22:04.830
directly to your device for testing now
I'll hand it over to Kennedy to show you

00:22:04.830 --> 00:22:04.840
I'll hand it over to Kennedy to show you
 

00:22:04.840 --> 00:22:08.100
I'll hand it over to Kennedy to show you
a couple examples ok

00:22:08.100 --> 00:22:08.110
a couple examples ok
 

00:22:08.110 --> 00:22:10.710
a couple examples ok
so let's put together a little

00:22:10.710 --> 00:22:10.720
so let's put together a little
 

00:22:10.720 --> 00:22:12.360
so let's put together a little
principles that we just talked about and

00:22:12.360 --> 00:22:12.370
principles that we just talked about and
 

00:22:12.370 --> 00:22:14.340
principles that we just talked about and
see what it'll be like to make

00:22:14.340 --> 00:22:14.350
see what it'll be like to make
 

00:22:14.350 --> 00:22:16.529
see what it'll be like to make
standalone apps and we're 2.0 will start

00:22:16.529 --> 00:22:16.539
standalone apps and we're 2.0 will start
 

00:22:16.539 --> 00:22:19.080
standalone apps and we're 2.0 will start
with a chat app and for this example

00:22:19.080 --> 00:22:19.090
with a chat app and for this example
 

00:22:19.090 --> 00:22:20.879
with a chat app and for this example
I'll assume a couple of things I'll

00:22:20.879 --> 00:22:20.889
I'll assume a couple of things I'll
 

00:22:20.889 --> 00:22:22.830
I'll assume a couple of things I'll
assume that you've already got an

00:22:22.830 --> 00:22:22.840
assume that you've already got an
 

00:22:22.840 --> 00:22:25.950
assume that you've already got an
existing Android phone app you are at

00:22:25.950 --> 00:22:25.960
existing Android phone app you are at
 

00:22:25.960 --> 00:22:28.019
existing Android phone app you are at
kind of production quality and you're

00:22:28.019 --> 00:22:28.029
kind of production quality and you're
 

00:22:28.029 --> 00:22:29.970
kind of production quality and you're
public and you have a fairly big user

00:22:29.970 --> 00:22:29.980
public and you have a fairly big user
 

00:22:29.980 --> 00:22:34.529
public and you have a fairly big user
base ok so going from the top key use

00:22:34.529 --> 00:22:34.539
base ok so going from the top key use
 

00:22:34.539 --> 00:22:36.870
base ok so going from the top key use
cases are pretty obvious the key use

00:22:36.870 --> 00:22:36.880
cases are pretty obvious the key use
 

00:22:36.880 --> 00:22:38.070
cases are pretty obvious the key use
cases are going to be send a chat

00:22:38.070 --> 00:22:38.080
cases are going to be send a chat
 

00:22:38.080 --> 00:22:41.279
cases are going to be send a chat
receive a chat basically so that's going

00:22:41.279 --> 00:22:41.289
receive a chat basically so that's going
 

00:22:41.289 --> 00:22:42.990
receive a chat basically so that's going
to require a bunch of different

00:22:42.990 --> 00:22:43.000
to require a bunch of different
 

00:22:43.000 --> 00:22:45.299
to require a bunch of different
activities log in list of friends chat

00:22:45.299 --> 00:22:45.309
activities log in list of friends chat
 

00:22:45.309 --> 00:22:47.789
activities log in list of friends chat
settings etc but because we're really

00:22:47.789 --> 00:22:47.799
settings etc but because we're really
 

00:22:47.799 --> 00:22:49.740
settings etc but because we're really
trying to streamline interactions you

00:22:49.740 --> 00:22:49.750
trying to streamline interactions you
 

00:22:49.750 --> 00:22:52.620
trying to streamline interactions you
want to make sure that every UI that you

00:22:52.620 --> 00:22:52.630
want to make sure that every UI that you
 

00:22:52.630 --> 00:22:54.930
want to make sure that every UI that you
build is in service of those key use

00:22:54.930 --> 00:22:54.940
build is in service of those key use
 

00:22:54.940 --> 00:22:58.350
build is in service of those key use
cases ok so now let's talk about how

00:22:58.350 --> 00:22:58.360
cases ok so now let's talk about how
 

00:22:58.360 --> 00:23:00.600
cases ok so now let's talk about how
we're gonna build it we've already got a

00:23:00.600 --> 00:23:00.610
we're gonna build it we've already got a
 

00:23:00.610 --> 00:23:03.629
we're gonna build it we've already got a
phone project in Android studio so we're

00:23:03.629 --> 00:23:03.639
phone project in Android studio so we're
 

00:23:03.639 --> 00:23:05.759
phone project in Android studio so we're
going to create a second flavor of our

00:23:05.759 --> 00:23:05.769
going to create a second flavor of our
 

00:23:05.769 --> 00:23:08.009
going to create a second flavor of our
build so this new flavor is going to be

00:23:08.009 --> 00:23:08.019
build so this new flavor is going to be
 

00:23:08.019 --> 00:23:10.259
build so this new flavor is going to be
our wearable build and it will start out

00:23:10.259 --> 00:23:10.269
our wearable build and it will start out
 

00:23:10.269 --> 00:23:12.870
our wearable build and it will start out
the same as the phone but we'll factor

00:23:12.870 --> 00:23:12.880
the same as the phone but we'll factor
 

00:23:12.880 --> 00:23:15.930
the same as the phone but we'll factor
out the shared code between the two

00:23:15.930 --> 00:23:15.940
out the shared code between the two
 

00:23:15.940 --> 00:23:18.690
out the shared code between the two
builds and we'll build a shared library

00:23:18.690 --> 00:23:18.700
builds and we'll build a shared library
 

00:23:18.700 --> 00:23:21.000
builds and we'll build a shared library
that both of those will use so the first

00:23:21.000 --> 00:23:21.010
that both of those will use so the first
 

00:23:21.010 --> 00:23:22.620
that both of those will use so the first
thing that we'll put into that will be

00:23:22.620 --> 00:23:22.630
thing that we'll put into that will be
 

00:23:22.630 --> 00:23:25.740
thing that we'll put into that will be
our entire rest client service that we

00:23:25.740 --> 00:23:25.750
our entire rest client service that we
 

00:23:25.750 --> 00:23:27.360
our entire rest client service that we
had built for the phone so that both our

00:23:27.360 --> 00:23:27.370
had built for the phone so that both our
 

00:23:27.370 --> 00:23:29.669
had built for the phone so that both our
wearable and phone are now able to talk

00:23:29.669 --> 00:23:29.679
wearable and phone are now able to talk
 

00:23:29.679 --> 00:23:32.970
wearable and phone are now able to talk
to the cloud so on top of that rest

00:23:32.970 --> 00:23:32.980
to the cloud so on top of that rest
 

00:23:32.980 --> 00:23:34.350
to the cloud so on top of that rest
client we're going to build some

00:23:34.350 --> 00:23:34.360
client we're going to build some
 

00:23:34.360 --> 00:23:36.990
client we're going to build some
activities now we're going to use

00:23:36.990 --> 00:23:37.000
activities now we're going to use
 

00:23:37.000 --> 00:23:39.899
activities now we're going to use
material design for wear and I'll just

00:23:39.899 --> 00:23:39.909
material design for wear and I'll just
 

00:23:39.909 --> 00:23:41.940
material design for wear and I'll just
hand way through that because the next

00:23:41.940 --> 00:23:41.950
hand way through that because the next
 

00:23:41.950 --> 00:23:44.549
hand way through that because the next
talk in this room at 3:00 is about

00:23:44.549 --> 00:23:44.559
talk in this room at 3:00 is about
 

00:23:44.559 --> 00:23:47.730
talk in this room at 3:00 is about
material design for wear so now we have

00:23:47.730 --> 00:23:47.740
material design for wear so now we have
 

00:23:47.740 --> 00:23:50.669
material design for wear so now we have
a wearable app that uses those material

00:23:50.669 --> 00:23:50.679
a wearable app that uses those material
 

00:23:50.679 --> 00:23:53.009
a wearable app that uses those material
design principles and can talk to a web

00:23:53.009 --> 00:23:53.019
design principles and can talk to a web
 

00:23:53.019 --> 00:23:55.230
design principles and can talk to a web
service on the watch so we're already

00:23:55.230 --> 00:23:55.240
service on the watch so we're already
 

00:23:55.240 --> 00:24:00.110
service on the watch so we're already
pretty far along in building an app but

00:24:00.110 --> 00:24:00.120
pretty far along in building an app but
 

00:24:00.120 --> 00:24:01.640
pretty far along in building an app but
this app is not always going to be in

00:24:01.640 --> 00:24:01.650
this app is not always going to be in
 

00:24:01.650 --> 00:24:03.890
this app is not always going to be in
the foreground messaging is really

00:24:03.890 --> 00:24:03.900
the foreground messaging is really
 

00:24:03.900 --> 00:24:06.500
the foreground messaging is really
driven by notifications so the next

00:24:06.500 --> 00:24:06.510
driven by notifications so the next
 

00:24:06.510 --> 00:24:08.000
driven by notifications so the next
thing that we're going to add to our app

00:24:08.000 --> 00:24:08.010
thing that we're going to add to our app
 

00:24:08.010 --> 00:24:11.930
thing that we're going to add to our app
is we're going to register it for FCM so

00:24:11.930 --> 00:24:11.940
is we're going to register it for FCM so
 

00:24:11.940 --> 00:24:14.180
is we're going to register it for FCM so
once we register for FCN we're gonna

00:24:14.180 --> 00:24:14.190
once we register for FCN we're gonna
 

00:24:14.190 --> 00:24:17.090
once we register for FCN we're gonna
start getting pings from FCM whenever we

00:24:17.090 --> 00:24:17.100
start getting pings from FCM whenever we
 

00:24:17.100 --> 00:24:19.460
start getting pings from FCM whenever we
need to show a notification because

00:24:19.460 --> 00:24:19.470
need to show a notification because
 

00:24:19.470 --> 00:24:21.770
need to show a notification because
we're now getting pings will disable

00:24:21.770 --> 00:24:21.780
we're now getting pings will disable
 

00:24:21.780 --> 00:24:24.290
we're now getting pings will disable
bridging so that we don't get bridge

00:24:24.290 --> 00:24:24.300
bridging so that we don't get bridge
 

00:24:24.300 --> 00:24:26.510
bridging so that we don't get bridge
notifications from the phone at the same

00:24:26.510 --> 00:24:26.520
notifications from the phone at the same
 

00:24:26.520 --> 00:24:29.750
notifications from the phone at the same
time when we show a notification

00:24:29.750 --> 00:24:29.760
time when we show a notification
 

00:24:29.760 --> 00:24:32.780
time when we show a notification
we'll use the new messaging style for a

00:24:32.780 --> 00:24:32.790
we'll use the new messaging style for a
 

00:24:32.790 --> 00:24:34.850
we'll use the new messaging style for a
notification which will show a really

00:24:34.850 --> 00:24:34.860
notification which will show a really
 

00:24:34.860 --> 00:24:37.370
notification which will show a really
nice presentation for that message on

00:24:37.370 --> 00:24:37.380
nice presentation for that message on
 

00:24:37.380 --> 00:24:40.580
nice presentation for that message on
the users watch now when the user taps

00:24:40.580 --> 00:24:40.590
the users watch now when the user taps
 

00:24:40.590 --> 00:24:42.170
the users watch now when the user taps
that reply button

00:24:42.170 --> 00:24:42.180
that reply button
 

00:24:42.180 --> 00:24:44.900
that reply button
we'll use a Content intent which will

00:24:44.900 --> 00:24:44.910
we'll use a Content intent which will
 

00:24:44.910 --> 00:24:47.300
we'll use a Content intent which will
allow us to start a reply activity

00:24:47.300 --> 00:24:47.310
allow us to start a reply activity
 

00:24:47.310 --> 00:24:49.580
allow us to start a reply activity
that's custom designed for our app and

00:24:49.580 --> 00:24:49.590
that's custom designed for our app and
 

00:24:49.590 --> 00:24:54.230
that's custom designed for our app and
it meets our exact needs okay so we're

00:24:54.230 --> 00:24:54.240
it meets our exact needs okay so we're
 

00:24:54.240 --> 00:24:55.910
it meets our exact needs okay so we're
gonna have to make this user sign-in

00:24:55.910 --> 00:24:55.920
gonna have to make this user sign-in
 

00:24:55.920 --> 00:24:58.460
gonna have to make this user sign-in
there is no not well we could make an

00:24:58.460 --> 00:24:58.470
there is no not well we could make an
 

00:24:58.470 --> 00:25:00.950
there is no not well we could make an
anonymous chat but we won't that means

00:25:00.950 --> 00:25:00.960
anonymous chat but we won't that means
 

00:25:00.960 --> 00:25:01.850
anonymous chat but we won't that means
we're going to start with a basic

00:25:01.850 --> 00:25:01.860
we're going to start with a basic
 

00:25:01.860 --> 00:25:03.710
we're going to start with a basic
sign-in activity so we're gonna have a

00:25:03.710 --> 00:25:03.720
sign-in activity so we're gonna have a
 

00:25:03.720 --> 00:25:05.870
sign-in activity so we're gonna have a
username and password as our two blank

00:25:05.870 --> 00:25:05.880
username and password as our two blank
 

00:25:05.880 --> 00:25:08.390
username and password as our two blank
boxes but then we're gonna add some fast

00:25:08.390 --> 00:25:08.400
boxes but then we're gonna add some fast
 

00:25:08.400 --> 00:25:11.090
boxes but then we're gonna add some fast
sign-in features so I'm going to assume

00:25:11.090 --> 00:25:11.100
sign-in features so I'm going to assume
 

00:25:11.100 --> 00:25:12.800
sign-in features so I'm going to assume
here that I already had an existing

00:25:12.800 --> 00:25:12.810
here that I already had an existing
 

00:25:12.810 --> 00:25:16.370
here that I already had an existing
ooofff web service and since I have that

00:25:16.370 --> 00:25:16.380
ooofff web service and since I have that
 

00:25:16.380 --> 00:25:18.380
ooofff web service and since I have that
smartlock is a really good option

00:25:18.380 --> 00:25:18.390
smartlock is a really good option
 

00:25:18.390 --> 00:25:19.880
smartlock is a really good option
because it integrates well with an

00:25:19.880 --> 00:25:19.890
because it integrates well with an
 

00:25:19.890 --> 00:25:22.820
because it integrates well with an
existing off service another option that

00:25:22.820 --> 00:25:22.830
existing off service another option that
 

00:25:22.830 --> 00:25:25.550
existing off service another option that
I can add is a auth URL which will allow

00:25:25.550 --> 00:25:25.560
I can add is a auth URL which will allow
 

00:25:25.560 --> 00:25:28.520
I can add is a auth URL which will allow
me to log in via a couple of changes

00:25:28.520 --> 00:25:28.530
me to log in via a couple of changes
 

00:25:28.530 --> 00:25:32.840
me to log in via a couple of changes
that all have to make to my web flow so

00:25:32.840 --> 00:25:32.850
that all have to make to my web flow so
 

00:25:32.850 --> 00:25:34.640
that all have to make to my web flow so
now let's start thinking about how to

00:25:34.640 --> 00:25:34.650
now let's start thinking about how to
 

00:25:34.650 --> 00:25:36.830
now let's start thinking about how to
make this app work really well when

00:25:36.830 --> 00:25:36.840
make this app work really well when
 

00:25:36.840 --> 00:25:38.720
make this app work really well when
you've got your phone we're gonna

00:25:38.720 --> 00:25:38.730
you've got your phone we're gonna
 

00:25:38.730 --> 00:25:41.660
you've got your phone we're gonna
coordinate dismissal by sending a

00:25:41.660 --> 00:25:41.670
coordinate dismissal by sending a
 

00:25:41.670 --> 00:25:44.630
coordinate dismissal by sending a
notification ID inside the FCM payload

00:25:44.630 --> 00:25:44.640
notification ID inside the FCM payload
 

00:25:44.640 --> 00:25:46.790
notification ID inside the FCM payload
for each of our messages from FCM and

00:25:46.790 --> 00:25:46.800
for each of our messages from FCM and
 

00:25:46.800 --> 00:25:49.790
for each of our messages from FCM and
then we'll add that dismissal ID sorry

00:25:49.790 --> 00:25:49.800
then we'll add that dismissal ID sorry
 

00:25:49.800 --> 00:25:51.140
then we'll add that dismissal ID sorry
we'll add the notification ID as a

00:25:51.140 --> 00:25:51.150
we'll add the notification ID as a
 

00:25:51.150 --> 00:25:54.260
we'll add the notification ID as a
dismissal ID to both the phone and the

00:25:54.260 --> 00:25:54.270
dismissal ID to both the phone and the
 

00:25:54.270 --> 00:25:56.600
dismissal ID to both the phone and the
watch notifications so then when I swipe

00:25:56.600 --> 00:25:56.610
watch notifications so then when I swipe
 

00:25:56.610 --> 00:25:58.460
watch notifications so then when I swipe
away a notification on one it will swipe

00:25:58.460 --> 00:25:58.470
away a notification on one it will swipe
 

00:25:58.470 --> 00:26:02.360
away a notification on one it will swipe
away on both so now we have a great

00:26:02.360 --> 00:26:02.370
away on both so now we have a great
 

00:26:02.370 --> 00:26:05.510
away on both so now we have a great
wearable chat app it works well with the

00:26:05.510 --> 00:26:05.520
wearable chat app it works well with the
 

00:26:05.520 --> 00:26:08.330
wearable chat app it works well with the
phone but we really need to test it on

00:26:08.330 --> 00:26:08.340
phone but we really need to test it on
 

00:26:08.340 --> 00:26:10.250
phone but we really need to test it on
all the watches we can get our hands on

00:26:10.250 --> 00:26:10.260
all the watches we can get our hands on
 

00:26:10.260 --> 00:26:12.350
all the watches we can get our hands on
connected to both types

00:26:12.350 --> 00:26:12.360
connected to both types
 

00:26:12.360 --> 00:26:14.600
connected to both types
device you really have to make sure that

00:26:14.600 --> 00:26:14.610
device you really have to make sure that
 

00:26:14.610 --> 00:26:16.490
device you really have to make sure that
your app is working well on both Android

00:26:16.490 --> 00:26:16.500
your app is working well on both Android
 

00:26:16.500 --> 00:26:20.120
your app is working well on both Android
and iOS connected watches then the next

00:26:20.120 --> 00:26:20.130
and iOS connected watches then the next
 

00:26:20.130 --> 00:26:21.500
and iOS connected watches then the next
thing that you really want to do when

00:26:21.500 --> 00:26:21.510
thing that you really want to do when
 

00:26:21.510 --> 00:26:23.840
thing that you really want to do when
you have an existing app is to profile

00:26:23.840 --> 00:26:23.850
you have an existing app is to profile
 

00:26:23.850 --> 00:26:26.690
you have an existing app is to profile
your rest services so probably in this

00:26:26.690 --> 00:26:26.700
your rest services so probably in this
 

00:26:26.700 --> 00:26:29.090
your rest services so probably in this
app what we're looking for is data

00:26:29.090 --> 00:26:29.100
app what we're looking for is data
 

00:26:29.100 --> 00:26:31.039
app what we're looking for is data
that's not being used on the wearable

00:26:31.039 --> 00:26:31.049
that's not being used on the wearable
 

00:26:31.049 --> 00:26:32.810
that's not being used on the wearable
and there are a couple of options we

00:26:32.810 --> 00:26:32.820
and there are a couple of options we
 

00:26:32.820 --> 00:26:34.700
and there are a couple of options we
have if we find big chunks of data that

00:26:34.700 --> 00:26:34.710
have if we find big chunks of data that
 

00:26:34.710 --> 00:26:36.169
have if we find big chunks of data that
aren't actually being shown to the user

00:26:36.169 --> 00:26:36.179
aren't actually being shown to the user
 

00:26:36.179 --> 00:26:38.450
aren't actually being shown to the user
one is that we can cut it out entirely

00:26:38.450 --> 00:26:38.460
one is that we can cut it out entirely
 

00:26:38.460 --> 00:26:39.860
one is that we can cut it out entirely
if it's not being used on the phone

00:26:39.860 --> 00:26:39.870
if it's not being used on the phone
 

00:26:39.870 --> 00:26:43.700
if it's not being used on the phone
either or we can make new requests and

00:26:43.700 --> 00:26:43.710
either or we can make new requests and
 

00:26:43.710 --> 00:26:46.130
either or we can make new requests and
responses that are specific to the

00:26:46.130 --> 00:26:46.140
responses that are specific to the
 

00:26:46.140 --> 00:26:48.890
responses that are specific to the
wearable app so sort of cutting out that

00:26:48.890 --> 00:26:48.900
wearable app so sort of cutting out that
 

00:26:48.900 --> 00:26:50.480
wearable app so sort of cutting out that
data and only showing the wearable what

00:26:50.480 --> 00:26:50.490
data and only showing the wearable what
 

00:26:50.490 --> 00:26:54.020
data and only showing the wearable what
it needs to know when we're ready to

00:26:54.020 --> 00:26:54.030
it needs to know when we're ready to
 

00:26:54.030 --> 00:26:55.820
it needs to know when we're ready to
distribute make an unbundled wearable

00:26:55.820 --> 00:26:55.830
distribute make an unbundled wearable
 

00:26:55.830 --> 00:26:58.340
distribute make an unbundled wearable
apk set up the manifest as Grif decided

00:26:58.340 --> 00:26:58.350
apk set up the manifest as Grif decided
 

00:26:58.350 --> 00:27:01.820
apk set up the manifest as Grif decided
that described and upload to play so now

00:27:01.820 --> 00:27:01.830
that described and upload to play so now
 

00:27:01.830 --> 00:27:04.520
that described and upload to play so now
we built a pretty easy chat app based on

00:27:04.520 --> 00:27:04.530
we built a pretty easy chat app based on
 

00:27:04.530 --> 00:27:07.220
we built a pretty easy chat app based on
our existing phone app and it works

00:27:07.220 --> 00:27:07.230
our existing phone app and it works
 

00:27:07.230 --> 00:27:11.480
our existing phone app and it works
great in where 2.0 okay go to another

00:27:11.480 --> 00:27:11.490
great in where 2.0 okay go to another
 

00:27:11.490 --> 00:27:15.500
great in where 2.0 okay go to another
example now a fitness app so everybody

00:27:15.500 --> 00:27:15.510
example now a fitness app so everybody
 

00:27:15.510 --> 00:27:17.270
example now a fitness app so everybody
has their favorite running and cycling

00:27:17.270 --> 00:27:17.280
has their favorite running and cycling
 

00:27:17.280 --> 00:27:19.610
has their favorite running and cycling
app and you know those are all pretty

00:27:19.610 --> 00:27:19.620
app and you know those are all pretty
 

00:27:19.620 --> 00:27:23.560
app and you know those are all pretty
horizontal so a new idea might be to go

00:27:23.560 --> 00:27:23.570
horizontal so a new idea might be to go
 

00:27:23.570 --> 00:27:26.390
horizontal so a new idea might be to go
vertical so I'm gonna make a rock

00:27:26.390 --> 00:27:26.400
vertical so I'm gonna make a rock
 

00:27:26.400 --> 00:27:29.240
vertical so I'm gonna make a rock
climbing app and this is a new idea so

00:27:29.240 --> 00:27:29.250
climbing app and this is a new idea so
 

00:27:29.250 --> 00:27:31.010
climbing app and this is a new idea so
we'll start from scratch with no

00:27:31.010 --> 00:27:31.020
we'll start from scratch with no
 

00:27:31.020 --> 00:27:33.169
we'll start from scratch with no
existing phone app no existing web

00:27:33.169 --> 00:27:33.179
existing phone app no existing web
 

00:27:33.179 --> 00:27:35.299
existing phone app no existing web
service so since we're starting from

00:27:35.299 --> 00:27:35.309
service so since we're starting from
 

00:27:35.309 --> 00:27:37.190
service so since we're starting from
scratch we'll really be thinking about

00:27:37.190 --> 00:27:37.200
scratch we'll really be thinking about
 

00:27:37.200 --> 00:27:39.590
scratch we'll really be thinking about
wearable first how people are going to

00:27:39.590 --> 00:27:39.600
wearable first how people are going to
 

00:27:39.600 --> 00:27:41.210
wearable first how people are going to
use a wearable detracked climbing what

00:27:41.210 --> 00:27:41.220
use a wearable detracked climbing what
 

00:27:41.220 --> 00:27:42.799
use a wearable detracked climbing what
kind of information they might want to

00:27:42.799 --> 00:27:42.809
kind of information they might want to
 

00:27:42.809 --> 00:27:47.330
kind of information they might want to
see on their watch so I'm gonna assume

00:27:47.330 --> 00:27:47.340
see on their watch so I'm gonna assume
 

00:27:47.340 --> 00:27:50.270
see on their watch so I'm gonna assume
here that there is some black box sensor

00:27:50.270 --> 00:27:50.280
here that there is some black box sensor
 

00:27:50.280 --> 00:27:53.120
here that there is some black box sensor
magic that somebody is going to build in

00:27:53.120 --> 00:27:53.130
magic that somebody is going to build in
 

00:27:53.130 --> 00:27:54.380
magic that somebody is going to build in
order to make this work

00:27:54.380 --> 00:27:54.390
order to make this work
 

00:27:54.390 --> 00:27:57.049
order to make this work
because I'm a p.m. and that means that I

00:27:57.049 --> 00:27:57.059
because I'm a p.m. and that means that I
 

00:27:57.059 --> 00:27:59.390
because I'm a p.m. and that means that I
don't have to code so say thank you

00:27:59.390 --> 00:27:59.400
don't have to code so say thank you
 

00:27:59.400 --> 00:28:02.930
don't have to code so say thank you
engineers but what we do want to make

00:28:02.930 --> 00:28:02.940
engineers but what we do want to make
 

00:28:02.940 --> 00:28:04.909
engineers but what we do want to make
sure is happening is that when were

00:28:04.909 --> 00:28:04.919
sure is happening is that when were
 

00:28:04.919 --> 00:28:07.280
sure is happening is that when were
processing when we're processing sensor

00:28:07.280 --> 00:28:07.290
processing when we're processing sensor
 

00:28:07.290 --> 00:28:09.710
processing when we're processing sensor
data that were as battery efficient as

00:28:09.710 --> 00:28:09.720
data that were as battery efficient as
 

00:28:09.720 --> 00:28:11.690
data that were as battery efficient as
we possibly can be because whenever

00:28:11.690 --> 00:28:11.700
we possibly can be because whenever
 

00:28:11.700 --> 00:28:13.880
we possibly can be because whenever
you're processing data the sent the

00:28:13.880 --> 00:28:13.890
you're processing data the sent the
 

00:28:13.890 --> 00:28:16.490
you're processing data the sent the
processor has to stay awake and that is

00:28:16.490 --> 00:28:16.500
processor has to stay awake and that is
 

00:28:16.500 --> 00:28:18.409
processor has to stay awake and that is
burnin battery so what we really don't

00:28:18.409 --> 00:28:18.419
burnin battery so what we really don't
 

00:28:18.419 --> 00:28:20.390
burnin battery so what we really don't
want to have is the user gets halfway up

00:28:20.390 --> 00:28:20.400
want to have is the user gets halfway up
 

00:28:20.400 --> 00:28:23.010
want to have is the user gets halfway up
that rock wall and then their watch dies

00:28:23.010 --> 00:28:23.020
that rock wall and then their watch dies
 

00:28:23.020 --> 00:28:25.799
that rock wall and then their watch dies
so once we process all the data we're

00:28:25.799 --> 00:28:25.809
so once we process all the data we're
 

00:28:25.809 --> 00:28:27.570
so once we process all the data we're
gonna store it locally in a sequel light

00:28:27.570 --> 00:28:27.580
gonna store it locally in a sequel light
 

00:28:27.580 --> 00:28:29.880
gonna store it locally in a sequel light
database in case a user isn't currently

00:28:29.880 --> 00:28:29.890
database in case a user isn't currently
 

00:28:29.890 --> 00:28:34.320
database in case a user isn't currently
connected to the network now we're gonna

00:28:34.320 --> 00:28:34.330
connected to the network now we're gonna
 

00:28:34.330 --> 00:28:36.750
connected to the network now we're gonna
build some new activities with material

00:28:36.750 --> 00:28:36.760
build some new activities with material
 

00:28:36.760 --> 00:28:39.230
build some new activities with material
design for where we're going to support

00:28:39.230 --> 00:28:39.240
design for where we're going to support
 

00:28:39.240 --> 00:28:41.520
design for where we're going to support
always-on which is something that we

00:28:41.520 --> 00:28:41.530
always-on which is something that we
 

00:28:41.530 --> 00:28:43.830
always-on which is something that we
released last year and allows apps to

00:28:43.830 --> 00:28:43.840
released last year and allows apps to
 

00:28:43.840 --> 00:28:46.230
released last year and allows apps to
keep running in the foreground when the

00:28:46.230 --> 00:28:46.240
keep running in the foreground when the
 

00:28:46.240 --> 00:28:48.690
keep running in the foreground when the
watch goes into ambient mode so if you

00:28:48.690 --> 00:28:48.700
watch goes into ambient mode so if you
 

00:28:48.700 --> 00:28:50.610
watch goes into ambient mode so if you
want to find out more about that you can

00:28:50.610 --> 00:28:50.620
want to find out more about that you can
 

00:28:50.620 --> 00:28:52.860
want to find out more about that you can
still check out last year's talk on

00:28:52.860 --> 00:28:52.870
still check out last year's talk on
 

00:28:52.870 --> 00:28:55.350
still check out last year's talk on
YouTube about always-on apps and those

00:28:55.350 --> 00:28:55.360
YouTube about always-on apps and those
 

00:28:55.360 --> 00:28:57.560
YouTube about always-on apps and those
principles will still work in Ware 2.0

00:28:57.560 --> 00:28:57.570
principles will still work in Ware 2.0
 

00:28:57.570 --> 00:29:01.230
principles will still work in Ware 2.0
so at this point we have a wearable app

00:29:01.230 --> 00:29:01.240
so at this point we have a wearable app
 

00:29:01.240 --> 00:29:03.660
so at this point we have a wearable app
that's storing data locally and it's a

00:29:03.660 --> 00:29:03.670
that's storing data locally and it's a
 

00:29:03.670 --> 00:29:07.470
that's storing data locally and it's a
cool app for climbers what we might want

00:29:07.470 --> 00:29:07.480
cool app for climbers what we might want
 

00:29:07.480 --> 00:29:09.510
cool app for climbers what we might want
to do next with the app is start storing

00:29:09.510 --> 00:29:09.520
to do next with the app is start storing
 

00:29:09.520 --> 00:29:11.700
to do next with the app is start storing
that data in fit now if it can give us a

00:29:11.700 --> 00:29:11.710
that data in fit now if it can give us a
 

00:29:11.710 --> 00:29:13.200
that data in fit now if it can give us a
lot of interesting stuff we can get

00:29:13.200 --> 00:29:13.210
lot of interesting stuff we can get
 

00:29:13.210 --> 00:29:15.690
lot of interesting stuff we can get
biometric data from the user like their

00:29:15.690 --> 00:29:15.700
biometric data from the user like their
 

00:29:15.700 --> 00:29:17.220
biometric data from the user like their
height and their weight and other data

00:29:17.220 --> 00:29:17.230
height and their weight and other data
 

00:29:17.230 --> 00:29:19.200
height and their weight and other data
that they've entered and we can also

00:29:19.200 --> 00:29:19.210
that they've entered and we can also
 

00:29:19.210 --> 00:29:21.870
that they've entered and we can also
write into the fit platform or rock

00:29:21.870 --> 00:29:21.880
write into the fit platform or rock
 

00:29:21.880 --> 00:29:24.000
write into the fit platform or rock
climbing sessions so that the user can

00:29:24.000 --> 00:29:24.010
climbing sessions so that the user can
 

00:29:24.010 --> 00:29:25.740
climbing sessions so that the user can
see all of their fitness data in one

00:29:25.740 --> 00:29:25.750
see all of their fitness data in one
 

00:29:25.750 --> 00:29:28.770
see all of their fitness data in one
place and I can verify that fit has an

00:29:28.770 --> 00:29:28.780
place and I can verify that fit has an
 

00:29:28.780 --> 00:29:30.960
place and I can verify that fit has an
activity type for rock climbing so we're

00:29:30.960 --> 00:29:30.970
activity type for rock climbing so we're
 

00:29:30.970 --> 00:29:34.860
activity type for rock climbing so we're
already halfway there easily so so far

00:29:34.860 --> 00:29:34.870
already halfway there easily so so far
 

00:29:34.870 --> 00:29:39.210
already halfway there easily so so far
our app is a generic anonymous app but

00:29:39.210 --> 00:29:39.220
our app is a generic anonymous app but
 

00:29:39.220 --> 00:29:41.850
our app is a generic anonymous app but
if you're not a generic lumberjack and

00:29:41.850 --> 00:29:41.860
if you're not a generic lumberjack and
 

00:29:41.860 --> 00:29:44.220
if you're not a generic lumberjack and
you're a climber Jane you want the user

00:29:44.220 --> 00:29:44.230
you're a climber Jane you want the user
 

00:29:44.230 --> 00:29:46.410
you're a climber Jane you want the user
to log in so that you'll be able to

00:29:46.410 --> 00:29:46.420
to log in so that you'll be able to
 

00:29:46.420 --> 00:29:48.450
to log in so that you'll be able to
identify that user in the future and

00:29:48.450 --> 00:29:48.460
identify that user in the future and
 

00:29:48.460 --> 00:29:51.750
identify that user in the future and
also bring that user online onto the

00:29:51.750 --> 00:29:51.760
also bring that user online onto the
 

00:29:51.760 --> 00:29:55.470
also bring that user online onto the
cloud so our app can offer a good amount

00:29:55.470 --> 00:29:55.480
cloud so our app can offer a good amount
 

00:29:55.480 --> 00:29:57.990
cloud so our app can offer a good amount
of value without a login so we're gonna

00:29:57.990 --> 00:29:58.000
of value without a login so we're gonna
 

00:29:58.000 --> 00:30:00.840
of value without a login so we're gonna
make login optional and defer it to when

00:30:00.840 --> 00:30:00.850
make login optional and defer it to when
 

00:30:00.850 --> 00:30:04.260
make login optional and defer it to when
the user wants to log in and when we do

00:30:04.260 --> 00:30:04.270
the user wants to log in and when we do
 

00:30:04.270 --> 00:30:06.540
the user wants to log in and when we do
ask the user to login we use fast

00:30:06.540 --> 00:30:06.550
ask the user to login we use fast
 

00:30:06.550 --> 00:30:09.150
ask the user to login we use fast
sign-in flows such as Google sign-in

00:30:09.150 --> 00:30:09.160
sign-in flows such as Google sign-in
 

00:30:09.160 --> 00:30:11.130
sign-in flows such as Google sign-in
which is easy because if I'm starting

00:30:11.130 --> 00:30:11.140
which is easy because if I'm starting
 

00:30:11.140 --> 00:30:13.140
which is easy because if I'm starting
out from scratch I don't have an office

00:30:13.140 --> 00:30:13.150
out from scratch I don't have an office
 

00:30:13.150 --> 00:30:14.820
out from scratch I don't have an office
I probably don't want to deal with all

00:30:14.820 --> 00:30:14.830
I probably don't want to deal with all
 

00:30:14.830 --> 00:30:16.230
I probably don't want to deal with all
the requirements of figuring out how to

00:30:16.230 --> 00:30:16.240
the requirements of figuring out how to
 

00:30:16.240 --> 00:30:19.080
the requirements of figuring out how to
do an office so I can just let Google do

00:30:19.080 --> 00:30:19.090
do an office so I can just let Google do
 

00:30:19.090 --> 00:30:21.960
do an office so I can just let Google do
that hard work okay so now we're logged

00:30:21.960 --> 00:30:21.970
that hard work okay so now we're logged
 

00:30:21.970 --> 00:30:24.330
that hard work okay so now we're logged
in that means that we can write data to

00:30:24.330 --> 00:30:24.340
in that means that we can write data to
 

00:30:24.340 --> 00:30:27.450
in that means that we can write data to
the cloud what you want to remember here

00:30:27.450 --> 00:30:27.460
the cloud what you want to remember here
 

00:30:27.460 --> 00:30:29.850
the cloud what you want to remember here
is that although watches can run

00:30:29.850 --> 00:30:29.860
is that although watches can run
 

00:30:29.860 --> 00:30:32.220
is that although watches can run
standalone apps not every watch has

00:30:32.220 --> 00:30:32.230
standalone apps not every watch has
 

00:30:32.230 --> 00:30:33.690
standalone apps not every watch has
cellular which means that not every

00:30:33.690 --> 00:30:33.700
cellular which means that not every
 

00:30:33.700 --> 00:30:34.060
cellular which means that not every
watch

00:30:34.060 --> 00:30:34.070
watch
 

00:30:34.070 --> 00:30:35.680
watch
going to be continuously connected to

00:30:35.680 --> 00:30:35.690
going to be continuously connected to
 

00:30:35.690 --> 00:30:38.230
going to be continuously connected to
the cloud so whenever you're writing

00:30:38.230 --> 00:30:38.240
the cloud so whenever you're writing
 

00:30:38.240 --> 00:30:40.510
the cloud so whenever you're writing
data to those two sources locally and

00:30:40.510 --> 00:30:40.520
data to those two sources locally and
 

00:30:40.520 --> 00:30:43.120
data to those two sources locally and
remotely you want to think about a sync

00:30:43.120 --> 00:30:43.130
remotely you want to think about a sync
 

00:30:43.130 --> 00:30:44.950
remotely you want to think about a sync
so you want to make sure that they're

00:30:44.950 --> 00:30:44.960
so you want to make sure that they're
 

00:30:44.960 --> 00:30:47.140
so you want to make sure that they're
eventually consistent on both the local

00:30:47.140 --> 00:30:47.150
eventually consistent on both the local
 

00:30:47.150 --> 00:30:50.530
eventually consistent on both the local
store and the cloud so this diagram is

00:30:50.530 --> 00:30:50.540
store and the cloud so this diagram is
 

00:30:50.540 --> 00:30:53.140
store and the cloud so this diagram is
getting pretty busy here but let's say

00:30:53.140 --> 00:30:53.150
getting pretty busy here but let's say
 

00:30:53.150 --> 00:30:54.940
getting pretty busy here but let's say
we want to throw the phone in and how do

00:30:54.940 --> 00:30:54.950
we want to throw the phone in and how do
 

00:30:54.950 --> 00:30:57.610
we want to throw the phone in and how do
we tie the phone into the party okay

00:30:57.610 --> 00:30:57.620
we tie the phone into the party okay
 

00:30:57.620 --> 00:31:00.850
we tie the phone into the party okay
now I think there's a pretty easy first

00:31:00.850 --> 00:31:00.860
now I think there's a pretty easy first
 

00:31:00.860 --> 00:31:04.300
now I think there's a pretty easy first
step this is again my PM speak I think

00:31:04.300 --> 00:31:04.310
step this is again my PM speak I think
 

00:31:04.310 --> 00:31:05.530
step this is again my PM speak I think
it's a pretty easy first step which is

00:31:05.530 --> 00:31:05.540
it's a pretty easy first step which is
 

00:31:05.540 --> 00:31:07.270
it's a pretty easy first step which is
basically just to do everything that we

00:31:07.270 --> 00:31:07.280
basically just to do everything that we
 

00:31:07.280 --> 00:31:09.070
basically just to do everything that we
just did on the wearable but now since

00:31:09.070 --> 00:31:09.080
just did on the wearable but now since
 

00:31:09.080 --> 00:31:10.870
just did on the wearable but now since
the wearables riding all this data to

00:31:10.870 --> 00:31:10.880
the wearables riding all this data to
 

00:31:10.880 --> 00:31:13.090
the wearables riding all this data to
the cloud we just need to write the same

00:31:13.090 --> 00:31:13.100
the cloud we just need to write the same
 

00:31:13.100 --> 00:31:14.590
the cloud we just need to write the same
thing on the left on the right and then

00:31:14.590 --> 00:31:14.600
thing on the left on the right and then
 

00:31:14.600 --> 00:31:15.250
thing on the left on the right and then
we're done right

00:31:15.250 --> 00:31:15.260
we're done right
 

00:31:15.260 --> 00:31:17.170
we're done right
we have a phone app that can now read

00:31:17.170 --> 00:31:17.180
we have a phone app that can now read
 

00:31:17.180 --> 00:31:19.600
we have a phone app that can now read
and see everything that happened on the

00:31:19.600 --> 00:31:19.610
and see everything that happened on the
 

00:31:19.610 --> 00:31:22.420
and see everything that happened on the
wearable so what would be even cooler is

00:31:22.420 --> 00:31:22.430
wearable so what would be even cooler is
 

00:31:22.430 --> 00:31:26.650
wearable so what would be even cooler is
if I could hand my phone to my belayer

00:31:26.650 --> 00:31:26.660
if I could hand my phone to my belayer
 

00:31:26.660 --> 00:31:29.500
if I could hand my phone to my belayer
while I'm on the wall and my phone could

00:31:29.500 --> 00:31:29.510
while I'm on the wall and my phone could
 

00:31:29.510 --> 00:31:32.560
while I'm on the wall and my phone could
stream real-time data from my watch down

00:31:32.560 --> 00:31:32.570
stream real-time data from my watch down
 

00:31:32.570 --> 00:31:34.180
stream real-time data from my watch down
to my phone and my Blaire could be

00:31:34.180 --> 00:31:34.190
to my phone and my Blaire could be
 

00:31:34.190 --> 00:31:36.910
to my phone and my Blaire could be
checking out how my progress is going so

00:31:36.910 --> 00:31:36.920
checking out how my progress is going so
 

00:31:36.920 --> 00:31:38.980
checking out how my progress is going so
if I wanted to do that I would use the

00:31:38.980 --> 00:31:38.990
if I wanted to do that I would use the
 

00:31:38.990 --> 00:31:41.350
if I wanted to do that I would use the
data layer api's and particularly here

00:31:41.350 --> 00:31:41.360
data layer api's and particularly here
 

00:31:41.360 --> 00:31:43.450
data layer api's and particularly here
probably the messaging API is a good

00:31:43.450 --> 00:31:43.460
probably the messaging API is a good
 

00:31:43.460 --> 00:31:46.020
probably the messaging API is a good
choice because it's very low latency

00:31:46.020 --> 00:31:46.030
choice because it's very low latency
 

00:31:46.030 --> 00:31:50.230
choice because it's very low latency
okay so as before test tests on iOS

00:31:50.230 --> 00:31:50.240
okay so as before test tests on iOS
 

00:31:50.240 --> 00:31:54.280
okay so as before test tests on iOS
tests on Android profile so there's

00:31:54.280 --> 00:31:54.290
tests on Android profile so there's
 

00:31:54.290 --> 00:31:56.200
tests on Android profile so there's
probably less to do on the web services

00:31:56.200 --> 00:31:56.210
probably less to do on the web services
 

00:31:56.210 --> 00:31:57.760
probably less to do on the web services
side here since we're sort of starting

00:31:57.760 --> 00:31:57.770
side here since we're sort of starting
 

00:31:57.770 --> 00:31:59.230
side here since we're sort of starting
from scratch there's probably not a lot

00:31:59.230 --> 00:31:59.240
from scratch there's probably not a lot
 

00:31:59.240 --> 00:32:00.310
from scratch there's probably not a lot
of preference sitting in the web

00:32:00.310 --> 00:32:00.320
of preference sitting in the web
 

00:32:00.320 --> 00:32:01.900
of preference sitting in the web
services but where you would want to

00:32:01.900 --> 00:32:01.910
services but where you would want to
 

00:32:01.910 --> 00:32:04.390
services but where you would want to
focus here is on how much processor that

00:32:04.390 --> 00:32:04.400
focus here is on how much processor that
 

00:32:04.400 --> 00:32:06.520
focus here is on how much processor that
you are using so make sure that you're

00:32:06.520 --> 00:32:06.530
you are using so make sure that you're
 

00:32:06.530 --> 00:32:09.340
you are using so make sure that you're
not going to leave them hanging oh wow

00:32:09.340 --> 00:32:09.350
not going to leave them hanging oh wow
 

00:32:09.350 --> 00:32:10.720
not going to leave them hanging oh wow
that's the first time I tried the joke

00:32:10.720 --> 00:32:10.730
that's the first time I tried the joke
 

00:32:10.730 --> 00:32:14.770
that's the first time I tried the joke
that blast will set up an unbundled apk

00:32:14.770 --> 00:32:14.780
that blast will set up an unbundled apk
 

00:32:14.780 --> 00:32:17.170
that blast will set up an unbundled apk
and upload it to the plate develop

00:32:17.170 --> 00:32:17.180
and upload it to the plate develop
 

00:32:17.180 --> 00:32:20.350
and upload it to the plate develop
developer console as before so those are

00:32:20.350 --> 00:32:20.360
developer console as before so those are
 

00:32:20.360 --> 00:32:21.880
developer console as before so those are
just two examples of how you'll now

00:32:21.880 --> 00:32:21.890
just two examples of how you'll now
 

00:32:21.890 --> 00:32:23.860
just two examples of how you'll now
start to build standalone apps and we're

00:32:23.860 --> 00:32:23.870
start to build standalone apps and we're
 

00:32:23.870 --> 00:32:29.770
start to build standalone apps and we're
2.0 so just to recap three easy things

00:32:29.770 --> 00:32:29.780
2.0 so just to recap three easy things
 

00:32:29.780 --> 00:32:31.510
2.0 so just to recap three easy things
to remember about why you want to build

00:32:31.510 --> 00:32:31.520
to remember about why you want to build
 

00:32:31.520 --> 00:32:33.930
to remember about why you want to build
standalone apps so first of all

00:32:33.930 --> 00:32:33.940
standalone apps so first of all
 

00:32:33.940 --> 00:32:36.940
standalone apps so first of all
standalone is phone independent it

00:32:36.940 --> 00:32:36.950
standalone is phone independent it
 

00:32:36.950 --> 00:32:38.740
standalone is phone independent it
allows you to free yourself in any

00:32:38.740 --> 00:32:38.750
allows you to free yourself in any
 

00:32:38.750 --> 00:32:41.050
allows you to free yourself in any
situation during the day from the phone

00:32:41.050 --> 00:32:41.060
situation during the day from the phone
 

00:32:41.060 --> 00:32:43.300
situation during the day from the phone
and still be able to use those apps on

00:32:43.300 --> 00:32:43.310
and still be able to use those apps on
 

00:32:43.310 --> 00:32:43.900
and still be able to use those apps on
your wrist

00:32:43.900 --> 00:32:43.910
your wrist
 

00:32:43.910 --> 00:32:47.110
your wrist
next up Santa little apps are built like

00:32:47.110 --> 00:32:47.120
next up Santa little apps are built like
 

00:32:47.120 --> 00:32:47.530
next up Santa little apps are built like
phone

00:32:47.530 --> 00:32:47.540
phone
 

00:32:47.540 --> 00:32:49.240
phone
so they use phone app architecture and

00:32:49.240 --> 00:32:49.250
so they use phone app architecture and
 

00:32:49.250 --> 00:32:50.920
so they use phone app architecture and
all of those skills that you've learned

00:32:50.920 --> 00:32:50.930
all of those skills that you've learned
 

00:32:50.930 --> 00:32:53.200
all of those skills that you've learned
and honed apply to the wearable apps

00:32:53.200 --> 00:32:53.210
and honed apply to the wearable apps
 

00:32:53.210 --> 00:32:55.360
and honed apply to the wearable apps
that you're gonna build and then finally

00:32:55.360 --> 00:32:55.370
that you're gonna build and then finally
 

00:32:55.370 --> 00:32:57.640
that you're gonna build and then finally
standalone apps work with both Android

00:32:57.640 --> 00:32:57.650
standalone apps work with both Android
 

00:32:57.650 --> 00:33:03.820
standalone apps work with both Android
and iOS phones if you're like if you

00:33:03.820 --> 00:33:03.830
and iOS phones if you're like if you
 

00:33:03.830 --> 00:33:05.290
and iOS phones if you're like if you
liked what you heard today and can't

00:33:05.290 --> 00:33:05.300
liked what you heard today and can't
 

00:33:05.300 --> 00:33:07.540
liked what you heard today and can't
wait to try it out you can just go to

00:33:07.540 --> 00:33:07.550
wait to try it out you can just go to
 

00:33:07.550 --> 00:33:10.720
wait to try it out you can just go to
geo / we're preview you can find out

00:33:10.720 --> 00:33:10.730
geo / we're preview you can find out
 

00:33:10.730 --> 00:33:13.240
geo / we're preview you can find out
about how to get the preview SDK device

00:33:13.240 --> 00:33:13.250
about how to get the preview SDK device
 

00:33:13.250 --> 00:33:15.340
about how to get the preview SDK device
images and more information about the

00:33:15.340 --> 00:33:15.350
images and more information about the
 

00:33:15.350 --> 00:33:18.430
images and more information about the
new API is we're launching in addition

00:33:18.430 --> 00:33:18.440
new API is we're launching in addition
 

00:33:18.440 --> 00:33:20.350
new API is we're launching in addition
to the Developer Preview we also have a

00:33:20.350 --> 00:33:20.360
to the Developer Preview we also have a
 

00:33:20.360 --> 00:33:21.610
to the Developer Preview we also have a
few other sessions that you should check

00:33:21.610 --> 00:33:21.620
few other sessions that you should check
 

00:33:21.620 --> 00:33:23.890
few other sessions that you should check
out the next session in this very room

00:33:23.890 --> 00:33:23.900
out the next session in this very room
 

00:33:23.900 --> 00:33:26.140
out the next session in this very room
is about how to build we're 2.0 apps

00:33:26.140 --> 00:33:26.150
is about how to build we're 2.0 apps
 

00:33:26.150 --> 00:33:28.630
is about how to build we're 2.0 apps
with material design you can also catch

00:33:28.630 --> 00:33:28.640
with material design you can also catch
 

00:33:28.640 --> 00:33:30.990
with material design you can also catch
up on YouTube if you've missed anything

00:33:30.990 --> 00:33:31.000
up on YouTube if you've missed anything
 

00:33:31.000 --> 00:33:33.340
up on YouTube if you've missed anything
one of the main reasons we are doing a

00:33:33.340 --> 00:33:33.350
one of the main reasons we are doing a
 

00:33:33.350 --> 00:33:34.630
one of the main reasons we are doing a
Developer Preview is to get your

00:33:34.630 --> 00:33:34.640
Developer Preview is to get your
 

00:33:34.640 --> 00:33:36.610
Developer Preview is to get your
feedback so you have any bugs or API

00:33:36.610 --> 00:33:36.620
feedback so you have any bugs or API
 

00:33:36.620 --> 00:33:39.340
feedback so you have any bugs or API
suggestions please go to Gao slash wear

00:33:39.340 --> 00:33:39.350
suggestions please go to Gao slash wear
 

00:33:39.350 --> 00:33:42.130
suggestions please go to Gao slash wear
preview bug we also have an Android wait

00:33:42.130 --> 00:33:42.140
preview bug we also have an Android wait
 

00:33:42.140 --> 00:33:44.650
preview bug we also have an Android wait
developers Google+ community where you

00:33:44.650 --> 00:33:44.660
developers Google+ community where you
 

00:33:44.660 --> 00:33:46.840
developers Google+ community where you
can discuss with your peers the URL is

00:33:46.840 --> 00:33:46.850
can discuss with your peers the URL is
 

00:33:46.850 --> 00:33:50.200
can discuss with your peers the URL is
GTO slash Android wear depth and with

00:33:50.200 --> 00:33:50.210
GTO slash Android wear depth and with
 

00:33:50.210 --> 00:33:53.020
GTO slash Android wear depth and with
that let's go to Q&amp;A

