WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.000
Our answer to the last quiz would've been a lot easier to read and a lot more useful

00:00:05.000 --> 00:00:09.000
if we used names to keep track of values instead of writing out those big numbers,

00:00:09.000 --> 00:00:12.000
especially numbers as big as the speed of light.

00:00:12.000 --> 00:00:15.000
Python provides a way to do it. It's called a "variable".

00:00:15.000 --> 00:00:19.000
We can use a variable to create a name and use that name to refer to a variable.

00:00:19.000 --> 00:00:22.000
The way to introduce a variable is using an assignment statement,

00:00:22.000 --> 00:00:25.000
and an assignment statement looks like this:

00:00:25.000 --> 00:00:31.000
we have a name followed by an equal symbol, followed by an expression.

00:00:31.000 --> 00:00:34.000
After the assignment statement the name that was on the left side

00:00:34.000 --> 00:00:37.000
refers to the value that the expression has.

00:00:37.000 --> 00:00:40.000
The name can be any sequence of letters and numbers as well as underscores,

00:00:40.000 --> 00:00:44.000
as long as it starts with a letter or an underscore. Here's an example.

00:00:44.000 --> 00:00:46.000
We could create the name "speed&amp;#95;of&amp;#95;light",

00:00:46.000 --> 00:00:50.000
and we can assign to it the value of the speed of light in meters per second.

00:00:50.000 --> 00:00:55.000
After that assignment, the name "speed&amp;#95;of&amp;#95;light" refers to that value.

00:00:55.000 --> 00:00:58.000
One way to think of that is to have an arrow.

00:00:58.000 --> 00:01:03.000
We can have the name "speed&amp;#95;of&amp;#95;light" and that's a name which refers to a value,

00:01:03.000 --> 00:01:09.000
and that value it refers to is this long value, which is the speed of light in meters per second.

00:01:09.000 --> 00:01:12.000
Once we've done the assignment, we can use the name,

00:01:12.000 --> 00:01:15.000
and the value of the name is the value that it refers to.

00:01:15.000 --> 00:01:18.000
In this case, it's the speed of light in meters per second.

00:01:18.000 --> 00:01:21.000
Let's try that in the Python interpreter.

00:01:21.000 --> 00:01:24.000
Here we've introduce the variable "speed&amp;#95;of&amp;#95;light",

00:01:24.000 --> 00:01:30.000
and we've assigned to it the value 299,792,458--

00:01:30.000 --> 00:01:32.000
the speed of light in meters per second.

00:01:32.000 --> 00:01:34.000
Now we've got that assigned in a variable.

00:01:34.000 --> 00:01:38.000
Instead of having to type out that whole number, we can use it directly.

00:01:38.000 --> 00:01:42.000
When we print out the speed of light, it will be the value that that name refers to.

00:01:42.000 --> 00:01:48.000
We'll see instead of seeing "speed&amp;#95;of&amp;#95;light", we'll see the 299 million value here.

00:01:48.000 --> 00:01:50.000
We can use it in expressions as well.

00:01:50.000 --> 00:01:54.000
If we want to convert it to centimeters instead of meters, we can multiply by 100.

00:01:54.000 --> 00:01:59.000
Now we see the result is the speed of light in centimeters per second.

00:01:59.000 --> 00:02:01.000
Let's define another variable.

00:02:01.000 --> 00:02:05.000
This one will define billionth, which means 1 divided by 1 billion.

00:02:05.000 --> 00:02:07.000
That's hard enough to remember how many zeros to type,

00:02:07.000 --> 00:02:09.000
so it's nice to have that in a variable.

00:02:09.000 --> 00:02:14.000
Now we can define "nanostick", which is the length of Grace Hopper's nanostick

00:02:14.000 --> 00:02:19.000
as the speed of light times a billionth.

00:02:19.000 --> 00:02:22.000
That would be the length of the nanostick in meters.

00:02:22.000 --> 00:02:25.000
If we want it in centimeters, we can multiply it by 100.

00:02:25.000 --> 00:02:28.000
Now we've defined a variable "nanostick" --

00:02:28.000 --> 00:02:32.000
which is the length light travels in a nanosecond in centimeters

00:02:32.000 --> 00:02:34.000
We can print that out.

00:02:34.000 --> 00:02:36.000
So variables are really useful.

00:02:36.000 --> 00:02:39.000
They're going to make our programs a lot easier to understand.

00:02:39.000 --> 00:02:42.000
They also mean that we can use the same expression,

00:02:42.000 --> 00:02:45.000
changing the values of the variables to compute different things.

00:02:45.000 --> 00:02:48.000
Now it's time for a quiz to see if you understand variables.

