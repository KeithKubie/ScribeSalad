WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.270
 
in the last video you saw the equations

00:00:02.270 --> 00:00:02.280
in the last video you saw the equations
 

00:00:02.280 --> 00:00:04.789
in the last video you saw the equations
for back propagation in this video let's

00:00:04.789 --> 00:00:04.799
for back propagation in this video let's
 

00:00:04.799 --> 00:00:06.980
for back propagation in this video let's
go over some intuition using the

00:00:06.980 --> 00:00:06.990
go over some intuition using the
 

00:00:06.990 --> 00:00:09.530
go over some intuition using the
computation crop for how those equations

00:00:09.530 --> 00:00:09.540
computation crop for how those equations
 

00:00:09.540 --> 00:00:11.690
computation crop for how those equations
would arrive this video is completely

00:00:11.690 --> 00:00:11.700
would arrive this video is completely
 

00:00:11.700 --> 00:00:13.970
would arrive this video is completely
optional so feel free to watch it or not

00:00:13.970 --> 00:00:13.980
optional so feel free to watch it or not
 

00:00:13.980 --> 00:00:15.320
optional so feel free to watch it or not
you should be able to do the whole world

00:00:15.320 --> 00:00:15.330
you should be able to do the whole world
 

00:00:15.330 --> 00:00:18.080
you should be able to do the whole world
either way so recall that when we talked

00:00:18.080 --> 00:00:18.090
either way so recall that when we talked
 

00:00:18.090 --> 00:00:20.090
either way so recall that when we talked
about logistic regression we had this

00:00:20.090 --> 00:00:20.100
about logistic regression we had this
 

00:00:20.100 --> 00:00:24.200
about logistic regression we had this
forward pass where we compute Z then a

00:00:24.200 --> 00:00:24.210
forward pass where we compute Z then a
 

00:00:24.210 --> 00:00:26.750
forward pass where we compute Z then a
and then a loss and then to take

00:00:26.750 --> 00:00:26.760
and then a loss and then to take
 

00:00:26.760 --> 00:00:29.210
and then a loss and then to take
derivatives we had this sum backward

00:00:29.210 --> 00:00:29.220
derivatives we had this sum backward
 

00:00:29.220 --> 00:00:31.959
derivatives we had this sum backward
pass where we can first compute da

00:00:31.959 --> 00:00:31.969
pass where we can first compute da
 

00:00:31.969 --> 00:00:36.110
pass where we can first compute da
and then go on to compute GZ and we go

00:00:36.110 --> 00:00:36.120
and then go on to compute GZ and we go
 

00:00:36.120 --> 00:00:41.540
and then go on to compute GZ and we go
on to compute DW and DP so the

00:00:41.540 --> 00:00:41.550
on to compute DW and DP so the
 

00:00:41.550 --> 00:00:46.880
on to compute DW and DP so the
definition for the loss was L of a comma

00:00:46.880 --> 00:00:46.890
definition for the loss was L of a comma
 

00:00:46.890 --> 00:00:52.729
definition for the loss was L of a comma
y equals negative Y log a minus 1 minus

00:00:52.729 --> 00:00:52.739
y equals negative Y log a minus 1 minus
 

00:00:52.739 --> 00:00:58.490
y equals negative Y log a minus 1 minus
y Times log 1 minus a so if you're

00:00:58.490 --> 00:00:58.500
y Times log 1 minus a so if you're
 

00:00:58.500 --> 00:01:01.130
y Times log 1 minus a so if you're
familiar with calculus and you take the

00:01:01.130 --> 00:01:01.140
familiar with calculus and you take the
 

00:01:01.140 --> 00:01:03.110
familiar with calculus and you take the
derivative of this with respect to a

00:01:03.110 --> 00:01:03.120
derivative of this with respect to a
 

00:01:03.120 --> 00:01:05.660
derivative of this with respect to a
that would give you the formula for da

00:01:05.660 --> 00:01:05.670
that would give you the formula for da
 

00:01:05.670 --> 00:01:09.469
that would give you the formula for da
so da is equal to that and if you

00:01:09.469 --> 00:01:09.479
so da is equal to that and if you
 

00:01:09.479 --> 00:01:11.390
so da is equal to that and if you
actually figure out the calculus you can

00:01:11.390 --> 00:01:11.400
actually figure out the calculus you can
 

00:01:11.400 --> 00:01:15.109
actually figure out the calculus you can
show that this is y over a negative PI

00:01:15.109 --> 00:01:15.119
show that this is y over a negative PI
 

00:01:15.119 --> 00:01:18.740
show that this is y over a negative PI
over 8 plus 1 minus y over 1 minus a

00:01:18.740 --> 00:01:18.750
over 8 plus 1 minus y over 1 minus a
 

00:01:18.750 --> 00:01:20.480
over 8 plus 1 minus y over 1 minus a
let's just kind of divide that from

00:01:20.480 --> 00:01:20.490
let's just kind of divide that from
 

00:01:20.490 --> 00:01:22.310
let's just kind of divide that from
calculus by taking derivatives of this

00:01:22.310 --> 00:01:22.320
calculus by taking derivatives of this
 

00:01:22.320 --> 00:01:24.980
calculus by taking derivatives of this
it turns out when you take another step

00:01:24.980 --> 00:01:24.990
it turns out when you take another step
 

00:01:24.990 --> 00:01:27.320
it turns out when you take another step
backwards to compute GZ we then worked

00:01:27.320 --> 00:01:27.330
backwards to compute GZ we then worked
 

00:01:27.330 --> 00:01:30.140
backwards to compute GZ we then worked
out that D Z is equal to a minus y I

00:01:30.140 --> 00:01:30.150
out that D Z is equal to a minus y I
 

00:01:30.150 --> 00:01:32.539
out that D Z is equal to a minus y I
didn't explain why previously but it

00:01:32.539 --> 00:01:32.549
didn't explain why previously but it
 

00:01:32.549 --> 00:01:35.149
didn't explain why previously but it
turns out that from the chain rule of

00:01:35.149 --> 00:01:35.159
turns out that from the chain rule of
 

00:01:35.159 --> 00:01:42.770
turns out that from the chain rule of
calculus DZ is equal to DA times G prime

00:01:42.770 --> 00:01:42.780
calculus DZ is equal to DA times G prime
 

00:01:42.780 --> 00:01:49.789
calculus DZ is equal to DA times G prime
of Z where here G of Z equals sigmoid of

00:01:49.789 --> 00:01:49.799
of Z where here G of Z equals sigmoid of
 

00:01:49.799 --> 00:01:53.149
of Z where here G of Z equals sigmoid of
Z is our activation function for this

00:01:53.149 --> 00:01:53.159
Z is our activation function for this
 

00:01:53.159 --> 00:01:55.310
Z is our activation function for this
output unit in logistic regression

00:01:55.310 --> 00:01:55.320
output unit in logistic regression
 

00:01:55.320 --> 00:01:57.709
output unit in logistic regression
alright so just remember this is still

00:01:57.709 --> 00:01:57.719
alright so just remember this is still
 

00:01:57.719 --> 00:02:00.709
alright so just remember this is still
logistic regression we'll have X 1 X 2 X

00:02:00.709 --> 00:02:00.719
logistic regression we'll have X 1 X 2 X
 

00:02:00.719 --> 00:02:03.740
logistic regression we'll have X 1 X 2 X
V and then just one sigmoid unit and

00:02:03.740 --> 00:02:03.750
V and then just one sigmoid unit and
 

00:02:03.750 --> 00:02:06.499
V and then just one sigmoid unit and
then that gives us some al gives us Y

00:02:06.499 --> 00:02:06.509
then that gives us some al gives us Y
 

00:02:06.509 --> 00:02:09.619
then that gives us some al gives us Y
hat so here the activation function was

00:02:09.619 --> 00:02:09.629
hat so here the activation function was
 

00:02:09.629 --> 00:02:12.820
hat so here the activation function was
a sigmoid function and as an aside

00:02:12.820 --> 00:02:12.830
a sigmoid function and as an aside
 

00:02:12.830 --> 00:02:14.830
a sigmoid function and as an aside
only for those of you familiar with the

00:02:14.830 --> 00:02:14.840
only for those of you familiar with the
 

00:02:14.840 --> 00:02:17.980
only for those of you familiar with the
chain rule of calculus the reason for

00:02:17.980 --> 00:02:17.990
chain rule of calculus the reason for
 

00:02:17.990 --> 00:02:21.340
chain rule of calculus the reason for
this is because a is equal to Sigma of Z

00:02:21.340 --> 00:02:21.350
this is because a is equal to Sigma of Z
 

00:02:21.350 --> 00:02:27.400
this is because a is equal to Sigma of Z
and so partial L respect to Z is equal

00:02:27.400 --> 00:02:27.410
and so partial L respect to Z is equal
 

00:02:27.410 --> 00:02:36.340
and so partial L respect to Z is equal
to partial L respect to a times da DZ

00:02:36.340 --> 00:02:36.350
to partial L respect to a times da DZ
 

00:02:36.350 --> 00:02:40.150
to partial L respect to a times da DZ
but since a is equal to Sigma of Z this

00:02:40.150 --> 00:02:40.160
but since a is equal to Sigma of Z this
 

00:02:40.160 --> 00:02:46.390
but since a is equal to Sigma of Z this
is equal to D DZ G of Z right which is

00:02:46.390 --> 00:02:46.400
is equal to D DZ G of Z right which is
 

00:02:46.400 --> 00:02:50.380
is equal to D DZ G of Z right which is
equal to G prime of Z so that's why this

00:02:50.380 --> 00:02:50.390
equal to G prime of Z so that's why this
 

00:02:50.390 --> 00:02:53.560
equal to G prime of Z so that's why this
expression which is DZ and our code is

00:02:53.560 --> 00:02:53.570
expression which is DZ and our code is
 

00:02:53.570 --> 00:02:55.930
expression which is DZ and our code is
equal to this expression which is da and

00:02:55.930 --> 00:02:55.940
equal to this expression which is da and
 

00:02:55.940 --> 00:03:01.680
equal to this expression which is da and
our code times G prime of Z and so this

00:03:01.680 --> 00:03:01.690
our code times G prime of Z and so this
 

00:03:01.690 --> 00:03:07.510
our code times G prime of Z and so this
is just that so that last derivation

00:03:07.510 --> 00:03:07.520
is just that so that last derivation
 

00:03:07.520 --> 00:03:09.760
is just that so that last derivation
what makes ends over here from you're

00:03:09.760 --> 00:03:09.770
what makes ends over here from you're
 

00:03:09.770 --> 00:03:11.680
what makes ends over here from you're
familiar with calculus since the speed

00:03:11.680 --> 00:03:11.690
familiar with calculus since the speed
 

00:03:11.690 --> 00:03:14.320
familiar with calculus since the speed
is a chamber from calculus but if not

00:03:14.320 --> 00:03:14.330
is a chamber from calculus but if not
 

00:03:14.330 --> 00:03:15.190
is a chamber from calculus but if not
don't worry about it

00:03:15.190 --> 00:03:15.200
don't worry about it
 

00:03:15.200 --> 00:03:16.630
don't worry about it
I'll try to explain the intuition

00:03:16.630 --> 00:03:16.640
I'll try to explain the intuition
 

00:03:16.640 --> 00:03:19.690
I'll try to explain the intuition
wherever this needed and then finally

00:03:19.690 --> 00:03:19.700
wherever this needed and then finally
 

00:03:19.700 --> 00:03:21.370
wherever this needed and then finally
having computed easy for you to

00:03:21.370 --> 00:03:21.380
having computed easy for you to
 

00:03:21.380 --> 00:03:25.570
having computed easy for you to
depression we would compute DW which it

00:03:25.570 --> 00:03:25.580
depression we would compute DW which it
 

00:03:25.580 --> 00:03:28.420
depression we would compute DW which it
turns out with DZ times X and DB which

00:03:28.420 --> 00:03:28.430
turns out with DZ times X and DB which
 

00:03:28.430 --> 00:03:30.280
turns out with DZ times X and DB which
is just easily when you have a single

00:03:30.280 --> 00:03:30.290
is just easily when you have a single
 

00:03:30.290 --> 00:03:31.000
is just easily when you have a single
training example

00:03:31.000 --> 00:03:31.010
training example
 

00:03:31.010 --> 00:03:34.240
training example
so that was logistic regression so what

00:03:34.240 --> 00:03:34.250
so that was logistic regression so what
 

00:03:34.250 --> 00:03:36.610
so that was logistic regression so what
we're going to do when computing back

00:03:36.610 --> 00:03:36.620
we're going to do when computing back
 

00:03:36.620 --> 00:03:38.800
we're going to do when computing back
propagation for a neural network is a

00:03:38.800 --> 00:03:38.810
propagation for a neural network is a
 

00:03:38.810 --> 00:03:41.380
propagation for a neural network is a
calculation a lot like this but only

00:03:41.380 --> 00:03:41.390
calculation a lot like this but only
 

00:03:41.390 --> 00:03:43.990
calculation a lot like this but only
we'll do it twice because now we have

00:03:43.990 --> 00:03:44.000
we'll do it twice because now we have
 

00:03:44.000 --> 00:03:47.740
we'll do it twice because now we have
not extinct an output unit but X going

00:03:47.740 --> 00:03:47.750
not extinct an output unit but X going
 

00:03:47.750 --> 00:03:50.080
not extinct an output unit but X going
to a hidden layer and then going to an

00:03:50.080 --> 00:03:50.090
to a hidden layer and then going to an
 

00:03:50.090 --> 00:03:52.800
to a hidden layer and then going to an
output unit and so instead of them

00:03:52.800 --> 00:03:52.810
output unit and so instead of them
 

00:03:52.810 --> 00:03:56.560
output unit and so instead of them
instead of this computation being select

00:03:56.560 --> 00:03:56.570
instead of this computation being select
 

00:03:56.570 --> 00:03:58.509
instead of this computation being select
one step as we have here what happened

00:03:58.509 --> 00:03:58.519
one step as we have here what happened
 

00:03:58.519 --> 00:04:01.449
one step as we have here what happened
you know two steps here right in this

00:04:01.449 --> 00:04:01.459
you know two steps here right in this
 

00:04:01.459 --> 00:04:03.570
you know two steps here right in this
kind of a neural network with two layers

00:04:03.570 --> 00:04:03.580
kind of a neural network with two layers
 

00:04:03.580 --> 00:04:07.449
kind of a neural network with two layers
so in this two layer neural network that

00:04:07.449 --> 00:04:07.459
so in this two layer neural network that
 

00:04:07.459 --> 00:04:09.370
so in this two layer neural network that
is one input layer hidden layer and an

00:04:09.370 --> 00:04:09.380
is one input layer hidden layer and an
 

00:04:09.380 --> 00:04:11.320
is one input layer hidden layer and an
output layer remember the steps of a

00:04:11.320 --> 00:04:11.330
output layer remember the steps of a
 

00:04:11.330 --> 00:04:16.120
output layer remember the steps of a
computation first you compute z1 using

00:04:16.120 --> 00:04:16.130
computation first you compute z1 using
 

00:04:16.130 --> 00:04:19.229
computation first you compute z1 using
this equation and then compute a 1 and

00:04:19.229 --> 00:04:19.239
this equation and then compute a 1 and
 

00:04:19.239 --> 00:04:22.510
this equation and then compute a 1 and
then you compute Z 2 and then open z2

00:04:22.510 --> 00:04:22.520
then you compute Z 2 and then open z2
 

00:04:22.520 --> 00:04:24.730
then you compute Z 2 and then open z2
also depends on the parameters W 2 and V

00:04:24.730 --> 00:04:24.740
also depends on the parameters W 2 and V
 

00:04:24.740 --> 00:04:25.680
also depends on the parameters W 2 and V
2

00:04:25.680 --> 00:04:25.690
2
 

00:04:25.690 --> 00:04:28.530
2
and then based on G to compute a to and

00:04:28.530 --> 00:04:28.540
and then based on G to compute a to and
 

00:04:28.540 --> 00:04:33.630
and then based on G to compute a to and
finally that gives you the loss so what

00:04:33.630 --> 00:04:33.640
finally that gives you the loss so what
 

00:04:33.640 --> 00:04:35.910
finally that gives you the loss so what
back propagation does is it will go

00:04:35.910 --> 00:04:35.920
back propagation does is it will go
 

00:04:35.920 --> 00:04:41.700
back propagation does is it will go
backward to compute da to and then DZ to

00:04:41.700 --> 00:04:41.710
backward to compute da to and then DZ to
 

00:04:41.710 --> 00:04:47.760
backward to compute da to and then DZ to
let them go back to compute D w2 and DB

00:04:47.760 --> 00:04:47.770
let them go back to compute D w2 and DB
 

00:04:47.770 --> 00:04:55.710
let them go back to compute D w2 and DB
to go backwards compute da 1 DZ 1 and so

00:04:55.710 --> 00:04:55.720
to go backwards compute da 1 DZ 1 and so
 

00:04:55.720 --> 00:04:57.120
to go backwards compute da 1 DZ 1 and so
on

00:04:57.120 --> 00:04:57.130
on
 

00:04:57.130 --> 00:04:59.490
on
and we don't need to take derivatives

00:04:59.490 --> 00:04:59.500
and we don't need to take derivatives
 

00:04:59.500 --> 00:05:01.710
and we don't need to take derivatives
respect to the input X since the input X

00:05:01.710 --> 00:05:01.720
respect to the input X since the input X
 

00:05:01.720 --> 00:05:04.080
respect to the input X since the input X
for supervised learning I think so we're

00:05:04.080 --> 00:05:04.090
for supervised learning I think so we're
 

00:05:04.090 --> 00:05:05.880
for supervised learning I think so we're
not trying to optimize X so we won't

00:05:05.880 --> 00:05:05.890
not trying to optimize X so we won't
 

00:05:05.890 --> 00:05:08.610
not trying to optimize X so we won't
bother to take derivatives at least for

00:05:08.610 --> 00:05:08.620
bother to take derivatives at least for
 

00:05:08.620 --> 00:05:10.620
bother to take derivatives at least for
supervised learning or respect to X and

00:05:10.620 --> 00:05:10.630
supervised learning or respect to X and
 

00:05:10.630 --> 00:05:14.130
supervised learning or respect to X and
so I'm going to skip explicitly

00:05:14.130 --> 00:05:14.140
so I'm going to skip explicitly
 

00:05:14.140 --> 00:05:17.250
so I'm going to skip explicitly
computing da 2 if you want you can

00:05:17.250 --> 00:05:17.260
computing da 2 if you want you can
 

00:05:17.260 --> 00:05:19.080
computing da 2 if you want you can
actually compute da 2 and then use that

00:05:19.080 --> 00:05:19.090
actually compute da 2 and then use that
 

00:05:19.090 --> 00:05:21.510
actually compute da 2 and then use that
to compute GZ 2 but in practice you can

00:05:21.510 --> 00:05:21.520
to compute GZ 2 but in practice you can
 

00:05:21.520 --> 00:05:24.750
to compute GZ 2 but in practice you can
collapse both of these steps into one to

00:05:24.750 --> 00:05:24.760
collapse both of these steps into one to
 

00:05:24.760 --> 00:05:28.080
collapse both of these steps into one to
one step see ends up DZ 2 is equal to a

00:05:28.080 --> 00:05:28.090
one step see ends up DZ 2 is equal to a
 

00:05:28.090 --> 00:05:32.640
one step see ends up DZ 2 is equal to a
2 minus y same as before and you have

00:05:32.640 --> 00:05:32.650
2 minus y same as before and you have
 

00:05:32.650 --> 00:05:36.600
2 minus y same as before and you have
also I'm going to write DW 2 and DP 2

00:05:36.600 --> 00:05:36.610
also I'm going to write DW 2 and DP 2
 

00:05:36.610 --> 00:05:40.680
also I'm going to write DW 2 and DP 2
down here below you have that DW 2 is

00:05:40.680 --> 00:05:40.690
down here below you have that DW 2 is
 

00:05:40.690 --> 00:05:48.480
down here below you have that DW 2 is
equal to GZ 2 times a 1 transpose and DB

00:05:48.480 --> 00:05:48.490
equal to GZ 2 times a 1 transpose and DB
 

00:05:48.490 --> 00:05:53.250
equal to GZ 2 times a 1 transpose and DB
2 equals D Z 2 so this step is quite

00:05:53.250 --> 00:05:53.260
2 equals D Z 2 so this step is quite
 

00:05:53.260 --> 00:05:55.530
2 equals D Z 2 so this step is quite
similar to for logistic regression where

00:05:55.530 --> 00:05:55.540
similar to for logistic regression where
 

00:05:55.540 --> 00:06:01.400
similar to for logistic regression where
we had that DW was equal to DZ times X

00:06:01.400 --> 00:06:01.410
we had that DW was equal to DZ times X
 

00:06:01.410 --> 00:06:06.030
we had that DW was equal to DZ times X
accepted now a 1 plays the role of X and

00:06:06.030 --> 00:06:06.040
accepted now a 1 plays the role of X and
 

00:06:06.040 --> 00:06:08.640
accepted now a 1 plays the role of X and
does it makes a transpose there because

00:06:08.640 --> 00:06:08.650
does it makes a transpose there because
 

00:06:08.650 --> 00:06:10.920
does it makes a transpose there because
the relationship between the capital

00:06:10.920 --> 00:06:10.930
the relationship between the capital
 

00:06:10.930 --> 00:06:13.890
the relationship between the capital
matrix W and our individual parameters W

00:06:13.890 --> 00:06:13.900
matrix W and our individual parameters W
 

00:06:13.900 --> 00:06:16.590
matrix W and our individual parameters W
was there's a transpose there right

00:06:16.590 --> 00:06:16.600
was there's a transpose there right
 

00:06:16.600 --> 00:06:21.900
was there's a transpose there right
because W is equal to UM a row vector in

00:06:21.900 --> 00:06:21.910
because W is equal to UM a row vector in
 

00:06:21.910 --> 00:06:23.400
because W is equal to UM a row vector in
the case of logistic regression with a

00:06:23.400 --> 00:06:23.410
the case of logistic regression with a
 

00:06:23.410 --> 00:06:26.820
the case of logistic regression with a
single output V W 2 is like that where

00:06:26.820 --> 00:06:26.830
single output V W 2 is like that where
 

00:06:26.830 --> 00:06:28.770
single output V W 2 is like that where
it W here was a column vector so that's

00:06:28.770 --> 00:06:28.780
it W here was a column vector so that's
 

00:06:28.780 --> 00:06:32.610
it W here was a column vector so that's
why there's an extra transpose for a one

00:06:32.610 --> 00:06:32.620
why there's an extra transpose for a one
 

00:06:32.620 --> 00:06:35.100
why there's an extra transpose for a one
where as we did in 2 for X here for

00:06:35.100 --> 00:06:35.110
where as we did in 2 for X here for
 

00:06:35.110 --> 00:06:37.270
where as we did in 2 for X here for
logistic regression so

00:06:37.270 --> 00:06:37.280
logistic regression so
 

00:06:37.280 --> 00:06:39.340
logistic regression so
this completes half of backpropagation

00:06:39.340 --> 00:06:39.350
this completes half of backpropagation
 

00:06:39.350 --> 00:06:43.570
this completes half of backpropagation
and then again you can compute da one if

00:06:43.570 --> 00:06:43.580
and then again you can compute da one if
 

00:06:43.580 --> 00:06:45.640
and then again you can compute da one if
you wish although in practice the

00:06:45.640 --> 00:06:45.650
you wish although in practice the
 

00:06:45.650 --> 00:06:50.290
you wish although in practice the
computation for da 1 and DZ 1

00:06:50.290 --> 00:06:50.300
computation for da 1 and DZ 1
 

00:06:50.300 --> 00:06:52.659
computation for da 1 and DZ 1
I usually collapse into one step and so

00:06:52.659 --> 00:06:52.669
I usually collapse into one step and so
 

00:06:52.669 --> 00:06:55.240
I usually collapse into one step and so
what you actually implement is that DZ 1

00:06:55.240 --> 00:06:55.250
what you actually implement is that DZ 1
 

00:06:55.250 --> 00:07:00.250
what you actually implement is that DZ 1
is equal to W 2 transpose times easy to

00:07:00.250 --> 00:07:00.260
is equal to W 2 transpose times easy to
 

00:07:00.260 --> 00:07:04.659
is equal to W 2 transpose times easy to
and then times an element-wise product

00:07:04.659 --> 00:07:04.669
and then times an element-wise product
 

00:07:04.669 --> 00:07:12.100
and then times an element-wise product
of G 1 prime of Z 1 and just to do a

00:07:12.100 --> 00:07:12.110
of G 1 prime of Z 1 and just to do a
 

00:07:12.110 --> 00:07:14.230
of G 1 prime of Z 1 and just to do a
check on the dimensions right if you

00:07:14.230 --> 00:07:14.240
check on the dimensions right if you
 

00:07:14.240 --> 00:07:18.070
check on the dimensions right if you
have a mirror network that looks like

00:07:18.070 --> 00:07:18.080
have a mirror network that looks like
 

00:07:18.080 --> 00:07:23.680
have a mirror network that looks like
this all right outputs y so if you have

00:07:23.680 --> 00:07:23.690
this all right outputs y so if you have
 

00:07:23.690 --> 00:07:27.960
this all right outputs y so if you have
n 0 and x equals n 0 input features and

00:07:27.960 --> 00:07:27.970
n 0 and x equals n 0 input features and
 

00:07:27.970 --> 00:07:36.129
n 0 and x equals n 0 input features and
1 hidden units and n 2 so far and n 2 in

00:07:36.129 --> 00:07:36.139
1 hidden units and n 2 so far and n 2 in
 

00:07:36.139 --> 00:07:39.810
1 hidden units and n 2 so far and n 2 in
our case just one output unit then the

00:07:39.810 --> 00:07:39.820
our case just one output unit then the
 

00:07:39.820 --> 00:07:49.750
our case just one output unit then the
matrix W 2 is n 2 by N 1 dimensional Z 2

00:07:49.750 --> 00:07:49.760
matrix W 2 is n 2 by N 1 dimensional Z 2
 

00:07:49.760 --> 00:07:55.779
matrix W 2 is n 2 by N 1 dimensional Z 2
and therefore DZ 2 are going to be n 2

00:07:55.779 --> 00:07:55.789
and therefore DZ 2 are going to be n 2
 

00:07:55.789 --> 00:07:58.150
and therefore DZ 2 are going to be n 2
by 1 dimensional this is really going to

00:07:58.150 --> 00:07:58.160
by 1 dimensional this is really going to
 

00:07:58.160 --> 00:08:01.150
by 1 dimensional this is really going to
be a 1 by 1 1 where 2 in binary

00:08:01.150 --> 00:08:01.160
be a 1 by 1 1 where 2 in binary
 

00:08:01.160 --> 00:08:04.150
be a 1 by 1 1 where 2 in binary
classification and Z 1 and therefore

00:08:04.150 --> 00:08:04.160
classification and Z 1 and therefore
 

00:08:04.160 --> 00:08:08.740
classification and Z 1 and therefore
also GZ 1 are going to be n 1 by 1

00:08:08.740 --> 00:08:08.750
also GZ 1 are going to be n 1 by 1
 

00:08:08.750 --> 00:08:10.690
also GZ 1 are going to be n 1 by 1
dimensional right note that for any

00:08:10.690 --> 00:08:10.700
dimensional right note that for any
 

00:08:10.700 --> 00:08:14.740
dimensional right note that for any
variable foo foo and V foo always have

00:08:14.740 --> 00:08:14.750
variable foo foo and V foo always have
 

00:08:14.750 --> 00:08:16.990
variable foo foo and V foo always have
the same dimension so that's why W and

00:08:16.990 --> 00:08:17.000
the same dimension so that's why W and
 

00:08:17.000 --> 00:08:19.090
the same dimension so that's why W and
DW you know always have the same

00:08:19.090 --> 00:08:19.100
DW you know always have the same
 

00:08:19.100 --> 00:08:21.969
DW you know always have the same
dimension and similarly for B and D P

00:08:21.969 --> 00:08:21.979
dimension and similarly for B and D P
 

00:08:21.979 --> 00:08:24.490
dimension and similarly for B and D P
and C and D Z and so on so to make sure

00:08:24.490 --> 00:08:24.500
and C and D Z and so on so to make sure
 

00:08:24.500 --> 00:08:26.740
and C and D Z and so on so to make sure
that the dimensions of this all match up

00:08:26.740 --> 00:08:26.750
that the dimensions of this all match up
 

00:08:26.750 --> 00:08:31.589
that the dimensions of this all match up
we have that D Z 1 is equal to W 2

00:08:31.589 --> 00:08:31.599
we have that D Z 1 is equal to W 2
 

00:08:31.599 --> 00:08:37.630
we have that D Z 1 is equal to W 2
transpose times D Z 2 and then um this

00:08:37.630 --> 00:08:37.640
transpose times D Z 2 and then um this
 

00:08:37.640 --> 00:08:38.920
transpose times D Z 2 and then um this
is an element-wise

00:08:38.920 --> 00:08:38.930
is an element-wise
 

00:08:38.930 --> 00:08:44.710
is an element-wise
product times G 1 prime of Z 1 so

00:08:44.710 --> 00:08:44.720
product times G 1 prime of Z 1 so
 

00:08:44.720 --> 00:08:47.110
product times G 1 prime of Z 1 so
mashing the dimensions from above this

00:08:47.110 --> 00:08:47.120
mashing the dimensions from above this
 

00:08:47.120 --> 00:08:50.980
mashing the dimensions from above this
is going to be N 1 by 1 is equal to

00:08:50.980 --> 00:08:50.990
is going to be N 1 by 1 is equal to
 

00:08:50.990 --> 00:08:51.700
is going to be N 1 by 1 is equal to
double

00:08:51.700 --> 00:08:51.710
double
 

00:08:51.710 --> 00:08:53.740
double
to transpose V consoles of this so just

00:08:53.740 --> 00:08:53.750
to transpose V consoles of this so just
 

00:08:53.750 --> 00:08:58.500
to transpose V consoles of this so just
going to be and 1 by n two-dimensional

00:08:58.500 --> 00:08:58.510
going to be and 1 by n two-dimensional
 

00:08:58.510 --> 00:09:04.120
going to be and 1 by n two-dimensional
DV 2 is going to be n 2 by 1 dimensional

00:09:04.120 --> 00:09:04.130
DV 2 is going to be n 2 by 1 dimensional
 

00:09:04.130 --> 00:09:06.520
DV 2 is going to be n 2 by 1 dimensional
and then this this is the same dimension

00:09:06.520 --> 00:09:06.530
and then this this is the same dimension
 

00:09:06.530 --> 00:09:10.990
and then this this is the same dimension
as z1 so this is also n 1 by 1 dimension

00:09:10.990 --> 00:09:11.000
as z1 so this is also n 1 by 1 dimension
 

00:09:11.000 --> 00:09:13.030
as z1 so this is also n 1 by 1 dimension
also element wise product so the

00:09:13.030 --> 00:09:13.040
also element wise product so the
 

00:09:13.040 --> 00:09:15.880
also element wise product so the
dimensions do make sensor and n 1 by 1

00:09:15.880 --> 00:09:15.890
dimensions do make sensor and n 1 by 1
 

00:09:15.890 --> 00:09:18.130
dimensions do make sensor and n 1 by 1
dimensional vector can be obtained by

00:09:18.130 --> 00:09:18.140
dimensional vector can be obtained by
 

00:09:18.140 --> 00:09:20.980
dimensional vector can be obtained by
and 1 by n 2 dimensional matrix times n

00:09:20.980 --> 00:09:20.990
and 1 by n 2 dimensional matrix times n
 

00:09:20.990 --> 00:09:23.590
and 1 by n 2 dimensional matrix times n
2 by N 1 because the product of these

00:09:23.590 --> 00:09:23.600
2 by N 1 because the product of these
 

00:09:23.600 --> 00:09:26.020
2 by N 1 because the product of these
two things gives you and one by one

00:09:26.020 --> 00:09:26.030
two things gives you and one by one
 

00:09:26.030 --> 00:09:28.720
two things gives you and one by one
dimensional matrix and so this becomes

00:09:28.720 --> 00:09:28.730
dimensional matrix and so this becomes
 

00:09:28.730 --> 00:09:32.440
dimensional matrix and so this becomes
the element wise product of two and one

00:09:32.440 --> 00:09:32.450
the element wise product of two and one
 

00:09:32.450 --> 00:09:35.050
the element wise product of two and one
by one dimensional vectors and so the

00:09:35.050 --> 00:09:35.060
by one dimensional vectors and so the
 

00:09:35.060 --> 00:09:37.620
by one dimensional vectors and so the
dimensions do match up once if when

00:09:37.620 --> 00:09:37.630
dimensions do match up once if when
 

00:09:37.630 --> 00:09:41.200
dimensions do match up once if when
implementing backdrop on if you just

00:09:41.200 --> 00:09:41.210
implementing backdrop on if you just
 

00:09:41.210 --> 00:09:42.970
implementing backdrop on if you just
make sure that the dimensions of your

00:09:42.970 --> 00:09:42.980
make sure that the dimensions of your
 

00:09:42.980 --> 00:09:45.220
make sure that the dimensions of your
matrix is match up so if you think

00:09:45.220 --> 00:09:45.230
matrix is match up so if you think
 

00:09:45.230 --> 00:09:47.200
matrix is match up so if you think
through what are the dimensions of your

00:09:47.200 --> 00:09:47.210
through what are the dimensions of your
 

00:09:47.210 --> 00:09:50.830
through what are the dimensions of your
various matrices including W 1 W 2 Z 1 Z

00:09:50.830 --> 00:09:50.840
various matrices including W 1 W 2 Z 1 Z
 

00:09:50.840 --> 00:09:54.040
various matrices including W 1 W 2 Z 1 Z
2 a 1 a 2 and so on and just make sure

00:09:54.040 --> 00:09:54.050
2 a 1 a 2 and so on and just make sure
 

00:09:54.050 --> 00:09:56.920
2 a 1 a 2 and so on and just make sure
that the dimensions of these matrix

00:09:56.920 --> 00:09:56.930
that the dimensions of these matrix
 

00:09:56.930 --> 00:09:59.710
that the dimensions of these matrix
operations may match up sometimes that

00:09:59.710 --> 00:09:59.720
operations may match up sometimes that
 

00:09:59.720 --> 00:10:02.080
operations may match up sometimes that
will already eliminate quite a lot of

00:10:02.080 --> 00:10:02.090
will already eliminate quite a lot of
 

00:10:02.090 --> 00:10:04.450
will already eliminate quite a lot of
bugs in that row all right so this gives

00:10:04.450 --> 00:10:04.460
bugs in that row all right so this gives
 

00:10:04.460 --> 00:10:07.480
bugs in that row all right so this gives
us D Z 1 and then finally just to wrap

00:10:07.480 --> 00:10:07.490
us D Z 1 and then finally just to wrap
 

00:10:07.490 --> 00:10:12.610
us D Z 1 and then finally just to wrap
up DW 1 and DB 1 we should break them

00:10:12.610 --> 00:10:12.620
up DW 1 and DB 1 we should break them
 

00:10:12.620 --> 00:10:14.920
up DW 1 and DB 1 we should break them
here I guess but since I'm running out

00:10:14.920 --> 00:10:14.930
here I guess but since I'm running out
 

00:10:14.930 --> 00:10:16.390
here I guess but since I'm running out
of space I'll write them on the right of

00:10:16.390 --> 00:10:16.400
of space I'll write them on the right of
 

00:10:16.400 --> 00:10:20.380
of space I'll write them on the right of
the slide DW 1 and DB 1 are given by the

00:10:20.380 --> 00:10:20.390
the slide DW 1 and DB 1 are given by the
 

00:10:20.390 --> 00:10:22.120
the slide DW 1 and DB 1 are given by the
following formulas this is going to

00:10:22.120 --> 00:10:22.130
following formulas this is going to
 

00:10:22.130 --> 00:10:26.320
following formulas this is going to
equal to GZ 1 times X transpose and this

00:10:26.320 --> 00:10:26.330
equal to GZ 1 times X transpose and this
 

00:10:26.330 --> 00:10:29.680
equal to GZ 1 times X transpose and this
is going to be equal to DZ and you might

00:10:29.680 --> 00:10:29.690
is going to be equal to DZ and you might
 

00:10:29.690 --> 00:10:31.270
is going to be equal to DZ and you might
notice a similarity between these

00:10:31.270 --> 00:10:31.280
notice a similarity between these
 

00:10:31.280 --> 00:10:34.570
notice a similarity between these
equations and these equations which is

00:10:34.570 --> 00:10:34.580
equations and these equations which is
 

00:10:34.580 --> 00:10:37.320
equations and these equations which is
really no coincidence because X plays

00:10:37.320 --> 00:10:37.330
really no coincidence because X plays
 

00:10:37.330 --> 00:10:40.990
really no coincidence because X plays
the role of a zero so X transpose is a 0

00:10:40.990 --> 00:10:41.000
the role of a zero so X transpose is a 0
 

00:10:41.000 --> 00:10:42.460
the role of a zero so X transpose is a 0
transpose so those equations are

00:10:42.460 --> 00:10:42.470
transpose so those equations are
 

00:10:42.470 --> 00:10:45.730
transpose so those equations are
actually are very similar all right so

00:10:45.730 --> 00:10:45.740
actually are very similar all right so
 

00:10:45.740 --> 00:10:47.950
actually are very similar all right so
that gives a sense for how back

00:10:47.950 --> 00:10:47.960
that gives a sense for how back
 

00:10:47.960 --> 00:10:50.830
that gives a sense for how back
propagation is derived and we have six

00:10:50.830 --> 00:10:50.840
propagation is derived and we have six
 

00:10:50.840 --> 00:10:56.050
propagation is derived and we have six
key equations here for um D Z 2 DW 2 DB

00:10:56.050 --> 00:10:56.060
key equations here for um D Z 2 DW 2 DB
 

00:10:56.060 --> 00:11:00.880
key equations here for um D Z 2 DW 2 DB
2 DZ 1 DW 1 + DP 1 so let me just take

00:11:00.880 --> 00:11:00.890
2 DZ 1 DW 1 + DP 1 so let me just take
 

00:11:00.890 --> 00:11:02.920
2 DZ 1 DW 1 + DP 1 so let me just take
these six equations and copy them over

00:11:02.920 --> 00:11:02.930
these six equations and copy them over
 

00:11:02.930 --> 00:11:03.820
these six equations and copy them over
to the next slide

00:11:03.820 --> 00:11:03.830
to the next slide
 

00:11:03.830 --> 00:11:07.509
to the next slide
here they are and so far with divided

00:11:07.509 --> 00:11:07.519
here they are and so far with divided
 

00:11:07.519 --> 00:11:10.329
here they are and so far with divided
backpropagation for if your training on

00:11:10.329 --> 00:11:10.339
backpropagation for if your training on
 

00:11:10.339 --> 00:11:14.620
backpropagation for if your training on
a single training example at a time but

00:11:14.620 --> 00:11:14.630
a single training example at a time but
 

00:11:14.630 --> 00:11:16.740
a single training example at a time but
it should come as no surprise that

00:11:16.740 --> 00:11:16.750
it should come as no surprise that
 

00:11:16.750 --> 00:11:19.630
it should come as no surprise that
rather than working on a single example

00:11:19.630 --> 00:11:19.640
rather than working on a single example
 

00:11:19.640 --> 00:11:24.090
rather than working on a single example
at a time we would like to vectorize

00:11:24.090 --> 00:11:24.100
at a time we would like to vectorize
 

00:11:24.100 --> 00:11:28.180
at a time we would like to vectorize
across different training examples so

00:11:28.180 --> 00:11:28.190
across different training examples so
 

00:11:28.190 --> 00:11:30.340
across different training examples so
you remember that forward propagation

00:11:30.340 --> 00:11:30.350
you remember that forward propagation
 

00:11:30.350 --> 00:11:32.800
you remember that forward propagation
where we're operating on one example at

00:11:32.800 --> 00:11:32.810
where we're operating on one example at
 

00:11:32.810 --> 00:11:36.160
where we're operating on one example at
a time we have equations like this um as

00:11:36.160 --> 00:11:36.170
a time we have equations like this um as
 

00:11:36.170 --> 00:11:42.190
a time we have equations like this um as
well as say a1 equals G 1 of Z 1 and in

00:11:42.190 --> 00:11:42.200
well as say a1 equals G 1 of Z 1 and in
 

00:11:42.200 --> 00:11:46.480
well as say a1 equals G 1 of Z 1 and in
order to vectorize we took say the Z's

00:11:46.480 --> 00:11:46.490
order to vectorize we took say the Z's
 

00:11:46.490 --> 00:11:54.910
order to vectorize we took say the Z's
and stack them up in columns like this V

00:11:54.910 --> 00:11:54.920
and stack them up in columns like this V
 

00:11:54.920 --> 00:12:01.900
and stack them up in columns like this V
1 M and call this capital Z and then we

00:12:01.900 --> 00:12:01.910
1 M and call this capital Z and then we
 

00:12:01.910 --> 00:12:04.090
1 M and call this capital Z and then we
found that you know by setting things up

00:12:04.090 --> 00:12:04.100
found that you know by setting things up
 

00:12:04.100 --> 00:12:08.230
found that you know by setting things up
in columns and defining the capital

00:12:08.230 --> 00:12:08.240
in columns and defining the capital
 

00:12:08.240 --> 00:12:10.840
in columns and defining the capital
uppercase version of these we then just

00:12:10.840 --> 00:12:10.850
uppercase version of these we then just
 

00:12:10.850 --> 00:12:19.079
uppercase version of these we then just
had Z 1 equals W 1 X plus B and a 1

00:12:19.079 --> 00:12:19.089
had Z 1 equals W 1 X plus B and a 1
 

00:12:19.089 --> 00:12:25.569
had Z 1 equals W 1 X plus B and a 1
equals G 1 of Z 1 right and we define

00:12:25.569 --> 00:12:25.579
equals G 1 of Z 1 right and we define
 

00:12:25.579 --> 00:12:27.250
equals G 1 of Z 1 right and we define
the notation very carefully in this code

00:12:27.250 --> 00:12:27.260
the notation very carefully in this code
 

00:12:27.260 --> 00:12:30.340
the notation very carefully in this code
to make sure that some stacking examples

00:12:30.340 --> 00:12:30.350
to make sure that some stacking examples
 

00:12:30.350 --> 00:12:32.819
to make sure that some stacking examples
in two different columns of the matrix

00:12:32.819 --> 00:12:32.829
in two different columns of the matrix
 

00:12:32.829 --> 00:12:36.460
in two different columns of the matrix
makes all this work out so it turns out

00:12:36.460 --> 00:12:36.470
makes all this work out so it turns out
 

00:12:36.470 --> 00:12:38.980
makes all this work out so it turns out
that if you go through the math

00:12:38.980 --> 00:12:38.990
that if you go through the math
 

00:12:38.990 --> 00:12:42.250
that if you go through the math
carefully the same trick also works for

00:12:42.250 --> 00:12:42.260
carefully the same trick also works for
 

00:12:42.260 --> 00:12:44.560
carefully the same trick also works for
back propagation so the vectorize

00:12:44.560 --> 00:12:44.570
back propagation so the vectorize
 

00:12:44.570 --> 00:12:47.500
back propagation so the vectorize
equations are as follows first if you

00:12:47.500 --> 00:12:47.510
equations are as follows first if you
 

00:12:47.510 --> 00:12:50.829
equations are as follows first if you
take these disease for different

00:12:50.829 --> 00:12:50.839
take these disease for different
 

00:12:50.839 --> 00:12:54.250
take these disease for different
training examples and stack them at the

00:12:54.250 --> 00:12:54.260
training examples and stack them at the
 

00:12:54.260 --> 00:12:56.199
training examples and stack them at the
different columns of the matrix and same

00:12:56.199 --> 00:12:56.209
different columns of the matrix and same
 

00:12:56.209 --> 00:12:59.350
different columns of the matrix and same
for this and same for this then this is

00:12:59.350 --> 00:12:59.360
for this and same for this then this is
 

00:12:59.360 --> 00:13:01.780
for this and same for this then this is
the vectorized implementation and then

00:13:01.780 --> 00:13:01.790
the vectorized implementation and then
 

00:13:01.790 --> 00:13:03.819
the vectorized implementation and then
here's the definition for or shears how

00:13:03.819 --> 00:13:03.829
here's the definition for or shears how
 

00:13:03.829 --> 00:13:05.319
here's the definition for or shears how
you can compute d w2

00:13:05.319 --> 00:13:05.329
you can compute d w2
 

00:13:05.329 --> 00:13:08.530
you can compute d w2
on there is this extra 1 over m because

00:13:08.530 --> 00:13:08.540
on there is this extra 1 over m because
 

00:13:08.540 --> 00:13:12.730
on there is this extra 1 over m because
you know the cost function J is d'azyr

00:13:12.730 --> 00:13:12.740
you know the cost function J is d'azyr
 

00:13:12.740 --> 00:13:14.769
you know the cost function J is d'azyr
one over m of sum from I equals 1

00:13:14.769 --> 00:13:14.779
one over m of sum from I equals 1
 

00:13:14.779 --> 00:13:19.510
one over m of sum from I equals 1
through m of the losses and so when

00:13:19.510 --> 00:13:19.520
through m of the losses and so when
 

00:13:19.520 --> 00:13:21.310
through m of the losses and so when
computing derivatives we have that extra

00:13:21.310 --> 00:13:21.320
computing derivatives we have that extra
 

00:13:21.320 --> 00:13:23.260
computing derivatives we have that extra
1 over m term just as we did when we

00:13:23.260 --> 00:13:23.270
1 over m term just as we did when we
 

00:13:23.270 --> 00:13:25.630
1 over m term just as we did when we
were computing the weight updates for

00:13:25.630 --> 00:13:25.640
were computing the weight updates for
 

00:13:25.640 --> 00:13:28.810
were computing the weight updates for
logistic regression and then that's the

00:13:28.810 --> 00:13:28.820
logistic regression and then that's the
 

00:13:28.820 --> 00:13:33.130
logistic regression and then that's the
update you get for db2 again some of the

00:13:33.130 --> 00:13:33.140
update you get for db2 again some of the
 

00:13:33.140 --> 00:13:35.490
update you get for db2 again some of the
disease and then with a 1 over N and

00:13:35.490 --> 00:13:35.500
disease and then with a 1 over N and
 

00:13:35.500 --> 00:13:40.810
disease and then with a 1 over N and
then d z1 is computed as follows once

00:13:40.810 --> 00:13:40.820
then d z1 is computed as follows once
 

00:13:40.820 --> 00:13:45.480
then d z1 is computed as follows once
again this is an element-wise product

00:13:45.480 --> 00:13:45.490
again this is an element-wise product
 

00:13:45.490 --> 00:13:49.630
again this is an element-wise product
only whereas previously this was we saw

00:13:49.630 --> 00:13:49.640
only whereas previously this was we saw
 

00:13:49.640 --> 00:13:53.050
only whereas previously this was we saw
on the previous slide that this was an N

00:13:53.050 --> 00:13:53.060
on the previous slide that this was an N
 

00:13:53.060 --> 00:13:57.730
on the previous slide that this was an N
1 by 1 dimensional vector now this is a

00:13:57.730 --> 00:13:57.740
1 by 1 dimensional vector now this is a
 

00:13:57.740 --> 00:14:03.699
1 by 1 dimensional vector now this is a
n 1 by M dimensional matrix and both of

00:14:03.699 --> 00:14:03.709
n 1 by M dimensional matrix and both of
 

00:14:03.709 --> 00:14:08.530
n 1 by M dimensional matrix and both of
these are also + 1 by M dimensional and

00:14:08.530 --> 00:14:08.540
these are also + 1 by M dimensional and
 

00:14:08.540 --> 00:14:11.800
these are also + 1 by M dimensional and
so that's why that activist is a

00:14:11.800 --> 00:14:11.810
so that's why that activist is a
 

00:14:11.810 --> 00:14:18.790
so that's why that activist is a
element-wise product and then finally

00:14:18.790 --> 00:14:18.800
element-wise product and then finally
 

00:14:18.800 --> 00:14:21.940
element-wise product and then finally
the remaining two updates um perhaps

00:14:21.940 --> 00:14:21.950
the remaining two updates um perhaps
 

00:14:21.950 --> 00:14:25.900
the remaining two updates um perhaps
shouldn't look too surprising so I hope

00:14:25.900 --> 00:14:25.910
shouldn't look too surprising so I hope
 

00:14:25.910 --> 00:14:27.610
shouldn't look too surprising so I hope
that gives you some intuition for how

00:14:27.610 --> 00:14:27.620
that gives you some intuition for how
 

00:14:27.620 --> 00:14:29.230
that gives you some intuition for how
the back propagation algorithm is

00:14:29.230 --> 00:14:29.240
the back propagation algorithm is
 

00:14:29.240 --> 00:14:31.900
the back propagation algorithm is
derived in all of machine learning

00:14:31.900 --> 00:14:31.910
derived in all of machine learning
 

00:14:31.910 --> 00:14:34.000
derived in all of machine learning
I think the derivation of the back

00:14:34.000 --> 00:14:34.010
I think the derivation of the back
 

00:14:34.010 --> 00:14:35.650
I think the derivation of the back
propagation algorithm is actually one of

00:14:35.650 --> 00:14:35.660
propagation algorithm is actually one of
 

00:14:35.660 --> 00:14:37.630
propagation algorithm is actually one of
the most complicated pieces of math I've

00:14:37.630 --> 00:14:37.640
the most complicated pieces of math I've
 

00:14:37.640 --> 00:14:41.260
the most complicated pieces of math I've
seen and it requires knowing both linear

00:14:41.260 --> 00:14:41.270
seen and it requires knowing both linear
 

00:14:41.270 --> 00:14:42.900
seen and it requires knowing both linear
algebra as well as the derivative

00:14:42.900 --> 00:14:42.910
algebra as well as the derivative
 

00:14:42.910 --> 00:14:45.100
algebra as well as the derivative
matrices to really derive it from

00:14:45.100 --> 00:14:45.110
matrices to really derive it from
 

00:14:45.110 --> 00:14:47.199
matrices to really derive it from
scratch from first principles if you are

00:14:47.199 --> 00:14:47.209
scratch from first principles if you are
 

00:14:47.209 --> 00:14:51.310
scratch from first principles if you are
an expert in matrix calculus using this

00:14:51.310 --> 00:14:51.320
an expert in matrix calculus using this
 

00:14:51.320 --> 00:14:52.990
an expert in matrix calculus using this
process you might go to derive the

00:14:52.990 --> 00:14:53.000
process you might go to derive the
 

00:14:53.000 --> 00:14:55.180
process you might go to derive the
algorithm yourself but I think that

00:14:55.180 --> 00:14:55.190
algorithm yourself but I think that
 

00:14:55.190 --> 00:14:56.500
algorithm yourself but I think that
there actually plenty of deep learning

00:14:56.500 --> 00:14:56.510
there actually plenty of deep learning
 

00:14:56.510 --> 00:14:59.319
there actually plenty of deep learning
practitioners that have seen the

00:14:59.319 --> 00:14:59.329
practitioners that have seen the
 

00:14:59.329 --> 00:15:01.000
practitioners that have seen the
derivation at about the level you've

00:15:01.000 --> 00:15:01.010
derivation at about the level you've
 

00:15:01.010 --> 00:15:03.490
derivation at about the level you've
seen in this video and are already able

00:15:03.490 --> 00:15:03.500
seen in this video and are already able
 

00:15:03.500 --> 00:15:05.230
seen in this video and are already able
to have all the very intuitions and

00:15:05.230 --> 00:15:05.240
to have all the very intuitions and
 

00:15:05.240 --> 00:15:07.420
to have all the very intuitions and
people implement this algorithm very

00:15:07.420 --> 00:15:07.430
people implement this algorithm very
 

00:15:07.430 --> 00:15:09.790
people implement this algorithm very
effectively so the RNA excluding

00:15:09.790 --> 00:15:09.800
effectively so the RNA excluding
 

00:15:09.800 --> 00:15:12.160
effectively so the RNA excluding
calculus do see if you can divide the

00:15:12.160 --> 00:15:12.170
calculus do see if you can divide the
 

00:15:12.170 --> 00:15:13.870
calculus do see if you can divide the
whole thing from scratch it is one of

00:15:13.870 --> 00:15:13.880
whole thing from scratch it is one of
 

00:15:13.880 --> 00:15:15.850
whole thing from scratch it is one of
the very hardest pieces of math or the

00:15:15.850 --> 00:15:15.860
the very hardest pieces of math or the
 

00:15:15.860 --> 00:15:18.370
the very hardest pieces of math or the
very hardest derivations that I've seen

00:15:18.370 --> 00:15:18.380
very hardest derivations that I've seen
 

00:15:18.380 --> 00:15:20.350
very hardest derivations that I've seen
in all of machine learning but either

00:15:20.350 --> 00:15:20.360
in all of machine learning but either
 

00:15:20.360 --> 00:15:23.290
in all of machine learning but either
way if implemented you know this will

00:15:23.290 --> 00:15:23.300
way if implemented you know this will
 

00:15:23.300 --> 00:15:25.090
way if implemented you know this will
work and I think you have enough into

00:15:25.090 --> 00:15:25.100
work and I think you have enough into
 

00:15:25.100 --> 00:15:28.290
work and I think you have enough into
to tune and get it to work so that

00:15:28.290 --> 00:15:28.300
to tune and get it to work so that
 

00:15:28.300 --> 00:15:30.730
to tune and get it to work so that
there's just one last detail when I

00:15:30.730 --> 00:15:30.740
there's just one last detail when I
 

00:15:30.740 --> 00:15:32.770
there's just one last detail when I
share view before you implement your

00:15:32.770 --> 00:15:32.780
share view before you implement your
 

00:15:32.780 --> 00:15:35.140
share view before you implement your
neural network which is how to

00:15:35.140 --> 00:15:35.150
neural network which is how to
 

00:15:35.150 --> 00:15:36.940
neural network which is how to
initialize the weights of the neural

00:15:36.940 --> 00:15:36.950
initialize the weights of the neural
 

00:15:36.950 --> 00:15:38.700
initialize the weights of the neural
network and it turns out that

00:15:38.700 --> 00:15:38.710
network and it turns out that
 

00:15:38.710 --> 00:15:41.260
network and it turns out that
initializing your parameter is not to 0

00:15:41.260 --> 00:15:41.270
initializing your parameter is not to 0
 

00:15:41.270 --> 00:15:43.540
initializing your parameter is not to 0
but randomly turns out to be very

00:15:43.540 --> 00:15:43.550
but randomly turns out to be very
 

00:15:43.550 --> 00:15:45.430
but randomly turns out to be very
important for training your network in

00:15:45.430 --> 00:15:45.440
important for training your network in
 

00:15:45.440 --> 00:15:49.480
important for training your network in
the next video you see why

