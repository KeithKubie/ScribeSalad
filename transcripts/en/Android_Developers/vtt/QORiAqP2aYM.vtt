WEBVTT
Kind: captions
Language: en

00:00:05.150 --> 00:00:06.175
JOHAN PELGRIM: So
welcome back.

00:00:06.175 --> 00:00:09.410
In this lesson, we're going to
start the process of signing

00:00:09.410 --> 00:00:10.450
the user in.

00:00:10.450 --> 00:00:12.510
Now, the first thing we need to
do to prepare the sign-in

00:00:12.510 --> 00:00:15.720
process is manage our GPPSignIn

00:00:15.720 --> 00:00:17.540
shared singleton instance.

00:00:17.540 --> 00:00:20.460
This is something that is a
singleton, and you can access

00:00:20.460 --> 00:00:24.000
it from any class and before
you use it to sign the user

00:00:24.000 --> 00:00:26.820
in, you'll want to set a
few properties with it.

00:00:26.820 --> 00:00:28.960
Now, there are a number of
places you could do this.

00:00:28.960 --> 00:00:31.670
Your app delegate might be a
good place because you can

00:00:31.670 --> 00:00:34.380
make sure that everything
is set before

00:00:34.380 --> 00:00:36.140
anything else is loaded.

00:00:36.140 --> 00:00:38.950
However, just to keep our code
a little simpler, I think we

00:00:38.950 --> 00:00:42.380
can do this in our Intro
ViewController as well.

00:00:42.380 --> 00:00:43.940
So I'm going to do this here.

00:00:43.940 --> 00:00:45.770
Once we're in our
ViewController, the first

00:00:45.770 --> 00:00:50.180
thing we're going to want
to do is import the

00:00:50.180 --> 00:00:56.520
Google+/Google+ header.

00:00:56.520 --> 00:00:59.810
This will include everything
we need to access sign in.

00:00:59.810 --> 00:01:03.990
So next I'm going to create a
method called, let's call it

00:01:03.990 --> 00:01:05.240
InitializeGPPSignIn.

00:01:08.780 --> 00:01:11.120
And this is where we're going
to access that shared

00:01:11.120 --> 00:01:14.360
singleton instance and set up
all the properties for it.

00:01:14.360 --> 00:01:16.790
Now the first we're going to
want to do is create a string

00:01:16.790 --> 00:01:18.910
that references our client ID.

00:01:18.910 --> 00:01:22.290
So InAString, gameclientid.

00:01:27.360 --> 00:01:30.080
And this is that string that I
told you to copy and paste a

00:01:30.080 --> 00:01:31.340
couple lessons ago.

00:01:31.340 --> 00:01:33.960
But I also told you that if you
didn't copy and paste it

00:01:33.960 --> 00:01:37.080
like I didn't, you can go back
to a Google Play Developer

00:01:37.080 --> 00:01:38.490
Console and grab it.

00:01:38.490 --> 00:01:39.840
So I'm going to do that.

00:01:39.840 --> 00:01:43.320
Let's go to Chrome here.

00:01:43.320 --> 00:01:49.320
And under
play.google.com/app/publish,

00:01:49.320 --> 00:01:51.240
I'm going to click
the little game

00:01:51.240 --> 00:01:52.730
controller icon on the left.

00:01:52.730 --> 00:01:56.160
There's Guess My Number
under Linked Apps.

00:01:56.160 --> 00:02:00.180
Again, I can view the iOS linked
app, and here's my

00:02:00.180 --> 00:02:01.930
OAuth to client ID.

00:02:01.930 --> 00:02:07.890
So I'll just copy and paste
this and put it in here.

00:02:07.890 --> 00:02:10.090
And let me fix the typo here.

00:02:10.090 --> 00:02:11.170
There we go.

00:02:11.170 --> 00:02:13.410
This kind of feels like maybe
something that I'll eventually

00:02:13.410 --> 00:02:16.840
want to pull into a constants
file or something somewhere.

00:02:16.840 --> 00:02:19.800
But I suppose this is
good enough for now.

00:02:19.800 --> 00:02:21.580
I'm feeling a little lazy.

00:02:21.580 --> 00:02:24.170
Next, let's grab our
sign-in object.

00:02:24.170 --> 00:02:29.850
So we'll just reference this as
a local variable, sign in,

00:02:29.850 --> 00:02:31.230
and this equals--

00:02:31.230 --> 00:02:33.980
we'll get that from
the GPPSignIn--

00:02:33.980 --> 00:02:36.850
SharedInstance singleton
method.

00:02:36.850 --> 00:02:39.990
So this will grab our Google+
sign-in object that we can

00:02:39.990 --> 00:02:42.030
then set various
properties on.

00:02:42.030 --> 00:02:47.800
So for instance, I can do
signin.clientid equals our

00:02:47.800 --> 00:02:49.050
gameclientid.

00:02:50.650 --> 00:02:52.710
We're also going to want
to set the scopes.

00:02:52.710 --> 00:02:55.780
Remember that these are the
special powers that our valet

00:02:55.780 --> 00:02:59.170
key has that gives it access
to certain things in the

00:02:59.170 --> 00:03:00.420
user's account.

00:03:00.420 --> 00:03:05.810
So for this, signin.scopes
equals, and this is an array.

00:03:05.810 --> 00:03:09.240
So we'll call NSArray
array with objects.

00:03:15.000 --> 00:03:23.720
And we want HTTPS://www.goog
leapis.com/ot/games.

00:03:23.720 --> 00:03:27.160
And yes, I do realize we should
probably make this a

00:03:27.160 --> 00:03:30.120
constant somewhere in our
library, and we'll leave it

00:03:30.120 --> 00:03:32.890
like this even though we're
only including one object.

00:03:32.890 --> 00:03:36.350
I still like to use the plural
array with objects method

00:03:36.350 --> 00:03:37.840
because at some point
we'll probably be

00:03:37.840 --> 00:03:40.480
asking for more scopes.

00:03:40.480 --> 00:03:41.730
We also need to set
our language.

00:03:46.470 --> 00:03:50.720
And this we can usually get by
going to NSLocale, preferred

00:03:50.720 --> 00:03:53.480
languages, object and index 0.

00:03:56.300 --> 00:04:00.010
We want to set our
delegate to self.

00:04:00.010 --> 00:04:02.740
And this is basically telling
our sign-in object where it's

00:04:02.740 --> 00:04:06.360
going to report that the user
has finished signing in.

00:04:06.360 --> 00:04:10.420
And finally, sign
in should fetch

00:04:10.420 --> 00:04:12.970
GoogleUserID will be yes.

00:04:12.970 --> 00:04:15.900
What this does is it tells the
Google sign-in object that we

00:04:15.900 --> 00:04:18.100
are going to need
the user's ID.

00:04:18.100 --> 00:04:20.640
You'll recall back in our
earlier presentation when we

00:04:20.640 --> 00:04:24.090
got our access token back from
the system, we then used that

00:04:24.090 --> 00:04:27.440
to make another call saying, OK,
now that I have this OAuth

00:04:27.440 --> 00:04:30.050
token, who is this user,
and the system will

00:04:30.050 --> 00:04:31.580
return the user ID.

00:04:31.580 --> 00:04:34.960
This is essentially a shortcut
saying, hey, OAuth2 library,

00:04:34.960 --> 00:04:38.270
since this is something that we
request fairly often, why

00:04:38.270 --> 00:04:40.120
don't you just go ahead
and make a call.

00:04:40.120 --> 00:04:43.360
We'll get the user's ID as soon
as they've authorized our

00:04:43.360 --> 00:04:44.130
application.

00:04:44.130 --> 00:04:46.220
This is kind of nice, and it
turns out this is also

00:04:46.220 --> 00:04:48.700
required by the game service.

00:04:48.700 --> 00:04:52.280
It's going to need user ID, and
it's going to grab it from

00:04:52.280 --> 00:04:53.800
the sign-in object.

00:04:53.800 --> 00:04:56.170
So you probably haven't used
this setting before, but it

00:04:56.170 --> 00:04:59.570
required to get game
services working.

00:04:59.570 --> 00:05:01.940
Now you'll notice that at this
point we're getting a warning,

00:05:01.940 --> 00:05:05.260
and this is because we've set
sign-in delegate to self, but

00:05:05.260 --> 00:05:08.710
Xcode is telling us, hey wait
a minute, this class is in a

00:05:08.710 --> 00:05:11.970
GPPSignIn delegate, so
we can fix that.

00:05:11.970 --> 00:05:16.930
So up here at the top of our
ViewController.m file next to

00:05:16.930 --> 00:05:20.070
this interface line, we're going
to say that this class

00:05:20.070 --> 00:05:23.160
conforms to the GPP delegate.

00:05:23.160 --> 00:05:26.060
At this point we get another
warning saying well, OK, you

00:05:26.060 --> 00:05:29.380
said that it conforms to the
GPPSignIn delegate protocol,

00:05:29.380 --> 00:05:34.510
but you haven't implemented this
required finish with Auth

00:05:34.510 --> 00:05:38.020
error method, which is required
in this GPPSignIn

00:05:38.020 --> 00:05:39.070
delegate protocol.

00:05:39.070 --> 00:05:41.710
So we can do that as well.

00:05:41.710 --> 00:05:45.640
So we'll add finish
with auth error.

00:05:45.640 --> 00:05:49.860
And basically, this is the call
that our sign-in object

00:05:49.860 --> 00:05:51.390
is going to make.

00:05:51.390 --> 00:05:53.870
It's part of the delegate
protocol.

00:05:53.870 --> 00:05:56.810
That says, hey, the user
is finished signing in.

00:05:56.810 --> 00:06:00.680
Hopefully, there is an Auth
object attached to it, and if

00:06:00.680 --> 00:06:04.550
not, here's an error object that
explains what went wrong.

00:06:04.550 --> 00:06:08.360
So for right now, let's
just print something

00:06:08.360 --> 00:06:09.780
out to our log file.

00:06:09.780 --> 00:06:13.030
So NSlog, I am finished
with Auth.

00:06:16.397 --> 00:06:23.290
Auth is this object, and error
is this, and we'll add our

00:06:23.290 --> 00:06:26.470
auth and error objects so that
hopefully, we get something

00:06:26.470 --> 00:06:28.760
interesting in the
debug output.

00:06:28.760 --> 00:06:38.510
So now we can run this, and
nothing interesting happens.

00:06:38.510 --> 00:06:40.360
m that's because I
didn't actually

00:06:40.360 --> 00:06:41.990
sign the user in anywhere.

00:06:41.990 --> 00:06:45.110
We've initialized our GPP
sign-in object, but then we

00:06:45.110 --> 00:06:47.450
haven't actually done
anything with it.

00:06:47.450 --> 00:06:50.500
Luckily this is an easy fix, and
we'll tackle that in our

00:06:50.500 --> 00:06:51.750
next lesson.

