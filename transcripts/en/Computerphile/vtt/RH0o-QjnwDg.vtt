WEBVTT
Kind: captions
Language: en-GB

00:00:00.000 --> 00:00:03.949
The people defining what was called a
Standard Generalized Markup Language,

00:00:03.949 --> 00:00:09.300
SGML, they took over the pointy-bracket
notation and actually used it within

00:00:09.300 --> 00:00:15.360
documents themselves. It leads back into
computer science principles in so many

00:00:15.360 --> 00:00:20.039
many ways and there has been so much
confusion. So I suppose you could say what

00:00:20.039 --> 00:00:27.380
this episode is about is: SGML, HTML, XML --
what's the difference?

00:00:27.380 --> 00:00:30.380
Or are they all the same?  No!  They're not
all the same.

00:00:33.350 --> 00:00:38.739
Way back in the late 1970s, early 1980s,
a team at IBM

00:00:38.739 --> 00:00:45.300
led by a man called Charles Goldfarb -- who
was trained as a lawyer -- came up with the

00:00:45.300 --> 00:00:52.229
idea that it would be really useful to
be able to put tags into documents to

00:00:52.229 --> 00:00:56.619
say what the component parts of the
document were, like &lt;p&gt; for paragraph

00:00:56.619 --> 00:01:00.449
which is now so familiar to us from HTML as

00:01:00.449 --> 00:01:04.489
&lt;p&gt; and they came up with this whole

00:01:04.489 --> 00:01:10.110
notation for tags -- that's what it comes
down to. It was a tagset notation. People

00:01:10.110 --> 00:01:13.500
who see the advantage of this -- 
particularly if you had a huge 

00:01:13.500 --> 00:01:18.729
collection of documents that were just
crying out to be structured -- and there

00:01:18.729 --> 00:01:22.229
are quite a few of those. It could be
marriage records, it could be

00:01:22.229 --> 00:01:28.190
specifications of stuff owned by the
Department of Defense and indeed some of

00:01:28.190 --> 00:01:33.539
the earliest users ofp this tagset
technology, and SGML, was the Department

00:01:33.539 --> 00:01:38.600
of Defense and a thing called the Text
Encoding Initiative and they were just

00:01:38.600 --> 00:01:42.149
going to tag up everything in the world, that
they could see, with a suitable tag set,

00:01:42.149 --> 00:01:47.369
to make it easier to access and to
locate what you wanted if it was in a

00:01:47.369 --> 00:01:53.420
big database. So that was the overall
idea of it but in order to show you how

00:01:53.420 --> 00:02:00.159
this SGML worked let's start straight
away with something very simple. Here is

00:02:00.159 --> 00:02:02.719
a sample memo. There is a 'To'

00:02:02.719 --> 00:02:09.030
part - it's been sent to Tony Blair. This
is way back in the early years of this

00:02:09.030 --> 00:02:15.519
century around about the time of the Iraq
war, I think, is this fictitious memo. It 
is from the White

00:02:15.519 --> 00:02:21.299
House. The message is as follows and it says: "The
President says; 'Thanks for your support!' "

00:02:22.280 --> 00:02:28.000
Simple as that. So there's a 'To' and a 'From' and a 'Body'
- a message body. Now as computer

00:02:28.000 --> 00:02:32.220
scientists we realize straight away that
even if it's just a sequence you can

00:02:32.220 --> 00:02:37.370
still present it as a left-to-right
structure within a tree. So here's a

00:02:37.370 --> 00:02:39.480
structured tree representation

00:02:39.480 --> 00:02:43.470
of what we've just informally written
down. The whole thing - look at the top - is

00:02:43.470 --> 00:02:49.260
a Memo. And when you look below, in the
tree it says: "Ah! obviously a Memo is a

00:02:49.260 --> 00:02:55.180
sequence of a 'To' part followed by a 'From'
part, followed by a 'Body' part. Great!"

00:02:55.180 --> 00:03:01.060
Within the 'To' part there's just some text,
It says "Tony Blair". The 'From' part - more text

00:03:01.060 --> 00:03:03.180
it's from "The White House". 'Body' part

00:03:03.180 --> 00:03:08.010
- I've deliberately made this a little bit more
complicated. I've said that the 'Body' part

00:03:08.010 --> 00:03:12.980
can  be, if you like, just a single
paragraph - a &lt;p&gt; and within the &lt;p&gt; there

00:03:12.980 --> 00:03:16.269
could be arbitrary mixtures of plain text

00:03:16.269 --> 00:03:21.540
"The president says"  or marked quotations
because what I'm going to do is to say

00:03:21.540 --> 00:03:26.910
that thing that was in quotes is an
example of a quotation, so that if in

00:03:26.910 --> 00:03:32.090
future Sean were to say to me: "Go through
all our memos and dig out the bits

00:03:32.090 --> 00:03:37.079
that are quotations, or quoted speech", then 
because it's tagged and marked it's so much

00:03:37.079 --> 00:03:42.640
easier to pick out, of course. From that
tree, then, how does that translate into

00:03:42.640 --> 00:03:49.319
SGML notation?  Don't panic it's very, very
similar to what you're now familiar with

00:03:49.319 --> 00:03:54.269
as XML notation. Right! Here is a tag
that says this whole thing is a Memo and

00:03:54.269 --> 00:04:00.419
this is where it begins. The &lt;TO&gt; tag - it's to
Tony Blair, but being a good boy I must

00:04:00.419 --> 00:04:06.680
remember to end the &lt;/TO&gt; tag. &lt;FROM&gt; the
White House, end of the &lt;/FROM&gt; part. Here comes

00:04:06.680 --> 00:04:10.510
the &lt;BODY&gt;. Now I typeset the thing,

00:04:10.510 --> 00:04:15.269
previously, as the word "Message" but this
is just to illustrate that if you're

00:04:15.269 --> 00:04:18.510
crawling all over this spec. with a 
typesetting engine

00:04:18.510 --> 00:04:22.530
you could take the decision that every
time I see the word 'Body' as a tag, I

00:04:22.530 --> 00:04:28.200
actually put out the typeset thing
saying 'Message'. I could have said 'Body' but

00:04:28.200 --> 00:04:34.310
the tags themselves can trigger
typesetting and stylistic decisions, if

00:04:34.310 --> 00:04:37.290
that's what you want to do. So here we 
come then:  here's the body of the Memo

00:04:37.290 --> 00:04:41.460
and, like I said, it's got to be a
paragraph denoted with a &lt;P&gt;. 

00:04:41.460 --> 00:04:47.040
Here's the free text that I'm allowed: "The
President says", and here is the nested

00:04:47.040 --> 00:04:53.130
quote inside the paragraph, denoted with a
&lt;Q&gt; tag: "Thank you for your support!" end

00:04:53.130 --> 00:04:57.690
of quote, end of paragraph, end of
Memo. Now some of you,

00:04:57.690 --> 00:05:01.480
eagle-eyed, will immediately be dashing
to the Comments on this video, right now,

00:05:01.480 --> 00:05:08.480
hold on!, and will say: "You missed out the
&lt;/BODY&gt; tag !". To which the answer is: "Yes

00:05:08.480 --> 00:05:15.480
SGML allowed you to do that so long as you
warned it, in the spec. that goes behind

00:05:15.480 --> 00:05:21.660
this -- of the legal tags. If you said "I will
optionally make &lt;/BODY&gt;  be omittable",

00:05:21.660 --> 00:05:25.320
then the biblical handbook here says:

00:05:25.320 --> 00:05:31.640
"You may specify that you want certain
end-tags to be omittable, provided that

00:05:31.640 --> 00:05:38.190
doing so will not lead to ambiguity". And
therein lies a complete nest of vipers.

00:05:39.110 --> 00:05:44.520
But in this particular case it's all right,
you could put in and replace &lt;/BODY&gt;.

00:05:44.520 --> 00:05:49.090
Why did they do this? Well, in Charles Goldfarb's 
era you have got to remember

00:05:49.090 --> 00:05:55.020
disk space was massively expensive and
-- this sounds stupid but it isn't -- every

00:05:55.020 --> 00:06:02.140
single saved end-tag all added up to
so many hundred kilobytes that you didn't

00:06:02.140 --> 00:06:09.120
need because it could be assumed and
safely replaced you hoped. So, you know, they

00:06:09.120 --> 00:06:12.560
were not off their heads, they were
trying to save disk space.

00:06:12.560 --> 00:06:18.810
Here's where we have to try and choose
our words very carefully and say what

00:06:18.810 --> 00:06:22.420
you're allowed to say and what youre not
allowed to say, in terms of building

00:06:22.420 --> 00:06:28.580
&lt;MEMO&gt; out of this SGML technology. So
let me begin with the bedrock and when I

00:06:28.580 --> 00:06:33.780
say SGML technology don't forget what I mean.
It's basically -- SGML

00:06:33.780 --> 00:06:41.670
is like specifying the 'punctuation'. It's
saying have any tag you like but the

00:06:41.670 --> 00:06:48.130
'punctuation' around it is pointed brackets.
So here's our bedrock. On top of this, using

00:06:48.130 --> 00:06:57.470
SGML notation I've devised a MEMO language. So
remember, the right way to say this is

00:06:57.470 --> 00:07:04.510
that MEMO is an *application*  of SGML. In
other words it "uses the technology of".

00:07:04.510 --> 00:07:11.160
You must NOT say that "MEMO is a subset of SGML",
because they're different things.  SGML

00:07:11.160 --> 00:07:17.680
is a meta-notation; MEMO is a
specific tagset. And just to tell you

00:07:17.680 --> 00:07:22.440
I wasn't alone, way before me, in
the 1980s there was an

00:07:22.440 --> 00:07:28.200
initiative within the US Department of
Defense and I think it was to do with

00:07:28.200 --> 00:07:32.080
requisition and stores and stuff like
this. I've even forgotten what the acronym

00:07:32.080 --> 00:07:37.950
refers to now. CALS was one of the
earliest applications, very big, of

00:07:37.950 --> 00:07:43.419
SGML. They thought it was great. Being able to 
tag things with what they are and what they mean.
There was also a more

00:07:43.419 --> 00:07:48.340
scholarly initiative, called the Text
Encoding Initiative [TEI]. I mean one can

00:07:48.340 --> 00:07:54.210
imagine there's no end of literature ... "Is
this an example of the early-medieval

00:07:54.210 --> 00:08:00.970
subjunctive?" You tag it up to say "Yes it is".
Everything was hunky dory. Document

00:08:00.970 --> 00:08:05.500
professionals thought this was wonderful. When
computer scientists shouted at them

00:08:05.500 --> 00:08:11.350
basically saying "You shouldn't have allowed 
omitted end-tags. You've no idea the grief

00:08:11.350 --> 00:08:12.380
you will get into"

00:08:12.380 --> 00:08:18.080
The answer, I think, to that is: if you're
careful, and if you take advice, you

00:08:18.080 --> 00:08:25.060
can avoid the grief. But in a closed
world of document professionals, where very

00:08:25.060 --> 00:08:29.030
few people see the markup, this is all
right. Then in the early 1990s

00:08:29.030 --> 00:08:33.550
Oh boy! did something happen
that really blew it all wide open and

00:08:33.550 --> 00:08:38.180
led to a much wider adoption of SGML.
A certain Tim Berners-Lee came along, in

00:08:38.180 --> 00:08:42.860
the early 1990s -- I think it was about 1992
when it was first revealed to an

00:08:42.860 --> 00:08:48.720
unsuspecting world, and Tim said: "I like
this SGML and for these Web pages, rather

00:08:48.720 --> 00:08:53.160
than invent my own tagging meta-notation, I'll
use the pointed-bracket notation of SGML".

00:08:53.160 --> 00:09:08.120
But it was massively, massively successful. 
"Yeah, it's great!, Pointy-bracket notation! 
Specify our pages! Get 'em all out there!" 
Well, the weaknesses in HTML, first of all

00:09:08.120 --> 00:09:12.440
because it didn't have a document type
definition to say what was optionally

00:09:12.440 --> 00:09:17.220
omissible and what wasn't, Tim had a certain 
view about .... well,  for example "end of para" &lt;p&gt;

00:09:17.220 --> 00:09:22.800
Even nowadays, in an XML-compliant
browser, it's not going to refuse to show

00:09:22.800 --> 00:09:26.660
your page because you go from &lt;p&gt; to another &lt;p&gt;

00:09:26.660 --> 00:09:31.080
without formally closing off the first para.
It just says: "Oh! I've hit another &lt;p&gt; ; I'm already

00:09:31.080 --> 00:09:34.410
in the middle of a &lt;p&gt;. I think I'd
better close off the one I'm doing. Go into

00:09:34.410 --> 00:09:39.740
another one. Fine. But there were far worse problems
than that and they really, really came

00:09:39.740 --> 00:09:47.680
home to roost within the first 18 months.
In 1994 there was a meeting --  I was there --

00:09:47.680 --> 00:09:53.970
at Edinburgh, where all of this came out
into the open. A full furious frank

00:09:53.970 --> 00:10:00.110
discussion took place about what was
wrong with HTML, could we ever put it

00:10:00.110 --> 00:10:03.250
right? This has to be another story.

