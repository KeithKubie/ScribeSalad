WEBVTT
Kind: captions
Language: en

00:00:00.760 --> 00:08:49.700
[MUSIC PLAYING]

00:08:49.700 --> 00:08:51.490
PETER LUBBERS: Nice.

00:08:51.490 --> 00:08:52.740
All right.

00:09:01.760 --> 00:09:03.375
All right, let's get started.

00:09:03.375 --> 00:09:06.046
Everyone in the back, hopefully,
you can hear me.

00:09:06.046 --> 00:09:08.018
Come a little closer.

00:09:08.018 --> 00:09:09.990
Amazing turn-out, tonight.

00:09:09.990 --> 00:09:13.441
Wanted to give a quick, huge
round of applause to Google

00:09:13.441 --> 00:09:17.385
for hosting us, for feeding
us, for live-streaming us.

00:09:17.385 --> 00:09:18.371
That's incredible.

00:09:18.371 --> 00:09:20.320
So a round of applause
for Google.

00:09:20.320 --> 00:09:25.864
[APPLAUSE]

00:09:25.864 --> 00:09:32.762
PETER LUBBERS: All right,
tonight's hashtags are here.

00:09:32.762 --> 00:09:33.610
There we go.

00:09:33.610 --> 00:09:37.680
All right, SFHTML5,
perfmatters.

00:09:37.680 --> 00:09:41.530
And wanted to also give a shout
out to the folks from

00:09:41.530 --> 00:09:44.380
the Grant-Eddie Winery
that are in the back.

00:09:44.380 --> 00:09:46.680
Maybe a round of applause for
them for all the great wines.

00:09:46.680 --> 00:09:50.100
[APPLAUSE]

00:09:50.100 --> 00:09:52.650
PETER LUBBERS: And for
Rocky, for DJing this

00:09:52.650 --> 00:09:53.580
great music for us.

00:09:53.580 --> 00:09:54.600
He will be back in the break.

00:09:54.600 --> 00:09:54.890
Thanks.

00:09:54.890 --> 00:10:03.560
[APPLAUSE]

00:10:03.560 --> 00:10:05.760
PETER LUBBERS: So I should have
clicked through here a

00:10:05.760 --> 00:10:08.050
little bit.

00:10:08.050 --> 00:10:08.970
All right.

00:10:08.970 --> 00:10:13.120
So first of all, I want to thank
you all for coming and

00:10:13.120 --> 00:10:17.280
say a couple of words about the
sponsors that keep these

00:10:17.280 --> 00:10:20.060
events free and possible.

00:10:20.060 --> 00:10:22.940
Again, the first one,
specifically to Google

00:10:22.940 --> 00:10:26.380
Developers Live team doing
a great, great job.

00:10:26.380 --> 00:10:28.240
Jamie, Brian are here.

00:10:28.240 --> 00:10:30.470
They've been working for
four hours to get

00:10:30.470 --> 00:10:31.420
the live stream going.

00:10:31.420 --> 00:10:33.740
So I also want to say hello
to all the people that are

00:10:33.740 --> 00:10:34.340
watching live.

00:10:34.340 --> 00:10:36.550
The last time I checked, it was
close to 100 people live

00:10:36.550 --> 00:10:38.350
already watching around
the world.

00:10:38.350 --> 00:10:41.100
So thanks to them for
putting it on.

00:10:41.100 --> 00:10:45.070
Google Developers Live, by the
way, is sort of our Google

00:10:45.070 --> 00:10:47.540
developers' TV channel,
if you will.

00:10:47.540 --> 00:10:50.460
If you want to know more about
developer tools, or mobile, or

00:10:50.460 --> 00:10:52.370
Chrome apps, just go there.

00:10:52.370 --> 00:10:56.320
developers.google.com/live
is the place to go.

00:10:59.757 --> 00:11:01.730
All right.

00:11:01.730 --> 00:11:04.670
I wanted to let you know about
a great event that is

00:11:04.670 --> 00:11:06.600
happening in November.

00:11:06.600 --> 00:11:08.330
It's called the Chrome
Dev Summit.

00:11:08.330 --> 00:11:10.900
It's really a chance
for you to connect

00:11:10.900 --> 00:11:12.360
with the Chrome engineers.

00:11:12.360 --> 00:11:13.970
It's going to be in
Mountain View.

00:11:13.970 --> 00:11:17.860
Registration is going to open
up in early October.

00:11:17.860 --> 00:11:21.240
It's going to be pretty limited
seating, as usual,

00:11:21.240 --> 00:11:23.160
like 300 or so, we can fit in.

00:11:23.160 --> 00:11:27.230
So registration will sell
out pretty quickly.

00:11:27.230 --> 00:11:28.570
But it's a great conference.

00:11:28.570 --> 00:11:31.650
We're also going to be
live-streaming that using the

00:11:31.650 --> 00:11:33.230
Google Developers
Live platform.

00:11:33.230 --> 00:11:35.280
So definitely look
out for that.

00:11:35.280 --> 00:11:43.140
There's a link there--
g.co/chromedevsummit.

00:11:43.140 --> 00:11:48.590
How many of you are
new to SFHTML5?

00:11:48.590 --> 00:11:49.950
OK, some of you.

00:11:49.950 --> 00:11:51.900
So we have these monthly
meetings.

00:11:51.900 --> 00:11:55.260
We've had them now for over
three years, every month,

00:11:55.260 --> 00:11:58.150
usually the last Thursday
of the month.

00:11:58.150 --> 00:12:00.470
But we have like one of these
big events every month.

00:12:00.470 --> 00:12:02.720
And we also host workshops
and other events.

00:12:02.720 --> 00:12:05.200
And our next event will
be all about WebRTC.

00:12:05.200 --> 00:12:06.930
Actually, it's going
to be two events.

00:12:06.930 --> 00:12:10.120
We're going to have three
talks about WebRTC.

00:12:10.120 --> 00:12:12.380
Chris Wilson is coming
to talk about it.

00:12:12.380 --> 00:12:13.480
We have a guy from vLine.

00:12:13.480 --> 00:12:16.770
We have a guy from PubNub
talking about data channels.

00:12:16.770 --> 00:12:17.890
It's going to be
a great event.

00:12:17.890 --> 00:12:21.840
And it's going to
be on October 9.

00:12:21.840 --> 00:12:24.900
Actually, the registration
opened kind of quietly.

00:12:24.900 --> 00:12:26.700
We didn't announce it to
the whole group yet.

00:12:26.700 --> 00:12:28.980
So you can still get in.

00:12:28.980 --> 00:12:31.330
And you know that may
be hard sometimes.

00:12:31.330 --> 00:12:32.500
So definitely sign
up for that.

00:12:32.500 --> 00:12:33.280
We have that event.

00:12:33.280 --> 00:12:34.880
That's a Wednesday evening.

00:12:34.880 --> 00:12:36.770
That's not our usual Thursday.

00:12:36.770 --> 00:12:40.010
It is going to be live-streamed
as well.

00:12:40.010 --> 00:12:42.450
And then the Saturday following
that, we have a

00:12:42.450 --> 00:12:45.625
great event, a WebRTC
Hack Workshop.

00:12:45.625 --> 00:12:46.860
So actually come in.

00:12:46.860 --> 00:12:49.140
You get to run through
a code lab or build

00:12:49.140 --> 00:12:50.600
your own WebRTC solutions.

00:12:50.600 --> 00:12:54.430
We have a ton of WebRTC experts
from Google and other

00:12:54.430 --> 00:12:56.470
companies on hand to really
step you through.

00:12:56.470 --> 00:13:00.420
It's a really great way
to get into that.

00:13:00.420 --> 00:13:04.390
OK, I wanted to thank Adobe,
one of our sponsors.

00:13:04.390 --> 00:13:08.150
Of course, great tools
for HTML5, and great

00:13:08.150 --> 00:13:08.840
stuff they're building.

00:13:08.840 --> 00:13:11.850
They're extremely active on the
web platform Docs Front.

00:13:11.850 --> 00:13:13.470
And that's a cause that's
really near

00:13:13.470 --> 00:13:14.650
and dear to our heart.

00:13:14.650 --> 00:13:20.050
We really want to push that
forward, get the right web

00:13:20.050 --> 00:13:21.790
documentation for all
of the reference

00:13:21.790 --> 00:13:24.500
information of the web.

00:13:24.500 --> 00:13:25.950
Also--

00:13:25.950 --> 00:13:30.640
[APPLAUSE]

00:13:30.640 --> 00:13:34.750
PETER LUBBERS: --a great event
coming to San Francisco and

00:13:34.750 --> 00:13:35.740
the Moscone Center.

00:13:35.740 --> 00:13:38.580
So it's now, I think, the
fifth version of it.

00:13:38.580 --> 00:13:40.390
And it's getting bigger
and bigger and bigger.

00:13:40.390 --> 00:13:42.780
It's the week of October 20.

00:13:42.780 --> 00:13:44.840
There's a day of training,
two days of full

00:13:44.840 --> 00:13:47.180
conference, HTML5 DevCon.

00:13:47.180 --> 00:13:49.540
I think most of you
have been there.

00:13:49.540 --> 00:13:52.930
If you haven't, it's an
extremely good deal, and two

00:13:52.930 --> 00:13:56.100
days of full-on conference,
followed by more training.

00:13:56.100 --> 00:13:58.090
So there's some great
sessions.

00:13:58.090 --> 00:14:00.170
Anne Burkett is here.

00:14:00.170 --> 00:14:02.080
She can tell you more about
it at the break.

00:14:02.080 --> 00:14:04.390
But basically check it
out, HTML5 DevCon.

00:14:07.370 --> 00:14:08.290
What's the date?

00:14:08.290 --> 00:14:13.510
October 22 and 23, and around
that there's days of training.

00:14:13.510 --> 00:14:15.210
We have a new sponsor, PubNub.

00:14:15.210 --> 00:14:19.590
They make software for real-time
publishing and

00:14:19.590 --> 00:14:21.540
subscribing to data right
in your application.

00:14:21.540 --> 00:14:24.250
They actually have publish and
subscribe as JavaScript

00:14:24.250 --> 00:14:27.030
functions, making it really easy
to create real-time data

00:14:27.030 --> 00:14:31.264
feeds and applications
around that.

00:14:31.264 --> 00:14:33.820
OK, Bountysource is here.

00:14:33.820 --> 00:14:35.900
They're going to be doing a
little lightning talk at the

00:14:35.900 --> 00:14:37.190
end of the first break.

00:14:37.190 --> 00:14:40.540
So they'll come back, and they
will also be raffling off some

00:14:40.540 --> 00:14:41.210
great prizes.

00:14:41.210 --> 00:14:45.040
And by the way, HTML5 DevCon
will also be raffling off two

00:14:45.040 --> 00:14:48.580
tickets to the conference.

00:14:48.580 --> 00:14:51.670
And there will be three Chrome
Dev Summit tickets.

00:14:51.670 --> 00:14:53.280
Peter, do you want to say a
little bit about the Kaazing?

00:14:53.280 --> 00:14:54.905
One of our founding sponsors--

00:14:54.905 --> 00:14:56.500
PETER MOSKOVITS: Sure,
thank you.

00:14:56.500 --> 00:14:57.780
My name is Peter Moskovits.

00:14:57.780 --> 00:14:59.590
And I'm here representing
Kaazing.

00:14:59.590 --> 00:15:05.540
Kaazing has been a sponsor of
SFHTML5 since its inception.

00:15:05.540 --> 00:15:08.280
Kaazing has a high-performance,
enterprise

00:15:08.280 --> 00:15:11.920
grade, very secure, very
scalable WebSocket server.

00:15:11.920 --> 00:15:14.440
We are a start-up down
in Mountain View.

00:15:14.440 --> 00:15:17.240
We have about 50 employees
at the moment.

00:15:17.240 --> 00:15:19.610
And we are hiring very
aggressively.

00:15:19.610 --> 00:15:23.970
So if you're interested in
evangelist roles, you're

00:15:23.970 --> 00:15:27.620
interested in engineering,
please come and find me.

00:15:27.620 --> 00:15:29.496
Thank you.

00:15:29.496 --> 00:15:31.430
PETER LUBBERS: All right.

00:15:31.430 --> 00:15:35.230
Ben, one of our new
sponsors Intel.

00:15:35.230 --> 00:15:37.686
Ben, do you have a couple of
words to say about Intel?

00:15:37.686 --> 00:15:38.140
BEN ODOM: Yeah.

00:15:38.140 --> 00:15:39.790
Hey, my name's Ben Odom.

00:15:39.790 --> 00:15:43.760
I'd just like to talk a little
bit about our new XDK NEW,

00:15:43.760 --> 00:15:46.650
integrated development
environment for HTML5--

00:15:46.650 --> 00:15:50.640
totally redesigned, browser
independent, works in Mac,

00:15:50.640 --> 00:15:55.220
Linux, Windows, totally free,
has brackets integrated.

00:15:55.220 --> 00:15:56.920
We use Cordova 2.9.

00:15:56.920 --> 00:16:00.170
It allows you to publish to
pretty much every platform out

00:16:00.170 --> 00:16:04.940
there, Windows, Android, pick
your favorite stores.

00:16:04.940 --> 00:16:06.270
You can also do web apps.

00:16:06.270 --> 00:16:08.730
So there's some cards over there
to tell you where to get

00:16:08.730 --> 00:16:12.470
it-- software.intel.com/html5.

00:16:12.470 --> 00:16:13.700
Take a look.

00:16:13.700 --> 00:16:15.070
Give us some feedback
in the forums.

00:16:15.070 --> 00:16:16.520
And we appreciate it.

00:16:16.520 --> 00:16:18.350
Thank you.

00:16:18.350 --> 00:16:19.193
PETER LUBBERS: Thanks, man.

00:16:19.193 --> 00:16:21.410
[APPLAUSE]

00:16:21.410 --> 00:16:23.380
PETER LUBBERS: All right, so
we have Vitamin T here, a

00:16:23.380 --> 00:16:25.820
special sponsor for this
particular event.

00:16:25.820 --> 00:16:27.245
Want to say a couple of words?

00:16:27.245 --> 00:16:28.195
GLORIANNE: Thank you.

00:16:28.195 --> 00:16:30.095
PETER LUBBERS: We have a pretty
long break, as well.

00:16:30.095 --> 00:16:33.430
So you can meet up with
the sponsors then.

00:16:33.430 --> 00:16:34.060
GLORIANNE: Hi.

00:16:34.060 --> 00:16:34.690
I'm Glorianne.

00:16:34.690 --> 00:16:36.490
And this is Ariel.

00:16:36.490 --> 00:16:40.570
We are here from Vitamin T.
So Vitamin T is a creative

00:16:40.570 --> 00:16:41.500
staffing agency.

00:16:41.500 --> 00:16:45.450
We're a division of Aquent, our
parent company, which is

00:16:45.450 --> 00:16:47.930
the global leader in
creative staffing.

00:16:47.930 --> 00:16:49.390
So what do we do?

00:16:49.390 --> 00:16:51.330
We help people like
you find jobs--

00:16:51.330 --> 00:16:54.550
front-end developers, visual
designers, UX designers.

00:16:54.550 --> 00:16:56.990
It could be temp to perm,
freelance, full-time,

00:16:56.990 --> 00:16:59.090
contract, remote, off-site,
whatever.

00:16:59.090 --> 00:17:00.530
You name it, we can help.

00:17:00.530 --> 00:17:03.970
So if you're on the market, or
if you have friends who are

00:17:03.970 --> 00:17:05.660
looking, please come
and find us.

00:17:05.660 --> 00:17:09.210
We're in the back right next
to the registration table.

00:17:09.210 --> 00:17:12.200
And also, a little surprise,
we have a giveaway, too.

00:17:12.200 --> 00:17:15.020
We're going to be raffling off
this awesome GoPro camera.

00:17:15.020 --> 00:17:17.200
So please, stop by.

00:17:17.200 --> 00:17:18.240
Drop of your business card.

00:17:18.240 --> 00:17:20.109
If you don't have one,
you can just put your

00:17:20.109 --> 00:17:20.960
name on one of ours.

00:17:20.960 --> 00:17:23.998
And we'll give it away
at the very end.

00:17:23.998 --> 00:17:25.438
OK, thanks so much.

00:17:25.438 --> 00:17:26.434
PETER LUBBERS: Thank
you, Glorianne.

00:17:26.434 --> 00:17:27.430
[APPLAUSE]

00:17:27.430 --> 00:17:29.640
PETER LUBBERS: All right.

00:17:29.640 --> 00:17:32.870
One of our special sponsor
for tonight is Dice.

00:17:32.870 --> 00:17:36.740
And I don't know if you've seen
it, the Dice Tech Trek

00:17:36.740 --> 00:17:37.820
bus is back in town.

00:17:37.820 --> 00:17:39.320
That looks like this.

00:17:39.320 --> 00:17:42.130
One of our members won this at
a previous event and had a

00:17:42.130 --> 00:17:44.970
blast, basically, be taken all
through San Francisco.

00:17:44.970 --> 00:17:45.890
FEMALE SPEAKER: Yes,
that's right.

00:17:45.890 --> 00:17:46.710
PETER LUBBERS: Tell
us more about it.

00:17:46.710 --> 00:17:47.990
FEMALE SPEAKER: So with
dice.com, come and

00:17:47.990 --> 00:17:49.150
see us at our table.

00:17:49.150 --> 00:17:52.120
If you register with dice.com,
even if you're not looking for

00:17:52.120 --> 00:17:54.840
a job, there's all kinds of
great stuff on there.

00:17:54.840 --> 00:17:57.530
You can get a T-shirt You
can get Dice pens.

00:17:57.530 --> 00:17:58.980
But we're going to
be raffling off a

00:17:58.980 --> 00:18:00.350
couple of things tonight.

00:18:00.350 --> 00:18:02.950
One with you guys, and one over
here, back at our table.

00:18:02.950 --> 00:18:04.930
But we've got the
coffee maker.

00:18:04.930 --> 00:18:08.420
But the best thing is an
all-expense paid tour tomorrow

00:18:08.420 --> 00:18:10.780
night, for you and two
of your friends.

00:18:10.780 --> 00:18:12.830
And we're going to take
several winners.

00:18:12.830 --> 00:18:14.320
And we're going to
go to dinner, and

00:18:14.320 --> 00:18:15.230
dessert, and a bar.

00:18:15.230 --> 00:18:16.310
And we pay for the
whole thing.

00:18:16.310 --> 00:18:17.410
And the bus is amazing.

00:18:17.410 --> 00:18:19.210
It was Lenny Kravitz'
tour bus.

00:18:19.210 --> 00:18:20.480
Now, it's the Dice bus.

00:18:20.480 --> 00:18:23.010
So come check it out
on the way out.

00:18:23.010 --> 00:18:25.090
And we'll stay around for
a while afterwards.

00:18:25.090 --> 00:18:26.520
So you can register at
the table and go

00:18:26.520 --> 00:18:28.126
check out the bus.

00:18:28.126 --> 00:18:28.610
PETER LUBBERS: Thank you.

00:18:28.610 --> 00:18:29.548
All right.

00:18:29.548 --> 00:18:31.940
[APPLAUSE]

00:18:31.940 --> 00:18:32.360
PETER LUBBERS: All right.

00:18:32.360 --> 00:18:34.930
So hopefully, you all have
a raffle ticket.

00:18:34.930 --> 00:18:36.430
Because we have some great
prizes tonight.

00:18:36.430 --> 00:18:39.000
We have a Chromebook Pixel.

00:18:39.000 --> 00:18:40.800
Some of these sponsor prizes.

00:18:40.800 --> 00:18:43.270
We have wine from Grant-Eddie.

00:18:43.270 --> 00:18:44.720
There's actually two
raffles for that.

00:18:44.720 --> 00:18:46.470
There's a regular raffle,
wine prizes.

00:18:46.470 --> 00:18:50.390
If you want to increase your
chance for more wine, drop off

00:18:50.390 --> 00:18:53.270
you name for their
mailing list.

00:18:53.270 --> 00:18:56.370
And you get an additional
chance to win.

00:18:56.370 --> 00:19:07.080
All right, so I want to hand it
over for the first speaker.

00:19:07.080 --> 00:19:09.410
So I'm really excited
about the four

00:19:09.410 --> 00:19:11.410
speakers we have tonight.

00:19:11.410 --> 00:19:15.290
Actually, Jake and Paul came
all the way from London.

00:19:15.290 --> 00:19:16.900
And we said, wow,
this is great.

00:19:16.900 --> 00:19:18.090
You're here in town.

00:19:18.090 --> 00:19:19.830
Colt and Paul are
already here.

00:19:19.830 --> 00:19:23.300
Let's do a performance talk
with four speakers.

00:19:23.300 --> 00:19:24.970
And I'm really excited.

00:19:24.970 --> 00:19:26.945
The first speaker
is Colt McAnlis.

00:19:26.945 --> 00:19:29.520
He's a past speaker.

00:19:29.520 --> 00:19:32.270
He's one of our alumni.

00:19:32.270 --> 00:19:35.600
You know him from the Udacity
study group that

00:19:35.600 --> 00:19:36.820
we've hosted here.

00:19:36.820 --> 00:19:39.270
If you're not familiar with that
study group or if you're

00:19:39.270 --> 00:19:42.210
not familiar with the HTML5
game programming Udacity

00:19:42.210 --> 00:19:45.040
course, definitely
check that out.

00:19:45.040 --> 00:19:48.130
We did this eight-week study
group here, right in the

00:19:48.130 --> 00:19:49.550
Google office, actually.

00:19:49.550 --> 00:19:52.140
So I want to hand
it over to Colt.

00:19:52.140 --> 00:19:54.420
Colt is a developer advocate
at Google.

00:19:54.420 --> 00:19:56.930
He focuses primarily
on performance.

00:19:56.930 --> 00:20:01.462
And a round of applause
for Colt.

00:20:01.462 --> 00:20:01.958
[APPLAUSE]

00:20:01.958 --> 00:20:03.208
PETER LUBBERS: Need
me to get that?

00:20:06.295 --> 00:20:08.031
COLT MCANLIS: Can we switch over
my slides right there?

00:20:08.031 --> 00:20:09.810
Hey, real quick, everybody.

00:20:09.810 --> 00:20:12.920
You have no idea how hard it
is to plan one of these

00:20:12.920 --> 00:20:16.240
events, put it together with
all of us crazy people, as

00:20:16.240 --> 00:20:18.320
well as the catering
and the prizes.

00:20:18.320 --> 00:20:20.320
Peter Lubbers and Vanessa and
everybody involved with this

00:20:20.320 --> 00:20:21.220
meet-up had done
an amazing job.

00:20:21.220 --> 00:20:22.430
Can you give them a
round of applause

00:20:22.430 --> 00:20:23.391
for free beer, please?

00:20:23.391 --> 00:20:23.882
[APPLAUSE]

00:20:23.882 --> 00:20:26.828
COLT MCANLIS: Yeah.

00:20:26.828 --> 00:20:28.078
PETER LUBBERS: Thank you.

00:20:33.702 --> 00:20:35.666
[LAUGHTER]

00:20:35.666 --> 00:20:36.650
PETER LUBBERS: You
do have a mic on.

00:20:36.650 --> 00:20:37.440
COLT MCANLIS: Yeah,
I got a mic.

00:20:37.440 --> 00:20:38.710
How am I doing on
the live feed?

00:20:38.710 --> 00:20:40.901
MALE SPEAKER: Do you want the
podium mic or the handheld mic

00:20:40.901 --> 00:20:41.632
for the room?

00:20:41.632 --> 00:20:42.119
COLT MCANLIS: OK.

00:20:42.119 --> 00:20:43.100
PETER LUBBERS: OK, right.

00:20:43.100 --> 00:20:43.510
COLT MCANLIS: How's that?

00:20:43.510 --> 00:20:44.050
MALE SPEAKER: We'll all
just wave to you.

00:20:44.050 --> 00:20:45.682
COLT MCANLIS: Can you
hear me in the back?

00:20:45.682 --> 00:20:46.090
AUDIENCE: No.

00:20:46.090 --> 00:20:46.760
COLT MCANLIS: No?

00:20:46.760 --> 00:20:48.775
How about now?

00:20:48.775 --> 00:20:51.170
Up more?

00:20:51.170 --> 00:20:53.580
PETER LUBBERS: One second,
we'll fix that.

00:20:53.580 --> 00:20:54.930
OK.

00:20:54.930 --> 00:20:55.220
COLT MCANLIS: We make

00:20:55.220 --> 00:20:56.755
self-driving cars, for serious.

00:20:56.755 --> 00:20:57.430
[LAUGHTER]

00:20:57.430 --> 00:20:58.230
COLT MCANLIS: We can do this.

00:20:58.230 --> 00:20:59.575
We can do this.

00:20:59.575 --> 00:21:00.640
All right, we good?

00:21:00.640 --> 00:21:01.280
In the back, up?

00:21:01.280 --> 00:21:02.780
Down?

00:21:02.780 --> 00:21:03.390
Middle?

00:21:03.390 --> 00:21:03.750
Down?

00:21:03.750 --> 00:21:04.130
Bald?

00:21:04.130 --> 00:21:05.050
Someone said, I'm bald.

00:21:05.050 --> 00:21:06.070
That's not cool, dude.

00:21:06.070 --> 00:21:06.670
I saw that.

00:21:06.670 --> 00:21:08.770
[LAUGHTER]

00:21:08.770 --> 00:21:10.970
COLT MCANLIS: All
right, we good?

00:21:10.970 --> 00:21:11.810
No, maybe, all right.

00:21:11.810 --> 00:21:12.645
I'm just going to
keep talking.

00:21:12.645 --> 00:21:13.570
How about that?

00:21:13.570 --> 00:21:15.630
PETER LUBBERS: Yes, Brian,
do we need to turn it up?

00:21:15.630 --> 00:21:16.920
MALE SPEAKER: As high
as you can get it.

00:21:16.920 --> 00:21:17.470
COLT MCANLIS: High
as we can get it.

00:21:17.470 --> 00:21:18.760
How about we do--

00:21:18.760 --> 00:21:19.660
PETER LUBBERS: Well, here.

00:21:19.660 --> 00:21:21.845
Maybe we can do--

00:21:21.845 --> 00:21:22.720
COLT MCANLIS: Maybe.

00:21:22.720 --> 00:21:24.931
Testing, testing, testing.

00:21:24.931 --> 00:21:26.610
Put this down.

00:21:26.610 --> 00:21:28.900
I don't know.

00:21:28.900 --> 00:21:29.950
How about I do the hand mic?

00:21:29.950 --> 00:21:31.810
How about I do that?

00:21:31.810 --> 00:21:34.110
How's this?

00:21:34.110 --> 00:21:35.256
Is this better?

00:21:35.256 --> 00:21:35.732
AUDIENCE: Yeah.

00:21:35.732 --> 00:21:37.460
COLT MCANLIS: How come when you
get a mic in your hand and

00:21:37.460 --> 00:21:39.020
you're in front of people,
you just feel sexy?

00:21:39.020 --> 00:21:40.170
[LAUGHTER]

00:21:40.170 --> 00:21:43.050
COLT MCANLIS: You feel like you
want to talk, talk to you.

00:21:43.050 --> 00:21:46.580
I feel your pain, right?

00:21:46.580 --> 00:21:48.520
If there's anything I could do
to entertain a crowd while

00:21:48.520 --> 00:21:50.910
technical problems
are going on.

00:21:50.910 --> 00:21:51.530
All right, my turn.

00:21:51.530 --> 00:21:52.770
Fantastic.

00:21:52.770 --> 00:21:53.300
Hello, everyone.

00:21:53.300 --> 00:21:54.970
My name is Colt McAnlis.

00:21:54.970 --> 00:21:58.160
I am the team lead for the
performance section of Chrome

00:21:58.160 --> 00:21:59.390
Developer Relations.

00:21:59.390 --> 00:22:01.680
And tonight, I want to talk
to you about the joys of

00:22:01.680 --> 00:22:03.230
static-memory JavaScript.

00:22:03.230 --> 00:22:08.000
Now, I'm going to let you know
that I gave a great talk at

00:22:08.000 --> 00:22:10.690
the HTML5 DevCon earlier
this year in April.

00:22:10.690 --> 00:22:13.520
And I had a little section in
my talk about static-memory

00:22:13.520 --> 00:22:13.990
JavaScript.

00:22:13.990 --> 00:22:17.010
And bar none, the most questions
I got was about

00:22:17.010 --> 00:22:18.320
static-memory JavaScript.

00:22:18.320 --> 00:22:20.590
And so I actually went back,
and I actually wrote this

00:22:20.590 --> 00:22:22.110
presentation a couple
months ago.

00:22:22.110 --> 00:22:23.290
And I was very happy that Peter

00:22:23.290 --> 00:22:24.990
allowed us to do it tonight.

00:22:24.990 --> 00:22:26.110
But it was really interesting.

00:22:26.110 --> 00:22:30.190
Because when we tried to get
this thing together, really it

00:22:30.190 --> 00:22:31.650
was a one-off shot, right?

00:22:31.650 --> 00:22:34.810
We had to get the guys from
Europe in town, and they only

00:22:34.810 --> 00:22:36.130
had availability for a window.

00:22:36.130 --> 00:22:38.340
And then we had to figure out
what day of the week we had

00:22:38.340 --> 00:22:41.350
availability for Google's
facilities, and catering, and

00:22:41.350 --> 00:22:42.300
all this other crazy stuff.

00:22:42.300 --> 00:22:45.410
And it was the most random shot
in the dark for us to end

00:22:45.410 --> 00:22:48.820
up on September 19.

00:22:48.820 --> 00:22:52.070
Now, I'm in a room
full of nerds.

00:22:52.070 --> 00:22:54.790
Does anyone know what
September 19 is?

00:22:54.790 --> 00:22:56.830
AUDIENCE: Aarrr!

00:22:56.830 --> 00:22:58.160
COLT MCANLIS: Yaarrr!

00:22:58.160 --> 00:23:00.260
AUDIENCE: Aarrr!

00:23:00.260 --> 00:23:03.890
COLT MCANLIS: Now, I'm
a very simple man.

00:23:06.810 --> 00:23:09.410
And I had to stand in the mirror
a couple days ago.

00:23:09.410 --> 00:23:13.022
And I had to ask myself, how
much of a man I was.

00:23:13.022 --> 00:23:17.950
If I could take this opportunity
to give a talk on

00:23:17.950 --> 00:23:21.350
the most random shot day to be
able to give a talk in front

00:23:21.350 --> 00:23:24.190
of a room full of my fellow
nerds and actually do the

00:23:24.190 --> 00:23:26.850
entire thing as a pirate.

00:23:26.850 --> 00:23:27.752
[LAUGHTER]

00:23:27.752 --> 00:23:29.560
AUDIENCE: Aarrr!

00:23:29.560 --> 00:23:31.100
COLT MCANLIS: My wife didn't
believe this was possible.

00:23:31.100 --> 00:23:36.060
I showed it to her on Google,
that this was a thing.

00:23:36.060 --> 00:23:39.710
And so, I'm going to ask you,
tonight, can we do this?

00:23:39.710 --> 00:23:41.790
AUDIENCE: Aarrr!

00:23:41.790 --> 00:23:44.150
COLT MCANLIS: Listen, ye
bilge rats, I'm asking

00:23:44.150 --> 00:23:45.910
ye, can we do this?

00:23:45.910 --> 00:23:47.000
AUDIENCE: Aye.

00:23:47.000 --> 00:23:47.760
COLT MCANLIS: One more time.

00:23:47.760 --> 00:23:49.000
We've been givin'
ye free booze.

00:23:49.000 --> 00:23:50.690
Give it to me again!

00:23:50.690 --> 00:23:51.530
AUDIENCE: Aarrr!

00:23:51.530 --> 00:23:51.950
COLT MCANLIS: Aarrr!

00:23:51.950 --> 00:23:54.990
Now, that's the crew I be
lookin' to have tonight.

00:23:54.990 --> 00:23:56.450
Aye.

00:23:56.450 --> 00:23:59.715
Now, tonight, we be talkin'
about one thing in common.

00:23:59.715 --> 00:24:01.980
We be slay'n the
waste monster.

00:24:01.980 --> 00:24:04.650
It's vile tentacles be keepin'
your applications

00:24:04.650 --> 00:24:07.480
from going too fast.

00:24:07.480 --> 00:24:08.740
I lost me leg and
got a new one.

00:24:08.740 --> 00:24:11.990
That's why I hate it.

00:24:11.990 --> 00:24:13.110
My name is Captain MainRoach.

00:24:13.110 --> 00:24:15.980
And I'm here, not to
save your bodies.

00:24:15.980 --> 00:24:17.840
Because the monster
be takin' those.

00:24:17.840 --> 00:24:18.845
I'm here for your souls.

00:24:18.845 --> 00:24:20.390
Well, the application souls.

00:24:20.390 --> 00:24:21.240
I really don't care about you.

00:24:21.240 --> 00:24:22.550
But we need a refund on--

00:24:22.550 --> 00:24:25.750
I'll get to me point.

00:24:25.750 --> 00:24:28.410
If ye be hearin' anything from
Captain MainRoach tonight that

00:24:28.410 --> 00:24:30.680
ye want to be tweetin',
make sure you be

00:24:30.680 --> 00:24:32.880
usin' the right hashtags.

00:24:32.880 --> 00:24:34.430
Because we had those
back in the day.

00:24:34.430 --> 00:24:35.540
[LAUGHTER]

00:24:35.540 --> 00:24:37.510
COLT MCANLIS: And also, be
making sure that ye visit our

00:24:37.510 --> 00:24:39.880
website performance
group on Google+.

00:24:39.880 --> 00:24:42.690
It be a great place for
a bunch of mootin--

00:24:42.690 --> 00:24:43.650
mootineers?

00:24:43.650 --> 00:24:44.735
That came out wrong.

00:24:44.735 --> 00:24:46.360
All right, this is a little
well rehearsed.

00:24:46.360 --> 00:24:47.560
Make sure ye visit it.

00:24:47.560 --> 00:24:51.596
Sign up at goo.gl/webperf.

00:24:51.596 --> 00:24:54.130
Now, listen here, ye mindless
yellow-bellied dogs.

00:24:54.130 --> 00:24:57.720
I'm not here to listen to wallow
and wane about whether

00:24:57.720 --> 00:25:00.720
or not ye like the JavaScript
garbage collector.

00:25:00.720 --> 00:25:02.790
I'm here to tell you that
it be a vile beast.

00:25:02.790 --> 00:25:04.210
It be takin' everything
from ye.

00:25:04.210 --> 00:25:07.240
Because as it doesn't it's evil
task, it's going to be

00:25:07.240 --> 00:25:09.490
takin' away a little bit
of your frame rate

00:25:09.490 --> 00:25:11.880
every single time.

00:25:11.880 --> 00:25:14.140
And I'm not here to
debate yer dogma.

00:25:14.140 --> 00:25:16.550
I dunna' care what
gods you live to.

00:25:16.550 --> 00:25:20.640
Be that of manage memory, or
static memory, or dynamic,

00:25:20.640 --> 00:25:21.540
anything else.

00:25:21.540 --> 00:25:23.360
I'm here to worship
one god alone.

00:25:23.360 --> 00:25:25.690
And that be the one of
application speed.

00:25:25.690 --> 00:25:26.760
Can ye say, aarrr?

00:25:26.760 --> 00:25:27.672
AUDIENCE: Aarrr!

00:25:27.672 --> 00:25:29.040
COLT MCANLIS: One more
time, aarrr!

00:25:29.040 --> 00:25:29.500
AUDIENCE: Aarrr!

00:25:29.500 --> 00:25:31.085
COLT MCANLIS: Aye, application
speed.

00:25:34.530 --> 00:25:35.900
So stow yer noise, tonight.

00:25:35.900 --> 00:25:38.270
I won't be debating whether or
not JavaScript's the best

00:25:38.270 --> 00:25:39.700
language or the worst
language.

00:25:39.700 --> 00:25:41.900
But I'll be telling ye how to
make your applications fast.

00:25:41.900 --> 00:25:43.150
Because that's why
you're here.

00:25:43.150 --> 00:25:43.900
Aye?

00:25:43.900 --> 00:25:44.880
AUDIENCE: Aye.

00:25:44.880 --> 00:25:45.713
COLT MCANLIS: Aye.

00:25:45.713 --> 00:25:46.660
Yer learnin'.

00:25:46.660 --> 00:25:49.280
That's good.

00:25:49.280 --> 00:25:50.600
So I'll tell ye the trouble
with memory.

00:25:50.600 --> 00:25:53.550
Now, many of ye may not be
versed in the wild seas of

00:25:53.550 --> 00:25:55.770
sailing around memory
problems.

00:25:55.770 --> 00:25:57.480
But I'll tell ye,
I've been there.

00:25:57.480 --> 00:25:59.990
I lost me hair, and me family.

00:25:59.990 --> 00:26:01.710
It be a vile place to be.

00:26:01.710 --> 00:26:03.500
From the depths of hell,
memory management

00:26:03.500 --> 00:26:04.570
come and it take ye.

00:26:04.570 --> 00:26:06.090
It take everything
in yer life.

00:26:06.090 --> 00:26:09.120
I'm here, but a husk of a man,
trying to make sure ye do not

00:26:09.120 --> 00:26:10.560
follow the same path.

00:26:10.560 --> 00:26:12.580
Let's tell ye why.

00:26:12.580 --> 00:26:15.260
So when yer out sailing with yer
buccaneers, having a good

00:26:15.260 --> 00:26:18.110
time writing yer web
applications, sooner or later,

00:26:18.110 --> 00:26:20.011
one of ye's goin'
to drop dead.

00:26:20.011 --> 00:26:23.700
[LAUGHTER]

00:26:23.700 --> 00:26:25.390
COLT MCANLIS: In yer web
application, one of them will

00:26:25.390 --> 00:26:28.140
be running around, allocating
memory or adjustin' the DOM.

00:26:28.140 --> 00:26:30.340
And sooner or later, it'll have
one too many pints of

00:26:30.340 --> 00:26:31.850
beer and die.

00:26:31.850 --> 00:26:32.560
We're pirates.

00:26:32.560 --> 00:26:34.150
It happens.

00:26:34.150 --> 00:26:35.140
But, now, I tell ye this.

00:26:35.140 --> 00:26:36.910
It's corpse won't go away.

00:26:36.910 --> 00:26:39.690
No, your crew have better things
to do than remove it.

00:26:39.690 --> 00:26:42.630
Instead, you leave it on the
ground, festering, when the

00:26:42.630 --> 00:26:45.250
rats come and pick
at its bones.

00:26:45.250 --> 00:26:47.340
And the gnats come and lay
in its eye sockets.

00:26:47.340 --> 00:26:50.230
And the gulls come and
feast on its flesh.

00:26:50.230 --> 00:26:54.480
And only then, only then when
the monster gets a whiff of

00:26:54.480 --> 00:26:56.870
the piles of corpses that you
been leavin' around in yer

00:26:56.870 --> 00:27:00.170
application, only then, will it
summon it's bulbous arms to

00:27:00.170 --> 00:27:01.420
yer poop deck.

00:27:03.200 --> 00:27:04.390
Poop deck joke, that's good?

00:27:04.390 --> 00:27:04.730
Poop deck?

00:27:04.730 --> 00:27:05.650
More poop deck jokes?

00:27:05.650 --> 00:27:06.900
OK.

00:27:08.530 --> 00:27:11.520
And when this beast come and
find yer vessel, it dunna'

00:27:11.520 --> 00:27:14.440
know who's living
and who is dead.

00:27:14.440 --> 00:27:18.370
It's a blind beast filled
with hate and rage.

00:27:18.370 --> 00:27:20.960
It'll bring its tentacles
up aboard yer vessel.

00:27:20.960 --> 00:27:23.780
And it'll sniff every one of yer
crew to figure out which

00:27:23.780 --> 00:27:26.770
one be inactive, and which one
still be on the stack, ready

00:27:26.770 --> 00:27:28.370
to be used again at
a future date.

00:27:28.370 --> 00:27:31.760
[LAUGHTER]

00:27:31.760 --> 00:27:34.770
And when it finds its evil prey
that it be eatin' on,

00:27:34.770 --> 00:27:36.240
it'll take it away from ye.

00:27:36.240 --> 00:27:38.780
And only then, will yer dinghy
be operating at peak

00:27:38.780 --> 00:27:41.880
efficiency, now that all the
corpses have been hauled away

00:27:41.880 --> 00:27:45.820
on your behalf, ye
lazy captain.

00:27:45.820 --> 00:27:47.140
But I tell ye this.

00:27:47.140 --> 00:27:50.160
The beast takes away as
much as it giveth.

00:27:50.160 --> 00:27:52.420
Because yer schooner be goin'
fast on its mission.

00:27:52.420 --> 00:27:55.560
It be hittin' 60 knots
per second.

00:27:55.560 --> 00:27:59.910
Everyone knows, that's the
magical speed of a boat.

00:27:59.910 --> 00:28:02.480
And as it be goin' at 60 knots
per second, all of a sudden,

00:28:02.480 --> 00:28:04.980
those piles of corpses
will rise high.

00:28:04.980 --> 00:28:05.930
And you'll hear it.

00:28:05.930 --> 00:28:09.060
You'll hear the vile beast
comin' from afar.

00:28:09.060 --> 00:28:12.650
Its hate, and its dread, and
it's demon-filled life coming

00:28:12.650 --> 00:28:15.192
aboard yer vessel, and
it'll stop ye.

00:28:15.192 --> 00:28:19.380
And it'll take away those knots,
and stop ye to zero.

00:28:19.380 --> 00:28:21.740
And all of yer men aboard yer
ship will stand there idly and

00:28:21.740 --> 00:28:24.640
wait for it to do its
demon-filled task.

00:28:24.640 --> 00:28:27.120
Meanwhile, your users are
standing there, asking why yer

00:28:27.120 --> 00:28:28.570
ship is not moving.

00:28:28.570 --> 00:28:28.960
[LAUGHTER]

00:28:28.960 --> 00:28:31.010
COLT MCANLIS: And ye can't be
like, it's the monster.

00:28:31.010 --> 00:28:31.670
It's not me.

00:28:31.670 --> 00:28:33.230
Because they blame
the captain.

00:28:33.230 --> 00:28:34.040
And then you get fired.

00:28:34.040 --> 00:28:36.070
And ye have to talk like
a pirate all day.

00:28:36.070 --> 00:28:37.002
[LAUGHTER]

00:28:37.002 --> 00:28:39.570
COLT MCANLIS: And when it's done
with it's deadly task,

00:28:39.570 --> 00:28:41.820
it'll let ye on yer way,
only to catch ye,

00:28:41.820 --> 00:28:43.390
again, in the future.

00:28:43.390 --> 00:28:47.070
This be the cycle that it lives
and breeds off of, your

00:28:47.070 --> 00:28:50.180
reluctancy to allow the corpses
to lay around because

00:28:50.180 --> 00:28:55.000
you've got better things
to do, like CSS.

00:28:55.000 --> 00:28:59.000
Aarrr, I be a venture pirate
from back in the days of C++,

00:28:59.000 --> 00:29:02.550
where a man had to manage his
own memory, and his stack

00:29:02.550 --> 00:29:05.370
overflows, and threading
problems, and kernel issues.

00:29:05.370 --> 00:29:07.460
But that be a simpler
time then.

00:29:07.460 --> 00:29:10.080
We didn't really have
user interfaces.

00:29:10.080 --> 00:29:13.480
It was mostly command prompt.

00:29:13.480 --> 00:29:15.750
Moving on.

00:29:15.750 --> 00:29:18.650
what ye be needin' to know, is
that this monster can strike

00:29:18.650 --> 00:29:21.380
at any time, any time
it chooses.

00:29:21.380 --> 00:29:23.380
It doesn't matter what you
think it should be doin'.

00:29:23.380 --> 00:29:25.530
It's going to do what
it wants, be it a

00:29:25.530 --> 00:29:29.320
CallbackHandler, or when the
frame is updating, any time

00:29:29.320 --> 00:29:32.630
your JavaScript-style dinghy
be floatin' on the water,

00:29:32.630 --> 00:29:35.210
it'll rear its ugly head
as it sees fit.

00:29:35.210 --> 00:29:37.270
And you should know that the
most important thing about

00:29:37.270 --> 00:29:39.580
your vessel is that it
stays constant at

00:29:39.580 --> 00:29:41.960
60 knots per second.

00:29:41.960 --> 00:29:43.850
It doesn't care what ye want.

00:29:43.850 --> 00:29:47.970
It cares for the flesh
it's come to claim.

00:29:47.970 --> 00:29:48.980
Aye?

00:29:48.980 --> 00:29:49.900
AUDIENCE: Aye.

00:29:49.900 --> 00:29:51.300
COLT MCANLIS: I see some
scared in the house.

00:29:51.300 --> 00:29:53.155
They're like, where is
he going with this?

00:29:53.155 --> 00:29:54.970
Are we talking about
memory or fishing?

00:29:54.970 --> 00:29:56.240
I'm really unclear right now?

00:29:56.240 --> 00:29:57.380
[LAUGHTER]

00:29:57.380 --> 00:29:57.540
COLT MCANLIS: Don't worry.

00:29:57.540 --> 00:29:58.790
It'll come down.

00:30:01.200 --> 00:30:03.345
Now, here is a great
chart, lads.

00:30:03.345 --> 00:30:06.120
You yellow-bellied sea betters
may be lookin' at me and

00:30:06.120 --> 00:30:08.460
goin', listen to
this angry man!

00:30:08.460 --> 00:30:10.630
He be thinkin' garbage
collections a bad thing.

00:30:10.630 --> 00:30:11.740
I'm a friend with that beast.

00:30:11.740 --> 00:30:13.670
We go drinkin' on
Friday nights.

00:30:13.670 --> 00:30:14.420
No!

00:30:14.420 --> 00:30:16.320
It is not yer friend.

00:30:16.320 --> 00:30:20.070
It's just usin' ye for free
drinks on Friday nights.

00:30:20.070 --> 00:30:21.250
I've been there once.

00:30:21.250 --> 00:30:22.460
We'll talk about that later.

00:30:22.460 --> 00:30:25.470
If ye dunna' get nothin' from
me diatribe this evening, I

00:30:25.470 --> 00:30:27.320
want ye to be rememberin'
this one.

00:30:27.320 --> 00:30:30.840
This is a map built by the
most evil of satanic of

00:30:30.840 --> 00:30:34.120
scientists that follow
this beast around.

00:30:34.120 --> 00:30:35.920
And what ye be lookin'
at here is two

00:30:35.920 --> 00:30:38.410
distinct groups of lines.

00:30:38.410 --> 00:30:42.015
The first group is done by the
responsible captains who send

00:30:42.015 --> 00:30:45.700
their crew to the evil task of
managing the dead themselves.

00:30:45.700 --> 00:30:48.450
Now, aye, it does take a little
bit more memory for the

00:30:48.450 --> 00:30:51.260
captain to ensure that the crew
is doing the right thing,

00:30:51.260 --> 00:30:53.910
tossing its shipmates
overboard.

00:30:53.910 --> 00:30:57.090
But you can see on the other
side is the one where the

00:30:57.090 --> 00:30:59.350
kraken, the evil corpse
monster be doin'

00:30:59.350 --> 00:31:00.640
the work for ye.

00:31:00.640 --> 00:31:02.270
Now, these lines mean
nothin' right now.

00:31:02.270 --> 00:31:04.510
But I'll tell ye what
they do show.

00:31:04.510 --> 00:31:07.740
On the bottom line here these
numbers chart out how much

00:31:07.740 --> 00:31:10.230
memory the system has
relative to the

00:31:10.230 --> 00:31:11.340
application it be runnin'.

00:31:11.340 --> 00:31:15.270
Oh, for yer nautical folk, how
big the sea is compared to the

00:31:15.270 --> 00:31:17.746
size of your ship, aye?

00:31:17.746 --> 00:31:18.730
AUDIENCE: Aye.

00:31:18.730 --> 00:31:19.410
COLT MCANLIS: Aye?

00:31:19.410 --> 00:31:20.234
AUDIENCE: Aye!

00:31:20.234 --> 00:31:21.470
COLT MCANLIS: Aye!

00:31:21.470 --> 00:31:22.544
More beer, aye!

00:31:22.544 --> 00:31:24.520
[LAUGHTER]

00:31:24.520 --> 00:31:26.360
COLT MCANLIS: Now, what ye be
seein' here is three distinct

00:31:26.360 --> 00:31:28.350
areas that I wish to be pointin'
out this evenin'.

00:31:28.350 --> 00:31:32.170
Because you'll find the
treasure soon, heh?

00:31:32.170 --> 00:31:33.940
First, is ye see the bad zone.

00:31:33.940 --> 00:31:37.870
If yer memory is between two and
four times the size of yer

00:31:37.870 --> 00:31:39.760
vessel, ye be screwed.

00:31:39.760 --> 00:31:41.010
[MANIACAL LAUGH].

00:31:43.000 --> 00:31:44.580
You want to know why?

00:31:44.580 --> 00:31:48.130
Because this kraken beast,
this hate-filled, demon,

00:31:48.130 --> 00:31:51.400
bile-covered spawn monster
be larger than ye think.

00:31:51.400 --> 00:31:54.050
And when the body of water that
yer schooner be floatin'

00:31:54.050 --> 00:31:59.270
in be small, it has nowhere to
put its hefty load of lard.

00:31:59.270 --> 00:32:01.970
So it must put it upon
yer vessel, all the

00:32:01.970 --> 00:32:03.652
way on the poop deck.

00:32:03.652 --> 00:32:05.070
Ye asked for more
poop deck jokes.

00:32:05.070 --> 00:32:05.890
I'm going to give them to ye.

00:32:05.890 --> 00:32:06.880
You have to laugh now.

00:32:06.880 --> 00:32:09.860
[WEAK LAUGHTER]

00:32:09.860 --> 00:32:13.340
COLT MCANLIS: Yeah, a
pity laugh, right.

00:32:13.340 --> 00:32:15.260
Now, when ye end up in this
second region here, yer doin'

00:32:15.260 --> 00:32:15.910
a little bit better.

00:32:15.910 --> 00:32:18.970
You can see that four to six
times the size of your memory

00:32:18.970 --> 00:32:22.020
requirements are ye be about
average compared to what yer

00:32:22.020 --> 00:32:23.470
crew be doin' manually.

00:32:23.470 --> 00:32:26.840
This is about the sweet spot
on mobile devices today.

00:32:26.840 --> 00:32:29.710
These little devices that they
have that track all of yer

00:32:29.710 --> 00:32:32.740
movements as yer goin' about
eatin' yer food and

00:32:32.740 --> 00:32:35.760
plunderin', an' pillagin', and
all yer pirate ways, right?

00:32:35.760 --> 00:32:37.410
This is where ye be sittin'
with yer memory.

00:32:37.410 --> 00:32:40.190
But, unfortunately, that's not
where the sweet spot be for

00:32:40.190 --> 00:32:41.060
yer vessel.

00:32:41.060 --> 00:32:45.600
Nay, yer ship needs to be in a
wide-open ocean between six

00:32:45.600 --> 00:32:47.630
and ten times the amount
of memory that yer

00:32:47.630 --> 00:32:48.720
application be needin'.

00:32:48.720 --> 00:32:52.890
And it's only then when ye start
to see the hate from

00:32:52.890 --> 00:32:56.320
this vile corpse monster
actually be mitigated.

00:32:56.320 --> 00:33:00.620
Because the water is able to
hold its massive rolls of

00:33:00.620 --> 00:33:05.168
flesh-eating, corpse-filling
bile, drinking--

00:33:05.168 --> 00:33:06.418
fat.

00:33:08.880 --> 00:33:12.180
Unless yer here,
ye be screwed.

00:33:12.180 --> 00:33:14.890
So make sure that yer JavaScript
class schooner

00:33:14.890 --> 00:33:17.390
knows what the size of the
water it be goin' in.

00:33:17.390 --> 00:33:19.000
If ye remember nothing,
remember this

00:33:19.000 --> 00:33:20.830
graph tonight, aarrr.

00:33:20.830 --> 00:33:22.060
AUDIENCE: Aarrr.

00:33:22.060 --> 00:33:23.970
COLT MCANLIS: Now, I will tell
ye, there be one vessel on the

00:33:23.970 --> 00:33:26.470
seven seas that seems
to escape the corpse

00:33:26.470 --> 00:33:27.800
monster many times.

00:33:27.800 --> 00:33:30.250
And in fact, many have said
that it be the fastest

00:33:30.250 --> 00:33:32.780
JavaScript vessel in
all the world.

00:33:32.780 --> 00:33:34.610
It's known as the
SS Emscripten.

00:33:34.610 --> 00:33:36.673
Do ye know the vessel?

00:33:36.673 --> 00:33:37.500
AUDIENCE: Aye.

00:33:37.500 --> 00:33:38.710
COLT MCANLIS: I said, do
ye know the vessel?

00:33:38.710 --> 00:33:39.710
AUDIENCE: Aye!

00:33:39.710 --> 00:33:40.780
COLT MCANLIS: Aye.

00:33:40.780 --> 00:33:42.810
You want to know why
it's so fast?

00:33:42.810 --> 00:33:44.951
Because it's captain
is damned.

00:33:44.951 --> 00:33:47.660
Aye.

00:33:47.660 --> 00:33:49.040
Everyone really confused
right now.

00:33:49.040 --> 00:33:52.220
Is this an open source boat
that we're talking about?

00:33:52.220 --> 00:33:54.100
Because that means lots
of people are damned.

00:33:54.100 --> 00:33:55.006
[LAUGHTER]

00:33:55.006 --> 00:33:56.760
COLT MCANLIS: Open source
boat, that would be

00:33:56.760 --> 00:33:57.290
interesting.

00:33:57.290 --> 00:33:57.750
That's a new Kickstarter.

00:33:57.750 --> 00:33:58.455
Ha, ha.

00:33:58.455 --> 00:33:58.830
[LAUGHTER]

00:33:58.830 --> 00:34:00.080
COLT MCANLIS: Ya-har!

00:34:01.970 --> 00:34:04.180
And the reason its captain be
damned is because, ye know

00:34:04.180 --> 00:34:05.256
what he does?

00:34:05.256 --> 00:34:07.470
He doesn't let his crew die.

00:34:07.470 --> 00:34:10.670
Nay, when he sails from port,
the first evil action he be

00:34:10.670 --> 00:34:13.550
doin' is he slaughters
the lot of them.

00:34:13.550 --> 00:34:15.949
Slits their throats, standin' on
the deck and let the blood

00:34:15.949 --> 00:34:18.280
flow across the planks and
into the water, where the

00:34:18.280 --> 00:34:20.320
sharks be feastin'
and the gulls be

00:34:20.320 --> 00:34:22.150
squawkin' and nestin'.

00:34:22.150 --> 00:34:22.989
And ye know what he does?

00:34:22.989 --> 00:34:26.250
He brings a single shaman
on board with his deck.

00:34:26.250 --> 00:34:29.770
And that shaman doesn't let
these poor men die.

00:34:29.770 --> 00:34:33.620
Nay, he keeps them in some
tribal state of not-dead and

00:34:33.620 --> 00:34:34.760
not-livin'.

00:34:34.760 --> 00:34:38.239
Not dead enough for the corpse
monster to come aboard.

00:34:38.239 --> 00:34:42.830
He manages the dead objects
on his ship, yaarrr.

00:34:42.830 --> 00:34:44.332
Is anyone gettin' that yet?

00:34:44.332 --> 00:34:44.814
AUDIENCE: Aarrr.

00:34:44.814 --> 00:34:46.260
COLT MCANLIS: OK.

00:34:46.260 --> 00:34:48.759
And what he'll do is he'll
summon a corpse as he needs it

00:34:48.759 --> 00:34:51.120
and revive it and then send it
back to dead by slittin' its

00:34:51.120 --> 00:34:52.030
throat again.

00:34:52.030 --> 00:34:53.639
Aye, this be an evil captain.

00:34:53.639 --> 00:34:57.670
But what he does well is he
escapes the kraken monster

00:34:57.670 --> 00:34:58.520
once again.

00:34:58.520 --> 00:35:02.040
It can never seem to catch this
SS Emscripten, because it

00:35:02.040 --> 00:35:06.080
can never find it, because the
corpses never rot and ripen.

00:35:06.080 --> 00:35:09.360
You see, this evil bile-flowing,
covered with

00:35:09.360 --> 00:35:13.520
boils and rank and fester,
and alimony taking--

00:35:13.520 --> 00:35:14.470
umm, uh.

00:35:14.470 --> 00:35:17.200
[LAUGHTER]

00:35:17.200 --> 00:35:19.930
COLT MCANLIS: OK, so I feel I
should tell ye something.

00:35:19.930 --> 00:35:24.440
It is true, the monster and
I were once in love.

00:35:24.440 --> 00:35:27.570
Ye see, I was a young buccaneer
and hadn't seen much

00:35:27.570 --> 00:35:28.020
of the world.

00:35:28.020 --> 00:35:32.000
But, ye know, we grow, and we
change, and the monster and I

00:35:32.000 --> 00:35:33.300
parted ways.

00:35:33.300 --> 00:35:35.320
But we're not here to talk
about me tonight.

00:35:35.320 --> 00:35:39.840
But he does take half of me
doubloons every month.

00:35:39.840 --> 00:35:42.710
My job tonight, to be keepin'
ye away from the path I be

00:35:42.710 --> 00:35:45.540
takin' and teachin' ye how to
use the techniques of SS

00:35:45.540 --> 00:35:49.030
Emscripten to keep your
dinghy moving fast.

00:35:49.030 --> 00:35:52.330
So we'll start with your own
concept of a corpse pool.

00:35:52.330 --> 00:35:54.750
So when ye be gettin' yer mates
on your vessel, make

00:35:54.750 --> 00:35:56.250
sure to slaughter them thusly.

00:35:56.250 --> 00:35:57.960
Usually across the
neck works fine.

00:35:57.960 --> 00:36:00.100
Ye get any fancier than that,
it's just showing off.

00:36:00.100 --> 00:36:01.113
I mean, really, come on.

00:36:01.113 --> 00:36:01.820
We be pirates.

00:36:01.820 --> 00:36:03.340
We simple folk.

00:36:03.340 --> 00:36:06.140
Now, when ye need a task done
or ye need a crewman to

00:36:06.140 --> 00:36:08.490
achieve a goal for ye, the
best thing to be doin' is

00:36:08.490 --> 00:36:09.630
revivin' him.

00:36:09.630 --> 00:36:10.960
Use your dark magic.

00:36:10.960 --> 00:36:12.980
And what you'll need to be doin'
is ye need to remember

00:36:12.980 --> 00:36:15.110
that this corpse, it
has the memories.

00:36:15.110 --> 00:36:16.650
It remembers who
it used to be.

00:36:16.650 --> 00:36:18.980
So when you grab it off it's
corpse pool, ye need to give

00:36:18.980 --> 00:36:21.810
it new clothes and set its
properties so it cannot

00:36:21.810 --> 00:36:23.460
remember who it used
to be, and instead,

00:36:23.460 --> 00:36:25.320
assumes the goal ye want.

00:36:25.320 --> 00:36:28.810
And when ye have a
demon-summoned, dead-filled,

00:36:28.810 --> 00:36:32.120
evil corpse to do yer bidding,
you must usually make sure

00:36:32.120 --> 00:36:33.345
that it follows that path.

00:36:33.345 --> 00:36:36.000
And it does the most evil,
heinous thing that you can

00:36:36.000 --> 00:36:38.900
task it to, generally making
the world a worst place for

00:36:38.900 --> 00:36:40.155
common folk.

00:36:40.155 --> 00:36:43.550
[LAUGHTER]

00:36:43.550 --> 00:36:44.580
COLT MCANLIS: Take a second
to let that sink

00:36:44.580 --> 00:36:46.213
in, a zombie on SEPDAT.

00:36:46.213 --> 00:36:51.950
Yeah, that would get very
awkward very fast, yaarrr.

00:36:51.950 --> 00:36:55.330
And when yer done with it, much
like the SS Emscripten,

00:36:55.330 --> 00:36:57.130
ye slit its throat, and put it
back in the pool, and let it

00:36:57.130 --> 00:36:58.150
float away.

00:36:58.150 --> 00:37:00.310
Again, this will keep the kraken
monster from actually

00:37:00.310 --> 00:37:04.450
coming to board yer deck and
takin' away yer speed.

00:37:04.450 --> 00:37:07.570
And this is some hieroglyphs
from an ancient time.

00:37:07.570 --> 00:37:08.460
But I'll walk through
them anyway.

00:37:08.460 --> 00:37:10.110
Because I happen to speak it.

00:37:10.110 --> 00:37:12.790
So you can see that to use such
a thing as a corpse pool,

00:37:12.790 --> 00:37:15.090
the first thing you need to do
is actually grab a corpse and

00:37:15.090 --> 00:37:17.920
revive it, and then set it's
properties accordingly, like

00:37:17.920 --> 00:37:21.150
where it will spawn in
the universe, aarrr.

00:37:21.150 --> 00:37:21.570
Do a jig.

00:37:21.570 --> 00:37:22.310
Walk the plank.

00:37:22.310 --> 00:37:24.300
And then when yer done, slit its
throat, throw it back on

00:37:24.300 --> 00:37:26.340
the pool, and then make sure
that any clothes ye may have

00:37:26.340 --> 00:37:28.370
assigned to it be
cast overboard

00:37:28.370 --> 00:37:29.640
to Davy Jones' locker.

00:37:29.640 --> 00:37:31.810
He happens to sell things
out of the locker.

00:37:31.810 --> 00:37:32.285
That's why it's a locker.

00:37:32.285 --> 00:37:34.740
It's actually a second-hand
pirate store, see, aarrr.

00:37:34.740 --> 00:37:36.620
That's where we get most
of our clothes, aarrr.

00:37:39.610 --> 00:37:42.510
What'll happen is when you use
this sort of pattern of corpse

00:37:42.510 --> 00:37:45.600
pools or object pools, what
ye'll be seein' is that your

00:37:45.600 --> 00:37:47.540
memory will slowly
grow over time.

00:37:47.540 --> 00:37:49.490
It'll be ridin' a wave
that will never end.

00:37:49.490 --> 00:37:52.100
And yer ship may never
come back to shore.

00:37:52.100 --> 00:37:55.230
It'll just slowly
be increasing.

00:37:55.230 --> 00:37:57.750
Now, what ye'll notice, though,
is that ye be spendin'

00:37:57.750 --> 00:38:01.486
a lot of time in here, moving
between all these ranks.

00:38:01.486 --> 00:38:05.070
And it's worth notin' that under
the hood, JavaScript may

00:38:05.070 --> 00:38:07.560
be doin' something that ye not
be planning as captain.

00:38:07.560 --> 00:38:10.020
And as captain of your vessel,
you're in charge

00:38:10.020 --> 00:38:11.353
of its fate, aye?

00:38:11.353 --> 00:38:12.260
AUDIENCE: Aye.

00:38:12.260 --> 00:38:14.210
COLT MCANLIS: It's not in
charge of your fate.

00:38:14.210 --> 00:38:14.770
It's a boat.

00:38:14.770 --> 00:38:16.090
You're the captain, aye?

00:38:16.090 --> 00:38:16.590
AUDIENCE: Aye.

00:38:16.590 --> 00:38:18.660
COLT MCANLIS: So don't let
it do what you don't

00:38:18.660 --> 00:38:20.516
want it to do, aarrr.

00:38:20.516 --> 00:38:21.764
AUDIENCE: Aarrr.

00:38:21.764 --> 00:38:24.680
COLT MCANLIS: Do ye know under
the hood what happens when you

00:38:24.680 --> 00:38:28.230
have a pool of corpses and
ye add another one to it?

00:38:28.230 --> 00:38:31.395
Well, if ye've actually maxed
out the number of corpses and

00:38:31.395 --> 00:38:33.620
ye add a new one, you know
what yer boat be

00:38:33.620 --> 00:38:35.360
doin' behind yer back?

00:38:35.360 --> 00:38:38.690
It be creatin' a new pool of
corpses, double the size.

00:38:41.350 --> 00:38:43.640
That takes a lot of
extra memory.

00:38:43.640 --> 00:38:47.160
I don't know how to say
that in pirate better.

00:38:47.160 --> 00:38:48.180
That was a little failure.

00:38:48.180 --> 00:38:50.570
That's OK.

00:38:50.570 --> 00:38:53.520
We're doing this on
the fly, aarrr.

00:38:53.520 --> 00:38:55.470
Now, let's say ye consider
movin' forward again.

00:38:55.470 --> 00:38:57.480
And once again, ye get to the
point where instead of 200

00:38:57.480 --> 00:38:59.140
corpses, ye added yet another.

00:38:59.140 --> 00:39:02.690
And then ye have move again
to 200, to 400 corpses

00:39:02.690 --> 00:39:03.940
ye be moving to.

00:39:03.940 --> 00:39:06.640
Now, what is interesting about
this is that every time ye add

00:39:06.640 --> 00:39:09.680
a corpse to the pile, yer ship
have to go back to bay and

00:39:09.680 --> 00:39:10.960
make more room.

00:39:10.960 --> 00:39:13.660
Ye need to make changes to yer
hull to accommodate all the

00:39:13.660 --> 00:39:16.140
corpses ye be havin'
layin' around.

00:39:16.140 --> 00:39:17.800
But once yer hull has
been destroyed, you

00:39:17.800 --> 00:39:19.090
have to rebuild it.

00:39:19.090 --> 00:39:21.950
So you have to deallocate the
previous array in order to

00:39:21.950 --> 00:39:23.290
make room for the new one.

00:39:23.290 --> 00:39:26.150
This creates more waste for the
corpse monster to come and

00:39:26.150 --> 00:39:28.550
fester, and bleed, and
take away from ye.

00:39:28.550 --> 00:39:30.070
It'll be takin' yer
time, lads.

00:39:30.070 --> 00:39:31.710
It's not a good thing, aarrr.

00:39:31.710 --> 00:39:32.540
AUDIENCE: Aarrr.

00:39:32.540 --> 00:39:33.800
COLT MCANLIS: Aarrr, ye
gettin' bored now.

00:39:33.800 --> 00:39:34.800
Aarrr!

00:39:34.800 --> 00:39:35.680
AUDIENCE: Aarrr!

00:39:35.680 --> 00:39:39.010
COLT MCANLIS: Don't worry,
there'll be more booze soon.

00:39:39.010 --> 00:39:41.280
Really, what ye need to be
thinkin' ahead as the captain

00:39:41.280 --> 00:39:43.960
of yer ship, how many dead
corpses will I need to get

00:39:43.960 --> 00:39:44.880
this job done?

00:39:44.880 --> 00:39:47.270
Yaarrr, tell that
to yer manager.

00:39:47.270 --> 00:39:49.560
That be CEO-level thinking
there, yaarrr.

00:39:49.560 --> 00:39:51.100
[LAUGHTER]

00:39:51.100 --> 00:39:52.670
COLT MCANLIS: Yes, yaarrr,
ye see, we can ship a

00:39:52.670 --> 00:39:53.490
self-driving car.

00:39:53.490 --> 00:39:56.840
But how many corpses can
we fit it in, yaarrr?

00:39:56.840 --> 00:40:00.290
I guess that's a question ye
ask in Las Vegas, yaarrr.

00:40:00.290 --> 00:40:02.750
Some people got that.

00:40:02.750 --> 00:40:03.920
So what ye need to be
thinkin' of is how

00:40:03.920 --> 00:40:05.000
many corpses ye need.

00:40:05.000 --> 00:40:07.390
And instead of actually going
back to harbor many times, and

00:40:07.390 --> 00:40:09.840
rebuildin' yer ship, and getting
more corpses, ye need

00:40:09.840 --> 00:40:11.100
to think ahead and hire
the corpses and

00:40:11.100 --> 00:40:14.428
kill 'em ahead a time.

00:40:14.428 --> 00:40:17.020
And the question that you have,
as simple pirate folk

00:40:17.020 --> 00:40:19.680
who are very bad at math, is how
do ye determine the number

00:40:19.680 --> 00:40:21.890
of people ye'll need
for this evil task

00:40:21.890 --> 00:40:22.890
ye be settin' forward.

00:40:22.890 --> 00:40:25.120
And mostly how many knives will
ye need because they kind

00:40:25.120 --> 00:40:27.480
of dull over time.

00:40:27.480 --> 00:40:29.320
Now, the proper way to be doin'
this is an iterative

00:40:29.320 --> 00:40:31.200
testing loop.

00:40:31.200 --> 00:40:33.140
Again, that really didn't
translate to pirate.

00:40:33.140 --> 00:40:33.752
Just follow with me.

00:40:33.752 --> 00:40:35.260
It'll make sense in a minute.

00:40:35.260 --> 00:40:37.285
So as yer ship be goin' out, ye
need to be running tests.

00:40:37.285 --> 00:40:41.260
Ye need to run through what ye
think the average duration of

00:40:41.260 --> 00:40:42.480
your journey be.

00:40:42.480 --> 00:40:44.550
And ye need to be figurin' out
how many corpses ye be needin'

00:40:44.550 --> 00:40:45.860
over that time.

00:40:45.860 --> 00:40:47.750
And every time, you adjust,
and change,

00:40:47.750 --> 00:40:49.200
and rebuild yer ship.

00:40:49.200 --> 00:40:51.450
And as ye be doin' all this,
ye be rememberin'--

00:40:51.450 --> 00:40:55.390
or loggin' out-- what your
maximum number of corpses be,

00:40:55.390 --> 00:40:57.390
or yer average number
of corpses, or how

00:40:57.390 --> 00:40:58.760
many of them are bald.

00:40:58.760 --> 00:41:01.290
Then, ye be tellin' me because
then I'll be upset with ye.

00:41:01.290 --> 00:41:03.360
We're mostly discriminated
against, us bald pirates.

00:41:03.360 --> 00:41:04.590
We don't have the facial hair.

00:41:04.590 --> 00:41:08.490
And so, we can't go to all
the parties, yaarrr.

00:41:08.490 --> 00:41:10.260
Once ye average been done
through this process and ye

00:41:10.260 --> 00:41:12.610
remember how many corpses ye
may need for your final

00:41:12.610 --> 00:41:14.410
journey, only then
can you embark.

00:41:14.410 --> 00:41:16.320
And when ye do yer final
journey, ye'll know ahead of

00:41:16.320 --> 00:41:18.830
time how many objects to
reference and keep and how

00:41:18.830 --> 00:41:20.180
many corpses to slay.

00:41:20.180 --> 00:41:22.445
And what we'll end up seein'
is that yer memory profile

00:41:22.445 --> 00:41:25.376
will look a little bit more
stair-like, yaarrr.

00:41:25.376 --> 00:41:26.070
AUDIENCE: Yaarrr.

00:41:26.070 --> 00:41:26.605
COLT MCANLIS: Yaarrr.

00:41:26.605 --> 00:41:30.190
And the number of corpses ye
need will statically decrease.

00:41:30.190 --> 00:41:33.830
And ye need not go back to
the harbor so many times.

00:41:33.830 --> 00:41:35.990
That means ye stay on the water
longer, and ye stay

00:41:35.990 --> 00:41:38.600
faster more often, yaarrr.

00:41:38.600 --> 00:41:38.990
AUDIENCE: Yaarrr.

00:41:38.990 --> 00:41:40.410
COLT MCANLIS: The wind
in yer sails be the

00:41:40.410 --> 00:41:42.761
best one about, aye.

00:41:42.761 --> 00:41:44.870
AUDIENCE: Aye.

00:41:44.870 --> 00:41:47.100
COLT MCANLIS: Now, sooner or
later yer goin' to need to

00:41:47.100 --> 00:41:49.880
slit yet another throat, even
though you've pre-allocated

00:41:49.880 --> 00:41:51.010
yer corpses.

00:41:51.010 --> 00:41:52.890
And when ye do this, ye need to
be thinking back about what

00:41:52.890 --> 00:41:54.605
yer ship be doin' without
your knowledge.

00:41:54.605 --> 00:41:56.490
Ah ha, ha.

00:41:56.490 --> 00:42:00.520
Will ye let it go ahead and
double the arrays every time?

00:42:00.520 --> 00:42:00.770
[INTERPOSING VOICES]

00:42:00.770 --> 00:42:01.020
AUDIENCE: Aarrr.

00:42:01.020 --> 00:42:01.520
AUDIENCE:No.

00:42:01.520 --> 00:42:02.020
AUDIENCE: Yaarrr?

00:42:02.020 --> 00:42:03.520
[LAUGHTER]

00:42:03.520 --> 00:42:05.240
COLT MCANLIS: That was the
most awesome response.

00:42:05.240 --> 00:42:06.430
Yaarrr?

00:42:06.430 --> 00:42:07.500
[LAUGHTER]

00:42:07.500 --> 00:42:08.120
COLT MCANLIS: Naarrr?

00:42:08.120 --> 00:42:08.510
[LAUGHTER]

00:42:08.510 --> 00:42:09.604
COLT MCANLIS: Nay?

00:42:09.604 --> 00:42:10.006
AUDIENCE: Nay.

00:42:10.006 --> 00:42:12.410
COLT MCANLIS: The best was I saw
one guy over here look at

00:42:12.410 --> 00:42:14.630
his buddy to go, yar--
nay-- nar-- no?

00:42:14.630 --> 00:42:15.065
[LAUGHTER]

00:42:15.065 --> 00:42:16.500
COLT MCANLIS: What if
we just say, no.

00:42:16.500 --> 00:42:18.200
You think he'll point us out?

00:42:18.200 --> 00:42:18.660
Quit talkin'.

00:42:18.660 --> 00:42:21.520
He's lookin' at us.

00:42:21.520 --> 00:42:22.330
The answer is, nay.

00:42:22.330 --> 00:42:23.720
Ye not be lettin' the ship
do what it wants.

00:42:23.720 --> 00:42:24.580
You're the captain.

00:42:24.580 --> 00:42:26.486
You make the rules, yaaarrr?

00:42:26.486 --> 00:42:26.940
AUDIENCE: Yaarrr!

00:42:26.940 --> 00:42:29.330
COLT MCANLIS: And instead of
allowin' it to double in size

00:42:29.330 --> 00:42:32.120
every time, as yer application
needs it and yer DOM changes

00:42:32.120 --> 00:42:35.070
and yer objects move, ye be
using what we call a linear

00:42:35.070 --> 00:42:37.700
growth array, where instead of
actually usin' the standard

00:42:37.700 --> 00:42:40.350
array object, ye be usin'
a linked list

00:42:40.350 --> 00:42:42.570
of type static arrays.

00:42:42.570 --> 00:42:45.185
So as ye add a single object,
rather than doubling the size

00:42:45.185 --> 00:42:49.520
of array, ye only increase
it by certain amounts.

00:42:49.520 --> 00:42:53.330
Ye can be 100 corpses, or 1,000
corpses, or a platoon of

00:42:53.330 --> 00:42:54.720
corpses if ye choose.

00:42:54.720 --> 00:42:56.666
Either way, they're the King's
men, and they're free, ha, ha,

00:42:56.666 --> 00:42:59.040
ha, ha, ha, ha.

00:42:59.040 --> 00:43:01.480
Sorry, for the British
in the audience.

00:43:01.480 --> 00:43:03.830
Yes.

00:43:03.830 --> 00:43:05.920
Now, the linear growth array,
actually, be good, because ye

00:43:05.920 --> 00:43:08.280
be amortizing the cost
of the corpses

00:43:08.280 --> 00:43:09.940
over many, many corpses.

00:43:09.940 --> 00:43:12.870
So every time ye allocate a
new array, you're actually

00:43:12.870 --> 00:43:15.790
amortizing the death of all
those because ye do it once,

00:43:15.790 --> 00:43:16.460
ha, ha, ha.

00:43:16.460 --> 00:43:19.940
It's tricky pirate
math, ha, ha.

00:43:19.940 --> 00:43:21.880
Look, that be easy to do
in this structure.

00:43:21.880 --> 00:43:24.550
Ye can simply index into it with
a little bit of magic and

00:43:24.550 --> 00:43:25.370
fluff and dust.

00:43:25.370 --> 00:43:26.620
Ye be findin' what ye need.

00:43:26.620 --> 00:43:30.690
However, deletion damn
need be impossible.

00:43:30.690 --> 00:43:33.010
I do not recommend that.

00:43:33.010 --> 00:43:34.750
[LAUGHTER]

00:43:34.750 --> 00:43:36.990
COLT MCANLIS: Don't do that
during a job interview.

00:43:36.990 --> 00:43:39.230
It will reflect on you badly.

00:43:39.230 --> 00:43:40.380
I'm not saying I've done that.

00:43:40.380 --> 00:43:42.360
But do not try that.

00:43:42.360 --> 00:43:45.910
The point here be that this is
an app-suited container for

00:43:45.910 --> 00:43:48.500
the growth of static corpses
on yer vessel.

00:43:48.500 --> 00:43:49.560
It allows ye to grow.

00:43:49.560 --> 00:43:50.900
It allows ye to preallocate.

00:43:50.900 --> 00:43:54.605
It allows ye to stay fluid when
times change, yaarrr.

00:43:54.605 --> 00:43:58.350
And that be the pirate
way, he, he.

00:43:58.350 --> 00:44:00.300
Now, for all of ye in the
audience, ye may be saying to

00:44:00.300 --> 00:44:02.510
yerself, I have no freakin'
clue what my

00:44:02.510 --> 00:44:04.590
memory be doin', yaarrr?

00:44:04.590 --> 00:44:05.520
AUDIENCE: Yaarrr.

00:44:05.520 --> 00:44:06.820
COLT MCANLIS: Welcome
aboard, mateys.

00:44:06.820 --> 00:44:08.450
[LAUGHTER]

00:44:08.450 --> 00:44:09.600
COLT MCANLIS: That was the
most hearty yaarrr.

00:44:09.600 --> 00:44:12.115
Yes, I have no idea what
yer talkin' about.

00:44:12.115 --> 00:44:12.610
[LAUGHTER]

00:44:12.610 --> 00:44:13.990
COLT MCANLIS: I am so
lost right now.

00:44:13.990 --> 00:44:15.060
[LAUGHTER]

00:44:15.060 --> 00:44:18.200
COLT MCANLIS: Thanks for
playin' along, lads.

00:44:18.200 --> 00:44:20.600
For those of ye lookin' to
understand what's going on

00:44:20.600 --> 00:44:23.020
under the hood of your deck,
ye need to be lookin' at a

00:44:23.020 --> 00:44:25.440
couple tools To start
off, stick with

00:44:25.440 --> 00:44:26.890
Chrome Developer Tools.

00:44:26.890 --> 00:44:28.960
It actually be givin' ye a
pretty good understanding of

00:44:28.960 --> 00:44:32.010
how many corpses and objects be
used along the duration of

00:44:32.010 --> 00:44:33.300
yer trip over time.

00:44:33.300 --> 00:44:35.780
And with new tooling on the
bottom, it'll actually tell ye

00:44:35.780 --> 00:44:39.620
what heap these corpses be
coming from, be they the audio

00:44:39.620 --> 00:44:43.260
heap from the southern regions
of France, or they be the

00:44:43.260 --> 00:44:44.630
rendering heap from Jamaica.

00:44:44.630 --> 00:44:45.680
[PIRATE LAUGH].

00:44:45.680 --> 00:44:48.570
They be a spicy lot,
lads [LAUGHS].

00:44:48.570 --> 00:44:49.880
Anyhow, stop here.

00:44:49.880 --> 00:44:52.230
Make sure ye run yer application
through the tools.

00:44:52.230 --> 00:44:55.060
Figure out where yer memory is
going and adjust accordingly.

00:44:55.060 --> 00:44:56.927
Ye be the captain, aye?

00:44:56.927 --> 00:44:58.300
AUDIENCE: Aye!

00:44:58.300 --> 00:45:00.330
COLT MCANLIS: Another great
tool that's just come out.

00:45:00.330 --> 00:45:02.140
However, this shitty
picture was all I

00:45:02.140 --> 00:45:03.210
could find on the internet.

00:45:03.210 --> 00:45:04.960
[LAUGHTER]

00:45:04.960 --> 00:45:06.540
COLT MCANLIS: Because for some
reason, they don't have anyone

00:45:06.540 --> 00:45:07.970
who could put up a more
high resolution

00:45:07.970 --> 00:45:10.770
photo of the damn tool.

00:45:10.770 --> 00:45:13.043
There's a good tool called
Adobe GCview.

00:45:13.043 --> 00:45:14.480
And no, I couldn't
get it workin'.

00:45:14.480 --> 00:45:17.970
So I couldn't take the picture
myself, yaarrr.

00:45:17.970 --> 00:45:20.680
This is a fantastic external
tool that will allow ye to do

00:45:20.680 --> 00:45:23.050
memory profile analysis
for multiple

00:45:23.050 --> 00:45:24.990
different browsers, yaarrr.

00:45:24.990 --> 00:45:27.410
So for those of ye out here who
may be sayin', oh, Captain

00:45:27.410 --> 00:45:29.160
MainRoach, yer kind of off
the plank with Chrome

00:45:29.160 --> 00:45:31.570
only, check this out.

00:45:31.570 --> 00:45:32.790
But seriously, put up
a better picture.

00:45:32.790 --> 00:45:33.970
That's kind of embarrassing.

00:45:33.970 --> 00:45:38.620
I'm a pirate and I'm callin'
ye out, yaarrr.

00:45:38.620 --> 00:45:40.530
So lads and lasses, my crew
tonight, thank ye for

00:45:40.530 --> 00:45:41.180
listenin' to me.

00:45:41.180 --> 00:45:42.960
Let me give ye some tips
on how to avoid this

00:45:42.960 --> 00:45:45.360
evil-buildin' mulch monster.

00:45:45.360 --> 00:45:48.160
First off, know that this
monster be eatin' away at the

00:45:48.160 --> 00:45:48.840
speed of yer ship.

00:45:48.840 --> 00:45:50.950
And that not be good.

00:45:50.950 --> 00:45:52.990
If you don't see that garbage
collection be hurtin' yer

00:45:52.990 --> 00:45:55.175
frame rate, yer not tryin'
hard enough.

00:45:55.175 --> 00:45:57.290
Build a better application.

00:45:57.290 --> 00:45:59.654
Yaarrr, I'm callin'
ye out, yaarrr.

00:45:59.654 --> 00:46:00.420
AUDIENCE: Yaarrr.

00:46:00.420 --> 00:46:01.145
COLT MCANLIS: Yaarrr.

00:46:01.145 --> 00:46:03.170
T-shirt for that man.

00:46:03.170 --> 00:46:06.830
The of ye to the planks.

00:46:06.830 --> 00:46:08.435
High corpse churn summons
the monster.

00:46:08.435 --> 00:46:11.130
If ye be movin' lots of objects
around and not doin'

00:46:11.130 --> 00:46:12.890
yer duty, then the corpse
monster will find ye.

00:46:12.890 --> 00:46:14.190
It'll slow down yer vessel.

00:46:14.190 --> 00:46:16.000
And then, ye'll be cursin'
all day long.

00:46:16.000 --> 00:46:17.575
And I will be sittin' back
laughin' [MANIACAL LAUGHTER].

00:46:20.250 --> 00:46:24.350
Kill yer crew before ye sail.

00:46:24.350 --> 00:46:26.530
Sail them as zombies.

00:46:26.530 --> 00:46:29.650
I dare every one of ye in here
to tweet that right now.

00:46:29.650 --> 00:46:33.850
Kill yer crew before ye
sail #perfmatters.

00:46:33.850 --> 00:46:36.000
[LAUGHTER]

00:46:36.000 --> 00:46:37.820
COLT MCANLIS: The bald pirate
told me to say it.

00:46:37.820 --> 00:46:40.380
I'm not crazy.

00:46:40.380 --> 00:46:42.160
Know yer corpse count
by testin' yer

00:46:42.160 --> 00:46:43.170
voyage ahead of time.

00:46:43.170 --> 00:46:44.640
Be the captain of yer vessel.

00:46:44.640 --> 00:46:45.850
Don't let it control you.

00:46:45.850 --> 00:46:47.823
You're in charge, yaarrr.

00:46:47.823 --> 00:46:48.670
AUDIENCE: Yaarrr.

00:46:48.670 --> 00:46:49.110
COLT MCANLIS: That one hurt.

00:46:49.110 --> 00:46:49.626
Hold on.

00:46:49.626 --> 00:46:51.500
Oh--

00:46:51.500 --> 00:46:54.700
I needed to stretch my yaarrr.

00:46:54.700 --> 00:46:57.310
When ye need more corpses, make
sure ye linearly grow.

00:46:57.310 --> 00:46:58.660
Don't allow the ship to do it.

00:46:58.660 --> 00:47:01.930
Ye do it yerself.

00:47:01.930 --> 00:47:04.622
In honest, I miss the
corpse monster.

00:47:04.622 --> 00:47:05.690
We did separate.

00:47:05.690 --> 00:47:08.270
And there were little
'uns involved.

00:47:08.270 --> 00:47:10.470
But ye know, we'll
be back soon.

00:47:10.470 --> 00:47:14.090
With the new primitives in C++
11, there may be a chance to

00:47:14.090 --> 00:47:16.550
get a better high-performance
allocation system, where I may

00:47:16.550 --> 00:47:19.070
not have to manage
my memory myself.

00:47:19.070 --> 00:47:20.220
That's a separate discussion.

00:47:20.220 --> 00:47:22.960
Anyhow, yaarrr, thank ye all for
listenin' to me tonight.

00:47:22.960 --> 00:47:24.620
And I'd like to remind
ye that we won't be

00:47:24.620 --> 00:47:25.790
takin' questions, now.

00:47:25.790 --> 00:47:28.490
But we will be doin' it at the
end of the night in a fireside

00:47:28.490 --> 00:47:30.460
chat manner, yaarrr.

00:47:30.460 --> 00:47:32.050
Thank ye be for listenin'
tonight.

00:47:32.050 --> 00:47:33.046
AUDIENCE: Yaarrr.

00:47:33.046 --> 00:47:43.006
[CHEERS AND APPLAUSE]

00:47:43.006 --> 00:47:45.090
PETER LUBBERS: Thank
you, Colt.

00:47:45.090 --> 00:47:50.380
All right, Colt, we have a
special gift for you, yaarrr.

00:47:50.380 --> 00:47:51.550
COLT MCANLIS: Thank you
very much, yaarrr.

00:47:51.550 --> 00:47:51.982
AUDIENCE: Yaarrr.

00:47:51.982 --> 00:47:52.846
PETER LUBBERS: OK.

00:47:52.846 --> 00:47:55.672
COLT MCANLIS: Another round of
applause for the great SFHTML5

00:47:55.672 --> 00:47:56.654
team, yaarrr.

00:47:56.654 --> 00:48:02.560
[APPLAUSE]

00:48:02.560 --> 00:48:05.910
PETER LUBBERS: All right, so
for the next talk, we have

00:48:05.910 --> 00:48:06.620
Paul Lewis.

00:48:06.620 --> 00:48:11.470
He came all the way
from the UK.

00:48:11.470 --> 00:48:14.860
And he's a developer advocate
on the Chrome Developer

00:48:14.860 --> 00:48:17.950
Relations team specializing
also in performance.

00:48:17.950 --> 00:48:21.750
He knows a lot of WebGL, and
it's been just great working

00:48:21.750 --> 00:48:23.160
with Paul for the last-- what?

00:48:23.160 --> 00:48:25.810
About a year now.

00:48:25.810 --> 00:48:29.260
So Paul, are you mic'd
up already?

00:48:29.260 --> 00:48:30.610
OK, great.

00:48:30.610 --> 00:48:31.980
We have your laptop here.

00:48:31.980 --> 00:48:33.440
We'll just switch over.

00:48:33.440 --> 00:48:33.860
Oh, the same?

00:48:33.860 --> 00:48:35.560
MALE SPEAKER: [INAUDIBLE].

00:48:35.560 --> 00:48:36.170
PETER LUBBERS: Yeah, OK.

00:48:36.170 --> 00:48:37.840
We're switching over
to laptop.

00:48:37.840 --> 00:48:40.140
Like I said, we'll have
one more talk.

00:48:40.140 --> 00:48:44.590
Then we have a pretty good break
for about 25 minutes.

00:48:44.590 --> 00:48:48.110
We'll have more time to hit
the different sponsor

00:48:48.110 --> 00:48:49.580
booths and so on.

00:48:49.580 --> 00:48:50.560
There's wine.

00:48:50.560 --> 00:48:52.720
And there will be
dessert as well.

00:48:52.720 --> 00:48:56.340
So let's just switch
this out right now.

00:48:56.340 --> 00:48:59.170
And then, we'll have plenty
of time for a break.

00:48:59.170 --> 00:49:03.210
Again, a couple of great raffle
prizes, conference

00:49:03.210 --> 00:49:06.280
tickets, and a whole stack
of wine and so on.

00:49:06.280 --> 00:49:09.070
So hang on to those
raffle tickets.

00:49:09.070 --> 00:49:12.000
We'll have two more talks
after the break.

00:49:12.000 --> 00:49:14.880
And then we'll have a Q&amp;A
panel So we don't take

00:49:14.880 --> 00:49:16.130
questions right now.

00:49:16.130 --> 00:49:18.000
We'll just wait for
that at the end.

00:49:18.000 --> 00:49:20.810
And we'll just pass the
mic around the room.

00:49:20.810 --> 00:49:21.730
OK.

00:49:21.730 --> 00:49:23.900
All right, so, one moment.

00:49:32.162 --> 00:49:33.146
OK.

00:49:33.146 --> 00:49:34.622
MALE SPEAKER: We're
a good team.

00:49:34.622 --> 00:49:35.606
PETER LUBBERS: [LAUGHS].

00:49:35.606 --> 00:49:39.050
MALE SPEAKER: All right,
thank you.

00:49:39.050 --> 00:49:41.018
Do you need to put it behind
this [INAUDIBLE]?

00:49:41.018 --> 00:49:41.510
PETER LUBBERS: Hmm?

00:49:41.510 --> 00:49:43.478
MALE SPEAKER: Do you need
to put it behind this?

00:49:43.478 --> 00:49:44.485
PETER LUBBERS: Maybe.

00:49:44.485 --> 00:49:46.790
So it doesn't fall.

00:49:46.790 --> 00:49:47.770
OK.

00:49:47.770 --> 00:49:48.750
Does he need this?

00:49:48.750 --> 00:49:53.160
[SIDE CONVERSATION]

00:49:53.160 --> 00:49:54.140
PAUL LEWIS: All right,
I got it.

00:49:54.140 --> 00:49:55.180
I'm good.

00:49:55.180 --> 00:49:55.560
You all good?

00:49:55.560 --> 00:49:56.452
You can hear me?

00:49:56.452 --> 00:49:56.874
[INTERPOSING VOICES]

00:49:56.874 --> 00:49:58.210
PAUL LEWIS: Yeah?

00:49:58.210 --> 00:50:00.960
All happy, huh?

00:50:00.960 --> 00:50:01.400
[IN PIRATE VOICE]

00:50:01.400 --> 00:50:02.890
Now ye may be noticin'--

00:50:02.890 --> 00:50:05.355
[LAUGHTER]

00:50:05.355 --> 00:50:06.590
PAUL LEWIS: --that today--

00:50:06.590 --> 00:50:07.840
[LAUGHTER AND APPLAUSE].

00:50:12.780 --> 00:50:14.223
PAUL LEWIS: But I think not.

00:50:14.223 --> 00:50:22.434
[LAUGHTER]

00:50:22.434 --> 00:50:26.190
PAUL LEWIS: Yeah, but what
I thought I would do is I

00:50:26.190 --> 00:50:28.550
thought I'd take a step back for
us now, and I thought I'd

00:50:28.550 --> 00:50:31.670
visualize the speakers
for you by help of a

00:50:31.670 --> 00:50:33.830
trustee Venn diagram.

00:50:33.830 --> 00:50:37.020
Now, on the left, we
have bald people.

00:50:37.020 --> 00:50:39.590
On the right, we have Pauls.

00:50:39.590 --> 00:50:43.740
Colt, firmly in the bald camp.

00:50:43.740 --> 00:50:46.960
Professor Irish, firmly
in the Paul.

00:50:46.960 --> 00:50:51.750
Me, making up the middle, the
intersection, if you will.

00:50:51.750 --> 00:50:53.486
But unfortunately,
we have Jake--

00:50:53.486 --> 00:50:55.270
[LAUGHTER]

00:50:55.270 --> 00:50:56.950
PAUL LEWIS: --who's thinning
up top and

00:50:56.950 --> 00:51:00.790
trying to get into bald.

00:51:00.790 --> 00:51:02.260
I wish him well.

00:51:02.260 --> 00:51:05.950
[LAUGHTER]

00:51:05.950 --> 00:51:09.760
PAUL LEWIS: Now, what I wanted
to do is set the scene.

00:51:09.760 --> 00:51:12.650
And I feel like resetting
the scene.

00:51:12.650 --> 00:51:14.410
Talking about rendering
performance, there's a lot of

00:51:14.410 --> 00:51:17.250
people who kind of go,
eh, I'm not so sure.

00:51:17.250 --> 00:51:19.550
What's he mean by rendering?

00:51:19.550 --> 00:51:22.790
This performance chat-- and
often, what we've done, I

00:51:22.790 --> 00:51:24.950
think, is we've gone, OK.

00:51:24.950 --> 00:51:27.010
How long does this thing
takes to load?

00:51:27.010 --> 00:51:28.710
How many requests am I making?

00:51:28.710 --> 00:51:30.620
Have I got GZip switched on?

00:51:30.620 --> 00:51:31.550
What about eEtags?

00:51:31.550 --> 00:51:32.670
They're dead.

00:51:32.670 --> 00:51:34.350
Ew, I don't know what to do.

00:51:34.350 --> 00:51:38.110
And I understand why
we've done it.

00:51:38.110 --> 00:51:42.460
But the thing is, it's only
part of the picture.

00:51:42.460 --> 00:51:47.120
OK, it's only part of the
problem, because as Colt

00:51:47.120 --> 00:51:49.030
discussed with the memory
thing, you know, that's

00:51:49.030 --> 00:51:51.530
something that doesn't fit into
page load time, right?

00:51:51.530 --> 00:51:53.040
And that's a part
of performance.

00:51:53.040 --> 00:51:55.510
So it's a little bit
of a question.

00:51:55.510 --> 00:51:59.250
And so, what I thought I'd do
is just a quick, highly

00:51:59.250 --> 00:52:02.620
technical chart for myself.

00:52:02.620 --> 00:52:04.366
of two apps.

00:52:04.366 --> 00:52:07.470
App one is fast to load
and slow to render.

00:52:07.470 --> 00:52:11.360
And App two is slow to load
and fast to render.

00:52:11.360 --> 00:52:13.140
And which is worse?

00:52:13.140 --> 00:52:14.255
Which is better?

00:52:14.255 --> 00:52:16.460
Well, the answer, of course, is
both of those are going to

00:52:16.460 --> 00:52:17.610
hack off your users.

00:52:17.610 --> 00:52:19.330
They are not going to
be happy with you.

00:52:19.330 --> 00:52:20.750
So it matters.

00:52:20.750 --> 00:52:24.200
So what I thought I would then
do is take us through the

00:52:24.200 --> 00:52:28.380
pipeline a little
bit like this.

00:52:28.380 --> 00:52:31.300
The idea here is from a page
load perspective-- because

00:52:31.300 --> 00:52:34.000
that means we will hit every
part of the pipeline--

00:52:34.000 --> 00:52:38.300
I want to get through from how
the browser does a request and

00:52:38.300 --> 00:52:39.840
gets pixels onto the screen.

00:52:39.840 --> 00:52:41.930
That's actually the job
of the browser.

00:52:41.930 --> 00:52:45.190
It's there to get content
on your users' screens.

00:52:45.190 --> 00:52:46.930
So it's good to understand it.

00:52:46.930 --> 00:52:49.290
And then when your users are
scrolling, and dragging stuff

00:52:49.290 --> 00:52:53.110
about, and just generally using
your site or your app,

00:52:53.110 --> 00:52:54.650
then we'll hit parts of
this pipeline again.

00:52:54.650 --> 00:52:56.170
So it's good to understand it.

00:52:56.170 --> 00:52:58.350
And this is part one of two.

00:52:58.350 --> 00:53:00.950
Because I would normally talk
about the DevTools-y part of

00:53:00.950 --> 00:53:03.970
this, where you can figure
out how your

00:53:03.970 --> 00:53:05.210
project is actually working.

00:53:05.210 --> 00:53:07.300
But Paul Irish is going
to actually do

00:53:07.300 --> 00:53:08.280
that part later on.

00:53:08.280 --> 00:53:10.392
So think of this as
a scene setter, a

00:53:10.392 --> 00:53:11.830
part one, if you will.

00:53:11.830 --> 00:53:16.300
Now, we start off our journey
with the humble GET

00:53:16.300 --> 00:53:19.070
request, like so.

00:53:19.070 --> 00:53:24.160
Our server is going to respond
for us with some HTML, all

00:53:24.160 --> 00:53:26.340
pretty awesome.

00:53:26.340 --> 00:53:29.070
And the first thing that the
browser is going to do-- and

00:53:29.070 --> 00:53:32.130
it does clever stuff with
doing streamed, and look

00:53:32.130 --> 00:53:34.050
aheads, and all this kind
of stuff-- but it

00:53:34.050 --> 00:53:35.110
starts to parse that.

00:53:35.110 --> 00:53:37.500
And when you look in DevTools,
you'll see things like Parse

00:53:37.500 --> 00:53:41.560
HTML, which is this process,
really, of taking our tag soup

00:53:41.560 --> 00:53:47.180
and turning it into this,
which is the DOM.

00:53:47.180 --> 00:53:49.210
And that's the DOM
for that HTML.

00:53:49.210 --> 00:53:50.920
So we'll just make our lives a
little bit easier and just

00:53:50.920 --> 00:53:53.170
call it the DOM.

00:53:53.170 --> 00:53:58.100
And then what we do is we take
the CSS, and we're just going

00:53:58.100 --> 00:54:00.010
to add that plus in there.

00:54:00.010 --> 00:54:03.410
We take the CSS, and some of
that CSS will come part of the

00:54:03.410 --> 00:54:05.840
browser as the default
style sheets.

00:54:05.840 --> 00:54:07.550
With the browser, there's the
stuff you put in line.

00:54:07.550 --> 00:54:09.310
There's the stuff that's
in your style sheets.

00:54:09.310 --> 00:54:13.670
And we start to actually figure
out from the DOM what

00:54:13.670 --> 00:54:14.890
CSS applies to what.

00:54:14.890 --> 00:54:19.380
And historically, people have
spent quite a lot of time

00:54:19.380 --> 00:54:21.140
trying to optimize
CSS selectors,

00:54:21.140 --> 00:54:22.680
you know, how quickly.

00:54:22.680 --> 00:54:26.120
And it's actually a bit of a
waste of your time because the

00:54:26.120 --> 00:54:29.040
browser is very, very,
very fast at

00:54:29.040 --> 00:54:29.930
doing selector matching.

00:54:29.930 --> 00:54:31.240
So just bear that one in mind.

00:54:31.240 --> 00:54:35.650
Anyway, this will show up in
DevTools as Recalculate Style.

00:54:35.650 --> 00:54:37.340
So what happens-- and I'm about
to do a sound effect, I

00:54:37.340 --> 00:54:38.620
can feel it coming on--

00:54:38.620 --> 00:54:40.200
we put these together like--

00:54:40.200 --> 00:54:40.920
[FART NOISE]

00:54:40.920 --> 00:54:41.660
PAUL LEWIS: --that.

00:54:41.660 --> 00:54:43.200
[LAUGHTER]

00:54:43.200 --> 00:54:46.020
PAUL LEWIS: And we get
the Render Tree.

00:54:46.020 --> 00:54:47.290
Paul Irish is happy
with that noise.

00:54:47.290 --> 00:54:49.150
He's happy with that.

00:54:49.150 --> 00:54:52.250
Now, the Render Tree looks
distinctly like the DOM,

00:54:52.250 --> 00:54:54.320
except that things are missing,
like the head, for

00:54:54.320 --> 00:54:56.170
example, or a script.

00:54:56.170 --> 00:54:57.190
They're not there because
we're not

00:54:57.190 --> 00:54:58.310
going to render them.

00:54:58.310 --> 00:55:01.430
So they don't appear
in that tree.

00:55:01.430 --> 00:55:04.860
But let's say, for example, I
decide that in my style sheets

00:55:04.860 --> 00:55:07.110
I'm going to put section
p-- boop.

00:55:07.110 --> 00:55:08.740
I'm going to say,
Display None.

00:55:08.740 --> 00:55:11.150
That will disappear from the
Render Tree because it's set

00:55:11.150 --> 00:55:12.020
to Display None.

00:55:12.020 --> 00:55:13.510
It's not something we're
going to draw.

00:55:13.510 --> 00:55:15.590
It's not something
we care about.

00:55:15.590 --> 00:55:19.060
Equally, I could have a pseudo
element, and that would add

00:55:19.060 --> 00:55:21.030
something into the
Render Tree.

00:55:21.030 --> 00:55:23.260
So the Render Tree, as I said.

00:55:23.260 --> 00:55:25.460
It looks like the DOM,
but it's not the DOM.

00:55:25.460 --> 00:55:28.010
It's the styles applied
to the DOM.

00:55:28.010 --> 00:55:30.320
So that's that.

00:55:30.320 --> 00:55:33.890
Now, the next job-- and it's
going to look like a really

00:55:33.890 --> 00:55:34.170
simple job.

00:55:34.170 --> 00:55:37.060
We've got all this CSS that
we want to apply.

00:55:37.060 --> 00:55:40.770
And it's basically like widths,
and heights, and

00:55:40.770 --> 00:55:42.480
display blog, position
absolute, all

00:55:42.480 --> 00:55:43.130
this kind of stuff.

00:55:43.130 --> 00:55:48.150
And what the browser has to do
is take that and go, whoof,

00:55:48.150 --> 00:55:50.540
where does everything
live on screen?

00:55:50.540 --> 00:55:53.100
Why are there boxes here?

00:55:53.100 --> 00:55:55.750
And as you probably know, this
can actually get extremely

00:55:55.750 --> 00:55:59.290
expensive because everything
tends to be contingent on

00:55:59.290 --> 00:55:59.940
everything else.

00:55:59.940 --> 00:56:02.960
So if I were to change the
height of Body, everything

00:56:02.960 --> 00:56:05.980
that's inside Body needs
to be recalculated.

00:56:05.980 --> 00:56:09.330
And this will show itself up
in DevTools as Layout.

00:56:09.330 --> 00:56:13.160
And, yeah, that's where all
those boxes are coming from.

00:56:13.160 --> 00:56:15.400
Good.

00:56:15.400 --> 00:56:18.490
So the next job that we
have is to actually

00:56:18.490 --> 00:56:19.250
fill in some pixels.

00:56:19.250 --> 00:56:21.630
We know where those boxes are.

00:56:21.630 --> 00:56:24.370
But they now need filling
in with pixels.

00:56:24.370 --> 00:56:26.560
So we need a rasterizer.

00:56:26.560 --> 00:56:29.600
Now, just a bit of terminology
in case you don't spend your

00:56:29.600 --> 00:56:31.280
time looking at this stuff.

00:56:31.280 --> 00:56:35.250
Vectors are basically shapes
that we have the mathematical

00:56:35.250 --> 00:56:38.970
formulae for, or we have the
positions of the corners, for

00:56:38.970 --> 00:56:40.740
example, in the case
of a triangle.

00:56:40.740 --> 00:56:43.150
But we're interested
in actually pixels.

00:56:43.150 --> 00:56:46.190
So what we actually have to do
is we have to figure out from

00:56:46.190 --> 00:56:48.940
our triangle which pixels we
need to fill in and what color

00:56:48.940 --> 00:56:49.440
they need to be.

00:56:49.440 --> 00:56:51.610
And this is the process of
converting vector to raster.

00:56:51.610 --> 00:56:52.180
OK?

00:56:52.180 --> 00:56:53.460
All pretty simple.

00:56:53.460 --> 00:56:57.260
Now, if you and I were to have a
fun afternoon and we were to

00:56:57.260 --> 00:57:01.740
create a rasterizer, we'd
probably include

00:57:01.740 --> 00:57:03.020
methods like this.

00:57:03.020 --> 00:57:04.760
And I know that we would,
because these are the ones

00:57:04.760 --> 00:57:07.200
from Chrome's rasterizer,
which is called Skia.

00:57:07.200 --> 00:57:10.080
And so you can imagine there
drawPoints, drawOvals,

00:57:10.080 --> 00:57:15.290
drawRectangles, drawBitmaps,
draw some text.

00:57:15.290 --> 00:57:18.360
And if you've worked with the
HTML5 canvas, a lot of this

00:57:18.360 --> 00:57:19.840
stuff will actually look
quite similar.

00:57:19.840 --> 00:57:23.370
It's the rasterizer,
basically.

00:57:23.370 --> 00:57:28.240
So now what we can do, I
actually run that HTML through

00:57:28.240 --> 00:57:30.580
Skia and said, what
did you do?

00:57:30.580 --> 00:57:31.890
And it told me.

00:57:31.890 --> 00:57:34.440
So if thought I'd show
you what it does.

00:57:34.440 --> 00:57:35.940
Ta-daaa!

00:57:35.940 --> 00:57:37.710
But you probably didn't
see what was going on.

00:57:37.710 --> 00:57:39.660
So why don't we have ourselves
an instant replay.

00:57:39.660 --> 00:57:43.150
Now, you'll see that as we get
through each of these calls,

00:57:43.150 --> 00:57:44.980
we're starting to build up
the picture of what's

00:57:44.980 --> 00:57:45.810
actually going on.

00:57:45.810 --> 00:57:47.905
Draw around the rectangle, which
isn't that clear, but

00:57:47.905 --> 00:57:49.090
that's the drop shadow.

00:57:49.090 --> 00:57:50.030
Draw the path.

00:57:50.030 --> 00:57:50.590
Here we go.

00:57:50.590 --> 00:57:52.910
Draw the bitmap, which
is my face.

00:57:52.910 --> 00:57:55.520
Do a bit of tidy up, and
we'll call it a day.

00:57:55.520 --> 00:57:57.500
DevTools is going to show
you that as Paint.

00:57:57.500 --> 00:58:00.220
That's how it goes about letting
you know that it did

00:58:00.220 --> 00:58:02.130
some of that work.

00:58:02.130 --> 00:58:04.720
Now, some of this bears a little
bit more scrutiny, I

00:58:04.720 --> 00:58:08.390
think, specifically,
drawBitmap.

00:58:08.390 --> 00:58:10.020
Now, I was a good developer.

00:58:10.020 --> 00:58:12.240
I sent through my tiny JPEG.

00:58:12.240 --> 00:58:13.180
I compressed it.

00:58:13.180 --> 00:58:14.650
I'm good on the page load time.

00:58:14.650 --> 00:58:15.310
I'm happy.

00:58:15.310 --> 00:58:16.220
Well done, me.

00:58:16.220 --> 00:58:19.990
But you'll notice that it's
called drawBitmap and not

00:58:19.990 --> 00:58:23.702
drawJPEG, or drawPING,
or drawGIF--

00:58:23.702 --> 00:58:24.968
''jif," "gif"--

00:58:24.968 --> 00:58:29.210
Hands up for "gif." Ooh,
it's going to be close.

00:58:29.210 --> 00:58:32.100
Hands up for "jif."
You're wrong.

00:58:32.100 --> 00:58:34.400
[LAUGHTER]

00:58:34.400 --> 00:58:37.440
[APPLAUSE]

00:58:37.440 --> 00:58:38.970
PAUL LEWIS: There not
"jraphics," are they?

00:58:38.970 --> 00:58:39.810
[LAUGHTER]

00:58:39.810 --> 00:58:40.980
PAUL LEWIS: All right?

00:58:40.980 --> 00:58:44.520
Anyway, so now, we
have our JPEG.

00:58:44.520 --> 00:58:48.850
And we basically go through, and
we're going to decode out

00:58:48.850 --> 00:58:51.890
an image into a bitmap--

00:58:51.890 --> 00:58:54.640
red, green, blue, and
possibly alpha.

00:58:54.640 --> 00:58:56.230
But the thing is, we're also
maybe doing a bit of

00:58:56.230 --> 00:58:57.720
responsive web design.

00:58:57.720 --> 00:58:59.680
So we also have to do
some resizes as well

00:58:59.680 --> 00:59:00.500
on the other side.

00:59:00.500 --> 00:59:03.090
So these are extremely
expensive.

00:59:03.090 --> 00:59:04.050
They show up in DevTools.

00:59:04.050 --> 00:59:05.620
You can spin down
Paint records.

00:59:05.620 --> 00:59:08.680
And you'll see image decodes
and image resizes.

00:59:08.680 --> 00:59:14.380
And they will kill your frames
per second, if you have them,

00:59:14.380 --> 00:59:16.750
particularly, resizes,
actually.

00:59:16.750 --> 00:59:19.420
OK, so we spent some time
we drew a bitmap.

00:59:19.420 --> 00:59:21.790
The next thing we want
to look at is--

00:59:21.790 --> 00:59:23.130
we're quite fancy-- we're going

00:59:23.130 --> 00:59:24.090
to do a bit of animation.

00:59:24.090 --> 00:59:26.150
What we're going to actually end
up doing is we're going to

00:59:26.150 --> 00:59:29.250
move that picture of
me up to there.

00:59:29.250 --> 00:59:33.450
Now, when this happens, we
basically took this rectangle

00:59:33.450 --> 00:59:37.410
around everything and said, this
is now damaged and dirty.

00:59:37.410 --> 00:59:39.250
This area needs fixing.

00:59:39.250 --> 00:59:41.680
This needs repainting.

00:59:41.680 --> 00:59:45.920
So we actually have to step
through one-by-one and re-run

00:59:45.920 --> 00:59:49.180
all those commands with the
drop shadow, and the white

00:59:49.180 --> 00:59:52.030
box, and the bitmap.

00:59:52.030 --> 00:59:54.420
And it doesn't take much
imagination to figure out that

00:59:54.420 --> 00:59:57.880
if we have a lot of things that
need painting, or we move

00:59:57.880 --> 01:00:01.020
something a really, really
long way, that could be a

01:00:01.020 --> 01:00:03.950
hugely expensive thing
that we just did.

01:00:03.950 --> 01:00:06.740
So what we do to work around
that is we do these things

01:00:06.740 --> 01:00:07.410
called layers.

01:00:07.410 --> 01:00:10.680
Instead of having one surface
that we rendered into, that we

01:00:10.680 --> 01:00:13.110
rasterize into, we
have several.

01:00:13.110 --> 01:00:14.390
So this is my website.

01:00:14.390 --> 01:00:18.460
And actually, the masthead
thing is a canvas.

01:00:18.460 --> 01:00:20.590
So why don't we boost that
out a little bit.

01:00:20.590 --> 01:00:23.010
Now, what happens is we
can basically do this.

01:00:23.010 --> 01:00:25.920
So that when we want to change
something in the masthead, we

01:00:25.920 --> 01:00:28.370
don't have to worry about
repainting the thing behind.

01:00:28.370 --> 01:00:29.240
We keep it separate.

01:00:29.240 --> 01:00:31.360
This is extremely useful.

01:00:31.360 --> 01:00:33.430
What's also interesting about
this-- or at least to me,

01:00:33.430 --> 01:00:34.570
because I'm a nerd--

01:00:34.570 --> 01:00:38.290
is the Next and Previous buttons
are actually DOM

01:00:38.290 --> 01:00:39.600
elements on their own, right?

01:00:39.600 --> 01:00:41.690
But they're sitting on top of
something that was just

01:00:41.690 --> 01:00:43.860
boosted out to its own layer.

01:00:43.860 --> 01:00:47.090
So what Chrome ends up doing
is it ends up creating more

01:00:47.090 --> 01:00:49.100
layers, just for those.

01:00:49.100 --> 01:00:52.940
So you actually end up with
four of the suckers.

01:00:52.940 --> 01:00:55.020
And these all get sent across
the GPU, which we'll talk

01:00:55.020 --> 01:00:55.790
about in a second.

01:00:55.790 --> 01:00:57.600
And then composited layers
is what you're

01:00:57.600 --> 01:00:59.010
going to see in DevTools.

01:00:59.010 --> 01:01:01.310
It's taking all these layers
and all this stuff.

01:01:01.310 --> 01:01:03.900
And it's basically going,
"schwip," putting them all

01:01:03.900 --> 01:01:07.820
together again, figuring out
what layers it needs, where

01:01:07.820 --> 01:01:11.390
they need to live, all
that kind of stuff.

01:01:11.390 --> 01:01:12.240
So those are the layers.

01:01:12.240 --> 01:01:12.830
They're pretty cool.

01:01:12.830 --> 01:01:14.255
And you might be asking
yourself--

01:01:14.255 --> 01:01:15.580
I hope you are--

01:01:15.580 --> 01:01:17.110
how do I get a layer?

01:01:17.110 --> 01:01:18.120
That's exciting to me.

01:01:18.120 --> 01:01:20.530
You'll notice it's subject
to change because it's an

01:01:20.530 --> 01:01:21.520
implementation detail.

01:01:21.520 --> 01:01:23.830
But all the same, let's
have a look at them.

01:01:23.830 --> 01:01:26.410
3D or perspective transform,
anybody use the

01:01:26.410 --> 01:01:27.430
node transform hack?

01:01:27.430 --> 01:01:29.650
Anybody translate z happy?

01:01:29.650 --> 01:01:30.490
Yeah?

01:01:30.490 --> 01:01:31.130
Work for you?

01:01:31.130 --> 01:01:31.560
Good.

01:01:31.560 --> 01:01:33.860
OK, that's the classic one.

01:01:33.860 --> 01:01:36.330
Video elements, canvas elements,
composited plugins,

01:01:36.330 --> 01:01:40.150
like Flash or Silverlight,
an animation on opacity,

01:01:40.150 --> 01:01:40.960
interesting.

01:01:40.960 --> 01:01:44.900
Transform filters, like Blur
and all those ones.

01:01:44.900 --> 01:01:46.360
And then the last one,
which are my Next

01:01:46.360 --> 01:01:47.260
and Previous buttons.

01:01:47.260 --> 01:01:50.760
Those are rendered on top
of another layer.

01:01:50.760 --> 01:01:51.930
So those are the ones.

01:01:51.930 --> 01:01:54.100
You could imagine that we
might add some more.

01:01:54.100 --> 01:01:56.440
We might.

01:01:56.440 --> 01:01:57.780
So the last little part--
and this is the

01:01:57.780 --> 01:01:58.970
website from tonight--

01:01:58.970 --> 01:02:03.500
is to actually take those
rastered images and send them

01:02:03.500 --> 01:02:04.270
across the GPU.

01:02:04.270 --> 01:02:05.960
Now, the thing to bear in mind,
all that rasterization

01:02:05.960 --> 01:02:09.520
that we did was done actually
on the CPU.

01:02:09.520 --> 01:02:10.600
And when we do rasterization--

01:02:10.600 --> 01:02:11.750
this is a small detail.

01:02:11.750 --> 01:02:13.710
I just wanted to include it
for completeness' sake.

01:02:13.710 --> 01:02:16.550
We actually rasterize
into tiles.

01:02:16.550 --> 01:02:19.965
It doesn't make any difference
to us as developers, but I

01:02:19.965 --> 01:02:22.510
just like to include
it, I don't know.

01:02:22.510 --> 01:02:23.720
So there we go.

01:02:23.720 --> 01:02:26.470
That doesn't matter
for what we do.

01:02:26.470 --> 01:02:28.280
But we have the CPU.

01:02:28.280 --> 01:02:30.470
All this work so far has
happened on the CPU.

01:02:30.470 --> 01:02:32.460
So when people are talking about
hardware accelerated

01:02:32.460 --> 01:02:35.050
this and that, so far,
everything we've

01:02:35.050 --> 01:02:37.360
done was on the CPU.

01:02:37.360 --> 01:02:39.100
The last thing that we actually
end up doing at this

01:02:39.100 --> 01:02:42.440
point is sending those tiles
across to the GPU.

01:02:42.440 --> 01:02:43.830
Happy days.

01:02:43.830 --> 01:02:45.140
And that was a nice
simple animation.

01:02:45.140 --> 01:02:48.460
But the bandwidth between CPU
and GPU might be quite

01:02:48.460 --> 01:02:50.810
constrained, especially
on a mobile device.

01:02:50.810 --> 01:02:53.300
It's very easy to saturate
that link.

01:02:53.300 --> 01:02:57.130
And if you're doing a lot of
repainting, you're just

01:02:57.130 --> 01:02:59.240
sending a lot of stuff across
to the GPU, you

01:02:59.240 --> 01:03:00.680
might really struggle.

01:03:00.680 --> 01:03:02.320
So it's a finely
balanced thing.

01:03:02.320 --> 01:03:04.780
Anyway, that's going to show
up as composite layers.

01:03:04.780 --> 01:03:06.150
And finally--

01:03:06.150 --> 01:03:09.260
whoosh, there we go-- we end up
with something on screen.

01:03:09.260 --> 01:03:12.595
So now we know how you get from
the humble GET request

01:03:12.595 --> 01:03:16.760
all the way through to some
pixels on screen.

01:03:16.760 --> 01:03:20.510
So with that said, I am now
interested in the bit where we

01:03:20.510 --> 01:03:23.040
control the workload.

01:03:23.040 --> 01:03:24.080
I really want to ask
[PIRATE VOICE]

01:03:24.080 --> 01:03:25.960
are ye the captain
of yer ship?

01:03:25.960 --> 01:03:27.220
Aarrr!

01:03:27.220 --> 01:03:28.690
But I'm not going to.

01:03:28.690 --> 01:03:29.460
But we are.

01:03:29.460 --> 01:03:31.850
And so, seeing as we're in
control, let's talk about some

01:03:31.850 --> 01:03:33.210
millisecond stuff
for a second.

01:03:33.210 --> 01:03:36.570
Let's frame what we're
interested in.

01:03:36.570 --> 01:03:41.540
When a user interacts with your
site or your application,

01:03:41.540 --> 01:03:46.610
we have 100 milliseconds in
which to respond for that user

01:03:46.610 --> 01:03:49.070
to feel like it was an
instant response.

01:03:49.070 --> 01:03:51.730
If we take more than 100
milliseconds to respond to the

01:03:51.730 --> 01:03:55.820
user's interaction,
we have failed.

01:03:55.820 --> 01:03:57.480
They will notice.

01:03:57.480 --> 01:04:01.490
The second thing that we care
about is 16 milliseconds.

01:04:01.490 --> 01:04:06.090
If we're doing anything like
scrolling, or dragging, or

01:04:06.090 --> 01:04:08.860
anything that's regularly
animating and updating the

01:04:08.860 --> 01:04:11.990
screen, we have 16 milliseconds
in which to get

01:04:11.990 --> 01:04:13.760
all the work done.

01:04:13.760 --> 01:04:17.620
So this is just to frame our
argument here-- response time,

01:04:17.620 --> 01:04:19.990
100 milliseconds; frame
time, 16 milliseconds.

01:04:19.990 --> 01:04:21.265
OK?

01:04:21.265 --> 01:04:22.540
Bear that in mind.

01:04:22.540 --> 01:04:24.640
Now, all I'm going to do at
this point, as I said,

01:04:24.640 --> 01:04:26.000
normally, I'd show you
some DevTools.

01:04:26.000 --> 01:04:27.980
But I'm going to just talk about
some stuff you want to

01:04:27.980 --> 01:04:30.580
look at, some stuff you
need to be careful of.

01:04:30.580 --> 01:04:32.980
And then Paul will actually run
you through DevTools and

01:04:32.980 --> 01:04:36.100
the tools that are
available to you.

01:04:36.100 --> 01:04:39.340
Small style changes can have
big layout knock-ons.

01:04:39.340 --> 01:04:44.790
If you're, say, changing Body,
as I explained before, we have

01:04:44.790 --> 01:04:47.420
to re-layout everything.

01:04:47.420 --> 01:04:49.650
Huge deal if you're trying
to do that in an

01:04:49.650 --> 01:04:51.000
animation, for example.

01:04:51.000 --> 01:04:53.760
You decide you're going to
change some high-level

01:04:53.760 --> 01:04:57.510
element, like one or two
levels into the DOM,

01:04:57.510 --> 01:04:59.290
everything's probably going
to get recalculated.

01:04:59.290 --> 01:05:01.520
That will kill you in terms
of your frame rate.

01:05:04.390 --> 01:05:06.800
This is something of a common
misconception, that layout is

01:05:06.800 --> 01:05:09.630
somehow always triggered
by JavaScript.

01:05:09.630 --> 01:05:10.906
It's not.

01:05:10.906 --> 01:05:15.170
You can have a transition that's
in response to a hover.

01:05:15.170 --> 01:05:18.290
It's not done by JavaScript.

01:05:18.290 --> 01:05:21.180
But it's layouts all the same.

01:05:21.180 --> 01:05:22.920
And layout isn't painting.

01:05:22.920 --> 01:05:26.050
Now that you've been through
that pipeline with me, again,

01:05:26.050 --> 01:05:27.890
there's often a misunderstanding
the layout

01:05:27.890 --> 01:05:29.530
is, somehow, painting.

01:05:29.530 --> 01:05:32.890
But actually, if you do change
the position of something, we

01:05:32.890 --> 01:05:33.820
might need to repaint.

01:05:33.820 --> 01:05:35.300
And we'll have a look
at something that's

01:05:35.300 --> 01:05:37.710
doing that in a second.

01:05:37.710 --> 01:05:40.250
There's a thing that looks
a little bit like this.

01:05:40.250 --> 01:05:42.360
And the code, it doesn't really
matter too much what

01:05:42.360 --> 01:05:42.940
the code is doing.

01:05:42.940 --> 01:05:43.660
But I'll tell you
what it's doing

01:05:43.660 --> 01:05:44.910
anyway, just for a laugh.

01:05:44.910 --> 01:05:47.000
We're going through
some paragraphs.

01:05:47.000 --> 01:05:50.770
And we've got some other element
that we want to match

01:05:50.770 --> 01:05:53.610
the widths of all our
paragraphs to.

01:05:53.610 --> 01:05:56.640
So the first thing we do is we
ask for the width of this

01:05:56.640 --> 01:05:59.590
thing called "green block." Now,
we asked for its offset

01:05:59.590 --> 01:06:02.470
width, which causes Chrome--

01:06:02.470 --> 01:06:04.840
and, in fact, any web kit
or blink-based browser--

01:06:04.840 --> 01:06:07.490
to go off and do a
layout operation.

01:06:07.490 --> 01:06:11.130
Go, what's the width of the
green block, please?

01:06:11.130 --> 01:06:14.230
And then, we set the first
paragraph's width.

01:06:14.230 --> 01:06:16.200
And then we go through that loop
over, and over, and over,

01:06:16.200 --> 01:06:17.620
and over, and over again.

01:06:17.620 --> 01:06:19.760
And that is, effectively, read,
write, read, write,

01:06:19.760 --> 01:06:22.850
read, write, read, write,
read, write.

01:06:22.850 --> 01:06:24.680
And that's not a good thing.

01:06:24.680 --> 01:06:28.410
Because every single write
invalidates the previous read.

01:06:28.410 --> 01:06:31.220
This is called layout
thrashing.

01:06:31.220 --> 01:06:34.690
You do not want this in
your applications.

01:06:34.690 --> 01:06:36.085
What you wanted to do--

01:06:36.085 --> 01:06:37.260
there we go--

01:06:37.260 --> 01:06:40.780
was to ask for the width once.

01:06:40.780 --> 01:06:43.788
Read, write, write, write,
write, write.

01:06:43.788 --> 01:06:44.860
Happy days.

01:06:44.860 --> 01:06:46.150
Paint--

01:06:46.150 --> 01:06:47.730
show you this demo, right.

01:06:47.730 --> 01:06:49.910
There's this brilliant tool
called "show paint

01:06:49.910 --> 01:06:51.800
rectangles." If you're ever
wondering whether something's

01:06:51.800 --> 01:06:55.660
painting in Chrome,
that is your tool.

01:06:55.660 --> 01:06:57.660
And what's going to
happen is, see, I

01:06:57.660 --> 01:06:59.110
select some text, right?

01:06:59.110 --> 01:07:01.200
And you get this red
box around it.

01:07:01.200 --> 01:07:03.390
And that's, basically, Chrome
saying, I had to do some

01:07:03.390 --> 01:07:06.170
repainting here, Paul.

01:07:06.170 --> 01:07:08.270
Thanks, Chrome.

01:07:08.270 --> 01:07:09.880
I expected you to do
it, and you did.

01:07:09.880 --> 01:07:11.540
You're so reliable.

01:07:11.540 --> 01:07:14.150
Anyway, so what I've got is I've
got these buttons, and

01:07:14.150 --> 01:07:15.380
your scroll bar--

01:07:15.380 --> 01:07:17.220
that's getting repainted-- now,
I've got this button up

01:07:17.220 --> 01:07:19.050
here that says Animate.

01:07:19.050 --> 01:07:22.490
It is a highly realistic
animation.

01:07:22.490 --> 01:07:23.930
Look at this, woo!

01:07:23.930 --> 01:07:29.650
Now, the interesting thing here
is that this one big area

01:07:29.650 --> 01:07:31.800
needed repainting because we're

01:07:31.800 --> 01:07:32.920
moving everything inside.

01:07:32.920 --> 01:07:36.380
But we can also figure out
that they've all been

01:07:36.380 --> 01:07:40.040
flattened down to one surface,
one layer that we're actually

01:07:40.040 --> 01:07:41.060
painting into, right?

01:07:41.060 --> 01:07:42.950
So this is the thing that's
getting invalidated.

01:07:42.950 --> 01:07:44.650
It needs repainting.

01:07:44.650 --> 01:07:45.680
That might be slow.

01:07:45.680 --> 01:07:47.020
So we're quite smart.

01:07:47.020 --> 01:07:49.450
What we want to do is we're
going to use the translate z

01:07:49.450 --> 01:07:52.470
hack to isolate all
those boxes.

01:07:52.470 --> 01:07:55.480
And all we're doing is moving
them around, and the GPU is

01:07:55.480 --> 01:07:57.050
really good at just moving
stuff around.

01:07:57.050 --> 01:07:58.600
It's fantastic at it.

01:07:58.600 --> 01:07:59.340
So we're going to do that.

01:07:59.340 --> 01:07:59.700
There we go.

01:07:59.700 --> 01:08:02.210
Change them to black, just
so it's a bit easier.

01:08:02.210 --> 01:08:03.960
And then, you see, we're
not painting anymore.

01:08:03.960 --> 01:08:06.500
Because we painted them once,
all these layers.

01:08:06.500 --> 01:08:08.410
And then we just asked the
GPU to move them around.

01:08:08.410 --> 01:08:10.980
This is an awesome way of using
the translate z hack.

01:08:10.980 --> 01:08:12.120
I've come full circle.

01:08:12.120 --> 01:08:12.990
I used to hate it.

01:08:12.990 --> 01:08:16.310
Now I love it, just
for this reason.

01:08:16.310 --> 01:08:19.080
The danger that we
then have is--

01:08:19.080 --> 01:08:21.319
I'm just hovering over
it in this--

01:08:21.319 --> 01:08:23.250
animate the radii.

01:08:23.250 --> 01:08:27.149
Now, these boxes have a slightly
rounded corner.

01:08:27.149 --> 01:08:29.630
What I've got is I've got an
animation queued up that's

01:08:29.630 --> 01:08:34.200
going to change the border
radius of each of those boxes.

01:08:34.200 --> 01:08:35.899
Ready?

01:08:35.899 --> 01:08:37.424
Aa-aa-aa-aah!

01:08:37.424 --> 01:08:37.881
Daah!

01:08:37.881 --> 01:08:41.109
Look how much it crawls!

01:08:41.109 --> 01:08:46.810
So it's not always a good thing
to isolate everything

01:08:46.810 --> 01:08:48.390
and put a translate
z hack on it.

01:08:48.390 --> 01:08:51.310
Because you can end up creating
a lot of extra work

01:08:51.310 --> 01:08:54.120
if you end up having to paint
each one of these things.

01:08:54.120 --> 01:08:56.880
These all need rerasterizing.

01:08:56.880 --> 01:08:59.836
And then they all need copying
over to the GPU.

01:08:59.836 --> 01:09:01.439
Eeew!

01:09:01.439 --> 01:09:03.069
Should be what you feel.

01:09:03.069 --> 01:09:03.979
So this tool is amazing.

01:09:03.979 --> 01:09:04.819
When you want to figure out, is

01:09:04.819 --> 01:09:05.939
something getting repainted?

01:09:05.939 --> 01:09:07.380
What's getting repainted?

01:09:07.380 --> 01:09:09.470
Switch on that tool, have
a look at what goes red.

01:09:09.470 --> 01:09:12.479
If you see a big red flash
across your whole screen,

01:09:12.479 --> 01:09:14.319
you've probably got a problem.

01:09:14.319 --> 01:09:14.540
OK?

01:09:14.540 --> 01:09:17.260
So that's a good way
to find that out.

01:09:17.260 --> 01:09:20.380
So painting, avoid it.

01:09:20.380 --> 01:09:22.140
You can't avoid it on the first
time you page load.

01:09:22.140 --> 01:09:24.680
But you want to try
after that.

01:09:24.680 --> 01:09:27.569
You can promote elements
to isolate them.

01:09:27.569 --> 01:09:32.260
If you have one element that
is moving around and maybe

01:09:32.260 --> 01:09:34.529
does need repainting, promoting
it is, actually,

01:09:34.529 --> 01:09:36.439
often a really good way to just
make sure that nothing

01:09:36.439 --> 01:09:38.670
else has to be repainted
unnecessarily.

01:09:38.670 --> 01:09:41.990
But bear in mind that it can
also spoil other layers like I

01:09:41.990 --> 01:09:43.649
showed you with the Next
and Previous buttons.

01:09:43.649 --> 01:09:44.970
You just want to be
careful with it.

01:09:44.970 --> 01:09:47.830
Layers themselves do actually
have a knock-on effect for

01:09:47.830 --> 01:09:50.649
memory, the management, and the
transfer, as I mentioned.

01:09:50.649 --> 01:09:52.899
So just be careful with that.

01:09:52.899 --> 01:09:55.230
Often people say, well, how
many layers can I have?

01:09:55.230 --> 01:09:56.680
And there isn't a good
answer to that.

01:09:56.680 --> 01:09:59.110
Because it depends on the device
that you're talking

01:09:59.110 --> 01:10:01.540
about and whatever else you're
actually trying to do.

01:10:01.540 --> 01:10:05.620
So just profile it and see if
you can see how your frames

01:10:05.620 --> 01:10:09.130
per second's doing and respond
to that, really.

01:10:09.130 --> 01:10:12.900
Paint storms, we were debating
this term earlier, what it

01:10:12.900 --> 01:10:13.540
really means.

01:10:13.540 --> 01:10:15.070
What it really comes down to
is you wouldn't want to be

01:10:15.070 --> 01:10:16.950
caught in an actual storm.

01:10:16.950 --> 01:10:19.180
You don't want to be caught
in a paint storm, either.

01:10:19.180 --> 01:10:21.010
It's generally you're
doing paint that you

01:10:21.010 --> 01:10:21.835
shouldn't be doing.

01:10:21.835 --> 01:10:23.990
You're either painting too much,
or you're painting too

01:10:23.990 --> 01:10:25.980
often, all those
kind of things.

01:10:25.980 --> 01:10:29.052
It's just a nice name for saying
it's not what you want

01:10:29.052 --> 01:10:29.240
to be doing.

01:10:29.240 --> 01:10:30.630
You're doing too much paint.

01:10:30.630 --> 01:10:33.550
So don't do that.

01:10:33.550 --> 01:10:36.960
Interestingly, because the GPU
is exceptionally good at these

01:10:36.960 --> 01:10:40.110
things particularly, they often
don't cause paints.

01:10:40.110 --> 01:10:43.900
If you something, isolate an
element and then monkey around

01:10:43.900 --> 01:10:46.650
with it, so opacity and
transforms, we won't be

01:10:46.650 --> 01:10:46.910
repainting.

01:10:46.910 --> 01:10:48.460
Like those boxes, they
didn't repaint.

01:10:48.460 --> 01:10:49.340
Happy days.

01:10:49.340 --> 01:10:51.980
We all smiled a happy smile.

01:10:51.980 --> 01:10:55.580
Image decodes and resizes,
those are done on demand.

01:10:55.580 --> 01:10:58.180
So when we're rasterizing, we
hit one of those drawBitmap

01:10:58.180 --> 01:11:00.400
calls, we actually queue up
the decodes and resizes.

01:11:00.400 --> 01:11:03.970
So it can make for very
sporadic frame

01:11:03.970 --> 01:11:05.860
rates, let's call it.

01:11:05.860 --> 01:11:07.640
Because we do it on demand.

01:11:07.640 --> 01:11:10.680
So when something comes into
view that we need to

01:11:10.680 --> 01:11:12.270
rasterize, we go and
get the image.

01:11:12.270 --> 01:11:14.280
We decode it, which
could kill us.

01:11:14.280 --> 01:11:17.060
And for all intents
and purposes,

01:11:17.060 --> 01:11:18.660
that's not a good thing.

01:11:18.660 --> 01:11:23.540
So bear in mind that handling
images is expensive.

01:11:23.540 --> 01:11:26.390
You can't really avoid
images on the web.

01:11:26.390 --> 01:11:28.610
But just bear in mind that
handling them is expensive.

01:11:28.610 --> 01:11:29.970
So you want to see if
you can mitigate it.

01:11:29.970 --> 01:11:32.830
And one of the best ways to
do that is actually avoid

01:11:32.830 --> 01:11:34.190
resizing them when you can.

01:11:34.190 --> 01:11:37.380
And I say that, uh,
frustratedly.

01:11:37.380 --> 01:11:40.770
Because responsive web
design is A, popular

01:11:40.770 --> 01:11:43.050
and B, quite cool.

01:11:43.050 --> 01:11:48.250
But it does put a really heavy
tax on the browser.

01:11:48.250 --> 01:11:51.710
So if you're going to do it,
just know that there's a tax.

01:11:51.710 --> 01:11:55.020
And be happy to pay the tax.

01:11:55.020 --> 01:11:56.470
There you go.

01:11:56.470 --> 01:11:59.200
Now, requesting an animation
frame, if you've not come

01:11:59.200 --> 01:12:03.670
across it, when you are changing
things on-screen,

01:12:03.670 --> 01:12:06.460
please avoid these.

01:12:06.460 --> 01:12:11.880
They are not timed to the
browser's refresh cycle.

01:12:11.880 --> 01:12:14.110
So they will just run whenever
suits, and that could be at

01:12:14.110 --> 01:12:17.900
the worst possible time
for the browser.

01:12:17.900 --> 01:12:20.260
What you want to do is
use friendly green

01:12:20.260 --> 01:12:22.370
requestAnimationFrame.

01:12:22.370 --> 01:12:25.520
It's so helpful.

01:12:25.520 --> 01:12:27.690
Anybody use jQuery?

01:12:27.690 --> 01:12:28.290
Yeah?

01:12:28.290 --> 01:12:30.540
Anybody us jQuery animate?

01:12:30.540 --> 01:12:31.060
Yeah?

01:12:31.060 --> 01:12:31.955
OK.

01:12:31.955 --> 01:12:33.480
It currently uses
set interval.

01:12:33.480 --> 01:12:34.720
I would love that to change.

01:12:34.720 --> 01:12:36.950
In fact, I actually double
checked that

01:12:36.950 --> 01:12:38.440
from the jQuery source.

01:12:38.440 --> 01:12:41.430
It does use set interval.

01:12:41.430 --> 01:12:44.040
There are patches that you can
apply that then switch it back

01:12:44.040 --> 01:12:47.190
to requestAnimationframe, simple
enough thing to do.

01:12:47.190 --> 01:12:53.160
And it might be worth it for
your project if you are using

01:12:53.160 --> 01:12:55.670
jQuery animate, as
it stands today.

01:12:55.670 --> 01:12:58.000
Scrolling performs is a big,
big deal, actually.

01:12:58.000 --> 01:13:01.650
Because most the time, people
scroll on the web.

01:13:01.650 --> 01:13:02.900
Apparently, it happens
quite a lot.

01:13:05.030 --> 01:13:07.800
Scrolling then, it does
cause paints.

01:13:07.800 --> 01:13:12.190
Because as content becomes
visible, we have to rasterize.

01:13:12.190 --> 01:13:14.650
We have to paint that stuff.

01:13:14.650 --> 01:13:16.500
So we want to make sure
that when we do it,

01:13:16.500 --> 01:13:17.760
we keep things light.

01:13:22.340 --> 01:13:25.060
The easiest thing to do
with scrolling is

01:13:25.060 --> 01:13:26.310
to avoid doing anything.

01:13:29.110 --> 01:13:31.180
There's a really good one,
actually, that you might want

01:13:31.180 --> 01:13:32.430
to look at.

01:13:34.900 --> 01:13:36.010
It doesn't take too
much imagination.

01:13:36.010 --> 01:13:39.200
If you were scrolling through
and you trigger a hover on an

01:13:39.200 --> 01:13:42.730
element, as you're scrolling,
then we have to repaint the

01:13:42.730 --> 01:13:43.890
thing that you hovered.

01:13:43.890 --> 01:13:45.900
Then you keep scrolling,
and you hover out.

01:13:45.900 --> 01:13:47.730
And we have to repaint the thing
that you now hovered

01:13:47.730 --> 01:13:50.550
out, just because you were
scrolling past it.

01:13:50.550 --> 01:13:53.720
Now, if your hover effects are
really expensive, that's going

01:13:53.720 --> 01:13:54.640
to be awful.

01:13:54.640 --> 01:13:59.740
What you want to do is you want
to, basically, switch off

01:13:59.740 --> 01:14:01.180
anything changing.

01:14:01.180 --> 01:14:03.820
So you basically add a class
or something that basically

01:14:03.820 --> 01:14:07.580
switches off hover effects
while your scrolling.

01:14:07.580 --> 01:14:08.540
You know, waste a little
bit of time.

01:14:08.540 --> 01:14:09.880
Then switch them
back on again.

01:14:09.880 --> 01:14:10.380
Happy days.

01:14:10.380 --> 01:14:11.770
There's a "HTML5 Rocks"
article about

01:14:11.770 --> 01:14:13.710
that, that I wrote.

01:14:13.710 --> 01:14:14.898
Pretty good.

01:14:14.898 --> 01:14:16.140
[LAUGHTER]

01:14:16.140 --> 01:14:17.780
PAUL LEWIS: I, mean
the idea is good.

01:14:17.780 --> 01:14:18.415
It wasn't my idea.

01:14:18.415 --> 01:14:19.180
I just wrote it up.

01:14:19.180 --> 01:14:22.840
Anyway, debounce scroll
handlers.

01:14:22.840 --> 01:14:25.090
What do you possibly
mean, Paul?

01:14:25.090 --> 01:14:27.130
I mean this.

01:14:27.130 --> 01:14:31.680
If you aren't a scroll listener
to your window, in

01:14:31.680 --> 01:14:36.090
this case, don't do anything
inside that scroll handler.

01:14:36.090 --> 01:14:39.710
Please, for the love of all that
is decent, don't do it.

01:14:39.710 --> 01:14:42.020
What you do, store the
value if you need to.

01:14:42.020 --> 01:14:42.450
Great.

01:14:42.450 --> 01:14:43.320
Super.

01:14:43.320 --> 01:14:45.950
And then schedule a
requestAnimationFrame to

01:14:45.950 --> 01:14:48.180
handle the scroll, the
thing that happened.

01:14:48.180 --> 01:14:51.860
Because you could get 5,
10, 20 of these events.

01:14:51.860 --> 01:14:53.790
But really, you probably
only want one.

01:14:53.790 --> 01:14:56.140
You want the last one, most
likely, to know the current

01:14:56.140 --> 01:14:59.293
scroll position because you're
doing a parallax site.

01:14:59.293 --> 01:15:01.650
[LAUGHTER]

01:15:01.650 --> 01:15:03.844
PAUL LEWIS: What?

01:15:03.844 --> 01:15:05.250
Whoo!

01:15:05.250 --> 01:15:07.528
Just because it's cool, doesn't
mean it's right.

01:15:07.528 --> 01:15:09.768
[LAUGHTER]

01:15:09.768 --> 01:15:11.190
PAUL LEWIS: Just throw
that out there,

01:15:11.190 --> 01:15:13.940
if anybody's listening.

01:15:13.940 --> 01:15:16.230
OK, last thing I want to do--

01:15:16.230 --> 01:15:18.230
because we're running low on
time-- is just do a little bit

01:15:18.230 --> 01:15:20.330
of myth-busting.

01:15:20.330 --> 01:15:21.890
JavaScript, you'll
notice I haven't

01:15:21.890 --> 01:15:23.390
talked about it at all.

01:15:23.390 --> 01:15:25.300
You, maybe, thought
I would, right?

01:15:25.300 --> 01:15:27.310
Because when we're not talking
about page load time, we're

01:15:27.310 --> 01:15:31.870
talking about JavaScript and how
slow it is and horrible.

01:15:31.870 --> 01:15:33.230
But it's not, actually.

01:15:33.230 --> 01:15:35.150
Work is often triggered
by your JavaScript.

01:15:35.150 --> 01:15:38.385
You maybe changed your class
with dot class name, or class

01:15:38.385 --> 01:15:40.260
list, or something, whatever.

01:15:40.260 --> 01:15:41.730
It's often triggered
by JavaScript.

01:15:41.730 --> 01:15:44.690
But the work that's actually
running is often

01:15:44.690 --> 01:15:45.690
carried out in C++.

01:15:45.690 --> 01:15:48.020
Layout is not done
in JavaScript.

01:15:48.020 --> 01:15:48.995
Layout is done in C++.

01:15:48.995 --> 01:15:51.410
It's done lower down.

01:15:51.410 --> 01:15:52.790
So bear that in mind.

01:15:52.790 --> 01:15:54.670
And slow JavaScript--

01:15:54.670 --> 01:15:57.370
you know, this idea that,
oh, JavaScript is slow.

01:15:57.370 --> 01:15:59.010
And that's why the mobile
web is slow.

01:15:59.010 --> 01:16:03.040
No, it's not actually the
reason most of the time.

01:16:03.040 --> 01:16:04.530
Because it's not JavaScript
that's actually running.

01:16:04.530 --> 01:16:06.230
It's the other stuff that's
inside the browser that's

01:16:06.230 --> 01:16:07.050
actually running.

01:16:07.050 --> 01:16:08.660
Unless you're making
a game or--

01:16:08.660 --> 01:16:11.460
there are classes of
applications that do rely on

01:16:11.460 --> 01:16:14.120
JavaScript quite heavily.

01:16:14.120 --> 01:16:16.290
I do want to say that I'd like
you to start treating

01:16:16.290 --> 01:16:22.340
JavaScript benchmarks with deep,
unyielding cynicism.

01:16:22.340 --> 01:16:25.770
Because JavaScript probably
isn't your bottleneck.

01:16:25.770 --> 01:16:27.410
Layout probably is
your bottleneck.

01:16:27.410 --> 01:16:30.260
Paint is probably
your bottleneck.

01:16:30.260 --> 01:16:33.430
So you know, if you start
seeing, oh, it's really fast--

01:16:33.430 --> 01:16:35.100
with JavaScript.

01:16:35.100 --> 01:16:37.700
Yay!

01:16:37.700 --> 01:16:39.630
And then, the other thing
is, the DOM is slow.

01:16:39.630 --> 01:16:43.160
You hear this one quite a lot
for fairly similar reasons to

01:16:43.160 --> 01:16:44.460
the last, actually.

01:16:44.460 --> 01:16:46.060
Interacting with the
DOM is, actually,

01:16:46.060 --> 01:16:48.270
quite fast, as it happens.

01:16:48.270 --> 01:16:52.440
The problem is that changes to
the DOM probably incur changes

01:16:52.440 --> 01:16:56.050
that are layout or vCalc
style, layout, paint,

01:16:56.050 --> 01:16:57.120
composite--

01:16:57.120 --> 01:16:58.450
misery.

01:16:58.450 --> 01:17:00.340
So be careful.

01:17:00.340 --> 01:17:03.740
Now, going forth, aim for
60 frames per second.

01:17:03.740 --> 01:17:06.340
It is well and truly
achievable.

01:17:06.340 --> 01:17:07.950
You control the browser's
workload.

01:17:07.950 --> 01:17:09.985
You are, in fact, the
ship's captain.

01:17:09.985 --> 01:17:13.130
--I brought it round.

01:17:13.130 --> 01:17:14.170
Performance is a feature.

01:17:14.170 --> 01:17:15.910
It's not a unit test.

01:17:15.910 --> 01:17:16.940
It's not something, you
get to the end of the

01:17:16.940 --> 01:17:18.820
project, am I fast?

01:17:18.820 --> 01:17:20.409
No.

01:17:20.409 --> 01:17:22.935
Aah, ship anyway.

01:17:22.935 --> 01:17:23.870
Nobody will notice.

01:17:23.870 --> 01:17:25.170
Wait until they complain.

01:17:25.170 --> 01:17:27.330
That's what we'll do.

01:17:27.330 --> 01:17:30.590
No, think of it, put
it on the list.

01:17:30.590 --> 01:17:32.350
It might be two, three,
four, but make

01:17:32.350 --> 01:17:33.460
sure it's on the list.

01:17:33.460 --> 01:17:35.420
Ideally, put it number one.

01:17:35.420 --> 01:17:36.080
I do.

01:17:36.080 --> 01:17:37.620
I love that.

01:17:37.620 --> 01:17:39.620
Profile, then fix.

01:17:39.620 --> 01:17:41.630
A lot of times you'll
read things that are

01:17:41.630 --> 01:17:42.640
like, this is fast.

01:17:42.640 --> 01:17:44.390
Do this.

01:17:44.390 --> 01:17:45.050
And that's fine.

01:17:45.050 --> 01:17:46.310
Sometimes you need to do that.

01:17:46.310 --> 01:17:49.600
But you end up writing things
that don't fix the problem

01:17:49.600 --> 01:17:50.480
you've got.

01:17:50.480 --> 01:17:53.095
You end up writing something
that makes Paint better.

01:17:53.095 --> 01:17:55.060
But you've got a
layout problem.

01:17:55.060 --> 01:17:56.510
Profile, use DevTools.

01:17:56.510 --> 01:17:58.230
Paul will show you how.

01:17:58.230 --> 01:17:59.280
Profile your stuff.

01:17:59.280 --> 01:18:00.430
Figure out where you're
actually slow.

01:18:00.430 --> 01:18:01.880
Then fix that thing.

01:18:01.880 --> 01:18:03.320
Sounds simple enough,
because it is.

01:18:03.320 --> 01:18:04.160
Profile early.

01:18:04.160 --> 01:18:05.910
Profile often.

01:18:05.910 --> 01:18:06.970
Smile a happy smile.

01:18:06.970 --> 01:18:08.560
Do it.

01:18:08.560 --> 01:18:10.104
Thanks.

01:18:10.104 --> 01:18:19.950
[APPLAUSE]

01:18:19.950 --> 01:18:21.090
PAUL LEWIS: Time for
a break, isn't it?

01:18:21.090 --> 01:18:22.242
Yes.

01:18:22.242 --> 01:18:25.074
PETER LUBBERS: Paul, thank
you for speaking.

01:18:25.074 --> 01:18:26.962
Here's our San Francisco
HTML5 speaker gifts.

01:18:26.962 --> 01:18:27.910
PAUL LEWIS: Oh, cool.

01:18:27.910 --> 01:18:28.855
PETER LUBBERS: Original
painting--

01:18:28.855 --> 01:18:29.956
PAUL LEWIS: Well,
thank you all.

01:18:29.956 --> 01:18:30.330
FEMALE SPEAKER: And
here you go.

01:18:30.330 --> 01:18:31.330
PETER LUBBERS: And a
little bit more.

01:18:31.330 --> 01:18:34.090
PAUL LEWIS: Thank
you very much.

01:18:34.090 --> 01:18:36.090
PETER LUBBERS: All right,
thanks, everybody.

01:18:36.090 --> 01:18:37.410
We have a break.

01:18:37.410 --> 01:18:41.910
We need to be back here, seated,
around 8:00, not too

01:18:41.910 --> 01:18:44.700
much later to keep
on schedule.

01:18:44.700 --> 01:18:46.030
We have dessert out.

01:18:46.030 --> 01:18:49.730
We have more wine, beer,
the sponsor tables.

01:18:49.730 --> 01:18:52.530
Check it out.

01:18:52.530 --> 01:18:55.056
Enjoy.

01:18:55.056 --> 01:38:32.120
[MUSIC PLAYING]

01:38:32.120 --> 01:38:33.958
PETER LUBBERS: --announcement
by Glorianne.

01:38:33.958 --> 01:38:36.870
GLORIANNE: OK.

01:38:36.870 --> 01:38:37.945
MALE SPEAKER: Testing, testing,
one, two, three.

01:38:37.945 --> 01:38:39.900
GLORIANNE: So hi, everyone!

01:38:39.900 --> 01:38:41.350
It's Vitamin T again.

01:38:41.350 --> 01:38:43.330
And just want to make
an announcement

01:38:43.330 --> 01:38:45.610
about the GoPro camera.

01:38:45.610 --> 01:38:51.075
So this drawing is separate
from everything else.

01:38:51.075 --> 01:38:53.610
You have to give us a business
card in order to be

01:38:53.610 --> 01:38:54.280
considered.

01:38:54.280 --> 01:38:56.320
We weren't part of the
whole ticket thing.

01:38:56.320 --> 01:38:58.970
So it's not going to rely on the
ticket that you received.

01:38:58.970 --> 01:39:00.020
It's a business card.

01:39:00.020 --> 01:39:02.880
So if you haven't dropped
off a business

01:39:02.880 --> 01:39:04.890
card, yet, please do.

01:39:04.890 --> 01:39:05.590
[? Ani ?]

01:39:05.590 --> 01:39:09.910
and Ariel are walking around
with containers.

01:39:09.910 --> 01:39:12.180
So you can drop it in if you
want to be considered.

01:39:12.180 --> 01:39:15.400
The odds, right now, look like
they're 100 to one, for a

01:39:15.400 --> 01:39:17.140
GoPro camera.

01:39:17.140 --> 01:39:20.370
So if you want to get
in the drawing,

01:39:20.370 --> 01:39:21.890
please, drop off a card.

01:39:21.890 --> 01:39:23.822
All right, thanks.

01:39:23.822 --> 01:39:24.286
PETER LUBBERS: Thank you.

01:39:24.286 --> 01:39:25.680
All right.

01:39:25.680 --> 01:39:28.900
So next up, a quick announcement
about the

01:39:28.900 --> 01:39:30.690
Bountysource project.

01:39:30.690 --> 01:39:32.305
You want to take it away?

01:39:32.305 --> 01:39:33.890
Great, thanks, Warren.

01:39:33.890 --> 01:39:34.610
WARREN KONKEL: Hello.

01:39:34.610 --> 01:39:35.550
My name is Warren.

01:39:35.550 --> 01:39:38.510
I'm one of the founders
of Bountysource.

01:39:38.510 --> 01:39:41.080
Bountysource is a crowdfunding
platform

01:39:41.080 --> 01:39:42.410
for open-source software.

01:39:42.410 --> 01:39:45.420
So you can basically come to
the site and you can place

01:39:45.420 --> 01:39:49.770
bounties using Google Wallet,
Paypal, et cetera, on GitHub

01:39:49.770 --> 01:39:53.045
issues, Bugzilla issues, Track
issues, and so on.

01:39:53.045 --> 01:39:55.240
And so, if you're a developer
looking to earn some extra

01:39:55.240 --> 01:39:57.970
beer money or quit your job
and work full-time on open

01:39:57.970 --> 01:39:59.980
source, Bountysource
is actually a great

01:39:59.980 --> 01:40:01.520
platform to do so.

01:40:01.520 --> 01:40:06.310
We work with GitHub, Track,
Bugzilla, all those platforms.

01:40:06.310 --> 01:40:08.770
We also have fundraisers,
kind of similar to

01:40:08.770 --> 01:40:10.140
how Kickstarter works.

01:40:10.140 --> 01:40:13.180
But exclusively for open-source
software.

01:40:13.180 --> 01:40:15.000
We've worked with some
large companies

01:40:15.000 --> 01:40:17.250
like Adobe and Mozilla.

01:40:17.250 --> 01:40:18.930
And we're growing quickly.

01:40:18.930 --> 01:40:22.120
So definitely, come
check us out.

01:40:22.120 --> 01:40:25.790
We also just launched a new
feature called "teams." So if

01:40:25.790 --> 01:40:28.100
you're part of a company and
you want to give your

01:40:28.100 --> 01:40:30.910
developers a budget, or you're a
developer and want to have a

01:40:30.910 --> 01:40:34.860
budget for yourself to go spend
on bounties, and bug

01:40:34.860 --> 01:40:38.930
fixes, and so on, ask your
managers or your co-workers to

01:40:38.930 --> 01:40:40.760
come check out Bountysource.

01:40:40.760 --> 01:40:44.800
You can basically allocate
$1,000 to a team.

01:40:44.800 --> 01:40:45.780
And members can come in.

01:40:45.780 --> 01:40:47.630
And when they get a bug,
instead of fixing it

01:40:47.630 --> 01:40:50.920
themselves, they can go
create a bounty on it.

01:40:50.920 --> 01:40:52.190
Anyways, thank you very much.

01:40:52.190 --> 01:40:54.090
If you want to come talk to us,
we're all wearing green

01:40:54.090 --> 01:40:56.470
T-shirts that say
Bountysource.

01:40:56.470 --> 01:40:58.650
Thank you all for coming
out tonight.

01:40:58.650 --> 01:40:59.130
[APPLAUSE]

01:40:59.130 --> 01:41:01.050
PETER LUBBERS: Thank you.

01:41:01.050 --> 01:41:02.600
All right.

01:41:02.600 --> 01:41:03.090
OK.

01:41:03.090 --> 01:41:05.470
So our talk is now starting.

01:41:05.470 --> 01:41:08.790
So Jake Archibald, also here,
all the way from the UK.

01:41:08.790 --> 01:41:10.590
We're really happy
to have him here.

01:41:10.590 --> 01:41:12.900
He's a developer programs
engineer in the Chrome

01:41:12.900 --> 01:41:14.640
Developer Relations team.

01:41:14.640 --> 01:41:18.220
And before working at Google,
he worked at Lanyrd and

01:41:18.220 --> 01:41:20.980
basically made that whole
site work well

01:41:20.980 --> 01:41:22.680
offline, which is amazing.

01:41:22.680 --> 01:41:25.300
You may know him from his
douche-bag article.

01:41:25.300 --> 01:41:26.152
JAKE ARCHIBALD: Ah!

01:41:26.152 --> 01:41:26.940
I'm going to shake that.

01:41:26.940 --> 01:41:28.880
I need to shake that.

01:41:28.880 --> 01:41:30.670
Hey, you're the douche-bag
guy.

01:41:30.670 --> 01:41:32.160
Thanks, everyone.

01:41:32.160 --> 01:41:34.140
PETER LUBBERS: I can assure you,
he's not a douche-bag.

01:41:34.140 --> 01:41:34.635
JAKE ARCHIBALD: [LAUGHS].

01:41:34.635 --> 01:41:35.130
PETER LUBBERS: All right.

01:41:35.130 --> 01:41:36.630
So thank you, Jake.

01:41:36.630 --> 01:41:39.490
JAKE ARCHIBALD: Hey,
excellent.

01:41:39.490 --> 01:41:41.620
OK, people at the back,
how is that?

01:41:41.620 --> 01:41:43.010
People at the back,
can you hear me?

01:41:43.010 --> 01:41:43.330
Yeah?

01:41:43.330 --> 01:41:43.620
AUDIENCE: Yeah.

01:41:43.620 --> 01:41:44.110
JAKE ARCHIBALD: Is that good?

01:41:44.110 --> 01:41:44.370
Excellent.

01:41:44.370 --> 01:41:45.630
I'll try and keep
this volume up.

01:41:45.630 --> 01:41:48.020
Wave if I let up, OK.

01:41:48.020 --> 01:41:50.610
So I'm going to try
out something

01:41:50.610 --> 01:41:52.120
a little bit different.

01:41:52.120 --> 01:41:53.730
And it depends on the
Wi-Fi working.

01:41:53.730 --> 01:41:54.730
It's been a bit of
a nightmare.

01:41:54.730 --> 01:41:56.580
It's probably a stupid idea.

01:41:56.580 --> 01:41:57.260
So let's find out.

01:41:57.260 --> 01:41:59.240
We're going to do an
interactive quiz.

01:41:59.240 --> 01:42:00.670
These slides are going
to be interactive.

01:42:00.670 --> 01:42:03.890
So if you don't have a
web-enabled device in front of

01:42:03.890 --> 01:42:05.940
you now, get it in
front of you.

01:42:05.940 --> 01:42:08.450
A laptop or a phone, it
will work on both.

01:42:08.450 --> 01:42:11.580
But make sure you've
got that ready.

01:42:11.580 --> 01:42:12.010
It's a quiz.

01:42:12.010 --> 01:42:14.560
But it's really just an excuse
to string together some bits

01:42:14.560 --> 01:42:18.510
of browser trivia to relate
it to performance stuff.

01:42:18.510 --> 01:42:20.965
So what you'll need to do is get
on the Google guest Wi-Fi.

01:42:20.965 --> 01:42:23.530
That's the SSID there.

01:42:23.530 --> 01:42:25.260
And then if you go to this
lovely URL, which

01:42:25.260 --> 01:42:26.440
is my laptop here.

01:42:26.440 --> 01:42:31.390
So that's 192.168.156.69,
port 3,000.

01:42:31.390 --> 01:42:32.260
And there's a clue.

01:42:32.260 --> 01:42:33.270
Yes, it's a node server.

01:42:33.270 --> 01:42:34.640
Very nice.

01:42:34.640 --> 01:42:36.890
Yeah, if you're watching
the live stream, nah.

01:42:36.890 --> 01:42:37.670
That's not going to work.

01:42:37.670 --> 01:42:38.130
Sorry.

01:42:38.130 --> 01:42:41.110
Just play the game using
your mind or whatever.

01:42:41.110 --> 01:42:41.890
Just play with yourself.

01:42:41.890 --> 01:42:42.340
No.

01:42:42.340 --> 01:42:42.570
Wait.

01:42:42.570 --> 01:42:43.170
It doesn't matter.

01:42:43.170 --> 01:42:44.810
OK, move on.

01:42:44.810 --> 01:42:46.820
Once you go to this URL, you'll
be asked to enter a

01:42:46.820 --> 01:42:48.730
username and password.

01:42:48.730 --> 01:42:51.420
Just make up any old password.

01:42:51.420 --> 01:42:53.620
It's going to be stored in
plain text on my machine.

01:42:53.620 --> 01:42:56.250
So don't use your credit card
number unless you wish to make

01:42:56.250 --> 01:42:57.210
a donation.

01:42:57.210 --> 01:42:59.850
All donations are gratefully
received.

01:42:59.850 --> 01:43:01.760
The reason I'm asking for a
password is if you want to

01:43:01.760 --> 01:43:03.310
switch devices halfway through,
like you start

01:43:03.310 --> 01:43:05.545
running out of batteries or
whatever, you can just enter

01:43:05.545 --> 01:43:07.590
the username and password again
on another device and

01:43:07.590 --> 01:43:10.660
pick up from where
you left off.

01:43:10.660 --> 01:43:14.010
Now, I hacked this thing
together quite quickly.

01:43:14.010 --> 01:43:16.850
You could probably break it
by trying to break it.

01:43:16.850 --> 01:43:19.580
So please, don't do that.

01:43:19.580 --> 01:43:22.000
I've at least made sure our
Little Bobby Tables can play.

01:43:22.000 --> 01:43:25.670
So if you're in the room,
you're all right.

01:43:25.670 --> 01:43:27.230
Is everyone getting
access to it?

01:43:27.230 --> 01:43:28.410
It's kind of working?

01:43:28.410 --> 01:43:29.630
Wow, brilliant.

01:43:29.630 --> 01:43:30.990
I want to stress that
this quiz is tough.

01:43:30.990 --> 01:43:33.500
And I've seen it catch out
people who do this sort of

01:43:33.500 --> 01:43:36.660
stuff, this minor details of
browsers for a living, and it

01:43:36.660 --> 01:43:37.330
catches them out.

01:43:37.330 --> 01:43:40.100
So if you're the kind of person
who flips tables over

01:43:40.100 --> 01:43:43.130
when you don't win, then maybe
stay away from tables for a

01:43:43.130 --> 01:43:45.980
little bit because this
could get rough.

01:43:45.980 --> 01:43:47.990
OK, I'm going to get this huge,
horrible, Helvetica off

01:43:47.990 --> 01:43:48.490
the screen.

01:43:48.490 --> 01:43:51.940
Oh, of course, what kind of quiz
would be complete without

01:43:51.940 --> 01:43:53.450
a grand prize?

01:43:53.450 --> 01:43:53.900
[IMITATING GAME SHOW
ANNOUNCER]

01:43:53.900 --> 01:43:56.680
The Chromebook Pixel is Google's
latest laptop,

01:43:56.680 --> 01:44:01.620
featuring an i5 1.8 gigahertz
processor, 4 gigabytes of RAM,

01:44:01.620 --> 01:44:04.970
and the touchscreen with a
higher DPI than a MacBook Pro.

01:44:04.970 --> 01:44:06.310
Couldn't get a hold
of one of those.

01:44:06.310 --> 01:44:06.755
Sorry--

01:44:06.755 --> 01:44:07.200
[LAUGHTER]

01:44:07.200 --> 01:44:08.840
JAKE ARCHIBALD: --they
wouldn't give me one.

01:44:08.840 --> 01:44:10.240
Never mind.

01:44:10.240 --> 01:44:12.800
But if you do win, then
we will swag you.

01:44:12.800 --> 01:44:14.195
We will swag you good.

01:44:14.195 --> 01:44:15.895
[LAUGHTER]

01:44:15.895 --> 01:44:20.480
[CHEERS AND APPLAUSE]

01:44:20.480 --> 01:44:21.790
JAKE ARCHIBALD: You're all
quite dazzled by that.

01:44:21.790 --> 01:44:25.220
I thought you might not, so I
thought I'd go all in and,

01:44:25.220 --> 01:44:26.010
like, yeah!

01:44:26.010 --> 01:44:26.830
Look at that stuff!

01:44:26.830 --> 01:44:28.730
A neon thing, a glass.

01:44:28.730 --> 01:44:29.760
Have you see one of
those before?

01:44:29.760 --> 01:44:31.100
And a cup, brilliant.

01:44:31.100 --> 01:44:31.770
OK.

01:44:31.770 --> 01:44:33.230
The lens flares are
sold separately.

01:44:33.230 --> 01:44:33.830
Sorry about that.

01:44:33.830 --> 01:44:34.280
[LAUGHTER]

01:44:34.280 --> 01:44:37.320
JAKE ARCHIBALD: Let's
get started.

01:44:37.320 --> 01:44:39.220
We're going to start off really
simple, like images in

01:44:39.220 --> 01:44:39.910
HTML right?

01:44:39.910 --> 01:44:40.830
You've done that before.

01:44:40.830 --> 01:44:42.300
Fair enough.

01:44:42.300 --> 01:44:45.230
OK, here is a div.

01:44:45.230 --> 01:44:49.660
The div has a source,
like an image might.

01:44:49.660 --> 01:44:51.320
Which browsers do you think
are going to make

01:44:51.320 --> 01:44:52.560
a request for that?

01:44:52.560 --> 01:44:55.010
Now, on your phones and your
laptops, at the moment, it

01:44:55.010 --> 01:44:57.360
should have given you the
options for this question.

01:44:57.360 --> 01:44:59.070
If it hasn't, just
hit refresh.

01:44:59.070 --> 01:45:00.260
And you should get them.

01:45:00.260 --> 01:45:02.390
Now, when we we're talking about
these browsers, we're

01:45:02.390 --> 01:45:04.490
talking about the latest version
of them, the latest

01:45:04.490 --> 01:45:05.700
stable release.

01:45:05.700 --> 01:45:08.730
You get one point for each
one you get right.

01:45:08.730 --> 01:45:10.690
And you will lose a point for
each one you get wrong.

01:45:10.690 --> 01:45:13.560
So if you say Firefox doesn't
make a request, and it does,

01:45:13.560 --> 01:45:15.600
you will lose a point there.

01:45:15.600 --> 01:45:17.210
You can assume the
HTML5 doc type.

01:45:17.210 --> 01:45:19.830
And there's nothing funky in the
head, like a base tag that

01:45:19.830 --> 01:45:22.420
might throw things off.

01:45:22.420 --> 01:45:24.410
There's no trickery going on.

01:45:24.410 --> 01:45:27.990
And what you're seeing here is a
live read out of the opinion

01:45:27.990 --> 01:45:28.690
of the room.

01:45:28.690 --> 01:45:30.700
So the needle will swing one
way when you think yes.

01:45:30.700 --> 01:45:32.830
It will swing the other way when
you think no, although

01:45:32.830 --> 01:45:35.120
the direction is randomized
for each question.

01:45:35.120 --> 01:45:37.820
So you cannot just go
along with the room.

01:45:37.820 --> 01:45:41.230
You will be probably getting
it wrong if you do that.

01:45:41.230 --> 01:45:41.580
All right.

01:45:41.580 --> 01:45:42.980
OK, that's probably
enough time.

01:45:42.980 --> 01:45:44.550
If you haven't answered,
yet, answer quickly.

01:45:44.550 --> 01:45:48.050
Because I'm going to close the
question in three, two, one.

01:45:48.050 --> 01:45:50.780
And OK, so the needle's going
roughly in the middle, which

01:45:50.780 --> 01:45:52.510
means collectively you
don't have a clue.

01:45:52.510 --> 01:45:53.380
Well done, everyone.

01:45:53.380 --> 01:45:54.550
[LAUGHTER]

01:45:54.550 --> 01:45:56.880
JAKE ARCHIBALD: You were kind
of thinking, yes in--

01:45:56.880 --> 01:45:59.250
well, most of the browsers,
kind of more strongly in

01:45:59.250 --> 01:45:59.990
Internet Explorer.

01:45:59.990 --> 01:46:01.300
It's almost like you'd
been bitten by that

01:46:01.300 --> 01:46:02.520
browser in the past.

01:46:02.520 --> 01:46:03.620
[LAUGHTER]

01:46:03.620 --> 01:46:07.056
JAKE ARCHIBALD: The answer
is, of course, no.

01:46:07.056 --> 01:46:09.200
Not in any of the browsers.

01:46:09.200 --> 01:46:10.670
None of them are going
to do that.

01:46:10.670 --> 01:46:12.450
Well done, the people that got
it right, four people by the

01:46:12.450 --> 01:46:13.010
sounds of things.

01:46:13.010 --> 01:46:13.080
[LAUGHTER]

01:46:13.080 --> 01:46:14.320
JAKE ARCHIBALD: Excellent,
well done.

01:46:14.320 --> 01:46:16.790
But this is not as
mad as it seems.

01:46:16.790 --> 01:46:18.740
So in XHTML2, you
could do this.

01:46:18.740 --> 01:46:21.780
You could have any elements,
such as a div with a source,

01:46:21.780 --> 01:46:24.830
and the browser would replace
that element with the content

01:46:24.830 --> 01:46:25.640
of that resource.

01:46:25.640 --> 01:46:26.900
And it was kind of
a good idea.

01:46:26.900 --> 01:46:28.750
It was the start of a good idea
because you could take

01:46:28.750 --> 01:46:31.180
rich semantic content and
replace it with an image.

01:46:31.180 --> 01:46:34.550
It made the Alt attribute
completely redundant.

01:46:34.550 --> 01:46:35.350
Pretty cool.

01:46:35.350 --> 01:46:39.080
But XHTML2 had the backwards
incompatibility issues.

01:46:39.080 --> 01:46:41.720
And it carried with it XML's
Draconian error-handling.

01:46:41.720 --> 01:46:44.940
And once you invite XML into
your home, it XMLs everything.

01:46:44.940 --> 01:46:47.470
It XMLs all over the carpet,
up the walls.

01:46:47.470 --> 01:46:47.930
[LAUGHTER]

01:46:47.930 --> 01:46:49.720
JAKE ARCHIBALD: And in the same
way that smurfs stick the

01:46:49.720 --> 01:46:51.980
word "smurf" in front of
everything to make it a smurf

01:46:51.980 --> 01:46:55.050
thing, XML sticks X at the
start of everything.

01:46:55.050 --> 01:46:56.470
You don't want HTML.

01:46:56.470 --> 01:46:58.130
You want XHTML.

01:46:58.130 --> 01:46:59.340
You don't want frames.

01:46:59.340 --> 01:47:01.030
You want Xframes.

01:47:01.030 --> 01:47:01.400
[LAUGHTER]

01:47:01.400 --> 01:47:02.510
JAKE ARCHIBALD: You
don't want forms.

01:47:02.510 --> 01:47:05.440
You can have Xforms.

01:47:05.440 --> 01:47:07.690
If you let XML take over your
life, it will turn your

01:47:07.690 --> 01:47:10.340
boyfriend or girlfriend into an
X-boyfriend or girlfriend.

01:47:10.340 --> 01:47:12.140
[LAUGHTER]

01:47:12.140 --> 01:47:13.260
JAKE ARCHIBALD: And "XMLcool"
with that.

01:47:13.260 --> 01:47:14.370
Because you don't
need a partner.

01:47:14.370 --> 01:47:17.550
Because you've got XML to
look after you now.

01:47:17.550 --> 01:47:20.590
Things fitting that, in
2009, XHTML2 became an

01:47:20.590 --> 01:47:21.280
X-specification.

01:47:21.280 --> 01:47:22.000
[LAUGHTER]

01:47:22.000 --> 01:47:23.530
JAKE ARCHIBALD: We didn't
care about it anymore.

01:47:23.530 --> 01:47:26.080
And no browsers ever implemented
source on

01:47:26.080 --> 01:47:27.810
something like a div.

01:47:27.810 --> 01:47:29.750
But what about this?

01:47:29.750 --> 01:47:30.440
We've got an image element.

01:47:30.440 --> 01:47:31.880
It's got a source.

01:47:31.880 --> 01:47:33.180
Which browser is going
to make a request?

01:47:33.180 --> 01:47:36.480
Now, notice that I have spelled
image incorrectly, in

01:47:36.480 --> 01:47:37.810
terms of HTML.

01:47:37.810 --> 01:47:40.600
Does the browser treat this
like an unknown element?

01:47:40.600 --> 01:47:41.840
Or does it do something
special?

01:47:41.840 --> 01:47:45.740
We saw XML was too Draconian,
too strict for the web.

01:47:45.740 --> 01:47:47.750
But is HTML this lenient?

01:47:47.750 --> 01:47:49.930
Or are the browsers more
lenient than the

01:47:49.930 --> 01:47:51.540
spec in this case?

01:47:51.540 --> 01:47:54.290
So we're seeing you're kind of
leaning towards one way.

01:47:54.290 --> 01:47:55.490
And pretty much all
the browsers--

01:47:55.490 --> 01:47:56.700
ah, you're changing your
mind and going

01:47:56.700 --> 01:47:57.380
back into the middle.

01:47:57.380 --> 01:47:58.470
We're going to keep this
rolling quickly.

01:47:58.470 --> 01:47:59.880
So just make a decision.

01:47:59.880 --> 01:48:03.370
I'm going to close the question
in three, two, one.

01:48:03.370 --> 01:48:04.470
And it's closed.

01:48:04.470 --> 01:48:06.640
So you're kind of thinking,
pretty much,

01:48:06.640 --> 01:48:08.220
yes, in all the browsers.

01:48:08.220 --> 01:48:10.440
And you would be absolutely
correct.

01:48:10.440 --> 01:48:11.140
In all of them--

01:48:11.140 --> 01:48:11.210
AUDIENCE: Yay!

01:48:11.210 --> 01:48:12.690
JAKE ARCHIBALD: --it will make
a request for the image.

01:48:12.690 --> 01:48:14.380
And note, in these situations,
it doesn't

01:48:14.380 --> 01:48:15.300
have to show the image.

01:48:15.300 --> 01:48:16.620
We're just talking about
making a request.

01:48:16.620 --> 01:48:19.420
But in this case, all of the
browsers will actually show

01:48:19.420 --> 01:48:20.946
the image as well.

01:48:20.946 --> 01:48:23.340
You see, back in the past--

01:48:23.340 --> 01:48:25.300
I don't know if you remember
the past-- but one browser

01:48:25.300 --> 01:48:29.050
decided that IMG was too
difficult for developers to

01:48:29.050 --> 01:48:32.140
remember, and that image
should work as well.

01:48:32.140 --> 01:48:34.110
And we've been stuck with
that ever since.

01:48:34.110 --> 01:48:36.580
Now, which browser vendor
do you think we have

01:48:36.580 --> 01:48:37.860
to blame for this?

01:48:37.860 --> 01:48:40.080
Oh, yes, of course, it is--

01:48:40.080 --> 01:48:40.590
[LAUGHTER]

01:48:40.590 --> 01:48:41.410
JAKE ARCHIBALD: --Mosaic--

01:48:41.410 --> 01:48:42.180
[LAUGHTER]

01:48:42.180 --> 01:48:43.830
JAKE ARCHIBALD: --back
in 1993.

01:48:43.830 --> 01:48:46.250
The people who invented the
image tag, they did this.

01:48:46.250 --> 01:48:50.460
And a study in 2005 showed that,
like, 0.2% of pages were

01:48:50.460 --> 01:48:52.390
using this incorrectly
spelled image.

01:48:52.390 --> 01:48:54.700
So all the browsers have to
support it for pretty much

01:48:54.700 --> 01:48:55.820
forevermore.

01:48:55.820 --> 01:48:58.590
The WhatWG recognized this
and added it to the spec.

01:48:58.590 --> 01:48:59.390
This is the parsing spec.

01:48:59.390 --> 01:49:03.090
And you can see there, start
tag, if it's image, change the

01:49:03.090 --> 01:49:05.120
token name to IMG and
reprocess it.

01:49:05.120 --> 01:49:06.330
Don't ask, right?

01:49:06.330 --> 01:49:07.770
[LAUGHTER]

01:49:07.770 --> 01:49:10.510
JAKE ARCHIBALD: But recently,
I-M-A-G-E was using the kind

01:49:10.510 --> 01:49:13.920
of a clever hack, Alexei
Ten came up with this.

01:49:13.920 --> 01:49:17.640
So you would use this on your
page instead of an image, this

01:49:17.640 --> 01:49:19.780
block of sort of SVG with
an image inside it.

01:49:19.780 --> 01:49:22.270
And what it'll do is it will
show an SVG and in browsers

01:49:22.270 --> 01:49:23.560
that support SVG.

01:49:23.560 --> 01:49:26.700
And it will do a PNG
in other browsers.

01:49:26.700 --> 01:49:28.610
So a modern browser will
parse it like this.

01:49:28.610 --> 01:49:30.110
Ah, OK.

01:49:30.110 --> 01:49:31.920
That's an SVG element.

01:49:31.920 --> 01:49:33.910
OK, it's going to
be 100 by 100.

01:49:33.910 --> 01:49:34.890
That's fine.

01:49:34.890 --> 01:49:36.610
Oh, and this is an SVG image.

01:49:36.610 --> 01:49:39.430
Because in SVG, image elements
are spelled fully--

01:49:39.430 --> 01:49:42.150
I-M-A-G-E. Oh, it's got
a width and a height.

01:49:42.150 --> 01:49:43.320
That's great.

01:49:43.320 --> 01:49:46.220
And I'm going to load img.svg.

01:49:46.220 --> 01:49:49.540
Because this is how you define
the source for an image in SVG

01:49:49.540 --> 01:49:50.820
because it's part of XML.

01:49:50.820 --> 01:49:53.256
And why have a link, when
you can have an Xlink?

01:49:53.256 --> 01:49:55.700
[LAUGHTER]

01:49:55.700 --> 01:49:56.365
JAKE ARCHIBALD: And then,
it sees this.

01:49:56.365 --> 01:49:57.810
And it goes, [RASPBERRY SOUND].

01:49:57.810 --> 01:50:00.710
That mean absolutely nothing
to SVG images, so I'm

01:50:00.710 --> 01:50:01.610
going to ignore it.

01:50:01.610 --> 01:50:06.160
Whereas an older browser, maybe
the Android 2, IE8,

01:50:06.160 --> 01:50:07.750
they'll parse it like this.

01:50:07.750 --> 01:50:09.010
Neh, eer-a--

01:50:09.010 --> 01:50:09.430
[LAUGHTER]

01:50:09.430 --> 01:50:12.290
JAKE ARCHIBALD: --ffyya, er, I
mean, going to ignore that.

01:50:12.290 --> 01:50:14.370
Oh, look, the developer
spelled "image" wrong.

01:50:14.370 --> 01:50:15.880
OK, I am going to use that.

01:50:15.880 --> 01:50:17.980
It's 100 by 100.

01:50:17.980 --> 01:50:19.313
Pha-pe-ffff-ha!

01:50:19.313 --> 01:50:20.020
[LAUGHTER]

01:50:20.020 --> 01:50:21.870
JAKE ARCHIBALD: Whoa!

01:50:21.870 --> 01:50:22.760
Developer got high.

01:50:22.760 --> 01:50:23.800
I'm going to ignore that.

01:50:23.800 --> 01:50:26.000
And I'm going to load img.png.

01:50:26.000 --> 01:50:26.630
It's great.

01:50:26.630 --> 01:50:28.720
So this doesn't require
JavaScript, and you're

01:50:28.720 --> 01:50:30.100
switching between the
two image formats.

01:50:30.100 --> 01:50:32.420
And we got kind of excited
about it, and we started

01:50:32.420 --> 01:50:33.480
tweeting about it.

01:50:33.480 --> 01:50:36.780
The mistake we made is
we didn't test it.

01:50:36.780 --> 01:50:39.110
So a few of us started
testing it.

01:50:39.110 --> 01:50:41.720
And we found something
interesting.

01:50:41.720 --> 01:50:44.420
All of these browsers
support SVG.

01:50:44.420 --> 01:50:47.580
Which ones download
both images?

01:50:47.580 --> 01:50:48.420
They shouldn't.

01:50:48.420 --> 01:50:49.830
And I'll give you a clue--

01:50:49.830 --> 01:50:52.170
it doesn't go one way or the
other for all browsers.

01:50:52.170 --> 01:50:53.860
Some of the browsers are
doing it differently.

01:50:53.860 --> 01:50:56.410
So you're going to have to pick
the browser or browsers

01:50:56.410 --> 01:50:58.460
that you think get this
wrong because not all

01:50:58.460 --> 01:50:59.930
of them get it wrong.

01:50:59.930 --> 01:51:01.380
I'm going to close
the question.

01:51:01.380 --> 01:51:02.060
Ho-ho.

01:51:02.060 --> 01:51:03.380
[LAUGHS]

01:51:03.380 --> 01:51:03.660
Oh, dear.

01:51:03.660 --> 01:51:05.050
[LAUGHTER]

01:51:05.050 --> 01:51:06.130
JAKE ARCHIBALD: Oh, no, OK.

01:51:06.130 --> 01:51:08.050
We've got some IE fans
in the room.

01:51:08.050 --> 01:51:12.060
Closing the question
in three, two, one.

01:51:12.060 --> 01:51:14.680
OK, so you're edging towards
Internet Explorer being the

01:51:14.680 --> 01:51:15.650
bad guy here.

01:51:15.650 --> 01:51:17.565
And in this case,
you are correct.

01:51:17.565 --> 01:51:20.110
As a kind of group, you're
doing quite well.

01:51:20.110 --> 01:51:21.610
You should all form a company
or something.

01:51:21.610 --> 01:51:22.490
It's great.

01:51:22.490 --> 01:51:26.590
So all the browsers here, all
the latest versions, they have

01:51:26.590 --> 01:51:29.600
two parsers inside, a relatively
new thing for

01:51:29.600 --> 01:51:30.510
browsers to have.

01:51:30.510 --> 01:51:32.140
But these ones, they
all have it.

01:51:32.140 --> 01:51:35.230
One parser runs ahead as quickly
as it can and picks up

01:51:35.230 --> 01:51:37.100
things that it should download,
like images,

01:51:37.100 --> 01:51:38.880
scripts, all that
sort of stuff.

01:51:38.880 --> 01:51:41.260
The other parser does the heavy
lifting like building

01:51:41.260 --> 01:51:44.230
the DOM tree, and parsing
scripts, and all that stuff.

01:51:44.230 --> 01:51:46.065
This has a surprisingly
large benefit.

01:51:46.065 --> 01:51:47.860
You know, Ilya is posting
about this.

01:51:47.860 --> 01:51:50.030
This study that was done
through 2,000 sites.

01:51:50.030 --> 01:51:52.440
And it had a 20% speed
improvement.

01:51:52.440 --> 01:51:53.630
That's pretty incredible.

01:51:53.630 --> 01:51:56.500
That's time to get DOM
content loaded.

01:51:56.500 --> 01:51:59.240
In order to be quick, this other
pre-parser, this first

01:51:59.240 --> 01:52:00.880
one is a little bit stupid.

01:52:00.880 --> 01:52:03.590
In Internet Explorer, it's that
little bit too stupid,

01:52:03.590 --> 01:52:04.790
and it kind of gets
overexcited.

01:52:04.790 --> 01:52:06.830
And it's like, I'm going
to show a PNG!

01:52:06.830 --> 01:52:07.850
I'm going to show a PNG!

01:52:07.850 --> 01:52:08.740
Yep, here I go!

01:52:08.740 --> 01:52:09.820
I'm going to show the PNG!

01:52:09.820 --> 01:52:10.510
Here it goes!

01:52:10.510 --> 01:52:11.570
Naw, actually, no.

01:52:11.570 --> 01:52:11.960
It's an SVG--

01:52:11.960 --> 01:52:12.220
[LAUGHTER]

01:52:12.220 --> 01:52:12.740
JAKE ARCHIBALD: --nevermind.

01:52:12.740 --> 01:52:16.010
Fair enough.

01:52:16.010 --> 01:52:17.790
It kind of sees the image.

01:52:17.790 --> 01:52:19.260
But it misses the SVG context.

01:52:19.260 --> 01:52:21.020
So it picks up the
wrong source.

01:52:21.020 --> 01:52:23.120
And then the main parser comes
along and goes, pppfff, what

01:52:23.120 --> 01:52:23.900
are you doing?

01:52:23.900 --> 01:52:27.080
No, this is an SVG thing, and
downloads the correct thing.

01:52:27.080 --> 01:52:30.390
The moral here is if there's
some kind of performance

01:52:30.390 --> 01:52:33.090
advice going on, don't just
blindly trust it.

01:52:33.090 --> 01:52:35.740
In Chrome we say, use
tools, not rules.

01:52:35.740 --> 01:52:36.430
And it rhymes.

01:52:36.430 --> 01:52:37.650
So it must be true, right?

01:52:37.650 --> 01:52:39.260
[LAUGHTER]

01:52:39.260 --> 01:52:40.950
JAKE ARCHIBALD: But also be on
the lookout for existing

01:52:40.950 --> 01:52:44.080
tests, if someone has done the
leg work for you, and you can

01:52:44.080 --> 01:52:45.800
just run that test yourself.

01:52:45.800 --> 01:52:48.350
One of my favorite stories in
science involves this guy

01:52:48.350 --> 01:52:49.900
August Weismann.

01:52:49.900 --> 01:52:53.210
He wanted to disprove that
evolution was learned.

01:52:53.210 --> 01:52:55.410
Like if you had some kind of
life experience, that that

01:52:55.410 --> 01:52:57.550
would be passed to
your children.

01:52:57.550 --> 01:53:00.310
He wanted to disprove that was
a thing because it wasn't the

01:53:00.310 --> 01:53:01.480
Darwin evolution.

01:53:01.480 --> 01:53:04.020
So he took some mice, and he
cut their tails off, and he

01:53:04.020 --> 01:53:05.100
bred them together.

01:53:05.100 --> 01:53:07.390
And then the next generation,
he cut their tails off and

01:53:07.390 --> 01:53:08.400
bred them together as well.

01:53:08.400 --> 01:53:11.420
And the theory was, well, if
evolution is learned, we're

01:53:11.420 --> 01:53:13.710
going to start getting mice
born without tails.

01:53:13.710 --> 01:53:15.950
And he was quite a way into this
research until someone

01:53:15.950 --> 01:53:19.190
went, uh, you do realize,
August, that the Jewish people

01:53:19.190 --> 01:53:20.490
have been carrying out
this test a lot

01:53:20.490 --> 01:53:22.060
longer than you have?

01:53:22.060 --> 01:53:23.888
[LAUGHTER]

01:53:23.888 --> 01:53:25.259
JAKE ARCHIBALD: And ay-uh-uhh!

01:53:25.259 --> 01:53:26.180
[LAUGHTER]

01:53:26.180 --> 01:53:27.940
JAKE ARCHIBALD: Fair
enough, yeah, OK.

01:53:27.940 --> 01:53:28.880
Job done.

01:53:28.880 --> 01:53:30.850
So yeah, don't reinvent the
wheel unless you want to learn

01:53:30.850 --> 01:53:31.530
a lot about wheels.

01:53:31.530 --> 01:53:32.650
And that could be
cool sometime.

01:53:32.650 --> 01:53:33.820
OK, what about this?

01:53:33.820 --> 01:53:34.860
I've got an image.

01:53:34.860 --> 01:53:36.380
It's inside a div that
is displaying.

01:53:36.380 --> 01:53:37.090
Not in this image.

01:53:37.090 --> 01:53:38.395
It's not going to
be displayed.

01:53:38.395 --> 01:53:42.190
But which browsers are going
to request the URL and

01:53:42.190 --> 01:53:44.450
download the image regardless?

01:53:44.450 --> 01:53:45.950
So I did it quickly.

01:53:45.950 --> 01:53:48.180
We're going to go for, oh, are
we still thinking IE is going

01:53:48.180 --> 01:53:48.930
to do something different?

01:53:48.930 --> 01:53:50.116
People are thinking Firefox
is going to

01:53:50.116 --> 01:53:50.790
do something different.

01:53:50.790 --> 01:53:55.170
I'm going to close the question
in three, two, one.

01:53:55.170 --> 01:53:56.200
There we go.

01:53:56.200 --> 01:53:56.890
The countdown is going
to get old.

01:53:56.890 --> 01:53:58.520
But I'm going to do it for
every question anyway.

01:53:58.520 --> 01:54:01.325
OK, so, we're sort of saying,
yes in IE, maybe no in Safari,

01:54:01.325 --> 01:54:04.200
no in Chrome, and maybe
in Firefox.

01:54:04.200 --> 01:54:06.250
The answer is yes
in all of them.

01:54:06.250 --> 01:54:09.930
They're all going to download
the image in this case.

01:54:09.930 --> 01:54:13.250
And this behavior is part of
this specification as well.

01:54:13.250 --> 01:54:14.790
In the beginning, there
is nothing, right?

01:54:14.790 --> 01:54:18.940
And then the browser gets
sprayed with HTML text.

01:54:18.940 --> 01:54:21.455
And then from that, it is going
to construct this tree

01:54:21.455 --> 01:54:22.620
of elements that, as
Paul was explaining

01:54:22.620 --> 01:54:24.780
earlier, is the DOM.

01:54:24.780 --> 01:54:27.960
When one of these things is
constructed, the constructor

01:54:27.960 --> 01:54:29.750
steps for that element
are run.

01:54:29.750 --> 01:54:32.670
And if we look at the spec for
image, it's quite complicated

01:54:32.670 --> 01:54:34.450
for what you would think would
be a very simple thing.

01:54:34.450 --> 01:54:35.250
But this is the image stuff.

01:54:35.250 --> 01:54:38.700
They all run synchronously,
step 14, fetch the image.

01:54:38.700 --> 01:54:39.790
No mention of CSS.

01:54:39.790 --> 01:54:41.100
No mention of anything
like that.

01:54:41.100 --> 01:54:43.020
And that's good in some ways
because it means the browser

01:54:43.020 --> 01:54:44.310
can start the image downloading

01:54:44.310 --> 01:54:45.960
before the CSS is there.

01:54:45.960 --> 01:54:48.170
The pre-parser can
deal with it.

01:54:48.170 --> 01:54:50.910
Downside is, well, we couldn't
do polyfills for things like

01:54:50.910 --> 01:54:51.790
responsive images.

01:54:51.790 --> 01:54:55.030
Because by the time JavaScript
gets there to do something

01:54:55.030 --> 01:54:57.380
clever, the image has already
started downloading, and

01:54:57.380 --> 01:54:59.520
you're just going to trigger
a second request by

01:54:59.520 --> 01:55:01.560
changing the source.

01:55:01.560 --> 01:55:03.060
This won't be a problem
in the future.

01:55:03.060 --> 01:55:06.320
+The resource is priority
spec, has this postpone

01:55:06.320 --> 01:55:08.570
attribute, which means the image
won't download if it's

01:55:08.570 --> 01:55:09.530
Display None.

01:55:09.530 --> 01:55:12.740
And it allows the browser to
avoid downloading it, even if

01:55:12.740 --> 01:55:14.430
it's just outward view
on the page as well.

01:55:14.430 --> 01:55:17.290
So you don't have to rely on
these heavy scroll events for

01:55:17.290 --> 01:55:20.070
image lazy loading.

01:55:20.070 --> 01:55:21.510
OK, what if we're using CSS?

01:55:21.510 --> 01:55:22.790
Does visibility matter then?

01:55:22.790 --> 01:55:23.300
What about this?

01:55:23.300 --> 01:55:25.280
Once again, that image is not
going to be displayed because

01:55:25.280 --> 01:55:27.280
it's inside an element
that is Display None.

01:55:27.280 --> 01:55:30.770
So we saw here that the image
would download in this case.

01:55:30.770 --> 01:55:32.350
But what about in CSS?

01:55:32.350 --> 01:55:34.160
Is it going to do something
different?

01:55:34.160 --> 01:55:35.200
Does visibility matter here?

01:55:35.200 --> 01:55:38.020
Are some of the browsers going
to do something different?

01:55:38.020 --> 01:55:42.130
I'm going to close the question
in three, two, one.

01:55:42.130 --> 01:55:42.415
Oh!

01:55:42.415 --> 01:55:43.500
Going right to the middle.

01:55:43.500 --> 01:55:45.490
Collectively, once
again, no clue.

01:55:45.490 --> 01:55:46.250
Don't worry about it, guys.

01:55:46.250 --> 01:55:48.110
It's quite difficult.

01:55:48.110 --> 01:55:49.820
What's the answer?

01:55:49.820 --> 01:55:52.440
None of the browsers will
make a request here.

01:55:52.440 --> 01:55:53.570
And that's kind of
cool, right?

01:55:53.570 --> 01:55:57.100
We want to be able to rely
on that kind of behavior.

01:55:57.100 --> 01:55:57.950
Slightly different one.

01:55:57.950 --> 01:55:58.910
What about now?

01:55:58.910 --> 01:55:59.690
Same thing again.

01:55:59.690 --> 01:56:01.420
Image is not going to be
rendered because it's on a

01:56:01.420 --> 01:56:02.340
Display None element.

01:56:02.340 --> 01:56:03.860
But it's not inside a Display
None element.

01:56:03.860 --> 01:56:06.890
It is on the Display
None element.

01:56:06.890 --> 01:56:09.490
So we saw the browsers weren't
downloading before.

01:56:09.490 --> 01:56:10.390
What about now?

01:56:10.390 --> 01:56:12.950
Did the browsers do something
different?

01:56:12.950 --> 01:56:13.780
Did they all download it?

01:56:13.780 --> 01:56:14.890
Did they all not download it?

01:56:14.890 --> 01:56:16.060
I mean, they don't need it.

01:56:16.060 --> 01:56:17.140
It's not going to be rendered.

01:56:17.140 --> 01:56:18.540
I'm going to close
the question and

01:56:18.540 --> 01:56:22.472
three, two, one, done.

01:56:22.472 --> 01:56:22.940
All right.

01:56:22.940 --> 01:56:26.740
We're saying no in pretty
much every browser.

01:56:26.740 --> 01:56:29.010
Most browsers will download
it in this case.

01:56:29.010 --> 01:56:31.500
Only Firefox won't.

01:56:31.500 --> 01:56:33.160
So what's going on here?

01:56:33.160 --> 01:56:35.990
Well, once you've got some DOM
elements on the page, as Paul

01:56:35.990 --> 01:56:37.730
was explaining before, they are
going to get their styles

01:56:37.730 --> 01:56:41.140
calculated, where the browser
goes to see which of your

01:56:41.140 --> 01:56:43.190
cascaded styles of your
font tags-- if

01:56:43.190 --> 01:56:44.040
you're from the '90s--

01:56:44.040 --> 01:56:47.940
which styles apply to each
element individually.

01:56:47.940 --> 01:56:50.470
But not everything gets
it's style calculated.

01:56:50.470 --> 01:56:52.260
So you've got these two elements
at the bottom.

01:56:52.260 --> 01:56:53.190
No style calculation.

01:56:53.190 --> 01:56:55.810
And the reason is this div at
the top here turned out to be

01:56:55.810 --> 01:56:56.900
Display None.

01:56:56.900 --> 01:56:59.180
And the browser shortcuts,
because it knows the styles of

01:56:59.180 --> 01:57:02.460
these elements have no impact on
the rendering of the page.

01:57:02.460 --> 01:57:03.170
So it doesn't bother.

01:57:03.170 --> 01:57:04.290
It takes a shortcut.

01:57:04.290 --> 01:57:06.420
So if these have background
images, the browser never

01:57:06.420 --> 01:57:08.410
finds out about it.

01:57:08.410 --> 01:57:10.490
If the Display None element has
a background image, the

01:57:10.490 --> 01:57:12.310
browser does find
out about it.

01:57:12.310 --> 01:57:14.220
And that's why we see most
browsers downloading it, at

01:57:14.220 --> 01:57:14.775
that point.

01:57:14.775 --> 01:57:16.990
Firefox is a little
bit smarter here.

01:57:16.990 --> 01:57:18.880
But if you use something like
Visibility Hidden or Opacity

01:57:18.880 --> 01:57:23.010
Zero, Firefox will be
downloading as well.

01:57:23.010 --> 01:57:24.110
Who's getting it right
according to the

01:57:24.110 --> 01:57:25.820
specification?

01:57:25.820 --> 01:57:26.560
Everyone is!

01:57:26.560 --> 01:57:27.230
It's great.

01:57:27.230 --> 01:57:29.103
So the specification says
absolutely nothing about this.

01:57:29.103 --> 01:57:32.630
Because this tiny note that says
the browser may optimize.

01:57:32.630 --> 01:57:35.050
It may avoid downloading images
that are out of view,

01:57:35.050 --> 01:57:37.190
even if there's another
element over the top.

01:57:37.190 --> 01:57:40.420
The browser may avoid
downloading at this point.

01:57:40.420 --> 01:57:41.770
No browsers are that
smart yet.

01:57:41.770 --> 01:57:44.810
This kind of freedom in the
specifications is great.

01:57:44.810 --> 01:57:48.100
Because it means the browser can
do what's right, given the

01:57:48.100 --> 01:57:49.950
situation, and the kind of
device, and the network

01:57:49.950 --> 01:57:51.790
connectivity, et cetera,
et cetera.

01:57:51.790 --> 01:57:53.570
But it's also kind of scary
because this is where you're

01:57:53.570 --> 01:57:54.780
going to get the browsers
doing different

01:57:54.780 --> 01:57:56.580
things, as we saw here.

01:57:56.580 --> 01:57:57.830
But I kind of like that.

01:57:57.830 --> 01:58:00.050
I think that's the diversity
that makes the web great.

01:58:00.050 --> 01:58:02.170
It's not one company
driving forward

01:58:02.170 --> 01:58:03.450
with its own interests.

01:58:03.450 --> 01:58:05.800
It's lots of companies driving
forward in different

01:58:05.800 --> 01:58:06.760
directions.

01:58:06.760 --> 01:58:08.450
And we get this sort
of car crash.

01:58:08.450 --> 01:58:10.665
But a car crash with
a happy ending!

01:58:10.665 --> 01:58:11.080
[LAUGHTER]

01:58:11.080 --> 01:58:13.304
JAKE ARCHIBALD: And that's the
web that we have today.

01:58:13.304 --> 01:58:15.120
[APPLAUSE]

01:58:15.120 --> 01:58:16.420
JAKE ARCHIBALD: So if you want
to avoid downloading

01:58:16.420 --> 01:58:19.260
backgrounds and CSS, hiding
element isn't enough.

01:58:19.260 --> 01:58:22.120
You need to put it inside
something that is hidden.

01:58:22.120 --> 01:58:24.980
So the browser won't find or
even look at that element.

01:58:24.980 --> 01:58:27.040
But when you do that, realize
you are relying on just what

01:58:27.040 --> 01:58:28.040
the browsers do.

01:58:28.040 --> 01:58:29.610
It is not specs behavior.

01:58:29.610 --> 01:58:32.570
The only sure-fire way is don't
let the browser find out

01:58:32.570 --> 01:58:33.280
about the background image.

01:58:33.280 --> 01:58:35.700
Take the class off until you
need it, or don't put the

01:58:35.700 --> 01:58:38.432
element in the DOM until
you need it.

01:58:38.432 --> 01:58:38.890
All right.

01:58:38.890 --> 01:58:40.460
Things have been quite
easy, so far.

01:58:40.460 --> 01:58:43.630
Let's get JavaScript involved.

01:58:43.630 --> 01:58:45.120
What do you think?

01:58:45.120 --> 01:58:47.430
Creating an image element,
once again, I've spelled

01:58:47.430 --> 01:58:48.330
"image" wrong.

01:58:48.330 --> 01:58:49.430
I'm applying a source to it.

01:58:49.430 --> 01:58:51.090
It is not in the document.

01:58:51.090 --> 01:58:53.190
So it's not going to
be displayed yet.

01:58:53.190 --> 01:58:54.770
And it's spelled wrong.

01:58:54.770 --> 01:58:57.270
We saw the browsers correcting
for that before.

01:58:57.270 --> 01:58:59.510
But that was in HTML.

01:58:59.510 --> 01:59:00.450
What about in the DOM?

01:59:00.450 --> 01:59:02.210
Is that going to be different?

01:59:02.210 --> 01:59:06.450
I'm going to close the question
in three, two, one.

01:59:06.450 --> 01:59:07.950
All right, done.

01:59:07.950 --> 01:59:13.210
OK, so we're edging towards
yes, in most browsers.

01:59:13.210 --> 01:59:15.460
It is yes in most browsers,
except Firefox.

01:59:15.460 --> 01:59:17.420
Firefox does something
different here.

01:59:17.420 --> 01:59:19.980
And there are two parts
to this explanation.

01:59:19.980 --> 01:59:23.090
We saw before that the DOM
builds up, and these creation

01:59:23.090 --> 01:59:24.270
steps for elements are run.

01:59:24.270 --> 01:59:26.970
But even if you create the
elements, and it's not part of

01:59:26.970 --> 01:59:29.610
a document, that's still going
to run those creation steps.

01:59:29.610 --> 01:59:33.020
And we saw before, step
14, fetch the image.

01:59:33.020 --> 01:59:34.950
We can use this to our advantage
because you can make

01:59:34.950 --> 01:59:37.910
a GET request to any URL by
making an image element and

01:59:37.910 --> 01:59:38.940
assigning a source.

01:59:38.940 --> 01:59:41.110
And you could use the image
element constructor.

01:59:41.110 --> 01:59:42.830
It's a tiny bit of code.

01:59:42.830 --> 01:59:44.670
You can make a request
anywhere.

01:59:44.670 --> 01:59:47.610
This is kind of how Google
Analytics communicates back to

01:59:47.610 --> 01:59:49.240
the server.

01:59:49.240 --> 01:59:50.850
Oh, yeah, but Firefox didn't
make a request.

01:59:50.850 --> 01:59:53.556
So what's going on there?

01:59:53.556 --> 01:59:55.800
It's because we spelled
"image" wrong.

01:59:55.800 --> 01:59:58.490
And most browsers, Chrome,
Safari, IE will give us an

01:59:58.490 --> 02:00:01.020
HTML image element
when we do that.

02:00:01.020 --> 02:00:03.130
Firefox will give us
an HTML element.

02:00:03.130 --> 02:00:04.130
It's not an image.

02:00:04.130 --> 02:00:05.220
You add it to the page.

02:00:05.220 --> 02:00:07.540
It will not show an image.

02:00:07.540 --> 02:00:08.220
And you know what?

02:00:08.220 --> 02:00:09.910
It's the only one getting
it right.

02:00:09.910 --> 02:00:12.340
We saw before that the
specification says, if you

02:00:12.340 --> 02:00:14.390
encounter a start tag,
you can correct it.

02:00:14.390 --> 02:00:16.140
But this is the parsing spec.

02:00:16.140 --> 02:00:19.010
We bypass the parsing spec by
creating the element in

02:00:19.010 --> 02:00:20.370
JavaScript.

02:00:20.370 --> 02:00:22.430
So yeah, actually, technically,
it should have

02:00:22.430 --> 02:00:24.010
returned an HTML unknown
element.

02:00:24.010 --> 02:00:28.526
But it's getting closer to right
than the other browsers.

02:00:28.526 --> 02:00:31.980
I think I preferred it when the
web with all the browsers,

02:00:31.980 --> 02:00:34.170
like, there was one bad guy,
and all the other browsers

02:00:34.170 --> 02:00:35.570
seemed perfect.

02:00:35.570 --> 02:00:38.400
It was like an orchestra, and
Internet Explorer 8 was just

02:00:38.400 --> 02:00:40.880
this screaming child hitting
two cymbals together.

02:00:40.880 --> 02:00:42.190
[LAUGHTER]

02:00:42.190 --> 02:00:43.750
JAKE ARCHIBALD: But then we
finally got rid of the

02:00:43.750 --> 02:00:45.900
screaming child with the cymbal,
and then we started

02:00:45.900 --> 02:00:46.600
conducting again.

02:00:46.600 --> 02:00:48.800
And we went, oh, actually
everyone's out of tune.

02:00:48.800 --> 02:00:51.990
We just didn't notice, because
of the screaming cymbal child.

02:00:51.990 --> 02:00:52.345
Oh, fair enough.

02:00:52.345 --> 02:00:53.500
[LAUGHTER]

02:00:53.500 --> 02:00:54.960
JAKE ARCHIBALD: All right, let's
get CSS involved again.

02:00:54.960 --> 02:00:56.240
What about this?

02:00:56.240 --> 02:00:59.780
So as before, creating a div,
I'm going to give it a

02:00:59.780 --> 02:01:00.830
background image.

02:01:00.830 --> 02:01:01.650
So I'm not creating an image.

02:01:01.650 --> 02:01:03.330
Creating a div, giving it
a background image.

02:01:03.330 --> 02:01:05.780
We saw, here, that images would
download at this point.

02:01:05.780 --> 02:01:08.590
Is it different with CSS?

02:01:08.590 --> 02:01:11.070
Do different browsers
do different stuff?

02:01:11.070 --> 02:01:13.050
So we are edging towards
the don't know.

02:01:13.050 --> 02:01:13.360
Oh, wow!

02:01:13.360 --> 02:01:14.610
It sort of swung
the other way.

02:01:14.610 --> 02:01:18.600
Closing the question
in three, two, one.

02:01:18.600 --> 02:01:20.750
All right, so we're edging
towards yes in everything.

02:01:20.750 --> 02:01:23.100
Wrong-uns, the lot of you.

02:01:23.100 --> 02:01:24.680
No browser will download here.

02:01:24.680 --> 02:01:26.870
And this is kind of the same
as the Display None case.

02:01:26.870 --> 02:01:27.960
It's not in the document.

02:01:27.960 --> 02:01:30.790
So the browser is not going to
go looking for the styles,

02:01:30.790 --> 02:01:32.570
because it doesn't need to know
the style information,

02:01:32.570 --> 02:01:35.700
because it knows it's
not going to render.

02:01:35.700 --> 02:01:38.750
All right, going to be cruel.

02:01:38.750 --> 02:01:41.180
Same thing, but I'm going
to add it to the DOM.

02:01:41.180 --> 02:01:43.640
And then, I'm going
to take it away.

02:01:43.640 --> 02:01:45.970
In the same block of JavaScript,
will the browser

02:01:45.970 --> 02:01:48.580
see that element in the document
long enough to

02:01:48.580 --> 02:01:50.376
actually trigger the download?

02:01:50.376 --> 02:01:51.626
What do you think?

02:01:56.100 --> 02:02:01.460
I'm going to close the question
in three, two, one.

02:02:01.460 --> 02:02:03.470
We're edging towards
yes in everything.

02:02:03.470 --> 02:02:04.515
Wrong again.

02:02:04.515 --> 02:02:04.930
[LAUGHTER]

02:02:04.930 --> 02:02:06.340
JAKE ARCHIBALD: None
of the browsers.

02:02:06.340 --> 02:02:07.640
None of them.

02:02:07.640 --> 02:02:10.190
The browser doesn't think about
styles or layout until

02:02:10.190 --> 02:02:12.060
as late as possible, which
normally means when it needs

02:02:12.060 --> 02:02:14.190
to render something.

02:02:14.190 --> 02:02:17.660
And this isn't going to change
any pixels because JavaScript

02:02:17.660 --> 02:02:19.740
is going to be blocking the
chance to do some of that

02:02:19.740 --> 02:02:21.230
painting stuff.

02:02:21.230 --> 02:02:23.640
What about this?

02:02:23.640 --> 02:02:25.030
I'm adding it to the document.

02:02:25.030 --> 02:02:26.250
I'm going to ask for
it's text content.

02:02:26.250 --> 02:02:27.060
It's an empty element.

02:02:27.060 --> 02:02:29.380
Text content is going
to be empty as well.

02:02:29.380 --> 02:02:30.660
And then, I'm going to
remove it again.

02:02:30.660 --> 02:02:33.946
Does that trigger different
behavior in the browser?

02:02:33.946 --> 02:02:37.226
Element is completely
empty so, you know.

02:02:37.226 --> 02:02:39.240
But is that going to trigger the
browser to go, oh, yeah,

02:02:39.240 --> 02:02:41.460
I'm actually going to get
that background image.

02:02:41.460 --> 02:02:45.550
I'm going to close the question
in three, two, one.

02:02:45.550 --> 02:02:46.752
What have you said?

02:02:46.752 --> 02:02:47.690
Aaah, you don't know.

02:02:47.690 --> 02:02:48.220
Fair enough.

02:02:48.220 --> 02:02:50.270
Yes, it's tricky.

02:02:50.270 --> 02:02:51.010
No.

02:02:51.010 --> 02:02:52.500
None of the browsers
at this point.

02:02:52.500 --> 02:02:53.690
I am going somewhere
with this.

02:02:53.690 --> 02:02:55.681
I promise you.

02:02:55.681 --> 02:02:57.910
Getting the text content of
an element is pretty easy.

02:02:57.910 --> 02:02:59.260
It's just going to go and
pick up the text nodes.

02:02:59.260 --> 02:03:00.730
It doesn't need to look at
the style or anything.

02:03:00.730 --> 02:03:01.620
What about this one?

02:03:01.620 --> 02:03:02.770
InnerHTML?

02:03:02.770 --> 02:03:03.350
Same as before.

02:03:03.350 --> 02:03:04.910
But instead of text content,
I'm going to

02:03:04.910 --> 02:03:06.080
ask for the old innerHTML.

02:03:06.080 --> 02:03:06.880
Oh, wow!

02:03:06.880 --> 02:03:09.180
IE is doing something different
to everyone else.

02:03:09.180 --> 02:03:09.570
Interesting.

02:03:09.570 --> 02:03:15.126
I'm going to close the question
in three, two, one.

02:03:15.126 --> 02:03:18.270
All right, so, you've said
yes in IE, and no

02:03:18.270 --> 02:03:19.320
in everything else.

02:03:19.320 --> 02:03:20.170
Bloody hell.

02:03:20.170 --> 02:03:20.820
You're right.

02:03:20.820 --> 02:03:22.230
Well done.

02:03:22.230 --> 02:03:23.420
IE makes the request.

02:03:23.420 --> 02:03:26.490
And the reason for
that is because--

02:03:26.490 --> 02:03:28.150
I don't know.

02:03:28.150 --> 02:03:29.890
[LAUGHTER]

02:03:29.890 --> 02:03:31.900
JAKE ARCHIBALD: Some things in
the world cannot be explained,

02:03:31.900 --> 02:03:34.300
like why it takes three attempts
to plug in a USB

02:03:34.300 --> 02:03:35.865
cable, even though there's
only two possibilities.

02:03:35.865 --> 02:03:36.460
[LAUGHTER]

02:03:36.460 --> 02:03:39.630
JAKE ARCHIBALD: These things
just cannot be explained.

02:03:39.630 --> 02:03:42.100
Moving on.

02:03:42.100 --> 02:03:43.240
Similar again.

02:03:43.240 --> 02:03:46.000
Instead of HTML,
it's innerText.

02:03:46.000 --> 02:03:47.620
What do the browsers do here?

02:03:47.620 --> 02:03:48.530
Do they do something
different?

02:03:48.530 --> 02:03:52.100
We saw IE is quite request-happy
with innerHTML.

02:03:52.100 --> 02:03:54.410
Does it do something different
with innerText?

02:03:54.410 --> 02:03:57.135
Does it trigger a requests in
any of the other browsers?

02:03:57.135 --> 02:03:59.040
I promise you, I am going
somewhere with this.

02:03:59.040 --> 02:04:03.170
Closing the question
in three, two, one.

02:04:03.170 --> 02:04:06.470
There's quite a strong opinion
of no across all the browsers.

02:04:06.470 --> 02:04:07.210
Sorry, guys.

02:04:07.210 --> 02:04:07.550
[LAUGHTER]

02:04:07.550 --> 02:04:10.120
JAKE ARCHIBALD: Yes, in
everything except Firefox.

02:04:10.120 --> 02:04:13.020
And this actually makes sense.

02:04:13.020 --> 02:04:13.530
Let's make a div.

02:04:13.530 --> 02:04:14.410
We make a div.

02:04:14.410 --> 02:04:15.500
We get a background image.

02:04:15.500 --> 02:04:16.920
I'm going to give it innerHTML,
where it's got,

02:04:16.920 --> 02:04:17.830
Hello, World.

02:04:17.830 --> 02:04:22.090
And the div is a div around
the world or whatever.

02:04:22.090 --> 02:04:24.040
Text content is "Hello World,"
as you might expect.

02:04:24.040 --> 02:04:27.440
The innerText has a
line break in it.

02:04:27.440 --> 02:04:29.720
And this is how it is in
IE, Chrome, and Safari.

02:04:29.720 --> 02:04:32.240
Because innerText is more like
what you would get if you copy

02:04:32.240 --> 02:04:35.475
and pasted the text
of the elements.

02:04:35.475 --> 02:04:38.540
And because div is a block level
element or so it is in

02:04:38.540 --> 02:04:41.570
this example, it gets
a new line.

02:04:41.570 --> 02:04:43.990
So if we run this, the browser
goes, yeah, yeah, yeah, text

02:04:43.990 --> 02:04:46.060
content, easy enough,
innerText.

02:04:46.060 --> 02:04:47.850
Oh, innerText is style
dependent.

02:04:47.850 --> 02:04:49.610
So I'm going to have a look at
the styles of the element.

02:04:49.610 --> 02:04:51.670
And, oh, it's got a
background image.

02:04:51.670 --> 02:04:52.260
That's interesting.

02:04:52.260 --> 02:04:53.360
I'll download that.

02:04:53.360 --> 02:04:54.970
And that's why we see most
browsers doing it.

02:04:54.970 --> 02:04:57.660
Firefox doesn't download at this
point because it doesn't

02:04:57.660 --> 02:04:58.630
support innerText.

02:04:58.630 --> 02:04:59.900
It's the only browser
that doesn't.

02:04:59.900 --> 02:05:01.770
So it just returns undefined
at that point.

02:05:01.770 --> 02:05:05.160
But if you used any of these,
apart from innerText, like,

02:05:05.160 --> 02:05:07.400
anything that's going to get
some style data from the page,

02:05:07.400 --> 02:05:10.860
Firefox would have started
the download as well.

02:05:10.860 --> 02:05:12.650
So Paul was talking about
this earlier.

02:05:12.650 --> 02:05:14.820
You can start doing layout
thrashing if you start doing

02:05:14.820 --> 02:05:15.690
these reads and writes.

02:05:15.690 --> 02:05:19.581
You'll trigger extra
layouts, et cetera.

02:05:19.581 --> 02:05:21.320
The browser is quite clever
about this stuff.

02:05:21.320 --> 02:05:22.870
It will batch changes
together.

02:05:22.870 --> 02:05:24.970
Like if you do this, like,
Display None, Block None,

02:05:24.970 --> 02:05:27.180
Block, et cetera, et cetera,
Loads of Width, this is

02:05:27.180 --> 02:05:29.520
actually a really light
piece of code.

02:05:29.520 --> 02:05:31.210
It's not tricky for the browser
to understand because

02:05:31.210 --> 02:05:32.730
it's going to ignore--

02:05:32.730 --> 02:05:35.450
all right, I hope that's not
my cue to get off because

02:05:35.450 --> 02:05:36.720
that's very passive
aggressive.

02:05:36.720 --> 02:05:37.138
[LAUGHTER]

02:05:37.138 --> 02:05:41.900
JAKE ARCHIBALD: Anyway, so, it
will just take the last change

02:05:41.900 --> 02:05:42.710
that you make.

02:05:42.710 --> 02:05:43.480
Oh, that's nice.

02:05:43.480 --> 02:05:44.770
[LAUGHTER]

02:05:44.770 --> 02:05:45.310
JAKE ARCHIBALD: This is great.

02:05:45.310 --> 02:05:46.720
But it can lead to unexpected
results.

02:05:46.720 --> 02:05:48.550
Let's have a look at a
practical example.

02:05:48.550 --> 02:05:50.570
Paul and I, we want
to go over there.

02:05:50.570 --> 02:05:52.880
You can tell because
we're pointing.

02:05:52.880 --> 02:05:53.730
Let's do it with code.

02:05:53.730 --> 02:05:54.990
We're going to start
at left zero.

02:05:54.990 --> 02:05:57.440
We're going to transition left
one second, go to 100%.

02:05:57.440 --> 02:05:59.410
We run that code, and it works.

02:05:59.410 --> 02:05:59.820
Yay!

02:05:59.820 --> 02:06:01.690
We solved the world's
problems with code.

02:06:01.690 --> 02:06:04.080
Now, we're very happy
at this point.

02:06:04.080 --> 02:06:06.910
But let's run the code again.

02:06:06.910 --> 02:06:08.420
Nothing happened.

02:06:08.420 --> 02:06:10.720
And this is because the browser
is going to ignore

02:06:10.720 --> 02:06:12.470
this first right of left.

02:06:12.470 --> 02:06:13.610
It's just going to batch
them together.

02:06:13.610 --> 02:06:16.170
It's only going to listen to
our last-- right here.

02:06:16.170 --> 02:06:16.780
And it's 100%.

02:06:16.780 --> 02:06:18.480
We're at 100% already.

02:06:18.480 --> 02:06:19.650
So nothing happens.

02:06:19.650 --> 02:06:22.880
We can fix this by forcing a
synchronous layout here.

02:06:22.880 --> 02:06:25.040
Because that forces the browser
to go and look at all

02:06:25.040 --> 02:06:27.090
the styles of all the elements
in the page.

02:06:27.090 --> 02:06:28.970
And it realizes, oh, yeah,
we are supposed

02:06:28.970 --> 02:06:30.080
to be at left zero.

02:06:30.080 --> 02:06:31.690
So when we make the
next changes, it

02:06:31.690 --> 02:06:32.500
will start from zero.

02:06:32.500 --> 02:06:34.870
And we can run this code as
many times as we want.

02:06:34.870 --> 02:06:35.420
And it works.

02:06:35.420 --> 02:06:37.020
You might have encountered
this kind of behavior and

02:06:37.020 --> 02:06:39.760
tried to use set timeout or
something to get around it.

02:06:39.760 --> 02:06:43.000
No, you can just force
a layout like this.

02:06:43.000 --> 02:06:43.260
Right.

02:06:43.260 --> 02:06:44.230
OK, last question.

02:06:44.230 --> 02:06:45.030
Let's go through this quickly.

02:06:45.030 --> 02:06:46.110
Because I'm going to
be chucked off the

02:06:46.110 --> 02:06:47.180
stage in a few seconds.

02:06:47.180 --> 02:06:48.670
Imagine a page full
of Lorem Ipsum.

02:06:48.670 --> 02:06:49.490
It looks like this--

02:06:49.490 --> 02:06:52.100
595 pixels across; media query,

02:06:52.100 --> 02:06:54.140
min-width 600 min-width.

02:06:54.140 --> 02:06:56.560
So we wouldn't really be
expecting it to display.

02:06:56.560 --> 02:06:59.990
Which browsers are going to
download that gif, anyway?

02:06:59.990 --> 02:07:02.515
Are the browsers going to
do something different?

02:07:02.515 --> 02:07:04.480
I'm going to say, would
we expect it to even

02:07:04.480 --> 02:07:05.710
display that gif?

02:07:05.710 --> 02:07:07.010
Who knows.

02:07:07.010 --> 02:07:08.650
Last question, so make
it a good one.

02:07:08.650 --> 02:07:12.200
Closing it in three, two, one.

02:07:12.200 --> 02:07:13.840
Straight down the middle.

02:07:13.840 --> 02:07:15.460
I feel like I've broken
you as an audience.

02:07:15.460 --> 02:07:15.720
[LAUGHTER]

02:07:15.720 --> 02:07:18.010
JAKE ARCHIBALD: I'm
very sorry.

02:07:18.010 --> 02:07:20.680
What happens here?

02:07:20.680 --> 02:07:25.450
IE and Firefox will download,
and they will actually display

02:07:25.450 --> 02:07:27.480
the background as well.

02:07:27.480 --> 02:07:29.780
And this is quite sneaky.

02:07:29.780 --> 02:07:33.090
My measurement did not include
the scrollbar.

02:07:33.090 --> 02:07:37.500
With the scrollbar, it brings
it over 600 pixels.

02:07:37.500 --> 02:07:40.840
Now, yeah, they don't call
me Cunning Jake--

02:07:40.840 --> 02:07:42.990
they don't actually call
me Cunning Jake.

02:07:42.990 --> 02:07:44.440
[LAUGHTER]

02:07:44.440 --> 02:07:46.020
JAKE ARCHIBALD: This seems
insane to me, to include the

02:07:46.020 --> 02:07:46.600
scrollbar width!

02:07:46.600 --> 02:07:48.310
What if the user has a 200
megapixels scrollbar?

02:07:48.310 --> 02:07:49.880
Why should I care about that?

02:07:49.880 --> 02:07:52.820
But including the scroll
bar is mandated by the

02:07:52.820 --> 02:07:54.320
specification.

02:07:54.320 --> 02:07:55.510
It's interesting.

02:07:55.510 --> 02:07:57.890
And Chrome and Safari are
breaking the spec here.

02:07:57.890 --> 02:07:59.170
It's fixed in the Chrome
nightlies.

02:07:59.170 --> 02:08:01.350
It's not fixed in the
WebKit nightlies.

02:08:01.350 --> 02:08:03.080
Why is the scrollbar included?

02:08:03.080 --> 02:08:04.750
Well, imagine this
bit of code.

02:08:04.750 --> 02:08:06.400
I'm forcing no scrollbar.

02:08:06.400 --> 02:08:08.740
And then when the width gets to
600, I'm going to introduce

02:08:08.740 --> 02:08:09.580
a scrollbar.

02:08:09.580 --> 02:08:11.130
500 pixels, that's fine.

02:08:11.130 --> 02:08:14.040
We get to 601, ah, we need
to put a scrollbar in.

02:08:14.040 --> 02:08:15.880
Oh, now we're less
than 600 pixels.

02:08:15.880 --> 02:08:16.840
We'll take it away.

02:08:16.840 --> 02:08:17.420
And so on--

02:08:17.420 --> 02:08:17.620
[LAUGHTER]

02:08:17.620 --> 02:08:18.870
JAKE ARCHIBALD: --and
so on, and so on.

02:08:21.910 --> 02:08:23.085
In reality, it doesn't
get stuck in a loop.

02:08:23.085 --> 02:08:24.880
But here, we can see
what Safari does.

02:08:24.880 --> 02:08:27.090
I've got a background picture
and a scrollbar coming in at a

02:08:27.090 --> 02:08:28.060
particular width.

02:08:28.060 --> 02:08:31.910
And we'll see, I'm only
making it bigger.

02:08:31.910 --> 02:08:33.830
I'm not moving both ways.

02:08:33.830 --> 02:08:34.220
And we can see--

02:08:34.220 --> 02:08:34.540
[LAUGHTER]

02:08:34.540 --> 02:08:35.060
JAKE ARCHIBALD: --that
the background image

02:08:35.060 --> 02:08:36.650
flickers on and off.

02:08:36.650 --> 02:08:38.630
And then once we get beyond the
width of the scrollbar, it

02:08:38.630 --> 02:08:40.310
stabilizes.

02:08:40.310 --> 02:08:43.170
And that's it.

02:08:43.170 --> 02:08:45.510
Let's have a look
at the rankings.

02:08:45.510 --> 02:08:46.090
Don't worry.

02:08:46.090 --> 02:08:49.810
If you haven't scored great,
it won't actually show your

02:08:49.810 --> 02:08:50.860
name on the screen.

02:08:50.860 --> 02:08:51.910
It's only going to
show the top 10.

02:08:51.910 --> 02:08:53.790
So don't worry too much.

02:08:53.790 --> 02:08:55.870
Here we've got
prettyFlyForAWiFi.

02:08:55.870 --> 02:08:56.410
Very good.

02:08:56.410 --> 02:08:56.990
Who's that?

02:08:56.990 --> 02:08:57.540
[CHEERS]

02:08:57.540 --> 02:08:58.230
JAKE ARCHIBALD: Excellent.

02:08:58.230 --> 02:09:00.907
Right, I will swag you
good and proper.

02:09:00.907 --> 02:09:01.661
[LAUGHTER]

02:09:01.661 --> 02:09:02.910
JAKE ARCHIBALD: Oh,
god, you've done

02:09:02.910 --> 02:09:03.670
really, really well.

02:09:03.670 --> 02:09:04.890
OK, that's my time up.

02:09:04.890 --> 02:09:06.630
Thank you very much, guys.

02:09:06.630 --> 02:09:07.964
Cheers, bye.

02:09:07.964 --> 02:09:17.312
[APPLAUSE]

02:09:17.312 --> 02:09:19.380
PETER LUBBERS: Jake, here's
our special gift for you.

02:09:19.380 --> 02:09:20.803
JAKE ARCHIBALD: Oh, thank
you very much.

02:09:20.803 --> 02:09:21.770
PETER LUBBERS: A little
bit more.

02:09:21.770 --> 02:09:22.350
JAKE ARCHIBALD: Oh, thank you.

02:09:22.350 --> 02:09:23.258
Cheers now.

02:09:23.258 --> 02:09:24.620
[CHUCKLES]

02:09:24.620 --> 02:09:26.020
Right, I'm going to run away.

02:09:26.020 --> 02:09:26.770
PETER LUBBERS: I'm sorry.

02:09:26.770 --> 02:09:28.880
You've got all the swag?

02:09:28.880 --> 02:09:29.570
JAKE ARCHIBALD: Yes.

02:09:29.570 --> 02:09:31.145
I will catch up with
you in a bit.

02:09:31.145 --> 02:09:32.750
And we'll do the swag thing.

02:09:32.750 --> 02:09:33.230
MALE SPEAKER: Thank you.

02:09:33.230 --> 02:09:33.960
JAKE ARCHIBALD: Cool, right.

02:09:33.960 --> 02:09:34.741
PETER LUBBERS: That's
pretty good.

02:09:34.741 --> 02:09:35.991
[INTERPOSING VOICES]

02:09:38.178 --> 02:09:41.124
PETER LUBBERS: We're
also hiring.

02:09:41.124 --> 02:09:43.579
[CHUCKLES]

02:09:43.579 --> 02:09:44.920
All right.

02:09:44.920 --> 02:09:47.150
OK, well, thank you, Jake.

02:09:47.150 --> 02:09:48.640
We're just switching laptops.

02:09:48.640 --> 02:09:51.250
Just a quick idea
on the timeline.

02:09:51.250 --> 02:09:53.640
We have another 25-minute
talk.

02:09:53.640 --> 02:09:55.320
And then we have a
very short break.

02:09:55.320 --> 02:09:59.670
Maybe 10 minutes, just to reset
the video, and so on.

02:09:59.670 --> 02:10:04.910
And then, we'll have a Q&amp;A
discussion until 9:30.

02:10:04.910 --> 02:10:06.280
At which point, we'll
start with

02:10:06.280 --> 02:10:08.570
raffling off all the goodies.

02:10:08.570 --> 02:10:14.290
All right, so next up, we have
Paul Irish, who is also a

02:10:14.290 --> 02:10:17.420
repeat speaker, here,
at SFHTML5.

02:10:17.420 --> 02:10:18.960
Happy to have you back, Paul.

02:10:18.960 --> 02:10:21.290
And Paul's a developer advocate
in the Chrome

02:10:21.290 --> 02:10:23.890
Developer Relations team,
focusing mostly

02:10:23.890 --> 02:10:25.020
on developer tools.

02:10:25.020 --> 02:10:29.446
And I think we'll see a lot
more about that next.

02:10:29.446 --> 02:10:32.460
OK, we're doing a little
sound-- oh, yeah.

02:10:32.460 --> 02:10:34.046
Do you have the one?

02:10:34.046 --> 02:10:34.440
Ah-ha.

02:10:34.440 --> 02:10:36.420
We're trying to get these
monitors to work.

02:10:36.420 --> 02:10:38.760
They all worked in
the pre-test.

02:10:38.760 --> 02:10:40.010
And they stopped working.

02:10:42.510 --> 02:10:45.150
Again, a couple of events
that are coming up.

02:10:45.150 --> 02:10:50.090
Chrome Developer Summit,
November 20 and 21.

02:10:50.090 --> 02:10:52.560
It'll be in Mountain View
at the quad, the

02:10:52.560 --> 02:10:53.800
Google office there.

02:10:53.800 --> 02:10:56.300
We will be live streaming
that event as well.

02:10:56.300 --> 02:10:58.990
There are about 300 people
that can fit in

02:10:58.990 --> 02:11:00.060
the building there.

02:11:00.060 --> 02:11:02.220
Registration will
open in October.

02:11:02.220 --> 02:11:05.490
We'll post some things
about that.

02:11:05.490 --> 02:11:10.310
HTML5 DevCon happening the week
of October 20, training

02:11:10.310 --> 02:11:13.510
sessions followed by a
two-day conference.

02:11:13.510 --> 02:11:16.190
And then two days of training
on top of that.

02:11:16.190 --> 02:11:20.080
Very, very reasonably priced, so
definitely, check that out.

02:11:20.080 --> 02:11:21.330
And--

02:11:22.975 --> 02:11:25.290
[CHUCKLES]

02:11:25.290 --> 02:11:27.220
Well, you're going to have
the mic on there.

02:11:27.220 --> 02:11:29.200
All right.

02:11:29.200 --> 02:11:31.370
PETER LUBBERS: Are those
screens working, or no?

02:11:31.370 --> 02:11:33.282
OK.

02:11:33.282 --> 02:11:33.760
PAUL IRISH: That's cool.

02:11:33.760 --> 02:11:35.672
We'll--

02:11:35.672 --> 02:11:37.106
all right.

02:11:37.106 --> 02:11:42.066
Yeah, that seems almost
workable, yeah?

02:11:42.066 --> 02:11:42.530
MALE SPEAKER: Better.

02:11:42.530 --> 02:11:43.270
PAUL IRISH: Hey--

02:11:43.270 --> 02:11:43.735
MALE SPEAKER: There you go.

02:11:43.735 --> 02:11:44.985
PAUL IRISH: All right.

02:11:48.321 --> 02:11:49.250
This is nice.

02:11:49.250 --> 02:11:51.270
Oh, yeah.

02:11:51.270 --> 02:11:52.520
There you go.

02:11:55.080 --> 02:11:57.381
Still loading, huh.

02:11:57.381 --> 02:11:59.560
It's kind of aggravating
to look at, isn't it?

02:11:59.560 --> 02:12:02.155
It's just like, come on!

02:12:04.768 --> 02:12:06.262
Uh.

02:12:06.262 --> 02:12:07.130
Yeah, OK.

02:12:07.130 --> 02:12:09.150
So let's start.

02:12:09.150 --> 02:12:11.590
So I'm going to talk a little
bit about the tools that are

02:12:11.590 --> 02:12:15.660
available to identify and
improve some of the things

02:12:15.660 --> 02:12:19.230
that we actually saw tonight.

02:12:19.230 --> 02:12:23.500
And so to start off, I want
to separate some of the

02:12:23.500 --> 02:12:26.670
performance ideas into
two separate buckets.

02:12:26.670 --> 02:12:27.440
If this works for you guys.

02:12:27.440 --> 02:12:28.010
I don't know.

02:12:28.010 --> 02:12:30.480
It seems kind of OK.

02:12:30.480 --> 02:12:33.570
The user experience of
performance is mostly separate

02:12:33.570 --> 02:12:36.440
into two things, like, give me
the damn thing that I wanted.

02:12:36.440 --> 02:12:39.050
And now that I have it,
I want to interact

02:12:39.050 --> 02:12:40.560
with it really nicely.

02:12:40.560 --> 02:12:43.790
So in "give me the damn thing
I wanted," it's page load,

02:12:43.790 --> 02:12:46.560
often abbreviated as PLT,
Page Load Time.

02:12:46.560 --> 02:12:48.220
In here, we're talking about
things like the network

02:12:48.220 --> 02:12:50.710
waterfall; getting image assets
that are appropriately

02:12:50.710 --> 02:12:54.780
sized; non-blocking delivery of
all of our assets; getting

02:12:54.780 --> 02:12:59.060
the CSS that we need to render
the top of the page quickly,

02:12:59.060 --> 02:13:03.680
and not much else;
and also fonts.

02:13:03.680 --> 02:13:05.280
Can we see the text quickly?

02:13:05.280 --> 02:13:07.035
When we're talking about runtime
performance, we're

02:13:07.035 --> 02:13:08.880
talking about, like, I want
to interact with the page.

02:13:08.880 --> 02:13:11.860
I want to click a button and
see that response very

02:13:11.860 --> 02:13:14.860
quickly, any sort of
transitions, animations.

02:13:14.860 --> 02:13:18.380
When I'm scrolling, does
it stick to my finger?

02:13:18.380 --> 02:13:22.110
Like, I am scrolling with my
finger on the device, and it

02:13:22.110 --> 02:13:26.640
should just be moving,
immediately, with things, what

02:13:26.640 --> 02:13:29.120
we heard about with memory leaks
and garbage collection,

02:13:29.120 --> 02:13:31.540
and also Java-based innovation,
like with the

02:13:31.540 --> 02:13:33.160
requestAnimationFrame.

02:13:33.160 --> 02:13:37.540
But to show a little bit more
about this stuff, I want to

02:13:37.540 --> 02:13:38.360
take an example.

02:13:38.360 --> 02:13:41.050
So we're going to start
off with a demo.

02:13:41.050 --> 02:13:48.510
This is a site for a festival
in Canada, and it's the

02:13:48.510 --> 02:13:49.820
Canadian National Exhibition.

02:13:49.820 --> 02:13:52.140
So we're actually just going
to go over to the site now,

02:13:52.140 --> 02:13:52.940
the live site.

02:13:52.940 --> 02:13:53.850
And we're going to
play around.

02:13:53.850 --> 02:13:55.770
I'm actually going to do it
here in Chrome Canary.

02:14:00.170 --> 02:14:01.406
OK, cool.

02:14:01.406 --> 02:14:05.005
So how's this look?

02:14:05.005 --> 02:14:07.300
Oh, it's two-eyed.

02:14:07.300 --> 02:14:10.460
OK, yeah, seems good.

02:14:10.460 --> 02:14:13.120
So Canadian National
Exhibition.

02:14:13.120 --> 02:14:15.160
My friend, Mike Taylor,
who works for

02:14:15.160 --> 02:14:17.200
Firefox, found this site.

02:14:17.200 --> 02:14:20.220
And he said, I defy you to find
a site that is jankier in

02:14:20.220 --> 02:14:20.840
its scroll.

02:14:20.840 --> 02:14:24.050
And I was like, oh, I know
of a site, actually.

02:14:24.050 --> 02:14:24.890
So like, this one.

02:14:24.890 --> 02:14:26.020
What is it?

02:14:26.020 --> 02:14:27.710
Exception?

02:14:27.710 --> 02:14:28.860
Inception?

02:14:28.860 --> 02:14:33.890
Inception Explained, is it?

02:14:33.890 --> 02:14:35.100
Is this it?

02:14:35.100 --> 02:14:35.350
AUDIENCE: Yeah.

02:14:35.350 --> 02:14:37.180
PAUL IRISH: It's really bad.

02:14:37.180 --> 02:14:40.030
So Paul mentioned parallax
sites before.

02:14:40.030 --> 02:14:43.360
Parallax sites can get into
trouble really fast.

02:14:43.360 --> 02:14:46.300
And this side is so cool.

02:14:46.300 --> 02:14:51.330
But the frame rate on this
is just so poor.

02:14:51.330 --> 02:14:52.670
It's rough.

02:14:52.670 --> 02:14:53.990
But let me go back to what
I was talking about.

02:14:53.990 --> 02:14:55.820
So Canadian National
Exhibition.

02:14:55.820 --> 02:14:57.080
So here we are.

02:14:57.080 --> 02:14:58.340
And we got some things
happening.

02:14:58.340 --> 02:14:59.880
We've got this laying in
the background, full

02:14:59.880 --> 02:15:01.580
bleed in the back.

02:15:01.580 --> 02:15:05.660
This header that kind of scrolls
up as I go down.

02:15:05.660 --> 02:15:07.160
But let's actually look at the
tools to see what we're

02:15:07.160 --> 02:15:09.200
talking about.

02:15:09.200 --> 02:15:11.300
So first thing, I'm just going
to turn off this debug mode I

02:15:11.300 --> 02:15:12.520
had on earlier.

02:15:12.520 --> 02:15:16.970
And always, first thing,
go to timeline.

02:15:16.970 --> 02:15:17.640
Start recording.

02:15:17.640 --> 02:15:21.900
I use Command E. And we just
scroll up and down, OK.

02:15:21.900 --> 02:15:23.640
So we're seeing a
lot of activity

02:15:23.640 --> 02:15:27.110
already, a lot of stuff.

02:15:27.110 --> 02:15:29.220
We're seeing mostly
purple, right?

02:15:29.220 --> 02:15:34.580
I'm scrolling in on this area,
just to get a better zoom.

02:15:34.580 --> 02:15:38.920
And it looks like recalc style
is consuming a lot of each of

02:15:38.920 --> 02:15:40.390
these frames.

02:15:40.390 --> 02:15:42.840
So OK, recalc style.

02:15:42.840 --> 02:15:43.800
Some things could
be happening.

02:15:43.800 --> 02:15:44.760
I'm not really sure what.

02:15:44.760 --> 02:15:47.110
So we hover on the item.

02:15:47.110 --> 02:15:49.550
And we can see the JavaScript
call sect that's

02:15:49.550 --> 02:15:50.185
associated with this.

02:15:50.185 --> 02:15:53.460
So the last thing that happened
was here, inside

02:15:53.460 --> 02:15:55.780
removeClass, inside jQuery.

02:15:55.780 --> 02:15:58.050
OK, so I'm going to click that,
just to find out what

02:15:58.050 --> 02:15:59.670
exactly it was.

02:15:59.670 --> 02:16:01.410
We're minified here.

02:16:01.410 --> 02:16:03.980
OK, we'll pretty print
down at the bottom.

02:16:03.980 --> 02:16:04.890
Looks good.

02:16:04.890 --> 02:16:05.900
Now, I'm going to come
back and just

02:16:05.900 --> 02:16:08.350
repeat that click again.

02:16:08.350 --> 02:16:09.240
OK, cool.

02:16:09.240 --> 02:16:11.830
So now we just repeat the click,
and it brings me to the

02:16:11.830 --> 02:16:13.140
exact place.

02:16:13.140 --> 02:16:15.630
I really like it when the cursor
does it's pretty thing.

02:16:15.630 --> 02:16:17.510
So I'm like, aah, yeah!

02:16:17.510 --> 02:16:18.450
[LAUGHTER]

02:16:18.450 --> 02:16:21.450
PAUL IRISH: So it brings me
right to the class name

02:16:21.450 --> 02:16:22.030
assignment.

02:16:22.030 --> 02:16:24.830
So there's a setting in the
class name, on an element.

02:16:24.830 --> 02:16:29.061
And that is what triggered
the recalc style.

02:16:29.061 --> 02:16:30.100
OK, it's good to know.

02:16:30.100 --> 02:16:32.059
Now, let's find out
why that happened.

02:16:32.059 --> 02:16:34.600
We look down into
the user code.

02:16:34.600 --> 02:16:38.962
And so, here, we go
inside CNE.js.

02:16:38.962 --> 02:16:44.240
Let me try clicking that,
once again, line 33--

02:16:44.240 --> 02:16:46.879
aah, ooh, aah.

02:16:46.879 --> 02:16:50.000
Remember how Paul might have
mentioned, do as little as you

02:16:50.000 --> 02:16:52.580
can inside your scroll
handlers.

02:16:52.580 --> 02:16:54.950
So inside their scroll handler,
they get the height

02:16:54.950 --> 02:16:56.170
of the window, the scroll top.

02:16:56.170 --> 02:16:57.459
They do a little bit of math.

02:16:57.459 --> 02:17:02.320
And then they toggle some
classes on the HTML element in

02:17:02.320 --> 02:17:03.820
every single scroll--

02:17:03.820 --> 02:17:07.160
toggle, toggle, toggle,
toggle.

02:17:07.160 --> 02:17:08.240
Not great.

02:17:08.240 --> 02:17:09.110
Certainly, not great.

02:17:09.110 --> 02:17:10.690
[LAUGHTER]

02:17:10.690 --> 02:17:11.940
PAUL IRISH: But we can
make this better.

02:17:14.959 --> 02:17:17.520
So the best way to do this
is-- you can see it's a

02:17:17.520 --> 02:17:18.850
conditional toggle
class, right?

02:17:18.850 --> 02:17:20.754
You're using this second
argument, inside jQuery.

02:17:20.754 --> 02:17:22.129
It's a toggle class.

02:17:22.129 --> 02:17:24.570
They conditionally change
it, depending on that

02:17:24.570 --> 02:17:26.940
math working out.

02:17:26.940 --> 02:17:27.639
So that's OK.

02:17:27.639 --> 02:17:31.010
So ideally, you set this in an
if block, and you only touch

02:17:31.010 --> 02:17:33.760
the DOM if you satisfy
that requirement.

02:17:33.760 --> 02:17:35.260
That makes a bit more sense.

02:17:35.260 --> 02:17:37.120
We could, actually, cheat
things a little bit.

02:17:37.120 --> 02:17:40.970
So I'm just going to edit the
JavaScript right here.

02:17:40.970 --> 02:17:43.095
Oh, one sec.

02:17:43.095 --> 02:17:44.879
This is OK.

02:17:44.879 --> 02:17:46.920
All right, I'm going to edit
the JavaScript right here.

02:17:46.920 --> 02:17:48.660
So I'm just going
to backspace--

02:17:48.660 --> 02:17:49.918
oh, come on.

02:17:53.200 --> 02:17:55.750
All right, cool.

02:17:55.750 --> 02:17:58.299
And we're just going to get
the DOM element itself.

02:17:58.299 --> 02:18:01.920
And then we're going to use
class list from HTML5.

02:18:01.920 --> 02:18:05.180
And it turns out, class list
toggle actually has the exact

02:18:05.180 --> 02:18:08.799
same method signature as
jQuery's toggle class.

02:18:08.799 --> 02:18:13.600
And now, I'm just going to hit
command S. And Chrome is just

02:18:13.600 --> 02:18:16.130
going to update that function,
on the fly,

02:18:16.130 --> 02:18:17.660
which is pretty cool.

02:18:17.660 --> 02:18:20.680
So now we're going to go back
to timeline, and I'll start

02:18:20.680 --> 02:18:23.500
recording again, and
repeat my action.

02:18:23.500 --> 02:18:23.960
Yeah!

02:18:23.960 --> 02:18:24.740
AUDIENCE: Yay!

02:18:24.740 --> 02:18:26.010
PAUL IRISH: Nice.

02:18:26.010 --> 02:18:27.000
Pretty sweet.

02:18:27.000 --> 02:18:28.120
So here we are.

02:18:28.120 --> 02:18:31.200
We do not have massive
recalc style anymore.

02:18:31.200 --> 02:18:34.861
But we do have some green
paint going on.

02:18:34.861 --> 02:18:36.253
Hmm.

02:18:36.253 --> 02:18:41.400
Now, on this device, I'm still
hitting mostly 60 FPS.

02:18:41.400 --> 02:18:43.030
So that's kind of OK.

02:18:43.030 --> 02:18:46.559
But on mobile devices, I
certainly wouldn't be.

02:18:46.559 --> 02:18:47.680
I want to see if I
can do anything

02:18:47.680 --> 02:18:49.290
about this paint first.

02:18:49.290 --> 02:18:51.809
So first things first, I'm going
to come over into the

02:18:51.809 --> 02:18:54.620
settings and turn on Show
Panit Rectangles.

02:18:54.620 --> 02:18:57.510
And usually, when I do this,
I like to turn on Show

02:18:57.510 --> 02:18:59.939
Composited Layer Borders
at the same time.

02:18:59.939 --> 02:19:02.070
They kind of go hand in hand.

02:19:02.070 --> 02:19:04.400
So bring DevTools down
a little bit.

02:19:04.400 --> 02:19:06.204
And now, I'm just going
to scroll up and down.

02:19:06.204 --> 02:19:08.980
So my paint recs are in red.

02:19:08.980 --> 02:19:11.926
And we're seeing things.

02:19:11.926 --> 02:19:15.510
A lot going on, but I can
definitely see up top, this

02:19:15.510 --> 02:19:20.379
section, the header is
just in red non-stop.

02:19:20.379 --> 02:19:23.920
Now, the reason why is because
the header is position fixed,

02:19:23.920 --> 02:19:28.040
and the content is moving
beneath it.

02:19:28.040 --> 02:19:32.840
But that's not going to work.

02:19:32.840 --> 02:19:34.275
So it's basically repainting
this, even

02:19:34.275 --> 02:19:35.389
though it really shouldn't.

02:19:35.389 --> 02:19:37.209
It knows what that looks
like, right?

02:19:37.209 --> 02:19:41.260
So the trick here is what?

02:19:41.260 --> 02:19:45.743
What's the fix for this
fixed-position element?

02:19:45.743 --> 02:19:46.715
AUDIENCE: Translate z.

02:19:46.715 --> 02:19:47.201
PAUL IRISH: Ooh!

02:19:47.201 --> 02:19:47.719
Yeah!

02:19:47.719 --> 02:19:49.910
Translate z, there it is!

02:19:52.970 --> 02:19:55.660
I'm excited to type it, and
then I also dread it.

02:19:55.660 --> 02:19:56.260
AUDIENCE: Yeah.

02:19:56.260 --> 02:19:58.660
PAUL IRISH: It's like a
combination of things, really.

02:19:58.660 --> 02:20:00.270
OK.

02:20:00.270 --> 02:20:03.625
WebKit, transform,
translate z.

02:20:03.625 --> 02:20:05.170
Ah, my friend.

02:20:05.170 --> 02:20:07.800
Some people do the 3D version.

02:20:07.800 --> 02:20:10.600
But then you have to do, zero,
comma, zero, comma.

02:20:10.600 --> 02:20:13.090
This is my favorite.

02:20:13.090 --> 02:20:13.960
So I got that in.

02:20:13.960 --> 02:20:14.920
I promoted the layer.

02:20:14.920 --> 02:20:18.460
And in fact, there is
now this little gold

02:20:18.460 --> 02:20:20.570
border around the top.

02:20:20.570 --> 02:20:25.270
And if I just toggle this, you
can see that gold border

02:20:25.270 --> 02:20:28.420
coming on and off because
that is now a layer.

02:20:28.420 --> 02:20:31.330
All right, so we're going
to put it back on.

02:20:31.330 --> 02:20:33.180
And if I scroll up
here-- oh, cool.

02:20:33.180 --> 02:20:35.920
Yeah we do not paint that.

02:20:35.920 --> 02:20:40.470
But then, we get about
here, and it moves.

02:20:40.470 --> 02:20:42.900
And we see that paint.

02:20:42.900 --> 02:20:44.160
So let's fix this.

02:20:44.160 --> 02:20:46.650
So the movement is here.

02:20:46.650 --> 02:20:50.140
We just move the top.

02:20:50.140 --> 02:20:53.390
Now, what's probably a better
way of moving this top other

02:20:53.390 --> 02:20:55.730
than just changing position
absolute if we

02:20:55.730 --> 02:20:57.230
want to move an element?

02:20:57.230 --> 02:20:58.190
AUDIENCE: Translate.

02:20:58.190 --> 02:20:58.860
PAUL IRISH: Translate.

02:20:58.860 --> 02:21:00.120
Yeah, sounds good.

02:21:00.120 --> 02:21:02.720
Let's do a transform
translate.

02:21:02.720 --> 02:21:08.710
So WebKit and Blink still
have prefixed transform.

02:21:08.710 --> 02:21:14.560
So we will do that, hop over
here, and do a translate y.

02:21:14.560 --> 02:21:15.920
And that seems to work.

02:21:15.920 --> 02:21:18.670
And since I have a CSS
transition down here, I should

02:21:18.670 --> 02:21:20.770
probably update that.

02:21:23.392 --> 02:21:25.070
Ah, OK.

02:21:25.070 --> 02:21:27.300
Now that's a bit nicer.

02:21:27.300 --> 02:21:30.940
I still do see red, hmm.

02:21:30.940 --> 02:21:34.560
Let's see if-- ahh, yes.

02:21:34.560 --> 02:21:37.221
Is that right?

02:21:37.221 --> 02:21:40.596
You know.

02:21:40.596 --> 02:21:42.880
Aah, ooh, aah!

02:21:42.880 --> 02:21:44.970
And I don't know if it feels
smoother to you.

02:21:44.970 --> 02:21:45.890
But it feels smoother to me.

02:21:45.890 --> 02:21:46.340
[LAUGHTER]

02:21:46.340 --> 02:21:47.690
PAUL IRISH: It feels good.

02:21:47.690 --> 02:21:49.550
All right, so that's
pretty good.

02:21:49.550 --> 02:21:50.805
And let's take a look over
in the timeline.

02:21:53.400 --> 02:21:54.260
All right, cool.

02:21:54.260 --> 02:21:57.320
So in general, in the middle,
we got nothing going on.

02:21:57.320 --> 02:22:00.720
We got a little bit of paint
when I'm going between the top

02:22:00.720 --> 02:22:02.440
or when the new image
is coming in.

02:22:02.440 --> 02:22:05.500
That's pretty good.

02:22:05.500 --> 02:22:08.060
So that's a little bit of things
that we can do inside

02:22:08.060 --> 02:22:08.680
the DevTools.

02:22:08.680 --> 02:22:10.830
I actually made a video
showing taking

02:22:10.830 --> 02:22:11.710
this all the way.

02:22:11.710 --> 02:22:13.160
The background has
a fixed position.

02:22:13.160 --> 02:22:16.960
And we can actually move that
to the body element and get

02:22:16.960 --> 02:22:18.055
some wins there.

02:22:18.055 --> 02:22:19.900
But I'm going to come back
to my slides first.

02:22:22.930 --> 02:22:23.850
Ah, yeah.

02:22:23.850 --> 02:22:25.350
All right, so, I want to walk
through some of those

02:22:25.350 --> 02:22:26.500
operations that we
were seeing.

02:22:26.500 --> 02:22:30.600
Recalc style, so, what's
happening inside recalc style

02:22:30.600 --> 02:22:34.340
is it is getting all the style
rules that affect the page.

02:22:34.340 --> 02:22:38.260
This is anything inside a style
sheet, an in-line style,

02:22:38.260 --> 02:22:39.360
the user-agent style sheet.

02:22:39.360 --> 02:22:40.570
It's getting all the
style rules.

02:22:40.570 --> 02:22:43.030
It's bringing them into
an object model.

02:22:43.030 --> 02:22:45.250
Then it takes all those
selectors that you got hanging

02:22:45.250 --> 02:22:47.010
around and matches those against
what's in the DOM.

02:22:47.010 --> 02:22:48.590
And it says, oh, there it is.

02:22:48.590 --> 02:22:49.990
That one right there,
yes, uh-huh.

02:22:49.990 --> 02:22:51.080
The selector matching.

02:22:51.080 --> 02:22:54.200
Now, as Paul said, it
happens really fast.

02:22:54.200 --> 02:22:56.660
Usually in recalc style, the
selector matching takes up

02:22:56.660 --> 02:22:59.770
about 10% of the general
purple bar.

02:22:59.770 --> 02:23:00.400
Not very much.

02:23:00.400 --> 02:23:02.250
Don't worry about it.

02:23:02.250 --> 02:23:04.210
Now, that it has that and
matched against the DOM, it

02:23:04.210 --> 02:23:06.860
calculates the computed style
for every single DOM element.

02:23:06.860 --> 02:23:08.230
So you know in JavaScript,
when you ask for a GET

02:23:08.230 --> 02:23:09.760
computed style?

02:23:09.760 --> 02:23:10.570
It's doing that.

02:23:10.570 --> 02:23:13.130
But for every CSS property, for
every element, it figures

02:23:13.130 --> 02:23:14.230
out how things should look.

02:23:14.230 --> 02:23:15.430
It makes sense.

02:23:15.430 --> 02:23:17.810
OK, moving on into layout.

02:23:17.810 --> 02:23:19.950
Layout is the geometry
of the page.

02:23:19.950 --> 02:23:23.740
And I want to show one way
to look at layout.

02:23:23.740 --> 02:23:27.830
So I'll open up this little
demo right here.

02:23:27.830 --> 02:23:30.356
And--

02:23:30.356 --> 02:23:32.320
come on.

02:23:32.320 --> 02:23:35.330
JSbin's server is in
the UK, isn't it?

02:23:35.330 --> 02:23:35.800
AUDIENCE: Yep.

02:23:35.800 --> 02:23:38.620
PAUL IRISH: Yeah.

02:23:38.620 --> 02:23:40.680
It's like looking at
a loaded spinner.

02:23:40.680 --> 02:23:42.310
All right, cool.

02:23:42.310 --> 02:23:45.900
So I'm going to click these
buttons like that.

02:23:45.900 --> 02:23:48.040
Now, what I'm going
to do is I'm going

02:23:48.040 --> 02:23:48.970
to hit switch layout.

02:23:48.970 --> 02:23:52.420
And we're going to start
this animation.

02:23:52.420 --> 02:23:57.250
Now, if I open up Timeline and
record, you can see that, as

02:23:57.250 --> 02:24:00.170
that animation's happening,
we're getting a

02:24:00.170 --> 02:24:01.760
lot of layout costs.

02:24:01.760 --> 02:24:06.680
And that makes sense because
layout is reevaluating the

02:24:06.680 --> 02:24:08.200
geometry of the page.

02:24:08.200 --> 02:24:12.540
And this sort of animation here
has to figure out this

02:24:12.540 --> 02:24:15.080
new text flow.

02:24:15.080 --> 02:24:18.570
And when the text flows, then we
get a new height for where

02:24:18.570 --> 02:24:20.230
person two starts and
person three starts.

02:24:20.230 --> 02:24:23.500
And it's a lot of work to figure
out that new geometry.

02:24:23.500 --> 02:24:27.200
And it happens every single
frame of that animation.

02:24:27.200 --> 02:24:29.050
It's a bit expensive.

02:24:29.050 --> 02:24:33.190
Now, the next thing after layout
is determined is paint.

02:24:33.190 --> 02:24:35.730
We heard a lot about
this from Paul.

02:24:35.730 --> 02:24:38.310
Paint hurts a lot on
low-end devices.

02:24:38.310 --> 02:24:43.230
Old Android phones with not a
lot of hardware have a tough

02:24:43.230 --> 02:24:47.440
time updating anything when it
requires paint on every frame.

02:24:47.440 --> 02:24:50.240
Debugging this with continuous
paint mode is probably one of

02:24:50.240 --> 02:24:51.470
the best ways to do it.

02:24:51.470 --> 02:24:54.910
So I'm going to show
that real quickly.

02:24:54.910 --> 02:24:56.400
I said real quickly.

02:24:56.400 --> 02:24:59.246
And then, I loaded
up a JSbin URL.

02:24:59.246 --> 02:25:01.470
Come on, England.

02:25:01.470 --> 02:25:02.960
Come to me, the bits.

02:25:05.460 --> 02:25:07.150
All right.

02:25:07.150 --> 02:25:08.210
Handy trick--

02:25:08.210 --> 02:25:10.530
DevTools at the bottom, you
might like it on the right.

02:25:10.530 --> 02:25:16.404
You can just take the bar here
and drag it up to the--

02:25:16.404 --> 02:25:18.172
[LAUGHTER]

02:25:18.172 --> 02:25:19.900
PAUL IRISH: You can also
click the button.

02:25:19.900 --> 02:25:20.365
[LAUGHTER]

02:25:20.365 --> 02:25:23.160
PAUL IRISH: Great.

02:25:23.160 --> 02:25:25.760
I have a lot of DevTool
extensions, and I'm just going

02:25:25.760 --> 02:25:28.740
to make excuses.

02:25:28.740 --> 02:25:36.140
You might have noticed inside of
Chrome Canary that I have--

02:25:36.140 --> 02:25:37.460
wow.

02:25:37.460 --> 02:25:39.680
Let's go back.

02:25:39.680 --> 02:25:40.520
So we're here.

02:25:40.520 --> 02:25:41.010
We're looking at this page.

02:25:41.010 --> 02:25:43.790
We have lovely boxes
all over the place.

02:25:43.790 --> 02:25:45.220
That's real good.

02:25:45.220 --> 02:25:49.860
But we're going to turn on
continuous paint mode.

02:25:49.860 --> 02:25:51.410
Now, continuous paint
mode, basically,

02:25:51.410 --> 02:25:54.230
says to Chrome, hey.

02:25:54.230 --> 02:25:55.570
I know you know what
it looks like.

02:25:55.570 --> 02:25:59.740
But I just want you to tell me
what it looks like, again, and

02:25:59.740 --> 02:26:01.500
again, and again, and
again, and again.

02:26:01.500 --> 02:26:03.450
So it's just going to repaint
everything that

02:26:03.450 --> 02:26:04.180
needs to get painted.

02:26:04.180 --> 02:26:07.180
So if I look at Timeline, it
is just doing the same work

02:26:07.180 --> 02:26:10.750
over and over again.

02:26:10.750 --> 02:26:14.130
But what this allows us to do
is make some changes and see

02:26:14.130 --> 02:26:15.610
how it affects that
graph up there.

02:26:15.610 --> 02:26:18.192
So right now we're
looking at--

02:26:18.192 --> 02:26:19.010
what is this?

02:26:19.010 --> 02:26:24.250
8 milliseconds or so per paint
of the entire page.

02:26:24.250 --> 02:26:26.770
Now, we can try some
different things.

02:26:26.770 --> 02:26:29.740
So maybe I'm going to
come over here and

02:26:29.740 --> 02:26:30.950
toggle the box shadows.

02:26:30.950 --> 02:26:32.070
So I turn on box shadows.

02:26:32.070 --> 02:26:35.750
And you can see pretty quickly--
sorry about that--

02:26:35.750 --> 02:26:38.600
paint time dives really,
really high.

02:26:41.340 --> 02:26:44.840
So the box shadow is adding
quite a bit to how long it

02:26:44.840 --> 02:26:45.920
takes to paint the page.

02:26:45.920 --> 02:26:50.450
I also know that there's a
border radius on these boxes.

02:26:50.450 --> 02:26:51.505
I can try turning that off.

02:26:51.505 --> 02:26:53.790
See if that makes
any difference.

02:26:53.790 --> 02:26:58.320
It does make a slight
difference, yeah.

02:26:58.320 --> 02:27:01.290
But this gives you an option
to figure out things.

02:27:01.290 --> 02:27:04.560
Now, a handy trick when you're
using continuous painting mode

02:27:04.560 --> 02:27:08.420
is the H key hides
DOM elements.

02:27:08.420 --> 02:27:11.170
So you can walk through you're
DOM, hide things and see what

02:27:11.170 --> 02:27:12.610
the effect is.

02:27:12.610 --> 02:27:14.550
So maybe you'll hide
the header, get

02:27:14.550 --> 02:27:15.460
that out of the way.

02:27:15.460 --> 02:27:18.330
It bisects the DOM, figuring
out where your costs are.

02:27:18.330 --> 02:27:19.620
This H works all the time.

02:27:19.620 --> 02:27:22.040
It's pretty handy.

02:27:22.040 --> 02:27:25.140
So that's continuous painting
mode real quick.

02:27:25.140 --> 02:27:27.590
I got a question recently which
is, there's all these

02:27:27.590 --> 02:27:29.930
operations inside the
DevTools timeline.

02:27:29.930 --> 02:27:34.430
What is the order that
I should see them in?

02:27:34.430 --> 02:27:37.660
And then what we're looking at
right here is basically it.

02:27:37.660 --> 02:27:40.360
So a lot of times, you start
off with some JavaScript.

02:27:40.360 --> 02:27:40.925
It touches the DOM.

02:27:40.925 --> 02:27:42.420
It changes something.

02:27:42.420 --> 02:27:44.890
Then the browser does have
to recalculate style.

02:27:44.890 --> 02:27:46.230
It has to layout the page.

02:27:46.230 --> 02:27:47.750
It has to paint it and probably

02:27:47.750 --> 02:27:50.060
composite some layers.

02:27:50.060 --> 02:27:52.490
Ideally, this is the flow.

02:27:52.490 --> 02:27:56.910
And there's only one operation
per, basically, paint.

02:27:56.910 --> 02:28:00.015
Paint is the user got
to see something.

02:28:00.015 --> 02:28:02.080
When we were talking about
layout thrashing before,

02:28:02.080 --> 02:28:04.170
layout thrashing is, oftentimes,
we're doing a

02:28:04.170 --> 02:28:06.235
bunch of recalc style and then
layout, and then recalc style

02:28:06.235 --> 02:28:07.650
and layout, recalc
style and layout.

02:28:07.650 --> 02:28:09.370
And the user doesn't
see anything.

02:28:09.370 --> 02:28:12.120
There are no paints.

02:28:12.120 --> 02:28:15.830
So ideally, you have only
one layout per paint.

02:28:15.830 --> 02:28:19.410
So here's a little cheat sheet
for taking action from what

02:28:19.410 --> 02:28:21.360
the timeline is telling you.

02:28:21.360 --> 02:28:23.500
If the timeline is telling
you, oh my

02:28:23.500 --> 02:28:24.440
god, lots of yellow.

02:28:24.440 --> 02:28:27.560
There's so much time being
spent inside JavaScript.

02:28:27.560 --> 02:28:32.280
I should point out that that
Canadian expo site, remember

02:28:32.280 --> 02:28:33.550
when I profiled it before?

02:28:33.550 --> 02:28:35.436
Was there any yellow
at all in it?

02:28:35.436 --> 02:28:36.390
No.

02:28:36.390 --> 02:28:39.030
There was no JavaScript at all
slowing down that site.

02:28:39.030 --> 02:28:41.250
It was all inside
the rendering.

02:28:41.250 --> 02:28:43.580
But if you're in a case where
you are on a lot of

02:28:43.580 --> 02:28:46.310
JavaScript, you can use
the flame chart.

02:28:46.310 --> 02:28:49.010
I'm going to show this
really quickly.

02:28:49.010 --> 02:28:53.256
Who has seen or used
the flame chart?

02:28:53.256 --> 02:28:53.890
It's good.

02:28:53.890 --> 02:28:54.620
It's a powerful thing.

02:28:54.620 --> 02:28:57.850
So this is MathJax
and a really good

02:28:57.850 --> 02:28:59.830
polyfill for MathML.

02:28:59.830 --> 02:29:04.170
But I want to check out
how fast it can

02:29:04.170 --> 02:29:05.110
render these things.

02:29:05.110 --> 02:29:06.720
So I'm going to turn
off these.

02:29:06.720 --> 02:29:07.480
Come down here.

02:29:07.480 --> 02:29:10.900
And so it's actually just
rendering this stuff out.

02:29:10.900 --> 02:29:14.935
And I can choose to render
it in SVG or HML CSS.

02:29:14.935 --> 02:29:19.730
Come under Profiles, and I'm
going to collect JavaScript

02:29:19.730 --> 02:29:23.300
CPU profiles and record.

02:29:23.300 --> 02:29:25.960
Change this.

02:29:25.960 --> 02:29:29.730
Ooh, aah!

02:29:29.730 --> 02:29:31.750
All right, cool.

02:29:31.750 --> 02:29:34.090
Now, normally when you come into
the JavaScript profile,

02:29:34.090 --> 02:29:36.040
you see something like this.

02:29:36.040 --> 02:29:39.440
Just go down to the bottom,
right there and

02:29:39.440 --> 02:29:41.480
select Flame Chart.

02:29:41.480 --> 02:29:44.080
What it's going to give you
is a view like this.

02:29:44.080 --> 02:29:48.420
And so, this is a time-based
view of JavaScript execution.

02:29:48.420 --> 02:29:52.060
And it progresses from left to
right over time just like you

02:29:52.060 --> 02:29:53.000
expect on the timeline.

02:29:53.000 --> 02:29:55.830
And in fact, if you want, you
can record on the timeline and

02:29:55.830 --> 02:29:59.380
on the JavaScript profiler
at the same time.

02:29:59.380 --> 02:30:00.960
But you see some spikes.

02:30:00.960 --> 02:30:03.970
You want to go investigate
what's actually happening.

02:30:03.970 --> 02:30:06.905
And so, I'll take a look
at the SVG one first.

02:30:09.950 --> 02:30:13.340
So we can see there's actually
a good amount of latency.

02:30:13.340 --> 02:30:18.240
There's good gaps between
all these flames.

02:30:18.240 --> 02:30:21.230
And if you look on timeline,
there's actually a bunch of

02:30:21.230 --> 02:30:22.770
network activity that's
happening

02:30:22.770 --> 02:30:24.240
between these things.

02:30:24.240 --> 02:30:27.420
So they're making network
requests as they're trying to

02:30:27.420 --> 02:30:28.170
pull together things.

02:30:28.170 --> 02:30:30.420
And it's a bit inefficient.

02:30:30.420 --> 02:30:33.940
Over in this version, they
don't have that problem.

02:30:33.940 --> 02:30:37.140
But we can identify where
all the function

02:30:37.140 --> 02:30:38.220
costs are coming from.

02:30:38.220 --> 02:30:40.100
Now, height is just
call stack.

02:30:40.100 --> 02:30:42.710
So height is really
not important.

02:30:42.710 --> 02:30:47.070
What's important is width
because width is time.

02:30:47.070 --> 02:30:50.050
But we're able to see here what
are the functions that

02:30:50.050 --> 02:30:50.710
are taking up time.

02:30:50.710 --> 02:30:54.360
We also get to understand the
execution code paths here, and

02:30:54.360 --> 02:30:57.610
what calls what, and how do we
go from start to finish in

02:30:57.610 --> 02:30:58.860
this operation.

02:31:01.530 --> 02:31:04.045
So that's if we're spending
a lot of time on Script.

02:31:04.045 --> 02:31:06.910
If we're spending a lot of time
in Layout, dig into the

02:31:06.910 --> 02:31:08.880
JavaScript that's
triggering it.

02:31:08.880 --> 02:31:11.320
In DevTools timeline, like I
showed before, you'll see a

02:31:11.320 --> 02:31:12.230
call stack.

02:31:12.230 --> 02:31:14.570
Find out what you're doing in
JavaScript that it's forcing

02:31:14.570 --> 02:31:16.540
the browser to do a layout.

02:31:16.540 --> 02:31:19.670
With Paints, find what is
actually being repainted.

02:31:19.670 --> 02:31:21.960
Turn on those paint rects, turn
on the layer borders, and

02:31:21.960 --> 02:31:22.650
see what's happening.

02:31:22.650 --> 02:31:25.830
You might have to promote a
layer using translate z to get

02:31:25.830 --> 02:31:28.040
out of a paint storm.

02:31:28.040 --> 02:31:31.370
This often happens with
fixed-position elements.

02:31:31.370 --> 02:31:34.665
But take another look at
what Paul showed you.

02:31:34.665 --> 02:31:38.070
You can bisect what are actually
expensive things

02:31:38.070 --> 02:31:40.210
happening using continuous
paint mode.

02:31:40.210 --> 02:31:42.060
And if none of these things
answer your questions, it's

02:31:42.060 --> 02:31:46.030
time to dig into About Tracing,
which is a really

02:31:46.030 --> 02:31:47.240
extensive tool.

02:31:47.240 --> 02:31:49.590
And I'm not going to
touch it right now.

02:31:49.590 --> 02:31:53.280
But to tackle all of these
operations and how they

02:31:53.280 --> 02:31:56.040
actually map to your CSS,
we should probably

02:31:56.040 --> 02:31:56.830
take a look at that.

02:31:56.830 --> 02:32:03.210
So if we take this little block
of CSS, the selector up

02:32:03.210 --> 02:32:04.340
there-- and that does
have to get

02:32:04.340 --> 02:32:05.640
matched up to a DOM element.

02:32:05.640 --> 02:32:09.060
So the selector will be caught
up in recalc style.

02:32:09.060 --> 02:32:12.590
The height affects the
geometry of the box.

02:32:12.590 --> 02:32:15.310
So that is mostly captured
inside the cost of layout.

02:32:15.310 --> 02:32:17.880
And a text shadow does not
affect any geometry of the

02:32:17.880 --> 02:32:18.445
page whatsoever.

02:32:18.445 --> 02:32:21.030
It is just a visual
effect, right?

02:32:21.030 --> 02:32:22.950
So it will have no
effect whatsoever

02:32:22.950 --> 02:32:24.600
inside Layout and Paint.

02:32:24.600 --> 02:32:25.610
Now, this is helpful to know.

02:32:25.610 --> 02:32:30.130
Because if you turn on
Continuous Painting mode, it's

02:32:30.130 --> 02:32:33.720
only going to give you numbers
that reflect things that have

02:32:33.720 --> 02:32:34.440
an effect on paint.

02:32:34.440 --> 02:32:38.430
So you change the height of a
box inside Continuous Paint

02:32:38.430 --> 02:32:41.010
mode, not much, really.

02:32:41.010 --> 02:32:43.250
You're not going to
get a good result.

02:32:43.250 --> 02:32:46.840
But another way to look at this
is that different CSS

02:32:46.840 --> 02:32:49.250
properties affect these
different things.

02:32:49.250 --> 02:32:53.240
So like Paul mentioned before,
transform and opacity are

02:32:53.240 --> 02:32:56.590
really fast because the GPU
can handle it 100%.

02:32:56.590 --> 02:32:59.530
So this happens here.

02:32:59.530 --> 02:33:02.290
If you're touching transform and
opacity, you do not need

02:33:02.290 --> 02:33:03.500
to lay these out.

02:33:03.500 --> 02:33:06.720
You do not need to paint them.

02:33:06.720 --> 02:33:09.310
A few happen at Paint.

02:33:09.310 --> 02:33:11.810
So this is box shadow,
border radius.

02:33:11.810 --> 02:33:12.700
These are visual effects.

02:33:12.700 --> 02:33:15.260
Like I said, they don't
affect any geometry.

02:33:15.260 --> 02:33:16.540
Outline is also here.

02:33:16.540 --> 02:33:18.280
Because outline is similar
to border.

02:33:18.280 --> 02:33:23.240
But you can change an outline
from 1 pixel to 100 pixels,

02:33:23.240 --> 02:33:27.350
and everything stays
the same place.

02:33:27.350 --> 02:33:31.130
But a lot of CSS properties
do affect the layout.

02:33:31.130 --> 02:33:32.490
Of course, anything
that affects the

02:33:32.490 --> 02:33:34.460
positioning of the boxes.

02:33:34.460 --> 02:33:38.090
Width, margin, border, absolute
positioning, relative

02:33:38.090 --> 02:33:41.550
positioning, these things
affect layout.

02:33:41.550 --> 02:33:47.740
And actually, I took a look
at all the CSS properties.

02:33:47.740 --> 02:33:49.810
So Chrome, actually--

02:33:49.810 --> 02:33:50.840
yesterday, I think--

02:33:50.840 --> 02:33:53.390
released some numbers around
the popularity of all CSS

02:33:53.390 --> 02:33:55.190
properties on the web.

02:33:55.190 --> 02:33:55.810
And this is them.

02:33:55.810 --> 02:33:58.760
So width is the most popular
CSS property.

02:33:58.760 --> 02:34:01.710
Who would have expected that?

02:34:01.710 --> 02:34:07.120
But it's interesting to look
at these and identify what

02:34:07.120 --> 02:34:09.420
sequence of operations
they force.

02:34:09.420 --> 02:34:12.720
And so most actually do affect
the geometry of the page.

02:34:12.720 --> 02:34:16.690
But, of course, opacity, like
I mentioned, does not.

02:34:16.690 --> 02:34:21.070
Another cool way to look
at this is Animatable.

02:34:21.070 --> 02:34:22.790
Lea Verou made this tool.

02:34:22.790 --> 02:34:24.970
And hopefully, I can show
this really quickly.

02:34:24.970 --> 02:34:29.250
So this is just using key frame
animations, just to

02:34:29.250 --> 02:34:32.520
change a single CSS property
on a bunch

02:34:32.520 --> 02:34:34.230
of different things.

02:34:34.230 --> 02:34:39.150
But it's pretty cool to bring
this up and try it out to see

02:34:39.150 --> 02:34:43.220
what it actually looks
like inside Timeline.

02:34:43.220 --> 02:34:50.165
So like I said, we'll take
a look at font size.

02:34:54.360 --> 02:34:54.980
There we go.

02:34:54.980 --> 02:34:58.900
So as we animate font size, font
size does cause layout.

02:34:58.900 --> 02:35:00.130
And we see it right here.

02:35:00.130 --> 02:35:02.960
Box shadow, like I mentioned,
does not have any effect on

02:35:02.960 --> 02:35:05.632
layout and--

02:35:05.632 --> 02:35:08.434
oh, did I lie?

02:35:08.434 --> 02:35:12.620
Ooh, tough, Paul.

02:35:12.620 --> 02:35:13.870
Let me try one more.

02:35:16.540 --> 02:35:17.410
There we go.

02:35:17.410 --> 02:35:19.340
That's pretty good.

02:35:19.340 --> 02:35:21.150
So we're doing a transform
animation.

02:35:21.150 --> 02:35:22.920
It's just staying on the GPU.

02:35:22.920 --> 02:35:24.460
We're not going back
to layout.

02:35:24.460 --> 02:35:29.400
So this is extremely efficient
when it comes to animations.

02:35:29.400 --> 02:35:33.570
So in transitions, there's four
things that a browser can

02:35:33.570 --> 02:35:35.830
do really, really fast
in jank-free.

02:35:35.830 --> 02:35:36.600
It can scale.

02:35:36.600 --> 02:35:39.850
It can move, it can
rotate, and fade.

02:35:39.850 --> 02:35:44.050
These translate in CSS
to these guys.

02:35:44.050 --> 02:35:45.500
I should point out, you
might need the null

02:35:45.500 --> 02:35:49.140
transform hack, maybe.

02:35:49.140 --> 02:35:52.110
But if you're doing any
animations, any visual

02:35:52.110 --> 02:35:56.170
effects, you want to be doing
them with these operations.

02:35:56.170 --> 02:35:57.820
These can be fast.

02:35:57.820 --> 02:35:59.560
It could be fast on
low-end hardware.

02:35:59.560 --> 02:36:01.680
It could be fast on
high-end hardware.

02:36:01.680 --> 02:36:06.520
Every other operation is going
to incur layout or maybe a

02:36:06.520 --> 02:36:07.490
good amount of paint.

02:36:07.490 --> 02:36:10.680
So it's going to be slower.

02:36:10.680 --> 02:36:13.340
Now, when it comes to measuring,
we want to know

02:36:13.340 --> 02:36:16.970
that these performance
enhancements that we're doing

02:36:16.970 --> 02:36:18.560
are good for people.

02:36:18.560 --> 02:36:21.720
If we take a look at Twitter,
the load event, window

02:36:21.720 --> 02:36:26.960
outload, fires about midway
through the network waterfall.

02:36:26.960 --> 02:36:29.390
And the end of activity
is quite a bit later.

02:36:29.390 --> 02:36:34.390
So looking at window.load for
knowing that the page is done

02:36:34.390 --> 02:36:35.960
is not going to work out.

02:36:35.960 --> 02:36:39.600
So we need better ways
to identify how

02:36:39.600 --> 02:36:40.780
successful are we?

02:36:40.780 --> 02:36:43.940
So this is an approach developed
by a guy named Pat

02:36:43.940 --> 02:36:46.780
Meenen, who runs WebPageTest.

02:36:46.780 --> 02:36:51.820
So up at the top, we have the
filmstrip view of loading a

02:36:51.820 --> 02:36:55.410
page that's been optimized
two different ways.

02:36:55.410 --> 02:37:00.060
And so, you can see that the
third way is delivering

02:37:00.060 --> 02:37:03.470
content to the user faster
than the other ones.

02:37:03.470 --> 02:37:06.280
Down here is a plot of the
percentage of the visual

02:37:06.280 --> 02:37:08.280
progress, plotting these out.

02:37:08.280 --> 02:37:11.210
So you can see, here, we're
already showing

02:37:11.210 --> 02:37:13.040
things to the user.

02:37:13.040 --> 02:37:15.720
And so, that's why gold
is jumping up.

02:37:15.720 --> 02:37:19.500
Now, if we want to take this and
turn it into a metric, we

02:37:19.500 --> 02:37:24.590
can take the area above
that line and just

02:37:24.590 --> 02:37:26.320
absorb it into a figure.

02:37:26.320 --> 02:37:27.640
So this is called
the speed index.

02:37:27.640 --> 02:37:34.720
It's basically the area above
the curve that accounts for

02:37:34.720 --> 02:37:37.630
the visual progress being
shown to the user.

02:37:37.630 --> 02:37:40.850
So this is a nice, quantitative
measurement for

02:37:40.850 --> 02:37:44.580
getting a successful picture
in front of the user.

02:37:44.580 --> 02:37:48.770
Now, in the real world, we want
to be able to identify

02:37:48.770 --> 02:37:53.600
things like, how as we're
developing a project over

02:37:53.600 --> 02:37:55.070
time, are we regressing
performance?

02:37:55.070 --> 02:37:56.530
Are we improving it?

02:37:56.530 --> 02:37:59.420
Adobe Topcoat is a CSS library
that has a really nice

02:37:59.420 --> 02:38:01.960
framework set up for
benchmarking.

02:38:01.960 --> 02:38:04.290
So they're using a project
called Telemetry that

02:38:04.290 --> 02:38:05.690
Chrome works on.

02:38:05.690 --> 02:38:09.120
And so, this is actually a view
of their button element.

02:38:09.120 --> 02:38:12.210
And the horizontal axis
we just have commits.

02:38:12.210 --> 02:38:13.360
And we can actually see--

02:38:13.360 --> 02:38:24.340
for the mean frame rate, the
load time, and the layout how

02:38:24.340 --> 02:38:25.100
things are progressing.

02:38:25.100 --> 02:38:26.860
And so you can actually see
this is a pretty big

02:38:26.860 --> 02:38:31.800
regression in load time
of this test case.

02:38:31.800 --> 02:38:34.870
And then things actually did
slow down later here as well.

02:38:34.870 --> 02:38:36.870
But we're able to track
this over time,

02:38:36.870 --> 02:38:38.780
which is really powerful.

02:38:38.780 --> 02:38:41.460
Another developer took a look
at this and applied this to

02:38:41.460 --> 02:38:45.590
Bootstrap over the history of
the project from 1.0 to 3.0.

02:38:45.590 --> 02:38:47.990
And so this is just a quick
view of the dropdowns

02:38:47.990 --> 02:38:49.620
component inside Bootstrap.

02:38:49.620 --> 02:38:53.150
And we're looking at the
first paint metric.

02:38:53.150 --> 02:38:54.570
First paint is a tricky one.

02:38:54.570 --> 02:38:58.880
And it's hard to find the good
metrics, but I think speed

02:38:58.880 --> 02:39:00.460
index is one of the best ones.

02:39:00.460 --> 02:39:04.430
Inside Google Analytics there's
a few tools for these.

02:39:04.430 --> 02:39:05.900
You're looking at network
activity.

02:39:05.900 --> 02:39:10.830
You can identify page load time,
domain look up, page

02:39:10.830 --> 02:39:11.860
download time.

02:39:11.860 --> 02:39:16.320
All these are the exact same as
window.performance.timing.

02:39:16.320 --> 02:39:20.020
But since all major browsers
support this, Google Analytics

02:39:20.020 --> 02:39:22.120
will report it here.

02:39:22.120 --> 02:39:26.330
You also get these numbers
split up by browser, by

02:39:26.330 --> 02:39:27.040
operating system.

02:39:27.040 --> 02:39:30.880
So this is just a view I made of
browsing operating system.

02:39:30.880 --> 02:39:34.880
Here, you can see Safari on iOS
is considerably slower on

02:39:34.880 --> 02:39:36.560
page load time than the rest.

02:39:36.560 --> 02:39:38.570
And I think that's mostly
because it's on a mobile

02:39:38.570 --> 02:39:40.700
network, whereas nearly
all these others

02:39:40.700 --> 02:39:44.100
are desktop on Wi-Fi.

02:39:44.100 --> 02:39:45.850
Speedcurve is a really
cool site.

02:39:45.850 --> 02:39:47.210
It's still in private
beta right now.

02:39:47.210 --> 02:39:51.450
But it's hoping to give you a
lot more insight when it comes

02:39:51.450 --> 02:39:55.010
to the performance of
your site over time.

02:39:55.010 --> 02:39:57.020
And so, here is HTMLRocks--

02:39:57.020 --> 02:39:58.360
which I work on--

02:39:58.360 --> 02:40:03.400
plotted against Amazon and
TripAdvisor to see that.

02:40:03.400 --> 02:40:06.160
But one tool that I really want
to show is WebPageTest,

02:40:06.160 --> 02:40:10.290
and I'm going to show it with
a site called RetailMeNot.

02:40:10.290 --> 02:40:12.560
This page I just loaded now.

02:40:12.560 --> 02:40:15.065
I'm going to do a shift refresh
because it's so fast.

02:40:17.640 --> 02:40:20.340
The developers behind this have
worked quite a bit on the

02:40:20.340 --> 02:40:22.500
page load time, and
it really shows.

02:40:22.500 --> 02:40:25.670
But what's really cool is
taking a look at what

02:40:25.670 --> 02:40:27.650
WebPageTest tells us.

02:40:27.650 --> 02:40:30.010
So I ran this just
earlier today.

02:40:30.010 --> 02:40:34.280
So this is RetailMeNot, assuming
a cable internet

02:40:34.280 --> 02:40:36.490
connection inside Chrome.

02:40:36.490 --> 02:40:38.920
And so here, if you've seen
WebPageTest before-- it's been

02:40:38.920 --> 02:40:41.250
around for a while--

02:40:41.250 --> 02:40:43.380
you might know it has the
waterfalls and stuff.

02:40:43.380 --> 02:40:44.890
It has a lot more than that.

02:40:44.890 --> 02:40:46.900
I really encourage you
to take another look.

02:40:46.900 --> 02:40:49.690
First thing I'm going to show
is the filmstrip view.

02:40:49.690 --> 02:40:55.370
So over here in the filmstrip
view, we have--

02:40:55.370 --> 02:40:59.260
just like before, every 100
milliseconds, we have a

02:40:59.260 --> 02:41:00.910
snapshot of what the
page looks like.

02:41:00.910 --> 02:41:05.430
And you can see, at 0.9 seconds,
we start to have an

02:41:05.430 --> 02:41:06.940
actual page being rendered.

02:41:06.940 --> 02:41:07.630
It's really cool.

02:41:07.630 --> 02:41:11.130
As I scroll through this, you
can see my waterfall.

02:41:11.130 --> 02:41:13.350
We're going through my network
waterfall, and we're seeing

02:41:13.350 --> 02:41:14.600
that correlation.

02:41:16.470 --> 02:41:19.140
Now, another really nice thing
is that you can ask

02:41:19.140 --> 02:41:23.930
WebPageTest to capture the
DevTools timeline recording.

02:41:23.930 --> 02:41:26.860
And so we can just view
the DevTools timeline

02:41:26.860 --> 02:41:28.240
associated with this.

02:41:28.240 --> 02:41:31.240
So I'm just going to
do that right now.

02:41:31.240 --> 02:41:34.655
So Chrome DevTools has a
web app, as you know.

02:41:34.655 --> 02:41:37.260
So we're just viewing
this as a web app.

02:41:37.260 --> 02:41:39.220
And this is the actual recording
that we are looking

02:41:39.220 --> 02:41:40.530
at on the WebPageTest.

02:41:40.530 --> 02:41:41.740
And we can see a lot more.

02:41:41.740 --> 02:41:45.390
So we can see, here's the data
coming in, the HTML.

02:41:45.390 --> 02:41:48.090
Google Analytics causes
a layout.

02:41:48.090 --> 02:41:49.720
They're asking for
offset width.

02:41:49.720 --> 02:41:51.330
So you get the screen size.

02:41:51.330 --> 02:41:52.290
And we come down here.

02:41:52.290 --> 02:41:54.050
And pretty soon,
we get a paint.

02:41:54.050 --> 02:41:57.660
And so this is that paint,
that 818 milliseconds.

02:41:57.660 --> 02:42:03.650
That's why we are seeing
a thumbnail right then.

02:42:03.650 --> 02:42:07.780
The last thing I'll show is
that it even takes those

02:42:07.780 --> 02:42:11.730
numbers from the timeline and
aggregates them over the load

02:42:11.730 --> 02:42:12.810
of the page.

02:42:12.810 --> 02:42:16.320
So we can actually see, for that
entire duration that it

02:42:16.320 --> 02:42:19.020
was recording, let's summarize
all the time that it spent in

02:42:19.020 --> 02:42:22.110
Layout, in JavaScript,
in Paint.

02:42:22.110 --> 02:42:26.180
And so we can see here, for that
page load time, where was

02:42:26.180 --> 02:42:27.550
the browser spending
it's time?

02:42:27.550 --> 02:42:30.830
So here we're mostly spending
a lot of time in JavaScript,

02:42:30.830 --> 02:42:32.100
to be honest.

02:42:32.100 --> 02:42:36.420
But Layout does contribute
a little bit to this.

02:42:39.540 --> 02:42:41.970
So WebPageTest, really
cool, had a

02:42:41.970 --> 02:42:44.630
lot of features recently.

02:42:44.630 --> 02:42:47.490
And the nice thing is that you
can take the difference

02:42:47.490 --> 02:42:50.220
between multiple recordings
and be able to track your

02:42:50.220 --> 02:42:51.470
performance over time.

02:42:55.680 --> 02:42:59.300
If you use webpagetest.org,
the site you're

02:42:59.300 --> 02:43:00.500
testing has to be online.

02:43:00.500 --> 02:43:01.735
But you can run a private
instance.

02:43:01.735 --> 02:43:03.180
So you can run against
a development

02:43:03.180 --> 02:43:04.120
server if you want.

02:43:04.120 --> 02:43:07.110
It's all open source.

02:43:07.110 --> 02:43:09.540
So to sum up, a few things.

02:43:09.540 --> 02:43:11.660
We heard a lot of
numbers tonight.

02:43:11.660 --> 02:43:13.770
Under 16 milliseconds
is smooth animation.

02:43:13.770 --> 02:43:17.490
Under 100 milliseconds feels
pretty much instant.

02:43:17.490 --> 02:43:21.530
Under one second, mm,
I'm OK with it.

02:43:21.530 --> 02:43:25.550
Over a millisecond,
users are unhappy.

02:43:25.550 --> 02:43:29.180
So here are some aggressive
but good goals.

02:43:29.180 --> 02:43:31.690
And things that we should really
be striving towards.

02:43:31.690 --> 02:43:34.840
When it comes to mobile
connectivity, it is hard to

02:43:34.840 --> 02:43:35.980
deliver things fast.

02:43:35.980 --> 02:43:39.660
But users get really impatient
quite fast.

02:43:39.660 --> 02:43:42.510
Shoot to show the content that's
above the folds in

02:43:42.510 --> 02:43:43.970
under a second.

02:43:43.970 --> 02:43:46.500
One important part of this is
serving the above-the-fold

02:43:46.500 --> 02:43:49.350
content in the first 14
kilobytes of response.

02:43:49.350 --> 02:43:52.010
This includes the CSS that you
need to render everything

02:43:52.010 --> 02:43:53.090
that's above the fold.

02:43:53.090 --> 02:43:55.460
You can defer the rest
of the CSS later on.

02:43:55.460 --> 02:43:57.110
You don't need it just yet.

02:43:57.110 --> 02:44:00.800
But fit in that first
14 kilobytes.

02:44:00.800 --> 02:44:02.830
That number is not
totally magic.

02:44:02.830 --> 02:44:06.290
It's based off of how TCP
slow-start works.

02:44:06.290 --> 02:44:08.620
It's the first time that you're
really going to get a

02:44:08.620 --> 02:44:10.150
considerable amount
of data back.

02:44:10.150 --> 02:44:14.550
A maximum of 200 millisecond
server response time, 60 FPS

02:44:14.550 --> 02:44:16.505
on scrolling, 60 FPS
on transitions.

02:44:16.505 --> 02:44:22.920
And a speed index of under 1,000
would be pretty good.

02:44:22.920 --> 02:44:27.050
So aside from reaching those
goals, which are hefty but

02:44:27.050 --> 02:44:28.850
good, what can you do?

02:44:31.830 --> 02:44:34.750
It seems, talking to the people
that I do, a lot of

02:44:34.750 --> 02:44:37.930
people explain that it's hard
to make the case to work on

02:44:37.930 --> 02:44:38.720
performance.

02:44:38.720 --> 02:44:40.040
You know, you've got
to ship features.

02:44:40.040 --> 02:44:41.500
You've got to get that
out the door.

02:44:41.500 --> 02:44:43.835
People expect the end results.

02:44:43.835 --> 02:44:46.520
And I think we really need to be
able to make the case that

02:44:46.520 --> 02:44:48.320
performance is incredibly
important.

02:44:48.320 --> 02:44:50.420
And the best way to do that
is, you can show them the

02:44:50.420 --> 02:44:52.530
numbers from Google, and Amazon,
and Microsoft, and

02:44:52.530 --> 02:44:55.490
anyone who has said that it
affects the bottom line

02:44:55.490 --> 02:44:56.330
significantly.

02:44:56.330 --> 02:44:58.340
But I think most people really
want to see it with their own

02:44:58.340 --> 02:44:59.860
site, with their own data.

02:44:59.860 --> 02:45:02.180
So find, in your own analytics,
ways to correlate

02:45:02.180 --> 02:45:03.930
performance wins to actual
business wins

02:45:03.930 --> 02:45:04.620
that they care about.

02:45:04.620 --> 02:45:07.090
So maybe, the speed index
correlated to conversion rate.

02:45:07.090 --> 02:45:10.590
People that are experiencing
your site faster are

02:45:10.590 --> 02:45:13.250
performing better.

02:45:13.250 --> 02:45:17.055
Make the case to your client
that performance often might

02:45:17.055 --> 02:45:18.360
trump their feature request.

02:45:18.360 --> 02:45:23.000
That awesome, cool feature that
the user will find once

02:45:23.000 --> 02:45:25.520
they register for your site,
they probably won't get to

02:45:25.520 --> 02:45:29.060
that if they're waiting 10
seconds for the site to load.

02:45:29.060 --> 02:45:30.900
Set up infrastructure
to track your perf.

02:45:30.900 --> 02:45:34.525
So you can identify, over the
development of the project,

02:45:34.525 --> 02:45:35.550
how if you're addressing

02:45:35.550 --> 02:45:37.480
performance or if it's improving.

02:45:37.480 --> 02:45:40.010
And to be honest, there's
some tools available.

02:45:40.010 --> 02:45:41.400
I showed some of them tonight.

02:45:41.400 --> 02:45:43.610
But I think it's still quite
early in the space.

02:45:43.610 --> 02:45:47.370
And the open-source community
could use a lot more to help

02:45:47.370 --> 02:45:48.890
everyone track this
stuff better.

02:45:48.890 --> 02:45:52.540
So I encourage you to join a
project or start a new project

02:45:52.540 --> 02:45:55.680
to help everyone in this area.

02:45:55.680 --> 02:45:56.160
All right.

02:45:56.160 --> 02:45:57.210
Thanks, everyone.

02:45:57.210 --> 02:45:58.120
Stick around.

02:45:58.120 --> 02:45:59.590
We're going to do Q&amp;A
in a little bit.

02:45:59.590 --> 02:46:00.554
Thank you.

02:46:00.554 --> 02:46:07.784
[APPLAUSE]

02:46:07.784 --> 02:46:08.748
PETER LUBBERS: Thank
you, Paul.

02:46:08.748 --> 02:46:09.712
PAUL IRISH: Yeah.

02:46:09.712 --> 02:46:11.710
PETER LUBBERS: We have
a great gift for you.

02:46:11.710 --> 02:46:12.080
PAUL IRISH: Cool.

02:46:12.080 --> 02:46:13.752
PETER LUBBERS: I think
you will enjoy.

02:46:13.752 --> 02:46:14.590
PAUL IRISH: Thanks, Vanessa.

02:46:14.590 --> 02:46:15.600
Thank you very much.

02:46:15.600 --> 02:46:16.460
Wow!

02:46:16.460 --> 02:46:16.880
PETER LUBBERS: All right.

02:46:16.880 --> 02:46:22.540
So we need a couple minutes
to set up the Q&amp;A panel.

02:46:22.540 --> 02:46:23.970
You can get up for
a little bit.

02:46:23.970 --> 02:46:27.207
We'll probably call back in
about seven minutes or so, and

02:46:27.207 --> 02:46:29.940
then have everyone back
up here for the Q&amp;A.

02:46:29.940 --> 02:46:33.750
At about 9:30, 9:35, we'll
start with the raffle.

02:46:33.750 --> 02:46:36.280
There's still some
wine in the back.

02:46:36.280 --> 02:46:38.980
I think the beer
is almost gone.

02:46:38.980 --> 02:46:40.400
And we'll just reset.

02:46:40.400 --> 02:46:41.599
And we'll be right back.

02:46:41.599 --> 02:55:33.533
[MUSIC PLAYING]

02:55:33.533 --> 02:55:35.030
PETER LUBBERS: All right.

02:55:35.030 --> 02:55:36.280
[INTERPOSING VOICES]

02:55:49.380 --> 02:55:49.910
PETER LUBBERS: All right.

02:55:49.910 --> 02:55:52.780
Let's make our way
up to the front.

02:55:52.780 --> 02:55:55.671
We're going to get started
for the Q&amp;A session.

02:55:55.671 --> 02:55:56.921
[INTERPOSING VOICES]

02:56:13.270 --> 02:56:18.790
PETER LUBBERS: All right,
so, Q&amp;A time.

02:56:18.790 --> 02:56:22.280
And if those of you in
the back that are not

02:56:22.280 --> 02:56:25.730
participating, maybe just go a
little bit in a quieter area

02:56:25.730 --> 02:56:27.840
in the very back.

02:56:27.840 --> 02:56:29.400
Right, that's a problem.

02:56:32.340 --> 02:56:35.120
Hey, everybody!

02:56:35.120 --> 02:56:38.010
Can we get the noise down in
the back a little bit, so

02:56:38.010 --> 02:56:39.060
everyone can--

02:56:39.060 --> 02:56:41.370
yeah, thank you.

02:56:41.370 --> 02:56:43.550
So who's got a question?

02:56:46.970 --> 02:56:48.950
I have a mic for you
coming your way.

02:56:48.950 --> 02:56:50.880
We're going to pass
this mic around.

02:56:50.880 --> 02:56:57.770
We'll repeat the question here
from the expert panel.

02:56:57.770 --> 02:56:58.200
PAUL LEWIS: Take it, Jake.

02:56:58.200 --> 02:56:58.350
Take it.

02:56:58.350 --> 02:56:59.202
COLT MCANLIS: I vote Jake.

02:56:59.202 --> 02:57:00.150
PAUL LEWIS: Jake, take it!

02:57:00.150 --> 02:57:01.560
JAKE ARCHIBALD: The word
"expert" feels wrong.

02:57:01.560 --> 02:57:01.947
COLT MCANLIS: Expert.

02:57:01.947 --> 02:57:03.110
AUDIENCE: Can you hear me?

02:57:03.110 --> 02:57:03.370
PANEL: Yep.

02:57:03.370 --> 02:57:03.854
Yeah.

02:57:03.854 --> 02:57:04.822
AUDIENCE: All right.

02:57:04.822 --> 02:57:09.180
Actually, my question
was for Jake, the--

02:57:09.180 --> 02:57:09.530
JAKE ARCHIBALD: Oh.

02:57:09.530 --> 02:57:12.050
AUDIENCE: --last one.

02:57:12.050 --> 02:57:15.993
So first thing is, really, every
time I use Chrome Dev

02:57:15.993 --> 02:57:20.235
Tools, they seem
to [INAUDIBLE].

02:57:20.235 --> 02:57:22.730
It's really great.

02:57:22.730 --> 02:57:26.223
But I still have one concern
about the whole thing.

02:57:26.223 --> 02:57:30.215
That's I get concerned about the
fact you say in the talk

02:57:30.215 --> 02:57:34.680
that if it's slow, use translate
z, and put zero

02:57:34.680 --> 02:57:35.946
[INAUDIBLE].

02:57:35.946 --> 02:57:42.230
And, actually, I have the
impression it's like you are

02:57:42.230 --> 02:57:45.315
expecting people to understand
the [INAUDIBLE]

02:57:45.315 --> 02:57:46.280
by doing that.

02:57:46.280 --> 02:57:48.635
And I'm pretty sure most people
will just not get it.

02:57:48.635 --> 02:57:50.990
And it can actually harm
other browsers.

02:57:50.990 --> 02:57:53.582
Or it can harm even Chrome,
because you do something wrong

02:57:53.582 --> 02:57:54.506
in [INAUDIBLE].

02:57:54.506 --> 02:57:55.800
I don't know, would it?

02:57:55.800 --> 02:57:59.784
And it's kind of like saying
to people, you're good.

02:57:59.784 --> 02:58:02.772
Go just to assemble.

02:58:02.772 --> 02:58:05.926
And so people who are really
good at assembling will make

02:58:05.926 --> 02:58:06.756
the cut very fast.

02:58:06.756 --> 02:58:07.254
And it's amazing!

02:58:07.254 --> 02:58:08.250
And we'd say, oh, I
mean, assemble.

02:58:08.250 --> 02:58:11.240
Oh, I know, my god, it's
10 times faster.

02:58:11.240 --> 02:58:13.766
And someone else will try and
will just make a mess.

02:58:13.766 --> 02:58:16.622
And it will be much slower
because he tried to optimize.

02:58:16.622 --> 02:58:19.716
And I think a compiler might
do a better job.

02:58:19.716 --> 02:58:23.250
So all you're trying to--

02:58:23.250 --> 02:58:23.710
PAUL LEWIS: So the question--

02:58:23.710 --> 02:58:24.310
JAKE ARCHIBALD: Yeah,
repeat the question.

02:58:24.310 --> 02:58:28.260
PAUL LEWIS: So the question
is why are you saying use

02:58:28.260 --> 02:58:30.900
something like translate z when
for something that could

02:58:30.900 --> 02:58:34.360
be an anti-pattern or it
could just be misused?

02:58:34.360 --> 02:58:35.040
Fair question?

02:58:35.040 --> 02:58:36.070
AUDIENCE: Yeah.

02:58:36.070 --> 02:58:36.800
PAUL LEWIS: Cool.

02:58:36.800 --> 02:58:41.990
All right, so firstly,
what we always say is

02:58:41.990 --> 02:58:43.610
profile your stuff.

02:58:43.610 --> 02:58:45.380
Learn to use profilers.

02:58:45.380 --> 02:58:47.790
OK, if you start just applying
rules that you've heard

02:58:47.790 --> 02:58:49.990
secondhand, it will work
some of the time.

02:58:49.990 --> 02:58:52.190
It may not work in others.

02:58:52.190 --> 02:58:54.260
And it may just be a
complete disaster.

02:58:54.260 --> 02:58:56.150
So firstly, learn to profile.

02:58:56.150 --> 02:58:59.100
What I've been saying recently
is that when you write code,

02:58:59.100 --> 02:59:01.890
you should expect it to work
according to the spec.

02:59:01.890 --> 02:59:03.760
But as Jake pointed out,
loads of stuff

02:59:03.760 --> 02:59:05.410
isn't actually specced.

02:59:05.410 --> 02:59:07.340
And so to get great performance,
sometimes you

02:59:07.340 --> 02:59:09.540
have to understand the
implementation of the

02:59:09.540 --> 02:59:10.420
specification.

02:59:10.420 --> 02:59:13.290
It's a reality of what we do.

02:59:13.290 --> 02:59:14.040
And that's OK.

02:59:14.040 --> 02:59:15.130
Yeah, we should just
accept that.

02:59:15.130 --> 02:59:16.870
We're growing up
as an industry.

02:59:16.870 --> 02:59:18.710
We're doing more, and
we're going to have

02:59:18.710 --> 02:59:19.530
to understand more.

02:59:19.530 --> 02:59:22.320
It's a slightly uncomfortable
thing.

02:59:22.320 --> 02:59:24.950
There are always people who will
just apply stuff and make

02:59:24.950 --> 02:59:25.650
a mess of it.

02:59:25.650 --> 02:59:30.390
And we'd much rather they'd
learn to profile and figure

02:59:30.390 --> 02:59:31.470
that stuff out.

02:59:31.470 --> 02:59:36.930
But right now, this is the way
to get past the problem.

02:59:36.930 --> 02:59:38.260
We'd rather you didn't
have the problem.

02:59:38.260 --> 02:59:42.020
We're always working to try and
find better ways of doing

02:59:42.020 --> 02:59:45.260
Chrome so that we don't
have these problems.

02:59:45.260 --> 02:59:49.750
But it's a case of saying,
look, if you need to work

02:59:49.750 --> 02:59:51.610
around this problem, here
is a way to do it.

02:59:51.610 --> 02:59:53.390
We're looking at ways from
our side as well

02:59:53.390 --> 02:59:54.330
to make that happen.

02:59:54.330 --> 02:59:57.192
So is that fair?

02:59:57.192 --> 02:59:59.320
JAKE ARCHIBALD: Although I
think there is a lot of

02:59:59.320 --> 03:00:01.740
validity in what you're saying,
like the advice that

03:00:01.740 --> 03:00:04.570
we could give today might
not work tomorrow.

03:00:04.570 --> 03:00:07.670
I mean, an example of this
would be, we used to give

03:00:07.670 --> 03:00:11.440
advice like, if you are going to
concatenate a string, don't

03:00:11.440 --> 03:00:12.270
use plus, right?

03:00:12.270 --> 03:00:13.050
That'd be insane.

03:00:13.050 --> 03:00:16.220
No, use an array, and then join
the array at the end.

03:00:16.220 --> 03:00:18.780
And that was faster at the time,
but now it's slower than

03:00:18.780 --> 03:00:20.580
just doing a normal string
concatenation.

03:00:20.580 --> 03:00:23.950
But, yeah, so these are tips
that today will make your ship

03:00:23.950 --> 03:00:25.110
really fast.

03:00:25.110 --> 03:00:26.620
But you need to be
on top of that.

03:00:26.620 --> 03:00:28.930
You need to be checking
it tomorrow.

03:00:28.930 --> 03:00:32.180
Look after your site if a new
browser comes along that does

03:00:32.180 --> 03:00:33.170
something different.

03:00:33.170 --> 03:00:36.480
And mobile especially can't
handle a lot of layers.

03:00:36.480 --> 03:00:39.110
Then, yeah, profile it, and
if it's not helping,

03:00:39.110 --> 03:00:40.792
do something different.

03:00:40.792 --> 03:00:43.768
PETER LUBBERS: Question
over here.

03:00:43.768 --> 03:00:47.240
AUDIENCE: So I'm trying to
use my time offline.

03:00:47.240 --> 03:00:50.216
To me it seems like you're in a
really good memory problem,

03:00:50.216 --> 03:00:58.386
basically, where you store all
of your assets locally.

03:00:58.386 --> 03:01:00.881
And then they only update
afterwards.

03:01:00.881 --> 03:01:02.877
So it compares a lot.

03:01:02.877 --> 03:01:04.374
And I wanted to hear that.

03:01:04.374 --> 03:01:08.865
Except that the user never
has to update anything.

03:01:08.865 --> 03:01:13.356
They just use the app and all
in the background later.

03:01:13.356 --> 03:01:16.100
And despite the fact that they
don't always have the absolute

03:01:16.100 --> 03:01:20.841
latest version of the site,
basically starting with a

03:01:20.841 --> 03:01:24.334
fresh project, what would be
your recommendation, to use

03:01:24.334 --> 03:01:27.380
HTML5 offline or not?

03:01:27.380 --> 03:01:29.780
JAKE ARCHIBALD: OK, so,
repeat the question.

03:01:29.780 --> 03:01:32.590
Would you recommend using HTML5

03:01:32.590 --> 03:01:35.080
offline on a new project?

03:01:35.080 --> 03:01:38.974
If by HTML5 offline, we mean
application cache--

03:01:38.974 --> 03:01:43.280
uuh, eeeh, aaah, eeeh-- if it's
a single page app, then

03:01:43.280 --> 03:01:44.940
you could probably
get away with it.

03:01:44.940 --> 03:01:48.770
But if you have URLs, which the
web should, then you're

03:01:48.770 --> 03:01:52.170
probably going to get a lot
of pain trying to do that.

03:01:52.170 --> 03:01:53.370
But we're working on
a new thing, right?

03:01:53.370 --> 03:01:55.650
We've got this navigation
controller where you--

03:01:55.650 --> 03:01:56.170
PAUL LEWIS: Service Worker.

03:01:56.170 --> 03:01:56.770
JAKE ARCHIBALD: Service
Worker!

03:01:56.770 --> 03:01:58.280
Well, we'll change
the name again.

03:01:58.280 --> 03:01:58.960
Don't worry about it.

03:01:58.960 --> 03:02:00.540
Don't try to remember
anything.

03:02:00.540 --> 03:02:01.330
Yeah, yeah.

03:02:01.330 --> 03:02:02.440
Thanks.

03:02:02.440 --> 03:02:04.490
But the idea is that you're
going to have this web worker

03:02:04.490 --> 03:02:06.680
that is going to be able
to receive events.

03:02:06.680 --> 03:02:09.430
And one of those events is going
to be fetch, when the

03:02:09.430 --> 03:02:11.640
browser tries to go
away and fetch

03:02:11.640 --> 03:02:12.920
something from the network.

03:02:12.920 --> 03:02:15.230
And you can cancel that event in
the same way you can cancel

03:02:15.230 --> 03:02:16.530
a click on a link.

03:02:16.530 --> 03:02:18.215
And you could do something
else, which could mean it

03:02:18.215 --> 03:02:21.140
might pull something from a
cache or make up a response

03:02:21.140 --> 03:02:24.580
and serve it.

03:02:24.580 --> 03:02:25.050
And you're right.

03:02:25.050 --> 03:02:27.920
The native apps, they serve
something from the cache

03:02:27.920 --> 03:02:30.930
straight away and then go
and look for an update.

03:02:30.930 --> 03:02:32.340
And that's the model that
we're promoting.

03:02:32.340 --> 03:02:34.600
I've been banging on
about progressive

03:02:34.600 --> 03:02:37.442
enhancement for a while.

03:02:37.442 --> 03:02:39.430
But this is a next
step of that.

03:02:39.430 --> 03:02:42.290
We're going to treat the network
as an enhancement that

03:02:42.290 --> 03:02:44.420
might not be present.

03:02:44.420 --> 03:02:46.890
So yeah, that's what you'd do,
have a native app model, serve

03:02:46.890 --> 03:02:51.600
stuff that's there, and then
make an extra request for

03:02:51.600 --> 03:02:52.730
updated data.

03:02:52.730 --> 03:02:55.560
And let that fail silently, and
that will be your offline

03:02:55.560 --> 03:02:57.714
experience.

03:02:57.714 --> 03:03:02.694
PETER LUBBERS: OK, we've got a
question right over there.

03:03:02.694 --> 03:03:04.188
AUDIENCE: I'm a little new.

03:03:04.188 --> 03:03:10.164
So not that I didn't love the
analogy with the pirates, but

03:03:10.164 --> 03:03:12.156
can you do a brief
summary and--

03:03:12.156 --> 03:03:14.148
[LAUGHTER]

03:03:14.148 --> 03:03:15.144
[APPLAUSE]

03:03:15.144 --> 03:03:16.638
JAKE ARCHIBALD: Excellent,
sir.

03:03:16.638 --> 03:03:21.640
AUDIENCE: Well, we could the
garbage collection and--

03:03:21.640 --> 03:03:22.880
COLT MCANLIS: Gaarrr-bage
collection.

03:03:22.880 --> 03:03:25.855
[LAUGHTER]

03:03:25.855 --> 03:03:26.830
COLT MCANLIS: Yeah,
absolutely.

03:03:26.830 --> 03:03:28.390
So it all comes down to this.

03:03:28.390 --> 03:03:32.880
Is that garbage collection
events only kick off when

03:03:32.880 --> 03:03:35.905
there's unreferenced objects
sitting around

03:03:35.905 --> 03:03:36.960
in your memory heap.

03:03:36.960 --> 03:03:39.380
So you allocate an object, you
de-reference it, and it's

03:03:39.380 --> 03:03:40.450
sitting around.

03:03:40.450 --> 03:03:42.470
This is going to happen
over time.

03:03:42.470 --> 03:03:44.190
You're just going to continue
to do this.

03:03:44.190 --> 03:03:46.690
At some time, you won't
be able to control it.

03:03:46.690 --> 03:03:47.930
It'll happen randomly.

03:03:47.930 --> 03:03:50.670
The garbage collector will
decide it's time to take 10

03:03:50.670 --> 03:03:52.500
milliseconds of your frame.

03:03:52.500 --> 03:03:53.040
It'll stop.

03:03:53.040 --> 03:03:53.760
I'll do some work.

03:03:53.760 --> 03:03:55.170
It'll clear out your
unreferenced objects.

03:03:55.170 --> 03:03:56.930
And then, it will give
control back to you.

03:03:56.930 --> 03:03:58.690
This will eat your frame rate.

03:03:58.690 --> 03:04:00.430
Now, it won't eat the
frame rate equally

03:04:00.430 --> 03:04:01.290
across every apps.

03:04:01.290 --> 03:04:04.160
I think what we were trying to
say earlier was tools not

03:04:04.160 --> 03:04:05.580
rules, right?

03:04:05.580 --> 03:04:08.290
Which means take everything we
say up here with a grain of

03:04:08.290 --> 03:04:10.220
salt against whatever
you're profiling.

03:04:10.220 --> 03:04:14.220
So the whole point of my talk
was don't let your objects

03:04:14.220 --> 03:04:17.370
die, and it'll keep your GC from
actually running, which

03:04:17.370 --> 03:04:19.465
means you actually have to
manage the memory yourself.

03:04:19.465 --> 03:04:22.010
This is something I've been
harping on JavaScript

03:04:22.010 --> 03:04:25.660
developers for almost a year now
is, quit being JavaScript

03:04:25.660 --> 03:04:26.450
developers.

03:04:26.450 --> 03:04:30.800
Start looking back towards the
trends you see in C and C++,

03:04:30.800 --> 03:04:34.170
because those patterns of
writing code actually result

03:04:34.170 --> 03:04:36.920
in very, very fast JavaScript
execution.

03:04:36.920 --> 03:04:40.141
So sorry for everyone in here
who doesn't agree with that.

03:04:40.141 --> 03:04:41.123
[LAUGHTER]

03:04:41.123 --> 03:04:44.560
PAUL LEWIS: You've got
the microphone now.

03:04:44.560 --> 03:04:48.488
AUDIENCE: OK, so we have a lot
of really good profiling tools

03:04:48.488 --> 03:04:51.434
in a desktop environment--

03:04:51.434 --> 03:04:53.398
PANEL: Oh, yeah, he's going
to ask about mobile.

03:04:53.398 --> 03:04:55.853
AUDIENCE: --if we're profiling
in a mobile environment,

03:04:55.853 --> 03:04:57.817
that's real, not emulated.

03:05:00.763 --> 03:05:03.800
PAUL IRISH: Yeah, so everything
that we showed

03:05:03.800 --> 03:05:10.190
today in the Chrome Developer
Tools works against Chrome and

03:05:10.190 --> 03:05:12.950
Android, all of it.

03:05:12.950 --> 03:05:13.886
COLT MCANLIS: Give us
a round of applause.

03:05:13.886 --> 03:05:14.354
PAUL LEWIS: Yay!

03:05:14.354 --> 03:05:17.570
[APPLAUSE]

03:05:17.570 --> 03:05:21.430
PAUL IRISH: So the memory
management stuff, I didn't

03:05:21.430 --> 03:05:24.300
show the frame rate meter.

03:05:24.300 --> 03:05:26.960
But actually the frame rate
meter also shows you your

03:05:26.960 --> 03:05:30.540
available GPU memory and how
much is currently being

03:05:30.540 --> 03:05:33.260
consumed, which gets really
interesting when you are

03:05:33.260 --> 03:05:35.670
scrolling images into view and
out of view, and images are

03:05:35.670 --> 03:05:39.110
being decoded into
memory and not.

03:05:39.110 --> 03:05:43.070
And so, Chrome in Android
has extremely

03:05:43.070 --> 03:05:45.990
extensive developer tools.

03:05:45.990 --> 03:05:47.590
Firefox does as well.

03:05:47.590 --> 03:05:49.780
And mobile Safari does
now as well.

03:05:49.780 --> 03:05:52.850
So really the only browser
that does not have good

03:05:52.850 --> 03:05:57.450
tooling is the legacy Android
browser in the web view.

03:06:00.220 --> 03:06:03.730
But as far as dealing with that,
your options are that

03:06:03.730 --> 03:06:06.230
you have [? Winery. ?]

03:06:06.230 --> 03:06:09.180
And you don't have a lot of
the performance tooling.

03:06:09.180 --> 03:06:14.070
But pretty much you can
extrapolate the performance of

03:06:14.070 --> 03:06:17.500
Android browser based on the
performance tools that you use

03:06:17.500 --> 03:06:18.770
inside Chrome.

03:06:18.770 --> 03:06:21.700
So debugging Chrome in Android,
all the improvements

03:06:21.700 --> 03:06:25.270
that you make will have huge
impacts in Android browser.

03:06:25.270 --> 03:06:28.480
PAUL LEWIS: One thing that I
think it does touch on is you

03:06:28.480 --> 03:06:29.910
still need the device.

03:06:29.910 --> 03:06:33.700
And this remains a challenge
that you can't emulate the GPU

03:06:33.700 --> 03:06:36.110
of a mobile device from
a desktop device.

03:06:36.110 --> 03:06:37.120
It's just not the same thing.

03:06:37.120 --> 03:06:37.950
It's not got the same driver.

03:06:37.950 --> 03:06:39.430
It's just not the same thing.

03:06:39.430 --> 03:06:42.710
That remains a challenge.

03:06:42.710 --> 03:06:44.650
I don't think there's a good
answer yet other than have the

03:06:44.650 --> 03:06:47.700
device that you're trying to
ship for on your desk tested

03:06:47.700 --> 03:06:50.050
against that profile in that.

03:06:50.050 --> 03:06:52.470
You may have a lot of
devices ultimately.

03:06:52.470 --> 03:06:54.320
But there isn't a shortcut
to that process.

03:06:54.320 --> 03:06:58.450
I mean, you can get really far
just using Chrome DevTools

03:06:58.450 --> 03:07:01.600
against a decent Nexus
device, for example.

03:07:01.600 --> 03:07:02.300
You can do that.

03:07:02.300 --> 03:07:03.060
And you can get pretty far.

03:07:03.060 --> 03:07:05.100
And you can extrapolate,
as Paul said.

03:07:05.100 --> 03:07:09.520
But you might need to just
get specific devices.

03:07:09.520 --> 03:07:10.540
COLT MCANLIS: It is worth
pointing out there's a

03:07:10.540 --> 03:07:13.390
fantastic blog post out there
that shows with the Nexus 10

03:07:13.390 --> 03:07:16.150
device you can actually emulate
different frequencies

03:07:16.150 --> 03:07:17.120
and patterns.

03:07:17.120 --> 03:07:19.360
And you're actually able to
emulate a whole swath of

03:07:19.360 --> 03:07:22.560
different performance profiles
with a single item, including

03:07:22.560 --> 03:07:23.660
different resolutions
and whatnot.

03:07:23.660 --> 03:07:26.280
So find that post on G+.

03:07:26.280 --> 03:07:28.670
PAUL LEWIS: I'm just going to
throw in that I have seen bugs

03:07:28.670 --> 03:07:32.850
very specifically on certain
handsets for the GPU that

03:07:32.850 --> 03:07:35.590
didn't manifest themselves on
anything other than very

03:07:35.590 --> 03:07:36.680
specific hardware.

03:07:36.680 --> 03:07:39.300
So sometimes you're just going
to have to buy it.

03:07:39.300 --> 03:07:40.850
JAKE ARCHIBALD: I haven't said
anything for this question.

03:07:40.850 --> 03:07:42.360
And I'm feeling left out.

03:07:42.360 --> 03:07:42.950
[LAUGHTER]

03:07:42.950 --> 03:07:43.760
JAKE ARCHIBALD: So--

03:07:43.760 --> 03:07:44.592
COLT MCANLIS: Give it back!

03:07:44.592 --> 03:07:45.496
[LAUGHTER]

03:07:45.496 --> 03:07:47.304
PETER LUBBERS: We've got our
next question, right here.

03:07:47.304 --> 03:07:50.660
AUDIENCE: Yeah, so thanks for
some great performance tips.

03:07:50.660 --> 03:07:52.210
I think this goes
for Paul Lewis.

03:07:52.210 --> 03:07:56.161
I think you showed some examples
of that I, as a

03:07:56.161 --> 03:07:58.280
developer, as a front-end guy, I
need to combine an animation

03:07:58.280 --> 03:08:01.703
frame, and a scroll handler,
and an [? event ?] handler.

03:08:01.703 --> 03:08:04.070
And I need to combine
some positions.

03:08:04.070 --> 03:08:05.070
I need to remove some class.

03:08:05.070 --> 03:08:08.296
If I'm scrolling into a group
performance, I think that's a

03:08:08.296 --> 03:08:12.136
lot of complexity to add on
each individual front-end

03:08:12.136 --> 03:08:14.255
developer in this room,
that I need to figure

03:08:14.255 --> 03:08:14.970
out, OK, I'm scrolling.

03:08:14.970 --> 03:08:17.386
So I should probably remove
a class so I don't have

03:08:17.386 --> 03:08:17.832
concessions.

03:08:17.832 --> 03:08:18.278
And--

03:08:18.278 --> 03:08:18.724
PAUL LEWIS: Right.

03:08:18.724 --> 03:08:20.451
AUDIENCE: --do you think
that's a problem?

03:08:20.451 --> 03:08:23.277
Or we you looking into some
ways that we can annotate

03:08:23.277 --> 03:08:25.161
these things, including
the different ways?

03:08:25.161 --> 03:08:25.640
PAUL IRISH: That's
a good question.

03:08:25.640 --> 03:08:27.380
PAUL LEWIS: Yeah, the tools
should tell you, I think.

03:08:27.380 --> 03:08:32.480
The question is, OK, dealing
with this performance of

03:08:32.480 --> 03:08:35.650
scrolling, getting fast
scrolling adds a lot of

03:08:35.650 --> 03:08:37.710
complexity for developers.

03:08:37.710 --> 03:08:38.330
Is that a good thing?

03:08:38.330 --> 03:08:38.900
A bad thing?

03:08:38.900 --> 03:08:39.430
Evil?

03:08:39.430 --> 03:08:39.980
Happy?

03:08:39.980 --> 03:08:41.770
Smile, smile--

03:08:41.770 --> 03:08:46.130
no, as I said, first of all,
again, it's a tools thing.

03:08:46.130 --> 03:08:48.840
If you don't have this problem,
don't worry about it.

03:08:48.840 --> 03:08:50.910
If you do have a bottleneck,
you want to solve it.

03:08:57.420 --> 03:09:00.720
If you play the cards right, you
should expect the browser

03:09:00.720 --> 03:09:01.530
to do the right thing.

03:09:01.530 --> 03:09:03.560
You shouldn't expect
fast performance.

03:09:03.560 --> 03:09:06.110
You have to understand the
implementation today.

03:09:06.110 --> 03:09:10.230
That gap will close
over time as the

03:09:10.230 --> 03:09:11.090
implementation gets better.

03:09:11.090 --> 03:09:14.260
But it doesn't remove a
developer's responsibility to

03:09:14.260 --> 03:09:17.470
understand the system they're
programming for.

03:09:17.470 --> 03:09:18.410
COLT MCANLIS: [CLAPPING].

03:09:18.410 --> 03:09:19.874
PAUL LEWIS: [LAUGHS].

03:09:19.874 --> 03:09:20.362
[LAUGHTER]

03:09:20.362 --> 03:09:21.340
COLT MCANLIS: Thank you.

03:09:21.340 --> 03:09:22.870
Well said.

03:09:22.870 --> 03:09:25.110
PAUL LEWIS: I try.

03:09:25.110 --> 03:09:26.120
Where that line is--

03:09:26.120 --> 03:09:28.570
I think the thing that
personally frustrates me is

03:09:28.570 --> 03:09:30.090
how easy it is for you to shoot

03:09:30.090 --> 03:09:31.740
yourself in the foot today.

03:09:31.740 --> 03:09:34.370
I would love for it to be
impossible for you to shoot

03:09:34.370 --> 03:09:35.380
yourself in the foot.

03:09:35.380 --> 03:09:36.270
I would.

03:09:36.270 --> 03:09:38.370
But I don't think that's going
to happen anytime soon.

03:09:38.370 --> 03:09:40.710
We're doing everything we
can to make sure that

03:09:40.710 --> 03:09:42.730
your code runs well.

03:09:42.730 --> 03:09:44.470
And you can imagine--

03:09:44.470 --> 03:09:48.000
the web is the most general
computing case that you can

03:09:48.000 --> 03:09:49.210
probably think of.

03:09:49.210 --> 03:09:51.770
Every developer writes code
differently, that has

03:09:51.770 --> 03:09:54.130
different problems in different
places, because you

03:09:54.130 --> 03:09:56.200
can do pretty much whatever
you feel like doing.

03:09:56.200 --> 03:09:56.840
This is great.

03:09:56.840 --> 03:09:58.550
This is the brilliance
of the web.

03:09:58.550 --> 03:09:59.760
It's unbounded.

03:09:59.760 --> 03:10:03.550
But writing something that can
interpret unbounded and do it

03:10:03.550 --> 03:10:05.670
well without you having to
step in and go, actually,

03:10:05.670 --> 03:10:07.728
here's what I meant,
Mr. Browser.

03:10:07.728 --> 03:10:09.969
AUDIENCE: That's why my second
part of the question was, are

03:10:09.969 --> 03:10:13.206
we looking into other ways we
can annotate this so, hey, my

03:10:13.206 --> 03:10:14.949
elements I've got animation
from the

03:10:14.949 --> 03:10:15.700
scrolling key card has--

03:10:15.700 --> 03:10:16.120
PAUL LEWIS: Yes.

03:10:16.120 --> 03:10:17.480
AUDIENCE: --rendering
some little--

03:10:17.480 --> 03:10:20.450
PAUL LEWIS: Right, so we've
just recently added a Show

03:10:20.450 --> 03:10:23.230
Potential Scroll Bottlenecks
checkbox inside DevTools,

03:10:23.230 --> 03:10:25.145
which is like it's going to put
a box around it and go,

03:10:25.145 --> 03:10:28.080
hey, you have a touch handler
here, which, for various

03:10:28.080 --> 03:10:29.340
reasons, will get in the way.

03:10:29.340 --> 03:10:31.530
A mouse wheel handler
is very similar.

03:10:31.530 --> 03:10:34.190
So we're looking at ways, where
we see these things crop

03:10:34.190 --> 03:10:37.600
up, that we flag them to you,
give you the kind of alert

03:10:37.600 --> 03:10:39.410
that this might be a thing.

03:10:39.410 --> 03:10:41.900
And it's kind of a hand-in-hand
thing.

03:10:41.900 --> 03:10:43.400
Hopefully, you'll then
go, huh, I maybe

03:10:43.400 --> 03:10:44.210
don't need that there.

03:10:44.210 --> 03:10:44.822
I'll remove it.

03:10:44.822 --> 03:10:45.470
COLT MCANLIS: Can
I say something

03:10:45.470 --> 03:10:46.118
angsty, really quick.

03:10:46.118 --> 03:10:46.550
PAUL LEWIS: Yeah.

03:10:46.550 --> 03:10:47.280
COLT MCANLIS: I want
to make sure we get

03:10:47.280 --> 03:10:47.920
through all the questions.

03:10:47.920 --> 03:10:49.230
But I want to say something
super angsty.

03:10:49.230 --> 03:10:50.610
Because I'm the angry
bald one.

03:10:50.610 --> 03:10:52.640
He's the happy bald one.

03:10:52.640 --> 03:10:53.670
Let's be very clear.

03:10:53.670 --> 03:10:56.310
This is a perfmatters meet-up.

03:10:56.310 --> 03:10:59.860
This is a perfmatters talk.

03:10:59.860 --> 03:11:02.750
You're here because you care
about performance.

03:11:02.750 --> 03:11:05.500
You're here because you should
own performance, right?

03:11:05.500 --> 03:11:07.820
The browser will do what the
browser's going to do.

03:11:07.820 --> 03:11:10.370
The spec is going to do what
the spec is going to do.

03:11:10.370 --> 03:11:12.715
You are in charge of
your performance.

03:11:12.715 --> 03:11:15.780
Ye be the master of
ye ship, right?

03:11:15.780 --> 03:11:16.220
AUDIENCE: Aarrr!

03:11:16.220 --> 03:11:19.960
COLT MCANLIS: And the browsers
are going to optimize

03:11:19.960 --> 03:11:20.390
differently.

03:11:20.390 --> 03:11:24.510
But, dear god, if anyone in
this perfmatters meet-up

03:11:24.510 --> 03:11:28.470
thinks that any other view
besides you are responsible

03:11:28.470 --> 03:11:31.760
for your performance is the
right one, I'm sorry, but

03:11:31.760 --> 03:11:35.290
you're missing the boat here,
literally, right?

03:11:35.290 --> 03:11:36.680
Own your performance.

03:11:36.680 --> 03:11:38.180
Take pride in it.

03:11:38.180 --> 03:11:39.090
Perf matters.

03:11:39.090 --> 03:11:40.550
Wear it like a badge.

03:11:40.550 --> 03:11:43.710
Show it to your boss, your wife,
your ex-girlfriend who

03:11:43.710 --> 03:11:46.390
thinks you're not worth
anything anymore.

03:11:46.390 --> 03:11:47.700
Wear the badge.

03:11:47.700 --> 03:11:48.920
Make it your credence.

03:11:48.920 --> 03:11:50.900
And you will ship
better products.

03:11:50.900 --> 03:11:52.450
Don't wait for the platform.

03:11:52.450 --> 03:11:54.030
Don't wait for the browser.

03:11:54.030 --> 03:11:55.540
Don't wait for the guy
sitting next to you.

03:11:55.540 --> 03:11:57.180
Be the captain of
your damn ship.

03:11:57.180 --> 03:11:58.092
Thank you.

03:11:58.092 --> 03:12:02.252
[CHEERS AND APPLAUSE]

03:12:02.252 --> 03:12:04.170
JAKE ARCHIBALD: I'm going to add
something boring to that,

03:12:04.170 --> 03:12:07.450
in that part of the standards
process is we--

03:12:07.450 --> 03:12:09.650
because if you're finding that
you're doing these tricks with

03:12:09.650 --> 03:12:12.980
JavaScript to enhance
performance, like adding an

03:12:12.980 --> 03:12:16.610
element over the top to catch
hover events so you see

03:12:16.610 --> 03:12:19.280
they're not going down to the
CSS, make noises about that on

03:12:19.280 --> 03:12:20.460
the standards groups as well.

03:12:20.460 --> 03:12:23.615
Because when we see this common
pattern happening loads

03:12:23.615 --> 03:12:26.430
of times, we can put that
directly in CSS, and it will

03:12:26.430 --> 03:12:27.860
be faster still.

03:12:27.860 --> 03:12:30.170
We saw this with things like
query selector role, CSS

03:12:30.170 --> 03:12:32.630
animations, that
kind of thing.

03:12:32.630 --> 03:12:34.020
PAUL LEWIS: Actually, generally,
just let us know if

03:12:34.020 --> 03:12:36.790
you find something that
really sucks from a

03:12:36.790 --> 03:12:37.870
performance point of view.

03:12:37.870 --> 03:12:40.560
We love those because we put
those in front of engineers.

03:12:40.560 --> 03:12:42.050
We talk it through with them.

03:12:42.050 --> 03:12:43.370
We either would say, oh, yeah.

03:12:43.370 --> 03:12:44.190
You could change a code.

03:12:44.190 --> 03:12:45.500
And that would fix
this problem.

03:12:45.500 --> 03:12:47.980
Or it's just something that's
like a platform thing that

03:12:47.980 --> 03:12:49.720
we're trying to fix
and fix quickly.

03:12:49.720 --> 03:12:52.630
So if you find anything that's
just pathologically bad, then

03:12:52.630 --> 03:12:53.460
just let us know.

03:12:53.460 --> 03:12:55.940
We'd love to see a bug
filed against it.

03:12:55.940 --> 03:12:57.571
And then we've got something
to rally around.

03:12:57.571 --> 03:13:00.026
OK, all right.

03:13:00.026 --> 03:13:03.463
AUDIENCE: --That kind of sums up
what you just talked about.

03:13:03.463 --> 03:13:08.373
The HTML5 Dev Conference
introduces things like, hey,

03:13:08.373 --> 03:13:11.319
spice up your pages with
CSS animations.

03:13:11.319 --> 03:13:14.510
So I actually had a situation
where I wanted one button to

03:13:14.510 --> 03:13:16.720
stand out as a command people
should be noticing.

03:13:16.720 --> 03:13:17.702
And I put it in.

03:13:17.702 --> 03:13:20.893
And all of a sudden, a couple
weeks later, I realize that my

03:13:20.893 --> 03:13:22.660
CPU's getting eaten up.

03:13:22.660 --> 03:13:27.137
And so, I think, to put it in
Colt's terms, we've been given

03:13:27.137 --> 03:13:31.516
a plank, and we can walk
off it, if we wish, OK?

03:13:31.516 --> 03:13:33.090
And so, I totally agree.

03:13:33.090 --> 03:13:34.110
This was very enlightening
today.

03:13:34.110 --> 03:13:35.870
And so, I had an offline
discussion

03:13:35.870 --> 03:13:37.352
with a couple of you.

03:13:37.352 --> 03:13:39.328
And I'm very impressed
with the tools.

03:13:39.328 --> 03:13:41.798
And I think one of the next
steps potentially to take--

03:13:41.798 --> 03:13:44.810
and I'd like your commentary on
it-- is a little bit of AI

03:13:44.810 --> 03:13:47.520
to say, hey, how are you
shooting yourself in the foot?

03:13:47.520 --> 03:13:48.730
How are you killing yourself?

03:13:48.730 --> 03:13:52.700
Because a lot of people are very
functionally oriented and

03:13:52.700 --> 03:13:55.648
aren't really proactively
looking at the tools.

03:13:55.648 --> 03:13:58.990
So I'd just like your
comments on that.

03:13:58.990 --> 03:14:01.840
PAUL IRISH: One of the things
that we want to do inside the

03:14:01.840 --> 03:14:05.090
Chrome DevTools is--

03:14:05.090 --> 03:14:07.580
right now, the situation is
that if your interested in

03:14:07.580 --> 03:14:09.190
performance, you profile.

03:14:09.190 --> 03:14:10.270
You look at the results.

03:14:10.270 --> 03:14:12.790
You interpret them, and
you make changes.

03:14:12.790 --> 03:14:14.700
And that works extremely well.

03:14:14.700 --> 03:14:16.190
But it doesn't reach everyone.

03:14:16.190 --> 03:14:18.930
Because not everyone asks the
question, why am I slow?

03:14:18.930 --> 03:14:20.780
Why is this not great?

03:14:20.780 --> 03:14:23.460
So one of the things that we
want to explore is being a bit

03:14:23.460 --> 03:14:25.380
more proactive in our
recommendations.

03:14:25.380 --> 03:14:30.110
So oh, I noticed that you're
not concatenating your

03:14:30.110 --> 03:14:31.180
JavaScript and production.

03:14:31.180 --> 03:14:33.540
And I noticed that you
have paint storms.

03:14:33.540 --> 03:14:36.120
I noticed that you're layout
thrashing for three seconds as

03:14:36.120 --> 03:14:38.090
you're loading the page.

03:14:38.090 --> 03:14:41.650
And we have abilities to
determine this and show that

03:14:41.650 --> 03:14:42.610
to the user.

03:14:42.610 --> 03:14:43.650
We're not there yet.

03:14:43.650 --> 03:14:46.745
But it's something that we
definitely want to do.

03:14:46.745 --> 03:14:48.685
PETER LUBBERS: We got
two more questions.

03:14:48.685 --> 03:14:52.080
And if we could keep
them pretty short.

03:14:52.080 --> 03:14:53.540
AUDIENCE: Sure, really
quickly.

03:14:53.540 --> 03:14:57.356
Using the WebPageTest
thing, I think it's

03:14:57.356 --> 03:14:58.093
a performance thing.

03:14:58.093 --> 03:15:01.039
Stuff that happens after
the [INAUDIBLE]

03:15:01.039 --> 03:15:02.021
captures stuff up till there.

03:15:02.021 --> 03:15:06.685
Does that matter in terms of
loading more network access

03:15:06.685 --> 03:15:08.895
and stuff, after that event?

03:15:08.895 --> 03:15:10.870
Do you think that matters to--

03:15:10.870 --> 03:15:12.870
PAUL LEWIS: I think we've all
got an opinion on this one,

03:15:12.870 --> 03:15:13.356
apart from Colt.

03:15:13.356 --> 03:15:18.702
AUDIENCE: --mostly to things
like search engines and such.

03:15:18.702 --> 03:15:21.618
I guess it could also
be used as--

03:15:21.618 --> 03:15:22.590
PAUL IRISH: I don't think
I understand it.

03:15:22.590 --> 03:15:23.886
PAUL LEWIS: No, I don't think
I-- now, you've added the

03:15:23.886 --> 03:15:25.853
search engine thing.

03:15:25.853 --> 03:15:27.360
PAUL IRISH: Could you repeat?

03:15:27.360 --> 03:15:29.070
Because we're not
exactly sure.

03:15:29.070 --> 03:15:30.870
JAKE ARCHIBALD: Do you mean our
search engine's going to

03:15:30.870 --> 03:15:33.340
penalize you for extraloading
after onload?

03:15:33.340 --> 03:15:33.870
AUDIENCE: Yeah, exactly.

03:15:33.870 --> 03:15:37.104
Because WebPageTest mostly
does until that point.

03:15:37.104 --> 03:15:38.250
PAUL IRISH: Ah, OK.

03:15:38.250 --> 03:15:43.190
So on WebPageTest, the
definition of fully rendered

03:15:43.190 --> 03:15:49.190
for WebPageTest is 2 seconds of
idle network activity after

03:15:49.190 --> 03:15:50.120
window onload.

03:15:50.120 --> 03:15:53.570
So it basically looks at the
network waterfall, makes sure

03:15:53.570 --> 03:15:57.035
that the network activity
is still and

03:15:57.035 --> 03:15:59.030
that the page is done.

03:15:59.030 --> 03:16:03.960
And that is how they determine
doneness, which seems like a

03:16:03.960 --> 03:16:05.070
reasonable thing.

03:16:05.070 --> 03:16:07.750
Search engines are pretty
OK with that, too.

03:16:07.750 --> 03:16:10.560
JAKE ARCHIBALD: Yeah, if it's
a great user experience for

03:16:10.560 --> 03:16:14.270
you to get to first render
really quickly, but then use

03:16:14.270 --> 03:16:16.720
the network to cache stuff for
the next page or start loading

03:16:16.720 --> 03:16:18.900
something further down
the page, do that.

03:16:18.900 --> 03:16:21.390
Don't do something else because
you think it's going

03:16:21.390 --> 03:16:23.050
to get you a better
rank on Google.

03:16:23.050 --> 03:16:26.400
Because ultimately, Google is
going to change how it works,

03:16:26.400 --> 03:16:29.160
how it search indexes based on
what gives the best user

03:16:29.160 --> 03:16:29.950
experience.

03:16:29.950 --> 03:16:32.930
So never try and game it.

03:16:32.930 --> 03:16:36.350
PAUL LEWIS: Just sort of
related, every time you do the

03:16:36.350 --> 03:16:39.900
progressive enhancement thing,
and you load the page.

03:16:39.900 --> 03:16:42.630
And then you run some JavaScript
that injects

03:16:42.630 --> 03:16:43.530
something else into the page.

03:16:43.530 --> 03:16:46.430
And then you do some Ajax,
and you put something

03:16:46.430 --> 03:16:47.320
else into the page.

03:16:47.320 --> 03:16:50.490
Just out of interest, remember
that you're paying the tax

03:16:50.490 --> 03:16:51.270
every time you do that.

03:16:51.270 --> 03:16:52.690
Because you're going
to have to layout--

03:16:52.690 --> 03:16:54.480
well, recalc style, "layout."
You're actually

03:16:54.480 --> 03:16:56.220
going to parse HTML--

03:16:56.220 --> 03:16:59.310
recalc style, layout, paint,
uncomposite for each one of

03:16:59.310 --> 03:17:03.320
those things just in the
process of loading.

03:17:03.320 --> 03:17:05.970
So there's a real balancing
act here.

03:17:05.970 --> 03:17:07.650
It's not a one-size-fits-all,
right?

03:17:07.650 --> 03:17:09.320
You want to get stuff
on screen quickly.

03:17:09.320 --> 03:17:12.120
But if you keep nudging things
along, you're going to pay

03:17:12.120 --> 03:17:13.620
that tax several times over.

03:17:13.620 --> 03:17:15.990
So just profile it, figure
out what your

03:17:15.990 --> 03:17:17.430
metrics are for winning--

03:17:17.430 --> 03:17:18.260
yay--

03:17:18.260 --> 03:17:20.293
and then go there.

03:17:20.293 --> 03:17:22.301
MALE SPEAKER:Are we
on last question?

03:17:22.301 --> 03:17:23.774
AUDIENCE: Hey, Colt--

03:17:23.774 --> 03:17:25.247
PETER LUBBERS: OK, I
guess we'll have

03:17:25.247 --> 03:17:27.220
two final quick questions.

03:17:27.220 --> 03:17:27.560
COLT MCANLIS: Yes.

03:17:27.560 --> 03:17:28.888
PETER LUBBERS: Quick answers.

03:17:28.888 --> 03:17:29.876
COLT MCANLIS: Sweet.

03:17:29.876 --> 03:17:30.864
I'll answer in 10 words.

03:17:30.864 --> 03:17:33.580
AUDIENCE: So isn't your object
pool going to have to be

03:17:33.580 --> 03:17:35.804
pretty specialized to not
proffer any classes?

03:17:35.804 --> 03:17:40.003
And also isn't GC time
proportional to number of live

03:17:40.003 --> 03:17:42.226
objects, especially
in mark and sweep?

03:17:42.226 --> 03:17:44.696
So will your mark and sweep be
super, super long, if you

03:17:44.696 --> 03:17:47.200
happen to incur one.

03:17:47.200 --> 03:17:49.870
COLT MCANLIS: Yes, you should
have object pools that are

03:17:49.870 --> 03:17:53.650
unique to class-specific data.

03:17:53.650 --> 03:17:57.550
I generally disagree that you
should write JavaScript with

03:17:57.550 --> 03:17:59.660
heterogeneous types in it.

03:17:59.660 --> 03:18:02.450
You should have an object and
duplicates of that that are

03:18:02.450 --> 03:18:04.840
heterogeneous.

03:18:04.840 --> 03:18:06.620
Again, that's my
C++ background.

03:18:06.620 --> 03:18:08.730
And yes, mark and sweep
is fantastic.

03:18:08.730 --> 03:18:11.820
And the iterational garbage
collector in V8 is probably

03:18:11.820 --> 03:18:14.310
one of the most cutting
edge you'll find

03:18:14.310 --> 03:18:15.830
anywhere in the industry.

03:18:15.830 --> 03:18:17.550
However, you still lose time.

03:18:17.550 --> 03:18:19.850
And we can sit here and debate
all day about the

03:18:19.850 --> 03:18:21.460
micro-optimizations.

03:18:21.460 --> 03:18:22.210
Go to the tools.

03:18:22.210 --> 03:18:22.890
Go to the tools.

03:18:22.890 --> 03:18:24.870
Go to the tools.

03:18:24.870 --> 03:18:28.830
PETER LUBBERS: And our final
question of the night.

03:18:28.830 --> 03:18:30.810
AUDIENCE: Right, these questions
are for the angry

03:18:30.810 --> 03:18:33.780
pirate captain.

03:18:33.780 --> 03:18:37.575
So you talk about reallocating
your memory, and that's the

03:18:37.575 --> 03:18:39.060
memory that you can
control, like all

03:18:39.060 --> 03:18:40.215
your JavaScript objects.

03:18:40.215 --> 03:18:42.690
What about the stuff you can't
control, like images floating

03:18:42.690 --> 03:18:44.175
in and out of view?

03:18:44.175 --> 03:18:46.402
I know in something I'm working
on in the moment, I

03:18:46.402 --> 03:18:50.115
have very little JavaScript
getting allocated.

03:18:50.115 --> 03:18:53.580
But it just ramps
up and GC pops.

03:18:53.580 --> 03:18:55.230
And it's because a lot of
images are floating

03:18:55.230 --> 03:18:56.055
in and out of view.

03:18:56.055 --> 03:18:58.282
Can you control the garbage
collection on

03:18:58.282 --> 03:19:00.070
that stuff as well?

03:19:00.070 --> 03:19:01.580
COLT MCANLIS: That's a
fantastic question.

03:19:01.580 --> 03:19:04.280
For people who didn't hear that
on the live stream, can

03:19:04.280 --> 03:19:05.780
you control the garbage
collection of things that

03:19:05.780 --> 03:19:08.370
aren't JavaScript-created
objects, images, DOM, and

03:19:08.370 --> 03:19:09.220
stuff like that?

03:19:09.220 --> 03:19:12.050
So we could sit down and profile
your whole site and

03:19:12.050 --> 03:19:14.690
give you a million different
ways to handle this.

03:19:14.690 --> 03:19:16.900
The short answer is,
yes, if you're

03:19:16.900 --> 03:19:18.370
willing to be super tricky.

03:19:18.370 --> 03:19:21.770
For instance, objects will come
down off the network and

03:19:21.770 --> 03:19:23.510
images will be created.

03:19:23.510 --> 03:19:24.600
You can't fix that.

03:19:24.600 --> 03:19:25.470
That's under the hood.

03:19:25.470 --> 03:19:28.570
But how it's resident in your
memory on the page, for

03:19:28.570 --> 03:19:32.480
example, having a static pool
of 10 canvases, right?

03:19:32.480 --> 03:19:34.930
And then, swapping and managing
in how those canvases

03:19:34.930 --> 03:19:39.300
are filled as sprite sheets and
how the UV coordinates on

03:19:39.300 --> 03:19:42.210
that is handled could definitely
be a potential

03:19:42.210 --> 03:19:44.430
solution for that that would
cut down a lot of your

03:19:44.430 --> 03:19:46.440
texture-memory residency
there.

03:19:46.440 --> 03:19:51.102
So thousands of different
things, depending on all of

03:19:51.102 --> 03:19:51.850
your use cases.

03:19:51.850 --> 03:19:54.435
Again, this comes back to it.

03:19:54.435 --> 03:19:55.830
JAKE ARCHIBALD: You can
talk about that.

03:19:55.830 --> 03:19:57.260
PAUL LEWIS: I think, in general,
something like the

03:19:57.260 --> 03:20:01.685
image one, very specifically,
we're working really hard.

03:20:01.685 --> 03:20:03.910
There are loads of optimizations
we feel that we

03:20:03.910 --> 03:20:07.590
can make in terms of image
decoding and image resizing in

03:20:07.590 --> 03:20:08.720
the pipeline.

03:20:08.720 --> 03:20:10.930
When you see them crop up in
DevTools and you see these

03:20:10.930 --> 03:20:13.820
huge green spikes of paint, and
you see a little arrow.

03:20:13.820 --> 03:20:15.280
And you're like, I know
what's inside this.

03:20:15.280 --> 03:20:17.530
You spin it and it goes,
image decode.

03:20:17.530 --> 03:20:19.240
Image resize!

03:20:19.240 --> 03:20:20.950
And you're like, yeah, I
knew that was coming.

03:20:20.950 --> 03:20:24.580
And we want that to be a
complete nonissue, right?

03:20:24.580 --> 03:20:25.930
We just want it to go away.

03:20:25.930 --> 03:20:27.060
We have ideas.

03:20:27.060 --> 03:20:28.500
The engineers are
looking at it.

03:20:28.500 --> 03:20:29.270
It's a thing.

03:20:29.270 --> 03:20:30.680
So we want it to go away.

03:20:30.680 --> 03:20:33.390
In the short term, it's
about avoiding resize,

03:20:33.390 --> 03:20:34.580
like we said before.

03:20:34.580 --> 03:20:37.250
It's about doing all you
can to mitigate it.

03:20:37.250 --> 03:20:39.930
But it's just one of these
things that is hopefully going

03:20:39.930 --> 03:20:41.300
to get better over time.

03:20:41.300 --> 03:20:41.910
We know it's a thing.

03:20:41.910 --> 03:20:43.030
We want it to be better.

03:20:43.030 --> 03:20:46.020
But can go crazy and do
the canvas thing.

03:20:46.020 --> 03:20:46.775
I did that.

03:20:46.775 --> 03:20:48.322
It's weird.

03:20:48.322 --> 03:20:49.220
COLT MCANLIS: But it works.

03:20:49.220 --> 03:20:50.300
PAUL LEWIS: It works.

03:20:50.300 --> 03:20:54.110
But you just go so
far off road.

03:20:54.110 --> 03:20:55.950
You understand that the
browser does it

03:20:55.950 --> 03:20:59.066
for you for a reason.

03:20:59.066 --> 03:21:00.548
JAKE ARCHIBALD: Can
I say something?

03:21:00.548 --> 03:21:02.200
PAUL LEWIS: No, Peter's
going to take it away.

03:21:02.200 --> 03:21:03.040
JAKE ARCHIBALD: No--

03:21:03.040 --> 03:21:03.793
COLT MCANLIS: Don't
give it to him!

03:21:03.793 --> 03:21:04.480
Don't give it to him!

03:21:04.480 --> 03:21:04.850
JAKE ARCHIBALD: Aaah!

03:21:04.850 --> 03:21:05.695
[LAUGHS]

03:21:05.695 --> 03:21:07.920
The guy who did really well
on the quiz that I

03:21:07.920 --> 03:21:10.110
did, I owe you swag.

03:21:10.110 --> 03:21:11.430
Yeah, come up to the front.

03:21:11.430 --> 03:21:12.550
And you'll get swag.

03:21:12.550 --> 03:21:14.398
Brilliant.

03:21:14.398 --> 03:21:15.784
In a minute.

03:21:15.784 --> 03:21:16.250
COLT MCANLIS: Not now.

03:21:16.250 --> 03:21:17.130
JAKE ARCHIBALD: I'll
stay here.

03:21:17.130 --> 03:21:18.090
COLT MCANLIS: That'd
be super awkward.

03:21:18.090 --> 03:21:18.560
JAKE ARCHIBALD: Yeah.

03:21:18.560 --> 03:21:19.570
COLT MCANLIS: If you just came
up here, and we're like, yay!

03:21:19.570 --> 03:21:21.280
JAKE ARCHIBALD: I'll
present to you.

03:21:21.280 --> 03:21:23.430
PETER LUBBERS: All right,
well, one more time.

03:21:23.430 --> 03:21:25.780
A big round of applause for
these great speakers.

03:21:25.780 --> 03:21:26.690
[APPLAUSE]

03:21:26.690 --> 03:21:27.140
PETER LUBBERS: Thank you.

03:21:27.140 --> 03:21:27.435
Thank you.

03:21:27.435 --> 03:21:28.210
[APPLAUSE]

03:21:28.210 --> 03:21:29.460
PETER LUBBERS: Thank you.

03:21:32.530 --> 03:21:36.090
Everybody on the live stream, we
had over 200 people on the

03:21:36.090 --> 03:21:38.240
live streaming, which
was great.

03:21:38.240 --> 03:21:39.890
Everybody, thanks for joining.

03:21:39.890 --> 03:21:43.120
And that was one of the longest
average view time,

03:21:43.120 --> 03:21:44.570
like 25 minutes per person.

03:21:44.570 --> 03:21:46.000
So that was awesome.

03:21:46.000 --> 03:21:47.340
So thanks for joining us.

03:21:47.340 --> 03:21:50.810
All of these talks
were recorded.

03:21:50.810 --> 03:21:55.360
But they will be posted on our
site shortly on the Google

03:21:55.360 --> 03:21:56.660
Developers Live site as well.

03:21:56.660 --> 03:21:58.170
MALE SPEAKER: Tell
your friends.

03:21:58.170 --> 03:21:58.540
PETER LUBBERS: Yeah.

03:21:58.540 --> 03:22:00.060
And we'd like your feedback.

03:22:00.060 --> 03:22:02.410
So if there is on the
meet-up site--

03:22:02.410 --> 03:22:04.200
when you're done, you're
probably going to get an email

03:22:04.200 --> 03:22:06.150
seeing if you can
give a rating.

03:22:06.150 --> 03:22:07.680
Let us know your feedback.

03:22:07.680 --> 03:22:11.390
We're always open to making
changes for the better.

03:22:11.390 --> 03:22:13.000
So I hope you enjoyed it.

03:22:13.000 --> 03:22:16.710
And we're going to say goodbye
to the live stream and move on

03:22:16.710 --> 03:22:17.840
to the raffle here.

03:22:17.840 --> 03:22:19.090
Thank you.

03:22:22.510 --> 03:25:14.633
[MUSIC PLAYING]

