WEBVTT
Kind: captions
Language: en

00:00:00.240 --> 00:00:03.940
So let's talk about how we determine
what the block offset is and

00:00:03.940 --> 00:00:06.240
what the block number
is given an address.

00:00:06.240 --> 00:00:10.370
Let's say that the processor
produces a 32 bit address,

00:00:10.370 --> 00:00:12.660
with bits numbered from 0 through 31.

00:00:12.660 --> 00:00:15.160
So this is the address of the location

00:00:15.160 --> 00:00:17.570
the processor wants us
to find in the cache.

00:00:17.570 --> 00:00:23.970
The cache can be seen as an array
of lines each block size in size.

00:00:23.970 --> 00:00:28.530
In this example,
let's look at 16 as the block size.

00:00:28.530 --> 00:00:33.470
Some bits of this address tell us
which block are we talking about and

00:00:33.470 --> 00:00:39.600
some bits are telling us where in
the block are we looking for our data?

00:00:39.600 --> 00:00:42.630
With a block size of 16
we need to determine

00:00:42.630 --> 00:00:45.770
how many bits tell us
where in the block we are.

00:00:45.770 --> 00:00:48.510
The block has 16 bytes,
2 to the 4th is 16,

00:00:48.510 --> 00:00:52.740
so we need 4 bits to tell us
where within a block we are.

00:00:52.740 --> 00:00:58.040
That means that bits zero through three,
are going to tell us,

00:00:58.040 --> 00:01:02.240
once we find the block in the cache,
which part of the block to read.

00:01:02.240 --> 00:01:06.370
The remaining bits, bits 4 through 31,

00:01:06.370 --> 00:01:09.580
tell us which block
are we trying to find.

00:01:09.580 --> 00:01:14.480
So these bits that tell us where in
the block are we going to find our data,

00:01:14.480 --> 00:01:16.460
are called the block offset.

00:01:16.460 --> 00:01:20.040
And the bits that tell us which
block are we interested in

00:01:20.040 --> 00:01:21.230
are called the block number.

00:01:22.490 --> 00:01:26.520
So what we do is we access
the cache trying to find the block

00:01:26.520 --> 00:01:28.750
according to the block number.

00:01:28.750 --> 00:01:33.510
If we find the block, we use the block
offset to get the right data

00:01:33.510 --> 00:01:36.480
from the block because there is more
than one location in the block.

