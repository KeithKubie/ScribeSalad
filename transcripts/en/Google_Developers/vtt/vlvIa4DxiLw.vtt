WEBVTT
Kind: captions
Language: en

00:00:00.140 --> 00:00:01.306
WESLEY CHUN: Hey, everybody.

00:00:01.306 --> 00:00:03.540
This is Wesley Chun, an
engineer here at Google.

00:00:03.540 --> 00:00:05.800
Today, I'm going to introduce
you to one of our best

00:00:05.800 --> 00:00:08.280
kept secrets--
Google Apps Script.

00:00:08.280 --> 00:00:09.260
You're kidding, right?

00:00:09.260 --> 00:00:10.910
Another Google secret?

00:00:10.910 --> 00:00:14.540
All right, so it's not our best
kept secret nor is it really

00:00:14.540 --> 00:00:15.432
a secret at all.

00:00:15.432 --> 00:00:16.890
But if you haven't
heard of it yet,

00:00:16.890 --> 00:00:19.820
you'll be wondering why you
haven't by the time we're done.

00:00:19.820 --> 00:00:21.330
So, first things first.

00:00:21.330 --> 00:00:23.110
What is Google Apps Script?

00:00:23.110 --> 00:00:25.130
Well, it's a tool
based on JavaScript,

00:00:25.130 --> 00:00:28.410
but it's a little less like
using APIs and more like using

00:00:28.410 --> 00:00:31.030
services or built-in
access to APIs.

00:00:31.030 --> 00:00:34.590
And finally, there's less OAuth2
authorization code for you

00:00:34.590 --> 00:00:35.439
to write.

00:00:35.439 --> 00:00:37.230
All right, to help with
this understanding,

00:00:37.230 --> 00:00:39.904
let's start with what
Apps Script is not.

00:00:39.904 --> 00:00:42.570
All right, the good news here is
that there's really nothing new

00:00:42.570 --> 00:00:43.140
to learn.

00:00:43.140 --> 00:00:44.610
It's just JavaScript.

00:00:44.610 --> 00:00:47.370
Even a Python guy like
me knows some JavaScript.

00:00:47.370 --> 00:00:49.870
But it's not your
daddy's JavaScript.

00:00:49.870 --> 00:00:51.680
Aside from one
exception which is out

00:00:51.680 --> 00:00:54.080
of the scope of this
episode, Apps Script code

00:00:54.080 --> 00:00:57.220
is not client-side and does
not run in the browser,

00:00:57.220 --> 00:00:59.060
meaning there's no DOM
manipulation like you

00:00:59.060 --> 00:01:00.029
see behind me.

00:01:00.029 --> 00:01:01.570
The other thing you
do in the browser

00:01:01.570 --> 00:01:04.069
is edit your Apps Script code.

00:01:04.069 --> 00:01:05.806
Now, if you're
familiar with Node.js,

00:01:05.806 --> 00:01:08.810
it's like Node being
server-side and all, only you're

00:01:08.810 --> 00:01:11.430
not running asynchronous
event-driven code executing

00:01:11.430 --> 00:01:12.640
on Node servers.

00:01:12.640 --> 00:01:14.760
Instead, your Apps
Script code runs

00:01:14.760 --> 00:01:17.010
on the same servers in
the same data centers that

00:01:17.010 --> 00:01:20.430
run Google services, like
Search, YouTube, and Gmail,

00:01:20.430 --> 00:01:22.840
giving you access
to resources that

00:01:22.840 --> 00:01:24.765
don't come with Node servers.

00:01:24.765 --> 00:01:26.140
All right, based
on its name, you

00:01:26.140 --> 00:01:28.690
can probably guess that Apps
Script will give you access

00:01:28.690 --> 00:01:30.740
to Google Apps
data and services,

00:01:30.740 --> 00:01:32.600
but it doesn't stop there.

00:01:32.600 --> 00:01:34.300
You can access other
Google services

00:01:34.300 --> 00:01:38.390
beyond Apps, such as
Google Maps, YouTube,

00:01:38.390 --> 00:01:43.510
Google Analytics, BigQuery,
and Google Translate.

00:01:43.510 --> 00:01:45.580
Here's a more complete
list, and we're

00:01:45.580 --> 00:01:48.990
continuing to look at what to
add next that benefits users.

00:01:48.990 --> 00:01:51.200
You may be asking what you
can use Apps Script for

00:01:51.200 --> 00:01:53.960
and there are many use cases,
but a good rule of thumb

00:01:53.960 --> 00:01:58.230
is to think a programmatic way
to access data in Google Apps,

00:01:58.230 --> 00:02:00.650
possibly using other
Google services.

00:02:00.650 --> 00:02:02.620
Oh, by the way, if you
look down at the bottom,

00:02:02.620 --> 00:02:04.420
those in the Other
Services section

00:02:04.420 --> 00:02:07.230
allow your app to communicate
with outside world

00:02:07.230 --> 00:02:09.210
to go beyond Google services.

00:02:09.210 --> 00:02:11.050
Here are some
sample applications.

00:02:11.050 --> 00:02:15.020
Apps like teacher tools that use
data in Google Docs and Sheets.

00:02:15.020 --> 00:02:16.810
Mail merge apps are popular too.

00:02:16.810 --> 00:02:18.770
You know, form
letters in Google Docs

00:02:18.770 --> 00:02:20.840
merging with email
addresses in Google Sheets

00:02:20.840 --> 00:02:23.110
and sent by Gmail.

00:02:23.110 --> 00:02:24.690
Now, school districts
and enterprises

00:02:24.690 --> 00:02:26.210
using Google Apps
for their domain

00:02:26.210 --> 00:02:28.780
have many use cases, such
as workflow and resource

00:02:28.780 --> 00:02:32.050
management, such as
this calendaring app.

00:02:32.050 --> 00:02:34.260
Now, there are three
types of Apps Script apps.

00:02:34.260 --> 00:02:37.490
Standalone scripts that run by
themselves, as you can guess,

00:02:37.490 --> 00:02:39.730
add-ons, and document-bound
scripts, which

00:02:39.730 --> 00:02:43.210
are tied to a specific document,
such as Docs or Sheets.

00:02:43.210 --> 00:02:46.300
Finally, Apps Script can do
simple websites as well as

00:02:46.300 --> 00:02:48.260
gadgets bound to Google sites.

00:02:48.260 --> 00:02:50.070
OK, that's enough talk.

00:02:50.070 --> 00:02:51.490
Let's do some coding.

00:02:51.490 --> 00:02:54.140
Your Hello World will
be a Sheets-bound script

00:02:54.140 --> 00:02:57.770
that writes Hello World to the
first cell in a Google Sheet,

00:02:57.770 --> 00:02:58.330
all right?

00:02:58.330 --> 00:03:02.182
Let's follow me to the computer
right now so we can do that.

00:03:02.182 --> 00:03:02.682
All righty.

00:03:02.682 --> 00:03:05.270
You guys all set to do
your first Apps Script App?

00:03:05.270 --> 00:03:06.002
Me too.

00:03:06.002 --> 00:03:07.460
I'm happy to have
you guys join me.

00:03:07.460 --> 00:03:10.190
So why don't you go
to your Google Drive

00:03:10.190 --> 00:03:12.580
and create a brand
new spreadsheet.

00:03:12.580 --> 00:03:15.250
And once you're done,
come join me back here

00:03:15.250 --> 00:03:16.640
and we'll pick up from here.

00:03:19.670 --> 00:03:20.540
All right.

00:03:20.540 --> 00:03:23.360
Let's go and write
some Apps Script code.

00:03:23.360 --> 00:03:27.390
So, the way you do that is you
go to your spreadsheet's Tools

00:03:27.390 --> 00:03:28.880
menu item.

00:03:28.880 --> 00:03:31.476
You scroll down and
select Script Editor.

00:03:31.476 --> 00:03:33.850
And what that will do is it
will bring up a little dialog

00:03:33.850 --> 00:03:35.730
box that has a bunch
of boilerplate code

00:03:35.730 --> 00:03:37.714
already written for you.

00:03:37.714 --> 00:03:39.880
But since we're only going
to do a simple one-liner,

00:03:39.880 --> 00:03:41.830
we're just going to
pick Blank Project.

00:03:41.830 --> 00:03:44.413
If you're going to do something
a little bit more complicated,

00:03:44.413 --> 00:03:47.050
you may consider choosing
one of these other skeleton

00:03:47.050 --> 00:03:50.382
bits of code that have
prebuilt functionality for you.

00:03:50.382 --> 00:03:52.090
But for now, let's
just do Blank Project.

00:03:52.090 --> 00:03:56.260
And what this will do is it will
pop you into the Apps Script

00:03:56.260 --> 00:03:58.920
JavaScript editor that's
in your web browser.

00:03:58.920 --> 00:04:02.060
And it's already started
the first function for you.

00:04:02.060 --> 00:04:05.570
So all we're going to do
is go to our spreadsheet

00:04:05.570 --> 00:04:07.960
and stick Hello
World as a string

00:04:07.960 --> 00:04:11.020
into the first cell in
our spreadsheet, which

00:04:11.020 --> 00:04:12.940
is located at A1.

00:04:12.940 --> 00:04:15.170
So, column A, row number 1.

00:04:15.170 --> 00:04:17.829
So the way you do that is you
connect to the spreadsheet app

00:04:17.829 --> 00:04:19.470
by typing SpreadsheetApp.

00:04:19.470 --> 00:04:21.890
And once you press dot,
you have a selector

00:04:21.890 --> 00:04:24.320
where you can choose
from specific methods

00:04:24.320 --> 00:04:25.340
that you can call.

00:04:25.340 --> 00:04:27.340
So what we're going to
do is we're going to call

00:04:27.340 --> 00:04:30.050
the getActiveSheet() method
to get the current sheet that

00:04:30.050 --> 00:04:30.900
we're on.

00:04:30.900 --> 00:04:34.320
And from here we're going to
get the first cell, or the cell

00:04:34.320 --> 00:04:37.880
in the upper left-hand corner,
and use getRange for that.

00:04:37.880 --> 00:04:40.110
And we're going
to use a1Notation,

00:04:40.110 --> 00:04:41.860
and we're going to
specify the string that

00:04:41.860 --> 00:04:44.530
says we want cell A1.

00:04:44.530 --> 00:04:46.610
And there we go.

00:04:46.610 --> 00:04:48.600
And then once we
have the cell, let's

00:04:48.600 --> 00:04:50.480
write the Hello
World string to it.

00:04:50.480 --> 00:04:53.370
And the method you use
for that is setValue.

00:04:53.370 --> 00:04:55.400
So there we go there.

00:04:55.400 --> 00:05:01.030
And now we can enter Hello
World and Save and Run.

00:05:01.030 --> 00:05:02.220
Here's the Run button here.

00:05:02.220 --> 00:05:03.610
It's a little triangle.

00:05:03.610 --> 00:05:06.874
Once you click it, it asks
you to save it and name it.

00:05:06.874 --> 00:05:07.790
So let's do that here.

00:05:07.790 --> 00:05:09.620
We'll call it Hello World.

00:05:09.620 --> 00:05:13.100
And once it's saved,
we can run it again.

00:05:13.100 --> 00:05:14.890
Now, notice that
none of this code

00:05:14.890 --> 00:05:16.720
had any OAuth in it, right?

00:05:16.720 --> 00:05:19.610
So, one of the advantages you
get from using Apps Script

00:05:19.610 --> 00:05:22.630
is that you don't have to build
all this in yourself like you

00:05:22.630 --> 00:05:25.449
would if you were using a
traditional REST-based API.

00:05:25.449 --> 00:05:26.990
Apps Script handles
all this for you.

00:05:26.990 --> 00:05:30.010
And you can see that here where
it says, hey, you know what?

00:05:30.010 --> 00:05:32.305
This script needs
authorization before it

00:05:32.305 --> 00:05:33.680
can get access to your data.

00:05:33.680 --> 00:05:35.054
So once you click
on this, you'll

00:05:35.054 --> 00:05:37.300
get your very familiar
OAuth2 dialogue

00:05:37.300 --> 00:05:40.830
that basically says you as a
user need to give permission

00:05:40.830 --> 00:05:42.289
to access your Google Sheet.

00:05:42.289 --> 00:05:44.455
See, it says here "View and
Manage Your Spreadsheets

00:05:44.455 --> 00:05:45.232
in Google Drive."

00:05:45.232 --> 00:05:47.190
Obviously, we want that
to happen because we're

00:05:47.190 --> 00:05:49.370
trying to automate
things for ourselves.

00:05:49.370 --> 00:05:51.292
So we click Accept.

00:05:51.292 --> 00:05:52.750
And once that's
done, it's actually

00:05:52.750 --> 00:05:55.250
going to run your script, and
you can see the little dialog

00:05:55.250 --> 00:05:57.400
box up here that
says it's running.

00:05:57.400 --> 00:05:59.081
And once it's done,
it disappears.

00:05:59.081 --> 00:06:00.830
Hopefully, when you
go to your spreadsheet

00:06:00.830 --> 00:06:04.770
you'll see that we have
Hello World in cell A1,

00:06:04.770 --> 00:06:06.710
just as we had planned.

00:06:06.710 --> 00:06:07.670
All right.

00:06:07.670 --> 00:06:12.340
Now, if for some reason your
browser window is not that wide

00:06:12.340 --> 00:06:15.110
or you want to make your
code a little easier to read,

00:06:15.110 --> 00:06:17.110
you can do the
JavaScript shortcut

00:06:17.110 --> 00:06:20.110
way of putting each method
call on a separate line.

00:06:20.110 --> 00:06:21.800
It's perfectly fine.

00:06:21.800 --> 00:06:23.292
I can do that here.

00:06:23.292 --> 00:06:25.000
Let's just change our
script a little bit

00:06:25.000 --> 00:06:28.030
because I want to run it again
to show that it did work.

00:06:28.030 --> 00:06:28.530
All right.

00:06:28.530 --> 00:06:31.100
So let's click on Run again.

00:06:31.100 --> 00:06:33.610
And once that's done, we'll
go back to the spreadsheet

00:06:33.610 --> 00:06:37.160
and see, hey, we've
got Hello World 2.

00:06:37.160 --> 00:06:38.600
So that's it.

00:06:38.600 --> 00:06:40.820
You've just done your
first Hello World program

00:06:40.820 --> 00:06:41.920
using Google Apps Script.

00:06:41.920 --> 00:06:44.100
Congratulations.

00:06:44.100 --> 00:06:44.600
All right.

00:06:44.600 --> 00:06:46.600
Now that you've got Hello
World under your belt,

00:06:46.600 --> 00:06:48.506
I'm sure you're anxious
to script some more.

00:06:48.506 --> 00:06:50.880
Here you'll find a link to
the Apps Script documentation,

00:06:50.880 --> 00:06:53.220
which includes tutorials as
well as Quick Start projects

00:06:53.220 --> 00:06:54.490
to get you going.

00:06:54.490 --> 00:06:57.830
Also, stay tuned for more Apps
Script episodes coming soon.

00:06:57.830 --> 00:06:59.840
If you need help,
go to Stack Overflow

00:06:59.840 --> 00:07:01.990
and search for Google
Apps Script with hyphens

00:07:01.990 --> 00:07:03.430
in between each word.

00:07:03.430 --> 00:07:04.020
All right.

00:07:04.020 --> 00:07:06.520
Now, can you believe you haven't
heard of Google Apps Script

00:07:06.520 --> 00:07:07.250
before?

00:07:07.250 --> 00:07:10.090
Yeah, neither can I, but now the
secret's really out of the bag,

00:07:10.090 --> 00:07:10.900
isn't it?

00:07:10.900 --> 00:07:11.590
All right.

00:07:11.590 --> 00:07:13.715
This is Wesley Chun from
Google, and I look forward

00:07:13.715 --> 00:07:15.930
to seeing some awesome
Apps Scripts from you.

00:07:15.930 --> 00:07:18.300
Thanks for tuning in to this
episode of the Launchpad

00:07:18.300 --> 00:07:19.850
Online.

