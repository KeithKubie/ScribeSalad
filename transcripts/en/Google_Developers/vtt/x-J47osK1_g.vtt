WEBVTT
Kind: captions
Language: en

00:00:00.880 --> 00:00:02.560
ALEXANDER DOROSHKO:
Hi, everyone,

00:00:02.560 --> 00:00:03.910
I'm Alexander Doroshko.

00:00:03.910 --> 00:00:07.090
I work at Jet Brains and
my primary responsibility

00:00:07.090 --> 00:00:09.580
is Dart support
and IntelliJ IDEA,

00:00:09.580 --> 00:00:13.060
WebStorm, and all other
ideas that JetBrains ships.

00:00:13.060 --> 00:00:15.540
I guess some of you know
me as the guy who answers

00:00:15.540 --> 00:00:17.800
in the JetBrains issue tracker.

00:00:17.800 --> 00:00:19.070
Catch me during the break.

00:00:19.070 --> 00:00:20.320
I've got some secrets for you.

00:00:23.474 --> 00:00:24.890
JAIME WREN: My
name is Jaime Wren.

00:00:24.890 --> 00:00:27.770
I work on the Google
side on the Dart Plugin.

00:00:27.770 --> 00:00:30.020
I try to make sure the
Plugin works with other tools

00:00:30.020 --> 00:00:33.350
and things internally
and whatnot.

00:00:33.350 --> 00:00:36.680
Alex is first going to
show some IntelliJ features

00:00:36.680 --> 00:00:39.680
that all developers should
know using IntelliJ.

00:00:39.680 --> 00:00:43.490
And then I'm going to walk
through some Dart and Flutter

00:00:43.490 --> 00:00:46.640
and maybe even Angular specific
things in the Dart Plugin

00:00:46.640 --> 00:00:47.750
that you should know.

00:00:47.750 --> 00:00:50.930
We are super, super lucky to
have Alex here from JetBrains,

00:00:50.930 --> 00:00:53.540
and he has worked on the Dart
Plugin for IntelliJ longer

00:00:53.540 --> 00:00:56.220
than we have here at Google.

00:00:56.220 --> 00:00:59.678
So again for Alex, we're
really lucky to have him.

00:00:59.678 --> 00:01:00.928
ALEXANDER DOROSHKO: Thank you.

00:01:04.870 --> 00:01:08.620
Using shortcuts, using
keyboard, is more

00:01:08.620 --> 00:01:10.610
productive than using mouse.

00:01:10.610 --> 00:01:13.030
You'll see the
shortcuts I use right

00:01:13.030 --> 00:01:15.070
on the screen for all
operating systems,

00:01:15.070 --> 00:01:17.920
thanks to the presentation
assistant plugin.

00:01:17.920 --> 00:01:19.560
And I think the first
shortcut to learn

00:01:19.560 --> 00:01:25.240
is Command-Shift-A, which stands
for the action, Find Action.

00:01:25.240 --> 00:01:26.900
For example, type Dart here.

00:01:26.900 --> 00:01:31.900
You will see not only Dart
related, Dart specific actions

00:01:31.900 --> 00:01:38.920
like sort members in Dart
file, but also all options

00:01:38.920 --> 00:01:41.590
and settings related to
Dart, like show closing

00:01:41.590 --> 00:01:43.960
labels in Dart source code.

00:01:43.960 --> 00:01:47.050
If you find yourself invoking
some action from time

00:01:47.050 --> 00:01:49.870
to time and the action doesn't
have a default shortcut,

00:01:49.870 --> 00:01:52.600
go ahead and assign
a custom shortcut.

00:01:52.600 --> 00:01:56.640
Well, I know we're all too
lazy to open preferences, open

00:01:56.640 --> 00:01:58.640
key mappage, search
for the action,

00:01:58.640 --> 00:02:01.230
and assign a shortcut there.

00:02:01.230 --> 00:02:04.750
I'll show you a faster way.

00:02:04.750 --> 00:02:08.830
Normally we use
Alt-Enter in the editor

00:02:08.830 --> 00:02:12.010
to invoke a quick fix
or intentional action,

00:02:12.010 --> 00:02:15.510
but it does the trick and the
Find Action pop up as well.

00:02:15.510 --> 00:02:17.260
For example, I wanted
to assign a shortcut

00:02:17.260 --> 00:02:19.960
to focus the Dart
analysis tool window.

00:02:24.490 --> 00:02:27.910
So I find it in the Find Action
popup and press Alt-Enter.

00:02:30.917 --> 00:02:31.500
What happened?

00:02:35.510 --> 00:02:37.266
This [INAUDIBLE]
is on this bottom.

00:02:46.892 --> 00:02:47.850
JAIME WREN: One moment.

00:02:47.850 --> 00:02:48.990
This is a live demo.

00:02:48.990 --> 00:02:51.840
The only slide that we
had, you have already seen.

00:03:31.860 --> 00:03:33.110
ALEXANDER DOROSHKO: I'm sorry.

00:03:35.930 --> 00:03:39.110
So I typed Dart analysis
in the Find Action popup

00:03:39.110 --> 00:03:41.900
and pressed Alt-Enter.

00:03:41.900 --> 00:03:44.430
Did you know that feature?

00:03:44.430 --> 00:03:46.870
A bigger challenge is to
find a backhand shortcut.

00:03:46.870 --> 00:03:50.730
Like you'll later see, the
shortcut conflicts right here.

00:03:50.730 --> 00:03:53.810
And once you have
found a shortcut,

00:03:53.810 --> 00:03:57.250
don't try to press
enter or escape.

00:03:57.250 --> 00:04:00.680
Probably this is only dialogue
in IntelliJ IDEA that it cannot

00:04:00.680 --> 00:04:02.570
close using keyboard.

00:04:02.570 --> 00:04:05.390
So I click OK.

00:04:05.390 --> 00:04:08.810
And now I can use a
shortcut to open and close

00:04:08.810 --> 00:04:10.340
the Dart analysis tool window.

00:04:14.830 --> 00:04:17.060
Thank you.

00:04:17.060 --> 00:04:20.070
Know that to be able to assign
a shortcut right from the Find

00:04:20.070 --> 00:04:23.090
Action popup, you need to
have an editable key map.

00:04:23.090 --> 00:04:26.420
So once in your life, you
need to open the key map page

00:04:26.420 --> 00:04:29.360
and create an
editable copy Sorry.

00:04:29.360 --> 00:04:30.560
This is boring.

00:04:30.560 --> 00:04:35.730
I think we need to make this
step not required in future.

00:04:35.730 --> 00:04:39.290
Let me find something else
using the Find Action popup.

00:04:39.290 --> 00:04:43.160
These days, many developers have
very wide and large monitors

00:04:43.160 --> 00:04:47.390
and the default tool window
really doesn't look perfect.

00:04:47.390 --> 00:04:50.350
Side tool windows
are limited in height

00:04:50.350 --> 00:04:52.730
and the one at the
bottom is too wide.

00:04:52.730 --> 00:04:53.240
OK.

00:04:53.240 --> 00:04:56.220
Open Find Action
and type widescreen.

00:04:58.860 --> 00:05:01.260
From here, you may jump
to the corresponding check

00:05:01.260 --> 00:05:05.630
box in preferences or toggle
the option right from here.

00:05:05.630 --> 00:05:06.520
You see.

00:05:06.520 --> 00:05:09.320
This way is better
for wide screens.

00:05:09.320 --> 00:05:12.440
But I personally prefer not
to have two Windows shown

00:05:12.440 --> 00:05:13.500
on the screen at all.

00:05:13.500 --> 00:05:18.200
So one of my favorites
shortcuts is Command-Shift-F12.

00:05:18.200 --> 00:05:20.450
It hides all tool
windows and leaves

00:05:20.450 --> 00:05:22.550
you one on one with the editor.

00:05:22.550 --> 00:05:24.800
Well, if I need them
back, I press it again.

00:05:24.800 --> 00:05:29.010
But I rarely use two windows
for navigation purposes.

00:05:29.010 --> 00:05:31.490
To browse through the
project structure,

00:05:31.490 --> 00:05:33.890
I prefer using the
navigation bar.

00:05:33.890 --> 00:05:37.310
The shortcut is Command-Up.

00:05:37.310 --> 00:05:40.220
If the navigation bar is
visible on the screen,

00:05:40.220 --> 00:05:42.200
it gets the focus.

00:05:42.200 --> 00:05:45.540
If it's not, you get a
lightweight navigation bar

00:05:45.540 --> 00:05:46.040
popup.

00:05:46.040 --> 00:05:49.110
Here you might browse through
the project structure,

00:05:49.110 --> 00:05:51.610
create new folders and
files with commands,

00:05:51.610 --> 00:05:56.540
and do whatever you may
need in a project here.

00:05:56.540 --> 00:06:01.580
To jump to a different
file, I use Command-Shift-O.

00:06:01.580 --> 00:06:05.930
Here you [INAUDIBLE] only for
files, but also for folders.

00:06:05.930 --> 00:06:09.830
Or for files located
in a specific folder,

00:06:09.830 --> 00:06:12.440
just type any part
of any folder name

00:06:12.440 --> 00:06:16.850
and any part of a file name.

00:06:16.850 --> 00:06:21.470
To jump to a different
class, I use Command-O. Here,

00:06:21.470 --> 00:06:24.320
as well as in all other
places, the search box

00:06:24.320 --> 00:06:29.240
understands camel case, snake
case, [INAUDIBLE] matching.

00:06:29.240 --> 00:06:32.720
If you remember a
method or a field name,

00:06:32.720 --> 00:06:36.440
but not sure where it is
located, use go to symbol,

00:06:36.440 --> 00:06:41.560
Command-Alt-O. For
example, if I type main,

00:06:41.560 --> 00:06:45.170
I will see all the entry
points in my project,

00:06:45.170 --> 00:06:47.510
and as everywhere
else, I don't have

00:06:47.510 --> 00:06:52.160
to jump to the source, jump
to the file to see its source.

00:06:52.160 --> 00:06:58.055
I can use the action
quick review, Alt-Space.

00:07:01.425 --> 00:07:05.200
And see the source right here.

00:07:05.200 --> 00:07:08.760
Some people find the search
everywhere action handy,

00:07:08.760 --> 00:07:10.300
double shift.

00:07:10.300 --> 00:07:15.450
It searches for files, classes,
and symbols, and more in one

00:07:15.450 --> 00:07:17.300
shot.

00:07:17.300 --> 00:07:20.220
A navigation action
that I heavily used

00:07:20.220 --> 00:07:24.760
is Command-Shift-Backspace.

00:07:24.760 --> 00:07:27.920
It jumps to the
last edit locations.

00:07:27.920 --> 00:07:32.030
We have restarted the ID and
we don't have edit locations.

00:07:32.030 --> 00:07:42.300
Well, if we have
Command-Shift-Backspace,

00:07:42.300 --> 00:07:43.200
should do the trick.

00:07:46.010 --> 00:07:46.520
Sorry.

00:07:46.520 --> 00:07:47.460
Next time.

00:07:47.460 --> 00:07:47.960
OK.

00:07:47.960 --> 00:07:52.970
To navigate within a file,
I use file structure popup,

00:07:52.970 --> 00:07:55.940
Command-Shift-F12.

00:07:55.940 --> 00:07:58.160
Command F12, sorry.

00:08:01.470 --> 00:08:03.730
It shows the same as
the structure tool

00:08:03.730 --> 00:08:06.810
window [INAUDIBLE] as
you type, and allows

00:08:06.810 --> 00:08:14.400
you to jump to a specific field
or a method or even a test

00:08:14.400 --> 00:08:18.720
case, if you're
inside a test file.

00:08:18.720 --> 00:08:21.630
More about navigation
within a file.

00:08:21.630 --> 00:08:24.090
You know in the top right
corner of the editor,

00:08:24.090 --> 00:08:26.760
there is an editor status mark.

00:08:26.760 --> 00:08:28.350
Editor status mark.

00:08:28.350 --> 00:08:32.280
And there are arrow stripes
on the right gutter.

00:08:32.280 --> 00:08:35.700
But to navigate there, you
don't need to use a mouse.

00:08:35.700 --> 00:08:41.780
The shortcuts are
F2, and Shift F2.

00:08:41.780 --> 00:08:44.970
And one more navigation action.

00:08:44.970 --> 00:08:49.310
You see the reference,
the caret is highlighted.

00:08:49.310 --> 00:08:51.520
To jump to the next
or previous reference,

00:08:51.520 --> 00:08:56.040
first press Command-Shift-F7.

00:08:56.040 --> 00:09:00.060
Now this highlighting doesn't
disappear as you move the caret

00:09:00.060 --> 00:09:04.750
And now Command-G
and Command-Shift-G

00:09:04.750 --> 00:09:09.060
jumps to the next or
previous reference.

00:09:09.060 --> 00:09:09.920
OK.

00:09:09.920 --> 00:09:13.910
Now a couple of words
about code completion.

00:09:13.910 --> 00:09:18.350
What key do you use to select
an item from the code completion

00:09:18.350 --> 00:09:21.080
list?

00:09:21.080 --> 00:09:24.960
Most people use enter, and in
most cases it works just fine.

00:09:24.960 --> 00:09:28.640
You may have trouble if the
caret is inside of a word.

00:09:28.640 --> 00:09:34.370
In this case enter
inserts the new item

00:09:34.370 --> 00:09:37.160
and leaves old
characters out of there.

00:09:37.160 --> 00:09:41.080
If that's not what
you want, use tab.

00:09:41.080 --> 00:09:43.580
It replaces the tail
of the identifier.

00:09:46.100 --> 00:09:48.320
OK.

00:09:48.320 --> 00:09:51.680
What other keys do you know
that can select an item

00:09:51.680 --> 00:09:55.230
from the completion list?

00:09:55.230 --> 00:09:59.300
Well, space, dot, and comma
do, but effectively, it's

00:09:59.300 --> 00:10:03.530
the same as enter followed
by a corresponding character.

00:10:03.530 --> 00:10:07.790
I mean an action that
does a bit different job.

00:10:07.790 --> 00:10:12.320
It is Command-Shift-Enter,
which stands for the action

00:10:12.320 --> 00:10:14.480
complete statement.

00:10:14.480 --> 00:10:17.570
The goal of this
action is to try

00:10:17.570 --> 00:10:22.310
to make the statement
syntactically complete

00:10:22.310 --> 00:10:26.030
and move the caret
to the next line.

00:10:26.030 --> 00:10:31.680
It tries to add semicolon,
parenthesis, braces, and more.

00:10:31.680 --> 00:10:36.250
For example, in this incomplete
[INAUDIBLE] statement,

00:10:36.250 --> 00:10:38.930
complete statement
as [INAUDIBLE]

00:10:38.930 --> 00:10:42.950
keyword parentheses
and the semicolon.

00:10:42.950 --> 00:10:45.180
And this if statement.

00:10:45.180 --> 00:10:48.950
And know that I don't
have to use code

00:10:48.950 --> 00:10:52.100
completion, complete statement.

00:10:52.100 --> 00:10:53.660
It's also known as smart enter.

00:10:53.660 --> 00:10:57.470
It works with the
completion list,

00:10:57.470 --> 00:11:00.480
and also you may use
it just in [INAUDIBLE]..

00:11:00.480 --> 00:11:04.490
And in this example with, if
statement, complete statement

00:11:04.490 --> 00:11:11.060
has a pair of braces and puts
that caret between them again.

00:11:11.060 --> 00:11:14.900
How to write the same if
statement using even less

00:11:14.900 --> 00:11:17.240
keystrokes.

00:11:17.240 --> 00:11:23.160
So-called postfix completion
feature will help.

00:11:23.160 --> 00:11:26.620
Well, I still have to
manually type the condition.

00:11:26.620 --> 00:11:29.830
But note that I didn't
write if before it.

00:11:29.830 --> 00:11:34.960
Instead, I typed dot-if
after it and pressed Tab.

00:11:34.960 --> 00:11:40.241
[APPLAUSE]

00:11:40.241 --> 00:11:40.740
Thank you.

00:11:40.740 --> 00:11:44.890
This is a brand new feature
powered by the Dart SDK 2.0.

00:11:44.890 --> 00:11:51.170
There are about 20 ballistics
compilation templates available

00:11:51.170 --> 00:11:51.720
for it.

00:11:51.720 --> 00:11:56.140
Take a look at them
in preferences.

00:11:56.140 --> 00:11:59.430
They're quite handy.

00:11:59.430 --> 00:12:03.240
[APPLAUSE]

00:12:03.240 --> 00:12:03.740
OK.

00:12:03.740 --> 00:12:06.410
So have you learned
anything new so far?

00:12:06.410 --> 00:12:08.170
[LAUGHTER]

00:12:08.170 --> 00:12:09.840
Really nothing?

00:12:09.840 --> 00:12:10.340
OK.

00:12:10.340 --> 00:12:10.840
Thank you.

00:12:10.840 --> 00:12:14.110
Now please welcome Jamie
for more cool features.

00:12:14.110 --> 00:12:19.057
[APPLAUSE]

00:12:19.057 --> 00:12:19.890
JAIME WREN: So yeah.

00:12:19.890 --> 00:12:20.390
Yes.

00:12:20.390 --> 00:12:23.190
So two things that come to mind.

00:12:23.190 --> 00:12:26.100
The Presentation Assistant,
I encourage everyone

00:12:26.100 --> 00:12:29.970
to install it for two reasons.

00:12:29.970 --> 00:12:33.480
One, kind of funny commands
that are deep down inside

00:12:33.480 --> 00:12:35.130
of your menus that
you find yourself

00:12:35.130 --> 00:12:36.794
doing over and over again.

00:12:36.794 --> 00:12:39.210
Your computer is going to be
telling you what the keyboard

00:12:39.210 --> 00:12:41.760
commands are for them to
hopefully encourage you

00:12:41.760 --> 00:12:44.180
to use your keyboard instead.

00:12:44.180 --> 00:12:46.170
The second reason
you should also go

00:12:46.170 --> 00:12:48.360
install the
Presentation Assistant

00:12:48.360 --> 00:12:51.090
is not for your own benefit, but
for the benefit of coworkers.

00:12:51.090 --> 00:12:54.804
So as you get more
proficient in InteliJ

00:12:54.804 --> 00:12:56.970
and you're kind of clicking
around doing keystrokes,

00:12:56.970 --> 00:12:59.250
your coworkers aren't
constantly asking,

00:12:59.250 --> 00:13:00.379
what did you just press?

00:13:00.379 --> 00:13:02.670
And you're like, watch the
keyboard, watch that, right.

00:13:02.670 --> 00:13:04.740
So it's called
Presentation Assistant.

00:13:04.740 --> 00:13:06.961
Go install it when you get home.

00:13:06.961 --> 00:13:08.460
The second thing
that comes to mind,

00:13:08.460 --> 00:13:16.080
and it's a real pleasure to have
Alex here because yesterday he

00:13:16.080 --> 00:13:19.350
shows the example of--

00:13:22.350 --> 00:13:25.800
let me get things set back
up here a little bit--

00:13:25.800 --> 00:13:31.200
of you type in Dart
analysis, and then

00:13:31.200 --> 00:13:33.660
Alt-Enter to set this up.

00:13:33.660 --> 00:13:36.680
And I said, that's great, let
me exit out of this dialogue.

00:13:36.680 --> 00:13:39.240
And you cannot hit exit
out of this dialogue,

00:13:39.240 --> 00:13:43.680
which I just found just
endlessly entertaining.

00:13:43.680 --> 00:13:48.671
So before we continue and talk
about a little bit about Dart

00:13:48.671 --> 00:13:50.670
and the Dart editor, we
should talk a little bit

00:13:50.670 --> 00:13:52.980
about the Dart analysis server.

00:13:52.980 --> 00:13:53.880
What is it?

00:13:53.880 --> 00:13:54.824
What does it do?

00:13:54.824 --> 00:13:57.240
What have we been talking about
when you've heard the Dart

00:13:57.240 --> 00:13:59.850
analysis, the analyzer.

00:13:59.850 --> 00:14:01.350
What is this thing?

00:14:01.350 --> 00:14:04.780
The first thing to realize
is that it is a feature.

00:14:04.780 --> 00:14:10.050
It is a product, shipped
as part of the Dart SDK.

00:14:10.050 --> 00:14:14.130
It is a local server which
communicates through JsonPipe

00:14:14.130 --> 00:14:16.590
to provide all of
the Dart resolution

00:14:16.590 --> 00:14:19.070
for your editor,
IntelliJ in this case.

00:14:19.070 --> 00:14:21.900
It provides all of
the code completions,

00:14:21.900 --> 00:14:24.750
a lot of the search, the
kind of call hierarchy,

00:14:24.750 --> 00:14:27.280
your errors and warnings,
your navigation,

00:14:27.280 --> 00:14:28.950
your syntax highlighting.

00:14:28.950 --> 00:14:32.280
Everything comes from
the analysis server.

00:14:32.280 --> 00:14:34.410
Furthermore, and
this is the future

00:14:34.410 --> 00:14:37.510
and you saw a little bit of
it yesterday with the lighting

00:14:37.510 --> 00:14:38.340
talk from Mike.

00:14:41.310 --> 00:14:44.130
The Dart analysis server also
provides a plugin framework

00:14:44.130 --> 00:14:46.170
so that other kind
of frameworks,

00:14:46.170 --> 00:14:48.630
think Flutter and
Angular, and packages

00:14:48.630 --> 00:14:51.937
can provide their own sets
of information to editors,

00:14:51.937 --> 00:14:53.520
their own sets of
errors and warnings,

00:14:53.520 --> 00:14:54.978
their own sets of
code completions,

00:14:54.978 --> 00:14:57.450
their own navigation, et cetera.

00:14:57.450 --> 00:15:00.900
And again, you saw that a
little bit yesterday with Mike.

00:15:00.900 --> 00:15:03.880
So let's jump right into it.

00:15:03.880 --> 00:15:07.800
This is the Flutter hello world
example that you have all seen,

00:15:07.800 --> 00:15:10.140
that you all love.

00:15:10.140 --> 00:15:14.340
And the first thing that you
will be doing, may be doing,

00:15:14.340 --> 00:15:17.250
is holding down the kind of
command key to navigate around.

00:15:17.250 --> 00:15:22.880
Write Command-Click,
you navigate around.

00:15:22.880 --> 00:15:25.650
Command-B also just
does the same thing.

00:15:25.650 --> 00:15:30.820
All right, Kind of common
stuff you do inside of any IDE.

00:15:34.270 --> 00:15:37.480
But you may not need to go
to the declaration, where

00:15:37.480 --> 00:15:38.632
some class is declared.

00:15:38.632 --> 00:15:40.090
You may need to go
find the usages.

00:15:42.960 --> 00:15:46.350
So it's called find usages, and
if can't remember the keyboard

00:15:46.350 --> 00:15:52.960
action, you can go
type in find usages.

00:15:52.960 --> 00:15:55.966
Alt-F7 on Mac.

00:15:55.966 --> 00:15:58.230
Alt-F7 brings up the
same dialogue down here

00:15:58.230 --> 00:16:02.845
and breaks it down by the
declaration of the constructor.

00:16:02.845 --> 00:16:05.740
It breaks down by
the usages, read

00:16:05.740 --> 00:16:09.720
write access, documentation
usages, and all these things.

00:16:09.720 --> 00:16:10.940
It'll list them out.

00:16:10.940 --> 00:16:16.870
So that's kind of navigating
around, exploring find usages.

00:16:16.870 --> 00:16:20.510
The next common way to
kind of learn a code

00:16:20.510 --> 00:16:24.995
base, to kind of navigate around
might be the call hierarchy.

00:16:24.995 --> 00:16:26.810
So call hierarchy
might be what you want.

00:16:26.810 --> 00:16:27.810
So here's a constructor.

00:16:27.810 --> 00:16:29.500
We use the same one.

00:16:29.500 --> 00:16:34.490
The call hierarchy
is Control-Alt-H.

00:16:34.490 --> 00:16:37.170
And again, as Alex
showed a minute ago,

00:16:37.170 --> 00:16:39.470
if you can't remember
that, just [INAUDIBLE]..

00:16:39.470 --> 00:16:43.591
Open up Control-Command-Shift-A.
And just type in call

00:16:43.591 --> 00:16:44.090
hierarchy.

00:16:44.090 --> 00:16:45.140
It'll bring you
to the same thing.

00:16:45.140 --> 00:16:47.420
And so what this does is
instead of just a list,

00:16:47.420 --> 00:16:50.804
this brings a tree that will be
an ever expanding tree of who

00:16:50.804 --> 00:16:52.720
does this call, who does
this call, et cetera,

00:16:52.720 --> 00:16:54.136
all the way down
to kind of figure

00:16:54.136 --> 00:17:00.680
out your path given some
error message or whatnot.

00:17:00.680 --> 00:17:05.460
That was navigation, find
usages, call hierarchy.

00:17:05.460 --> 00:17:07.170
Type hierarchy.

00:17:07.170 --> 00:17:09.540
We have a type
hierarchy, especially

00:17:09.540 --> 00:17:11.730
handy with things like
maybe widgets that yo

00:17:11.730 --> 00:17:13.480
have been hearing about.

00:17:13.480 --> 00:17:19.770
It is not Command-H.
It's Control-H. Otherwise

00:17:19.770 --> 00:17:21.640
your windows all
go way and back.

00:17:21.640 --> 00:17:23.690
So type hierarchy.

00:17:23.690 --> 00:17:26.010
So this is showing my
home page as a state

00:17:26.010 --> 00:17:28.170
for widget, as a
widget, all the way up,

00:17:28.170 --> 00:17:30.220
so another way to
kind of statically,

00:17:30.220 --> 00:17:32.040
without the inspector,
which is runtime.

00:17:32.040 --> 00:17:34.860
This is all static
analysis inside the IDE.

00:17:37.850 --> 00:17:39.050
All right.

00:17:39.050 --> 00:17:40.760
Moving along.

00:17:40.760 --> 00:17:45.180
We looked at the Dart
analysis view a moment ago.

00:17:45.180 --> 00:17:48.140
Let's get it up
Dart analysis view.

00:17:48.140 --> 00:17:48.770
Here we go.

00:17:48.770 --> 00:17:50.970
Just a few errors in there.

00:17:50.970 --> 00:17:52.901
Let's get some more.

00:17:52.901 --> 00:17:53.400
All right.

00:17:53.400 --> 00:17:55.710
So I've got some more errors.

00:17:55.710 --> 00:17:58.360
Dart analysis view lets
me do things like sort

00:17:58.360 --> 00:18:01.140
by the description,
sort by location.

00:18:01.140 --> 00:18:04.440
Let me look at things just
in this particular file.

00:18:04.440 --> 00:18:07.330
I can also sort by the severity.

00:18:07.330 --> 00:18:09.305
I can sort by this file.

00:18:09.305 --> 00:18:10.830
I can filter out
things that aren't

00:18:10.830 --> 00:18:14.820
in my project in this
directory, whatever you need.

00:18:14.820 --> 00:18:16.239
All right.

00:18:16.239 --> 00:18:17.280
That's the analysis view.

00:18:20.660 --> 00:18:21.555
F2.

00:18:21.555 --> 00:18:23.180
So let's say you come
to some new file.

00:18:23.180 --> 00:18:26.240
You've got a lot of stuff
in your analysis view.

00:18:26.240 --> 00:18:28.310
You want to know if
there's anything in here

00:18:28.310 --> 00:18:30.170
as far as errors go.

00:18:30.170 --> 00:18:34.400
F2 let's me scroll through,
scroll through the errors.

00:18:34.400 --> 00:18:35.540
So I have some.

00:18:35.540 --> 00:18:36.750
I'm scrolling through them.

00:18:36.750 --> 00:18:40.950
Shift F2 does the opposite.

00:18:40.950 --> 00:18:41.940
Very handy.

00:18:41.940 --> 00:18:45.150
This icon up here let's me kind
of toggle this and say, only.

00:18:45.150 --> 00:18:46.440
Go through errors.

00:18:46.440 --> 00:18:50.150
Only go through errors
and warnings, whatever.

00:18:50.150 --> 00:18:51.590
OK.

00:18:51.590 --> 00:18:52.640
That's the analysis view.

00:18:52.640 --> 00:18:55.550
That's the errors
navigation around your Dart,

00:18:55.550 --> 00:18:59.060
call hierarchy, type
hierarchy, all very useful.

00:18:59.060 --> 00:19:01.980
But the most useful
thing about the talk--

00:19:01.980 --> 00:19:04.490
this is the first instance
[INAUDIBLE] is the Alt-Enter.

00:19:04.490 --> 00:19:06.350
We already learned
one of the instances.

00:19:06.350 --> 00:19:08.750
[INAUDIBLE]

00:19:08.750 --> 00:19:10.530
And that is the following.

00:19:10.530 --> 00:19:14.570
So with a bunch of errors
and warnings in Dart,

00:19:14.570 --> 00:19:17.280
you hit Alt-Enter, and
it suggests things.

00:19:17.280 --> 00:19:18.950
So in this case,
it's saying, you

00:19:18.950 --> 00:19:22.250
don't have some import to
get the correct resolution.

00:19:22.250 --> 00:19:25.400
And here I know that I need
to get material Flutter.

00:19:28.370 --> 00:19:31.650
And there we go, and
it's all cleaned up.

00:19:31.650 --> 00:19:33.020
So handy dandy.

00:19:33.020 --> 00:19:36.950
Alt-Enter on certain
error messages.

00:19:36.950 --> 00:19:38.200
Alt-Enter.

00:19:38.200 --> 00:19:38.700
OK.

00:19:41.049 --> 00:19:42.590
Let me try to get
to my other window.

00:19:55.430 --> 00:19:59.950
This is an abbreviated version
of what you saw yesterday

00:19:59.950 --> 00:20:01.570
in the Lightning talk.

00:20:01.570 --> 00:20:03.990
This is the analysis server.

00:20:03.990 --> 00:20:05.380
The analysis server is all Dart.

00:20:05.380 --> 00:20:07.150
It's not Flutter, necessarily.

00:20:07.150 --> 00:20:09.250
It's not Angular specifically.

00:20:09.250 --> 00:20:18.220
But here I've got the
Angular plugin inside,

00:20:18.220 --> 00:20:19.230
updated with IntelliJ.

00:20:19.230 --> 00:20:21.660
And so I'm going to
get errors and warnings

00:20:21.660 --> 00:20:24.242
and hence with my HTML.

00:20:24.242 --> 00:20:26.700
And if you saw Lightning talk,
again, you already saw this.

00:20:26.700 --> 00:20:29.880
These things are all resolved.

00:20:29.880 --> 00:20:34.350
And since I'm in IntelliJ, I
get the value from IntelliJ.

00:20:34.350 --> 00:20:36.210
So if I'm editing
some tag, it should

00:20:36.210 --> 00:20:42.150
be smart enough to know that
I need to edit both tags.

00:20:42.150 --> 00:20:44.670
This is the value you
get from the framework,

00:20:44.670 --> 00:20:46.670
from the IntelliJ framework.

00:20:46.670 --> 00:20:50.490
And so hopefully the
better editing experience

00:20:50.490 --> 00:20:54.870
from IntelliJ, plus things
like the additional errors

00:20:54.870 --> 00:20:58.170
and warnings for your
Angular tags and whatnot

00:20:58.170 --> 00:21:02.130
should yield a much
happier experience.

00:21:02.130 --> 00:21:04.860
And so that's the
Angular plugin.

00:21:04.860 --> 00:21:05.580
All right.

00:21:05.580 --> 00:21:07.680
I'm going to jump back to
an example you have all

00:21:07.680 --> 00:21:10.030
seen many times.

00:21:10.030 --> 00:21:12.080
And that is the one right
here, the hot reload.

00:21:12.080 --> 00:21:14.370
If you have not seen
it, if you have not

00:21:14.370 --> 00:21:18.460
caught it on stage yet, i
will point it out right now.

00:21:18.460 --> 00:21:20.980
And that is the following.

00:21:20.980 --> 00:21:24.870
Let's get my run dialog up here.

00:21:24.870 --> 00:21:25.490
Here we go.

00:21:25.490 --> 00:21:31.150
It's running onto my simulator.

00:21:31.150 --> 00:21:34.581
I can come down here, and you've
all seen it change red to blue.

00:21:34.581 --> 00:21:35.080
Great.

00:21:35.080 --> 00:21:36.340
And I can come hit hot reload.

00:21:36.340 --> 00:21:38.410
We all love hot reload.

00:21:38.410 --> 00:21:41.410
The improvement though,
the last few months,

00:21:41.410 --> 00:21:42.520
has been save action.

00:21:42.520 --> 00:21:46.100
So hot reload and save.

00:21:46.100 --> 00:21:48.490
This helps you from having
to move your mouse down

00:21:48.490 --> 00:21:50.260
to a hot reload or
having to decide

00:21:50.260 --> 00:21:53.605
between hot reload and a
full reboot of the whole app.

00:21:53.605 --> 00:21:55.829
It king of helps keep
you on the rails.

00:21:55.829 --> 00:21:57.370
You can imagine
things in the future,

00:21:57.370 --> 00:21:58.994
like if we know that
you-- hot reload's

00:21:58.994 --> 00:22:01.810
not going to be sufficient
just to do the whole app.

00:22:01.810 --> 00:22:04.829
By just doing it on save to
try to keep you on the rails,

00:22:04.829 --> 00:22:06.370
keep you from having
moved the cursor

00:22:06.370 --> 00:22:08.290
to hot reload, et cetera.

00:22:08.290 --> 00:22:12.550
So that's hot reload and save.

00:22:12.550 --> 00:22:16.530
I'm going to point out
some other features that

00:22:16.530 --> 00:22:22.830
have been added into the
Dart plugin, specifically

00:22:22.830 --> 00:22:23.730
for Flutter.

00:22:23.730 --> 00:22:34.080
So in Flutter, it's all
about your build method.

00:22:34.080 --> 00:22:37.290
It's that structure
of the build.

00:22:37.290 --> 00:22:39.240
And so when modifying
or exploring

00:22:39.240 --> 00:22:41.220
or reading existing
code, it'd be

00:22:41.220 --> 00:22:43.380
really handy to
say, OK, my build

00:22:43.380 --> 00:22:46.080
has some widgets that contain
widgets that contain widgets.

00:22:46.080 --> 00:22:47.970
Let me go through and
navigate through these.

00:22:47.970 --> 00:22:50.250
And so because even
the structure view

00:22:50.250 --> 00:22:53.130
comes from the analysis server,
we now have that ability.

00:22:53.130 --> 00:22:55.680
So I can come down
here and explore around

00:22:55.680 --> 00:22:57.790
the app to say, OK, here we go.

00:23:01.230 --> 00:23:03.810
I've got some column and
navigating to source.

00:23:03.810 --> 00:23:05.910
So if you navigate
to and from source,

00:23:05.910 --> 00:23:07.369
the buttons right
up here selected,

00:23:07.369 --> 00:23:08.785
and I select in
source, it's going

00:23:08.785 --> 00:23:11.245
to select in the structure
view and vise versa, everything

00:23:11.245 --> 00:23:12.120
you'd want to expect.

00:23:14.950 --> 00:23:18.370
So that is the build support,
build method support,

00:23:18.370 --> 00:23:20.125
inside the structure
view IntelliJ.

00:23:22.920 --> 00:23:23.700
All right.

00:23:23.700 --> 00:23:28.300
Navigating around the build
method a little bit more.

00:23:28.300 --> 00:23:31.060
You may have caught
it this morning.

00:23:31.060 --> 00:23:33.120
It's sometimes
kind of confusing.

00:23:33.120 --> 00:23:35.850
Where does this curly
brace end for my center

00:23:35.850 --> 00:23:37.489
to see what it's wrapped in.

00:23:37.489 --> 00:23:39.030
You can kind of have
the highlighting

00:23:39.030 --> 00:23:43.180
from IntelliJ here in the
hover kind of at the top there.

00:23:43.180 --> 00:23:47.220
We also have the kind of
end of line markers here.

00:23:47.220 --> 00:23:50.520
This is not source code,
this center comment here.

00:23:50.520 --> 00:23:53.280
That's provided from the
analysis server still

00:23:53.280 --> 00:23:56.970
to mark the end of that
constructor invocation,

00:23:56.970 --> 00:24:00.380
to indicate that, OK, everything
above this is wrapped,

00:24:00.380 --> 00:24:01.200
et cetera.

00:24:01.200 --> 00:24:04.460
Now let's say that I know
that everything in my center

00:24:04.460 --> 00:24:06.849
constructor, that my
center widget is good.

00:24:06.849 --> 00:24:08.640
I need to modify and
tweak stuff around it.

00:24:08.640 --> 00:24:13.220
What I really want to is fold
stuff up into that constructor.

00:24:13.220 --> 00:24:16.350
And so as of a version or
two ago, you can now do that.

00:24:16.350 --> 00:24:18.480
So I can now fold everything
up, wrap it all up,

00:24:18.480 --> 00:24:22.080
and now work on the
things around it.

00:24:22.080 --> 00:24:23.801
Hover to see what's in it.

00:24:23.801 --> 00:24:25.050
It kind of does what you want.

00:24:25.050 --> 00:24:27.258
So you kind of navigate
around, edit different parts,

00:24:27.258 --> 00:24:30.150
ignore or not ignore
specific parts

00:24:30.150 --> 00:24:32.950
as you're working on
your widget structure.

00:24:32.950 --> 00:24:34.960
But you're not just
exploring necessarily,

00:24:34.960 --> 00:24:36.050
not necessarily tweaking.

00:24:36.050 --> 00:24:38.550
Sometimes what you need to
do is wrap a widget inside

00:24:38.550 --> 00:24:44.700
of another widget, and the
missing parentheses or bracket

00:24:44.700 --> 00:24:47.340
can be a big nuisance.

00:24:47.340 --> 00:24:50.370
And so this brings me to the
second instance of the t-shirt

00:24:50.370 --> 00:24:51.780
here, which is Alt-Enter.

00:24:51.780 --> 00:24:53.460
So Alt-Enter.

00:24:53.460 --> 00:24:56.420
I can convert to a child,
move the widget up,

00:24:56.420 --> 00:24:57.895
wrap with the new widget.

00:24:57.895 --> 00:25:00.270
So in this demo, I'm going to
wrap it with another center

00:25:00.270 --> 00:25:02.728
and it's not going to change
on simulator after hot reload.

00:25:02.728 --> 00:25:05.430
So let's see it.

00:25:05.430 --> 00:25:06.990
Wrap with a center.

00:25:06.990 --> 00:25:08.070
Enter.

00:25:08.070 --> 00:25:10.680
It put the closing
braces everywhere I need.

00:25:10.680 --> 00:25:13.650
It added this, the
hot reload on save.

00:25:13.650 --> 00:25:15.870
And it doesn't change
anything, as it shouldn't.

00:25:15.870 --> 00:25:18.840
So that's live demo worked.

00:25:18.840 --> 00:25:19.645
Yeah.

00:25:19.645 --> 00:25:21.130
[APPLAUSE]

00:25:21.130 --> 00:25:24.100
Yeah.

00:25:24.100 --> 00:25:24.720
OK.

00:25:24.720 --> 00:25:29.520
One final, One final
little feature.

00:25:29.520 --> 00:25:34.680
So we saw a little bit ago
the postfix completions.

00:25:34.680 --> 00:25:37.860
This last one that I
want to show is this one.

00:25:37.860 --> 00:25:42.180
So S-T. S-T brings up
these three things:

00:25:42.180 --> 00:25:45.870
create a new state for widget,
a new widget with an animation

00:25:45.870 --> 00:25:48.720
controller, and new
stateless widget.

00:25:48.720 --> 00:25:51.160
So you can add
your own settings.

00:25:51.160 --> 00:25:53.160
But when creating
widgets and whatnot,

00:25:53.160 --> 00:25:55.247
sometimes it's nice to
have some boilerplate,

00:25:55.247 --> 00:25:57.330
and you should not be
typing out the boiler plate.

00:25:57.330 --> 00:25:59.040
If you have your own
custom boilerplate,

00:25:59.040 --> 00:26:00.924
go create your own
one of these things.

00:26:00.924 --> 00:26:02.840
So let's just see what
one of them looks like.

00:26:02.840 --> 00:26:05.130
So new stateless widget.

00:26:05.130 --> 00:26:08.590
It puts the cursor directly
where the class name should be.

00:26:11.782 --> 00:26:13.600
DartCon, whatever.

00:26:13.600 --> 00:26:15.880
And it brings me
to where it expects

00:26:15.880 --> 00:26:17.960
I should be typing again.

00:26:17.960 --> 00:26:20.690
So S-T because I can't
remember the rest of them,

00:26:20.690 --> 00:26:23.500
some new animation controller.

00:26:23.500 --> 00:26:24.670
Right.

00:26:24.670 --> 00:26:29.640
And that is everything
that I wanted to show.

00:26:29.640 --> 00:26:30.650
Thank you.

00:26:30.650 --> 00:26:32.500
[APPLAUSE]

