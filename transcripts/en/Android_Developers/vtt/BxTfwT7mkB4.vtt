WEBVTT
Kind: captions
Language: en

00:00:00.499 --> 00:00:03.610
To defeat the bugs, we
must catch the bugs.

00:00:03.610 --> 00:00:05.860
We must different on
all fronts to ensure

00:00:05.860 --> 00:00:07.880
they're caught early and often.

00:00:07.880 --> 00:00:09.910
Compile time checks
help, but there's also

00:00:09.910 --> 00:00:13.420
a whole set of runtime
checks we can also use.

00:00:13.420 --> 00:00:15.280
That's where
StrictMode comes in,

00:00:15.280 --> 00:00:17.320
offering a set of
runtime checks you

00:00:17.320 --> 00:00:20.330
can add to your debug builds
to catch potential issues

00:00:20.330 --> 00:00:22.539
before they hit your users.

00:00:22.539 --> 00:00:24.330
I'm Ian Lake, and I'll
walk you through two

00:00:24.330 --> 00:00:26.780
of my favorite
StrictMode features

00:00:26.780 --> 00:00:28.380
that go beyond
performance checks

00:00:28.380 --> 00:00:31.140
and help you build better apps.

00:00:31.140 --> 00:00:34.640
So if link checks are the
Android-specific compile time

00:00:34.640 --> 00:00:37.650
problems you can tell
you about, StrictMode

00:00:37.650 --> 00:00:40.690
is the runtime equivalent,
pointing out issues

00:00:40.690 --> 00:00:44.330
that we can detect at runtime
so you can fix them early.

00:00:44.330 --> 00:00:47.250
Much of StrictMode is
performance-focused.

00:00:47.250 --> 00:00:49.420
The other Ian does
a great job talking

00:00:49.420 --> 00:00:51.420
about those features
in his video,

00:00:51.420 --> 00:00:53.360
as well as the
basics of StrictMode.

00:00:53.360 --> 00:00:55.790
But I'm not here to rehash that.

00:00:55.790 --> 00:00:58.265
Instead, let's talk
about the cool new stuff,

00:00:58.265 --> 00:00:59.890
like VM policy's
detectFileUriExposure.

00:01:02.510 --> 00:01:04.910
If you're sharing
content with other apps,

00:01:04.910 --> 00:01:08.130
you do not want to
be using file URIs.

00:01:08.130 --> 00:01:09.940
They require
storage permissions,

00:01:09.940 --> 00:01:11.730
and they can't
cross between users,

00:01:11.730 --> 00:01:14.946
and-- well, just watch my
dev byte on sharing content.

00:01:14.946 --> 00:01:17.130
The StrictMode check
just makes sure

00:01:17.130 --> 00:01:20.690
that those file URIs don't
make it out to other apps.

00:01:20.690 --> 00:01:22.080
Like all StrictMode,
you can have

00:01:22.080 --> 00:01:25.970
it log the issue with penaltyLog
or kill your app completely

00:01:25.970 --> 00:01:27.420
with penaltyDeath.

00:01:27.420 --> 00:01:29.180
Build better apps or death.

00:01:29.180 --> 00:01:31.790
Should be an easy choice, right?

00:01:31.790 --> 00:01:34.420
Now, new to Android
6.0 Marshmallow

00:01:34.420 --> 00:01:37.280
is detectCleartextNetwork.

00:01:37.280 --> 00:01:38.840
As you might expect
from the name,

00:01:38.840 --> 00:01:44.510
this detects unencrypted network
traffic over IPv4 or IPv6,

00:01:44.510 --> 00:01:46.762
whether using TCP or UDP.

00:01:46.762 --> 00:01:49.800
The thing about mobile
devices out in the wild

00:01:49.800 --> 00:01:51.800
is that you can't
really guarantee

00:01:51.800 --> 00:01:54.530
that they'll actually be
connected to trustworthy access

00:01:54.530 --> 00:01:55.620
points.

00:01:55.620 --> 00:01:58.020
Risking the security
of your user's data

00:01:58.020 --> 00:02:00.005
or the communication
to your server

00:02:00.005 --> 00:02:02.510
is the last privacy
nightmare you want

00:02:02.510 --> 00:02:04.150
to deal with on launch day.

00:02:04.150 --> 00:02:08.460
So detect it early and
encrypt your network traffic.

00:02:08.460 --> 00:02:11.700
One thing to keep in mind,
you may find false positives

00:02:11.700 --> 00:02:15.610
when using STARTTLS
protocols or HTTP proxies.

00:02:15.610 --> 00:02:18.090
Something to be aware of is
StrictMode starts killing it

00:02:18.090 --> 00:02:20.720
when you're, in
fact, doing it right.

00:02:20.720 --> 00:02:23.410
Now, with your app
creating extra logging

00:02:23.410 --> 00:02:25.720
and being killed and
all that, you probably

00:02:25.720 --> 00:02:27.750
want to keep in mind that
StrictMode should only

00:02:27.750 --> 00:02:30.130
be enabled for debug builds.

00:02:30.130 --> 00:02:32.650
The easiest way to do that is
by wrapping your StrictMode

00:02:32.650 --> 00:02:36.430
calls in a buildConfig debug
check, which is automatically

00:02:36.430 --> 00:02:39.650
set to false on release builds.

00:02:39.650 --> 00:02:42.630
There's a lot more to
explore with StrictMode.

00:02:42.630 --> 00:02:45.830
But detecting file URIs and
cleartext network traffic

00:02:45.830 --> 00:02:48.960
can be extremely useful
in finding issues

00:02:48.960 --> 00:02:51.760
before they are
experienced by your users,

00:02:51.760 --> 00:02:53.500
giving you that
extra peace of mind

00:02:53.500 --> 00:02:55.700
that you're building
better apps.

00:02:55.700 --> 00:02:58.150
[MUSIC PLAYING]

