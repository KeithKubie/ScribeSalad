WEBVTT
Kind: captions
Language: en

00:00:01.790 --> 00:00:03.949
one of the hang-ups of having an awesome

00:00:03.949 --> 00:00:03.959
one of the hang-ups of having an awesome
 

00:00:03.959 --> 00:00:06.769
one of the hang-ups of having an awesome
modern complex mobile application is all

00:00:06.769 --> 00:00:06.779
modern complex mobile application is all
 

00:00:06.779 --> 00:00:09.320
modern complex mobile application is all
the stuff you got to do just to get it

00:00:09.320 --> 00:00:09.330
the stuff you got to do just to get it
 

00:00:09.330 --> 00:00:11.629
the stuff you got to do just to get it
working so the user is happy it seems

00:00:11.629 --> 00:00:11.639
working so the user is happy it seems
 

00:00:11.639 --> 00:00:13.160
working so the user is happy it seems
counterintuitive then that when you do

00:00:13.160 --> 00:00:13.170
counterintuitive then that when you do
 

00:00:13.170 --> 00:00:15.020
counterintuitive then that when you do
all that stuff before the app boots up

00:00:15.020 --> 00:00:15.030
all that stuff before the app boots up
 

00:00:15.030 --> 00:00:17.630
all that stuff before the app boots up
it can actually cause unhappy users my

00:00:17.630 --> 00:00:17.640
it can actually cause unhappy users my
 

00:00:17.640 --> 00:00:18.830
it can actually cause unhappy users my
name is Colt McAnlis and one of the

00:00:18.830 --> 00:00:18.840
name is Colt McAnlis and one of the
 

00:00:18.840 --> 00:00:20.480
name is Colt McAnlis and one of the
common problems with slow launch

00:00:20.480 --> 00:00:20.490
common problems with slow launch
 

00:00:20.490 --> 00:00:22.310
common problems with slow launch
performance is doing too much stuff

00:00:22.310 --> 00:00:22.320
performance is doing too much stuff
 

00:00:22.320 --> 00:00:23.540
performance is doing too much stuff
inside of your applications

00:00:23.540 --> 00:00:23.550
inside of your applications
 

00:00:23.550 --> 00:00:25.849
inside of your applications
initialization code remember that

00:00:25.849 --> 00:00:25.859
initialization code remember that
 

00:00:25.859 --> 00:00:27.529
initialization code remember that
anytime your app launches the system

00:00:27.529 --> 00:00:27.539
anytime your app launches the system
 

00:00:27.539 --> 00:00:29.480
anytime your app launches the system
will display a start up window until

00:00:29.480 --> 00:00:29.490
will display a start up window until
 

00:00:29.490 --> 00:00:31.490
will display a start up window until
everything is up ready and your app has

00:00:31.490 --> 00:00:31.500
everything is up ready and your app has
 

00:00:31.500 --> 00:00:33.799
everything is up ready and your app has
been drawn the longer the users are

00:00:33.799 --> 00:00:33.809
been drawn the longer the users are
 

00:00:33.809 --> 00:00:35.360
been drawn the longer the users are
staring at this window the less happy

00:00:35.360 --> 00:00:35.370
staring at this window the less happy
 

00:00:35.370 --> 00:00:36.799
staring at this window the less happy
they generally get with your application

00:00:36.799 --> 00:00:36.809
they generally get with your application
 

00:00:36.809 --> 00:00:39.590
they generally get with your application
now a common scene all the time problem

00:00:39.590 --> 00:00:39.600
now a common scene all the time problem
 

00:00:39.600 --> 00:00:41.299
now a common scene all the time problem
that can cause this is spending too much

00:00:41.299 --> 00:00:41.309
that can cause this is spending too much
 

00:00:41.309 --> 00:00:43.400
that can cause this is spending too much
time and processing cycles in the

00:00:43.400 --> 00:00:43.410
time and processing cycles in the
 

00:00:43.410 --> 00:00:45.619
time and processing cycles in the
initialization of custom application

00:00:45.619 --> 00:00:45.629
initialization of custom application
 

00:00:45.629 --> 00:00:47.479
initialization of custom application
objects now while it's really important

00:00:47.479 --> 00:00:47.489
objects now while it's really important
 

00:00:47.489 --> 00:00:49.160
objects now while it's really important
to do some types of global work here

00:00:49.160 --> 00:00:49.170
to do some types of global work here
 

00:00:49.170 --> 00:00:50.389
to do some types of global work here
remember that the rest of the

00:00:50.389 --> 00:00:50.399
remember that the rest of the
 

00:00:50.399 --> 00:00:52.189
remember that the rest of the
application launching process can't move

00:00:52.189 --> 00:00:52.199
application launching process can't move
 

00:00:52.199 --> 00:00:54.470
application launching process can't move
forward until this initialization is

00:00:54.470 --> 00:00:54.480
forward until this initialization is
 

00:00:54.480 --> 00:00:54.950
forward until this initialization is
finished

00:00:54.950 --> 00:00:54.960
finished
 

00:00:54.960 --> 00:00:56.660
finished
and don't go wrong sometimes this isn't

00:00:56.660 --> 00:00:56.670
and don't go wrong sometimes this isn't
 

00:00:56.670 --> 00:00:57.799
and don't go wrong sometimes this isn't
intentional I mean it's not like you're

00:00:57.799 --> 00:00:57.809
intentional I mean it's not like you're
 

00:00:57.809 --> 00:00:59.389
intentional I mean it's not like you're
going out of your way to put lots of

00:00:59.389 --> 00:00:59.399
going out of your way to put lots of
 

00:00:59.399 --> 00:01:01.700
going out of your way to put lots of
work in this object application

00:01:01.700 --> 00:01:01.710
work in this object application
 

00:01:01.710 --> 00:01:03.560
work in this object application
subclasses tend to become repositories

00:01:03.560 --> 00:01:03.570
subclasses tend to become repositories
 

00:01:03.570 --> 00:01:05.719
subclasses tend to become repositories
for the full set of potential things an

00:01:05.719 --> 00:01:05.729
for the full set of potential things an
 

00:01:05.729 --> 00:01:07.700
for the full set of potential things an
app may need to be initialized for all

00:01:07.700 --> 00:01:07.710
app may need to be initialized for all
 

00:01:07.710 --> 00:01:10.010
app may need to be initialized for all
the possible activities in your app the

00:01:10.010 --> 00:01:10.020
the possible activities in your app the
 

00:01:10.020 --> 00:01:11.899
the possible activities in your app the
result is a lot of wasted work in the

00:01:11.899 --> 00:01:11.909
result is a lot of wasted work in the
 

00:01:11.909 --> 00:01:14.000
result is a lot of wasted work in the
most common cases now particularly

00:01:14.000 --> 00:01:14.010
most common cases now particularly
 

00:01:14.010 --> 00:01:16.160
most common cases now particularly
difficult in these situations is when

00:01:16.160 --> 00:01:16.170
difficult in these situations is when
 

00:01:16.170 --> 00:01:17.749
difficult in these situations is when
you get things like blocking code

00:01:17.749 --> 00:01:17.759
you get things like blocking code
 

00:01:17.759 --> 00:01:20.390
you get things like blocking code
garbage collection events disk i/o or

00:01:20.390 --> 00:01:20.400
garbage collection events disk i/o or
 

00:01:20.400 --> 00:01:22.910
garbage collection events disk i/o or
lots of network pings you know all the

00:01:22.910 --> 00:01:22.920
lots of network pings you know all the
 

00:01:22.920 --> 00:01:24.920
lots of network pings you know all the
heavy work that's sitting right in the

00:01:24.920 --> 00:01:24.930
heavy work that's sitting right in the
 

00:01:24.930 --> 00:01:26.270
heavy work that's sitting right in the
middle of the most critical step of your

00:01:26.270 --> 00:01:26.280
middle of the most critical step of your
 

00:01:26.280 --> 00:01:28.819
middle of the most critical step of your
initialization now before you run into

00:01:28.819 --> 00:01:28.829
initialization now before you run into
 

00:01:28.829 --> 00:01:30.200
initialization now before you run into
the weeds here trying to address these

00:01:30.200 --> 00:01:30.210
the weeds here trying to address these
 

00:01:30.210 --> 00:01:32.270
the weeds here trying to address these
issues it's worth figuring out if you

00:01:32.270 --> 00:01:32.280
issues it's worth figuring out if you
 

00:01:32.280 --> 00:01:34.460
issues it's worth figuring out if you
have a problem thankfully Android has

00:01:34.460 --> 00:01:34.470
have a problem thankfully Android has
 

00:01:34.470 --> 00:01:37.280
have a problem thankfully Android has
some tools to help first is the method

00:01:37.280 --> 00:01:37.290
some tools to help first is the method
 

00:01:37.290 --> 00:01:38.780
some tools to help first is the method
profiling tool which lets you

00:01:38.780 --> 00:01:38.790
profiling tool which lets you
 

00:01:38.790 --> 00:01:40.010
profiling tool which lets you
graphically see how long your

00:01:40.010 --> 00:01:40.020
graphically see how long your
 

00:01:40.020 --> 00:01:41.719
graphically see how long your
application on create method is taking

00:01:41.719 --> 00:01:41.729
application on create method is taking
 

00:01:41.729 --> 00:01:43.880
application on create method is taking
if it's going longer than 4 to 10

00:01:43.880 --> 00:01:43.890
if it's going longer than 4 to 10
 

00:01:43.890 --> 00:01:45.380
if it's going longer than 4 to 10
milliseconds then it's worth exploring

00:01:45.380 --> 00:01:45.390
milliseconds then it's worth exploring
 

00:01:45.390 --> 00:01:47.539
milliseconds then it's worth exploring
more to see what might be causing that

00:01:47.539 --> 00:01:47.549
more to see what might be causing that
 

00:01:47.549 --> 00:01:49.340
more to see what might be causing that
delay and to get that information you

00:01:49.340 --> 00:01:49.350
delay and to get that information you
 

00:01:49.350 --> 00:01:51.530
delay and to get that information you
can drill down by adding tracing

00:01:51.530 --> 00:01:51.540
can drill down by adding tracing
 

00:01:51.540 --> 00:01:53.660
can drill down by adding tracing
functions to your code which will then

00:01:53.660 --> 00:01:53.670
functions to your code which will then
 

00:01:53.670 --> 00:01:55.490
functions to your code which will then
show up in the next systrace capture

00:01:55.490 --> 00:01:55.500
show up in the next systrace capture
 

00:01:55.500 --> 00:01:57.380
show up in the next systrace capture
that you run for your application and

00:01:57.380 --> 00:01:57.390
that you run for your application and
 

00:01:57.390 --> 00:01:59.780
that you run for your application and
let's be clear the solution to all of

00:01:59.780 --> 00:01:59.790
let's be clear the solution to all of
 

00:01:59.790 --> 00:02:03.109
let's be clear the solution to all of
these problems is simple lazy loading C

00:02:03.109 --> 00:02:03.119
these problems is simple lazy loading C
 

00:02:03.119 --> 00:02:05.630
these problems is simple lazy loading C
while you can initialize subclasses and

00:02:05.630 --> 00:02:05.640
while you can initialize subclasses and
 

00:02:05.640 --> 00:02:07.760
while you can initialize subclasses and
systems for all activities your app will

00:02:07.760 --> 00:02:07.770
systems for all activities your app will
 

00:02:07.770 --> 00:02:09.800
systems for all activities your app will
need doing all this stuff up front is

00:02:09.800 --> 00:02:09.810
need doing all this stuff up front is
 

00:02:09.810 --> 00:02:12.280
need doing all this stuff up front is
just complete overkill so only a sub

00:02:12.280 --> 00:02:12.290
just complete overkill so only a sub
 

00:02:12.290 --> 00:02:14.110
just complete overkill so only a sub
set of these items are actually critical

00:02:14.110 --> 00:02:14.120
set of these items are actually critical
 

00:02:14.120 --> 00:02:16.179
set of these items are actually critical
for the main activity and thus those the

00:02:16.179 --> 00:02:16.189
for the main activity and thus those the
 

00:02:16.189 --> 00:02:17.470
for the main activity and thus those the
only ones that should be worked on the

00:02:17.470 --> 00:02:17.480
only ones that should be worked on the
 

00:02:17.480 --> 00:02:19.000
only ones that should be worked on the
rest should be deferred to some later

00:02:19.000 --> 00:02:19.010
rest should be deferred to some later
 

00:02:19.010 --> 00:02:19.539
rest should be deferred to some later
time

00:02:19.539 --> 00:02:19.549
time
 

00:02:19.549 --> 00:02:21.220
time
basically this boils down to moving

00:02:21.220 --> 00:02:21.230
basically this boils down to moving
 

00:02:21.230 --> 00:02:22.750
basically this boils down to moving
things out of the critical path of the

00:02:22.750 --> 00:02:22.760
things out of the critical path of the
 

00:02:22.760 --> 00:02:24.610
things out of the critical path of the
application initialization and either

00:02:24.610 --> 00:02:24.620
application initialization and either
 

00:02:24.620 --> 00:02:26.440
application initialization and either
doing that work on demand like a

00:02:26.440 --> 00:02:26.450
doing that work on demand like a
 

00:02:26.450 --> 00:02:28.390
doing that work on demand like a
subclass for a particular activity or

00:02:28.390 --> 00:02:28.400
subclass for a particular activity or
 

00:02:28.400 --> 00:02:29.619
subclass for a particular activity or
doing that work in the background

00:02:29.619 --> 00:02:29.629
doing that work in the background
 

00:02:29.629 --> 00:02:31.360
doing that work in the background
allowing the results to be returned

00:02:31.360 --> 00:02:31.370
allowing the results to be returned
 

00:02:31.370 --> 00:02:34.149
allowing the results to be returned
asynchronously see performance is all

00:02:34.149 --> 00:02:34.159
asynchronously see performance is all
 

00:02:34.159 --> 00:02:36.220
asynchronously see performance is all
about user perception and the critical

00:02:36.220 --> 00:02:36.230
about user perception and the critical
 

00:02:36.230 --> 00:02:37.750
about user perception and the critical
path of launching your app is where

00:02:37.750 --> 00:02:37.760
path of launching your app is where
 

00:02:37.760 --> 00:02:39.910
path of launching your app is where
users can perceive slow down the most so

00:02:39.910 --> 00:02:39.920
users can perceive slow down the most so
 

00:02:39.920 --> 00:02:41.319
users can perceive slow down the most so
to figure out how to fix up the other

00:02:41.319 --> 00:02:41.329
to figure out how to fix up the other
 

00:02:41.329 --> 00:02:43.449
to figure out how to fix up the other
parts of your application make sure you

00:02:43.449 --> 00:02:43.459
parts of your application make sure you
 

00:02:43.459 --> 00:02:44.379
parts of your application make sure you
watch the rest of our Android

00:02:44.379 --> 00:02:44.389
watch the rest of our Android
 

00:02:44.389 --> 00:02:46.240
watch the rest of our Android
performance patterns videos on YouTube

00:02:46.240 --> 00:02:46.250
performance patterns videos on YouTube
 

00:02:46.250 --> 00:02:48.220
performance patterns videos on YouTube
and don't forget to join the Google+

00:02:48.220 --> 00:02:48.230
and don't forget to join the Google+
 

00:02:48.230 --> 00:02:49.990
and don't forget to join the Google+
community to chat with other brilliant

00:02:49.990 --> 00:02:50.000
community to chat with other brilliant
 

00:02:50.000 --> 00:02:53.319
community to chat with other brilliant
performance folks so keep calm profile

00:02:53.319 --> 00:02:53.329
performance folks so keep calm profile
 

00:02:53.329 --> 00:02:54.789
performance folks so keep calm profile
your code and always remember perf

00:02:54.789 --> 00:02:54.799
your code and always remember perf
 

00:02:54.799 --> 00:02:59.200
your code and always remember perf
matters

00:02:59.200 --> 00:02:59.210
 

00:02:59.210 --> 00:03:01.270
you

