WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.820
[MUSIC PLAYING]

00:00:04.810 --> 00:00:06.810
ANDREW BROGDON: Hey,
everybody, and welcome back

00:00:06.810 --> 00:00:08.340
to the Mobile Ads Garage.

00:00:08.340 --> 00:00:12.930
Today, with the help of my
partner, Gary the graphics guy,

00:00:12.930 --> 00:00:14.880
I get to announce
something really cool,

00:00:14.880 --> 00:00:17.760
a new test suite library from
AdMob that can help you get up

00:00:17.760 --> 00:00:19.740
and running with mediation
quicker and easier.

00:00:19.740 --> 00:00:21.990
Now for those of you who
aren't familiar with the term

00:00:21.990 --> 00:00:24.180
mediation, it's a way
for app publishers

00:00:24.180 --> 00:00:26.550
to load and show ads
from multiple networks

00:00:26.550 --> 00:00:28.020
in a single app.

00:00:28.020 --> 00:00:29.940
We've done a bunch of
other episodes on it.

00:00:29.940 --> 00:00:32.470
There's one covering just
the basics, plus a couple

00:00:32.470 --> 00:00:34.290
about our open source
mediation adapters

00:00:34.290 --> 00:00:36.555
for Android, iOS, and Unity.

00:00:36.555 --> 00:00:38.930
There are links to those videos
in the description below.

00:00:38.930 --> 00:00:40.439
So make sure you check them out.

00:00:40.439 --> 00:00:42.480
For those of you who are
familiar with mediation,

00:00:42.480 --> 00:00:43.920
you know that to
use it, you need

00:00:43.920 --> 00:00:45.940
to build a few
things into your app.

00:00:45.940 --> 00:00:48.030
In addition to the
Google Mobile Ads SDK,

00:00:48.030 --> 00:00:50.850
you also need the SDK for the
network you want to mediate,

00:00:50.850 --> 00:00:52.980
plus an adapter, and the
app settings required

00:00:52.980 --> 00:00:54.190
by that network.

00:00:54.190 --> 00:00:56.820
Verifying that you have all
the right stuff imported

00:00:56.820 --> 00:01:00.321
into your app can be tricky,
isn't that right, Sam?

00:01:00.321 --> 00:01:01.966
SAM: Where am I?

00:01:01.966 --> 00:01:04.590
ANDREW BROGDON: Fortunately, the
new AdMob mediation test suite

00:01:04.590 --> 00:01:06.030
can help you do it.

00:01:06.030 --> 00:01:08.110
SAM: You said we were
going for coffee.

00:01:08.110 --> 00:01:09.452
How did I even get in this room?

00:01:09.452 --> 00:01:11.160
ANDREW BROGDON: Now
I'm going to take off

00:01:11.160 --> 00:01:13.368
but I'd like to introduce
Sam who is here to tell you

00:01:13.368 --> 00:01:15.180
all about this new tool.

00:01:15.180 --> 00:01:15.870
SAM: What?

00:01:15.870 --> 00:01:16.704
Where are you going?

00:01:16.704 --> 00:01:18.620
ANDREW BROGDON: Well,
you've heard of Flutter,

00:01:18.620 --> 00:01:20.130
Google's new mobile
UI framework,

00:01:20.130 --> 00:01:22.140
where you build native
apps on iOS and Android

00:01:22.140 --> 00:01:24.220
from a single codebase
in record time?

00:01:24.220 --> 00:01:25.080
SAM: Yeah.

00:01:25.080 --> 00:01:26.130
ANDREW BROGDON: Oh, well
I've been helping out

00:01:26.130 --> 00:01:27.140
with the AdMob plug-in.

00:01:27.140 --> 00:01:29.400
They've got banners,
interstitials, rewarded ads,

00:01:29.400 --> 00:01:30.390
it's pretty cool.

00:01:30.390 --> 00:01:32.640
SAM: So you're leaving?

00:01:32.640 --> 00:01:35.700
ANDREW BROGDON: Don't
worry, you'll be fine.

00:01:35.700 --> 00:01:36.890
Oh, you're coming too, Gary.

00:01:36.890 --> 00:01:38.537
You can help with the widgets.

00:01:38.537 --> 00:01:39.870
SAM: Who was he just talking to?

00:01:43.729 --> 00:01:45.520
Well, I guess we should
talk about the test

00:01:45.520 --> 00:01:49.140
suite, or suites, really,
since there's one for iOS

00:01:49.140 --> 00:01:52.080
and one for Android,
plus a Unity package.

00:01:52.080 --> 00:01:55.230
Regardless of platform, though,
everything works the same way.

00:01:55.230 --> 00:01:57.900
The test suite is a library that
you can build into your app.

00:01:57.900 --> 00:02:00.990
And you trigger with
a call like this.

00:02:00.990 --> 00:02:03.460
In response, a new activity
or a view controller

00:02:03.460 --> 00:02:06.060
appears and automatically
fetches your mediation

00:02:06.060 --> 00:02:08.340
configurations from the server.

00:02:08.340 --> 00:02:11.490
Then you can look for your
AdMob ad units and mediation

00:02:11.490 --> 00:02:13.890
networks, pick one,
and see whether you

00:02:13.890 --> 00:02:17.700
have the right SDKs, adapters,
and settings in place.

00:02:17.700 --> 00:02:20.400
You can even make test ad
requests all from right there

00:02:20.400 --> 00:02:22.090
in your app.

00:02:22.090 --> 00:02:23.910
This way there's
no more guesswork.

00:02:23.910 --> 00:02:26.580
You can see for yourself whether
or not everything is set up.

00:02:26.580 --> 00:02:28.680
Plus, every format is covered.

00:02:28.680 --> 00:02:31.650
You've got banners,
interstitials, rewarded video,

00:02:31.650 --> 00:02:33.090
and native.

00:02:33.090 --> 00:02:34.950
So that's the broad strokes.

00:02:34.950 --> 00:02:37.740
Now let's head into Xcode and
get the test suite into one

00:02:37.740 --> 00:02:40.360
of our example apps for iOS.

00:02:40.360 --> 00:02:42.600
OK, here we are in our
sample app in Xcode.

00:02:42.600 --> 00:02:45.390
And I have the Google
Mobile Ads framework already

00:02:45.390 --> 00:02:47.980
included using CocoaPods.

00:02:47.980 --> 00:02:49.890
So the first thing
we are going to do

00:02:49.890 --> 00:02:51.990
is look at the
developer documentation

00:02:51.990 --> 00:02:54.300
for the mediation
test suite in iOS.

00:02:54.300 --> 00:02:57.190
And the link is in
the video description.

00:02:57.190 --> 00:02:59.260
So let's hop across now.

00:02:59.260 --> 00:03:02.320
Now, the first thing to note
here is the prerequisites.

00:03:02.320 --> 00:03:03.840
So please ensure
that you're using

00:03:03.840 --> 00:03:06.840
at least the minimum supported
version of Xcode, which

00:03:06.840 --> 00:03:09.000
is currently Xcode 8.0.

00:03:09.000 --> 00:03:11.430
And when using the
test suite, targeting

00:03:11.430 --> 00:03:14.460
at least the minimum iOS
version, which is currently

00:03:14.460 --> 00:03:15.990
8.0.

00:03:15.990 --> 00:03:19.650
You also need to have
an AdMob account,

00:03:19.650 --> 00:03:21.824
have at least one
app registered.

00:03:21.824 --> 00:03:23.490
And this is where
[INAUDIBLE] test suite

00:03:23.490 --> 00:03:26.490
will pull your ad units and
mediation configurations from.

00:03:26.490 --> 00:03:28.860
So next up, we will
integrate the test suite.

00:03:28.860 --> 00:03:31.470
So under installation,
you can find the line

00:03:31.470 --> 00:03:33.990
to copy across
into your podfile.

00:03:33.990 --> 00:03:38.050
So let's copy that line
now and go back to Xcode.

00:03:38.050 --> 00:03:41.100
Now, we can copy this
into our podfile.

00:03:41.100 --> 00:03:43.770
So make sure in your podfile
that you're targeting

00:03:43.770 --> 00:03:46.950
at least version 8.0 of iOS.

00:03:46.950 --> 00:03:48.480
And we can do a pod install.

00:03:48.480 --> 00:03:50.970
And you may need to do
a repo update or pod

00:03:50.970 --> 00:03:53.854
update depending on when
you last updated your repo.

00:03:53.854 --> 00:03:55.770
And you can see because
I'm using a mediation,

00:03:55.770 --> 00:03:58.710
I've got a range of mediation
ad sources in my pod file too.

00:03:58.710 --> 00:03:59.957
Now back to the code.

00:03:59.957 --> 00:04:01.290
I'm pulling up now app delegate.

00:04:01.290 --> 00:04:04.170
We have the AdMob
app ID to find here,

00:04:04.170 --> 00:04:07.140
which are we using to
configure Google Mobile ads.

00:04:07.140 --> 00:04:10.110
And we'll be using this
to launch the test suite.

00:04:10.110 --> 00:04:14.160
So now we can integrate
the test suite.

00:04:14.160 --> 00:04:18.300
So firstly, we need to import
the test suite module, like so.

00:04:18.300 --> 00:04:22.860
And next, we are going to write
a new method, present mediation

00:04:22.860 --> 00:04:28.021
test suite, which we will use
to present the test suite.

00:04:28.021 --> 00:04:29.520
Now in the body of
this method we'll

00:04:29.520 --> 00:04:32.930
add our call to
present, like so.

00:04:32.930 --> 00:04:34.280
And this takes three parameters.

00:04:34.280 --> 00:04:35.820
So the first is
the app ID, which

00:04:35.820 --> 00:04:38.910
is the AdMob app ID, which
we use for the ad units

00:04:38.910 --> 00:04:41.710
and mediation
configuration information,

00:04:41.710 --> 00:04:43.530
which we defined previously.

00:04:43.530 --> 00:04:45.660
So I'm going to
insert that here.

00:04:45.660 --> 00:04:48.540
Then we have a view
controller to present on.

00:04:48.540 --> 00:04:51.060
And in this case, it will
be our base view controller,

00:04:51.060 --> 00:04:52.500
which is ourself.

00:04:52.500 --> 00:04:55.650
And optionally, we can
also pass a delegate,

00:04:55.650 --> 00:04:58.752
which is a Google Mobile ads
mediation test suite delegate,

00:04:58.752 --> 00:05:00.960
which you can provide if
you want to be notified when

00:05:00.960 --> 00:05:02.190
the test suite is dismissed.

00:05:02.190 --> 00:05:04.320
So once this method is
written, we need to call it.

00:05:04.320 --> 00:05:07.620
Because the call presents
the test suite modally

00:05:07.620 --> 00:05:10.770
with animation, it's call
can't be made in viewdidload

00:05:10.770 --> 00:05:12.010
or viewwillappear.

00:05:12.010 --> 00:05:13.590
So you can call it
from viewdidappear

00:05:13.590 --> 00:05:17.070
or you can also invoke it
using a button or a gesture.

00:05:17.070 --> 00:05:20.430
For experience, I'll just simply
call it from viewdidappear.

00:05:20.430 --> 00:05:22.208
So let's just add that in now.

00:05:29.050 --> 00:05:32.410
OK, so now the
integration is done.

00:05:32.410 --> 00:05:35.190
We can check out the
test suite in action.

00:05:35.190 --> 00:05:37.420
OK, first up here we
see the disclaimer.

00:05:37.420 --> 00:05:39.400
So please be sure to read
through the text here

00:05:39.400 --> 00:05:42.752
and click through and read
the link disclaimer article.

00:05:42.752 --> 00:05:44.710
Basically, we want to
ensure that you correctly

00:05:44.710 --> 00:05:47.440
configure any third party
add sources to show test

00:05:47.440 --> 00:05:49.240
ads for the app you're testing.

00:05:49.240 --> 00:05:51.880
If you request live ads from any
given ad source while testing,

00:05:51.880 --> 00:05:53.530
you're likely to
be violating policy

00:05:53.530 --> 00:05:55.499
and your account
may be suspended.

00:05:55.499 --> 00:05:57.290
And the test suite
can't configure test ads

00:05:57.290 --> 00:05:58.942
for third party sources first.

00:05:58.942 --> 00:06:01.150
So it's up to you to make
sure this is done correctly

00:06:01.150 --> 00:06:03.100
before loading any
third party ads.

00:06:03.100 --> 00:06:08.630
So once you're happy, click
the check box and press agree.

00:06:08.630 --> 00:06:11.360
Now we can see the home
page for the test suite.

00:06:11.360 --> 00:06:14.520
This is broken up into
multiple pages and sections.

00:06:14.520 --> 00:06:18.020
So at the top, you can see
two tabs, failing ad units

00:06:18.020 --> 00:06:19.862
and working ad units.

00:06:19.862 --> 00:06:22.970
The failing ad units page shown
here shows a list of ad units

00:06:22.970 --> 00:06:26.000
that have ad sources that
are either missing components

00:06:26.000 --> 00:06:28.700
or not fully
configured and tested.

00:06:28.700 --> 00:06:32.750
The working ad units page,
which is initially empty,

00:06:32.750 --> 00:06:34.520
will be populated
with ad units that

00:06:34.520 --> 00:06:37.620
have add all ad sources
tested successfully.

00:06:37.620 --> 00:06:41.540
Now one thing you'll notice is
the icons under each ad unit.

00:06:41.540 --> 00:06:44.570
These icons represent a summary
status of all the ad sources

00:06:44.570 --> 00:06:46.700
that apply to that ad unit.

00:06:46.700 --> 00:06:50.320
So SDK is the status of the
SDKs required for all the ad

00:06:50.320 --> 00:06:50.990
sources.

00:06:50.990 --> 00:06:54.740
And adapter is the
status of the adapters

00:06:54.740 --> 00:06:55.940
required for the ad sources.

00:06:55.940 --> 00:06:58.710
If there's at least one adapter
missing, this will be red.

00:06:58.710 --> 00:07:01.130
And if all the adapters are
found, it will be green.

00:07:01.130 --> 00:07:03.120
Under the configuration
error section,

00:07:03.120 --> 00:07:05.120
there's also an ad load icon.

00:07:05.120 --> 00:07:07.760
This is initially yellow,
meaning it's not tested.

00:07:07.760 --> 00:07:10.860
If at least one ad
source has failed a test,

00:07:10.860 --> 00:07:11.990
then this will be red.

00:07:11.990 --> 00:07:13.880
And if all ad sources
have passed the tests,

00:07:13.880 --> 00:07:14.735
it will be green.

00:07:14.735 --> 00:07:17.540
Note also that if we have a
large number of ad units, then

00:07:17.540 --> 00:07:22.610
we can use the Search button to
search the ads by ad unit ID,

00:07:22.610 --> 00:07:25.620
also by ad source
name or format.

00:07:25.620 --> 00:07:27.250
So I'll just
demonstrate that now.

00:07:31.580 --> 00:07:34.030
So you can see it
says rewarded ads.

00:07:34.030 --> 00:07:38.450
Or if I search for an ad
source name, that will come up,

00:07:38.450 --> 00:07:40.640
and also an ad unit number.

00:07:46.640 --> 00:07:49.340
So now let's have a look at
the interstitial ad unit we

00:07:49.340 --> 00:07:51.320
have configured for this app.

00:07:51.320 --> 00:07:53.750
Here we have a list of all
the ad sources configured

00:07:53.750 --> 00:07:55.100
for this ad unit.

00:07:55.100 --> 00:07:57.720
So this applies across
all geographic regions.

00:07:57.720 --> 00:07:59.610
We don't separate by region.

00:07:59.610 --> 00:08:03.050
And you can see we have quite
a few ad sources configured

00:08:03.050 --> 00:08:05.030
for this ad's ad unit.

00:08:05.030 --> 00:08:08.330
The ad sources will be arranged
from the most issues at the top

00:08:08.330 --> 00:08:10.430
to the least issues
at the bottom.

00:08:10.430 --> 00:08:13.610
So we suggest starting from the
top and working your way down

00:08:13.610 --> 00:08:14.697
to fix issues.

00:08:14.697 --> 00:08:16.280
You'll note for each
ad source that we

00:08:16.280 --> 00:08:20.120
have the same SDK
adapter and ad load icons

00:08:20.120 --> 00:08:22.680
when SDK and adapter are found.

00:08:22.680 --> 00:08:24.320
And at this level,
these indicators

00:08:24.320 --> 00:08:27.440
apply just to each
individual ad source.

00:08:27.440 --> 00:08:29.530
So we can see all the
sources at the top

00:08:29.530 --> 00:08:31.540
are missing SDK and adapters.

00:08:31.540 --> 00:08:34.460
And further down, we see the
SDK and adapters are found,

00:08:34.460 --> 00:08:36.080
that the ad source
has not been tested

00:08:36.080 --> 00:08:38.809
and the ad load icon is yellow.

00:08:38.809 --> 00:08:41.150
Also on this page,
there is the ability

00:08:41.150 --> 00:08:44.870
to search ad sources by
name using the Search icon

00:08:44.870 --> 00:08:45.770
at the top here.

00:08:51.360 --> 00:08:54.240
Another convenient feature is
we can check multiple ad sources

00:08:54.240 --> 00:08:58.260
here and test loading
of all check ad sources

00:08:58.260 --> 00:08:59.544
from this screen.

00:08:59.544 --> 00:09:00.960
We can only check
ad sources where

00:09:00.960 --> 00:09:02.890
the SDK and adapter are found.

00:09:02.890 --> 00:09:04.740
So I'll load a couple of tests--

00:09:04.740 --> 00:09:07.865
load a couple of ads for a
couple of the ad sources here.

00:09:07.865 --> 00:09:09.240
And you can see
that those worked

00:09:09.240 --> 00:09:11.310
and they got moved to
the bottom of the screen.

00:09:11.310 --> 00:09:15.000
Let's look at the detail
screen for a given ad source.

00:09:15.000 --> 00:09:17.340
Now on the detail screen,
we can see more information

00:09:17.340 --> 00:09:18.660
about this ad source.

00:09:18.660 --> 00:09:21.060
We see checks for
the SDK and adapter.

00:09:21.060 --> 00:09:23.340
And we also see the parameters
that have or have not

00:09:23.340 --> 00:09:24.477
been configured.

00:09:24.477 --> 00:09:26.310
So the test suite knows
about the parameters

00:09:26.310 --> 00:09:29.232
required for all open
source ad source adapters.

00:09:29.232 --> 00:09:31.440
And we will show whether or
not these parameters have

00:09:31.440 --> 00:09:34.240
been supplied in the [INAUDIBLE]
console for the configuration

00:09:34.240 --> 00:09:34.740
question.

00:09:34.740 --> 00:09:37.140
If the SDK and
adapter are found,

00:09:37.140 --> 00:09:38.970
you will be able to load an ad.

00:09:38.970 --> 00:09:41.520
However, if the parameters
are not correctly configured,

00:09:41.520 --> 00:09:43.480
it's unlikely the
ad load will work.

00:09:43.480 --> 00:09:44.640
So check this first.

00:09:44.640 --> 00:09:47.100
So let's try loading an ad.

00:09:47.100 --> 00:09:48.180
Hit the ad load.

00:09:48.180 --> 00:09:49.800
You can see ad
loading in progress.

00:09:49.800 --> 00:09:51.700
And we can see it succeeded.

00:09:51.700 --> 00:09:54.420
So if interstitials as well as
rewarded ads, from this detail

00:09:54.420 --> 00:09:57.240
screen we can also
display the ads received.

00:09:57.240 --> 00:09:59.520
Banner ads will be
displayed in line.

00:09:59.520 --> 00:10:02.520
And native ads, by their custom
nature, will not be shown.

00:10:02.520 --> 00:10:05.460
Again, we emphasize that you
must have test ads configured

00:10:05.460 --> 00:10:08.700
for the given ad source before
loading and displaying ads.

00:10:08.700 --> 00:10:09.930
So let's show the ad.

00:10:13.640 --> 00:10:18.310
OK, we can see we successfully
loaded and displayed a test ad.

00:10:18.310 --> 00:10:20.110
Back on the list
of ad sources, we

00:10:20.110 --> 00:10:23.440
can also see that we have
loaded successfully a number

00:10:23.440 --> 00:10:24.370
of ad sources.

00:10:24.370 --> 00:10:27.147
Let's try an ad source that's
not configured correctly.

00:10:30.420 --> 00:10:32.644
So I'm going to
hit load ad here.

00:10:32.644 --> 00:10:35.060
And notice when it fails we
don't get a lot of information

00:10:35.060 --> 00:10:36.140
on this screen.

00:10:36.140 --> 00:10:38.960
Typically, it will
say no fill and just

00:10:38.960 --> 00:10:41.130
tell us to check
the configuration.

00:10:41.130 --> 00:10:44.000
So to debug further, you'll
need to check your system logs.

00:10:44.000 --> 00:10:46.370
So for a failing ad load,
you should get some logs

00:10:46.370 --> 00:10:48.590
from either the
adapter or the SDK

00:10:48.590 --> 00:10:50.450
for the ad source that
explains the reason

00:10:50.450 --> 00:10:52.157
for the failure in more detail.

00:10:52.157 --> 00:10:54.490
So you can see we've got some
information from my target

00:10:54.490 --> 00:10:58.670
adapter here saying that it
didn't recognize the slot ID.

00:10:58.670 --> 00:11:00.710
For some ad source
SDKs, you may need

00:11:00.710 --> 00:11:04.320
to enable debug logging to
see debug log information.

00:11:04.320 --> 00:11:06.980
So this is typically done as
a call to the top level SDK

00:11:06.980 --> 00:11:09.840
class, such as SDK
class.loggingenabled

00:11:09.840 --> 00:11:10.610
equals true.

00:11:10.610 --> 00:11:12.816
So make sure to check
that for your ad source

00:11:12.816 --> 00:11:14.200
as you're debugging.

00:11:14.200 --> 00:11:17.520
OK, so that's basically a
wrap of the basics of the test

00:11:17.520 --> 00:11:18.020
suite.

00:11:18.020 --> 00:11:19.820
Note that there are
some additional APIs

00:11:19.820 --> 00:11:21.890
available on the test
suite, such as the ability

00:11:21.890 --> 00:11:23.990
to configure an ad request
for test suite to use,

00:11:23.990 --> 00:11:27.380
for example, when an ad source
requires they provide extras

00:11:27.380 --> 00:11:28.520
in order to load an ad.

00:11:28.520 --> 00:11:31.142
And these extra APIs are
covered in the developer docs.

00:11:31.142 --> 00:11:33.350
Again, the link for that is
in the video description.

00:11:33.350 --> 00:11:35.510
Finally, to close
the test suite,

00:11:35.510 --> 00:11:38.210
we can just hit the
cross in the top left.

00:11:38.210 --> 00:11:40.172
Note also that the ads--

00:11:40.172 --> 00:11:41.630
the test results
for the ad sources

00:11:41.630 --> 00:11:43.460
are not persisted
across sessions.

00:11:43.460 --> 00:11:45.620
So any working ad
units will be reset

00:11:45.620 --> 00:11:48.830
when you present the
test suite the next time.

00:11:48.830 --> 00:11:52.220
All right, so that's the basics
of using a test suite in iOS.

00:11:52.220 --> 00:11:54.590
You might have noticed that
not every mediation network

00:11:54.590 --> 00:11:57.470
supported by AdMob were
listed in the test suite.

00:11:57.470 --> 00:12:00.170
Right now the suite works
with a dozen or so networks

00:12:00.170 --> 00:12:02.390
who've joined our open
source initiative.

00:12:02.390 --> 00:12:05.030
It's possible that the team
might expand on that later,

00:12:05.030 --> 00:12:07.400
but for the initial
release, that's the list.

00:12:07.400 --> 00:12:09.090
All right, time for Android.

00:12:09.090 --> 00:12:12.380
Since the test suite works the
same on both iOS and Android,

00:12:12.380 --> 00:12:14.270
I'm going to save some
time here and just

00:12:14.270 --> 00:12:17.540
focus on importing and launching
the test suite activity.

00:12:17.540 --> 00:12:20.390
Let's get into Android Studio.

00:12:20.390 --> 00:12:22.900
Here we are in our sample
app in Android Studio.

00:12:22.900 --> 00:12:25.310
And I have the Google Mobile
ads dependency already

00:12:25.310 --> 00:12:27.470
included using Gradle.

00:12:27.470 --> 00:12:28.970
So the first thing
we're going to do

00:12:28.970 --> 00:12:30.950
is look at the
developer documentation

00:12:30.950 --> 00:12:33.170
for the mediation
test suite in Android.

00:12:33.170 --> 00:12:36.300
The link is in the
video description.

00:12:36.300 --> 00:12:39.030
So the first thing to note
here is the prerequisites.

00:12:39.030 --> 00:12:41.660
So please ensure you are
using the minimum supported

00:12:41.660 --> 00:12:46.370
version of Android, at least
which is currently API level

00:12:46.370 --> 00:12:47.262
14.

00:12:47.262 --> 00:12:49.220
And also including at
least the minimum version

00:12:49.220 --> 00:12:53.570
of Google Play services, which
is currently version 9.8.0.

00:12:53.570 --> 00:12:56.730
You'll also need AdMob
account with at least one app

00:12:56.730 --> 00:12:57.259
registered.

00:12:57.259 --> 00:12:59.300
It's where the test suite
will pull your ad units

00:12:59.300 --> 00:13:01.010
and mediation
configurations from.

00:13:01.010 --> 00:13:03.020
So next up, we'll
integrate the test suite.

00:13:03.020 --> 00:13:05.720
So under installation
here, you can

00:13:05.720 --> 00:13:08.990
find the line to copy across
into your build up Gradle file.

00:13:08.990 --> 00:13:12.230
So let's copy that and go
back to Android Studio.

00:13:12.230 --> 00:13:15.110
Now, in our built
up Gradle we'll

00:13:15.110 --> 00:13:19.010
pop that line in under
the ads dependency.

00:13:19.010 --> 00:13:21.530
Make sure in here as well
that you have the minimum SDK

00:13:21.530 --> 00:13:22.390
version.

00:13:22.390 --> 00:13:24.560
I'm on 16 here.

00:13:24.560 --> 00:13:26.760
And you can also see,
because I'm using mediation,

00:13:26.760 --> 00:13:29.910
I've got a range of mediation
ad sources in here as well.

00:13:29.910 --> 00:13:32.240
So now we can integrate
the test suite.

00:13:32.240 --> 00:13:35.570
In Android, we can launch the
test suite from On Create.

00:13:35.570 --> 00:13:38.000
So I'll just add the call here.

00:13:38.000 --> 00:13:42.410
So it's mediation test
suite at dot launch.

00:13:42.410 --> 00:13:44.490
Now this takes two parameters.

00:13:44.490 --> 00:13:47.870
One is a context, which is
the activity context used

00:13:47.870 --> 00:13:49.220
to launch the test suite.

00:13:49.220 --> 00:13:51.400
So I'll just use
my current context.

00:13:51.400 --> 00:13:54.080
And the other one
is the AdMob app ID

00:13:54.080 --> 00:13:56.690
to use for the ad units
and mediation configuration

00:13:56.690 --> 00:13:57.730
information.

00:13:57.730 --> 00:14:01.070
I've already supplied
that here when

00:14:01.070 --> 00:14:03.740
I called mobileads.initialize.

00:14:03.740 --> 00:14:05.040
So I'll just reuse that.

00:14:05.040 --> 00:14:07.070
Now, there are other
APIs that enable

00:14:07.070 --> 00:14:10.040
us to set a listener for when
the test suite is dismissed,

00:14:10.040 --> 00:14:13.250
and also for us to set an
ad request to use to supply

00:14:13.250 --> 00:14:14.960
[INAUDIBLE] bundles
for ad sources that

00:14:14.960 --> 00:14:17.180
need extra configuration
information.

00:14:17.180 --> 00:14:21.380
And these IPs are documented
in the developer documentation

00:14:21.380 --> 00:14:22.770
linked in the video description.

00:14:22.770 --> 00:14:25.110
So now the integration is done.

00:14:25.110 --> 00:14:27.350
Let's check out the
test suite in action.

00:14:27.350 --> 00:14:30.140
As you can see, we've
got the disclaimer here.

00:14:30.140 --> 00:14:32.720
And if I agree to
that, everything

00:14:32.720 --> 00:14:35.960
looks very similar to
iOS, very much the same.

00:14:35.960 --> 00:14:38.660
So I won't go over the usage.

00:14:38.660 --> 00:14:40.430
One thing that does
differ in Android

00:14:40.430 --> 00:14:42.970
is you'll note we have
an icon for manifest.

00:14:42.970 --> 00:14:45.230
This represents a check of
whether you have correctly

00:14:45.230 --> 00:14:48.230
added all required manifest
entries where applicable

00:14:48.230 --> 00:14:49.460
for a given ad source.

00:14:49.460 --> 00:14:52.160
So this includes
permissions and activities.

00:14:52.160 --> 00:14:55.040
Apart from that,
everything is the same.

00:14:55.040 --> 00:14:56.750
All right, that's Android.

00:14:56.750 --> 00:14:58.470
There's one last
thing to show you,

00:14:58.470 --> 00:15:00.320
which is how people
building apps with Unity

00:15:00.320 --> 00:15:02.495
can take advantage of
the test suite too.

00:15:02.495 --> 00:15:04.190
To help simplify
things, the team

00:15:04.190 --> 00:15:06.920
put together a Unity package
that imports the native test

00:15:06.920 --> 00:15:08.510
suite libraries for you.

00:15:08.510 --> 00:15:10.729
It also provides a
c-sharp interface

00:15:10.729 --> 00:15:12.770
so you can make the call
to launch the test suite

00:15:12.770 --> 00:15:14.660
right from your unity code.

00:15:14.660 --> 00:15:18.880
Let's hop into the Unity
IDE and see how it works.

00:15:18.880 --> 00:15:20.780
OK, here we are
in the Unity IDE.

00:15:20.780 --> 00:15:22.550
And I have a small
sample project

00:15:22.550 --> 00:15:26.072
with the Google Mobile ads
Unity package already installed.

00:15:26.072 --> 00:15:27.530
So the first thing
we'll do is look

00:15:27.530 --> 00:15:29.950
at the developer documentation
for the mediation test

00:15:29.950 --> 00:15:30.970
suite for Unity.

00:15:30.970 --> 00:15:32.830
So let's head over to that.

00:15:32.830 --> 00:15:34.880
And note, again, we
have some prerequisites.

00:15:34.880 --> 00:15:37.060
So we need to have the
Google Mobile Ads Unity

00:15:37.060 --> 00:15:38.856
package in our Unity Project.

00:15:38.856 --> 00:15:40.480
And we need to have
our player settings

00:15:40.480 --> 00:15:43.480
targeting the minimum
iOS and Android versions.

00:15:43.480 --> 00:15:45.400
And we also need to
have an AdMob account

00:15:45.400 --> 00:15:48.070
with an app registered
for each platform, which

00:15:48.070 --> 00:15:49.780
is what we'll be
using to pull down

00:15:49.780 --> 00:15:52.210
the ad units in our
mediation configurations.

00:15:52.210 --> 00:15:55.900
So next we'll download the
mediation test suite package

00:15:55.900 --> 00:15:57.050
here.

00:15:57.050 --> 00:15:59.770
So let's just click
and download that.

00:15:59.770 --> 00:16:04.060
And with our project open,
we can just click on that.

00:16:04.060 --> 00:16:10.940
And in Unity we will see
the import window pop up.

00:16:10.940 --> 00:16:15.610
So we want to import
all of the package.

00:16:15.610 --> 00:16:18.010
And this will then
import all the assets

00:16:18.010 --> 00:16:19.420
and also run the
[INAUDIBLE] over

00:16:19.420 --> 00:16:23.280
to get all the dependencies.

00:16:23.280 --> 00:16:26.670
So let's just let
that run for a second.

00:16:26.670 --> 00:16:28.620
And the next thing we
can do is head over

00:16:28.620 --> 00:16:32.220
to our script in Visual Studio.

00:16:32.220 --> 00:16:33.930
So to save time,
I have prefilled

00:16:33.930 --> 00:16:35.550
a couple of things in here.

00:16:35.550 --> 00:16:37.170
So you can see I've
written a method

00:16:37.170 --> 00:16:40.380
to show the mediation test
suite, but it's not completed.

00:16:40.380 --> 00:16:44.520
I've also got a handle test
suite dismissed event handler.

00:16:44.520 --> 00:16:46.410
And I've also
configured a button

00:16:46.410 --> 00:16:51.060
in my GUI to show the
mediation test suite.

00:16:51.060 --> 00:16:54.360
However you choose to
do this is up to you.

00:16:54.360 --> 00:16:56.580
To actually interact
with the test suite,

00:16:56.580 --> 00:17:01.290
we'll need to use the Google
Mobile Ads mediation test suite

00:17:01.290 --> 00:17:03.800
API.

00:17:03.800 --> 00:17:06.020
And two things we'll do.

00:17:06.020 --> 00:17:09.739
So firstly, you can see
we have our app IDs, which

00:17:09.739 --> 00:17:11.280
are the AdMob ap
IDs that we're going

00:17:11.280 --> 00:17:13.099
to use to show the test suite.

00:17:13.099 --> 00:17:15.829
So the API that we're going
to call to show the test suite

00:17:15.829 --> 00:17:19.099
is just mediationtestsuite.show.

00:17:19.099 --> 00:17:22.680
And we'll parse in the app ID
that we've already configured.

00:17:22.680 --> 00:17:24.099
So it needs to be
a different app

00:17:24.099 --> 00:17:26.900
ID for Android and for iPhone.

00:17:26.900 --> 00:17:29.300
Now this event
handler here we can

00:17:29.300 --> 00:17:34.520
call using mediationtestsui
te.onmediationtesuitedismissed.

00:17:34.520 --> 00:17:46.000
And we'll add our event handler
to that property like so.

00:17:46.000 --> 00:17:48.890
And that will notify us
when the mediation test

00:17:48.890 --> 00:17:51.490
suite is dismissed, in case
we want to pause or resume

00:17:51.490 --> 00:17:52.230
our game.

00:17:52.230 --> 00:17:54.330
And that's all we actually
need to do to configure

00:17:54.330 --> 00:17:55.610
the basics of the test suite.

00:17:55.610 --> 00:17:57.680
There is an
additional API for us

00:17:57.680 --> 00:17:59.990
to configure an ad
request if we need

00:17:59.990 --> 00:18:03.740
to parse in some extras
for one of the ad sources.

00:18:03.740 --> 00:18:06.980
And the details for that are
in the developer documentation.

00:18:06.980 --> 00:18:08.630
For actually using
the test suite,

00:18:08.630 --> 00:18:11.750
refer to the iOS and Android
portions of this video

00:18:11.750 --> 00:18:14.000
with the details of
how to use the test

00:18:14.000 --> 00:18:16.020
suite on those platforms.

00:18:16.020 --> 00:18:17.700
All right, so that's
the test suite

00:18:17.700 --> 00:18:20.330
in iOS, Android, and Unity.

00:18:20.330 --> 00:18:22.310
If you're a publisher
using mediation,

00:18:22.310 --> 00:18:24.410
download it and give it a try.

00:18:24.410 --> 00:18:26.960
In the meantime, I've got
some resources for you

00:18:26.960 --> 00:18:28.670
in the description below.

00:18:28.670 --> 00:18:31.610
There are links to the
Android, iOS, and Unity guides

00:18:31.610 --> 00:18:34.880
for the test suite, plus
links to our mediation guides

00:18:34.880 --> 00:18:37.020
for those platforms.

00:18:37.020 --> 00:18:39.620
And if you have questions
or run into a problem while

00:18:39.620 --> 00:18:42.380
using the test suite, you're
welcome to stop by our support

00:18:42.380 --> 00:18:43.290
forum.

00:18:43.290 --> 00:18:45.020
And as always, if
you have a question

00:18:45.020 --> 00:18:47.970
about this video or a
suggestion for a topic to cover,

00:18:47.970 --> 00:18:50.960
leave a comment below and
we'll see you next time.

00:18:50.960 --> 00:18:54.310
[MUSIC PLAYING]

