WEBVTT
Kind: captions
Language: en

00:00:00.310 --> 00:00:02.503
All right. Let's get serious now.

00:00:02.803 --> 00:00:05.746
We need to move to using a real task
to fetch the weather.

00:00:06.136 --> 00:00:09.134
After all, weather is serious business.

00:00:09.514 --> 00:00:11.402
Let's create a separate FetchWeatherTask

00:00:11.402 --> 00:00:13.520
to populate our content provider database.

00:00:14.270 --> 00:00:16.420
And we'll start by moving our existing task

00:00:16.420 --> 00:00:18.103
over to this new one.

00:00:18.103 --> 00:00:19.786
Wow. It's good to get that big task
out of ForecastFragment.

00:00:21.030 --> 00:00:24.950
And we're going to change the parameters
to string void, void.

00:00:25.740 --> 00:00:29.210
Oh, we've got a lot of compile errors to fix.
That's okay.

00:00:29.770 --> 00:00:32.409
For now, we're going
to delete everything except for

00:00:32.409 --> 00:00:34.930
the do in background part
of the AsyncTask.

00:00:34.930 --> 00:00:38.753
Let's give it a constructor
and pass in a context.

00:00:38.753 --> 00:00:42.576
(keyboard clicking)

00:00:47.396 --> 00:00:49.989
In doing background,
let's save off the locationQuery

00:00:49.989 --> 00:00:52.348
as a string to make the code
easier to understand.

00:00:52.568 --> 00:00:56.550
And for fun, let's fetch the maximum
14 days of forecast data.

00:00:56.822 --> 00:00:59.805
Since we temporarily deleted
getWeatherDataFromJson,

00:00:59.805 --> 00:01:01.760
we can remove from the try catch
at the bottom.

00:01:02.670 --> 00:01:06.000
We're going to look for lots of additional data
from the openweather API.

00:01:08.060 --> 00:01:10.590
To make this easy,
here are the strings we'll use.

00:01:11.500 --> 00:01:14.180
We'll also get the city name,
the latitude and longitude

00:01:14.180 --> 00:01:15.753
returned by OpenWeather.

00:01:15.973 --> 00:01:19.440
Now, we do have to wrap this in a try
in order to make sure

00:01:19.440 --> 00:01:21.220
that we handle the exception.

00:01:21.450 --> 00:01:24.320
All right. Now we've handled the exceptions,
so everything compiles.

00:01:24.550 --> 00:01:27.110
And, hey, look, we've
got the city name and coordinates.

00:01:27.620 --> 00:01:30.440
Hmm, we've now gotten the location

00:01:30.630 --> 00:01:33.010
that we can use to insert things
into the database.

00:01:33.260 --> 00:01:37.190
And we haven't done this in a while,
so it's time for a programming exercise

00:01:37.610 --> 00:01:40.120
but before we can do that let's actually

00:01:40.140 --> 00:01:41.940
make sure that your app
can really compile.

00:01:44.460 --> 00:01:48.180
Let's go back to ForecastFragment,
and take a look at how

00:01:48.180 --> 00:01:50.380
FetchWeatherTask is working.

00:01:50.950 --> 00:01:53.040
One is that FetchWeatherTask
is going to require

00:01:53.040 --> 00:01:55.760
that we get an activity
or some other context,

00:01:55.760 --> 00:01:57.460
and pass that in there.

00:01:57.620 --> 00:02:00.960
Another thing we can do
is remove these pesky shared preferences.

00:02:01.780 --> 00:02:03.290
And there we have it.

00:02:03.290 --> 00:02:06.070
A utility function that gets us
our preferred location.

00:02:06.752 --> 00:02:09.619
All right, so now, we're ready
to run the applications

00:02:09.619 --> 00:02:12.650
we can actually do the next exercise.

00:02:12.650 --> 00:02:17.080
Once again, we're going to be calling
into our very new fetch weather task,

00:02:17.080 --> 00:02:20.560
but it's not going to do anything
other than try and read some JSON.

00:02:21.146 --> 00:02:23.750
So we've got to make it
do something beyond that.

