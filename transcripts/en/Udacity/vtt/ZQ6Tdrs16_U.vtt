WEBVTT
Kind: captions
Language: en

00:00:00.180 --> 00:00:04.970
In the next Cycle, in Cycle 10, this instruction will be able to dispatch.

00:00:04.970 --> 00:00:09.280
This is our ADD. And it's going to execute in Cycles 10 and 11.

00:00:09.280 --> 00:00:13.430
So in Cycle 12 is going to try to write it's result. So in Cycle 11 nothing

00:00:13.430 --> 00:00:17.860
really happens, other than the execution of these two instructions. But in Cycle

00:00:17.860 --> 00:00:21.440
12 what's going to happen is this instruction is going to broadcast it's result.

00:00:22.490 --> 00:00:27.160
So, we will mark that it grows as the result. We will find the register that

00:00:27.160 --> 00:00:33.090
matches AD2 which is F6. And override the value of F6 with a new value.

00:00:33.090 --> 00:00:37.995
Which is the minus 9.6 plus minus 2.5. So

00:00:37.995 --> 00:00:43.530
it's going to be minus 12.1. So this is the value of AD2.

00:00:44.950 --> 00:00:50.710
And now we're going to un-rename, this to, make future accesses read the new F6.

00:00:51.780 --> 00:00:55.200
And no instructions was waiting for, know that this was the last instruction in

00:00:55.200 --> 00:00:57.230
the statement so nobody was really waiting for this result.

00:00:57.230 --> 00:01:02.440
But, this instruction is done now. So we can free this reservation station.

00:01:02.440 --> 00:01:04.810
Now nothing will really happen until cycle 17.

00:01:04.810 --> 00:01:09.340
In cycle 17, this multiply is finally going to broadcast its result.

00:01:09.340 --> 00:01:15.390
We're multiplying 2.5 times 2.5, and then, you know, minus. And

00:01:15.390 --> 00:01:20.760
that value goes into F0. So F0 is going to become whatever that result is,

00:01:20.760 --> 00:01:22.980
we're not even going to even try to compute that.

00:01:22.980 --> 00:01:28.070
It's going to be un renamed here. It's going to put that value over here. And

00:01:28.070 --> 00:01:31.127
now the, divide is finally ready to go. And

00:01:31.127 --> 00:01:36.660
we're going to free this reservation station. So finally, in cycle 18.

00:01:36.660 --> 00:01:42.070
To divide is ready to go, it's been dispatched, at 40 cycles so

00:01:42.070 --> 00:01:46.620
its going to be in cycle 58 that we finally produced that result. So

00:01:46.620 --> 00:01:52.750
nothing really happens until cycle 58 at which point, this value is broadcast,

00:01:52.750 --> 00:01:57.790
register F10 gets to grab that value, we unrenamed this,

00:01:57.790 --> 00:02:01.720
we free this reservation station. We'll look at who is waiting for it,

00:02:01.720 --> 00:02:04.790
but nobody is. And that concludes our example.

