WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.045
[MUSIC PLAYING]

00:00:01.045 --> 00:00:02.920
TIMOTHY JORDAN: Let's
start with a quick view

00:00:02.920 --> 00:00:05.544
of what's happened recently with
the Google Developer platform,

00:00:05.544 --> 00:00:07.560
also known as the TLDR.

00:00:07.560 --> 00:00:09.300
User identity has
gotten a lot easier

00:00:09.300 --> 00:00:11.380
with the latest release
of Google Play Services.

00:00:11.380 --> 00:00:14.270
We've revamped sign-in to
make implementations simpler

00:00:14.270 --> 00:00:16.780
and provide users a more
streamlined experience.

00:00:16.780 --> 00:00:19.770
Other updates, TouchSmart
Lock APIs, the Fused Location

00:00:19.770 --> 00:00:21.710
Provider, and App Invites.

00:00:21.710 --> 00:00:24.000
Magnus is on the show
today to tell us more.

00:00:24.000 --> 00:00:24.924
MAGNUS HYTTSTEN:
[NON ENGLISH SPEECH]

00:00:24.924 --> 00:00:26.423
TIMOTHY JORDAN:
[NON ENGLISH SPEECH]

00:00:26.423 --> 00:00:29.560
More than 19,000 organizations
are now testing or using

00:00:29.560 --> 00:00:31.850
Android for Work, which
makes it easier and safer

00:00:31.850 --> 00:00:35.910
for employees to use their
own Android devices for work.

00:00:35.910 --> 00:00:37.970
Important bug and
crash fixes are

00:00:37.970 --> 00:00:40.830
in place with the latest release
of the Android Support Library,

00:00:40.830 --> 00:00:42.650
available now.

00:00:42.650 --> 00:00:45.450
Find success with your app or
game business with Google Play.

00:00:45.450 --> 00:00:47.150
This is the goal
behind a new playlist

00:00:47.150 --> 00:00:51.530
of videos from our annual
developer event, Playtime 2015.

00:00:51.530 --> 00:00:53.640
The Android Dev Summit is
just around the corner.

00:00:53.640 --> 00:00:55.306
If you can't make it
in person, remember

00:00:55.306 --> 00:00:58.870
to tune into the live
stream November 23 and 24.

00:00:58.870 --> 00:01:01.090
Also, the Chrome Dev
Summit has wrapped.

00:01:01.090 --> 00:01:03.620
And if you weren't able to
make it in person, that's OK.

00:01:03.620 --> 00:01:07.250
All the sessions are
available online.

00:01:07.250 --> 00:01:09.910
Splash screens for web apps
launched from the home screen

00:01:09.910 --> 00:01:13.030
on Android, and script
execution deferring

00:01:13.030 --> 00:01:16.850
are two big things launching
with Chrome 47 on December 1.

00:01:16.850 --> 00:01:18.480
Pete is on the show
today to tell us

00:01:18.480 --> 00:01:21.060
what we need to pay the most
attention to for that launch.

00:01:21.060 --> 00:01:21.796
PETE LEPAGE:
[NON ENGLISH SPEECH]

00:01:21.796 --> 00:01:23.295
TIMOTHY JORDAN:
[NON ENGLISH SPEECH]

00:01:23.295 --> 00:01:27.036
MAGNUS HYTTSTEN:
[NON ENGLISH SPEECH]

00:01:27.036 --> 00:01:28.910
TIMOTHY JORDAN: Compound
bindings, as well as

00:01:28.910 --> 00:01:31.460
affective children and
distributed node observers,

00:01:31.460 --> 00:01:34.210
are the two significant
features included in the latest

00:01:34.210 --> 00:01:36.060
release of Polymer.

00:01:36.060 --> 00:01:38.090
The Google Maps API
meetups and hackathons

00:01:38.090 --> 00:01:41.280
will continue with the Europe
version of Code the Road.

00:01:41.280 --> 00:01:42.680
You can sign up
today to find out

00:01:42.680 --> 00:01:46.120
what's possible with
the Google Maps API.

00:01:46.120 --> 00:01:47.930
Follow the link to
this and everything

00:01:47.930 --> 00:01:51.220
mentioned in the TLDR in
the description below.

00:01:51.220 --> 00:01:54.040
I'm Timothy Jordan, and
this is the developer show.

00:02:02.929 --> 00:02:05.220
You've probably been wondering
what runtime permissions

00:02:05.220 --> 00:02:07.100
on Android M mean for you.

00:02:07.100 --> 00:02:10.289
Well, here's Reto to explain
it all in a segment we call,

00:02:10.289 --> 00:02:12.405
who's doing what now?

00:02:12.405 --> 00:02:14.030
MALE SPEAKER: I heard
Android 6 is out.

00:02:14.030 --> 00:02:15.980
It's mostly what, just
kind of bunch of bug fixes?

00:02:15.980 --> 00:02:18.360
MALE SPEAKER: Wait, are you
calling doze mode and runtime

00:02:18.360 --> 00:02:19.910
permissions a
couple of bug fixes?

00:02:19.910 --> 00:02:20.618
MALE SPEAKER: Uh.

00:02:20.618 --> 00:02:22.350
I don't know, yes?

00:02:22.350 --> 00:02:24.639
MALE SPEAKER: It's going
to be freakin huge.

00:02:24.639 --> 00:02:26.430
MALE SPEAKER: Wait,
wait, wait, so hold on.

00:02:26.430 --> 00:02:27.920
Who's doing what now?

00:02:27.920 --> 00:02:29.680
RETO MEIER: Don't let
that happen to you.

00:02:29.680 --> 00:02:32.670
I'm Reto Meier, and this
is Who's Doing What Now?

00:02:32.670 --> 00:02:34.534
[MUSIC PLAYING]

00:02:34.534 --> 00:02:35.909
MALE SPEAKER: What
is that about?

00:02:39.590 --> 00:02:41.840
RETO MEIER: Until now, apps
have had to ask permission

00:02:41.840 --> 00:02:43.690
for every device
feature that they

00:02:43.690 --> 00:02:46.027
may need to use before
you've even installed it.

00:02:46.027 --> 00:02:46.985
MALE SPEAKER: Hey Reto.

00:02:46.985 --> 00:02:49.820
Before we can interact, I'd just
like you to sign a few things

00:02:49.820 --> 00:02:51.480
that I may want to do.

00:02:51.480 --> 00:02:53.350
So I'd like to
take your picture.

00:02:53.350 --> 00:02:56.730
I'd also like to know your exact
location, your recent calls,

00:02:56.730 --> 00:02:58.360
and of course, all
of your friends,

00:02:58.360 --> 00:02:59.840
and their contact information.

00:02:59.840 --> 00:03:02.230
So if you could just--

00:03:02.230 --> 00:03:03.890
RETO MEIER: Hard pass.

00:03:03.890 --> 00:03:05.720
This sort of approach
made a lot of sense

00:03:05.720 --> 00:03:08.986
back when each app served
one specific purpose.

00:03:08.986 --> 00:03:12.130
A camera app that wants
to take your photo.

00:03:12.130 --> 00:03:15.230
A concierge app that wants
to know where you are,

00:03:15.230 --> 00:03:17.230
or a replacement
dialer that needs

00:03:17.230 --> 00:03:19.740
to know your contacts and
your most recent calls.

00:03:19.740 --> 00:03:22.600
These days, apps have found
all sorts of innovative ways

00:03:22.600 --> 00:03:25.520
to take advantage of many of the
sensitive features and sensors

00:03:25.520 --> 00:03:26.670
on a device.

00:03:26.670 --> 00:03:29.600
And users want to decide which
features to take advantage of,

00:03:29.600 --> 00:03:32.300
and what information
they're willing to share.

00:03:32.300 --> 00:03:35.620
When you target Android
6, API level 23,

00:03:35.620 --> 00:03:38.440
you need to check every time
you perform an operation that

00:03:38.440 --> 00:03:41.450
requires user permission, as
users can revoke permission

00:03:41.450 --> 00:03:42.596
at any time.

00:03:42.596 --> 00:03:43.970
If you don't have
permission yet,

00:03:43.970 --> 00:03:46.740
you can request it,
optionally showing a rational

00:03:46.740 --> 00:03:48.710
explaining why you need it.

00:03:48.710 --> 00:03:50.700
This will ask the
user for permission,

00:03:50.700 --> 00:03:53.210
which they can accept or deny.

00:03:53.210 --> 00:03:56.340
And you can see the
results in this callback.

00:03:56.340 --> 00:03:58.460
Of course, it's good
practice to fail gracefully

00:03:58.460 --> 00:04:00.720
if permission is not
granted, and to only ask

00:04:00.720 --> 00:04:03.060
of missions you really need.

00:04:03.060 --> 00:04:06.240
Users potentially denying
dynamic runtime permissions--

00:04:06.240 --> 00:04:07.590
that's who's doing what now.

00:04:07.590 --> 00:04:10.340
[MUSIC PLAYING]

00:04:18.040 --> 00:04:20.220
TIMOTHY JORDAN: Google
Play Services 8.3

00:04:20.220 --> 00:04:21.170
is out in the wild.

00:04:21.170 --> 00:04:24.107
And on the show today to tell
us all about it is Magnus.

00:04:24.107 --> 00:04:25.360
MAGNUS HYTTSTEN: Hey.

00:04:25.360 --> 00:04:26.670
TIMOTHY JORDAN: It's OK.

00:04:26.670 --> 00:04:29.470
I asked Magnus to use his
indoor voice on the show today.

00:04:29.470 --> 00:04:31.520
And there's no launcher.

00:04:31.520 --> 00:04:33.580
It's dangerous in the studio.

00:04:33.580 --> 00:04:36.270
But you know what, we can talk
about Google Play Services.

00:04:36.270 --> 00:04:38.604
In fact, let me just count them.

00:04:38.604 --> 00:04:40.270
There's four people
in the audience that

00:04:40.270 --> 00:04:41.478
haven't seen your videos yet.

00:04:41.478 --> 00:04:43.110
So if you could
just, in a nutshell,

00:04:43.110 --> 00:04:44.960
what are Google Play Services?

00:04:44.960 --> 00:04:46.320
MAGNUS HYTTSTEN: Of course.

00:04:46.320 --> 00:04:49.450
Google Play Services
is about 21 APIs that

00:04:49.450 --> 00:04:52.040
sits over the Android platform.

00:04:52.040 --> 00:04:54.960
So it contains things like
Google Map, Google Drive,

00:04:54.960 --> 00:04:57.940
Google Fit, and the
Vision API for example.

00:04:57.940 --> 00:05:00.940
And it's completely disconnected
from the Android releases.

00:05:00.940 --> 00:05:03.530
So we can actually push
Google Play services out

00:05:03.530 --> 00:05:06.550
to the external developer
audience five or six

00:05:06.550 --> 00:05:07.760
times per year.

00:05:07.760 --> 00:05:09.970
So that means we can create
a lot of information,

00:05:09.970 --> 00:05:13.190
and get that available to
developers very, very quickly.

00:05:13.190 --> 00:05:14.190
TIMOTHY JORDAN: Awesome.

00:05:14.190 --> 00:05:16.601
Now in 8.3, what's the
one thing that people

00:05:16.601 --> 00:05:17.600
should pay attention to?

00:05:17.600 --> 00:05:19.550
MAGNUS HYTTSTEN: So
the one thing in 8.3

00:05:19.550 --> 00:05:21.870
specifically is the sign-in API.

00:05:21.870 --> 00:05:25.950
So the sign in API has been
completely refactored in 8.3.

00:05:25.950 --> 00:05:29.250
Whereas previously, it
was tightly connected

00:05:29.250 --> 00:05:31.470
to the Google API
client, it has now

00:05:31.470 --> 00:05:35.000
been broken out and refactored
into a separate API.

00:05:35.000 --> 00:05:37.650
And that means that you
can connect new APIs

00:05:37.650 --> 00:05:42.040
and you can change the scope's
without having to reconnect

00:05:42.040 --> 00:05:43.770
the entire Google API client.

00:05:43.770 --> 00:05:46.510
That's managed completely
separately in the Google

00:05:46.510 --> 00:05:48.030
sign-in API instead.

00:05:48.030 --> 00:05:49.650
So that's a great new feature.

00:05:49.650 --> 00:05:53.280
It allows developers to write
code which is a lot cleaner

00:05:53.280 --> 00:05:54.270
and easier to read.

00:05:54.270 --> 00:05:55.186
TIMOTHY JORDAN: Great.

00:05:55.186 --> 00:05:57.680
Google Play Services 8.3

00:05:57.680 --> 00:06:01.380
Earlier today, I tracked down
the tech lead of TensorFlow

00:06:01.380 --> 00:06:04.170
to get some more details about
machine learning, TensorFlow,

00:06:04.170 --> 00:06:06.640
and how you can use
it in your apps.

00:06:11.850 --> 00:06:13.865
So I managed to
track down Rajat.

00:06:13.865 --> 00:06:15.250
He is on the Google Brain team.

00:06:15.250 --> 00:06:18.990
And he's the TL for
TensorFlow Rajat, hello.

00:06:18.990 --> 00:06:19.720
RAJAT MONGA: Hi.

00:06:19.720 --> 00:06:20.511
TIMOTHY JORDAN: OK.

00:06:20.511 --> 00:06:23.659
So TensorFlow is an open source
toolkit for machine learning.

00:06:23.659 --> 00:06:26.200
Now I'm hoping that you can give
us a little bit more insight

00:06:26.200 --> 00:06:28.330
for our developers out
there about machine learning

00:06:28.330 --> 00:06:29.600
and why TensorFlow is so cool.

00:06:29.600 --> 00:06:31.530
So let's start with
machine learning.

00:06:31.530 --> 00:06:34.070
Give us, kind of in a
nutshell, for app developers--

00:06:34.070 --> 00:06:35.530
not for researchers
or academics,

00:06:35.530 --> 00:06:38.190
but for app developers--
what is machine learning?

00:06:38.190 --> 00:06:40.790
RAJAT MONGA: So if you think
about how you might teach

00:06:40.790 --> 00:06:43.750
a two-year-old what
different things are-- let's

00:06:43.750 --> 00:06:46.770
say cats and dogs-- you would
show them pictures of cats,

00:06:46.770 --> 00:06:48.510
and you would show
them pictures of dogs,

00:06:48.510 --> 00:06:49.824
and tell them what each is.

00:06:49.824 --> 00:06:51.990
And then over time, they'll
learn to recognize those

00:06:51.990 --> 00:06:53.210
automatically.

00:06:53.210 --> 00:06:55.746
Well, you can do the same
thing with computers as well.

00:06:55.746 --> 00:06:57.870
And that's really what
machine learning helps with.

00:06:57.870 --> 00:07:01.850
So for example, you could
have a million images,

00:07:01.850 --> 00:07:06.650
and take those and sort of--
some of dogs, some of cats,

00:07:06.650 --> 00:07:07.950
some of cows, and so on.

00:07:07.950 --> 00:07:09.940
And once you train
a model with that,

00:07:09.940 --> 00:07:11.400
the computer can
learn to recognize

00:07:11.400 --> 00:07:12.830
what is cat, what is dog.

00:07:12.830 --> 00:07:14.640
If you're showed it
new images, they'll

00:07:14.640 --> 00:07:16.160
be able to tell what it is.

00:07:16.160 --> 00:07:17.550
So images is one area.

00:07:17.550 --> 00:07:20.780
But you can really use that to
make all kinds of applications

00:07:20.780 --> 00:07:24.190
smarter, to help them
automatically pick up

00:07:24.190 --> 00:07:26.680
the things that the user
wants, before the user having

00:07:26.680 --> 00:07:28.190
to specify exactly what.

00:07:28.190 --> 00:07:29.940
It's used in many,
many different products

00:07:29.940 --> 00:07:32.060
that you're probably used to.

00:07:32.060 --> 00:07:34.450
For example, the one I
like to talk about the most

00:07:34.450 --> 00:07:35.550
is Google Photos.

00:07:35.550 --> 00:07:36.140
If you go--

00:07:36.140 --> 00:07:36.740
TIMOTHY JORDAN: So cool.

00:07:36.740 --> 00:07:37.810
RAJAT MONGA: It is.

00:07:37.810 --> 00:07:39.005
TIMOTHY JORDAN: Show
me photos of a bike.

00:07:39.005 --> 00:07:41.150
And that's all my bike
photos, or whatever it is.

00:07:41.150 --> 00:07:41.760
RAJAT MONGA: Exactly.

00:07:41.760 --> 00:07:43.530
And this is the technology
being used there.

00:07:43.530 --> 00:07:45.238
TIMOTHY JORDAN: What's
the workflow from,

00:07:45.238 --> 00:07:47.990
say, like idea to
it's in an app.

00:07:47.990 --> 00:07:51.230
RAJAT MONGA: So if you
think about researchers,

00:07:51.230 --> 00:07:54.270
what they like to do is,
they have new ideas that they

00:07:54.270 --> 00:07:57.700
want to try out, maybe on their
data set and build a new model.

00:07:57.700 --> 00:07:59.450
And what TensorFlow
allows them to do

00:07:59.450 --> 00:08:02.020
is it's really flexible for
them to build their model

00:08:02.020 --> 00:08:05.870
and specify it exactly as
they like, and train it.

00:08:05.870 --> 00:08:07.740
And then once they're
done with that,

00:08:07.740 --> 00:08:10.080
the app developer can
take the trained model,

00:08:10.080 --> 00:08:13.080
use the same library,
same API, and deploy it

00:08:13.080 --> 00:08:16.140
on servers, in the data
center, or in that application

00:08:16.140 --> 00:08:16.990
on the mobile phone.

00:08:16.990 --> 00:08:20.810
We aim to release
real working models

00:08:20.810 --> 00:08:24.970
for a lot of those, where
we provide the model

00:08:24.970 --> 00:08:26.390
specification that
somebody could

00:08:26.390 --> 00:08:28.290
use to train on their data set.

00:08:28.290 --> 00:08:30.090
And in some cases,
actually pre-trained

00:08:30.090 --> 00:08:32.200
on data sets that are
available, for example

00:08:32.200 --> 00:08:35.220
for images, that can really
be used by the developers.

00:08:35.220 --> 00:08:37.386
TIMOTHY JORDAN: Thank you
for taking time out today.

00:08:37.386 --> 00:08:39.770
And of course, thank you
for working on TensorFlow.

00:08:39.770 --> 00:08:41.730
And that's a closer
look at TensorFlow.

00:08:41.730 --> 00:08:44.900
Please, check it out and tell
us how you use it in your app.

00:08:44.900 --> 00:08:46.481
Hey Pete, Chrome 47.

00:08:46.481 --> 00:08:48.980
What are the two biggest things
we need to pay attention to?

00:08:48.980 --> 00:08:51.313
PETE LEPAGE: Well, there's
always new stuff with Chrome.

00:08:51.313 --> 00:08:53.780
The two biggest ones that
I'm most excited about

00:08:53.780 --> 00:08:57.325
are splash screens and
request idle callback.

00:08:57.325 --> 00:08:58.950
MAGNUS HYTTSTEN: Wow,
that's a mouthful

00:08:58.950 --> 00:09:00.449
PETE LEPAGE: Yeah,
tell me about it.

00:09:00.449 --> 00:09:01.658
Some of these API names are--

00:09:01.658 --> 00:09:03.907
TIMOTHY JORDAN: A lot of
letters in those identifiers.

00:09:03.907 --> 00:09:05.020
PETE LEPAGE: Exactly.

00:09:05.020 --> 00:09:08.750
Splash screens for apps that
users have added to their home

00:09:08.750 --> 00:09:12.380
screen provide a new,
dynamically generated splash

00:09:12.380 --> 00:09:14.080
screen when they're launched.

00:09:14.080 --> 00:09:16.820
In the past, if you launched an
app from the home screen, you

00:09:16.820 --> 00:09:17.320
just--

00:09:17.320 --> 00:09:18.400
TIMOTHY JORDAN: You've
got the app loading

00:09:18.400 --> 00:09:20.550
and it loads the
web page after that.

00:09:20.550 --> 00:09:21.280
And it's just--

00:09:21.280 --> 00:09:22.340
PETE LEPAGE: And
all the user saw

00:09:22.340 --> 00:09:24.710
while all that stuff was
happening was a white screen.

00:09:24.710 --> 00:09:25.520
It was boring.

00:09:25.520 --> 00:09:28.770
It didn't look like an installed
app or anything like that.

00:09:28.770 --> 00:09:30.970
Well now Chrome
will automatically,

00:09:30.970 --> 00:09:34.130
dynamically generate
those splash screens

00:09:34.130 --> 00:09:35.900
using the manifest file.

00:09:35.900 --> 00:09:37.080
It looks for three things.

00:09:37.080 --> 00:09:39.740
It looks for the app name, it
looks for a background color,

00:09:39.740 --> 00:09:41.940
and it looks for a set of icons.

00:09:41.940 --> 00:09:43.960
Now, the icons get
a little bit tricky

00:09:43.960 --> 00:09:46.730
because, it's
looking for, ideally,

00:09:46.730 --> 00:09:49.369
a 128 device pixel icon.

00:09:49.369 --> 00:09:50.660
TIMOTHY JORDAN: Device pixels--

00:09:50.660 --> 00:09:53.420
PETE LEPAGE: Device pixel,
us web developers don't

00:09:53.420 --> 00:09:55.340
do device pixels all that well.

00:09:55.340 --> 00:09:57.520
So what you need to know,
the easiest way to do it,

00:09:57.520 --> 00:10:01.940
is take the 128, make sure
you've got a 128 times 1.5

00:10:01.940 --> 00:10:05.420
to give you the 1.5x
devices, times 2,

00:10:05.420 --> 00:10:11.090
so 256 CSS pixels for the 2x
devices, times 3, and times 4.

00:10:11.090 --> 00:10:13.940
And that will pretty much
cover all your devices.

00:10:13.940 --> 00:10:15.870
And then, voila, you've
got a splash screen.

00:10:15.870 --> 00:10:16.900
TIMOTHY JORDAN: Great,
so splash screen.

00:10:16.900 --> 00:10:18.170
What's the next one?

00:10:18.170 --> 00:10:21.040
PETE LEPAGE: Request idle
call back essentially lets

00:10:21.040 --> 00:10:23.060
you say, hey, I've
got JavaScript

00:10:23.060 --> 00:10:26.750
that I need to run when
the system is in idle.

00:10:26.750 --> 00:10:29.255
If you are running JavaScript
while the user is doing

00:10:29.255 --> 00:10:30.630
something-- if
they're scrolling,

00:10:30.630 --> 00:10:33.530
or while something else is going
on, you're going to get jank.

00:10:33.530 --> 00:10:37.840
Request idle call back is
run when the device is not

00:10:37.840 --> 00:10:39.110
doing anything.

00:10:39.110 --> 00:10:42.380
So it's a really easy way
to say, hey, this is not

00:10:42.380 --> 00:10:43.740
the most important JavaScript.

00:10:43.740 --> 00:10:46.930
Let's go run this when
we've got some time.

00:10:46.930 --> 00:10:48.020
TIMOTHY JORDAN: Very cool.

00:10:48.020 --> 00:10:48.632
Chrome 47.

00:10:48.632 --> 00:10:49.590
PETE LEPAGE: Chrome 47.

00:10:49.590 --> 00:10:50.100
TIMOTHY JORDAN: Thanks Pete.

00:10:50.100 --> 00:10:50.410
PETE LEPAGE: Out soon.

00:10:50.410 --> 00:10:51.090
Thanks.

00:10:51.090 --> 00:10:53.350
TIMOTHY JORDAN: We're nearly at
the end of our show for today.

00:10:53.350 --> 00:10:55.183
But I have one final
question for the panel.

00:10:55.183 --> 00:10:57.990
Pete, what happens when
you break the build?

00:10:57.990 --> 00:11:00.830
PETE LEPAGE: I've
never broken the build.

00:11:00.830 --> 00:11:02.740
Web fundamentals has
always been perfect.

00:11:02.740 --> 00:11:04.240
TIMOTHY JORDAN:
Magnus, what happens

00:11:04.240 --> 00:11:05.550
when you break the build?

00:11:05.550 --> 00:11:07.216
MAGNUS HYTTSTEN: When
I break the build,

00:11:07.216 --> 00:11:10.174
I go like this--
I broke the build!

00:11:13.140 --> 00:11:16.032
And then I work like crazy.

00:11:16.032 --> 00:11:18.490
TIMOTHY JORDAN: Well, Dan Galpin
broke the build this week.

00:11:18.490 --> 00:11:20.760
And this is what happened
when he tried to fix it.

00:11:20.760 --> 00:11:25.260
[MUSIC PLAYING]

00:11:48.790 --> 00:11:49.730
And that was Tuesday.

00:11:49.730 --> 00:11:50.940
Hey, you know what?

00:11:50.940 --> 00:11:53.120
I can't get everyone
here on the show,

00:11:53.120 --> 00:11:54.884
but I can ambush
them at their desk.

00:11:54.884 --> 00:11:56.550
Have a question about
a Google platform,

00:11:56.550 --> 00:11:58.890
or anything really, let
me know in the comments,

00:11:58.890 --> 00:12:01.170
and I'll track them down
with my selfie stick.

00:12:01.170 --> 00:12:03.260
Thanks for joining us here
on the developer show.

00:12:03.260 --> 00:12:06.050
I'm Timothy Jordan, and
I'll see you next week.

00:12:06.050 --> 00:12:10.300
[MUSIC PLAYING]

