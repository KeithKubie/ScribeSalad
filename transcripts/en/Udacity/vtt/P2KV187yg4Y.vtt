WEBVTT
Kind: captions
Language: en

00:00:00.180 --> 00:00:03.990
When showing avatars,
that is an image representing a person,

00:00:03.990 --> 00:00:06.010
it's very common to
show these as a circle.

00:00:07.020 --> 00:00:08.930
Now there's no strict
rule about this but

00:00:08.930 --> 00:00:12.700
a circle is a friendlier,
more organic way to present the image.

00:00:12.700 --> 00:00:16.129
Psychologically, we're also
predisposed to notice faces.

00:00:16.129 --> 00:00:19.320
In fact, there's a special part
of our brain dedicated to it.

00:00:19.320 --> 00:00:21.150
So using a circular treatment in a UI,

00:00:21.150 --> 00:00:25.130
otherwise mostly made up of
rectangles helps them to stand out.

00:00:25.130 --> 00:00:30.490
A very simple way to achieve this is to
use the RoundedBitmapDrawable clause.

00:00:30.490 --> 00:00:33.870
We use this by
the RoundedBitmapDrawableFactory

00:00:33.870 --> 00:00:38.320
which has static methods to create
a rounded image from an existing bitmap,

00:00:38.320 --> 00:00:40.720
an input stream, or a file path.

00:00:40.720 --> 00:00:44.240
Notice the class is a RoundedBitmap
not a circular bitmap, so

00:00:44.240 --> 00:00:48.260
we need to call setCircular
to make it a perfect circle.

00:00:48.260 --> 00:00:50.760
If you're using an image
loading library like Glide or

00:00:50.760 --> 00:00:54.800
Picasso, as covered in Android
fundamentals two, then take

00:00:54.800 --> 00:00:58.080
a look at the image transformation
capabilities they provide.

00:00:58.080 --> 00:01:02.210
That's a great way to take care of the
rounding when the image downloads and

00:01:02.210 --> 00:01:02.740
on the background.

