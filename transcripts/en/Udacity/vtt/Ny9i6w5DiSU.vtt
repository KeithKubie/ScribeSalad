WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.000
We're looking at the same basic setup as the last time.

00:00:03.000 --> 00:00:05.000
We're making a graph with n nodes,

00:00:05.000 --> 00:00:07.000
and again we're going to assume n is some power of 2.

00:00:07.000 --> 00:00:09.000
If it's just a single node, we just return that node.

00:00:09.000 --> 00:00:12.000
Otherwise, we recursively generate the two subgraphs.

00:00:12.000 --> 00:00:14.000
Now what we're going to do is choose half of the nodes from G1

00:00:14.000 --> 00:00:16.000
and half of the nodes that are in G2,

00:00:16.000 --> 00:00:18.000
and connect all pairs.

00:00:18.000 --> 00:00:21.000
So, for all I1 and S1, and all I2 and S2,

00:00:21.000 --> 00:00:24.000
we're going to link I1 and I2 together.

00:00:24.000 --> 00:00:27.000
We have some graph G1. We have some graph G2.

00:00:27.000 --> 00:00:31.000
We choose half the nodes at random to be called S1.

00:00:31.000 --> 00:00:34.000
We choose half the nodes at random in this graph to be S2.

00:00:34.000 --> 00:00:38.000
Then we connect up all pairs so that every single node up here

00:00:38.000 --> 00:00:40.000
is connected to every single node up here.

00:00:40.000 --> 00:00:43.000
It gets very densely connected here, but kind of much looser elsewhere.

00:00:43.000 --> 00:00:45.000
So how many nodes are in that graph?

00:00:45.000 --> 00:00:47.000
Well, we're going to do another recurrence relation.

00:00:47.000 --> 00:00:51.000
Once again, a graph with 1 node has zero edges.

00:00:51.000 --> 00:00:55.000
A graph with n nodes has however many edges are in

00:00:55.000 --> 00:00:58.000
2 subgraphs, each of size n/2.

00:00:58.000 --> 00:01:00.000
Then we are going to add to that--what?

00:01:00.000 --> 00:01:02.000
We're going to take n/4 of the set of nodes

00:01:02.000 --> 00:01:05.000
and fully connect them with another set of n/4 nodes.

00:01:05.000 --> 00:01:08.000
n/4 from one side, n/4 from the other.

00:01:08.000 --> 00:01:10.000
We're looking at all combinations of those.

00:01:10.000 --> 00:01:12.000
This becomes our recurrence relation.

00:01:12.000 --> 00:01:14.000
It's a little bit cumbersome to work with this.

00:01:14.000 --> 00:01:16.000
It has funny constants in it, so what we're going to do

00:01:16.000 --> 00:01:18.000
is actually think about in Big Theta notation.

00:01:18.000 --> 00:01:23.000
This is just n^2. It's really 1/16 n^2, which is Î˜(n^2).

00:01:23.000 --> 00:01:26.000
Let's take a look at what happens in this same kind of tree structure as before,

00:01:26.000 --> 00:01:30.000
where the amount of edges that we add at each of these levels

00:01:30.000 --> 00:01:32.000
is some Î˜(n^2).

00:01:32.000 --> 00:01:35.000
So at the top level, it's going to be cn^2.

00:01:35.000 --> 00:01:39.000
Next level down, it's going to be c n/2^2,

00:01:39.000 --> 00:01:43.000
which is n^2/4--same thing twice,

00:01:43.000 --> 00:01:45.000
which is c n^2/2.

00:01:45.000 --> 00:01:47.000
Next level down, we square--we get 16--

00:01:47.000 --> 00:01:49.000
but there are going to be 4 of these now.

00:01:49.000 --> 00:01:51.000
So it becomes a 1/4.

00:01:51.000 --> 00:01:55.000
In fact, each level down here we're getting c n^2 over 1, over 2, over 4,

00:01:55.000 --> 00:01:57.000
over 8, over 16, and so on.

00:01:57.000 --> 00:01:59.000
And we add all these up.

00:01:59.000 --> 00:02:05.000
We get cn^2*1 + 1/2 + 1/4 + 1/8 and so on,

00:02:05.000 --> 00:02:07.000
which adds up to something on the order of 2.

00:02:07.000 --> 00:02:09.000
So when all is said and done,

00:02:09.000 --> 00:02:12.000
we still have Î˜(n^2)--edges total.

00:02:12.000 --> 00:02:15.000
This recurrence relation solves 2n^2,

00:02:15.000 --> 00:02:19.000
which is interesting because we do n^2 really at just the first level.

00:02:19.000 --> 00:02:22.000
All the other levels that we do, the amount of work gets cut in half each time.

00:02:22.000 --> 00:02:25.000
So even though there's possibly a large number of levels,

00:02:25.000 --> 00:02:29.000
it doesn't add up to anything more than another constant times n^2.

