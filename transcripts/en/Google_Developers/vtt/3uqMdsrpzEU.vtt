WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.485
[MUSIC PLAYING]

00:00:06.842 --> 00:00:08.050
MARK MANDEL: Hello, everyone.

00:00:08.050 --> 00:00:09.750
My name is Mark Mandel.

00:00:09.750 --> 00:00:13.410
I am a Developer Advocate
for Google Cloud Platform.

00:00:13.410 --> 00:00:16.440
And I'm here today to
build a multiplayer backend

00:00:16.440 --> 00:00:21.750
in four minutes and 51
seconds, sounds like fun?

00:00:21.750 --> 00:00:23.040
Cool.

00:00:23.040 --> 00:00:26.250
So this very silly game
that I decided to make--

00:00:26.250 --> 00:00:29.040
you can clearly see,
I am not an artist--

00:00:29.040 --> 00:00:30.180
is called paddle soccer.

00:00:30.180 --> 00:00:33.600
It's a two player multiplayer
game, where you're a paddle

00:00:33.600 --> 00:00:35.310
and you play soccer.

00:00:35.310 --> 00:00:36.360
It's pretty simple stuff.

00:00:36.360 --> 00:00:38.040
It has a unity client.

00:00:38.040 --> 00:00:40.440
It has a dedicated unity server.

00:00:40.440 --> 00:00:42.090
It has some matchmaking code.

00:00:42.090 --> 00:00:45.990
And it also has some code that
controls the dedicated game

00:00:45.990 --> 00:00:47.910
servers, spinning up
and spinning down,

00:00:47.910 --> 00:00:49.920
across a cluster in the cloud.

00:00:49.920 --> 00:00:55.830
So how am I able to do that
inside five minutes or three

00:00:55.830 --> 00:00:57.870
minutes or so, anyway?

00:00:57.870 --> 00:01:00.450
The cool thing that we have--
what I talk about a lot

00:01:00.450 --> 00:01:02.520
and what gets me really
excited, is a thing

00:01:02.520 --> 00:01:04.050
called software containers.

00:01:04.050 --> 00:01:06.300
People here are familiar
with something called Docker?

00:01:06.300 --> 00:01:07.633
And some other things like that?

00:01:07.633 --> 00:01:08.340
Cool.

00:01:08.340 --> 00:01:10.470
So this is particularly
exciting to me,

00:01:10.470 --> 00:01:12.840
because the thing that
software containers do,

00:01:12.840 --> 00:01:17.250
is enable us to have a
standardization around software

00:01:17.250 --> 00:01:18.400
and how we run it.

00:01:18.400 --> 00:01:20.850
So regardless of whether we're
running multiplayer systems

00:01:20.850 --> 00:01:22.560
or [INAUDIBLE] like
matchmaking systems,

00:01:22.560 --> 00:01:25.170
or dedicated game
servers, we can

00:01:25.170 --> 00:01:28.950
make software look relatively
the same regardless of like,

00:01:28.950 --> 00:01:31.320
how we want to deploy it,
how we want to scale it,

00:01:31.320 --> 00:01:32.800
whether we want a
health check, log

00:01:32.800 --> 00:01:34.800
aggregation, stuff like that.

00:01:34.800 --> 00:01:37.440
That means we can build sort
of generalized solutions

00:01:37.440 --> 00:01:39.480
for these kinds of
problems that can

00:01:39.480 --> 00:01:43.000
be deployed to almost any type
of software type of problem.

00:01:43.000 --> 00:01:47.040
Kubernetes is an open source
container orchestration system

00:01:47.040 --> 00:01:48.840
that came out of
Google for doing

00:01:48.840 --> 00:01:50.340
exactly these types of things--

00:01:50.340 --> 00:01:52.664
deployments, scaling, logging,
all that kind of stuff.

00:01:52.664 --> 00:01:55.080
We have a hosted solution at
Google Cloud called Container

00:01:55.080 --> 00:01:58.260
Engine, but it's also open
source and can be run anywhere.

00:01:58.260 --> 00:02:02.660
So, without further due, let's
actually get stuck into a demo.

00:02:02.660 --> 00:02:04.110
Sweet, you've
switched me across?

00:02:04.110 --> 00:02:04.710
Perfect.

00:02:04.710 --> 00:02:05.210
Excellent.

00:02:05.210 --> 00:02:07.020
So I've got a
visualization here.

00:02:07.020 --> 00:02:09.630
What I'm going to do here is get
my matchmaker up and running.

00:02:09.630 --> 00:02:12.080
I've got some make commands.

00:02:12.080 --> 00:02:14.980
I'm going to actually deploy
in front of people, sweet.

00:02:14.980 --> 00:02:17.754
So I'll send these yaml
files up to Kubernetes.

00:02:17.754 --> 00:02:19.170
And we have a
visualization on top

00:02:19.170 --> 00:02:21.870
that shows us the containers
that we're going to be running.

00:02:21.870 --> 00:02:23.610
The first thing I'm going to get
is Kubernetes up and running.

00:02:23.610 --> 00:02:25.318
It's going to go a
little bit to come up.

00:02:32.020 --> 00:02:33.050
Kubernetes.

00:02:33.050 --> 00:02:37.330
No, that's not going to work.

00:02:37.330 --> 00:02:38.982
For whatever reason
it doesn't like me.

00:02:38.982 --> 00:02:39.940
That's fine, it's demo.

00:02:39.940 --> 00:02:41.950
It's in front of a lot
of people-- there we go,

00:02:41.950 --> 00:02:43.131
there's my read assistance.

00:02:43.131 --> 00:02:43.630
Beautiful.

00:02:43.630 --> 00:02:44.129
Scrolling.

00:02:44.129 --> 00:02:47.034
Of course that's tiny, why not--

00:02:47.034 --> 00:02:49.450
because demos in front of loads
of people always go right,

00:02:49.450 --> 00:02:51.520
that's fine.

00:02:51.520 --> 00:02:52.270
That's fine.

00:02:52.270 --> 00:02:55.840
We will deploy-- what I'm
doing now is sending up a bunch

00:02:55.840 --> 00:02:58.690
of other yaml files, the
declarative syntax are going

00:02:58.690 --> 00:02:59.740
to create a--

00:02:59.740 --> 00:03:02.000
five more containers that
are going to fire up for us,

00:03:02.000 --> 00:03:03.700
it's going to be a few there.

00:03:03.700 --> 00:03:06.430
So we're going to run this
across a series of machines

00:03:06.430 --> 00:03:08.612
that we have running
inside a cluster.

00:03:08.612 --> 00:03:10.570
Now, we also-- you're
not going to see it here,

00:03:10.570 --> 00:03:12.190
but I'm going to deploy
a thing called a service

00:03:12.190 --> 00:03:13.810
that then exposes
those matchmaker

00:03:13.810 --> 00:03:15.000
clients that are running.

00:03:15.000 --> 00:03:17.560
Weavescope's quite nice in
that it will actually show us

00:03:17.560 --> 00:03:19.450
the network activity
that is happening

00:03:19.450 --> 00:03:20.890
between those machines.

00:03:20.890 --> 00:03:22.870
And we have now a
matchmaking system,

00:03:22.870 --> 00:03:24.050
we have that up and running.

00:03:24.050 --> 00:03:25.240
That's really cool.

00:03:25.240 --> 00:03:29.190
What I'm also going to do
is deploy the code that--

00:03:31.930 --> 00:03:34.810
the code that organizes
and structures the

00:03:34.810 --> 00:03:36.859
dedicated game servers
that are running too.

00:03:36.859 --> 00:03:38.650
I'm basically doing
exactly the same thing.

00:03:38.650 --> 00:03:40.450
But the cool thing
about this here,

00:03:40.450 --> 00:03:45.424
is that this is like 400,
500 lines of code, right?

00:03:45.424 --> 00:03:46.840
This isn't a lot
of work that I've

00:03:46.840 --> 00:03:50.110
had to do to organize and
orchestrate dedicated game

00:03:50.110 --> 00:03:51.640
servers across a
cluster of-- well,

00:03:51.640 --> 00:03:53.306
for me it's three
machines, but it could

00:03:53.306 --> 00:03:54.550
be up to like 2,000 machines.

00:03:54.550 --> 00:03:57.304
This is a lot of work that
I haven't had to do myself,

00:03:57.304 --> 00:03:59.470
and it's hugely, hugely
powerful the amount of stuff

00:03:59.470 --> 00:04:01.100
I can get to have happen.

00:04:01.100 --> 00:04:04.120
So cool, now that's my dedicated
game server orchestration

00:04:04.120 --> 00:04:06.400
system, I call it
sessions, for fun.

00:04:06.400 --> 00:04:07.520
That's all up and running.

00:04:07.520 --> 00:04:12.540
So if I go and say [? qttl ?]
I want to get the IP address.

00:04:12.540 --> 00:04:14.650
Of course it's
pending, for two secs.

00:04:14.650 --> 00:04:17.620
So I need to get the IP address
of the matchmaking system

00:04:17.620 --> 00:04:20.410
as it comes up, so that I
can actually run my game.

00:04:20.410 --> 00:04:22.045
There we go, perfect.

00:04:22.045 --> 00:04:22.690
So there we go.

00:04:22.690 --> 00:04:24.370
There's my IP address.

00:04:24.370 --> 00:04:27.431
If I come over here, I
have my client ready to go.

00:04:27.431 --> 00:04:28.930
I'm going to run
my game and tell it

00:04:28.930 --> 00:04:34.170
where it is that my game server
is running at, which is there.

00:04:34.170 --> 00:04:37.491
So we'll still fire that up,
standard unity little window.

00:04:37.491 --> 00:04:37.990
Perfect.

00:04:37.990 --> 00:04:40.364
Of course it's going to run
full screen, because why not.

00:04:40.364 --> 00:04:42.916
I'm going to send that
to another window.

00:04:42.916 --> 00:04:44.185
We'll do the same thing again.

00:04:50.560 --> 00:04:52.264
That's fine.

00:04:52.264 --> 00:04:52.930
That'll connect.

00:04:52.930 --> 00:04:55.750
So what should happen here
is now my matchmaking service

00:04:55.750 --> 00:04:56.950
is going to say, cool.

00:04:56.950 --> 00:04:58.930
I've now got two machines
that are ready to go.

00:04:58.930 --> 00:04:59.429
I get one.

00:04:59.429 --> 00:05:00.820
I get a ball that bounces, yay.

00:05:00.820 --> 00:05:03.550
So we have two players that
are able to play this game.

00:05:03.550 --> 00:05:05.690
I flick across, you can see--

00:05:05.690 --> 00:05:08.100
yay with the game.

00:05:08.100 --> 00:05:10.520
Perfect.

00:05:10.520 --> 00:05:11.330
Wonderful.

00:05:11.330 --> 00:05:14.270
All right, so--
if this all sounds

00:05:14.270 --> 00:05:16.610
interesting we'll be
talking about this more,

00:05:16.610 --> 00:05:19.080
Wednesday, 9:30 a.m. at
our sponsored session,

00:05:19.080 --> 00:05:20.330
dedicated game server scaling.

00:05:20.330 --> 00:05:23.450
We'll also talk about
big data and analytics.

00:05:23.450 --> 00:05:26.330
If you can't get to that,
I'm @neurotic on Twitter.

00:05:26.330 --> 00:05:27.680
I'll definitely be around.

00:05:27.680 --> 00:05:30.020
You can also get this
code at Mark Mandel

00:05:30.020 --> 00:05:31.597
slash paddle soccer on GitHub.

00:05:31.597 --> 00:05:33.680
Or feel free to reach out
to me and I'll point you

00:05:33.680 --> 00:05:34.950
in the right direction.

00:05:34.950 --> 00:05:36.920
Finally, thank you very
much for having me.

00:05:36.920 --> 00:05:39.970
[MUSIC PLAYING]

