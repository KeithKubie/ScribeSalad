WEBVTT
Kind: captions
Language: en

00:00:00.634 --> 00:00:02.968
Sabharwal: All right.

00:00:02.968 --> 00:00:04.734
Good morning
or good afternoon, everyone,

00:00:04.734 --> 00:00:07.634
and welcome to "Building
Applications in the Cloud."

00:00:07.634 --> 00:00:09.167
Thank you very much
for joining us.

00:00:09.167 --> 00:00:10.901
My name is Anil Sabharwal.

00:00:10.901 --> 00:00:12.767
I'm a Product Manager
at Google

00:00:12.767 --> 00:00:14.734
for the Documents List API.

00:00:14.734 --> 00:00:16.000
Bidelman:
And I'm Eric Bidelman.

00:00:16.000 --> 00:00:19.033
I work as an engineer
on the Documents List API.

00:00:19.033 --> 00:00:20.868
Sabharwal: So over
the next 45 minutes to an hour,

00:00:20.868 --> 00:00:22.801
we have a pretty exciting
session for you.

00:00:22.801 --> 00:00:24.467
It's pretty jam packed.

00:00:24.467 --> 00:00:27.434
We're going to try to
have a nice balance

00:00:27.434 --> 00:00:31.067
between looking at some really
cool demonstrations,

00:00:31.067 --> 00:00:33.367
as well as doing a bit
of a deep dive

00:00:33.367 --> 00:00:34.701
into some actual code samples,

00:00:34.701 --> 00:00:36.267
so we'll give you
the best of both worlds.

00:00:36.267 --> 00:00:38.167
We're also excited today
to have

00:00:38.167 --> 00:00:39.901
a couple of partners with us.

00:00:39.901 --> 00:00:41.467
We have Sandosh
from gDocsBar

00:00:41.467 --> 00:00:43.367
and Ondrej from Syncplicity,

00:00:43.367 --> 00:00:45.934
couple of partners that use
the Google Data APIs,

00:00:45.934 --> 00:00:47.634
that'll be here to talk to you
a little bit

00:00:47.634 --> 00:00:49.000
about some of the applications
they have

00:00:49.000 --> 00:00:51.033
and some
of the exciting releases

00:00:51.033 --> 00:00:52.234
that they have coming.

00:00:52.234 --> 00:00:54.334
You'll also note here
just at the bottom,

00:00:54.334 --> 00:00:56.968
we are using Google Moderator
for this presentation.

00:00:56.968 --> 00:00:59.167
For those of you who haven't
used Moderator before,

00:00:59.167 --> 00:01:00.300
you can just go
to that link there,

00:01:00.300 --> 00:01:03.267
the bit.ly/io-cloud-apps,

00:01:03.267 --> 00:01:05.000
and you can actually
just sign in,

00:01:05.000 --> 00:01:06.400
and you can put
in a question there,

00:01:06.400 --> 00:01:07.400
and people can vote,

00:01:07.400 --> 00:01:08.634
and at the end of the session,

00:01:08.634 --> 00:01:11.200
we'll have Q &amp; A
for about 10 to 15 minutes.

00:01:11.200 --> 00:01:12.901
You're more than welcome
to come up to the microphone

00:01:12.901 --> 00:01:14.434
and ask the question live,

00:01:14.434 --> 00:01:16.567
or, of course,
we'll look at Moderator

00:01:16.567 --> 00:01:18.567
and ask the question,
or answer the questions

00:01:18.567 --> 00:01:20.067
that appear on Moderator.

00:01:20.067 --> 00:01:23.033
All right, so let's get started.

00:01:23.033 --> 00:01:25.133
So let's do a quick poll.

00:01:25.133 --> 00:01:27.934
How many people here
have built an application

00:01:27.934 --> 00:01:32.667
using one of
the many Google Data APIs?

00:01:32.667 --> 00:01:34.567
Great. Excellent.

00:01:34.567 --> 00:01:36.567
And how many of you
are familiar specifically

00:01:36.567 --> 00:01:41.167
with the Google
Documents List API?

00:01:41.167 --> 00:01:42.767
Okay, great. Brilliant.

00:01:42.767 --> 00:01:43.968
So the majority of you

00:01:43.968 --> 00:01:46.234
have interacted
with the Google Data APIs,

00:01:46.234 --> 00:01:48.067
and a small group of you

00:01:48.067 --> 00:01:50.167
have also seen
the Documents List API.

00:01:50.167 --> 00:01:54.934
Great. So today, basically,
what we wanted to talk about

00:01:54.934 --> 00:01:59.234
a little bit is where we've been
and kind of where we're going,

00:01:59.234 --> 00:02:00.868
and the opportunity around

00:02:00.868 --> 00:02:02.567
Building Applications 
in the Cloud.

00:02:02.567 --> 00:02:04.200
And I'll talk about that
in a second.

00:02:04.200 --> 00:02:06.300
But one of the things
that I know Eric and I love

00:02:06.300 --> 00:02:08.334
about Google, and many of you
have probably noticed,

00:02:08.334 --> 00:02:09.934
is the pace of innovation.

00:02:09.934 --> 00:02:12.234
So if we look at this API
as just an example,

00:02:12.234 --> 00:02:14.200
the Google Documents List API.

00:02:14.200 --> 00:02:16.667
A year ago, there wasn't
truthfully a lot

00:02:16.667 --> 00:02:18.000
that you could do.

00:02:18.000 --> 00:02:21.234
We provided some basic use
cases around being able to

00:02:21.234 --> 00:02:24.534
download--sorry--
being able to actually retrieve

00:02:24.534 --> 00:02:25.934
a list of documents.

00:02:25.934 --> 00:02:27.501
We had a limited query model

00:02:27.501 --> 00:02:29.601
that allowed you to be able
to find out,

00:02:29.601 --> 00:02:31.801
you know, find a document
that matched a title,

00:02:31.801 --> 00:02:34.234
or be able to look
for a particular spreadsheet.

00:02:34.234 --> 00:02:36.934
We allowed you to upload
documents, presentations,

00:02:36.934 --> 00:02:38.100
and spreadsheets,

00:02:38.100 --> 00:02:40.067
and we had the ability
to trash documents.

00:02:40.067 --> 00:02:41.767
That was it.
That was literally where we were

00:02:41.767 --> 00:02:43.100
about 12 months ago.

00:02:43.100 --> 00:02:45.267
Well, the good news is
we've come a long way.

00:02:45.267 --> 00:02:47.400
So in less than 12 months,

00:02:47.400 --> 00:02:49.868
this is a small subset
of the functionality

00:02:49.868 --> 00:02:52.067
that we've made available
through our API.

00:02:52.067 --> 00:02:54.234
So we now do things
like folder management.

00:02:54.234 --> 00:02:56.634
We let you set
account level permissions.

00:02:56.634 --> 00:02:59.033
We have metadata
that you can query over.

00:02:59.033 --> 00:03:01.934
You have an export servlet,
where you can download documents

00:03:01.934 --> 00:03:03.467
in a variety
of different formats,

00:03:03.467 --> 00:03:05.200
so you can download
your presentations

00:03:05.200 --> 00:03:08.033
in Excel, for example,
or in ODS.

00:03:08.033 --> 00:03:10.100
We have an advanced query model

00:03:10.100 --> 00:03:12.501
around who, what,
when, where.

00:03:12.501 --> 00:03:14.701
Really the ability
to kind of manipulate the data

00:03:14.701 --> 00:03:16.934
and get the information
that you really want.

00:03:16.934 --> 00:03:20.167
We have the ability for you
to actually edit documents

00:03:20.167 --> 00:03:23.601
right there in the cloud
through the append service.

00:03:23.601 --> 00:03:25.200
And we have a couple
of new announcements

00:03:25.200 --> 00:03:26.300
that we're going to make today

00:03:26.300 --> 00:03:28.067
around extending functionality

00:03:28.067 --> 00:03:29.901
around things like
revision history and others,

00:03:29.901 --> 00:03:31.133
which we'll get to.

00:03:31.133 --> 00:03:32.667
We're not going to cover
all of these today.

00:03:32.667 --> 00:03:34.567
This is just kind of
a subset again

00:03:34.567 --> 00:03:36.167
of the type of functionality

00:03:36.167 --> 00:03:37.934
that we've released
in the last 12 months.

00:03:37.934 --> 00:03:39.167
We wanted to give you
an impression

00:03:39.167 --> 00:03:41.834
of kind of the direction
that we're going.

00:03:41.834 --> 00:03:45.234
Now, today's session's
around cloud applications,

00:03:45.234 --> 00:03:47.434
and what we really
wanted to talk about

00:03:47.434 --> 00:03:50.000
is how organizations
and how users

00:03:50.000 --> 00:03:51.667
are building applications

00:03:51.667 --> 00:03:54.267
that use
the Google cloud service

00:03:54.267 --> 00:03:55.601
as a platform.

00:03:55.601 --> 00:03:56.767
As a file system
in the cloud,

00:03:56.767 --> 00:03:57.868
as a database in the cloud.

00:03:57.868 --> 00:03:59.901
The ability for you
to actually create

00:03:59.901 --> 00:04:01.734
a Google document
or a Google spreadsheet

00:04:01.734 --> 00:04:03.434
and use that as your database

00:04:03.434 --> 00:04:06.334
for building really interesting,
rich applications.

00:04:06.334 --> 00:04:08.133
And the ability to,
as an enterprise,

00:04:08.133 --> 00:04:09.634
be able to get access
to that data,

00:04:09.634 --> 00:04:10.868
manipulate that data,

00:04:10.868 --> 00:04:13.901
and manage it in an intelligent
and intuitive way.

00:04:13.901 --> 00:04:16.300
So we talked to enterprises
before doing this session,

00:04:16.300 --> 00:04:18.567
and we came up
with five particular use cases

00:04:18.567 --> 00:04:20.434
that we wanted
to talk about today.

00:04:20.434 --> 00:04:21.667
The first is migration.

00:04:21.667 --> 00:04:23.901
So how do I get
my information into the cloud,

00:04:23.901 --> 00:04:24.968
and then, of course,

00:04:24.968 --> 00:04:26.467
how do I get it
back out of the cloud?

00:04:26.467 --> 00:04:28.033
And how do I handle
different revisions

00:04:28.033 --> 00:04:30.167
as different people are
manipulating the same documents,

00:04:30.167 --> 00:04:32.000
how do I make sure
I'm getting the right access

00:04:32.000 --> 00:04:33.567
to the right revision?

00:04:33.567 --> 00:04:36.267
Sync--this is obviously
a very important problem

00:04:36.267 --> 00:04:37.701
that we need
to be able to address

00:04:37.701 --> 00:04:39.300
in terms of how do I make sure

00:04:39.300 --> 00:04:41.200
that the information
that I have locally

00:04:41.200 --> 00:04:44.367
on my machines
or in my local network servers

00:04:44.367 --> 00:04:46.000
are up to date
with the information

00:04:46.000 --> 00:04:48.300
that I have
living in the cloud?

00:04:48.300 --> 00:04:50.801
Querying--so how do I get
access to this information?

00:04:50.801 --> 00:04:52.267
How do I find information

00:04:52.267 --> 00:04:55.367
that meets
a particular criteria?

00:04:55.367 --> 00:04:58.033
Sharing--this is obviously
the big Google Docs

00:04:58.033 --> 00:05:01.000
kind of prime benefit

00:05:01.000 --> 00:05:03.234
in terms of being able to take
any piece of information

00:05:03.234 --> 00:05:05.701
and share it and collaborate it
and edit in real time.

00:05:05.701 --> 00:05:07.033
So how do I take advantage
of that?

00:05:07.033 --> 00:05:08.400
How do I work
with different people

00:05:08.400 --> 00:05:09.734
within the organization?

00:05:09.734 --> 00:05:12.267
How do I inter-operate
across different applications?

00:05:12.267 --> 00:05:14.567
And for any lawyers
in the crowd,

00:05:14.567 --> 00:05:16.467
legal discovery.

00:05:16.467 --> 00:05:18.534
Basically, how do I manage
situations

00:05:18.534 --> 00:05:20.300
where, perhaps
as an individual,

00:05:20.300 --> 00:05:22.167
I can get access
to my information,

00:05:22.167 --> 00:05:23.334
but as an organization,

00:05:23.334 --> 00:05:24.501
I need to be able
to get access

00:05:24.501 --> 00:05:27.200
to information
for all of my users.

00:05:27.200 --> 00:05:29.934
So if I'm being--
perhaps in a legal case

00:05:29.934 --> 00:05:32.000
or I'm being sued
by an organization,

00:05:32.000 --> 00:05:33.801
I need to find
all documents or spreadsheets

00:05:33.801 --> 00:05:36.634
or presentations or PDF
within my organization

00:05:36.634 --> 00:05:38.334
that meet a certain criteria.

00:05:38.334 --> 00:05:40.367
And this is
a really interesting use case

00:05:40.367 --> 00:05:42.968
of 2 Legged OAuth,
which we're going to talk about,

00:05:42.968 --> 00:05:44.868
which will really let you
almost impersonate

00:05:44.868 --> 00:05:47.300
the user to gather
information and data.

00:05:47.300 --> 00:05:48.868
So these are the five use cases

00:05:48.868 --> 00:05:50.400
that we're going to talk about
in detail today.

00:05:50.400 --> 00:05:52.634
Again, nice balance
across demonstrations

00:05:52.634 --> 00:05:54.133
as well as some code samples.

00:05:54.133 --> 00:05:56.667
But what I'd like to do
is I'd actually like to kick off

00:05:56.667 --> 00:05:58.734
with a couple of really cool
partner demonstrations.

00:05:58.734 --> 00:06:01.467
And the first one
is from Sandosh,

00:06:01.467 --> 00:06:03.467
who I'm going to invite to come
up here to the stage

00:06:03.467 --> 00:06:05.801
and give us a nice presentation
on a tool that he's developed

00:06:05.801 --> 00:06:07.367
called GDocsBar.

00:06:13.868 --> 00:06:15.567
Vasudevan:
Good afternoon, everyone.

00:06:15.567 --> 00:06:19.667
Um, first I'd like to thank
Anil and Eric for inviting me.

00:06:19.667 --> 00:06:21.400
It's good to be here,

00:06:21.400 --> 00:06:24.634
and I'd also like to thank
Manu for collaborating

00:06:24.634 --> 00:06:26.634
with me on this project.

00:06:26.634 --> 00:06:28.567
Um...

00:06:30.667 --> 00:06:34.367
So let's get to the demo.

00:06:34.367 --> 00:06:38.334
The idea behind the tool
was to shrink this UI

00:06:38.334 --> 00:06:42.367
into a simple,
and yet powerful interface

00:06:42.367 --> 00:06:46.501
to kind of, you know,
use Google Documents 

00:06:46.501 --> 00:06:48.133
in a better way.

00:06:48.133 --> 00:06:51.133
So it's a form
of a Firefox extension.

00:06:51.133 --> 00:06:53.767
It's a sidebar.

00:07:02.267 --> 00:07:04.000
There it is.

00:07:04.000 --> 00:07:06.267
So you can actually perform
most of the functions

00:07:06.267 --> 00:07:08.701
that you do
on docs.google.com

00:07:08.701 --> 00:07:10.467
using this tool.

00:07:10.467 --> 00:07:15.367
You could filter
the documents

00:07:15.367 --> 00:07:18.634
by various parameters--
own, open, start,

00:07:18.634 --> 00:07:20.234
private, hidden.

00:07:20.234 --> 00:07:23.701
You can also filter it
by document types,

00:07:23.701 --> 00:07:26.701
document presentations,
spreadsheet, PDF.

00:07:26.701 --> 00:07:31.868
And like Anil mentioned,
the few use cases

00:07:31.868 --> 00:07:35.634
that enterprise users required
or asked for

00:07:35.634 --> 00:07:39.133
was to migrate,
how to get documents inside

00:07:39.133 --> 00:07:41.400
and how to get documents
outside.

00:07:41.400 --> 00:07:43.000
So I'd like to demonstrate,

00:07:43.000 --> 00:07:47.334
how do we get documents
into Google Documents?

00:07:47.334 --> 00:07:52.267
You could start writing
a new document,

00:07:52.267 --> 00:07:54.133
or, you know, you could do
a new presentation

00:07:54.133 --> 00:07:55.734
or a spreadsheet.

00:07:55.734 --> 00:07:58.667
Let me go ahead
and do a new document.

00:08:03.934 --> 00:08:09.033
And you can also upload
documents, say...

00:08:21.501 --> 00:08:24.267
And they're
immediately available here.

00:08:24.267 --> 00:08:27.901
You can also drag and drop
to the sidebar,

00:08:27.901 --> 00:08:31.200
and it automatically
uploads for you.

00:08:31.200 --> 00:08:33.801
You could also do a search.

00:08:33.801 --> 00:08:38.901
You could search documents
by, let's say--test.

00:08:38.901 --> 00:08:42.234
This will actually search for
the contents of any documents.

00:08:42.234 --> 00:08:46.167
Unfortunately,
it's not found.

00:08:46.167 --> 00:08:50.334
So, uh, you could also do
a query by title.

00:08:50.334 --> 00:08:52.000
You can do an exact...

00:09:00.801 --> 00:09:05.801
Uh, no.
Let's do it like...

00:09:05.801 --> 00:09:07.501
There it is.

00:09:07.501 --> 00:09:12.701
And how do we get documents
out of docs.google.com?

00:09:12.701 --> 00:09:19.367
You could do an Export, say
"Save As" RTF, Word, or PDF,

00:09:19.367 --> 00:09:21.868
and also document type
specified.

00:09:21.868 --> 00:09:23.634
So if you go to Excel,

00:09:23.634 --> 00:09:28.200
you could save it as PDF,
CSV, or, you know,

00:09:28.200 --> 00:09:30.868
Tab Separated Data.

00:09:30.868 --> 00:09:34.567
And then you could
start it,

00:09:34.567 --> 00:09:39.300
or unstart it
right from gDocsBar.

00:09:39.300 --> 00:09:43.767
You could also
browse folders, say...

00:09:55.901 --> 00:09:58.868
And you can rename
a document.

00:10:03.367 --> 00:10:08.067
You could also do
a move to, you know, folders.

00:10:16.133 --> 00:10:19.467
And let's say you're working
on some project

00:10:19.467 --> 00:10:23.701
and you want to download that,
you know, various documents

00:10:23.701 --> 00:10:26.133
off the project
in just one click,

00:10:26.133 --> 00:10:27.300
you could do that.

00:10:27.300 --> 00:10:29.300
You could do a search
for documents

00:10:29.300 --> 00:10:31.434
that are part of the project,

00:10:31.434 --> 00:10:36.334
or you could go to Folders,
do a Select All

00:10:36.334 --> 00:10:37.534
and Download.

00:10:43.367 --> 00:10:45.667
So...

00:10:45.667 --> 00:10:48.934
Um, that's it.
That's a short demo of gDocsBar,

00:10:48.934 --> 00:10:50.501
and thanks again.

00:10:50.501 --> 00:10:53.567
[audience applauding]

00:10:56.367 --> 00:10:59.167
Sabharwal: Great.
Thank you, Sandosh.

00:10:59.167 --> 00:11:01.801
The next partner demonstration
that we're gonna do,

00:11:01.801 --> 00:11:04.367
I'm gona invite Ondrej
from Syncplicity

00:11:04.367 --> 00:11:05.701
to please join me up here.

00:11:05.701 --> 00:11:08.567
Sync is always something
that our customers

00:11:08.567 --> 00:11:10.000
are asking for us,

00:11:10.000 --> 00:11:11.734
and I think Ondrej
and the Syncplicity team

00:11:11.734 --> 00:11:13.067
have a great solution,

00:11:13.067 --> 00:11:15.267
and I encourage them
to tell us about it today.

00:11:15.267 --> 00:11:16.667
Hrebicek: Thank you, Anil.
Sabharwal: Thanks, Ondrej.

00:11:16.667 --> 00:11:18.100
Hrebicek: That was
a great demo, Sandosh.

00:11:18.100 --> 00:11:19.968
I've been using the gDocsBar
for a couple of days now,

00:11:19.968 --> 00:11:22.267
and it's working--
it's working great.

00:11:22.267 --> 00:11:23.801
Hello, everyone.
I'm Ondrej.

00:11:23.801 --> 00:11:26.534
I work for Syncplicity,
where I'm responsible for

00:11:26.534 --> 00:11:28.834
product and API design
and development.

00:11:28.834 --> 00:11:31.467
Syncplicity is a start-up
based here in San Francisco,

00:11:31.467 --> 00:11:33.467
looking for ways to make it
incredibly easy

00:11:33.467 --> 00:11:36.234
for people to share
and access their data.

00:11:36.234 --> 00:11:38.133
The basic premise
behind Syncplicity

00:11:38.133 --> 00:11:41.734
is that our folders and files
should always be accessible

00:11:41.734 --> 00:11:45.434
to us and to those we share
those files and folders with

00:11:45.434 --> 00:11:47.400
without even having to think
about it.

00:11:47.400 --> 00:11:49.000
And what we have done
at Syncplicity

00:11:49.000 --> 00:11:51.234
is built a file
synchronization platform

00:11:51.234 --> 00:11:52.868
that's exposed
as a web service

00:11:52.868 --> 00:11:55.501
and works together with our
lightweight desktop application

00:11:55.501 --> 00:11:58.601
to keep your
and your coworkers computers

00:11:58.601 --> 00:12:00.334
in sync.

00:12:00.334 --> 00:12:05.868
Um, however, we've also realized
that it's no longer enough

00:12:05.868 --> 00:12:09.801
to just have the latest copies
of your documents and photos

00:12:09.801 --> 00:12:12.934
instantly synchronized
to every computer.

00:12:12.934 --> 00:12:14.033
After all, that's not where

00:12:14.033 --> 00:12:16.234
you always need
those documents anymore.

00:12:16.234 --> 00:12:19.701
These days its web applications
like Google Docs

00:12:19.701 --> 00:12:21.801
that we've come
to increasingly rely on

00:12:21.801 --> 00:12:23.901
and where we need
our data just as much,

00:12:23.901 --> 00:12:26.334
if not more.

00:12:26.334 --> 00:12:28.367
Currently,
Syncplicity synchronizes

00:12:28.367 --> 00:12:30.067
hundreds of thousands
of documents

00:12:30.067 --> 00:12:31.934
between our users' desktops

00:12:31.934 --> 00:12:33.434
and their Google Docs
accounts.

00:12:33.434 --> 00:12:35.501
Some use us for two-way backup.

00:12:35.501 --> 00:12:38.033
Some use us to take
the opportunity

00:12:38.033 --> 00:12:41.100
to explore the online world
of Google Docs.

00:12:41.100 --> 00:12:42.868
But perhaps most interestingly,

00:12:42.868 --> 00:12:45.133
many use us to help
bridge the divide

00:12:45.133 --> 00:12:47.934
between the Microsoft Word
devotees

00:12:47.934 --> 00:12:49.400
and the Google Docs enthusiasts

00:12:49.400 --> 00:12:53.667
by letting both camps use
the tool they prefer the most.

00:12:53.667 --> 00:12:55.734
With Syncplicity, companies
no longer need to choose

00:12:55.734 --> 00:12:56.834
between one or the other.

00:12:56.834 --> 00:12:58.000
They can have both,

00:12:58.000 --> 00:12:59.534
and they can have Syncplicity
take care

00:12:59.534 --> 00:13:01.567
of all the complexities
on the back end.

00:13:01.567 --> 00:13:03.834
Complexities
like revision control,

00:13:03.834 --> 00:13:05.334
conflict resolution,

00:13:05.334 --> 00:13:08.534
and multi-machine
synchronization.

00:13:08.534 --> 00:13:11.133
So imagine Rachel,
a marketing manager

00:13:11.133 --> 00:13:16.501
who works for Syncplicity
and works on documents--

00:13:16.501 --> 00:13:18.467
on documents that we
publish to our website

00:13:18.467 --> 00:13:22.400
and documents that we publish
together with our service.

00:13:22.400 --> 00:13:25.000
Rachel knows
Microsoft Word very well

00:13:25.000 --> 00:13:26.534
and enjoys working with it.

00:13:26.534 --> 00:13:27.834
At the same time, however,

00:13:27.834 --> 00:13:30.367
she needs to share her documents
with other people.

00:13:30.367 --> 00:13:32.067
In this case, she needs
to share those documents

00:13:32.067 --> 00:13:35.701
with Isaac, our CTO, and
a long-time Google Docs user.

00:13:35.701 --> 00:13:38.234
Isaac uses Google Docs
exclusively,

00:13:38.234 --> 00:13:40.033
and he'd love to see
all of the documents

00:13:40.033 --> 00:13:43.534
he needs to interact with
right there in one place.

00:13:43.534 --> 00:13:45.801
So here's what they would do.

00:13:45.801 --> 00:13:51.868
So I'll pretend to be Rachel
for a few minutes.

00:13:51.868 --> 00:13:54.100
Um, Rachel keeps
all of her documents

00:13:54.100 --> 00:13:57.567
right here on her desktop
in a folder called Marketing.

00:13:57.567 --> 00:13:59.501
The folder is under
Syncplicity's control,

00:13:59.501 --> 00:14:01.601
and there are
two documents in it.

00:14:01.601 --> 00:14:04.567
Rachel also recently created
a Google Docs account...

00:14:07.267 --> 00:14:10.901
that has a few stock documents
inside of it.

00:14:10.901 --> 00:14:12.400
In order to keep
the Marketing folder

00:14:12.400 --> 00:14:15.133
and her Google Docs account
in sync,

00:14:15.133 --> 00:14:17.367
Rachel needs to link
her Syncplicity accounts

00:14:17.367 --> 00:14:18.634
to her Google Docs account.

00:14:18.634 --> 00:14:21.534
So let's do that right now.

00:14:26.501 --> 00:14:28.601
So Rachel will
log in to Syncplicity.

00:14:28.601 --> 00:14:31.400
She'll click
on the Applications tab...

00:14:31.400 --> 00:14:33.467
and she'll associate
her Google Docs account

00:14:33.467 --> 00:14:34.968
with her Syncplicity account.

00:14:38.367 --> 00:14:41.601
She'll grant access
to Syncplicity

00:14:41.601 --> 00:14:44.634
to her Google Docs account,
and she'll pick the folder

00:14:44.634 --> 00:14:45.934
that she wants to synchronize

00:14:45.934 --> 00:14:48.033
between her computer
and her Google Docs account.

00:14:48.033 --> 00:14:49.767
In this case,
it is the Marketing folder

00:14:49.767 --> 00:14:52.701
that I had mentioned
previously.

00:14:52.701 --> 00:14:55.601
At this point, Syncplicity
has recognized the link

00:14:55.601 --> 00:14:58.534
between her Syncplicity account
and Google Docs

00:14:58.534 --> 00:15:01.434
and begun synchronizing
the two together.

00:15:01.434 --> 00:15:02.868
What this means is that
all of the documents

00:15:02.868 --> 00:15:06.100
that she has in Google Docs
will sync right down to her PC,

00:15:06.100 --> 00:15:07.934
and all the documents on her PC

00:15:07.934 --> 00:15:10.167
will sync right back
to Google Docs.

00:15:10.167 --> 00:15:12.100
Perhaps most importantly,

00:15:12.100 --> 00:15:14.234
those two places
will now be kept in sync

00:15:14.234 --> 00:15:15.534
always and all the time.

00:15:15.534 --> 00:15:17.801
Any changes she makes
in either place

00:15:17.801 --> 00:15:20.901
will be immediately reflected
on the other side.

00:15:20.901 --> 00:15:24.100
When Syncplicity's all done,
it lets the user know,

00:15:24.100 --> 00:15:27.467
in this case displayed a little
balloon pop-up at the bottom,

00:15:27.467 --> 00:15:30.334
and the two stock documents
that we saw on Google Docs

00:15:30.334 --> 00:15:34.167
have magically appeared
right on her computer.

00:15:34.167 --> 00:15:35.567
Here they are.

00:15:35.567 --> 00:15:38.000
Let's now go back
to her Google Docs account

00:15:38.000 --> 00:15:40.133
and refresh,

00:15:40.133 --> 00:15:43.133
and the two documents
that she had on her PC

00:15:43.133 --> 00:15:44.801
are now
in her Google Docs account,

00:15:44.801 --> 00:15:48.501
and you can see that they were
uploaded right about now.

00:15:48.501 --> 00:15:50.601
The document that she'd
like to share with Isaac,

00:15:50.601 --> 00:15:52.934
and get feedback from on,

00:15:52.934 --> 00:15:54.767
is called Syncplicity FAQ.

00:15:54.767 --> 00:15:57.467
So let's go ahead
and share the document

00:15:57.467 --> 00:15:59.067
with Isaac.

00:16:06.067 --> 00:16:07.968
Okay, let's log out
of Rachel's account

00:16:07.968 --> 00:16:10.100
and log back
into Isaac's account.

00:16:17.901 --> 00:16:19.968
And, hopefully, the document
that Rachel shared with him

00:16:19.968 --> 00:16:23.100
is right here.
Let's go ahead and open it.

00:16:23.100 --> 00:16:24.667
And there it is.

00:16:24.667 --> 00:16:28.100
You can see that there's
actually a typo in the document.

00:16:28.100 --> 00:16:29.934
No problem.
We can correct that.

00:16:29.934 --> 00:16:32.434
So I'm going to close
the document,

00:16:32.434 --> 00:16:37.334
and now, being Rachel,
I'm going to go back to my PC,

00:16:37.334 --> 00:16:40.734
where I'm spending
most of my time on,

00:16:40.734 --> 00:16:43.667
and open the Syncplicity FAQ
document in Word.

00:16:51.701 --> 00:16:55.834
Give Word a few minutes
to load up.

00:16:55.834 --> 00:16:57.367
It's connecting to the printer.

00:16:57.367 --> 00:16:58.601
[audience laughing]

00:16:58.601 --> 00:17:00.734
[laughs]

00:17:03.334 --> 00:17:04.567
And here it is.

00:17:04.567 --> 00:17:08.267
So I'm going to go ahead
and make the change.

00:17:08.267 --> 00:17:11.734
I'll change "kwestions"
to "questions."

00:17:13.567 --> 00:17:17.834
As soon as Office
lets me in.

00:17:17.834 --> 00:17:21.100
What Syncplicity's going to do
as soon as I make the change

00:17:21.100 --> 00:17:24.767
and hit Save
is synchronize the document

00:17:24.767 --> 00:17:28.067
right back to Rachel's
Syncplicity account.

00:17:28.067 --> 00:17:29.601
Um, as soon as it gets there,

00:17:29.601 --> 00:17:31.467
it's going to be versioned
and backed up.

00:17:31.467 --> 00:17:33.067
Um, a few moments later,

00:17:33.067 --> 00:17:36.601
it will then be synced
right back to Google Docs.

00:17:36.601 --> 00:17:41.434
Um...and if Office...
if Office let me in--

00:17:41.434 --> 00:17:43.200
There we go.

00:17:43.200 --> 00:17:47.000
I think I can finally...
can finally edit it.

00:17:48.167 --> 00:17:50.367
Slowly, but surely.

00:17:52.868 --> 00:17:55.801
Um, and I save the document
and I close it.

00:17:55.801 --> 00:17:57.400
At this point,
like I had mentioned before,

00:17:57.400 --> 00:18:00.601
the document is being synced
to the cloud,

00:18:00.601 --> 00:18:03.767
first through Syncplicity
and then right to Google Docs.

00:18:03.767 --> 00:18:08.000
So let's go back to Google Docs,

00:18:08.000 --> 00:18:10.434
um, and Isaac's account again.

00:18:10.434 --> 00:18:13.367
I'll refresh
and open the document.

00:18:13.367 --> 00:18:15.467
Again, you can see
that the document

00:18:15.467 --> 00:18:18.300
is now correctly spelled
and everything looks great.

00:18:18.300 --> 00:18:20.501
Um, so that's
what Syncplicity does.

00:18:20.501 --> 00:18:23.133
This is one of the many things
that we do.

00:18:23.133 --> 00:18:25.634
Our website is at
www.syncplicity.com.

00:18:25.634 --> 00:18:26.801
Take a look at us.

00:18:26.801 --> 00:18:27.801
The whole Syncplicity team

00:18:27.801 --> 00:18:29.033
will be available
after the talk

00:18:29.033 --> 00:18:31.033
in case you have any questions.

00:18:31.033 --> 00:18:32.534
Um, and that's it for me.

00:18:32.534 --> 00:18:33.601
Thanks so much.

00:18:33.601 --> 00:18:40.801
[audience applauding]

00:18:40.801 --> 00:18:43.200
Bidelman: All right.
Hey, everybody.

00:18:43.200 --> 00:18:49.033
So let's dive into some code.

00:18:49.033 --> 00:18:51.567
So the protocol--
I think a number of you

00:18:51.567 --> 00:18:55.634
have probably used--
We have 14 or 15, 16

00:18:55.634 --> 00:18:57.267
Google Data APIs
at this point.

00:18:57.267 --> 00:19:00.167
The Analytics API
and the Maps Data API

00:19:00.167 --> 00:19:02.067
are some of the newer ones
that we just launched,

00:19:02.067 --> 00:19:04.100
um, you know, within the month.

00:19:04.100 --> 00:19:06.067
But the protocol itself
is fairly straightforward.

00:19:06.067 --> 00:19:08.267
We're just going to cover
the basics as a crash course.

00:19:08.267 --> 00:19:10.300
For those that are familiar,
this will be quick.

00:19:10.300 --> 00:19:11.834
For those that aren't,

00:19:11.834 --> 00:19:13.133
you're going to get
a lot of information here.

00:19:13.133 --> 00:19:15.868
So it's HTTP,
it's a REST base,

00:19:15.868 --> 00:19:17.000
the full CRUD model.

00:19:17.000 --> 00:19:19.601
You can read data,
you can also write data.

00:19:19.601 --> 00:19:22.334
Um, it extends
the Atom publishing protocol,

00:19:22.334 --> 00:19:24.834
so it's just Atom XML,
these are common protocols.

00:19:24.834 --> 00:19:26.067
If you're familiar with them
you know,

00:19:26.067 --> 00:19:27.467
you can pick up
one of these APIs

00:19:27.467 --> 00:19:31.033
and then use the same code,
same similar code

00:19:31.033 --> 00:19:32.801
across multiple APIs.

00:19:32.801 --> 00:19:34.234
And so what we do
a little differently

00:19:34.234 --> 00:19:38.234
is we extend the protocol
by having authentication,

00:19:38.234 --> 00:19:40.434
so that's important 'cause
you don't have to roll your own.

00:19:40.434 --> 00:19:42.467
You can use AuthSub,
you can use client log-in,

00:19:42.467 --> 00:19:43.934
or OAuth,
which is an open standard

00:19:43.934 --> 00:19:47.067
for authorizing
access to the web,

00:19:47.067 --> 00:19:48.400
We extend the data model.

00:19:48.400 --> 00:19:51.033
Here's my nifty laser pointer.

00:19:51.033 --> 00:19:52.434
It doesn't work.

00:19:52.434 --> 00:19:53.901
You can't see it.

00:19:53.901 --> 00:19:55.834
Extended data model,
so "lastModifiedBy"

00:19:55.834 --> 00:19:58.300
in the case of Google Docs,
you can see who's modified

00:19:58.300 --> 00:20:00.300
and when
they modified the document.

00:20:00.300 --> 00:20:01.667
We do batch operations

00:20:01.667 --> 00:20:04.300
so you can wrap up, you know,
a bunch of requests

00:20:04.300 --> 00:20:05.601
into one single feed,

00:20:05.601 --> 00:20:07.067
and then the server
will process that

00:20:07.067 --> 00:20:08.334
and send back
a response for you

00:20:08.334 --> 00:20:10.334
so you can save
some overhead there.

00:20:10.334 --> 00:20:12.467
And then lastly,
you can request responses

00:20:12.467 --> 00:20:14.000
from the server
in different formats,

00:20:14.000 --> 00:20:15.334
so you don't have to use
Atom XML

00:20:15.334 --> 00:20:16.701
if you're not comfortable
with it.

00:20:16.701 --> 00:20:18.734
I certainly don't
like XML myself.

00:20:18.734 --> 00:20:20.567
So you can do JSON
or JSON-IN-SCRIPT

00:20:20.567 --> 00:20:21.801
and provide a callback function

00:20:21.801 --> 00:20:24.267
if you're in
a JavaScript environment.

00:20:24.267 --> 00:20:26.300
And so that image, I think,
you know,

00:20:26.300 --> 00:20:27.334
pretty much explains it all.

00:20:27.334 --> 00:20:28.501
You know, we have the cloud,

00:20:28.501 --> 00:20:30.501
we have the APIs,
we can make mashups.

00:20:30.501 --> 00:20:33.534
We can do Contacts,
Calendar, Docs.

00:20:33.534 --> 00:20:35.868
We can do a multimedia app
like Picasa and YouTube.

00:20:35.868 --> 00:20:38.167
So the possibilities
are really endless.

00:20:38.167 --> 00:20:40.968
So under the hood,
what does it sort of look like?

00:20:40.968 --> 00:20:44.601
Um, you know, we're just making
get, puts, deletes,

00:20:44.601 --> 00:20:46.200
requests to the server.

00:20:46.200 --> 00:20:49.400
In this case, we're requesting
a user's list of documents.

00:20:49.400 --> 00:20:51.200
This is
an authenticated request.

00:20:51.200 --> 00:20:53.000
You see that
authorization header there.

00:20:53.000 --> 00:20:54.767
It's got a Auth/Sub token.

00:20:54.767 --> 00:20:58.667
We saw that sort of process
in the Syncplicity demo.

00:20:58.667 --> 00:21:00.834
So what you get back,
you get a 200 OK,

00:21:00.834 --> 00:21:02.834
and you get a bunch of XML.

00:21:02.834 --> 00:21:04.334
At its rawest form, you know,
you have a feed

00:21:04.334 --> 00:21:05.534
and then you have
a bunch of entries,

00:21:05.534 --> 00:21:07.667
each entry being a document.

00:21:07.667 --> 00:21:09.267
And there's
a bunch of metadata there.

00:21:09.267 --> 00:21:12.234
We'll take a look
at that in a sec.

00:21:12.234 --> 00:21:14.634
So if you don't want to use XML,
if you don't want to use,

00:21:14.634 --> 00:21:16.100
you know, HTTP,
you don't have to.

00:21:16.100 --> 00:21:17.601
I wouldn't choose to do that.

00:21:17.601 --> 00:21:20.234
So we do offer
a number of client libraries,

00:21:20.234 --> 00:21:22.567
and there's
sample applications available

00:21:22.567 --> 00:21:24.400
so you can get up
and running very quickly.

00:21:24.400 --> 00:21:26.567
And they just provide
a higher level API.

00:21:26.567 --> 00:21:28.467
They handle some
of the complexities

00:21:28.467 --> 00:21:30.734
of the token management
and making the raw calls,

00:21:30.734 --> 00:21:32.801
and there's a lot
of great helper functions there.

00:21:32.801 --> 00:21:34.334
There's also
a JavaScript client library

00:21:34.334 --> 00:21:35.801
that's not up there,

00:21:35.801 --> 00:21:37.934
and that's both a read
and write client that you can...

00:21:37.934 --> 00:21:41.300
It uses it's
own cross-domain communication.

00:21:41.300 --> 00:21:43.167
So the first, um...

00:21:43.167 --> 00:21:46.234
First enterprise scenario that
Anil mentioned was migration.

00:21:46.234 --> 00:21:47.234
And so this is
an important one.

00:21:47.234 --> 00:21:48.334
You're gonna want to sync

00:21:48.334 --> 00:21:50.968
your local client
to the cloud, right?

00:21:50.968 --> 00:21:53.033
And then you want to be able to
get those documents back out,

00:21:53.033 --> 00:21:54.734
those files back out.

00:21:54.734 --> 00:21:57.634
And so the Documents List API,
as Anil mentioned,

00:21:57.634 --> 00:21:59.167
provides document creation.

00:21:59.167 --> 00:22:01.501
You saw that also
in the gDocsBar demo.

00:22:01.501 --> 00:22:02.767
You can create documents.

00:22:02.767 --> 00:22:03.934
You can create folders,

00:22:03.934 --> 00:22:05.300
so you can preserve
the folder hierarchy,

00:22:05.300 --> 00:22:06.534
between the two clients,

00:22:06.534 --> 00:22:09.534
between the online version
and the offline version.

00:22:09.534 --> 00:22:11.701
So just a simple example here.

00:22:11.701 --> 00:22:15.200
We're making a post request
to that same documents list URL.

00:22:15.200 --> 00:22:16.834
You know, it's authorized.

00:22:16.834 --> 00:22:18.601
We'll probably need
an AuthSub token there,

00:22:18.601 --> 00:22:20.868
and then we're just creating
a simple Atom entry

00:22:20.868 --> 00:22:23.534
and creating a category
that's a folder,

00:22:23.534 --> 00:22:24.634
of a type folder,

00:22:24.634 --> 00:22:26.367
and then calling it
Example folder.

00:22:26.367 --> 00:22:28.667
So if all goes well,
that folder should be created

00:22:28.667 --> 00:22:31.868
within our documents list.

00:22:31.868 --> 00:22:35.167
Uploading content is
a little more involved, right?

00:22:35.167 --> 00:22:37.133
'Cause you're creating
a document the same time

00:22:37.133 --> 00:22:39.300
you're actually putting content
into the document,

00:22:39.300 --> 00:22:42.267
so this is
a MIME multipart request.

00:22:42.267 --> 00:22:43.934
So it's the same process
as before.

00:22:43.934 --> 00:22:45.634
You know,
it's an authenticated call.

00:22:45.634 --> 00:22:47.334
Same feed: URI.

00:22:47.334 --> 00:22:51.000
But instead of just creating
that example document,

00:22:51.000 --> 00:22:54.367
we're actually appending
Microsoft Word content there.

00:22:54.367 --> 00:22:56.100
And instead of using
the folder category,

00:22:56.100 --> 00:22:58.534
we're using a document category.

00:22:58.534 --> 00:23:00.234
So fairly straightforward,
same process.

00:23:00.234 --> 00:23:02.400
Again, the client libraries
handle all this for you,

00:23:02.400 --> 00:23:03.968
so I encourage you
to check them out.

00:23:03.968 --> 00:23:05.667
I'm actually
gonna skip this demo

00:23:05.667 --> 00:23:06.901
in the interest of time.

00:23:06.901 --> 00:23:08.067
We have a lot to cover.

00:23:08.067 --> 00:23:10.000
But you saw some
of this export functionality

00:23:10.000 --> 00:23:11.968
in the gDocsBar sample.

00:23:11.968 --> 00:23:15.067
This is actually contributed
by a third-party developer

00:23:15.067 --> 00:23:16.067
on one of our forums.

00:23:16.067 --> 00:23:17.467
It's open source.

00:23:17.467 --> 00:23:19.033
It uses
our .net client library.

00:23:19.033 --> 00:23:20.300
Do check it out.

00:23:20.300 --> 00:23:21.834
And basically what it does,
it just allows you

00:23:21.834 --> 00:23:23.734
to back up
your entire Google Docs

00:23:23.734 --> 00:23:24.968
to your local machine,

00:23:24.968 --> 00:23:27.267
and you can specify what type
of export format

00:23:27.267 --> 00:23:28.767
you choose
for each different type,

00:23:28.767 --> 00:23:31.334
whether it's document,
presentation, spreadsheet.

00:23:34.901 --> 00:23:37.334
So, how is that done?

00:23:37.334 --> 00:23:40.434
We have an export servlet
that's relatively new,

00:23:40.434 --> 00:23:43.501
so you can always, you know,
your files up in the cloud,

00:23:43.501 --> 00:23:44.901
but you can
never really get them out,

00:23:44.901 --> 00:23:46.234
unless you're viewing them
in Google Docs

00:23:46.234 --> 00:23:47.400
or exporting them manually.

00:23:47.400 --> 00:23:49.701
So now you can do that
programmatically.

00:23:49.701 --> 00:23:51.901
And so the documents
and presentations,

00:23:51.901 --> 00:23:53.834
each have
their own export servlet,

00:23:53.834 --> 00:23:56.033
and then the spreadsheets
also has its own.

00:23:56.033 --> 00:24:00.133
And all you really do is
reference the type of document

00:24:00.133 --> 00:24:02.534
and the I.D. of the document

00:24:02.534 --> 00:24:03.868
and the format
you want to export in.

00:24:03.868 --> 00:24:04.934
And as you can see there,

00:24:04.934 --> 00:24:06.534
we have a number
of different formats,

00:24:06.534 --> 00:24:09.501
ranging from
the open office formats

00:24:09.501 --> 00:24:11.767
to the Microsoft formats

00:24:11.767 --> 00:24:15.000
and ZIP, TXT,
what have you.

00:24:15.000 --> 00:24:18.968
So sync.
Sync is a hard one.

00:24:18.968 --> 00:24:20.734
Um, Syncplicity's
done a great job.

00:24:20.734 --> 00:24:22.100
You saw some of that,

00:24:22.100 --> 00:24:25.300
and maybe you can ask them
how they did it after this.

00:24:25.300 --> 00:24:28.901
But you can imagine setting up
some kind of cron job

00:24:28.901 --> 00:24:31.834
or whatnot to back up
your local machine every night.

00:24:31.834 --> 00:24:35.868
Um, and just as simple example,
using Python client library,

00:24:35.868 --> 00:24:37.934
you know,
that five lines of code,

00:24:37.934 --> 00:24:39.868
not including
that import statement there.

00:24:39.868 --> 00:24:41.834
So we're setting up
a doc service.

00:24:41.834 --> 00:24:43.200
With any
of the client libraries,

00:24:43.200 --> 00:24:44.901
you're going to typically set up
a service object,

00:24:44.901 --> 00:24:46.601
you're gonna pass it,

00:24:46.601 --> 00:24:48.667
you know,
your application's name.

00:24:48.667 --> 00:24:52.033
You're going to do some kind
of authentication if needed.

00:24:52.033 --> 00:24:54.701
In this case, your documents
are all private,

00:24:54.701 --> 00:24:56.434
so you're going to need
to authenticate.

00:24:56.434 --> 00:24:58.834
And then you just reference
amedia source--

00:24:58.834 --> 00:25:00.234
maybe it's an Apache log

00:25:00.234 --> 00:25:03.000
that you're uploading to
your Google Docs every night--

00:25:03.000 --> 00:25:04.934
the content type,

00:25:04.934 --> 00:25:07.300
and just call one of the helper
functions Upload Document.

00:25:07.300 --> 00:25:08.701
So it's literally
that easy,

00:25:08.701 --> 00:25:10.734
in, you know,
five or six lines of code here

00:25:10.734 --> 00:25:12.467
to back up all your docs.

00:25:12.467 --> 00:25:14.000
And in this case,
we're just printing

00:25:14.000 --> 00:25:16.133
the document that was uploaded,
its title,

00:25:16.133 --> 00:25:17.133
and then the alternate link,

00:25:17.133 --> 00:25:18.467
which is the link
to Google Docs,

00:25:18.467 --> 00:25:23.300
so you can open that up
in a web browser.

00:25:23.300 --> 00:25:25.901
So we have
a more advanced query model

00:25:25.901 --> 00:25:27.400
than we used to.

00:25:27.400 --> 00:25:30.567
Um, you know, we support
the Google Data standard proto--

00:25:30.567 --> 00:25:32.901
Excuse me, the Google Data
standard query model,

00:25:32.901 --> 00:25:35.100
which is
q for full-text search,

00:25:35.100 --> 00:25:37.367
you can search by title,
by author,

00:25:37.367 --> 00:25:39.634
by the updated time stamps,

00:25:39.634 --> 00:25:42.167
and start-indexes used
for pagination.

00:25:42.167 --> 00:25:43.934
But we also have
some other stuff

00:25:43.934 --> 00:25:46.334
that's, you know,
specific to Google Docs.

00:25:46.334 --> 00:25:48.801
Here's a few examples.
I hope you can see them.

00:25:48.801 --> 00:25:50.734
The first one, you know,
let me just query

00:25:50.734 --> 00:25:53.467
all my documents updated
within this minimum time frame,

00:25:53.467 --> 00:25:54.934
and then order them by title,

00:25:54.934 --> 00:25:56.667
so you can do some kind
of syncing that way.

00:25:56.667 --> 00:25:58.601
Query the documents,
maybe store them locally,

00:25:58.601 --> 00:26:00.067
and then make modifications,

00:26:00.067 --> 00:26:01.701
re-upload them to the cloud.

00:26:01.701 --> 00:26:04.734
You know,
you can use category, um...

00:26:04.734 --> 00:26:06.634
I'm sorry. I guess you can
sort of see this now.

00:26:06.634 --> 00:26:08.167
So you can use category queries.

00:26:08.167 --> 00:26:10.200
Give me all my documents
or spreadsheets,

00:26:10.200 --> 00:26:13.300
and also documents
or spreadsheets

00:26:13.300 --> 00:26:14.767
the user has not viewed,

00:26:14.767 --> 00:26:17.033
so you can see that maybe
you upload an HR packet

00:26:17.033 --> 00:26:18.934
to your users
using 2 Legged OAuth,

00:26:18.934 --> 00:26:20.467
as we'll see in a second,

00:26:20.467 --> 00:26:23.467
and see if they've
actually viewed the thing.

00:26:23.467 --> 00:26:27.167
So give me all my PDFs
that I own,

00:26:27.167 --> 00:26:28.734
and they're also shared
with the domain.

00:26:28.734 --> 00:26:30.133
So if you're
in a Google Apps domain,

00:26:30.133 --> 00:26:32.267
you can do
some special queries there.

00:26:32.267 --> 00:26:34.501
You can query on folders,
you can query on writers.

00:26:34.501 --> 00:26:36.901
You know, "Give me the results
in JSON,"

00:26:36.901 --> 00:26:38.734
so you don't have to use XML.

00:26:38.734 --> 00:26:40.067
So you can do
a bunch of different stuff.

00:26:40.067 --> 00:26:41.734
Once your data
is in Google Docs,

00:26:41.734 --> 00:26:43.100
you can use the API
to pretty much,

00:26:43.100 --> 00:26:45.934
you know, get it out
anytime you want.

00:26:45.934 --> 00:26:48.567
So at its basic level,
here's what you get.

00:26:48.567 --> 00:26:51.634
You get a list of entries
in a feed

00:26:51.634 --> 00:26:54.200
and with a bunch of metadata
for each type of document.

00:26:54.200 --> 00:26:56.634
So let's take
a closer look at that.

00:26:56.634 --> 00:26:58.968
So we have
special categories, right?

00:26:58.968 --> 00:27:01.200
We talked about
that "viewed" category.

00:27:01.200 --> 00:27:04.534
So this particular document
has been viewed by the user,

00:27:04.534 --> 00:27:06.267
because there's
a "viewed" category.

00:27:06.267 --> 00:27:08.300
We know what type it is.
It's a document.

00:27:08.300 --> 00:27:10.033
There's
a document category there.

00:27:10.033 --> 00:27:11.667
We know
if it's in a folder or not.

00:27:11.667 --> 00:27:15.300
In this case it's
in a folder named ChildFolder.

00:27:18.434 --> 00:27:20.501
We have the common set
of Google Data links.

00:27:20.501 --> 00:27:22.834
The "alternate" link
is the one that we mentioned

00:27:22.834 --> 00:27:24.067
that points to Google Docs.

00:27:24.067 --> 00:27:26.000
You can open that up
in a web browser.

00:27:26.000 --> 00:27:27.234
We have the "self" link

00:27:27.234 --> 00:27:28.767
that references
this particular entry.

00:27:28.767 --> 00:27:30.100
And then we have
the "edit" links,

00:27:30.100 --> 00:27:31.968
which you can use
to actually modify the content,

00:27:31.968 --> 00:27:34.601
so the "edit" link being
the one you use to modify it.

00:27:34.601 --> 00:27:36.334
Metadata, such as the title--

00:27:36.334 --> 00:27:38.934
Excuse me.
"Edit-media" is the one

00:27:38.934 --> 00:27:42.601
you use to update content.

00:27:42.601 --> 00:27:45.133
Lastly, we have sort of
a section of special attributes

00:27:45.133 --> 00:27:47.767
for the Google Docs API.

00:27:47.767 --> 00:27:49.300
We have
a particular resource I.D.

00:27:49.300 --> 00:27:52.434
You can use that for the export
servlet that we talked about.

00:27:52.434 --> 00:27:54.534
You know who's modified
the last document,

00:27:54.534 --> 00:27:58.434
when it was last viewed,
these two here.

00:27:58.434 --> 00:28:01.234
And there's another one here,
"writersCanInvite,"

00:28:01.234 --> 00:28:06.200
so you can--This is analogous
to the Google Docs, um...

00:28:06.200 --> 00:28:08.701
When you share a document
as a collaborator,

00:28:08.701 --> 00:28:10.067
you can prevent them
from sharing it

00:28:10.067 --> 00:28:11.601
with further collaborators,

00:28:11.601 --> 00:28:13.701
and so you can prevent that
actually using API now

00:28:13.701 --> 00:28:15.934
by setting this
to "true" or "false."

00:28:15.934 --> 00:28:18.300
This last one here
is the feedLink

00:28:18.300 --> 00:28:21.167
to the ACL feed, and we'll talk
about sharing in a bit.

00:28:24.300 --> 00:28:28.801
Before that, we're gonna see
a really cool demo.

00:28:28.801 --> 00:28:30.300
So the DocList Manager

00:28:30.300 --> 00:28:32.834
was intended
as a sample application.

00:28:32.834 --> 00:28:34.801
It's written in Ruby on Rails

00:28:34.801 --> 00:28:37.267
You know, it provides
all the Rails/AJAX goodness.

00:28:37.267 --> 00:28:39.968
Um, and it uses a colleague's
utility library.

00:28:39.968 --> 00:28:43.400
It's all open source.
Those two are URLs there.

00:28:43.400 --> 00:28:45.400
And it demonstrates some
of the things we talked about

00:28:45.400 --> 00:28:47.033
and we saw in gDocsBar
and Syncplicity.

00:28:47.033 --> 00:28:48.367
We have category queries.

00:28:48.367 --> 00:28:49.901
We can use the export feed.

00:28:49.901 --> 00:28:52.634
It's also a mashup
between calendar--

00:28:52.634 --> 00:28:56.000
Excuse me, contacts
and spreadsheets and documents.

00:28:56.000 --> 00:29:01.067
So let's pop over there.

00:29:01.067 --> 00:29:04.868
Before I do that,
I just want to...

00:29:04.868 --> 00:29:06.400
If you haven't seen
Google Code Samples,

00:29:06.400 --> 00:29:07.567
I highly recommend it.

00:29:07.567 --> 00:29:09.634
It's got all
of our library samples

00:29:09.634 --> 00:29:11.968
and all the sources
on the side there.

00:29:11.968 --> 00:29:14.033
You can run these.
These are all live samples.

00:29:14.033 --> 00:29:15.634
So do check it out,

00:29:15.634 --> 00:29:18.634
and the DocList Manager
is indeed there.

00:29:18.634 --> 00:29:21.334
So the first thing you do
is authorize this website.

00:29:21.334 --> 00:29:23.367
And we'll do that using AuthSub

00:29:23.367 --> 00:29:27.200
in the same fashion
you saw in the previous demo.

00:29:27.200 --> 00:29:30.734
The user chooses which account.

00:29:30.734 --> 00:29:32.667
Looks like I've been logged out.

00:29:38.367 --> 00:29:41.334
So the user's presented
with the list of scopes,

00:29:41.334 --> 00:29:42.968
the list of APIs
that we'll be accessing,

00:29:42.968 --> 00:29:44.968
so we know exactly what
this application's going to do.

00:29:44.968 --> 00:29:48.667
We'll grant access,
'cause I do trust it.

00:29:48.667 --> 00:29:50.100
So we come back to the page,

00:29:50.100 --> 00:29:51.801
and you see I just did
an immediate query

00:29:51.801 --> 00:29:53.567
for, you know, my list
of documents that I own,

00:29:53.567 --> 00:29:55.667
so I have just two,
unfortunately.

00:29:55.667 --> 00:29:57.934
But we can do the same
for spreadsheets.

00:29:57.934 --> 00:29:59.801
You know, we can
drill down in folders,

00:29:59.801 --> 00:30:03.234
seeing the folder structure
of our documents list.

00:30:03.234 --> 00:30:05.067
And so this server shows you

00:30:05.067 --> 00:30:06.467
that you can
use the API, uh...

00:30:06.467 --> 00:30:08.100
you know, it's very verbose,

00:30:08.100 --> 00:30:11.167
so you can literally rewrite
the Google Docs UI if you want.

00:30:11.167 --> 00:30:12.634
And so just click
on one of these, you know,

00:30:12.634 --> 00:30:15.400
I'm presenting that metadata
we just took a look at.

00:30:15.400 --> 00:30:17.100
The doc I.D., the title,

00:30:17.100 --> 00:30:18.968
you know,
"last updated" and whatnot.

00:30:18.968 --> 00:30:20.634
Um, this preview image here

00:30:20.634 --> 00:30:22.167
is actually just using
the export feed.

00:30:22.167 --> 00:30:24.567
We're just exporting
as a PNG file

00:30:24.567 --> 00:30:26.067
and just presenting that
to the user.

00:30:26.067 --> 00:30:29.300
You can also choose
to export this document.

00:30:32.467 --> 00:30:34.567
It's not as interesting
as a TXT file,

00:30:34.567 --> 00:30:38.167
but you can see it did work.

00:30:38.167 --> 00:30:39.534
Here's the alternate link

00:30:39.534 --> 00:30:41.367
that'll take us
to Google Docs if I choose.

00:30:41.367 --> 00:30:43.868
I did mention
this is a mashup with context,

00:30:43.868 --> 00:30:46.267
so it's getting
a little cramped there,

00:30:46.267 --> 00:30:48.067
but what I did here
is I just queried the user's,

00:30:48.067 --> 00:30:50.300
the sharing permissions
for this particular document,

00:30:50.300 --> 00:30:54.601
so I can actually add
user one here as a writer.

00:31:00.400 --> 00:31:02.434
So he's there.

00:31:02.434 --> 00:31:03.934
So just a great example.

00:31:03.934 --> 00:31:06.133
I think this took me probably,
you know, a week or something.

00:31:06.133 --> 00:31:07.601
Um, not very much time at all,

00:31:07.601 --> 00:31:09.267
and using
the API's functionality,

00:31:09.267 --> 00:31:10.767
you really can accomplish a lot.

00:31:18.667 --> 00:31:21.901
So we talked about--
Anil mentioned that we'd focus

00:31:21.901 --> 00:31:23.667
mainly on
the Documents List API,

00:31:23.667 --> 00:31:25.400
but, you know, we wouldn't be

00:31:25.400 --> 00:31:26.434
building applications
in the cloud

00:31:26.434 --> 00:31:27.767
if we didn't see
some other ones.

00:31:27.767 --> 00:31:31.167
In the Contacts API, we just saw
spreadsheets and whatnot.

00:31:31.167 --> 00:31:33.634
Um, so Spreadsheets,
actually today,

00:31:33.634 --> 00:31:36.667
they have office hours
from 2:00 to 3:00.

00:31:36.667 --> 00:31:39.033
I highly recommend going.
They're gonna--

00:31:39.033 --> 00:31:41.934
They're actually rolling out
some new APIs today

00:31:41.934 --> 00:31:44.400
that you can check out
and learn from them.

00:31:44.400 --> 00:31:46.267
It's gonna make it more...

00:31:46.267 --> 00:31:48.100
If anybody is familiar
with the Spreadsheets API,

00:31:48.100 --> 00:31:50.200
it's going to make more
feel like SQL.

00:31:50.200 --> 00:31:51.968
It's got a better query model.

00:31:51.968 --> 00:31:54.067
And of course you can use
the Spreadsheets Gadgets API

00:31:54.067 --> 00:31:55.334
for those that are familiar,

00:31:55.334 --> 00:31:56.968
you can visualize your data
within spreadsheets,

00:31:56.968 --> 00:31:58.934
creating a gadget,
which is really cool.

00:31:58.934 --> 00:32:02.234
Um, so check that out
2:00 to 3:00 today,

00:32:02.234 --> 00:32:04.100
in the Google Data
office hours.

00:32:04.100 --> 00:32:06.934
The fourth use case
was sharing in ACLs.

00:32:06.934 --> 00:32:09.334
This is the big selling point
of Google Docs, right?

00:32:09.334 --> 00:32:10.701
You can collaborate
in the cloud.

00:32:10.701 --> 00:32:13.434
You saw in the last sample
that you can...

00:32:13.434 --> 00:32:15.534
you can add users
using the API.

00:32:15.534 --> 00:32:17.901
So let's explain
sort of how that's done.

00:32:17.901 --> 00:32:21.501
There's that feedLink,
which is on every document.

00:32:21.501 --> 00:32:23.200
It's the list
of sharing permissions,

00:32:23.200 --> 00:32:24.534
and if you just query that,

00:32:24.534 --> 00:32:26.934
what you'll get is a list
of the different users

00:32:26.934 --> 00:32:28.734
that have been
added to that document.

00:32:28.734 --> 00:32:30.267
So what you can do,
you can add--

00:32:30.267 --> 00:32:31.434
same thing you can do
in Google Docs, right?

00:32:31.434 --> 00:32:33.234
You can add owners,
you can add writers,

00:32:33.234 --> 00:32:34.767
collaborators
as they're called,

00:32:34.767 --> 00:32:36.434
uh, readers.

00:32:36.434 --> 00:32:37.701
If you're
on a Google Apps domain,

00:32:37.701 --> 00:32:39.100
you can add everyone
to that domain.

00:32:39.100 --> 00:32:41.267
You can share that document
across the domain.

00:32:41.267 --> 00:32:42.968
There's batch support
supported in this,

00:32:42.968 --> 00:32:45.267
so if you're adding 25 users,
you know,

00:32:45.267 --> 00:32:48.033
from a Google IO event
that you just met

00:32:48.033 --> 00:32:49.267
and you want to share
this document,

00:32:49.267 --> 00:32:50.400
you don't have to do that
one by one.

00:32:50.400 --> 00:32:51.400
You can save yourself

00:32:51.400 --> 00:32:53.067
a little bit
of bandwidth there.

00:32:53.067 --> 00:32:55.767
And lastly there's
that "writersCanInvite" flag

00:32:55.767 --> 00:32:57.501
that you can set,
so that you can prevent

00:32:57.501 --> 00:32:58.934
even further sharing
of that document.

00:32:58.934 --> 00:33:00.267
Maybe you don't want
the collaborator--

00:33:00.267 --> 00:33:02.000
You know, you want
the collaborator

00:33:02.000 --> 00:33:03.667
to edit the document,
but not necessarily share that

00:33:03.667 --> 00:33:05.834
with someone else.

00:33:05.834 --> 00:33:06.968
And just as a tip,

00:33:06.968 --> 00:33:09.200
you can actually,
instead of querying

00:33:09.200 --> 00:33:10.467
the documents list feed,

00:33:10.467 --> 00:33:11.734
you can use
a different projection,

00:33:11.734 --> 00:33:14.434
which is expand ACL,
and now actually inline

00:33:14.434 --> 00:33:17.133
the ACL feed with inside
of the documents list,

00:33:17.133 --> 00:33:18.667
so you get all
of that information

00:33:18.667 --> 00:33:20.801
that we looked at
in the documents list feed,

00:33:20.801 --> 00:33:23.334
but you also get
the ACL information as well.

00:33:23.334 --> 00:33:24.601
So that'll save you
a little overhead.

00:33:24.601 --> 00:33:26.367
It might be
information overkill,

00:33:26.367 --> 00:33:29.033
but just a tip.

00:33:29.033 --> 00:33:31.501
So at the very
bare bones level here,

00:33:31.501 --> 00:33:33.801
this is what it looks like.
It's just another Atom entry,

00:33:33.801 --> 00:33:37.100
if we're doing a get
to that ACL feed.

00:33:37.100 --> 00:33:39.701
The two important ones here
are the ACL:roll, right?

00:33:39.701 --> 00:33:41.033
And the ACL:scope.

00:33:41.033 --> 00:33:44.300
So you know what type
it is,

00:33:44.300 --> 00:33:47.033
so it's a user in this case,
a.reader@example.com,

00:33:47.033 --> 00:33:49.167
and he's been set,
or she has been set

00:33:49.167 --> 00:33:50.734
to be a reader
on this document.

00:33:50.734 --> 00:33:52.033
Of course, a writer
would be a writer

00:33:52.033 --> 00:33:54.234
and an owner
would be an owner.

00:33:54.234 --> 00:33:56.734
And so you can imagine
using this,

00:33:56.734 --> 00:33:58.868
you know, looping through
these different ACL entries

00:33:58.868 --> 00:34:00.200
for some kind of discovery,

00:34:00.200 --> 00:34:01.601
so you can discover documents

00:34:01.601 --> 00:34:03.033
that maybe
have been shared outside

00:34:03.033 --> 00:34:04.567
of your Google Apps domain.

00:34:04.567 --> 00:34:06.734
Maybe they've been shared
with otherguys.com.

00:34:06.734 --> 00:34:08.400
So you can
quickly find documents 

00:34:08.400 --> 00:34:11.300
that you don't want shared
outside of your company.

00:34:11.300 --> 00:34:13.701
I'm going to turn it
back over to Anil.

00:34:13.701 --> 00:34:14.934
He's going to talk
about 2 Legged OAuth

00:34:14.934 --> 00:34:17.067
and discovery.

00:34:17.067 --> 00:34:20.767
Sabharwal: Great.
Thanks, sir.

00:34:20.767 --> 00:34:22.234
So one of the great things
that you get

00:34:22.234 --> 00:34:26.467
with the gData APIs for free
is 2 Legged OAuth,

00:34:26.467 --> 00:34:29.367
and basically this allows you
to, as I described earlier,

00:34:29.367 --> 00:34:31.267
effectively impersonate
the user.

00:34:31.267 --> 00:34:33.601
So imagine a scenario
in your organization

00:34:33.601 --> 00:34:39.067
where you have, um...
you have a legal case

00:34:39.067 --> 00:34:42.234
where the organization
is going to court

00:34:42.234 --> 00:34:45.334
over a situation where
you now need to go and find out

00:34:45.334 --> 00:34:47.634
who within your organization
has ever talked

00:34:47.634 --> 00:34:50.701
about the company ABC.

00:34:50.701 --> 00:34:53.467
Now, you can get
every single one of your users

00:34:53.467 --> 00:34:55.033
to go through
and do a query

00:34:55.033 --> 00:34:56.968
and find the information,
then pass it to you,

00:34:56.968 --> 00:34:59.100
or, with 2 Legged OAuth,
you can actually go in

00:34:59.100 --> 00:35:03.601
as the enterprise admin
with the consumer secret key

00:35:03.601 --> 00:35:05.667
and be able
to actually go through

00:35:05.667 --> 00:35:08.501
every one of those things
just as an administrator.

00:35:08.501 --> 00:35:10.200
And it requires
no user intervention.

00:35:10.200 --> 00:35:13.267
It doesn't require the users to
actually give that permission.

00:35:13.267 --> 00:35:15.534
It allows you just to go in
there and get that information.

00:35:15.534 --> 00:35:17.767
And there's
a number of different things

00:35:17.767 --> 00:35:19.234
that you can do with it,
as we described.

00:35:19.234 --> 00:35:21.701
You can do it to modify
the actual user permissions

00:35:21.701 --> 00:35:23.200
across documents.

00:35:23.200 --> 00:35:25.167
If someone has gone ahead
and shared a document

00:35:25.167 --> 00:35:27.100
that's confidential
outside the domain

00:35:27.100 --> 00:35:28.834
and you need to pull that back,

00:35:28.834 --> 00:35:30.000
you have the ability
to go in there

00:35:30.000 --> 00:35:31.701
and be able
to change those permissions,

00:35:31.701 --> 00:35:34.734
be able to see who's looked
at a particular document,

00:35:34.734 --> 00:35:38.133
be able to actually add
and update company contacts,

00:35:38.133 --> 00:35:40.367
set calendar reminders,
upload documents

00:35:40.367 --> 00:35:42.467
into different people's accounts
for induction.

00:35:42.467 --> 00:35:44.434
There's a number of use cases
where 2 Legged OAuth

00:35:44.434 --> 00:35:45.701
comes into play.

00:35:45.701 --> 00:35:48.834
One of the ones
that we often get asked about

00:35:48.834 --> 00:35:51.767
on the enterprise side
has to do with legal discovery.

00:35:51.767 --> 00:35:57.801
And as an example, we built
a AppEngine application here,

00:35:57.801 --> 00:36:00.167
where very quickly and simply,

00:36:00.167 --> 00:36:02.767
using the Google
Documents List API,

00:36:02.767 --> 00:36:03.968
you actually have the ability

00:36:03.968 --> 00:36:06.300
to pull up
an advanced query model,

00:36:06.300 --> 00:36:07.901
where you can come in
and you can type in

00:36:07.901 --> 00:36:10.634
a series of criteria
that you want to refine

00:36:10.634 --> 00:36:13.200
your search based on,
including things like

00:36:13.200 --> 00:36:16.934
exact title search
or containing the words,

00:36:16.934 --> 00:36:18.634
how it's being shared,
whether it's private,

00:36:18.634 --> 00:36:20.067
where it's shared
outside the domain,

00:36:20.067 --> 00:36:21.267
who it's shared with,

00:36:21.267 --> 00:36:22.567
who the collaborators are,

00:36:22.567 --> 00:36:25.167
the dates associated
with that query,

00:36:25.167 --> 00:36:28.067
and then, of course, who
particularly owns that query,

00:36:28.067 --> 00:36:31.968
so you'll see,
I'll run this query here.

00:36:31.968 --> 00:36:34.267
This is just off a sample domain
that we've created

00:36:34.267 --> 00:36:36.334
for the purposes
of this demonstration.

00:36:36.334 --> 00:36:39.567
And what that's going to do is
it's actually going to through,

00:36:39.567 --> 00:36:41.934
and it's going to look
at this individual,

00:36:41.934 --> 00:36:44.968
this custodian,
spambox@meviews.com,

00:36:44.968 --> 00:36:46.767
and it's going to go in
and try to find

00:36:46.767 --> 00:36:49.901
all documents that meet
that person's criteria.

00:36:49.901 --> 00:36:51.501
Sorry. I don't think
I pressed that button.

00:36:51.501 --> 00:36:54.868
Um, and what will happen is
it will actually appear

00:36:54.868 --> 00:36:56.834
here with the information saying
that I've requested it.

00:36:56.834 --> 00:36:58.033
Here's the information,

00:36:58.033 --> 00:36:59.434
here's the documents
that are returned.

00:36:59.434 --> 00:37:01.467
If I show the query
of the detail--

00:37:01.467 --> 00:37:03.200
Uh, the details of the query--
I'm sorry--

00:37:03.200 --> 00:37:05.801
you can see that I can enter in
some information here.

00:37:05.801 --> 00:37:07.601
It returned seven documents.

00:37:07.601 --> 00:37:09.467
Here's another query
I ran earlier,

00:37:09.467 --> 00:37:10.968
where I actually looked
for the query,

00:37:10.968 --> 00:37:12.534
for the keyword "awesome,"

00:37:12.534 --> 00:37:14.033
and it returned one document,

00:37:14.033 --> 00:37:15.968
and it actually returned me
a Zip file,

00:37:15.968 --> 00:37:17.767
which I can just open up,

00:37:17.767 --> 00:37:19.801
and you can see what it's done
is it's actually exported

00:37:19.801 --> 00:37:21.534
all these documents
into a Zip file.

00:37:21.534 --> 00:37:23.501
Um, this is something
that we plan to release

00:37:23.501 --> 00:37:25.167
within the API
very shortly,

00:37:25.167 --> 00:37:27.334
the ability to export a Zip,

00:37:27.334 --> 00:37:29.000
so you can get
a number of different files,

00:37:29.000 --> 00:37:31.634
zip them up and return them
all in a single query.

00:37:31.634 --> 00:37:34.234
So that will come out shortly.

00:37:34.234 --> 00:37:36.567
And you can see that
basically it just pulls up

00:37:36.567 --> 00:37:37.968
all of
the associated documents

00:37:37.968 --> 00:37:41.434
that met
that query requirement.

00:37:41.434 --> 00:37:43.934
So just a really quick way
to use 2 Legged OAuth

00:37:43.934 --> 00:37:46.934
to actually go in
and impersonate

00:37:46.934 --> 00:37:48.634
any number of users.

00:37:48.634 --> 00:37:51.767
And just to kind of look
at how that was done,

00:37:51.767 --> 00:37:55.234
the Java--
This was done using AppEngine

00:37:55.234 --> 00:37:57.400
and the Java client
specifically,

00:37:57.400 --> 00:37:59.968
and you can see it's
literally ten lines of code.

00:37:59.968 --> 00:38:02.200
I mean, effectively,
we go in

00:38:02.200 --> 00:38:04.801
and extentiate
a class of the OAuth,

00:38:04.801 --> 00:38:07.467
we set the domain,
we set the secret key,

00:38:07.467 --> 00:38:09.367
we put in the information
across,

00:38:09.367 --> 00:38:11.868
who the user is that we're
looking to actually impersonate,

00:38:11.868 --> 00:38:13.267
and we run a request,

00:38:13.267 --> 00:38:15.367
and you'll see this particular
request is quite simple.

00:38:15.367 --> 00:38:17.901
It just goes off and gets
the feed of all the documents

00:38:17.901 --> 00:38:19.400
for this particular user

00:38:19.400 --> 00:38:22.734
and goes in and does a PrintLine
across all of the titles.

00:38:22.734 --> 00:38:25.901
But it's another very simple way
of using 2 Legged OAuth

00:38:25.901 --> 00:38:27.634
to be able to go in
and get information,

00:38:27.634 --> 00:38:29.434
so that
export-to-Zip functionality

00:38:29.434 --> 00:38:30.701
will be coming out soon

00:38:30.701 --> 00:38:33.300
as well as information
around revision histories

00:38:33.300 --> 00:38:36.834
that we talked
about a little bit earlier.

00:38:36.834 --> 00:38:38.968
Now, um, we talked
about a lot of things today,

00:38:38.968 --> 00:38:41.400
and I want to end with
a really quick demonstration

00:38:41.400 --> 00:38:44.334
before we jump
into questions.

00:38:44.334 --> 00:38:47.133
There are a number
of enterprise use cases

00:38:47.133 --> 00:38:49.200
that we looked at in terms
of being able to use

00:38:49.200 --> 00:38:51.133
the Document List API,
the Spreadsheets API,

00:38:51.133 --> 00:38:52.501
the Contacts API,

00:38:52.501 --> 00:38:54.067
using them together
to be able to use it

00:38:54.067 --> 00:38:57.501
as a platform
for building cloud applications.

00:38:57.501 --> 00:39:00.334
And one example of that
that's kind of interesting

00:39:00.334 --> 00:39:03.100
and exciting is this company
by the name of OffiSync.

00:39:03.100 --> 00:39:05.501
And, effectively,
what they've done is

00:39:05.501 --> 00:39:07.634
to help with the
interoperability side of things,

00:39:07.634 --> 00:39:11.067
is built an application
that actually loads directly

00:39:11.067 --> 00:39:12.601
within Microsoft Office

00:39:12.601 --> 00:39:15.000
and allows you to interoperate
with the cloud.

00:39:15.000 --> 00:39:16.801
So just
as a quick example here,

00:39:16.801 --> 00:39:18.367
I can pull up PowerPoint,

00:39:18.367 --> 00:39:20.000
and you'll see here
that I have this ribbon.

00:39:20.000 --> 00:39:21.033
So I have, you know, have

00:39:21.033 --> 00:39:23.400
my normal Office 2007
information,

00:39:23.400 --> 00:39:26.334
but I've got this ribbon here
at the top for OffiSync.

00:39:26.334 --> 00:39:28.367
And what I can do is
I can click this Open button

00:39:28.367 --> 00:39:31.868
and it'll pull up
my cloud information.

00:39:31.868 --> 00:39:34.834
So this going directly
into my Google Docs account

00:39:34.834 --> 00:39:36.801
to be able
to pull in that information.

00:39:36.801 --> 00:39:40.501
I can search by presentations,
documents, spreadsheets.

00:39:40.501 --> 00:39:44.000
I can do queries of information
to be able to find things

00:39:44.000 --> 00:39:46.133
that match a particular type
of document

00:39:46.133 --> 00:39:47.367
that I'm looking for,

00:39:47.367 --> 00:39:48.834
and what this is actually
going to do now

00:39:48.834 --> 00:39:50.234
as I open this document,

00:39:50.234 --> 00:39:52.234
is it's gonna go out
to the Google Docs cloud,

00:39:52.234 --> 00:39:53.434
it's gonna grab
that document,

00:39:53.434 --> 00:39:54.901
it's gonna convert it,

00:39:54.901 --> 00:39:57.000
and it's gonna bring it
down locally on my machine,

00:39:57.000 --> 00:39:59.000
and now I'm living
right here in PowerPoint

00:39:59.000 --> 00:40:00.801
with a Google document.

00:40:00.801 --> 00:40:02.234
I can hit the Save button.

00:40:02.234 --> 00:40:04.100
I can make changes.
I can hit Save.

00:40:04.100 --> 00:40:06.000
It's going to go right back up
into the cloud,

00:40:06.000 --> 00:40:08.133
and now for those people
within the organization

00:40:08.133 --> 00:40:09.334
that are using Google Docs,

00:40:09.334 --> 00:40:11.434
they have the ability
to get access to it

00:40:11.434 --> 00:40:13.567
directly within
the Docs interface.

00:40:13.567 --> 00:40:14.968
We talked about Search,

00:40:14.968 --> 00:40:16.467
and the other one that
I just wanted to quickly show

00:40:16.467 --> 00:40:17.834
is that I can collaborate
on this,

00:40:17.834 --> 00:40:20.300
so I can really quickly say,
here's a document.

00:40:20.300 --> 00:40:22.033
Even though I'm in PowerPoint,

00:40:22.033 --> 00:40:25.968
I can say that I want to share
this, you know, to me...

00:40:28.701 --> 00:40:31.567
whether or not I want to give
myself Read or Write access.

00:40:31.567 --> 00:40:35.934
Can hit Save.
Apparently I don't exist.

00:40:35.934 --> 00:40:38.434
Bidelman: Everyone
just walked out of here.

00:40:38.434 --> 00:40:40.834
Sabharwal: That's right.
Oh, yes, thank you.

00:40:40.834 --> 00:40:44.901
Get rid of that.
We'll hit Save.

00:40:44.901 --> 00:40:48.133
And we will skip
the sending of the e-mail.

00:40:48.133 --> 00:40:49.534
And, basically,
what that's gonna do

00:40:49.534 --> 00:40:50.968
is it'll go up to the cloud,

00:40:50.968 --> 00:40:52.901
it'll change that document
collaboration information,

00:40:52.901 --> 00:40:55.200
and it'll provide me
with Share access

00:40:55.200 --> 00:40:56.667
and Write access.

00:40:56.667 --> 00:40:58.334
So it's just a nice,
'nother example of ways

00:40:58.334 --> 00:41:00.167
in which
you can actually use the API

00:41:00.167 --> 00:41:02.167
to interoperate
across applications.

00:41:02.167 --> 00:41:04.667
So here, someone using
Microsoft Office

00:41:04.667 --> 00:41:06.701
can really easily
and really quickly interoperate

00:41:06.701 --> 00:41:08.601
with someone
using Google Docs

00:41:08.601 --> 00:41:10.834
all within
their own native applications.

00:41:16.501 --> 00:41:19.400
So we've talked about
quite a few things today.

00:41:19.400 --> 00:41:21.901
And I guess the most
important message here is...

00:41:21.901 --> 00:41:23.601
Now, probably
the big question is,

00:41:23.601 --> 00:41:25.200
all right, great,
where do I get resources?

00:41:25.200 --> 00:41:27.667
Where do I get information
to be able to learn more?

00:41:27.667 --> 00:41:29.067
Bidelman: I'm glad you asked
that question, Anil.

00:41:29.067 --> 00:41:30.334
[Anil laughs]

00:41:30.334 --> 00:41:31.667
So, as always,
we have a list of,

00:41:31.667 --> 00:41:33.234
you know, a bunch of resources.

00:41:33.234 --> 00:41:36.167
There's the Documents List API
documentation there.

00:41:36.167 --> 00:41:37.634
There's information
on 2 Legged OAuth,

00:41:37.634 --> 00:41:40.567
if you're a Google Apps Premier
or EDU user.

00:41:40.567 --> 00:41:42.033
We have code samples,

00:41:42.033 --> 00:41:43.200
you know,
just numerous code samples

00:41:43.200 --> 00:41:44.934
in different languages
to get you started,

00:41:44.934 --> 00:41:47.367
and there's a developer forum
if you do get stuck,

00:41:47.367 --> 00:41:50.100
so do ask around in there.

00:41:50.100 --> 00:41:52.734
So I think for anyone
that asked questions

00:41:52.734 --> 00:41:54.033
in Google Moderator,
there's a link,

00:41:54.033 --> 00:41:56.601
if you want to ask
some last-minute questions.

00:41:56.601 --> 00:42:00.167
Also, feel free to come to mic
so we can hear you on camera.

00:42:00.167 --> 00:42:01.734
Sabharwal: We have partners
here as well,

00:42:01.734 --> 00:42:03.167
so if you have questions
for gDocsBar

00:42:03.167 --> 00:42:05.334
or for Syncplicity,
please go ahead.

00:42:05.334 --> 00:42:06.567
We'll bring up
the Moderator.

00:42:06.567 --> 00:42:07.968
We know it's lunchtime,
so thank you for coming

00:42:07.968 --> 00:42:11.033
to our presentation.

00:42:11.033 --> 00:42:14.167
[audience applauding]

00:42:19.934 --> 00:42:21.334
Now it's so lonely.

00:42:23.701 --> 00:42:26.567
Sabharwal: Any questions?

00:42:26.567 --> 00:42:27.834
Bidelman: We'll
also be available up here

00:42:27.834 --> 00:42:29.901
if you want to just ask
us directly.

00:42:29.901 --> 00:42:31.100
man: I had a quick question.
Sabharwal: Please.

00:42:31.100 --> 00:42:34.100
For the Syncplicity guy.
What, uh...

00:42:34.100 --> 00:42:35.567
Bidelman:
Do you want to come up?

00:42:35.567 --> 00:42:41.300
man: How does your tool handle
images or HTML pages?

00:42:41.300 --> 00:42:42.701
Hrebicek: Images embedded
in documents

00:42:42.701 --> 00:42:44.467
will sync together
with the document.

00:42:44.467 --> 00:42:46.000
man: I'm just talking about
like straight pictures

00:42:46.000 --> 00:42:47.567
thrown into the Sync folder.

00:42:47.567 --> 00:42:49.467
Hrebicek: I see. They will
not sync to Google Docs.

00:42:49.467 --> 00:42:50.601
Not today.

00:42:50.601 --> 00:42:52.701
man: But will they sync
to other users

00:42:52.701 --> 00:42:54.868
that have
the Syncplicity software?

00:42:54.868 --> 00:42:56.133
Hrebicek:
That's exactly right.

00:42:56.133 --> 00:42:58.000
So the Syncplicity syncs
across all your computers,

00:42:58.000 --> 00:42:59.467
the computers of the people
you're sharing with,

00:42:59.467 --> 00:43:01.901
as well as Google Docs
and Facebook, for example.

00:43:01.901 --> 00:43:03.501
man: All right. Thank you.

00:43:03.501 --> 00:43:05.467
Hrebicek: Thanks.

00:43:05.467 --> 00:43:07.400
Bidelman: Ondrej, do you
want to come up on stage

00:43:07.400 --> 00:43:09.868
just in case?
You, too, Sandosh?

00:43:20.100 --> 00:43:21.367
Sabharwal: Hi.

00:43:21.367 --> 00:43:23.901
man: Great session, by the way.
Bidelman: Thank you.

00:43:23.901 --> 00:43:28.868
man: Um, is it possible to,
um...

00:43:28.868 --> 00:43:31.734
to use the, let's say
the Google Spreadsheet

00:43:31.734 --> 00:43:34.734
or Google Docs--Let's say,
for example, Spreadsheet,

00:43:34.734 --> 00:43:36.534
in such a way that we...

00:43:36.534 --> 00:43:40.200
from within our application
launch the spreadsheet,

00:43:40.200 --> 00:43:41.767
have the user edit it,

00:43:41.767 --> 00:43:45.234
and then suck the data
back in from the spreadsheet

00:43:45.234 --> 00:43:46.934
as the user hits Save?

00:43:46.934 --> 00:43:50.801
How would we
go about doing that?

00:43:50.801 --> 00:43:52.234
Bidelman: I can answer that.

00:43:52.234 --> 00:43:54.534
So, right now,
the only way you can

00:43:54.534 --> 00:43:56.734
actually upload content
using the API

00:43:56.734 --> 00:43:59.434
is, it's a wholesale,
like, upload.

00:43:59.434 --> 00:44:01.567
So it's either--
It's not little chunks.

00:44:01.567 --> 00:44:03.200
It's the whole document,
so what you would do

00:44:03.200 --> 00:44:04.934
is you'd probably export
the document,

00:44:04.934 --> 00:44:06.334
if I have
the question straight,

00:44:06.334 --> 00:44:08.000
you would export the document
in question,

00:44:08.000 --> 00:44:09.734
you know, you'd make
a local change or something,

00:44:09.734 --> 00:44:12.434
and then just re-upload
the whole thing to the cloud.

00:44:12.434 --> 00:44:15.300
So the syncing there
is not great unfortunately,

00:44:15.300 --> 00:44:17.934
but that's something
that's highly requested

00:44:17.934 --> 00:44:19.234
from our users.

00:44:19.234 --> 00:44:20.968
man: I'm sorry.
I probably didn't make it clear.

00:44:20.968 --> 00:44:24.334
So the question was
that they allow the user

00:44:24.334 --> 00:44:27.968
to edit or create
a spreadsheet

00:44:27.968 --> 00:44:31.133
within the Google Docs
and just extract the data

00:44:31.133 --> 00:44:35.200
out of those tables
and rows into the system,

00:44:35.200 --> 00:44:38.300
into a different third-party
system altogether.

00:44:38.300 --> 00:44:40.300
Bidelman: So that would be--
So the Google Docs API

00:44:40.300 --> 00:44:42.567
is used to create
and manage your documents,

00:44:42.567 --> 00:44:43.868
including spreadsheets,

00:44:43.868 --> 00:44:45.400
but if you want to actually
get that content

00:44:45.400 --> 00:44:47.868
in the spreadsheets,
you use the Spreadsheets API.

00:44:47.868 --> 00:44:49.434
[man speaking indistinctly]

00:44:49.434 --> 00:44:51.133
Bidelman: Yeah, definitely go
to their session at 2:00.

00:44:51.133 --> 00:44:52.634
They'll have
all the answers for you.

00:44:52.634 --> 00:44:53.934
Yeah.

00:44:56.067 --> 00:44:59.267
man: You had a demo
of an application.

00:44:59.267 --> 00:45:01.534
You said it took you
about a week to put it together.

00:45:01.534 --> 00:45:04.200
It was kind
of an interesting thing.

00:45:04.200 --> 00:45:07.133
I guess what struck me was,
or what I was curious about

00:45:07.133 --> 00:45:08.868
was how far up
the learning curve

00:45:08.868 --> 00:45:10.734
of the actual API
were you at that point?

00:45:10.734 --> 00:45:12.067
Were you already
such a super expert

00:45:12.067 --> 00:45:14.400
that one week for you
is a year and one week for me?

00:45:14.400 --> 00:45:15.567
[all laughing]

00:45:15.567 --> 00:45:17.534
Bidelman: This is
the Ruby on Rails one?

00:45:17.534 --> 00:45:19.567
man: I forget exactly
which it was.

00:45:19.567 --> 00:45:22.334
Bidelman: So I think the thing
that took me the longest there

00:45:22.334 --> 00:45:24.934
was obviously the CSS
and Ajax goodness, right?

00:45:24.934 --> 00:45:27.200
Just to make it look
all fancy and pretty.

00:45:27.200 --> 00:45:29.868
Um, but, having said that,

00:45:29.868 --> 00:45:31.901
you know, we do have
the client libraries,

00:45:31.901 --> 00:45:34.501
and we have, you know, great--
pretty great documentation

00:45:34.501 --> 00:45:35.734
on how to do, you know,

00:45:35.734 --> 00:45:37.167
just about
everything in the APIs,

00:45:37.167 --> 00:45:38.968
so you should be able to get
up and running fairly quickly.

00:45:38.968 --> 00:45:41.000
You know, we talked
a little bit about the protocol

00:45:41.000 --> 00:45:43.601
and sort of the underlying,
you know, what's going on,

00:45:43.601 --> 00:45:45.400
but you really don't need
to look at any of that

00:45:45.400 --> 00:45:47.234
if you're not interested in it.

00:45:47.234 --> 00:45:49.300
I would say, you know,
a great place is

00:45:49.300 --> 00:45:50.801
to start off
from the documentation link,

00:45:50.801 --> 00:45:53.300
and you could have
a full-fledged app going

00:45:53.300 --> 00:45:54.400
in a week definitely.

00:45:54.400 --> 00:45:56.033
You don't have to be
a guru at all.

00:45:59.968 --> 00:46:01.234
man: Now, one question,

00:46:01.234 --> 00:46:02.767
you guys mentioned revision
earlier.

00:46:02.767 --> 00:46:04.767
What about deleted documents
in OAuth?

00:46:04.767 --> 00:46:07.100
You know, our legal team's
constantly asking,

00:46:07.100 --> 00:46:09.167
"Hey, this guy deleted
this document.

00:46:09.167 --> 00:46:10.567
"It had this sensitive
information in it,

00:46:10.567 --> 00:46:11.868
how do I retrieve it?"

00:46:11.868 --> 00:46:13.467
So do tools like Postini,

00:46:13.467 --> 00:46:14.567
are you guys going
to extend that

00:46:14.567 --> 00:46:16.501
to where we can access
that information

00:46:16.501 --> 00:46:18.501
through OAuth
and things like that?

00:46:18.501 --> 00:46:20.067
Bidelman: So to answer
your first question,

00:46:20.067 --> 00:46:22.167
deleting docs
is absolutely possible today.

00:46:22.167 --> 00:46:23.467
We just didn't cover it.

00:46:23.467 --> 00:46:25.567
Um, you know, you can create,
update, and delete docs,

00:46:25.567 --> 00:46:27.901
using 2 Legged OAuth,
so you can...

00:46:27.901 --> 00:46:29.367
If, say, a user creates
a document,

00:46:29.367 --> 00:46:31.334
or, you know, I don't know,
shares it outside the domain,

00:46:31.334 --> 00:46:33.968
you just want to nuke that,
you absolutely can.

00:46:33.968 --> 00:46:35.801
Sabharwal: Yeah,
and then on the Postini side,

00:46:35.801 --> 00:46:38.701
I mean, certainly the vision
around Postini

00:46:38.701 --> 00:46:40.367
is to be able to provide
that archiving

00:46:40.367 --> 00:46:41.868
and be able to have
litigation holds

00:46:41.868 --> 00:46:45.000
and give the visibility
and flexibility for enterprises

00:46:45.000 --> 00:46:46.267
to be able
to protect that data.

00:46:46.267 --> 00:46:48.968
So, yeah, certainly our goal
as an organization

00:46:48.968 --> 00:46:50.968
is to find ways to be able
to extrapolate that

00:46:50.968 --> 00:46:55.033
across docs, across sites,
across e-mail, and so forth.

00:46:55.033 --> 00:46:57.200
man: Now, I heard
of a couple of third-party guys

00:46:57.200 --> 00:46:59.367
that had, you know,
written apps against all that.

00:46:59.367 --> 00:47:01.634
They've kind of mirrored
the functionality with Postini.

00:47:01.634 --> 00:47:02.734
Sabharwal: Mm-hmm.

00:47:02.734 --> 00:47:04.367
man: Are you guys gonna,
you know, on the road map,

00:47:04.367 --> 00:47:05.934
do you guys know about
when you're thinking

00:47:05.934 --> 00:47:07.634
about integrating that
just into the Enterprise,

00:47:07.634 --> 00:47:08.934
all the clients?

00:47:08.934 --> 00:47:11.200
Sabharwal: It's...

00:47:11.200 --> 00:47:13.400
It's difficult to say
from a road map perspective

00:47:13.400 --> 00:47:15.200
whether or not that's
gonna happen

00:47:15.200 --> 00:47:16.934
through an integration
with third-party partners,

00:47:16.934 --> 00:47:18.300
whether that's something
that we're going to develop

00:47:18.300 --> 00:47:20.133
ourselves or work
with enterprises,

00:47:20.133 --> 00:47:21.701
but, you know, definitely,

00:47:21.701 --> 00:47:23.934
it's something
that's on our radars,

00:47:23.934 --> 00:47:25.367
something that we need
to resolve,

00:47:25.367 --> 00:47:27.667
and we'll have a solution
to market as soon as we can get

00:47:27.667 --> 00:47:29.667
kind of the best possible thing
together.

00:47:29.667 --> 00:47:31.501
man: Thank you.

00:47:31.501 --> 00:47:32.801
Bidelman:
Want to do the Moderator?

00:47:32.801 --> 00:47:34.133
Sabharwal: Yeah, we'll do
the Moderator question.

00:47:34.133 --> 00:47:36.033
So this probably why everyone
is sticking around.

00:47:36.033 --> 00:47:38.901
"Is Google going to release
a 'G drive,'

00:47:38.901 --> 00:47:41.067
and is this API
going to support it?"

00:47:41.067 --> 00:47:48.067
Um, so the short answer
is that, um...

00:47:48.067 --> 00:47:49.501
I can't say.

00:47:49.501 --> 00:47:51.000
[laughing]

00:47:51.000 --> 00:47:53.767
The longer answer is,
at the end of the day,

00:47:53.767 --> 00:47:56.434
Google's mission is to organize
the world's information, right?

00:47:56.434 --> 00:47:58.100
To make it
universally accessible.

00:47:58.100 --> 00:47:59.601
We recognize
that that information

00:47:59.601 --> 00:48:01.834
is beyond documents,
spreadsheets, presentations,

00:48:01.834 --> 00:48:04.000
so certainly, you know,
we're working

00:48:04.000 --> 00:48:05.567
towards finding ways
to make it easy

00:48:05.567 --> 00:48:08.400
for organizations
to be able to share files

00:48:08.400 --> 00:48:11.501
of all types, pictures, videos,
documents, spreadsheets,

00:48:11.501 --> 00:48:13.100
Zip files, et cetera.

00:48:13.100 --> 00:48:14.634
What form
that's going to come in,

00:48:14.634 --> 00:48:17.434
all we're gonna have to do
is be able to say stay tuned,

00:48:17.434 --> 00:48:19.567
but certainly,
definitely the information--

00:48:19.567 --> 00:48:22.067
Sorry, definitely the vision
and the road map

00:48:22.067 --> 00:48:24.634
and the plan for Google
is to be able to provide

00:48:24.634 --> 00:48:26.734
enterprises and consumers
with a way

00:48:26.734 --> 00:48:28.801
to be able to share
and sync that information.

00:48:32.634 --> 00:48:33.968
I think that's it
for questions,

00:48:33.968 --> 00:48:36.234
so thank you all again
very much for joining us today.

00:48:36.234 --> 00:48:37.534
Please enjoy the lunch.

00:48:37.534 --> 00:48:38.734
Bidelman: There's office hours
later today,

00:48:38.734 --> 00:48:41.133
so do check it out
if you're interested.

