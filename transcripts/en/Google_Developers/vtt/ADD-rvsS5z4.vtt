WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.988
[MUSIC PLAYING]

00:00:07.132 --> 00:00:08.590
DANIEL IMRIE-SITUNAYAKE:
All right.

00:00:08.590 --> 00:00:09.980
Hey, everyone.

00:00:09.980 --> 00:00:12.220
My name's Dan and this
is Matt, and we're

00:00:12.220 --> 00:00:15.850
both Googlers who work on a
product called Dialogflow.

00:00:15.850 --> 00:00:19.160
So I wanted to say first
thank you so much for coming.

00:00:19.160 --> 00:00:20.650
We've been having
an amazing I/O,

00:00:20.650 --> 00:00:23.560
and we're super excited to
share our talk with you.

00:00:23.560 --> 00:00:25.840
You've probably heard a
lot over the last few days

00:00:25.840 --> 00:00:28.450
about how important
the Google Assistant is

00:00:28.450 --> 00:00:30.340
to our vision for
how computers can

00:00:30.340 --> 00:00:33.220
help people get things done.

00:00:33.220 --> 00:00:36.300
The Assistant works across
dozens of device types

00:00:36.300 --> 00:00:40.600
and makes the most of the
best features of each device.

00:00:40.600 --> 00:00:42.880
That could mean the
quick At-a-Glance display

00:00:42.880 --> 00:00:45.175
of a smartwatch, and it
could mean the benefits

00:00:45.175 --> 00:00:47.340
of no screen at all.

00:00:47.340 --> 00:00:51.530
The Assistant is now available
on over 500 million devices.

00:00:51.530 --> 00:00:53.500
So that makes this a
really important platform

00:00:53.500 --> 00:00:55.540
to build for.

00:00:55.540 --> 00:00:57.520
So the Assistant
is really smart,

00:00:57.520 --> 00:00:59.680
and we've made it do
some super-cool stuff.

00:00:59.680 --> 00:01:03.070
But the real power of platforms
comes from their developers.

00:01:03.070 --> 00:01:05.349
So how do we empower
our developers

00:01:05.349 --> 00:01:07.480
to extend the
Assistant and do things

00:01:07.480 --> 00:01:10.600
we never could have imagined?

00:01:10.600 --> 00:01:13.032
This is where
Dialogflow comes in.

00:01:13.032 --> 00:01:14.740
We've taken what we
learned from building

00:01:14.740 --> 00:01:17.180
amazing conversational
experiences,

00:01:17.180 --> 00:01:19.210
and we've built a tool
that allows any developer

00:01:19.210 --> 00:01:21.010
to do the same thing.

00:01:21.010 --> 00:01:23.860
This session, we're going to
tell you all about Dialogflow.

00:01:23.860 --> 00:01:26.454
We're going to tell you
what it does, where it fits,

00:01:26.454 --> 00:01:28.120
and we're going to
show you how to build

00:01:28.120 --> 00:01:30.770
a sophisticated action
for the Google Assistant

00:01:30.770 --> 00:01:32.530
in just a few minutes.

00:01:32.530 --> 00:01:34.960
We're also going to talk
about a few upgrades we've

00:01:34.960 --> 00:01:39.850
made based on feedback we've
had from our awesome community.

00:01:39.850 --> 00:01:42.040
So as you saw in our
developer keynote,

00:01:42.040 --> 00:01:44.710
we've had really great
momentum in growth this year.

00:01:44.710 --> 00:01:46.850
We've had half a
million developers

00:01:46.850 --> 00:01:49.960
use Dialogflow, which
is a 250% increase

00:01:49.960 --> 00:01:51.720
since this time last year.

00:01:51.720 --> 00:01:54.100
And Google's developers
are obviously

00:01:54.100 --> 00:01:58.130
really excited to use our
ML tech in their work.

00:01:58.130 --> 00:02:01.120
We've also got brands all around
the world using Dialogflow.

00:02:01.120 --> 00:02:03.440
And they're building some
really amazing stuff.

00:02:03.440 --> 00:02:05.380
So if you want to see
some case studies,

00:02:05.380 --> 00:02:07.840
you can check out website
to see some of our partners'

00:02:07.840 --> 00:02:11.611
experiences using the product.

00:02:11.611 --> 00:02:12.110
All right.

00:02:12.110 --> 00:02:13.630
Let's get technical.

00:02:13.630 --> 00:02:17.050
So before we go further,
let's go over some basics.

00:02:17.050 --> 00:02:21.160
An action is a third-party
experience for the Assistant.

00:02:21.160 --> 00:02:24.610
And there are many ways the
user can invoke your action.

00:02:24.610 --> 00:02:27.310
First, they can just ask the
Assistant for your action

00:02:27.310 --> 00:02:30.880
by name or maybe the Assistant
might suggest your action

00:02:30.880 --> 00:02:33.970
based on its functionality.

00:02:33.970 --> 00:02:36.540
Once invoked, your
action is going

00:02:36.540 --> 00:02:39.630
to hand-- the Assistant is
going to hand the conversation

00:02:39.630 --> 00:02:41.920
control over the Dialogflow.

00:02:41.920 --> 00:02:44.850
Dialogflow understands
conversational language,

00:02:44.850 --> 00:02:47.490
and it will hold a conversation
with your users based

00:02:47.490 --> 00:02:50.070
on a structure that you define.

00:02:50.070 --> 00:02:52.530
You can then connect this
conversation with your business

00:02:52.530 --> 00:02:57.660
logic to make things happen
and generate replies.

00:02:57.660 --> 00:03:01.460
To define this conversation,
you'll use Dialogflow's UI.

00:03:01.460 --> 00:03:04.870
And there's a web app that
even non-developers can use.

00:03:04.870 --> 00:03:07.360
There's no coding
required for simple apps,

00:03:07.360 --> 00:03:11.170
and it takes literally minutes
to prototype a conversation.

00:03:11.170 --> 00:03:13.990
Under the hood, this all uses
Google's machine learning

00:03:13.990 --> 00:03:16.310
and natural language
understanding tools,

00:03:16.310 --> 00:03:20.550
but you won't need a
PhD to make use of them.

00:03:20.550 --> 00:03:23.280
For more complex actions,
connecting actions

00:03:23.280 --> 00:03:25.380
with your code is super easy.

00:03:25.380 --> 00:03:27.780
And you can even use our
embedded Cloud Functions

00:03:27.780 --> 00:03:29.850
to Firebase Editor.

00:03:29.850 --> 00:03:31.776
You just tell
Dialogflow at which

00:03:31.776 --> 00:03:33.150
points the
conversation it should

00:03:33.150 --> 00:03:35.150
communicate with your code.

00:03:35.150 --> 00:03:38.100
Dialogflow then
makes an HTTP request

00:03:38.100 --> 00:03:40.980
with JSON describing
what the user wants.

00:03:40.980 --> 00:03:44.000
And you can use this to
construct a complex response

00:03:44.000 --> 00:03:49.030
or to look something up and
generally make stuff happen.

00:03:49.030 --> 00:03:51.000
So we want to show
you how easy it is

00:03:51.000 --> 00:03:52.890
to get started with Dialogflow.

00:03:52.890 --> 00:03:54.570
And over the next
few minutes, we're

00:03:54.570 --> 00:03:56.820
going to build an
action from scratch

00:03:56.820 --> 00:03:59.430
for an imaginary local business.

00:03:59.430 --> 00:04:03.690
Our business is going to
be a bike repair shop.

00:04:03.690 --> 00:04:06.730
Our action is going to work
like a helpful store clerk,

00:04:06.730 --> 00:04:09.450
and it's going to allow our
bike repair shop's customers

00:04:09.450 --> 00:04:11.910
to check the shop's
opening hours and book

00:04:11.910 --> 00:04:16.060
an appointment to
service their bike.

00:04:16.060 --> 00:04:18.721
So here's what's going to
happen during the demo.

00:04:18.721 --> 00:04:20.470
First, we're going to
walk you through how

00:04:20.470 --> 00:04:23.800
to respond to user queries
with a powerful concept called

00:04:23.800 --> 00:04:26.230
the Intent.

00:04:26.230 --> 00:04:28.350
We're then going to
show you how to extract

00:04:28.350 --> 00:04:32.904
detailed information from user's
queries like times and dates.

00:04:32.904 --> 00:04:34.320
And we're going
to demonstrate how

00:04:34.320 --> 00:04:36.960
to connect your action
to business logic that

00:04:36.960 --> 00:04:40.420
will store appointments
in a Google Calendar.

00:04:40.420 --> 00:04:41.830
Finally, we're
going to integrate

00:04:41.830 --> 00:04:47.010
our action with the Google
Assistant and test it out.

00:04:47.010 --> 00:04:49.776
So to get started, I'm
going to hand over to Matt,

00:04:49.776 --> 00:04:51.150
and he's going to
demonstrate how

00:04:51.150 --> 00:04:53.040
the finished action
is going to work

00:04:53.040 --> 00:04:55.710
on his shiny new Pixelbook.

00:04:55.710 --> 00:04:57.090
MATT CARROLL: Thanks, Dan.

00:04:57.090 --> 00:04:58.756
Can we go ahead and
search for the demo.

00:04:58.756 --> 00:05:00.280
Oh, there we go.

00:05:00.280 --> 00:05:01.720
So before we get
started building,

00:05:01.720 --> 00:05:03.930
I'm just going to give you
guys a quick demo of what

00:05:03.930 --> 00:05:05.290
we're going to build.

00:05:05.290 --> 00:05:07.270
So right now on the
left side of the screen,

00:05:07.270 --> 00:05:09.780
we have the Google Assistant
up on the Pixelbook.

00:05:09.780 --> 00:05:15.054
And we'll say talk to my bike
shop to invocate our action.

00:05:15.054 --> 00:05:16.470
So right now, the
Google Assistant

00:05:16.470 --> 00:05:18.345
is handing off the
conversation from the user

00:05:18.345 --> 00:05:21.000
from the Google Assistant to
our action, the bike shop.

00:05:21.000 --> 00:05:23.992
So right now, we're going
to set up an appointment.

00:05:23.992 --> 00:05:26.200
And it's going to ask us
what day we want to come in.

00:05:26.200 --> 00:05:29.050
So we're going to
say next Friday.

00:05:31.620 --> 00:05:34.500
And then it asks us what
time, and we'll say 3:00 PM.

00:05:34.500 --> 00:05:37.467
And right now,
the Cloud function

00:05:37.467 --> 00:05:39.300
is actually adding an
event to our calendar,

00:05:39.300 --> 00:05:41.716
you can see there, and asking
us what kind of appointment.

00:05:41.716 --> 00:05:44.390
So I'm going to say tune-up.

00:05:44.390 --> 00:05:47.730
And there we can see our action
has confirmed the appointment

00:05:47.730 --> 00:05:49.970
and has ended the conversation.

00:05:49.970 --> 00:05:51.540
So now let's build it.

00:05:51.540 --> 00:05:55.280
So we're going to switch to
this Dialogflow here and log in.

00:05:57.890 --> 00:05:59.810
So this is Dialogflow's console.

00:05:59.810 --> 00:06:01.880
On the left, you'll
see a panel where

00:06:01.880 --> 00:06:03.680
you have all the main
concepts that you

00:06:03.680 --> 00:06:05.810
need to use to build
a Dialogflow Agent,

00:06:05.810 --> 00:06:09.290
and in the middle we
have the panel where you

00:06:09.290 --> 00:06:10.490
use all these main concepts.

00:06:10.490 --> 00:06:12.320
Right now, it's a
list of intents.

00:06:12.320 --> 00:06:14.330
And on the right,
we have a simulator

00:06:14.330 --> 00:06:16.310
where you can try out
your Dialogflow Agent

00:06:16.310 --> 00:06:17.330
as you're building it.

00:06:17.330 --> 00:06:19.680
So let's go ahead
and try it out.

00:06:19.680 --> 00:06:23.020
We'll say hello.

00:06:23.020 --> 00:06:25.680
So we can see that
the default Welcome

00:06:25.680 --> 00:06:27.930
Intent here was matched.

00:06:27.930 --> 00:06:31.692
And if we open up to the
default Welcome Intent,

00:06:31.692 --> 00:06:33.400
you can see that we
have the response hi.

00:06:33.400 --> 00:06:35.197
So that's not quite
what we want to say

00:06:35.197 --> 00:06:36.280
since we have a bike shop.

00:06:36.280 --> 00:06:38.670
So let's change that
response up and say

00:06:38.670 --> 00:06:41.910
welcome to my bike shop.

00:06:41.910 --> 00:06:43.620
How can I help?

00:06:48.710 --> 00:06:50.970
So we'll try it again.

00:06:50.970 --> 00:06:54.740
And no, we needed to add--

00:06:54.740 --> 00:06:56.300
so now we're adding
a training phase

00:06:56.300 --> 00:06:59.690
here so that our hi
query is understood.

00:06:59.690 --> 00:07:01.280
And the agent is
training and using

00:07:01.280 --> 00:07:05.210
this hi example as
a training phrase

00:07:05.210 --> 00:07:06.890
for a machine
learning model that's

00:07:06.890 --> 00:07:11.270
running in the background that
will identify incoming requests

00:07:11.270 --> 00:07:13.300
to this Welcome Intent.

00:07:13.300 --> 00:07:15.090
So we'll try hi again.

00:07:15.090 --> 00:07:17.510
And now we can see that
our response is correctly

00:07:17.510 --> 00:07:21.330
identified, and we send
back the correct response.

00:07:21.330 --> 00:07:24.120
So let's create
our own Intent now.

00:07:24.120 --> 00:07:26.480
So we'll go to the
Navigation Panel on the left

00:07:26.480 --> 00:07:28.688
where it says Intents and
click this little plus sign

00:07:28.688 --> 00:07:30.170
to create our own Intent.

00:07:30.170 --> 00:07:32.070
And we'll type in hours.

00:07:32.070 --> 00:07:33.980
So this will be our
Intent that we're

00:07:33.980 --> 00:07:35.630
going to create
for any intention

00:07:35.630 --> 00:07:38.330
that the user has to know the
hours that our bike store is

00:07:38.330 --> 00:07:39.120
open.

00:07:39.120 --> 00:07:41.870
So for the first thing we need
to do is add training phrases.

00:07:41.870 --> 00:07:43.550
So these training phrases
are used as the basis

00:07:43.550 --> 00:07:44.841
for the machine learning model.

00:07:44.841 --> 00:07:46.460
So we need to think
of things users

00:07:46.460 --> 00:07:50.900
might say when they want to
know the hours of our bike shop.

00:07:50.900 --> 00:07:53.060
So I'll do a few examples here.

00:07:53.060 --> 00:07:56.680
How late can I come in?

00:07:59.220 --> 00:08:03.120
They might say what
are your hours directly

00:08:03.120 --> 00:08:06.310
or they might say
when do you open.

00:08:09.207 --> 00:08:11.290
So I'll go ahead and save
that and then Dialogflow

00:08:11.290 --> 00:08:15.760
will start this training process
using these training phrases,

00:08:15.760 --> 00:08:19.630
and while that's happening,
we're going to add a response.

00:08:19.630 --> 00:08:21.220
So down here, we
click Add Response,

00:08:21.220 --> 00:08:29.620
and then we'll say we're
open from 9:00 AM to 5:00 PM

00:08:29.620 --> 00:08:32.774
every weekday.

00:08:32.774 --> 00:08:36.510
We'll click Save, and we'll
try querying this out.

00:08:36.510 --> 00:08:37.320
All right.

00:08:37.320 --> 00:08:41.270
Are you open now?

00:08:41.270 --> 00:08:44.000
So now we can see the Hours
Intent was matched down here

00:08:44.000 --> 00:08:46.700
and sent back the
correct response.

00:08:46.700 --> 00:08:48.741
We're open from 9:00
to 5:00 every day.

00:08:48.741 --> 00:08:50.240
And now I just want
to take a moment

00:08:50.240 --> 00:08:52.940
to notice that the
query, are you open now,

00:08:52.940 --> 00:08:55.440
isn't really similar to any of
the training phrases we have.

00:08:55.440 --> 00:08:58.870
When do you open, what are your
hours, how late can I come in?

00:08:58.870 --> 00:09:01.010
So this is the kind of
the power of Dialogflow

00:09:01.010 --> 00:09:02.676
and really shows off
how powerful it is.

00:09:02.676 --> 00:09:05.060
If you can imagine trying to
write a regular expression

00:09:05.060 --> 00:09:07.790
to match every instance
of these four examples

00:09:07.790 --> 00:09:09.830
as well as the
thousands of other ways

00:09:09.830 --> 00:09:13.952
that someone could ask
when is your store open,

00:09:13.952 --> 00:09:16.160
this is where Dialogflow
just becomes really powerful

00:09:16.160 --> 00:09:18.140
and allows your
users to talk to you

00:09:18.140 --> 00:09:22.250
in a natural conversational way.

00:09:22.250 --> 00:09:24.750
So now let's take a closer
look at the response.

00:09:24.750 --> 00:09:25.850
It's a little bit generic.

00:09:25.850 --> 00:09:29.051
So we're open from 9:00
to 5:00 every weekday.

00:09:29.051 --> 00:09:31.550
We're not actually answering
the question, are you open now?

00:09:31.550 --> 00:09:33.890
And in a normal
conversation with someone,

00:09:33.890 --> 00:09:36.050
you'd expect to have more
contextual information.

00:09:36.050 --> 00:09:39.500
So they might say, oh,
we're open until 5:00 today.

00:09:39.500 --> 00:09:41.750
So for that, we need to do
some sort of calculation

00:09:41.750 --> 00:09:45.380
as to what the time is and
if that falls within our bike

00:09:45.380 --> 00:09:47.900
store's open hours range.

00:09:47.900 --> 00:09:51.710
So for any sort of calculation
or API requests or database

00:09:51.710 --> 00:09:54.422
query, we need to use
something called Fulfillment.

00:09:54.422 --> 00:09:56.630
So if we go to the left
panel here, we see down here,

00:09:56.630 --> 00:09:57.760
we have Fulfillment.

00:09:57.760 --> 00:10:01.070
So Fulfillment is how you
connect your Dialogflow Agent

00:10:01.070 --> 00:10:03.255
to code.

00:10:03.255 --> 00:10:05.630
In this case, we have an inline
editor where I've already

00:10:05.630 --> 00:10:06.500
deployed some code.

00:10:06.500 --> 00:10:08.990
So we can scroll down here and
look at the hours function.

00:10:08.990 --> 00:10:11.360
We check if the store
is currently open.

00:10:11.360 --> 00:10:14.420
And if it is, we give a response
that says we're open now,

00:10:14.420 --> 00:10:16.040
and we will be open until 5:00.

00:10:16.040 --> 00:10:18.565
And if it's not, we tell
them when we're open next.

00:10:18.565 --> 00:10:19.940
So there's one
more thing we need

00:10:19.940 --> 00:10:22.070
to do to connect this code
to our Dialogflow Agent

00:10:22.070 --> 00:10:24.170
and that's go back
to our Hours Intent

00:10:24.170 --> 00:10:27.200
and scroll all the way down and
go to Fulfillment and enable

00:10:27.200 --> 00:10:31.150
Fulfillment for this Intent.

00:10:31.150 --> 00:10:33.100
So once we do that, if
we try our query again,

00:10:33.100 --> 00:10:39.120
are you open now, we can
see right now that this--

00:10:39.120 --> 00:10:42.620
so right now, the Hours Intent
is calling the web book,

00:10:42.620 --> 00:10:44.750
and it comes back with
the correct response of,

00:10:44.750 --> 00:10:47.060
we're open now, and we
close at 5:00 PM today.

00:10:47.060 --> 00:10:52.560
So that calculation was made and
sent back the proper response.

00:10:52.560 --> 00:10:54.170
All right.

00:10:54.170 --> 00:10:57.780
Now let's try something
a little more complex.

00:10:57.780 --> 00:11:01.300
We're going to create an intent
for making an appointment.

00:11:01.300 --> 00:11:05.920
So we'll call it the
Make Appointment Intent.

00:11:05.920 --> 00:11:09.180
And for this Intent, we'll
need a few more examples,

00:11:09.180 --> 00:11:11.651
because there's many different
ways that a user might say

00:11:11.651 --> 00:11:12.900
I want to make an appointment.

00:11:12.900 --> 00:11:15.770
So we'll go through
those right now.

00:11:15.770 --> 00:11:20.080
I'd like to get a bike tune-up.

00:11:23.050 --> 00:11:32.250
I'd like to schedule an
appointment next Thursday.

00:11:32.250 --> 00:11:36.790
Can I schedule service for noon?

00:11:39.720 --> 00:11:52.620
Can I set up an appointment for
my bike tomorrow at 2:00 PM?

00:11:52.620 --> 00:11:59.340
And the last one, I'd like to
come in at 9:00 AM on May 11.

00:12:04.940 --> 00:12:09.200
So now you can see we
have a few things going

00:12:09.200 --> 00:12:13.000
on here that are different
from our previous example.

00:12:13.000 --> 00:12:15.350
So Dialogflow has
highlighted a few

00:12:15.350 --> 00:12:18.790
of the entities that are present
in our User Says examples.

00:12:18.790 --> 00:12:21.620
So entities, and Dialogflow
has several entities

00:12:21.620 --> 00:12:24.980
built in so we can extract
data from what users are saying

00:12:24.980 --> 00:12:28.220
and use it for, in this case,
to schedule a bike appointment.

00:12:28.220 --> 00:12:31.850
So all the red highlighted
items are times,

00:12:31.850 --> 00:12:34.859
and all the yellow
highlighted items are dates.

00:12:34.859 --> 00:12:36.650
So if we scroll down,
we can see that these

00:12:36.650 --> 00:12:38.390
are listed as parameters.

00:12:38.390 --> 00:12:40.580
So we have the date
and time listed

00:12:40.580 --> 00:12:43.890
and the value that we can use to
present this in our responses.

00:12:43.890 --> 00:12:45.650
So in this case, we
want to reflect back

00:12:45.650 --> 00:12:49.820
the time and date the user has
specified so we can confirm

00:12:49.820 --> 00:12:51.270
the right appointment time.

00:12:51.270 --> 00:12:55.370
So we'll go ahead and
add a response here.

00:12:55.370 --> 00:12:56.990
And say, great.

00:12:56.990 --> 00:13:03.400
I've set up your appointment
for the dollar sign date.

00:13:03.400 --> 00:13:05.960
So this takes the value from
what the user says and puts it

00:13:05.960 --> 00:13:09.146
in our response and then
at dollar sign time.

00:13:09.146 --> 00:13:11.270
So this will add the same
thing for the time value.

00:13:16.540 --> 00:13:19.280
See you then.

00:13:19.280 --> 00:13:22.400
We'll go ahead and save that
and then we'll try this out.

00:13:22.400 --> 00:13:32.920
So I want an appointment
tomorrow at 3:00 PM.

00:13:32.920 --> 00:13:35.920
So now you can see that
Dialogflow has correctly

00:13:35.920 --> 00:13:37.880
matched the Make
Appointment Intent

00:13:37.880 --> 00:13:41.770
and has extracted out
that tomorrow means May 11

00:13:41.770 --> 00:13:44.290
and that 3:00 PM
means 1500 hours.

00:13:44.290 --> 00:13:47.980
So this is also-- it's easily
parsable on our web book.

00:13:47.980 --> 00:13:53.620
And it correctly inserts those
values back into our response.

00:13:53.620 --> 00:13:56.020
So to actually make
an appointment,

00:13:56.020 --> 00:13:57.280
we need a date and a time.

00:13:57.280 --> 00:13:59.520
So we need to make sure
that the user provides

00:13:59.520 --> 00:14:00.640
both those pieces of data.

00:14:00.640 --> 00:14:02.431
So we're going to go
to the parameter table

00:14:02.431 --> 00:14:05.280
and make both of these
parameters required.

00:14:05.280 --> 00:14:06.760
Now, when a parameter
is required,

00:14:06.760 --> 00:14:08.760
we can define a prompt
so that if a user doesn't

00:14:08.760 --> 00:14:10.990
provide a date or a time,
we can ask them for it.

00:14:10.990 --> 00:14:12.990
So in this case,
for day we'll add

00:14:12.990 --> 00:14:17.190
a prompt that says what
day do you want to come in?

00:14:19.850 --> 00:14:21.890
And for our time,
we'll add a prompt that

00:14:21.890 --> 00:14:24.140
says what time works for you?

00:14:27.430 --> 00:14:28.680
So let's try that out.

00:14:28.680 --> 00:14:33.053
We'll say I need an appointment.

00:14:49.840 --> 00:14:53.470
So now that we've matched
the Make Appointment Intent,

00:14:53.470 --> 00:14:56.320
you can see that the response,
instead of our response

00:14:56.320 --> 00:14:59.362
to defined here, we hit one of
our prompts that says what day

00:14:59.362 --> 00:15:00.320
do you want to come in?

00:15:00.320 --> 00:15:02.111
So we'll go ahead and
answer that question,

00:15:02.111 --> 00:15:04.390
saying next Friday.

00:15:04.390 --> 00:15:06.525
And what time works for
you, we'll say 11:00 AM.

00:15:06.525 --> 00:15:07.900
And now you can
see that this has

00:15:07.900 --> 00:15:10.000
been filled in
correctly by Dialogflow,

00:15:10.000 --> 00:15:12.180
and we get the ultimate
response back there.

00:15:15.300 --> 00:15:17.090
So now that we've set
up an appointment,

00:15:17.090 --> 00:15:19.981
we might want to get some
additional information

00:15:19.981 --> 00:15:21.480
from the user about
the appointment.

00:15:21.480 --> 00:15:23.960
So we might want to know what
kind of appointment type.

00:15:23.960 --> 00:15:27.390
So we'll go ask them
a question and say,

00:15:27.390 --> 00:15:31.890
do you need a repair
or just a tune-up?

00:15:35.310 --> 00:15:38.040
So now we need a way to capture
the answer to this question,

00:15:38.040 --> 00:15:40.560
if they want a
repair or a tune-up.

00:15:40.560 --> 00:15:42.900
So Dialogflow already has
these built-in entities

00:15:42.900 --> 00:15:43.750
for date and time.

00:15:43.750 --> 00:15:45.510
But you can also
create your own entity.

00:15:45.510 --> 00:15:47.460
So we'll go ahead
and do that now.

00:15:47.460 --> 00:15:49.320
On the left panel,
again you can see

00:15:49.320 --> 00:15:51.670
we have a panel for entities
and another plus button.

00:15:51.670 --> 00:15:55.560
So we'll create an entity, and
we'll call it Appointment Type.

00:15:58.800 --> 00:16:02.020
And then we'll add entries for
our Appointment Type Entity.

00:16:02.020 --> 00:16:04.560
So in this case, we'll have
a service option and a fix

00:16:04.560 --> 00:16:05.430
option.

00:16:05.430 --> 00:16:08.490
So we'll enter in the
first value, service.

00:16:08.490 --> 00:16:11.370
And then we can also
enter in synonym values

00:16:11.370 --> 00:16:12.570
for each of these entities.

00:16:12.570 --> 00:16:15.480
So someone might not actually
say the word service,

00:16:15.480 --> 00:16:18.030
but they might say another
word that means the same thing.

00:16:18.030 --> 00:16:20.130
So we can define synonyms
that will map back

00:16:20.130 --> 00:16:22.180
to this canonical value.

00:16:22.180 --> 00:16:26.060
So instead of saying service,
someone might say overhaul.

00:16:26.060 --> 00:16:29.610
They might say maintenance.

00:16:29.610 --> 00:16:32.070
They might say a tune-up
or they might say tune-up

00:16:32.070 --> 00:16:33.880
with a space in it.

00:16:33.880 --> 00:16:36.130
And for our other
value, we have fix.

00:16:36.130 --> 00:16:40.650
So someone might
say repair, mend.

00:16:40.650 --> 00:16:42.150
They might say their
bike is broken.

00:16:42.150 --> 00:16:47.890
They might say they have a flat
tire or they might say fixed.

00:16:47.890 --> 00:16:50.870
So we'll save that.

00:16:50.870 --> 00:16:53.120
So now that we have an
Appointment Type Entity,

00:16:53.120 --> 00:16:55.180
we need to create an
Intent to capture it.

00:16:55.180 --> 00:16:58.360
And in the case of
our Intent, we only

00:16:58.360 --> 00:17:00.400
really want to capture
this Appointment Type

00:17:00.400 --> 00:17:03.310
Entity after our Make
Appointment Intent has

00:17:03.310 --> 00:17:04.300
been matched.

00:17:04.300 --> 00:17:05.800
So we want to make
a new Intent that

00:17:05.800 --> 00:17:08.770
only is matched after the
Make Appointment Intent.

00:17:08.770 --> 00:17:11.630
So that Dialogflow has something
called Followup Intent.

00:17:11.630 --> 00:17:14.410
So if we hover over the
Make Appointment Intent,

00:17:14.410 --> 00:17:17.380
you can see there's the
Add Followup Intent option.

00:17:17.380 --> 00:17:19.930
So we'll create a
custom Followup Intent.

00:17:19.930 --> 00:17:22.734
So this new intent that's
listed here with that arrow

00:17:22.734 --> 00:17:25.150
means that this Intent will
only be matched after the Make

00:17:25.150 --> 00:17:26.230
Appointment Intent.

00:17:26.230 --> 00:17:29.110
So we'll click that, and we'll
add some User Says examples.

00:17:29.110 --> 00:17:32.110
So for this, we've just ask
the user if they want a service

00:17:32.110 --> 00:17:33.880
or if they want
to fix their bike.

00:17:33.880 --> 00:17:37.120
So we'll enter in some
examples of how users

00:17:37.120 --> 00:17:39.580
might answer that question.

00:17:39.580 --> 00:17:44.440
They might say, I need
a repair or they might

00:17:44.440 --> 00:17:49.780
say can you service my bike?

00:17:49.780 --> 00:17:52.560
So now you can see, as before,
with the built-in entities,

00:17:52.560 --> 00:17:55.930
Dialogflow has correctly
identified our custom entity

00:17:55.930 --> 00:17:59.110
that we just created.

00:17:59.110 --> 00:18:00.840
Since we need to know
this information,

00:18:00.840 --> 00:18:02.590
we're going to make
it required, and we'll

00:18:02.590 --> 00:18:04.070
add a prompt for it as well.

00:18:04.070 --> 00:18:08.380
We can service or
repair your bike.

00:18:08.380 --> 00:18:11.690
Which one would you like?

00:18:14.420 --> 00:18:16.070
So now for our
response here, it would

00:18:16.070 --> 00:18:19.310
be nice to confirm our
actual appointment time

00:18:19.310 --> 00:18:22.730
and date after they've said
what appointment type they have.

00:18:22.730 --> 00:18:24.680
But as you'll see here
in the parameter table,

00:18:24.680 --> 00:18:27.170
we actually don't have
the time or date here.

00:18:27.170 --> 00:18:29.090
So how do we get this value?

00:18:29.090 --> 00:18:31.760
For that, we're going to need to
dig in a little deeper into how

00:18:31.760 --> 00:18:33.350
followup Intents work.

00:18:33.350 --> 00:18:37.220
So Followup Intents work through
something called Context.

00:18:37.220 --> 00:18:40.260
So once we added this Followup
Intent to the Make Appointment

00:18:40.260 --> 00:18:43.910
Intent, an output context was
added to Make Appointment.

00:18:43.910 --> 00:18:47.390
There are two types of a
context, output context

00:18:47.390 --> 00:18:48.560
and input context.

00:18:48.560 --> 00:18:52.040
Output contexts attach
a context to a session

00:18:52.040 --> 00:18:53.930
after the Intent
has been matched.

00:18:53.930 --> 00:18:56.960
So in this case, after our
Make Appointment Intent has

00:18:56.960 --> 00:19:01.252
been matched, the Make
Appointment Followup Context

00:19:01.252 --> 00:19:02.460
will be added to the session.

00:19:05.520 --> 00:19:08.340
Next, let's take a look
at our Followup Intent.

00:19:08.340 --> 00:19:11.100
For our Followup Intent,
we have the same value,

00:19:11.100 --> 00:19:12.910
Make Appointment
Followup Context,

00:19:12.910 --> 00:19:14.460
except instead of
the output context,

00:19:14.460 --> 00:19:16.240
it's in the input context.

00:19:16.240 --> 00:19:18.570
So this makes the Make
Appointment custom

00:19:18.570 --> 00:19:21.330
or our Followup Intent,
only get matched

00:19:21.330 --> 00:19:24.480
once the Make Appointment
Followup Context is

00:19:24.480 --> 00:19:26.040
attached to the session.

00:19:26.040 --> 00:19:28.770
So in our case, the only time
that the Make Appointment

00:19:28.770 --> 00:19:31.140
Followup Context is
attached to the session

00:19:31.140 --> 00:19:33.870
is our parent Make
Appointment Intent.

00:19:33.870 --> 00:19:36.690
So this means that this Make
Appointment custom Followup

00:19:36.690 --> 00:19:39.700
Intent will only be matched
after our Make Appointment

00:19:39.700 --> 00:19:41.460
Parent Intent.

00:19:41.460 --> 00:19:43.440
In addition to controlling
the flow and how

00:19:43.440 --> 00:19:47.110
Intents are matched, contexts
also store parameter values.

00:19:47.110 --> 00:19:49.770
So we can use the value of
MakeAppointment-followup

00:19:49.770 --> 00:19:53.250
to reference the time and date
that we previously gathered

00:19:53.250 --> 00:19:55.380
in the Make Appointment Intent.

00:19:55.380 --> 00:19:58.850
So we'll go ahead
and do that now.

00:19:58.850 --> 00:20:01.730
We'll say, OK.

00:20:01.730 --> 00:20:04.760
We'll schedule a dollar
sign appointment--

00:20:04.760 --> 00:20:07.580
so this is grabbing whether
they're fixing or servicing

00:20:07.580 --> 00:20:10.680
their bike, just
like last time--

00:20:10.680 --> 00:20:12.720
for-- and now we want
to insert the date.

00:20:12.720 --> 00:20:15.560
So we'll do pound make
appointment followup

00:20:15.560 --> 00:20:19.400
and then do dot date
at, and then we'll

00:20:19.400 --> 00:20:22.540
do the same context
value dot time.

00:20:22.540 --> 00:20:24.290
So this will grab our
time and date values

00:20:24.290 --> 00:20:25.773
from the previous Intent.

00:20:25.773 --> 00:20:29.300
We'll see you then.

00:20:32.030 --> 00:20:32.790
All right.

00:20:32.790 --> 00:20:35.437
Now instead of trying this
out on Dialogflow Simulator

00:20:35.437 --> 00:20:37.020
on the right, why
don't we try and see

00:20:37.020 --> 00:20:38.644
what this looks like
when you deploy it

00:20:38.644 --> 00:20:40.216
to the Google Assistant.

00:20:40.216 --> 00:20:42.090
For that, we'll look
again on the left panel,

00:20:42.090 --> 00:20:45.330
and we'll see a page
called Integrations.

00:20:45.330 --> 00:20:48.120
So this Integrations page
shows all the integrations

00:20:48.120 --> 00:20:51.030
that Dialogflow has with other
chat and voice providers.

00:20:51.030 --> 00:20:54.580
So you can use any of these to
deploy your Dialogflow agent

00:20:54.580 --> 00:20:56.040
to your users on any platform.

00:20:56.040 --> 00:20:58.740
For now, we're going to start
out with the Google Assistant.

00:20:58.740 --> 00:21:01.800
And you can see some information
about how Dialogflow works

00:21:01.800 --> 00:21:03.090
with the Google Assistant.

00:21:03.090 --> 00:21:06.180
But for now, we're just
going to try it out.

00:21:06.180 --> 00:21:09.330
So clicking Test opens up the
Actions on Google Console.

00:21:09.330 --> 00:21:11.310
The Actions on Google
Console is where

00:21:11.310 --> 00:21:13.950
you define all the
information about your action

00:21:13.950 --> 00:21:15.330
like invocation name.

00:21:15.330 --> 00:21:18.180
So for right now, we
say talk to my test app.

00:21:18.180 --> 00:21:20.550
My test app is a special
name that's just for you

00:21:20.550 --> 00:21:21.870
when you're starting to test.

00:21:21.870 --> 00:21:24.870
But you can enter in
any name for your brand

00:21:24.870 --> 00:21:26.970
once you get into
the Actions Console.

00:21:26.970 --> 00:21:31.345
For now, we'll try with
just talk to my test app.

00:21:31.345 --> 00:21:32.220
GOOGLE ASSISTANT: OK.

00:21:32.220 --> 00:21:34.661
Here's the test
version of my test app.

00:21:34.661 --> 00:21:35.160
[DING]

00:21:35.160 --> 00:21:35.743
SPEAKER 1: Hi.

00:21:35.743 --> 00:21:37.140
Welcome to my bike shop.

00:21:37.140 --> 00:21:38.431
How can I help?

00:21:38.431 --> 00:21:39.930
MATT CARROLL: So
what's happened now

00:21:39.930 --> 00:21:43.140
is we've invocated our action,
and that sends the request

00:21:43.140 --> 00:21:45.780
to Dialogflow, which matches
the Welcome Intent, which

00:21:45.780 --> 00:21:48.930
sends back the response
we defined earlier.

00:21:48.930 --> 00:21:51.240
So let's try this out.

00:21:51.240 --> 00:21:56.120
Can I book an appointment
for tomorrow at noon?

00:21:58.988 --> 00:22:00.610
SPEAKER 1: What
time works for you?

00:22:00.610 --> 00:22:01.462
MATT CARROLL: Noon.

00:22:01.462 --> 00:22:02.962
There we go.

00:22:02.962 --> 00:22:03.670
SPEAKER 1: Great.

00:22:03.670 --> 00:22:06.220
I've set up your appointment
for the 11th of May 2018

00:22:06.220 --> 00:22:09.230
at 12 hours 0 minutes
and 0 seconds.

00:22:09.230 --> 00:22:11.740
Do you need a repair
or just a tune-up?

00:22:11.740 --> 00:22:14.300
MATT CARROLL: So now we see it's
matched the Make Appointment

00:22:14.300 --> 00:22:14.930
Intent.

00:22:14.930 --> 00:22:17.830
And now we're going to try
out our Followup Intent.

00:22:17.830 --> 00:22:20.580
So we'll say I need a repair.

00:22:23.360 --> 00:22:24.010
SPEAKER 1: OK.

00:22:24.010 --> 00:22:26.980
We'll schedule a fix
for the 11th of May 2018

00:22:26.980 --> 00:22:29.470
at 12 hours 0 minutes
and 0 seconds.

00:22:29.470 --> 00:22:31.399
We'll see you then.

00:22:31.399 --> 00:22:33.940
MATT CARROLL: So now you can
see that it correctly identified

00:22:33.940 --> 00:22:37.600
the repair word and
mapped it to the word fix.

00:22:37.600 --> 00:22:39.880
So in our response it says,
OK, we'll schedule a fix,

00:22:39.880 --> 00:22:42.880
and then also grabbed the
time and date from the context

00:22:42.880 --> 00:22:45.350
to surface that to
the user as well.

00:22:45.350 --> 00:22:47.267
So now that we've got
an action fully working,

00:22:47.267 --> 00:22:48.891
I'm going to pass it
back to Dan, who's

00:22:48.891 --> 00:22:50.920
going to talk about
some of the new features

00:22:50.920 --> 00:22:52.540
that we've built in
Dialogflow over the last year

00:22:52.540 --> 00:22:54.520
and some more features
I didn't get to go over.

00:22:54.520 --> 00:22:54.945
Dan.

00:22:54.945 --> 00:22:56.320
DANIEL IMRIE-SITUNAYAKE:
Awesome.

00:22:56.320 --> 00:22:57.302
[APPLAUSE]

00:23:00.860 --> 00:23:01.360
All right.

00:23:01.360 --> 00:23:03.550
You should take a bow.

00:23:03.550 --> 00:23:04.240
So yeah.

00:23:04.240 --> 00:23:06.220
I hope that we've shown
you how quickly you

00:23:06.220 --> 00:23:07.990
can build a really
powerful Assistant

00:23:07.990 --> 00:23:09.850
action with Dialogflow.

00:23:09.850 --> 00:23:13.360
In a few minutes, we've built an
engaging conversational agent.

00:23:13.360 --> 00:23:15.190
We connected it to
our code, and we've

00:23:15.190 --> 00:23:18.040
been able to deploy and
test it immediately.

00:23:18.040 --> 00:23:21.400
And the really crazy thing is
that after review, this action

00:23:21.400 --> 00:23:25.300
will be available on
over 500 million devices

00:23:25.300 --> 00:23:26.650
with no install required.

00:23:26.650 --> 00:23:30.330
People just have to say
the name of your action.

00:23:30.330 --> 00:23:34.420
So conversational experience
is a pretty new idea,

00:23:34.420 --> 00:23:37.140
and building your first
agent can be hard,

00:23:37.140 --> 00:23:38.820
because there's a
whole set of concepts

00:23:38.820 --> 00:23:40.860
that may be unfamiliar for you.

00:23:40.860 --> 00:23:44.110
So we've built a lot of tools
that will help make it easier

00:23:44.110 --> 00:23:46.450
to get started.

00:23:46.450 --> 00:23:49.590
Dialogflow comes with
45 pre-built agents

00:23:49.590 --> 00:23:52.870
that you can use as a starting
point when you're developing.

00:23:52.870 --> 00:23:55.420
We cover a load of different
real-world scenarios

00:23:55.420 --> 00:23:58.030
like setting alarms,
booking tickets,

00:23:58.030 --> 00:24:00.220
and all sorts of stuff.

00:24:00.220 --> 00:24:02.710
All you need to do is import
the Intent and Entities

00:24:02.710 --> 00:24:08.060
and customize them to
support and suit your action.

00:24:08.060 --> 00:24:10.570
In fact, every single
Dialogflow Agent

00:24:10.570 --> 00:24:13.720
comes equipped with
over 50 system entities.

00:24:13.720 --> 00:24:15.910
These cover common
concepts, including

00:24:15.910 --> 00:24:19.270
numbers, dates and times,
amounts with units,

00:24:19.270 --> 00:24:21.540
and geography.

00:24:21.540 --> 00:24:24.670
Dialogflow can extract values
based on these concepts

00:24:24.670 --> 00:24:26.380
with no additional work.

00:24:26.380 --> 00:24:27.880
So you can understand
your customers

00:24:27.880 --> 00:24:32.480
and help them get things done
without a lot of overhead.

00:24:32.480 --> 00:24:35.000
We also have a growing
library of sample agents

00:24:35.000 --> 00:24:37.520
that demonstrate how
to use our features.

00:24:37.520 --> 00:24:40.520
And these are referenced
in our docs and on GitHub.

00:24:40.520 --> 00:24:43.280
And for I/O this year,
we've added a new feature

00:24:43.280 --> 00:24:45.770
where you can open the
sample with one click

00:24:45.770 --> 00:24:47.480
and try it out instantly.

00:24:47.480 --> 00:24:50.570
So this will deploy the agent
and the fulfillment code

00:24:50.570 --> 00:24:53.300
so you can just customize it
and be up and running straight

00:24:53.300 --> 00:24:55.960
away.

00:24:55.960 --> 00:25:00.190
Speaking of our docs, we've also
built in interactive Dialogflow

00:25:00.190 --> 00:25:01.060
Agents.

00:25:01.060 --> 00:25:03.250
So you can play with
real-life examples

00:25:03.250 --> 00:25:06.010
to help you learn
important topics.

00:25:06.010 --> 00:25:08.650
We're regularly publishing
new videos and tutorials

00:25:08.650 --> 00:25:11.640
to help you develop, and we
just published another brief

00:25:11.640 --> 00:25:14.610
Getting Started video to
our Dialogflow YouTube.

00:25:17.190 --> 00:25:18.630
Once you've learned
the basics, we

00:25:18.630 --> 00:25:21.670
provide tools to help you
do really powerful stuff.

00:25:21.670 --> 00:25:25.750
So Dialogflow will help you
extend your actions over time

00:25:25.750 --> 00:25:30.330
so you can improve your customer
experience and performance.

00:25:30.330 --> 00:25:32.840
For example, natural
conversations

00:25:32.840 --> 00:25:36.290
branch in complex and
unpredictable ways.

00:25:36.290 --> 00:25:39.020
Things that are discussed
earlier in a conversation

00:25:39.020 --> 00:25:41.560
can have an impact later on.

00:25:41.560 --> 00:25:43.850
And in the past,
conversational platforms

00:25:43.850 --> 00:25:46.190
required you to hard
code everything,

00:25:46.190 --> 00:25:49.400
which was really brittle
and difficult to do anything

00:25:49.400 --> 00:25:52.870
to improve over time.

00:25:52.870 --> 00:25:55.110
Fortunately,
Dialogflow's context

00:25:55.110 --> 00:25:58.110
allows you to shape the
flow of a conversation

00:25:58.110 --> 00:26:00.750
without having to predict
every possible twist

00:26:00.750 --> 00:26:02.700
and turn ahead of time.

00:26:02.700 --> 00:26:05.850
This can help you get beyond
the idea of a menu-based phone

00:26:05.850 --> 00:26:10.140
conversation and create genuine
conversation between people

00:26:10.140 --> 00:26:13.020
and computers.

00:26:13.020 --> 00:26:14.960
Once your action's
up and running,

00:26:14.960 --> 00:26:17.510
you'll have a ton of
logs of conversations.

00:26:17.510 --> 00:26:20.600
And you can use this data to
improve your action's machine

00:26:20.600 --> 00:26:22.000
learning model.

00:26:22.000 --> 00:26:23.930
Our training feature
will show you

00:26:23.930 --> 00:26:25.910
all of your past
interactions, and it

00:26:25.910 --> 00:26:29.300
helps you assign them as
training phrases for Intents.

00:26:29.300 --> 00:26:31.460
You can also create
new Intents when

00:26:31.460 --> 00:26:35.920
customers ask for something
that you didn't handle.

00:26:35.920 --> 00:26:38.920
Every feature we add is
guided by these three goals--

00:26:38.920 --> 00:26:40.900
we want to create an
excellent full stack

00:26:40.900 --> 00:26:43.110
experience for
our developers, we

00:26:43.110 --> 00:26:45.640
want the best possible
natural language understanding

00:26:45.640 --> 00:26:47.410
in machine learning,
and we want it

00:26:47.410 --> 00:26:49.480
to be easy to
integrate and scale

00:26:49.480 --> 00:26:52.240
across any
conversational platform.

00:26:52.240 --> 00:26:54.310
We use developer
feedback to decide

00:26:54.310 --> 00:26:55.926
how to evolve our
platform, and I

00:26:55.926 --> 00:26:57.550
wanted to show you
some of the features

00:26:57.550 --> 00:27:02.930
that we've added since last
year's I/O. First, we've

00:27:02.930 --> 00:27:05.990
heard that you want better
insight into how conversations

00:27:05.990 --> 00:27:06.800
are going.

00:27:06.800 --> 00:27:08.740
So we've improved
our History view

00:27:08.740 --> 00:27:10.760
and made it much
easier for developers

00:27:10.760 --> 00:27:13.610
to see how their
agent is being used.

00:27:13.610 --> 00:27:16.430
Now you can filter on
dates and platform,

00:27:16.430 --> 00:27:19.510
and you can search through logs
to find particular interactions

00:27:19.510 --> 00:27:20.960
that are noteworthy.

00:27:20.960 --> 00:27:23.420
This will help improve
your debugging experience

00:27:23.420 --> 00:27:28.382
and help you get to a better
agent design over time.

00:27:28.382 --> 00:27:29.840
We've also been
working really hard

00:27:29.840 --> 00:27:32.780
to support all the languages
that your users speak.

00:27:32.780 --> 00:27:37.310
And today we support a total
of 21 languages and 9 locales.

00:27:37.310 --> 00:27:39.770
We've recently added support
for languages including

00:27:39.770 --> 00:27:42.170
Hindi, Thai, and Indonesian.

00:27:42.170 --> 00:27:44.390
And we cover all of the
languages the Assistant

00:27:44.390 --> 00:27:46.770
supports, plus more.

00:27:46.770 --> 00:27:49.340
We've also added
multi-lingual agents.

00:27:49.340 --> 00:27:52.430
So you can build one agent that
works for all of your users

00:27:52.430 --> 00:27:53.180
across the world.

00:27:55.740 --> 00:27:57.620
Many of our customers
have been asking us

00:27:57.620 --> 00:27:59.610
for an Enterprise solution.

00:27:59.610 --> 00:28:03.230
And so this year, we introduced
Dialogflow Enterprise Edition.

00:28:03.230 --> 00:28:05.720
This brings Dialogflow
to Google Cloud,

00:28:05.720 --> 00:28:08.180
which means you get
Enterprise-grade compliance

00:28:08.180 --> 00:28:11.660
and customer support on
our Cloud Terms of Service.

00:28:11.660 --> 00:28:15.440
So Ubisoft built their
personal gaming assistant, Sam,

00:28:15.440 --> 00:28:17.630
on Dialogflow
Enterprise Edition.

00:28:17.630 --> 00:28:19.700
And Sam was able to
understand and answer

00:28:19.700 --> 00:28:22.910
88% of player's requests
in the first three

00:28:22.910 --> 00:28:23.960
months of their beta.

00:28:26.690 --> 00:28:29.060
So I hope you're feeling
excited to get started

00:28:29.060 --> 00:28:31.460
building with Dialogflow.

00:28:31.460 --> 00:28:34.220
There have been tons of really
amazing Assistant sessions

00:28:34.220 --> 00:28:36.260
at this year's I/O,
and you can find

00:28:36.260 --> 00:28:38.900
links to recordings of
them all on the I/O website

00:28:38.900 --> 00:28:41.240
so you can enjoy
them at your leisure.

00:28:41.240 --> 00:28:42.890
You should also make
sure you check out

00:28:42.890 --> 00:28:45.110
our Codelabs, which will
guide you through building

00:28:45.110 --> 00:28:48.250
your first action.

00:28:48.250 --> 00:28:51.010
Your feedback is super
important to our team.

00:28:51.010 --> 00:28:53.050
And we really hope you've
enjoyed this session.

00:28:53.050 --> 00:28:56.950
So we'd also love for you to
head over to the I/O website

00:28:56.950 --> 00:28:59.590
and let us know your thoughts.

00:28:59.590 --> 00:29:02.060
It's super easy to get
started with Dialogflow,

00:29:02.060 --> 00:29:04.720
and we put together a page
full of links that can

00:29:04.720 --> 00:29:06.490
help you get up and running.

00:29:06.490 --> 00:29:09.570
You'll also find links on
there to our online communities

00:29:09.570 --> 00:29:11.170
where our whole
team is hanging out,

00:29:11.170 --> 00:29:13.630
and we can help
answer your questions.

00:29:13.630 --> 00:29:17.410
Also, don't be shy about
tweeting our AoGDevs hashtag

00:29:17.410 --> 00:29:21.190
if you want to share your I/O
experiences with our team.

00:29:21.190 --> 00:29:23.860
So we hope you've had
a really amazing I/O

00:29:23.860 --> 00:29:26.640
and that you go on and have
a ton of fun building actions

00:29:26.640 --> 00:29:28.810
with Google with Dialogflow.

00:29:28.810 --> 00:29:30.096
Thank you very much.

00:29:30.096 --> 00:29:31.048
MATT CARROLL: Thanks.

00:29:31.048 --> 00:29:32.000
[APPLAUSE]

00:29:32.000 --> 00:29:35.154
[MUSIC PLAYING]

