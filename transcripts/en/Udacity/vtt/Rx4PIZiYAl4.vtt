WEBVTT
Kind: captions
Language: en

00:00:00.160 --> 00:00:01.780
When writing code in many languages,

00:00:01.780 --> 00:00:04.560
it's common to have features that span multiple files.

00:00:04.560 --> 00:00:07.950
Let's say you have a function that currently takes one argument defined in

00:00:07.950 --> 00:00:11.860
one file and a call to this function in another file.

00:00:11.860 --> 00:00:14.800
If you want to change this function to take an additional argument,

00:00:14.800 --> 00:00:18.280
you'll need to simultaneously change code in both files.

00:00:18.280 --> 00:00:20.870
In many of the non-code oriented version control systems we

00:00:20.870 --> 00:00:24.720
mentioned previously, files are tracked one at a time.

00:00:24.720 --> 00:00:27.340
If I open two Google docs and edit both of them,

00:00:27.340 --> 00:00:30.220
then later I want to find the versions of the files before I made either of

00:00:30.220 --> 00:00:34.120
the edits, first I have to find the right version in one doc, then dig through

00:00:34.120 --> 00:00:37.660
the other one's log to find the revision for approximately the same time.

00:00:37.660 --> 00:00:39.510
That's doable, but really annoying.

00:00:40.610 --> 00:00:42.020
Let's consider a few situations to

00:00:42.020 --> 00:00:45.700
think about whether tracking files individually or together makes more sense.

00:00:45.700 --> 00:00:48.200
For example, competition-style coding.

00:00:48.200 --> 00:00:51.120
In case you're not familiar with them, most coding competitions just ask you

00:00:51.120 --> 00:00:54.170
to solve a problem that can be done in a single file.

00:00:54.170 --> 00:00:55.950
Another example would be an HTML file and

00:00:55.950 --> 00:00:59.080
a CSS file that together make up a web page.

00:00:59.080 --> 00:01:01.450
Or maybe some photos you've Photoshopped.

00:01:01.450 --> 00:01:04.110
Or a novel, split up into multiple chapters.

00:01:04.110 --> 00:01:05.370
For each of these situations,

00:01:05.370 --> 00:01:08.170
if you think it makes more sense to track the files together rather than

00:01:08.170 --> 00:01:10.090
separately, check the box next to it.

