WEBVTT
Kind: captions
Language: en

00:00:00.295 --> 00:00:00.950
SEAN MADAY: All right.

00:00:00.950 --> 00:00:02.820
Good afternoon, everybody.

00:00:02.820 --> 00:00:04.140
Thanks for taking the
time to join us.

00:00:04.140 --> 00:00:05.060
My name is Sean Maday.

00:00:05.060 --> 00:00:07.305
I'm a product manager on the
Maps for Business team.

00:00:07.305 --> 00:00:08.560
AVNISH BHATNAGAR:
And I'm Avnish.

00:00:08.560 --> 00:00:10.310
I'm a technical solutions
engineer in

00:00:10.310 --> 00:00:11.692
the Enterprise team.

00:00:11.692 --> 00:00:14.030
SEAN MADAY: Our goal today is
to talk to you a little bit

00:00:14.030 --> 00:00:16.500
about a project that's near and
our heart, and that is the

00:00:16.500 --> 00:00:18.790
ability to take the consumer
experience of Google Earth and

00:00:18.790 --> 00:00:21.550
Google Maps, and take it
completely offline, behind the

00:00:21.550 --> 00:00:23.480
firewall, or into kind
of bandwidth

00:00:23.480 --> 00:00:25.470
disenfranchised areas.

00:00:25.470 --> 00:00:27.760
We're going to throw a bunch of
nomenclature at you today.

00:00:27.760 --> 00:00:31.960
And we're going to try to
paint a picture for you.

00:00:31.960 --> 00:00:34.280
But it would be helpful for us
if we could just kind of do a

00:00:34.280 --> 00:00:35.550
quick poll of the audience.

00:00:35.550 --> 00:00:36.670
And I'm going to ask
a few questions.

00:00:36.670 --> 00:00:38.890
How many of you have ever heard
of or used Google Earth

00:00:38.890 --> 00:00:41.210
Enterprise?

00:00:41.210 --> 00:00:41.460
Great.

00:00:41.460 --> 00:00:43.020
OK.

00:00:43.020 --> 00:00:45.900
For those joining us via video,
there's thousands of

00:00:45.900 --> 00:00:47.710
people in attendance, and they
all raised their hand.

00:00:47.710 --> 00:00:49.060
How about Portable?

00:00:49.060 --> 00:00:50.420
How many of you have
ever used Portable?

00:00:50.420 --> 00:00:51.960
The product we call Portable?

00:00:51.960 --> 00:00:52.610
OK.

00:00:52.610 --> 00:00:53.270
Great.

00:00:53.270 --> 00:00:54.170
How about Google Maps Engine?

00:00:54.170 --> 00:00:55.420
How many of you have
ever been hands on

00:00:55.420 --> 00:00:56.685
with Google Maps Engine?

00:00:56.685 --> 00:00:57.120
Great.

00:00:57.120 --> 00:00:57.360
OK.

00:00:57.360 --> 00:00:58.070
That's very helpful.

00:00:58.070 --> 00:00:58.660
Thank you.

00:00:58.660 --> 00:01:00.920
As we go forward, for those of
you who weren't familiar with

00:01:00.920 --> 00:01:03.870
any of those three products,
we'll make sure that we make

00:01:03.870 --> 00:01:06.220
that clear to you.

00:01:06.220 --> 00:01:09.090
Before we begin, I want to touch
on some current events.

00:01:12.210 --> 00:01:15.830
You woke up this morning to
headlines that a series of

00:01:15.830 --> 00:01:19.430
really severe tornadoes had
struck just southwest of the

00:01:19.430 --> 00:01:20.680
Dallas-Fort Worth area.

00:01:23.620 --> 00:01:27.310
A lot of times, we see this
type of headline.

00:01:27.310 --> 00:01:30.330
But these headlines get kind
of lost in the news cycle.

00:01:30.330 --> 00:01:34.490
But instrumental to the relief
and response effort in the

00:01:34.490 --> 00:01:36.570
aftermath of a critical
incident, or a natural

00:01:36.570 --> 00:01:39.660
disaster like this,
is usually a map.

00:01:39.660 --> 00:01:42.980
And the context that that map
could provide to us as kind of

00:01:42.980 --> 00:01:46.610
fellow Americans, or fellow
citizens of Earth, but also to

00:01:46.610 --> 00:01:50.870
first responders and emergency
managers who are going to be

00:01:50.870 --> 00:01:54.420
trying to restore and provide
relief for those affected.

00:01:54.420 --> 00:01:56.345
So I just want to provide some
context with the map.

00:01:56.345 --> 00:01:58.120
I'll show you here.

00:01:58.120 --> 00:02:01.450
These are the four counties that
were primarily affected.

00:02:01.450 --> 00:02:04.840
The green dots, or the green
placemarks you see here, were

00:02:04.840 --> 00:02:06.960
kind of initial observations
that were recorded this

00:02:06.960 --> 00:02:10.759
morning by several local
news affiliates.

00:02:10.759 --> 00:02:13.930
And then the blue placemarks
you see here are actually

00:02:13.930 --> 00:02:16.430
confirmed touchdowns that the
National Weather Service just

00:02:16.430 --> 00:02:19.950
put out a few hours ago.

00:02:19.950 --> 00:02:22.300
As we zoom in and we pan around
these affected areas,

00:02:22.300 --> 00:02:24.510
the map is a really interesting
way for us to kind

00:02:24.510 --> 00:02:26.980
of get some appreciation for
what this human terrain and

00:02:26.980 --> 00:02:31.060
this natural landscape
looks like.

00:02:31.060 --> 00:02:32.850
For those emergency managers
who are going to be

00:02:32.850 --> 00:02:36.060
responsible for understanding
the scope and extent of this

00:02:36.060 --> 00:02:38.840
devastation, and for those first
responders who are going

00:02:38.840 --> 00:02:42.260
to be going door to door,
assessing damage and looking

00:02:42.260 --> 00:02:45.520
for those who are injured or
afflicted, these sorts of maps

00:02:45.520 --> 00:02:49.395
can be absolutely critical to
understanding and getting the

00:02:49.395 --> 00:02:50.930
lay of the land.

00:02:50.930 --> 00:02:53.340
So what we want to do today is
we want to illustrate to you

00:02:53.340 --> 00:02:57.330
that these maps are obviously
very impactful and very useful

00:02:57.330 --> 00:03:00.310
in an online setting, but they
can become even more useful.

00:03:00.310 --> 00:03:02.310
They can become a
force multiplier

00:03:02.310 --> 00:03:04.300
in an offline scenario.

00:03:04.300 --> 00:03:05.720
Actually, the demo I'm
showing you here

00:03:05.720 --> 00:03:06.840
is completely offline.

00:03:06.840 --> 00:03:10.190
This is all running on my local
machine from the local

00:03:10.190 --> 00:03:12.260
host URL you see at the
top of the screen.

00:03:12.260 --> 00:03:15.530
All of these map tiles were cut
from Google Maps Engine.

00:03:15.530 --> 00:03:18.710
These are Google Map tiles
down to level 17.

00:03:18.710 --> 00:03:21.960
You get some very granular,
street level understanding.

00:03:21.960 --> 00:03:23.640
But all of this is
coming offline.

00:03:23.640 --> 00:03:25.810
So in the aftermath of these
critical incidents, when

00:03:25.810 --> 00:03:27.740
there's limited or no
connectivity to the outside

00:03:27.740 --> 00:03:31.470
world, that's really where this
story of offline begins.

00:03:31.470 --> 00:03:35.920
As we take you through today,
that's going to kind of set

00:03:35.920 --> 00:03:37.930
the expectation for what you
should see, and what we're

00:03:37.930 --> 00:03:42.200
going to show you, and how you
can extend on these platforms.

00:03:42.200 --> 00:03:44.090
You've heard some big numbers
over the last few days from

00:03:44.090 --> 00:03:46.860
folks like Brian McClendon
and Manu Markes.

00:03:46.860 --> 00:03:52.100
And they've talked to you about
the absolute ubiquity of

00:03:52.100 --> 00:03:54.610
the Google Maps and Google
Earth platforms.

00:03:54.610 --> 00:03:57.720
A billion users a week, a
million websites out there on

00:03:57.720 --> 00:04:01.200
the open internet have
implemented the Maps API.

00:04:01.200 --> 00:04:03.700
Google Maps has become the
platform whereby people go to

00:04:03.700 --> 00:04:05.475
make fast, informed decisions
about geography.

00:04:05.475 --> 00:04:06.190
Right?

00:04:06.190 --> 00:04:10.350
So asset tracking, looking for
information about where to

00:04:10.350 --> 00:04:13.140
live, where to shop,
what to buy.

00:04:13.140 --> 00:04:15.480
Google Earth becomes the
substrate, or the backdrop, by

00:04:15.480 --> 00:04:19.560
which these sorts of
engagements occur.

00:04:19.560 --> 00:04:21.750
The focus of our team, and then
the focus of the product

00:04:21.750 --> 00:04:24.540
we're going to show you today,
is really on how to extend

00:04:24.540 --> 00:04:27.130
this functionality into
situations and scenarios where

00:04:27.130 --> 00:04:30.250
that connectivity to the outside
world is unavailable

00:04:30.250 --> 00:04:32.780
or is significantly degraded.

00:04:32.780 --> 00:04:34.910
We talked to the emergency
management, or emergency

00:04:34.910 --> 00:04:37.190
response type scenario, but
there are many other scenarios

00:04:37.190 --> 00:04:40.460
that play a role here.

00:04:40.460 --> 00:04:43.400
Paramount among them, things
like research and outreach.

00:04:43.400 --> 00:04:46.750
Things that take researchers
and scientists to far off

00:04:46.750 --> 00:04:49.240
areas of the globe where they
just don't have connectivity

00:04:49.240 --> 00:04:50.550
to the rest of the world.

00:04:50.550 --> 00:04:52.690
Then there's certainly lots of
interesting defense and public

00:04:52.690 --> 00:04:57.130
safety applications for this
sort of technology.

00:04:57.130 --> 00:04:58.900
So with that, let's dive
and talk a little

00:04:58.900 --> 00:05:00.760
bit more about Portable.

00:05:00.760 --> 00:05:05.090
Google Maps Engine Portable, or
Portable, as we call it, is

00:05:05.090 --> 00:05:07.060
the product that takes the
familiarity of Google Earth

00:05:07.060 --> 00:05:10.360
and Google Maps offline behind
the firewall, deploys it on

00:05:10.360 --> 00:05:12.520
your own network, on your
own local device.

00:05:12.520 --> 00:05:15.080
We have builds of Portable for
Mac, Windows, and laptop.

00:05:15.080 --> 00:05:16.390
And to be totally
transparent--

00:05:16.390 --> 00:05:18.060
I want to be very clear-- this
is an enterprise track.

00:05:18.060 --> 00:05:19.660
These are generally
paid products.

00:05:19.660 --> 00:05:22.830
Although we have a very
robust outreach, and

00:05:22.830 --> 00:05:24.260
develop for good effort.

00:05:24.260 --> 00:05:29.800
If you work with an NGO, or
you work in the nonprofit

00:05:29.800 --> 00:05:32.650
space, we would love to get you
a grant for this sort of

00:05:32.650 --> 00:05:35.620
functionality so that you can
empower your constituents with

00:05:35.620 --> 00:05:37.580
this technology.

00:05:37.580 --> 00:05:43.730
We're also excited to foreshadow
some releases in

00:05:43.730 --> 00:05:46.940
the months ahead, where we will
take this capability to

00:05:46.940 --> 00:05:48.235
Android tablets and
smartphones.

00:05:51.360 --> 00:05:55.830
Portable, as it exists today,
is a laptop application,

00:05:55.830 --> 00:05:57.610
desktop application,
which builds for

00:05:57.610 --> 00:06:00.560
Mac, Linux, and Windows.

00:06:00.560 --> 00:06:03.350
It scales from one to 10 users,
so you could either run

00:06:03.350 --> 00:06:06.190
the scenario locally on your
individual machine, or sit in

00:06:06.190 --> 00:06:09.030
a small tactical operations,
or team type environment,

00:06:09.030 --> 00:06:10.670
where you could share
that experience

00:06:10.670 --> 00:06:12.940
across up to 10 devices.

00:06:12.940 --> 00:06:15.270
And at its essence, behind
Portable is really just a

00:06:15.270 --> 00:06:16.980
lightweight, Tornado
web server.

00:06:16.980 --> 00:06:18.880
For those of you who aren't
familiar with Tornado, it's an

00:06:18.880 --> 00:06:22.160
open sourced, kind of massively
scalable web serving

00:06:22.160 --> 00:06:23.080
application.

00:06:23.080 --> 00:06:25.750
Very powerful, and it provides
the foundation by which we

00:06:25.750 --> 00:06:27.000
deliver the Portable
functionality.

00:06:30.610 --> 00:06:33.810
As we step deeper into this
Portable ecosystem, Portable

00:06:33.810 --> 00:06:38.150
is the client software that will
serve up a Maps on Earth

00:06:38.150 --> 00:06:38.910
experience.

00:06:38.910 --> 00:06:41.590
But what it serves is a portable
cache, or as we may

00:06:41.590 --> 00:06:43.040
refer to it, a cut.

00:06:43.040 --> 00:06:46.020
A map or a globe that has been
packaged and prepared for

00:06:46.020 --> 00:06:47.290
offline use.

00:06:47.290 --> 00:06:49.590
There's a couple ways
right now to build

00:06:49.590 --> 00:06:50.930
one of these cuts.

00:06:50.930 --> 00:06:52.410
The first is with Google
Earth Enterprise.

00:06:52.410 --> 00:06:54.200
For those of you who've used
Google Earth Enterprise, or

00:06:54.200 --> 00:06:56.390
have access to Google Earth
Enterprise, you have the

00:06:56.390 --> 00:07:00.790
ability to extract a portion,
or even the entirety of your

00:07:00.790 --> 00:07:05.990
Google Earth Enterprise Maps on
Earth experience into this

00:07:05.990 --> 00:07:08.490
file format so that
you can use it in

00:07:08.490 --> 00:07:10.100
these offline settings.

00:07:10.100 --> 00:07:12.190
We're also really excited to
bring online in the next

00:07:12.190 --> 00:07:15.660
couple months the capability to
cut this rich map data out

00:07:15.660 --> 00:07:18.520
of the Google Maps
Engine enclave.

00:07:18.520 --> 00:07:21.600
All of you, I'm sure, have
heard, but we would love to

00:07:21.600 --> 00:07:23.540
get to Google Maps Engine
into your hands.

00:07:23.540 --> 00:07:26.080
If you come visit us at the
Sandbox, come visit us at the

00:07:26.080 --> 00:07:28.000
booth, we'll give you
information so that you can

00:07:28.000 --> 00:07:30.260
start a free trial of the Google
Maps Engine platform.

00:07:30.260 --> 00:07:32.740
It's a very exciting way to take
lots of imagery, terrain,

00:07:32.740 --> 00:07:35.920
and vector data, process it in
the cloud, and then very soon,

00:07:35.920 --> 00:07:37.880
you'll be able to pull out
these maps and earth

00:07:37.880 --> 00:07:41.130
experiences for completely
offline use.

00:07:41.130 --> 00:07:44.335
The output of either of these
two processes is a .GLC file.

00:07:44.335 --> 00:07:44.640
Right?

00:07:44.640 --> 00:07:46.460
This is your portable cut.

00:07:46.460 --> 00:07:49.660
With that cut, you could do
some interesting things.

00:07:49.660 --> 00:07:51.950
But let's first dive into
what that cut is.

00:07:51.950 --> 00:07:53.590
That cut, as we call it,
is really just a

00:07:53.590 --> 00:07:55.656
single binary file.

00:07:55.656 --> 00:07:56.830
It can be very large.

00:07:56.830 --> 00:07:57.660
It can be very small.

00:07:57.660 --> 00:08:01.260
It's really restricted only by
the file size limitations of

00:08:01.260 --> 00:08:03.250
your file system.

00:08:03.250 --> 00:08:06.830
It carries the .GLC extension.

00:08:06.830 --> 00:08:09.160
In the past, if you have used
Google Earth Enterprise, you

00:08:09.160 --> 00:08:11.510
may have seen a .GLM
or .GLB file.

00:08:11.510 --> 00:08:13.900
.GLC is the new, kind of
standard wrapper that will

00:08:13.900 --> 00:08:17.440
encompass all of these Portable
caches going forward.

00:08:17.440 --> 00:08:21.130
We also have the ability to
include into this binary file

00:08:21.130 --> 00:08:24.390
a custom point of interest
search, so that it your users,

00:08:24.390 --> 00:08:26.950
or your constituents, your
stakeholders, need to search

00:08:26.950 --> 00:08:29.130
against this rich corpus of
data you're giving them

00:08:29.130 --> 00:08:31.360
offline, we want to give you
the ability to define the

00:08:31.360 --> 00:08:35.600
points that they can
search against.

00:08:35.600 --> 00:08:38.240
So now that we have this cut
that we've taken from Google

00:08:38.240 --> 00:08:40.760
Earth Enterprise or Google Maps
Engine, we can drop it

00:08:40.760 --> 00:08:42.669
seamlessly into the
Portable server.

00:08:42.669 --> 00:08:44.780
And once it's on the Portable
server, we have some really

00:08:44.780 --> 00:08:49.080
interesting ways to interact and
extend this functionality.

00:08:49.080 --> 00:08:51.530
Avnish is going to dig into
this a little deeper.

00:08:51.530 --> 00:08:55.360
But at a high level, you can
think of this as the Earth API

00:08:55.360 --> 00:08:57.170
and the Maps API you're
familiar with from the

00:08:57.170 --> 00:09:00.950
consumer internet, packaged
and deployed in a slightly

00:09:00.950 --> 00:09:04.150
modified data on your
local device.

00:09:04.150 --> 00:09:06.000
You can also interact with these
caches via the Google

00:09:06.000 --> 00:09:08.630
Earth Enterprise client, that
is to say our version of

00:09:08.630 --> 00:09:11.090
Google Earth Pro that isn't
hardwired to Google servers.

00:09:11.090 --> 00:09:12.640
We'll show you some examples
of that when we

00:09:12.640 --> 00:09:14.600
jump into the demos.

00:09:14.600 --> 00:09:17.100
Then of course, we have some
interesting and evolving ways

00:09:17.100 --> 00:09:20.040
for you to interact with this
Portable Map or Earth

00:09:20.040 --> 00:09:24.050
experience using Android
devices.

00:09:24.050 --> 00:09:26.090
So with that, let's talk through
how we create one of

00:09:26.090 --> 00:09:28.180
these Portable maps or globes.

00:09:28.180 --> 00:09:31.070
The basic building block of
cutting a Portable is really

00:09:31.070 --> 00:09:32.740
to define your area
of interest.

00:09:32.740 --> 00:09:35.070
And that's done with
the KML polygon.

00:09:35.070 --> 00:09:36.600
It can be as simple
or as complex a

00:09:36.600 --> 00:09:38.470
polygon as you see fit.

00:09:38.470 --> 00:09:42.230
It can be a single polygon, or
it could be a multi-polygon,

00:09:42.230 --> 00:09:43.800
depending on your use cases.

00:09:43.800 --> 00:09:47.210
It is specified simply
with KML.

00:09:47.210 --> 00:09:49.020
Once you have specified your
KML, you'll make some

00:09:49.020 --> 00:09:51.190
decisions about how deep
into the cuts.

00:09:51.190 --> 00:09:53.220
And when I say deep, I'm talking
about how many zoom

00:09:53.220 --> 00:09:56.480
levels deep into the cut you
will want to extract that

00:09:56.480 --> 00:09:59.030
data, and then how far outside
the cut you're going to want

00:09:59.030 --> 00:10:00.820
to extract that data.

00:10:00.820 --> 00:10:02.650
For those of you who aren't
familiar with zoom levels,

00:10:02.650 --> 00:10:05.520
it's the way that we take a lot
of map data and make it

00:10:05.520 --> 00:10:08.770
discoverable at different zoom
levels with varying degrees of

00:10:08.770 --> 00:10:13.650
resolution and numbers of tiles,
based on how far in or

00:10:13.650 --> 00:10:15.020
out you have zoomed
and panned.

00:10:19.260 --> 00:10:22.430
Today, for those of you using
Google Earth Enterprise or who

00:10:22.430 --> 00:10:24.410
have access to a Google Earth
Enterprise system, you have a

00:10:24.410 --> 00:10:26.300
couple different ways to kick
off one of these cuts.

00:10:26.300 --> 00:10:28.830
The first is with a simple
HTML5 interface.

00:10:28.830 --> 00:10:30.850
That is something I'll
show you right now.

00:10:36.350 --> 00:10:38.800
This is the cutting interface
that will be released with

00:10:38.800 --> 00:10:41.550
Google Earth Enterprise 4.5 in
just another couple weeks.

00:10:41.550 --> 00:10:43.610
Here, I'm looking at a
two dimensional map.

00:10:43.610 --> 00:10:46.970
This map has fairly low
resolution satellite imagery

00:10:46.970 --> 00:10:48.430
for the entire world.

00:10:48.430 --> 00:10:49.870
Four kilometer satellite
imagery.

00:10:49.870 --> 00:10:52.080
So fairly low resolution.

00:10:52.080 --> 00:10:54.790
But as I zoom and pan, you'll
notice the map is truly a

00:10:54.790 --> 00:10:55.360
Google map.

00:10:55.360 --> 00:10:58.020
This looks, and feels, and
interacts like a Google map.

00:10:58.020 --> 00:11:00.190
From the cutter here, I have the
ability to define an area

00:11:00.190 --> 00:11:01.120
of interest.

00:11:01.120 --> 00:11:05.260
So let's say I want to take kind
of the Western seaboard

00:11:05.260 --> 00:11:10.680
of the United States, just shy
of the Washington border.

00:11:10.680 --> 00:11:13.210
And once I've defined my polygon
here, I can also kind

00:11:13.210 --> 00:11:15.960
of redefine the points
of interest.

00:11:15.960 --> 00:11:18.480
From there, I'll have the
ability to state a name.

00:11:18.480 --> 00:11:22.650
So maybe I want to call this
my West Coast Globe.

00:11:22.650 --> 00:11:24.220
I can throw in a description.

00:11:24.220 --> 00:11:26.760
As you can imagine, over time,
you can generate a lot of

00:11:26.760 --> 00:11:27.875
these cuts on your
local machine.

00:11:27.875 --> 00:11:29.415
You can generate a lot
of these cuts that go

00:11:29.415 --> 00:11:30.170
out into the field.

00:11:30.170 --> 00:11:32.250
So you're going to want to be as
descriptive as possible to

00:11:32.250 --> 00:11:36.580
make sure that you capture what
is inside of this cut.

00:11:36.580 --> 00:11:38.860
Certainly here, we'll just
make an example.

00:11:38.860 --> 00:11:42.360
But you can be as verbose
as you would like.

00:11:42.360 --> 00:11:45.270
Using these pull-down menus,
we'll decide again how deep we

00:11:45.270 --> 00:11:47.510
want to cut inside the polygon,
and how deep we want

00:11:47.510 --> 00:11:48.880
to cut outside the polygon.

00:11:48.880 --> 00:11:50.990
So here, I'm simply going
to make some arbitrary

00:11:50.990 --> 00:11:51.920
selections.

00:11:51.920 --> 00:11:54.490
We'll say zoom level four
for the entire world.

00:11:54.490 --> 00:11:56.340
That's a very low resolution.

00:11:56.340 --> 00:11:58.820
The entire world represented on
a very few number of tiles.

00:11:58.820 --> 00:12:02.270
And we'll cut to level 18
inside the polygon.

00:12:02.270 --> 00:12:05.810
That is a large number of tiles,
down to generally about

00:12:05.810 --> 00:12:08.380
one meter resolution, if we
were talking in imagery.

00:12:08.380 --> 00:12:09.630
And then we can kick
off that cut.

00:12:09.630 --> 00:12:10.680
It's an asynchronous process.

00:12:10.680 --> 00:12:12.750
It kind of happens here
in the browser window.

00:12:12.750 --> 00:12:14.650
Lots of dialogue coming
back to tell us how

00:12:14.650 --> 00:12:16.050
big that cut is getting.

00:12:16.050 --> 00:12:18.060
And this was a fairly small
cut, because I had low

00:12:18.060 --> 00:12:19.370
resolution imagery.

00:12:19.370 --> 00:12:23.090
So it's indicated that
the cut is complete.

00:12:23.090 --> 00:12:25.750
In addition to that user
interface, The HTML5 user

00:12:25.750 --> 00:12:28.160
interface that we package with
Google Earth Enterprise, we

00:12:28.160 --> 00:12:30.680
also have command line utilities
that would allow you

00:12:30.680 --> 00:12:31.960
to script this workflow.

00:12:31.960 --> 00:12:33.870
We'll dig a little deeper into
that in a couple slides.

00:12:33.870 --> 00:12:36.760
But some really exciting ways
there to kick off cuts

00:12:36.760 --> 00:12:38.560
programmatically.

00:12:38.560 --> 00:12:39.910
And the neat thing here--

00:12:39.910 --> 00:12:42.320
and this is kind of a departure
from the capability

00:12:42.320 --> 00:12:46.710
we've been able to offer with
the online version of Google

00:12:46.710 --> 00:12:48.690
Earth or Google Earth
Enterprise--

00:12:48.690 --> 00:12:51.750
we have the ability with
Portable to let you offer your

00:12:51.750 --> 00:12:54.980
users and your viewers up to
five layers of imagery.

00:12:54.980 --> 00:12:56.750
So I'd like to show
you that now.

00:12:56.750 --> 00:12:58.710
Here I'm logged into the Google

00:12:58.710 --> 00:12:59.900
Earth Enterprise client.

00:12:59.900 --> 00:13:01.460
I'm going to zip back to
Portable, and I'm going to

00:13:01.460 --> 00:13:03.970
change the Portable map that
I'm currently serving.

00:13:03.970 --> 00:13:06.290
So this is the Portable
interface as it exists.

00:13:06.290 --> 00:13:08.770
As I mentioned to you, HTML5
interface, it looks about the

00:13:08.770 --> 00:13:10.590
same on Mac, Windows,
or Linux.

00:13:10.590 --> 00:13:12.220
Here, I'm going to say that
I want to serve up my

00:13:12.220 --> 00:13:14.990
Las Vegas 3D globe.

00:13:14.990 --> 00:13:17.030
Now that that's serving, I can
jump back to the Earth

00:13:17.030 --> 00:13:17.970
Enterprise client.

00:13:17.970 --> 00:13:20.840
And in addition to being logged
into Google's globe,

00:13:20.840 --> 00:13:22.800
which isn't necessary, but just
happens to be what I have

00:13:22.800 --> 00:13:25.350
here, I'm going to log in to
my local host address.

00:13:25.350 --> 00:13:27.440
You'll notice in the lower left
hand corner, I've now

00:13:27.440 --> 00:13:30.170
added a second database
that I can explore.

00:13:30.170 --> 00:13:33.550
And as we zoom in, I can
actually turn off all the

00:13:33.550 --> 00:13:34.980
imagery, terrain, and vector
data associated

00:13:34.980 --> 00:13:35.710
with Google's globe.

00:13:35.710 --> 00:13:38.540
So we just see this small patch
of alpha massed imagery

00:13:38.540 --> 00:13:42.510
that we cut over the
Las Vegas strip.

00:13:42.510 --> 00:13:44.940
Now you'll notice in the lower
left hand corner, we have five

00:13:44.940 --> 00:13:46.580
different imagery layers
that represent

00:13:46.580 --> 00:13:48.320
this particular scene.

00:13:48.320 --> 00:13:51.350
So as a user now, I can come
back and forth, and look at

00:13:51.350 --> 00:13:52.290
these individual dates.

00:13:52.290 --> 00:13:54.810
I can see what this scene
looked like in 2010.

00:13:54.810 --> 00:13:56.930
I can see what it looked
like in 2003.

00:13:56.930 --> 00:13:59.510
We've had this ability to
support historic imagery in

00:13:59.510 --> 00:14:00.970
Google Earth for a long time.

00:14:00.970 --> 00:14:03.380
But Portable gives you the
flexibility to actually use

00:14:03.380 --> 00:14:06.190
the transparency slider to step
back and forth between

00:14:06.190 --> 00:14:07.510
these individual scenes.

00:14:07.510 --> 00:14:09.740
So we can really look at how
this landscape has changed

00:14:09.740 --> 00:14:11.610
between any of the five imagery
layers that are

00:14:11.610 --> 00:14:13.720
denoted in lower left
hand corner of our

00:14:13.720 --> 00:14:15.410
Google Earth display.

00:14:15.410 --> 00:14:16.910
Very cool way to kind
of understand

00:14:16.910 --> 00:14:18.160
that change over time.

00:14:21.570 --> 00:14:23.960
We're really excited, and we
have a really strong team of

00:14:23.960 --> 00:14:27.280
engineers working hard on the
ability to allow cutting of

00:14:27.280 --> 00:14:28.930
portables from Google
Maps Engine.

00:14:28.930 --> 00:14:32.480
So this is coming soon, a little
bit later in 2013.

00:14:32.480 --> 00:14:35.090
But in the Google Maps Engine
interface, we'll have a

00:14:35.090 --> 00:14:38.260
browser-based capability for
you to define the polygon,

00:14:38.260 --> 00:14:40.730
your point of interest, choose
the layers you want to cut,

00:14:40.730 --> 00:14:42.450
and kick off an asynchronous
cut.

00:14:42.450 --> 00:14:45.230
Take large amounts of map data,
combine them into a

00:14:45.230 --> 00:14:48.360
single binary file that you can
pull from the cloud, and

00:14:48.360 --> 00:14:51.560
serve locally on
your machines.

00:14:51.560 --> 00:14:52.560
This is working today.

00:14:52.560 --> 00:14:54.870
Actually, some of the demos I'm
showing you here, like the

00:14:54.870 --> 00:14:57.300
Texas demo, was actually cut
from Google Maps Engine.

00:14:57.300 --> 00:15:00.830
Again, we're just kind of
working on making this

00:15:00.830 --> 00:15:02.040
capability more robust.

00:15:02.040 --> 00:15:03.730
We're really excited to get
it in the hands of trusted

00:15:03.730 --> 00:15:05.500
testers in the next
couple months.

00:15:05.500 --> 00:15:08.280
In addition to what we're
offering inside of the HTML5

00:15:08.280 --> 00:15:11.200
interface, we also are going to
allow programmatic access.

00:15:11.200 --> 00:15:14.510
Again, you could kick off these
cuts programmatically.

00:15:14.510 --> 00:15:17.470
Our vision going forward is
really to offer some composite

00:15:17.470 --> 00:15:20.000
solutions that allow you to
leverage both the cloud,

00:15:20.000 --> 00:15:24.520
you're on-premise geospatial
investments, and new emerging

00:15:24.520 --> 00:15:28.010
form factors for devices to
create familiar Google Earth

00:15:28.010 --> 00:15:30.570
and Google Maps experiences that
your users can interact

00:15:30.570 --> 00:15:31.940
with completely offline.

00:15:31.940 --> 00:15:33.940
Whether those tiles come from
Google Earth Enterprise,

00:15:33.940 --> 00:15:36.950
Google Maps Engine, maybe even
cutting Google basemap tiles,

00:15:36.950 --> 00:15:39.160
as we mature that capability,
you should be able to

00:15:39.160 --> 00:15:41.960
consolidate these individual
cuts, and create the custom

00:15:41.960 --> 00:15:44.390
map environment that your
users need, but with the

00:15:44.390 --> 00:15:47.130
familiarity that Google Earth
and Google Maps has instilled

00:15:47.130 --> 00:15:48.380
in these consumers.

00:15:50.800 --> 00:15:53.840
Right in line with this
is this ability to cut

00:15:53.840 --> 00:15:54.490
programmatically.

00:15:54.490 --> 00:15:56.940
What I really like about this
is we hearken back to that

00:15:56.940 --> 00:15:58.500
disaster response scenario.

00:15:58.500 --> 00:16:02.130
This gives us some really
exciting ways to proactively

00:16:02.130 --> 00:16:05.500
respond to natural disasters
and critical incidents.

00:16:05.500 --> 00:16:06.890
What do I mean by that.?

00:16:06.890 --> 00:16:08.740
Well, the National Weather
Service puts out the map you

00:16:08.740 --> 00:16:10.570
see in the upper left
hand corner.

00:16:10.570 --> 00:16:13.500
24 hours a day, 365 days a year,
they're monitoring all

00:16:13.500 --> 00:16:16.220
3,141 different counties
in the United States.

00:16:16.220 --> 00:16:17.820
And they're monitoring the
weather patterns that are

00:16:17.820 --> 00:16:19.920
affecting the people inside
of those counties.

00:16:19.920 --> 00:16:22.310
They're putting out this
large, common, alerting

00:16:22.310 --> 00:16:25.560
protocol, XML, or CAP, as
they kind of call it.

00:16:25.560 --> 00:16:28.140
At every given moment, this
thing is updated.

00:16:28.140 --> 00:16:30.760
It shows which counties are
under a flood advisory, which

00:16:30.760 --> 00:16:35.370
counties are under a severe
winter weather advisory, which

00:16:35.370 --> 00:16:37.350
counties are under a
tornado warning.

00:16:37.350 --> 00:16:40.880
With this sort of rich data, and
the programmatic access to

00:16:40.880 --> 00:16:43.820
cutting that is currently
available today in Google

00:16:43.820 --> 00:16:45.910
Earth Enterprise and quickly
becoming available in Google

00:16:45.910 --> 00:16:48.350
Maps Engine, we can start
to script some

00:16:48.350 --> 00:16:49.880
really interesting solutions.

00:16:49.880 --> 00:16:52.960
So for instance, the Texas demo
I showed you earlier,

00:16:52.960 --> 00:16:55.290
simply scrape through this XML,
look for counties that

00:16:55.290 --> 00:16:59.470
had progressed from a tornado
watch to a tornado warning.

00:16:59.470 --> 00:17:02.700
It then combined the geographic
bounds for those

00:17:02.700 --> 00:17:05.520
counties into a single polygon,
passed that polygon

00:17:05.520 --> 00:17:08.540
into the Google Maps Engine
cutter, and allowed us to kick

00:17:08.540 --> 00:17:11.140
off that cut programmatically
the minute those

00:17:11.140 --> 00:17:12.500
warnings were issued.

00:17:12.500 --> 00:17:15.150
So to follow that chain of kind
of thinking, that would

00:17:15.150 --> 00:17:19.410
allow your organization, or
first responders anywhere, to

00:17:19.410 --> 00:17:23.119
have access to this rich,
offline map data by the time

00:17:23.119 --> 00:17:24.720
that they get the alert that
a storm is impending.

00:17:27.680 --> 00:17:30.390
To do this, we'll just throw up
a couple code samples that

00:17:30.390 --> 00:17:31.540
would let you kind
of dig into this.

00:17:31.540 --> 00:17:33.770
But it's as simple as just using
some Python to reach

00:17:33.770 --> 00:17:36.940
out, grab that XML from the
National Weather Service, read

00:17:36.940 --> 00:17:39.880
it into your local system, parse
through it, and then as

00:17:39.880 --> 00:17:42.850
you parse through it, look
for alerts that pass your

00:17:42.850 --> 00:17:43.860
particular threshold.

00:17:43.860 --> 00:17:46.690
Those warnings, those alerts,
tornadoes, floods, whatever

00:17:46.690 --> 00:17:49.670
may fit your absolute
use case.

00:17:49.670 --> 00:17:52.300
Another interesting
implementation of this is

00:17:52.300 --> 00:17:55.070
something that our colleague,
Sean Wohltman, has put a lot

00:17:55.070 --> 00:17:58.340
of passion behind for the last
few years, and that is making

00:17:58.340 --> 00:18:02.650
this data available offline in
response to large hurricanes.

00:18:02.650 --> 00:18:04.900
And so the National Weather
Service, in conjunction with

00:18:04.900 --> 00:18:08.130
the National Oceanographic and
Atmospheric Administration,

00:18:08.130 --> 00:18:11.620
puts out these cones of
uncertainty whenever a major

00:18:11.620 --> 00:18:15.650
hurricane is bound for
the United States.

00:18:15.650 --> 00:18:18.820
We can, again, follow the same
workflow to reach out, grab

00:18:18.820 --> 00:18:22.620
that data, do something with
that polygon to convert it to

00:18:22.620 --> 00:18:25.760
KML, so that we can use it
inside the Google Maps Engine

00:18:25.760 --> 00:18:28.510
or Google Earth Enterprise
cutting infrastructure.

00:18:28.510 --> 00:18:31.120
Here, this was as simple as
just a wget to grab it.

00:18:31.120 --> 00:18:33.790
We needed to unzip the zip
file that the National

00:18:33.790 --> 00:18:35.990
Oceanographic and Atmospheric
Administration and the

00:18:35.990 --> 00:18:38.220
National Weather Service had put
out, and then just use an

00:18:38.220 --> 00:18:41.870
open source vector processing
tool, like OGR, to convert it

00:18:41.870 --> 00:18:43.960
from a shape file into a KML.

00:18:43.960 --> 00:18:45.920
Once we have that KML,
we can feed it

00:18:45.920 --> 00:18:46.920
into Google Maps Engine.

00:18:46.920 --> 00:18:48.340
We can feed it into Google
Earth Enterprise.

00:18:48.340 --> 00:18:50.510
And we can do that
programmatically to cut this

00:18:50.510 --> 00:18:52.640
data, and make it available.

00:18:52.640 --> 00:18:55.030
So now that we've set the
foundation for what Portable

00:18:55.030 --> 00:18:57.110
is, and what it can do for you,
Avnish is going to talk

00:18:57.110 --> 00:18:59.670
about how motivated and creative
developers like

00:18:59.670 --> 00:19:02.060
yourself can extend this
functionality to do

00:19:02.060 --> 00:19:03.060
interesting things in your

00:19:03.060 --> 00:19:05.372
applications completely offline.

00:19:05.372 --> 00:19:06.622
AVNISH BHATNAGAR:
Thanks, Sean.

00:19:10.850 --> 00:19:15.930
So Sean has nicely described the
workflow for cutting, and

00:19:15.930 --> 00:19:18.930
creating, and serving your
portable globes.

00:19:18.930 --> 00:19:21.050
So now, let's say you've done
all that, and now you have

00:19:21.050 --> 00:19:26.380
this GLB, GLC file that's
sitting on your hard disk.

00:19:26.380 --> 00:19:30.590
It could be tens of megabytes,
or several terabytes in size,

00:19:30.590 --> 00:19:33.310
depending on your cut
that you made.

00:19:33.310 --> 00:19:36.420
Now you're interested in serving
this out, and building

00:19:36.420 --> 00:19:38.880
your applications
on top of it.

00:19:38.880 --> 00:19:42.350
Now sure, you could launch the
Enterprise Client or the

00:19:42.350 --> 00:19:47.620
Mobile Client that come out of
the box with these products,

00:19:47.620 --> 00:19:49.000
and do your globe that way.

00:19:49.000 --> 00:19:51.820
But where's the fun
in that, right?

00:19:51.820 --> 00:19:56.740
You want to be able to build
your own custom applications

00:19:56.740 --> 00:19:59.680
that are targeted for your
specific use case and

00:19:59.680 --> 00:20:00.740
environment.

00:20:00.740 --> 00:20:01.920
So how do you do that?

00:20:01.920 --> 00:20:05.680
Well, the key is the Google
APIs that you

00:20:05.680 --> 00:20:06.620
all know and love.

00:20:06.620 --> 00:20:09.710
Namely the Google Maps API,
the Google Earth, the

00:20:09.710 --> 00:20:10.960
JavaScript API.

00:20:13.310 --> 00:20:17.360
Now conveniently, we offer
these with the product.

00:20:17.360 --> 00:20:22.380
They come bundled with Google
Earth Enterprise server, as

00:20:22.380 --> 00:20:25.110
well as the Portable server.

00:20:25.110 --> 00:20:28.590
They are typically kept in--

00:20:28.590 --> 00:20:32.630
they align in terms of the
version with the latest frozen

00:20:32.630 --> 00:20:36.530
release that's out
on google.com.

00:20:36.530 --> 00:20:40.220
Fundamentally, the version of
the API that comes with the

00:20:40.220 --> 00:20:45.980
Portable server is the same as
what you find on google.com

00:20:45.980 --> 00:20:52.040
with respect to the events, such
as the mouse over, click,

00:20:52.040 --> 00:20:53.470
double click.

00:20:53.470 --> 00:20:55.260
You have the same type
of controls.

00:20:55.260 --> 00:21:00.940
Zoom, pan, scale, plus all
the custom controls.

00:21:00.940 --> 00:21:04.370
You have overlays, such
as symbols, markers,

00:21:04.370 --> 00:21:06.350
polylines, et cetera.

00:21:06.350 --> 00:21:11.920
But there are some subtle
differences in the API that we

00:21:11.920 --> 00:21:14.830
provide with the Portable server
compared to the one

00:21:14.830 --> 00:21:18.080
that you load on google.com.

00:21:18.080 --> 00:21:20.720
Some of those differences
include the way you actually

00:21:20.720 --> 00:21:23.460
call and invoke those APIs.

00:21:23.460 --> 00:21:24.670
Because obviously, you're
not going to be

00:21:24.670 --> 00:21:26.060
getting them from Google.

00:21:26.060 --> 00:21:27.950
You're going to be getting them
from the Portable server.

00:21:27.950 --> 00:21:32.020
So they need to be loaded in
your web page from there.

00:21:32.020 --> 00:21:36.980
And there's certain classes that
are offered to make it

00:21:36.980 --> 00:21:41.430
easier to interact with the
2D and the 3D map tiles.

00:21:41.430 --> 00:21:44.060
And I'm going to talk about
that in a moment.

00:21:44.060 --> 00:21:46.980
And as you might also guess,
there's no support for certain

00:21:46.980 --> 00:21:52.890
types of services, like the
Direction service, Panaramio,

00:21:52.890 --> 00:21:56.330
Street View, et cetera, services
that require access

00:21:56.330 --> 00:21:58.110
to Google's infrastructure.

00:22:01.160 --> 00:22:05.390
So before we get into the sort
of nitty gritty, let me review

00:22:05.390 --> 00:22:11.600
the workflow for hosting
a 2D map on Portable.

00:22:11.600 --> 00:22:14.730
Typically, you're going to build
your 2D map either in

00:22:14.730 --> 00:22:17.710
Google Earth Enterprise
Fusion, or, as Sean

00:22:17.710 --> 00:22:20.540
demonstrated, in Google
Maps Engine.

00:22:20.540 --> 00:22:24.340
You're going to choose the
layers of interest, your

00:22:24.340 --> 00:22:28.400
imagery, your vector layers,
possibly some terrain.

00:22:28.400 --> 00:22:30.980
At that point, you're going
to publish that 2D map.

00:22:30.980 --> 00:22:34.970
In the case of GME, that's just
a matter of one click,

00:22:34.970 --> 00:22:37.780
and making it available to
the folks that you share.

00:22:37.780 --> 00:22:40.930
And in the case of Fusion, you
would typically publish it to

00:22:40.930 --> 00:22:43.100
an Earth Enterprise server.

00:22:43.100 --> 00:22:50.380
At that point, you're going
to cut a piece of that map

00:22:50.380 --> 00:22:54.080
corresponding to the region of
interest, exactly the way Sean

00:22:54.080 --> 00:22:55.370
demonstrated.

00:22:55.370 --> 00:22:58.540
The output of that is going
to be that GLC file.

00:22:58.540 --> 00:23:01.140
At that point, you're going to
start serving that GLC file to

00:23:01.140 --> 00:23:04.590
the Portable server, and then
you can start building your

00:23:04.590 --> 00:23:09.635
custom HTML applications that
load the JavaScript API.

00:23:12.910 --> 00:23:18.440
What I'd like to do now, I have
here a little USB memory

00:23:18.440 --> 00:23:23.770
stick that contains a GLC file
from a globe that I published

00:23:23.770 --> 00:23:25.470
from Google Earth Enterprise.

00:23:25.470 --> 00:23:29.030
It's a relatively small one.

00:23:29.030 --> 00:23:33.360
A few hundred megabytes from a
sample, natural view globe

00:23:33.360 --> 00:23:35.180
that I had created.

00:23:35.180 --> 00:23:40.090
It's just got the base imagery
layer, and maybe one or two

00:23:40.090 --> 00:23:41.340
vector layers.

00:23:44.120 --> 00:23:46.990
According to the blue box, I had
built that globe of mine

00:23:46.990 --> 00:23:51.180
in Fusion, and then I published
it to my Earth

00:23:51.180 --> 00:23:55.360
Enterprise Server, the red box,
and then I cut it using

00:23:55.360 --> 00:23:59.130
the Portable cutter UI.

00:23:59.130 --> 00:24:03.560
So what I'm going to do
now is insert this

00:24:03.560 --> 00:24:09.140
USB disk on my laptop.

00:24:09.140 --> 00:24:10.780
And before doing that,
I'm going to go

00:24:10.780 --> 00:24:15.960
completely off the grid.

00:24:15.960 --> 00:24:17.345
Turn off Wi-Fi here.

00:24:21.140 --> 00:24:23.290
It was like one of those corny
moments in a movie where they

00:24:23.290 --> 00:24:25.640
use the title of the movie
in the actual dialogue.

00:24:25.640 --> 00:24:27.750
I said off the grid.

00:24:27.750 --> 00:24:29.000
I like it.

00:24:36.600 --> 00:24:42.570
So I fire up my natural view,
US Portable globe, which

00:24:42.570 --> 00:24:44.920
automatically by double clicking
it, kicks off the

00:24:44.920 --> 00:24:46.660
Portable server that
I have running here

00:24:46.660 --> 00:24:50.360
on my Windows laptop.

00:24:50.360 --> 00:24:53.350
I click on View the
Map in a Browser.

00:24:53.350 --> 00:24:55.980
It shows me a preview,
essentially,

00:24:55.980 --> 00:24:58.820
of the globe I created.

00:24:58.820 --> 00:25:02.480
Now, if you look at the URL
here, at this point, this map,

00:25:02.480 --> 00:25:06.870
this globe is being served
from my Windows

00:25:06.870 --> 00:25:09.280
machine on Port 9335.

00:25:09.280 --> 00:25:11.470
So at this point, I can
start interacting

00:25:11.470 --> 00:25:14.980
with this globe directly.

00:25:14.980 --> 00:25:17.940
So I have a little Hello World
example that I'm going to go

00:25:17.940 --> 00:25:20.145
over, that I'm going
to load here.

00:25:26.360 --> 00:25:29.560
And let's take a look at the
source code for this.

00:25:38.680 --> 00:25:42.600
These three lines here is where
I actually load the

00:25:42.600 --> 00:25:48.710
Google Maps API that's on
my Portable server.

00:25:48.710 --> 00:25:55.350
After the bootstrap loader,
the fusion_maps_v3 and the

00:25:55.350 --> 00:25:59.380
other JavaScript helper file
essentially load the entire

00:25:59.380 --> 00:26:03.710
Google Maps API into
this application.

00:26:03.710 --> 00:26:07.140
So that's one of the
differences.

00:26:07.140 --> 00:26:12.500
Then down here, you'll note
the use the class called

00:26:12.500 --> 00:26:15.090
GFusionMap, which is--

00:26:15.090 --> 00:26:17.220
you can think of it as
an extension of the

00:26:17.220 --> 00:26:18.470
google.maps.mapclass.

00:26:20.800 --> 00:26:24.750
And it's what you need to
instantiate in order to create

00:26:24.750 --> 00:26:29.580
your 2D map in your HTML
container, which is typically

00:26:29.580 --> 00:26:31.520
a development.

00:26:31.520 --> 00:26:36.180
This class accepts the same
options as google.maps.map,

00:26:36.180 --> 00:26:40.270
and can be used in
the same way.

00:26:40.270 --> 00:26:41.386
And that's it.

00:26:41.386 --> 00:26:46.020
That's all you need to do to
load 2D map in this simple

00:26:46.020 --> 00:26:47.270
Hello World application.

00:26:50.310 --> 00:26:54.050
Let's look at, maybe,
a few more examples.

00:26:54.050 --> 00:26:59.570
I have one that loads some
symbols and polylines.

00:27:07.610 --> 00:27:13.800
Now, here what I'm displaying is
certain markers that can be

00:27:13.800 --> 00:27:16.400
used to decorate not
just points, but

00:27:16.400 --> 00:27:19.470
polylines, as well.

00:27:19.470 --> 00:27:22.790
It's making use of the
visualization features of the

00:27:22.790 --> 00:27:24.350
Google Maps API.

00:27:24.350 --> 00:27:29.770
But you'll note this math is
completely interactive.

00:27:29.770 --> 00:27:32.640
In other words, I interact with
this map in the same way

00:27:32.640 --> 00:27:36.120
that I would any Google map.

00:27:36.120 --> 00:27:39.410
This was the area that I cut
in the San Francisco.

00:27:39.410 --> 00:27:41.670
The area outside
of it is, well,

00:27:41.670 --> 00:27:43.250
outside of my cut region.

00:27:43.250 --> 00:27:48.180
But I can zoom in to the highest
resolution that was in

00:27:48.180 --> 00:27:49.485
my original basemap.

00:27:53.710 --> 00:27:57.180
And I can zoom, pan, scale,
all that good stuff.

00:28:02.080 --> 00:28:04.335
Again, this is running
completely offline.

00:28:04.335 --> 00:28:06.480
Let's have a look at
another example.

00:28:06.480 --> 00:28:07.735
Perhaps a heat map.

00:28:14.000 --> 00:28:18.780
This is showing a time-based
based animation of the

00:28:18.780 --> 00:28:24.810
expansion of Walmart stores
since the 1960s until now.

00:28:24.810 --> 00:28:28.100
You can, again, use the
visualization capabilities in

00:28:28.100 --> 00:28:31.770
the Google Maps API, varying
the intensity and the color

00:28:31.770 --> 00:28:33.990
spectrum of the heat map.

00:28:33.990 --> 00:28:39.690
And as before, I can interact
with this just as with any

00:28:39.690 --> 00:28:43.400
other Google map.

00:28:43.400 --> 00:28:46.230
I believe I have one other
example here to show

00:28:46.230 --> 00:28:48.910
SEAN MADAY: These are the same
visualization demonstrations

00:28:48.910 --> 00:28:50.980
and code examples you'll
find online using

00:28:50.980 --> 00:28:52.250
public the Maps API.

00:28:52.250 --> 00:28:54.530
The power here, of course, is
that it's all running off of

00:28:54.530 --> 00:28:57.560
Avnish's local machine via
that local host URL.

00:28:57.560 --> 00:28:58.810
AVNISH BHATNAGAR: Right.

00:29:01.560 --> 00:29:04.580
Again, this is another
time-based based animation

00:29:04.580 --> 00:29:09.378
showing the expansion of
these Walmart stores.

00:29:09.378 --> 00:29:11.310
SEAN MADAY: Our goal with these
demonstrations and code

00:29:11.310 --> 00:29:12.750
samples is really to highlight
to you the

00:29:12.750 --> 00:29:14.000
flexibility of this platform.

00:29:20.652 --> 00:29:23.440
AVNISH BHATNAGAR: And this is
against my base map that I had

00:29:23.440 --> 00:29:27.100
cut, and it's all being
served out of this USB

00:29:27.100 --> 00:29:30.895
drive that I have here.

00:29:30.895 --> 00:29:32.145
Let's go back.

00:29:41.020 --> 00:29:43.250
I guess I got to get back
online to resume the

00:29:43.250 --> 00:29:44.500
presentation.

00:29:49.150 --> 00:29:50.290
SEAN MADAY: We can use mine.

00:29:50.290 --> 00:29:52.180
Here you go.

00:29:52.180 --> 00:29:53.190
I got mine on.

00:29:53.190 --> 00:29:54.200
AVNISH BHATNAGAR: OK, thanks.

00:29:54.200 --> 00:29:56.515
SEAN MADAY: Yep.

00:29:56.515 --> 00:29:59.065
AVNISH BHATNAGAR: So in that
Hello World example that I

00:29:59.065 --> 00:30:02.140
just showed you, I've
highlighted the lines here

00:30:02.140 --> 00:30:06.080
that would be needed to load
the JavaScript API off the

00:30:06.080 --> 00:30:10.020
Portable server instead
of from google.com.

00:30:10.020 --> 00:30:13.550
And again, you want to pay close
attention to the use of

00:30:13.550 --> 00:30:20.044
this GFusionMap, which is what
you would need to instantiate.

00:30:20.044 --> 00:30:21.600
SEAN MADAY: All these
slides will be made

00:30:21.600 --> 00:30:22.680
available after the talk.

00:30:22.680 --> 00:30:25.140
So again, these code samples
aren't meant to be eye charts.

00:30:25.140 --> 00:30:27.050
We want to leave these with you
as a resource that you can

00:30:27.050 --> 00:30:27.760
reference later.

00:30:27.760 --> 00:30:29.220
AVNISH BHATNAGAR: Right.

00:30:29.220 --> 00:30:35.140
And very analogous to the 2D
maps, we offer the 3D map API,

00:30:35.140 --> 00:30:38.210
which is a Google Earth API.

00:30:38.210 --> 00:30:42.620
It also is supported through
the use of the Google Earth

00:30:42.620 --> 00:30:45.210
plug-in, which runs on
Windows and Mac.

00:30:45.210 --> 00:30:50.320
And that API includes all the
capabilities that you're

00:30:50.320 --> 00:30:53.460
probably familiar with from
placemarks, to balloons, and

00:30:53.460 --> 00:30:55.890
historic imagery, et cetera.

00:30:55.890 --> 00:30:59.100
In addition, it offers the
capability to connect to

00:30:59.100 --> 00:31:01.530
multiple globes.

00:31:01.530 --> 00:31:08.130
So this is a snippet of a Hello
World example for 3D.

00:31:08.130 --> 00:31:11.530
Again, you're going to load the
JavaScript API from the

00:31:11.530 --> 00:31:13.990
Portable server locally.

00:31:13.990 --> 00:31:17.030
That's what the script
typeline is.

00:31:17.030 --> 00:31:19.570
In the
google.earth.createinstance

00:31:19.570 --> 00:31:24.800
call, there's a fourth
parameter, which is the URL of

00:31:24.800 --> 00:31:27.140
the database that you're
connecting to.

00:31:27.140 --> 00:31:31.450
An alternative database, other
than Google's default one.

00:31:31.450 --> 00:31:34.260
And in this case, I'm pointing
back to my local machine

00:31:34.260 --> 00:31:37.960
because my portable server
is running on Port 9335.

00:31:37.960 --> 00:31:40.930
Other than that; you
use the Earth API

00:31:40.930 --> 00:31:42.180
exactly the same way.

00:31:46.090 --> 00:31:50.640
So its sensibility doesn't
just end with the Maps

00:31:50.640 --> 00:31:52.240
and the Earth API.

00:31:52.240 --> 00:31:56.050
It can be leveraged through
Python, as well.

00:31:56.050 --> 00:31:58.990
And Sean is going to speak
about them now.

00:31:58.990 --> 00:32:01.660
SEAN MADAY: As I mentioned to
you, the basis of laptop

00:32:01.660 --> 00:32:04.700
Portable is really the open
source Tornado web server.

00:32:04.700 --> 00:32:09.930
Inherent in that, and packaged
in that, is the most current

00:32:09.930 --> 00:32:11.630
release of Python.

00:32:11.630 --> 00:32:16.210
So we're providing you APIs and
tools that allow you to

00:32:16.210 --> 00:32:19.460
leverage that Python inside of
your offline applications to

00:32:19.460 --> 00:32:22.370
interact with the Google Earth
or Google Maps offline

00:32:22.370 --> 00:32:24.100
environments.

00:32:24.100 --> 00:32:26.800
So you can imagine this as a
framework for adding extension

00:32:26.800 --> 00:32:30.540
services on top of the Google
Earth and Google Maps portable

00:32:30.540 --> 00:32:34.400
experiences that you get as
a baseline with Portable.

00:32:34.400 --> 00:32:36.060
You can execute Python
scripts.

00:32:36.060 --> 00:32:38.910
You can install standard
Python libraries.

00:32:38.910 --> 00:32:42.040
You can engage in some
interesting interaction

00:32:42.040 --> 00:32:45.520
between the Maps environment and
the type of backend system

00:32:45.520 --> 00:32:47.410
that would normally be reserved
for a web server.

00:32:47.410 --> 00:32:47.660
Right?

00:32:47.660 --> 00:32:50.400
So as you can see in the chart
here, you could grab

00:32:50.400 --> 00:32:52.550
view-based parameters from
either Google Earth or Google

00:32:52.550 --> 00:32:56.440
Maps, grab those click-based
events from the Google Maps

00:32:56.440 --> 00:32:58.730
environment, pass those to
this Python engine, do

00:32:58.730 --> 00:33:00.790
something interesting with
them, and return those

00:33:00.790 --> 00:33:04.120
responses as either JSON or KML,
depending on if you're

00:33:04.120 --> 00:33:06.720
using Google Earth
or Google Maps.

00:33:06.720 --> 00:33:08.610
So one example of that-- and
just two code snippets.

00:33:08.610 --> 00:33:10.960
Again, don't expect you to read
these, but want to make

00:33:10.960 --> 00:33:13.400
sure that we provide them in the
slide so you can reference

00:33:13.400 --> 00:33:14.760
them after the talk.

00:33:14.760 --> 00:33:17.400
First is just creating a network
link, and specifying

00:33:17.400 --> 00:33:20.930
which parameters from that
network link should be passed

00:33:20.930 --> 00:33:24.290
back from the Google Earth
environment back

00:33:24.290 --> 00:33:27.750
to the Python server.

00:33:27.750 --> 00:33:32.980
Then a couple lines of Python
here to grab those parameters

00:33:32.980 --> 00:33:35.660
from the URL, do something with
them, and then return

00:33:35.660 --> 00:33:37.640
that experience as KML.

00:33:37.640 --> 00:33:39.200
Let me show you an example
of that here.

00:33:39.200 --> 00:33:40.260
I'm back in Google Earth.

00:33:40.260 --> 00:33:43.760
I'll turn back on some of our
Google's offline imagery.

00:33:43.760 --> 00:33:45.730
Now, as I zoom and pan here,
you'll notice I have this

00:33:45.730 --> 00:33:47.880
network link on the left side.

00:33:47.880 --> 00:33:50.130
This is pointing back to a local
service running on my

00:33:50.130 --> 00:33:51.480
local host address here.

00:33:51.480 --> 00:33:54.780
So local host 9235, and
the extension service.

00:33:54.780 --> 00:33:57.680
All the service is really doing
is taking the center

00:33:57.680 --> 00:33:59.700
point for the screen, or just
about the center point for a

00:33:59.700 --> 00:34:04.250
screen, based on terrain, and
returning it to me as a KML.

00:34:04.250 --> 00:34:06.790
This interaction is the type of
interaction you'd expect to

00:34:06.790 --> 00:34:10.120
see with a KML network link in
a backend web server on the

00:34:10.120 --> 00:34:12.060
internet, or on your
local network.

00:34:12.060 --> 00:34:14.989
Here, all of this KML is being
generated on the fly by that

00:34:14.989 --> 00:34:16.760
Python engine running
with Portable.

00:34:16.760 --> 00:34:19.750
So a very simple Hello
World-type demonstration.

00:34:19.750 --> 00:34:23.040
Our goal today was really just
to show you this platform and

00:34:23.040 --> 00:34:27.500
this product, to let you know
that our team is working very

00:34:27.500 --> 00:34:30.739
intently on taking the
capabilities of Google Earth

00:34:30.739 --> 00:34:33.409
and Google Maps from the
online cloud-based

00:34:33.409 --> 00:34:36.370
environments down to those
tactical scenarios where

00:34:36.370 --> 00:34:39.340
internet connectivity is
degraded or unavailable.

00:34:39.340 --> 00:34:41.750
We're really looking to your
creativity, and your technical

00:34:41.750 --> 00:34:44.900
expertise, to take this
platform, build it out in

00:34:44.900 --> 00:34:47.760
interesting ways, integrate it
with your offline applications

00:34:47.760 --> 00:34:50.650
for your constituents and
stakeholders, and take this

00:34:50.650 --> 00:34:53.460
ecosystem forward.

00:34:53.460 --> 00:34:55.620
With that, we're just about
to wrap up here.

00:34:55.620 --> 00:34:58.850
I would like to just say that
I'm very fortunate that I get

00:34:58.850 --> 00:35:00.410
to be the product
manager for this

00:35:00.410 --> 00:35:01.300
awesome suite of products.

00:35:01.300 --> 00:35:02.880
I get to come out and
present to you.

00:35:02.880 --> 00:35:05.270
But I'd be remiss if I passed on
this opportunity to really

00:35:05.270 --> 00:35:07.460
thank the awesome team of
engineers we have back in

00:35:07.460 --> 00:35:11.470
Mountain View, and abroad, who
are doing really impressive

00:35:11.470 --> 00:35:14.810
things at Google scale to take
the world's geospatial data,

00:35:14.810 --> 00:35:18.050
make it consumable online and
offline for your use.

00:35:18.050 --> 00:35:19.620
With that, we have about
four and 1/2 minutes.

00:35:19.620 --> 00:35:24.660
We would love to entertain any
questions you might have Sir,

00:35:24.660 --> 00:35:26.240
in the back of the room, you
want to come use the mic so we

00:35:26.240 --> 00:35:27.490
can capture it for the video?

00:35:34.410 --> 00:35:34.860
Thank you.

00:35:34.860 --> 00:35:37.140
Sorry to make you walk
across the room.

00:35:37.140 --> 00:35:38.530
So now can you go use
that microphone?

00:35:38.530 --> 00:35:39.362
No.

00:35:39.362 --> 00:35:42.260
AUDIENCE: So big use case
here is data capture.

00:35:42.260 --> 00:35:44.500
How are we doing with capturing
data then uploading

00:35:44.500 --> 00:35:46.525
it back to Google Maps Engine?

00:35:46.525 --> 00:35:46.970
SEAN MADAY: Yeah.

00:35:46.970 --> 00:35:47.530
Great question.

00:35:47.530 --> 00:35:50.490
So we view this as the offline
product that gives you the

00:35:50.490 --> 00:35:52.030
view-only capability.

00:35:52.030 --> 00:35:54.700
Then what we can envision are
some interesting ways that you

00:35:54.700 --> 00:35:58.530
could use local storage, either
through the HTML5 spec,

00:35:58.530 --> 00:36:03.100
or possibly with that Python
engine, you could do some

00:36:03.100 --> 00:36:05.250
local writing to the device.

00:36:05.250 --> 00:36:07.240
Handle that field data
collection piece, and then

00:36:07.240 --> 00:36:10.280
sync that back up via the Google
Maps Engine API, which

00:36:10.280 --> 00:36:12.460
was just announced and released
last week, and then

00:36:12.460 --> 00:36:14.110
kind of reiterated yesterday.

00:36:14.110 --> 00:36:16.750
A full vector API for Google
Maps Engine that allows you to

00:36:16.750 --> 00:36:19.190
write points, lines,
and polygons.

00:36:19.190 --> 00:36:20.100
So the pieces are there.

00:36:20.100 --> 00:36:22.220
I think that's really where
the developers come in.

00:36:22.220 --> 00:36:24.760
We like to think of ourselves
as a platform company.

00:36:24.760 --> 00:36:26.150
We like to provide the
platforms and the

00:36:26.150 --> 00:36:29.050
capabilities, and then we rely
on you all and your expertise

00:36:29.050 --> 00:36:31.560
to make this relevant in your
individual vertical markets.

00:36:31.560 --> 00:36:33.020
AUDIENCE: Just a quick
extension.

00:36:33.020 --> 00:36:37.970
So there's no thoughts about
sort of editing on--

00:36:37.970 --> 00:36:41.120
well, I guess wouldn't be on the
fly-- but stopping merge

00:36:41.120 --> 00:36:42.640
issues, and that
kind of stuff?

00:36:42.640 --> 00:36:45.380
SEAN MADAY: So the Google Maps
Engine API handles some of

00:36:45.380 --> 00:36:46.260
that version control.

00:36:46.260 --> 00:36:48.060
Then some of that is on their
roadmap for how they're going

00:36:48.060 --> 00:36:50.270
to handle and deconflict.

00:36:50.270 --> 00:36:54.230
Again, what's really exciting
at Google is we tackle these

00:36:54.230 --> 00:36:56.420
massive scale problems.

00:36:56.420 --> 00:37:00.040
The underlying infrastructure
for the Google Maps Engine API

00:37:00.040 --> 00:37:02.670
is a really impressive piece of
technology called Spanner.

00:37:02.670 --> 00:37:04.060
There's a great white
paper on the open

00:37:04.060 --> 00:37:04.990
internet about Spanner.

00:37:04.990 --> 00:37:06.430
Check it out.

00:37:06.430 --> 00:37:12.440
It really handles all of these
conflicting edits in a very

00:37:12.440 --> 00:37:14.630
elegant way, and does really
interesting things at a kind

00:37:14.630 --> 00:37:16.160
of a global database scale.

00:37:16.160 --> 00:37:17.850
So definitely check that out.

00:37:17.850 --> 00:37:21.510
And the integration of the
Google Maps Engine API with

00:37:21.510 --> 00:37:23.910
the offline capabilities of
Portable is exactly the type

00:37:23.910 --> 00:37:27.230
of thing we're intent on helping
develop, and helping

00:37:27.230 --> 00:37:28.840
move forward in this
ecosystem.

00:37:28.840 --> 00:37:29.650
AUDIENCE: Thanks very much.

00:37:29.650 --> 00:37:31.340
SEAN MADAY: Thank you.

00:37:31.340 --> 00:37:35.540
AUDIENCE: I have a question
about the new JavaScript API

00:37:35.540 --> 00:37:38.610
that's probably coming
out for Google Maps.

00:37:38.610 --> 00:37:41.410
The preview functionality that
we saw, and it kind of brings

00:37:41.410 --> 00:37:45.930
a three dimensional aspects
to a lot of the Maps API.

00:37:45.930 --> 00:37:48.880
For Portable, will it also get
that same functionality at the

00:37:48.880 --> 00:37:51.840
same time as the preview gets
rolled out to become

00:37:51.840 --> 00:37:52.600
mainstream?

00:37:52.600 --> 00:37:54.730
SEAN MADAY: Interesting
question.

00:37:54.730 --> 00:37:57.650
Interesting way to phrase
the question.

00:37:57.650 --> 00:37:59.520
As you can imagine,
we are kind of an

00:37:59.520 --> 00:38:00.510
API-driven company, right?

00:38:00.510 --> 00:38:02.190
So don't have any announcements
to make, but

00:38:02.190 --> 00:38:04.260
we're very focused on how we can
allow you all, and empower

00:38:04.260 --> 00:38:05.690
you all, to build on
these platforms.

00:38:05.690 --> 00:38:08.160
What you saw the other day with
the new Google Maps is

00:38:08.160 --> 00:38:11.310
really kind of a cutting edge,
immersive experience that

00:38:11.310 --> 00:38:12.870
still needs some assurance.

00:38:12.870 --> 00:38:14.150
Still needs to grow
a little bit.

00:38:14.150 --> 00:38:16.900
As that does, as there's more
functionality and capability

00:38:16.900 --> 00:38:21.730
added there, we're very focused
on and taking the best

00:38:21.730 --> 00:38:23.330
and brightest of that technology
and making it

00:38:23.330 --> 00:38:24.360
available offline.

00:38:24.360 --> 00:38:28.750
But today, Google Maps Engine
Portable, and what we're doing

00:38:28.750 --> 00:38:31.890
with offline, is really focused
on that consumer Maps

00:38:31.890 --> 00:38:33.940
and Earth experience that users
have been accustomed to

00:38:33.940 --> 00:38:34.970
for the last two years.

00:38:34.970 --> 00:38:37.660
Those are the platforms that,
today, consumers are using to

00:38:37.660 --> 00:38:41.120
make fast, informed decisions
about geography.

00:38:41.120 --> 00:38:42.680
AUDIENCE: Thank you.

00:38:42.680 --> 00:38:43.700
SEAN MADAY: Thank you.

00:38:43.700 --> 00:38:44.830
AUDIENCE: OK,.

00:38:44.830 --> 00:38:47.430
I would like to know with the
Google Maps Portable, so we

00:38:47.430 --> 00:38:51.770
can craft a Google Maps online
to an offline basis, and also

00:38:51.770 --> 00:38:57.060
allow for some of the Maps API
that do not need to have

00:38:57.060 --> 00:38:57.720
internet access.

00:38:57.720 --> 00:38:59.930
Am I correct?

00:38:59.930 --> 00:39:01.480
SEAN MADAY: It's a great point,
and a great point of

00:39:01.480 --> 00:39:03.820
clarification I'm glad
you brought up.

00:39:03.820 --> 00:39:06.120
In the public version of Google
Earth, for instance,

00:39:06.120 --> 00:39:07.980
you're seeing lots of different
imagery that Google

00:39:07.980 --> 00:39:10.570
has acquired from a variety of
different imagery providers.

00:39:10.570 --> 00:39:14.220
And we commingle and mix a lot
of those pixels to provide a

00:39:14.220 --> 00:39:16.380
really cohesive visualization
experience.

00:39:16.380 --> 00:39:20.040
We don't expect to release the
ability to cut from Google's

00:39:20.040 --> 00:39:22.300
public imagery repository.

00:39:22.300 --> 00:39:24.920
What we are intensely focused
on is how you can cut your

00:39:24.920 --> 00:39:27.400
imagery out of Google Maps
Engine, and then how, also, we

00:39:27.400 --> 00:39:31.590
can leverage the power of the
data we use to build Google

00:39:31.590 --> 00:39:33.990
Maps tiles, the two dimensional
tiles, and allow

00:39:33.990 --> 00:39:37.010
you to take those offline for
use behind the firewall.

00:39:37.010 --> 00:39:39.370
We, or on your local device.

00:39:39.370 --> 00:39:43.370
So that capability for the
Google Map tiles offline is

00:39:43.370 --> 00:39:44.500
rapidly coming online.

00:39:44.500 --> 00:39:46.460
We're really looking for the
right trusted testers in the

00:39:46.460 --> 00:39:48.790
ecosystem who could help us
prove that capability and that

00:39:48.790 --> 00:39:49.950
functionality.

00:39:49.950 --> 00:39:53.590
But to just be very clear,
cutting Google's imagery is

00:39:53.590 --> 00:39:56.300
not something that's currently
on our roadmap.

00:39:56.300 --> 00:39:57.350
Thank you.

00:39:57.350 --> 00:39:58.510
With that, we're out of time.

00:39:58.510 --> 00:40:00.390
I would like to thank you
all for your time.

00:40:00.390 --> 00:40:03.020
And Avnish and I will be around
afterward, if you'd

00:40:03.020 --> 00:40:05.940
like to engage in any
further discussion.

00:40:05.940 --> 00:40:06.240
Thanks.

00:40:06.240 --> 00:40:08.090
Have a great day.

