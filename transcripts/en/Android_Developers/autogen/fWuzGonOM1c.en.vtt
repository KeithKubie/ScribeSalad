WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:02.450 align:start position:0%
 
with<00:00:00.420><c> the</c><00:00:00.539><c> launch</c><00:00:00.780><c> of</c><00:00:00.960><c> jetpack</c><00:00:01.410><c> and</c><00:00:01.680><c> the</c><00:00:02.010><c> KTX</c>

00:00:02.450 --> 00:00:02.460 align:start position:0%
with the launch of jetpack and the KTX
 

00:00:02.460 --> 00:00:04.309 align:start position:0%
with the launch of jetpack and the KTX
libraries<00:00:02.909><c> we've</c><00:00:03.210><c> made</c><00:00:03.449><c> Android</c><00:00:03.929><c> development</c>

00:00:04.309 --> 00:00:04.319 align:start position:0%
libraries we've made Android development
 

00:00:04.319 --> 00:00:07.519 align:start position:0%
libraries we've made Android development
even<00:00:04.950><c> sweeter</c><00:00:05.279><c> in</c><00:00:05.490><c> Collin</c><00:00:05.940><c> but</c><00:00:06.480><c> our</c><00:00:06.810><c> haps</c><00:00:07.200><c> rely</c>

00:00:07.519 --> 00:00:07.529 align:start position:0%
even sweeter in Collin but our haps rely
 

00:00:07.529 --> 00:00:09.620 align:start position:0%
even sweeter in Collin but our haps rely
on<00:00:07.560><c> more</c><00:00:08.010><c> than</c><00:00:08.160><c> just</c><00:00:08.220><c> the</c><00:00:08.790><c> Android</c><00:00:09.059><c> libraries</c>

00:00:09.620 --> 00:00:09.630 align:start position:0%
on more than just the Android libraries
 

00:00:09.630 --> 00:00:11.900 align:start position:0%
on more than just the Android libraries
as<00:00:09.870><c> app</c><00:00:10.440><c> writers</c><00:00:10.830><c> and</c><00:00:11.040><c> library</c><00:00:11.519><c> maintainer</c>

00:00:11.900 --> 00:00:11.910 align:start position:0%
as app writers and library maintainer
 

00:00:11.910 --> 00:00:14.030 align:start position:0%
as app writers and library maintainer
there's<00:00:12.269><c> a</c><00:00:12.330><c> lot</c><00:00:12.540><c> you</c><00:00:12.780><c> can</c><00:00:12.929><c> do</c><00:00:13.110><c> to</c><00:00:13.139><c> be</c><00:00:13.500><c> Kotlin</c>

00:00:14.030 --> 00:00:14.040 align:start position:0%
there's a lot you can do to be Kotlin
 

00:00:14.040 --> 00:00:16.460 align:start position:0%
there's a lot you can do to be Kotlin
friendly<00:00:14.400><c> first</c><00:00:15.210><c> you</c><00:00:15.660><c> should</c><00:00:15.839><c> update</c><00:00:16.049><c> your</c>

00:00:16.460 --> 00:00:16.470 align:start position:0%
friendly first you should update your
 

00:00:16.470 --> 00:00:18.200 align:start position:0%
friendly first you should update your
existing<00:00:16.590><c> code</c><00:00:17.130><c> to</c><00:00:17.340><c> follow</c><00:00:17.609><c> the</c><00:00:17.850><c> interrupt</c>

00:00:18.200 --> 00:00:18.210 align:start position:0%
existing code to follow the interrupt
 

00:00:18.210 --> 00:00:20.450 align:start position:0%
existing code to follow the interrupt
guide<00:00:18.390><c> then</c><00:00:19.050><c> you</c><00:00:19.410><c> can</c><00:00:19.560><c> start</c><00:00:19.800><c> building</c><00:00:19.949><c> Kotla</c>

00:00:20.450 --> 00:00:20.460 align:start position:0%
guide then you can start building Kotla
 

00:00:20.460 --> 00:00:23.120 align:start position:0%
guide then you can start building Kotla
specific<00:00:21.000><c> api's</c><00:00:21.570><c> this</c><00:00:22.350><c> video</c><00:00:22.650><c> will</c><00:00:22.830><c> cover</c><00:00:23.010><c> the</c>

00:00:23.120 --> 00:00:23.130 align:start position:0%
specific api's this video will cover the
 

00:00:23.130 --> 00:00:24.890 align:start position:0%
specific api's this video will cover the
Interop<00:00:23.609><c> guide</c><00:00:23.820><c> which</c><00:00:24.180><c> covers</c><00:00:24.570><c> best</c>

00:00:24.890 --> 00:00:24.900 align:start position:0%
Interop guide which covers best
 

00:00:24.900 --> 00:00:27.140 align:start position:0%
Interop guide which covers best
practices<00:00:25.560><c> for</c><00:00:25.740><c> writing</c><00:00:26.099><c> code</c><00:00:26.130><c> in</c><00:00:26.550><c> the</c><00:00:26.849><c> java</c>

00:00:27.140 --> 00:00:27.150 align:start position:0%
practices for writing code in the java
 

00:00:27.150 --> 00:00:29.179 align:start position:0%
practices for writing code in the java
programming<00:00:27.359><c> language</c><00:00:27.750><c> to</c><00:00:28.349><c> support</c><00:00:28.470><c> Collin</c>

00:00:29.179 --> 00:00:29.189 align:start position:0%
programming language to support Collin
 

00:00:29.189 --> 00:00:31.759 align:start position:0%
programming language to support Collin
it<00:00:29.400><c> has</c><00:00:30.000><c> four</c><00:00:30.330><c> main</c><00:00:30.599><c> Interop</c><00:00:31.080><c> suggestions</c>

00:00:31.759 --> 00:00:31.769 align:start position:0%
it has four main Interop suggestions
 

00:00:31.769 --> 00:00:35.479 align:start position:0%
it has four main Interop suggestions
first<00:00:32.579><c> Kotlin</c><00:00:33.329><c> is</c><00:00:33.480><c> all</c><00:00:33.630><c> about</c><00:00:34.079><c> null</c><00:00:34.380><c> safety</c><00:00:34.890><c> to</c>

00:00:35.479 --> 00:00:35.489 align:start position:0%
first Kotlin is all about null safety to
 

00:00:35.489 --> 00:00:37.040 align:start position:0%
first Kotlin is all about null safety to
support<00:00:35.850><c> this</c><00:00:35.969><c> in</c><00:00:36.149><c> the</c><00:00:36.270><c> java</c><00:00:36.540><c> programming</c>

00:00:37.040 --> 00:00:37.050 align:start position:0%
support this in the java programming
 

00:00:37.050 --> 00:00:39.170 align:start position:0%
support this in the java programming
language<00:00:37.200><c> add</c><00:00:37.649><c> the</c><00:00:37.980><c> annotations</c><00:00:38.550><c> nullable</c>

00:00:39.170 --> 00:00:39.180 align:start position:0%
language add the annotations nullable
 

00:00:39.180 --> 00:00:41.119 align:start position:0%
language add the annotations nullable
and<00:00:39.360><c> none</c><00:00:39.629><c> know</c><00:00:39.840><c> everywhere</c><00:00:40.590><c> in</c><00:00:40.710><c> your</c><00:00:40.829><c> public</c>

00:00:41.119 --> 00:00:41.129 align:start position:0%
and none know everywhere in your public
 

00:00:41.129 --> 00:00:43.459 align:start position:0%
and none know everywhere in your public
API<00:00:41.430><c> Collin</c><00:00:42.390><c> will</c><00:00:42.510><c> use</c><00:00:42.660><c> these</c><00:00:42.930><c> to</c><00:00:43.170><c> make</c><00:00:43.200><c> your</c>

00:00:43.459 --> 00:00:43.469 align:start position:0%
API Collin will use these to make your
 

00:00:43.469 --> 00:00:46.400 align:start position:0%
API Collin will use these to make your
API<00:00:43.770><c> Noll</c><00:00:44.280><c> safe</c><00:00:44.610><c> now</c><00:00:45.360><c> what</c><00:00:45.930><c> happens</c><00:00:46.230><c> if</c><00:00:46.320><c> you</c>

00:00:46.400 --> 00:00:46.410 align:start position:0%
API Noll safe now what happens if you
 

00:00:46.410 --> 00:00:46.700 align:start position:0%
API Noll safe now what happens if you
don't

00:00:46.700 --> 00:00:46.710 align:start position:0%
don't
 

00:00:46.710 --> 00:00:48.560 align:start position:0%
don't
well<00:00:46.980><c> Kotlin</c><00:00:47.820><c> makes</c><00:00:48.000><c> what's</c><00:00:48.210><c> called</c><00:00:48.420><c> a</c>

00:00:48.560 --> 00:00:48.570 align:start position:0%
well Kotlin makes what's called a
 

00:00:48.570 --> 00:00:51.229 align:start position:0%
well Kotlin makes what's called a
platform<00:00:49.170><c> type</c><00:00:49.500><c> it's</c><00:00:49.920><c> a</c><00:00:50.129><c> hisin</c><00:00:50.670><c> type</c><00:00:50.850><c> that</c><00:00:51.120><c> can</c>

00:00:51.229 --> 00:00:51.239 align:start position:0%
platform type it's a hisin type that can
 

00:00:51.239 --> 00:00:53.330 align:start position:0%
platform type it's a hisin type that can
be<00:00:51.360><c> null</c><00:00:51.660><c> or</c><00:00:51.960><c> non</c><00:00:52.440><c> null</c><00:00:52.710><c> and</c><00:00:52.920><c> it</c><00:00:53.010><c> leads</c><00:00:53.219><c> to</c>

00:00:53.330 --> 00:00:53.340 align:start position:0%
be null or non null and it leads to
 

00:00:53.340 --> 00:00:55.819 align:start position:0%
be null or non null and it leads to
heisenbugs<00:00:54.149><c> and</c><00:00:54.539><c> null</c><00:00:54.899><c> pointer</c><00:00:55.289><c> exceptions</c>

00:00:55.819 --> 00:00:55.829 align:start position:0%
heisenbugs and null pointer exceptions
 

00:00:55.829 --> 00:00:58.639 align:start position:0%
heisenbugs and null pointer exceptions
when<00:00:56.579><c> you</c><00:00:56.699><c> do</c><00:00:56.940><c> use</c><00:00:57.180><c> annotations</c><00:00:57.870><c> Collin</c><00:00:58.530><c> will</c>

00:00:58.639 --> 00:00:58.649 align:start position:0%
when you do use annotations Collin will
 

00:00:58.649 --> 00:01:00.950 align:start position:0%
when you do use annotations Collin will
make<00:00:58.800><c> your</c><00:00:58.949><c> API</c><00:00:59.219><c> is</c><00:00:59.309><c> null</c><00:00:59.699><c> safe</c><00:01:00.059><c> fixing</c><00:01:00.870><c> the</c>

00:01:00.950 --> 00:01:00.960 align:start position:0%
make your API is null safe fixing the
 

00:01:00.960 --> 00:01:03.529 align:start position:0%
make your API is null safe fixing the
null<00:01:01.140><c> pointer</c><00:01:01.559><c> exceptions</c><00:01:02.510><c> getters</c><00:01:03.510><c> and</c>

00:01:03.529 --> 00:01:03.539 align:start position:0%
null pointer exceptions getters and
 

00:01:03.539 --> 00:01:05.509 align:start position:0%
null pointer exceptions getters and
setters<00:01:03.719><c> are</c><00:01:04.170><c> important</c><00:01:04.979><c> for</c><00:01:05.129><c> interrupt</c>

00:01:05.509 --> 00:01:05.519 align:start position:0%
setters are important for interrupt
 

00:01:05.519 --> 00:01:07.760 align:start position:0%
setters are important for interrupt
Collin<00:01:06.180><c> requires</c><00:01:06.540><c> they</c><00:01:06.840><c> follow</c><00:01:07.080><c> the</c><00:01:07.380><c> beam</c>

00:01:07.760 --> 00:01:07.770 align:start position:0%
Collin requires they follow the beam
 

00:01:07.770 --> 00:01:11.300 align:start position:0%
Collin requires they follow the beam
style<00:01:08.070><c> get</c><00:01:08.939><c> name</c><00:01:09.180><c> set</c><00:01:09.750><c> name</c><00:01:09.960><c> is</c><00:01:10.290><c> active</c><00:01:10.860><c> set</c>

00:01:11.300 --> 00:01:11.310 align:start position:0%
style get name set name is active set
 

00:01:11.310 --> 00:01:12.830 align:start position:0%
style get name set name is active set
active<00:01:11.670><c> when</c><00:01:12.119><c> you</c><00:01:12.240><c> do</c><00:01:12.479><c> this</c>

00:01:12.830 --> 00:01:12.840 align:start position:0%
active when you do this
 

00:01:12.840 --> 00:01:14.660 align:start position:0%
active when you do this
Collin<00:01:13.200><c> will</c><00:01:13.320><c> elevate</c><00:01:13.560><c> them</c><00:01:14.040><c> to</c><00:01:14.070><c> properties</c>

00:01:14.660 --> 00:01:14.670 align:start position:0%
Collin will elevate them to properties
 

00:01:14.670 --> 00:01:17.480 align:start position:0%
Collin will elevate them to properties
so<00:01:15.060><c> they</c><00:01:15.180><c> can</c><00:01:15.330><c> be</c><00:01:15.450><c> used</c><00:01:15.479><c> naturally</c><00:01:16.490><c> next</c>

00:01:17.480 --> 00:01:17.490 align:start position:0%
so they can be used naturally next
 

00:01:17.490 --> 00:01:19.940 align:start position:0%
so they can be used naturally next
Collin<00:01:18.000><c> add</c><00:01:18.150><c> support</c><00:01:18.570><c> for</c><00:01:18.600><c> lambdas</c><00:01:19.350><c> and</c><00:01:19.560><c> you</c>

00:01:19.940 --> 00:01:19.950 align:start position:0%
Collin add support for lambdas and you
 

00:01:19.950 --> 00:01:21.800 align:start position:0%
Collin add support for lambdas and you
can<00:01:20.159><c> interrupt</c><00:01:20.490><c> with</c><00:01:20.670><c> them</c><00:01:20.939><c> by</c><00:01:21.119><c> using</c><00:01:21.450><c> single</c>

00:01:21.800 --> 00:01:21.810 align:start position:0%
can interrupt with them by using single
 

00:01:21.810 --> 00:01:24.140 align:start position:0%
can interrupt with them by using single
abstract<00:01:22.350><c> methods</c><00:01:22.770><c> examples</c><00:01:23.700><c> of</c><00:01:23.850><c> single</c>

00:01:24.140 --> 00:01:24.150 align:start position:0%
abstract methods examples of single
 

00:01:24.150 --> 00:01:25.700 align:start position:0%
abstract methods examples of single
abstract<00:01:24.540><c> methods</c><00:01:24.869><c> are</c><00:01:24.990><c> runnable</c><00:01:25.530><c> and</c>

00:01:25.700 --> 00:01:25.710 align:start position:0%
abstract methods are runnable and
 

00:01:25.710 --> 00:01:28.580 align:start position:0%
abstract methods are runnable and
callable<00:01:26.189><c> when</c><00:01:26.759><c> defining</c><00:01:27.330><c> your</c><00:01:27.450><c> API</c><00:01:27.869><c> make</c>

00:01:28.580 --> 00:01:28.590 align:start position:0%
callable when defining your API make
 

00:01:28.590 --> 00:01:30.319 align:start position:0%
callable when defining your API make
sure<00:01:28.740><c> to</c><00:01:28.890><c> put</c><00:01:29.040><c> your</c><00:01:29.189><c> single</c><00:01:29.430><c> abstract</c><00:01:30.030><c> method</c>

00:01:30.319 --> 00:01:30.329 align:start position:0%
sure to put your single abstract method
 

00:01:30.329 --> 00:01:32.539 align:start position:0%
sure to put your single abstract method
parameters<00:01:30.750><c> last</c><00:01:31.110><c> then</c><00:01:31.710><c> Kotlin</c><00:01:32.159><c> developers</c>

00:01:32.539 --> 00:01:32.549 align:start position:0%
parameters last then Kotlin developers
 

00:01:32.549 --> 00:01:35.450 align:start position:0%
parameters last then Kotlin developers
can<00:01:32.729><c> make</c><00:01:32.880><c> full</c><00:01:33.210><c> use</c><00:01:33.270><c> of</c><00:01:33.509><c> lambdas</c><00:01:34.079><c> and</c><00:01:34.460><c> finally</c>

00:01:35.450 --> 00:01:35.460 align:start position:0%
can make full use of lambdas and finally
 

00:01:35.460 --> 00:01:37.370 align:start position:0%
can make full use of lambdas and finally
collet<00:01:36.030><c> has</c><00:01:36.210><c> some</c><00:01:36.390><c> different</c><00:01:36.930><c> keywords</c><00:01:37.259><c> and</c>

00:01:37.370 --> 00:01:37.380 align:start position:0%
collet has some different keywords and
 

00:01:37.380 --> 00:01:39.440 align:start position:0%
collet has some different keywords and
it's<00:01:37.740><c> important</c><00:01:38.310><c> to</c><00:01:38.460><c> avoid</c><00:01:38.640><c> name</c><00:01:38.939><c> conflicts</c>

00:01:39.440 --> 00:01:39.450 align:start position:0%
it's important to avoid name conflicts
 

00:01:39.450 --> 00:01:41.440 align:start position:0%
it's important to avoid name conflicts
if<00:01:39.869><c> you</c><00:01:39.990><c> do</c><00:01:40.229><c> provide</c><00:01:40.560><c> a</c><00:01:40.590><c> function</c><00:01:40.829><c> called</c><00:01:41.159><c> is</c>

00:01:41.440 --> 00:01:41.450 align:start position:0%
if you do provide a function called is
 

00:01:41.450 --> 00:01:43.580 align:start position:0%
if you do provide a function called is
developers<00:01:42.450><c> can</c><00:01:42.600><c> still</c><00:01:42.780><c> call</c><00:01:43.049><c> it</c><00:01:43.259><c> by</c><00:01:43.380><c> saying</c>

00:01:43.580 --> 00:01:43.590 align:start position:0%
developers can still call it by saying
 

00:01:43.590 --> 00:01:46.340 align:start position:0%
developers can still call it by saying
backtick<00:01:44.159><c> is</c><00:01:44.399><c> backtick</c><00:01:45.329><c> but</c><00:01:45.689><c> let's</c><00:01:45.869><c> be</c><00:01:46.020><c> honest</c>

00:01:46.340 --> 00:01:46.350 align:start position:0%
backtick is backtick but let's be honest
 

00:01:46.350 --> 00:01:48.889 align:start position:0%
backtick is backtick but let's be honest
that<00:01:46.380><c> is</c><00:01:46.649><c> not</c><00:01:47.040><c> a</c><00:01:47.070><c> good</c><00:01:47.430><c> look</c><00:01:47.670><c> for</c><00:01:47.939><c> a</c><00:01:48.420><c> full</c><00:01:48.720><c> list</c>

00:01:48.889 --> 00:01:48.899 align:start position:0%
that is not a good look for a full list
 

00:01:48.899 --> 00:01:49.520 align:start position:0%
that is not a good look for a full list
of<00:01:48.990><c> keywords</c>

00:01:49.520 --> 00:01:49.530 align:start position:0%
of keywords
 

00:01:49.530 --> 00:01:51.620 align:start position:0%
of keywords
check<00:01:49.799><c> out</c><00:01:49.979><c> the</c><00:01:50.130><c> interrupt</c><00:01:50.460><c> guide</c><00:01:50.640><c> to</c><00:01:51.420><c> help</c>

00:01:51.620 --> 00:01:51.630 align:start position:0%
check out the interrupt guide to help
 

00:01:51.630 --> 00:01:53.660 align:start position:0%
check out the interrupt guide to help
support<00:01:51.930><c> Interop</c><00:01:52.290><c> we've</c><00:01:52.680><c> added</c><00:01:52.950><c> tooling</c><00:01:53.520><c> to</c>

00:01:53.660 --> 00:01:53.670 align:start position:0%
support Interop we've added tooling to
 

00:01:53.670 --> 00:01:56.270 align:start position:0%
support Interop we've added tooling to
Android<00:01:54.060><c> studio</c><00:01:54.270><c> 3.2</c><00:01:55.079><c> introducing</c><00:01:56.070><c> lint</c>

00:01:56.270 --> 00:01:56.280 align:start position:0%
Android studio 3.2 introducing lint
 

00:01:56.280 --> 00:01:57.770 align:start position:0%
Android studio 3.2 introducing lint
checks<00:01:56.549><c> that</c><00:01:56.790><c> will</c><00:01:56.969><c> warn</c><00:01:57.240><c> you</c><00:01:57.420><c> for</c><00:01:57.600><c> all</c>

00:01:57.770 --> 00:01:57.780 align:start position:0%
checks that will warn you for all
 

00:01:57.780 --> 00:02:00.590 align:start position:0%
checks that will warn you for all
Interop<00:01:58.259><c> issues</c><00:01:58.740><c> to</c><00:01:59.460><c> use</c><00:01:59.640><c> them</c><00:01:59.850><c> enable</c><00:02:00.450><c> the</c>

00:02:00.590 --> 00:02:00.600 align:start position:0%
Interop issues to use them enable the
 

00:02:00.600 --> 00:02:03.590 align:start position:0%
Interop issues to use them enable the
interoperability<00:02:00.960><c> group</c><00:02:01.829><c> in</c><00:02:02.070><c> Gradle</c><00:02:02.610><c> another</c>

00:02:03.590 --> 00:02:03.600 align:start position:0%
interoperability group in Gradle another
 

00:02:03.600 --> 00:02:05.870 align:start position:0%
interoperability group in Gradle another
tool<00:02:03.869><c> for</c><00:02:04.079><c> colin</c><00:02:04.469><c> is</c><00:02:04.680><c> daca</c><00:02:05.159><c> if</c><00:02:05.490><c> you're</c>

00:02:05.870 --> 00:02:05.880 align:start position:0%
tool for colin is daca if you're
 

00:02:05.880 --> 00:02:07.550 align:start position:0%
tool for colin is daca if you're
generating<00:02:06.149><c> documentation</c><00:02:07.140><c> with</c><00:02:07.320><c> the</c>

00:02:07.550 --> 00:02:07.560 align:start position:0%
generating documentation with the
 

00:02:07.560 --> 00:02:09.800 align:start position:0%
generating documentation with the
Javadoc<00:02:08.039><c> tool</c><00:02:08.399><c> you</c><00:02:08.759><c> can</c><00:02:08.940><c> migrate</c><00:02:09.179><c> to</c><00:02:09.479><c> using</c>

00:02:09.800 --> 00:02:09.810 align:start position:0%
Javadoc tool you can migrate to using
 

00:02:09.810 --> 00:02:11.510 align:start position:0%
Javadoc tool you can migrate to using
dakka<00:02:10.080><c> dakka</c><00:02:10.289><c> will</c><00:02:11.099><c> generate</c><00:02:11.400><c> your</c>

00:02:11.510 --> 00:02:11.520 align:start position:0%
dakka dakka will generate your
 

00:02:11.520 --> 00:02:13.260 align:start position:0%
dakka dakka will generate your
documentation<00:02:11.580><c> and</c><00:02:12.420><c> it</c><00:02:12.660><c> supports</c>

00:02:13.260 --> 00:02:13.270 align:start position:0%
documentation and it supports
 

00:02:13.270 --> 00:02:15.720 align:start position:0%
documentation and it supports
of<00:02:13.360><c> languages</c><00:02:14.020><c> there's</c><00:02:14.770><c> a</c><00:02:14.860><c> lot</c><00:02:15.130><c> you</c><00:02:15.160><c> can</c><00:02:15.550><c> do</c><00:02:15.700><c> to</c>

00:02:15.720 --> 00:02:15.730 align:start position:0%
of languages there's a lot you can do to
 

00:02:15.730 --> 00:02:17.610 align:start position:0%
of languages there's a lot you can do to
make<00:02:16.030><c> sure</c><00:02:16.060><c> your</c><00:02:16.450><c> existing</c><00:02:16.870><c> code</c><00:02:17.080><c> is</c><00:02:17.260><c> collin</c>

00:02:17.610 --> 00:02:17.620 align:start position:0%
make sure your existing code is collin
 

00:02:17.620 --> 00:02:19.590 align:start position:0%
make sure your existing code is collin
friendly<00:02:17.980><c> in</c><00:02:18.490><c> this</c><00:02:18.730><c> video</c><00:02:19.000><c> I</c><00:02:19.060><c> covered</c><00:02:19.450><c> how</c><00:02:19.570><c> to</c>

00:02:19.590 --> 00:02:19.600 align:start position:0%
friendly in this video I covered how to
 

00:02:19.600 --> 00:02:21.240 align:start position:0%
friendly in this video I covered how to
follow<00:02:19.900><c> the</c><00:02:20.080><c> inter</c><00:02:20.320><c> up</c><00:02:20.470><c> guide</c><00:02:20.680><c> and</c><00:02:21.130><c> we'll</c>

00:02:21.240 --> 00:02:21.250 align:start position:0%
follow the inter up guide and we'll
 

00:02:21.250 --> 00:02:23.280 align:start position:0%
follow the inter up guide and we'll
cover<00:02:21.400><c> how</c><00:02:21.550><c> to</c><00:02:21.670><c> make</c><00:02:21.910><c> Collin</c><00:02:22.390><c> specific</c><00:02:22.930><c> api's</c>

00:02:23.280 --> 00:02:23.290 align:start position:0%
cover how to make Collin specific api's
 

00:02:23.290 --> 00:02:25.860 align:start position:0%
cover how to make Collin specific api's
in<00:02:23.560><c> a</c><00:02:23.710><c> later</c><00:02:23.920><c> video</c><00:02:24.130><c> thanks</c><00:02:25.060><c> for</c><00:02:25.180><c> watching</c><00:02:25.510><c> see</c>

00:02:25.860 --> 00:02:25.870 align:start position:0%
in a later video thanks for watching see
 

00:02:25.870 --> 00:02:27.400 align:start position:0%
in a later video thanks for watching see
you<00:02:25.990><c> again</c><00:02:26.200><c> next</c><00:02:26.380><c> time</c>

00:02:27.400 --> 00:02:27.410 align:start position:0%
you again next time
 

00:02:27.410 --> 00:02:36.909 align:start position:0%
you again next time
[Music]

