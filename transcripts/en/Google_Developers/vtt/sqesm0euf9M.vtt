WEBVTT
Kind: captions
Language: en

00:00:00.530 --> 00:00:02.340
BILL LUAN: Shanghai
GDG is a very

00:00:02.340 --> 00:00:04.400
interesting developer community.

00:00:04.400 --> 00:00:05.240
SUSANNAH RAUB: I'm
glad somebody

00:00:05.240 --> 00:00:06.480
has asked this question.

00:00:06.480 --> 00:00:07.644
RETO MEIER: This is where
the magic happens.

00:00:07.644 --> 00:00:08.960
JENNY MURPHY: This is primarily
a question and

00:00:08.960 --> 00:00:10.800
answer show so if any
of you out there

00:00:10.800 --> 00:00:12.050
would like to ask questions.

00:00:17.310 --> 00:00:18.610
ILYA GRIGORIK: Hello everyone.

00:00:18.610 --> 00:00:22.280
And welcome to our Make the
Web Fast episode here on

00:00:22.280 --> 00:00:24.210
Google Developers Live.

00:00:24.210 --> 00:00:28.550
Today we have an exciting
episode about web fonts and

00:00:28.550 --> 00:00:29.280
Google web fonts.

00:00:29.280 --> 00:00:32.659
But before we get so that, my
name is Ilya Grigorik and I'm

00:00:32.659 --> 00:00:36.026
a developer advocate for
Make the Web Fast team.

00:00:36.026 --> 00:00:36.510
DAVID KUETTEL: And hello.

00:00:36.510 --> 00:00:38.250
I'm David Kuettel, an
engineer from the

00:00:38.250 --> 00:00:39.860
Google Web Fonts team.

00:00:39.860 --> 00:00:40.230
ILYA GRIGORIK: Awesome.

00:00:40.230 --> 00:00:45.460
So, David, as I was reflecting
on the title of this episode I

00:00:45.460 --> 00:00:48.760
said, "making pretty fast."
And I think in retrospect,

00:00:48.760 --> 00:00:51.810
that actually kind of created
a false dichotomy.

00:00:51.810 --> 00:00:55.020
Because it almost gives
a message of,

00:00:55.020 --> 00:00:56.800
it's one or the other.

00:00:56.800 --> 00:00:58.210
It's like, if you make
it pretty, you

00:00:58.210 --> 00:00:59.280
can't make it fast.

00:00:59.280 --> 00:01:02.890
And I think as we were working
through the material that

00:01:02.890 --> 00:01:04.620
we're going to cover, certainly
one thing that I

00:01:04.620 --> 00:01:07.040
realize is that's definitely
not true anymore.

00:01:07.040 --> 00:01:10.540
In fact, there are many cases
where you can use web fonts to

00:01:10.540 --> 00:01:13.150
make your site perform
faster and perform

00:01:13.150 --> 00:01:14.470
really, really well.

00:01:14.470 --> 00:01:16.664
DAVID KUETTEL: Absolutely and
we're really eager to get the

00:01:16.664 --> 00:01:17.470
message out.

00:01:17.470 --> 00:01:18.170
ILYA GRIGORIK: Yeah, exactly.

00:01:18.170 --> 00:01:20.240
So you guys are doing a
lot of exciting stuff.

00:01:20.240 --> 00:01:24.940
And we're going to go pretty
deep today on formats, how the

00:01:24.940 --> 00:01:27.710
data is served, and many
other questions.

00:01:27.710 --> 00:01:29.790
I often get questions about web
fonts so I think this is

00:01:29.790 --> 00:01:32.610
very important.

00:01:32.610 --> 00:01:35.120
Let's share the screen here.

00:01:35.120 --> 00:01:39.680
I think the first message that
both of us agree on-- and I

00:01:39.680 --> 00:01:42.400
say I hesitate to call myself a
designer, but in the past I

00:01:42.400 --> 00:01:44.580
have actually done a little
bit of web design--

00:01:44.580 --> 00:01:48.960
and one of the things I've
learned is that topography is

00:01:48.960 --> 00:01:51.690
probably the best tool that you
have at your disposal to

00:01:51.690 --> 00:01:52.730
make something pretty.

00:01:52.730 --> 00:01:57.440
It's that idea of simple
and elegant.

00:01:57.440 --> 00:01:59.940
And you can do a lot with
just a simple web font.

00:01:59.940 --> 00:02:03.720
And unfortunately, web fonts in
general have not been very

00:02:03.720 --> 00:02:06.410
accessible, historically,
for a long time to us.

00:02:06.410 --> 00:02:10.530
So on the web, most of the
content is actually text.

00:02:10.530 --> 00:02:15.600
So having access to fonts and
being able to do a great job

00:02:15.600 --> 00:02:17.710
presenting that content is
very, very important.

00:02:17.710 --> 00:02:18.100
Right?

00:02:18.100 --> 00:02:19.040
DAVID KUETTEL: Absolutely.

00:02:19.040 --> 00:02:23.090
ILYA GRIGORIK: So because we
had these problems with web

00:02:23.090 --> 00:02:27.580
fonts, historically, developers
are an innovative

00:02:27.580 --> 00:02:31.690
bunch so we worked out
interim solutions.

00:02:31.690 --> 00:02:34.700
And one of those was, well,
let's take our text.

00:02:34.700 --> 00:02:38.360
Let's use the font that we want,
and then put it as an

00:02:38.360 --> 00:02:40.210
image on our webpages.

00:02:40.210 --> 00:02:43.580
And that actually has a lot of
downsides as we'll talk about.

00:02:43.580 --> 00:02:46.000
But historically that's actually
been probably the

00:02:46.000 --> 00:02:49.340
most prevalent way to get
fonts on the page.

00:02:49.340 --> 00:02:52.670
This is probably from
2000 to 2007.

00:02:52.670 --> 00:02:56.820
That is the only real way for
you to get fonts onto a page,

00:02:56.820 --> 00:03:00.300
which is frankly not very good
for a number of reasons,

00:03:00.300 --> 00:03:03.200
performance included.

00:03:03.200 --> 00:03:06.280
So I think because of that,
there was a lot of companies

00:03:06.280 --> 00:03:07.020
that came to be.

00:03:07.020 --> 00:03:09.750
And I'm curious to learn a
little bit about the history

00:03:09.750 --> 00:03:10.940
of Google web fonts.

00:03:10.940 --> 00:03:12.610
How did you guys get started?

00:03:12.610 --> 00:03:13.250
DAVID KUETTEL: Sure.

00:03:13.250 --> 00:03:14.790
Well it's fascinating.

00:03:14.790 --> 00:03:18.030
The project started over five
years ago when we were

00:03:18.030 --> 00:03:21.050
attempting to get more fonts
into Google Docs.

00:03:21.050 --> 00:03:22.720
We learned a lot
along the way.

00:03:22.720 --> 00:03:25.190
At first, it looked like it
was going to be really

00:03:25.190 --> 00:03:26.040
straightforward.

00:03:26.040 --> 00:03:27.280
We tried them in Firefox.

00:03:27.280 --> 00:03:27.950
They just worked.

00:03:27.950 --> 00:03:29.140
We thought, well that's
very simple.

00:03:29.140 --> 00:03:29.930
ILYA GRIGORIK: How
hard could it be?

00:03:29.930 --> 00:03:31.860
DAVID KUETTEL: How
hard could it be?

00:03:31.860 --> 00:03:36.150
But then when we tried to get
them working across all

00:03:36.150 --> 00:03:38.680
browsers, platforms, we realized
that there's actually

00:03:38.680 --> 00:03:40.200
a lot of complexity.

00:03:40.200 --> 00:03:41.780
That was something
that we were very

00:03:41.780 --> 00:03:44.650
excited to make easier.

00:03:44.650 --> 00:03:48.420
So to back up and answer your
question, are web fonts a

00:03:48.420 --> 00:03:49.910
future technology?

00:03:49.910 --> 00:03:50.390
Are they real?

00:03:50.390 --> 00:03:52.540
Are they going mainstream
today?

00:03:52.540 --> 00:03:54.190
And we have some numbers.

00:03:54.190 --> 00:03:56.510
So we launched in 2010.

00:03:56.510 --> 00:04:00.020
We've topped over one billion
font views in a day.

00:04:00.020 --> 00:04:03.180
We're on the verge of serving
that on a regular basis.

00:04:03.180 --> 00:04:05.770
Google Web Fonts are being
used on over 10 million

00:04:05.770 --> 00:04:10.670
integrations and well over
100 million webpages.

00:04:10.670 --> 00:04:15.150
We've made over 521 web
fonts available.

00:04:15.150 --> 00:04:17.890
They're all open source, free
to use, and we have a very

00:04:17.890 --> 00:04:19.959
simple and straightforward
[? pay scale. ?]

00:04:19.959 --> 00:04:21.470
ILYA GRIGORIK: 521
font families--

00:04:21.470 --> 00:04:24.300
I think that's more than what I
have installed on my system.

00:04:24.300 --> 00:04:25.940
It's a very deep library
already.

00:04:25.940 --> 00:04:26.970
DAVID KUETTEL: That's
very true.

00:04:26.970 --> 00:04:30.520
In the past developers have
been limited to the set of

00:04:30.520 --> 00:04:35.430
web-safe fonts which has
been a set of four.

00:04:35.430 --> 00:04:37.240
And so you're absolutely
correct.

00:04:37.240 --> 00:04:39.570
This is a huge improvement.

00:04:39.570 --> 00:04:39.790
ILYA GRIGORIK: Right.

00:04:39.790 --> 00:04:41.980
And it sounds like there's a lot
of other companies working

00:04:41.980 --> 00:04:43.090
in this space as well.

00:04:43.090 --> 00:04:46.250
So does Google Web Fonts work
with any other companies?

00:04:46.250 --> 00:04:50.270
Or what's the difference, maybe,
between some of the

00:04:50.270 --> 00:04:51.400
alternatives?

00:04:51.400 --> 00:04:52.090
DAVID KUETTEL: Absolutely.

00:04:52.090 --> 00:04:55.090
Well what's really exciting is
there's so much innovation in

00:04:55.090 --> 00:04:56.390
the space today--

00:04:56.390 --> 00:04:59.880
from different business models,
to better tools,

00:04:59.880 --> 00:05:02.310
making more fonts available,
improved rendering,

00:05:02.310 --> 00:05:03.320
everything.

00:05:03.320 --> 00:05:06.980
We've been very fortunate to
have the opportunity to work

00:05:06.980 --> 00:05:09.480
with all the major web
font services.

00:05:09.480 --> 00:05:12.620
We've worked with Typekit,
Fonts.com,

00:05:12.620 --> 00:05:14.370
Extensis, et cetera.

00:05:14.370 --> 00:05:18.160
And we all want to accelerate
the adoption of web fonts and

00:05:18.160 --> 00:05:21.190
improve the technologies
together.

00:05:21.190 --> 00:05:24.600
I also have a few other
key points that I

00:05:24.600 --> 00:05:26.180
wanted to get across.

00:05:26.180 --> 00:05:28.200
So for Google, why web fonts?

00:05:28.200 --> 00:05:29.780
Why would we care?

00:05:29.780 --> 00:05:33.480
The way I think about it is,
the web is core to Google.

00:05:33.480 --> 00:05:35.140
There's no doubt about that.

00:05:35.140 --> 00:05:37.090
And fonts are a core
of the web.

00:05:37.090 --> 00:05:40.100
And so we see web fonts as a
really exciting technology

00:05:40.100 --> 00:05:43.050
that we could use to improve
all our products--

00:05:43.050 --> 00:05:45.830
from Search, where websites that
use web fonts are easier

00:05:45.830 --> 00:05:49.520
to index, to display ads,
where they could become

00:05:49.520 --> 00:05:54.030
richer, interactive, work better
on mobile, to apps, to

00:05:54.030 --> 00:05:56.310
devices, you name it.

00:05:56.310 --> 00:06:00.240
And in addition to that, we
really want to help move the

00:06:00.240 --> 00:06:02.030
entire web forward.

00:06:02.030 --> 00:06:03.670
ILYA GRIGORIK: So I think that
aligns really well with a lot

00:06:03.670 --> 00:06:09.720
of the other efforts like CSS3
and others where we are

00:06:09.720 --> 00:06:14.010
putting a lot of effort into
enabling developers and

00:06:14.010 --> 00:06:15.770
designers to build
rich experiences.

00:06:15.770 --> 00:06:18.130
So the kind of thing that you
would have in a magazine

00:06:18.130 --> 00:06:22.700
before, with a beautiful layout,
and selectable text,

00:06:22.700 --> 00:06:25.480
and all these things
come together.

00:06:25.480 --> 00:06:27.560
So let me actually--

00:06:27.560 --> 00:06:29.750
I think a lot of people have
used Google Web Fonts before,

00:06:29.750 --> 00:06:32.930
but I just want to show a quick
demo of what does this

00:06:32.930 --> 00:06:34.070
actually feel like.

00:06:34.070 --> 00:06:36.490
So I have Google Web
Fonts here open.

00:06:36.490 --> 00:06:38.870
So we have 521 families.

00:06:38.870 --> 00:06:41.980
And I think you guys just
recently added this new poster

00:06:41.980 --> 00:06:45.470
view, which I actually love,
because it's a very nice

00:06:45.470 --> 00:06:49.930
visual way to get the
look of the font.

00:06:49.930 --> 00:06:50.515
DAVID KUETTEL: Great.

00:06:50.515 --> 00:06:51.890
And Ilyan, I'm going
to time you.

00:06:51.890 --> 00:06:53.890
Can we do this in 30
seconds or less?

00:06:53.890 --> 00:06:54.640
So go.

00:06:54.640 --> 00:06:55.030
ILYA GRIGORIK: Sure.

00:06:55.030 --> 00:06:55.340
OK.

00:06:55.340 --> 00:06:58.780
So I'll pick the first
font here.

00:06:58.780 --> 00:07:00.290
Quick use--

00:07:00.290 --> 00:07:03.070
and so a couple of options-- for
this font they're actually

00:07:03.070 --> 00:07:04.260
two different weights.

00:07:04.260 --> 00:07:07.430
So normal and bold, so I
can select each one.

00:07:07.430 --> 00:07:10.310
There is Latin 1 or Latin
Extended for the character

00:07:10.310 --> 00:07:11.940
sets, which I think
we'll talk about.

00:07:11.940 --> 00:07:14.900
And then I just copy this
link right here.

00:07:14.900 --> 00:07:15.170
DAVID KUETTEL: Absolutely.

00:07:15.170 --> 00:07:16.130
ILYA GRIGORIK: I think
that's all I need.

00:07:16.130 --> 00:07:18.250
So I actually have an example.

00:07:18.250 --> 00:07:21.520
So I have a GS bin file here,
which if you guys haven't used

00:07:21.520 --> 00:07:24.220
before, it's a very
awesome tool.

00:07:24.220 --> 00:07:27.640
On the left here I have
just a sample page.

00:07:27.640 --> 00:07:31.070
And any time I modify something
in here, it just

00:07:31.070 --> 00:07:32.760
updates the preview
on the right.

00:07:32.760 --> 00:07:35.250
It is just a very quick
visual way.

00:07:35.250 --> 00:07:39.310
So I can paste in some
text in here and

00:07:39.310 --> 00:07:40.790
it'll include the font.

00:07:40.790 --> 00:07:41.530
So I've actually--

00:07:41.530 --> 00:07:44.530
I've prepared a few
things earlier.

00:07:44.530 --> 00:07:46.620
So let me just un-comment
this.

00:07:46.620 --> 00:07:46.920
Whoops.

00:07:46.920 --> 00:07:49.320
That's not what we wanted.

00:07:49.320 --> 00:07:51.890
Let's go back.

00:07:51.890 --> 00:07:55.490
So we'll just un-comment
this font family here.

00:07:55.490 --> 00:07:57.300
And I've created a couple
different rules.

00:07:57.300 --> 00:07:59.290
So this is just a completely
un-styled page.

00:07:59.290 --> 00:08:02.710
And what I'm going to
do now is just, for

00:08:02.710 --> 00:08:04.850
example, style the H1.

00:08:04.850 --> 00:08:09.650
And all of a sudden you can see
a much nicer looking page

00:08:09.650 --> 00:08:11.060
coming out on the other end.

00:08:14.050 --> 00:08:16.700
So just five lines and
this page looks

00:08:16.700 --> 00:08:17.530
dramatically different.

00:08:17.530 --> 00:08:17.890
DAVID KUETTEL: Yeah.

00:08:17.890 --> 00:08:19.160
How easy is that?

00:08:19.160 --> 00:08:19.390
ILYA GRIGORIK: Right.

00:08:19.390 --> 00:08:19.870
Exactly.

00:08:19.870 --> 00:08:21.970
So let's go back.

00:08:21.970 --> 00:08:24.000
I actually want to ask you a
few questions on this page

00:08:24.000 --> 00:08:25.710
because I think we breezed
right by it.

00:08:25.710 --> 00:08:26.620
DAVID KUETTEL: OK.

00:08:26.620 --> 00:08:30.297
ILYA GRIGORIK: First of all,
this dial right here is very

00:08:30.297 --> 00:08:33.010
interesting to me because
it references page load.

00:08:33.010 --> 00:08:38.470
And any time I notice that
when I add a new font the

00:08:38.470 --> 00:08:39.260
number goes up.

00:08:39.260 --> 00:08:42.679
And it tells me that I don't
want to be in a red zone.

00:08:42.679 --> 00:08:44.150
So what does this
actually mean?

00:08:44.150 --> 00:08:46.990
DAVID KUETTEL: So more than
anything, we wanted to just

00:08:46.990 --> 00:08:50.800
convey the message that
web fonts do lead to

00:08:50.800 --> 00:08:52.390
an additional download.

00:08:52.390 --> 00:08:54.410
And so it's something to think
about something to be

00:08:54.410 --> 00:08:55.560
conscious of.

00:08:55.560 --> 00:08:57.470
Of course, it all depends.

00:08:57.470 --> 00:09:01.380
So if your sites leverages a
lot of images, you're very

00:09:01.380 --> 00:09:05.690
likely to not even notice
the extra download.

00:09:05.690 --> 00:09:09.290
But if it is just a simple HTML
page, the font could end

00:09:09.290 --> 00:09:12.160
up being the majority of
the download time.

00:09:12.160 --> 00:09:15.820
And so the indicator is more
of an approximation.

00:09:15.820 --> 00:09:16.800
It's a range.

00:09:16.800 --> 00:09:20.460
It's not an exact number, for
the reason being that we have

00:09:20.460 --> 00:09:22.880
a lot of very platform-specific

00:09:22.880 --> 00:09:24.360
optimizations.

00:09:24.360 --> 00:09:28.010
So for example, we serve up
smaller files to Mac, larger

00:09:28.010 --> 00:09:29.140
files to Windows.

00:09:29.140 --> 00:09:31.640
And so it's more just
an indicator.

00:09:31.640 --> 00:09:32.890
ILYA GRIGORIK: And we'll
talk about that

00:09:32.890 --> 00:09:34.000
later in more detail.

00:09:34.000 --> 00:09:34.550
DAVID KUETTEL: Definitely.

00:09:34.550 --> 00:09:36.800
ILYA GRIGORIK: But I guess the
broad message here is, the

00:09:36.800 --> 00:09:39.300
more fonts you include,
the more data you

00:09:39.300 --> 00:09:40.120
will have to download.

00:09:40.120 --> 00:09:44.900
So if at all possible, it makes
sense to omit things you

00:09:44.900 --> 00:09:45.710
may not use.

00:09:45.710 --> 00:09:46.520
Because I'm certainly--

00:09:46.520 --> 00:09:47.970
I know that I've been
guilty of this.

00:09:47.970 --> 00:09:49.790
Where I've come here and--

00:09:49.790 --> 00:09:52.930
in the early stages my design
I would say, well I probably

00:09:52.930 --> 00:09:55.590
need the italic version, and
the extra bold version, and

00:09:55.590 --> 00:09:58.110
these five versions, and just
include them all and then I'd

00:09:58.110 --> 00:09:58.790
leave them there.

00:09:58.790 --> 00:10:00.790
And I'm actually
not using them.

00:10:00.790 --> 00:10:02.570
So that's a gotcha.

00:10:02.570 --> 00:10:03.860
Then there's the
character sets.

00:10:03.860 --> 00:10:06.195
So this is for different
languages?

00:10:06.195 --> 00:10:08.012
DAVID KUETTEL: That
is correct.

00:10:08.012 --> 00:10:10.140
ILYA GRIGORIK: So different
fonts will also have different

00:10:10.140 --> 00:10:11.655
support for different languages,
I believe.

00:10:11.655 --> 00:10:12.030
DAVID KUETTEL: That
is correct.

00:10:12.030 --> 00:10:15.360
Our goal is to expand
coverage over time.

00:10:15.360 --> 00:10:19.280
But for most of the fonts
there's largely just Latin

00:10:19.280 --> 00:10:21.280
coverage today.

00:10:21.280 --> 00:10:24.050
ILYA GRIGORIK: And then this
last bit here is very

00:10:24.050 --> 00:10:24.580
interesting to me.

00:10:24.580 --> 00:10:28.160
So by default, you guys give me
the link to [? act ?] to a

00:10:28.160 --> 00:10:30.660
CSS file, which I can then
include on my page, right?

00:10:30.660 --> 00:10:31.170
DAVID KUETTEL: Correct.

00:10:31.170 --> 00:10:33.020
ILYA GRIGORIK: But there
is two other options.

00:10:33.020 --> 00:10:35.350
So there's the Import Statement,
which is also

00:10:35.350 --> 00:10:38.060
something that I can copy and
paste into my CSS file--

00:10:38.060 --> 00:10:38.600
DAVID KUETTEL: Correct

00:10:38.600 --> 00:10:41.330
ILYA GRIGORIK: --and
a JavaScript way.

00:10:41.330 --> 00:10:45.100
So why would I prefer
one or the other?

00:10:45.100 --> 00:10:48.940
DAVID KUETTEL: Well for the
first two, we would recommend

00:10:48.940 --> 00:10:51.780
that you be consistent
with other

00:10:51.780 --> 00:10:53.120
resources on your website.

00:10:53.120 --> 00:10:55.550
So if you're using stylesheet
links, just continue using

00:10:55.550 --> 00:10:56.920
stylesheet links.

00:10:56.920 --> 00:11:00.400
If you've been using @imports
throughout the CSS, just

00:11:00.400 --> 00:11:01.850
continue using that.

00:11:01.850 --> 00:11:04.110
There are some performance
tradeoffs that are

00:11:04.110 --> 00:11:05.350
good to be aware of.

00:11:05.350 --> 00:11:08.300
And Steve Setters has an
excellent write up on it.

00:11:08.300 --> 00:11:11.900
Regarding JavaScript however,
this is more of an advanced

00:11:11.900 --> 00:11:16.680
feature where you as the
developer can take control

00:11:16.680 --> 00:11:19.590
over the web font loading
experience and really

00:11:19.590 --> 00:11:21.700
fine-tune it.

00:11:21.700 --> 00:11:23.300
ILYA GRIGORIK: So I think
I looked at the--

00:11:23.300 --> 00:11:23.710
[COUGH]

00:11:23.710 --> 00:11:24.380
sorry--

00:11:24.380 --> 00:11:27.350
documentation earlier, and it
gave me a series of callbacks

00:11:27.350 --> 00:11:30.810
that say, the font is loading,
the font is active.

00:11:30.810 --> 00:11:33.370
So I can define different
behaviors in that case.

00:11:33.370 --> 00:11:34.950
DAVID KUETTEL: Yes.

00:11:34.950 --> 00:11:37.020
And basically you can do
really advanced things.

00:11:37.020 --> 00:11:38.780
So you can specify--

00:11:38.780 --> 00:11:41.850
I mean, you can completely
control the behavior.

00:11:41.850 --> 00:11:44.440
You could have the text
fade in once the

00:11:44.440 --> 00:11:46.150
font becomes available.

00:11:46.150 --> 00:11:48.620
You could always flash
un-styled text.

00:11:48.620 --> 00:11:50.510
You could never flash
un-styled text.

00:11:50.510 --> 00:11:51.380
ILYA GRIGORIK: So
interesting--

00:11:51.380 --> 00:11:53.280
You just mentioned an
interesting term there.

00:11:53.280 --> 00:11:54.850
So un-styled text--

00:11:54.850 --> 00:11:57.540
so I think in the web font
community this is fairly well

00:11:57.540 --> 00:11:59.790
understood, but I think
it's worth spending a

00:11:59.790 --> 00:12:00.900
few minutes on this.

00:12:00.900 --> 00:12:05.010
So the problem in general
is, as with any CSS or

00:12:05.010 --> 00:12:09.870
presentation format, if we show
the un-styled content

00:12:09.870 --> 00:12:12.290
before the CSS is applied and
then we apply it after the

00:12:12.290 --> 00:12:15.630
fact, the user may actually see
a jarring experience where

00:12:15.630 --> 00:12:19.880
the page may completely
re-layout at a certain point,

00:12:19.880 --> 00:12:22.620
and maybe even shift and change
in look and feel.

00:12:22.620 --> 00:12:24.950
So in general, browsers
try to avoid this.

00:12:24.950 --> 00:12:29.720
And we defer displaying the
content until we have all the

00:12:29.720 --> 00:12:31.430
necessary information.

00:12:31.430 --> 00:12:33.410
So that's what you're
referring to here.

00:12:33.410 --> 00:12:36.310
And it sounds like with the
JavaScript loader, I could

00:12:36.310 --> 00:12:37.660
actually define my
own behavior.

00:12:37.660 --> 00:12:39.000
DAVID KUETTEL: That
is correct.

00:12:39.000 --> 00:12:41.550
ILYA GRIGORIK: So if you're
really performance conscious,

00:12:41.550 --> 00:12:42.960
maybe that's something that
you could look into.

00:12:42.960 --> 00:12:44.320
DAVID KUETTEL: Absolutely.

00:12:44.320 --> 00:12:45.480
ILYA GRIGORIK: So that's good.

00:12:45.480 --> 00:12:47.450
And we'll actually come back
to the import statement

00:12:47.450 --> 00:12:50.850
because I think this
has some gotchas.

00:12:50.850 --> 00:12:55.400
A lot of people today use
Build Steps in their

00:12:55.400 --> 00:12:58.260
infrastructure where they will,
for example, concatenate

00:12:58.260 --> 00:13:00.050
multiple CSS files together.

00:13:00.050 --> 00:13:04.540
And they'll even in-line import
rules into the file.

00:13:04.540 --> 00:13:06.460
But that could actually
cause problems.

00:13:06.460 --> 00:13:08.940
Because if you in-line the wrong
file format, as we will

00:13:08.940 --> 00:13:11.860
see, you may actually break
some of the web fonts.

00:13:11.860 --> 00:13:14.690
DAVID KUETTEL: That
is correct.

00:13:14.690 --> 00:13:16.930
ILYA GRIGORIK: Some stuff
to be careful about.

00:13:16.930 --> 00:13:19.750
So let's go back to our
presentation here.

00:13:19.750 --> 00:13:25.680
So we did the 30 second demo
on some backup slides here.

00:13:25.680 --> 00:13:27.380
Web fonts are really exciting.

00:13:27.380 --> 00:13:28.700
I wanted to show a few demos.

00:13:28.700 --> 00:13:30.560
Before we get to the
meaty, technical

00:13:30.560 --> 00:13:32.520
part, I want to motivate.

00:13:32.520 --> 00:13:33.340
Why do we care?

00:13:33.340 --> 00:13:33.520
Right?

00:13:33.520 --> 00:13:36.810
Because I think there are
obvious use cases like, I want

00:13:36.810 --> 00:13:37.970
to make my pages pretty.

00:13:37.970 --> 00:13:39.820
But there's some other use
cases which are not

00:13:39.820 --> 00:13:43.210
immediately obvious and they're
very, very important.

00:13:43.210 --> 00:13:44.650
So let's go back here.

00:13:44.650 --> 00:13:48.330
And the first one that you
shared with me-- which I think

00:13:48.330 --> 00:13:53.060
is awesome-- is the web font
award site which contains a

00:13:53.060 --> 00:13:57.890
lot of very good demo sites
using or leveraging web fonts.

00:13:57.890 --> 00:13:59.360
So if you go into the gallery--
we're not going to

00:13:59.360 --> 00:14:02.130
go through it here-- but if
you guys are curious, I

00:14:02.130 --> 00:14:04.530
encourage you to check out
webfontawards.com.

00:14:04.530 --> 00:14:07.020
Many, many different sites,
great demos for the kinds of

00:14:07.020 --> 00:14:08.645
things you can do
with web fonts.

00:14:08.645 --> 00:14:09.560
DAVID KUETTEL: And
many of these are

00:14:09.560 --> 00:14:11.190
actually real-life sites.

00:14:11.190 --> 00:14:11.690
ILYA GRIGORIK: Exactly.

00:14:11.690 --> 00:14:13.490
DAVID KUETTEL: So they're
interesting demos for us but

00:14:13.490 --> 00:14:14.400
real-life sites.

00:14:14.400 --> 00:14:15.750
ILYA GRIGORIK: So I was actually
on it earlier.

00:14:15.750 --> 00:14:17.270
And I picked out a couple.

00:14:17.270 --> 00:14:20.400
So for example, Bay
State College.

00:14:20.400 --> 00:14:23.180
All of the stuff here-- so
very clean, very simple.

00:14:23.180 --> 00:14:25.100
But all the stuff is text.

00:14:25.100 --> 00:14:26.040
It's selectable.

00:14:26.040 --> 00:14:28.550
It's easy to read.

00:14:28.550 --> 00:14:30.720
I think it was very,
very well done.

00:14:30.720 --> 00:14:31.190
DAVID KUETTEL: Great choice.

00:14:31.190 --> 00:14:32.990
ILYA GRIGORIK: Another
example--

00:14:32.990 --> 00:14:36.090
believe it or not, this is
all selectable text.

00:14:36.090 --> 00:14:38.630
He's just using web fonts
for this stuff.

00:14:38.630 --> 00:14:42.570
And it's got this like grunge
feel and look I think.

00:14:42.570 --> 00:14:46.250
Until very recently, this would
all have to be images.

00:14:46.250 --> 00:14:47.670
DAVID KUETTEL: That
is correct.

00:14:47.670 --> 00:14:50.290
ILYA GRIGORIK: So I think this
is another awesome demo.

00:14:50.290 --> 00:14:51.120
And then this example.

00:14:51.120 --> 00:14:52.880
I just stumbled on this.

00:14:52.880 --> 00:14:55.210
So this is a developer
called Chad Mazzola.

00:14:55.210 --> 00:14:57.720
He is actually demoing what
you can accomplish

00:14:57.720 --> 00:14:58.920
with Google Web Fonts.

00:14:58.920 --> 00:15:01.720
So this is something that you
can use on your own site.

00:15:01.720 --> 00:15:04.170
So he just put together a couple
of different styles,

00:15:04.170 --> 00:15:05.220
different looks.

00:15:05.220 --> 00:15:11.230
So for example, here's your
two column paper format, a

00:15:11.230 --> 00:15:13.890
nice quote using Google
Web Fonts.

00:15:13.890 --> 00:15:19.920
Another font for
a newer look--

00:15:19.920 --> 00:15:23.440
and you get a sense for the
things that you can do.

00:15:23.440 --> 00:15:25.300
This example I love.

00:15:25.300 --> 00:15:26.830
It's got a feel of
a older book.

00:15:26.830 --> 00:15:30.910
And this is using nothing but
web fonts and some CSS markup

00:15:30.910 --> 00:15:31.670
to make it happen.

00:15:31.670 --> 00:15:34.610
So lots of very cool examples
for what you

00:15:34.610 --> 00:15:38.020
can do with web fonts.

00:15:38.020 --> 00:15:39.270
So let's go back.

00:15:42.140 --> 00:15:45.140
Another example that I want to
show you, because I really

00:15:45.140 --> 00:15:48.390
love this example,
is Sean McBride.

00:15:48.390 --> 00:15:50.940
So he's actually an engineer
on the Typekit team.

00:15:50.940 --> 00:15:53.350
And he was actually
an ex-Googler too.

00:15:53.350 --> 00:15:55.910
And he put together this--

00:15:55.910 --> 00:15:58.220
he's given a couple of different
presentations on how

00:15:58.220 --> 00:16:01.460
you can combine CSS3 and
web fonts to make

00:16:01.460 --> 00:16:02.990
really awesome effects.

00:16:02.990 --> 00:16:07.500
And the one that I love is
this hand-painted sign.

00:16:07.500 --> 00:16:09.830
So this to me looks
like an image.

00:16:09.830 --> 00:16:11.020
DAVID KUETTEL: Surely that's
an image, right?

00:16:11.020 --> 00:16:12.580
ILYA GRIGORIK: Except
that it's not.

00:16:12.580 --> 00:16:13.570
It's selectable text.

00:16:13.570 --> 00:16:17.350
So what he's doing here is
he has just regular text.

00:16:17.350 --> 00:16:21.360
He's using CSS transforms
to get that--

00:16:21.360 --> 00:16:22.490
DAVID KUETTEL: The rotation?

00:16:22.490 --> 00:16:23.020
ILYA GRIGORIK: --yeah,
the rotation.

00:16:23.020 --> 00:16:25.880
He's using drop shadows.

00:16:25.880 --> 00:16:27.920
He has a border.

00:16:27.920 --> 00:16:31.550
He's applying a texture on top
to make it look like it's

00:16:31.550 --> 00:16:32.820
painted on top.

00:16:32.820 --> 00:16:35.660
And all of this stuff
is just text.

00:16:35.660 --> 00:16:39.300
And in fact, here's a quick
and an awesome tip.

00:16:39.300 --> 00:16:43.100
There's a great extension for
Google Chrome called WhatFont.

00:16:43.100 --> 00:16:43.940
So what you do is--

00:16:43.940 --> 00:16:45.830
I have it enabled here-- you
can just click on it.

00:16:45.830 --> 00:16:48.210
And then you can hover
over any piece of

00:16:48.210 --> 00:16:49.110
text on your page.

00:16:49.110 --> 00:16:50.560
And just click on it.

00:16:50.560 --> 00:16:54.010
And it'll tell you what is the
font being used, and by whom

00:16:54.010 --> 00:16:54.740
it's being served.

00:16:54.740 --> 00:16:57.500
In this case, we can see that
the font is being served by

00:16:57.500 --> 00:17:02.240
Typekit and the name of the
font is Corner Store.

00:17:02.240 --> 00:17:05.119
And then for this text right
here it's actually a different

00:17:05.119 --> 00:17:07.569
font that's called Bello Caps,
also served by Typekit.

00:17:07.569 --> 00:17:11.250
So if you're ever on a page that
has beautiful typography,

00:17:11.250 --> 00:17:13.505
it's a very handy extension--

00:17:13.505 --> 00:17:13.960
DAVID KUETTEL: Extremely
handy.

00:17:13.960 --> 00:17:15.900
ILYA GRIGORIK: --to just
click and view.

00:17:15.900 --> 00:17:19.119
Of course, you could also dive
deep into the CSS and figure

00:17:19.119 --> 00:17:22.230
out what's happening, but this
is much, much easier.

00:17:24.740 --> 00:17:27.940
So I love this example.

00:17:27.940 --> 00:17:30.650
The first time he showed it
to me I was blown away.

00:17:30.650 --> 00:17:32.552
And I still-- every time I look
at it I'm like, I can't

00:17:32.552 --> 00:17:34.160
believe that's actually
the case.

00:17:34.160 --> 00:17:37.990
So nonetheless, that's also
more of a design use case.

00:17:37.990 --> 00:17:40.460
Another case that I came across
as I was researching

00:17:40.460 --> 00:17:44.480
this, which is very important,
is Wikipedia is actually using

00:17:44.480 --> 00:17:50.000
web fonts to enable better
cross-language support or

00:17:50.000 --> 00:17:52.240
multi-language support
on their sites.

00:17:52.240 --> 00:17:53.970
The problem being
for example--

00:17:53.970 --> 00:17:56.480
let me go to the site here.

00:17:56.480 --> 00:17:58.020
I'm loading this
Wikipedia page.

00:17:58.020 --> 00:18:01.940
And this is not the
actual language.

00:18:01.940 --> 00:18:03.440
There's no language
with blocks.

00:18:03.440 --> 00:18:06.820
It just that Chrome can't render
this because Chrome

00:18:06.820 --> 00:18:07.880
doesn't have the right--

00:18:07.880 --> 00:18:12.060
it doesn't support this
encoding format.

00:18:12.060 --> 00:18:15.680
So to enable this I would have
to go into the system settings

00:18:15.680 --> 00:18:18.640
and install some font pack
or language pack.

00:18:18.640 --> 00:18:20.410
I'm not even sure what I need
to do, to be honest.

00:18:20.410 --> 00:18:22.690
DAVID KUETTEL: And it's not
always an option on devices

00:18:22.690 --> 00:18:25.250
like the Chrome [INAUDIBLE],
or tablets [INAUDIBLE].

00:18:25.250 --> 00:18:27.860
ILYA GRIGORIK: So if I'm using
some public terminal I may not

00:18:27.860 --> 00:18:29.770
have access to install
this kind of thing.

00:18:29.770 --> 00:18:31.890
So what Wikipedia is doing,
is they're actually

00:18:31.890 --> 00:18:33.100
leveraging web fonts.

00:18:33.100 --> 00:18:35.510
They are just starting
to do this.

00:18:35.510 --> 00:18:38.030
I think they have it for
about 30 languages.

00:18:38.030 --> 00:18:39.360
This is not one of
them, obviously.

00:18:39.360 --> 00:18:41.990
But what they're doing is
they're pulling down the web

00:18:41.990 --> 00:18:44.230
font with the proper characters
or the proper

00:18:44.230 --> 00:18:47.580
glyphs, such that you don't
have to install anything.

00:18:47.580 --> 00:18:49.690
It just downloads into your
browser and it's available

00:18:49.690 --> 00:18:52.860
immediately, which I think is
a very, very cool use case.

00:18:52.860 --> 00:18:53.720
DAVID KUETTEL: Absolutely.

00:18:53.720 --> 00:18:56.960
And they've also scoped
the opportunity.

00:18:56.960 --> 00:18:59.860
And I think they're targeting
bringing the next one billion

00:18:59.860 --> 00:19:02.110
users online.

00:19:02.110 --> 00:19:06.160
So there are quite a few users
that will benefit from this.

00:19:06.160 --> 00:19:07.300
ILYA GRIGORIK: So multi-language
support is

00:19:07.300 --> 00:19:09.930
actually a very, very
important use case.

00:19:09.930 --> 00:19:12.200
And then another one
that emerged

00:19:12.200 --> 00:19:15.140
recently is icon fonts.

00:19:15.140 --> 00:19:17.890
So I believe Google Web Fonts
doesn't actually serve any

00:19:17.890 --> 00:19:18.270
icon fonts.

00:19:18.270 --> 00:19:19.280
DAVID KUETTEL: That
is correct.

00:19:19.280 --> 00:19:20.150
ILYA GRIGORIK: But
there are good

00:19:20.150 --> 00:19:21.330
reasons to use icon fonts.

00:19:21.330 --> 00:19:25.100
So for example, one of the
techniques that's very popular

00:19:25.100 --> 00:19:28.300
is spreading where you take
a lot of small images-- so

00:19:28.300 --> 00:19:31.440
downloading small images, many
of them, is very expensive

00:19:31.440 --> 00:19:33.100
because it requires a
lot of connections.

00:19:33.100 --> 00:19:36.730
So generally we recommend that
you combine small images into

00:19:36.730 --> 00:19:39.050
a larger image that is then--

00:19:39.050 --> 00:19:42.080
using CSS positioning--
you can put on a page.

00:19:42.080 --> 00:19:47.140
What icon fonts do is, instead
of downloading that PNG or

00:19:47.140 --> 00:19:49.750
some other image format with all
the images, you download

00:19:49.750 --> 00:19:54.560
one web font and then the icons
themselves are basically

00:19:54.560 --> 00:19:56.180
characters.

00:19:56.180 --> 00:19:58.560
And the benefit you get
out of that is that

00:19:58.560 --> 00:20:01.420
fonts are vector formats.

00:20:01.420 --> 00:20:04.220
For example, all of these icons
here cycling through are

00:20:04.220 --> 00:20:06.080
just scaled up versions
of that vector.

00:20:06.080 --> 00:20:09.510
So they're friendly for
retina screens.

00:20:09.510 --> 00:20:11.310
You can zoom them in, you
can zoom them out.

00:20:11.310 --> 00:20:13.050
They always look beautiful,
which you

00:20:13.050 --> 00:20:15.090
can't say with images.

00:20:15.090 --> 00:20:16.330
So very good--

00:20:16.330 --> 00:20:18.500
[? reuse ?] and it's actually
very efficient for

00:20:18.500 --> 00:20:19.090
this kind of stuff.

00:20:19.090 --> 00:20:23.200
So Font Awesome which
is an awesome name.

00:20:23.200 --> 00:20:25.930
DAVID KUETTEL: Which is
absolutely correctly named.

00:20:25.930 --> 00:20:28.310
ILYA GRIGORIK: And there is many
of these where you can

00:20:28.310 --> 00:20:31.140
actually customize them and
build your own fonts.

00:20:31.140 --> 00:20:35.090
I think this font has 200 plus
icons which is crazy.

00:20:35.090 --> 00:20:36.390
I probably don't need
all of those.

00:20:36.390 --> 00:20:37.870
So you can actually customize
it yourself.

00:20:42.100 --> 00:20:44.940
Let's take a step back.

00:20:44.940 --> 00:20:46.410
We talked about Google
Web Fonts.

00:20:46.410 --> 00:20:48.450
We talked about how
you can use it.

00:20:48.450 --> 00:20:50.840
But before we dive
into the tech,

00:20:50.840 --> 00:20:53.020
let's look at the history.

00:20:53.020 --> 00:20:56.130
And the first point I'll make
is that fonts have been with

00:20:56.130 --> 00:20:58.860
us since the beginning
of the web.

00:20:58.860 --> 00:21:03.640
We actually had a font tag in
the early HTML versions.

00:21:03.640 --> 00:21:06.530
And if you guys remember
GeoCities, we saw a lot of

00:21:06.530 --> 00:21:08.610
Comic Sans.

00:21:08.610 --> 00:21:10.540
And a lot of images too because
people were trying to

00:21:10.540 --> 00:21:15.080
put new fonts that platforms
did not have on the web.

00:21:15.080 --> 00:21:19.000
So that by itself was proof
that fonts have

00:21:19.000 --> 00:21:20.060
been there all along.

00:21:20.060 --> 00:21:23.860
However there's been a
number of issues with

00:21:23.860 --> 00:21:25.530
using platform fonts.

00:21:25.530 --> 00:21:30.470
So first of all, the font tag
is non-deprecated ever since

00:21:30.470 --> 00:21:35.010
the CSS specification came along
because fonts are more a

00:21:35.010 --> 00:21:37.170
presentation format.

00:21:37.170 --> 00:21:40.250
They've been moved into CSS
such that they support the

00:21:40.250 --> 00:21:44.070
same functionality, but
it's the same problem.

00:21:44.070 --> 00:21:47.570
And the problem is that
depending on which platform

00:21:47.570 --> 00:21:50.170
you're using, you will have, as
you mentioned, system fonts

00:21:50.170 --> 00:21:50.750
on your system.

00:21:50.750 --> 00:21:54.550
So that may be Arial and Verdana
and a few others on a

00:21:54.550 --> 00:21:55.850
Windows machine.

00:21:55.850 --> 00:21:59.520
And a Unix or Linux-- let's
say in Ubuntu--

00:21:59.520 --> 00:22:02.700
may not have all those fonts,
or historically may not have

00:22:02.700 --> 00:22:03.950
had all those fonts.

00:22:03.950 --> 00:22:08.370
So if you are assuming that the
user had Comic Sans, they

00:22:08.370 --> 00:22:10.310
might have gotten a completely
different experience if they

00:22:10.310 --> 00:22:11.930
came on a different platform.

00:22:11.930 --> 00:22:14.280
So because that you were limited
to, I think you said,

00:22:14.280 --> 00:22:15.620
for web fonts--

00:22:15.620 --> 00:22:19.070
DAVID KUETTEL: Well and even
less these days-- so tablets,

00:22:19.070 --> 00:22:21.210
like the Android tablets
only come with one,

00:22:21.210 --> 00:22:22.590
same for Google TV.

00:22:22.590 --> 00:22:24.480
Chrome has even fewer.

00:22:24.480 --> 00:22:25.060
ILYA GRIGORIK: Just one.

00:22:25.060 --> 00:22:26.190
Wow.

00:22:26.190 --> 00:22:28.640
DAVID KUETTEL: For the Android
tablets and Google TV--

00:22:28.640 --> 00:22:31.100
Chrome I believe has
three or so.

00:22:31.100 --> 00:22:32.490
ILYA GRIGORIK: So there, if you
want to have a different

00:22:32.490 --> 00:22:34.310
look and feel you really
have to use web fonts.

00:22:34.310 --> 00:22:37.210
DAVID KUETTEL: Absolutely

00:22:37.210 --> 00:22:39.700
ILYA GRIGORIK: You can't
rely on system fonts.

00:22:39.700 --> 00:22:42.790
And the CSS spec does not
address any of this.

00:22:42.790 --> 00:22:47.210
It would just move it from
the font tag into CSS.

00:22:47.210 --> 00:22:50.410
But what I think a lot of people
don't realize is that

00:22:50.410 --> 00:22:52.700
web fonts have actually existed,
technically, they've

00:22:52.700 --> 00:22:54.030
existed for a long time.

00:22:54.030 --> 00:22:56.380
Maybe we couldn't have used
them for a long time.

00:22:56.380 --> 00:23:01.420
But back in 1997 both Netscape
and Microsoft added web font

00:23:01.420 --> 00:23:03.230
support into their browsers--

00:23:03.230 --> 00:23:04.900
as far back as IE4.

00:23:04.900 --> 00:23:07.320
It just seems that historically
they didn't, for

00:23:07.320 --> 00:23:10.330
some reason, get much adoption
back in 1997.

00:23:10.330 --> 00:23:11.380
DAVID KUETTEL: And there
are reasons and

00:23:11.380 --> 00:23:13.590
we'll talk about that.

00:23:13.590 --> 00:23:16.540
ILYA GRIGORIK: And then in 1999
we had even the W3C web

00:23:16.540 --> 00:23:17.730
font specification.

00:23:17.730 --> 00:23:23.650
But it seems like it took until
2007 to get anything off

00:23:23.650 --> 00:23:25.130
the ground.

00:23:25.130 --> 00:23:27.300
And in the meantime
I think we've--

00:23:27.300 --> 00:23:29.490
as much as we talked
about earlier--

00:23:29.490 --> 00:23:31.210
we had to come up with
some solutions.

00:23:31.210 --> 00:23:33.390
So I think a lot of the web
has migrated towards using

00:23:33.390 --> 00:23:37.280
images, which is not a very good
solution, which involve

00:23:37.280 --> 00:23:39.830
either doing manual encoding,
if you will.

00:23:39.830 --> 00:23:42.720
So putting it into Photoshop
and then cropping it and

00:23:42.720 --> 00:23:43.710
putting it on your site.

00:23:43.710 --> 00:23:46.940
Or if you were doing a lot of
these you could actually use

00:23:46.940 --> 00:23:47.930
service-side plugins.

00:23:47.930 --> 00:23:50.840
For example, I was a WordPress
user for a long time.

00:23:50.840 --> 00:23:54.130
And I remember seeing a couple
of plug-ins where, for

00:23:54.130 --> 00:23:58.280
example, PHP would render the
image on the fly using the

00:23:58.280 --> 00:23:59.540
graphics library.

00:23:59.540 --> 00:24:02.170
But to be honest, I remember
spending a day trying to

00:24:02.170 --> 00:24:04.790
configure it, and I failed.

00:24:04.790 --> 00:24:06.170
And I gave up on it.

00:24:06.170 --> 00:24:07.900
So it was complicated.

00:24:07.900 --> 00:24:09.250
You needed a lot of dependencies
and all

00:24:09.250 --> 00:24:10.590
that kind of stuff.

00:24:10.590 --> 00:24:14.410
And then around 2005, another
technique came along, which

00:24:14.410 --> 00:24:16.900
was Flash replacement, which
is the one I ended

00:24:16.900 --> 00:24:17.720
up using on my site.

00:24:17.720 --> 00:24:19.090
And a lot of people gave
me grief about

00:24:19.090 --> 00:24:20.640
it for a long time.

00:24:20.640 --> 00:24:22.810
But the idea there was that you
would have your regular

00:24:22.810 --> 00:24:25.460
text, and then you would have
kind of a combination of

00:24:25.460 --> 00:24:28.800
JavaScript and Flash, where
once the page loads, the

00:24:28.800 --> 00:24:32.460
JavaScript would swap out the
text with a Flash movie, and

00:24:32.460 --> 00:24:35.750
the Flash movie had the embedded
font, which is crazy

00:24:35.750 --> 00:24:37.510
when you think about
it, but it worked.

00:24:37.510 --> 00:24:38.290
DAVID KUETTEL: It did.

00:24:38.290 --> 00:24:41.110
And it was an improvement,
but we still

00:24:41.110 --> 00:24:42.360
could do so much better.

00:24:42.360 --> 00:24:43.500
ILYA GRIGORIK: Right, right.

00:24:43.500 --> 00:24:46.670
So let's talk about some
problems with these

00:24:46.670 --> 00:24:47.550
approaches.

00:24:47.550 --> 00:24:49.030
And there's a lot
of notes here.

00:24:49.030 --> 00:24:51.760
So I figured we're actually
better off just looking at a

00:24:51.760 --> 00:24:53.120
real example.

00:24:53.120 --> 00:24:56.290
So I have the CSS
Zen Garden site.

00:24:56.290 --> 00:24:58.700
And we're not trying to pick
on CSS Zen Garden.

00:24:58.700 --> 00:25:01.400
I think many sites are going
to have the same

00:25:01.400 --> 00:25:02.280
characteristics.

00:25:02.280 --> 00:25:04.380
DAVID KUETTEL: Rather, we're
trying to show that this was

00:25:04.380 --> 00:25:06.170
state of the art, just
two years ago.

00:25:06.170 --> 00:25:08.870
And it's how you would create
a beautiful site on the web.

00:25:08.870 --> 00:25:09.440
ILYA GRIGORIK: Right.

00:25:09.440 --> 00:25:12.340
So here we have the site.

00:25:12.340 --> 00:25:16.250
So the first problem that I'll
highlight is, I have the web

00:25:16.250 --> 00:25:17.600
developer extension here.

00:25:22.870 --> 00:25:24.930
So I'll just disable images.

00:25:24.930 --> 00:25:27.440
So I'll hide all of the images
on the page, just so we can

00:25:27.440 --> 00:25:29.910
see how this page will look.

00:25:29.910 --> 00:25:32.290
So, Make Images Invisible.

00:25:32.290 --> 00:25:33.960
And let's look at
this page now.

00:25:33.960 --> 00:25:37.110
So all of a sudden, a lot of the
content has disappeared,

00:25:37.110 --> 00:25:40.060
which is actually how, let's
say if I'm a crawler--

00:25:40.060 --> 00:25:42.840
so if I'm Google search
or somebody else,

00:25:42.840 --> 00:25:44.100
this is what I get.

00:25:44.100 --> 00:25:47.060
So all of a sudden, the headers
are missing, the

00:25:47.060 --> 00:25:49.680
paragraph that describes the
site is missing, all this

00:25:49.680 --> 00:25:50.990
content is gone.

00:25:50.990 --> 00:25:53.610
DAVID KUETTEL: And a lot of the
elements that disappeared

00:25:53.610 --> 00:25:56.340
were actually the most
elements on the page.

00:25:56.340 --> 00:25:57.730
Your headings, your title.

00:25:57.730 --> 00:25:58.020
ILYA GRIGORIK: Exactly.

00:25:58.020 --> 00:26:02.790
So if I'm writing a blog post
or authoring an article, I

00:26:02.790 --> 00:26:06.440
probably want the title of the
article to be searchable.

00:26:06.440 --> 00:26:07.730
And unfortunately,
that's gone.

00:26:07.730 --> 00:26:10.390
Now you could probably use Alt
tags on some of those images,

00:26:10.390 --> 00:26:11.340
but nonetheless.

00:26:11.340 --> 00:26:14.470
So if you're using a screen
reader, it's still not a great

00:26:14.470 --> 00:26:14.900
experience.

00:26:14.900 --> 00:26:17.150
DAVID KUETTEL: And even with Alt
tags, a lot of information

00:26:17.150 --> 00:26:19.860
is lost, like size, emphasis.

00:26:19.860 --> 00:26:20.150
ILYA GRIGORIK: Right.

00:26:20.150 --> 00:26:20.620
Exactly.

00:26:20.620 --> 00:26:23.180
So that's kind of problem
number one.

00:26:23.180 --> 00:26:25.590
The other problem is, of course,
if I zoom in-- and

00:26:25.590 --> 00:26:28.590
this is especially a problem
now with retina screens and

00:26:28.590 --> 00:26:32.970
other things, where you can
see as I'm zooming in, the

00:26:32.970 --> 00:26:36.700
quality of this page
is not very good.

00:26:36.700 --> 00:26:40.000
And the quality of the image
just degrades, whereas the

00:26:40.000 --> 00:26:42.350
text looks fine, because
that's actual font.

00:26:42.350 --> 00:26:43.210
DAVID KUETTEL: Exactly.

00:26:43.210 --> 00:26:46.220
And it's worth calling out
that in order to have the

00:26:46.220 --> 00:26:49.000
image appear sharp on the
newer high resolution

00:26:49.000 --> 00:26:51.690
displays, like retinas, you'd
actually need to serve up an

00:26:51.690 --> 00:26:54.040
image that could be
twice as large.

00:26:54.040 --> 00:26:56.160
So your page would become
slower just to

00:26:56.160 --> 00:26:58.100
support your devices.

00:26:58.100 --> 00:27:01.700
ILYA GRIGORIK: Whereas if I
was using a vector format,

00:27:01.700 --> 00:27:04.870
just zoom in and there'd
be no extra requests.

00:27:04.870 --> 00:27:05.490
DAVID KUETTEL: Yes, yes.

00:27:05.490 --> 00:27:09.620
And zooming in is a major use
case on tablets today.

00:27:09.620 --> 00:27:11.390
Pretty much the first
thing I do.

00:27:11.390 --> 00:27:14.080
Maybe I'm growing old, but--

00:27:14.080 --> 00:27:15.600
ILYA GRIGORIK: You're always
pinching and zooming and

00:27:15.600 --> 00:27:16.860
scrolling, and trying
to figure what

00:27:16.860 --> 00:27:17.700
you're trying to do.

00:27:17.700 --> 00:27:19.200
So that's a very good point.

00:27:19.200 --> 00:27:23.110
And then the other case
is translations.

00:27:23.110 --> 00:27:26.290
So I actually have the Google
Translate extension here.

00:27:26.290 --> 00:27:29.490
And what I'm going to do is
I'll translate this into,

00:27:29.490 --> 00:27:32.060
let's say, Korean.

00:27:32.060 --> 00:27:33.490
And look at that.

00:27:33.490 --> 00:27:35.400
The content is translated.

00:27:35.400 --> 00:27:39.340
Everything looks good, except
that all the titles are still

00:27:39.340 --> 00:27:40.550
in English.

00:27:40.550 --> 00:27:44.500
So it's the same problem that
we saw earlier, but it just

00:27:44.500 --> 00:27:46.010
highlights the problem
once again.

00:27:46.010 --> 00:27:46.770
DAVID KUETTEL: Absolutely.

00:27:46.770 --> 00:27:48.110
It's a major fail.

00:27:48.110 --> 00:27:51.210
And this is a use case that's
only going to become

00:27:51.210 --> 00:27:53.900
increasingly common
going forward.

00:27:53.900 --> 00:27:56.930
My aunt, for example, English
isn't her first language.

00:27:56.930 --> 00:28:00.280
And so she configured Chrome
to automatically translate

00:28:00.280 --> 00:28:02.020
into her native language.

00:28:02.020 --> 00:28:03.260
And she surfs the web.

00:28:03.260 --> 00:28:07.000
And anything that's text as
image just doesn't translate.

00:28:07.000 --> 00:28:08.450
And so, major [INAUDIBLE].

00:28:08.450 --> 00:28:08.630
ILYA GRIGORIK: So

00:28:08.630 --> 00:28:12.360
accessibility, not a good story.

00:28:12.360 --> 00:28:16.370
And then the last one that I'll
show here is, I have my

00:28:16.370 --> 00:28:17.720
inspector open here.

00:28:17.720 --> 00:28:18.980
And I'll switch to
the Network tab.

00:28:18.980 --> 00:28:21.110
So I'll just reload this page.

00:28:21.110 --> 00:28:27.140
And this page is about 181
kilobytes, as Chrome tells us.

00:28:27.140 --> 00:28:30.430
And if I go into the images
part, we can see that 171,

00:28:30.430 --> 00:28:34.820
which is like 95% of this page
is actually all images.

00:28:34.820 --> 00:28:37.620
And if we look at some of the
assets in here, for example,

00:28:37.620 --> 00:28:41.380
this title here, 11 kilobytes.

00:28:41.380 --> 00:28:42.900
And there's a whole bunch
of these titles.

00:28:42.900 --> 00:28:47.120
So most of the weight of this
page is actually in images

00:28:47.120 --> 00:28:50.930
that contains text, which is
probably not a very efficient

00:28:50.930 --> 00:28:53.160
way to encode text
to begin with.

00:28:53.160 --> 00:28:53.980
DAVID KUETTEL: Absolutely.

00:28:53.980 --> 00:28:56.450
I mean, you might think
they are small, but

00:28:56.450 --> 00:28:58.000
clearly they add up.

00:28:58.000 --> 00:28:59.880
And here we were only
looking at one page.

00:28:59.880 --> 00:29:03.470
So if you imagine browsing
through a website, going

00:29:03.470 --> 00:29:06.320
deeper in, the images
just add up.

00:29:06.320 --> 00:29:08.760
ILYA GRIGORIK: So instead of, I
could have maybe downloaded

00:29:08.760 --> 00:29:12.170
a 20 kilobyte font and that just
would have been reused

00:29:12.170 --> 00:29:14.120
across all the pages.

00:29:14.120 --> 00:29:15.370
DAVID KUETTEL: Absolutely.

00:29:17.700 --> 00:29:19.630
And there's also another
use case.

00:29:19.630 --> 00:29:23.640
So for example, what you've
listed here, the first one,

00:29:23.640 --> 00:29:25.810
selecting, copying
and pasting text.

00:29:25.810 --> 00:29:28.670
Where with images, that's
lost as well.

00:29:28.670 --> 00:29:29.070
ILYA GRIGORIK: That's true.

00:29:29.070 --> 00:29:29.900
Yes.

00:29:29.900 --> 00:29:31.360
Right.

00:29:31.360 --> 00:29:35.140
So if I'm trying to share
something on Google+ or

00:29:35.140 --> 00:29:38.485
Twitter or Facebook, I can't
just copy the title and paste

00:29:38.485 --> 00:29:39.110
it in, right?

00:29:39.110 --> 00:29:41.460
I'd have to drag over an image,
which is a nightmare.

00:29:41.460 --> 00:29:42.140
DAVID KUETTEL: Absolutely.

00:29:42.140 --> 00:29:43.940
ILYA GRIGORIK: Or more likely,
I would have to remember what

00:29:43.940 --> 00:29:47.470
it is and retype it, which
is not good, not a good

00:29:47.470 --> 00:29:48.720
experience.

00:29:50.820 --> 00:29:52.880
With that out of the way, I
think it's just a good time to

00:29:52.880 --> 00:29:54.430
pause and talk a little
bit about the history.

00:29:54.430 --> 00:29:57.650
Like, what happened between
1997 and today.

00:29:57.650 --> 00:29:59.270
It's a long time.

00:29:59.270 --> 00:29:59.480
DAVID KUETTEL: OK.

00:29:59.480 --> 00:29:59.880
Great.

00:29:59.880 --> 00:30:00.840
Yeah.

00:30:00.840 --> 00:30:02.920
And I love this diagram.

00:30:02.920 --> 00:30:08.660
It really shows that between
2009 and mid-2010, it seemed

00:30:08.660 --> 00:30:12.140
like all the planets aligned
and web fonts really did

00:30:12.140 --> 00:30:15.240
become an option for everyone.

00:30:15.240 --> 00:30:17.620
And it was sort of
a few things.

00:30:17.620 --> 00:30:21.840
So it was a combination of all
of the major browsers adding

00:30:21.840 --> 00:30:23.100
support for web fonts.

00:30:23.100 --> 00:30:27.480
You have Safari, Firefox,
Opera, Chrome.

00:30:27.480 --> 00:30:30.570
In addition, it was the
development of an open source

00:30:30.570 --> 00:30:36.120
tool, TTF to EOT, that allowed
your average website developer

00:30:36.120 --> 00:30:40.090
to create the OT files such that
they could support EOT.

00:30:40.090 --> 00:30:41.790
Before that, there
just weren't any

00:30:41.790 --> 00:30:43.150
really easy to use tools.

00:30:43.150 --> 00:30:46.640
And so it was very cumbersome
to support IE.

00:30:46.640 --> 00:30:51.550
And then in the same time frame,
all of the web font

00:30:51.550 --> 00:30:53.630
services popped up.

00:30:53.630 --> 00:30:57.920
And so we went, in the course
of just roughly over a year,

00:30:57.920 --> 00:31:03.510
from basically web fonts,
practically

00:31:03.510 --> 00:31:06.560
zero to close to 100%.

00:31:06.560 --> 00:31:08.740
So very exciting.

00:31:08.740 --> 00:31:10.800
ILYA GRIGORIK: And I think
today, most every browser

00:31:10.800 --> 00:31:11.740
supports web fonts.

00:31:11.740 --> 00:31:13.100
I think there's some outliers.

00:31:13.100 --> 00:31:16.020
I think last time I checked,
Opera Mini still did not

00:31:16.020 --> 00:31:17.950
support some of the formats.

00:31:17.950 --> 00:31:18.900
DAVID KUETTEL: That's right.

00:31:18.900 --> 00:31:21.180
ILYA GRIGORIK: But basically,
every other platform is

00:31:21.180 --> 00:31:23.560
already there.

00:31:23.560 --> 00:31:27.090
And I think that that leads into
a good point, which is

00:31:27.090 --> 00:31:28.960
there are many different file
formats, which something I

00:31:28.960 --> 00:31:30.270
didn't really appreciate.

00:31:30.270 --> 00:31:32.290
I was aware of it, but I
didn't understand the

00:31:32.290 --> 00:31:33.010
difference between them.

00:31:33.010 --> 00:31:35.540
So can you tell us a little
bit about this?

00:31:35.540 --> 00:31:36.340
DAVID KUETTEL: Sure.

00:31:36.340 --> 00:31:39.250
And one thing that I like is how
you've highlighted, under

00:31:39.250 --> 00:31:42.490
each different font file format,
the percent of web

00:31:42.490 --> 00:31:45.010
browsers that each
one supports.

00:31:45.010 --> 00:31:49.550
And the first takeaway is that
none of the fonts, file

00:31:49.550 --> 00:31:52.520
formats are supported by
100% if the browsers.

00:31:52.520 --> 00:31:55.160
So if you're self-hosting today,
you pretty much need to

00:31:55.160 --> 00:31:59.980
serve all of these font file
formats in order to support

00:31:59.980 --> 00:32:02.000
closely 100% of the
browsers today.

00:32:02.000 --> 00:32:03.350
ILYA GRIGORIK: So this
goes back to the

00:32:03.350 --> 00:32:04.200
how hard can it be?

00:32:04.200 --> 00:32:06.880
I'll just throw up a file on my
server and I'm good to go.

00:32:06.880 --> 00:32:07.430
DAVID KUETTEL: Yeah.

00:32:07.430 --> 00:32:07.950
Yeah.

00:32:07.950 --> 00:32:09.570
Unfortunately, there's a lot of

00:32:09.570 --> 00:32:12.450
complexity under the scenes.

00:32:12.450 --> 00:32:15.810
The web is moving forward,
things are getting better,

00:32:15.810 --> 00:32:17.570
browsers are evolving.

00:32:17.570 --> 00:32:20.250
Down the road, maybe we only
will need one font file

00:32:20.250 --> 00:32:23.610
format, but we're not
there yet today.

00:32:23.610 --> 00:32:26.010
And so that has been
one of the goal of

00:32:26.010 --> 00:32:27.690
the web font services.

00:32:27.690 --> 00:32:30.420
Paul Irish with the bulletproof
at font face

00:32:30.420 --> 00:32:35.660
syntax to get to the point where
we could just hide all

00:32:35.660 --> 00:32:38.040
the complexity.

00:32:38.040 --> 00:32:40.930
ILYA GRIGORIK: So when I was
pasting that CSS style sheet

00:32:40.930 --> 00:32:43.790
into my page, my demo page, I
didn't have to worry about any

00:32:43.790 --> 00:32:45.280
of the stuff, which is great.

00:32:45.280 --> 00:32:47.950
So I assume that you guys are
taking care of figuring out

00:32:47.950 --> 00:32:49.910
the font formats and
all the rest.

00:32:49.910 --> 00:32:50.560
DAVID KUETTEL: That's right.

00:32:50.560 --> 00:32:52.940
So if you use a web font
service, all of the

00:32:52.940 --> 00:32:54.110
complexity is hidden.

00:32:54.110 --> 00:32:56.530
It looks really simple,
easy to use.

00:32:56.530 --> 00:32:59.780
If you are self-hosting, it is
more involved and you do need

00:32:59.780 --> 00:33:00.960
to stay on top of it.

00:33:00.960 --> 00:33:01.900
ILYA GRIGORIK: Right.

00:33:01.900 --> 00:33:02.135
OK.

00:33:02.135 --> 00:33:03.385
That makes sense.

00:33:05.930 --> 00:33:08.740
DAVID KUETTEL: So jumping
ahead, one thing that we

00:33:08.740 --> 00:33:12.130
wanted to talk about today is
basically what are some of the

00:33:12.130 --> 00:33:15.610
interesting architecture
decisions and optimizations

00:33:15.610 --> 00:33:17.800
that [INAUDIBLE] web
fonts has made.

00:33:17.800 --> 00:33:21.370
They only make sense, however,
if we sort of step back and

00:33:21.370 --> 00:33:23.750
look at them all in context.

00:33:23.750 --> 00:33:27.480
And so here are some
observations that we've had,

00:33:27.480 --> 00:33:31.220
and especially looking ahead.

00:33:31.220 --> 00:33:34.630
In a nutshell, the web
is the new platform.

00:33:34.630 --> 00:33:36.650
It's growing exponentially.

00:33:36.650 --> 00:33:38.990
More users are coming online.

00:33:38.990 --> 00:33:42.840
The number of web fonts
is rapidly exploding.

00:33:42.840 --> 00:33:46.360
For the web safe
font formats--

00:33:46.360 --> 00:33:52.040
I'm sorry, the number of web
safe fonts is just so history.

00:33:52.040 --> 00:33:55.840
Online content is becoming so
much richer, to the point

00:33:55.840 --> 00:33:59.060
where it's beginning to mirror
offline content.

00:33:59.060 --> 00:34:02.900
And if you think of offline
content, where newspapers,

00:34:02.900 --> 00:34:06.090
magazines, books, they're
all so rich.

00:34:06.090 --> 00:34:09.540
To date on the web, they've
all been very lacking.

00:34:09.540 --> 00:34:12.510
And we think that that's been
holding people back from

00:34:12.510 --> 00:34:13.340
moving to the web.

00:34:13.340 --> 00:34:14.719
ILYA GRIGORIK: I certainly think
there are good examples

00:34:14.719 --> 00:34:17.480
where we've already gone way
beyond that, where we're

00:34:17.480 --> 00:34:20.370
getting much richer experiences
on the web while

00:34:20.370 --> 00:34:23.639
not sacrificing the look and
feel and the beautiful kind of

00:34:23.639 --> 00:34:25.040
experience that you
get out of it.

00:34:25.040 --> 00:34:26.050
DAVID KUETTEL: Yes,
absolutely.

00:34:26.050 --> 00:34:27.570
And so we see it all
snowballing.

00:34:27.570 --> 00:34:30.530
As the content becomes richer,
more people are being drawn to

00:34:30.530 --> 00:34:32.300
the web, et cetera.

00:34:32.300 --> 00:34:35.060
Another interesting observation
is the number of

00:34:35.060 --> 00:34:37.260
devices per user is growing.

00:34:37.260 --> 00:34:39.870
So I, for example, I
have five devices.

00:34:39.870 --> 00:34:42.820
I have a phone, a tablet,
laptop, desktop,

00:34:42.820 --> 00:34:44.770
and a Google TV.

00:34:44.770 --> 00:34:48.620
And all these devices have a web
browser that are used to

00:34:48.620 --> 00:34:50.940
browse the web.

00:34:50.940 --> 00:34:53.230
Increasingly, a lot of
the sites that I'm

00:34:53.230 --> 00:34:54.639
viewing use web fonts.

00:34:54.639 --> 00:34:56.010
ILYA GRIGORIK: And as you
mentioned, some of these

00:34:56.010 --> 00:34:59.210
devices only have one font
on their system.

00:34:59.210 --> 00:34:59.505
DAVID KUETTEL: Exactly.

00:34:59.505 --> 00:35:01.610
ILYA GRIGORIK: So web fonts is
really the only option there.

00:35:01.610 --> 00:35:02.050
DAVID KUETTEL: Right.

00:35:02.050 --> 00:35:02.910
Right.

00:35:02.910 --> 00:35:06.120
I mean, the web just doesn't
look that great if you're only

00:35:06.120 --> 00:35:07.620
looking at it through
one font.

00:35:07.620 --> 00:35:09.050
ILYA GRIGORIK: In a console
font, right?

00:35:09.050 --> 00:35:09.370
DAVID KUETTEL: Yeah.

00:35:09.370 --> 00:35:10.910
Could you imagine if
it was Comic Sans?

00:35:10.910 --> 00:35:13.320
ILYA GRIGORIK: So in
2 to 10 years.

00:35:13.320 --> 00:35:15.030
DAVID KUETTEL: So these
are some predictions.

00:35:15.030 --> 00:35:16.850
Take them with a
grain of salt.

00:35:16.850 --> 00:35:20.440
But I really, seriously, do
think that within this time

00:35:20.440 --> 00:35:22.740
frame, we could see
one trillion web

00:35:22.740 --> 00:35:24.600
pages using web fonts.

00:35:24.600 --> 00:35:28.440
We could see a billion active
users on the web

00:35:28.440 --> 00:35:30.260
viewing these sites.

00:35:30.260 --> 00:35:33.150
One million websites
using web fonts.

00:35:33.150 --> 00:35:39.680
We could see larger font files,
largely as the fonts

00:35:39.680 --> 00:35:42.650
grow to support more
languages.

00:35:42.650 --> 00:35:46.060
And we could see an explosion
of fonts.

00:35:46.060 --> 00:35:49.950
Maybe in the 100,000 range.

00:35:49.950 --> 00:35:53.410
And then pages will become
richer, more typefaces will be

00:35:53.410 --> 00:35:55.980
used, more styles, weights,
the number

00:35:55.980 --> 00:35:57.020
of devices is exploding.

00:35:57.020 --> 00:35:59.020
ILYA GRIGORIK: So this sounds
really exciting.

00:35:59.020 --> 00:36:01.230
But this also scares me, from
a performance point of view.

00:36:01.230 --> 00:36:03.350
It's like, OK, so if I'm
downloading two to four

00:36:03.350 --> 00:36:07.620
typefaces, one megabyte each,
man, that's going to be not a

00:36:07.620 --> 00:36:08.860
good performance story.

00:36:08.860 --> 00:36:10.800
DAVID KUETTEL: That's
absolutely correct.

00:36:10.800 --> 00:36:14.980
And in addition to that, band
with does cost money.

00:36:14.980 --> 00:36:16.740
Hopefully in time, the
cost goes down.

00:36:16.740 --> 00:36:20.990
But say it was $0.10 a gigabyte,
your manager would

00:36:20.990 --> 00:36:22.490
come and knock on your
door as well.

00:36:22.490 --> 00:36:23.800
ILYA GRIGORIK: So thankfully,
I think we have some

00:36:23.800 --> 00:36:25.770
techniques to address
these issues.

00:36:25.770 --> 00:36:26.820
DAVID KUETTEL: That's right.

00:36:26.820 --> 00:36:30.590
But in a nutshell,
we at Google, we

00:36:30.590 --> 00:36:31.970
really like large problems.

00:36:31.970 --> 00:36:33.400
And we see this as
one of them.

00:36:33.400 --> 00:36:37.510
And at the same time, it's an
excellent opportunity for us

00:36:37.510 --> 00:36:41.640
to help move the web forward
and make it faster.

00:36:41.640 --> 00:36:43.420
ILYA GRIGORIK: That
make sense.

00:36:43.420 --> 00:36:46.170
DAVID KUETTEL: So some
goals that we have

00:36:46.170 --> 00:36:47.520
for Google Web Fonts.

00:36:47.520 --> 00:36:50.870
Basically, we wanted to have a
really simple, intuitive and

00:36:50.870 --> 00:36:54.810
easy to use API, to really help
accelerate the adoption

00:36:54.810 --> 00:36:57.910
of web fonts and to get it to
the point where people were

00:36:57.910 --> 00:37:00.620
very willing to just try them.

00:37:00.620 --> 00:37:03.670
We wanted to make sure that our
architecture would scale

00:37:03.670 --> 00:37:04.365
to the opportunity.

00:37:04.365 --> 00:37:08.270
And as we've talked about,
we think it's huge.

00:37:08.270 --> 00:37:12.120
And then, this may be
counterintuitive, but we also

00:37:12.120 --> 00:37:16.140
wanted to see if we could
basically come up with an

00:37:16.140 --> 00:37:19.280
approach that would become
increasingly faster as the

00:37:19.280 --> 00:37:21.450
number of integrations grew.

00:37:21.450 --> 00:37:23.440
ILYA GRIGORIK: This is very
important, because it's not

00:37:23.440 --> 00:37:25.420
something I appreciated
until we kind of went

00:37:25.420 --> 00:37:28.400
through this in detail.

00:37:28.400 --> 00:37:30.150
Google web fonts should
get faster, the

00:37:30.150 --> 00:37:31.590
more they get used.

00:37:31.590 --> 00:37:33.170
DAVID KUETTEL: That's
our goal.

00:37:33.170 --> 00:37:37.900
And we think we're seeing
early data.

00:37:37.900 --> 00:37:42.250
And continuing this, we wanted
to make sure that we could

00:37:42.250 --> 00:37:45.790
enable transparent and ongoing
optimizations.

00:37:45.790 --> 00:37:51.190
So as the web font technology
improved, better compression

00:37:51.190 --> 00:37:54.480
algorithms, better way of sub
setting fonts, we could roll

00:37:54.480 --> 00:37:56.920
out these improvements,
transparent to all of our

00:37:56.920 --> 00:38:00.350
users, and they would just
seamlessly benefit.

00:38:00.350 --> 00:38:03.760
And then, as we've been talking
about throughout the

00:38:03.760 --> 00:38:05.920
session, there's a lot
of complexity.

00:38:05.920 --> 00:38:07.630
We wanted to hide all of that.

00:38:07.630 --> 00:38:10.300
ILYA GRIGORIK: So let's dive
into some of the complexity.

00:38:10.300 --> 00:38:12.160
I think we've spent a
lot of time talking

00:38:12.160 --> 00:38:13.870
about why this matters.

00:38:13.870 --> 00:38:17.720
Now convinced, let's take a look
at, so what's the problem

00:38:17.720 --> 00:38:18.550
we're trying to solve?

00:38:18.550 --> 00:38:19.000
DAVID KUETTEL: Great.

00:38:19.000 --> 00:38:19.540
Great.

00:38:19.540 --> 00:38:24.510
So so this is basically the
biggest optimization.

00:38:24.510 --> 00:38:27.860
One thing that we realized is,
fonts are one of the most

00:38:27.860 --> 00:38:30.230
reusable resources on the web.

00:38:30.230 --> 00:38:33.640
And what we're seeing is
that many websites are

00:38:33.640 --> 00:38:35.300
using the same font.

00:38:35.300 --> 00:38:38.040
So for example, here, you can
imagine there's [? end ?]

00:38:38.040 --> 00:38:39.070
websites.

00:38:39.070 --> 00:38:41.930
They're all self-hosting,
Open Sans.

00:38:41.930 --> 00:38:47.020
And so when we, as users, go
and browse all these sites,

00:38:47.020 --> 00:38:49.950
what's happening behind the
scenes is the browser's

00:38:49.950 --> 00:38:54.170
downloading Open Sans, the exact
same font fights, over

00:38:54.170 --> 00:38:55.470
and over again.

00:38:55.470 --> 00:38:59.620
And as you can imagine, the end
result is not the great

00:38:59.620 --> 00:39:00.420
experience.

00:39:00.420 --> 00:39:02.290
ILYA GRIGORIK: Especially on,
let's say mobile platforms,

00:39:02.290 --> 00:39:04.680
where the amount of available
cache space is

00:39:04.680 --> 00:39:05.830
also not very large.

00:39:05.830 --> 00:39:08.990
So if I'm downloading one of
these, let's say 500 kilobyte

00:39:08.990 --> 00:39:11.570
fonts, and I visit 10 sites, and
they're all using the same

00:39:11.570 --> 00:39:16.230
font, I have 5 megs worth
of font data.

00:39:16.230 --> 00:39:16.590
DAVID KUETTEL: Yes.

00:39:16.590 --> 00:39:20.135
Or you're constantly evicting
the exact same font, just to

00:39:20.135 --> 00:39:23.490
be downloaded over again.

00:39:23.490 --> 00:39:27.520
And so the observation that we
made was basically, we wanted

00:39:27.520 --> 00:39:30.850
to enable cross site caching
of web fonts.

00:39:30.850 --> 00:39:34.820
So for these end websites, if
you'd imagine, they're all

00:39:34.820 --> 00:39:36.500
using Google web fonts.

00:39:36.500 --> 00:39:41.930
They're all using the same
API to import Open Sans.

00:39:41.930 --> 00:39:45.360
What the end result is for end
users is when they visit the

00:39:45.360 --> 00:39:48.920
first website, they would
download Open Sans, but from

00:39:48.920 --> 00:39:54.480
then on when visiting the next
website, they would just pick

00:39:54.480 --> 00:39:56.860
up Open Sans from the
browser cache.

00:39:56.860 --> 00:40:00.220
And so basically, there wouldn't
be any latency heads

00:40:00.220 --> 00:40:03.050
in visiting all of the
other websites.

00:40:03.050 --> 00:40:06.020
And the net result here,
it's very different.

00:40:06.020 --> 00:40:09.360
I mean, we see lowered latency
across the board.

00:40:09.360 --> 00:40:13.130
It's sort of amortized
across all websites.

00:40:13.130 --> 00:40:17.450
And bandwidth drops, in
particular for the web fonts--

00:40:17.450 --> 00:40:21.940
I'm sorry, for the website, as
we're surfing the fonts.

00:40:21.940 --> 00:40:26.230
And as we're mentioning, with
this approach, as the number

00:40:26.230 --> 00:40:29.670
of integrations increases,
it could

00:40:29.670 --> 00:40:32.520
become faster for everyone.

00:40:32.520 --> 00:40:33.540
ILYA GRIGORIK: That makes
perfect sense.

00:40:33.540 --> 00:40:36.120
So I think it's also important
to just call out one quick

00:40:36.120 --> 00:40:39.760
thing here, which is there are
many different ways how to

00:40:39.760 --> 00:40:40.780
serve web fonts.

00:40:40.780 --> 00:40:42.940
And I think some of the
other providers may

00:40:42.940 --> 00:40:44.210
have a different model.

00:40:44.210 --> 00:40:45.680
So for example, it
also depends on

00:40:45.680 --> 00:40:47.130
your business model.

00:40:47.130 --> 00:40:50.840
So for example, I know that the
early implementations of

00:40:50.840 --> 00:40:51.520
some of the platforms--

00:40:51.520 --> 00:40:52.960
I'm not sure what they're
doing now--

00:40:52.960 --> 00:40:55.620
actually wanted to make sure
that they serve a specific

00:40:55.620 --> 00:40:59.610
font per site, because that's
how they would bill you or

00:40:59.610 --> 00:41:01.740
charge you, or even know how
many fonts they've served.

00:41:01.740 --> 00:41:04.290
Because maybe you get
charged by page use.

00:41:04.290 --> 00:41:06.580
So in that case, you would
download the same font every

00:41:06.580 --> 00:41:07.130
single time.

00:41:07.130 --> 00:41:09.540
But that was kind of a business
reason to do that.

00:41:09.540 --> 00:41:11.840
Whereas here, we're saying
the more people use

00:41:11.840 --> 00:41:13.300
Open Sans, the better.

00:41:13.300 --> 00:41:17.315
And that Open Sans is the same
URL across all of the sites.

00:41:17.315 --> 00:41:20.450
So if CNN.com uses Open Sans,
and somebody then comes to my

00:41:20.450 --> 00:41:22.930
site using that, I don't have
to download that resource,

00:41:22.930 --> 00:41:23.800
which is awesome.

00:41:23.800 --> 00:41:25.050
DAVID KUETTEL: Correct.

00:41:26.680 --> 00:41:29.770
So here's some early numbers
which show this in action.

00:41:29.770 --> 00:41:33.850
So here's a graph of the
top 255 font families.

00:41:33.850 --> 00:41:37.020
And for each, we're seeing the
number of integrations.

00:41:37.020 --> 00:41:40.530
And so the high-level takeaway
is that the most popular fonts

00:41:40.530 --> 00:41:44.650
are very, very popular
and widely used.

00:41:44.650 --> 00:41:46.070
ILYA GRIGORIK: There's a reason
why we keep using Open

00:41:46.070 --> 00:41:48.750
Sans as an example, because it's
actually being used on

00:41:48.750 --> 00:41:49.755
over one million domains.

00:41:49.755 --> 00:41:50.820
DAVID KUETTEL: There is.

00:41:50.820 --> 00:41:52.130
And that's just so exciting.

00:41:52.130 --> 00:41:56.210
I mean, if you step back and
think about it, as a web user,

00:41:56.210 --> 00:41:59.560
you could potentially browse one
million websites and only

00:41:59.560 --> 00:42:01.340
download Open Sans once.

00:42:01.340 --> 00:42:02.630
ILYA GRIGORIK: Yes,
that's right.

00:42:02.630 --> 00:42:04.660
And you still have the
beautiful, rich experience of

00:42:04.660 --> 00:42:05.740
using that web font.

00:42:05.740 --> 00:42:06.050
DAVID KUETTEL: Yes.

00:42:06.050 --> 00:42:08.760
And then after that,
it does drop off.

00:42:08.760 --> 00:42:12.880
But we still see the top 40
fonts, for example, are used

00:42:12.880 --> 00:42:14.950
on over 100,000 domains.

00:42:14.950 --> 00:42:18.970
The top 300 are used on
over 10,000 domains.

00:42:18.970 --> 00:42:21.210
And these numbers
will only grow.

00:42:21.210 --> 00:42:23.720
Over the past year and
a half, we grew 10x.

00:42:23.720 --> 00:42:27.400
And it's very likely that
that could happen

00:42:27.400 --> 00:42:29.936
going forward, as well.

00:42:29.936 --> 00:42:31.300
ILYA GRIGORIK: That's
a great point.

00:42:31.300 --> 00:42:34.125
And then, I think we've covered
this a little bit, but

00:42:34.125 --> 00:42:35.760
font's going to be
quite large.

00:42:35.760 --> 00:42:38.110
This number shocked me when you
first shared it, which is

00:42:38.110 --> 00:42:42.060
Ariel Unicode for all languages
is 22 megabytes.

00:42:42.060 --> 00:42:42.335
DAVID KUETTEL: Yes.

00:42:42.335 --> 00:42:43.650
ILYA GRIGORIK: It's massive.

00:42:43.650 --> 00:42:44.140
DAVID KUETTEL: Yes.

00:42:44.140 --> 00:42:46.650
And the reason being
that it supports

00:42:46.650 --> 00:42:48.660
nearly every language.

00:42:48.660 --> 00:42:53.560
But as the language coverage
expands, font files

00:42:53.560 --> 00:42:55.030
will grow in size.

00:42:55.030 --> 00:42:58.480
And to the point where they're
going to be getting closer to

00:42:58.480 --> 00:43:00.110
Ariel Unicode.

00:43:00.110 --> 00:43:02.820
And so one thing that we wanted
to talk about on this

00:43:02.820 --> 00:43:07.620
slide is the smaller you
can serve fonts, the

00:43:07.620 --> 00:43:08.940
faster it will be.

00:43:08.940 --> 00:43:12.750
And so there's a few different
approaches that we've taken.

00:43:12.750 --> 00:43:15.640
And I'll walk you
through them.

00:43:15.640 --> 00:43:17.850
So the first thing we did--

00:43:17.850 --> 00:43:20.540
and let's start with Open Sans,
which is one of the

00:43:20.540 --> 00:43:22.110
larger fonts that we serve.

00:43:22.110 --> 00:43:25.650
ILYA GRIGORIK: So that entire
thing would be 217 kilobytes.

00:43:25.650 --> 00:43:26.590
The whole set.

00:43:26.590 --> 00:43:28.110
DAVID KUETTEL: Yes,
uncompressed.

00:43:28.110 --> 00:43:33.010
And currently it supports
well over 20 languages.

00:43:33.010 --> 00:43:35.720
The first thing that we did is,
we took the font and we

00:43:35.720 --> 00:43:37.660
created static subsets.

00:43:37.660 --> 00:43:39.810
One subset per script.

00:43:39.810 --> 00:43:42.845
And so if you're creating a
site in North America, you

00:43:42.845 --> 00:43:45.970
would just use the
default script or

00:43:45.970 --> 00:43:47.760
subset, which is Latin.

00:43:47.760 --> 00:43:50.210
However, if you're creating a
Russian web page, you'd want

00:43:50.210 --> 00:43:52.160
the Cyrillic subset.

00:43:52.160 --> 00:43:54.530
Now for convenience,
all of our language

00:43:54.530 --> 00:43:55.810
subsets include Latin.

00:43:55.810 --> 00:43:58.870
And we'll come back and talk
about that later, how we could

00:43:58.870 --> 00:44:00.300
optimize that further.

00:44:00.300 --> 00:44:04.330
But in just subsetting per
script, we reduce the file

00:44:04.330 --> 00:44:05.850
size significantly.

00:44:05.850 --> 00:44:11.270
So we drop from 217K to on the
order of 36K for Latin.

00:44:11.270 --> 00:44:13.080
ILYA GRIGORIK: So that was
that toggle when we were

00:44:13.080 --> 00:44:16.050
demoing the Google Web fonts
interface, right, when you

00:44:16.050 --> 00:44:18.560
could select the different
languages.

00:44:18.560 --> 00:44:21.720
Or I guess, in different
subsets.

00:44:21.720 --> 00:44:23.560
That's effectively what
I'm picturing.

00:44:23.560 --> 00:44:26.000
I'm declaring which languages
I will use on my site.

00:44:26.000 --> 00:44:26.910
DAVID KUETTEL: Exactly.

00:44:26.910 --> 00:44:27.320
Yeah.

00:44:27.320 --> 00:44:28.550
But we didn't stop there.

00:44:28.550 --> 00:44:33.450
So there are a few other
optimizations that we've made.

00:44:33.450 --> 00:44:37.960
One thing that we realized is,
for many platforms, the

00:44:37.960 --> 00:44:40.570
platform doesn't need hints.

00:44:40.570 --> 00:44:43.550
Hints are additional
instructions in the font to

00:44:43.550 --> 00:44:45.170
help improve the rendering, in

00:44:45.170 --> 00:44:47.730
particular, on Windows platforms.

00:44:47.730 --> 00:44:51.200
As Mac and mobile do not need
them, we've been able to

00:44:51.200 --> 00:44:55.860
completely strip the hints
from those fonts, thereby

00:44:55.860 --> 00:44:58.545
reducing the file sizes
even smaller.

00:44:58.545 --> 00:45:00.050
ILYA GRIGORIK: So that's
interesting, because that

00:45:00.050 --> 00:45:03.890
implies to me that the font
being served to a Windows

00:45:03.890 --> 00:45:08.150
machine, as opposed to let's
say an iPhone, are actually

00:45:08.150 --> 00:45:09.140
different files?

00:45:09.140 --> 00:45:10.630
DAVID KUETTEL: That
is correct.

00:45:10.630 --> 00:45:13.880
And I'll show you how we do
that on the next slide.

00:45:13.880 --> 00:45:17.830
But basically, we try and serve
the most optimized font

00:45:17.830 --> 00:45:19.010
file that we can--

00:45:19.010 --> 00:45:20.020
ILYA GRIGORIK: For
the platform.

00:45:20.020 --> 00:45:20.660
DAVID KUETTEL: Exactly.

00:45:20.660 --> 00:45:21.290
ILYA GRIGORIK: Interesting.

00:45:21.290 --> 00:45:22.210
DAVID KUETTEL: Exactly.

00:45:22.210 --> 00:45:25.820
So going further, after
stripping hints, we apply

00:45:25.820 --> 00:45:26.930
compression.

00:45:26.930 --> 00:45:30.520
And so with just simple GZIP
compression, we're able to

00:45:30.520 --> 00:45:34.000
reduce the font file size
by another 50%.

00:45:34.000 --> 00:45:37.520
And then we can do even better
by applying MTX compression

00:45:37.520 --> 00:45:42.030
for EOT, which reduces the
file size by another 50%.

00:45:42.030 --> 00:45:44.330
ILYA GRIGORIK: So this is
on top of the GZIP data?

00:45:44.330 --> 00:45:45.090
DAVID KUETTEL: Yes.

00:45:45.090 --> 00:45:49.420
And going forward, there's a
new compression format that

00:45:49.420 --> 00:45:52.680
we're looking forward to WAF
2, where we're seeing even

00:45:52.680 --> 00:45:55.765
further improvements,
like another 30%.

00:45:55.765 --> 00:45:57.710
ILYA GRIGORIK: So it sounds
like this is a very active

00:45:57.710 --> 00:46:00.640
area of, I guess,
improvements.

00:46:00.640 --> 00:46:01.050
DAVID KUETTEL: Yes.

00:46:01.050 --> 00:46:01.440
Yes.

00:46:01.440 --> 00:46:05.000
And we'll talk more about WAF
2 later, but it's sort of a

00:46:05.000 --> 00:46:06.806
cross industry collaboration.

00:46:06.806 --> 00:46:09.270
It's very exciting.

00:46:09.270 --> 00:46:13.170
And then also, to just sort
of continue this, you can

00:46:13.170 --> 00:46:14.510
actually go further.

00:46:14.510 --> 00:46:18.320
So if on your site, you're
just rendering--

00:46:18.320 --> 00:46:21.300
I mean, you want to see the
font just for a few

00:46:21.300 --> 00:46:26.370
characters, like the title
or navigation elements.

00:46:26.370 --> 00:46:29.490
Using the text equals parameter,
you can specify

00:46:29.490 --> 00:46:32.280
those characters, and what we'll
do behind the scenes is

00:46:32.280 --> 00:46:34.750
we'll dynamically
subset the font.

00:46:34.750 --> 00:46:38.900
And so for example, for ABC in
Open Sans, you're looking at a

00:46:38.900 --> 00:46:40.320
file size in the 3k range.

00:46:40.320 --> 00:46:43.630
ILYA GRIGORIK: So If I was to
use this and apply it to say

00:46:43.630 --> 00:46:47.150
Open Sans, instead of
downloading the 217K let's say

00:46:47.150 --> 00:46:51.450
I'm coming on a Mac, so I would
get a font that is hint

00:46:51.450 --> 00:46:54.110
stripped, so it's already
smaller than, let's say, the

00:46:54.110 --> 00:46:55.460
Windows version.

00:46:55.460 --> 00:46:57.630
It would be G-zipped and
compressed, obviously.

00:46:57.630 --> 00:47:00.180
But then you would also generate
a dynamic font for

00:47:00.180 --> 00:47:03.630
just my title, with maybe like
10 characters that are needed.

00:47:03.630 --> 00:47:06.310
So likely, it's going to
be a very small file.

00:47:06.310 --> 00:47:06.680
DAVID KUETTEL: Correct.

00:47:06.680 --> 00:47:07.180
Correct.

00:47:07.180 --> 00:47:10.280
And it would remain small, even
as Open Sans continues to

00:47:10.280 --> 00:47:11.200
grow in size.

00:47:11.200 --> 00:47:11.510
ILYA GRIGORIK: Right.

00:47:11.510 --> 00:47:14.950
So that's a lot of toggles
that I have on my site to

00:47:14.950 --> 00:47:16.550
tweak the performance.

00:47:16.550 --> 00:47:18.830
DAVID KUETTEL: And so one
takeaway is our average font

00:47:18.830 --> 00:47:21.480
file size that we
serve is 35K.

00:47:21.480 --> 00:47:24.830
And so they are very small
in comparison to the

00:47:24.830 --> 00:47:26.400
original file size.

00:47:26.400 --> 00:47:28.450
ILYA GRIGORIK: That
make sense.

00:47:28.450 --> 00:47:29.910
DAVID KUETTEL: So here's
how we actually do it.

00:47:29.910 --> 00:47:35.290
So if you look at the Google
Web Fonts API, for example,

00:47:35.290 --> 00:47:37.460
for lobster--

00:47:37.460 --> 00:47:39.380
ILYA GRIGORIK: So this is the
import rule that you guys give

00:47:39.380 --> 00:47:40.890
on that page that can copy.

00:47:40.890 --> 00:47:41.900
DAVID KUETTEL: That
is correct.

00:47:41.900 --> 00:47:44.260
Yeah, so you'd copy and paste
that URL into your site.

00:47:44.260 --> 00:47:48.540
And then when someone visits
your site, the browser would

00:47:48.540 --> 00:47:49.720
request that.

00:47:49.720 --> 00:47:53.600
And in response, what we do is
we dynamically generate the

00:47:53.600 --> 00:47:57.490
most optimal web font CSS
for your user agent.

00:47:57.490 --> 00:48:00.960
And so here, for example,
this is the web font CSS

00:48:00.960 --> 00:48:02.530
for Chrome on Mac.

00:48:02.530 --> 00:48:06.390
What you can see is in the web
font CSS, there's sort of a

00:48:06.390 --> 00:48:08.800
pointer to the font file.

00:48:08.800 --> 00:48:17.550
And here, this pointer, it's a
mapping to Open Sans regular

00:48:17.550 --> 00:48:19.380
WOFF with hints stripped.

00:48:19.380 --> 00:48:21.480
And that's what we
serve for Mac.

00:48:21.480 --> 00:48:23.680
If you're on Windows, it
would include hints.

00:48:23.680 --> 00:48:27.300
It would be a little
bit bigger.

00:48:27.300 --> 00:48:30.050
So here, what you're seeing
is really like the

00:48:30.050 --> 00:48:31.320
power of the API.

00:48:31.320 --> 00:48:32.020
It's very simple.

00:48:32.020 --> 00:48:32.790
It's very intuitive.

00:48:32.790 --> 00:48:34.970
ILYA GRIGORIK: I was never
aware of this.

00:48:34.970 --> 00:48:36.640
I just put an include rule.

00:48:36.640 --> 00:48:38.250
And all this stuff happens
under the hood.

00:48:38.250 --> 00:48:39.490
So I don't need to
worry about this?

00:48:39.490 --> 00:48:40.920
DAVID KUETTEL: Right.

00:48:40.920 --> 00:48:42.370
ILYA GRIGORIK: And
then I guess 30

00:48:42.370 --> 00:48:43.570
variations per font file.

00:48:43.570 --> 00:48:46.240
So if I want to serve this
myself, I would have to have a

00:48:46.240 --> 00:48:49.060
directory of 30 files and
then somehow figure out

00:48:49.060 --> 00:48:49.780
which one to serve.

00:48:49.780 --> 00:48:51.350
DAVID KUETTEL: Yes, yes.

00:48:51.350 --> 00:48:53.920
And basically, we wanted
to push the

00:48:53.920 --> 00:48:55.650
envelope of what's possible.

00:48:55.650 --> 00:48:57.300
So currently, it's
30 variations.

00:48:57.300 --> 00:49:00.670
But going forward, it's going
to be more, so even

00:49:00.670 --> 00:49:01.640
more with WOFF 2.0.

00:49:01.640 --> 00:49:03.900
ILYA GRIGORIK: Wow, jeez.

00:49:03.900 --> 00:49:06.346
This starts to get complicated
under the hood.

00:49:06.346 --> 00:49:08.820
DAVID KUETTEL: But under the
hood, but remember it's all--

00:49:08.820 --> 00:49:10.390
ILYA GRIGORIK: Right.

00:49:10.390 --> 00:49:11.785
That makes sense.

00:49:11.785 --> 00:49:14.790
DAVID KUETTEL: So this is
sort of a simplified

00:49:14.790 --> 00:49:16.910
architecture diagram.

00:49:16.910 --> 00:49:19.680
It might look complex,
but the key takeaways

00:49:19.680 --> 00:49:21.190
are, we have two paths.

00:49:21.190 --> 00:49:24.700
There's a dynamic serving path,
a static serving path,

00:49:24.700 --> 00:49:27.110
that also gives us a
lot of flexibility.

00:49:27.110 --> 00:49:33.950
So for example, we do support
older versions of iOS, which

00:49:33.950 --> 00:49:37.530
they expect the fonts to be
served in SVG format.

00:49:37.530 --> 00:49:38.905
We don't get that
many requests.

00:49:38.905 --> 00:49:41.850
It's on the order of half
a million per day.

00:49:41.850 --> 00:49:42.900
ILYA GRIGORIK: Just
half a million?

00:49:42.900 --> 00:49:44.280
DAVID KUETTEL: Yeah, just
half a million.

00:49:44.280 --> 00:49:45.960
It's all relative.

00:49:45.960 --> 00:49:47.940
But basically, those
requests come in

00:49:47.940 --> 00:49:49.260
through a dynamic path.

00:49:49.260 --> 00:49:53.270
We generate the SVG font
and send it back.

00:49:53.270 --> 00:49:54.760
So we have a lot of flexibility

00:49:54.760 --> 00:49:55.940
on the serving side.

00:49:55.940 --> 00:49:59.500
But the main takeaway is
basically we have to really

00:49:59.500 --> 00:50:01.770
leverage the Google
infrastructure

00:50:01.770 --> 00:50:03.530
and the Google CDN.

00:50:03.530 --> 00:50:05.740
And the two are amazing.

00:50:05.740 --> 00:50:09.930
So for example, the Google CDN,
we're seeing our font

00:50:09.930 --> 00:50:13.235
served from well over 100
cells and satellites.

00:50:13.235 --> 00:50:15.910
ILYA GRIGORIK: So it's 100
locations around the world

00:50:15.910 --> 00:50:17.370
where these files are
being served?

00:50:17.370 --> 00:50:18.550
DAVID KUETTEL: Exactly.

00:50:18.550 --> 00:50:22.250
And so what's really exciting
for the typical web developer

00:50:22.250 --> 00:50:25.430
is, odds are the font's being
served much closer to the end

00:50:25.430 --> 00:50:27.490
user than the website itself--

00:50:27.490 --> 00:50:29.580
ILYA GRIGORIK: Which helps you
with the latency and the

00:50:29.580 --> 00:50:30.530
faster download.

00:50:30.530 --> 00:50:32.680
All of those things come
together, which will hopefully

00:50:32.680 --> 00:50:35.810
lead to a much better and faster
browsing experience.

00:50:35.810 --> 00:50:36.770
DAVID KUETTEL: Absolutely.

00:50:36.770 --> 00:50:39.800
And then the fonts that we serve
are heavily cached, so

00:50:39.800 --> 00:50:43.720
both the server inside
Google and then

00:50:43.720 --> 00:50:45.730
caching proxies and whatnot.

00:50:45.730 --> 00:50:48.800
And the angle is, basically,
you'd be downloading fonts

00:50:48.800 --> 00:50:51.530
from down the street,
like your ISP, or

00:50:51.530 --> 00:50:53.510
your telco, or whatnot.

00:50:53.510 --> 00:50:55.110
ILYA GRIGORIK: Yeah, that's
an excellent point.

00:50:55.110 --> 00:50:58.370
So let me see if I can put
all of this together.

00:50:58.370 --> 00:50:59.470
DAVID KUETTEL: We went
through quite a bit.

00:50:59.470 --> 00:51:01.410
ILYA GRIGORIK: Yeah, so I'll
come back to the actual font

00:51:01.410 --> 00:51:05.130
that we used originally, which
is this [INAUDIBLE] font.

00:51:05.130 --> 00:51:06.460
Not sure if I'm pronouncing
that correctly.

00:51:06.460 --> 00:51:10.250
But I got my link tagged,
and I put it on my page.

00:51:10.250 --> 00:51:14.240
So when the browser comes and
requests this CSS file, this

00:51:14.240 --> 00:51:16.370
is what I'm going to
see in this file.

00:51:16.370 --> 00:51:17.770
And in this case, it's actually

00:51:17.770 --> 00:51:19.570
downloading a WOFF file.

00:51:19.570 --> 00:51:24.420
And because when I was doing
this, I was doing on a Mac, I

00:51:24.420 --> 00:51:27.790
guess the API figured out based
on my user agent that

00:51:27.790 --> 00:51:30.610
WOFF is the most optimal format,
and it's going to

00:51:30.610 --> 00:51:32.540
serve it from the Google CDN.

00:51:32.540 --> 00:51:35.190
And then kind of one other
optimization that there is in

00:51:35.190 --> 00:51:39.890
here which it says if you have
it locally installed, and you

00:51:39.890 --> 00:51:42.670
can locally install these
fonts, then use that.

00:51:42.670 --> 00:51:44.350
Otherwise, there's a fallback.

00:51:44.350 --> 00:51:45.820
Use this WOFF file
and download it

00:51:45.820 --> 00:51:46.750
from the Google CDN.

00:51:46.750 --> 00:51:47.390
DAVID KUETTEL: Correct.

00:51:47.390 --> 00:51:47.910
ILYA GRIGORIK: Right?

00:51:47.910 --> 00:51:50.600
So that's the reason why we
don't see that EOT file is

00:51:50.600 --> 00:51:53.540
another, because this file by
itself is a dynamic file being

00:51:53.540 --> 00:51:55.560
sort of format platform.

00:51:55.560 --> 00:51:57.410
DAVID KUETTEL: The
CSS is dynamic.

00:51:57.410 --> 00:51:58.790
ILYA GRIGORIK: Perfect.

00:51:58.790 --> 00:52:01.830
And then I look at the headers
of this request, and it

00:52:01.830 --> 00:52:03.710
actually tells me a couple
of interesting things.

00:52:03.710 --> 00:52:05.680
First is this request--

00:52:05.680 --> 00:52:07.900
oops, going back there--

00:52:07.900 --> 00:52:12.500
has cache-control private, which
means that this resource

00:52:12.500 --> 00:52:16.590
is customized to this host, and
it should not be cached in

00:52:16.590 --> 00:52:20.160
some intermediate proxy because
if I then connect

00:52:20.160 --> 00:52:22.800
through the same proxy on my
mobile phone, that may be the

00:52:22.800 --> 00:52:24.950
wrong file to download
to begin with.

00:52:24.950 --> 00:52:25.140
Right?

00:52:25.140 --> 00:52:25.740
DAVID KUETTEL: Correct.

00:52:25.740 --> 00:52:27.430
And so specifically, this
is for the CSS.

00:52:27.430 --> 00:52:28.920
ILYA GRIGORIK: Right, exactly.

00:52:28.920 --> 00:52:31.210
This is just for the CSS file.

00:52:31.210 --> 00:52:33.860
But nonetheless, you tell me
to cache this file, this

00:52:33.860 --> 00:52:35.965
dynamic CSS file for a day.

00:52:35.965 --> 00:52:39.150
Now, why for a day?

00:52:39.150 --> 00:52:41.480
DAVID KUETTEL: Well, basically,
as I mentioned

00:52:41.480 --> 00:52:45.470
earlier, we're rolling out
continuous improvements and

00:52:45.470 --> 00:52:47.070
optimizations.

00:52:47.070 --> 00:52:50.990
In addition, we continue to
improve the fonts themselves.

00:52:50.990 --> 00:52:54.520
And so we want to make sure that
as the fonts improve, as

00:52:54.520 --> 00:52:58.240
they get smaller, you pick them
up as fast as we're able

00:52:58.240 --> 00:52:59.290
to roll them out.

00:52:59.290 --> 00:53:02.770
So with this approach, when we
roll out a better font, users

00:53:02.770 --> 00:53:03.800
pick it up within a day--

00:53:03.800 --> 00:53:05.440
ILYA GRIGORIK: Within a
day, within 24 hours.

00:53:05.440 --> 00:53:09.350
And then, I notice that when I
download the actual font file

00:53:09.350 --> 00:53:12.970
itself, that file is
cached for a year.

00:53:12.970 --> 00:53:13.280
Right?

00:53:13.280 --> 00:53:18.010
So if I come to, let's say,
CNN and CNN is using this

00:53:18.010 --> 00:53:21.170
font, it will be in my cache for
a very long time unless it

00:53:21.170 --> 00:53:21.750
gets evicted.

00:53:21.750 --> 00:53:24.310
And the more sites use it, the
less likely it gets to be

00:53:24.310 --> 00:53:28.860
evicted because it's usually
least recently used cache.

00:53:28.860 --> 00:53:32.860
So that gives you a lot of
optimization, which leads me

00:53:32.860 --> 00:53:35.570
to a couple of different
scenarios.

00:53:35.570 --> 00:53:39.060
So a lot of people ask me
questions about, well, why

00:53:39.060 --> 00:53:42.560
does Google Web Fonts request
a CSS file and then does

00:53:42.560 --> 00:53:43.310
another request?

00:53:43.310 --> 00:53:44.590
And that's the reason, right?

00:53:44.590 --> 00:53:47.220
We're betting on the fact that
the more people use Web Fonts,

00:53:47.220 --> 00:53:49.870
the more likely that font
is to be in your cache.

00:53:49.870 --> 00:53:54.320
And it's even better to have it
in your cache and not make

00:53:54.320 --> 00:53:57.460
that request than to serve it
in line in that CSS file?

00:53:57.460 --> 00:53:58.255
DAVID KUETTEL: Correct.

00:53:58.255 --> 00:54:00.410
ILYA GRIGORIK: So a couple
different scenarios to work

00:54:00.410 --> 00:54:01.660
through here.

00:54:01.660 --> 00:54:04.580
First one is you're
coming to a site.

00:54:04.580 --> 00:54:06.830
Let's assume you have an empty
cache, and you've never been

00:54:06.830 --> 00:54:07.610
to this site.

00:54:07.610 --> 00:54:10.240
So what's going to happen is,
you'll request the optimized

00:54:10.240 --> 00:54:12.750
CSS file, or you'll request
the CSS file which will be

00:54:12.750 --> 00:54:14.550
returned optimized
to your platform.

00:54:14.550 --> 00:54:16.390
And then, you'll go out
and download the font.

00:54:16.390 --> 00:54:19.850
So that is your most expensive
case, so 2+ requests.

00:54:19.850 --> 00:54:22.840
And plus because if you're using
multiple fonts, it'll

00:54:22.840 --> 00:54:25.530
make multiple requests.

00:54:25.530 --> 00:54:28.740
On the next page view, we know
that the CSS file will be

00:54:28.740 --> 00:54:31.120
cached for a day, so that
doesn't have to make a

00:54:31.120 --> 00:54:33.920
request, and the font file
is cached for a year.

00:54:33.920 --> 00:54:36.840
So in my next page view, zero
request, which is nice.

00:54:36.840 --> 00:54:39.360
And I still get the
nice experience.

00:54:39.360 --> 00:54:41.150
And then, let's say,
24 hours later, I

00:54:41.150 --> 00:54:43.380
come back to the site.

00:54:43.380 --> 00:54:45.650
I may have to refresh
that CSS file.

00:54:45.650 --> 00:54:50.230
And if the underlying font has
not changed, then that's all I

00:54:50.230 --> 00:54:53.630
need to do, because that's
still likely in my cache.

00:54:53.630 --> 00:54:56.580
But even there, the 24 hours,
I put a couple of stars in

00:54:56.580 --> 00:55:00.320
there because let's say I'm
using Open Sans, chances are I

00:55:00.320 --> 00:55:02.940
visited something some other
site in between those 24

00:55:02.940 --> 00:55:05.020
hours, or I was forced
to do that refresh.

00:55:05.020 --> 00:55:05.740
DAVID KUETTEL: Exactly.

00:55:05.740 --> 00:55:07.460
One of the other one
million websites.

00:55:07.460 --> 00:55:08.210
ILYA GRIGORIK: Exactly.

00:55:08.210 --> 00:55:11.550
So the most frequent
case is actually

00:55:11.550 --> 00:55:12.980
likely to be zero request.

00:55:12.980 --> 00:55:14.760
DAVID KUETTEL: That circle.

00:55:14.760 --> 00:55:18.090
ILYA GRIGORIK: And I think this
is important because when

00:55:18.090 --> 00:55:20.420
you are, let's say, in your
developer tools, and you're

00:55:20.420 --> 00:55:23.460
just hitting refresh, and
oftentimes, you're forcing a

00:55:23.460 --> 00:55:29.760
hard refresh on your page which
means don't consider the

00:55:29.760 --> 00:55:32.570
cache and re-download all the
resources, you're seeing that

00:55:32.570 --> 00:55:34.110
performance hit of
re-downloading the

00:55:34.110 --> 00:55:35.640
fonts all the time.

00:55:35.640 --> 00:55:37.900
And I think a lot of people
get scared of that as they

00:55:37.900 --> 00:55:39.050
should be, because you're
downloading

00:55:39.050 --> 00:55:40.440
these external resources.

00:55:40.440 --> 00:55:43.710
But they're forgetting that
the whole premise of the

00:55:43.710 --> 00:55:46.830
services built on the fact that
there's a CDN behind it,

00:55:46.830 --> 00:55:47.980
and we're trying to
reuse the cache.

00:55:47.980 --> 00:55:48.935
DAVID KUETTEL: Exactly.

00:55:48.935 --> 00:55:53.672
And as the number of
integrations increases, it

00:55:53.672 --> 00:55:54.670
should all just go faster.

00:55:54.670 --> 00:55:57.290
ILYA GRIGORIK: So there's
definitely a cost, but we're

00:55:57.290 --> 00:55:59.930
doing a lot of things to make
sure that that cost is

00:55:59.930 --> 00:56:00.255
minimized

00:56:00.255 --> 00:56:02.271
DAVID KUETTEL: Absolutely.

00:56:02.271 --> 00:56:04.630
ILYA GRIGORIK: So this is--

00:56:04.630 --> 00:56:07.390
I think we just covered this,
but I had this question from

00:56:07.390 --> 00:56:09.430
Eric, which I think is very
important, so I'll

00:56:09.430 --> 00:56:10.100
just read it out.

00:56:10.100 --> 00:56:13.520
So I've noticed that Google
Web Fonts link tag or the

00:56:13.520 --> 00:56:16.200
import fetches the CSS file with
font fact declaration,

00:56:16.200 --> 00:56:18.875
which is true, as we saw, which
then makes another round

00:56:18.875 --> 00:56:20.430
trip to get the font file.

00:56:20.430 --> 00:56:22.120
Is there any reason I should
not just include

00:56:22.120 --> 00:56:24.070
the font face myself?

00:56:24.070 --> 00:56:29.440
And the answer to this is you
could, but we're doing a lot

00:56:29.440 --> 00:56:32.170
of stuff under the hood to pick
the right file type and

00:56:32.170 --> 00:56:37.470
optimize for the cache
on your machine.

00:56:37.470 --> 00:56:38.080
DAVID KUETTEL: Correct.

00:56:38.080 --> 00:56:41.010
And then, also, in addition, as
we roll out new versions of

00:56:41.010 --> 00:56:44.330
the font, we come back and
clean up older versions.

00:56:44.330 --> 00:56:47.470
And so if you do copy and paste
the direct link to the

00:56:47.470 --> 00:56:49.900
font, eventually, your
site will break.

00:56:49.900 --> 00:56:53.810
And so we really do encourage
people to use the API.

00:56:53.810 --> 00:56:56.892
And remember, everyone wins
when you do that.

00:56:56.892 --> 00:56:59.340
ILYA GRIGORIK: That
makes sense.

00:56:59.340 --> 00:57:03.570
So that's a lot of stuff
that's going on now.

00:57:03.570 --> 00:57:04.440
What's coming in the future?

00:57:04.440 --> 00:57:07.110
DAVID KUETTEL: Yeah, and as
I mentioned, it's such an

00:57:07.110 --> 00:57:07.990
exciting time.

00:57:07.990 --> 00:57:09.810
It's such an exciting space.

00:57:09.810 --> 00:57:13.120
And so there's continuous
improvement.

00:57:13.120 --> 00:57:15.710
One thing that we're all looking
forward to WOFF 2.0,

00:57:15.710 --> 00:57:19.170
which is a new advanced web
font compression format.

00:57:19.170 --> 00:57:22.890
It started as a collaboration
between Google and Monotype,

00:57:22.890 --> 00:57:26.250
where Monotype open source
their MTX compression

00:57:26.250 --> 00:57:27.430
algorithms.

00:57:27.430 --> 00:57:31.560
And WOFF 2.0 took all the best
ideas and just built on them.

00:57:31.560 --> 00:57:35.360
And so it pushes the limits of
web font compression, where

00:57:35.360 --> 00:57:40.770
we're seeing 30% smaller font
files over GZIP with WOFF 2.0

00:57:40.770 --> 00:57:45.096
all the way up 50% smaller font
files for CJK and other

00:57:45.096 --> 00:57:49.099
Korean, Chinese, Japanese
font files.

00:57:49.099 --> 00:57:51.594
It's very exciting.

00:57:51.594 --> 00:57:55.586
Where we're up to day, it's
under consideration by the W3C

00:57:55.586 --> 00:57:57.582
web font working grid.

00:57:57.582 --> 00:58:02.120
And we would really encourage
everyone to help support it,

00:58:02.120 --> 00:58:03.670
help [INAUDIBLE]

00:58:03.670 --> 00:58:04.085
the adoption.

00:58:04.085 --> 00:58:05.190
ILYA GRIGORIK: So if we had
to kind of gaze in sort of

00:58:05.190 --> 00:58:08.020
crystal ball, would you say this
is a year, a two-year, a

00:58:08.020 --> 00:58:09.060
10-year endeavor?

00:58:09.060 --> 00:58:11.970
DAVID KUETTEL: Well, standards
do take time.

00:58:11.970 --> 00:58:16.710
We are hoping to begin serving
WOFF 2.0 on our early access

00:58:16.710 --> 00:58:20.050
page soon, within
a month or so.

00:58:20.050 --> 00:58:22.080
ILYA GRIGORIK: Oh, wow.

00:58:22.080 --> 00:58:25.580
DAVID KUETTEL: I mean all of us,
we want to see these new

00:58:25.580 --> 00:58:28.950
technologies rolled out
as fast as possible.

00:58:28.950 --> 00:58:30.892
They do take time to bake.

00:58:30.892 --> 00:58:35.420
But we're really looking
forward to this one.

00:58:35.420 --> 00:58:41.260
Another thing that we're going
to explore going forward is

00:58:41.260 --> 00:58:44.040
the app font face
Unicode range.

00:58:44.040 --> 00:58:47.780
Here, as we mentioned earlier
when we were talking about the

00:58:47.780 --> 00:58:52.580
language subsets, for all our
subsets, we include Latin just

00:58:52.580 --> 00:58:55.810
to make it simple for
the integrations.

00:58:55.810 --> 00:58:59.000
But going forward with Unicode
range, we could actually break

00:58:59.000 --> 00:59:00.420
the subsets up.

00:59:00.420 --> 00:59:03.800
So we could have just Latin,
just Cyrillic.

00:59:03.800 --> 00:59:07.610
And with Unicode range, the
browser could intelligently

00:59:07.610 --> 00:59:10.530
figure out which one
to download.

00:59:10.530 --> 00:59:14.530
And this would allow us to
make internationalization

00:59:14.530 --> 00:59:15.720
support more transparent.

00:59:15.720 --> 00:59:16.770
ILYA GRIGORIK: Right.

00:59:16.770 --> 00:59:19.720
What that tells me is I wouldn't
necessarily have to

00:59:19.720 --> 00:59:22.390
declare this upfront when I'm
customizing the font.

00:59:22.390 --> 00:59:24.380
The browser could actually look
at the content of the

00:59:24.380 --> 00:59:27.900
page, and say, hey, this looks
like Korean content, and

00:59:27.900 --> 00:59:29.090
that's the font I'm
going to download?

00:59:29.090 --> 00:59:30.680
DAVID KUETTEL: That's right.

00:59:30.680 --> 00:59:33.830
The integrator would say, I just
want to use Open Sans,

00:59:33.830 --> 00:59:35.290
make everything happen for me.

00:59:35.290 --> 00:59:36.950
ILYA GRIGORIK: So basically,
it just means less work for

00:59:36.950 --> 00:59:37.330
me, the developer?

00:59:37.330 --> 00:59:38.240
DAVID KUETTEL: Yes.

00:59:38.240 --> 00:59:41.020
And then, it gives us more
room for optimizations.

00:59:41.020 --> 00:59:43.150
We can create smaller subsets.

00:59:43.150 --> 00:59:45.145
There's a lot of things that we
can do behind the scenes.

00:59:45.145 --> 00:59:45.890
ILYA GRIGORIK: Very cool.

00:59:45.890 --> 00:59:49.810
And that's independent,
obviously, of WOFF 2.0.

00:59:49.810 --> 00:59:52.356
What's the state of this?

00:59:52.356 --> 00:59:54.900
DAVID KUETTEL: At the moment,
not all browsers support

00:59:54.900 --> 00:59:56.160
Unicode range.

00:59:56.160 --> 00:59:58.840
And so that's one thing that--

00:59:58.840 --> 01:00:00.960
it's been holding
us back to date.

01:00:00.960 --> 01:00:03.200
But maybe, we'll explore
it later this year,

01:00:03.200 --> 01:00:04.620
maybe early next year.

01:00:04.620 --> 01:00:05.430
ILYA GRIGORIK: Interesting.

01:00:05.430 --> 01:00:07.210
Very cool.

01:00:07.210 --> 01:00:10.090
So we covered a lot of stuff.

01:00:10.090 --> 01:00:13.310
So I just want to have a couple
of slides just to recap

01:00:13.310 --> 01:00:15.660
and talk about what
we've covered.

01:00:15.660 --> 01:00:20.080
So I think it's obvious, at
least it became obvious to me

01:00:20.080 --> 01:00:23.640
as we were going through this
that using Web Fonts has a ton

01:00:23.640 --> 01:00:24.500
of advantages.

01:00:24.500 --> 01:00:26.880
So anything from smaller file
sizes to being retina

01:00:26.880 --> 01:00:30.660
friendly, zoom friendly, search,
accessibility, there's

01:00:30.660 --> 01:00:35.000
so many benefits to using Web
Fonts in general, which is

01:00:35.000 --> 01:00:38.150
part of performance, because
you get better engagement,

01:00:38.150 --> 01:00:40.380
better user retention
and other things.

01:00:40.380 --> 01:00:43.060
And the other thing that I think
a lot of people don't

01:00:43.060 --> 01:00:47.010
realize is combining CSS3, as
we saw with this flat land

01:00:47.010 --> 01:00:51.080
example, it can create some
pretty fantastic things, which

01:00:51.080 --> 01:00:52.930
I did not expect.

01:00:52.930 --> 01:00:55.850
And then the other tip is, we
didn't show it in the original

01:00:55.850 --> 01:00:58.520
demo, but all the fonts on
Google Web Fonts are open

01:00:58.520 --> 01:01:01.130
source, which means that I can
actually download them on to

01:01:01.130 --> 01:01:05.140
my local machine, all 531 of
them, and either use them in

01:01:05.140 --> 01:01:09.680
my design workflow, or in my
text editor, and in any other

01:01:09.680 --> 01:01:10.840
way for that matter.

01:01:10.840 --> 01:01:11.510
DAVID KUETTEL: Correct.

01:01:11.510 --> 01:01:14.430
ILYA GRIGORIK: So in fact, if I
downloaded all the fonts, I

01:01:14.430 --> 01:01:16.070
wouldn't have to download
those fonts

01:01:16.070 --> 01:01:17.160
from the Google CDN?

01:01:17.160 --> 01:01:18.370
DAVID KUETTEL: That
is correct.

01:01:18.370 --> 01:01:22.450
And that's via the local hint
that we use in the dynamically

01:01:22.450 --> 01:01:24.190
generated web font CSS.

01:01:24.190 --> 01:01:27.680
One note, however, if you do do
that, please make sure you

01:01:27.680 --> 01:01:31.240
keep them up-to-date such that
you benefit from all the

01:01:31.240 --> 01:01:33.050
hinting improvements
and whatnot.

01:01:33.050 --> 01:01:35.750
ILYA GRIGORIK: Yeah, I love to
see a font manager that can

01:01:35.750 --> 01:01:37.830
just do that automatically
for me on my machine.

01:01:37.830 --> 01:01:39.080
DAVID KUETTEL: Yes, that
would be fantastic.

01:01:39.080 --> 01:01:40.490
ILYA GRIGORIK: But I don't think
a lot of people realize

01:01:40.490 --> 01:01:42.750
that you can actually download
them and use them locally,

01:01:42.750 --> 01:01:45.130
which is quite nice.

01:01:45.130 --> 01:01:48.050
And then we, I guess,
talked about the

01:01:48.050 --> 01:01:50.070
different font formats--

01:01:50.070 --> 01:01:53.430
so EOT, WOFF, SVG, and others.

01:01:53.430 --> 01:01:56.770
And Google Web Fonts manages all
of those variations based

01:01:56.770 --> 01:01:57.440
on a platform.

01:01:57.440 --> 01:02:01.840
And it sounds like iOS 5 versus
iOS earlier version may

01:02:01.840 --> 01:02:04.210
even have different kinds
of preferences for

01:02:04.210 --> 01:02:05.400
which fonts to use.

01:02:05.400 --> 01:02:07.840
So all that is hidden away from
you, which is quite nice.

01:02:07.840 --> 01:02:08.425
DAVID KUETTEL: That
is correct.

01:02:08.425 --> 01:02:10.650
ILYA GRIGORIK: So nothing
stops you from

01:02:10.650 --> 01:02:12.790
hosting your own fonts.

01:02:12.790 --> 01:02:14.600
And I think, in some cases,
a lot of people have been

01:02:14.600 --> 01:02:15.490
recommending that.

01:02:15.490 --> 01:02:18.360
But now that we've gone through
all of this, I'm

01:02:18.360 --> 01:02:20.302
personally on the side of like,
you know what, I'll just

01:02:20.302 --> 01:02:23.410
let you guys handle
all of this work.

01:02:23.410 --> 01:02:26.090
Because it looks like you're
doing a pretty good job.

01:02:26.090 --> 01:02:28.670
And there are cases
where you would

01:02:28.670 --> 01:02:29.670
want to host it yourself.

01:02:29.670 --> 01:02:32.770
So for example, if I have an
offline app, which I still

01:02:32.770 --> 01:02:36.930
want to look nice if I am on a
subway or something like that,

01:02:36.930 --> 01:02:40.870
I could download the font,
serve it as my offline

01:02:40.870 --> 01:02:43.750
resource, but then make sure
that I have some update

01:02:43.750 --> 01:02:46.160
mechanism, as you mentioned,
to make sure that I'm still

01:02:46.160 --> 01:02:48.340
getting the benefit of the
periodic updates that you guys

01:02:48.340 --> 01:02:49.800
are rolling out.

01:02:49.800 --> 01:02:51.300
So it's not either or.

01:02:51.300 --> 01:02:54.070
But if you're getting into the
I'm going to roll my own

01:02:54.070 --> 01:02:56.280
solution, make sure you
understand the complexities.

01:02:56.280 --> 01:02:59.740
Because if you just grab the
WOFF file, as you saw, it'll

01:02:59.740 --> 01:03:01.220
be 78% of the browsers.

01:03:01.220 --> 01:03:03.660
So some platforms
will not work.

01:03:03.660 --> 01:03:05.960
Or they will work, you'll get
the page, but it just won't

01:03:05.960 --> 01:03:08.290
look the same, which is probably
not the experience

01:03:08.290 --> 01:03:09.100
you're looking for.

01:03:09.100 --> 01:03:09.530
DAVID KUETTEL: Exactly.

01:03:09.530 --> 01:03:11.470
And then, you'd want to make
sure that you go back and

01:03:11.470 --> 01:03:13.620
update your page when
WOFF 2.0 comes out.

01:03:13.620 --> 01:03:14.480
ILYA GRIGORIK: Exactly.

01:03:14.480 --> 01:03:16.040
So just keeping tabs
on all that stuff.

01:03:16.040 --> 01:03:18.550
So you can do it, but
it's your own call.

01:03:18.550 --> 01:03:23.040
And then the other point is,
as you mentioned, these are

01:03:23.040 --> 01:03:24.380
static assets.

01:03:24.380 --> 01:03:26.340
They don't change usually
all that often.

01:03:26.340 --> 01:03:29.130
I mean they change, but most of
the time, they're the same.

01:03:29.130 --> 01:03:34.020
So using a CDN is a very good
strategy for accelerating this

01:03:34.020 --> 01:03:34.850
type of content.

01:03:34.850 --> 01:03:38.310
And I guess Google Web Fonts
leverages the Google CDN which

01:03:38.310 --> 01:03:41.320
does a lot of this work under
the hood, which is quite nice.

01:03:44.400 --> 01:03:47.140
We talked about some of this
stuff here, but I'll mention a

01:03:47.140 --> 01:03:47.750
few other things.

01:03:47.750 --> 01:03:51.910
So in the original workflow that
we demoed, we picked one

01:03:51.910 --> 01:03:56.470
font, and we picked different
versions of the same font.

01:03:56.470 --> 01:03:59.220
But you could, in fact, speaking
of this dynamic

01:03:59.220 --> 01:04:02.230
capability of serving the CSS
file, if you're using multiple

01:04:02.230 --> 01:04:05.390
different fonts, you can
actually still have one CSS

01:04:05.390 --> 01:04:06.750
file that includes
all of those.

01:04:06.750 --> 01:04:07.810
DAVID KUETTEL: That
is correct.

01:04:07.810 --> 01:04:11.290
ILYA GRIGORIK: So to do that
in a web interface, you add

01:04:11.290 --> 01:04:13.490
fonts to a collection, and
then you get kind of a

01:04:13.490 --> 01:04:14.920
customized CSS file.

01:04:14.920 --> 01:04:17.550
Or you can just use the API and
just kind of use this pipe

01:04:17.550 --> 01:04:20.500
symbol here, and say, I'm
looking for Open Sans and

01:04:20.500 --> 01:04:22.560
Lobster, which is
another font.

01:04:22.560 --> 01:04:24.030
So that's one optimization.

01:04:24.030 --> 01:04:26.360
Instead of downloading multiple
CSS files, you can

01:04:26.360 --> 01:04:28.230
just download one,
which is nice.

01:04:28.230 --> 01:04:30.520
So that's a good tip.

01:04:30.520 --> 01:04:32.720
Another one I mentioned earlier,
I know I was guilty

01:04:32.720 --> 01:04:36.260
of this, which is, oh yeah, I
want to use the Ubuntu font.

01:04:36.260 --> 01:04:38.870
And yes, I need the bold, and
the extra bold, and the

01:04:38.870 --> 01:04:40.440
italic, and all of
these things.

01:04:40.440 --> 01:04:42.810
And I think the font was
like 100 kilobytes.

01:04:42.810 --> 01:04:45.440
And I didn't actually end up
using a lot of those things.

01:04:45.440 --> 01:04:48.660
And some of the browsers are
smart enough not to download

01:04:48.660 --> 01:04:51.620
the weights and the fonts that
are not being used in the

01:04:51.620 --> 01:04:54.090
page, but some are not.

01:04:54.090 --> 01:04:59.400
So if you are including files
which are not being used, then

01:04:59.400 --> 01:05:01.630
you probably downloading
resources which you frankly

01:05:01.630 --> 01:05:02.535
just don't need.

01:05:02.535 --> 01:05:04.000
DAVID KUETTEL: Right.

01:05:04.000 --> 01:05:06.250
And that was an excellent catch,
Ilya, and it just sort

01:05:06.250 --> 01:05:09.220
of reinforces that we're
far from done.

01:05:09.220 --> 01:05:10.570
There's constant improvement.

01:05:10.570 --> 01:05:13.920
And so, for example, WebKit
is addressing that now.

01:05:13.920 --> 01:05:17.340
ILYA GRIGORIK: Yeah, and then
last tip you mentioned, there

01:05:17.340 --> 01:05:19.770
different subsets to each fonts,
so we have [INAUDIBLE]

01:05:19.770 --> 01:05:20.120
here.

01:05:20.120 --> 01:05:22.750
And you can include different
languages.

01:05:22.750 --> 01:05:24.490
For example, in this
case, we're

01:05:24.490 --> 01:05:25.890
including Latin and Cyrillic.

01:05:25.890 --> 01:05:29.620
So this tells me that maybe this
is a page that is both in

01:05:29.620 --> 01:05:33.860
English and Russian, or mixed
content, which is nice.

01:05:33.860 --> 01:05:35.470
You can customize
that yourself.

01:05:35.470 --> 01:05:37.855
And then the last one, which I
think not a lot of people know

01:05:37.855 --> 01:05:39.850
about is something you mentioned
earlier, which is

01:05:39.850 --> 01:05:42.630
this character subsetting.

01:05:42.630 --> 01:05:45.675
So this is like a custom font
just for these characters,

01:05:45.675 --> 01:05:48.670
from just for Hello world, which
is great for titles and

01:05:48.670 --> 01:05:50.310
other things.

01:05:50.310 --> 01:05:56.150
So you can handcraft this CSS
yourself to be like the exact

01:05:56.150 --> 01:05:58.750
perfect number of bytes,
minimum number of

01:05:58.750 --> 01:06:00.080
bytes for your page.

01:06:00.080 --> 01:06:02.501
DAVID KUETTEL: Definitely.

01:06:02.501 --> 01:06:03.340
ILYA GRIGORIK: Awesome.

01:06:03.340 --> 01:06:05.760
All right, so I think we're
already way over time.

01:06:05.760 --> 01:06:08.930
But let's see if we can take
a few questions here.

01:06:12.374 --> 01:06:16.402
Let me refresh this page here.

01:06:16.402 --> 01:06:19.424
Actually, I probably didn't
need to refresh the page.

01:06:22.730 --> 01:06:24.220
So we have four questions.

01:06:24.220 --> 01:06:26.550
So one from Steve Setters.

01:06:26.550 --> 01:06:28.870
Are you working with browser
vendors to get better font

01:06:28.870 --> 01:06:31.550
caching consistent behavior with
respect to using default

01:06:31.550 --> 01:06:36.040
fonts than [INAUDIBLE]

01:06:36.040 --> 01:06:38.220
content, higher priority
caching for

01:06:38.220 --> 01:06:39.280
Web Fonts, et cetera?

01:06:39.280 --> 01:06:42.190
DAVID KUETTEL: So that's
a great question.

01:06:42.190 --> 01:06:44.420
And our biggest advocate
actually

01:06:44.420 --> 01:06:46.970
has been Steve Setters.

01:06:46.970 --> 01:06:48.350
ILYA GRIGORIK: Go Steve.

01:06:48.350 --> 01:06:49.200
DAVID KUETTEL: Go Steve.

01:06:49.200 --> 01:06:50.030
We're very fortunate.

01:06:50.030 --> 01:06:53.340
And so Steve's been reaching out
to all the browser vendors

01:06:53.340 --> 01:06:57.090
like IE, and Firefox, and Chrome
to encourage them to

01:06:57.090 --> 01:07:00.580
have larger caches and
cache resources for

01:07:00.580 --> 01:07:02.040
longer amount of time.

01:07:02.040 --> 01:07:04.640
But it's not just Steve,
it's all of us.

01:07:04.640 --> 01:07:09.340
We all want to move the web
forward and really accelerate

01:07:09.340 --> 01:07:10.510
the adoption of Web Font.

01:07:10.510 --> 01:07:13.110
ILYA GRIGORIK: So I think one
example that we discovered as

01:07:13.110 --> 01:07:15.150
we were preparing this is we
actually found a bug in

01:07:15.150 --> 01:07:19.930
WebKit, where it was downloading
font weights that

01:07:19.930 --> 01:07:21.550
we're not being used.

01:07:21.550 --> 01:07:24.180
So I think we actually have
a patch for that.

01:07:24.180 --> 01:07:27.400
So it's not out there yet, but
that's an example of work--

01:07:27.400 --> 01:07:28.150
DAVID KUETTEL: Exactly.

01:07:28.150 --> 01:07:29.670
ILYA GRIGORIK: --That
we've done.

01:07:29.670 --> 01:07:33.930
So let's take another
one here.

01:07:33.930 --> 01:07:35.800
So we already answered
Eric's question.

01:07:35.800 --> 01:07:38.310
So another question
from Steve.

01:07:38.310 --> 01:07:40.180
Are you working with
browser vendors--

01:07:40.180 --> 01:07:40.950
no, wait.

01:07:40.950 --> 01:07:42.360
That's the one we already had.

01:07:45.760 --> 01:07:46.480
One from Joey.

01:07:46.480 --> 01:07:49.200
To maximize browser
compatibility, we have to

01:07:49.200 --> 01:07:52.600
specify many different file
types for each font.

01:07:52.600 --> 01:07:54.890
So we saw EOT, WOFF,
et cetera.

01:07:54.890 --> 01:07:57.360
Are browsers smart enough to
only download the file that

01:07:57.360 --> 01:07:58.290
applies to them?

01:07:58.290 --> 01:08:00.750
If browser understands multiple
types, are there

01:08:00.750 --> 01:08:01.535
priority order?

01:08:01.535 --> 01:08:03.050
DAVID KUETTEL: So
there absolutely

01:08:03.050 --> 01:08:04.680
is a priority order.

01:08:04.680 --> 01:08:11.510
And you can list the fonts in
the formats that you prefer,

01:08:11.510 --> 01:08:12.690
and the browser will
go through it.

01:08:12.690 --> 01:08:15.120
We'll look at the format, and
we'll treat it as a hint.

01:08:15.120 --> 01:08:17.210
So if it supports WOFF,
it will download that

01:08:17.210 --> 01:08:18.630
file and use it.

01:08:18.630 --> 01:08:20.149
There are few caveats.

01:08:20.149 --> 01:08:23.600
So all of the modern browsers
do the right thing.

01:08:23.600 --> 01:08:28.790
But some of the older ones don't
parse the format tag.

01:08:28.790 --> 01:08:33.319
And so here, we would highly
recommend reading up on Paul

01:08:33.319 --> 01:08:37.359
Irish's book, Proof at Font
Face Syntax, to make sure

01:08:37.359 --> 01:08:38.699
you're aware of some
of the caveats.

01:08:41.900 --> 01:08:44.600
ILYA GRIGORIK: If I'm
handcrafting these files

01:08:44.600 --> 01:08:49.130
myself, I can just specify one
URL for the WOFF, one URL for

01:08:49.130 --> 01:08:50.710
the EOT, et cetera.

01:08:50.710 --> 01:08:54.260
For Google Web Fonts, when you
download that CSS, it'll

01:08:54.260 --> 01:08:57.149
likely include just one, because
you guys are already

01:08:57.149 --> 01:08:59.630
figuring out the right format
for this platform.

01:08:59.630 --> 01:09:00.939
DAVID KUETTEL: That
is correct.

01:09:00.939 --> 01:09:02.450
And there are a few
hedge cases.

01:09:02.450 --> 01:09:05.859
So for example, to support
Chrome Frame and Internet

01:09:05.859 --> 01:09:09.210
Explorer, we do use a
small variation of

01:09:09.210 --> 01:09:10.800
the bulletproof syntax.

01:09:10.800 --> 01:09:15.529
So we serve up both embedded
open type file and WOFF file.

01:09:15.529 --> 01:09:18.800
But in general, we try to
keep it as simple and

01:09:18.800 --> 01:09:20.400
straightforward as possible.

01:09:20.400 --> 01:09:22.130
ILYA GRIGORIK: So as usual,
there are a lot of kind of

01:09:22.130 --> 01:09:26.140
nitty-gritty details to make
every platform work well?

01:09:26.140 --> 01:09:31.580
DAVID KUETTEL: Yes, today,
Hopefully, 10 years from now,

01:09:31.580 --> 01:09:32.950
it won't be this complex.

01:09:32.950 --> 01:09:33.470
ILYA GRIGORIK: Right.

01:09:33.470 --> 01:09:35.310
Sure.

01:09:35.310 --> 01:09:37.120
OK, so we have another
one from Daniel.

01:09:37.120 --> 01:09:41.080
So many developers are changing
icons for Web Fonts

01:09:41.080 --> 01:09:43.800
or techniques that uses it, like
Font Awesome, which we

01:09:43.800 --> 01:09:45.490
talked about.

01:09:45.490 --> 01:09:46.670
How you believe it could impact

01:09:46.670 --> 01:09:49.090
accessibility screen readers?

01:09:49.090 --> 01:09:50.490
So I think this is an
interesting question.

01:09:54.170 --> 01:09:56.445
I'm not sure if this is the
right answer, but I don't

01:09:56.445 --> 01:09:58.130
think it makes any worse.

01:09:58.130 --> 01:10:01.920
So if I previously had a home
icon dot PNG, and I'm

01:10:01.920 --> 01:10:03.400
replacing that with--

01:10:03.400 --> 01:10:05.900
usually, the way that Web Fonts
work is you'll actually

01:10:05.900 --> 01:10:07.350
have like a span element.

01:10:07.350 --> 01:10:09.430
And then in there, it'll declare
a class and say, like

01:10:09.430 --> 01:10:11.560
this is my home icon or
something similar.

01:10:11.560 --> 01:10:13.850
So technically speaking, that
actually gives more

01:10:13.850 --> 01:10:15.510
information to the crawler.

01:10:15.510 --> 01:10:19.290
I'm not sure that modern
crawlers understand these kind

01:10:19.290 --> 01:10:21.100
of concept well enough today.

01:10:21.100 --> 01:10:23.920
But in general, I think the more
we could put in text, the

01:10:23.920 --> 01:10:25.160
better as opposed to images.

01:10:25.160 --> 01:10:27.795
Because in general, I don't
think crawlers or screen

01:10:27.795 --> 01:10:30.100
readers are very good at
interpreting images.

01:10:30.100 --> 01:10:32.416
DAVID KUETTEL: Absolutely.

01:10:32.416 --> 01:10:35.050
ILYA GRIGORIK: OK, so I think
there are a few more

01:10:35.050 --> 01:10:36.960
questions, but we are
running out of time.

01:10:36.960 --> 01:10:40.790
So what we'll do is we'll
follow up online.

01:10:40.790 --> 01:10:42.130
We'll respond there.

01:10:42.130 --> 01:10:45.520
And then, also, please feel free
to ping myself or David

01:10:45.520 --> 01:10:48.360
on Google+ or an email.

01:10:48.360 --> 01:10:51.590
And we'll be happy
to chat with you.

01:10:51.590 --> 01:10:53.911
I think that's it for today.

01:10:53.911 --> 01:10:54.920
Also, thank you guys.

01:10:54.920 --> 01:10:56.170
DAVID KUETTEL: Thank you.

