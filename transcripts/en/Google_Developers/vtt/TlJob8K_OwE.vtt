WEBVTT
Kind: captions
Language: en

00:00:08.700 --> 00:00:12.770
PAUL IRISH: Hi, and welcome to
Blink Questions Answered.

00:00:12.770 --> 00:00:14.980
Over the past day we've
collected hundreds of

00:00:14.980 --> 00:00:17.800
questions and votes from
you, getting your

00:00:17.800 --> 00:00:19.620
questions about Blink.

00:00:19.620 --> 00:00:21.100
And today we're going to be
answering all the top

00:00:21.100 --> 00:00:23.590
questions with this panel.

00:00:23.590 --> 00:00:25.650
So as a matter of
introduction, my

00:00:25.650 --> 00:00:26.530
name is Paul Irish.

00:00:26.530 --> 00:00:28.810
And I'm a developer advocate
on the Chrome team.

00:00:28.810 --> 00:00:32.729
And we have a whole host of
other really smart folks to

00:00:32.729 --> 00:00:33.330
answer these questions.

00:00:33.330 --> 00:00:35.310
So if you can introduce.

00:00:35.310 --> 00:00:36.460
DARIN FISHER: Hi, I'm
Darin Fisher.

00:00:36.460 --> 00:00:40.610
I'm engineering lead for the
Chrome web platform team.

00:00:40.610 --> 00:00:41.870
ALEX KOMOROSKE: I'm
Alex Komoroske.

00:00:41.870 --> 00:00:45.290
I'm a product manager on the
Chrome web platform team.

00:00:45.290 --> 00:00:45.970
ERIC SEIDEL: My name
is Eric Seidel.

00:00:45.970 --> 00:00:49.510
I'm a long time WebKit
contributor, and now a member

00:00:49.510 --> 00:00:51.630
of the Blink team.

00:00:51.630 --> 00:00:51.930
PAUL IRISH: Great.

00:00:51.930 --> 00:00:56.460
So we're just going to go
through from the top questions

00:00:56.460 --> 00:00:59.610
that were submitted and voted
up by everyone, and get some

00:00:59.610 --> 00:01:01.770
answers to some of the things
that everyone's wondering

00:01:01.770 --> 00:01:05.650
about with the new Blink
announcement.

00:01:05.650 --> 00:01:08.860
The first one that we have
is from Peter Kasting.

00:01:08.860 --> 00:01:10.120
And it's a three-parter.

00:01:10.120 --> 00:01:12.360
But I'll read it
out right now.

00:01:12.360 --> 00:01:15.130
What will be the relationship
between the WebKit and Blink

00:01:15.130 --> 00:01:16.600
code bases going forward?

00:01:16.600 --> 00:01:18.960
Will the Chromium port be
removed from WebKit?

00:01:18.960 --> 00:01:22.190
Is there any policy or tooling
to ensure that changes, either

00:01:22.190 --> 00:01:24.540
bug fixes and features,
in one code base

00:01:24.540 --> 00:01:27.550
migrate to the other?

00:01:27.550 --> 00:01:28.110
ERIC SEIDEL: I'll take that.

00:01:28.110 --> 00:01:30.590
There's no real formal
relationship

00:01:30.590 --> 00:01:31.490
between the two teams.

00:01:31.490 --> 00:01:35.350
I expect that they'll be
sharing ideas and some

00:01:35.350 --> 00:01:38.890
patches, maybe more so
in the beginning.

00:01:38.890 --> 00:01:41.160
In the beginning it'll be
easier to share patches.

00:01:41.160 --> 00:01:44.020
Over time I expect that the two
code bases will diverge,

00:01:44.020 --> 00:01:49.190
and will become not as easy
to share patches.

00:01:49.190 --> 00:01:52.400
As far as the removal of
Chromium port from WebKit,

00:01:52.400 --> 00:01:55.060
that's really up to the WebKit
project to figure out what

00:01:55.060 --> 00:01:56.310
makes sense for them.

00:02:02.550 --> 00:02:04.660
It'll be interesting to
see how it evolves.

00:02:04.660 --> 00:02:06.960
I think there's people on both
sides who care passionately

00:02:06.960 --> 00:02:09.270
about the web platform,
and the web platform

00:02:09.270 --> 00:02:12.980
implementations that are
in WebKit and in Blink.

00:02:12.980 --> 00:02:16.961
And people will be motivated
to share ideas.

00:02:16.961 --> 00:02:19.380
ALEX KOMOROSKE: I should point
out, too, that we already work

00:02:19.380 --> 00:02:21.500
with other browser
vendors as well.

00:02:21.500 --> 00:02:24.980
Standards, activities, and
informal discussions, and

00:02:24.980 --> 00:02:26.920
filing bugs, and commenting
on their bug databases.

00:02:26.920 --> 00:02:28.200
And I imagine this will
be no different.

00:02:30.740 --> 00:02:31.680
PAUL IRISH: Great.

00:02:31.680 --> 00:02:33.840
The next question is
about availability.

00:02:33.840 --> 00:02:36.650
A lot of people were
curious about this.

00:02:36.650 --> 00:02:40.250
So we got a question from Mihai
in Bucharest, and from a

00:02:40.250 --> 00:02:42.260
number of other people.

00:02:42.260 --> 00:02:44.920
When will Blink ship
on Canary?

00:02:44.920 --> 00:02:47.070
When will it be available
in stable?

00:02:47.070 --> 00:02:49.870
How far along in development
is it?

00:02:49.870 --> 00:02:51.960
ALEX KOMOROSKE: One thing that I
want to emphasize is that at

00:02:51.960 --> 00:02:54.180
the very beginning there's
really nothing

00:02:54.180 --> 00:02:55.230
different from WebKit.

00:02:55.230 --> 00:02:57.550
It's over time that they will
evolve in different

00:02:57.550 --> 00:02:58.840
directions.

00:02:58.840 --> 00:03:01.740
Technically, today's canary
will be using Bink.

00:03:01.740 --> 00:03:03.540
But in reality there's going
to be no difference for web

00:03:03.540 --> 00:03:05.060
developers, nothing that
you can even see.

00:03:05.060 --> 00:03:07.162
The user agent, for example,
will remain the same for the

00:03:07.162 --> 00:03:08.240
time being.

00:03:08.240 --> 00:03:10.540
PAUL IRISH: If you want,
you can test out

00:03:10.540 --> 00:03:12.730
today's canary build.

00:03:12.730 --> 00:03:14.200
Blink is in it.

00:03:14.200 --> 00:03:17.205
But really it's basically
the exact same

00:03:17.205 --> 00:03:18.850
as yesterday's canary.

00:03:18.850 --> 00:03:21.574
So you won't have any big
changes to deal with.

00:03:24.570 --> 00:03:25.770
We'll move forward.

00:03:25.770 --> 00:03:28.280
What is the plan for
transitioning the WebKit

00:03:28.280 --> 00:03:32.060
integrated in Android
to Blink look like?

00:03:32.060 --> 00:03:37.310
So what's the story for the
Chrome on Android and the

00:03:37.310 --> 00:03:41.580
stock Android browser?

00:03:41.580 --> 00:03:43.600
DARIN FISHER: I think the story
is very similar to the

00:03:43.600 --> 00:03:45.980
previous question.

00:03:45.980 --> 00:03:49.650
Chrome, going forward will be
using Blink instead of WebKit.

00:03:49.650 --> 00:03:52.010
That means Chrome,
on all platforms,

00:03:52.010 --> 00:03:55.190
will be using Blink.

00:03:55.190 --> 00:03:59.230
The second part about that, the
Android browser, that has

00:03:59.230 --> 00:04:01.940
to do with the product
cycle for Chrome,

00:04:01.940 --> 00:04:04.300
and Chrome on Android.

00:04:04.300 --> 00:04:06.970
As far as this team is focused
on, we're just trying to make

00:04:06.970 --> 00:04:10.710
sure that Blink runs really
great, and is a great web

00:04:10.710 --> 00:04:13.010
rendering engine for Chrome, on
all platforms where Chrome

00:04:13.010 --> 00:04:14.590
can be found.

00:04:14.590 --> 00:04:18.920
PAUL IRISH: I should point out
that Chrome and Android will

00:04:18.920 --> 00:04:23.280
essentially have Blink
as of version 28.

00:04:23.280 --> 00:04:25.910
This is the same for
Chrome on desktop.

00:04:25.910 --> 00:04:29.320
So 28 is the first
Chrome release.

00:04:29.320 --> 00:04:31.060
It's in its canary right now.

00:04:31.060 --> 00:04:34.040
And it'll be in stable in
about 10-ish weeks.

00:04:34.040 --> 00:04:36.690
Hopefully, we'll see.

00:04:36.690 --> 00:04:37.730
DARIN FISHER: I'm not
sure when they'll be

00:04:37.730 --> 00:04:41.400
pushing the next beta.

00:04:41.400 --> 00:04:43.950
PAUL IRISH: There's a Chrome on
Android beta via the Play

00:04:43.950 --> 00:04:46.370
store they can take a look at.

00:04:46.370 --> 00:04:48.640
Not exactly sure when
it'll be there.

00:04:48.640 --> 00:04:51.730
Again, don't expect
any big changes.

00:04:51.730 --> 00:04:53.670
It's the same code base,
for the most.

00:04:59.750 --> 00:05:03.330
In some of the documentation
that came out yesterday, there

00:05:03.330 --> 00:05:05.980
was a point around some of the
architectural changes that

00:05:05.980 --> 00:05:07.330
we're looking at.

00:05:07.330 --> 00:05:11.500
So one of them was we said, we'd
like to exploring larger

00:05:11.500 --> 00:05:14.440
ideas, like moving the entire
DOM into JavaScript.

00:05:14.440 --> 00:05:16.640
This has the potential to make
JavaScript DOM access

00:05:16.640 --> 00:05:18.010
dramatically faster.

00:05:18.010 --> 00:05:20.180
Is there anything that we
can elaborate on on

00:05:20.180 --> 00:05:21.340
this kind of idea?

00:05:21.340 --> 00:05:22.780
ERIC SEIDEL: I'm happy
to take that.

00:05:22.780 --> 00:05:25.420
So one of things to understand
is the Document Object Model,

00:05:25.420 --> 00:05:28.140
the DOM is implemented in the
part we call WebCore,

00:05:28.140 --> 00:05:29.560
which is all C++.

00:05:29.560 --> 00:05:32.670
And when you, in your JavaScript
page, access the

00:05:32.670 --> 00:05:36.750
DOM, your code has to leave the
JavaScript virtual machine

00:05:36.750 --> 00:05:37.890
and enter into WebCore.

00:05:37.890 --> 00:05:39.180
There's a cost of that.

00:05:39.180 --> 00:05:41.530
And although it's pretty
fast today, we'd like

00:05:41.530 --> 00:05:42.510
it to be way faster.

00:05:42.510 --> 00:05:45.080
And the way to make it way
faster is for your code to not

00:05:45.080 --> 00:05:47.700
ever have to leave the
JavaScript virtual machine,

00:05:47.700 --> 00:05:49.320
but instead be able to access
the DOM directly.

00:05:49.320 --> 00:05:52.960
And to do that we'd have to move
the DOM into JavaScript.

00:05:52.960 --> 00:05:56.380
And this is one of the many
crazy ideas that were

00:05:56.380 --> 00:05:58.450
exploring in the future
of Blink.

00:05:58.450 --> 00:06:00.240
DARIN FISHER: Crazy, because
it's not exactly

00:06:00.240 --> 00:06:02.400
an automatic win.

00:06:02.400 --> 00:06:05.220
There's pros and cons
to any such change.

00:06:05.220 --> 00:06:07.580
And we're going to explore that,
and see what kind of

00:06:07.580 --> 00:06:11.920
benefits we can derive and what
opportunities can be had

00:06:11.920 --> 00:06:14.060
from such a crazy idea that.

00:06:14.060 --> 00:06:15.320
ALEX KOMOROSKE: There
are a lot of ideas

00:06:15.320 --> 00:06:17.150
on the project page.

00:06:17.150 --> 00:06:19.720
We're just collecting a wish
list of things we want to look

00:06:19.720 --> 00:06:21.930
into and investigate
that now we can.

00:06:21.930 --> 00:06:24.800
Because we can change
architectural boundaries if

00:06:24.800 --> 00:06:27.860
necessary, and really
dream big.

00:06:27.860 --> 00:06:30.920
I think we're all really excited
try all these crazy

00:06:30.920 --> 00:06:33.480
ideas, and see which
ones work.

00:06:33.480 --> 00:06:35.400
PAUL IRISH: Another question
that we had--

00:06:35.400 --> 00:06:37.310
this is from Greg again--
something

00:06:37.310 --> 00:06:39.670
that was in the Docs.

00:06:39.670 --> 00:06:42.970
This was around removing
things.

00:06:42.970 --> 00:06:46.210
We had a note and there around
removing obscure parts of the

00:06:46.210 --> 00:06:49.450
DOM, and making backwards
incompatible changes to

00:06:49.450 --> 00:06:52.340
obscure parts that benefit
performance or remove

00:06:52.340 --> 00:06:53.710
complexity.

00:06:53.710 --> 00:06:57.460
What can we share around this?

00:06:57.460 --> 00:06:58.840
ERIC SEIDEL: I'm happy
to take that as well.

00:06:58.840 --> 00:07:02.130
This actually a larger trend in
the web platform right now.

00:07:02.130 --> 00:07:06.210
If you look at HTML5, HTML5 did
a lot of work to try to

00:07:06.210 --> 00:07:09.450
remove some of the old crufty
bits that were perhaps speced

00:07:09.450 --> 00:07:12.930
in HTML2 or 3, but haven't
been used in 20 years.

00:07:12.930 --> 00:07:17.840
A good example of this is the
isindex tag, which was an idea

00:07:17.840 --> 00:07:20.490
long ago, and has now been
replaced by a much simpler

00:07:20.490 --> 00:07:22.390
implementation in HTML5.

00:07:22.390 --> 00:07:24.560
And the same thing is true of
these things called entity

00:07:24.560 --> 00:07:27.340
reference nodes, which exists
technical in the DOM, but

00:07:27.340 --> 00:07:28.390
nobody's ever used.

00:07:28.390 --> 00:07:31.290
So we've been removing these
out of WebKit and out of

00:07:31.290 --> 00:07:35.261
Blink, as the specs have moved
forward to also remove them.

00:07:35.261 --> 00:07:37.610
DARIN FISHER: But we plan to
do so very carefully, to

00:07:37.610 --> 00:07:40.130
ensure that we are not breaking
or torturing web

00:07:40.130 --> 00:07:41.780
developers along the way.

00:07:41.780 --> 00:07:44.810
The idea is to identify the low
hanging fruit, and clean

00:07:44.810 --> 00:07:47.980
up the platform, if we can.

00:07:47.980 --> 00:07:51.730
And hopefully in a way that
moves a platform forward in a

00:07:51.730 --> 00:07:52.460
very positive way.

00:07:52.460 --> 00:07:55.730
Because over time, if you just
keep accumulating features,

00:07:55.730 --> 00:07:57.630
the platform suffers.

00:07:57.630 --> 00:07:59.340
ALEX KOMOROSKE: We've been
investigating looking at, for

00:07:59.340 --> 00:08:03.450
example, across the web with the
search index, and seeing

00:08:03.450 --> 00:08:05.510
where these different features
are being used.

00:08:05.510 --> 00:08:06.790
We published a few
of those results.

00:08:06.790 --> 00:08:07.800
We're looking into that more.

00:08:07.800 --> 00:08:10.530
Because that helps give us a
better lens into what features

00:08:10.530 --> 00:08:13.380
are actually being used, and how
much of a risk there is in

00:08:13.380 --> 00:08:14.110
removing them.

00:08:14.110 --> 00:08:16.930
Certain features, like isindex,
no one's using that.

00:08:16.930 --> 00:08:18.980
But other ones, it
helps figure out

00:08:18.980 --> 00:08:20.320
which ones you can--

00:08:20.320 --> 00:08:20.980
[INAUDIBLE]

00:08:20.980 --> 00:08:21.400
responsibly.

00:08:21.400 --> 00:08:23.760
DARIN FISHER: Sometimes we have
to do some work to help

00:08:23.760 --> 00:08:24.360
people migrate.

00:08:24.360 --> 00:08:26.540
We have some evangelism
work, and so on.

00:08:26.540 --> 00:08:29.490
Because there can be some people
stuck on an old way of

00:08:29.490 --> 00:08:30.080
doing something.

00:08:30.080 --> 00:08:34.049
And there's a new way that
would be better.

00:08:34.049 --> 00:08:36.750
PAUL IRISH: Some of that, taking
a look at the real

00:08:36.750 --> 00:08:41.390
world usage of CSS, whether
the prefix to prefix DOM

00:08:41.390 --> 00:08:45.420
things, we've looked into this
as a way to identify how we

00:08:45.420 --> 00:08:48.240
can responsibly deprecate
things like prefixed CSS

00:08:48.240 --> 00:08:50.010
properties as well.

00:08:50.010 --> 00:08:52.550
ALEX KOMOROSKE: We announced
yesterday that going forward

00:08:52.550 --> 00:08:54.680
we'll have a policy of no vendor
prefixes, which is

00:08:54.680 --> 00:08:57.290
similar to what Mozilla
is doing, and the

00:08:57.290 --> 00:08:59.020
policy they've adopted.

00:08:59.020 --> 00:09:00.870
There are a lot of legacy
prefixes for

00:09:00.870 --> 00:09:02.720
stuff that we've inherited.

00:09:02.720 --> 00:09:05.160
And over time, on a case
by case basis, we'll be

00:09:05.160 --> 00:09:08.670
investigating which of these
we can just deprecate the

00:09:08.670 --> 00:09:11.140
prefix version, because the
non-prefixed version works.

00:09:11.140 --> 00:09:12.420
Which ones are nonstandard?

00:09:12.420 --> 00:09:13.820
Should those just be
fully deprecated?

00:09:13.820 --> 00:09:15.330
Should they be standardized?

00:09:15.330 --> 00:09:17.320
And really on a case by case
basis trying to work

00:09:17.320 --> 00:09:18.230
through this list.

00:09:18.230 --> 00:09:20.570
Ultimately, sometime in the
future, getting to a point

00:09:20.570 --> 00:09:22.220
where hopefully there
are no prefixes.

00:09:22.220 --> 00:09:24.590
That'll take us some
time to get to.

00:09:24.590 --> 00:09:28.160
We have to do it responsibly
so we don't break stuff.

00:09:28.160 --> 00:09:31.040
PAUL IRISH: Next question is,
what will prevent the same

00:09:31.040 --> 00:09:33.060
collaborative development
difficulties that hampered

00:09:33.060 --> 00:09:36.590
WebKit emerging in Blink as it
gains more contributors, and

00:09:36.590 --> 00:09:38.880
is ported to more platforms?

00:09:38.880 --> 00:09:41.070
DARIN FISHER: The key comment
here is porting.

00:09:41.070 --> 00:09:48.090
And actually Blink will be built
on a virtual platform,

00:09:48.090 --> 00:09:50.710
if you will, that doesn't
require a lot of porting

00:09:50.710 --> 00:09:52.380
effort to bring it
to new platforms.

00:09:52.380 --> 00:09:54.400
You can see already that Chrome
runs on variety of

00:09:54.400 --> 00:09:58.240
devices, from desktop down
to embedded systems.

00:09:58.240 --> 00:10:03.030
And the point is that not a
lot of work is required to

00:10:03.030 --> 00:10:06.350
move that code base across
these different systems.

00:10:06.350 --> 00:10:09.830
This is all true because
Chromium's sandboxed,

00:10:09.830 --> 00:10:15.370
multi-process architecture
forced us to take away

00:10:15.370 --> 00:10:18.820
OS-specific integration
from the web platform

00:10:18.820 --> 00:10:20.130
implementation, from WebKit.

00:10:20.130 --> 00:10:23.160
So we, over the course of
time, developed this

00:10:23.160 --> 00:10:24.960
abstraction layer, this virtual
platform on which

00:10:24.960 --> 00:10:26.170
WebKit's built.

00:10:26.170 --> 00:10:28.790
And going forward with Blink,
that's the only platform that

00:10:28.790 --> 00:10:32.220
will support Blink, which means
that it will be very

00:10:32.220 --> 00:10:33.980
portable code base.

00:10:33.980 --> 00:10:36.820
We've already seen people
having plenty of success

00:10:36.820 --> 00:10:40.630
taking Chromium's content
layer, which is the

00:10:40.630 --> 00:10:43.230
multi-process embedding
layers, that it

00:10:43.230 --> 00:10:45.170
will enclose Blink.

00:10:45.170 --> 00:10:47.530
And they've taken that to many
other platforms, and used it

00:10:47.530 --> 00:10:49.710
in many different sorts of
applications, all without

00:10:49.710 --> 00:10:56.770
having to substantially fork
or add code to Chromium.

00:10:56.770 --> 00:10:59.800
We're really excited about the
prospects of allowing a lot of

00:10:59.800 --> 00:11:02.680
people to participate on Blink,
and make use of it in

00:11:02.680 --> 00:11:05.780
new ways, without having to
torture the code base with a

00:11:05.780 --> 00:11:09.910
lot of ifdefs or variations.

00:11:09.910 --> 00:11:12.145
ALEX KOMOROSKE: Paul, you had a
post a few weeks ago that I

00:11:12.145 --> 00:11:13.090
thought was amazing.

00:11:13.090 --> 00:11:14.990
I learned a lot from that
post, actually.

00:11:14.990 --> 00:11:18.170
And you talked about how there
are different layers in WebKit

00:11:18.170 --> 00:11:18.590
supporting them all.

00:11:18.590 --> 00:11:21.580
You have to bring a lot of
things to the table, every

00:11:21.580 --> 00:11:22.940
platform you want to run on.

00:11:22.940 --> 00:11:26.450
And with Blink, in with the
content layer, you get all

00:11:26.450 --> 00:11:28.070
this stuff just more easily.

00:11:28.070 --> 00:11:29.710
We don't have to implement
a special version.

00:11:29.710 --> 00:11:31.370
DARIN FISHER: You get a
cross-platform implementation

00:11:31.370 --> 00:11:32.520
of these things.

00:11:32.520 --> 00:11:34.730
It isn't like it's
an atomic unit.

00:11:34.730 --> 00:11:36.060
There is some modularity
to it.

00:11:36.060 --> 00:11:39.020
It allows people to subtract
modules that they don't want

00:11:39.020 --> 00:11:40.775
to bring with them
to the platform.

00:11:40.775 --> 00:11:47.430
But we strive in the Chromium
to modularize, as opposed to

00:11:47.430 --> 00:11:52.290
using preprocessor directives
to hack up the code base.

00:11:56.580 --> 00:11:59.370
PAUL IRISH: Say, for instance,
V8 and Skia-- do those come

00:11:59.370 --> 00:12:01.410
along with the content
layer of Chromium?

00:12:01.410 --> 00:12:01.860
DARIN FISHER: That's right.

00:12:01.860 --> 00:12:05.420
V8 and Skia are implied
by this system.

00:12:05.420 --> 00:12:08.827
So Blink will depend on Skia
for its graphics and V8 for

00:12:08.827 --> 00:12:10.760
its JavaScript engine.

00:12:10.760 --> 00:12:12.780
ALEX KOMOROSKE: And actually
that coupling allows us to

00:12:12.780 --> 00:12:16.460
potentially change those
architectural layers, they way

00:12:16.460 --> 00:12:18.450
those interact, and
optimize those.

00:12:18.450 --> 00:12:19.910
DARIN FISHER: This is a really
important point.

00:12:19.910 --> 00:12:23.210
I think both the Skia team and
V8 are both pretty excited

00:12:23.210 --> 00:12:26.080
about the opportunity to improve
the integration of

00:12:26.080 --> 00:12:28.640
those libraries with the
rendering engine.

00:12:28.640 --> 00:12:32.950
That's going to mean changes
in those interfaces.

00:12:32.950 --> 00:12:34.210
PAUL IRISH: Great.

00:12:34.210 --> 00:12:36.420
Moving on to the next question,
will the changes

00:12:36.420 --> 00:12:40.100
from Blink be contributed back
to the WebKit project.

00:12:40.100 --> 00:12:41.680
ERIC SEIDEL: They're
separate projects.

00:12:41.680 --> 00:12:46.090
Definitely when we forked WebKit
from KHTML, we saw a

00:12:46.090 --> 00:12:49.050
lot of changes that got moved
back and forth between the

00:12:49.050 --> 00:12:49.550
code bases.

00:12:49.550 --> 00:12:51.460
Because they began
so similarly.

00:12:51.460 --> 00:12:54.840
And I would predict that similar
effects will happen

00:12:54.840 --> 00:12:56.210
with Blink.

00:12:56.210 --> 00:12:57.620
But they are separate
projects.

00:12:57.620 --> 00:12:59.090
They are separate code bases.

00:12:59.090 --> 00:13:02.500
And we don't have any
plans, currently,

00:13:02.500 --> 00:13:04.730
to be moving patches.

00:13:04.730 --> 00:13:06.110
ALEX KOMOROSKE: But they're
both open source.

00:13:06.110 --> 00:13:06.600
ERIC SEIDEL: They're
both open source.

00:13:06.600 --> 00:13:08.360
And anybody can do that.

00:13:08.360 --> 00:13:10.320
ALEX KOMOROSKE: Over time, as
they evolve in different

00:13:10.320 --> 00:13:12.290
directions, that will get
harder and harder to do.

00:13:12.290 --> 00:13:14.380
But in the beginning especially,
hopefully it won't

00:13:14.380 --> 00:13:17.820
be too hard for sharing
back and forth.

00:13:17.820 --> 00:13:20.210
DARIN FISHER: I think those
watching the change logs and

00:13:20.210 --> 00:13:24.800
will see probably see some
Googlers contributing some

00:13:24.800 --> 00:13:27.880
changes to WebKit, certainly
in the near term.

00:13:27.880 --> 00:13:29.610
I think over time that will
probably diminish.

00:13:33.180 --> 00:13:35.920
PAUL IRISH: The next question,
Google said problems living

00:13:35.920 --> 00:13:38.560
with the WebKit2 multi-process
model was a prime reason to

00:13:38.560 --> 00:13:39.420
create Blink.

00:13:39.420 --> 00:13:42.080
But Apple engineers say they
asked to integrate Chromium's

00:13:42.080 --> 00:13:44.640
multi-process into WebKit prior
to creating WebKit2 and

00:13:44.640 --> 00:13:46.210
were refused.

00:13:46.210 --> 00:13:47.460
What gives?

00:13:50.020 --> 00:13:53.290
DARIN FISHER: It's true that
Apple, shortly after launching

00:13:53.290 --> 00:13:57.290
Chrome, Apple expressed interest
in our multi-process

00:13:57.290 --> 00:13:59.140
layer that we had developed.

00:13:59.140 --> 00:14:01.390
I think it's important to
understand that that code

00:14:01.390 --> 00:14:04.760
base, the multi-process
layer was fairly

00:14:04.760 --> 00:14:05.740
mature at that point.

00:14:05.740 --> 00:14:07.030
We had launched Chrome.

00:14:07.030 --> 00:14:12.840
We had developed a system that
was very coupled into Chrome's

00:14:12.840 --> 00:14:16.300
system, it's way
of doing stuff.

00:14:16.300 --> 00:14:19.640
It leveraged libraries that
WebKit didn't use, and so on.

00:14:19.640 --> 00:14:24.920
And so for us we viewed that
opportunity to work with Apple

00:14:24.920 --> 00:14:28.220
on the multi-process code as--
actually that sounded quite

00:14:28.220 --> 00:14:29.380
exciting to us.

00:14:29.380 --> 00:14:34.890
However, we saw that as a
mountain of work, a large,

00:14:34.890 --> 00:14:37.010
technically challenging
engineering project for us.

00:14:40.670 --> 00:14:44.510
Perhaps it's a matter of the
timelines not being favorable.

00:14:44.510 --> 00:14:47.570
But we just didn't see a path
forward that allowed us to

00:14:47.570 --> 00:14:48.896
contribute that code
to WebKit.

00:14:51.550 --> 00:14:54.540
ALEX KOMOROSKE: But overall I
think what the teams ended up

00:14:54.540 --> 00:14:57.650
doing was collaborating really
effectively within WebCore.

00:14:57.650 --> 00:15:00.430
DARIN FISHER: We focused on
where we can maximize the

00:15:00.430 --> 00:15:02.590
benefits of working together
with Apple.

00:15:02.590 --> 00:15:04.300
And that was sharing WebCore.

00:15:04.300 --> 00:15:06.950
The parts that is a very
sensitive part of the code

00:15:06.950 --> 00:15:10.380
base, where HTML is parsed,
where the DOM is constructed,

00:15:10.380 --> 00:15:14.725
where CSS is used to render that
DOM into the web pages as

00:15:14.725 --> 00:15:15.340
we know it.

00:15:15.340 --> 00:15:18.930
That part of the web, there was
so much value in sharing

00:15:18.930 --> 00:15:25.050
that code that we did our best
to streamline or our way of

00:15:25.050 --> 00:15:28.190
using WebKit, so that we could
get as many developers focused

00:15:28.190 --> 00:15:30.600
on WebCore as possible, and
working with Apple.

00:15:30.600 --> 00:15:34.220
And I think it's been
very successful.

00:15:34.220 --> 00:15:37.720
Going forward, I think, as we
hinted to, there's some

00:15:37.720 --> 00:15:44.020
significant changes that we want
to make that we feel will

00:15:44.020 --> 00:15:52.120
affect the shape of WebCore in
ways that the WebCore project,

00:15:52.120 --> 00:15:53.640
WebKit, might not be
ready to receive.

00:15:53.640 --> 00:15:58.760
So we don't want to keep
on constraints.

00:15:58.760 --> 00:16:01.900
That's what these us to
where we are today.

00:16:01.900 --> 00:16:03.660
Do you guys have anything
to add?

00:16:03.660 --> 00:16:06.060
ERIC SEIDEL: The reality is
they're just very different

00:16:06.060 --> 00:16:09.300
architectures to serve
very different needs.

00:16:09.300 --> 00:16:13.890
And the question of whether
WebKit could have adopted our

00:16:13.890 --> 00:16:18.600
model, or whether we would
adopt their model are

00:16:18.600 --> 00:16:20.800
questions comparing different
timelines.

00:16:20.800 --> 00:16:21.760
One was five years ago.

00:16:21.760 --> 00:16:24.080
One was a year or two ago.

00:16:24.080 --> 00:16:25.470
So they're almost
incomparable.

00:16:25.470 --> 00:16:27.590
But the reality is they're very
different architectures,

00:16:27.590 --> 00:16:31.130
very different answers
to similar questions.

00:16:31.130 --> 00:16:33.000
And we chose different paths.

00:16:33.000 --> 00:16:35.520
And we successfully collaborated
in the WebKit

00:16:35.520 --> 00:16:37.130
project for the last
five years.

00:16:37.130 --> 00:16:38.250
And it's been great.

00:16:38.250 --> 00:16:39.750
And I think we'll continue
to collaborate

00:16:39.750 --> 00:16:41.730
with the WebKit project.

00:16:41.730 --> 00:16:42.980
But we've chosen different
paths.

00:16:46.970 --> 00:16:49.490
PAUL IRISH: Is there anything
that we can say around

00:16:49.490 --> 00:16:52.800
Android's web view
implementation and its

00:16:52.800 --> 00:16:55.050
adopting Blink?

00:16:55.050 --> 00:16:57.380
DARIN FISHER: Those following
along in the Chromium project

00:16:57.380 --> 00:17:01.230
can see that there's been
development of Android web

00:17:01.230 --> 00:17:04.160
view API on top of Chrome.

00:17:04.160 --> 00:17:06.079
In the fullness of time, when
that comes to Android, then

00:17:06.079 --> 00:17:08.740
Blink will come to Android.

00:17:08.740 --> 00:17:09.700
I'm excited about that.

00:17:09.700 --> 00:17:14.109
I think it's great from our
point of view of our team to

00:17:14.109 --> 00:17:18.630
help enable the use of web view
to be based on Chrome.

00:17:18.630 --> 00:17:20.560
So that we can help
make it better.

00:17:20.560 --> 00:17:22.260
And have it be based on
Blink means we can

00:17:22.260 --> 00:17:23.500
help make it be better.

00:17:23.500 --> 00:17:25.980
I'm excited about that.

00:17:25.980 --> 00:17:28.240
PAUL IRISH: Absolutely.

00:17:28.240 --> 00:17:32.200
Will Blink be able to support
multiple scripting languages?

00:17:36.300 --> 00:17:39.220
DARIN FISHER: Sorry, I think
our plan going forward--

00:17:39.220 --> 00:17:41.145
I think this is a reference
to Dart, perhaps?

00:17:41.145 --> 00:17:42.395
The Dart VM.

00:17:45.540 --> 00:17:49.190
It's important to understand
that even today, you can go

00:17:49.190 --> 00:17:51.720
and get Dartium, which is
a build of Chromium,

00:17:51.720 --> 00:17:53.200
uses the Dart VM.

00:17:53.200 --> 00:17:56.260
And the engineers working on
that project have developed a

00:17:56.260 --> 00:18:00.680
patch that allowed them to add
the Dart VM to WebKit in a way

00:18:00.680 --> 00:18:03.650
that wasn't terribly disruptive
to WebKit.

00:18:03.650 --> 00:18:07.230
The reason why Dart VM is not
in Chromium today doesn't

00:18:07.230 --> 00:18:11.400
really have to do with whether
or not WebKit supports or

00:18:11.400 --> 00:18:12.970
Blink supports multiple VMs.

00:18:12.970 --> 00:18:15.410
It has a lot more to do with
the timeline for the Dart

00:18:15.410 --> 00:18:18.900
itself, and getting to the point
where we feel like we

00:18:18.900 --> 00:18:20.830
can make a long term-- or should
make a long term--

00:18:20.830 --> 00:18:23.040
commitment to the Dart VM.

00:18:23.040 --> 00:18:25.060
ALEX KOMOROSKE: We have very
strong principles, with Blink

00:18:25.060 --> 00:18:27.950
especially, about compatibility
risk, and making

00:18:27.950 --> 00:18:31.250
sure that we responsibly
ship new features.

00:18:31.250 --> 00:18:33.400
These are things that we are
going to hold all features up

00:18:33.400 --> 00:18:35.980
to as we decide whether
or not to ship them.

00:18:35.980 --> 00:18:37.890
DARIN FISHER: I think somebody
made a really good point.

00:18:37.890 --> 00:18:38.780
I forget who it was.

00:18:38.780 --> 00:18:40.780
Maybe one of the other engineers
on our team.

00:18:40.780 --> 00:18:42.570
He said, whatever we do,
whatever we put in Blink, it's

00:18:42.570 --> 00:18:44.010
got to fit on here.

00:18:44.010 --> 00:18:46.590
And so we can't just put
everything in there just

00:18:46.590 --> 00:18:48.580
because it seems like
a good idea.

00:18:48.580 --> 00:18:49.540
We have to validate that.

00:18:49.540 --> 00:18:52.290
And be confident that we can
stick with that decision, make

00:18:52.290 --> 00:18:53.820
a long term commitment.

00:18:53.820 --> 00:18:55.970
And build this platform
responsibly.

00:18:55.970 --> 00:18:57.220
We don't want to have--

00:18:59.810 --> 00:19:01.630
this relates to our
whole strategy

00:19:01.630 --> 00:19:02.720
around deprecating APIs.

00:19:02.720 --> 00:19:04.360
We don't want to be in a
situation where we have to

00:19:04.360 --> 00:19:05.660
deprecate API.

00:19:05.660 --> 00:19:08.390
So we don't want to add multiple
different ways of

00:19:08.390 --> 00:19:09.730
doing the same thing.

00:19:09.730 --> 00:19:12.650
I think the web platform is
famous for having multiple

00:19:12.650 --> 00:19:14.500
solutions to the same problem.

00:19:14.500 --> 00:19:17.940
And we see that as a problem.

00:19:17.940 --> 00:19:19.380
We have to be responsible
to not create

00:19:19.380 --> 00:19:20.630
more of those problems.

00:19:24.470 --> 00:19:25.960
PAUL IRISH: This is a question
from spiffytech.

00:19:25.960 --> 00:19:28.830
How does the Chromium team
expect this will affect the

00:19:28.830 --> 00:19:32.870
myriad of other browsers that
have adopted WebKit.

00:19:32.870 --> 00:19:35.650
ALEX KOMOROSKE: I should say,
too, one thing to start off.

00:19:35.650 --> 00:19:37.950
We fundamentally believe that
having multiple rendering

00:19:37.950 --> 00:19:40.240
engines will help spur
innovation, and is ultimately

00:19:40.240 --> 00:19:42.010
good for the long-term
health of the web.

00:19:42.010 --> 00:19:44.500
And so in that respect, I
think it's actually very

00:19:44.500 --> 00:19:47.330
healthy for the whole
ecosystem.

00:19:47.330 --> 00:19:50.080
So just to get started
with that.

00:19:50.080 --> 00:19:51.700
DARIN FISHER: As a team, we're
really focused on web

00:19:51.700 --> 00:19:59.920
standards, and sharing tasks,
and helping this ecosystem of

00:19:59.920 --> 00:20:03.740
browsers all agree on what the
web platform should be.

00:20:03.740 --> 00:20:04.520
But having multiple

00:20:04.520 --> 00:20:07.400
implementations is really valuable.

00:20:07.400 --> 00:20:12.770
Without that, developers are
stuck maybe with the quirks of

00:20:12.770 --> 00:20:14.140
a particular engine.

00:20:14.140 --> 00:20:17.330
And that's not healthy
for the platform.

00:20:17.330 --> 00:20:21.413
It's not great for developers,
as far as we can tell.

00:20:21.413 --> 00:20:23.570
ERIC SEIDEL: I hope, if anything
it just gives other

00:20:23.570 --> 00:20:27.170
browsers choice.

00:20:27.170 --> 00:20:30.040
Embedding WebKit is not
comparable, really, to

00:20:30.040 --> 00:20:30.630
embedding Blink.

00:20:30.630 --> 00:20:34.220
Because Blink requires the
Chromium content layer.

00:20:34.220 --> 00:20:36.290
So you would embed the Chromium
content layer if you

00:20:36.290 --> 00:20:39.040
wanted to embed Blink.

00:20:39.040 --> 00:20:40.650
But it just gives you choice.

00:20:44.285 --> 00:20:46.740
PAUL IRISH: I think
we covered this.

00:20:46.740 --> 00:20:50.740
Does this mean that Google stops
contributions to WebKit?

00:20:50.740 --> 00:20:54.050
ERIC SEIDEL: Google contributed
WebKit before

00:20:54.050 --> 00:20:54.770
Chrome was announced.

00:20:54.770 --> 00:20:57.620
And I expect that Google will
continue to contribute after.

00:20:57.620 --> 00:21:01.880
DARIN FISHER: I think is
important to say that, as

00:21:01.880 --> 00:21:03.680
Google, we're not telling
people they shouldn't

00:21:03.680 --> 00:21:04.500
contribute to WebKit.

00:21:04.500 --> 00:21:10.940
We're just telling them that,
feel free to focus on Blink.

00:21:10.940 --> 00:21:13.650
ERIC SEIDEL: Chromium is
going to ship Blink.

00:21:13.650 --> 00:21:18.610
And so the Chromium team
is focused on Blink.

00:21:18.610 --> 00:21:20.780
But that doesn't mean that other
parts of Google, or even

00:21:20.780 --> 00:21:21.950
parts of the Blink team--

00:21:21.950 --> 00:21:24.600
some of us are long time
WebKit contributors.

00:21:24.600 --> 00:21:26.560
I plan to post patches
to WebKit.

00:21:26.560 --> 00:21:28.110
I expect other of my
colleagues do too.

00:21:31.260 --> 00:21:33.060
PAUL IRISH: What open source
license will Blink have?

00:21:33.060 --> 00:21:35.790
Will it continue to support
the H.264 codec?

00:21:35.790 --> 00:21:37.650
DARIN FISHER: There's no
relicensing happening as part

00:21:37.650 --> 00:21:39.065
of this fork.

00:21:39.065 --> 00:21:40.770
PAUL IRISH: What's the--

00:21:40.770 --> 00:21:42.555
DARIN FISHER: It's a collage
of licenses.

00:21:42.555 --> 00:21:42.980
ALEX KOMOROSKE: A collage--
that's a good

00:21:42.980 --> 00:21:44.340
way of putting it.

00:21:44.340 --> 00:21:46.040
DARIN FISHER: The history of
WebKit is that it's absorbed

00:21:46.040 --> 00:21:47.560
code from a variety
of projects.

00:21:47.560 --> 00:21:49.070
I think a lot of it is BSD.

00:21:49.070 --> 00:21:51.810
ERIC SEIDEL: BSD and LGPL.

00:21:51.810 --> 00:21:54.230
DARIN FISHER: Will it continue
to support the H.264 codec?

00:21:54.230 --> 00:21:56.910
That's really more of
a Chrome question.

00:21:56.910 --> 00:22:00.960
ERIC SEIDEL: Blink doesn't know
what codecs even exist.

00:22:00.960 --> 00:22:03.840
It has a box in which
the video goes.

00:22:03.840 --> 00:22:06.990
And something outside of Blink
makes the video go there.

00:22:06.990 --> 00:22:08.810
So Blink doesn't care or know.

00:22:11.620 --> 00:22:13.490
PAUL IRISH: We saw a lot of
questions about this.

00:22:13.490 --> 00:22:17.270
People are curious about
the user-agent string.

00:22:17.270 --> 00:22:20.990
Will we see a Blink keyword in
the user-agent string, like

00:22:20.990 --> 00:22:21.870
KHTML, like Gecko?

00:22:21.870 --> 00:22:24.010
DARIN FISHER: We have
no plans to change

00:22:24.010 --> 00:22:25.350
the user-agent string.

00:22:25.350 --> 00:22:29.830
And going forward, in fact,
there's a version number after

00:22:29.830 --> 00:22:32.430
Apple WebKit and Safari.

00:22:32.430 --> 00:22:35.800
At this point we have no plans
to change that number.

00:22:35.800 --> 00:22:37.830
What will change, going forward,
is just to the number

00:22:37.830 --> 00:22:39.620
after Chrome.

00:22:39.620 --> 00:22:44.070
We, of course, lament the
use-agent string profusely.

00:22:44.070 --> 00:22:47.590
But we also see that any changes
there have to be

00:22:47.590 --> 00:22:49.130
handled very, very carefully.

00:22:49.130 --> 00:22:52.740
Because, like it or not,
people do all kinds of

00:22:52.740 --> 00:22:55.390
interesting string compares
against it.

00:22:55.390 --> 00:22:56.820
ALEX KOMOROSKE: As you can tell
from looking at anyone's

00:22:56.820 --> 00:22:59.570
user-agent string,
they're crazy.

00:22:59.570 --> 00:23:02.070
I should say, too, this is the
kind of thing that ultimately,

00:23:02.070 --> 00:23:03.050
if we revisit this--

00:23:03.050 --> 00:23:05.310
I'm sure at some point we will--
will be doing it on

00:23:05.310 --> 00:23:07.810
blink-dev, the open
mailing list.

00:23:07.810 --> 00:23:09.588
And this will be definitely
discussion that we can take

00:23:09.588 --> 00:23:10.670
care of for you if
we come to it.

00:23:10.670 --> 00:23:13.010
DARIN FISHER: I think it was a
couple years ago that there

00:23:13.010 --> 00:23:17.860
was a successful effort to trim
out a few bits of the

00:23:17.860 --> 00:23:19.120
user-agent strings.

00:23:19.120 --> 00:23:21.970
Certainly be looking
for opportunities.

00:23:21.970 --> 00:23:25.450
I would love to see this
user-agent string be

00:23:25.450 --> 00:23:26.450
simplified radically.

00:23:26.450 --> 00:23:32.130
But it's hard to say when
or if that will happen.

00:23:32.130 --> 00:23:34.240
ERIC SEIDEL: Just don't
want to break the web.

00:23:34.240 --> 00:23:35.490
PAUL IRISH: Don't
break the web.

00:23:37.770 --> 00:23:42.030
When we'll be able to test
the first version Blink?

00:23:42.030 --> 00:23:43.280
Again this is available--

00:23:43.280 --> 00:23:43.770
DARIN FISHER: Today.

00:23:43.770 --> 00:23:46.080
PAUL IRISH: Blink is available
in Chrome Canary as of today.

00:23:46.080 --> 00:23:47.680
DARIN FISHER: And you can
build it yourself.

00:23:47.680 --> 00:23:50.350
This question was asking about
Blink in Chromium as well.

00:23:50.350 --> 00:23:52.332
You can just build
it yourself.

00:23:52.332 --> 00:23:53.740
ERIC SEIDEL: We had some
tireless infrastructure

00:23:53.740 --> 00:23:56.610
engineers who stayed up all
night making that true.

00:23:56.610 --> 00:23:57.810
ALEX KOMOROSKE: I was watching
blink-dev this morning.

00:23:57.810 --> 00:24:00.100
I think people succeed in
building it, correct?

00:24:00.100 --> 00:24:01.240
ERIC SEIDEL: Yes.

00:24:01.240 --> 00:24:02.490
ALEX KOMOROSKE: So at this
point we're focusing--

00:24:02.490 --> 00:24:04.130
ERIC SEIDEL: We have taken
patches already.

00:24:04.130 --> 00:24:06.500
ALEX KOMOROSKE: Great.

00:24:06.500 --> 00:24:07.740
ERIC SEIDEL: Blink is up
and running today.

00:24:07.740 --> 00:24:08.620
You can build it today.

00:24:08.620 --> 00:24:12.900
And I believe the Chromium
canary tomorrow is likely to

00:24:12.900 --> 00:24:15.510
have Blink in it.

00:24:15.510 --> 00:24:22.550
PAUL IRISH: Another thing I
wanted to ask about this, a

00:24:22.550 --> 00:24:24.680
lot of people are used to
watching change that's coming

00:24:24.680 --> 00:24:26.600
on the WebKit side.

00:24:26.600 --> 00:24:29.420
To do the same in Blink,
we have a similar

00:24:29.420 --> 00:24:30.250
way of doing that.

00:24:30.250 --> 00:24:30.720
ERIC SEIDEL: We do have URLs.

00:24:30.720 --> 00:24:32.670
I don't know them off
the top of my head.

00:24:32.670 --> 00:24:33.040
ALEX KOMOROSKE: We do.

00:24:33.040 --> 00:24:35.950
And I think it's on
the project page.

00:24:35.950 --> 00:24:37.860
Our goal is for everyone to be
able to watch this, and watch

00:24:37.860 --> 00:24:40.350
all the discussions and
bugs, and everything.

00:24:40.350 --> 00:24:42.700
So if there is something where
it's hard to follow along, we

00:24:42.700 --> 00:24:44.050
want to make that easier
for people.

00:24:44.050 --> 00:24:45.295
ERIC SEIDEL: The easy way to
answer that is to join

00:24:45.295 --> 00:24:48.020
blink-dev@chromium.org,
or to join the

00:24:48.020 --> 00:24:51.200
#Blink channel on Freenode.

00:24:51.200 --> 00:24:55.100
We've also talked about having
an IRC-based commit bot, just

00:24:55.100 --> 00:24:57.640
like the WebKit project does,
where it tells you what the

00:24:57.640 --> 00:24:59.160
commits as they come in.

00:24:59.160 --> 00:25:01.260
But that's the way to answer
that question, is to join one

00:25:01.260 --> 00:25:03.500
of our mailing lists or IRC.

00:25:03.500 --> 00:25:04.920
PAUL IRISH: And all that
information is available on

00:25:04.920 --> 00:25:07.980
chromium.org/blink, where you
can see our current mailing

00:25:07.980 --> 00:25:11.590
lists, a link to where all the
change sets are coming in,

00:25:11.590 --> 00:25:13.570
where you can browse them,
and everything else.

00:25:13.570 --> 00:25:17.170
ALEX KOMOROSKE: One thing too,
watching the change sets takes

00:25:17.170 --> 00:25:18.990
a lot of effort for a lot
of web developers.

00:25:18.990 --> 00:25:22.390
And one thing that we're doing
is, especially recently, we're

00:25:22.390 --> 00:25:24.700
getting better at having
summary posts.

00:25:24.700 --> 00:25:28.610
And so we do that for every beta
release now for Chrome.

00:25:28.610 --> 00:25:31.290
Those summarize what things
we've enabled, which things

00:25:31.290 --> 00:25:35.450
are now behind a flag, which
prefixes we've deprecated.

00:25:35.450 --> 00:25:37.600
That's a great way for web
developers to follow along,

00:25:37.600 --> 00:25:40.190
where you don't have to be
reading every single commit

00:25:40.190 --> 00:25:41.000
that's going through.

00:25:41.000 --> 00:25:42.620
And chromestatus.com
is also great.

00:25:42.620 --> 00:25:43.670
We're going to be--

00:25:43.670 --> 00:25:45.730
Max and Eric were just
talking on blink-dev.

00:25:45.730 --> 00:25:47.560
They have plans to make that
into more of a full future

00:25:47.560 --> 00:25:49.500
dashboard which is
really cool.

00:25:49.500 --> 00:25:52.030
PAUL IRISH: Chromestatus.com
lists out all the various

00:25:52.030 --> 00:25:56.740
features of the platform that
are in discussion these days,

00:25:56.740 --> 00:26:00.040
lists out what their
implementation status is, and

00:26:00.040 --> 00:26:02.110
also what their standardization
status is

00:26:02.110 --> 00:26:03.610
across the browser ecosystem.

00:26:03.610 --> 00:26:04.270
ALEX KOMOROSKE: I
love watching.

00:26:04.270 --> 00:26:05.150
If you haven't looked at it,
you should look at it.

00:26:05.150 --> 00:26:08.740
It's really interesting
to get a snapshot.

00:26:08.740 --> 00:26:10.750
DARIN FISHER: We all had this
idea in our head of what it

00:26:10.750 --> 00:26:11.310
might look like.

00:26:11.310 --> 00:26:12.400
But to actually see it.

00:26:12.400 --> 00:26:14.200
ALEX KOMOROSKE: Oh wow,
it's very interesting.

00:26:14.200 --> 00:26:17.500
PAUL IRISH: It's a great
snapshot of the web ecosystem

00:26:17.500 --> 00:26:18.510
in one view.

00:26:18.510 --> 00:26:20.740
And we've already been getting
some great contributions from

00:26:20.740 --> 00:26:23.320
Adobe over the past two days.

00:26:23.320 --> 00:26:23.950
ALEX KOMOROSKE: And
others, as well.

00:26:23.950 --> 00:26:26.900
I think we got a few guys
from Mozilla also

00:26:26.900 --> 00:26:27.950
helped us as well.

00:26:27.950 --> 00:26:32.450
The goal is to have that be a
snapshot of the health, the

00:26:32.450 --> 00:26:33.940
state, of the web ecosystem.

00:26:33.940 --> 00:26:36.310
Specifically Chromium, but over
time it could be for the

00:26:36.310 --> 00:26:36.830
whole web ecosystem.

00:26:36.830 --> 00:26:38.670
I think that's cool.

00:26:38.670 --> 00:26:40.660
We'll see.

00:26:40.660 --> 00:26:42.050
PAUL IRISH: Next question.

00:26:42.050 --> 00:26:45.210
How will this impacts Dart
language's process?

00:26:45.210 --> 00:26:47.860
Can we expect a Dart
VM to be integrated

00:26:47.860 --> 00:26:49.180
into Chrome as a result?

00:26:49.180 --> 00:26:50.970
DARIN FISHER: I already
answered the question.

00:26:50.970 --> 00:26:56.850
But I think it doesn't really
impact Dart language at all.

00:26:56.850 --> 00:26:58.700
ERIC SEIDEL: Dart's a separate
open source project.

00:26:58.700 --> 00:27:00.490
I don't think changes
to our open source

00:27:00.490 --> 00:27:01.944
really affect them directly.

00:27:04.810 --> 00:27:07.680
PAUL IRISH: When we get our
hands on Blink code?

00:27:07.680 --> 00:27:10.100
Again, today.

00:27:10.100 --> 00:27:11.210
Yesterday.

00:27:11.210 --> 00:27:13.500
We're good.

00:27:13.500 --> 00:27:16.250
Will this be a direct competitor
against Mozilla's

00:27:16.250 --> 00:27:17.150
new engine?

00:27:17.150 --> 00:27:20.450
Is co-working with Mozilla
out of the question?

00:27:20.450 --> 00:27:22.850
ERIC SEIDEL: The engine I
believe they mean is Servo,

00:27:22.850 --> 00:27:25.850
which although Brendan posted
about it yesterday, it's been

00:27:25.850 --> 00:27:27.470
in the public for a long time.

00:27:27.470 --> 00:27:28.770
ALEX KOMOROSKE: I remember
design docs

00:27:28.770 --> 00:27:30.670
about that a year ago.

00:27:30.670 --> 00:27:31.250
ERIC SEIDEL: I've been following
it for a while.

00:27:31.250 --> 00:27:33.150
It's very, very cool
what they're doing.

00:27:33.150 --> 00:27:34.650
ALEX KOMOROSKE: Really
cool ideas.

00:27:34.650 --> 00:27:37.720
ERIC SEIDEL: But I don't see
Blink as really a direct

00:27:37.720 --> 00:27:38.770
competitor.

00:27:38.770 --> 00:27:40.820
DARIN FISHER: Blink is an
iteration from WebKit.

00:27:40.820 --> 00:27:42.810
It's a fork of WebKit.

00:27:42.810 --> 00:27:45.120
Servo is a new rendering engine

00:27:45.120 --> 00:27:46.440
constructed from scratch.

00:27:46.440 --> 00:27:47.750
ERIC SEIDEL: According to
their docs, it's an

00:27:47.750 --> 00:27:48.610
experiment.

00:27:48.610 --> 00:27:51.040
The docs say that they may
not actually ever ship.

00:27:51.040 --> 00:27:55.980
So that's a very different kind
of project then Blink or

00:27:55.980 --> 00:27:57.850
WebKit, which is
really about--

00:27:57.850 --> 00:27:59.120
ALEX KOMOROSKE: A shipping
product.

00:27:59.120 --> 00:28:00.990
ERIC SEIDEL: Yeah, it's
about an iteration.

00:28:00.990 --> 00:28:03.120
One of WebKit's goals
was WebKit is

00:28:03.120 --> 00:28:04.540
not a science project.

00:28:04.540 --> 00:28:06.970
We're about shipping
a product today.

00:28:06.970 --> 00:28:10.150
And the reality is the world
and the web ecosystem need

00:28:10.150 --> 00:28:11.330
both kinds.

00:28:11.330 --> 00:28:13.990
We need exploratory
crazy new things.

00:28:13.990 --> 00:28:16.480
And we also need to ship
something today.

00:28:16.480 --> 00:28:17.680
And Blink is about
shipping today.

00:28:17.680 --> 00:28:19.460
ALEX KOMOROSKE: I think we're
really excited to see some of

00:28:19.460 --> 00:28:20.560
those ideas they're trying.

00:28:20.560 --> 00:28:23.020
Because we're trying to dream
big with our wish list of

00:28:23.020 --> 00:28:23.700
things to try.

00:28:23.700 --> 00:28:24.680
They're dreaming even bigger.

00:28:24.680 --> 00:28:26.150
Because they're building
a new one from scratch.

00:28:26.150 --> 00:28:27.030
ERIC SEIDEL: Which is amazing.

00:28:27.030 --> 00:28:28.090
ALEX KOMOROSKE: And so that
will be really cool to see

00:28:28.090 --> 00:28:30.820
which of those really big ideas
work, and which ones--

00:28:30.820 --> 00:28:32.500
DARIN FISHER: I'm sure there
will be a lot of idea sharing.

00:28:32.500 --> 00:28:33.340
ALEX KOMOROSKE: Absolutely.

00:28:33.340 --> 00:28:34.680
ERIC SEIDEL: And I can
see the Mozilla

00:28:34.680 --> 00:28:37.310
offices from my window.

00:28:37.310 --> 00:28:40.640
And we talk to Mozilla guys
with some frequency.

00:28:40.640 --> 00:28:46.480
And I think of them as very
cooperative, not competitors.

00:28:46.480 --> 00:28:49.430
DARIN FISHER: Do they know
you can see them?

00:28:49.430 --> 00:28:50.050
ERIC SEIDEL: I'm not sure.

00:28:50.050 --> 00:28:50.800
PAUL IRISH: The buildings are
right next to each other.

00:28:50.800 --> 00:28:52.210
ERIC SEIDEL: The buildings are
right next to each other.

00:28:52.210 --> 00:28:54.270
ALEX KOMOROSKE: Actually we
discussed this with some folks

00:28:54.270 --> 00:28:54.730
from Mozilla.

00:28:54.730 --> 00:28:57.165
They were visiting a few days
ago in the offices.

00:28:57.165 --> 00:28:59.012
We talked about the fact
that we could see them.

00:29:01.670 --> 00:29:05.420
PAUL IRISH: So the question
is about vendor prefixes.

00:29:05.420 --> 00:29:07.830
When will the existing
vendor prefixes in

00:29:07.830 --> 00:29:08.710
Blink be phased out?

00:29:08.710 --> 00:29:10.415
ALEX KOMOROSKE: I think I
already touched on this as

00:29:10.415 --> 00:29:12.640
part of an earlier question.

00:29:12.640 --> 00:29:15.450
Again, going forward, no
new vendor prefixes.

00:29:15.450 --> 00:29:16.940
But course there are
a number of legacy

00:29:16.940 --> 00:29:17.930
ones that we've inherited.

00:29:17.930 --> 00:29:19.310
DARIN FISHER: It could
take a long time to--

00:29:19.310 --> 00:29:20.460
ALEX KOMOROSKE: It could
take a long time.

00:29:20.460 --> 00:29:21.450
Because we want to do
it responsibly.

00:29:21.450 --> 00:29:23.610
Want to figure out-- we don't
want to break the web.

00:29:23.610 --> 00:29:27.330
So some of them are, there's
been the un-prefixed version

00:29:27.330 --> 00:29:28.330
for years and years and years.

00:29:28.330 --> 00:29:30.090
And no one's using the
prefix version.

00:29:30.090 --> 00:29:31.570
Go ahead and take that out.

00:29:31.570 --> 00:29:33.640
Other ones are things that
were never standardized.

00:29:33.640 --> 00:29:35.740
And we want to either figure
out, should we

00:29:35.740 --> 00:29:36.790
just deprecate these?

00:29:36.790 --> 00:29:39.360
Or should we take these
to standardization?

00:29:39.360 --> 00:29:40.820
But it's going to be a
case by case basis.

00:29:40.820 --> 00:29:43.790
DARIN FISHER: I think this
really hits on the point.

00:29:43.790 --> 00:29:45.960
And the reason why we don't
want to do vendor prefixes

00:29:45.960 --> 00:29:48.550
anymore is because, vendor
prefix or not, when you add

00:29:48.550 --> 00:29:51.170
something to the platform
and you ship it, you can

00:29:51.170 --> 00:29:52.230
get stuck with it.

00:29:52.230 --> 00:29:53.980
And it becomes part
of the platform.

00:29:53.980 --> 00:29:58.000
And so adding vendor prefixes
just makes a big old mess.

00:29:58.000 --> 00:30:00.660
It doesn't actually seem
to add any value.

00:30:00.660 --> 00:30:03.410
ERIC SEIDEL: Standards bodies
have even discussed the idea

00:30:03.410 --> 00:30:07.310
of needing to standardize WebKit
prefixed features,

00:30:07.310 --> 00:30:08.970
which is crazy to me.

00:30:08.970 --> 00:30:11.210
But may need to happen
if we fail to be

00:30:11.210 --> 00:30:12.310
able to remove these.

00:30:12.310 --> 00:30:13.523
ALEX KOMOROSKE: It's crazy.

00:30:13.523 --> 00:30:14.630
Hopefully it doesn't
come to that.

00:30:14.630 --> 00:30:16.350
DARIN FISHER: So there will
be no Blink prefix.

00:30:16.350 --> 00:30:17.970
ERIC SEIDEL: There will
be no Blink prefix.

00:30:17.970 --> 00:30:20.900
The madness must stop.

00:30:20.900 --> 00:30:23.820
PAUL IRISH: I saw a request,
actually, that we would maybe

00:30:23.820 --> 00:30:27.110
support -blink
text-decoration-blink.

00:30:30.080 --> 00:30:34.130
DARIN FISHER: I'm pretty sure
we will not be doing that.

00:30:34.130 --> 00:30:37.700
Maybe behind an enable
flag, just for fun.

00:30:37.700 --> 00:30:38.960
ALEX KOMOROSKE: Someone
was joking--

00:30:38.960 --> 00:30:40.500
I forget who it was--

00:30:40.500 --> 00:30:42.730
joking that with web components
actually someone

00:30:42.730 --> 00:30:45.770
could make an x-blink if they
really wanted to, their own

00:30:45.770 --> 00:30:48.690
version of it.

00:30:48.690 --> 00:30:50.610
We will not ship
the Blink tag.

00:30:50.610 --> 00:30:51.790
That's for sure.

00:30:51.790 --> 00:30:53.980
PAUL IRISH: I think that
can wrap it up for now.

00:30:53.980 --> 00:30:55.640
I appreciate everyone
for submitting

00:30:55.640 --> 00:30:57.760
questions, voting them up.

00:30:57.760 --> 00:30:59.440
Hope we answered a lot
of your questions.

00:30:59.440 --> 00:31:02.680
We'll be posting this video,
along with our

00:31:02.680 --> 00:31:04.020
content already out there.

00:31:04.020 --> 00:31:07.980
So if you haven't checked it
out, chromium.org/blink gives

00:31:07.980 --> 00:31:11.560
an overview of the entire
project, our policies towards

00:31:11.560 --> 00:31:13.290
adding features.

00:31:13.290 --> 00:31:15.630
And then the Developer FAQ
answers a lot of other

00:31:15.630 --> 00:31:18.170
questions that go along
with these ones.

00:31:18.170 --> 00:31:19.380
So I encourage you to
check that out.

00:31:19.380 --> 00:31:21.570
And I think that'll
wrap it up.

00:31:21.570 --> 00:31:22.120
DARIN FISHER: Thank you.

00:31:22.120 --> 00:31:23.530
PAUL IRISH: Thanks guys, very
much, for joining us.

