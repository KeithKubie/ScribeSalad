WEBVTT
Kind: captions
Language: en

00:00:00.460 --> 00:00:06.080
Now, if we peak inside the black box however, we find that it is not just

00:00:06.080 --> 00:00:12.090
Bala who is using the resources in the virtual platform, but there

00:00:12.090 --> 00:00:17.230
is also Piero and there is also Kim, and possibly others who are also

00:00:17.230 --> 00:00:21.040
running their own applications. Their own operating

00:00:21.040 --> 00:00:25.550
system on the same shared hardware resources.

00:00:25.550 --> 00:00:30.880
Why would we want to do this? Well, unless we are quite unlucky, the hope

00:00:30.880 --> 00:00:36.090
is that sharing hardware resources across several different

00:00:36.090 --> 00:00:40.990
user communities is going to result in making. The

00:00:40.990 --> 00:00:46.250
cost of ownership and maintenance of the shared resources,

00:00:46.250 --> 00:00:51.610
much cheaper. The fundamental intusion that makes

00:00:51.610 --> 00:00:57.440
sharing hardware resources across the diverse set of users

00:00:57.440 --> 00:01:04.800
is the fact that resource usage is typically very burst. If we were to draw.

00:01:04.800 --> 00:01:09.780
Let's take one particular resource usage, for instance, memory. If we were to

00:01:09.780 --> 00:01:16.630
draw Bala's memory usage over time, it might look like this.

00:01:16.630 --> 00:01:23.090
And maybe Piero's need for memory over time may look like this. And Kim's

00:01:23.090 --> 00:01:29.740
like this, and so on. Now, adding all of these Dynamic needs of

00:01:29.740 --> 00:01:32.620
different user communities, we may see a

00:01:32.620 --> 00:01:35.660
cumulative usage pattern that might look like

00:01:35.660 --> 00:01:42.490
this. Now, let's consider Bala's cost. If he were to buy his own server,

00:01:42.490 --> 00:01:47.310
then he would have to buy. As much as this, because that is the

00:01:47.310 --> 00:01:51.930
peak usage that he has and probably he'll want to do more than that just to be

00:01:51.930 --> 00:01:57.290
on the safe side. The virtual machine actually has a total available

00:01:57.290 --> 00:02:02.360
memory that's much more than the individual needs of any one of these

00:02:02.360 --> 00:02:08.320
guys and each of these guys. Get to share the cost

00:02:08.320 --> 00:02:12.630
of the total resources among themselves. On a

00:02:12.630 --> 00:02:15.730
big enough scale, what this would mean is

00:02:15.730 --> 00:02:18.760
that each of these guys will have potentially

00:02:18.760 --> 00:02:22.180
access to a lot more resources. Then they can

00:02:22.180 --> 00:02:24.810
individually afford to pay for at a fraction

00:02:24.810 --> 00:02:27.110
of the cost, because both the cost of

00:02:27.110 --> 00:02:30.830
acquiring the resource as well as maintaining it

00:02:30.830 --> 00:02:35.270
and upgrading it and so on is borne collectively.

00:02:35.270 --> 00:02:40.080
And that in a nutshell is the whole behind utility

00:02:40.080 --> 00:02:45.870
computing. That is promoted by data centers world wide and this is how

00:02:45.870 --> 00:02:50.580
Amazon, Webservice, Microsoft, and so on they

00:02:50.580 --> 00:02:55.320
all provide resource on a shared basis to a wide

00:02:55.320 --> 00:03:00.290
clientele. Some of you may have already seen the

00:03:00.290 --> 00:03:05.440
connection to what we have seen in the previous lecture. Yes.

00:03:05.440 --> 00:03:10.440
Virtualization is the logical extension to the idea of

00:03:10.440 --> 00:03:15.430
extensibility or specialization of services that we've seen in the

00:03:15.430 --> 00:03:20.790
previous lesson, through the spin and exokernel papers. Only

00:03:20.790 --> 00:03:25.370
now, it is applied at a much larger granularity.

00:03:25.370 --> 00:03:29.020
Namely an entire operating system. In other

00:03:29.020 --> 00:03:33.540
words virtualization is extensibility applied at the

00:03:33.540 --> 00:03:36.870
granularity of an entire operating system as

00:03:36.870 --> 00:03:40.690
opposed to individual services within an operating system.

