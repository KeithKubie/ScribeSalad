WEBVTT
Kind: captions
Language: en

00:00:04.529 --> 00:00:18.890
&gt;&gt;Joe Malin: Hello and welcome, once again,
to Android developer office hours.

00:00:18.890 --> 00:00:25.010
My name is Joe Malin and with me is Alexander
Lucas and also Trevor Johns.

00:00:25.010 --> 00:00:27.480
&gt;&gt;Trevor Johns: Howdy everyone.

00:00:27.480 --> 00:00:30.850
&gt;&gt;Joe Malin: Our engineer today is Daniel
Pham.

00:00:30.850 --> 00:00:36.730
And without further ado letís go to moderator
and see what our first question for the day

00:00:36.730 --> 00:00:37.730
is.

00:00:37.730 --> 00:00:39.699
&gt;&gt;Trevor Johns: Actually, we should mention
one thing before we get started.

00:00:39.699 --> 00:00:41.999
Last weekend we said that this week we would
have--

00:00:41.999 --> 00:00:42.999
&gt;&gt;Joe Malin: Oh, thatís right.

00:00:42.999 --> 00:00:48.129
&gt;&gt;Trevor Johns: guests from security joining
us today but, unfortunately, they had some

00:00:48.129 --> 00:00:51.540
other things going on and unfortunately we
had to cancel that.

00:00:51.540 --> 00:00:55.050
So this week weíre just gonna be holding
a general office hours.

00:00:55.050 --> 00:00:57.550
It will not be security focused.

00:00:57.550 --> 00:01:03.159
So any questions that you have whatsoever,
on any topic, concerning Android of course,

00:01:03.159 --> 00:01:04.460
weíll be happy to answer them.

00:01:04.460 --> 00:01:08.400
And hopefully, at some point in the future,
weíll actually be able to get the folks from

00:01:08.400 --> 00:01:10.880
security back on and weíll reschedule that.

00:01:10.880 --> 00:01:11.969
&gt;&gt;Joe Malin: Great.

00:01:11.969 --> 00:01:15.170
Thank you, Trevor, for that announcement.

00:01:15.170 --> 00:01:18.380
Now, can we ask the first question?

00:01:18.380 --> 00:01:22.040
Which is, ìWhat is the best technique to
do location aware notifications?

00:01:22.040 --> 00:01:28.729
Iíve tried to use location manager and proximity
alert but it keeps the GPS always on, at least

00:01:28.729 --> 00:01:34.219
on Jelly Bean, and seems not to respect the
documentation when the phone is with screen

00:01:34.219 --> 00:01:40.360
off.î Iím not sure what that means, but
in any event we need some hints here.

00:01:40.360 --> 00:01:41.369
Anybody wanna answer?

00:01:41.369 --> 00:01:42.390
&gt;&gt;Trevor Johns: Sure.

00:01:42.390 --> 00:01:44.090
I can take that.

00:01:44.090 --> 00:01:49.640
So, whenever youíre requesting location notifications
the phone does have to keep, you know, keep

00:01:49.640 --> 00:01:52.150
pulling for some sort of location data.

00:01:52.150 --> 00:01:56.360
And, in general, the answer here is to make
sure that location data is not coming from

00:01:56.360 --> 00:02:00.109
GPS cause GPS is gonna be your biggest power
sink.

00:02:00.109 --> 00:02:07.560
If you request the course location provider,
that will use the network, the network location

00:02:07.560 --> 00:02:13.390
services so, typically, thatís things like
Wi-Fi geo location and that sort of stuff

00:02:13.390 --> 00:02:18.260
and the power consumption there is significantly
reduced compared to GPS.

00:02:18.260 --> 00:02:21.120
So, apps like Google Now use that trick.

00:02:21.120 --> 00:02:26.080
They actually do not turn on GPS except in
very rare circumstances.

00:02:26.080 --> 00:02:30.090
So that way, again, power consumption is minimized
and you keep your users happy.

00:02:30.090 --> 00:02:31.280
So, thatís the answer.

00:02:31.280 --> 00:02:36.220
Make sure youíre using the course location
prog- or make sure you set, you know, course

00:02:36.220 --> 00:02:40.290
as your requested resolution when youíre
requ--, when youíre schedu--, when youíre

00:02:40.290 --> 00:02:41.570
asking for location updates.

00:02:41.570 --> 00:02:45.050
&gt;&gt;Joe Malin: Great, thank you, Trevor.

00:02:45.050 --> 00:02:46.220
Any other comments?

00:02:46.220 --> 00:02:47.220
Nope?

00:02:47.220 --> 00:02:49.110
Alright, weíll move on.

00:02:49.110 --> 00:02:54.650
ìLetís say I wanna add a feature to my app
like SMS integration, rather than scaring

00:02:54.650 --> 00:02:59.750
people off with that permission should I make
a second shell app that has the permission

00:02:59.750 --> 00:03:04.700
and same shared user ID that they can optionally
install, or should I do something else?î

00:03:04.700 --> 00:03:07.080
&gt;&gt;Alex Lucas: Okay, I can take this one.

00:03:07.080 --> 00:03:13.310
So, first, I should say itís really, itís
good that youíre, that you have, that youíre

00:03:13.310 --> 00:03:17.540
approaching this with the attitude of not
wanting to scare people off with extraneous

00:03:17.540 --> 00:03:18.560
permissions.

00:03:18.560 --> 00:03:24.690
That said, the, if you think about this from
the perspective of a user, if they download

00:03:24.690 --> 00:03:29.950
an app that does not have SMS permissions
and, you know, less scary, that app then says,

00:03:29.950 --> 00:03:34.159
ìHey, download my buddy app that has, you
know, is slightly skeezierî youíre gonna

00:03:34.159 --> 00:03:38.579
come off as a Trojan horse and itís going
to be, itís going to look even sketchier

00:03:38.579 --> 00:03:42.349
than if you had included the SMS integration
in the first place.

00:03:42.349 --> 00:03:48.140
What you wanna do, it, the correct solution,
a lot of it depends on the details of like

00:03:48.140 --> 00:03:50.989
what youíre integrating SMS for.

00:03:50.989 --> 00:03:56.769
If it is, if youíre just trying to send messages
to people you might wanna abandon, or you

00:03:56.769 --> 00:04:00.490
might want to avoid having SMS built into
your own app and you might just wanna intent

00:04:00.490 --> 00:04:03.660
when youíre sending SMS messages out.

00:04:03.660 --> 00:04:07.799
If youíre reading incoming SMS messages then
the best solution there is to just add the

00:04:07.799 --> 00:04:11.830
permission to your app and within the description
of the app explain what youíre using the

00:04:11.830 --> 00:04:14.840
permission for.

00:04:14.840 --> 00:04:20.870
That said, you should only have to explain
it if it, if it, if it isnít immediately

00:04:20.870 --> 00:04:22.690
apparent from the description of your app.

00:04:22.690 --> 00:04:27.720
Like, if your app is something that turns
the phone on or off or plays music based on

00:04:27.720 --> 00:04:31.660
an incoming SMS message you donít need to
explain the permission, people understand

00:04:31.660 --> 00:04:35.060
I interact with SMS, therefore I need the
SMS permission.

00:04:35.060 --> 00:04:38.630
If youíre a flashlight app you shouldnít
have an SMS permission in the first place.

00:04:38.630 --> 00:04:47.210
So the, what, your solution is going to depend
on what your app is but the whole second app

00:04:47.210 --> 00:04:49.330
installation thing is definitely the wrong
way to go.

00:04:49.330 --> 00:04:50.330
&gt;&gt;Trevor Johns: Right.

00:04:50.330 --> 00:04:54.580
I mean, just to elaborate a little bit on
what Alex said there, if the core purpose

00:04:54.580 --> 00:05:00.620
of your app is not sending SMS, you should
avoid meddling SMS functionality into your

00:05:00.620 --> 00:05:06.210
app and, instead, use intents to delegate
to another application whose job is to send

00:05:06.210 --> 00:05:07.210
SMS.

00:05:07.210 --> 00:05:12.330
And, besides the obvious that, you know, the
issue of permissions, thereís a second reason

00:05:12.330 --> 00:05:15.090
you wanna do that and thatís because of the
user experience.

00:05:15.090 --> 00:05:20.300
A lot of time, Google Voice is a prime example
here; users will install some other app that

00:05:20.300 --> 00:05:21.960
are responsible for sending text messages.

00:05:21.960 --> 00:05:26.210
Most of the time those are apps that do go
and use the normal SMS infrastructure and

00:05:26.210 --> 00:05:30.770
they send it through their cell carrier but,
again, in the case of Google Voice those messages

00:05:30.770 --> 00:05:34.639
are actually routed over the internet and
donít use the normal telephony stack on the

00:05:34.639 --> 00:05:35.639
phone.

00:05:35.639 --> 00:05:41.790
And if you donít use the SMS intent the SMS
messages will not be sent through the userís

00:05:41.790 --> 00:05:45.860
desired SMS handler and that might not be
something they want.

00:05:45.860 --> 00:05:49.870
So you could be sending the SMS messages from
the wrong phone number in that case.

00:05:49.870 --> 00:05:55.039
So please, please, please use intent whenever
possible and youíll make your life easier

00:05:55.039 --> 00:05:58.229
and youíll make your users so much happier.

00:05:58.229 --> 00:06:00.569
&gt;&gt;Joe Malin: Great.

00:06:00.569 --> 00:06:01.569
Thank you, Trevor.

00:06:01.569 --> 00:06:10.319
Next question, ìIs there a way to measure
the power consumption of the location manager

00:06:10.319 --> 00:06:12.260
caused by my app?

00:06:12.260 --> 00:06:17.340
As location based to do that it has to create
a location regularly but it doesnít appear

00:06:17.340 --> 00:06:18.960
in the battery stats.

00:06:18.960 --> 00:06:22.289
How can I measure power optimizations for
it?î

00:06:22.289 --> 00:06:30.390
&gt;&gt;Alex Lucas: Hm, to answer the first sub
question of the overall set of questions,

00:06:30.390 --> 00:06:35.930
measuring, I donít believe itís currently
possible to measure the power consumption

00:06:35.930 --> 00:06:38.300
in location manager thatís caused by your
app specifically.

00:06:38.300 --> 00:06:41.960
&gt;&gt;Trevor Johns: Oh, no, itís possible to
measure your app but the--

00:06:41.960 --> 00:06:44.970
&gt;&gt;Alex Lucas: But itís the consumption going
through the location manager.

00:06:44.970 --> 00:06:45.970
&gt;&gt;Trevor Johns: Right.

00:06:45.970 --> 00:06:47.970
Yeah, location manager is not going to be
bundled together with your app, so--

00:06:47.970 --> 00:06:48.970
&gt;&gt;Alex Lucas: Right, itís--

00:06:48.970 --> 00:06:51.840
&gt;&gt;Trevor Johns: Youíre not gonna get the
stats you want there.

00:06:51.840 --> 00:06:57.750
I can explain how we do it on the Android
edge team and itís a little bit cumbersome.

00:06:57.750 --> 00:07:01.930
We have a box that actually measures current
draw from the phone and so weíll plug a phone

00:07:01.930 --> 00:07:05.610
into that instead of to a battery, you know,
it goes where the battery contacts normally

00:07:05.610 --> 00:07:06.610
would be.

00:07:06.610 --> 00:07:09.560
And then weíll measure the actual power consumption
coming out of the device.

00:07:09.560 --> 00:07:14.740
So this is a harder solution and it is a bit
specialized but thatís gonna get you the

00:07:14.740 --> 00:07:16.129
most accurate numbers.

00:07:16.129 --> 00:07:19.490
Hopefully for some future release of Android
weíll go and improve the reporting.

00:07:19.490 --> 00:07:23.620
Weíre always trying to go and give developers
more metrics especially for something as critical

00:07:23.620 --> 00:07:24.830
as batter life.

00:07:24.830 --> 00:07:29.430
But, unfortunately right now the feature youíre
looking for just isnít a part of Android.

00:07:29.430 --> 00:07:31.810
So, sorry about that, hopefully weíll get
to it for ya.

00:07:31.810 --> 00:07:35.580
&gt;&gt;Alex Lucas: I donít know how helpful the
magic box is going to be for a location based

00:07:35.580 --> 00:07:37.160
application like that.

00:07:37.160 --> 00:07:40.290
&gt;&gt;Trevor Johns: Well, it would give you the
numbers.

00:07:40.290 --> 00:07:43.610
I mean, itís going to be a weird test rig.

00:07:43.610 --> 00:07:47.490
Itís not something you wanna leave plugged
in all the time but it is an engineering tool

00:07:47.490 --> 00:07:54.020
and if thatís the only option then, unfortunately,
thatís the only option.

00:07:54.020 --> 00:07:58.120
&gt;&gt;Joe Malin: Okay, any other comments?

00:07:58.120 --> 00:07:59.120
No?

00:07:59.120 --> 00:08:03.680
The next question is, ìNeed to connect to
a legacy SOAP web service over https, service

00:08:03.680 --> 00:08:06.949
doesnít support O auth tokens, etcetera.

00:08:06.949 --> 00:08:11.419
So I need to have username, password, once
entered is there any way to store the userís

00:08:11.419 --> 00:08:16.190
log in credentials securely to prevent having
to enter them again?î And there was some

00:08:16.190 --> 00:08:17.949
comments put in to--

00:08:17.949 --> 00:08:23.139
&gt;&gt;Trevor Johns: Right, the comments from Christian
in Germany was that you should use a custom

00:08:23.139 --> 00:08:29.250
account and then take a look inside of Android
training, thereís a, well first off thereís

00:08:29.250 --> 00:08:34.610
a custom auth section in Android training
and thereís also a sample to sink it after.

00:08:34.610 --> 00:08:40.390
And then thereís a second part, weíll get
to that in a moment, and thatís partially

00:08:40.390 --> 00:08:41.390
correct.

00:08:41.390 --> 00:08:45.940
A custom account would get you a secure location
to store credentials.

00:08:45.940 --> 00:08:48.720
That being said, itís not strictly required.

00:08:48.720 --> 00:08:52.920
And the reason for that, custom accounts are
more when youíre providing an account to

00:08:52.920 --> 00:08:56.970
other services on the system or you have some
background sync job.

00:08:56.970 --> 00:09:04.300
So, for example, if you have Picasa and Picasa
is the background going in and uploading your

00:09:04.300 --> 00:09:08.680
photos, right, and you can use a sync adapter
and things like that.

00:09:08.680 --> 00:09:12.360
Excellent choice for accounts, anytime youíre
exporting account data via account manager

00:09:12.360 --> 00:09:17.390
so you want to provide your own, you know,
O auth handler to let users get auth tokens;

00:09:17.390 --> 00:09:18.820
another excellent use for account manager.

00:09:18.820 --> 00:09:23.880
But, itís bit overkill if youíre just trying
to go in and secure passwords securely, or

00:09:23.880 --> 00:09:25.880
store passwords securely somehow.

00:09:25.880 --> 00:09:32.030
So, in that case, my usual recommendation
is just to go and create a preferences file

00:09:32.030 --> 00:09:37.710
somewhere on the device, make sure itís stored
on internal storage and that youíve set it,

00:09:37.710 --> 00:09:39.290
set the mode to private.

00:09:39.290 --> 00:09:46.290
Every application on Android is given its
own unique user ID, just typical Android,

00:09:46.290 --> 00:09:51.780
or typical unique ID and if you set the file
permissions to private, that means no other

00:09:51.780 --> 00:09:55.890
application on the system will be able to
read that file except for your app.

00:09:55.890 --> 00:10:00.570
And, so, thatís currently our recommended
best practice for secure password storage

00:10:00.570 --> 00:10:04.450
assuming, again, youíre not falling into
these advanced use cases where account manager

00:10:04.450 --> 00:10:07.040
makes sense and youíll find thatís a lot
simpler.

00:10:07.040 --> 00:10:11.980
So, as far as the second part of the question
was, ìthe authenticator stores the password

00:10:11.980 --> 00:10:18.300
blank but you can encrypt it using MD5 or
SHA-1 and then decrypt it later.î And, I

00:10:18.300 --> 00:10:20.730
hate to tell you, but thatís actually not
gonna work.

00:10:20.730 --> 00:10:23.440
[Laughs]
&gt;&gt;Trevor Johns: MT5 and SHA-1 are whatís

00:10:23.440 --> 00:10:29.550
referred to as cryptographic hash functions
and cryptographic hash functions are designed

00:10:29.550 --> 00:10:35.510
to be one way and thereís a bunch of other
fun properties to them too but what that means

00:10:35.510 --> 00:10:40.560
is, you can take some source text, feed it
through, again, MD5 or SHA-1, youíll get

00:10:40.560 --> 00:10:46.290
your hash out and thereís no way to go back
from that hash and get your original text

00:10:46.290 --> 00:10:48.300
back.

00:10:48.300 --> 00:10:51.650
For one, theyíre fixed link hashes so the
output is always gonna be the same number

00:10:51.650 --> 00:10:52.650
of characters.

00:10:52.650 --> 00:10:56.720
You can imagine if you feed in a lot of data,
if I feed it, if I feed in a megabyte of data

00:10:56.720 --> 00:11:04.360
and I get back a 160 bytes, actually, I think
itís 160 bits, in the case of SHA-1 I believe,

00:11:04.360 --> 00:11:05.600
donít quote me on that.

00:11:05.600 --> 00:11:07.080
In any case, youíre losing data.

00:11:07.080 --> 00:11:11.170
Itís just simply not possible to go and recover
the original password if you use those.

00:11:11.170 --> 00:11:16.950
You could go and use something like AES and
thatís a, a symmetric cipher which will let

00:11:16.950 --> 00:11:23.940
you go and create some secret key embedded
inside your APK and then write that to disc

00:11:23.940 --> 00:11:29.060
and then later unencrypt, again, using that
same secret key inside of your APK and that

00:11:29.060 --> 00:11:31.660
would give you a little bit extra security.

00:11:31.660 --> 00:11:37.100
I think in most cases using the file permissions
built into Android is enough.

00:11:37.100 --> 00:11:43.280
In the exceptional case where you have a user
thatís rooted their device and thereís a

00:11:43.280 --> 00:11:46.670
malicious app on the device thatís taking
advantage of this to break out of the sandbox

00:11:46.670 --> 00:11:48.990
and read from other files.

00:11:48.990 --> 00:11:52.840
This would protect you against this as long
as itís not a targeted attack.

00:11:52.840 --> 00:11:57.320
But, for general purpose, thatís gonna be
more than enough security for most users and,

00:11:57.320 --> 00:12:01.540
at this point, weíre falling into an edge
case within an edge case.

00:12:01.540 --> 00:12:06.050
So, I think using something like AES to go
and secure your password cache on the device

00:12:06.050 --> 00:12:11.400
is not a bad idea, definitely do it.

00:12:11.400 --> 00:12:15.190
And I think thatís the extent of Christianís
comments and I think weíve answered that

00:12:15.190 --> 00:12:16.190
quite well as well, so.

00:12:16.190 --> 00:12:17.190
&gt;&gt;Joe Malin: Yep.

00:12:17.190 --> 00:12:18.190
&gt;&gt;Trevor Johns: Letís move on.

00:12:18.190 --> 00:12:19.190
&gt;&gt;Joe Malin: Okay.

00:12:19.190 --> 00:12:21.460
&gt;&gt;Daniel Pham: Iíve actually got a question
from Chris who is in the hangout.

00:12:21.460 --> 00:12:25.160
Iím gonna put him on, he doesnít have video
but weíre gonna go, route his sound through

00:12:25.160 --> 00:12:26.160
in a second.

00:12:26.160 --> 00:12:27.160
&gt;&gt;Joe Malin: Alright.

00:12:27.160 --> 00:12:28.160
&gt;&gt;Daniel Pham: Just give me one second.

00:12:28.160 --> 00:12:29.160
Hey Chris, youíre on air, can you hear?

00:12:29.160 --> 00:12:31.520
&gt;&gt;Chris: Yeah I can hear you, can you hear
me?

00:12:31.520 --> 00:12:32.880
&gt;&gt;Joe Malin: Yep.

00:12:32.880 --> 00:12:34.690
&gt;&gt;Trevor Johns: Hey Chris.

00:12:34.690 --> 00:12:36.050
&gt;&gt;Chris: Okay, great.

00:12:36.050 --> 00:12:41.820
Basically Iím using a phone content filter
URI to do a search and Iím passing either

00:12:41.820 --> 00:12:47.950
a name or a number; just looking for matching
either phone numbers or names when doing a

00:12:47.950 --> 00:12:48.950
search.

00:12:48.950 --> 00:12:54.430
I noticed that in certain cases someone has
a phone number like 9951 and I search for

00:12:54.430 --> 00:12:57.950
the letter zx, it ends up matching.

00:12:57.950 --> 00:13:03.440
And thatís not anywhere, but itís on multiple
devices.

00:13:03.440 --> 00:13:06.310
&gt;&gt;Trevor Johns: Thatís really interesting.

00:13:06.310 --> 00:13:12.230
Youíre just looking for, like, the like typical
telephone URI to go and match the phone number?

00:13:12.230 --> 00:13:13.370
&gt;&gt;Chris: Yes.

00:13:13.370 --> 00:13:17.340
&gt;&gt;Trevor Johns: Huh, Iím surprised that matches.

00:13:17.340 --> 00:13:21.540
And just to make sure, itís not doing something
really smart like trying to match where the

00:13:21.540 --> 00:13:24.680
numbers zx would normally be on a telephone
keypad, correct?

00:13:24.680 --> 00:13:31.610
&gt;&gt;Chris: Right, Iím not trying to, basically
all Iím trying, sorry, Iím trying to match

00:13:31.610 --> 00:13:36.600
either the name or the number and thereís
no zx in the contact, it could just be like

00:13:36.600 --> 00:13:41.500
a single phone number and, I mean, Iíve got
some sample code I could paste in but itís

00:13:41.500 --> 00:13:43.310
pretty straight forward what Iím searching
for.

00:13:43.310 --> 00:13:47.640
I just wanna make sure that Iím allowed to
search for names; it matches the names like

00:13:47.640 --> 00:13:50.570
if I type in Chris it does return all the
Chris results.

00:13:50.570 --> 00:13:56.350
&gt;&gt;Alex Lucas: So if the zx being compared
to the phone number and returning positively?

00:13:56.350 --> 00:13:57.350
&gt;&gt;Chris: Yes.

00:13:57.350 --> 00:13:59.750
If I remove the phone, if I remove that phone
number it no longer matches.

00:13:59.750 --> 00:14:06.790
&gt;&gt;Alex Lucas: Okay, I do, this is a speculation
but Iíve had some experience with SQLite

00:14:06.790 --> 00:14:15.700
not being super type safe in terms of itíll
compare like integers to strings and the code

00:14:15.700 --> 00:14:19.520
would then like take that string and assume
itís a bunch of numbers and, like, break

00:14:19.520 --> 00:14:21.280
it down by bytes.

00:14:21.280 --> 00:14:23.800
So that might be whatís happening.

00:14:23.800 --> 00:14:30.780
&gt;&gt;Chris: Okay, is that something I should
maybe reproduce and just send to, like, as

00:14:30.780 --> 00:14:32.890
an open Android bug on that?

00:14:32.890 --> 00:14:37.710
&gt;&gt;Alex Lucas: I think itís more a quote unquote
feature not a bug.

00:14:37.710 --> 00:14:39.470
Itís a function of SQLite

00:14:39.470 --> 00:14:40.470
&gt;&gt;Chris: Okay.

00:14:40.470 --> 00:14:42.670
&gt;&gt;Alex Lucas: Which we donít actually write.

00:14:42.670 --> 00:14:49.820
I think the best thing to do there is, letís
see, I would just say like within your abstraction

00:14:49.820 --> 00:14:54.870
code make sure youíre, make sure that the
phone number that youíre comparing, or crap,

00:14:54.870 --> 00:14:58.310
I donít know off the top of my head how to
deal with this one.

00:14:58.310 --> 00:15:05.020
&gt;&gt;Trevor Johns: Yeah, Iím not enough of an
expert as to how SQLite searching works.

00:15:05.020 --> 00:15:10.770
I mean, I think this is a perfectly reasonable
thing to bring up on the SQLite but tracker

00:15:10.770 --> 00:15:14.060
and see what the developers there say about
how searching should work.

00:15:14.060 --> 00:15:19.420
That said, youíre gonna have to go and make
sure you explain it in the context of SQLite,

00:15:19.420 --> 00:15:20.420
not Android.

00:15:20.420 --> 00:15:23.020
And itís entirely possible they might say
itís a feature and not a bug.

00:15:23.020 --> 00:15:28.630
But, you know, SQLite works the way SQLite
does on all platforms so our hands are tied

00:15:28.630 --> 00:15:30.610
as to modifying the functionality there.

00:15:30.610 --> 00:15:39.120
&gt;&gt;Joe Malin: I have a question; you said that
youíre using, to query phone.contentfilter.URI?

00:15:39.120 --> 00:15:40.480
&gt;&gt;Chris: Yes.

00:15:40.480 --> 00:15:46.340
&gt;&gt;Joe Malin: Okay, so phone is whatís the
parent class of phone?

00:15:46.340 --> 00:15:48.100
&gt;&gt;Chris: I think its common data kinds, I
think.

00:15:48.100 --> 00:15:49.350
&gt;&gt;Joe Malin: Okay.

00:15:49.350 --> 00:15:51.280
I just wanted to check.

00:15:51.280 --> 00:15:52.280
&gt;&gt;Chris: [inaudible]

00:15:52.280 --> 00:15:58.440
&gt;&gt;Joe Malin: Thereís so many different classes
in that package that, you know, um, I have

00:15:58.440 --> 00:15:59.950
trouble keeping them apart.

00:15:59.950 --> 00:16:02.590
&gt;&gt;Chris: Yeah, it is common data kinds.phone.contentfilteruri.

00:16:02.590 --> 00:16:09.050
&gt;&gt;Joe Malin: Hold on, yeah I have to look
it up to see exactly what that thing does

00:16:09.050 --> 00:16:18.980
but, I think you should be okay and I think
the data base thing that Alexander pointed

00:16:18.980 --> 00:16:21.450
out is probably worth pursuing.

00:16:21.450 --> 00:16:22.450
&gt;&gt;Chris: Okay.

00:16:22.450 --> 00:16:24.040
I appreciate it.

00:16:24.040 --> 00:16:25.090
Thank you.

00:16:25.090 --> 00:16:28.670
&gt;&gt;Daniel Pham: Alright, I actually have another
question for the hangout if thatís okay.

00:16:28.670 --> 00:16:29.670
&gt;&gt;Joe Malin: Shoot.

00:16:29.670 --> 00:16:37.190
&gt;&gt;Daniel Pham: Lucio I wanna put you on air,
give me one second.

00:16:37.190 --> 00:16:38.370
[Pause]

00:16:38.370 --> 00:16:41.940
&gt;&gt;Joe Malin: Hello?

00:16:41.940 --> 00:16:44.320
&gt;&gt;Lucio: Hello.

00:16:44.320 --> 00:16:53.760
So I tried to ask just for a course location
in my Android manifest but when I try to use

00:16:53.760 --> 00:17:05.470
the proximity alert I get a secure exception
cause it asks for find location.

00:17:05.470 --> 00:17:12.630
So I cannot use this API for media alert with
course location, only a final location.

00:17:12.630 --> 00:17:19.440
&gt;&gt;Joe Malin: Which, no, thereís two different,
well I donít know exactly what youíre doing

00:17:19.440 --> 00:17:21.750
but there are two different permissions.

00:17:21.750 --> 00:17:22.750
Thereís an access--

00:17:22.750 --> 00:17:23.890
&gt;&gt;Lucio: Yeah, yeah, yeah.

00:17:23.890 --> 00:17:24.890
&gt;&gt;Joe Malin: Okay.

00:17:24.890 --> 00:17:31.320
&gt;&gt;Lucio: Okay, what Iím doing is this, on
my manifest I requested for course location

00:17:31.320 --> 00:17:40.960
permission and on my app Iím getting location
manager service and then calling proximity

00:17:40.960 --> 00:17:43.240
alert on it.

00:17:43.240 --> 00:17:50.800
Asking a location and a radius and then, but
only with course location I got a secured

00:17:50.800 --> 00:17:55.640
exception cause this function needs find location.

00:17:55.640 --> 00:18:04.650
But if I use find location it will always
get the GPS on and the activate [cannot understand]

00:18:04.650 --> 00:18:07.830
&gt;&gt;Joe Malin: I under-, right, I understand.

00:18:07.830 --> 00:18:12.290
Have you tried acc-, uh, tried requesting
both permissions?

00:18:12.290 --> 00:18:14.830
&gt;&gt;Lucio: Yeah.

00:18:14.830 --> 00:18:19.750
Requesting both permissions the GPS will always
be on and activated so--

00:18:19.750 --> 00:18:24.180
&gt;&gt;Alex Lucas: So he only wants course permission,
right?

00:18:24.180 --> 00:18:25.920
&gt;&gt;Joe Malin: He only wants course permission.

00:18:25.920 --> 00:18:32.020
&gt;&gt;Lucio: Yeah, thatís what I was asking cause
I have to do something just like Google Now

00:18:32.020 --> 00:18:40.330
with its location aware notifications where
the user comes close to some points and I

00:18:40.330 --> 00:18:50.140
have to notify them but if I let, I lift the
find location my app with drain the users

00:18:50.140 --> 00:18:56.430
battery and then they will be very sad and
not like it very much.

00:18:56.430 --> 00:19:02.900
So I was thinking use the passive location?

00:19:02.900 --> 00:19:06.730
&gt;&gt;Alex Lucas: Passive provider?

00:19:06.730 --> 00:19:14.500
&gt;&gt;Lucio: Passive provider, yes, to gathering
all this information and maybe querying about

00:19:14.500 --> 00:19:22.060
once in a while for the course location but
I donít know, I would like to know how the

00:19:22.060 --> 00:19:23.060
Google Now does this?

00:19:23.060 --> 00:19:27.540
&gt;&gt;Trevor Johns: Well, thatís a good question
but I donít think we can tell you how Google

00:19:27.540 --> 00:19:31.770
Now does it on the air; youíd have to go
and look up the source code.

00:19:31.770 --> 00:19:33.680
&gt;&gt;Alex Lucas: And get permission to talk about
how Google--

00:19:33.680 --> 00:19:36.670
&gt;&gt;Trevor Johns: We can talk about how to use
the GPS thatís a system feature.

00:19:36.670 --> 00:19:37.670
&gt;&gt;Alex Lucas: Probably.

00:19:37.670 --> 00:19:41.530
&gt;&gt;Trevor Johns: But, in any case, I canít
tell you exactly how Google Now does it right

00:19:41.530 --> 00:19:42.840
off the top of my head.

00:19:42.840 --> 00:19:46.390
We can certainly research it a bit more for
you and find out what the correct way to do

00:19:46.390 --> 00:19:47.750
this is.

00:19:47.750 --> 00:19:52.860
I would definitely say using the passive provider
or, alternatively, using network provider,

00:19:52.860 --> 00:19:57.200
either one of those would both be a good start.

00:19:57.200 --> 00:20:02.880
Iím seeing, Iím going through the reference
guide seeing if I can find what the correct

00:20:02.880 --> 00:20:03.980
flags are.

00:20:03.980 --> 00:20:08.790
I suspect there is probably a way to do it
but having not done it I donít know the answer

00:20:08.790 --> 00:20:10.610
off the top of my head.

00:20:10.610 --> 00:20:21.410
Yeah, Iíd say probably the best bet here
would be to go and open up a question on stack

00:20:21.410 --> 00:20:27.090
overflow and then post your question to there
with as much detail as you can and then post

00:20:27.090 --> 00:20:31.920
a link to your stack overflow question in
the comments for this show and we can go ahead

00:20:31.920 --> 00:20:37.980
and research some more information for you
offline and get you a proper, thoroughly researched

00:20:37.980 --> 00:20:40.370
answer that will find the solution for you.

00:20:40.370 --> 00:20:41.440
&gt;&gt;Lucio: Okay, thanks.

00:20:41.440 --> 00:20:42.510
&gt;&gt;Trevor Johns: Yep.

00:20:42.510 --> 00:20:46.200
Sorry we canít answer it just right now but
we will get you an answer.

00:20:46.200 --> 00:20:47.230
&gt;&gt;Joe Malin: Okay, thank you.

00:20:47.230 --> 00:20:48.230
&gt;&gt;Lucio: Thanks.

00:20:48.230 --> 00:20:51.670
&gt;&gt;Daniel Pham: Alright, we have another question
from the hangout.

00:20:51.670 --> 00:20:52.670
&gt;&gt;Joe Malin: Alright.

00:20:52.670 --> 00:20:53.670
&gt;&gt;Daniel Pham: Weíre gonna put the hangout
on again.

00:20:53.670 --> 00:20:54.670
&gt;&gt;Joe Malin: Okay.

00:20:54.670 --> 00:20:57.390
&gt;&gt;Daniel Pham: Alright, there you go, youíre
on.

00:20:57.390 --> 00:20:58.390
Go ahead

00:20:58.390 --> 00:21:00.110
&gt;&gt;Male #1: Hello, can you hear me?

00:21:00.110 --> 00:21:01.110
&gt;&gt;Joe Malin: Yep.

00:21:01.110 --> 00:21:02.110
&gt;&gt;Trevor Johns: Hi.

00:21:02.110 --> 00:21:09.730
&gt;&gt;Male #1: Hi, I wanna ask about writing APNS
using code because it wasnít in gingerbread

00:21:09.730 --> 00:21:14.600
it was using a private API that stopped working
for Ice Cream and Jelly Bean.

00:21:14.600 --> 00:21:18.900
And I wanted to ask if there was any kind
of replacement that I can use for Ice Cream

00:21:18.900 --> 00:21:26.930
and Jelly Bean because here there is local
apps to install APNs because we started sixteen

00:21:26.930 --> 00:21:30.060
new mobile carriers in the past six months.

00:21:30.060 --> 00:21:36.360
&gt;&gt;Trevor Johns: So, I think the answer there
is APNs should strictly come from the sim

00:21:36.360 --> 00:21:41.640
card and we donít normally want the users
to be adding those manually, of course the

00:21:41.640 --> 00:21:45.530
functionality is buried deep in system settings
if itís something you really need to do but

00:21:45.530 --> 00:21:49.890
most of the time this is something the cell
provider should be doing.

00:21:49.890 --> 00:21:53.610
Itís not a good user experience to have to
set all these settings.

00:21:53.610 --> 00:21:56.950
And there is a way to go and bundle APNs with
a sim card.

00:21:56.950 --> 00:22:00.010
So, cell providers just need to make sure
theyíre shipping sim cards that actually

00:22:00.010 --> 00:22:01.470
contain correct data on them.

00:22:01.470 --> 00:22:06.290
And Iím not aware of a work around that will
let you specify APNs otherwise.

00:22:06.290 --> 00:22:14.010
&gt;&gt;Male #1: Okay, so I need to contact my carrier
and see if they doing something about it?

00:22:14.010 --> 00:22:15.560
&gt;&gt;Trevor Johns: Correct.

00:22:15.560 --> 00:22:17.530
&gt;&gt;Male #1: Okay, thank you.

00:22:17.530 --> 00:22:18.800
&gt;&gt;Trevor Johns: Sure.

00:22:18.800 --> 00:22:22.620
&gt;&gt;Daniel Pham: Alright, thatís it from the
hangout for now guys.

00:22:22.620 --> 00:22:23.620
&gt;&gt;Joe Malin: Okay, great.

00:22:23.620 --> 00:22:27.500
Thank you very much everyone, weíll move
back to moderator.

00:22:27.500 --> 00:22:33.120
The next question is, ìHow does Google Music
zoom through scrolling lists so fast?

00:22:33.120 --> 00:22:36.740
The images are empty until the scrolling slows
down then the images begin to fade in.

00:22:36.740 --> 00:22:39.230
Itís fast and looks great.

00:22:39.230 --> 00:22:41.040
Is this only possible in Jelly Bean?

00:22:41.040 --> 00:22:42.040
Howís this done?î

00:22:42.040 --> 00:22:43.040
&gt;&gt;Trevor Johns: Okay.

00:22:43.040 --> 00:22:44.400
I can take that.

00:22:44.400 --> 00:22:48.930
So, the answer here is that you wanna make
sure that youíre loading your images asynchronously

00:22:48.930 --> 00:22:51.070
off the UI thread.

00:22:51.070 --> 00:22:55.520
And, you can do this; the simplest way is
to do an async task.

00:22:55.520 --> 00:23:00.530
Itís not the most intelligent way but itíll
get you 95 percent of the way there.

00:23:00.530 --> 00:23:03.430
The only thing you have to be aware of when
youíre async task, when youíre using an

00:23:03.430 --> 00:23:07.200
async task is itís not gonna be aware of
which things have already scrolled off the

00:23:07.200 --> 00:23:12.190
screen so itís not as efficient as you could
be if you wrote some more finely tuned code.

00:23:12.190 --> 00:23:16.480
You can actually, thereís a lot of actually
different ways you can do this, you can do

00:23:16.480 --> 00:23:21.080
it with a handler or you can, thereís another
way that you can do it too which is escaping

00:23:21.080 --> 00:23:22.080
my memory.

00:23:22.080 --> 00:23:27.090
One of the developer advocates here, Dan Galpin,
is actually working on a training course that

00:23:27.090 --> 00:23:32.210
goes into extreme detail and all the different
ways you can do exactly what youíre describing

00:23:32.210 --> 00:23:33.210
right there.

00:23:33.210 --> 00:23:39.330
But, Iíd say, first step would be start with
an async task, just go and feed a handle to

00:23:39.330 --> 00:23:44.960
your list item into the data for the async
task and have it load your imaging asynchronously

00:23:44.960 --> 00:23:48.300
and as soon as itís ready, update your list
view.

00:23:48.300 --> 00:23:52.400
And, if you want you could put some place
holder image in there or if you wanna get

00:23:52.400 --> 00:23:57.110
fancy you could go and tie in with the animation
framework and thatíll get you that nice fade

00:23:57.110 --> 00:23:58.110
effect you want.

00:23:58.110 --> 00:24:02.460
If you need some code to get started, since
Danís training course isnít available yet,

00:24:02.460 --> 00:24:08.360
I actually did a code lab at Google OI on
exactly this topic, so if you go to, oh I

00:24:08.360 --> 00:24:16.720
just moved it actually, if you go to the Google
IO website, go to, so I believe thatís code.Google.com/IO,

00:24:16.720 --> 00:24:17.720
possibly?

00:24:17.720 --> 00:24:18.720
That sounds about right.

00:24:18.720 --> 00:24:19.720
Search for Google IO.

00:24:19.720 --> 00:24:25.500
Go to code labs and youíll see a code lab
from me, Trevor Johns, thatíll, I believe

00:24:25.500 --> 00:24:29.420
itís called Android developer tools boot
camp.

00:24:29.420 --> 00:24:32.750
I will add that what youíre trying to do
is not the focus of the code lab but that

00:24:32.750 --> 00:24:36.300
sample code provided did tackle this issue.

00:24:36.300 --> 00:24:42.850
So go there, once again, Android developer
tools boot camp on the code lab section and

00:24:42.850 --> 00:24:47.620
on the right hand side youíll see a link
to download the slides and inside of the slides

00:24:47.620 --> 00:24:50.320
youíll find a link to the sample code.

00:24:50.320 --> 00:24:53.680
Check that sample code out and youíll see
some code thatíll do exactly what youíd

00:24:53.680 --> 00:24:54.680
like to do.

00:24:54.680 --> 00:24:55.680
So, hopefully that helps.

00:24:55.680 --> 00:24:57.970
&gt;&gt;Joe Malin: Yeah, okay.

00:24:57.970 --> 00:25:00.420
Did you use thread pulls and caching in that
example?

00:25:00.420 --> 00:25:01.420
&gt;&gt;Trevor Johns: Ah, I didnít.

00:25:01.420 --> 00:25:03.930
Those were the other things that I was, that
I was trying to remember.

00:25:03.930 --> 00:25:05.230
So, actually, did I use caching?

00:25:05.230 --> 00:25:07.050
I did some in memory caching.

00:25:07.050 --> 00:25:12.350
So, that is another thing you have to watch
out for if youíre fetching images from the

00:25:12.350 --> 00:25:16.320
network or youíre resizing images, things
like that, caching is something youíll definitely

00:25:16.320 --> 00:25:18.750
wanna keep in mind to keep CPU consumption
low.

00:25:18.750 --> 00:25:26.670
Thread pulls are certainly a good way to go
and improve the performance of all this.

00:25:26.670 --> 00:25:29.740
So, again, lots of different ways you can
do it.

00:25:29.740 --> 00:25:34.420
Itís, but the key thing you need to know
is you need to move your image loading out

00:25:34.420 --> 00:25:35.420
of the UI thread.

00:25:35.420 --> 00:25:36.420
&gt;&gt;Joe Malin: Absolutely.

00:25:36.420 --> 00:25:38.630
&gt;&gt;Trevor Johns: Any mechanism you can use
to do that, moving the image out of the UI

00:25:38.630 --> 00:25:42.710
thread, and youíll get the nice, better smooth
scrolling and thatís just simply a matter

00:25:42.710 --> 00:25:45.370
of how do you wanna go and display this data
when it comes it.

00:25:45.370 --> 00:25:47.250
Do you wanna do a fade?

00:25:47.250 --> 00:25:48.250
Do you wanna a spinner?

00:25:48.250 --> 00:25:49.250
What should your place holder image be?

00:25:49.250 --> 00:25:53.550
You know, thatís all decisions thatís up
to you as an application developer.

00:25:53.550 --> 00:25:58.010
&gt;&gt;Alex Lucas: One other thing I noticed, I
donít know if this is true but he mentioned

00:25:58.010 --> 00:26:03.540
that it, it scrolls, like while itís scrolling
quickly none of the images are getting loaded

00:26:03.540 --> 00:26:07.309
and it waits until it slows down before loading
images.

00:26:07.309 --> 00:26:11.820
I was just poking around on the internet to
figure out how this is done and basically

00:26:11.820 --> 00:26:16.950
if you wanna set that up so that it doesnít
bother loading images until the scrolling

00:26:16.950 --> 00:26:23.120
slows down, what you wanna do is override
the on scroll method in the, ìcreate an on

00:26:23.120 --> 00:26:29.370
scroll listener, override the on scroll method"
and thatís gonna pass you a first visible

00:26:29.370 --> 00:26:30.370
item variable.

00:26:30.370 --> 00:26:34.720
What youíre gonna do is check for the last
time the method was called to use to like

00:26:34.720 --> 00:26:40.160
get the current time to figure out the delta
in time between calls to on scroll and check

00:26:40.160 --> 00:26:44.800
the first visible items so that you can, what
this will give you is the number of items

00:26:44.800 --> 00:26:51.540
that have scrolled passed and in the past
10 milliseconds or 100 milliseconds or whatever,

00:26:51.540 --> 00:26:54.940
as soon as that crosses a threshold or you
feel like okay thatís slow enough letís

00:26:54.940 --> 00:27:01.410
start loading images then implement the things
that Trevor was suggesting with the off thread

00:27:01.410 --> 00:27:06.540
caching cause itís, it would make sense that
if youíre shooting past the first half of

00:27:06.540 --> 00:27:12.220
like a thousand item list then you donít
wanna be loading a thousand thumbnails in

00:27:12.220 --> 00:27:13.220
the background.

00:27:13.220 --> 00:27:14.900
&gt;&gt;Trevor Johns: Sounds like a good opportunity
for somebody to go write an open source helper

00:27:14.900 --> 00:27:15.900
library for all of this.

00:27:15.900 --> 00:27:16.900
&gt;&gt;Alex Lucas: Yeah.

00:27:16.900 --> 00:27:17.900
&gt;&gt;Joe Malin: Right.

00:27:17.900 --> 00:27:19.530
&gt;&gt;Alex Lucas: Iím putting you in charge of
that, by the way.

00:27:19.530 --> 00:27:22.410
[Laughter]
&gt;&gt;Alex Lucas: Go nuts.

00:27:22.410 --> 00:27:25.530
&gt;&gt;Joe Malin: Any other comments about this?

00:27:25.530 --> 00:27:28.200
Got some good information there.

00:27:28.200 --> 00:27:31.200
Okay, weíll move on in moderator.

00:27:31.200 --> 00:27:35.161
Concerning privacy, this is an interesting
one, ìConcerning privacy Iíd love to see

00:27:35.161 --> 00:27:40.010
changes in Android that would forbid developers
to retrieve any unique identifier from the

00:27:40.010 --> 00:27:48.040
phone without explicit permission.î My response
is first of all, of course, if you want that

00:27:48.040 --> 00:27:52.520
you should submit a feature request and Iíd
like the panel to comment on that.

00:27:52.520 --> 00:27:55.800
&gt;&gt;Trevor Johns: Um, Iím pretty sure thereís
actually already a feature request open if

00:27:55.800 --> 00:27:56.800
you search through Android.com.

00:27:56.800 --> 00:27:57.800
&gt;&gt;Joe Malin: Okay.

00:27:57.800 --> 00:28:00.990
&gt;&gt;Trevor Johns: With that, yeah, find the
actual existing feature request and star it.

00:28:00.990 --> 00:28:04.600
As weíve mentioned in the past we use the
number of stars as a voting mechanism; the

00:28:04.600 --> 00:28:08.059
items that are starred the most are the ones
that get the most visibility which isnít

00:28:08.059 --> 00:28:12.730
to say we donít look at the others too but
it lets us know how popular something is.

00:28:12.730 --> 00:28:13.730
&gt;&gt;Joe Malin: Right.

00:28:13.730 --> 00:28:18.080
&gt;&gt;Trevor Johns: So we do have various controls
in place to make sure that the more sensitive

00:28:18.080 --> 00:28:20.290
identifiers are not exposed.

00:28:20.290 --> 00:28:27.020
So the IMEI is inside the phone state property
and there is some rather scary, yeah I know

00:28:27.020 --> 00:28:28.430
&gt;&gt;Joe Malin: Itís on there.

00:28:28.430 --> 00:28:31.280
&gt;&gt;Alex Lucas: Itís explicitly called out
as an awkward place to put that.

00:28:31.280 --> 00:28:32.280
&gt;&gt;Trevor Johns: It is.

00:28:32.280 --> 00:28:37.160
We do have some scary warning text around
it which is, in my mind, completely appropriate

00:28:37.160 --> 00:28:40.800
because that is a scary thing to access, as
well as the other information you can get

00:28:40.800 --> 00:28:45.800
with that property is also things youíre
warning the user about.

00:28:45.800 --> 00:28:50.080
There is certainly an argument that we should
move this into a different permission entirely

00:28:50.080 --> 00:28:53.340
and I think thatís valid but itís not something
thatís been implemented yet.

00:28:53.340 --> 00:28:56.650
So, again, an excellent feature request there.

00:28:56.650 --> 00:29:03.980
I will add that the other non secured identifiers
on the phone which would typically be the

00:29:03.980 --> 00:29:11.400
Android secure ID, is not a terribly sensitive
permission in that it is; there is a way to

00:29:11.400 --> 00:29:12.400
reset it.

00:29:12.400 --> 00:29:15.429
Itís a little awkward; itís reset every
time you do a factory reset.

00:29:15.429 --> 00:29:20.900
But there is at least a way to, you know,
itís not as immutable as a hardware ID is,

00:29:20.900 --> 00:29:21.900
so there is that.

00:29:21.900 --> 00:29:28.160
Now, that said, I totally agree with you that
the correct way to do this is to have each

00:29:28.160 --> 00:29:33.360
application generate their own UU ID and then
make sure that, you know, that way thereís

00:29:33.360 --> 00:29:35.690
nothing you can correlate between apps.

00:29:35.690 --> 00:29:41.250
I absolutely agree, Iíve actually filed feature
requests about this myself so maybe at some

00:29:41.250 --> 00:29:45.770
point in the future we might see this but
we canít talk about the road map so I canít

00:29:45.770 --> 00:29:48.610
tell you what is or is not coming.

00:29:48.610 --> 00:29:54.000
But, that said, we do have a very, very lengthy
blog post that goes into a lot of detail trying

00:29:54.000 --> 00:30:02.100
to encourage developers to do the right thing
and, in general as an app developer try, for

00:30:02.100 --> 00:30:09.080
your own userís privacy, try and limit the
scope of what type of identifier youíre requesting.

00:30:09.080 --> 00:30:10.980
&gt;&gt;Joe Malin: Right.

00:30:10.980 --> 00:30:14.390
[Pause]
&gt;&gt;Joe Malin: I would agree with that wholeheartedly,

00:30:14.390 --> 00:30:19.470
in fact, I found this is an interesting question
because thereís lots of developers that also

00:30:19.470 --> 00:30:24.860
contact us saying how, what can I use as a
unique identifier for the device?

00:30:24.860 --> 00:30:31.740
And, in general, following along with Trevorís
comments, we say donít do that for a variety

00:30:31.740 --> 00:30:32.740
of reasons.

00:30:32.740 --> 00:30:37.880
I think my experience has been that developers
are looking for this as a way of securing

00:30:37.880 --> 00:30:44.760
the device against, securing the device for
various reasons like making sure that thereís

00:30:44.760 --> 00:30:47.500
not software piracy and things like that.

00:30:47.500 --> 00:30:54.080
The problem is is that you, that these things,
as pointed out by this question, can become

00:30:54.080 --> 00:30:55.910
security issues.

00:30:55.910 --> 00:31:04.010
So, generating a unique UUID or some other
sort of unique thing that was gonna be unique

00:31:04.010 --> 00:31:07.610
for your app for that device is a better way
of approaching it.

00:31:07.610 --> 00:31:09.760
Any other comments?

00:31:09.760 --> 00:31:11.200
No, alright.

00:31:11.200 --> 00:31:14.670
&gt;&gt;Daniel Pham: We have Lucio on the hangout
again.

00:31:14.670 --> 00:31:15.670
&gt;&gt;Joe Malin: Go ahead.

00:31:15.670 --> 00:31:18.230
&gt;&gt;Daniel Pham: Hey, Lucio, youíre back on.

00:31:18.230 --> 00:31:19.500
&gt;&gt;Joe Malin: Hey.

00:31:19.500 --> 00:31:26.460
&gt;&gt;Lucio: Okay, I have an application that
needs lots of external research like images,

00:31:26.460 --> 00:31:36.320
text files, videos and I have to download
them to access it offline but the client doesnít

00:31:36.320 --> 00:31:40.130
want it to be accessible to everyone on the
SD card.

00:31:40.130 --> 00:31:50.350
So Iíd like to know about techniques to encrypt
them and encrypt on the flag.

00:31:50.350 --> 00:31:54.890
What would I use, something like a special
kind of provide or something?

00:31:54.890 --> 00:31:59.570
&gt;&gt;Trevor Johns: Iím sorry, what type of resources
are you using again?

00:31:59.570 --> 00:32:01.920
&gt;&gt;Lucio: its images, texts, videos.

00:32:01.920 --> 00:32:03.330
&gt;&gt;Trevor Johns: Okay.

00:32:03.330 --> 00:32:06.160
&gt;&gt;Lucio: basically image, text and video.

00:32:06.160 --> 00:32:10.470
&gt;&gt;Trevor Johns: Alright so you wanna take,
basically youíre downloading various content

00:32:10.470 --> 00:32:15.120
and youíre storing it to the SD card but
you wanna keep it restricted to your app.

00:32:15.120 --> 00:32:17.951
&gt;&gt;Lucio: Sorry, the sound.

00:32:17.951 --> 00:32:20.910
&gt;&gt;Trevor Johns: Yeah, I think Iím muted,
Dan.

00:32:20.910 --> 00:32:21.910
Daniel?

00:32:21.910 --> 00:32:24.830
Iím input 1 or no?

00:32:24.830 --> 00:32:28.429
Oh, alright, here I can try and talk louder
is this any better?

00:32:28.429 --> 00:32:29.429
&gt;&gt;Lucio: Yeah.

00:32:29.429 --> 00:32:33.720
&gt;&gt;Trevor Johns: Okay, Iím like shoving the
mic in my face here.

00:32:33.720 --> 00:32:36.200
[Laughs]
&gt;&gt;Trevor Johns: Alright, so basically you

00:32:36.200 --> 00:32:38.930
have all this content which is potentially
large, correct?

00:32:38.930 --> 00:32:42.440
Cause itís images and youíre storing them
to the SD card and you wanna restrict them

00:32:42.440 --> 00:32:43.880
to your app, correct?

00:32:43.880 --> 00:32:45.090
&gt;&gt;Lucio: Yes.

00:32:45.090 --> 00:32:51.670
&gt;&gt;Trevor Johns: Okay, so first things first,
for those who are watching if you, again,

00:32:51.670 --> 00:32:57.950
if you can store data to internal storage,
you have the ability to use file permissions

00:32:57.950 --> 00:33:01.630
and thatís the way to go and keep data, you
know, private within your app.

00:33:01.630 --> 00:33:08.290
Anything you write to the SD card, though,
is potentially viewable by any other application.

00:33:08.290 --> 00:33:12.650
Thereís not an easy way around this.

00:33:12.650 --> 00:33:15.030
There are some techniques you can use.

00:33:15.030 --> 00:33:22.520
I know, again, somebody on our team has been
working on a mechanism to generate a dynamic

00:33:22.520 --> 00:33:25.980
file system and store it inside an encrypted
file.

00:33:25.980 --> 00:33:31.590
We do have some mechanisms like OBB, if you
search through the system, that supports some

00:33:31.590 --> 00:33:37.070
of this but theyíre not well documented and
theyíre not very easy to use.

00:33:37.070 --> 00:33:43.240
So, with that in mind you could just always
take your data and, again, run it through

00:33:43.240 --> 00:33:47.170
some sort of symmetric cipher like AES and
write it out and then when you read it back

00:33:47.170 --> 00:33:49.549
in you can decrypt it the same way.

00:33:49.549 --> 00:33:52.780
The thing you have to keep in mind though
is just youíre gonna have to have as much

00:33:52.780 --> 00:34:00.340
space in memory, you know, for the complete
decrypted content, oh actually even then you

00:34:00.340 --> 00:34:02.490
could probably stream it out decrypted U stream.

00:34:02.490 --> 00:34:08.740
Yeah, so I suggest not encrypting, yeah so
Iíd just say take a look at the crypto libraries,

00:34:08.740 --> 00:34:16.139
I believe itís in, Iím trying to remember
where itís located.

00:34:16.139 --> 00:34:17.560
Java.security, right?

00:34:17.560 --> 00:34:19.429
Donít quote me on that.

00:34:19.429 --> 00:34:21.060
But, take a look through the system.

00:34:21.060 --> 00:34:29.070
You can find the, um, there are built in ways
to perform AES encryption and just go and

00:34:29.070 --> 00:34:33.919
run your data in and out of that as you write
it to disc and thatíll make sure itís encrypted.

00:34:33.919 --> 00:34:37.250
One more thing I would caution is make sure
that youíre changing the file extensions.

00:34:37.250 --> 00:34:42.140
Donít use the default Jpeg, PNG etcetera
extensions cause otherwise media scanner is

00:34:42.140 --> 00:34:45.169
gonna pick up on those and try and read your
content then.

00:34:45.169 --> 00:34:51.320
Even if it is encrypted itís still gonna
try and read them and thatís gonna cause

00:34:51.320 --> 00:34:52.320
errors.

00:34:52.320 --> 00:34:55.990
So, if itís not a readable file make sure
that itís not something that looks like a

00:34:55.990 --> 00:34:56.990
readable file.

00:34:56.990 --> 00:34:58.910
Call it PNGX or something.

00:34:58.910 --> 00:35:06.600
&gt;&gt;Lucio: I watched something in user content
profile [cannot understand], I forgot the

00:35:06.600 --> 00:35:13.850
name, so itís encrypted and down to the other
side the encrypted the stream so I just want

00:35:13.850 --> 00:35:16.680
to know if thatís possible.

00:35:16.680 --> 00:35:17.680
[Laughs]

00:35:17.680 --> 00:35:18.950
&gt;&lt;&gt;Trevor Johns: Yes.

00:35:18.950 --> 00:35:20.650
Absolutely thatís possible.

00:35:20.650 --> 00:35:23.640
Actually, on top of that thereís some good
mechanisms you can use to go and make sure

00:35:23.640 --> 00:35:26.190
that content provider stays private.

00:35:26.190 --> 00:35:31.000
So you can, first off, I believe is it Android
exported or--

00:35:31.000 --> 00:35:32.000
&gt;&gt;Joe Malin: Yeah.

00:35:32.000 --> 00:35:34.930
&gt;&gt;Trevor Johns: Thereís a flag that you can
up, it is?

00:35:34.930 --> 00:35:35.930
&gt;&gt;Joe Malin: Itís exported.

00:35:35.930 --> 00:35:38.180
&gt;&gt;Trevor Johns: Yeah, so you can set Android
exported equals false to make sure that your

00:35:38.180 --> 00:35:41.869
content provider is not visible outside of
your application.

00:35:41.869 --> 00:35:46.330
And if you do wanna make it visible, say to
other applications that youíve developed;

00:35:46.330 --> 00:35:51.470
you can also add a custom permission onto
it thatís guarded by a signature.

00:35:51.470 --> 00:35:57.090
So only applications that use your signature
will be able to access that content provider

00:35:57.090 --> 00:36:01.790
and so, that way your content provider which
is due to your encryption, will only be accessible

00:36:01.790 --> 00:36:02.790
to you.

00:36:02.790 --> 00:36:05.040
&gt;&gt;Lucio: Okay, thanks.

00:36:05.040 --> 00:36:07.370
&gt;&gt;Trevor Johns: Yep.

00:36:07.370 --> 00:36:09.710
&gt;&gt;Joe Malin: Okay.

00:36:09.710 --> 00:36:10.730
Thank you.

00:36:10.730 --> 00:36:15.410
That was an interesting question, yes.

00:36:15.410 --> 00:36:16.760
Anybody else on the hangout?

00:36:16.760 --> 00:36:17.780
&gt;&gt;Daniel Pham: Nope.

00:36:17.780 --> 00:36:20.580
&gt;&gt;Joe Malin: Okay, letís move forward in
moderator.

00:36:20.580 --> 00:36:26.369
ìWhen are you gonna handle .APK file splitting
for over 50 megabyte files on the Google Play

00:36:26.369 --> 00:36:29.450
server side instead of having developers worry
about this?î

00:36:29.450 --> 00:36:31.210
&gt;&gt;Alex Lucas: Like me personally?

00:36:31.210 --> 00:36:34.190
&gt;&gt;Joe Malin: Are you personally worried about
this?

00:36:34.190 --> 00:36:35.580
&gt;&gt;Alex Lucas: Iím not really, no.

00:36:35.580 --> 00:36:36.580
&gt;&gt;Joe Malin: Okay.

00:36:36.580 --> 00:36:37.580
&gt;&gt;Alex Lucas: Okay.

00:36:37.580 --> 00:36:38.580
[Laughs]

00:36:38.580 --> 00:36:39.580
&gt;&gt;Joe Malin: I guess itís Google as a whole.

00:36:39.580 --> 00:36:46.540
&gt;&gt;Alex Lucas: Okay, to sort of split the question
in sub parts, first of all, uploading, for

00:36:46.540 --> 00:36:54.800
instance, a 200 megabyte, letís say, APK
and having our servers magically chop it up

00:36:54.800 --> 00:37:01.570
into smaller pieces that are gonna play nicely
together, I guess do the OBB separation server

00:37:01.570 --> 00:37:05.810
side and then alter the code, I guess, thatís
just not gonna work.

00:37:05.810 --> 00:37:11.900
Thereís no way that we can inspect an APK,
split it up into sub pieces, predict the way

00:37:11.900 --> 00:37:19.359
that the developer is intended for the code
to access the resources and then ,and then

00:37:19.359 --> 00:37:20.880
just like turn it into an OBB.

00:37:20.880 --> 00:37:23.260
Thatís gonna work hind side.

00:37:23.260 --> 00:37:27.780
We do have certain facilities in place, I
assume when you mean, when you refer to having

00:37:27.780 --> 00:37:31.490
the developers worry about this you mean the
OBB functionality.

00:37:31.490 --> 00:37:38.830
We have a lot of, we have Dan Galpin, one
of our teammates wrote some really great sample

00:37:38.830 --> 00:37:43.700
code and the library, like really great help
for library, thatís downloadable via the

00:37:43.700 --> 00:37:48.230
SDK that makes implementing OBB actually not
very hard at all.

00:37:48.230 --> 00:37:54.840
It does the virtual file systems stuff, the
zipping, like the little progress bars just

00:37:54.840 --> 00:37:56.320
handles all that stuff for you.

00:37:56.320 --> 00:38:02.420
We also implemented server side diffs; diffing
so that when you release an update to your

00:38:02.420 --> 00:38:08.230
application only the difference from the previous
version gets downloaded on to the client device.

00:38:08.230 --> 00:38:11.600
I think that was turned on like very recently,
right?

00:38:11.600 --> 00:38:14.740
&gt;&gt;Trevor Johns: Yes, I believe that was turned
on for Jelly Bean.

00:38:14.740 --> 00:38:15.740
&gt;&gt;Joe Malin: Jelly Bean.

00:38:15.740 --> 00:38:16.740
&gt;&gt;Alex Lucas: Jelly Bean, okay.

00:38:16.740 --> 00:38:17.740
&gt;&gt;Trevor Johns: Paid apps on Jelly Bean.

00:38:17.740 --> 00:38:19.040
&gt;&gt;Alex Lucas: Paid apps on Jelly Bean, okay.

00:38:19.040 --> 00:38:23.660
So not for all devices and all versions but
the, I guess this required a certain amount

00:38:23.660 --> 00:38:27.580
of framework support to implement, so, itís
not quite back portable.

00:38:27.580 --> 00:38:29.740
But going forward, diffs are available there.

00:38:29.740 --> 00:38:33.330
&gt;&gt;Trevor Johns: Actually, wait, I think back,
the diffs are for all apps on Jelly Bean.

00:38:33.330 --> 00:38:34.750
Yeah, not just paid.

00:38:34.750 --> 00:38:36.120
&gt;&gt;Alex Lucas: All apps on Jelly Bean.

00:38:36.120 --> 00:38:37.120
&gt;&gt;Trevor Johns: All apps on Jelly Bean.

00:38:37.120 --> 00:38:38.120
I was thinking of the encryption.

00:38:38.120 --> 00:38:41.160
&gt;&gt;Alex Lucas: Right, the encryption is paid
only but diffs are

00:38:41.160 --> 00:38:46.400
&gt;&gt;Trevor Johns: Diffs are for all apps on
Jelly Bean and above.

00:38:46.400 --> 00:38:47.400
&gt;&gt;Alex Lucas: Great.

00:38:47.400 --> 00:38:48.400
Okay.

00:38:48.400 --> 00:38:51.460
&gt;&gt;Trevor Johns: Iíll also; Iíll add one
more comments here and maybe cast a little

00:38:51.460 --> 00:38:55.190
bit of light on why things behave the way
they do.

00:38:55.190 --> 00:39:01.150
So when you download an APK, there is a dedicated
partition in your phone called decache partition

00:39:01.150 --> 00:39:05.220
and thatís where the APK is stored before
itís installed.

00:39:05.220 --> 00:39:11.590
And, on most phones, the cache partition,
historically, has been limited to 50 megabytes.

00:39:11.590 --> 00:39:14.480
And thatís where that 50 megabyte limit comes
from.

00:39:14.480 --> 00:39:19.380
So if you try and install an APK thatís larger
than 50 megabytes it does not fit in the cache

00:39:19.380 --> 00:39:21.560
partition and the download fails.

00:39:21.560 --> 00:39:25.630
So this is a technical limitation of Android
devices.

00:39:25.630 --> 00:39:31.880
Like Alex said, we canít, you know, magically
split your APKs up into smaller chunks and

00:39:31.880 --> 00:39:36.130
we similarly canít accept a large APK and
try and push that to devices because devices

00:39:36.130 --> 00:39:38.490
physically cannot accept a larger APK.

00:39:38.490 --> 00:39:42.830
So that, hopefully that at least explains
why things are the way they are.

00:39:42.830 --> 00:39:44.750
Alright, letís move onto the next question.

00:39:44.750 --> 00:39:47.110
&gt;&gt;Joe Malin: Alright, Iím right there.

00:39:47.110 --> 00:39:51.260
ìDo you plan on adding an FM tuner API?

00:39:51.260 --> 00:39:56.880
Itís the only phone hardware that lacks proper
Android support and as a result are hardly

00:39:56.880 --> 00:40:04.600
any apps for FM radio.î The issue is quite
popular and it cites code.Google.com, issues

00:40:04.600 --> 00:40:12.109
detail, so Iím assuming that thereís a feature
request thatís been very popular.

00:40:12.109 --> 00:40:13.109
Comments?

00:40:13.109 --> 00:40:16.890
&gt;&gt;Trevor Johns: We canít talk about the Android
road map so, you know, the feature request

00:40:16.890 --> 00:40:21.090
is definitely in the system, weíre aware
of it but I canít tell you what our plans

00:40:21.090 --> 00:40:22.090
are going forward.

00:40:22.090 --> 00:40:27.700
&gt;&gt;Joe Malin: Right, we donít have, we donít
even have the time machine sitting here right

00:40:27.700 --> 00:40:28.700
now.

00:40:28.700 --> 00:40:29.750
[Laughter]
&gt;&gt;Joe Malin: I think itís on one of the back

00:40:29.750 --> 00:40:30.750
shelves.

00:40:30.750 --> 00:40:31.750
Thatís how broken it is.

00:40:31.750 --> 00:40:34.140
&gt;&gt;Alex Lucas: Either that or itís working
and itís somewhere else.

00:40:34.140 --> 00:40:35.890
&gt;&gt;Joe Malin: Right, itís off some place.

00:40:35.890 --> 00:40:39.072
&gt;&gt;Alex Lucas: Yeah, or some time.

00:40:39.072 --> 00:40:40.072
&gt;&gt;Joe Malin: Really.

00:40:40.072 --> 00:40:43.770
Some time and some place, okay, so we canít
predict, we canít comment about the future

00:40:43.770 --> 00:40:46.080
and weíll have to move on to the next question.

00:40:46.080 --> 00:40:49.620
ìIím trying to draw a larger bit map on
canvas.

00:40:49.620 --> 00:40:54.480
When I scale Iím having a hard time scaling
while keeping the central point constant.

00:40:54.480 --> 00:41:00.350
Iím doing a canvas.save, canvas.scale and
I need a little help with the canvas.translate.î

00:41:00.350 --> 00:41:06.700
&gt;&gt;Trevor Johns: Yes and inside the comments,
Adam, the person which originally asked the

00:41:06.700 --> 00:41:07.710
question, posted a large block of code.

00:41:07.710 --> 00:41:09.700
&gt;&gt;Joe Malin: Yeah, oh, yeah he did.

00:41:09.700 --> 00:41:14.010
&gt;&gt;Trevor Johns: So, unfortunately I donít
think weíre gonna be able to, this is another

00:41:14.010 --> 00:41:17.020
one where we canít answer it on the air but,
because weíre gonna have to sit down with

00:41:17.020 --> 00:41:18.790
a white board and figure out what youíre
doing.

00:41:18.790 --> 00:41:20.170
[Laughs]
&gt;&gt;Trevor Johns: So, I donít know the answer

00:41:20.170 --> 00:41:21.870
off the top of my head.

00:41:21.870 --> 00:41:26.020
I think this is another excellent candidate
for opening up a question on stack overflow

00:41:26.020 --> 00:41:27.800
and then we can address this offline.

00:41:27.800 --> 00:41:32.690
&gt;&gt;Joe Malin: Okay, yes, please post it to
stack overflow.

00:41:32.690 --> 00:41:36.510
&gt;&gt;Alex Lucas: Also, please include a link
in the comments on the moderator so we can

00:41:36.510 --> 00:41:38.480
then find it on stack overflow.

00:41:38.480 --> 00:41:40.830
&gt;&gt;Joe Malin: Right.

00:41:40.830 --> 00:41:41.830
Definitely.

00:41:41.830 --> 00:41:47.470
ìHow do you enable a one by one widget to
go in a folder like some of the stock widgets

00:41:47.470 --> 00:41:49.060
like the stock content widget?

00:41:49.060 --> 00:41:51.619
Is it documented somewhere?

00:41:51.619 --> 00:41:55.830
I couldnít find anything about it in the
API guide overview or search.î

00:41:55.830 --> 00:42:01.770
&gt;&gt;Trevor Johns: This is an excellent question
and, unfortunately, I have to admit everyone

00:42:01.770 --> 00:42:04.850
here in the studio was stumped as well.

00:42:04.850 --> 00:42:06.370
We still are stumped, actually.

00:42:06.370 --> 00:42:10.280
We spent, you know, quite a few minutes before
the show trying to figure this out and we

00:42:10.280 --> 00:42:12.580
werenít able to solve it by the time we went
on the air.

00:42:12.580 --> 00:42:16.930
So, again, this is another one please post
to the stack overflow and weíll get back

00:42:16.930 --> 00:42:17.930
to you with an answer.

00:42:17.930 --> 00:42:20.960
I personally am really curious knowing how
this works myself.

00:42:20.960 --> 00:42:27.280
So just hold tight, weíll get you an answer
but we canít get you an answer on the air.

00:42:27.280 --> 00:42:30.040
&gt;&gt;Joe Malin: Thank you.

00:42:30.040 --> 00:42:31.630
Weíll move on.

00:42:31.630 --> 00:42:37.119
ìHi, Iíd like to sync data using a content
provider but the normal SQLite database does

00:42:37.119 --> 00:42:40.480
not fulfill my needs which are for static
columns.

00:42:40.480 --> 00:42:45.540
How can I properly implement a content provider
that is using a no SQL database to manage

00:42:45.540 --> 00:42:47.570
the incoming data?î

00:42:47.570 --> 00:42:56.230
&gt;&gt;Alex Lucas: Itís a little difficult to
answer cause itís quite a generic question.

00:42:56.230 --> 00:43:02.180
Thereís nothing about, thereís nothing about
content providers that are particularly optimized

00:43:02.180 --> 00:43:05.100
or designed for Sequel databases specific.

00:43:05.100 --> 00:43:10.380
&gt;&gt;Trevor Johns: Well, there are parts that
are; the content provider model does have

00:43:10.380 --> 00:43:11.580
this notion of columns.

00:43:11.580 --> 00:43:12.609
&gt;&gt;Alex Lucas: Oh, right.

00:43:12.609 --> 00:43:17.710
&gt;&gt;Trevor Johns: Yeah, you do have a fixed
list of columns and if you donít have that,

00:43:17.710 --> 00:43:20.609
content provider, you have this impedance
mismatch thatís gonna make it a little bit

00:43:20.609 --> 00:43:21.750
difficult to use.

00:43:21.750 --> 00:43:28.760
Now, I think one way you could do this is
actually just take your data and, you know,

00:43:28.760 --> 00:43:32.490
rotate it and make it into key value pairs
so, you know, each key would be a column and

00:43:32.490 --> 00:43:36.580
each value would be the contents of that column.

00:43:36.580 --> 00:43:41.080
Basically you just have two columns, right,
youíd have your key column, youíd have your

00:43:41.080 --> 00:43:44.040
value column and then youíd iterate through
that for each record.

00:43:44.040 --> 00:43:48.040
So, you would then have to go two levels deep,
right, youíd have your first record which

00:43:48.040 --> 00:43:52.770
would be a pointer to your key value collection
and then you would have a second set, you

00:43:52.770 --> 00:43:57.010
know, a second collection of records which
is each key value pair from your table.

00:43:57.010 --> 00:44:04.890
Now, Iíll also give a plug to, you know,
thereís things like CouchDB for Android which

00:44:04.890 --> 00:44:09.150
I havenít used personally but itíd be interesting
to see how they go an approach this and whether

00:44:09.150 --> 00:44:11.670
or not they provide any functionality for
you out of the box.

00:44:11.670 --> 00:44:16.220
But I think thatís gonna be the only way
you can actually solve this while actually

00:44:16.220 --> 00:44:18.000
using a content provider.

00:44:18.000 --> 00:44:23.119
&gt;&gt;Alex Lucas: Is that solution gonna be generally
workable across all no Sequel?

00:44:23.119 --> 00:44:26.910
I mean, are all no Sequel databases structured
roughly the same way?

00:44:26.910 --> 00:44:33.280
&gt;&gt;Trevor Johns: Most of them do have the appearance
of, you know, you have a record which contains

00:44:33.280 --> 00:44:39.180
a number of fields, you know, which is equivalent
to a column in a Sequel database.

00:44:39.180 --> 00:44:45.890
But typically those fields are mutable, right,
you donít have a fixed scheme for each record

00:44:45.890 --> 00:44:47.980
and thatís where the problem comes from.

00:44:47.980 --> 00:44:52.510
So, most of them still do have something similar
to a column itís just that columns can change.

00:44:52.510 --> 00:44:57.450
So, thatís where the problem is gonna come
from and most of them do follow that general

00:44:57.450 --> 00:44:58.450
model.

00:44:58.450 --> 00:45:02.720
&gt;&gt;Joe Malin: Well, but do the number of, just
off the top of my head, do the number of columns

00:45:02.720 --> 00:45:04.050
in a record change?

00:45:04.050 --> 00:45:05.320
&gt;&gt;Trevor Johns: Yeah, they can.

00:45:05.320 --> 00:45:10.109
Now, you could go and just have, you know,
say Iím gonna support up to 20 columns or

00:45:10.109 --> 00:45:15.450
up to 200 columns and just name them your
data one, data two, data three and youíd

00:45:15.450 --> 00:45:19.240
need some sort of, youíd still need some
way to go and, you know, map those columns

00:45:19.240 --> 00:45:20.840
to the actual field names.

00:45:20.840 --> 00:45:22.119
&gt;&gt;Joe Malin: Right.

00:45:22.119 --> 00:45:25.260
&gt;&gt;Trevor Johns: But, if it works for your
app that might be a work around.

00:45:25.260 --> 00:45:29.910
&gt;&gt;Joe Malin: I was gonna say that if thatís
the sort of thing that youíre talking about,

00:45:29.910 --> 00:45:38.000
we use that styled implementation for the
contacts provider which is where we store

00:45:38.000 --> 00:45:43.750
contact information that the people app in
Jelly Bean uses that content provider and

00:45:43.750 --> 00:45:51.090
it has the concept in its data table of, Iím
not sure how I would put it.

00:45:51.090 --> 00:45:54.590
&gt;&gt;Trevor Johns: You have to look up tables
that match column names to--

00:45:54.590 --> 00:45:56.710
&gt;&gt;Joe Malin: Itís not really a look up table.

00:45:56.710 --> 00:46:03.370
What it is is that data has-- records all
have a fixed number of columns but then the

00:46:03.370 --> 00:46:08.390
semantics of the column changes depending
on what the mind type of the record is.

00:46:08.390 --> 00:46:09.390
&gt;&gt;Trevor Johns: Right.

00:46:09.390 --> 00:46:12.920
&gt;&gt;Joe Malin: So if you read, read a record
and you know that itís mind type is a phone

00:46:12.920 --> 00:46:19.090
mind type then the data one column maps to
something thatís really a phone number.

00:46:19.090 --> 00:46:20.090
&gt;&gt;Trevor Johns: Right.

00:46:20.090 --> 00:46:22.070
A lot of these databases, even with the, you
know, similar record type, the fields can

00:46:22.070 --> 00:46:23.580
change, thatíd be difficult.

00:46:23.580 --> 00:46:24.710
&gt;&gt;Joe Malin: Right.

00:46:24.710 --> 00:46:29.920
&gt;&gt;Trevor Johns: But if you do have at least
some stability there that might be work around.

00:46:29.920 --> 00:46:34.119
One other thing that actually just popped
into my head and I have no clue how this all

00:46:34.119 --> 00:46:38.310
actually would work for you, but you could
just, again, go in and find a number of anonymous

00:46:38.310 --> 00:46:44.920
columns, data one, data two, data three etcetera,
and place a, you know, the name of the column

00:46:44.920 --> 00:46:46.730
as the first part of the value.

00:46:46.730 --> 00:46:49.310
So, you know, say youíre storing a person
record, right?

00:46:49.310 --> 00:46:55.119
Data one, the value could be first name colon,
you know, John, data two would be last name

00:46:55.119 --> 00:46:56.840
colon Doe.

00:46:56.840 --> 00:47:02.270
And then read in all of those and then run
each of those through split to go and extract

00:47:02.270 --> 00:47:05.090
what the, the type of the field is.

00:47:05.090 --> 00:47:06.090
&gt;&gt;Joe Malin: Yeah.

00:47:06.090 --> 00:47:10.160
&gt;&gt;Alex Lucas: That sounds like a, I mean that
sounds workable and it does sound like a bit

00:47:10.160 --> 00:47:11.220
of a wedge

00:47:11.220 --> 00:47:12.220
&gt;&gt;Trevor Johns: Oh, yeah.

00:47:12.220 --> 00:47:14.690
&gt;&gt;Alex Lucas: to getting a, like, no sequel
database into sequel lite

00:47:14.690 --> 00:47:15.690
&gt;&gt;Joe Malin: Right.

00:47:15.690 --> 00:47:18.320
&gt;&gt;Trevor Johns: Well, Well thatís what youíre
doing; I mean, the provider was modeled around

00:47:18.320 --> 00:47:19.870
the idea of a Sequel database.

00:47:19.870 --> 00:47:25.440
&gt;&gt;Alex Lucas: Not, you can back end a content
provider with, like letís say, a file or

00:47:25.440 --> 00:47:28.430
shared preferences or something like that,
itís an abstraction.

00:47:28.430 --> 00:47:32.050
&gt;&gt;Trevor Johns: Right, but itís still gonna
go and, you know, it still has the mechanism

00:47:32.050 --> 00:47:35.970
for lookups, you know, thereís still a lot
of stuff in there that assumes you have these

00:47:35.970 --> 00:47:40.200
columns and the columns donít have to map
to a Sequel database but you still do have

00:47:40.200 --> 00:47:41.200
a fixed set of columns.

00:47:41.200 --> 00:47:46.680
&gt;&gt;Joe Malin: I would say that the idea that
the content provider is, is that it has semantics

00:47:46.680 --> 00:47:54.150
for specifying queries and modifications and
it also has semantics for what the return

00:47:54.150 --> 00:48:00.730
value, what should be returned and other than
that it doesnít specify anything about the

00:48:00.730 --> 00:48:02.010
implementation.

00:48:02.010 --> 00:48:08.080
This means that if you have something which
doesnít fit into the normal structure of

00:48:08.080 --> 00:48:13.180
a sequel lite database then youíre gonna
have to do more work inside the content provider.

00:48:13.180 --> 00:48:18.570
And itís really difficult for us to give
a definitive answer about what that work would

00:48:18.570 --> 00:48:23.660
be if, other than being able to look in detail
at your problem.

00:48:23.660 --> 00:48:31.160
But, what weíve covered is, thereís a way
to mimic no SQL databases with SQL like databases

00:48:31.160 --> 00:48:35.790
by, you know, using generic columns, is what
I would use.

00:48:35.790 --> 00:48:42.460
Thereís ways of doing it with storing the
information about a column in the column and

00:48:42.460 --> 00:48:49.570
then thereís ways of doing it by just having
a no SQL database within the content provider

00:48:49.570 --> 00:48:51.040
and then doing transformations.

00:48:51.040 --> 00:48:56.910
&gt;&gt;Trevor Johns: And Iím gonna recommend one
other possible work around here and I feel

00:48:56.910 --> 00:49:01.790
guilty recommending this cause itís not the
Android way but you could actually create

00:49:01.790 --> 00:49:08.599
a service and add a binder interface thatíll
let you, you know, actually, you know, transfer

00:49:08.599 --> 00:49:13.190
the data in whatever format you like and avoid
the content provider interface.

00:49:13.190 --> 00:49:17.570
If youíre exporting your data to other applications
this is probably not the right way to go but

00:49:17.570 --> 00:49:22.830
if this data is only being consumed within
your applications then that suddenly becomes

00:49:22.830 --> 00:49:24.220
a lot more workable.

00:49:24.220 --> 00:49:28.210
Or, even if it does other applications you
could even ship a client library or something

00:49:28.210 --> 00:49:30.010
like that but, again, thatís not really the
Android way.

00:49:30.010 --> 00:49:34.010
I want to discourage you from doing that but
within the context of your own application

00:49:34.010 --> 00:49:37.290
you have a bit more freedom and binder might
be a solution.

00:49:37.290 --> 00:49:43.290
&gt;&gt;Joe Malin: I would also encourage you to,
put this question on stack overflow and give

00:49:43.290 --> 00:49:46.609
as much detail as possible to the extent that
you can.

00:49:46.609 --> 00:49:50.960
The reason that I say that is that this doesnít
give us very much information about what youíre

00:49:50.960 --> 00:49:58.310
trying to do and the problem space very often
suggests solutions that we wouldnít suggest

00:49:58.310 --> 00:49:59.480
otherwise.

00:49:59.480 --> 00:50:03.160
First of all you might get somebody else out
there whose solved a similar problem and has

00:50:03.160 --> 00:50:10.000
it working or by knowing more about what youíre
actually trying to do we can help you out

00:50:10.000 --> 00:50:17.030
as well and, and the rules are generally put
it onto stack overflow and then post the link

00:50:17.030 --> 00:50:18.840
into our moderator.

00:50:18.840 --> 00:50:25.040
&gt;&gt;Trevor Johns: I like this question, though,
cause it was, it opened up a bit of debate

00:50:25.040 --> 00:50:26.040
here.

00:50:26.040 --> 00:50:27.040
[Laughter]

00:50:27.040 --> 00:50:29.330
&gt;&gt;Alex Lucas: We all have different ways that
we would implement it.

00:50:29.330 --> 00:50:34.660
I think you would, you would go with turning
to a sequel lite database, I would go with

00:50:34.660 --> 00:50:38.710
skip sequel lite entirely and put all the
work in the content provider.

00:50:38.710 --> 00:50:42.240
&gt;&gt;Trevor Johns: I was not saying turn it into
a sequel lite database.

00:50:42.240 --> 00:50:43.240
&gt;&gt;Joe Malin: No.

00:50:43.240 --> 00:50:46.570
&gt;&gt;Trevor Johns: My answer was youíre putting
all this work into the content provider; itís

00:50:46.570 --> 00:50:51.520
just how are you exposing the data within
the framework that content provider exposes.

00:50:51.520 --> 00:50:52.520
&gt;&gt;Alex Lucas: Okay.

00:50:52.520 --> 00:50:53.520
Gotcha.

00:50:53.520 --> 00:50:55.780
&gt;&gt;Trevor Johns: What is your output gonna
look like given the content provider does

00:50:55.780 --> 00:51:00.490
enforce a set of restrictions on how that
can work?

00:51:00.490 --> 00:51:01.490
&gt;&gt;Alex Lucas: Okay.

00:51:01.490 --> 00:51:02.490
&gt;&gt;Joe Malin: Okay.

00:51:02.490 --> 00:51:07.430
I think that just the generalized nature of
content providers does lead to debate.

00:51:07.430 --> 00:51:14.700
I would, for instance, debate the idea that
content provider, makes restrictions.

00:51:14.700 --> 00:51:22.060
It has a certain set of semantics that give
you a lot of leeway, sometimes they donít

00:51:22.060 --> 00:51:23.060
work.

00:51:23.060 --> 00:51:27.940
So, but theyíre not meant to be restrictive
and, having said that, Iím gonna go on cause

00:51:27.940 --> 00:51:29.600
Iím the moderator.

00:51:29.600 --> 00:51:31.160
Ha.

00:51:31.160 --> 00:51:34.370
Next question, ìIím creating a gallery with
pinch zoom.

00:51:34.370 --> 00:51:39.780
As I see it there are two options; use the
UI toolkit or two, extract parts of Androidís

00:51:39.780 --> 00:51:42.660
built in gallery app, itís open source.

00:51:42.660 --> 00:51:44.150
Which approach is recommended?

00:51:44.150 --> 00:51:46.540
Or is there another approach that would be
better?î

00:51:46.540 --> 00:51:47.540
[Pause]

00:51:47.540 --> 00:51:52.420
&gt;&gt;Alex Lucas: Wanna take a crack at this one?

00:51:52.420 --> 00:51:53.420
[Laughter]

00:51:53.420 --> 00:51:55.430
&gt;&gt;Trevor Johns: Just throw me into the fire
here.

00:51:55.430 --> 00:51:57.430
[Laughter]
&gt;&gt;Trevor Johns: Oh boy.

00:51:57.430 --> 00:52:01.030
&gt;&gt;Joe Malin: Thereís no debate about this
one, Trevorís gonna answer it.

00:52:01.030 --> 00:52:02.030
&gt;&gt;Alex Lucas: Right.

00:52:02.030 --> 00:52:03.460
&gt;&gt;Trevor Johns: Pinch Zoom is difficult to
do.

00:52:03.460 --> 00:52:08.000
I donít have any really good recommendations
off the top of my head other than look at

00:52:08.000 --> 00:52:09.540
how the existing code does it.

00:52:09.540 --> 00:52:13.190
Iím not aware of, thereís probably some
client libraries out there cause it is a common

00:52:13.190 --> 00:52:18.170
enough problem but Iím not familiar with
what they are off the top of my head but the

00:52:18.170 --> 00:52:21.670
gallery is open source, you are welcome to
go and take parts of it and use it in your

00:52:21.670 --> 00:52:26.470
own code and if I were doing this myself,
thatís probably where Iíd start.

00:52:26.470 --> 00:52:29.609
&gt;&gt;Joe Malin: I would certainly agree.

00:52:29.609 --> 00:52:33.330
Weíll move on since weíre running low on
time.

00:52:33.330 --> 00:52:38.840
ìIs there a way to provide a custom icon
to display when registering for the new action

00:52:38.840 --> 00:52:42.180
assistant intent instead of showing the generic
search icon?

00:52:42.180 --> 00:52:47.440
If so, what res do the assets need to be and
what are the restrictions, ability to change

00:52:47.440 --> 00:52:49.260
your icon and runtime etcetera?î

00:52:49.260 --> 00:52:57.360
&gt;&gt;Trevor Johns: So, action assist uses something
called a labeled intent which, unfortunately,

00:52:57.360 --> 00:53:01.470
nobody on our team has actually had the pleasure
of working with yet.

00:53:01.470 --> 00:53:05.420
As of two hours ago, Iíd asked a number of
people and they actually never heard of labeled

00:53:05.420 --> 00:53:06.420
intent before.

00:53:06.420 --> 00:53:08.580
So, I donít know the answer yet.

00:53:08.580 --> 00:53:13.400
Itís new, Iím really curious again to know
what the answer is here so please post a question

00:53:13.400 --> 00:53:16.420
on stack overflow so we can research this
and get an answer to you.

00:53:16.420 --> 00:53:20.460
I suspect the answer, well the answer has
to be either you canít do it or there is

00:53:20.460 --> 00:53:21.460
a way to do it.

00:53:21.460 --> 00:53:25.940
Iím leaning a little bit more towards the
opinion that it might not be possible but

00:53:25.940 --> 00:53:30.380
Iím not a hundred percent sure yet so give
us some more time, post something on stack

00:53:30.380 --> 00:53:35.530
overflow and weíll get you a definitive answer
there from the framework team.

00:53:35.530 --> 00:53:37.950
&gt;&gt;Joe Malin: Okay, thank you.

00:53:37.950 --> 00:53:43.109
Next question, ìCan I, can you point me to
some sample code that I can use to put images

00:53:43.109 --> 00:53:50.300
I download within my app from my server, images
taken in my app via camera into an app specific

00:53:50.300 --> 00:53:54.820
album similar to how Facebook and many other
apps do it?î

00:53:54.820 --> 00:54:01.740
&gt;&gt;Trevor Johns: So, I canít point you to
sample code cause Iím not aware of any but

00:54:01.740 --> 00:54:06.970
I can tell you what you wanna do and what
you wanna do is, well thereís two approaches

00:54:06.970 --> 00:54:08.160
you can do, actually.

00:54:08.160 --> 00:54:14.250
The easy one is create a folder with a nice
descriptive name on the external storage,

00:54:14.250 --> 00:54:19.870
so the SD card, and place your images there
and then media scanner periodically scans

00:54:19.870 --> 00:54:23.220
through those and will automatically add those
as a source in gallery.

00:54:23.220 --> 00:54:25.710
So thatís the easy way to go about doing
this.

00:54:25.710 --> 00:54:33.221
Now, the correct way to go about doing this
is to use the media provider and, you know,

00:54:33.221 --> 00:54:37.680
programmatically insert a record for each
of your images into media provider.

00:54:37.680 --> 00:54:41.060
Unfortunately the docs on media provider are
pretty sparse.

00:54:41.060 --> 00:54:46.660
It is listed in the API reference if you search
for, Android.provider there are some entries

00:54:46.660 --> 00:54:50.190
in there for media and thatís what you wanna
go about doing.

00:54:50.190 --> 00:54:53.950
Inserting data into any provider is the same
so if youíre using, you know, thereís plenty

00:54:53.950 --> 00:54:55.670
of docs on content provider, for example.

00:54:55.670 --> 00:54:58.680
Thatíd probably be a good start if youíre
not familiar with how the provider system

00:54:58.680 --> 00:55:03.280
works and then once youíre familiar with
that, read up on media provider and hopefully

00:55:03.280 --> 00:55:05.290
thatíll make, make some sense to you.

00:55:05.290 --> 00:55:10.570
Yeah, so youíll basically make a record for
each image you wanna display and thereís

00:55:10.570 --> 00:55:12.599
some fields that go an add additional Meta
data.

00:55:12.599 --> 00:55:17.230
And thatíll get you, you know, something
a lot similar to what Picasa and Facebook

00:55:17.230 --> 00:55:19.840
do cause thatís what they do.

00:55:19.840 --> 00:55:24.410
Unfortunately, again, not much in the way
of sample code or documentations specific

00:55:24.410 --> 00:55:29.619
to media provider other than whatís in the
API reference.

00:55:29.619 --> 00:55:33.790
So, hopefully that gets you at least half
way there.

00:55:33.790 --> 00:55:36.130
&gt;&gt;Joe Malin: Thank you again, Trevor.

00:55:36.130 --> 00:55:40.099
Question, ìWith ICS individual notification
peaks were disabled.

00:55:40.099 --> 00:55:44.260
Now user needs to open notification drawer
to get notification details.

00:55:44.260 --> 00:55:50.020
Is there a specific reason for that decision
about not allowing notification peak view?

00:55:50.020 --> 00:55:52.470
I apologize if this is a duplicate.î

00:55:52.470 --> 00:55:56.990
&gt;&gt;Trevor Johns: Does anyone know what notification
peak view actually is?

00:55:56.990 --> 00:56:01.589
&gt;&gt;Joe Malin: I, the only thing I can think
of is that heís talking about the expanded

00:56:01.589 --> 00:56:02.860
view of notifications.

00:56:02.860 --> 00:56:04.420
&gt;&gt;Trevor Johns: Right, but we didnít have
those in ICS.

00:56:04.420 --> 00:56:05.420
&gt;&gt;Joe Malin: Right.

00:56:05.420 --> 00:56:06.420
&gt;&gt;Trevor Johns: Those are new to Jelly Bean.

00:56:06.420 --> 00:56:07.440
&gt;&gt;Joe Malin: Yeah.

00:56:07.440 --> 00:56:13.339
&gt;&gt;Alex Lucas: I think on like Honeycomb when
you received a, letís say you got an email,

00:56:13.339 --> 00:56:18.280
without, without popping up that notification
list there would be a little, it was almost

00:56:18.280 --> 00:56:21.079
like a toast, they would just sort of flash
on ìreceived an emailî blah, blah, blah.

00:56:21.079 --> 00:56:22.079
&gt;&gt;Trevor Johns: Okay.

00:56:22.079 --> 00:56:23.400
&gt;&gt;Alex Lucas: And it would disappear again.

00:56:23.400 --> 00:56:26.060
&gt;&gt;Trevor Johns: Which doesnít work too well
on phones.

00:56:26.060 --> 00:56:27.060
&gt;&gt;Alex Lucas: Right.

00:56:27.060 --> 00:56:28.060
&gt;&gt;Joe Malin: Right.

00:56:28.060 --> 00:56:36.110
&gt;&gt;Alex Lucas: Iím curious if this is specific
to the phone or 7 inch tablet size or if it

00:56:36.110 --> 00:56:37.570
goes all the way to the 10 inch.

00:56:37.570 --> 00:56:41.670
&gt;&gt;Trevor Johns: Yeah, itís possible that
it might just be disabled on phone size devices

00:56:41.670 --> 00:56:47.859
which, for the large part, does include Nexus
7, a lot of the phone UI conventions are also

00:56:47.859 --> 00:56:51.930
carried to the Nexus 7, for example, your
notification bar is on the top of the screen

00:56:51.930 --> 00:56:53.210
as opposed to on the bottom.

00:56:53.210 --> 00:56:58.710
So, Iím curious to see if you still see that
behavior on a proper tablet device writing

00:56:58.710 --> 00:57:00.070
Jelly Bean.

00:57:00.070 --> 00:57:06.960
And, to my knowledge, I havenít heard anything
about this changing so my gut feeling is itíll

00:57:06.960 --> 00:57:07.960
probably still work.

00:57:07.960 --> 00:57:14.320
&gt;&gt;Joe Malin: I would say that thereís no
particular API to either enable or disable

00:57:14.320 --> 00:57:18.920
this so itís probably just a feature of how
large the screen real estate is.

00:57:18.920 --> 00:57:19.920
&gt;&gt;Trevor Johns: Right.

00:57:19.920 --> 00:57:25.830
&gt;&gt;Joe Malin: And thatís probably why it happened
is that some sort of design decision was made

00:57:25.830 --> 00:57:31.320
about how to most effectively show notifications.

00:57:31.320 --> 00:57:34.930
Since weíre running low on time I wanna move
forward, here.

00:57:34.930 --> 00:57:42.760
ìWhy should I use the new small width identifier
that is layout SW7 and 20DP when itís only

00:57:42.760 --> 00:57:45.520
available for Android 3.2 plus?

00:57:45.520 --> 00:57:52.570
Iím building an app targeting Android 3.0
plus for normal to extra large screen devices.î

00:57:52.570 --> 00:57:55.690
&gt;&gt;Trevor Johns: So this is, thatís not small
width thatís smallest width.

00:57:55.690 --> 00:57:56.690
&gt;&gt;Joe Malin: Right.

00:57:56.690 --> 00:58:01.090
&gt;&gt;Trevor Johns: And the answers to why you
would wanna use it, and itís not just, you

00:58:01.090 --> 00:58:06.329
know, SW320 itís SW and any number.

00:58:06.329 --> 00:58:09.770
And the reason youíd wanna use that is cause
itís a lot more flexible.

00:58:09.770 --> 00:58:17.390
It turns out that thereís this grey area
right around 5 to 7 inches where itís not

00:58:17.390 --> 00:58:21.880
really clear whether or not something is a
tablet or a phone, itís sort of this tweener

00:58:21.880 --> 00:58:24.670
device, is what we sort of informally called
them.

00:58:24.670 --> 00:58:28.490
A good example of this would be the Dell streak.

00:58:28.490 --> 00:58:32.970
And, depending on the app, sometimes it makes
sense to treat it as a phone, sometimes it

00:58:32.970 --> 00:58:37.089
makes sense to treat it as a tablet and sometimes
it makes sense to do an entirely separate

00:58:37.089 --> 00:58:38.500
UI.

00:58:38.500 --> 00:58:42.810
On top of that, you know, we have the Nexus
7 and then, you know, a large device like

00:58:42.810 --> 00:58:48.940
Zoom and, again, you may wanna do different
UIs for those and itís not, basically the

00:58:48.940 --> 00:58:56.770
entire large screen bucket is ambiguous and
then add to that that you now have all these,

00:58:56.770 --> 00:58:58.910
you know, a lot of different tablet sizes
as well.

00:58:58.910 --> 00:59:04.850
Itís not, itís not always clear how you
wanna break up your UIs, we just give you

00:59:04.850 --> 00:59:08.611
a lot more flexibility, thatís the reason
why is more flexible, we leave the decision

00:59:08.611 --> 00:59:11.940
up to you as a developer where it makes sense
to draw the line, where you have a tablet

00:59:11.940 --> 00:59:15.010
UI, a phone UI, do you have multiple tablet
UIs?

00:59:15.010 --> 00:59:16.710
Do you have multiple phone UIs?

00:59:16.710 --> 00:59:21.070
You know, itís just, using those screen buckets
was too complicated, theyíre still there,

00:59:21.070 --> 00:59:24.660
we still support them, youíre still welcome
to use them if they work for you keep using

00:59:24.660 --> 00:59:28.079
them but keep in mind that the new options
are more flexible.

00:59:28.079 --> 00:59:34.190
&gt;&gt;Joe Malin: Okay and I think weíll take
our last question now, ìInput method manager

00:59:34.190 --> 00:59:40.620
hides soft input from input method and windows
sets soft input mode window manager layout

00:59:40.620 --> 00:59:44.230
param soft input state always hidden, hides
the keyboard.

00:59:44.230 --> 00:59:51.430
But views added, window manager, add view,
view params from service does not have a window.

00:59:51.430 --> 00:59:52.740
What to do?î

00:59:52.740 --> 00:59:55.320
&gt;&gt;Alex Lucas: What to do about what?

00:59:55.320 --> 01:00:00.540
&gt;&gt;Joe Malin: Yeah Iím not really clear what
the question is going after.

01:00:00.540 --> 01:00:05.589
&gt;&gt;Trevor Johns: Yeah, there seems to be a
clause in your sentence missing there.

01:00:05.589 --> 01:00:06.589
&gt;&gt;Joe Malin: Right.

01:00:06.589 --> 01:00:11.620
I would suggest, honestly, that you put an
expanded version of this question on stack

01:00:11.620 --> 01:00:15.690
overflow and then link into the moderator
so that we can, help you out.

01:00:15.690 --> 01:00:20.070
I mean, definitely it looks like thereís
something going on here with input methods

01:00:20.070 --> 01:00:26.000
that we can help you out with but not from
the information that weíve got here.

01:00:26.000 --> 01:00:32.730
Okay and, since we didnít answer that one
letís try this one last one that doesnít

01:00:32.730 --> 01:00:33.800
have a link to stack overflow.

01:00:33.800 --> 01:00:39.300
ìI have an app that has a child lock using
a custom launcher, however, when the app is

01:00:39.300 --> 01:00:43.130
closed and the home button is pressed, the
dialogue that I ask for the default launcher

01:00:43.130 --> 01:00:44.400
is shown.

01:00:44.400 --> 01:00:49.550
Is there a way to reset the default launcher
to the Android launcher?î Hm.

01:00:49.550 --> 01:00:56.800
&gt;&gt;Trevor Johns: Iím trying to understand
exactly whatís happening here.

01:00:56.800 --> 01:01:02.800
So you have this app that inputs a custom
launcher, you close the app by, you know,

01:01:02.800 --> 01:01:06.950
I imagine you move to a different app and
then you hit home and then it asks for the

01:01:06.950 --> 01:01:07.950
default launcher.

01:01:07.950 --> 01:01:13.510
Now, I imagine, was the problem that you picked
your child lock application and set it as

01:01:13.510 --> 01:01:15.710
default and now youíre locked into this?

01:01:15.710 --> 01:01:20.079
If so, the answer is yes there is certainly
a way to get around this.

01:01:20.079 --> 01:01:26.061
You need to get into system preferences and,
your settings excuse me, you need to get into

01:01:26.061 --> 01:01:31.900
settings, you need to go to apps, find the
app in question, your child lock app and click

01:01:31.900 --> 01:01:34.260
on that and thereíll be a clear defaults
button.

01:01:34.260 --> 01:01:41.329
When you push clear defaults it will remove
any saved settings for intents so as for what

01:01:41.329 --> 01:01:44.980
the preferred app to handle intent and the
next time you hit the home button youíll

01:01:44.980 --> 01:01:48.790
get that chooser dialogue again and then you
can pick the system launcher.

01:01:48.790 --> 01:01:54.700
If, for some reason, you cannot get into system
settings, Android does have a very rarely

01:01:54.700 --> 01:01:59.890
discussed but occasionally useful, safe mode
and if my memory serves me correctly, the

01:01:59.890 --> 01:02:04.980
way to get into safe mode is to boot up the
phone while holding your finger down in the

01:02:04.980 --> 01:02:09.660
middle of the screen and that will prevent
any services that launch in startup from actually

01:02:09.660 --> 01:02:12.830
launching and from there you should be able
to get into system settings.

01:02:12.830 --> 01:02:17.810
&gt;&gt;Joe Malin: Okay, I hope that answered the
question.

01:02:17.810 --> 01:02:20.390
If not weíll expect to hear from you again.

01:02:20.390 --> 01:02:25.660
&gt;&gt;Trevor Johns: And Iíll also add, just as
safe mode is not very well discussed, I donít

01:02:25.660 --> 01:02:29.210
use it very well myself, so itís entirely
possible that I forgot the correct way to

01:02:29.210 --> 01:02:30.210
get into it.

01:02:30.210 --> 01:02:32.141
[Laughs]
&gt;&gt;Trevor Johns: If it doesnít work, do a

01:02:32.141 --> 01:02:34.610
search and youíll find the correct procedure.

01:02:34.610 --> 01:02:36.370
&gt;&gt;Joe Malin: Okay.

01:02:36.370 --> 01:02:37.370
[Pause]

01:02:37.370 --> 01:02:39.300
&gt;&gt;Alex Lucas: Weíre over.

01:02:39.300 --> 01:02:44.580
&gt;&gt;Joe Malin: Okay I think weíre over so that
does it for today, thank you very much for

01:02:44.580 --> 01:02:45.580
joining us.

01:02:45.580 --> 01:02:47.550
Thank you for all the questions from the hangouts
etcetera.

01:02:47.550 --> 01:02:48.550
&gt;&gt;Trevor Johns: Yep, and--

01:02:48.550 --> 01:02:49.550
&gt;&gt;Joe Malin: And weíll see

01:02:49.550 --> 01:02:51.650
&gt;&gt;Trevor Johns: Yeah, go, I was gonna announce
next week

01:02:51.650 --> 01:02:52.819
&gt;&gt;Joe Malin: Oh, you have something.

01:02:52.819 --> 01:02:53.960
&gt;&gt;Trevor Johns: I do have next week.

01:02:53.960 --> 01:02:58.760
Yes, so, yeah, so once again we are on the
air every Wednesday at 2 PM Pacific time.

01:02:58.760 --> 01:03:04.050
Be sure to join us next week which is August
29th where weíll have Bruno Alevara, Adam

01:03:04.050 --> 01:03:08.620
Powell and Richard Fulker joining us to discuss
multi versioning UI and UI navigation.

01:03:08.620 --> 01:03:09.690
&gt;&gt;Joe Malin: Cool.

01:03:09.690 --> 01:03:12.619
&gt;&gt;Trevor Johns: So hopefully weíll see many
of you there.

01:03:12.619 --> 01:03:13.670
&gt;&gt;Alex Lucas: Thatís awesome.

01:03:13.670 --> 01:03:14.730
&gt;&gt;Joe Malin: Awesome, man.

01:03:14.730 --> 01:03:17.440
Until that time, same bat time, same bat station.

