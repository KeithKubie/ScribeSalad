WEBVTT
Kind: captions
Language: en

00:00:00.130 --> 00:00:04.600
&gt;From everything that we have said so
far, the technologies that are used to

00:00:04.600 --> 00:00:10.150
enable computer cloud offerings must
address a number of requirements.

00:00:10.150 --> 00:00:15.090
Clouds must provide fungible resources
which means that the resources can

00:00:15.090 --> 00:00:18.440
easily be repurposed to
support different customers.

00:00:18.440 --> 00:00:21.450
Potentially even with different
types of requirements.

00:00:21.450 --> 00:00:24.310
Otherwise if cloud providers
have to allocate and

00:00:24.310 --> 00:00:29.050
maintain physical resources for every
one of their customers, and the exact

00:00:29.050 --> 00:00:33.730
same type of physical resources as
what the customers at least think they

00:00:33.730 --> 00:00:38.950
require, then the economic opportunity
for cloud computing just won't be there.

00:00:38.950 --> 00:00:42.427
This fungibility is
also necessary to deal

00:00:42.427 --> 00:00:47.196
with some of the V that exists
within the cloud resources.

00:00:47.196 --> 00:00:49.660
And we have different
generation of servers,

00:00:49.660 --> 00:00:51.880
maybe even different types of servers.

00:00:51.880 --> 00:00:55.100
And you don't really want the users
to have to deal with that.

00:00:55.100 --> 00:00:58.660
You don't want them to be exposed
to the level of heteroingenuity.

00:00:58.660 --> 00:01:02.240
Clouds must integrate resource
management methods that support

00:01:02.240 --> 00:01:07.150
the premise of cloud computing so
they must be able to dynamically adjust

00:01:07.150 --> 00:01:12.650
the resources that are allocated
to cloud users pending underneath.

00:01:12.650 --> 00:01:16.290
So this needs to be done very flexibly,
very elastically.

00:01:16.290 --> 00:01:20.740
Such management methods must be able
to operate at very large scales

00:01:20.740 --> 00:01:23.390
of thousands and
tens of thousands of nodes.

00:01:23.390 --> 00:01:27.130
The scale is important, both from
the perspective of the cloud provider.

00:01:27.130 --> 00:01:30.090
So how many resources
it needs to manage.

00:01:30.090 --> 00:01:33.320
But also from the perspective
of the customers.

00:01:33.320 --> 00:01:37.550
Customers often look at clouds for
their resource needs because otherwise

00:01:37.550 --> 00:01:41.750
they don't have access to
sufficiently large resource pools.

00:01:41.750 --> 00:01:46.970
So then clouds must be able to provide
to potential customers the ability

00:01:46.970 --> 00:01:51.570
to allocate really large collections
of resources for your individual needs

00:01:51.570 --> 00:01:55.490
to the scalabilities required with
respect to that dimension as well.

00:01:55.490 --> 00:01:59.320
Once scale is introduced,
failure has become inevitable, really.

00:01:59.320 --> 00:02:03.940
If we have some probability that one
component in the system will fail,

00:02:03.940 --> 00:02:06.140
the more such components
we put together,

00:02:06.140 --> 00:02:10.699
the greater the probability that
something in that collection will fail.

00:02:10.699 --> 00:02:15.000
So we have to incorporate
mechanisms to deal with failures.

00:02:15.000 --> 00:02:19.850
Clouds, by definition,, are shared
resources across multiple tenants, so

00:02:19.850 --> 00:02:23.530
cloud management has to deal
with this multi-tenancy,

00:02:23.530 --> 00:02:28.550
has to provide mechanisms that
guarantee performance and

00:02:28.550 --> 00:02:32.560
provide isolation across multiple
workloads, multiple tenants.

00:02:32.560 --> 00:02:37.690
We cannot have one misbehaving tenant
that will somehow take control over all

00:02:37.690 --> 00:02:42.600
of the resources and punish and hurt the
performance of the remaining tenants.

00:02:42.600 --> 00:02:46.170
And finally an important concern
that must be addressed is

00:02:46.170 --> 00:02:51.230
isolation of the state that's
being accessed in cloud systems.

00:02:51.230 --> 00:02:52.646
With this respect,

00:02:52.646 --> 00:02:58.312
clouds need to make guarantees regarding
the privacy of their tenants' data and

00:02:58.312 --> 00:03:03.329
the security of the execution
environment that the cloud guarantees.

00:03:03.329 --> 00:03:08.315
Another aspect of security's also
to make sure that their privacy and

00:03:08.315 --> 00:03:12.117
security guarantees,
not just across tenants, but

00:03:12.117 --> 00:03:16.510
also that the cloud provider
isn't going to somehow access or

00:03:16.510 --> 00:03:21.346
take advantage of the state that
is managed by individual tenants.

00:03:21.346 --> 00:03:25.947
And then also the other way around, that
the cloud computing player is protected

00:03:25.947 --> 00:03:29.940
from certain vulnerabilities that
exist within a single tenant.

00:03:29.940 --> 00:03:31.060
And therefore,

00:03:31.060 --> 00:03:34.020
that one tenant isn't going to
affect the entire cloud platform.

