WEBVTT
Kind: captions
Language: en

00:00:00.740 --> 00:00:03.360
JARED: Hi, I'm Jared,
software engineer for Glass.

00:00:03.360 --> 00:00:05.600
I'm going to talk to you
about localizing Mirror API

00:00:05.600 --> 00:00:06.550
Glassware.

00:00:06.550 --> 00:00:09.110
What is mirror API Glassware?

00:00:09.110 --> 00:00:11.400
Mirror API Glassware
uses the Mirror API

00:00:11.400 --> 00:00:14.740
to push static content to
Glass through a RESTful API.

00:00:14.740 --> 00:00:17.540
The cards appear on
Glass in the timeline,

00:00:17.540 --> 00:00:19.710
but the way content
is pushed is different

00:00:19.710 --> 00:00:21.490
than a traditional website.

00:00:21.490 --> 00:00:24.200
For a traditional website,
when a request comes in,

00:00:24.200 --> 00:00:25.890
it's easy to determine
what language

00:00:25.890 --> 00:00:27.660
to use to show your content.

00:00:27.660 --> 00:00:29.600
You might use the
Accept Language Header,

00:00:29.600 --> 00:00:31.990
geolocate the request
IP, have a user setting,

00:00:31.990 --> 00:00:34.110
or any combination of
the above, and then

00:00:34.110 --> 00:00:35.930
return localized content.

00:00:35.930 --> 00:00:38.920
But with a Mirror API, you don't
have incoming request headers,

00:00:38.920 --> 00:00:40.810
or even an incoming request.

00:00:40.810 --> 00:00:42.950
You're pushing
content to the API,

00:00:42.950 --> 00:00:45.130
and you want that content
to be in the same language

00:00:45.130 --> 00:00:47.320
as the rest of
Glass for that user.

00:00:47.320 --> 00:00:51.210
So, mirror API now supports
HTTP GET for user settings.

00:00:51.210 --> 00:00:54.150
And the first thing
is called locale.

00:00:54.150 --> 00:00:57.010
To get the user locale, you make
a request to the Mirror API.

00:00:57.010 --> 00:00:58.900
Here's how it works.

00:00:58.900 --> 00:01:01.550
You request the setting
locale, and the API

00:01:01.550 --> 00:01:04.760
returns a locale string
to you such as EL.

00:01:04.760 --> 00:01:06.920
You can then produce and
push your timeline item

00:01:06.920 --> 00:01:09.980
using whatever templating
technology you like,

00:01:09.980 --> 00:01:11.400
using that locale
string to select

00:01:11.400 --> 00:01:14.352
the appropriate translation.

00:01:14.352 --> 00:01:16.310
There are lots of
internationalization pitfalls

00:01:16.310 --> 00:01:18.893
that you should be aware of, for
instance, hard coded strings,

00:01:18.893 --> 00:01:21.392
truncated text, time
formatting, et cetera.

00:01:21.392 --> 00:01:22.850
These issues are
basically the same

00:01:22.850 --> 00:01:25.930
whether you're writing web apps,
Android apps, or GDK Glassware.

00:01:25.930 --> 00:01:28.940
But the mechanisms for
solving them are different.

00:01:28.940 --> 00:01:30.710
Localizing Mirror
API timeline items

00:01:30.710 --> 00:01:33.280
is very similar to
localizing web applications.

00:01:33.280 --> 00:01:35.400
In fact, you can probably
use the same facilities

00:01:35.400 --> 00:01:37.470
you're already using
for your web apps.

00:01:37.470 --> 00:01:41.090
Maybe you use Rails, Angular,
Django, or Closure Templates.

00:01:41.090 --> 00:01:42.700
These frameworks
all have mechanisms

00:01:42.700 --> 00:01:45.230
for localizing your content.

00:01:45.230 --> 00:01:47.070
Use those mechanisms
the same way you would

00:01:47.070 --> 00:01:48.600
for traditional web content.

00:01:48.600 --> 00:01:51.607
It's really straightforward.

00:01:51.607 --> 00:01:53.190
Once you're pushing
localized content,

00:01:53.190 --> 00:01:55.430
you probably don't want to
perform a GET to settings

00:01:55.430 --> 00:01:56.895
locale for every timeline item.

00:01:56.895 --> 00:01:58.520
That would double
how many requests you

00:01:58.520 --> 00:02:00.420
make against Mirror
API and burn your quota

00:02:00.420 --> 00:02:02.370
with unnecessary requests.

00:02:02.370 --> 00:02:04.400
Instead what you can do
is subscribe to changes

00:02:04.400 --> 00:02:06.740
in the settings collection,
similar to the way

00:02:06.740 --> 00:02:09.460
you subscribe to Timeline
or Location Updates.

00:02:09.460 --> 00:02:11.780
Now whenever someone changes
their language for Glass,

00:02:11.780 --> 00:02:13.905
you'll get a notification
callback, which tells you

00:02:13.905 --> 00:02:15.840
it's time to get the
locale setting again

00:02:15.840 --> 00:02:18.370
and store the new
value for that user.

00:02:18.370 --> 00:02:21.020
So you want to subscribe
to Settings Changes.

00:02:21.020 --> 00:02:22.930
And when you get a
change notification

00:02:22.930 --> 00:02:25.670
you retrieve the
locale for that user.

00:02:25.670 --> 00:02:27.577
And whenever you
want to push content,

00:02:27.577 --> 00:02:29.660
you just use the locale
string that you've already

00:02:29.660 --> 00:02:32.262
retrieved and remembered,
and depending on your app,

00:02:32.262 --> 00:02:33.970
you may want to refresh
existing timeline

00:02:33.970 --> 00:02:36.249
items to reflect
the new language.

00:02:36.249 --> 00:02:38.540
After you've localized either
your Mirror API Glassware

00:02:38.540 --> 00:02:41.680
or GDK Glassware, submit it
to the Glass Team for review.

00:02:41.680 --> 00:02:43.290
You should specify
all the languages

00:02:43.290 --> 00:02:45.248
that your Glassware
supports, so we can show it

00:02:45.248 --> 00:02:47.010
to users who speak
that language.

00:02:47.010 --> 00:02:49.260
You can see how easy it is
to localize your Mirror API

00:02:49.260 --> 00:02:50.835
Glassware and reach more users.

00:02:50.835 --> 00:02:52.460
Watch for announcements
from Glass Team

00:02:52.460 --> 00:02:54.580
for upcoming language
support in Glass.

00:02:54.580 --> 00:02:56.300
Thanks.

