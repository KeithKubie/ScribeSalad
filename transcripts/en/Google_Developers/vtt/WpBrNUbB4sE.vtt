WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.200
&gt;&gt; DE RIJK: So, yeah, I'm going to give a
bit of a talk about our development practices,

00:00:05.200 --> 00:00:11.440
things we do inside this project. Remember,
this is not me telling you how we're--what

00:00:11.440 --> 00:00:16.669
we're doing is right. It's kind of me telling
us what we're doing now and we're open for

00:00:16.669 --> 00:00:24.960
discussions on this topic. That's also why
this talk is relatively short. Please try

00:00:24.960 --> 00:00:29.259
to keep the discussions after I'm done. If
you have any questions, please feel free to

00:00:29.259 --> 00:00:35.520
ask them during the presentation. So, yeah,
I'm going to walk you through our principles

00:00:35.520 --> 00:00:40.510
regarding, basically, from ID to patch. So
I'm going to talk a bit about Design docs.

00:00:40.510 --> 00:00:45.300
How to--I'm going to give you a quick tutorial
on how to import this project into Eclipse

00:00:45.300 --> 00:00:49.910
since that's something that Joseph mentioned
this morning. I'm going to talk about Code

00:00:49.910 --> 00:00:56.370
style, why your commit should be small, our
code reviews, the fact that we have continuous

00:00:56.370 --> 00:01:02.200
build and test up and running and how to deal
with third party dependencies inside our project.

00:01:02.200 --> 00:01:07.909
So, yeah, let's get started. So if you have
a--if we want to make large changes to our

00:01:07.909 --> 00:01:15.420
code base, we really--we proud ourselves on
the fact that we actually write Design docs

00:01:15.420 --> 00:01:21.670
for these things because it's pretty important
because we want to communicate to you guys

00:01:21.670 --> 00:01:27.020
also internally what we've been doing is that
what and how we're going to change. And that

00:01:27.020 --> 00:01:31.960
way, we can agree on our approach before we
write to much code which, well, would basically

00:01:31.960 --> 00:01:38.979
be lost time if we had to change some stuff.
And also, you should talk and not worry about

00:01:38.979 --> 00:01:43.490
the fact that the doc might become out of
date after something's implemented because

00:01:43.490 --> 00:01:51.439
the way this project works is basically kind
of like extreme programming; it's continuously

00:01:51.439 --> 00:01:55.889
changing. So you shouldn't worry about that
too much. But it's important that you discuss

00:01:55.889 --> 00:02:01.609
big changes with the rest of the people so
that they know what you are doing. And things

00:02:01.609 --> 00:02:06.009
to include in Design doc is, of course, the
objective, what do you want to reach a requirements,

00:02:06.009 --> 00:02:12.750
what does it need to do, what does it need
to uphold. You need to include the design.

00:02:12.750 --> 00:02:17.480
And a good other thing to do is that--then
to talk also a bit about the alternatives

00:02:17.480 --> 00:02:25.150
you have considered and why those alternatives
did not make it to be the actual design. That

00:02:25.150 --> 00:02:32.690
way, you can give a better image, a better
overview of what you want, what you thought

00:02:32.690 --> 00:02:38.930
about during your process of making this design
upfront. So, now, I'm going to switch over

00:02:38.930 --> 00:02:44.200
to show you quickly how to import this project
into Eclipse. On the Google Code site, you

00:02:44.200 --> 00:02:50.360
can grab this handy-dandy comment you can
run when you have a mercurian staff installed.

00:02:50.360 --> 00:02:58.640
Let me quickly go out here. Just paste it
in. You can change the map name if you want

00:02:58.640 --> 00:03:06.500
to, you fold them in and then kind of check
out. The meantime, Eclipse is our personal

00:03:06.500 --> 00:03:14.610
preferred ID. Of course, you can use anything
you want, but we actively have a project file

00:03:14.610 --> 00:03:21.829
and code style file for Eclipse. So, if you--if
you use it, you're in good hands with us.

00:03:21.829 --> 00:03:30.569
While that's checking out, you should make
sure that you have Java 1.6 or, well, Java

00:03:30.569 --> 00:03:36.980
6 installed. So, there were some problems
with projects not compiling for some people

00:03:36.980 --> 00:03:41.609
where their compliance was not set to the
right level. I will quickly show you where

00:03:41.609 --> 00:03:46.790
you can do that as soon as the check out is
finished. There we go. So, yeah, basically,

00:03:46.790 --> 00:03:55.370
all you have to do in Eclipse is do a new
Java project. You give it a name, like Google

00:03:55.370 --> 00:04:01.549
Wave demo or whatever. You don't use default
location. You browse to the folder you checked

00:04:01.549 --> 00:04:12.040
out. You'll see a bit of gadget work there.
You tell Eclipse to use that project--to use

00:04:12.040 --> 00:04:17.590
that folder. The cool thing is if--when you
update or you've just pressed finished, the

00:04:17.590 --> 00:04:23.000
cool thing is when you actually pull an update,
Eclipse will also automatically capture those

00:04:23.000 --> 00:04:30.180
files if you hit refresh in Eclipse. Waiting
for the import to be done. You can basically

00:04:30.180 --> 00:04:34.699
see here that it's failing and that's--there's
a reason for it because some of the files

00:04:34.699 --> 00:04:40.880
we use aren't generated. So, one more thing
you have to do when you actually checked out

00:04:40.880 --> 00:04:47.979
the code is to run an.gen_jxp. It's generating
the files we use for our templates. So once

00:04:47.979 --> 00:04:53.740
that's done, you can refresh your project
in Eclipse and it should all go green. Here

00:04:53.740 --> 00:05:02.800
we go. Only warnings; no errors. And then,
you're basically good to go. So, I told you

00:05:02.800 --> 00:05:10.770
about the compliance as one thing that's under
projects in two settings and then Java compiler.

00:05:10.770 --> 00:05:16.740
Make sure you have 1.6 selected here. It's
1.6 by default for me but if it's not, you

00:05:16.740 --> 00:05:20.040
can you can edit any of your projects to specific
settings on. Make sure it's set the way the

00:05:20.040 --> 00:05:28.270
annotations like overwrite work properly and
you don't get any compiler errors. One quick

00:05:28.270 --> 00:05:36.199
thing which I'm--which I also want--would
like to show you is the--I opened another

00:05:36.199 --> 00:05:41.610
project--is that you can basically run from
Eclipse if you make your own run configuration,

00:05:41.610 --> 00:05:46.330
which serves--which uses all the arguments
the run script has. And this allows you to

00:05:46.330 --> 00:05:51.620
run in Eclipse and debug and set break points.
And we'll go into some more deeper details

00:05:51.620 --> 00:05:57.020
about GWT Host Mode and how to hook that up
with Eclipse during some other sessions, maybe

00:05:57.020 --> 00:06:05.520
Installfest this afternoon, I'm not sure.
So yeah, let's switch back. So when you have

00:06:05.520 --> 00:06:14.110
the code in Eclipse, you also have a formatting
file which we use to keep our code style,

00:06:14.110 --> 00:06:20.290
well, equal across our code base. This--we
do this for a couple of reasons. It makes

00:06:20.290 --> 00:06:27.750
it easier to read different clauses, especially
when you have not--you haven't been involved

00:06:27.750 --> 00:06:32.669
in active development on those clauses but
you just happen to be able to use them for

00:06:32.669 --> 00:06:39.990
your work. It makes it easier to review for
the reviewers if you use this style, our approach

00:06:39.990 --> 00:06:44.879
style because while they are experienced in
this style and if you actually use it, they

00:06:44.879 --> 00:06:49.610
don't have to spend that much time on telling
you how to fix it. Would actually--can spend

00:06:49.610 --> 00:06:56.169
more time on whether or not your patch or
T works properly. It also makes maintenance

00:06:56.169 --> 00:07:00.840
easier if you know--if the code is well-styled,
you can easily see--you can more easily see

00:07:00.840 --> 00:07:06.550
where--what's going on where and what might
be going wrong. And as I said before, for

00:07:06.550 --> 00:07:12.800
Eclipse the formatting is provided. When you
do the check out, as I've shown before, Eclipse

00:07:12.800 --> 00:07:19.180
will automatically pick up the formatting
for you so you don't have to do anything.

00:07:19.180 --> 00:07:27.509
The formatting is based on what we do inside
Google, which is based on the Sun formatting

00:07:27.509 --> 00:07:36.979
with a few more changes. So, yes, about your--if
you make a patch, try to keep it small. Basically,

00:07:36.979 --> 00:07:41.580
we would like it--I mean, for big changes,
you should actually try to write it up into

00:07:41.580 --> 00:07:47.940
smaller changes. Each of them should still
be meaningful though, because a meaningless

00:07:47.940 --> 00:07:54.110
commit is flawed, not very useful. Also, it
makes it easy to isolate faults if you go

00:07:54.110 --> 00:08:01.210
step by step. It's easier for the reviewer.
There's nothing more terrible than waking

00:08:01.210 --> 00:08:07.590
up on Monday morning and seeing that you have
a 5,000 line code review waiting for you.

00:08:07.590 --> 00:08:14.830
We call them Eupitarian code reviews. But,
yeah, that sucks. Also, a lesson I learned

00:08:14.830 --> 00:08:20.190
during a talk given by Ben Collins-Sussman
and Brian Fitzpatrick is that commit early

00:08:20.190 --> 00:08:24.099
and commit often and don't be afraid to show
your work. This is actually a talk you can

00:08:24.099 --> 00:08:28.300
find on YouTube. It's called Programmer Insecurity
and the Genius Myth. They've given this talk

00:08:28.300 --> 00:08:33.539
all over the U.S. and all over the world,
I guess. They gave it at Google I/O 2009 as

00:08:33.539 --> 00:08:41.349
well. Everybody feels it's relevant. Don't
be afraid to show your work. We are--the team

00:08:41.349 --> 00:08:48.910
itself is very--pretty eager and we really
like to help you along if you run into any

00:08:48.910 --> 00:08:55.029
problems, so, yeah. And this is maybe something
you can also take with you. You should not

00:08:55.029 --> 00:09:04.279
be sitting in your own shell just coding away.
It's good to work in a team. Then we have--once

00:09:04.279 --> 00:09:10.079
you have created your small commit--or your
small patch, we perform code reviews on it.

00:09:10.079 --> 00:09:17.930
This is so we can uphold our code quality.
It makes it easier to maintain, easier to

00:09:17.930 --> 00:09:24.200
change our code base if we actually have reviewers
reviewing your code because every line of

00:09:24.200 --> 00:09:31.470
code is seen by multiple people. This allows
you to share the knowledge that's inside your

00:09:31.470 --> 00:09:36.430
patch to multiple people. So if you leave,
someone else must have seen that code before.

00:09:36.430 --> 00:09:43.310
So it allows knowledge to be distributed.
Reviewers usually check the first three items.

00:09:43.310 --> 00:09:47.130
Does it solve the right problem? Has it been
written before? And if so, then you need to

00:09:47.130 --> 00:09:52.180
re-factor, I guess. Is it idiomatic or whether
or not it's actually in a natural language,

00:09:52.180 --> 00:09:56.750
is it easy to read? In some sense, they want
you--of course, they adhere to the style guide,

00:09:56.750 --> 00:10:03.170
but you should actually just do that on your
own and we should not have to tell you to

00:10:03.170 --> 00:10:09.170
do it because it takes time away from the
reviewer and he has a lot going on. The code

00:10:09.170 --> 00:10:13.920
base is constantly changing, so they have
a lot of work to do. There's code review tools

00:10:13.920 --> 00:10:20.740
up on codereview.waveprotocol.org, so when
you--when you want to submit the patch, you

00:10:20.740 --> 00:10:26.440
use the code review script which is inside
the main folder and it will put up your code

00:10:26.440 --> 00:10:27.440
on codereview.waveprotocol.org. We got--yes?
&gt;&gt; The style guide, because, you know, I [INDISTINCT]

00:10:27.440 --> 00:10:28.440
so if I tried to make my code centered to
[INDISTINCT] things Java, but in those settings.

00:10:28.440 --> 00:10:29.440
Did you want to release the settings you all
to use or...?

00:10:29.440 --> 00:10:43.560
&gt;&gt; 
DE RIJK: It's in the set--it's in the settings

00:10:43.560 --> 00:10:44.570
file now. So when you...
&gt;&gt; Okay.

00:10:44.570 --> 00:10:48.410
&gt;&gt; DE RIJK: ...using your--when you're creating
your projects in there, and otherwise, you

00:10:48.410 --> 00:10:52.340
can actually import the formatted settings
into your own project.

00:10:52.340 --> 00:10:53.750
&gt;&gt; Not all of the settings are in there? Like,
in generally, in Google does, like, all--the

00:10:53.750 --> 00:10:55.130
defaults are all slightly different, so there
are some--there are some settings on that.

00:10:55.130 --> 00:10:59.250
So, for example, my Eclipse changes all the
time that I don't have, like, serialized ID

00:10:59.250 --> 00:11:06.330
or something that, you know, that we--the
settings file should be fixed to make the

00:11:06.330 --> 00:11:15.640
setting ignore that one as well but more [INDISTINCT]...
&gt;&gt; DE RIJK: Yeah, ignoring warnings is just

00:11:15.640 --> 00:11:22.790
maybe one of the issues. But many code style
and how the line and spacings and all that

00:11:22.790 --> 00:11:23.829
kind of stuff is in there.
&gt;&gt; Right. So if users doesn't have the sense

00:11:23.829 --> 00:11:25.130
[INDISTINCT].
&gt;&gt; DE RIJK: Yup. And otherwise...

00:11:25.130 --> 00:11:32.160
&gt;&gt; [INDISTINCT] format that you can...
&gt;&gt; DE RIJK: Otherwise, you would try to--if

00:11:32.160 --> 00:11:38.279
you're not using Eclipse, I don't think we
have a detailed document up on it, but you

00:11:38.279 --> 00:11:44.940
should try to mimic whatever is around your
code because that's usually supposed to be

00:11:44.940 --> 00:11:49.649
right. So try to mimic whatever you see.
&gt;&gt; I already have done that with the Java

00:11:49.649 --> 00:11:52.570
application.
&gt;&gt; DE RIJK: That's good. Okay. So, next stop

00:11:52.570 --> 00:11:59.000
is that we have a continuous build and test
running. This we do to isolate breakages.

00:11:59.000 --> 00:12:04.230
We actually broke something yesterday, so
it mailed me and I fixed it. But the...

00:12:04.230 --> 00:12:08.690
&gt;&gt; [INDISTINCT].
&gt;&gt; DE RIJK: Yeah, it mails to the list and

00:12:08.690 --> 00:12:15.620
it mails, I think, the person who committed
it. I think--yeah, which is good. We do this

00:12:15.620 --> 00:12:22.579
after a commit has been placed due to what
the tool does. You're supposed to be running

00:12:22.579 --> 00:12:28.589
a test beforehand, so I should be ashamed,
I guess, for breaking something. But the tests

00:12:28.589 --> 00:12:33.579
in libraries take 50 minutes and we might
work on that later on. It's running on this

00:12:33.579 --> 00:12:41.050
link. It's hard for me to pronounce to you
all. I can actually show you, of course. It's

00:12:41.050 --> 00:12:45.310
basically running Hudson on our two repositories.
We have seen--the weather--the weather is

00:12:45.310 --> 00:12:51.740
kind of sunny for default. There are some
clouds for libraries because that was broken

00:12:51.740 --> 00:12:57.949
yesterday. This tool will show whether or
not the builds are good to go. They're not

00:12:57.949 --> 00:13:06.930
green, but they're blue here, unfortunately.
Apparently--oh, we're there. Yeah, and our

00:13:06.930 --> 00:13:12.810
rule is basically to develop--push any changes
if broken, except when we want to fix those

00:13:12.810 --> 00:13:18.510
changes; otherwise, it might become harder
to actually fix whatever is broken if you

00:13:18.510 --> 00:13:25.329
keep building on broken stuff. Well, the last
thing I want to discuss is how to deal with

00:13:25.329 --> 00:13:30.209
dependencies inside this open source project.
Open source is a wonderful thing. There is

00:13:30.209 --> 00:13:36.010
a lot of code out there that you can use.
Basically, anything you can think of has been

00:13:36.010 --> 00:13:42.850
written, I would say. So, yeah, in the sense,
again, don't reinvent the wheel. Wave in a

00:13:42.850 --> 00:13:52.330
Box is licensed under Apache 2.0, which basically
means we can use Apache 2.0 projects and BST

00:13:52.330 --> 00:13:56.440
licensed and MIT as long as we stay away from
GPLv3 which...

00:13:56.440 --> 00:13:59.430
&gt;&gt; Or v2.
&gt;&gt; DE RIJK: Or v2 which it's not compatible

00:13:59.430 --> 00:14:06.459
with and there are other issues with that.
We're good to go. And for new Wave dependencies,

00:14:06.459 --> 00:14:12.660
we want to introduce is you should use a properly
release so we can find it back. Some of our

00:14:12.660 --> 00:14:19.120
third-party code, we have some patches on
top of it because they did not--other releases

00:14:19.120 --> 00:14:24.279
did not work well and they never made any
release sometimes. We also include a readme

00:14:24.279 --> 00:14:28.880
file to state which version where you got
the Search--source from, what it's used for

00:14:28.880 --> 00:14:33.561
and we also would like to try and include
source files whenever we include dependencies

00:14:33.561 --> 00:14:38.079
because then when you're a debugger and you
can actually step through those source files

00:14:38.079 --> 00:14:43.519
with third-party libraries and see what's
going on with your code. And that's about

00:14:43.519 --> 00:14:50.889
it. I would like to answer any questions you
have or start discussions on how we can improve

00:14:50.889 --> 00:14:58.529
our process or whatever you want to bring
up about how we do--how we deal with external

00:14:58.529 --> 00:15:03.730
contributors. Thank you.
&gt;&gt; How many external contributors do you actually

00:15:03.730 --> 00:15:11.769
have around?
&gt;&gt; DE RIJK: I think we have around four who

00:15:11.769 --> 00:15:13.259
have access.
&gt;&gt; Yes.

00:15:13.259 --> 00:15:18.120
&gt;&gt; DE RIJK: I'm not sure about the numbers.
I'll be--I'll be an external one soon, too,

00:15:18.120 --> 00:15:19.120
so.
&gt;&gt; Just to change the question, how many people

00:15:19.120 --> 00:15:20.120
can send in patches?
&gt;&gt; Yeah, by then, more than four, for sure.

00:15:20.120 --> 00:15:25.709
&gt;&gt; DE RIJK: Yeah.
&gt;&gt; Because you don't actually have to be an

00:15:25.709 --> 00:15:30.871
active contributor to what--to submit a patch
A to B, you know?

00:15:30.871 --> 00:15:35.190
&gt;&gt; DE RIJK: No. You can just submit a patch
and someone will review it for you and can

00:15:35.190 --> 00:15:40.390
fix it if need be, but--then that person will
commit it, but we have around--we have a few

00:15:40.390 --> 00:15:45.199
external people who have rights to actually
push code to our code base. And if you are

00:15:45.199 --> 00:15:54.459
an active committer and you've bit off a well-quality
code, we will give you that access.

00:15:54.459 --> 00:16:05.809
&gt;&gt; Don't they--because a computer license
you have to sign but then you can submit patches.

00:16:05.809 --> 00:16:08.240
&gt;&gt; Yes. It's not any project where everybody
will just enter this process. So the small--if

00:16:08.240 --> 00:16:09.240
you're just doing it in a one point [INDISTINCT]
a year or so [INDISTINCT] deeply involved

00:16:09.240 --> 00:16:10.240
in the process, you just [INDISTINCT].
&gt;&gt; DE RIJK: Yeah, there's--there's just one--yeah,

00:16:10.240 --> 00:16:11.240
there's one license you have to--that you
totally sign...

00:16:11.240 --> 00:16:13.630
&gt;&gt; Yeah.
&gt;&gt; DE RIJK: ...either as an individual or

00:16:13.630 --> 00:16:20.480
if you're working for a company because in
case this code needs to be re-licensed, that

00:16:20.480 --> 00:16:27.430
means--yeah, we have a statement from you
that that's okay. Basically, that's what it's

00:16:27.430 --> 00:16:32.460
used for as far as I know. Anything else?
&gt;&gt; So, the process is fine for things you

00:16:32.460 --> 00:16:36.899
want to introduce as the actual model. But
is there a way we can support a community

00:16:36.899 --> 00:16:39.500
building up applications that only have very
defined uses not [INDISTINCT] but things to

00:16:39.500 --> 00:16:56.009
say, "Hey, these are all sample datas or sample
of our plug-ins." [INDISTINCT] things people

00:16:56.009 --> 00:17:04.330
would [INDISTINCT] Wave in a Box that might
not hit in the actual spec, but it should

00:17:04.330 --> 00:17:05.330
be housed in one location so that, you know,
you can get it done, [INDISTINCT] it and wrapping

00:17:05.330 --> 00:17:06.330
up demos around here so that then [INDISTINCT].
[PAUSE] They don't know what's the date and

00:17:06.330 --> 00:17:14.120
time to build the reviews and say if you haven't
done any [INDISTINCT] here a clone of the

00:17:14.120 --> 00:17:36.210
download and lay around if you want to [INDISTINCT].
&gt;&gt; DE RIJK: That's a good question. I think

00:17:36.210 --> 00:17:42.820
we don't have...
&gt;&gt; It shouldn't have occurred. At a very basic

00:17:42.820 --> 00:17:44.670
level, it shouldn't have occurred which you
can stop submitting card or patches to people

00:17:44.670 --> 00:17:45.670
saying, "Here's an idea I've got. Here's the
patch. What do you think?" But then you can

00:17:45.670 --> 00:17:46.670
sort of wait it down to like a gallery of
contributed gadgets or what's--that sort of

00:17:46.670 --> 00:17:47.670
thing.
&gt;&gt; DE RIJK: Yeah.

00:17:47.670 --> 00:17:48.670
&gt;&gt; Actually, maybe having this as an experimental
branch or an experimental folder, you know,

00:17:48.670 --> 00:17:49.670
in the [INDISTINCT] would be useful. Basically,
you can still have the mainline Wave in a

00:17:49.670 --> 00:17:50.670
Box, but then if there's something that isn't
directly installed in the Wave in a Box, which

00:17:50.670 --> 00:17:51.950
I think is where you're getting at, having
an experimental folder which is a little bit

00:17:51.950 --> 00:17:52.950
more free-formatted isn't reviewed in exactly
the same way is appropriate.

00:17:52.950 --> 00:17:53.950
&gt;&gt; Yes. And another thing, it doesn't necessarily
have to adhere to the license structure to

00:17:53.950 --> 00:17:54.950
be included in Wave. So if someone--I think
I heard is--doesn't work when we plug in,

00:17:54.950 --> 00:18:01.020
that should be housed in order for someone
that has localized this and then we share

00:18:01.020 --> 00:18:30.070
that [INDISTINCT], you know.
&gt;&gt; DE RIJK: I'm not sure we can legally put

00:18:30.070 --> 00:18:41.140
that on our code at Google.com or we are at
[INDISTINCT].

00:18:41.140 --> 00:18:45.721
&gt;&gt; Well, not at Google itself, but basically,
the plug-in that we're making [INDISTINCT]

00:18:45.721 --> 00:18:46.721
also have your, you know, your license work
or whatever.

00:18:46.721 --> 00:18:51.010
&gt;&gt; I think it's common to create a distributor
project that has the structure that overlays

00:18:51.010 --> 00:18:53.250
on top of the core project. So you check out
the core project and then you check out the

00:18:53.250 --> 00:18:55.250
unit project and drop the code in and then
you can build everything together. But the

00:18:55.250 --> 00:18:57.120
particular project is named as central to
the--from the core project, so you don't have

00:18:57.120 --> 00:18:59.140
to impose some of the more strict processes
on the contributor stuff.

00:18:59.140 --> 00:19:02.750
&gt;&gt; Right. And can we do that in as simple
adaptation instead of everybody having all

00:19:02.750 --> 00:19:09.270
this stuff somewhere [INDISTINCT].
&gt;&gt; I think anybody can create a "google.com

00:19:09.270 --> 00:19:18.950
project."
&gt;&gt; DE RIJK: You can actually just click on

00:19:18.950 --> 00:19:24.840
clone on the Google code webpage.
&gt;&gt; My point is can we support it community-wise

00:19:24.840 --> 00:19:32.920
as opposed to...
&gt;&gt; So you're looking for a centralized repository

00:19:32.920 --> 00:19:38.800
of these experimental things?
&gt;&gt; Yeah, sure, yeah.

00:19:38.800 --> 00:19:40.569
&gt;&gt; Yeah, that will be tough.
&gt;&gt; I mean, because right now, some of them

00:19:40.569 --> 00:19:41.569
post something on the Wave protocol and say,
"Oh, I've done something in there," and then

00:19:41.569 --> 00:19:42.569
that's just lost if someone comes in the protocol
and have no idea how to find that because

00:19:42.569 --> 00:19:43.569
there's nothing [INDISTINCT].
&gt;&gt; DE RIJK: It will be nice if we could include

00:19:43.569 --> 00:19:48.040
that on the Wave protocol org website as well.
&gt;&gt; You said that set up a website Wave sort

00:19:48.040 --> 00:19:52.540
of [INDISTINCT] or something like that. So
this is a set-up and even surface [INDISTINCT]

00:19:52.540 --> 00:19:54.630
on how you set-up a protocol at Google or
anything?

00:19:54.630 --> 00:19:55.630
&gt;&gt; Well, that is...
&gt;&gt; Yeah, I think actually what you could just

00:19:55.630 --> 00:19:59.320
do is, like, part of your documentation things,
you could add in that says if you want to

00:19:59.320 --> 00:20:04.740
do something that isn't directly in line,
just check into experimental/Pooh where Pooh

00:20:04.740 --> 00:20:08.350
is the name of your research.
&gt;&gt; Yeah, yeah.

00:20:08.350 --> 00:20:11.290
&gt;&gt; DE RIJK: There's a question at the back.
&gt;&gt; Are there any plans today or over the next

00:20:11.290 --> 00:20:12.490
few days to kind of go over the source code
structure, like, what folders--what's in each

00:20:12.490 --> 00:20:21.791
folder kind of thing...?
&gt;&gt; DE RIJK: So...

00:20:21.791 --> 00:20:29.310
&gt;&gt; [INDISTINCT] because there's like, a coder
source and of the source [INDISTINCT] all

00:20:29.310 --> 00:20:35.620
of the folders have been [INDISTINCT].
&gt;&gt; DE RIJK: So the question for the people

00:20:35.620 --> 00:20:43.630
who's still watching is whether we will go
over the--how this co-source code is structured

00:20:43.630 --> 00:20:48.560
inside a repository. I currently don't have
an answer to that, but I think we will, but

00:20:48.560 --> 00:21:02.410
I don't know when. I'm not sure anyone...
&gt;&gt; What we could do is just on top of the

00:21:02.410 --> 00:21:03.410
install process [INDISTINCT] also at the same
time, if people wanted to sort of--I can put

00:21:03.410 --> 00:21:04.410
Joseph on the spot and...
&gt;&gt; DE RIJK: Preferably on top of installer's

00:21:04.410 --> 00:21:07.030
ware we should be able to do that and we're
here all weekend. Basically Thursday and Friday

00:21:07.030 --> 00:21:13.040
are also our coding days and that's definitely
where we--why you would go deeper into the

00:21:13.040 --> 00:21:16.490
code or we can help you out with that.
&gt;&gt; [INDISTINCT].

00:21:16.490 --> 00:21:23.090
&gt;&gt; DE RIJK: Yeah. And if you have any suggestion
how to make it better, you're welcome, really.

00:21:23.090 --> 00:21:30.270
&gt;&gt; We're also try to throw in a [INDISTINCT]
talk tomorrow the--you talking about authentication.

00:21:30.270 --> 00:21:39.400
I'm talking about the Wave [INDISTINCT].
&gt;&gt; DE RIJK: Yeah. So I know it's in the presentation

00:21:39.400 --> 00:21:41.670
for tomorrow include where the code is actually
located.

00:21:41.670 --> 00:21:47.500
&gt;&gt; Yeah.
&gt;&gt; DE RIJK: So, yeah. Anything else? I guess

00:21:47.500 --> 00:21:52.390
not. I think we are done here.
&gt;&gt; Yeah, so.

00:21:52.390 --> 00:21:54.010
&gt;&gt; DE RIJK: Next.

