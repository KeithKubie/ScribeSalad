WEBVTT
Kind: captions
Language: en

00:00:00.350 --> 00:00:02.300
So let's begin by recalling this thing

00:00:02.300 --> 00:00:05.305
called the instance variables. In the case of

00:00:05.305 --> 00:00:08.365
Class Movie, there were several of them,

00:00:08.365 --> 00:00:12.700
title, storyline, poster image URL, and trailer YouTube

00:00:12.700 --> 00:00:16.309
URL. Now, further recall that these variables

00:00:16.309 --> 00:00:19.390
are associated with every instance that we create.

00:00:19.390 --> 00:00:22.550
For example, both Toy Story and Avatar have

00:00:22.550 --> 00:00:25.570
their own copies of these variables. So I

00:00:25.570 --> 00:00:27.970
could print out Toy Story's storyline and I could

00:00:27.970 --> 00:00:32.470
also print out Avatar's storyline. Sometimes however, we need

00:00:32.470 --> 00:00:35.040
variables that we want all of our instances to

00:00:35.040 --> 00:00:39.170
share. So consider the variable valid_ratings for a

00:00:39.170 --> 00:00:41.940
movie. This is an array or a list, of

00:00:41.940 --> 00:00:45.200
all possible ratings a movie could have. Now, it

00:00:45.200 --> 00:00:48.180
would not quite make sense to say, hey, here

00:00:48.180 --> 00:00:51.090
are Toy Story's valid ratings, and here are Avatar's

00:00:51.090 --> 00:00:53.660
valid ratings. They would essentially be the same for

00:00:53.660 --> 00:00:58.030
all instances. Thus, this variable is really associated with a

00:00:58.030 --> 00:01:02.000
Class Movie. And is therefore called a Class Variable.

00:01:02.000 --> 00:01:04.420
Let's see it in action. So here is the code

00:01:04.420 --> 00:01:07.640
for our Class Movie. And behind this Python file

00:01:07.640 --> 00:01:10.240
is the other Python file we created, where we made

00:01:10.240 --> 00:01:12.880
a bunch of movie instances. So I'm going to

00:01:12.880 --> 00:01:16.390
begin by making changes to my Class Movie. Now here

00:01:16.390 --> 00:01:20.690
I will define a variable called valid ratings. Now notice

00:01:20.690 --> 00:01:23.940
that this variable valid ratings is defined at the level

00:01:23.940 --> 00:01:27.560
of the class and is outside the init function. In

00:01:27.560 --> 00:01:30.140
order to start using this variable, we will begin by

00:01:30.140 --> 00:01:33.180
saving this file first. So next I'm going to go

00:01:33.180 --> 00:01:35.510
to my other Python file. By the way, this is

00:01:35.510 --> 00:01:37.764
the file where we are defining a bunch of movie

00:01:37.764 --> 00:01:41.400
instances. And here, I will scroll down all the way

00:01:41.400 --> 00:01:43.680
to the bottom. And comment out any sort

00:01:43.680 --> 00:01:46.370
of print or output statements. Now, I'm doing

00:01:46.370 --> 00:01:51.330
this so I can focus primarily on valid ratings. Now, here, I will try to print

00:01:51.330 --> 00:01:57.420
out the value of the variable valid ratings by saying, print, and the name of my

00:01:57.420 --> 00:02:01.550
class, which is media.Movie, followed by the name

00:02:01.550 --> 00:02:05.350
of the variable, which is valid_ratings. There.

00:02:06.830 --> 00:02:10.910
Let me save and run this program. And boom. There

00:02:10.910 --> 00:02:14.450
it is. A list of all of my valid ratings.

00:02:14.450 --> 00:02:16.860
Notice how we use the class name movie to access

00:02:16.860 --> 00:02:20.130
this variable. This means that all instances of this class

00:02:20.130 --> 00:02:24.190
movie. Toy Story, Avatar and others, they can share this

00:02:24.190 --> 00:02:26.370
list, they can share this list to see if their

00:02:26.370 --> 00:02:29.820
individual rating is a valid one or not. Okay, so

00:02:29.820 --> 00:02:31.940
the one last thing I want to do is go back

00:02:31.940 --> 00:02:34.790
to my class movie. Now notice that the value

00:02:34.790 --> 00:02:39.170
of this variable valid_strings is probably a constant, by that

00:02:39.170 --> 00:02:41.570
I mean, that the value of this variable is probably

00:02:41.570 --> 00:02:44.390
not going change every now and then. When we define

00:02:44.390 --> 00:02:47.480
a constant like this, the Google Style Guide for

00:02:47.480 --> 00:02:50.360
Python recommends that we use all caps or an upper

00:02:50.360 --> 00:02:53.750
case to define a variable like that. I'm going to

00:02:53.750 --> 00:02:56.970
go ahead and save this file and then go back

00:02:56.970 --> 00:03:05.450
to my other Python file and change the variable name there as well. [NOISE]

00:03:05.450 --> 00:03:08.410
Let me save and run this program to see if it still

00:03:08.410 --> 00:03:12.720
works. And there it is, I get the correct output one more time.

