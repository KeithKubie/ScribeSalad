WEBVTT
Kind: captions
Language: en

00:00:08.670 --> 00:00:08.840
CHET HAASE: Hi.

00:00:08.840 --> 00:00:11.700
I'm Chet Haase, an engineer on
the android team at Google.

00:00:11.700 --> 00:00:14.900
I gave a talk with Romain Guy
at Google IO recently called

00:00:14.900 --> 00:00:17.560
"A Moving Experience," in which
we talked about various

00:00:17.560 --> 00:00:20.440
cartoon animation techniques
that you could apply to user

00:00:20.440 --> 00:00:21.570
interfaces.

00:00:21.570 --> 00:00:24.840
One of those techniques is
called squash and stretch.

00:00:24.840 --> 00:00:27.520
And we're going to show a demo
today that shows some of that,

00:00:27.520 --> 00:00:29.980
as well as another technique
that kicks in called

00:00:29.980 --> 00:00:31.180
exaggeration.

00:00:31.180 --> 00:00:35.030
So the idea with squash and
stretch is that objects in the

00:00:35.030 --> 00:00:38.740
real world deform to some
extent, especially when they

00:00:38.740 --> 00:00:40.320
hit say, a wall.

00:00:40.320 --> 00:00:43.360
If a body hits a wall or hits
the ground going very fast,

00:00:43.360 --> 00:00:45.720
it's not going to stay in
exactly the same shape that it

00:00:45.720 --> 00:00:48.570
was before it hit that
unmoving object.

00:00:48.570 --> 00:00:52.120
So maybe it's good if you want
your objects to have more of a

00:00:52.120 --> 00:00:55.340
real-world feel, or more organic
and natural feel, to

00:00:55.340 --> 00:00:57.540
actually give them some
elements of this

00:00:57.540 --> 00:00:59.540
stretchability as well.

00:00:59.540 --> 00:01:02.650
And the other element is
exaggeration, which is the

00:01:02.650 --> 00:01:06.160
idea from cartoons is you want
to make it very obvious what's

00:01:06.160 --> 00:01:08.230
going on and also add
a playful aspect.

00:01:08.230 --> 00:01:10.920
So not only would things deform
slightly, but maybe

00:01:10.920 --> 00:01:13.380
they would deform much more than
that, just to exaggerate

00:01:13.380 --> 00:01:16.330
and enhance the effect and
really let the user know

00:01:16.330 --> 00:01:18.000
exactly what's going on.

00:01:18.000 --> 00:01:19.400
So let's see how this
works in a demo.

00:01:19.400 --> 00:01:21.560
We have a very simple demo
where when I click on the

00:01:21.560 --> 00:01:23.990
button, the button is going to
fall down to the bottom of the

00:01:23.990 --> 00:01:25.630
screen with gravity.

00:01:25.630 --> 00:01:28.860
But before it bounces back up,
we've got this feeling that

00:01:28.860 --> 00:01:32.610
the button is this more elastic
and rubbery material.

00:01:32.610 --> 00:01:34.330
And so when it hits the ground,
it's actually going to

00:01:34.330 --> 00:01:37.790
adhere a little bit, and squash
and stretch out before

00:01:37.790 --> 00:01:40.880
finally snapping back and then
bouncing back up to its

00:01:40.880 --> 00:01:42.610
starting position.

00:01:42.610 --> 00:01:45.680
I've enabled a menu item so we
can slow this thing down, so

00:01:45.680 --> 00:01:47.730
we can see it in a little bit
more glorious detail.

00:01:47.730 --> 00:01:50.710
And you'll notice that we're
actually deforming the button

00:01:50.710 --> 00:01:51.890
as it falls as well.

00:01:51.890 --> 00:01:54.800
So it's not just when it
hits the floor at the

00:01:54.800 --> 00:01:55.550
bottom of the screen.

00:01:55.550 --> 00:01:58.680
But also as it's falling, the
object is actually stretching

00:01:58.680 --> 00:02:00.220
out according to gravity
a little bit.

00:02:00.220 --> 00:02:01.010
It's very subtle.

00:02:01.010 --> 00:02:04.190
It's hard to catch when it's
running at full speed, but it

00:02:04.190 --> 00:02:08.389
also indicates to the user the
subtle aspect of this button

00:02:08.389 --> 00:02:12.170
is interacting physically more
with its environment than

00:02:12.170 --> 00:02:14.020
buttons typically do.

00:02:14.020 --> 00:02:15.100
So let's take a look
at the code.

00:02:15.100 --> 00:02:17.520
It's actually fairly
straightforward animation code

00:02:17.520 --> 00:02:20.940
using object animators and
Property Values Holders to

00:02:20.940 --> 00:02:23.240
animate these things
in sequence.

00:02:23.240 --> 00:02:26.150
First of all, we calculate the
animation duration based on

00:02:26.150 --> 00:02:29.610
whether we've enabled the
Scaling option there so that

00:02:29.610 --> 00:02:33.120
we can see the animation
run really slowly.

00:02:33.120 --> 00:02:34.840
We set the Pivot Point.

00:02:34.840 --> 00:02:37.560
This is not necessary, but it
made some of the code a little

00:02:37.560 --> 00:02:40.450
bit simpler so that we didn't
have to sort of change the

00:02:40.450 --> 00:02:44.140
translation and scale around
a particular point.

00:02:44.140 --> 00:02:46.850
So we set the Pivot Point that
all the scales will happen

00:02:46.850 --> 00:02:49.880
around to the bottom
of the object.

00:02:49.880 --> 00:02:52.490
And then we use Property Values
Holder to animate

00:02:52.490 --> 00:02:55.370
several properties on the same
target object in parallel.

00:02:55.370 --> 00:02:57.770
We're going to animate the
translation y as well as the

00:02:57.770 --> 00:03:00.470
scale x and scale y properties
on the way down.

00:03:00.470 --> 00:03:02.690
So we're going to move the
object down, and as we move

00:03:02.690 --> 00:03:04.640
it, we're going to stretch it
out in y and we're going to

00:03:04.640 --> 00:03:07.550
squish it in in x as it goes.

00:03:07.550 --> 00:03:10.420
We're going to create the down
animation with a single object

00:03:10.420 --> 00:03:12.100
animator using these
three Property

00:03:12.100 --> 00:03:13.530
Values Holder objects.

00:03:13.530 --> 00:03:16.400
We're going to set an
interpolator to an Accelerate

00:03:16.400 --> 00:03:18.360
Interpolator because we want it
to look like it's reacting

00:03:18.360 --> 00:03:20.360
to gravity and actually
going faster the

00:03:20.360 --> 00:03:21.910
further down it falls.

00:03:21.910 --> 00:03:24.150
And then we're going to set the
Duration according to the

00:03:24.150 --> 00:03:26.090
duration we calculated before.

00:03:26.090 --> 00:03:29.290
Once we hit the bottom, then
we're going to stretch out in

00:03:29.290 --> 00:03:33.360
x and squash down in y like a
rubbery object might if it hit

00:03:33.360 --> 00:03:35.415
such a hard thing as a floor.

00:03:35.415 --> 00:03:37.890
So we're going to use again
Property Values Holders to

00:03:37.890 --> 00:03:40.570
animate scale x and scale
y in parallel.

00:03:40.570 --> 00:03:43.150
The Stretch animation is going
to use those Property Values

00:03:43.150 --> 00:03:44.660
Holders directly.

00:03:44.660 --> 00:03:46.940
We're going to set a Repeat
Counter repeat mode.

00:03:46.940 --> 00:03:49.620
So we want it to squash and
stretch out, and then we want

00:03:49.620 --> 00:03:51.100
it to snap back to
where it was.

00:03:51.100 --> 00:03:53.710
So it's the same animation
running in reverse according

00:03:53.710 --> 00:03:55.970
to the Repeat Count and
repeat mode here.

00:03:55.970 --> 00:03:57.860
We're going to set an
Interpolator Decelerator here

00:03:57.860 --> 00:04:00.200
so as it stretches out, I wanted
this feeling of the

00:04:00.200 --> 00:04:02.450
rubbery material having
this tension.

00:04:02.450 --> 00:04:04.670
The further out it goes, the
slower it's going to go until

00:04:04.670 --> 00:04:06.750
it finally reaches the end
and then snaps back.

00:04:06.750 --> 00:04:08.740
And as it snaps back, it's going
to use the reverse of

00:04:08.740 --> 00:04:09.470
deceleration.

00:04:09.470 --> 00:04:12.330
So it's going to accelerate,
which is what again this

00:04:12.330 --> 00:04:14.850
elastic or rubbery
object would do.

00:04:14.850 --> 00:04:17.130
And then we're going to animate
back to the top.

00:04:17.130 --> 00:04:20.290
So again, we're just animating
translation y and scale x and

00:04:20.290 --> 00:04:22.810
scale y-- basically the reverse
of what we did before,

00:04:22.810 --> 00:04:25.910
including using a decelerator to
give the effect of pulling

00:04:25.910 --> 00:04:29.220
up against gravity and then
slowing as it reaches the top

00:04:29.220 --> 00:04:30.870
of the curve, ready
to go again.

00:04:30.870 --> 00:04:32.250
We're going to use an
Animator Set to put

00:04:32.250 --> 00:04:33.350
these things together.

00:04:33.350 --> 00:04:34.530
We're going to play
them in sequence.

00:04:34.530 --> 00:04:36.000
So first we animate down.

00:04:36.000 --> 00:04:37.960
Then we stretch and squash
out, repeat that

00:04:37.960 --> 00:04:39.220
back to where it was.

00:04:39.220 --> 00:04:41.020
And then we run the
up animation.

00:04:41.020 --> 00:04:41.840
And that's it.

00:04:41.840 --> 00:04:43.090
Thanks.

