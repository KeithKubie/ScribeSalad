WEBVTT
Kind: captions
Language: en

00:00:00.510 --> 00:00:08.685
Now given a UID I know that some PFD in the entire cluster has the mapping for

00:00:08.685 --> 00:00:13.970
the UID saying what is the physical frame number that corresponds to it if it

00:00:13.970 --> 00:00:19.890
happens to be on that node or it's on the disk. That information is contained

00:00:19.890 --> 00:00:25.730
in some PFD in the entire cluster. So, if I have a page fault. I convert my VA

00:00:25.730 --> 00:00:28.920
to UID then which PFD will I go look

00:00:28.920 --> 00:00:31.700
up? I could broadcast to everybody and say, how

00:00:31.700 --> 00:00:34.640
do you have it? That will be very efficient.

00:00:34.640 --> 00:00:37.610
You don't want to do that, or we can say

00:00:37.610 --> 00:00:41.660
that there is some way of magically mapping, given

00:00:41.660 --> 00:00:45.590
a UID which node will have the PFD for

00:00:45.590 --> 00:00:48.300
me to look up. And find out the backing

00:00:48.300 --> 00:00:51.030
physical page. But we don't want to do a static

00:00:51.030 --> 00:00:57.900
binding of UID to the node that manages that UID. Because if we make a static

00:00:57.900 --> 00:01:01.110
mapping, then it pushes the burden on one

00:01:01.110 --> 00:01:04.200
node to take that, if some page has become

00:01:04.200 --> 00:01:07.150
really hot and everybody wants to use that.

00:01:07.150 --> 00:01:11.220
So what we want to do is distribute this management

00:01:11.220 --> 00:01:13.830
function also, just like the age management, we

00:01:13.830 --> 00:01:16.810
did not want to concentrate it on a single node.

00:01:16.810 --> 00:01:22.630
We want to distribute the management of giving this mapping between UID and

00:01:22.630 --> 00:01:29.950
which node has the PFD that. Can tell me information about the missing page. And

00:01:29.950 --> 00:01:37.190
that data structure is this Global Cache Directory, GCD. So GCD is a hash table,

00:01:37.190 --> 00:01:41.960
it's a cluster-wide hash table, so it's a distributed data structure. And the

00:01:41.960 --> 00:01:44.530
rule that GCD performs is given a UID, it

00:01:44.530 --> 00:01:48.990
will tell you which node has the PFD that

00:01:48.990 --> 00:01:52.270
corresponds to this UID. That's the role of this

00:01:52.270 --> 00:01:55.530
data structure, it's a partition hash table, so given

00:01:55.530 --> 00:02:01.820
a UID, I can say well. I go to the GCD, and the GCD will say, what is

00:02:01.820 --> 00:02:03.420
the PFD that has this UID? Because of the

00:02:03.420 --> 00:02:07.000
partition hash table, even though a part of this GCD

00:02:07.000 --> 00:02:12.500
is on every node, every node may not be locally able to determine where the PFD

00:02:12.500 --> 00:02:18.190
is. Given a UID, it can go, it has to know which GCD it has to

00:02:18.190 --> 00:02:21.660
consult. In order to know which node has

00:02:21.660 --> 00:02:24.330
the PFD that corresponds to this UID. So,

00:02:24.330 --> 00:02:28.360
we need another data structure that tells us,

00:02:28.360 --> 00:02:32.210
given a UID, which node has the GCD

00:02:32.210 --> 00:02:38.390
that corresponds to this UID. And that is the page ownership directory. So, the

00:02:38.390 --> 00:02:42.170
page ownership directory says, given a UID.

00:02:42.170 --> 00:02:46.160
Which node has the DCD that corresponds to

00:02:46.160 --> 00:02:49.570
this UID. And this data structure the

00:02:49.570 --> 00:02:53.350
page ownership directory is replicated on all the

00:02:53.350 --> 00:02:57.310
nodes. It's an identical replica that is on all the nodes. So, when I have

00:02:57.310 --> 00:03:02.940
a page for it first thing that I'm going to do, is go to my POD and that is.

00:03:02.940 --> 00:03:06.340
A replicated data structure and it's completed information, up

00:03:06.340 --> 00:03:08.370
to date information. So I go to this POD

00:03:08.370 --> 00:03:11.350
and as this question. Given this new id, how

00:03:11.350 --> 00:03:14.430
do I find out the global cache directory that

00:03:14.430 --> 00:03:18.210
has information about the PFD that can help me

00:03:18.210 --> 00:03:22.050
to. Map my virtual address to a physical address.

00:03:22.050 --> 00:03:23.510
Remember that we could have simply gone from

00:03:23.510 --> 00:03:24.780
here to here, but that would have been a

00:03:24.780 --> 00:03:28.270
static mapping, and this one level of indirection

00:03:28.270 --> 00:03:30.770
is giving a way by which we don't have

00:03:30.770 --> 00:03:34.490
to statically map. A PFD to a UID,

00:03:34.490 --> 00:03:37.900
but this intermediate step, allows us to move the

00:03:37.900 --> 00:03:43.610
responsibility of hosting a particular PFD to different nodes,

00:03:43.610 --> 00:03:47.670
using this intermediary which is a distributive hash table.

00:03:47.670 --> 00:03:50.920
I said that this page ownership directory.

00:03:50.920 --> 00:03:54.420
Is replicated data structure. Can it change? Well

00:03:54.420 --> 00:03:56.910
it can change over time because what this

00:03:56.910 --> 00:03:59.960
page ownership directory is saying is the following.

00:03:59.960 --> 00:04:03.110
The UID space is something that spans the

00:04:03.110 --> 00:04:06.200
entire cluster. If you take the virtual addresses

00:04:06.200 --> 00:04:09.580
of all the possibilities of the entire cluster.

00:04:09.580 --> 00:04:13.000
That universe of all the virtual addresses is

00:04:13.000 --> 00:04:16.560
this UID space because it is being mapped from a a virtual address of a single

00:04:16.560 --> 00:04:21.980
process to this UID space and this spans the whole cluster and what we have done

00:04:21.980 --> 00:04:27.590
is we have partitioned that UID space. Into set of

00:04:27.590 --> 00:04:33.290
regions of ownership and that's what is called the page ownership.

00:04:33.290 --> 00:04:38.610
So every known is responsible for a portion of the UID

00:04:38.610 --> 00:04:42.460
space and that is this global cache directory. Now

00:04:42.460 --> 00:04:45.510
if the LAN never revolves. In other words, if

00:04:45.510 --> 00:04:48.550
the set of nodes on the LAN is fixed.

00:04:48.550 --> 00:04:51.460
Then the page ownership director also remains the same. But

00:04:51.460 --> 00:04:54.140
if nodes, if new nodes are added and deleted

00:04:54.140 --> 00:04:57.680
and so on, that's when the page ownership directory

00:04:57.680 --> 00:05:00.900
is going to change. And if that happens, then we

00:05:00.900 --> 00:05:03.690
have to replicate again, we have to redistribute the page

00:05:03.690 --> 00:05:06.580
ownership directly. But this is not something that's going to happen

00:05:06.580 --> 00:05:10.170
too often. It's very rare that node is going to come down

00:05:10.170 --> 00:05:12.120
or new node is going to be inserted into a

00:05:12.120 --> 00:05:15.940
LAN. And therefore this page ownership directory does not change very

00:05:15.940 --> 00:05:19.050
often. And that's where it's replicated data structure that you

00:05:19.050 --> 00:05:22.350
can believe at every node. But if it changes, there is

00:05:22.350 --> 00:05:24.550
also a way of handling that. We'll see that in a

00:05:24.550 --> 00:05:28.700
minute. So the path for page fall handling is if you

00:05:28.700 --> 00:05:32.290
have a page fall you convert. VA to UID

00:05:32.290 --> 00:05:34.580
and once you have this UID then you can go

00:05:34.580 --> 00:05:37.660
to your page ownership directory, that's on your note.

00:05:37.660 --> 00:05:40.800
And ask the question, please tell me who has the

00:05:40.800 --> 00:05:43.990
PFD that corresponds to this UID? And this is

00:05:43.990 --> 00:05:46.040
going to tell me oh here is the note that

00:05:46.040 --> 00:05:49.080
contains the PFD for the UID that you're looking

00:05:49.080 --> 00:05:53.810
for. Then I can go to that PFD and from

00:05:53.810 --> 00:05:56.780
that PFD, I can get the page that I am

00:05:56.780 --> 00:05:59.690
looking for which might be in that note or it might

00:05:59.690 --> 00:06:02.262
say well it's not in my note any more. It's on

00:06:02.262 --> 00:06:05.750
the disk. So this is the pack for page four handling.

