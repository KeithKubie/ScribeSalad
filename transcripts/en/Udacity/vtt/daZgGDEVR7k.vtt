WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.000
The last thing we'll do in this unit is talk about how to use RSA

00:00:04.000 --> 00:00:06.000
to solve the problem of signing a document.

00:00:06.000 --> 00:00:12.000
This is what we started with as one of the key motivations for asymmetric cryptography.

00:00:12.000 --> 00:00:16.000
This would be the straightforward way to do this, that Alice would take the document,

00:00:16.000 --> 00:00:19.000
encrypt it using her private key.

00:00:19.000 --> 00:00:22.000
That produces a ciphertext, which is really the sign document,.

00:00:22.000 --> 00:00:25.000
Anyone who has her public key, including Bob, can now use the encryption

00:00:25.000 --> 00:00:29.000
using her public key on that signed document and obtain the document

00:00:29.000 --> 00:00:34.000
and verify--because this document was decrypted using Alice's public key--

00:00:34.000 --> 00:00:36.000
that only Alice could have created it.

00:00:36.000 --> 00:00:39.000
The problem with this approach is RSA is very expensive.

00:00:39.000 --> 00:00:41.000
We don't want to use it on large documents.

00:00:41.000 --> 00:00:47.000
It costs about 1000 times more as much computing power to do one RSA encryption

00:00:47.000 --> 00:00:49.000
as it does to do symmetric encryption.

00:00:49.000 --> 00:00:53.000
That means we don't want to encrypt the whole document like this.

00:00:53.000 --> 00:00:55.000
We need to do something else.

00:00:55.000 --> 00:00:58.000
The question is how should Alice sign a large document m?

00:00:58.000 --> 00:01:02.000
We'll assume that Alice has a public key known to anyone who wants to read the document,

00:01:02.000 --> 00:01:07.000
a private key known only to Alice, an implementation of RSA, and H--

00:01:07.000 --> 00:01:09.000
a secure cryptographic hash function.

00:01:09.000 --> 99:59:59.000
Which one of these options makes the most sense?

