WEBVTT
Kind: captions
Language: en

00:00:00.080 --> 00:00:03.250
So that ties together this, what constructed E does

00:00:03.250 --> 00:00:06.920
for you, and connecting it to the hardest examples.

00:00:06.920 --> 00:00:08.800
So now, that gets us to a nice little

00:00:08.800 --> 00:00:11.980
trick where we can talk about how we actually output

00:00:11.980 --> 00:00:15.650
our final example. So, the way you construct your

00:00:15.650 --> 00:00:17.930
final example, they way you do that combination in the

00:00:17.930 --> 00:00:20.920
step is basically by doing a weighted average. And

00:00:20.920 --> 00:00:25.330
the weight Is going to be based upon this alpha

00:00:25.330 --> 00:00:34.370
sub T. So the final hypothesis is just the s g n function of the weighted sum of

00:00:34.370 --> 00:00:38.750
all of the rules of thumb, all of the weak classifiers that you've been picking

00:00:38.750 --> 00:00:40.990
up over all of these time steps Where

00:00:40.990 --> 00:00:44.230
they're weighted by the alpha sub T's. And remember,

00:00:44.230 --> 00:00:50.540
the alpha sub T is one half of the natural log of one minus epsilon T over

00:00:50.540 --> 00:00:54.250
epsilon T. That is to say, it's a measure of how

00:00:54.250 --> 00:00:58.240
well you're doing with respect to underlining error. So, you get more

00:00:58.240 --> 00:01:01.670
weight if you do well Then if you do less well or

00:01:01.670 --> 00:01:04.010
you get less weight. So what does this look like to you?

00:01:04.010 --> 00:01:06.680
Well its a weighted average based on how well you're doing or

00:01:06.680 --> 00:01:09.870
how well each of the individual hypotheses are doing and then you

00:01:09.870 --> 00:01:12.770
pass it through a thresh holding function where if its below zero

00:01:12.770 --> 00:01:15.600
you say you know what? Negative and if its above zero you

00:01:15.600 --> 00:01:18.380
say you know what? Positive and if its zero you just throw

00:01:18.380 --> 00:01:21.860
up your hands and And return zero. In other words, you return literally

00:01:21.860 --> 00:01:25.750
the sign of the number. So you are throwing away information there, and

00:01:25.750 --> 00:01:28.710
I'm not going to tell you what it is now, but when we go

00:01:28.710 --> 00:01:31.280
to the next lesson it;s going to turn out that that little bit of

00:01:31.280 --> 00:01:32.640
information you throw away is actually

00:01:32.640 --> 00:01:34.210
pretty important. But that's just a little

00:01:34.210 --> 00:01:37.370
bit of a teaser. We'll get back to that there. Okay so, this

00:01:37.370 --> 00:01:40.720
is boosting, Michael. There's really nothing else to it. You have a very

00:01:40.720 --> 00:01:43.360
simple algorithm, which can be written down in a couple

00:01:43.360 --> 00:01:47.640
of lines. The hardest parts are constructing the distribution, which I

00:01:47.640 --> 00:01:50.330
show you how to do over here, and then simply bringing

00:01:50.330 --> 00:01:52.600
everything together, which I show you how to do over here.

00:01:52.600 --> 00:01:55.320
&gt;&gt; Alright yeah, I think it doesn't seem so bad

00:01:55.320 --> 00:01:56.810
and I feel like I could code this up, but I

00:01:56.810 --> 00:01:58.510
would be a little happier if I had a handle

00:01:58.510 --> 00:02:00.870
on what the, why alpha is the way that it is.

00:02:00.870 --> 00:02:03.200
&gt;&gt; Well there's two answers. The first answer

00:02:03.200 --> 00:02:06.180
is. You use natural logs because you're using

00:02:06.180 --> 00:02:08.210
exponentials and that's always a cute thing to

00:02:08.210 --> 00:02:10.600
do. And of course, you're using the error term

00:02:10.600 --> 00:02:12.400
as a way of measuring how good the hypothesis

00:02:12.400 --> 00:02:14.680
is. And the second answer is, it's in the

00:02:14.680 --> 00:02:17.658
reading you were supposed to have done. [LAUGH] So,

00:02:17.658 --> 00:02:19.478
go back and read the paper now that you've

00:02:19.478 --> 00:02:21.194
listened to this and you will have a much

00:02:21.194 --> 00:02:24.300
better understanding of what it's trying to tell you.

00:02:24.300 --> 00:02:24.550
&gt;&gt; Thanks

00:02:24.550 --> 00:02:27.100
&gt;&gt; You're welcome. I'm about helping others Michael you know that.

