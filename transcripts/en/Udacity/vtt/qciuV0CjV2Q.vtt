WEBVTT
Kind: captions
Language: en

00:00:00.101 --> 00:00:03.175
Of course, multiple processors can arrive at the barrier at the same

00:00:03.175 --> 00:00:05.719
time and all of them are going to work with their local data

00:00:05.719 --> 00:00:08.464
structure. So, like, this guy will work with this local data structure.

00:00:08.464 --> 00:00:12.368
This guy with this local data structure. With this local data structure. And

00:00:12.368 --> 00:00:14.668
each of them is waiting for his partner to arrive so that

00:00:14.668 --> 00:00:17.750
he can move up the tree. So that's what going on and so

00:00:17.750 --> 00:00:22.970
eventually, P3 is going to arrive and so when P3 arrives, he decrements

00:00:22.970 --> 00:00:25.710
the count, sees it as zero so he can move up the tree.

00:00:25.710 --> 00:00:27.860
When it comes here it says, oh the count is

00:00:27.860 --> 00:00:30.430
already one so I decrement it and the count becomes

00:00:30.430 --> 00:00:34.290
zero and remember P0 decremented the count and it is

00:00:34.290 --> 00:00:36.870
waiting on locksense. So P3, when it comes here, finds

00:00:36.870 --> 00:00:40.460
that the count is one, decrements it, becomes zero and

00:00:40.460 --> 00:00:44.070
it moves up the tree because the barrier is still

00:00:44.070 --> 00:00:47.680
not done until we know that everybody has arrived at

00:00:47.680 --> 00:00:50.722
the barrier. So in the meanwhile, on this half of the

00:00:50.722 --> 00:00:53.666
tree, what's going on is that P4 has arrived, P5 is

00:00:53.666 --> 00:00:56.600
not there yet, P6 and P7 have arrived. And it turns

00:00:56.600 --> 00:00:59.140
out that P6 was the last guy to come to the

00:00:59.140 --> 00:01:01.740
barrier here, and therefore, he is the guy that has moved up.

00:01:01.740 --> 00:01:04.830
And he has decremented count. And he's waiting for this half

00:01:04.830 --> 00:01:09.360
of the tree to arrive at the barrier. And you can guess

00:01:09.360 --> 00:01:12.440
which one is going to come up, right? Because P4 has already

00:01:12.440 --> 00:01:15.740
arrived here, and so if P4 has already arrived here, he's decremented

00:01:15.740 --> 00:01:19.300
the count, and he's waiting on locksense to flip. So

00:01:19.300 --> 00:01:22.380
the straggler in this whole seam, scheme of things, is

00:01:22.380 --> 00:01:24.870
this guy right here. He's the guy who is, is

00:01:24.870 --> 00:01:27.780
still not arrived, but eventually he'll also arrive. When he

00:01:27.780 --> 00:01:31.600
arrives, he will decrement the count, find that the count

00:01:31.600 --> 00:01:34.790
has become zero, move up the tree, and he'll find

00:01:34.790 --> 00:01:38.780
that this count is already decremented also, and when he

00:01:38.780 --> 00:01:41.490
comes up here, he will decrement it to zero, and

00:01:41.490 --> 00:01:43.400
then he'll say, oh, if we're all done, so we

00:01:43.400 --> 00:01:46.570
can move up here. So, that's what is going to happen. So

00:01:46.570 --> 00:01:49.890
we come here, P5 comes here and goes all the

00:01:49.890 --> 00:01:52.590
way up. And then when it comes up here, it sees

00:01:52.590 --> 00:01:56.090
that P3 has already decremented the count to one. And

00:01:56.090 --> 00:01:59.045
so when he comes up, he decrements it, and it becomes

00:01:59.045 --> 00:02:02.630
zero. And at this point, everybody has arrived at the

00:02:02.630 --> 00:02:06.560
barrier. So let's understand what each processor does. When a processor

00:02:06.560 --> 00:02:11.880
arrives at a barrier it is going to decrement the count. If the count is

00:02:11.880 --> 00:02:16.780
not zero, it's going to spin on this locksense flag. If a

00:02:16.780 --> 00:02:21.770
processor arrives at a barrier, decrements the count, finds that the count

00:02:21.770 --> 00:02:23.960
is zero, then what it's going to do is

00:02:23.960 --> 00:02:26.360
one of two things. The first thing it's going to

00:02:26.360 --> 00:02:31.567
do is, he's going to say, do I have a parent? If I have a parent, what I have to

00:02:31.567 --> 00:02:33.790
do is, I have to recurse. Do the same

00:02:33.790 --> 00:02:36.904
thing to the next level. Right? So, so the algorithm

00:02:36.904 --> 00:02:40.307
is, decrement count and see if the count becomes

00:02:40.307 --> 00:02:43.960
zero. If the count has become zero, then you recurse.

00:02:43.960 --> 00:02:46.280
If end of the parent is there, you recurse.

00:02:46.280 --> 00:02:48.850
If the count does not become zero, then spin on

00:02:48.850 --> 00:02:53.260
the local locksense flag. And you continue this. So you

00:02:53.260 --> 00:02:57.310
continue this P0, that this came up here and informed

00:02:57.310 --> 00:03:00.120
this is another parent. So so this, you know, it, it

00:03:00.120 --> 00:03:02.010
is, it is, it is stuck here. But P3, when it

00:03:02.010 --> 00:03:04.260
came later on, it moves up. And when it came up

00:03:04.260 --> 00:03:08.160
here, this is the last part. So there's no more recursing here.

00:03:08.160 --> 00:03:12.880
So when P5 finally arrives here, it finds that there is

00:03:12.880 --> 00:03:16.380
no more parent. This is the root of the tree. And

00:03:16.380 --> 00:03:19.710
since we reached the root of the tree, you know that

00:03:19.710 --> 00:03:22.680
if the count is zero now at the root of the tree,

00:03:22.680 --> 00:03:26.950
then everybody has arrived at the barrier. So count at

00:03:26.950 --> 00:03:29.970
the root of the tree becoming zero is indicative to the

00:03:29.970 --> 00:03:34.200
last arriving processor, P5 in this case, that everybody has arrived

00:03:34.200 --> 00:03:36.770
at the barrier, so it's time now to wake up everyone.

