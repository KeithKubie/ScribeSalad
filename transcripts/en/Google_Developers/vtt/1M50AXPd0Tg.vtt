WEBVTT
Kind: captions
Language: en

00:00:02.340 --> 00:00:03.340
&gt;&gt;Evan Stade: All right.

00:00:03.340 --> 00:00:04.340
Hello, everyone.

00:00:04.340 --> 00:00:05.340
My name is Evan Stade and this is Dan Beam
and we're both software engineers on the Chrome

00:00:05.340 --> 00:00:06.340
team.

00:00:06.340 --> 00:00:07.340
We're based out of Google L.A. and we're here
today to talk to you about payments on the

00:00:07.340 --> 00:00:08.340
web.

00:00:08.340 --> 00:00:09.340
Now, this is something that we're very excited
to bring to you because getting user payment

00:00:09.340 --> 00:00:10.340
information is a problem that's as old as
the Internet itself, so we're excited to talk

00:00:10.340 --> 00:00:11.340
about a new technique we've got.

00:00:11.340 --> 00:00:12.340
So what are we talking about today?

00:00:12.340 --> 00:00:13.930
Well, first, we're proposing an extension
to a web standard called Autocomplete, and

00:00:13.930 --> 00:00:18.110
secondly, we're going to show you the implementation
that we have going in Chrome, which is partially

00:00:18.110 --> 00:00:21.949
a proof of concept and partially something
that we hope to launch sooner rather than

00:00:21.949 --> 00:00:23.980
later.

00:00:23.980 --> 00:00:28.539
So without further ado, I'm going to cut straight
to the chase and give you a demo of what we

00:00:28.539 --> 00:00:29.539
have going on.

00:00:29.539 --> 00:00:32.160
I'm a new user on this Web site.

00:00:32.160 --> 00:00:34.680
This is a site that sells booze-related accessories.

00:00:34.680 --> 00:00:37.360
I don't know how to even pronounce the name
of this site.

00:00:37.360 --> 00:00:39.079
I've never been here.

00:00:39.079 --> 00:00:40.550
But this looks kind of exciting.

00:00:40.550 --> 00:00:44.719
I'm going to go after this Lasso wine holder
so I can capture all the wayward bottles of

00:00:44.719 --> 00:00:47.020
wine that are trying to run away before I
can drink them.

00:00:47.020 --> 00:00:51.030
[ Laughter ]
&gt;&gt;Evan Stade: I'll go to Checkout, and so

00:00:51.030 --> 00:00:57.399
I'm hit with a page that's full of forms that
I have to fill in and it's all this data.

00:00:57.399 --> 00:00:58.920
I don't really look forward to doing this.

00:00:58.920 --> 00:01:02.579
I know it's going to happen when I go to buy
stuff on line.

00:01:02.579 --> 00:01:04.850
I know you're not looking forward to watching
me type it in.

00:01:04.850 --> 00:01:10.049
So instead of making you watch that, I'm going
to back out of here and instead show you how

00:01:10.049 --> 00:01:12.840
life -- how easy life could be.

00:01:12.840 --> 00:01:20.630
So I'm going to enable the new feature we've
got here, going to try Checkout again.

00:01:20.630 --> 00:01:24.569
And this time, Chrome pops open this dialogue
on top of the Web page.

00:01:24.569 --> 00:01:28.180
It's presenting this information that Chrome
knows about me because I've typed it in in

00:01:28.180 --> 00:01:31.310
the past.

00:01:31.310 --> 00:01:37.859
So far, nothing's happened but if I type in
my CVV right here, I then hit "Submit," this

00:01:37.859 --> 00:01:40.479
information will be sent down to the merchant's
site.

00:01:40.479 --> 00:01:44.299
As you can see, it's reciting it back to me.

00:01:44.299 --> 00:01:49.840
And now their site's ready to put this card
number into its payment processor, as soon

00:01:49.840 --> 00:01:51.729
as I hit "place order," and I'm done.

00:01:51.729 --> 00:01:52.729
The order is placed.

00:01:52.729 --> 00:01:53.729
Now, that was really easy.

00:01:53.729 --> 00:01:55.969
That was great because I'm really lazy.

00:01:55.969 --> 00:02:00.869
As you can see, I don't even like typing in
my own information when I'm buying something.

00:02:00.869 --> 00:02:05.990
And then there's another example of me being
lazy on this slide.

00:02:05.990 --> 00:02:11.480
So this is me commuting to work at the office
in beautiful Venice Beach, California.

00:02:11.480 --> 00:02:13.900
I'm taking the bus.

00:02:13.900 --> 00:02:17.650
[ Laughter ]
&gt;&gt;Evan Stade: And here is me.

00:02:17.650 --> 00:02:19.750
So I'm being very efficient in this picture.

00:02:19.750 --> 00:02:20.750
Or lazy.

00:02:20.750 --> 00:02:21.750
However you want to look at it.

00:02:21.750 --> 00:02:25.269
I'm getting maximal rewards for minimum effort.

00:02:25.269 --> 00:02:29.650
This is something that makes me also very
keen on online shopping because online shopping

00:02:29.650 --> 00:02:33.500
is very efficient compared to, you know, real-world
shopping.

00:02:33.500 --> 00:02:34.709
I don't have to drive to the store.

00:02:34.709 --> 00:02:38.989
I mean, L.A. usually is a swath of traffic.

00:02:38.989 --> 00:02:40.849
The store is way over there.

00:02:40.849 --> 00:02:41.849
I'm over here.

00:02:41.849 --> 00:02:45.739
Once you get to the store, you have to find
the item, you have to wait in line at checkout,

00:02:45.739 --> 00:02:49.360
it's a big hassle and it makes you feel very
emo.

00:02:49.360 --> 00:02:52.780
But the one thing that's good about buying
stuff in the real world is it's very easy

00:02:52.780 --> 00:02:53.780
to pay.

00:02:53.780 --> 00:02:56.660
So as soon as you get to the front of the
checkout line, you hand over a big stack of

00:02:56.660 --> 00:02:59.560
cash or you swipe a little piece of plastic,
and you're done.

00:02:59.560 --> 00:03:01.989
It's something so easy, a baby can do.

00:03:01.989 --> 00:03:06.150
[ Laughter ]
&gt;&gt;Evan Stade: But as we all know from personal

00:03:06.150 --> 00:03:10.290
experience and from what I showed you a second
ago, it's not as easy on the Internet.

00:03:10.290 --> 00:03:16.170
So here is an example where I went to a Web
page and I -- a merchant site.

00:03:16.170 --> 00:03:17.170
I tried to buy something.

00:03:17.170 --> 00:03:18.900
I've never been to this site before.

00:03:18.900 --> 00:03:22.450
And when I'm going through checkout, there's
these four distinct steps that require interaction

00:03:22.450 --> 00:03:26.450
and inputting information before I even get
to the confirmation page.

00:03:26.450 --> 00:03:31.769
Now, this is a big hassle, and this is why
we're seeing users abandon items in their

00:03:31.769 --> 00:03:35.319
shopping cart or this is at least one reason
why we see users abandon items in their shopping

00:03:35.319 --> 00:03:41.609
cart upwards of 60% of the time when they're
going through e-commerce checkout.

00:03:41.609 --> 00:03:45.870
Something like 14% of users, if you poll them,
will tell you that checkout complexity is

00:03:45.870 --> 00:03:49.500
one of the limiting factors and why they don't
do more on line shopping.

00:03:49.500 --> 00:03:53.629
And then, of course, you might have navigated
here on your mobile device, in which case

00:03:53.629 --> 00:03:55.260
you see something like this.

00:03:55.260 --> 00:04:00.590
You know, half your screen is taken up by
your keyboard, you're trying to type in addresses

00:04:00.590 --> 00:04:04.340
and numbers and things that are not easy to
get exactly right on a small keyboard where

00:04:04.340 --> 00:04:09.510
predictive text doesn't help so much, and
so the abandonment rate skyrockets up to around

00:04:09.510 --> 00:04:11.530
97% on mobile.

00:04:11.530 --> 00:04:16.391
So this is a huge lost opportunity, a huge
frontier, much room for improvement that we

00:04:16.391 --> 00:04:17.519
think we can tackle.

00:04:17.519 --> 00:04:21.530
And that's one of the main motivating factors
for what we're presenting today.

00:04:21.530 --> 00:04:26.470
At the end of the day, you end up feeling
a lot like Fry as a user.

00:04:26.470 --> 00:04:30.060
You just want the sites to take your money
and give you your goods and you don't care

00:04:30.060 --> 00:04:33.470
how it's done, as long as it's secure.

00:04:33.470 --> 00:04:34.470
So what are we doing about it?

00:04:34.470 --> 00:04:38.970
Well, a few years ago, Chrome introduced a
form-filling feature called Chrome Autofill

00:04:38.970 --> 00:04:43.550
and what that does is when you type in information
on one page, it will remember your information

00:04:43.550 --> 00:04:46.060
and then you go to another page and it will
help you fill it in.

00:04:46.060 --> 00:04:47.830
There's a couple of problems with that, though.

00:04:47.830 --> 00:04:53.599
For one thing, it's tacked on top of the web,
so it doesn't have an easy time of matching

00:04:53.599 --> 00:04:56.150
up the form fields from one page onto another.

00:04:56.150 --> 00:04:59.600
Since every page looks different, it has to
figure out what kind of data was going into

00:04:59.600 --> 00:05:05.229
this field and -- you know, on Site A and
match it up to which field on Site B should

00:05:05.229 --> 00:05:06.370
get that same data.

00:05:06.370 --> 00:05:10.280
Another problem is that Site A may not have
asked for all the same data so you haven't

00:05:10.280 --> 00:05:13.910
typed it in yet, Chrome doesn't know that,
it can't fill it in on Site B.

00:05:13.910 --> 00:05:18.259
And then there's cases like you saw on the
last slide where there's checkout flow that's

00:05:18.259 --> 00:05:22.350
several steps long and you have to initiate
autofill over and over to get through it.

00:05:22.350 --> 00:05:27.110
And while this is a good tool to have in your
belt as a user, and makes your life a good

00:05:27.110 --> 00:05:28.880
deal easier, it doesn't help much for developers.

00:05:28.880 --> 00:05:32.979
Developers are people, too, of course.

00:05:32.979 --> 00:05:37.060
So, you know, they look something like this
when they're trying to come up with the perfect

00:05:37.060 --> 00:05:38.060
checkout flow.

00:05:38.060 --> 00:05:39.220
They have a lot to worry about.

00:05:39.220 --> 00:05:43.169
They have to make sure the UI is intuitive
and friendly and not confusing.

00:05:43.169 --> 00:05:44.410
And there's all kinds of research.

00:05:44.410 --> 00:05:49.009
I mean, there's entire journals that talk
about user experience research that focuses

00:05:49.009 --> 00:05:51.970
on how to improve your conversion rates in
the checkout flow.

00:05:51.970 --> 00:05:53.759
So it's a hard problem.

00:05:53.759 --> 00:05:57.230
And then you've got to worry about selling
internationally, if that's your market.

00:05:57.230 --> 00:06:02.229
You know, the address information that a Slovakian
user, an Irish user, or a local user would

00:06:02.229 --> 00:06:04.140
put in is all different.

00:06:04.140 --> 00:06:09.980
In addition to that, no matter what you do,
how intuitive or friendly your UI is, there's

00:06:09.980 --> 00:06:13.430
going to be typos when the user is putting
in new information, or if they moved, they

00:06:13.430 --> 00:06:18.100
changed their address, they have a new credit
card, or he's going to make typos and so you

00:06:18.100 --> 00:06:21.949
have to validate that input and every site
out there that is doing that, is reinventing

00:06:21.949 --> 00:06:22.949
the wheel over and over.

00:06:22.949 --> 00:06:24.000
It's a big hassle.

00:06:24.000 --> 00:06:27.560
From where we stand, there's a lot of ways
to better it, both on the developer's side

00:06:27.560 --> 00:06:28.560
and the user's side.

00:06:28.560 --> 00:06:32.970
The user is typing in the same information
over and over, and so as a browser and as

00:06:32.970 --> 00:06:37.039
a platform, we think we can make a big impact
and reduce the effort of everyone involved.

00:06:37.039 --> 00:06:41.409
The only thing that we have to do is we have
to have collaboration from the page and the

00:06:41.409 --> 00:06:43.680
user and they have to rely on the platform.

00:06:43.680 --> 00:06:46.849
So here I am again.

00:06:46.849 --> 00:06:52.110
In this case I'm here in the metaphorical
sense and I'm a web developer who is not exactly

00:06:52.110 --> 00:06:56.400
getting a free ride but getting helped along
by RequestAutocomplete, which is the loose

00:06:56.400 --> 00:06:59.919
name for the new spec that we're introducing
today.

00:06:59.919 --> 00:07:02.379
So what's left in this presentation?

00:07:02.379 --> 00:07:06.530
Well, first of all, I'll give you a little
bit more of an extended demo of what we've

00:07:06.530 --> 00:07:10.520
got going on the desktop, so I should say
that all the demos you're seeing today are

00:07:10.520 --> 00:07:11.900
live in Chrome.

00:07:11.900 --> 00:07:17.100
They're not enabled for users but they're
behind the flag and if you have -- you know,

00:07:17.100 --> 00:07:21.050
if you download the Chrome source and you
build it yourself, you can see all this in

00:07:21.050 --> 00:07:22.340
action.

00:07:22.340 --> 00:07:25.780
After which Dan's going to stand up and he's
going to tell you how to integrate it into

00:07:25.780 --> 00:07:31.500
your site as a merchant, the smoke and mirrors
that's going on at the last site that we were

00:07:31.500 --> 00:07:35.259
on in order to make this checkout experience
possible.

00:07:35.259 --> 00:07:39.460
And he's going to tell you about all the features
that we were able to add onto our implementation

00:07:39.460 --> 00:07:45.370
to improve the ecosystem, both adding layers
of security and convenience.

00:07:45.370 --> 00:07:48.290
Some of these features might even blow you
away, as they did to Dan.

00:07:48.290 --> 00:07:54.300
After which, you know, I promised that mobile
was one of the areas that we could make the

00:07:54.300 --> 00:07:58.189
biggest impact, so I'll give you a demo on
the -- the implementation that we've been

00:07:58.189 --> 00:08:04.460
working on so far concurrently on an Android
device here.

00:08:04.460 --> 00:08:07.800
So without further ado, it's time to check
out.

00:08:07.800 --> 00:08:12.770
I'm going to press this big juicy button and
this is the dialogue that you saw a few minutes

00:08:12.770 --> 00:08:14.139
ago.

00:08:14.139 --> 00:08:17.550
So one thing you didn't see before is this
big red banner on top.

00:08:17.550 --> 00:08:21.479
The point of this banner is that this slide
deck, which is an HTML5 slide deck, is not

00:08:21.479 --> 00:08:25.620
actually a secure place to input your credit
card information, so we're warning the user

00:08:25.620 --> 00:08:26.620
about that.

00:08:26.620 --> 00:08:27.860
But that's okay.

00:08:27.860 --> 00:08:31.820
As the user, I'm going to make an executive
decision to input my information anyway.

00:08:31.820 --> 00:08:34.280
Now, Chrome already has this information stored
about me.

00:08:34.280 --> 00:08:37.110
I haven't had to type anything in.

00:08:37.110 --> 00:08:41.380
But I'm actually going to say that I am shipping
this to my dog.

00:08:41.380 --> 00:08:42.380
It's a gift.

00:08:42.380 --> 00:08:43.880
So I'm changing the shipping details.

00:08:43.880 --> 00:08:48.270
As you could see, it was really easy to choose
among the different addresses that Chrome

00:08:48.270 --> 00:08:51.270
has remembered about me.

00:08:51.270 --> 00:08:57.230
And something else I'll need to do, of course,
is type in my CVV, and here we go.

00:08:57.230 --> 00:08:59.940
I'm going to press "Submit."

00:08:59.940 --> 00:09:03.850
Like I mentioned before, input validation
is one of the things that we're targeting

00:09:03.850 --> 00:09:09.140
for our implementation because, of course,
9I8 is not a valid CVV so we're trying to

00:09:09.140 --> 00:09:14.681
make the experience really easy for users
to understand why the submission failed, give

00:09:14.681 --> 00:09:18.540
helpful error messages, and make sure that
the data that we collect from users is real

00:09:18.540 --> 00:09:22.330
high-quality before we send it down to the
merchant.

00:09:22.330 --> 00:09:26.470
One last thing I'd like to point out is that
all of this is stored locally in Chrome but

00:09:26.470 --> 00:09:27.930
this also syncs to the cloud.

00:09:27.930 --> 00:09:30.970
At least the shipping addresses here are.

00:09:30.970 --> 00:09:35.480
So I never typed in these addresses into this
particular Chromebook, but my other Chromebook,

00:09:35.480 --> 00:09:39.410
which I've left at home, is where I typed
it in originally, and because I have Chrome

00:09:39.410 --> 00:09:41.570
sync enabled, it synced to all my devices.

00:09:41.570 --> 00:09:48.950
Anyway, I can press "Submit," it's done, and
I'll hand it over to Dan to tell you how to

00:09:48.950 --> 00:09:52.370
get this nearly one-click experience on your
site.

00:09:52.370 --> 00:09:55.590
&gt;&gt;Dan Beam: Hello, everyone.

00:09:55.590 --> 00:10:00.570
So I'm sure you all are wondering how do I
integrate this with my site.

00:10:00.570 --> 00:10:04.750
Well, at a developer conference everyone wants
to see some code, right?

00:10:04.750 --> 00:10:06.490
So let's see some.

00:10:06.490 --> 00:10:11.570
First, we're going to go through tweaking
your existing markup to allow RequestAutocomplete

00:10:11.570 --> 00:10:17.600
to work with it, and then we're going to invoke
the API and handle some errors.

00:10:17.600 --> 00:10:22.580
So here's an example of a typical web form
that you would see today.

00:10:22.580 --> 00:10:28.140
Unfortunately, this isn't entirely clear to
Chrome the purpose of each input here.

00:10:28.140 --> 00:10:33.660
It looks like billing because we have credit
card and CVV, but we also have inputs that

00:10:33.660 --> 00:10:36.920
could be ambiguously for shipping or billing
addresses, right?

00:10:36.920 --> 00:10:42.420
So in fact, it's not just unclear to Chrome,
it's unclear to all browsers because this

00:10:42.420 --> 00:10:44.520
is a little underspecified.

00:10:44.520 --> 00:10:52.410
So a while back, HTML5 added the Autocomplete
attribute to itself, which we then implemented

00:10:52.410 --> 00:10:59.700
in Chrome for Chrome's form-filling, and then
we are piggybacking and reusing for RequestAutocomplete.

00:10:59.700 --> 00:11:06.530
So if you want to invoke the API, you can
take one second and add Autocomplete to each

00:11:06.530 --> 00:11:07.530
input name.

00:11:07.530 --> 00:11:11.130
So as we expected, they're actually all billing
address inputs.

00:11:11.130 --> 00:11:12.130
Great.

00:11:12.130 --> 00:11:17.100
So now that we've elucidated each input's
purpose to Chrome so that we're more confident

00:11:17.100 --> 00:11:21.950
about getting information from the user and
filling it back in correctly, how do we invoke

00:11:21.950 --> 00:11:23.560
the API?

00:11:23.560 --> 00:11:27.630
So it should be literally as easy as formelement.requestAutocomplete.

00:11:27.630 --> 00:11:33.330
We've worked really hard to keep the API very
slim and easy to use.

00:11:33.330 --> 00:11:34.890
Integration, super quick.

00:11:34.890 --> 00:11:39.380
So don't start hacking away yet.

00:11:39.380 --> 00:11:44.890
As a security -- as a security measure, we
only allow the API to be invoked in response

00:11:44.890 --> 00:11:46.050
to a user gesture.

00:11:46.050 --> 00:11:50.600
So we're going to show you an example of that
later, and first, we also have some ideas

00:11:50.600 --> 00:11:55.380
how you could optimize RequestAutocomplete
for your flow, because while we were working

00:11:55.380 --> 00:12:00.730
on this, we noticed that if you take the existing
web form flow we have here, and then you just

00:12:00.730 --> 00:12:04.320
invoke RequestAutocomplete on top of it, you're
in double trouble, right?

00:12:04.320 --> 00:12:07.580
You have a form on top of a form.

00:12:07.580 --> 00:12:09.990
People will be forced to make exhibit names
about you.

00:12:09.990 --> 00:12:11.420
No one wants that.

00:12:11.420 --> 00:12:14.990
So instead, here's an alternate example, right?

00:12:14.990 --> 00:12:17.020
So we recommend doing something along these
lines.

00:12:17.020 --> 00:12:22.760
We recommend that you move invoking RequestAutocomplete
earlier in your checkout flow, right?

00:12:22.760 --> 00:12:27.210
So in response to clicking on a "checkout"
button or maybe when you're adding new users

00:12:27.210 --> 00:12:30.000
and asking billing information from them,
right?

00:12:30.000 --> 00:12:35.320
So let's -- as you see, I've added a "checkout"
button here, and let's see a slightly beefier

00:12:35.320 --> 00:12:36.320
code example.

00:12:36.320 --> 00:12:40.700
So here we're using simple feature detection
to determine whether the user's browser has

00:12:40.700 --> 00:12:41.910
requestAutoComplete.

00:12:41.910 --> 00:12:45.190
So this will allow you to write code now that
should work in the future when all browsers

00:12:45.190 --> 00:12:46.600
have this.

00:12:46.600 --> 00:12:51.670
So if the browser does not have RequestAutocomplete,
we fall back simply to the traditional web

00:12:51.670 --> 00:12:59.910
form flow, and if it does, we can simply unclick,
invoke our API, and then on successful submission

00:12:59.910 --> 00:13:04.440
you'll get a brand-new event dispatching a
form called the Autocomplete event.

00:13:04.440 --> 00:13:06.360
Don't feel bad, we just added it.

00:13:06.360 --> 00:13:08.560
Don't feel left out, if you didn't know about
it.

00:13:08.560 --> 00:13:11.910
And then after that, the form has all the
information filled in it and you can just

00:13:11.910 --> 00:13:14.800
submit it normally like you usually would.

00:13:14.800 --> 00:13:15.800
Okay?

00:13:15.800 --> 00:13:20.130
So -- and then at this point, like I mentioned,
you don't want two forms in a row so we recommend

00:13:20.130 --> 00:13:24.510
you just hide your current form so it doesn't
clutter up your site and make users think

00:13:24.510 --> 00:13:26.580
they're going to have to input stuff.

00:13:26.580 --> 00:13:27.670
Great.

00:13:27.670 --> 00:13:32.390
So if you were paying close attention -- and
I hope you were -- you'll notice that we also

00:13:32.390 --> 00:13:34.290
have a "cancel" button, right?

00:13:34.290 --> 00:13:35.760
So what happens when a user cancels?

00:13:35.760 --> 00:13:38.190
How do you handle that in the code?

00:13:38.190 --> 00:13:42.380
So for this, we've also added another event
called the Autocomplete error event.

00:13:42.380 --> 00:13:47.650
This event includes, as a property of the
event passed in, a reason.

00:13:47.650 --> 00:13:48.650
Right?

00:13:48.650 --> 00:13:52.160
So this reason, in this case, we can handle
it by just looking for the "cancel" string

00:13:52.160 --> 00:13:54.270
that is equivalent to it.

00:13:54.270 --> 00:13:59.060
So in this case, when you cancel an autodialog
of a site, there's probably not much you really

00:13:59.060 --> 00:14:00.800
need to do.

00:14:00.800 --> 00:14:05.390
The browser has already left the contact,
so the user is already on your site, still

00:14:05.390 --> 00:14:06.390
there.

00:14:06.390 --> 00:14:09.970
Nothing explicit should be required so it's
really we're just returning, in this example.

00:14:09.970 --> 00:14:12.680
And then there's a couple other reasons why
you might get an error.

00:14:12.680 --> 00:14:17.371
The first is maybe your form isn't actually
annotated with Autocomplete yet, so that's

00:14:17.371 --> 00:14:19.900
more of a developer integration thing.

00:14:19.900 --> 00:14:24.930
Or as well, a user could have explicitly disabled
this from settings, like Evan did earlier

00:14:24.930 --> 00:14:27.350
before the demo, to show the fallback behavior.

00:14:27.350 --> 00:14:32.600
And then there's a couple other edge cases
that I can talk to you afterwards about.

00:14:32.600 --> 00:14:36.360
And then lastly, let's get into our implementation.

00:14:36.360 --> 00:14:38.970
So I showed you how easy this is.

00:14:38.970 --> 00:14:43.420
It should only take a second to integrate
it with your site, and let's see how Chrome

00:14:43.420 --> 00:14:47.550
implements our specific proposed standard.

00:14:47.550 --> 00:14:55.640
So one aspect that I think Chrome has kind
of in common with new user or guest checkouts

00:14:55.640 --> 00:14:59.140
on merchant sites is that we also have new
installs.

00:14:59.140 --> 00:15:04.160
So if someone has just first installed Chrome,
how do we get their payment information without

00:15:04.160 --> 00:15:07.170
them ever having actually input it into Chrome?

00:15:07.170 --> 00:15:11.260
So we noticed early on that there's a high
probability that they will be existing Google

00:15:11.260 --> 00:15:13.710
users already, right?

00:15:13.710 --> 00:15:18.950
So in this case, perhaps if the user is already
logged into Google, we can talk to the cloud

00:15:18.950 --> 00:15:24.900
and the cloud will give us from on high maybe
they've paid for something on Android in the

00:15:24.900 --> 00:15:30.940
in apps payment SDK on Google Play or with
the Google Wallet app, in which case, they've

00:15:30.940 --> 00:15:34.680
already given their information to Wallet,
right?

00:15:34.680 --> 00:15:40.810
So all of these -- all these clients already
harness Wallet information, so we just went

00:15:40.810 --> 00:15:46.120
ahead and integrated RequestAutocomplete with
Google Wallet, right?

00:15:46.120 --> 00:15:52.130
So this adds a second data source for users
to choose from, so you have both local form-filling

00:15:52.130 --> 00:15:57.590
data in Chrome that's synced, like Evan mentioned,
as well as existing Google users as payment

00:15:57.590 --> 00:15:58.590
information.

00:15:58.590 --> 00:15:59.650
This is really powerful.

00:15:59.650 --> 00:16:02.740
I should mention a couple things that you
probably already thought of.

00:16:02.740 --> 00:16:08.170
This also allows users that have already paid
from any of these sources to pay for things

00:16:08.170 --> 00:16:10.000
on your Web site right now.

00:16:10.000 --> 00:16:11.800
That is really cool.

00:16:11.800 --> 00:16:17.610
As well as when you add, for instance, a credit
card from Chrome, it will be instantly usable

00:16:17.610 --> 00:16:22.760
on play or any other source that uses Google
Wallet because it's all using the same, like,

00:16:22.760 --> 00:16:25.170
common secure vault.

00:16:25.170 --> 00:16:26.860
Great.

00:16:26.860 --> 00:16:31.120
So we've come to the presentation that makes
me the most excited.

00:16:31.120 --> 00:16:32.840
Uncomfortably excited, if you will.

00:16:32.840 --> 00:16:36.850
So this is my favorite feature as a user.

00:16:36.850 --> 00:16:38.320
I want to tell everyone about it.

00:16:38.320 --> 00:16:39.840
I want to tell my mom.

00:16:39.840 --> 00:16:41.190
In fact, my mom's watching right now.

00:16:41.190 --> 00:16:43.130
So, mom, I have something for you.

00:16:43.130 --> 00:16:47.680
[ Laughter ]
&gt;&gt;Dan Beam: So a lot of people minimize the

00:16:47.680 --> 00:16:52.170
amount of sites that they give their billing
information to, right?

00:16:52.170 --> 00:16:57.780
This is to make sure that if one of them -- in
the unfortunate event that this site gets

00:16:57.780 --> 00:17:02.920
hacked, that there are less targets to accidentally,
you know, give out their billing information,

00:17:02.920 --> 00:17:03.920
right?

00:17:03.920 --> 00:17:10.350
So, what we've done -- and a benefit of integrating
a RequestAutocomplete() with Wallet is we've

00:17:10.350 --> 00:17:17.030
added a new feature that allows Wallet to
never, ever give away your real credit card.

00:17:17.030 --> 00:17:20.439
These are called virtual one-time cards by
Google Wallet.

00:17:20.439 --> 00:17:27.189
So what this allows is for each transaction,
you can give out a temporary special card

00:17:27.189 --> 00:17:33.350
number that the vendor site uses to charge
your original card without ever having to

00:17:33.350 --> 00:17:34.799
give out the real card number.

00:17:34.799 --> 00:17:35.799
This is amazing.

00:17:35.799 --> 00:17:37.490
This is changing the way that I shop online.

00:17:37.490 --> 00:17:39.220
I mean, this is really cool.

00:17:39.220 --> 00:17:45.761
So, I mean, this changes the way, for instance,
I shop because before I was willing to pay

00:17:45.761 --> 00:17:52.159
extra money to buy from verified vendors or
to go on sites that already have my billing

00:17:52.159 --> 00:17:54.940
information to minimize how many actually
have it.

00:17:54.940 --> 00:17:58.000
This makes that much less of a deal.

00:17:58.000 --> 00:18:03.379
So, you know, if your information does get
hacked, they only have payment information

00:18:03.379 --> 00:18:05.070
that can't even be used anymore.

00:18:05.070 --> 00:18:07.570
So this is awesome for the Web, awesome for
our users.

00:18:07.570 --> 00:18:11.260
And we think this is a killer feature that
we've added.

00:18:11.260 --> 00:18:19.190
In addition to that, using Google Wallet gets
us fraud detection for free, right?

00:18:19.190 --> 00:18:23.309
So we interface with Google Wallet's fraud
detection engine.

00:18:23.309 --> 00:18:24.309
Chrome is elevated.

00:18:24.309 --> 00:18:26.960
Chrome has privileges that normal Web sites
don't have.

00:18:26.960 --> 00:18:33.600
So we can pass along secondary information
with each transaction to help keep the user

00:18:33.600 --> 00:18:37.820
safe and to make sure that the correct user
is using the correct account.

00:18:37.820 --> 00:18:44.590
So, say an attempted fraudster tries to use
a different machine than you have traditionally

00:18:44.590 --> 00:18:51.000
used to pay for something, we can detect that
right away and we can issue before the transaction

00:18:51.000 --> 00:18:57.230
even can complete like a challenge, a challenge
to re-enter your verification code off your

00:18:57.230 --> 00:18:58.460
credit card.

00:18:58.460 --> 00:19:02.950
Or in the case this person is trying to do
something especially nasty, reauthenticate

00:19:02.950 --> 00:19:04.409
with Google completely, right?

00:19:04.409 --> 00:19:13.210
So this is another security layer we are adding
on by integrating with it requestAutocomplete().

00:19:13.210 --> 00:19:14.429
Great.

00:19:14.429 --> 00:19:17.529
Let's see a virtual card in action.

00:19:17.529 --> 00:19:20.350
So here's the same Web site that Evan was
showing earlier.

00:19:20.350 --> 00:19:25.070
It is just in an iframe inside this presentation.

00:19:25.070 --> 00:19:26.070
Let's see.

00:19:26.070 --> 00:19:27.070
What do we want to buy?

00:19:27.070 --> 00:19:30.490
I will get an aerator because it is a little
stuffy on stage.

00:19:30.490 --> 00:19:32.610
I need some air.

00:19:32.610 --> 00:19:35.429
Let's show the checkout flow.

00:19:35.429 --> 00:19:37.490
You'll notice here -- first, there is another
error.

00:19:37.490 --> 00:19:38.710
It is not the same as before.

00:19:38.710 --> 00:19:40.990
This one is the details we shared with googledrive.com.

00:19:40.990 --> 00:19:42.730
That's the site hosting this iframe.

00:19:42.730 --> 00:19:47.129
You will notice when an iframe hosts and invokes
this API, we actually prompt the user saying,

00:19:47.129 --> 00:19:49.490
By the way, this is isn't coming from the
original site.

00:19:49.490 --> 00:19:58.509
Anyways, let's sign in to use Google Wallet.

00:19:58.509 --> 00:19:59.830
Just as an example user.

00:19:59.830 --> 00:20:01.340
All right, great.

00:20:01.340 --> 00:20:03.980
This is my credit card information as stored
in Google wallet.

00:20:03.980 --> 00:20:08.409
You will see my totally real card number ends
with 1111.

00:20:08.409 --> 00:20:11.870
Anyone that's ever tested credit card sites
knows that's not.

00:20:11.870 --> 00:20:14.899
But, anyways, let's protect my fake cards,
too.

00:20:14.899 --> 00:20:15.899
All right.

00:20:15.899 --> 00:20:16.899
So I'm submitting.

00:20:16.899 --> 00:20:18.210
We're talking with Wallet.

00:20:18.210 --> 00:20:22.629
And very quickly we come back and, bam, there
is a brand-new virtual card waiting for me

00:20:22.629 --> 00:20:23.629
on the vendor site.

00:20:23.629 --> 00:20:28.049
Again, this is a card that's given for each
transaction, the special number, and it bills

00:20:28.049 --> 00:20:30.690
the exact same card without having to give
it out.

00:20:30.690 --> 00:20:31.690
That's awesome.

00:20:31.690 --> 00:20:34.330
You will never have to give out your card
on the Web ever again.

00:20:34.330 --> 00:20:35.570
That's pretty transformative.

00:20:35.570 --> 00:20:37.230
All right.

00:20:37.230 --> 00:20:40.000
Do we want to show our promised mobile demo?

00:20:40.000 --> 00:20:41.190
&gt;&gt;Evan Stade: Indeed we do.

00:20:41.190 --> 00:20:45.720
We told you mobile was a place where we can
make a big impact, so we will prove it to

00:20:45.720 --> 00:20:46.720
you.

00:20:46.720 --> 00:20:53.860
I will point out one more thing about this
before I switch away from it, which is that

00:20:53.860 --> 00:20:57.960
this number, the site will still run it through
its normal payment processor back end.

00:20:57.960 --> 00:21:04.279
It will not do so until I press "place order,"
which is a really lightweight API that we're

00:21:04.279 --> 00:21:05.279
adding.

00:21:05.279 --> 00:21:09.539
It is just one more way to get users' data
from them, but it uses the same back end as

00:21:09.539 --> 00:21:17.000
the site's already had in place for its other
payment flows.

00:21:17.000 --> 00:21:22.999
And now I will show it to you on the mobile
device as soon as I log in and switch over.

00:21:22.999 --> 00:21:28.840
&gt;&gt;Dan Beam: They will see our supersecret
password.

00:21:28.840 --> 00:21:30.249
&gt;&gt;Evan Stade: Yes.

00:21:30.249 --> 00:21:33.340
I hope no one can read that quickly.

00:21:33.340 --> 00:21:34.490
Anyway...

00:21:34.490 --> 00:21:35.630
(Chuckles.)

00:21:35.630 --> 00:21:36.630
This is the same site.

00:21:36.630 --> 00:21:39.100
This is the mobile version of the site.

00:21:39.100 --> 00:21:42.340
In the time that I was sitting in that chair
over there, I looked it up and learned that

00:21:42.340 --> 00:21:47.169
it is actually pronounced the oenophilist,
if you were wondering.

00:21:47.169 --> 00:21:50.360
If you learn nothing else today, that's a
good take-away.

00:21:50.360 --> 00:21:56.740
At this time, I'm going to go on and I'm going
to buy the robot wine sheath because I'm on

00:21:56.740 --> 00:22:01.070
Android and that seems the most appropriate.

00:22:01.070 --> 00:22:02.470
I'm signed in as the same user.

00:22:02.470 --> 00:22:03.470
I will just tell you.

00:22:03.470 --> 00:22:04.970
Here I go through the checkout flow.

00:22:04.970 --> 00:22:06.910
It got my information from Wallet.

00:22:06.910 --> 00:22:07.980
I didn't have to type anything in.

00:22:07.980 --> 00:22:09.179
It is good to go.

00:22:09.179 --> 00:22:12.440
I'm already ready to press "submit."

00:22:12.440 --> 00:22:18.799
But I'm actually going to instead make this
a gift again but this time to Dan.

00:22:18.799 --> 00:22:20.850
He's done such a good job presenting today.

00:22:20.850 --> 00:22:23.980
Feeling pretty good about this.

00:22:23.980 --> 00:22:24.990
Chrome already knows his address.

00:22:24.990 --> 00:22:28.850
I have typed it in in the past because I have
shipped him things before.

00:22:28.850 --> 00:22:30.720
And so it is suggesting that I fill it in.

00:22:30.720 --> 00:22:35.380
And I have done so.

00:22:35.380 --> 00:22:38.360
It is as easy as that.

00:22:38.360 --> 00:22:40.090
So now Dan is the shipping man.

00:22:40.090 --> 00:22:44.200
It is still being billed to John Doe's credit
card.

00:22:44.200 --> 00:22:45.779
I am John Doe.

00:22:45.779 --> 00:22:53.200
And as soon as I press "submit," Wallet is
now taking this opportunity to generate the

00:22:53.200 --> 00:22:58.220
one-time credit card and sending it onto the
page.

00:22:58.220 --> 00:23:02.120
And as I also promised before, this UI is
still a little bit rough around the edges

00:23:02.120 --> 00:23:06.929
so this is a bleeding-edge copy of the code
that we have here.

00:23:06.929 --> 00:23:09.350
And it's done.

00:23:09.350 --> 00:23:13.049
So this card number, once again, is not the
one that ends in a bunch of 1s.

00:23:13.049 --> 00:23:18.210
It is a new credit card number, and I don't
have to worry about what happens if the oenophilist

00:23:18.210 --> 00:23:23.240
one day is the target of an insidious hacker's
intentions.

00:23:23.240 --> 00:23:28.380
I place my order and I'm done.

00:23:28.380 --> 00:23:34.320
So as you can see, even though I filled in
some new data, sort of, there was a form field.

00:23:34.320 --> 00:23:35.429
I didn't have to type anything.

00:23:35.429 --> 00:23:38.940
You probably didn't see the keyboard -- well,
you didn't see me use the keyboard once except

00:23:38.940 --> 00:23:39.940
to log onto the phone.

00:23:39.940 --> 00:23:41.020
That was the closest thing.

00:23:41.020 --> 00:23:43.600
So that was very exciting.

00:23:43.600 --> 00:23:47.340
Now I actually see this as a platform that
I'm willing to buy stuff on.

00:23:47.340 --> 00:23:53.730
I mean, mobile is growing tremendously as
a platform from which to browse the Web.

00:23:53.730 --> 00:23:59.510
And now we think that this will help increase
-- will help commerce keep pace with e-commerce

00:23:59.510 --> 00:24:06.340
in the same way as browsing the Web off a
mobile device has possibly, you know, kept

00:24:06.340 --> 00:24:12.549
up with or even will one day surpass browsing
from a normal desktop device.

00:24:12.549 --> 00:24:18.940
So with that, back to the slides.

00:24:18.940 --> 00:24:25.480
This, as you can see, is Dan and me if you
want to reach out to one of us.

00:24:25.480 --> 00:24:29.220
Here's some contact information.

00:24:29.220 --> 00:24:33.929
And now we'd like to open the floor up for
some questions.

00:24:33.929 --> 00:24:38.309
There's both -- so if anyone has a question
that's live, there's mics up here.

00:24:38.309 --> 00:24:42.559
If anyone thinks of a question later, you
can send us an email at this address.

00:24:42.559 --> 00:24:49.809
And then also we have some audience members
at home who maybe have questions on here.

00:24:49.809 --> 00:24:51.350
Well, if they do, we'll see them.

00:24:51.350 --> 00:24:52.440
&gt;&gt;Dan Beam: They may not.

00:24:52.440 --> 00:24:54.299
&gt;&gt;Evan Stade: We will start with a live question.

00:24:54.299 --> 00:24:58.130
&gt;&gt;Dan Beam: By the way, this is Cindy from
the Wallet side to help us answer questions.

00:24:58.130 --> 00:24:59.919
&gt;&gt;Evan Stade: This is Cindy.

00:24:59.919 --> 00:25:02.650
She has been helping coordinate with Wallet.

00:25:02.650 --> 00:25:03.650
&gt;&gt;&gt; Hi, Cindy.

00:25:03.650 --> 00:25:04.839
&gt;&gt;Cindy Lobb: Hi.

00:25:04.839 --> 00:25:05.839
&gt;&gt;&gt; Hi, Cindy.

00:25:05.839 --> 00:25:06.839
Looks great.

00:25:06.839 --> 00:25:07.990
Can't wait to use it.

00:25:07.990 --> 00:25:12.669
Now, now, one-time transactions aren't the
only kind of transactions on commerce.

00:25:12.669 --> 00:25:16.409
I want to sell a subscription to somebody.

00:25:16.409 --> 00:25:23.879
If it is always automatically behind the scenes
giving a one-time credit card number, how

00:25:23.879 --> 00:25:26.279
do I charge it again next month and the month
after that?

00:25:26.279 --> 00:25:31.110
Is there some way to tell you guys, hey, this
is going to be a recurring billing event?

00:25:31.110 --> 00:25:32.779
&gt;&gt;Cindy Lobb: Sure.

00:25:32.779 --> 00:25:35.299
So we would consider that a single transaction.

00:25:35.299 --> 00:25:39.769
So the user is saying, I want to do this 12
times with you.

00:25:39.769 --> 00:25:41.059
So that would be a transaction.

00:25:41.059 --> 00:25:42.129
That would be a supported use case.

00:25:42.129 --> 00:25:43.129
&gt;&gt;Dan Beam: Yeah.

00:25:43.129 --> 00:25:45.299
We have been thinking about this for a while.

00:25:45.299 --> 00:25:46.299
&gt;&gt;&gt; Okay.

00:25:46.299 --> 00:25:49.320
&gt;&gt;Evan Stade: Yes, there is definitely support.

00:25:49.320 --> 00:25:52.029
&gt;&gt;&gt; So if I was the vendor and I was getting
one of these one-time things, would I learn

00:25:52.029 --> 00:25:56.119
that it is a one-time and basically know not
to save it?

00:25:56.119 --> 00:25:58.379
Or would I have to actually just kind of guess?

00:25:58.379 --> 00:26:02.940
&gt;&gt;Evan Stade: Well, I think that our recommendation
is probably not to be saving this information

00:26:02.940 --> 00:26:07.119
because one of the things that -- even if
it's -- even if you're not dealing with new

00:26:07.119 --> 00:26:11.740
users but returning users, you know, when
you get a new credit card and then you go

00:26:11.740 --> 00:26:16.900
and you visit all these sites that have independently
stored your credit card information, you would

00:26:16.900 --> 00:26:18.460
have to update it many times.

00:26:18.460 --> 00:26:22.879
So if you are using this UI, our recommendation
is probably that you don't store it and that

00:26:22.879 --> 00:26:27.789
they will just update it and continue to use
this API for transferring their information

00:26:27.789 --> 00:26:33.389
down to your site over and over.

00:26:33.389 --> 00:26:39.600
&gt;&gt;&gt; As a follow-up to that recurring billing,
well, you had said that this is going to be

00:26:39.600 --> 00:26:41.090
a standard.

00:26:41.090 --> 00:26:45.139
And so I would imagine, like, implementations
in other browsers wouldn't necessarily be

00:26:45.139 --> 00:26:47.159
tied to Google Wallet.

00:26:47.159 --> 00:26:51.470
And so it would be nice from, whether you
are doing a subscription or whatever -- especially

00:26:51.470 --> 00:26:56.929
in the case of subscriptions, to have that
be transparent.

00:26:56.929 --> 00:27:01.289
That one-time-use card really kind of breaks
everything because coming from other users

00:27:01.289 --> 00:27:09.490
-- sorry, other browsers, we wouldn't necessarily
be getting a one-time-use card.

00:27:09.490 --> 00:27:12.909
Or is that some kind of required piece of
the spec that they have to implement in some

00:27:12.909 --> 00:27:14.500
other fashion?

00:27:14.500 --> 00:27:21.350
&gt;&gt;Cindy Lobb: So the virtual cards are specific
to the Google Wallet implementation.

00:27:21.350 --> 00:27:26.900
So when the other browser manufacturers implement
this and they are handing you normal credit

00:27:26.900 --> 00:27:30.850
card -- like, the user's original credit card
number, it is business as usual.

00:27:30.850 --> 00:27:34.119
And the same thing goes for the Google Wallet
virtual card.

00:27:34.119 --> 00:27:38.989
Even though we are not recommending you store
the card, you can treat it just like any credit

00:27:38.989 --> 00:27:39.989
card.

00:27:39.989 --> 00:27:45.309
&gt;&gt;&gt; So just to clarify, so on our side as,
say, the site owner side, when we go out to

00:27:45.309 --> 00:27:49.840
hit that one-time-use card again, it will
go through?

00:27:49.840 --> 00:27:55.529
&gt;&gt;Cindy Lobb: You follow the same processes
and rules you would to normally process a

00:27:55.529 --> 00:27:56.529
transaction.

00:27:56.529 --> 00:28:00.340
So there's a card number, an expiration date,
and a CVV.

00:28:00.340 --> 00:28:04.070
Everything that normally happens on the payment
network occurs as normal.

00:28:04.070 --> 00:28:05.070
&gt;&gt;&gt; Okay.

00:28:05.070 --> 00:28:09.159
So it sounds like the one-time-use card really
means that I'm the only vendor that has that

00:28:09.159 --> 00:28:10.159
number.

00:28:10.159 --> 00:28:12.179
It is not necessarily you can only charge
it once.

00:28:12.179 --> 00:28:13.179
&gt;&gt;&gt; Correct.

00:28:13.179 --> 00:28:14.179
It is per transaction.

00:28:14.179 --> 00:28:16.309
So, like, there is a lot of use cases.

00:28:16.309 --> 00:28:20.799
Let's say you ship things in two shipments
and you charge the card twice as you ship

00:28:20.799 --> 00:28:24.499
each product, that's supported.

00:28:24.499 --> 00:28:26.679
&gt;&gt;&gt; Okay, fantastic.

00:28:26.679 --> 00:28:27.769
Thanks.

00:28:27.769 --> 00:28:31.960
&gt;&gt;&gt; Sort of to piggyback on the last question,
I was curious what efforts are being made

00:28:31.960 --> 00:28:37.989
to reach out to the other browser vendors,
like Safari or Mozilla, especially since the

00:28:37.989 --> 00:28:42.919
tie-in seems to be -- or the juice in this
is the tie-in with Google Wallet and with

00:28:42.919 --> 00:28:44.640
Autocomplete() via Chrome Sync.

00:28:44.640 --> 00:28:47.460
&gt;&gt;Evan Stade: Well, we have been talks with
other vendors.

00:28:47.460 --> 00:28:51.039
And we have received some supportive messaging
from them.

00:28:51.039 --> 00:28:53.870
Part of the reason why we are going ahead
with the implementation is because we want

00:28:53.870 --> 00:28:58.909
to prove through testing with some trusted
partners, A/B testing, that this really does

00:28:58.909 --> 00:29:00.510
increase conversion rates.

00:29:00.510 --> 00:29:04.249
Once we've proven the value of it as a platform,
we expect the other browser vendors to jump

00:29:04.249 --> 00:29:05.249
on board as well.

00:29:05.249 --> 00:29:06.249
&gt;&gt;&gt; Okay.

00:29:06.249 --> 00:29:10.480
And can I ask if Safari is one of those vendors
or PayPal, in this case?

00:29:10.480 --> 00:29:15.570
&gt;&gt;Evan Stade: I don't think we can -- come
and see me afterwards.

00:29:15.570 --> 00:29:20.129
[ Laughter ]
&gt;&gt;&gt; So one quick one, not quick.

00:29:20.129 --> 00:29:27.240
The warning, is that on who this form is going
to versus on the form submit?

00:29:27.240 --> 00:29:30.860
So if you are using Cyber Source or Stripe,
right, am I always going to get that warning

00:29:30.860 --> 00:29:34.720
that it's not me who's actually going to get
where that form is going?

00:29:34.720 --> 00:29:38.830
&gt;&gt;Dan Beam: Are you talking about the warning
coming from a different frame?

00:29:38.830 --> 00:29:39.830
&gt;&gt;&gt; Yeah.

00:29:39.830 --> 00:29:44.169
&gt;&gt;Dan Beam: If you are invoking from Stripe,
it depends on how it happens.

00:29:44.169 --> 00:29:47.720
But, generally, if you are invoking from a
different frame, you will have a warning.

00:29:47.720 --> 00:29:50.049
But you can work to remove that warning.

00:29:50.049 --> 00:29:51.820
And I can show you how afterwards.

00:29:51.820 --> 00:29:54.159
&gt;&gt;&gt; Okay, yeah, because we do Cyber Source,
for example.

00:29:54.159 --> 00:29:55.159
&gt;&gt;Dan Beam: Yeah.

00:29:55.159 --> 00:29:58.710
&gt;&gt;&gt; And then on the one-time -- I'm short.

00:29:58.710 --> 00:30:05.500
So from the user point of view, so, you know,
we tokenize and then basically charge later,

00:30:05.500 --> 00:30:07.840
30 days later.

00:30:07.840 --> 00:30:13.500
And there's, like, the CS issue if a kickstarter
or your pledge may fail, how does something

00:30:13.500 --> 00:30:18.470
like -- how would CS be able to work with
someone on a one-time card?

00:30:18.470 --> 00:30:21.639
Does the user actually know they have used
a one-time card?

00:30:21.639 --> 00:30:23.230
So you know your pledge has failed.

00:30:23.230 --> 00:30:24.230
What card did you use?

00:30:24.230 --> 00:30:25.360
No, you didn't use that card?

00:30:25.360 --> 00:30:27.099
&gt;&gt;Cindy Lobb: Sure.

00:30:27.099 --> 00:30:28.580
&gt;&gt;&gt; What card did I use, right?

00:30:28.580 --> 00:30:29.600
&gt;&gt;Cindy Lobb: Yeah.

00:30:29.600 --> 00:30:35.460
So, as they said multiple times during the
presentation, this is cutting edge UI.

00:30:35.460 --> 00:30:40.610
We have -- we are in the process of refining
the UI to make it very obvious to the user

00:30:40.610 --> 00:30:41.669
what is going on.

00:30:41.669 --> 00:30:46.210
And, obviously, we talked about it multiple
times, that when they get to that review page,

00:30:46.210 --> 00:30:48.799
they're going to look and be like, wait, that's
not my card.

00:30:48.799 --> 00:30:52.990
We're prepared to handle that within the UI
in a graceful manner so that they'll understand

00:30:52.990 --> 00:30:53.990
that.

00:30:53.990 --> 00:30:59.150
And more than that, in Google wallet, we provide
them a transaction history so that they can

00:30:59.150 --> 00:31:03.759
see what transactions they have done with
Google Wallet.

00:31:03.759 --> 00:31:07.970
And we're working to educate them on how to
make that analogy.

00:31:07.970 --> 00:31:14.210
And then even beyond that, we do provide merchant
support to Google Wallet merchants that might

00:31:14.210 --> 00:31:17.100
need extra assistance aligning transactions.

00:31:17.100 --> 00:31:21.120
&gt;&gt;&gt; Yeah, it was a little bit more of a feedback
than question.

00:31:21.120 --> 00:31:23.070
&gt;&gt;Cindy Lobb: Sure.

00:31:23.070 --> 00:31:24.070
&gt;&gt;&gt; Thanks.

00:31:24.070 --> 00:31:25.320
&gt;&gt;&gt; Another one-time card question.

00:31:25.320 --> 00:31:28.230
I was just going to ask.

00:31:28.230 --> 00:31:29.309
I'm from Africa.

00:31:29.309 --> 00:31:31.779
Is this going to be available globally?

00:31:31.779 --> 00:31:36.179
And will you be able to integrate other payment
types that are not necessarily cards?

00:31:36.179 --> 00:31:37.590
&gt;&gt;&gt; That's a great question.

00:31:37.590 --> 00:31:40.830
Google Wallet right now is U.S. only.

00:31:40.830 --> 00:31:45.750
So international support would be something
we would do in the future.

00:31:45.750 --> 00:31:50.940
So when you're supporting this on international
sites, the users would be able to use the

00:31:50.940 --> 00:31:54.609
Chrome data as their preferred choice.

00:31:54.609 --> 00:31:59.370
&gt;&gt;Evan Stade: So I would like to point out
that right now Wallet is one of the data sources

00:31:59.370 --> 00:32:01.200
that you may choose with our implementation.

00:32:01.200 --> 00:32:05.730
The other one being local Chrome autofill
which will also sync to your other devices.

00:32:05.730 --> 00:32:08.489
We don't have currently -- this is bleeding
edge.

00:32:08.489 --> 00:32:10.210
We haven't launched it yet.

00:32:10.210 --> 00:32:14.460
We don't have international support in our
UI currently, but that's something that we're

00:32:14.460 --> 00:32:15.769
looking to add very soon.

00:32:15.769 --> 00:32:21.309
And auto fill will still be usable -- I mean,
autofill -- Chrome Autofill does support the

00:32:21.309 --> 00:32:23.039
international use case.

00:32:23.039 --> 00:32:27.940
And then in order to support that for Wallet
as well will depend on Wallet rolling that

00:32:27.940 --> 00:32:28.940
out, which will happen.

00:32:28.940 --> 00:32:33.869
&gt;&gt;Dan Beam: Yeah, it will be --
&gt;&gt;Evan Stade: Yeah, it will happen.

00:32:33.869 --> 00:32:34.869
Yes.

00:32:34.869 --> 00:32:37.610
&gt;&gt;&gt; This is basically about refunds, how to
handle that.

00:32:37.610 --> 00:32:43.399
Either a full refund in case your customer
returns something or if I want to authorize

00:32:43.399 --> 00:32:47.700
for a higher amount but just want to actually
book a lower amount.

00:32:47.700 --> 00:32:49.769
&gt;&gt;Cindy Lobb: Business as usual.

00:32:49.769 --> 00:32:53.090
Just do the same thing you do today.

00:32:53.090 --> 00:32:54.090
&gt;&gt;&gt; So nothing changes?

00:32:54.090 --> 00:32:55.329
&gt;&gt;Cindy Lobb: Nothing changes.

00:32:55.329 --> 00:32:56.329
&gt;&gt;&gt; Okay.

00:32:56.329 --> 00:32:57.490
What about other payment options?

00:32:57.490 --> 00:33:00.789
Like, in this case we only saw everything
about credit card.

00:33:00.789 --> 00:33:05.059
Is there any option to distinguish between
things like credit card, cash on delivery,

00:33:05.059 --> 00:33:06.259
or other things?

00:33:06.259 --> 00:33:07.820
&gt;&gt;Dan Beam: Between credit card and what?

00:33:07.820 --> 00:33:10.769
&gt;&gt;Evan Stade: No, this depends on credit card
right now.

00:33:10.769 --> 00:33:12.580
I mean, credit or debit, right?

00:33:12.580 --> 00:33:14.230
There is no cash on delivery.

00:33:14.230 --> 00:33:17.559
&gt;&gt;Cindy Lobb: Right now Wallet only supports
credit cards.

00:33:17.559 --> 00:33:23.600
You would not be prohibited from using RequestAutocomplete()
on your site if you use alternative tenders

00:33:23.600 --> 00:33:24.929
like gift cards.

00:33:24.929 --> 00:33:30.859
You would just set up the workflow of your
checkout so the user can choose those before

00:33:30.859 --> 00:33:32.239
they got into this flow.

00:33:32.239 --> 00:33:38.019
&gt;&gt;Evan Stade: What I think Cindy is saying
is that you can launch this dialog -- the

00:33:38.019 --> 00:33:41.770
plan is you will be able to get this the dialog
and get everything except for the credit card.

00:33:41.770 --> 00:33:45.570
And then if you want to do except, I check
mark, like, "cash on delivery."

00:33:45.570 --> 00:33:47.849
That would be handled outside of this API.

00:33:47.849 --> 00:33:49.330
&gt;&gt;&gt; Basically, we have to check that before.

00:33:49.330 --> 00:33:50.659
It is in the form step.

00:33:50.659 --> 00:33:55.030
And then in the next step, the second step,
when the user selected the payment method,

00:33:55.030 --> 00:33:56.950
we will call your Autocomplete()?

00:33:56.950 --> 00:34:01.519
&gt;&gt;Evan Stade: Yeah, this is a process that
we haven't optimized yet, but we are looking

00:34:01.519 --> 00:34:06.909
to further refine the UI to make sure we handle
things like loyalty cards, gift cards, options

00:34:06.909 --> 00:34:11.950
like that in an efficient and, you know -- have
a nice flow for that as well.

00:34:11.950 --> 00:34:13.440
Thank you for the question.

00:34:13.440 --> 00:34:17.950
&gt;&gt;Dan Beam: We should mention if you have
other further use cases, feel free to email

00:34:17.950 --> 00:34:19.420
this email request.

00:34:19.420 --> 00:34:24.530
&gt;&gt;Evan Stade: Like I said, this is -- you
know, this implementation is kind of testing

00:34:24.530 --> 00:34:26.240
the waters and improving the concept.

00:34:26.240 --> 00:34:31.440
So we do appreciate your feedback and look
forward to it for all the different use cases

00:34:31.440 --> 00:34:34.720
that we would like to be able to support like
that one.

00:34:34.720 --> 00:34:40.130
&gt;&gt;&gt; So if this Autocomplete() is to become
a standard, it seems that you'd have to support

00:34:40.130 --> 00:34:42.020
additional Wallet providers.

00:34:42.020 --> 00:34:49.010
So are there any plans to talk with PayPal
or Stripe or anyone else?

00:34:49.010 --> 00:34:54.169
&gt;&gt;Evan Stade: Yeah, we look forward to -- we
welcome collaboration from others.

00:34:54.169 --> 00:35:00.410
The standard itself is completely agnostic
to the payment data provider.

00:35:00.410 --> 00:35:03.260
The data source is not a payment processor
or anything.

00:35:03.260 --> 00:35:09.130
But the standard and where you are getting
payment information from are completely disjointed.

00:35:09.130 --> 00:35:13.150
So different browser vendors may choose to
implement different back ends.

00:35:13.150 --> 00:35:17.780
But we are also open to talks and collaboration
with other sources, but we haven't gotten

00:35:17.780 --> 00:35:18.780
there yet.

00:35:18.780 --> 00:35:22.090
We chose to start with autofill because it's
what Chrome already has cooked into it and

00:35:22.090 --> 00:35:27.590
Wallet because of the features that we talked
about today which we think add security and

00:35:27.590 --> 00:35:28.590
convenience.

00:35:28.590 --> 00:35:35.440
And we are looking forward to adding other
processors in there -- well, providers as

00:35:35.440 --> 00:35:36.760
well in the future.

00:35:36.760 --> 00:35:38.180
Thank you.

00:35:38.180 --> 00:35:39.600
&gt;&gt;&gt; Thank you.

00:35:39.600 --> 00:35:41.030
&gt;&gt;&gt; Hey, guys.

00:35:41.030 --> 00:35:42.730
The one-time cards sound awesome.

00:35:42.730 --> 00:35:47.140
Is there a way on my site to only accept those
and not accept autofill data so I never have

00:35:47.140 --> 00:35:48.350
someone's real credit card?

00:35:48.350 --> 00:35:54.670
&gt;&gt;Dan Beam: I encourage people to use Wallet
when using RequestAutocomplete().

00:35:54.670 --> 00:35:58.840
Right now we don't have a lot of mechanisms
for talking to the dialog from the site.

00:35:58.840 --> 00:36:04.020
We're investigating various things to be able
to embed, like, inputs or something like that,

00:36:04.020 --> 00:36:05.280
to be able to talk to the dialog.

00:36:05.280 --> 00:36:06.900
We're working on that.

00:36:06.900 --> 00:36:11.050
But right now hopefully most people just see
the benefit of doing that themselves.

00:36:11.050 --> 00:36:14.610
&gt;&gt;&gt; Yeah, I was thinking just in terms if
I only had the one-time card, if that would

00:36:14.610 --> 00:36:17.540
actually have some impact on me in terms of
being PCI compliant.

00:36:17.540 --> 00:36:21.980
Maybe it would be less burden on me because
I'm actually not exposed because I'm not handling

00:36:21.980 --> 00:36:22.980
real cards.

00:36:22.980 --> 00:36:25.250
&gt;&gt;Dan Beam: I don't know how this affects
your PCI compliance.

00:36:25.250 --> 00:36:27.310
&gt;&gt;&gt; I know it probably doesn't immediately.

00:36:27.310 --> 00:36:28.340
But I am thinking down the road.

00:36:28.340 --> 00:36:29.970
That would be an awesome option to have.

00:36:29.970 --> 00:36:32.350
&gt;&gt;Evan Stade: That is an interesting one.

00:36:32.350 --> 00:36:33.350
Thank you.

00:36:33.350 --> 00:36:34.770
We'll think about that.

00:36:34.770 --> 00:36:35.770
&gt;&gt;&gt; Hey.

00:36:35.770 --> 00:36:36.960
So, sounds like really cool stuff.

00:36:36.960 --> 00:36:38.511
I just want to make sure I understand it correctly.

00:36:38.511 --> 00:36:43.480
So the one-time credit cards, it is a merchant-specific
credit card?

00:36:43.480 --> 00:36:47.730
&gt;&gt;&gt; It is a transaction-specific credit card.

00:36:47.730 --> 00:36:53.550
If I visit your site three times and I make
three purchases, it will be three different

00:36:53.550 --> 00:36:55.070
virtual card numbers.

00:36:55.070 --> 00:36:56.070
&gt;&gt;&gt; Cool.

00:36:56.070 --> 00:36:58.930
And then Chrome autofill has been around forever.

00:36:58.930 --> 00:37:04.940
Are those two standards completely converged
so that if you mark up your Web pages for

00:37:04.940 --> 00:37:08.440
Autocomplete() for regular Chrome, that will
automatically work with this?

00:37:08.440 --> 00:37:12.910
&gt;&gt;Dan Beam: Yes, so autofill has already implemented
those -- the standard already.

00:37:12.910 --> 00:37:15.280
We are just kind of piggybacking on top that.

00:37:15.280 --> 00:37:17.150
So Autofill will work with that.

00:37:17.150 --> 00:37:19.930
It either just released recently or will be
in the near future.

00:37:19.930 --> 00:37:21.010
That's a recent development, though.

00:37:21.010 --> 00:37:22.080
But, yes, it will work.

00:37:22.080 --> 00:37:24.800
&gt;&gt;Evan Stade: They do share the same data
source.

00:37:24.800 --> 00:37:25.800
&gt;&gt;&gt; Okay, cool.

00:37:25.800 --> 00:37:29.980
&gt;&gt;Evan Stade: If you type in information into
this dialog and save it, that will also be

00:37:29.980 --> 00:37:33.550
able to autofill to fill into other sites
that are not using our API.

00:37:33.550 --> 00:37:34.550
&gt;&gt;&gt; Cool.

00:37:34.550 --> 00:37:37.420
And it used to be like, X-Autocomplete() and
now it is just Autocomplete().

00:37:37.420 --> 00:37:38.420
Is that right?

00:37:38.420 --> 00:37:40.100
&gt;&gt;Dan Beam: That's been removed.

00:37:40.100 --> 00:37:41.760
&gt;&gt;&gt; Okay, cool.

00:37:41.760 --> 00:37:46.850
So it sounds like every webmaster in the world
should implement marking up their Web forms

00:37:46.850 --> 00:37:50.750
with these Autocomplete() just because even
if they don't use Wallet or the payment solution

00:37:50.750 --> 00:37:55.440
or anything else, Chrome will make the form
filling incredibly easy in a very low barrier

00:37:55.440 --> 00:37:58.560
and every other browser has a real incentive
to implement that as well.

00:37:58.560 --> 00:38:00.600
Is that --
&gt;&gt;Evan Stade: That is correct.

00:38:00.600 --> 00:38:06.000
And those that also want to use this API only,
then it is really lightweight to just add

00:38:06.000 --> 00:38:07.080
the RequestAutocomplete() column.

00:38:07.080 --> 00:38:08.080
&gt;&gt;&gt; Okay.

00:38:08.080 --> 00:38:09.430
Just want to make sure I understand.

00:38:09.430 --> 00:38:12.362
I am about to tell a bunch of webmasters,
"You guys should all do this it because it

00:38:12.362 --> 00:38:13.710
is a really good idea."

00:38:13.710 --> 00:38:15.300
I want to make sure I understand it first.

00:38:15.300 --> 00:38:17.690
&gt;&gt;Dan Beam: Like you mentioned, browsers that
don't understand this seem to fall back.

00:38:17.690 --> 00:38:23.080
So it is okay to do it now.

00:38:23.080 --> 00:38:27.670
&gt;&gt;&gt; Would you consider or is this already
part of the standard adding some sort of a

00:38:27.670 --> 00:38:31.400
mechanism for developers to identify the underlying
credit card being used?

00:38:31.400 --> 00:38:38.410
So some sort of token or completely opaque
hash or hmac or something like that?

00:38:38.410 --> 00:38:41.370
The reason I'm thinking this is for abuse
prevention.

00:38:41.370 --> 00:38:47.290
Certain systems depend on the credit cards
being the only verifiable piece of information.

00:38:47.290 --> 00:38:53.340
And so if a user can show up and do 100 free
trials of something, then that abuse prevention

00:38:53.340 --> 00:38:54.530
abuse mechanism goes away.

00:38:54.530 --> 00:38:59.190
&gt;&gt;Cindy Lobb: That's good feedback.

00:38:59.190 --> 00:39:02.800
That's definitely -- we're happy to hear it
and consider it.

00:39:02.800 --> 00:39:04.260
&gt;&gt;&gt; Okay, thanks.

00:39:04.260 --> 00:39:09.980
&gt;&gt;Evan Stade: Yeah, and -- also, feedback
like that can go to that email address.

00:39:09.980 --> 00:39:10.980
&gt;&gt;&gt; Yes, email us.

00:39:10.980 --> 00:39:15.210
&gt;&gt;Evan Stade: That would be a lot easier for
us to follow up and make sure -- to track

00:39:15.210 --> 00:39:17.450
you down and have good answers for you.

00:39:17.450 --> 00:39:18.450
&gt;&gt;Dan Beam: Great.

00:39:18.450 --> 00:39:20.620
It seems like we are about out of time.

00:39:20.620 --> 00:39:24.470
I didn't see any questions on the --
&gt;&gt;Evan Stade: If anyone has a question that's

00:39:24.470 --> 00:39:25.780
20 seconds or less --
&gt;&gt;Dan Beam: Go.

00:39:25.780 --> 00:39:26.780
Oh, nobody.

00:39:26.780 --> 00:39:28.000
&gt;&gt;Evan Stade: I will start you off?

00:39:28.000 --> 00:39:30.370
What about one-time cards?

00:39:30.370 --> 00:39:35.210
(Speaker off microphone.)

00:39:35.210 --> 00:39:39.460
&gt;&gt;Dan Beam: The question was again?

00:39:39.460 --> 00:39:44.040
&gt;&gt;Evan Stade: I think the question was do
one-time cards have a time limit before they

00:39:44.040 --> 00:39:45.040
expire?

00:39:45.040 --> 00:39:46.800
And if you want to charge it after that time
limit is over --

00:39:46.800 --> 00:39:54.980
(Speaker off microphone.)

00:39:54.980 --> 00:40:07.920
&gt;&gt;Cindy Lobb: The expiration on the credit
card is -- the question was for everyone streaming

00:40:07.920 --> 00:40:13.630
live, what about expiration dates on the credit
card if you do an auth and then it expires

00:40:13.630 --> 00:40:16.120
before you can capture the funds?

00:40:16.120 --> 00:40:21.010
The expiration date is set up as such to give
you enough time to do that.

00:40:21.010 --> 00:40:25.630
So that would not be an issue.

00:40:25.630 --> 00:40:27.500
&gt;&gt;&gt; All right, thanks.

00:40:27.500 --> 00:40:29.990
&gt;&gt;Dan Beam: All right.

00:40:29.990 --> 00:40:31.300
I think we're over.

00:40:31.300 --> 00:40:33.600
&gt;&gt;Evan Stade: Yes, we're done, over even.

00:40:33.600 --> 00:40:34.600
&gt;&gt;&gt; Thank you.

00:40:34.600 --> 00:40:35.600
&gt;&gt;Evan Stade: Thank you very much for being
here.

00:40:35.600 --> 00:40:36.600
&gt;&gt;Dan Beam: Thank you.

00:40:36.600 --> 00:40:36.601
[ Applause ]

