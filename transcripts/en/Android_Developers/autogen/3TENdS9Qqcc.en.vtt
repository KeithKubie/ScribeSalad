WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.270
 
hi my name is Fred with Android

00:00:02.270 --> 00:00:02.280
hi my name is Fred with Android
 

00:00:02.280 --> 00:00:04.220
hi my name is Fred with Android
developer relations team we're going to

00:00:04.220 --> 00:00:04.230
developer relations team we're going to
 

00:00:04.230 --> 00:00:06.140
developer relations team we're going to
talk about improving Android studio

00:00:06.140 --> 00:00:06.150
talk about improving Android studio
 

00:00:06.150 --> 00:00:08.059
talk about improving Android studio
performance on memory constrained

00:00:08.059 --> 00:00:08.069
performance on memory constrained
 

00:00:08.069 --> 00:00:10.940
performance on memory constrained
computers Android studio comes with many

00:00:10.940 --> 00:00:10.950
computers Android studio comes with many
 

00:00:10.950 --> 00:00:13.310
computers Android studio comes with many
features developers expect from a modern

00:00:13.310 --> 00:00:13.320
features developers expect from a modern
 

00:00:13.320 --> 00:00:16.369
features developers expect from a modern
IDE for example link checks help

00:00:16.369 --> 00:00:16.379
IDE for example link checks help
 

00:00:16.379 --> 00:00:18.470
IDE for example link checks help
identify errors as you're typing source

00:00:18.470 --> 00:00:18.480
identify errors as you're typing source
 

00:00:18.480 --> 00:00:20.960
identify errors as you're typing source
code in the editor these developer

00:00:20.960 --> 00:00:20.970
code in the editor these developer
 

00:00:20.970 --> 00:00:23.179
code in the editor these developer
productivity features mean increased

00:00:23.179 --> 00:00:23.189
productivity features mean increased
 

00:00:23.189 --> 00:00:25.040
productivity features mean increased
resource requirements on the host

00:00:25.040 --> 00:00:25.050
resource requirements on the host
 

00:00:25.050 --> 00:00:28.160
resource requirements on the host
operating system practically developers

00:00:28.160 --> 00:00:28.170
operating system practically developers
 

00:00:28.170 --> 00:00:30.710
operating system practically developers
working on complex multi module

00:00:30.710 --> 00:00:30.720
working on complex multi module
 

00:00:30.720 --> 00:00:32.450
working on complex multi module
production projects usually have a

00:00:32.450 --> 00:00:32.460
production projects usually have a
 

00:00:32.460 --> 00:00:35.330
production projects usually have a
gigabytes of RAM or more however if

00:00:35.330 --> 00:00:35.340
gigabytes of RAM or more however if
 

00:00:35.340 --> 00:00:38.090
gigabytes of RAM or more however if
you're working on a simple project on a

00:00:38.090 --> 00:00:38.100
you're working on a simple project on a
 

00:00:38.100 --> 00:00:40.580
you're working on a simple project on a
memory constrained computer with say 4

00:00:40.580 --> 00:00:40.590
memory constrained computer with say 4
 

00:00:40.590 --> 00:00:42.979
memory constrained computer with say 4
gigabytes of RAM or less we're gonna go

00:00:42.979 --> 00:00:42.989
gigabytes of RAM or less we're gonna go
 

00:00:42.989 --> 00:00:45.020
gigabytes of RAM or less we're gonna go
through several things you could do to

00:00:45.020 --> 00:00:45.030
through several things you could do to
 

00:00:45.030 --> 00:00:46.880
through several things you could do to
make the development experience a bit

00:00:46.880 --> 00:00:46.890
make the development experience a bit
 

00:00:46.890 --> 00:00:49.790
make the development experience a bit
smoother there isn't a definite answer

00:00:49.790 --> 00:00:49.800
smoother there isn't a definite answer
 

00:00:49.800 --> 00:00:51.950
smoother there isn't a definite answer
on the minimum specs needed to run

00:00:51.950 --> 00:00:51.960
on the minimum specs needed to run
 

00:00:51.960 --> 00:00:54.200
on the minimum specs needed to run
Android studio because there are so many

00:00:54.200 --> 00:00:54.210
Android studio because there are so many
 

00:00:54.210 --> 00:00:57.470
Android studio because there are so many
factors an obvious first step is close

00:00:57.470 --> 00:00:57.480
factors an obvious first step is close
 

00:00:57.480 --> 00:01:00.229
factors an obvious first step is close
any unnecessary applications on the

00:01:00.229 --> 00:01:00.239
any unnecessary applications on the
 

00:01:00.239 --> 00:01:02.599
any unnecessary applications on the
operating system sorry for those users

00:01:02.599 --> 00:01:02.609
operating system sorry for those users
 

00:01:02.609 --> 00:01:05.509
operating system sorry for those users
that keep 20 web browser tabs opened for

00:01:05.509 --> 00:01:05.519
that keep 20 web browser tabs opened for
 

00:01:05.519 --> 00:01:07.130
that keep 20 web browser tabs opened for
those that have anti-virus software

00:01:07.130 --> 00:01:07.140
those that have anti-virus software
 

00:01:07.140 --> 00:01:09.920
those that have anti-virus software
running on the computer note that build

00:01:09.920 --> 00:01:09.930
running on the computer note that build
 

00:01:09.930 --> 00:01:12.859
running on the computer note that build
files generated by the IDE may trigger

00:01:12.859 --> 00:01:12.869
files generated by the IDE may trigger
 

00:01:12.869 --> 00:01:15.170
files generated by the IDE may trigger
real time virus scanning this competes

00:01:15.170 --> 00:01:15.180
real time virus scanning this competes
 

00:01:15.180 --> 00:01:18.260
real time virus scanning this competes
for system resources if possible go to

00:01:18.260 --> 00:01:18.270
for system resources if possible go to
 

00:01:18.270 --> 00:01:20.240
for system resources if possible go to
your virus scanner configuration and

00:01:20.240 --> 00:01:20.250
your virus scanner configuration and
 

00:01:20.250 --> 00:01:23.320
your virus scanner configuration and
exclude project build output directories

00:01:23.320 --> 00:01:23.330
exclude project build output directories
 

00:01:23.330 --> 00:01:26.270
exclude project build output directories
Android studio has a default maximum

00:01:26.270 --> 00:01:26.280
Android studio has a default maximum
 

00:01:26.280 --> 00:01:28.969
Android studio has a default maximum
Java heap size of 1.2 gigabytes if your

00:01:28.969 --> 00:01:28.979
Java heap size of 1.2 gigabytes if your
 

00:01:28.979 --> 00:01:30.410
Java heap size of 1.2 gigabytes if your
computer has low Ram you should

00:01:30.410 --> 00:01:30.420
computer has low Ram you should
 

00:01:30.420 --> 00:01:33.200
computer has low Ram you should
correspondingly reduce the default heap

00:01:33.200 --> 00:01:33.210
correspondingly reduce the default heap
 

00:01:33.210 --> 00:01:36.710
correspondingly reduce the default heap
size to something like 512 megabytes you

00:01:36.710 --> 00:01:36.720
size to something like 512 megabytes you
 

00:01:36.720 --> 00:01:38.810
size to something like 512 megabytes you
can set the desired values using the X

00:01:38.810 --> 00:01:38.820
can set the desired values using the X
 

00:01:38.820 --> 00:01:42.109
can set the desired values using the X
MX key in the studio dot VM option

00:01:42.109 --> 00:01:42.119
MX key in the studio dot VM option
 

00:01:42.119 --> 00:01:44.270
MX key in the studio dot VM option
configuration file by following these

00:01:44.270 --> 00:01:44.280
configuration file by following these
 

00:01:44.280 --> 00:01:47.359
configuration file by following these
instructions note that reducing this

00:01:47.359 --> 00:01:47.369
instructions note that reducing this
 

00:01:47.369 --> 00:01:49.010
instructions note that reducing this
value means shrinking the amount of

00:01:49.010 --> 00:01:49.020
value means shrinking the amount of
 

00:01:49.020 --> 00:01:50.840
value means shrinking the amount of
resources for features within Android

00:01:50.840 --> 00:01:50.850
resources for features within Android
 

00:01:50.850 --> 00:01:53.149
resources for features within Android
studio for example performance of the

00:01:53.149 --> 00:01:53.159
studio for example performance of the
 

00:01:53.159 --> 00:01:56.660
studio for example performance of the
layout editor may be affected now let's

00:01:56.660 --> 00:01:56.670
layout editor may be affected now let's
 

00:01:56.670 --> 00:01:58.550
layout editor may be affected now let's
talk about Grado one of the core

00:01:58.550 --> 00:01:58.560
talk about Grado one of the core
 

00:01:58.560 --> 00:02:01.789
talk about Grado one of the core
components in Android studio update to

00:02:01.789 --> 00:02:01.799
components in Android studio update to
 

00:02:01.799 --> 00:02:03.679
components in Android studio update to
the latest versions of Gradle and

00:02:03.679 --> 00:02:03.689
the latest versions of Gradle and
 

00:02:03.689 --> 00:02:06.289
the latest versions of Gradle and
android plug-in for Grado to ensure the

00:02:06.289 --> 00:02:06.299
android plug-in for Grado to ensure the
 

00:02:06.299 --> 00:02:08.449
android plug-in for Grado to ensure the
latest performance optimizations are

00:02:08.449 --> 00:02:08.459
latest performance optimizations are
 

00:02:08.459 --> 00:02:11.540
latest performance optimizations are
available to your project for example in

00:02:11.540 --> 00:02:11.550
available to your project for example in
 

00:02:11.550 --> 00:02:13.550
available to your project for example in
3.0 with improved

00:02:13.550 --> 00:02:13.560
3.0 with improved
 

00:02:13.560 --> 00:02:17.330
3.0 with improved
criminal packaging with a apt to the

00:02:17.330 --> 00:02:17.340
criminal packaging with a apt to the
 

00:02:17.340 --> 00:02:19.339
criminal packaging with a apt to the
snippets here shows specific

00:02:19.339 --> 00:02:19.349
snippets here shows specific
 

00:02:19.349 --> 00:02:21.290
snippets here shows specific
configurations for the Android studio

00:02:21.290 --> 00:02:21.300
configurations for the Android studio
 

00:02:21.300 --> 00:02:24.290
configurations for the Android studio
3.0 beta version your specific installer

00:02:24.290 --> 00:02:24.300
3.0 beta version your specific installer
 

00:02:24.300 --> 00:02:25.940
3.0 beta version your specific installer
version may need a different set of

00:02:25.940 --> 00:02:25.950
version may need a different set of
 

00:02:25.950 --> 00:02:28.699
version may need a different set of
values next I'm going to talk about

00:02:28.699 --> 00:02:28.709
values next I'm going to talk about
 

00:02:28.709 --> 00:02:31.009
values next I'm going to talk about
several techniques that have to do with

00:02:31.009 --> 00:02:31.019
several techniques that have to do with
 

00:02:31.019 --> 00:02:33.710
several techniques that have to do with
degrading support and leaving only the

00:02:33.710 --> 00:02:33.720
degrading support and leaving only the
 

00:02:33.720 --> 00:02:36.259
degrading support and leaving only the
bare minimum running note that some of

00:02:36.259 --> 00:02:36.269
bare minimum running note that some of
 

00:02:36.269 --> 00:02:38.000
bare minimum running note that some of
these techniques could provide

00:02:38.000 --> 00:02:38.010
these techniques could provide
 

00:02:38.010 --> 00:02:40.309
these techniques could provide
performance gain at the expense of code

00:02:40.309 --> 00:02:40.319
performance gain at the expense of code
 

00:02:40.319 --> 00:02:42.890
performance gain at the expense of code
quality so you really should use with

00:02:42.890 --> 00:02:42.900
quality so you really should use with
 

00:02:42.900 --> 00:02:44.620
quality so you really should use with
caution

00:02:44.620 --> 00:02:44.630
caution
 

00:02:44.630 --> 00:02:47.720
caution
Android studio provides a power safe

00:02:47.720 --> 00:02:47.730
Android studio provides a power safe
 

00:02:47.730 --> 00:02:50.900
Android studio provides a power safe
mode when turned on it will disable a

00:02:50.900 --> 00:02:50.910
mode when turned on it will disable a
 

00:02:50.910 --> 00:02:52.910
mode when turned on it will disable a
number of background operations that

00:02:52.910 --> 00:02:52.920
number of background operations that
 

00:02:52.920 --> 00:02:55.309
number of background operations that
perform lynch X code completions and so

00:02:55.309 --> 00:02:55.319
perform lynch X code completions and so
 

00:02:55.319 --> 00:02:57.920
perform lynch X code completions and so
on there'll be a point in time when you

00:02:57.920 --> 00:02:57.930
on there'll be a point in time when you
 

00:02:57.930 --> 00:03:00.530
on there'll be a point in time when you
want to execute any disabled operations

00:03:00.530 --> 00:03:00.540
want to execute any disabled operations
 

00:03:00.540 --> 00:03:03.170
want to execute any disabled operations
manually take Lynch X for example you

00:03:03.170 --> 00:03:03.180
manually take Lynch X for example you
 

00:03:03.180 --> 00:03:04.880
manually take Lynch X for example you
can manually run them through the

00:03:04.880 --> 00:03:04.890
can manually run them through the
 

00:03:04.890 --> 00:03:08.300
can manually run them through the
command line as shown here some of you

00:03:08.300 --> 00:03:08.310
command line as shown here some of you
 

00:03:08.310 --> 00:03:10.580
command line as shown here some of you
may be using the Android emulator on

00:03:10.580 --> 00:03:10.590
may be using the Android emulator on
 

00:03:10.590 --> 00:03:12.979
may be using the Android emulator on
average it consumes two gigabytes of RAM

00:03:12.979 --> 00:03:12.989
average it consumes two gigabytes of RAM
 

00:03:12.989 --> 00:03:16.910
average it consumes two gigabytes of RAM
if possible use an actual Android device

00:03:16.910 --> 00:03:16.920
if possible use an actual Android device
 

00:03:16.920 --> 00:03:19.729
if possible use an actual Android device
this will help reduce resource load on

00:03:19.729 --> 00:03:19.739
this will help reduce resource load on
 

00:03:19.739 --> 00:03:23.000
this will help reduce resource load on
your computer alternatively if you must

00:03:23.000 --> 00:03:23.010
your computer alternatively if you must
 

00:03:23.010 --> 00:03:25.069
your computer alternatively if you must
use an emulator consider reducing

00:03:25.069 --> 00:03:25.079
use an emulator consider reducing
 

00:03:25.079 --> 00:03:28.039
use an emulator consider reducing
emulated RAM which will also decrease

00:03:28.039 --> 00:03:28.049
emulated RAM which will also decrease
 

00:03:28.049 --> 00:03:30.289
emulated RAM which will also decrease
virtual memory consumption on your

00:03:30.289 --> 00:03:30.299
virtual memory consumption on your
 

00:03:30.299 --> 00:03:33.440
virtual memory consumption on your
computer this configuration can be found

00:03:33.440 --> 00:03:33.450
computer this configuration can be found
 

00:03:33.450 --> 00:03:36.080
computer this configuration can be found
under Advanced Settings in virtual

00:03:36.080 --> 00:03:36.090
under Advanced Settings in virtual
 

00:03:36.090 --> 00:03:39.559
under Advanced Settings in virtual
device configuration Gradle offline mode

00:03:39.559 --> 00:03:39.569
device configuration Gradle offline mode
 

00:03:39.569 --> 00:03:42.740
device configuration Gradle offline mode
is a feature for bandwidth-limited users

00:03:42.740 --> 00:03:42.750
is a feature for bandwidth-limited users
 

00:03:42.750 --> 00:03:44.449
is a feature for bandwidth-limited users
to disable downloading of built

00:03:44.449 --> 00:03:44.459
to disable downloading of built
 

00:03:44.459 --> 00:03:47.420
to disable downloading of built
dependencies as a side-effect this could

00:03:47.420 --> 00:03:47.430
dependencies as a side-effect this could
 

00:03:47.430 --> 00:03:49.580
dependencies as a side-effect this could
help improve performance on low RAM

00:03:49.580 --> 00:03:49.590
help improve performance on low RAM
 

00:03:49.590 --> 00:03:51.860
help improve performance on low RAM
machines since this also reduces the

00:03:51.860 --> 00:03:51.870
machines since this also reduces the
 

00:03:51.870 --> 00:03:54.289
machines since this also reduces the
amount of background processing Android

00:03:54.289 --> 00:03:54.299
amount of background processing Android
 

00:03:54.299 --> 00:03:57.349
amount of background processing Android
studio offers an optimization to compile

00:03:57.349 --> 00:03:57.359
studio offers an optimization to compile
 

00:03:57.359 --> 00:04:00.680
studio offers an optimization to compile
multiple modules in parallel on low Ram

00:04:00.680 --> 00:04:00.690
multiple modules in parallel on low Ram
 

00:04:00.690 --> 00:04:03.770
multiple modules in parallel on low Ram
machines this feature will likely have a

00:04:03.770 --> 00:04:03.780
machines this feature will likely have a
 

00:04:03.780 --> 00:04:07.430
machines this feature will likely have a
negative impact on performance you can

00:04:07.430 --> 00:04:07.440
negative impact on performance you can
 

00:04:07.440 --> 00:04:09.229
negative impact on performance you can
disable it in the compiler settings

00:04:09.229 --> 00:04:09.239
disable it in the compiler settings
 

00:04:09.239 --> 00:04:12.050
disable it in the compiler settings
dialog I hope this video gives you some

00:04:12.050 --> 00:04:12.060
dialog I hope this video gives you some
 

00:04:12.060 --> 00:04:13.940
dialog I hope this video gives you some
ideas on how to fine-tune Android studio

00:04:13.940 --> 00:04:13.950
ideas on how to fine-tune Android studio
 

00:04:13.950 --> 00:04:16.039
ideas on how to fine-tune Android studio
and your low RAM environments to make

00:04:16.039 --> 00:04:16.049
and your low RAM environments to make
 

00:04:16.049 --> 00:04:18.529
and your low RAM environments to make
the development experience smoother to

00:04:18.529 --> 00:04:18.539
the development experience smoother to
 

00:04:18.539 --> 00:04:20.210
the development experience smoother to
learn more check out the Android

00:04:20.210 --> 00:04:20.220
learn more check out the Android
 

00:04:20.220 --> 00:04:23.060
learn more check out the Android
developer site thanks for watching

00:04:23.060 --> 00:04:23.070
developer site thanks for watching
 

00:04:23.070 --> 00:04:34.679
developer site thanks for watching
[Music]

