WEBVTT
Kind: captions
Language: en

00:00:09.139 --> 00:00:11.544
[SLEIGH BELLS]

00:00:11.544 --> 00:00:14.480
ANKUR KOTWAL: Welcome to a
Google Developers Live Session

00:00:14.480 --> 00:00:17.080
on the Santa Tracker
for Android app.

00:00:17.080 --> 00:00:18.750
JAN-FELIX SCHMAKEIT: My name
is Jan-Felix Schmakeit, and

00:00:18.750 --> 00:00:21.480
I'm a developer programs
engineer on the Android team.

00:00:21.480 --> 00:00:25.050
I'm based here in Sydney, and I
worked on the Santa Tracker

00:00:25.050 --> 00:00:26.040
Android app.

00:00:26.040 --> 00:00:28.310
ANKUR KOTWAL: Hi, I'm Ankur
Kotwal, and I'm a developer

00:00:28.310 --> 00:00:29.710
advocate on the Android team.

00:00:29.710 --> 00:00:33.130
I'm also based out of Sydney,
Australia, and was also an

00:00:33.130 --> 00:00:36.760
engineer on the Santa
Tracker Android app.

00:00:36.760 --> 00:00:38.520
So what's Santa Tracker
Android?

00:00:38.520 --> 00:00:39.830
JAN-FELIX SCHMAKEIT: That's
a really good question.

00:00:39.830 --> 00:00:43.840
So Santa Tracker, in general,
the idea was that you can

00:00:43.840 --> 00:00:45.702
follow Santa on Christmas,
even you can

00:00:45.702 --> 00:00:46.850
see where Santa is.

00:00:46.850 --> 00:00:49.800
And because we're both on the
Android team, we thought it

00:00:49.800 --> 00:00:52.220
would be really nice if you have
something native on your

00:00:52.220 --> 00:00:55.890
phone, and that's where
Santa Tracker Android

00:00:55.890 --> 00:00:57.490
application came in.

00:00:57.490 --> 00:01:00.207
ANKUR KOTWAL: Yeah, so I mean
from our point of view, the

00:01:00.207 --> 00:01:04.120
vision was that we would focus
on an amazing map experience

00:01:04.120 --> 00:01:07.430
where you can follow Santa on
Christmas Eve as he traveled

00:01:07.430 --> 00:01:09.230
the world and delivered
presents.

00:01:09.230 --> 00:01:12.440
Let's talk a little bit
the technology then.

00:01:12.440 --> 00:01:15.270
What is it that we used
to put Santa Tracker

00:01:15.270 --> 00:01:17.060
together this year?

00:01:17.060 --> 00:01:18.950
JAN-FELIX SCHMAKEIT: As you've
seen, we've released the

00:01:18.950 --> 00:01:22.720
Google Maps API version 2 for
Android, and that allowed us

00:01:22.720 --> 00:01:25.120
to put together a fantastic
map experience with 3D

00:01:25.120 --> 00:01:27.020
buildings, and you can
tilt the cameras

00:01:27.020 --> 00:01:28.400
and zoom the camera.

00:01:28.400 --> 00:01:29.500
So all sorts of really
cool stuff.

00:01:29.500 --> 00:01:33.260
ANKUR KOTWAL: Yeah, and the
great thing is is that it's we

00:01:33.260 --> 00:01:34.610
were able to build
an experience.

00:01:34.610 --> 00:01:37.700
It's interactive but also
passive, and that's what we're

00:01:37.700 --> 00:01:39.560
going to talk about
in this session.

00:01:39.560 --> 00:01:43.120
How we built it and what was
our vision behind it.

00:01:43.120 --> 00:01:46.170
So we've already said that the
experience is going to be

00:01:46.170 --> 00:01:49.390
Santa moving from location
to location on a map.

00:01:49.390 --> 00:01:50.620
So pop quiz.

00:01:50.620 --> 00:01:54.960
With this new library, what do
we use to drop our map in onto

00:01:54.960 --> 00:01:55.720
the screen?

00:01:55.720 --> 00:01:57.480
JAN-FELIX SCHMAKEIT: So we're
using a map fragment.

00:01:57.480 --> 00:01:59.440
And that's just like any other
fragment you've used on

00:01:59.440 --> 00:02:02.210
Android before, but
it's a Google Map.

00:02:02.210 --> 00:02:02.920
ANKUR KOTWAL: Neat.

00:02:02.920 --> 00:02:05.810
So people have been asking for
a map fragment for a while.

00:02:05.810 --> 00:02:08.699
We can now have multiple map
fragments if you want, but

00:02:08.699 --> 00:02:10.280
we're only obviously using
the one, right?

00:02:10.280 --> 00:02:10.889
JAN-FELIX SCHMAKEIT:
Yeah, just one.

00:02:10.889 --> 00:02:13.360
ANKUR KOTWAL: OK, so now we
have a map, and we want to

00:02:13.360 --> 00:02:15.070
drop Santa in on the screen.

00:02:15.070 --> 00:02:16.180
How do we drop Santa in?

00:02:16.180 --> 00:02:18.610
How do we display Santa
on that map?

00:02:18.610 --> 00:02:20.780
JAN-FELIX SCHMAKEIT: So Santa
is actually just another

00:02:20.780 --> 00:02:21.890
marker on the map.

00:02:21.890 --> 00:02:24.502
So we have a special icon, so
when you create a marker you

00:02:24.502 --> 00:02:26.890
can set a target to the
location, and you

00:02:26.890 --> 00:02:28.630
can also set an icon.

00:02:28.630 --> 00:02:30.440
In this case, we have a
little special icon

00:02:30.440 --> 00:02:32.050
we're using for Santa.

00:02:32.050 --> 00:02:34.350
That way, you can see where
Santa is at the moment.

00:02:34.350 --> 00:02:35.900
ANKUR KOTWAL: OK, so
Santa is there.

00:02:35.900 --> 00:02:36.770
We have the map.

00:02:36.770 --> 00:02:38.550
You said we could
set a location.

00:02:38.550 --> 00:02:39.620
Santa is going to move.

00:02:39.620 --> 00:02:41.250
So how do we do the
animation then?

00:02:41.250 --> 00:02:43.430
JAN-FELIX SCHMAKEIT: Yeah,
that's a good question.

00:02:43.430 --> 00:02:47.260
So basically, we're changing
the position of the marker

00:02:47.260 --> 00:02:48.080
along the way.

00:02:48.080 --> 00:02:51.060
So we have a thread running, and
we're basically saying OK,

00:02:51.060 --> 00:02:53.880
move the marker, update
the location of

00:02:53.880 --> 00:02:55.210
that particular marker.

00:02:55.210 --> 00:02:56.170
ANKUR KOTWAL: Interesting.

00:02:56.170 --> 00:02:59.610
So how do we know where Santa
is at any point in time?

00:02:59.610 --> 00:03:02.520
Because, I mean obviously, we're
communicating with Santa

00:03:02.520 --> 00:03:05.950
as he travels on Christmas Eve
so that he tells us that hey,

00:03:05.950 --> 00:03:07.580
I've reached this location.

00:03:07.580 --> 00:03:09.720
I'm on my way here.

00:03:09.720 --> 00:03:11.480
How is that all working?

00:03:15.280 --> 00:03:16.190
JAN-FELIX SCHMAKEIT: So
basically the back-end is

00:03:16.190 --> 00:03:18.820
based-- so we have an API, a
Santa API as we've called it

00:03:18.820 --> 00:03:21.880
internally, because we have a
few different clients that

00:03:21.880 --> 00:03:22.900
actually talk to Santa.

00:03:22.900 --> 00:03:25.080
So instead of Santa having to
talk to every single person

00:03:25.080 --> 00:03:27.400
around the world, Santa is just
talking to our engineers,

00:03:27.400 --> 00:03:30.980
and then all the clients can
access this particular API.

00:03:30.980 --> 00:03:33.160
And the API was actually
built in App Engine.

00:03:33.160 --> 00:03:34.820
ANKUR KOTWAL: He's in Go.

00:03:34.820 --> 00:03:36.850
JAN-FELIX SCHMAKEIT: And the
Android app is accessing it.

00:03:36.850 --> 00:03:39.200
We have a Chrome extension, and
we have a website as well.

00:03:39.200 --> 00:03:42.090
And they're all accessing the
same API that we're using to

00:03:42.090 --> 00:03:44.270
find out where Santa is and
where he's heading next.

00:03:44.270 --> 00:03:47.030
ANKUR KOTWAL: So that App Engine
API basically notifies

00:03:47.030 --> 00:03:51.950
all the clients that here is
Santa's latest up-to-date

00:03:51.950 --> 00:03:53.510
location on the night.

00:03:53.510 --> 00:03:54.020
JAN-FELIX SCHMAKEIT:
That's right.

00:03:54.020 --> 00:03:55.620
ANKUR KOTWAL: OK, great.

00:03:55.620 --> 00:04:00.180
So as Santa travels from place
to place, location to

00:04:00.180 --> 00:04:05.370
location, I guess, how do we
tick off a location as having

00:04:05.370 --> 00:04:06.090
been visited?

00:04:06.090 --> 00:04:10.070
What are we doing on the Android
app to show that?

00:04:10.070 --> 00:04:12.510
JAN-FELIX SCHMAKEIT: So we have
markers that show where

00:04:12.510 --> 00:04:14.350
Santa has already
been on the map.

00:04:14.350 --> 00:04:16.660
So every location Santa has
visited, as we know from the

00:04:16.660 --> 00:04:19.779
time stamp and from what Santa's
told us, we basically

00:04:19.779 --> 00:04:21.890
put a marker and say, look,
Santa has already been there.

00:04:21.890 --> 00:04:24.690
And you can go off, and you can
click on and it shows you

00:04:24.690 --> 00:04:26.270
how many presents Santa's
delivered there.

00:04:26.270 --> 00:04:28.550
So we actually add a marker
for each place Santa has

00:04:28.550 --> 00:04:29.810
visited along the way.

00:04:29.810 --> 00:04:31.200
ANKUR KOTWAL: OK, great.

00:04:31.200 --> 00:04:33.580
Is there any tricks that
you had to go across?

00:04:33.580 --> 00:04:35.580
I mean you're telling if
you're adding markers.

00:04:35.580 --> 00:04:38.270
We're going to have lots and
lots of markers on this map.

00:04:38.270 --> 00:04:39.950
And if I zoomed out, we--

00:04:39.950 --> 00:04:42.110
are there performance
considerations?

00:04:42.110 --> 00:04:44.780
JAN-FELIX SCHMAKEIT: Yeah, so
as you can imagine, Santa is

00:04:44.780 --> 00:04:47.310
visiting a lot of places
around the world.

00:04:47.310 --> 00:04:50.590
And the map view actually is
very performant, even if we

00:04:50.590 --> 00:04:51.420
have a couple [INAUDIBLE]

00:04:51.420 --> 00:04:53.140
markers on the map
at the same time.

00:04:53.140 --> 00:04:55.370
That's actually really fantastic
to see even on

00:04:55.370 --> 00:04:56.470
low-end devices.

00:04:56.470 --> 00:04:58.670
One issue, though, is if you
have a lot of markers and

00:04:58.670 --> 00:05:00.825
you've zoomed out, for
example, they tend

00:05:00.825 --> 00:05:01.900
to overlap a bit.

00:05:01.900 --> 00:05:04.430
So there were a few tricks we
had to use to make sure that

00:05:04.430 --> 00:05:06.640
our Santa marker, which is just
another marker, always

00:05:06.640 --> 00:05:07.570
stays on top.

00:05:07.570 --> 00:05:10.520
So when you tilt the camera, for
example, that's where the

00:05:10.520 --> 00:05:12.010
zed index issue comes in.

00:05:12.010 --> 00:05:13.670
So which marker's on top.

00:05:13.670 --> 00:05:14.890
ANKUR KOTWAL: Which marker
is in front is

00:05:14.890 --> 00:05:15.765
what you mean, right?

00:05:15.765 --> 00:05:16.070
JAN-FELIX SCHMAKEIT: Exactly.

00:05:16.070 --> 00:05:17.600
ANKUR KOTWAL: Because,
obviously, I can imagine on a

00:05:17.600 --> 00:05:21.060
map, if I'm looking at a map in
a certain way and I've got

00:05:21.060 --> 00:05:23.560
a bunch of markers, the ones
that are closest to me should

00:05:23.560 --> 00:05:24.600
be the ones in front.

00:05:24.600 --> 00:05:25.490
JAN-FELIX SCHMAKEIT: Exactly
right, yeah.

00:05:25.490 --> 00:05:27.390
ANKUR KOTWAL: And that would
make sense for the location

00:05:27.390 --> 00:05:29.660
marker, but when it comes to
Santa, we kind of want to show

00:05:29.660 --> 00:05:32.470
Santa on top or in front
of all the markers.

00:05:32.470 --> 00:05:34.040
So I can see that that's
interesting.

00:05:34.040 --> 00:05:36.520
It looks like we're using the
library in ways they hadn't

00:05:36.520 --> 00:05:38.550
really designed for.

00:05:38.550 --> 00:05:39.500
JAN-FELIX SCHMAKEIT: Yeah,
that's true, that's true.

00:05:39.500 --> 00:05:40.300
Yeah.

00:05:40.300 --> 00:05:43.540
ANKUR KOTWAL: So you mentioned
also before that we had a

00:05:43.540 --> 00:05:46.450
thread running that updated
Santa's location.

00:05:46.450 --> 00:05:49.130
We also seemed to be
talking to an API.

00:05:49.130 --> 00:05:51.740
So there's obviously some
background work, some user

00:05:51.740 --> 00:05:53.380
interface work.

00:05:53.380 --> 00:05:55.770
How did you pull all of
that stuff together?

00:05:55.770 --> 00:05:58.660
JAN-FELIX SCHMAKEIT: So the one
issue here is that you can

00:05:58.660 --> 00:06:00.750
only interact with the
map on the UI thread.

00:06:00.750 --> 00:06:02.460
So we had to make use of
different threads.

00:06:02.460 --> 00:06:05.770
You should never access an API
or a web service on the UI

00:06:05.770 --> 00:06:06.590
thread, for example.

00:06:06.590 --> 00:06:08.200
ANKUR KOTWAL: I think what you
mean is you shouldn't do any

00:06:08.200 --> 00:06:10.800
networking on the foreground
of the UR thread.

00:06:10.800 --> 00:06:11.340
JAN-FELIX SCHMAKEIT: Exactly.

00:06:11.340 --> 00:06:13.450
The same goes for calculations,
because we're

00:06:13.450 --> 00:06:16.150
doing a lot with latitudes and
longitudes, and a lot of other

00:06:16.150 --> 00:06:16.660
calculations.

00:06:16.660 --> 00:06:19.810
So we didn't want to do any
of that in the UI thread.

00:06:19.810 --> 00:06:21.365
But the issue was you could
only access the

00:06:21.365 --> 00:06:22.290
map on the UI thread.

00:06:22.290 --> 00:06:24.820
So there a few things we
had to think about.

00:06:24.820 --> 00:06:26.900
We had to be very careful
on how you design your

00:06:26.900 --> 00:06:28.350
application, how you
interact with it.

00:06:28.350 --> 00:06:31.150
ANKUR KOTWAL: Right, so we
obviously did some pretty

00:06:31.150 --> 00:06:33.600
hardcore thread synchronization
there to make

00:06:33.600 --> 00:06:35.750
sure that everything runs
smooth and will

00:06:35.750 --> 00:06:37.510
run smooth on the--

00:06:37.510 --> 00:06:38.670
JAN-FELIX SCHMAKEIT: Having
said that, [INAUDIBLE]

00:06:38.670 --> 00:06:40.940
fantastic for us, and actually
worked quite well.

00:06:40.940 --> 00:06:41.970
Very easy to use.

00:06:41.970 --> 00:06:42.400
ANKUR KOTWAL: There you go.

00:06:42.400 --> 00:06:44.570
Good tip there.

00:06:44.570 --> 00:06:47.900
Now the other thing I guess I
want to ask you is in terms of

00:06:47.900 --> 00:06:51.770
the Android life cycle, because
if you think about

00:06:51.770 --> 00:06:55.170
Android, we have on create, on
start, on resume, on pause.

00:06:55.170 --> 00:06:57.050
We have a couple of
hundred markers or

00:06:57.050 --> 00:06:59.770
thousands of markers.

00:06:59.770 --> 00:07:02.020
Do we need to do anything
special because Santa's moving

00:07:02.020 --> 00:07:03.110
all the time as well?

00:07:03.110 --> 00:07:05.080
JAN-FELIX SCHMAKEIT: Yeah, the
thing is Santa doesn't stop.

00:07:05.080 --> 00:07:06.880
So when you pause the
application and you

00:07:06.880 --> 00:07:08.030
go back into it.

00:07:08.030 --> 00:07:10.460
The question was how do we
restore the correct state?

00:07:10.460 --> 00:07:12.300
So how do we tick off
the right places

00:07:12.300 --> 00:07:14.190
Santa has been to?

00:07:14.190 --> 00:07:18.670
In our case, we found it was
the easiest if we reset the

00:07:18.670 --> 00:07:21.240
map completely and add
everything back in so we know

00:07:21.240 --> 00:07:22.390
exactly what Santa's up to.

00:07:22.390 --> 00:07:24.190
We can put Santa in exactly
the right spot.

00:07:24.190 --> 00:07:25.400
And performance-wise, it wasn't

00:07:25.400 --> 00:07:27.020
actually an issue at all.

00:07:27.020 --> 00:07:29.430
If you make sure you've
calculated as much as you can

00:07:29.430 --> 00:07:31.370
beforehand, your storing all
the data in the correct

00:07:31.370 --> 00:07:33.500
format, so we're using a secret
live database in the

00:07:33.500 --> 00:07:35.160
background.

00:07:35.160 --> 00:07:36.400
It actually works really well.

00:07:36.400 --> 00:07:37.140
ANKUR KOTWAL: OK.

00:07:37.140 --> 00:07:40.280
So at this stage, Santa's
animating on the map, but it's

00:07:40.280 --> 00:07:45.500
really hard to tell where he's
been and where he's going.

00:07:45.500 --> 00:07:47.940
So what solutions did
we have for that?

00:07:47.940 --> 00:07:49.950
JAN-FELIX SCHMAKEIT: Yeah, so
we noticed that as we were

00:07:49.950 --> 00:07:51.830
experimenting and
using the app.

00:07:51.830 --> 00:07:55.000
So we decided to make it really
obvious that Santa is

00:07:55.000 --> 00:07:57.900
moving across the map by
showing his progress.

00:07:57.900 --> 00:08:01.360
So basically, we've added a line
from where he's left, the

00:08:01.360 --> 00:08:03.310
last place where he's been,
and where he is

00:08:03.310 --> 00:08:04.130
currently on the map.

00:08:04.130 --> 00:08:04.840
So you could zoom out.

00:08:04.840 --> 00:08:07.700
You can correctly see where
Santa is at the moment.

00:08:07.700 --> 00:08:08.050
ANKUR KOTWAL: I'm sorry.

00:08:08.050 --> 00:08:11.640
From a developer standpoint,
how do we draw the line?

00:08:11.640 --> 00:08:12.570
JAN-FELIX SCHMAKEIT: Quite
literally, we're using a

00:08:12.570 --> 00:08:14.220
polyline line to do that.

00:08:14.220 --> 00:08:16.650
So we have two points as
part of a polyline--

00:08:16.650 --> 00:08:20.350
where he has been, his departure
place, his departure

00:08:20.350 --> 00:08:23.220
location, and his current
location, and we simply have a

00:08:23.220 --> 00:08:25.860
thread where we update one
of the points, and that's

00:08:25.860 --> 00:08:27.700
basically how we move the
line together with

00:08:27.700 --> 00:08:28.820
Santa across the map.

00:08:28.820 --> 00:08:29.090
ANKUR KOTWAL: Awesome.

00:08:29.090 --> 00:08:31.450
So polylines are obviously
a feature of the map view

00:08:31.450 --> 00:08:33.840
API of version 2.

00:08:33.840 --> 00:08:35.770
And then what about the
destination itself?

00:08:35.770 --> 00:08:39.900
Because you could think that
the source is a marker, the

00:08:39.900 --> 00:08:41.830
destination is a marker.

00:08:41.830 --> 00:08:43.610
JAN-FELIX SCHMAKEIT: Basically,
we added just

00:08:43.610 --> 00:08:45.170
basically another marker.

00:08:45.170 --> 00:08:45.800
That a bit transparent.

00:08:45.800 --> 00:08:48.170
It's basically to show that this
is where Santa is going

00:08:48.170 --> 00:08:50.050
to be, that's where
he's heading.

00:08:50.050 --> 00:08:51.150
ANKUR KOTWAL: Gotcha.

00:08:51.150 --> 00:08:54.520
So now we had a map, and we had
Santa moving on that map.

00:08:54.520 --> 00:08:56.150
Location to location,
the location

00:08:56.150 --> 00:08:57.980
markers would show up.

00:08:57.980 --> 00:09:01.310
But really one of the things
that we wanted to do was make

00:09:01.310 --> 00:09:04.230
sure that users didn't have to
play with the app, didn't have

00:09:04.230 --> 00:09:08.190
to pan the app around
to follow Santa.

00:09:08.190 --> 00:09:12.150
So what do we do from a passive
experience point of

00:09:12.150 --> 00:09:13.960
view to make that fun?

00:09:13.960 --> 00:09:15.700
JAN-FELIX SCHMAKEIT: So we took
advantage of the camera

00:09:15.700 --> 00:09:19.550
animation so you can control
the camera in a map view.

00:09:19.550 --> 00:09:20.560
That's what we're using here.

00:09:20.560 --> 00:09:24.160
So basically, as Santa is moving
around the map, we're

00:09:24.160 --> 00:09:25.340
animating the camera as well.

00:09:25.340 --> 00:09:27.450
We're zooming in and making sure
that Santa is always on

00:09:27.450 --> 00:09:28.740
the screen.

00:09:28.740 --> 00:09:30.580
So now we can really
see that the

00:09:30.580 --> 00:09:31.920
application is coming together.

00:09:31.920 --> 00:09:32.360
We have a map.

00:09:32.360 --> 00:09:32.950
We have Santa.

00:09:32.950 --> 00:09:34.480
Santa is moving on a map.

00:09:34.480 --> 00:09:36.440
But I think there's still
something missing that really

00:09:36.440 --> 00:09:39.370
makes this a global experience
that everyone around the world

00:09:39.370 --> 00:09:40.920
can enjoy the app.

00:09:40.920 --> 00:09:41.410
ANKUR KOTWAL: That's right.

00:09:41.410 --> 00:09:42.290
Localization.

00:09:42.290 --> 00:09:46.750
We wanted to make sure that this
app was something that

00:09:46.750 --> 00:09:49.410
people all over the world could
experience, and people

00:09:49.410 --> 00:09:51.370
all over the world speak
different languages.

00:09:51.370 --> 00:09:56.450
So we've actually spent quite a
lot of time localizing this

00:09:56.450 --> 00:10:00.280
app in as many languages as
possible, and have covered

00:10:00.280 --> 00:10:03.200
just about every language
that Android supports.

00:10:03.200 --> 00:10:07.400
So all of the strings
are localized.

00:10:07.400 --> 00:10:10.280
But the thing to keep in mind,
when you do localization is

00:10:10.280 --> 00:10:13.260
not just that the strings
change, you have to worry

00:10:13.260 --> 00:10:18.120
about the context, that things
make sense, and also from a

00:10:18.120 --> 00:10:20.710
developer's point of view you
actually have to look at

00:10:20.710 --> 00:10:23.666
things like your layout, how big
all your different fields

00:10:23.666 --> 00:10:27.140
are, because some languages
actually take up more

00:10:27.140 --> 00:10:31.520
characters to display the same
level of text than others.

00:10:31.520 --> 00:10:34.540
So in some ways, English
is a bit of a

00:10:34.540 --> 00:10:36.720
medium in terms of size.

00:10:36.720 --> 00:10:40.490
Some of the Asian languages use
finer characters that take

00:10:40.490 --> 00:10:41.460
up less space.

00:10:41.460 --> 00:10:44.860
But then languages like German
actually have an English

00:10:44.860 --> 00:10:47.210
character set, but they actually
have quite a lot of

00:10:47.210 --> 00:10:49.240
characters for each
of the words.

00:10:49.240 --> 00:10:52.830
So with all of these pieces
coming together in our

00:10:52.830 --> 00:10:56.760
development life cycle, this was
really the right time to

00:10:56.760 --> 00:11:00.760
send out a version of the app
for internal testing to

00:11:00.760 --> 00:11:03.520
Googlers all around the world
to get their feedback.

00:11:03.520 --> 00:11:06.160
So we did that.

00:11:06.160 --> 00:11:11.320
Did you find any overwhelming
feedback that people were

00:11:11.320 --> 00:11:12.760
really feeling strongly about?

00:11:12.760 --> 00:11:14.720
JAN-FELIX SCHMAKEIT: Yeah,
so we built this passive

00:11:14.720 --> 00:11:18.160
experience where we always
followed Santa, but we found

00:11:18.160 --> 00:11:20.030
people wanted to go back to see
where Santa has already

00:11:20.030 --> 00:11:21.480
been or where he might
head next.

00:11:21.480 --> 00:11:23.840
They wanted to go around and
explore the map themselves.

00:11:23.840 --> 00:11:26.460
So that was something we had
to consider in other apps.

00:11:26.460 --> 00:11:29.090
ANKUR KOTWAL: And so up until
now, what we'd done was focus

00:11:29.090 --> 00:11:31.650
on the passive experience
where the camera would

00:11:31.650 --> 00:11:34.450
automatically follow Santa, but
now, people wanted to be

00:11:34.450 --> 00:11:35.840
able to move stuff around.

00:11:35.840 --> 00:11:39.980
So that was a really strong
piece of feedback.

00:11:39.980 --> 00:11:41.360
But one of the pieces--

00:11:41.360 --> 00:11:45.000
one of the sort of initial
visions for Android app was

00:11:45.000 --> 00:11:48.170
that we didn't want there to be
any user interface on the

00:11:48.170 --> 00:11:48.670
app itself.

00:11:48.670 --> 00:11:50.780
We didn't want there to be
buttons and things for people

00:11:50.780 --> 00:11:54.330
to toggle, because at the end
of the day on a phone you've

00:11:54.330 --> 00:11:58.560
got such small amounts of real
estate, and obviously, on a

00:11:58.560 --> 00:11:59.580
tablet you have more.

00:11:59.580 --> 00:12:03.090
But remember, one of the user
experience guidelines for

00:12:03.090 --> 00:12:05.620
Android is that regardless
whether you're on a phone or a

00:12:05.620 --> 00:12:07.180
tablet, you should be able
to have the same

00:12:07.180 --> 00:12:08.640
functionality, right.

00:12:08.640 --> 00:12:11.100
So the layout, even the layouts
can change, but all

00:12:11.100 --> 00:12:12.720
the functionality
should be there.

00:12:12.720 --> 00:12:17.690
So given that we had this vision
that we didn't want too

00:12:17.690 --> 00:12:20.910
much user interface, but users
want to be able to toggle

00:12:20.910 --> 00:12:24.180
between an automatic and a
manual mode, what do we do?

00:12:24.180 --> 00:12:27.150
JAN-FELIX SCHMAKEIT:
Yeah, so that was a

00:12:27.150 --> 00:12:30.110
really interesting question.

00:12:30.110 --> 00:12:32.190
So rather than just simply
adding a button, we made this

00:12:32.190 --> 00:12:33.660
a bit more interactive.

00:12:33.660 --> 00:12:37.080
So basically as soon as you
touch the map, we came out of

00:12:37.080 --> 00:12:39.530
Santa cam mode-- that's what we
called it, Santa cam mode,

00:12:39.530 --> 00:12:41.340
because you're following
Santa.

00:12:41.340 --> 00:12:43.850
So as soon as you touch the map,
a little button popped

00:12:43.850 --> 00:12:46.950
up, and you can basically say
oh, hang on, if I want to

00:12:46.950 --> 00:12:48.940
follow Santa again, I can
tap on that button.

00:12:48.940 --> 00:12:51.940
But we also added a time out
to it, because the passive

00:12:51.940 --> 00:12:54.090
experience was really what we
were going for and what the

00:12:54.090 --> 00:12:55.400
focus of the app was.

00:12:55.400 --> 00:12:59.720
So after 20 seconds, 25 seconds
of inactivity on the

00:12:59.720 --> 00:13:02.800
map, we actually popped the
count down up, and you had

00:13:02.800 --> 00:13:05.240
five seconds before we enabled
Santa cam again.

00:13:05.240 --> 00:13:07.242
You'd follow Santa again.

00:13:07.242 --> 00:13:07.670
ANKUR KOTWAL: Cool.

00:13:07.670 --> 00:13:10.290
I mean that to me was like
a really fun bit.

00:13:10.290 --> 00:13:13.400
And the other point we should
mention that although we

00:13:13.400 --> 00:13:16.050
called it the Santa cam button
or the toggle, it

00:13:16.050 --> 00:13:17.660
was a styled button.

00:13:17.660 --> 00:13:19.890
We didn't just have a normal
rectangular button.

00:13:19.890 --> 00:13:23.970
We tried to make it a bit more
fit within the theme of Santa.

00:13:23.970 --> 00:13:25.400
So what did it look like?

00:13:25.400 --> 00:13:27.900
JAN-FELIX SCHMAKEIT: So it
didn't actually look like any

00:13:27.900 --> 00:13:29.410
normal standard button that
you've seen before.

00:13:29.410 --> 00:13:30.200
It was round.

00:13:30.200 --> 00:13:32.240
There was a big, big icon of--

00:13:32.240 --> 00:13:33.650
Santa icon was on there.

00:13:33.650 --> 00:13:35.880
So obviously, it was
interactive.

00:13:35.880 --> 00:13:37.710
You can touch it, you
got the feedback.

00:13:37.710 --> 00:13:39.930
But it didn't look like
a normal button.

00:13:39.930 --> 00:13:42.320
But we actually spent a fair bit
of time making sure that

00:13:42.320 --> 00:13:43.750
people knew that they could
interact with it.

00:13:43.750 --> 00:13:46.750
ANKUR KOTWAL: Yes, including
the touch feedback.

00:13:46.750 --> 00:13:47.730
That's very important.

00:13:47.730 --> 00:13:50.200
When you're building custom
user interfaces, touch

00:13:50.200 --> 00:13:52.650
feedback is very important,
because otherwise it doesn't

00:13:52.650 --> 00:13:54.980
look like people can
interact with it.

00:13:54.980 --> 00:13:59.300
OK, so now we had this
Santa cam toggle.

00:13:59.300 --> 00:14:00.600
You could go in and out of it.

00:14:00.600 --> 00:14:03.940
But how would people know
whether they were in Santa cam

00:14:03.940 --> 00:14:05.910
or not in Santa cam?

00:14:05.910 --> 00:14:07.820
JAN-FELIX SCHMAKEIT: Yes, so we
wanted to add something to

00:14:07.820 --> 00:14:10.300
make it obvious that you're
following Santa or you can

00:14:10.300 --> 00:14:11.540
interact with the map.

00:14:11.540 --> 00:14:13.880
So we actually added a border
around the map.

00:14:13.880 --> 00:14:18.160
And all we did was basically we
added a graphic on top of

00:14:18.160 --> 00:14:20.450
the map when Santa cam
mode was active.

00:14:20.450 --> 00:14:23.880
And the trick we used here was--
we wanted something that

00:14:23.880 --> 00:14:25.750
looked a bit like you were
dreaming or you were looking

00:14:25.750 --> 00:14:28.930
through a telescope, or
something a bit magical, fun.

00:14:28.930 --> 00:14:34.730
And so we basically got a low
res PNG, semi-transparent with

00:14:34.730 --> 00:14:37.050
a kind of transparent border on
the outside, and we simply

00:14:37.050 --> 00:14:37.800
scaled it up.

00:14:37.800 --> 00:14:39.490
And that worked really,
really well.

00:14:39.490 --> 00:14:40.360
So it had a nice
[? alpha value ?]

00:14:40.360 --> 00:14:40.970
around it.

00:14:40.970 --> 00:14:43.060
And it actually took a fair bit
of time to get the color

00:14:43.060 --> 00:14:44.425
right and to get
the [? alpha ?]

00:14:44.425 --> 00:14:45.390
[? value ?] right, and
all these things.

00:14:45.390 --> 00:14:46.350
It's quite tricky.

00:14:46.350 --> 00:14:48.390
ANKUR KOTWAL: I think we should
mention the story of

00:14:48.390 --> 00:14:50.790
how the color-- in terms
of getting that right.

00:14:50.790 --> 00:14:52.960
We started off with a
fairly dark color.

00:14:52.960 --> 00:14:56.720
I think it was black or gray,
but the feedback that we got

00:14:56.720 --> 00:15:00.790
was that this might
scare children.

00:15:00.790 --> 00:15:01.000
[LAUGHTER]

00:15:01.000 --> 00:15:03.310
ANKUR KOTWAL: And so we actually
changed the color

00:15:03.310 --> 00:15:06.220
from a dark color to
a yellowy color.

00:15:06.220 --> 00:15:08.180
So it was completely see-through
in the middle, and

00:15:08.180 --> 00:15:12.390
around the edges, you get a
nice sort of almost a glow

00:15:12.390 --> 00:15:14.730
type effect.

00:15:14.730 --> 00:15:17.670
So there was one last thing that
I believe we did after

00:15:17.670 --> 00:15:22.560
that first internal test,
and that was to make the

00:15:22.560 --> 00:15:24.500
experience feel even
more immersive.

00:15:24.500 --> 00:15:27.630
JAN-FELIX SCHMAKEIT:
Yeah, we basically

00:15:27.630 --> 00:15:29.010
added low profile mode.

00:15:29.010 --> 00:15:32.330
So instead of completely going
to full screen and taking over

00:15:32.330 --> 00:15:35.500
the entire device, we basically
enabled low profile

00:15:35.500 --> 00:15:38.900
mode which dims the task
bar and the buttons.

00:15:38.900 --> 00:15:42.480
And the idea was we kind of
trying to draw people into the

00:15:42.480 --> 00:15:45.110
app by not completely taking
everything over.

00:15:45.110 --> 00:15:49.800
ANKUR KOTWAL: Yeah, that
feedback was really, really

00:15:49.800 --> 00:15:52.220
important, and it's something
that we highly recommend

00:15:52.220 --> 00:15:55.265
whenever you're building
any software.

00:15:55.265 --> 00:15:57.750
Distribute the app to as many
people as you can to get

00:15:57.750 --> 00:16:01.770
diverse feedback for it, because
it changed a lot of

00:16:01.770 --> 00:16:04.460
our design.

00:16:04.460 --> 00:16:06.130
So now let's talk about
the village.

00:16:06.130 --> 00:16:08.760
The village was really intended
to be a landing page

00:16:08.760 --> 00:16:10.540
for users of the app.

00:16:10.540 --> 00:16:14.200
Somewhere where it's the initial
screen that you see,

00:16:14.200 --> 00:16:16.820
and it's where users would
be until Santa took off.

00:16:16.820 --> 00:16:21.110
So obviously, we had a countdown
to Christmas, until

00:16:21.110 --> 00:16:22.360
Santa took off.

00:16:24.660 --> 00:16:27.930
The vision behind the Android
app was really to build an

00:16:27.930 --> 00:16:31.470
awesome map experience as we
track Santa around the world.

00:16:31.470 --> 00:16:35.750
So the village was really
intended to be just somewhere

00:16:35.750 --> 00:16:38.840
where users can see the
countdown, and then to have

00:16:38.840 --> 00:16:42.280
the interactive elements that
the web version had.

00:16:42.280 --> 00:16:44.110
JAN-FELIX SCHMAKEIT: OK,
it looks pretty good.

00:16:44.110 --> 00:16:45.960
that Let's have a look and
talk about some of the

00:16:45.960 --> 00:16:49.130
implementation tricks that
you had to go through.

00:16:49.130 --> 00:16:51.590
So let's talk about
this image.

00:16:51.590 --> 00:16:53.940
That's a huge image you're
using there.

00:16:53.940 --> 00:16:55.810
ANKUR KOTWAL: Yeah, so the
village itself was actually

00:16:55.810 --> 00:17:00.690
10,000 pixels wide, and what we
did is we split it up into

00:17:00.690 --> 00:17:05.540
five slices, because on Android
an image can only be a

00:17:05.540 --> 00:17:10.500
maximum of 2048 pixels
either wide or high.

00:17:10.500 --> 00:17:12.010
That's the maximum
you can have.

00:17:12.010 --> 00:17:15.660
So what we did is we split our
10,000 pixel wide image into

00:17:15.660 --> 00:17:20.819
2048 pixel slices, and then
showed it on screen.

00:17:20.819 --> 00:17:21.430
JAN-FELIX SCHMAKEIT: OK.

00:17:21.430 --> 00:17:24.680
So as we're watching this scene,
you can see there's

00:17:24.680 --> 00:17:25.670
some scrolling happening.

00:17:25.670 --> 00:17:27.480
So let's talk about that.

00:17:27.480 --> 00:17:28.890
So how are you doing that?

00:17:28.890 --> 00:17:32.020
ANKUR KOTWAL: Yeah, we're just
offsetting the images left and

00:17:32.020 --> 00:17:34.050
right, But one of things you'll
notice is that the

00:17:34.050 --> 00:17:37.080
images in the foreground tend
to scroll at a faster rate

00:17:37.080 --> 00:17:38.800
than the images in
the background.

00:17:38.800 --> 00:17:41.530
So the village, for example,
scrolls at a faster rate than

00:17:41.530 --> 00:17:44.035
the mountains or even
the clouds.

00:17:44.035 --> 00:17:46.290
And we've used a technique
that's called parallax

00:17:46.290 --> 00:17:47.990
scrolling to achieve that.

00:17:47.990 --> 00:17:51.400
What parallax scrolling is
is basically having these

00:17:51.400 --> 00:17:54.000
relative speeds for
different layers.

00:17:54.000 --> 00:17:55.590
So even though the images--

00:17:55.590 --> 00:17:57.390
I said there's five slices.

00:17:57.390 --> 00:18:01.450
We actually have different
layers so each layer is split

00:18:01.450 --> 00:18:02.490
up into five slices.

00:18:02.490 --> 00:18:05.210
So some of the layers we have
are the snow, the village, the

00:18:05.210 --> 00:18:08.180
rail for what the monorail sits
on, the mountains and

00:18:08.180 --> 00:18:09.370
then the sky.

00:18:09.370 --> 00:18:10.630
JAN-FELIX SCHMAKEIT: OK.

00:18:10.630 --> 00:18:12.880
So when you go about
implementing this, did you

00:18:12.880 --> 00:18:14.950
have lots of different views
you're putting on top of each

00:18:14.950 --> 00:18:16.750
other or how did you
implement that?

00:18:16.750 --> 00:18:20.940
ANKUR KOTWAL: No, actually for
something with so many sort of

00:18:20.940 --> 00:18:25.610
bits and pieces and so many
graphics, you definitely don't

00:18:25.610 --> 00:18:29.440
want to use views, because views
are kind of heavy both

00:18:29.440 --> 00:18:32.330
in terms of memory and in terms
of runtime performance.

00:18:32.330 --> 00:18:34.400
They're not designed for
something like this.

00:18:34.400 --> 00:18:36.680
They're designed for
touch elements.

00:18:36.680 --> 00:18:39.880
So what we've done here is
actually used one big view,

00:18:39.880 --> 00:18:43.290
which I call the village view,
and I load up a bunch of

00:18:43.290 --> 00:18:44.800
images at the start.

00:18:44.800 --> 00:18:48.620
And then we override the onDraw
method of the view, and

00:18:48.620 --> 00:18:50.820
then just position the different
layers and the

00:18:50.820 --> 00:18:53.830
images one on top of each
other and fire them off.

00:18:53.830 --> 00:18:56.920
Now the trick is, Android is
going to be called up to 60

00:18:56.920 --> 00:19:00.190
times a second, all right,
because the device runs at 60

00:19:00.190 --> 00:19:01.140
frames per second.

00:19:01.140 --> 00:19:03.050
So the trick is you need to
make sure that you do your

00:19:03.050 --> 00:19:06.290
execution within 16
milliseconds, because that's

00:19:06.290 --> 00:19:07.250
all the time you have.

00:19:07.250 --> 00:19:09.590
So basically what that means
is don't do any memory

00:19:09.590 --> 00:19:12.970
allocations or deallocations,
because they will cause a

00:19:12.970 --> 00:19:16.250
stutter in your drawing.

00:19:16.250 --> 00:19:18.440
You'll blow your 16 millisecond
time limit that

00:19:18.440 --> 00:19:21.790
you effectively have and have
a lower performance--

00:19:21.790 --> 00:19:23.080
well, lower frame rate.

00:19:23.080 --> 00:19:24.510
So you don't want to do that.

00:19:24.510 --> 00:19:27.510
And you want to do all your
calculations upfront.

00:19:27.510 --> 00:19:28.090
JAN-FELIX SCHMAKEIT: Performance
is a really

00:19:28.090 --> 00:19:30.910
interesting point because it
looks very impressive here.

00:19:30.910 --> 00:19:34.080
So how well does it work
on a smaller, lower

00:19:34.080 --> 00:19:35.370
end, low res device?

00:19:35.370 --> 00:19:36.880
Any tricks you had to use?

00:19:36.880 --> 00:19:37.820
Any pointers?

00:19:37.820 --> 00:19:39.650
ANKUR KOTWAL: Yeah, look,
we definitely

00:19:39.650 --> 00:19:41.090
targeted all the devices.

00:19:41.090 --> 00:19:43.950
We targeted Android 2.2
or Froyo and up.

00:19:43.950 --> 00:19:47.780
And that's, what, three
years old now?

00:19:47.780 --> 00:19:51.800
We're talking really lower end,
lower res screens, and

00:19:51.800 --> 00:19:53.700
actually they don't have a lot
of memory on them either.

00:19:53.700 --> 00:19:57.520
So it's slower CPU, less RAM,
and lower resolution.

00:19:57.520 --> 00:20:00.800
So we had assets that we
targeted for each of those

00:20:00.800 --> 00:20:04.240
different types of devices, and
we didn't target them to a

00:20:04.240 --> 00:20:06.240
specific platform version
or anything.

00:20:06.240 --> 00:20:10.680
We actually used the resource
qualifiers that we have in the

00:20:10.680 --> 00:20:13.530
resource hierarchy on Android.

00:20:13.530 --> 00:20:18.720
So we basically targeted
it at several things.

00:20:18.720 --> 00:20:21.740
We looked at things like
the dpi, low dpi,

00:20:21.740 --> 00:20:24.340
mdpi, h, and xdpi--

00:20:24.340 --> 00:20:26.060
xhdpi.

00:20:26.060 --> 00:20:28.840
That obviously got us phone
categorizations, but then you

00:20:28.840 --> 00:20:30.130
will say well, what
about tablets?

00:20:30.130 --> 00:20:32.090
Because you'll get
some tablets.

00:20:32.090 --> 00:20:35.400
I mean, typically, tablets can
perform a lot better than

00:20:35.400 --> 00:20:38.010
phones, because they've got
better hardware in them,

00:20:38.010 --> 00:20:39.910
typically anyway.

00:20:39.910 --> 00:20:44.000
So you'll find something like
the Nexus 7 which is a tvdpi

00:20:44.000 --> 00:20:45.530
device, 213dp.

00:20:45.530 --> 00:20:47.300
So you want it to have
the high res images.

00:20:47.300 --> 00:20:49.180
You don't want the
low res images.

00:20:49.180 --> 00:20:51.590
So what we did is we actually
used the resource qualifier

00:20:51.590 --> 00:20:52.200
there as well.

00:20:52.200 --> 00:20:56.640
So we used sw600dp to identify
it this is a tablet, and we

00:20:56.640 --> 00:20:58.420
should target these
resolutions,

00:20:58.420 --> 00:20:59.750
these high res images.

00:20:59.750 --> 00:21:02.790
And for phones, we just
used the [INAUDIBLE]

00:21:02.790 --> 00:21:03.980
xhdpi.

00:21:03.980 --> 00:21:05.980
The last thing I want to
say is we didn't do any

00:21:05.980 --> 00:21:07.640
specialization in code itself.

00:21:07.640 --> 00:21:10.710
We completely used the resource
hierarchy, and that's

00:21:10.710 --> 00:21:13.020
really the right way to do it,
because that's what it's

00:21:13.020 --> 00:21:14.586
designed for.

00:21:14.586 --> 00:21:15.610
JAN-FELIX SCHMAKEIT:
Yeah, thanks.

00:21:15.610 --> 00:21:16.770
This looks pretty impressive.

00:21:16.770 --> 00:21:18.370
ANKUR KOTWAL: Yeah, I know,
It was a lot of fun.

00:21:18.370 --> 00:21:19.290
Great learning exercise.

00:21:19.290 --> 00:21:22.180
And really, you should dive
in as developers if you're

00:21:22.180 --> 00:21:23.680
exploring graphics.

00:21:23.680 --> 00:21:26.620
The Canvas API actually gets you
a long way before you have

00:21:26.620 --> 00:21:30.946
to dive into OpenGL, but that's
a separate discussion.

00:21:30.946 --> 00:21:34.830
So as we talked about the
village, we said that the map

00:21:34.830 --> 00:21:37.840
was really the focus of our
efforts for the Android app.

00:21:37.840 --> 00:21:39.650
And up until this point,
we had a fairly vanilla

00:21:39.650 --> 00:21:40.220
experience.

00:21:40.220 --> 00:21:43.470
I mean you could follow Santa,
and the camera tracked him.

00:21:43.470 --> 00:21:47.500
But it was at this point where
we really got our creativity

00:21:47.500 --> 00:21:51.610
going and really got excited
about what we could do with

00:21:51.610 --> 00:21:53.810
this, and that was using--

00:21:53.810 --> 00:21:55.330
like really playing--

00:21:55.330 --> 00:21:56.810
by playing with the camera.

00:21:56.810 --> 00:21:58.070
So why don't you tell
us a bit about that?

00:21:58.070 --> 00:21:58.700
JAN-FELIX SCHMAKEIT:
Yeah, that's right.

00:21:58.700 --> 00:22:01.570
So we started adding some more
animations to the camera,

00:22:01.570 --> 00:22:04.010
because we can change the zoom
level, we can change the tilt,

00:22:04.010 --> 00:22:06.600
we can change the baring,
and all sorts of stuff.

00:22:06.600 --> 00:22:08.840
And we just started playing with
it a bit, and I think we

00:22:08.840 --> 00:22:10.610
went a bit crazy.

00:22:10.610 --> 00:22:12.180
So [? Martin's ?]

00:22:12.180 --> 00:22:14.170
idea was to have Santa always
on the screen, but we wanted

00:22:14.170 --> 00:22:15.610
to make it really exciting.

00:22:15.610 --> 00:22:18.340
So we thought about
like sports news

00:22:18.340 --> 00:22:19.020
coverage, for example.

00:22:19.020 --> 00:22:19.820
You zoom in.

00:22:19.820 --> 00:22:20.860
You can see the whole thing.

00:22:20.860 --> 00:22:23.590
You can see what's happening on
the screen, and that's what

00:22:23.590 --> 00:22:25.100
we were going for
here, as well.

00:22:25.100 --> 00:22:27.910
So we are following
Santa around.

00:22:27.910 --> 00:22:28.420
We're zooming in.

00:22:28.420 --> 00:22:31.020
We have close-ups of him
going past places.

00:22:31.020 --> 00:22:33.490
And then as Santa is getting
closer to a location, his

00:22:33.490 --> 00:22:35.770
destination, we actually zoom
in even a bit more, and you

00:22:35.770 --> 00:22:37.620
can see exactly where
he is heading.

00:22:37.620 --> 00:22:39.970
You can see exactly where
he is going to be next.

00:22:39.970 --> 00:22:41.910
ANKUR KOTWAL: Yeah, and as you
can see from the demo here,

00:22:41.910 --> 00:22:45.060
we're zooming in, zooming
out, rotating.

00:22:45.060 --> 00:22:47.710
At the end of the day, I guess
what we ended up building was

00:22:47.710 --> 00:22:51.340
a somewhat cinematic but passive
experience for Santa,

00:22:51.340 --> 00:22:54.570
and Santa cam really came
into its own here.

00:22:54.570 --> 00:22:56.860
But I also noticed that as these
demos are going and the

00:22:56.860 --> 00:23:00.540
rotation's happening,
you can see Santa.

00:23:00.540 --> 00:23:02.820
His marker is also rotating.

00:23:02.820 --> 00:23:04.760
So obviously, he wasn't
a 3D object.

00:23:04.760 --> 00:23:06.010
So how did you go with this?

00:23:06.010 --> 00:23:08.150
JAN-FELIX SCHMAKEIT: Yeah, so
markers are always facing one

00:23:08.150 --> 00:23:10.450
direction, so there's a
trick you have to use.

00:23:10.450 --> 00:23:12.920
So we actually have different
images and just swapping them

00:23:12.920 --> 00:23:14.130
and depending on
which direction

00:23:14.130 --> 00:23:15.550
Santa's traveling in.

00:23:15.550 --> 00:23:17.660
But then the question was-- how
do we know where's Santa

00:23:17.660 --> 00:23:18.550
is traveling?

00:23:18.550 --> 00:23:21.420
Because you can rotate
the camera.

00:23:21.420 --> 00:23:24.970
So we have to calculate where
the direction he's traveling

00:23:24.970 --> 00:23:28.190
from, where he's leaving form
his departure to his arrival

00:23:28.190 --> 00:23:31.410
location, and we also have to
take into account the camera,

00:23:31.410 --> 00:23:34.140
so the direction the camera
is facing at the moment.

00:23:34.140 --> 00:23:36.730
ANKUR KOTWAL: Yeah, so we were
basically listening in from a

00:23:36.730 --> 00:23:40.090
map view point of view for these
camera update events and

00:23:40.090 --> 00:23:42.790
using the on-camera change
listener to tell us that, hey,

00:23:42.790 --> 00:23:44.830
the camera is rotated in a
certain way, we now need to

00:23:44.830 --> 00:23:45.610
update the marker.

00:23:45.610 --> 00:23:46.070
JAN-FELIX SCHMAKEIT: Yeah.

00:23:46.070 --> 00:23:46.570
Yeah, that right.

00:23:46.570 --> 00:23:49.810
The only trick here was that
you only get these updates

00:23:49.810 --> 00:23:51.790
once the camera update
has finished.

00:23:51.790 --> 00:23:53.840
So you don't get them as the
camera is animating.

00:23:53.840 --> 00:23:56.480
So we are taking an educated
guess to say OK, the camera is

00:23:56.480 --> 00:23:59.460
probably going to animate in
this way, so let's swap out

00:23:59.460 --> 00:24:01.630
the icons in this direction
and hope that's

00:24:01.630 --> 00:24:02.670
going to match up.

00:24:02.670 --> 00:24:03.850
ANKUR KOTWAL: Sounds like
you're challenging these

00:24:03.850 --> 00:24:07.220
developers, these users
to break it.

00:24:07.220 --> 00:24:10.820
But the other thing is I noticed
that you can tap on a

00:24:10.820 --> 00:24:12.660
location and bring
up info windows.

00:24:15.790 --> 00:24:17.565
Does that all fit well
with all this?

00:24:17.565 --> 00:24:18.340
JAN-FELIX SCHMAKEIT: So
they lost a bit of a

00:24:18.340 --> 00:24:19.800
challenge here because--

00:24:19.800 --> 00:24:22.130
so you can it's a dashboard at
the bottom giving you some

00:24:22.130 --> 00:24:25.000
stats on what Santa
has been up to.

00:24:25.000 --> 00:24:28.270
And if you tap on a marker, by
default it always centers it

00:24:28.270 --> 00:24:29.180
on the screen.

00:24:29.180 --> 00:24:33.740
But if you have the dashboard
open, like on a tablet, the

00:24:33.740 --> 00:24:36.510
full expanded version of a
dashboard, it would overlap

00:24:36.510 --> 00:24:37.200
the marker.

00:24:37.200 --> 00:24:40.950
So we actually had to have a few
extra tricks to make sure

00:24:40.950 --> 00:24:41.790
that the marker doesn't

00:24:41.790 --> 00:24:44.270
actually overlap the dashboard.

00:24:44.270 --> 00:24:46.280
ANKUR KOTWAL: And so we just
basically positioned it--

00:24:46.280 --> 00:24:49.130
did an offset so that the
info window was visible.

00:24:49.130 --> 00:24:49.610
JAN-FELIX SCHMAKEIT: Exactly.

00:24:49.610 --> 00:24:51.760
So basically, calculate how
much space we have on the

00:24:51.760 --> 00:24:54.310
screen for the visible map and
basically just put the marker

00:24:54.310 --> 00:24:55.470
and then the info window.

00:24:55.470 --> 00:24:56.790
ANKUR KOTWAL: Yeah, so that
was the info windows.

00:24:56.790 --> 00:24:59.530
We actually tried to make the
dashboard itself fairly

00:24:59.530 --> 00:25:00.710
intelligent as well.

00:25:00.710 --> 00:25:04.140
So you'll notice that
this map is

00:25:04.140 --> 00:25:05.840
implement responsive designed.

00:25:05.840 --> 00:25:08.840
So what that means is,
basically, on a phone or on a

00:25:08.840 --> 00:25:11.790
tablet, it actually positions
the dashboard

00:25:11.790 --> 00:25:12.880
at different locations.

00:25:12.880 --> 00:25:15.270
And even its initial state,
whether it's expanded or

00:25:15.270 --> 00:25:19.940
summarized, varies depending on
what screens you're using.

00:25:19.940 --> 00:25:22.320
So for example, on the phone,
it always starts off in the

00:25:22.320 --> 00:25:25.440
collapsed or summary mode as we
called it, whereas on the

00:25:25.440 --> 00:25:27.690
tablet, it always starts
off expanded.

00:25:27.690 --> 00:25:29.730
But in portrait mode, it will
be in the center of the

00:25:29.730 --> 00:25:32.270
screen, whereas in the landscape
mode, it will be at

00:25:32.270 --> 00:25:34.260
the bottom right of the screen,
because we just

00:25:34.260 --> 00:25:38.140
thought it fit well in terms
of the layout there.

00:25:38.140 --> 00:25:40.990
We did make some interesting
decisions there though about

00:25:40.990 --> 00:25:42.410
the collapse mode, right?

00:25:42.410 --> 00:25:43.890
JAN-FELIX SCHMAKEIT: Yeah, so
we didn't want to lose any

00:25:43.890 --> 00:25:45.070
information.

00:25:45.070 --> 00:25:48.120
So we basically added--

00:25:48.120 --> 00:25:51.410
we're basically scrolling in the
extra information from the

00:25:51.410 --> 00:25:52.470
bottom of the dashboard.

00:25:52.470 --> 00:25:54.870
So you're not going to
miss out on anything.

00:25:54.870 --> 00:25:57.250
And we also added a marquee
effect to it.

00:25:57.250 --> 00:25:59.240
So if you have text coming in
that too long, it doesn't fit

00:25:59.240 --> 00:25:59.975
into the one line.

00:25:59.975 --> 00:26:01.940
This is basically scrolling
it through.

00:26:01.940 --> 00:26:03.090
ANKUR KOTWAL: Yeah, and
that's particularly

00:26:03.090 --> 00:26:04.220
important when we localize.

00:26:04.220 --> 00:26:07.240
Remember that, because of this
text can be a lot longer.

00:26:07.240 --> 00:26:10.180
So, yeah, that's
the dashboard.

00:26:10.180 --> 00:26:12.200
So at this point in the
development life cycle, we

00:26:12.200 --> 00:26:13.490
were looking pretty good.

00:26:13.490 --> 00:26:14.800
The app was coming together.

00:26:14.800 --> 00:26:16.330
It was looking fairly
complete.

00:26:16.330 --> 00:26:17.300
JAN-FELIX SCHMAKEIT: But
I think there was still

00:26:17.300 --> 00:26:18.530
something missing.

00:26:18.530 --> 00:26:19.610
ANKUR KOTWAL: Sound effects!

00:26:19.610 --> 00:26:20.200
JAN-FELIX SCHMAKEIT:
And presents.

00:26:20.200 --> 00:26:21.370
ANKUR KOTWAL: Yes, of course.

00:26:21.370 --> 00:26:24.050
So with sound effects,
we started adding--

00:26:24.050 --> 00:26:26.660
up until this point, the
app was a silent app.

00:26:26.660 --> 00:26:29.250
Which it was still fun, but as
soon as we started adding

00:26:29.250 --> 00:26:30.100
sound effects--

00:26:30.100 --> 00:26:33.500
we added some birds in the
village, some jingles for the

00:26:33.500 --> 00:26:36.920
sleigh, and even Santa himself
would chuck in a "ho ho ho"

00:26:36.920 --> 00:26:39.490
every so often, and it just
really livened up the

00:26:39.490 --> 00:26:40.130
experience.

00:26:40.130 --> 00:26:41.970
JAN-FELIX SCHMAKEIT: Yeah, yeah,
it really did, and the

00:26:41.970 --> 00:26:43.770
presents were quite good, too.

00:26:43.770 --> 00:26:45.570
I mean that's why Santa
is traveling

00:26:45.570 --> 00:26:46.530
around the world, right?

00:26:46.530 --> 00:26:49.560
So our Santa is also giving
out presents.

00:26:49.560 --> 00:26:51.350
ANKUR KOTWAL: So how did you
implement the presents then?

00:26:51.350 --> 00:26:52.875
JAN-FELIX SCHMAKEIT: So each of
his presents-- as you can

00:26:52.875 --> 00:26:55.190
see here, they're moving
over the map--

00:26:55.190 --> 00:26:57.060
they're actually markers.

00:26:57.060 --> 00:26:58.680
So we're basically animating
markers again.

00:26:58.680 --> 00:27:01.470
But as you can see, the presents
are dropping on to

00:27:01.470 --> 00:27:02.170
the ground.

00:27:02.170 --> 00:27:04.440
So we actually have different
markers that

00:27:04.440 --> 00:27:05.500
we're swapping in.

00:27:05.500 --> 00:27:06.650
So we have icons we're using.

00:27:06.650 --> 00:27:07.720
They're a bit more transparent
with the

00:27:07.720 --> 00:27:08.720
presents a bit smaller.

00:27:08.720 --> 00:27:11.920
We're basically swapping those
in, looks like the presents is

00:27:11.920 --> 00:27:13.400
falling on to the ground.

00:27:13.400 --> 00:27:15.420
ANKUR KOTWAL: Well, into
people's houses and not onto

00:27:15.420 --> 00:27:16.030
people, right?

00:27:16.030 --> 00:27:16.480
JAN-FELIX SCHMAKEIT:
Yeah, that's right.

00:27:16.480 --> 00:27:17.690
Let's hope so.

00:27:17.690 --> 00:27:20.950
ANKUR KOTWAL: Yeah, so now
we have an animated Santa

00:27:20.950 --> 00:27:23.175
delivering presents, traveling
around the world.

00:27:23.175 --> 00:27:27.290
You know, at this point we had
a real sense of satisfaction

00:27:27.290 --> 00:27:30.840
that this app was kind of fun.

00:27:30.840 --> 00:27:32.390
We hoped that families
all around the

00:27:32.390 --> 00:27:34.410
world would enjoy it.

00:27:34.410 --> 00:27:38.720
So I guess this really concludes
today's Google

00:27:38.720 --> 00:27:39.790
Developer Live.

00:27:39.790 --> 00:27:44.240
We hope that those of you that
use the app enjoyed it as much

00:27:44.240 --> 00:27:47.810
as we enjoyed building it, and
I guess we'll see you next

00:27:47.810 --> 00:27:48.260
time

00:27:48.260 --> 00:27:49.020
JAN-FELIX SCHMAKEIT:
Yeah, see you.

00:27:49.020 --> 00:27:50.520
ANKUR KOTWAL: Bye bye.

00:27:50.520 --> 00:27:50.820
[HO HO HO]

00:27:50.820 --> 00:27:59.843
[SLEIGHT BELLS]

