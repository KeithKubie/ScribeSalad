WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.856
[MUSIC PLAYING]

00:00:07.280 --> 00:00:08.780
RICHARD GAYWOOD:
My name is Richard.

00:00:08.780 --> 00:00:10.920
I work in London with the
Google Play Console Team.

00:00:10.920 --> 00:00:14.080
And I'm here today to talk to
you about Pre-Launch Report.

00:00:14.080 --> 00:00:17.080
JUSTIN BROUGHTON: And I am
Justin, Tech Lead Manager

00:00:17.080 --> 00:00:19.570
for the Firebase Test Lab.

00:00:19.570 --> 00:00:21.580
Thank you, the brave
few who have made it

00:00:21.580 --> 00:00:26.200
at this rather ungodly hour,
the night after the party.

00:00:26.200 --> 00:00:32.259
And I'm sure that that scary,
rather wordy title didn't help.

00:00:32.259 --> 00:00:34.240
Did we really used
the word autonomous?

00:00:34.240 --> 00:00:36.100
RICHARD GAYWOOD:
Marketing insisted.

00:00:36.100 --> 00:00:38.860
JUSTIN BROUGHTON: So if
you're here for a Waymo talk,

00:00:38.860 --> 00:00:41.650
you're in the wrong place.

00:00:41.650 --> 00:00:45.670
Today, we're here to talk to you
about intelligent app and game

00:00:45.670 --> 00:00:51.460
testing that requires mercifully
little work on your part.

00:00:51.460 --> 00:00:55.030
It's available in
both the Play Console

00:00:55.030 --> 00:00:57.640
and in Firebase Test Lab.

00:00:57.640 --> 00:01:01.360
Both products have massively
increased their offering.

00:01:01.360 --> 00:01:03.040
And we're here to
tell you about what's

00:01:03.040 --> 00:01:07.790
in one, what's in the
other, and what's in both.

00:01:07.790 --> 00:01:13.810
And we'll tell you our story
in the context of an app.

00:01:13.810 --> 00:01:16.960
Testing is a pain.

00:01:16.960 --> 00:01:21.190
But as you've probably heard
multiple times this week,

00:01:21.190 --> 00:01:24.670
it's really important.

00:01:24.670 --> 00:01:29.530
So as much as possible, we
want to take Google's expertise

00:01:29.530 --> 00:01:34.330
and resources, and make
it our pain and not yours.

00:01:34.330 --> 00:01:36.955
RICHARD GAYWOOD: So let's start
by talking about the Pre-Launch

00:01:36.955 --> 00:01:38.530
Report.

00:01:38.530 --> 00:01:40.660
This is an automated
scan of your app

00:01:40.660 --> 00:01:43.150
that aims to give you an early
warning of quality problems

00:01:43.150 --> 00:01:45.100
before your users see them.

00:01:45.100 --> 00:01:46.680
It's a free service.

00:01:46.680 --> 00:01:49.610
And it applies automatically
to every APK published

00:01:49.610 --> 00:01:51.670
to Play's Alpha or
Beta tracks, or as you

00:01:51.670 --> 00:01:54.160
may have heard this week, the
new open and closed testing

00:01:54.160 --> 00:01:56.970
tracks.

00:01:56.970 --> 00:01:59.880
We take APKs that you
pass to Google Play.

00:01:59.880 --> 00:02:03.230
And we install them
onto about 10 devices.

00:02:03.230 --> 00:02:04.790
These devices span a range.

00:02:04.790 --> 00:02:07.600
There are high-end
devices, like the Pixel 2,

00:02:07.600 --> 00:02:12.730
and down to low-end devices
like the Samsung Galaxy J1 Ace.

00:02:12.730 --> 00:02:15.250
Once we have the APK
installed on the device,

00:02:15.250 --> 00:02:18.850
we start a special
robo crawler process.

00:02:18.850 --> 00:02:22.600
The robo crawler explores
your app, inputting taps,

00:02:22.600 --> 00:02:26.650
and swipes, and text
as a user would.

00:02:26.650 --> 00:02:29.080
This takes place on
physical infrastructure

00:02:29.080 --> 00:02:31.690
which is part of a larger
farm, with thousands

00:02:31.690 --> 00:02:34.630
of different devices and a
large diversity of hardware

00:02:34.630 --> 00:02:35.760
and operating systems.

00:02:38.970 --> 00:02:40.830
Your fellow developers
have told us

00:02:40.830 --> 00:02:43.890
that they take Pre-Launch
Report very seriously.

00:02:43.890 --> 00:02:47.460
In a recent survey, 86%
said that they consider

00:02:47.460 --> 00:02:51.504
Pre-Launch Report results to
be important or very important

00:02:51.504 --> 00:02:53.670
when they're considering
whether it's time to launch

00:02:53.670 --> 00:02:56.250
a new app into production.

00:02:56.250 --> 00:02:58.320
When developers have
ignored our recommendation

00:02:58.320 --> 00:03:01.260
and launched in something
that we found problems,

00:03:01.260 --> 00:03:04.980
our data says that about 75% of
the time, the problems that we

00:03:04.980 --> 00:03:09.330
found in Pre-Launch Report
were later seen by real users.

00:03:09.330 --> 00:03:11.490
Those users got a
poor experience.

00:03:11.490 --> 00:03:13.140
They may have left bad reviews.

00:03:13.140 --> 00:03:14.755
They may have left bad ratings.

00:03:14.755 --> 00:03:16.880
They may have chosen not
to spend money in the app.

00:03:16.880 --> 00:03:19.920
And they may even have
uninstalled the app.

00:03:19.920 --> 00:03:22.710
Furthermore, Pre-Launch
Report test results

00:03:22.710 --> 00:03:25.860
are used internally within Play
as one of a number of factors

00:03:25.860 --> 00:03:30.270
when deciding how to feature
and rank apps in the Play Store.

00:03:30.270 --> 00:03:33.180
As of today, we've crawled
over a million different apps.

00:03:33.180 --> 00:03:34.920
And if we're not
already crawling yours,

00:03:34.920 --> 00:03:36.336
we'd really like
to be doing that.

00:03:39.270 --> 00:03:41.640
Now, as you've probably
guessed from what I've said,

00:03:41.640 --> 00:03:44.400
Pre-Launch Report is pretty
good at finding crashes.

00:03:44.400 --> 00:03:47.020
When we find a crash in
your app while we test it,

00:03:47.020 --> 00:03:49.275
we give you a lot of
information-- stack traces,

00:03:49.275 --> 00:03:50.970
log [INAUDIBLE],,
things like that--

00:03:50.970 --> 00:03:53.890
everything you need to
debug the crash and fix it.

00:03:53.890 --> 00:03:56.160
But we don't just do crashes.

00:03:56.160 --> 00:03:58.000
We also take
screenshots and capture

00:03:58.000 --> 00:04:00.270
a video of the
crawl on each device

00:04:00.270 --> 00:04:03.750
so that you can look for UX
issues in different languages.

00:04:03.750 --> 00:04:06.950
In October, we added
performance data.

00:04:06.950 --> 00:04:09.660
This is network,
memory, and CPU metrics

00:04:09.660 --> 00:04:12.870
so that you can look for
performance issues in your app.

00:04:12.870 --> 00:04:15.750
So that's what my team does,
the Play Pre-Launch Report.

00:04:15.750 --> 00:04:18.899
What about your team, Justin?

00:04:18.899 --> 00:04:22.050
JUSTIN BROUGHTON: So my team
works on Firebase Test Lab.

00:04:22.050 --> 00:04:26.300
So Firebase Test Lab
is a separate solution

00:04:26.300 --> 00:04:30.060
that is part of the suite of
products under the Firebase

00:04:30.060 --> 00:04:31.050
umbrella.

00:04:31.050 --> 00:04:34.810
It uses the same technology
as the Pre-Launch Report,

00:04:34.810 --> 00:04:39.000
including the larger device
farm that Richard mentioned.

00:04:39.000 --> 00:04:42.870
It offers many of
the same features.

00:04:42.870 --> 00:04:45.780
But it also integrates with
a number of different tools,

00:04:45.780 --> 00:04:50.610
such as Android Studio,
fastlane, gcloud SDK,

00:04:50.610 --> 00:04:53.400
and of course, the
Firebase console,

00:04:53.400 --> 00:04:57.570
allowing developers
to test their apps

00:04:57.570 --> 00:05:02.940
and games at all stages of
the application lifecycle

00:05:02.940 --> 00:05:06.960
across a wider array of
devices, giving you more

00:05:06.960 --> 00:05:08.625
comprehensive test results.

00:05:12.250 --> 00:05:15.010
So let's talk about an app.

00:05:15.010 --> 00:05:17.370
This is Fitness Bud.

00:05:17.370 --> 00:05:20.610
Now, while Fitness Bud is
not a real application,

00:05:20.610 --> 00:05:24.540
it does illustrate
real-world problems--

00:05:24.540 --> 00:05:28.320
problems we know you will have.

00:05:28.320 --> 00:05:33.330
Fitness Bud is a social
fitness tracking application

00:05:33.330 --> 00:05:37.650
built by, let's say, a
small company, FB Solutions.

00:05:37.650 --> 00:05:41.100
Fitness Bud allows you
to log in with a Google

00:05:41.100 --> 00:05:45.330
account or a custom account,
create an online fitness

00:05:45.330 --> 00:05:50.430
avatar, invite fitness
buddies with whom to train,

00:05:50.430 --> 00:05:54.090
and even join a local gym.

00:05:54.090 --> 00:05:56.130
Richard and I are
going to take you

00:05:56.130 --> 00:06:00.870
through how FB Solutions makes
use of the many new tools

00:06:00.870 --> 00:06:05.520
at their disposal to
develop, test, and release

00:06:05.520 --> 00:06:09.857
their soon-to-be wildly
successful application.

00:06:09.857 --> 00:06:11.190
RICHARD GAYWOOD: Thanks, Justin.

00:06:11.190 --> 00:06:12.690
Now, as my wife
likes to remind me

00:06:12.690 --> 00:06:14.250
when I'm being smug
about something,

00:06:14.250 --> 00:06:17.310
my body shape is best
described as a potato on legs.

00:06:17.310 --> 00:06:19.530
So I really need Fitness
Bud to be very, very good.

00:06:19.530 --> 00:06:22.180
I need all the help I can get.

00:06:22.180 --> 00:06:24.820
JUSTIN BROUGHTON: So how many
of you have spouses like-- no,

00:06:24.820 --> 00:06:25.320
sorry.

00:06:25.320 --> 00:06:29.250
How many of you have
way more time than you

00:06:29.250 --> 00:06:34.460
know what to do with and can fix
every last problem in your app?

00:06:34.460 --> 00:06:35.940
Nobody?

00:06:35.940 --> 00:06:37.764
RICHARD GAYWOOD:
Yeah, neither do we.

00:06:37.764 --> 00:06:39.930
With all of the signals
that Pre-Launch Report makes

00:06:39.930 --> 00:06:41.460
available to you,
we know it can be

00:06:41.460 --> 00:06:44.160
hard to prioritize, to
decide which of these issues

00:06:44.160 --> 00:06:46.350
is the most urgent
that you should fix.

00:06:46.350 --> 00:06:48.750
So starting this week,
we've launched a new page

00:06:48.750 --> 00:06:50.610
which digests all
of the issues we've

00:06:50.610 --> 00:06:52.930
found into a single
launch recommendation,

00:06:52.930 --> 00:06:54.300
as you can see here.

00:06:54.300 --> 00:06:57.480
This shows up at the top
of our new Overview tab.

00:06:57.480 --> 00:07:00.120
The Overview tab then
displays all of the issues

00:07:00.120 --> 00:07:04.110
that Pre-Launch Report has
found, prioritized by severity.

00:07:04.110 --> 00:07:07.530
This new tab makes it easy for
Fitness Bud to see at a glance

00:07:07.530 --> 00:07:10.530
if this new APK that they
have as a release candidate

00:07:10.530 --> 00:07:12.300
is ready to be released
to users or not.

00:07:15.762 --> 00:07:17.970
JUSTIN BROUGHTON: Now, Test
Lab's intelligent crawler

00:07:17.970 --> 00:07:21.690
does a great job of crawling
the Android framework

00:07:21.690 --> 00:07:24.140
part of Fitness Bud.

00:07:24.140 --> 00:07:30.330
But Fitness Bud uses OpenGL
for an online fitness avatar

00:07:30.330 --> 00:07:32.760
creation part.

00:07:32.760 --> 00:07:35.340
Previously, the
Pre-Launch Report

00:07:35.340 --> 00:07:39.060
couldn't test apps and
games which used OpenGL,

00:07:39.060 --> 00:07:41.610
but now it can.

00:07:41.610 --> 00:07:44.250
If you're a game
developer, you can write

00:07:44.250 --> 00:07:47.130
what are called Demo Loops.

00:07:47.130 --> 00:07:52.800
Demo Loops are an automated
journey through your app.

00:07:52.800 --> 00:07:56.970
They can focus on a particular
level or a particular game

00:07:56.970 --> 00:07:59.970
character.

00:07:59.970 --> 00:08:02.810
Demo Loops are a great way--

00:08:02.810 --> 00:08:08.760
they are an intent filter that
is declared in your manifest.

00:08:08.760 --> 00:08:12.450
They're not normally called
as part of the normal running

00:08:12.450 --> 00:08:13.810
of your application.

00:08:13.810 --> 00:08:19.980
But our test infrastructure
will detect them and run them.

00:08:19.980 --> 00:08:23.684
Demo Loops launched last
year in Firebase Test Lab.

00:08:23.684 --> 00:08:25.350
RICHARD GAYWOOD: And
starting this week,

00:08:25.350 --> 00:08:28.780
Demo Loops are now available
in Pre-Launch Report, as well.

00:08:28.780 --> 00:08:31.290
So if you choose to add
a Demo Loop to your app,

00:08:31.290 --> 00:08:33.870
when we take your app through
Pre-Launch Report, rather than

00:08:33.870 --> 00:08:36.510
the usual robo crawler,
we will run the Demo Loop

00:08:36.510 --> 00:08:39.330
and then output the full set
of Pre-Launch Report output.

00:08:39.330 --> 00:08:40.346
We'll look for crashes.

00:08:40.346 --> 00:08:42.929
And most importantly, we'll give
you those performance traces,

00:08:42.929 --> 00:08:44.512
so you can use Demo
Loops for accurate

00:08:44.512 --> 00:08:47.700
benchmarking on our
range of devices.

00:08:47.700 --> 00:08:50.820
If you don't use a Demo Loop,
we will use another new feature

00:08:50.820 --> 00:08:52.114
called Monkey Actions.

00:08:52.114 --> 00:08:54.030
When we detect that the
crawler has discovered

00:08:54.030 --> 00:08:55.800
an OpenGL part of
your app, we'll

00:08:55.800 --> 00:08:58.030
fall back to random input,
so we get at least some

00:08:58.030 --> 00:08:58.790
crawling for you.

00:09:01.870 --> 00:09:04.300
Fitness Bud really cares
about keeping its users'

00:09:04.300 --> 00:09:06.470
data safe and secure.

00:09:06.470 --> 00:09:09.890
So Fitness Bud requires custom
login or log in with Google.

00:09:09.890 --> 00:09:13.450
JUSTIN BROUGHTON: And if you
use Firebase Auth, both of these

00:09:13.450 --> 00:09:14.369
are supported.

00:09:14.369 --> 00:09:16.660
RICHARD GAYWOOD: As I was
saying before I was so rudely

00:09:16.660 --> 00:09:19.160
interrupted by that
message from our sponsors,

00:09:19.160 --> 00:09:22.150
Pre-Launch Report uses
an auto-login feature.

00:09:22.150 --> 00:09:23.980
As we test your
app, or as we test

00:09:23.980 --> 00:09:28.250
Fitness Bud's app, when we see
a Sign In with Google button.

00:09:28.250 --> 00:09:29.030
We will use it.

00:09:29.030 --> 00:09:31.150
And we automatically
have a Google account

00:09:31.150 --> 00:09:34.090
on the device, ready
to be signed in.

00:09:34.090 --> 00:09:36.490
Applications that don't
use log in with Google

00:09:36.490 --> 00:09:38.590
can choose to configure
Pre-Launch Report

00:09:38.590 --> 00:09:41.326
with a username or an email
address and a password

00:09:41.326 --> 00:09:43.450
that we will again use to
get past the login screen

00:09:43.450 --> 00:09:44.075
when we see it.

00:09:46.580 --> 00:09:49.410
Next, let's talk
about Deep Links.

00:09:49.410 --> 00:09:52.430
Deep Links are a way for
users to invoke functionality

00:09:52.430 --> 00:09:56.060
within your app that bypasses
the normal entry flow.

00:09:56.060 --> 00:09:59.420
For example, a user might
start off searching the web,

00:09:59.420 --> 00:10:03.660
but should be shown those
search results within your app.

00:10:03.660 --> 00:10:05.300
JUSTIN BROUGHTON:
So how many of you

00:10:05.300 --> 00:10:09.050
have Deep Links in your apps?

00:10:09.050 --> 00:10:10.910
Wow, yeah.

00:10:10.910 --> 00:10:13.220
How many of you test
those Deep Links

00:10:13.220 --> 00:10:16.073
at every release of the app?

00:10:16.073 --> 00:10:17.917
One, two?

00:10:17.917 --> 00:10:20.300
RICHARD GAYWOOD: I salute you.

00:10:20.300 --> 00:10:22.400
So Fitness Bud
have this problem.

00:10:22.400 --> 00:10:26.300
They use Deep Links to encourage
users to sign up to local gyms.

00:10:26.300 --> 00:10:29.150
The user receives a Firebase
notification alerting them

00:10:29.150 --> 00:10:30.740
to a special offer.

00:10:30.740 --> 00:10:32.580
They click the link
in the notification,

00:10:32.580 --> 00:10:35.930
and they're taken straight
to Firebase's gym signup--

00:10:35.930 --> 00:10:38.805
to Fitness Bud's
gym signup screen.

00:10:38.805 --> 00:10:40.430
This is a very
important flow for them,

00:10:40.430 --> 00:10:42.470
because money changes hands.

00:10:42.470 --> 00:10:44.360
Launching this week,
Pre-Launch Report

00:10:44.360 --> 00:10:46.640
will now test up to
three Deep Links.

00:10:46.640 --> 00:10:49.280
You can configure it
and add the Deep Links.

00:10:49.280 --> 00:10:51.620
We crawl as usual
for the five minutes,

00:10:51.620 --> 00:10:53.840
then at the end of the
crawl, we close the app

00:10:53.840 --> 00:10:56.120
and visit each
Deep Link in turn.

00:10:56.120 --> 00:11:01.010
As we visit each Deep Link, we
crawl for a further 30 seconds.

00:11:01.010 --> 00:11:04.280
JUSTIN BROUGHTON: So
Fitness Bud and you

00:11:04.280 --> 00:11:07.760
can make sure that users
who follow Deep Links

00:11:07.760 --> 00:11:09.770
can have the same
great experience.

00:11:13.290 --> 00:11:16.760
So as we have seen from
the million-plus apps

00:11:16.760 --> 00:11:20.360
that the crawler has
tested, sometimes,

00:11:20.360 --> 00:11:23.360
crucial parts of an
application are only

00:11:23.360 --> 00:11:27.080
reached through some
complicated flow,

00:11:27.080 --> 00:11:30.950
like Fitness Bud's
gym signup form.

00:11:30.950 --> 00:11:35.330
It turns out that automated
crawlers, and even some humans,

00:11:35.330 --> 00:11:38.060
aren't that good at
entering the correct text

00:11:38.060 --> 00:11:41.149
to bypass this form.

00:11:41.149 --> 00:11:43.440
RICHARD GAYWOOD: So this is
where Robo Scripts come in.

00:11:43.440 --> 00:11:45.350
These are another new feature.

00:11:45.350 --> 00:11:47.660
Robo Scripts provide
guidance to our crawler

00:11:47.660 --> 00:11:50.690
to get past a complicated
part of the app.

00:11:50.690 --> 00:11:54.200
They take the form of a short,
scripted sequence of actions

00:11:54.200 --> 00:11:57.590
recorded as JSON file.

00:11:57.590 --> 00:11:59.600
You can record Robo
Scripts using a tool built

00:11:59.600 --> 00:12:01.310
into Android Studio.

00:12:01.310 --> 00:12:02.720
With the app
running locally, you

00:12:02.720 --> 00:12:05.210
record a series of
taps and swipes.

00:12:05.210 --> 00:12:07.680
You then upload the scripts
to Pre-Launch Report

00:12:07.680 --> 00:12:10.100
or to Firebase Test Lab.

00:12:10.100 --> 00:12:12.950
The Robo Script guides the
early part of the crawl,

00:12:12.950 --> 00:12:14.840
carrying out the
prerecorded sequences

00:12:14.840 --> 00:12:17.120
to get the app into some
state that you think

00:12:17.120 --> 00:12:19.550
will be interesting to test.

00:12:19.550 --> 00:12:21.470
Once it's completed
the Robo Script,

00:12:21.470 --> 00:12:23.549
it starts crawling normally.

00:12:23.549 --> 00:12:25.340
JUSTIN BROUGHTON: Now,
Robo Scripts are not

00:12:25.340 --> 00:12:28.280
only useful for crawling forms.

00:12:28.280 --> 00:12:33.500
They can also be used to guide
the crawler past any parts

00:12:33.500 --> 00:12:37.187
that it finds
tricky to navigate.

00:12:37.187 --> 00:12:39.020
RICHARD GAYWOOD: Usability
and accessibility

00:12:39.020 --> 00:12:40.820
are really important
to your app.

00:12:40.820 --> 00:12:42.920
If you make your touch
targets too small,

00:12:42.920 --> 00:12:46.022
you might have a
result like this.

00:12:46.022 --> 00:12:48.294
JUSTIN BROUGHTON: (ON VIDEO)

00:12:48.294 --> 00:12:50.960
RICHARD GAYWOOD: Not one of your
better days at the gym, Justin?

00:12:50.960 --> 00:12:53.570
Does that happen to you a lot?

00:12:53.570 --> 00:12:55.366
JUSTIN BROUGHTON: Actually, no.

00:12:55.366 --> 00:12:57.740
But I do seem to have a rather
persistent irrational fear

00:12:57.740 --> 00:12:58.370
of treadmills.

00:12:58.370 --> 00:12:59.960
And I haven't been on one since.

00:12:59.960 --> 00:13:02.630
RICHARD GAYWOOD: I think
that's probably wise.

00:13:02.630 --> 00:13:04.100
In the next few
weeks, we're going

00:13:04.100 --> 00:13:06.950
to add to Pre-Launch Report
an intelligent crawler that's

00:13:06.950 --> 00:13:09.020
going to help uncover
usability issues,

00:13:09.020 --> 00:13:10.850
like that tiny button
that poor Justin was

00:13:10.850 --> 00:13:13.880
trying so hard to click there.

00:13:13.880 --> 00:13:16.670
All jokes aside, though,
small touch targets are

00:13:16.670 --> 00:13:18.840
a problem for a
wide range of users,

00:13:18.840 --> 00:13:21.240
including users using your
app on the go one-handed

00:13:21.240 --> 00:13:24.470
or uses with
dexterity impairments.

00:13:24.470 --> 00:13:27.680
Legible text is also
extremely important.

00:13:27.680 --> 00:13:29.910
So we will warn you
when text is too small.

00:13:29.910 --> 00:13:33.110
Or we will warn you when
the contrast is too low.

00:13:33.110 --> 00:13:36.710
Some visually impaired users
rely heavily on TalkBack.

00:13:36.710 --> 00:13:39.620
So we will also tell you when
TalkBack voiceover annotations

00:13:39.620 --> 00:13:42.728
are missing or confusing.

00:13:42.728 --> 00:13:44.810
JUSTIN BROUGHTON:
And as you can tell,

00:13:44.810 --> 00:13:48.230
that infamous button I was
trying so hard to click

00:13:48.230 --> 00:13:50.690
is included in the
usability results.

00:13:50.690 --> 00:13:54.230
And it's got a big
red box around it.

00:13:54.230 --> 00:13:56.717
And thankfully, as
far as I'm concerned,

00:13:56.717 --> 00:13:57.800
it's marked as Should Fix.

00:14:00.750 --> 00:14:03.060
RICHARD GAYWOOD: So after a
full sprint of bug fixing,

00:14:03.060 --> 00:14:05.842
Fitness Bud uploads a fresh
APK to the Google Play Console.

00:14:05.842 --> 00:14:08.050
And they take another look
at the Pre-Launch Report's

00:14:08.050 --> 00:14:09.580
Overview tab.

00:14:09.580 --> 00:14:11.320
As you can see here,
there are no longer

00:14:11.320 --> 00:14:13.480
any serious issues detected.

00:14:13.480 --> 00:14:16.270
They can now push this APK
into their production channel,

00:14:16.270 --> 00:14:20.090
confident that their users will
be receiving a good experience.

00:14:20.090 --> 00:14:23.020
JUSTIN BROUGHTON: So
we hope that you, too,

00:14:23.020 --> 00:14:27.490
can adopt the Pre-Launch
Report as part of your decision

00:14:27.490 --> 00:14:27.990
to launch.

00:14:29.872 --> 00:14:31.330
RICHARD GAYWOOD:
So that's what you

00:14:31.330 --> 00:14:33.310
get in Pre-Launch
Report, which is

00:14:33.310 --> 00:14:36.910
available for free to everyone
who publishes APKs to what we

00:14:36.910 --> 00:14:38.620
used to call the Alpha
or Beta channels,

00:14:38.620 --> 00:14:42.156
but now call open and
closed testing tracks.

00:14:42.156 --> 00:14:44.530
You can find it in the Google
Play Console and the Manage

00:14:44.530 --> 00:14:45.299
Releases.

00:14:45.299 --> 00:14:46.840
JUSTIN BROUGHTON:
Thank you, Richard.

00:14:46.840 --> 00:14:48.790
RICHARD GAYWOOD: You're welcome.

00:14:48.790 --> 00:14:50.590
JUSTIN BROUGHTON:
So as developers,

00:14:50.590 --> 00:14:54.220
we know that the earlier
we catch problems,

00:14:54.220 --> 00:14:56.680
the easier they are to fix.

00:14:56.680 --> 00:14:59.440
So if you're a
conscientious developer,

00:14:59.440 --> 00:15:02.050
or you just like
saving money, you

00:15:02.050 --> 00:15:05.600
want to catch problems
as quickly as possible.

00:15:05.600 --> 00:15:10.120
This is where Firebase
Test Lab comes in.

00:15:10.120 --> 00:15:13.070
Now, many of us,
myself included,

00:15:13.070 --> 00:15:19.150
have discussed ad nauseam
about the importance

00:15:19.150 --> 00:15:24.970
of creating automated tests for
every part of your application

00:15:24.970 --> 00:15:28.390
and to run those
tests continuously

00:15:28.390 --> 00:15:30.730
to prevent regressions.

00:15:30.730 --> 00:15:34.480
This is honestly the
most important thing

00:15:34.480 --> 00:15:40.130
you can do to improve the
quality of your applications.

00:15:40.130 --> 00:15:43.390
But writing tests is hard.

00:15:43.390 --> 00:15:46.340
That's why, when I ask,
in gatherings like this,

00:15:46.340 --> 00:15:50.020
how many of you have
automated tests that

00:15:50.020 --> 00:15:54.250
cover every part of your
application, way too few of you

00:15:54.250 --> 00:15:56.080
put up your hands.

00:15:56.080 --> 00:15:59.560
So I gave up
nagging a while ago.

00:15:59.560 --> 00:16:02.440
And we at Google have
put a lot of focus

00:16:02.440 --> 00:16:09.070
into creating tests
for apps and games

00:16:09.070 --> 00:16:13.300
without actually having
to write those tests.

00:16:13.300 --> 00:16:17.410
Earlier, we saw the
automated crawler,

00:16:17.410 --> 00:16:19.600
which is part of
Firebase Test Lab as what

00:16:19.600 --> 00:16:22.600
we call a robo test.

00:16:22.600 --> 00:16:26.770
But we can do much more.

00:16:26.770 --> 00:16:30.340
Let's look at how
we can create tests

00:16:30.340 --> 00:16:33.010
for all the different
parts of Fitness Bud.

00:16:36.570 --> 00:16:39.630
So one of the first things that
I, as a user of Fitness Bud,

00:16:39.630 --> 00:16:43.290
will want to do, is create
my fitness avatar, which

00:16:43.290 --> 00:16:46.500
involves uploading my photo.

00:16:46.500 --> 00:16:48.180
And from that photo--

00:16:48.180 --> 00:16:51.600
there it is-- the
app actually creates

00:16:51.600 --> 00:16:59.160
a caricature of me, which seems
to have emphasized all my worst

00:16:59.160 --> 00:17:01.650
flaws.

00:17:01.650 --> 00:17:06.329
It then allows me to choose
a focused activity, weight

00:17:06.329 --> 00:17:08.780
training.

00:17:08.780 --> 00:17:12.770
RICHARD GAYWOOD: Is that
really you up there, Justin?

00:17:12.770 --> 00:17:15.359
JUSTIN BROUGHTON: Well, it
appears that my ears are not

00:17:15.359 --> 00:17:16.140
my worst flaw.

00:17:16.140 --> 00:17:18.630
Vanity is.

00:17:18.630 --> 00:17:23.250
Then, I get to guide my
excessively buffed avatar

00:17:23.250 --> 00:17:25.260
around the various
gym activities,

00:17:25.260 --> 00:17:29.670
with all my equally
unrealistic fitness buddies.

00:17:29.670 --> 00:17:35.310
Now, all this avatar
stuff is written in OpenGL

00:17:35.310 --> 00:17:40.210
for a more immersive and
fun experience for the user.

00:17:40.210 --> 00:17:44.610
And previously, it's been hard
to test apps and games which

00:17:44.610 --> 00:17:46.410
use OpenGL.

00:17:46.410 --> 00:17:48.930
But over the last
year, we at Google

00:17:48.930 --> 00:17:52.080
have introduced a couple of
ways in which you can now

00:17:52.080 --> 00:17:53.320
do this more easily.

00:17:56.067 --> 00:17:58.150
RICHARD GAYWOOD: So we
introduced at I/O last year

00:17:58.150 --> 00:18:01.360
the concept of Demo Loops that
Justin and I discussed earlier.

00:18:01.360 --> 00:18:03.400
And Pre-Launch Report
now runs Demo Loops

00:18:03.400 --> 00:18:05.884
in your apps and games if
you choose to include them.

00:18:05.884 --> 00:18:07.300
JUSTIN BROUGHTON:
Now, Fitness Bud

00:18:07.300 --> 00:18:10.870
can construct Demo Loops
for all this avatar stuff

00:18:10.870 --> 00:18:13.840
by simply recording
and replaying

00:18:13.840 --> 00:18:15.580
their OpenGL commands.

00:18:15.580 --> 00:18:19.540
And then during
testing, they can

00:18:19.540 --> 00:18:25.390
verify that they don't see
crashes or performance issues.

00:18:25.390 --> 00:18:30.550
Now, Fitness Bud can run
these Demo Loops locally

00:18:30.550 --> 00:18:33.010
on their devices, using
an app that we created

00:18:33.010 --> 00:18:35.080
that's freely available.

00:18:35.080 --> 00:18:38.680
But more importantly, they
can run those Demo Loops

00:18:38.680 --> 00:18:41.575
in Firebase Test Lab across
a wide array of devices.

00:18:44.880 --> 00:18:49.280
Secondly, we announced at the
Games Developer Conference

00:18:49.280 --> 00:18:54.170
earlier on this year a
collaboration with NetEase

00:18:54.170 --> 00:19:01.820
to create tests for games
that run in Firebase Test Lab.

00:19:01.820 --> 00:19:04.910
NetEase is one of the
largest games development

00:19:04.910 --> 00:19:07.520
companies in China.

00:19:07.520 --> 00:19:11.120
And as part of
this collaboration,

00:19:11.120 --> 00:19:15.680
they open-sourced their
test environment, AirTest,

00:19:15.680 --> 00:19:18.020
along with a couple
of frameworks

00:19:18.020 --> 00:19:20.870
that they use internally
for developing

00:19:20.870 --> 00:19:24.200
tests for their own games.

00:19:24.200 --> 00:19:27.800
Now, you can download
this testing framework.

00:19:27.800 --> 00:19:30.060
There is a link at the end.

00:19:30.060 --> 00:19:33.440
And with it, you
can create tests

00:19:33.440 --> 00:19:39.900
that add actions and assertions
that refer to game elements.

00:19:39.900 --> 00:19:42.420
So let's see how that works.

00:19:42.420 --> 00:19:44.810
So here's AirTest.

00:19:44.810 --> 00:19:48.530
And I'm just going to
select Game Elements

00:19:48.530 --> 00:19:52.580
and add an action to
touch a game element.

00:19:52.580 --> 00:19:56.000
I can wait for a game
element to exist,

00:19:56.000 --> 00:19:59.270
or I can assert that the
game element is visible.

00:19:59.270 --> 00:20:01.850
It's that simple.

00:20:01.850 --> 00:20:07.280
Like Demo Loops, these
tests can be run locally.

00:20:07.280 --> 00:20:10.490
But they can also be
run in Firebase Test Lab

00:20:10.490 --> 00:20:12.840
across a wide array of devices.

00:20:16.970 --> 00:20:22.250
Now, here's the goal creation
screen for Fitness Bud.

00:20:22.250 --> 00:20:25.490
Now, my fitness goals are pretty
modest, as you saw earlier.

00:20:25.490 --> 00:20:28.790
It's a good day if I don't
fall off a treadmill.

00:20:28.790 --> 00:20:36.170
With this screen, users
get to create fitness goals

00:20:36.170 --> 00:20:40.810
and share them with all
their fitness buddies.

00:20:40.810 --> 00:20:45.490
Now, obviously,
Fitness Bud wants

00:20:45.490 --> 00:20:51.920
to create tests that cover
this part of the app, as well.

00:20:51.920 --> 00:20:57.850
Now, typically, this involves
laboriously writing tests

00:20:57.850 --> 00:21:00.340
in one of the many
testing frameworks,

00:21:00.340 --> 00:21:03.820
such as Espresso
or UI Automator,

00:21:03.820 --> 00:21:09.439
and then keeping those tests
updated as the UI evolves.

00:21:09.439 --> 00:21:11.980
RICHARD GAYWOOD: So I want to
know, actually-- let me quickly

00:21:11.980 --> 00:21:15.040
ask, how many of you have had
to rewrite dozens, or even

00:21:15.040 --> 00:21:17.140
hundreds, of UI tests
because you made

00:21:17.140 --> 00:21:19.830
some small change in your app?

00:21:19.830 --> 00:21:20.580
Right?

00:21:20.580 --> 00:21:21.900
And it's really painful, right?

00:21:21.900 --> 00:21:23.108
This has happened to me, too.

00:21:23.108 --> 00:21:26.950
I know exactly that this is
a really painful situation.

00:21:26.950 --> 00:21:29.170
JUSTIN BROUGHTON: So this
is the exact reason why we

00:21:29.170 --> 00:21:32.270
built Espresso Test Recorder.

00:21:32.270 --> 00:21:36.310
Espresso Test Recorder is
part of Android Studio.

00:21:36.310 --> 00:21:42.490
And with it, you can quickly
record Espresso tests

00:21:42.490 --> 00:21:46.060
by simply interacting
with your device running

00:21:46.060 --> 00:21:48.430
your app locally.

00:21:48.430 --> 00:21:51.490
With it, we can
create lots of tests

00:21:51.490 --> 00:21:55.570
that cover the non-OpenGL
parts Fitness Bud.

00:21:55.570 --> 00:21:59.830
Now, you can create these
tests in either Java or Kotlin.

00:21:59.830 --> 00:22:04.900
But the best thing is that
if your UI does change,

00:22:04.900 --> 00:22:08.660
you can go back in and
easily rerecord those tests.

00:22:08.660 --> 00:22:10.990
Let's see how this works.

00:22:10.990 --> 00:22:13.540
All right, this is
Android Studio here.

00:22:13.540 --> 00:22:17.530
I'm going to choose to
record an Espresso test.

00:22:17.530 --> 00:22:22.640
I'm going to pick my local
Pixel 2, which is running.

00:22:22.640 --> 00:22:24.310
Then it compiles
and installs my app

00:22:24.310 --> 00:22:26.920
and brings up this event window.

00:22:26.920 --> 00:22:30.310
And at this point, I
get to enter my name,

00:22:30.310 --> 00:22:35.040
click on an avatar, and
it records the events,

00:22:35.040 --> 00:22:36.340
all there in that window.

00:22:38.900 --> 00:22:42.440
Next, I want to
add an assertion.

00:22:42.440 --> 00:22:49.250
So adding an assertion
involves pulling a screenshot

00:22:49.250 --> 00:22:55.670
from the device so that
I can select elements

00:22:55.670 --> 00:22:59.060
in that screenshot on
which I want to assert.

00:22:59.060 --> 00:23:02.260
I will do that,
click on an element.

00:23:02.260 --> 00:23:04.400
And then I'm going to click OK.

00:23:04.400 --> 00:23:07.520
I get to choose Java or Kotlin.

00:23:07.520 --> 00:23:08.660
I'm going to choose Kotlin.

00:23:08.660 --> 00:23:10.670
I'm going to click OK.

00:23:10.670 --> 00:23:12.960
And there is my
Kotlin test class.

00:23:12.960 --> 00:23:13.710
It's that simple.

00:23:16.380 --> 00:23:19.020
With the Espresso
Test Recorder, you

00:23:19.020 --> 00:23:21.060
can modularize your testing.

00:23:21.060 --> 00:23:26.100
You can create test snippets
for the commonly used functions

00:23:26.100 --> 00:23:30.090
in all your tests, such as
logging in or filling out

00:23:30.090 --> 00:23:31.890
a search form.

00:23:31.890 --> 00:23:35.670
And so with all that free
time, all those excuses

00:23:35.670 --> 00:23:40.790
for not going to the
gym simply evaporate.

00:23:40.790 --> 00:23:44.770
So now, Fitness Bud
has a battery of tests.

00:23:44.770 --> 00:23:47.230
And all they have
to do is add them

00:23:47.230 --> 00:23:49.510
to their continuous
integration system.

00:23:49.510 --> 00:23:53.360
And now, every time
they make a change,

00:23:53.360 --> 00:23:56.050
they can be much more confident.

00:23:56.050 --> 00:23:56.890
This is the beauty--

00:23:56.890 --> 00:23:59.470
much more confident
that it did not break

00:23:59.470 --> 00:24:01.784
the app in some obscure way.

00:24:01.784 --> 00:24:03.950
RICHARD GAYWOOD: And speaking
as a developer myself,

00:24:03.950 --> 00:24:06.807
peace of mind like that
is honestly priceless.

00:24:09.776 --> 00:24:11.150
JUSTIN BROUGHTON:
But Fitness Bud

00:24:11.150 --> 00:24:15.040
is going to have to run
on the myriad of devices

00:24:15.040 --> 00:24:18.130
that people drag to the gym.

00:24:18.130 --> 00:24:20.620
How do they make sure
that the app runs well

00:24:20.620 --> 00:24:24.130
on all those devices?

00:24:24.130 --> 00:24:27.580
Well, they could buy a
whole bunch of devices,

00:24:27.580 --> 00:24:30.010
hook them up to a
workstation, and stick them

00:24:30.010 --> 00:24:33.010
in a closet somewhere.

00:24:33.010 --> 00:24:35.560
But Fitness Bud's closets
are full of gym bags,

00:24:35.560 --> 00:24:38.020
because they practice
what they preach.

00:24:38.020 --> 00:24:41.050
Plus, maintaining
a device closet

00:24:41.050 --> 00:24:45.610
is a really hard and
soul-destroying activity.

00:24:45.610 --> 00:24:47.650
Trust me on this.

00:24:47.650 --> 00:24:53.560
Not only do you have to keep
the devices online and updated,

00:24:53.560 --> 00:24:57.640
but you also have to procure
new ones as the old ones die,

00:24:57.640 --> 00:25:04.600
or explode, and fresh ones
come out onto the market.

00:25:04.600 --> 00:25:09.640
Fitness Bud would much rather
be cutting code or pumping iron.

00:25:09.640 --> 00:25:11.947
So what's the alternative?

00:25:11.947 --> 00:25:14.530
RICHARD GAYWOOD: So Justin and
I have already described to you

00:25:14.530 --> 00:25:17.830
how Pre-Launch Report offers
free crawler testing on about

00:25:17.830 --> 00:25:19.160
10 devices--

00:25:19.160 --> 00:25:22.000
so every APK that
Fitness Bud upload.

00:25:22.000 --> 00:25:24.790
But you can go much further
with the Firebase Test Lab,

00:25:24.790 --> 00:25:26.770
using a broader
range of devices,

00:25:26.770 --> 00:25:30.740
covering an even wider gamma
of screen sizes, Android API

00:25:30.740 --> 00:25:34.567
versions, different OEMs,
and different chipsets.

00:25:34.567 --> 00:25:36.400
JUSTIN BROUGHTON: And
so to illustrate this,

00:25:36.400 --> 00:25:39.580
we recently added
prerelease P devices

00:25:39.580 --> 00:25:42.560
that you can now all test on.

00:25:42.560 --> 00:25:46.510
But what I'm most excited today
to announce-- wait for it--

00:25:46.510 --> 00:25:48.650
is our new support for iOS.

00:25:48.650 --> 00:25:50.410
Oops, it was already up there.

00:25:50.410 --> 00:25:51.412
All right.

00:25:51.412 --> 00:25:52.120
You already knew.

00:25:55.130 --> 00:25:59.830
So you can sign up for a beta
through the Firebase Console.

00:25:59.830 --> 00:26:01.210
It has a link at the end.

00:26:04.540 --> 00:26:07.630
Fitness Bud is a
global application.

00:26:07.630 --> 00:26:12.420
And as such, it needs to
be tested on a whole bunch

00:26:12.420 --> 00:26:13.430
of different languages.

00:26:16.510 --> 00:26:19.320
Both Firebase Test Lab
and the Play Console

00:26:19.320 --> 00:26:22.380
allow you to do just that.

00:26:22.380 --> 00:26:27.330
With Firebase Test Lab,
you can run your tests

00:26:27.330 --> 00:26:30.570
on any locale you wish.

00:26:30.570 --> 00:26:36.030
And Pre-Launch Report recommends
the most popular languages

00:26:36.030 --> 00:26:39.270
amongst your users.

00:26:39.270 --> 00:26:44.360
So now, there should be
no reason for Fitness Bud

00:26:44.360 --> 00:26:49.100
to waste all that time and
energy maintaining a device

00:26:49.100 --> 00:26:53.630
closet, which gives them even
more time to spend at the gym.

00:26:53.630 --> 00:26:57.530
It's kind of a wonder they
get any coding done, actually.

00:26:57.530 --> 00:27:01.760
Like in the Pre-Launch
Report, Firebase Test Lab

00:27:01.760 --> 00:27:06.800
also gives you comprehensive
test results, like crashes

00:27:06.800 --> 00:27:13.810
and ANRs, video and screenshots,
logs, performance metrics,

00:27:13.810 --> 00:27:16.310
a map of the activities
the crawler found.

00:27:18.850 --> 00:27:21.520
The video and screenshots
are especially

00:27:21.520 --> 00:27:27.430
important to help Fitness Bud
verify that their app looks

00:27:27.430 --> 00:27:33.430
good and runs well across
all those screen sizes,

00:27:33.430 --> 00:27:35.635
and orientations, and locales.

00:27:38.270 --> 00:27:42.110
Let's look at how easy
it is to quickly run

00:27:42.110 --> 00:27:47.330
a test in the Firebase console.

00:27:47.330 --> 00:27:50.650
Firstly, I want to quickly
point out our new iOS support.

00:27:50.650 --> 00:27:51.189
There it is.

00:27:51.189 --> 00:27:52.730
I'm going to dismiss
that coach mark.

00:27:52.730 --> 00:27:55.220
But it's there.

00:27:55.220 --> 00:27:57.992
We're going to run a Robo Test.

00:27:57.992 --> 00:27:59.450
Robo Test is the
simplest of tests.

00:27:59.450 --> 00:28:02.490
All it requires is that
you give us your app.

00:28:02.490 --> 00:28:04.610
Now, I'm going to quickly
choose an app at random

00:28:04.610 --> 00:28:09.744
from my hard disk
there and upload it.

00:28:09.744 --> 00:28:11.160
While it's uploading,
you'll note,

00:28:11.160 --> 00:28:12.980
we can also upload
a Robo Script, which

00:28:12.980 --> 00:28:14.150
we're not going to do here.

00:28:14.150 --> 00:28:16.650
But now, I get to
choose my devices

00:28:16.650 --> 00:28:18.090
from amongst the many devices.

00:28:18.090 --> 00:28:19.920
Some of these devices
are deprecated,

00:28:19.920 --> 00:28:24.337
which means they exploded, and
we can no longer procure them.

00:28:24.337 --> 00:28:26.420
I'm going to just go with
the default two devices.

00:28:26.420 --> 00:28:29.719
But I do want to
add some locales.

00:28:29.719 --> 00:28:30.760
I'm going to add Chinese.

00:28:33.290 --> 00:28:35.840
I'm going to add Arabic
when I get there.

00:28:38.500 --> 00:28:41.730
And then lastly, I'm
going to add Spanish.

00:28:44.319 --> 00:28:46.610
And then I'm going to fix
the locales, because I really

00:28:46.610 --> 00:28:49.700
only care about portrait mode.

00:28:49.700 --> 00:28:52.350
And then-- fix the
locales, please.

00:28:52.350 --> 00:28:53.577
There we go.

00:28:53.577 --> 00:28:55.160
Then, I'm going to
start eight tests--

00:28:55.160 --> 00:29:00.680
eight tests, because it's two
devices times four locales.

00:29:00.680 --> 00:29:04.520
So now, what Test Lab is going
to do is, in the background,

00:29:04.520 --> 00:29:08.300
it will allocate eight devices.

00:29:08.300 --> 00:29:10.910
It will configure
those devices, setting

00:29:10.910 --> 00:29:14.150
the locale, the orientation.

00:29:14.150 --> 00:29:20.880
It will then install my
app on all those devices.

00:29:20.880 --> 00:29:25.070
And then it will run a
five-minute Robot Test,

00:29:25.070 --> 00:29:27.522
which will take five minutes.

00:29:27.522 --> 00:29:30.472
So-- oh, thank god, it's done.

00:29:30.472 --> 00:29:31.430
All right, there we go.

00:29:31.430 --> 00:29:34.120
I'm going to pick
the first of these.

00:29:34.120 --> 00:29:35.210
You see, we have logs.

00:29:35.210 --> 00:29:36.320
We have screenshots.

00:29:36.320 --> 00:29:38.270
We have an activity
map, which is a map

00:29:38.270 --> 00:29:40.160
of the activities we visited.

00:29:40.160 --> 00:29:42.290
You have performance
information,

00:29:42.290 --> 00:29:44.210
which is tied to
the video, so you

00:29:44.210 --> 00:29:45.860
can see what's
happening in your app

00:29:45.860 --> 00:29:49.280
at the time of the CPU
spikes, or the eight

00:29:49.280 --> 00:29:50.420
frames per second drops.

00:29:56.480 --> 00:29:59.510
You can find
instructions on the web,

00:29:59.510 --> 00:30:01.490
on the Firebase
documentation site,

00:30:01.490 --> 00:30:07.100
for how to hook Test Lab up
to many common continuous

00:30:07.100 --> 00:30:10.250
integration systems,
like Jenkins,

00:30:10.250 --> 00:30:14.360
or CircleCI, or TeamCity.

00:30:14.360 --> 00:30:18.800
We have a number of customers
who are doing exactly this--

00:30:18.800 --> 00:30:23.350
testing their app
multiple times a day.

00:30:23.350 --> 00:30:29.570
Test Lab is helping them find
problems way before they end up

00:30:29.570 --> 00:30:32.750
affecting their users.

00:30:32.750 --> 00:30:38.630
And best of all, you
can get started for free

00:30:38.630 --> 00:30:42.920
with our Spark billing tier.

00:30:42.920 --> 00:30:46.210
So it's really that simple.

00:30:46.210 --> 00:30:48.790
RICHARD GAYWOOD: Justin and I
hope that our talk here today

00:30:48.790 --> 00:30:50.950
can give you a renewed
inspiration for your testing

00:30:50.950 --> 00:30:52.340
strategy.

00:30:52.340 --> 00:30:56.080
It doesn't have to be difficult
to test comprehensively.

00:30:56.080 --> 00:30:59.410
Let the Pre-Launch Report
and the Google Play Console

00:30:59.410 --> 00:31:03.190
help you discover crashes,
performance issues, security

00:31:03.190 --> 00:31:06.400
vulnerabilities, and soon,
accessibility warnings

00:31:06.400 --> 00:31:09.040
with zero configuration
required from you.

00:31:09.040 --> 00:31:12.820
Just publish an APK to the
open or closed testing tracks,

00:31:12.820 --> 00:31:15.970
and a report will be
generated for you.

00:31:15.970 --> 00:31:18.610
You can go further than
the auto-generated report

00:31:18.610 --> 00:31:22.300
by giving us custom login
credentials, Robo Scripts, Deep

00:31:22.300 --> 00:31:27.136
Links, and Demo Loops to
help us test your app better.

00:31:27.136 --> 00:31:28.510
JUSTIN BROUGHTON:
And if you want

00:31:28.510 --> 00:31:31.630
to test maybe more often,
maybe more comprehensively,

00:31:31.630 --> 00:31:34.300
take a look at Firebase
Test Lab, which, in addition

00:31:34.300 --> 00:31:37.120
to the features
Richard just mentioned,

00:31:37.120 --> 00:31:42.500
also allows you to create
and run your own tests.

00:31:42.500 --> 00:31:44.680
So take a picture
of this if you wish.

00:31:44.680 --> 00:31:46.430
I'll give you a couple
of seconds do that.

00:31:46.430 --> 00:31:48.827
I think most people
have already done that.

00:31:48.827 --> 00:31:51.160
RICHARD GAYWOOD: We'd really
love to hear more from you.

00:31:51.160 --> 00:31:53.420
So if you have any
comments or suggestions,

00:31:53.420 --> 00:31:55.270
please use the link
in the I/O app or come

00:31:55.270 --> 00:31:57.680
find us in person
after the talk.

00:31:57.680 --> 00:31:58.600
Thank you very much.

00:31:58.600 --> 00:31:58.870
JUSTIN BROUGHTON: Thank you.

00:31:58.870 --> 00:31:59.870
RICHARD GAYWOOD: Thanks.

00:31:59.870 --> 00:32:01.002
[APPLAUSE]

00:32:01.002 --> 00:32:05.060
[MUSIC PLAYING]

