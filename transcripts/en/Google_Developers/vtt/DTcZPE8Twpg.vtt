WEBVTT
Kind: captions
Language: en

00:00:03.000 --> 00:00:04.667
Mui: Good afternoon, everybody.

00:00:04.667 --> 00:00:06.667
I know it's really tough
after lunch,

00:00:06.667 --> 00:00:08.667
particularly for those
who haven't got lunch yet.

00:00:08.667 --> 00:00:10.934
Uh, but we're going to spend
the next hour or so

00:00:10.934 --> 00:00:13.000
talking about how to optimize
your Android app

00:00:13.000 --> 00:00:14.801
with Google Analytics.

00:00:14.801 --> 00:00:16.434
So here, uh, we--we--

00:00:16.434 --> 00:00:18.501
the three of us are from
the Google Analytics team.

00:00:18.501 --> 00:00:21.734
I'm Phil, this is Nick,
and that is Jim.

00:00:21.734 --> 00:00:24.734
But really, Jim and Nick
are the experts in the group.

00:00:24.734 --> 00:00:27.634
So as a show of hand,
how many of you

00:00:27.634 --> 00:00:30.968
are not Google Analytics
users?

00:00:30.968 --> 00:00:33.834
Oh, great. See why
I ask the opposite way--

00:00:33.834 --> 00:00:36.033
it would be a very
different story.

00:00:36.033 --> 00:00:38.167
So for those of you who
don't know Google Analytics,

00:00:38.167 --> 00:00:40.567
that's a screen shot
from the current version

00:00:40.567 --> 00:00:42.100
of Google Analytics.

00:00:42.100 --> 00:00:44.467
It is essentially a tool
that helps you as a marketer,

00:00:44.467 --> 00:00:46.267
developer, Web site owner,

00:00:46.267 --> 00:00:48.467
to understand who are coming
to your Web site,

00:00:48.467 --> 00:00:50.067
what they are doing,

00:00:50.067 --> 00:00:52.968
and how you can optimize your
various marketing activities.

00:00:52.968 --> 00:00:55.200
So in the last month or so,

00:00:55.200 --> 00:00:57.968
we have released a slightly
new version of it.

00:00:57.968 --> 00:01:00.133
So it looks something like that.

00:01:00.133 --> 00:01:03.200
Who has seen
the new version already?

00:01:03.200 --> 00:01:05.200
Raise your hand.

00:01:05.200 --> 00:01:06.701
Great.

00:01:06.701 --> 00:01:09.367
In this new version,
is a, uh, number internally,

00:01:09.367 --> 00:01:11.601
that we, uh, called version 5.

00:01:11.601 --> 00:01:14.634
So this is probably the most
significant version upgrade

00:01:14.634 --> 00:01:18.000
that we have in the product
in the past five years,

00:01:18.000 --> 00:01:21.400
since the beginning
of Google Analytics.

00:01:21.400 --> 00:01:24.834
So many of you think of
Google Analytics

00:01:24.834 --> 00:01:26.801
primarily in the vertical

00:01:26.801 --> 00:01:30.000
of Web site analytics,

00:01:30.000 --> 00:01:34.000
so let me reemphasize
and reestablish

00:01:34.000 --> 00:01:36.200
your trust in Google Analytics
by showing you

00:01:36.200 --> 00:01:40.067
a few of the customers
that use G.A. on a daily basis.

00:01:40.067 --> 00:01:42.067
Who recognizes
the first icon?

00:01:42.067 --> 00:01:44.067
[laughter]

00:01:44.067 --> 00:01:46.968
Mui: Remember,
it is whitehouse.gov.

00:01:46.968 --> 00:01:49.367
It is not whitehouse.com.

00:01:49.367 --> 00:01:52.701
Uh, what about the second one?

00:01:52.701 --> 00:01:54.701
What is that?
man: [speaking indistinctly]

00:01:54.701 --> 00:01:57.734
Mui: Wow, my goodness.
This is a government employee

00:01:57.734 --> 00:02:00.501
or somebody who is interested
to do spy work.

00:02:00.501 --> 00:02:03.033
That is indeed the FBI,

00:02:03.033 --> 00:02:05.834
along with a list
of Fortune 500 companies

00:02:05.834 --> 00:02:08.400
and large companies
that you may recognize.

00:02:08.400 --> 00:02:11.968
These are companies that use
Google Analytics exclusively.

00:02:11.968 --> 00:02:14.734
Now the point I want
to make here with this slide

00:02:14.734 --> 00:02:18.400
is many of you have heard about
various tracking issues

00:02:18.400 --> 00:02:21.234
on the Web,
but if the U.S. government,

00:02:21.234 --> 00:02:23.234
or if you prefer,

00:02:23.234 --> 00:02:25.234
if Mr. Obama trusts
Google Analytics,

00:02:25.234 --> 00:02:28.234
shouldn't you trust
Google Analytics also?

00:02:28.234 --> 00:02:31.267
On the rich media side, this
is probably less well-know.

00:02:31.267 --> 00:02:33.934
So here's a series of platforms

00:02:33.934 --> 00:02:36.801
that have native
Google Analytics tracking

00:02:36.801 --> 00:02:38.534
built into it.

00:02:38.534 --> 00:02:41.567
Many of you develop
in AS3, ActionScript 3,

00:02:41.567 --> 00:02:43.400
uh, or Adobe AIR,

00:02:43.400 --> 00:02:45.834
or Microsoft Silverlight,

00:02:45.834 --> 00:02:48.133
for the few of you
who still do that,

00:02:48.133 --> 00:02:51.000
uh, AJAX applications
and so on.

00:02:51.000 --> 00:02:53.067
If you would like to try
natively

00:02:53.067 --> 00:02:55.067
your applications
in this platform,

00:02:55.067 --> 00:02:57.734
there are various SDKs
you can download,

00:02:57.734 --> 00:03:01.000
and do tracking
with your development.

00:03:01.000 --> 00:03:04.167
On the mobile side--

00:03:04.167 --> 00:03:07.901
so the reason that we are all
here is because of Android,

00:03:07.901 --> 00:03:12.467
but it's also true
that we have a native SDK

00:03:12.467 --> 00:03:15.834
with the iOS platform, for those
of you who develop in that area.

00:03:15.834 --> 00:03:18.968
Perhaps these days,

00:03:18.968 --> 00:03:20.968
in order for anyone to be hip,

00:03:20.968 --> 00:03:24.067
you really have
to talk about Social.

00:03:24.067 --> 00:03:26.100
And so here is a few

00:03:26.100 --> 00:03:29.167
of the social measurement
companies,

00:03:29.167 --> 00:03:32.367
plus tools that
will be useful to you

00:03:32.367 --> 00:03:34.601
if you are interested
in this area.

00:03:34.601 --> 00:03:37.701
So twitter.com, who is right
here in San Francisco,

00:03:37.701 --> 00:03:40.100
is one of the largest
Google Analytics users.

00:03:40.100 --> 00:03:43.834
Um, how many of you develop
Facebook apps?

00:03:43.834 --> 00:03:46.133
Oh, really?

00:03:46.133 --> 00:03:49.334
Okay, this must be
a Google conference.

00:03:49.334 --> 00:03:52.467
So for those of you who would
like to develop Facebook apps,

00:03:52.467 --> 00:03:55.434
it turns out that
there is an FBML tag

00:03:55.434 --> 00:03:58.434
natively built into the, uh,
Facebook platform,

00:03:58.434 --> 00:04:01.501
called Google Analytics.

00:04:01.501 --> 00:04:04.501
And let me also,
as a show of hands,

00:04:04.501 --> 00:04:07.501
anyone here play "FarmVille"?

00:04:07.501 --> 00:04:09.501
Or anyone here who dare

00:04:09.501 --> 00:04:11.534
to raise their hand

00:04:11.534 --> 00:04:14.000
that they play "FarmVille"?

00:04:14.000 --> 00:04:16.701
So it turns out that, you know,
that's one of the most popular

00:04:16.701 --> 00:04:18.834
social casual games
on the Web.

00:04:18.834 --> 00:04:21.834
Uh, FarmVille has been, uh,

00:04:21.834 --> 00:04:25.400
optimizing it's, uh, experience,

00:04:25.400 --> 00:04:27.400
with the help
of Google Analytics.

00:04:27.400 --> 00:04:29.400
So that's--
that's pretty cool.

00:04:29.400 --> 00:04:32.067
Now if you, uh, of course,
use any of the, like,

00:04:32.067 --> 00:04:35.067
WordPress or iGoogle,
et cetera,

00:04:35.067 --> 00:04:38.067
you would also realize that
for many of these platforms,

00:04:38.067 --> 00:04:40.767
there are plug-ins, particularly
for Google Analytics.

00:04:40.767 --> 00:04:43.767
So the point of this slide
is that many people associate

00:04:43.767 --> 00:04:46.801
Google Analytics with
Web analytics tracking,

00:04:46.801 --> 00:04:49.868
and this slide now, if you
have never seen this before,

00:04:49.868 --> 00:04:51.801
can really tell
a different story.

00:04:51.801 --> 00:04:53.901
What we are trying to do here
on the team

00:04:53.901 --> 00:04:57.000
is try to build
a 360-degree tool

00:04:57.000 --> 00:04:59.701
for you as a developer,
as a marketer,

00:04:59.701 --> 00:05:02.200
to have that complete view
of your visitors

00:05:02.200 --> 00:05:05.033
as they go through your
digital online experience.

00:05:05.033 --> 00:05:07.567
So Google Analytics has evolved.

00:05:07.567 --> 00:05:11.300
It has evolved
into an analytics platform--

00:05:11.300 --> 00:05:13.467
or, we're still not there yet,

00:05:13.467 --> 00:05:15.667
but we are definitely
working hard on it.

00:05:15.667 --> 00:05:20.634
So focusing
on this presentation,

00:05:20.634 --> 00:05:22.767
we are going to talk
about Android,

00:05:22.767 --> 00:05:26.767
and we recently released
an update to Android,

00:05:26.767 --> 00:05:29.634
and these are the two experts
who will tell you more about it,

00:05:29.634 --> 00:05:31.434
but for those who--who care,

00:05:31.434 --> 00:05:34.167
there are a few core
tracking capabilities

00:05:34.167 --> 00:05:37.167
that you will be able
to get out of this native SDK.

00:05:37.167 --> 00:05:39.167
Of course you can track
unique users

00:05:39.167 --> 00:05:41.167
or page views and events,
and more recently,

00:05:41.167 --> 00:05:43.934
you can also track
your e-commerce transactions,

00:05:43.934 --> 00:05:45.868
if you do that
on your mobile phone,

00:05:45.868 --> 00:05:49.367
um, or if you want to set
custom variables

00:05:49.367 --> 00:05:52.267
or if you would like
to track market referrals

00:05:52.267 --> 00:05:54.267
for the Android Marketplace.

00:05:54.267 --> 00:05:58.067
So without exposing my, uh,
my ignorance of some of these,

00:05:58.067 --> 00:06:00.200
I'm gonna pass to the experts,

00:06:00.200 --> 00:06:02.868
who will tell you how
these things work. Nick.

00:06:02.868 --> 00:06:04.868
Mihailovski: Thanks, Phil.

00:06:04.868 --> 00:06:08.501
All right, guys, so today
we have a bunch of demos

00:06:08.501 --> 00:06:10.501
that we're gonna present to you

00:06:10.501 --> 00:06:12.501
on how you can leverage

00:06:12.501 --> 00:06:14.501
our Google Analytics SDK
for Android.

00:06:14.501 --> 00:06:16.501
Um, how--how many people here

00:06:16.501 --> 00:06:18.501
have used Google Analytics
for Android?

00:06:18.501 --> 00:06:20.501
A couple people.
Some people. Okay.

00:06:20.501 --> 00:06:22.501
So for some of you,
this might be introductory,

00:06:22.501 --> 00:06:24.534
but we're gonna take you through
the whole process

00:06:24.534 --> 00:06:26.501
of best practices,
how to set it up,

00:06:26.501 --> 00:06:28.501
as well as how to interpret
some of the reports

00:06:28.501 --> 00:06:30.501
that you might not have used
in there previously.

00:06:30.501 --> 00:06:33.501
So before we get into the demos,
I want to set a little stage

00:06:33.501 --> 00:06:35.501
for people who are new
to the product, uh,

00:06:35.501 --> 00:06:37.501
and talk about
how you get started.

00:06:37.501 --> 00:06:39.501
Uh, it's really simple.
The first step is

00:06:39.501 --> 00:06:41.501
we offer an SDK you can
download from our site.

00:06:41.501 --> 00:06:43.501
It's a zip file which has a jar.

00:06:43.501 --> 00:06:45.501
You link the jar
to your library,

00:06:45.501 --> 00:06:47.501
and then you need to set
two permissions--

00:06:47.501 --> 00:06:49.167
you set the internet

00:06:49.167 --> 00:06:51.167
and the access network state
permissions,

00:06:51.167 --> 00:06:53.167
and once you have that--boom,

00:06:53.167 --> 00:06:55.167
you've done
all the configuration,

00:06:55.167 --> 00:06:57.167
and you're ready
to start coding.

00:06:57.167 --> 00:06:59.200
Now on the code side,
we also made it really easy.

00:06:59.200 --> 00:07:01.968
The library provides a Google
Analytics tracker class,

00:07:01.968 --> 00:07:04.434
and on the onCreate method
within your activity,

00:07:04.434 --> 00:07:06.601
you grab an instance
of that class, uh,

00:07:06.601 --> 00:07:08.734
which is returned
as a singleton,

00:07:08.734 --> 00:07:10.734
and you call start,
and you pass it

00:07:10.734 --> 00:07:13.300
your account ID
and the context.

00:07:13.300 --> 00:07:16.300
An account ID is common
to what Google Analytics--

00:07:16.300 --> 00:07:19.167
what you'd normally see
in a JavaScript interface.

00:07:19.167 --> 00:07:22.100
man: [speaking indistinctly]

00:07:31.434 --> 00:07:32.901
Mihailovski: All right.

00:07:32.901 --> 00:07:35.501
Come talk to us afterwards,
and--it's fine.

00:07:35.501 --> 00:07:38.501
Um, what I really want
to illustrate with this is

00:07:38.501 --> 00:07:40.501
this is a very simple
snippet of code,

00:07:40.501 --> 00:07:42.501
but magically,
there's a lot of stuff

00:07:42.501 --> 00:07:44.167
that happens under the hood.

00:07:44.167 --> 00:07:46.167
What we do is
if you're a first-time visitor

00:07:46.167 --> 00:07:48.167
to an application,
we create a random ID,

00:07:48.167 --> 00:07:50.734
and create a SQLite table
and store the ID in a table.

00:07:50.734 --> 00:07:52.734
Now if you return
to the application,

00:07:52.734 --> 00:07:55.434
we see if the table exists,
and we retrieve the ID,

00:07:55.434 --> 00:07:58.400
and we can associate that unique
ID with the user.

00:07:58.400 --> 00:08:00.434
Now this ID
is completely random.

00:08:00.434 --> 00:08:02.501
It's not the device ID.

00:08:02.501 --> 00:08:05.167
It does not tie to anything
personally identifiable.

00:08:05.167 --> 00:08:08.400
What it allows us to do, though,
is track unique users

00:08:08.400 --> 00:08:10.400
for the content
in your application.

00:08:10.400 --> 00:08:12.400
So how many 7-day active users
do you have

00:08:12.400 --> 00:08:14.400
using your app today
around the globe?

00:08:14.400 --> 00:08:17.400
These are the questions
Google Analytics can answer.

00:08:17.400 --> 00:08:21.033
So before we get into
the actual tracking, um,

00:08:21.033 --> 00:08:23.033
it's also important
to understand

00:08:23.033 --> 00:08:25.033
how data is sent
to Google Analytics.

00:08:25.033 --> 00:08:27.033
So instead of when--

00:08:27.033 --> 00:08:29.033
traditionally when you make
a tracking request,

00:08:29.033 --> 00:08:31.033
data is sent directly
to analytics.

00:08:31.033 --> 00:08:33.033
In RSDK, it's a little bit
different.

00:08:33.033 --> 00:08:35.033
We actually store all the data
in a queue,

00:08:35.033 --> 00:08:37.601
and then send all the data
as a batched request.

00:08:37.601 --> 00:08:39.601
And this helps us save
battery life,

00:08:39.601 --> 00:08:42.601
as well as allows us to track
users when they're offline.

00:08:42.601 --> 00:08:44.601
So if there's a spotty
connection,

00:08:44.601 --> 00:08:46.367
we can still track them,

00:08:46.367 --> 00:08:48.367
and then finally when they
resume their connection,

00:08:48.367 --> 00:08:50.367
we can send all the data
to analytics.

00:08:50.367 --> 00:08:52.367
And to do that,
we can manually do it,

00:08:52.367 --> 00:08:54.200
calling it a dispatch method,

00:08:54.200 --> 00:08:56.200
or overload the start method,
uh, with the interval,

00:08:56.200 --> 00:08:58.200
which is the number of seconds
to send all the data.

00:08:58.200 --> 00:09:00.033
So now what we just talked about

00:09:00.033 --> 00:09:02.100
was how to get the library
and get started,

00:09:02.100 --> 00:09:04.100
we talked about how to
instantiate a tracker method,

00:09:04.100 --> 00:09:06.567
and we just talked about
how to send data to analytics.

00:09:06.567 --> 00:09:09.200
So let's get to tracking.

00:09:09.200 --> 00:09:11.701
Now as application developers,

00:09:11.701 --> 00:09:13.667
it's important to understand

00:09:13.667 --> 00:09:15.667
how users interact with content.

00:09:15.667 --> 00:09:19.534
So in Android, this means
tracking activities or views.

00:09:19.534 --> 00:09:23.167
Now in the Web, we typically
measure viewing of content

00:09:23.167 --> 00:09:24.968
as Web page views,

00:09:24.968 --> 00:09:27.467
and this page view essentially
means that we're tracking

00:09:27.467 --> 00:09:29.133
the number of loads

00:09:29.133 --> 00:09:31.133
or the number of times
the screen has changed,

00:09:31.133 --> 00:09:34.334
so in an application,
we can use the same concept

00:09:34.334 --> 00:09:37.167
and track the number of times
the screen has changed as well

00:09:37.167 --> 00:09:39.067
with page view tracking.

00:09:39.067 --> 00:09:40.868
Now as a best practice,

00:09:40.868 --> 00:09:42.868
we usually recommend
you use page view tracking

00:09:42.868 --> 00:09:44.901
when there's a significant
amount of content

00:09:44.901 --> 00:09:47.367
that changes on your screen,
and using something differently,

00:09:47.367 --> 00:09:49.400
uh, when you track interactions
with the content.

00:09:49.400 --> 00:09:51.434
And we'll show you that
a little bit later.

00:09:51.434 --> 00:09:53.634
So with that,
let's get to the first demo

00:09:53.634 --> 00:09:55.801
and talk about how
to track activities.

00:09:55.801 --> 00:09:57.400
Cotugno: Thanks, Nick.

00:09:57.400 --> 00:10:00.934
Uh, before I show code,
I want to tell you

00:10:00.934 --> 00:10:03.501
that we're gonna use the notepad
sample application

00:10:03.501 --> 00:10:05.501
that you can find
in the Android SDK,

00:10:05.501 --> 00:10:08.667
and, uh, let me go through
that application

00:10:08.667 --> 00:10:11.634
for those of you
not familiar with it.

00:10:11.634 --> 00:10:15.667
Uh, here I have
the notepad application.

00:10:15.667 --> 00:10:18.601
You can simply
add notes here.

00:10:23.400 --> 00:10:26.334
See if I can type.

00:10:29.467 --> 00:10:33.801
Oh, I can't type.

00:10:33.801 --> 00:10:36.934
I don't know if many of you
have seen Nick at nite.

00:10:36.934 --> 00:10:40.934
He's pretty funny, I hear,
so...

00:10:40.934 --> 00:10:43.934
And then, uh,
you can edit notes.

00:10:43.934 --> 00:10:46.868
Let's see if we can--
let's click on this.

00:10:49.934 --> 00:10:52.467
And you can edit the title,

00:10:52.467 --> 00:10:56.834
so let's put an exclamation
point on the title.

00:10:56.834 --> 00:10:59.968
Oops. Well, that'll work.

00:10:59.968 --> 00:11:03.267
And then you can delete, uh,

00:11:03.267 --> 00:11:06.501
you can delete a note as well.

00:11:06.501 --> 00:11:09.701
And that's the notepad
application in a nutshell.

00:11:09.701 --> 00:11:11.701
So what I'm gonna do now

00:11:11.701 --> 00:11:14.701
is add some tracking code

00:11:14.701 --> 00:11:18.000
to the notepad application.

00:11:22.200 --> 00:11:25.234
And here, uh, is my project.

00:11:25.234 --> 00:11:28.200
Uh, and you can see, uh,

00:11:28.200 --> 00:11:31.634
that we have
several activities

00:11:31.634 --> 00:11:33.767
that make up
the notepad application.

00:11:33.767 --> 00:11:36.100
I'll start with
the notes list activity,

00:11:36.100 --> 00:11:38.968
which is the first one
that, uh, comes up

00:11:38.968 --> 00:11:42.267
when you launch
the application.

00:11:42.267 --> 00:11:45.267
And...

00:11:45.267 --> 00:11:48.200
Oops.
Let's try this way.

00:11:54.300 --> 00:11:57.300
And let's go to, uh,

00:11:57.300 --> 00:11:59.300
I guess we'll start here.

00:11:59.300 --> 00:12:01.367
I've declared an instance
of the tracker object

00:12:01.367 --> 00:12:04.300
that I want to use
to do my tracking.

00:12:06.901 --> 00:12:08.901
And then here,

00:12:08.901 --> 00:12:10.934
in my onCreate method,

00:12:10.934 --> 00:12:13.901
I've, uh, instantiated
instance of the tracker,

00:12:13.901 --> 00:12:16.968
and I've started it up,

00:12:16.968 --> 00:12:19.968
and then here on my onResume,

00:12:19.968 --> 00:12:21.968
I'm gonna go ahead

00:12:21.968 --> 00:12:25.601
and track the page view.

00:12:25.601 --> 00:12:27.801
Let's see if I can highlight
that for you.

00:12:27.801 --> 00:12:31.033
I'm using the application--
or the activity's class name

00:12:31.033 --> 00:12:33.467
for this, uh,

00:12:33.467 --> 00:12:35.968
so that's for my notes list.

00:12:35.968 --> 00:12:39.300
I've also, since there are
several other activities here,

00:12:39.300 --> 00:12:43.300
um, I've decided to create
a subclass

00:12:43.300 --> 00:12:46.133
that they can all extend
called "tracked activity,"

00:12:46.133 --> 00:12:49.200
and again, tracked activity
does, uh,

00:12:49.200 --> 00:12:51.300
exactly the same thing.

00:12:51.300 --> 00:12:53.534
onCreate, we start up a tracker,

00:12:53.534 --> 00:12:55.167
and then onResume, uh,

00:12:55.167 --> 00:12:57.200
we call track page view.

00:12:57.200 --> 00:13:00.033
Now, uh, I would run
this application,

00:13:00.033 --> 00:13:02.133
but you wouldn't
see a whole lot,

00:13:02.133 --> 00:13:05.167
'cause all the tracking
happens behind the scenes.

00:13:05.167 --> 00:13:07.701
Uh, fortunately for this latest
version of the SDK,

00:13:07.701 --> 00:13:09.701
which we put out last week,

00:13:09.701 --> 00:13:13.100
I added a little help
in terms of debug support.

00:13:13.100 --> 00:13:14.801
So what I'm gonna do--

00:13:14.801 --> 00:13:17.834
first off, I'm gonna shorten
my interval to one second,

00:13:17.834 --> 00:13:20.667
so we see things happen quickly.

00:13:20.667 --> 00:13:23.667
And then I'm gonna add,

00:13:23.667 --> 00:13:25.667
uh,

00:13:25.667 --> 00:13:28.000
a debug flag, turn that on.

00:13:28.000 --> 00:13:31.067
What this will do is this will,
um, put some debug messages

00:13:31.067 --> 00:13:33.968
in the log so that you can see
when the hits are generated

00:13:33.968 --> 00:13:35.634
and what they look like.

00:13:35.634 --> 00:13:38.467
And then there's another
feature we added, uh...

00:13:42.601 --> 00:13:45.000
Calling it Dry Run,

00:13:45.000 --> 00:13:47.033
and when you set that to true,

00:13:47.033 --> 00:13:49.868
we won't actually send the hits
all the way to Google Analytics.

00:13:49.868 --> 00:13:52.701
So you don't have to worry about
polluting your data space

00:13:52.701 --> 00:13:55.467
while you're doing testing
and debugging.

00:13:55.467 --> 00:13:58.467
So let me go ahead
and do the same thing

00:13:58.467 --> 00:14:01.534
to the other class.

00:14:01.534 --> 00:14:04.467
Add this code in there.

00:14:08.501 --> 00:14:10.501
Mihailovski: Make sure
you save 'em, too.

00:14:10.501 --> 00:14:13.000
Cotugno: You want me to save it?

00:14:13.000 --> 00:14:15.000
Did you say you want me
to save this?

00:14:15.000 --> 00:14:17.000
Okay, it's all saved.

00:14:17.000 --> 00:14:19.000
Let's run it
and see what happens.

00:14:19.000 --> 00:14:21.000
Well, actually,
before I run it,

00:14:21.000 --> 00:14:23.000
let me show you a log--

00:14:23.000 --> 00:14:26.000
you're probably all familiar
with logcat on the Android ADB.

00:14:26.000 --> 00:14:28.000
Uh, we've, uh,

00:14:28.000 --> 00:14:31.000
tagged all
our Google Analytics debugging

00:14:31.000 --> 00:14:34.000
with, uh, the tag
Google Analytics tracker,

00:14:34.000 --> 00:14:36.000
and you can see here,

00:14:36.000 --> 00:14:38.000
I'm gonna run the logcat,

00:14:38.000 --> 00:14:41.000
and I'm really only interested
in the tracking code,

00:14:41.000 --> 00:14:43.067
and I'm gonna suppress
all the other

00:14:43.067 --> 00:14:46.000
debug messages in the system,
so we're all set to go.

00:14:57.067 --> 00:14:59.167
And we've run.

00:14:59.167 --> 00:15:01.968
We go back,
and as you can see,

00:15:01.968 --> 00:15:03.801
we've already gotten our per--

00:15:03.801 --> 00:15:06.767
our first, uh, hit generated
as a page view,

00:15:06.767 --> 00:15:09.767
uh, and you can see
that the activity,

00:15:09.767 --> 00:15:13.467
uh, name--notes list is there.

00:15:13.467 --> 00:15:15.767
If you recall,
that's the first view.

00:15:15.767 --> 00:15:17.767
So I'm gonna go ahead--
I can't, uh,

00:15:17.767 --> 00:15:19.767
you can't see real well
what I'm gonna do,

00:15:19.767 --> 00:15:21.767
but I'm gonna go ahead
and add a note now.

00:15:21.767 --> 00:15:24.767
And you can see now, uh,

00:15:24.767 --> 00:15:27.767
we've got a page view track

00:15:27.767 --> 00:15:29.767
for the note editor,

00:15:29.767 --> 00:15:31.767
which is the activity class

00:15:31.767 --> 00:15:33.767
that you use to enter notes.

00:15:33.767 --> 00:15:36.767
And then I'm gonna go ahead

00:15:36.767 --> 00:15:38.767
and edit the title.

00:15:38.767 --> 00:15:40.767
I went back to the--
sorry, forgot about that.

00:15:40.767 --> 00:15:42.767
Uh, going back and forth,

00:15:42.767 --> 00:15:44.834
I'm gonna go ahead
and edit the title,

00:15:44.834 --> 00:15:46.701
and you'll see the title,

00:15:46.701 --> 00:15:48.801
um, come up here,

00:15:48.801 --> 00:15:51.734
the title editor.

00:15:54.701 --> 00:15:57.701
Oh. I must have pressed
a button there.

00:15:57.701 --> 00:16:00.701
So you can see the page views
tracking is happening,

00:16:00.701 --> 00:16:03.367
uh, pretty much as I navigate

00:16:03.367 --> 00:16:05.968
through the application.

00:16:05.968 --> 00:16:08.133
So at this point,
I want to turn it back to Nick,

00:16:08.133 --> 00:16:10.934
so he can show you
the reports.

00:16:10.934 --> 00:16:13.067
Mihailovski: Cool. Thanks, Jim.

00:16:22.100 --> 00:16:23.601
So, uh,

00:16:23.601 --> 00:16:26.601
so my slides aren't showing up
for some reason here,

00:16:26.601 --> 00:16:28.200
but they should be.

00:16:28.200 --> 00:16:30.868
So, um, when you log
back in to Google Analytics,

00:16:30.868 --> 00:16:32.534
uh, in version 5,

00:16:32.534 --> 00:16:34.534
you can go into
the content section,

00:16:34.534 --> 00:16:36.200
the pages report,

00:16:36.200 --> 00:16:38.200
and you can see the total
number of activities, uh,

00:16:38.200 --> 00:16:40.200
and the number of page views
that you're tracking

00:16:40.200 --> 00:16:41.868
for each of these activities.

00:16:41.868 --> 00:16:43.868
And so the key part,
what Jim demonstrated was,

00:16:43.868 --> 00:16:45.634
was that the class name, um,

00:16:45.634 --> 00:16:47.634
by passing that to the track
view--page view method,

00:16:47.634 --> 00:16:49.634
allows you to associate
the classes and activities

00:16:49.634 --> 00:16:51.634
with the actual content
in the reports.

00:16:51.634 --> 00:16:54.634
Now remember, um,
we talked a little bit

00:16:54.634 --> 00:16:56.634
about having a unique user ID,

00:16:56.634 --> 00:16:59.133
um, that's random,
associated with every time

00:16:59.133 --> 00:17:01.200
a user interacts
with your content,

00:17:01.200 --> 00:17:03.200
and what we can do
with the custom report

00:17:03.200 --> 00:17:05.200
in Google Analytics,
is get a breakdown

00:17:05.200 --> 00:17:07.200
of the total number
of unique users

00:17:07.200 --> 00:17:09.200
who have actually looked
at one of your activities.

00:17:09.200 --> 00:17:11.901
So to do that, we use what's
called a custom report,

00:17:11.901 --> 00:17:13.601
and in the version 5 interface,

00:17:13.601 --> 00:17:15.467
you see it in a new
custom reports tab.

00:17:15.467 --> 00:17:17.467
Here we click
a new custom report.

00:17:17.467 --> 00:17:19.601
We configure it
using the page dimensions

00:17:19.601 --> 00:17:22.868
and the total visitors
in page views metrics.

00:17:22.868 --> 00:17:25.367
Now what we do is,
once we click save,

00:17:25.367 --> 00:17:28.367
we see a new report here
that shows us total visitors

00:17:28.367 --> 00:17:30.868
as well as the total
number of page views.

00:17:30.868 --> 00:17:33.167
Now this means
during the date range

00:17:33.167 --> 00:17:36.501
of March 15th
all the way through April 14th,

00:17:36.501 --> 00:17:38.734
this is the total number
of unique users

00:17:38.734 --> 00:17:40.868
who have actually been
to these different activities,

00:17:40.868 --> 00:17:42.534
which is kind of unique.

00:17:42.534 --> 00:17:44.534
In this case, we see that
they're about the same,

00:17:44.534 --> 00:17:47.133
so between the notes list
and the notes editor activities,

00:17:47.133 --> 00:17:49.968
but significantly lower
in the title editor activity.

00:17:49.968 --> 00:17:52.033
Now this means
people have never used

00:17:52.033 --> 00:17:54.167
this part of the application
during this time,

00:17:54.167 --> 00:17:56.300
and as a developer
you might question,

00:17:56.300 --> 00:17:58.634
well, why aren't people--
why isn't this number similar

00:17:58.634 --> 00:18:00.334
to these other activities?

00:18:00.334 --> 00:18:03.601
Maybe they're not able to
explore and find this activity,

00:18:03.601 --> 00:18:05.968
uh, maybe there's some
usability issues.

00:18:05.968 --> 00:18:08.067
So what you're able to do here
is use the data

00:18:08.067 --> 00:18:10.400
to understand where
there might be an issue,

00:18:10.400 --> 00:18:12.501
and maybe a place where
you can start improving

00:18:12.501 --> 00:18:14.501
the performance
of your activity, um,

00:18:14.501 --> 00:18:16.501
and using the data
to help guide decisions

00:18:16.501 --> 00:18:19.501
on how to, uh,
improve your applications.

00:18:19.501 --> 00:18:22.501
So that's how we track
content interactions.

00:18:22.501 --> 00:18:25.501
The next thing
we want to show you

00:18:25.501 --> 00:18:28.000
is how you track, uh,
user interactions.

00:18:28.000 --> 00:18:30.767
In this case, we use what's
called event tracking

00:18:30.767 --> 00:18:32.567
in Google Analytics.

00:18:32.567 --> 00:18:35.567
Uh, what we're interested
in tracking in our application

00:18:35.567 --> 00:18:38.601
is the number of times people
delete and act--delete a note,

00:18:38.601 --> 00:18:40.567
and we're also interested
to understand

00:18:40.567 --> 00:18:42.567
from which activities
are notes deleted the most.

00:18:42.567 --> 00:18:44.567
So, Jim, let's take a look
at a demo,

00:18:44.567 --> 00:18:46.567
and see how to set that up.

00:18:46.567 --> 00:18:48.567
Cotugno: Thanks, Nick.

00:18:48.567 --> 00:18:51.567
Okay, so we're gonna take
our notepad application again,

00:18:51.567 --> 00:18:54.567
and I'm gonna add some events

00:18:54.567 --> 00:18:56.567
to track deleting the notes.

00:18:56.567 --> 00:18:58.567
Now there's two places
you can delete a note--

00:18:58.567 --> 00:19:00.567
you can delete a note
from the notes list--

00:19:00.567 --> 00:19:02.501
the very--the main view,

00:19:02.501 --> 00:19:05.601
and then you can delete
also from the note editor.

00:19:05.601 --> 00:19:07.601
So here, um,

00:19:07.601 --> 00:19:10.567
I have added code into, uh,

00:19:10.567 --> 00:19:13.367
the notes list.
I've highlighted that--

00:19:13.367 --> 00:19:15.501
whoops, wrong screen, sorry.

00:19:15.501 --> 00:19:18.234
Let's try that again.

00:19:18.234 --> 00:19:20.400
Okay, that's better.

00:19:20.400 --> 00:19:24.100
So now I've added a track event
into the notes list

00:19:24.100 --> 00:19:27.100
where, uh, where we process

00:19:27.100 --> 00:19:30.100
the delete, um, function,

00:19:30.100 --> 00:19:33.100
and we've added a category
of UI interaction,

00:19:33.100 --> 00:19:35.601
the action is delete,
and the label--

00:19:35.601 --> 00:19:37.601
we're using the activity

00:19:37.601 --> 00:19:39.601
class name for the label here.

00:19:39.601 --> 00:19:41.934
And, uh, value is not relevant,

00:19:41.934 --> 00:19:44.934
so I set that to 0.

00:19:44.934 --> 00:19:47.934
And here's
the note editor class,

00:19:47.934 --> 00:19:50.100
and we do exactly
the same thing,

00:19:50.100 --> 00:19:52.534
uh, UI interaction
is our category,

00:19:52.534 --> 00:19:54.534
delete is our action,

00:19:54.534 --> 00:19:57.534
and note editor, this time,
is the class.

00:19:57.534 --> 00:20:00.467
Let's go ahead and run this.

00:20:09.334 --> 00:20:12.334
And move over
to our logcat screen.

00:20:12.334 --> 00:20:14.334
I'm gonna go ahead and add,

00:20:14.334 --> 00:20:17.267
uh, a few notes here real quick.

00:20:26.834 --> 00:20:28.834
So I've added a note "R,"

00:20:28.834 --> 00:20:31.834
a note "Q,"

00:20:31.834 --> 00:20:34.834
and I'm gonna add a note "S."

00:20:34.834 --> 00:20:37.334
Guess I got the alphabet
a little wrong there.

00:20:37.334 --> 00:20:40.000
I'm gonna go ahead
and delete my first note

00:20:40.000 --> 00:20:44.868
from, um, the main screen.

00:20:44.868 --> 00:20:47.434
I've deleted it,
and there you can see

00:20:47.434 --> 00:20:51.000
the event track come through.

00:20:51.000 --> 00:20:53.334
See if I can highlight
the relevant stuff.

00:20:53.334 --> 00:20:55.334
There's the event category.

00:20:55.334 --> 00:20:58.334
Uh, there's UI interaction,

00:20:58.334 --> 00:21:01.400
a delete, and the notes list.

00:21:01.400 --> 00:21:03.400
So let's go ahead and edit

00:21:03.400 --> 00:21:05.400
the next note on our list.

00:21:05.400 --> 00:21:07.400
And I'm gonna go ahead

00:21:07.400 --> 00:21:10.400
and delete that.

00:21:10.400 --> 00:21:13.400
And there's our second,

00:21:13.400 --> 00:21:16.400
uh, event.

00:21:16.400 --> 00:21:18.067
Let me...

00:21:18.067 --> 00:21:20.400
And you can see that
this one indicates

00:21:20.400 --> 00:21:22.400
that we used the note editor
to delete it.

00:21:22.400 --> 00:21:24.734
And I have a third one here,

00:21:24.734 --> 00:21:27.734
so let's go ahead and delete
that from the main screen.

00:21:27.734 --> 00:21:29.734
And again,

00:21:29.734 --> 00:21:31.734
you can see the event

00:21:31.734 --> 00:21:33.734
come through and track.

00:21:33.734 --> 00:21:36.734
That's really
all there is to it,

00:21:36.734 --> 00:21:39.734
and Nick will show you
the reports again.

00:21:39.734 --> 00:21:43.734
[clears throat]

00:21:43.734 --> 00:21:46.501
Mihailovski: Thanks, Jim.

00:21:46.501 --> 00:21:48.501
So once we've collected
the data,

00:21:48.501 --> 00:21:50.501
we can now log again
back into the UI,

00:21:50.501 --> 00:21:52.501
and start seeing
what's going on.

00:21:52.501 --> 00:21:54.501
In this case, we look
at the content section,

00:21:54.501 --> 00:21:57.000
now we go to the event section
and the top events report,

00:21:57.000 --> 00:21:59.667
and here we see all the events
that we're starting to track.

00:21:59.667 --> 00:22:01.567
And when we click this button,

00:22:01.567 --> 00:22:04.567
boom, we get the number of times
a note was deleted overall.

00:22:04.567 --> 00:22:06.567
And, boom, we can click on that,

00:22:06.567 --> 00:22:08.567
and because we're sending
the class name,

00:22:08.567 --> 00:22:10.567
which associates
with activity,

00:22:10.567 --> 00:22:12.567
we can now differentiate
by activity

00:22:12.567 --> 00:22:15.267
where people are deleting
this note the most.

00:22:15.267 --> 00:22:17.267
Now we won't stop there.

00:22:17.267 --> 00:22:19.267
What we really want to do
is not only look

00:22:19.267 --> 00:22:21.267
at the total number of times
stuff was deleted,

00:22:21.267 --> 00:22:23.267
but we also want to understand
the total number

00:22:23.267 --> 00:22:25.267
of unique visitors,
or unique users,

00:22:25.267 --> 00:22:27.767
who have actually used this
feature of the application.

00:22:27.767 --> 00:22:30.767
And to do that, we can create
a custom report.

00:22:30.767 --> 00:22:32.801
In this case,

00:22:32.801 --> 00:22:34.767
we use the event
action dimension,

00:22:34.767 --> 00:22:36.767
and event label dimensions,

00:22:36.767 --> 00:22:38.767
and we also here are looking

00:22:38.767 --> 00:22:40.767
at total visitors
and total events.

00:22:40.767 --> 00:22:42.767
Now when we click save,

00:22:42.767 --> 00:22:44.434
the report shows us

00:22:44.434 --> 00:22:46.434
for every time
people deleted a note,

00:22:46.434 --> 00:22:48.434
the breakout between
the notes list

00:22:48.434 --> 00:22:50.434
and the notes editor,

00:22:50.434 --> 00:22:52.434
as well as the total number

00:22:52.434 --> 00:22:54.434
of unique visitors
in the date range

00:22:54.434 --> 00:22:56.434
who have actually
used this feature.

00:22:56.434 --> 00:22:58.868
Now in this example, we see
that the total number of times

00:22:58.868 --> 00:23:00.868
people deleted a note
from the notes list section

00:23:00.868 --> 00:23:03.934
was about four times greater
than the total number of people

00:23:03.934 --> 00:23:06.634
who deleted a note from
the notes editor activity.

00:23:06.634 --> 00:23:08.634
Now as an application developer,

00:23:08.634 --> 00:23:10.634
I'm really curious in why are--

00:23:10.634 --> 00:23:12.634
is nobody using
this feature that I spent

00:23:12.634 --> 00:23:14.634
all this time developing
in my app?

00:23:14.634 --> 00:23:16.634
Maybe people don't know
about the feature,

00:23:16.634 --> 00:23:18.634
maybe the feature's hard to use.

00:23:18.634 --> 00:23:20.634
It's again, using this data
that you collect

00:23:20.634 --> 00:23:22.634
from Google Analytics
to help understand

00:23:22.634 --> 00:23:24.701
where people are not really
leveraging your application

00:23:24.701 --> 00:23:26.334
to your full potential.

00:23:26.334 --> 00:23:28.334
It also might make sense,
you know,

00:23:28.334 --> 00:23:30.334
if you're trying to understand
where to invest time

00:23:30.334 --> 00:23:32.334
and resources,
you might either promote this

00:23:32.334 --> 00:23:34.334
or try to get rid
of the feature at all

00:23:34.334 --> 00:23:36.000
because people aren't using it.

00:23:36.000 --> 00:23:38.000
So again, here's a great way
on how you can use data

00:23:38.000 --> 00:23:40.000
to start optimizing 
your applications.

00:23:40.000 --> 00:23:42.000
So we just talked about
tracking views,

00:23:42.000 --> 00:23:44.000
we talked about tracking
content interactions.

00:23:44.000 --> 00:23:45.934
The third thing
we're gonna talk about

00:23:45.934 --> 00:23:48.267
is tracking user preferences.

00:23:48.267 --> 00:23:50.701
In this case,
what we want to understand is

00:23:50.701 --> 00:23:53.567
how behaviors differ by
orientation of the device.

00:23:53.567 --> 00:23:56.400
Are certain features used more
when it's in portrait mode

00:23:56.400 --> 00:23:58.334
or landscape mode?

00:23:58.334 --> 00:24:00.334
And what this example
will show you

00:24:00.334 --> 00:24:02.400
is how to start using
Custom Variables

00:24:02.400 --> 00:24:04.067
to track user preferences.

00:24:04.067 --> 00:24:06.067
Now before we get
into the demo, uh,

00:24:06.067 --> 00:24:09.067
how many people here know
what Custom Variables are?

00:24:09.067 --> 00:24:12.100
Okay, so we're gonna--
we're gonna take a step back

00:24:12.100 --> 00:24:14.801
and do a little conceptual
overview of how they apply.

00:24:14.801 --> 00:24:16.801
So if you think
of an application,

00:24:16.801 --> 00:24:18.801
you have a user who comes
to your application

00:24:18.801 --> 00:24:20.567
and interacts with content.

00:24:20.567 --> 00:24:22.567
He might return sometime,
view more pages.

00:24:22.567 --> 00:24:24.567
He might even come back
and do a transaction.

00:24:24.567 --> 00:24:26.601
In Google Analytics,
we call each of these

00:24:26.601 --> 00:24:30.300
visitor, session,
and page levels.

00:24:30.300 --> 00:24:33.133
Now a custom variable
allows you to describe

00:24:33.133 --> 00:24:35.868
each of these levels,
so for example,

00:24:35.868 --> 00:24:38.567
you might describe a visitor
who's made a purchase,

00:24:38.567 --> 00:24:41.868
and compare them to visitors
who haven't made a purchase.

00:24:41.868 --> 00:24:44.167
You might use a session
Custom Variable

00:24:44.167 --> 00:24:46.367
to compare users
who have logged in

00:24:46.367 --> 00:24:48.167
versus who haven't logged in.

00:24:48.167 --> 00:24:50.167
And you might use
a page custom variable

00:24:50.167 --> 00:24:52.167
to compare users who have gone
to a particular page

00:24:52.167 --> 00:24:55.167
that belongs in a category--
for example, news versus sports.

00:24:55.167 --> 00:24:57.167
Now in the Google Analytics,

00:24:57.167 --> 00:24:59.167
uh, SDK for Android,

00:24:59.167 --> 00:25:02.234
we make this really easy,
providing by--

00:25:02.234 --> 00:25:04.234
providing the set custom bar
method.

00:25:04.234 --> 00:25:06.667
Now this method accepts
four parameters.

00:25:06.667 --> 00:25:09.100
At any given time you can send

00:25:09.100 --> 00:25:11.100
up to five Custom Variables
to analytics,

00:25:11.100 --> 00:25:14.200
so the first parameter is which
custom variable you want to set,

00:25:14.200 --> 00:25:17.300
the second one's the name,
the third is the value,

00:25:17.300 --> 00:25:19.968
and finally, the fourth
corresponds to the level.

00:25:19.968 --> 00:25:21.968
In this case,
one is visitor,

00:25:21.968 --> 00:25:24.367
two is session,
and three is page.

00:25:24.367 --> 00:25:27.334
So now that you all know
how Custom Variables work,

00:25:27.334 --> 00:25:30.501
Jim, let's see the demo of how
to track the orientation.

00:25:30.501 --> 00:25:32.567
Cotugno: Okay, thanks, Nick.

00:25:32.567 --> 00:25:36.000
Again we're taking our notepad
sample application,

00:25:36.000 --> 00:25:38.000
and we're adding, um,

00:25:38.000 --> 00:25:40.267
some Custom Variable
support here.

00:25:40.267 --> 00:25:43.701
So here I'm showing you the code
in our tracked activity class,

00:25:43.701 --> 00:25:45.701
and, uh,

00:25:45.701 --> 00:25:47.968
you can see
at the beginning,

00:25:47.968 --> 00:25:49.968
we're setting up our tracker,

00:25:49.968 --> 00:25:51.567
uh, like before,

00:25:51.567 --> 00:25:54.501
uh, and then we're determining
the orientation of the device,

00:25:54.501 --> 00:25:57.267
and then finally you can see
we're set--

00:25:57.267 --> 00:25:59.567
doing our setCustomVar call.

00:25:59.567 --> 00:26:01.501
We're using slot 1.

00:26:01.501 --> 00:26:04.501
Uh, the name for this custom
variable is screen orientation,

00:26:04.501 --> 00:26:07.501
and the value is going to be
the orientation

00:26:07.501 --> 00:26:09.501
that we determined above,

00:26:09.501 --> 00:26:12.501
and we're gonna give it
a session scope, uh, which is 2.

00:26:12.501 --> 00:26:16.300
I've done the same
for our notes list,

00:26:16.300 --> 00:26:20.200
um, activity as well.

00:26:20.200 --> 00:26:23.133
So let's go ahead
and run this.

00:26:25.234 --> 00:26:27.200
You want to take this?

00:26:27.200 --> 00:26:29.200
Mihailovski: Oh, yeah, sure.

00:26:29.200 --> 00:26:31.200
Cotugno: Yeah,
you want to have...

00:26:31.200 --> 00:26:33.200
Mihailovski: Okay,
is it running?

00:26:33.200 --> 00:26:36.200
Cotugno: Not yet.
It will be in a second.

00:26:36.200 --> 00:26:39.200
Okay, I've--
I've fired it off,

00:26:39.200 --> 00:26:41.200
and you can see

00:26:41.200 --> 00:26:43.701
we've already got
our first page view.

00:26:43.701 --> 00:26:46.701
Mihailovski: So if I turn it
here, if I turn it back--

00:26:46.701 --> 00:26:49.701
uh,

00:26:49.701 --> 00:26:52.634
if I--
we add a note here...

00:26:55.701 --> 00:26:58.634
and turn to editor...

00:27:01.434 --> 00:27:03.367
And enter.

00:27:06.501 --> 00:27:08.501
Cool.

00:27:08.501 --> 00:27:11.501
So now we're tracking
all the orientation by, uh...

00:27:11.501 --> 00:27:13.501
Yeah, cool.

00:27:13.501 --> 00:27:15.501
Cotugno: You having fun
with that?

00:27:15.501 --> 00:27:17.501
Mihailovski: Yeah,
it's pretty cool.

00:27:17.501 --> 00:27:19.167
Cotugno: Okay, uh,

00:27:19.167 --> 00:27:21.167
that's really all there is
for Custom Variables.

00:27:21.167 --> 00:27:23.667
Why don't you show us what
the reports look like?

00:27:23.667 --> 00:27:25.634
Mihailovski: So where does
Custom Variables show up

00:27:25.634 --> 00:27:27.634
in all these requests?

00:27:27.634 --> 00:27:29.634
Oh, we lost it.

00:27:29.634 --> 00:27:31.634
Cotugno: It's back.

00:27:31.634 --> 00:27:34.267
Mihailovski: Okay. Cool.

00:27:34.267 --> 00:27:37.267
So now that we've collected all
this data as Custom Variables,

00:27:37.267 --> 00:27:39.400
what's really powerful
about Custom Variables, uh,

00:27:39.400 --> 00:27:42.167
is that we can create what's
called an Advanced Segment

00:27:42.167 --> 00:27:45.167
and use--and segment
the number of users

00:27:45.167 --> 00:27:47.267
who have used one preference
versus the other

00:27:47.267 --> 00:27:49.000
across all of our reports.

00:27:49.000 --> 00:27:51.000
So I'm gonna explain
what that means.

00:27:51.000 --> 00:27:54.000
In Google Analytics, we have
what's called Advanced Segments,

00:27:54.000 --> 00:27:55.667
and in the new interface,

00:27:55.667 --> 00:27:57.667
you can see it under
the Advanced Segment tag.

00:27:57.667 --> 00:28:00.167
When you click this button,
a little dialog pops up,

00:28:00.167 --> 00:28:02.234
and you can see a bunch
of default segments,

00:28:02.234 --> 00:28:04.234
as well as you have
the ability to create

00:28:04.234 --> 00:28:05.868
a new Advanced Segment.

00:28:05.868 --> 00:28:07.868
So in this case,
we'll create a new one,

00:28:07.868 --> 00:28:09.868
and in the dialog,
what we say is,

00:28:09.868 --> 00:28:11.868
we set the custom variable 1,
um, the value 1,

00:28:11.868 --> 00:28:13.868
to exactly match every time
we're setting portrait.

00:28:13.868 --> 00:28:16.868
Now what Jim was collecting
and sending to analytics

00:28:16.868 --> 00:28:19.868
was the portrait string when
people were in portrait mode,

00:28:19.868 --> 00:28:22.868
and landscape when people
were in landscape mode.

00:28:22.868 --> 00:28:24.868
So here we create
a Custom Variable

00:28:24.868 --> 00:28:27.868
to match all users who have
actually been in portrait mode.

00:28:27.868 --> 00:28:30.367
We can similarly come back
into Analytics and create one

00:28:30.367 --> 00:28:32.367
that's everybody
who was in landscape mode.

00:28:32.367 --> 00:28:34.367
When we click slave,

00:28:34.367 --> 00:28:36.367
we end up having
two custom segments.

00:28:36.367 --> 00:28:38.367
So again,
what's great about this

00:28:38.367 --> 00:28:40.367
is now these two
segments of users,

00:28:40.367 --> 00:28:42.701
we can apply this to any
of the reports in Analytics

00:28:42.701 --> 00:28:45.200
and compare the behavior
between each of the groups.

00:28:45.200 --> 00:28:46.901
So let's go back to this, uh,

00:28:46.901 --> 00:28:48.834
report that
we looked at earlier.

00:28:48.834 --> 00:28:50.801
And in this case,
we saw that the notes list,

00:28:50.801 --> 00:28:53.133
the total number of visitors
who viewed the notes list

00:28:53.133 --> 00:28:55.133
and the notes editor activities

00:28:55.133 --> 00:28:57.801
was effectively the same.

00:28:57.801 --> 00:29:00.868
But now when we apply these
two new Advanced Segments,

00:29:00.868 --> 00:29:03.033
we see a slightly
different story.

00:29:03.033 --> 00:29:04.834
On the notes list side,

00:29:04.834 --> 00:29:07.601
we see that people
significantly, uh,

00:29:07.601 --> 00:29:09.767
used the portrait orientation

00:29:09.767 --> 00:29:11.734
more than the landscape
orientation.

00:29:11.734 --> 00:29:15.133
now that would make sense,
because in a list, there's--

00:29:15.133 --> 00:29:17.200
you can have a lot more items
in a list

00:29:17.200 --> 00:29:19.400
when it's in portrait mode,
versus in landscape mode,

00:29:19.400 --> 00:29:21.234
when you have a lot
fewer items.

00:29:21.234 --> 00:29:24.634
On the notes editor side, we see
something slightly different.

00:29:24.634 --> 00:29:26.968
We see the usage
is about the same,

00:29:26.968 --> 00:29:28.968
and if you think
of the flow of the app,

00:29:28.968 --> 00:29:30.968
we see that when
you're in portrait mode

00:29:30.968 --> 00:29:32.968
and you long press
to get into the edit,

00:29:32.968 --> 00:29:35.634
the default orientation is--
is still portrait.

00:29:35.634 --> 00:29:37.634
You actually have
to then go to landscape

00:29:37.634 --> 00:29:39.300
to get the editor view.

00:29:39.300 --> 00:29:42.033
But when we see the total number
of engagement or page views,

00:29:42.033 --> 00:29:44.000
it's significantly higher
for those visitors

00:29:44.000 --> 00:29:45.634
in landscape mode,

00:29:45.634 --> 00:29:47.634
and that's probably because
users are preferring

00:29:47.634 --> 00:29:49.634
to use landscape mode
while they're editing,

00:29:49.634 --> 00:29:51.634
because the buttons
are a little bit wider.

00:29:51.634 --> 00:29:54.634
So here's a great way on how
you can capture data from users

00:29:54.634 --> 00:29:56.634
and their preferences,

00:29:56.634 --> 00:29:58.634
apply 'em back into your reports

00:29:58.634 --> 00:30:00.634
to see how they're
using your application

00:30:00.634 --> 00:30:03.567
based on different preferences
they have in--that they've set.

00:30:05.601 --> 00:30:07.667
Cool.

00:30:07.667 --> 00:30:10.501
So the last demo that
we want to show you, um,

00:30:10.501 --> 00:30:14.434
is--is a new feature
that we just launched last week,

00:30:14.434 --> 00:30:17.334
which is E-commerce Tracking
in our SDK.

00:30:17.334 --> 00:30:20.734
So increasingly, uh,
applications are enabling people

00:30:20.734 --> 00:30:23.701
to buy virtual goods, and to
conduct e-commerce transactions

00:30:23.701 --> 00:30:26.968
directly in the app,
so with this new update,

00:30:26.968 --> 00:30:29.300
we allow you to track
transactions and items

00:30:29.300 --> 00:30:31.334
directly in Google Analytics.

00:30:31.334 --> 00:30:33.033
So before we go into the demo,

00:30:33.033 --> 00:30:35.033
I kind of want to talk
a little bit about, uh,

00:30:35.033 --> 00:30:37.634
the different components
and how they all work together.

00:30:37.634 --> 00:30:39.734
So if you think
of a shopping basket,

00:30:39.734 --> 00:30:42.033
you have one transaction
and a bunch of items.

00:30:42.033 --> 00:30:45.033
In Google Analytics, each
of these are different objects,

00:30:45.033 --> 00:30:47.033
so you have one
transaction object,

00:30:47.033 --> 00:30:49.033
and a bunch of different
item objects

00:30:49.033 --> 00:30:51.033
that you can create,
which are data,

00:30:51.033 --> 00:30:53.067
and they're all tied together
using an order ID.

00:30:53.067 --> 00:30:56.167
So once you have those objects,
you add 'em to the tracker,

00:30:56.167 --> 00:30:58.968
calling the addTransaction
and additem methods,

00:30:58.968 --> 00:31:00.901
and what this happens is--

00:31:00.901 --> 00:31:03.100
it effectively fills
your shopping basket

00:31:03.100 --> 00:31:05.434
in an e-commerce bucket--
buffer.

00:31:05.434 --> 00:31:08.734
And once the buffer--once you
have all your items defined,

00:31:08.734 --> 00:31:10.534
you call track transactions,

00:31:10.534 --> 00:31:12.434
and this sends it
to the dispatcher,

00:31:12.434 --> 00:31:15.234
which then queues it up
to send it to Google Analytics.

00:31:15.234 --> 00:31:17.367
So now that we see how
all the pieces work together,

00:31:17.367 --> 00:31:19.334
Jim, let's see how it works.

00:31:19.334 --> 00:31:21.367
Cotugno: Okay, thanks.

00:31:21.367 --> 00:31:24.434
So we have, um,

00:31:24.434 --> 00:31:26.934
if you've looked at the samples

00:31:26.934 --> 00:31:28.767
for in-app billing,

00:31:28.767 --> 00:31:30.767
um, there's the one called
"Dungeon,"

00:31:30.767 --> 00:31:34.100
and I've taken that and I've
made some modifications,

00:31:34.100 --> 00:31:36.834
uh, to make it
a little bit more interesting

00:31:36.834 --> 00:31:39.267
and to add some tracking
for e-commerce.

00:31:39.267 --> 00:31:41.267
So here's the key method.

00:31:41.267 --> 00:31:43.334
This is a callback
on purchase date change,

00:31:43.334 --> 00:31:45.400
and this gets called
when the transaction

00:31:45.400 --> 00:31:49.434
that you've requested has been,
um, confirmed by the system,

00:31:49.434 --> 00:31:53.033
and what I've done then
is added code to, uh,

00:31:53.033 --> 00:31:56.300
log the transaction
in Google Analytics, uh,

00:31:56.300 --> 00:31:58.567
at this point in time.

00:31:58.567 --> 00:32:01.634
So if you look
at the highlighted code

00:32:01.634 --> 00:32:03.634
near the bottom, uh,

00:32:03.634 --> 00:32:05.634
you can see that, uh,

00:32:05.634 --> 00:32:08.634
if the purchase
has--has gone through,

00:32:08.634 --> 00:32:10.634
the purchase state
is--is "purchased."

00:32:10.634 --> 00:32:15.033
We're gonna add a transaction
to the tracker,

00:32:15.033 --> 00:32:17.901
and, uh, we pass in
an order ID,

00:32:17.901 --> 00:32:19.901
which is passed in to us

00:32:19.901 --> 00:32:22.200
in this callback method,

00:32:22.200 --> 00:32:25.200
and then, uh, for price,

00:32:25.200 --> 00:32:29.133
uh, all items in this demo
application are 99 cents,

00:32:29.133 --> 00:32:31.133
and so we just put

00:32:31.133 --> 00:32:33.667
a 99 cent price in there.

00:32:33.667 --> 00:32:36.667
And then we add an item, uh,

00:32:36.667 --> 00:32:38.667
we use the order ID
that's passed in

00:32:38.667 --> 00:32:41.000
so we can tie the transaction
back to the item,

00:32:41.000 --> 00:32:44.701
and then we add in the item ID,

00:32:44.701 --> 00:32:47.968
uh, which is passed in
as part of this callback.

00:32:47.968 --> 00:32:50.300
And again, every item
is 99 cents,

00:32:50.300 --> 00:32:52.901
and for this application, uh,

00:32:52.901 --> 00:32:55.834
every transaction
is one item purchased.

00:32:55.834 --> 00:32:59.100
Uh, so let's go ahead
and run this.

00:33:02.200 --> 00:33:04.033
Make sure--

00:33:04.033 --> 00:33:06.934
I want to make sure
that our log--logging is on.

00:33:06.934 --> 00:33:09.033
It is.

00:33:09.033 --> 00:33:11.901
Let's go ahead and run this.

00:33:11.901 --> 00:33:14.901
And what I'm gonna do is I'm
gonna flip over to the device

00:33:14.901 --> 00:33:17.901
so you can see, uh,
this application

00:33:17.901 --> 00:33:21.300
a little bit.

00:33:21.300 --> 00:33:23.634
So, uh, here's the application.

00:33:23.634 --> 00:33:25.634
It's got one light item,

00:33:25.634 --> 00:33:28.634
so you can select, uh,

00:33:28.634 --> 00:33:30.634
a blue sword

00:33:30.634 --> 00:33:33.634
or a red sword
or a potion for purchase.

00:33:33.634 --> 00:33:36.133
And when you do that, uh,

00:33:36.133 --> 00:33:38.634
let's try it.

00:33:38.634 --> 00:33:41.601
You'll get this
confirmation screen.

00:33:41.601 --> 00:33:43.767
We'll go ahead and purchase,

00:33:43.767 --> 00:33:46.934
and the purchase
has come through.

00:33:46.934 --> 00:33:48.934
So let's flip over

00:33:48.934 --> 00:33:52.634
to our logcat screen,

00:33:52.634 --> 00:33:54.501
and as you can see,

00:33:54.501 --> 00:33:56.667
we have two hits
have been generated.

00:33:56.667 --> 00:33:59.667
One--the first one--

00:33:59.667 --> 00:34:02.734
Let me highlight it here--

00:34:02.734 --> 00:34:04.734
is the transaction hit.

00:34:04.734 --> 00:34:06.734
You can see the order ID.

00:34:06.734 --> 00:34:09.734
It starts it at 1-3,
and 1 line and comes across,

00:34:09.734 --> 00:34:11.734
and then you have

00:34:11.734 --> 00:34:14.667
our item hit coming next.

00:34:14.667 --> 00:34:16.667
You can see, uh,

00:34:16.667 --> 00:34:18.667
it's got the same order ID.

00:34:18.667 --> 00:34:20.667
Should be able
to see that there,

00:34:20.667 --> 00:34:22.667
and the blue sword
is what was purchased.

00:34:22.667 --> 00:34:24.667
So I'm gonna go ahead

00:34:24.667 --> 00:34:26.667
and purchase a few potions here,

00:34:26.667 --> 00:34:29.167
'cause I need lots of help.

00:34:29.167 --> 00:34:31.167
Mihailovski: Keep dying
in the game?

00:34:31.167 --> 00:34:33.667
Cotugno: Oh, wait.
I purchased another blue sword.

00:34:33.667 --> 00:34:35.667
Mihailovski: Hmm,
you like the blue swords, huh?

00:34:35.667 --> 00:34:37.667
Cotugno: Yeah,
I got two of those now.

00:34:37.667 --> 00:34:39.868
All right, so let's try--
let's try a potion now.

00:34:43.634 --> 00:34:45.267
And there it is.

00:34:45.267 --> 00:34:48.200
You should be able to see
the potion.

00:34:50.634 --> 00:34:53.133
And I need lots
of healing potion,

00:34:53.133 --> 00:34:56.067
so let me buy
a few more here.

00:34:58.567 --> 00:35:01.567
There it is.

00:35:03.901 --> 00:35:05.901
And there it is.

00:35:05.901 --> 00:35:08.801
And that, uh, that's
all there is to it really.

00:35:08.801 --> 00:35:10.734
So, Nick, why don't you show us

00:35:10.734 --> 00:35:13.667
what the reports
would look like.

00:35:15.734 --> 00:35:17.400
Mihailovski: Cool.

00:35:17.400 --> 00:35:19.434
So once you've collected
the data,

00:35:19.434 --> 00:35:21.400
in the new version 5 interface,

00:35:21.400 --> 00:35:23.400
you simply go
to the conversion section,

00:35:23.400 --> 00:35:25.400
uh, the e-commerce
and product performance,

00:35:25.400 --> 00:35:27.400
and then at the bottom we'll
show you the total quantity,

00:35:27.400 --> 00:35:28.901
unique purchases,

00:35:28.901 --> 00:35:30.901
revenue associated
with each of the products.

00:35:30.901 --> 00:35:32.701
So again in this case,
you know,

00:35:32.701 --> 00:35:34.701
the blue sword was bought
multiple times,

00:35:34.701 --> 00:35:36.701
uh, compared to the red sword.

00:35:36.701 --> 00:35:38.701
If that's the case with
products, you might consider--

00:35:38.701 --> 00:35:40.701
you know, there's a preference
to blue,

00:35:40.701 --> 00:35:42.701
maybe we need more blue to--
blue items in the store.

00:35:42.701 --> 00:35:45.167
Um, having the data there
allows you to start

00:35:45.167 --> 00:35:48.167
making these questions
and starting to test some ideas.

00:35:48.167 --> 00:35:50.167
So with that, um,

00:35:50.167 --> 00:35:52.167
that's the end
of our presentation.

00:35:52.167 --> 00:35:53.868
Um, it's--like,

00:35:53.868 --> 00:35:55.834
the presentation went
really short,

00:35:55.834 --> 00:35:58.834
because it's that easy for us
to--for people to do,

00:35:58.834 --> 00:36:01.901
so we highly recommend
you, um,

00:36:01.901 --> 00:36:03.901
go to our documentation,
download the SDK,

00:36:03.901 --> 00:36:06.501
and then all the code
that we showed today

00:36:06.501 --> 00:36:09.567
is available
at Analytics API samples.

00:36:09.567 --> 00:36:12.000
Um, if you liked
the presentation,

00:36:12.000 --> 00:36:14.267
tweet it using the hash tag
Android,

00:36:14.267 --> 00:36:16.601
and if you have any feedback,
let us know.

00:36:16.601 --> 00:36:18.334
Let us know if we did good
or bad,

00:36:18.334 --> 00:36:20.767
uh, and we'll--we'll
open it up to Q&amp;A.

00:36:20.767 --> 00:36:22.501
Cotugno: Thank you.

00:36:22.501 --> 00:36:26.934
[cheers and applause]

00:36:26.934 --> 00:36:28.767
Mihailovski: Yeah?

00:36:28.767 --> 00:36:31.767
woman: Um, in the new SDK, we're
working with fragments a lot.

00:36:31.767 --> 00:36:34.767
Do you have any best practices
for working with fragments

00:36:34.767 --> 00:36:37.200
instead of the activities?

00:36:39.767 --> 00:36:42.267
Cotugno: Uh, not at the top
of my head, no.

00:36:42.267 --> 00:36:44.267
woman: Okay.

00:36:44.267 --> 00:36:47.734
Cotugno: So sorry.
woman: No problem.

00:36:47.734 --> 00:36:51.033
man: Hi, uh, I have
a client server application,

00:36:51.033 --> 00:36:54.033
and I also use Google Analytics
on the server side.

00:36:54.033 --> 00:36:55.534
Mihailovski: Mm-hmm.

00:36:55.534 --> 00:36:58.534
man: Do you have any advice
on how I can correlate activity

00:36:58.534 --> 00:37:01.267
between user's activities
on the client and on the server.

00:37:01.267 --> 00:37:03.267
Mihailovski: Yeah,
that's a great question.

00:37:03.267 --> 00:37:05.601
So, um, right now there's
no good solution for that,

00:37:05.601 --> 00:37:07.767
the key being that you need
a primary key

00:37:07.767 --> 00:37:09.701
between both environments.

00:37:09.701 --> 00:37:12.701
Um, right now there's no way
to override a visitor ID,

00:37:12.701 --> 00:37:14.701
which would be the primary key.

00:37:14.701 --> 00:37:16.701
Um, so not at this time.

00:37:16.701 --> 00:37:18.534
man: Okay, thanks.

00:37:18.534 --> 00:37:21.000
man: Hey, um,
is there a way to log

00:37:21.000 --> 00:37:24.000
all of the Google Analytics
data, and then send it later

00:37:24.000 --> 00:37:26.501
at, like, a user
connects to Wi-Fi,

00:37:26.501 --> 00:37:28.501
in one big batch request
or something?

00:37:28.501 --> 00:37:30.501
Cotugno: Yeah, uh,

00:37:30.501 --> 00:37:32.501
there's two modes of dispatch.

00:37:32.501 --> 00:37:35.501
What happens is when you
actually log the hit

00:37:35.501 --> 00:37:37.501
in your code, it gets--

00:37:37.501 --> 00:37:39.501
it gets stored locally,

00:37:39.501 --> 00:37:42.167
and then it will get dispatched
either through

00:37:42.167 --> 00:37:45.033
the automatic dispatch
mechanism, which is periodic,

00:37:45.033 --> 00:37:47.267
or you can do it manually
yourself.

00:37:47.267 --> 00:37:49.234
Um,

00:37:49.234 --> 00:37:52.300
so if you wanted to wait until
you got a Wi-Fi connection,

00:37:52.300 --> 00:37:55.601
for example, you would, uh,
write a receiver

00:37:55.601 --> 00:37:58.167
that would say--
that would call dispatch

00:37:58.167 --> 00:38:00.234
whenever a Wi-Fi connection
was available.

00:38:00.234 --> 00:38:02.033
That would be the way
to do that.

00:38:02.033 --> 00:38:04.033
man: Okay, thanks.
Mihailovski: Cool. Yeah.

00:38:04.033 --> 00:38:06.567
man: Uh, is there now,
or are there plans to have

00:38:06.567 --> 00:38:09.200
functionality for doing this
sort of tracking with the NDK?

00:38:09.200 --> 00:38:10.701
Cotugno: I'm sorry?

00:38:10.701 --> 00:38:12.701
man: With the native
developing kit? The NDK.

00:38:12.701 --> 00:38:15.367
Cotugno: Development--
oh, for Android?

00:38:15.367 --> 00:38:17.367
man: Yeah.

00:38:17.367 --> 00:38:21.801
Cotugno: I don't think
we have any plans right now...

00:38:21.801 --> 00:38:23.868
man: Okay.
Cotugno: we can talk about.

00:38:23.868 --> 00:38:25.868
man: All right, thanks.

00:38:25.868 --> 00:38:28.367
man: Um, any plans to open
source the client code?

00:38:28.367 --> 00:38:30.367
Mihailovski: Yeah,
that's a good question.

00:38:30.367 --> 00:38:32.367
So currently we don't
have an open protocol

00:38:32.367 --> 00:38:34.000
for collecting stuff.

00:38:34.000 --> 00:38:37.000
We do have a bunch of the client
libraries, like Phil mentioned.

00:38:37.000 --> 00:38:39.033
Um, it's something
that we'd like to do,

00:38:39.033 --> 00:38:41.000
but there's a lot of stuff
to get to there.

00:38:41.000 --> 00:38:42.501
man: Because--

00:38:42.501 --> 00:38:44.167
Mihailovski: So currently--yeah.

00:38:44.167 --> 00:38:47.167
man: The main reason why my app
crashes right now is because

00:38:47.167 --> 00:38:49.667
I think it uses
the scroll lighting in the...

00:38:49.667 --> 00:38:51.667
Mihailovski: Mm-hmm,
as the table--

00:38:51.667 --> 00:38:53.334
as the persistence, yeah.

00:38:53.334 --> 00:38:55.334
man: Yeah, and also,
when it goes off, it--

00:38:55.334 --> 00:38:57.334
there's a lot of memory
exception

00:38:57.334 --> 00:38:59.334
or something like that,
because it--

00:38:59.334 --> 00:39:01.400
I send lots of events...

00:39:01.400 --> 00:39:03.067
Mihailovski: Mm-hmm.

00:39:03.067 --> 00:39:06.067
man: Um, and I had to wrap
all this code around the--

00:39:06.067 --> 00:39:08.067
the analytics

00:39:08.067 --> 00:39:11.067
to--to make it synchronous,

00:39:11.067 --> 00:39:14.067
because, uh,

00:39:14.067 --> 00:39:16.067
since it uses
a scroll light,

00:39:16.067 --> 00:39:18.067
every time I insert something,

00:39:18.067 --> 00:39:21.067
there is sometimes on the SD
card, or the phone is slow,

00:39:21.067 --> 00:39:24.000
the internal memory is slow,

00:39:24.000 --> 00:39:26.801
then it takes, like,
200 milliseconds to insert.

00:39:26.801 --> 00:39:28.400
Cotugno: Oh, yeah.

00:39:28.400 --> 00:39:30.400
man: So, um, I can't really

00:39:30.400 --> 00:39:32.767
trigger events

00:39:32.767 --> 00:39:35.300
on, uh,
onCreate and all this stuff,

00:39:35.300 --> 00:39:37.868
otherwise it will slow down
a lot.

00:39:37.868 --> 00:39:39.501
Cotugno: Okay.

00:39:39.501 --> 00:39:42.434
Mihailovski: So currently, yeah,
it's not open source.

00:39:42.434 --> 00:39:45.167
The code wasn't really designed
to be modular in open source,

00:39:45.167 --> 00:39:47.200
but maybe--maybe we could
chat afterwards to--

00:39:47.200 --> 00:39:49.901
Cotugno: Yeah, I'm gonna
go upstairs to the Android,

00:39:49.901 --> 00:39:52.167
uh, office hours...

00:39:52.167 --> 00:39:54.133
man: Cool.

00:39:54.133 --> 00:39:56.501
Cotugno: So if you want to talk
more there, that'd be great.

00:39:56.501 --> 00:39:58.467
man: Hi there, question's
around white space--

00:39:58.467 --> 00:40:00.434
so I want to track
user comments,

00:40:00.434 --> 00:40:03.400
but the white space really
killed me for a couple hours.

00:40:03.400 --> 00:40:07.801
Um, I guess really,
you guys log it as a warning,

00:40:07.801 --> 00:40:10.267
but maybe it should be
an exception, or--

00:40:10.267 --> 00:40:12.267
and my second question is,

00:40:12.267 --> 00:40:14.267
do you expect all white space
to give me headaches,

00:40:14.267 --> 00:40:16.100
uh, or just the space--

00:40:16.100 --> 00:40:18.167
'cause we're really putting it
into page view,

00:40:18.167 --> 00:40:20.167
and page view should
not have any spaces.

00:40:20.167 --> 00:40:22.133
Mihailovski: Yeah,
so the page view is supposed--

00:40:22.133 --> 00:40:23.634
man: Thanks.

00:40:23.634 --> 00:40:25.634
Mihailovski: Yeah,
it's a great piece of feedback.

00:40:25.634 --> 00:40:27.634
Um, if you use event tracking,
it supports white space.

00:40:27.634 --> 00:40:29.300
Page views don't.

00:40:29.300 --> 00:40:31.033
Yep?

00:40:31.033 --> 00:40:33.767
man: Hi, we do our own
tracking right now,

00:40:33.767 --> 00:40:36.767
and, um, will often alter
our server response

00:40:36.767 --> 00:40:38.767
based on user,

00:40:38.767 --> 00:40:40.767
um, behavior.

00:40:40.767 --> 00:40:43.601
Is there any opportunity
to query for, um,

00:40:43.601 --> 00:40:46.701
query your system
for information about a user?

00:40:46.701 --> 00:40:49.701
I mean, our information.

00:40:49.701 --> 00:40:51.701
Mihailovski: Sorry,
explain it?

00:40:51.701 --> 00:40:53.734
man: Yeah, so we'll have
a user,

00:40:53.734 --> 00:40:55.701
if a user's ever
bought something,

00:40:55.701 --> 00:40:58.200
we'll actually send different
messages to them

00:40:58.200 --> 00:41:00.868
than a user that hasn't...
Mihailovski: Mm-hmm.

00:41:00.868 --> 00:41:03.434
man: So on our server side,
we need to know whether,

00:41:03.434 --> 00:41:05.434
you know, a user falls
in a certain category.

00:41:05.434 --> 00:41:08.067
Can we query from our server,
query Google Analytics

00:41:08.067 --> 00:41:10.501
for information that's stored
on our behalf?

00:41:10.501 --> 00:41:13.167
Cotugno: You can't get
personally identifiable

00:41:13.167 --> 00:41:16.167
information out of the SDK
at all, so...

00:41:16.167 --> 00:41:18.167
Mihailovski: Yeah, so from--

00:41:18.167 --> 00:41:20.167
maybe it's something different.

00:41:20.167 --> 00:41:22.167
So what we're talking about here
is collecting data,

00:41:22.167 --> 00:41:24.167
so if there's some data
in your system

00:41:24.167 --> 00:41:26.200
that you want to send into G.A.,

00:41:26.200 --> 00:41:28.167
uh, and associate with all
the user behavior,

00:41:28.167 --> 00:41:30.167
you can do it through
the collection side.

00:41:30.167 --> 00:41:33.167
If you wanted to query for data
that's already been processed

00:41:33.167 --> 00:41:35.167
and then pull it back
into your own system

00:41:35.167 --> 00:41:37.167
to close the loop,
we have an export API,

00:41:37.167 --> 00:41:38.834
which you can then use.

00:41:38.834 --> 00:41:41.501
So in that case, you usually
have some sort of common ID,

00:41:41.501 --> 00:41:43.133
like a transaction ID,

00:41:43.133 --> 00:41:45.467
or a custom variable
you can pass an ID in,

00:41:45.467 --> 00:41:48.133
and then you can
query our export API

00:41:48.133 --> 00:41:51.033
against that ID
and get all the usage data,

00:41:51.033 --> 00:41:53.033
and then put that
into your system,

00:41:53.033 --> 00:41:54.701
and then further act on it.

00:41:54.701 --> 00:41:57.200
man: Okay, thanks.
Mihailovski: Yeah.

00:41:57.200 --> 00:41:59.701
man: Yeah, um,
you mentioned that, uh,

00:41:59.701 --> 00:42:02.767
the user ID is stored
in SQLite--

00:42:02.767 --> 00:42:05.767
uh, that's, uh,
in the application's context,

00:42:05.767 --> 00:42:08.234
so if somebody does
a clear data,

00:42:08.234 --> 00:42:10.067
it's gonna wipe that out

00:42:10.067 --> 00:42:12.067
and generate a new one
the next time they log in?

00:42:12.067 --> 00:42:14.400
Cotugno: That's correct.
man: Okay.

00:42:14.400 --> 00:42:16.400
Cotugno: And every time
the app is--

00:42:16.400 --> 00:42:19.234
if you uninstall the app,
it'll also get wiped out.

00:42:19.234 --> 00:42:21.234
So it will retain it, though,

00:42:21.234 --> 00:42:23.634
if you upgrade the app
without uninstalling.

00:42:23.634 --> 00:42:26.534
man: Right, and then we, uh,

00:42:26.534 --> 00:42:30.300
run our applications across
multiple different kinds

00:42:30.300 --> 00:42:33.367
of devices--
Android, RIM, et cetera.

00:42:33.367 --> 00:42:37.033
Is there any way that
we would be able to track,

00:42:37.033 --> 00:42:39.701
uh, the same kinds of events

00:42:39.701 --> 00:42:41.701
in the other, uh,

00:42:41.701 --> 00:42:43.701
platforms that
we are working with?

00:42:43.701 --> 00:42:45.701
Mihailovski: That's
a good question.

00:42:45.701 --> 00:42:48.701
So we have support for Android
natively, and iOS.

00:42:48.701 --> 00:42:51.701
Um, we just released the debug,

00:42:51.701 --> 00:42:54.701
Dry Run and e-commerce
in Android,

00:42:54.701 --> 00:42:57.701
so we're working on that,
to get that in iOS as well.

00:42:57.701 --> 00:42:59.701
Um, for the other devices,

00:42:59.701 --> 00:43:01.767
we don't have any native
application tracking.

00:43:01.767 --> 00:43:04.267
What we have is mobile snippet,
uh, server side stuff,

00:43:04.267 --> 00:43:06.300
so if you have mobile,
like, kind of Web site,

00:43:06.300 --> 00:43:08.267
Web experiences, you can
track in those devices,

00:43:08.267 --> 00:43:10.267
even though they
don't generally store--

00:43:10.267 --> 00:43:12.767
you know, they don't have
a great persistence mechanism.

00:43:12.767 --> 00:43:14.767
man: No, these are entirely
apps, so...

00:43:14.767 --> 00:43:16.767
Mihailovski: Yeah, okay.
So currently--

00:43:16.767 --> 00:43:18.767
currently, we don't have it.
Yeah?

00:43:18.767 --> 00:43:21.767
man: My question is on,
you know,

00:43:21.767 --> 00:43:24.767
so a lot--each view you...
[speaking indistinctly]

00:43:24.767 --> 00:43:26.767
you know,

00:43:26.767 --> 00:43:29.767
is there any way--are you guys
using any HTTP pipelining

00:43:29.767 --> 00:43:33.133
so that same connection
can be used on all the data?

00:43:33.133 --> 00:43:36.367
You know, all--every time
you send data,

00:43:36.367 --> 00:43:39.200
you're making a new connections
for the servers?

00:43:39.200 --> 00:43:41.501
Mihailovski: Yeah, so what--
what we--

00:43:41.501 --> 00:43:44.701
the way that we implemented here
is we used HTTP 1.1,

00:43:44.701 --> 00:43:46.801
so we actually do pipelining
over that,

00:43:46.801 --> 00:43:48.701
so the reason why
we're batching this stuff

00:43:48.701 --> 00:43:50.367
is so we can pipeline it,

00:43:50.367 --> 00:43:52.367
and the reason was because
when we first built it,

00:43:52.367 --> 00:43:54.367
we didn't do it, and then
all the battery went away.

00:43:54.367 --> 00:43:55.868
man: Okay.

00:43:55.868 --> 00:43:57.868
Mihailovski: So then
we put it together,

00:43:57.868 --> 00:43:59.868
and now it doesn't take up
all the battery.

00:43:59.868 --> 00:44:01.934
So that's a great question.

00:44:01.934 --> 00:44:04.934
man: Another question is, is
there a way I can, uh, make it--

00:44:04.934 --> 00:44:07.934
you know, when I know the last
activity out of my, you know,

00:44:07.934 --> 00:44:09.934
application is exited
at the time,

00:44:09.934 --> 00:44:11.934
can I push all the data
to the server, you know,

00:44:11.934 --> 00:44:14.934
stack them at the last time?
Mihailovski: Sure.

00:44:14.934 --> 00:44:17.601
man: I don't want any
data transaction in between

00:44:17.601 --> 00:44:19.200
my application.

00:44:19.200 --> 00:44:21.200
Cotugno: Right, and that's
the manual dispatch

00:44:21.200 --> 00:44:23.200
I talked about before.
You could actually call--

00:44:23.200 --> 00:44:25.200
the method's called dispatch
in the tracker,

00:44:25.200 --> 00:44:28.200
and if you start the tracker

00:44:28.200 --> 00:44:31.200
and you pass it, uh,
minus 1, I think,

00:44:31.200 --> 00:44:34.200
it will not do
any automatic dispatching.

00:44:34.200 --> 00:44:36.200
It will wait for you
to tell it to dispatch.

00:44:36.200 --> 00:44:38.200
man: Okay, so I can call it
at the--

00:44:38.200 --> 00:44:39.868
the time user exits.

00:44:39.868 --> 00:44:41.868
Cotugno: Right.
There's one caveat there.

00:44:41.868 --> 00:44:45.534
It will only dispatch
up to 30, uh, hits at a time,

00:44:45.534 --> 00:44:48.834
uh, so you might loop through

00:44:48.834 --> 00:44:50.934
and call it several times,

00:44:50.934 --> 00:44:53.667
or if you keep track of how many
hits you've generated,

00:44:53.667 --> 00:44:55.300
you'll know if you have to,

00:44:55.300 --> 00:44:58.100
uh, call it more than once
to make sure it goes through.

00:44:58.100 --> 00:45:01.033
man: Okay, thank you.
Cotugno: Sure.

00:45:01.033 --> 00:45:03.667
man: Um, when doing
the automatic updates,

00:45:03.667 --> 00:45:06.167
do you synchronize

00:45:06.167 --> 00:45:09.634
with the set in exact
timer type things

00:45:09.634 --> 00:45:12.267
so that you'll piggyback
on when, uh,

00:45:12.267 --> 00:45:14.767
Google push and the other things

00:45:14.767 --> 00:45:16.901
are waking the device up,

00:45:16.901 --> 00:45:20.300
or is there a value
you can pass in

00:45:20.300 --> 00:45:22.267
for aligning with that?

00:45:22.267 --> 00:45:24.767
Cotugno: No, right now
we just dispatch, uh,

00:45:24.767 --> 00:45:28.200
as frequently as the time
interval that you requested,

00:45:28.200 --> 00:45:30.467
so if you request ten seconds,

00:45:30.467 --> 00:45:32.467
we're gonna dispatch

00:45:32.467 --> 00:45:34.467
more or less every ten seconds,

00:45:34.467 --> 00:45:36.467
maybe a little longer.

00:45:36.467 --> 00:45:38.133
man: Okay.

00:45:38.133 --> 00:45:40.133
man: On one of your
initial slides,

00:45:40.133 --> 00:45:42.634
I think you had a bullet about
market referrals being something

00:45:42.634 --> 00:45:44.634
that's integrated
into Google Analytics.

00:45:44.634 --> 00:45:46.133
Mihailovski: Yeah.

00:45:46.133 --> 00:45:48.133
man: Is there a way to get
information about

00:45:48.133 --> 00:45:50.634
how your app is, uh, you know,
the detail page within Market,

00:45:50.634 --> 00:45:52.234
and then the downloaders--

00:45:52.234 --> 00:45:54.234
Mihailovski: Fantastic feature.
We did not demo it today,

00:45:54.234 --> 00:45:56.234
so, um, so for the people
who are staying late,

00:45:56.234 --> 00:45:58.234
we'll tell you a new feature
that's--

00:45:58.234 --> 00:45:59.901
it's been in there for a while.

00:45:59.901 --> 00:46:01.968
So what happens is,
let's say you have an ad

00:46:01.968 --> 00:46:04.567
that you're trying to get people
to download your application

00:46:04.567 --> 00:46:06.334
through the Android Market.

00:46:06.334 --> 00:46:08.968
Um, you can add to the link that
points to the Android Market,

00:46:08.968 --> 00:46:10.634
our referral parameters.

00:46:10.634 --> 00:46:14.133
With the Android Market,
once somebody downloads the app,

00:46:14.133 --> 00:46:16.701
um, it'll broadcast an intent

00:46:16.701 --> 00:46:18.767
with all the parameters,

00:46:18.767 --> 00:46:20.434
which there's a couple--

00:46:20.434 --> 00:46:22.801
there's one more configuration
we didn't talk about,

00:46:22.801 --> 00:46:24.634
but it's all under Docs--
it'll read that,

00:46:24.634 --> 00:46:27.667
and then associate that campaign
with the download as well.

00:46:27.667 --> 00:46:29.634
So you can definitely use that,
and it's--

00:46:29.634 --> 00:46:31.634
it's actually
really helpful.

00:46:31.634 --> 00:46:33.634
man: So a follow-up
question on that,

00:46:33.634 --> 00:46:36.200
is there any way to get if a
user as coming through a search

00:46:36.200 --> 00:46:39.200
in Market, as opposed to
an advertising-based intent?

00:46:39.200 --> 00:46:40.701
Mihailovski: Currently--

00:46:40.701 --> 00:46:42.701
man: Um, is there a way
to get search parameters?

00:46:42.701 --> 00:46:44.367
Mihailovski: Currently, no.

00:46:44.367 --> 00:46:46.868
You specifically
have to tag them.

00:46:46.868 --> 00:46:50.133
man: Um, there--Google Analytics
has lots of various,

00:46:50.133 --> 00:46:52.868
uh, pieces of data,
like average time on page,

00:46:52.868 --> 00:46:54.467
um, things like that--

00:46:54.467 --> 00:46:56.467
uh, are those useful
at all in this context?

00:46:56.467 --> 00:46:58.467
They seem random for my app.

00:46:58.467 --> 00:47:01.534
And is there any plan to add
the ability to say

00:47:01.534 --> 00:47:03.534
when someone left
an activity?

00:47:03.534 --> 00:47:06.534
Mihailovski: Uh, yeah,
that's a good question.

00:47:06.534 --> 00:47:09.033
So the averages might
be a little bit misleading,

00:47:09.033 --> 00:47:11.033
because it's kind of
a calculated metric.

00:47:11.033 --> 00:47:13.701
Uh, total time is probably
a better metric to look at,

00:47:13.701 --> 00:47:16.234
and I think it's available
through the custom reporting,

00:47:16.234 --> 00:47:18.267
but just not the standard--
standard reports.

00:47:18.267 --> 00:47:19.901
So we'll take a look at that.

00:47:19.901 --> 00:47:21.901
So in many of the cases,
the averages, um,

00:47:21.901 --> 00:47:24.400
might be a little bit off,
but the totals should add up,

00:47:24.400 --> 00:47:26.534
right, the total time
would be how many people,

00:47:26.534 --> 00:47:28.534
you know,
that will always add up.

00:47:28.534 --> 00:47:30.033
man: Okay, thanks.

00:47:30.033 --> 00:47:32.033
Mihailovski: Sure. Cool.
All right, cool.

00:47:32.033 --> 00:47:34.033
If you have more questions,
come to office hours.

00:47:34.033 --> 00:47:36.033
Cotugno: Thanks a lot, guys.

00:47:36.033 --> 00:47:38.834
[applause]

