WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.480
 
I'm vertical chinky this is Android tool

00:00:02.480 --> 00:00:02.490
I'm vertical chinky this is Android tool
 

00:00:02.490 --> 00:00:04.640
I'm vertical chinky this is Android tool
time and let's talk a bit about the

00:00:04.640 --> 00:00:04.650
time and let's talk a bit about the
 

00:00:04.650 --> 00:00:06.559
time and let's talk a bit about the
espresso test recorder and how it can

00:00:06.559 --> 00:00:06.569
espresso test recorder and how it can
 

00:00:06.569 --> 00:00:11.709
espresso test recorder and how it can
help with adding UI tests to your app

00:00:11.709 --> 00:00:11.719
 
 

00:00:11.719 --> 00:00:14.480
 
let's first a short explanation for

00:00:14.480 --> 00:00:14.490
let's first a short explanation for
 

00:00:14.490 --> 00:00:16.790
let's first a short explanation for
those unfamiliar with espresso espresso

00:00:16.790 --> 00:00:16.800
those unfamiliar with espresso espresso
 

00:00:16.800 --> 00:00:18.830
those unfamiliar with espresso espresso
is a testing framework designed to

00:00:18.830 --> 00:00:18.840
is a testing framework designed to
 

00:00:18.840 --> 00:00:21.140
is a testing framework designed to
provide a fluent API for writing concise

00:00:21.140 --> 00:00:21.150
provide a fluent API for writing concise
 

00:00:21.150 --> 00:00:24.290
provide a fluent API for writing concise
and reliable UI tests however it is

00:00:24.290 --> 00:00:24.300
and reliable UI tests however it is
 

00:00:24.300 --> 00:00:25.910
and reliable UI tests however it is
often the case that developers are

00:00:25.910 --> 00:00:25.920
often the case that developers are
 

00:00:25.920 --> 00:00:27.800
often the case that developers are
reluctant to add UI tests to their apps

00:00:27.800 --> 00:00:27.810
reluctant to add UI tests to their apps
 

00:00:27.810 --> 00:00:30.050
reluctant to add UI tests to their apps
or simply don't have time to learn the

00:00:30.050 --> 00:00:30.060
or simply don't have time to learn the
 

00:00:30.060 --> 00:00:32.150
or simply don't have time to learn the
framework this is where the espresso

00:00:32.150 --> 00:00:32.160
framework this is where the espresso
 

00:00:32.160 --> 00:00:34.370
framework this is where the espresso
test recorder comes in and lets you

00:00:34.370 --> 00:00:34.380
test recorder comes in and lets you
 

00:00:34.380 --> 00:00:36.680
test recorder comes in and lets you
create an ADD UI test to an existing app

00:00:36.680 --> 00:00:36.690
create an ADD UI test to an existing app
 

00:00:36.690 --> 00:00:39.319
create an ADD UI test to an existing app
in an interactive way you might have

00:00:39.319 --> 00:00:39.329
in an interactive way you might have
 

00:00:39.329 --> 00:00:41.270
in an interactive way you might have
previously seen the beta version of this

00:00:41.270 --> 00:00:41.280
previously seen the beta version of this
 

00:00:41.280 --> 00:00:44.180
previously seen the beta version of this
feature but in Android studio 2.3 we are

00:00:44.180 --> 00:00:44.190
feature but in Android studio 2.3 we are
 

00:00:44.190 --> 00:00:45.979
feature but in Android studio 2.3 we are
promoting it to stable with a few

00:00:45.979 --> 00:00:45.989
promoting it to stable with a few
 

00:00:45.989 --> 00:00:48.680
promoting it to stable with a few
enhancements to get started with the

00:00:48.680 --> 00:00:48.690
enhancements to get started with the
 

00:00:48.690 --> 00:00:50.750
enhancements to get started with the
test recorder click on record espresso

00:00:50.750 --> 00:00:50.760
test recorder click on record espresso
 

00:00:50.760 --> 00:00:53.510
test recorder click on record espresso
test under the run menu the device

00:00:53.510 --> 00:00:53.520
test under the run menu the device
 

00:00:53.520 --> 00:00:55.729
test under the run menu the device
selection dialog pops up and after you

00:00:55.729 --> 00:00:55.739
selection dialog pops up and after you
 

00:00:55.739 --> 00:00:57.770
selection dialog pops up and after you
make your choice the test recorder runs

00:00:57.770 --> 00:00:57.780
make your choice the test recorder runs
 

00:00:57.780 --> 00:01:00.619
make your choice the test recorder runs
your app in debug mode simply progress

00:01:00.619 --> 00:01:00.629
your app in debug mode simply progress
 

00:01:00.629 --> 00:01:02.660
your app in debug mode simply progress
through your apps UI as a regular user

00:01:02.660 --> 00:01:02.670
through your apps UI as a regular user
 

00:01:02.670 --> 00:01:04.579
through your apps UI as a regular user
would by clicking button

00:01:04.579 --> 00:01:04.589
would by clicking button
 

00:01:04.589 --> 00:01:06.679
would by clicking button
swiping and typing into input fields and

00:01:06.679 --> 00:01:06.689
swiping and typing into input fields and
 

00:01:06.689 --> 00:01:08.660
swiping and typing into input fields and
the all those actions will appear in the

00:01:08.660 --> 00:01:08.670
the all those actions will appear in the
 

00:01:08.670 --> 00:01:11.600
the all those actions will appear in the
test recorder window you can also click

00:01:11.600 --> 00:01:11.610
test recorder window you can also click
 

00:01:11.610 --> 00:01:13.760
test recorder window you can also click
here get an assertion to your test at

00:01:13.760 --> 00:01:13.770
here get an assertion to your test at
 

00:01:13.770 --> 00:01:15.830
here get an assertion to your test at
any time during recording which will

00:01:15.830 --> 00:01:15.840
any time during recording which will
 

00:01:15.840 --> 00:01:17.600
any time during recording which will
trigger the test recorder to dump the

00:01:17.600 --> 00:01:17.610
trigger the test recorder to dump the
 

00:01:17.610 --> 00:01:20.179
trigger the test recorder to dump the
current view hierarchy to select the

00:01:20.179 --> 00:01:20.189
current view hierarchy to select the
 

00:01:20.189 --> 00:01:22.100
current view hierarchy to select the
view you want to assert on click on the

00:01:22.100 --> 00:01:22.110
view you want to assert on click on the
 

00:01:22.110 --> 00:01:23.719
view you want to assert on click on the
screenshot that appears in the recording

00:01:23.719 --> 00:01:23.729
screenshot that appears in the recording
 

00:01:23.729 --> 00:01:25.670
screenshot that appears in the recording
window and choose between the assertion

00:01:25.670 --> 00:01:25.680
window and choose between the assertion
 

00:01:25.680 --> 00:01:28.219
window and choose between the assertion
type from view exists doesn't exist or

00:01:28.219 --> 00:01:28.229
type from view exists doesn't exist or
 

00:01:28.229 --> 00:01:30.260
type from view exists doesn't exist or
check that it contains the specified

00:01:30.260 --> 00:01:30.270
check that it contains the specified
 

00:01:30.270 --> 00:01:32.990
check that it contains the specified
text when you finished recording your

00:01:32.990 --> 00:01:33.000
text when you finished recording your
 

00:01:33.000 --> 00:01:35.060
text when you finished recording your
test the test recorder generates the

00:01:35.060 --> 00:01:35.070
test the test recorder generates the
 

00:01:35.070 --> 00:01:37.190
test the test recorder generates the
equivalent test code to run your actions

00:01:37.190 --> 00:01:37.200
equivalent test code to run your actions
 

00:01:37.200 --> 00:01:39.469
equivalent test code to run your actions
and assertions and puts it at a new file

00:01:39.469 --> 00:01:39.479
and assertions and puts it at a new file
 

00:01:39.479 --> 00:01:41.300
and assertions and puts it at a new file
in your projects instrumentation test

00:01:41.300 --> 00:01:41.310
in your projects instrumentation test
 

00:01:41.310 --> 00:01:44.330
in your projects instrumentation test
folder it also checks if your build file

00:01:44.330 --> 00:01:44.340
folder it also checks if your build file
 

00:01:44.340 --> 00:01:45.770
folder it also checks if your build file
contains the required especial

00:01:45.770 --> 00:01:45.780
contains the required especial
 

00:01:45.780 --> 00:01:48.460
contains the required especial
dependencies and adds those is needed

00:01:48.460 --> 00:01:48.470
dependencies and adds those is needed
 

00:01:48.470 --> 00:01:50.600
dependencies and adds those is needed
when you look at the source file that

00:01:50.600 --> 00:01:50.610
when you look at the source file that
 

00:01:50.610 --> 00:01:53.030
when you look at the source file that
espresso test recorder created you will

00:01:53.030 --> 00:01:53.040
espresso test recorder created you will
 

00:01:53.040 --> 00:01:54.710
espresso test recorder created you will
see that it's perfectly normal human

00:01:54.710 --> 00:01:54.720
see that it's perfectly normal human
 

00:01:54.720 --> 00:01:56.959
see that it's perfectly normal human
readable code so if you need to further

00:01:56.959 --> 00:01:56.969
readable code so if you need to further
 

00:01:56.969 --> 00:01:59.240
readable code so if you need to further
customize your tests or alter them when

00:01:59.240 --> 00:01:59.250
customize your tests or alter them when
 

00:01:59.250 --> 00:02:01.490
customize your tests or alter them when
your app changes you can simply open the

00:02:01.490 --> 00:02:01.500
your app changes you can simply open the
 

00:02:01.500 --> 00:02:03.499
your app changes you can simply open the
file again and make the alterations you

00:02:03.499 --> 00:02:03.509
file again and make the alterations you
 

00:02:03.509 --> 00:02:06.319
file again and make the alterations you
need as you can see the special test

00:02:06.319 --> 00:02:06.329
need as you can see the special test
 

00:02:06.329 --> 00:02:08.690
need as you can see the special test
recorder is very simple to use but it

00:02:08.690 --> 00:02:08.700
recorder is very simple to use but it
 

00:02:08.700 --> 00:02:11.300
recorder is very simple to use but it
does come with some limitations as of

00:02:11.300 --> 00:02:11.310
does come with some limitations as of
 

00:02:11.310 --> 00:02:13.370
does come with some limitations as of
Android studio 2.3 only

00:02:13.370 --> 00:02:13.380
Android studio 2.3 only
 

00:02:13.380 --> 00:02:15.260
Android studio 2.3 only
see most common assertions are available

00:02:15.260 --> 00:02:15.270
see most common assertions are available
 

00:02:15.270 --> 00:02:17.540
see most common assertions are available
through the recorder you I see if you

00:02:17.540 --> 00:02:17.550
through the recorder you I see if you
 

00:02:17.550 --> 00:02:19.220
through the recorder you I see if you
need anything more complicated than that

00:02:19.220 --> 00:02:19.230
need anything more complicated than that
 

00:02:19.230 --> 00:02:21.230
need anything more complicated than that
you will need to edit the generated code

00:02:21.230 --> 00:02:21.240
you will need to edit the generated code
 

00:02:21.240 --> 00:02:24.470
you will need to edit the generated code
by hand also at this stage the test

00:02:24.470 --> 00:02:24.480
by hand also at this stage the test
 

00:02:24.480 --> 00:02:26.600
by hand also at this stage the test
recorder cannot handle all situations

00:02:26.600 --> 00:02:26.610
recorder cannot handle all situations
 

00:02:26.610 --> 00:02:28.910
recorder cannot handle all situations
where additional synchronization is

00:02:28.910 --> 00:02:28.920
where additional synchronization is
 

00:02:28.920 --> 00:02:31.040
where additional synchronization is
needed to deal with delays and async

00:02:31.040 --> 00:02:31.050
needed to deal with delays and async
 

00:02:31.050 --> 00:02:33.980
needed to deal with delays and async
operations in your app I highly

00:02:33.980 --> 00:02:33.990
operations in your app I highly
 

00:02:33.990 --> 00:02:35.210
operations in your app I highly
recommend getting familiar with the

00:02:35.210 --> 00:02:35.220
recommend getting familiar with the
 

00:02:35.220 --> 00:02:37.970
recommend getting familiar with the
espresso idling resource API and using

00:02:37.970 --> 00:02:37.980
espresso idling resource API and using
 

00:02:37.980 --> 00:02:39.740
espresso idling resource API and using
that in your tests to signal what a

00:02:39.740 --> 00:02:39.750
that in your tests to signal what a
 

00:02:39.750 --> 00:02:42.860
that in your tests to signal what a
long-running operation happens for

00:02:42.860 --> 00:02:42.870
long-running operation happens for
 

00:02:42.870 --> 00:02:44.420
long-running operation happens for
advanced users who want to tweak some

00:02:44.420 --> 00:02:44.430
advanced users who want to tweak some
 

00:02:44.430 --> 00:02:46.730
advanced users who want to tweak some
aspects of test cogeneration there's a

00:02:46.730 --> 00:02:46.740
aspects of test cogeneration there's a
 

00:02:46.740 --> 00:02:48.650
aspects of test cogeneration there's a
settings page for the test recorder in

00:02:48.650 --> 00:02:48.660
settings page for the test recorder in
 

00:02:48.660 --> 00:02:51.620
settings page for the test recorder in
androids to your preferences here you

00:02:51.620 --> 00:02:51.630
androids to your preferences here you
 

00:02:51.630 --> 00:02:53.330
androids to your preferences here you
can change the maximum view hierarchy

00:02:53.330 --> 00:02:53.340
can change the maximum view hierarchy
 

00:02:53.340 --> 00:02:54.980
can change the maximum view hierarchy
depth that will be used for view

00:02:54.980 --> 00:02:54.990
depth that will be used for view
 

00:02:54.990 --> 00:02:57.440
depth that will be used for view
identification and if app data should be

00:02:57.440 --> 00:02:57.450
identification and if app data should be
 

00:02:57.450 --> 00:02:59.980
identification and if app data should be
cleared every time you record a new test

00:02:59.980 --> 00:02:59.990
cleared every time you record a new test
 

00:02:59.990 --> 00:03:02.750
cleared every time you record a new test
the espresso test recorder is a great

00:03:02.750 --> 00:03:02.760
the espresso test recorder is a great
 

00:03:02.760 --> 00:03:04.220
the espresso test recorder is a great
way to start adding tests to your app

00:03:04.220 --> 00:03:04.230
way to start adding tests to your app
 

00:03:04.230 --> 00:03:06.320
way to start adding tests to your app
whether you want to learn espresso by

00:03:06.320 --> 00:03:06.330
whether you want to learn espresso by
 

00:03:06.330 --> 00:03:08.750
whether you want to learn espresso by
examining the generated code or simply

00:03:08.750 --> 00:03:08.760
examining the generated code or simply
 

00:03:08.760 --> 00:03:10.790
examining the generated code or simply
to quickly build a test suite which you

00:03:10.790 --> 00:03:10.800
to quickly build a test suite which you
 

00:03:10.800 --> 00:03:13.400
to quickly build a test suite which you
can customize later we look forward to

00:03:13.400 --> 00:03:13.410
can customize later we look forward to
 

00:03:13.410 --> 00:03:15.080
can customize later we look forward to
your feedback on our social channels and

00:03:15.080 --> 00:03:15.090
your feedback on our social channels and
 

00:03:15.090 --> 00:03:18.530
your feedback on our social channels and
happy testing thanks for watching and

00:03:18.530 --> 00:03:18.540
happy testing thanks for watching and
 

00:03:18.540 --> 00:03:20.570
happy testing thanks for watching and
for more Android studio videos click

00:03:20.570 --> 00:03:20.580
for more Android studio videos click
 

00:03:20.580 --> 00:03:24.660
for more Android studio videos click
here

00:03:24.660 --> 00:03:24.670
 
 

00:03:24.670 --> 00:03:29.240
 
[Music]

