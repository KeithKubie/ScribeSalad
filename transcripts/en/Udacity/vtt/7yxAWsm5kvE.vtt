WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.000
Now back to our diagram. Let's figure out where we are.

00:00:03.000 --> 00:00:08.000
We did row_plays, so I can check off that bird. What's left?

00:00:08.000 --> 00:00:13.000
Well, now I want to be able to do all the plays--all the plays in all the rows and all the columns.

00:00:13.000 --> 00:00:17.000
Another thing I want to be able to do is--notice that I cheated a little bit.

00:00:17.000 --> 00:00:21.000
I engaged in wishful thinking, which is always a good design strategy,

00:00:21.000 --> 00:00:26.000
in that when I called row_plays, I gave it a hand and a row, but I made the row myself--

00:00:26.000 --> 00:00:31.000
built that sample row that I called a row by making a list and saying, okay,

00:00:31.000 --> 00:00:37.000
I know A is here, I know an anchor called MNX is here, and so on.

00:00:37.000 --> 00:00:39.000
I didn't have my program construct that row.

00:00:39.000 --> 00:00:43.000
All_plays is going to have to somehow do that type of construction.

00:00:43.000 --> 00:00:47.000
It's going to somehow have to set the anchors within the row rather than having me

00:00:47.000 --> 00:00:50.000
give them explicitly as test.

00:00:50.000 --> 00:00:53.000
Then just one more thing to deal with, which is scoring.

00:00:53.000 --> 00:00:57.000
After I've got all the plays, I want to be able to figure out how much each one scores

00:00:57.000 --> 00:00:59.000
and pick out the top-scoring play.

00:00:59.000 --> 00:01:03.000
I talked about pacing at the beginning of this. Now I'm starting to pick up the pace.

00:01:03.000 --> 00:01:05.000
I'm feeling pretty good now.

00:01:05.000 --> 00:01:10.000
I'm saying it was a long way, we had to run hard, but now I can start to see the finish line.

00:01:10.000 --> 00:01:13.000
We can put together one final sprint to get it all done.

00:01:13.000 --> 00:01:16.000
What do I want to do next? I want to handle complete boards, not just individual rows.

00:01:16.000 --> 00:01:21.000
Just as we did with rows where we made up a sample row, let's make a sample board.

00:01:21.000 --> 00:01:24.000
I define a function a_board, which returns a sample board.

00:01:24.000 --> 00:01:26.000
It's the same one we were dealing with here.

00:01:26.000 --> 00:01:30.000
Note that I'm making this a function rather than a variable definition.

00:01:30.000 --> 00:01:34.000
The reason I'm doing this is because every time I reference a_board

00:01:34.000 --> 00:01:37.000
I want to create a new one, and I want to create a new one,

00:01:37.000 --> 00:01:39.000
because I'm going to be modifying the old one.

00:01:39.000 --> 00:01:42.000
I'm going to be placing letters onto the board.

00:01:42.000 --> 00:01:47.000
I'm going to be inserting anchors into the board and modifying the board structure itself.

00:01:47.000 --> 00:01:50.000
I don't want to be dealing with the old one that I've already modified.

00:01:50.000 --> 00:01:52.000
I want to make sure I have a fresh one from scratch, and so Iâ€™m going to say

00:01:52.000 --> 00:01:55.000
the only way to access this is through the function.

00:01:55.000 --> 00:01:58.000
What it does is it takes these strings, maps list over each one.

00:01:58.000 --> 00:02:04.000
Rather than have this first row be a string, the first row will be then a list of characters.

00:02:04.000 --> 00:02:06.000
Same for all the other rows.

00:02:06.000 --> 00:02:08.000
There we can see when we call a_board we get this board,

00:02:08.000 --> 00:02:10.000
but that's not very pretty to look at.

00:02:10.000 --> 00:02:13.000
I'd rather look at something like this where here I've printed the results.

00:02:13.000 --> 00:02:17.000
Notice that I put spaces between each letter to make the board more square-like.

00:02:17.000 --> 00:02:22.000
What I'd like you to do is define a function show, which takes a board as input,

00:02:22.000 --> 00:02:27.000
print out the results, looking just like that, returns None as a value.

