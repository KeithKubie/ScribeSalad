WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.000
For this question,  your goal is to implement cipher block chaining.

00:00:03.000 --> 00:00:07.000
We've provided some code in the ID to get you started on this.

00:00:07.000 --> 00:00:09.000
Here's the function we want you to write.

00:00:09.000 --> 00:00:13.000
The inputs will be plaintext, which is just an array of bytes that needs to be encoded,

00:00:13.000 --> 00:00:17.000
key, which will be a bytes array to be used as the key for the block encoder,

00:00:17.000 --> 00:00:21.000
the initialization vector, the block size, and the block encoder.

00:00:21.000 --> 00:00:23.000
To reinforce the idea of a block box encoder,

00:00:23.000 --> 00:00:26.000
I've written 3 examples.

00:00:26.000 --> 00:00:29.000
The first 2, non&lt;u&gt;encoder and xor&lt;u&gt;encoder,&lt;/u&gt;&lt;/u&gt;

00:00:29.000 --> 00:00:33.000
are silly toy encoders, and the last one, aes&lt;u&gt;encoder,&lt;/u&gt;

00:00:33.000 --> 00:00:36.000
uses the pycrypto implementation of aes.

00:00:36.000 --> 00:00:38.000
Your code should work with all 3 of these encoders.

00:00:38.000 --> 99:59:59.000
Finally, there is a test function which you can use to test your implementation.

