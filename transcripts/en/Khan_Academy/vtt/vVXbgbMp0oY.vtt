WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.410
[TYPING]

00:00:04.410 --> 00:00:06.070
Consider the following.

00:00:06.070 --> 00:00:07.337
Imagine two rooms.

00:00:07.337 --> 00:00:07.920
[DOOR CLOSING]

00:00:07.920 --> 00:00:08.630
[DOOR CLOSING]

00:00:08.630 --> 00:00:10.375
Inside each room is a switch.

00:00:10.375 --> 00:00:11.206
[CLICK]

00:00:11.206 --> 00:00:13.150
[CLICK]

00:00:13.150 --> 00:00:16.190
In one room, there is a man
who flips his switch according

00:00:16.190 --> 00:00:17.590
to a coin flip.

00:00:17.590 --> 00:00:19.785
If he lands heads,
the switch is on.

00:00:19.785 --> 00:00:22.540
If he lands tails,
the switch is off.

00:00:22.540 --> 00:00:24.720
In the other room, a
woman switches her light

00:00:24.720 --> 00:00:26.410
based on a blind guess.

00:00:26.410 --> 00:00:29.910
She tries to simulate
randomness without a coin.

00:00:29.910 --> 00:00:34.180
Then we start a clock, and they
make their switches in unison.

00:00:34.180 --> 00:00:36.060
[CLICK]

00:00:36.060 --> 00:00:37.470
[CLICK]

00:00:37.470 --> 00:00:38.410
[CLICK]

00:00:38.410 --> 00:00:39.820
[CLICK]

00:00:39.820 --> 00:00:41.560
Can you determine
which light bulb

00:00:41.560 --> 00:00:43.590
is being switched
by a coin flip?

00:00:43.590 --> 00:00:44.898
[CLICK]

00:00:44.898 --> 00:00:46.310
[CLICK]

00:00:46.310 --> 00:00:47.762
[CLICK]

00:00:47.762 --> 00:00:48.730
[CLICK]

00:00:48.730 --> 00:00:51.534
The answer is yes, but how?

00:00:51.534 --> 00:00:53.016
[CLICK]

00:00:53.016 --> 00:00:54.004
[CLICK]

00:00:54.004 --> 00:00:55.486
[CLICK]

00:00:59.440 --> 00:01:02.800
And the trick is to think about
properties of each sequence

00:01:02.800 --> 00:01:05.900
rather than looking for
any specific patterns.

00:01:05.900 --> 00:01:07.980
For example, first,
we may try to count

00:01:07.980 --> 00:01:11.510
the number of 1's and 0's
which occur in each sequence.

00:01:11.510 --> 00:01:13.360
This is close, but
not enough since they

00:01:13.360 --> 00:01:16.230
will both seem fairly even.

00:01:16.230 --> 00:01:20.550
The answer is to count sequences
of numbers, such as runs

00:01:20.550 --> 00:01:22.900
of three consecutive switches.

00:01:22.900 --> 00:01:25.020
A true random sequence
will be equally

00:01:25.020 --> 00:01:28.960
likely to contain every
sequence of any length.

00:01:28.960 --> 00:01:31.960
This is called the
frequency stability property

00:01:31.960 --> 00:01:35.080
and is demonstrated
by this uniform graph.

00:01:35.080 --> 00:01:37.730
The forgery is now obvious.

00:01:37.730 --> 00:01:40.490
Humans favor certain sequences
when they make guesses,

00:01:40.490 --> 00:01:43.750
resulting in uneven patterns
such as we see here.

00:01:43.750 --> 00:01:45.440
One reason this
happens is because we

00:01:45.440 --> 00:01:47.590
make the mistake of
thinking certain outcomes

00:01:47.590 --> 00:01:49.670
are less random than others.

00:01:49.670 --> 00:01:53.640
But realize, there is no
such thing as a lucky number.

00:01:53.640 --> 00:01:57.040
There is no such thing
as a lucky sequence.

00:01:57.040 --> 00:01:59.330
If we flip a coin
10 times, it is

00:01:59.330 --> 00:02:02.340
equally likely to come
up all heads, all tails,

00:02:02.340 --> 00:02:05.510
or any other sequence
you can think of.

00:02:05.510 --> 00:02:06.410
[CLICK]

00:02:06.410 --> 00:02:09.760
[CRICKETS CHIRPING]

