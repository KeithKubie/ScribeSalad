WEBVTT
Kind: captions
Language: en

00:00:00.445 --> 00:00:01.385
- [Voiceover] So in the last video,

00:00:01.385 --> 00:00:03.104
I talked about vector
fields in the context

00:00:03.104 --> 00:00:06.064
of two dimensions, and here,
I'd like to do the same

00:00:06.064 --> 00:00:07.666
but for three-dimensions.

00:00:07.666 --> 00:00:09.570
So a three-dimensional vector field

00:00:09.570 --> 00:00:12.902
is given by a function, a
certain multi-variable function

00:00:12.902 --> 00:00:14.690
that has a three-dimensional input

00:00:14.690 --> 00:00:16.769
given with coordinates x, y and z,

00:00:16.769 --> 00:00:19.683
and then a three-dimensional vector output

00:00:19.683 --> 00:00:21.784
that has expressions that
are somehow dependent

00:00:21.784 --> 00:00:23.781
on x, y, and z, I'll just
put dots in here for now,

00:00:23.781 --> 00:00:26.207
but we'll fill this in with
an example in just a moment.

00:00:26.207 --> 00:00:27.426
And the way that this works,

00:00:27.426 --> 00:00:29.110
just like with the
two-dimensinal vector field,

00:00:29.110 --> 00:00:31.246
you're gonna choose a
sample of various points

00:00:31.246 --> 00:00:32.941
in three-dimensional space.

00:00:32.941 --> 00:00:34.411
And for each one of those points,

00:00:34.411 --> 00:00:36.849
you consider what the
output of the function is

00:00:36.849 --> 00:00:38.985
and that's gonna be some
three-dimensional vector.

00:00:38.985 --> 00:00:42.770
And you draw that vector
off of the point itself.

00:00:42.770 --> 00:00:46.572
So to start off, let's
take a very simple example,

00:00:46.572 --> 00:00:50.108
one where the vector that outputs

00:00:50.108 --> 00:00:52.070
is actually just a constant.

00:00:52.070 --> 00:00:54.705
So in this case, I'll make
that constant the vector,

00:00:54.705 --> 00:00:57.585
one, zero, zero.

00:00:57.585 --> 00:01:00.568
So what this vector is,
it's just got a unit lenth

00:01:00.568 --> 00:01:03.482
in the x direction, so this is the x axis.

00:01:03.482 --> 00:01:05.909
So all of the vectors
are gonna end up looking

00:01:05.909 --> 00:01:07.785
something like this where it's a vector

00:01:07.785 --> 00:01:10.722
that has length one in the x direction.

00:01:10.722 --> 00:01:14.182
And when we do this, at
every possible point,

00:01:14.182 --> 00:01:15.378
well not every possible point,

00:01:15.378 --> 00:01:20.006
but a sample of a whole bunch of points,

00:01:20.006 --> 00:01:22.692
we get a vector field
that looks like this.

00:01:22.692 --> 00:01:24.967
At any given point in space,

00:01:24.967 --> 00:01:26.349
we get one of these little blue vectors

00:01:26.349 --> 00:01:27.754
and all of them are the same,

00:01:27.754 --> 00:01:29.170
they're just copies of each other,

00:01:29.170 --> 00:01:33.895
each pointing with unit
length in the x direction.

00:01:33.895 --> 00:01:38.307
So as vector fields go,
this is relatively boring,

00:01:38.307 --> 00:01:39.967
but we can make it a
little bit more exciting

00:01:39.967 --> 00:01:43.392
if we make the input
start to depend somehow

00:01:43.392 --> 00:01:44.588
on the actual input.

00:01:44.588 --> 00:01:48.489
So what I'll do to start,
I'll just make the input

00:01:48.489 --> 00:01:49.952
y, zero, zero.

00:01:49.952 --> 00:01:51.833
So they're still just gonna
point in the x direction,

00:01:51.833 --> 00:01:53.888
but now it's gonna depend on the y value.

00:01:53.888 --> 00:01:56.872
So let's think of a second
before I change the image,

00:01:56.872 --> 00:01:58.207
what that's gonna mean.

00:01:58.207 --> 00:01:59.867
The y axis is this one here,

00:01:59.867 --> 00:02:01.910
so now the z axis is pointing
straight in our face,

00:02:01.910 --> 00:02:03.327
that's the y.

00:02:03.327 --> 00:02:07.228
So as y increases value
to one, two, three,

00:02:07.228 --> 00:02:09.689
the length of these
vectors are gonna increase,

00:02:09.689 --> 00:02:11.547
it's gonna be a stronger
vector in the x direction,

00:02:11.547 --> 00:02:13.590
a very strong vector in the x direction.

00:02:13.590 --> 00:02:16.028
And if y is negative, these
vectors are gonna point

00:02:16.028 --> 00:02:17.456
in the opposite direction.

00:02:17.456 --> 00:02:21.090
So let's see what that looks like.

00:02:21.090 --> 00:02:22.146
Here we go.

00:02:22.146 --> 00:02:24.817
So in this vector field, color and length

00:02:24.817 --> 00:02:28.277
are used to indicate the
magnitude of the vector.

00:02:28.277 --> 00:02:29.890
So red vectors are very long,

00:02:29.890 --> 00:02:30.993
blue vectors are pretty short,

00:02:30.993 --> 00:02:32.189
and at zero, we don't even see any

00:02:32.189 --> 00:02:35.556
because those are
vectors with zero length.

00:02:35.556 --> 00:02:37.588
And just like with two
dimensional vector fields,

00:02:37.588 --> 00:02:39.596
when you draw them, you lie a little bit.

00:02:39.596 --> 00:02:41.895
This one should have a
length of one, right?

00:02:41.895 --> 00:02:43.532
Because when y is equal to one,

00:02:43.532 --> 00:02:44.856
this should have a unit length,

00:02:44.856 --> 00:02:46.307
but it's made really, really small.

00:02:46.307 --> 00:02:49.267
And this one up here,
where y is five or six,

00:02:49.267 --> 00:02:50.951
should be a really long vector,

00:02:50.951 --> 00:02:52.274
but we're lying a little bit

00:02:52.274 --> 00:02:54.248
because if we actually drew them to scale,

00:02:54.248 --> 00:02:56.593
it would really clutter up the image.

00:02:56.593 --> 00:02:58.927
So a couple things to
notice about this one,

00:02:58.927 --> 00:03:02.607
since the output doesn't depend on x or z,

00:03:02.607 --> 00:03:04.175
if you move in the x direction,

00:03:04.175 --> 00:03:05.626
which is back and forth here,

00:03:05.626 --> 00:03:06.868
the vectors don't change.

00:03:06.868 --> 00:03:08.192
And if you move in the z direction

00:03:08.192 --> 00:03:11.013
which is up and down, the
vectors also don't change.

00:03:11.013 --> 00:03:14.275
They only change as you
move in the y direction.

00:03:14.275 --> 00:03:16.957
Okay, so we're starting to
get a feel for how the output

00:03:16.957 --> 00:03:18.432
can depend on the input.

00:03:18.432 --> 00:03:23.273
Now let's do something
a little bit different.

00:03:23.273 --> 00:03:24.736
Let's say that all three of the components

00:03:24.736 --> 00:03:27.789
of the input depend on x, y, and z,

00:03:27.789 --> 00:03:30.587
but I'm just gonna make it
kind of an identity function.

00:03:30.587 --> 00:03:32.329
At a given point x, y, z,

00:03:32.329 --> 00:03:35.336
you output the vector itself, x, y, z.

00:03:35.336 --> 00:03:37.855
So let's think about what
this would actually mean.

00:03:37.855 --> 00:03:39.906
And let's say you've got a given point,

00:03:39.906 --> 00:03:42.553
some point floating off in space.

00:03:42.553 --> 00:03:44.654
What is the output vector for that?

00:03:44.654 --> 00:03:46.442
Well the point has a certain x component,

00:03:46.442 --> 00:03:49.867
a certain y component, and a z component.

00:03:49.867 --> 00:03:52.665
And the vector that corresponds to x, y, z

00:03:52.665 --> 00:03:56.787
is gonna be the one from the
origin to that point itself.

00:03:56.787 --> 00:03:58.726
Let me just draw that here

00:03:58.726 --> 00:04:01.698
from the origin to the point itself.

00:04:01.698 --> 00:04:03.486
And because of how we do vector fields,

00:04:03.486 --> 00:04:06.481
you move this so that instead
of stemming from the origin,

00:04:06.481 --> 00:04:09.418
it actually stems from the point.

00:04:09.418 --> 00:04:11.288
But the main thing to take away from here

00:04:11.288 --> 00:04:14.167
is it's gonna point directly
away from the origin.

00:04:14.167 --> 00:04:15.618
And the farther away the point is,

00:04:15.618 --> 00:04:17.557
the longer this vector will be.

00:04:17.557 --> 00:04:22.312
So with that, let's take a look
at the vector field itself.

00:04:23.559 --> 00:04:25.045
Here we go.

00:04:25.045 --> 00:04:27.727
So again, you kind of
lie when you draw these.

00:04:27.727 --> 00:04:30.247
Like the vectors, these red
guys that are out at the end,

00:04:30.247 --> 00:04:31.466
they should be really long

00:04:31.466 --> 00:04:33.881
'cause this vector should
be as long as that point is

00:04:33.881 --> 00:04:35.599
away from the origin.

00:04:35.599 --> 00:04:37.782
But to give a cleaner vector field,

00:04:37.782 --> 00:04:40.522
you scale things down,
and notice the blue ones

00:04:40.522 --> 00:04:41.779
that are close to the center here,

00:04:41.779 --> 00:04:44.290
are actually really, really short guys.

00:04:44.290 --> 00:04:47.807
And all of these are pointing
directly away from the origin.

00:04:47.807 --> 00:04:48.968
And this is one of those vector fields

00:04:48.968 --> 00:04:50.106
that is actually pretty,

00:04:50.106 --> 00:04:52.660
a good one to have a strong intuition of

00:04:52.660 --> 00:04:53.879
'cause it comes up now and then,

00:04:53.879 --> 00:04:55.720
thinking about what the
identity function looks like

00:04:55.720 --> 00:04:57.993
as a vector field itself.

00:04:57.993 --> 00:05:00.372
In the next video, I'll
talk through another example

00:05:00.372 --> 00:05:02.496
that's a little bit more
complicated than this

00:05:02.496 --> 00:05:04.516
and can hopefully give
an even stronger feel

00:05:04.516 --> 00:05:08.702
for how the output can
depend on x, y, and z.

