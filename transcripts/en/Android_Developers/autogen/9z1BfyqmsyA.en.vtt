WEBVTT
Kind: captions
Language: en

00:00:08.059 --> 00:00:10.430
hi my name is reto Meier and I'm the

00:00:10.430 --> 00:00:10.440
hi my name is reto Meier and I'm the
 

00:00:10.440 --> 00:00:12.169
hi my name is reto Meier and I'm the
tech lead for Google's Android developer

00:00:12.169 --> 00:00:12.179
tech lead for Google's Android developer
 

00:00:12.179 --> 00:00:14.480
tech lead for Google's Android developer
relations team this efficient data

00:00:14.480 --> 00:00:14.490
relations team this efficient data
 

00:00:14.490 --> 00:00:16.220
relations team this efficient data
transfers dev byte is going to look at

00:00:16.220 --> 00:00:16.230
transfers dev byte is going to look at
 

00:00:16.230 --> 00:00:17.720
transfers dev byte is going to look at
techniques that you can use to reduce

00:00:17.720 --> 00:00:17.730
techniques that you can use to reduce
 

00:00:17.730 --> 00:00:19.340
techniques that you can use to reduce
the battery drain of your app without

00:00:19.340 --> 00:00:19.350
the battery drain of your app without
 

00:00:19.350 --> 00:00:21.170
the battery drain of your app without
affecting the freshness of your data by

00:00:21.170 --> 00:00:21.180
affecting the freshness of your data by
 

00:00:21.180 --> 00:00:23.000
affecting the freshness of your data by
adapting the frequency of your updates

00:00:23.000 --> 00:00:23.010
adapting the frequency of your updates
 

00:00:23.010 --> 00:00:26.000
adapting the frequency of your updates
based on context in other devbytes I've

00:00:26.000 --> 00:00:26.010
based on context in other devbytes I've
 

00:00:26.010 --> 00:00:27.500
based on context in other devbytes I've
explored ways to analyze your apps

00:00:27.500 --> 00:00:27.510
explored ways to analyze your apps
 

00:00:27.510 --> 00:00:29.570
explored ways to analyze your apps
transfer profile and optimize it using

00:00:29.570 --> 00:00:29.580
transfer profile and optimize it using
 

00:00:29.580 --> 00:00:31.279
transfer profile and optimize it using
techniques like prefetching bundling and

00:00:31.279 --> 00:00:31.289
techniques like prefetching bundling and
 

00:00:31.289 --> 00:00:33.190
techniques like prefetching bundling and
sync adapters and Google Cloud messaging

00:00:33.190 --> 00:00:33.200
sync adapters and Google Cloud messaging
 

00:00:33.200 --> 00:00:35.600
sync adapters and Google Cloud messaging
the goal is to ensure that you never

00:00:35.600 --> 00:00:35.610
the goal is to ensure that you never
 

00:00:35.610 --> 00:00:37.610
the goal is to ensure that you never
initiate a transfer that isn't related

00:00:37.610 --> 00:00:37.620
initiate a transfer that isn't related
 

00:00:37.620 --> 00:00:40.430
initiate a transfer that isn't related
to required data sync but if you have

00:00:40.430 --> 00:00:40.440
to required data sync but if you have
 

00:00:40.440 --> 00:00:42.590
to required data sync but if you have
server data that changes rapidly such as

00:00:42.590 --> 00:00:42.600
server data that changes rapidly such as
 

00:00:42.600 --> 00:00:44.360
server data that changes rapidly such as
breaking news weather or sports scores

00:00:44.360 --> 00:00:44.370
breaking news weather or sports scores
 

00:00:44.370 --> 00:00:46.729
breaking news weather or sports scores
creating an update every time there's an

00:00:46.729 --> 00:00:46.739
creating an update every time there's an
 

00:00:46.739 --> 00:00:48.170
creating an update every time there's an
update on the server is still going to

00:00:48.170 --> 00:00:48.180
update on the server is still going to
 

00:00:48.180 --> 00:00:50.240
update on the server is still going to
tax your servers and drain your users

00:00:50.240 --> 00:00:50.250
tax your servers and drain your users
 

00:00:50.250 --> 00:00:52.430
tax your servers and drain your users
battery particularly when your app is in

00:00:52.430 --> 00:00:52.440
battery particularly when your app is in
 

00:00:52.440 --> 00:00:54.229
battery particularly when your app is in
the background now the aim of this

00:00:54.229 --> 00:00:54.239
the background now the aim of this
 

00:00:54.239 --> 00:00:55.790
the background now the aim of this
devbyte us to go beyond limiting

00:00:55.790 --> 00:00:55.800
devbyte us to go beyond limiting
 

00:00:55.800 --> 00:00:57.770
devbyte us to go beyond limiting
transfers to win their valid and start

00:00:57.770 --> 00:00:57.780
transfers to win their valid and start
 

00:00:57.780 --> 00:00:59.750
transfers to win their valid and start
considering device state user behavior

00:00:59.750 --> 00:00:59.760
considering device state user behavior
 

00:00:59.760 --> 00:01:01.580
considering device state user behavior
and impact on the user experience to

00:01:01.580 --> 00:01:01.590
and impact on the user experience to
 

00:01:01.590 --> 00:01:02.900
and impact on the user experience to
minimize the number of updates that we

00:01:02.900 --> 00:01:02.910
minimize the number of updates that we
 

00:01:02.910 --> 00:01:05.420
minimize the number of updates that we
actually perform in my dev byte on

00:01:05.420 --> 00:01:05.430
actually perform in my dev byte on
 

00:01:05.430 --> 00:01:06.980
actually perform in my dev byte on
Google Cloud messaging you learned that

00:01:06.980 --> 00:01:06.990
Google Cloud messaging you learned that
 

00:01:06.990 --> 00:01:08.690
Google Cloud messaging you learned that
you can set your server messages to be

00:01:08.690 --> 00:01:08.700
you can set your server messages to be
 

00:01:08.700 --> 00:01:10.940
you can set your server messages to be
delayed when the device is idle as a

00:01:10.940 --> 00:01:10.950
delayed when the device is idle as a
 

00:01:10.950 --> 00:01:12.620
delayed when the device is idle as a
result your messages will be queued and

00:01:12.620 --> 00:01:12.630
result your messages will be queued and
 

00:01:12.630 --> 00:01:14.630
result your messages will be queued and
that queue is collapsed so that when

00:01:14.630 --> 00:01:14.640
that queue is collapsed so that when
 

00:01:14.640 --> 00:01:16.820
that queue is collapsed so that when
your app only receives one message when

00:01:16.820 --> 00:01:16.830
your app only receives one message when
 

00:01:16.830 --> 00:01:19.700
your app only receives one message when
the device becomes active now that's a

00:01:19.700 --> 00:01:19.710
the device becomes active now that's a
 

00:01:19.710 --> 00:01:21.260
the device becomes active now that's a
useful start as it prevents multiple

00:01:21.260 --> 00:01:21.270
useful start as it prevents multiple
 

00:01:21.270 --> 00:01:22.429
useful start as it prevents multiple
updates from happening when the user

00:01:22.429 --> 00:01:22.439
updates from happening when the user
 

00:01:22.439 --> 00:01:25.280
updates from happening when the user
isn't actually using the device in other

00:01:25.280 --> 00:01:25.290
isn't actually using the device in other
 

00:01:25.290 --> 00:01:27.679
isn't actually using the device in other
devbytes we've on using the sync adapter

00:01:27.679 --> 00:01:27.689
devbytes we've on using the sync adapter
 

00:01:27.689 --> 00:01:30.200
devbytes we've on using the sync adapter
you saw how to group all of your apps

00:01:30.200 --> 00:01:30.210
you saw how to group all of your apps
 

00:01:30.210 --> 00:01:31.730
you saw how to group all of your apps
transfer methods within your sync

00:01:31.730 --> 00:01:31.740
transfer methods within your sync
 

00:01:31.740 --> 00:01:34.399
transfer methods within your sync
adapters on perform sync method a sync

00:01:34.399 --> 00:01:34.409
adapters on perform sync method a sync
 

00:01:34.409 --> 00:01:35.990
adapters on perform sync method a sync
adapter can be triggered a number of

00:01:35.990 --> 00:01:36.000
adapter can be triggered a number of
 

00:01:36.000 --> 00:01:38.149
adapter can be triggered a number of
ways including GCM tickles client-side

00:01:38.149 --> 00:01:38.159
ways including GCM tickles client-side
 

00:01:38.159 --> 00:01:40.550
ways including GCM tickles client-side
changes scheduled updates or user

00:01:40.550 --> 00:01:40.560
changes scheduled updates or user
 

00:01:40.560 --> 00:01:42.469
changes scheduled updates or user
actions like selecting a new song or

00:01:42.469 --> 00:01:42.479
actions like selecting a new song or
 

00:01:42.479 --> 00:01:43.700
actions like selecting a new song or
browsing an article that hasn't been

00:01:43.700 --> 00:01:43.710
browsing an article that hasn't been
 

00:01:43.710 --> 00:01:46.219
browsing an article that hasn't been
prefetched within our perform sync

00:01:46.219 --> 00:01:46.229
prefetched within our perform sync
 

00:01:46.229 --> 00:01:47.719
prefetched within our perform sync
handle we need to determine which of

00:01:47.719 --> 00:01:47.729
handle we need to determine which of
 

00:01:47.729 --> 00:01:49.100
handle we need to determine which of
these triggers are sufficient to

00:01:49.100 --> 00:01:49.110
these triggers are sufficient to
 

00:01:49.110 --> 00:01:52.069
these triggers are sufficient to
initiate a new transfer starting with

00:01:52.069 --> 00:01:52.079
initiate a new transfer starting with
 

00:01:52.079 --> 00:01:54.950
initiate a new transfer starting with
scheduled updates periodic updates are a

00:01:54.950 --> 00:01:54.960
scheduled updates periodic updates are a
 

00:01:54.960 --> 00:01:56.899
scheduled updates periodic updates are a
great way to ensure your app never seem

00:01:56.899 --> 00:01:56.909
great way to ensure your app never seem
 

00:01:56.909 --> 00:01:58.999
great way to ensure your app never seem
stale and and that users aren't left

00:01:58.999 --> 00:01:59.009
stale and and that users aren't left
 

00:01:59.009 --> 00:02:00.590
stale and and that users aren't left
waiting for significant amounts of data

00:02:00.590 --> 00:02:00.600
waiting for significant amounts of data
 

00:02:00.600 --> 00:02:02.719
waiting for significant amounts of data
to be synced every time you open their

00:02:02.719 --> 00:02:02.729
to be synced every time you open their
 

00:02:02.729 --> 00:02:05.359
to be synced every time you open their
app of course it's stale is relative not

00:02:05.359 --> 00:02:05.369
app of course it's stale is relative not
 

00:02:05.369 --> 00:02:06.920
app of course it's stale is relative not
only to the type of data that your app

00:02:06.920 --> 00:02:06.930
only to the type of data that your app
 

00:02:06.930 --> 00:02:09.380
only to the type of data that your app
displays but also how frequently a user

00:02:09.380 --> 00:02:09.390
displays but also how frequently a user
 

00:02:09.390 --> 00:02:11.570
displays but also how frequently a user
opens your app periodic updates work

00:02:11.570 --> 00:02:11.580
opens your app periodic updates work
 

00:02:11.580 --> 00:02:13.280
opens your app periodic updates work
well for apps like news readers where

00:02:13.280 --> 00:02:13.290
well for apps like news readers where
 

00:02:13.290 --> 00:02:13.920
well for apps like news readers where
the frequent

00:02:13.920 --> 00:02:13.930
the frequent
 

00:02:13.930 --> 00:02:16.199
the frequent
you've news articles makes sending a GCM

00:02:16.199 --> 00:02:16.209
you've news articles makes sending a GCM
 

00:02:16.209 --> 00:02:17.880
you've news articles makes sending a GCM
message to every app whenever new

00:02:17.880 --> 00:02:17.890
message to every app whenever new
 

00:02:17.890 --> 00:02:19.920
message to every app whenever new
articles are available massive overkill

00:02:19.920 --> 00:02:19.930
articles are available massive overkill
 

00:02:19.930 --> 00:02:22.140
articles are available massive overkill
and the freshness of news isn't critical

00:02:22.140 --> 00:02:22.150
and the freshness of news isn't critical
 

00:02:22.150 --> 00:02:23.970
and the freshness of news isn't critical
unless the user happens to be actively

00:02:23.970 --> 00:02:23.980
unless the user happens to be actively
 

00:02:23.980 --> 00:02:26.339
unless the user happens to be actively
browsing it in this case performing a

00:02:26.339 --> 00:02:26.349
browsing it in this case performing a
 

00:02:26.349 --> 00:02:28.289
browsing it in this case performing a
background refresh every hour might be a

00:02:28.289 --> 00:02:28.299
background refresh every hour might be a
 

00:02:28.299 --> 00:02:30.420
background refresh every hour might be a
reasonable approach for users who open

00:02:30.420 --> 00:02:30.430
reasonable approach for users who open
 

00:02:30.430 --> 00:02:32.190
reasonable approach for users who open
the app several times a day as it

00:02:32.190 --> 00:02:32.200
the app several times a day as it
 

00:02:32.200 --> 00:02:33.750
the app several times a day as it
ensures that they see fresh headlines

00:02:33.750 --> 00:02:33.760
ensures that they see fresh headlines
 

00:02:33.760 --> 00:02:36.030
ensures that they see fresh headlines
every time they open the app even if the

00:02:36.030 --> 00:02:36.040
every time they open the app even if the
 

00:02:36.040 --> 00:02:37.530
every time they open the app even if the
device hasn't been online for a while

00:02:37.530 --> 00:02:37.540
device hasn't been online for a while
 

00:02:37.540 --> 00:02:39.959
device hasn't been online for a while
but it's wasteful for a user who only

00:02:39.959 --> 00:02:39.969
but it's wasteful for a user who only
 

00:02:39.969 --> 00:02:41.520
but it's wasteful for a user who only
reads the news headlines once each

00:02:41.520 --> 00:02:41.530
reads the news headlines once each
 

00:02:41.530 --> 00:02:43.589
reads the news headlines once each
morning now you can mitigate this by

00:02:43.589 --> 00:02:43.599
morning now you can mitigate this by
 

00:02:43.599 --> 00:02:45.569
morning now you can mitigate this by
reducing the background update frequency

00:02:45.569 --> 00:02:45.579
reducing the background update frequency
 

00:02:45.579 --> 00:02:48.390
reducing the background update frequency
based on the recency of app usage in

00:02:48.390 --> 00:02:48.400
based on the recency of app usage in
 

00:02:48.400 --> 00:02:50.580
based on the recency of app usage in
this snippet we check to see if the app

00:02:50.580 --> 00:02:50.590
this snippet we check to see if the app
 

00:02:50.590 --> 00:02:52.199
this snippet we check to see if the app
has been open since the last time we

00:02:52.199 --> 00:02:52.209
has been open since the last time we
 

00:02:52.209 --> 00:02:54.449
has been open since the last time we
performed a refresh if not we double the

00:02:54.449 --> 00:02:54.459
performed a refresh if not we double the
 

00:02:54.459 --> 00:02:57.149
performed a refresh if not we double the
period between refreshes now each time

00:02:57.149 --> 00:02:57.159
period between refreshes now each time
 

00:02:57.159 --> 00:02:59.220
period between refreshes now each time
the app is open we reset that counter so

00:02:59.220 --> 00:02:59.230
the app is open we reset that counter so
 

00:02:59.230 --> 00:03:01.559
the app is open we reset that counter so
as a result your app has fresher data

00:03:01.559 --> 00:03:01.569
as a result your app has fresher data
 

00:03:01.569 --> 00:03:03.809
as a result your app has fresher data
for regular users while those who open

00:03:03.809 --> 00:03:03.819
for regular users while those who open
 

00:03:03.819 --> 00:03:06.750
for regular users while those who open
the app only once a day or once a week

00:03:06.750 --> 00:03:06.760
the app only once a day or once a week
 

00:03:06.760 --> 00:03:09.629
the app only once a day or once a week
I saved the resulting battery drain now

00:03:09.629 --> 00:03:09.639
I saved the resulting battery drain now
 

00:03:09.639 --> 00:03:10.920
I saved the resulting battery drain now
if you're reducing the frequency of

00:03:10.920 --> 00:03:10.930
if you're reducing the frequency of
 

00:03:10.930 --> 00:03:12.750
if you're reducing the frequency of
updates to reduce the battery hungry use

00:03:12.750 --> 00:03:12.760
updates to reduce the battery hungry use
 

00:03:12.760 --> 00:03:15.030
updates to reduce the battery hungry use
of the cell radio we might be able to

00:03:15.030 --> 00:03:15.040
of the cell radio we might be able to
 

00:03:15.040 --> 00:03:16.860
of the cell radio we might be able to
mitigate some of these choices based on

00:03:16.860 --> 00:03:16.870
mitigate some of these choices based on
 

00:03:16.870 --> 00:03:18.750
mitigate some of these choices based on
the current battery level charging state

00:03:18.750 --> 00:03:18.760
the current battery level charging state
 

00:03:18.760 --> 00:03:21.360
the current battery level charging state
and our connectivity type it's generally

00:03:21.360 --> 00:03:21.370
and our connectivity type it's generally
 

00:03:21.370 --> 00:03:22.860
and our connectivity type it's generally
good practice to minimize background

00:03:22.860 --> 00:03:22.870
good practice to minimize background
 

00:03:22.870 --> 00:03:24.300
good practice to minimize background
updates when they don't result in

00:03:24.300 --> 00:03:24.310
updates when they don't result in
 

00:03:24.310 --> 00:03:26.189
updates when they don't result in
notifications but the impact of

00:03:26.189 --> 00:03:26.199
notifications but the impact of
 

00:03:26.199 --> 00:03:27.509
notifications but the impact of
performing updates while the device is

00:03:27.509 --> 00:03:27.519
performing updates while the device is
 

00:03:27.519 --> 00:03:31.020
performing updates while the device is
charging over AC is negligible so you

00:03:31.020 --> 00:03:31.030
charging over AC is negligible so you
 

00:03:31.030 --> 00:03:32.520
charging over AC is negligible so you
can reconsider some of those assumptions

00:03:32.520 --> 00:03:32.530
can reconsider some of those assumptions
 

00:03:32.530 --> 00:03:33.960
can reconsider some of those assumptions
when the device is connected to a

00:03:33.960 --> 00:03:33.970
when the device is connected to a
 

00:03:33.970 --> 00:03:36.539
when the device is connected to a
charger conversely you can listen for a

00:03:36.539 --> 00:03:36.549
charger conversely you can listen for a
 

00:03:36.549 --> 00:03:38.189
charger conversely you can listen for a
broadcast telling you that the device is

00:03:38.189 --> 00:03:38.199
broadcast telling you that the device is
 

00:03:38.199 --> 00:03:40.349
broadcast telling you that the device is
low on juice then reduce or eliminate

00:03:40.349 --> 00:03:40.359
low on juice then reduce or eliminate
 

00:03:40.359 --> 00:03:42.780
low on juice then reduce or eliminate
background updates completely until the

00:03:42.780 --> 00:03:42.790
background updates completely until the
 

00:03:42.790 --> 00:03:45.089
background updates completely until the
device is charging of course just

00:03:45.089 --> 00:03:45.099
device is charging of course just
 

00:03:45.099 --> 00:03:46.469
device is charging of course just
because you're connected to power

00:03:46.469 --> 00:03:46.479
because you're connected to power
 

00:03:46.479 --> 00:03:48.330
because you're connected to power
doesn't make your downloads free even if

00:03:48.330 --> 00:03:48.340
doesn't make your downloads free even if
 

00:03:48.340 --> 00:03:49.619
doesn't make your downloads free even if
you're not concerned with the power

00:03:49.619 --> 00:03:49.629
you're not concerned with the power
 

00:03:49.629 --> 00:03:52.409
you're not concerned with the power
drain associated with 3G radio you

00:03:52.409 --> 00:03:52.419
drain associated with 3G radio you
 

00:03:52.419 --> 00:03:53.670
drain associated with 3G radio you
should still be conscious of the amount

00:03:53.670 --> 00:03:53.680
should still be conscious of the amount
 

00:03:53.680 --> 00:03:55.830
should still be conscious of the amount
of data that you're transferring you can

00:03:55.830 --> 00:03:55.840
of data that you're transferring you can
 

00:03:55.840 --> 00:03:57.509
of data that you're transferring you can
also monitor the current internet

00:03:57.509 --> 00:03:57.519
also monitor the current internet
 

00:03:57.519 --> 00:03:59.009
also monitor the current internet
connection to help mitigate against that

00:03:59.009 --> 00:03:59.019
connection to help mitigate against that
 

00:03:59.019 --> 00:04:01.589
connection to help mitigate against that
if we're connected over Wi-Fi bandwidth

00:04:01.589 --> 00:04:01.599
if we're connected over Wi-Fi bandwidth
 

00:04:01.599 --> 00:04:03.360
if we're connected over Wi-Fi bandwidth
use isn't an issue and power uses

00:04:03.360 --> 00:04:03.370
use isn't an issue and power uses
 

00:04:03.370 --> 00:04:05.159
use isn't an issue and power uses
significantly lower than when compared

00:04:05.159 --> 00:04:05.169
significantly lower than when compared
 

00:04:05.169 --> 00:04:07.649
significantly lower than when compared
to a cell radio that means you can more

00:04:07.649 --> 00:04:07.659
to a cell radio that means you can more
 

00:04:07.659 --> 00:04:09.629
to a cell radio that means you can more
aggressively react to center sync

00:04:09.629 --> 00:04:09.639
aggressively react to center sync
 

00:04:09.639 --> 00:04:12.240
aggressively react to center sync
messages when client-side or client-side

00:04:12.240 --> 00:04:12.250
messages when client-side or client-side
 

00:04:12.250 --> 00:04:14.520
messages when client-side or client-side
content provider changes when you're in

00:04:14.520 --> 00:04:14.530
content provider changes when you're in
 

00:04:14.530 --> 00:04:16.020
content provider changes when you're in
the foreground and potentially even in

00:04:16.020 --> 00:04:16.030
the foreground and potentially even in
 

00:04:16.030 --> 00:04:17.670
the foreground and potentially even in
the background especially when we're

00:04:17.670 --> 00:04:17.680
the background especially when we're
 

00:04:17.680 --> 00:04:20.490
the background especially when we're
also connected to power a good example

00:04:20.490 --> 00:04:20.500
also connected to power a good example
 

00:04:20.500 --> 00:04:22.230
also connected to power a good example
of this scenario is when the device is

00:04:22.230 --> 00:04:22.240
of this scenario is when the device is
 

00:04:22.240 --> 00:04:22.890
of this scenario is when the device is
docked

00:04:22.890 --> 00:04:22.900
docked
 

00:04:22.900 --> 00:04:25.050
docked
muttering monitoring for the device to

00:04:25.050 --> 00:04:25.060
muttering monitoring for the device to
 

00:04:25.060 --> 00:04:26.459
muttering monitoring for the device to
be in adopt state can be a useful

00:04:26.459 --> 00:04:26.469
be in adopt state can be a useful
 

00:04:26.469 --> 00:04:27.629
be in adopt state can be a useful
shortcut

00:04:27.629 --> 00:04:27.639
shortcut
 

00:04:27.639 --> 00:04:29.640
shortcut
you know how to check for connectivity

00:04:29.640 --> 00:04:29.650
you know how to check for connectivity
 

00:04:29.650 --> 00:04:31.110
you know how to check for connectivity
and charging status and potentially

00:04:31.110 --> 00:04:31.120
and charging status and potentially
 

00:04:31.120 --> 00:04:32.909
and charging status and potentially
modifying a frequency at which you

00:04:32.909 --> 00:04:32.919
modifying a frequency at which you
 

00:04:32.919 --> 00:04:35.339
modifying a frequency at which you
perform syncs you can check the current

00:04:35.339 --> 00:04:35.349
perform syncs you can check the current
 

00:04:35.349 --> 00:04:37.439
perform syncs you can check the current
device state each time you receive a GCM

00:04:37.439 --> 00:04:37.449
device state each time you receive a GCM
 

00:04:37.449 --> 00:04:39.300
device state each time you receive a GCM
tickle or a local content provider

00:04:39.300 --> 00:04:39.310
tickle or a local content provider
 

00:04:39.310 --> 00:04:41.129
tickle or a local content provider
changes to determine if you should

00:04:41.129 --> 00:04:41.139
changes to determine if you should
 

00:04:41.139 --> 00:04:43.619
changes to determine if you should
actually perform the update or you can

00:04:43.619 --> 00:04:43.629
actually perform the update or you can
 

00:04:43.629 --> 00:04:45.749
actually perform the update or you can
monitor changes in the device state to

00:04:45.749 --> 00:04:45.759
monitor changes in the device state to
 

00:04:45.759 --> 00:04:47.640
monitor changes in the device state to
alter your sync adapter settings to stop

00:04:47.640 --> 00:04:47.650
alter your sync adapter settings to stop
 

00:04:47.650 --> 00:04:50.369
alter your sync adapter settings to stop
or start listening to changes likewise

00:04:50.369 --> 00:04:50.379
or start listening to changes likewise
 

00:04:50.379 --> 00:04:51.779
or start listening to changes likewise
you can send a message to your server

00:04:51.779 --> 00:04:51.789
you can send a message to your server
 

00:04:51.789 --> 00:04:53.879
you can send a message to your server
altering the frequency at which you want

00:04:53.879 --> 00:04:53.889
altering the frequency at which you want
 

00:04:53.889 --> 00:04:55.529
altering the frequency at which you want
to receive those sender sync messages

00:04:55.529 --> 00:04:55.539
to receive those sender sync messages
 

00:04:55.539 --> 00:04:57.450
to receive those sender sync messages
for example you may want to receive a

00:04:57.450 --> 00:04:57.460
for example you may want to receive a
 

00:04:57.460 --> 00:04:59.610
for example you may want to receive a
tickle after there are ten new headlines

00:04:59.610 --> 00:04:59.620
tickle after there are ten new headlines
 

00:04:59.620 --> 00:05:01.499
tickle after there are ten new headlines
or only when there is a breaking news

00:05:01.499 --> 00:05:01.509
or only when there is a breaking news
 

00:05:01.509 --> 00:05:03.689
or only when there is a breaking news
story in your area or not more

00:05:03.689 --> 00:05:03.699
story in your area or not more
 

00:05:03.699 --> 00:05:05.390
story in your area or not more
frequently than once every 10 minutes

00:05:05.390 --> 00:05:05.400
frequently than once every 10 minutes
 

00:05:05.400 --> 00:05:07.589
frequently than once every 10 minutes
you might also want to consider the

00:05:07.589 --> 00:05:07.599
you might also want to consider the
 

00:05:07.599 --> 00:05:10.740
you might also want to consider the
context of the user themselves using the

00:05:10.740 --> 00:05:10.750
context of the user themselves using the
 

00:05:10.750 --> 00:05:12.659
context of the user themselves using the
new activity recognition API as you can

00:05:12.659 --> 00:05:12.669
new activity recognition API as you can
 

00:05:12.669 --> 00:05:14.369
new activity recognition API as you can
choose to alter the foreground update

00:05:14.369 --> 00:05:14.379
choose to alter the foreground update
 

00:05:14.379 --> 00:05:15.899
choose to alter the foreground update
frequency based on what the user is

00:05:15.899 --> 00:05:15.909
frequency based on what the user is
 

00:05:15.909 --> 00:05:18.450
frequency based on what the user is
doing in this example we might

00:05:18.450 --> 00:05:18.460
doing in this example we might
 

00:05:18.460 --> 00:05:20.189
doing in this example we might
artificially limit the update rate when

00:05:20.189 --> 00:05:20.199
artificially limit the update rate when
 

00:05:20.199 --> 00:05:21.149
artificially limit the update rate when
they're doing anything other than

00:05:21.149 --> 00:05:21.159
they're doing anything other than
 

00:05:21.159 --> 00:05:23.610
they're doing anything other than
standing still on the basis that users

00:05:23.610 --> 00:05:23.620
standing still on the basis that users
 

00:05:23.620 --> 00:05:24.959
standing still on the basis that users
are less likely to be looking at the

00:05:24.959 --> 00:05:24.969
are less likely to be looking at the
 

00:05:24.969 --> 00:05:27.480
are less likely to be looking at the
screen and browsing now we can use a

00:05:27.480 --> 00:05:27.490
screen and browsing now we can use a
 

00:05:27.490 --> 00:05:29.579
screen and browsing now we can use a
similar technique as an alternative to

00:05:29.579 --> 00:05:29.589
similar technique as an alternative to
 

00:05:29.589 --> 00:05:31.950
similar technique as an alternative to
periodic updates rather than update the

00:05:31.950 --> 00:05:31.960
periodic updates rather than update the
 

00:05:31.960 --> 00:05:33.839
periodic updates rather than update the
app once every 24 hours to ensure it's

00:05:33.839 --> 00:05:33.849
app once every 24 hours to ensure it's
 

00:05:33.849 --> 00:05:34.709
app once every 24 hours to ensure it's
fresh in the morning

00:05:34.709 --> 00:05:34.719
fresh in the morning
 

00:05:34.719 --> 00:05:37.110
fresh in the morning
you might check for the tilting activity

00:05:37.110 --> 00:05:37.120
you might check for the tilting activity
 

00:05:37.120 --> 00:05:38.610
you might check for the tilting activity
after a prolonged period of being

00:05:38.610 --> 00:05:38.620
after a prolonged period of being
 

00:05:38.620 --> 00:05:40.649
after a prolonged period of being
stationary as an indication that the

00:05:40.649 --> 00:05:40.659
stationary as an indication that the
 

00:05:40.659 --> 00:05:42.269
stationary as an indication that the
user has been asleep and has now gotten

00:05:42.269 --> 00:05:42.279
user has been asleep and has now gotten
 

00:05:42.279 --> 00:05:43.619
user has been asleep and has now gotten
up in the morning so it's worth

00:05:43.619 --> 00:05:43.629
up in the morning so it's worth
 

00:05:43.629 --> 00:05:46.110
up in the morning so it's worth
refreshing their data now having

00:05:46.110 --> 00:05:46.120
refreshing their data now having
 

00:05:46.120 --> 00:05:47.519
refreshing their data now having
introduced a number of possible ways to

00:05:47.519 --> 00:05:47.529
introduced a number of possible ways to
 

00:05:47.529 --> 00:05:50.249
introduced a number of possible ways to
skip or delay transfers it's important

00:05:50.249 --> 00:05:50.259
skip or delay transfers it's important
 

00:05:50.259 --> 00:05:51.869
skip or delay transfers it's important
to check the cause of the sync to ensure

00:05:51.869 --> 00:05:51.879
to check the cause of the sync to ensure
 

00:05:51.879 --> 00:05:53.429
to check the cause of the sync to ensure
that you're not delaying transfers that

00:05:53.429 --> 00:05:53.439
that you're not delaying transfers that
 

00:05:53.439 --> 00:05:55.200
that you're not delaying transfers that
will affect the user experience directly

00:05:55.200 --> 00:05:55.210
will affect the user experience directly
 

00:05:55.210 --> 00:05:57.929
will affect the user experience directly
any manually initiate a transfer so

00:05:57.929 --> 00:05:57.939
any manually initiate a transfer so
 

00:05:57.939 --> 00:06:00.119
any manually initiate a transfer so
anything that's necessary for the user

00:06:00.119 --> 00:06:00.129
anything that's necessary for the user
 

00:06:00.129 --> 00:06:02.040
anything that's necessary for the user
to continue using the app or browsing

00:06:02.040 --> 00:06:02.050
to continue using the app or browsing
 

00:06:02.050 --> 00:06:05.519
to continue using the app or browsing
needs to happen straightaway when using

00:06:05.519 --> 00:06:05.529
needs to happen straightaway when using
 

00:06:05.529 --> 00:06:07.230
needs to happen straightaway when using
sync adapters you can determine this as

00:06:07.230 --> 00:06:07.240
sync adapters you can determine this as
 

00:06:07.240 --> 00:06:10.379
sync adapters you can determine this as
shown here now in any case while it can

00:06:10.379 --> 00:06:10.389
shown here now in any case while it can
 

00:06:10.389 --> 00:06:12.179
shown here now in any case while it can
be useful to alter the frequency at

00:06:12.179 --> 00:06:12.189
be useful to alter the frequency at
 

00:06:12.189 --> 00:06:14.519
be useful to alter the frequency at
which we execute a sync fundamentally

00:06:14.519 --> 00:06:14.529
which we execute a sync fundamentally
 

00:06:14.529 --> 00:06:15.959
which we execute a sync fundamentally
we're still depending on techniques like

00:06:15.959 --> 00:06:15.969
we're still depending on techniques like
 

00:06:15.969 --> 00:06:17.490
we're still depending on techniques like
sync adapters and Google Cloud messaging

00:06:17.490 --> 00:06:17.500
sync adapters and Google Cloud messaging
 

00:06:17.500 --> 00:06:19.950
sync adapters and Google Cloud messaging
as described in other devbytes in this

00:06:19.950 --> 00:06:19.960
as described in other devbytes in this
 

00:06:19.960 --> 00:06:21.959
as described in other devbytes in this
series to ensure that we only ever

00:06:21.959 --> 00:06:21.969
series to ensure that we only ever
 

00:06:21.969 --> 00:06:23.790
series to ensure that we only ever
consider performing a sync when data has

00:06:23.790 --> 00:06:23.800
consider performing a sync when data has
 

00:06:23.800 --> 00:06:25.769
consider performing a sync when data has
changed either on a client or on the

00:06:25.769 --> 00:06:25.779
changed either on a client or on the
 

00:06:25.779 --> 00:06:28.200
changed either on a client or on the
server even then we want to avoid

00:06:28.200 --> 00:06:28.210
server even then we want to avoid
 

00:06:28.210 --> 00:06:29.909
server even then we want to avoid
performing a sync that could be delayed

00:06:29.909 --> 00:06:29.919
performing a sync that could be delayed
 

00:06:29.919 --> 00:06:32.369
performing a sync that could be delayed
without impacting the user in most cases

00:06:32.369 --> 00:06:32.379
without impacting the user in most cases
 

00:06:32.379 --> 00:06:34.079
without impacting the user in most cases
that means being very conservative with

00:06:34.079 --> 00:06:34.089
that means being very conservative with
 

00:06:34.089 --> 00:06:35.999
that means being very conservative with
background updates for anything that

00:06:35.999 --> 00:06:36.009
background updates for anything that
 

00:06:36.009 --> 00:06:38.009
background updates for anything that
doesn't result in a notification being

00:06:38.009 --> 00:06:38.019
doesn't result in a notification being
 

00:06:38.019 --> 00:06:40.409
doesn't result in a notification being
displayed

