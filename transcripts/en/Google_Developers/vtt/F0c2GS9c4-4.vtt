WEBVTT
Kind: captions
Language: en

00:00:01.220 --> 00:00:07.050
&gt;&gt; CHANEZON: Okay. Thank you. Hello, everybody.
Thanks for coming to Google I/O today. We

00:00:07.050 --> 00:00:12.280
have a very social session this afternoon.
I hope we'll keep you entertained. I know

00:00:12.280 --> 00:00:16.560
just after lunch like this, usually, it's
pretty hard, but we have lots of stuff to

00:00:16.560 --> 00:00:23.929
show. So today, we have--the session is about
Friend Connect in the Real World, which is

00:00:23.929 --> 00:00:28.579
real big sites who have implemented Friend
Connect and use it in the real world. And

00:00:28.579 --> 00:00:35.540
we're going to go under the hood and show
you what the programming model is for making

00:00:35.540 --> 00:00:44.160
your site social. So, with us today, we have
all the team from TIME.com: Shivani York,

00:00:44.160 --> 00:00:51.160
Henry Chan, and Srivaths Lakshmi, Paul Berry
from Huffington Post and Khris Loux from JS-Kit.

00:00:51.160 --> 00:01:00.140
So, it will be a very social session. A quick
reminder about the history of Friend Connect,

00:01:00.140 --> 00:01:06.400
Friend Connect started in May 2008. There
was a preview where we showed the technology

00:01:06.400 --> 00:01:12.890
and some sites were whitelisted to be able
to use it. And at that time, that preview

00:01:12.890 --> 00:01:18.360
release was really for what we call "long
tail site," like small sites who don't have

00:01:18.360 --> 00:01:23.060
much technical capabilities. And the goal
of Friend Connect was to enable them to become

00:01:23.060 --> 00:01:30.600
social with just pasting a few bits of JavaScript
code. So you would register your site, put

00:01:30.600 --> 00:01:37.659
your name, your URL, we would give you two
bits of script tags to paste into your page,

00:01:37.659 --> 00:01:43.780
and, boom, with one script tag you would have
a member gadget or you could join the site.

00:01:43.780 --> 00:01:48.440
I'm sure you have seen that in other sessions
or you have seen that all around the Web because

00:01:48.440 --> 00:01:54.780
there are many, many websites who have adopted
that. And then, by pasting another bit of

00:01:54.780 --> 00:02:00.450
JavaScript, you could add any OpenSocial application
there. And Google was providing a few of these

00:02:00.450 --> 00:02:07.100
apps like commenting app, rating, and things
like that. So that was Friend Connect what

00:02:07.100 --> 00:02:13.700
I like to call Vanilla, like very simple integration.
You have these rectangles into which social

00:02:13.700 --> 00:02:22.270
part is unclosed, but then the rest of your
site is kind of untouched. In December 2008--so

00:02:22.270 --> 00:02:28.849
May was like one year ago, we're kind of celebrating
the first birthday of Friend Connect. In December,

00:02:28.849 --> 00:02:37.720
it was available to all sites and since then,
there are--a lot of sites have implemented

00:02:37.720 --> 00:02:46.280
Friend Connect, but mainly, like, blogs and
community sites. In February, to make it even

00:02:46.280 --> 00:02:50.660
easier, we shipped something called the Social
Bar where it was just a little bit of JavaScript.

00:02:50.660 --> 00:02:55.250
You have this bar that appears at the top
of your site and then you can login to Friend

00:02:55.250 --> 00:03:01.540
Connect there and you can have the commenting
gadget and things like that. So it's for even

00:03:01.540 --> 00:03:08.060
easier integration. But where it gets really
more interesting is in March, which is two

00:03:08.060 --> 00:03:14.450
to three months ago, we introduced two new
APIs for friend connect: the JavaScript API

00:03:14.450 --> 00:03:20.959
and the REST API. And these ones allow you
to do deep social integration, integration

00:03:20.959 --> 00:03:28.090
of social features in your website but really
integrating them completely with your website

00:03:28.090 --> 00:03:35.640
the way you see fit. And we'll see with their
TIME.com or Huffington Post or JS-Kit, how

00:03:35.640 --> 00:03:41.459
they did that kind of integration. So you
can do the integration on the client's side

00:03:41.459 --> 00:03:47.610
using a JavaScript API or you can do it on
the server side using a REST API and you can

00:03:47.610 --> 00:03:55.000
even do both. We'll see in the Time example
where we're using both APIs. And this API

00:03:55.000 --> 00:04:01.180
is a good fit for teams with--for sites who
have a technical team and who have people

00:04:01.180 --> 00:04:08.300
who can program and who really want to customize
the social experience of the users. Yes. So

00:04:08.300 --> 00:04:13.550
we get by with a little help from my friends
in here. I'm going to call my friend Shivani

00:04:13.550 --> 00:04:19.400
York from TIME.com, and she is going to explain
what we've been building together.

00:04:19.400 --> 00:04:19.699
&gt;&gt; YORK: Okay. So I'm just going to give a
little bit of history of TIME.com. Thanks.

00:04:19.699 --> 00:04:34.630
So the concept that we had is TIME.com Social
Lists. Just a little bit of history of what

00:04:34.630 --> 00:04:39.630
TIME.com is. We're a 24-hour global news type.
We have over 150 journalists. We do in-depth

00:04:39.630 --> 00:04:46.050
reporting. We, as for Omniture as of April,
we have about 142 million page views and 17

00:04:46.050 --> 00:04:51.130
million unique visitors, and we're growing.
So, and this is our traffic as of April. As

00:04:51.130 --> 00:04:55.690
I mentioned, we're growing. Our page was increased
by 195 percent year over year. We do have

00:04:55.690 --> 00:05:03.710
users very engaged in our site. What we're
looking for is a way to give people fun things

00:05:03.710 --> 00:05:13.419
to do around our lists. And I'm going to explain
that in a second. So what we have is Daily

00:05:13.419 --> 00:05:18.889
Specials. So what are Daily Specials are?
These are like top 10, top 25 type of list.

00:05:18.889 --> 00:05:22.449
We do them on a daily basis. We do them in
a monthly basis. They're just sort of like

00:05:22.449 --> 00:05:27.810
a fun perspective on events that are current
events. So, recently, we did--when gas went

00:05:27.810 --> 00:05:35.860
up to $4, I'm sure it was $5 here, 10 things
that you like about $4 gas. Then, recently,

00:05:35.860 --> 00:05:42.800
we did Top 10 iPhone Applications for new
Oms, and one of our new Om editors did that.

00:05:42.800 --> 00:05:46.009
So, and the topics ranged from both news,
heavy news type of content, so we had Pope

00:05:46.009 --> 00:05:53.919
visiting the Middle East, top 10 things to,
like, fun things like the Top 10 Disastrous

00:05:53.919 --> 00:05:59.830
Letterman Interviews. So they can be very
personal and fun in nature. So what we were

00:05:59.830 --> 00:06:07.120
looking for is a way to make them more interactive,
a way to make them more social without having

00:06:07.120 --> 00:06:12.169
a whole layer of application built-in. And
just to put that into perspective, our specials--and

00:06:12.169 --> 00:06:20.300
specials include things like Top 100--Time
does like Top 100 list quarterly as well.

00:06:20.300 --> 00:06:28.990
So those include those as well. And just in
the last six months, they've generated us

00:06:28.990 --> 00:06:40.430
about 160--176 million pages. So they're big
business for us. And by nature, they're sort

00:06:40.430 --> 00:06:52.270
of built in this quick list format where you
can--there is a photo on top, there is a video

00:06:52.270 --> 00:07:07.430
on top, and you can quick gallery, you can
page through. So by--they lend themselves

00:07:07.430 --> 00:07:26.210
very well to being engaged. So this is the
challenge that we've put in front of Patrick

00:07:26.210 --> 00:07:48.500
and our front-end and back-end team is how
do we make these daily top 10 lists more engaging,

00:07:48.500 --> 00:08:01.050
more social and more fun? So, I'm going to
show you a couple of our lists. So this is

00:08:01.050 --> 00:08:11.970
one of our lists: Top 10 Movie Catchphrases
that we just did a couple of days ago. So

00:08:11.970 --> 00:08:26.979
when you think of Terminator, what's the top
phrase that comes through your mind? Exactly,

00:08:26.979 --> 00:08:43.189
I'll be back. You know, so there are lists
that are very personal to you, some of them.

00:08:43.189 --> 00:08:48.889
The next one is--well, this is Gone With the
Wind, which I'm not really familiar with,

00:08:48.889 --> 00:08:54.329
but there is Jerry Maguire. What's the Jerry
Maguire big phrase? "Show me the money." Great.

00:08:54.329 --> 00:09:00.149
So what we did, we took an example. So this
example is going to be live. Actually, we're

00:09:00.149 --> 00:09:13.189
going to be implementing on TIME.com probably
in the next couple of weeks as we workout

00:09:13.189 --> 00:09:24.709
Kings. As Patrick mentioned, these are all
new APIs. So we're just sort of putting the

00:09:24.709 --> 00:09:46.019
final touches on it. So, all this that you're
going to see is in demo mode. So, with all

00:09:46.019 --> 00:09:55.879
of our daily lists, we have this full list
page, which hasn't been styled in anyway.

00:09:55.879 --> 00:10:15.459
It's like a plain list page. These are the
five--these are the top 10 movie phrases.

00:10:15.459 --> 00:10:31.179
For each page, you can go into it and see
what the phrase is. And then the same thing

00:10:31.179 --> 00:10:36.660
for--because this is the example that we're
going to use--Top 10 Musical Politicians,

00:10:36.660 --> 00:10:47.009
and I'm sure Bill Clinton is the one that
everybody is thinking about as I'm saying

00:10:47.009 --> 00:11:15.160
this. And Bill Clinton is actually on the
list and he is number four on our list. So

00:11:15.160 --> 00:11:44.220
imagine that list. So when you come to this
page, once we implement the Google Friend

00:11:44.220 --> 00:12:23.079
Connect and the OpenSocial and the cloud computing
stuff, this is the page you're going to come

00:12:23.079 --> 00:12:50.339
to. You're going to see the full Time list
on the left, so for every top 10 list, you're

00:12:50.339 --> 00:13:16.670
going to see how our editors have ranked that
list, and you can click in to see why Colin

00:13:16.670 --> 00:13:25.279
Powell made that list and see a little snippet
along with it and a video. So this is Colin

00:13:25.279 --> 00:13:30.449
Powell doing the dance. And then when you
come back to it--so imagine at the end of

00:13:30.449 --> 00:13:34.839
each list page, there is going to be a link
that's going to say, you know, click here

00:13:34.839 --> 00:13:41.869
to re-rank and personalize this list and make
your own, or some, you know, better language

00:13:41.869 --> 00:13:46.649
that we're going to come up with. So you're
going to come to this page, you're going to

00:13:46.649 --> 00:13:54.049
be able to drag and drop it. Actually, no.
I think Bill Clinton is number one in here.

00:13:54.049 --> 00:14:02.149
So Bill Clinton, Colin Powell, Sarah Palin,
Condoleezza Rice, and then you can save and

00:14:02.149 --> 00:14:05.779
share that list. Again, one of the things
that we were looking at TIME.com, we're sort

00:14:05.779 --> 00:14:12.239
of very platform agnostic, so we wanted to
make sure that we were able to leverage social

00:14:12.239 --> 00:14:16.649
networks in communities that already existed
out there in the form of Google, Yahoo!, AOL,

00:14:16.649 --> 00:14:22.499
OpenID, and then we're going to be implementing
Facebook soon. And while I'm saying that,

00:14:22.499 --> 00:14:34.239
my friend developers give me a dirty look
because we do have Facebook implemented. It's

00:14:34.239 --> 00:14:41.309
just not in the demo. So I'm going to sign
in with Google because it's a Google conference.

00:14:41.309 --> 00:14:50.929
So, once I re-ranked the list in the order
that I like it, I can sign-in with one of

00:14:50.929 --> 00:15:00.169
the social networks. And then, what I get
is, I get a list on the right that's my own

00:15:00.169 --> 00:15:10.449
view of that list. So these are the four people
that I think should be in the Top 10 Most

00:15:10.449 --> 00:15:16.869
Musical Politicians. And then what you also
get on the right is, you get like a user ranking

00:15:16.869 --> 00:15:21.879
histogram which shows you how other people
have ranked each of those people--each of

00:15:21.879 --> 00:15:25.949
the people on the list, how they've been ranked
by other users. You can get that link and

00:15:25.949 --> 00:15:32.299
share it with friends then. So, I'm going
to open it, copy it, open another browser.

00:15:32.299 --> 00:15:40.600
So, each of the URLs is unique. So each person,
we are allowing them, or each unique ID is

00:15:40.600 --> 00:15:48.059
allowed to create one re-ranked list of Time
and then you can then share that in that URL

00:15:48.059 --> 00:15:55.669
list and it's unique to you. And you can share
that with your friends, you can put it on

00:15:55.669 --> 00:16:01.749
your Twitter, you can put on your Facebook,
and it's going to work any second. Is that

00:16:01.749 --> 00:16:08.350
it? Sorry, guys, technical difficulties. Yup.
Okay. So, what you end up getting is, once

00:16:08.350 --> 00:16:14.329
I share my list with Henry, if Henry comes
to this page, he'll get my Shivani York's

00:16:14.329 --> 00:16:20.309
ranked list of Top 10 Musical Politicians,
and then you'll also get the Time list right

00:16:20.309 --> 00:16:29.119
next to it, and then you can create your own.
And again, you can also, you know, share it

00:16:29.119 --> 00:16:36.100
on Twitter and Facebook and stuff. So that's
essentially the concept and then I'll hand

00:16:36.100 --> 00:16:42.040
it over to Henry and Srivaths to go into the
code.

00:16:42.040 --> 00:16:47.499
&gt;&gt; CHANEZON: Okay.
&gt;&gt; SHIVANI: Should you talk about that?

00:16:47.499 --> 00:16:54.720
&gt;&gt; CHANEZON: Yeah, and you show a little bit...
Yeah. So thanks, Shivani. Now, you've seen

00:16:54.720 --> 00:17:02.290
the concept. Now we'll talk a little bit more
about that OpenSocial and cloud stuff and

00:17:02.290 --> 00:17:09.409
go a little bit more in the details about
how this app was built. So TIME.com is served

00:17:09.409 --> 00:17:14.579
static HTML pages. They're using Vignette
as the content management system. And thankfully

00:17:14.579 --> 00:17:19.569
for us they were already using the jQuery,
a JavaScript Library, which have tested a

00:17:19.569 --> 00:17:24.600
lot, build that application. So, basically,
what we wanted to do there was to have unique

00:17:24.600 --> 00:17:30.820
URLs for users, having them the capability
to login using their credentials and an existing

00:17:30.820 --> 00:17:41.809
social network and start customizing their
site and getting unique URLs that are personalized

00:17:41.809 --> 00:17:55.309
to them. And the way we build that is with
a kind of new architect--a new type of architecture

00:17:55.309 --> 00:18:02.110
that I think will happen more and more as
the Web or as Web pages become more distributed

00:18:02.110 --> 00:18:09.210
in the next few years. There's a big trend
of--when you look at a website today and if

00:18:09.210 --> 00:18:17.389
you're looking Firebug you'll see that, there's
a bunch of resources coming from many different

00:18:17.389 --> 00:18:26.389
places, and actually the content coming from
the host that you have in your browser is

00:18:26.389 --> 00:18:38.130
very often very little, and that movement
is just amplifying. And this is a very good

00:18:38.130 --> 00:18:46.419
example of that. So here, the way we build
that is that we used Google Friend Connect

00:18:46.419 --> 00:18:50.750
and Facebook Connect as well, the JavaScript
API. So, we use the Google Friend Connect

00:18:50.750 --> 00:18:56.899
JavaScript API to let the user login using
their credentials on any social networks that's

00:18:56.899 --> 00:19:02.039
part of Friend Connect. So, today there's
Yahoo!, Google, any OpenID provider or AOL.

00:19:02.039 --> 00:19:09.769
There's a new one called Netlog in your Web
that implemented it, that was added to Friend

00:19:09.769 --> 00:19:13.730
Connect, I think, only last week. So, 13 million
users just in one shot, and there are more

00:19:13.730 --> 00:19:15.500
and more joining. So with that, you can login
using your credentials on an existing social

00:19:15.500 --> 00:19:21.389
network. Then using the JavaScript API, we
have access to a UID for you and your display

00:19:21.389 --> 00:19:26.730
name, and that's all that we're using in that
application. You also have access to thumbnail

00:19:26.730 --> 00:19:33.870
URLs and things about your profile. That's
all we needed there. Facebook Connect provides

00:19:33.870 --> 00:19:42.980
some similar functionality, although Henry
will tell you it's not as easy to use.

00:19:42.980 --> 00:19:51.480
&gt;&gt; CHAN: But it works in my site. It's not
in live.

00:19:51.480 --> 00:19:58.159
&gt;&gt; CHANEZON: And then--so that's for the social
part of it. So you don't have--Time didn't

00:19:58.159 --> 00:20:04.279
have anything to modify. They don't have any
back-end, they didn't have anything to do,

00:20:04.279 --> 00:20:13.139
just used these JavaScript APIs. Then, to
make the site--to store these lists and get

00:20:13.139 --> 00:20:37.379
them and get the stats using the stats images,
for that, we used an App Engine application,

00:20:37.379 --> 00:20:43.860
written in Python using, a Python App Engine
and we're using JSONP to get and set the data.

00:20:43.860 --> 00:20:49.360
So JSONP is a way to make some calls to an
application that's hosting on a different

00:20:49.360 --> 00:20:54.309
domain. Essentially, you're just getting your
URL that returns a script that's evaluated.

00:20:54.309 --> 00:21:02.299
And in the URL, you pass a callback function
that will be called back with the data when

00:21:02.299 --> 00:21:07.620
the callback comes. We'll show you a little
bit more what this looks like. When you are

00:21:07.620 --> 00:21:13.500
doing a JSONP call, usually, it's not secure.
So the way we solve security is thanks to

00:21:13.500 --> 00:21:17.960
these social APIs in Friend Connect. When
you are logging to Friend Connect, you have

00:21:17.960 --> 00:21:28.820
a JavaScript function that you define that
is called back with a security token. And

00:21:28.820 --> 00:21:36.870
that security token means Friend Connect--Google
tells you that Patrick logged in with his

00:21:36.870 --> 00:21:42.970
Yahoo! account in Friend Connect. And that
security token, we pass it to the JSONP call

00:21:42.970 --> 00:21:48.500
to the App Engine back-end. We'll show you
the Python code to do that a little bit later.

00:21:48.500 --> 00:21:57.159
And on the server side, we use the Friend
Connect REST API to make the call on Patrick

00:21:57.159 --> 00:22:08.500
with that security token to say, “Is this
really Patrick?” And then, that security

00:22:08.500 --> 00:22:16.330
token comes from Friend Connect, so if I'm
really logged in and I have installed or invented

00:22:16.330 --> 00:22:22.789
that token, then it's verified that I'm me
and that I can save in my name that list,

00:22:22.789 --> 00:22:30.059
so that's how it works, which means that the
HTML page that you saw there, it's just cached

00:22:30.059 --> 00:22:53.879
by your CDN and it's cached by your browser
and all the data is coming dynamically using

00:22:53.879 --> 00:22:57.710
JavaScript to this page. And so, each user
can have URLs like ?userid=blah, listid=foo,

00:22:57.710 --> 00:23:02.009
and then network=facebookconnect. And these
URLs would just serve you personalized list

00:23:02.009 --> 00:23:07.009
for these users, that they can share with
their friends on social networks. So now,

00:23:07.009 --> 00:23:11.769
Henry Chan from TIME is going to present to
you the code itself, the front-end code for

00:23:11.769 --> 00:23:13.090
that app.
&gt;&gt; CHAN: Well, hello. Can I use--I'll just

00:23:13.090 --> 00:23:18.269
sign out. Can I just sign out all the way
to the beginning?

00:23:18.269 --> 00:23:22.620
&gt;&gt; CHANEZON: Oh, we're...
&gt;&gt; CHAN: All the way in the beginning.

00:23:22.620 --> 00:23:28.809
&gt;&gt; CHANEZON: Okay.
&gt;&gt; CHAN: So, you just go--yeah, create a list.

00:23:28.809 --> 00:23:39.730
All right. So, basically, since Vignette doesn't
have like back-end, so we can't really show

00:23:39.730 --> 00:23:45.730
the dynamic data. What I did here was, like,
on every page load, we use Friend Connect

00:23:45.730 --> 00:23:48.049
to, like, grab data from...
&gt;&gt; CHANEZON: Yeah, yeah, go on.

00:23:48.049 --> 00:23:51.429
&gt;&gt; CHAN: Grab data from the Google Friend
Connect to pop--to basically, like, if I forgot

00:23:51.429 --> 00:23:58.090
what state this application is at, you go
to the Firebug. You scroll down--you scroll

00:23:58.090 --> 00:24:04.820
up a little. Within these slides, these are
the things I'm passing, basically a list ID.

00:24:04.820 --> 00:24:05.440
Username is undefined because we're not logged
in. And then we go all the way down where

00:24:05.440 --> 00:24:07.720
you see the security token that Patrick was
talking about. So, right now, the state is

00:24:07.720 --> 00:24:16.740
that I'm logged out and I'm not looking at
the list. So, basically, I'm generating a

00:24:16.740 --> 00:24:27.659
page using the HTML to look like--might as
well look--well, sort of functionalities,

00:24:27.659 --> 00:24:33.289
so you sort rate. You just start dragging
stuff off now?

00:24:33.289 --> 00:24:37.710
&gt;&gt; CHANEZON: Yeah.
&gt;&gt; CHAN: Basically, we're saving it in an

00:24:37.710 --> 00:24:45.340
array and we go--you scroll all the way down.
We click the "save and share," thus, it generates

00:24:45.340 --> 00:24:56.379
a JSONP call to try to send to, like, put
list which is basically saving it and also

00:24:56.379 --> 00:25:03.610
sending in a security token. But since you're
not--since you're not logged in, it won't

00:25:03.610 --> 00:25:11.159
allow you to save until you're logged in.
So just login to Yahoo!.

00:25:11.159 --> 00:25:17.629
&gt;&gt; CHANEZON: Sure.
&gt;&gt; CHAN: So, basically, as soon as Patrick

00:25:17.629 --> 00:25:24.009
sign on, Chanezon page reload and cookies
and all these other settings has already been

00:25:24.009 --> 00:25:37.179
updated, so it changed the user view to a
"I'm logged in and I'm looking at my own list,"

00:25:37.179 --> 00:25:47.710
because you just created your own list so
it goes through back to it. With this dashboard,

00:25:47.710 --> 00:25:56.159
we have all these links on the social list,
which is also dynamically generated. And these

00:25:56.159 --> 00:26:02.169
are like--so the way we are, like, kind of
storing these data is by using just basic

00:26:02.169 --> 00:26:35.070
storing, like, a short survey of like the
list and the number that got a range on it.

00:26:35.070 --> 00:26:43.679
So, with this way, we don't really have to,
like, do any back-end and allow you to check

00:26:43.679 --> 00:26:57.249
to make sure, like, a user is, like, passing
the correct list title and all that. So you

00:26:57.249 --> 00:27:03.240
scroll down. You go to the "net."
&gt;&gt; CHANEZON: Oh, yeah.

00:27:03.240 --> 00:27:10.860
&gt;&gt; CHAN: Net. Go to "HTML." All right. So
you scroll down to get list of URL IDs, so

00:27:10.860 --> 00:27:22.299
that is the JSONP call. So, you click "response."
Basically, it brings us back the name which

00:27:22.299 --> 00:27:32.899
will pop later on the left side and also the
data to the way that list is ordered. Okay.

00:27:32.899 --> 00:27:41.610
What else I want to show?
&gt;&gt; CHANEZON: Maybe we could show the HTML.

00:27:41.610 --> 00:27:47.259
&gt;&gt; CHAN: All right. So, essentially, that's
the part two initialized Friend Connect to

00:27:47.259 --> 00:28:03.690
load. And as soon as we load the API, it goes
to my--which is top 10 model for that JS.

00:28:03.690 --> 00:28:12.899
&gt;&gt; CHANEZON: Yeah. So for those of you who
have used any of the Google AJAX APIs, we

00:28:12.899 --> 00:28:23.450
use a common loader. So that's this google.com/jsapi.
And once you've loaded that, you can say Google

00:28:23.450 --> 00:28:32.179
load and then some API, like in this case,
Friend Connect 0.8. Maybe the JavaScript now.

00:28:32.179 --> 00:28:45.570
&gt;&gt; CHAN: Yeah. So you want to go to the JS.
&gt;&gt; CHANEZON: Sorry? Oh, it's on--so, oh, the

00:28:45.570 --> 00:29:00.100
API for Friend Connect. So, you can find the
API description at code.google.com/friendconnect,

00:29:00.100 --> 00:29:12.049
but one of the nice thing about Friend Connect
is that the JavaScript API is, in fact, the

00:29:12.049 --> 00:29:30.860
OpenSocial API. So there are a few calls that
are specific to Friend Connect, like request

00:29:30.860 --> 00:29:40.759
to sign in, things like that, or logout which
are really specific to adding OpenSocial to

00:29:40.759 --> 00:30:02.600
your own page instead of being in a gadget,
inside of a container. But the rest of it

00:30:02.600 --> 00:30:11.110
is just Vanilla OpenSocial API. And we can
show you some of the code here. It's like

00:30:11.110 --> 00:30:16.169
Vanilla. Actually, she has the JavaScript
code. Yeah. Sorry? It's code.google.com/friendconnect.

00:30:16.169 --> 00:30:23.470
So you'll find the overall documentation there.
And in the Friend Connect specific documentation,

00:30:23.470 --> 00:30:28.220
there's only, I think, there's five or six
functions that are specific to Friend Connect.

00:30:28.220 --> 00:30:35.590
All the rest is the OpenSocial API, and you
see it here. Excuse me? Thanks, Missy. You're

00:30:35.590 --> 00:30:38.629
right. So the URL is code.google.com/apis/friendconnect.
And so here, we're looking at the--let's make

00:30:38.629 --> 00:30:44.289
it a little bit bigger. We're looking at the
JavaScript source code of that app where really

00:30:44.289 --> 00:30:51.389
the action happens. So, in it...
&gt;&gt; CHAN: Because if you want to...

00:30:51.389 --> 00:30:57.539
&gt;&gt; CHANEZON: Yeah.
&gt;&gt; CHAN: So we should really go here.

00:30:57.539 --> 00:31:05.259
&gt;&gt; CHANEZON: Yeah. So in there, we're using
a lot of jQuery, like all the drag and drop

00:31:05.259 --> 00:31:11.960
is done using jQuery drag and drop. Hopefully,
Time was using it already. So it was really

00:31:11.960 --> 00:31:18.809
a breeze to have it.
&gt;&gt; CHAN: Yeah. So, basically, this portion

00:31:18.809 --> 00:31:26.200
of the code, like, based on, like, the cookie
and the URL, it will tell what state you're

00:31:26.200 --> 00:31:30.940
on and based on what state you're on. Like,
this function lobe basically builds the page

00:31:30.940 --> 00:31:37.230
and the view and also does any associated
behavior associated to that view.

00:31:37.230 --> 00:31:46.159
&gt;&gt; CHANEZON: Yeah. I think we're good for
the JavaScript. You can take a look at the

00:31:46.159 --> 00:31:50.730
JavaScript at that URL. All these URLs will
be in my delicious links after this presentation,

00:31:50.730 --> 00:31:59.529
and they're in the slides. So the slides will
be published on the Google I/O Conference,

00:31:59.529 --> 00:32:09.899
but I'm going to push them to my blog tonight.
So, if you look for, like, Chanezon, that's

00:32:09.899 --> 00:32:16.999
the first thing you will find and you'll find
them there, or look at my Twitter or my FriendFeed.

00:32:16.999 --> 00:32:22.360
It's all over the place. One last thing we
wanted to show you. Thanks very much, Henry.

00:32:22.360 --> 00:32:31.980
We're kind of a little bit late. So Srivaths
is going to tell us a little bit more about

00:32:31.980 --> 00:32:40.399
the back-end part of this.
&gt;&gt; LAKSHMI: Hello, everybody. My name is Srivaths,

00:32:40.399 --> 00:32:47.659
I'm the technical lead of TIME.com. Currently,
we are using Vignette content management system.

00:32:47.659 --> 00:32:56.629
There is no real database for this Friend
Connect to be supported. So what we did is

00:32:56.629 --> 00:33:05.879
we started using App Engine from Google. I'm
sure many of you have heard about it and to

00:33:05.879 --> 00:33:13.309
the [INDISTINCT] about App Engine. And with
the App Engine, we are able to send a secure

00:33:13.309 --> 00:33:20.999
token and the list ID from our packages, which
we call as full list. And with that, we are

00:33:20.999 --> 00:33:29.100
able to authenticate and get it back using
just a simple call from the JavaScript. Let

00:33:29.100 --> 00:33:40.159
me show you the App Engine all here. In the
data view or if you see here, the first one

00:33:40.159 --> 00:33:49.679
is the ID or the name, what you are using.
And second one is the date when the user put

00:33:49.679 --> 00:33:59.580
on the task, whether he either turns this
thing on or created a new account, a new list.

00:33:59.580 --> 00:34:05.220
The third one is the list ID and the fourth
one is the network. Sorry. The fourth one

00:34:05.220 --> 00:34:11.480
is the network, which is currently FC.
&gt;&gt; CHANEZON: So FC is for Friend Connect.

00:34:11.480 --> 00:34:18.909
&gt;&gt; LAKSHMI: Yeah. The network is Friend Connect
and the product is mostly Google all here.

00:34:18.909 --> 00:34:26.200
If you have logged in by a Yahoo! or AOL,
those URLs will be shown in order.

00:34:26.200 --> 00:34:38.780
&gt;&gt; CHANEZON: Oh, yeah, the Python is in there.
&gt;&gt; LAKSHMI: All right. It's really very easy

00:34:38.780 --> 00:34:43.799
to use this App Engine, as they mentioned
in the early morning in the [INDISTINCT] presentation.

00:34:43.799 --> 00:34:50.159
All you do is write Java or Python code and
it's very easy to deploy in the App Engine.

00:34:50.159 --> 00:34:58.390
And I believe it's free for now. So it's good
to give it a try.

00:34:58.390 --> 00:35:13.540
&gt;&gt; CHANEZON: It's free for up to 5 million
page use.

00:35:13.540 --> 00:35:21.990
&gt;&gt; LAKSHMI: Okay. That's good. If you're going
to get more than 5 million page uses, you

00:35:21.990 --> 00:35:27.359
are going to get enough revenues in that.
Someday you'll be able to pay for that. And

00:35:27.359 --> 00:35:36.319
this is the Python Code. It's basically, like,
less than 200 hundred lines of code. And the

00:35:36.319 --> 00:35:41.890
whole concept of this full list and Friend
Connect was done in less than three weeks.

00:35:41.890 --> 00:35:49.549
So you can imagine how fast this can be integrated
with Google Friend Connect. And few of the

00:35:49.549 --> 00:35:55.480
main things here is, like, if you see the
user ID, list IDs, swaps, token, callback,

00:35:55.480 --> 00:35:59.510
these are all the items which are used. And
as Henry mentioned in its core, the swaps

00:35:59.510 --> 00:36:05.109
will be showing, okay, the zero list ID has
been switched to nine, nine list ID have been

00:36:05.109 --> 00:36:10.940
switched to one, something like that. Everything
is done in JSONP call and the callback returns

00:36:10.940 --> 00:36:17.859
you with the necessary results for here. Well,
if you guys have any questions, we are available

00:36:17.859 --> 00:36:24.500
in the Sandbox until 6 p.m. today. And we
can walk you through and give some tries on

00:36:24.500 --> 00:36:29.609
trying to create some new list and see how
it works. Thank you very much.

00:36:29.609 --> 00:36:33.540
&gt;&gt; CHANEZON: Thanks. Okay, so that was the
TIME.com application. As Shivani said, they're

00:36:33.540 --> 00:36:38.799
working to finalize this and push it in production
very soon. And on my side, the part of the

00:36:38.799 --> 00:36:45.510
code that makes it at least social, like the
jQuery plug-in plus the App Engine back-end,

00:36:45.510 --> 00:36:55.390
I'm probably going to push that as an open
source project so that anybody can make their

00:36:55.390 --> 00:37:01.359
really social. And it chooses Friend Connect
and Facebook Connect. So now, we have Paul

00:37:01.359 --> 00:37:06.170
Berry from HuffingtonPost, who's going to
show us what these guys have built there.

00:37:06.170 --> 00:37:12.170
&gt;&gt; BERRY: Hi, guys. Well, that's loud. Okay.
I'm just going to run through a bunch of things

00:37:12.170 --> 00:37:23.140
and we can kind of go fast and show you guys
a quick background of HuffingPost.com. It's

00:37:23.140 --> 00:37:32.450
about three years old, three and a half years.
We're doing about 22-23 million UVs a month

00:37:32.450 --> 00:37:39.730
according to Google Analytics. We're at 250
million page views a month. And what I'm going

00:37:39.730 --> 00:37:45.809
to show you is totally live on the site right
now, and has been doing great. We've just

00:37:45.809 --> 00:37:50.680
really stepped--we've been cramming like mad
to have things ready for hearings. So there's,

00:37:50.680 --> 00:37:55.640
you know, there's things that are kind of
often, there's things we can't wait to build,

00:37:55.640 --> 00:38:02.549
but we're really excited as an organization
about Friend Connect and Social in general.

00:38:02.549 --> 00:38:17.020
And the features we've done have been taken
off wildly and we're really excited about

00:38:17.020 --> 00:38:32.220
them. We had on one particular--well, let
me back out a moment to just say that we're

00:38:32.220 --> 00:38:37.049
very concerned about making sure that you
can connect from any social network into Huffington

00:38:37.049 --> 00:38:42.540
Post and then have a very social experience
from there. So part of, like, built-in to

00:38:42.540 --> 00:38:47.500
the login screens--let me just ran back here--is
Friend Connect. And, basically for us, once

00:38:47.500 --> 00:38:55.150
you do sign in through Friend Connect or Facebook,
you become a HuffPost user. And you go through

00:38:55.150 --> 00:39:08.380
a process that I won't go through right now,
but basically, you choose your username based

00:39:08.380 --> 00:39:19.780
on your existing Gmail or Facebook username.
It does a check to see if is this duplicated

00:39:19.780 --> 00:39:25.849
or, you know, is there a Paul Berry in the
system already? And then, check maybe you

00:39:25.849 --> 00:39:32.740
are the Paul Berry and you know your HuffPost
password and you want to be able to sign in

00:39:32.740 --> 00:39:49.109
with Facebook and use social features. Or,
you know, is this a new user name that you

00:39:49.109 --> 00:39:53.319
have to choose because someone already has
yours? And then, we pull on profile photos

00:39:53.319 --> 00:40:01.150
and we scan for any existing friends from
that social network in ours already. So we

00:40:01.150 --> 00:40:08.180
have--just one thing to show is, like, this
is a random profile page that I picked just

00:40:08.180 --> 00:40:13.549
quickly before. But there's about 450,000
HuffPost users who have about 300,000 relationships

00:40:13.549 --> 00:40:19.369
between each other. So the Facebook Connect
piece and the Friend Connect piece have been

00:40:19.369 --> 00:40:26.349
really juicing that and adding to it. But
it's important for us as we build these things

00:40:26.349 --> 00:40:32.930
that we're not leaving our original user base
behind and that we're using these social backbones.

00:40:32.930 --> 00:40:38.270
So--and then, just randomly there's--you can
see how much people create these connections

00:40:38.270 --> 00:40:42.010
between each other. The fun thing--and I think
we can kind of get right into it--is basically

00:40:42.010 --> 00:40:42.920
the social slideshow is what we're calling
it. And it combines a slideshow that is kind

00:40:42.920 --> 00:40:49.849
of a monster page view generator with voting
and social and creating your own lists. So,

00:40:49.849 --> 00:40:57.680
if--so for example, this swimsuit--I mean,
yes, it's babes, so this going to do well

00:40:57.680 --> 00:41:03.819
in traffic, but it's been doing crazy well.
There were, you know, I don't know this morning

00:41:03.819 --> 00:41:09.299
when I checked on it, there have been 50,000
votes in the last couple hours. So people

00:41:09.299 --> 00:41:15.539
are going through and they're doing this vote
and they're saying, "Yeah, this Bettie Page

00:41:15.539 --> 00:41:21.770
swimsuit is pretty hot." But then they're
going into this next section and they are

00:41:21.770 --> 00:41:28.839
choosing their own top five. So, they can
say, all right, I'm going to put Phoebe at

00:41:28.839 --> 00:41:34.440
two and Denny Moore here, Bridgette Bardos
is pretty hot, okay, Welch, and then you now

00:41:34.440 --> 00:41:42.180
have this, and I won't go into the Facebook
stuff, but, you know, publish this to your

00:41:42.180 --> 00:41:51.619
stream there and that's adding a lot of viral
component. With Friend Connect, it's a little

00:41:51.619 --> 00:41:59.339
bit different and it sends you in through
an invite process that I will not sign in

00:41:59.339 --> 00:42:05.210
as you, sorry. And I won't be remembered here.
How's that? Unfortunately, like these are

00:42:05.210 --> 00:42:09.760
some things to sort out, is that this pop-up
thing is kind of annoying extra step that

00:42:09.760 --> 00:42:15.010
people have trouble with. But the idea is
that then off to your left, you have all the

00:42:15.010 --> 00:42:22.960
users, all your Gmail contacts so it's really
easy to grab a bunch of them, and then add

00:42:22.960 --> 00:42:31.539
someone by email and send them. And then,
basically, what they get sent to is a lot

00:42:31.539 --> 00:42:37.640
like--I think we were just having an issue
with this. So it's not exactly how it will

00:42:37.640 --> 00:42:41.559
look to them, but very similar to--oh, and
this worth taking a quick moment on. We're

00:42:41.559 --> 00:42:46.559
going to work out because thousands of users
have rated this slide, showing more people

00:42:46.559 --> 00:42:54.530
and having sort of a Jackson or action to
flip through them. But, you know, we're making

00:42:54.530 --> 00:43:01.380
it possible for people to see who rated--like
Sean Lynn rated this slide at 10 out of [INDISTINCT]

00:43:01.380 --> 00:43:09.789
or 10 out of 10 and etcetera, and so you kind
of see how they're reacting and voting on

00:43:09.789 --> 00:43:16.789
a particular one. And then--this, yeah, this
is--so when you send it out to your friends

00:43:16.789 --> 00:43:24.289
through Gmail, you come to a screen that's
similar like this, with a light box that pops

00:43:24.289 --> 00:43:35.200
up. And there's things--its design is kind
of ugly with a lot of extra white space, and

00:43:35.200 --> 00:43:39.460
so things to clean up there. But the most
important thing is that you're able to now

00:43:39.460 --> 00:43:45.099
let, you know, this user put up her top five
and have everyone react to that. So, basically--and

00:43:45.099 --> 00:43:52.950
then as you step through these things you
have a similar screen, but this has--we've

00:43:52.950 --> 00:43:59.630
launched, I think, the editors have a really
nice fast tool to be able to launch these

00:43:59.630 --> 00:44:05.869
and create different "I wouldn't wear, I would
wear," type of rankings to make it a game

00:44:05.869 --> 00:44:12.950
and a voting thing. We've seen about 20 million
page views to these slideshows in the last

00:44:12.950 --> 00:44:16.630
week alone. So, it's been really exciting
and there's definitely a lot more we have

00:44:16.630 --> 00:44:21.760
to do. But our platform had just done sort
of back to the nerd level for us all, is our

00:44:21.760 --> 00:44:27.309
platform is 70 percent Perl and 30 percent
PHP. And it gives us a flexibility that combined

00:44:27.309 --> 00:44:34.000
with the APIs here is really, you know, what
we've developed here, we got really into it

00:44:34.000 --> 00:44:41.869
and got crazy workaholic, but it's two or
three weeks of work that we've gone through

00:44:41.869 --> 00:44:55.490
for this. So I think it is huge props to Google
and Friend Connect for also helping us through

00:44:55.490 --> 00:45:00.900
it a little bit with advice. But it's pretty
awesome what publishers have, you know, as

00:45:00.900 --> 00:45:06.180
a resource to them. So, I think that's--you
have a question, Clint?

00:45:06.180 --> 00:45:11.869
&gt;&gt; CLINT: [INDISTINCT]
&gt;&gt; BERRY: Is there like a relationship map

00:45:11.869 --> 00:45:19.920
for that was--that we look at. We are not
really looking at like, okay, how many friends

00:45:19.920 --> 00:45:26.190
does this user have beyond the profile pages
which are public. So, we're looking at our

00:45:26.190 --> 00:45:33.940
total numbers and how they're growing at that
level. But--and then, sort of if I want to

00:45:33.940 --> 00:45:39.430
look at one particular user, their network
is sort of publicly visible. I don't think

00:45:39.430 --> 00:45:43.559
I'm really getting your question, though.
All right, so okay.

00:45:43.559 --> 00:45:49.140
&gt;&gt; CHANEZON: Okay. Thanks very much, Paul.
Okay. So, what you saw is essentially took

00:45:49.140 --> 00:45:54.380
publishers using Google Friend Connect user
to create a brand new community on their site

00:45:54.380 --> 00:45:59.640
or in the case of HuffingtonPost, just to
expand an existing community. Now, we have

00:45:59.640 --> 00:46:05.890
Khris Loux. Khris? Oh, yeah. So, Khris Loux
from JS-Kit is going to give us another perspective

00:46:05.890 --> 00:46:11.770
on Friend Connect. Thanks, Khris.
&gt;&gt; LOUX: You're welcome. Is this on? Thumbs

00:46:11.770 --> 00:46:17.480
up, yeah. Okay. Good. Good. I'm on one of
these tabs or I think... Wait a second, maybe

00:46:17.480 --> 00:46:22.480
she whacked it.
&gt;&gt; CHANEZON: Let me see.

00:46:22.480 --> 00:46:28.770
&gt;&gt; LOUX: See if you can find it.
&gt;&gt; CHANEZON: Yeah, yeah. Exactly.

00:46:28.770 --> 00:46:40.079
&gt;&gt; LOUX: In any case, my name is Khris Loux,
and I'm the CEO and co-founder of JS-Kit and

00:46:40.079 --> 00:46:45.089
essentially a widget maker or widgeteer, and
we provide social networking components for

00:46:45.089 --> 00:46:51.559
websites, commenting systems, ratings, polls,
a lot of the same type of technologies that

00:46:51.559 --> 00:46:56.750
you saw up there. They're general purpose
tools. People come to our site, they copy

00:46:56.750 --> 00:46:59.839
the code, paste it into their website and,
wallah, off they go. So the interesting thing

00:46:59.839 --> 00:47:03.049
about Google Friend Connecting and what we're
doing here is it's really a transformation

00:47:03.049 --> 00:47:06.770
from building an experience on your site to
distribution. All right. Engagement is answering

00:47:06.770 --> 00:47:11.579
a poll question, pretty interesting occupy
someone's time, but the ability to take that

00:47:11.579 --> 00:47:18.490
whole result and push it to a billion accounts
is really interesting and really worth while

00:47:18.490 --> 00:47:23.539
and those are the type of technologies with
Facebook Connect, Google Friend Connect, Yahoo!

00:47:23.539 --> 00:47:30.609
Updates, Microsoft Live, Twitter, etcetera,
etcetera. This is the next sort of wave. I

00:47:30.609 --> 00:47:41.510
mean, I think we all have engagement down
to a science. It's now how do we get the content

00:47:41.510 --> 00:47:49.549
that's on our site shattered and splintered
and sent out through the rest of the Internet.

00:47:49.549 --> 00:47:57.230
I think I gave the same presentation three
weeks ago. So we can either just play it or

00:47:57.230 --> 00:48:01.609
maybe I'll do it live. I don't know which
one. In any case, that's me but that's not

00:48:01.609 --> 00:48:08.289
why I did that. There's slides or something
along those lines which I didn't give--I think

00:48:08.289 --> 00:48:12.799
it's the slide as the last time, so I don't
think I should actually be allowed to use

00:48:12.799 --> 00:48:19.180
them again this time. But the guys--the boys
and girls that were up here earlier essentially

00:48:19.180 --> 00:48:26.730
told you to be how to get this stuff engaged,
and much of it, I just learned for the first

00:48:26.730 --> 00:48:32.470
time today. It's a beautiful chase on or whatever
that was. What I want to describe is, why

00:48:32.470 --> 00:48:37.160
you would implement Google Friend Connect
and why truly it is your friend and the community's

00:48:37.160 --> 00:48:44.319
friend writ large? And it goes back--or I
should say the story begins a couple months

00:48:44.319 --> 00:48:49.650
ago. When Facebook released their first publisher
side application and it was a commenting widget,

00:48:49.650 --> 00:48:54.329
and most people didn't notice except for--if
you're a commenting company and you sort of

00:48:54.329 --> 00:49:01.099
get, "Oh, man, we got a large competitor.
Now, what we do about it?" Well, one of the

00:49:01.099 --> 00:49:06.700
ideas is that we would change business models
and maybe bake cookies or something like that,

00:49:06.700 --> 00:49:09.910
and so, none of us can bake, so maybe we'll
stay in the commenting business. So, how do

00:49:09.910 --> 00:49:15.059
we turn a brand new gigantic competitor into
a super huge opportunity? And that's really

00:49:15.059 --> 00:49:16.490
what Facebook Connect and Google Friend Connect
allowed us to do. So, before I dive down into

00:49:16.490 --> 00:49:20.970
this, I want to describe how clever and interesting
the Facebook model is and how you can leverage

00:49:20.970 --> 00:49:27.420
it and how you need to be careful of it all
at the same. I view Facebook as room, right?

00:49:27.420 --> 00:49:27.980
They've consolidated the social networking
space for this particular cycle. How long

00:49:27.980 --> 00:49:29.650
it last, who knows, but the hard argue that
they haven't wanted for now, I mean, their

00:49:29.650 --> 00:49:32.549
growth chart is like the shuttle taking off.
They have, you know, multiple countries. They're

00:49:32.549 --> 00:49:34.069
winning in Europe, in Asia, in the United
States. They're winning across demographics.

00:49:34.069 --> 00:49:38.569
It's my grandmother, my mother, my kids, everyone's
on Facebook right now and so they've got room

00:49:38.569 --> 00:49:45.170
and they've consolidated their power there.
What they then did very cleverly was to build

00:49:45.170 --> 00:49:52.809
roads out of room, right? Facebook Connect,
it gets them off of their dot-com and then

00:49:52.809 --> 00:49:58.059
this first application, comments, is a garrison.
It's a publisher side application that sits

00:49:58.059 --> 00:50:03.240
off of facebook.com and it is now outside.
And so, there's logic that says, "Hey, the

00:50:03.240 --> 00:50:07.819
walled garden is dead and it doesn't work."
Well, that's fine except for their strategy

00:50:07.819 --> 00:50:12.770
is to expand the walled garden until it's
every dot-com, right? And it's beautiful and

00:50:12.770 --> 00:50:18.910
I hope this stuff, it doesn't work because
there would be no room for us. No, no, no.

00:50:18.910 --> 00:50:20.380
It's a good strategy. You need to ask the
question, especially the Google Conference,

00:50:20.380 --> 00:50:24.609
right, are they evil and the answer is no.
They're being extremely rational, right? It's

00:50:24.609 --> 00:50:27.260
a logical step to expand off of their domain,
leverage what they've got to expand to a wider

00:50:27.260 --> 00:50:28.579
sphere. Okay. So what do we, what do we do
it all of this? If we view it externally,

00:50:28.579 --> 00:50:32.609
we could kind of look at the social networking
stack that they've created in a similar way

00:50:32.609 --> 00:50:37.680
to the elegant stack that Apple created with
the Apple music stack, right? And it may be

00:50:37.680 --> 00:50:38.400
the Facebook's social networking stock will
be as brutally effective as Apple was against

00:50:38.400 --> 00:50:38.650
the MP3 player industry. Can you name another
MP3 player company? Yeah, I can't either.

00:50:38.650 --> 00:50:38.980
So, what that means is they're in a position
to dominate writ large and things like Yahoo!

00:50:38.980 --> 00:50:42.289
Updates, Google Friend Connect, Twitter, etcetera,
or really counter balances to that and in

00:50:42.289 --> 00:50:45.520
this time of transition, it's an opportunity
for us, the community, to take some of the

00:50:45.520 --> 00:50:52.430
power back. Okay. So, what is--what are the
stakes in all of this? If you look at the

00:50:52.430 --> 00:50:53.329
larger technology cycles, kind of IBM, Microsoft,
Google, question mark, who's next, you see

00:50:53.329 --> 00:50:54.210
some things that happen. When IBM dominated
their stack, right, the hardware stack, the

00:50:54.210 --> 00:50:55.059
application, they wind up controlling innovations
and revenues for 20 years, right? '70s and

00:50:55.059 --> 00:50:56.190
'80s were just, it was IBM. And then, when
they, let's say, handed the crown to Microsoft,

00:50:56.190 --> 00:50:56.650
whether it was taken or handed, you know,
that's for the historians to talk about, but

00:50:56.650 --> 00:50:57.079
when the crown was passed to Microsoft, Microsoft
was our savior. Does anyone remember this?

00:50:57.079 --> 00:50:57.559
This was like in that late '80s. I bought
some of their first stock. I was in college.

00:50:57.559 --> 00:50:58.039
It was so exciting and they saved us from
the evil empire of IBM at the time, and that

00:50:58.039 --> 00:50:58.510
was great. They were our new savior until
one thing, until I got locked at it, and then

00:50:58.510 --> 00:50:58.920
it sort of sucked for another couple decades
as they ground out all of the innovations

00:50:58.920 --> 00:50:59.380
and all of the revenue. I mean, by and large
they took the heartbeat out of the industry

00:50:59.380 --> 00:51:01.160
and it left a bunch of us that were coding
on the sidelines, right, to get little crumbs

00:51:01.160 --> 00:51:03.000
off of the side of this behemoth. And you
can see what happens is, they take--I'll just

00:51:03.000 --> 00:51:04.309
make a point on this. The incumbent is a stifle
to innovation, right, their innovation adverse.

00:51:04.309 --> 00:51:05.180
Why at the time should Microsoft innovate?
All I have to do is wait, right? WordPerfect

00:51:05.180 --> 00:51:06.109
grows and it's beautiful and they can get
revenue, so they released Word, oh, a third

00:51:06.109 --> 00:51:06.329
the prize and they completely cannibalized
that company and those sets of technologies,

00:51:06.329 --> 00:51:06.730
and so they just wait on this thing. They
keep going and keep grinding it out and if

00:51:06.730 --> 00:51:07.289
they get it wrong it doesn't matter. They
just throw that product out and try again

00:51:07.289 --> 00:51:08.920
and try again, because the core revenue was
off the operating system. They didn't have

00:51:08.920 --> 00:51:11.099
to win with word processing. And you see,
again, the cycle went and it was handed or

00:51:11.099 --> 00:51:11.579
taken, or evolved to Google, right? When we
moved from the OS as a desktop application

00:51:11.579 --> 00:51:11.890
to the Internet as the operating system--if
you'll allow that as an analogy--the same

00:51:11.890 --> 00:51:12.240
types of processes happened again, right?
What did it cost or what does it cost Google

00:51:12.240 --> 00:51:12.559
to release Google Spreadsheet or Google Docs,
right? Not too much. It's a great application,

00:51:12.559 --> 00:51:12.920
works real well, but it has this perverse
effect of taking core revenue out of the prior

00:51:12.920 --> 00:51:19.120
incumbent, right? Every license that didn't
get solved, there's a revenue right of Microsoft's

00:51:12.920 --> 00:51:18.786
pile, and it doesn't hurt Google at all. And
so these are giant cycles that are happening

00:51:12.920 --> 00:51:18.069
and this is why this evolution, this little
timeframe right now were the social graph

00:51:18.069 --> 00:51:20.069
is not yet owned is important, and it's important
for us, is, you know, visitors, and publishers

00:51:20.069 --> 00:51:20.859
and developers to kind of seize the day here.
We have a choice of either kind of going through

00:51:20.859 --> 00:51:21.930
this, the cycle of, you know, anoint the king
and then crucify them and anoint another king

00:51:21.930 --> 00:51:22.809
and then crucify them, or we can decide as
a community that we want self rule, right,

00:51:22.809 --> 00:51:26.930
that we want to empower ourselves, that we
want to own the innovation work flows and

00:51:26.930 --> 00:51:28.880
the resulting revenue flows from these technologies.
And there's some early warning signs here.

00:51:28.880 --> 00:51:29.549
Take a look at Twitter or Facebook. Now, Facebook
had an opportunity to buy Twitter and, you

00:51:29.549 --> 00:51:31.010
know, personally I think they, or at least,
they were in negotiations. I think they should've

00:51:31.010 --> 00:51:36.743
done it, personal opinion, probably another
talk, but at the end of the day they didn't

00:51:31.010 --> 00:51:33.109
have to buy them, right? What did they do?
They reworked Facebook to include that core

00:51:33.109 --> 00:51:33.430
technology. They didn't need to innovate Twitter.
They just needed to copy it. And so, these

00:51:33.430 --> 00:51:34.180
early signs are here. And so, there's an approach
that can be taken here that could be, again,

00:51:34.180 --> 00:51:34.460
fearful, what do we do? Back off, integrate
Facebook, don't integrate Facebook, etcetera.

00:51:34.460 --> 00:51:44.440
Or, we can take an absorption strategy, which
works very well against one player. And so

00:51:44.440 --> 00:51:45.359
the advice that I would give this group as
I have with our own company is not to view,

00:51:45.359 --> 00:51:46.299
you know, either Google Friend Connect or
Yahoo! or Microsoft or Facebook is either

00:51:46.299 --> 00:51:46.760
evil or negative, or whatever. They are all
opportunities. So in our particular development

00:51:46.760 --> 00:51:52.893
path, we implemented OpenID, we implemented
Facebook Connect, Google Friend connect, Twitter,

00:51:46.760 --> 00:51:47.000
etcetera, etcetera. So, instead of having
a situation where we have 200 million users

00:51:47.000 --> 00:51:48.059
from Facebook, we now have access to a billion
users and we now have leveled this playing

00:51:48.059 --> 00:51:49.089
field. So we no longer make a decision when
someone uses our commenting service or our

00:51:49.089 --> 00:51:49.650
rating service or our poll service, what social
network the visitors need to use. They should

00:51:49.650 --> 00:51:52.190
just pick the one that they like, right? In
so doing, we divide out the strength, right?

00:51:52.190 --> 00:51:55.490
We pass things out so that it's more of a
level playing field, and the benefit endorsed

00:51:55.490 --> 00:51:56.799
to us, right? When someone leaves a comment
on one of our sites, it pushes to all of their

00:51:56.799 --> 00:51:57.059
Twitter users, all of their Facebook users,
all of their Yahoo! YM buddies, etcetera,

00:51:57.059 --> 00:51:57.869
etcetera, etcetera. That's power, right? Engagement
is on the site. The tools like Google Friend

00:51:57.869 --> 00:51:58.140
Connect allow you to blast this content out
and get tens of thousands of users engaged.

00:51:58.140 --> 00:51:58.160
And quite frankly, HuffPost guy with the little
photos, man, you start putting that--those

00:51:58.160 --> 00:51:58.180
types of things out on Facebook and Twitter,
etcetera, you're going to drive traffic. I

00:51:58.180 --> 00:51:58.200
was engaged. In fact, what was the link to
that site anyway? But this is the larger reason.

00:51:58.200 --> 00:51:58.859
This is the larger issue of why you would
do these things? It is more work, right, to

00:51:58.859 --> 00:51:58.900
integrate both Facebook and Google Friend
Connect, but it is gigantic in its ramifications.

00:51:58.900 --> 00:51:58.940
It's an existential question. It's not really
a development question. It's a question of,

00:51:58.940 --> 00:51:58.980
"If you want your products or your websites
to survive long-term, then you need to implement

00:51:58.980 --> 00:51:59.029
and integrate both of these sets of technologies."
I think we're crushed for time. I have two

00:51:59.029 --> 00:51:59.730
seconds. What do I say? Okay. That's it. A
wrap. All right. Thank you very much. I appreciate

00:51:59.730 --> 00:52:00.150
it.
&gt;&gt; CHANEZON: Thank you. Yeah. So, I don't

00:52:00.150 --> 00:52:00.510
have time for Q and A, but all of us will
just be outside. So just grab us for questioning

00:52:00.510 --> 00:52:00.950
for there and I hope that this will give you
a good idea of how to implement Friend Connect

00:52:00.950 --> 00:52:12.700
and why you should do it, and hood luck seizing
all these opportunities. Thanks.

