WEBVTT
Kind: captions
Language: en

00:00:05.650 --> 00:00:07.560
had a funny incident last night I went

00:00:07.560 --> 00:00:07.570
had a funny incident last night I went
 

00:00:07.570 --> 00:00:09.390
had a funny incident last night I went
back to the hotel

00:00:09.390 --> 00:00:09.400
back to the hotel
 

00:00:09.400 --> 00:00:13.170
back to the hotel
and then you know went for my room put

00:00:13.170 --> 00:00:13.180
and then you know went for my room put
 

00:00:13.180 --> 00:00:15.030
and then you know went for my room put
in the room card and nothing happened I

00:00:15.030 --> 00:00:15.040
in the room card and nothing happened I
 

00:00:15.040 --> 00:00:17.250
in the room card and nothing happened I
forgot my room number tried out a few

00:00:17.250 --> 00:00:17.260
forgot my room number tried out a few
 

00:00:17.260 --> 00:00:19.530
forgot my room number tried out a few
other rooms and was completely weird

00:00:19.530 --> 00:00:19.540
other rooms and was completely weird
 

00:00:19.540 --> 00:00:20.609
other rooms and was completely weird
what is going on

00:00:20.609 --> 00:00:20.619
what is going on
 

00:00:20.619 --> 00:00:22.999
what is going on
so when down to the reception and said

00:00:22.999 --> 00:00:23.009
so when down to the reception and said
 

00:00:23.009 --> 00:00:26.069
so when down to the reception and said
either a card is broken or forgot my

00:00:26.069 --> 00:00:26.079
either a card is broken or forgot my
 

00:00:26.079 --> 00:00:28.650
either a card is broken or forgot my
room number let me see your card no

00:00:28.650 --> 00:00:28.660
room number let me see your card no
 

00:00:28.660 --> 00:00:35.580
room number let me see your card no
you're no Roman Hotel go down you one is

00:00:35.580 --> 00:00:35.590
you're no Roman Hotel go down you one is
 

00:00:35.590 --> 00:00:36.960
you're no Roman Hotel go down you one is
down the street is one further down I

00:00:36.960 --> 00:00:36.970
down the street is one further down I
 

00:00:36.970 --> 00:00:39.779
down the street is one further down I
said okay so it's not it's not even

00:00:39.779 --> 00:00:39.789
said okay so it's not it's not even
 

00:00:39.789 --> 00:00:41.970
said okay so it's not it's not even
finished a story then went when went to

00:00:41.970 --> 00:00:41.980
finished a story then went when went to
 

00:00:41.980 --> 00:00:44.639
finished a story then went when went to
the hotel I said wow it looks really

00:00:44.639 --> 00:00:44.649
the hotel I said wow it looks really
 

00:00:44.649 --> 00:00:46.529
the hotel I said wow it looks really
similar and then in a friend of mine

00:00:46.529 --> 00:00:46.539
similar and then in a friend of mine
 

00:00:46.539 --> 00:00:48.090
similar and then in a friend of mine
right I haven't seen for a while

00:00:48.090 --> 00:00:48.100
right I haven't seen for a while
 

00:00:48.100 --> 00:00:49.259
right I haven't seen for a while
and I just told her the story you know

00:00:49.259 --> 00:00:49.269
and I just told her the story you know
 

00:00:49.269 --> 00:00:51.389
and I just told her the story you know
what happened to me and so we went up to

00:00:51.389 --> 00:00:51.399
what happened to me and so we went up to
 

00:00:51.399 --> 00:00:54.419
what happened to me and so we went up to
the second floor and we said goodbye and

00:00:54.419 --> 00:00:54.429
the second floor and we said goodbye and
 

00:00:54.429 --> 00:00:57.270
the second floor and we said goodbye and
then she went to a room well she went to

00:00:57.270 --> 00:00:57.280
then she went to a room well she went to
 

00:00:57.280 --> 00:00:59.459
then she went to a room well she went to
my room and put a room card in the room

00:00:59.459 --> 00:00:59.469
my room and put a room card in the room
 

00:00:59.469 --> 00:01:04.410
my room and put a room card in the room
on my room du'a I said and she was in

00:01:04.410 --> 00:01:04.420
on my room du'a I said and she was in
 

00:01:04.420 --> 00:01:08.340
on my room du'a I said and she was in
the wrong hotel and she was in the one I

00:01:08.340 --> 00:01:08.350
the wrong hotel and she was in the one I
 

00:01:08.350 --> 00:01:10.440
the wrong hotel and she was in the one I
was before so that's the Hampton and the

00:01:10.440 --> 00:01:10.450
was before so that's the Hampton and the
 

00:01:10.450 --> 00:01:16.430
was before so that's the Hampton and the
holiday and that was really funny yeah

00:01:16.430 --> 00:01:16.440
holiday and that was really funny yeah
 

00:01:16.440 --> 00:01:20.580
holiday and that was really funny yeah
okay deep dive into the crater based

00:01:20.580 --> 00:01:20.590
okay deep dive into the crater based
 

00:01:20.590 --> 00:01:22.950
okay deep dive into the crater based
Android build system I'm Hans doctor I'm

00:01:22.950 --> 00:01:22.960
Android build system I'm Hans doctor I'm
 

00:01:22.960 --> 00:01:25.640
Android build system I'm Hans doctor I'm
the founder of Gradle and the CEO of

00:01:25.640 --> 00:01:25.650
the founder of Gradle and the CEO of
 

00:01:25.650 --> 00:01:29.760
the founder of Gradle and the CEO of
Gradle Inc and I want to talk about the

00:01:29.760 --> 00:01:29.770
Gradle Inc and I want to talk about the
 

00:01:29.770 --> 00:01:31.530
Gradle Inc and I want to talk about the
Android build system right the deep

00:01:31.530 --> 00:01:31.540
Android build system right the deep
 

00:01:31.540 --> 00:01:33.300
Android build system right the deep
concepts behind the Android build system

00:01:33.300 --> 00:01:33.310
concepts behind the Android build system
 

00:01:33.310 --> 00:01:38.040
concepts behind the Android build system
and why it is created that way and let's

00:01:38.040 --> 00:01:38.050
and why it is created that way and let's
 

00:01:38.050 --> 00:01:41.430
and why it is created that way and let's
start so what are the goals of the

00:01:41.430 --> 00:01:41.440
start so what are the goals of the
 

00:01:41.440 --> 00:01:43.260
start so what are the goals of the
Gradle android based build system I

00:01:43.260 --> 00:01:43.270
Gradle android based build system I
 

00:01:43.270 --> 00:01:46.530
Gradle android based build system I
think it is very important to understand

00:01:46.530 --> 00:01:46.540
think it is very important to understand
 

00:01:46.540 --> 00:01:50.550
think it is very important to understand
as an educated Android developer why why

00:01:50.550 --> 00:01:50.560
as an educated Android developer why why
 

00:01:50.560 --> 00:01:52.110
as an educated Android developer why why
what are the qualities what are the

00:01:52.110 --> 00:01:52.120
what are the qualities what are the
 

00:01:52.120 --> 00:01:54.230
what are the qualities what are the
deeper design goals of that build system

00:01:54.230 --> 00:01:54.240
deeper design goals of that build system
 

00:01:54.240 --> 00:01:56.430
deeper design goals of that build system
even if you use it from Android studio

00:01:56.430 --> 00:01:56.440
even if you use it from Android studio
 

00:01:56.440 --> 00:01:58.530
even if you use it from Android studio
right and it's still it's still I think

00:01:58.530 --> 00:01:58.540
right and it's still it's still I think
 

00:01:58.540 --> 00:02:00.540
right and it's still it's still I think
important to understand and also when

00:02:00.540 --> 00:02:00.550
important to understand and also when
 

00:02:00.550 --> 00:02:02.850
important to understand and also when
you compare it with other platforms and

00:02:02.850 --> 00:02:02.860
you compare it with other platforms and
 

00:02:02.860 --> 00:02:05.370
you compare it with other platforms and
it's also interesting to see how we are

00:02:05.370 --> 00:02:05.380
it's also interesting to see how we are
 

00:02:05.380 --> 00:02:07.530
it's also interesting to see how we are
actually doing in reality in regard to

00:02:07.530 --> 00:02:07.540
actually doing in reality in regard to
 

00:02:07.540 --> 00:02:10.259
actually doing in reality in regard to
our lofty goals right or not so lofty

00:02:10.259 --> 00:02:10.269
our lofty goals right or not so lofty
 

00:02:10.269 --> 00:02:14.820
our lofty goals right or not so lofty
we'll see so the first thing to

00:02:14.820 --> 00:02:14.830
we'll see so the first thing to
 

00:02:14.830 --> 00:02:18.270
we'll see so the first thing to
understand Android is a complex player

00:02:18.270 --> 00:02:18.280
understand Android is a complex player
 

00:02:18.280 --> 00:02:21.290
understand Android is a complex player
form right not quite as complex as C C++

00:02:21.290 --> 00:02:21.300
form right not quite as complex as C C++
 

00:02:21.300 --> 00:02:27.680
form right not quite as complex as C C++
but way more complex than Java right so

00:02:27.680 --> 00:02:27.690
 

00:02:27.690 --> 00:02:31.500
when you look at this diagram even if

00:02:31.500 --> 00:02:31.510
when you look at this diagram even if
 

00:02:31.510 --> 00:02:34.710
when you look at this diagram even if
you can't read what is in there this is

00:02:34.710 --> 00:02:34.720
you can't read what is in there this is
 

00:02:34.720 --> 00:02:36.300
you can't read what is in there this is
the workflow of building an Android

00:02:36.300 --> 00:02:36.310
the workflow of building an Android
 

00:02:36.310 --> 00:02:39.690
the workflow of building an Android
application right so you have and you

00:02:39.690 --> 00:02:39.700
application right so you have and you
 

00:02:39.700 --> 00:02:41.490
application right so you have and you
all know that you have complex resource

00:02:41.490 --> 00:02:41.500
all know that you have complex resource
 

00:02:41.500 --> 00:02:43.199
all know that you have complex resource
and code generation right you don't have

00:02:43.199 --> 00:02:43.209
and code generation right you don't have
 

00:02:43.209 --> 00:02:45.420
and code generation right you don't have
that in Java you have multiple different

00:02:45.420 --> 00:02:45.430
that in Java you have multiple different
 

00:02:45.430 --> 00:02:48.960
that in Java you have multiple different
languages the NDK Java you have to

00:02:48.960 --> 00:02:48.970
languages the NDK Java you have to
 

00:02:48.970 --> 00:02:53.400
languages the NDK Java you have to
interface definition languages and so so

00:02:53.400 --> 00:02:53.410
interface definition languages and so so
 

00:02:53.410 --> 00:02:54.540
interface definition languages and so so
there's a lot going on you have to

00:02:54.540 --> 00:02:54.550
there's a lot going on you have to
 

00:02:54.550 --> 00:02:56.580
there's a lot going on you have to
signing you have the deck saying plus

00:02:56.580 --> 00:02:56.590
signing you have the deck saying plus
 

00:02:56.590 --> 00:02:58.979
signing you have the deck saying plus
the compiling and so on and so on

00:02:58.979 --> 00:02:58.989
the compiling and so on and so on
 

00:02:58.989 --> 00:03:03.390
the compiling and so on and so on
so the original Java tools that were

00:03:03.390 --> 00:03:03.400
so the original Java tools that were
 

00:03:03.400 --> 00:03:06.180
so the original Java tools that were
used to build Android apps are not made

00:03:06.180 --> 00:03:06.190
used to build Android apps are not made
 

00:03:06.190 --> 00:03:09.300
used to build Android apps are not made
for that complexity that was and there

00:03:09.300 --> 00:03:09.310
for that complexity that was and there
 

00:03:09.310 --> 00:03:12.090
for that complexity that was and there
was eclipse and it was for quite a few

00:03:12.090 --> 00:03:12.100
was eclipse and it was for quite a few
 

00:03:12.100 --> 00:03:15.090
was eclipse and it was for quite a few
people Nathan right so they're already

00:03:15.090 --> 00:03:15.100
people Nathan right so they're already
 

00:03:15.100 --> 00:03:17.220
people Nathan right so they're already
hitting the limit in Java land and they

00:03:17.220 --> 00:03:17.230
hitting the limit in Java land and they
 

00:03:17.230 --> 00:03:23.130
hitting the limit in Java land and they
were not made for Android and and I

00:03:23.130 --> 00:03:23.140
were not made for Android and and I
 

00:03:23.140 --> 00:03:24.690
were not made for Android and and I
talked about it you know renderscript

00:03:24.690 --> 00:03:24.700
talked about it you know renderscript
 

00:03:24.700 --> 00:03:26.640
talked about it you know renderscript
and the native code and whatnot but

00:03:26.640 --> 00:03:26.650
and the native code and whatnot but
 

00:03:26.650 --> 00:03:29.069
and the native code and whatnot but
there's another challenge in Android

00:03:29.069 --> 00:03:29.079
there's another challenge in Android
 

00:03:29.079 --> 00:03:29.490
there's another challenge in Android
land

00:03:29.490 --> 00:03:29.500
land
 

00:03:29.500 --> 00:03:33.270
land
I call it platform diversity others call

00:03:33.270 --> 00:03:33.280
I call it platform diversity others call
 

00:03:33.280 --> 00:03:36.720
I call it platform diversity others call
it fragmentation and this has been one

00:03:36.720 --> 00:03:36.730
it fragmentation and this has been one
 

00:03:36.730 --> 00:03:38.610
it fragmentation and this has been one
of the biggest pain point for developers

00:03:38.610 --> 00:03:38.620
of the biggest pain point for developers
 

00:03:38.620 --> 00:03:40.350
of the biggest pain point for developers
to deal with right I just want to have a

00:03:40.350 --> 00:03:40.360
to deal with right I just want to have a
 

00:03:40.360 --> 00:03:42.569
to deal with right I just want to have a
little variation of my app for that

00:03:42.569 --> 00:03:42.579
little variation of my app for that
 

00:03:42.579 --> 00:03:45.150
little variation of my app for that
platform right and it was very hard to

00:03:45.150 --> 00:03:45.160
platform right and it was very hard to
 

00:03:45.160 --> 00:03:46.590
platform right and it was very hard to
implement with the current build with

00:03:46.590 --> 00:03:46.600
implement with the current build with
 

00:03:46.600 --> 00:03:49.380
implement with the current build with
the build system at that time so how to

00:03:49.380 --> 00:03:49.390
the build system at that time so how to
 

00:03:49.390 --> 00:03:51.569
the build system at that time so how to
make this diversity approachable from a

00:03:51.569 --> 00:03:51.579
make this diversity approachable from a
 

00:03:51.579 --> 00:03:53.340
make this diversity approachable from a
developer tooling perspective was a key

00:03:53.340 --> 00:03:53.350
developer tooling perspective was a key
 

00:03:53.350 --> 00:03:58.890
developer tooling perspective was a key
goal for the new build system ok I

00:03:58.890 --> 00:03:58.900
goal for the new build system ok I
 

00:03:58.900 --> 00:04:02.550
goal for the new build system ok I
forgot my transitions okay here we go so

00:04:02.550 --> 00:04:02.560
forgot my transitions okay here we go so
 

00:04:02.560 --> 00:04:05.849
forgot my transitions okay here we go so
what makes Gradle unique and what is

00:04:05.849 --> 00:04:05.859
what makes Gradle unique and what is
 

00:04:05.859 --> 00:04:07.680
what makes Gradle unique and what is
harnessed by the Gradle android plug-in

00:04:07.680 --> 00:04:07.690
harnessed by the Gradle android plug-in
 

00:04:07.690 --> 00:04:12.060
harnessed by the Gradle android plug-in
is that you have the expressiveness to

00:04:12.060 --> 00:04:12.070
is that you have the expressiveness to
 

00:04:12.070 --> 00:04:15.690
is that you have the expressiveness to
model the complexity right that you have

00:04:15.690 --> 00:04:15.700
model the complexity right that you have
 

00:04:15.700 --> 00:04:17.640
model the complexity right that you have
really concise descriptions of your

00:04:17.640 --> 00:04:17.650
really concise descriptions of your
 

00:04:17.650 --> 00:04:18.060
really concise descriptions of your
build

00:04:18.060 --> 00:04:18.070
build
 

00:04:18.070 --> 00:04:20.130
build
that's something may even do something

00:04:20.130 --> 00:04:20.140
that's something may even do something
 

00:04:20.140 --> 00:04:22.320
that's something may even do something
was doing a reasonable job in Java and

00:04:22.320 --> 00:04:22.330
was doing a reasonable job in Java and
 

00:04:22.330 --> 00:04:24.029
was doing a reasonable job in Java and
so that is that is a strength of Gradle

00:04:24.029 --> 00:04:24.039
so that is that is a strength of Gradle
 

00:04:24.039 --> 00:04:27.690
so that is that is a strength of Gradle
at the same time maven is concise for

00:04:27.690 --> 00:04:27.700
at the same time maven is concise for
 

00:04:27.700 --> 00:04:29.399
at the same time maven is concise for
simple use cases but can't go beyond

00:04:29.399 --> 00:04:29.409
simple use cases but can't go beyond
 

00:04:29.409 --> 00:04:31.029
simple use cases but can't go beyond
that and

00:04:31.029 --> 00:04:31.039
that and
 

00:04:31.039 --> 00:04:35.499
that and
or other similar kind of design systems

00:04:35.499 --> 00:04:35.509
or other similar kind of design systems
 

00:04:35.509 --> 00:04:37.869
or other similar kind of design systems
like a Facebook back or whatnot they are

00:04:37.869 --> 00:04:37.879
like a Facebook back or whatnot they are
 

00:04:37.879 --> 00:04:40.329
like a Facebook back or whatnot they are
very flexible but they expose a level of

00:04:40.329 --> 00:04:40.339
very flexible but they expose a level of
 

00:04:40.339 --> 00:04:42.100
very flexible but they expose a level of
complexity to develop us and build

00:04:42.100 --> 00:04:42.110
complexity to develop us and build
 

00:04:42.110 --> 00:04:45.089
complexity to develop us and build
masters that is at one point very

00:04:45.089 --> 00:04:45.099
masters that is at one point very
 

00:04:45.099 --> 00:04:49.119
masters that is at one point very
expensive to manage right so in Gradle

00:04:49.119 --> 00:04:49.129
expensive to manage right so in Gradle
 

00:04:49.129 --> 00:04:51.939
expensive to manage right so in Gradle
tries to combine the conciseness of a

00:04:51.939 --> 00:04:51.949
tries to combine the conciseness of a
 

00:04:51.949 --> 00:04:53.679
tries to combine the conciseness of a
declarative build language like maven

00:04:53.679 --> 00:04:53.689
declarative build language like maven
 

00:04:53.689 --> 00:04:56.889
declarative build language like maven
right without sacrificing the power and

00:04:56.889 --> 00:04:56.899
right without sacrificing the power and
 

00:04:56.899 --> 00:04:59.049
right without sacrificing the power and
and the flexibility and the extend

00:04:59.049 --> 00:04:59.059
and the flexibility and the extend
 

00:04:59.059 --> 00:05:03.100
and the flexibility and the extend
ability that you have with and an IV in

00:05:03.100 --> 00:05:03.110
ability that you have with and an IV in
 

00:05:03.110 --> 00:05:05.829
ability that you have with and an IV in
fact done right if you combine it you

00:05:05.829 --> 00:05:05.839
fact done right if you combine it you
 

00:05:05.839 --> 00:05:07.929
fact done right if you combine it you
get even better extensibility now we'll

00:05:07.929 --> 00:05:07.939
get even better extensibility now we'll
 

00:05:07.939 --> 00:05:11.499
get even better extensibility now we'll
talk about that later ok so to give you

00:05:11.499 --> 00:05:11.509
talk about that later ok so to give you
 

00:05:11.509 --> 00:05:13.209
talk about that later ok so to give you
an example what I mean with conciseness

00:05:13.209 --> 00:05:13.219
an example what I mean with conciseness
 

00:05:13.219 --> 00:05:16.719
an example what I mean with conciseness
right look at this very simple bill

00:05:16.719 --> 00:05:16.729
right look at this very simple bill
 

00:05:16.729 --> 00:05:18.850
right look at this very simple bill
definition for standalone Android app a

00:05:18.850 --> 00:05:18.860
definition for standalone Android app a
 

00:05:18.860 --> 00:05:21.339
definition for standalone Android app a
few lines of code you have two product

00:05:21.339 --> 00:05:21.349
few lines of code you have two product
 

00:05:21.349 --> 00:05:24.639
few lines of code you have two product
flavors right two dimensions and for

00:05:24.639 --> 00:05:24.649
flavors right two dimensions and for
 

00:05:24.649 --> 00:05:26.409
flavors right two dimensions and for
each dimensions you have two you have

00:05:26.409 --> 00:05:26.419
each dimensions you have two you have
 

00:05:26.419 --> 00:05:28.510
each dimensions you have two you have
two flavors right for the version you

00:05:28.510 --> 00:05:28.520
two flavors right for the version you
 

00:05:28.520 --> 00:05:29.949
two flavors right for the version you
have a free and a paid version for the

00:05:29.949 --> 00:05:29.959
have a free and a paid version for the
 

00:05:29.959 --> 00:05:36.299
have a free and a paid version for the
ABI you have a RM and x86 right so and

00:05:36.299 --> 00:05:36.309
ABI you have a RM and x86 right so and
 

00:05:36.309 --> 00:05:38.980
ABI you have a RM and x86 right so and
you could now do certain definitions

00:05:38.980 --> 00:05:38.990
you could now do certain definitions
 

00:05:38.990 --> 00:05:40.299
you could now do certain definitions
what you can already do when you have

00:05:40.299 --> 00:05:40.309
what you can already do when you have
 

00:05:40.309 --> 00:05:42.639
what you can already do when you have
such a definition you can put code in

00:05:42.639 --> 00:05:42.649
such a definition you can put code in
 

00:05:42.649 --> 00:05:45.279
such a definition you can put code in
source free or test in source free or in

00:05:45.279 --> 00:05:45.289
source free or test in source free or in
 

00:05:45.289 --> 00:05:47.980
source free or test in source free or in
sauce paid or and so say more sauce 86

00:05:47.980 --> 00:05:47.990
sauce paid or and so say more sauce 86
 

00:05:47.990 --> 00:05:49.839
sauce paid or and so say more sauce 86
and end what knows exactly the end what

00:05:49.839 --> 00:05:49.849
and end what knows exactly the end what
 

00:05:49.849 --> 00:05:50.949
and end what knows exactly the end what
builds into what to do with that

00:05:50.949 --> 00:05:50.959
builds into what to do with that
 

00:05:50.959 --> 00:05:53.110
builds into what to do with that
right it runs the free test only when

00:05:53.110 --> 00:05:53.120
right it runs the free test only when
 

00:05:53.120 --> 00:05:55.149
right it runs the free test only when
you built a free apk and so on and so on

00:05:55.149 --> 00:05:55.159
you built a free apk and so on and so on
 

00:05:55.159 --> 00:05:58.689
you built a free apk and so on and so on
so that is it is a reasonably simple

00:05:58.689 --> 00:05:58.699
so that is it is a reasonably simple
 

00:05:58.699 --> 00:06:01.360
so that is it is a reasonably simple
problem right and this is how it exists

00:06:01.360 --> 00:06:01.370
problem right and this is how it exists
 

00:06:01.370 --> 00:06:06.129
problem right and this is how it exists
is expressed so can you read that in the

00:06:06.129 --> 00:06:06.139
is expressed so can you read that in the
 

00:06:06.139 --> 00:06:08.579
is expressed so can you read that in the
last row no I'm joking

00:06:08.579 --> 00:06:08.589
last row no I'm joking
 

00:06:08.589 --> 00:06:13.209
last row no I'm joking
so when you do for this little build

00:06:13.209 --> 00:06:13.219
so when you do for this little build
 

00:06:13.219 --> 00:06:15.219
so when you do for this little build
script right when you do creative tasks

00:06:15.219 --> 00:06:15.229
script right when you do creative tasks
 

00:06:15.229 --> 00:06:19.540
script right when you do creative tasks
right - so all the tasks that cradle

00:06:19.540 --> 00:06:19.550
right - so all the tasks that cradle
 

00:06:19.550 --> 00:06:25.329
right - so all the tasks that cradle
creates - to build this right

00:06:25.329 --> 00:06:25.339
 

00:06:25.339 --> 00:06:29.939
you have more than 300 tasks right so

00:06:29.939 --> 00:06:29.949
you have more than 300 tasks right so
 

00:06:29.949 --> 00:06:32.110
you have more than 300 tasks right so
imagine how the end build would look

00:06:32.110 --> 00:06:32.120
imagine how the end build would look
 

00:06:32.120 --> 00:06:36.369
imagine how the end build would look
like right would be thousand lines of

00:06:36.369 --> 00:06:36.379
like right would be thousand lines of
 

00:06:36.379 --> 00:06:39.260
like right would be thousand lines of
XML right

00:06:39.260 --> 00:06:39.270
XML right
 

00:06:39.270 --> 00:06:41.610
XML right
with memnon Yellen it's completely

00:06:41.610 --> 00:06:41.620
with memnon Yellen it's completely
 

00:06:41.620 --> 00:06:43.620
with memnon Yellen it's completely
impossible to model this with unproven

00:06:43.620 --> 00:06:43.630
impossible to model this with unproven
 

00:06:43.630 --> 00:06:45.630
impossible to model this with unproven
one project maven will tell you well you

00:06:45.630 --> 00:06:45.640
one project maven will tell you well you
 

00:06:45.640 --> 00:06:49.680
one project maven will tell you well you
need a separate sub project per flavor

00:06:49.680 --> 00:06:49.690
need a separate sub project per flavor
 

00:06:49.690 --> 00:06:52.200
need a separate sub project per flavor
per test per flavor you would end up

00:06:52.200 --> 00:06:52.210
per test per flavor you would end up
 

00:06:52.210 --> 00:06:56.190
per test per flavor you would end up
with a sub-project 30 multi module maven

00:06:56.190 --> 00:06:56.200
with a sub-project 30 multi module maven
 

00:06:56.200 --> 00:06:58.320
with a sub-project 30 multi module maven
build or something like that right which

00:06:58.320 --> 00:06:58.330
build or something like that right which
 

00:06:58.330 --> 00:07:00.720
build or something like that right which
is also kind of you know hey I'm real

00:07:00.720 --> 00:07:00.730
is also kind of you know hey I'm real
 

00:07:00.730 --> 00:07:01.770
is also kind of you know hey I'm real
Android developer I have a little

00:07:01.770 --> 00:07:01.780
Android developer I have a little
 

00:07:01.780 --> 00:07:03.600
Android developer I have a little
requirement certain variants right I

00:07:03.600 --> 00:07:03.610
requirement certain variants right I
 

00:07:03.610 --> 00:07:05.430
requirement certain variants right I
want to express around my simple Android

00:07:05.430 --> 00:07:05.440
want to express around my simple Android
 

00:07:05.440 --> 00:07:07.860
want to express around my simple Android
app and now I end up with a 2030

00:07:07.860 --> 00:07:07.870
app and now I end up with a 2030
 

00:07:07.870 --> 00:07:10.410
app and now I end up with a 2030
sub-module maven build that's not what

00:07:10.410 --> 00:07:10.420
sub-module maven build that's not what
 

00:07:10.420 --> 00:07:12.300
sub-module maven build that's not what
you want to be challenged with as an

00:07:12.300 --> 00:07:12.310
you want to be challenged with as an
 

00:07:12.310 --> 00:07:14.070
you want to be challenged with as an
Android developer so so that gives you

00:07:14.070 --> 00:07:14.080
Android developer so so that gives you
 

00:07:14.080 --> 00:07:17.130
Android developer so so that gives you
kind of an idea right what what has been

00:07:17.130 --> 00:07:17.140
kind of an idea right what what has been
 

00:07:17.140 --> 00:07:18.020
kind of an idea right what what has been
achieved

00:07:18.020 --> 00:07:18.030
achieved
 

00:07:18.030 --> 00:07:20.820
achieved
so the key mission is accomplished

00:07:20.820 --> 00:07:20.830
so the key mission is accomplished
 

00:07:20.830 --> 00:07:23.070
so the key mission is accomplished
right there is now a powerful Android

00:07:23.070 --> 00:07:23.080
right there is now a powerful Android
 

00:07:23.080 --> 00:07:24.930
right there is now a powerful Android
build system with which you can

00:07:24.930 --> 00:07:24.940
build system with which you can
 

00:07:24.940 --> 00:07:27.770
build system with which you can
elegantly describe many of the typical

00:07:27.770 --> 00:07:27.780
elegantly describe many of the typical
 

00:07:27.780 --> 00:07:29.460
elegantly describe many of the typical
requirements you have one building

00:07:29.460 --> 00:07:29.470
requirements you have one building
 

00:07:29.470 --> 00:07:31.920
requirements you have one building
Android applications including kick-ass

00:07:31.920 --> 00:07:31.930
Android applications including kick-ass
 

00:07:31.930 --> 00:07:35.340
Android applications including kick-ass
dependency management right it has the

00:07:35.340 --> 00:07:35.350
dependency management right it has the
 

00:07:35.350 --> 00:07:37.320
dependency management right it has the
right mixture between flexibility and

00:07:37.320 --> 00:07:37.330
right mixture between flexibility and
 

00:07:37.330 --> 00:07:39.180
right mixture between flexibility and
structure right too much when you just

00:07:39.180 --> 00:07:39.190
structure right too much when you just
 

00:07:39.190 --> 00:07:41.580
structure right too much when you just
have flexibility you might have a lower

00:07:41.580 --> 00:07:41.590
have flexibility you might have a lower
 

00:07:41.590 --> 00:07:43.200
have flexibility you might have a lower
complexity to deal with as an Android

00:07:43.200 --> 00:07:43.210
complexity to deal with as an Android
 

00:07:43.210 --> 00:07:45.660
complexity to deal with as an Android
developer but if you have just structure

00:07:45.660 --> 00:07:45.670
developer but if you have just structure
 

00:07:45.670 --> 00:07:47.190
developer but if you have just structure
no flexibility you can't extend the

00:07:47.190 --> 00:07:47.200
no flexibility you can't extend the
 

00:07:47.200 --> 00:07:49.080
no flexibility you can't extend the
things so this is a this is a real nice

00:07:49.080 --> 00:07:49.090
things so this is a this is a real nice
 

00:07:49.090 --> 00:07:51.420
things so this is a this is a real nice
mixture and it's a true achievement by

00:07:51.420 --> 00:07:51.430
mixture and it's a true achievement by
 

00:07:51.430 --> 00:07:54.050
mixture and it's a true achievement by
the Google Android team who is

00:07:54.050 --> 00:07:54.060
the Google Android team who is
 

00:07:54.060 --> 00:07:56.370
the Google Android team who is
maintaining and creating the Gradle

00:07:56.370 --> 00:07:56.380
maintaining and creating the Gradle
 

00:07:56.380 --> 00:07:58.980
maintaining and creating the Gradle
android plug-in to have model to

00:07:58.980 --> 00:07:58.990
android plug-in to have model to
 

00:07:58.990 --> 00:08:00.630
android plug-in to have model to
functional domain of building Android so

00:08:00.630 --> 00:08:00.640
functional domain of building Android so
 

00:08:00.640 --> 00:08:03.810
functional domain of building Android so
well-well and based of course on the

00:08:03.810 --> 00:08:03.820
well-well and based of course on the
 

00:08:03.820 --> 00:08:06.150
well-well and based of course on the
capabilities of Gradle but and there's

00:08:06.150 --> 00:08:06.160
capabilities of Gradle but and there's
 

00:08:06.160 --> 00:08:06.780
capabilities of Gradle but and there's
more to come

00:08:06.780 --> 00:08:06.790
more to come
 

00:08:06.790 --> 00:08:10.320
more to come
so the foundation is rock-solid and the

00:08:10.320 --> 00:08:10.330
so the foundation is rock-solid and the
 

00:08:10.330 --> 00:08:11.700
so the foundation is rock-solid and the
feedback we are getting is that people

00:08:11.700 --> 00:08:11.710
feedback we are getting is that people
 

00:08:11.710 --> 00:08:14.280
feedback we are getting is that people
are very happy with that aspect right

00:08:14.280 --> 00:08:14.290
are very happy with that aspect right
 

00:08:14.290 --> 00:08:16.680
are very happy with that aspect right
and I haven't talked about performance

00:08:16.680 --> 00:08:16.690
and I haven't talked about performance
 

00:08:16.690 --> 00:08:20.370
and I haven't talked about performance
yet and I want to talk about something

00:08:20.370 --> 00:08:20.380
yet and I want to talk about something
 

00:08:20.380 --> 00:08:26.580
yet and I want to talk about something
else first so some other goals that are

00:08:26.580 --> 00:08:26.590
else first so some other goals that are
 

00:08:26.590 --> 00:08:28.710
else first so some other goals that are
behind this system it is not good enough

00:08:28.710 --> 00:08:28.720
behind this system it is not good enough
 

00:08:28.720 --> 00:08:30.960
behind this system it is not good enough
for most Android developers to just have

00:08:30.960 --> 00:08:30.970
for most Android developers to just have
 

00:08:30.970 --> 00:08:32.969
for most Android developers to just have
a good Android built right you have

00:08:32.969 --> 00:08:32.979
a good Android built right you have
 

00:08:32.979 --> 00:08:35.520
a good Android built right you have
back-end services right written in Java

00:08:35.520 --> 00:08:35.530
back-end services right written in Java
 

00:08:35.530 --> 00:08:39.530
back-end services right written in Java
C++ Ruby and whatnot you have other

00:08:39.530 --> 00:08:39.540
C++ Ruby and whatnot you have other
 

00:08:39.540 --> 00:08:44.100
C++ Ruby and whatnot you have other
libraries to deal with and potentially

00:08:44.100 --> 00:08:44.110
libraries to deal with and potentially
 

00:08:44.110 --> 00:08:46.650
libraries to deal with and potentially
written in other languages and you want

00:08:46.650 --> 00:08:46.660
written in other languages and you want
 

00:08:46.660 --> 00:08:48.390
written in other languages and you want
to be able to integrate deeply with

00:08:48.390 --> 00:08:48.400
to be able to integrate deeply with
 

00:08:48.400 --> 00:08:50.340
to be able to integrate deeply with
those during development cycles right

00:08:50.340 --> 00:08:50.350
those during development cycles right
 

00:08:50.350 --> 00:08:52.920
those during development cycles right
you don't want to be the isolated Andrew

00:08:52.920 --> 00:08:52.930
you don't want to be the isolated Andrew
 

00:08:52.930 --> 00:08:55.139
you don't want to be the isolated Andrew
team like it is still today in so many

00:08:55.139 --> 00:08:55.149
team like it is still today in so many
 

00:08:55.149 --> 00:08:57.750
team like it is still today in so many
organizations right the Android teams

00:08:57.750 --> 00:08:57.760
organizations right the Android teams
 

00:08:57.760 --> 00:08:59.220
organizations right the Android teams
are isolated from the continuous

00:08:59.220 --> 00:08:59.230
are isolated from the continuous
 

00:08:59.230 --> 00:09:00.870
are isolated from the continuous
delivery process of the rest of the team

00:09:00.870 --> 00:09:00.880
delivery process of the rest of the team
 

00:09:00.880 --> 00:09:02.190
delivery process of the rest of the team
and that is not good right

00:09:02.190 --> 00:09:02.200
and that is not good right
 

00:09:02.200 --> 00:09:04.889
and that is not good right
the people writing the back-end services

00:09:04.889 --> 00:09:04.899
the people writing the back-end services
 

00:09:04.899 --> 00:09:06.450
the people writing the back-end services
should be able to ask the question is

00:09:06.450 --> 00:09:06.460
should be able to ask the question is
 

00:09:06.460 --> 00:09:08.670
should be able to ask the question is
this change breaking the Android app

00:09:08.670 --> 00:09:08.680
this change breaking the Android app
 

00:09:08.680 --> 00:09:11.070
this change breaking the Android app
right and that is often not possible but

00:09:11.070 --> 00:09:11.080
right and that is often not possible but
 

00:09:11.080 --> 00:09:13.050
right and that is often not possible but
with Gradle you know I have to tool to

00:09:13.050 --> 00:09:13.060
with Gradle you know I have to tool to
 

00:09:13.060 --> 00:09:14.639
with Gradle you know I have to tool to
have a really unified build experience

00:09:14.639 --> 00:09:14.649
have a really unified build experience
 

00:09:14.649 --> 00:09:19.110
have a really unified build experience
right and Gradle is a powerful poly

00:09:19.110 --> 00:09:19.120
right and Gradle is a powerful poly
 

00:09:19.120 --> 00:09:23.190
right and Gradle is a powerful poly
cloud build system so with strong

00:09:23.190 --> 00:09:23.200
cloud build system so with strong
 

00:09:23.200 --> 00:09:26.820
cloud build system so with strong
support for C C++ and Java also for

00:09:26.820 --> 00:09:26.830
support for C C++ and Java also for
 

00:09:26.830 --> 00:09:29.790
support for C C++ and Java also for
Python and and interesting wrapping

00:09:29.790 --> 00:09:29.800
Python and and interesting wrapping
 

00:09:29.800 --> 00:09:33.570
Python and and interesting wrapping
around the JavaScript ecosystem so

00:09:33.570 --> 00:09:33.580
around the JavaScript ecosystem so
 

00:09:33.580 --> 00:09:35.250
around the JavaScript ecosystem so
LinkedIn is a very good example for that

00:09:35.250 --> 00:09:35.260
LinkedIn is a very good example for that
 

00:09:35.260 --> 00:09:37.620
LinkedIn is a very good example for that
link in has in a matter of languages it

00:09:37.620 --> 00:09:37.630
link in has in a matter of languages it
 

00:09:37.630 --> 00:09:39.150
link in has in a matter of languages it
all builds with Gradle and one or the

00:09:39.150 --> 00:09:39.160
all builds with Gradle and one or the
 

00:09:39.160 --> 00:09:42.449
all builds with Gradle and one or the
other way book 40-plus languages some

00:09:42.449 --> 00:09:42.459
other way book 40-plus languages some
 

00:09:42.459 --> 00:09:44.760
other way book 40-plus languages some
are very exotic all built with Gradle

00:09:44.760 --> 00:09:44.770
are very exotic all built with Gradle
 

00:09:44.770 --> 00:09:47.120
are very exotic all built with Gradle
right either with a direct

00:09:47.120 --> 00:09:47.130
right either with a direct
 

00:09:47.130 --> 00:09:49.980
right either with a direct
implementation or with great like with

00:09:49.980 --> 00:09:49.990
implementation or with great like with
 

00:09:49.990 --> 00:09:51.990
implementation or with great like with
Python adding some functionality on top

00:09:51.990 --> 00:09:52.000
Python adding some functionality on top
 

00:09:52.000 --> 00:09:55.560
Python adding some functionality on top
of the existing Python tool chain right

00:09:55.560 --> 00:09:55.570
of the existing Python tool chain right
 

00:09:55.570 --> 00:09:57.390
of the existing Python tool chain right
they've also integrated the Hadoop

00:09:57.390 --> 00:09:57.400
they've also integrated the Hadoop
 

00:09:57.400 --> 00:10:00.060
they've also integrated the Hadoop
developer tooling around it so so that

00:10:00.060 --> 00:10:00.070
developer tooling around it so so that
 

00:10:00.070 --> 00:10:02.280
developer tooling around it so so that
is a big benefit you get right if you

00:10:02.280 --> 00:10:02.290
is a big benefit you get right if you
 

00:10:02.290 --> 00:10:05.100
is a big benefit you get right if you
work in a team if you're not just

00:10:05.100 --> 00:10:05.110
work in a team if you're not just
 

00:10:05.110 --> 00:10:07.230
work in a team if you're not just
writing Android right you can you have

00:10:07.230 --> 00:10:07.240
writing Android right you can you have
 

00:10:07.240 --> 00:10:08.370
writing Android right you can you have
now a build system that can integrate

00:10:08.370 --> 00:10:08.380
now a build system that can integrate
 

00:10:08.380 --> 00:10:12.570
now a build system that can integrate
all the different pieces much better to

00:10:12.570 --> 00:10:12.580
all the different pieces much better to
 

00:10:12.580 --> 00:10:15.930
all the different pieces much better to
give you an idea of the scope how Gradle

00:10:15.930 --> 00:10:15.940
give you an idea of the scope how Gradle
 

00:10:15.940 --> 00:10:19.050
give you an idea of the scope how Gradle
is used in some organizations at

00:10:19.050 --> 00:10:19.060
is used in some organizations at
 

00:10:19.060 --> 00:10:22.290
is used in some organizations at
LinkedIn it is used by 2,000 engineers

00:10:22.290 --> 00:10:22.300
LinkedIn it is used by 2,000 engineers
 

00:10:22.300 --> 00:10:23.940
LinkedIn it is used by 2,000 engineers
and they have three hundred thousand

00:10:23.940 --> 00:10:23.950
and they have three hundred thousand
 

00:10:23.950 --> 00:10:26.510
and they have three hundred thousand
created build executions per week right

00:10:26.510 --> 00:10:26.520
created build executions per week right
 

00:10:26.520 --> 00:10:29.370
created build executions per week right
so the biggest Gradle build has 3,800

00:10:29.370 --> 00:10:29.380
so the biggest Gradle build has 3,800
 

00:10:29.380 --> 00:10:33.180
so the biggest Gradle build has 3,800
sub modules and and one other thing that

00:10:33.180 --> 00:10:33.190
sub modules and and one other thing that
 

00:10:33.190 --> 00:10:35.850
sub modules and and one other thing that
is interesting with LinkedIn like more

00:10:35.850 --> 00:10:35.860
is interesting with LinkedIn like more
 

00:10:35.860 --> 00:10:38.540
is interesting with LinkedIn like more
and more organizations they switch from

00:10:38.540 --> 00:10:38.550
and more organizations they switch from
 

00:10:38.550 --> 00:10:41.220
and more organizations they switch from
teams that have been created around

00:10:41.220 --> 00:10:41.230
teams that have been created around
 

00:10:41.230 --> 00:10:44.960
teams that have been created around
technology the Android team the iOS team

00:10:44.960 --> 00:10:44.970
technology the Android team the iOS team
 

00:10:44.970 --> 00:10:48.090
technology the Android team the iOS team
to functional teams right so teams that

00:10:48.090 --> 00:10:48.100
to functional teams right so teams that
 

00:10:48.100 --> 00:10:50.460
to functional teams right so teams that
share the backend and the different UIs

00:10:50.460 --> 00:10:50.470
share the backend and the different UIs
 

00:10:50.470 --> 00:10:52.350
share the backend and the different UIs
and apps that are they developed around

00:10:52.350 --> 00:10:52.360
and apps that are they developed around
 

00:10:52.360 --> 00:10:54.150
and apps that are they developed around
a set of functionality so now for Dan

00:10:54.150 --> 00:10:54.160
a set of functionality so now for Dan
 

00:10:54.160 --> 00:10:56.220
a set of functionality so now for Dan
it's even much more important to ever

00:10:56.220 --> 00:10:56.230
it's even much more important to ever
 

00:10:56.230 --> 00:10:57.900
it's even much more important to ever
have a build system that wraps around

00:10:57.900 --> 00:10:57.910
have a build system that wraps around
 

00:10:57.910 --> 00:11:00.600
have a build system that wraps around
the whole functional team right even

00:11:00.600 --> 00:11:00.610
the whole functional team right even
 

00:11:00.610 --> 00:11:01.319
the whole functional team right even
though they're using very different

00:11:01.319 --> 00:11:01.329
though they're using very different
 

00:11:01.329 --> 00:11:04.150
though they're using very different
languages

00:11:04.150 --> 00:11:04.160
 

00:11:04.160 --> 00:11:07.140
okay before I talk about performance

00:11:07.140 --> 00:11:07.150
okay before I talk about performance
 

00:11:07.150 --> 00:11:12.910
okay before I talk about performance
extensibility it is not just good enough

00:11:12.910 --> 00:11:12.920
extensibility it is not just good enough
 

00:11:12.920 --> 00:11:15.160
extensibility it is not just good enough
to solve the standard requirements even

00:11:15.160 --> 00:11:15.170
to solve the standard requirements even
 

00:11:15.170 --> 00:11:17.500
to solve the standard requirements even
in a polyglot salad right so you get a

00:11:17.500 --> 00:11:17.510
in a polyglot salad right so you get a
 

00:11:17.510 --> 00:11:19.290
in a polyglot salad right so you get a
lot of out-of-the-box stuff from Gradle

00:11:19.290 --> 00:11:19.300
lot of out-of-the-box stuff from Gradle
 

00:11:19.300 --> 00:11:24.250
lot of out-of-the-box stuff from Gradle
and so the example projects all work

00:11:24.250 --> 00:11:24.260
and so the example projects all work
 

00:11:24.260 --> 00:11:27.310
and so the example projects all work
right but people that are ambitious

00:11:27.310 --> 00:11:27.320
right but people that are ambitious
 

00:11:27.320 --> 00:11:29.800
right but people that are ambitious
about developer productivity and

00:11:29.800 --> 00:11:29.810
about developer productivity and
 

00:11:29.810 --> 00:11:34.240
about developer productivity and
automation and all work in a more

00:11:34.240 --> 00:11:34.250
automation and all work in a more
 

00:11:34.250 --> 00:11:36.550
automation and all work in a more
complex environment desperately need

00:11:36.550 --> 00:11:36.560
complex environment desperately need
 

00:11:36.560 --> 00:11:40.150
complex environment desperately need
extensibility right so with the new

00:11:40.150 --> 00:11:40.160
extensibility right so with the new
 

00:11:40.160 --> 00:11:41.860
extensibility right so with the new
build system you are able to inject

00:11:41.860 --> 00:11:41.870
build system you are able to inject
 

00:11:41.870 --> 00:11:44.050
build system you are able to inject
custom steps anywhere right you have

00:11:44.050 --> 00:11:44.060
custom steps anywhere right you have
 

00:11:44.060 --> 00:11:46.840
custom steps anywhere right you have
deep api's with listener frameworks to

00:11:46.840 --> 00:11:46.850
deep api's with listener frameworks to
 

00:11:46.850 --> 00:11:48.700
deep api's with listener frameworks to
get into the guts of the system if

00:11:48.700 --> 00:11:48.710
get into the guts of the system if
 

00:11:48.710 --> 00:11:51.040
get into the guts of the system if
needed even in a test execution you can

00:11:51.040 --> 00:11:51.050
needed even in a test execution you can
 

00:11:51.050 --> 00:11:52.990
needed even in a test execution you can
hook in a listener with Gradle hey send

00:11:52.990 --> 00:11:53.000
hook in a listener with Gradle hey send
 

00:11:53.000 --> 00:11:54.790
hook in a listener with Gradle hey send
me an event after you've executed the

00:11:54.790 --> 00:11:54.800
me an event after you've executed the
 

00:11:54.800 --> 00:11:56.290
me an event after you've executed the
test method I want to do something with

00:11:56.290 --> 00:11:56.300
test method I want to do something with
 

00:11:56.300 --> 00:11:57.220
test method I want to do something with
it whatever that may be

00:11:57.220 --> 00:11:57.230
it whatever that may be
 

00:11:57.230 --> 00:11:59.530
it whatever that may be
right maybe you have a fragile test you

00:11:59.530 --> 00:11:59.540
right maybe you have a fragile test you
 

00:11:59.540 --> 00:12:01.360
right maybe you have a fragile test you
want to deal with and you say oh this

00:12:01.360 --> 00:12:01.370
want to deal with and you say oh this
 

00:12:01.370 --> 00:12:02.830
want to deal with and you say oh this
test I need to run again to make sure

00:12:02.830 --> 00:12:02.840
test I need to run again to make sure
 

00:12:02.840 --> 00:12:04.180
test I need to run again to make sure
that it has really failed whatnot

00:12:04.180 --> 00:12:04.190
that it has really failed whatnot
 

00:12:04.190 --> 00:12:06.430
that it has really failed whatnot
whatever pathologies you need to embrace

00:12:06.430 --> 00:12:06.440
whatever pathologies you need to embrace
 

00:12:06.440 --> 00:12:10.330
whatever pathologies you need to embrace
right as as part of your work and they

00:12:10.330 --> 00:12:10.340
right as as part of your work and they
 

00:12:10.340 --> 00:12:11.650
right as as part of your work and they
are powerful features to integrate

00:12:11.650 --> 00:12:11.660
are powerful features to integrate
 

00:12:11.660 --> 00:12:13.330
are powerful features to integrate
deeply any other technology tool chain

00:12:13.330 --> 00:12:13.340
deeply any other technology tool chain
 

00:12:13.340 --> 00:12:16.900
deeply any other technology tool chain
into your build alright so and and it's

00:12:16.900 --> 00:12:16.910
into your build alright so and and it's
 

00:12:16.910 --> 00:12:19.210
into your build alright so and and it's
not just extensible you can extend it in

00:12:19.210 --> 00:12:19.220
not just extensible you can extend it in
 

00:12:19.220 --> 00:12:24.250
not just extensible you can extend it in
a way that you build stays concise right

00:12:24.250 --> 00:12:24.260
a way that you build stays concise right
 

00:12:24.260 --> 00:12:26.020
a way that you build stays concise right
you can extend the greater declarative

00:12:26.020 --> 00:12:26.030
you can extend the greater declarative
 

00:12:26.030 --> 00:12:27.790
you can extend the greater declarative
language with your own declarative

00:12:27.790 --> 00:12:27.800
language with your own declarative
 

00:12:27.800 --> 00:12:29.590
language with your own declarative
language element to make it very easy

00:12:29.590 --> 00:12:29.600
language element to make it very easy
 

00:12:29.600 --> 00:12:32.680
language element to make it very easy
for you developers to to work with your

00:12:32.680 --> 00:12:32.690
for you developers to to work with your
 

00:12:32.690 --> 00:12:35.290
for you developers to to work with your
custom requirements and even if you say

00:12:35.290 --> 00:12:35.300
custom requirements and even if you say
 

00:12:35.300 --> 00:12:37.120
custom requirements and even if you say
our extensibility is not important for

00:12:37.120 --> 00:12:37.130
our extensibility is not important for
 

00:12:37.130 --> 00:12:41.890
our extensibility is not important for
me well in an indirect way it is because

00:12:41.890 --> 00:12:41.900
me well in an indirect way it is because
 

00:12:41.900 --> 00:12:44.020
me well in an indirect way it is because
you will benefit from it by a very

00:12:44.020 --> 00:12:44.030
you will benefit from it by a very
 

00:12:44.030 --> 00:12:46.360
you will benefit from it by a very
powerful plug-in ecosystem that depends

00:12:46.360 --> 00:12:46.370
powerful plug-in ecosystem that depends
 

00:12:46.370 --> 00:12:48.460
powerful plug-in ecosystem that depends
on this extensibility right and they are

00:12:48.460 --> 00:12:48.470
on this extensibility right and they are
 

00:12:48.470 --> 00:12:49.960
on this extensibility right and they are
really interesting Android plugins out

00:12:49.960 --> 00:12:49.970
really interesting Android plugins out
 

00:12:49.970 --> 00:12:52.330
really interesting Android plugins out
there greater ran so extensible the

00:12:52.330 --> 00:12:52.340
there greater ran so extensible the
 

00:12:52.340 --> 00:12:53.980
there greater ran so extensible the
plugins wouldn't be so powerful so even

00:12:53.980 --> 00:12:53.990
plugins wouldn't be so powerful so even
 

00:12:53.990 --> 00:12:55.960
plugins wouldn't be so powerful so even
if you don't extend it you have a more

00:12:55.960 --> 00:12:55.970
if you don't extend it you have a more
 

00:12:55.970 --> 00:12:58.150
if you don't extend it you have a more
powerful plug-in ecosystem out there of

00:12:58.150 --> 00:12:58.160
powerful plug-in ecosystem out there of
 

00:12:58.160 --> 00:13:04.480
powerful plug-in ecosystem out there of
Gradle plugins that you can use forget

00:13:04.480 --> 00:13:04.490
Gradle plugins that you can use forget
 

00:13:04.490 --> 00:13:08.060
Gradle plugins that you can use forget
my transitions

00:13:08.060 --> 00:13:08.070
 

00:13:08.070 --> 00:13:13.730
okay so cradle is a very strong

00:13:13.730 --> 00:13:13.740
okay so cradle is a very strong
 

00:13:13.740 --> 00:13:15.400
okay so cradle is a very strong
foundation for the Android build system

00:13:15.400 --> 00:13:15.410
foundation for the Android build system
 

00:13:15.410 --> 00:13:18.350
foundation for the Android build system
it is a build platform whoops with

00:13:18.350 --> 00:13:18.360
it is a build platform whoops with
 

00:13:18.360 --> 00:13:20.840
it is a build platform whoops with
massive tractions we had just crossed to

00:13:20.840 --> 00:13:20.850
massive tractions we had just crossed to
 

00:13:20.850 --> 00:13:22.699
massive tractions we had just crossed to
1 million downloads per month 9 in

00:13:22.699 --> 00:13:22.709
1 million downloads per month 9 in
 

00:13:22.709 --> 00:13:25.160
1 million downloads per month 9 in
September it's evolving very fast we had

00:13:25.160 --> 00:13:25.170
September it's evolving very fast we had
 

00:13:25.170 --> 00:13:27.259
September it's evolving very fast we had
19 feature releases in the last three

00:13:27.259 --> 00:13:27.269
19 feature releases in the last three
 

00:13:27.269 --> 00:13:30.499
19 feature releases in the last three
years and we get a large amount of

00:13:30.499 --> 00:13:30.509
years and we get a large amount of
 

00:13:30.509 --> 00:13:32.059
years and we get a large amount of
contributions from individuals and

00:13:32.059 --> 00:13:32.069
contributions from individuals and
 

00:13:32.069 --> 00:13:33.949
contributions from individuals and
organizations like LinkedIn Netflix

00:13:33.949 --> 00:13:33.959
organizations like LinkedIn Netflix
 

00:13:33.959 --> 00:13:35.780
organizations like LinkedIn Netflix
Google Android unity technologies and

00:13:35.780 --> 00:13:35.790
Google Android unity technologies and
 

00:13:35.790 --> 00:13:37.069
Google Android unity technologies and
many more

00:13:37.069 --> 00:13:37.079
many more
 

00:13:37.079 --> 00:13:39.610
many more
so a lot of innovation is happening and

00:13:39.610 --> 00:13:39.620
so a lot of innovation is happening and
 

00:13:39.620 --> 00:13:42.019
so a lot of innovation is happening and
Gradle is a generic automation platform

00:13:42.019 --> 00:13:42.029
Gradle is a generic automation platform
 

00:13:42.029 --> 00:13:43.309
Gradle is a generic automation platform
right for whatever you want to automate

00:13:43.309 --> 00:13:43.319
right for whatever you want to automate
 

00:13:43.319 --> 00:13:47.180
right for whatever you want to automate
you can use it because you you as a

00:13:47.180 --> 00:13:47.190
you can use it because you you as a
 

00:13:47.190 --> 00:13:49.040
you can use it because you you as a
developer you're not just creating apks

00:13:49.040 --> 00:13:49.050
developer you're not just creating apks
 

00:13:49.050 --> 00:13:51.110
developer you're not just creating apks
you are shipping software with a group

00:13:51.110 --> 00:13:51.120
you are shipping software with a group
 

00:13:51.120 --> 00:13:53.600
you are shipping software with a group
of people which is a much larger scope

00:13:53.600 --> 00:13:53.610
of people which is a much larger scope
 

00:13:53.610 --> 00:13:55.280
of people which is a much larger scope
right you might want to have Auto

00:13:55.280 --> 00:13:55.290
right you might want to have Auto
 

00:13:55.290 --> 00:13:57.259
right you might want to have Auto
provision dev environments you might

00:13:57.259 --> 00:13:57.269
provision dev environments you might
 

00:13:57.269 --> 00:13:59.360
provision dev environments you might
want to generate documentation for

00:13:59.360 --> 00:13:59.370
want to generate documentation for
 

00:13:59.370 --> 00:14:01.430
want to generate documentation for
client API that you are shipping we're

00:14:01.430 --> 00:14:01.440
client API that you are shipping we're
 

00:14:01.440 --> 00:14:03.379
client API that you are shipping we're
all code snippets our integration tests

00:14:03.379 --> 00:14:03.389
all code snippets our integration tests
 

00:14:03.389 --> 00:14:05.389
all code snippets our integration tests
that's how we ship our documentation

00:14:05.389 --> 00:14:05.399
that's how we ship our documentation
 

00:14:05.399 --> 00:14:07.370
that's how we ship our documentation
every snippet in the Gradle user guide

00:14:07.370 --> 00:14:07.380
every snippet in the Gradle user guide
 

00:14:07.380 --> 00:14:10.790
every snippet in the Gradle user guide
is live tested we run before why we

00:14:10.790 --> 00:14:10.800
is live tested we run before why we
 

00:14:10.800 --> 00:14:12.110
is live tested we run before why we
creating the user guide we run the

00:14:12.110 --> 00:14:12.120
creating the user guide we run the
 

00:14:12.120 --> 00:14:13.550
creating the user guide we run the
integration test right against the

00:14:13.550 --> 00:14:13.560
integration test right against the
 

00:14:13.560 --> 00:14:15.259
integration test right against the
snippet in there then we extract the

00:14:15.259 --> 00:14:15.269
snippet in there then we extract the
 

00:14:15.269 --> 00:14:16.699
snippet in there then we extract the
output of the integration test and

00:14:16.699 --> 00:14:16.709
output of the integration test and
 

00:14:16.709 --> 00:14:18.559
output of the integration test and
insert in it to the user guide to make

00:14:18.559 --> 00:14:18.569
insert in it to the user guide to make
 

00:14:18.569 --> 00:14:21.800
insert in it to the user guide to make
sure that we don't have the money for an

00:14:21.800 --> 00:14:21.810
sure that we don't have the money for an
 

00:14:21.810 --> 00:14:23.750
sure that we don't have the money for an
editorial team I don't want to spend it

00:14:23.750 --> 00:14:23.760
editorial team I don't want to spend it
 

00:14:23.760 --> 00:14:25.280
editorial team I don't want to spend it
on that right and still want to give you

00:14:25.280 --> 00:14:25.290
on that right and still want to give you
 

00:14:25.290 --> 00:14:27.259
on that right and still want to give you
high quality documentation all right so

00:14:27.259 --> 00:14:27.269
high quality documentation all right so
 

00:14:27.269 --> 00:14:29.600
high quality documentation all right so
so when you really think about shipping

00:14:29.600 --> 00:14:29.610
so when you really think about shipping
 

00:14:29.610 --> 00:14:31.699
so when you really think about shipping
software there are so many tasks you can

00:14:31.699 --> 00:14:31.709
software there are so many tasks you can
 

00:14:31.709 --> 00:14:34.939
software there are so many tasks you can
automate right and and once you have a

00:14:34.939 --> 00:14:34.949
automate right and and once you have a
 

00:14:34.949 --> 00:14:38.030
automate right and and once you have a
system you that allows you to do that

00:14:38.030 --> 00:14:38.040
system you that allows you to do that
 

00:14:38.040 --> 00:14:40.009
system you that allows you to do that
you can get really creative right you

00:14:40.009 --> 00:14:40.019
you can get really creative right you
 

00:14:40.019 --> 00:14:41.210
you can get really creative right you
want to have a fully automated release

00:14:41.210 --> 00:14:41.220
want to have a fully automated release
 

00:14:41.220 --> 00:14:43.519
want to have a fully automated release
process you might want to have central

00:14:43.519 --> 00:14:43.529
process you might want to have central
 

00:14:43.529 --> 00:14:45.559
process you might want to have central
version strategies for the libraries

00:14:45.559 --> 00:14:45.569
version strategies for the libraries
 

00:14:45.569 --> 00:14:47.930
version strategies for the libraries
you're consuming automated database

00:14:47.930 --> 00:14:47.940
you're consuming automated database
 

00:14:47.940 --> 00:14:50.900
you're consuming automated database
migrations container integration for

00:14:50.900 --> 00:14:50.910
migrations container integration for
 

00:14:50.910 --> 00:14:54.340
migrations container integration for
your for certain integration tests right

00:14:54.340 --> 00:14:54.350
your for certain integration tests right
 

00:14:54.350 --> 00:14:58.309
your for certain integration tests right
how to deal with fragile tests big

00:14:58.309 --> 00:14:58.319
how to deal with fragile tests big
 

00:14:58.319 --> 00:14:59.540
how to deal with fragile tests big
problem we see in many organizations

00:14:59.540 --> 00:14:59.550
problem we see in many organizations
 

00:14:59.550 --> 00:15:01.639
problem we see in many organizations
right when you have a build system that

00:15:01.639 --> 00:15:01.649
right when you have a build system that
 

00:15:01.649 --> 00:15:03.110
right when you have a build system that
says well you can only have one group of

00:15:03.110 --> 00:15:03.120
says well you can only have one group of
 

00:15:03.120 --> 00:15:06.350
says well you can only have one group of
tests right that and when you have when

00:15:06.350 --> 00:15:06.360
tests right that and when you have when
 

00:15:06.360 --> 00:15:07.850
tests right that and when you have when
some of them have Redshaw test it

00:15:07.850 --> 00:15:07.860
some of them have Redshaw test it
 

00:15:07.860 --> 00:15:10.100
some of them have Redshaw test it
usually means people start ignoring if

00:15:10.100 --> 00:15:10.110
usually means people start ignoring if
 

00:15:10.110 --> 00:15:14.150
usually means people start ignoring if
this test suite fails yeah okay might be

00:15:14.150 --> 00:15:14.160
this test suite fails yeah okay might be
 

00:15:14.160 --> 00:15:15.679
this test suite fails yeah okay might be
interesting that it fails might be not

00:15:15.679 --> 00:15:15.689
interesting that it fails might be not
 

00:15:15.689 --> 00:15:18.230
interesting that it fails might be not
so with greater you could easily isolate

00:15:18.230 --> 00:15:18.240
so with greater you could easily isolate
 

00:15:18.240 --> 00:15:20.750
so with greater you could easily isolate
to say okay your non fragile test I put

00:15:20.750 --> 00:15:20.760
to say okay your non fragile test I put
 

00:15:20.760 --> 00:15:21.740
to say okay your non fragile test I put
in that group

00:15:21.740 --> 00:15:21.750
in that group
 

00:15:21.750 --> 00:15:23.210
in that group
right and they are really part of my

00:15:23.210 --> 00:15:23.220
right and they are really part of my
 

00:15:23.220 --> 00:15:25.610
right and they are really part of my
continuous delivery pipeline if the CI

00:15:25.610 --> 00:15:25.620
continuous delivery pipeline if the CI
 

00:15:25.620 --> 00:15:28.310
continuous delivery pipeline if the CI
is failing here everyone stop work and

00:15:28.310 --> 00:15:28.320
is failing here everyone stop work and
 

00:15:28.320 --> 00:15:29.930
is failing here everyone stop work and
fix it and then there's the other group

00:15:29.930 --> 00:15:29.940
fix it and then there's the other group
 

00:15:29.940 --> 00:15:32.840
fix it and then there's the other group
of tests a fresh are the menu will test

00:15:32.840 --> 00:15:32.850
of tests a fresh are the menu will test
 

00:15:32.850 --> 00:15:35.060
of tests a fresh are the menu will test
us might still use them to get some

00:15:35.060 --> 00:15:35.070
us might still use them to get some
 

00:15:35.070 --> 00:15:36.860
us might still use them to get some
indications but I don't want to rely on

00:15:36.860 --> 00:15:36.870
indications but I don't want to rely on
 

00:15:36.870 --> 00:15:39.500
indications but I don't want to rely on
them for my automated pipeline right

00:15:39.500 --> 00:15:39.510
them for my automated pipeline right
 

00:15:39.510 --> 00:15:42.140
them for my automated pipeline right
stuff like this or you have very

00:15:42.140 --> 00:15:42.150
stuff like this or you have very
 

00:15:42.150 --> 00:15:44.780
stuff like this or you have very
time-consuming suit of integration test

00:15:44.780 --> 00:15:44.790
time-consuming suit of integration test
 

00:15:44.790 --> 00:15:47.390
time-consuming suit of integration test
right where you want to maybe separate

00:15:47.390 --> 00:15:47.400
right where you want to maybe separate
 

00:15:47.400 --> 00:15:49.580
right where you want to maybe separate
them into DB integration tests UI

00:15:49.580 --> 00:15:49.590
them into DB integration tests UI
 

00:15:49.590 --> 00:15:51.650
them into DB integration tests UI
integration test so that you get faster

00:15:51.650 --> 00:15:51.660
integration test so that you get faster
 

00:15:51.660 --> 00:15:53.030
integration test so that you get faster
feedback people that work on a database

00:15:53.030 --> 00:15:53.040
feedback people that work on a database
 

00:15:53.040 --> 00:15:55.250
feedback people that work on a database
only want to create one to execute the

00:15:55.250 --> 00:15:55.260
only want to create one to execute the
 

00:15:55.260 --> 00:15:57.410
only want to create one to execute the
DB integration test before they commit

00:15:57.410 --> 00:15:57.420
DB integration test before they commit
 

00:15:57.420 --> 00:15:59.060
DB integration test before they commit
because they don't want to wait another

00:15:59.060 --> 00:15:59.070
because they don't want to wait another
 

00:15:59.070 --> 00:16:01.460
because they don't want to wait another
hour right so so there is a lot of

00:16:01.460 --> 00:16:01.470
hour right so so there is a lot of
 

00:16:01.470 --> 00:16:04.220
hour right so so there is a lot of
interesting stuff in the domain of

00:16:04.220 --> 00:16:04.230
interesting stuff in the domain of
 

00:16:04.230 --> 00:16:05.540
interesting stuff in the domain of
continuous delivery it's a complex

00:16:05.540 --> 00:16:05.550
continuous delivery it's a complex
 

00:16:05.550 --> 00:16:08.420
continuous delivery it's a complex
domain Gradle is your friend and so be

00:16:08.420 --> 00:16:08.430
domain Gradle is your friend and so be
 

00:16:08.430 --> 00:16:11.240
domain Gradle is your friend and so be
ambitious about automating your whole

00:16:11.240 --> 00:16:11.250
ambitious about automating your whole
 

00:16:11.250 --> 00:16:17.270
ambitious about automating your whole
your whole shipping process so let's

00:16:17.270 --> 00:16:17.280
your whole shipping process so let's
 

00:16:17.280 --> 00:16:19.340
your whole shipping process so let's
look at an example of some of the nice

00:16:19.340 --> 00:16:19.350
look at an example of some of the nice
 

00:16:19.350 --> 00:16:22.340
look at an example of some of the nice
features that that how Creator can help

00:16:22.340 --> 00:16:22.350
features that that how Creator can help
 

00:16:22.350 --> 00:16:24.340
features that that how Creator can help
you in getting better into the flow and

00:16:24.340 --> 00:16:24.350
you in getting better into the flow and
 

00:16:24.350 --> 00:16:26.690
you in getting better into the flow and
and achieving a higher degree of

00:16:26.690 --> 00:16:26.700
and achieving a higher degree of
 

00:16:26.700 --> 00:16:30.829
and achieving a higher degree of
automation so this is what we have here

00:16:30.829 --> 00:16:30.839
automation so this is what we have here
 

00:16:30.839 --> 00:16:41.510
automation so this is what we have here
is is an asciidoctor project look at

00:16:41.510 --> 00:16:41.520
is is an asciidoctor project look at
 

00:16:41.520 --> 00:16:44.000
is is an asciidoctor project look at
this so it's built with Gradle who of

00:16:44.000 --> 00:16:44.010
this so it's built with Gradle who of
 

00:16:44.010 --> 00:16:46.070
this so it's built with Gradle who of
you knows asciidoctor I asked you doctor

00:16:46.070 --> 00:16:46.080
you knows asciidoctor I asked you doctor
 

00:16:46.080 --> 00:16:48.230
you knows asciidoctor I asked you doctor
is a markup language more complex than

00:16:48.230 --> 00:16:48.240
is a markup language more complex than
 

00:16:48.240 --> 00:16:51.650
is a markup language more complex than
marked down it's kind of replacing the

00:16:51.650 --> 00:16:51.660
marked down it's kind of replacing the
 

00:16:51.660 --> 00:16:53.960
marked down it's kind of replacing the
dot box and the latest of the world so

00:16:53.960 --> 00:16:53.970
dot box and the latest of the world so
 

00:16:53.970 --> 00:16:58.070
dot box and the latest of the world so
Riley is using asciidoctor only since a

00:16:58.070 --> 00:16:58.080
Riley is using asciidoctor only since a
 

00:16:58.080 --> 00:16:59.510
Riley is using asciidoctor only since a
couple of years I think for their books

00:16:59.510 --> 00:16:59.520
couple of years I think for their books
 

00:16:59.520 --> 00:17:04.189
couple of years I think for their books
and so so there's a grade alaska doctor

00:17:04.189 --> 00:17:04.199
and so so there's a grade alaska doctor
 

00:17:04.199 --> 00:17:05.840
and so so there's a grade alaska doctor
blogging out there let's look at that

00:17:05.840 --> 00:17:05.850
blogging out there let's look at that
 

00:17:05.850 --> 00:17:10.300
blogging out there let's look at that
project right we have a source main java

00:17:10.300 --> 00:17:10.310
project right we have a source main java
 

00:17:10.310 --> 00:17:12.740
project right we have a source main java
directory so it's a java project and

00:17:12.740 --> 00:17:12.750
directory so it's a java project and
 

00:17:12.750 --> 00:17:16.550
directory so it's a java project and
with asciidoctor we create a manual for

00:17:16.550 --> 00:17:16.560
with asciidoctor we create a manual for
 

00:17:16.560 --> 00:17:20.000
with asciidoctor we create a manual for
that can you see that by the way we

00:17:20.000 --> 00:17:20.010
that can you see that by the way we
 

00:17:20.010 --> 00:17:22.850
that can you see that by the way we
create a manual for this Java library

00:17:22.850 --> 00:17:22.860
create a manual for this Java library
 

00:17:22.860 --> 00:17:26.540
create a manual for this Java library
right and example - manual is the is the

00:17:26.540 --> 00:17:26.550
right and example - manual is the is the
 

00:17:26.550 --> 00:17:30.669
right and example - manual is the is the
is - source file for the manual ok so

00:17:30.669 --> 00:17:30.679
is - source file for the manual ok so
 

00:17:30.679 --> 00:17:45.970
is - source file for the manual ok so
let's look at the source file

00:17:45.970 --> 00:17:45.980
 

00:17:45.980 --> 00:17:47.830
so here you see the asciidoctor

00:17:47.830 --> 00:17:47.840
so here you see the asciidoctor
 

00:17:47.840 --> 00:17:50.950
so here you see the asciidoctor
asciidoctor annotate on a map map a cup

00:17:50.950 --> 00:17:50.960
asciidoctor annotate on a map map a cup
 

00:17:50.960 --> 00:17:55.690
asciidoctor annotate on a map map a cup
language and we can now tell cradle hey

00:17:55.690 --> 00:17:55.700
language and we can now tell cradle hey
 

00:17:55.700 --> 00:18:02.440
language and we can now tell cradle hey
turn this into a HTML page all right so

00:18:02.440 --> 00:18:02.450
turn this into a HTML page all right so
 

00:18:02.450 --> 00:18:08.200
turn this into a HTML page all right so
we did that now we open the HTML page

00:18:08.200 --> 00:18:08.210
we did that now we open the HTML page
 

00:18:08.210 --> 00:18:11.410
we did that now we open the HTML page
and you see this ask you doctor document

00:18:11.410 --> 00:18:11.420
and you see this ask you doctor document
 

00:18:11.420 --> 00:18:17.320
and you see this ask you doctor document
now rendered in HTML okay so let's

00:18:17.320 --> 00:18:17.330
now rendered in HTML okay so let's
 

00:18:17.330 --> 00:18:19.870
now rendered in HTML okay so let's
change the source file to ask you doctor

00:18:19.870 --> 00:18:19.880
change the source file to ask you doctor
 

00:18:19.880 --> 00:18:23.880
change the source file to ask you doctor
file let's do something exciting

00:18:23.880 --> 00:18:23.890
file let's do something exciting
 

00:18:23.890 --> 00:18:28.450
file let's do something exciting
now go back to the command line you

00:18:28.450 --> 00:18:28.460
now go back to the command line you
 

00:18:28.460 --> 00:18:38.110
now go back to the command line you
build it again maybe fresh I don't

00:18:38.110 --> 00:18:38.120
build it again maybe fresh I don't
 

00:18:38.120 --> 00:18:44.380
build it again maybe fresh I don't
expect you to be excited yet so so now

00:18:44.380 --> 00:18:44.390
expect you to be excited yet so so now
 

00:18:44.390 --> 00:18:46.120
expect you to be excited yet so so now
don't let now we do something exciting

00:18:46.120 --> 00:18:46.130
don't let now we do something exciting
 

00:18:46.130 --> 00:18:49.240
don't let now we do something exciting
we run the asciidoctor tab in the cradle

00:18:49.240 --> 00:18:49.250
we run the asciidoctor tab in the cradle
 

00:18:49.250 --> 00:18:52.780
we run the asciidoctor tab in the cradle
continuous mode - - continues and what

00:18:52.780 --> 00:18:52.790
continuous mode - - continues and what
 

00:18:52.790 --> 00:19:00.970
continuous mode - - continues and what
you can see now now cradle listens now

00:19:00.970 --> 00:19:00.980
you can see now now cradle listens now
 

00:19:00.980 --> 00:19:05.740
you can see now now cradle listens now
cradle listens to any changes right so

00:19:05.740 --> 00:19:05.750
cradle listens to any changes right so
 

00:19:05.750 --> 00:19:13.870
cradle listens to any changes right so
if we now go back to the document that's

00:19:13.870 --> 00:19:13.880
if we now go back to the document that's
 

00:19:13.880 --> 00:19:16.600
if we now go back to the document that's
something really exciting and we save it

00:19:16.600 --> 00:19:16.610
something really exciting and we save it
 

00:19:16.610 --> 00:19:18.640
something really exciting and we save it
we don't need to rebuild we just do a

00:19:18.640 --> 00:19:18.650
we don't need to rebuild we just do a
 

00:19:18.650 --> 00:19:24.250
we don't need to rebuild we just do a
refresh and it's updated right and yeah

00:19:24.250 --> 00:19:24.260
refresh and it's updated right and yeah
 

00:19:24.260 --> 00:19:26.410
refresh and it's updated right and yeah
and of course we can continue to do that

00:19:26.410 --> 00:19:26.420
and of course we can continue to do that
 

00:19:26.420 --> 00:19:28.830
and of course we can continue to do that
continuous mode introduced with Gradle

00:19:28.830 --> 00:19:28.840
continuous mode introduced with Gradle
 

00:19:28.840 --> 00:19:34.170
continuous mode introduced with Gradle
2.5 and we are super excited about that

00:19:34.170 --> 00:19:34.180
2.5 and we are super excited about that
 

00:19:34.180 --> 00:19:37.690
2.5 and we are super excited about that
so we save it again we do a refresh and

00:19:37.690 --> 00:19:37.700
so we save it again we do a refresh and
 

00:19:37.700 --> 00:19:44.320
so we save it again we do a refresh and
here we go and yeah and you can now see

00:19:44.320 --> 00:19:44.330
here we go and yeah and you can now see
 

00:19:44.330 --> 00:19:46.450
here we go and yeah and you can now see
that the changes were detected so the

00:19:46.450 --> 00:19:46.460
that the changes were detected so the
 

00:19:46.460 --> 00:19:51.220
that the changes were detected so the
builds were executed and and

00:19:51.220 --> 00:19:51.230
builds were executed and and
 

00:19:51.230 --> 00:19:53.410
builds were executed and and
the interesting thing I mean is not the

00:19:53.410 --> 00:19:53.420
the interesting thing I mean is not the
 

00:19:53.420 --> 00:19:55.840
the interesting thing I mean is not the
first time that there is a watch

00:19:55.840 --> 00:19:55.850
first time that there is a watch
 

00:19:55.850 --> 00:19:57.919
first time that there is a watch
solution on the market you have that

00:19:57.919 --> 00:19:57.929
solution on the market you have that
 

00:19:57.929 --> 00:19:59.600
solution on the market you have that
you know you have four people doing Ruby

00:19:59.600 --> 00:19:59.610
you know you have four people doing Ruby
 

00:19:59.610 --> 00:20:01.909
you know you have four people doing Ruby
they had that and whatnot the special

00:20:01.909 --> 00:20:01.919
they had that and whatnot the special
 

00:20:01.919 --> 00:20:03.649
they had that and whatnot the special
thing here is you don't need to specify

00:20:03.649 --> 00:20:03.659
thing here is you don't need to specify
 

00:20:03.659 --> 00:20:06.379
thing here is you don't need to specify
anything you don't usually order all

00:20:06.379 --> 00:20:06.389
anything you don't usually order all
 

00:20:06.389 --> 00:20:08.810
anything you don't usually order all
this watch solutions you need to specify

00:20:08.810 --> 00:20:08.820
this watch solutions you need to specify
 

00:20:08.820 --> 00:20:11.299
this watch solutions you need to specify
some clock patterns where to look for

00:20:11.299 --> 00:20:11.309
some clock patterns where to look for
 

00:20:11.309 --> 00:20:13.580
some clock patterns where to look for
and what to do if that pattern changes

00:20:13.580 --> 00:20:13.590
and what to do if that pattern changes
 

00:20:13.590 --> 00:20:15.409
and what to do if that pattern changes
creator knows all that we have a rich

00:20:15.409 --> 00:20:15.419
creator knows all that we have a rich
 

00:20:15.419 --> 00:20:17.960
creator knows all that we have a rich
input-output model you just say run this

00:20:17.960 --> 00:20:17.970
input-output model you just say run this
 

00:20:17.970 --> 00:20:19.909
input-output model you just say run this
task in continuous mode and greater

00:20:19.909 --> 00:20:19.919
task in continuous mode and greater
 

00:20:19.919 --> 00:20:21.889
task in continuous mode and greater
knows exactly for what changes to look

00:20:21.889 --> 00:20:21.899
knows exactly for what changes to look
 

00:20:21.899 --> 00:20:23.450
knows exactly for what changes to look
because the input and outputs are

00:20:23.450 --> 00:20:23.460
because the input and outputs are
 

00:20:23.460 --> 00:20:25.159
because the input and outputs are
defined in a Gradle build that makes

00:20:25.159 --> 00:20:25.169
defined in a Gradle build that makes
 

00:20:25.169 --> 00:20:26.720
defined in a Gradle build that makes
sense so for developer it's super easy

00:20:26.720 --> 00:20:26.730
sense so for developer it's super easy
 

00:20:26.730 --> 00:20:28.639
sense so for developer it's super easy
right you can do this with any Gradle

00:20:28.639 --> 00:20:28.649
right you can do this with any Gradle
 

00:20:28.649 --> 00:20:30.440
right you can do this with any Gradle
task they don't need to configure

00:20:30.440 --> 00:20:30.450
task they don't need to configure
 

00:20:30.450 --> 00:20:33.649
task they don't need to configure
anything for this right and so for our

00:20:33.649 --> 00:20:33.659
anything for this right and so for our
 

00:20:33.659 --> 00:20:35.960
anything for this right and so for our
so we use that in many places internally

00:20:35.960 --> 00:20:35.970
so we use that in many places internally
 

00:20:35.970 --> 00:20:37.820
so we use that in many places internally
right documentation is the place in

00:20:37.820 --> 00:20:37.830
right documentation is the place in
 

00:20:37.830 --> 00:20:40.310
right documentation is the place in
other places if for our to our upcoming

00:20:40.310 --> 00:20:40.320
other places if for our to our upcoming
 

00:20:40.320 --> 00:20:44.499
other places if for our to our upcoming
cradle come offering right we we our

00:20:44.499 --> 00:20:44.509
cradle come offering right we we our
 

00:20:44.509 --> 00:20:47.090
cradle come offering right we we our
whole back-end app right is using the

00:20:47.090 --> 00:20:47.100
whole back-end app right is using the
 

00:20:47.100 --> 00:20:49.129
whole back-end app right is using the
continuous mode we started in continuous

00:20:49.129 --> 00:20:49.139
continuous mode we started in continuous
 

00:20:49.139 --> 00:20:51.049
continuous mode we started in continuous
mode and then whatever whatever we

00:20:51.049 --> 00:20:51.059
mode and then whatever whatever we
 

00:20:51.059 --> 00:20:52.549
mode and then whatever whatever we
change in the app right it's

00:20:52.549 --> 00:20:52.559
change in the app right it's
 

00:20:52.559 --> 00:20:54.049
change in the app right it's
automatically picked up the app is

00:20:54.049 --> 00:20:54.059
automatically picked up the app is
 

00:20:54.059 --> 00:20:56.869
automatically picked up the app is
redeployed and it's a wonderful rapid

00:20:56.869 --> 00:20:56.879
redeployed and it's a wonderful rapid
 

00:20:56.879 --> 00:20:59.869
redeployed and it's a wonderful rapid
application development mode and think

00:20:59.869 --> 00:20:59.879
application development mode and think
 

00:20:59.879 --> 00:21:02.269
application development mode and think
about what that means from a deeper

00:21:02.269 --> 00:21:02.279
about what that means from a deeper
 

00:21:02.279 --> 00:21:06.889
about what that means from a deeper
point of view so so so we're the shed

00:21:06.889 --> 00:21:06.899
point of view so so so we're the shed
 

00:21:06.899 --> 00:21:09.470
point of view so so so we're the shed
was LinkedIn yesterday and their goal

00:21:09.470 --> 00:21:09.480
was LinkedIn yesterday and their goal
 

00:21:09.480 --> 00:21:11.090
was LinkedIn yesterday and their goal
for next year is that they developers

00:21:11.090 --> 00:21:11.100
for next year is that they developers
 

00:21:11.100 --> 00:21:14.659
for next year is that they developers
never need to directly call the build

00:21:14.659 --> 00:21:14.669
never need to directly call the build
 

00:21:14.669 --> 00:21:18.649
never need to directly call the build
system that is the goal for 2016 so how

00:21:18.649 --> 00:21:18.659
system that is the goal for 2016 so how
 

00:21:18.659 --> 00:21:20.419
system that is the goal for 2016 so how
do we are going to achieve that that is

00:21:20.419 --> 00:21:20.429
do we are going to achieve that that is
 

00:21:20.429 --> 00:21:23.239
do we are going to achieve that that is
a key tool for that so they basically

00:21:23.239 --> 00:21:23.249
a key tool for that so they basically
 

00:21:23.249 --> 00:21:26.239
a key tool for that so they basically
will bundle a pre-configured continuous

00:21:26.239 --> 00:21:26.249
will bundle a pre-configured continuous
 

00:21:26.249 --> 00:21:30.259
will bundle a pre-configured continuous
mode settings with the IDE right so when

00:21:30.259 --> 00:21:30.269
mode settings with the IDE right so when
 

00:21:30.269 --> 00:21:31.580
mode settings with the IDE right so when
they when the developers fire up the IDE

00:21:31.580 --> 00:21:31.590
they when the developers fire up the IDE
 

00:21:31.590 --> 00:21:34.039
they when the developers fire up the IDE
they're not just fire up JetBrains

00:21:34.039 --> 00:21:34.049
they're not just fire up JetBrains
 

00:21:34.049 --> 00:21:36.799
they're not just fire up JetBrains
IntelliJ if I up a whole set of rules

00:21:36.799 --> 00:21:36.809
IntelliJ if I up a whole set of rules
 

00:21:36.809 --> 00:21:39.950
IntelliJ if I up a whole set of rules
that cradle gets instructed with what to

00:21:39.950 --> 00:21:39.960
that cradle gets instructed with what to
 

00:21:39.960 --> 00:21:42.279
that cradle gets instructed with what to
watch for right so when you have some

00:21:42.279 --> 00:21:42.289
watch for right so when you have some
 

00:21:42.289 --> 00:21:45.080
watch for right so when you have some
some source code generation some

00:21:45.080 --> 00:21:45.090
some source code generation some
 

00:21:45.090 --> 00:21:46.789
some source code generation some
specific one right you just fire up the

00:21:46.789 --> 00:21:46.799
specific one right you just fire up the
 

00:21:46.799 --> 00:21:49.340
specific one right you just fire up the
IDE it starts the continuous mode and

00:21:49.340 --> 00:21:49.350
IDE it starts the continuous mode and
 

00:21:49.350 --> 00:21:51.529
IDE it starts the continuous mode and
you develop us to some changes and let's

00:21:51.529 --> 00:21:51.539
you develop us to some changes and let's
 

00:21:51.539 --> 00:21:55.249
you develop us to some changes and let's
say the XML configuration file and boom

00:21:55.249 --> 00:21:55.259
say the XML configuration file and boom
 

00:21:55.259 --> 00:21:57.200
say the XML configuration file and boom
Gradle will automatically bility

00:21:57.200 --> 00:21:57.210
Gradle will automatically bility
 

00:21:57.210 --> 00:21:58.310
Gradle will automatically bility
developers don't even know is that the

00:21:58.310 --> 00:21:58.320
developers don't even know is that the
 

00:21:58.320 --> 00:22:00.529
developers don't even know is that the
IDE doing this is that the build system

00:22:00.529 --> 00:22:00.539
IDE doing this is that the build system
 

00:22:00.539 --> 00:22:02.869
IDE doing this is that the build system
doing that well and and the whole thing

00:22:02.869 --> 00:22:02.879
doing that well and and the whole thing
 

00:22:02.879 --> 00:22:05.359
doing that well and and the whole thing
is the IDE right it's the whole thing

00:22:05.359 --> 00:22:05.369
is the IDE right it's the whole thing
 

00:22:05.369 --> 00:22:08.749
is the IDE right it's the whole thing
and so so I so I'm super excited about

00:22:08.749 --> 00:22:08.759
and so so I so I'm super excited about
 

00:22:08.759 --> 00:22:11.930
and so so I so I'm super excited about
how continues mode can can basically

00:22:11.930 --> 00:22:11.940
how continues mode can can basically
 

00:22:11.940 --> 00:22:13.690
how continues mode can can basically
the capabilities of a classic IDE

00:22:13.690 --> 00:22:13.700
the capabilities of a classic IDE
 

00:22:13.700 --> 00:22:16.549
the capabilities of a classic IDE
because finally your IDE becomes

00:22:16.549 --> 00:22:16.559
because finally your IDE becomes
 

00:22:16.559 --> 00:22:19.639
because finally your IDE becomes
extendable with Gradle right who of you

00:22:19.639 --> 00:22:19.649
extendable with Gradle right who of you
 

00:22:19.649 --> 00:22:21.980
extendable with Gradle right who of you
has ever written an eclipse nature on

00:22:21.980 --> 00:22:21.990
has ever written an eclipse nature on
 

00:22:21.990 --> 00:22:23.659
has ever written an eclipse nature on
Eclipse builder who wants to do that

00:22:23.659 --> 00:22:23.669
Eclipse builder who wants to do that
 

00:22:23.669 --> 00:22:27.289
Eclipse builder who wants to do that
right yeah so and IntelliJ is the same

00:22:27.289 --> 00:22:27.299
right yeah so and IntelliJ is the same
 

00:22:27.299 --> 00:22:29.330
right yeah so and IntelliJ is the same
thing build systems are made for this

00:22:29.330 --> 00:22:29.340
thing build systems are made for this
 

00:22:29.340 --> 00:22:31.879
thing build systems are made for this
kind of stuff so continuous mode is

00:22:31.879 --> 00:22:31.889
kind of stuff so continuous mode is
 

00:22:31.889 --> 00:22:36.259
kind of stuff so continuous mode is
super super exciting capability and and

00:22:36.259 --> 00:22:36.269
super super exciting capability and and
 

00:22:36.269 --> 00:22:38.149
super super exciting capability and and
I'm sure we will find interesting

00:22:38.149 --> 00:22:38.159
I'm sure we will find interesting
 

00:22:38.159 --> 00:22:39.590
I'm sure we will find interesting
opportunities to integrate that with

00:22:39.590 --> 00:22:39.600
opportunities to integrate that with
 

00:22:39.600 --> 00:22:41.360
opportunities to integrate that with
Android studio so we already had a chat

00:22:41.360 --> 00:22:41.370
Android studio so we already had a chat
 

00:22:41.370 --> 00:22:43.610
Android studio so we already had a chat
with the guys and we will see what comes

00:22:43.610 --> 00:22:43.620
with the guys and we will see what comes
 

00:22:43.620 --> 00:22:49.700
with the guys and we will see what comes
out of that ok talking about Android

00:22:49.700 --> 00:22:49.710
out of that ok talking about Android
 

00:22:49.710 --> 00:22:53.509
out of that ok talking about Android
studio one of the most important goals

00:22:53.509 --> 00:22:53.519
studio one of the most important goals
 

00:22:53.519 --> 00:22:55.669
studio one of the most important goals
of the new Android developer tool chain

00:22:55.669 --> 00:22:55.679
of the new Android developer tool chain
 

00:22:55.679 --> 00:22:58.850
of the new Android developer tool chain
was a true Android IDE that natively

00:22:58.850 --> 00:22:58.860
was a true Android IDE that natively
 

00:22:58.860 --> 00:23:02.990
was a true Android IDE that natively
understands Android projects right in

00:23:02.990 --> 00:23:03.000
understands Android projects right in
 

00:23:03.000 --> 00:23:05.269
understands Android projects right in
contrast to let's say the Eclipse ADT

00:23:05.269 --> 00:23:05.279
contrast to let's say the Eclipse ADT
 

00:23:05.279 --> 00:23:08.210
contrast to let's say the Eclipse ADT
project right and and and the other key

00:23:08.210 --> 00:23:08.220
project right and and and the other key
 

00:23:08.220 --> 00:23:10.399
project right and and and the other key
goal was the IDE should build the same

00:23:10.399 --> 00:23:10.409
goal was the IDE should build the same
 

00:23:10.409 --> 00:23:13.129
goal was the IDE should build the same
way as the command line and CI right

00:23:13.129 --> 00:23:13.139
way as the command line and CI right
 

00:23:13.139 --> 00:23:15.139
way as the command line and CI right
that you have consistency and coherent

00:23:15.139 --> 00:23:15.149
that you have consistency and coherent
 

00:23:15.149 --> 00:23:17.149
that you have consistency and coherent
quality of service of the def tooling if

00:23:17.149 --> 00:23:17.159
quality of service of the def tooling if
 

00:23:17.159 --> 00:23:20.480
quality of service of the def tooling if
you remember Eclipse ADT had a separate

00:23:20.480 --> 00:23:20.490
you remember Eclipse ADT had a separate
 

00:23:20.490 --> 00:23:22.279
you remember Eclipse ADT had a separate
build system right you had an end built

00:23:22.279 --> 00:23:22.289
build system right you had an end built
 

00:23:22.289 --> 00:23:25.399
build system right you had an end built
on maven build whatever you Cho should

00:23:25.399 --> 00:23:25.409
on maven build whatever you Cho should
 

00:23:25.409 --> 00:23:26.930
on maven build whatever you Cho should
have chosen right but when you were

00:23:26.930 --> 00:23:26.940
have chosen right but when you were
 

00:23:26.940 --> 00:23:29.119
have chosen right but when you were
working in Eclipse ADT it came with its

00:23:29.119 --> 00:23:29.129
working in Eclipse ADT it came with its
 

00:23:29.129 --> 00:23:31.610
working in Eclipse ADT it came with its
own tool chain own merging on everything

00:23:31.610 --> 00:23:31.620
own tool chain own merging on everything
 

00:23:31.620 --> 00:23:33.680
own tool chain own merging on everything
right that's how you had to do it right

00:23:33.680 --> 00:23:33.690
right that's how you had to do it right
 

00:23:33.690 --> 00:23:35.480
right that's how you had to do it right
there was no way to deeply integrate it

00:23:35.480 --> 00:23:35.490
there was no way to deeply integrate it
 

00:23:35.490 --> 00:23:37.759
there was no way to deeply integrate it
so the goal of Android studio was the

00:23:37.759 --> 00:23:37.769
so the goal of Android studio was the
 

00:23:37.769 --> 00:23:40.669
so the goal of Android studio was the
IDE is not doing any actions themself

00:23:40.669 --> 00:23:40.679
IDE is not doing any actions themself
 

00:23:40.679 --> 00:23:43.820
IDE is not doing any actions themself
anymore right every every action execute

00:23:43.820 --> 00:23:43.830
anymore right every every action execute
 

00:23:43.830 --> 00:23:46.249
anymore right every every action execute
test generate resources is delegated to

00:23:46.249 --> 00:23:46.259
test generate resources is delegated to
 

00:23:46.259 --> 00:23:48.019
test generate resources is delegated to
the underlying Gradle build so that

00:23:48.019 --> 00:23:48.029
the underlying Gradle build so that
 

00:23:48.029 --> 00:23:50.029
the underlying Gradle build so that
whether you execute your build from the

00:23:50.029 --> 00:23:50.039
whether you execute your build from the
 

00:23:50.039 --> 00:23:51.259
whether you execute your build from the
command line or whether you're just

00:23:51.259 --> 00:23:51.269
command line or whether you're just
 

00:23:51.269 --> 00:23:52.820
command line or whether you're just
working Android studio it's exactly the

00:23:52.820 --> 00:23:52.830
working Android studio it's exactly the
 

00:23:52.830 --> 00:24:01.490
working Android studio it's exactly the
same behavior so and so unified build

00:24:01.490 --> 00:24:01.500
same behavior so and so unified build
 

00:24:01.500 --> 00:24:04.759
same behavior so and so unified build
system and I talked about with Gradle

00:24:04.759 --> 00:24:04.769
system and I talked about with Gradle
 

00:24:04.769 --> 00:24:06.619
system and I talked about with Gradle
you can now extend your build system

00:24:06.619 --> 00:24:06.629
you can now extend your build system
 

00:24:06.629 --> 00:24:09.110
you can now extend your build system
right you could easily write let's say

00:24:09.110 --> 00:24:09.120
right you could easily write let's say
 

00:24:09.120 --> 00:24:10.999
right you could easily write let's say
let's say you're working in Android

00:24:10.999 --> 00:24:11.009
let's say you're working in Android
 

00:24:11.009 --> 00:24:14.480
let's say you're working in Android
studio on some widget that shows you a

00:24:14.480 --> 00:24:14.490
studio on some widget that shows you a
 

00:24:14.490 --> 00:24:20.749
studio on some widget that shows you a
quote of the day right so you could now

00:24:20.749 --> 00:24:20.759
quote of the day right so you could now
 

00:24:20.759 --> 00:24:23.359
quote of the day right so you could now
let's say if it's just for fun for your

00:24:23.359 --> 00:24:23.369
let's say if it's just for fun for your
 

00:24:23.369 --> 00:24:24.980
let's say if it's just for fun for your
developers just you just use it for the

00:24:24.980 --> 00:24:24.990
developers just you just use it for the
 

00:24:24.990 --> 00:24:27.580
developers just you just use it for the
debug for the debug build time right and

00:24:27.580 --> 00:24:27.590
debug for the debug build time right and
 

00:24:27.590 --> 00:24:32.299
debug for the debug build time right and
you could now easily tell Gradle hey I

00:24:32.299 --> 00:24:32.309
you could now easily tell Gradle hey I
 

00:24:32.309 --> 00:24:34.280
you could now easily tell Gradle hey I
want to hook in another task while you

00:24:34.280 --> 00:24:34.290
want to hook in another task while you
 

00:24:34.290 --> 00:24:36.890
want to hook in another task while you
are generating the resources and I want

00:24:36.890 --> 00:24:36.900
are generating the resources and I want
 

00:24:36.900 --> 00:24:39.799
are generating the resources and I want
to I want you to retrieve the quote of

00:24:39.799 --> 00:24:39.809
to I want you to retrieve the quote of
 

00:24:39.809 --> 00:24:42.020
to I want you to retrieve the quote of
the day from some server and edit to the

00:24:42.020 --> 00:24:42.030
the day from some server and edit to the
 

00:24:42.030 --> 00:24:44.900
the day from some server and edit to the
resources files right so you just add

00:24:44.900 --> 00:24:44.910
resources files right so you just add
 

00:24:44.910 --> 00:24:47.150
resources files right so you just add
that task to your build script and if

00:24:47.150 --> 00:24:47.160
that task to your build script and if
 

00:24:47.160 --> 00:24:49.430
that task to your build script and if
you're working in Android studio because

00:24:49.430 --> 00:24:49.440
you're working in Android studio because
 

00:24:49.440 --> 00:24:51.230
you're working in Android studio because
Android studio instructs Gradle to

00:24:51.230 --> 00:24:51.240
Android studio instructs Gradle to
 

00:24:51.240 --> 00:24:53.810
Android studio instructs Gradle to
create a resources you will now have in

00:24:53.810 --> 00:24:53.820
create a resources you will now have in
 

00:24:53.820 --> 00:24:55.910
create a resources you will now have in
your in your visual design which it you

00:24:55.910 --> 00:24:55.920
your in your visual design which it you
 

00:24:55.920 --> 00:24:57.260
your in your visual design which it you
will have always a changing point of

00:24:57.260 --> 00:24:57.270
will have always a changing point of
 

00:24:57.270 --> 00:25:00.470
will have always a changing point of
today right so you get the point right

00:25:00.470 --> 00:25:00.480
today right so you get the point right
 

00:25:00.480 --> 00:25:02.030
today right so you get the point right
it's now fully integrated with Android

00:25:02.030 --> 00:25:02.040
it's now fully integrated with Android
 

00:25:02.040 --> 00:25:03.740
it's now fully integrated with Android
studio because Android Studios they're

00:25:03.740 --> 00:25:03.750
studio because Android Studios they're
 

00:25:03.750 --> 00:25:05.450
studio because Android Studios they're
getting everything to Gradle so you so

00:25:05.450 --> 00:25:05.460
getting everything to Gradle so you so
 

00:25:05.460 --> 00:25:07.250
getting everything to Gradle so you so
all so you can now really powerfully

00:25:07.250 --> 00:25:07.260
all so you can now really powerfully
 

00:25:07.260 --> 00:25:12.049
all so you can now really powerfully
extend your IDE with Eclipse ADT would

00:25:12.049 --> 00:25:12.059
extend your IDE with Eclipse ADT would
 

00:25:12.059 --> 00:25:13.549
extend your IDE with Eclipse ADT would
have been completely impossible separate

00:25:13.549 --> 00:25:13.559
have been completely impossible separate
 

00:25:13.559 --> 00:25:15.020
have been completely impossible separate
worlds what you do in the build and what

00:25:15.020 --> 00:25:15.030
worlds what you do in the build and what
 

00:25:15.030 --> 00:25:16.370
worlds what you do in the build and what
you do in your IDE and your idea is

00:25:16.370 --> 00:25:16.380
you do in your IDE and your idea is
 

00:25:16.380 --> 00:25:20.810
you do in your IDE and your idea is
usually not extendable right so and the

00:25:20.810 --> 00:25:20.820
usually not extendable right so and the
 

00:25:20.820 --> 00:25:23.810
usually not extendable right so and the
other part besides being extension aware

00:25:23.810 --> 00:25:23.820
other part besides being extension aware
 

00:25:23.820 --> 00:25:27.530
other part besides being extension aware
is as the Android domain is deeply

00:25:27.530 --> 00:25:27.540
is as the Android domain is deeply
 

00:25:27.540 --> 00:25:29.210
is as the Android domain is deeply
modeling cradle it is easy for Android

00:25:29.210 --> 00:25:29.220
modeling cradle it is easy for Android
 

00:25:29.220 --> 00:25:31.610
modeling cradle it is easy for Android
studio to arrive rich information from

00:25:31.610 --> 00:25:31.620
studio to arrive rich information from
 

00:25:31.620 --> 00:25:33.980
studio to arrive rich information from
the build spec all right so so if you

00:25:33.980 --> 00:25:33.990
the build spec all right so so if you
 

00:25:33.990 --> 00:25:36.740
the build spec all right so so if you
look at it at an example right so here

00:25:36.740 --> 00:25:36.750
look at it at an example right so here
 

00:25:36.750 --> 00:25:39.410
look at it at an example right so here
we have here we on Android studio so we

00:25:39.410 --> 00:25:39.420
we have here we on Android studio so we
 

00:25:39.420 --> 00:25:41.419
we have here we on Android studio so we
have that we have two product flavors

00:25:41.419 --> 00:25:41.429
have that we have two product flavors
 

00:25:41.429 --> 00:25:43.070
have that we have two product flavors
free and paid right

00:25:43.070 --> 00:25:43.080
free and paid right
 

00:25:43.080 --> 00:25:44.750
free and paid right
they use different for whatever reason

00:25:44.750 --> 00:25:44.760
they use different for whatever reason
 

00:25:44.760 --> 00:25:45.950
they use different for whatever reason
and use different version codes they

00:25:45.950 --> 00:25:45.960
and use different version codes they
 

00:25:45.960 --> 00:25:47.360
and use different version codes they
could use different dependencies but

00:25:47.360 --> 00:25:47.370
could use different dependencies but
 

00:25:47.370 --> 00:25:52.840
could use different dependencies but
that's not what I want to show here and

00:25:52.840 --> 00:25:52.850
 

00:25:52.850 --> 00:25:57.890
and so now we go into the visual mode

00:25:57.890 --> 00:25:57.900
and so now we go into the visual mode
 

00:25:57.900 --> 00:26:02.600
and so now we go into the visual mode
right and we can now change I will have

00:26:02.600 --> 00:26:02.610
right and we can now change I will have
 

00:26:02.610 --> 00:26:07.010
right and we can now change I will have
a stiff neck after this tour do you can

00:26:07.010 --> 00:26:07.020
a stiff neck after this tour do you can
 

00:26:07.020 --> 00:26:08.930
a stiff neck after this tour do you can
out change because I don't see that on

00:26:08.930 --> 00:26:08.940
out change because I don't see that on
 

00:26:08.940 --> 00:26:15.470
out change because I don't see that on
my screen the built very end right so no

00:26:15.470 --> 00:26:15.480
my screen the built very end right so no
 

00:26:15.480 --> 00:26:16.970
my screen the built very end right so no
issues free release and if we if we

00:26:16.970 --> 00:26:16.980
issues free release and if we if we
 

00:26:16.980 --> 00:26:21.110
issues free release and if we if we
switch to pay T bar all right that is

00:26:21.110 --> 00:26:21.120
switch to pay T bar all right that is
 

00:26:21.120 --> 00:26:23.299
switch to pay T bar all right that is
deep IDE integration and that's fun

00:26:23.299 --> 00:26:23.309
deep IDE integration and that's fun
 

00:26:23.309 --> 00:26:24.320
deep IDE integration and that's fun
that's how it should be

00:26:24.320 --> 00:26:24.330
that's how it should be
 

00:26:24.330 --> 00:26:40.150
that's how it should be
right so okay

00:26:40.150 --> 00:26:40.160
 

00:26:40.160 --> 00:26:49.460
I want to show you

00:26:49.460 --> 00:26:49.470
 

00:26:49.470 --> 00:26:54.730
yeah I skip the whole tooling API topic

00:26:54.730 --> 00:26:54.740
yeah I skip the whole tooling API topic
 

00:26:54.740 --> 00:26:57.379
yeah I skip the whole tooling API topic
so we have a special library that we

00:26:57.379 --> 00:26:57.389
so we have a special library that we
 

00:26:57.389 --> 00:27:00.860
so we have a special library that we
create so that I des can interact with

00:27:00.860 --> 00:27:00.870
create so that I des can interact with
 

00:27:00.870 --> 00:27:04.340
create so that I des can interact with
Gradle right period Android studio plane

00:27:04.340 --> 00:27:04.350
Gradle right period Android studio plane
 

00:27:04.350 --> 00:27:08.389
Gradle right period Android studio plane
IntelliJ or eclipse don't need to go

00:27:08.389 --> 00:27:08.399
IntelliJ or eclipse don't need to go
 

00:27:08.399 --> 00:27:09.590
IntelliJ or eclipse don't need to go
into detail the only thing that is

00:27:09.590 --> 00:27:09.600
into detail the only thing that is
 

00:27:09.600 --> 00:27:11.240
into detail the only thing that is
interesting that's the only thing I

00:27:11.240 --> 00:27:11.250
interesting that's the only thing I
 

00:27:11.250 --> 00:27:15.159
interesting that's the only thing I
would like to mention so so we support

00:27:15.159 --> 00:27:15.169
would like to mention so so we support
 

00:27:15.169 --> 00:27:20.230
would like to mention so so we support
we we we ourself create the cradle

00:27:20.230 --> 00:27:20.240
we we we ourself create the cradle
 

00:27:20.240 --> 00:27:23.060
we we we ourself create the cradle
plugin for eclipse or I should say yeah

00:27:23.060 --> 00:27:23.070
plugin for eclipse or I should say yeah
 

00:27:23.070 --> 00:27:24.470
plugin for eclipse or I should say yeah
the creative plugin for eclipse plug-in

00:27:24.470 --> 00:27:24.480
the creative plugin for eclipse plug-in
 

00:27:24.480 --> 00:27:29.210
the creative plugin for eclipse plug-in
ecosystem to be very clear and we only

00:27:29.210 --> 00:27:29.220
ecosystem to be very clear and we only
 

00:27:29.220 --> 00:27:30.980
ecosystem to be very clear and we only
do it for Java right we're not working

00:27:30.980 --> 00:27:30.990
do it for Java right we're not working
 

00:27:30.990 --> 00:27:33.889
do it for Java right we're not working
on Android support for Eclipse and one

00:27:33.889 --> 00:27:33.899
on Android support for Eclipse and one
 

00:27:33.899 --> 00:27:35.180
on Android support for Eclipse and one
thing we have added that is really nice

00:27:35.180 --> 00:27:35.190
thing we have added that is really nice
 

00:27:35.190 --> 00:27:38.149
thing we have added that is really nice
I talked about how you know what a deep

00:27:38.149 --> 00:27:38.159
I talked about how you know what a deep
 

00:27:38.159 --> 00:27:40.460
I talked about how you know what a deep
API Gradle has what you can now do from

00:27:40.460 --> 00:27:40.470
API Gradle has what you can now do from
 

00:27:40.470 --> 00:27:44.749
API Gradle has what you can now do from
eclipse is when you go to your package

00:27:44.749 --> 00:27:44.759
eclipse is when you go to your package
 

00:27:44.759 --> 00:27:46.310
eclipse is when you go to your package
or to any test class and you can

00:27:46.310 --> 00:27:46.320
or to any test class and you can
 

00:27:46.320 --> 00:27:49.009
or to any test class and you can
right-click it and you say execute you

00:27:49.009 --> 00:27:49.019
right-click it and you say execute you
 

00:27:49.019 --> 00:27:52.430
right-click it and you say execute you
know all the visual view you then get

00:27:52.430 --> 00:27:52.440
know all the visual view you then get
 

00:27:52.440 --> 00:27:56.409
know all the visual view you then get
that shows you the test execution

00:27:56.409 --> 00:27:56.419
 

00:27:56.419 --> 00:27:59.950
execution windows for test within an IDE

00:27:59.950 --> 00:27:59.960
execution windows for test within an IDE
 

00:27:59.960 --> 00:28:02.749
execution windows for test within an IDE
classically the IDE s come with their

00:28:02.749 --> 00:28:02.759
classically the IDE s come with their
 

00:28:02.759 --> 00:28:05.419
classically the IDE s come with their
own test runners right so now with build

00:28:05.419 --> 00:28:05.429
own test runners right so now with build
 

00:28:05.429 --> 00:28:07.789
own test runners right so now with build
chip you have no the same visual

00:28:07.789 --> 00:28:07.799
chip you have no the same visual
 

00:28:07.799 --> 00:28:09.470
chip you have no the same visual
representation really nice runner

00:28:09.470 --> 00:28:09.480
representation really nice runner
 

00:28:09.480 --> 00:28:11.269
representation really nice runner
alright that runs the test gives you a

00:28:11.269 --> 00:28:11.279
alright that runs the test gives you a
 

00:28:11.279 --> 00:28:14.419
alright that runs the test gives you a
green or red button but actually all the

00:28:14.419 --> 00:28:14.429
green or red button but actually all the
 

00:28:14.429 --> 00:28:16.460
green or red button but actually all the
tests are executed by cradle and with

00:28:16.460 --> 00:28:16.470
tests are executed by cradle and with
 

00:28:16.470 --> 00:28:18.169
tests are executed by cradle and with
the tooling API will hook into the

00:28:18.169 --> 00:28:18.179
the tooling API will hook into the
 

00:28:18.179 --> 00:28:20.149
the tooling API will hook into the
eventing system of cradle and can have a

00:28:20.149 --> 00:28:20.159
eventing system of cradle and can have a
 

00:28:20.159 --> 00:28:22.730
eventing system of cradle and can have a
really nice rich representation at the

00:28:22.730 --> 00:28:22.740
really nice rich representation at the
 

00:28:22.740 --> 00:28:25.249
really nice rich representation at the
same time it's no longer that eclipse

00:28:25.249 --> 00:28:25.259
same time it's no longer that eclipse
 

00:28:25.259 --> 00:28:27.889
same time it's no longer that eclipse
has a separate test execution and cradle

00:28:27.889 --> 00:28:27.899
has a separate test execution and cradle
 

00:28:27.899 --> 00:28:29.299
has a separate test execution and cradle
and think about it what it means for

00:28:29.299 --> 00:28:29.309
and think about it what it means for
 

00:28:29.309 --> 00:28:30.950
and think about it what it means for
integration tests I've been in many

00:28:30.950 --> 00:28:30.960
integration tests I've been in many
 

00:28:30.960 --> 00:28:33.320
integration tests I've been in many
organizations they told the developers

00:28:33.320 --> 00:28:33.330
organizations they told the developers
 

00:28:33.330 --> 00:28:34.909
organizations they told the developers
if you want to execute the integration

00:28:34.909 --> 00:28:34.919
if you want to execute the integration
 

00:28:34.919 --> 00:28:37.340
if you want to execute the integration
tests from your IDE you have to go to

00:28:37.340 --> 00:28:37.350
tests from your IDE you have to go to
 

00:28:37.350 --> 00:28:39.409
tests from your IDE you have to go to
the build wiki and what before you

00:28:39.409 --> 00:28:39.419
the build wiki and what before you
 

00:28:39.419 --> 00:28:40.850
the build wiki and what before you
integrate your integration tests you

00:28:40.850 --> 00:28:40.860
integrate your integration tests you
 

00:28:40.860 --> 00:28:42.799
integrate your integration tests you
have to go to the command line and

00:28:42.799 --> 00:28:42.809
have to go to the command line and
 

00:28:42.809 --> 00:28:44.930
have to go to the command line and
execute with your Gradle and may even

00:28:44.930 --> 00:28:44.940
execute with your Gradle and may even
 

00:28:44.940 --> 00:28:49.070
execute with your Gradle and may even
build a fire up database create test

00:28:49.070 --> 00:28:49.080
build a fire up database create test
 

00:28:49.080 --> 00:28:51.649
build a fire up database create test
data some manual step and then you can

00:28:51.649 --> 00:28:51.659
data some manual step and then you can
 

00:28:51.659 --> 00:28:53.269
data some manual step and then you can
run the integration test from eclipse

00:28:53.269 --> 00:28:53.279
run the integration test from eclipse
 

00:28:53.279 --> 00:28:55.519
run the integration test from eclipse
because you couldn't extend Eclipse to

00:28:55.519 --> 00:28:55.529
because you couldn't extend Eclipse to
 

00:28:55.529 --> 00:28:56.480
because you couldn't extend Eclipse to
do this kind of stuff

00:28:56.480 --> 00:28:56.490
do this kind of stuff
 

00:28:56.490 --> 00:28:58.460
do this kind of stuff
now with Gradle all this test picture

00:28:58.460 --> 00:28:58.470
now with Gradle all this test picture
 

00:28:58.470 --> 00:29:00.919
now with Gradle all this test picture
setup is implemented in Gradle so if you

00:29:00.919 --> 00:29:00.929
setup is implemented in Gradle so if you
 

00:29:00.929 --> 00:29:03.260
setup is implemented in Gradle so if you
now can run your your

00:29:03.260 --> 00:29:03.270
now can run your your
 

00:29:03.270 --> 00:29:06.410
now can run your your
tests executed by cradle from 90 you

00:29:06.410 --> 00:29:06.420
tests executed by cradle from 90 you
 

00:29:06.420 --> 00:29:07.790
tests executed by cradle from 90 you
don't need to go to any built wicked you

00:29:07.790 --> 00:29:07.800
don't need to go to any built wicked you
 

00:29:07.800 --> 00:29:10.130
don't need to go to any built wicked you
develop us don't care they just say run

00:29:10.130 --> 00:29:10.140
develop us don't care they just say run
 

00:29:10.140 --> 00:29:12.020
develop us don't care they just say run
my tests and great and make sure that

00:29:12.020 --> 00:29:12.030
my tests and great and make sure that
 

00:29:12.030 --> 00:29:13.580
my tests and great and make sure that
all your test fixtures properly setup

00:29:13.580 --> 00:29:13.590
all your test fixtures properly setup
 

00:29:13.590 --> 00:29:22.250
all your test fixtures properly setup
right because it's extensible okay so to

00:29:22.250 --> 00:29:22.260
right because it's extensible okay so to
 

00:29:22.260 --> 00:29:24.650
right because it's extensible okay so to
wrap this up I want to look a little bit

00:29:24.650 --> 00:29:24.660
wrap this up I want to look a little bit
 

00:29:24.660 --> 00:29:30.520
wrap this up I want to look a little bit
under the hood of certain core concepts

00:29:30.520 --> 00:29:30.530
 

00:29:30.530 --> 00:29:38.660
so so this is the plugin that has Gradle

00:29:38.660 --> 00:29:38.670
so so this is the plugin that has Gradle
 

00:29:38.670 --> 00:29:43.430
so so this is the plugin that has Gradle
hey this is an Android application and

00:29:43.430 --> 00:29:43.440
hey this is an Android application and
 

00:29:43.440 --> 00:29:46.850
hey this is an Android application and
we called that a declarative element and

00:29:46.850 --> 00:29:46.860
we called that a declarative element and
 

00:29:46.860 --> 00:29:48.710
we called that a declarative element and
we'll talk about that in a second what

00:29:48.710 --> 00:29:48.720
we'll talk about that in a second what
 

00:29:48.720 --> 00:29:52.100
we'll talk about that in a second what
we mean by that so first of all it

00:29:52.100 --> 00:29:52.110
we mean by that so first of all it
 

00:29:52.110 --> 00:29:54.230
we mean by that so first of all it
constitutes certain conventions right if

00:29:54.230 --> 00:29:54.240
constitutes certain conventions right if
 

00:29:54.240 --> 00:29:55.640
constitutes certain conventions right if
you tell created it as an Android

00:29:55.640 --> 00:29:55.650
you tell created it as an Android
 

00:29:55.650 --> 00:29:58.820
you tell created it as an Android
applications we say if you if you then

00:29:58.820 --> 00:29:58.830
applications we say if you if you then
 

00:29:58.830 --> 00:30:02.030
applications we say if you if you then
put certain things in certain places

00:30:02.030 --> 00:30:02.040
put certain things in certain places
 

00:30:02.040 --> 00:30:04.040
put certain things in certain places
like you know like the source code enter

00:30:04.040 --> 00:30:04.050
like you know like the source code enter
 

00:30:04.050 --> 00:30:07.640
like you know like the source code enter
tests s defined by the conventions you

00:30:07.640 --> 00:30:07.650
tests s defined by the conventions you
 

00:30:07.650 --> 00:30:11.170
tests s defined by the conventions you
don't need to specify anything right and

00:30:11.170 --> 00:30:11.180
don't need to specify anything right and
 

00:30:11.180 --> 00:30:14.900
don't need to specify anything right and
just by those few lines of code and

00:30:14.900 --> 00:30:14.910
just by those few lines of code and
 

00:30:14.910 --> 00:30:17.510
just by those few lines of code and
sticking to the conventions cradle will

00:30:17.510 --> 00:30:17.520
sticking to the conventions cradle will
 

00:30:17.520 --> 00:30:19.820
sticking to the conventions cradle will
provide you all the tasks that are

00:30:19.820 --> 00:30:19.830
provide you all the tasks that are
 

00:30:19.830 --> 00:30:21.890
provide you all the tasks that are
necessary to deal with this application

00:30:21.890 --> 00:30:21.900
necessary to deal with this application
 

00:30:21.900 --> 00:30:24.140
necessary to deal with this application
so that's why we that's how what we

00:30:24.140 --> 00:30:24.150
so that's why we that's how what we
 

00:30:24.150 --> 00:30:25.970
so that's why we that's how what we
define as a declarative element in a

00:30:25.970 --> 00:30:25.980
define as a declarative element in a
 

00:30:25.980 --> 00:30:27.320
define as a declarative element in a
build script the declarative element in

00:30:27.320 --> 00:30:27.330
build script the declarative element in
 

00:30:27.330 --> 00:30:28.880
build script the declarative element in
a build script is something that

00:30:28.880 --> 00:30:28.890
a build script is something that
 

00:30:28.890 --> 00:30:30.770
a build script is something that
specifies to what this is an Android

00:30:30.770 --> 00:30:30.780
specifies to what this is an Android
 

00:30:30.780 --> 00:30:33.110
specifies to what this is an Android
application the how is automatically

00:30:33.110 --> 00:30:33.120
application the how is automatically
 

00:30:33.120 --> 00:30:35.150
application the how is automatically
figured out to you by for you by grader

00:30:35.150 --> 00:30:35.160
figured out to you by for you by grader
 

00:30:35.160 --> 00:30:38.690
figured out to you by for you by grader
right the X we call this the executional

00:30:38.690 --> 00:30:38.700
right the X we call this the executional
 

00:30:38.700 --> 00:30:42.740
right the X we call this the executional
units right that every build system has

00:30:42.740 --> 00:30:42.750
units right that every build system has
 

00:30:42.750 --> 00:30:44.180
units right that every build system has
right you don't need to specify them

00:30:44.180 --> 00:30:44.190
right you don't need to specify them
 

00:30:44.190 --> 00:30:45.830
right you don't need to specify them
directly in and and it's fully

00:30:45.830 --> 00:30:45.840
directly in and and it's fully
 

00:30:45.840 --> 00:30:48.170
directly in and and it's fully
imperative right you you you you as a

00:30:48.170 --> 00:30:48.180
imperative right you you you you as a
 

00:30:48.180 --> 00:30:50.960
imperative right you you you you as a
built ortho or built as someone that

00:30:50.960 --> 00:30:50.970
built ortho or built as someone that
 

00:30:50.970 --> 00:30:52.790
built ortho or built as someone that
specifies to build with and you have to

00:30:52.790 --> 00:30:52.800
specifies to build with and you have to
 

00:30:52.800 --> 00:30:54.560
specifies to build with and you have to
do all the specifications why are

00:30:54.560 --> 00:30:54.570
do all the specifications why are
 

00:30:54.570 --> 00:30:56.390
do all the specifications why are
directly why the executional units why

00:30:56.390 --> 00:30:56.400
directly why the executional units why
 

00:30:56.400 --> 00:30:58.700
directly why the executional units why
the targets right with Gradle you have

00:30:58.700 --> 00:30:58.710
the targets right with Gradle you have
 

00:30:58.710 --> 00:31:00.950
the targets right with Gradle you have
declarative elements and the executional

00:31:00.950 --> 00:31:00.960
declarative elements and the executional
 

00:31:00.960 --> 00:31:09.350
declarative elements and the executional
units are derived right so so the

00:31:09.350 --> 00:31:09.360
units are derived right so so the
 

00:31:09.360 --> 00:31:10.760
units are derived right so so the
interesting thing and this is where

00:31:10.760 --> 00:31:10.770
interesting thing and this is where
 

00:31:10.770 --> 00:31:12.830
interesting thing and this is where
cradle goes way beyond other declarative

00:31:12.830 --> 00:31:12.840
cradle goes way beyond other declarative
 

00:31:12.840 --> 00:31:15.020
cradle goes way beyond other declarative
built systems you have very fine current

00:31:15.020 --> 00:31:15.030
built systems you have very fine current
 

00:31:15.030 --> 00:31:17.010
built systems you have very fine current
declarative elements so

00:31:17.010 --> 00:31:17.020
declarative elements so
 

00:31:17.020 --> 00:31:19.020
declarative elements so
to build types and you can specify a

00:31:19.020 --> 00:31:19.030
to build types and you can specify a
 

00:31:19.030 --> 00:31:22.440
to build types and you can specify a
release type or we have two product

00:31:22.440 --> 00:31:22.450
release type or we have two product
 

00:31:22.450 --> 00:31:24.630
release type or we have two product
flavors where you can specify free and

00:31:24.630 --> 00:31:24.640
flavors where you can specify free and
 

00:31:24.640 --> 00:31:26.340
flavors where you can specify free and
paid product flavors and those are not

00:31:26.340 --> 00:31:26.350
paid product flavors and those are not
 

00:31:26.350 --> 00:31:29.040
paid product flavors and those are not
simple kind of this is not like simple

00:31:29.040 --> 00:31:29.050
simple kind of this is not like simple
 

00:31:29.050 --> 00:31:30.960
simple kind of this is not like simple
configuration actions what you're doing

00:31:30.960 --> 00:31:30.970
configuration actions what you're doing
 

00:31:30.970 --> 00:31:34.350
configuration actions what you're doing
here you really you really using new

00:31:34.350 --> 00:31:34.360
here you really you really using new
 

00:31:34.360 --> 00:31:36.270
here you really you really using new
declarative elements what do I mean with

00:31:36.270 --> 00:31:36.280
declarative elements what do I mean with
 

00:31:36.280 --> 00:31:38.490
declarative elements what do I mean with
that when you specify I have a free

00:31:38.490 --> 00:31:38.500
that when you specify I have a free
 

00:31:38.500 --> 00:31:40.680
that when you specify I have a free
product flavor you trigger a whole

00:31:40.680 --> 00:31:40.690
product flavor you trigger a whole
 

00:31:40.690 --> 00:31:43.560
product flavor you trigger a whole
little mini framework right use when you

00:31:43.560 --> 00:31:43.570
little mini framework right use when you
 

00:31:43.570 --> 00:31:45.540
little mini framework right use when you
say I have when you when you specify the

00:31:45.540 --> 00:31:45.550
say I have when you when you specify the
 

00:31:45.550 --> 00:31:48.419
say I have when you when you specify the
free flavor cradle will automatically

00:31:48.419 --> 00:31:48.429
free flavor cradle will automatically
 

00:31:48.429 --> 00:31:51.510
free flavor cradle will automatically
create a number of tasks right to deal

00:31:51.510 --> 00:31:51.520
create a number of tasks right to deal
 

00:31:51.520 --> 00:31:53.940
create a number of tasks right to deal
with this free flavor assemble in order

00:31:53.940 --> 00:31:53.950
with this free flavor assemble in order
 

00:31:53.950 --> 00:31:57.690
with this free flavor assemble in order
free apk or resource generation a test

00:31:57.690 --> 00:31:57.700
free apk or resource generation a test
 

00:31:57.700 --> 00:31:59.790
free apk or resource generation a test
task that only executed the tests for

00:31:59.790 --> 00:31:59.800
task that only executed the tests for
 

00:31:59.800 --> 00:32:02.340
task that only executed the tests for
this for the free flavor you have a

00:32:02.340 --> 00:32:02.350
this for the free flavor you have a
 

00:32:02.350 --> 00:32:04.169
this for the free flavor you have a
certain set of conventions in place if

00:32:04.169 --> 00:32:04.179
certain set of conventions in place if
 

00:32:04.179 --> 00:32:07.560
certain set of conventions in place if
you now put code in source free it will

00:32:07.560 --> 00:32:07.570
you now put code in source free it will
 

00:32:07.570 --> 00:32:09.000
you now put code in source free it will
be automatically picked up so this is a

00:32:09.000 --> 00:32:09.010
be automatically picked up so this is a
 

00:32:09.010 --> 00:32:11.220
be automatically picked up so this is a
very powerful element right so and after

00:32:11.220 --> 00:32:11.230
very powerful element right so and after
 

00:32:11.230 --> 00:32:14.240
very powerful element right so and after
adding at the fact that you have a free

00:32:14.240 --> 00:32:14.250
adding at the fact that you have a free
 

00:32:14.250 --> 00:32:18.180
adding at the fact that you have a free
free flavor right you can see all the

00:32:18.180 --> 00:32:18.190
free flavor right you can see all the
 

00:32:18.190 --> 00:32:20.190
free flavor right you can see all the
tasks that are automatically created as

00:32:20.190 --> 00:32:20.200
tasks that are automatically created as
 

00:32:20.200 --> 00:32:24.180
tasks that are automatically created as
part of that so so for us yeah

00:32:24.180 --> 00:32:24.190
part of that so so for us yeah
 

00:32:24.190 --> 00:32:26.669
part of that so so for us yeah
declarative elements are a very

00:32:26.669 --> 00:32:26.679
declarative elements are a very
 

00:32:26.679 --> 00:32:28.620
declarative elements are a very
important concept to create give you the

00:32:28.620 --> 00:32:28.630
important concept to create give you the
 

00:32:28.630 --> 00:32:30.630
important concept to create give you the
right structure between the right

00:32:30.630 --> 00:32:30.640
right structure between the right
 

00:32:30.640 --> 00:32:32.580
right structure between the right
mixture between flexibility and

00:32:32.580 --> 00:32:32.590
mixture between flexibility and
 

00:32:32.590 --> 00:32:34.140
mixture between flexibility and
structure high-level declarative

00:32:34.140 --> 00:32:34.150
structure high-level declarative
 

00:32:34.150 --> 00:32:36.120
structure high-level declarative
elements right that you can that you can

00:32:36.120 --> 00:32:36.130
elements right that you can that you can
 

00:32:36.130 --> 00:32:37.440
elements right that you can that you can
pick and choose to describe your

00:32:37.440 --> 00:32:37.450
pick and choose to describe your
 

00:32:37.450 --> 00:32:41.850
pick and choose to describe your
requirements and what is a key goal for

00:32:41.850 --> 00:32:41.860
requirements and what is a key goal for
 

00:32:41.860 --> 00:32:45.090
requirements and what is a key goal for
us that you can describe it with your

00:32:45.090 --> 00:32:45.100
us that you can describe it with your
 

00:32:45.100 --> 00:32:47.100
us that you can describe it with your
domain language we don't make you think

00:32:47.100 --> 00:32:47.110
domain language we don't make you think
 

00:32:47.110 --> 00:32:49.530
domain language we don't make you think
like a build system you can think like

00:32:49.530 --> 00:32:49.540
like a build system you can think like
 

00:32:49.540 --> 00:32:51.240
like a build system you can think like
an Android developer specifying what you

00:32:51.240 --> 00:32:51.250
an Android developer specifying what you
 

00:32:51.250 --> 00:32:52.620
an Android developer specifying what you
need and we translate it into build

00:32:52.620 --> 00:32:52.630
need and we translate it into build
 

00:32:52.630 --> 00:32:54.780
need and we translate it into build
system concepts if you need to do some

00:32:54.780 --> 00:32:54.790
system concepts if you need to do some
 

00:32:54.790 --> 00:32:56.549
system concepts if you need to do some
really deep customization yes you need

00:32:56.549 --> 00:32:56.559
really deep customization yes you need
 

00:32:56.559 --> 00:32:59.190
really deep customization yes you need
to understand the build system right but

00:32:59.190 --> 00:32:59.200
to understand the build system right but
 

00:32:59.200 --> 00:33:01.110
to understand the build system right but
not for your normal for your normal work

00:33:01.110 --> 00:33:01.120
not for your normal for your normal work
 

00:33:01.120 --> 00:33:07.230
not for your normal for your normal work
okay finally performance so let's talk

00:33:07.230 --> 00:33:07.240
okay finally performance so let's talk
 

00:33:07.240 --> 00:33:08.910
okay finally performance so let's talk
about the created core performance right

00:33:08.910 --> 00:33:08.920
about the created core performance right
 

00:33:08.920 --> 00:33:10.860
about the created core performance right
unrelated to end were just the cradle

00:33:10.860 --> 00:33:10.870
unrelated to end were just the cradle
 

00:33:10.870 --> 00:33:12.470
unrelated to end were just the cradle
performance as a built system right

00:33:12.470 --> 00:33:12.480
performance as a built system right
 

00:33:12.480 --> 00:33:20.070
performance as a built system right
cradle is a very fast boot so if you if

00:33:20.070 --> 00:33:20.080
cradle is a very fast boot so if you if
 

00:33:20.080 --> 00:33:22.950
cradle is a very fast boot so if you if
you look at Java and you execute let's

00:33:22.950 --> 00:33:22.960
you look at Java and you execute let's
 

00:33:22.960 --> 00:33:28.130
you look at Java and you execute let's
say a 25 sub module Java build

00:33:28.130 --> 00:33:28.140
say a 25 sub module Java build
 

00:33:28.140 --> 00:33:30.410
say a 25 sub module Java build
clean and and create me all the jars of

00:33:30.410 --> 00:33:30.420
clean and and create me all the jars of
 

00:33:30.420 --> 00:33:34.100
clean and and create me all the jars of
that right that's too fun and I think

00:33:34.100 --> 00:33:34.110
that right that's too fun and I think
 

00:33:34.110 --> 00:33:35.360
that right that's too fun and I think
with the latest graded versions will be

00:33:35.360 --> 00:33:35.370
with the latest graded versions will be
 

00:33:35.370 --> 00:33:37.310
with the latest graded versions will be
under two seconds right you can do it in

00:33:37.310 --> 00:33:37.320
under two seconds right you can do it in
 

00:33:37.320 --> 00:33:39.380
under two seconds right you can do it in
parallel so with the latest graded

00:33:39.380 --> 00:33:39.390
parallel so with the latest graded
 

00:33:39.390 --> 00:33:42.040
parallel so with the latest graded
versions it would be a one second and

00:33:42.040 --> 00:33:42.050
versions it would be a one second and
 

00:33:42.050 --> 00:33:46.550
versions it would be a one second and
and if you do incremental mode you know

00:33:46.550 --> 00:33:46.560
and if you do incremental mode you know
 

00:33:46.560 --> 00:33:48.160
and if you do incremental mode you know
what I mean so this is this is all

00:33:48.160 --> 00:33:48.170
what I mean so this is this is all
 

00:33:48.170 --> 00:33:51.170
what I mean so this is this is all
cradle has a and we continue always

00:33:51.170 --> 00:33:51.180
cradle has a and we continue always
 

00:33:51.180 --> 00:33:53.480
cradle has a and we continue always
continue to work on that right there's

00:33:53.480 --> 00:33:53.490
continue to work on that right there's
 

00:33:53.490 --> 00:33:57.860
continue to work on that right there's
now a two hundred sup to and a

00:33:57.860 --> 00:33:57.870
now a two hundred sup to and a
 

00:33:57.870 --> 00:33:59.750
now a two hundred sup to and a
sub-module build right and even that is

00:33:59.750 --> 00:33:59.760
sub-module build right and even that is
 

00:33:59.760 --> 00:34:03.140
sub-module build right and even that is
if you do a full clean build it's not

00:34:03.140 --> 00:34:03.150
if you do a full clean build it's not
 

00:34:03.150 --> 00:34:08.090
if you do a full clean build it's not
strictly slow right see that and again

00:34:08.090 --> 00:34:08.100
strictly slow right see that and again
 

00:34:08.100 --> 00:34:09.860
strictly slow right see that and again
we have improved that even since I since

00:34:09.860 --> 00:34:09.870
we have improved that even since I since
 

00:34:09.870 --> 00:34:12.350
we have improved that even since I since
I did two recordings right so seven

00:34:12.350 --> 00:34:12.360
I did two recordings right so seven
 

00:34:12.360 --> 00:34:13.760
I did two recordings right so seven
seconds for two hundred SAP module

00:34:13.760 --> 00:34:13.770
seconds for two hundred SAP module
 

00:34:13.770 --> 00:34:16.550
seconds for two hundred SAP module
builds with with with a lot of code is

00:34:16.550 --> 00:34:16.560
builds with with with a lot of code is
 

00:34:16.560 --> 00:34:22.790
builds with with with a lot of code is
fine right so so and we are working with

00:34:22.790 --> 00:34:22.800
fine right so so and we are working with
 

00:34:22.800 --> 00:34:24.500
fine right so so and we are working with
some very large software stacks right

00:34:24.500 --> 00:34:24.510
some very large software stacks right
 

00:34:24.510 --> 00:34:26.480
some very large software stacks right
and they have extraordinary performance

00:34:26.480 --> 00:34:26.490
and they have extraordinary performance
 

00:34:26.490 --> 00:34:28.909
and they have extraordinary performance
requirements and one on our goal is to

00:34:28.909 --> 00:34:28.919
requirements and one on our goal is to
 

00:34:28.919 --> 00:34:30.230
requirements and one on our goal is to
be the fastest build system in the world

00:34:30.230 --> 00:34:30.240
be the fastest build system in the world
 

00:34:30.240 --> 00:34:33.290
be the fastest build system in the world
right and especially for those large

00:34:33.290 --> 00:34:33.300
right and especially for those large
 

00:34:33.300 --> 00:34:37.040
right and especially for those large
teams to to bring them finally into the

00:34:37.040 --> 00:34:37.050
teams to to bring them finally into the
 

00:34:37.050 --> 00:34:38.870
teams to to bring them finally into the
agile and when you have to wait for one

00:34:38.870 --> 00:34:38.880
agile and when you have to wait for one
 

00:34:38.880 --> 00:34:40.820
agile and when you have to wait for one
hour until you build finishes you can't

00:34:40.820 --> 00:34:40.830
hour until you build finishes you can't
 

00:34:40.830 --> 00:34:43.220
hour until you build finishes you can't
do agile development right and and the

00:34:43.220 --> 00:34:43.230
do agile development right and and the
 

00:34:43.230 --> 00:34:44.870
do agile development right and and the
LinkedIn build time got down when we're

00:34:44.870 --> 00:34:44.880
LinkedIn build time got down when we're
 

00:34:44.880 --> 00:34:46.520
LinkedIn build time got down when we're
creating from an to cradle from five

00:34:46.520 --> 00:34:46.530
creating from an to cradle from five
 

00:34:46.530 --> 00:34:48.890
creating from an to cradle from five
hours to 30 to 40 minutes right it's

00:34:48.890 --> 00:34:48.900
hours to 30 to 40 minutes right it's
 

00:34:48.900 --> 00:34:50.300
hours to 30 to 40 minutes right it's
still too long we want to get it down

00:34:50.300 --> 00:34:50.310
still too long we want to get it down
 

00:34:50.310 --> 00:34:52.070
still too long we want to get it down
under a minute we want to get there with

00:34:52.070 --> 00:34:52.080
under a minute we want to get there with
 

00:34:52.080 --> 00:34:54.340
under a minute we want to get there with
distributive bills and stuff like that

00:34:54.340 --> 00:34:54.350
distributive bills and stuff like that
 

00:34:54.350 --> 00:34:57.350
distributive bills and stuff like that
there's a lot of stuff we want to do we

00:34:57.350 --> 00:34:57.360
there's a lot of stuff we want to do we
 

00:34:57.360 --> 00:34:58.940
there's a lot of stuff we want to do we
want to be insanely fast even for very

00:34:58.940 --> 00:34:58.950
want to be insanely fast even for very
 

00:34:58.950 --> 00:35:01.490
want to be insanely fast even for very
large projects so but the key message

00:35:01.490 --> 00:35:01.500
large projects so but the key message
 

00:35:01.500 --> 00:35:04.220
large projects so but the key message
here is huh but even if we had all those

00:35:04.220 --> 00:35:04.230
here is huh but even if we had all those
 

00:35:04.230 --> 00:35:07.610
here is huh but even if we had all those
capabilities already in Gradle that

00:35:07.610 --> 00:35:07.620
capabilities already in Gradle that
 

00:35:07.620 --> 00:35:10.340
capabilities already in Gradle that
wouldn't remove the major bottlenecks

00:35:10.340 --> 00:35:10.350
wouldn't remove the major bottlenecks
 

00:35:10.350 --> 00:35:11.900
wouldn't remove the major bottlenecks
with Android build performance that you

00:35:11.900 --> 00:35:11.910
with Android build performance that you
 

00:35:11.910 --> 00:35:14.660
with Android build performance that you
are facing nowadays right so let's look

00:35:14.660 --> 00:35:14.670
are facing nowadays right so let's look
 

00:35:14.670 --> 00:35:21.320
are facing nowadays right so let's look
at the Android tool chain oh so you have

00:35:21.320 --> 00:35:21.330
at the Android tool chain oh so you have
 

00:35:21.330 --> 00:35:24.620
at the Android tool chain oh so you have
Android it's good to be aware of those

00:35:24.620 --> 00:35:24.630
Android it's good to be aware of those
 

00:35:24.630 --> 00:35:27.320
Android it's good to be aware of those
layouts right you have to create a Java

00:35:27.320 --> 00:35:27.330
layouts right you have to create a Java
 

00:35:27.330 --> 00:35:28.670
layouts right you have to create a Java
performance it's very different from the

00:35:28.670 --> 00:35:28.680
performance it's very different from the
 

00:35:28.680 --> 00:35:31.730
performance it's very different from the
Gradle android performance one reason is

00:35:31.730 --> 00:35:31.740
Gradle android performance one reason is
 

00:35:31.740 --> 00:35:33.770
Gradle android performance one reason is
that the Java compiler is very fast

00:35:33.770 --> 00:35:33.780
that the Java compiler is very fast
 

00:35:33.780 --> 00:35:35.480
that the Java compiler is very fast
whereas the Dex thing is not quite as

00:35:35.480 --> 00:35:35.490
whereas the Dex thing is not quite as
 

00:35:35.490 --> 00:35:37.970
whereas the Dex thing is not quite as
fast if the Java compiler were ten times

00:35:37.970 --> 00:35:37.980
fast if the Java compiler were ten times
 

00:35:37.980 --> 00:35:39.920
fast if the Java compiler were ten times
faster and the Gradle builds were ten

00:35:39.920 --> 00:35:39.930
faster and the Gradle builds were ten
 

00:35:39.930 --> 00:35:41.420
faster and the Gradle builds were ten
times faster and Java

00:35:41.420 --> 00:35:41.430
times faster and Java
 

00:35:41.430 --> 00:35:43.460
times faster and Java
we couldn't you could you shouldn't

00:35:43.460 --> 00:35:43.470
we couldn't you could you shouldn't
 

00:35:43.470 --> 00:35:46.010
we couldn't you could you shouldn't
press us you should press the Oracle

00:35:46.010 --> 00:35:46.020
press us you should press the Oracle
 

00:35:46.020 --> 00:35:48.620
press us you should press the Oracle
Java sitting right so we integrate with

00:35:48.620 --> 00:35:48.630
Java sitting right so we integrate with
 

00:35:48.630 --> 00:35:50.150
Java sitting right so we integrate with
a with low-level toolchains

00:35:50.150 --> 00:35:50.160
a with low-level toolchains
 

00:35:50.160 --> 00:35:52.790
a with low-level toolchains
s it's also the case with Android right

00:35:52.790 --> 00:35:52.800
s it's also the case with Android right
 

00:35:52.800 --> 00:35:56.030
s it's also the case with Android right
so so if you have bottlenecks in Android

00:35:56.030 --> 00:35:56.040
so so if you have bottlenecks in Android
 

00:35:56.040 --> 00:35:58.670
so so if you have bottlenecks in Android
tooling it's nothing has nothing we

00:35:58.670 --> 00:35:58.680
tooling it's nothing has nothing we
 

00:35:58.680 --> 00:36:00.500
tooling it's nothing has nothing we
don't maintain those tools we can just

00:36:00.500 --> 00:36:00.510
don't maintain those tools we can just
 

00:36:00.510 --> 00:36:02.570
don't maintain those tools we can just
use them right at the end of the day I

00:36:02.570 --> 00:36:02.580
use them right at the end of the day I
 

00:36:02.580 --> 00:36:04.310
use them right at the end of the day I
understand that you want fast builds and

00:36:04.310 --> 00:36:04.320
understand that you want fast builds and
 

00:36:04.320 --> 00:36:06.830
understand that you want fast builds and
that's what we will achieve more and

00:36:06.830 --> 00:36:06.840
that's what we will achieve more and
 

00:36:06.840 --> 00:36:08.510
that's what we will achieve more and
more but it's still important to

00:36:08.510 --> 00:36:08.520
more but it's still important to
 

00:36:08.520 --> 00:36:17.330
more but it's still important to
understand down right so and so you have

00:36:17.330 --> 00:36:17.340
understand down right so and so you have
 

00:36:17.340 --> 00:36:18.740
understand down right so and so you have
to enter our tooling right maintained by

00:36:18.740 --> 00:36:18.750
to enter our tooling right maintained by
 

00:36:18.750 --> 00:36:19.760
to enter our tooling right maintained by
the Android platform team you have to

00:36:19.760 --> 00:36:19.770
the Android platform team you have to
 

00:36:19.770 --> 00:36:21.830
the Android platform team you have to
create a platform and tank by us you

00:36:21.830 --> 00:36:21.840
create a platform and tank by us you
 

00:36:21.840 --> 00:36:22.790
create a platform and tank by us you
have to Gradle android plug-in

00:36:22.790 --> 00:36:22.800
have to Gradle android plug-in
 

00:36:22.800 --> 00:36:24.590
have to Gradle android plug-in
maintained by the Android tooling team

00:36:24.590 --> 00:36:24.600
maintained by the Android tooling team
 

00:36:24.600 --> 00:36:26.900
maintained by the Android tooling team
and you have android studio ide also

00:36:26.900 --> 00:36:26.910
and you have android studio ide also
 

00:36:26.910 --> 00:36:28.100
and you have android studio ide also
maintained by the Android tooling team

00:36:28.100 --> 00:36:28.110
maintained by the Android tooling team
 

00:36:28.110 --> 00:36:30.740
maintained by the Android tooling team
right Android studio is usually never

00:36:30.740 --> 00:36:30.750
right Android studio is usually never
 

00:36:30.750 --> 00:36:32.060
right Android studio is usually never
the source for any bottlenecks right

00:36:32.060 --> 00:36:32.070
the source for any bottlenecks right
 

00:36:32.070 --> 00:36:34.880
the source for any bottlenecks right
it's the three the three layers below

00:36:34.880 --> 00:36:34.890
it's the three the three layers below
 

00:36:34.890 --> 00:36:38.180
it's the three the three layers below
Android studio that have been improved a

00:36:38.180 --> 00:36:38.190
Android studio that have been improved a
 

00:36:38.190 --> 00:36:40.220
Android studio that have been improved a
lot but we will continue to improve that

00:36:40.220 --> 00:36:40.230
lot but we will continue to improve that
 

00:36:40.230 --> 00:36:42.200
lot but we will continue to improve that
that that you will have a very fast

00:36:42.200 --> 00:36:42.210
that that you will have a very fast
 

00:36:42.210 --> 00:36:44.390
that that you will have a very fast
experience but still it's interesting to

00:36:44.390 --> 00:36:44.400
experience but still it's interesting to
 

00:36:44.400 --> 00:36:45.800
experience but still it's interesting to
understand that there are different

00:36:45.800 --> 00:36:45.810
understand that there are different
 

00:36:45.810 --> 00:36:55.430
understand that there are different
layers right and so and all those teams

00:36:55.430 --> 00:36:55.440
layers right and so and all those teams
 

00:36:55.440 --> 00:36:57.290
layers right and so and all those teams
they are working closely together right

00:36:57.290 --> 00:36:57.300
they are working closely together right
 

00:36:57.300 --> 00:36:59.180
they are working closely together right
to achieve that goal right and they're

00:36:59.180 --> 00:36:59.190
to achieve that goal right and they're
 

00:36:59.190 --> 00:37:01.370
to achieve that goal right and they're
all doing a great job and just that you

00:37:01.370 --> 00:37:01.380
all doing a great job and just that you
 

00:37:01.380 --> 00:37:03.260
all doing a great job and just that you
can't solve everything at the same time

00:37:03.260 --> 00:37:03.270
can't solve everything at the same time
 

00:37:03.270 --> 00:37:05.480
can't solve everything at the same time
it was a lot of work to introduce the

00:37:05.480 --> 00:37:05.490
it was a lot of work to introduce the
 

00:37:05.490 --> 00:37:07.280
it was a lot of work to introduce the
new system right it's it's a massive

00:37:07.280 --> 00:37:07.290
new system right it's it's a massive
 

00:37:07.290 --> 00:37:11.960
new system right it's it's a massive
including a new IDE so so certain

00:37:11.960 --> 00:37:11.970
including a new IDE so so certain
 

00:37:11.970 --> 00:37:14.210
including a new IDE so so certain
optimizations will follow up later and

00:37:14.210 --> 00:37:14.220
optimizations will follow up later and
 

00:37:14.220 --> 00:37:18.730
optimizations will follow up later and
they're now always work in progress so

00:37:18.730 --> 00:37:18.740
they're now always work in progress so
 

00:37:18.740 --> 00:37:21.650
they're now always work in progress so
so let's talk about the cradle and and

00:37:21.650 --> 00:37:21.660
so let's talk about the cradle and and
 

00:37:21.660 --> 00:37:24.910
so let's talk about the cradle and and
by the way this was just the tweet today

00:37:24.910 --> 00:37:24.920
by the way this was just the tweet today
 

00:37:24.920 --> 00:37:27.170
by the way this was just the tweet today
from Gradle 2 for 2 to 8 incremental

00:37:27.170 --> 00:37:27.180
from Gradle 2 for 2 to 8 incremental
 

00:37:27.180 --> 00:37:28.970
from Gradle 2 for 2 to 8 incremental
builds went down from 10 seconds to 5

00:37:28.970 --> 00:37:28.980
builds went down from 10 seconds to 5
 

00:37:28.980 --> 00:37:30.860
builds went down from 10 seconds to 5
seconds on one project and 20 seconds to

00:37:30.860 --> 00:37:30.870
seconds on one project and 20 seconds to
 

00:37:30.870 --> 00:37:34.070
seconds on one project and 20 seconds to
11 seconds on another so always remember

00:37:34.070 --> 00:37:34.080
11 seconds on another so always remember
 

00:37:34.080 --> 00:37:36.470
11 seconds on another so always remember
to up to upgrade to the latest rated

00:37:36.470 --> 00:37:36.480
to up to upgrade to the latest rated
 

00:37:36.480 --> 00:37:38.150
to up to upgrade to the latest rated
versions we did a lot of improvements at

00:37:38.150 --> 00:37:38.160
versions we did a lot of improvements at
 

00:37:38.160 --> 00:37:39.650
versions we did a lot of improvements at
the moment coming with every release and

00:37:39.650 --> 00:37:39.660
the moment coming with every release and
 

00:37:39.660 --> 00:37:42.320
the moment coming with every release and
we release every 4 to 6 weeks right and

00:37:42.320 --> 00:37:42.330
we release every 4 to 6 weeks right and
 

00:37:42.330 --> 00:37:44.060
we release every 4 to 6 weeks right and
use the greater daemon if you're

00:37:44.060 --> 00:37:44.070
use the greater daemon if you're
 

00:37:44.070 --> 00:37:48.670
use the greater daemon if you're
building from the command line otherwise

00:37:48.670 --> 00:37:48.680
 

00:37:48.680 --> 00:37:58.799
so um

00:37:58.799 --> 00:37:58.809
 

00:37:58.809 --> 00:38:02.679
about that so let's look at some numbers

00:38:02.679 --> 00:38:02.689
about that so let's look at some numbers
 

00:38:02.689 --> 00:38:04.630
about that so let's look at some numbers
what how things have been proved right

00:38:04.630 --> 00:38:04.640
what how things have been proved right
 

00:38:04.640 --> 00:38:09.549
what how things have been proved right
so let's ignore one two two one

00:38:09.549 --> 00:38:09.559
so let's ignore one two two one
 

00:38:09.559 --> 00:38:11.769
so let's ignore one two two one
so you see the big improvements we had

00:38:11.769 --> 00:38:11.779
so you see the big improvements we had
 

00:38:11.779 --> 00:38:14.199
so you see the big improvements we had
for ten let's say a ten Android pretty

00:38:14.199 --> 00:38:14.209
for ten let's say a ten Android pretty
 

00:38:14.209 --> 00:38:16.449
for ten let's say a ten Android pretty
big Android build ten sub-project 10

00:38:16.449 --> 00:38:16.459
big Android build ten sub-project 10
 

00:38:16.459 --> 00:38:20.199
big Android build ten sub-project 10
variants per sub projects right we got

00:38:20.199 --> 00:38:20.209
variants per sub projects right we got
 

00:38:20.209 --> 00:38:21.670
variants per sub projects right we got
to build time down significantly

00:38:21.670 --> 00:38:21.680
to build time down significantly
 

00:38:21.680 --> 00:38:24.400
to build time down significantly
right this is now pretty extreme one

00:38:24.400 --> 00:38:24.410
right this is now pretty extreme one
 

00:38:24.410 --> 00:38:26.229
right this is now pretty extreme one
Android project with 400 variants but

00:38:26.229 --> 00:38:26.239
Android project with 400 variants but
 

00:38:26.239 --> 00:38:28.390
Android project with 400 variants but
you can see its array yeah so if you're

00:38:28.390 --> 00:38:28.400
you can see its array yeah so if you're
 

00:38:28.400 --> 00:38:30.370
you can see its array yeah so if you're
not on created to four right that is the

00:38:30.370 --> 00:38:30.380
not on created to four right that is the
 

00:38:30.380 --> 00:38:32.309
not on created to four right that is the
minimum you should be at because that

00:38:32.309 --> 00:38:32.319
minimum you should be at because that
 

00:38:32.319 --> 00:38:34.509
minimum you should be at because that
dramatic performance improvements right

00:38:34.509 --> 00:38:34.519
dramatic performance improvements right
 

00:38:34.519 --> 00:38:37.390
dramatic performance improvements right
so let's talk about the existing

00:38:37.390 --> 00:38:37.400
so let's talk about the existing
 

00:38:37.400 --> 00:38:41.049
so let's talk about the existing
bottlenecks right so what I use as my

00:38:41.049 --> 00:38:41.059
bottlenecks right so what I use as my
 

00:38:41.059 --> 00:38:44.319
bottlenecks right so what I use as my
guinea pig is the i/o editor at Google

00:38:44.319 --> 00:38:44.329
guinea pig is the i/o editor at Google
 

00:38:44.329 --> 00:38:47.920
guinea pig is the i/o editor at Google
i/o Android app from 2014 it's on github

00:38:47.920 --> 00:38:47.930
i/o Android app from 2014 it's on github
 

00:38:47.930 --> 00:38:49.870
i/o Android app from 2014 it's on github
it's open source so it's a nice it's a

00:38:49.870 --> 00:38:49.880
it's open source so it's a nice it's a
 

00:38:49.880 --> 00:38:52.089
it's open source so it's a nice it's a
nice it's a nice guinea pig it it's

00:38:52.089 --> 00:38:52.099
nice it's a nice guinea pig it it's
 

00:38:52.099 --> 00:38:53.829
nice it's a nice guinea pig it it's
pretty representative it has a bunch of

00:38:53.829 --> 00:38:53.839
pretty representative it has a bunch of
 

00:38:53.839 --> 00:38:57.880
pretty representative it has a bunch of
source libraries it's using and so so

00:38:57.880 --> 00:38:57.890
source libraries it's using and so so
 

00:38:57.890 --> 00:38:59.679
source libraries it's using and so so
when you look where the time is going if

00:38:59.679 --> 00:38:59.689
when you look where the time is going if
 

00:38:59.689 --> 00:39:01.239
when you look where the time is going if
you do a clean install right that it

00:39:01.239 --> 00:39:01.249
you do a clean install right that it
 

00:39:01.249 --> 00:39:03.759
you do a clean install right that it
that what at the end of the day what

00:39:03.759 --> 00:39:03.769
that what at the end of the day what
 

00:39:03.769 --> 00:39:05.140
that what at the end of the day what
you're interested in is the developer

00:39:05.140 --> 00:39:05.150
you're interested in is the developer
 

00:39:05.150 --> 00:39:07.809
you're interested in is the developer
you you do some changes and then you

00:39:07.809 --> 00:39:07.819
you you do some changes and then you
 

00:39:07.819 --> 00:39:10.089
you you do some changes and then you
want to see the changes either you want

00:39:10.089 --> 00:39:10.099
want to see the changes either you want
 

00:39:10.099 --> 00:39:12.160
want to see the changes either you want
to run your instrumented test which

00:39:12.160 --> 00:39:12.170
to run your instrumented test which
 

00:39:12.170 --> 00:39:15.459
to run your instrumented test which
require an install or you want to work

00:39:15.459 --> 00:39:15.469
require an install or you want to work
 

00:39:15.469 --> 00:39:17.559
require an install or you want to work
with the with the deployed application

00:39:17.559 --> 00:39:17.569
with the with the deployed application
 

00:39:17.569 --> 00:39:23.769
with the with the deployed application
on your virtual device right so you see

00:39:23.769 --> 00:39:23.779
on your virtual device right so you see
 

00:39:23.779 --> 00:39:29.140
on your virtual device right so you see
the big the big bottlenecks are texting

00:39:29.140 --> 00:39:29.150
the big the big bottlenecks are texting
 

00:39:29.150 --> 00:39:29.919
the big the big bottlenecks are texting
and pre-dexing

00:39:29.919 --> 00:39:29.929
and pre-dexing
 

00:39:29.929 --> 00:39:33.189
and pre-dexing
and installation right that is where I

00:39:33.189 --> 00:39:33.199
and installation right that is where I
 

00:39:33.199 --> 00:39:35.169
and installation right that is where I
don't know 90% of the of the time is

00:39:35.169 --> 00:39:35.179
don't know 90% of the of the time is
 

00:39:35.179 --> 00:39:36.429
don't know 90% of the of the time is
going right when you do a clean install

00:39:36.429 --> 00:39:36.439
going right when you do a clean install
 

00:39:36.439 --> 00:39:38.709
going right when you do a clean install
when you when you move everything and

00:39:38.709 --> 00:39:38.719
when you when you move everything and
 

00:39:38.719 --> 00:39:43.569
when you when you move everything and
you build again so the I want to talk a

00:39:43.569 --> 00:39:43.579
you build again so the I want to talk a
 

00:39:43.579 --> 00:39:45.819
you build again so the I want to talk a
little bit about the pre-dexing so the

00:39:45.819 --> 00:39:45.829
little bit about the pre-dexing so the
 

00:39:45.829 --> 00:39:47.679
little bit about the pre-dexing so the
libraries your android project depends

00:39:47.679 --> 00:39:47.689
libraries your android project depends
 

00:39:47.689 --> 00:39:49.870
libraries your android project depends
on also need to be dext right not just

00:39:49.870 --> 00:39:49.880
on also need to be dext right not just
 

00:39:49.880 --> 00:39:51.849
on also need to be dext right not just
your compiled source code and this is

00:39:51.849 --> 00:39:51.859
your compiled source code and this is
 

00:39:51.859 --> 00:39:55.870
your compiled source code and this is
done during the pre deck step and the

00:39:55.870 --> 00:39:55.880
done during the pre deck step and the
 

00:39:55.880 --> 00:39:58.959
done during the pre deck step and the
google android plug-in caches the Dex

00:39:58.959 --> 00:39:58.969
google android plug-in caches the Dex
 

00:39:58.969 --> 00:40:00.579
google android plug-in caches the Dex
libraries so that the next time you run

00:40:00.579 --> 00:40:00.589
libraries so that the next time you run
 

00:40:00.589 --> 00:40:02.039
libraries so that the next time you run
the build texting will be much faster

00:40:02.039 --> 00:40:02.049
the build texting will be much faster
 

00:40:02.049 --> 00:40:05.650
the build texting will be much faster
right but if you do a clean build this

00:40:05.650 --> 00:40:05.660
right but if you do a clean build this
 

00:40:05.660 --> 00:40:08.140
right but if you do a clean build this
cash is always deleted and all the

00:40:08.140 --> 00:40:08.150
cash is always deleted and all the
 

00:40:08.150 --> 00:40:10.209
cash is always deleted and all the
libraries you depend on needs to be pre

00:40:10.209 --> 00:40:10.219
libraries you depend on needs to be pre
 

00:40:10.219 --> 00:40:11.290
libraries you depend on needs to be pre
dext again

00:40:11.290 --> 00:40:11.300
dext again
 

00:40:11.300 --> 00:40:13.260
dext again
and that's if you look at this

00:40:13.260 --> 00:40:13.270
and that's if you look at this
 

00:40:13.270 --> 00:40:15.880
and that's if you look at this
pre-dexing this takes the longest time

00:40:15.880 --> 00:40:15.890
pre-dexing this takes the longest time
 

00:40:15.890 --> 00:40:19.690
pre-dexing this takes the longest time
right so clean builds are heavily

00:40:19.690 --> 00:40:19.700
right so clean builds are heavily
 

00:40:19.700 --> 00:40:21.580
right so clean builds are heavily
penalized if you like right or first

00:40:21.580 --> 00:40:21.590
penalized if you like right or first
 

00:40:21.590 --> 00:40:23.680
penalized if you like right or first
built because pre-dexing all the

00:40:23.680 --> 00:40:23.690
built because pre-dexing all the
 

00:40:23.690 --> 00:40:25.270
built because pre-dexing all the
libraries you're using takes such a long

00:40:25.270 --> 00:40:25.280
libraries you're using takes such a long
 

00:40:25.280 --> 00:40:32.740
libraries you're using takes such a long
time right and so we have some what what

00:40:32.740 --> 00:40:32.750
time right and so we have some what what
 

00:40:32.750 --> 00:40:35.260
time right and so we have some what what
we want to do right in over the next

00:40:35.260 --> 00:40:35.270
we want to do right in over the next
 

00:40:35.270 --> 00:40:38.140
we want to do right in over the next
three to six month right is a couple of

00:40:38.140 --> 00:40:38.150
three to six month right is a couple of
 

00:40:38.150 --> 00:40:40.330
three to six month right is a couple of
things right so first of all the

00:40:40.330 --> 00:40:40.340
things right so first of all the
 

00:40:40.340 --> 00:40:41.980
things right so first of all the
pre-dexing of your libraries is not

00:40:41.980 --> 00:40:41.990
pre-dexing of your libraries is not
 

00:40:41.990 --> 00:40:43.870
pre-dexing of your libraries is not
happening in parallel right so when you

00:40:43.870 --> 00:40:43.880
happening in parallel right so when you
 

00:40:43.880 --> 00:40:45.820
happening in parallel right so when you
have 50 libraries one is text after the

00:40:45.820 --> 00:40:45.830
have 50 libraries one is text after the
 

00:40:45.830 --> 00:40:50.860
have 50 libraries one is text after the
other the other thing that is something

00:40:50.860 --> 00:40:50.870
other the other thing that is something
 

00:40:50.870 --> 00:40:52.990
other the other thing that is something
we want to improve we want to put your

00:40:52.990 --> 00:40:53.000
we want to improve we want to put your
 

00:40:53.000 --> 00:40:55.330
we want to improve we want to put your
pre dex libraries into a cache that

00:40:55.330 --> 00:40:55.340
pre dex libraries into a cache that
 

00:40:55.340 --> 00:40:57.730
pre dex libraries into a cache that
survives it clean it sometimes you need

00:40:57.730 --> 00:40:57.740
survives it clean it sometimes you need
 

00:40:57.740 --> 00:40:59.620
survives it clean it sometimes you need
to do a clean and then when you always

00:40:59.620 --> 00:40:59.630
to do a clean and then when you always
 

00:40:59.630 --> 00:41:01.060
to do a clean and then when you always
have to have to pre-dexing it's a pain

00:41:01.060 --> 00:41:01.070
have to have to pre-dexing it's a pain
 

00:41:01.070 --> 00:41:03.340
have to have to pre-dexing it's a pain
in the neck right so so we want to

00:41:03.340 --> 00:41:03.350
in the neck right so so we want to
 

00:41:03.350 --> 00:41:05.680
in the neck right so so we want to
basically put the pretext libraries into

00:41:05.680 --> 00:41:05.690
basically put the pretext libraries into
 

00:41:05.690 --> 00:41:07.480
basically put the pretext libraries into
our library cache that that will survive

00:41:07.480 --> 00:41:07.490
our library cache that that will survive
 

00:41:07.490 --> 00:41:10.330
our library cache that that will survive
a clean alright so this kind of look at

00:41:10.330 --> 00:41:10.340
a clean alright so this kind of look at
 

00:41:10.340 --> 00:41:12.010
a clean alright so this kind of look at
a cache that is that it's much more

00:41:12.010 --> 00:41:12.020
a cache that is that it's much more
 

00:41:12.020 --> 00:41:14.320
a cache that is that it's much more
long-lived we want to use for those

00:41:14.320 --> 00:41:14.330
long-lived we want to use for those
 

00:41:14.330 --> 00:41:16.480
long-lived we want to use for those
pretext libraries of course we have to

00:41:16.480 --> 00:41:16.490
pretext libraries of course we have to
 

00:41:16.490 --> 00:41:19.630
pretext libraries of course we have to
store the version of the texting tool

00:41:19.630 --> 00:41:19.640
store the version of the texting tool
 

00:41:19.640 --> 00:41:21.400
store the version of the texting tool
chain so that if you upgrade to a new

00:41:21.400 --> 00:41:21.410
chain so that if you upgrade to a new
 

00:41:21.410 --> 00:41:23.830
chain so that if you upgrade to a new
Dex version we don't want to use this

00:41:23.830 --> 00:41:23.840
Dex version we don't want to use this
 

00:41:23.840 --> 00:41:25.890
Dex version we don't want to use this
cached version so we need to have a

00:41:25.890 --> 00:41:25.900
cached version so we need to have a
 

00:41:25.900 --> 00:41:28.690
cached version so we need to have a
reliably reliability in there but that

00:41:28.690 --> 00:41:28.700
reliably reliability in there but that
 

00:41:28.700 --> 00:41:30.880
reliably reliability in there but that
is something we will work on so so that

00:41:30.880 --> 00:41:30.890
is something we will work on so so that
 

00:41:30.890 --> 00:41:32.020
is something we will work on so so that
means the pre-dexing

00:41:32.020 --> 00:41:32.030
means the pre-dexing
 

00:41:32.030 --> 00:41:34.420
means the pre-dexing
when it will be will become faster

00:41:34.420 --> 00:41:34.430
when it will be will become faster
 

00:41:34.430 --> 00:41:36.190
when it will be will become faster
because we're paralyzed it and it will

00:41:36.190 --> 00:41:36.200
because we're paralyzed it and it will
 

00:41:36.200 --> 00:41:37.630
because we're paralyzed it and it will
survive a clean so you will have to do

00:41:37.630 --> 00:41:37.640
survive a clean so you will have to do
 

00:41:37.640 --> 00:41:40.060
survive a clean so you will have to do
it not much less often so pre-dexing

00:41:40.060 --> 00:41:40.070
it not much less often so pre-dexing
 

00:41:40.070 --> 00:41:41.650
it not much less often so pre-dexing
that is that is how how does it's going

00:41:41.650 --> 00:41:41.660
that is that is how how does it's going
 

00:41:41.660 --> 00:41:52.480
that is that is how how does it's going
to be trust so and what we also are

00:41:52.480 --> 00:41:52.490
to be trust so and what we also are
 

00:41:52.490 --> 00:41:55.090
to be trust so and what we also are
going to start working on next year is a

00:41:55.090 --> 00:41:55.100
going to start working on next year is a
 

00:41:55.100 --> 00:41:59.020
going to start working on next year is a
distributed cache this means I talked

00:41:59.020 --> 00:41:59.030
distributed cache this means I talked
 

00:41:59.030 --> 00:42:01.500
distributed cache this means I talked
about that we put the pretext libraries

00:42:01.500 --> 00:42:01.510
about that we put the pretext libraries
 

00:42:01.510 --> 00:42:03.760
about that we put the pretext libraries
into a cache on your local machine that

00:42:03.760 --> 00:42:03.770
into a cache on your local machine that
 

00:42:03.770 --> 00:42:05.830
into a cache on your local machine that
it survives to clean the next step is to

00:42:05.830 --> 00:42:05.840
it survives to clean the next step is to
 

00:42:05.840 --> 00:42:07.660
it survives to clean the next step is to
put it in the cache that can be shared

00:42:07.660 --> 00:42:07.670
put it in the cache that can be shared
 

00:42:07.670 --> 00:42:09.520
put it in the cache that can be shared
with all your developers so if one

00:42:09.520 --> 00:42:09.530
with all your developers so if one
 

00:42:09.530 --> 00:42:11.560
with all your developers so if one
developer has already protects the

00:42:11.560 --> 00:42:11.570
developer has already protects the
 

00:42:11.570 --> 00:42:14.650
developer has already protects the
library dam together don't do it again

00:42:14.650 --> 00:42:14.660
library dam together don't do it again
 

00:42:14.660 --> 00:42:16.240
library dam together don't do it again
or if you see I build has already done

00:42:16.240 --> 00:42:16.250
or if you see I build has already done
 

00:42:16.250 --> 00:42:18.940
or if you see I build has already done
that get it right all those sources will

00:42:18.940 --> 00:42:18.950
that get it right all those sources will
 

00:42:18.950 --> 00:42:20.470
that get it right all those sources will
feed the distributed cache right with

00:42:20.470 --> 00:42:20.480
feed the distributed cache right with
 

00:42:20.480 --> 00:42:23.530
feed the distributed cache right with
with build output right and then other

00:42:23.530 --> 00:42:23.540
with build output right and then other
 

00:42:23.540 --> 00:42:25.510
with build output right and then other
members of the team don't need to read

00:42:25.510 --> 00:42:25.520
members of the team don't need to read
 

00:42:25.520 --> 00:42:28.510
members of the team don't need to read
which means if you if you are not just

00:42:28.510 --> 00:42:28.520
which means if you if you are not just
 

00:42:28.520 --> 00:42:30.190
which means if you if you are not just
the one people team right if you have 10

00:42:30.190 --> 00:42:30.200
the one people team right if you have 10
 

00:42:30.200 --> 00:42:32.560
the one people team right if you have 10
50 people or let's say even 10 people

00:42:32.560 --> 00:42:32.570
50 people or let's say even 10 people
 

00:42:32.570 --> 00:42:33.880
50 people or let's say even 10 people
and a CI server

00:42:33.880 --> 00:42:33.890
and a CI server
 

00:42:33.890 --> 00:42:36.460
and a CI server
it means you will hardly ever have to

00:42:36.460 --> 00:42:36.470
it means you will hardly ever have to
 

00:42:36.470 --> 00:42:38.530
it means you will hardly ever have to
wait for pre-dexing once this is

00:42:38.530 --> 00:42:38.540
wait for pre-dexing once this is
 

00:42:38.540 --> 00:42:44.859
wait for pre-dexing once this is
implemented right so caching pre Dex

00:42:44.859 --> 00:42:44.869
implemented right so caching pre Dex
 

00:42:44.869 --> 00:42:47.349
implemented right so caching pre Dex
libraries across clean bills and

00:42:47.349 --> 00:42:47.359
libraries across clean bills and
 

00:42:47.359 --> 00:42:50.170
libraries across clean bills and
paralyzing pre-dexing will cut the

00:42:50.170 --> 00:42:50.180
paralyzing pre-dexing will cut the
 

00:42:50.180 --> 00:42:51.280
paralyzing pre-dexing will cut the
amount developers need to wait for

00:42:51.280 --> 00:42:51.290
amount developers need to wait for
 

00:42:51.290 --> 00:42:52.270
amount developers need to wait for
protection by an order of magnitude

00:42:52.270 --> 00:42:52.280
protection by an order of magnitude
 

00:42:52.280 --> 00:42:55.270
protection by an order of magnitude
right and so that that's that's good

00:42:55.270 --> 00:42:55.280
right and so that that's that's good
 

00:42:55.280 --> 00:42:58.390
right and so that that's that's good
news those are the things we want to do

00:42:58.390 --> 00:42:58.400
news those are the things we want to do
 

00:42:58.400 --> 00:43:01.450
news those are the things we want to do
so this is now the most common cycle you

00:43:01.450 --> 00:43:01.460
so this is now the most common cycle you
 

00:43:01.460 --> 00:43:03.099
so this is now the most common cycle you
don't do a clean bill your Android

00:43:03.099 --> 00:43:03.109
don't do a clean bill your Android
 

00:43:03.109 --> 00:43:05.950
don't do a clean bill your Android
studio right you say do Rian's I did

00:43:05.950 --> 00:43:05.960
studio right you say do Rian's I did
 

00:43:05.960 --> 00:43:07.540
studio right you say do Rian's I did
some changes now reinstall to my device

00:43:07.540 --> 00:43:07.550
some changes now reinstall to my device
 

00:43:07.550 --> 00:43:13.060
some changes now reinstall to my device
right now the situation is like and you

00:43:13.060 --> 00:43:13.070
right now the situation is like and you
 

00:43:13.070 --> 00:43:15.370
right now the situation is like and you
only let's say changed a single class

00:43:15.370 --> 00:43:15.380
only let's say changed a single class
 

00:43:15.380 --> 00:43:19.030
only let's say changed a single class
right still you have now no pre-dexing

00:43:19.030 --> 00:43:19.040
right still you have now no pre-dexing
 

00:43:19.040 --> 00:43:21.640
right still you have now no pre-dexing
anymore so it's twice as fast but but

00:43:21.640 --> 00:43:21.650
anymore so it's twice as fast but but
 

00:43:21.650 --> 00:43:25.330
anymore so it's twice as fast but but
still 33 seconds it's not paradise yet

00:43:25.330 --> 00:43:25.340
still 33 seconds it's not paradise yet
 

00:43:25.340 --> 00:43:26.109
still 33 seconds it's not paradise yet
right

00:43:26.109 --> 00:43:26.119
right
 

00:43:26.119 --> 00:43:28.540
right
so most is most time is spent now on

00:43:28.540 --> 00:43:28.550
so most is most time is spent now on
 

00:43:28.550 --> 00:43:32.740
so most is most time is spent now on
taxing and and then the other big chunk

00:43:32.740 --> 00:43:32.750
taxing and and then the other big chunk
 

00:43:32.750 --> 00:43:39.310
taxing and and then the other big chunk
is is installed right and we will

00:43:39.310 --> 00:43:39.320
is is installed right and we will
 

00:43:39.320 --> 00:43:41.680
is is installed right and we will
continue to work on making the other bit

00:43:41.680 --> 00:43:41.690
continue to work on making the other bit
 

00:43:41.690 --> 00:43:43.870
continue to work on making the other bit
bit right before Dec saying all the

00:43:43.870 --> 00:43:43.880
bit right before Dec saying all the
 

00:43:43.880 --> 00:43:45.130
bit right before Dec saying all the
stuff trailer needs to do before Dec

00:43:45.130 --> 00:43:45.140
stuff trailer needs to do before Dec
 

00:43:45.140 --> 00:43:47.109
stuff trailer needs to do before Dec
same configuration time this will get

00:43:47.109 --> 00:43:47.119
same configuration time this will get
 

00:43:47.119 --> 00:43:49.900
same configuration time this will get
faster and faster but obviously even if

00:43:49.900 --> 00:43:49.910
faster and faster but obviously even if
 

00:43:49.910 --> 00:43:51.609
faster and faster but obviously even if
we get all the other stuff down to zero

00:43:51.609 --> 00:43:51.619
we get all the other stuff down to zero
 

00:43:51.619 --> 00:43:54.250
we get all the other stuff down to zero
right it's still 75% is still there

00:43:54.250 --> 00:43:54.260
right it's still 75% is still there
 

00:43:54.260 --> 00:43:57.099
right it's still 75% is still there
that is not yeah that needs to be

00:43:57.099 --> 00:43:57.109
that is not yeah that needs to be
 

00:43:57.109 --> 00:43:57.880
that is not yeah that needs to be
addressed

00:43:57.880 --> 00:43:57.890
addressed
 

00:43:57.890 --> 00:44:02.320
addressed
so not requiring to do a pre Dex cuts

00:44:02.320 --> 00:44:02.330
so not requiring to do a pre Dex cuts
 

00:44:02.330 --> 00:44:07.120
so not requiring to do a pre Dex cuts
the build time in half so we said it's

00:44:07.120 --> 00:44:07.130
the build time in half so we said it's
 

00:44:07.130 --> 00:44:11.290
the build time in half so we said it's
not dominated by dexing and the problem

00:44:11.290 --> 00:44:11.300
not dominated by dexing and the problem
 

00:44:11.300 --> 00:44:13.660
not dominated by dexing and the problem
we have at the moment is a couple of

00:44:13.660 --> 00:44:13.670
we have at the moment is a couple of
 

00:44:13.670 --> 00:44:17.980
we have at the moment is a couple of
things so first of all texting takes

00:44:17.980 --> 00:44:17.990
things so first of all texting takes
 

00:44:17.990 --> 00:44:24.339
things so first of all texting takes
long right and and it's also not

00:44:24.339 --> 00:44:24.349
long right and and it's also not
 

00:44:24.349 --> 00:44:27.010
long right and and it's also not
proportional to the numbers to the

00:44:27.010 --> 00:44:27.020
proportional to the numbers to the
 

00:44:27.020 --> 00:44:28.750
proportional to the numbers to the
numbers of changes you did right even if

00:44:28.750 --> 00:44:28.760
numbers of changes you did right even if
 

00:44:28.760 --> 00:44:30.940
numbers of changes you did right even if
whether you change one file or hundred

00:44:30.940 --> 00:44:30.950
whether you change one file or hundred
 

00:44:30.950 --> 00:44:33.670
whether you change one file or hundred
files everything will always be read xed

00:44:33.670 --> 00:44:33.680
files everything will always be read xed
 

00:44:33.680 --> 00:44:36.070
files everything will always be read xed
your whole code path so so you have you

00:44:36.070 --> 00:44:36.080
your whole code path so so you have you
 

00:44:36.080 --> 00:44:38.589
your whole code path so so you have you
have a non incremental slow

00:44:38.589 --> 00:44:38.599
have a non incremental slow
 

00:44:38.599 --> 00:44:45.009
have a non incremental slow
DXA right now right and there are there

00:44:45.009 --> 00:44:45.019
DXA right now right and there are there
 

00:44:45.019 --> 00:44:48.519
DXA right now right and there are there
is stuff on the way to improve that

00:44:48.519 --> 00:44:48.529
is stuff on the way to improve that
 

00:44:48.529 --> 00:44:51.609
is stuff on the way to improve that
right there's not much greater can do

00:44:51.609 --> 00:44:51.619
right there's not much greater can do
 

00:44:51.619 --> 00:44:53.710
right there's not much greater can do
nothing at all to me to make texting

00:44:53.710 --> 00:44:53.720
nothing at all to me to make texting
 

00:44:53.720 --> 00:44:58.660
nothing at all to me to make texting
faster right so the Google Android

00:44:58.660 --> 00:44:58.670
faster right so the Google Android
 

00:44:58.670 --> 00:45:00.579
faster right so the Google Android
platform team is working on a new dexon

00:45:00.579 --> 00:45:00.589
platform team is working on a new dexon
 

00:45:00.589 --> 00:45:02.229
platform team is working on a new dexon
compiler called Jack who has heard about

00:45:02.229 --> 00:45:02.239
compiler called Jack who has heard about
 

00:45:02.239 --> 00:45:06.969
compiler called Jack who has heard about
Jack so I don't have any deep knowledge

00:45:06.969 --> 00:45:06.979
Jack so I don't have any deep knowledge
 

00:45:06.979 --> 00:45:09.849
Jack so I don't have any deep knowledge
about Jack right can only you know have

00:45:09.849 --> 00:45:09.859
about Jack right can only you know have
 

00:45:09.859 --> 00:45:11.400
about Jack right can only you know have
a look at the website what they're doing

00:45:11.400 --> 00:45:11.410
a look at the website what they're doing
 

00:45:11.410 --> 00:45:14.049
a look at the website what they're doing
the idea is that it consolidates two

00:45:14.049 --> 00:45:14.059
the idea is that it consolidates two
 

00:45:14.059 --> 00:45:15.759
the idea is that it consolidates two
source code compilation indexing into

00:45:15.759 --> 00:45:15.769
source code compilation indexing into
 

00:45:15.769 --> 00:45:18.789
source code compilation indexing into
one step right so no longer sauce byte

00:45:18.789 --> 00:45:18.799
one step right so no longer sauce byte
 

00:45:18.799 --> 00:45:23.289
one step right so no longer sauce byte
code a dalvik bytecode but directly from

00:45:23.289 --> 00:45:23.299
code a dalvik bytecode but directly from
 

00:45:23.299 --> 00:45:27.039
code a dalvik bytecode but directly from
source to dalvik bytecode and Jack has

00:45:27.039 --> 00:45:27.049
source to dalvik bytecode and Jack has
 

00:45:27.049 --> 00:45:29.319
source to dalvik bytecode and Jack has
already an experimental incremental

00:45:29.319 --> 00:45:29.329
already an experimental incremental
 

00:45:29.329 --> 00:45:31.509
already an experimental incremental
option that you can use so they're

00:45:31.509 --> 00:45:31.519
option that you can use so they're
 

00:45:31.519 --> 00:45:34.589
option that you can use so they're
serious efforts happening right and

00:45:34.589 --> 00:45:34.599
serious efforts happening right and
 

00:45:34.599 --> 00:45:37.029
serious efforts happening right and
incremental dexing plus faster

00:45:37.029 --> 00:45:37.039
incremental dexing plus faster
 

00:45:37.039 --> 00:45:38.890
incremental dexing plus faster
pre-dexing will lead to dramatic

00:45:38.890 --> 00:45:38.900
pre-dexing will lead to dramatic
 

00:45:38.900 --> 00:45:41.019
pre-dexing will lead to dramatic
improvements of developer time all right

00:45:41.019 --> 00:45:41.029
improvements of developer time all right
 

00:45:41.029 --> 00:45:43.870
improvements of developer time all right
so so I think with a little bit more

00:45:43.870 --> 00:45:43.880
so so I think with a little bit more
 

00:45:43.880 --> 00:45:46.329
so so I think with a little bit more
patience I think you should yeah things

00:45:46.329 --> 00:45:46.339
patience I think you should yeah things
 

00:45:46.339 --> 00:45:48.640
patience I think you should yeah things
will significantly improve when it comes

00:45:48.640 --> 00:45:48.650
will significantly improve when it comes
 

00:45:48.650 --> 00:45:51.749
will significantly improve when it comes
to your the performance of your of your

00:45:51.749 --> 00:45:51.759
to your the performance of your of your
 

00:45:51.759 --> 00:45:55.599
to your the performance of your of your
development cycles okay what else will

00:45:55.599 --> 00:45:55.609
development cycles okay what else will
 

00:45:55.609 --> 00:45:57.700
development cycles okay what else will
the future bring I talked about

00:45:57.700 --> 00:45:57.710
the future bring I talked about
 

00:45:57.710 --> 00:45:59.950
the future bring I talked about
performance in detail right for us this

00:45:59.950 --> 00:45:59.960
performance in detail right for us this
 

00:45:59.960 --> 00:46:03.640
performance in detail right for us this
is at the moment one of our one of our

00:46:03.640 --> 00:46:03.650
is at the moment one of our one of our
 

00:46:03.650 --> 00:46:10.299
is at the moment one of our one of our
major on the effort and so yeah you will

00:46:10.299 --> 00:46:10.309
major on the effort and so yeah you will
 

00:46:10.309 --> 00:46:11.859
major on the effort and so yeah you will
every greater release would be faster

00:46:11.859 --> 00:46:11.869
every greater release would be faster
 

00:46:11.869 --> 00:46:13.839
every greater release would be faster
and with the other changes I talked

00:46:13.839 --> 00:46:13.849
and with the other changes I talked
 

00:46:13.849 --> 00:46:15.339
and with the other changes I talked
about the specific Android bottlenecks

00:46:15.339 --> 00:46:15.349
about the specific Android bottlenecks
 

00:46:15.349 --> 00:46:16.989
about the specific Android bottlenecks
when they are when they are gone you

00:46:16.989 --> 00:46:16.999
when they are when they are gone you
 

00:46:16.999 --> 00:46:18.969
when they are when they are gone you
will have extremely fast Android build

00:46:18.969 --> 00:46:18.979
will have extremely fast Android build
 

00:46:18.979 --> 00:46:22.469
will have extremely fast Android build
so that they will come there is already

00:46:22.469 --> 00:46:22.479
so that they will come there is already
 

00:46:22.479 --> 00:46:25.120
so that they will come there is already
the new experimental and Gradle android

00:46:25.120 --> 00:46:25.130
the new experimental and Gradle android
 

00:46:25.130 --> 00:46:27.910
the new experimental and Gradle android
plug-in out there right it is based on

00:46:27.910 --> 00:46:27.920
plug-in out there right it is based on
 

00:46:27.920 --> 00:46:29.709
plug-in out there right it is based on
what we call the new cradle model which

00:46:29.709 --> 00:46:29.719
what we call the new cradle model which
 

00:46:29.719 --> 00:46:31.690
what we call the new cradle model which
has much much faster configuration time

00:46:31.690 --> 00:46:31.700
has much much faster configuration time
 

00:46:31.700 --> 00:46:34.029
has much much faster configuration time
which will eventually give you parallel

00:46:34.029 --> 00:46:34.039
which will eventually give you parallel
 

00:46:34.039 --> 00:46:36.819
which will eventually give you parallel
task execution so this is so I mean it's

00:46:36.819 --> 00:46:36.829
task execution so this is so I mean it's
 

00:46:36.829 --> 00:46:38.650
task execution so this is so I mean it's
still very experimental but it's out

00:46:38.650 --> 00:46:38.660
still very experimental but it's out
 

00:46:38.660 --> 00:46:40.209
still very experimental but it's out
there it's open source you can use it

00:46:40.209 --> 00:46:40.219
there it's open source you can use it
 

00:46:40.219 --> 00:46:43.120
there it's open source you can use it
right so to see what the future will

00:46:43.120 --> 00:46:43.130
right so to see what the future will
 

00:46:43.130 --> 00:46:44.380
right so to see what the future will
will give you in the benefits you have

00:46:44.380 --> 00:46:44.390
will give you in the benefits you have
 

00:46:44.390 --> 00:46:46.319
will give you in the benefits you have
already in this new plugin are

00:46:46.319 --> 00:46:46.329
already in this new plugin are
 

00:46:46.329 --> 00:46:51.760
already in this new plugin are
significant right performance wise

00:46:51.760 --> 00:46:51.770
 

00:46:51.770 --> 00:46:56.859
so with the so the new android plug-in

00:46:56.859 --> 00:46:56.869
so with the so the new android plug-in
 

00:46:56.869 --> 00:46:59.780
so with the so the new android plug-in
just the configuration time for ten

00:46:59.780 --> 00:46:59.790
just the configuration time for ten
 

00:46:59.790 --> 00:47:02.690
just the configuration time for ten
android project with ten variants with

00:47:02.690 --> 00:47:02.700
android project with ten variants with
 

00:47:02.700 --> 00:47:04.220
android project with ten variants with
the with the next generation android

00:47:04.220 --> 00:47:04.230
the with the next generation android
 

00:47:04.230 --> 00:47:06.109
the with the next generation android
plug-in has already cut down by a factor

00:47:06.109 --> 00:47:06.119
plug-in has already cut down by a factor
 

00:47:06.119 --> 00:47:11.569
plug-in has already cut down by a factor
three and more to come so okay

00:47:11.569 --> 00:47:11.579
three and more to come so okay
 

00:47:11.579 --> 00:47:14.120
three and more to come so okay
extensibility is already at the very

00:47:14.120 --> 00:47:14.130
extensibility is already at the very
 

00:47:14.130 --> 00:47:18.910
extensibility is already at the very
strength of the build platform but but

00:47:18.910 --> 00:47:18.920
strength of the build platform but but
 

00:47:18.920 --> 00:47:21.260
strength of the build platform but but
especially android is pushing our

00:47:21.260 --> 00:47:21.270
especially android is pushing our
 

00:47:21.270 --> 00:47:23.120
especially android is pushing our
extensibility to a certain degree we

00:47:23.120 --> 00:47:23.130
extensibility to a certain degree we
 

00:47:23.130 --> 00:47:25.460
extensibility to a certain degree we
have to create a platform we have the

00:47:25.460 --> 00:47:25.470
have to create a platform we have the
 

00:47:25.470 --> 00:47:27.410
have to create a platform we have the
Gradle android plug-in we have some

00:47:27.410 --> 00:47:27.420
Gradle android plug-in we have some
 

00:47:27.420 --> 00:47:30.170
Gradle android plug-in we have some
greater plugin by some virtual testing

00:47:30.170 --> 00:47:30.180
greater plugin by some virtual testing
 

00:47:30.180 --> 00:47:32.390
greater plugin by some virtual testing
provider in the cloud like testdroid and

00:47:32.390 --> 00:47:32.400
provider in the cloud like testdroid and
 

00:47:32.400 --> 00:47:34.670
provider in the cloud like testdroid and
then we have organizations that do their

00:47:34.670 --> 00:47:34.680
then we have organizations that do their
 

00:47:34.680 --> 00:47:37.280
then we have organizations that do their
do their own extension so when you have

00:47:37.280 --> 00:47:37.290
do their own extension so when you have
 

00:47:37.290 --> 00:47:42.260
do their own extension so when you have
this kind of extension hierarchy you now

00:47:42.260 --> 00:47:42.270
this kind of extension hierarchy you now
 

00:47:42.270 --> 00:47:44.359
this kind of extension hierarchy you now
we now put you sometimes in a situation

00:47:44.359 --> 00:47:44.369
we now put you sometimes in a situation
 

00:47:44.369 --> 00:47:46.160
we now put you sometimes in a situation
that you need to do some workarounds to

00:47:46.160 --> 00:47:46.170
that you need to do some workarounds to
 

00:47:46.170 --> 00:47:47.809
that you need to do some workarounds to
get the configuration auto ride and

00:47:47.809 --> 00:47:47.819
get the configuration auto ride and
 

00:47:47.819 --> 00:47:50.480
get the configuration auto ride and
stuff like that so we want even in this

00:47:50.480 --> 00:47:50.490
stuff like that so we want even in this
 

00:47:50.490 --> 00:47:52.910
stuff like that so we want even in this
very complex extension scenarios we want

00:47:52.910 --> 00:47:52.920
very complex extension scenarios we want
 

00:47:52.920 --> 00:47:56.240
very complex extension scenarios we want
to provide you a more solid extension

00:47:56.240 --> 00:47:56.250
to provide you a more solid extension
 

00:47:56.250 --> 00:47:57.470
to provide you a more solid extension
model that's that's something we're

00:47:57.470 --> 00:47:57.480
model that's that's something we're
 

00:47:57.480 --> 00:47:59.390
model that's that's something we're
working on and even if you don't use it

00:47:59.390 --> 00:47:59.400
working on and even if you don't use it
 

00:47:59.400 --> 00:48:02.740
working on and even if you don't use it
directly you will benefit from that that

00:48:02.740 --> 00:48:02.750
directly you will benefit from that that
 

00:48:02.750 --> 00:48:09.109
directly you will benefit from that that
ecosystem can can work better for you at

00:48:09.109 --> 00:48:09.119
ecosystem can can work better for you at
 

00:48:09.119 --> 00:48:10.880
ecosystem can can work better for you at
the other big area we're working on is

00:48:10.880 --> 00:48:10.890
the other big area we're working on is
 

00:48:10.890 --> 00:48:12.530
the other big area we're working on is
dependency management so we want to

00:48:12.530 --> 00:48:12.540
dependency management so we want to
 

00:48:12.540 --> 00:48:15.380
dependency management so we want to
support fully variant where dependency

00:48:15.380 --> 00:48:15.390
support fully variant where dependency
 

00:48:15.390 --> 00:48:16.789
support fully variant where dependency
management so that you can basically

00:48:16.789 --> 00:48:16.799
management so that you can basically
 

00:48:16.799 --> 00:48:19.520
management so that you can basically
have Android libraries and and Java

00:48:19.520 --> 00:48:19.530
have Android libraries and and Java
 

00:48:19.530 --> 00:48:23.000
have Android libraries and and Java
libraries that are we're not just about

00:48:23.000 --> 00:48:23.010
libraries that are we're not just about
 

00:48:23.010 --> 00:48:26.240
libraries that are we're not just about
their version but also is this debug or

00:48:26.240 --> 00:48:26.250
their version but also is this debug or
 

00:48:26.250 --> 00:48:31.460
their version but also is this debug or
release type library right for NDK is it

00:48:31.460 --> 00:48:31.470
release type library right for NDK is it
 

00:48:31.470 --> 00:48:33.859
release type library right for NDK is it
64 bit it is 32 bit and to make that a

00:48:33.859 --> 00:48:33.869
64 bit it is 32 bit and to make that a
 

00:48:33.869 --> 00:48:36.230
64 bit it is 32 bit and to make that a
first-class citizen when you do

00:48:36.230 --> 00:48:36.240
first-class citizen when you do
 

00:48:36.240 --> 00:48:40.250
first-class citizen when you do
dependency resolution that is exciting

00:48:40.250 --> 00:48:40.260
dependency resolution that is exciting
 

00:48:40.260 --> 00:48:43.400
dependency resolution that is exciting
work see C++ is a very important

00:48:43.400 --> 00:48:43.410
work see C++ is a very important
 

00:48:43.410 --> 00:48:45.620
work see C++ is a very important
platform for us we are partnering for

00:48:45.620 --> 00:48:45.630
platform for us we are partnering for
 

00:48:45.630 --> 00:48:48.859
platform for us we are partnering for
example with unity technology who are

00:48:48.859 --> 00:48:48.869
example with unity technology who are
 

00:48:48.869 --> 00:48:51.589
example with unity technology who are
migrating the whole native stack towards

00:48:51.589 --> 00:48:51.599
migrating the whole native stack towards
 

00:48:51.599 --> 00:48:54.349
migrating the whole native stack towards
cradle and the NDK support in a new

00:48:54.349 --> 00:48:54.359
cradle and the NDK support in a new
 

00:48:54.359 --> 00:48:56.599
cradle and the NDK support in a new
experimental android plug-in will no

00:48:56.599 --> 00:48:56.609
experimental android plug-in will no
 

00:48:56.609 --> 00:48:58.430
experimental android plug-in will no
longer be based on meg but on a greater

00:48:58.430 --> 00:48:58.440
longer be based on meg but on a greater
 

00:48:58.440 --> 00:49:00.829
longer be based on meg but on a greater
c c++ plugin and we're very excited

00:49:00.829 --> 00:49:00.839
c c++ plugin and we're very excited
 

00:49:00.839 --> 00:49:01.670
c c++ plugin and we're very excited
about that

00:49:01.670 --> 00:49:01.680
about that
 

00:49:01.680 --> 00:49:04.200
about that
so you will have a similar rich

00:49:04.200 --> 00:49:04.210
so you will have a similar rich
 

00:49:04.210 --> 00:49:06.120
so you will have a similar rich
a declarative language to describe your

00:49:06.120 --> 00:49:06.130
a declarative language to describe your
 

00:49:06.130 --> 00:49:07.440
a declarative language to describe your
native code requirements who of you is

00:49:07.440 --> 00:49:07.450
native code requirements who of you is
 

00:49:07.450 --> 00:49:11.839
native code requirements who of you is
doing any NDK work so that should be

00:49:11.839 --> 00:49:11.849
doing any NDK work so that should be
 

00:49:11.849 --> 00:49:19.050
doing any NDK work so that should be
really nice ok so last but not least we

00:49:19.050 --> 00:49:19.060
really nice ok so last but not least we
 

00:49:19.060 --> 00:49:21.690
really nice ok so last but not least we
are releasing assess offering very soon

00:49:21.690 --> 00:49:21.700
are releasing assess offering very soon
 

00:49:21.700 --> 00:49:24.750
are releasing assess offering very soon
that allows you to connect your local or

00:49:24.750 --> 00:49:24.760
that allows you to connect your local or
 

00:49:24.760 --> 00:49:26.160
that allows you to connect your local or
CI builds right

00:49:26.160 --> 00:49:26.170
CI builds right
 

00:49:26.170 --> 00:49:27.270
CI builds right
all your Creator builds in your

00:49:27.270 --> 00:49:27.280
all your Creator builds in your
 

00:49:27.280 --> 00:49:29.430
all your Creator builds in your
organization with our SAS offering and

00:49:29.430 --> 00:49:29.440
organization with our SAS offering and
 

00:49:29.440 --> 00:49:32.099
organization with our SAS offering and
and this service will help you with

00:49:32.099 --> 00:49:32.109
and this service will help you with
 

00:49:32.109 --> 00:49:34.109
and this service will help you with
understanding why something is wrong

00:49:34.109 --> 00:49:34.119
understanding why something is wrong
 

00:49:34.119 --> 00:49:36.510
understanding why something is wrong
with your build or why or helps

00:49:36.510 --> 00:49:36.520
with your build or why or helps
 

00:49:36.520 --> 00:49:39.000
with your build or why or helps
developer to understand why the why the

00:49:39.000 --> 00:49:39.010
developer to understand why the why the
 

00:49:39.010 --> 00:49:44.010
developer to understand why the why the
build is not happy with the code why the

00:49:44.010 --> 00:49:44.020
build is not happy with the code why the
 

00:49:44.020 --> 00:49:45.570
build is not happy with the code why the
tests are failing and things like that

00:49:45.570 --> 00:49:45.580
tests are failing and things like that
 

00:49:45.580 --> 00:49:48.270
tests are failing and things like that
so why is it working locally and why CI

00:49:48.270 --> 00:49:48.280
so why is it working locally and why CI
 

00:49:48.280 --> 00:49:50.839
so why is it working locally and why CI
failing and those kind of questions so

00:49:50.839 --> 00:49:50.849
failing and those kind of questions so
 

00:49:50.849 --> 00:49:54.180
failing and those kind of questions so
very excited about that if you're

00:49:54.180 --> 00:49:54.190
very excited about that if you're
 

00:49:54.190 --> 00:49:55.710
very excited about that if you're
interested please sign up for for the

00:49:55.710 --> 00:49:55.720
interested please sign up for for the
 

00:49:55.720 --> 00:49:59.190
interested please sign up for for the
better wait list and you should be yeah

00:49:59.190 --> 00:49:59.200
better wait list and you should be yeah
 

00:49:59.200 --> 00:50:01.859
better wait list and you should be yeah
hopefully in November we can we can have

00:50:01.859 --> 00:50:01.869
hopefully in November we can we can have
 

00:50:01.869 --> 00:50:08.339
hopefully in November we can we can have
a full GA of that product if you want to

00:50:08.339 --> 00:50:08.349
a full GA of that product if you want to
 

00:50:08.349 --> 00:50:10.079
a full GA of that product if you want to
learn more about how to work with Gradle

00:50:10.079 --> 00:50:10.089
learn more about how to work with Gradle
 

00:50:10.089 --> 00:50:12.359
learn more about how to work with Gradle
for Android there is now an excellent

00:50:12.359 --> 00:50:12.369
for Android there is now an excellent
 

00:50:12.369 --> 00:50:16.230
for Android there is now an excellent
Udacity class online it's your destiny

00:50:16.230 --> 00:50:16.240
Udacity class online it's your destiny
 

00:50:16.240 --> 00:50:18.150
Udacity class online it's your destiny
class we have created together with

00:50:18.150 --> 00:50:18.160
class we have created together with
 

00:50:18.160 --> 00:50:20.700
class we have created together with
Google and Udacity it's free if you

00:50:20.700 --> 00:50:20.710
Google and Udacity it's free if you
 

00:50:20.710 --> 00:50:21.960
Google and Udacity it's free if you
don't take it as part of the android

00:50:21.960 --> 00:50:21.970
don't take it as part of the android
 

00:50:21.970 --> 00:50:25.170
don't take it as part of the android
nanodegree I think it's now over 10,000

00:50:25.170 --> 00:50:25.180
nanodegree I think it's now over 10,000
 

00:50:25.180 --> 00:50:26.670
nanodegree I think it's now over 10,000
people that have already signed up it's

00:50:26.670 --> 00:50:26.680
people that have already signed up it's
 

00:50:26.680 --> 00:50:29.339
people that have already signed up it's
an old screenshot and Udacity is amazing

00:50:29.339 --> 00:50:29.349
an old screenshot and Udacity is amazing
 

00:50:29.349 --> 00:50:30.960
an old screenshot and Udacity is amazing
who have you guys ever taken Udacity

00:50:30.960 --> 00:50:30.970
who have you guys ever taken Udacity
 

00:50:30.970 --> 00:50:35.190
who have you guys ever taken Udacity
class yeah I think it's the best online

00:50:35.190 --> 00:50:35.200
class yeah I think it's the best online
 

00:50:35.200 --> 00:50:38.880
class yeah I think it's the best online
class experience I ever had and and this

00:50:38.880 --> 00:50:38.890
class experience I ever had and and this
 

00:50:38.890 --> 00:50:41.070
class experience I ever had and and this
class is really really good so if so

00:50:41.070 --> 00:50:41.080
class is really really good so if so
 

00:50:41.080 --> 00:50:42.960
class is really really good so if so
might be interesting for you might be

00:50:42.960 --> 00:50:42.970
might be interesting for you might be
 

00:50:42.970 --> 00:50:44.099
might be interesting for you might be
interesting for some of your colleagues

00:50:44.099 --> 00:50:44.109
interesting for some of your colleagues
 

00:50:44.109 --> 00:50:46.829
interesting for some of your colleagues
it's really good perfect starting to

00:50:46.829 --> 00:50:46.839
it's really good perfect starting to
 

00:50:46.839 --> 00:50:49.589
it's really good perfect starting to
cradle and we offer our own trainings

00:50:49.589 --> 00:50:49.599
cradle and we offer our own trainings
 

00:50:49.599 --> 00:50:51.030
cradle and we offer our own trainings
right if you want to get deeper into

00:50:51.030 --> 00:50:51.040
right if you want to get deeper into
 

00:50:51.040 --> 00:50:51.660
right if you want to get deeper into
Gradle

00:50:51.660 --> 00:50:51.670
Gradle
 

00:50:51.670 --> 00:50:53.579
Gradle
right we have introductory intermediate

00:50:53.579 --> 00:50:53.589
right we have introductory intermediate
 

00:50:53.589 --> 00:50:55.470
right we have introductory intermediate
classes but also very advanced classes

00:50:55.470 --> 00:50:55.480
classes but also very advanced classes
 

00:50:55.480 --> 00:50:57.599
classes but also very advanced classes
all delivered by Gradle core engineers

00:50:57.599 --> 00:50:57.609
all delivered by Gradle core engineers
 

00:50:57.609 --> 00:50:59.520
all delivered by Gradle core engineers
are people that deeply understand the

00:50:59.520 --> 00:50:59.530
are people that deeply understand the
 

00:50:59.530 --> 00:51:05.760
are people that deeply understand the
platform ok that's it thank you any

00:51:05.760 --> 00:51:05.770
platform ok that's it thank you any
 

00:51:05.770 --> 00:51:20.740
platform ok that's it thank you any
questions

00:51:20.740 --> 00:51:20.750
 

00:51:20.750 --> 00:51:25.700
questions yes please know the class our

00:51:25.700 --> 00:51:25.710
questions yes please know the class our
 

00:51:25.710 --> 00:51:26.780
questions yes please know the class our
class are not free

00:51:26.780 --> 00:51:26.790
class are not free
 

00:51:26.790 --> 00:51:33.110
class are not free
we're not Google so and they are the

00:51:33.110 --> 00:51:33.120
we're not Google so and they are the
 

00:51:33.120 --> 00:51:34.730
we're not Google so and they are the
difference is their instructor left

00:51:34.730 --> 00:51:34.740
difference is their instructor left
 

00:51:34.740 --> 00:51:40.700
difference is their instructor left
right so the Udacity class is yeah so

00:51:40.700 --> 00:51:40.710
right so the Udacity class is yeah so
 

00:51:40.710 --> 00:51:41.990
right so the Udacity class is yeah so
you can ask question whenever you have

00:51:41.990 --> 00:51:42.000
you can ask question whenever you have
 

00:51:42.000 --> 00:51:43.670
you can ask question whenever you have
so you get a good teaching experience

00:51:43.670 --> 00:51:43.680
so you get a good teaching experience
 

00:51:43.680 --> 00:51:45.140
so you get a good teaching experience
but you can also ask the credit

00:51:45.140 --> 00:51:45.150
but you can also ask the credit
 

00:51:45.150 --> 00:51:46.280
but you can also ask the credit
questions you ever wanted to are you

00:51:46.280 --> 00:51:46.290
questions you ever wanted to are you
 

00:51:46.290 --> 00:51:54.530
questions you ever wanted to are you
always wanted to ask yes please so

00:51:54.530 --> 00:51:54.540
always wanted to ask yes please so
 

00:51:54.540 --> 00:52:06.430
always wanted to ask yes please so
please can you can you say

00:52:06.430 --> 00:52:06.440
 

00:52:06.440 --> 00:52:24.460
yep yes it's it's a good point

00:52:24.460 --> 00:52:24.470
yep yes it's it's a good point
 

00:52:24.470 --> 00:52:26.589
yep yes it's it's a good point
understand it something you would need

00:52:26.589 --> 00:52:26.599
understand it something you would need
 

00:52:26.599 --> 00:52:28.720
understand it something you would need
to ask the Android tooling team

00:52:28.720 --> 00:52:28.730
to ask the Android tooling team
 

00:52:28.730 --> 00:52:31.630
to ask the Android tooling team
it's beyond yeah it's a good point so

00:52:31.630 --> 00:52:31.640
it's beyond yeah it's a good point so
 

00:52:31.640 --> 00:52:34.839
it's beyond yeah it's a good point so
but they I would ask it on the Android

00:52:34.839 --> 00:52:34.849
but they I would ask it on the Android
 

00:52:34.849 --> 00:52:36.339
but they I would ask it on the Android
dev list or something like that what

00:52:36.339 --> 00:52:36.349
dev list or something like that what
 

00:52:36.349 --> 00:52:37.930
dev list or something like that what
what they plan whatever if there are any

00:52:37.930 --> 00:52:37.940
what they plan whatever if there are any
 

00:52:37.940 --> 00:53:10.420
what they plan whatever if there are any
plans yes please yeah yes not yet but it

00:53:10.420 --> 00:53:10.430
plans yes please yeah yes not yet but it
 

00:53:10.430 --> 00:53:12.940
plans yes please yeah yes not yet but it
will be coming right so it's very good

00:53:12.940 --> 00:53:12.950
will be coming right so it's very good
 

00:53:12.950 --> 00:53:15.250
will be coming right so it's very good
point right so so just to understand you

00:53:15.250 --> 00:53:15.260
point right so so just to understand you
 

00:53:15.260 --> 00:53:17.260
point right so so just to understand you
and and to consumers for that would be

00:53:17.260 --> 00:53:17.270
and and to consumers for that would be
 

00:53:17.270 --> 00:53:19.359
and and to consumers for that would be
new developers you hire into your team

00:53:19.359 --> 00:53:19.369
new developers you hire into your team
 

00:53:19.369 --> 00:53:33.099
new developers you hire into your team
or yeah yeah yes yes yes no it's a good

00:53:33.099 --> 00:53:33.109
or yeah yeah yes yes yes no it's a good
 

00:53:33.109 --> 00:53:35.920
or yeah yeah yes yes yes no it's a good
point so that is yes we understand that

00:53:35.920 --> 00:53:35.930
point so that is yes we understand that
 

00:53:35.930 --> 00:53:38.260
point so that is yes we understand that
use case and you will you will you will

00:53:38.260 --> 00:53:38.270
use case and you will you will you will
 

00:53:38.270 --> 00:53:40.870
use case and you will you will you will
we will provide something so but it's

00:53:40.870 --> 00:53:40.880
we will provide something so but it's
 

00:53:40.880 --> 00:53:42.730
we will provide something so but it's
nothing don't read the manual you won't

00:53:42.730 --> 00:53:42.740
nothing don't read the manual you won't
 

00:53:42.740 --> 00:53:46.510
nothing don't read the manual you won't
find anything in it right now we invite

00:53:46.510 --> 00:53:46.520
find anything in it right now we invite
 

00:53:46.520 --> 00:53:47.799
find anything in it right now we invite
other interesting stuff in there but

00:53:47.799 --> 00:53:47.809
other interesting stuff in there but
 

00:53:47.809 --> 00:53:51.430
other interesting stuff in there but
yeah I mean strictly speaking right

00:53:51.430 --> 00:53:51.440
yeah I mean strictly speaking right
 

00:53:51.440 --> 00:53:53.440
yeah I mean strictly speaking right
because it's such a rich model I'm just

00:53:53.440 --> 00:53:53.450
because it's such a rich model I'm just
 

00:53:53.450 --> 00:53:55.539
because it's such a rich model I'm just
saying not don't we should do that right

00:53:55.539 --> 00:53:55.549
saying not don't we should do that right
 

00:53:55.549 --> 00:53:57.220
saying not don't we should do that right
but strictly speaking I think it would

00:53:57.220 --> 00:53:57.230
but strictly speaking I think it would
 

00:53:57.230 --> 00:53:59.349
but strictly speaking I think it would
take you or someone it knows a little

00:53:59.349 --> 00:53:59.359
take you or someone it knows a little
 

00:53:59.359 --> 00:54:02.740
take you or someone it knows a little
bit about cradle one hour to create a

00:54:02.740 --> 00:54:02.750
bit about cradle one hour to create a
 

00:54:02.750 --> 00:54:04.779
bit about cradle one hour to create a
plugin that would print out that

00:54:04.779 --> 00:54:04.789
plugin that would print out that
 

00:54:04.789 --> 00:54:06.849
plugin that would print out that
information on the console so so at

00:54:06.849 --> 00:54:06.859
information on the console so so at
 

00:54:06.859 --> 00:54:09.849
information on the console so so at
least at least you could do something

00:54:09.849 --> 00:54:09.859
least at least you could do something
 

00:54:09.859 --> 00:54:11.589
least at least you could do something
about it right not that we shouldn't do

00:54:11.589 --> 00:54:11.599
about it right not that we shouldn't do
 

00:54:11.599 --> 00:54:13.329
about it right not that we shouldn't do
it right so don't misunderstand that but

00:54:13.329 --> 00:54:13.339
it right so don't misunderstand that but
 

00:54:13.339 --> 00:54:15.910
it right so don't misunderstand that but
it's a cradle is so open and so rich

00:54:15.910 --> 00:54:15.920
it's a cradle is so open and so rich
 

00:54:15.920 --> 00:54:17.529
it's a cradle is so open and so rich
that you that we you don't need to

00:54:17.529 --> 00:54:17.539
that you that we you don't need to
 

00:54:17.539 --> 00:54:19.510
that you that we you don't need to
create secret master knowledge to do

00:54:19.510 --> 00:54:19.520
create secret master knowledge to do
 

00:54:19.520 --> 00:54:19.890
create secret master knowledge to do
that

00:54:19.890 --> 00:54:19.900
that
 

00:54:19.900 --> 00:54:21.359
that
you could do that pretty in a pretty

00:54:21.359 --> 00:54:21.369
you could do that pretty in a pretty
 

00:54:21.369 --> 00:54:31.829
you could do that pretty in a pretty
straightforward way actually yeah so you

00:54:31.829 --> 00:54:31.839
straightforward way actually yeah so you
 

00:54:31.839 --> 00:54:36.809
straightforward way actually yeah so you
so you could yes so what you could what

00:54:36.809 --> 00:54:36.819
so you could yes so what you could what
 

00:54:36.819 --> 00:54:38.190
so you could yes so what you could what
you could do that there is a nice thing

00:54:38.190 --> 00:54:38.200
you could do that there is a nice thing
 

00:54:38.200 --> 00:54:39.599
you could do that there is a nice thing
with the rich model right you could you

00:54:39.599 --> 00:54:39.609
with the rich model right you could you
 

00:54:39.609 --> 00:54:41.490
with the rich model right you could you
could ask you could ask the cradle

00:54:41.490 --> 00:54:41.500
could ask you could ask the cradle
 

00:54:41.500 --> 00:54:46.339
could ask you could ask the cradle
Android build with a Gradle plugin hey

00:54:46.339 --> 00:54:46.349
 

00:54:46.349 --> 00:54:50.609
what are you uh what are you are all

00:54:50.609 --> 00:54:50.619
what are you uh what are you are all
 

00:54:50.619 --> 00:54:51.990
what are you uh what are you are all
those sources are represented by which

00:54:51.990 --> 00:54:52.000
those sources are represented by which
 

00:54:52.000 --> 00:54:56.390
those sources are represented by which
object you can say hey main sources a

00:54:56.390 --> 00:54:56.400
object you can say hey main sources a
 

00:54:56.400 --> 00:54:59.819
object you can say hey main sources a
object please tell me where what is the

00:54:59.819 --> 00:54:59.829
object please tell me where what is the
 

00:54:59.829 --> 00:55:02.549
object please tell me where what is the
path to the Java files what is the path

00:55:02.549 --> 00:55:02.559
path to the Java files what is the path
 

00:55:02.559 --> 00:55:04.829
path to the Java files what is the path
to the resources files because it's all

00:55:04.829 --> 00:55:04.839
to the resources files because it's all
 

00:55:04.839 --> 00:55:06.359
to the resources files because it's all
in there and you can and then you can

00:55:06.359 --> 00:55:06.369
in there and you can and then you can
 

00:55:06.369 --> 00:55:08.069
in there and you can and then you can
print it out right it's because it's all

00:55:08.069 --> 00:55:08.079
print it out right it's because it's all
 

00:55:08.079 --> 00:55:10.650
print it out right it's because it's all
richly modeled and then o hey vairy in

00:55:10.650 --> 00:55:10.660
richly modeled and then o hey vairy in
 

00:55:10.660 --> 00:55:12.450
richly modeled and then o hey vairy in
container do you have some variants yeah

00:55:12.450 --> 00:55:12.460
container do you have some variants yeah
 

00:55:12.460 --> 00:55:14.819
container do you have some variants yeah
give me the variant object hey free

00:55:14.819 --> 00:55:14.829
give me the variant object hey free
 

00:55:14.829 --> 00:55:17.430
give me the variant object hey free
variant tell me where are the sources

00:55:17.430 --> 00:55:17.440
variant tell me where are the sources
 

00:55:17.440 --> 00:55:19.019
variant tell me where are the sources
for the free variant where the resource

00:55:19.019 --> 00:55:19.029
for the free variant where the resource
 

00:55:19.029 --> 00:55:21.210
for the free variant where the resource
is where the integration test so it so

00:55:21.210 --> 00:55:21.220
is where the integration test so it so
 

00:55:21.220 --> 00:55:22.799
is where the integration test so it so
I'm not even exaggerating would be one

00:55:22.799 --> 00:55:22.809
I'm not even exaggerating would be one
 

00:55:22.809 --> 00:55:25.529
I'm not even exaggerating would be one
hour and it would be on a console right

00:55:25.529 --> 00:55:25.539
hour and it would be on a console right
 

00:55:25.539 --> 00:55:27.359
hour and it would be on a console right
because it's richly modeled within it's

00:55:27.359 --> 00:55:27.369
because it's richly modeled within it's
 

00:55:27.369 --> 00:55:29.400
because it's richly modeled within it's
not just it's no metric properties

00:55:29.400 --> 00:55:29.410
not just it's no metric properties
 

00:55:29.410 --> 00:55:32.160
not just it's no metric properties
that's what we hate we hate something or

00:55:32.160 --> 00:55:32.170
that's what we hate we hate something or
 

00:55:32.170 --> 00:55:34.559
that's what we hate we hate something or
it just somehow made up and there's some

00:55:34.559 --> 00:55:34.569
it just somehow made up and there's some
 

00:55:34.569 --> 00:55:36.240
it just somehow made up and there's some
magic property hard-coded in the build

00:55:36.240 --> 00:55:36.250
magic property hard-coded in the build
 

00:55:36.250 --> 00:55:38.400
magic property hard-coded in the build
script no it's all changeable and

00:55:38.400 --> 00:55:38.410
script no it's all changeable and
 

00:55:38.410 --> 00:55:40.950
script no it's all changeable and
accessible but yeah we should come with

00:55:40.950 --> 00:55:40.960
accessible but yeah we should come with
 

00:55:40.960 --> 00:55:46.950
accessible but yeah we should come with
this out-of-the-box pun let's I mean I

00:55:46.950 --> 00:55:46.960
this out-of-the-box pun let's I mean I
 

00:55:46.960 --> 00:55:49.289
this out-of-the-box pun let's I mean I
my my flight is going no I'm seriously

00:55:49.289 --> 00:55:49.299
my my flight is going no I'm seriously
 

00:55:49.299 --> 00:55:50.910
my my flight is going no I'm seriously
thinking about it just thinking about my

00:55:50.910 --> 00:55:50.920
thinking about it just thinking about my
 

00:55:50.920 --> 00:55:53.220
thinking about it just thinking about my
schedule might not have because I need

00:55:53.220 --> 00:55:53.230
schedule might not have because I need
 

00:55:53.230 --> 00:55:59.010
schedule might not have because I need
to go to the airport maybe let's see

00:55:59.010 --> 00:55:59.020
to go to the airport maybe let's see
 

00:55:59.020 --> 00:56:00.930
to go to the airport maybe let's see
maybe I i heck it up on the on the way

00:56:00.930 --> 00:56:00.940
maybe I i heck it up on the on the way
 

00:56:00.940 --> 00:56:02.940
maybe I i heck it up on the on the way
back in the plane and we'll send you

00:56:02.940 --> 00:56:02.950
back in the plane and we'll send you
 

00:56:02.950 --> 00:56:05.490
back in the plane and we'll send you
something seriously we will see yeah

00:56:05.490 --> 00:56:05.500
something seriously we will see yeah
 

00:56:05.500 --> 00:56:18.450
something seriously we will see yeah
cool yes please

00:56:18.450 --> 00:56:18.460
 

00:56:18.460 --> 00:56:24.130
yes yes yeah you should be yes so I mean

00:56:24.130 --> 00:56:24.140
yes yes yeah you should be yes so I mean
 

00:56:24.140 --> 00:56:26.740
yes yes yeah you should be yes so I mean
the big comment ability issues we had in

00:56:26.740 --> 00:56:26.750
the big comment ability issues we had in
 

00:56:26.750 --> 00:56:29.380
the big comment ability issues we had in
the past and to be fair was when a great

00:56:29.380 --> 00:56:29.390
the past and to be fair was when a great
 

00:56:29.390 --> 00:56:32.440
the past and to be fair was when a great
android plug-in was ODOT something so

00:56:32.440 --> 00:56:32.450
android plug-in was ODOT something so
 

00:56:32.450 --> 00:56:35.020
android plug-in was ODOT something so
they were deliberately right there

00:56:35.020 --> 00:56:35.030
they were deliberately right there
 

00:56:35.030 --> 00:56:37.420
they were deliberately right there
whereby the designs at a it's i mean it

00:56:37.420 --> 00:56:37.430
whereby the designs at a it's i mean it
 

00:56:37.430 --> 00:56:39.610
whereby the designs at a it's i mean it
was a long period until we got to one or

00:56:39.610 --> 00:56:39.620
was a long period until we got to one or
 

00:56:39.620 --> 00:56:41.380
was a long period until we got to one or
with the Gradle android plug-in but in

00:56:41.380 --> 00:56:41.390
with the Gradle android plug-in but in
 

00:56:41.390 --> 00:56:43.420
with the Gradle android plug-in but in
terms of the contract it was okay to

00:56:43.420 --> 00:56:43.430
terms of the contract it was okay to
 

00:56:43.430 --> 00:56:47.110
terms of the contract it was okay to
break right so but since one always out

00:56:47.110 --> 00:56:47.120
break right so but since one always out
 

00:56:47.120 --> 00:56:50.110
break right so but since one always out
I think it's extremely compatible with

00:56:50.110 --> 00:56:50.120
I think it's extremely compatible with
 

00:56:50.120 --> 00:56:52.900
I think it's extremely compatible with
with because we are extremely compatible

00:56:52.900 --> 00:56:52.910
with because we are extremely compatible
 

00:56:52.910 --> 00:56:57.490
with because we are extremely compatible
words compatible right so so this so

00:56:57.490 --> 00:56:57.500
words compatible right so so this so
 

00:56:57.500 --> 00:57:00.070
words compatible right so so this so
what they were doing before one oh they

00:57:00.070 --> 00:57:00.080
what they were doing before one oh they
 

00:57:00.080 --> 00:57:01.930
what they were doing before one oh they
were always they were always because we

00:57:01.930 --> 00:57:01.940
were always they were always because we
 

00:57:01.940 --> 00:57:04.180
were always they were always because we
work closely together I just said o to

00:57:04.180 --> 00:57:04.190
work closely together I just said o to
 

00:57:04.190 --> 00:57:05.860
work closely together I just said o to
make us really good we needed we need a

00:57:05.860 --> 00:57:05.870
make us really good we needed we need a
 

00:57:05.870 --> 00:57:07.660
make us really good we needed we need a
feature that is only in greater to all

00:57:07.660 --> 00:57:07.670
feature that is only in greater to all
 

00:57:07.670 --> 00:57:10.360
feature that is only in greater to all
or or in created to one right and so

00:57:10.360 --> 00:57:10.370
or or in created to one right and so
 

00:57:10.370 --> 00:57:12.010
or or in created to one right and so
therefore it didn't work the next

00:57:12.010 --> 00:57:12.020
therefore it didn't work the next
 

00:57:12.020 --> 00:57:13.210
therefore it didn't work the next
version of the android plug-in didn't

00:57:13.210 --> 00:57:13.220
version of the android plug-in didn't
 

00:57:13.220 --> 00:57:14.440
version of the android plug-in didn't
work with an older version of cradle

00:57:14.440 --> 00:57:14.450
work with an older version of cradle
 

00:57:14.450 --> 00:57:16.600
work with an older version of cradle
until they have reached one or where

00:57:16.600 --> 00:57:16.610
until they have reached one or where
 

00:57:16.610 --> 00:57:19.150
until they have reached one or where
they now invest more into backwards

00:57:19.150 --> 00:57:19.160
they now invest more into backwards
 

00:57:19.160 --> 00:57:21.310
they now invest more into backwards
compatibility right so but that was the

00:57:21.310 --> 00:57:21.320
compatibility right so but that was the
 

00:57:21.320 --> 00:57:23.230
compatibility right so but that was the
reason right Gradle itself is extremely

00:57:23.230 --> 00:57:23.240
reason right Gradle itself is extremely
 

00:57:23.240 --> 00:57:24.640
reason right Gradle itself is extremely
backwards compatible we have a massive

00:57:24.640 --> 00:57:24.650
backwards compatible we have a massive
 

00:57:24.650 --> 00:57:27.400
backwards compatible we have a massive
tests with 16,000 tests right and we run

00:57:27.400 --> 00:57:27.410
tests with 16,000 tests right and we run
 

00:57:27.410 --> 00:57:29.410
tests with 16,000 tests right and we run
it every night against all different

00:57:29.410 --> 00:57:29.420
it every night against all different
 

00:57:29.420 --> 00:57:34.150
it every night against all different
Java versions and and and against you

00:57:34.150 --> 00:57:34.160
Java versions and and and against you
 

00:57:34.160 --> 00:57:37.240
Java versions and and and against you
know cross version of cradle testing so

00:57:37.240 --> 00:57:37.250
know cross version of cradle testing so
 

00:57:37.250 --> 00:57:39.370
know cross version of cradle testing so
that's something that did where people

00:57:39.370 --> 00:57:39.380
that's something that did where people
 

00:57:39.380 --> 00:57:41.500
that's something that did where people
usually very happy with it is the only

00:57:41.500 --> 00:57:41.510
usually very happy with it is the only
 

00:57:41.510 --> 00:57:44.230
usually very happy with it is the only
reason why we can release so often if it

00:57:44.230 --> 00:57:44.240
reason why we can release so often if it
 

00:57:44.240 --> 00:57:47.950
reason why we can release so often if it
would break people in imagine a you know

00:57:47.950 --> 00:57:47.960
would break people in imagine a you know
 

00:57:47.960 --> 00:57:49.450
would break people in imagine a you know
a team like LinkedIn with two thousand

00:57:49.450 --> 00:57:49.460
a team like LinkedIn with two thousand
 

00:57:49.460 --> 00:57:51.070
a team like LinkedIn with two thousand
engineer's if you break them two times a

00:57:51.070 --> 00:57:51.080
engineer's if you break them two times a
 

00:57:51.080 --> 00:57:53.560
engineer's if you break them two times a
year to say well thank you very much

00:57:53.560 --> 00:57:53.570
year to say well thank you very much
 

00:57:53.570 --> 00:57:57.130
year to say well thank you very much
right then then it would stop upgrading

00:57:57.130 --> 00:57:57.140
right then then it would stop upgrading
 

00:57:57.140 --> 00:58:00.040
right then then it would stop upgrading
right so so that is we can only have

00:58:00.040 --> 00:58:00.050
right so so that is we can only have
 

00:58:00.050 --> 00:58:01.420
right so so that is we can only have
that speed if we have to quality in that

00:58:01.420 --> 00:58:01.430
that speed if we have to quality in that
 

00:58:01.430 --> 00:58:06.820
that speed if we have to quality in that
respect yeah okay enjoy the show thank

00:58:06.820 --> 00:58:06.830
respect yeah okay enjoy the show thank
 

00:58:06.830 --> 00:58:08.980
respect yeah okay enjoy the show thank
you

