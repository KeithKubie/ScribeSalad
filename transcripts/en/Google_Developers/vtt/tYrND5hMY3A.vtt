WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.610
[MUSIC PLAYING]

00:00:03.610 --> 00:00:05.330
BILL LUAN: Shanghai
GDG is a very

00:00:05.330 --> 00:00:07.410
interesting developer community.

00:00:07.410 --> 00:00:08.250
SUSANNAH RAUB: I'm
glad somebody

00:00:08.250 --> 00:00:09.330
has asked this question.

00:00:09.330 --> 00:00:10.765
RETO MEIER: This is where
the magic happens.

00:00:10.765 --> 00:00:12.415
JENNY MURPHY: This is primarily
a question and

00:00:12.415 --> 00:00:13.740
answer show, so if any
of you out there

00:00:13.740 --> 00:00:14.995
would like to ask questions.

00:00:20.320 --> 00:00:21.420
JAREK WILKIEWICZ:
Hello everyone.

00:00:21.420 --> 00:00:22.740
My name is Jarek Wilkiewicz.

00:00:22.740 --> 00:00:24.690
Welcome to you YouTube
Developers Live.

00:00:24.690 --> 00:00:27.310
We have an exciting show
for you today.

00:00:27.310 --> 00:00:30.320
In the studio with us
is Greg Schechter.

00:00:30.320 --> 00:00:31.302
How are you doing, Greg?

00:00:31.302 --> 00:00:32.688
GREG SCHECHTER: I'm
doing very well.

00:00:32.688 --> 00:00:33.370
How are you doing?

00:00:33.370 --> 00:00:34.330
JAREK WILKIEWICZ:
I'm doing good.

00:00:34.330 --> 00:00:38.620
Greg is our HTML5 developer at
YouTube, and he will talk

00:00:38.620 --> 00:00:42.730
about, not surprisingly,
HTML5 at YouTube.

00:00:42.730 --> 00:00:44.155
We have Jeremy Walker.

00:00:44.155 --> 00:00:44.670
JEREMY WALKER: Hello.

00:00:44.670 --> 00:00:45.970
JAREK WILKIEWICZ: How are
you doing, Jeremy?

00:00:45.970 --> 00:00:46.820
JEREMY WALKER: Pretty good.

00:00:46.820 --> 00:00:47.720
JAREK WILKIEWICZ: How's life?

00:00:47.720 --> 00:00:47.900
JEREMY WALKER: Good.

00:00:47.900 --> 00:00:49.460
I got a full night of
sleep last night.

00:00:49.460 --> 00:00:49.770
JAREK WILKIEWICZ: All right.

00:00:49.770 --> 00:00:51.060
Congratulations.

00:00:51.060 --> 00:00:52.870
We're going to have to keep
you down in your seat.

00:00:52.870 --> 00:00:55.295
All that energy level, I think
it's coming through.

00:00:55.295 --> 00:00:57.490
JEREMY WALKER: Yeah, my four
month finally slept through

00:00:57.490 --> 00:00:58.280
the night, so--

00:00:58.280 --> 00:00:59.063
JAREK WILKIEWICZ: Wow,
that's a milestone.

00:00:59.063 --> 00:00:59.930
JEREMY WALKER: I'm
pretty stoked.

00:00:59.930 --> 00:01:01.520
JAREK WILKIEWICZ: And
then live from New

00:01:01.520 --> 00:01:03.946
York, Jeffrey Posnick.

00:01:03.946 --> 00:01:05.770
What up, Jeff?

00:01:05.770 --> 00:01:06.830
JEFFREY POSNICK:
How's it going?

00:01:06.830 --> 00:01:07.100
JAREK WILKIEWICZ: Good.

00:01:07.100 --> 00:01:08.950
How are you doing?

00:01:08.950 --> 00:01:10.300
JEFFREY POSNICK: Pretty good.

00:01:10.300 --> 00:01:13.990
Haven't quite fought off my cold
yet, but I'll do my best

00:01:13.990 --> 00:01:17.400
to keep the coughing to
a minimum as always.

00:01:17.400 --> 00:01:18.790
JAREK WILKIEWICZ: Still
summer in New York,

00:01:18.790 --> 00:01:20.520
or is it fall yet?

00:01:20.520 --> 00:01:23.620
JEFFREY POSNICK: It's actually a
lovely period before it gets

00:01:23.620 --> 00:01:26.960
too cold, and not quite
as hot as it has been.

00:01:26.960 --> 00:01:28.630
So very, very nice.

00:01:28.630 --> 00:01:29.370
JAREK WILKIEWICZ: Cool.

00:01:29.370 --> 00:01:32.890
Later on in the show, Jeff is
going to discuss our upcoming

00:01:32.890 --> 00:01:35.040
migration tool, Stack
Overflow.

00:01:35.040 --> 00:01:39.210
We are not going anywhere, but
the way you will get your

00:01:39.210 --> 00:01:41.750
support questions answered
is going to change.

00:01:41.750 --> 00:01:44.630
And Jeff has worked on that over
the last couple of weeks.

00:01:44.630 --> 00:01:47.800
He will give us an update of
what's happening there.

00:01:47.800 --> 00:01:52.610
But first, let's turn it over to
Greg, and talk a little bit

00:01:52.610 --> 00:01:56.410
about his experience at
YouTube and HTML5.

00:01:56.410 --> 00:02:00.520
So first question is, how long
have you been at YouTube, and

00:02:00.520 --> 00:02:01.890
what do you do there?

00:02:01.890 --> 00:02:04.650
GREG SCHECHTER: So I've been at
YouTube for about two and a

00:02:04.650 --> 00:02:05.640
half years now.

00:02:05.640 --> 00:02:10.770
And I like to call myself the
web warrior at YouTube.

00:02:10.770 --> 00:02:14.830
And specifically, I spend most
of my time working on the

00:02:14.830 --> 00:02:17.140
HTML5 player and other
HTML5 related

00:02:17.140 --> 00:02:19.480
things around the site.

00:02:19.480 --> 00:02:22.970
JAREK WILKIEWICZ: So what do
you like about working on

00:02:22.970 --> 00:02:25.270
YouTube and working
on HTML5 player?

00:02:25.270 --> 00:02:29.870
GREG SCHECHTER: So YouTube
is pretty amazing.

00:02:29.870 --> 00:02:32.930
And a lot of it is just because
it's such a-- there's

00:02:32.930 --> 00:02:37.330
so many awesome cat videos that
I get to watch at work.

00:02:37.330 --> 00:02:40.620
But I get to work on bleeding
edge technologies.

00:02:40.620 --> 00:02:43.270
This stuff is all changing
every day.

00:02:43.270 --> 00:02:45.470
I'm working with a lot of the
browser vendors to really

00:02:45.470 --> 00:02:48.540
change the web.

00:02:48.540 --> 00:02:51.630
And not only just for people
who are watching videos.

00:02:51.630 --> 00:02:56.360
But some of the things that
I work on do help HTML5 in

00:02:56.360 --> 00:02:58.420
general, and moving the web
forward, making new APIs.

00:02:58.420 --> 00:03:00.200
And this is very exciting
for me and it's a lot

00:03:00.200 --> 00:03:01.840
of fun to work on.

00:03:01.840 --> 00:03:03.460
JAREK WILKIEWICZ: So as
a web warrior, who

00:03:03.460 --> 00:03:06.300
do you get to fight?

00:03:06.300 --> 00:03:08.610
GREG SCHECHTER: Most the time,
my battle is against those

00:03:08.610 --> 00:03:09.710
flash developers.

00:03:09.710 --> 00:03:12.615
I'm sorry if there's any out
there in the audience.

00:03:12.615 --> 00:03:13.920
JAREK WILKIEWICZ: We kept
them out today.

00:03:13.920 --> 00:03:14.670
GREG SCHECHTER: OK, good.

00:03:14.670 --> 00:03:15.550
JAREK WILKIEWICZ: I think we
have to do that in the

00:03:15.550 --> 00:03:16.800
following session.

00:03:18.880 --> 00:03:21.730
GREG SCHECHTER: So at YouTube,
one of the big battles with

00:03:21.730 --> 00:03:25.685
our player is, do we serve HTML5
or do we serve Flash.

00:03:25.685 --> 00:03:32.080
And Flash is this experienced
player.

00:03:32.080 --> 00:03:34.090
And HTML5 is the
new young guy.

00:03:34.090 --> 00:03:37.180
It's sort of a David and
Goliath situation.

00:03:37.180 --> 00:03:40.520
Although I think Flash isn't
really Goliath anymore.

00:03:40.520 --> 00:03:44.620
But that's the main battle,
is kicking those

00:03:44.620 --> 00:03:45.260
Flash player guys--

00:03:45.260 --> 00:03:46.210
JAREK WILKIEWICZ: I bet
that gets pretty

00:03:46.210 --> 00:03:47.350
tiring after a while.

00:03:47.350 --> 00:03:49.040
Does it?

00:03:49.040 --> 00:03:49.535
GREG SCHECHTER: Sometimes.

00:03:49.535 --> 00:03:52.240
JAREK WILKIEWICZ: So what do you
do in your free time when

00:03:52.240 --> 00:03:54.610
you need to recharge?

00:03:54.610 --> 00:03:57.400
GREG SCHECHTER: In my free
time, I actually--

00:03:57.400 --> 00:03:59.760
I do a lot of nature things.

00:03:59.760 --> 00:04:02.960
I do a lot of bird watching.

00:04:02.960 --> 00:04:06.150
I find weird salamanders and
stuff all over the place.

00:04:06.150 --> 00:04:08.160
I take a lot of pictures
and stuff.

00:04:08.160 --> 00:04:10.980
I actually have some of my
photography to share.

00:04:10.980 --> 00:04:13.690
JAREK WILKIEWICZ: Oh, great,
yeah, let's look at that.

00:04:13.690 --> 00:04:16.649
I think we're sharing them
here in the studio.

00:04:16.649 --> 00:04:17.490
GREG SCHECHTER: So let's see.

00:04:17.490 --> 00:04:19.579
The first one we have
here, this is one

00:04:19.579 --> 00:04:22.940
of my favorite pictures.

00:04:22.940 --> 00:04:24.340
It's a green-eyed tree
frog and it's

00:04:24.340 --> 00:04:26.400
eating a Huntsman spider.

00:04:26.400 --> 00:04:30.830
And I love how the little legs
are sticking out of its mouth.

00:04:30.830 --> 00:04:33.050
I was really happy
with that shot.

00:04:33.050 --> 00:04:37.520
One of the other ones I have
that is also pretty cool is a

00:04:37.520 --> 00:04:38.650
nudibranch.

00:04:38.650 --> 00:04:42.550
And this one is just a really
weird creature.

00:04:42.550 --> 00:04:44.630
And I found this Australia.

00:04:44.630 --> 00:04:48.170
But I love this picture so much
that it's the background

00:04:48.170 --> 00:04:51.000
on my Android phone.

00:04:51.000 --> 00:04:53.530
And so the next picture I have
is, this is more my bird

00:04:53.530 --> 00:04:54.170
watching thing.

00:04:54.170 --> 00:04:58.970
And wanted to have some that
were local to the Bay Area,

00:04:58.970 --> 00:05:00.260
since that's where I live.

00:05:00.260 --> 00:05:02.190
And so this one I thought
was great.

00:05:02.190 --> 00:05:06.000
This is a white-throated sparrow
that I found near

00:05:06.000 --> 00:05:07.010
Santa Cruz.

00:05:07.010 --> 00:05:10.240
And it's just in the
reeds there.

00:05:10.240 --> 00:05:11.110
It's just really pretty.

00:05:11.110 --> 00:05:13.620
And I really like how the
colors came out with the

00:05:13.620 --> 00:05:14.870
yellow in its eyes.

00:05:17.710 --> 00:05:20.790
So the next picture, this
one was really cool.

00:05:20.790 --> 00:05:22.780
This was a little bit further
south, in Morro Bay.

00:05:22.780 --> 00:05:26.380
But I've got a horned
grebe eating a fish.

00:05:26.380 --> 00:05:27.950
And it was this nice
action shot.

00:05:27.950 --> 00:05:30.680
And I had a bunch of shots
in this series.

00:05:30.680 --> 00:05:35.680
And the last one was actually
really close to Mountain View.

00:05:35.680 --> 00:05:37.210
This was just in the
Palo Alto Baylands.

00:05:37.210 --> 00:05:41.140
And so this is a lovely Anna's
Hummingbird showing off its

00:05:41.140 --> 00:05:44.230
nice gorget and the nice pink.

00:05:44.230 --> 00:05:48.140
And yeah, so that's
also a great one.

00:05:48.140 --> 00:05:48.940
JEFFREY POSNICK: That's
pretty nice.

00:05:48.940 --> 00:05:51.960
JEREMY WALKER: That's
really pretty.

00:05:51.960 --> 00:05:56.420
Now, to step aside, you've done
Google I/O presentations

00:05:56.420 --> 00:05:57.625
the last two years, right?

00:05:57.625 --> 00:05:58.080
GREG SCHECHTER: Yeah.

00:05:58.080 --> 00:06:01.820
JEREMY WALKER: So what's changed
in web development or

00:06:01.820 --> 00:06:05.650
YouTube since your first
presentation to your second

00:06:05.650 --> 00:06:06.350
presentation?

00:06:06.350 --> 00:06:07.600
GREG SCHECHTER: Sure.

00:06:07.600 --> 00:06:12.400
So I think some of the biggest
changes that I've seen are

00:06:12.400 --> 00:06:14.210
actually around the
mobile space.

00:06:14.210 --> 00:06:15.950
And my talk--

00:06:15.950 --> 00:06:17.130
that sort of--

00:06:17.130 --> 00:06:19.220
I do HTML5 things.

00:06:19.220 --> 00:06:22.220
And the biggest difference
between the first talk that I

00:06:22.220 --> 00:06:26.910
gave and the second talk
is the focus on mobile.

00:06:26.910 --> 00:06:31.310
And more people are getting
smartphones and tablets.

00:06:31.310 --> 00:06:34.310
And it's really becoming
something that web developers

00:06:34.310 --> 00:06:37.460
need to think about when they're
building a product.

00:06:37.460 --> 00:06:40.650
JEREMY WALKER: So your 2012
was mostly focused on the

00:06:40.650 --> 00:06:41.350
mobile side?

00:06:41.350 --> 00:06:42.070
GREG SCHECHTER: Yeah.

00:06:42.070 --> 00:06:46.800
The talk was HTML5 at YouTube,
stories from the mobile front.

00:06:46.800 --> 00:06:52.540
And the idea was basically to
show all the stuff that we're

00:06:52.540 --> 00:06:57.580
doing HTML5 related, and talk
about best practices, and how

00:06:57.580 --> 00:07:00.440
a lot of those things are really
important to mobile.

00:07:00.440 --> 00:07:03.210
And how in the past,
you can't--

00:07:03.210 --> 00:07:05.840
you have to use plug-ins--

00:07:05.840 --> 00:07:08.800
for example, Flash-- to watch
video, or even Flash to do a

00:07:08.800 --> 00:07:10.430
lot of your uploads.

00:07:10.430 --> 00:07:16.290
But now with HTML5 being
available, you can make a

00:07:16.290 --> 00:07:17.650
richer experience.

00:07:17.650 --> 00:07:20.670
And then it's also going to work
on mobile, and with that

00:07:20.670 --> 00:07:23.900
being such an emerging place for
development, it's that's

00:07:23.900 --> 00:07:28.500
really important that you also
have all that development--

00:07:28.500 --> 00:07:31.210
that the time that you put in to
develop also contributes to

00:07:31.210 --> 00:07:33.990
your mobile products.

00:07:33.990 --> 00:07:34.640
JEREMY WALKER: That's awesome.

00:07:34.640 --> 00:07:38.380
I hear there's some things in
the deck quite often, if I'm

00:07:38.380 --> 00:07:41.470
not mistaken, that you
enjoy on YouTube.

00:07:41.470 --> 00:07:43.100
The feline persuasion.

00:07:43.100 --> 00:07:44.090
GREG SCHECHTER: Of course.

00:07:44.090 --> 00:07:46.362
I got a lot of--

00:07:46.362 --> 00:07:48.920
I'm a big fan of cat videos.

00:07:48.920 --> 00:07:49.940
And certainly there's a lot.

00:07:49.940 --> 00:07:54.880
In my talk, there's plenty of
cat references, and famous

00:07:54.880 --> 00:07:56.660
YouTube references there.

00:07:56.660 --> 00:07:57.410
JEREMY WALKER: Yeah,
I watched that.

00:07:57.410 --> 00:07:58.210
It was pretty funny.

00:07:58.210 --> 00:07:59.820
I really enjoyed it.

00:07:59.820 --> 00:08:00.320
GREG SCHECHTER: I'm glad
you enjoyed it.

00:08:00.320 --> 00:08:02.460
JAREK WILKIEWICZ: And we
will post a link to the

00:08:02.460 --> 00:08:06.460
presentation on our stream,
YouTube Developers, in case

00:08:06.460 --> 00:08:09.610
you have missed a session
at Google I/O.

00:08:09.610 --> 00:08:12.840
Couple of questions about
your session and

00:08:12.840 --> 00:08:14.540
mobile web in general.

00:08:14.540 --> 00:08:17.420
So I have noticed you have a lot
of web browsers installed

00:08:17.420 --> 00:08:18.170
on your phone.

00:08:18.170 --> 00:08:19.140
How many?

00:08:19.140 --> 00:08:23.250
GREG SCHECHTER: So I think at
the moment there's nine.

00:08:23.250 --> 00:08:26.330
And to be fair, some of those
are different versions.

00:08:26.330 --> 00:08:30.720
So I have both the Chrome
browser and the Android

00:08:30.720 --> 00:08:31.650
browser installed.

00:08:31.650 --> 00:08:36.299
I've got Firefox mobile,
Firefox mini, Fire--

00:08:36.299 --> 00:08:44.235
sorry, Firefox Mobile, Beta,
Alpha, Aurora, and Opera Mini

00:08:44.235 --> 00:08:46.700
and Opera Mobile,
and Opera Next.

00:08:46.700 --> 00:08:50.000
And then every now and then,
I'll even end up installing

00:08:50.000 --> 00:08:54.250
one of the lesser known ones
like Dolphin, for testing and

00:08:54.250 --> 00:08:56.390
making sure things are
working properly.

00:08:56.390 --> 00:08:57.950
JAREK WILKIEWICZ: You think that
should be the standard

00:08:57.950 --> 00:08:59.590
practice for application
developers

00:08:59.590 --> 00:09:00.560
targeting mobile web?

00:09:00.560 --> 00:09:03.430
Or why do you do that?

00:09:03.430 --> 00:09:06.530
Is it just for fun, or are there
any significant feature

00:09:06.530 --> 00:09:09.110
differences between
these browsers?

00:09:09.110 --> 00:09:10.860
GREG SCHECHTER: It's a little
bit of everything.

00:09:10.860 --> 00:09:15.020
So certainly being a web
developer, it's actually quite

00:09:15.020 --> 00:09:17.850
common that I never have
just one browser open.

00:09:17.850 --> 00:09:21.740
I'm always jumping in and
seeing the new features.

00:09:21.740 --> 00:09:25.190
But that's because I enjoy it.

00:09:25.190 --> 00:09:27.330
For developers, I think it's
very important to know what

00:09:27.330 --> 00:09:29.890
kind of user experience your
users are getting.

00:09:29.890 --> 00:09:32.800
And so by me having all these
different browsers on my

00:09:32.800 --> 00:09:36.250
phone, I'm able to constantly
look to see what's YouTube

00:09:36.250 --> 00:09:39.190
like on Firefox, what's
it like on Chrome,

00:09:39.190 --> 00:09:40.410
what's it like on Opera.

00:09:40.410 --> 00:09:43.300
And I can understand how these
different browsers work.

00:09:43.300 --> 00:09:48.060
And also, for me, I do talk a
lot with the different browser

00:09:48.060 --> 00:09:50.930
vendors, and I'll report bugs
back to them so that I can

00:09:50.930 --> 00:09:55.710
make sure that YouTube is
working properly for everyone.

00:09:55.710 --> 00:09:59.970
And I mean, it's pretty low
cost to install all these

00:09:59.970 --> 00:10:02.840
browsers on my phone.

00:10:02.840 --> 00:10:04.120
Most of them are in
the app store.

00:10:04.120 --> 00:10:07.870
And the ones that aren't, update
really easily if you

00:10:07.870 --> 00:10:12.280
just pull them up from
one of the websites.

00:10:12.280 --> 00:10:14.340
But yeah, so it's pretty simple,
and it's definitely

00:10:14.340 --> 00:10:17.730
something that's helped me get a
better understanding of what

00:10:17.730 --> 00:10:19.890
the mobile environment looks
like on all the different

00:10:19.890 --> 00:10:21.650
platforms and all the different
ways that users

00:10:21.650 --> 00:10:24.680
might be experiencing YouTube.

00:10:24.680 --> 00:10:29.270
JAREK WILKIEWICZ: So there's a
lot of talk about mobile apps,

00:10:29.270 --> 00:10:31.830
native apps for mobile.

00:10:31.830 --> 00:10:36.290
And the question that I have
in my mind is, in your

00:10:36.290 --> 00:10:38.740
opinion, which types
of apps benefit the

00:10:38.740 --> 00:10:40.360
most from mobile web?

00:10:40.360 --> 00:10:43.840
What are the apps that are
well-suited for mobile

00:10:43.840 --> 00:10:46.670
web-based implementation?

00:10:46.670 --> 00:10:53.950
GREG SCHECHTER: So I really
think that any app can do well

00:10:53.950 --> 00:10:55.810
with HTML5 on mobile.

00:10:55.810 --> 00:10:58.430
I think that it's probably most
compelling for a site

00:10:58.430 --> 00:11:01.200
that also has a desktop
experience.

00:11:01.200 --> 00:11:03.980
Because what you have there is
you have code that you would

00:11:03.980 --> 00:11:07.000
share between your desktop
environment and your mobile

00:11:07.000 --> 00:11:10.400
environment and maybe even
your-- if for whatever reason,

00:11:10.400 --> 00:11:12.010
you're putting it
on a TV as well.

00:11:12.010 --> 00:11:15.910
And it's really easy to make
sure that your code works the

00:11:15.910 --> 00:11:19.100
same, and you don't have to
rewrite things in a new

00:11:19.100 --> 00:11:20.590
language or something.

00:11:20.590 --> 00:11:22.850
Everything will convert onto
mobile pretty simply.

00:11:22.850 --> 00:11:24.310
Of course, you do have
to make changes.

00:11:24.310 --> 00:11:26.300
The interface has
to be different.

00:11:26.300 --> 00:11:28.910
Make sure that touch
is working.

00:11:28.910 --> 00:11:33.190
But as far as some of the core
structures, like how you would

00:11:33.190 --> 00:11:37.640
serve a video or do AJAX
calls and all that,

00:11:37.640 --> 00:11:38.690
that's all the same.

00:11:38.690 --> 00:11:41.600
That's not going to change if
you're on mobile or if you're

00:11:41.600 --> 00:11:43.180
on your desktop.

00:11:43.180 --> 00:11:45.550
So that's certainly
something that--

00:11:45.550 --> 00:11:48.640
anybody who has to support both,
it's certainly going to

00:11:48.640 --> 00:11:51.810
save them a lot of development
time if they don't have to

00:11:51.810 --> 00:11:54.660
basically reinvent all their
code in both places.

00:11:54.660 --> 00:11:56.770
JAREK WILKIEWICZ: Which features
do you think are

00:11:56.770 --> 00:12:00.600
still missing, and are high
priority, when it comes to

00:12:00.600 --> 00:12:03.825
HTML5 support, for mobile
and maybe even

00:12:03.825 --> 00:12:04.830
for desktop as well?

00:12:04.830 --> 00:12:06.080
GREG SCHECHTER: Sure.

00:12:07.850 --> 00:12:11.620
At least for mobile, I spend
most of my time doing video

00:12:11.620 --> 00:12:12.080
development.

00:12:12.080 --> 00:12:15.080
And I think there's actually
a lot missing there,

00:12:15.080 --> 00:12:16.330
specifically on phones.

00:12:18.770 --> 00:12:21.460
We have sort of two
main issues.

00:12:21.460 --> 00:12:24.960
One is the screen size
is very small.

00:12:24.960 --> 00:12:28.660
And so we haven't really been
able to optimize our controls

00:12:28.660 --> 00:12:32.140
to deal with when your player
is just very, very tiny, and

00:12:32.140 --> 00:12:34.910
it's hard to click on, and you
don't have enough room for

00:12:34.910 --> 00:12:36.830
your fingers to interact.

00:12:36.830 --> 00:12:38.660
But on top of that, a lot
of times the full screen

00:12:38.660 --> 00:12:42.250
experience is out of the
developer's controls and just

00:12:42.250 --> 00:12:44.380
goes native playback.

00:12:44.380 --> 00:12:47.600
And so all this richness that we
add to our YouTube videos--

00:12:47.600 --> 00:12:52.280
whether that be annotations,
or captions,

00:12:52.280 --> 00:12:53.900
or even a 3D effect--

00:12:53.900 --> 00:12:56.420
we lose that power
and that ability

00:12:56.420 --> 00:12:58.220
to make these features.

00:12:58.220 --> 00:13:00.710
And so this is, I think,
something that's really

00:13:00.710 --> 00:13:02.750
lacking in the mobile
environment, is being able to

00:13:02.750 --> 00:13:06.890
have that richness that we saw
on the desktop for video on

00:13:06.890 --> 00:13:08.030
mobile as well.

00:13:08.030 --> 00:13:09.770
JAREK WILKIEWICZ: Is this
something that is being

00:13:09.770 --> 00:13:12.600
tackled by browser vendors
or standards right now?

00:13:12.600 --> 00:13:13.850
GREG SCHECHTER: Absolutely.

00:13:16.270 --> 00:13:18.640
Some of it is, and
some of it isn't.

00:13:18.640 --> 00:13:20.640
One of the things that
I've actually worked

00:13:20.640 --> 00:13:25.960
on recently is WebVTT.

00:13:25.960 --> 00:13:28.740
WebVTT is a standard
for captions.

00:13:28.740 --> 00:13:33.460
And so with this new HTML5 track
element, we can have

00:13:33.460 --> 00:13:36.355
native browser rendering of
our closed captioning.

00:13:39.080 --> 00:13:41.650
And so this is great, because
that's one of our features.

00:13:41.650 --> 00:13:44.910
That's really important for
people, especially for

00:13:44.910 --> 00:13:46.000
accessibility.

00:13:46.000 --> 00:13:49.190
I'm often in a crowded place,
and I can't necessarily--

00:13:49.190 --> 00:13:50.290
maybe I forgot my headphones.

00:13:50.290 --> 00:13:51.160
I can't hear it.

00:13:51.160 --> 00:13:54.140
And I would still find
a lot of use for it.

00:13:54.140 --> 00:13:56.250
So this will allow us to do--

00:13:56.250 --> 00:13:59.520
the browser to do it natively,
and it to work on all these

00:13:59.520 --> 00:14:02.790
different mobile places.

00:14:02.790 --> 00:14:05.540
I'm excited when that
will finally launch.

00:14:05.540 --> 00:14:06.950
JAREK WILKIEWICZ: So it sounds
like some of the features will

00:14:06.950 --> 00:14:09.060
basically move into the browser,
so there's no need

00:14:09.060 --> 00:14:12.540
for the developer to implement
it as some sort of an overlay.

00:14:12.540 --> 00:14:15.080
GREG SCHECHTER: Certainly
there's a less of a need.

00:14:15.080 --> 00:14:17.970
Now, things like annotations at
YouTube, we'll still need

00:14:17.970 --> 00:14:20.970
to do that, because that's
specific to us.

00:14:20.970 --> 00:14:25.560
But some of the more general
things that we think all video

00:14:25.560 --> 00:14:28.320
should have, like closed
captioning, will be integrated

00:14:28.320 --> 00:14:31.780
more and more with the browser
as time goes on.

00:14:31.780 --> 00:14:32.160
JAREK WILKIEWICZ: Great.

00:14:32.160 --> 00:14:36.480
So how happy are you with what
has happened over the last

00:14:36.480 --> 00:14:39.730
year, over the last two years,
three years, in this space as

00:14:39.730 --> 00:14:42.860
far as the velocity
of that progress?

00:14:42.860 --> 00:14:45.160
This kind of goes back to
Jeremy's question about what

00:14:45.160 --> 00:14:48.760
has changed between the I/O
2011 presentation that you

00:14:48.760 --> 00:14:52.250
gave about our iframe embed and
the iframe API, and the

00:14:52.250 --> 00:14:54.300
2012 experience about mobile.

00:14:54.300 --> 00:14:56.720
| mean, clearly mobile
is accelerating.

00:14:56.720 --> 00:14:59.620
And YouTube, we have recently
announced that we've hit a

00:14:59.620 --> 00:15:03.920
billion views per day, which
is a staggering number.

00:15:03.920 --> 00:15:06.490
But from a technology
standpoint, a browser support

00:15:06.490 --> 00:15:09.060
standpoint, is the progress
fast enough?

00:15:09.060 --> 00:15:12.400
Is there things that you think
should be done differently?

00:15:12.400 --> 00:15:14.980
And what can the developers
do to help accelerate it?

00:15:14.980 --> 00:15:16.000
GREG SCHECHTER: Sure.

00:15:16.000 --> 00:15:18.120
So I've got mixed
feelings on it.

00:15:22.610 --> 00:15:25.050
Mobile has a lot of issues
at the moment.

00:15:25.050 --> 00:15:27.750
And I look at this mostly
with video.

00:15:27.750 --> 00:15:32.460
And the differences between--
there's so many differences

00:15:32.460 --> 00:15:34.500
between each browser, how they
do different things, what

00:15:34.500 --> 00:15:37.630
controls they show.

00:15:37.630 --> 00:15:39.830
Can you control the
playback speed?

00:15:39.830 --> 00:15:40.700
Does autoplay work?

00:15:40.700 --> 00:15:41.810
And there's all these
differences.

00:15:41.810 --> 00:15:46.390
And it's really difficult as
a developer to build a rich

00:15:46.390 --> 00:15:49.250
experience when I don't
necessarily know how the

00:15:49.250 --> 00:15:50.930
browser is going to work.

00:15:50.930 --> 00:15:52.160
And the fact that it's
much different

00:15:52.160 --> 00:15:54.270
than the desktop space.

00:15:54.270 --> 00:15:57.960
And we also see that some of
these mobile browsers aren't

00:15:57.960 --> 00:15:59.970
quite on par with the
desktop experience.

00:16:03.050 --> 00:16:05.820
For example, it took
us a really long

00:16:05.820 --> 00:16:07.870
time to launch Chrome.

00:16:07.870 --> 00:16:11.040
The Android browser was
different, it was out of date,

00:16:11.040 --> 00:16:13.020
and we didn't have a lot of the
richness that we saw on

00:16:13.020 --> 00:16:14.050
the desktop.

00:16:14.050 --> 00:16:17.060
Once we got Chrome, that
closed the gap a lot.

00:16:17.060 --> 00:16:19.710
But there's still a lot that
needs to be done to match the

00:16:19.710 --> 00:16:23.280
richness that we see
on the desktop.

00:16:23.280 --> 00:16:25.800
Now on the other hand, I
actually think that Firefox

00:16:25.800 --> 00:16:27.910
has been doing a great job.

00:16:27.910 --> 00:16:32.110
They've been promoting mobile a
lot with their Boot to Gecko

00:16:32.110 --> 00:16:35.260
stuff, and really trying to make
sure that is the central

00:16:35.260 --> 00:16:36.620
platform for things.

00:16:36.620 --> 00:16:40.820
And in the past year, they've
released a lot of new APIs to

00:16:40.820 --> 00:16:45.450
deal with the fact that
the mobile is sort

00:16:45.450 --> 00:16:46.670
of a primary device.

00:16:46.670 --> 00:16:49.570
And so they've released things
like being able to do

00:16:49.570 --> 00:16:54.120
vibration, just with the
JS API, detect ambient

00:16:54.120 --> 00:16:55.330
light and all that.

00:16:55.330 --> 00:16:58.920
And I think that they're really
moving quickly and

00:16:58.920 --> 00:17:02.120
adding that richness to make
it even a richer experience

00:17:02.120 --> 00:17:04.589
than you have on a desktop.

00:17:04.589 --> 00:17:08.410
So I would like to see some of
the other browsers step up and

00:17:08.410 --> 00:17:10.150
do as much as they are.

00:17:10.150 --> 00:17:14.140
But of course, it's a lot
of work to get all this

00:17:14.140 --> 00:17:16.640
awesomeness into the mobile.

00:17:16.640 --> 00:17:18.460
JAREK WILKIEWICZ: What's your
development environment like?

00:17:18.460 --> 00:17:22.160
What tools do you use for your
hacking and free time, what

00:17:22.160 --> 00:17:23.319
frameworks do you like?

00:17:23.319 --> 00:17:25.599
Tell us a little bit more
about how you work.

00:17:25.599 --> 00:17:26.540
GREG SCHECHTER: Yeah.

00:17:26.540 --> 00:17:28.369
So I spend--

00:17:28.369 --> 00:17:28.970
I mean I work.

00:17:28.970 --> 00:17:33.060
I spend most of my time in
Vim in a simple terminal.

00:17:33.060 --> 00:17:40.440
And as far as what frameworks I
use in my free time, I love

00:17:40.440 --> 00:17:41.390
JavaScript libraries.

00:17:41.390 --> 00:17:47.240
And being a hard core JavaScript
guy, I spend most

00:17:47.240 --> 00:17:48.770
of my time working
on the client.

00:17:48.770 --> 00:17:55.140
And recently I've been doing a
lot of jQuery, but I'm a die

00:17:55.140 --> 00:18:00.120
hard YUI fan when I can.

00:18:00.120 --> 00:18:03.450
I used to work at Yahoo in the
past, and I know a lot of the

00:18:03.450 --> 00:18:03.880
guys there.

00:18:03.880 --> 00:18:05.370
I think that they've built
a really great project.

00:18:09.280 --> 00:18:14.560
I'll do either jQuery
or YUI on my own.

00:18:14.560 --> 00:18:16.920
Yeah, you know, it's really
pretty simple, just terminal

00:18:16.920 --> 00:18:19.630
stuff, nothing too
complicated.

00:18:19.630 --> 00:18:22.510
JAREK WILKIEWICZ: Cool.

00:18:22.510 --> 00:18:24.060
JEREMY WALKER: Out of curiosity,
do you write your

00:18:24.060 --> 00:18:26.990
own code for checking HTML5
stuff, or do you use something

00:18:26.990 --> 00:18:29.670
like Modernizr?

00:18:29.670 --> 00:18:30.920
GREG SCHECHTER: I often
write my own stuff.

00:18:34.080 --> 00:18:36.610
At YouTube, we're always really
concerned about making

00:18:36.610 --> 00:18:38.500
sure that our JavaScript is
as minimal as possible.

00:18:41.770 --> 00:18:45.220
Depending on the situation, we
might already know ahead of

00:18:45.220 --> 00:18:49.850
time that we're going to be in a
HTML5 supported environment,

00:18:49.850 --> 00:18:53.650
so we won't necessarily do all
the check-in that Modernizr

00:18:53.650 --> 00:18:56.855
does, because we can make it
smaller and just not need all

00:18:56.855 --> 00:18:58.050
that extra code.

00:18:58.050 --> 00:19:00.650
So we normally do
it on our own.

00:19:00.650 --> 00:19:02.930
JEREMY WALKER: So for a third
party developer, would you

00:19:02.930 --> 00:19:05.370
suggest they write their own, or
would you suggest they use

00:19:05.370 --> 00:19:06.790
something like that?

00:19:06.790 --> 00:19:07.310
GREG SCHECHTER: I would suggest

00:19:07.310 --> 00:19:10.320
that they use Modernizr.

00:19:10.320 --> 00:19:13.190
I don't think they should
necessarily waste their time

00:19:13.190 --> 00:19:15.020
writing it themself when
somebody else did it, and did

00:19:15.020 --> 00:19:17.410
it well already.

00:19:17.410 --> 00:19:22.200
Some of the stuff that we're
doing isn't released yet.

00:19:22.200 --> 00:19:26.330
So the stuff I was mentioning
earlier about the track tag,

00:19:26.330 --> 00:19:31.170
at the moment you can try that
out, but it's hidden behind a

00:19:31.170 --> 00:19:34.450
flag in Chrome, and it's only
in the Opera Next build.

00:19:34.450 --> 00:19:41.190
And so the feature detection
there hasn't made it to the

00:19:41.190 --> 00:19:43.580
frameworks yet, because
it's not live.

00:19:43.580 --> 00:19:46.070
So we have to build these
things, because we're testing

00:19:46.070 --> 00:19:49.870
them and helping those browser
vendors move forward with

00:19:49.870 --> 00:19:51.230
their things.

00:19:51.230 --> 00:19:54.840
But not everybody needs to spend
the time doing that.

00:19:54.840 --> 00:19:56.380
JAREK WILKIEWICZ: Another
question that frequently comes

00:19:56.380 --> 00:20:01.630
up is, if I use YouTube, when
do I get the HTML5 player?

00:20:01.630 --> 00:20:04.140
How can I get the HTML5 player,
and kind of, what is

00:20:04.140 --> 00:20:06.860
the logic. how is that
implemented that decides is it

00:20:06.860 --> 00:20:09.170
going to be Flash, is it
going to be HTML5?

00:20:09.170 --> 00:20:10.870
Can I use HTML5 for
my testing?

00:20:10.870 --> 00:20:13.190
Can I force HTML5?

00:20:13.190 --> 00:20:17.690
Any hints of how that works and
what the developer should

00:20:17.690 --> 00:20:21.480
do if they really want to
experiment with HTML5 support?

00:20:21.480 --> 00:20:25.020
GREG SCHECHTER: So my hope is
that we can get all the videos

00:20:25.020 --> 00:20:27.650
on HTML5, and that'll be
the default experience.

00:20:27.650 --> 00:20:29.230
We're not quite there yet.

00:20:29.230 --> 00:20:33.180
Flash has just a couple core
features that we don't yet

00:20:33.180 --> 00:20:36.590
have the capabilities to
do in the HTML5 world.

00:20:36.590 --> 00:20:38.800
So once that changes, hopefully
we'll be able to get

00:20:38.800 --> 00:20:41.430
HTML5 out as the default
experience.

00:20:41.430 --> 00:20:46.810
Until then, the easiest way
to get HTML5 is to go to

00:20:46.810 --> 00:20:51.490
www.youtube.com/html5, and you
can opt in to the experiment.

00:20:51.490 --> 00:20:55.400
And then, assuming that you're
watching a video that supports

00:20:55.400 --> 00:20:58.120
all of the--

00:20:58.120 --> 00:21:00.400
where our HTML5 player supports
all the features that

00:21:00.400 --> 00:21:02.610
we need for that video,
we'll give you HTML5.

00:21:02.610 --> 00:21:05.400
JAREK WILKIEWICZ: Does the opt
in stay with the browser from

00:21:05.400 --> 00:21:09.160
which I opted in, or is it
associated with my account?

00:21:09.160 --> 00:21:11.350
How does it work?

00:21:11.350 --> 00:21:12.750
GREG SCHECHTER: It's cookie
based, so it's going to be

00:21:12.750 --> 00:21:15.960
just with that browser,
with that sess--

00:21:15.960 --> 00:21:18.720
with that machine.

00:21:18.720 --> 00:21:20.730
JAREK WILKIEWICZ: And will that
apply to embeds as well,

00:21:20.730 --> 00:21:21.850
or just for YouTube.com?

00:21:21.850 --> 00:21:25.660
GREG SCHECHTER: It will apply
to all YouTube views.

00:21:25.660 --> 00:21:29.830
Yeah, so embeds and just
on YouTube.com.

00:21:29.830 --> 00:21:35.340
And so if you ever don't
see a video--

00:21:35.340 --> 00:21:37.730
if for whatever reason a video
doesn't play, or it plays in

00:21:37.730 --> 00:21:45.830
Flash, that's usually because
either the video might have

00:21:45.830 --> 00:21:49.500
just some business
logic that--

00:21:49.500 --> 00:21:51.780
maybe the stream is secure and
we don't have the ability to

00:21:51.780 --> 00:21:54.140
do that yet in HTML5.

00:21:54.140 --> 00:21:55.920
So it's things like that, where
it's just features that

00:21:55.920 --> 00:21:57.730
we don't yet support.

00:21:57.730 --> 00:22:00.920
But you'll still get
the Flash player.

00:22:00.920 --> 00:22:03.790
JAREK WILKIEWICZ: Do you do-- if
I opt in to HTML5, is there

00:22:03.790 --> 00:22:06.170
client-side logic that
kicks in, or is this

00:22:06.170 --> 00:22:07.090
on the server side?

00:22:07.090 --> 00:22:09.720
Like for example, I'm
on a platform that

00:22:09.720 --> 00:22:11.930
doesn't support Flash.

00:22:11.930 --> 00:22:15.800
Will you actually do that on the
client and figure out that

00:22:15.800 --> 00:22:18.660
Flash is not available, or is
this done based on the user

00:22:18.660 --> 00:22:21.520
agent header that is
sent by the client,

00:22:21.520 --> 00:22:22.950
or how does it work?

00:22:22.950 --> 00:22:26.620
GREG SCHECHTER: So we actually
have a bit of both.

00:22:26.620 --> 00:22:30.520
The server side sort of
does a basic check.

00:22:30.520 --> 00:22:34.220
It guesses what it thinks
your capabilities are.

00:22:34.220 --> 00:22:38.510
And that's looking at the user
agent, and so basically if

00:22:38.510 --> 00:22:41.510
you're using an old browser,
it's going to assume that you

00:22:41.510 --> 00:22:42.200
need Flash.

00:22:42.200 --> 00:22:45.480
If you're using a user agent
that we don't know, maybe it's

00:22:45.480 --> 00:22:49.325
on a TV or something, we're
going to also assume that it's

00:22:49.325 --> 00:22:51.190
Flash, just because
we don't know it.

00:22:51.190 --> 00:22:53.550
But then on the clients, we have
a lot of code that says,

00:22:53.550 --> 00:22:56.010
all right we're going to try the
Flash Player, that didn't

00:22:56.010 --> 00:22:57.190
work at all.

00:22:57.190 --> 00:23:00.950
Now we have the ability to
switch over to HTML5.

00:23:00.950 --> 00:23:04.690
And once we do that, we actually
essentially opt you

00:23:04.690 --> 00:23:06.200
in to using HTML5.

00:23:06.200 --> 00:23:09.820
So the second time you
view that page,

00:23:09.820 --> 00:23:11.340
you'll get HTML5 again.

00:23:11.340 --> 00:23:14.790
We'll remember and we won't keep
trying to give you Flash.

00:23:14.790 --> 00:23:17.250
JAREK WILKIEWICZ: Now in
addition to Flash versus

00:23:17.250 --> 00:23:19.990
HTML5, there's always the
issue of codecs, right?

00:23:19.990 --> 00:23:23.970
How do you know which codecs
will give platform support?

00:23:23.970 --> 00:23:27.150
How you handle that?

00:23:27.150 --> 00:23:30.340
GREG SCHECHTER: If you wanted
to check to see what codecs

00:23:30.340 --> 00:23:33.210
your browser supports that we
care about at YouTube, once

00:23:33.210 --> 00:23:36.050
again, you can go to the
slash HTML5 page.

00:23:36.050 --> 00:23:39.240
And you'll see the main formats
that we support are

00:23:39.240 --> 00:23:41.810
h.264 and WebM.

00:23:41.810 --> 00:23:49.120
And as of today, basically all
videos should you have--

00:23:49.120 --> 00:23:51.470
all videos that get watched
should have both formats.

00:23:51.470 --> 00:23:54.680
Originally, a year ago, we
didn't quite have all the

00:23:54.680 --> 00:23:59.850
videos on WebM, but all
new videos will have

00:23:59.850 --> 00:24:04.420
both WebM and h.264.

00:24:04.420 --> 00:24:07.830
So we support those
two main ones.

00:24:07.830 --> 00:24:10.690
JAREK WILKIEWICZ: Then in your
code, does the client of

00:24:10.690 --> 00:24:14.260
iframe embed actually do any
sort of checking to see which

00:24:14.260 --> 00:24:16.520
codecs are supported by
a given browser, or

00:24:16.520 --> 00:24:17.580
how does this work?

00:24:17.580 --> 00:24:21.450
How is this detected?

00:24:21.450 --> 00:24:23.530
GREG SCHECHTER: There's
actually a lot of

00:24:23.530 --> 00:24:24.640
logic behind that.

00:24:24.640 --> 00:24:33.530
So the HTML5 video tag has
APIs for us to see if it

00:24:33.530 --> 00:24:37.350
supports a codec.

00:24:37.350 --> 00:24:41.200
So we can see if we have h.264
support or WebM support, and

00:24:41.200 --> 00:24:44.430
then we have a list of things.

00:24:44.430 --> 00:24:45.880
I'm a big fan of WebM.

00:24:45.880 --> 00:24:47.240
I think it's a great format.

00:24:47.240 --> 00:24:50.250
So normally, we're going to pick
those formats first and

00:24:50.250 --> 00:24:54.410
serve those, unless you're on a
browser that doesn't support

00:24:54.410 --> 00:24:56.940
it, and then we'll go h.264.

00:24:56.940 --> 00:24:59.660
But on the mobile environment,
it's actually--

00:24:59.660 --> 00:25:03.230
today h.264 is a bit
of a better option.

00:25:03.230 --> 00:25:07.120
It doesn't consume as much power
because there's chips

00:25:07.120 --> 00:25:09.370
built into the phones
that specifically do

00:25:09.370 --> 00:25:11.510
the hardware decoding.

00:25:11.510 --> 00:25:12.400
And WebM--

00:25:12.400 --> 00:25:15.360
there's a couple devices that
have hardware decoding for

00:25:15.360 --> 00:25:18.020
WebM, but it's not
that common yet.

00:25:18.020 --> 00:25:22.880
So in those situations, if we
know that we're on mobile,

00:25:22.880 --> 00:25:26.250
we're going to pick
h.264 first.

00:25:26.250 --> 00:25:30.580
But yeah, it's pretty much just
simple, using those APIs.

00:25:30.580 --> 00:25:35.410
CanPlayType is the specific
one I'm referring to.

00:25:35.410 --> 00:25:38.930
And then having a bit of logic
that we use with user agent

00:25:38.930 --> 00:25:45.140
checking to decide if we want
to prefer WebM or h.264.

00:25:45.140 --> 00:25:47.550
JEREMY WALKER: Do you see a
lot more devices in the

00:25:47.550 --> 00:25:51.490
pipeline that have chips
that support WebM?

00:25:51.490 --> 00:25:53.360
GREG SCHECHTER: I actually
don't know much about it.

00:25:56.580 --> 00:25:58.950
Some of the people that I talk
to are pretty excited and

00:25:58.950 --> 00:26:02.870
they're pretty gung-ho about
pushing WebM and getting it to

00:26:02.870 --> 00:26:04.860
be a better experience
on mobile.

00:26:04.860 --> 00:26:07.540
But a lot of it I just hear
second-hand, so I'm not sure.

00:26:07.540 --> 00:26:09.470
JAREK WILKIEWICZ: We actually
work with the WebM team, so

00:26:09.470 --> 00:26:12.150
perhaps we should invite
them to GDL and tell

00:26:12.150 --> 00:26:12.910
us more about it.

00:26:12.910 --> 00:26:14.000
JEREMY WALKER: Yeah, that
would be interesting.

00:26:14.000 --> 00:26:16.690
JAREK WILKIEWICZ: That's
a great idea, Jeremy.

00:26:16.690 --> 00:26:20.600
All right, so I know we have a
couple of things we wanted to

00:26:20.600 --> 00:26:22.110
cover today.

00:26:22.110 --> 00:26:23.850
Jeff wanted to talk about
Stack Overflow.

00:26:23.850 --> 00:26:26.990
And we wanted to look to see if
there were any questions.

00:26:26.990 --> 00:26:29.150
So why don't we transition
over to Jeff.

00:26:29.150 --> 00:26:31.730
And first of all, thank
you very much.

00:26:31.730 --> 00:26:32.150
GREG SCHECHTER: My pleasure.

00:26:32.150 --> 00:26:35.670
JAREK WILKIEWICZ: For telling us
more about your experience

00:26:35.670 --> 00:26:40.750
building HTML5 as a web
warrior at YouTube.

00:26:40.750 --> 00:26:42.210
And thank you for sharing these

00:26:42.210 --> 00:26:45.300
wonderful photos with us.

00:26:45.300 --> 00:26:49.020
So now, let's transition over
to Jeff, who is joining us

00:26:49.020 --> 00:26:49.670
from New York.

00:26:49.670 --> 00:26:53.300
Jeff, tell us more about
Stack Overflow.

00:26:53.300 --> 00:26:53.630
JEFFREY POSNICK: Sure.

00:26:53.630 --> 00:26:57.140
And I also wanted to thank Greg
because that was super

00:26:57.140 --> 00:27:00.520
interesting and really
informative, so thank you.

00:27:00.520 --> 00:27:03.810
So, Stack Overflow.

00:27:03.810 --> 00:27:07.890
First of all, hopefully a lot
of you out there are already

00:27:07.890 --> 00:27:09.100
familiar with Stack Overflow.

00:27:09.100 --> 00:27:15.530
This is a very established
technical resource that I use

00:27:15.530 --> 00:27:19.170
on a daily basis just to look
up answers to questions.

00:27:19.170 --> 00:27:22.060
Not necessarily asking questions
every day, but it's

00:27:22.060 --> 00:27:26.320
kind of known as being a really
high quality question

00:27:26.320 --> 00:27:30.960
and answer site that has
built-in ways of promoting the

00:27:30.960 --> 00:27:31.740
right answer.

00:27:31.740 --> 00:27:34.270
If maybe you get six different
answers and one of them

00:27:34.270 --> 00:27:37.940
happens to be a lot more
correct, let's say, or a lot

00:27:37.940 --> 00:27:40.730
more valuable than
the other ones.

00:27:40.730 --> 00:27:44.230
Stack Overflow is really good
about exposing the right

00:27:44.230 --> 00:27:46.120
answer to a given question.

00:27:46.120 --> 00:27:48.470
So we're big fans.

00:27:48.470 --> 00:27:51.330
Within Google's developer
relations group, a lot of

00:27:51.330 --> 00:27:54.440
teams have already moved over
to Stack Overflow as the

00:27:54.440 --> 00:27:57.410
primary source of providing
answers

00:27:57.410 --> 00:28:00.150
to developer questions.

00:28:00.150 --> 00:28:04.270
Before Stack Overflow, a lot
of teams, including YouTube

00:28:04.270 --> 00:28:08.200
API, had a dedicated Google
group, which had a web

00:28:08.200 --> 00:28:10.500
interface and an email-based
interface where people could

00:28:10.500 --> 00:28:11.700
ask questions.

00:28:11.700 --> 00:28:17.540
And it works great for basic
questions and for working as a

00:28:17.540 --> 00:28:20.780
mailing list, and we're still
maintaining a Google group for

00:28:20.780 --> 00:28:25.050
announcement only emails that
folks can still subscribe to.

00:28:25.050 --> 00:28:29.280
But we really wanted to take
advantage of some of the

00:28:29.280 --> 00:28:32.080
community features that
Stack Overflow offers.

00:28:32.080 --> 00:28:36.680
And the fact that people have
been asking questions on Stack

00:28:36.680 --> 00:28:41.630
Overflow related to YouTube and
the YouTube APIs for years

00:28:41.630 --> 00:28:42.700
now, really.

00:28:42.700 --> 00:28:45.540
And we haven't been
answering them.

00:28:45.540 --> 00:28:47.650
It's kind of hard looking
in a bunch of

00:28:47.650 --> 00:28:49.570
different forums at once.

00:28:49.570 --> 00:28:52.450
Our focus has been on the Google
group up until now.

00:28:52.450 --> 00:28:55.920
But now we're looking forward
to being able to answer

00:28:55.920 --> 00:28:57.560
people's questions on
Stack Overflow.

00:28:57.560 --> 00:29:00.740
So folks who are organically
finding that site and asking

00:29:00.740 --> 00:29:03.450
questions there will suddenly
start getting answers from

00:29:03.450 --> 00:29:06.580
Google's developer relations
team, and YouTube API

00:29:06.580 --> 00:29:10.270
developer relations
team specifically.

00:29:10.270 --> 00:29:13.290
A lot of the questions
previously had been answered

00:29:13.290 --> 00:29:14.450
by members of the community.

00:29:14.450 --> 00:29:16.160
And that's another great thing
about Stack Overflow.

00:29:16.160 --> 00:29:19.620
We're really looking forward to
the fact that there is an

00:29:19.620 --> 00:29:22.730
active community of developers
who are experts in all

00:29:22.730 --> 00:29:23.670
different aspects.

00:29:23.670 --> 00:29:27.560
And hopefully we'll get some
more API questions that are

00:29:27.560 --> 00:29:30.210
answered by people other
than my immediate

00:29:30.210 --> 00:29:32.450
team on Stack Overflow.

00:29:32.450 --> 00:29:35.020
So that should make things a
little bit better or for

00:29:35.020 --> 00:29:38.730
everybody, quicker answers
for everybody.

00:29:38.730 --> 00:29:42.340
The gist of it is that starting
on October 15, we're

00:29:42.340 --> 00:29:46.720
not going to accept any new
posts to our existing Google

00:29:46.720 --> 00:29:49.800
group that was set up for
YouTube API questions.

00:29:49.800 --> 00:29:52.740
So it's going to go into
archive-only mode, which means

00:29:52.740 --> 00:29:57.430
we'll still be able to make
references to old posts that

00:29:57.430 --> 00:29:59.610
might have a canonical
answer somewhere.

00:29:59.610 --> 00:30:00.750
That's not going to go away.

00:30:00.750 --> 00:30:02.580
It's still going to show
up in the Google

00:30:02.580 --> 00:30:04.130
search index, obviously.

00:30:04.130 --> 00:30:06.930
It's just that we're not going
to let people post any new

00:30:06.930 --> 00:30:08.470
questions there.

00:30:08.470 --> 00:30:13.080
And we're asking that people
take things that are questions

00:30:13.080 --> 00:30:14.200
to Stack Overflow.

00:30:14.200 --> 00:30:17.870
But we're also going to be
promoting, and, I guess,

00:30:17.870 --> 00:30:20.390
making a little bit more
prominent, our issue tracker

00:30:20.390 --> 00:30:24.870
that's been around for probably
five years now, and

00:30:24.870 --> 00:30:28.750
using the issue tracker as the
authoritative place to report

00:30:28.750 --> 00:30:33.340
bugs with the API, or to put
in feature requests.

00:30:33.340 --> 00:30:36.560
Stack Overflow is very
specifically a question and

00:30:36.560 --> 00:30:40.860
answer site, and a place to go
for technical questions.

00:30:40.860 --> 00:30:43.830
It's not a place to report bugs,
and it's not a place to

00:30:43.830 --> 00:30:44.810
request features.

00:30:44.810 --> 00:30:47.240
And I think the Stack
Overflow moderators

00:30:47.240 --> 00:30:50.020
tend to be a little--

00:30:50.020 --> 00:30:54.390
they're very diligent about
closing feature requests and

00:30:54.390 --> 00:30:55.250
bugs that get posted there.

00:30:55.250 --> 00:30:58.266
So please keep in mind that if
you have a feature request or

00:30:58.266 --> 00:31:00.940
you have a bug, use our existing
issue tracker.

00:31:00.940 --> 00:31:04.650
We're going to get a lot better
about keeping up to

00:31:04.650 --> 00:31:07.570
date on the things that come
into issue tracker.

00:31:07.570 --> 00:31:11.300
And it just lets us do things
like assign a specific bug

00:31:11.300 --> 00:31:14.130
number that matches up with our
internal bug database with

00:31:14.130 --> 00:31:18.860
an existing external bug, just
to have the record keeping a

00:31:18.860 --> 00:31:22.180
little bit cleaner than what
we could get in the Google

00:31:22.180 --> 00:31:24.650
group when people would
report bugs there.

00:31:24.650 --> 00:31:28.130
So that overall migration,
again, is going to take place

00:31:28.130 --> 00:31:29.340
on October 15.

00:31:29.340 --> 00:31:32.020
Folks don't have to wait until
then to start posting on Stack

00:31:32.020 --> 00:31:35.590
Overflow or start filing feature
requests or bugs in

00:31:35.590 --> 00:31:36.580
the issue tracker.

00:31:36.580 --> 00:31:38.500
You can certainly do that now.

00:31:38.500 --> 00:31:42.620
And we're hoping that it leads
to a better overall developer

00:31:42.620 --> 00:31:44.440
experience for everybody
out there.

00:31:44.440 --> 00:31:46.400
JAREK WILKIEWICZ: Jeff, What
tag should people use when

00:31:46.400 --> 00:31:49.180
they file the Stack Overflow
questions?

00:31:49.180 --> 00:31:50.760
JEFFREY POSNICK: Yeah, that's
definitely important.

00:31:50.760 --> 00:31:53.410
Stack Overflow gets a very
large number of questions

00:31:53.410 --> 00:31:55.900
every day, so we have to be able
to find your question if

00:31:55.900 --> 00:31:57.170
we want to answer it.

00:31:57.170 --> 00:32:00.690
And the specific tag that we're
asking developers to use

00:32:00.690 --> 00:32:01.940
is YouTube-API.

00:32:05.150 --> 00:32:07.850
And that's the one we're going
to be looking for.

00:32:07.850 --> 00:32:10.220
I know that a lot of people
right now are posting things

00:32:10.220 --> 00:32:13.110
that are tagged with just
YouTube without

00:32:13.110 --> 00:32:16.570
hyphen API at the end.

00:32:16.570 --> 00:32:19.040
Those might get our attention
every once in a while, but

00:32:19.040 --> 00:32:20.820
we're going to really going to
be focusing on the ones that

00:32:20.820 --> 00:32:23.480
are YouTube-API.

00:32:23.480 --> 00:32:26.220
Because those, we know, are
API-related questions, rather

00:32:26.220 --> 00:32:29.050
than somebody who's just asking
something about the

00:32:29.050 --> 00:32:32.170
YouTube website, for
instance, which we

00:32:32.170 --> 00:32:33.580
really can't help with.

00:32:33.580 --> 00:32:36.440
JAREK WILKIEWICZ: Now, as far
as those people that have

00:32:36.440 --> 00:32:39.950
gotten addicted to emails from
you, is there still a place

00:32:39.950 --> 00:32:42.240
where they can receive them?

00:32:42.240 --> 00:32:42.860
JEFFREY POSNICK:
So we have that

00:32:42.860 --> 00:32:44.350
announcement only email group.

00:32:44.350 --> 00:32:46.210
That's going to keep around.

00:32:46.210 --> 00:32:47.595
We'll have links to
all these groups.

00:32:47.595 --> 00:32:49.990
Well, we have links to all these
groups in a blog post

00:32:49.990 --> 00:32:52.920
that recently went up on
apiblog.youtube.com.

00:32:52.920 --> 00:32:58.370
But we'll put it in links,
either this video or our

00:32:58.370 --> 00:33:01.260
Google+ page so you know
where to sign up.

00:33:01.260 --> 00:33:03.520
We're going to keep around
that email-only announce

00:33:03.520 --> 00:33:05.990
group, and that's where we're
going to be pushing out email

00:33:05.990 --> 00:33:08.740
notifications about important
changes to the API.

00:33:08.740 --> 00:33:11.550
We have a few other channels
where people

00:33:11.550 --> 00:33:13.680
can stay up to date.

00:33:13.680 --> 00:33:16.210
Obviously, that aforementioned
blog is a great thing to

00:33:16.210 --> 00:33:19.520
subscribe to if you want to get
notified whenever we have

00:33:19.520 --> 00:33:20.930
a new blog post.

00:33:20.930 --> 00:33:24.380
And we have our also
aforementioned Google+ page,

00:33:24.380 --> 00:33:29.840
which is
google.com/plusyoutubedev.

00:33:29.840 --> 00:33:33.600
And subscribing to that will let
you know when we're having

00:33:33.600 --> 00:33:36.440
all these fun YouTube Developer
Live events, as well

00:33:36.440 --> 00:33:39.160
as any other important
updates that we want

00:33:39.160 --> 00:33:40.670
to push out to folks.

00:33:40.670 --> 00:33:43.100
And also--

00:33:43.100 --> 00:33:44.930
this might be a nice segue--
one of you mentioned that

00:33:44.930 --> 00:33:48.560
people can ask questions of
us, not only via Stack

00:33:48.560 --> 00:33:51.260
Overflow, but also via the
Google Moderator interface

00:33:51.260 --> 00:33:53.640
that we have for each of
these weekly YouTube

00:33:53.640 --> 00:33:55.060
Developer Live sessions.

00:33:55.060 --> 00:34:01.460
So we can answer some live
questions during these, or for

00:34:01.460 --> 00:34:03.496
more complicated things, we
might just ask folks to find

00:34:03.496 --> 00:34:06.612
us on Stack Overflow with all
the debugging details and that

00:34:06.612 --> 00:34:07.530
sort of thing.

00:34:07.530 --> 00:34:08.730
JAREK WILKIEWICZ: Cool.

00:34:08.730 --> 00:34:11.480
Speaking of which, Jeremy,
do we have any

00:34:11.480 --> 00:34:13.020
questions in the moderator?

00:34:13.020 --> 00:34:14.730
JEREMY WALKER: Yeah, actually,
we have a few.

00:34:14.730 --> 00:34:16.449
JAREK WILKIEWICZ: So Jeff, thank
you for covering the

00:34:16.449 --> 00:34:18.239
Stack Overflow migration.

00:34:18.239 --> 00:34:22.510
I think we are really looking
forward to being more scalable

00:34:22.510 --> 00:34:26.170
and then having some community
participation.

00:34:26.170 --> 00:34:28.739
I think one thing that I
personally like about Stack

00:34:28.739 --> 00:34:32.909
Overflow is, in addition to good
karma, it also helps you

00:34:32.909 --> 00:34:35.333
with reputation, and you can
earn some badges, which is

00:34:35.333 --> 00:34:38.270
really cool, since we all play
games, and life wouldn't be

00:34:38.270 --> 00:34:40.530
the same without badges.

00:34:40.530 --> 00:34:41.320
All right.

00:34:41.320 --> 00:34:42.380
Jeremy, over to you.

00:34:42.380 --> 00:34:44.199
JEREMY WALKER: Let's
get started.

00:34:44.199 --> 00:34:46.929
So the first question is
actually on HTML5.

00:34:46.929 --> 00:34:49.460
So they actually want to know
from your perspective, what's

00:34:49.460 --> 00:34:51.920
the best resource
to get started?

00:34:51.920 --> 00:34:54.820
And then second, what are the
prerequisites they need to

00:34:54.820 --> 00:34:57.230
know before they start
messing with HTML5?

00:35:00.260 --> 00:35:04.160
GREG SCHECHTER: I've been a
big fan of the Opera Web

00:35:04.160 --> 00:35:05.740
Standards Curriculum.

00:35:05.740 --> 00:35:09.420
Now this covers web development
in general, and

00:35:09.420 --> 00:35:12.520
there is some HTML5
stuff in there.

00:35:12.520 --> 00:35:15.570
Once you're getting into the
newer things, the things that

00:35:15.570 --> 00:35:20.380
are really awesome, HTML5 Rocks
has a bunch of great

00:35:20.380 --> 00:35:25.460
examples and links to more
resources and more detail.

00:35:25.460 --> 00:35:26.900
So those are some of the--

00:35:26.900 --> 00:35:27.900
those two things.

00:35:27.900 --> 00:35:30.000
The Opera Web Standards
Curriculum and HTML5 Rocks are

00:35:30.000 --> 00:35:35.070
some of my favorite places
to look at good examples.

00:35:35.070 --> 00:35:38.790
After that, you're like having
to read the spec for these

00:35:38.790 --> 00:35:41.820
things, and that can get
a little complicated.

00:35:41.820 --> 00:35:43.580
JEFFREY POSNICK: I also want
to point out, I really like

00:35:43.580 --> 00:35:48.900
the Mozilla developer network
pages, specifically for

00:35:48.900 --> 00:35:52.250
providing what seems to me,
at least, the canonical

00:35:52.250 --> 00:35:54.500
definition of different
JavaScript objects and the

00:35:54.500 --> 00:35:57.740
methods they expose, and code
samples for all those.

00:35:57.740 --> 00:36:02.630
It's not specific to HTML5
JavaScript, but if you're

00:36:02.630 --> 00:36:05.970
doing anything, I always tend to
click on Mozilla developer

00:36:05.970 --> 00:36:09.330
network links when
I have a search.

00:36:09.330 --> 00:36:11.320
GREG SCHECHTER: That's one of
the best places to find

00:36:11.320 --> 00:36:15.230
documentation for any web
development stuff.

00:36:15.230 --> 00:36:16.540
JEREMY WALKER: And what
about prereqs?

00:36:16.540 --> 00:36:19.100
What do you think you have
to know before you get

00:36:19.100 --> 00:36:21.450
started with that?

00:36:21.450 --> 00:36:24.100
GREG SCHECHTER: You have
to know HTML5,

00:36:24.100 --> 00:36:25.690
JavaScript, and CSS.

00:36:25.690 --> 00:36:27.330
You really don't have to
be too advanced in

00:36:27.330 --> 00:36:29.960
it just to get started.

00:36:29.960 --> 00:36:31.610
I mean that's--

00:36:31.610 --> 00:36:35.480
one of the goals of HTML5 is
to make it simple, so that

00:36:35.480 --> 00:36:39.370
anybody on the web can
build this richness.

00:36:39.370 --> 00:36:43.270
And so just to get a video
playing, it's as simple as

00:36:43.270 --> 00:36:46.540
having a video tag with
a source, and

00:36:46.540 --> 00:36:49.020
just a controls attribute.

00:36:49.020 --> 00:36:51.140
And so there's really not too
much, but you do need to be

00:36:51.140 --> 00:36:55.630
familiar with HTML5, JavaScript,
and CSS.

00:36:55.630 --> 00:36:56.970
JEREMY WALKER: Great.

00:36:56.970 --> 00:36:59.130
So we've got a couple more.

00:36:59.130 --> 00:37:05.450
One is, they basically want to
know, if an onProgress event

00:37:05.450 --> 00:37:08.970
is coming so that you
can get the--

00:37:08.970 --> 00:37:11.130
the refire for progress
and seek.

00:37:11.130 --> 00:37:13.750
They currently are pulling
the get player

00:37:13.750 --> 00:37:17.910
state to get the progress.

00:37:17.910 --> 00:37:18.990
GREG SCHECHTER: That's actually
an interesting one.

00:37:18.990 --> 00:37:23.490
I actually got into a discussion
with somebody about

00:37:23.490 --> 00:37:25.940
onProgress and other APIs.

00:37:28.640 --> 00:37:33.080
I'm currently trying to convince
the team that not

00:37:33.080 --> 00:37:36.760
only do we need to have events
like onProgress, but I think

00:37:36.760 --> 00:37:44.170
that we need to really enhance
our API to be able to provide

00:37:44.170 --> 00:37:46.490
the richest experience
that we can give.

00:37:46.490 --> 00:37:48.970
So one of the interesting things
is HTML5 has some new

00:37:48.970 --> 00:37:54.620
APIs that deal with just
media in general.

00:37:54.620 --> 00:37:57.310
And they do a better job at
providing API than we do.

00:37:57.310 --> 00:38:00.440
And I think that for us, in
order to make sure that people

00:38:00.440 --> 00:38:06.770
are still able to build great
applications on the web using

00:38:06.770 --> 00:38:11.290
YouTube, I think that we need to
have an API that's not only

00:38:11.290 --> 00:38:14.950
on par, but even better than
what you get natively.

00:38:14.950 --> 00:38:17.030
So it's something that
I'm trying to

00:38:17.030 --> 00:38:18.150
convince the team to do.

00:38:18.150 --> 00:38:21.020
That one, I don't think, should
be very difficult.

00:38:21.020 --> 00:38:22.700
So hopefully, these things will
come, but I'm not quite

00:38:22.700 --> 00:38:24.870
sure when we'll be
able to get them.

00:38:24.870 --> 00:38:25.600
JAREK WILKIEWICZ: In the
meantime, what is the

00:38:25.600 --> 00:38:26.240
work-around?

00:38:26.240 --> 00:38:28.890
Just set up a timer and
use the iframe API?

00:38:28.890 --> 00:38:29.970
GREG SCHECHTER: Yeah.

00:38:29.970 --> 00:38:30.800
JAREK WILKIEWICZ: Just pull?

00:38:30.800 --> 00:38:32.630
GREG SCHECHTER: It's
just a timer.

00:38:32.630 --> 00:38:35.295
250 milliseconds should
be able to--

00:38:35.295 --> 00:38:38.500
I believe in our documentation
we say that even

00:38:38.500 --> 00:38:41.840
GetCurrentTime is going to be,
at most, out of date by 250

00:38:41.840 --> 00:38:42.800
milliseconds.

00:38:42.800 --> 00:38:46.690
So you can at least just have
a timer on that, and that

00:38:46.690 --> 00:38:48.710
should be the same.

00:38:48.710 --> 00:38:51.520
But it's not-- right, it's not
as comfortable to program that

00:38:51.520 --> 00:38:56.570
way when you're using an
event-driven environment.

00:38:56.570 --> 00:38:57.800
But yeah.

00:38:57.800 --> 00:39:00.220
250 milliseconds should
be at least a good

00:39:00.220 --> 00:39:01.770
work-around for now.

00:39:01.770 --> 00:39:03.290
JAREK WILKIEWICZ: Cool.

00:39:03.290 --> 00:39:06.540
JEREMY WALKER: We have another
question from the Netherlands

00:39:06.540 --> 00:39:08.890
around HTML5 versus Flash.

00:39:08.890 --> 00:39:12.320
So in HTML5, it downloads the
whole video, whereas Flash

00:39:12.320 --> 00:39:15.280
only downloads what it needs
to not rebuffer again

00:39:15.280 --> 00:39:17.120
until it needs to.

00:39:17.120 --> 00:39:20.620
So they basically asked if
you're aware of this.

00:39:20.620 --> 00:39:23.890
GREG SCHECHTER: This is
something that we're aware of.

00:39:23.890 --> 00:39:28.140
For HTML5, the buffering
is out of our hands.

00:39:28.140 --> 00:39:33.490
As the spec currently stands,
it's decided by the browser.

00:39:33.490 --> 00:39:41.590
For Flash, it has to do with
our streaming and the

00:39:41.590 --> 00:39:42.780
adaptive-ness.

00:39:42.780 --> 00:39:47.190
And so we don't buffer as much
because you might switch

00:39:47.190 --> 00:39:49.250
qualities quickly and
we don't want to get

00:39:49.250 --> 00:39:50.850
all that extra thing.

00:39:50.850 --> 00:39:52.960
It's something that's
in discussion.

00:39:52.960 --> 00:39:58.260
If you go into the Settings
menu and you change the

00:39:58.260 --> 00:40:02.840
format, if it's anything that's
not auto, it should

00:40:02.840 --> 00:40:05.180
buffer all the way through.

00:40:05.180 --> 00:40:08.670
Otherwise, it only does a little
portion of it and it'll

00:40:08.670 --> 00:40:11.643
wait until you've start
playing more.

00:40:11.643 --> 00:40:13.570
JEREMY WALKER: Great.

00:40:13.570 --> 00:40:17.070
Let's see, so we have
another one.

00:40:17.070 --> 00:40:20.180
Lots of developers need the
classic player plus one

00:40:20.180 --> 00:40:22.670
feature, and currently if you
need that, you need to

00:40:22.670 --> 00:40:26.810
basically get the whole entire
chromeless player.

00:40:26.810 --> 00:40:28.100
And they were--

00:40:28.100 --> 00:40:30.950
well, it was more suggestion,
but I guess the question would

00:40:30.950 --> 00:40:36.120
be, is there any chance that
we're going to release a

00:40:36.120 --> 00:40:40.710
plug-in where you get the bare
bones, and you can add like

00:40:40.710 --> 00:40:44.450
one of the features, as opposed
to getting the entire

00:40:44.450 --> 00:40:45.980
chromeless player.

00:40:45.980 --> 00:40:47.230
GREG SCHECHTER: Sure.

00:40:49.360 --> 00:40:53.340
So for some of our features like
annotations and captions,

00:40:53.340 --> 00:40:58.130
where we're working on getting
APIs available so you can turn

00:40:58.130 --> 00:41:03.420
those things on and off and
get that, for things like

00:41:03.420 --> 00:41:07.530
still having our controls and
adding things to it is not

00:41:07.530 --> 00:41:09.920
something that we've
really discussed.

00:41:09.920 --> 00:41:14.850
But I'll bring it back
to the team and

00:41:14.850 --> 00:41:16.600
see what people think.

00:41:16.600 --> 00:41:19.130
But it's not something that's
in the pipeline yet.

00:41:19.130 --> 00:41:20.530
JEREMY WALKER: Great.

00:41:20.530 --> 00:41:26.160
And the top question, is Google
YouTube developer

00:41:26.160 --> 00:41:27.890
relations hiring?

00:41:27.890 --> 00:41:29.590
And, of course, we are.

00:41:29.590 --> 00:41:30.390
JAREK WILKIEWICZ:
I can take that.

00:41:30.390 --> 00:41:33.140
Both Google developer relations
and YouTube

00:41:33.140 --> 00:41:35.180
developer relations
are hiring.

00:41:35.180 --> 00:41:39.410
To learn more, go to
developers.google.com/jobs,

00:41:39.410 --> 00:41:42.570
and you will see all the types
of positions that we are

00:41:42.570 --> 00:41:47.290
hiring for, and also a little
bit more information about

00:41:47.290 --> 00:41:48.420
what we do.

00:41:48.420 --> 00:41:50.660
There was one more
question added.

00:41:50.660 --> 00:41:54.860
I think it came through from
Israel, about playback rate

00:41:54.860 --> 00:41:57.070
control via the API.

00:41:57.070 --> 00:42:01.130
So I can take that since I
play around with that.

00:42:01.130 --> 00:42:04.530
So the question is whether
there's a way to actually

00:42:04.530 --> 00:42:07.140
change the playback rate
using the API.

00:42:07.140 --> 00:42:10.990
So if you have been paying
attention with HTML5 player,

00:42:10.990 --> 00:42:13.610
you can actually change the
speed at which the video

00:42:13.610 --> 00:42:17.510
plays, which is a really cool
feature that a lot of people

00:42:17.510 --> 00:42:18.190
don't know about.

00:42:18.190 --> 00:42:19.990
But I personally
like it a lot.

00:42:19.990 --> 00:42:24.180
Because a lot of times when I'm
watching video on demand,

00:42:24.180 --> 00:42:26.140
I prefer to go through it
quickly, especially if it's

00:42:26.140 --> 00:42:30.160
some kind of educational
content, like

00:42:30.160 --> 00:42:32.270
this one, for example.

00:42:32.270 --> 00:42:36.380
With HTML5, actually, we
do have an iframe API.

00:42:36.380 --> 00:42:40.330
So if you go to the iframe API
reference, you'll see two

00:42:40.330 --> 00:42:41.150
relevant methods.

00:42:41.150 --> 00:42:43.700
One is called getPlaybackRate.

00:42:43.700 --> 00:42:47.690
And you can actually get the
rate at which the video is

00:42:47.690 --> 00:42:48.820
playing today.

00:42:48.820 --> 00:42:53.710
You can see a playback rates
at which the playback is

00:42:53.710 --> 00:42:54.950
available for given video.

00:42:54.950 --> 00:42:57.890
So that's
getAvailablePlaybackRates.

00:42:57.890 --> 00:43:01.530
And then, setPlaybackRate
will let you control

00:43:01.530 --> 00:43:02.980
the playback rate.

00:43:02.980 --> 00:43:06.380
So that is actually already
available for HTML5.

00:43:06.380 --> 00:43:09.450
Last time I checked, we didn't
actually support it for Flash.

00:43:09.450 --> 00:43:13.260
So nothing is going to blow up
if you invoke these iframe API

00:43:13.260 --> 00:43:13.790
operations.

00:43:13.790 --> 00:43:16.880
Again, iframe API abstracts the
differences between the

00:43:16.880 --> 00:43:19.620
Flash player and the
HTML5 player.

00:43:19.620 --> 00:43:22.910
And this is, I suppose, why
you might be having some

00:43:22.910 --> 00:43:27.090
issues trying to convince the
team to add new APIs, because

00:43:27.090 --> 00:43:28.630
we always have to
look at both.

00:43:28.630 --> 00:43:32.090
And we attempt to provide a
consistent user experience for

00:43:32.090 --> 00:43:35.440
developers across these
different technologies.

00:43:35.440 --> 00:43:38.750
So for the Flash player, if you
look at available playback

00:43:38.750 --> 00:43:40.530
rates, you only see one,
and it's going to be a

00:43:40.530 --> 00:43:41.840
multiplier of one.

00:43:41.840 --> 00:43:44.930
And then if you set it, then
you're going to get back to

00:43:44.930 --> 00:43:47.430
where you were, which is
standard playback.

00:43:47.430 --> 00:43:51.080
So we don't have that for Flash
yet, but you can play

00:43:51.080 --> 00:43:54.160
around with it already
in our HTML5 player.

00:43:54.160 --> 00:43:57.640
GREG SCHECHTER: And just to
clarify, although the API is

00:43:57.640 --> 00:44:01.160
there and working in the HTML5
player, not all of the

00:44:01.160 --> 00:44:04.890
browsers have support for
variable playback speeds.

00:44:04.890 --> 00:44:09.380
So this'll work great in Chrome,
but Opera does not

00:44:09.380 --> 00:44:10.390
have this feature yet.

00:44:10.390 --> 00:44:13.480
So you'll only get--

00:44:13.480 --> 00:44:15.910
if you query what available
playback speeds are, you're

00:44:15.910 --> 00:44:17.710
always going to get just one.

00:44:17.710 --> 00:44:19.830
JAREK WILKIEWICZ: Hence, you
have nine mobile browsers on

00:44:19.830 --> 00:44:22.240
your phone and probably even
more on your desktop.

00:44:22.240 --> 00:44:24.430
GREG SCHECHTER: Yep.

00:44:24.430 --> 00:44:24.870
JAREK WILKIEWICZ: All right.

00:44:24.870 --> 00:44:30.270
I think we have run out of
questions, and running out of

00:44:30.270 --> 00:44:31.030
time as well.

00:44:31.030 --> 00:44:33.660
So I would like to thank
you all for watching.

00:44:33.660 --> 00:44:39.120
See you next week, same time,
same place, virtually on the

00:44:39.120 --> 00:44:44.140
net, or perhaps on the hangout
in the studio.

00:44:44.140 --> 00:44:48.070
Jeff, I hope your cough
continues improving.

00:44:48.070 --> 00:44:50.600
I've been counting your
coughs every session.

00:44:50.600 --> 00:44:53.740
I think this has been the best
one thus far, unless you've

00:44:53.740 --> 00:44:56.400
been using mute secretly.

00:44:56.400 --> 00:44:57.670
JEFFREY POSNICK: I've
been secretly muted.

00:44:57.670 --> 00:45:00.280
JAREK WILKIEWICZ: Oh no,
that's cheating.

00:45:00.280 --> 00:45:01.710
JEFFREY POSNICK: I'm going to
see if I can install a mute

00:45:01.710 --> 00:45:07.610
button, maybe, in my bronchial
tubes or something like that.

00:45:07.610 --> 00:45:10.010
Just spare everybody in
the office around me.

00:45:10.010 --> 00:45:11.370
Either that or get better.

00:45:11.370 --> 00:45:12.425
I prefer the latter.

00:45:12.425 --> 00:45:14.650
JEFFREY POSNICK: Yeah.

00:45:14.650 --> 00:45:15.810
JAREK WILKIEWICZ: All right.

00:45:15.810 --> 00:45:18.610
Take it easy, and thank you
very much for watching.

00:45:18.610 --> 00:45:19.860
We'll see you next time.

00:45:25.790 --> 00:45:35.267
[MUSIC PLAYING]

