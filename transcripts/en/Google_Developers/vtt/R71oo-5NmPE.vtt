WEBVTT
Kind: captions
Language: en

00:01:01.370 --> 00:01:01.930
Hello.

00:01:01.930 --> 00:01:04.310
My name is Arun Nagarajan, and
welcome to another exciting

00:01:04.310 --> 00:01:07.210
episode of "Google Developers
Live." I'm normally part of

00:01:07.210 --> 00:01:09.930
the Apps Group Team, so the
folks that are dialing in

00:01:09.930 --> 00:01:12.150
expecting the Drive Team, I'm
making a guest appearance on

00:01:12.150 --> 00:01:12.870
behalf of them.

00:01:12.870 --> 00:01:14.700
And it's actually a pretty
interesting show today.

00:01:14.700 --> 00:01:17.230
So we're going to be talking
about how do you build Google

00:01:17.230 --> 00:01:19.600
Drive apps using Apps Script.

00:01:19.600 --> 00:01:22.350
Apps Script, those of you who
are not familiar, it's a very

00:01:22.350 --> 00:01:24.080
interesting and exciting product
that we have that

00:01:24.080 --> 00:01:27.190
allows you to write JavaScript
programs that run on the

00:01:27.190 --> 00:01:30.650
Google Cloud that allows you
to automate, extend, and

00:01:30.650 --> 00:01:33.110
integrate with Google Apps from
the inside-- so being

00:01:33.110 --> 00:01:36.230
able to read your email, being
able to automate calendar

00:01:36.230 --> 00:01:38.660
activity, being able to do
things with docs and

00:01:38.660 --> 00:01:40.370
spreadsheets, and things
like that.

00:01:40.370 --> 00:01:42.890
And Google Drive SDK, on the
other hand, allows you to

00:01:42.890 --> 00:01:46.550
build very complex apps that
layer on top of Drive, allow

00:01:46.550 --> 00:01:49.430
you to store things in Drive,
be able to open documents in

00:01:49.430 --> 00:01:51.760
Drive with your applications.

00:01:51.760 --> 00:01:53.930
And in the Google Drive
documentation, you can see a

00:01:53.930 --> 00:01:57.300
lot of really good details on
how do you build your apps

00:01:57.300 --> 00:02:00.630
using many of the languages that
they have given client

00:02:00.630 --> 00:02:04.260
SDKs for and also quick
start guides for.

00:02:04.260 --> 00:02:06.730
A lot of these require you
have access to a server,

00:02:06.730 --> 00:02:09.090
someplace you can actually
run this code.

00:02:09.090 --> 00:02:11.380
The nice thing about Google Apps
Script today that you'll

00:02:11.380 --> 00:02:14.010
see is that you'll be able
to build and run these

00:02:14.010 --> 00:02:18.000
applications right from the
Google data centers.

00:02:18.000 --> 00:02:21.030
So you're able to go to
script.google.com, write your

00:02:21.030 --> 00:02:24.550
code, and run it from right
there, and run it as the user

00:02:24.550 --> 00:02:25.730
that's accessing it.

00:02:25.730 --> 00:02:28.260
So hopefully, at the end of
this, you'll have some sample

00:02:28.260 --> 00:02:30.260
code that you walk away with.

00:02:30.260 --> 00:02:33.230
We'll put it all on GitHub, as
always, and you'll be able to

00:02:33.230 --> 00:02:35.800
kind of get at it and tweak it
and build some interesting

00:02:35.800 --> 00:02:37.780
applications.

00:02:37.780 --> 00:02:40.810
So a lot of interesting ideas
that we have today.

00:02:40.810 --> 00:02:42.540
Let me also show you
a bit about Google

00:02:42.540 --> 00:02:43.720
Apps Script, as well.

00:02:43.720 --> 00:02:46.730
So Google Apps Script has
a documentation site at

00:02:46.730 --> 00:02:50.760
developers.googl
e.com/apps.script, and there's

00:02:50.760 --> 00:02:53.820
a lot of really good details
about what can you do.

00:02:53.820 --> 00:02:57.680
Just from a quick point to
note is everything under

00:02:57.680 --> 00:03:01.130
Default Services is something
that you want to be really

00:03:01.130 --> 00:03:03.170
familiar with as far as building
apps with Apps

00:03:03.170 --> 00:03:05.460
Script, so even things
like documents.

00:03:05.460 --> 00:03:07.240
So this is Google Docs.

00:03:07.240 --> 00:03:10.180
So being able to build
a Google doc with

00:03:10.180 --> 00:03:11.190
this amount of detail.

00:03:11.190 --> 00:03:14.190
So being able to add containers,
alignments

00:03:14.190 --> 00:03:16.250
properties, being able
to add footers,

00:03:16.250 --> 00:03:17.250
headers, things like that.

00:03:17.250 --> 00:03:20.130
So it's really powerful to be
able to access docs and

00:03:20.130 --> 00:03:23.590
spreadsheets from within, rather
than the peripheral

00:03:23.590 --> 00:03:25.850
things that Google Drive
provides, which is very

00:03:25.850 --> 00:03:28.190
powerful integration points.

00:03:28.190 --> 00:03:30.450
And of course, the two things
that you can do with the

00:03:30.450 --> 00:03:36.150
Google Drive SDK is being able
to do the Create Files.

00:03:36.150 --> 00:03:38.720
That's documented here.

00:03:38.720 --> 00:03:42.300
Zoom in a little bit, and then
be able to Open Files.

00:03:42.300 --> 00:03:43.230
OK.

00:03:43.230 --> 00:03:45.365
And we'll build an example
that integrates

00:03:45.365 --> 00:03:46.580
with both of that.

00:03:46.580 --> 00:03:47.080
Great.

00:03:47.080 --> 00:03:47.850
So let's get started.

00:03:47.850 --> 00:03:50.820
So the first thing that I'm
going to do is go to

00:03:50.820 --> 00:03:52.070
script.google.com.

00:03:54.582 --> 00:03:57.340
So that's the one URL you ought
to remember at the end

00:03:57.340 --> 00:03:59.240
of this session.

00:03:59.240 --> 00:04:02.690
So I get presented with
a nice quick start.

00:04:02.690 --> 00:04:06.400
And I'm going to just say that
I'll start from scratch.

00:04:06.400 --> 00:04:09.090
And what I'm going to do is I'm
going to actually copy and

00:04:09.090 --> 00:04:11.590
paste some of the code that
I've written ahead of time

00:04:11.590 --> 00:04:12.570
just to save us some time.

00:04:12.570 --> 00:04:15.600
And I'll explain all the code in
some detail so that you are

00:04:15.600 --> 00:04:17.649
able to get a sense for
what this does.

00:04:17.649 --> 00:04:19.800
So I'm going to paste this in.

00:04:19.800 --> 00:04:21.209
OK.

00:04:21.209 --> 00:04:22.029
Save this.

00:04:22.029 --> 00:04:30.650
I'll call this My Google Drive
Integration and then

00:04:30.650 --> 00:04:32.600
create a new file.

00:04:32.600 --> 00:04:35.110
And I'm just segmenting these
into two files for

00:04:35.110 --> 00:04:35.680
cleanliness.

00:04:35.680 --> 00:04:37.680
It could really be one file.

00:04:37.680 --> 00:04:43.180
Call this Apps Script Operations
or something.

00:04:43.180 --> 00:04:45.460
Not really the most creative
name, but it

00:04:45.460 --> 00:04:46.650
gets the job done.

00:04:46.650 --> 00:04:49.660
And in here, I'm going to put in
some code that is specific

00:04:49.660 --> 00:04:51.860
to that part of the world.

00:04:51.860 --> 00:04:53.970
OK.

00:04:53.970 --> 00:04:54.900
Cool.

00:04:54.900 --> 00:04:58.860
So before I explain the code,
let me go back and show you

00:04:58.860 --> 00:05:01.700
what we're trying to achieve
here in the Google Drive SDK.

00:05:01.700 --> 00:05:03.890
So this is My Drive.

00:05:03.890 --> 00:05:07.660
So if I go to drive.google.com
as a signed-in user, I get to

00:05:07.660 --> 00:05:09.800
see all the files I have.

00:05:09.800 --> 00:05:12.170
And you can see that the new
script that I created has

00:05:12.170 --> 00:05:13.380
shown up there, as well.

00:05:13.380 --> 00:05:15.950
Google's Apps Scripts are
first-class citizens that'll

00:05:15.950 --> 00:05:17.670
show up in your drive.

00:05:17.670 --> 00:05:20.770
And you're able to see that,
when you hit Create, you get

00:05:20.770 --> 00:05:23.400
the sort of rich set of
capabilities that you're able

00:05:23.400 --> 00:05:25.050
to do within Google Drive--

00:05:25.050 --> 00:05:27.510
create documents, presentations,
and so on.

00:05:27.510 --> 00:05:30.160
And you get this little
dialogue that says

00:05:30.160 --> 00:05:31.050
Connect more apps.

00:05:31.050 --> 00:05:34.180
When you click on that, you
see some really exciting

00:05:34.180 --> 00:05:37.670
applications, like being able
to do rich diagramming with

00:05:37.670 --> 00:05:39.560
Lucidchart.

00:05:39.560 --> 00:05:41.680
I know HelloFax is here.

00:05:41.680 --> 00:05:44.230
These are all partners that have
written really exciting

00:05:44.230 --> 00:05:47.810
applications for Google Drive
to be able to connect into

00:05:47.810 --> 00:05:49.180
your Drive experience.

00:05:49.180 --> 00:05:53.940
And our goal is to be able to
surface within this interface

00:05:53.940 --> 00:05:57.010
and to be able to do your custom
integration, be able to

00:05:57.010 --> 00:05:59.380
run your custom workflows,
and so on.

00:05:59.380 --> 00:06:01.340
And this is coming from
the Chrome Web Store.

00:06:01.340 --> 00:06:05.140
And in the very first example,
we'll actually directly

00:06:05.140 --> 00:06:07.030
install the application without
having to go to the

00:06:07.030 --> 00:06:07.730
Chrome Web Store.

00:06:07.730 --> 00:06:08.270
OK?

00:06:08.270 --> 00:06:11.380
So that's what we're trying to
achieve, is be able to connect

00:06:11.380 --> 00:06:14.370
your application to your
Google Drive account.

00:06:14.370 --> 00:06:14.580
All right.

00:06:14.580 --> 00:06:16.130
So go back in here.

00:06:16.130 --> 00:06:18.490
Copy and pasted that code.

00:06:18.490 --> 00:06:22.840
And so it's asking to fill
in a few things here.

00:06:22.840 --> 00:06:26.420
So the first thing that I need
to do is take this code and

00:06:26.420 --> 00:06:28.830
publish it as a web app.

00:06:28.830 --> 00:06:32.930
So in order to do that, you
need to Manage Versions.

00:06:32.930 --> 00:06:36.880
And then you go under Publish,
Deploy as web app.

00:06:36.880 --> 00:06:39.370
And you want to say select the
version you want to run.

00:06:39.370 --> 00:06:41.940
And in this case, it's only
one, so it's easy.

00:06:41.940 --> 00:06:44.100
And then you want to execute
that as a User

00:06:44.100 --> 00:06:46.480
accessing the web app.

00:06:46.480 --> 00:06:50.140
And I'm going to say anyone
with a Google account can

00:06:50.140 --> 00:06:51.430
access this.

00:06:51.430 --> 00:06:54.000
I'll hit Deploy, and
I'll get a URL.

00:06:54.000 --> 00:06:57.230
This is the URL that I'll start
to play around with now.

00:06:57.230 --> 00:06:58.970
I'll hit copy there.

00:06:58.970 --> 00:07:01.070
And I'm going to say that's
my redirect URL.

00:07:01.070 --> 00:07:02.970
I'm going to manually
paste that in.

00:07:02.970 --> 00:07:04.750
There are ways to
programmatically determine

00:07:04.750 --> 00:07:08.620
that, but it's best to manually
paste that in for

00:07:08.620 --> 00:07:10.870
debugging and make sure
that you're looking

00:07:10.870 --> 00:07:12.050
at the right thing.

00:07:12.050 --> 00:07:13.800
The next thing it's asking
me is for client

00:07:13.800 --> 00:07:15.590
ID and client secret.

00:07:15.590 --> 00:07:17.850
So these are things that
are related to OAuth.

00:07:17.850 --> 00:07:21.745
So we'll kind of set that up
really quickly, if I go to

00:07:21.745 --> 00:07:25.000
developer.google.com/console.

00:07:25.000 --> 00:07:27.760
So OAuth 2 is something that you
have to worry about if you

00:07:27.760 --> 00:07:31.700
want to directly allow
installation for the user.

00:07:31.700 --> 00:07:36.800
So from here, I'm going
to say Create project.

00:07:36.800 --> 00:07:42.020
We'll call this, let's see,
Drive Integration.

00:07:42.020 --> 00:07:44.060
OK.

00:07:44.060 --> 00:07:46.370
It's creating that.

00:07:46.370 --> 00:07:51.190
So in here, I'm going to
turn on Drive SDK.

00:07:51.190 --> 00:07:55.250
That's the most important one,
but Drive API, I may need that

00:07:55.250 --> 00:07:57.990
in the future, so I'll turn
that on, as well.

00:07:57.990 --> 00:07:59.425
And then I'll--

00:07:59.425 --> 00:08:00.640
I think it autosaves it.

00:08:00.640 --> 00:08:01.880
That's great.

00:08:01.880 --> 00:08:05.500
Then I'll come into
API Access.

00:08:05.500 --> 00:08:07.960
And here is going to be--

00:08:07.960 --> 00:08:10.820
I need to create an OAuth
2.0 client ID.

00:08:10.820 --> 00:08:14.850
I'll call this Drive
Integration.

00:08:14.850 --> 00:08:19.020
And for now, I'll just use
a dummy for Apps Script

00:08:19.020 --> 00:08:19.852
[INAUDIBLE], developers.googl
e.com/apps.scrip

00:08:19.852 --> 00:08:29.250
t/images/script-128.png.

00:08:29.250 --> 00:08:33.500
And then I'll set that as
the home page, as well.

00:08:33.500 --> 00:08:39.440
And then here, I'm going to say
the callback is the URL

00:08:39.440 --> 00:08:41.559
that we copied from here.

00:08:41.559 --> 00:08:43.679
This guy.

00:08:43.679 --> 00:08:45.010
OK.

00:08:45.010 --> 00:08:47.880
So this will allow us to manage
the callback workflow

00:08:47.880 --> 00:08:50.950
from within our application.

00:08:50.950 --> 00:08:55.108
Once I create this, I'll
now have the client

00:08:55.108 --> 00:08:57.245
ID and client secret.

00:08:57.245 --> 00:08:59.840
So you can see that under
web application.

00:08:59.840 --> 00:09:03.210
So I'll delete this project
right after this demo, so this

00:09:03.210 --> 00:09:05.160
is something that will
be specific to the

00:09:05.160 --> 00:09:07.290
user accessing it.

00:09:07.290 --> 00:09:10.480
Then I'll go to client secret,
paste that in.

00:09:13.090 --> 00:09:15.980
And then, since I did update
the code, I do have to

00:09:15.980 --> 00:09:16.960
redeploy it.

00:09:16.960 --> 00:09:19.300
So there is this little
bit of a circular

00:09:19.300 --> 00:09:21.480
redeployment that's necessary.

00:09:21.480 --> 00:09:24.540
But it's pretty quick overall.

00:09:24.540 --> 00:09:25.760
So I'll redeploy it.

00:09:25.760 --> 00:09:26.840
Great.

00:09:26.840 --> 00:09:29.180
So let's take a look at
what I've done so far.

00:09:29.180 --> 00:09:33.060
So I've created a script
within my drive.

00:09:33.060 --> 00:09:36.910
This could be directly from
script.google.com, as well.

00:09:36.910 --> 00:09:40.910
And over here, I've set up an
OAuth 2.0 workflow that

00:09:40.910 --> 00:09:45.280
requests the drive.install
scope.

00:09:45.280 --> 00:09:48.570
So this is the critical request
that we're making.

00:09:48.570 --> 00:09:51.610
Once this request is fulfilled,
what happens is

00:09:51.610 --> 00:09:54.790
this application is connected to
that user's Drive account.

00:09:54.790 --> 00:09:56.440
So that's an important
thing to remember.

00:09:56.440 --> 00:09:58.530
This drive.install
scope is manually

00:09:58.530 --> 00:10:00.110
requested in this case.

00:10:00.110 --> 00:10:02.810
If it's coming in from the
Chrome Web Store, it actually

00:10:02.810 --> 00:10:05.565
is-- the code becomes
a lot less simpler.

00:10:05.565 --> 00:10:07.720
The Chrome Web Store takes
care of that drive, that

00:10:07.720 --> 00:10:11.140
install scope for you, and then
gives you access to the

00:10:11.140 --> 00:10:12.800
requested scopes from there.

00:10:12.800 --> 00:10:16.000
So that's one of things to keep
in mind with the Chrome

00:10:16.000 --> 00:10:17.190
Web Store integration.

00:10:17.190 --> 00:10:19.740
So in this case, we're manually
requesting install

00:10:19.740 --> 00:10:22.770
access instead of them finding
it from the Chrome Web Store.

00:10:22.770 --> 00:10:24.940
So I believe I've
republished it.

00:10:24.940 --> 00:10:25.860
Great.

00:10:25.860 --> 00:10:29.260
So let's take a look at what
happens when I access this.

00:10:29.260 --> 00:10:33.260
If I go here, click on this
code, so I'm going

00:10:33.260 --> 00:10:35.010
to visit this URL.

00:10:35.010 --> 00:10:38.320
So the very first thing it's
going to say, are you giving

00:10:38.320 --> 00:10:42.610
this access to these sort of
services that it's asking for?

00:10:42.610 --> 00:10:45.260
I have to authorize
that first.

00:10:45.260 --> 00:10:48.330
We're working on consolidating
all that scope requirements,

00:10:48.330 --> 00:10:50.170
all the authentication flow.

00:10:50.170 --> 00:10:52.920
So now, here's the code that
kind of kicks off our

00:10:52.920 --> 00:10:54.870
installation process.

00:10:54.870 --> 00:10:56.230
Click to start.

00:10:56.230 --> 00:10:58.530
And this is the OAuth
2.0 flow.

00:10:58.530 --> 00:11:01.900
And it says right here, Add
itself to Google Drive.

00:11:01.900 --> 00:11:04.910
You can see that it's asking for
specifically both the Open

00:11:04.910 --> 00:11:06.890
With and Create menu.

00:11:06.890 --> 00:11:08.295
And I'm going say
Allow access.

00:11:11.310 --> 00:11:12.300
OK.

00:11:12.300 --> 00:11:13.580
So it's going to install it.

00:11:13.580 --> 00:11:16.870
And now I'll be able to go
into it through Drive.

00:11:16.870 --> 00:11:19.810
So one of things that I haven't
done yet is be able to

00:11:19.810 --> 00:11:21.510
tell it where--

00:11:21.510 --> 00:11:23.180
I realize that I haven't
provided

00:11:23.180 --> 00:11:24.470
this information here.

00:11:24.470 --> 00:11:28.250
I need to go into Google Drive
SDK and then actually register

00:11:28.250 --> 00:11:31.360
the callback URL to explicitly
here, as well.

00:11:31.360 --> 00:11:34.220
So over here, what I'll just do
is select some images that

00:11:34.220 --> 00:11:36.650
I have locally.

00:11:36.650 --> 00:11:39.810
Hopefully it'll come up quickly
here on my desktop.

00:11:39.810 --> 00:11:42.310
There's one.

00:11:42.310 --> 00:11:45.310
I just created a simple image.

00:11:45.310 --> 00:11:48.150
Say Select here, as well.

00:11:48.150 --> 00:11:53.130
And it should be the
same image for now.

00:11:53.130 --> 00:11:54.380
I hit Select.

00:11:56.650 --> 00:11:57.810
OK.

00:11:57.810 --> 00:12:01.120
And then, I'll say the
URL is that URL that

00:12:01.120 --> 00:12:02.810
I had copied before.

00:12:02.810 --> 00:12:07.300
And the MIME type I want for
now is application/PDF.

00:12:07.300 --> 00:12:09.720
We'll get into this detail
a little bit.

00:12:09.720 --> 00:12:13.010
And I'll say Allow people
to create, as well.

00:12:13.010 --> 00:12:15.430
And the same URL.

00:12:15.430 --> 00:12:16.820
Meeting Notes, I'll say.

00:12:16.820 --> 00:12:18.770
And I'll explain that
in a second.

00:12:18.770 --> 00:12:20.280
And allow people to import.

00:12:20.280 --> 00:12:22.530
So those are the specific
settings for this particular

00:12:22.530 --> 00:12:24.770
application that we're
demonstrating.

00:12:24.770 --> 00:12:27.710
I hit save changes.

00:12:27.710 --> 00:12:30.210
And I'll come back to Drive.

00:12:30.210 --> 00:12:33.680
And it should pick up those
changes that I made.

00:12:33.680 --> 00:12:36.480
Let me actually manually
reconnect this.

00:12:36.480 --> 00:12:39.980
So you can see that under Manage
apps is where I can

00:12:39.980 --> 00:12:42.480
sort of disconnect and
reconnect things.

00:12:42.480 --> 00:12:44.360
So I'll disconnect that.

00:12:44.360 --> 00:12:45.450
Sorry about that confusion.

00:12:45.450 --> 00:12:49.650
And I'll revisit that URL.

00:12:49.650 --> 00:12:52.030
So it's going to say
Install this App.

00:12:52.030 --> 00:12:54.075
It's going to ask me for
permission again.

00:12:54.075 --> 00:12:57.100
And I'll say Allow access.

00:12:57.100 --> 00:12:58.530
And n it says it's installed.

00:12:58.530 --> 00:13:00.190
Or you can navigate to Drive.

00:13:00.190 --> 00:13:02.840
So this is very simple HTML that
I've used, and you can

00:13:02.840 --> 00:13:04.060
pretty this up.

00:13:04.060 --> 00:13:06.070
So now we're back in Drive.

00:13:06.070 --> 00:13:10.240
And now, when I click on
this, I should see--

00:13:10.240 --> 00:13:12.240
Let's see, I made a mistake
here, I guess.

00:13:12.240 --> 00:13:14.460
Let's take a look.

00:13:14.460 --> 00:13:16.110
It's not picking up--

00:13:16.110 --> 00:13:17.320
Go back to the console.

00:13:17.320 --> 00:13:20.420
Save changes-- did it save?

00:13:20.420 --> 00:13:21.610
Let's take a look here.

00:13:21.610 --> 00:13:26.285
API access, we have that
there under Drive SDK.

00:13:28.910 --> 00:13:34.640
Icon.large is filled in,
and application PDF.

00:13:34.640 --> 00:13:35.160
Cool.

00:13:35.160 --> 00:13:39.470
So let me just make sure
I refresh this.

00:13:39.470 --> 00:13:40.840
What did I screw up here?

00:13:40.840 --> 00:13:42.090
Let's take a look.

00:13:48.350 --> 00:13:49.845
So this is the same account.

00:13:53.810 --> 00:13:56.840
So let's take a look at the--

00:13:56.840 --> 00:13:58.870
go in here.

00:13:58.870 --> 00:14:01.340
So I'll paste that in there.

00:14:01.340 --> 00:14:02.650
The token's not correct.

00:14:12.280 --> 00:14:13.530
Take a look.

00:14:20.830 --> 00:14:21.790
Hmm.

00:14:21.790 --> 00:14:24.050
Something's not clicking
correctly there.

00:14:24.050 --> 00:14:27.670
I should get a new
option there.

00:14:27.670 --> 00:14:31.970
Just double check all my
keys and everything.

00:14:31.970 --> 00:14:34.640
So this ends in Bd4.

00:14:34.640 --> 00:14:35.490
Go in here.

00:14:35.490 --> 00:14:38.100
Go to Publish, Deploy
as web app.

00:14:38.100 --> 00:14:39.540
This should also end in Bd4.

00:14:42.170 --> 00:14:43.950
Meeting notes is there.

00:14:43.950 --> 00:14:46.640
Let's take a look.

00:14:46.640 --> 00:14:50.500
What am I missing here?

00:14:50.500 --> 00:14:51.480
There should be something.

00:14:51.480 --> 00:14:54.190
These are the joys
of live demos.

00:14:54.190 --> 00:14:57.600
Hopefully I'll catch the
error quickly here.

00:14:57.600 --> 00:15:02.460
Or maybe the order of things
that I did was incorrect.

00:15:02.460 --> 00:15:04.540
So let's just quickly
redo this.

00:15:04.540 --> 00:15:06.650
Hopefully I'll catch it there.

00:15:06.650 --> 00:15:13.350
If I just create a new project,
we'll call this

00:15:13.350 --> 00:15:14.600
MyDriveIntegration.

00:15:16.818 --> 00:15:19.672
Let's give it a unique name
so I'll catch it.

00:15:19.672 --> 00:15:23.020
I'll do this in the correct
order this time around.

00:15:23.020 --> 00:15:28.005
Go turn on both Drive
API and Drive SDK.

00:15:32.166 --> 00:15:33.900
It takes a second there.

00:15:33.900 --> 00:15:34.770
So those are saved.

00:15:34.770 --> 00:15:37.660
I can now see Drive
SDK is enabled.

00:15:37.660 --> 00:15:39.390
I'll select the icons again.

00:15:41.970 --> 00:15:42.640
Pick that guy.

00:15:42.640 --> 00:15:47.470
I see a little collage there.

00:15:47.470 --> 00:15:48.720
Go ahead and pick this.

00:15:53.940 --> 00:15:55.230
OK.

00:15:55.230 --> 00:15:59.485
So the URL will use the same
URL, application/PDF.

00:16:02.500 --> 00:16:05.050
Create with.

00:16:05.050 --> 00:16:07.360
Save that.

00:16:07.360 --> 00:16:08.610
Meeting Notes.

00:16:11.190 --> 00:16:11.670
OK.

00:16:11.670 --> 00:16:13.120
So let's see if I
got everything

00:16:13.120 --> 00:16:15.070
correctly this time.

00:16:15.070 --> 00:16:16.910
I don't want to initiate
the flow directly.

00:16:19.770 --> 00:16:21.645
And I say Save changes.

00:16:24.900 --> 00:16:28.890
And if I go to API Access,
create a new token.

00:16:28.890 --> 00:16:30.140
Call it apps script.

00:16:38.890 --> 00:16:39.860
Update.

00:16:39.860 --> 00:16:39.990
Script.

00:16:39.990 --> 00:16:40.120
Images.

00:16:40.120 --> 00:16:41.370
Update.

00:16:46.220 --> 00:16:49.755
And I'll just say for now,
developers.googl

00:16:49.755 --> 00:16:58.900
e.com/apps-script.

00:16:58.900 --> 00:17:00.000
Next.

00:17:00.000 --> 00:17:02.410
and I'll say More options.

00:17:02.410 --> 00:17:03.960
Paste that in for
the callback.

00:17:03.960 --> 00:17:05.680
We don't want that.

00:17:05.680 --> 00:17:08.079
Create that.

00:17:08.079 --> 00:17:10.630
And I'll create this
client ID.

00:17:10.630 --> 00:17:11.880
Go back in here.

00:17:14.099 --> 00:17:15.160
Client ID.

00:17:15.160 --> 00:17:17.349
Paste that in.

00:17:17.349 --> 00:17:21.010
And then Client secret.

00:17:25.930 --> 00:17:27.670
OK.

00:17:27.670 --> 00:17:29.200
File, Manage versions.

00:17:29.200 --> 00:17:31.190
Save a new version.

00:17:31.190 --> 00:17:32.440
Publish.

00:17:34.220 --> 00:17:38.040
User accessing the
web app update.

00:17:38.040 --> 00:17:40.060
OK.

00:17:40.060 --> 00:17:41.090
Click on that.

00:17:41.090 --> 00:17:43.675
So that should now force
me to reinstall again.

00:17:47.550 --> 00:17:50.340
And let's see if we're
lucky this time.

00:17:50.340 --> 00:17:51.550
If not, I have a backup.

00:17:51.550 --> 00:17:52.410
Oh, there it is.

00:17:52.410 --> 00:17:54.590
It just took a couple of extra
seconds, it seemed.

00:17:54.590 --> 00:17:56.040
I have it installed twice.

00:17:56.040 --> 00:17:58.450
I apologize for the
confusion there.

00:17:58.450 --> 00:18:00.260
So let's take a look at
what we're trying

00:18:00.260 --> 00:18:00.990
to accomplish here.

00:18:00.990 --> 00:18:02.510
So we got a couple of icons.

00:18:02.510 --> 00:18:04.870
I'll just leave it be for now.

00:18:04.870 --> 00:18:06.780
Maybe there was just
a refresh issue.

00:18:06.780 --> 00:18:08.380
So I'll go back and kind
of showcase what I'm

00:18:08.380 --> 00:18:09.480
trying to do here.

00:18:09.480 --> 00:18:12.900
So in my calendar, I have a
currently ongoing meeting

00:18:12.900 --> 00:18:14.380
called Status meeting.

00:18:14.380 --> 00:18:16.250
So this is a meeting that
I have, and I've

00:18:16.250 --> 00:18:17.440
invited a few people.

00:18:17.440 --> 00:18:20.700
And I have a set of agenda
items in here that we're

00:18:20.700 --> 00:18:21.990
trying to walk through.

00:18:21.990 --> 00:18:24.410
This is completely fictitious.

00:18:24.410 --> 00:18:27.210
And I like to, when I have
a meeting, have an agenda

00:18:27.210 --> 00:18:29.680
written out ahead of time, and
then have a Meeting notes

00:18:29.680 --> 00:18:32.640
document that goes along with
it, where I can track action

00:18:32.640 --> 00:18:35.160
items, and check off things that
we accomplish against the

00:18:35.160 --> 00:18:37.190
agenda, and so forth.

00:18:37.190 --> 00:18:40.920
So what I would like, in my
Drive, is to be able to say,

00:18:40.920 --> 00:18:44.200
when I say Create Meeting
Notes, have it scan my

00:18:44.200 --> 00:18:47.210
calendar using the Apps Script
API, which is extremely

00:18:47.210 --> 00:18:50.310
succinct and able to run very
quickly using the JavaScript

00:18:50.310 --> 00:18:51.600
APIs that we have.

00:18:51.600 --> 00:18:54.400
And then create a document
with the notes from that

00:18:54.400 --> 00:18:57.560
pre-populated, and then also
potentially share it out with

00:18:57.560 --> 00:18:59.150
other folks, and so on.

00:18:59.150 --> 00:19:03.460
So if I can say Create Meeting
Notes, you can see that it's

00:19:03.460 --> 00:19:05.620
spinning away.

00:19:05.620 --> 00:19:08.220
And it called back
into our code.

00:19:08.220 --> 00:19:08.710
You can see that

00:19:08.710 --> 00:19:11.165
script.google.com is the callback.

00:19:11.165 --> 00:19:15.800
And now, when I hit "click here
to open," there's the

00:19:15.800 --> 00:19:18.390
document that got
created for me.

00:19:18.390 --> 00:19:20.910
So you can see that Meeting
notes for Status meetings,

00:19:20.910 --> 00:19:23.130
which is sort of the subject
that it took from the calendar

00:19:23.130 --> 00:19:26.060
appointment itself, and then
it nicely formatted

00:19:26.060 --> 00:19:27.150
something for us.

00:19:27.150 --> 00:19:29.400
So let's take a look
at this code.

00:19:29.400 --> 00:19:31.670
So here's the code
that gets run.

00:19:31.670 --> 00:19:37.860
Very simple function here that
says find the two-hour window.

00:19:37.860 --> 00:19:42.060
Pretty naive set of logic that
I'm using, but this is just an

00:19:42.060 --> 00:19:44.480
example to demonstrate
what's possible.

00:19:44.480 --> 00:19:47.520
And then it does
DocumentApp.create So this is

00:19:47.520 --> 00:19:50.750
the line of code that creates
the Google document, and then

00:19:50.750 --> 00:19:52.650
appends some content into it--

00:19:52.650 --> 00:19:55.220
a few paragraphs, the horizontal
rule, and then

00:19:55.220 --> 00:19:56.300
another paragraph.

00:19:56.300 --> 00:19:59.220
And then it gets the URL from
which we can very quickly

00:19:59.220 --> 00:20:00.390
click in and open.

00:20:00.390 --> 00:20:03.830
So you can see that a very
few lines of code--

00:20:03.830 --> 00:20:06.370
I think it's about 25 lines of
code, including the code to

00:20:06.370 --> 00:20:09.040
get the email list of
people that are

00:20:09.040 --> 00:20:10.490
in the meeting itself.

00:20:10.490 --> 00:20:12.160
And you can see that
it's pretty

00:20:12.160 --> 00:20:14.920
straightforward to do this.

00:20:14.920 --> 00:20:18.590
So you can see that this is
getting called from this sort

00:20:18.590 --> 00:20:22.740
of end point, which is, as you
know from the Google Drive

00:20:22.740 --> 00:20:26.610
SDK, the Apps Script code gets a
callback with the parameters

00:20:26.610 --> 00:20:27.850
that the user requested.

00:20:27.850 --> 00:20:29.590
So in this case, specifically
the user

00:20:29.590 --> 00:20:31.750
requested the create action.

00:20:31.750 --> 00:20:34.920
And when create is done, I don't
care for any other sort

00:20:34.920 --> 00:20:35.770
of details.

00:20:35.770 --> 00:20:38.130
I'll just say
createMeetingNotes, which will

00:20:38.130 --> 00:20:41.450
scan the calendar and then get
the URL back, and we'll

00:20:41.450 --> 00:20:43.400
display the URL right there.

00:20:43.400 --> 00:20:46.130
Pretty straightforward, and you
can see that it's actually

00:20:46.130 --> 00:20:49.730
kind of amazing how
short this can be.

00:20:49.730 --> 00:20:53.160
And I can show you the
code looks like--

00:20:53.160 --> 00:20:55.610
it looks for this JSON object.

00:20:55.610 --> 00:21:00.250
So when you say Create, there
is a parameter called state,

00:21:00.250 --> 00:21:03.280
right there, which gets sent it
in the get parameter, and

00:21:03.280 --> 00:21:06.360
it contains these sort of
attributes within it, and same

00:21:06.360 --> 00:21:07.870
for open files.

00:21:07.870 --> 00:21:08.880
OK.

00:21:08.880 --> 00:21:10.340
And we'll do that,
as well, next.

00:21:10.340 --> 00:21:16.190
So, so far, we've done one
simple demo, which is takes my

00:21:16.190 --> 00:21:18.760
calendar data and then
automatically creates a Google

00:21:18.760 --> 00:21:21.090
document for me as the
account that I'm

00:21:21.090 --> 00:21:23.070
currently logged in at.

00:21:23.070 --> 00:21:26.080
And that's happening because
when we published it, if you

00:21:26.080 --> 00:21:30.980
recall, we set it as Execute
the app as a user accessing

00:21:30.980 --> 00:21:33.640
the web app, not as the person
authored the code, but the

00:21:33.640 --> 00:21:35.240
person accessing it.

00:21:35.240 --> 00:21:38.770
So you can see that just by
authorizing the user against

00:21:38.770 --> 00:21:39.540
the script.

00:21:39.540 --> 00:21:40.810
it listed all the things--

00:21:40.810 --> 00:21:43.640
Calendar, Gmail, documents,
and so on.

00:21:43.640 --> 00:21:47.120
By listing that, the
authorization is taken care of

00:21:47.120 --> 00:21:50.600
in one shot, and you're able to
write code against all the

00:21:50.600 --> 00:21:52.900
different APIs that
we have access to.

00:21:52.900 --> 00:21:56.000
Let's take a look at what else
that we can do here.

00:21:56.000 --> 00:21:59.750
So one of the things that is
problematic sometimes is to be

00:21:59.750 --> 00:22:03.660
able to send a lot of documents
at once from Google

00:22:03.660 --> 00:22:07.380
Drive to a person that may not
be using Google docs or

00:22:07.380 --> 00:22:08.550
spreadsheets, and so on.

00:22:08.550 --> 00:22:12.480
So maybe they wanted a PDF, or
some other printer-friendly or

00:22:12.480 --> 00:22:15.070
more standard format that can
be viewed from anywhere

00:22:15.070 --> 00:22:16.420
without a Google account.

00:22:16.420 --> 00:22:19.570
So one of the things that I
imagine would be interesting

00:22:19.570 --> 00:22:22.680
for this example is what if
there was an extension that we

00:22:22.680 --> 00:22:23.430
could write.

00:22:23.430 --> 00:22:26.990
When you run it, it's able to
take the file you've selected,

00:22:26.990 --> 00:22:31.400
convert it to a PDF, zip it up,
and then be able to send

00:22:31.400 --> 00:22:34.010
an email to yourself or someone
else that you want to

00:22:34.010 --> 00:22:34.870
share it with?

00:22:34.870 --> 00:22:37.930
This is great when we're working
with folks that are

00:22:37.930 --> 00:22:41.490
not with the Google Docs or that
you want to send it as an

00:22:41.490 --> 00:22:44.300
attachment that can be viewed by
anyone without an account.

00:22:44.300 --> 00:22:47.580
So it's a great example of how
you can do multiple steps

00:22:47.580 --> 00:22:49.470
within the same exact script.

00:22:49.470 --> 00:22:53.010
So here's one where the same
option's available when you do

00:22:53.010 --> 00:22:54.370
right-click, Open with.

00:22:54.370 --> 00:22:57.550
Or if I select multiple options
here, I can do it from

00:22:57.550 --> 00:22:58.515
right-click here, as well.

00:22:58.515 --> 00:23:02.670
And you can see that the
right-click option's available

00:23:02.670 --> 00:23:05.460
if I say More, Open with.

00:23:05.460 --> 00:23:06.760
You know what I didn't do?

00:23:06.760 --> 00:23:09.955
In my console, I didn't
enable multiple--

00:23:13.820 --> 00:23:16.320
there should be an option here
for Multiple File Support.

00:23:16.320 --> 00:23:17.580
So I didn't select that.

00:23:17.580 --> 00:23:20.190
If I had selected that, it'll
allow me to do that for

00:23:20.190 --> 00:23:21.240
multiple options.

00:23:21.240 --> 00:23:23.610
But for now, we'll just do it
in one example, and I think

00:23:23.610 --> 00:23:25.820
that'll satisfy the demo here.

00:23:25.820 --> 00:23:28.970
If I right-click here,
and I say Open with--

00:23:28.970 --> 00:23:31.280
this is not the window,
this is the window.

00:23:31.280 --> 00:23:35.250
If I right-click here, and say
Open with and say send to Open

00:23:35.250 --> 00:23:38.990
with, Drive Integration, what
that's going to do is it's

00:23:38.990 --> 00:23:39.970
going to open up our app.

00:23:39.970 --> 00:23:42.750
You can see that it's spinning
with our example there.

00:23:42.750 --> 00:23:46.050
And it's going to take that and
send it to it as an inbox.

00:23:46.050 --> 00:23:50.850
You can see, if I come back to
my Inbox, there should be an

00:23:50.850 --> 00:23:52.810
email here waiting.

00:23:52.810 --> 00:23:53.330
You know what?

00:23:53.330 --> 00:23:55.770
I picked the one that I
uninstalled, I believe.

00:23:55.770 --> 00:23:59.160
So we'll go here, and I'll say
Open with, apps script.

00:23:59.160 --> 00:24:01.310
This guy.

00:24:01.310 --> 00:24:05.770
So by registering two versions,
I think I've screwed

00:24:05.770 --> 00:24:08.050
up parts of this.

00:24:08.050 --> 00:24:09.720
There it is.

00:24:09.720 --> 00:24:11.620
Files you requested.

00:24:11.620 --> 00:24:13.170
And there's a zip file.

00:24:13.170 --> 00:24:15.080
And I can download it.

00:24:15.080 --> 00:24:16.380
And I can open that up.

00:24:16.380 --> 00:24:19.150
And there should be a--

00:24:19.150 --> 00:24:21.160
let's see, where are
we in my Finder?

00:24:21.160 --> 00:24:22.640
Lot of files in there.

00:24:22.640 --> 00:24:24.810
And it should say
files for you.

00:24:24.810 --> 00:24:26.420
Then this is my status
meeting example

00:24:26.420 --> 00:24:27.850
that I had used, right?

00:24:27.850 --> 00:24:29.330
So that's a PDF file.

00:24:29.330 --> 00:24:31.870
So you see how easy it is.

00:24:31.870 --> 00:24:34.700
And we'll take a look at
the code, as well.

00:24:34.700 --> 00:24:37.480
And this code is actually even
more straightforward.

00:24:37.480 --> 00:24:43.960
This says, if I am going into
the one with multiple files,

00:24:43.960 --> 00:24:50.000
it's going to go in here, and
say, let's take a look at this

00:24:50.000 --> 00:24:52.620
code, which is zipAndSend.

00:24:52.620 --> 00:24:55.680
And that's going to take all
the different IDs, get the

00:24:55.680 --> 00:24:58.170
email address of the person
that's currently logged in.

00:24:58.170 --> 00:25:00.210
And it's going to iterate
through all the different

00:25:00.210 --> 00:25:05.400
files, get a version of it with
the PDF attached to it as

00:25:05.400 --> 00:25:08.570
a file name, and then it's going
to turn them into one

00:25:08.570 --> 00:25:12.150
file called FilesForYou.zip
and then mail it to you.

00:25:12.150 --> 00:25:14.170
So you can see that it's
extremely straightforward to

00:25:14.170 --> 00:25:17.210
build these sort of workflows
without having to

00:25:17.210 --> 00:25:18.540
write a lot of code.

00:25:18.540 --> 00:25:22.060
So one of the nice things is
that you can actually submit

00:25:22.060 --> 00:25:23.340
this to the Chrome Web Store.

00:25:23.340 --> 00:25:26.710
So we have ability-- and let
me zoom out a little bit,

00:25:26.710 --> 00:25:28.430
because I think it's
hard to see all the

00:25:28.430 --> 00:25:30.330
aspects of the editor.

00:25:30.330 --> 00:25:33.150
One of things you can actually
do is you're able to say

00:25:33.150 --> 00:25:36.150
Publish and then Register
in Chrome Web Store.

00:25:36.150 --> 00:25:40.540
So what this does is, it
essentially whitelists the URL

00:25:40.540 --> 00:25:43.610
for this particular script
deployed as a web app in the

00:25:43.610 --> 00:25:45.160
Chrome Web Store registry.

00:25:45.160 --> 00:25:48.390
So that means you own the URL,
and you're going to be able to

00:25:48.390 --> 00:25:51.710
register that as a Drive app
or whichever type of

00:25:51.710 --> 00:25:53.620
application you want
to deploy it as.

00:25:53.620 --> 00:25:55.220
So by doing this--

00:25:55.220 --> 00:25:56.880
let's just walk through this.

00:25:56.880 --> 00:25:58.590
So I'll say Register
as web app.

00:25:58.590 --> 00:26:01.120
So you can see that it says,
"Communicating with Chrome Web

00:26:01.120 --> 00:26:03.463
Store." Just take a
couple seconds.

00:26:06.350 --> 00:26:08.120
And it comes back
with a success.

00:26:08.120 --> 00:26:11.490
And what it does is creates
the project in draft mode.

00:26:11.490 --> 00:26:14.890
So you will not publish the app
as is, because it's not

00:26:14.890 --> 00:26:16.840
set to the right
container type.

00:26:16.840 --> 00:26:20.340
So if I go to the Chrome
Developer dashboard--

00:26:20.340 --> 00:26:25.140
and there is a one-time fee of
$5 to access your account, to

00:26:25.140 --> 00:26:26.640
verify your account.

00:26:26.640 --> 00:26:32.140
If I go back to your Developer
dashboard, you can see that

00:26:32.140 --> 00:26:35.110
there's a listing here created
for you called My Google Drive

00:26:35.110 --> 00:26:36.180
Integration.

00:26:36.180 --> 00:26:39.300
So you will, however, not
publish this version.

00:26:39.300 --> 00:26:42.190
What you'll do is you'll create
a manual manifest.

00:26:42.190 --> 00:26:45.410
And let me actually go back to
this guy here and zoom in a

00:26:45.410 --> 00:26:46.770
little bit.

00:26:46.770 --> 00:26:48.740
Let's see, I don't know
how to zoom in in

00:26:48.740 --> 00:26:50.510
this particular editor.

00:26:50.510 --> 00:26:54.150
So let me just kind of zoom
in with this guy.

00:26:54.150 --> 00:26:56.030
So you can see that in
this particular--

00:26:56.030 --> 00:26:57.960
here's a sample manifest file.

00:26:57.960 --> 00:26:58.920
The operative--

00:26:58.920 --> 00:27:01.060
there are two important
things about this.

00:27:01.060 --> 00:27:03.810
The container needs to be
set to GOOGLE_DRIVE.

00:27:03.810 --> 00:27:06.200
And this, of course,
is all documented.

00:27:06.200 --> 00:27:12.290
And the api_console_project_id
needs to match the API project

00:27:12.290 --> 00:27:18.150
console from here, this guy,
this API ID, the app ID.

00:27:18.150 --> 00:27:20.240
And you can see the same
thing listed under

00:27:20.240 --> 00:27:21.350
Overview, as well.

00:27:21.350 --> 00:27:23.790
So that's the project number
that you'll want to make sure

00:27:23.790 --> 00:27:25.800
that is available in
that manifest.

00:27:25.800 --> 00:27:31.190
So that's how we tie back which
project that you're

00:27:31.190 --> 00:27:35.760
doing, which API project
this is correlated to.

00:27:35.760 --> 00:27:39.870
The last thing is to ensure that
your launch URL matches

00:27:39.870 --> 00:27:42.710
the deployed web app
that you have, OK?

00:27:42.710 --> 00:27:44.860
So that's actually an important
step to ensure that

00:27:44.860 --> 00:27:47.280
you've got the right things.

00:27:47.280 --> 00:27:49.500
Once you're able to do that,
if you go back to the

00:27:49.500 --> 00:27:53.190
Developer Dashboard here,
and go to Add new item--

00:27:53.190 --> 00:27:57.340
and the important thing here is
to make sure that you read

00:27:57.340 --> 00:28:01.430
through these important
descriptions about the icon

00:28:01.430 --> 00:28:03.580
file, the description.

00:28:03.580 --> 00:28:06.840
It's actually much more a
restricted set of sizes you

00:28:06.840 --> 00:28:07.640
can upload.

00:28:07.640 --> 00:28:11.350
It ensures that you have the
right amount of details in

00:28:11.350 --> 00:28:14.030
your description, so definitely
walk through these

00:28:14.030 --> 00:28:15.430
steps here to understand
exactly

00:28:15.430 --> 00:28:16.940
what you need to upload.

00:28:16.940 --> 00:28:19.700
And I think the documentation
is great here to get a sense

00:28:19.700 --> 00:28:20.920
for what you can do.

00:28:20.920 --> 00:28:24.170
And just to complete the set
of demos, I actually had

00:28:24.170 --> 00:28:27.480
published previously as a very
simple application that

00:28:27.480 --> 00:28:31.150
enables you to do what I did
with the select multiple files

00:28:31.150 --> 00:28:32.430
and send it as an email.

00:28:32.430 --> 00:28:35.265
So I'll go back to My Drive
and showcase that example.

00:28:35.265 --> 00:28:40.250
If I go to Create, go to
connect more apps.

00:28:40.250 --> 00:28:43.300
So this is already submitted,
already available for anyone

00:28:43.300 --> 00:28:43.950
to check out.

00:28:43.950 --> 00:28:45.200
It's called File Assistant.

00:28:48.250 --> 00:28:50.770
And you can see that there's
a little icon.

00:28:50.770 --> 00:28:52.620
I've re-used the same
icon from there.

00:28:52.620 --> 00:28:54.580
And you can see the URL is a

00:28:54.580 --> 00:28:57.240
script.google.com account, a URL.

00:28:57.240 --> 00:29:00.110
So I hit Connect.

00:29:00.110 --> 00:29:03.270
And I'm going to say don't
make a default for now.

00:29:03.270 --> 00:29:04.380
I hit OK.

00:29:04.380 --> 00:29:07.250
So you can see that there's no
OAuth flow here that I had to

00:29:07.250 --> 00:29:09.000
deal with at this point.

00:29:09.000 --> 00:29:12.940
I can just say More, Open
with, File Assistant.

00:29:12.940 --> 00:29:16.260
So in this particular example, I
had correctly selected allow

00:29:16.260 --> 00:29:18.940
multiple files, and I
hit File Assistant.

00:29:18.940 --> 00:29:22.350
This is going to go through
the process of kicking off

00:29:22.350 --> 00:29:25.100
that script.

00:29:25.100 --> 00:29:27.140
And email sent.

00:29:27.140 --> 00:29:31.620
So you can see that in that
particular example of an app

00:29:31.620 --> 00:29:34.090
that was already submitted to
the web store, there was not

00:29:34.090 --> 00:29:38.260
even OAuth 2 drive.install scope
request that you had to

00:29:38.260 --> 00:29:39.170
walk through.

00:29:39.170 --> 00:29:42.610
So here's an example where, if
I open this up, there are

00:29:42.610 --> 00:29:45.670
multiple files in there that
I had previously selected.

00:29:45.670 --> 00:29:49.560
So that's a very quick example
of the benefits of being able

00:29:49.560 --> 00:29:51.150
to install it from
Chrome Web Store.

00:29:51.150 --> 00:29:53.640
But hopefully you saw that you
can actually deploy this

00:29:53.640 --> 00:29:56.610
within your domain or
restrictive set of users by

00:29:56.610 --> 00:30:00.670
just requesting the OAuth
2 drive.install scope.

00:30:00.670 --> 00:30:02.970
So that, I think, is about
the set of things

00:30:02.970 --> 00:30:04.030
that I wanted to show.

00:30:04.030 --> 00:30:06.770
What I'll definitely make sure
is that all the code that we

00:30:06.770 --> 00:30:09.260
had demonstrated here
will be available

00:30:09.260 --> 00:30:10.450
for you to play with.

00:30:10.450 --> 00:30:13.420
And we'll start to think about
new ways to demonstrate the

00:30:13.420 --> 00:30:14.840
Apps Script and Google Drive

00:30:14.840 --> 00:30:17.310
Integration in future episodes.

00:30:17.310 --> 00:30:19.370
One of the things I did want to
mention is a lot of folks

00:30:19.370 --> 00:30:22.310
ask us about when do you use
Google Drive SDK and when do

00:30:22.310 --> 00:30:23.970
you use the Apps Script API.

00:30:23.970 --> 00:30:25.910
And they're actually
very complementary.

00:30:25.910 --> 00:30:29.190
The Google Drive API is probably
more similar in some

00:30:29.190 --> 00:30:32.020
cases, but that provides a
more RESTful interface.

00:30:32.020 --> 00:30:35.200
The Google Apps Scripts
programs, the apps, they run

00:30:35.200 --> 00:30:36.890
on the Google data centers
themselves.

00:30:36.890 --> 00:30:38.000
And it's pure JavaScript.

00:30:38.000 --> 00:30:40.970
It's cloud based, and you're
able to, like I said, write

00:30:40.970 --> 00:30:44.210
your code, author it, be able
to publish it all from a

00:30:44.210 --> 00:30:47.510
browser without having to open
up an IDE, like Eclipse, or

00:30:47.510 --> 00:30:49.610
install SDKs to manage that.

00:30:49.610 --> 00:30:53.070
So the Drive SDK allows you to
run this and integrate your

00:30:53.070 --> 00:30:55.830
applications deep within
the Drive UI.

00:30:55.830 --> 00:30:59.960
The Apps Script API can run
under the user's context on

00:30:59.960 --> 00:31:01.170
the server side.

00:31:01.170 --> 00:31:02.860
So hopefully all that
made sense.

00:31:02.860 --> 00:31:05.380
Looking forward to seeing what
kind of applications you guys

00:31:05.380 --> 00:31:07.680
build and hearing more
feedback from you.

00:31:07.680 --> 00:31:08.930
Thank you very much.

