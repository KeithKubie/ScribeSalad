WEBVTT
Kind: captions
Language: en

00:00:00.809 --> 00:00:02.100
MATT SULLIVAN: Hello, everyone.

00:00:02.100 --> 00:00:05.070
I am Matt Sullivan, a developer
advocate on the Flutter team.

00:00:05.070 --> 00:00:06.611
EMILY FORTUNA: And
I'm Emily Fortuna.

00:00:06.611 --> 00:00:08.330
I'm a software engineer
on the Dart team.

00:00:08.330 --> 00:00:09.913
MATT SULLIVAN: And
so what we're going

00:00:09.913 --> 00:00:13.520
to do for the next 30 odd
minutes is we're going to live

00:00:13.520 --> 00:00:18.109
code a Flutter app, and yeah.

00:00:18.109 --> 00:00:20.650
We're-- hopefully this is going
to go smoothly, but this is--

00:00:20.650 --> 00:00:22.430
we're going to start from the
very basics and go all the way

00:00:22.430 --> 00:00:22.930
through.

00:00:22.930 --> 00:00:25.100
So we're just going
to see what happens.

00:00:25.100 --> 00:00:26.270
There will be no slides.

00:00:26.270 --> 00:00:30.290
This will just be code, except
for this slide, of course.

00:00:30.290 --> 00:00:32.119
And we'll see where we get to.

00:00:32.119 --> 00:00:33.990
So what are we going to build?

00:00:33.990 --> 00:00:37.250
EMILY FORTUNA:
Well, we are in LA

00:00:37.250 --> 00:00:41.840
and I am so looking
forward to checking out

00:00:41.840 --> 00:00:43.184
the food scene around here.

00:00:43.184 --> 00:00:44.600
I mean, I just had
some food here,

00:00:44.600 --> 00:00:47.460
but I need to plan
ahead for dinner.

00:00:47.460 --> 00:00:50.825
And I'm very particular because
when I get hungry, I get angry.

00:00:50.825 --> 00:00:52.674
I might even get hangry.

00:00:52.674 --> 00:00:54.590
Do you think we could
write a Flutter app that

00:00:54.590 --> 00:00:55.982
could help us out with that?

00:00:55.982 --> 00:00:58.190
MATT SULLIVAN: So I think
what we maybe want to write

00:00:58.190 --> 00:01:01.430
is a Flutter app which
finds local restaurants,

00:01:01.430 --> 00:01:04.506
shows them to us, shows some
ratings, that kind of thing.

00:01:04.506 --> 00:01:05.880
EMILY FORTUNA:
Yeah, let's do it.

00:01:05.880 --> 00:01:07.820
MATT SULLIVAN: OK, so
do you want to start--

00:01:07.820 --> 00:01:09.236
EMILY FORTUNA:
Yeah, I'll do that.

00:01:09.236 --> 00:01:10.580
MATT SULLIVAN: OK.

00:01:10.580 --> 00:01:13.329
So what we're going to
do is we're literally

00:01:13.329 --> 00:01:14.870
going to start from
scratch and we're

00:01:14.870 --> 00:01:17.132
going to create a
new Flutter app,

00:01:17.132 --> 00:01:18.590
and we're going to
call it Nom Nom.

00:01:18.590 --> 00:01:20.670
OK.

00:01:20.670 --> 00:01:22.907
We are going to be
coding pretty quickly

00:01:22.907 --> 00:01:23.990
for the next half an hour.

00:01:23.990 --> 00:01:26.267
We're going to be breezing
through a lot of stuff,

00:01:26.267 --> 00:01:28.850
and we're not necessarily going
to stop and explain everything

00:01:28.850 --> 00:01:30.840
because what we really
want to show you is kind

00:01:30.840 --> 00:01:32.090
of the flow of how we develop.

00:01:32.090 --> 00:01:33.290
How do we use hot reload?

00:01:33.290 --> 00:01:36.090
How do we use the
tooling that we have?

00:01:36.090 --> 00:01:39.230
And so there will be plenty
more talks on Flutter

00:01:39.230 --> 00:01:40.370
and various aspects of it.

00:01:40.370 --> 00:01:41.750
We'll be around
afterwards and we'll

00:01:41.750 --> 00:01:42.620
have the code up on GitHub.

00:01:42.620 --> 00:01:43.230
Help.

00:01:43.230 --> 00:01:46.370
So if we breeze over
things that you might miss,

00:01:46.370 --> 00:01:47.480
then bear with us.

00:01:47.480 --> 00:01:48.355
We'll get to the end.

00:01:48.355 --> 00:01:49.980
We'll answer any
questions afterwards.

00:01:49.980 --> 00:01:54.750
So what Emily has done is she
has created the out-of-the-box

00:01:54.750 --> 00:01:58.280
Flutter app, and what are
we going to use as an ID?

00:01:58.280 --> 00:02:00.560
EMILY FORTUNA: We
are using VS Code,

00:02:00.560 --> 00:02:07.070
and you know, it's no
Vim, but I'll accept it.

00:02:07.070 --> 00:02:11.759
And yeah, you can see
other IDs at other parts

00:02:11.759 --> 00:02:13.550
throughout the conference--
that we thought

00:02:13.550 --> 00:02:14.900
we'd show something different.

00:02:14.900 --> 00:02:16.316
MATT SULLIVAN:
Yeah, so there will

00:02:16.316 --> 00:02:18.407
be talks on Android
Studio and IntelliJ,

00:02:18.407 --> 00:02:19.490
and they will be using it.

00:02:19.490 --> 00:02:21.489
But we kind of wanted to
use Visual Studio Code.

00:02:21.489 --> 00:02:26.000
It's my IDE of preference, so
for the person out there who

00:02:26.000 --> 00:02:27.650
built the plugin,
we really apologize

00:02:27.650 --> 00:02:29.720
for what we're about to
show, in case, you know,

00:02:29.720 --> 00:02:30.840
where we go with this.

00:02:30.840 --> 00:02:34.970
So what we have is we have
fired up the out-of-the-box app.

00:02:34.970 --> 00:02:37.010
Now, you may have noticed
that that took maybe

00:02:37.010 --> 00:02:38.319
eight to 10 seconds to compile.

00:02:38.319 --> 00:02:39.860
That's the initial
build because it's

00:02:39.860 --> 00:02:42.680
got to do all the Android-y
stuff and package the APK.

00:02:42.680 --> 00:02:44.180
But you'll see,
in terms of how we

00:02:44.180 --> 00:02:45.638
develop with that,
that's not going

00:02:45.638 --> 00:02:46.950
to be the case going forward.

00:02:46.950 --> 00:02:47.540
So what we have--

00:02:47.540 --> 00:02:49.248
Emily stripped out
all the handy comments

00:02:49.248 --> 00:02:52.700
that we've put in, to help
you with your initial app.

00:02:52.700 --> 00:02:55.310
And so, OK, we
have a Flutter app.

00:02:55.310 --> 00:02:57.320
So why don't we change the name.

00:02:59.930 --> 00:03:00.670
And there we go.

00:03:00.670 --> 00:03:01.580
Hot reload.

00:03:01.580 --> 00:03:02.481
Emily hit save.

00:03:02.481 --> 00:03:04.230
About half a second
later, that kicks off.

00:03:04.230 --> 00:03:07.887
So changing a name
isn't that awesome.

00:03:07.887 --> 00:03:10.470
We'll be doing other stuff which
will be pretty cool later on.

00:03:10.470 --> 00:03:12.470
So let's get rid of
all the boilerplate

00:03:12.470 --> 00:03:14.420
that we have in there
for this default app,

00:03:14.420 --> 00:03:17.990
and we're going to bring
it back to Hello World.

00:03:17.990 --> 00:03:20.505
So we're basically going
to strip it all out.

00:03:20.505 --> 00:03:22.130
We're going to create
a new text widget

00:03:22.130 --> 00:03:24.774
because this being
Flutter, all of the UI

00:03:24.774 --> 00:03:25.940
is composed through widgets.

00:03:25.940 --> 00:03:28.040
And again, we'll show you
some of that as we go forward.

00:03:28.040 --> 00:03:28.430
And there we go.

00:03:28.430 --> 00:03:29.388
So we stripped it back.

00:03:29.388 --> 00:03:31.280
So we have the most,
pretty much, basic app

00:03:31.280 --> 00:03:32.090
you can imagine.

00:03:32.090 --> 00:03:33.350
It's got a very small--

00:03:33.350 --> 00:03:35.345
can everyone see the--
is this big enough?

00:03:35.345 --> 00:03:35.970
AUDIENCE: Yeah.

00:03:35.970 --> 00:03:37.160
MATT SULLIVAN: OK, cool.

00:03:37.160 --> 00:03:38.455
So we are back to Hello World.

00:03:38.455 --> 00:03:39.830
So what's the
first thing we need

00:03:39.830 --> 00:03:41.630
to do to get this app going?

00:03:41.630 --> 00:03:46.130
EMILY FORTUNA: Well, let's
create some dummy restaurant

00:03:46.130 --> 00:03:48.051
text that we can fill
in to start with.

00:03:48.051 --> 00:03:48.800
MATT SULLIVAN: OK.

00:03:48.800 --> 00:03:53.510
Cool, so for Hello World, we're
reusing the stateful widget

00:03:53.510 --> 00:03:56.879
that the out-of-the-box
app gave us.

00:03:56.879 --> 00:03:59.420
You don't need a stateful widget
for things like Hello World,

00:03:59.420 --> 00:04:02.345
but because we're going to build
a list of restaurants that's

00:04:02.345 --> 00:04:04.970
going to update, we're going to
need to be able to track state.

00:04:04.970 --> 00:04:07.040
So what we're doing
now in our state

00:04:07.040 --> 00:04:08.810
is we've got a list
of strings that's

00:04:08.810 --> 00:04:10.970
going to hold our
restaurants or our places.

00:04:10.970 --> 00:04:13.670
And we're going to
initialize that through the--

00:04:13.670 --> 00:04:16.010
by overwriting in its state.

00:04:16.010 --> 00:04:18.769
And we're going to
populate that with probably

00:04:18.769 --> 00:04:23.551
a bunch of strings, just
so we can get the list up

00:04:23.551 --> 00:04:24.050
and running.

00:04:24.050 --> 00:04:28.260
And as you can see, as Emily is
typing this, the Visual Studio

00:04:28.260 --> 00:04:29.570
plugin--

00:04:29.570 --> 00:04:31.430
notice how it's
recommending things,

00:04:31.430 --> 00:04:33.920
how when we hover over
things, it gives us

00:04:33.920 --> 00:04:35.660
the constructor and whatnot.

00:04:35.660 --> 00:04:40.670
And it's how the excellent work
that the tooling team has done

00:04:40.670 --> 00:04:43.981
to be able to enable this, so we
can put this into multiple IDs.

00:04:43.981 --> 00:04:44.480
So great.

00:04:44.480 --> 00:04:46.872
We have got some state
now, and we have a list

00:04:46.872 --> 00:04:48.080
of-- what's that going to be?

00:04:48.080 --> 00:04:51.140
100 dummy restaurant names.

00:04:51.140 --> 00:04:54.021
So I guess we're going to
swap that out of our texture.

00:04:54.021 --> 00:04:55.770
What are we going to
use to show the list?

00:04:55.770 --> 00:04:58.080
EMILY FORTUNA: There's
this list view widgets,

00:04:58.080 --> 00:05:00.560
and you can just pass
in a list, and it will

00:05:00.560 --> 00:05:01.790
display all those children.

00:05:01.790 --> 00:05:02.372
So--

00:05:02.372 --> 00:05:03.330
MATT SULLIVAN: Perfect.

00:05:03.330 --> 00:05:04.900
So we're going to
use a list view.

00:05:04.900 --> 00:05:10.430
Now, if you have developed
on other mobile platforms,

00:05:10.430 --> 00:05:14.600
sometimes, like, creating
performant scrolling lists

00:05:14.600 --> 00:05:16.145
can be involved.

00:05:16.145 --> 00:05:18.270
The nice thing with Flutter
and the Flutter widgets

00:05:18.270 --> 00:05:19.980
is that we've taken
care of that for you.

00:05:19.980 --> 00:05:22.310
So Emily has created
a new list view

00:05:22.310 --> 00:05:24.170
in place of the
Hello World child,

00:05:24.170 --> 00:05:27.350
and notice that,
again, we have to use

00:05:27.350 --> 00:05:28.810
widgets to compose the UI.

00:05:28.810 --> 00:05:31.250
So as opposed to just
rendering the strings,

00:05:31.250 --> 00:05:33.740
we're creating a
new text widget,

00:05:33.740 --> 00:05:35.270
and I'm not talking fast enough.

00:05:35.270 --> 00:05:36.140
You're typing faster than--

00:05:36.140 --> 00:05:36.806
OK, that's fine.

00:05:36.806 --> 00:05:42.080
And we have a really
uninteresting and kind of ugly

00:05:42.080 --> 00:05:44.870
list of strings.

00:05:44.870 --> 00:05:46.510
EMILY FORTUNA: I'll
point out also, I

00:05:46.510 --> 00:05:49.070
had to do a full restart there,
as opposed to the hot reload,

00:05:49.070 --> 00:05:52.669
and the reason for that is hot
reload is great for existing

00:05:52.669 --> 00:05:54.210
objects that have
already been built.

00:05:54.210 --> 00:05:57.650
But we added this places list,
and so to create that, we

00:05:57.650 --> 00:05:59.810
needed to do a full restart.

00:05:59.810 --> 00:06:01.940
MATT SULLIVAN: So
rule of thumb always

00:06:01.940 --> 00:06:04.130
is that when you're working
with widgets and UI,

00:06:04.130 --> 00:06:05.060
hot reload is great.

00:06:05.060 --> 00:06:07.730
If you change your
state, programmatically,

00:06:07.730 --> 00:06:12.920
or you change the code rendering
your state, do a full restart.

00:06:12.920 --> 00:06:15.262
But how long did the
full restart take?

00:06:15.262 --> 00:06:18.770
EMILY FORTUNA: Let's see,
it only took just barely

00:06:18.770 --> 00:06:19.890
over half a second.

00:06:19.890 --> 00:06:21.015
MATT SULLIVAN: There we go.

00:06:21.015 --> 00:06:22.712
So hot reload and full restart--

00:06:22.712 --> 00:06:24.920
it's all going to be subsecond,
in terms of updating.

00:06:24.920 --> 00:06:28.430
So we have got a
list of strings.

00:06:28.430 --> 00:06:30.710
We have our app, but we kind
of need to get some data.

00:06:30.710 --> 00:06:31.550
EMILY FORTUNA: Yes.

00:06:31.550 --> 00:06:34.850
Matt, would you like
to take the keyboard?

00:06:34.850 --> 00:06:38.000
So we're going to be
using the Google Places

00:06:38.000 --> 00:06:42.290
API to get information
about a specific location

00:06:42.290 --> 00:06:44.510
and return restaurant data.

00:06:44.510 --> 00:06:49.670
Now because, alas, poor
Matt does not speak URL,

00:06:49.670 --> 00:06:52.550
we are going to be
copying in a places

00:06:52.550 --> 00:06:54.410
file that has the
URL we're going to be

00:06:54.410 --> 00:06:57.870
using to request that data.

00:06:57.870 --> 00:06:59.900
So I mentioned
this place is API.

00:06:59.900 --> 00:07:03.050
There's a couple of
ways you can call it.

00:07:03.050 --> 00:07:07.160
There is the HTP RESTful API.

00:07:07.160 --> 00:07:10.760
But there's also iOS and
Android API, as well.

00:07:10.760 --> 00:07:15.870
But since we're going to code
it all in Dart, we got this.

00:07:15.870 --> 00:07:19.400
All right, so Matt has
pulled up this places file.

00:07:19.400 --> 00:07:22.820
It's a standalone file, so we
can run it from the command

00:07:22.820 --> 00:07:26.930
line and you can see what
data we're pulling down first,

00:07:26.930 --> 00:07:29.910
and then we'll hook it
up to our Flutter app.

00:07:29.910 --> 00:07:32.660
So we've got a main,
we've got a place class.

00:07:32.660 --> 00:07:36.290
It has a name, rating,
address, and then

00:07:36.290 --> 00:07:39.830
we've got our little constructor
and a nice two string

00:07:39.830 --> 00:07:41.300
for the results.

00:07:41.300 --> 00:07:42.860
All right, so down
to get places,

00:07:42.860 --> 00:07:44.870
which is where the
interesting stuff is,

00:07:44.870 --> 00:07:47.870
here is this URL that we did
not want to try and remember.

00:07:47.870 --> 00:07:49.370
MATT SULLIVAN: Yeah,
I can't believe

00:07:49.370 --> 00:07:50.520
you didn't think I
could remember that.

00:07:50.520 --> 00:07:51.220
EMILY FORTUNA: Yeah, well.

00:07:51.220 --> 00:07:51.850
MATT SULLIVAN: Look at it.

00:07:51.850 --> 00:07:52.725
EMILY FORTUNA: Sorry.

00:07:52.725 --> 00:07:54.680
Maybe next time.

00:07:54.680 --> 00:07:58.700
So we've got a location
for latitude and longitude.

00:07:58.700 --> 00:08:00.990
In this case, we're passing
in some dummy coordinates

00:08:00.990 --> 00:08:03.990
for Venice Beach, which is
where our current location is.

00:08:03.990 --> 00:08:08.340
And then, we're going to make a
request to give me restaurants

00:08:08.340 --> 00:08:12.960
all within 500 meters of this
specific geographic location.

00:08:12.960 --> 00:08:14.700
And then we're passing
in this key, which

00:08:14.700 --> 00:08:18.525
tells Google Maps, hey, this
is who's making the request.

00:08:18.525 --> 00:08:21.100
MATT SULLIVAN: Nobody gets
to see my private key.

00:08:21.100 --> 00:08:22.030
EMILY FORTUNA: Yes.

00:08:22.030 --> 00:08:28.770
So to do this call, we're going
to be using the HTTP library.

00:08:28.770 --> 00:08:31.020
You probably want to--

00:08:31.020 --> 00:08:32.220
we need a package.

00:08:32.220 --> 00:08:33.360
MATT SULLIVAN: I need to
add the dependency, right?

00:08:33.360 --> 00:08:33.620
EMILY FORTUNA: Yes.

00:08:33.620 --> 00:08:34.770
MATT SULLIVAN: OK.

00:08:34.770 --> 00:08:36.260
EMILY FORTUNA: So
to do that, we're

00:08:36.260 --> 00:08:37.676
going to open up
our pubspec.yaml,

00:08:37.676 --> 00:08:44.150
Specked and Matt's going
to add this HTTP library.

00:08:44.150 --> 00:08:47.250
And you see this
little carrot here

00:08:47.250 --> 00:08:52.620
that's saying I'm going to
use anything 0.11.3 or above.

00:08:52.620 --> 00:08:57.420
And then on save, it pulled
down the package right there.

00:08:57.420 --> 00:08:59.500
MATT SULLIVAN: Handy
feature, again, of the IDs

00:08:59.500 --> 00:09:01.595
is that it's automatically
pulling the packages,

00:09:01.595 --> 00:09:02.845
as soon as I edit the pubspec.

00:09:02.845 --> 00:09:04.960
So we should be good to go.

00:09:04.960 --> 00:09:07.680
EMILY FORTUNA: So
back on places,

00:09:07.680 --> 00:09:09.600
we now have the package.

00:09:09.600 --> 00:09:10.741
Do we have the import?

00:09:10.741 --> 00:09:11.616
MATT SULLIVAN: Mm-hm.

00:09:11.616 --> 00:09:13.032
EMILY FORTUNA: We
have the import.

00:09:13.032 --> 00:09:14.610
Cool All right.

00:09:14.610 --> 00:09:16.230
Scroll down again.

00:09:16.230 --> 00:09:25.500
And so, getting HTTP information
is pretty easy with Dart.

00:09:25.500 --> 00:09:30.480
You just call HTTP.get pass URL,
and then you pass in a callback

00:09:30.480 --> 00:09:33.570
that you want to be called
when you get your results.

00:09:33.570 --> 00:09:36.240
In this case-- so it
returns the future,

00:09:36.240 --> 00:09:39.360
and you call-- in this case, we
are printing out the results.

00:09:39.360 --> 00:09:41.680
So Matt, you want to run
this on the command line?

00:09:41.680 --> 00:09:44.010
MATT SULLIVAN: All right,
let's get this running.

00:09:49.092 --> 00:09:50.294
EMILY FORTUNA: All right.

00:09:50.294 --> 00:09:50.960
Unreadable JSON.

00:09:50.960 --> 00:09:53.640
MATT SULLIVAN: We
have some JSON.

00:09:53.640 --> 00:09:55.100
End of presentation.

00:09:55.100 --> 00:09:55.640
There we go.

00:09:55.640 --> 00:09:56.200
JSON.

00:09:56.200 --> 00:09:56.700
Done.

00:09:56.700 --> 00:09:57.492
Woo.

00:09:57.492 --> 00:09:58.848
[APPLAUSE]

00:10:00.384 --> 00:10:01.800
EMILY FORTUNA: So OK.

00:10:01.800 --> 00:10:04.040
So we've got some JSON.

00:10:04.040 --> 00:10:06.290
Now if this were an
interview problem,

00:10:06.290 --> 00:10:08.150
your next step would
be to parse all this

00:10:08.150 --> 00:10:09.600
into [INAUDIBLE] objects.

00:10:09.600 --> 00:10:11.900
But because this is not
an interview problem,

00:10:11.900 --> 00:10:14.135
we are going to use
the Dart streams API--

00:10:14.135 --> 00:10:15.260
MATT SULLIVAN: Yes, we are.

00:10:15.260 --> 00:10:19.710
EMILY FORTUNA: --to parse
this JSON in a nice way.

00:10:19.710 --> 00:10:21.740
So you see the code down here.

00:10:21.740 --> 00:10:25.845
We are creating our HTTP
client, making the request,

00:10:25.845 --> 00:10:27.470
and then we're creating
the stream API.

00:10:27.470 --> 00:10:32.510
So for all of you people that
are very familiar with Dart

00:10:32.510 --> 00:10:33.867
streams, they're old hat.

00:10:33.867 --> 00:10:35.450
But in case you're
not, the difference

00:10:35.450 --> 00:10:38.240
between streams and futures
are they're both asynchronous,

00:10:38.240 --> 00:10:42.680
but a future is returning once,
whereas a stream is returning

00:10:42.680 --> 00:10:45.540
multiple pieces of data.

00:10:45.540 --> 00:10:48.140
So in this case, yes, we're
making that HTTP request

00:10:48.140 --> 00:10:50.690
and we're returning once,
but then what we want to do

00:10:50.690 --> 00:10:53.600
is turn that stream
into a stream

00:10:53.600 --> 00:10:55.550
with multiple pieces,
where we are returning

00:10:55.550 --> 00:10:57.380
each individual
restaurant that is

00:10:57.380 --> 00:10:59.360
in the results as an
item in the stream.

00:10:59.360 --> 00:11:01.610
MATT SULLIVAN: So how are
we going to break this down?

00:11:01.610 --> 00:11:03.193
EMILY FORTUNA: So
we are going to call

00:11:03.193 --> 00:11:07.490
this transform to decode the--

00:11:07.490 --> 00:11:08.240
because yeah.

00:11:08.240 --> 00:11:09.615
If you print it
out right now, it

00:11:09.615 --> 00:11:10.910
will just be a bunch of bytes.

00:11:10.910 --> 00:11:12.743
MATT SULLIVAN: Let me
quickly show that I've

00:11:12.743 --> 00:11:14.430
got some stuff done here.

00:11:14.430 --> 00:11:18.660
So we listen to the stream and
then we close it on [INAUDIBLE]

00:11:18.660 --> 00:11:22.830
Actually, let me show
you with just the bytes.

00:11:22.830 --> 00:11:24.800
EMILY FORTUNA: If you
can't read URL bytes.

00:11:24.800 --> 00:11:25.170
MATT SULLIVAN: Here we go.

00:11:25.170 --> 00:11:26.340
That's even better.

00:11:26.340 --> 00:11:27.173
EMILY FORTUNA: Yeah.

00:11:27.173 --> 00:11:29.250
All right, so back
to transforming it

00:11:29.250 --> 00:11:31.020
into interesting things.

00:11:31.020 --> 00:11:32.760
So let's go back
to transforming it

00:11:32.760 --> 00:11:35.180
into a readable string
with that UTF decoder,

00:11:35.180 --> 00:11:38.306
and we can transform
it into a JSON object.

00:11:38.306 --> 00:11:39.190
MATT SULLIVAN: Yep.

00:11:39.190 --> 00:11:40.230
EMILY FORTUNA: And
then we're going

00:11:40.230 --> 00:11:41.910
to call this expand
method, and this

00:11:41.910 --> 00:11:44.940
is where we're taking that
one JSON response and, like,

00:11:44.940 --> 00:11:48.095
parsing it out into individual
restaurants from the results.

00:11:48.095 --> 00:11:50.220
MATT SULLIVAN: And the nice
thing about this-- this

00:11:50.220 --> 00:11:52.580
is a real world example
using the Google Places API.

00:11:52.580 --> 00:11:55.890
There's a lot of metadata in
the JSON, so what you see here

00:11:55.890 --> 00:11:58.620
is we really want the
results list, which

00:11:58.620 --> 00:12:01.120
is embedded in the JSON object.

00:12:01.120 --> 00:12:03.180
So we're digging
in, we're making

00:12:03.180 --> 00:12:04.920
sure the typing is
correct, to make sure

00:12:04.920 --> 00:12:06.724
that it knows the
JSONBuddy is a map,

00:12:06.724 --> 00:12:08.640
and then we're expanding
the individual pieces

00:12:08.640 --> 00:12:14.524
and the results to get
out a whole bunch of not--

00:12:14.524 --> 00:12:15.690
EMILY FORTUNA: JSON objects?

00:12:15.690 --> 00:12:16.481
MATT SULLIVAN: Yes.

00:12:16.481 --> 00:12:17.137
Thank you.

00:12:17.137 --> 00:12:17.970
EMILY FORTUNA: Yeah.

00:12:17.970 --> 00:12:21.780
And so now we have these JSON
objects of restaurant results,

00:12:21.780 --> 00:12:24.510
and we want to
make place objects.

00:12:24.510 --> 00:12:27.090
And so that's what this
map method is about.

00:12:27.090 --> 00:12:30.760
We're constructing a new
place from that JSON.

00:12:30.760 --> 00:12:31.620
Cool.

00:12:31.620 --> 00:12:34.650
So now, if you print
it out, you should

00:12:34.650 --> 00:12:37.314
get-- we can make use of
that nice two stream method.

00:12:37.314 --> 00:12:39.480
MATT SULLIVAN: So we have
gone from a bunch of bytes

00:12:39.480 --> 00:12:42.140
through streams to a bunch of--

00:12:42.140 --> 00:12:43.140
EMILY FORTUNA: All right

00:12:43.140 --> 00:12:44.355
MATT SULLIVAN: --places.

00:12:44.355 --> 00:12:45.690
Yay!

00:12:45.690 --> 00:12:49.100
EMILY FORTUNA: We can
use an HTTP restful API!

00:12:49.100 --> 00:12:49.760
OK.

00:12:49.760 --> 00:12:51.984
So let's get to
the exciting stuff.

00:12:51.984 --> 00:12:53.400
Let's put this
back up to Flutter.

00:12:53.400 --> 00:12:54.816
MATT SULLIVAN:
Let's do more HTTP.

00:12:54.816 --> 00:12:55.920
That's awesome.

00:12:55.920 --> 00:12:56.670
EMILY FORTUNA: OK.

00:12:56.670 --> 00:12:57.825
So we do this.

00:12:57.825 --> 00:12:59.960
We want to return the stream
that we just created--

00:12:59.960 --> 00:13:00.660
MATT SULLIVAN: Oh dear.

00:13:00.660 --> 00:13:01.800
EMILY FORTUNA: --to
our Flutter app.

00:13:01.800 --> 00:13:02.640
MATT SULLIVAN: So I'm
going to be returning what?

00:13:02.640 --> 00:13:03.159
A future?

00:13:03.159 --> 00:13:04.700
EMILY FORTUNA: Return
to your future.

00:13:04.700 --> 00:13:07.740
MATT SULLIVAN: It's going to be
a stream, which I can't spell.

00:13:07.740 --> 00:13:09.540
And it's going to be
a stream of place.

00:13:09.540 --> 00:13:10.040
Cool

00:13:10.040 --> 00:13:11.730
EMILY FORTUNA: Yeah.

00:13:11.730 --> 00:13:13.560
And then yeah.

00:13:13.560 --> 00:13:14.370
Cool.

00:13:14.370 --> 00:13:15.770
So let's go back to main.

00:13:15.770 --> 00:13:15.980
MATT SULLIVAN:
Well, we're actually

00:13:15.980 --> 00:13:17.460
going to write some
Flutter again, are we?

00:13:17.460 --> 00:13:17.960
OK.

00:13:17.960 --> 00:13:18.559
Good, good.

00:13:18.559 --> 00:13:20.850
Do I get to code now and not
just comment and uncomment

00:13:20.850 --> 00:13:21.349
things?

00:13:21.349 --> 00:13:22.160
EMILY FORTUNA: Do.

00:13:22.160 --> 00:13:23.160
MATT SULLIVAN: Pressure.

00:13:23.160 --> 00:13:24.150
OK.

00:13:24.150 --> 00:13:28.960
EMILY FORTUNA: All right,
so back in our main app,

00:13:28.960 --> 00:13:32.280
we want to call this
get places call.

00:13:32.280 --> 00:13:37.070
So in its state, let's
make a function called,

00:13:37.070 --> 00:13:40.080
listen for places.

00:13:40.080 --> 00:13:42.890
And then, let's define that.

00:13:42.890 --> 00:13:47.370
And since that get places
is going to return a future,

00:13:47.370 --> 00:13:49.874
this is async, yes.

00:13:49.874 --> 00:13:50.790
MATT SULLIVAN: Whoops.

00:13:50.790 --> 00:13:51.630
There you go.

00:13:51.630 --> 00:13:55.646
EMILY FORTUNA: And then we may
want to import our places.dart.

00:13:55.646 --> 00:13:57.270
But then we're going
to call it places.

00:13:57.270 --> 00:13:58.307
MATT SULLIVAN: Oh, we need to--

00:13:58.307 --> 00:13:58.445
yeah.

00:13:58.445 --> 00:14:00.030
So we need to import our places.

00:14:00.030 --> 00:14:01.829
I got you.

00:14:01.829 --> 00:14:04.550
Places.dart.

00:14:04.550 --> 00:14:06.080
Am I talking while I code again?

00:14:06.080 --> 00:14:06.590
I do that.

00:14:06.590 --> 00:14:07.089
Yeah, sorry.

00:14:09.650 --> 00:14:10.980
OK, so listen for places--

00:14:10.980 --> 00:14:11.480
async.

00:14:11.480 --> 00:14:13.354
I guess we're going to
grab the stream, yeah?

00:14:13.354 --> 00:14:15.710
EMILY FORTUNA: Yeah,
call it get places.

00:14:15.710 --> 00:14:18.410
And then we can pass in those
Venice Beach coordinates

00:14:18.410 --> 00:14:19.115
to start with.

00:14:19.115 --> 00:14:20.365
MATT SULLIVAN: All right,
let me get those coordinates,

00:14:20.365 --> 00:14:22.041
so we can just pass those in.

00:14:25.340 --> 00:14:25.984
OK.

00:14:25.984 --> 00:14:27.025
EMILY FORTUNA: All right.

00:14:27.025 --> 00:14:29.067
And you want to do a wait.

00:14:29.067 --> 00:14:30.650
MATT SULLIVAN: I do
want to do a wait.

00:14:30.650 --> 00:14:31.710
Why do I want to
do a wait again?

00:14:31.710 --> 00:14:32.840
EMILY FORTUNA: We're
getting this future,

00:14:32.840 --> 00:14:35.330
and then we want to just get
the stream from the future.

00:14:35.330 --> 00:14:37.920
And so it's a nice
way of saying,

00:14:37.920 --> 00:14:40.130
hey, don't proceed on
execution until the next step

00:14:40.130 --> 00:14:41.870
until I get that result.

00:14:41.870 --> 00:14:44.400
MATT SULLIVAN: But the result
is going to be the stream, not

00:14:44.400 --> 00:14:46.300
the full list of things, right?

00:14:46.300 --> 00:14:46.500
EMILY FORTUNA: Right.

00:14:46.500 --> 00:14:47.525
MATT SULLIVAN: Yeah, OK.

00:14:47.525 --> 00:14:49.980
EMILY FORTUNA: So now, our
stream-- we want to say,

00:14:49.980 --> 00:14:52.010
yes, we want to
listen to the stream,

00:14:52.010 --> 00:14:55.820
and we want to say, hey, for
each place object we get,

00:14:55.820 --> 00:14:58.924
we want to convert it
to a Flutter widget.

00:14:58.924 --> 00:15:01.340
Or actually, we want to add
it to our list, to start with.

00:15:01.340 --> 00:15:02.700
MATT SULLIVAN: We want to
add it to out list, OK.

00:15:02.700 --> 00:15:04.074
So I'm going to
add it to places,

00:15:04.074 --> 00:15:07.070
but that's going to be
the wrong type, so--

00:15:07.070 --> 00:15:08.300
EMILY FORTUNA: Yes.

00:15:08.300 --> 00:15:09.590
Change to place.

00:15:09.590 --> 00:15:10.300
List of place.

00:15:10.300 --> 00:15:12.020
MATT SULLIVAN: And
let me fix this.

00:15:12.020 --> 00:15:14.390
OK.

00:15:14.390 --> 00:15:16.250
EMILY FORTUNA: In
places.add, right?

00:15:19.226 --> 00:15:19.900
There you go.

00:15:19.900 --> 00:15:20.380
MATT SULLIVAN: There we go.

00:15:20.380 --> 00:15:21.270
OK, good.

00:15:21.270 --> 00:15:22.630
EMILY FORTUNA: Cool.

00:15:22.630 --> 00:15:26.050
Now we want to scroll down
for where we're actually

00:15:26.050 --> 00:15:27.650
printing out the stuff, and--

00:15:27.650 --> 00:15:28.560
MATT SULLIVAN: This is no
longer going to be a string.

00:15:28.560 --> 00:15:30.302
This is going to
be a place object,

00:15:30.302 --> 00:15:31.510
and let's print out the name.

00:15:31.510 --> 00:15:32.756
EMILY FORTUNA: Cool.

00:15:32.756 --> 00:15:34.330
MATT SULLIVAN: Uh oh.

00:15:34.330 --> 00:15:35.082
What happened?

00:15:35.082 --> 00:15:36.790
EMILY FORTUNA: We
added a bunch of state.

00:15:36.790 --> 00:15:38.710
We need to do a full restart.

00:15:38.710 --> 00:15:40.720
Oh, and we also
need to set state.

00:15:40.720 --> 00:15:43.497
We need to tell Flutter that--

00:15:43.497 --> 00:15:44.830
MATT SULLIVAN: Oh, you're right.

00:15:44.830 --> 00:15:47.759
OK, so if I do a full restart--

00:15:47.759 --> 00:15:49.050
EMILY FORTUNA: There's nothing!

00:15:49.050 --> 00:15:49.750
MATT SULLIVAN: Here's the thing.

00:15:49.750 --> 00:15:51.370
Like, programming
with Flutter-- it's

00:15:51.370 --> 00:15:54.160
like you do something
daft in your app,

00:15:54.160 --> 00:15:57.130
like I did, and it breaks and
it gives you some information,

00:15:57.130 --> 00:15:59.560
and then you fix it and you
do hot reload, and boom.

00:15:59.560 --> 00:16:00.060
There we go.

00:16:00.060 --> 00:16:00.670
We're back in.

00:16:00.670 --> 00:16:02.170
However, there's
nothing in the list

00:16:02.170 --> 00:16:04.130
because, as you
correctly pointed out,

00:16:04.130 --> 00:16:07.000
we don't actually tell Flutter
that our state has changed.

00:16:07.000 --> 00:16:08.830
EMILY FORTUNA: Yeah,
so because Flutter

00:16:08.830 --> 00:16:11.290
wants to be efficient
about redrawing,

00:16:11.290 --> 00:16:13.990
it won't actually redraw
until you call set state

00:16:13.990 --> 00:16:15.500
to say your state has changed.

00:16:15.500 --> 00:16:18.501
So now we say each time we
get a new place, redraw.

00:16:18.501 --> 00:16:20.250
MATT SULLIVAN: So this
should work, right?

00:16:20.250 --> 00:16:22.647
EMILY FORTUNA: Yes.

00:16:22.647 --> 00:16:23.980
MATT SULLIVAN: Yay, there we go.

00:16:23.980 --> 00:16:27.240
So now we have an ugly list,
but with actual, real data.

00:16:27.240 --> 00:16:27.770
OK.

00:16:27.770 --> 00:16:29.246
[APPLAUSE]

00:16:30.960 --> 00:16:31.710
EMILY FORTUNA: OK.

00:16:31.710 --> 00:16:33.335
MATT SULLIVAN: So we
could end it here,

00:16:33.335 --> 00:16:36.146
and the Flutter team
would be very sad.

00:16:36.146 --> 00:16:37.520
And this is a talk
about Flutter,

00:16:37.520 --> 00:16:39.015
so we should make
this look nicer.

00:16:39.015 --> 00:16:40.890
EMILY FORTUNA: Let's
make it look nice, yeah.

00:16:40.890 --> 00:16:41.990
MATT SULLIVAN: So do you
want to make this look nicer?

00:16:41.990 --> 00:16:42.410
EMILY FORTUNA: Yeah.

00:16:42.410 --> 00:16:43.160
MATT SULLIVAN: OK.

00:16:45.550 --> 00:16:50.320
So what we can do here is
we're showing a list of places.

00:16:50.320 --> 00:16:53.500
So why don't we
create a new widget

00:16:53.500 --> 00:16:56.980
which will render
these places correctly.

00:16:56.980 --> 00:17:00.242
And the thing here is that
these places are stateless.

00:17:00.242 --> 00:17:02.200
We're not going to be
dynamically changing them

00:17:02.200 --> 00:17:02.650
in real time.

00:17:02.650 --> 00:17:03.850
We're just going to
build the list of places.

00:17:03.850 --> 00:17:04.420
It will be fine.

00:17:04.420 --> 00:17:06.609
So we can use a stateless
widget, and what we can do

00:17:06.609 --> 00:17:08.380
is we can just, in
the constructor,

00:17:08.380 --> 00:17:15.339
pass in a place object
and we can use that, then,

00:17:15.339 --> 00:17:17.530
to build up the widget.

00:17:17.530 --> 00:17:19.780
So this is-- usually with
the stateless widget,

00:17:19.780 --> 00:17:21.682
make sure if you're
passing any data in,

00:17:21.682 --> 00:17:23.140
just make it final
because it's not

00:17:23.140 --> 00:17:25.450
going to change, anyway,
because stateless widgets are

00:17:25.450 --> 00:17:26.290
immutable.

00:17:26.290 --> 00:17:29.110
And so what we need to do in
order to make this look good

00:17:29.110 --> 00:17:32.870
is to override the build widget.

00:17:32.870 --> 00:17:34.990
And as you can
see, again, the IDE

00:17:34.990 --> 00:17:38.894
is, like, adding
the methods that we

00:17:38.894 --> 00:17:40.060
need to override, et cetera.

00:17:40.060 --> 00:17:41.890
And it's making-- oh, we
broke it again, did we?

00:17:41.890 --> 00:17:43.590
EMILY FORTUNA: Yeah,
well, build is not--

00:17:43.590 --> 00:17:44.380
MATT SULLIVAN: Oh, OK.

00:17:44.380 --> 00:17:45.755
So we're rendering
a place widget

00:17:45.755 --> 00:17:49.090
and builders are printing
null, and Flutter is sad.

00:17:49.090 --> 00:17:50.110
So why don't we just--

00:17:50.110 --> 00:17:52.420
EMILY FORTUNA: Build returns
null makes Flutter sad.

00:17:52.420 --> 00:17:52.960
So--

00:17:52.960 --> 00:17:53.590
MATT SULLIVAN: What
are we going to use

00:17:53.590 --> 00:17:55.090
to make this look better?

00:17:55.090 --> 00:17:57.700
EMILY FORTUNA: We could use
a list tile, since we've

00:17:57.700 --> 00:17:58.819
got an item in the--

00:17:58.819 --> 00:17:59.610
MATT SULLIVAN: So--

00:17:59.610 --> 00:18:00.818
EMILY FORTUNA: --whole thing.

00:18:00.818 --> 00:18:03.172
MATT SULLIVAN: --Flutter
has a great collection

00:18:03.172 --> 00:18:04.630
of built-in widgets,
and we're just

00:18:04.630 --> 00:18:06.940
going to utilize those
to go from ugly list

00:18:06.940 --> 00:18:10.310
to something that is hopefully
more pleasant on the eye.

00:18:10.310 --> 00:18:12.610
So we have this thing
called a list tile.

00:18:12.610 --> 00:18:14.650
It takes a title,
so I guess we can

00:18:14.650 --> 00:18:18.346
make the title the
name of the place.

00:18:18.346 --> 00:18:20.220
And of course, you can't
just use the string,

00:18:20.220 --> 00:18:21.844
because things are
composed of widgets.

00:18:21.844 --> 00:18:23.800
So we're going to
wrap that in there.

00:18:23.800 --> 00:18:24.341
Hot reload.

00:18:24.341 --> 00:18:24.840
Boom.

00:18:24.840 --> 00:18:30.220
Now we have a nicely spaced
ugly list of strings.

00:18:30.220 --> 00:18:32.577
So what else can
list tile give us?

00:18:32.577 --> 00:18:34.410
EMILY FORTUNA: List
tile-- we have our root.

00:18:34.410 --> 00:18:35.272
We can do subtitle.

00:18:35.272 --> 00:18:36.480
MATT SULLIVAN: OK, so let's--

00:18:36.480 --> 00:18:37.800
EMILY FORTUNA: And we can
add the address there.

00:18:37.800 --> 00:18:39.341
MATT SULLIVAN: Let's
add the subtitle

00:18:39.341 --> 00:18:41.760
and let's stick our
address in there.

00:18:41.760 --> 00:18:46.950
We're going to wrap that,
again, in a text widget.

00:18:46.950 --> 00:18:49.890
And, oh-- so this is
looking a little nicer.

00:18:49.890 --> 00:18:52.890
We've got our addresses.

00:18:52.890 --> 00:18:55.270
We're probably bored of
seeing text widgets, as well.

00:18:55.270 --> 00:18:56.430
So we should probably
use something else.

00:18:56.430 --> 00:18:58.139
So how do we get your
reviews up there?

00:18:58.139 --> 00:18:59.930
Because you want to
know what restaurants--

00:18:59.930 --> 00:19:00.720
EMILY FORTUNA: I want
to know what's good.

00:19:00.720 --> 00:19:02.220
MATT SULLIVAN: Oh,
good or not good.

00:19:02.220 --> 00:19:05.830
EMILY FORTUNA: So we can
pass this leading parameter.

00:19:05.830 --> 00:19:07.770
It'll show things
before that text.

00:19:07.770 --> 00:19:11.790
We can pass in the circle avatar
and pass the rating in there.

00:19:11.790 --> 00:19:14.909
MATT SULLIVAN: OK, so we're
going to use a circle avatar.

00:19:14.909 --> 00:19:16.950
In this tile, we've got
this leading thing, which

00:19:16.950 --> 00:19:19.050
you'll see where it prints.

00:19:19.050 --> 00:19:20.790
And in the circle
avatar, I guess

00:19:20.790 --> 00:19:21.540
we're going to put the rating.

00:19:21.540 --> 00:19:21.940
EMILY FORTUNA: Mm-hm.

00:19:21.940 --> 00:19:24.270
MATT SULLIVAN: OK, and
again, because circle avatar

00:19:24.270 --> 00:19:26.152
is a child, we're
going to use text.

00:19:26.152 --> 00:19:27.610
And of course, our
rating is double

00:19:27.610 --> 00:19:29.280
and because we want to be
correct with our typing,

00:19:29.280 --> 00:19:31.500
we're going to make that
two straight-- oh, look.

00:19:31.500 --> 00:19:33.668
So that's looking
nicer, I think.

00:19:33.668 --> 00:19:35.102
[APPLAUSE]

00:19:37.439 --> 00:19:39.480
And so we've got 10 minutes
left, so we can stop.

00:19:39.480 --> 00:19:40.030
Now, what are you doing?

00:19:40.030 --> 00:19:40.780
Are we still going?

00:19:40.780 --> 00:19:41.440
Oh, you're changing the--

00:19:41.440 --> 00:19:41.860
OK.

00:19:41.860 --> 00:19:42.360
OK.

00:19:42.360 --> 00:19:44.241
We'll keep going.

00:19:44.241 --> 00:19:44.740
There we go.

00:19:44.740 --> 00:19:47.212
OK, so what'll we do next?

00:19:47.212 --> 00:19:49.420
EMILY FORTUNA: Well, I want
to be able to easily look

00:19:49.420 --> 00:19:52.830
from these, based on the
color of the backgrounds,

00:19:52.830 --> 00:19:54.389
what are the really good ones?

00:19:54.389 --> 00:19:56.680
MATT SULLIVAN: So we're going
to update the color based

00:19:56.680 --> 00:20:00.370
on how good the rating is, and
we could do if, then, if, then,

00:20:00.370 --> 00:20:01.660
switch this, that, the other.

00:20:01.660 --> 00:20:03.880
We're not going to do that
because what we can use

00:20:03.880 --> 00:20:08.230
is we can use interpolation,
because a lot of the classes

00:20:08.230 --> 00:20:11.860
and widgets in Flutter have
interpolation baked into them,

00:20:11.860 --> 00:20:18.250
and what we can do with that
is we can use the color class.

00:20:18.250 --> 00:20:27.860
And we're going to linearly
interpolate from red to green,

00:20:27.860 --> 00:20:29.785
and we're going to
interpolate from 0 to 1,

00:20:29.785 --> 00:20:31.160
so if our rating
is 1 to 5, we're

00:20:31.160 --> 00:20:33.050
going to divide that by 5.

00:20:33.050 --> 00:20:36.210
And then, using that,
hopefully one line of code

00:20:36.210 --> 00:20:42.210
and hopefully this works, we're
going to pass in the rating.

00:20:42.210 --> 00:20:43.160
And--

00:20:43.160 --> 00:20:44.201
EMILY FORTUNA: It didn't.

00:20:44.201 --> 00:20:44.840
It's-- so--

00:20:44.840 --> 00:20:46.756
MATT SULLIVAN: OK, so
all of these restaurants

00:20:46.756 --> 00:20:48.150
are pretty close.

00:20:48.150 --> 00:20:50.230
So you're not going to
see-- you can see the--

00:20:50.230 --> 00:20:50.982
OK.

00:20:50.982 --> 00:20:52.190
We're not being mean to this.

00:20:52.190 --> 00:20:54.500
They just don't
have any ratings.

00:20:54.500 --> 00:20:56.410
So we've given it a minus 1.

00:20:56.410 --> 00:20:57.195
Please go there.

00:20:57.195 --> 00:20:58.320
I'm sure they're wonderful.

00:20:58.320 --> 00:20:59.570
EMILY FORTUNA: Please rate it.

00:20:59.570 --> 00:21:03.500
MATT SULLIVAN: But the point
is that we have this nice--

00:21:03.500 --> 00:21:06.320
in one line of code, we have
this blend from red to green.

00:21:06.320 --> 00:21:09.650
We can slide it straight
in, and this is how, like--

00:21:09.650 --> 00:21:11.180
the joy of developing
with Flutter

00:21:11.180 --> 00:21:13.294
is we're messing
with these things.

00:21:13.294 --> 00:21:14.210
We're trying them out.

00:21:14.210 --> 00:21:16.820
We're trying new
things, and now we

00:21:16.820 --> 00:21:19.730
have your app, which
lets you work out where

00:21:19.730 --> 00:21:21.170
you would like to go or not go.

00:21:21.170 --> 00:21:22.199
Are you happy?

00:21:22.199 --> 00:21:24.490
EMILY FORTUNA: Well, once I
visit one, I want to, like,

00:21:24.490 --> 00:21:25.670
check it off the list, you know?

00:21:25.670 --> 00:21:26.450
MATT SULLIVAN: You want
to check it off the list?

00:21:26.450 --> 00:21:26.830
EMILY FORTUNA: Yeah.

00:21:26.830 --> 00:21:27.630
MATT SULLIVAN: OK.

00:21:27.630 --> 00:21:32.930
So with the 10 minutes
we have remaining--

00:21:32.930 --> 00:21:34.730
nine minutes we have
remaining, we're

00:21:34.730 --> 00:21:38.570
going to make Tinder
for restaurants.

00:21:38.570 --> 00:21:40.490
We're going to swipe
right to like--

00:21:40.490 --> 00:21:41.240
that's left.

00:21:41.240 --> 00:21:43.700
And the other way to dislike.

00:21:43.700 --> 00:21:45.150
And how are we going to do that?

00:21:45.150 --> 00:21:47.060
Well, there is a
dismissible widget that's

00:21:47.060 --> 00:21:49.520
handy in the Flutter library.

00:21:49.520 --> 00:21:52.730
Notice how, again, we use
the IDE to wrap the widget

00:21:52.730 --> 00:21:53.960
around the existing widgets.

00:21:53.960 --> 00:21:56.120
Again, it just makes
your life much easier.

00:21:56.120 --> 00:21:58.250
Dismissible takes a key,
and the reason dismissible

00:21:58.250 --> 00:22:00.800
takes a key is that
the dismissibles need

00:22:00.800 --> 00:22:03.200
to track what's been
dismissed and what's hidden.

00:22:03.200 --> 00:22:06.710
So in order to do that,
it has a key associated

00:22:06.710 --> 00:22:07.750
with each one of them.

00:22:07.750 --> 00:22:10.597
And-- oh!

00:22:10.597 --> 00:22:12.034
[APPLAUSE]

00:22:17.355 --> 00:22:18.510
It does things like that.

00:22:18.510 --> 00:22:20.760
I need to talk faster, clearly.

00:22:20.760 --> 00:22:21.710
And so this is great.

00:22:21.710 --> 00:22:22.751
We have this dismissible.

00:22:22.751 --> 00:22:25.290
We have a key, but I don't
know if swiping right or left

00:22:25.290 --> 00:22:26.020
is good or bad.

00:22:26.020 --> 00:22:26.895
So we need to fix it.

00:22:26.895 --> 00:22:28.870
EMILY FORTUNA: Yeah,
we can-- let's see.

00:22:28.870 --> 00:22:30.540
So if we look at a dismissible--

00:22:33.370 --> 00:22:33.870
hover.

00:22:33.870 --> 00:22:36.595
So you can set the background,
secondary background,

00:22:36.595 --> 00:22:38.220
depending on which
direction you swipe.

00:22:38.220 --> 00:22:38.650
You set a color.

00:22:38.650 --> 00:22:39.400
MATT SULLIVAN: OK.

00:22:39.400 --> 00:22:42.360
So let's set the background
and secondary background.

00:22:42.360 --> 00:22:46.110
Again, we can use colors.

00:22:46.110 --> 00:22:48.100
And so we can put in a color.

00:22:48.100 --> 00:22:50.329
Now, we need to use
widgets, so we're

00:22:50.329 --> 00:22:51.870
going to put in a
container and we're

00:22:51.870 --> 00:22:53.280
going to color the
container for that.

00:22:53.280 --> 00:22:54.630
You could put in,
like, any widget.

00:22:54.630 --> 00:22:55.629
You could put in images.

00:22:55.629 --> 00:22:57.300
You could put in
whatever you feel like.

00:22:57.300 --> 00:22:59.258
We're just going to simply
do this with colors.

00:22:59.258 --> 00:23:01.350
So we're going to make
a background green.

00:23:01.350 --> 00:23:08.580
We're going to make secondary
background red, and boom.

00:23:08.580 --> 00:23:10.080
Dismissibles change state.

00:23:10.080 --> 00:23:11.940
We need to do a full restart.

00:23:11.940 --> 00:23:13.780
Oh, it costs us an
extra 200 milliseconds.

00:23:13.780 --> 00:23:14.770
We're so sad.

00:23:14.770 --> 00:23:19.380
And now, swiping left, you get
your green, and swiping right,

00:23:19.380 --> 00:23:20.580
you get your red.

00:23:20.580 --> 00:23:26.480
So we have Tinder
for restaurants.

00:23:26.480 --> 00:23:28.376
We've got a few minutes left.

00:23:28.376 --> 00:23:31.814
We want to-- we didn't
actually get much past this

00:23:31.814 --> 00:23:33.480
when we were planning
this, so let's see

00:23:33.480 --> 00:23:35.730
where we get to with this one.

00:23:35.730 --> 00:23:37.890
So we have dismissed
it, but we're not

00:23:37.890 --> 00:23:40.387
doing anything with the
data where we're dismissing.

00:23:40.387 --> 00:23:41.220
EMILY FORTUNA: Yeah.

00:23:41.220 --> 00:23:42.960
MATT SULLIVAN: So what can
we do with the dismissible?

00:23:42.960 --> 00:23:44.251
EMILY FORTUNA: I want to know--

00:23:44.251 --> 00:23:47.520
I mean, color feedback is great,
but it would be nice to know--

00:23:47.520 --> 00:23:49.020
get a little more
specific feedback

00:23:49.020 --> 00:23:50.490
of what these
swiping things mean.

00:23:50.490 --> 00:23:51.900
MATT SULLIVAN: You want to
have visual feedback on that.

00:23:51.900 --> 00:23:52.260
EMILY FORTUNA: Yeah.

00:23:52.260 --> 00:23:52.800
MATT SULLIVAN: OK.

00:23:52.800 --> 00:23:54.633
So the first thing we're
going to need to do

00:23:54.633 --> 00:23:57.450
is we're going to need
to detect the dismissed.

00:23:57.450 --> 00:24:00.390
And so we have this
handy on dismissed.

00:24:00.390 --> 00:24:04.320
And on dismissed, as far as I
remember, returns direction.

00:24:04.320 --> 00:24:07.920
And this-- we're going
to be able to go,

00:24:07.920 --> 00:24:09.760
is it a left or a
right direction?

00:24:09.760 --> 00:24:15.030
So we're going to be able to
check if that direction is--

00:24:15.030 --> 00:24:17.910
so we're going to check
if the direction is

00:24:17.910 --> 00:24:22.862
equal to dismiss direction left
or dismiss direction right.

00:24:22.862 --> 00:24:23.570
What have we got?

00:24:23.570 --> 00:24:26.570
End to start.

00:24:26.570 --> 00:24:27.790
And what's the other one?

00:24:31.320 --> 00:24:34.250
OK, perfect.

00:24:34.250 --> 00:24:36.190
So we have we like
and we don't like,

00:24:36.190 --> 00:24:38.190
and we hope that they're
in the right direction.

00:24:38.190 --> 00:24:41.607
So if we then do, again, full--

00:24:41.607 --> 00:24:42.440
EMILY FORTUNA: Oops.

00:24:42.440 --> 00:24:43.635
MATT SULLIVAN: A full restart.

00:24:43.635 --> 00:24:44.135
Uh-oh.

00:24:47.280 --> 00:24:50.688
There we go, and we
swipe in one direction.

00:24:50.688 --> 00:24:51.540
I like!

00:24:51.540 --> 00:24:52.150
Well, actually got it backwards.

00:24:52.150 --> 00:24:53.566
EMILY FORTUNA: At
the very bottom.

00:24:53.566 --> 00:24:55.550
MATT SULLIVAN: But
you know, that's fine.

00:24:55.550 --> 00:24:57.120
EMILY FORTUNA: OK, let's
actually see it, though.

00:24:57.120 --> 00:24:58.980
MATT SULLIVAN: OK, so we've
got a couple of minutes.

00:24:58.980 --> 00:25:00.855
Yeah, lets see where we
can get to with this.

00:25:00.855 --> 00:25:04.090
So why don't we show this
visually on the screen?

00:25:04.090 --> 00:25:06.660
And so handily, we're using--

00:25:06.660 --> 00:25:09.330
this is wrapped in a
scaffold, and the scaffold

00:25:09.330 --> 00:25:12.100
gives us access to a snack bar.

00:25:12.100 --> 00:25:15.390
So what we can do is we can
pull up the scaffold object

00:25:15.390 --> 00:25:20.520
and we can show a snack bar.

00:25:20.520 --> 00:25:21.420
So, great.

00:25:21.420 --> 00:25:24.030
What we need now is
we need a widget which

00:25:24.030 --> 00:25:26.122
is going to be snack
bar widget, probably.

00:25:26.122 --> 00:25:27.330
EMILY FORTUNA: Oh, snack bar?

00:25:27.330 --> 00:25:28.740
MATT SULLIVAN: Because
we're showing snack bar.

00:25:28.740 --> 00:25:29.865
EMILY FORTUNA: Yes, my bad.

00:25:32.380 --> 00:25:34.630
MATT SULLIVAN: Well, we'll
add returns in in a minute.

00:25:34.630 --> 00:25:35.480
We'll make this look nice.

00:25:35.480 --> 00:25:36.230
It'll all be good.

00:25:36.230 --> 00:25:37.400
It'll all be good.

00:25:37.400 --> 00:25:42.390
So we go to snack bar, and a
snack bar is going to take--

00:25:42.390 --> 00:25:43.500
EMILY FORTUNA: Content.

00:25:43.500 --> 00:25:44.291
MATT SULLIVAN: Yep.

00:25:46.510 --> 00:25:48.400
And we're going to
give that some text.

00:25:52.800 --> 00:25:54.522
And then we're going to--

00:25:54.522 --> 00:25:56.480
EMILY FORTUNA: I think
I parentheses messed up.

00:25:56.480 --> 00:25:58.313
MATT SULLIVAN: We got
parentheses messed up.

00:25:58.313 --> 00:26:00.320
We can bounce these.

00:26:00.320 --> 00:26:01.310
One more.

00:26:01.310 --> 00:26:02.720
There we go.

00:26:02.720 --> 00:26:04.930
And so what happens
now when we do

00:26:04.930 --> 00:26:10.970
a full restart is going to
be we swipe left or right,

00:26:10.970 --> 00:26:12.122
and we're going to print.

00:26:12.122 --> 00:26:13.330
We swipe the other way, and--

00:26:13.330 --> 00:26:16.059
EMILY FORTUNA: We have
it mixed up, but--

00:26:16.059 --> 00:26:18.100
MATT SULLIVAN: Well, we've
gone off script enough

00:26:18.100 --> 00:26:23.170
that I think probably
a good place to stop.

00:26:23.170 --> 00:26:24.310
Do you think?

00:26:24.310 --> 00:26:25.847
EMILY FORTUNA: OK, OK, OK.

00:26:25.847 --> 00:26:27.430
MATT SULLIVAN: Oh,
we're going to do--

00:26:27.430 --> 00:26:27.929
OK.

00:26:27.929 --> 00:26:28.552
There we go.

00:26:28.552 --> 00:26:30.373
EMILY FORTUNA: There we go.

00:26:30.373 --> 00:26:31.497
MATT SULLIVAN: There we go.

00:26:31.497 --> 00:26:33.365
[APPLAUSE]

00:26:35.805 --> 00:26:39.510
We're going to finish showing
you just a couple of things

00:26:39.510 --> 00:26:41.742
while we have a
couple of minutes.

00:26:41.742 --> 00:26:43.200
When you're building
these, there's

00:26:43.200 --> 00:26:45.750
a very handy overlay
for looking at how

00:26:45.750 --> 00:26:46.980
your widgets are rendered.

00:26:46.980 --> 00:26:49.521
We can just switch it on and
off and toggle it from the menu.

00:26:49.521 --> 00:26:50.970
You can see here
this is actually

00:26:50.970 --> 00:26:53.911
live overlaying on your
device or in the emulator,

00:26:53.911 --> 00:26:56.160
showing you where your padding
is and everything else.

00:26:56.160 --> 00:26:57.930
We haven't changed
our padding much,

00:26:57.930 --> 00:26:59.720
but this is really
handy when you're

00:26:59.720 --> 00:27:01.470
building your widgets
you want to work out

00:27:01.470 --> 00:27:02.880
exactly what's going on there.

00:27:02.880 --> 00:27:03.950
EMILY FORTUNA: Yeah, if
you have custom widgets--

00:27:03.950 --> 00:27:05.910
since we used basically
all out-of-the-box stuff,

00:27:05.910 --> 00:27:07.260
we didn't adjust
padding or anything.

00:27:07.260 --> 00:27:09.570
But if you're doing custom
widgets and need to debug,

00:27:09.570 --> 00:27:10.860
this is your friend.

00:27:10.860 --> 00:27:11.360
Oops.

00:27:11.360 --> 00:27:12.272
Not that.

00:27:15.419 --> 00:27:17.210
MATT SULLIVAN: And then
the one other thing

00:27:17.210 --> 00:27:19.790
we'd like to show
you is performance.

00:27:19.790 --> 00:27:22.490
We want to take a look at
the performance overlay,

00:27:22.490 --> 00:27:25.010
and what this will give you,
like, as we scroll through

00:27:25.010 --> 00:27:27.320
or we interact with things--

00:27:27.320 --> 00:27:32.170
this will give you, basically,
what your refresh rate is.

00:27:32.170 --> 00:27:33.800
You're hitting your
60 FPS or whatnot.

00:27:33.800 --> 00:27:35.210
At the moment, we're doing
pretty well with that

00:27:35.210 --> 00:27:37.280
because we've been using all
the stock standard widgets.

00:27:37.280 --> 00:27:38.270
But this is very handy.

00:27:38.270 --> 00:27:40.730
As you build out your app,
you can bring this up.

00:27:40.730 --> 00:27:42.230
You can play with
what you've built.

00:27:42.230 --> 00:27:44.960
You can see are you getting just
the performance that you need.

00:27:44.960 --> 00:27:46.880
A couple of handy tips there.

00:27:46.880 --> 00:27:47.820
I think we're good.

00:27:47.820 --> 00:27:50.180
We have Tinder for restaurants.

00:27:50.180 --> 00:27:51.260
All of this code--

00:27:51.260 --> 00:27:54.380
actually, we lied because
there is one other slide.

00:27:54.380 --> 00:27:58.271
All of this code
is up on GitHub,

00:27:58.271 --> 00:28:00.020
and you can check it
out and it's evolving

00:28:00.020 --> 00:28:03.600
and we'll continue to
add to this over time.

00:28:03.600 --> 00:28:04.449
So--

00:28:04.449 --> 00:28:06.740
EMILY FORTUNA: Oh, you can
also check that poll request

00:28:06.740 --> 00:28:10.684
where I tried to make a
slider to see the distance,

00:28:10.684 --> 00:28:12.350
depending on how far
you wanted to walk.

00:28:12.350 --> 00:28:15.807
But then I maxed out our
API requests per day.

00:28:15.807 --> 00:28:16.940
MATT SULLIVAN: Yeah.

00:28:16.940 --> 00:28:18.590
Bear in mind when
you use a slider

00:28:18.590 --> 00:28:20.777
and you have it directly
wired to your HTP request--

00:28:20.777 --> 00:28:22.735
EMILY FORTUNA: You might
make a lot of requests

00:28:22.735 --> 00:28:25.025
if you're not
carefully writing it.

00:28:25.025 --> 00:28:27.800
MATT SULLIVAN: Emily destroyed
my quota in Google Cloud.

00:28:27.800 --> 00:28:28.695
Thank you very much.

00:28:28.695 --> 00:28:30.320
We had to wait 24
hours before we could

00:28:30.320 --> 00:28:32.910
start playing with it again.

00:28:32.910 --> 00:28:34.380
Thank you very
much for your time.

00:28:34.380 --> 00:28:35.580
It's been a pleasure.

00:28:35.580 --> 00:28:37.730
[APPLAUSE]

