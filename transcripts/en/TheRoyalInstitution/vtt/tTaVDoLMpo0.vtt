WEBVTT
Kind: captions
Language: en

00:00:09.600 --> 00:00:11.950
The evolution of technology
has influenced the way we

00:00:11.950 --> 00:00:13.360
create music.

00:00:13.360 --> 00:00:16.149
Computers are smarter than
they've ever been before, and

00:00:16.149 --> 00:00:18.790
they have become essential to
modern music production and

00:00:18.790 --> 00:00:20.020
live performance.

00:00:20.020 --> 00:00:21.590
But where do we go from here?

00:00:21.590 --> 00:00:34.070
[MUSIC PLAYING]

00:00:34.070 --> 00:00:37.020
I'm a research fellow looking
at synchronisation in live

00:00:37.020 --> 00:00:38.190
performance.

00:00:38.190 --> 00:00:41.400
This is how you might get
technology to respond and

00:00:41.400 --> 00:00:43.171
listen to live musicians
as they play.

00:00:46.260 --> 00:00:48.640
But in order to do that,
we need to teach

00:00:48.640 --> 00:00:49.890
the computer to listen.

00:00:52.700 --> 00:00:55.870
Some bands might want technology
to play an

00:00:55.870 --> 00:01:00.370
important part in their live
show, for instance the samples

00:01:00.370 --> 00:01:04.019
and sequences that are there
in the studio are playing.

00:01:04.019 --> 00:01:06.210
And in order to do that commonly
at the moment, they

00:01:06.210 --> 00:01:07.730
use a backing track.

00:01:07.730 --> 00:01:10.660
And that generally involves
a drummer listening to a

00:01:10.660 --> 00:01:13.250
metronome click that's
in his ears.

00:01:13.250 --> 00:01:16.530
And effectively you're then a
slave to that technology.

00:01:16.530 --> 00:01:19.250
You're following a fixed
metronomic pace.

00:01:19.250 --> 00:01:22.170
And the music isn't really
live in the sense that we

00:01:22.170 --> 00:01:25.570
know, if you think of old bands
like Led Zeppelin or the

00:01:25.570 --> 00:01:26.820
Rolling Stones.

00:01:31.140 --> 00:01:35.460
So I started doing research here
at the Centre of Digital

00:01:35.460 --> 00:01:38.660
Music Queen Mary University in
London, in a system that would

00:01:38.660 --> 00:01:40.330
follow the drums, basically.

00:01:40.330 --> 00:01:42.150
On the basis that the drums
are central to a

00:01:42.150 --> 00:01:43.580
rock and roll band.

00:01:43.580 --> 00:01:45.770
And that's probably what
the musicians follow.

00:01:45.770 --> 00:01:49.470
So if we get the system to
follow the drummer, you're

00:01:49.470 --> 00:01:51.840
sort of replacing that click
track, essentially.

00:01:51.840 --> 00:01:54.900
The click track that used to
maybe have to be listened to

00:01:54.900 --> 00:01:59.330
by the drummer, that would
listen to him instead, and

00:01:59.330 --> 00:02:02.240
follow him.

00:02:02.240 --> 00:02:07.140
Sound travels in waves, rather
like the ripples in a stream.

00:02:07.140 --> 00:02:10.460
And the distance between the
peaks of those waves is the

00:02:10.460 --> 00:02:11.510
wavelength.

00:02:11.510 --> 00:02:13.290
That determines the pitch
that we hear.

00:02:16.290 --> 00:02:20.370
So if we want to change the
speed of sound, ordinarily you

00:02:20.370 --> 00:02:22.480
might just play it faster.

00:02:22.480 --> 00:02:23.840
But that will change the pitch,

00:02:23.840 --> 00:02:25.500
like on a record player.

00:02:25.500 --> 00:02:28.140
Instead we use something called
time stretching, where

00:02:28.140 --> 00:02:31.630
we chop the sound into grains,
like this ball.

00:02:31.630 --> 00:02:34.790
And then if we want this piece
of sound to be shorter, we'll

00:02:34.790 --> 00:02:37.430
just remove some
of the grains.

00:02:37.430 --> 00:02:39.400
And it will go faster,
but each of

00:02:39.400 --> 00:02:40.479
them at the same pitch.

00:02:40.479 --> 00:02:45.640
[MUSIC PLAYING]

00:02:45.640 --> 00:02:48.730
Well I've effectively got the
sequencer running, which is

00:02:48.730 --> 00:02:49.790
the backing music.

00:02:49.790 --> 00:02:51.410
And the click track
gets fed in.

00:02:51.410 --> 00:02:54.750
So you're monitoring both the
drums coming in and it's own

00:02:54.750 --> 00:02:57.050
internal click.

00:02:57.050 --> 00:03:00.800
And I'm also looking a bit at
how it handles these patterns.

00:03:00.800 --> 00:03:03.840
Because he's an interesting
drummer to have play.

00:03:03.840 --> 00:03:09.700
He's not just doing a very basic
beat, more of a funky

00:03:09.700 --> 00:03:12.700
kind of syncopated thing than
just, say, a straight rhythm.

00:03:12.700 --> 00:03:15.750
I think that's why it's an
interesting test case to get

00:03:15.750 --> 00:03:18.500
this to look at it.

00:03:18.500 --> 00:03:20.370
Dave the drummer is
the one running.

00:03:20.370 --> 00:03:23.630
And that's me on the bike,
represents the click track.

00:03:23.630 --> 00:03:26.180
He can't speed up or slow down
because he has to stay

00:03:26.180 --> 00:03:29.030
in time with me.

00:03:29.030 --> 00:03:32.040
If the drummer does speed up
or slow down, he won't stay

00:03:32.040 --> 00:03:33.920
with the steady click
track, and the sound

00:03:33.920 --> 00:03:35.170
will be out of sync.

00:03:38.850 --> 00:03:41.780
What my software does is allow
Dave the drummer to go as fast

00:03:41.780 --> 00:03:43.520
or slow as he likes.

00:03:43.520 --> 00:03:45.525
By time stretching, the
click track will stay

00:03:45.525 --> 00:03:48.260
in time with him.

00:03:48.260 --> 00:03:51.270
In the studio, I'm testing how
well my software can keep up

00:03:51.270 --> 00:03:52.520
with a real drummer.

00:03:57.670 --> 00:04:00.750
So I've asked him to try
changing tempo to see how well

00:04:00.750 --> 00:04:02.940
he thinks the click track
keeps up with him.

00:04:02.940 --> 00:04:07.700
Part of the problem
is he's too good.

00:04:07.700 --> 00:04:10.650
Drummers are so well trained to
adhere to click tracks that

00:04:10.650 --> 00:04:13.315
being in charge one, instead of
it being in charge of you

00:04:13.315 --> 00:04:14.580
is a very alien concept.

00:04:18.180 --> 00:04:20.820
I think what's interesting
about this is it could

00:04:20.820 --> 00:04:27.550
eliminate the drummer having to
be a slave to a click track

00:04:27.550 --> 00:04:29.440
in his ear.

00:04:29.440 --> 00:04:33.500
The drummer can kind of keep
a steady-ish tempo.

00:04:33.500 --> 00:04:36.770
This system will be able
to follow what

00:04:36.770 --> 00:04:38.102
the drummer is doing.

00:04:43.994 --> 00:04:46.450
I think in terms of results it's
interesting to hear Matt

00:04:46.450 --> 00:04:47.740
talk about technology.

00:04:47.740 --> 00:04:50.350
It's not something he's used
to, really, a backing track

00:04:50.350 --> 00:04:51.470
that moves.

00:04:51.470 --> 00:04:53.900
I suppose beyond this, you'd
want to go and see how it

00:04:53.900 --> 00:04:58.200
works in a band, in a live
setting, and see what creative

00:04:58.200 --> 00:05:01.790
uses do people want
to put it to.

00:05:01.790 --> 00:05:05.270
Can they create a hybrid kind
of music, where you've got

00:05:05.270 --> 00:05:09.080
live musicians and some other
more sample or computer-based

00:05:09.080 --> 00:05:11.450
stuff going on?

00:05:11.450 --> 00:05:13.540
Well the system isn't yet
perfect, and there's still

00:05:13.540 --> 00:05:14.250
work to do.

00:05:14.250 --> 00:05:16.900
But for now, I'm happy.

00:05:16.900 --> 00:05:19.210
If you're interested to know
more about my research or want

00:05:19.210 --> 00:05:22.460
to try out this software, feel
free to contact me, Andrew

00:05:22.460 --> 00:05:26.090
Robertson, at Queen Mary
University of London.

00:05:26.090 --> 00:05:28.290
You can also visit
the website.

00:05:28.290 --> 00:05:30.610
That's b-keeper.org.

00:05:30.610 --> 00:05:51.700
[DRUMS PLAYING]

