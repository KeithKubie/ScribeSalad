WEBVTT
Kind: captions
Language: en

00:00:00.150 --> 00:00:02.740
Now let's discuss the solution to our dependencies and

00:00:02.740 --> 00:00:06.160
hazards quiz. First, let's figure out the dependencies. Again,

00:00:06.160 --> 00:00:09.660
dependencies are a property of the program alone so

00:00:09.660 --> 00:00:11.840
we don't have to worry about the pipeline yet.

00:00:11.840 --> 00:00:16.190
Each of these instructions has a dependence on R1

00:00:16.190 --> 00:00:19.194
from the add to that instruction. Which of these

00:00:19.194 --> 00:00:22.950
dependencies or hazards does depend on the pipeline? To

00:00:22.950 --> 00:00:25.150
check whether the dependence is a hazard, we need

00:00:25.150 --> 00:00:26.800
to figure out when does the read of

00:00:26.800 --> 00:00:29.990
the register happen and when does it get written.

00:00:29.990 --> 00:00:33.210
In the stage where the subtract is reading

00:00:33.210 --> 00:00:36.798
the register, the add is still writing it, so

00:00:36.798 --> 00:00:43.360
the subtract may not get the value from the add, so there is a hazard here. In

00:00:43.360 --> 00:00:46.670
the cycle when the divide is reading the register

00:00:46.670 --> 00:00:50.620
R1, the subtract is here and the add has

00:00:50.620 --> 00:00:55.080
left the pipeline, which means the divide is reading the value

00:00:55.080 --> 00:00:58.830
of R1 that was already written by the add. So there is

00:00:58.830 --> 00:01:03.570
no hazard here and, of course, the multiply reads the same

00:01:03.570 --> 00:01:08.040
register one cycle after the divide so it also has no hazard.

