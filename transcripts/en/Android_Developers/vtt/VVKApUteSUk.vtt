WEBVTT
Kind: captions
Language: en

00:00:04.160 --> 00:00:06.180
&gt;&gt;Sparky: Android Developer Relations Office
Hours.

00:00:06.180 --> 00:00:12.120
I'm Sparky in Munich Germany and I'm joined
by my colleagues Rich, and Nick and Matt in

00:00:12.120 --> 00:00:13.120
London UK.

00:00:13.120 --> 00:00:14.120
&gt;&gt;Rich: Hi there.

00:00:14.120 --> 00:00:19.050
&gt;&gt;Sparky: And we're here to talk to you about
any and all issues related to the development

00:00:19.050 --> 00:00:21.250
of android applications.

00:00:21.250 --> 00:00:27.130
So with that, maybe Rich would like to deliver
his famous disclaimer which he does so well.

00:00:27.130 --> 00:00:30.910
&gt;&gt;Rich: [laughs] At the start of every android
developer office hours, we like to inform

00:00:30.910 --> 00:00:33.990
the viewers who are currently zero, that—

00:00:33.990 --> 00:00:34.990
[laughter]

00:00:34.990 --> 00:00:37.760
&gt;&gt;Rich: Unless you're watching this later
on YouTube.

00:00:37.760 --> 00:00:44.240
That we won't be discussing any feature, future,
future features, roadmaps, or suchlike.

00:00:44.240 --> 00:00:46.180
Is that--??

00:00:46.180 --> 00:00:47.180
[laughter]

00:00:47.180 --> 00:00:48.180
Concise enough for you?

00:00:48.180 --> 00:00:49.840
This is a Development Office Hours.

00:00:49.840 --> 00:00:51.960
We're here to answer technical questions on
android.

00:00:51.960 --> 00:00:55.210
Just discuss, we can talk about things like
the week's news.

00:00:55.210 --> 00:00:56.829
And android features.

00:00:56.829 --> 00:00:59.320
But nothing that hasn't been announced or
released.

00:00:59.320 --> 00:01:00.320
[pause]

00:01:00.320 --> 00:01:01.320
[Hangout dings]

00:01:01.320 --> 00:01:05.890
&gt;&gt;Sparky: Does anybody have anything that
they would like to bring up before we start

00:01:05.890 --> 00:01:08.110
trying to drive the discussion in any particular
direction?

00:01:08.110 --> 00:01:09.110
[woman's voice in background]

00:01:09.110 --> 00:01:10.110
&gt;&gt;Yossi: Hi guys.

00:01:10.110 --> 00:01:11.110
&gt;&gt;Sparky: Hey Yossi, how are you?

00:01:11.110 --> 00:01:12.110
&gt;&gt;Yossi: Fine.

00:01:12.110 --> 00:01:14.030
&gt;&gt;Sparky: By the way, we have a question waiting
for you.

00:01:14.030 --> 00:01:15.760
&gt;&gt;Yossi: For me?

00:01:15.760 --> 00:01:16.760
&gt;&gt;Sparky: Yeah.

00:01:16.760 --> 00:01:17.760
&gt;&gt;Yossi: OK.

00:01:17.760 --> 00:01:19.160
&gt;&gt;Sparky: But go ahead.

00:01:19.160 --> 00:01:20.160
What's on your mind?

00:01:20.160 --> 00:01:22.720
&gt;&gt;Yossi: I'm having difficulties with Google
API console.

00:01:22.720 --> 00:01:27.940
Uh, we're trying to do twelve-hour application.

00:01:27.940 --> 00:01:35.750
Through the Google API console so we can do
an OAuth on all android clients and so on.

00:01:35.750 --> 00:01:41.361
And, I've tried to contact some people on,
few people on Google about it.

00:01:41.361 --> 00:01:43.990
There's a bug in the console.

00:01:43.990 --> 00:01:46.840
And I would like to see if you can help us.

00:01:46.840 --> 00:01:48.399
It's quite urgent.

00:01:48.399 --> 00:01:49.399
Yeah.

00:01:49.399 --> 00:01:53.030
And if you want I can do a screen sharing,
for a few seconds.

00:01:53.030 --> 00:01:54.539
&gt;&gt;Rich: Well, I've already, I've already seen
this issue, you know.

00:01:54.539 --> 00:01:55.539
Yeah.

00:01:55.539 --> 00:01:57.130
I think you sent it on to someone in Google
[unintelligible] hour, and they forwarded

00:01:57.130 --> 00:01:58.130
it on to me.

00:01:58.130 --> 00:02:02.629
And I forwarded it on to the people from the
API console team.

00:02:02.629 --> 00:02:06.880
And I will chase them down [mumbles]

00:02:06.880 --> 00:02:10.780
&gt;&gt;Sparky: Yeah, that's, it's a really interesting
concern.

00:02:10.780 --> 00:02:14.160
And it's something that we bump into from
time to time too.

00:02:14.160 --> 00:02:17.780
But it's not really in our core competency
either.

00:02:17.780 --> 00:02:19.100
&gt;&gt;Yossi: Yeah, OK.

00:02:19.100 --> 00:02:28.640
So, if you know, how can I check when this
issue will be resolved or something like,

00:02:28.640 --> 00:02:29.640
restored?

00:02:29.640 --> 00:02:36.950
Or maybe you can guide me through a, I don't
know, a breakthrough,over through, I don't

00:02:36.950 --> 00:02:39.420
know where to through myself.

00:02:39.420 --> 00:02:46.900
[laughs] Whatever you wanna, to call it but
I need to resolve this issue quite urgently.

00:02:46.900 --> 00:02:48.050
&gt;&gt;Sparky: Yeah.

00:02:48.050 --> 00:02:52.290
&gt;&gt;Yossi: It will affect not only us, it will
affect everyone.

00:02:52.290 --> 00:02:56.320
Cause we can't use our key store.

00:02:56.320 --> 00:02:57.320
On the console.

00:02:57.320 --> 00:03:02.300
And that's a big issue for us to list.

00:03:02.300 --> 00:03:10.720
&gt;&gt;Sparky: Yeah, the, if I understand correctly,
the story for OAuth on the device is a little

00:03:10.720 --> 00:03:14.880
bit different than it is for example on a
web app.

00:03:14.880 --> 00:03:19.590
My only direct exposure to OAuth 2 is actually
doing it on the server side.

00:03:19.590 --> 00:03:21.700
Like, if, in an app engine app.

00:03:21.700 --> 00:03:24.860
And there it more or less works as described.

00:03:24.860 --> 00:03:28.830
But even then, even then, following all the
tutorials and everything, it's completely

00:03:28.830 --> 00:03:29.830
mind bending.

00:03:29.830 --> 00:03:32.470
I get a headache every time I think about
it.

00:03:32.470 --> 00:03:33.470
[laughter]

00:03:33.470 --> 00:03:34.470
&gt;&gt;Yossi: Me too.

00:03:34.470 --> 00:03:35.470
Me too.

00:03:35.470 --> 00:03:41.319
I'm working on it like a week and trying to
see if we can get an override or some sort.

00:03:41.319 --> 00:03:50.070
And be able to deliver, a feature that works
even though we don't have the console ready

00:03:50.070 --> 00:03:52.030
for us.

00:03:52.030 --> 00:04:01.240
My main concern is currently I'm using an
anonymous access to the API so, Google, I'm

00:04:01.240 --> 00:04:04.540
showing a webview to the user.

00:04:04.540 --> 00:04:12.450
While showing to the user the webview, I'm
getting a simple, you know, a big screen with

00:04:12.450 --> 00:04:17.000
all the details about login and everything.

00:04:17.000 --> 00:04:25.130
It's a simple webpage but the main concern
it says "Third party access and application

00:04:25.130 --> 00:04:31.290
running on your computer is trying to access
your contact data."

00:04:31.290 --> 00:04:32.760
And so on and so on.

00:04:32.760 --> 00:04:39.970
Is there any possibilities to show a different
webview to the user, at least for the, until

00:04:39.970 --> 00:04:44.940
the problem is resolved?

00:04:44.940 --> 00:04:45.940
That's the main concern.

00:04:45.940 --> 00:04:53.590
If not then we'll hold them and wait until
we can deal with that issue.

00:04:53.590 --> 00:04:55.850
&gt;&gt;Sparky: That's a good question.

00:04:55.850 --> 00:04:57.070
I just don't know.

00:04:57.070 --> 00:04:59.250
Have you, now, you said you're doing anonymous
access.

00:04:59.250 --> 00:05:05.250
Have you tried using, rather than doing the
full OAuth 2 have you tried just simple API

00:05:05.250 --> 00:05:06.250
key?

00:05:06.250 --> 00:05:08.000
Is that a possibility for you?

00:05:08.000 --> 00:05:14.610
&gt;&gt;Yossi: No, Cause we can't use our key store
in the API console so we can't issue an API

00:05:14.610 --> 00:05:15.610
key.

00:05:15.610 --> 00:05:16.610
That's a problem.

00:05:16.610 --> 00:05:24.370
If we were able to issue an API key, then
I wouldn't show the webview.

00:05:24.370 --> 00:05:31.669
I would use the account manager on ICS devices
and forward, cause they issued the, the account

00:05:31.669 --> 00:05:37.490
manager issues the OAuth token and then we
show the allow screen.

00:05:37.490 --> 00:05:38.900
Default to the allow screen.

00:05:38.900 --> 00:05:48.120
And if now, before ICS we just allow and we
show a dialog requesting their permission.

00:05:48.120 --> 00:05:49.120
And using the—

00:05:49.120 --> 00:05:55.210
&gt;&gt;Sparky: couldn’t you take an API key that's
issued to your application and just put it

00:05:55.210 --> 00:05:57.270
statically in the app?

00:05:57.270 --> 00:05:59.300
&gt;&gt;Yossi: Uh.

00:05:59.300 --> 00:06:01.430
&gt;&gt;Sparky: I don't know.

00:06:01.430 --> 00:06:04.770
I'm asking cause I haven't tried this.

00:06:04.770 --> 00:06:09.420
&gt;&gt;Yossi: [laughs] No, the problem is that
I can't issue an API key.

00:06:09.420 --> 00:06:10.560
That's the main issue.

00:06:10.560 --> 00:06:12.800
From the point store.

00:06:12.800 --> 00:06:23.240
And also I'm about using the, maybe I can
use the credentials from the webservice we're

00:06:23.240 --> 00:06:24.699
using?

00:06:24.699 --> 00:06:32.940
And try to manipulate that to be our also
as an authenticator or?

00:06:32.940 --> 00:06:40.260
If it's, the main concern here is not to break
all the guidelines and conventions while using

00:06:40.260 --> 00:06:41.680
the OAuth.

00:06:41.680 --> 00:06:44.230
And we don't want to manipulate the user.

00:06:44.230 --> 00:06:45.230
Or fake—

00:06:45.230 --> 00:06:50.040
&gt;&gt;Rich: So you've just encountered a bug with
something that's affecting your account.

00:06:50.040 --> 00:06:53.090
I wouldn't say it's worth investing time to
invent a workaround.

00:06:53.090 --> 00:06:54.090
&gt;&gt;Yossi: OK.

00:06:54.090 --> 00:06:56.699
&gt;&gt;Rich: That should be resolved soon.

00:06:56.699 --> 00:07:03.150
I've just seen, just right now a thing that
[unintelligible] an update of the issues.

00:07:03.150 --> 00:07:05.850
So we'll get back to you real soon.

00:07:05.850 --> 00:07:06.850
&gt;&gt;Yossi: OK.

00:07:06.850 --> 00:07:07.850
I see.

00:07:07.850 --> 00:07:10.430
OK, so I had another question.

00:07:10.430 --> 00:07:12.650
Regarding something else.

00:07:12.650 --> 00:07:18.750
We have a response from the Google server.

00:07:18.750 --> 00:07:22.590
Maybe not from Google serve, from any server.

00:07:22.590 --> 00:07:30.940
We're having an XML file sent to me, and I'm
trying to do a stream reader input stream.

00:07:30.940 --> 00:07:31.979
And a buffered reader.

00:07:31.979 --> 00:07:39.830
And for some reason I always get the 24 last
bytes not readed from the stream.

00:07:39.830 --> 00:07:44.270
I know the, it's something very very weird.

00:07:44.270 --> 00:07:46.180
And I'm trying to figure out why.

00:07:46.180 --> 00:07:57.729
And is there a specific API or a good example
for a buffered reader to see where we're doing

00:07:57.729 --> 00:07:59.080
it wrong or something?

00:07:59.080 --> 00:08:03.810
Cause I'm quite sure we have an issue on our
reader.

00:08:03.810 --> 00:08:06.430
Cause other platforms read it OK.

00:08:06.430 --> 00:08:09.680
And just wanted to make sure.

00:08:09.680 --> 00:08:12.450
Something very very weird.

00:08:12.450 --> 00:08:17.639
&gt;&gt;Al: Is that on a specific device or have
you seen it on multiple devices?

00:08:17.639 --> 00:08:19.990
&gt;&gt;Yossi: I've checked on only two devices.

00:08:19.990 --> 00:08:23.150
On the Nexus 7 and the Galaxy Nexus.

00:08:23.150 --> 00:08:28.449
And on other devices, we, I think we all encountered
the same issue.

00:08:28.449 --> 00:08:41.399
Cause the XML file, I'm reading in the stream
into chunks of eight K's and going with the

00:08:41.399 --> 00:08:42.939
wild look on it.

00:08:42.939 --> 00:08:47.689
But something is wrong and I'm not able to
read the last 24 bytes.

00:08:47.689 --> 00:08:50.500
&gt;&gt;Al: And it's coming from a server via HTTP?

00:08:50.500 --> 00:08:52.269
&gt;&gt;Yossi: Yeah, yeah.

00:08:52.269 --> 00:08:54.630
Iris can read it.

00:08:54.630 --> 00:08:56.179
Windows can read it.

00:08:56.179 --> 00:09:00.170
And it's something very very weird.

00:09:00.170 --> 00:09:02.410
Maybe you've encountered something like that.

00:09:02.410 --> 00:09:03.410
&gt;&gt;Nick: Nope.

00:09:03.410 --> 00:09:04.839
It sounds like a bug.

00:09:04.839 --> 00:09:09.130
Can you post the, post that up on StackOverflow?

00:09:09.130 --> 00:09:10.730
&gt;&gt;Yossi: Yeah, just thinking—

00:09:10.730 --> 00:09:17.990
&gt;&gt;Al: Uh, the other thing I was wondering
is, whether it's worth trying to use the XML

00:09:17.990 --> 00:09:22.290
pull paths to see if you're getting all of
the XML that way.

00:09:22.290 --> 00:09:24.769
&gt;&gt;Yossi: OK.

00:09:24.769 --> 00:09:26.829
That's the code I'm using.

00:09:26.829 --> 00:09:31.730
Just to verify a few contacts.

00:09:31.730 --> 00:09:42.850
It's just a char buffer and B reader is the
buffered reader from the input stream.

00:09:42.850 --> 00:09:51.939
And append result is doing just the string
builder and doing append to the string builder.

00:09:51.939 --> 00:09:57.730
And, trying to figure out why it's not working.

00:09:57.730 --> 00:10:02.559
&gt;&gt;Al: And you've checked the contact length
is actually the right value for the data that's

00:10:02.559 --> 00:10:03.559
being returned.

00:10:03.559 --> 00:10:04.559
You're not being returned a "short contact"
link?

00:10:04.559 --> 00:10:05.559
&gt;&gt;Yossi: Yes, yes, yes.

00:10:05.559 --> 00:10:06.559
No, no.

00:10:06.559 --> 00:10:13.550
I've checked it and the same request from
the server on IOS and Windows is working .and

00:10:13.550 --> 00:10:18.149
only on our android devices it's not working.

00:10:18.149 --> 00:10:22.639
And this code works on all requests but this
one.

00:10:22.639 --> 00:10:33.050
And it's driving me crazy.

00:10:33.050 --> 00:10:44.439
&gt;&gt;Sparky: Yeah, I could probably, let me see.

00:10:44.439 --> 00:10:48.069
We could try to find the bug in the code but
I don't know if we wanna do that right now.

00:10:48.069 --> 00:10:49.069
&gt;&gt;Yossi: Yeah, yeah.

00:10:49.069 --> 00:10:57.029
Just asking if you have any examples for a
good example or guideline to follow to see

00:10:57.029 --> 00:10:59.779
where this is going wrong?

00:10:59.779 --> 00:11:01.489
Cause I want to change this code.

00:11:01.489 --> 00:11:05.410
Cause if it's not working I want to rebuild
it or something.

00:11:05.410 --> 00:11:12.829
I don't want to use it and make a faulty response
or something like that.

00:11:12.829 --> 00:11:16.279
&gt;&gt;Al: Just off the top of my head, looking
at it.

00:11:16.279 --> 00:11:17.279
&gt;&gt;Yossi: Yeah.

00:11:17.279 --> 00:11:21.329
&gt;&gt;Al: You're using Ready from Buffered Reader?

00:11:21.329 --> 00:11:26.170
That basically indicates whether the reader
is ready to be read from without blocking.

00:11:26.170 --> 00:11:32.220
So it's potentially possible that you haven't
got enough data left to fill a block in the

00:11:32.220 --> 00:11:35.610
buffer, and therefore the buffer is not ready
to read without blocking.

00:11:35.610 --> 00:11:41.790
&gt;&gt;Yossi: Yeah, but if I, you see, I'm using
also Readit Total.

00:11:41.790 --> 00:11:48.709
To count the bytes I've read to see if I need
to read more.

00:11:48.709 --> 00:11:52.360
And while comparing it I see I have 24 bytes
left.

00:11:52.360 --> 00:11:58.379
&gt;&gt;Al: But if the buffer in the buffered reader
is larger than 24 bytes, you may get false

00:11:58.379 --> 00:12:01.259
return from Breader.ready.

00:12:01.259 --> 00:12:06.309
because its' not ready to return a whole chunk
of data for you.

00:12:06.309 --> 00:12:17.350
&gt;&gt;Yossi: But, BReader is supposed to return
"ready" if it has more bytes to read.

00:12:17.350 --> 00:12:18.350
&gt;&gt;Al: No, no.

00:12:18.350 --> 00:12:23.670
It's only supposed to return "ready" true
if it has more bytes that can be read without

00:12:23.670 --> 00:12:24.670
blocking.

00:12:24.670 --> 00:12:29.510
So if there's an implementation that requires
the buffer to be filled before it will return

00:12:29.510 --> 00:12:35.670
the data to you, it can return false, even
though there's data semi filling the buffer.

00:12:35.670 --> 00:12:39.089
Let me just post up the link to the java doc.

00:12:39.089 --> 00:12:40.649
&gt;&gt;Yossi: Yeah, OK.

00:12:40.649 --> 00:12:46.579
&gt;&gt;Al: There's a, it's down in the under the
hood implementation.

00:12:46.579 --> 00:12:49.129
I think what you're confusing it with is "available.

00:12:49.129 --> 00:12:53.579
Let me just have a—

00:12:53.579 --> 00:13:01.360
&gt;&gt;Yossi: "Available" is not on the methods
for buffer gridder.

00:13:01.360 --> 00:13:08.559
&gt;&gt;Al: What you might wanna do is, in your
"else" section of your ref, put it in something

00:13:08.559 --> 00:13:11.410
to see if you can read an individual byte
from it.

00:13:11.410 --> 00:13:13.360
Without getting an exception back.

00:13:13.360 --> 00:13:14.360
&gt;&gt;Yossi: Oh.

00:13:14.360 --> 00:13:15.360
OK.

00:13:15.360 --> 00:13:16.360
I'll try that one.

00:13:16.360 --> 00:13:17.360
&gt;&gt;Al: Yeah.

00:13:17.360 --> 00:13:18.360
&gt;&gt;Yossi: OK.

00:13:18.360 --> 00:13:20.110
I'll try it now and let you know if it works
or something.

00:13:20.110 --> 00:13:21.110
&gt;&gt;Al: Cool.

00:13:21.110 --> 00:13:26.860
&gt;&gt;Nick: I had an example of [unintelligible]
which is using while read returning [inaudible]

00:13:26.860 --> 00:13:28.499
and zeros.

00:13:28.499 --> 00:13:30.149
&gt;&gt;Yossi: OK.

00:13:30.149 --> 00:13:33.440
Here is a snippet.

00:13:33.440 --> 00:13:34.440
OK.

00:13:34.440 --> 00:13:35.899
It's reading.

00:13:35.899 --> 00:13:36.899
OK.

00:13:36.899 --> 00:13:39.489
Also, see if it's now minus one.

00:13:39.489 --> 00:13:40.489
&gt;&gt;Matt: Yeah.

00:13:40.489 --> 00:13:41.489
&gt;&gt;Nick: Yeah.

00:13:41.489 --> 00:13:42.589
That's the kind of thing I meant.

00:13:42.589 --> 00:13:43.589
&gt;&gt;Yossi: OK.

00:13:43.589 --> 00:13:48.720
I'll try both methods and see, and let you
know.

00:13:48.720 --> 00:13:51.679
And also you had a question for me?

00:13:51.679 --> 00:14:02.970
&gt;&gt;Rich: Sparky, you said something about having
a question.

00:14:02.970 --> 00:14:03.970
&gt;&gt;Yossi: Sparky?

00:14:03.970 --> 00:14:04.970
&gt;&gt;Rich: [unintelligible]

00:14:04.970 --> 00:14:05.970
&gt;&gt;Sparky: You work on Oovoo, is that right?

00:14:05.970 --> 00:14:06.970
&gt;&gt;Yossi: Sorry?

00:14:06.970 --> 00:14:08.029
&gt;&gt;Sparky: You work on Oovoo?

00:14:08.029 --> 00:14:09.629
&gt;&gt;Yossi: Yeah.

00:14:09.629 --> 00:14:14.510
&gt;&gt;Sparky: Someone posted a question in the
Moderator saying "Why doesn't Oovoo work?"

00:14:14.510 --> 00:14:17.470
&gt;&gt;Yossi: [laughs] I didn't see it.

00:14:17.470 --> 00:14:20.749
I'll look into it.

00:14:20.749 --> 00:14:21.809
But.

00:14:21.809 --> 00:14:25.429
I know it's working 'cause I’m working at
Oovoo.

00:14:25.429 --> 00:14:28.959
[laughs] No, I'll take a look at that.

00:14:28.959 --> 00:14:30.859
&gt;&gt;Nick: Works in lab [inaudible]

00:14:30.859 --> 00:14:31.859
[laughter]

00:14:31.859 --> 00:14:34.249
&gt;&gt;Sparky: Yeah, works in the lab.

00:14:34.249 --> 00:14:36.249
&gt;&gt;Yossi: Yeah, it also works outside.

00:14:36.249 --> 00:14:37.249
So.

00:14:37.249 --> 00:14:38.779
&gt;&gt;Sparky: Oh, here we go.

00:14:38.779 --> 00:14:41.269
"How come Oovoo doesn't work on HTC1X?"

00:14:41.269 --> 00:14:44.149
&gt;&gt;Yossi: Oh, OK.

00:14:44.149 --> 00:14:53.819
So that's the main issue we also have and
I think a lot of VOIP services has.

00:14:53.819 --> 00:15:00.680
Because each device, each manufacturer has
their own implementation to the camera API.

00:15:00.680 --> 00:15:04.880
Some of them don't use the exact API.

00:15:04.880 --> 00:15:11.470
Cause we're basically assuming the camera
API from the stock android is working.

00:15:11.470 --> 00:15:17.430
But sometimes on different devices when we
try to initialize the camera or try to work

00:15:17.430 --> 00:15:26.920
with the camera, the device is not implementing
the correct API as we want it to be.

00:15:26.920 --> 00:15:29.179
Or as we assume it to be.

00:15:29.179 --> 00:15:32.290
So we just block the devices for now.

00:15:32.290 --> 00:15:41.239
And that's a main issue we want, I wanted
to ask on further sessions.

00:15:41.239 --> 00:15:49.370
How can we use our check or maybe get involved
with more cameras on devices?

00:15:49.370 --> 00:15:52.889
Even though they don't have the full API implementation.

00:15:52.889 --> 00:15:59.499
Cause we want to support more devices than
every, we want to support every device there

00:15:59.499 --> 00:16:07.009
is out there but sometimes when we do our
testing, we see that the device doesn't support

00:16:07.009 --> 00:16:10.970
flipping the camera or rotation.

00:16:10.970 --> 00:16:19.009
Or maybe it's supporting lower resolution
than we want to allow our users to see.

00:16:19.009 --> 00:16:27.350
Or maybe the basic API doesn't allow us to
get a hook on the camera and show it on surface—

00:16:27.350 --> 00:16:32.160
[video cuts out]

00:16:32.160 --> 00:16:43.749
&gt;&gt;Yossi: --appreciate it if all device manufacturers
will follow the API guidelines for the camera

00:16:43.749 --> 00:16:52.779
and allow us to interact with the camera without
using different hooks and different pieces

00:16:52.779 --> 00:16:56.689
of code to just support more and more devices.

00:16:56.689 --> 00:17:00.230
&gt;&gt;Sparky: Yeah, that would be great.

00:17:00.230 --> 00:17:01.230
Maybe—

00:17:01.230 --> 00:17:02.609
&gt;&gt;Nick: You could also contribute CTS tests.

00:17:02.609 --> 00:17:03.609
&gt;&gt;Yossi: Sorry, what?

00:17:03.609 --> 00:17:09.530
&gt;&gt;Nick: I think the most pragmatic way to
approach that would suggest writing a pass

00:17:09.530 --> 00:17:10.730
compatibility test.

00:17:10.730 --> 00:17:12.530
&gt;&gt;Yossi: Yeah, yeah.

00:17:12.530 --> 00:17:27.880
We looked into it but I think if we'll, propose
a test for the CTS suite, it will be a problem

00:17:27.880 --> 00:17:29.630
for all devices out there.

00:17:29.630 --> 00:17:37.150
Cause we have a very and vast list of devices
not implementing the whole API.

00:17:37.150 --> 00:17:42.330
Or implementing the API not in a way we can
use that.

00:17:42.330 --> 00:17:44.210
So what we'll do—

00:17:44.210 --> 00:17:46.560
&gt;&gt;Sparky: That's exactly why we need to make
the CTS better.

00:17:46.560 --> 00:17:52.550
&gt;&gt;Yossi: Yeah, but what will, do you, what
will you suggest to do with devices out there?

00:17:52.550 --> 00:17:57.900
Just block them and say to users "OK, devices
are not ready to work and they will not work

00:17:57.900 --> 00:18:01.240
until the end of dawn," I don't know.

00:18:01.240 --> 00:18:05.250
&gt;&gt;Al: One of the things you can do, within
the android Open Source project, which is

00:18:05.250 --> 00:18:10.550
where the compatibility test suite lives,
there's the Master Branch, which is the development

00:18:10.550 --> 00:18:12.270
branch for future versions.

00:18:12.270 --> 00:18:16.020
So you can handle all the current devices
as you're currently handling them.

00:18:16.020 --> 00:18:21.340
And put your CTS test into the master branch
so future versions can benefit from it.

00:18:21.340 --> 00:18:30.160
&gt;&gt;Yossi: OK, but mainly the main issue is
here that people like, I don't know HTC, Samsung,

00:18:30.160 --> 00:18:33.860
they take the main branch and then they work
on their own branch.

00:18:33.860 --> 00:18:37.850
&gt;&gt;Al: Well, the CTS is held by Google.

00:18:37.850 --> 00:18:39.710
They can work on their own customizations.

00:18:39.710 --> 00:18:41.350
But the CTS is the standard.

00:18:41.350 --> 00:18:45.231
I mean, the guys in London and Sparky will
tell you, they're battering up on this.

00:18:45.231 --> 00:18:50.100
The CTS is the standard which Google set in
order to get approval to get the Google app

00:18:50.100 --> 00:18:51.100
suite.

00:18:51.100 --> 00:18:52.100
&gt;&gt;Yossi: OK.

00:18:52.100 --> 00:18:54.430
&gt;&gt;Al: So they can take the core of android,
mess around with it.

00:18:54.430 --> 00:18:56.400
But they still have to pass the CTS.

00:18:56.400 --> 00:19:01.120
&gt;&gt;Yossi: So if they don't pass our tests in
it for the camera, they won't be certified

00:19:01.120 --> 00:19:02.120
to the—

00:19:02.120 --> 00:19:06.010
&gt;&gt;Nick: They won't get PlayStore or GoogleMaps,
or Gmail or anything like that.

00:19:06.010 --> 00:19:08.060
&gt;&gt;Yossi: That's better, that's better.

00:19:08.060 --> 00:19:09.060
That's a good one.

00:19:09.060 --> 00:19:10.060
&gt;&gt;Al: Yeah.

00:19:10.060 --> 00:19:13.600
&gt;&gt;Sparky: Basically, the strength of a platform
is as good as the CTS makes it.

00:19:13.600 --> 00:19:17.860
&gt;&gt;Nick: Yeah, so it's going to help you get
the current crop of devices out there.

00:19:17.860 --> 00:19:22.620
And you may have to do some device specific
stuff for when manufacturers have done strange

00:19:22.620 --> 00:19:23.620
things.

00:19:23.620 --> 00:19:24.800
But it's a pragmatic approach.

00:19:24.800 --> 00:19:29.490
The only way to improve the situation in the
future is to strengthen the tests.

00:19:29.490 --> 00:19:30.490
&gt;&gt;Yossi: OK.

00:19:30.490 --> 00:19:31.800
Thanks a lot guys.

00:19:31.800 --> 00:19:35.270
&gt;&gt;Al: And if you do that for the camera you
will be a bit of a hero.

00:19:35.270 --> 00:19:37.850
Cause I know you're not the only person facing
this kind of problem

00:19:37.850 --> 00:19:44.390
&gt;&gt;Yossi: [laughs] Yeah, we have a lot of tests
we're doing, to see if each device has all

00:19:44.390 --> 00:19:45.710
the API we require.

00:19:45.710 --> 00:19:50.750
And we do a lot of app testing to see if it
works.

00:19:50.750 --> 00:19:59.280
And it will be much more, it will be easier
to us to handle devices that fully implement

00:19:59.280 --> 00:20:01.610
the API and we can—

00:20:01.610 --> 00:20:02.610
&gt;&gt;Nick: huh.

00:20:02.610 --> 00:20:03.940
Someone muted Yossi.

00:20:03.940 --> 00:20:04.940
[Hangout dings]

00:20:04.940 --> 00:20:07.670
&gt;&gt;Rich: No one was muting him.

00:20:07.670 --> 00:20:10.000
[laughs] Why is Yossi mute?

00:20:10.000 --> 00:20:11.400
&gt;&gt;Sparky: Alright, well.

00:20:11.400 --> 00:20:12.790
[laughter and comments]

00:20:12.790 --> 00:20:17.430
&gt;&gt;Yossi: Can you hear me?

00:20:17.430 --> 00:20:19.290
&gt;&gt;Matt: Yay.

00:20:19.290 --> 00:20:24.860
&gt;&gt;Sparky: We can hear you now.

00:20:24.860 --> 00:20:26.720
&gt;&gt;Yossi: OK.

00:20:26.720 --> 00:20:27.720
Everybody's muting me.

00:20:27.720 --> 00:20:28.720
I don't know why.

00:20:28.720 --> 00:20:29.720
But.

00:20:29.720 --> 00:20:30.720
[laughter]

00:20:30.720 --> 00:20:31.720
Yeah, I know you're sick of hearing me.

00:20:31.720 --> 00:20:34.900
&gt;&gt;Nick: I think you've had us [unintelligible]
far too long.

00:20:34.900 --> 00:20:35.900
&gt;&gt;Yossi: Yeah.

00:20:35.900 --> 00:20:36.900
Yeah.

00:20:36.900 --> 00:20:39.230
I'll finish by saying thank you to all.

00:20:39.230 --> 00:20:43.510
I'll mute myself and allow other people to
ask more questions.

00:20:43.510 --> 00:20:44.510
Thank you.

00:20:44.510 --> 00:20:45.510
&gt;&gt;Sparky: Cool.

00:20:45.510 --> 00:20:46.510
Thanks a lot Yossi.

00:20:46.510 --> 00:20:49.400
It was really good of you to contribute to
the discussion.

00:20:49.400 --> 00:20:54.690
Would anyone else like to step forward with
a question or an issue they wanna talk about?

00:20:54.690 --> 00:21:00.900
&gt;&gt;Matt: I think Steven had one but it got
removed this end when we had a bit of a crash.

00:21:00.900 --> 00:21:04.640
&gt;&gt;Rich: He was asking the best recommendations
for implementing MVC in android applications.

00:21:04.640 --> 00:21:06.000
&gt;&gt;Matt: that was the one.

00:21:06.000 --> 00:21:07.000
&gt;&gt;Rich: Was that right?

00:21:07.000 --> 00:21:08.000
Stephen?

00:21:08.000 --> 00:21:09.970
Can we get a nod?

00:21:09.970 --> 00:21:11.290
&gt;&gt;Matt: Yep.

00:21:11.290 --> 00:21:12.600
&gt;&gt;Rich: Yup.

00:21:12.600 --> 00:21:17.030
If we can't get a nod, you can type.

00:21:17.030 --> 00:21:18.030
That's OK.

00:21:18.030 --> 00:21:19.030
Oh, yes.

00:21:19.030 --> 00:21:20.510
Android forces you into MVC in many ways.

00:21:20.510 --> 00:21:24.460
With having your activities as your controllers
and the views as your XML files.

00:21:24.460 --> 00:21:29.310
Having your data provided through content
providers anyway.

00:21:29.310 --> 00:21:34.590
So if you just follow kind follow kind of
standard android paradigms you fall into MVC

00:21:34.590 --> 00:21:36.990
rules pretty quickly.

00:21:36.990 --> 00:21:39.940
Was there anything specific around that, Stephen?

00:21:39.940 --> 00:21:42.900
Any specific questions around MVC and android?

00:21:42.900 --> 00:21:44.450
Or is that kind of--.

00:21:44.450 --> 00:21:47.920
Have you been doing android development for
a long time?

00:21:47.920 --> 00:21:50.160
Or are you new to--?

00:21:50.160 --> 00:21:52.400
Stephen says "Give me two."

00:21:52.400 --> 00:21:53.400
OK.

00:21:53.400 --> 00:21:54.400
We'll just—

00:21:54.400 --> 00:21:59.310
&gt;&gt;Sparky: I would say, if you really wanna
take that a step further, you do the, do your

00:21:59.310 --> 00:22:03.850
M behind a content provider so that you have
a nice clean interface to your model.

00:22:03.850 --> 00:22:05.170
&gt;&gt;Nick: Definitely.

00:22:05.170 --> 00:22:06.170
Yeah.

00:22:06.170 --> 00:22:07.170
&gt;&gt;Rich: Yeah.

00:22:07.170 --> 00:22:08.470
Alright Stephen.

00:22:08.470 --> 00:22:12.490
We'll hold for your question until you've
got a webcam and can actually ask it live.

00:22:12.490 --> 00:22:15.550
In the mean time we've got loads of questions
in the Moderator this week.

00:22:15.550 --> 00:22:16.650
So let's take a look over.

00:22:16.650 --> 00:22:18.170
&gt;&gt;Matt: This guy.

00:22:18.170 --> 00:22:19.170
[laughs]

00:22:19.170 --> 00:22:20.190
&gt;&gt;Rich: This guy.

00:22:20.190 --> 00:22:21.830
We should show you once.

00:22:21.830 --> 00:22:26.090
&gt;&gt;Sparky: You know, I'm just a little bit
amused because I just looked at a question

00:22:26.090 --> 00:22:29.990
in android developers earlier today where
I think somebody wanted, sort of wanted to

00:22:29.990 --> 00:22:30.990
go the opposite way.

00:22:30.990 --> 00:22:35.320
He wanted to have different activities be
able to read each other's data numbers.

00:22:35.320 --> 00:22:40.190
And I said "No, don't do that!"

00:22:40.190 --> 00:22:41.190
[laughter]

00:22:41.190 --> 00:22:42.270
Let's see.

00:22:42.270 --> 00:22:48.500
"There's a serious memory leak in MapView
that causes when you scroll a map in one direction

00:22:48.500 --> 00:22:50.290
for some time.

00:22:50.290 --> 00:22:53.180
It's not yet solved and the first bug submission
was three years ago.

00:22:53.180 --> 00:22:54.350
Is there any hope for this?"

00:22:54.350 --> 00:22:55.350
Yes.

00:22:55.350 --> 00:22:56.370
There is always hope.

00:22:56.370 --> 00:22:58.691
Never give up hope.

00:22:58.691 --> 00:23:00.870
Keep on reporting those bugs.

00:23:00.870 --> 00:23:04.560
Star the issues to make sure they float to
the top.

00:23:04.560 --> 00:23:05.940
Keep after us.

00:23:05.940 --> 00:23:10.580
And yeah, don't, when an issue is important,
don't let us forget it.

00:23:10.580 --> 00:23:11.580
We have other—

00:23:11.580 --> 00:23:15.550
&gt;&gt;Nick: But I guess that falls into the category
of you know, commenting on future releases.

00:23:15.550 --> 00:23:18.660
Which we're not really gonna be able to do,
unfortunately.

00:23:18.660 --> 00:23:20.990
So, yeah, keep on starring the bugs.

00:23:20.990 --> 00:23:24.507
But we're not gonna be able to say "Yes, a
fix is coming!" or anything like that.

00:23:24.507 --> 00:23:25.507
&gt;&gt;Sparky: Right.

00:23:25.507 --> 00:23:29.810
And I would just like to remind people that
the top starred issue for a long time was

00:23:29.810 --> 00:23:32.110
native support for Arabic in android.

00:23:32.110 --> 00:23:33.690
And eventually we got it.

00:23:33.690 --> 00:23:34.960
So keep at it.

00:23:34.960 --> 00:23:37.020
&gt;&gt;Matt: The system works.

00:23:37.020 --> 00:23:38.560
&gt;&gt;Nick: System works.

00:23:38.560 --> 00:23:39.590
[Hangout dings]

00:23:39.590 --> 00:23:44.920
&gt;&gt;Sparky: Let's see, what else do we have?

00:23:44.920 --> 00:23:54.210
"Is it possible to detect which audio and
video formats are returned by the default

00:23:54.210 --> 00:23:59.710
camera application when you record a video
via the intent?"

00:23:59.710 --> 00:24:00.840
That was kind of a tricky one.

00:24:00.840 --> 00:24:06.510
I imagine there might be a way, but I just
said "Most users will never change it.

00:24:06.510 --> 00:24:08.950
So just capture one once and see what you
get."

00:24:08.950 --> 00:24:14.000
&gt;&gt;Rich: Sorry, which question was he on?

00:24:14.000 --> 00:24:15.700
&gt;&gt;Matt: [inaudible]

00:24:15.700 --> 00:24:18.620
&gt;&gt;Rich: The "is it possible to [unintelligible]
format?"

00:24:18.620 --> 00:24:19.820
&gt;&gt;Matt: Yep.

00:24:19.820 --> 00:24:29.220
&gt;&gt;Rich: That would [mumbles] . So, in Jellybean
it is.

00:24:29.220 --> 00:24:30.980
I'm not sure about previous versions of android.

00:24:30.980 --> 00:24:37.060
In Jellybean you can use the MediaCodec class
to inspect the video and it will tell you

00:24:37.060 --> 00:24:39.170
the audio and video formats that have come
back.

00:24:39.170 --> 00:24:45.890
We have some sample code at the top of the
MediaCodec documentation at developer.android.com.

00:24:45.890 --> 00:24:47.720
which would tell you the format of the video.

00:24:47.720 --> 00:24:50.620
You can use it to inspect any video file on
your device.

00:24:50.620 --> 00:24:51.620
&gt;&gt;Nick: [inaudible]

00:24:51.620 --> 00:24:52.620
&gt;&gt;Rich: Or a new file.

00:24:52.620 --> 00:24:57.330
It light up and it will tell you the encoding,
the bit rates, anything about that video file.

00:24:57.330 --> 00:24:59.720
You can also transport them as well.

00:24:59.720 --> 00:25:02.850
With our file, which is good.

00:25:02.850 --> 00:25:05.710
&gt;&gt;Nick: Beyond that I'm not sure.

00:25:05.710 --> 00:25:11.490
You might have to use an external library,
some kind of mpeg or something like that might

00:25:11.490 --> 00:25:13.970
be able to, and try and load it.

00:25:13.970 --> 00:25:16.220
And, take some more metadata about it.

00:25:16.220 --> 00:25:19.440
But before Jellybean, yea, you might be able
to—

00:25:19.440 --> 00:25:25.480
&gt;&gt;Rich: Before Jellybean FF mpeg is quite
a common, libraries use.

00:25:25.480 --> 00:25:29.500
You've got video processing inside android.

00:25:29.500 --> 00:25:35.200
Everything else has gone very very quiet like
our speakers are turned off or something.

00:25:35.200 --> 00:25:37.640
Is everyone else still there?

00:25:37.640 --> 00:25:38.640
&gt;&gt;Al: Yep.

00:25:38.640 --> 00:25:39.640
[laughter]

00:25:39.640 --> 00:25:40.830
&gt;&gt;Sparky: They're on the edge of their seats.

00:25:40.830 --> 00:25:44.960
They're listening with rapt attention as we
work our way through the Moderator questions.

00:25:44.960 --> 00:25:46.060
&gt;&gt;Rich: Ah.

00:25:46.060 --> 00:25:47.060
So we've got Stephen now?

00:25:47.060 --> 00:25:48.060
Stephen is back.

00:25:48.060 --> 00:25:49.060
Has he got a view?

00:25:49.060 --> 00:25:50.060
Which one—

00:25:50.060 --> 00:25:51.060
&gt;&gt;Matt: There we go.

00:25:51.060 --> 00:25:52.460
&gt;&gt;Rich: Hey Stephen.

00:25:52.460 --> 00:25:56.320
Can you talk as well, do you have audio?

00:25:56.320 --> 00:25:59.680
&gt;&gt;Stephen: Yeah, hopefully, if this mic thing
works.

00:25:59.680 --> 00:26:01.080
&gt;&gt;Rich: It does, it's fine.

00:26:01.080 --> 00:26:02.260
&gt;&gt;Stephen: Does it?

00:26:02.260 --> 00:26:03.260
Right.

00:26:03.260 --> 00:26:05.150
So your first question was how long have I
been developing?

00:26:05.150 --> 00:26:06.150
Since G1.

00:26:06.150 --> 00:26:07.150
&gt;&gt;Rich: Nice.

00:26:07.150 --> 00:26:08.150
DO you still have your G1?

00:26:08.150 --> 00:26:09.150
&gt;&gt;Stephen: I do, yes.

00:26:09.150 --> 00:26:10.270
In a box.

00:26:10.270 --> 00:26:11.270
[laughter]

00:26:11.270 --> 00:26:12.270
So, yes.

00:26:12.270 --> 00:26:16.870
&gt;&gt;Nick: I saw someone who got Jellybean running
on the G1.

00:26:16.870 --> 00:26:18.140
And apparently it's all [unintelligible]

00:26:18.140 --> 00:26:19.140
[laughter]

00:26:19.140 --> 00:26:20.430
&gt;&gt;Stephen: So right.

00:26:20.430 --> 00:26:29.060
My real question is about whether or not you
should use MVC as a pattern for android.

00:26:29.060 --> 00:26:31.790
Whether it's applicable.

00:26:31.790 --> 00:26:35.230
So we work across a lot of platforms.

00:26:35.230 --> 00:26:41.990
Looking at trying to get some kind of platform
implementation that we could use for our products

00:26:41.990 --> 00:26:43.920
across-- Blackberry phone.

00:26:43.920 --> 00:26:45.530
Maybe iPhone.

00:26:45.530 --> 00:26:52.690
And, and, MVC doesn't really seem to fit,
to me.

00:26:52.690 --> 00:26:57.290
I'm struggling to find a way that would allow
us to do what we wanna to do.

00:26:57.290 --> 00:26:59.800
In a way that doesn't totally break android.

00:26:59.800 --> 00:27:01.760
&gt;&gt;Nick: Which place doesn't it fit?

00:27:01.760 --> 00:27:04.100
&gt;&gt;Stephen: Um, so, wow.

00:27:04.100 --> 00:27:06.850
Talk about a programmer using [unintelligible].

00:27:06.850 --> 00:27:08.790
We write payment software.

00:27:08.790 --> 00:27:11.710
Like GoogleWallet, that kind of thing.

00:27:11.710 --> 00:27:15.640
So we have sort of defined flows.

00:27:15.640 --> 00:27:17.200
Things that we have to do.

00:27:17.200 --> 00:27:22.440
So we wanna be able to provide a library and
a framework and sort of a navigation controlling

00:27:22.440 --> 00:27:26.380
stack that says, if you gotta enter your PIN
you have to follow this flow 'cause that's

00:27:26.380 --> 00:27:27.450
the specified thing.

00:27:27.450 --> 00:27:35.740
Which is fine in Blackberry and probably in
other platforms but the way we're looking

00:27:35.740 --> 00:27:41.230
at doing it now it seems like it would kind
of circumvent all the niceness of android.

00:27:41.230 --> 00:27:47.010
You know, the activities and the intent stacks
and all of that jazz.

00:27:47.010 --> 00:27:49.010
So I'm looking for a bit of advice.

00:27:49.010 --> 00:27:51.960
&gt;&gt;Rich: Is it, across, to break it out into
individual activities?

00:27:51.960 --> 00:27:53.840
Have you considered building the whole app
in one activity?

00:27:53.840 --> 00:27:54.840
Or--?

00:27:54.840 --> 00:27:57.480
&gt;&gt;Stephen: It will be across multiple activities.

00:27:57.480 --> 00:28:02.490
The way we've got many of the sort of the
current things, we have like a navigation

00:28:02.490 --> 00:28:04.380
controller.

00:28:04.380 --> 00:28:09.530
That knows where you need to go next and will
deal with say, pulling things out of the backstack.

00:28:09.530 --> 00:28:14.010
So if you have to PIN verify to get to a piece
of the application, when you go back, you

00:28:14.010 --> 00:28:16.050
don't want to go back to the PIN verification
screen.

00:28:16.050 --> 00:28:17.050
Cause that's dumb.

00:28:17.050 --> 00:28:18.960
So that needs to be sort of pulled out.

00:28:18.960 --> 00:28:21.960
So that's all that is mainly.

00:28:21.960 --> 00:28:25.830
Doesn't seem like we need to do that in android
so I can set some intent flags and that and

00:28:25.830 --> 00:28:27.710
they'll turn up on the history.

00:28:27.710 --> 00:28:32.360
So, do the developers look at this.

00:28:32.360 --> 00:28:34.280
They're not android guys.

00:28:34.280 --> 00:28:40.690
So any, I'm trying to find, I guess ammunition,
I don't know, educational material, to try

00:28:40.690 --> 00:28:43.750
and maybe steer us in a better direction than
what we're using right now.

00:28:43.750 --> 00:28:47.610
Cause it doesn't, it seems like we're going
'round a lot of what android gives us.

00:28:47.610 --> 00:28:49.090
That feels like it's gonna break things later.

00:28:49.090 --> 00:28:55.220
Like we're kind of going to end up with a
single controller per activity, breaks the

00:28:55.220 --> 00:28:57.770
use of fragments, like, how can?

00:28:57.770 --> 00:29:03.520
I don't really know how to explain that to
people who are familiar with how android's

00:29:03.520 --> 00:29:04.520
built.

00:29:04.520 --> 00:29:11.890
&gt;&gt;Rich: It's a shame that you've got android
development that aren't really with android.

00:29:11.890 --> 00:29:13.850
It seems you've got there.

00:29:13.850 --> 00:29:14.850
So.

00:29:14.850 --> 00:29:17.920
&gt;&gt;Stephen: They're not android developers,
the guys working on this.

00:29:17.920 --> 00:29:22.140
So we work from everything down from C all
the way up to android.

00:29:22.140 --> 00:29:23.140
&gt;&gt;Rich: Sure.

00:29:23.140 --> 00:29:30.120
&gt;&gt;Stephen: So, the low level stuff is C. Uh
I think we'll be doing [unintelligible] in

00:29:30.120 --> 00:29:32.020
like a base java implementation.

00:29:32.020 --> 00:29:34.809
&gt;&gt;Rich: So we have a lot of documentation
at developer.android.com.

00:29:34.809 --> 00:29:39.240
Have they all at least been through the basic
documentation on activities and activity life

00:29:39.240 --> 00:29:40.240
cycles?

00:29:40.240 --> 00:29:41.240
Things like that?

00:29:41.240 --> 00:29:46.510
And how, the five main parts of an android
app and how they're all put together?

00:29:46.510 --> 00:29:49.610
Intents, activities, broadcast receivers,
that kind of thing?

00:29:49.610 --> 00:29:50.610
Services?

00:29:50.610 --> 00:29:52.710
&gt;&gt;Stephen: Yeah, so they're aware of that.

00:29:52.710 --> 00:29:58.110
And it seems like you could, you could, feels
like shoehorn in MVC into it.

00:29:58.110 --> 00:30:02.750
So when the activity launches you know, you
could register against a custom application

00:30:02.750 --> 00:30:06.420
object to get a control [burr].

00:30:06.420 --> 00:30:09.950
That would then handle this logic.

00:30:09.950 --> 00:30:12.380
But that doesn't, that doesn't feel right
to me.

00:30:12.380 --> 00:30:17.970
&gt;&gt;Nick: Yeah, it's not going to be good trying
to shoehorn them into using something that's

00:30:17.970 --> 00:30:22.701
not android native, but I've been 'round this
as well, like, a lot of the times when you

00:30:22.701 --> 00:30:27.030
try and use any of these frameworks like dependency
injections and so on, you end up sacrificing

00:30:27.030 --> 00:30:28.930
you know, writing the application the android
way.

00:30:28.930 --> 00:30:32.850
So you take advantage of these things like
intents, and you know doing things in the

00:30:32.850 --> 00:30:33.850
most memory efficient way.

00:30:33.850 --> 00:30:39.470
You end up using a lot of reflections and
passes and so on and so forth.

00:30:39.470 --> 00:30:40.470
&gt;&gt;Stephen: Yeah.

00:30:40.470 --> 00:30:44.920
&gt;&gt;Nick: So the general best advice I guess
is to try and write native what you can, like

00:30:44.920 --> 00:30:47.650
try and adopt a native android paradigm.

00:30:47.650 --> 00:30:54.050
So you get this taking, I guess the disadvantage
then is that you have a different flow to

00:30:54.050 --> 00:30:57.270
your android app than you might have to your
other applications but that'll almost inevitably

00:30:57.270 --> 00:30:59.870
end up being a better application, I'd say.

00:30:59.870 --> 00:31:02.480
&gt;&gt;Stephen: Yes, that's my opinion as well.

00:31:02.480 --> 00:31:06.640
I was hoping that, I was hoping to [unintelligible]
maybe some more experience or some more online

00:31:06.640 --> 00:31:08.270
documentation of people trying to use MVC.

00:31:08.270 --> 00:31:11.910
And I had a bit of a Google around, and there's
a couple of StackOverflow's, things.

00:31:11.910 --> 00:31:16.679
Which are basically like, "Well, you could
probably do it like this.

00:31:16.679 --> 00:31:17.900
Sort of."

00:31:17.900 --> 00:31:20.770
Seems to become the route we're heading down.

00:31:20.770 --> 00:31:21.770
What I don't want to do is, uh—

00:31:21.770 --> 00:31:25.190
&gt;&gt;Nick: Well I think you've nailed the issue
on the head that you end up not taking advantage

00:31:25.190 --> 00:31:29.460
of all the android things like intents and
so on and so forth.

00:31:29.460 --> 00:31:31.490
You end up kind of steamrolling over those.

00:31:31.490 --> 00:31:35.470
So, yeah, you're gonna end up with a worse
app in many ways

00:31:35.470 --> 00:31:36.470
&gt;&gt;Stephen: Yeah.

00:31:36.470 --> 00:31:38.620
So here's a possible concrete question.

00:31:38.620 --> 00:31:42.080
If, so, we've got our controller, right?

00:31:42.080 --> 00:31:44.270
Which is apparently gonna have a reference
to the activity.

00:31:44.270 --> 00:31:49.559
If we move off that activity to a new one,
can we use the label "call destroy" on the

00:31:49.559 --> 00:31:52.090
one that's been paused.

00:31:52.090 --> 00:31:54.360
&gt;&gt;Nick: Can you manually call destroy?

00:31:54.360 --> 00:31:55.360
&gt;&gt;Stephen: Yeah.

00:31:55.360 --> 00:31:58.570
&gt;&gt;Rich: You call finish on it if you wanna
kill it off.

00:31:58.570 --> 00:31:59.570
It should finish itself.

00:31:59.570 --> 00:32:03.580
If you really need to it can call finish on
itself and then it'll run the destroy.

00:32:03.580 --> 00:32:08.270
&gt;&gt;Al: OK, you wanna chalk around that, a good
word thing is using a broadcast intent or

00:32:08.270 --> 00:32:09.740
a directed intent.

00:32:09.740 --> 00:32:11.000
Back to the first activity.

00:32:11.000 --> 00:32:14.390
So you register a broadcast intent listener
in your activity.

00:32:14.390 --> 00:32:19.100
That waits for a specific intent to be broadcast
and then will finish itself once it receives

00:32:19.100 --> 00:32:20.100
that broadcast.

00:32:20.100 --> 00:32:21.980
&gt;&gt;Nick: Not a bad idea.

00:32:21.980 --> 00:32:25.750
Yeah, and you can use a local broadcast for
that activity, but [unintelligible] system

00:32:25.750 --> 00:32:27.010
broadcast as well.

00:32:27.010 --> 00:32:28.010
&gt;&gt;Stephen: OK.

00:32:28.010 --> 00:32:34.690
I've got concerns about us trying to manually
manage the activity history when that’s

00:32:34.690 --> 00:32:37.040
already being controlled by the OS.

00:32:37.040 --> 00:32:40.310
&gt;&gt;Nick: Yeah, it sounds like you're duplicating
a lot of what, you know, the OS is all about.

00:32:40.310 --> 00:32:42.800
&gt;&gt;Stephen: To me, to me it sounds like a terrible
idea.

00:32:42.800 --> 00:32:43.800
But—

00:32:43.800 --> 00:32:47.240
&gt;&gt;Al: You can also get into memory problems
when you're trying to keep references to other

00:32:47.240 --> 00:32:48.240
activities.

00:32:48.240 --> 00:32:49.240
It, it's a road to hell.

00:32:49.240 --> 00:32:50.240
&gt;&gt;Matt: Yeah.

00:32:50.240 --> 00:32:51.240
&gt;&gt;Stephen: Yeah, exactly.

00:32:51.240 --> 00:32:55.380
So at the moment we've got like, an activity
with some UI and a controller, and it's like

00:32:55.380 --> 00:32:56.590
yeah, this kind of works.

00:32:56.590 --> 00:32:57.590
So.

00:32:57.590 --> 00:33:01.710
&gt;&gt;Sparky: It sounds to me, it sounds to me
like you're maybe facing a little bit of a

00:33:01.710 --> 00:33:08.150
pitfall in trying to attach your business
objects and logic to activities.

00:33:08.150 --> 00:33:13.000
I mean, it seems to me like maybe what you
want is, you want an object with some kind

00:33:13.000 --> 00:33:17.990
of a state flow diagram that controls the
different phases.

00:33:17.990 --> 00:33:22.650
The different states that your object goes
through as the different activities manipulate

00:33:22.650 --> 00:33:23.650
it.

00:33:23.650 --> 00:33:25.830
Maybe you wanna attach that to a service.

00:33:25.830 --> 00:33:29.930
And then use, you know, have your activities
present the user interface.

00:33:29.930 --> 00:33:34.040
But have them using intents to send messages
to the service.

00:33:34.040 --> 00:33:36.040
Or a published API.

00:33:36.040 --> 00:33:42.420
And then let the service control the lifecycle
of your actually sort of abstract business

00:33:42.420 --> 00:33:43.480
object.

00:33:43.480 --> 00:33:49.900
&gt;&gt;Stephen: Yeah, that's, that's more or less
what I've done.

00:33:49.900 --> 00:33:53.521
So I've, it's always what we've, you know,
we're looking to sort of unify a lot of stuff.

00:33:53.521 --> 00:33:56.470
So the android stuff I've written is basically
runs like that.

00:33:56.470 --> 00:33:58.320
So the services are the brains.

00:33:58.320 --> 00:34:02.830
And I'm basically, I'm raising like intents
to say "I wanna do a PIN, and I need to do

00:34:02.830 --> 00:34:03.830
this."

00:34:03.830 --> 00:34:04.830
And the activity is shown.

00:34:04.830 --> 00:34:09.840
And you know, so yeah it does that, but it's,
the, I think, I'm getting rolled under the

00:34:09.840 --> 00:34:10.840
wheels of cross-platforms.

00:34:10.840 --> 00:34:11.840
Yeah.

00:34:11.840 --> 00:34:12.840
I think.

00:34:12.840 --> 00:34:13.840
I might just have to lump it.

00:34:13.840 --> 00:34:14.840
&gt;&gt;Sparky: Hmm.

00:34:14.840 --> 00:34:21.929
I would think that coding up a service would
actually be like the most translation that

00:34:21.929 --> 00:34:26.899
you could get of your C based native implementations
from other platforms anyway.

00:34:26.899 --> 00:34:27.899
Wouldn't it?

00:34:27.899 --> 00:34:29.679
&gt;&gt;Stephen: Yeah, I think so.

00:34:29.679 --> 00:34:38.129
So I mean, so the stuff we're currently porting
is based on a Blackberry implementation.

00:34:38.129 --> 00:34:42.649
So that's, I mean, Blackberry you can do kind
of what you like it seems.

00:34:42.649 --> 00:34:45.190
In terms of just making objects and moving
things around.

00:34:45.190 --> 00:34:51.309
So it's, I think we're just kinda trying to
quickly port the business object from that

00:34:51.309 --> 00:34:52.929
onto the android UI stuff.

00:34:52.929 --> 00:34:54.899
And I don't think it's really gonna work.

00:34:54.899 --> 00:34:59.280
&gt;&gt;Al: "Quickly" is one of those business terms
that never ends up with a good technical solution.

00:34:59.280 --> 00:35:00.280
Unfortunately.

00:35:00.280 --> 00:35:01.470
&gt;&gt;Stephen: Yeah, exactly.

00:35:01.470 --> 00:35:06.023
I've, I've don't know what I'd call it, it's
very kind of "Proto-duction."

00:35:06.023 --> 00:35:07.023
[unintelligible]

00:35:07.023 --> 00:35:09.450
&gt;&gt;Nick: IT's always quicker to write the correct
solution in the long run.

00:35:09.450 --> 00:35:14.420
So you write the quick one and end up having
to go back and fix it, where I find it in

00:35:14.420 --> 00:35:15.420
[inaudible]

00:35:15.420 --> 00:35:16.420
&gt;&gt;Stephen: Yeah.

00:35:16.420 --> 00:35:17.420
Seriously.

00:35:17.420 --> 00:35:19.089
&gt;&gt;Nick: It's often quicker to just do it properly.

00:35:19.089 --> 00:35:20.089
&gt;&gt;Stephen: Yeah.

00:35:20.089 --> 00:35:21.569
Tell me about it.

00:35:21.569 --> 00:35:23.730
Or rather, tell the sales guys.

00:35:23.730 --> 00:35:25.450
I knew that already.

00:35:25.450 --> 00:35:29.819
&gt;&gt;Al: Point them to the Facebook app, that'll
usually wake a few people as to the dangers

00:35:29.819 --> 00:35:31.489
of trying to do something cross-platform.

00:35:31.489 --> 00:35:32.599
&gt;&gt;Stephen: Yeah, it's nasty.

00:35:32.599 --> 00:35:35.089
I'm also, I don't wanna tie up everyone's
hangout.

00:35:35.089 --> 00:35:37.579
So I can stop if people have other questions.

00:35:37.579 --> 00:35:44.069
&gt;&gt;Nick: So there was a massive question pasted
into the sidebar.

00:35:44.069 --> 00:35:45.450
Who sent it?

00:35:45.450 --> 00:35:46.839
Go back up.

00:35:46.839 --> 00:35:47.839
Raphael.

00:35:47.839 --> 00:35:48.839
&gt;&gt;Raphael: Yeah.

00:35:48.839 --> 00:35:49.839
Hi guys.

00:35:49.839 --> 00:35:50.930
That's a question from me.

00:35:50.930 --> 00:35:51.930
&gt;&gt;Sparky: Hi.

00:35:51.930 --> 00:35:52.930
&gt;&gt;Rich: Hey.

00:35:52.930 --> 00:35:56.380
&gt;&gt;Raphael: so basically, it's the simple question,
I have two questions.

00:35:56.380 --> 00:36:02.890
So the question is, I use location in my application
ad I use different providers like GPS and

00:36:02.890 --> 00:36:03.980
network provider.

00:36:03.980 --> 00:36:06.619
Depending on visibility and other stuff.

00:36:06.619 --> 00:36:12.999
But I just tested the application on different
devices and I had a problem with devices that

00:36:12.999 --> 00:36:14.920
don't have GPS built in.

00:36:14.920 --> 00:36:17.369
so basically it's a simple question.

00:36:17.369 --> 00:36:22.999
What combination of user's permission and
user's feature I should use to be available

00:36:22.999 --> 00:36:30.790
to download and visible in the GooglePlay
devices without built-in GPS?

00:36:30.790 --> 00:36:37.170
&gt;&gt;Sparky: Well there's always that "required
equals," is it "required equals false?"

00:36:37.170 --> 00:36:38.819
Is that right, on the user's feature.

00:36:38.819 --> 00:36:39.819
&gt;&gt;Nick: Yeah.

00:36:39.819 --> 00:36:46.339
It's, he's got both permissions to find location
and post location, which is correct.

00:36:46.339 --> 00:36:48.339
And then user's feature.

00:36:48.339 --> 00:36:54.359
The location of network with "required equals
true" and then put a location on GPS with

00:36:54.359 --> 00:36:55.529
"required equals false."

00:36:55.529 --> 00:36:59.599
So yeah, your tightest consideration is that
you're requiring network location.

00:36:59.599 --> 00:37:02.289
I don't know many devices which don't--.

00:37:02.289 --> 00:37:08.190
&gt;&gt;Raphael: So, there won't be problem with
find location permission on this kind of devices

00:37:08.190 --> 00:37:09.599
without GPS?

00:37:09.599 --> 00:37:13.599
&gt;&gt;Matt: So which devices are you having problems
with?

00:37:13.599 --> 00:37:20.710
&gt;&gt;Raphael: I have one tester with some strange
Chinese tablet that don't have GPS built in.

00:37:20.710 --> 00:37:25.869
and unfortunately I don't have any other devices
without GPS.

00:37:25.869 --> 00:37:29.630
But I want to be able to unload on—

00:37:29.630 --> 00:37:33.640
&gt;&gt;Matt: Does the tablet have a SIM Card slot
in it as well?

00:37:33.640 --> 00:37:34.640
&gt;&gt;Raphael: Yeah.

00:37:34.640 --> 00:37:36.680
&gt;&gt;Matt: Yeah, it definitely does?

00:37:36.680 --> 00:37:41.140
&gt;&gt;Raphael: So, you think from the screen,
like it should work?

00:37:41.140 --> 00:37:43.839
&gt;&gt;Rich: Yeah, this is what I would have recommended
that you used.

00:37:43.839 --> 00:37:45.820
You've got the right permissions and the right
access.

00:37:45.820 --> 00:37:46.820
The right features.

00:37:46.820 --> 00:37:52.450
&gt;&gt;Nick: If you upload the APK to pubsites,
[unintelligible] site.

00:37:52.450 --> 00:37:56.059
And the supported device pile should tell
you which devices you're filtering out with

00:37:56.059 --> 00:37:57.859
your requirements, right?

00:37:57.859 --> 00:38:00.450
&gt;&gt;Raphael: Yeah, so thank you guys.

00:38:00.450 --> 00:38:01.980
And I have another question.

00:38:01.980 --> 00:38:04.590
It's more strange and complicated.

00:38:04.590 --> 00:38:10.009
So I used view pager on one of my fragment
activities.

00:38:10.009 --> 00:38:15.210
And basically it have five fragments inside
it.

00:38:15.210 --> 00:38:19.329
On the portrait, on the smart phones and on
the portrait on the tablets, but when I use

00:38:19.329 --> 00:38:27.150
it on the landscape or on the tablet, I want
it to be for fragments inside, for ViewPager.

00:38:27.150 --> 00:38:34.190
So basically the problem is that I don't really
understand how the ViewPager holds the orientation

00:38:34.190 --> 00:38:36.980
change and what states is it saving by itself.

00:38:36.980 --> 00:38:47.880
So it looks like it's not deleting or detaching
fragments when I rotate on tablet.

00:38:47.880 --> 00:38:56.589
Because on create, I create new fragment adapter
and populate it with four or five fragments

00:38:56.589 --> 00:39:05.849
but it looks like it's not deleting or detaching
fragments on destroy or something like that.

00:39:05.849 --> 00:39:09.829
So, do you know what's the lifecycle of ViewPager?

00:39:09.829 --> 00:39:13.799
And how I can populate dynamically with you
know, with fragments.

00:39:13.799 --> 00:39:15.410
Adding them, maybe.

00:39:15.410 --> 00:39:19.190
Or deleting completely before rotation changes.

00:39:19.190 --> 00:39:24.930
&gt;&gt;Rich: So the thing I would do to check it
quickly is the source for the support libraries

00:39:24.930 --> 00:39:26.799
available on your computer already.

00:39:26.799 --> 00:39:29.970
And the source for the ViewPager isn't actually
that big.

00:39:29.970 --> 00:39:34.099
You can go and have a look at the lifecycle
methods inside it pretty quickly.

00:39:34.099 --> 00:39:38.349
It's just in your android SDK under "Extras",
Google Supporter something.

00:39:38.349 --> 00:39:40.510
Under that is Source and [V4].

00:39:40.510 --> 00:39:43.539
And you can just have a quick look through
there and have a look at the source and see

00:39:43.539 --> 00:39:44.680
the life cycles for it.

00:39:44.680 --> 00:39:47.180
I know that there's two different fragment
ViewPages.

00:39:47.180 --> 00:39:48.319
There's the "saving state" one.

00:39:48.319 --> 00:39:50.109
And a non-saving state one.

00:39:50.109 --> 00:39:52.380
&gt;&gt;Nick: Uh, adapters.

00:39:52.380 --> 00:39:54.690
&gt;&gt;Rich: Sorry, the fragment—

00:39:54.690 --> 00:39:56.270
&gt;&gt;Nick: Adapters

00:39:56.270 --> 00:40:00.220
&gt;&gt;Rich: Adapter for the ViewPager.

00:40:00.220 --> 00:40:05.170
So, potentially the non-saving state one is
gonna zap everything on rotation.

00:40:05.170 --> 00:40:06.170
But I would have to look.

00:40:06.170 --> 00:40:10.400
&gt;&gt;Raphael: So there is a special adapter or
ViewPager for not saving state.

00:40:10.400 --> 00:40:13.200
&gt;&gt;Nick: There's one ViewPage and there's two
different adapters, right?

00:40:13.200 --> 00:40:16.299
There's, oh, you're probably looking at docs
right now, yeah?

00:40:16.299 --> 00:40:19.450
What the two classes that extend fragment
adapter?

00:40:19.450 --> 00:40:20.890
&gt;&gt;Al: Let me have a look.

00:40:20.890 --> 00:40:24.470
One of the things I was looking at was wondering
whether you're in the fragment, you've got

00:40:24.470 --> 00:40:26.019
any reference back to the context.

00:40:26.019 --> 00:40:28.349
Are you storing the context in the object?

00:40:28.349 --> 00:40:29.369
&gt;&gt;Raphael: Yeah, maybe.

00:40:29.369 --> 00:40:33.479
&gt;&gt;Al: You should, if you're storing a reference
to the context, that'll keep it in memory,

00:40:33.479 --> 00:40:35.289
so that'll make it wanna get cleared out.

00:40:35.289 --> 00:40:36.289
&gt;&gt;Raphael: Oh.

00:40:36.289 --> 00:40:37.289
OK.

00:40:37.289 --> 00:40:38.289
Yeah.

00:40:38.289 --> 00:40:39.289
&gt;&gt;Al: Which'll probably be a problem.

00:40:39.289 --> 00:40:40.289
&gt;&gt;Raphael: I thought about it.

00:40:40.289 --> 00:40:41.289
Yeah.

00:40:41.289 --> 00:40:42.289
So that's what I used.

00:40:42.289 --> 00:40:43.289
This one.

00:40:43.289 --> 00:40:48.670
Yeah, now I understand why everything, not
anything working.

00:40:48.670 --> 00:40:49.670
Thank you.

00:40:49.670 --> 00:40:50.670
Thank you very much for this.

00:40:50.670 --> 00:40:51.670
&gt;&gt;Rich: Yeah.

00:40:51.670 --> 00:40:52.670
OK.

00:40:52.670 --> 00:40:53.670
Right.

00:40:53.670 --> 00:40:55.609
&gt;&gt;Nick: You've got the fragment pager adapter
and the fragment state pager adapter.

00:40:55.609 --> 00:40:56.609
So—

00:40:56.609 --> 00:40:59.400
&gt;&gt;Raphael: So basically what is the difference
between them.

00:40:59.400 --> 00:41:09.450
Like, I know that the state adapter won't
load the newest, next adapter as a, as I think.

00:41:09.450 --> 00:41:10.450
&gt;&gt;Nick: Yeah.

00:41:10.450 --> 00:41:11.450
So they're built for two different things.

00:41:11.450 --> 00:41:16.359
They're basically ViewPager doesn't really
do view recycling.

00:41:16.359 --> 00:41:20.720
So the non stateful one, so the stateful one.

00:41:20.720 --> 00:41:26.089
So if you're going through a very long list
of pages, you know, you're gonna end up with

00:41:26.089 --> 00:41:27.329
memory problems.

00:41:27.329 --> 00:41:29.910
Cause it's not doing any management of it.

00:41:29.910 --> 00:41:32.200
So it's' for different kind of circumstances.

00:41:32.200 --> 00:41:36.269
So if you have like say, four tabs which you're
paging between, then you use the stateful

00:41:36.269 --> 00:41:38.019
one.

00:41:38.019 --> 00:41:46.619
If you want to be able to like go through
a list of items and you don't wanna be saving

00:41:46.619 --> 00:41:47.619
states you're gonna end up racking up loads
of fragments.

00:41:47.619 --> 00:41:48.619
&gt;&gt;Raphael: OK.

00:41:48.619 --> 00:41:49.619
Thank you guys.

00:41:49.619 --> 00:41:50.619
&gt;&gt;Rich: OK.

00:41:50.619 --> 00:41:51.619
&gt;&gt;Nick: You're welcome.

00:41:51.619 --> 00:41:54.009
&gt;&gt;Rich: And if it doesn't work, check the
source.

00:41:54.009 --> 00:41:56.039
[laughter] [inaudible] android.

00:41:56.039 --> 00:41:57.039
OK.

00:41:57.039 --> 00:41:59.170
Sparky, have you been having a look at the
Moderator?

00:41:59.170 --> 00:42:02.410
&gt;&gt;Nick: Yeah, I recommend, everyone should
read the source on ViewPagers.

00:42:02.410 --> 00:42:03.410
It's really cool.

00:42:03.410 --> 00:42:04.410
[laughter]

00:42:04.410 --> 00:42:06.729
I was looking at it the other day and that's
how I learned that you could do bezel swiping

00:42:06.729 --> 00:42:07.730
built in on ViewPager [inaudible].

00:42:07.730 --> 00:42:08.730
&gt;&gt;Rich: Right.

00:42:08.730 --> 00:42:11.559
ViewPager gets updated with every version
of the support IP, pretty much.

00:42:11.559 --> 00:42:12.710
Most of the features.

00:42:12.710 --> 00:42:15.089
How you can add margins between the pages.

00:42:15.089 --> 00:42:16.700
Change the width of pages now.

00:42:16.700 --> 00:42:17.700
Bezel swiping.

00:42:17.700 --> 00:42:21.380
ViewPager got more powerful.

00:42:21.380 --> 00:42:23.259
&gt;&gt;Sparky: Alright.

00:42:23.259 --> 00:42:27.019
So should we take one from the Moderator?

00:42:27.019 --> 00:42:28.039
&gt;&gt;Rich: Yeah.

00:42:28.039 --> 00:42:29.059
&gt;&gt;Sparky: Alrighty.

00:42:29.059 --> 00:42:34.900
The next one that I have in the moderator
is, from Flowers.

00:42:34.900 --> 00:42:41.640
"With the notification, only the icons and
ticker text are public members of the object.

00:42:41.640 --> 00:42:46.490
Useful fields like content title, content
text, and the inbox text fields only exist

00:42:46.490 --> 00:42:49.230
in the remote view created and are not easily
accessible.

00:42:49.230 --> 00:42:50.280
Is this for security?"

00:42:50.280 --> 00:42:52.599
I would say probably not.

00:42:52.599 --> 00:42:54.249
It's probably more for extensibility.

00:42:54.249 --> 00:43:02.220
I'm, I'm just sort of going out on a limb
her and guessing that you know, in the first

00:43:02.220 --> 00:43:07.049
go around of an API, there's a tendency to
make a few things public and then as the API

00:43:07.049 --> 00:43:11.839
grows you realize that it's gonna be harder
and harder to give people access to these

00:43:11.839 --> 00:43:16.130
public members and then you start creating
methods to access them.

00:43:16.130 --> 00:43:17.200
That's my guess.

00:43:17.200 --> 00:43:21.410
But I don't actually know so if anybody knows
different, by all means, chime in. and let

00:43:21.410 --> 00:43:23.739
us know what you think.

00:43:23.739 --> 00:43:25.019
[hangout dings]

00:43:25.019 --> 00:43:26.019
OK.

00:43:26.019 --> 00:43:27.019
&gt;&gt;Rich: No.

00:43:27.019 --> 00:43:28.019
No.

00:43:28.019 --> 00:43:30.769
I don't know any different.

00:43:30.769 --> 00:43:32.930
&gt;&gt;Nick: So I didn't understand the question.

00:43:32.930 --> 00:43:38.609
He's trying to read other people's notifications
or when you create your own notification object.

00:43:38.609 --> 00:43:41.890
I didn't know how to [mumbles].

00:43:41.890 --> 00:43:48.170
I would say, if it is trying to read other
people's notifications then it's security.

00:43:48.170 --> 00:43:49.170
&gt;&gt;Rich: It's security.

00:43:49.170 --> 00:43:50.170
Definitely.

00:43:50.170 --> 00:43:54.720
&gt;&gt;Nick: Yeah, I know that some people try
and get around that using the assist but,

00:43:54.720 --> 00:43:55.720
so—

00:43:55.720 --> 00:43:56.720
&gt;&gt;Rich: Yeah.

00:43:56.720 --> 00:43:57.720
OK.

00:43:57.720 --> 00:43:58.720
What's the next one Sparky?

00:43:58.720 --> 00:43:59.720
&gt;&gt;Sparky: Hm.

00:43:59.720 --> 00:44:02.489
"I've been trying to code a camera related
app.

00:44:02.489 --> 00:44:08.220
However, when I try to start preview, the
emulator camera seems to always crash.

00:44:08.220 --> 00:44:12.630
Running the official camera app produces a
moving square but the buttons were unresponsive.

00:44:12.630 --> 00:44:14.249
Is this expected?"

00:44:14.249 --> 00:44:15.710
Ummm.

00:44:15.710 --> 00:44:19.799
Not really ever expected in the emulator is
it?

00:44:19.799 --> 00:44:20.799
I don't know.

00:44:20.799 --> 00:44:24.869
&gt;&gt;Al: It could be that there's not enough
memory been allocated when the virtual device

00:44:24.869 --> 00:44:25.869
was created.

00:44:25.869 --> 00:44:26.869
I've seen that happen.

00:44:26.869 --> 00:44:27.869
&gt;&gt;Sparky: Yeah.

00:44:27.869 --> 00:44:30.829
&gt;&gt;Nick: Well, I would probably say, check
LogCat as well.

00:44:30.829 --> 00:44:34.160
I mean, it's not just going to crash and not
tell you why.

00:44:34.160 --> 00:44:36.920
So we kind of, it's only half the story.

00:44:36.920 --> 00:44:38.650
We need to know what LogCat's saying.

00:44:38.650 --> 00:44:41.549
You definitely having a preview on screen?

00:44:41.549 --> 00:44:49.680
Or do you need to have surface allocated to
preview, which is on the screen?

00:44:49.680 --> 00:44:54.790
In order for the preview functions to work?

00:44:54.790 --> 00:44:55.960
&gt;&gt;Rich: So.

00:44:55.960 --> 00:45:01.220
If you're around, come in and we'll come to
the thread and we'll add you in so you can

00:45:01.220 --> 00:45:03.400
come and add more detail to the question.

00:45:03.400 --> 00:45:08.380
&gt;&gt;Sparky: One thing that I did once when I
was trying to test an app that used photo

00:45:08.380 --> 00:45:13.880
intents, was rather than using the built in
camera app, I wrote myself a teeny teeny tiny

00:45:13.880 --> 00:45:19.010
little app that actually caught that intent
and just sent back an image that I had stored

00:45:19.010 --> 00:45:20.369
on my file system.

00:45:20.369 --> 00:45:23.349
Which was kind of an interesting learning
exercise.

00:45:23.349 --> 00:45:27.749
I hope to put up that code as a sample code
sometime.

00:45:27.749 --> 00:45:33.880
I thought that was sort of an interesting
alternative to, rather than using any built

00:45:33.880 --> 00:45:35.300
in camera app, I just wrote my own.

00:45:35.300 --> 00:45:37.630
And all it does is return a file.

00:45:37.630 --> 00:45:42.180
&gt;&gt;Nick: That would be good for testing.

00:45:42.180 --> 00:45:47.839
&gt;&gt;Sparky: Yeah, it was also quite revealing
to learn just exactly how to pack that data

00:45:47.839 --> 00:45:50.250
into the intent for a return.

00:45:50.250 --> 00:45:53.950
I was, you know, I never knew before I sort
of couldn't figure out how it was down.

00:45:53.950 --> 00:45:58.839
And I, it took me a while to actually wrap
my head around exactly how that needed to

00:45:58.839 --> 00:45:59.839
be sent back.

00:45:59.839 --> 00:46:00.839
&gt;&gt;Nick: Huh.

00:46:00.839 --> 00:46:02.660
Then you should definitely open source it.

00:46:02.660 --> 00:46:03.660
&gt;&gt;Sparky: Yeah.

00:46:03.660 --> 00:46:11.880
I hope to have it in the, like the second
generation of the camera sample app that goes

00:46:11.880 --> 00:46:14.079
into android training.

00:46:14.079 --> 00:46:16.640
&gt;&gt;Matt: Cool.

00:46:16.640 --> 00:46:21.400
&gt;&gt;Sparky: Should we, does anyone have something
in the hangout or should we go on to the next

00:46:21.400 --> 00:46:23.119
Moderator question?

00:46:23.119 --> 00:46:28.050
&gt;&gt;Male #1: I have a question.

00:46:28.050 --> 00:46:29.050
&gt;&gt;Sparky: Hi, go ahead.

00:46:29.050 --> 00:46:31.009
&gt;&gt;Male #1: So I should, I added a moderator
question too, but the question has to do with

00:46:31.009 --> 00:46:32.009
the animation framework.

00:46:32.009 --> 00:46:33.450
And basically I wanna implement having a fragment
off screen.

00:46:33.450 --> 00:46:42.259
Click a button and it would slide on screen
and adjust the size of all the widgets views

00:46:42.259 --> 00:46:43.779
that are there.

00:46:43.779 --> 00:46:46.630
So I was looking at the animation shortcut
string long function.

00:46:46.630 --> 00:46:51.960
And I can definitely move things around but
the question is, how do I get the initial

00:46:51.960 --> 00:46:59.930
offset to be zero or below the actual container
view that I have?

00:46:59.930 --> 00:47:06.480
&gt;&gt;Nick: Aright, to get the offset, to make
it start offscreen?

00:47:06.480 --> 00:47:07.480
&gt;&gt;Adam: Right.

00:47:07.480 --> 00:47:10.400
Kind of like how the sliding drawer does,
like in the old app launcher.

00:47:10.400 --> 00:47:13.819
So basically, you click a button, it'd slide
in, and then click another button, it'd slide

00:47:13.819 --> 00:47:14.819
out.

00:47:14.819 --> 00:47:18.609
So kind of like a menu or something like that.

00:47:18.609 --> 00:47:25.369
&gt;&gt;Nick: So you could just set it's left property
to the negative of the width of the button.

00:47:25.369 --> 00:47:46.920
&gt;&gt;Adam: OK, and so and then I would click
the button and then I would just adjust it

00:47:46.920 --> 00:47:49.309
to the animate feature?

00:47:49.309 --> 00:47:52.369
&gt;&gt;Nick: Yeah, and animate it from that value.

00:47:52.369 --> 00:47:54.210
[loud background noise]

00:47:54.210 --> 00:47:55.440
[hissing feedback]

00:47:55.440 --> 00:47:57.130
&gt;&gt;Nick: That make sense?

00:47:57.130 --> 00:48:00.180
&gt;&gt;Rich: Oh, we've lost you Adam.

00:48:00.180 --> 00:48:01.329
You appear to have been muted as well.

00:48:01.329 --> 00:48:02.329
&gt;&gt;Adam: Oh, sorry.

00:48:02.329 --> 00:48:03.329
Sorry.

00:48:03.329 --> 00:48:04.329
Um, you know, but that makes sense.

00:48:04.329 --> 00:48:05.329
I'll give that a try.

00:48:05.329 --> 00:48:06.329
&gt;&gt;Rich: Well, cool.

00:48:06.329 --> 00:48:07.329
Huh.

00:48:07.329 --> 00:48:08.329
OK.

00:48:08.329 --> 00:48:09.329
&gt;&gt;Nick: Yeah.

00:48:09.329 --> 00:48:10.329
One of the issues at hand, if you are using
the view.animate object.

00:48:10.329 --> 00:48:11.329
Which returns your view property animator,
right?

00:48:11.329 --> 00:48:12.329
It's really really nice and leads to some
very clean code.

00:48:12.329 --> 00:48:20.239
But I think one of the drawbacks is you can
only animate one property at a time.

00:48:20.239 --> 00:48:21.239
I don't think you can do animation sets though.

00:48:21.239 --> 00:48:22.239
Is that right?

00:48:22.239 --> 00:48:23.239
&gt;&gt;Adam: Maybe with different types, I think.

00:48:23.239 --> 00:48:24.440
I don't know if you can do the same type.

00:48:24.440 --> 00:48:27.049
But you can do different, translates and outputs.

00:48:27.049 --> 00:48:30.030
&gt;&gt;Nick: That should be no problem for you.

00:48:30.030 --> 00:48:31.030
&gt;&gt;Adam: OK.

00:48:31.030 --> 00:48:32.030
Thanks.

00:48:32.030 --> 00:48:33.030
&gt;&gt;Nick: Sure.

00:48:33.030 --> 00:48:37.380
And if that's not working for you, then there's
a bunch of these fly in menu implementations

00:48:37.380 --> 00:48:38.890
on GetHelp as well.

00:48:38.890 --> 00:48:43.339
Which should hopefully, you know, you can
check one of those out, see how they do it,

00:48:43.339 --> 00:48:44.599
as well.

00:48:44.599 --> 00:48:45.599
[pause]

00:48:45.599 --> 00:48:46.599
&gt;&gt;Rich: Alright.

00:48:46.599 --> 00:48:47.999
Check the source ViewPager.

00:48:47.999 --> 00:48:48.999
[chuckles]

00:48:48.999 --> 00:48:49.999
&gt;&gt;Sparky: Alright.

00:48:49.999 --> 00:48:50.999
Well that was great.

00:48:50.999 --> 00:48:55.469
That was two birds with one stone we got a
Moderator question and a live question.

00:48:55.469 --> 00:48:56.469
&gt;&gt;Matt: Boom.

00:48:56.469 --> 00:48:57.739
How we roll.

00:48:57.739 --> 00:48:59.109
&gt;&gt;Sparky: Anybody else?

00:48:59.109 --> 00:49:01.820
Anyone else want to go two for the price of
one?

00:49:01.820 --> 00:49:02.820
No?

00:49:02.820 --> 00:49:08.569
Alright, let's see what else is on the Moderator.

00:49:08.569 --> 00:49:14.140
Oh, that was Adam's question.

00:49:14.140 --> 00:49:15.400
[pause]

00:49:15.400 --> 00:49:19.470
"You guys misunderstood my one-by-one widget
question last week."

00:49:19.470 --> 00:49:21.342
&gt;&gt;Nick: Oh, this is the configuration thing
we talked.

00:49:21.342 --> 00:49:22.342
&gt;&gt;Rich: Yeah.

00:49:22.342 --> 00:49:25.809
&gt;&gt;Sparky: "After a bit of searching, thought
of the proper name, are shortcuts.

00:49:25.809 --> 00:49:27.469
And the intent is 'create shortcut.'

00:49:27.469 --> 00:49:28.829
But can't figure out how you create one."

00:49:28.829 --> 00:49:32.150
So.

00:49:32.150 --> 00:49:36.849
Do we have samples for that?

00:49:36.849 --> 00:49:37.849
Probably?

00:49:37.849 --> 00:49:40.660
&gt;&gt;Rich: He's creating and application shortcut
on the desktop.

00:49:40.660 --> 00:49:44.660
As opposed to a more [unintelligible] app.

00:49:44.660 --> 00:49:45.660
OK?

00:49:45.660 --> 00:49:50.250
&gt;&gt;Sparky: Seems to me like every commercial
app in the world that you download from the

00:49:50.250 --> 00:49:53.719
PlayStore wants to install a desktop shortcut.

00:49:53.719 --> 00:50:02.190
So it must be pretty well, there must be a
thousand tutorials that show how it's done.

00:50:02.190 --> 00:50:04.269
I've never wanted to do it, so I don't know.

00:50:04.269 --> 00:50:07.829
&gt;&gt;Al: I've come across the StackOverflow question
on it so I'll post that up.

00:50:07.829 --> 00:50:09.450
Cause it's got a quite in depth answer to
the question.

00:50:09.450 --> 00:50:12.420
&gt;&gt;Rich: We also have a StackOverflow question
on it as well.

00:50:12.420 --> 00:50:15.240
StackOverflow is always a good resource for
these things.

00:50:15.240 --> 00:50:16.749
We're on StackOverflow.

00:50:16.749 --> 00:50:21.920
Android engineers also frequent StackOverflow
and answer questions there frequently.

00:50:21.920 --> 00:50:27.680
&gt;&gt;Matt: So is it trying to do something similar
to like People where you wanna create a home

00:50:27.680 --> 00:50:28.680
icon?

00:50:28.680 --> 00:50:32.220
&gt;&gt;Rich: That's what I thought it was last
week.

00:50:32.220 --> 00:50:34.509
&gt;&gt;Matt: Well, yeah you know with the contacts
app, you can create a one-by-one shortcut

00:50:34.509 --> 00:50:36.640
via your home dashboard.

00:50:36.640 --> 00:50:37.849
And do something like that.

00:50:37.849 --> 00:50:39.380
That's specific to your app.

00:50:39.380 --> 00:50:42.950
&gt;&gt;Rich: But he wants it to go through settings
on the way there, as well.

00:50:42.950 --> 00:50:43.960
He said he'd specifically like settings.

00:50:43.960 --> 00:50:51.420
A create law which first configures itself,
like the setting shortcut.

00:50:51.420 --> 00:50:57.359
Maybe that's what, maybe he didn't see the
live view and only saw Sparky's answer.

00:50:57.359 --> 00:50:58.529
The typed in answer.

00:50:58.529 --> 00:51:00.000
&gt;&gt;Nick: It says setting shortcut.

00:51:00.000 --> 00:51:01.470
&gt;&gt;Rich: Yeah, it was configuration.

00:51:01.470 --> 00:51:07.359
It's when you drop it and it goes into widget
configuration.

00:51:07.359 --> 00:51:10.730
&gt;&gt;Matt: We need some more input.

00:51:10.730 --> 00:51:12.450
&gt;&gt;Rich: Even more input, please.

00:51:12.450 --> 00:51:13.450
From Houdini.

00:51:13.450 --> 00:51:15.930
&gt;&gt;Matt: Maybe we answered him.

00:51:15.930 --> 00:51:17.089
&gt;&gt;Nick: Right.

00:51:17.089 --> 00:51:19.240
So maybe he can watch—

00:51:19.240 --> 00:51:20.319
&gt;&gt;Rich: [inaudible]

00:51:20.319 --> 00:51:21.940
&gt;&gt;Nick: Well, goodness.

00:51:21.940 --> 00:51:22.940
[laughter]

00:51:22.940 --> 00:51:23.940
&gt;&gt;Rich: OK.

00:51:23.940 --> 00:51:24.940
Da-da-da.

00:51:24.940 --> 00:51:26.259
Anything else coming through?

00:51:26.259 --> 00:51:27.339
If not.

00:51:27.339 --> 00:51:28.420
&gt;&gt;Matt: No.

00:51:28.420 --> 00:51:31.380
&gt;&gt;Sparky: Alright, shall we take the next
one?

00:51:31.380 --> 00:51:32.410
&gt;&gt;Rich: Yeah.

00:51:32.410 --> 00:51:38.900
&gt;&gt;Sparky: "Hello, my android app to play an
audio stream works with Wi-Fi and a 3G data

00:51:38.900 --> 00:51:39.900
card tested in US.

00:51:39.900 --> 00:51:40.900
UK. India.

00:51:40.900 --> 00:51:42.839
And on multiple devices.

00:51:42.839 --> 00:51:46.740
But in a few cases it fails with the 3G card.

00:51:46.740 --> 00:51:52.200
Should I resolve this by decreasing the quality
of the audio stream from the server."

00:51:52.200 --> 00:51:53.200
Question mark.

00:51:53.200 --> 00:51:55.079
&gt;&gt;Rich: What was the failure?

00:51:55.079 --> 00:51:56.220
&gt;&gt;Sparky: I—

00:51:56.220 --> 00:51:59.300
&gt;&gt;Rich: A failure that your bandwidth has?

00:51:59.300 --> 00:52:01.099
&gt;&gt;Sparky: Who knows?

00:52:01.099 --> 00:52:02.099
Yeah, I mean.

00:52:02.099 --> 00:52:03.099
&gt;&gt;Rich: Yeah.

00:52:03.099 --> 00:52:05.690
&gt;&gt;Sparky: I answered this one in mine, and
kind of said "Yeah, maybe."

00:52:05.690 --> 00:52:13.519
You could try reducing the amount of data
by throwing out data before you compress it

00:52:13.519 --> 00:52:16.970
or you can try a codec that compresses things
a little differently.

00:52:16.970 --> 00:52:21.609
Maybe that, filters more aggressively.

00:52:21.609 --> 00:52:25.960
Another thing I suggested is, it might not
just be a through put problem.

00:52:25.960 --> 00:52:27.359
Might be a latency problem.

00:52:27.359 --> 00:52:33.569
And that maybe you could also try changing
the size of the chunks of data that you're

00:52:33.569 --> 00:52:34.880
sending.

00:52:34.880 --> 00:52:37.969
If you're getting high pings, maybe send data
in bigger chunks at a time.

00:52:37.969 --> 00:52:42.019
And so that the client can spend longer playing
while it waits for the new data to come in.

00:52:42.019 --> 00:52:43.019
&gt;&gt;Rich: That's good advice, yeah.

00:52:43.019 --> 00:52:46.979
&gt;&gt;Nick: It sounds like you basically wanna
implement, if that's a bit rate, streaming.

00:52:46.979 --> 00:52:53.221
So you can either look at a protocol which
does that for you natively like HS, or you

00:52:53.221 --> 00:52:55.460
could try and make something similar yourself.

00:52:55.460 --> 00:52:59.890
By using the connectivity manager to check
the connection type that you have.

00:52:59.890 --> 00:53:04.259
And then use that information to perhaps stream
a different quality source.

00:53:04.259 --> 00:53:05.329
So, you're gonna need—

00:53:05.329 --> 00:53:07.470
&gt;&gt;Rich: Maybe a quick bandwidth check as well?

00:53:07.470 --> 00:53:09.609
&gt;&gt;Nick: Yeah, you wanna get that information,
really.

00:53:09.609 --> 00:53:11.380
&gt;&gt;Sparky: What a brilliant answer.

00:53:11.380 --> 00:53:15.089
I am so glad to work with people smarter than
me.

00:53:15.089 --> 00:53:16.200
This is great.

00:53:16.200 --> 00:53:17.200
[laughter]

00:53:17.200 --> 00:53:18.200
OK.

00:53:18.200 --> 00:53:19.200
Yes.

00:53:19.200 --> 00:53:21.099
Adaptive bitrate.

00:53:21.099 --> 00:53:24.079
I like it.

00:53:24.079 --> 00:53:26.339
Make it so.

00:53:26.339 --> 00:53:32.849
Let's see, the next question says "What's
the best way to implement a calendar functionality?"

00:53:32.849 --> 00:53:34.029
Don't!

00:53:34.029 --> 00:53:38.499
Use intents, or the content provider to talk
to the native calendar application and don't

00:53:38.499 --> 00:53:39.589
implement your own.

00:53:39.589 --> 00:53:40.920
That's my answer.

00:53:40.920 --> 00:53:43.880
&gt;&gt;Nick: Or take the calendar of your source
and back port it.

00:53:43.880 --> 00:53:44.880
&gt;&gt;Rich: Yeah, you can't.

00:53:44.880 --> 00:53:45.880
[inaudible]

00:53:45.880 --> 00:53:46.880
Well, you couldn't do.

00:53:46.880 --> 00:53:47.880
It's just a bunch of actions.

00:53:47.880 --> 00:53:51.619
&gt;&gt;Nick: No, no, he's trying to do calendar
view.

00:53:51.619 --> 00:53:54.839
We're not talking about the calendar—

00:53:54.839 --> 00:53:55.969
&gt;&gt;Rich: Oh, to implement that would—

00:53:55.969 --> 00:53:56.969
&gt;&gt;Nick: It'd be [unintelligible]

00:53:56.969 --> 00:53:57.969
&gt;&gt;Rich: Right.

00:53:57.969 --> 00:53:58.969
I suppose you could always put it inside the
controller.

00:53:58.969 --> 00:53:59.969
If you just want to—

00:53:59.969 --> 00:54:03.680
&gt;&gt;Al: I'm guessing it would be something like
a flight or a holiday booking app, where they're

00:54:03.680 --> 00:54:07.220
looking for something between two dates and
they wanna show a calendar as a method of

00:54:07.220 --> 00:54:10.521
allowing people to pick the start and end
date.

00:54:10.521 --> 00:54:11.521
&gt;&gt;Nick: Yeah, absolutely.

00:54:11.521 --> 00:54:14.269
Yeah, and as of Honeycomb, we introduced a
nice little picker which will show these controls

00:54:14.269 --> 00:54:16.190
and you can pick them up and down.

00:54:16.190 --> 00:54:17.390
It's very nice to use.

00:54:17.390 --> 00:54:23.299
But yeah, if you want that available pre-Honeycomb,
then you might be a bit stuck.

00:54:23.299 --> 00:54:26.069
&gt;&gt;Sparky: Surely Jake Horton must have made
something.

00:54:26.069 --> 00:54:30.549
&gt;&gt;Nick: I was gonna say, I've met 15 people
who have probably back ported it already,

00:54:30.549 --> 00:54:33.140
if you go looking.

00:54:33.140 --> 00:54:34.740
&gt;&gt;Sparky: Alright.

00:54:34.740 --> 00:54:38.819
We have a couple new people in the hangout.

00:54:38.819 --> 00:54:40.799
Dave just joined us.

00:54:40.799 --> 00:54:42.180
Did you have anything on your mind?

00:54:42.180 --> 00:54:45.219
IS there anything you wanna ask us or anything
you wanna talk about, android related?

00:54:45.219 --> 00:54:51.549
&gt;&gt;Dave: I'm looking for a good podcast for
android development.

00:54:51.549 --> 00:54:57.319
Something that will touch on all subjects
like java and, all that stuff.

00:54:57.319 --> 00:55:01.989
I'm developing an app, but I can't, and I'm
kind of new at it.

00:55:01.989 --> 00:55:06.809
I used to do some web development with PHP
and YSQL.

00:55:06.809 --> 00:55:12.039
But I can't really find a good podcast that
comes out at least once a week or once every

00:55:12.039 --> 00:55:17.089
couple of weeks and that's consistently updated
with good information.

00:55:17.089 --> 00:55:24.740
&gt;&gt;Sparky: My first suggestion is go, look
for youtube/androiddevelopers.

00:55:24.740 --> 00:55:28.440
Because that's where Android Devrol posts
all of the videos of our weekly hangouts.

00:55:28.440 --> 00:55:29.470
&gt;&gt;Dave: Oh, OK.

00:55:29.470 --> 00:55:30.470
Good.

00:55:30.470 --> 00:55:33.180
&gt;&gt;Sparky: You will also get links to the talks
from Google IO.

00:55:33.180 --> 00:55:34.510
&gt;&gt;Rich: I would do that.

00:55:34.510 --> 00:55:37.700
Start with the 25 or whatever Android talks
from Google IO.

00:55:37.700 --> 00:55:39.380
That will keep you busy until Christmas.

00:55:39.380 --> 00:55:40.380
[laughter]

00:55:40.380 --> 00:55:41.380
There's a whole bunch of information there.

00:55:41.380 --> 00:55:45.579
And if you run out of those, go to the 2011
Google IO talks.

00:55:45.579 --> 00:55:48.170
&gt;&gt;Sparky: Actually, you might even start with
the earlier ones.

00:55:48.170 --> 00:55:50.539
Like start with the 2009, 2010.

00:55:50.539 --> 00:55:52.740
Because those are the more basic android talks.

00:55:52.740 --> 00:55:58.539
And by the time you get to 2011, 2012, you
don't get too many 100 level talks anymore

00:55:58.539 --> 00:55:59.539
of the [inaudible].

00:55:59.539 --> 00:56:02.410
&gt;&gt;Nick: Yeah, you have to have watched World
of Listview at least five times before you

00:56:02.410 --> 00:56:04.289
call yourself an android developer.

00:56:04.289 --> 00:56:05.289
Right?

00:56:05.289 --> 00:56:06.289
&gt;&gt;Dave: OK, and just—

00:56:06.289 --> 00:56:13.269
&gt;&gt;Al: But also, the live section of developers.google.com.
which has weekly shows.

00:56:13.269 --> 00:56:20.029
And I believe Reto's making a Friday US, Friday
app session into a podcast that you can subscribe

00:56:20.029 --> 00:56:21.040
to the feed for?

00:56:21.040 --> 00:56:25.380
&gt;&gt;Nick: Is it just the Friday Clinic or is
it also the Office Hours as well?

00:56:25.380 --> 00:56:27.219
I know he was turning it into a podcast.

00:56:27.219 --> 00:56:28.319
&gt;&gt;Al: I'm not sure.

00:56:28.319 --> 00:56:30.249
I'll have a quick look.

00:56:30.249 --> 00:56:33.450
&gt;&gt;Nick: I think MotoDev do one as well, actually.

00:56:33.450 --> 00:56:34.450
Did that once before.

00:56:34.450 --> 00:56:39.390
I can't vouch for it, I didn't watch it for
very long.

00:56:39.390 --> 00:56:41.469
&gt;&gt;Dave: Is that Model Dev?

00:56:41.469 --> 00:56:45.920
&gt;&gt;Sparky: It's an android central, when fandroid
and android meet.

00:56:45.920 --> 00:56:46.920
[unintelligible]

00:56:46.920 --> 00:56:48.359
&gt;&gt;Nick: List developer [inaudible]

00:56:48.359 --> 00:56:52.089
&gt;&gt;Dave: Well here's a quick follow up question.

00:56:52.089 --> 00:56:58.989
So if I go back and start looking at the IO
talks from 2009, 2010, I've noticed during

00:56:58.989 --> 00:57:07.930
some of my programming looking at texts and
stuff on line that some of the stuff is deprecated.

00:57:07.930 --> 00:57:13.420
Is that gonna be true for some of those 2009,
2010 and even 2011 talks?

00:57:13.420 --> 00:57:16.559
&gt;&gt;Rich: Oh, it's good to get the fundamentals
anyway.

00:57:16.559 --> 00:57:19.579
It's certainly things like [unintelligible]
have changed a lot in that time.

00:57:19.579 --> 00:57:23.880
And there'll be things that you're learning
that will get superseded by information in

00:57:23.880 --> 00:57:24.880
the later talks.

00:57:24.880 --> 00:57:25.880
&gt;&gt;Dave: Yeah, that's true.

00:57:25.880 --> 00:57:26.880
&gt;&gt;Rich: A-lists came in.

00:57:26.880 --> 00:57:27.880
Overage gyration came in.

00:57:27.880 --> 00:57:29.309
Web views changed quite a lot.

00:57:29.309 --> 00:57:30.309
So yeah.

00:57:30.309 --> 00:57:31.309
There's gonna be things.

00:57:31.309 --> 00:57:33.789
But it's good to understand the history, if
you've got time.

00:57:33.789 --> 00:57:34.789
&gt;&gt;Dave: Yeah.

00:57:34.789 --> 00:57:37.970
&gt;&gt;Sparky: And even though we deprecate, it's
a lot of times it's pretty gentle.

00:57:37.970 --> 00:57:45.269
Like if you look in the documentation you'll
notice that settings activity is deprecated.

00:57:45.269 --> 00:57:49.559
But it's only deprecated in favor of settings
fragment which works almost exactly the same.

00:57:49.559 --> 00:57:53.400
And you can pretty much take your code from
the activity and plop it in the fragment and

00:57:53.400 --> 00:57:54.410
it just about works.

00:57:54.410 --> 00:57:56.140
&gt;&gt;Dave: Yeah, that's true.

00:57:56.140 --> 00:57:57.440
&gt;&gt;Matt: [inaudible] deprecate.

00:57:57.440 --> 00:58:07.039
And it'll probably point you in the direction
of what it's kind of been replaced with in

00:58:07.039 --> 00:58:09.839
favor, so, it's still good just to know at
least where you're going.

00:58:09.839 --> 00:58:14.559
And then documentations a pretty good point
you want to go next.

00:58:14.559 --> 00:58:19.529
&gt;&gt;Sparky: Right, and also I would say, since
you say you're pretty new.

00:58:19.529 --> 00:58:25.559
Don't be shy about asking questions in the
android developer's forum or on StackOverflow.

00:58:25.559 --> 00:58:30.680
There's, and certainly, you can get really
good answers on StackOverflow.

00:58:30.680 --> 00:58:34.559
Especially if you maybe do a quick search
and make sure that you haven't missed the

00:58:34.559 --> 00:58:35.559
low hanging fruit.

00:58:35.559 --> 00:58:36.559
&gt;&gt;Dave: Yeah.

00:58:36.559 --> 00:58:39.539
&gt;&gt;Sparky: Cause sometimes they'll answer it
before you can even ask it.

00:58:39.539 --> 00:58:41.369
&gt;&gt;Dave: Mm-hm.

00:58:41.369 --> 00:58:43.209
&gt;&gt;Nick: OK.

00:58:43.209 --> 00:58:46.950
I guess the one thing we should also mention
as well if you're trying to bootstrap your

00:58:46.950 --> 00:58:51.000
android development is the android training
section on the developer's site.

00:58:51.000 --> 00:58:52.609
So developer.android.com/training.

00:58:52.609 --> 00:58:59.079
And those are, you know, a bunch of lessons
really which pull together individual training

00:58:59.079 --> 00:59:00.079
docs.

00:59:00.079 --> 00:59:02.559
So you know, while the reference documentation
is great, when you're trying to take a class.

00:59:02.559 --> 00:59:05.499
How it works, what methods it has.

00:59:05.499 --> 00:59:09.309
And actually you know, using a bunch of these
to build something useful.

00:59:09.309 --> 00:59:10.900
That that's where training docs come in.

00:59:10.900 --> 00:59:12.150
to string them all together.

00:59:12.150 --> 00:59:15.180
So check those out as well.

00:59:15.180 --> 00:59:16.400
&gt;&gt;Dave: OK.

00:59:16.400 --> 00:59:17.400
Thanks.

00:59:17.400 --> 00:59:18.829
&gt;&gt;Nick: You're welcome.

00:59:18.829 --> 00:59:20.050
&gt;&gt;Rich: OK.

00:59:20.050 --> 00:59:23.489
And with that we've actually hit three o'clock.

00:59:23.489 --> 00:59:25.450
So that's the end of today's hangout.

00:59:25.450 --> 00:59:28.920
Thank you all for joining us and asking questions
again.

00:59:28.920 --> 00:59:30.569
And coming back.

00:59:30.569 --> 00:59:36.039
Next week's hangout may be slightly different,
don't you think?

00:59:36.039 --> 00:59:38.009
&gt;&gt;Nick: Oh yeah.

00:59:38.009 --> 00:59:39.760
We're in Israel.

00:59:39.760 --> 00:59:42.690
&gt;&gt;Yossi: Coming to us, no?

00:59:42.690 --> 00:59:43.819
We have a meeting.

00:59:43.819 --> 00:59:45.499
&gt;&gt;Rich: What's that Yossi?

00:59:45.499 --> 00:59:48.009
&gt;&gt;Yossi: You're coming to Israel, right?

00:59:48.009 --> 00:59:51.779
&gt;&gt;Rich: Yeah, we're gonna be in Israel next
week.

00:59:51.779 --> 00:59:54.329
So look out for the hangout event.

00:59:54.329 --> 00:59:56.839
As it may change time slightly.

00:59:56.839 --> 00:59:58.660
&gt;&gt;Matt: I will be back, Sparky.

00:59:58.660 --> 01:00:00.559
&gt;&gt;Rich: We'll try and get it scheduled.

01:00:00.559 --> 01:00:01.970
So look out for the event.

01:00:01.970 --> 01:00:04.410
&gt;&gt;Nick: And watch android developers for updates.

01:00:04.410 --> 01:00:05.410
[laughter]

01:00:05.410 --> 01:00:06.410
&gt;&gt;Rich: Alright.

01:00:06.410 --> 01:00:07.410
See ya.

01:00:07.410 --> 01:00:08.410
Thanks very much for coming.

01:00:08.410 --> 01:00:09.630
&gt;&gt;Nick: Thanks for coming everyone.

01:00:09.630 --> 01:00:10.670
&gt;&gt;Sparky: Bye guys.

01:00:10.670 --> 01:00:11.720
&gt;&gt;Yossi: Bye guy.

01:00:11.720 --> 01:00:12.760
See you soon.

