WEBVTT
Kind: captions
Language: en

00:00:00.220 --> 00:00:01.670
Okay, Charles.
I'm going to see if I can get you to

00:00:01.670 --> 00:00:05.310
derive a piece of the temporal
difference equation

00:00:05.310 --> 00:00:08.000
just by working through this example
again in a slightly different way.

00:00:08.000 --> 00:00:14.100
So from the last thing we talked about,
we said that the value estimate for

00:00:14.100 --> 00:00:16.920
S1 after three episodes was 5.

00:00:16.920 --> 00:00:21.620
And then we ran an episode, and
the return of that episode,

00:00:21.620 --> 00:00:25.590
sort of the total discounted reward for
that episode, episode number 4,

00:00:25.590 --> 00:00:28.624
starting from that state S1, was +2.

00:00:28.624 --> 00:00:32.610
Could we just from this information

00:00:32.610 --> 00:00:34.720
figure out what the new
estimate's going to be?

00:00:36.050 --> 00:00:37.010
&gt;&gt; Sure.

00:00:37.010 --> 00:00:38.030
&gt;&gt; So let's see if we can do that.

00:00:38.030 --> 00:00:39.530
Let's work through that, step by step.

00:00:39.530 --> 00:00:40.210
&gt;&gt; Oh, okay.

00:00:40.210 --> 00:00:43.750
Well I can cheat right, by just, I mean
you have everything indexed by time so

00:00:43.750 --> 00:00:49.310
I know that five is an estimate
of the last three, and

00:00:49.310 --> 00:00:52.160
four is an estimate of the fourth one.

00:00:52.160 --> 00:00:52.700
&gt;&gt; Right.

00:00:52.700 --> 00:00:55.010
&gt;&gt; So, I should be able to, you know,

00:00:55.010 --> 00:00:59.790
weight the first one with three,
and the other with one, or

00:00:59.790 --> 00:01:02.360
something like that, and
that'll give me the right answer.

00:01:02.360 --> 00:01:04.560
&gt;&gt; All right, so
what do you mean by weight?

00:01:04.560 --> 00:01:09.100
So what you mean is since five is
the average of the first three episodes

00:01:09.100 --> 00:01:11.830
then 15 is the total from
the first three episodes, right?

00:01:11.830 --> 00:01:13.490
&gt;&gt; That's right.
I've seen it three times.

00:01:13.490 --> 00:01:16.310
&gt;&gt; Good as if we had
seen five three times.

00:01:16.310 --> 00:01:19.180
You know the details actually
varied from that but

00:01:19.180 --> 00:01:21.220
that's okay because
averages work out nicely.

00:01:21.220 --> 00:01:22.280
&gt;&gt; That's right doesn't matter.

00:01:22.280 --> 00:01:26.420
&gt;&gt; Then we got an additional
reward of two and

00:01:26.420 --> 00:01:28.729
now we want to know the average
over four steps right.

00:01:30.210 --> 00:01:34.715
So that gives us 15 + 2 / 4 is 17/4
which is just the answer we had in

00:01:34.715 --> 00:01:35.380
the quiz.

00:01:35.380 --> 00:01:36.920
&gt;&gt; In fact that's exactly how I did it.

00:01:36.920 --> 00:01:41.060
I just took the 15 over 3
that you had written down and

00:01:41.060 --> 00:01:44.030
just said, oh so that would be 17/4.

00:01:44.030 --> 00:01:44.630
&gt;&gt; Good.
So

00:01:44.630 --> 00:01:46.270
let's generalize this a little bit and

00:01:46.270 --> 00:01:48.460
put in some letters
because you know math.

00:01:48.460 --> 00:01:53.340
So let's say instead that we're
talking about the previous estimate,

00:01:53.340 --> 00:01:55.470
which was from time T minus 1.

00:01:55.470 --> 00:01:59.250
Then we get a return on step T of T, and

00:01:59.250 --> 00:02:03.490
now we want to compute the new estimate,
VT of S1.

00:02:03.490 --> 00:02:06.260
So we should be able to do that
same kind of calculation with these

00:02:06.260 --> 00:02:08.139
quantities just symbolically.

00:02:08.139 --> 00:02:09.990
Okay so you want to try that again?

00:02:09.990 --> 00:02:10.699
&gt;&gt; Sure.

00:02:10.699 --> 00:02:16.011
So I think I know what
the VT of S1 is equal to.

00:02:16.011 --> 00:02:24.370
(T-1) times V sub T-1 of S1 +
R sub T of S1 divided by T.

00:02:25.660 --> 00:02:27.210
&gt;&gt; Good.
Which was four before, but

00:02:27.210 --> 00:02:28.880
now in general it's T.

00:02:28.880 --> 00:02:29.400
Excellent.

00:02:29.400 --> 00:02:32.160
All right, so let's now do
a little bit of algebra on this.

00:02:32.160 --> 00:02:32.970
&gt;&gt; Oh, sure.

00:02:32.970 --> 00:02:36.320
&gt;&gt; So first I'm just going to divide
through by this capital T, and

00:02:36.320 --> 00:02:38.700
split it into two pieces of the sum.

00:02:38.700 --> 00:02:40.030
&gt;&gt; Okay.
&gt;&gt; All right, so

00:02:40.030 --> 00:02:42.860
then we can regroup things as follows.

00:02:42.860 --> 00:02:47.400
Let's see, so I guess, mainly the idea
is that we split this T-1 over T

00:02:47.400 --> 00:02:50.400
into a T over T, and a -1 over T.

00:02:50.400 --> 00:02:55.205
So that gets us (VT-1(S1)) + (1 over

00:02:55.205 --> 00:03:00.014
T (RT(S1))- (VT-1(S1)).

00:03:00.014 --> 00:03:02.480
So I wrote it kind of funky.

00:03:02.480 --> 00:03:06.170
I introduced this additional learning
rate parameter, alpha sub T,

00:03:06.170 --> 00:03:10.050
the learning rate at times step T, but

00:03:10.050 --> 00:03:12.760
it's really just playing the role
of one over T here, the averaging.

00:03:12.760 --> 00:03:15.310
But there's an interesting thing that
popped out of this particular way of

00:03:15.310 --> 00:03:16.440
rewriting it.

00:03:16.440 --> 00:03:22.010
In that we are looking at kind of
a temporal difference that our update

00:03:22.010 --> 00:03:26.610
to the value is going to equal the
difference between the reward that we

00:03:26.610 --> 00:03:30.100
got at this step and the estimate
that we had at the previous step.

00:03:30.100 --> 00:03:32.420
And so this difference is actually
going to drive the learning.

00:03:32.420 --> 00:03:35.730
So if the difference is zero
then things don't change.

00:03:35.730 --> 00:03:38.740
If the difference is big positive

00:03:38.740 --> 00:03:41.910
then it goes up then if it's
big negative then it goes down.

00:03:41.910 --> 00:03:47.450
And as we get more and
more episodes this learning parameter

00:03:47.450 --> 00:03:50.840
is getting smaller and smaller so we're
making smaller and smaller changes.

00:03:50.840 --> 00:03:53.480
We're kind of honing in on
the actual true values.

00:03:53.480 --> 00:03:58.930
&gt;&gt; So this actually looks just like
the update rule for perceptrons.

00:03:58.930 --> 00:04:02.800
Yes, yes, and in fact that was I believe
that what Sutton was trying to do.

00:04:02.800 --> 00:04:05.370
He wanted to make
temporal predictions and

00:04:05.370 --> 00:04:08.950
he wanted to put it into the same kind
of algebraic framework that people were

00:04:08.950 --> 00:04:12.790
familiar with from perceptron learning
and from neural net learning.

00:04:12.790 --> 00:04:17.988
&gt;&gt; Right, so if we did it that way
then RT minus V sub T is the error.

00:04:19.110 --> 00:04:20.040
&gt;&gt; Very good.

00:04:20.040 --> 00:04:21.130
Yeah, that's a great way to look at it.

00:04:21.130 --> 00:04:23.990
That we're making our update
based on moving a little bit in

00:04:23.990 --> 00:04:25.410
the direction of there.

00:04:25.410 --> 00:04:27.320
&gt;&gt; Right, moving less and
less and less as time goes on,

00:04:27.320 --> 00:04:29.730
which is just what you're supposed
to do at the learning rate.

00:04:29.730 --> 00:04:31.220
&gt;&gt; Exactly.

00:04:31.220 --> 00:04:33.970
&gt;&gt; So, let me asks a question
along those lines then.

00:04:33.970 --> 00:04:38.450
So if alpha sub T was not 1 over T but

00:04:38.450 --> 00:04:42.140
something else, like I don't know, 1
over the square root of T or something.

00:04:42.140 --> 00:04:44.415
Some other way of doing a learning rate.

00:04:44.415 --> 00:04:46.360
&gt;&gt; Uh-huh
&gt;&gt; You would get a slightly different

00:04:46.360 --> 00:04:48.480
answer at any given time.

00:04:48.480 --> 00:04:53.020
But would you expect to kind of
converge to the same answer ultimately?

00:04:53.020 --> 00:04:54.360
&gt;&gt; That is a really good question.

00:04:54.360 --> 00:04:56.830
In fact that is the next
question I was going to ask.

00:04:56.830 --> 00:04:57.900
&gt;&gt; Oh wow.

00:04:57.900 --> 00:04:58.655
I feel better now.

00:04:58.655 --> 00:05:00.760
&gt;&gt; [LAUGH] So here it comes.

