WEBVTT
Kind: captions
Language: en

00:00:09.450 --> 00:00:10.450
[clink]

00:00:10.450 --> 00:00:11.450
&gt;&gt;Sparky: OK.

00:00:11.450 --> 00:00:16.219
I see that Nick and Rich are getting seated,
so I will start by saying good afternoon,

00:00:16.219 --> 00:00:17.219
everybody.

00:00:17.219 --> 00:00:22.750
And welcome once again to the Android Developers
Office Hours EMEA edition.

00:00:22.750 --> 00:00:28.690
We are the EMEA-based Android developer relations
team.

00:00:28.690 --> 00:00:29.690
I'm Sparky.

00:00:29.690 --> 00:00:31.270
I'm coming to you from Munich, Germany.

00:00:31.270 --> 00:00:37.520
And I'm also joined by my colleagues, Nick
and Rich, who are visiting in--where.

00:00:37.520 --> 00:00:38.950
Are you in Tel Aviv?

00:00:38.950 --> 00:00:41.170
Is that where you are?

00:00:41.170 --> 00:00:44.370
&gt;&gt;Rich: We're coming slightly blurry from
Tel Aviv.

00:00:44.370 --> 00:00:47.260
Please don't clean your webcam or screens
or anything.

00:00:47.260 --> 00:00:50.830
We just have a slightly lower quality internet
connection today.

00:00:50.830 --> 00:00:52.980
Hopefully the audio comes through OK.

00:00:52.980 --> 00:00:55.140
We're also joined by, here's Nick.

00:00:55.140 --> 00:00:57.900
This blur here is Nick's blur.

00:00:57.900 --> 00:00:59.180
And this one's mine, Rich.

00:00:59.180 --> 00:01:03.870
And we're joined by a blur on the far left,
or far right to you guys, Yossi from ooVoo,

00:01:03.870 --> 00:01:08.409
who has been joining us at the GDG meeting
in Israel here.

00:01:08.409 --> 00:01:10.119
&gt;&gt;Sparky: Hi, Yossi, wow.

00:01:10.119 --> 00:01:13.540
Imagine being in the same building with him.

00:01:13.540 --> 00:01:15.899
&gt;&gt;Rich: Yeah, this week he's live with us.

00:01:15.899 --> 00:01:17.009
He was gonna join anyway, right?

00:01:17.009 --> 00:01:20.240
Just need more bandwidth, so we might as well
do it from the same room.

00:01:20.240 --> 00:01:21.789
&gt;&gt;Sparky: That's terrific.

00:01:21.789 --> 00:01:26.710
Well, I can see you guys pretty well as long
as you hold stock still.

00:01:26.710 --> 00:01:31.369
So, lean back on those support braces that
you got yourselves built and don't move a

00:01:31.369 --> 00:01:35.490
muscle and your picture will be just fine.

00:01:35.490 --> 00:01:37.840
Oh.

00:01:37.840 --> 00:01:40.329
And Matt is asking to be invited into the
Hangout.

00:01:40.329 --> 00:01:43.340
How do I do that?

00:01:43.340 --> 00:01:44.469
You got it?

00:01:44.469 --> 00:01:46.479
&gt;&gt;Rich: I'll take care of that.

00:01:46.479 --> 00:01:47.490
&gt;&gt;Sparky: All right.

00:01:47.490 --> 00:01:51.529
So, I see that we're already joined by several
people live in the Hangout.

00:01:51.529 --> 00:01:53.219
We got Al.

00:01:53.219 --> 00:01:54.619
We got Archbrum.

00:01:54.619 --> 00:01:57.109
We got Ravi.

00:01:57.109 --> 00:02:00.549
Who else has just joined us?

00:02:00.549 --> 00:02:02.869
Ravi, Dami, and Richard.

00:02:02.869 --> 00:02:05.439
So that rounds out who's live in the Hangout
right now.

00:02:05.439 --> 00:02:09.730
Do any of have anything Android related that
you would like to talk about this week?

00:02:09.730 --> 00:02:12.350
&gt;&gt;Rich: Can I just check with you, Sparky?

00:02:12.350 --> 00:02:13.500
Where was Matt asking?

00:02:13.500 --> 00:02:17.060
Is he on the G Plus thread?

00:02:17.060 --> 00:02:19.930
&gt;&gt;Sparky: No, he just pinged me.

00:02:19.930 --> 00:02:21.780
Oh, he just joined the group chat.

00:02:21.780 --> 00:02:23.400
He must be in.

00:02:23.400 --> 00:02:25.010
&gt;&gt;Rich: He joined us.

00:02:25.010 --> 00:02:26.010
OK.

00:02:26.010 --> 00:02:27.010
&gt;&gt;Sparky: Matt, welcome.

00:02:27.010 --> 00:02:28.269
&gt;&gt;Rich: There he is.

00:02:28.269 --> 00:02:31.420
&gt;&gt;Sparky: Some pretty posh digs you got there,
Matt.

00:02:31.420 --> 00:02:32.829
&gt;&gt;Rich: [inaudible]

00:02:32.829 --> 00:02:36.370
&gt;&gt;Sparky: That, where are you--?

00:02:36.370 --> 00:02:44.150
&gt;&gt;Rich: Please feel free to go ahead and ask
your question.

00:02:44.150 --> 00:02:45.150
[pause]

00:02:45.150 --> 00:02:51.310
You gonna ask it live or ask it in the chat?

00:02:51.310 --> 00:02:53.810
&gt;&gt;Sparky: I want you people to be bold--bold
and assertive.

00:02:53.810 --> 00:02:57.110
Ask your questions because I've only got five
questions queued up in the Moderator.

00:02:57.110 --> 00:03:02.650
So, if you crawl back on the Moderator, we're
going to exhaust our prepared material quite

00:03:02.650 --> 00:03:04.180
quickly.

00:03:04.180 --> 00:03:06.420
&gt;&gt;Rich: We have a plan.

00:03:06.420 --> 00:03:08.300
If we run out of planned material, we can
go around.

00:03:08.300 --> 00:03:10.969
We've got a Hackathon running here at the
moment in Israel.

00:03:10.969 --> 00:03:16.379
We can go around with our shoddy internet
connection and see what people are up to at

00:03:16.379 --> 00:03:19.170
the Android [inaudible] Hackathon.

00:03:19.170 --> 00:03:21.959
&gt;&gt;Sparky: That's pretty cool.

00:03:21.959 --> 00:03:24.959
&gt;&gt;Rich: So, Harry has typed through the window.

00:03:24.959 --> 00:03:27.410
Maybe he has no microphone?

00:03:27.410 --> 00:03:29.490
Has Al got a lower third?

00:03:29.490 --> 00:03:30.700
What is going on?

00:03:30.700 --> 00:03:31.700
[laughter]

00:03:31.700 --> 00:03:34.680
&gt;&gt;Al: I thought I'd give it a try this week.

00:03:34.680 --> 00:03:36.120
I can turn it off if you guys want.

00:03:36.120 --> 00:03:37.120
&gt;&gt;Rich: No, no.

00:03:37.120 --> 00:03:38.200
You go for it.

00:03:38.200 --> 00:03:39.249
&gt;&gt;Sparky: I want one of those.

00:03:39.249 --> 00:03:41.890
&gt;&gt;Al: I'll tell you how to get it in chat,
Sparky.

00:03:41.890 --> 00:03:43.080
&gt;&gt;Sparky: [laughs]

00:03:43.080 --> 00:03:46.489
&gt;&gt;Rich: Are you using one of the Hangout plugins
for that?

00:03:46.489 --> 00:03:47.489
The lower third plugin?

00:03:47.489 --> 00:03:48.489
&gt;&gt;Al: Yeah, I am.

00:03:48.489 --> 00:03:50.110
I only just discovered it a couple of days
ago.

00:03:50.110 --> 00:03:51.319
&gt;&gt;Rich: Sweet.

00:03:51.319 --> 00:03:52.319
Nice.

00:03:52.319 --> 00:03:54.940
Everyone should start doing that.

00:03:54.940 --> 00:03:59.170
We'll know who you are more easily.

00:03:59.170 --> 00:04:04.739
Harry is asking "I want to play a sound when
a user clicks on a button using the sound

00:04:04.739 --> 00:04:05.739
form.

00:04:05.739 --> 00:04:07.680
It was working well except on my HTC.

00:04:07.680 --> 00:04:10.310
It works well except on your own device.

00:04:10.310 --> 00:04:13.269
It doesn't create a sound after the act.

00:04:13.269 --> 00:04:17.130
with visible for more than three seconds."

00:04:17.130 --> 00:04:22.340
&gt;&gt;Sparky: I presume that's "activity."

00:04:22.340 --> 00:04:24.430
&gt;&gt;Rich: Yeah.

00:04:24.430 --> 00:04:26.510
&gt;&gt;Sparky: Hmm.

00:04:26.510 --> 00:04:30.940
&gt;&gt;Rich: So it works unless the activity's
been visible for more than three seconds,

00:04:30.940 --> 00:04:31.950
or the other way around.

00:04:31.950 --> 00:04:33.020
It doesn't--.

00:04:33.020 --> 00:04:38.350
&gt;&gt;Nick: Sounds like some sort of race.

00:04:38.350 --> 00:04:44.430
&gt;&gt;Rich: Playback to audio hardware, log cast
audio hardware ACM.

00:04:44.430 --> 00:04:46.950
Playback is going to standby.

00:04:46.950 --> 00:04:54.200
So it works when you hit the button within
the first three seconds and after that it

00:04:54.200 --> 00:04:56.020
doesn't work anymore.

00:04:56.020 --> 00:05:00.260
Are you pretty much using the example code
for SoundPool?

00:05:00.260 --> 00:05:05.530
I've only used it a couple of times myself,
but I just used the sample code, put it in

00:05:05.530 --> 00:05:06.791
and used it.

00:05:06.791 --> 00:05:08.480
And it was fine.

00:05:08.480 --> 00:05:14.020
Have you checked StackOverflow for this particular
issue with your bit of log cat there?

00:05:14.020 --> 00:05:15.100
&gt;&gt;Sparky: Hmm.

00:05:15.100 --> 00:05:16.190
&gt;&gt;Rich: Sorry.

00:05:16.190 --> 00:05:20.180
I'm talking to a chat window live on air right
now.

00:05:20.180 --> 00:05:21.370
I'm reading the chats back.

00:05:21.370 --> 00:05:27.240
Harry says, "Yes I've checked Stack Overflow"
and yes, he's talking about activity.

00:05:27.240 --> 00:05:28.670
Which one is [inaudible]?

00:05:28.670 --> 00:05:34.690
&gt;&gt;Sparky: Yeah, I don't know anything about
it.

00:05:34.690 --> 00:05:38.730
&gt;&gt;Rich: He's got a StackOverflow issue.

00:05:38.730 --> 00:05:39.730
[pause]

00:05:39.730 --> 00:05:41.580
&gt;&gt;Sparky: Yeah.

00:05:41.580 --> 00:05:42.580
Alright.

00:05:42.580 --> 00:05:47.570
Well, it's great that we have the StackOverflow
case.

00:05:47.570 --> 00:05:53.980
I don't know if we're gonna be able to really
sort through it live.

00:05:53.980 --> 00:05:56.420
&gt;&gt;Rich: [inaudible].

00:05:56.420 --> 00:05:57.640
[pause]

00:05:57.640 --> 00:06:01.300
&gt;&gt;Sparky: Let's see.

00:06:01.300 --> 00:06:04.960
Taking a look.

00:06:04.960 --> 00:06:05.960
It doesn't--.

00:06:05.960 --> 00:06:10.480
&gt;&gt;Al: It does seem to indicate that it's device
specific and that's a StackOverflow question.

00:06:10.480 --> 00:06:16.170
So maybe it's a problem with HTC's implementation
or some of the binary packages they're using

00:06:16.170 --> 00:06:18.660
on some of their devices.

00:06:18.660 --> 00:06:22.610
&gt;&gt;Rich: The SoundPool's a pretty oft used
class.

00:06:22.610 --> 00:06:27.270
I would've thought if HTC had buggered up
the implementation SoundPool, we'd know about

00:06:27.270 --> 00:06:28.270
it.

00:06:28.270 --> 00:06:31.160
&gt;&gt;Sparky: It does say that he's using Ogg
Vorbis.

00:06:31.160 --> 00:06:32.850
So, that's Open Source.

00:06:32.850 --> 00:06:34.550
You can't trust that stuff.

00:06:34.550 --> 00:06:36.210
[Rich laughs]

00:06:36.210 --> 00:06:44.990
&gt;&gt;Yossi: Has he tried to use the media player
object and see if after [inaudible] you'll

00:06:44.990 --> 00:06:50.460
still have the object ready for you?

00:06:50.460 --> 00:06:52.220
[feedback sound]

00:06:52.220 --> 00:06:56.370
&gt;&gt;Rich: Same result with the media player,
Harry says.

00:06:56.370 --> 00:06:58.380
It looks like we have another third now.

00:06:58.380 --> 00:07:03.000
Now, we'll waste the lower thirds across the
whole of the bottom screen.

00:07:03.000 --> 00:07:12.300
I don't think I can have one being a, a live
Hangout host.

00:07:12.300 --> 00:07:19.770
&gt;&gt;Sparky: Yeah, I'm drawing a blank on this
one.

00:07:19.770 --> 00:07:21.610
I don't know.

00:07:21.610 --> 00:07:23.280
This is not exactly my forte.

00:07:23.280 --> 00:07:28.370
&gt;&gt;Rich: The notification of the sounds work.

00:07:28.370 --> 00:07:30.050
But that's clearly a hack.

00:07:30.050 --> 00:07:32.570
I'm just gonna take a look.

00:07:32.570 --> 00:07:33.830
Sorry about that.

00:07:33.830 --> 00:07:35.370
&gt;&gt;Sparky: It does sound pretty hacky.

00:07:35.370 --> 00:07:37.970
On the other hand, it sounds like a pretty
clever hack.

00:07:37.970 --> 00:07:39.490
&gt;&gt;Rich: OK.

00:07:39.490 --> 00:07:47.900
We don't have an answer for you for that right
now, Harry.

00:07:47.900 --> 00:07:48.930
Sorry.

00:07:48.930 --> 00:07:53.190
I haven't had issues like that with SoundPool
myself, but then again, I haven't tested on

00:07:53.190 --> 00:07:54.190
that device.

00:07:54.190 --> 00:07:56.230
So, I'll have a quick look around whilst we
go to our Moderator question.

00:07:56.230 --> 00:08:02.640
Go and read out the first Moderator question
with your better internet connection, Sparky.

00:08:02.640 --> 00:08:03.680
&gt;&gt;Sparky: Sure.

00:08:03.680 --> 00:08:09.750
First question on Moderator is, "Now that
Google Cloud Messaging is in place, is there

00:08:09.750 --> 00:08:13.710
any recommended way of benchmarking how an
app behaves for large numbers of receivers

00:08:13.710 --> 00:08:16.460
before going live?"

00:08:16.460 --> 00:08:21.860
That's an interesting question because it's
only peripherally Android related, right?

00:08:21.860 --> 00:08:25.620
I think what he's, if you're talking about
load testing, really what you're looking for

00:08:25.620 --> 00:08:32.279
is your testing out the web app via the server-based
application, not the Android client.

00:08:32.279 --> 00:08:36.280
And yeah.

00:08:36.280 --> 00:08:40.110
It's a web service, so I would say test it
out the way you would test out any web service.

00:08:40.110 --> 00:08:46.960
Probably abstract out the Android clients
and maybe just use some kind of a web-based

00:08:46.960 --> 00:08:51.750
load testing tool or an Expect script or a
Python script or something.

00:08:51.750 --> 00:08:56.790
And hammer at it purely with network-based
requests.

00:08:56.790 --> 00:08:59.540
That's my answer to that one.

00:08:59.540 --> 00:09:07.780
And as far as the Google Cloud Messaging part
goes, that's, the Google Cloud Messaging is

00:09:07.780 --> 00:09:13.580
a service that we are providing more or less
as is and either it can handle your load or

00:09:13.580 --> 00:09:14.580
it can't.

00:09:14.580 --> 00:09:15.710
And we think it can.

00:09:15.710 --> 00:09:23.480
So, GCM, at least as far as its load testing
part, isn't really part of your system under

00:09:23.480 --> 00:09:24.480
test.

00:09:24.480 --> 00:09:25.480
It's really our system under test.

00:09:25.480 --> 00:09:30.440
So, all that you need to worry about is your
Android client and your server app.

00:09:30.440 --> 00:09:37.770
And the server app you can basically test
using traditional network testing utilities.

00:09:37.770 --> 00:09:43.620
&gt;&gt;Al: It's also probably worth mentioning
that with GCM, it's not worth assuming that

00:09:43.620 --> 00:09:46.830
if you send a message out a user is gonna
receive it quickly because people can be out

00:09:46.830 --> 00:09:50.260
of service areas, can have their devices turned
off.

00:09:50.260 --> 00:09:53.700
So, bulk load testing like that's not really
the best way to go.

00:09:53.700 --> 00:09:59.170
It's probably better to test the logic on
the client side for discarding messages, which

00:09:59.170 --> 00:10:02.020
have either expired or out-of-date or no longer
relevant.

00:10:02.020 --> 00:10:03.860
&gt;&gt;Sparky: Right.

00:10:03.860 --> 00:10:11.950
&gt;&gt;Al: You might see, you know, a series of
messages that have been patched up waiting

00:10:11.950 --> 00:10:13.610
to be delivered to you.

00:10:13.610 --> 00:10:14.610
&gt;&gt;Sparky: Yeah.

00:10:14.610 --> 00:10:22.920
And of course, Google Cloud Messaging is designed
to not be a reliable protocol, meaning we

00:10:22.920 --> 00:10:26.920
make no guarantees at all that every message
will be delivered, or that messages will be

00:10:26.920 --> 00:10:29.880
delivered in a timely manner or in order.

00:10:29.880 --> 00:10:34.990
I like to just tell people, think of it more
like UDP rather than TCP.

00:10:34.990 --> 00:10:36.650
Packets can arrive in any order.

00:10:36.650 --> 00:10:37.910
Some of them can be lost.

00:10:37.910 --> 00:10:43.720
And you should design the information that
you're packing into the data to take into

00:10:43.720 --> 00:10:47.060
account the possibility that not everything
will get through.

00:10:47.060 --> 00:10:54.170
For instance, rather than sending a GCM message
that says, here is the content of your mail,

00:10:54.170 --> 00:10:59.300
you send a GCM message saying since the last
time you contacted the server, you have 27

00:10:59.300 --> 00:11:00.700
new messages.

00:11:00.700 --> 00:11:05.460
Here's a little URL so that you can get your
27 new messages.

00:11:05.460 --> 00:11:10.350
If that one gets lost and number 28, 29, and
30 come in, you send another one that says,

00:11:10.350 --> 00:11:13.820
since the last time you contacted the server,
you now have 30 new messages.

00:11:13.820 --> 00:11:19.160
And that way your messages can be cumulative
and you aren't reliant on every single one

00:11:19.160 --> 00:11:20.220
getting through.

00:11:20.220 --> 00:11:28.350
&gt;&gt;Nick: The other thing to think about is
if you're worried about sending a GCM [inaudible]

00:11:28.350 --> 00:11:31.730
that goes to thousands and thousands of people
and you're worried about them harrying the

00:11:31.730 --> 00:11:33.250
server, you can build in some jitter code.

00:11:33.250 --> 00:11:38.270
Like, don't let it all go at once, but time
phase it so you're calling GCM at specific

00:11:38.270 --> 00:11:39.270
times.

00:11:39.270 --> 00:11:43.500
Or, in your client code, you can put a broadcast
task over one and add some jitter in your

00:11:43.500 --> 00:11:51.050
new client code so maybe, bound to be over
a minute, you'll call and get it [inaudible].

00:11:51.050 --> 00:11:56.170
Ten thousand get requests all at once, so
that's something to consider.

00:11:56.170 --> 00:12:02.520
&gt;&gt;Rich: And also, one of the new features
of GCM over cloud to cloud device messaging

00:12:02.520 --> 00:12:07.380
is you can now specify a time to deliver the
messages, so make sure you put that, make

00:12:07.380 --> 00:12:09.050
it relevant to your application.

00:12:09.050 --> 00:12:12.850
So, messages that would've expired don't actually
end up getting delivered and you'll reduce

00:12:12.850 --> 00:12:16.420
the load that way as well.

00:12:16.420 --> 00:12:23.960
And people who turn on their handsets later
on in the morning.

00:12:23.960 --> 00:12:24.960
OK.

00:12:24.960 --> 00:12:26.730
I think that covers that one.

00:12:26.730 --> 00:12:29.350
Does anyone else have a question from inside
the Hangout?

00:12:29.350 --> 00:12:31.130
&gt;&gt;Sparky: Alright.

00:12:31.130 --> 00:12:33.800
We got Ravi.

00:12:33.800 --> 00:12:36.480
Ravi, what's up?

00:12:36.480 --> 00:12:39.150
&gt;&gt;Ravi: Hi, guys.

00:12:39.150 --> 00:12:41.260
How are you doing?

00:12:41.260 --> 00:12:42.260
&gt;&gt;Sparky: Good.

00:12:42.260 --> 00:12:43.260
Thank you very much.

00:12:43.260 --> 00:12:44.260
&gt;&gt;Ravi: Yeah.

00:12:44.260 --> 00:12:47.880
I've been part of Google Hangouts the week
before and yeah, I'm really excited to join

00:12:47.880 --> 00:12:48.980
you guys back again.

00:12:48.980 --> 00:12:55.270
Not to waste any more time, but I just had
a quick question.

00:12:55.270 --> 00:13:01.400
I don't know if this sounds really stupid,
but pardon me if it does.

00:13:01.400 --> 00:13:10.760
[laughs] I have an application which we're
extending into a tablet edition and I don't

00:13:10.760 --> 00:13:11.760
know.

00:13:11.760 --> 00:13:18.330
What's really haunting us is the screen resolutions
where as for the developer guide, given in

00:13:18.330 --> 00:13:25.070
developer.android.com, the actual screen sizes
were differentiated or general sizes were

00:13:25.070 --> 00:13:27.820
small, normal, large, and extra-large.

00:13:27.820 --> 00:13:33.920
And as for the density, there's LDPI, MDPI,
HDPI, and XHDPI.

00:13:33.920 --> 00:13:41.370
In this instance, I see some of the seven-inch
tablet devices, or some of the devices which

00:13:41.370 --> 00:13:51.311
has a seven-inch screen taking HDPI assets,
whereas some devices which are having a four

00:13:51.311 --> 00:13:57.730
point seven inch screen, such as S3 is taking
XHDPI assets.

00:13:57.730 --> 00:14:10.150
I'm not quite sure what strategy I just need
to lay in order to fit the best layout with

00:14:10.150 --> 00:14:11.150
the best assets.

00:14:11.150 --> 00:14:14.060
&gt;&gt;Rich: Yeah, that's exactly right.

00:14:14.060 --> 00:14:15.270
Devices [inaudible].

00:14:15.270 --> 00:14:23.120
Have you seen any support in multiple screens
page in android developer.com?

00:14:23.120 --> 00:14:29.400
It gives a good outline of which device [inaudible].

00:14:29.400 --> 00:14:30.400
[pause]

00:14:30.400 --> 00:14:33.880
&gt;&gt;Sparky: Is Ravi still--?

00:14:33.880 --> 00:14:39.980
&gt;&gt;Ravi: I have seen the developer's Android
site and I've also seen the supporting multiple

00:14:39.980 --> 00:14:41.670
screens and stuff.

00:14:41.670 --> 00:14:47.990
But I mean, when I am actually doing some
development and it's OK when we are doing

00:14:47.990 --> 00:14:53.540
it via an emulator and checking it over some
part of your test devices, but when we send

00:14:53.540 --> 00:15:00.860
the app over the market, Android devices are
being in thousands of numbers and we are not,

00:15:00.860 --> 00:15:05.690
we are unable to figure the way where we need
to strategize the way.

00:15:05.690 --> 00:15:12.399
So, in some cases, we just need to specifically
set some standards for a specific device and

00:15:12.399 --> 00:15:18.110
release the APK to the consumer and send it
to air, which is taking hundreds of business,

00:15:18.110 --> 00:15:20.250
I mean, developer hours.

00:15:20.250 --> 00:15:24.990
So, how am I think if you would help on this?

00:15:24.990 --> 00:15:28.790
&gt;&gt;Nick: So, what's the issue you're facing?

00:15:28.790 --> 00:15:33.830
&gt;&gt;Al: I get the impression from Ravi that
one of the things that's providing a bit of

00:15:33.830 --> 00:15:38.750
confusion is the difference between densities
of assets and screen sizes.

00:15:38.750 --> 00:15:41.149
It's best if you think of those as two different
things.

00:15:41.149 --> 00:15:45.589
So, the density of assets is about how much
detail you want.

00:15:45.589 --> 00:15:48.630
And the screen size is your layout that you
want to incorporate.

00:15:48.630 --> 00:15:53.440
So that way, when you come across something
like an S3, it's using the high-density assets

00:15:53.440 --> 00:15:57.460
but it's still using the right layout for
its size screen.

00:15:57.460 --> 00:15:58.610
&gt;&gt;Ravi: Right.

00:15:58.610 --> 00:16:00.330
&gt;&gt;Sparky: Yeah, exactly.

00:16:00.330 --> 00:16:07.670
So, to sort of riff on what Al is saying,
basically, you have say a visual thing like

00:16:07.670 --> 00:16:10.000
a button background or an icon.

00:16:10.000 --> 00:16:14.430
And you say, "I want this thing to be about
two centimeters across."

00:16:14.430 --> 00:16:21.970
And then, you design a bitmap that measures
about two centimeters across in each of say,

00:16:21.970 --> 00:16:24.520
three or four bitmap or pixel densities.

00:16:24.520 --> 00:16:31.130
So, you say this thing is at 300 dots per
inch or 200 dots per inch or 160 dots per

00:16:31.130 --> 00:16:32.130
inch.

00:16:32.130 --> 00:16:37.500
This is how many pixels across the image needs
to be in order to measure say, two centimeters

00:16:37.500 --> 00:16:39.959
in real distances.

00:16:39.959 --> 00:16:48.029
And so, you just have different versions of
every visual asset and let the Android device

00:16:48.029 --> 00:16:54.520
know its own screen density and say, OK, I
am an XDPI, XHDPI device.

00:16:54.520 --> 00:16:55.730
I will pick this one.

00:16:55.730 --> 00:16:57.520
Or, I am an NDPI device.

00:16:57.520 --> 00:16:59.140
I'll pick that one.

00:16:59.140 --> 00:17:03.600
And you can then trust that when that thing
has gone on screen, that is approximately

00:17:03.600 --> 00:17:10.650
two centimeters across, subject to minor variations
because of the different size buckets.

00:17:10.650 --> 00:17:20.089
And then, so you size your assets for the
density and you size your layouts for the

00:17:20.089 --> 00:17:21.740
actual size.

00:17:21.740 --> 00:17:25.949
So you say, I want, this is the layout I want
to use and this screen actually physically

00:17:25.949 --> 00:17:31.179
measures seven inches across, or ten inches
across, or whatever.

00:17:31.179 --> 00:17:37.570
And then rely on the device to pick and choose
the right combination of layout per its screen

00:17:37.570 --> 00:17:44.169
size and the individual asset elements based
on its pixel density.

00:17:44.169 --> 00:17:46.499
Did that make sense?

00:17:46.499 --> 00:17:49.890
&gt;&gt;Nick: An easier way to do that is whenever
you're doing your layouts, make sure you're

00:17:49.890 --> 00:17:56.830
working in DIPS 'cause that lets you not think
about density, just think about size when

00:17:56.830 --> 00:17:58.460
you do your screen layout.

00:17:58.460 --> 00:18:03.440
And make sure you're working in density independent
pixels for all the layouts.

00:18:03.440 --> 00:18:04.590
&gt;&gt;Ravi: Uhh, yeah.

00:18:04.590 --> 00:18:15.489
But when I'm doing the assets, the screen
resolution which I use for the assets says

00:18:15.489 --> 00:18:24.489
like, as specified in developer.android.com,
which is a normal screen has 470 by 320.

00:18:24.489 --> 00:18:27.030
And that screen has 640 by 480.

00:18:27.030 --> 00:18:34.139
And using this aspect ratio, we are designing
the assets where you cannot expect all MDPI

00:18:34.139 --> 00:18:37.409
devices would be having this same screen resolution.

00:18:37.409 --> 00:18:39.730
So, I think this is where I am making a mistake.

00:18:39.730 --> 00:18:40.730
&gt;&gt;Al: Yeah.

00:18:40.730 --> 00:18:45.600
I mean, for the sizes you've quoted are the
screen sizes, not the densities.

00:18:45.600 --> 00:18:49.409
So, that would define your layout.

00:18:49.409 --> 00:18:55.270
The densities are if you look on the same
page, it'll say MDPI and the range is about

00:18:55.270 --> 00:18:58.970
150 to 200 dots per inch.

00:18:58.970 --> 00:18:59.970
&gt;&gt;Ravi: Right.

00:18:59.970 --> 00:19:04.340
&gt;&gt;Al: And that's what you use to determine
your asset sizes and how much detail you wanna

00:19:04.340 --> 00:19:05.690
put in those assets.

00:19:05.690 --> 00:19:11.519
The sizes you're talking about, the 640, 480,
the 470, 320, that's for designing the actual

00:19:11.519 --> 00:19:15.759
whole layout of the screen rather than designing
your assets and how much detail you want to

00:19:15.759 --> 00:19:16.989
appear in those assets.

00:19:16.989 --> 00:19:17.989
&gt;&gt;Ravi: Right.

00:19:17.989 --> 00:19:19.200
I got it now.

00:19:19.200 --> 00:19:20.200
Yeah.

00:19:20.200 --> 00:19:23.610
&gt;&gt;Nick: The raw pixel dimensions as well,
like something about normalcy.

00:19:23.610 --> 00:19:30.190
I guess the most common thing out there, it's
a normal high-density screen.

00:19:30.190 --> 00:19:35.940
And I wouldn't ever think about it, the dimensions,
so it's always, always, always think about

00:19:35.940 --> 00:19:38.869
how big that is in DIPS.

00:19:38.869 --> 00:19:45.279
And when you're doing your design, use the
value, the DIPS value, as the pixel dimensions.

00:19:45.279 --> 00:19:50.950
&gt;&gt;Al: Fortunately, the screen support document
does talk about DPs rather than actual pixels.

00:19:50.950 --> 00:19:54.039
So, hopefully that's reinforcing Nick's message.

00:19:54.039 --> 00:19:59.549
&gt;&gt;Nick: Yeah, there's a great training class
as well.

00:19:59.549 --> 00:20:05.049
So, that should probably give more background
as well.

00:20:05.049 --> 00:20:06.279
&gt;&gt;Ravi: Alright.

00:20:06.279 --> 00:20:08.110
That's brilliant, guys.

00:20:08.110 --> 00:20:14.149
&gt;&gt;Sparky: And of course if you have further
questions, feel free to look us up on Google+

00:20:14.149 --> 00:20:17.509
and send a little message to Google+ or something
like that.

00:20:17.509 --> 00:20:23.720
Or, take your question to StackOverflow or
to the Android Developers Forum, where people

00:20:23.720 --> 00:20:28.119
will be happy to help answer your questions
for you there as well.

00:20:28.119 --> 00:20:31.730
&gt;&gt;Ravi: Thank you.

00:20:31.730 --> 00:20:34.129
&gt;&gt;Sparky: Alright.

00:20:34.129 --> 00:20:39.590
Does anyone else want to ask us a question
in the forum before we tune in to the Moderator

00:20:39.590 --> 00:20:40.590
again?

00:20:40.590 --> 00:20:44.039
&gt;&gt;Al: I've got one to throw across to Matt.

00:20:44.039 --> 00:20:51.070
I saw the announcement yesterday about Google
TV rolling out to Germany, France, and The

00:20:51.070 --> 00:20:52.100
Netherlands.

00:20:52.100 --> 00:20:57.960
Do you know if that's going to be the same
Android version as is currently available

00:20:57.960 --> 00:21:00.989
on the Sony player in the UK and the States?

00:21:00.989 --> 00:21:04.730
&gt;&gt;Matt: So, it'll be a different version.

00:21:04.730 --> 00:21:09.603
The versions being released in the UK, Germany,
the Netherlands is gonna be different from

00:21:09.603 --> 00:21:12.909
the one in the States.

00:21:12.909 --> 00:21:18.070
There's a couple of bits they've got over
there that we haven't got quite yet over here.

00:21:18.070 --> 00:21:21.360
Yeah, it will be different, but only slightly.

00:21:21.360 --> 00:21:22.360
&gt;&gt;Al: Cool.

00:21:22.360 --> 00:21:27.100
Is there somewhere gonna be put out that says
what the differences will be so that people

00:21:27.100 --> 00:21:31.999
coating for global Google TV can tweak their
apps accordingly?

00:21:31.999 --> 00:21:38.179
&gt;&gt;Matt: I will make sure that that happens,
but ultimately it'll be things like the EPG

00:21:38.179 --> 00:21:41.759
content supplier that's not gonna be there
and things like that.

00:21:41.759 --> 00:21:43.980
Yeah, and we'll eventually bring it out.

00:21:43.980 --> 00:21:46.580
Yeah, but I'll make sure it ends up somewhere.

00:21:46.580 --> 00:21:47.889
&gt;&gt;Al: Cool, thanks.

00:21:47.889 --> 00:21:49.210
&gt;&gt;Matt: No worries.

00:21:49.210 --> 00:21:50.940
What are you working on?

00:21:50.940 --> 00:21:51.940
Can I ask?

00:21:51.940 --> 00:21:57.269
&gt;&gt;Al: I was looking at working on some social
backed applications with Google TV.

00:21:57.269 --> 00:22:03.580
So, chatting about TV shows but using second
screen on a phone and things like that.

00:22:03.580 --> 00:22:07.429
But if the EPG stuff isn't around, it makes
it a little difficult to determine which programs

00:22:07.429 --> 00:22:12.669
on and therefore, get hash tags and stuff
relating to that program.

00:22:12.669 --> 00:22:14.489
But I can tweak it.

00:22:14.489 --> 00:22:15.489
There's other ways of approaching it.

00:22:15.489 --> 00:22:19.869
And it was a bit of a shock to see that there's
no Google+ app for Google TV yet.

00:22:19.869 --> 00:22:22.340
&gt;&gt;Matt: Yes, I know.

00:22:22.340 --> 00:22:25.580
&gt;&gt;Sparky: I suppose you could code source
that, couldn't you Al?

00:22:25.580 --> 00:22:31.460
You could just monitor which tags are out
there and when a whole bunch in one particular

00:22:31.460 --> 00:22:34.529
theme start appearing, you can guess that
that show has begun.

00:22:34.529 --> 00:22:35.529
&gt;&gt;Al: Yeah.

00:22:35.529 --> 00:22:38.320
The only issue with that comes when you got
people that are watching the less popular

00:22:38.320 --> 00:22:43.299
channels 'cause you get the popular TV program,
like "X Factor" or some talent show.

00:22:43.299 --> 00:22:45.200
You get someone who's watching it--.

00:22:45.200 --> 00:22:46.200
[pause]

00:22:46.200 --> 00:22:56.860
&gt;&gt;Matt: I think there's a number of ways you
can kind of let go with it.

00:22:56.860 --> 00:23:01.379
I think e-pop is the main one that's, that
they really target specific shows in their

00:23:01.379 --> 00:23:02.379
apps.

00:23:02.379 --> 00:23:04.980
So, yeah, it'll be really interesting to see
what you come up with.

00:23:04.980 --> 00:23:08.019
&gt;&gt;Al: I'll put you on the beta list.

00:23:08.019 --> 00:23:12.409
&gt;&gt;Matt: I look forward to that.

00:23:12.409 --> 00:23:15.809
&gt;&gt;Sparky: And when you peddle the idea, remember
that you heard it here first so you can't

00:23:15.809 --> 00:23:17.250
sue us.

00:23:17.250 --> 00:23:18.279
[laughter]

00:23:18.279 --> 00:23:23.230
&gt;&gt;Al: I'm sure in the States it's patented
already somewhere.

00:23:23.230 --> 00:23:28.690
&gt;&gt;Sparky: So, I wanted to ask Matt, since
you were talking about Google TV a little

00:23:28.690 --> 00:23:36.210
bit, you wanna just give us like the quick,
the 10,000 foot overview of what is in the

00:23:36.210 --> 00:23:38.970
new Google TV platform and how does it relate
to Android?

00:23:38.970 --> 00:23:41.100
What version is it based on?

00:23:41.100 --> 00:23:43.259
And what new capabilities does it give us?

00:23:43.259 --> 00:23:49.970
&gt;&gt;Matt: So, at the moment, Google TV is running
three point two, so it's still Honeycomb.

00:23:49.970 --> 00:23:56.460
But essentially, added a load of extra work
for media codecs, so it means that we've gotten

00:23:56.460 --> 00:24:00.619
a load of extra hooks for people with [inaudible]
media, so you can actually work out what the

00:24:00.619 --> 00:24:02.340
quality of the stream is.

00:24:02.340 --> 00:24:08.460
We're also adding in support for like, PlayReady
DRM as well as allowing content suppliers

00:24:08.460 --> 00:24:10.700
to create their own DRM solutions.

00:24:10.700 --> 00:24:16.470
We've also got libraries to help you set your
screen applications, so you can easily integrate

00:24:16.470 --> 00:24:22.149
it with phones, tablets, and then you can
either communicate over a socket or use intents.

00:24:22.149 --> 00:24:27.389
Essentially you can [inaudible] on the TV
or on the mobile phone.

00:24:27.389 --> 00:24:33.620
And we're just developing a load of extra
tools so it can actually help develop the

00:24:33.620 --> 00:24:34.620
tablet UI.

00:24:34.620 --> 00:24:39.559
We're desperate to make sure they're not just
getting tablet UIs ported across without focus

00:24:39.559 --> 00:24:44.669
states being enabled, which obviously, for
the TV that relies on [inaudible] is quite

00:24:44.669 --> 00:24:45.669
important.

00:24:45.669 --> 00:24:46.669
So, yeah.

00:24:46.669 --> 00:24:50.229
And we're at the moment, I mean, our focus
is just getting international launch going

00:24:50.229 --> 00:24:53.350
in Paris, Germany, Netherlands, and the UK.

00:24:53.350 --> 00:24:59.100
I've just come from IFA in Berlin where we've
just had Samsung announce the [inaudible]

00:24:59.100 --> 00:25:02.009
will be launching in the UK and hopefully
other countries soon.

00:25:02.009 --> 00:25:05.190
My sense is we'll actually be going international
I hope.

00:25:05.190 --> 00:25:06.190
So, yeah.

00:25:06.190 --> 00:25:07.190
There's lots of stuff going on at the moment.

00:25:07.190 --> 00:25:14.000
Lots and lots of devices coming out, so lots
of interest all over the place.

00:25:14.000 --> 00:25:15.679
&gt;&gt;Sparky: That's fantastic.

00:25:15.679 --> 00:25:20.999
Now, a couple of minutes ago when you mentioned
content providers choosing their own DRM solutions,

00:25:20.999 --> 00:25:28.379
I assume that you're talking about people
who provide TV shows and stuff, not services

00:25:28.379 --> 00:25:30.700
that say, front databases, right?

00:25:30.700 --> 00:25:32.350
Is that right?

00:25:32.350 --> 00:25:33.760
Different kind of content provider?

00:25:33.760 --> 00:25:34.880
&gt;&gt;Matt: Yeah.

00:25:34.880 --> 00:25:36.010
Yeah, yeah.

00:25:36.010 --> 00:25:37.010
Definitely.

00:25:37.010 --> 00:25:38.010
My apologies.

00:25:38.010 --> 00:25:39.010
Yeah, definitely.

00:25:39.010 --> 00:25:44.119
Anyone who's got video or audio content and
they've got their own DRM solution.

00:25:44.119 --> 00:25:48.710
Ultimately, it's a neat area, but you'd be
surprised at the number of people that have

00:25:48.710 --> 00:25:50.429
niche content that they're publishing.

00:25:50.429 --> 00:25:58.450
Like, we've got a company that's in the US
that distributes Korean TV shows and we had

00:25:58.450 --> 00:26:04.590
them at Google IO and their main demonstration
show was "Sex in the City" but with guys instead

00:26:04.590 --> 00:26:05.950
of women.

00:26:05.950 --> 00:26:08.789
And apparently, it's really, really popular
in the US.

00:26:08.789 --> 00:26:11.539
So, yeah.

00:26:11.539 --> 00:26:12.909
Interesting.

00:26:12.909 --> 00:26:15.659
&gt;&gt;Sparky: Alright.

00:26:15.659 --> 00:26:19.149
&gt;&gt;Al: You haven't got a starring role in that,
have you, Matt?

00:26:19.149 --> 00:26:20.940
&gt;&gt;Matt: Not yet, no, I'm working on it.

00:26:20.940 --> 00:26:24.139
I'm emailing and pulling the right strings.

00:26:24.139 --> 00:26:25.139
Soon.

00:26:25.139 --> 00:26:26.139
[laughs]

00:26:26.139 --> 00:26:28.899
&gt;&gt;Sparky: All right.

00:26:28.899 --> 00:26:30.450
Let's take another one from the Moderator.

00:26:30.450 --> 00:26:32.289
It's been a little while.

00:26:32.289 --> 00:26:33.659
Let's see.

00:26:33.659 --> 00:26:40.470
Vmail says, "Can we make application which
acts like an application locker?

00:26:40.470 --> 00:26:46.070
Other applications only get accessible after
providing password, if yes, can you provide

00:26:46.070 --> 00:26:47.840
a hint, etc."

00:26:47.840 --> 00:26:49.009
Well, maybe.

00:26:49.009 --> 00:26:55.059
I mean, one of the things to keep in mind
is that our terms of use say that you can't

00:26:55.059 --> 00:27:01.340
provide an application that functions as app
store and distribute it through Google Play.

00:27:01.340 --> 00:27:06.039
So, if it's gonna be like an app store, you
would have to distribute it some other way.

00:27:06.039 --> 00:27:07.580
We're perfectly OK with you writing those
apps.

00:27:07.580 --> 00:27:10.240
You just can't distribute them through us.

00:27:10.240 --> 00:27:14.239
The other thing is, I suppose, yeah, sure.

00:27:14.239 --> 00:27:22.330
You could tie it into, for example, the license
verification library, but where you gonna

00:27:22.330 --> 00:27:23.330
say something Al?

00:27:23.330 --> 00:27:24.330
&gt;&gt;Nick: I heard the question slight differently.

00:27:24.330 --> 00:27:27.320
I heard it more like with some device.

00:27:27.320 --> 00:27:34.711
So, you can actually implement let's say,
some kind of launcher, I think, to, it's the

00:27:34.711 --> 00:27:37.269
launcher which opens up the shortcuts to launch
all the apps.

00:27:37.269 --> 00:27:40.840
So, if you wanted to provide a customized
experience, which requires a password to do

00:27:40.840 --> 00:27:44.190
that, you can open it out of the launcher.

00:27:44.190 --> 00:27:48.960
&gt;&gt;Rich: But at the same time, you'd have to
be very careful because we do have a clause

00:27:48.960 --> 00:27:52.309
in the developer distribution agreement which
means, which states you're not allowed to

00:27:52.309 --> 00:27:58.419
interfere with the other applications, the
way they work, or the data that they use.

00:27:58.419 --> 00:28:07.820
So, when you're trying to lock this application
behind a password, just be quite careful that

00:28:07.820 --> 00:28:14.159
maybe it's still impossible to run the application
other manners so it shouldn't muck about with

00:28:14.159 --> 00:28:17.220
the application data or anything to do with
the way the application itself is stored.

00:28:17.220 --> 00:28:21.090
If any complaints come in saying that your
application is affecting their application,

00:28:21.090 --> 00:28:23.380
then you could get taken down for it.

00:28:23.380 --> 00:28:26.940
So, do it in a safe, family friendly manner.

00:28:26.940 --> 00:28:34.749
&gt;&gt;Matt: See, I think I read this question
a third way, which was essentially detecting

00:28:34.749 --> 00:28:39.559
before the application is actually launched
and then essentially throwing up a password

00:28:39.559 --> 00:28:43.580
screen before that and then preventing it
from launching otherwise, if the password

00:28:43.580 --> 00:28:44.580
isn't entered.

00:28:44.580 --> 00:28:45.580
&gt;&gt;Rich: Yeah.

00:28:45.580 --> 00:28:47.840
That would be a function of an [inaudible],
right?

00:28:47.840 --> 00:28:55.649
&gt;&gt;Al: I mean, I read it a fourth way, which
is along the lines of using a password to

00:28:55.649 --> 00:28:57.649
get access to content provider data.

00:28:57.649 --> 00:29:03.701
So, is there a way of requiring one application
to provide a password before it can get access

00:29:03.701 --> 00:29:07.679
to data from a content provider from a second
application?

00:29:07.679 --> 00:29:10.359
&gt;&gt;Rich: OK.

00:29:10.359 --> 00:29:16.299
Well, Vmail, you've divided us four ways somehow.

00:29:16.299 --> 00:29:17.299
[laughter]

00:29:17.299 --> 00:29:25.440
&gt;&gt;Yossi: I think what he means is there used
to be a way to see the ActivityManager log

00:29:25.440 --> 00:29:32.940
file, see the system logs and see the events
being brought against result to see if it's

00:29:32.940 --> 00:29:33.940
being launched.

00:29:33.940 --> 00:29:39.559
And when the activity was being launched,
we used to send the intent and show your log

00:29:39.559 --> 00:29:40.740
screen.

00:29:40.740 --> 00:29:44.520
And when there was interest, the logcat is
now blocked.

00:29:44.520 --> 00:29:51.450
So, no one can really see the system log even
if they have permission.

00:29:51.450 --> 00:29:59.299
So, application locker won't work and they
have the same issue.

00:29:59.299 --> 00:30:07.099
Basically, you just look for the package after
you set the lock feature, then you set the

00:30:07.099 --> 00:30:09.720
package name and the logcat.

00:30:09.720 --> 00:30:11.889
And then when the intent is broadcasted, then
you show your own screen instead of the app

00:30:11.889 --> 00:30:12.889
screen.

00:30:12.889 --> 00:30:13.919
&gt;&gt;Nick: So it sits on top of it?

00:30:13.919 --> 00:30:14.919
&gt;&gt;Yossi: Yeah.

00:30:14.919 --> 00:30:16.830
&gt;&gt;Rich: It sits on top of it.

00:30:16.830 --> 00:30:20.539
So if you don't get the password right, you
kill the application?

00:30:20.539 --> 00:30:21.539
&gt;&gt;Yossi: Yeah.

00:30:21.539 --> 00:30:28.129
You don't kill the application, you just send
a cancel intent or send a home intent, so

00:30:28.129 --> 00:30:33.090
the apps won't get actually the wrong time.

00:30:33.090 --> 00:30:35.619
&gt;&gt;Nick: So, you can't do that anymore.

00:30:35.619 --> 00:30:40.309
So, I guess if you were gonna go the launcher
route, I'd look at the source for launcher

00:30:40.309 --> 00:30:44.729
two, which is in AOSP and use that as a starting
point.

00:30:44.729 --> 00:30:48.950
And beyond that, I guess we need some more
details on what you're exactly trying to achieve.

00:30:48.950 --> 00:30:50.139
&gt;&gt;Rich: Yeah.

00:30:50.139 --> 00:30:51.919
That's fair enough.

00:30:51.919 --> 00:30:53.109
&gt;&gt;Nick: Thanks.

00:30:53.109 --> 00:30:54.299
&gt;&gt;Rich: Next.

00:30:54.299 --> 00:30:56.080
&gt;&gt;Sparky: Anybody else?

00:30:56.080 --> 00:31:00.230
&gt;&gt;Al: I've got one for Nick and Rich.

00:31:00.230 --> 00:31:01.580
Can we see what's going on in the Hackathon?

00:31:01.580 --> 00:31:06.450
&gt;&gt;Rich: Yeah, I'll try and get a mobile device
through there in a minute.

00:31:06.450 --> 00:31:07.450
&gt;&gt;Al: Cool.

00:31:07.450 --> 00:31:09.169
&gt;&gt;Rich: Nick's laptop, I'll see if I can join.

00:31:09.169 --> 00:31:11.909
We've got one, two, three, four, five, six,
seven, eight, nine, ten.

00:31:11.909 --> 00:31:12.909
We're already fully booked.

00:31:12.909 --> 00:31:14.549
We got all ten users in the stream right now.

00:31:14.549 --> 00:31:16.129
So, I might just take this device with me
and hope this doesn't--.

00:31:16.129 --> 00:31:17.600
No, there's already ten people in the Hangout.

00:31:17.600 --> 00:31:18.929
&gt;&gt;Yossi: OK.

00:31:18.929 --> 00:31:24.989
&gt;&gt;Rich: So, if you leave the Hangout, you'll
be able to see.

00:31:24.989 --> 00:31:25.989
[laughter]

00:31:25.989 --> 00:31:28.919
&gt;&gt;Al: If you tell me that you need the space,
I'm quite happy to drop out.

00:31:28.919 --> 00:31:30.070
&gt;&gt;Rich: No, it's fine.

00:31:30.070 --> 00:31:34.129
We'll leave it to the last five or ten minutes
of the Hangout 'cause there's a good chance

00:31:34.129 --> 00:31:35.580
we'll drop out while talking around the building.

00:31:35.580 --> 00:31:39.059
And then I'll take this laptop and go into
the Hackathon space and you'll be able to

00:31:39.059 --> 00:31:40.059
see it that way.

00:31:40.059 --> 00:31:41.059
&gt;&gt;Al: Cool.

00:31:41.059 --> 00:31:42.059
Thanks.

00:31:42.059 --> 00:31:43.749
&gt;&gt;Rich: We'll jump out of there and see what's
going on.

00:31:43.749 --> 00:31:46.210
&gt;&gt;Yossi: You can see a few pictures on my
Google+ page.

00:31:46.210 --> 00:31:49.340
&gt;&gt;Rich: If you follow Yossi on Google+.

00:31:49.340 --> 00:31:50.340
[laughter]

00:31:50.340 --> 00:31:54.219
OK, so we'll just go to the next question.

00:31:54.219 --> 00:31:57.809
Have you got on lined up there, Sparky?

00:31:57.809 --> 00:31:59.159
&gt;&gt;Sparky: I do.

00:31:59.159 --> 00:32:00.159
Let's see.

00:32:00.159 --> 00:32:05.360
How to manage the ICS incremental use of memory
for high density graphics?

00:32:05.360 --> 00:32:11.919
My apps are using up to 20 mgs pre-ICS, but
with ICS it goes up to 60 mgs plus.

00:32:11.919 --> 00:32:13.359
That's too much.

00:32:13.359 --> 00:32:17.590
Heavy opps crashes due to memory, etc.

00:32:17.590 --> 00:32:23.529
Is there not something that you can put into
your manifest that says "I want to use an

00:32:23.529 --> 00:32:26.739
extra big system heap," that you probably
shouldn't use?

00:32:26.739 --> 00:32:27.739
But--.

00:32:27.739 --> 00:32:28.739
&gt;&gt;Rich: Yeah.

00:32:28.739 --> 00:32:29.739
&gt;&gt;Sparky: Otherwise--.

00:32:29.739 --> 00:32:33.590
&gt;&gt;Rich: It sounds like he might be storing
more tif files or something in your XHTPI

00:32:33.590 --> 00:32:34.590
folder.

00:32:34.590 --> 00:32:36.309
What, 60 megabytes of graphics?

00:32:36.309 --> 00:32:42.840
&gt;&gt;Nick: So, on this question let's see how
many ways it divides us.

00:32:42.840 --> 00:32:47.979
So, he thinks something's changed in ICS with
memory handling, or is he just saying like,

00:32:47.979 --> 00:32:50.549
the ICS era with HD graphic, higher resolution,
how do you guys interpret it?

00:32:50.549 --> 00:32:55.779
&gt;&gt;Rich: I interpret it as the latter one,
but now we're going for HD graphics.

00:32:55.779 --> 00:33:02.419
&gt;&gt;Nick: Yeah, so each of these devices with
the higher resolution screens don't really

00:33:02.419 --> 00:33:11.389
have a higher per app memory that you can
get, can't you, by the memory info class?

00:33:11.389 --> 00:33:14.340
I can't remember the name of the class.

00:33:14.340 --> 00:33:16.539
Physical attribution query and say what's
my limit.

00:33:16.539 --> 00:33:24.460
It's a good way to do this kind of thing,
is to use empty caches so that there's a first

00:33:24.460 --> 00:33:26.250
level where you're caching it to in memory
cache.

00:33:26.250 --> 00:33:30.609
If that cache gets full, you're putting it
out to disk and so on.

00:33:30.609 --> 00:33:34.620
And there's a bunch of great implementations
of that, most of them based on LIU caches.

00:33:34.620 --> 00:33:44.109
So, there's a good talk at Google IO by Jeff
Sharky about writing apps which go through

00:33:44.109 --> 00:33:45.369
such a cache mutation.

00:33:45.369 --> 00:33:48.460
And that talks about how you would size it
based on memory available, right?

00:33:48.460 --> 00:33:52.759
So, that's one strategy behind a clever caching
system.

00:33:52.759 --> 00:33:53.759
Any other advice you guys?

00:33:53.759 --> 00:33:57.679
&gt;&gt;Rich: Al Sutton's just put a link to memory
[ unintelligible ] memory class.

00:33:57.679 --> 00:33:59.929
&gt;&gt;Nick: Get memory class, that's it.

00:33:59.929 --> 00:34:01.429
&gt;&gt;Rich: Oh, is that--?

00:34:01.429 --> 00:34:05.419
&gt;&gt;Al: That one will give you all the details
about what you got available.

00:34:05.419 --> 00:34:06.419
&gt;&gt;Nick: Yeah.

00:34:06.419 --> 00:34:10.820
And I think Jeff's talk says about using the
memory available to apps to size your cache.

00:34:10.820 --> 00:34:15.899
So you might wanna keep, say, half of your
memory available for images.

00:34:15.899 --> 00:34:20.089
But it depends what your app is doing.

00:34:20.089 --> 00:34:25.399
&gt;&gt;Al: There's also the recycling bitmap information,
which might be useful if there are a lot of

00:34:25.399 --> 00:34:26.879
bitmaps being held around in memory.

00:34:26.879 --> 00:34:27.879
&gt;&gt;Rich: Yes.

00:34:27.879 --> 00:34:32.200
They have a good blog post on that at Android
developer's blog.

00:34:32.200 --> 00:34:33.200
&gt;&gt;Nick: Yeah.

00:34:33.200 --> 00:34:35.339
Reuse bit map objects and recycle it as soon
as you can.

00:34:35.339 --> 00:34:43.139
I think Chris Baynes also has a great recycling
bitmap cache implementation on GitHub if anyone

00:34:43.139 --> 00:34:51.419
would be bored with their internet and find
a link to Chris Baynes', uh, GitHub.

00:34:51.419 --> 00:34:54.839
That would be most appreciated.

00:34:54.839 --> 00:34:57.579
I think that's it.

00:34:57.579 --> 00:34:58.579
A nice solution.

00:34:58.579 --> 00:34:59.579
[pause]

00:34:59.579 --> 00:35:01.440
&gt;&gt;Matt: I was saying there's 60 megabytes
sounds a lot.

00:35:01.440 --> 00:35:02.520
&gt;&gt;Nick: Yeah.

00:35:02.520 --> 00:35:09.810
My original worry with that as well, that
you're just opening large sized bitmaps and

00:35:09.810 --> 00:35:14.619
porting the large sized bitmap in memory and
then resizing it when you're setting it.

00:35:14.619 --> 00:35:16.240
So, I definitely don't do that.

00:35:16.240 --> 00:35:21.750
Definitely only open, do the thing where you
get the bitmap bounds and only open it for

00:35:21.750 --> 00:35:24.000
a certain size at which you want to present
it.

00:35:24.000 --> 00:35:28.740
So, never, keep it [unintelligible] and resize
it, especially if you're doing a custom drawing

00:35:28.740 --> 00:35:31.880
where you're actually resizing it in your
own drawing and things like that.

00:35:31.880 --> 00:35:33.849
Don't forget about doing that.

00:35:33.849 --> 00:35:40.099
&gt;&gt;Matt: Another thing to consider, I think
it was in the Greendroid bitmap recycling,

00:35:40.099 --> 00:35:44.289
it's got a listener for memory warnings.

00:35:44.289 --> 00:35:47.839
And then the minute they receive that, they
clear out their bitmap cache.

00:35:47.839 --> 00:35:54.400
And I don't know whether that's good as an
absolute last resort or whether you just should

00:35:54.400 --> 00:36:01.810
be avoiding that situation at all costs and
not try and account for, I don't know.

00:36:01.810 --> 00:36:06.589
&gt;&gt;Nick: And as the new callback's introduced
in ICS, right, on trim memory, which will

00:36:06.589 --> 00:36:07.970
get the full on load memory.

00:36:07.970 --> 00:36:13.339
So this is all covered in that talk from Jeff
Sharky in IO.

00:36:13.339 --> 00:36:15.650
So, I strongly encourage you to check that
out.

00:36:15.650 --> 00:36:19.270
Yeah, which talks about that's the point at
which you trim out your cache.

00:36:19.270 --> 00:36:20.720
&gt;&gt;Rich: Yeah.

00:36:20.720 --> 00:36:22.170
Sounds good.

00:36:22.170 --> 00:36:28.559
Yeah, the app should never get to the point
where it crashes anyway.

00:36:28.559 --> 00:36:31.940
&gt;&gt;Sparky: I could get behind that.

00:36:31.940 --> 00:36:34.460
&gt;&gt;Rich: What was that, Sparky?

00:36:34.460 --> 00:36:38.980
&gt;&gt;Sparky: Just saying, I think I could definitely
get behind that last comment of yours, the

00:36:38.980 --> 00:36:40.400
app shouldn't get to the point where it crashes.

00:36:40.400 --> 00:36:41.400
I like that.

00:36:41.400 --> 00:36:42.859
I think I can live with that advice.

00:36:42.859 --> 00:36:43.859
&gt;&gt;Nick: Thanks.

00:36:43.859 --> 00:36:44.859
&gt;&gt;Rich: The link?

00:36:44.859 --> 00:36:52.480
Oh, it's a YouTube link for the Jeff Sharky's
IO talk.

00:36:52.480 --> 00:36:55.140
You can also find the IO--

00:36:55.140 --> 00:37:01.099
&gt;&gt;Yossi: I also posted on the thread, the
memory--.

00:37:01.099 --> 00:37:02.750
&gt;&gt;Nick: Cool.

00:37:02.750 --> 00:37:06.040
Any more live questions?

00:37:06.040 --> 00:37:07.040
Silence.

00:37:07.040 --> 00:37:11.440
&gt;&gt;Rich: We've gotten loads more appearing
in the Moderator, though.

00:37:11.440 --> 00:37:14.190
Let's go have a look.

00:37:14.190 --> 00:37:18.849
Offline documentation for Android four point
one so we can share it with other developers.

00:37:18.849 --> 00:37:22.930
He's downloaded it three times, but each time
the Android training is still lots of Android

00:37:22.930 --> 00:37:23.930
[inaudible].

00:37:23.930 --> 00:37:26.770
I think this is more likely because--.

00:37:26.770 --> 00:37:30.140
&gt;&gt;Sparky: It probably hasn't changed.

00:37:30.140 --> 00:37:34.660
&gt;&gt;Rich: Haven't had new classes added to Android
training for four point one.

00:37:34.660 --> 00:37:39.600
But maybe you already, maybe you've spotted
a class that is online that isn't offline.

00:37:39.600 --> 00:37:46.109
But it is most likely that we just haven't
added any new classes since the package was

00:37:46.109 --> 00:37:47.109
built.

00:37:47.109 --> 00:37:53.300
&gt;&gt;Sparky: My understanding is that each time
we push an SDK release, the Docs team rolls

00:37:53.300 --> 00:37:59.170
up the documentation site and they put that
in the SDK as well.

00:37:59.170 --> 00:38:01.630
I think that's what's, I think that's what
they told me.

00:38:01.630 --> 00:38:06.599
&gt;&gt;Al: There's also partly Android Open Source
Project, there's some training documentation

00:38:06.599 --> 00:38:08.780
all the development pulls are in there as
well.

00:38:08.780 --> 00:38:13.049
So, if it does look like there's a problem,
there's the ability to contribute back to

00:38:13.049 --> 00:38:17.880
the AOSP and make tweaks in that that hopeful
get rolled into the next release.

00:38:17.880 --> 00:38:18.880
[pause]

00:38:18.880 --> 00:38:19.880
&gt;&gt;Sparky: Cool.

00:38:19.880 --> 00:38:22.720
&gt;&gt;Nick: The SDK is updated.

00:38:22.720 --> 00:38:26.520
You'll get the latest cut then.

00:38:26.520 --> 00:38:27.520
[pause]

00:38:27.520 --> 00:38:37.609
&gt;&gt;Sparky: So, in light of that, I would guess
that if he's not seeing any new classes, it

00:38:37.609 --> 00:38:42.369
may just be that there aren't any, unless
he can identify something that's missing.

00:38:42.369 --> 00:38:45.369
I would go with that.

00:38:45.369 --> 00:38:47.430
&gt;&gt;Rich: Yeah.

00:38:47.430 --> 00:38:51.550
&gt;&gt;Sparky: Rich, you're right.

00:38:51.550 --> 00:38:54.000
The questions are flowing in here.

00:38:54.000 --> 00:38:58.680
RobM wants to know, looking for tips on developing
on lock screen widget.

00:38:58.680 --> 00:39:03.450
There isn't a lot of documentation on that.

00:39:03.450 --> 00:39:08.550
However, I did find some information about
it on StackOverflow.

00:39:08.550 --> 00:39:12.130
I just found it by searching for it, so you
probably can, too.

00:39:12.130 --> 00:39:18.369
Or if you look back in the archives of these
Hangouts.

00:39:18.369 --> 00:39:19.770
Go back maybe two or three months.

00:39:19.770 --> 00:39:20.940
I think you may find it there.

00:39:20.940 --> 00:39:21.940
So, we had a--.

00:39:21.940 --> 00:39:27.099
&gt;&gt;Nick: [ inaudible ] widget, then I think
most of the app posts which tend to work with

00:39:27.099 --> 00:39:34.930
standard widget APIs they use, it should be
exactly the same as creating a fresh, new

00:39:34.930 --> 00:39:36.080
widget, right?

00:39:36.080 --> 00:39:43.700
&gt;&gt;Sparky: Yeah, now that you mention it, I
think the question was that we have some information

00:39:43.700 --> 00:39:49.230
about lock screen widgets that are officially
supported for Honeycomb and beyond.

00:39:49.230 --> 00:39:52.900
And one of the objections that people have
is they say, "Oh, I want my lock screen to

00:39:52.900 --> 00:39:55.910
work on Gingerbread and before as well."

00:39:55.910 --> 00:40:01.880
And that's where you have to get into the
unofficial stuff and look at what the people

00:40:01.880 --> 00:40:03.790
have done on StackOverflow.

00:40:03.790 --> 00:40:10.430
So, one of the authors of one of the leading
lock screen packages basically posted to StackOverflow

00:40:10.430 --> 00:40:12.130
and said, "This is how I did it."

00:40:12.130 --> 00:40:17.490
&gt;&gt;Yossi: Why not try and use the AOC code.

00:40:17.490 --> 00:40:24.170
Try to see how it's built on the version you
want to implement.

00:40:24.170 --> 00:40:29.369
Just extend it to what you want to change.

00:40:29.369 --> 00:40:36.750
Maybe the views and basically have the base
class already implemented on your application.

00:40:36.750 --> 00:40:38.380
[pause]

00:40:38.380 --> 00:40:47.130
&gt;&gt;Sparky: That's a pretty good idea.

00:40:47.130 --> 00:40:48.700
Should we move on to the next one?

00:40:48.700 --> 00:40:49.700
Let's see.

00:40:49.700 --> 00:40:58.000
&gt;&gt;Rich: Oh, but Ravi was trying to ask a question
when I was talking about, started asking the

00:40:58.000 --> 00:40:59.000
thing from the Moderator.

00:40:59.000 --> 00:41:00.359
Do you want to ask your question, Ravi?

00:41:00.359 --> 00:41:01.359
&gt;&gt;Ravi: Yeah.

00:41:01.359 --> 00:41:03.640
I've been posting it on chat, actually.

00:41:03.640 --> 00:41:04.640
That's fine.

00:41:04.640 --> 00:41:05.640
I can ask here.

00:41:05.640 --> 00:41:12.309
I heard it from Google IO that Android would
be strictly monitoring the applications that

00:41:12.309 --> 00:41:14.779
were paid on Google Play.

00:41:14.779 --> 00:41:21.740
And someone would be downloading and instantly
the APKs will be having some strict reinforcements

00:41:21.740 --> 00:41:24.130
and considering a downloaded application.

00:41:24.130 --> 00:41:31.299
So, what has happened with it, I mean, I haven't
seen any restrictions of people downloading

00:41:31.299 --> 00:41:37.500
applications from third-party sites and just
installing them on their phones.

00:41:37.500 --> 00:41:43.779
&gt;&gt;Al: I think that's related to the encryption
that was coming in Jellybean for paid APKs.

00:41:43.779 --> 00:41:47.539
&gt;&gt;Sparky: Well, the encryption is in, I think.

00:41:47.539 --> 00:41:51.760
&gt;&gt;Al: There were some issues that had it that
it was backed out for a bit, but I think it

00:41:51.760 --> 00:41:53.440
is back again.

00:41:53.440 --> 00:41:55.970
&gt;&gt;Ravi: Oh, right.

00:41:55.970 --> 00:42:02.210
So, the devices which are supporting four
point one and less than four point one will

00:42:02.210 --> 00:42:09.010
not be having any kind of restrictions over
these stuff if I am true.

00:42:09.010 --> 00:42:15.640
&gt;&gt;Sparky: I don't think that there's much
that we can do for devices that are running

00:42:15.640 --> 00:42:21.000
a release of the OS that comes before it knows
about the encryption because how would it?

00:42:21.000 --> 00:42:22.214
I mean, I guess, I don't know.

00:42:22.214 --> 00:42:28.319
I suppose if we updated the market client
or the Google Play client, maybe you could.

00:42:28.319 --> 00:42:32.680
&gt;&gt;Nick: Changes to packet manager involved
as well.

00:42:32.680 --> 00:42:33.770
&gt;&gt;Sparky: OK.

00:42:33.770 --> 00:42:35.950
&gt;&gt;Nick: You can't [inaudible]

00:42:35.950 --> 00:42:39.770
&gt;&gt;Rich: It's through Jellybean only and upwards.

00:42:39.770 --> 00:42:44.960
&gt;&gt;Sparky: Yeah, that's the problem with those
darn legacy devices.

00:42:44.960 --> 00:42:48.220
Screw up all your wonderful new technology.

00:42:48.220 --> 00:43:01.069
&gt;&gt;Nick: I'll be interested to hear, so, what
is it that you heard at Google IO?

00:43:01.069 --> 00:43:05.170
Was it about the bad encryptions, is that
what you're asking about?

00:43:05.170 --> 00:43:08.160
The install from unsecure sources.

00:43:08.160 --> 00:43:10.380
&gt;&gt;Ravi: Umm, no.

00:43:10.380 --> 00:43:19.760
When I just watched the launch of Nexus 7,
which is about the Jellybean, yeah.

00:43:19.760 --> 00:43:25.730
That's where it is.

00:43:25.730 --> 00:43:26.730
[pause]

00:43:26.730 --> 00:43:27.980
&gt;&gt;Rich: Next.

00:43:27.980 --> 00:43:29.480
&gt;&gt;Sparky: Next.

00:43:29.480 --> 00:43:30.480
OK.

00:43:30.480 --> 00:43:35.700
Houdini has a couple of questions following
up from previous discussions.

00:43:35.700 --> 00:43:39.340
He was talking about the one-by-one settings
widgets saying isn't that really a shortcut

00:43:39.340 --> 00:43:43.510
because it can be placed in a folder, which
I thought was exclusive to shortcuts?

00:43:43.510 --> 00:43:49.190
Back to your original question, how do you
create a config activity for a shortcut?

00:43:49.190 --> 00:43:53.289
And then he asks a related question, which
is, he says, my main use case for creating

00:43:53.289 --> 00:44:00.760
shortcuts is replicating place on hold screen
that is on the overflow menu for the people

00:44:00.760 --> 00:44:01.760
app.

00:44:01.760 --> 00:44:04.040
How can you do that without the widget so
he can skip shortcuts altogether?

00:44:04.040 --> 00:44:10.480
&gt;&gt;Al: There is actually a StackOverflow answer
for creating shortcuts there.

00:44:10.480 --> 00:44:20.059
&gt;&gt;Rich: Yeah, the key is to get the create
shortcuts permission, isn't it?

00:44:20.059 --> 00:44:21.339
&gt;&gt;Al: Yeah.

00:44:21.339 --> 00:44:26.650
&gt;&gt;Rich: So, just look for, go for search for
create shortcut permission.

00:44:26.650 --> 00:44:27.650
&gt;&gt;Al: Install shorts.

00:44:27.650 --> 00:44:33.549
&gt;&gt;Rich: They have a widget which creates shortcuts,
I think.

00:44:33.549 --> 00:44:41.980
&gt;&gt;Nick: [ inaudible ] widget right between
[ inaudible ].

00:44:41.980 --> 00:44:47.160
&gt;&gt;Rich: Is there a way to do the same widget
so it can skip shortcuts?

00:44:47.160 --> 00:44:48.160
No.

00:44:48.160 --> 00:44:52.960
There's no way inside your application of
having a button that you press which [inaudible].

00:44:52.960 --> 00:44:54.020
&gt;&gt;Nick: [inaudible].

00:44:54.020 --> 00:44:57.359
&gt;&gt;Sparky: The user has to install the widget,
right?

00:44:57.359 --> 00:44:58.829
Is that right?

00:44:58.829 --> 00:44:59.829
&gt;&gt;Rich: Yeah.

00:44:59.829 --> 00:45:03.589
I think we actually agreed on that one, that
that's the question he asking.

00:45:03.589 --> 00:45:10.240
Yeah, he's been trying to ask this question
since we got here, I think.

00:45:10.240 --> 00:45:15.809
Trying to find the buttons that add widgets
to the home screen.

00:45:15.809 --> 00:45:21.339
&gt;&gt;Nick: So, there is an API for adding shortcuts
or not?

00:45:21.339 --> 00:45:22.349
&gt;&gt;Rich: Yeah.

00:45:22.349 --> 00:45:23.859
Plenty of widgets.

00:45:23.859 --> 00:45:24.869
Interesting, though.

00:45:24.869 --> 00:45:25.869
[buzzing]

00:45:25.869 --> 00:45:26.869
OK.

00:45:26.869 --> 00:45:29.400
We had a little bit of interference.

00:45:29.400 --> 00:45:30.400
&gt;&gt;Sparky: [inaudible].

00:45:30.400 --> 00:45:34.599
So, just say the app won't do anything unless
you install a widget.

00:45:34.599 --> 00:45:37.250
And then, he'll have his widgets.

00:45:37.250 --> 00:45:39.890
&gt;&gt;Rich: Or just a lot of uninstalled apps
without ratings.

00:45:39.890 --> 00:45:47.609
But yeah, I think we got to the bottom of
it in the end and no, it's not possible.

00:45:47.609 --> 00:45:48.609
Next.

00:45:48.609 --> 00:45:49.609
[laughs]

00:45:49.609 --> 00:45:53.050
&gt;&gt;Sparky: Joined by a couple of new people
live on the Hangout.

00:45:53.050 --> 00:45:54.050
We got Prakash.

00:45:54.050 --> 00:45:55.050
We got Quint.

00:45:55.050 --> 00:45:57.809
You guys have anything you wanna talk about
here on the Hangout?

00:45:57.809 --> 00:45:59.549
[pause]

00:45:59.549 --> 00:46:01.299
OK.

00:46:01.299 --> 00:46:05.569
We'll let them think about that.

00:46:05.569 --> 00:46:07.789
Maybe take another question from the Moderator.

00:46:07.789 --> 00:46:17.140
So, Sebastian says, "I want to make a custom
calendar view wherein I can show events match

00:46:17.140 --> 00:46:19.519
fixtures in date cells.

00:46:19.519 --> 00:46:21.300
How should I go about it?

00:46:21.300 --> 00:46:22.300
Thanks."

00:46:22.300 --> 00:46:26.760
&gt;&gt;Nick: Probably start from the calendar view
widget in AOSP.

00:46:26.760 --> 00:46:33.220
&gt;&gt;Sparky: So, are you thinking like take that
in subclasses and, or--?

00:46:33.220 --> 00:46:34.329
&gt;&gt;Nick: Yeah.

00:46:34.329 --> 00:46:37.569
&gt;&gt;Sparky: Can you just override layouts, maybe?

00:46:37.569 --> 00:46:40.619
Like how much customization do you think is
necessary to do something with that?

00:46:40.619 --> 00:46:42.289
&gt;&gt;Nick: It depends what you're trying to do.

00:46:42.289 --> 00:46:43.380
You might even be better off going from the
calendar app itself.

00:46:43.380 --> 00:46:44.380
It depends what you're trying to achieve.

00:46:44.380 --> 00:46:49.369
I don't, I'm not quite clear on exactly what
he's trying to achieve.

00:46:49.369 --> 00:46:52.859
&gt;&gt;Yossi: He's trying to show calendar--.

00:46:52.859 --> 00:46:56.140
&gt;&gt;Matt: And what about the Google for IO app
as well?

00:46:56.140 --> 00:47:00.250
That might be a good one if that's sort of
what you wanted to implement.

00:47:00.250 --> 00:47:02.329
&gt;&gt;Sparky: OK.

00:47:02.329 --> 00:47:05.809
So, a couple of good sources.

00:47:05.809 --> 00:47:09.230
Look at the AOSP calendar app or the Google
IO app.

00:47:09.230 --> 00:47:18.400
&gt;&gt;Nick: Yeah, I'd probably start with calendar
which is something similar, but the actual

00:47:18.400 --> 00:47:21.730
calendar, if you go to that month view, it
sounds like what you want, which draws the

00:47:21.730 --> 00:47:22.940
month and has little dots marking events.

00:47:22.940 --> 00:47:29.279
I'd see what I could learn, borrow, steal
from that.

00:47:29.279 --> 00:47:34.829
&gt;&gt;Sparky: We had a question not too long ago,
a month or two, where somebody wanted basically

00:47:34.829 --> 00:47:43.430
wanted to take their own private calendar
data and mash it up with Android calendar

00:47:43.430 --> 00:47:46.490
data and display it in a calendar.

00:47:46.490 --> 00:47:50.500
And I seem to recall that what we came up
with at the time was more or less, they would

00:47:50.500 --> 00:47:52.579
have to create their own UI for it.

00:47:52.579 --> 00:47:58.340
That we didn't have a way to just enhance
the existing UI of the existing app.

00:47:58.340 --> 00:48:05.339
So, it's the case that the way to do this
is gonna be to look at the source code of

00:48:05.339 --> 00:48:13.089
one of these already published date-viewing
apps, IO calendar, whatever and actually get,

00:48:13.089 --> 00:48:20.089
really get down in there into the UI and basically
copy slash reinvent the UI.

00:48:20.089 --> 00:48:22.170
[pause]

00:48:22.170 --> 00:48:24.240
OK.

00:48:24.240 --> 00:48:34.430
"Can I make an Android app for just three
people to have without putting it in the store?"

00:48:34.430 --> 00:48:35.589
Yes, absolutely.

00:48:35.589 --> 00:48:40.599
We call that side-loading, which basically
is installing by a means other than Google

00:48:40.599 --> 00:48:42.450
Play.

00:48:42.450 --> 00:48:48.230
And in order to support side-loading, your
users have to go into settings and from settings,

00:48:48.230 --> 00:48:52.859
go into security and select the checkbox that
says "unknown sources."

00:48:52.859 --> 00:48:56.950
In this case, unknown sources is pretty much
anything but the Google Play store.

00:48:56.950 --> 00:49:01.599
Once they do that, the easiest way to give
just three people your APK is to attach it

00:49:01.599 --> 00:49:03.750
to an email and email it to them.

00:49:03.750 --> 00:49:07.000
When they read the email on their device,
then the package manager will offer to install

00:49:07.000 --> 00:49:08.000
it.

00:49:08.000 --> 00:49:09.000
Clear?

00:49:09.000 --> 00:49:10.000
I think?

00:49:10.000 --> 00:49:14.010
&gt;&gt;Nick: And as you get increasingly sophisticated
there's other things you can do.

00:49:14.010 --> 00:49:19.040
So, if it's just small, like something like
Google Drive or drop boxes, it's great for

00:49:19.040 --> 00:49:23.540
all your sharing-related tools, but if you
get more requirements, like have more tested,

00:49:23.540 --> 00:49:28.009
more people you want to distribute it out
to, there's other solutions out there like

00:49:28.009 --> 00:49:32.060
there's one called Floppy App, which is, I've
heard a lot of people using.

00:49:32.060 --> 00:49:36.940
So you can use that to distribute your apps
to other people.

00:49:36.940 --> 00:49:40.599
It's kind of like a private store.

00:49:40.599 --> 00:49:41.650
&gt;&gt;Sparky: Hmm.

00:49:41.650 --> 00:49:45.250
When you said that, what I immediately thought
of was Hoccer, which I seem to recall was

00:49:45.250 --> 00:49:48.369
popular a couple years ago as a way of sharing
things with people.

00:49:48.369 --> 00:49:50.160
Are those guys still around?

00:49:50.160 --> 00:49:51.220
&gt;&gt;Nick: I don't know.

00:49:51.220 --> 00:49:52.220
I haven't heard from them in a while.

00:49:52.220 --> 00:49:53.220
&gt;&gt;Sparky: That was the other thing.

00:49:53.220 --> 00:49:58.760
It was a little bit like Bump, only it worked
over a distance, where you had your accelerometer

00:49:58.760 --> 00:50:02.670
and you took your device and you kind of went
"foop", like that, almost like you're throwing

00:50:02.670 --> 00:50:05.119
a Frisbee and they could catch it.

00:50:05.119 --> 00:50:12.450
And the devices would talk to the server and
correlate the accelerometer readings and figure

00:50:12.450 --> 00:50:15.230
out who threw what to whom.

00:50:15.230 --> 00:50:20.539
Doesn't ring a bell with anyone?

00:50:20.539 --> 00:50:21.539
H-O-C-C-E-R.

00:50:21.539 --> 00:50:25.559
&gt;&gt;Al: It doesn't with me, but a quick thought
is if you're developing an Android app, you

00:50:25.559 --> 00:50:29.750
can use NFCB to send a URL between devices.

00:50:29.750 --> 00:50:34.279
So, if you wanted a quick way to do it, host
the APK on the web server and update the app

00:50:34.279 --> 00:50:39.480
so that NFCB sends a URL across the other
device should be able to woken it up and install

00:50:39.480 --> 00:50:40.480
it.

00:50:40.480 --> 00:50:42.250
&gt;&gt;Sparky: I thought about that.

00:50:42.250 --> 00:50:49.220
I also thought that a small developer who's
gonna get an APTK to a couple of friends quickly

00:50:49.220 --> 00:50:51.289
is more likely to have email than a web server.

00:50:51.289 --> 00:50:52.289
&gt;&gt;Al: True.

00:50:52.289 --> 00:50:53.289
True.

00:50:53.289 --> 00:50:57.640
&gt;&gt;Nick: I think the [ inaudible ] drive is
the way to go here.

00:50:57.640 --> 00:50:58.640
&gt;&gt;Rich: Yeah.

00:50:58.640 --> 00:50:59.650
&gt;&gt;Sparky: Google Drive.

00:50:59.650 --> 00:51:00.770
Good one.

00:51:00.770 --> 00:51:03.480
I hadn't think, you know, that one even slipped
my mind.

00:51:03.480 --> 00:51:04.480
That's a great answer, too.

00:51:04.480 --> 00:51:11.950
&gt;&gt;Nick: Yeah, I like Google Drive 'cause then
you can even update it and make sure everyone

00:51:11.950 --> 00:51:17.160
has the latest version and all that good stuff.

00:51:17.160 --> 00:51:18.160
&gt;&gt;Sparky: OK.

00:51:18.160 --> 00:51:21.339
All these questions that keep on splitting
our opinion in multiple different ways.

00:51:21.339 --> 00:51:26.440
&gt;&gt;Al: There's never one right answer, just
a whole series of suggestions, which is the

00:51:26.440 --> 00:51:28.240
way it should be.

00:51:28.240 --> 00:51:30.559
&gt;&gt;Sparky: Right.

00:51:30.559 --> 00:51:32.890
Let's see.

00:51:32.890 --> 00:51:35.819
You people have to stop voting on these questions.

00:51:35.819 --> 00:51:42.119
New questions are coming in and they're getting
voted up and filtering to the top of my list

00:51:42.119 --> 00:51:43.119
on the Moderator.

00:51:43.119 --> 00:51:46.460
Maybe in the future, I'll, maybe in the future
I'll lock the Moderator just before we start

00:51:46.460 --> 00:51:47.770
the Hangout.

00:51:47.770 --> 00:51:53.260
So, a word to the wary, get your questions
in before the Hangout begins if you want an

00:51:53.260 --> 00:51:55.910
informed answer.

00:51:55.910 --> 00:52:02.809
"I just switched from C2M to GCM, but sometimes
my messages don't get delivered to all devices

00:52:02.809 --> 00:52:04.990
when sending them as a batch.

00:52:04.990 --> 00:52:06.660
The devices are all linked to the same Google
account.

00:52:06.660 --> 00:52:09.980
Does that mean it will only deliver them to
one?"

00:52:09.980 --> 00:52:16.089
&gt;&gt;Al: No, GCM doesn't guarantee delivery of
any message.

00:52:16.089 --> 00:52:17.160
So--.

00:52:17.160 --> 00:52:24.009
&gt;&gt;Sparky: I am not aware that it restricts
multiple devices on the same account from

00:52:24.009 --> 00:52:25.289
each receiving the message.

00:52:25.289 --> 00:52:27.480
I hadn't heard anything about that.

00:52:27.480 --> 00:52:30.039
So, I would guess that's probably not the
case.

00:52:30.039 --> 00:52:32.680
It may just be vagaries of delivery.

00:52:32.680 --> 00:52:36.569
&gt;&gt;Rich: Lots of applications that you have
installed, you'll get notifications across

00:52:36.569 --> 00:52:39.380
all your devices at the same time with GCM.

00:52:39.380 --> 00:52:45.630
As long as you've got the ID right as the
device sets up and registers your server.

00:52:45.630 --> 00:52:51.180
You may have issues that you're not correctly
supporting the C2DM and GCM at the same time.

00:52:51.180 --> 00:52:55.299
Some devices are still on the C2DM version
of your client and some devices have upgraded

00:52:55.299 --> 00:52:56.830
to the GCM version of your client.

00:52:56.830 --> 00:52:59.920
Maybe one or the other aren't getting the
messages--.

00:52:59.920 --> 00:53:00.920
&gt;&gt;Nick: [ inaudible ].

00:53:00.920 --> 00:53:01.920
&gt;&gt;Rich: Yeah.

00:53:01.920 --> 00:53:07.440
Boy, you've got to support both C2DM and GCM
and both end points on our server so we can

00:53:07.440 --> 00:53:09.190
send the right message to the right clients.

00:53:09.190 --> 00:53:15.320
So, you'll be sending two sets of messages
if you're still doing the upgrade, especially

00:53:15.320 --> 00:53:16.539
if you've just switched over.

00:53:16.539 --> 00:53:19.410
It's likely to fall into that bucket.

00:53:19.410 --> 00:53:23.569
So, make sure you've got an old client that's
still on C2DM and a new client that's on GCM

00:53:23.569 --> 00:53:25.510
when you're doing the test, I would say.

00:53:25.510 --> 00:53:29.700
If it's not that, then yeah, what Al said
that we don't guarantee delivery.

00:53:29.700 --> 00:53:38.369
But it's definitely not down to us excluding
devices because they're on the same Google

00:53:38.369 --> 00:53:41.779
account.

00:53:41.779 --> 00:53:43.640
Andrew Kenny has one other question.

00:53:43.640 --> 00:53:50.529
He also asks, "If I have a grid view, how
can I get the last rows recentered if I have

00:53:50.529 --> 00:53:52.289
an odd number of items to the grid?"

00:53:52.289 --> 00:53:56.050
Apparently it's in the left-hand column of
the other items.

00:53:56.050 --> 00:53:59.710
I don't actually have an answer.

00:53:59.710 --> 00:54:02.819
In the left-hand column unless you can add
a footer to grid view like you can on list

00:54:02.819 --> 00:54:03.819
views.

00:54:03.819 --> 00:54:07.059
Maybe you can add a footer item if you've
got an odd number of items, you can put it

00:54:07.059 --> 00:54:08.059
in the footer.

00:54:08.059 --> 00:54:09.430
Any suggestions from the Hangout?

00:54:09.430 --> 00:54:11.190
&gt;&gt;Nick: Add a spacer item?

00:54:11.190 --> 00:54:12.230
&gt;&gt;Yossi: Yeah.

00:54:12.230 --> 00:54:14.730
Maybe [ inaudible ]. Just as a filler?

00:54:14.730 --> 00:54:17.089
&gt;&gt;Rich: Just as a filler?

00:54:17.089 --> 00:54:19.960
So, you'd be in the right-hand column, yeah.

00:54:19.960 --> 00:54:21.650
But he wants it centered in the middle.

00:54:21.650 --> 00:54:24.569
&gt;&gt;Nick: But I'm saying it's just like three
columns and then you could add one.

00:54:24.569 --> 00:54:25.569
&gt;&gt;Rich: Oh, there's three columns?

00:54:25.569 --> 00:54:26.589
Yeah, that's not bad.

00:54:26.589 --> 00:54:27.589
Yeah.

00:54:27.589 --> 00:54:31.360
I was imagining two and then left and right
and swap.

00:54:31.360 --> 00:54:32.440
&gt;&gt;Nick: Yeah, right.

00:54:32.440 --> 00:54:33.440
Yeah.

00:54:33.440 --> 00:54:35.690
&gt;&gt;Yossi: He wants it centered, so it has--.

00:54:35.690 --> 00:54:39.300
&gt;&gt;Nick: I would say this sounds like a custom
layout.

00:54:39.300 --> 00:54:43.240
You probably want to extend grid view and
change some of its layout attributes and center

00:54:43.240 --> 00:54:44.890
the last little line.

00:54:44.890 --> 00:54:51.499
&gt;&gt;Sparky: I haven't done this with grid view,
but I had a question a little while back where

00:54:51.499 --> 00:54:59.910
somebody wanted to center an even number of,
well, a mix of even, odd numbers of elements--in

00:54:59.910 --> 00:55:02.789
this case, buttons--in a relative layout.

00:55:02.789 --> 00:55:09.990
And what I suggested was creating an invisible,
or a non-visible, text view.

00:55:09.990 --> 00:55:14.559
Center that and then place all the other elements
relative to that.

00:55:14.559 --> 00:55:19.789
So, a spacer item or an invisible view of
some kind, may be a way to go here.

00:55:19.789 --> 00:55:24.640
&gt;&gt;Nick: I like the idea of extending grid
view.

00:55:24.640 --> 00:55:25.779
[inaudible].

00:55:25.779 --> 00:55:28.940
I think that fills that.

00:55:28.940 --> 00:55:30.710
&gt;&gt;Rich: Extend the grid view.

00:55:30.710 --> 00:55:32.260
&gt;&gt;Nick: Yeah.

00:55:32.260 --> 00:55:44.520
Plus it will work nicely with the adapter
as well, [inaudible] background of the [inaudible].

00:55:44.520 --> 00:55:45.520
There we go.

00:55:45.520 --> 00:55:46.520
Announced.

00:55:46.520 --> 00:55:47.520
&gt;&gt;Rich: I was thinking, yeah.

00:55:47.520 --> 00:55:48.520
That's fine.

00:55:48.520 --> 00:55:49.520
Well, that was the last question from the
Moderator unless someone else has snuck one

00:55:49.520 --> 00:55:50.520
in whilst--.

00:55:50.520 --> 00:55:51.520
&gt;&gt;Sparky: I got a bunch more, actually.

00:55:51.520 --> 00:55:52.520
&gt;&gt;Rich: No.

00:55:52.520 --> 00:55:54.980
Well, we've only got three minutes left of
the Hangout and I was gonna do a quick run

00:55:54.980 --> 00:55:56.140
round to the--.

00:55:56.140 --> 00:55:58.200
&gt;&gt;Nick: Yeah, do it.

00:55:58.200 --> 00:56:03.630
&gt;&gt;Sparky: Well, why don't I through some of
these questions while you take a walk maybe?

00:56:03.630 --> 00:56:04.630
&gt;&gt;Rich: OK.

00:56:04.630 --> 00:56:09.339
I'm unplugging from the Ethernet, so that
might drop me off for a start, but I'll just

00:56:09.339 --> 00:56:10.339
re--.

00:56:10.339 --> 00:56:11.339
[laughter]

00:56:11.339 --> 00:56:12.339
&gt;&gt;Sparky: He is frozen.

00:56:12.339 --> 00:56:16.040
So we've got another question on the Moderator
here.

00:56:16.040 --> 00:56:22.170
It says, we "described how to make use of
a drawer but didn't document it or provide

00:56:22.170 --> 00:56:23.999
any implementation advice."

00:56:23.999 --> 00:56:25.650
Well, that's true.

00:56:25.650 --> 00:56:32.109
It's so new that basically the Android team
had not, or the framework team had not yet

00:56:32.109 --> 00:56:34.680
caught up with the practice.

00:56:34.680 --> 00:56:36.789
So, look ion Stack Overflow.

00:56:36.789 --> 00:56:42.670
There's some Stack Overflow threads that give
links to projects that implement various versions

00:56:42.670 --> 00:56:45.700
of the left-hand drawer.

00:56:45.700 --> 00:56:46.790
And look--.

00:56:46.790 --> 00:56:48.970
&gt;&gt;Al: And then obviously--.

00:56:48.970 --> 00:56:54.299
&gt;&gt;Sparky: Look to the YouTube application
as the way that we recommend that it be implemented

00:56:54.299 --> 00:56:57.300
in terms of behavior.

00:56:57.300 --> 00:57:05.069
Oh, I see some motion there from, is that
Rich?

00:57:05.069 --> 00:57:09.650
&gt;&gt;Rich: Yeah, I'm sure you can see that it's
a beautiful day here in Tel Aviv.

00:57:09.650 --> 00:57:12.569
I just thought I'd stop on the balcony for
a second to make you all kind of jealous.

00:57:12.569 --> 00:57:16.569
When was the last time you saw a sky like
that in London?

00:57:16.569 --> 00:57:26.499
&gt;&gt;Sparky: It's been a while since I saw one
in--.

00:57:26.499 --> 00:57:28.789
&gt;&gt;Rich: And the palm trees.

00:57:28.789 --> 00:57:29.789
OK.

00:57:29.789 --> 00:57:30.789
&gt;&gt;Sparky: Let's see.

00:57:30.789 --> 00:57:33.019
I'll take another question from the Moderator
while he's walking.

00:57:33.019 --> 00:57:36.829
"In my UI thread, I started a task to do some
long time calculations.

00:57:36.829 --> 00:57:41.130
How can I weight properly in the UI thread
to get info about finishing the task without

00:57:41.130 --> 00:57:43.839
handlers?"

00:57:43.839 --> 00:57:47.440
You can post progress updates from you async
task.

00:57:47.440 --> 00:57:55.460
And you can also complete the task by doing
something on post execute.

00:57:55.460 --> 00:57:59.359
&gt;&gt;Al: We have a cardboard Android.

00:57:59.359 --> 00:58:01.200
&gt;&gt;Sparky: Cardboard Android.

00:58:01.200 --> 00:58:04.480
Rich, what are we looking at?

00:58:04.480 --> 00:58:09.049
&gt;&gt;Al: I have a feeling they've just frozen.

00:58:09.049 --> 00:58:11.049
&gt;&gt;Sparky: Uh-oh.

00:58:11.049 --> 00:58:15.930
Well, they stepped into a, they stepped into
a lion's den of developers there.

00:58:15.930 --> 00:58:20.470
They're probably using every wi-fi channel.

00:58:20.470 --> 00:58:23.220
[pause]

00:58:23.220 --> 00:58:27.789
Got a couple of new people in the call.

00:58:27.789 --> 00:58:31.509
We got Falco Richter.

00:58:31.509 --> 00:58:42.420
Any news from Falco?

00:58:42.420 --> 00:58:45.140
OK.

00:58:45.140 --> 00:58:47.869
[pause]

00:58:47.869 --> 00:58:54.299
Do we recommend creating a library Android
project to validate--?

00:58:54.299 --> 00:59:02.599
[pause]

00:59:02.599 --> 00:59:12.539
Is always a good idea.

00:59:12.539 --> 00:59:17.079
Maybe not for something like a spinner or
a drop-down list, but if you're taking anything

00:59:17.079 --> 00:59:21.550
from a text view or a text edit, definitely
validate your--

00:59:21.550 --> 00:59:27.259
&gt;&gt;Al: And they're back in Israel.

00:59:27.259 --> 00:59:33.039
&gt;&gt;Rich: OK, we are back.

00:59:33.039 --> 00:59:39.329
Here's the Hackathon happening in the college
right now with [ inaudible ].

00:59:39.329 --> 00:59:40.950
[background chatter]

00:59:40.950 --> 00:59:47.980
This is, this is the Android developer Office
Hours.

00:59:47.980 --> 00:59:49.880
Hey guys.

00:59:49.880 --> 00:59:51.119
What projects are you working on?

00:59:51.119 --> 00:59:53.299
&gt;&gt;Male #1: I'm working on--.

00:59:53.299 --> 00:59:54.299
Hi.

00:59:54.299 --> 01:00:02.529
I working on, it's a kind of application that
integrates Google Drive API to distribute

01:00:02.529 --> 01:00:06.569
files with [unintelligible] events.

01:00:06.569 --> 01:00:12.109
If you're attending a Google IO, then you
don't have to download the application, it

01:00:12.109 --> 01:00:14.549
will drop inside your Google Drive.

01:00:14.549 --> 01:00:16.180
&gt;&gt;Rich: Thanks very much.

01:00:16.180 --> 01:00:19.160
Does anyone want to see what other project
bits are going on?

01:00:19.160 --> 01:00:21.259
Or, do you wanna finish it off there?

01:00:21.259 --> 01:00:24.650
&gt;&gt;Al: No, keep going round the room.

01:00:24.650 --> 01:00:25.650
It sounds interesting.

01:00:25.650 --> 01:00:26.650
&gt;&gt;Rich: OK.

01:00:26.650 --> 01:00:34.660
Would anyone else like to tell the world what
project they're working on at the moment?

01:00:34.660 --> 01:00:35.849
[background chatter]

01:00:35.849 --> 01:00:36.849
Yeah?

01:00:36.849 --> 01:00:37.849
Yeah.

01:00:37.849 --> 01:00:38.849
What project's you working on?

01:00:38.849 --> 01:00:40.950
&gt;&gt;Male #2: [inaudible].

01:00:40.950 --> 01:00:44.059
We're doing dog feeding.

01:00:44.059 --> 01:00:46.390
&gt;&gt;Rich: Dog feeding?

01:00:46.390 --> 01:00:48.720
&gt;&gt;Male #2: Yeah.

01:00:48.720 --> 01:00:50.279
Poor dogs.

01:00:50.279 --> 01:00:58.049
No, it's basically an application that once
installed in all your device, will choose

01:00:58.049 --> 01:01:00.210
whatever products you want to subscribe to.

01:01:00.210 --> 01:01:06.400
Every time the machine builds a new version,
it uploads everything to your drive and then

01:01:06.400 --> 01:01:11.490
has it installed on your devices, beta users,
[inaudible].

01:01:11.490 --> 01:01:12.970
[background chatter]

01:01:12.970 --> 01:01:14.460
&gt;&gt;Rich: Excellent.

01:01:14.460 --> 01:01:18.029
That's actually guests Google Drive slash
Android Hackathon.

01:01:18.029 --> 01:01:19.490
So, lots of projects going on.

01:01:19.490 --> 01:01:20.789
Google Drive projects as well.

01:01:20.789 --> 01:01:25.049
It's an excellent addition to your build system,
will upload your files as you're building

01:01:25.049 --> 01:01:29.109
them straight to Google Drive and that way
users test them, the latest version of the

01:01:29.109 --> 01:01:30.440
apps as they're being built.

01:01:30.440 --> 01:01:31.779
We'll leave it at that.

01:01:31.779 --> 01:01:32.779
We're way over time already.

01:01:32.779 --> 01:01:33.779
But--.

01:01:33.779 --> 01:01:34.970
&gt;&gt;Al: Thanks for the tour.

01:01:34.970 --> 01:01:38.279
&gt;&gt;Male #3: Only a few people?

01:01:38.279 --> 01:01:39.660
&gt;&gt;Rich: Yeah, it's all right.

01:01:39.660 --> 01:01:41.440
Well, thank you all very much.

01:01:41.440 --> 01:01:46.079
We're gonna leave you there and we'll catch
you again next Wednesday.

01:01:46.079 --> 01:01:48.049
&gt;&gt;Al: Thanks, guys.

01:01:48.049 --> 01:01:49.380
&gt;&gt;Sparky: Alright.

01:01:49.380 --> 01:01:51.299
Thanks everyone for showing up.

01:01:51.299 --> 01:01:56.089
Once again, giving us another great excuse
to fill your heads with lots of ideas about

01:01:56.089 --> 01:01:57.299
Android development.

01:01:57.299 --> 01:02:03.550
And we'll join you again at the same two o'clock
UK time, three o'clock Central European time

01:02:03.550 --> 01:02:04.550
next Wednesday.

01:02:04.550 --> 01:02:05.829
Take care everyone.

01:02:05.829 --> 01:02:07.749
&gt;&gt;Rich: Until next week.

01:02:07.749 --> 01:02:08.749
See ya.

01:02:08.749 --> 01:02:09.670
&gt;&gt;Al: Bye.

