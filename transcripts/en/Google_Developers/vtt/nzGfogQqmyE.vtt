WEBVTT
Kind: captions
Language: en

00:00:01.251 --> 00:00:02.490
ADE OSHINEYE: OK.

00:00:02.490 --> 00:00:03.790
I think we're ready to start.

00:00:03.790 --> 00:00:05.470
Are you ready to start?

00:00:05.470 --> 00:00:06.265
AUDIENCE: Yeah.

00:00:06.265 --> 00:00:06.560
ADE OSHINEYE: Good.

00:00:06.560 --> 00:00:08.863
I was just worried that somebody
would say no, and it

00:00:08.863 --> 00:00:09.805
would be awkward.

00:00:09.805 --> 00:00:11.772
AUDIENCE: No.

00:00:11.772 --> 00:00:12.800
ADE OSHINEYE: Excellent.

00:00:12.800 --> 00:00:14.320
So I'm Ade Oshineye.

00:00:14.320 --> 00:00:15.880
I'm going to be your
developer advocate

00:00:15.880 --> 00:00:17.280
for the next 45 minutes.

00:00:17.280 --> 00:00:20.890
And we're going to be talking
about Google+ Sign-In for web

00:00:20.890 --> 00:00:22.230
applications.

00:00:22.230 --> 00:00:24.890
I'm going to be trying to make
this interesting for those of

00:00:24.890 --> 00:00:26.860
you who have already
used our APIs.

00:00:26.860 --> 00:00:28.980
I'm going to be trying to show
you how you can make this

00:00:28.980 --> 00:00:32.360
valuable, how you can make
Sign-In a valuable addition to

00:00:32.360 --> 00:00:34.860
what you're building.

00:00:34.860 --> 00:00:37.340
If you've been to any talks by
me before, you'll know that I

00:00:37.340 --> 00:00:39.500
like questions during it.

00:00:39.500 --> 00:00:42.940
However, because this is being
recorded, I'd like you to

00:00:42.940 --> 00:00:45.010
defer questions until the end.

00:00:45.010 --> 00:00:48.500
And please use the microphones
so that it shows up for the

00:00:48.500 --> 00:00:49.470
recordings.

00:00:49.470 --> 00:00:51.500
Thank you.

00:00:51.500 --> 00:00:54.520
So let's talk about
Google+ Sign-In,

00:00:54.520 --> 00:00:58.328
specifically Web Sign-In.

00:00:58.328 --> 00:01:01.360
But let's start with
something else.

00:01:01.360 --> 00:01:05.890
Who here prefers knives
to forks?

00:01:05.890 --> 00:01:08.910
OK, who prefers forks
to knives?

00:01:08.910 --> 00:01:09.780
Wow.

00:01:09.780 --> 00:01:12.480
There are a lot of people
who like forks here.

00:01:12.480 --> 00:01:17.210
So who prefers the web
to native apps?

00:01:17.210 --> 00:01:20.136
What about native
apps to the web?

00:01:20.136 --> 00:01:21.720
It's a little more even here.

00:01:21.720 --> 00:01:24.160
The thing I'm trying to convey
is that just like with knives

00:01:24.160 --> 00:01:27.240
and forks, we need the
web and native apps.

00:01:27.240 --> 00:01:29.940
They work best together.

00:01:29.940 --> 00:01:32.250
And what we're trying to do with
the Sign-In features is

00:01:32.250 --> 00:01:34.790
based on this sort
of thinking.

00:01:34.790 --> 00:01:37.080
Despite the fact that we need
all of this stuff, we're

00:01:37.080 --> 00:01:39.210
Google, and we believe
firmly that it all

00:01:39.210 --> 00:01:40.600
starts with the web.

00:01:40.600 --> 00:01:44.420
So even though users switch all
the time, dozens of times

00:01:44.420 --> 00:01:47.680
a day, between multiple
different devices and will

00:01:47.680 --> 00:01:51.770
continue the same user journey
across multiple devices, it

00:01:51.770 --> 00:01:52.940
still starts with the web.

00:01:52.940 --> 00:01:56.025
The web is where people discover
your site, your app,

00:01:56.025 --> 00:01:58.130
the thing you're building.

00:01:58.130 --> 00:02:01.620
The other thing we believe is
that when it comes to building

00:02:01.620 --> 00:02:04.680
a social web app, social is not
something you sprinkle on

00:02:04.680 --> 00:02:05.350
afterwards.

00:02:05.350 --> 00:02:08.539
It's not something you hack
into an existing thing.

00:02:08.539 --> 00:02:11.510
It's not just I put a
button there-- done.

00:02:11.510 --> 00:02:13.825
You've got to rethink how you're
building your site.

00:02:13.825 --> 00:02:14.970
You've got to redesign it.

00:02:14.970 --> 00:02:17.320
You've got to think about
how you make this

00:02:17.320 --> 00:02:19.290
valuable for users.

00:02:19.290 --> 00:02:22.610
Now, who was here at
last year's I/O?

00:02:22.610 --> 00:02:23.340
Excellent.

00:02:23.340 --> 00:02:27.890
So you may have seen
this slide.

00:02:27.890 --> 00:02:28.770
It's OK.

00:02:28.770 --> 00:02:30.940
It can't hurt you.

00:02:30.940 --> 00:02:34.480
So in the past, we've talked
a lot about the technology

00:02:34.480 --> 00:02:37.140
behind social, about identity.

00:02:37.140 --> 00:02:38.720
We've talked a lot
about OAuth.

00:02:38.720 --> 00:02:42.680
Who here has fond memories
of OAuth?

00:02:42.680 --> 00:02:43.970
Nobody.

00:02:43.970 --> 00:02:44.110
OK.

00:02:44.110 --> 00:02:47.092
Who here found OAuth painful?

00:02:47.092 --> 00:02:49.640
Who here found OAuth was
something that required you to

00:02:49.640 --> 00:02:52.730
be a rocket scientist to
get stuff to work?

00:02:52.730 --> 00:02:54.350
So we're trying to fix that.

00:02:54.350 --> 00:02:56.140
We're trying to move to a
world where things are

00:02:56.140 --> 00:02:59.290
simpler, where you don't need
a lab coat to do social.

00:02:59.290 --> 00:03:03.620
We've built a whole suite of
client libraries and SDKs

00:03:03.620 --> 00:03:07.060
across all of the major
languages, the major

00:03:07.060 --> 00:03:10.790
platforms, so that Sign-In
and other social

00:03:10.790 --> 00:03:12.640
features are very easy.

00:03:12.640 --> 00:03:15.160
We've built quickstarts designed
to get you up and

00:03:15.160 --> 00:03:19.190
running within 15 minutes so
that you can build a very

00:03:19.190 --> 00:03:23.640
simple web app, add Sign-In,
understand what's possible,

00:03:23.640 --> 00:03:26.910
then go to your own real
application and think about

00:03:26.910 --> 00:03:30.630
what's going to be best for your
users in that context.

00:03:30.630 --> 00:03:34.010
The Google+ platform has matured
greatly since I was on

00:03:34.010 --> 00:03:35.580
this stage last year.

00:03:35.580 --> 00:03:38.810
We have a much wider range of
features and a much wider

00:03:38.810 --> 00:03:40.000
range of platforms.

00:03:40.000 --> 00:03:43.580
We have a platform that's aware
of the multi-device,

00:03:43.580 --> 00:03:47.730
multi-platform reality
we all live in today.

00:03:47.730 --> 00:03:52.220
And I'm going to show you some
examples, some of which are

00:03:52.220 --> 00:03:53.650
going to come from applications
that are being

00:03:53.650 --> 00:03:56.420
built by partners who are out
there, and some of which are

00:03:56.420 --> 00:03:58.280
going to come from this app.

00:03:58.280 --> 00:04:01.550
It's an instance of the
demonstration application

00:04:01.550 --> 00:04:03.410
called PhotoHunt
that we built.

00:04:03.410 --> 00:04:07.410
I shipped this publicly about
seven days ago, and it's had

00:04:07.410 --> 00:04:10.490
huge numbers of users.

00:04:10.490 --> 00:04:14.630
So let's start with how Sign-In
works and why Sign-In.

00:04:14.630 --> 00:04:17.740
So at Google, we believe it's
really important that the user

00:04:17.740 --> 00:04:21.399
gets one secure method of
signing into our services so

00:04:21.399 --> 00:04:24.210
that the user is strongly
encouraged to do things like

00:04:24.210 --> 00:04:26.100
use two-factor authentication.

00:04:26.100 --> 00:04:28.410
The thing is, two-factor
authentication is the right

00:04:28.410 --> 00:04:29.210
thing for users' [INAUDIBLE]

00:04:29.210 --> 00:04:30.700
security.

00:04:30.700 --> 00:04:33.750
But once they sign in once, if
every site they go to requires

00:04:33.750 --> 00:04:36.550
them to sign in, and then every
site has to also have

00:04:36.550 --> 00:04:39.610
two-factor authentication, life
is really, really hard.

00:04:39.610 --> 00:04:42.460
So we're trying to say, can we
make this something that other

00:04:42.460 --> 00:04:46.140
people can piggyback on,
can take advantage of?

00:04:46.140 --> 00:04:47.170
So how do you do this?

00:04:47.170 --> 00:04:50.850
How do you actually take
advantage of Google+ Sign-In?

00:04:50.850 --> 00:04:54.080
How do you start?

00:04:54.080 --> 00:04:56.500
Well, with everything we're
doing, it starts

00:04:56.500 --> 00:04:58.350
with the API Console.

00:04:58.350 --> 00:05:01.540
Who here has not seen
the Console?

00:05:01.540 --> 00:05:03.070
OK, we have a few.

00:05:03.070 --> 00:05:03.600
That's OK.

00:05:03.600 --> 00:05:05.655
So you can go to
developers.google.com/console.

00:05:05.655 --> 00:05:08.390
It will redirect you to the
more complicated URL.

00:05:08.390 --> 00:05:10.145
The very first thing you do
is you create a project.

00:05:12.750 --> 00:05:13.770
That's easy enough.

00:05:13.770 --> 00:05:16.250
You choose which of the dozens
of Google APIs you

00:05:16.250 --> 00:05:17.800
are going to enable.

00:05:17.800 --> 00:05:22.340
I'm biased, so I recommend
Google+ as the first place.

00:05:22.340 --> 00:05:24.630
So that having done that--

00:05:24.630 --> 00:05:27.092
as you can see, mine's called
Ade's Photohunt.

00:05:27.092 --> 00:05:29.790
You then just choose
your team.

00:05:29.790 --> 00:05:32.870
Now, if you're building an
application, there's usually

00:05:32.870 --> 00:05:34.190
more than just you
working on it.

00:05:34.190 --> 00:05:36.200
There are other people who
need access to things.

00:05:36.200 --> 00:05:38.950
If you're building a large web
application, you may have a

00:05:38.950 --> 00:05:39.885
large team.

00:05:39.885 --> 00:05:42.530
You may have iOS developers,
Android developers, as well as

00:05:42.530 --> 00:05:44.180
you building the web stuff.

00:05:44.180 --> 00:05:48.650
So the API Console provides
you the tools to do this.

00:05:48.650 --> 00:05:51.750
And then you populate
the client IDs.

00:05:51.750 --> 00:05:54.100
One of the things people often
miss about the way the API

00:05:54.100 --> 00:05:56.210
Console works is you have
the project, which

00:05:56.210 --> 00:05:57.590
has a project number.

00:05:57.590 --> 00:05:59.120
Then there are multiple
client IDs.

00:05:59.120 --> 00:06:01.020
So your iOS app may
have a client ID.

00:06:01.020 --> 00:06:02.800
Your Android app may
have a client ID.

00:06:02.800 --> 00:06:05.010
Your web app may have
a client ID.

00:06:05.010 --> 00:06:08.940
But they're all connected to
that project, which means when

00:06:08.940 --> 00:06:11.930
later on we talk about some of
the OAuth token stuff, we know

00:06:11.930 --> 00:06:13.500
they are all with the
same project.

00:06:13.500 --> 00:06:15.730
So revocation on one
revokes on all.

00:06:19.110 --> 00:06:23.030
If you've seen some of the talks
by people like Seth and

00:06:23.030 --> 00:06:25.120
David Glazer, where they've
been talking about

00:06:25.120 --> 00:06:28.620
Cross-device Single Sign-On and
the notion that the user

00:06:28.620 --> 00:06:32.560
authenticates the service, not
the app, a lot of that is

00:06:32.560 --> 00:06:35.150
based on the fact that we have
client IDs for each of the

00:06:35.150 --> 00:06:36.180
different apps.

00:06:36.180 --> 00:06:38.540
But we know they're all attached
to the project.

00:06:38.540 --> 00:06:40.620
And effectively, the project
is the service.

00:06:43.350 --> 00:06:45.560
So create a client ID.

00:06:45.560 --> 00:06:46.840
You can see the [INAUDIBLE]

00:06:46.840 --> 00:06:48.170
my demo account.

00:06:48.170 --> 00:06:51.360
And you can see I'm too lazy
to put any graphics in.

00:06:51.360 --> 00:06:53.880
And then there's some
OAuth stuff.

00:06:53.880 --> 00:06:55.880
So in this case, I'm
going to be using

00:06:55.880 --> 00:06:57.770
the JavaScript button.

00:06:57.770 --> 00:07:00.980
So I only need to specify
the JavaScript origins.

00:07:00.980 --> 00:07:04.080
So this is the sites the button
is going to be on.

00:07:04.080 --> 00:07:05.970
Because we're going through
the API Console, and we're

00:07:05.970 --> 00:07:08.720
trying to set everything up,
we take a look at the API

00:07:08.720 --> 00:07:10.010
traffic report.

00:07:10.010 --> 00:07:13.720
As you can see, my demo app has
been massively successful.

00:07:13.720 --> 00:07:16.250
But this is where you'd see
the amount of traffic your

00:07:16.250 --> 00:07:19.430
site will send into Google.

00:07:19.430 --> 00:07:23.990
And if you've got massive,
massive amounts of traffic,

00:07:23.990 --> 00:07:27.300
you would basically be able to
go here and be able to request

00:07:27.300 --> 00:07:27.970
more quota.

00:07:27.970 --> 00:07:30.910
Or if it's an API that requires
billing, this is

00:07:30.910 --> 00:07:32.350
where this would happen.

00:07:32.350 --> 00:07:34.770
As you can see, my app has
not had that problem.

00:07:39.180 --> 00:07:41.580
So one of the first questions
you should ask before you

00:07:41.580 --> 00:07:44.600
start implementing
Sign-In is, why?

00:07:44.600 --> 00:07:47.130
Why is this going to be
valuable to the user?

00:07:47.130 --> 00:07:49.560
If you just put a Sign-In button
there, but then after

00:07:49.560 --> 00:07:52.210
the user signs in nothing
has changed, then it

00:07:52.210 --> 00:07:53.310
wasn't worth it.

00:07:53.310 --> 00:07:55.510
What makes this valuable is that
the user signs in, and

00:07:55.510 --> 00:07:59.370
they get something new,
something different.

00:07:59.370 --> 00:08:01.530
So for example, you may
store preferences.

00:08:01.530 --> 00:08:05.330
Or you may let them discover
other people they know who are

00:08:05.330 --> 00:08:08.420
using this, who are using
your service.

00:08:08.420 --> 00:08:10.270
Implementing it is very easy.

00:08:10.270 --> 00:08:11.780
So that's what our standard
Google+ Sign in

00:08:11.780 --> 00:08:13.140
button looks like.

00:08:13.140 --> 00:08:16.460
We've moved very much to a model
where we say for most

00:08:16.460 --> 00:08:19.020
people most of the time, they
just want to turn up, cut and

00:08:19.020 --> 00:08:21.440
paste the buttons in, and then
get back to thinking about

00:08:21.440 --> 00:08:24.610
their web app and not about
our infrastructure or our

00:08:24.610 --> 00:08:27.660
technologies or OAuth or OpenID
or OpenID Connect or

00:08:27.660 --> 00:08:31.360
any of that menagerie of
standards and technologies.

00:08:31.360 --> 00:08:33.940
So you cut and paste
the JavaScript.

00:08:33.940 --> 00:08:36.230
This is going to asynchronously
insert.

00:08:36.230 --> 00:08:39.440
The JavaScript is going to
load our JavaScript file.

00:08:42.200 --> 00:08:45.330
You put in the button, because
you've got to have the actual

00:08:45.330 --> 00:08:46.640
markup for the button.

00:08:46.640 --> 00:08:47.790
You don't have to
use our button.

00:08:47.790 --> 00:08:50.230
We do have features that let
you do custom rendering.

00:08:50.230 --> 00:08:53.190
And many of our partners have
gone for subtle variations on

00:08:53.190 --> 00:08:55.960
our brand that fits in better
with their sites.

00:08:55.960 --> 00:08:58.500
But for most people, you
simply say, that's

00:08:58.500 --> 00:08:59.970
the button I want.

00:08:59.970 --> 00:09:01.880
g-signin is the class.

00:09:01.880 --> 00:09:05.110
Our JavaScript will later
on rewrite that page.

00:09:05.110 --> 00:09:06.720
You say the scopes you want.

00:09:06.720 --> 00:09:09.920
So that's a space-separated
list of the scopes.

00:09:09.920 --> 00:09:11.970
You say you want to request
visible actions.

00:09:11.970 --> 00:09:14.220
We'll talk about this later,
but this is what gives you

00:09:14.220 --> 00:09:17.050
access to app activities.

00:09:17.050 --> 00:09:18.570
You put your client ID in.

00:09:18.570 --> 00:09:20.810
Now, I said client ID.

00:09:20.810 --> 00:09:22.780
It's important you put
your client ID,

00:09:22.780 --> 00:09:25.290
not your client secret.

00:09:25.290 --> 00:09:28.070
Obviously, nobody here
would ever do that.

00:09:28.070 --> 00:09:30.330
And a call back, which we'll
talk about later.

00:09:30.330 --> 00:09:31.930
You can put in a theme.

00:09:31.930 --> 00:09:33.470
And you can do some interesting
stuff with cookie

00:09:33.470 --> 00:09:35.990
policy, which affects
how we cache the

00:09:35.990 --> 00:09:37.240
JavaScript that's loaded.

00:09:39.730 --> 00:09:42.440
In your callback, after the user
clicks the button, goes

00:09:42.440 --> 00:09:44.090
through our consent flow--

00:09:44.090 --> 00:09:46.910
I assume-- has everybody here
signed in to Google+ at least

00:09:46.910 --> 00:09:49.240
once somewhere?

00:09:49.240 --> 00:09:50.180
OK, good.

00:09:50.180 --> 00:09:53.650
So after the Sign-In flow, your
JavaScript is going to

00:09:53.650 --> 00:09:54.760
get called.

00:09:54.760 --> 00:09:58.800
And then in that, you say, OK,
the user just signed in.

00:09:58.800 --> 00:10:00.870
I have an access token
for that user.

00:10:00.870 --> 00:10:04.670
I can make calls to Google's
APIs on behalf of that user.

00:10:04.670 --> 00:10:07.840
Now, this is the point where you
show the user some value.

00:10:07.840 --> 00:10:09.820
So this is a basic safe thing.

00:10:09.820 --> 00:10:12.530
You should reflect the user's
identity back at them.

00:10:12.530 --> 00:10:14.260
So who did I just sign in as?

00:10:14.260 --> 00:10:15.020
Show me the photo.

00:10:15.020 --> 00:10:16.110
Show me the name.

00:10:16.110 --> 00:10:18.280
If I've got multiple log-in,
if I'm signing in multiple

00:10:18.280 --> 00:10:21.190
accounts, this is the step where
you confirm that I've

00:10:21.190 --> 00:10:24.800
actually signed in with my
proper account and not my

00:10:24.800 --> 00:10:26.760
corporate account or somebody
else's account

00:10:26.760 --> 00:10:28.010
who's using my machine.

00:10:30.900 --> 00:10:33.590
In one of our quickstarts, in
this case the JavaScript quick

00:10:33.590 --> 00:10:38.160
start, we show you how you can
do Sign-In in PhotoHunt.

00:10:38.160 --> 00:10:40.310
That's how we reflect a user's
identity back at them.

00:10:40.310 --> 00:10:43.090
We show the name, and
we show the photo.

00:10:43.090 --> 00:10:45.710
Because these are my profiles,
I know that photo means it's

00:10:45.710 --> 00:10:47.160
my demo account.

00:10:47.160 --> 00:10:49.710
So I know, OK, that's fine.

00:10:49.710 --> 00:10:52.010
And we also offer disconnect.

00:10:52.010 --> 00:10:55.070
One of the things that's really
important with Sign-In

00:10:55.070 --> 00:10:58.570
is the user can sign in and sign
out of your service, but

00:10:58.570 --> 00:11:00.870
it can also connect and
disconnect to your service

00:11:00.870 --> 00:11:01.890
from Google.

00:11:01.890 --> 00:11:03.860
And it's important you offer
the user the ability to

00:11:03.860 --> 00:11:07.070
disconnect your service
from Google.

00:11:07.070 --> 00:11:09.880
And when they do that, it's
important you delete the data

00:11:09.880 --> 00:11:12.380
they've given you through
the Google+ API.

00:11:12.380 --> 00:11:13.920
You can keep things like
the profile ID

00:11:13.920 --> 00:11:15.210
and the email address.

00:11:15.210 --> 00:11:17.070
But for everything else, the
user says they don't want to

00:11:17.070 --> 00:11:18.720
have anything to do with
you anymore, you have

00:11:18.720 --> 00:11:19.990
to give up the data.

00:11:23.300 --> 00:11:25.820
So disconnect is very easy.

00:11:25.820 --> 00:11:29.410
You simply call the revoke
endpoint, passing in the OAuth

00:11:29.410 --> 00:11:32.400
token you had in your
JavaScript.

00:11:32.400 --> 00:11:34.160
And then you do whatever's
necessary to make sure the

00:11:34.160 --> 00:11:38.210
user's data is no longer
being stored by you.

00:11:38.210 --> 00:11:41.080
So client side is largely a
matter of cutting and pasting

00:11:41.080 --> 00:11:43.310
code from our documentation.

00:11:43.310 --> 00:11:46.070
And then you have a JavaScript
client that has an access

00:11:46.070 --> 00:11:49.540
token and can make calls to a
wide range of Google APIs on

00:11:49.540 --> 00:11:51.240
behalf of the current user.

00:11:51.240 --> 00:11:55.361
Now, this access token is going
to expire in 60 minutes.

00:11:55.361 --> 00:11:57.800
But you've decided to do
this for a reason.

00:11:57.800 --> 00:12:00.450
If you want a longer engagement
with the user, if

00:12:00.450 --> 00:12:03.400
you want perhaps to save the
tokens so they can do more

00:12:03.400 --> 00:12:05.930
things in the future,
you make a couple of

00:12:05.930 --> 00:12:07.660
relatively small changes.

00:12:07.660 --> 00:12:09.870
You use what we've called at
various times the set aside

00:12:09.870 --> 00:12:13.690
flow, the hybrid flow, and
the one-time-code flow.

00:12:13.690 --> 00:12:17.520
Basically, what this does is
the user signs in with the

00:12:17.520 --> 00:12:18.952
client-side button.

00:12:18.952 --> 00:12:21.430
Get Access token is going to
be used by the client side.

00:12:21.430 --> 00:12:24.530
We don't want you passing
access tokens

00:12:24.530 --> 00:12:25.970
over insecure channels.

00:12:25.970 --> 00:12:29.440
If you've looked at the OAuth
specs, you'll know that the

00:12:29.440 --> 00:12:31.000
tokens you have are
bearer tokens.

00:12:31.000 --> 00:12:33.900
Anybody who has that token
can act as you.

00:12:33.900 --> 00:12:39.370
So what we recommend instead
is you get a code from us.

00:12:39.370 --> 00:12:40.500
So you have a transient code.

00:12:40.500 --> 00:12:43.165
You pass that to your server.

00:12:43.165 --> 00:12:45.170
The interesting thing about the
code is it's only going to

00:12:45.170 --> 00:12:48.440
work for anybody who has your
client secret, which means

00:12:48.440 --> 00:12:49.870
they're you, basically.

00:12:49.870 --> 00:12:53.570
So your server then has a code,
calls Google over a

00:12:53.570 --> 00:12:54.600
secure channel.

00:12:54.600 --> 00:12:56.670
We can ensure it's a secure
channel because we

00:12:56.670 --> 00:12:58.800
own one end of it.

00:12:58.800 --> 00:13:01.200
And then after this, we say,
yes, we know it's you.

00:13:01.200 --> 00:13:02.360
We've verified it's you.

00:13:02.360 --> 00:13:04.820
Here's an Access token
and Refresh token,

00:13:04.820 --> 00:13:05.930
which you then store.

00:13:05.930 --> 00:13:09.150
And now you can make offline
calls on behalf of the user.

00:13:09.150 --> 00:13:12.550
So switching to this mode,
because it's pretty much of

00:13:12.550 --> 00:13:15.810
adding these two lines
to your button.

00:13:15.810 --> 00:13:18.155
So again, we've tried to go with
something that's very,

00:13:18.155 --> 00:13:18.880
very simple.

00:13:18.880 --> 00:13:20.760
You obviously have to do some
checks of things like

00:13:20.760 --> 00:13:22.260
cross-site request forgery.

00:13:22.260 --> 00:13:23.790
But it's still relatively
easy.

00:13:28.040 --> 00:13:30.760
So the user's signed
up to your service.

00:13:30.760 --> 00:13:32.710
They've connected your
service to Google.

00:13:32.710 --> 00:13:34.025
How do you connect--

00:13:34.025 --> 00:13:36.650
how do you customize
this service?

00:13:36.650 --> 00:13:38.710
Well, you think about
what's going on.

00:13:38.710 --> 00:13:39.560
The user's turned up.

00:13:39.560 --> 00:13:41.030
They've brought their profile.

00:13:41.030 --> 00:13:43.870
This is my profile,
my demo one.

00:13:43.870 --> 00:13:47.790
My demo one isn't especially
popular.

00:13:47.790 --> 00:13:49.470
You can do a bunch of
things now with the

00:13:49.470 --> 00:13:50.330
access you've got.

00:13:50.330 --> 00:13:53.870
So even if all you've asked for
is access to their Google+

00:13:53.870 --> 00:13:55.860
account, you still have
access to things

00:13:55.860 --> 00:13:57.720
like the user's profile.

00:13:57.720 --> 00:13:59.810
So you can look at
that and extract,

00:13:59.810 --> 00:14:01.230
perhaps, their interests.

00:14:01.230 --> 00:14:06.020
So this almost unreadable screen
shot is what it looks

00:14:06.020 --> 00:14:10.210
like when my demo account or
any public user looks at my

00:14:10.210 --> 00:14:12.190
actual profile.

00:14:12.190 --> 00:14:14.950
There's a lot of data there
about my interests, places

00:14:14.950 --> 00:14:17.700
I've worked, sites I
have accounts to

00:14:17.700 --> 00:14:19.480
that I've linked to.

00:14:19.480 --> 00:14:21.620
So what you can do is you can
look at this, and you can do

00:14:21.620 --> 00:14:25.230
very simple things like term
extraction, entity detection,

00:14:25.230 --> 00:14:28.210
and go, I now know what
this user cares about.

00:14:28.210 --> 00:14:29.790
And this is all public data.

00:14:29.790 --> 00:14:32.830
So this is data the user felt
comfortable sharing with you

00:14:32.830 --> 00:14:35.170
or with anybody else.

00:14:35.170 --> 00:14:36.370
You can do other things.

00:14:36.370 --> 00:14:40.090
For example, you could look at
the social graph of the people

00:14:40.090 --> 00:14:41.870
on your site.

00:14:41.870 --> 00:14:44.330
And when the user signed in,
they gave you access to a

00:14:44.330 --> 00:14:47.600
subset of their social graph,
and you can map them.

00:14:47.600 --> 00:14:49.890
And you can tell the user,
here are several of your

00:14:49.890 --> 00:14:52.170
friends who are already
on the site.

00:14:52.170 --> 00:14:54.760
So if you try a service like
SoundCloud, for instance,

00:14:54.760 --> 00:14:55.700
that's what they do.

00:14:55.700 --> 00:14:58.300
There are people you already
know who are here.

00:14:58.300 --> 00:15:01.840
Again, this is all public data,
or you've chosen to give

00:15:01.840 --> 00:15:03.830
them that subset of
your social graph

00:15:03.830 --> 00:15:05.660
so they can do this.

00:15:05.660 --> 00:15:08.390
The other thing that's really
important is that when the

00:15:08.390 --> 00:15:11.770
user signs in, that initial
out of the box experience

00:15:11.770 --> 00:15:13.530
should be magical.

00:15:13.530 --> 00:15:16.000
It should show them that it
was worth signing in.

00:15:16.000 --> 00:15:18.672
If I sign in and nothing
changes,

00:15:18.672 --> 00:15:19.922
well, why did I bother?

00:15:23.920 --> 00:15:27.350
The other thing that's really
important is that when people

00:15:27.350 --> 00:15:29.480
get to your site, and they think
it's cool, they think

00:15:29.480 --> 00:15:31.740
it's good, they want to
tell other people.

00:15:31.740 --> 00:15:33.690
Historically, the way that
happened was they

00:15:33.690 --> 00:15:35.360
would share a link.

00:15:35.360 --> 00:15:38.410
So this is NPR, that
their fancy.

00:15:38.410 --> 00:15:39.120
And they would share a link.

00:15:39.120 --> 00:15:40.430
And implicitly, they'd
be saying to

00:15:40.430 --> 00:15:41.450
people, here's a link.

00:15:41.450 --> 00:15:42.970
It's cool.

00:15:42.970 --> 00:15:44.000
That's it.

00:15:44.000 --> 00:15:45.320
There was no call to action.

00:15:45.320 --> 00:15:47.540
There was no thing that
says, this is why

00:15:47.540 --> 00:15:49.750
this is worth reading.

00:15:49.750 --> 00:15:54.270
So what you see here
is me saying I

00:15:54.270 --> 00:15:55.370
really like this novel.

00:15:55.370 --> 00:15:56.990
I really like this umbrella.

00:15:56.990 --> 00:16:00.610
Doesn't say what you should do
when you read this. post.

00:16:00.610 --> 00:16:03.050
So we have a feature we call
interactive posts.

00:16:03.050 --> 00:16:05.970
And basically, what that
does is it adds a

00:16:05.970 --> 00:16:08.130
call to action button.

00:16:08.130 --> 00:16:11.540
So if I'm sharing this article,
I'm saying you should

00:16:11.540 --> 00:16:12.110
click on it.

00:16:12.110 --> 00:16:15.210
And when you land on their site,
you'd better listen to

00:16:15.210 --> 00:16:19.150
the interview they did about
Salman Rushdie's book.

00:16:19.150 --> 00:16:22.860
If you click on that, you
can buy the umbrella.

00:16:22.860 --> 00:16:24.140
I strongly recommend
the umbrella.

00:16:24.140 --> 00:16:25.930
It's kind of amazing.

00:16:25.930 --> 00:16:28.580
The point about interactive
posts is that because they

00:16:28.580 --> 00:16:31.520
have this very distinctive call
to action, for you as the

00:16:31.520 --> 00:16:36.140
developer of the site, you have
a high clickthrough rate.

00:16:36.140 --> 00:16:39.740
The important thing here is that
you have the button and

00:16:39.740 --> 00:16:41.400
you have the link.

00:16:41.400 --> 00:16:45.670
So when we're looking at an
interactive post, you can

00:16:45.670 --> 00:16:48.160
pre-fill the text
in the comment.

00:16:48.160 --> 00:16:49.530
So you can put your message.

00:16:49.530 --> 00:16:51.650
Try not to make it something
the user will feel

00:16:51.650 --> 00:16:53.050
uncomfortable with, because
the user can

00:16:53.050 --> 00:16:54.470
just delete the comment.

00:16:54.470 --> 00:16:58.440
You can +mention people in the
user's social graph, or rather

00:16:58.440 --> 00:16:59.925
the subset of the user's
social graph

00:16:59.925 --> 00:17:01.340
they've given you.

00:17:01.340 --> 00:17:03.890
Again, if you abuse this,
they have control.

00:17:03.890 --> 00:17:07.060
They can always delete the
people you're +mentioning.

00:17:07.060 --> 00:17:09.910
But you can do some really nice,
clever things with this.

00:17:09.910 --> 00:17:17.200
For example, you could +mention
people they know who

00:17:17.200 --> 00:17:19.040
are very active in your site.

00:17:19.040 --> 00:17:22.079
Or if you wanted to boost
re-engagement, you could

00:17:22.079 --> 00:17:23.490
+mention people they know
who aren't very

00:17:23.490 --> 00:17:24.980
active in your site.

00:17:24.980 --> 00:17:26.720
Or if you're being especially
clever, you

00:17:26.720 --> 00:17:27.650
could have a post--

00:17:27.650 --> 00:17:31.700
in this case, about "Midnight's
Children," and

00:17:31.700 --> 00:17:33.440
because you've merged the social
graphs, you could do

00:17:33.440 --> 00:17:36.490
something like +mention a few
users who are very active that

00:17:36.490 --> 00:17:39.305
a user knows and has given you
consent to know about and a

00:17:39.305 --> 00:17:41.280
few users who aren't
very active.

00:17:41.280 --> 00:17:44.620
And now the user has a post with
a conversation going on

00:17:44.620 --> 00:17:47.160
with a mix of people who are
very engaged with your site

00:17:47.160 --> 00:17:49.360
and people who are not very
engaged, and that will get

00:17:49.360 --> 00:17:51.610
them to reengage.

00:17:51.610 --> 00:17:53.860
So you've got the comment box.

00:17:53.860 --> 00:17:55.760
You get the actual
content link.

00:17:55.760 --> 00:17:59.080
If they user clicks on that,
they get to your website.

00:17:59.080 --> 00:18:00.880
Then they have the button--

00:18:00.880 --> 00:18:01.900
the call to action button.

00:18:01.900 --> 00:18:03.370
They click on that.

00:18:03.370 --> 00:18:06.040
We strongly encourage you to
have that be a distinctive

00:18:06.040 --> 00:18:09.510
action so that when they click
on this button versus the

00:18:09.510 --> 00:18:11.660
link, something different
happens.

00:18:11.660 --> 00:18:14.620
So it might be I
click on this.

00:18:14.620 --> 00:18:17.790
When I land on the web page,
music plays, because I already

00:18:17.790 --> 00:18:19.660
said I want to listen
to the music or the

00:18:19.660 --> 00:18:21.110
sound of the recording.

00:18:21.110 --> 00:18:23.450
Or if I wanted to buy something,
I click on Buy.

00:18:23.450 --> 00:18:26.180
When I land in their site,
the Buy flow begins.

00:18:26.180 --> 00:18:28.210
The point is, you make it
distinctive, you make it

00:18:28.210 --> 00:18:30.150
meaningful, you make
it valuable.

00:18:30.150 --> 00:18:32.590
And because this is all based
on the same sharing

00:18:32.590 --> 00:18:36.310
functionality we've always had,
it pulls in a snippet for

00:18:36.310 --> 00:18:38.690
things like the title
and the image.

00:18:38.690 --> 00:18:43.790
And of course, the user always
controls the audience, because

00:18:43.790 --> 00:18:48.060
not everybody I know would find
Salman Rushdie's very,

00:18:48.060 --> 00:18:49.470
very long book interesting.

00:18:49.470 --> 00:18:53.100
And this way, I get to share
this with the right people.

00:18:53.100 --> 00:18:57.960
And for you as a publisher,
having a user actively say,

00:18:57.960 --> 00:19:01.140
this is something I wish you
people to listen to, I wish

00:19:01.140 --> 00:19:04.560
you people to buy, is a much
more powerful endorsement than

00:19:04.560 --> 00:19:06.990
you just writing it
for yourself.

00:19:06.990 --> 00:19:09.520
So this kind of active sharing
tends to be seen as more

00:19:09.520 --> 00:19:13.710
valuable by the users' friends
and people in their circles.

00:19:13.710 --> 00:19:17.010
So implementing this
is very easy.

00:19:17.010 --> 00:19:19.950
Like everything, you've got
to go to API Project.

00:19:19.950 --> 00:19:21.170
You give a client ID.

00:19:21.170 --> 00:19:24.040
You load our JavaScript, just
like with a button.

00:19:24.040 --> 00:19:27.800
You choose a label out
of the 100 options.

00:19:27.800 --> 00:19:29.900
You then design and
add your button.

00:19:29.900 --> 00:19:33.220
The important thing is the
button you put on your site

00:19:33.220 --> 00:19:35.640
can be different to the button
that's in the stream.

00:19:35.640 --> 00:19:38.040
The button that should be on
your site should make sense

00:19:38.040 --> 00:19:40.380
within the context of your site,
because you're trying to

00:19:40.380 --> 00:19:42.970
get the user to click on that
button to begin the

00:19:42.970 --> 00:19:45.150
interactive posting process.

00:19:45.150 --> 00:19:46.950
And then the users in
the stream will

00:19:46.950 --> 00:19:48.200
see a different button.

00:19:50.730 --> 00:19:53.280
As you can see, it looks just
like the Sign-In button.

00:19:53.280 --> 00:19:56.340
In fact, it inherits a lot of
functionality from the Sign-In

00:19:56.340 --> 00:20:03.420
button, including things like
the class field that it's off.

00:20:03.420 --> 00:20:06.590
So specify content URL.

00:20:06.590 --> 00:20:08.740
This is where the user clicks
and goes through.

00:20:08.740 --> 00:20:10.220
You get a deep link ID.

00:20:10.220 --> 00:20:11.820
So does everybody know
about deep links?

00:20:14.410 --> 00:20:17.110
Does anybody not know
about deep links?

00:20:17.110 --> 00:20:21.080
OK, so the idea with a deep
link is that when somebody

00:20:21.080 --> 00:20:24.150
clicks on the link, they get
to your website, and they

00:20:24.150 --> 00:20:26.040
arrive at a particular page.

00:20:26.040 --> 00:20:28.330
But wouldn't it be nice if they
could click on a link

00:20:28.330 --> 00:20:30.660
that would take them to a
particular context within your

00:20:30.660 --> 00:20:33.980
website or within your
application, so if it was a

00:20:33.980 --> 00:20:35.560
mobile app?

00:20:35.560 --> 00:20:38.290
So what this means is I can be
looking at a specific context

00:20:38.290 --> 00:20:41.410
within a mobile app, share that
to the stream, and when

00:20:41.410 --> 00:20:43.730
other people I know click
on that, we can

00:20:43.730 --> 00:20:45.990
say, oh, this happened.

00:20:45.990 --> 00:20:47.550
Maybe take it to the Play Store,
maybe take it to the

00:20:47.550 --> 00:20:50.080
App Store, install the app, and
then launch the app, and

00:20:50.080 --> 00:20:52.860
then send the app
that context ID.

00:20:52.860 --> 00:20:56.390
And the app can say, oh, this
is happening, and then take

00:20:56.390 --> 00:20:59.090
the new user to the same context
your original user was

00:20:59.090 --> 00:21:00.340
looking at.

00:21:02.530 --> 00:21:04.100
So we have the content URL.

00:21:04.100 --> 00:21:06.320
It has its own deep link ID.

00:21:06.320 --> 00:21:08.660
They don't have to match,
because it's up to your app to

00:21:08.660 --> 00:21:10.720
interpret the deep link ID.

00:21:10.720 --> 00:21:12.330
So it's a 512 character
identifier that's

00:21:12.330 --> 00:21:15.220
up to you to control.

00:21:15.220 --> 00:21:16.870
Client ID, cookie policy.

00:21:16.870 --> 00:21:19.070
You can pre-fill the text.

00:21:19.070 --> 00:21:21.220
Again, you want to make this
something the user's

00:21:21.220 --> 00:21:23.130
comfortable keeping,
because otherwise,

00:21:23.130 --> 00:21:25.420
they'll just delete it.

00:21:25.420 --> 00:21:27.780
Pick your call to
action label.

00:21:27.780 --> 00:21:30.570
You put the URL, it's going
to be behind the button.

00:21:30.570 --> 00:21:33.030
And again, if you want
a deep link for that.

00:21:33.030 --> 00:21:37.730
So this is effective because
it's a means for the user to

00:21:37.730 --> 00:21:41.780
do active sharing to the
specific people they feel will

00:21:41.780 --> 00:21:43.360
care about that.

00:21:43.360 --> 00:21:46.050
And of course, if you want to
+mention people, there's a

00:21:46.050 --> 00:21:50.550
data-recipients field
you can add as well.

00:21:50.550 --> 00:21:53.580
Now, one of the interesting
things when you start out with

00:21:53.580 --> 00:21:56.970
a small app, as I did seven
days ago with my demo

00:21:56.970 --> 00:22:00.710
PhotoHunt is that initially,
there's nobody there.

00:22:00.710 --> 00:22:02.350
There's just you.

00:22:02.350 --> 00:22:07.560
And people say, hey, is Ade's
PhotoHunt a ghost town?

00:22:07.560 --> 00:22:10.330
And you know, initially
a bit, it was.

00:22:10.330 --> 00:22:12.490
And so what happened
was people turn up.

00:22:12.490 --> 00:22:14.490
They'd hit the microphone and
say, is this thing on?

00:22:14.490 --> 00:22:17.680
Is anybody here?

00:22:17.680 --> 00:22:20.120
So how do you tell people?

00:22:20.120 --> 00:22:21.820
How do you surface the
fact that there's

00:22:21.820 --> 00:22:23.400
activity in your site?

00:22:23.400 --> 00:22:24.860
How do you show the
world there's

00:22:24.860 --> 00:22:26.690
something going on here?

00:22:26.690 --> 00:22:30.042
So what we've designed to help
you, something we call app

00:22:30.042 --> 00:22:30.980
activities.

00:22:30.980 --> 00:22:33.310
The idea is that when something
significant happens

00:22:33.310 --> 00:22:37.110
within your app for a signed-in
user, and you decide

00:22:37.110 --> 00:22:40.170
what significant is, you write
what we call an app activity,

00:22:40.170 --> 00:22:42.790
or a moment, to Google.

00:22:42.790 --> 00:22:45.390
So you write this thing that
says, something interesting

00:22:45.390 --> 00:22:49.680
happened on this URL,
and we store that.

00:22:49.680 --> 00:22:53.620
And in the future, we'll find
interesting and relevant

00:22:53.620 --> 00:22:57.860
places to surface that social
context to people the user

00:22:57.860 --> 00:22:59.590
feels should have access.

00:22:59.590 --> 00:23:02.160
I think this is the
important point.

00:23:02.160 --> 00:23:05.690
When the user signed in, they
specified, you know what?

00:23:05.690 --> 00:23:07.010
I'm on SoundCloud.

00:23:07.010 --> 00:23:08.550
These are my music friends.

00:23:08.550 --> 00:23:10.900
I'm OK for my musical friends
to know what I do on

00:23:10.900 --> 00:23:12.600
SoundCloud.

00:23:12.600 --> 00:23:14.530
And everybody else will
find it irrelevant.

00:23:14.530 --> 00:23:17.250
That's OK.

00:23:17.250 --> 00:23:22.410
So when these app activities get
written to Google, you can

00:23:22.410 --> 00:23:24.560
see who has access to them.

00:23:24.560 --> 00:23:26.640
You can see when they
were written.

00:23:26.640 --> 00:23:28.350
You can see the snippet
that came with them.

00:23:28.350 --> 00:23:30.600
You can see the service
that wrote them.

00:23:30.600 --> 00:23:33.920
And of course, you can
always delete these.

00:23:33.920 --> 00:23:35.690
So what is an app activity,
really?

00:23:35.690 --> 00:23:39.650
Well, first thing is you have to
have an app activity type.

00:23:39.650 --> 00:23:41.000
And we have 10 of them.

00:23:41.000 --> 00:23:43.990
Now, I could read the list of
10 to you, but I won't.

00:23:43.990 --> 00:23:46.580
But the point is, we have a
variety of different kinds of

00:23:46.580 --> 00:23:50.500
raw activities, some of which
are very abstract, like Add or

00:23:50.500 --> 00:23:53.550
Create, and some of which
are very specific,

00:23:53.550 --> 00:23:56.720
like Listen or Review.

00:23:56.720 --> 00:24:00.160
So this is saying, these are
something which they added

00:24:00.160 --> 00:24:02.130
something to a collection, or
they created something, or

00:24:02.130 --> 00:24:04.260
they reviewed something, or they
commented on something,

00:24:04.260 --> 00:24:07.020
or they checked in
on something.

00:24:07.020 --> 00:24:11.040
It's up to you, of course, to
decide what that something is.

00:24:11.040 --> 00:24:14.460
So the something is the target
of the activity.

00:24:14.460 --> 00:24:16.740
So this could be a URL.

00:24:16.740 --> 00:24:20.460
And then on that URL, we'll look
in the page for microdata

00:24:20.460 --> 00:24:24.260
describing the item type, where
they item type comes

00:24:24.260 --> 00:24:27.080
from the schema.org ontology.

00:24:27.080 --> 00:24:29.590
Or you can say the item
type, the name, the

00:24:29.590 --> 00:24:31.060
description, the image.

00:24:31.060 --> 00:24:33.300
If this sounds familiar, it's
because it's exactly what we

00:24:33.300 --> 00:24:36.860
do with snippets in Search and
with snippets in the stream.

00:24:36.860 --> 00:24:39.830
So it's exactly the same
technology we're using there,

00:24:39.830 --> 00:24:42.040
with a couple of small
tweaks, though.

00:24:44.740 --> 00:24:46.685
If you're designing this,
you've chosen your app

00:24:46.685 --> 00:24:47.265
activity type.

00:24:47.265 --> 00:24:49.260
You've gone through schema.org,
and you've said,

00:24:49.260 --> 00:24:52.330
actually, my site has music
recordings, or my site has

00:24:52.330 --> 00:24:57.840
music playlists, or my site has
creative works, or my site

00:24:57.840 --> 00:25:03.320
has hospitals or whatever is
meaningful on your site.

00:25:03.320 --> 00:25:06.010
And you've said this app
activity happened there.

00:25:06.010 --> 00:25:08.130
It's important that the activity
you write are going

00:25:08.130 --> 00:25:11.640
to be meaningful to the user,
because if and when we choose

00:25:11.640 --> 00:25:14.167
to surface them, it'll be
something like, somebody you

00:25:14.167 --> 00:25:16.950
know performed this activity
at this entity.

00:25:16.950 --> 00:25:19.585
Or 50 people you
know did this.

00:25:19.585 --> 00:25:23.300
Or 50,000 people listened to
this sound on SoundCloud.

00:25:23.300 --> 00:25:25.280
So it's important you pick an
entity type that will be

00:25:25.280 --> 00:25:28.520
meaningful to the user when they
see that social context

00:25:28.520 --> 00:25:32.410
surface somewhere on Google, for
example, with our recent

00:25:32.410 --> 00:25:33.660
search integration.

00:25:36.570 --> 00:25:39.570
So when we think about app
activities, otherwise known as

00:25:39.570 --> 00:25:42.970
moments, it's important to
understand that we have the

00:25:42.970 --> 00:25:46.600
basic type, where you have an
activity or the target--

00:25:46.600 --> 00:25:49.170
there's a URL of a page
somewhere out there.

00:25:49.170 --> 00:25:52.800
And our user agent, or what we
call a snippet fetcher, will

00:25:52.800 --> 00:25:55.660
make a request for that and
then look at the markup.

00:25:55.660 --> 00:25:57.920
It's important to understand
that a snippet fetcher we use

00:25:57.920 --> 00:26:02.760
for this and for snippets in the
stream is not Googlebot,

00:26:02.760 --> 00:26:05.300
which means it has a documented
user agent.

00:26:05.300 --> 00:26:07.930
And we're quite happy for you to
detect that user agent and

00:26:07.930 --> 00:26:11.300
serve it just the microdata
it needs.

00:26:11.300 --> 00:26:12.600
It makes debugging easier.

00:26:12.600 --> 00:26:15.690
It makes a lot of stuff
much simpler.

00:26:15.690 --> 00:26:17.790
But there are lots of
applications that

00:26:17.790 --> 00:26:18.870
just don't have URLs.

00:26:18.870 --> 00:26:21.600
Or they have a very
limited website.

00:26:21.600 --> 00:26:24.490
Or they just have a website that
was never designed to be

00:26:24.490 --> 00:26:26.170
parsed by a machine.

00:26:26.170 --> 00:26:28.860
So we also have what we call
URL-less moments, where you

00:26:28.860 --> 00:26:32.640
basically extract out the
item type, the name, the

00:26:32.640 --> 00:26:35.660
description, the image, and you
put that in a JSON object,

00:26:35.660 --> 00:26:36.920
and you write that to Google.

00:26:39.470 --> 00:26:43.240
Of course, we also have an
optional start date field.

00:26:43.240 --> 00:26:45.730
And again, what this does, it
lets you decide if you want to

00:26:45.730 --> 00:26:49.330
write moments that are in the
past or perhaps in the future.

00:26:49.330 --> 00:26:52.280
So for example, if I use a
site that lets me book

00:26:52.280 --> 00:26:54.820
holidays, and it wants to write
that app package as

00:26:54.820 --> 00:26:58.130
Google, well, the start
date isn't really the

00:26:58.130 --> 00:26:59.050
data I booked it.

00:26:59.050 --> 00:27:00.140
It might be the date
in the future

00:27:00.140 --> 00:27:01.880
when I take the holiday.

00:27:01.880 --> 00:27:05.800
Or if I'm using a social
location service that wants to

00:27:05.800 --> 00:27:08.650
write my historical check-ins,
it would like all the

00:27:08.650 --> 00:27:10.560
check-ins to have the
appropriate dates in

00:27:10.560 --> 00:27:13.780
the past, not now.

00:27:13.780 --> 00:27:17.720
So you can choose whether your
activities take place in the

00:27:17.720 --> 00:27:18.680
past moment.

00:27:18.680 --> 00:27:22.340
But by default, they are now.

00:27:22.340 --> 00:27:25.380
So implementing this,
again, is very easy.

00:27:25.380 --> 00:27:28.840
You've got your API project,
your client ID for this, your

00:27:28.840 --> 00:27:31.590
Sign-in button, because if we
don't know who the user is,

00:27:31.590 --> 00:27:34.680
then who did the app activity?

00:27:34.680 --> 00:27:38.040
And you have to ask something we
call requestvisibleactions.

00:27:38.040 --> 00:27:42.370
It basically is a scope that
says, I would like to write

00:27:42.370 --> 00:27:44.500
these activities to Google.

00:27:44.500 --> 00:27:47.590
That way, the user may say,
actually, I don't want people

00:27:47.590 --> 00:27:50.200
finding out what I was listening
to on this site,

00:27:50.200 --> 00:27:52.730
because it's embarrassing, or
because it's just not cool,

00:27:52.730 --> 00:27:55.720
and people think I'm cool.

00:27:55.720 --> 00:27:57.640
It's important that the moments
you're inserting are

00:27:57.640 --> 00:27:59.410
meaningful.

00:27:59.410 --> 00:28:01.140
So here's some examples.

00:28:01.140 --> 00:28:04.050
So this is a really simple one
that's actually on our site.

00:28:04.050 --> 00:28:06.780
So we maintain a URL
with an example of

00:28:06.780 --> 00:28:08.330
a review of a widget.

00:28:08.330 --> 00:28:09.990
And you can write and
add activity.

00:28:09.990 --> 00:28:12.350
As you can see, it's a type,
a target, a URL.

00:28:12.350 --> 00:28:14.230
It's very simple.

00:28:14.230 --> 00:28:17.960
And then you just basically
write that as JSON to Google.

00:28:21.850 --> 00:28:25.470
And of course, we also support
URL-less versions of this,

00:28:25.470 --> 00:28:27.700
where all of the information
you would ordinarily have

00:28:27.700 --> 00:28:32.240
specified is put into that
object and sent to us.

00:28:32.240 --> 00:28:35.480
The important thing to also
notice here is there's an ID.

00:28:35.480 --> 00:28:39.200
It's up to you to specify the
ID, because for us, it's an

00:28:39.200 --> 00:28:41.390
infinitely long string
of-- set of blogs.

00:28:41.390 --> 00:28:42.750
We don't know what they are.

00:28:42.750 --> 00:28:46.030
How do we distinguish
them each other?

00:28:46.030 --> 00:28:48.290
Well, it's up to you, because
you understand your data

00:28:48.290 --> 00:28:49.300
better than we do.

00:28:49.300 --> 00:28:52.210
So you specify an identifier
for it.

00:28:52.210 --> 00:28:57.470
And here's both examples
in Java.

00:28:57.470 --> 00:28:59.500
One of the reasons I like this
is that it's one of the few

00:28:59.500 --> 00:29:02.310
places in the world where the
Java example is more concise

00:29:02.310 --> 00:29:03.560
than in JavaScript.

00:29:05.700 --> 00:29:09.250
So again, it's the standard
type, where you just specify,

00:29:09.250 --> 00:29:10.890
here's the URL.

00:29:10.890 --> 00:29:12.560
Here's the version where we
actually put all of the

00:29:12.560 --> 00:29:13.810
information in there.

00:29:17.920 --> 00:29:20.330
OK, you've got Sign-In.

00:29:20.330 --> 00:29:23.070
You've got active sharing, where
the user is choosing to

00:29:23.070 --> 00:29:26.450
do something to tell a specified
set of people.

00:29:26.450 --> 00:29:28.770
You have app activities, which
give you sort of a passive

00:29:28.770 --> 00:29:31.050
sharing, where as the user
does things that are

00:29:31.050 --> 00:29:34.450
meaningful, you choose to
write those to Google.

00:29:34.450 --> 00:29:37.920
And then Google chooses to
surface those to users when we

00:29:37.920 --> 00:29:40.800
think it's relevant and
appropriate, rather than

00:29:40.800 --> 00:29:43.690
becoming spammy.

00:29:43.690 --> 00:29:45.400
So does all of this work?

00:29:45.400 --> 00:29:47.000
How do you know?

00:29:47.000 --> 00:29:48.970
Well, at Google, we think it's
really important that you act

00:29:48.970 --> 00:29:52.590
on data rather than anecdotes.

00:29:52.590 --> 00:29:55.970
So it's important that you
understand the impact of the

00:29:55.970 --> 00:29:57.560
design changes you make.

00:29:57.560 --> 00:30:00.750
It's important you have insight
into the integrations

00:30:00.750 --> 00:30:02.270
you've done with Google.

00:30:02.270 --> 00:30:04.840
So we have a feature we call
Platform Insights.

00:30:04.840 --> 00:30:06.900
And it's a very simple idea.

00:30:06.900 --> 00:30:09.840
We have all of this activity
going on on your site, which

00:30:09.840 --> 00:30:14.110
because you have connected your
service to Google means

00:30:14.110 --> 00:30:17.000
we can tell which users are
doing that, how many of them

00:30:17.000 --> 00:30:18.900
are doing that, when
they're doing that.

00:30:18.900 --> 00:30:23.830
So we surface that in a tab
on your Google+ page.

00:30:23.830 --> 00:30:26.490
And that basically will
show you things like--

00:30:26.490 --> 00:30:28.750
my demo app has been massively
successful.

00:30:28.750 --> 00:30:33.110
I've had 90 users since
the 11th of May.

00:30:33.110 --> 00:30:34.750
I think I'm about ready
to get some VC.

00:30:37.720 --> 00:30:40.110
So I can tell how many people
have signed in.

00:30:40.110 --> 00:30:43.130
But I can also do things like
see how many of them actually

00:30:43.130 --> 00:30:46.680
made interactive posts, as well
as how many of them did

00:30:46.680 --> 00:30:49.250
things that cause me to
write an app activity.

00:30:49.250 --> 00:30:51.600
And of course, with the
interactive posts, I can see

00:30:51.600 --> 00:30:55.120
what was the clickthrough
rate.

00:30:55.120 --> 00:30:56.980
So doing this is fairly easy.

00:30:56.980 --> 00:31:01.760
You create a Google+ page
for your service, which

00:31:01.760 --> 00:31:03.440
is just very easy.

00:31:03.440 --> 00:31:04.000
Here's mine.

00:31:04.000 --> 00:31:06.580
It's not terribly pretty,
but it works.

00:31:06.580 --> 00:31:09.230
You then go to your API Console,
and you put the

00:31:09.230 --> 00:31:12.030
identifier for your page
in the API Console.

00:31:12.030 --> 00:31:14.690
So in larger organizations, this
means the social media

00:31:14.690 --> 00:31:20.180
people who run your page and the
developers have to meet.

00:31:20.180 --> 00:31:22.410
You put that in, you hit Request
connection, and then

00:31:22.410 --> 00:31:25.610
on your Google+ page, you get
a section here that will

00:31:25.610 --> 00:31:29.700
basically say a project
requested a connection.

00:31:29.700 --> 00:31:32.200
The simplest and easiest way of
seeing this work in large

00:31:32.200 --> 00:31:34.350
companies is just to have the
social media people and the

00:31:34.350 --> 00:31:37.410
developers come into a room,
flip their laptops open,

00:31:37.410 --> 00:31:42.130
Request connection,
Yes, Accept, done.

00:31:42.130 --> 00:31:44.310
You could try and do
it through email.

00:31:44.310 --> 00:31:48.500
So now you can see that my
project number for my demo app

00:31:48.500 --> 00:31:51.190
is 53211, et cetera.

00:31:51.190 --> 00:31:54.110
And it's now connected to my
Google+ page, which means

00:31:54.110 --> 00:31:58.720
everybody who has management to
my Google+ page can see the

00:31:58.720 --> 00:32:02.180
data about the effectiveness of
the project, the web app.

00:32:07.300 --> 00:32:11.940
So create a page, connect the
page in the API project, and

00:32:11.940 --> 00:32:13.570
you've got Platform Insights.

00:32:13.570 --> 00:32:16.090
The other thing, and the really
important thing, is not

00:32:16.090 --> 00:32:18.630
just to say, oh, look how pretty
these pictures are.

00:32:18.630 --> 00:32:20.840
It's to act upon them.

00:32:20.840 --> 00:32:24.450
So if you look at this, for
example, you'll see that my

00:32:24.450 --> 00:32:27.750
app only really had activity
on two days.

00:32:27.750 --> 00:32:29.390
And that's in the two days
I posted and begged

00:32:29.390 --> 00:32:30.820
people to use it.

00:32:30.820 --> 00:32:33.240
So the action I would take from
this is, I should be able

00:32:33.240 --> 00:32:35.900
to use this on a daily basis.

00:32:35.900 --> 00:32:40.840
But the point is, you see this
data, you perform some action,

00:32:40.840 --> 00:32:44.370
and then you see if
the data changes.

00:32:44.370 --> 00:32:45.792
So you've got Sign-In,
you've got app

00:32:45.792 --> 00:32:47.270
activities, you've got sharing.

00:32:47.270 --> 00:32:50.330
How do you wrap all of
this up in a bow?

00:32:50.330 --> 00:32:53.180
If there's one vision that's
underlines everything we're

00:32:53.180 --> 00:32:56.020
doing at Google, it's this idea
that we can connect all

00:32:56.020 --> 00:32:58.850
of Google's services together.

00:32:58.850 --> 00:33:00.980
Because the user has multiple
Google services that they're

00:33:00.980 --> 00:33:02.810
using, you can connect them
together and do something

00:33:02.810 --> 00:33:04.100
interesting with that.

00:33:04.100 --> 00:33:06.250
So for example, this
is a French

00:33:06.250 --> 00:33:07.690
company called Jolicloud.

00:33:07.690 --> 00:33:10.680
And they had this rather nice
idea that when you sign in to

00:33:10.680 --> 00:33:13.840
their service, you can connect
your Google+, your Drive, your

00:33:13.840 --> 00:33:15.550
YouTube, your Picasa.

00:33:15.550 --> 00:33:19.230
But instead of deciding for you,
they ask the user, which

00:33:19.230 --> 00:33:20.500
one of these do you connect?

00:33:20.500 --> 00:33:22.480
The user clicks a bunch
of check boxes.

00:33:22.480 --> 00:33:25.710
They dynamically construct
the scope string.

00:33:25.710 --> 00:33:28.570
You click Sign in to Google,
and only the services you

00:33:28.570 --> 00:33:32.470
chose to be asked about
were requested.

00:33:32.470 --> 00:33:35.380
The beauty of this is that they
can use language that

00:33:35.380 --> 00:33:39.130
makes sense to their users and
then use that to control the

00:33:39.130 --> 00:33:42.870
scopes they request, rather than
making it a OAuth-level

00:33:42.870 --> 00:33:44.120
decision for the user.

00:33:46.670 --> 00:33:49.220
The point of all of this is
that with Sign-In, you can

00:33:49.220 --> 00:33:53.020
basically connect to the users,
use unique Google+

00:33:53.020 --> 00:33:56.520
social features, like the new
approach we have to hash tags,

00:33:56.520 --> 00:34:00.290
communities, pages, and then
create a unique and social

00:34:00.290 --> 00:34:04.570
experience that's valuable
for your users.

00:34:04.570 --> 00:34:06.025
Thank you.

00:34:06.025 --> 00:34:11.250
[APPLAUSE]

00:34:11.250 --> 00:34:15.730
ADE OSHINEYE: So I think we
have time for questions.

00:34:15.730 --> 00:34:18.449
Anybody have any questions?

00:34:18.449 --> 00:34:20.490
While we're waiting for Tantek
to get up, I should just point

00:34:20.490 --> 00:34:23.400
it out, you can go to
that short URL.

00:34:23.400 --> 00:34:25.604
And in about 20 minutes' time,
it'll have all the links that

00:34:25.604 --> 00:34:28.420
are relevant to this
presentation.

00:34:28.420 --> 00:34:29.960
We have a question.

00:34:29.960 --> 00:34:32.650
AUDIENCE: Hi, this is
Tantek from Mozilla.

00:34:32.650 --> 00:34:33.540
Quick question--

00:34:33.540 --> 00:34:35.399
and I was trying to pay
attention to the APIs, but

00:34:35.399 --> 00:34:38.060
maybe I just missed it, and
I checked it online.

00:34:38.060 --> 00:34:41.570
Do you get a permalink back
to the mentioned post

00:34:41.570 --> 00:34:44.344
on G+ on your site?

00:34:44.344 --> 00:34:48.340
ADE OSHINEYE: So if you make a
post, and the user chooses to

00:34:48.340 --> 00:34:50.800
share it through an interactive
post, you do not

00:34:50.800 --> 00:34:55.449
get a permalink, because the
user may choose to share that

00:34:55.449 --> 00:34:57.870
post to a set of people that
you don't have access to.

00:34:57.870 --> 00:34:58.940
AUDIENCE: OK.

00:34:58.940 --> 00:35:01.930
But if they do choose to
share it publicly--

00:35:01.930 --> 00:35:04.080
ADE OSHINEYE: If they choose to
share it publicly, you can,

00:35:04.080 --> 00:35:06.370
because you've connected to
their account, go through

00:35:06.370 --> 00:35:08.550
their stream-- the public
stream-- and find

00:35:08.550 --> 00:35:09.800
that post, as well.

00:35:09.800 --> 00:35:11.450
Or use Search.

00:35:11.450 --> 00:35:13.980
Basically, what we want to make
sure is that if the user

00:35:13.980 --> 00:35:16.760
says, I trust you with my Music
circle, and then I see

00:35:16.760 --> 00:35:18.960
something really funny, and I
share it with my Family circle

00:35:18.960 --> 00:35:21.250
because my brother recorded
a song, you don't

00:35:21.250 --> 00:35:22.140
have access to that.

00:35:22.140 --> 00:35:23.230
AUDIENCE: That totally
makes sense.

00:35:23.230 --> 00:35:25.030
I'm just thinking about the
public scenario, where they do

00:35:25.030 --> 00:35:26.650
say, hey, I want to actually
post this publicly.

00:35:26.650 --> 00:35:27.835
This is a great song,
or whatever.

00:35:27.835 --> 00:35:29.900
ADE OSHINEYE: So even with
public, we don't treat that

00:35:29.900 --> 00:35:30.290
differently.

00:35:30.290 --> 00:35:33.270
You could still go and fetch
that if you wanted to, but

00:35:33.270 --> 00:35:34.340
it's not something we do.

00:35:34.340 --> 00:35:35.480
AUDIENCE: So you have
to use some sort of

00:35:35.480 --> 00:35:37.820
heuristic to go find it?

00:35:37.820 --> 00:35:39.115
Like, you can't be sure?

00:35:39.115 --> 00:35:39.590
ADE OSHINEYE: Correct.

00:35:39.590 --> 00:35:41.150
But if you've got a use
case, please tell us.

00:35:41.150 --> 00:35:43.000
We'd be happy to look at it.

00:35:43.000 --> 00:35:44.370
AUDIENCE: OK.

00:35:44.370 --> 00:35:46.710
I guess the use case would be so
that the user comes back to

00:35:46.710 --> 00:35:48.640
your page, it's like, hey,
you shared this.

00:35:48.640 --> 00:35:50.480
Do you want to go look
at your post again?

00:35:50.480 --> 00:35:52.850
And you provide a link to it
rather asking them to share it

00:35:52.850 --> 00:35:54.210
again and again and
again every time

00:35:54.210 --> 00:35:54.880
they visit your page.

00:35:54.880 --> 00:35:56.020
ADE OSHINEYE: OK, that
sounds cool.

00:35:56.020 --> 00:35:56.715
AUDIENCE: So that's
the use case.

00:35:56.715 --> 00:35:57.320
ADE OSHINEYE: Yes.

00:35:57.320 --> 00:35:57.510
All right.

00:35:57.510 --> 00:35:58.760
We should talk about
that afterwards.

00:36:03.508 --> 00:36:05.010
AUDIENCE: Hi, I'm Meg.

00:36:05.010 --> 00:36:05.950
I'm with Fandango.

00:36:05.950 --> 00:36:07.480
We just did an integration
with Google+.

00:36:07.480 --> 00:36:08.030
ADE OSHINEYE: Cool.

00:36:08.030 --> 00:36:08.815
Thank you.

00:36:08.815 --> 00:36:12.280
AUDIENCE: We did one app
activity so far, which is when

00:36:12.280 --> 00:36:15.130
someone watches a video or
trailer, for example, we're

00:36:15.130 --> 00:36:16.200
writing that back to you.

00:36:16.200 --> 00:36:16.850
ADE OSHINEYE: I've used that.

00:36:16.850 --> 00:36:18.370
I watched the "Iron Man 3"
trailer on your site.

00:36:18.370 --> 00:36:20.090
AUDIENCE: Oh, good.

00:36:20.090 --> 00:36:23.330
So have I, multiple times now.

00:36:23.330 --> 00:36:24.650
What I was wondering
about for that app

00:36:24.650 --> 00:36:28.080
activity was we used Discover.

00:36:28.080 --> 00:36:30.160
Are you going to publish
something that might be more

00:36:30.160 --> 00:36:32.400
relevant, like Watch, in
terms of the verb?

00:36:32.400 --> 00:36:33.660
I'm just wondering about--

00:36:33.660 --> 00:36:35.970
ADE OSHINEYE: So right now,
we've got a limited set of 10

00:36:35.970 --> 00:36:37.485
activities that we support.

00:36:37.485 --> 00:36:40.380
If people come to us and say, we
have a compelling use case

00:36:40.380 --> 00:36:42.070
for this, we would definitely
be interested.

00:36:42.070 --> 00:36:45.510
And again, the Sandbox
is just downstairs.

00:36:45.510 --> 00:36:48.500
Everybody in the platform team
is here, so come on down.

00:36:48.500 --> 00:36:50.340
We'll get a whiteboard, and
we'll look at what we could

00:36:50.340 --> 00:36:51.472
with Discover.

00:36:51.472 --> 00:36:52.320
AUDIENCE: OK.

00:36:52.320 --> 00:36:53.570
Thanks.

00:36:55.600 --> 00:36:57.100
AUDIENCE: Hi.

00:36:57.100 --> 00:37:00.480
So you have a concept of
disconnect that basically cuts

00:37:00.480 --> 00:37:03.420
the application off from the
user's Google account.

00:37:03.420 --> 00:37:07.280
Is there also a concept of
logout, or is that just token

00:37:07.280 --> 00:37:07.780
expiration?

00:37:07.780 --> 00:37:09.110
ADE OSHINEYE: So currently,
right now,

00:37:09.110 --> 00:37:10.690
disconnect revokes the token.

00:37:10.690 --> 00:37:14.430
We don't really have a concept
of logout that's public.

00:37:14.430 --> 00:37:17.125
We have a new-ish feature
that's part of our

00:37:17.125 --> 00:37:20.070
cross-device auth that lets
you set a flag to say the

00:37:20.070 --> 00:37:20.990
user's logged out.

00:37:20.990 --> 00:37:23.030
But it's not an explicit
logout.

00:37:23.030 --> 00:37:24.690
But we're definitely
looking at that.

00:37:24.690 --> 00:37:25.500
AUDIENCE: Cool.

00:37:25.500 --> 00:37:27.482
Thanks.

00:37:27.482 --> 00:37:28.230
AUDIENCE: Hi.

00:37:28.230 --> 00:37:31.270
I have a question about these
activities, or moments.

00:37:31.270 --> 00:37:33.190
I mean, maybe you don't want to
talk about the competition.

00:37:33.190 --> 00:37:35.390
But certainly, I think you
have to compare it to the

00:37:35.390 --> 00:37:36.750
Facebook open graph actions.

00:37:36.750 --> 00:37:43.570
So in which ways can these
activities surface--

00:37:43.570 --> 00:37:45.240
you just said back there
surface on Google--

00:37:45.240 --> 00:37:47.950
which would be the places in
the stream and the search?

00:37:47.950 --> 00:37:50.910
ADE OSHINEYE: So right now, the
only way we surface these

00:37:50.910 --> 00:37:54.750
activities is if it's one of the
six launch partners of our

00:37:54.750 --> 00:37:56.700
Search integration, we
usually show the

00:37:56.700 --> 00:37:58.580
activity on that site.

00:37:58.580 --> 00:38:00.600
We show what the most
popular activity is.

00:38:00.600 --> 00:38:03.360
But as time goes on, you could
imagine all sorts of places

00:38:03.360 --> 00:38:05.780
across Google we could
surface that.

00:38:05.780 --> 00:38:08.480
But of course, I'm not allowed
to preannounce features.

00:38:08.480 --> 00:38:11.130
AUDIENCE: But basically,
it's like still the

00:38:11.130 --> 00:38:11.900
beginning of this.

00:38:11.900 --> 00:38:12.710
ADE OSHINEYE: Yes, exactly.

00:38:12.710 --> 00:38:13.096
AUDIENCE: OK.

00:38:13.096 --> 00:38:14.670
Thank you.

00:38:14.670 --> 00:38:18.820
AUDIENCE: So you focused a lot
on connecting G+ to your

00:38:18.820 --> 00:38:19.690
application.

00:38:19.690 --> 00:38:22.260
Do you have any hints or
warnings about using G+

00:38:22.260 --> 00:38:24.610
Sign-In as the primary sign-in
mechanism for your

00:38:24.610 --> 00:38:25.490
application?

00:38:25.490 --> 00:38:28.050
ADE OSHINEYE: So we'd be quite
happy for you to use G+

00:38:28.050 --> 00:38:29.700
Sign-In as a primary
mechanism.

00:38:29.700 --> 00:38:32.130
But what a lot of our partners
have done is they have a

00:38:32.130 --> 00:38:36.160
post-registration step where
they say, hey, can you give us

00:38:36.160 --> 00:38:36.790
your email address?

00:38:36.790 --> 00:38:39.800
Or they ask for access to the
user's email address so they

00:38:39.800 --> 00:38:42.110
can keep that so that if the
user disconnects, they can

00:38:42.110 --> 00:38:43.840
reconnect later on.

00:38:43.840 --> 00:38:47.410
There are other services, for
example, which after sign-in

00:38:47.410 --> 00:38:49.430
force the user to create a
username and password.

00:38:49.430 --> 00:38:52.430
We've had a lot of-- well, I've
had some emails to users

00:38:52.430 --> 00:38:53.450
saying, why are they
doing this?

00:38:53.450 --> 00:38:54.780
I've already signed in.

00:38:54.780 --> 00:38:57.560
And we've also, at the same
time, had developers say to

00:38:57.560 --> 00:39:00.670
us, I like doing that, because
it means if anything ever

00:39:00.670 --> 00:39:02.440
happens to a user's Google+
account, they

00:39:02.440 --> 00:39:04.140
can still sign in.

00:39:04.140 --> 00:39:07.650
We've also had people say, well,
the nice thing about

00:39:07.650 --> 00:39:10.910
multiple identity providers is
you can connect all of them to

00:39:10.910 --> 00:39:13.210
the same underlying account
on your service.

00:39:13.210 --> 00:39:15.820
And in fact, my colleague Ian
did a talk just here, just

00:39:15.820 --> 00:39:17.660
before me, talking about
how you do that.

00:39:21.550 --> 00:39:24.160
So unless there are any more
questions, I think that's the

00:39:24.160 --> 00:39:24.750
end of this.

00:39:24.750 --> 00:39:27.220
We'll be downstairs in
the Google+ Sandbox.

00:39:27.220 --> 00:39:29.510
We also have this really
awesome GIF photobooth.

00:39:29.510 --> 00:39:30.790
I recommend you try it.

00:39:30.790 --> 00:39:33.510
It uses Google+ features,
and I built it, and

00:39:33.510 --> 00:39:35.000
I really like it.

00:39:35.000 --> 00:39:36.430
Otherwise, thank you very much.

00:39:36.430 --> 00:39:37.980
[APPLAUSE]

