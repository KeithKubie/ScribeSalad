WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.720
[MUSIC PLAYING]

00:00:06.709 --> 00:00:08.500
SEAN MCQUILLAN: Welcome
to Lightning Talks.

00:00:08.500 --> 00:00:11.650
I'm super excited to be here
today and talk to you about how

00:00:11.650 --> 00:00:13.900
to welcome your users
to your Android app

00:00:13.900 --> 00:00:15.059
when they get a new phone.

00:00:15.059 --> 00:00:16.100
So why is this important?

00:00:16.100 --> 00:00:17.933
So if you think about
the Android ecosystem,

00:00:17.933 --> 00:00:19.000
it runs on phones, right?

00:00:19.000 --> 00:00:21.920
And we all get a new phone
every two, maybe three, years.

00:00:21.920 --> 00:00:23.590
And when we do this,
we reinstall all

00:00:23.590 --> 00:00:24.760
of the apps we've installed.

00:00:24.760 --> 00:00:27.100
And we do this, and all
of our users of our apps

00:00:27.100 --> 00:00:27.937
do this as well.

00:00:27.937 --> 00:00:29.770
You do a little bit of
math, you figure out,

00:00:29.770 --> 00:00:31.420
if you buy a new
phone every two years,

00:00:31.420 --> 00:00:33.044
that means half of
your users are going

00:00:33.044 --> 00:00:34.690
to get a new phone this year.

00:00:34.690 --> 00:00:38.149
If you don't do anything at
all with your application,

00:00:38.149 --> 00:00:40.690
you're going to give them a cold
welcome when they come back.

00:00:40.690 --> 00:00:42.898
And you're going to show
them an email and a password

00:00:42.898 --> 00:00:45.185
form that's going to
be like they've never

00:00:45.185 --> 00:00:46.060
used your app before.

00:00:46.060 --> 00:00:48.546
You're completely disrupting
their flow of using your app.

00:00:48.546 --> 00:00:50.920
What you want to do instead
is offer them a warm welcome.

00:00:50.920 --> 00:00:52.961
You want to welcome them
back to your application

00:00:52.961 --> 00:00:55.360
and create this continuous
user experience that

00:00:55.360 --> 00:00:57.532
jumps from their old
device to their new device,

00:00:57.532 --> 00:00:58.990
so you don't have
any friction, you

00:00:58.990 --> 00:01:00.406
don't have any
retention problems,

00:01:00.406 --> 00:01:03.130
for these users that are
switching devices and using

00:01:03.130 --> 00:01:04.375
your application.

00:01:04.375 --> 00:01:06.550
There's a couple of products
you can use from Google

00:01:06.550 --> 00:01:07.806
that help you do this.

00:01:07.806 --> 00:01:09.180
So one of them is
Google Sign-In.

00:01:09.180 --> 00:01:11.388
I think everyone knows what
Google Sign-In is, right?

00:01:11.388 --> 00:01:13.550
It's a button you
press, and you log in.

00:01:13.550 --> 00:01:15.730
So it's a button you
press, and you log in.

00:01:15.730 --> 00:01:17.830
It's amazing for
this flow exactly

00:01:17.830 --> 00:01:20.620
because it's very simple
to do that log-in.

00:01:20.620 --> 00:01:23.350
So it's good for your
activation originally

00:01:23.350 --> 00:01:25.250
because it's easy to
log into your app.

00:01:25.250 --> 00:01:26.708
But when they get
a new phone, it's

00:01:26.708 --> 00:01:29.980
also good for reactivating
these users, because all they do

00:01:29.980 --> 00:01:31.280
is have to click a button.

00:01:31.280 --> 00:01:33.160
And on an Android, you
can even configure it

00:01:33.160 --> 00:01:35.800
so they don't even have to click
the button on the new device.

00:01:35.800 --> 00:01:37.570
They'll automatically log in.

00:01:37.570 --> 00:01:42.317
Google Sign-In works on iOS,
Android, as well as the web.

00:01:42.317 --> 00:01:43.900
So you can use it
everywhere, and it's

00:01:43.900 --> 00:01:46.720
a great way to add federated
log-in to your application.

00:01:46.720 --> 00:01:48.820
Another feature you
can use on Android

00:01:48.820 --> 00:01:50.710
is Smart Lock for Passwords.

00:01:50.710 --> 00:01:53.570
So Smart Lock is-- well,
it's a password manager.

00:01:53.570 --> 00:01:55.130
It's named quite well.

00:01:55.130 --> 00:01:57.310
So it stores usernames
and passwords, or even

00:01:57.310 --> 00:01:59.140
federated credentials,
up in the cloud

00:01:59.140 --> 00:02:02.110
when the user confirms that they
would like to save the password

00:02:02.110 --> 00:02:03.380
after they log in.

00:02:03.380 --> 00:02:04.690
So they're going to do
this on their old phone.

00:02:04.690 --> 00:02:06.220
They're going to
save their password.

00:02:06.220 --> 00:02:07.810
And then when they get
onto their new device,

00:02:07.810 --> 00:02:09.770
when they first come
into your application,

00:02:09.770 --> 00:02:10.930
you're going to give
them this warm welcome.

00:02:10.930 --> 00:02:13.000
You're going to say,
I know who you are.

00:02:13.000 --> 00:02:15.250
Do you want to log in with
that account you've already

00:02:15.250 --> 00:02:16.510
saved for this application?

00:02:16.510 --> 00:02:18.760
And it's just going to create
that seamless experience

00:02:18.760 --> 00:02:21.390
and log that user
into your application.

00:02:21.390 --> 00:02:23.710
So one of our partners,
Netflix, who I believe

00:02:23.710 --> 00:02:26.420
is here today, actually--
so Netflix used this,

00:02:26.420 --> 00:02:29.500
and they found that they had
20% fewer support requests.

00:02:29.500 --> 00:02:31.570
And so if you think about
that, maybe every time

00:02:31.570 --> 00:02:34.925
a user contacts you to get
a username and password fix,

00:02:34.925 --> 00:02:37.300
there's probably five users
that didn't, and they're just

00:02:37.300 --> 00:02:39.508
not going to come back to
your application for months

00:02:39.508 --> 00:02:40.620
or even years at a time.

00:02:40.620 --> 00:02:42.730
They might just become
a retention problem.

00:02:42.730 --> 00:02:44.120
They may never come back.

00:02:44.120 --> 00:02:47.180
So this is a fantastic way to
improve your business metrics.

00:02:47.180 --> 00:02:48.700
And then Autofill
is a new feature

00:02:48.700 --> 00:02:50.669
relaunched in
Android O. It works

00:02:50.669 --> 00:02:52.210
kind of like Smart
Lock when it comes

00:02:52.210 --> 00:02:53.334
to usernames and passwords.

00:02:53.334 --> 00:02:54.590
So it's an autofill system.

00:02:54.590 --> 00:02:55.090
Right?

00:02:55.090 --> 00:02:57.480
So it autofills text views
exactly the way you think.

00:02:57.480 --> 00:03:00.370
And one of the most common
text views to get autofilled

00:03:00.370 --> 00:03:02.300
is usernames and passwords.

00:03:02.300 --> 00:03:03.820
So the way this
works is, after they

00:03:03.820 --> 00:03:06.130
log into your application
on their old device,

00:03:06.130 --> 00:03:08.816
they'll choose to save it
to the Autofill service,

00:03:08.816 --> 00:03:11.440
and that's going to go up to the
same data store as Smart Lock.

00:03:11.440 --> 00:03:13.390
It's a secure data
store for passwords.

00:03:13.390 --> 00:03:14.830
And then when they come
back on their new device,

00:03:14.830 --> 00:03:16.180
it's just going to go
ahead and autofill.

00:03:16.180 --> 00:03:17.596
So there's a couple
things you can

00:03:17.596 --> 00:03:19.600
do to get your application
ready for Autofill.

00:03:19.600 --> 00:03:21.160
One of the biggest
ones is set up

00:03:21.160 --> 00:03:25.757
a digital asset link that links
your web and your Android app.

00:03:25.757 --> 00:03:28.090
So this is great because
Autofill has pluggable password

00:03:28.090 --> 00:03:31.090
managers, but all the password
managers support this.

00:03:31.090 --> 00:03:32.710
And when they do
that, what happens

00:03:32.710 --> 00:03:34.340
is the user can
log in on the web.

00:03:34.340 --> 00:03:36.256
And if they're using the
same password manager

00:03:36.256 --> 00:03:37.900
on their Android
device, they're going

00:03:37.900 --> 00:03:39.580
to go ahead and get those
credentials transferred.

00:03:39.580 --> 00:03:41.746
So they log in on the web,
install your Android app,

00:03:41.746 --> 00:03:43.140
and the password's
already saved.

00:03:43.140 --> 00:03:44.806
They get the seamless
upgrade experience

00:03:44.806 --> 00:03:46.599
to your Android application.

00:03:46.599 --> 00:03:48.640
Another thing you have to
do for Autofill-- well,

00:03:48.640 --> 00:03:49.810
you don't have to
do it, but if you

00:03:49.810 --> 00:03:51.250
want the best
experience for users--

00:03:51.250 --> 00:03:52.630
you should set up autofillHints.

00:03:52.630 --> 00:03:55.300
So you should tell the Autofill
service what the username, what

00:03:55.300 --> 00:03:56.560
the password field is.

00:03:56.560 --> 00:03:58.180
That way, the Autofill
service doesn't

00:03:58.180 --> 00:04:00.850
have to guess based on your
IDs and maybe get it wrong,

00:04:00.850 --> 00:04:02.680
which is probably
the worst experience

00:04:02.680 --> 00:04:03.909
you can give your users.

00:04:03.909 --> 00:04:05.950
And then the last thing
we're going to talk about

00:04:05.950 --> 00:04:06.576
is Auto Backup.

00:04:06.576 --> 00:04:08.075
I'm going to hand
it over to Jeremy.

00:04:08.075 --> 00:04:09.030
JEREMY ORLOW: Yep.

00:04:09.030 --> 00:04:13.520
So Auto Backup is a great way
to also provide continuity

00:04:13.520 --> 00:04:14.845
to your users.

00:04:14.845 --> 00:04:17.990
So even if your app
syncs to the cloud,

00:04:17.990 --> 00:04:21.190
there's still usually
device-specific settings

00:04:21.190 --> 00:04:22.029
that you can backup.

00:04:22.029 --> 00:04:24.070
And there's also--
no user who's been

00:04:24.070 --> 00:04:27.670
using your app for a year wants
to see a tutorial first thing

00:04:27.670 --> 00:04:30.700
when they launch your app
when they're on a new phone.

00:04:30.700 --> 00:04:32.860
So Auto Backup works by--

00:04:32.860 --> 00:04:36.070
when the phone's idle,
we backup to the cloud.

00:04:36.070 --> 00:04:38.300
Your data is stored securely.

00:04:38.300 --> 00:04:40.490
You can have up to 25 megs.

00:04:40.490 --> 00:04:43.450
But if you go over
that, backups will fail.

00:04:43.450 --> 00:04:47.000
On the new phone, when
the user installs the app,

00:04:47.000 --> 00:04:50.320
it will restore the
data before the app runs

00:04:50.320 --> 00:04:53.020
for the first time,
and the user picks up

00:04:53.020 --> 00:04:56.740
where they left off without
any friction or churn.

00:04:56.740 --> 00:05:01.430
You can also include and
exclude specific files.

00:05:01.430 --> 00:05:04.210
So, for example, you can exclude
OAuth tokens or other things

00:05:04.210 --> 00:05:06.380
that shouldn't be backed up.

00:05:06.380 --> 00:05:08.960
And with all these tools, it's
possible to provide continuity

00:05:08.960 --> 00:05:10.730
to your users and
keep them engaged

00:05:10.730 --> 00:05:12.827
when they switch phones.

00:05:12.827 --> 00:05:13.910
We'll be back in the back.

00:05:13.910 --> 00:05:17.260
[MUSIC PLAYING]

