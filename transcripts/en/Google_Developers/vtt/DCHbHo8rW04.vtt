WEBVTT
Kind: captions
Language: en

00:00:02.190 --> 00:00:02.860
MANO MARKS: Hi.

00:00:02.860 --> 00:00:03.700
I'm Mano Marks.

00:00:03.700 --> 00:00:04.820
LUKE MAHE: And I'm Luke Mahe.

00:00:04.820 --> 00:00:07.220
MANO MARKS: And we're on the
Maps Developer Relations Team.

00:00:07.220 --> 00:00:09.450
LUKE MAHE: And we're here to
talk to you about Getting the

00:00:09.450 --> 00:00:13.920
Other Mapping Platform, Getting
Your Maps Into iOS.

00:00:13.920 --> 00:00:18.000
MANO MARKS: So back in December,
we released the

00:00:18.000 --> 00:00:21.770
Google Maps for iPhone, an
application that allowed you

00:00:21.770 --> 00:00:29.930
to use the Google Maps app
directly on the iPhone, and it

00:00:29.930 --> 00:00:32.080
was a major update
to Google Maps.

00:00:32.080 --> 00:00:35.940
Much like we had on Android,
the Google Maps app on the

00:00:35.940 --> 00:00:41.700
iPhone used vector rendering to
deliver a really powerful,

00:00:41.700 --> 00:00:46.160
immersive experience in Maps
that you could view Google

00:00:46.160 --> 00:00:48.070
Maps data on top of.

00:00:48.070 --> 00:00:51.960
Now when we released it, as
soon as we released it, we

00:00:51.960 --> 00:00:54.710
actually released an SDK
because developers were

00:00:54.710 --> 00:00:58.150
clamoring for it right away.

00:00:58.150 --> 00:01:02.310
And the reason was because it
allowed them to embed Google

00:01:02.310 --> 00:01:10.250
Maps data and Google Maps
services on top of their

00:01:10.250 --> 00:01:11.260
applications.

00:01:11.260 --> 00:01:16.010
And it took advantage of the
same rendering engine that we

00:01:16.010 --> 00:01:20.660
used in the Google Maps iPhone
application to render data

00:01:20.660 --> 00:01:22.710
within the SDK.

00:01:22.710 --> 00:01:27.080
So we basically got
all that for free.

00:01:27.080 --> 00:01:31.150
LUKE MAHE: So when we launched
the SDK in December of 2012,

00:01:31.150 --> 00:01:32.700
we launched a limited preview.

00:01:32.700 --> 00:01:36.660
But then in January of 2013,
we launched publicly.

00:01:36.660 --> 00:01:38.920
And as you can see, we've
had about two

00:01:38.920 --> 00:01:40.140
releases every month.

00:01:40.140 --> 00:01:43.610
And today, as was announced in
the keynote, we have a special

00:01:43.610 --> 00:01:46.730
Version 1.3 release, where we're
going to have some cool

00:01:46.730 --> 00:01:48.015
features to show off.

00:01:48.015 --> 00:01:50.530
MANO MARKS: Yes, and we'll
get to that later.

00:01:50.530 --> 00:01:52.570
LUKE MAHE: We're not going to
tell you exactly how to get

00:01:52.570 --> 00:01:54.640
started because there's
some documentation.

00:01:54.640 --> 00:01:57.380
You can go to
developers.google.com/maps and

00:01:57.380 --> 00:01:58.220
have a read up.

00:01:58.220 --> 00:02:00.600
We'll talk a little bit about
what to do with the SDK, but

00:02:00.600 --> 00:02:02.465
we're not going to talk to you
about how to download and get

00:02:02.465 --> 00:02:05.580
all that little stuff going.

00:02:05.580 --> 00:02:07.810
MANO MARKS: So the first thing
to note is that the Google

00:02:07.810 --> 00:02:10.919
Maps SDK is a static library.

00:02:10.919 --> 00:02:13.620
It's a framework that you
download and incorporate

00:02:13.620 --> 00:02:15.480
directly into your
applications.

00:02:15.480 --> 00:02:17.460
This gives you some
advantages.

00:02:17.460 --> 00:02:22.960
That is, if we make an update to
the SDK, you don't have to

00:02:22.960 --> 00:02:24.410
update immediately.

00:02:24.410 --> 00:02:28.430
You can take time to evaluate
the update and change your

00:02:28.430 --> 00:02:31.080
code, and change it in
your next release.

00:02:31.080 --> 00:02:35.990
Therefore, your app will
continue to work.

00:02:35.990 --> 00:02:40.170
Although we will give you a
warning if you're developing

00:02:40.170 --> 00:02:42.890
in Xcode and using the
simulator, we will log a

00:02:42.890 --> 00:02:44.700
warning that says, by the
way, there's another

00:02:44.700 --> 00:02:46.350
version of the SDK.

00:02:46.350 --> 00:02:51.770
On the other hand, the basic
services that were working

00:02:51.770 --> 00:02:54.440
will continue to work, and the
Maps themselves will continue

00:02:54.440 --> 00:02:57.820
to update as we get new
Map data, much like

00:02:57.820 --> 00:03:00.110
all the other platforms.

00:03:00.110 --> 00:03:01.660
LUKE MAHE: We also have a notify
group that you can

00:03:01.660 --> 00:03:04.420
join-- which you can find a link
on our Developer site--

00:03:04.420 --> 00:03:05.870
and that's where we will
email you every

00:03:05.870 --> 00:03:06.800
time we do a release.

00:03:06.800 --> 00:03:09.210
And so you can actually get
notified of when to go and

00:03:09.210 --> 00:03:12.410
download the new SDK, what's
changed, and then what do you

00:03:12.410 --> 00:03:13.620
need to do.

00:03:13.620 --> 00:03:16.290
MANO MARKS: Right.

00:03:16.290 --> 00:03:21.800
So there's a little bit of
confusion about this on Stack

00:03:21.800 --> 00:03:26.520
Overflow and various developer
communities that there's a bit

00:03:26.520 --> 00:03:29.070
of myth around Storyboards.

00:03:29.070 --> 00:03:33.450
Google Maps SDK does actually
work with Storyboards, unlike

00:03:33.450 --> 00:03:37.790
some people think
that it doesn't.

00:03:37.790 --> 00:03:41.820
We are very happy to develop
with Storyboards, and that's,

00:03:41.820 --> 00:03:45.620
personally, my favorite way
of developing a UI.

00:03:45.620 --> 00:03:48.050
When you go into Interface
Builder, you simply create a

00:03:48.050 --> 00:03:53.550
new view, and then you make
it of type GMS MapView.

00:03:53.550 --> 00:03:56.860
And then that allows you to do
any of your normal sort of

00:03:56.860 --> 00:04:00.970
delegating and flow through
that you might do using

00:04:00.970 --> 00:04:01.630
Storyboards.

00:04:01.630 --> 00:04:03.960
LUKE MAHE: You can also add a
UI view and set that type to

00:04:03.960 --> 00:04:06.930
be a GMS MapView as well, and
then you can resize it and do

00:04:06.930 --> 00:04:08.490
all the things you're kind of
used to when playing with

00:04:08.490 --> 00:04:09.040
Storyboards.

00:04:09.040 --> 00:04:11.090
MANO MARKS: Right.

00:04:11.090 --> 00:04:11.920
LUKE MAHE: I'll show
you a little bit of

00:04:11.920 --> 00:04:13.400
super simple code.

00:04:13.400 --> 00:04:16.180
For those who are coming from
JavaScript Maps, this might be

00:04:16.180 --> 00:04:17.290
a little different.

00:04:17.290 --> 00:04:19.730
We've now got what's called a
camera, and I'll show you a

00:04:19.730 --> 00:04:21.709
bit more about a camera later
on because I find it really

00:04:21.709 --> 00:04:22.430
fascinating.

00:04:22.430 --> 00:04:24.320
There are all the cool things
you can do with it.

00:04:24.320 --> 00:04:26.470
But what we do is we create a
camera, add a latitude and

00:04:26.470 --> 00:04:29.140
longitude and the zoom level,
and then we instantiate a new

00:04:29.140 --> 00:04:32.240
map with that camera
and a size.

00:04:32.240 --> 00:04:35.870
Here we're doing a req 0, but
because it's UI view, it'll

00:04:35.870 --> 00:04:39.670
fill up the whole view.

00:04:39.670 --> 00:04:43.330
And then we create a marker,
where we add it to the map by

00:04:43.330 --> 00:04:46.350
setting map equals mapView.

00:04:46.350 --> 00:04:50.510
If you've come from some other
mobile mapping APIs, you may

00:04:50.510 --> 00:04:54.500
be used to asking the map to add
things to the markers to

00:04:54.500 --> 00:04:55.630
the map for you.

00:04:55.630 --> 00:04:57.440
But with the way we're doing
this, it's kind of following

00:04:57.440 --> 00:05:00.680
what we've done in JavaScript
v3, where you have a marker

00:05:00.680 --> 00:05:02.200
and then you just tell
it what map to be on.

00:05:02.200 --> 00:05:04.290
So if you want to have multiple
maps and then just

00:05:04.290 --> 00:05:06.060
move that marker around,
you can.

00:05:06.060 --> 00:05:07.860
MANO MARKS: And this allows you
to do interesting things,

00:05:07.860 --> 00:05:11.260
like you can do your own
marker management.

00:05:11.260 --> 00:05:14.440
So say you wanted to create two
separate arrays of markers

00:05:14.440 --> 00:05:17.840
or dictionaries that had
different properties

00:05:17.840 --> 00:05:21.500
associated with different
markers, this would allow you

00:05:21.500 --> 00:05:24.600
to implement that kind of
thing, say, a cluster

00:05:24.600 --> 00:05:30.472
management tool or something
like that, within your code.

00:05:30.472 --> 00:05:32.060
LUKE MAHE: We should talk a
little bit about the features.

00:05:32.060 --> 00:05:32.830
MANO MARKS: Right.

00:05:32.830 --> 00:05:34.200
Let's talk about the features.

00:05:34.200 --> 00:05:39.030
It's a map, and these are some
of the basic features that you

00:05:39.030 --> 00:05:42.270
expect when you get
a map, right?

00:05:42.270 --> 00:05:46.230
You want to put a marker
on your map.

00:05:46.230 --> 00:05:51.960
I think pretty much on any web
application, any SDK, you'd

00:05:51.960 --> 00:05:53.460
expect that, right?

00:05:53.460 --> 00:05:55.180
We also have polylines.

00:05:55.180 --> 00:05:56.740
Again, pretty basic.

00:05:56.740 --> 00:05:59.450
Here you can see we have a demo
of the polyline that goes

00:05:59.450 --> 00:06:01.460
across the International
Date Line.

00:06:01.460 --> 00:06:05.820
It's a geodesic, so it follows
the curvature of the globe

00:06:05.820 --> 00:06:08.320
instead of the direct
Mercator line.

00:06:08.320 --> 00:06:10.260
And then we also
have polygons.

00:06:10.260 --> 00:06:16.290
And of course, all of these
overlays support touch events.

00:06:16.290 --> 00:06:17.180
LUKE MAHE: We also
have the camera.

00:06:17.180 --> 00:06:19.830
So with the camera, I'll
actually get into more detail

00:06:19.830 --> 00:06:21.020
later on about the camera.

00:06:21.020 --> 00:06:22.270
But we can show you, we
can have the camera.

00:06:22.270 --> 00:06:23.300
We can control it.

00:06:23.300 --> 00:06:24.700
We also have a traffic layer.

00:06:24.700 --> 00:06:27.380
Obviously, this isn't a live
feed because if it was, around

00:06:27.380 --> 00:06:29.250
Moscone it would just be red.

00:06:29.250 --> 00:06:31.360
And we also have Compass
and My Location.

00:06:31.360 --> 00:06:34.360
So the Compass is where you can
re-rotate the map back to

00:06:34.360 --> 00:06:35.400
pointing to north.

00:06:35.400 --> 00:06:37.800
And then My Location will just
move the map to where the user

00:06:37.800 --> 00:06:40.040
actually is.

00:06:40.040 --> 00:06:42.450
And we have all the map types
you're used to enjoying.

00:06:42.450 --> 00:06:43.250
We've got road maps.

00:06:43.250 --> 00:06:44.640
We've got satellite maps.

00:06:44.640 --> 00:06:46.680
We've got hybrid, which is a
combination of satellite with

00:06:46.680 --> 00:06:47.740
the layers on top.

00:06:47.740 --> 00:06:49.140
And we also have our
terrain maps.

00:06:49.140 --> 00:06:49.570
MANO MARKS: Right.

00:06:49.570 --> 00:06:52.500
So these are the basic map types
that you would expect in

00:06:52.500 --> 00:06:53.540
any Google Maps app.

00:06:53.540 --> 00:06:57.440
It's used the same map data
that you would get in the

00:06:57.440 --> 00:07:01.830
JavaScript Maps API, on
maps.google.com, and the

00:07:01.830 --> 00:07:03.180
Android API.

00:07:03.180 --> 00:07:07.750
And we also have the largest
imagery collection in the

00:07:07.750 --> 00:07:12.330
world that is available on all
three platforms, as well as

00:07:12.330 --> 00:07:14.930
our terrain layer.

00:07:14.930 --> 00:07:18.540
We also, by the way, if you
don't want to use the SDK, we

00:07:18.540 --> 00:07:22.610
do have a URL scheme that allows
you to open up-- if you

00:07:22.610 --> 00:07:28.520
use this URL scheme, you can
open up the Google Maps for

00:07:28.520 --> 00:07:32.530
iPhone application if it
exists on the device.

00:07:32.530 --> 00:07:35.880
Or you can use the same URL
to then send a query to

00:07:35.880 --> 00:07:40.610
maps.google.com if the
app does not exist.

00:07:40.610 --> 00:07:42.340
LUKE MAHE: So I said I'd talk a
bit about the camera because

00:07:42.340 --> 00:07:44.460
I find it really fascinating,
being able to do all the

00:07:44.460 --> 00:07:46.130
interesting things.

00:07:46.130 --> 00:07:48.260
With the camera now, we've got
this thing called a target.

00:07:48.260 --> 00:07:50.300
So if you're coming from the
JavaScript Maps, this is what

00:07:50.300 --> 00:07:52.300
would be something like
your map's center.

00:07:52.300 --> 00:07:54.170
But instead, we call it a
target, and this is where

00:07:54.170 --> 00:07:55.690
you're looking at
on the world.

00:07:55.690 --> 00:07:59.400
So you can use the target to
look down and move it around.

00:07:59.400 --> 00:08:00.690
We also have a bearing.

00:08:00.690 --> 00:08:02.390
So the bearing is the
rotation of the map.

00:08:02.390 --> 00:08:05.780
So you can rotate the map
between zero and 360 degrees,

00:08:05.780 --> 00:08:07.280
with zero being north.

00:08:07.280 --> 00:08:08.830
And you can see as
the map rotates,

00:08:08.830 --> 00:08:10.070
the labels move nicely.

00:08:10.070 --> 00:08:12.130
They get out of the way or
they just kind of shift

00:08:12.130 --> 00:08:16.780
around, and that's all taken
care of for you.

00:08:16.780 --> 00:08:18.040
We also have the
viewing angle.

00:08:18.040 --> 00:08:20.150
So the viewing angle is the
angle at which you're looking

00:08:20.150 --> 00:08:20.800
at your target.

00:08:20.800 --> 00:08:25.080
So you can see here, we're kind
of tilting the camera to

00:08:25.080 --> 00:08:27.210
look at the Earth at
a different angle.

00:08:27.210 --> 00:08:29.320
So if your angle is zero, you're
looking straight down.

00:08:29.320 --> 00:08:31.670
And you can tilt it to about 45
degrees, and then you can

00:08:31.670 --> 00:08:35.049
get a really cool perspective
of the Earth.

00:08:35.049 --> 00:08:37.990
MANO MARKS: And then you see
the 3D building zoom out of

00:08:37.990 --> 00:08:40.220
the map when you
get that close.

00:08:40.220 --> 00:08:40.530
LUKE MAHE: Yeah.

00:08:40.530 --> 00:08:41.640
And we also have a zoom.

00:08:41.640 --> 00:08:44.600
And because it's all vector
data, we can do this really

00:08:44.600 --> 00:08:47.000
nice smooth zooming
in and out.

00:08:47.000 --> 00:08:49.680
We also have the discrete zoom
levels that you're used to, so

00:08:49.680 --> 00:08:51.540
we've got to zoom level
two, three, four.

00:08:51.540 --> 00:08:55.250
But you can also go to
2.6, 9.12, and have

00:08:55.250 --> 00:08:56.640
little bits in between.

00:08:56.640 --> 00:08:59.168
MANO MARKS: Not 9.12 because
nobody goes there, right?

00:08:59.168 --> 00:09:01.260
[LAUGHS]

00:09:01.260 --> 00:09:02.510
LUKE MAHE: And then you can
do, like, really cool,

00:09:02.510 --> 00:09:03.090
interesting things.

00:09:03.090 --> 00:09:05.660
And then see, as we zoom more
into the map and can get close

00:09:05.660 --> 00:09:07.460
to the Earth, the 3D
buildings appear.

00:09:07.460 --> 00:09:10.290
And then as we zoom out, the
3D buildings go away.

00:09:10.290 --> 00:09:14.135
And then combining all these
things, you can do really

00:09:14.135 --> 00:09:15.760
interesting implementations
on your map.

00:09:15.760 --> 00:09:17.710
So you can see here, as we move
into Melbourne, we kind

00:09:17.710 --> 00:09:18.960
of rotate the map.

00:09:18.960 --> 00:09:21.490
We're angling down a bit more
to get more perspective of

00:09:21.490 --> 00:09:22.260
what we're looking at.

00:09:22.260 --> 00:09:24.570
And then as we get closer,
the 3D buildings

00:09:24.570 --> 00:09:25.710
grow out of the ground.

00:09:25.710 --> 00:09:27.435
And we're also kind of shifting
to where the camera

00:09:27.435 --> 00:09:29.250
is looking and then kind
of moving around.

00:09:29.250 --> 00:09:30.240
And then we could just
sit there and

00:09:30.240 --> 00:09:31.265
look at this all day.

00:09:31.265 --> 00:09:33.640
MANO MARKS: And as Luke said,
this is all because we have

00:09:33.640 --> 00:09:37.340
these vector-based maps.

00:09:37.340 --> 00:09:41.560
We're basically passing map data
down to the SDK, and the

00:09:41.560 --> 00:09:45.370
SDK is rendering it on the fly
in the position, the angle,

00:09:45.370 --> 00:09:49.440
the bearing, the zoom,
everything

00:09:49.440 --> 00:09:51.540
that you want to have.

00:09:51.540 --> 00:09:53.500
LUKE MAHE: And these are all
programmatically done at the

00:09:53.500 --> 00:09:56.770
moment, but we also have all of
these controls in gestures

00:09:56.770 --> 00:09:59.560
for when the user's actually
interacting with your

00:09:59.560 --> 00:10:00.520
application.

00:10:00.520 --> 00:10:01.410
So we have what you're
used to.

00:10:01.410 --> 00:10:02.500
You can pinch to zoom.

00:10:02.500 --> 00:10:05.490
You can kind of fling and have
a little bit of inertia.

00:10:05.490 --> 00:10:07.350
You can use the two
fingers to tilt.

00:10:07.350 --> 00:10:09.520
And then go in more, and then
you get your 3D buildings, and

00:10:09.520 --> 00:10:12.940
you can rotate around
and kind of move.

00:10:12.940 --> 00:10:15.580
And it's all the things that
you're used to in a maps

00:10:15.580 --> 00:10:17.674
application, and especially in
a Google Maps application.

00:10:24.540 --> 00:10:26.600
MANO MARKS: So we also
have something new.

00:10:26.600 --> 00:10:28.460
We promised this to you
at the beginning.

00:10:28.460 --> 00:10:33.540
We're now delivering a
new feature in the

00:10:33.540 --> 00:10:35.810
Maps SDK as of today.

00:10:35.810 --> 00:10:42.510
Version 1.3 of the SDK
has tile overlays.

00:10:42.510 --> 00:10:46.200
So tile overlays are the ability
to add your own map

00:10:46.200 --> 00:10:50.940
tiles on top of our maps, or
in the case of this one, in

00:10:50.940 --> 00:10:56.190
place of our maps, and we will
then use the SDK to render

00:10:56.190 --> 00:10:57.730
those map tiles.

00:10:57.730 --> 00:11:03.470
And in this case, we're using
raster tiles and then putting

00:11:03.470 --> 00:11:08.550
them on top of our vector data
that's already been rendered.

00:11:08.550 --> 00:11:18.420
And you can see here, this is
estimates of geothermal

00:11:18.420 --> 00:11:19.810
capabilities in the
United States.

00:11:19.810 --> 00:11:22.650
So these are where we believe
there are reservoirs of

00:11:22.650 --> 00:11:25.440
geothermal energy in the US.

00:11:25.440 --> 00:11:29.380
And the previous one was
actually the World at Night,

00:11:29.380 --> 00:11:32.930
the NASA Black Marble data.

00:11:32.930 --> 00:11:36.540
And we believe this is a really
tremendously powerful

00:11:36.540 --> 00:11:39.530
way for you to bring in
your own kind of data.

00:11:39.530 --> 00:11:43.420
And some examples are, you may
use this for generating heat

00:11:43.420 --> 00:11:50.470
maps or showing off old maps
scanned from sort of

00:11:50.470 --> 00:11:54.540
historical map archives.

00:11:54.540 --> 00:11:57.550
And this last feature basically
brings us to feature

00:11:57.550 --> 00:11:59.825
parity with the Android API.

00:12:02.360 --> 00:12:03.130
LUKE MAHE: A little
bit of code here.

00:12:03.130 --> 00:12:04.805
We don't want to show too much
code, but we wanted to show

00:12:04.805 --> 00:12:09.890
you how simple it is to add a
tile overlay to your map.

00:12:09.890 --> 00:12:13.660
All you're doing is requesting
a URL with a x, a y, and a

00:12:13.660 --> 00:12:16.710
zoom value, and then we will
request that and we'll put in

00:12:16.710 --> 00:12:17.670
the right spot.

00:12:17.670 --> 00:12:21.920
So here we create just a block
that takes these values and

00:12:21.920 --> 00:12:23.660
returns a URL string--

00:12:23.660 --> 00:12:25.310
I mean an NSURL.

00:12:25.310 --> 00:12:27.580
And then we pass that to the
tile layer, and then we add

00:12:27.580 --> 00:12:28.830
that tile layer to the map.

00:12:32.640 --> 00:12:34.780
MANO MARKS: So let's
talk a moment about

00:12:34.780 --> 00:12:36.190
extending the platform.

00:12:36.190 --> 00:12:41.960
So Google Maps has a ton of data
that we provide to you,

00:12:41.960 --> 00:12:45.580
aside from what's provided
directly through the SDK.

00:12:45.580 --> 00:12:49.850
We have a number of different
web services that you can use

00:12:49.850 --> 00:12:53.510
to add data, regardless of
what platform you're

00:12:53.510 --> 00:12:55.150
displaying the map on.

00:12:55.150 --> 00:12:57.560
And because these are Google
Maps, you can use them to

00:12:57.560 --> 00:13:00.280
display this Google data.

00:13:00.280 --> 00:13:02.170
LUKE MAHE: The first one I like
to show off is Places.

00:13:02.170 --> 00:13:06.260
So we've got a Places API, which
has access to millions

00:13:06.260 --> 00:13:08.770
of points of interest
around the globe.

00:13:08.770 --> 00:13:11.510
And we can do searches for it,
and then get more rich

00:13:11.510 --> 00:13:13.100
information to add
to your map.

00:13:13.100 --> 00:13:14.680
So here we did a search
for Mexican

00:13:14.680 --> 00:13:16.890
food around San Francisco.

00:13:16.890 --> 00:13:19.070
And then, based on all the
points that came back, I

00:13:19.070 --> 00:13:21.080
tapped on one, and then I could
load more information

00:13:21.080 --> 00:13:21.570
about that.

00:13:21.570 --> 00:13:23.610
So here we're just getting
a bunch of photos.

00:13:23.610 --> 00:13:24.320
We can flick through.

00:13:24.320 --> 00:13:26.560
We can get the name, but we
can also get reviews, the

00:13:26.560 --> 00:13:29.830
address, and other interesting
information about that.

00:13:29.830 --> 00:13:32.090
We also have a couple
of other searches.

00:13:32.090 --> 00:13:33.190
We've got your Nearby search.

00:13:33.190 --> 00:13:34.630
We've got Radar search.

00:13:34.630 --> 00:13:38.535
And we've got a query-complete
implementation for you.

00:13:38.535 --> 00:13:39.270
MANO MARKS: Autocomplete.

00:13:39.270 --> 00:13:41.580
LUKE MAHE: Autocomplete, yes.

00:13:41.580 --> 00:13:42.420
Here's a bit of code.

00:13:42.420 --> 00:13:44.000
Don't be too scared
about this.

00:13:44.000 --> 00:13:48.475
We're just doing a asynch
request with a URL.

00:13:48.475 --> 00:13:50.390
All the web services we're going
to show you kind of are

00:13:50.390 --> 00:13:51.900
going to follow the
same fashion.

00:13:51.900 --> 00:13:53.990
You do a request, and
you can ask for JSON

00:13:53.990 --> 00:13:55.340
or XML to come back.

00:13:55.340 --> 00:13:57.820
And then based on the data that
comes back, we can loop

00:13:57.820 --> 00:13:59.740
through and then we can add
the markers to a map.

00:14:02.620 --> 00:14:05.280
MANO MARKS: So another key
service that we don't provide

00:14:05.280 --> 00:14:08.920
directly in the SDK, but we do
provide on a web service, is

00:14:08.920 --> 00:14:10.360
the Directions API.

00:14:10.360 --> 00:14:14.040
And in this sample, what we're
showing you is the ability of

00:14:14.040 --> 00:14:19.150
the Directions API to adjust,
depending on the number of

00:14:19.150 --> 00:14:21.420
waypoints that you want
to put in between.

00:14:21.420 --> 00:14:23.920
So if you've heard of the
travelling salesman problem,

00:14:23.920 --> 00:14:28.300
we basically help you solve
that by taking a starting

00:14:28.300 --> 00:14:31.460
location and an ending location,
and then if you

00:14:31.460 --> 00:14:34.910
throw waypoints at us and tell
us to optimize the route, we

00:14:34.910 --> 00:14:37.450
will find the fastest
route between them.

00:14:37.450 --> 00:14:41.080
We allow, in the free API, up to
eight waypoints, aside from

00:14:41.080 --> 00:14:43.000
the start and end location.

00:14:43.000 --> 00:14:48.730
And in the Maps API for
Business, we allow up to 23.

00:14:48.730 --> 00:14:54.930
So this is, again, a really nice
way to give information

00:14:54.930 --> 00:14:57.880
to your users, and it's
quite snappy.

00:14:57.880 --> 00:15:01.220
LUKE MAHE: And so in the same
fashion as the Places API, we

00:15:01.220 --> 00:15:05.070
just do a URL request, the URL
Fetch, essentially, to the

00:15:05.070 --> 00:15:06.220
Directions API.

00:15:06.220 --> 00:15:07.620
And what I want to point out
here is what we're getting

00:15:07.620 --> 00:15:10.800
back is an encoded polyline
as part of the request.

00:15:10.800 --> 00:15:14.010
And the encoded polyline, you
might think it's like my cat

00:15:14.010 --> 00:15:15.280
walked across the keyboard.

00:15:15.280 --> 00:15:17.820
But it's actually the way
we encode polylines.

00:15:17.820 --> 00:15:20.240
So instead of having a whole lot
of latitude and longitude

00:15:20.240 --> 00:15:23.180
points, we can just send a
string down and then decode

00:15:23.180 --> 00:15:26.140
that and then put the
path on the map.

00:15:26.140 --> 00:15:26.390
MANO MARKS: Right.

00:15:26.390 --> 00:15:30.150
You actually do get direct
access to all the coordinate

00:15:30.150 --> 00:15:33.220
pairs if you want those.

00:15:33.220 --> 00:15:37.890
We can also, through the SDK,
re-encode polylines if you

00:15:37.890 --> 00:15:41.050
want to use them here or,
perhaps, store an encoded

00:15:41.050 --> 00:15:44.340
polyline or pass it to somebody
who might be using it

00:15:44.340 --> 00:15:45.590
in the JavaScript Maps API.

00:15:49.590 --> 00:15:51.000
So we also do geocoding.

00:15:51.000 --> 00:15:56.170
Geocoding is the art of taking
an address or a place and

00:15:56.170 --> 00:15:59.160
turning it into a
latitude/longitude pair.

00:15:59.160 --> 00:16:01.170
So here, it's actually
pretty simple.

00:16:01.170 --> 00:16:02.615
We're seeing-- well,
of course, Perth.

00:16:02.615 --> 00:16:03.810
You did Perth, didn't you?

00:16:03.810 --> 00:16:05.900
LUKE MAHE: It's the best
place in the world.

00:16:05.900 --> 00:16:09.080
MANO MARKS: So we start with
Perth and demonstrate Perth.

00:16:09.080 --> 00:16:13.460
And as you can see, it just
returns back the geocode.

00:16:13.460 --> 00:16:18.360
And then the next one is Paris,
which always looks good

00:16:18.360 --> 00:16:19.910
on a big screen.

00:16:19.910 --> 00:16:25.470
So a very simple method
of getting a

00:16:25.470 --> 00:16:26.990
latitude/longitude pair.

00:16:26.990 --> 00:16:31.100
And we will actually, if the
result is not 100% clear,

00:16:31.100 --> 00:16:34.040
we'll pass back to you
some alternatives,

00:16:34.040 --> 00:16:36.420
should you ask for them.

00:16:36.420 --> 00:16:37.640
LUKE MAHE: Also on
the platform we

00:16:37.640 --> 00:16:38.850
have reverse geocoding.

00:16:38.850 --> 00:16:42.530
So it's the implementation of
taking the latitude and

00:16:42.530 --> 00:16:45.350
longitude pair and actually
converting it to an address.

00:16:45.350 --> 00:16:48.020
Here's a bit of code where we
can set up a handler for when

00:16:48.020 --> 00:16:49.850
someone actually taps
on the map.

00:16:49.850 --> 00:16:53.400
And then when someone taps on
it, we send off a request to

00:16:53.400 --> 00:16:54.430
do a reverse geocode.

00:16:54.430 --> 00:16:57.270
And then based on the result,
we'll put a marker on a map.

00:16:57.270 --> 00:17:00.390
MANO MARKS: So this is actually
built in to the SDK,

00:17:00.390 --> 00:17:03.460
pretty standard on a
lot of platforms.

00:17:03.460 --> 00:17:07.595
So let's talk a little bit about
making these maps your

00:17:07.595 --> 00:17:10.810
own and jazzing them up using
some capabilities that are

00:17:10.810 --> 00:17:15.000
built in to the platform
as well as the SDK.

00:17:15.000 --> 00:17:16.460
LUKE MAHE: So the first one
I want to show is marker

00:17:16.460 --> 00:17:17.329
animations.

00:17:17.329 --> 00:17:22.270
So in the iOS app that we
launched, we had these marker

00:17:22.270 --> 00:17:24.020
animations where the marker just
kind of grew out of the

00:17:24.020 --> 00:17:25.660
ground, and we thought
that was really cool.

00:17:25.660 --> 00:17:27.930
So we decided to add
it to the SDK.

00:17:27.930 --> 00:17:30.380
So as you can see here, when a
marker is added to the map, it

00:17:30.380 --> 00:17:32.550
kind of pops up out of the
ground, which is a really good

00:17:32.550 --> 00:17:37.310
way of drawing attention to the
piece of information that

00:17:37.310 --> 00:17:38.950
you've just added to the map.

00:17:38.950 --> 00:17:41.560
We also have the ability
to color our

00:17:41.560 --> 00:17:44.220
markers, the default markers.

00:17:44.220 --> 00:17:46.310
You don't actually have to
supply a new image every time.

00:17:46.310 --> 00:17:48.660
You can use our base image, but
you can change the hue and

00:17:48.660 --> 00:17:50.400
saturation and alpha
values to have it

00:17:50.400 --> 00:17:52.240
colored however you want.

00:17:52.240 --> 00:17:53.980
MANO MARKS: This is a change for
those of you who may have

00:17:53.980 --> 00:17:58.950
started with the SDK when we
first released it, where we

00:17:58.950 --> 00:18:00.690
only had the default
red marker.

00:18:00.690 --> 00:18:02.670
LUKE MAHE: So you can see here,
I've got a little magic

00:18:02.670 --> 00:18:05.550
function which will return me
a random value for the hue.

00:18:05.550 --> 00:18:08.940
But then based on that, I can
create a marker, and then I

00:18:08.940 --> 00:18:11.430
just set the icon
to be the color.

00:18:11.430 --> 00:18:14.830
And I also set the animator to
be yes, and then it will grow

00:18:14.830 --> 00:18:18.930
out of the ground when it
gets added to the map.

00:18:18.930 --> 00:18:20.340
I also want to talk about
Core Animation.

00:18:20.340 --> 00:18:21.930
So you can see all these
demos that had

00:18:21.930 --> 00:18:24.190
really nice camera movement.

00:18:24.190 --> 00:18:27.530
It wasn't just a standard move
from A to B. I use Core

00:18:27.530 --> 00:18:29.570
Animation for a lot of these
to be able to define that I

00:18:29.570 --> 00:18:33.540
would like the camera values
to move from one specific

00:18:33.540 --> 00:18:34.650
value to another one.

00:18:34.650 --> 00:18:38.350
And I can define the style of
curve of animation that I'd

00:18:38.350 --> 00:18:40.330
like and also what kind
of values I want.

00:18:40.330 --> 00:18:42.470
So you can see here, I've got
a little tour that flies

00:18:42.470 --> 00:18:45.490
around the world on my next trip
that I'd like to go to.

00:18:45.490 --> 00:18:46.720
And then what we're
doing is I'm just

00:18:46.720 --> 00:18:47.700
zooming out the camera.

00:18:47.700 --> 00:18:51.805
And then as I go between two
locations, I can actually ease

00:18:51.805 --> 00:18:54.120
in and ease out and then move
the thing, and I have a marker

00:18:54.120 --> 00:18:55.390
that flies in.

00:18:55.390 --> 00:18:56.770
So a little bit about
the code.

00:18:56.770 --> 00:18:58.330
This is not too scary as well.

00:18:58.330 --> 00:19:01.210
We can use the curve, the
animation timing curve.

00:19:01.210 --> 00:19:03.900
So here I'm defining an ease
in and ease out function.

00:19:03.900 --> 00:19:07.730
And then using that, we can
actually create an animation.

00:19:07.730 --> 00:19:10.200
And for here, I'm actually
saying I'd like the latitude

00:19:10.200 --> 00:19:13.110
key to be animated over five
seconds, I'd like to use this

00:19:13.110 --> 00:19:15.615
curve, and I'd like to move it
to this value, and then we add

00:19:15.615 --> 00:19:16.810
it to that.

00:19:16.810 --> 00:19:18.860
The same thing as goes with the
keyframe animation, but

00:19:18.860 --> 00:19:20.350
here we can define
steps of values

00:19:20.350 --> 00:19:21.500
we'd like to go through.

00:19:21.500 --> 00:19:23.860
And we can do this for the
latitude and longitude and

00:19:23.860 --> 00:19:25.805
zoom, bearing, and
camera angle.

00:19:28.740 --> 00:19:33.560
MANO MARKS: So the final thing
is, you might have seen this

00:19:33.560 --> 00:19:36.190
during the opening when we
were actually introducing

00:19:36.190 --> 00:19:38.580
ourselves, the little puzzle
that solves itself.

00:19:38.580 --> 00:19:41.000
And actually, I'm going
to challenge you.

00:19:41.000 --> 00:19:43.490
I want you to do this
on the phone.

00:19:43.490 --> 00:19:45.560
This is actually an app.

00:19:45.560 --> 00:19:48.240
It looks like it's something
that we just created.

00:19:48.240 --> 00:19:51.776
But I'm going to challenge Luke
to try and actually--

00:19:51.776 --> 00:19:52.250
LUKE MAHE: No.

00:19:52.250 --> 00:19:53.220
MANO MARKS: You don't know.

00:19:53.220 --> 00:19:53.890
LUKE MAHE: There's a reason--

00:19:53.890 --> 00:19:57.280
MANO MARKS: Neither of us can
actually solve that puzzle.

00:19:57.280 --> 00:20:01.400
But that actually is an
application, and it takes

00:20:01.400 --> 00:20:05.280
advantage of, again, taking
advantage of the iOS platform

00:20:05.280 --> 00:20:07.720
and its ability to
generate images.

00:20:07.720 --> 00:20:07.960
LUKE MAHE: Yeah.

00:20:07.960 --> 00:20:10.480
So what we can do is we can
use this render in context

00:20:10.480 --> 00:20:14.235
method to actually render an
image of the map as it is in

00:20:14.235 --> 00:20:17.250
its current state and then
return a UI image with that.

00:20:17.250 --> 00:20:19.150
So if any of you have seen this
thing where you've got

00:20:19.150 --> 00:20:21.500
fancy, folding maps, where it
comes in from the side and you

00:20:21.500 --> 00:20:23.790
just pull it out, they're
usually going to use the same

00:20:23.790 --> 00:20:26.620
idiom because that's kind of how
it's done on the platform.

00:20:26.620 --> 00:20:30.440
And so using this method, we
can actually extend the

00:20:30.440 --> 00:20:33.780
platform so you can actually do
interesting things with it.

00:20:33.780 --> 00:20:36.110
And as long as it kind of ends
up as a Google map that you

00:20:36.110 --> 00:20:37.863
can interact with, then
that's really cool.

00:20:37.863 --> 00:20:38.690
MANO MARKS: Right.

00:20:38.690 --> 00:20:43.340
So we hope that what we've been
able to show you in this

00:20:43.340 --> 00:20:47.510
presentation is how you can
take advantage of both the

00:20:47.510 --> 00:20:53.370
native iOS platform as well as
Google Maps and some of our

00:20:53.370 --> 00:20:57.280
Google services to generate a
really rich and also very

00:20:57.280 --> 00:21:00.820
familiar experience to your
users, where your users are

00:21:00.820 --> 00:21:04.170
looking at a Google map, which
is what most of them will be

00:21:04.170 --> 00:21:07.730
expecting to see pretty
much for any map.

00:21:07.730 --> 00:21:10.890
And you take advantage of our
rich amount of data and

00:21:10.890 --> 00:21:14.910
imagery that you can incorporate
into your own

00:21:14.910 --> 00:21:16.160
application.

00:21:17.830 --> 00:21:21.840
So to get started,
developers.google.com/maps for

00:21:21.840 --> 00:21:23.610
our developer documentation.

00:21:23.610 --> 00:21:27.990
We also do Google Maps
Developer Live.

00:21:27.990 --> 00:21:31.410
So part of the Google Developer
Live program, just

00:21:31.410 --> 00:21:33.750
do /live/maps.

00:21:33.750 --> 00:21:39.670
And often it's Luke or I doing
a little five minute--

00:21:39.670 --> 00:21:43.450
five or 10-minute map shortcut
on iOS issues.

00:21:43.450 --> 00:21:47.190
So thanks very much, everyone,
for coming.

00:21:47.190 --> 00:21:47.708
And--

00:21:47.708 --> 00:21:52.970
[APPLAUSE]

00:21:52.970 --> 00:21:57.326
MANO MARKS: -you can, of course,
find us on Google+.

00:21:57.326 --> 00:21:59.680
So we'll take questions now.

00:21:59.680 --> 00:22:01.830
If you want to ask a question,
please come up to the

00:22:01.830 --> 00:22:05.695
microphone, and we will take
the question there.

00:22:09.970 --> 00:22:10.890
AUDIENCE: Hi.

00:22:10.890 --> 00:22:12.752
I'm Alex from HTC.

00:22:12.752 --> 00:22:14.050
And I'm wondering--

00:22:14.050 --> 00:22:18.660
so the previous slides about
rendering into your image.

00:22:18.660 --> 00:22:23.580
Is it possible to point top
left geocoordinate and the

00:22:23.580 --> 00:22:27.820
bottom right and zoom level
and render exactly, not

00:22:27.820 --> 00:22:31.120
exactly as the screen,
but something bigger?

00:22:31.120 --> 00:22:31.580
LUKE MAHE: No, you can't.

00:22:31.580 --> 00:22:32.400
That's not possible.

00:22:32.400 --> 00:22:32.730
AUDIENCE: No, it's
not possible.

00:22:32.730 --> 00:22:34.500
LUKE MAHE: But you could do
something interesting by using

00:22:34.500 --> 00:22:37.360
the projection object to kind
of work something out

00:22:37.360 --> 00:22:38.970
if you wanted to.

00:22:38.970 --> 00:22:42.630
But obviously, you can't take
that image and store it and

00:22:42.630 --> 00:22:43.610
keep it forever.

00:22:43.610 --> 00:22:44.160
AUDIENCE: Yeah, yeah.

00:22:44.160 --> 00:22:44.800
OK.

00:22:44.800 --> 00:22:47.840
Thank you.

00:22:47.840 --> 00:22:50.770
AUDIENCE: Sort of on a similar
note, is there a way to do the

00:22:50.770 --> 00:22:53.600
Render an Image and get an image
of a map, but do it on a

00:22:53.600 --> 00:22:54.890
background thread?

00:22:54.890 --> 00:22:56.926
So if you had like a
quickly-scrolling UI, and you

00:22:56.926 --> 00:23:00.020
wanted to like put a map inside
of that scrolling UI or

00:23:00.020 --> 00:23:01.950
something, to be able to, like,
have it render on a

00:23:01.950 --> 00:23:03.140
background thread so
you don't block--

00:23:03.140 --> 00:23:03.500
LUKE MAHE: No.

00:23:03.500 --> 00:23:05.710
Currently, the map runs in
the UI thread, so there's

00:23:05.710 --> 00:23:06.860
currently no way
of doing that.

00:23:06.860 --> 00:23:09.260
AUDIENCE: OK, thanks.

00:23:09.260 --> 00:23:12.400
AUDIENCE: Two questions related
to availability with

00:23:12.400 --> 00:23:14.580
this new API that's
out there--

00:23:14.580 --> 00:23:19.450
the offline maps feature and
Maps Engine Layer or Map Data

00:23:19.450 --> 00:23:22.150
layer-- are either of those
available in the iOS platform?

00:23:22.150 --> 00:23:23.250
LUKE MAHE: Neither of
those are currently

00:23:23.250 --> 00:23:24.860
available in the platform.

00:23:24.860 --> 00:23:26.110
MANO MARKS: That is correct.

00:23:30.050 --> 00:23:35.620
The Google Maps Engine, if you
use that, does have a WMS

00:23:35.620 --> 00:23:37.910
output, and that's actually
what we used for this tile

00:23:37.910 --> 00:23:39.530
overlay demo.

00:23:39.530 --> 00:23:42.930
We used a publicly-available map
in the Google Maps Gallery

00:23:42.930 --> 00:23:47.130
for the World at Night, the
so-called Black Marble

00:23:47.130 --> 00:23:51.860
imagery, and then generated
WMS tile overlay.

00:23:51.860 --> 00:23:54.000
And what was interesting about
that is WMS doesn't come out

00:23:54.000 --> 00:23:58.220
exactly how our tile overlay
expects to see it.

00:23:58.220 --> 00:24:01.000
And because you can--

00:24:01.000 --> 00:24:01.350
LUKE MAHE: Subclass.

00:24:01.350 --> 00:24:03.270
MANO MARKS: --implement that,
you can subclass--

00:24:03.270 --> 00:24:06.780
thank you, it was, like, I know,
my brain just shut off

00:24:06.780 --> 00:24:09.910
there for a second-- because
you can subclass the tile

00:24:09.910 --> 00:24:17.370
renderer, you can fudge it so
that that gets the right URL

00:24:17.370 --> 00:24:19.660
and pulls it into the
tile overlay.

00:24:19.660 --> 00:24:23.060
It works the same way that you
would expect it to work in the

00:24:23.060 --> 00:24:25.840
JavaScript or Android app.

00:24:25.840 --> 00:24:27.870
LUKE MAHE: You can basically
take the same URLs from

00:24:27.870 --> 00:24:30.860
Android and JavaScript
and use them in this.

00:24:30.860 --> 00:24:32.890
AUDIENCE: Is that app you had
with the fudging then

00:24:32.890 --> 00:24:35.270
available in the GIT Repository
or do you--

00:24:35.270 --> 00:24:36.740
LUKE MAHE: Yeah.

00:24:36.740 --> 00:24:37.810
We'll put that code
up somewhere.

00:24:37.810 --> 00:24:38.085
AUDIENCE: OK.

00:24:38.085 --> 00:24:40.890
Thank you.

00:24:40.890 --> 00:24:42.020
AUDIENCE: Hi.

00:24:42.020 --> 00:24:43.130
I have two questions.

00:24:43.130 --> 00:24:45.530
One is about Geofencing.

00:24:45.530 --> 00:24:47.270
In the morning you
had some demos, I

00:24:47.270 --> 00:24:48.390
think for the Android.

00:24:48.390 --> 00:24:50.720
How about for the iOS?

00:24:50.720 --> 00:24:52.220
MANO MARKS: Well, so Geofencing
was released as

00:24:52.220 --> 00:24:54.530
part of the Google Play
services, which is only

00:24:54.530 --> 00:24:56.800
available on Android.

00:24:56.800 --> 00:24:59.540
You certainly could implement
it yourself.

00:24:59.540 --> 00:25:00.430
I understand it's pretty

00:25:00.430 --> 00:25:03.320
battery-intensive to do it yourself.

00:25:03.320 --> 00:25:06.060
But currently we don't
have it available in

00:25:06.060 --> 00:25:08.410
the Google Maps SDK.

00:25:08.410 --> 00:25:12.080
AUDIENCE: Second question is
how about the indoor maps?

00:25:12.080 --> 00:25:13.970
MANO MARKS: Indoor maps?

00:25:13.970 --> 00:25:19.990
Currently we don't have indoor
maps in the iOS SDK.

00:25:19.990 --> 00:25:20.350
AUDIENCE: OK, cool.

00:25:20.350 --> 00:25:20.830
Thanks.

00:25:20.830 --> 00:25:22.080
MANO MARKS: Sure.

00:25:24.130 --> 00:25:26.900
AUDIENCE: We need to animate
our markers.

00:25:26.900 --> 00:25:29.680
Can we do that with your SDK?

00:25:29.680 --> 00:25:31.250
LUKE MAHE: Currently, the only
animation that we actually

00:25:31.250 --> 00:25:32.890
have is the grow animation.

00:25:32.890 --> 00:25:34.766
We haven't got any other
animations, and you can't

00:25:34.766 --> 00:25:35.780
supply your own yet.

00:25:35.780 --> 00:25:38.570
AUDIENCE: So we can't supply
new images regularly or--

00:25:38.570 --> 00:25:40.450
LUKE MAHE: You can change the
marker image and have whatever

00:25:40.450 --> 00:25:43.330
marker image you want if
you want to do that.

00:25:43.330 --> 00:25:45.930
Like what sort of animation are
you interested in doing?

00:25:45.930 --> 00:25:47.060
AUDIENCE: Well, there's
a few things.

00:25:47.060 --> 00:25:50.840
We need to flash some of them,
and we also need some of them

00:25:50.840 --> 00:25:53.440
to rotate reasonably often.

00:25:53.440 --> 00:25:55.410
So what we can't have is
something that flickers with

00:25:55.410 --> 00:25:56.850
destroying and remaking
new ones.

00:25:56.850 --> 00:25:57.130
LUKE MAHE: Yes.

00:25:57.130 --> 00:25:59.400
You don't actually have to
destroy or remake the marker

00:25:59.400 --> 00:26:01.660
because you actually keep a
reference to that marker now.

00:26:01.660 --> 00:26:04.090
It's not actually added to the
map and then forgotten about.

00:26:04.090 --> 00:26:05.490
You can keep that marker,
and you can keep

00:26:05.490 --> 00:26:06.796
changing the icon.

00:26:06.796 --> 00:26:07.650
AUDIENCE: OK.

00:26:07.650 --> 00:26:10.330
And another question is, can we
add our own vector layers?

00:26:10.330 --> 00:26:12.375
LUKE MAHE: Not yet.

00:26:12.375 --> 00:26:13.790
AUDIENCE: But, you said yet?

00:26:13.790 --> 00:26:16.290
LUKE MAHE: Well, no.

00:26:16.290 --> 00:26:17.100
You pushed me.

00:26:17.100 --> 00:26:17.640
AUDIENCE: OK.

00:26:17.640 --> 00:26:19.790
Thank you.

00:26:19.790 --> 00:26:21.040
MANO MARKS: Luke?

00:26:23.450 --> 00:26:26.060
Yeah.

00:26:26.060 --> 00:26:27.310
Are there any more questions?

00:26:29.440 --> 00:26:30.130
LUKE MAHE: Cool.

00:26:30.130 --> 00:26:30.290
MANO MARKS: All right.

00:26:30.290 --> 00:26:30.950
LUKE MAHE: Thank
you, everybody.

00:26:30.950 --> 00:26:31.800
MANO MARKS: All right,
thank you.

00:26:31.800 --> 00:26:35.100
[APPLAUSE]

