WEBVTT
Kind: captions
Language: en

00:00:00.500 --> 00:00:02.290
SPEAKER: We focused
on a few key things

00:00:02.290 --> 00:00:04.830
with Android Support
Library version 26,

00:00:04.830 --> 00:00:07.620
shipping new features related
to text and animation,

00:00:07.620 --> 00:00:09.690
improving parity with
the Android framework

00:00:09.690 --> 00:00:13.800
and various form factors, such
as Wear and TV, and finally,

00:00:13.800 --> 00:00:16.980
making the library leaner
by moving mean SDK to 14

00:00:16.980 --> 00:00:19.780
and dropping 1.4 K methods.

00:00:19.780 --> 00:00:23.110
So let's start by saying
what's new with text and fonts.

00:00:23.110 --> 00:00:25.560
With Support Library 26,
we have simplified working

00:00:25.560 --> 00:00:27.010
with custom fonts.

00:00:27.010 --> 00:00:29.250
You can now use them
like any other resource,

00:00:29.250 --> 00:00:31.950
placing them in a new
font resource folder.

00:00:31.950 --> 00:00:34.191
We also now support
downloadable fonts,

00:00:34.191 --> 00:00:36.190
meaning that you don't
need to bundle your phone

00:00:36.190 --> 00:00:37.510
files in your APK.

00:00:37.510 --> 00:00:39.680
Instead, the system
will fetch them for you

00:00:39.680 --> 00:00:42.750
from a font provider such
as Google Fonts provided

00:00:42.750 --> 00:00:45.220
by Google Play services.

00:00:45.220 --> 00:00:47.400
Next up before texts, emojis.

00:00:47.400 --> 00:00:50.250
You might have seen this
sad, blank, square character

00:00:50.250 --> 00:00:52.520
whenever an app can't
display an emoji.

00:00:52.520 --> 00:00:56.010
Involving Unicode standards
mean that the OS doesn't always

00:00:56.010 --> 00:00:59.360
have an up-to-date fonts to
display the newer symbols.

00:00:59.360 --> 00:01:01.380
With the emoji compat
library, your app

00:01:01.380 --> 00:01:04.349
can get backwards compatible
emoji support on devices

00:01:04.349 --> 00:01:07.020
with APL level 19 and higher.

00:01:07.020 --> 00:01:08.910
You now have three widgets--

00:01:08.910 --> 00:01:12.330
emoji edit text, emoji
text view, emoji button,

00:01:12.330 --> 00:01:14.790
but also support for
app compat widgets

00:01:14.790 --> 00:01:16.710
and helper classes
that allow you to work

00:01:16.710 --> 00:01:19.160
with your own custom widgets.

00:01:19.160 --> 00:01:22.290
Emoji compat can be configured
with either bundled or

00:01:22.290 --> 00:01:23.970
downloadable fonts.

00:01:23.970 --> 00:01:27.790
Check out the documentation
to find out how to use it.

00:01:27.790 --> 00:01:30.135
Let's say that you want the
text size of your text field

00:01:30.135 --> 00:01:32.580
to expand or contract
automatically

00:01:32.580 --> 00:01:34.350
to fill its layout.

00:01:34.350 --> 00:01:37.380
With Support Library 26,
all you need to set up

00:01:37.380 --> 00:01:39.600
is the text view autosize.

00:01:39.600 --> 00:01:43.230
You can control the granularity
to define a step size, together

00:01:43.230 --> 00:01:46.320
with a minimum and
maximum text size.

00:01:46.320 --> 00:01:50.490
Or you can provide a discrete
range of sizes to use.

00:01:50.490 --> 00:01:53.010
Next topic on our
list, animation.

00:01:53.010 --> 00:01:56.250
You can now implement animations
driven by physics forces,

00:01:56.250 --> 00:01:59.490
so being velocity-based
rather than time-based.

00:01:59.490 --> 00:02:02.520
This helps create a smooth,
natural-looking animation

00:02:02.520 --> 00:02:05.550
that can correct its course,
when the target changes.

00:02:05.550 --> 00:02:07.890
It also simplifies
hand-off between gestures

00:02:07.890 --> 00:02:09.539
and animations.

00:02:09.539 --> 00:02:12.860
We have two main types of
physics-based animations,

00:02:12.860 --> 00:02:15.270
spring and fling.

00:02:15.270 --> 00:02:17.220
Let's say you have a
view that can be dragged

00:02:17.220 --> 00:02:19.680
around the screen, but
then when you release it,

00:02:19.680 --> 00:02:21.780
you want it to go
back to its place.

00:02:21.780 --> 00:02:23.760
Using a spring animation
will make the view

00:02:23.760 --> 00:02:26.670
feel like it's being pulled back
by an invisible, but familiar

00:02:26.670 --> 00:02:27.840
force.

00:02:27.840 --> 00:02:31.080
You can customize the spring
stiffness, damping ratio,

00:02:31.080 --> 00:02:32.880
and its final position.

00:02:32.880 --> 00:02:34.980
If you want to animate
the property of an object

00:02:34.980 --> 00:02:37.470
and you want the animation
to end gradually,

00:02:37.470 --> 00:02:39.150
use the fling animation.

00:02:39.150 --> 00:02:42.630
You can customize parameters
such as the starting velocity,

00:02:42.630 --> 00:02:46.706
the friction, and the minimum
and maximum animation values.

00:02:46.706 --> 00:02:48.330
If you're working
with vector graphics,

00:02:48.330 --> 00:02:50.829
you'll be happy to hear that
some of the features introduced

00:02:50.829 --> 00:02:54.930
in your SDKs are also part
of the support library.

00:02:54.930 --> 00:02:58.230
Vector drawable compat has
a new property, fill type,

00:02:58.230 --> 00:03:01.710
that determines which regions of
the image are inside the shape,

00:03:01.710 --> 00:03:05.080
similar to the fill rule
property of the SPGs.

00:03:05.080 --> 00:03:07.950
Animated vector drawable
compat has now the ability

00:03:07.950 --> 00:03:11.490
to morph shapes and be fine
bath-based interpolators,

00:03:11.490 --> 00:03:13.440
allowing it to create
rich animations that

00:03:13.440 --> 00:03:16.320
work back to API 14.

00:03:16.320 --> 00:03:18.570
Developing for Android
Wear or Android TV?

00:03:18.570 --> 00:03:20.440
We have some good news for you.

00:03:20.440 --> 00:03:23.390
The Wear online library has now
become a full support library

00:03:23.390 --> 00:03:26.160
that contains some classes that
you might already be using,

00:03:26.160 --> 00:03:28.950
such as box inset
layout, swipe dismiss

00:03:28.950 --> 00:03:31.650
frame layout, wearable
recycler view,

00:03:31.650 --> 00:03:34.310
as well as some new components
for action and navigation

00:03:34.310 --> 00:03:35.610
drawers.

00:03:35.610 --> 00:03:38.740
Several improvements have
been made to Leanback's API,

00:03:38.740 --> 00:03:42.030
including a new video playback
element with seek support.

00:03:42.030 --> 00:03:44.730
Check out the Leanback
documentation to find out more.

00:03:44.730 --> 00:03:46.260
We have some other
notable changes

00:03:46.260 --> 00:03:48.060
in this version of
the support library.

00:03:48.060 --> 00:03:50.230
The percent support
module was deprecated.

00:03:50.230 --> 00:03:53.110
So you should do its ratios
on the ConstraintLayout widget

00:03:53.110 --> 00:03:53.693
instead.

00:03:53.693 --> 00:03:56.310
And we have a new
PreferenceDataStore API

00:03:56.310 --> 00:03:59.280
that allows you to implement
your own preference storage.

00:03:59.280 --> 00:04:02.520
But also a behavior change
for our FragmentManager--

00:04:02.520 --> 00:04:04.770
executePendingtransaction,
commitNow,

00:04:04.770 --> 00:04:07.020
and similar transaction
calls are no longer

00:04:07.020 --> 00:04:09.720
allowed during
FragmentManager state changes.

00:04:09.720 --> 00:04:13.470
Fonts, emojis, autosize text
view, physics-based animation,

00:04:13.470 --> 00:04:15.890
vector graphics,
form factor changes,

00:04:15.890 --> 00:04:18.570
and others-- that's a lot
of APIs in the new support

00:04:18.570 --> 00:04:20.490
library that allow you
to implement the best

00:04:20.490 --> 00:04:22.350
experience for users.

00:04:22.350 --> 00:04:24.540
To find out more, check
out the documentation page

00:04:24.540 --> 00:04:27.690
and the Google IO talk on
What's New in Support Library.

00:04:27.690 --> 00:04:30.440
[MUSIC PLAYING]

