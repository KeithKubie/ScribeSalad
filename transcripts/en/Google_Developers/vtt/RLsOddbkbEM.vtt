WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:48.608
[MUSIC PLAYING]

00:00:59.600 --> 00:00:59.940
VAN RIPER: Hi.

00:00:59.940 --> 00:01:02.780
This is Van Riper, the program
manager here at Google for our

00:01:02.780 --> 00:01:05.400
Google Developer Groups
worldwide.

00:01:05.400 --> 00:01:07.770
For those of you that don't
know, we have more than 400

00:01:07.770 --> 00:01:11.090
groups in over 100 countries to
date, holding meetings on

00:01:11.090 --> 00:01:15.610
average of upwards of
five meetings a day.

00:01:15.610 --> 00:01:19.110
These segments are meant to
share information with those

00:01:19.110 --> 00:01:20.240
groups and their organizers.

00:01:20.240 --> 00:01:21.600
But it's also for the
general public.

00:01:21.600 --> 00:01:23.450
So welcome any of you that
aren't currently members of

00:01:23.450 --> 00:01:24.630
our Google Developer
groups communities.

00:01:24.630 --> 00:01:27.520
But I hope you'll find
a community in

00:01:27.520 --> 00:01:28.910
your area and join.

00:01:28.910 --> 00:01:34.440
Today, I'm very happy to have
Bartholomew Furrow and Igor

00:01:34.440 --> 00:01:36.760
Naverniouk with me from
the Code Jam team.

00:01:36.760 --> 00:01:38.130
Two of the engineers.

00:01:38.130 --> 00:01:39.910
We're going to talk to them a
little bit about how they got

00:01:39.910 --> 00:01:42.950
involved with Code Jam, the
history of Code Jam, and

00:01:42.950 --> 00:01:44.650
answer some of your questions
from the Moderator.

00:01:44.650 --> 00:01:48.030
So with that, I'd like to turn
it over to Bart and Igor.

00:01:48.030 --> 00:01:48.880
BARTHOLOMEW FURROW:
Thank you, Van.

00:01:48.880 --> 00:01:49.940
I'm Bartholomew Furrow.

00:01:49.940 --> 00:01:51.994
This is Igor Naverniouk.

00:01:51.994 --> 00:01:54.920
And I've been a software
engineer at Google for around

00:01:54.920 --> 00:01:56.810
six years now.

00:01:56.810 --> 00:02:00.840
And before I came to
Google, I got a

00:02:00.840 --> 00:02:01.940
couple degrees in physics.

00:02:01.940 --> 00:02:04.010
I have a Bachelors of Science
and Physics at Queens

00:02:04.010 --> 00:02:06.610
University and a Masters of
Science and Physics at

00:02:06.610 --> 00:02:08.050
University of British
Columbia.

00:02:08.050 --> 00:02:10.090
And the way I ended up down at
Google is through competitive

00:02:10.090 --> 00:02:10.789
programming.

00:02:10.789 --> 00:02:13.340
There are a lot of different
programming contests like

00:02:13.340 --> 00:02:14.690
Google Code Jam.

00:02:14.690 --> 00:02:17.090
And it's through getting
involved in contests like

00:02:17.090 --> 00:02:20.920
that, that I built my
programming skills and ended

00:02:20.920 --> 00:02:22.810
up working here at Google.

00:02:22.810 --> 00:02:27.360
I got involved in programming
contests in 2003, I suppose,

00:02:27.360 --> 00:02:29.310
when I was doing my
bachelor's degree.

00:02:29.310 --> 00:02:32.260
I just saw a sign one day that
said there's a programming

00:02:32.260 --> 00:02:34.230
contest on Saturday in
the math building.

00:02:34.230 --> 00:02:36.160
And because I'm the kind
of guy who likes doing

00:02:36.160 --> 00:02:39.140
programming contests on
Saturdays in math buildings, I

00:02:39.140 --> 00:02:40.920
thought, why not?

00:02:40.920 --> 00:02:43.400
And from there, I sort of
parlayed my way onto my

00:02:43.400 --> 00:02:45.770
school's ACM team.

00:02:45.770 --> 00:02:47.810
We'll talk a bit about that--
it's a different contest--

00:02:47.810 --> 00:02:49.100
in a bit.

00:02:49.100 --> 00:02:52.980
And then started getting better
at these contests, and

00:02:52.980 --> 00:02:54.690
competed in the first
Google Code Jam.

00:02:54.690 --> 00:03:00.150
And so after a long road of
contests and competing, I made

00:03:00.150 --> 00:03:01.040
my way here.

00:03:01.040 --> 00:03:02.860
And now that I'm at
Google, I work on

00:03:02.860 --> 00:03:04.250
the ads quality system.

00:03:04.250 --> 00:03:06.680
So we're the folks who if you
do a search on google.com,

00:03:06.680 --> 00:03:08.590
sometimes you'll see ads above,
or to the right, or

00:03:08.590 --> 00:03:09.930
below the search results.

00:03:09.930 --> 00:03:12.050
We try to make them great.

00:03:12.050 --> 00:03:14.920
And I also have what's called
the 20% Project.

00:03:14.920 --> 00:03:18.560
20% Project is when Google
engineers spend a fifth of

00:03:18.560 --> 00:03:21.640
their time working on a pet
project, or passion project.

00:03:21.640 --> 00:03:23.850
And for me, that's Google Code
Jam, which is what we're here

00:03:23.850 --> 00:03:26.250
to talk about today.

00:03:26.250 --> 00:03:27.320
IGOR NAVERNIOUK: OK.

00:03:27.320 --> 00:03:28.870
I'm Igor.

00:03:28.870 --> 00:03:33.280
So my history is I was doing
computer science and math

00:03:33.280 --> 00:03:37.350
undergrad at the University
of British Columbia.

00:03:37.350 --> 00:03:41.630
Back in 2001, I saw a poster
that said, "free pizza and a

00:03:41.630 --> 00:03:43.790
programming competition." So
both those things, I thought,

00:03:43.790 --> 00:03:44.680
were interesting.

00:03:44.680 --> 00:03:45.590
So I showed up.

00:03:45.590 --> 00:03:49.170
And that's how I started on this
whole path of programming

00:03:49.170 --> 00:03:50.410
competitions.

00:03:50.410 --> 00:03:53.510
That was a poster for the ACM
programming competition, which

00:03:53.510 --> 00:03:57.380
is a team event for university
students.

00:03:57.380 --> 00:04:00.680
And since 2001, I
never stopped.

00:04:00.680 --> 00:04:01.630
I've been competing
in programming

00:04:01.630 --> 00:04:02.480
competitions for a while.

00:04:02.480 --> 00:04:05.300
And then I started
coaching a team.

00:04:05.300 --> 00:04:07.730
And then now, I'm working
on Code Jam.

00:04:07.730 --> 00:04:11.750
So in 2006, I did
an internship at

00:04:11.750 --> 00:04:14.090
Google in the summer.

00:04:14.090 --> 00:04:16.220
I thought that was
pretty cool.

00:04:16.220 --> 00:04:19.810
So the way I got into that is I
actually did pretty well in

00:04:19.810 --> 00:04:24.370
the Code Jam competition that
Google ran that was--

00:04:24.370 --> 00:04:26.270
back then, it wasn't run
by Google, itself.

00:04:26.270 --> 00:04:30.280
It was sponsored by Google and
ran by a different company.

00:04:30.280 --> 00:04:33.150
And in 2007, I came back
for another internship.

00:04:33.150 --> 00:04:34.220
Bartholomew was my host.

00:04:34.220 --> 00:04:39.670
And the project then was to
build a platform for Code Jam

00:04:39.670 --> 00:04:43.070
at Google in house so that
we can do it our way.

00:04:43.070 --> 00:04:43.800
So I worked on that.

00:04:43.800 --> 00:04:46.920
And since then, joined Google
full time and started working

00:04:46.920 --> 00:04:51.160
on Code Jam as my 20% Project,
similar to Bartholomew.

00:04:51.160 --> 00:04:53.280
My main project is Android.

00:04:53.280 --> 00:04:58.410
I work on all kinds of user
analytics in Android and

00:04:58.410 --> 00:05:00.750
Google Play.

00:05:00.750 --> 00:05:04.970
And I spent some of my time,
between 5% and 50% sometimes,

00:05:04.970 --> 00:05:07.540
on Code Jam.

00:05:07.540 --> 00:05:09.790
So that's my story.

00:05:09.790 --> 00:05:11.610
BARTHOLOMEW FURROW: And so for
people who don't know a lot

00:05:11.610 --> 00:05:15.130
about competitive programming
or Code Jam, in particular,

00:05:15.130 --> 00:05:17.490
let's just sort of give you
a brief introduction.

00:05:17.490 --> 00:05:21.590
So for Google Code Jam, this
isn't a hack-a-thon.

00:05:21.590 --> 00:05:24.540
What we're doing is we're
going to pose a bunch of

00:05:24.540 --> 00:05:25.880
puzzles to you.

00:05:25.880 --> 00:05:30.070
We pose between three and five
programming problems,

00:05:30.070 --> 00:05:31.410
depending on the contest.

00:05:31.410 --> 00:05:34.850
And generally speaking, they're
problems where there's

00:05:34.850 --> 00:05:38.480
some sort of a puzzle that
you're trying to solve.

00:05:38.480 --> 00:05:42.010
So to give you an example, you
can imagine that you have a

00:05:42.010 --> 00:05:43.390
chest board.

00:05:43.390 --> 00:05:46.780
And you want to put a bunch of
queens on the chest board so

00:05:46.780 --> 00:05:49.050
that none of the queens
can attack each other.

00:05:49.050 --> 00:05:51.230
Some of you might have seen that
problem when you were in

00:05:51.230 --> 00:05:52.070
high school.

00:05:52.070 --> 00:05:53.710
I remember seeing that in
high school and trying

00:05:53.710 --> 00:05:54.810
to solve it by hand.

00:05:54.810 --> 00:05:57.780
But we could say because we have
computers instead of an

00:05:57.780 --> 00:05:59.390
eight by eight chess board with
eight queens, we could do

00:05:59.390 --> 00:06:01.470
an n by n chessboard
with n queens.

00:06:01.470 --> 00:06:06.540
And we could ask you to write a
program that given n, prints

00:06:06.540 --> 00:06:09.230
out good locations for
all of the queens.

00:06:09.230 --> 00:06:10.805
So that's just one example
of the sort of problems

00:06:10.805 --> 00:06:12.030
that we might ask.

00:06:12.030 --> 00:06:14.280
And so a Code Jam round
generally lasts a couple of

00:06:14.280 --> 00:06:17.780
hours, asks you a few of these
questions, and whoever can get

00:06:17.780 --> 00:06:20.880
the most points off of solving
our problems is the

00:06:20.880 --> 00:06:21.690
winner of the round.

00:06:21.690 --> 00:06:25.560
And in the Code Jam competition,
we start off with

00:06:25.560 --> 00:06:26.750
the qualification round.

00:06:26.750 --> 00:06:29.420
Have a few more online rounds
where we gradually reduce the

00:06:29.420 --> 00:06:30.680
number of people competing.

00:06:30.680 --> 00:06:32.340
And this year we
have are onsite

00:06:32.340 --> 00:06:34.440
finals in London, England.

00:06:34.440 --> 00:06:36.820
So the top 25 in the world
will be flying

00:06:36.820 --> 00:06:39.090
to London to compete.

00:06:39.090 --> 00:06:40.310
IGOR NAVERNIOUK: So how is Code
Jam different from other

00:06:40.310 --> 00:06:41.980
programming competitions?

00:06:41.980 --> 00:06:44.830
BARTHOLOMEW FURROW:
Well, it's better.

00:06:44.830 --> 00:06:46.030
Code Jam is--

00:06:46.030 --> 00:06:48.450
well, I'd say that it's
probably the biggest

00:06:48.450 --> 00:06:50.080
algorithmic programming
competition in the world.

00:06:50.080 --> 00:06:55.080
So you go up against a lot of
people, including some of the

00:06:55.080 --> 00:06:58.480
very best in the world.

00:06:58.480 --> 00:07:01.680
We work really hard to get our
problems as great as possible.

00:07:01.680 --> 00:07:02.810
I'm sure everybody
else does, too.

00:07:02.810 --> 00:07:06.680
But I think we do a particularly
good job.

00:07:06.680 --> 00:07:09.320
And you can compete in any
programming language you like.

00:07:09.320 --> 00:07:13.340
So if you're a Ruby wizard or
particularly good at PHP,

00:07:13.340 --> 00:07:17.950
you're not just stuck with C++
and Java, which some of the

00:07:17.950 --> 00:07:19.555
other contests make you be.

00:07:19.555 --> 00:07:21.990
You can use any language
you like.

00:07:21.990 --> 00:07:23.790
It could be something that
you wrote at home.

00:07:23.790 --> 00:07:26.450
And you're your own compiler,
and you want to prove that

00:07:26.450 --> 00:07:27.430
your language really works.

00:07:27.430 --> 00:07:29.680
And this is a great
place for that.

00:07:29.680 --> 00:07:30.850
IGOR NAVERNIOUK: Yeah, we've
had people compete in some

00:07:30.850 --> 00:07:32.990
really weird programming
languages.

00:07:32.990 --> 00:07:35.790
There's one guy who's kind of
infamous for trying to solve

00:07:35.790 --> 00:07:37.400
every problem in a different
language.

00:07:37.400 --> 00:07:39.120
And he keeps choosing more
and more obscure

00:07:39.120 --> 00:07:42.160
languages over the years.

00:07:42.160 --> 00:07:43.560
Some of the ones with
funny names that I

00:07:43.560 --> 00:07:45.130
shouldn't be saying.

00:07:45.130 --> 00:07:46.750
[LAUGHTER]

00:07:46.750 --> 00:07:48.620
BARTHOLOMEW FURROW: Well, last
year he used Shakespeare,

00:07:48.620 --> 00:07:52.690
where you write what looks like
a Shakespearean play.

00:07:52.690 --> 00:07:55.750
But you write it carefully, and
it turns out to be code.

00:07:55.750 --> 00:07:57.490
And he actually solved the
problem using that, which I

00:07:57.490 --> 00:07:58.445
was impressed by.

00:07:58.445 --> 00:07:59.860
IGOR NAVERNIOUK: I think he's
done LOLCODE as well.

00:07:59.860 --> 00:08:02.900
BARTHOLOMEW FURROW: He's
done LOLCODE as well.

00:08:02.900 --> 00:08:07.740
IGOR NAVERNIOUK: So why should
you care about Code Jam?

00:08:07.740 --> 00:08:10.100
So first of all, it's fun.

00:08:10.100 --> 00:08:13.540
Second of all, I can say,
personally, I've learned a lot

00:08:13.540 --> 00:08:15.560
of things from programming
competitions.

00:08:15.560 --> 00:08:20.790
Probably more practical things
than I would have learned in

00:08:20.790 --> 00:08:24.200
classical studies in
computer science.

00:08:24.200 --> 00:08:26.090
The cool thing about programming
competitions, in

00:08:26.090 --> 00:08:29.560
general, is that you get our
self-contained problem and you

00:08:29.560 --> 00:08:33.270
have to solve it, and you have
to be sure that you solved it.

00:08:33.270 --> 00:08:34.809
It's one thing to say, yeah,
I know how to solve that.

00:08:34.809 --> 00:08:37.664
But it's another thing to just
sit down, write code that

00:08:37.664 --> 00:08:38.799
passes unit test.

00:08:38.799 --> 00:08:41.110
There's a big gap between
those two.

00:08:41.110 --> 00:08:43.590
And programming competitions
really make you prove it.

00:08:43.590 --> 00:08:45.250
Prove that you actually know
how to solve the problem.

00:08:45.250 --> 00:08:48.190
Because if you solved 99 out of
100 cases, and you have a

00:08:48.190 --> 00:08:49.600
bug somewhere, that's wrong.

00:08:49.600 --> 00:08:52.140
We give you no points for that,
which is a little harsh.

00:08:52.140 --> 00:08:55.810
And some people find that kind
of not very appealing.

00:08:55.810 --> 00:08:56.470
BARTHOLOMEW FURROW:
Demoralizing.

00:08:56.470 --> 00:08:56.750
IGOR NAVERNIOUK: Demoralizing.

00:08:56.750 --> 00:08:58.000
Yeah, it's a good point.

00:08:58.000 --> 00:08:58.540
BARTHOLOMEW FURROW: But we want
to make sure that you

00:08:58.540 --> 00:08:59.810
solve the problem
exactly right.

00:08:59.810 --> 00:09:02.790
And so this is a great way
to build strength as a

00:09:02.790 --> 00:09:03.690
programmer.

00:09:03.690 --> 00:09:07.170
I'd like to think that it builds
up your vocabulary.

00:09:07.170 --> 00:09:10.260
Once you can solve more problems
with more and more

00:09:10.260 --> 00:09:14.340
ease, then suddenly the things
that you come across at work--

00:09:14.340 --> 00:09:18.320
if tomorrow, I came across
at work an nCUBE dynamic

00:09:18.320 --> 00:09:20.850
programming algorithm,
I would just do it.

00:09:20.850 --> 00:09:23.170
I wouldn't think that that was a
particularly difficult thing

00:09:23.170 --> 00:09:24.100
to come across.

00:09:24.100 --> 00:09:25.840
Whereas before programming
competitions, that would have

00:09:25.840 --> 00:09:28.880
been, well, maybe I can find an
approximation or a quicker

00:09:28.880 --> 00:09:30.350
way around it.

00:09:30.350 --> 00:09:32.140
But now, you just--

00:09:32.140 --> 00:09:33.680
it's just an nCUBE dynamic
programming problem.

00:09:33.680 --> 00:09:35.120
You just solve it.

00:09:35.120 --> 00:09:39.670
So I think it builds your
ability to work from day to

00:09:39.670 --> 00:09:42.210
day, particularly if you use
in Code Jam the programming

00:09:42.210 --> 00:09:45.840
language that you use at work.

00:09:45.840 --> 00:09:49.680
And another thing is that
it's really good for job

00:09:49.680 --> 00:09:50.560
interviews.

00:09:50.560 --> 00:09:55.260
For people who interview in
technical interviews, you will

00:09:55.260 --> 00:09:58.460
often get asked a question
of the sort that

00:09:58.460 --> 00:09:59.760
we ask in Code Jam.

00:09:59.760 --> 00:10:03.350
Solve this self-contained,
simple problem, and then write

00:10:03.350 --> 00:10:04.230
code for it.

00:10:04.230 --> 00:10:07.300
And if you have been competing
in Code Jam or other contests,

00:10:07.300 --> 00:10:08.610
then you're an expert at that.

00:10:08.610 --> 00:10:11.250
Then you really know
how to do that.

00:10:11.250 --> 00:10:14.920
And you go into an interview
and you can blow away those

00:10:14.920 --> 00:10:17.780
algorithmic questions.

00:10:17.780 --> 00:10:18.740
IGOR NAVERNIOUK: Yep.

00:10:18.740 --> 00:10:21.330
So on interviews, that's
a really good point.

00:10:24.030 --> 00:10:25.180
There are some questions--

00:10:25.180 --> 00:10:27.620
so I interview a lot of
people at Google.

00:10:27.620 --> 00:10:30.210
I think a lot of engineers
do that.

00:10:30.210 --> 00:10:32.520
And there are some
questions that

00:10:32.520 --> 00:10:34.210
sometimes I ask a candidate.

00:10:34.210 --> 00:10:36.860
And candidates who have done
programming competitions

00:10:36.860 --> 00:10:38.640
before really get
it immediately.

00:10:38.640 --> 00:10:39.670
And others struggle.

00:10:39.670 --> 00:10:43.340
Like, for example, I ask
a programming problem.

00:10:43.340 --> 00:10:45.090
And I like people
to write code.

00:10:45.090 --> 00:10:47.630
And then I ask, how do
you test this code?

00:10:47.630 --> 00:10:51.060
So some people with general
programming experience can get

00:10:51.060 --> 00:10:51.480
that right.

00:10:51.480 --> 00:10:55.060
But then the next question is,
so how big of an input can

00:10:55.060 --> 00:10:56.420
this code handle?

00:10:56.420 --> 00:10:58.550
And that usually really
puzzles people.

00:10:58.550 --> 00:11:01.270
They say, well, I know
this is linear time.

00:11:01.270 --> 00:11:02.230
So--

00:11:02.230 --> 00:11:04.100
and then they don't know
what to say next.

00:11:04.100 --> 00:11:07.160
But somebody with programming
contest experience can

00:11:07.160 --> 00:11:11.000
immediately say, OK, so this
is an algorithm that, let's

00:11:11.000 --> 00:11:13.420
say, finds blobs and images
or something.

00:11:13.420 --> 00:11:16.070
And if you have this experience,
you can say, OK,

00:11:16.070 --> 00:11:18.070
on images of say 1,000 by
1,000, this will work.

00:11:18.070 --> 00:11:21.610
On a million by a million, this
will definitely not work.

00:11:21.610 --> 00:11:23.430
This is really useful in
day-to-day life, as well.

00:11:23.430 --> 00:11:25.410
So if you're writing a piece
of code, you have to have a

00:11:25.410 --> 00:11:27.340
really good understanding of
what kinds of inputs it can

00:11:27.340 --> 00:11:29.880
handle and what kinds of
situations it applies to.

00:11:29.880 --> 00:11:34.080
So it means understanding a
full stack from high level

00:11:34.080 --> 00:11:37.700
concepts in programming
languages to really down at

00:11:37.700 --> 00:11:39.910
the level of machine code.

00:11:39.910 --> 00:11:42.460
How fast is this thing
actually running?

00:11:42.460 --> 00:11:46.100
And programming competitions
make you understand that whole

00:11:46.100 --> 00:11:48.350
range because otherwise, it's
really easy to write some

00:11:48.350 --> 00:11:51.220
code, and then try to solve a
problem and find out that it's

00:11:51.220 --> 00:11:53.680
just going to run forever.

00:11:53.680 --> 00:11:54.900
So that's one of the examples.

00:11:54.900 --> 00:11:56.040
BARTHOLOMEW FURROW: It give
you a lot of practice

00:11:56.040 --> 00:11:56.990
in that sort of--

00:11:56.990 --> 00:11:58.130
IGOR NAVERNIOUK: It also gives
you a lot of confidence that

00:11:58.130 --> 00:11:59.680
you actually get these
things right.

00:11:59.680 --> 00:12:01.400
Because you may have an
idea that OK, maybe

00:12:01.400 --> 00:12:02.410
this is fast algorithm.

00:12:02.410 --> 00:12:04.490
This is not a very
fast algorithm.

00:12:04.490 --> 00:12:06.230
But if you can put concrete
numbers on it, it gives you a

00:12:06.230 --> 00:12:08.020
lot of confidence to say,
yeah, I actually

00:12:08.020 --> 00:12:09.170
know how to do this.

00:12:09.170 --> 00:12:11.620
If you give me this problem,
I can go and solve this.

00:12:11.620 --> 00:12:12.990
And I don't just tell
you how to solve it.

00:12:12.990 --> 00:12:16.120
I actually write code, and
we can test it out.

00:12:16.120 --> 00:12:19.620
So it makes things go a lot
faster and smoother in

00:12:19.620 --> 00:12:22.980
day-to-day work.

00:12:22.980 --> 00:12:23.810
BARTHOLOMEW FURROW: For sure.

00:12:23.810 --> 00:12:26.440
VAN RIPER: So would you like to
take a few of the questions

00:12:26.440 --> 00:12:27.740
from the moderator now?

00:12:27.740 --> 00:12:28.450
IGOR NAVERNIOUK: Sure.

00:12:28.450 --> 00:12:30.080
BARTHOLOMEW FURROW: That's
a great idea.

00:12:30.080 --> 00:12:32.450
I'll read out this first one.

00:12:32.450 --> 00:12:35.150
So why do you think some
countries, like Russia, Japan,

00:12:35.150 --> 00:12:36.410
Poland, and China,
have more top

00:12:36.410 --> 00:12:38.200
competitors than other countries?

00:12:38.200 --> 00:12:40.370
This also happens in other
contests like the ACM

00:12:40.370 --> 00:12:42.470
International Collegiate
Programming Contest.

00:12:42.470 --> 00:12:45.460
What's missing from
other countries?

00:12:45.460 --> 00:12:46.650
IGOR NAVERNIOUK: I wouldn't say
there's something missing

00:12:46.650 --> 00:12:47.280
from other countries.

00:12:47.280 --> 00:12:49.630
I think there are some things
that these countries do well.

00:12:52.400 --> 00:12:54.510
So I can speak about
Russia because I

00:12:54.510 --> 00:12:56.590
know a bit about that.

00:12:56.590 --> 00:12:59.690
So the general education system
focuses a lot on math

00:12:59.690 --> 00:13:04.050
and science and precise
disciplines like that, a lot

00:13:04.050 --> 00:13:06.710
more so than schools
in Canada or United

00:13:06.710 --> 00:13:08.230
States focus on that.

00:13:08.230 --> 00:13:10.830
That's not necessarily a good
thing or correct way to do

00:13:10.830 --> 00:13:13.890
things, but it's definitely
helping people get better at

00:13:13.890 --> 00:13:16.980
programming competitions
and math competitions.

00:13:16.980 --> 00:13:18.530
Competitions, in general.

00:13:18.530 --> 00:13:21.800
Sort of the spirit of
competition is nourished and

00:13:21.800 --> 00:13:22.570
encouraged.

00:13:22.570 --> 00:13:25.240
We had lots of different
internal competitions in

00:13:25.240 --> 00:13:29.240
school back in Russia.

00:13:29.240 --> 00:13:31.260
So I think that's one thing that
they do differently, not

00:13:31.260 --> 00:13:31.920
necessarily better.

00:13:31.920 --> 00:13:35.090
But it helps people get better
programming [INAUDIBLE].

00:13:35.090 --> 00:13:35.900
BARTHOLOMEW FURROW: It works
for programming contests.

00:13:35.900 --> 00:13:36.120
IGOR NAVERNIOUK: Yes.

00:13:36.120 --> 00:13:38.050
BARTHOLOMEW FURROW: And they
also take these things very

00:13:38.050 --> 00:13:40.780
seriously at the university
level.

00:13:40.780 --> 00:13:43.800
The ACM-ICPC is this
team event.

00:13:43.800 --> 00:13:45.610
And teams represent
universities.

00:13:45.610 --> 00:13:47.890
And so some universities take
it seriously enough that, I

00:13:47.890 --> 00:13:51.410
think, in some of the Chinese
universities, if you join the

00:13:51.410 --> 00:13:54.080
programing team, that's worth
two credits for the semester.

00:13:54.080 --> 00:13:56.570
So instead of taking two
classes, you take the

00:13:56.570 --> 00:13:58.590
Preparing for Programming
Contest class.

00:13:58.590 --> 00:14:01.820
And I don't think that's the
case in very many, or maybe

00:14:01.820 --> 00:14:04.150
even any, universities
in North America.

00:14:04.150 --> 00:14:07.830
So I think that maybe the
overall summary would be that

00:14:07.830 --> 00:14:10.410
in general, schools take
programming contests very

00:14:10.410 --> 00:14:14.750
seriously, or much more
seriously, in these countries

00:14:14.750 --> 00:14:18.330
than they do in Canada and
the United States.

00:14:18.330 --> 00:14:22.210
And I think the schools here
don't really pay a whole lot

00:14:22.210 --> 00:14:23.750
of attention.

00:14:23.750 --> 00:14:24.970
IGOR NAVERNIOUK: There's another
thing I could say

00:14:24.970 --> 00:14:25.490
about that.

00:14:25.490 --> 00:14:28.540
So the questioner interestingly
mentions Russia,

00:14:28.540 --> 00:14:30.040
Japan, Poland, and China.

00:14:30.040 --> 00:14:32.390
And if you know some history of
programming competitions,

00:14:32.390 --> 00:14:34.570
Japan is actually very
new on that list.

00:14:34.570 --> 00:14:37.100
If you look back maybe five
years, it would have been

00:14:37.100 --> 00:14:39.080
Russia, Poland, and China.

00:14:39.080 --> 00:14:42.660
Japan was nowhere near the top
of any scoreboard of any major

00:14:42.660 --> 00:14:43.430
programming competition.

00:14:43.430 --> 00:14:44.550
But then something changed.

00:14:44.550 --> 00:14:46.780
And I'm not sure exactly
what it is.

00:14:46.780 --> 00:14:48.820
But I think what this
says is that

00:14:48.820 --> 00:14:50.450
community has a huge effect.

00:14:50.450 --> 00:14:54.780
So once you have a few
superstars from a country do

00:14:54.780 --> 00:14:58.310
really well in competitions,
then they start growing this

00:14:58.310 --> 00:15:00.630
community of other competitors
around them.

00:15:00.630 --> 00:15:02.290
And I've seen this happen in
universities, and I've seen

00:15:02.290 --> 00:15:03.510
this happen in whole
countries.

00:15:03.510 --> 00:15:04.910
So Japan is a great example.

00:15:04.910 --> 00:15:08.450
And now Japanese contestants do
extremely well in Code Jam

00:15:08.450 --> 00:15:10.400
and TopCoder and other
programming competitions.

00:15:10.400 --> 00:15:10.970
BARTHOLOMEW FURROW:
That's right.

00:15:10.970 --> 00:15:14.970
We had, if I'm not remembering
correctly, in 2011, we had our

00:15:14.970 --> 00:15:17.670
world finals for Code Jam
in Tokyo, and a Japanese

00:15:17.670 --> 00:15:20.070
competitor won the contest,
which was a first for us, but

00:15:20.070 --> 00:15:21.320
I imagine not a last.

00:15:24.270 --> 00:15:27.490
So the next question is, how
much do you think cognitive

00:15:27.490 --> 00:15:31.480
skills affect someone's
peak performance?

00:15:31.480 --> 00:15:33.570
Are people's capacity and
competitive programming

00:15:33.570 --> 00:15:36.065
limited to their natural or
genetic intelligence, or can

00:15:36.065 --> 00:15:37.230
they get better training?

00:15:37.230 --> 00:15:39.440
For example, achieving a
red color on TopCoder.

00:15:39.440 --> 00:15:42.010
TopCoder, by the way, is another
programming contest.

00:15:42.010 --> 00:15:44.505
They're the company that Google
went to in 2003 to run

00:15:44.505 --> 00:15:49.200
the first Code Jam before Igor
and I and our cohorts took it

00:15:49.200 --> 00:15:52.050
over for Google in 2008.

00:15:52.050 --> 00:15:56.990
I would say that hard work
is huge in this.

00:15:56.990 --> 00:15:59.330
I was recently having a
conversation with Petr

00:15:59.330 --> 00:16:02.750
Mitrichev, who is possibly the
best competitor in the world

00:16:02.750 --> 00:16:04.460
at programming contests.

00:16:04.460 --> 00:16:06.480
And I asked him--

00:16:06.480 --> 00:16:08.000
I needed a list of the
contests that he

00:16:08.000 --> 00:16:09.200
participated in.

00:16:09.200 --> 00:16:13.160
And I've participated in Code
Jam, ACM programming contest,

00:16:13.160 --> 00:16:13.770
and TopCoder.

00:16:13.770 --> 00:16:15.100
And those are essentially
the ones that I've

00:16:15.100 --> 00:16:16.050
participated in.

00:16:16.050 --> 00:16:18.290
He sent me 30 at least.

00:16:18.290 --> 00:16:19.890
It may have been closer to 50.

00:16:19.890 --> 00:16:22.610
So he is someone who is at the
top of the world because he

00:16:22.610 --> 00:16:23.630
works very hard.

00:16:23.630 --> 00:16:24.390
Now he's brilliant.

00:16:24.390 --> 00:16:25.790
He's a very intelligent
person.

00:16:25.790 --> 00:16:27.690
And there's no question that
that plays a role.

00:16:27.690 --> 00:16:30.380
But he's passionate about it,
and he works extremely hard.

00:16:30.380 --> 00:16:34.030
And that's why he's such
a good contestant.

00:16:34.030 --> 00:16:36.340
I'm sure that you can find
examples in both directions

00:16:36.340 --> 00:16:39.190
for people who maybe don't
consider themselves to be

00:16:39.190 --> 00:16:41.770
brilliant, but are very hard
workers and have reached the

00:16:41.770 --> 00:16:43.210
upper echelons.

00:16:43.210 --> 00:16:46.480
And then you get people who are
14, and they're among the

00:16:46.480 --> 00:16:47.150
best in the world.

00:16:47.150 --> 00:16:52.770
There's a Belarusian,
I think, Gennady--

00:16:52.770 --> 00:16:52.950
IGOR NAVERNIOUK: Korotkevich.

00:16:52.950 --> 00:16:53.800
BARTHOLOMEW FURROW: Thank you.

00:16:53.800 --> 00:16:57.880
Who, at the age of 14, was
winning programming contests.

00:16:57.880 --> 00:16:59.950
Global programming contests.

00:16:59.950 --> 00:17:03.030
So there's definitely
something to be

00:17:03.030 --> 00:17:04.050
said from both sides.

00:17:04.050 --> 00:17:06.550
But I think that if you are the
kind of person who finds

00:17:06.550 --> 00:17:09.190
this interesting, you are almost
certainly smart enough

00:17:09.190 --> 00:17:12.470
with enough hard work to
hit the upper ends.

00:17:12.470 --> 00:17:15.640
Because even the people at the
upper ends don't do this--

00:17:15.640 --> 00:17:16.425
and it's not their job.

00:17:16.425 --> 00:17:16.710
Right?

00:17:16.710 --> 00:17:17.560
They do this as a hobby.

00:17:17.560 --> 00:17:19.450
They do this in the evenings.

00:17:19.450 --> 00:17:21.579
And so if you were really
passionate about it, you could

00:17:21.579 --> 00:17:25.260
spend your evenings on it,
too, and you'd get there.

00:17:25.260 --> 00:17:25.480
IGOR NAVERNIOUK: Yeah.

00:17:25.480 --> 00:17:27.510
I'd say it's like
anything else.

00:17:27.510 --> 00:17:30.070
Some people are naturally
greater or have some skills

00:17:30.070 --> 00:17:31.170
that make them naturally good.

00:17:31.170 --> 00:17:33.500
Some people work really hard
and get better at it.

00:17:33.500 --> 00:17:35.330
The people who are the best,
they're usually some kind of

00:17:35.330 --> 00:17:36.460
combination of both.

00:17:36.460 --> 00:17:38.220
They have some natural
skill, and they work

00:17:38.220 --> 00:17:38.900
really hard at it.

00:17:38.900 --> 00:17:40.410
That's how they become the
best in the world.

00:17:43.220 --> 00:17:43.590
Yeah.

00:17:43.590 --> 00:17:45.490
I guess we can move on
to the next one.

00:17:45.490 --> 00:17:45.750
BARTHOLOMEW FURROW: All right.

00:17:45.750 --> 00:17:46.330
So the next one.

00:17:46.330 --> 00:17:47.990
We've kind of answered the first
part of the question,

00:17:47.990 --> 00:17:49.940
which is does competitive
programming help you in your

00:17:49.940 --> 00:17:50.710
every day job?

00:17:50.710 --> 00:17:52.330
And how so?

00:17:52.330 --> 00:17:55.110
I talked a little bit about
how it increases your

00:17:55.110 --> 00:17:59.220
vocabulary of things that
you have an easier time

00:17:59.220 --> 00:17:59.990
writing code for.

00:17:59.990 --> 00:18:02.980
And so it's more natural to do
more complicated tasks because

00:18:02.980 --> 00:18:05.190
the building blocks
are bigger.

00:18:05.190 --> 00:18:07.600
The next part of the question
is, do you imagine yourself in

00:18:07.600 --> 00:18:10.710
your current position, role, or
company without ever having

00:18:10.710 --> 00:18:12.860
participated in this kind
of competition?

00:18:12.860 --> 00:18:15.080
Igor, do you want to
start on this one?

00:18:15.080 --> 00:18:16.220
IGOR NAVERNIOUK: Probably not.

00:18:16.220 --> 00:18:20.910
So I got my first internship at
Google after competing in

00:18:20.910 --> 00:18:22.520
Code Jam and getting
to the finals.

00:18:22.520 --> 00:18:26.060
And that's how I got to Google
in the first place.

00:18:26.060 --> 00:18:28.820
In general, I think I would
have a hard time passing

00:18:28.820 --> 00:18:30.580
interviews without having
done lots of programming

00:18:30.580 --> 00:18:31.760
competitions.

00:18:31.760 --> 00:18:34.210
When I was interviewing at
Google, pretty much every

00:18:34.210 --> 00:18:36.670
question they asked me that I
had to write code for, I've

00:18:36.670 --> 00:18:37.590
seen before.

00:18:37.590 --> 00:18:38.770
And I told them that.

00:18:38.770 --> 00:18:39.130
It's like, all right.

00:18:39.130 --> 00:18:39.820
Yeah, I've seen that.

00:18:39.820 --> 00:18:40.910
Here's how you write the code.

00:18:40.910 --> 00:18:42.120
And they asked me the
next question.

00:18:42.120 --> 00:18:42.660
It's like, oh yeah.

00:18:42.660 --> 00:18:43.705
I've seen that before
in contests.

00:18:43.705 --> 00:18:45.060
Here's how you write the code.

00:18:45.060 --> 00:18:47.190
And then the interviewers
ran out of questions.

00:18:47.190 --> 00:18:48.320
[LAUGHTER]

00:18:48.320 --> 00:18:49.590
BARTHOLOMEW FURROW:
That's good.

00:18:49.590 --> 00:18:50.840
IGOR NAVERNIOUK: That's
what you want to have.

00:18:52.980 --> 00:18:55.720
Maybe there was some other way
I could have ended up here.

00:18:55.720 --> 00:18:57.600
But I don't really see it.

00:18:57.600 --> 00:19:00.590
It certainly was a lot easier
having had that experience.

00:19:00.590 --> 00:19:02.900
Maybe "easier" is not the word
because I spent a lot of time

00:19:02.900 --> 00:19:05.820
in programming competitions,
solving thousands of problems

00:19:05.820 --> 00:19:08.530
on websites that was fun.

00:19:08.530 --> 00:19:11.580
But it also had this
wonderful benefit.

00:19:11.580 --> 00:19:14.164
BARTHOLOMEW FURROW: Yeah,
and I think--

00:19:14.164 --> 00:19:14.580
Shoot.

00:19:14.580 --> 00:19:15.800
I was going to say something
about what you just said.

00:19:15.800 --> 00:19:16.650
But I've forgotten.

00:19:16.650 --> 00:19:18.200
IGOR NAVERNIOUK: Well, your
story is similar to that.

00:19:18.200 --> 00:19:19.870
BARTHOLOMEW FURROW: Yeah, I'll
talk about my own experience.

00:19:19.870 --> 00:19:23.830
So as I mentioned before, I
have degrees in physics.

00:19:23.830 --> 00:19:26.170
I took a couple of courses
in computer science

00:19:26.170 --> 00:19:26.910
when I was an undergrad.

00:19:26.910 --> 00:19:30.530
And I thought, oh this
is really neat.

00:19:30.530 --> 00:19:33.560
I kind of like writing programs,
if only there were

00:19:33.560 --> 00:19:35.960
actually something
I wanted to do.

00:19:35.960 --> 00:19:38.620
If only there were a problem
that I wanted to solve.

00:19:38.620 --> 00:19:40.420
And then I discovered these
programming competitions.

00:19:40.420 --> 00:19:43.130
And then all a sudden there
were thousands of problems

00:19:43.130 --> 00:19:44.180
that I wanted to solve.

00:19:44.180 --> 00:19:46.820
Just look one up, write out the
code for it, and solve it.

00:19:46.820 --> 00:19:50.200
So to me, that's very enticing
and exciting.

00:19:50.200 --> 00:19:53.170
And that's what really got me
past the stage of just being a

00:19:53.170 --> 00:19:55.310
little bit interested in
computer science, and to the

00:19:55.310 --> 00:20:00.315
point where I was seriously
considering it as a career.

00:20:00.315 --> 00:20:02.460
Oh, I've remembered what I
wanted to say about your

00:20:02.460 --> 00:20:04.540
point, Igor.

00:20:04.540 --> 00:20:06.970
By no means is competitive
programming the only way to

00:20:06.970 --> 00:20:08.580
get good at Google interviews.

00:20:08.580 --> 00:20:10.240
If you're the kind of person
who works on a lot of open

00:20:10.240 --> 00:20:13.390
source projects, or you're a
professional coder, then

00:20:13.390 --> 00:20:15.060
chances are you've done
quite a lot of coding.

00:20:15.060 --> 00:20:17.650
You've done quite a lot of
thinking about some of the

00:20:17.650 --> 00:20:21.290
kinds of problems that Google
interviewers are

00:20:21.290 --> 00:20:23.020
likely to ask you.

00:20:23.020 --> 00:20:25.225
On the other hand, I think for
interviews, in particular, I

00:20:25.225 --> 00:20:27.220
think competitive programming
is particularly good.

00:20:27.220 --> 00:20:32.320
But for day-to-day work, there's
a big old layer on top

00:20:32.320 --> 00:20:36.980
of that that makes it more than
exclusively what we do in

00:20:36.980 --> 00:20:38.900
programming contests.

00:20:38.900 --> 00:20:41.970
So I mentioned that programming
contests are how I

00:20:41.970 --> 00:20:43.670
got involved in computer
science.

00:20:43.670 --> 00:20:45.880
But it actually goes a little
bit deeper than that.

00:20:45.880 --> 00:20:49.810
So in 2003, I competed in
the first Code Jam.

00:20:49.810 --> 00:20:51.870
And I wasn't actually
good enough to

00:20:51.870 --> 00:20:52.730
make it to the finals.

00:20:52.730 --> 00:20:54.000
But I got lucky.

00:20:54.000 --> 00:20:57.270
So I made my way into
the finals by a

00:20:57.270 --> 00:20:58.840
little bit of a fluke.

00:20:58.840 --> 00:21:00.610
And one of the things I've
discovered is that I really

00:21:00.610 --> 00:21:02.100
loved hanging out with
the people who

00:21:02.100 --> 00:21:03.320
do programming contests.

00:21:03.320 --> 00:21:05.230
There's some really interesting
people.

00:21:05.230 --> 00:21:09.550
And coming from a physics
background, I love those

00:21:09.550 --> 00:21:10.070
people, too.

00:21:10.070 --> 00:21:13.960
But these competitive
programmers, they love board

00:21:13.960 --> 00:21:14.900
games and card games.

00:21:14.900 --> 00:21:16.080
They love logic puzzles.

00:21:16.080 --> 00:21:18.080
They love thinking
about algorithms.

00:21:18.080 --> 00:21:21.810
It was just I finally
found my people.

00:21:21.810 --> 00:21:24.450
And then I thought, well maybe
Google would be a nice place

00:21:24.450 --> 00:21:27.210
to work if there are people
like that around here.

00:21:27.210 --> 00:21:30.150
And so that's how I ended up
applying for an internship.

00:21:30.150 --> 00:21:31.700
And then after that, I did
another internship.

00:21:31.700 --> 00:21:34.500
And then after that, I
came here full time.

00:21:34.500 --> 00:21:38.280
But in addition to that, I can
also credit Code Jam and--

00:21:38.280 --> 00:21:40.240
well not just Code Jam, but
other programming contests--

00:21:40.240 --> 00:21:44.020
for a lot more than that because
in 2004, I went to the

00:21:44.020 --> 00:21:45.890
finals of the ACM International
Collegiate

00:21:45.890 --> 00:21:49.520
Programming Contest in Prague.

00:21:49.520 --> 00:21:53.090
And I met the other Canadian
competitors there.

00:21:53.090 --> 00:21:54.350
Igor was actually one.

00:21:54.350 --> 00:21:56.650
And Igor would be my team
mate in the next year.

00:21:56.650 --> 00:21:58.480
But I also met a competitor
from the University of

00:21:58.480 --> 00:22:03.170
Calgary, whom I would later
end up marrying.

00:22:03.170 --> 00:22:05.770
So this competitive programming
has had a really

00:22:05.770 --> 00:22:07.110
big impact on my life.

00:22:12.510 --> 00:22:14.590
IGOR NAVERNIOUK: So which
question are we on?

00:22:14.590 --> 00:22:16.792
BARTHOLOMEW FURROW:
Zack Baker here.

00:22:16.792 --> 00:22:18.300
IGOR NAVERNIOUK: Are there any
online courses for competitive

00:22:18.300 --> 00:22:18.650
programming?

00:22:18.650 --> 00:22:19.840
And have you considered
creating or

00:22:19.840 --> 00:22:22.030
contributing to a new one?

00:22:22.030 --> 00:22:24.430
I don't know of any online
courses, per se.

00:22:24.430 --> 00:22:26.410
But there are a few things
that you can do online.

00:22:26.410 --> 00:22:27.790
There are actually lots of
things you can do online to

00:22:27.790 --> 00:22:29.860
get better at programming
competitions.

00:22:29.860 --> 00:22:31.620
You could look at
past contests.

00:22:31.620 --> 00:22:32.860
Lots of them are online.

00:22:32.860 --> 00:22:35.490
You can try to solve problems
from past contests.

00:22:35.490 --> 00:22:39.260
There are plenty of blogs and
different websites devoted to

00:22:39.260 --> 00:22:41.750
ranking problems by difficulty
and making--

00:22:41.750 --> 00:22:43.880
I'm sure you can find problems
that you're interested in.

00:22:43.880 --> 00:22:47.050
If you are really interested in
graph algorithms, I would

00:22:47.050 --> 00:22:50.860
say one way to get better at it
is to read a book on graph

00:22:50.860 --> 00:22:51.550
algorithms.

00:22:51.550 --> 00:22:53.700
Another way is to solve a bunch
of graph problems in

00:22:53.700 --> 00:22:54.450
programming competitions.

00:22:54.450 --> 00:22:57.720
And there are websites, that'll
let you find those.

00:22:57.720 --> 00:22:59.760
When I was an undergrad at
University of British

00:22:59.760 --> 00:23:02.090
Columbia, I actually taught
a course on programming

00:23:02.090 --> 00:23:05.080
competitions because there's so
many interesting problems

00:23:05.080 --> 00:23:07.590
that you see there and so many
different algorithmic

00:23:07.590 --> 00:23:09.530
techniques that you can use to
solve problems, that you don't

00:23:09.530 --> 00:23:12.820
really learn about in
algorithms courses.

00:23:12.820 --> 00:23:15.620
For example, there are a bunch
of ways to solve problems

00:23:15.620 --> 00:23:17.510
using brute force that
are smarter than

00:23:17.510 --> 00:23:20.250
just dumb brute force.

00:23:20.250 --> 00:23:22.680
And sometimes, actually, in
real life, you run into

00:23:22.680 --> 00:23:24.410
problems that are NP-Hard.

00:23:24.410 --> 00:23:27.030
And if you just have a
theoretical background about

00:23:27.030 --> 00:23:30.560
NP-Hard problems, you can sort
of say, well, we can give up.

00:23:30.560 --> 00:23:33.570
Or we can try to find some
approximation maybe.

00:23:33.570 --> 00:23:34.970
But yeah, this is
a hard problem.

00:23:34.970 --> 00:23:36.200
Nobody knows how to solve it.

00:23:36.200 --> 00:23:39.010
Another way to do that is to
say, well, what is the best

00:23:39.010 --> 00:23:39.930
known algorithm?

00:23:39.930 --> 00:23:42.180
Or what are some tricks that we
can use to actually go and

00:23:42.180 --> 00:23:43.580
solve this problem that
everybody thinks is

00:23:43.580 --> 00:23:44.690
impossible to solve?

00:23:44.690 --> 00:23:46.380
And there are a bunch of these
tricks that you learn about in

00:23:46.380 --> 00:23:47.420
programming competitions.

00:23:47.420 --> 00:23:49.120
BARTHOLOMEW FURROW: Not that
they make a polynomial mind.

00:23:49.120 --> 00:23:52.400
But you can often cut n in
half effectively for the

00:23:52.400 --> 00:23:55.260
purposes of solving
the problem.

00:23:55.260 --> 00:23:55.900
IGOR NAVERNIOUK: So yeah.

00:23:55.900 --> 00:23:57.050
There are plenty of
online courses.

00:23:57.050 --> 00:23:58.302
Just look.

00:23:58.302 --> 00:23:59.860
TopCoder.com is a great
place to start.

00:23:59.860 --> 00:24:01.640
The Code Jam website is actually
not a bad place to

00:24:01.640 --> 00:24:02.460
start either.

00:24:02.460 --> 00:24:05.550
We have lots of rounds
that we post online.

00:24:05.550 --> 00:24:07.840
Past rounds, including
all the problems.

00:24:07.840 --> 00:24:10.880
And you can even download
solutions of anybody who's

00:24:10.880 --> 00:24:12.910
solved this problem before.

00:24:12.910 --> 00:24:14.550
If you start with the early
rounds of the tournament,

00:24:14.550 --> 00:24:15.570
you'll see easier problems.

00:24:15.570 --> 00:24:18.545
If you move to the finals, you
see really hard problems.

00:24:18.545 --> 00:24:19.180
BARTHOLOMEW FURROW:
That's right.

00:24:19.180 --> 00:24:19.770
IGOR NAVERNIOUK: Find
your place.

00:24:19.770 --> 00:24:20.860
BARTHOLOMEW FURROW: And because
we haven't plugged the

00:24:20.860 --> 00:24:24.520
website yet,
code.google.com/codejam.

00:24:24.520 --> 00:24:27.340
So if you go to the Code Jam
website, you'll also see that

00:24:27.340 --> 00:24:31.260
we have registration open for
Code Jam 2013, which is the

00:24:31.260 --> 00:24:33.490
contest where the finals
are in London.

00:24:33.490 --> 00:24:37.160
And this is, I think, a really
great opportunity for people

00:24:37.160 --> 00:24:39.930
to just try this out in a
competitive environment.

00:24:39.930 --> 00:24:42.330
And it really gives you an
opportunity to see how great

00:24:42.330 --> 00:24:45.910
some people are at it and
to measure your own

00:24:45.910 --> 00:24:47.650
skill at it, as well.

00:24:47.650 --> 00:24:50.690
And as we've mentioned for the
earlier contest, it only gets

00:24:50.690 --> 00:24:51.940
better with time and
with practice.

00:24:56.630 --> 00:24:57.170
IGOR NAVERNIOUK:
Next question.

00:24:57.170 --> 00:24:58.580
What was the first coding
competition you

00:24:58.580 --> 00:24:59.600
participated in?

00:24:59.600 --> 00:25:01.130
What language did you use?

00:25:01.130 --> 00:25:03.460
And what point did you know
you'd be addicted to coding

00:25:03.460 --> 00:25:04.715
competitions?

00:25:04.715 --> 00:25:07.960
BARTHOLOMEW FURROW: Oh, you
know us so well, erbedont.

00:25:07.960 --> 00:25:12.430
I first participated in an
internal contest at Queens

00:25:12.430 --> 00:25:15.800
University, and then moved from
there to the ACM-ICPC,

00:25:15.800 --> 00:25:18.200
then to Code Jam, then
to TopCoder.

00:25:18.200 --> 00:25:19.640
IGOR NAVERNIOUK: Yeah my
story's very similar.

00:25:19.640 --> 00:25:22.770
ACM was the first programming
competition because I found

00:25:22.770 --> 00:25:24.140
out about competitions
in university.

00:25:24.140 --> 00:25:25.280
And that's the biggest
university

00:25:25.280 --> 00:25:27.040
competition out there.

00:25:27.040 --> 00:25:31.030
A few of the top people that
I know found out earlier.

00:25:31.030 --> 00:25:32.090
So there are high school
programming

00:25:32.090 --> 00:25:33.890
competitions, as well.

00:25:33.890 --> 00:25:36.220
I was nowhere near good enough
in high school in programming

00:25:36.220 --> 00:25:39.860
to be able to compete in
any kind of level.

00:25:39.860 --> 00:25:43.070
So yeah, I guess it's a similar
story to yours.

00:25:43.070 --> 00:25:44.710
BARTHOLOMEW FURROW: Now at what
point did you know you'd

00:25:44.710 --> 00:25:47.521
be addicted to coding
competitions?

00:25:47.521 --> 00:25:48.630
IGOR NAVERNIOUK: I'm not sure
I'm addicted to programming

00:25:48.630 --> 00:25:49.420
competitions.

00:25:49.420 --> 00:25:51.030
BARTHOLOMEW FURROW: You can
stop any time you want.

00:25:51.030 --> 00:25:51.460
IGOR NAVERNIOUK: Exactly.

00:25:51.460 --> 00:25:52.570
I can stop any time I want.

00:25:52.570 --> 00:25:55.320
That's right.

00:25:55.320 --> 00:25:55.920
BARTHOLOMEW FURROW:
I don't know.

00:25:55.920 --> 00:25:59.410
I would say I really
got hooked when--

00:25:59.410 --> 00:26:02.480
after I'd done a couple of
rounds, and I thought, oh wow.

00:26:02.480 --> 00:26:03.350
This is good stuff.

00:26:03.350 --> 00:26:04.780
And I really started
buckling down.

00:26:04.780 --> 00:26:09.190
Now, Igor who says that he's
not addicted has solved

00:26:09.190 --> 00:26:10.960
literally thousands of
problems online.

00:26:10.960 --> 00:26:14.980
But there's a website that posts
hundreds of problems.

00:26:14.980 --> 00:26:16.780
And Igor's well over
the 1,000 mark.

00:26:16.780 --> 00:26:18.670
So don't taken him too seriously
when he says he's

00:26:18.670 --> 00:26:21.000
not an addict.

00:26:21.000 --> 00:26:23.770
IGOR NAVERNIOUK: I'd say you
get addicted to things in a

00:26:23.770 --> 00:26:24.645
good way at least.

00:26:24.645 --> 00:26:25.906
It's a good thing to
get addicted to.

00:26:25.906 --> 00:26:27.610
BARTHOLOMEW FURROW:
A good thing, yes.

00:26:27.610 --> 00:26:30.250
IGOR NAVERNIOUK: Either when you
get good at it, or you can

00:26:30.250 --> 00:26:32.980
see yourself improving, that's
really addictive.

00:26:32.980 --> 00:26:34.550
Or when you can find
somebody to compete

00:26:34.550 --> 00:26:36.170
with, that was my example.

00:26:36.170 --> 00:26:38.960
So one of my friends at school
was trying to solve more

00:26:38.960 --> 00:26:39.510
problems than me.

00:26:39.510 --> 00:26:40.710
And we were head-to-head.

00:26:40.710 --> 00:26:44.370
And we spent the whole summer
trying to race each other on

00:26:44.370 --> 00:26:46.560
the scoreboard of
that website.

00:26:46.560 --> 00:26:49.130
And then that continued for a
couple of years and got way

00:26:49.130 --> 00:26:51.360
out of hand.

00:26:51.360 --> 00:26:54.940
So since then, we
both stopped.

00:26:54.940 --> 00:26:57.920
And then he was just a few
places ahead of me.

00:26:57.920 --> 00:26:59.970
And then six months later, I
went in and solved a few

00:26:59.970 --> 00:27:01.340
problems to get ahead of him.

00:27:01.340 --> 00:27:03.890
He still doesn't know.

00:27:03.890 --> 00:27:06.100
VAN RIPER: So what happened
to that friend of yours?

00:27:06.100 --> 00:27:11.830
IGOR NAVERNIOUK: He works at
a hedge fund in New York,

00:27:11.830 --> 00:27:12.920
solving interesting programming

00:27:12.920 --> 00:27:15.800
problems in that world.

00:27:15.800 --> 00:27:18.900
I haven't seen him compete in
competitions in a while.

00:27:18.900 --> 00:27:20.860
BARTHOLOMEW FURROW: But actually
a lot of our friends

00:27:20.860 --> 00:27:24.530
from university have ended up
at Google, particularly the

00:27:24.530 --> 00:27:26.230
University of British
Columbia crowd.

00:27:26.230 --> 00:27:27.530
Igor and I were on the
same team one year.

00:27:27.530 --> 00:27:29.840
Our teammate is at Google.

00:27:29.840 --> 00:27:33.030
Lots of the people from
subsequent year's teams have

00:27:33.030 --> 00:27:33.830
also been here.

00:27:33.830 --> 00:27:36.230
IGOR NAVERNIOUK: Yeah, Google's
been pretty good at

00:27:36.230 --> 00:27:40.130
hiring a lot of the top talent
from programming competitions.

00:27:40.130 --> 00:27:43.110
There's a country ranking on
TopCoder where you can see

00:27:43.110 --> 00:27:45.330
which country is doing better
than another country by

00:27:45.330 --> 00:27:48.210
averaging in a smart way the
competitors from that country.

00:27:48.210 --> 00:27:51.590
And somebody built kind of a
country ranking for Google, if

00:27:51.590 --> 00:27:52.780
Google were a country.

00:27:52.780 --> 00:27:56.280
And it's way above any other
country on TopCoder.

00:27:56.280 --> 00:27:57.260
BARTHOLOMEW FURROW: I
think we're pretty

00:27:57.260 --> 00:27:58.480
close to Russia, actually.

00:27:58.480 --> 00:27:59.650
I think Russia's in the lead.

00:27:59.650 --> 00:28:01.600
And where we're pretty close.

00:28:01.600 --> 00:28:02.370
No?

00:28:02.370 --> 00:28:04.840
IGOR NAVERNIOUK: Last time I
checked, there were like--

00:28:04.840 --> 00:28:05.750
it's not even comparable.

00:28:05.750 --> 00:28:06.090
BARTHOLOMEW FURROW: OK.

00:28:06.090 --> 00:28:07.020
Fair enough.

00:28:07.020 --> 00:28:08.540
The best competitive
programmer at

00:28:08.540 --> 00:28:09.480
Google is also Russian.

00:28:09.480 --> 00:28:14.350
So maybe that says something
about us as a group.

00:28:17.620 --> 00:28:18.870
IGOR NAVERNIOUK: So what's
the next one?

00:28:20.920 --> 00:28:22.760
How can programming competitions
learn from

00:28:22.760 --> 00:28:25.130
example of marathon running
where events provide both a

00:28:25.130 --> 00:28:28.410
highly competitive race for
elites, yet also a broader

00:28:28.410 --> 00:28:31.450
audience and environment
for personal challenge?

00:28:31.450 --> 00:28:34.470
BARTHOLOMEW FURROW: Well, I
think that the earlier rounds

00:28:34.470 --> 00:28:37.080
really are an environment
for personal challenge.

00:28:37.080 --> 00:28:40.720
Like our qualification round is
effectively time unlimited.

00:28:40.720 --> 00:28:42.110
It's a 25 hour round.

00:28:42.110 --> 00:28:44.050
So you can essentially go
in anytime you want.

00:28:44.050 --> 00:28:46.550
If it takes you three hours to
solve the easiest problem,

00:28:46.550 --> 00:28:48.160
then that's fine.

00:28:48.160 --> 00:28:51.340
And so that's an opportunity
for personal challenge.

00:28:51.340 --> 00:28:53.560
But also contests like TopCoder
have had their

00:28:53.560 --> 00:28:57.150
Division Two, which is for
newer competitors.

00:28:57.150 --> 00:28:58.860
Some slightly easier problems.

00:28:58.860 --> 00:29:03.100
And for students, anyway,
they can go to their--

00:29:03.100 --> 00:29:05.005
likely, most students
have a school with

00:29:05.005 --> 00:29:06.840
a programming team--

00:29:06.840 --> 00:29:08.120
ACM programming team--

00:29:08.120 --> 00:29:12.490
and there would probably be some
people with similar skill

00:29:12.490 --> 00:29:15.660
level to measure themselves
against.

00:29:15.660 --> 00:29:16.880
IGOR NAVERNIOUK: Yeah, I think
we definitely have both of

00:29:16.880 --> 00:29:19.200
these qualities.

00:29:19.200 --> 00:29:22.680
There is a really competitive
race at the top for the top

00:29:22.680 --> 00:29:26.130
spots in any worldwide
competition.

00:29:26.130 --> 00:29:28.700
And there's also a ton of people
who just do this in

00:29:28.700 --> 00:29:31.200
their free time without even
participating in competitions.

00:29:31.200 --> 00:29:33.030
There are these websites with
thousands of problems in them.

00:29:33.030 --> 00:29:34.650
You can go and solve as many
problems as you want

00:29:34.650 --> 00:29:36.172
in your free time.

00:29:36.172 --> 00:29:40.040
And there are some people who
are hard core competitors.

00:29:40.040 --> 00:29:42.060
They compete in any competition
that's out there.

00:29:42.060 --> 00:29:43.290
They try to get the top spot.

00:29:43.290 --> 00:29:45.430
And there are some people who
have solved thousands of

00:29:45.430 --> 00:29:49.290
problems and have never really
competed in real time

00:29:49.290 --> 00:29:50.460
competitions.

00:29:50.460 --> 00:29:52.250
But they are at the
top of every

00:29:52.250 --> 00:29:54.160
scoreboard on these websites.

00:29:54.160 --> 00:29:55.835
So there are two kinds of
people that I know of.

00:29:55.835 --> 00:29:57.550
And sometimes it's
the same person.

00:29:57.550 --> 00:30:00.850
But sometimes there are groups
of people who never compete in

00:30:00.850 --> 00:30:03.590
real time because it's a lot of
time pressure and stress.

00:30:03.590 --> 00:30:06.920
But you can take your time and
spend a few hours on the

00:30:06.920 --> 00:30:10.120
problem in the evening, and do
this for years and years.

00:30:10.120 --> 00:30:13.160
And people who enjoy
doing that do that.

00:30:13.160 --> 00:30:15.130
BARTHOLOMEW FURROW: And if you
go to the Code Jam website,

00:30:15.130 --> 00:30:18.110
that's code.google.com/codejam,
then

00:30:18.110 --> 00:30:21.605
what you'll find is that if you
look at the qualification

00:30:21.605 --> 00:30:24.730
round-- that's the first round
of the contest in 2012--

00:30:24.730 --> 00:30:27.330
there were around 20,000 people
who participated.

00:30:27.330 --> 00:30:28.995
Now there aren't 20,000 people
in the world who

00:30:28.995 --> 00:30:30.060
are great at this.

00:30:30.060 --> 00:30:32.330
And there are a lot of people
who, for them, that was their

00:30:32.330 --> 00:30:33.560
first programming contest.

00:30:33.560 --> 00:30:35.790
And some of the people for
whom it was their first

00:30:35.790 --> 00:30:37.170
programming contest struggled.

00:30:37.170 --> 00:30:38.690
And some of them found that
actually they were

00:30:38.690 --> 00:30:39.720
quite good at it.

00:30:39.720 --> 00:30:42.220
And given that we're speaking to
an audience of developers,

00:30:42.220 --> 00:30:45.100
I hope, then I think we'll find
that a lot of you are

00:30:45.100 --> 00:30:49.350
actually in the second
category, off

00:30:49.350 --> 00:30:50.600
to a very good start.

00:30:53.270 --> 00:30:57.850
The next question is that
E-O-N-O-E asks if we have any

00:30:57.850 --> 00:31:00.410
regular contests, like TopCoder
single round matches,

00:31:00.410 --> 00:31:03.400
that people can use to
prepare for Code Jam.

00:31:03.400 --> 00:31:06.690
IGOR NAVERNIOUK: So we don't run
that many rounds or that

00:31:06.690 --> 00:31:10.420
many contests during the year.

00:31:10.420 --> 00:31:13.870
There are some websites, like
TopCoder, like Codeforces and

00:31:13.870 --> 00:31:15.620
CodeChef and all these other--

00:31:15.620 --> 00:31:19.160
there are more of those every
day, I think, or at least

00:31:19.160 --> 00:31:21.370
every year.

00:31:21.370 --> 00:31:23.250
There's no shortage of
competition to practice on.

00:31:25.785 --> 00:31:31.260
You can also just spend free
time solving problems, trying

00:31:31.260 --> 00:31:33.280
to rerun past competitions,
and see how you would have

00:31:33.280 --> 00:31:37.690
done by imposing a time
limit on yourself.

00:31:37.690 --> 00:31:40.025
You can go to, for example,
a Code Jam contest.

00:31:40.025 --> 00:31:42.100
You know how long it was.

00:31:42.100 --> 00:31:43.600
You can set aside
that much time.

00:31:43.600 --> 00:31:46.020
You could try to solve the
problems by not looking at

00:31:46.020 --> 00:31:46.940
them beforehand.

00:31:46.940 --> 00:31:48.570
And you see where you would
have ended up on the

00:31:48.570 --> 00:31:49.200
scoreboard.

00:31:49.200 --> 00:31:52.310
Our scoring and penalty
algorithms are pretty simple

00:31:52.310 --> 00:31:56.120
so you can easily figure out
where you would have ended up.

00:31:56.120 --> 00:31:57.970
So that you can do that way.

00:31:57.970 --> 00:32:02.610
BARTHOLOMEW FURROW: But to be
honest, the sorts of skills

00:32:02.610 --> 00:32:05.160
that you build by solving Code
Jam problems and the sorts of

00:32:05.160 --> 00:32:07.230
skills that you need to solve
Code Jam problems are pretty

00:32:07.230 --> 00:32:09.580
similar to the sorts of skills
that you need to solve

00:32:09.580 --> 00:32:11.670
TopCoder problems, or the sorts
of skills you build by

00:32:11.670 --> 00:32:13.050
solving TopCoder problems.

00:32:13.050 --> 00:32:15.915
So go do TopCoder rounds.

00:32:15.915 --> 00:32:18.380
That would be a great way of
preparing for Code Jam.

00:32:18.380 --> 00:32:19.740
That would be fantastic.

00:32:19.740 --> 00:32:22.190
For those of you who are
watching us live, I'd like to

00:32:22.190 --> 00:32:24.120
remind you that we have
a Moderator page

00:32:24.120 --> 00:32:25.920
with a bunch of questions.

00:32:25.920 --> 00:32:29.800
And it's short enough right now
that if you were to post

00:32:29.800 --> 00:32:32.110
some more questions of your own,
then chances are pretty

00:32:32.110 --> 00:32:33.030
good that we'll get to them.

00:32:33.030 --> 00:32:35.810
So if you've got any questions
for Igor Naverniouk or for me,

00:32:35.810 --> 00:32:40.970
then please log on and go
ahead and ask them.

00:32:40.970 --> 00:32:43.770
The next question asks, what do
you think if the Code Jam

00:32:43.770 --> 00:32:46.730
format were changed to something
like the ACM-ICPC?

00:32:46.730 --> 00:32:49.030
For example, in the ACM-ICPC,
there are these regional

00:32:49.030 --> 00:32:51.550
contests where different
schools compete

00:32:51.550 --> 00:32:52.640
against each other.

00:32:52.640 --> 00:32:55.210
He's proposing super
regional Code Jams.

00:32:55.210 --> 00:32:57.790
And then the people from the
regionals would qualify for

00:32:57.790 --> 00:33:02.030
finals and go to the
onsite finals.

00:33:02.030 --> 00:33:04.650
We actually did that in 2008.

00:33:04.650 --> 00:33:08.370
The sort of big year that we
first reintroduced Code Jam.

00:33:08.370 --> 00:33:09.420
And that was a lot of fun.

00:33:09.420 --> 00:33:11.820
We haven't done it
again recently.

00:33:11.820 --> 00:33:13.190
But it's definitely not out
of the question that

00:33:13.190 --> 00:33:14.630
we could do it again.

00:33:14.630 --> 00:33:15.690
I don't know if it did.

00:33:15.690 --> 00:33:17.060
The end of the question was,
could that encourage more

00:33:17.060 --> 00:33:20.230
people to participate?

00:33:20.230 --> 00:33:22.750
I'm not sure if it encouraged
more people to participate.

00:33:22.750 --> 00:33:24.250
IGOR NAVERNIOUK: Not enough to
justify the amount of effort

00:33:24.250 --> 00:33:26.790
that went into running these
lots of regional competitions.

00:33:26.790 --> 00:33:27.700
That was hard to do.

00:33:27.700 --> 00:33:29.330
BARTHOLOMEW FURROW: That
was really hard to do.

00:33:29.330 --> 00:33:30.290
But it was fun.

00:33:30.290 --> 00:33:31.530
IGOR NAVERNIOUK: It
means having to

00:33:31.530 --> 00:33:32.600
create a lot more problems.

00:33:32.600 --> 00:33:35.380
And that was where most
of our time was spent.

00:33:35.380 --> 00:33:38.760
It's also not easy to organize
that many different sites.

00:33:38.760 --> 00:33:41.580
And trying to do it at the
same time is challenging

00:33:41.580 --> 00:33:42.940
across different time zones.

00:33:42.940 --> 00:33:46.000
So there's a price to
pay for doing this.

00:33:46.000 --> 00:33:48.625
We did get a bump
in registration.

00:33:48.625 --> 00:33:50.290
We definitely had way
more registrants

00:33:50.290 --> 00:33:53.390
than the year before.

00:33:53.390 --> 00:33:55.476
We can think about doing
this again maybe.

00:33:55.476 --> 00:33:56.210
BARTHOLOMEW FURROW: Yeah.

00:33:56.210 --> 00:33:57.170
We won't rule it out
for the future.

00:33:57.170 --> 00:33:58.040
Maybe sometime.

00:33:58.040 --> 00:33:59.570
VAN RIPER: Can I interject
a personal question?

00:33:59.570 --> 00:34:01.700
You talked about
more problems.

00:34:01.700 --> 00:34:05.710
I mean how do you guys come up
with the problems, when given

00:34:05.710 --> 00:34:07.760
it's been going for
10 years now.

00:34:07.760 --> 00:34:11.520
Coming up with new problems
must be a challenge.

00:34:11.520 --> 00:34:13.969
BARTHOLOMEW FURROW: That
is a challenge.

00:34:13.969 --> 00:34:16.560
We're blessed here at Google
with a very large number of

00:34:16.560 --> 00:34:18.590
programming contest competitors

00:34:18.590 --> 00:34:20.219
who are just really--

00:34:20.219 --> 00:34:21.949
they have a lot of experience,
and they have great

00:34:21.949 --> 00:34:22.989
imaginations.

00:34:22.989 --> 00:34:26.730
And so what we end up having
is essentially this big

00:34:26.730 --> 00:34:28.800
brainstorming thing, where we've
got an internal website,

00:34:28.800 --> 00:34:30.489
and people post their
ideas to it.

00:34:30.489 --> 00:34:33.900
And some of the ideas are fully
fledged programming

00:34:33.900 --> 00:34:37.030
problems, and others are the
sort of thing that you need to

00:34:37.030 --> 00:34:38.449
think about a little more.

00:34:38.449 --> 00:34:41.320
I pretty regularly have lunch
with David Arthur, who's

00:34:41.320 --> 00:34:44.270
another programming contestant
and problem setter.

00:34:44.270 --> 00:34:46.560
And we'll just talk through
a problem that's sort of a

00:34:46.560 --> 00:34:48.510
half-formed idea in
one of our heads.

00:34:48.510 --> 00:34:52.340
And eventually it'll end up on
Code Jam a lot of the time.

00:34:52.340 --> 00:34:54.790
So look for one of those on
the finals this year.

00:34:54.790 --> 00:34:57.060
I think it's problem
B. I'm not sure.

00:34:57.060 --> 00:35:01.420
But for me, when I'm coming up
with problems, I kind of, in

00:35:01.420 --> 00:35:04.590
my day-to-day life, I'll
come across something.

00:35:04.590 --> 00:35:08.480
There's a problem, I think, from
2011 called "Candy Store"

00:35:08.480 --> 00:35:13.220
that asks about a guy needing to
stock up his store in order

00:35:13.220 --> 00:35:14.680
to sell candy.

00:35:14.680 --> 00:35:17.290
And I actually came across
this when I was trying to

00:35:17.290 --> 00:35:20.440
figure out if I wanted
to be able to lift

00:35:20.440 --> 00:35:21.970
weights with two hands.

00:35:21.970 --> 00:35:25.100
I wanted to be able to select
any amount of weight up to 12

00:35:25.100 --> 00:35:28.710
pounds in both hands, then
what weights would

00:35:28.710 --> 00:35:29.770
I need to do it?

00:35:29.770 --> 00:35:32.600
So you could do two one-pound
weights, two two-pound

00:35:32.600 --> 00:35:34.080
weights, two four-pound
weights,

00:35:34.080 --> 00:35:35.750
two eight-pound weights.

00:35:35.750 --> 00:35:37.020
But that's actually not
the most efficient

00:35:37.020 --> 00:35:37.980
thing you could do.

00:35:37.980 --> 00:35:44.520
You can do instead one two-pound
weight and a

00:35:44.520 --> 00:35:47.370
three-pound weight, or
something like that.

00:35:47.370 --> 00:35:49.080
I can't do the gritty algorithm
in my head.

00:35:49.080 --> 00:35:52.130
But for me, I come across the
situations in day to day life,

00:35:52.130 --> 00:35:54.511
and then I write problems
about them.

00:35:54.511 --> 00:35:56.060
IGOR NAVERNIOUK: Yeah, I've
written quite a few problems.

00:35:56.060 --> 00:36:01.310
And I'd say they fall into
one of two categories.

00:36:01.310 --> 00:36:03.520
How do you describe where
inspiration comes from?

00:36:03.520 --> 00:36:06.030
Nobody knows.

00:36:06.030 --> 00:36:08.250
Some of those are kind of
similar to what Bartholomew

00:36:08.250 --> 00:36:09.170
was describing.

00:36:09.170 --> 00:36:11.940
You run into a situation in
regular life where you say,

00:36:11.940 --> 00:36:16.370
well, this could be done better,
or I wonder if I can

00:36:16.370 --> 00:36:19.580
turn this into sort of a more
well-defined problem.

00:36:19.580 --> 00:36:21.540
And you come up with a little
story around it.

00:36:21.540 --> 00:36:23.502
And hopefully there's some
interesting algorithm

00:36:23.502 --> 00:36:24.960
that can solve it.

00:36:24.960 --> 00:36:26.650
That actually happens
pretty frequently.

00:36:26.650 --> 00:36:29.660
Another way, especially back
when I was at university,

00:36:29.660 --> 00:36:34.360
reading a bunch of papers for
research, you run into some

00:36:34.360 --> 00:36:36.530
algorithm in the paper, and
you say, well, that's an

00:36:36.530 --> 00:36:37.930
interesting and obscure
algorithm.

00:36:37.930 --> 00:36:39.350
How do I make that useful?

00:36:39.350 --> 00:36:42.050
How do I actually turn it into a
story where you can use this

00:36:42.050 --> 00:36:44.500
algorithm to solve some
interesting problem?

00:36:44.500 --> 00:36:46.900
And that's an interesting
exercise to do

00:36:46.900 --> 00:36:49.910
in science, in general.

00:36:49.910 --> 00:36:50.860
But yeah.

00:36:50.860 --> 00:36:53.870
How does a writer come up with
an idea for a short story?

00:36:53.870 --> 00:36:55.250
Who knows?

00:36:55.250 --> 00:36:57.800
BARTHOLOMEW FURROW: Yeah,
from anywhere.

00:36:57.800 --> 00:36:59.860
So Igor described-- there are
essentially two approaches.

00:36:59.860 --> 00:37:01.840
One is to have a situation
and then come up with

00:37:01.840 --> 00:37:02.820
algorithm to solve it.

00:37:02.820 --> 00:37:04.010
And the other is you have
an algorithm and go

00:37:04.010 --> 00:37:05.530
looking for a situation.

00:37:05.530 --> 00:37:08.510
And different people approach
it in different ways.

00:37:08.510 --> 00:37:11.150
VAN RIPER: Great.

00:37:11.150 --> 00:37:11.480
BARTHOLOMEW FURROW: OK.

00:37:11.480 --> 00:37:13.910
So the next question here is--

00:37:13.910 --> 00:37:17.490
I think these have
changed in order.

00:37:17.490 --> 00:37:19.750
What do you think is of higher
importance, practicing or

00:37:19.750 --> 00:37:21.040
reading books on algorithms?

00:37:21.040 --> 00:37:22.440
How can you practice unless
you know it's the

00:37:22.440 --> 00:37:24.150
right way to do it?

00:37:24.150 --> 00:37:27.060
I think that's a really great
question, actually.

00:37:27.060 --> 00:37:30.030
For me, I like to have the
motivation to solve a problem

00:37:30.030 --> 00:37:32.380
before learning the method
to solve it.

00:37:32.380 --> 00:37:34.010
To read an algorithm in
a book is one thing.

00:37:34.010 --> 00:37:37.190
But then if I don't have a
problem that I want to solve,

00:37:37.190 --> 00:37:38.950
it's not quite as interesting
to me.

00:37:38.950 --> 00:37:42.230
Contests like Code Jam and
TopCoder, after the matches

00:37:42.230 --> 00:37:44.130
are over, will typically
write an editorial.

00:37:44.130 --> 00:37:46.230
So if you go to the Code Jam
website and you come across

00:37:46.230 --> 00:37:48.710
this problem and you have no
idea how to solve it, and you

00:37:48.710 --> 00:37:50.270
think about it for a while and
decide, you know what, I just

00:37:50.270 --> 00:37:53.170
don't know how to do this, you
can go to the Contest Analysis

00:37:53.170 --> 00:37:54.780
page, which is just a link
on the same page

00:37:54.780 --> 00:37:56.100
as the problem was.

00:37:56.100 --> 00:37:58.290
And you just read
how to do it.

00:37:58.290 --> 00:38:00.450
And we try to write out
a clear explanation.

00:38:00.450 --> 00:38:02.560
And if you can't understand our
super clear explanation

00:38:02.560 --> 00:38:05.140
because occasionally they're not
entirely clear, you could

00:38:05.140 --> 00:38:07.410
go to our Google+ community
and ask for help.

00:38:07.410 --> 00:38:09.830
Or go to our mailing list
and ask for help.

00:38:09.830 --> 00:38:13.750
And people are happy to help you
out as long as you mention

00:38:13.750 --> 00:38:16.060
the problem name, which
some people forget to.

00:38:16.060 --> 00:38:20.950
And so for me, I really love
the approach of find the

00:38:20.950 --> 00:38:23.260
problem first, and then find
out how to solve it.

00:38:23.260 --> 00:38:24.800
But different people learn
in different ways.

00:38:24.800 --> 00:38:27.410
And I can totally
imagine that--

00:38:27.410 --> 00:38:29.540
supposing you read about dynamic
programming in a book,

00:38:29.540 --> 00:38:30.850
then you could search
the web for

00:38:30.850 --> 00:38:32.760
dynamic programming problems.

00:38:32.760 --> 00:38:34.635
And I don't think we have
categorizations like

00:38:34.635 --> 00:38:35.920
that for Code Jam.

00:38:35.920 --> 00:38:37.340
There's no list of dynamic
programming

00:38:37.340 --> 00:38:37.910
problems for Code Jam.

00:38:37.910 --> 00:38:40.240
But maybe we should make that.

00:38:40.240 --> 00:38:40.870
IGOR NAVERNIOUK: Somebody
could make that

00:38:40.870 --> 00:38:42.040
if they want to.

00:38:42.040 --> 00:38:42.717
[LAUGHTER]

00:38:42.717 --> 00:38:44.060
BARTHOLOMEW FURROW: Somebody
else should make that.

00:38:44.060 --> 00:38:44.910
We're busy.

00:38:44.910 --> 00:38:46.800
IGOR NAVERNIOUK: I get lots
of email, actually, from

00:38:46.800 --> 00:38:49.390
contestants around the world,
asking me the same question

00:38:49.390 --> 00:38:49.880
over and over again.

00:38:49.880 --> 00:38:51.130
So how do I get better?

00:38:53.560 --> 00:38:55.260
And they actually ask
this as a question.

00:38:55.260 --> 00:38:59.420
Do I read more books, or do I
practice more problem solving?

00:38:59.420 --> 00:39:03.935
And my answer is usually do
what's more fun because if

00:39:03.935 --> 00:39:06.320
it's not fun, you're not
going to be doing it.

00:39:06.320 --> 00:39:09.470
If you like solving problems, if
you like this gratification

00:39:09.470 --> 00:39:10.870
of actually submitting
a solution

00:39:10.870 --> 00:39:12.450
and saying it's correct--

00:39:12.450 --> 00:39:14.740
seeing the correct response
come back--

00:39:14.740 --> 00:39:15.570
then do more of that.

00:39:15.570 --> 00:39:18.190
If you like learning more
algorithms from books, read

00:39:18.190 --> 00:39:19.690
more books.

00:39:19.690 --> 00:39:22.170
It's unlikely that you're going
to reach some limit on

00:39:22.170 --> 00:39:24.180
the book reading where you're
not going to get any better by

00:39:24.180 --> 00:39:24.900
reading more books.

00:39:24.900 --> 00:39:26.920
And it's also unlikely that
you're going to reach some

00:39:26.920 --> 00:39:29.440
limit of problem solving where
just solving more problems is

00:39:29.440 --> 00:39:30.520
not going to get you better.

00:39:30.520 --> 00:39:32.560
So do whatever is more fun.

00:39:32.560 --> 00:39:34.826
And better yet, find a friend
who also likes doing this, and

00:39:34.826 --> 00:39:36.180
do it together.

00:39:36.180 --> 00:39:37.350
BARTHOLOMEW FURROW: Yeah.

00:39:37.350 --> 00:39:40.300
Solid advice.

00:39:40.300 --> 00:39:42.470
And for people who are looking
for resources on learning

00:39:42.470 --> 00:39:44.800
these things, if you
go to our website,

00:39:44.800 --> 00:39:49.280
code.google.com/codejam, there's
a link that says

00:39:49.280 --> 00:39:50.590
Practice and Learn.

00:39:50.590 --> 00:39:53.620
And on that link, you click that
and you get a whole page

00:39:53.620 --> 00:39:54.330
full of resources.

00:39:54.330 --> 00:39:56.120
We've got a list of the easiest
Code Jam problems to

00:39:56.120 --> 00:39:57.560
get started with.

00:39:57.560 --> 00:40:00.820
And we've also got a list
of all the old Code Jam

00:40:00.820 --> 00:40:01.620
competitions.

00:40:01.620 --> 00:40:03.380
And we also list other websites
that you can go to,

00:40:03.380 --> 00:40:09.890
like TopCoder, like the Sphere
Online Judge, and other

00:40:09.890 --> 00:40:13.300
opportunities for you to solve
problems and learn.

00:40:13.300 --> 00:40:15.530
IGOR NAVERNIOUK: What about some
team challenges for one

00:40:15.530 --> 00:40:18.190
of the coming Code Jams where
universities could win Google

00:40:18.190 --> 00:40:20.682
Developer boot camps or
something like that?

00:40:20.682 --> 00:40:22.140
BARTHOLOMEW FURROW:
There's an idea.

00:40:22.140 --> 00:40:23.465
IGOR NAVERNIOUK: We thought
about that.

00:40:23.465 --> 00:40:24.850
BARTHOLOMEW FURROW: We've
thought about team contests

00:40:24.850 --> 00:40:26.162
before, haven't we?

00:40:26.162 --> 00:40:27.650
IGOR NAVERNIOUK: Yep.

00:40:27.650 --> 00:40:28.760
It may happen.

00:40:28.760 --> 00:40:29.440
Not this year.

00:40:29.440 --> 00:40:31.700
We're still deciding the
best way to do that.

00:40:31.700 --> 00:40:35.580
Team competitions have an
interesting dynamic to them.

00:40:35.580 --> 00:40:37.950
ACM-ICPC is the most
well known team

00:40:37.950 --> 00:40:39.750
competition out there.

00:40:39.750 --> 00:40:41.700
So Bartholomew and I were
in the same team

00:40:41.700 --> 00:40:43.130
competing in that.

00:40:43.130 --> 00:40:45.200
You get to run into some
interesting challenges there.

00:40:45.200 --> 00:40:47.990
For example, you only get one
computer for three people.

00:40:47.990 --> 00:40:48.845
So you have to optimize--

00:40:48.845 --> 00:40:50.215
BARTHOLOMEW FURROW: That's
in ACM, though.

00:40:50.215 --> 00:40:51.810
It probably wouldn't be
the case for Code Jam.

00:40:51.810 --> 00:40:52.650
IGOR NAVERNIOUK: Sure.

00:40:52.650 --> 00:40:54.540
But I'm just saying that they
come with different

00:40:54.540 --> 00:40:56.410
challenges, which are
also interesting.

00:40:56.410 --> 00:40:59.290
It would be really difficult to
mix team competitions with

00:40:59.290 --> 00:40:59.920
individual ones.

00:40:59.920 --> 00:41:03.120
So we would have to come up
with something separate.

00:41:03.120 --> 00:41:05.520
So I've been thinking about it
for a few years, but I haven't

00:41:05.520 --> 00:41:07.320
come up with any concrete
idea that we could do it

00:41:07.320 --> 00:41:08.090
differently.

00:41:08.090 --> 00:41:09.310
BARTHOLOMEW FURROW: In some
ways, team competitions are

00:41:09.310 --> 00:41:11.620
fundamentally unfair because
if you know somebody who's

00:41:11.620 --> 00:41:14.960
good, then you'll have a better
team than somebody who

00:41:14.960 --> 00:41:17.820
only knows bad people.

00:41:17.820 --> 00:41:18.530
Not be pejorative.

00:41:18.530 --> 00:41:21.230
But someone who only knows
people who aren't as

00:41:21.230 --> 00:41:24.565
skilled, and so--

00:41:24.565 --> 00:41:26.160
we're a little less enthusiastic
about it for that

00:41:26.160 --> 00:41:28.180
reason, as well, because you
kind of want everyone to be on

00:41:28.180 --> 00:41:29.470
equal footing to some extent.

00:41:29.470 --> 00:41:29.910
IGOR NAVERNIOUK: I don't know.

00:41:29.910 --> 00:41:32.120
I've seen the situation
in ACM where you have

00:41:32.120 --> 00:41:33.820
three excellent people.

00:41:33.820 --> 00:41:35.070
BARTHOLOMEW FURROW: Who
can't work together.

00:41:35.070 --> 00:41:36.600
IGOR NAVERNIOUK: I've been
coaching the team for a while.

00:41:36.600 --> 00:41:38.750
So I coached for a few years
at University of British

00:41:38.750 --> 00:41:40.060
Columbia in Toronto.

00:41:40.060 --> 00:41:43.800
And we run an internal
competition to figure out who

00:41:43.800 --> 00:41:45.350
are the best individual
programmers.

00:41:45.350 --> 00:41:47.540
And then it's my job to put
together some teams for the

00:41:47.540 --> 00:41:48.770
regional competition.

00:41:48.770 --> 00:41:50.770
And sometimes you run into a
situation where you take the

00:41:50.770 --> 00:41:54.330
three best individual coders,
and you put them together on

00:41:54.330 --> 00:41:56.730
the team and it's disaster.

00:41:56.730 --> 00:41:57.410
They can't work together.

00:41:57.410 --> 00:41:58.880
They start fighting
over things.

00:41:58.880 --> 00:42:01.440
So there's some interesting
questions there, too.

00:42:01.440 --> 00:42:03.370
So just because you know the
best people doesn't mean you

00:42:03.370 --> 00:42:05.660
can make the best team, like
in any other sport.

00:42:05.660 --> 00:42:06.730
BARTHOLOMEW FURROW: That's
a good point.

00:42:06.730 --> 00:42:10.980
Though to be fair, ACM requires
particular team

00:42:10.980 --> 00:42:14.680
challenges of sharing one
computer, whereas if we did

00:42:14.680 --> 00:42:16.460
Code Jam, maybe you don't really
need-- you just divvy

00:42:16.460 --> 00:42:19.190
up the problems and then
go do your own thing.

00:42:19.190 --> 00:42:22.150
So we lose some of the dynamic
there, which is also--

00:42:22.150 --> 00:42:26.320
but we're thinking about it.

00:42:26.320 --> 00:42:27.320
All right let's see.

00:42:27.320 --> 00:42:29.730
Is there anything
else on here?

00:42:29.730 --> 00:42:32.270
Boy, these keep jumping
around.

00:42:32.270 --> 00:42:37.670
So what about some team
challenges, he asked again.

00:42:37.670 --> 00:42:40.890
Does the winner of Code Jam get
a job offer at Google, as

00:42:40.890 --> 00:42:43.430
the registration page asks which
Google office you want

00:42:43.430 --> 00:42:44.760
to work for?

00:42:44.760 --> 00:42:45.820
No.

00:42:45.820 --> 00:42:48.905
We definitely consider excellent
performance on Code

00:42:48.905 --> 00:42:51.540
Jam, or any other programming
contest, when we're thinking

00:42:51.540 --> 00:42:54.330
about who to hire.

00:42:54.330 --> 00:42:56.850
But we also ask when you
register for Code Jam, are you

00:42:56.850 --> 00:42:58.080
interested in a job at Google?

00:42:58.080 --> 00:43:00.660
And if so, what office would
you want to work at?

00:43:00.660 --> 00:43:05.000
And then if the answer is yes,
then we might contact you

00:43:05.000 --> 00:43:07.500
whether you do well, or not.

00:43:07.500 --> 00:43:10.960
But it's definitely not a prize
for the contest to get a

00:43:10.960 --> 00:43:12.300
job at Google.

00:43:12.300 --> 00:43:14.630
IGOR NAVERNIOUK: Yeah, we have
done some things in the past

00:43:14.630 --> 00:43:15.810
to make this easier
for people.

00:43:15.810 --> 00:43:18.990
So one, you can sign up if
you're interested in a job.

00:43:18.990 --> 00:43:21.690
We'll send you an email,
especially if you do well.

00:43:21.690 --> 00:43:25.030
Another is typically to get a
job at Google, you go through

00:43:25.030 --> 00:43:26.030
two stages of interviews.

00:43:26.030 --> 00:43:28.700
There are phone screens and
there are onsite interviews.

00:43:28.700 --> 00:43:31.990
And for finalists, in the past
couple of years, we've let

00:43:31.990 --> 00:43:34.380
them essentially skip
phone screens.

00:43:34.380 --> 00:43:35.880
So we may consider
doing that again.

00:43:35.880 --> 00:43:39.495
BARTHOLOMEW FURROW: And it's on
a person by person basis.

00:43:39.495 --> 00:43:41.310
They didn't get that because
they were a finalist.

00:43:41.310 --> 00:43:44.170
They got that because
they're good.

00:43:44.170 --> 00:43:48.630
IGOR NAVERNIOUK: But generally,
I would say if you

00:43:48.630 --> 00:43:50.660
really want to get a job at
Google, and you want to use

00:43:50.660 --> 00:43:53.490
programming competitions to get
that, it's not that this

00:43:53.490 --> 00:43:55.430
is going to be a prize for
winning the competition.

00:43:55.430 --> 00:43:59.180
It's just that from getting
better at competitions, you're

00:43:59.180 --> 00:44:01.850
going to get so much better at
interviews that you'll get the

00:44:01.850 --> 00:44:02.580
job anyway.

00:44:02.580 --> 00:44:03.410
BARTHOLOMEW FURROW: And
not just interviews.

00:44:03.410 --> 00:44:05.215
But also at writing code.

00:44:05.215 --> 00:44:06.220
IGOR NAVERNIOUK: Well at
writing code, too.

00:44:06.220 --> 00:44:07.690
Yeah, so hopefully there's
some correlation between

00:44:07.690 --> 00:44:07.790
interviews--

00:44:07.790 --> 00:44:08.510
BARTHOLOMEW FURROW:
We hope so.

00:44:08.510 --> 00:44:09.998
IGOR NAVERNIOUK: --and
job performance.

00:44:13.200 --> 00:44:13.830
BARTHOLOMEW FURROW: All right.

00:44:13.830 --> 00:44:15.530
This is kind of an inside
baseball question.

00:44:15.530 --> 00:44:19.650
So apologies to people who
aren't Code Jam aficionados.

00:44:19.650 --> 00:44:22.020
Last year in the qualification
round, we had one easy problem

00:44:22.020 --> 00:44:25.080
for 15 points, and you needed
20 points to qualify.

00:44:25.080 --> 00:44:27.860
Do we have the same type of
thing going on this year?

00:44:27.860 --> 00:44:29.910
We're not going to tell you.

00:44:29.910 --> 00:44:32.750
So what this person is asking
about is in the qualification

00:44:32.750 --> 00:44:36.670
round, because it's not really
timed-- you've got 25 hours

00:44:36.670 --> 00:44:38.120
and you can compete whenever--

00:44:38.120 --> 00:44:40.050
you just need a certain number
of points to advance to the

00:44:40.050 --> 00:44:41.530
next round.

00:44:41.530 --> 00:44:45.770
And so in previous years, we
typically made it so that

00:44:45.770 --> 00:44:48.660
fully solving one problem
is enough.

00:44:48.660 --> 00:44:50.704
Last year, we made it so there
was one problem that if you

00:44:50.704 --> 00:44:53.630
fully solved it, you didn't
get onto the next round.

00:44:53.630 --> 00:44:54.460
We might do that this year.

00:44:54.460 --> 00:44:55.710
We might not.

00:44:57.830 --> 00:44:59.820
IGOR NAVERNIOUK: I think this
one's slightly similar to a

00:44:59.820 --> 00:45:00.570
previous question.

00:45:00.570 --> 00:45:02.500
What's the motivation behind
the problems in Code Jam?

00:45:02.500 --> 00:45:04.330
Does Code Jam ever pose
problems Google

00:45:04.330 --> 00:45:05.490
engineers work on?

00:45:05.490 --> 00:45:07.000
I know I've done it
a couple times.

00:45:07.000 --> 00:45:09.600
I run into some algorithmic
challenges in

00:45:09.600 --> 00:45:11.140
my day-to-day work.

00:45:11.140 --> 00:45:14.070
And I've sort of isolated the
interesting part of that

00:45:14.070 --> 00:45:17.350
problem, wrote some story around
it, and made it into a

00:45:17.350 --> 00:45:18.540
programing contest problem.

00:45:18.540 --> 00:45:20.030
BARTHOLOMEW FURROW: Though to
be clear, unfortunately we

00:45:20.030 --> 00:45:22.430
can't make you do our work for
us because we have to be able

00:45:22.430 --> 00:45:23.630
to tell if you solved
it right.

00:45:23.630 --> 00:45:26.290
So we have to solve it correctly
ourselves first.

00:45:26.290 --> 00:45:29.400
As much as I would like to have
30,000 people doing my

00:45:29.400 --> 00:45:34.250
job for me, it doesn't
work like that sadly.

00:45:34.250 --> 00:45:36.100
IGOR NAVERNIOUK: There are some
kinds of problems we get

00:45:36.100 --> 00:45:38.590
to solve at work that we can't
ask in a programming

00:45:38.590 --> 00:45:40.650
competition just because
of the kinds of tools

00:45:40.650 --> 00:45:43.340
we get to play with.

00:45:43.340 --> 00:45:45.420
It's hard to write a programming
problem where we

00:45:45.420 --> 00:45:48.106
say, well what if you
had 1,000 computers?

00:45:48.106 --> 00:45:49.390
How can you solve it then?

00:45:49.390 --> 00:45:50.750
BARTHOLOMEW FURROW: 1,000
computers and the MapReduce

00:45:50.750 --> 00:45:51.870
architecture.

00:45:51.870 --> 00:45:52.370
IGOR NAVERNIOUK: Yeah.

00:45:52.370 --> 00:45:53.410
So we get to do that at work.

00:45:53.410 --> 00:45:54.940
We can't really turn that
into a programming

00:45:54.940 --> 00:45:56.010
contest problem yet.

00:45:56.010 --> 00:45:56.850
Although we can think
about that.

00:45:56.850 --> 00:45:59.220
BARTHOLOMEW FURROW: We
can think about that.

00:45:59.220 --> 00:46:01.490
But I guess that's--

00:46:01.490 --> 00:46:03.390
to throw in a brief plug for
working at Google-- that's one

00:46:03.390 --> 00:46:04.950
of the ways in which working
at Google is different from

00:46:04.950 --> 00:46:08.140
programming contests, is that
you get cooler toys to play

00:46:08.140 --> 00:46:08.635
with in a way.

00:46:08.635 --> 00:46:11.510
You can throw a lot of computers
at a problem.

00:46:11.510 --> 00:46:13.750
And there are a lot of really
interesting algorithmic

00:46:13.750 --> 00:46:16.970
questions that come up when
you've got 1,000 computers

00:46:16.970 --> 00:46:18.220
instead of one.

00:46:21.220 --> 00:46:21.500
All right.

00:46:21.500 --> 00:46:25.280
Our next question here comes
from JPJ in Atlanta, Georgia.

00:46:25.280 --> 00:46:27.550
What is your favorite language
to use in competitions?

00:46:27.550 --> 00:46:28.970
Which language would you
recommend people to

00:46:28.970 --> 00:46:30.280
use for Code Jam?

00:46:30.280 --> 00:46:31.240
Igor?

00:46:31.240 --> 00:46:32.440
IGOR NAVERNIOUK: My favorite
programming language to use in

00:46:32.440 --> 00:46:35.750
competitions is C++ because
it's I know it best.

00:46:35.750 --> 00:46:37.830
I know it better than most
other languages.

00:46:37.830 --> 00:46:39.700
And it's short to write.

00:46:39.700 --> 00:46:41.000
And it has all the
tools that I need

00:46:41.000 --> 00:46:42.550
for programming contests.

00:46:42.550 --> 00:46:43.360
That's my personal view.

00:46:43.360 --> 00:46:45.050
There are lots of people who
use all sorts of other

00:46:45.050 --> 00:46:46.380
programming languages.

00:46:46.380 --> 00:46:48.680
Although it depends
on the problem.

00:46:48.680 --> 00:46:51.990
There are some problems where
you need the integer

00:46:51.990 --> 00:46:53.900
arithmetic, which is kind
of painful in C++.

00:46:53.900 --> 00:46:55.680
So you may want to use Python.

00:46:55.680 --> 00:46:57.970
There are some problems where
you may want to create a bunch

00:46:57.970 --> 00:47:01.370
of threads because that's
going to simplify some

00:47:01.370 --> 00:47:02.110
computation.

00:47:02.110 --> 00:47:03.110
Maybe Java's the way to go.

00:47:03.110 --> 00:47:03.924
Or Go or something.

00:47:03.924 --> 00:47:05.660
BARTHOLOMEW FURROW:
Or Go, yeah.

00:47:05.660 --> 00:47:07.200
IGOR NAVERNIOUK: Choose the
right tool for the job.

00:47:07.200 --> 00:47:11.260
And learn one, at least,
really well.

00:47:11.260 --> 00:47:14.090
And probably a few.

00:47:14.090 --> 00:47:14.870
That's better.

00:47:14.870 --> 00:47:16.420
BARTHOLOMEW FURROW: When I
started competing, I competed

00:47:16.420 --> 00:47:18.310
in Java because that's the
only language I knew.

00:47:18.310 --> 00:47:20.760
But then I learned C++ and I
started using that because it

00:47:20.760 --> 00:47:22.840
was a little more succinct.

00:47:22.840 --> 00:47:26.200
And then after that--

00:47:26.200 --> 00:47:28.990
actually to work on Code Jam,
because the Code Jam platform

00:47:28.990 --> 00:47:31.590
is written in Python,
I learned Python.

00:47:31.590 --> 00:47:33.523
And there are certain problems
I'd rather solve in Python

00:47:33.523 --> 00:47:34.300
than in C++.

00:47:34.300 --> 00:47:36.710
So when I compete, I use
either Python or

00:47:36.710 --> 00:47:37.960
C++ to solve problems.

00:47:41.310 --> 00:47:41.980
Let's see.

00:47:41.980 --> 00:47:45.310
Here at my university, people
don't get very interested in

00:47:45.310 --> 00:47:46.890
competitive programming because
they usually get

00:47:46.890 --> 00:47:50.490
frustrated when they fail to
solve problems, which is very

00:47:50.490 --> 00:47:51.600
common for everyone
at the start.

00:47:51.600 --> 00:47:53.120
How can I change that?

00:47:53.120 --> 00:47:58.280
Well, [INAUDIBLE], I don't know
if you're a coach or a

00:47:58.280 --> 00:47:59.720
student, or what.

00:47:59.720 --> 00:48:02.620
But typically, the best way to
get people not frustrated by

00:48:02.620 --> 00:48:05.050
problems that they can't solve
is to give them easy problems.

00:48:05.050 --> 00:48:06.230
That's how you get
people into it.

00:48:06.230 --> 00:48:08.190
You give them problems
that they can solve.

00:48:08.190 --> 00:48:12.490
And so if you're running
contests, then come up with

00:48:12.490 --> 00:48:14.250
simple problems to solve them.

00:48:14.250 --> 00:48:16.260
If you look at our qualification
rounds for Code

00:48:16.260 --> 00:48:19.320
Jam, that's the round when
anybody in the world can get

00:48:19.320 --> 00:48:21.560
into this round and start trying
to solve problems.

00:48:21.560 --> 00:48:23.170
We want it so that anyone
who tries to

00:48:23.170 --> 00:48:24.840
participate can solve something.

00:48:24.840 --> 00:48:26.380
And so our first problem
will typically be

00:48:26.380 --> 00:48:27.770
something that's fairly--

00:48:27.770 --> 00:48:29.840
not too algorithmically
complex and

00:48:29.840 --> 00:48:31.110
not too hard to implement.

00:48:31.110 --> 00:48:32.570
So those are the two dimensions
that you have to be

00:48:32.570 --> 00:48:35.270
careful about, algorithmic
complexity, and difficulty to

00:48:35.270 --> 00:48:37.050
figure out the solution,
and difficulty to

00:48:37.050 --> 00:48:38.300
implement the solution.

00:48:38.300 --> 00:48:42.145
So you might consider coming
up with problems

00:48:42.145 --> 00:48:43.090
that are easy in both.

00:48:43.090 --> 00:48:46.450
Or maybe you are just so much
better at one than the other

00:48:46.450 --> 00:48:48.480
that it's harder to see.

00:48:48.480 --> 00:48:51.630
But run your problems by friends
who are actually into

00:48:51.630 --> 00:48:55.680
competitive programming, and see
just how easy you can make

00:48:55.680 --> 00:48:57.910
the first couple of questions
on your contest.

00:48:57.910 --> 00:49:00.370
And hook them in that way.

00:49:00.370 --> 00:49:02.450
IGOR NAVERNIOUK: There are lots
of signals you can use to

00:49:02.450 --> 00:49:03.890
figure out how hard a problem
is before you

00:49:03.890 --> 00:49:05.620
start solving it.

00:49:05.620 --> 00:49:09.720
For example, in Code Jam, we
give point values to problems.

00:49:09.720 --> 00:49:11.960
So easier problems usually
get fewer points.

00:49:11.960 --> 00:49:14.180
Harder ones get more points, to
the best of our knowledge.

00:49:14.180 --> 00:49:15.720
Sometimes we mess that up.

00:49:15.720 --> 00:49:18.490
We also have several
parts to a problem.

00:49:18.490 --> 00:49:19.900
Usually there's one
problem statement.

00:49:19.900 --> 00:49:21.940
But there are several different
input files with

00:49:21.940 --> 00:49:23.650
different limits on them.

00:49:23.650 --> 00:49:27.000
So you can solve the small
ones, which is easier.

00:49:27.000 --> 00:49:28.370
Maybe you have lots
of different

00:49:28.370 --> 00:49:29.390
algorithms you can use there.

00:49:29.390 --> 00:49:30.730
And there's a hard one
that requires a

00:49:30.730 --> 00:49:31.690
more complicated algorithm.

00:49:31.690 --> 00:49:35.290
So start with the easy ones,
and find that line.

00:49:35.290 --> 00:49:39.090
Solve easy problems, and get to
harder problems until you

00:49:39.090 --> 00:49:39.990
cant solve them anymore.

00:49:39.990 --> 00:49:43.530
And then figure out how
to solve those.

00:49:43.530 --> 00:49:44.500
TopCoder does it differently.

00:49:44.500 --> 00:49:46.060
TopCoder has two divisions.

00:49:46.060 --> 00:49:47.380
You have Division One
and Division Two.

00:49:47.380 --> 00:49:48.380
You start in Division Two.

00:49:48.380 --> 00:49:50.900
And when you get good enough to
start winning in Division

00:49:50.900 --> 00:49:53.010
Two, you get moved up
to Division One.

00:49:53.010 --> 00:49:56.240
So different competitions
do it differently.

00:49:56.240 --> 00:49:59.450
If you're trying to figure it
out during a competition if

00:49:59.450 --> 00:50:02.330
you're in a live round, see what
other people have solved.

00:50:02.330 --> 00:50:04.210
Or on some website where you're
getting these problems,

00:50:04.210 --> 00:50:06.030
see how many other people have
solved the problems.

00:50:06.030 --> 00:50:08.400
And start with the ones that
have lots of solutions.

00:50:08.400 --> 00:50:09.730
Don't just randomly
pick a problem.

00:50:09.730 --> 00:50:10.490
That's very frustrating.

00:50:10.490 --> 00:50:11.440
BARTHOLOMEW FURROW:
Very frustrating.

00:50:11.440 --> 00:50:13.250
I think we're about to
run out of time here.

00:50:13.250 --> 00:50:13.620
VAN RIPER: Yeah.

00:50:13.620 --> 00:50:18.000
That might actually be a good
segue for me to just mention I

00:50:18.000 --> 00:50:20.730
want to encourage everyone to
consider participating in

00:50:20.730 --> 00:50:22.900
Google Code Jam 2013.

00:50:22.900 --> 00:50:26.590
First round starts April 12.

00:50:26.590 --> 00:50:29.040
I also want to say that,
independent of Code Jam, I

00:50:29.040 --> 00:50:32.260
think especially for our
chapters, this is the Google

00:50:32.260 --> 00:50:33.190
Developer Group session here.

00:50:33.190 --> 00:50:35.010
Especially for you organizers
out there with smaller

00:50:35.010 --> 00:50:38.220
chapters, I think taking
programming problems and

00:50:38.220 --> 00:50:40.300
letting everyone in the group
go off and work at them, and

00:50:40.300 --> 00:50:41.860
then come back and have someone
that had a good

00:50:41.860 --> 00:50:44.530
solution share it and discuss
it would be a great way for

00:50:44.530 --> 00:50:49.190
some of the smaller groups to
do some programming activity

00:50:49.190 --> 00:50:49.700
as a group.

00:50:49.700 --> 00:50:51.730
And so I want to encourage you,
whether you get involved

00:50:51.730 --> 00:50:54.270
in Code Jam or not, which I do
encourage you to do, think

00:50:54.270 --> 00:50:56.570
about incorporating this in
your activities as a local

00:50:56.570 --> 00:50:57.130
developer group.

00:50:57.130 --> 00:51:00.070
Because the reason I got into
this is I liked hanging out

00:51:00.070 --> 00:51:02.370
with other programmers
and solving problems.

00:51:02.370 --> 00:51:04.640
So that's why I loved having
you guys on today.

00:51:04.640 --> 00:51:06.420
So I really appreciate
your time.

00:51:06.420 --> 00:51:09.180
And I hope some of our audience
are inspired to go

00:51:09.180 --> 00:51:12.420
forward and join
Code Jam 2013.

00:51:12.420 --> 00:51:13.670
BARTHOLOMEW FURROW: Thanks
very much, Van.

00:51:24.120 --> 00:52:17.220
[MUSIC PLAYING]

