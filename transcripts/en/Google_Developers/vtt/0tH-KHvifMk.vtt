WEBVTT
Kind: captions
Language: en

00:00:00.975 --> 00:00:01.600
MATT GAUNT: Hi.

00:00:01.600 --> 00:00:04.106
I'm Matt Gaunt, a developer
advocate here at Google.

00:00:04.106 --> 00:00:06.480
And in this video, we'll catch
a glimpse of an undulating

00:00:06.480 --> 00:00:09.140
monkey, have some
crazy robot talk,

00:00:09.140 --> 00:00:11.950
and I even get to take a
trip to Hawaii, all thanks

00:00:11.950 --> 00:00:14.630
to the latest web
view in Android.

00:00:14.630 --> 00:00:16.460
When we released
KitKat, the WebView

00:00:16.460 --> 00:00:20.290
changed from being based on
WebKit to being Chromium based.

00:00:20.290 --> 00:00:23.075
Initially, this was
version M30 of Chrome.

00:00:23.075 --> 00:00:24.450
And the big win
with this release

00:00:24.450 --> 00:00:26.575
was support for DevTools.

00:00:26.575 --> 00:00:31.420
In KitKat MR2, we updated
the WebView from M30 to M33,

00:00:31.420 --> 00:00:34.120
meaning it came with all the
usual security and bug fixes

00:00:34.120 --> 00:00:37.220
that you'd get in a
new version of Chrome.

00:00:37.220 --> 00:00:39.600
The WebView team also worked
on improving the canvas

00:00:39.600 --> 00:00:43.730
performance and added support
for screencasting and DevTools.

00:00:43.730 --> 00:00:45.490
Now with the developer
preview of L,

00:00:45.490 --> 00:00:48.360
we're updating
the WebView to M36

00:00:48.360 --> 00:00:52.230
and enabling some additional
web platform features.

00:00:52.230 --> 00:00:54.200
If you haven't already
tried using DevTools

00:00:54.200 --> 00:00:57.660
to debug you WebViews, you need
to go and add this line of code

00:00:57.660 --> 00:01:02.230
into your app right now, calling
setWebContentsDebuggingEnabled

00:01:02.230 --> 00:01:05.700
to true, you'll actually
enable DevTools debugging,

00:01:05.700 --> 00:01:08.720
and I admit that is
quite a mouthful.

00:01:08.720 --> 00:01:10.720
You can enable this
just for debug builds

00:01:10.720 --> 00:01:11.940
or for release builds.

00:01:11.940 --> 00:01:13.200
It's entirely up to you.

00:01:13.200 --> 00:01:15.200
But once you've enabled
it, plug your phone

00:01:15.200 --> 00:01:17.510
into your computer
with a USB cable,

00:01:17.510 --> 00:01:21.150
open up Chrome on your computer,
and go to Chrome inspect.

00:01:21.150 --> 00:01:24.060
Here, you'll see entries
for every single web view

00:01:24.060 --> 00:01:26.310
inside of your app,
and clicking on inspect

00:01:26.310 --> 00:01:28.810
will open up DevTools.

00:01:28.810 --> 00:01:30.430
Now, it's worth
mentioning that you

00:01:30.430 --> 00:01:34.080
should have a desktop version
of Chrome equal to or newer

00:01:34.080 --> 00:01:35.630
than the WebView version.

00:01:35.630 --> 00:01:37.920
So for the developer
preview of L,

00:01:37.920 --> 00:01:42.030
you're going to need to use
Chrome Beta or Chrome Canary.

00:01:42.030 --> 00:01:44.510
With DevTools open,
you'll have access to DOM

00:01:44.510 --> 00:01:46.830
and the CSS inside
of your WebViews.

00:01:46.830 --> 00:01:48.450
Here, you can make
changes and you'll

00:01:48.450 --> 00:01:52.460
see them immediately take
effect inside of your app.

00:01:52.460 --> 00:01:55.360
The JavaScript console is
useful for viewing console.log

00:01:55.360 --> 00:01:57.780
messages, as well as
manually executing

00:01:57.780 --> 00:02:00.190
JavaScript inside your WebViews.

00:02:00.190 --> 00:02:03.010
Now, one crazy useful
trick I realized

00:02:03.010 --> 00:02:05.890
is if you've got a JavaScript
interface that you're

00:02:05.890 --> 00:02:08.650
adding into the WebView just
so that you can communicate

00:02:08.650 --> 00:02:11.370
from JavaScript to
native, you can actually

00:02:11.370 --> 00:02:13.360
call those native
methods directly

00:02:13.360 --> 00:02:16.810
from the DevTools console, which
makes debugging this bridge

00:02:16.810 --> 00:02:19.900
logic just a tiny bit easier.

00:02:19.900 --> 00:02:22.810
The Network tab enables you to
view whatever network requests

00:02:22.810 --> 00:02:25.210
are happening
inside of your page.

00:02:25.210 --> 00:02:26.750
Now, this is useful
for anyone who's

00:02:26.750 --> 00:02:30.380
loading a page on a remote
server, so a normal URL.

00:02:30.380 --> 00:02:34.120
But it's also useful for
anyone loading a static web app

00:02:34.120 --> 00:02:37.690
from the APK, because if
they're making XHR calls,

00:02:37.690 --> 00:02:40.420
you can actually view the
requests and the responses,

00:02:40.420 --> 00:02:42.820
as they'll all show
up in the Network tab.

00:02:42.820 --> 00:02:46.030
And it's just a little bit
easier than logging everything.

00:02:46.030 --> 00:02:47.640
Then there's a timeline.

00:02:47.640 --> 00:02:50.390
If you ever notice any jank
inside of your web app,

00:02:50.390 --> 00:02:53.230
this is the place you should
go to get an insight into what

00:02:53.230 --> 00:02:55.850
Chrome is spending its
time doing for each frame.

00:02:55.850 --> 00:02:57.970
Generally, you want to
look out for long running

00:02:57.970 --> 00:03:01.050
tasks or tasks that are
happening repeatedly

00:03:01.050 --> 00:03:04.724
and see if there's anything you
can do to alleviate the issue.

00:03:04.724 --> 00:03:06.640
The last thing I wanted
to mention on DevTools

00:03:06.640 --> 00:03:08.600
is screencasting.

00:03:08.600 --> 00:03:11.820
Screencasting was enabled
in KitKat MR2 and above,

00:03:11.820 --> 00:03:14.030
and it allows you to
interact with your web app

00:03:14.030 --> 00:03:15.954
directly from DevTools.

00:03:15.954 --> 00:03:18.120
It means you don't need to
switch from your computer

00:03:18.120 --> 00:03:18.770
to your device.

00:03:18.770 --> 00:03:22.190
You can just do everything
from your computer.

00:03:22.190 --> 00:03:24.155
Now, a nice side
effect of this is

00:03:24.155 --> 00:03:26.940
let's say you have a WebView
that's currently off screen.

00:03:26.940 --> 00:03:30.360
And we can animate
it in later on.

00:03:30.360 --> 00:03:32.410
You can actually use the
screencasting feature

00:03:32.410 --> 00:03:35.400
to see what the WebView is
rendering, even though it's not

00:03:35.400 --> 00:03:38.056
visible screen.

00:03:38.056 --> 00:03:39.430
I mentioned that
the WebView team

00:03:39.430 --> 00:03:42.470
have been working to
improve canvas performance.

00:03:42.470 --> 00:03:46.030
Here, we have some stats from
the Vellamo Benchmark Suite.

00:03:46.030 --> 00:03:49.750
And you can see improvements
of around 200 to 350%

00:03:49.750 --> 00:03:52.217
for these tasks.

00:03:52.217 --> 00:03:54.050
Now let's take a look
at some of the new web

00:03:54.050 --> 00:03:56.091
features we've been able
to [INAUDIBLE], starting

00:03:56.091 --> 00:03:59.910
with the undulating monkey
I promised you at the start.

00:03:59.910 --> 00:04:03.294
In the developer preview of L,
we've added support for WebGL.

00:04:03.294 --> 00:04:04.960
Here, you can see a
demo from Paul Lewis

00:04:04.960 --> 00:04:08.040
and quite frankly,
I love this monkey.

00:04:08.040 --> 00:04:10.330
Next up is the web audio.

00:04:10.330 --> 00:04:14.200
Web audio API is an important
part for any web based game.

00:04:14.200 --> 00:04:17.220
But it also enables you to
manipulate sounds, create

00:04:17.220 --> 00:04:19.940
synths, or play with the
microphone input, which

00:04:19.940 --> 00:04:24.280
is why I have a
crazy robot voice.

00:04:24.280 --> 00:04:27.510
The final new web feature
enabled is WebRTC.

00:04:27.510 --> 00:04:30.430
You can now use data
channels for sharing data

00:04:30.430 --> 00:04:33.990
or get user media to
access the camera.

00:04:33.990 --> 00:04:37.290
All of this means I can
now do things like this.

00:04:37.290 --> 00:04:38.130
Hey Sam.

00:04:38.130 --> 00:04:39.460
SAM: Hey Matt.

00:04:39.460 --> 00:04:40.220
How's it going?

00:04:40.220 --> 00:04:42.751
You're in Hawaii?

00:04:42.751 --> 00:04:43.750
MATT GAUNT: There we go.

00:04:43.750 --> 00:04:47.150
We've looked at DevTools, seen
a WebGL undulating monkey.

00:04:47.150 --> 00:04:50.370
I've got to talk like a
robot and take a green screen

00:04:50.370 --> 00:04:52.080
trip to Hawaii.

00:04:52.080 --> 00:04:54.870
For guides and additional info
on the Chrome based WebView,

00:04:54.870 --> 00:04:56.510
check out this link.

00:04:56.510 --> 00:04:58.180
Cheers.

