WEBVTT
Kind: captions
Language: en

00:00:00.660 --> 00:00:02.810
You can imagine that if a text that we wanted

00:00:02.810 --> 00:00:05.910
to analyze was really large, rather than a short book

00:00:05.910 --> 00:00:09.420
like Alice in Wonderland, maybe a document containing all of

00:00:09.420 --> 00:00:13.280
the books ever written. This script would take an extremely long

00:00:13.280 --> 00:00:16.630
time. It might even be impossible to run the scripts,

00:00:16.630 --> 00:00:18.880
due to the inability to fit all of that data onto

00:00:18.880 --> 00:00:21.515
one machine. In this case, it makes sense to employ

00:00:21.515 --> 00:00:25.660
MapReduce. How would I solve this problem using MapReduce? You can

00:00:25.660 --> 00:00:27.290
imagine that if the text we wanted to analyze

00:00:27.290 --> 00:00:30.090
was really large, rather than a short book like Alice

00:00:30.090 --> 00:00:33.435
in Wonderland. Maybe a document containing all of the books

00:00:33.435 --> 00:00:37.740
ever written, this script would take an extremely long time.

00:00:37.740 --> 00:00:40.060
It might even be impossible to run the scripts due

00:00:40.060 --> 00:00:42.220
to the inability to fit all of that data onto

00:00:42.220 --> 00:00:45.875
one machine. In this case, it makes sense to employ

00:00:45.875 --> 00:00:49.859
MapReduce. So how would I solve this problem using MapReduce?

