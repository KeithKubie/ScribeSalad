WEBVTT
Kind: captions
Language: en

00:00:00.420 --> 00:00:03.750
So to implement the shared element
transition we need to designate which

00:00:03.750 --> 00:00:05.300
views are shared.

00:00:05.300 --> 00:00:09.460
We do this by setting the same
transitionName attribute

00:00:09.460 --> 00:00:12.420
on the views in both activities.

00:00:12.420 --> 00:00:16.840
I tend to use a string resource
to make sure they match exactly.

00:00:16.840 --> 00:00:19.190
Next, when we launch the activity,

00:00:19.190 --> 00:00:23.967
we need to use a variant of the
ActivityOptions.makeSceneTransitionAnim-

00:00:23.967 --> 00:00:28.070
ation API, that let's us
specify the shared elements.

00:00:28.070 --> 00:00:31.617
We pass this API the View and the
TransitionName so that it can look for

00:00:31.617 --> 00:00:34.378
its counterpart in the launch activity.

00:00:34.378 --> 00:00:36.130
They're a variants of this API for

00:00:36.130 --> 00:00:38.990
specifying a single shared
element like this or

00:00:38.990 --> 00:00:43.660
ways to specify many shared elements, if
you want multiple things to transition.

00:00:43.660 --> 00:00:47.760
Note that, interestingly,
the TransitionName field is a string,

00:00:47.760 --> 00:00:50.930
rather than, perhaps,
identifying a view by ID.

00:00:50.930 --> 00:00:54.010
This is because shared element
transitions don't just work between

00:00:54.010 --> 00:00:56.040
screens within your own app.

00:00:56.040 --> 00:00:59.220
You can publish the transition
names you support and

00:00:59.220 --> 00:01:02.720
have shared element transitions
between different applications.

00:01:02.720 --> 00:01:03.970
Pretty rad.

00:01:03.970 --> 00:01:07.030
So that's enough to create
a shared element transition.

00:01:07.030 --> 00:01:10.010
Not too much effort for
quite an impressive effect.

00:01:10.010 --> 00:01:13.410
You may be wondering how the system
knew to animate the size and

00:01:13.410 --> 00:01:15.570
position in our example.

00:01:15.570 --> 00:01:17.450
Well, by default,

00:01:17.450 --> 00:01:21.680
shared element transitions use
a built-in transition called Move.

00:01:21.680 --> 00:01:23.200
This is what it looks like.

00:01:23.200 --> 00:01:28.040
The changeBounds transition does a lot
of the heavy lifting and moves and

00:01:28.040 --> 00:01:30.860
resizes elements between states.

00:01:30.860 --> 00:01:35.200
The remaining transitions help with
images to change the transformatio and

00:01:35.200 --> 00:01:37.070
clip applied to them.

00:01:37.070 --> 00:01:40.480
If you want to customize the animations
used, then we can create our own

00:01:40.480 --> 00:01:45.010
transitions, and set them in a similar
way to the activity content transitions.

00:01:45.010 --> 00:01:49.610
Here's how you'd set a custom
transition via XML and via code.

